[{"category": "", "categoryclass": "", "imagename": "99a9574449677b24a1a91917a2f8d866.jpg", "infoid": 1000282, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7279\u65af\u62c9(Tesla)\u8001\u677f\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u7279\u65af\u62c9\u80a1\u4ef7\u8fc7\u9ad8\u540e\uff0c\u62b9\u53bb\u4e86140\u4ebf\u7f8e\u5143(\u7ea6\u5408110\u4ebf\u82f1\u9551)\u7684\u5e02\u503c\u3002\n\u8fd9\u8fd8\u5bfc\u81f4\u9a6c\u65af\u514b\u81ea\u5df1\u6301\u6709\u7684\u7279\u65af\u62c9\u80a1\u4efd\u7f29\u6c3430\u4ebf\u7f8e\u5143\uff0c\u56e0\u4e3a\u6295\u8d44\u8005\u8fc5\u901f\u5bf9\u8be5\u516c\u53f8\u8fdb\u884c\u7ebe\u56f0\u3002\n\u7279\u65af\u62c9\u7684\u80a1\u4ef7\u592a\u9ad8\u4e86\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u662f\u51e0\u6761\u63a8\u6587\u4e2d\u7684\u4e00\u6761\uff0c\u5176\u4e2d\u5305\u62ec\u51fa\u552e\u4ed6\u7684\u8d22\u4ea7\u7684\u8a93\u8a00\u3002\n\u5728\u53e6\u4e00\u6761\u63a8\u6587\u4e2d\uff0c\u4ed6\u8bf4\u4ed6\u7684\u5973\u670b\u53cb\u5728\u751f\u4ed6\u7684\u6c14\uff0c\u800c\u53e6\u4e00\u6761\u63a8\u6587\u5219\u7b80\u5355\u5730\u5199\u9053\uff1a\u6124\u6012\u5427\uff0c\u5bf9\u610f\u8bc6\u4e4b\u5149\u7684\u6d88\u4ea1\u611f\u5230\u6124\u6012\u5427\u3002\n2018\u5e74\uff0c\u4e00\u6761\u5173\u4e8e\u7279\u65af\u62c9\u5728\u7ebd\u7ea6\u80a1\u5e02\u7684\u672a\u6765\u7684\u63a8\u6587\u5bfc\u81f4\u76d1\u7ba1\u673a\u6784\u5bf9\u8be5\u516c\u53f8\u7f5a\u6b3e2000\u4e07\u7f8e\u5143\uff0c\u9a6c\u65af\u514b\u540c\u610f\u5bf9\u8be5\u5e73\u53f0\u4e0a\u7684\u6240\u6709\u8fdb\u4e00\u6b65\u5e16\u5b50\u8fdb\u884c\u5f8b\u5e08\u9884\u5148\u7b5b\u9009\u3002\n\u5468\u4e94\uff0c\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u62a5\u9053\u8bf4\uff0c\u5b83\u66fe\u8be2\u95ee\u8fd9\u4f4d\u4ebf\u4e07\u5bcc\u7fc1\uff0c\u4ed6\u662f\u5426\u5728\u5f00\u73a9\u7b11\uff0c\u8fd9\u6761\u80a1\u4ef7\u63a8\u6587\u662f\u5426\u7ecf\u8fc7\u4e86\u5ba1\u67e5\uff0c\u5e76\u6536\u5230\u4e86\u56de\u590d&#34\uff1b\u5426&34\uff1b\u3002\n\u7279\u65af\u62c9\u7684\u80a1\u4ef7\u4eca\u5e74\u5927\u5e45\u4e0a\u6da8\uff0c\u4f7f\u8fd9\u5bb6\u7535\u52a8\u6c7d\u8f66\u5236\u9020\u5546\u7684\u5e02\u503c\u63a5\u8fd11000\u4ebf\u7f8e\u5143\uff0c\u8fd9\u4e00\u5927\u5173\u5c06\u5f15\u53d1\u5411\u8fd9\u4f4d\u4f01\u4e1a\u5bb6\u652f\u4ed8\u6570\u4ebf\u7f8e\u5143\u7684\u5956\u91d1\u3002\n\u6211\u4eec\u8ba4\u4e3a\u9a6c\u65af\u514b\u7684\u8fd9\u4e9b\u8bc4\u8bba\u662f\u5f00\u73a9\u7b11\u7684\uff0c\u5b83\u7684\u57c3\u9686\u5c31\u662f\u57c3\u9686\u3002\u97e6\u5fb7\u5e03\u4ec0\u8bc1\u5238\u5206\u6790\u5e08\u4e39\u5c3c\u5c14\u00b7\u827e\u592b\u65af(Daniel Ives)\u5bf9\u8def\u900f\u793e(Reuters)\u8868\u793a\uff0c\u5bf9\u4e8e\u6295\u8d44\u8005\u6765\u8bf4\uff0c\u4ed6\u5192\u9669\u8fdb\u5165\u8fd9\u4e00\u9886\u57df\u80af\u5b9a\u662f\u4e00\u4e2a\u4ee4\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u7684\u63a8\u6587\u4ecd\u7136\u662f\u4e00\u4e2a\u70ed\u70b9\u95ee\u9898\uff0c(\u534e\u5c14\u8857)\u663e\u7136\u611f\u5230\u6cae\u4e27\u3002\n2018\u5e74\uff0c\u9a6c\u65af\u514b\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u4ed6\u53ef\u80fd\u5df2\u7ecf\u83b7\u5f97\u8d44\u91d1\uff0c\u53ef\u80fd\u4f1a\u5c06\u7279\u65af\u62c9\u4ece\u80a1\u5e02\u4e2d\u79fb\u9664\uff0c\u5e76\u5c06\u5176\u79c1\u6709\u5316\uff0c\u8fd9\u518d\u6b21\u5bfc\u81f4\u80a1\u4ef7\u6ce2\u52a8\u3002\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(Securities And Exchange Commission)\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f71\u54cd\u5e02\u573a\u7684\u8bc4\u8bba\uff0c\u5bf9\u4ed6\u5904\u4ee5\u7f5a\u6b3e\uff0c\u5e76\u8feb\u4f7f\u7279\u65af\u62c9\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u518d\u6b21\u53d1\u751f\u3002\n\u4f46\u4e0a\u4e2a\u6708\uff0c\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u8868\u793a\uff0c\u7279\u65af\u62c9\u548c\u9a6c\u65af\u514b\u5fc5\u987b\u9762\u4e34\u80a1\u4e1c\u5c31\u79c1\u6709\u5316\u63a8\u6587\u63d0\u8d77\u7684\u8bc9\u8bbc\uff0c\u5176\u4e2d\u5305\u62ec\u9a6c\u65af\u514b\u6709\u610f\u6b3a\u9a97\u4ed6\u4eec\u7684\u6307\u63a7\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u4ed6\u5728\u63a8\u7279\u4e0a\u54113340\u4e07\u7c89\u4e1d\u53d1\u51fa\u4e86\u4e00\u4e9b\u5f3a\u70c8\u6279\u8bc4\uff0c\u6279\u8bc4\u7f8e\u56fd\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u800c\u9650\u5236\u5728\u5bb6\u7684\u505a\u6cd5\u30022019\u5e74\uff0c\u4ed6\u5728\u63a8\u7279\u4e0a\u53d1\u5e16\u79f0\u4e00\u540d\u82f1\u56fd\u6f5c\u6c34\u5458\u662f\u4e2a\u7231\u5c0f\u513f\u79d1\u7684\u5bb6\u4f19\uff0c\u4e8e\u662f\u4ed6\u51fa\u73b0\u5728\u6cd5\u5ead\u4e0a\u3002\n\u9a6c\u65af\u514b\u8868\u793a\uff0c\u51fa\u552e\u4ed6\u7684\u8d22\u4ea7\u7684\u627f\u8bfa\u5305\u62ec\u4ed6\u7684\u623f\u5b50\uff0c\u8fd9\u5ea7\u623f\u5b50\u66fe\u4e3a\u6f14\u5458\u517c\u5236\u7247\u4eba\u5409\u6069\u00b7\u6000\u5c14\u5fb7(Gene Wilder)\u6240\u6709\uff0c\u5e76\u4e8e2013\u5e74\u8d2d\u4e70\u3002\n\u4ed6\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u6211\u62e5\u6709\u5409\u6069\u00b7\u6000\u5c14\u5fb7(Gene Wilder)\u7684\u8001\u623f\u5b50\u3002\u5b83\u4e0d\u80fd\u88ab\u62c6\u6bc1\u6216\u5931\u53bb\u4efb\u4f55\u7075\u9b42\u3002", "note_en": "Tesla boss Elon Musk wiped $14bn (\u00a311bn) off the carmaker&#39;s value after tweeting its share price was too high.\n It also knocked $3bn off Mr Musk&#39;s own stake in Tesla as investors promptly bailed out of the company.\n &#34;Tesla stock price too high imo,&#34; he said, one of several tweets that included a vow to sell his possessions.\n In other tweets, he said his girlfriend was mad at him, while another simply read: &#34;Rage, rage against the dying of the light of consciousness.&#34;\n In 2018, a tweet about Tesla&#39;s future on the New York stock market led to regulators fining the company $20m and Mr Musk agreeing to have all further posts on the platform pre-screened by lawyers.\n   On Friday, the Wall Street Journal reported it had asked the billionaire if he was joking about the share price tweet and whether it had been vetted, receiving the reply &#34;No&#34;.\n Tesla&#39;s share price has surged this year, putting the electric carmaker&#39;s value at close to $100bn, a mark that would trigger a bonus payment of hundreds of millions of dollars to the entrepreneur.\n   &#34;We view these Musk comments as tongue in cheek and it&#39;s Elon being Elon. It&#39;s certainly a headache for investors for him to venture into this area as his tweeting remains a hot button issue and [Wall] Street clearly is frustrated,&#34; Wedbush Securities analyst Daniel Ives told Reuters news agency.\n In 2018, Mr Musk tweeted that he may have secured funding to possibly remove Tesla from the stock market and take it private, which again led to swings in the share price. The Securities and Exchange Commission judged it a market-moving comment, fined him and forced Tesla to put in place checks to ensure it did not happen again.\n But last month, a federal judge said Tesla and Musk must face a lawsuit by shareholders over the going-private tweet, including a claim that Mr Musk intended to defraud them.\n   Earlier this week he tweeted to his 33.4 million followers some strong criticism of US stay-at-home restrictions because of the coronavirus pandemic. In 2019 he found himself in court last year after tweeting that a British diver was a &#34;pedo guy&#34;.\n Mr Musk said the promise to sell his possessions included his house, formerly owned by actor and producer Gene Wilder, and bought in 2013.\n &#34;One stipulation on sale,&#34; he tweeted, &#34;I own Gene Wilder&#39;s old house. It cannot be torn down or lose any of its soul.&#34;", "posttime": "2020-05-02 18:04:11", "tags": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b,\u7279\u65af\u62c9,\u9a6c\u65af\u514b,musk", "title": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u7684\u63a8\u6587\u62b9\u53bb\u4e86\u7279\u65af\u62c9140\u4ebf\u7f8e\u5143\u7684\u4ef7\u503c", "title_en": "Elon Musk tweet wipes $14bn off Tesla's value", "transed": 0, "url": "https://www.bbc.co.uk/news/business-52504187", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "\u7279\u65af\u62c9", "\u9a6c\u65af\u514b", "musk"]}, {"category": "", "categoryclass": "", "imagename": "efcfd4d38b9caa03b20a374e4c3f9f77.png", "infoid": 1000281, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u4e0b\u662f\u6211\u4eec\u66f4\u6709\u6548\u5730\u4f7f\u7528SSH\u7684\u4e00\u4e9b\u6700\u597d\u7684\u63d0\u793a\u548c\u6280\u5de7\u3002\u672c\u5e16\u5b50\u5c06\u4ecb\u7ecd\u5982\u4f55\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u5347\u7ea7\u60a8\u7684OpenSSH\u5e76\u4f7f\u7528\u5b89\u5168\u5bc6\u94a5\u3002\u57282020\u5e742\u6708\uff0cOpenSSH\u589e\u52a0\u4e86\u5bf9FIDO U2F(\u901a\u7528\u7b2c\u4e8c\u56e0\u5b50)\u5b89\u5168\u5bc6\u94a5\u7684\u652f\u6301\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u65b0\u529f\u80fd\uff0c\u4f46\u6709\u4e00\u4e2a\u8b66\u544a\uff1a\u56e0\u4e3a\u6b64\u5347\u7ea7\u4e3a\u5b89\u5168\u5bc6\u94a5\u5f15\u5165\u4e86\u65b0\u7684\u5bc6\u94a5\u7c7b\u578b\uff0c\u6240\u4ee5\u53ea\u6709\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u5347\u7ea7\u5230OpenSSH 8.2+\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u624d\u80fd\u4f7f\u7528\u5b89\u5168\u5bc6\u94a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528ssh-V\u68c0\u67e5\u60a8\u7684\u5ba2\u6237\u7aef\u7248\u672c\uff0c\u4f7f\u7528NC[ServerName]22\u68c0\u67e5\u8fdc\u7a0bsshd\u7248\u672c\u3002\n\u6dfb\u52a0\u4e86\u4e24\u79cd\u65b0\u7684\u5bc6\u94a5\u7c7b\u578b-ecdsa-ska\u548ced25519-sk(\u4ee5\u53ca\u76f8\u5e94\u7684\u8bc1\u4e66\u7c7b\u578b)\u3002\u8981\u751f\u6210\u5bc6\u94a5\u6587\u4ef6\uff0c\u8bf7\u63d2\u5165\u5b89\u5168\u5bc6\u94a5\u5e76\u8fd0\u884c\uff1a\n\u8fd9\u5c06\u521b\u5efa\u7ed1\u5b9a\u5230\u60a8\u7684U2F\u8bbe\u5907\u7684\u516c\u94a5\u548c\u79c1\u94a5\u3002\u5f53\u5b89\u5168\u5bc6\u94a5\u88ab\u6fc0\u6d3b\u65f6\uff0cU2F\u8bbe\u5907\u4e0a\u7684\u79c1\u94a5\u88ab\u7528\u6765\u89e3\u5bc6\u76d8\u4e0a\u79c1\u94a5\u201c\u5bc6\u94a5\u53e5\u67c4\u201d\u3002\nOpenSSH\u8fd8\u652f\u6301\u4e00\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u751f\u6210SK\u7c7b\u578b\u7684\u5bc6\u94a5\uff1a\u9a7b\u7559\u5bc6\u94a5\u3002\u4f7f\u7528\u9a7b\u7559\u5bc6\u94a5\u65b9\u6cd5\uff0c\u5bc6\u94a5\u53e5\u67c4\u5b58\u50a8\u5728U2F\u8bbe\u5907\u4e0a\u3002\u8fd9\u6837\uff0c\u5f53\u60a8\u9700\u8981\u65f6\uff0c\u60a8\u5c06\u59cb\u7ec8\u5c06\u5176\u653e\u5728\u5b89\u5168\u5bc6\u94a5\u4e0a\u3002\u4f7f\u7528\u4ee5\u4e0b\u9009\u9879\u521b\u5efa\u9a7b\u7559\u5bc6\u94a5\uff1a\n\u7136\u540e\uff0c\u8981\u5c06\u5bc6\u94a5\u53e5\u67c4\u91cd\u65b0\u653e\u56de\u65b0\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u4e2d\uff0c\u8bf7\u63d2\u5165\u5b89\u5168\u5bc6\u94a5\u5e76\u8fd0\u884c\uff1a\n\u4f7f\u7528PIV+PKCS11\u548cYubikey\u3002\u5982\u679c\u60a8\u60f3\u8981\u8fde\u63a5\u5230\u8fd0\u884c\u65e7\u7248\u672csshd\u7684\u8ba1\u7b97\u673a\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u5b89\u5168\u5bc6\u94a5-\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u3002YUBICO\u6709\u4e00\u4e2a\u4f7f\u7528U2F+SSH\u548cPIV/PKCS11\u7684\u6307\u5357\u3002\u8fd9\u4e0eFIDO U2F\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u5b83\u5f88\u7ba1\u7528\uff0c\u4f46\u4f7f\u7528\u8d77\u6765\u5f88\u795e\u79d8\u3002\n\u4f7f\u7528\u5b9a\u5236\u7684Yubikey-agent ssh-agent\u3002Filippo Valsorda\u4e3aYubikey\u5199\u4e86\u4e00\u4e2aSSH\u4ee3\u7406\u3002\u5b83\u662f\u5168\u65b0\u7684\uff0c\u529f\u80fd\u5f88\u5c11\u3002\n\u4f7f\u7528Touch ID\u548cSEKEY\u3002Sekey\u662f\u4e00\u4e2a\u5f00\u6e90\u7684SSH\u4ee3\u7406\uff0c\u5b83\u5c06\u79c1\u94a5\u5b58\u50a8\u5728Mac\u7684\u5b89\u5168\u98de\u5730\u4e2d\uff0c\u5e76\u901a\u8fc7Touch ID\u63d0\u4f9b\u7b7e\u540d\u529f\u80fd\u3002\n\u4f7f\u7528\u5355\u70b9\u767b\u5f55SSH\u3002\u6211\u5199\u4e86\u4e00\u4e2a\u6559\u7a0b\u6765\u5e2e\u52a9\u4f60\u8bbe\u7f6e\u8fd9\u4e2a\u3002\u5355\u70b9\u767b\u5f55SSH\u7684\u4e00\u4e2a\u4f18\u52bf\u662f\uff0c\u60a8\u53ef\u4ee5\u5229\u7528\u8eab\u4efd\u63d0\u4f9b\u5546\u7684\u5b89\u5168\u7b56\u7565-\u5305\u62ec\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1(MFA)\u652f\u6301\u3002\nSSH\u4e2d\u7684\u4ee3\u7406\u8f6c\u53d1\u5141\u8bb8\u8fdc\u7a0b\u4e3b\u673a\u8bbf\u95ee\u672c\u5730\u8ba1\u7b97\u673a\u7684SSH\u4ee3\u7406\u3002\u5f53\u60a8\u5728\u6253\u5f00\u4ee3\u7406\u8f6c\u53d1\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528SSH(\u901a\u5e38\u4f7f\u7528ssh-A)\u65f6\uff0c\u8fde\u63a5\u5c06\u6709\u4e24\u4e2a\u901a\u9053\uff1a\u4ea4\u4e92\u5f0f\u4f1a\u8bdd\u548c\u7528\u4e8e\u4ee3\u7406\u8f6c\u53d1\u7684\u901a\u9053\u3002\u672c\u5730SSH\u4ee3\u7406\u521b\u5efa\u7684Unix\u57df\u5957\u63a5\u5b57\u901a\u8fc7\u6b64\u901a\u9053\u8fde\u63a5\u5230\u8fdc\u7a0b\u4e3b\u673a\u3002\u8fd9\u662f\u6709\u98ce\u9669\u7684\uff0c\u56e0\u4e3a\u5728\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u5177\u6709root\u8bbf\u95ee\u6743\u9650\u7684\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u60a8\u7684\u672c\u5730SSH\u4ee3\u7406\uff0c\u5e76\u53ef\u80fd\u5192\u5145\u60a8\u2026\u2026\u3002\n\u5373\u4f7f\u6709\u4e86\u8fd9\u6837\u7684\u9884\u9632\u63aa\u65bd\uff0c\u8c28\u614e\u4f7f\u7528\u4ee3\u7406\u8f6c\u53d1\u4ecd\u7136\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u4e0d\u8981\u5728\u6240\u6709\u4f1a\u8bdd\u4e2d\u90fd\u4f7f\u7528\u5b83-\u5f53\u60a8\u77e5\u9053\u7279\u5b9a\u7684SSH\u4f1a\u8bdd\u9700\u8981\u5b83\u65f6\u624d\u4f7f\u7528\u5b83\u3002\nSSH\u4f1a\u8bdd\u901a\u5e38\u4f1a\u7531\u4e8e\u7f51\u7edc\u4e2d\u65ad\u3001\u7a0b\u5e8f\u5931\u63a7\u6216\u9501\u5b9a\u952e\u76d8\u8f93\u5165\u7684\u7ec8\u7aef\u8f6c\u4e49\u5e8f\u5217\u4e4b\u4e00\u800c\u6302\u8d77\u3002\ud83e\udd26\u200d\u2642\ufe0f\u3002\nSSH\u5c06\u901a\u8fc7\u6bcf\u9694ServerAliveInterval\u79d2\u5411\u8fdc\u7a0b\u4e3b\u673a\u53d1\u9001\u56de\u5e94\u6765\u68c0\u67e5\u8fde\u63a5\u3002\u5982\u679c\u53d1\u9001\u7684\u56de\u663e\u8d85\u8fc7ServerAliveCountMax\u800c\u6ca1\u6709\u54cd\u5e94\uff0c\u5219ssh\u5c06\u8d85\u65f6\u5e76\u9000\u51fa\u3002\n\u4e2d\u65ad\u4f1a\u8bae\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSSH\u5305\u542b\u8f6c\u4e49\u5b57\u7b26~\u3002\u547d\u4ee4~\u3002\u5173\u95ed\u6253\u5f00\u7684\u8fde\u63a5\u5e76\u5c06\u60a8\u5e26\u56de\u7ec8\u7aef\u3002(\u60a8\u53ea\u80fd\u5728\u65b0\u884c\u8f93\u5165\u8f6c\u4e49\u5e8f\u5217\u3002)~\uff1f\u5217\u51fa\u4e86\u5728\u4f1a\u8bdd\u671f\u95f4\u53ef\u4ee5\u4f7f\u7528\u7684\u6240\u6709\u547d\u4ee4\u3002\u5728\u56fd\u9645\u952e\u76d8\u4e0a\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u6309\u4e24\u6b21~\u952e\u624d\u80fd\u53d1\u9001~\u5b57\u7b26\u3002\n\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u505c\u6ede\u7684\u4f1a\u8bdd\uff1f\u5728\u4e92\u8054\u7f51\u53d1\u660e\u65f6\uff0c\u8ba1\u7b97\u673a\u5e76\u6ca1\u6709\u592a\u591a\u7684\u79fb\u52a8\u3002\u5f53\u60a8\u4f7f\u7528\u7b14\u8bb0\u672c\u7535\u8111\u5728IPv4 WiFi\u7f51\u7edc\u4e4b\u95f4\u79fb\u52a8\u65f6\uff0c\u60a8\u7684IP\u5730\u5740\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u4e3aSSH\u4f9d\u8d56\u4e8eTCP\u8fde\u63a5\uff0c\u800cTCP\u8fde\u63a5\u4f9d\u8d56\u4e8e\u5177\u6709\u7a33\u5b9aIP\u5730\u5740\u7684\u7aef\u70b9\uff0c\u6240\u4ee5\u6bcf\u5f53\u60a8\u66f4\u6539\u7f51\u7edc\u65f6\uff0c\u60a8\u7684SSH\u8fde\u63a5\u90fd\u5c06\u6210\u4e3a\u5b64\u7acb\u7684\u5e76\u6709\u6548\u5730\u4e22\u5931\u3002\u5f53\u60a8\u7684IP\u5730\u5740\u66f4\u6539\u65f6\uff0c\u60a8\u7684\u7f51\u7edc\u5806\u6808\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u53d1\u73b0\u8fde\u63a5\u5177\u6709.\u3002\n\u5f53\u60a8\u5728\u7f51\u7edc\u4e4b\u95f4\u79fb\u52a8\u6216\u60f3\u8981\u6682\u65f6\u65ad\u5f00\u8fde\u63a5\u65f6\uff0c\u8fd9\u91cc\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u4fdd\u6301\u4f1a\u8bdd\u6b63\u5e38\u8fdb\u884c\uff1a\n\u5982\u679c\u60a8\u786e\u5b9e\u9700\u8981\u4e00\u4e2a\u5373\u4f7f\u5728\u7f51\u7edc\u4e4b\u95f4\u79fb\u52a8\u4e5f\u4e0d\u4f1a\u65ad\u5f00\u7684\u8fde\u63a5\uff0c\u8bf7\u4f7f\u7528MOSH-\u79fb\u52a8\u5916\u58f3\u3002MOSH\u662f\u4e00\u79cd\u5b89\u5168\u5916\u58f3\uff0c\u5b83\u4f7f\u7528SSH\u8fdb\u884c\u63e1\u624b\uff0c\u7136\u540e\u4e3a\u4f1a\u8bdd\u5207\u6362\u5230\u81ea\u5df1\u7684\u52a0\u5bc6\u901a\u9053\u3002\u8fd9\u4e2a\u72ec\u7acb\u7684\u901a\u9053\u975e\u5e38\u6709\u5f39\u6027\u3002\u7531\u4e8eUDP\u7684\u9b54\u529b\u548cMosh\u4f7f\u7528\u7684\u540c\u6b65\u534f\u8bae\uff0c\u5b83\u53ef\u4ee5\u5904\u7406\u65ad\u5f00\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3001\u7b14\u8bb0\u672c\u7535\u8111IP\u5730\u5740\u7684\u66f4\u6539\u3001\u4e3b\u8981\u7684\u7f51\u7edc\u5ef6\u8fdf\u7b49\u7b49\u3002\n\u8981\u4f7f\u7528MOSH\uff0c\u60a8\u9700\u8981\u5c06\u5176\u5b89\u88c5\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u4e3a\u8fdb\u5165\u8fdc\u7a0b\u4e3b\u673a\u7684UDP\u901a\u4fe1\u6253\u5f00\u7aef\u53e360000-61000\u3002\u7136\u540e\u53ea\u9700\u4f7f\u7528mosh user@server\u8fdb\u884c\u8fde\u63a5\u3002\nMOSH\u5728\u5c4f\u5e55\u548c\u51fb\u952e\u7ea7\u522b\u4e0a\u8fd0\u884c\uff0c\u8fd9\u4f7f\u5b83\u6bd4SSH\u6709\u5f88\u591a\u4f18\u70b9\uff0cSSH\u53ef\u4ee5\u4f20\u9001Stan\u7684\u4e8c\u8fdb\u5236\u6d41", "note_en": "Here are some of our best tips &amp; tricks for using SSH more effectively. This post will cover how to:\n    Upgrade your OpenSSH and use a security key. In February 2020 OpenSSH added support for FIDO U2F (Universal Second Factor) security keys. This is a great new feature, but there&#39;s a caveat: Because this upgrade introduces new key types for security keys, you&#39;ll only be able to use a security key if both client and server have been upgraded to OpenSSH 8.2+. You can check your client version with  ssh -V and a remote sshd version with  nc [servername] 22\n Two new key types were added\u2014 ecdsa-skand  ed25519-sk (along with corresponding certificate types). To generate your key files, insert your security key and run:\n  This creates public and private keys tied to your U2F device. A private key on the U2F device is used to decrypt the on-disk private \u201ckey handle\u201d when the security key is activated.\n  OpenSSH also supports a different style of generating  -sk-type keys: resident keys. With the resident key approach, the key handle is stored on the U2F device. This way, you&#39;ll always have it on the security key when you need it. Create resident keys with:\n  Then, to bring the key handle back into memory on a new machine, insert the security key and run:\n Use PIV+PKCS11 and a Yubikey. If you want to connect to machines running older versions of SSHD, you can still use a security key\u2014with a different approach. Yubico has a  guide for using U2F+SSH with PIV/PKCS11. This is not the same thing as FIDO U2F. It works, but it&#39;s arcane to use.\n Use the custom  yubikey-agent ssh-agent.  Filippo Valsorda wrote an  SSH agent for Yubikeys. It&#39;s brand new and has minimal features.\n Use Touch ID and  sekey.  Sekey is an open source SSH agent that stores private keys in the Mac&#39;s secure enclave and makes the signing function available via Touch ID.\n Use Single Sign On SSH.  I wrote a tutorial to help you set this up. One advantage of single sign on SSH is, you can leverage the security policy of your identity provider\u2014including multi-factor authentication (MFA) support.\n  Agent forwarding in SSH allows a remote host to access your local machine&#39;s SSH agent. When you SSH with agent forwarding turned on (often using  ssh -A), the connection will have two channels: Your interactive session, and a channel for agent forwarding. The Unix domain socket created by your local SSH agent gets connected to the remote host through this channel. This is risky because a user with  rootaccess on the remote machine can access your local SSH agent and potentially impersonate you  ...\n Even with this precaution, it&#39;s still a good idea to use agent forwarding sparingly. Don&#39;t use it for all sessions\u2014use it when you know you&#39;ll need it for a specific SSH session.\n  SSH sessions can often hang due to network interruptions, a program that gets out of control, or one of those terminal escape sequences that lock keyboard input. \ud83e\udd26\u200d\u2642\ufe0f\n  ssh will check the connection by sending an echo to the remote host every  ServerAliveInterval seconds. If more than  ServerAliveCountMax echos are sent without a response,  ssh will timeout and exit.\n Break out of the session.  ssh includes the escape character  ~ by default. The command  ~. closes an open connection and brings you back to the terminal. (You can only enter escape sequences on a new line.)  ~? lists all of the commands you can use during a session. On international keyboards, you may need to press the  ~ key twice to send the  ~ character.\n Why do stuck sessions happen?Computers didn&#39;t move around very much when the internet was invented. When you \u2019re on a laptop and you move between IPv4 WiFi networks, your IP address changes. Because SSH relies on TCP connections, and TCP connections depend on endpoints with stable IP addresses, anytime you change networks your SSH connections will become orphaned and effectively lost.When your IP address changes, it takes a while for your network stack to discover that a connection has  ...\n  Here&#39;s two different approaches to keeping a session going when you&#39;re either moving between networks or wanting to disconnect for a while:\n If you really need a connection that  does not go down even when you move between networks, use Mosh\u2014the mobile shell. Mosh is a secure shell that uses SSH for the handshake, then switches to its own encrypted channel for the session. This separate channel is very resilient. It can handle a dropped internet connection, changes to your laptop&#39;s IP address, major network lag, and more, thanks to the magic of UDP and the synchronization protocol that Mosh uses.\n To use Mosh, you&#39;ll need to  install it on both your client and server and open up ports 60000-61000 for inbound UDP traffic to your remote host. Then just  mosh user@server to connect.\n Mosh operates at the level of screens and keystrokes, and this gives it a lot of benefits over SSH, which ferries the binary stream of standard input and output between the client and server. If we only have to synchronize screens and keystrokes, then an interrupted connection becomes much quicker to resume later. SSH would have to buffer and send everything that happened, but Mosh only needs to buffer keystrokes and synchronize the latest frame of the terminal window with the client.\n If you&#39;d like to \u201ccome and go as you please\u201d and keep the same terminal session going on a remote host, use the  terminal multiplexer  tmux. I love  tmux and I use it all the time. If your SSH connection dies, just reconnect and type  tmux attach to return to your  tmux session. It also has some great features, like in-terminal tabs and panes that are similar to the tabs in macOS Terminal, and terminals that can be shared with others.\n Some folks like tricking out their  tmux with  Byobu, a package which provides a lot of usability enhancements and key bindings for  tmux. Byobu ships with Ubuntu, and is easy to install on a Mac with Homebrew.\n  When debugging a complex issue on your servers, you might like to share an SSH session with someone who is not in the same room.  tmux is perfect for this for terminal sharing! Here are the steps:\n Make sure  tmux is installed on your bastion, or on whatever server you want to use.\n If you want more sophisticated multi-user  tmux sharing, there&#39;s   tmate, which is a fork of  tmux that makes shared terminal sessions a lot easier.\n  Hit us up on Twitter!\u2014we&#39;d love to expand this post with your best suggestions for using SSH.", "posttime": "2020-05-02 18:04:04", "tags": "\u9ed1\u5ba2,\u9ed1\u5ba2\u653b\u51fb,hacks,ssh", "title": "SSH\u9ed1\u5ba2\u653b\u51fb-\u8fdc\u7a0b\u5458\u5de5\u7684\u4e00\u70b9\u7406\u667a", "title_en": "SSH hacks \u2013 a little sanity for remote workers", "transed": 0, "url": "https://smallstep.com/blog/ssh-tricks-and-tips/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u9ed1\u5ba2", "\u9ed1\u5ba2\u653b\u51fb", "hacks", "ssh"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000280, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": ".bigTop__review{\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b}.bigTop__VideoPlayerBox{\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b}.bigTop__VideoPlayerBox--\u88ab\u52a8{\u5bbd\u5ea6\uff1a100%\uff1b\u9ad8\u5ea6\uff1a100%\uff1b\u9876\u90e8\uff1a0\uff1b\u5de6\u4fa7\uff1a0\uff1b\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b/*z\u7d22\u5f15\uff1a-1\uff1b*/}.bigTop__VideoPlayerBox--\u56de\u9000{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1bz\u7d22\u5f15\uff1a0\uff1b}.bigTop__VideoPlayerBox--\u3002\u4e0d\u900f\u660e\u5ea6\uff1a1\uff1bz-index\uff1a1\uff1b}.bigTop__VideoPlayer{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1b\u586b\u5145-\u5e95\u90e8\uff1a56.25%\uff1b}.bigTop__codehold.", "note_en": ".bigTop__preview { opacity: 0;}.bigTop__videoPlayerBox { position: absolute;}.bigTop__videoPlayerBox--passive { width: 100%; height: 100%; top: 0; left: 0; opacity: 0; /*z-index: -1;*/}.bigTop__videoPlayerBox--fallback { position: relative; z-index: 0;}.bigTop__videoPlayerBox--fallback .videoHint { display: none !important;}.bigTop__videoPlayerBox--active { width: 100%; height: 100%; top: 0; left: 0; opacity: 1; z-index: 1;}.bigTop__videoPlayer { position: relative; padding-bottom: 56.25%;}.bigTop__codeholder  ...", "posttime": "2020-05-02 18:04:01", "tags": "\u5927\u5b66,\u6fd2\u4e34,breaking,bigtop,position", "title": "\u5927\u5b66\u6fd2\u4e34\u5d29\u6e83\uff0c\u8feb\u4f7f\u4eba\u4eec\u5728\u6559\u80b2\u95ee\u9898\u4e0a\u505a\u51fa\u201c\u8270\u96be\u7684\u9009\u62e9\u201d", "title_en": "Colleges at the breaking point, forcing \u2018hard choices\u2019 about education", "transed": 0, "url": "https://www.wsj.com/articles/coronavirus-pushes-colleges-to-the-breaking-point-forcing-hard-choices-about-education-11588256157", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5927\u5b66", "\u6fd2\u4e34", "breaking", "bigtop", "position"]}, {"category": "", "categoryclass": "", "imagename": "9207abdf238a6a5475bd492c9c9244d5.jpeg", "infoid": 1000279, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Wish.com\uff0cJetBlue.com\uff0cquibi.com\uff0cWashington ingtonPost.com\uff0cNGPVan.com\u548c\u8bb8\u591a\u5176\u4ed6\u7ec4\u7ec7\u2026\u7684\u7f51\u7ad9\u4e0a\u90fd\u53d1\u73b0\u4e86\u6f0f\u6d1e\u3002\n\u4e92\u8054\u7f51\u4e0a\u7684\u5927\u591a\u6570\u6d41\u884c\u7f51\u7ad9\u90fd\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u5206\u6790\u548c\u5e7f\u544aJavascript\u4ee3\u7801-\u6839\u636e\u7f51\u7ad9\u5982\u4f55\u8bbe\u7f6e\u5176\u8425\u9500\u7cfb\u7edf\uff0c\u901a\u5e38\u662f\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\u548c\u65b0\u7684\u7528\u6237\u6ce8\u518c\u6d41\uff0c\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u53ef\u80fd\u4f1a\u610f\u5916\u548c/\u6216\u6545\u610f\u6cc4\u9732\u7ed9\u5168\u7403\u6570\u636e\u4f9b\u5e94\u94fe\u4e0a\u7684\u516c\u53f8\u3002\n\u8fd9\u9879\u7814\u7a76\u5305\u62ec\u7684\u7ec4\u7ec7\u6709\u6570\u4ee5\u4ebf\u8ba1\u7684\u7535\u5b50\u90ae\u4ef6\u548c\u771f\u5b9e\u7528\u6237-\u53ea\u6709Wish.com\u3001Mailchip\u548c\u534e\u76db\u987f\u90ae\u62a5\u8ba4\u771f\u5bf9\u5f85\u8fd9\u4efd\u5173\u4e8e\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u6cc4\u9732\u7684\u62a5\u544a-\u5e0c\u671b\u5728\u62a5\u544a\u53d1\u9001\u540e\u7ea672\u5c0f\u65f6\u5185\u66f4\u65b0\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\uff0c\u5176\u4ed6\u4e24\u4e2a\u7ec4\u7ec7\u5f00\u59cb\u76f8\u5bf9\u8f83\u5feb\u5730\u91c7\u53d6\u884c\u52a8-\u800c\u5176\u4ed6\u8bb8\u591a\u7ec4\u7ec7\u8981\u4e48\u6ca1\u6709\u56de\u5e94\uff0c\u8981\u4e48\u5df2\u7ecf\u51e0\u5468\u6216\u51e0\u4e2a\u6708\u6ca1\u6709\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u3002\n\u6240\u6709\u7ec4\u7ec7\u90fd\u9700\u8981\u610f\u8bc6\u5230\u8fd9\u4e00\u4e25\u91cd\u7684\u7528\u6237\u6570\u636e\u6f0f\u6d1e\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5171\u4eab\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u7684\u7ec4\u7ec7\u9700\u8981\u505a\u51fa\u91cd\u5927\u52aa\u529b\uff0c\u5411\u6536\u5230\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u7684\u7b2c\u4e09\u65b9\u5e7f\u544a\u548c\u5206\u6790\u516c\u53f8\u63d0\u4ea4\u201c\u5408\u4f5c\u4f19\u4f34\u5220\u9664\u8bf7\u6c42\u201d\u3002\n\u5728\u6574\u4e2a\u7814\u7a76\u8fc7\u7a0b\u4e2d\uff0c\u5305\u62ec\u4e86\u4e00\u4e9b\u88ab\u8ddf\u8e2a\u63a5\u6536\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u7684\u5e7f\u544a\u516c\u53f8-\u4f46\u8fd9\u4e0d\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f100%\u5b8c\u6210\u7684\uff0c\u56e0\u4e3a\u8fd9\u5728\u4e00\u4e9b\u7f51\u7ad9\u4e0a\u5df2\u7ecf\u6301\u7eed\u4e86\u591a\u5e74\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u4ece\u5916\u90e8\u4e86\u89e3\u5728\u4efb\u4f55\u5386\u53f2\u65f6\u523b\u5728\u7279\u5b9a\u7f51\u7ad9\u6216\u7f51\u9875\u4e0a\u540c\u6b65\u6570\u636e\u7684\u6240\u6709\u7ec4\u7ec7\u3002\n\u6b64\u7814\u7a76\u4e2d\u5305\u62ec\u7684\u6240\u6709\u6cc4\u9732\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u7684\u7ec4\u7ec7\u90fd\u5e94\u516c\u5f00\u53d1\u5e03\u5176\u6240\u6709\u5386\u53f2\u5e7f\u544a\u548c\u5206\u6790\u4f9b\u5e94\u5546\u7684\u5217\u8868\uff0c\u8fd9\u4e9b\u4f9b\u5e94\u5546\u53ef\u80fd\u5728\u5404\u81ea\u7684\u8fdd\u89c4\u6d3b\u52a8\u671f\u95f4\u6536\u5230\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u8d8b\u52bf\u662fGoogle Analytics\u3001Google\u7684DoubleClick\u3001Facebook\u548cTwitter\u63a5\u6536\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u7684\u9891\u7387-\u8fd9\u4e9b\u7ec4\u7ec7\u5e94\u8be5\u96c6\u4f53\u63a5\u6536\u5220\u9664\u8bf7\u6c42\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u5e94\u8be5\u5df2\u7ecf\u6709\u4e86\u5904\u7406\u6b64\u7c7b\u5de5\u4f5c\u7684\u6d41\u7a0b(Facebook\u5f88\u53ef\u80fd\u5df2\u7ecf\u6709\u4e86\u8fd9\u9879\u6280\u672f\uff0c\u8fd9\u9879\u6280\u672f\u662f\u57fa\u4e8e\u51e0\u5e74\u524d\u5173\u4e8e\u8fd9\u9879\u7814\u7a76\u7684\u5bf9\u8bdd\u548c\u4e00\u4efd\u79c1\u4eba\u62a5\u544a\u7684\u989d\u5916\u7814\u7a76)\u3002\n\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u4e5f\u6709\u4e00\u4e9b\u201c\u5371\u9669\u4fe1\u53f7\u7ec4\u7ec7\u201d\u63a5\u6536\u4e86\u5c0f\u578b\u6216\u76f8\u5bf9\u4e0d\u77e5\u540d\u7684\u7ec4\u7ec7\u7684\u7528\u6237\u7535\u5b50\u90ae\u4ef6\uff0c\u4f46\u4ed6\u4eec\u7684\u8bf7\u6c42\u65e5\u5fd7\u4e2d\u53ef\u80fd\u4f1a\u6536\u5230\u5927\u91cf\u7684\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u4e9b\u8f83\u5c0f\u7684\u7ec4\u7ec7\u9700\u8981\u4e00\u79cd\u72ec\u7279\u7c7b\u578b\u7684\u5ba1\u67e5\uff0c\u56e0\u4e3a\u5e7f\u544a\u6216\u5206\u6790\u516c\u53f8\u53ef\u4ee5\u4ece\u4ece\u5176\u4f01\u4e1a\u5ba2\u6237\u90a3\u91cc\u63a5\u6536\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u4e2d\u83b7\u5f97\u7684\u529b\u91cf-\u5251\u6865\u5206\u6790\u6548\u5e94\uff0c\u5982\u679c\u4f60\u613f\u610f\u2026\u3002\n\u8bb8\u591a\u4f01\u4e1a\u7ec4\u7ec7\u901a\u8fc7\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u9001\u7ed9\u7b2c\u4e09\u65b9\u5e7f\u544a\u548c\u5206\u6790\u516c\u53f8\u7684\u7b2c\u4e09\u65b9Javascript\u8bf7\u6c42\u5934\u6cc4\u9732\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u3002\n\u5f53\u4efb\u4f55\u7b2c\u4e09\u65b9Javascript\u4ee3\u7801\u52a0\u8f7d\u5230\u7f51\u7ad9\u4e0a\u65f6\uff0c\u6765\u81ea\u7528\u6237\u548c\u7f51\u7ad9\u7684\u5143\u6570\u636e\u53ef\u4ee5\u88ab\u4f20\u8f93\u5230\u63a7\u5236\u8be5\u4ee3\u7801\u7684\u7b2c\u4e09\u65b9\u57df/\u516c\u53f8-\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u662f\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u201c\u8bf7\u6c42\u5934\u201d-\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u5305\u62ec\u7528\u6237\u6b63\u5728\u8bbf\u95ee\u7684\u9875\u9762\u3001\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u8bbe\u5907\u548c\u6d4f\u89c8\u5668\u7684\u7c7b\u578b\u3001\u4ed6\u4eec\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5e7f\u544a\u548c\u5206\u6790\u516c\u53f8\u4f7f\u7528\u7684\u5176\u4ed6\u5f62\u5f0f\u7684\u6307\u7eb9/cookie/URL\u67e5\u8be2\u5b57\u7b26\u4e32/URL\u53c2\u6570\u3002..\u3002\n\u5730\u5740\u680f\u4e2d\u540c\u6b65\u5230Javascript\u50cf\u7d20\u7684\u8fd9\u7c7b\u7535\u5b50\u90ae\u4ef6\u7528\u6237\u6570\u636e\u901a\u5e38\u662f\u7531\u666e\u901a\u4eba\u901a\u8fc7\u201c\u5e7f\u544a\u62e6\u622a\u5668\u201d\u6216\u901a\u8fc7Safari\u3001Brave\u548cFirefox\u7b49\u6d4f\u89c8\u5668\u62e6\u622a\u7684-\u8fd9\u4e9b\u6d4f\u89c8\u5668\u4f7f\u7528Javascript/Cookie\u62e6\u622a\u4f5c\u4e3a\u9ed8\u8ba4\u529f\u80fd\u6765\u4fdd\u62a4\u7528\u6237(\u6bcf\u4e2a\u6d4f\u89c8\u5668\u7684\u5904\u7406\u65b9\u5f0f\u7565\u6709\u4e0d\u540c)\u3002\u8fd9\u91cc\u5305\u62ec\u7684\u8fd9\u6b21\u5165\u4fb5\u548c\u7814\u7a76\u5c06\u5f71\u54cd\u6240\u6709\u8fd9\u4e9b\u7f51\u7ad9\u7684Chrome\u7528\u6237\uff0c\u4ed6\u4eec\u7ecf\u5386\u4e86\u8fd9\u4e9b\u7279\u5b9a\u7684\u7528\u6237\u6d41\uff0c\u5e76\u4e14\u6ca1\u6709\u4e3b\u52a8\u963b\u6b62\u6240\u6709Javascript\u2026\u2026\u3002\n\u5927\u591a\u6570\u88ab\u53d1\u73b0\u7684\u6570\u636e\u6cc4\u9732(\u5176\u4e2d\u4e00\u4e9b\u622a\u81f3\u53d1\u5e03\u65f6\u4ecd\u662f\u5b9e\u65f6\u6cc4\u9732)\u662f\u7531\u8349\u7387\u800c\u5371\u9669\u7684\u589e\u957f\u9ed1\u5ba2\u9020\u6210\u7684\uff0c\u8be5\u9ed1\u5ba2\u7528\u4e8e\u6539\u8fdb\u5206\u6790\u5de5\u5177\u7684\u5f52\u5c5e\u8ddf\u8e2a\uff0c\u5e76\u7528\u4e8e\u4f18\u5316\u548c\u7ec6\u5206\u5e7f\u544a\u6d3b\u52a8\u3002\n\u5176\u4e2d\u51e0\u4e2a\u6f0f\u6d1e\u6d89\u53ca\u201c\u7eaf\u6587\u672c\u201d\u7528\u6237\u7535\u5b50\u90ae\u4ef6-\u8fd9\u662f\u6307\u60a8\u53ea\u9700\u6700\u5c11\u7684\u66f4\u6539/\u7f16\u7801\u5c31\u53ef\u4ee5\u76f4\u63a5\u9605\u8bfbURL\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u3002\n\u5176\u4e2d\u4e00\u4e9b\u6f0f\u6d1e\u6d89\u53ca\u4e00\u79cd\u88ab\u79f0\u4e3a\u201cBase64\u7f16\u7801\u201d\u7684\u7eaf\u6587\u672c\u5f62\u5f0f-\u7b80\u800c\u8a00\u4e4b\uff0cBase64\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u529f\u80fd\uff0c\u4e0d\u662f\u4e00\u79cd\u52a0\u5bc6\u5f62\u5f0f\uff0c\u4e5f\u4e0d\u63d0\u4f9b\u7528\u6237\u4fdd\u62a4\u3002base64\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u8bb8\u591a\u5de5\u5177\u8fdb\u884c\u89e3\u7801\uff0c\u751a\u81f3gchq\u7684s\u0336p\u0336i\u0336e\u0336\u2018s\u0336\u63d0\u4f9b\u4e86\u4e00\u9879\u514d\u8d39\u670d\u52a1\uff0c\u79f0\u4e3aCyberChef\uff0c\u7528\u4e8e\u89e3\u6790\u5b9a\u5236\u7684base64\u7f16\u7801\u3002\n\u5728\u6211\u8be6\u7ec6\u4ecb\u7ecd\u6b64\u6f0f\u6d1e\u662f\u5982\u4f55\u53d1\u751f\u7684\uff0c\u4ee5\u53ca\u56f4\u7ed5\u8fd9\u4e9b\u793a\u4f8b\u7684\u5177\u4f53\u60c5\u51b5\u4e4b\u524d\uff0c\u6211\u60f3\u7b80\u8981\u5730\u627f\u8ba4\u5e76\u8d5e\u626cWish.com\u7684\u56e2\u961f\u6539\u53d8\u6574\u4e2a\u7535\u5b50\u90ae\u4ef6\u4f53\u7cfb\u7ed3\u6784\u7684\u901f\u5ea6\u4e4b\u5feb", "note_en": "Breaches have been found on websites including Wish.com, JetBlue.com, Quibi.com, WashingtonPost.com, NGPVan.com and numerous other organizations\u2026\n  Most popular websites on the internet are using 3rd party analytics and advertising Javascript code \u2014 and depending on how a website sets up their marketing systems, typically email systems and new user signup flows, the user emails can accidentally and/or purposefully leak to companies across the global data supply chain.\n The organizations included in this research have hundreds of millions of emails and real users between them \u2014 and only Wish.com, Mailchimp and The Washington Post took this report on their user email breaches seriously \u2014 Wish updated their email system within ~72 hours of the report being sent and the other two started taking actions relatively quickly \u2014 whereas many other organizations either didn\u2019t respond or have failed to take any actions for weeks or months.\n All organizations need to be aware of this significant user data vulnerability, but more importantly,  there needs to be significant efforts by organizations sharing user emails in this way, to submit *partner deletion requests* to the 3rd party advertising and analytics companies who received the user emails.\n Throughout this research, some of the advertising companies that were tracked receiving the user emails are included \u2014 but this should not be considered 100% complete due to the fact that this has been going on for years on some websites, and it\u2019s impossible to know externally all of the organizations who synced data on a specific website or webpage at any historical point.\n All organizations included in this research leaking user emails should publicly post the list of all their historical advertising and analytics vendors who could have received the user emails while their respective breaches were active.\n One important trend to notice is how often Google Analytics, Google\u2019s DoubleClick, Facebook, and Twitter are ingesting the user emails \u2014 these are organizations that should be receiving deletion requests en-masse and they should all have processes to handle this type of effort already (Facebook likely has this tech already based on conversations on this research and additional research from a private report from several years ago).\n In this research, there are also \u201cred flag organizations\u201d who have ingested user emails that are small or relatively unknown organizations, yet likely receiving huge amounts of user emails in their request logs. These smaller organizations need a unique type of scrutiny due to the power that an advertising or analytics company can attain from ingesting millions of user emails from their enterprise clients \u2014  the Cambridge Analytica effect if you will\u2026\n  Numerous Enterprise Organizations Leaking User Emails Through 3rd Party Javascript Request Headers Sent via Browsers to 3rd Party Advertising &amp; Analytics Companies\n  When any 3rd party Javascript code loads on a website, metadata from the user and the website can be transmitted to the 3rd party domain / company that controls that code \u2014this is technically through the \u201cRequest Headers \u201dsent through a browser \u2014and this data can include what page a user is visiting, what type of device and browser they are using, their location, and other forms of fingerprinting / cookies / URL querystring/ URL parameters that are used by advertising and analytics companies.  ...\n This type of email user data in a URL bar synced into Javascript pixels is most typically blocked by a regular person through \u201cAd blockers \u201dor through browsers like Safari, Brave, and Firefox \u2014those browsers use Javascript/cookie blocking as a default features to protect users (each browser handles it slightly differently). This breach and research included here would impact all Chrome users of these websites who went through these specific user flows and who didn \u2019t proactively block all Javascript  ...\n Most of the data breaches that were found (some are still live breaches as of publishing) are caused by a sloppy and dangerous growth hack that is used to improve attribution tracking for analytics tools and used to optimize and segment retargeting advertising campaigns.\n  Several of the breaches involve \u201cplain text\u201d user emails \u2014 this is when you can literally read the email in the URL with minimal changes/encodings.\n Some of the breaches involve a form of plain text known as \u201cbase64 encoding\u201d \u2014 in short, base64 is a programming language feature that is NOT a form of encryption and provides no user protections. A base64 string can be decoded through many tools, and there is even a free service from the s\u0336p\u0336i\u0336e\u0336s\u0336 nice folks at GCHQ called  CyberChef for parsing custom base64 encodings.\n Before I get into the details about how this breach happens, and the specific circumstances surrounding the examples, I want to briefly acknowledge and give credit to the team at Wish.com for how quickly they changed their entire email architecture after being informed of their breach \u2014 in less than 72 hours Wish had completely rebuilt their email architecture and they had built a completely new auto-login flow via email.\n I believe the Wish.com breach was the largest out of all the examples in this research, and it lasted over a year and likely involved hundreds of millions of user emails in a base64 plain-text format being shared with analytics and advertising companies, but their work to quickly escalate the problem, realize the scope, and then pull the trigger to rebuild their systems was a dramatically better response than how other organizations handled these reports. I believe Wish and all organizations  ...\n For the most part, most of these user email data breaches are  still live as of publishing this research \u2014 and in this research I\u2019ll show you how to \u201cbreach yourself\u201d by just using current website signup flows and other normal website features on the specific websites in question.\n I also want to thank  Eliya Stein at Confiant.com for being a sounding board on these technical issues, and helping to provide an additional vet and other important context around the Wish.com breach (those details below).\n  3rd Party Javascript Collects a \u201cReferrer \u201d URL Field, Which Can Leak User Data and Email Addresses from a Website\n This research is focused on a specific type of user data breach that occurs due to how Javascript collects data on a website. When a user loads a web page, the URL that they are visiting, along with any URL parameters (extra tracking codes appended after a \u201c?\u201d in a URL) are shared with any advertising or analytics companies through the javascript code on that page and through a technical browser transmission \u201crequest header\u201d known as a \u201cReferrer\u201d field.\n  (Pre-Publishing Note: Quibi reached out hours before publication with an apology and several sentences explaining \u201chow this happened\u201d and what they were doing to fix it. Apparently they no longer leak user emails \u2014 I have doubts about some of their statements and will let other reporters publish their remarks)\n When you install the Quibi app, you are asked to submit an email to create your account, and then emailed a confirmation link that must be clicked to confirm the account. When a user clicks this email confirmation link, their email address is appended into the URL they are clicking in plain text, and sent to 3rd party advertising and analytics companies.\n Quibi was informed of their user email data breach on April 17, 2020 but haven\u2019t responded to the details other than through their automated customer support system.\n Here\u2019s a screen shot showing the Quibi New User Email Verification Webpage URLs and how this page was built to leak the user email in plain text to advertising and analytics companies:\n  That same \u201cEmail verification\u201d webpage above from Quibi sends the data to advertising and analytics companies through the referrer fields in the request headers \u2014 a screen shot below includes the user email sync from Quibi to Snapchat\u2019s  sc-static.net advertising endpoint.\n  Here\u2019s a screen shot of the Twitter request as it receives the user email in the URL:\n  3) Google Tag Manager (and therefore potentially custom tags could fire for specific visitors/geos/URL params, thus leaking this to more companies)\n    7) CivicComputing.com, which redirects to  https://www.civicuk.com/ and appears to be a company based in the United Kingdom.. this raises big GDPR red flags\u2026. 8) Facebook events / custom audiences for ads\n    12) Facebook analytics, Google Analytics, Twitter analytics (they fire at the end of the page load again)\n  The Quibi new account email confirmation flow was tested again on April 26, 2020 and it was confirmed that the user email is still being appended to the email confirmation page URL in plain text and leaked to 3rd party advertising and analytics companies.\n Since the original test, several new advertising companies were found receiving the user data including LiveRamp.com, SkimAds, and Tapad \u2014 it seems likely that numerous ad tech orgs have been syncing the Quibi new user emails and the list included here could be incomplete.\n Quibi\u2019s user data breach is one of the most egregious in this research, because they are a new and extremely well-funded organization and were launched well after both GDPR and CCPA went into effect. In 2020, no new technology organizations should be launching that leaks all new user-confirmed emails to advertising and analytics companies \u2014 yet that\u2019s what Quibi apparently decided to do.\n Out of all the data breaches in this research, the Quibi research is the hardest to swallow due to how new this organization is, and how much money they had to push into their marketing and advertising to grow new users \u2014 it\u2019s an extremely disrespectful decision to purposefully leak all new user emails to your advertising partners, and there\u2019s almost no way that numerous people at Quibi were not only aware of this plan, but helped to architect this user data breach.\n It\u2019s 2020, and this type of growth-hack needs to stop being green lit. Quibi needs to explain to their users why this was done and why it hasn\u2019t been changed even after being notified\u2026\n  The Biggest Breach: Wish.com Likely Leaked Hundreds of Millions of User Emails for Over a Year, With the User Emails Encoded into Base64 Strings\n From July 2018 until January 2020 when this research was initially shared with Wish.com, Wish transmitted user emails to at least Google, Facebook, Pinterest, Criteo, PayPal and Stripe, and potentially other companies.\n In July 2018, Wish.com deployed code that started their user email breaches \u2014this was tracked due to user emails in base64 format being cached in systems like URLscan.io \u2014the Wish.com developers deployed code that started to encode users emails in base64 plain text and then append that string into URLs sent to users via email in a URL parameter named \u201cee \u201d\u2014when users clicked on any marketing emails from Wish, their email was appended to the URL for any page/product-page they clicked from the  ...\n  Approximately ~72 hours after being informed of this research Wish rebuilt their entire email architecture and stopped appending the \u201cee \u201dparameter with base64 user encoded emails into marketing emails. It does not appear Wish has informed their users of this user email breach, but they did take the issue very seriously and quickly agreed that the base64 email encoding was a practice they weren \u2019t going to continue. Minimal comments from Wish were received after the research was submitted,  ...\n Due to Wish.com being a massive multi-billion dollar company,  who in 2015 was Facebook and Instagram\u2019s #1 app advertiser over Christmas, spending upwards of $100 million, and their previous valuations, it\u2019s likely that tens of millions, if not hundreds of millions of user emails were pushed through the \u201cee\u201d parameter and leaked to advertising and analytics companies.\n To repeat: from 2018\u20132020, most if not all of the Wish.com marketing emails appended user emails in a format that, if the user clicked on the email and they were using a browser that didn\u2019t block 3rd party javascript, then that user had their email in base64 plain text format leaked to 3rd party advertising and analytics companies including Google, Facebook, Pinterest, Criteo, PayPal and Stripe, and potentially other companies.\n  The URLs being shared by Wish during this period looked like this (my base64 email is replaced below with XXXXX):\n  At least thousands of Wish.com users had their base64 email address cached into Google search results, URLScan and other public systems \u2014 today, you can still search for this on Google, and a huge portion of the results, you will see are actually the \u201cee={user-base64-emails}\u201d string that leaks via email clicks:  https://www.google.com/search?q=site%3Awish.com+inurl%3Aee\n  Confirmation from Eliya Stein at Confliant.com, Including Flagging Several New Organizations Receiving Data from Wish.com\n Early in this research, Eliya Stein ( Twitter,  Linkedin,  Confiant) was contacted for a quick technical double check, and helped to identify several new service providers that had been receiving data from the Wish.com base64 user data breach. Eliya\u2019s concise report is included here:\n It didn\u2019t take long for Wish to send me a marketing email and I was able to confirm the finding immediately.\n When a subscriber clicks a link in the email, the destination URL has several parameters in the querystring, including \u201cee\u201d which is paired with the recipients base64 encoded email address.\n This means that this entire URL, including the ee parameter can potentially be leaked to any 3rd party resources that are loaded on the page.\n In this case, I can confirm that it\u2019s being leaked at least to Facebook, Google, Pinterest, and Critieo per Zach\u2019s observation, but also additional 3rd parties including Paypal &amp; Stripe.\n From my observations, it looks like these are mostly tracking endpoints and not actual ad slots on these pages. If they ever introduce display ads connected to rtb on these pages, then the impact of this leak has the potential to be quite large.\n I\u2019m not in a great position to comment on GDPR implications, because that\u2019s a little bit outside of my expertise, but for sure it\u2019s a terribly bad practice to pass around PII in plain text in the URL like this, and I do consider base64 encoding to be plain text.\n One thing that we\u2019re not able to observe is if and how this data is being abused, but any ad tech company with integrity should scrub data like this if they recognize it as PII.\n I\u2019ve included a screenshot of the parameter being leaked to Facebook via the referer.\n  Wish.com, like the other organizations included in this research, would ideally submit deletion requests to all of their advertising and analytics partners who received data during this period with requests to those partners to delete the request logs containing base64 user emails.\n  Jetblue has known about their ongoing data breach since March 2020 and sent several email responses after being shown this research, but still haven\u2019t made any changes to their website or the ongoing leak of new user emails to 3rd party advertising and analytics companies.\n After being informed of the leak, Jetblue stated they would never do what they are doing because it would be against the law ( *NOTE: JetBlue wrote \u201cFederal Passenger Privacy Act\u201d in their response \u2014 this may be a reference to a 1974&#39; privacy bill \u2014 or as   this Berkley Law paper on page 14 indicates , JetBlue has sent this statement before and is possibly referencing a nonexistent law), writing this in a response recently:\n We regret to hear of any disappointment you experienced when creating a TrueBlue account. We can assure you we don\u2019t share your information.  The Federal Passenger Privacy Act* strictly prohibits the release of any information regarding our customers or their travel to any other party. We even require specific security information to verify the identity of our customers before we\u2019re able to discuss their own information.\n These details were tweeted out in March and then emailed to JetBlue, which still didn\u2019t have an impact to get them to change:\n  Here\u2019s the flow of how all new JetBlue users are having their email addresses leaked to 3rd party advertising and analytics companies, in violation of the Federal Passenger Privacy Act* (and potentially other privacy laws)\u2014 step one, click \u201cJoin\u201d in the menu bar on Jetblue.com from the homepage or any page on the site:\n  Then, you\u2019ll be prompted to enter your email \u2014 whatever you enter here, when you click the next step, your email is passed into the URL and subsequently leaked to the 3rd party advertising and analytics companies:\n  Here\u2019s a screen shot of the next step, with the user email being passed into the URL \u2014 the icon showing \u201c45\u201d is the Ghostery.com count of advertising &amp; analytics companies receiving data on the webpage \u2014 it\u2019s not a complete list but this shows dozens of companies are receiving user emails from the current JetBlue.com data leak.\n  Here\u2019s a screen shot from a previous test showing one of the advertising pixels firing and how it receives the user data through the request headers (notice only 39 pixels were tracked on this page last month, April\u2019s test showed 45):\n  The companies receiving data from Jetblue includes basically all the major advertising companies \u2014 Google, Facebook and all the niche but major advertising players. The Jetblue user email leak easily syncs to the most 3rd party companies out of any other leak in this research.\n The Way Back Machine also has many copies of JetBlue\u2019s website \u2014 at some point in 2019 they rolled out a new version of their website, and since at least July 9, 2019 they\u2019ve been using the current version of their new account signup flow, you can see and literally test the July 2019 archived version here:  http://web.archive.org/web/20190709195758/https://trueblue.jetblue.com/enroll/join-us\n Here\u2019s a screen shot of the July 2019 version of the JetBlue.com user account creation 2-step form that leaks user emails on the 2nd step:\n  Jetblue.com has been leaking user emails for about nine months for people creating new accounts\u2026. it\u2019s unclear when JetBlue will update this but they have rejected the research even though being informed on multiple occasions.\n  The Bezos-Schmidt-Funded KongHQ.com (Formerly Known as Mashape) Using Common 2-Step Form That Leaks on the 2nd Step\n The company formerly known as Mashape, now known as KongHQ, was founded in 2007 and received $1.5 million in seed funding in 2011 from a  round of investors that included Jeff Bezos and Eric Schmidt through Innovation Endeavors.\n KongHQ has a 2-step signup form similar to the JetBlue leak, but the KongHQ form starts on their homepage. When a user puts their email in the form on the homepage and hits enter, their email is immediately pushed into the URL bar and then transmitted to 3rd party advertising and analytics partners.\n  KongHQ was informed of this breach back in February 2020 but still haven\u2019t made any changes to their website and 2-step form \u2014 their response was similar to JetBlue in totally ignoring the issue.\n   You can breach your own email address right now by filling out the form on the homepage of KONGHQ.com, but user beware!\n After clicking \u201cRequest Demo\u201d on the homepage, you are transmitted to the 2nd step of the form, with your email address added into the URL bar to auto-fill the form\u2026\n  Unfortunately, anywhere you can find a 2-step signup form where the 2nd step has some form of autofill, many of those systems are being built with insecure technology and sometimes the user emails are purposefully leaked to optimize retargeting advertising campaigns or improve analytics attribution data.\n  Democratic Data Broker NGPVAn.com / EveryAction.com (&amp; Their Clients) have been Pushing User Emails into Google Analytics &amp; Other Systems for Years\n NGPVan.com/EveryAction.com are owned by the same company and provide a wide range of CRM/marketing services for political and nonprofit clients. These platforms have an enormous range of features \u2014and similar to the Mailchimp-Mandrill email breach described in this research, NGPVan created a legacy URL field for \u201cemailAddress \u201dthat is appended into URLs, mostly on unsubscribe pages, and this can lead to NGPVan/Everyaction clients leaking user emails to 3rd party advertising and analytics  ...\n A typical NGPVan unsubscribe URL that has the user email in it, looks like this (The email is appended at the back of the URL):\n   Unfortunately, not only are advertising and analytics companies ingesting the user emails on random unsubscribe pages all across the NGPVan client base, but those same URLs with user emails in plain text are also cached in  Google search results,  URLscan results, and in other repositories of cached user pages across the internet.\n The primary company ingesting the user emails from NGPVan clients appears to be Google via their Google Analytics product, but a Microsoft endpoint also receives data. Here\u2019s what Ghostery picks up on one of the unsubscribe pages with a user email in plain text in it:\n  And then here\u2019s an additional screen shot of the actual data transfer, showing that Microsoft is also receiving the user emails through their visualstudio.com endpoints.\n  NGPVan has been appending the user email address to unsubscribe links across their own emails, and client emails for several years \u2014 the start date isn\u2019t exactly clear but emails from 2018 have this same plain text email.\n Google has also been aware of the NGPVan user email leaks since January, and Google clarified their Google Analytics policy around this type of ingestion, which apparently requires a  \u201cmandatory remediation process with the customer where they must stop sending PII to Analytics and ensure all historical PII data must be removed.\u201dThis statement was sent by Google on January 13, 2020, and several organizations have been flagged for Google who are sending user emails into Google Analytics,  ...\n  NGPVan is currently used on the  https://covid19responsefund.org/ website sponsored by the World Health Organization (WHO), the United Nations Foundation, the Swiss Philanthropy Foundation, and  with supporters including Google, Facebook, Microsoft, and others. It \u2019s unclear if people who donate money through the NGPVan donation form on the website are subsequently sent emails with their email address leaking via the unsubscribe links, but the form does provide options to join the email  ...\n  NGPVan is a for-profit company and just because their clients are largely political campaigns and nonprofits, it doesn\u2019t give them the right to leak user emails to advertising and analytics companies \u2014 hopefully this issue is resolved so that as the 2020 campaign heats up and users take advantage of unsubscribe forms more often, those user emails aren\u2019t also leaking en-masse to 3rd party companies.\n  Growing Child, Popular Magazine for Parents, Leaking Emails on Unsubscribe Page to Google Analytics, Google\u2019s DoubleClick, only Google Pixels Receiving Data\n GrowingChild.com is a magazine founded in 1971 that describes itself as \u201cserving millions of families in the United States and around the world\u2026\u201d\n Unfortunately for the families who have subscribed to GrowingChild.com newsletters and then decided to unsubscribe, their unsubscribe pages print the user email in plain text into the URL and then share the user email in plain text to Google and several Google products including Google Analytics, Google Doubleclick and several other Google advertising endpoints.\n The GrowingChild unsubscribe URls are built like this:  https://growingchild.com/index.php/unsubscribe/unsubscribe.html? email=growingchild@victorymedium.com  and this leaks as a referrer to the Google pixels here:\n  It\u2019s unfortunately too common for unsubscribe pages to be built this way from legacy organizations, but organizations like Google seem to almost capitalize on it sometimes, like in the requests above that trigger across numerous Google advertising endpoints.\n  MailChimp\u2019s Mandrill Legacy Email Redirect via their API Can Leak Mandril-Client-User Emails to Advertising and Analytics Companies\n Mailchimp\u2019s developer product Mandrill.com was  founded in 2012 and claimed 80,000 users by 2015 \u2014 lots of developers still use their products, but one of their legacy APIs still has some clients using it. This legacy Mandrill API has a feature that can be used and then it can potentially expose user email addresses on unsubscribe pages to 3rd party advertising and analytics companies.\n This Mandrill API doesn\u2019t automatically leak user data but there is the option for Mandrill clients to redirect an unsubscribe URL sent via their API to include the user\u2019s email address in the URL bar.\n Mailchimp was informed of this issue relatively recently, they acknowledged the report and mentioned it was already escalated, but haven\u2019t appeared to make many changes yet besides deleting old support articles which recommended the process that could potentially leak a user email to a 3rd party advertising or analytics company.\n Here\u2019s an example MailChimp Mandrill API redirect URL; this will redirect into a business email address for a newsletter:\n   This \u201clist-manage(.)com\u201d domain is owned by MailChimp and numerous legacy Mandrill clients can be found who have various endpoints from this domain embedded and cached in URLscan.io like in this screen shot..\n Google has also cached ~47,000 of the Mandrill unsubscribe pages via this search @  https://www.google.com/search?q=site%3Alist-manage.com%20unsubscribe \u2014 not all of these results have user emails appended to them, which makes it clear that this is not a feature deployed by all Mandrill clients.\n The process to add user emails into the Mandrill redirect URLs was covered in a legacy support article from Mailchimp. This support article was sent to Mailchimp with this research that they haven\u2019t substantially responded to, yet they had time to delete the support article and try to hide what they were recommending to their clients \u2014 this page was deleted:  https://mandrill(.)zendesk(.)com/hc/en-us/articles/205583017-Can-I-add-an-automatic-unsubscribe-link-to-Mandrill-emails-\n  Even though Mailchimp deleted this support article sometime in the last week, it\u2019s still available  in the Google Cache, you can see how Mailchimp showed how to put the user email into a specific query string:\n  MailChimp also scrubbed their larger support article in Mandrill about unsubscribe pages which used to be @  https://mandrill(.)zendesk(.)com/hc/en-us/articles/205582947-About-Unsubscribes \u2014 the page is about appending user emails into the URL bar \u2014  Google cached that page too here.\n Here\u2019s a screen shot of that page before Mailchimp deleted it this past week:\n  Again, MailChimp received the report, they\u2019ve obviously been scrubbing their content since receiving the research, but haven\u2019t sent any other details about their plans to notify users or rearchitect the Mandrill service.\n  Washington Post Leaks Some User Emails in Base64 to Service Providers, Appears Not to Send Data to Any External Advertising Companies\n The Washington Post was recently alerted to a base64 user email data leak to a limited number of analytics companies, primarily Chartbeat.com (and maybe a few others) \u2014 it appears no advertising companies received the base64 user email strings that several of their newsletters append to their unsubscribe links.\n The Washington Post escalated the initial report quite fast and noted they were addressing their issues \u2014 Wapo\u2019s base64 user email sharing could be resolved by the time of publication or likely sometime soon after.\n Here\u2019s one of the unsubscribe links that has had the user base64 email strings:\n  Not all of the Washington Post newsletters are built the same way \u2014 the leak occurs in the unsubscribe links for the \u201cThis Week in Ideas\u201d newsletter and another one of their weekly newsletters \u2014 their core system for newspapers subscribers that sends daily emails does not seem to be built this same way and doesn\u2019t seem to leak user emails.\n The user emails are encoded in base64 plain text format and appended into a \u201cbem\u201d URL parameter \u2014 you can see one of these unsubscribe link via this link @  https://s2.washingtonpost.com/wp-unsubscribe/newsletters?bem= ZWR3YXXXXXXXXXNoLnNjb3R0QGdtYWlsLmNvbQ%3D%3D&amp;nlsendid=5e6e0c0bfe1ff6038cda4f2e\n The base64 string is the \u201cbem\u201d param above \u2014 mine is slightly obscured above but these can be found across old emails and in some locations on the internet.\n  Facebook Manipulates URL Query Parameters (for Filtering), But Still has System That Can be Broken to Leak Emails to 3rd Party Advertising and Analytics Companies\n Nearly all modern websites use Javascript for advertising and analytics tracking, but it\u2019s still very rare for organizations to \u201csandbox\u201d their partner javascript pixels in a way that ensures that URL parameters don\u2019t get transmitted accidentally to ad tech and analytics partners.\n Facebook is one of the few organizations that regularly does \u201cURL referrer filtering\u201d for their javascript partners, and across most (or all?) of their websites. Facebook does this to filter certain URL parameters like the  \u201cmkt_tok\u201d parameter reported to them back in 2019 that could leak user emails through Adobe\u2019s one-token-user-authentication architecture.\n Facebook has never open sourced this filtering product of theirs, likely because it helps to cut down on spam and extra work they need to do internally, but their filters are largely built on their own domain, and they have certain Facebook business marketing pages with 3rd party advertising and analytics pixels, and even though Facebook \u2019s filtering product is deployed there, it still typically transmits user emails in some field into 3rd party systems \u2014possibly in fields that can  ...\n Attached below is a screen shot example showing a type of filter where the unknown/unexpected URL parameters that I put into the Facebook URL were then passed into a unique Adobe Marketo field named \u201c_mchQp\u201d \u2014 it\u2019s possible that this is a field Facebook parses to ingest unknown inbound data that may/may not get deleted based on some other criteria.\n  Organizations that have Javascript advertising and analytics partners need to be aware of their own user data breaches but also plan for ways that attackers could inject bad data into 3rd party systems to corrupt retargeting campaigns or break analytics systems. And at some point, more organizations will need to look to architecture from orgs like Facebook who filter URL parameters and build internal sandboxes to protect user data from flowing across their global data supply legal exposure  ...\n  The organizations included in this research can request any changes or comment additions via URLdatabreach@victorymedium.com\n Individuals who use any of these services and who believe had their emails leaked, should be given an easy processes to request the deletion of their user emails that were sent to 3rd party advertising and analytics companies. The organizations involved in this research should provide that process in whatever format they can provide.\n Each organization included in this research should be changing their systems to stop leaking user emails in plain text or base64 plain text formats, they should notify users who could have been impacted by the leaks, and also issue deletion requests for all their users to 3rd party advertising and analytics organizations they work with.\n All organizations should be extremely careful about 2-step forms, email tracking that appends encoded or plain text emails into URLs, and any process that \u201csyncs a user email\u201d to a 3rd party company. This process is almost assuredly not described properly in Terms of Service and Privacy Policies for organizations, and it\u2019s obviously not a process that most users expect to occur.\n Unfortunately, as auditors saw with the Cambridge Analytica scandal and Facebook \u2019s inability to confirm that the data was completely deleted, the organizations involved in this research face a similar dilemma tracking down and deleting user emails that were sent to their 3rd party advertising and analytics partners \u2014how can you actually ensure and know this data was deleted? How can users who were involved in these flows ensure their emails are deleted? Who is in charge of requesting  ...\n Finally, many advertising companies have features they\u2019ve built to sync user emails into retargeting lists and other audience advertising targeting strategies, without properly notifying users? How many of those organizations have user emails that were given without the user fully understanding what was occurring or having an ability to delete or modify that information after it was sent?\n Hopefully, organizations will start to take a more proactive approach to trying to stop this type of data supply data breach, and a more responsible plan of action after being notified of significant problems.", "posttime": "2020-05-02 18:03:57", "tags": "\u5e7f\u544a,\u5730\u5740,email,user", "title": "\u6570\u767e\u4e07\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6cc4\u9732\u7ed9\u5e7f\u544a\u548c\u5206\u6790\u516c\u53f8", "title_en": "Millions of email addresses leaking to advertising and analytics companies", "transed": 0, "url": "https://medium.com/@thezedwards/the-2020-url-querystring-data-leaks-millions-of-user-emails-leaking-from-popular-websites-to-39a09d2303d2", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5e7f\u544a", "\u5730\u5740", "email", "user"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000278, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u6ce8\u610f\u5230\u539f\u6765\u7684Without-systemd.org\u7ad9\u70b9\u5173\u95ed\u4e86\u3002\u636e\u6211\u6240\u77e5\uff0c\u5b83\u4f3c\u4e4e\u5df2\u7ecf\u5b8c\u5168\u88ab\u4e00\u4e2a\u540d\u4e3anosystemd.org\u7684\u4e0d\u592a\u91cd\u8981\u7684\u7f51\u7ad9\u6240\u53d6\u4ee3\u3002\n\u4e0d\u7ba1\u60a8\u662f\u5426\u540c\u610f\u8fd9\u4e9b\u7ad9\u70b9\u7684\u4fe1\u606f\uff0c\u5728unless-systemd\u4e0a\u6536\u96c6\u4e86\u5927\u91cf\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6750\u6599\u3002\n\u51e0\u5e74\u6765\uff0c\u6211\u53d1\u73b0\u6709\u4e00\u4e2a\u8d44\u6e90\u7279\u522b\u6709\u7528\uff0c\u90a3\u5c31\u662f\u5305\u542b\u975e\u7cfb\u7edfinit\u7cfb\u7edf\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cbe\u9009\u5217\u8868\u3002\u8fd9\u4e9b\u540d\u5355\u4ecd\u7136\u4ee5\u6863\u6848\u5f62\u5f0f\u5b58\u5728\u3002\n\u6211\u4e0d\u786e\u5b9a\u5b83\u4eec\u6700\u521d\u662f\u8c01\u5199\u7684\uff0c\u4f46\u5b83\u4eec\u8db3\u591f\u597d\u4e86\uff0c\u4e0d\u5e94\u8be5\u4e22\u5931\u5728\u67d0\u4e2a\u6863\u6848\u9986\u91cc\u3002\u8fd9\u4e9b\u5217\u8868\u8ba9\u6211\u770b\u5230\u4e86\u51e0\u4e2a\u9c9c\u4e3a\u4eba\u77e5\u7684\u53d1\u884c\u7248\uff0c\u5426\u5219\u6211\u6c38\u8fdc\u4e0d\u4f1a\u542c\u8bf4\u8fd9\u4e9b\u53d1\u884c\u7248\u3002\n\u6211\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u5f00\u59cb\u521b\u5efa\u4e0e\u6b64\u7c7b\u4f3c\u7684\u957f\u683c\u5f0f\u901a\u8baf\u7ec4\u5217\u8868\u3002\u6211\u89c1\u8fc7\u4e00\u4e9b\u50cf\u8fd9\u6837\u7684\u5217\u8868\u7a81\u7136\u51fa\u73b0\uff0c\u6bd4\u5982sysdfree\u4e0a\u7684\u5217\u8868\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u9ad8\u8d28\u91cf\u699c\u5355\u51fa\u4eba\u610f\u6599\u5730\u5c11\u4e4b\u53c8\u5c11\u3002\n\u7136\u800c\uff0c\u6709\u592a\u591a\u7684\u70b9\u51fb\u8bf1\u9975\u6392\u540d\u524d10\u7684Linux\u53d1\u884c\u7248\u5783\u573e\u535a\u5ba2\u963b\u585e\u4e86\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u4efb\u4f55\u641c\u7d22\u3002\u5b9e\u9645\u4e0a\u5305\u542b\u4e00\u4e9b\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u719f\u6089\u7684\u6709\u5173\u7cfb\u7edf\u7684\u5185\u5bb9\u7684\u5217\u8868\u662f\u4e00\u80a1\u65b0\u9c9c\u7a7a\u6c14\u3002\n\u5c06\u8fd9\u4e9b\u4e3a\u60a8\u63d0\u4f9b\u6240\u9700\u4fe1\u606f\u7684\u7b80\u5355\u5217\u8868\u4e0e\u901a\u8fc7DistroWatch\u7b49\u754c\u9762\u663e\u793a\u7684\u5927\u81f4\u76f8\u540c\u7684\u5217\u8868\u8fdb\u884c\u6bd4\u8f83\u3002\u5bf9\u4e8e\u8bd5\u56fe\u63a2\u7d22\u64cd\u4f5c\u7cfb\u7edf\u66f4\u5947\u7279\u8fb9\u7f18\u7684\u4eba\u6765\u8bf4\uff0cRAWER\u5217\u8868\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4ee4\u4eba\u6109\u5feb\u5f97\u591a\u7684\u5207\u5165\u70b9\u3002\n\u8fd9\u91cc\u6211\u53ea\u60f3\u63d0\u51e0\u4e2a\u6211\u4e2a\u4eba\u89c9\u5f97\u6709\u8da3\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u7531\u4e8e\u4e0a\u9762\u7684\u5217\u8868\uff0c\u6211\u6700\u521d\u9047\u5230\u4e86\u5176\u4e2d\u7684\u51e0\u4e2a\u3002\nvoid\u662f\u6211\u76ee\u524d\u6700\u559c\u6b22\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e5f\u662f\u6211\u6bcf\u5929\u4f7f\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u51e0\u5e74\u524d\uff0c\u5b83\u66f4\u50cf\u662f\u4e00\u9897\u9690\u85cf\u7684\u5b9d\u77f3\uff0c\u4f46\u79d8\u5bc6\u5df2\u7ecf\u516c\u4e4b\u4e8e\u4f17\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u5b83\u3002\n\u5b83\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u6b63\u5728\u8fc5\u901f\u4e0a\u5347\uff0c\u6211\u600e\u4e48\u63a8\u8350\u90fd\u4e0d\u4e3a\u8fc7\u3002\u5305\u7ba1\u7406\u5668xbps\u975e\u5e38\u51fa\u8272\uff0c\u5b83\u5728\u5f88\u591a\u65b9\u9762\u4e0ePacman\u975e\u5e38\u76f8\u4f3c\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8be5\u64cd\u4f5c\u7cfb\u7edf\u4e0eArch\u975e\u5e38\u76f8\u4f3c(\u4e5f\u662f\u6eda\u52a8\u53d1\u5e03)\uff0c\u4f46\u6211\u53d1\u73b0\u5b83\u66f4\u9002\u5408\u4e2a\u4eba\u4f7f\u7528\u3002\u5b9a\u5236\u7684\u521d\u59cb\u5316\u7cfb\u7edf\u4e5f\u975e\u5e38\u7b80\u5355\u6613\u7528\u3002\n\u6700\u521d\u8ba9\u6211\u8bd5\u7528\u7684\u662f\u4e00\u4f4d\u670b\u53cb\u63a8\u8350\u7ed9\u6211\u7684\uff0c\u56e0\u4e3a\u5b83\u6709MUSL\u7248\u672c\uff0c\u4ece\u90a3\u4ee5\u540e\u6211\u5c31\u4e00\u76f4\u4f7f\u7528\u5b83\u3002\nHelenOS\u662f\u4e00\u4e2a\u591a\u670d\u52a1\u5668/\u5fae\u5185\u6838\u64cd\u4f5c\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u5c1d\u8bd5\u8fc7GNU Hurd\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u5728\u5f88\u591a\u65b9\u9762\u975e\u5e38\u76f8\u4f3c\uff0c\u5728\u5176\u4ed6\u65b9\u9762\u53c8\u975e\u5e38\u4e0d\u540c\u3002\n\u8fd9\u91cc\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u5b9e\u73b0\u7684\uff0c\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u662f\u4ece\u5176\u4ed6\u6765\u6e90\u62c9\u8fdb\u6765\u7684\u3002\u56e0\u4e3a\u5b83\u76ee\u524d\u5b58\u5728\uff0c\u6240\u4ee5\u5b83\u5b9e\u9645\u4e0a\u4e0d\u80fd\u7528\u4e8e\u4efb\u4f55\u4e8b\u60c5\u3002\u8be5\u9879\u76ee\u7684\u76ee\u7684\u66f4\u591a\u7684\u662f\u9488\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7231\u597d\u8005\u7684\u5b9e\u9a8c\u3002\n\u6709\u5927\u91cf\u5173\u4e8eHelenOS\u53ca\u5176\u7ec4\u4ef6\u7684\u7814\u7a76\u9879\u76ee\u548c\u8bba\u6587\u3002\u51e0\u4e4e\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ee5\u4e0d\u540c\u4e8e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u6709\u8da3\u6216\u5b9e\u9a8c\u6027\u7684\u65b9\u5f0f\u6784\u5efa\u7684\u3002\u8fd9\u662f\u6211\u89c1\u8fc7\u7684\u6700\u597d\u7684\u4e1a\u4f59\u7231\u597d\u9879\u76ee\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e00\u3002\u5b83\u540c\u65f6\u5305\u542b\u4e86\u6570\u91cf\u60ca\u4eba\u7684\u6709\u8da3\u5b9e\u9a8c\u3002\nCalculate\u662f\u4e00\u4e2aGentoo\u6d3e\u751f\u51fd\u6570\uff0c\u6240\u6709\u8bbe\u7f6e\u90fd\u975e\u5e38\u76f8\u4f3c\u3002\u8fd9\u662f\u4e00\u79cd\u6eda\u52a8\u53d1\u5e03\u7684\u8bbe\u7f6e\uff0c\u5728\u4fc4\u8bed\u56fd\u5bb6\u975e\u5e38\u6d41\u884c\u3002\n\u5b83\u603b\u4f53\u4e0a\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u505a\u4e86\u975e\u5e38\u6709\u8da3\u7684\u6539\u53d8\uff0c\u5728\u91cd\u5927\u65b9\u9762\u6539\u8fdb\u4e86Gentoo\u3002\u8be5\u7cfb\u7edf\u66f4\u65b0\u7cfb\u7edf\u662f\u5bf9\u666e\u901aGentoo\u65b9\u6cd5\u7684\u5f88\u5927\u6539\u8fdb\uff0c\u5185\u6838\u5b89\u88c5\u6bd4Gentoo\u8981\u7b80\u5355\u5f97\u591a\u3002\n\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u6211\u4f1a\u8bf4\u5b83\u662fGentoo\uff0c\u4f46\u52a0\u4e0a\u4e86\u975e\u5e38\u7cbe\u786e\u7684\u4f18\u5316\uff0c\u8ba9\u4f60\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e1c\u897f\u3002\n\u5982\u679c\u4f60\u662fGentoo\u7684\u7c89\u4e1d\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u4f60\u5c1d\u8bd5\u4e00\u4e0b\u8fd9\u4e2a\u53d1\u884c\u7248\uff0c\u56e0\u4e3a\u5b83\u662fGentoo\u98ce\u683c\u7684\uff0c\u6709\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u53d8\u5316\u3002\nCRUX\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6211\u7684\u51e0\u4e2a\u670b\u53cb\u8654\u8bda\u5730\u4f7f\u7528\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u8f7b\u91cf\u7ea7\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6ce8\u91cd\u7b80\u5355\u6027\u3002\n\u5b83\u4f7f\u7528\u57fa\u4e8etar\u7684\u5305\u7cfb\u7edf\uff0c\u5373bsd-esque initscript\u3002\u636e\u6211\u6240\u77e5\uff0c\u5305\u88f9\u7684\u6e2f\u53e3\u7cfb\u7edf\u4e0eBSD\u4e00\u6a21\u4e00\u6837\u3002\n\u4f3c\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u62a5\u544a\u7684\u4e3b\u8981\u4e8b\u60c5\u662f\u5b83\u8fd0\u884c\u5f97\u975e\u5e38\u5feb\uff0c\u8fd9\u4e5f\u662f\u6211\u7684\u7ecf\u9a8c\u3002\n\u4e00\u4e2a\u6709\u8da3\u7684\u9879\u76ee\uff0c\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u5b8c\u5168\u7528Rust\u7f16\u5199\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u5fae\u5185\u6838\uff0c\u7075\u611f\u6765\u81eaPlan9\u548cMinix\u3002\n\u8fd9\u91cc\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u5199\u7684\uff0c\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u5916\u90e8\u7684\u4e1c\u897f\u88ab\u5438\u5f15\u8fdb\u6765\u3002\u8fd9\u662f\u7528\u50cfRust\u8fd9\u6837\u7684\u73b0\u4ee3\u8bed\u8a00\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u6b21\u4f1f\u5927\u7684\u5b9e\u9a8c\u3002\u8fd9\u79cd\u9879\u76ee\u7684\u5176\u4ed6\u4f8b\u5b50\u751a\u81f3\u90fd\u4e0d\u5b58\u5728\u3002\n\u8be5\u9879\u76ee\u5927\u591a\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\u3002\u5b83\u6ca1\u6709\u5f88\u591a\u53ef\u7528\u7684\u5957\u9910\uff0c\u4f46\u6b63\u5728\u7a33\u6b65\u589e\u957f\u3002\u5b83\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u4e0e\u8bb8\u591a\u5176\u4ed6\u7c7b\u4f3c\u7684\u5b9e\u9a8c\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u51e0\u4e4e\u5df2\u7ecf\u5728\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u8def\u4e0a\u4e86\u3002\n\u5982\u679c\u60a8\u5bf9\u9177\u793e\u533a\u5de5\u4f5c\u611f\u5174\u8da3", "note_en": "I recently noticed that the original  without-systemd.org site is down. It seems, from what I can tell, to have been replaced entirely by a less substantial site called  nosystemd.org.\n Whether you agree or disagree with the message of these sites, there was lots of incredible material collected on without-systemd.\n One resource that I found to be exceptionally useful for several years was the curated lists of operating systems with non-systemd init systems. These lists are still available in archival form.\n   I\u2019m unsure who originally wrote them, but they are good enough that they shouldn\u2019t be lost in an archive somewhere. These lists opened my eyes to several obscure distributions that I never would have heard of otherwise.\n I hope that more people start creating long-form distribution lists similar to this. I\u2019ve seen a few lists like these crop up, like the one on  sysdfree for example. Despite this, there are surprisingly few high-quality lists on the topic.\n There is however an excess of clickbait Top-10 Linux distro spam blogs that clog up any search on the subject. Lists that actually contain some content about systems that everyone isn\u2019t familiar with are a breath of fresh air.\n Compare these simple lists that give you just as much information as you need, to roughly the same list shown through an interface like  DistroWatch for example. The rawer lists are actually a much more pleasant entry point for people trying to explore the weirder edges of operating systems.\n Here I\u2019m just going to mention a few operating systems that I personally have found interesting. A few of these I originally encountered because of the lists above.\n  Void is hands down my current favorite operating system and it is what I\u2019m using for my daily driver. Several years ago it was more of a hidden gem, but the secret is out and at this point everyone knows about it.\n It is quickly rising in popularity, and I can\u2019t recommend it enough. The package manager xbps is outstanding, it is very similar to pacman in many ways.\n The operating system as a whole is very similar to Arch (it is also rolling release), but I find it nicer to use personally. The custom init system is also just very simple and easy to use.\n What initially lead me to trying it out was a friend recommending it to me because it has a musl edition, and I have used it ever since.\n   HelenOS is a multiserver/microkernel operating system. If you have ever experimented with GNU Hurd you will probably find it to be extremely similar in many ways, and different in others.\n Pretty much everything here is implemented completely from scratch, almost nothing gets pulled in from other sources. It isn\u2019t actually usable for anything as it exists currently. The aim of the project is more to be an experiment aimed at OS enthusiasts.\n There are tons of  research projects and papers written about HelenOS and its components. Almost every component has been built in an interesting or experimental way that varies from other operating systems. It is one of the best hobby project operating systems I\u2019ve encountered. It encompasses an incredible number of interesting experiments concurrently.\n   Calculate is a Gentoo derivative with everything set up very similarly. It is a rolling-release setup that is very popular in Russian-speaking countries.\n It is similar overall but makes very interesting changes that improve upon Gentoo in significant ways. The system update system is a great improvement on the common Gentoo method, and the kernel installation is much less difficult than on Gentoo.\n Essentially, I would say it is Gentoo but with very precise optimizations added on that allow you to take advantage of what the OS has to offer more easily.\n If you are a fan of Gentoo, I urge you to give this distribution a shot, as it is Gentoo-style with some very interesting changes.\n   CRUX is an interesting operating system that several of my friends use religiously. It is an incredibly lightweight operating system that focuses on simplicity.\n It uses a tar based package system, BSD-esque initscripts. The ports system for packages is exactly like BSD from what I can tell.\n The main thing everyone seems to report is that it runs extremely fast, and this has been my experience as well.\n    An interesting project with the goal of building an operating system that is completely written in Rust. The project is a microkernel that takes inspiration from Plan9 and Minix.\n Almost everything here is written completely from scratch with almost nothing outside pulled in. It is a great experiment in designing an operating system from scratch with a modern language like Rust. Few other examples of this kind of project even exist.\n The project mostly exists in an experimental stage. It does not have many packages available, but is growing steadily. It isn\u2019t ready for general use just yet, but unlike a lot of other similar experiments it is almost on its way there.\n If you are interested in a cool community working actively on a project with a unique design philosophy, I definitely recommend checking out Redox.\n    Bedrock is a very odd operating system with a unique philosophy. Build your own thing however you could possibly imagine literally, by mixing and matching very disparate components from other distributions seamlessly.\n You can do odd combinations with other distributions possibly, but the Bedrock system makes the process much less work for the user. The distribution includes tools that allow these choices to be made in several potentially odd or convoluted mixtures with comparatively little work on the users part.\n It is for people who want to experiment with their setup in potentially weird ways. I don\u2019t know why you would need or desire some of the combinations that this distribution is capable of, but it is there should you ever want such things.\n   The modern continuation of the OpenBeOS project. The first thing everyone always says about it is that it is one of the most beautiful operating systems alongside things like  ElementaryOS. If you are interested in 90\u2019s user interface design, you have to check it out.\n I\u2019m not certain about usability, as it seems to have a limited set of packages available in the HaikuDepot package manager. Community ports are available for many things, but I haven\u2019t explored how much is available.\n It states as a goal that it wants to be an operating system for personal computing, and it seems to fit this pretty well. If you don\u2019t want to use your computer for much more than surfing the internet or writing text it seems ideal.\n   GuixSD is a system distribution built on the Guix package system. It uses a  functional package manager that is very similar in design to  Nix. It is one of the few operating systems that has been designated as free by the  Free Software Foundation.\n If you like the way Nix works and are a fan of Scheme, this is worth trying out. It is a neat project with some unique features, but it is more fun as an intellectual curiosity than as something practical.\n My interest in this operating system has been solely based on my love of all things Scheme. If you are interested in Scheme, you have to try it out, everyone else probably won\u2019t enjoy it.", "posttime": "2020-05-02 18:03:53", "tags": "\u64cd\u4f5c\u7cfb\u7edf,\u7cfb\u7edf,systems,system", "title": "\u4e0d\u5e26\u7cfb\u7edf\u7684\u64cd\u4f5c\u7cfb\u7edf", "title_en": "Operating Systems Without Systemd", "transed": 0, "url": "https://annihilatormodule.com/2020-01-18/systemd-archives", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "\u7cfb\u7edf", "systems", "system"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000277, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56db\u5e74\u524d\uff0c\u6211\u7528Java\u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5149\u7ebf\u8ddf\u8e2a\u5668\u6765\u5448\u73b0\u6e90\u4ee3\u7801\u4e2d\u786c\u7f16\u7801\u7684ascene\u3002\u5728\u5199\u5b8c\u8fd9\u672c\u5149\u7ebf\u8ddf\u8e2a\u5668\u540e\uff0c\u6211\u5f00\u59cb\u4e86\u89e3\u5230\u4e92\u8054\u7f51\u4e0a\u514d\u8d39\u63d0\u4f9b\u7684\u590d\u6742\u7684\u5149\u7ebf\u8ddf\u8e2a\u5f15\u64ce\u3002POV-Ray\u4f3c\u4e4e\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5f15\u64ce\u4e4b\u4e00\uff0c\u6211\u51b3\u5b9a\u5b66\u4e60\u4f7f\u7528\u5b83\u3002\u7136\u800c\uff0c\u5728\u8fc7\u53bb\u7684\u56db\u5e74\u91cc\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u82b1\u65f6\u95f4\u53bb\u5b66\u4e60\u5b83\u3002\u6700\u540e\uff0c\u57282013\u5e745\u6708\uff0c\u6211\u51b3\u5b9a\u81ea\u5b66\u4f7f\u7528POV-Ray\u8fdb\u884c\u5149\u7ebf\u8ddf\u8e2a\u3002\u8fd9\u9879\u6d3b\u52a8\u5305\u62ec\u5b66\u4e60\u2026\u2026\u3002\n\u8be5\u573a\u666f\u7531\u4e09\u4e2a\u7403\u4f53\u548c\u4e09\u4e2a\u957f\u65b9\u4f53\u7ec4\u6210\u3002\u573a\u666f\u7531\u4e09\u4e2a\u70b9\u5149\u6e90\u7167\u4eae\u3002\n\u4e00\u4e2a\u5149\u6e90\u4ece\u573a\u666f\u7684\u53f3\u4e0a\u89d2\u7167\u5c04\uff0c\u8be5\u5149\u6e90\u5728\u76f8\u673a\u540e\u9762\u3002\u8fd9\u4f7f\u5f97\u7eff\u8272\u65b9\u6846\u7684\u9634\u5f71\u6295\u5c04\u5728\u84dd\u8272\u7684\u7403\u4e0a\uff0c\u84dd\u8272\u7684\u7403\u7684\u9634\u5f71\u6295\u5c04\u5728\u9ec4\u91d1\u6d77\u5cb8\u4e0a\u3002\n\u53e6\u4e00\u4e2a\u662f\u4ece\u573a\u666f\u7684\u5de6\u4fa7\u53d1\u51fa\u7684\u5149\u8292\u3002\u8fd9\u4e2a\u5149\u6e90\u4e5f\u5728\u76f8\u673a\u540e\u9762\u3002\u8fd9\u4f1a\u5c06\u7ea2\u8272\u65b9\u6846\u7684\u8f83\u5c0f\u9634\u5f71\u6295\u5c04\u5230\u84dd\u7403\u4e0a\uff0c\u5c06\u7eff\u8272\u65b9\u6846\u7684\u9634\u5f71\u6295\u5c04\u5230\u6a58\u5b50\u7403\u4e0a\uff0c\u5c06\u84dd\u8272\u65b9\u6846\u7684\u9634\u5f71\u6295\u5c04\u5230\u6d45\u7c89\u8272\u65b9\u6846\u4e0a\u3002\n\u5728\u6d74\u7f38\u7684\u53f3\u4e0b\u89d2\u6709\u7b2c\u4e09\u4e2a\u5149\u6e90\u3002\u8fd9\u4e2a\u5149\u6e90\u51fa\u73b0\u5728\u6444\u50cf\u673a\u7684\u524d\u9762\uff0c\u8fd9\u4f7f\u5f97\u7ea2\u8272\u65b9\u6846\u7684\u9634\u5f71\u66f4\u957f\u5730\u6295\u5c04\u5728\u84dd\u8272\u7684\u7403\u4e0a\u3002\n\u767d\u8272\u65b9\u6846\u4f4d\u4e8e\u539f\u70b9\u7684\u4e2d\u5fc3\u3002\u76f8\u673a\u88ab\u653e\u7f6e\u5728\u539f\u70b9\u540e\u976210\u4e2a\u5355\u4f4d\u3002\u4e00\u4e2a\u5149\u6e90\u88ab\u653e\u7f6e\u5728\u539f\u70b9\u540e\u976210\u4e2a\u5355\u4f4d\uff0c\u5373\u76f8\u673a\u6240\u5728\u7684\u76f8\u540c\u4f4d\u7f6e\u3002\u8fd8\u6709\u53e6\u4e00\u4e2a\u5149\u6e90\u4ece\u573a\u666f\u7684\u5de6\u4e0a\u89d2\u7167\u5c04\u3002\n\u9664\u53f3\u4e0b\u89d2\u8c61\u9650\u7684\u4e09\u4e2a\u65b9\u6846\u5916\uff0c\u6240\u6709\u65b9\u6846\u7684\u5c3a\u5bf8\u90fd\u4e0e\u767d\u8272\u65b9\u6846\u76f8\u540c\u3002\n\u7ea2\u8272\u65b9\u6846\u5e73\u79fb\u4e3a&lt\uff1b2\uff0c2\uff0c2&gt\uff1b\uff0c\u5373\u8ddd\u539f\u70b9\u5de6\u4fa72\u4e2a\u5355\u4f4d\uff0c\u539f\u70b9\u4e0a\u65b92\u4e2a\u5355\u4f4d\uff0c\u5728\u4e0e\u56fe\u50cf\u5782\u76f4\u7684\u65b9\u5411\u4e0a\u8ddd\u539f\u70b9\u66f4\u8fdc2\u4e2a\u5355\u4f4d\u3002\n\u7eff\u8272\u65b9\u6846\u88ab\u5e73\u79fb\u4e3a&lt\uff1b5\uff0c5\uff0c2&gt\uff1b\uff0c\u5373\u5b83\u5df2\u8fdb\u4e00\u6b65\u5411\u53f3\u4e0a\u89d2\u79fb\u52a8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u66f4\u591a\u7684\u5b83\u7684\u5de6\u9762\u548c\u5e95\u9762\u3002\n\u84dd\u8272\u65b9\u6846\u88ab\u8f6c\u6362\u4e3a&lt\uff1b5\uff0c5\uff0c5&gt\uff1b\uff0c\u5373\u5b83\u88ab\u653e\u7f6e\u5728\u7eff\u8272\u65b9\u6846\u540e\u97623\u4e2a\u5355\u4f4d\u3002\u7ed3\u679c\uff0c\u5b83\u770b\u8d77\u6765\u6bd4\u7eff\u8272\u7684\u76d2\u5b50\u5c0f\u3002\n\u9ec4\u8272\u65b9\u6846\u9996\u5148\u7ed5z\u8f74\u65cb\u8f6c45\u00b0\uff0c\u7136\u540e\u5de6\u79fb5\u4e2a\u5355\u4f4d\u3002\n\u9752\u8272\u957f\u65b9\u4f53\u9996\u5148\u5de6\u79fb5\u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u957f\u65b9\u4f53\u7ed5z\u8f74\u65cb\u8f6c45\u00b0\u3002\u5728\u6e32\u67d3\u7684\u56fe\u50cf\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u957f\u65b9\u4f53\u7531\u4e8e\u65cb\u8f6c\u800c\u7ed5z\u8f74\u8fd0\u884c\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u8f68\u9053\u4e0a\u5360\u636e\u4e86\u4e00\u4e2a\u8ddd\u79bb\u9ec4\u8272\u957f\u65b9\u4f5345\u00b0\u7684\u65b0\u4f4d\u7f6e\u3002\n\u68d5\u8272\u76d2\u5b50\u7684\u957f\u5ea6\u9996\u5148\u6cbfx\u8f74\u7ffb\u500d\uff0c\u7136\u540e\u7ed5y\u8f74\u65cb\u8f6c45\u00b0\u3002\u7ed3\u679c\uff0c\u62c9\u957f\u7684\u8138\u5411\u5de6\u65cb\u8f6c\u3002\u7136\u540e\u5c06\u5176\u5e73\u79fb\u5230\u539f\u70b9\u4e0b\u65b9\u7684\u65b0\u4f4d\u7f6e\uff0c\u7a0d\u5fae\u9760\u53f3\u4e00\u70b9\u3002\n\u7c89\u7ea2\u8272\u7684\u957f\u65b9\u4f53\u9996\u5148\u7ed5y\u8f74\u65cb\u8f6c45\u00b0\u3002\u7136\u540e\u6cbfx\u8f74\u6309\u56e0\u5b502\u8fdb\u884c\u7f29\u653e\u3002\u7ed3\u679c\uff0c\u6cbfx\u8f74\u79fb\u52a8\u7684\u76d2\u5b50\u7684\u5bf9\u89d2\u7ebf\u4f3c\u4e4e\u88ab\u62c9\u957f\u4e86\u3002\u6700\u540e\uff0c\u6b64\u6846\u88ab\u5e73\u79fb\u5e76\u653e\u7f6e\u5728\u68d5\u8272\u6846\u7684\u6b63\u4e0b\u65b9\u3002\n\u6817\u8272\u76d2\u5b50\u9996\u5148\u6cbfy\u8f74\u65cb\u8f6c45\u00b0\u3002\u7136\u540e\u5e73\u79fb\u5230\u7c89\u7ea2\u8272\u76d2\u5b50\u6b63\u4e0b\u65b9\u7684\u4e00\u4e2a\u65b0\u4f4d\u7f6e\u3002\u6700\u540e\uff0c\u6cbfx\u8f74\u6309\u56e0\u5b502\u8fdb\u884c\u7f29\u653e\u3002\u7ed3\u679c\uff0c\u957f\u65b9\u4f53\u4f3c\u4e4e\u6cbf\u7740x\u8f74\u8fdb\u4e00\u6b65\u79fb\u52a8\u3002\u6b64\u5916\uff0c\u5b83\u6cbfx\u8f74\u7684\u5bf9\u89d2\u7ebf\u4f3c\u4e4e\u662f\u62c9\u4f38\u7684\u3002\n\u6b64\u573a\u666f\u4e2d\u6709\u4e24\u4e2a\u5149\u6e90\uff1a\u4e00\u4e2a\u4f4d\u4e8e\u6444\u5f71\u673a\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u4f4d\u4e8e\u573a\u666f\u7684\u5de6\u4fa7\u3002\n\u7531\u4e8ePhong\u9ad8\u4eae\u663e\u793a\uff0c\u7403\u4f53\u548c\u5706\u73af\u770b\u8d77\u6765\u662f\u955c\u9762\u53cd\u5c04\u7684\u3002\u7ed3\u679c\uff0c\u5728\u5929\u7a7a\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u4eae\u70b9\u3002\u4e00\u4e2a\u70b9\u66f4\u9760\u8fd1\u6444\u5f71\u673a\uff0c\u800c\u53e6\u4e00\u4e2a\u70b9\u5728\u7403\u4f53\u7684\u5de6\u4fa7\u3002\u8fd9\u4e9b\u6591\u70b9\u662f\u7531\u66ae\u5149\u4e4b\u6e90\u9020\u6210\u7684\u3002\u5728\u820c\u5c16\u4e0a\u4e5f\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4f46\u66f4\u6697\u6de1\u7684\u95ea\u5149\u70b9\u3002\u5706\u73af\u4e0a\u7684\u955c\u9762\u53cd\u5c04\u9ad8\u5149\u770b\u8d77\u6765\u5f88\u8f6f\uff0c\u56e0\u4e3a\u7528\u4e8ePhong\u9ad8\u5149\u7684\u9971\u548c\u5ea6\u503c\u8f83\u5c0f\uff0c\u800c\u7528\u4e8e\u5706\u73af\u7684\u9971\u548c\u5ea6\u8f83\u4f4e\u3002\n\u9664\u4e86\u4f7f\u7403\u4f53\u955c\u9762\u53cd\u5c04\u5916\uff0c\u5b83\u8fd8\u5177\u6709\u75af\u72c2\u7684\u8f7b\u5fae\u53cd\u5c04\u3002\u56e0\u6b64\uff0c\u5728\u7403\u4f53\u7684\u4e0b\u534a\u7403\u53ef\u4ee5\u770b\u5230\u5fae\u5f31\u7684\u73af\u9762\u53cd\u5c04\u3002\n\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\u6709\u4e24\u4e2a\u5149\u6e90\uff1a\u4e00\u4e2a\u5728\u96ea\u6a47\u7684\u4e2d\u5fc3\uff0c\u53e6\u4e00\u4e2a\u5728\u4e0e\u6444\u50cf\u673a\u76f8\u5bf9\u7684\u5899\u58c1\u7684\u9876\u90e8\uff0c\u5899\u58c1\u662f\u6709\u5149\u6cfd\u7684\uff0c\u56e0\u6b64\u7a0d\u5fae\u53cd\u5c04\u4e86\u573a\u666f\u3002\n\u7167\u76f8\u673a\u5bf9\u9762\u7684\u5899\u4e0a\u6709\u4e00\u9762\u955c\u5b50\u3002\u8fd9\u9762\u955c\u5b50\u6709\u4e00\u4e2a\u6728\u6846\u3002\u6444\u50cf\u673a\u540e\u9762\u5899\u4e0a\u7684\u4e00\u6247\u95e8\u7684\u5012\u5f71\u53ef\u4ee5\u5728\u6444\u50cf\u673a\u5bf9\u9762\u7684\u5899\u4e0a\u770b\u5230\u3002\n\u6709\u4e00\u4e2a\u6c34\u6676\u7403\u653e\u5728\u6728\u5757\u4e0a\u3002\u5730\u677f\u4e0a\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u5f69\u8272\u7403\u3002\n\u8fd9\u4e2a\u573a\u666f\u4e2d\u7684\u623f\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u573a\u666f\u4e2d\u7684\u623f\u95f4\u76f8\u4f3c\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u5730\u677f\u662f\u53cd\u5149\u7684\uff0c\u800c\u4e0d\u662f\u5899\u58c1\u3002\u8fd9\u4e2a\u573a\u666f\u4e2d\u6ca1\u6709\u7403\uff0c\u800c\u6728\u5757\u4e0a\u6709\u4e24\u4e2a\u68f1\u955c\u3002\u6444\u50cf\u673a\u540e\u9762\u7684\u95e8\u7684\u5012\u5f71\u53ef\u4ee5\u4ece\u6444\u50cf\u673a\u5bf9\u9762\u5899\u4e0a\u7684\u955c\u5b50\u4e2d\u770b\u5230\u3002\n\u8be5\u573a\u666f\u5305\u542b\u6f02\u6d6e\u5728\u6c34\u9762\u4e0a\u7684\u6a61\u76ae\u7ba1\u3002\u6709\u51e0\u4e2a\u5730\u65b9", "note_en": "Four years ago, I wrote  a simple ray tracerin Java to render ascene hard-coded in the source code. After writing this ray tracer, Icame to know about sophisticated ray tracing engines available for freeon the internet. POV-Ray seemed to be one of the most popular enginesand I decided to learn to use it. However, I never managed to devotetime to learning it in the last four years. Finally, in May 2013, Idecided to teach myself to do ray tracing with POV-Ray. This activityconsisted of learning the  ...\n    This scene consists of three spheres and three boxes. The scene isilluminated by three point light sources.\n One light source is shining from the top right corner of the scene.This light source is behind the camera. This casts the shadow of thegreen box on the blue ball and that of the blue ball on the yellowone.\n Another one is shining from the left side of the scene. This lightsource is also behind the camera. This casts the smaller shadow ofthe red box on the blue ball, that of the green box on the orangeball and that of the blue ball on the pale pink box.\n There is a third light source at the bottom right corner of thescene. This light source is present slightly in front of the camera.This casts the longer shadow of the red box on the blue ball.\n The white box is centred at the origin. The camera is placed 10units behind the origin. One light source is placed 10 units behindthe origin, i.e. at the same place where the camera is. There isanother light source shining from the top left corner of the scene.\n All boxes except the three boxes in the bottom-right quadrant ofthis image have the same dimensions as that of the white box.\n The red box is translated to &lt;2, 2, 2&gt;, i.e. 2 units left fromthe origin, 2 units above the origin and 2 units further away fromthe origin in the direction perpendicular to the image.\n The green box is translated to &lt;5, 5, 2&gt;, i.e. it has beenshifted further way towards the top right corner. As a result we cansee more of its left and bottom faces.\n The blue box is translated to &lt;5, 5, 5&gt;, i.e. it is placed 3units behind the green box. As a result it appears smaller than thegreen box.\n The yellow box is first rotated around z axis by 45\u00b0 and thenshifted left by 5 units\n The cyan box is first shifted left by 5 units and then the box isrotated around z axis by 45\u00b0. In the rendered image, it canbe seen that the whole box as a whole orbits around the z axis dueto the rotation and occupies a new place 45\u00b0 away from theyellow box in this orbit.\n The length of the brown box is first doubled along x axis, then itis rotated 45\u00b0 around y axis. As a result, the elongated faceis rotated towards left. Then it is translated to a new positionbelow the origin, a little further away towards the right.\n The pink box is first rotated 45\u00b0 around y axis. Then it isscaled by a factor of 2 along x axis. As a result, the diagonal ofthe box running along x axis seems to be elongated. Finally, thisbox is translated and placed right below the brown box.\n The maroon box is first rotated along y axis by 45\u00b0. Then itis translated to a new position right below the pink box. Finally,it is scaled by a factor of 2 along the x axis. As a result, the boxappears to have moved further along the x axis. Also, its diagonalalong the x axis appears to be stretched.\n There are two light sources in this scene: one where the camera issituated, and another on the left side of the scene.\n The sphere and the torus appear to be specular due to Phonghighlighting. As a result, two bright shiny spots can be seen on thesphere as well. One spot is closer to the camera while the other oneis on the left side of the sphere. These spots are due to the twolight sources. Similar but fainter shiny spots can be seen on thetorus as well. The specular highlights on the torus appear fainterbecause a less saturation value was used for the Phong highlightingwas used for the torus.\n In addition to making the sphere specular, it has also been madeslightly reflective. As a result, a faint reflection of the toruscan be seen in the bottom hemisphere of the sphere.\n There are two light sources in this scene: one at the centre of theceiling and another at the top of the wall opposite to the camera.The walls are glossy, and thus reflect the scene slightly.\n There is a mirror on the wall opposite to the camera. The mirror hasa wooden frame. The reflection of a door in the wall behind thecamera can be seen in the wall opposite to the camera.\n There is a crystal ball placed on a wooden block. There are twoother coloured balls lying on the floor.\n The room in this scene is similar to the room in the previous scene.However, in this scene the floor is reflective instead of the walls.The balls are missing from this scene and there are two prismsinstead on the wooden block. The reflection of the door behind thecamera can be seen in the mirror on the wall opposite to the camera.\n This scene contains a rubber tube floating on water. There areripples on the surface of water. The ripples have been made slightlyturbulent in order to make it look a little natural.\n This scene contains a wooden block and spheres with various texturesplaced on the floor of a room. The block is made of pine wood. Thereis a ruby glass sphere placed on the block. There is a pink granitesphere placed between the mirror and the wooden block. The leftmostsphere is made of white marble. The one to its right is made ofbrown agate. The next sphere that looks dark is made of blue agate.The reflective sphere on the floor is made of aluminium. Therightmost sphere is made of red marble.  ...\n This scene shows light entering a room through a window. Isotropicscattering makes the light beam coming through the window visible.\n This scene contains water and sky. The sky contains clouds and thewater contains irregular ripples. The water reflects the sky.\n This scene contains a few marble balls and metal rods placed on awooden plank. The scene is illuminated by three area light sources.The area light sources cast soft shadows. The light sources fadeaway with distance. As a result, the scene at the top left corner ofthe image appears to be darker than the rest of the scene. The softshadows and the fading light sources make this image seem quitephotorealistic.\n This scene contains six coloured balls lying on a tiled floor. Thecamera is focussed on the white ball at the centre. The shallowdepth of field causes other balls to blurred.\n This scene contains a white pawn and a black pawn placed on achessboard. There are two light sources shining on the chessboard:one from the left side and one behind the chessboard.\n  This scene contains a globe placed on a glossy surface. The globewas created by wrapping a map of the earth around a sphere. The mapused to create this globe can be found in the  maps directory.\n This scene is an attempt to model Saturn along with its fiveprominent rings. The planet and the rings are drawn to scale.\n The innermost ring is the D ring. The next ring that appears to betranslucent is the C ring. The next opaque ring is called the Bring. Then there is a gap called the Cassini Division. After thisdivision, lies the A ring. The A ring contains a thin gap called theEncke Gap. The outermost thin ring is the F ring. The region betweenthe A ring and the F ring is called the Roche Division.\n The shadow of the gas giant on the rings can be seen in the rightside of this image.\n This scene represents the models of the eight planets of our solarsystem. The sizes of the planets are to scale in this scene. Namesof the planets from left to right: Jupiter, Saturn, Uranus, Neptune,Earth, Venus, Mars and Mercury.\n This scene contains a waxing half moon. This scene was created bywrapping a map of the moon around a sphere and rotating the spherein order to show the side of the moon that is visible from theEarth.\n This scene contains a white canoe floating on water. The hull of thecanoe has been modelled using ellipsoids. The hollow section of thehull has been modelled by removing smaller ellipsoids from a largeellipsoid that forms the outer surface of the hull of the canoe. Thecanoe contains three wooden seats. The water is slightly reflective.The water reflects the sky, and thus appears blue in colour. Adistorted reflection of the canoe can be seen in the water.\n This scene contains half a dozen eggs lying on a tiled surface. Eachegg is modelled by combining halves of a prolate ellipsoid and asphere. The ellipsoid is cut into two halves at the equator. Onehalf is used to model the little end of each egg. The big end ofeach egg is formed using a hemisphere cut off from the sphere. Thelength of the semi-major axis of the prolate ellipsoid is 1.6 timesthat of its semi-minor axis. The tiled surface on which the eggs arekept are slightly glossy  ...\n This scene contains a glass of water. There is only one point lightsource in this scene shining from the left side. The water has beenmodelled as a material with refractive index of 1.33. The reflectionof light by the water has been modelled using Fresnel reflection.\n This scene contains a grid made of glass nodes and edges. Each nodein the grid is spherical. Each edge is cylindrical. The edgesconnect adjacent nodes.\n This scene shows the earth and sky meeting at the horizon. A faintfog can be seen near the horizon. The shadows of the clouds can beseen on the ground. A viewing angle of 90\u00b0 has been used to modelthe camera.\n This scene contains two glasses kept in a kitchen corner. Thekitchen has tiled walls. A faint reflection of the window in thekitchen can be seen on the wall behind the wine glass. Lightentering from this window illuminates the kitchen. There is anotheryellow light source attached to the top of the wall behind theglasses.\n This scene shows the inside view of a kaleidoscope. The kaleidoscopeis constructed using three rectangular mirrors placed at 60\u00b0 angleto one another so that they form an equilateral triangle shapedempty space between them. The triangular empty space between themirrors can be spotted by looking for the orange disc at the centreof this image. The pink, green and purple discs around this orangedisc are placed at three corners of this triangle.\n There are a few more objects, such as coloured grains, littlepyramids and pearls placed in this empty space. Multiple reflectionsof these objects can be seen in the three mirrors surrounding theempty space. The reflection of the empty space can be seen as faintdark triangles throughout this scene.\n This scene contains three glass dice placed on a wooden surface. Thescene is illuminated by three fading area light sources.\n  The scenes above were rendered using POV-Ray 3.6 on a Debian system. Thesteps below describe how POV-Ray 3.6 was installed.\n Download POV-Ray 3.6 for Linux from http://www.povray.org/ftp/pub/povray/Official/Linux/povlinux-3.6.tgz.In case, the above URL becomes unavailable in future, a copy of thetarball can be obtained from  tgz/povlinux-3.6.tgz.\n    Enter the following commands to view the version and help message ofpovray and its man page.\n Now povray can be executed and its man page can be seen from anydirectory simply by entering the following commands.\n  This error occurred because the script looks for  i?86* or athlon* in the output of  uname -m, but the output on my systemwas:  x86_64.\n This error occurred because the script is executed by /bin/shby default. This was resolved by executing the script with bash.\n   povray -W960 -H720 scene01.povpovray -W960 -H720 scene02.povpovray -W960 -H720 scene03.povpovray -W960 -H720 +A0.0 scene04.povpovray -W960 -H720 +Q9 +A0.0 +AM2 +R5 -J scene05.povpovray -W960 -H720 +A0.0 +AM2 scene06.povpovray -W960 -H720 +A0.0 +AM2 scene07.povpovray -W960 -H720 +A0.0 scene08.povpovray -W960 -H720 +A0.0 +AM2 scene09.povpovray -W960 -H720 +A0.0 scene10.povpovray -W960 -H720 scene11.povpovray -W960 -H720 +A0.0 +AM2 scene12.povpovray -W960 -H720 +A0.0 scene13.povpovray -W960 -H720  ...\n  The following is a list of tutorials and articles I studied to teachmyself some elementary ray tracing with POV-Ray.\n   Some prior knowledge of coordinate geometry was helpful in describingsome of the scenes. I found the POV-Ray scene description languagepretty simple and easy to learn. In these 25 days, I managed to learn anumber of useful features and concepts from online tutorials, articles,available source code of POV-Ray scenes described by other POV-Rayusers, and managed to describe and render many simple scenes. However,there were a lot of options, features, language directives, effects,etc. that I could  ...\n  This is free and open source software. You can use, copy, modify,merge, publish, distribute, sublicense, and/or sell copies of it,under the terms of the MIT License. See  LICENSE.md for details.\n This software is provided &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND,express or implied. See  LICENSE.md for details.", "posttime": "2020-05-02 18:03:51", "tags": "pov,ray,\u65b9\u6846,scene", "title": "\u4f7f\u7528POV-Ray\u8fdb\u884c\u5149\u7ebf\u8ddf\u8e2a\uff1a25\u5929\u518525\u4e2a\u573a\u666f(2013)", "title_en": "Ray Tracing with POV-Ray: 25 scenes in 25 days (2013)", "transed": 0, "url": "https://github.com/spcask/pov-ray-tracing", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["pov", "ray", "\u65b9\u6846", "scene"]}, {"category": "", "categoryclass": "", "imagename": "a5296d7d16cb3532199e11fc199e8f36.png", "infoid": 1000276, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u5728\u5bb6\u5ead\u7f51\u7edc\u4e2d\u8fd0\u884cK8\u7684\u6307\u5357\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u5bb6\u5ead\u670d\u52a1\u5668-\u8fd0\u884c\u60a8\u7684\u535a\u5ba2\u3001\u5a92\u4f53\u5e93\u3001\u667a\u80fd\u5bb6\u5c45\u3001\u5ba0\u7269\u9879\u76ee\u7b49\u3002\u96c6\u7fa4\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u8bbe\u7f6e\uff0c\u4f46\u6211\u4eec\u5f00\u53d1\u4eba\u5458\u592a\u8fc7\u4f9d\u8d56\uff0c\u6211\u4eec\u5fd8\u8bb0\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u7f51\u7edc\u548c\u5176\u4ed6\u4f4e\u7ea7\u522b\u7684\u4e1c\u897f-\u6211\u53d1\u73b0\u8fd9\u79cd\u4f53\u9a8c\u5f88\u6709\u6559\u80b2\u610f\u4e49\u3002\n\u7fa4\u96c6\u5c06\u670d\u52a1\u4e8e\u771f\u5b9e\u7684\u5de5\u4f5c\u8d1f\u8f7d-\u6211\u4eec\u5c06\u5904\u7406\u5c06\u5176\u66b4\u9732\u7ed9\u4e92\u8054\u7f51\u3001\u5bb6\u5ead\u7f51\u7edc\u4e2d\u7684IP\u5206\u914d\u3001\u5408\u7406\u7684\u5b89\u5168\u6027\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u548c\u76d1\u63a7\u3002\u5b83\u9762\u5411\u5bb6\u5ead\u7f51\u7edc\uff0c\u4e0d\u4f9d\u8d56\u8d1f\u8f7d\u5747\u8861\u5668\u3001SAN\u3001\u591a\u4e2a\u516c\u7f51IP\u6216\u4efb\u4f55\u5176\u4ed6\u82b1\u54e8\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4f1a\u5c3d\u91cf\u4fdd\u6301\u7b80\u5355(\u9605\u8bfb\u53ef\u9760)--\u6ca1\u6709\u2018\u4f01\u4e1a\u2019\u7684\u82b1\u8a00\u5de7\u8bed\u3002\n\u8981\u7ee7\u7eed\uff0c\u8bf7\u786e\u4fdd\u60a8\u719f\u6089\u57fa\u672c\u7684Kubernetes\u6982\u5ff5\uff0c\u4e86\u89e3\u4ec0\u4e48\u662f\u4e3b\u8282\u70b9\u3001\u4ee3\u7406\u3001LoadBalancer\u670d\u52a1\u3001\u90e8\u7f72\u3001\u5165\u53e3\u3001\u6301\u4e45\u5377\u7b49\u3002\n\u8ba9\u6211\u4eec\u628aK8\u96c6\u7fa4\u770b\u4f5c\u4e00\u4e2a\u5206\u5c42\u7684\u86cb\u7cd5\uff0c\u770b\u770b\u6bcf\u4e00\u5c42\u3002\n\u9876\u90e8\u662f\u60a8\u6b63\u5728\u7f16\u5199\u548c/\u6216\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f-\u8fd9\u662f\u771f\u6b63\u63d0\u4f9b\u4ef7\u503c\u7684\u90e8\u5206\uff0c\u4e5f\u662f\u5f00\u53d1\u4eba\u5458\u82b1\u8d39\u5927\u90e8\u5206\u65f6\u95f4\u7684\u5730\u65b9\u3002\u8fd9\u53ef\u80fd\u662f\u4f60\u7684WordPress\u535a\u5ba2\uff0c\u4f60\u5199\u7684\u4e00\u4e9bAPI\u548c\u4f60\u7684\u6bd4\u7279\u5e01\u4ea4\u6613\u673a\u5668\u4eba\u3002\n\u4e0b\u4e00\u7ea7\u662f\u7528\u4e8e\u7ba1\u7406\u548c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1-\u5373\u60a8\u81ea\u5df1\u7684MySQL\u6570\u636e\u5e93\u3001ELK\u5806\u6808\u3001\u76d1\u63a7\u7b49\u3002\u5b83\u4eec\u4e0d\u5fc5\u5728\u60a8\u7684\u7fa4\u96c6\u4e2d\u8fd0\u884c-Amazon/Azure/GCP\u63d0\u4f9bPaaS\u7248\u672c\u53ca\u5176\u6258\u7ba1\u7684K8\u670d\u52a1\u3002DevOps\u548c\u7ba1\u7406\u5458\u5728\u8fd9\u91cc\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u3002\n\u5728\u7cfb\u7edf\u7ea7\u522b\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u7ec4\u6210\u529f\u80fd\u7fa4\u96c6\u7684\u7ec4\u4ef6-\u60a8\u4e0d\u80fd\u8df3\u8fc7\u8fd9\u4e9b\u7ec4\u4ef6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff1a\n\u8f83\u5c0f\u7684\u6258\u7ba1K8\u63d0\u4f9b\u5546(\u5982O vhCloud\u548cDigitalOcean)\u901a\u5e38\u5728\u6b64\u7ea7\u522b\u8fd0\u8425\u3002\u5982\u679c\u8981\u5f15\u5bfc\u60a8\u81ea\u5df1\u7684\u7fa4\u96c6\uff0c\u5219\u5fc5\u987b\u914d\u7f6e\u5b83\u4eec\u3002\u7cfb\u7edf\u7ba1\u7406\u5458\u548cIT\u670d\u52a1\u4eba\u5458\u53ef\u80fd\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u8fd9\u91cc\u5ea6\u8fc7\u3002\n\u57fa\u7840\u67b6\u6784\u5c42\u4e0d\u8a00\u800c\u55bb-\u5373\u91d1\u5c5e\u3001CPU\u3001RAM\u3001\u78c1\u76d8\u548c\u7269\u7406\u7f51\u7edc\u3002\n\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e70\u4e00\u5806Rasberri Pi\uff0c\u4f46\u8fd8\u6709\u66f4\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u5728\u6211\u4eec\u6df1\u5165\u7814\u7a76\u5b83\u4eec\u4e4b\u524d\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a\nCPU\u548cRAM\u96c6\u4e2d\u5728\u4e00\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4ece\u51e0\u53f0\u65e7\u7b14\u8bb0\u672c\u7535\u8111\u6216\u5176\u4ed6\u8fc7\u65f6\u7684\u5de5\u5177\u5305\u4e2d\u83b7\u5f97\u4e00\u4e2a\u575a\u56fa\u768420 GB\u5185\u5b58\u548c6\u4e2a\u5185\u6838\u3002\u6211\u4e0d\u4f1a\u8d2d\u4e70\u8001\u5f0f\u7684\u673a\u67b6\u5f0f\u670d\u52a1\u5668-\u5b83\u4eec\u65e2\u4fbf\u5b9c\u53c8\u5f3a\u5927\uff0c\u4f46\u5b83\u4eec\u542c\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5931\u901f\u7684\u6da1\u8f6e\u98ce\u6247\uff0c\u800c\u4e14\u5b83\u4eec\u7684\u529f\u8017\u592a\u9ad8\u4e86\u3002\n\u5b58\u50a8\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u5de5\u4f5c-\u6211\u4eec\u5c06\u5728\u7fa4\u96c6\u4e0a\u5b89\u88c5\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\uff0c\u4ed6\u4eec(\u901a\u5e38)\u4fdd\u75593\u4efd\u6570\u636e\u62f7\u8d1d\u4ee5\u5b9e\u73b0\u5197\u4f59\u3002\u50cfPI\u8fd9\u6837\u7684SBC\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u7b28\u62d9\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u6bd4\u4efb\u4f55\u6709\u5408\u9002SSD\u7684\u4ea7\u54c1\u90fd\u4f4e10\u500d\uff0c\u53ef\u9760\u6027\u4e5f\u66f4\u4f4e\u3002\u50cfIntel-NUC\u8fd9\u6837\u7684\u8ff7\u4f60PC\u901a\u5e38\u6709\u4e24\u4e2a\u7248\u672c--\u201c\u8f83\u80d6\u201d\u7684\u4e00\u4e2a\uff0c\u5b83\u6709\u4e00\u4e2a\u989d\u5916\u7684SATA\u9a71\u52a8\u5668\u63d2\u69fd\uff0c\u4f60\u53ef\u4ee5\u7528\u6765\u505a\u786c\u76d8\u3002\n\u60a8\u9700\u8981\u4e00\u4e2a\u5177\u6709\u201c\u59cb\u7ec8\u5728\u7ebf\u201d\u529f\u80fd\u7684\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u673a\u5728\u65ad\u7535\u540e\u81ea\u52a8\u542f\u52a8\uff0c\u81f3\u5c11\u5bf9\u4e8e\u4e3b\u8282\u70b9\u662f\u8fd9\u6837\u3002\u5b83\u5728\u5927\u591a\u6570\u53f0\u5f0f\u673a\u548cSBCS\u7684BIOS\u8bbe\u7f6e\u4e2d\uff0c\u4f46\u5927\u591a\u6570\u7b14\u8bb0\u672c\u7535\u8111\u6ca1\u6709\u3002\n\u6240\u6709\u7684\u5957\u4ef6\u90fd\u63d2\u5728\u4e00\u4e2a\u5343\u5146\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u4e0a\u3002\u4ece\u5de6\u5230\u53f3\u5206\u522b\u4e3a\uff1a\nBeelink Gemini X45\u914d\u5907J4105 8 GB\u5185\u5b58\u3001128 GB\u56fa\u6001\u786c\u76d8\u548c320 GB\u786c\u76d8\uff0c\u8fd9\u662f\u4e3b\u8282\u70b9\u3002\n\u5e26\u67094 GB\u5185\u5b58\u3001SD\u5361\u3001\u673a\u7bb1\u7b49\u7684PI4\u5927\u7ea6\u662fGB 100\u3002\u82b1\u540c\u6837\u7684\u94b1\uff0c\u4f60\u53ef\u4ee5\u4e70\u5230\u4e00\u53f0\u65e0\u540d\u7684Intel-ATOM\u8ff7\u4f60PC\uff0c\u8fd9\u4e9b\u90fd\u5e26\u6709x86 Arch\u3001\u771f\u6b63\u7684BIOS\u548c\u771f\u6b63\u7684sata\u6216m.2\u7aef\u53e3\u7684\u597d\u5904\u3002\n\u5bf9\u4e8eGB 200\uff0c\u4f60\u53ef\u4ee5\u4e70\u5230\u4e8c\u624b\u8ff7\u4f60\u53f0\u5f0f\u673a\uff0c\u6bd4\u5982ThinkCentre M700 i5-6400T\u3002\u8fd9\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u6027\u80fd\u6539\u8fdb\uff0c\u4f46\u8bbe\u5907\u66f4\u5927\u4e86\u3002\n\u5728GB 300\u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u6784\u5efa\u5168\u65b0\u7684\u3001\u7d27\u51d1\u7684HTPC\u7cfb\u7edf\uff0c\u4f8b\u5982\u57fa\u4e8e\u534e\u7855DeskMini A300\u548c\u5168\u529f\u80fd\u53f0\u5f0f\u673a\u7ec4\u4ef6\u3002\u6216\u8005\uff0c\u5982\u679c\u7a7a\u95f4\u6709\u9650\uff0c\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u82f1\u7279\u5c14-NUC\u3002\n\u9996\u5148\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\uff0c\u5982\u679c\u60a8\u60f3\u8981\u6258\u7ba1\u4efb\u4f55Web\u670d\u52a1\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u4e0d\u4f1a\u843d\u540e\u4e8e\u8fd0\u8425\u5546\u7ea7NAT\u3002\u6211\u7684\u63d0\u4f9b\u5546\u9ed8\u8ba4\u4f7f\u7528\u5b83\uff0c\u4f46\u6211\u6bcf\u6708\u591a\u4ed85 GB\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9759\u6001IP\u3002\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u60a8\u6709\u4e00\u4e2aDNS\u6ce8\u518c\u5546\uff0c\u5e76\u4e3a\u81ea\u5df1\u83b7\u5f97\u4e86\u57dftimmy.com\u3002\u4e0e\u4e91\u4e2d\u7684\u5178\u578b\u90e8\u7f72\u4e0d\u540c\uff0c\u6211\u4eec\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\u53ef\u4f9b\u4f7f\u7528\uff0c\u56e0\u6b64\u8bf7\u8bbe\u7f6e\u8bb0\u5f55\uff0c\u5c06\u6765\u81eatimmy.com\u548c*.timmy.com(\u4efb\u4f55\u5b50\u57df)\u7684\u6d41\u91cf\u5b9a\u5411\u5230\u60a8\u7684\u516c\u5171IP\u5730\u5740\uff0c\u4ee5\u4fbf\u6d41\u91cf\u5230\u8fbe\u60a8\u7684\u8def\u7531\u5668\u3002\n\u5206\u914d\u7ed9\u5bb6\u5ead\u7f51\u7edc\u4e2d\u91cd\u8981\u8bbe\u5907\u7684\u9759\u6001IP\u8303\u56f4\uff0c\u901a\u5e38\u4ece\u60a8\u7684\u8def\u7531\u5668\u5f00\u59cb\uff0c\u6211\u4f7f\u7528\u7684\u662f192.168.0.1-255\u3002\u5e94\u8be5\u4e3a\u7fa4\u96c6\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a/\u8282\u70b9\u63d0\u4f9b\u9759\u6001IP\u3002\nDHCP\u5206\u914d\u8303\u56f4\uff0c\u9002\u7528\u4e8e\u8fde\u63a5\u5230\u60a8\u7684\u7f51\u7edc\u7684\u5404\u79cd\u8bbe\u5907\u201c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4f7f\u7528\u4e92\u8054\u7f51\u201d\uff0c\u6bd4\u5982\u60a8\u7684\u624b\u673a\u3002\u6211\u5c06\u8def\u7531\u5668\u4e2d\u7684DHCP\u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u4f7f\u7528192.168.0-255\u3002\nKubernetes\u670d\u52a1\u5c06\u62e5\u6709\u81ea\u5df1\u7684\u6d6e\u52a8IP\u5730\u5740\uff0c\u800c\u5b9e\u9645\u7684\u670d\u52a1\u53ef\u80fd\u4f4d\u4e8e\u96c6\u7fa4\u4e2d\u7684\u4efb\u4f55\u8282\u70b9\u4e0a\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8d1f\u8f7d\u548cKubernetes\u8c03\u5ea6\u5668\u7684\u7a81\u53d1\u60c5\u51b5\u3002\u6211\u4eec\u5c06\u5728ARP\u6a21\u5f0ft\u4e2d\u4f7f\u7528MetalLB", "note_en": "This is a guide to run K8S in a home network, and use it as a home server \u2014 run your blog, media library,  smart home, pet projects, etc.  The cluster is actually straight-forward to set up, but we, developers are so cuddled, we are forgetting some basic networking and other low-level stuff \u2014 I found the experience educational.\n The cluster will serve real workloads \u2014 we will deal with exposing it to the internet, IP assignments in home network, reasonable security, distributed storage and monitoring.  It is aimed at a home network, and does not rely on loadbalancers, SAN\u2019s, multiple public IPs or any other fancy infrastructure. I am keeping it as simple (read reliable) as possible \u2014 there are no \u2018enterprise\u2019 bells and whistles.\n To proceed, make sure you are comfortable with basic kubernetes concepts, know what\u2019s a master node, an agent, a LoadBalancer service, a deployment, ingress, persistent volume, etc.\n  Let\u2019s consider K8S cluster as a layered cake and take a look at each layer\n  At the top are the  Applications that you are writing and/or running \u2014 this is the part that actually delivers value and where  developers will spend most of their time. This might be your wordpress blog, some API you\u2019ve written and your bitcoin trading bot.\n Next level down are  Services for administration and running the applications \u2014 that\u2019s your own MySQL database,  ELK Stack, Monitoring, etc. They don\u2019t have to run in your cluster \u2014 Amazon/Azure/GCP offer PAAS versions with their managed K8S serviceg.  DevOps and administrators are spending a lot of their time here.\n At the  System-level we\u2019ve got the components that make up a functional cluster\u2014 you can\u2019t skip on any of these:\n  Smaller managed K8S providers like O vhCloud and  DigitalOcean typically operate at this level. You have to configure them if you are bootstrapping your own cluster. System administrators and IT services might be spending majority of their time here.\n Infrastructure layer is self-explanatory \u2014 that\u2019s the metal, CPU, RAM, Disk, and physical network.\n  You might be tempted to get a bunch of Rasberri Pi\u2019s, but there are better alternatives.Before we dive into them, consider the following:\n CPU and RAM get pooled together in a cluster, you can get a solid 20GB ram and 6 cores out of a couple old laptops or other outdated kit lying around.  I would not buy old rack servers \u2014 they are cheap and powerful, but they sound like a stalling turbofan and their power consumption is crazy.\n Storage works the other way \u2014 we will install a distributed storage system on our cluster, they (typically) keep 3 copies of data for redundancy. SBCs like the PI are very gimped in this regard, their performance is 10x lower than that of anything with a proper SSD, and reliability is lower.  Mini-pc like the Intel-NUC usually come in two versions \u2014 the \u2018fatter\u2019 one, it has an extra SATA drive slot, which you could use for an HDD.\n You want a system with \u2018always-on\u2019 functionality, so that the computer starts itself after power loss, at least for the master-node. It\u2019s in BIOS settings of most desktops and SBCs, but most laptops don\u2019t have it.\n  All the kit is plugged into a gigabit Ethernet switch. Left to right, these are:\n Beelink Gemini X45 with J4105 8GB RAM, 128GB SSD and 320 GB HDD, this is the master node.\n  PI4 with 4Gb ram, sd card, case,etc. is about \u00a3100. For the same money you can get a no-name Intel-atom mini-pc, and those come with the benefit of x86 arch, real bios and real Sata or m.2 ports.\n  For \u00a3200 you can buy used mini-desktops, like ThinkCentre M700 i5\u20136400T. That a major performance improvement, but the device is larger.\n At \u00a3300 and up you can build a brand-new, compact HTPC system, for example based on ASRock DeskMini A300 and full-power desktop components. Or you can always go with Intel-NUC if space is at a premium.\n  First and foremost if you want to host any web-services you need to make sure aren\u2019t behind   carrier-grade NAT. My provider uses it by default, but I got a static IP for extra \u00a35 a month.\n Next, let\u2019s assume you have a  DNS registrar, got yourself the domain  timmy.com. Unlike in a typical deployment in the cloud, we have only one IP address to play with, so setup records to direct traffic from  timmy.com and  *.timmy.com (any subdomain)  to your public IP address, so it arrives at your router.\n  A range for static IPs assigned to important devices in your home network, it typically starts with your router, i used 192.168.0.1\u2013255. All computers / nodes in the cluster should be given a static IP.\n A range for DHCP assignments, this is for various devices that connect to your network \u2018just to use the internet\u2019, like your mobile phone. I configured DHCP server in the router to use 192.168.0\u2013255.\n Kubernetes services will have a floating IP addresses of their own, and the actual service might be located on any of the nodes in our cluster, depending on load and the whims of the kubernetes scheduler. We will be using  MetalLB in ARP mode to achieve this, and the range of 192.168.2.0\u2013255.\n I have changed subnet /netmask of my router to 255.255.240.0. The actual range you use does not matter, you could leave default router subnet and use the \u2018higher\u2019 end IPs of 220\u2013250 for static IP and load balancing. If you pick a different subnet, an  IP calculator can help.\n Once the traffic arrives at your router, we have to use port-forwarding to direct it to the right place. Traffic for the Kubernetes API server, typically on TCP:6443, must be directed to the master node \u2014 this will enable you to connect to your cluster using Kubectl from the internet.\n In this setup we are only considering a single master node \u2014 if you had several of them for HA, you\u2019d have to configure  keepalived or  HAproxy, or both.\n  Notice that only services of type LoadBalancer will be given an IP address on your LAN network. All other resources will reside on a VLAN setup with flannel, they can reach each-other but are isolated from the outside world.\n Traffic on TCP:80 and 443 must be directed to the  ingress service using it\u2019s IP \u2014 from there it will be routed to the correct application depending on the domain name, and we can host virtually unlimited number of websites that way.\n Only HTTP traffic can be routed based on domain name, so if we want to expose a MySQL database, we must port-forward that particular service. If we have two such databases, we have to give them different ports.\n To proceed you need to have setup a domain / DNS records, have decided on your IP ranges and have your router / DHCP configured accordingly.\n  I have chosen Ubuntu Server 20.04 LTS, just because of familiarity and it\u2019s ubiquity \u2014 there is even a version for Raspberri PI. In this setup, very little depends on a particular OS. Install it on each node, consider the following:\n Stick to simple alphanumerics in the hostname of each computer or Kubernetes won\u2019t start and you will have to specify a K8S-acceptable name for the node separately.\n If you plan to use the same drive for OS and for storing data of  Persistent Volumes, enable LVM \u2014 this will allow you to split the primary disk into an OS and storage partition, and resize them as needed.\n Use  ssh-import-id-gh &lt;username&gt; if you need to import SSH key from Github after installing OS without internet access.\n Configure a static IP address in the  /etc/netplan/50-cloud-init.yaml , I prefer to keep DHCP enabled in addition to static IP.\n If you are using a laptop,  disable suspend on closing laptop lid. I don\u2019t know why a server OS does that!\n To proceed, make sure all your nodes are setup and you can SSH into all of them.\n  Kubernetes is like linux \u2014 there are different takes on it, and for a homelab  MicroK8S and  K3S make the most sense as the two simplified distributions.  Pick the most reliable/fastest/whatever machine, and that will be our master-node. Begin installing K8S with it.\n  My experience with MicroK8s has been substantially better \u2014 it is mostly a vanilla K8S packaged into a Snap, if you want to understand what it\u2019s doing, you can read the standard configuration files for kubelet, kubeapi server, etcd, etc.\n K3S is much stranger \u2014 all components of K8S have been packed into a single binary, and run as a single service/deamon. In my mind there are only three reasons to use K3S:\n You are not satisfied with etcd and want to use the  unique K3S databastore options: either running SQLite, or PostgreSQL/MySQL\n  You want to install Rancher server in the cluster to take advantage of it\u2019s great UI and Auth features. You can only install Rancher on  K3S or RKE clusters.\n The Rancher management server can only be run on Kubernetes cluster in an infrastructure provider where Kubernetes is installed using K3s or RKE. Use of Rancher on hosted Kubernetes providers, such as EKS, is not supported.\n  curl -sfL  https://get.k3s.io | sh -s - --write-kubeconfig-mode 644 --cluster-domain k3s.timmy.com --no-deploy servicelb --no-deploy local-storage\n Domain \u2014 this parameter is used in coredns settings, and to generate a certificate for kube-api server. The certificate will be valid for the LAN IP address of the machine and the domain you specify. This information is encoded in  certificate-authority-datain the kubectl config file.\n ServiceLB \u2014 it can\u2019t create IP addresses independent of a machine, we will be replacing it with MetalLB\n LocalStorage \u2014 provisions storage through hostpath. We will be replacing it with proper distributed storage.\n Once the command is complete, your masternode should be up and running. Retrieve your kubeconfig from  /etc/rancher/k3s/k3s.yaml  and merge / replace  kubeconfig on your personal machine. Replace the  server:  https://127.0.0.1:16443 with the domain name of the you spesified above \u2014 for example k3s.timmy.com. Validate that  kubectl works form your dev machine and you can get pods, etc.\n To add other machines as agents in the cluster, retrieve the token from   /var/lib/rancher/k3s/server/node-token  on the master node.  You can then get them to join the cluster by running:\n  Avoid using domain name for connecting agents to the master node \u2014 it will work but any issues with DNS will result in your cluster falling apart. Validate that you have a collection of functional nodes with  kubectl get nodes\n  MicroK8S comes with a rich CLI tool that allows you to inspect and configure a cluster:\n  To enable access to kube-api server through it\u2019s public IP and DNS name, edit  /var/snap/microk8s/current/certs/csr.conf.template to include them. It will look something like this:\n ... [ alt_names ] DNS.1 = kubernetes DNS.2 = kubernetes.default ... DNS.6 = timmy.com DNS.7 = microk8s.timmy.com IP.1 = 127.0.0.1 IP.2 = 10.152.183.1 IP.3 = 192.168.1.2 ...\n The `apiserver-kicker` will automatically detect the difference, generate new certificated and restart the apiserver. Unlike K3S, we can have as many domain names as we please.\n Retrieve  kubeconfig using  microk8s config command and merge / replace  kubeconfig on your personal/dev machine . Replace the server IP address with it\u2019s proper DNS name, or you could have two entries in your  kubeconfig \u2014 one for local access, and one for remote.\n  On MicroK8S you install MetalLB by enabling the corresponding addon. SSH into masternode an execute:  microk8s enable metallb . It will ask you for an IP range you\u2019d like to use.\n  kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml # On first install only kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=&#34;$(openssl rand -base64 128)&#34;\n Then you must create a  configmap in the  metallb-system namespace to specify the IP range it can use:\n kind: ConfigMap apiVersion: v1 metadata:  name: config  namespace: metallb-system data:  config: |  address-pools:  - name: default  protocol: layer2  addresses:  - 192.168.2.0-192.168.2.254\n Verify that MetalLB works by deploying a blank nginx application with service of type  LoadBalancer\n apiVersion: apps/v1 kind: Deployment metadata:  name: hello  labels:  app: hello spec:  replicas: 3  selector:  matchLabels:  app: hello  template:  metadata:  labels:  app: hello  spec:  containers:  - name: nginx  image: nginx:1.14.2  ports:  - containerPort: 80 --- kind: Service apiVersion: v1 metadata:  name: hello  labels:  app: hello spec:  ports:  - name: http  protocol: TCP  port: 80  targetPort: 80  selector:  app: hello  type: LoadBalancer  externalTrafficPolicy: Cluster\n It should be assigned a valid LAN IP and be reachable form your dev/personal computer.\n  Ingress software is not part of the Kubernetes software project, instead  Ingress Controllers are third party software that is installed in a cluster and configured by Kubernetes \u2014 like anything else, they run in a pod/container, and needs a service to be reachable form the outside world. Each has it\u2019s perks, but they fulfil the same need. For all of them you should:\n Switch the ingress type from  ClusterIp to  LoadBalancer to so that it\u2019s assigned an IP address on our LAN\n Configure the router to port-forward TCP connections on port 80 (http) and 443 (https) to this address.\n Explicitly specify a  loadBalancerIP so that you don\u2019t have to change router settings if you need to re-install ingress for some reason.\n Pick an address near the end of the available range, so that some other service does not occupy it and get in the way \u2014  MetalLbassigns them sequentially.  Snippet from the ingress  yaml definition file:\n   Nginx is considered the standard ingress. It\u2019s pre-installed on MicroK8S. Edit existing ingress service in accordance with the above, and you are done.\n  There are a couple advantages to using Traefik \u2014 it\u2019s comes with a pretty dashboard and unlike nginx it can update configuration without reloading. Additionally, it\u2019s smart enough to realise that any service with port 443 or port names https requires https connection (shock!). The downsides are \u2014there is less documentation and it \u2019s less powerful when it comes to acting as an authentication proxy \u2014it does not support OAUTH authentication out of the box, and needs an extra  ...\n Traefik comes pre-installed on K3S, but we need to modify it\u2019s configuration. Do not modify existing kubernetes resources \u2014 K3S has an annoying add-on-like system, where it will monitor manifests in  /var/lib/rancher/k3s/server/manifests/ for changes, and deploy them into your cluster. Any changes you make directly to the kubernetes resources will be overwritten.  Instead, edit the  traefik.yamlfile in the manifests folder. It is basically a helm chart values file. Set the  ...\n  don\u2019t use  ssl.enforced , it breaks cert-manager\u2019s let\u2019s encrypt validation\n ssl.insecureSkipVerify will allow Traefik to work with HTTPS backends with untrusted / self signed certificates. This can be useful for Kubernetes dashboard and in-cluster databases. I consider this acceptable in home deployments.\n Prometheus options are usefull for monitoring, but we will not cover their use in this tutorial.\n dashboard.enabled enables  Traefik dashboard, which to me is half the value of having it as an ingress controller. Use  htpasswdutility to generate SHA hash for  dashboard.auth.basic.admin , where admin is the username.\n Save the resulting file as  traefik-customised.yaml and delete the original \u2014  otherwise K3S will revert all changes and deploy Traefik the way it was.\n  Verify that your ingress works correctly by creating an ingress for  docker hello-world application, making it available at  hello.&lt;yourdomain&gt;.com\n kind: Ingress apiVersion: extensions/v1beta1 metadata:  name: hello spec:  rules:  - host: hello.&lt;replaceme&gt;.me  http:  paths:  - backend:  serviceName: hello  servicePort: 80\n  If you wish to expose some HTTP service on your LAN, such as your router\u2019s dashboard, a NAS or some other device, y ou can create an endpoint and a corresponding service, then use Ingress to direct HTTP traffic as usual. Please use TLS, authentication options in the ingress, and be careful exposing your router or anything else sensitive.\n  Cert manager issues and maintains up-to-date Let\u2019sEncrypt certificates for any ingress in your cluster. It is not strictly necessary, and you might have your own way of dealing with certificates.  It\u2019s and is super-straight-forward to install:\n # Kubernetes 1.15+ $ kubectl apply --validate =false -f  https://github.com/jetstack/cert-manager/releases/download/v0.14.3/cert-manager.crds.yaml kubectl create namespace cert-manager # Helm 3 $ helm repo add jetstack  https://charts.jetstack.io $ helm repo update $ helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v0.14.3\n In addition to installing helm, we need to configure Let\u2019s Encrypt Cluster Issuer, just apply the following yaml:\n apiVersion: cert-manager.io/v1alpha2 kind: ClusterIssuer metadata:  name: letsencrypt spec:  acme:  # The ACME server URL  server:  https://acme-v02.api.letsencrypt.org/directory  # Email address used for ACME registration  email:  replace@me.  # Name of a secret used to store the ACME account private key  privateKeySecretRef:  name: letsencrypt  # Enable the HTTP-01 challenge provider  solvers:  - http01:  ingress:  class: traefik / nginx\n Don\u2019t forget to replace ingress class with appropriate one for your cluster! Validate your setup by updating your ingress with TLS settings and an annotation that informs cert manager that it should create a certificate:\n kind: Ingress apiVersion: extensions/v1beta1 metadata:  name: hello  annotations:  cert-manager.io/cluster-issuer: letsencrypt  ingress.kubernetes.io/ssl-redirect: &#39;true&#39; spec:  tls:  - hosts:  - hello.&lt;replaceme&gt;.me  secretName: hello.&lt;replaceme&gt;.me  rules:  - host: hello.&lt;replaceme&gt;.me  http:  paths:  - backend:  serviceName: hello  servicePort: 80\n You should see a pod appear with acme in it\u2019s name \u2014 it\u2019s responsible for responding to Let\u2019s Enrcypt acme challenge. Also, a secret will be created, and it will contain  tls.crt and  tls.key records. The key record will only be populated once the challenge completes \u2014 validate that it works. If you can monitor progress of a certificate being issues with  kubectl describe certs and debug issues by checking logs of the cert manager pod.\n  Some applications aren\u2019t stateless: these are databases, image galleries, Wordpress, you name it. There are two ways of dealing with storage in Kubernetes \u2014 the plebian way and the proper way.\n The plebian option is to directly expose a disk or directory from our server to the container \u2014 that\u2019s HostPath and  Local Persistent Storage. Hostpath is a total hack, the kubernetes scheduler could move the pod to a different machine at any time, and the data will not travel with it. The scheduler does respect Local PS and won \u2019d move the pod \u2014it \u2019s a reasonable option if you are deploying a distributed database, or similar system which is designed to handle  ...\n Distributed storage systems are designed to solve this problem, they pool together the storage space of all servers, and will provision a persistant volume for any pod that requests it. Data will be replicated to protect against disk failures, and it will move with the pod to a new node.\n  Ceph \u2014 Block, Object and Network Attached storage. This battle-tested project significantly predates kubernetes, and can be used stanalone without K8S to create storage systems \u2014 it underlies block storage by  Digial Ocean. It can be deployed on top of kubernetes with Rook.io. Requires entire disk or partition, which it will use raw \u2014 i.e. without a file system. Setup is not trivial.\n EdgeFs \u2014 Block, Object and Network Attached storage. Cloud native storage tailored for kubernetes, supposedly production-ready. Beautiful dashboard, but the setup is very involved. Can use both folders and raw devices, but really the folder approach is impractical.\n OpenEBS \u2014 Block Storage Only, requires whole device / partition. Setup is reasonably straightforward, this project has probably the largest amount of community support. It is very feature-rich, comes with prometheus metrics, etc.\n Rancher Longhorn \u2014 Block Storage Only, and by far the easiest distributed storage to deploy \u2014 you will be done in 5 minutes. This is what I ended up using. Installation steps:\n git clone https://github.com/longhorn/longhorn &amp;&amp; cd longorn kubectl create namespace longhorn-system #Helm 3 helm install longhorn ./longhorn/chart/ --namespace longhorn-system\n That\u2019s it! It comes with a great dashboard, edit the it\u2019s service to Loadbalancer and open it in a browser \u2014 you will be presented with a summary of your cluster:\n   In the Nodes tab, edit every node and add all the disks. They have to be formatted and mounted \u2014 you add them as a filepath.\n If you have different classes of disks, like SSD and HDD, use  storage tags, and then create two storage classes with different diskSelectors:\n apiVersion: storage.k8s.io/v1 kind: StorageClass metadata:  annotations:  storageclass.beta.kubernetes.io/is-default-class: &#34;false&#34;  name: longhorn-hdd parameters:  numberOfReplicas: &#34;2&#34;  staleReplicaTimeout: &#34;30&#34;  diskSelector: &#34;hdd&#34; provisioner: driver.longhorn.io reclaimPolicy: Delete volumeBindingMode: Immediate\n Longhorn only provides block storage, which can be attached to a single pod at a time. If you need NFS-style shared storage, you will have to standup a separate service in a container, on top of it. Same goes for object storage.\n The UI has no authentication mechanism and allows anyone to delete all of your data . Once you\u2019ve configured longhorn, I would advice reverting the servicetype back to \u2018ClusterIP\u2019, and configure ingress as an authenticating proxy, at least with basic authentication.\n It\u2019s worthwhile setting up backups of your storage, longhorn can be provided with a S3-compatible or NFS-compatiable storage.\n To validate that it\u2019s working, deploy WordPress helm chart- it\u2019s will deploy two PVs, one for itself and one for MariaDB\n The longhorn project is still in beta,  consult the roadmap if you\u2019d like more info.\n Now your cluster has all the essentials \u2014 you are basically your own cloud provider. You can spend more time improving your cluster and deploying prometheus, grafana, and other services, or you could jump straight in and host your blog, or whatever else you have on your mind.", "posttime": "2020-05-02 18:03:48", "tags": "\u5e93\u4f2f,domesticating,\u670d\u52a1,cluster", "title": "\u9a6f\u5316\u5e93\u4f2f\u5185\u65af", "title_en": "Domesticating Kubernetes", "transed": 0, "url": "https://blog.quickbird.uk/domesticating-kubernetes-d49c178ebc41", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5e93\u4f2f", "\u670d\u52a1", "cluster"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000275, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u4e0a\u6700\u5927\u7684\u4f01\u4e1a\u5fc5\u987b\u5bf9\u5176\u4ed6\u4f01\u4e1a\u8fdb\u884c\u4f8b\u884c\u76d1\u7ba1\u3002\u6839\u636e\u516c\u4f17\u7684\u8981\u6c42\uff0cFacebook\u76d1\u63a7\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u7684\u9690\u79c1\u4fdd\u62a4\uff0c\u82b1\u65d7\u94f6\u884c(Citibank)\u5ba1\u8ba1\u547c\u53eb\u4e2d\u5fc3\u7684\u6b3a\u9a97\u6027\u9500\u552e\u884c\u4e3a\uff0c\u57c3\u514b\u68ee\u7f8e\u5b5a(Exxon)\u5ba1\u67e5\u8fd1\u6d77\u77f3\u6cb9\u5e73\u53f0\u7684\u73af\u5883\u6807\u51c6\u3002\u5b66\u8005\u4eec\u5bf9\u653f\u7b56\u5236\u5b9a\u8005\u5982\u4f55\u90e8\u7f72\u5176\u4ed6\u79c1\u8425\u90e8\u95e8\u7684\u6267\u884c\u8005\uff0c\u5982\u8ba4\u8bc1\u673a\u6784\u3001\u4f1a\u8ba1\u5e08\u3001\u5f8b\u5e08\u548c\u5176\u4ed6\u5916\u56f4\u201c\u770b\u95e8\u4eba\u201d\u7ed9\u4e88\u4e86\u6781\u5927\u7684\u5173\u6ce8\u3002\u201c\u7136\u800c\uff0c\u6587\u5b66\u5e76\u6ca1\u6709\u4ed8\u51fa\u8db3\u591f\u7684\u4ee3\u4ef7\u2026\u2026", "note_en": "The world \u2019s largest businesses must routinely police other businesses. By public mandate, Facebook monitors app developers \u2019privacy safeguards, Citibank audits call centers for deceptive sales practices, and Exxon reviews offshore oil platforms \u2019environmental standards. Scholars have devoted significant attention to how policy makers deploy other private sector enforcers, such as certification bodies, accountants, lawyers, and other periphery \u201cgatekeepers. \u201dHowever, the literature has paid insufficient  ...", "posttime": "2020-05-02 18:03:42", "tags": "\u6267\u6cd5\u8005,private,\u5e73\u53f0,paid", "title": "\u65b0\u7684\u770b\u95e8\u4eba\uff1a\u4f5c\u4e3a\u516c\u5171\u6267\u6cd5\u8005\u7684\u79c1\u8425\u4f01\u4e1a", "title_en": "The New Gatekeepers: Private Firms as Public Enforcers", "transed": 0, "url": "https://www.virginialawreview.org/volumes/content/new-gatekeepers-private-firms-public-enforcers", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6267\u6cd5\u8005", "private", "\u5e73\u53f0", "paid"]}, {"category": "", "categoryclass": "", "imagename": "c463e2f55b2fd42e35a9161de082dead.png", "infoid": 1000274, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u5230\u641c\u7d22\u65e0\u6240\u6709\u8005\u6587\u4ef6\u7cfb\u7edf(\u5173\u95ed\u7cfb\u7edf\uff0c\u6216\u7b80\u79f0\u5173\u95ed)\u662f\u4e00\u79cd\u5bf9\u7b49\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4e2d\u6240\u6709\u5171\u4eab\u6587\u4ef6\u90fd\u7531\u968f\u673a\u7684\u591a\u7528\u9014\u6570\u636e\u5757\u8868\u793a\u3002\u4ee3\u66ff\u533f\u540d\u5316\u7f51\u7edc\uff0c\u6570\u636e\u5757\u88ab\u533f\u540d\u5316\uff0c\u56e0\u6b64\uff0c\u4ec5\u4ea4\u6362\u548c\u5b58\u50a8\u6570\u636e\u5783\u573e\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u901a\u8fc7\u4e2d\u95f4\u8282\u70b9\u8f6c\u53d1\u3002OFF\u58f0\u79f0\u5df2\u7ecf\u521b\u5efa\u4e86\u660e\u786e\u7684\u610f\u56fe&#34\uff1b\u4ee5\u5207\u65ad\u4e00\u4e9b\u574f\u75bd\u6ecb\u751f\u7684\u2026\u3002\n2003\u5e74\uff0c\u9ed1\u5ba2Cheater512\u3001CaptainMorgan\u3001Aqlo\u548cWhiteRaven\u5728\u9ed1\u5ba2\u7ec4\u7ec7The Big Hack\u5185\u5f00\u59cb\u4e86Off\u5f00\u53d1\u30022004\u5e74\uff0c\u7528PHP\u7f16\u5199\u7684\u521d\u7ea7\u7248\u5b8c\u6210\u4e86\uff0c\u5b83\u4ee5\u4e24\u5f20\u6f14\u793aCD\u7684\u5f62\u5f0f\u5206\u53d1\u3002\u968f\u540e\uff0cSpectralMorning\u57282004\u5e74\u7528C++\u91cd\u65b0\u5b9e\u73b0\u4e86\u8fd9\u4e00\u529f\u80fd\uff0c\u8fd9\u5bfc\u81f4\u4e86\u76ee\u524d\u7684\u4e3b\u6d41\u5ba2\u6237\u7aef\u3002\n2006\u5e748\u670814\u65e5\uff0cCaptainMorgan\u53d1\u5e03\u4e86\u4e00\u5c01\u81f4\u7f8e\u56fd\u7248\u6743\u884c\u4e1a\u534f\u4f1a(\u5982RIAA\u548cMPAA)\u7684\u7ed3\u675f\u4fe1\uff0c\u58f0\u660e\u4ed6\u4eec\u521b\u9020\u7684\u76ee\u7684\u662f\u7ed3\u675f\u4f60\u4eec\u6240\u6709\u7684\u6d88\u8d39\u8005\u7248\u6743\u4fb5\u6743\u95ee\u9898\u3002\n\u4eca\u5929\uff0c\u6211\u4eec\u5ba3\u5e03\u4e00\u4e2a\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u65e0\u62f7\u8d1d\u6587\u4ef6\u7cfb\u7edf\u3002\u4e00\u4e2a\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u5373\u65f6\u3001\u533f\u540d\u548c\u5411\u6bcf\u4e2a\u4eba\u5f00\u653e\u7684\u5730\u65b9\uff0c\u800c\u4e0d\u8fdd\u53cd\u4efb\u4f55\u6cd5\u5f8b\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5ba3\u5e03\u65e0\u6240\u6709\u8005\u6587\u4ef6\u7cfb\u7edf(Owner-Free File System)\u3002\u5728\u4f60\u75af\u72c2\u7684\u6d77\u6d0b\u91cc\u6709\u4e00\u5ea7\u7406\u667a\u7684\u5c9b\u5c7f\u3002\n2008\u5e74\uff0c\u8be5\u7f51\u7edc\u7531\u5927\u7ea650\u4e2a\u8282\u70b9\u7ec4\u6210\u30022008\u5e744\u670811\u65e5\uff0c\u8fdb\u884c\u4e86\u7f51\u7edc\u89c4\u6a21\u8d85\u8fc7100\u4e2a\u8282\u70b9\u7684Beta\u6d4b\u8bd5[3]\u3002\u81ea\u4eceSpectralMorning\u57282008\u5e74\u5e95\u505c\u6b62\u5173\u95ed\u5de5\u4f5c\u4ee5\u6765\uff0c\u53ea\u53d1\u5e03\u4e86\u4e00\u4e9b\u5c0f\u7684\u9519\u8bef\u4fee\u590d\u7248\u672c\u6765\u4e3b\u7ebf\u5173\u95ed\u3002\n\u4ece2007\u5e74\u5f00\u59cb\uff0c\u5f00\u53d1\u4e86\u53e6\u4e00\u79cd\u4f46\u517c\u5bb9\u7684\u5ba2\u6237\u7aef\uff0c\u79f0\u4e3aBlocksNet\u3002\u5b83\u662f\u7528Ruby\u7f16\u5199\u7684\uff0c\u7ef4\u62a4\u826f\u597d\uff0c\u6700\u8fd1\u6709\u4e86\u91cd\u5927\u6539\u8fdb\u3002\u5b83\u4e00\u76f4\u5728\u5f00\u53d1\u4e2d\uff0c\u76f4\u52302011\u5e74\u3002[4]\u3002\n\u5ba2\u6237\u7aef\u5378\u8f7d\u662fMainline Off\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u4f3c\u4e4e\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u529f\u80fd\u3002\u9020\u6210\u5206\u53c9\u7684\u539f\u56e0\u5c1a\u4e0d\u6e05\u695a\u3002\u53e6\u4e00\u4e2a\u5173\u7cfb\u9065\u8fdc\u7684\u7a0b\u5e8f\u662fMonolith\uff0c\u5b83\u4f7f\u7528\u4e0eOff\u7c7b\u4f3c\u7684\u539f\u7406\u3002\u5b83\u662f\u5728\u5173\u95ed\u540e\u521b\u5efa\u7684\uff0c\u5176\u7279\u70b9\u662f\u4e0d\u80fd\u591a\u6b21\u4f7f\u7528\u5757\uff0c\u4e5f\u4e0d\u80fd\u8054\u7f51\u3002\nOFF\u7cfb\u7edf\u662f\u4e00\u79cd\u533f\u540d\u7684\u3001\u5b8c\u5168\u5206\u6563\u7684P2P\u6587\u4ef6\u5171\u4eab\u7a0b\u5e8f\u548c\u7f51\u7edc\u3002\u4e0e\u5176\u4ed6\u533f\u540d\u6587\u4ef6\u5171\u4eab\u7f51\u7edc\u4e0d\u540c\u7684\u662f\uff0c\u5176\u4ed6\u533f\u540d\u6587\u4ef6\u5171\u4eab\u7f51\u7edc\u901a\u8fc7\u4e2d\u95f4\u7f51\u7edc\u8282\u70b9\u8f6c\u53d1\u5176\u6570\u636e\u5757\u800c\u83b7\u5f97\u5176\u533f\u540d\u6027\uff0c\u800cOFF\u5219\u901a\u8fc7\u533f\u540d\u5316\u6570\u636e\u6587\u4ef6\u6765\u83b7\u5f97\u5176\u533f\u540d\u6027\u3002[5]\u56e0\u6b64\uff0c\u8be5\u7cfb\u7edf\u5c06\u81ea\u5df1\u79f0\u4e3a\u4e00\u5f20\u660e\u7f51\uff0c\u4ee5\u5c06\u5176\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u79f0\u4e3aDARKNETS\u7684\u79c1\u4eba\u6587\u4ef6\u5171\u4eab\u7cfb\u7edf\u7684\u64cd\u4f5c\u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4\u2026\u2026\u3002\n\u4e3a\u4e86\u5c06\u6587\u4ef6\u5b58\u50a8\u5230\u672c\u5730\u8131\u673a\u5b58\u50a8\u5668\u4e2d\uff0c\u8bf7\u5206\u522b\u3002\u5757\u7f13\u5b58\uff0c\u9009\u62e9\u5143\u7ec4\u5927\u5c0ft{\\displaystyle t}(\u9ed8\u8ba4\u503c3)\uff0c\u5c06\u6e90\u6587\u4ef6s{\\displaystyle s}\u62c6\u5206\u4e3a\u5927\u5c0f\u4e3a128 KiB\u7684\u5757s i{\\displaystyle s_{i}}(\u586b\u5145\u968f\u673a\u6570\u636e\u4ee5\u9002\u5e94)\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u5757\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u4ece\u73b0\u6709\u7684OFF\u9ad8\u901f\u7f13\u5b58\u4e2d\u9009\u62e9t\u22121{\\DisplayStyle t-1}\u5757\u7528\u4f5c\u968f\u673a\u53d1\u751f\u5668\u5757\uff0c\u6216\u7528\u4e8e\u7b80\u79f0\u4e3a\u968f\u673a\u5316\u5668\uff0c\u8fd9\u4e9b\u5757\u5728\u4ee5\u524d\u7684\u8fed\u4ee3\u4e2d\u6ca1\u6709\u4f7f\u7528\u8fc7\u3002\u5982\u679c\u7f13\u5b58\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u968f\u673a\u5316\u5668\uff0c\u8bf7\u4f7f\u7528\u968f\u673a\u6570\u751f\u6210\u5668\u751f\u6210\u5b83\u4eec\u3002\n\u8ba1\u7b97o i=s i\u2295r 1\u2295r 2\u2295\u3002\u3002\u3002\u2295r t\u22121{\\DisplayStyle o_{i}=s_{i}\\Oplus r_{1}\\Oplus r_{2}\\Oplus.\\Oplus r_{t-1}}\u5e76\u5c06\u7ed3\u679c\u5757o i{\\DisplayStyle o_{i}}\u5b58\u50a8\u5728\u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u2295{\\DisplayStyle\\Oplus}\u662f\u5f02\u6216\u64cd\u4f5c\u3002\n\u4f7f\u7528\u4e00\u7ec4\u5927\u5c0f\u4e3at{\\displaystyle t}\uff1a{o i\uff0cr 1\uff0cr 2\u7684\u65b0\u6761\u76ee\u66f4\u65b0\u63cf\u8ff0\u7b26\u5217\u8868\uff0c\u8be5\u5217\u8868\u5305\u542b\u6709\u5173\u5982\u4f55\u6062\u590d\u6bcf\u4e2a\u6e90\u5757s i{\\displaystyle s_{i}}\u7684\u4fe1\u606f\u3002\u3002\u3002r t\u22121}{\\displaystyle\\{o_{i}\uff0cr_{1}\uff0cr_{2}.r_{t-1}\\}}\u3002\n\u6700\u540e\uff0c\u5c06\u63cf\u8ff0\u7b26\u5217\u8868\u5b58\u50a8\u5728\u5176\u81ea\u5df1\u7684\u5757(\u5982\u679c\u5217\u8868\u5927\u4e8e128KiB\uff0c\u5219\u4e3a\u591a\u4e2a\u5757)\u4e2d\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5757di{\\displaystyle d_{i}}\u63d2\u5165\u5757\u7f13\u5b58\u4e2d\uff0c\u5e76\u751f\u6210\u7528\u4e8e\u5f15\u7528\u6e90\u6587\u4ef6\u7684OFF URL\uff0c\u5e76\u5c06\u5176\u8f93\u51fa\u7ed9\u7528\u6237\u6216\u8f93\u51fa\u5230\u672c\u5730OFF URL\u6570\u636e\u5e93\u4e2d\u3002\n\u8981\u68c0\u7d22\uff0c\u8bf7\u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u63cf\u8ff0\u7b26\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5305\u542b\u7684\u5927\u5c0f\u4e3at{\\displaystyle t}\u7684\u96c6\u5408\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u83b7\u5f97\u5217\u51fa\u7684\u5757b1\u3001b2\u3002\u3002\u3002b t{\\displaystyle b_{1}\uff0cb_{2}.b_{t}}\u3002\u867d\u7136\u4ed6\u4eec\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e0d\u518d\u6709\u8eab\u4efd\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u88ab\u79f0\u4e3aoi\uff0cr1\uff0cr2\u3002\u3002\u3002r t\u22121{\\DisplayStyle o_{i}\uff0cr_{1}\uff0cr_{2}.r_{t-1}}\u3002\n\u6267\u884cs i=b1\u2295b2\u2295\u3002\u3002\u3002\u2295b t{\\DisplayStyle s_{i}=b_{1}\\Oplus b_{2}\\Oplus.\\Oplus b_{t}}\u5e76\u8f93\u51fa\u7ed3\u679c", "note_en": "Jump to navigation  Jump to search  The  Owner-Free File System ( OFF System, or  OFF for short) is a  peer-to-peer  distributed file system in which all shared files are represented by  randomized multi-used data blocks. Instead of anonymizing the network, the data blocks are anonymized and therefore, only data garbage is ever exchanged and stored and no forwarding via intermediate nodes is required.  OFFclaims to have been created with the expressed intention &#34;to cut off some gangrene-infested  ...\n   OFF development started within the  hacktivism group  The Big Hack in 2003 by the  hackers Cheater512, CaptainMorgan, Aqlo and WhiteRaven. In 2004, a rudimentary version was finished, written in PHP, which was distributed as two demo CDs. Following these, SpectralMorning re-implemented the functionality in 2004 in  C++, which led to the current &#34;mainline&#34;  OFF client.\n On August 14, 2006, CaptainMorgan posted a letter of &#34;closing&#34; addressed to the &#34;Copyright Industry Associations of America&#34;, such as the  RIAA and  MPAA, stating that they have created  OFF with the purpose of ending &#34;all of your problems with consumer copyright infringement.&#34;  [2]\n Today we announce a massively distributed copy-less file system. A place where all content is available instantly, anonymously and to everyone, without breaking any laws. Today we announce the Owner-Free File System. An island of sanity in your sea of madness.\n In 2008, the network consisted of around 50  nodes. On April 11, 2008, a beta test was held  [3] with a network size of over 100 nodes. Since SpectralMorning stopped work on  OFF in late 2008, only minor  bug fix releases were made to mainline  OFF.\n Starting from 2007, an alternative, but compatible client was developed, called BlocksNet. Written in  Ruby and well-maintained, it saw major improvements over recent time. It has been under development until 2011.  [4]\n The client OFFLoad is a  fork from mainline  OFF, which seemingly adds no features. Reasons for the fork are unclear. Another distantly related program is  Monolith, which uses a similar principle to  OFF. It was created after  OFF and features no multi-use of blocks and no networking.\n  The  OFF System is a kind of anonymous, fully decentralized P2P file sharing program and network. In contrast to other anonymous file sharing networks, which derive their anonymity from forwarding their data blocks via intermediate network nodes,  OFF derives its anonymity from anonymizing the data files.  [5] Thus, the system refers to itself as a  brightnet to contrast its method of operation with that of private file sharing systems known as  darknets  ...\n  In order to store a file into the local OFF storage, resp.  block cache, choose the tuple size            t    {\\displaystyle t}   (default 3), split the source file            s    {\\displaystyle s}   into blocks              s    i      {\\displaystyle s_{i}}   of size 128 KiB (pad with random data to fit) and for each, do the following:\n Select            t  \u2212  1    {\\displaystyle t-1}   blocks for use as randomizer blocks, or for short,  randomizers, from the existing OFF cache, which have not been used in previous iterations. If not enough randomizers exist in the cache, generate them using a random number generator.\n Calculate              o    i    =    s    i    \u2295    r    1    \u2295    r    2    \u2295  .  .  .  \u2295    r    t  \u2212  1      {\\displaystyle o_{i}=s_{i}\\oplus r_{1}\\oplus r_{2}\\oplus ...\\oplus r_{t-1}}   and store the resulting block              o    i      {\\displaystyle o_{i}}   in the cache,            \u2295    {\\displaystyle \\oplus }   being the  XOR operation.\n Update the  descriptor list, which contains the information on how to restore each source block              s    i      {\\displaystyle s_{i}}  , with a new entry, which is a set of size            t    {\\displaystyle t}  :            {    o    i    ,    r    1    ,    r    2    .  .  .    r    t  \u2212  1    }    {\\displaystyle \\{o_{i},r_{1},r_{2}...r_{t-1}\\}}  .\n Finally, store the  descriptor list in its own block (or blocks, if the list is larger than 128 KiB) and insert these blocks              d    i      {\\displaystyle d_{i}}   into the block cache and generate an  OFF URL for referencing the source file and output it to the user or into the local  OFF URL database.\n  To retrieve, obtain the descriptor block or blocks and for each contained set of size            t    {\\displaystyle t}  , do the following:\n Obtain the listed blocks              b    1    ,    b    2    .  .  .    b    t      {\\displaystyle b_{1},b_{2}...b_{t}}  . Though they have no identity any more at this point, they could be called              o    i    ,    r    1    ,    r    2    .  .  .    r    t  \u2212  1      {\\displaystyle o_{i},r_{1},r_{2}...r_{t-1}}  .\n Perform              s    i    =    b    1    \u2295    b    2    \u2295  .  .  .  \u2295    b    t      {\\displaystyle s_{i}=b_{1}\\oplus b_{2}\\oplus ...\\oplus b_{t}}   and output the resulting source data block              s    i      {\\displaystyle s_{i}}   to a viewer program or to storage.\n   No source file content is stored in the block cache, only blocks that consist of probably random data.\n   (No block in the cache is copyrightable by itself, because numbers - however large - cannot be subject to copyright (and neither would be small parts of a copyrighted work).)\n The original uploader remains unknown, because blocks are dispersed into the network and therefore downloading is done from multiple sources.\n During disperse, the usage of the block cannot be stated, because blocks are re-used in other contexts to re-assemble other source file blocks. (TODO that is true also for retrieve)\n (No block can be copyrighted without logical contradictions, because blocks used for re-assembling a source file block are re-used for re-assembly of other source file blocks. It is undecidable who would have copyright on a block, which has several meanings. Everyone would have copyright on everything.)\n If the  OFF-internal search function is used, search terms are untraceable to its originator, because the search request is forwarded to the next node and its results back to that node instead of directly to the originator. It is thus not possible to decide whether a node is the originating node or a node doing a search request on behalf of another node.\n  Because  OFF anonymizes the data blocks being exchanged instead of the network, no forwarding via intermediate nodes is required. Therefore, this method has a higher degree of efficiency than traditional, forwarding-based anonymous P2P systems.\n The forwarding method requires that a data block is uploaded and downloaded several times before it reaches its destination, which happens between 5 and 15 times.,  [6] which, according to the resulting formula            s  \u2217  (  h  i  +  h  o  +  1  )  \u2217  2  \u2212  s    {\\displaystyle s*(hi+ho+1)*2-s}  , is equivalent to an overhead of 900 to 2900%, while the overhead of  OFF without optimizations is about 200%. (           s    {\\displaystyle s}\n  Re-use some of the result blocks              o    i      {\\displaystyle o_{i}}   and  randomizer blocks, which reduces the overhead to            s  \u2217  (  t  \u2212  1  )  \u2217      e  100      {\\displaystyle s*(t-1)*{\\frac {e}{100}}}  ,  [7] where            s    {\\displaystyle s}   is the source file size,            t    {\\displaystyle t}   the tuple size and            e    {\\displaystyle e}  the percentage of unrelated blocks used in the randomizing  ...\n If some of the blocks required to fully retrieve, resp. re-assemble, the source file are already present in the block cache from other transfers or stored files because of the multi-use nature of  OFF blocks, the degree of efficiency is increased further.\n Use of the  targeted store feature leads to the blocks of specific other files to be chosen as randomizers for this file with higher probability and therefore a reduction in overhead. This is especially useful when storing a group of related files.\n    ^    &#34;Archived copy&#34;. Archived from  the original on 2011-07-20 .  CS1 maint: archived copy as title ( link) &#34;Closing Letter to the Copyright Industry Associations of America&#34; - presenting the public release of the OFF System\n    ^   http://www.i2p2.de/how_tunnelrouting Explanation of tunnel length in I2P and its default settings, see &#34;I2CP options&#34;\n  On copyrightable numbers with an application to the Gesetzklageproblem - A detailed explanation of the mathematical principles behind the OFF System. (pdf)", "posttime": "2020-05-02 18:03:36", "tags": "offsystem,displaystyle,blocks", "title": "OFFSystem", "title_en": "OFFSystem", "transed": 0, "url": "https://en.wikipedia.org/wiki/OFFSystem", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["offsystem", "blocks"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000273, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e54\u6cbb\u00b7\u534e\u76db\u987f\u5927\u5b66\u5236\u4f5c\u6216\u9644\u5c5e\u4e8e\u4e54\u6cbb\u00b7\u534e\u76db\u987f\u5927\u5b66\u7684\u7f51\u7ad9\uff0c\u8bb0\u5f55\u5927\u5b66\u793e\u533a\u7684\u7ba1\u7406\u3001\u51fa\u7248\u7269\u3001\u653f\u7b56\u3001\u4e8b\u4ef6\u548c\u516c\u544a\u3002", "note_en": "Websites produced by or affiliated with the George Washington University, documenting the administration, publications, policies, events, and announcements of the university community.", "posttime": "2020-05-02 18:03:34", "tags": "\u88c5\u9970,ornament,\u534e\u76db\u987f\u5927\u5b66,university", "title": "\u201c\u88c5\u9970\u4e0e\u72af\u7f6a\u201d(1908\u5e74)[pdf]", "title_en": "Ornament and Crime (1908) [pdf]", "transed": 0, "url": "https://web.archive.org/web/20150403175309/http://www2.gwu.edu/~art/Temporary_SL/177/pdfs/Loos.pdf", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u88c5\u9970", "ornament", "\u534e\u76db\u987f\u5927\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000272, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u4e2a\u7ec8\u751f\u7684\u8ba1\u7b97\u673a\u6781\u5ba2\u548c\u6211\u6240\u5728\u884c\u4e1a\u5386\u53f2\u7684\u5b66\u751f\uff0c\u6211\u5bf9\u81ea\u5df1\u4ece\u672a\u542c\u8bf4\u8fc7\u8fd9\u4e2a\u6545\u4e8b\u611f\u5230\u5931\u671b\u3002\u611f\u8c22\u6c83\u5c14\u7279\u00b7\u827e\u8428\u514b\u68ee(Walter Isaacson)\u7684\u521b\u65b0\u8005\u4eec\u7ea0\u6b63\u4e86\u6211\u7684\u9519\u8bef\u3002\n\u66fe\u51e0\u4f55\u65f6(\u51c6\u786e\u5730\u8bf4\u662f1989\u5e74)\uff0c\u4e92\u8054\u7f51\u7684\u53d1\u660e\u8005\u4eec\u805a\u5728\u4e00\u8d77\u4e3e\u529e\u4e86\u4e00\u4e2a\u805a\u4f1a\u3002\u6211\u4e0d\u662f\u5728\u8c08\u8bba\u963f\u5c14\u00b7\u6208\u5c14\u548c\u5176\u4ed6\u5f53\u4ee3\u4eba\u4eec\u5bf9\u7f51\u7edc\u7684\u4e86\u89e3\uff0c\u6211\u662f\u5728\u8c08\u8bba\u5b66\u672f\u3001\u653f\u5e9c\u548c\u519b\u4e8b\u5934\u8111\u5728\u63a9\u62a4\u4e0b\u5de5\u4f5c\uff0c\u4ee5\u5efa\u7acb\u534f\u8bae\uff0c\u8fd9\u4e9b\u534f\u8bae\u6700\u521d\u5c31\u662f\u8ba9\u7f51\u7edc\u5f97\u4ee5\u5b58\u5728\u7684\u3002\n\u4f60\u77e5\u9053\u8fd9\u4e9b\u5bb6\u4f19\u5728\u6d3e\u5bf9\u4e0a\u505a\u4e86\u4ec0\u4e48\u5417\uff1f\u4ed6\u4eec\u6717\u8bf5\u8bd7\u6b4c\u3002\u56e0\u4e3a\u66fe\u51e0\u4f55\u65f6\uff0c\u4e16\u754c\u4e0a\u6700\u806a\u660e\u7684\u4eba\u8ba4\u4e3a\u4ed6\u4eec\u521b\u9020\u6280\u672f\u662f\u4e3a\u4e86\u5e2e\u52a9\u4ed6\u4eec\u8ffd\u6c42\u4eba\u6587\u3002\u6211\u60f3\u6211\u4f1a\u559c\u6b22\u8fd9\u4e9b\u5bb6\u4f19\u7684\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u6587\u7279\u00b7\u745f\u592b(Vint Cerf)(\u4ed6\u540e\u6765\u57282005\u5e74\u83b7\u5f97\u603b\u7edf\u81ea\u7531\u52cb\u7ae0)\u7ad9\u8d77\u6765\u6717\u8bf5\u4e86\u4e00\u9996\u8bd7\u3002\u4ed6\u8bfb\u5230\u7684\u662f\u8fd9\u6837\u7684\uff1a\nVint Cerf\u7684Rosencrantz\u548cEthernet\u5168\u4e16\u754c\u90fd\u662f\u4e00\u5f20\u7f51\uff01\u800c\u5176\u4e2d\u7684\u6240\u6709\u6570\u636e\u53ea\u662f\u5728\u961f\u5217\u4e2d\u5b58\u50a8\u5e76\u8f6c\u53d1\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u518d\u4e5f\u542c\u4e0d\u5230\u4e86\u3002\u7f51\u7edc\u662f\u5426\u6b63\u5728\u7b49\u5f85\u5207\u6362\uff01\u5207\u6362\u8fd8\u662f\u4e0d\u5207\u6362\uff1f\u90a3\u5012\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u5728\u7f51\u7edc\u4e2d\uff0c\u662f\u5fcd\u53d7\u968f\u673a\u7f51\u7edc\u7684\u5b58\u50a8\u548c\u8f6c\u53d1\uff0c\u8fd8\u662f\u63d0\u9ad8\u7535\u8def\u6765\u5bf9\u4ed8\u4e00\u5927\u5806\u6570\u636e\u5305\uff0c\u5e76\u901a\u8fc7\u5949\u732e\u6765\u4e3a\u5b83\u4eec\u670d\u52a1\uff0c\u8fd9\u5728\u7f51\u7edc\u4e2d\u662f\u66f4\u660e\u667a\u7684\u5417\uff1f\u5bf9\u7f51\u7edc\u6765\u8bf4\uff0c\u5c31\u662f\u4ea4\u6362\u3002\u6362\u4e2a\u4f4d\u5b50\uff0c\u53ef\u80fd\u4f1a\u6ed1\u5012\uff01\u662f\u7684\uff0c\u90a3\u91cc\u6709\u2026\u2026\u3002\n\u4f60\u53ef\u80fd\u5fc5\u987b\u662f\u4e2a\u7535\u8111\u8ff7\u624d\u80fd\u5f97\u5230\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u4f46\u5f53\u6211\u901a\u8fc7\u8033\u673a\u542c\u5230\u5b83\u7684\u65f6\u5019\uff0c\u6211\u77e5\u9053\u6211\u5fc5\u987b\u628a\u5b83\u8d34\u51fa\u6765\uff01", "note_en": "As a lifelong computer geek, and a student of the history of my industry, I am disappointed in myself that I\u2019ve never heard this story. \u00a0Credit to Walter Isaacson\u2019s  Innovators for setting me straight.\n Once upon a time (1989 to be precise), the inventors of the internet got together and threw a party. I\u2019m not talking about Al Gore and the other talking heads of what the modern generation knows about the net, I\u2019m talking about the academic, government and military minds working under the covers to build the protocols that went into allowing the net to exist in the first place.\n You know what these guys did when they partied? They read poetry. Because once upon a time, the smartest people in the world thought that they were creating technology in order to help them pursue the humanities. I think I would have liked these guys.\n Anyway,  Vint Cerf\u00a0(who went on to receive the Presidential Medal of Freedom in 2005) got up a read a poem. \u00a0What he read, was this:\n  ROSENCRANTZ AND ETHERNET by Vint CerfAll the world&#39;s a net! And all the data in it merely packetscome to store-and-forward in the queues a while and then areheard no more. &#39;Tis a network waiting to be switched!To switch or not to switch? That is the question. Whether&#39;tis wiser in the net to suffer the store and forward ofstochastic networks or to raise up circuits against a seaof packets and, by dedication, serve them.To net, to switch. To switch, perchance to slip!Aye, there&#39;s  ...\n   You probably have to be a computer geek to get most of that, but when I heard it come through my headphones I knew I had to post it!", "posttime": "2020-05-02 18:03:28", "tags": "rosencrantz,\u7f51\u7edc,net", "title": "Rosencrantz\u548c\u4ee5\u592a\u7f51(2014)", "title_en": "Rosencrantz and Ethernet (2014)", "transed": 0, "url": "https://www.shakespearegeek.com/2014/10/rosencrantz-and-etherne.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7f51\u7edc", "net"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000271, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51a0\u72b6\u75c5\u6bd2\u7684\u6d41\u884c\u52a0\u901f\u4e86\u5bb6\u5ead\u5de5\u4f5c\u7684\u9769\u547d\uff0c\u5bfc\u81f4\u4e16\u754c\u5404\u5730\u7684\u529e\u516c\u5ba4\u7a7a\u7f6e\u3002\u4f46\u5b83\u4eec\u5230\u5e95\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff1f\n1822\u5e74\u6625\uff0c\u4e16\u754c\u4e0a\u6700\u65e9\u7684\u529e\u4e8b\u5904\u4e4b\u4e00\u4f26\u6566\u4e1c\u5370\u5ea6\u516c\u53f8\u7684\u4e00\u540d\u5458\u5de5\u5750\u4e0b\u6765\u7ed9\u4e00\u4f4d\u670b\u53cb\u5199\u4e86\u4e00\u5c01\u4fe1\u3002\u5982\u679c\u8fd9\u4e2a\u4eba\u4e3a\u5728\u4e00\u5ea7\u9769\u547d\u6027\u7684\u5efa\u7b51\u4e2d\u5de5\u4f5c\u800c\u5174\u594b\uff0c\u6216\u8005\u4e3a\u6210\u4e3a\u4e00\u4e2a\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4e16\u7eaa\u91cc\u6539\u53d8\u4e16\u754c\u7684\u65b0\u9896\u673a\u6784\u7684\u4e00\u90e8\u5206\u800c\u5174\u594b\uff0c\u90a3\u4e48\u4ed6\u51e0\u4e4e\u6ca1\u6709\u8868\u73b0\u51fa\u8fd9\u79cd\u8ff9\u8c61\u3002\u201c\u4f60\u4e0d\u77e5\u9053\uff0c\u201d\u67e5\u7406\u65af\u00b7\u5170\u59c6\u5199\u9053\uff0c\u201c\u4e00\u5929\u53c8\u4e00\u5929\u547c\u5438\u7740\u56db\u9762\u88ab\u538b\u6291\u7684\u5899\u91cc\u7684\u7a7a\u6c14\uff0c\u6ca1\u6709\u4efb\u4f55\u89e3\u8131\uff0c\u662f\u591a\u4e48\u4ee4\u4eba\u538c\u70e6\u3002\u201d\n\u5170\u59c6\u5199\u4f5c\u7684\u90a3\u4e2a\u4e16\u754c\u73b0\u5728\u65e9\u5df2\u4e0d\u590d\u5b58\u5728\u4e86\u3002\u81ed\u540d\u662d\u8457\u7684\u4e1c\u5370\u5ea6\u516c\u53f8\u572819\u4e16\u7eaa50\u5e74\u4ee3\u53ef\u803b\u5730\u5012\u95ed\u4e86\u3002\u5b83\u6700\u8457\u540d\u7684\u9057\u4ea7\u662f\u82f1\u56fd\u5bf9\u5370\u5ea6\u7684\u6b96\u6c11\u7edf\u6cbb\uff0c\u4e00\u4e2a\u4e16\u7eaa\u540e\u74e6\u89e3\u4e86\u3002\u4f46\u4ed6\u7684\u4fe1\u5728\u4eca\u5929\u5f15\u8d77\u4e86\u5171\u9e23\uff0c\u56e0\u4e3a\u5f53\u5176\u4ed6\u5e1d\u56fd\u8870\u843d\u65f6\uff0c\u529e\u516c\u5ba4\u5e1d\u56fd\u5df2\u7ecf\u6218\u80dc\u4e86\u73b0\u4ee3\u804c\u4e1a\u751f\u6d3b\u3002\n\u8fd9\u4e2a\u5e1d\u56fd\u7684\u89c4\u6a21\u4ee4\u4eba\u656c\u754f\u3002\u5b83\u7684\u4eba\u53e3\u591a\u8fbe\u6570\u4ebf\uff0c\u6765\u81ea\u5730\u7403\u4e0a\u6bcf\u4e2a\u56fd\u5bb6\u3002\u5b83\u4e3b\u5bb0\u7740\u6211\u4eec\u57ce\u5e02\u7684\u5929\u9645\u7ebf-\u4ed6\u4eec\u6700\u9ad8\u7684\u5efa\u7b51\u4e0d\u518d\u662f\u5927\u6559\u5802\u6216\u5bfa\u5e99\uff0c\u800c\u662f\u88c5\u6ee1\u5de5\u4eba\u7684\u591a\u5c42\u5927\u6876\u3002\u5b83\u52fe\u52d2\u51fa\u6211\u4eec\u751f\u6d3b\u7684\u5927\u90e8\u5206\u3002\u5982\u679c\u4f60\u662f\u8fd9\u4e2a\u5e1d\u56fd\u7684\u52e4\u594b\u516c\u6c11\uff0c\u4f60\u4f1a\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u4e0e\u4f60\u5de6\u8fb9\u607c\u4eba\u7684\u540c\u4e8b\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u4ed6\u7684\u591a\u4f59\u7684\u978b\u5b50\u4f1a\u4fb5\u5165\u4f60\u7684\u811a\u4e0b\uff0c\u800c\u4e0d\u662f\u548c\u4f60\u7684\u4e08\u592b\u6216\u59bb\u5b50\u5728\u4e00\u8d77\u3002\n\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\u4f60\u66fe\u7ecf\u662f\u3002\u4eca\u5e74\u6625\u5929\uff0c\u51e0\u4e4e\u5728\u4e00\u591c\u4e4b\u95f4\uff0c\u4e16\u754c\u5404\u5730\u7684\u529e\u516c\u5ba4\u90fd\u88ab\u6e05\u7a7a\u4e86\u3002\u5728\u7ebd\u7ea6\u548c\u5df4\u9ece\uff0c\u5728\u9a6c\u5fb7\u91cc\u548c\u7c73\u5170\uff0c\u4ed6\u4eec\u4e3a\u4ece\u672a\u6765\u8fc7\u7684\u901a\u52e4\u8005\u505a\u597d\u4e86\u51c6\u5907\u3002\u7a7a\u7535\u68af\u5728\u7a7a\u8361\u8361\u7684\u524d\u5385\u4e0a\u4e0b\u6ed1\u52a8\uff0c\u5ba3\u5e03\u697c\u5c42\u6570\uff1b\u996e\u6c34\u673a\u55e1\u55e1\u4f5c\u54cd\uff0c\u51b7\u5374\u7740\u6ca1\u6709\u4eba\u559d\u7684\u6c34\u3002\u76ee\u524d\uff0c\u529e\u516c\u5ba4\u751f\u6d3b\u5df2\u7ecf\u7ed3\u675f\u3002\n\u751a\u81f3\u5728\u51a0\u72b6\u75c5\u6bd2\u6765\u88ad\u4e4b\u524d\uff0c\u529e\u516c\u5ba4\u7684\u7edf\u6cbb\u5c31\u5df2\u7ecf\u5f00\u59cb\u770b\u8d77\u6765\u6709\u70b9\u6447\u6447\u6b32\u5760\u4e86\u3002\u4e0d\u65ad\u4e0a\u6da8\u7684\u79df\u91d1\u3001\u6570\u5b57\u9769\u547d\u548c\u5bf9\u7075\u6d3b\u5de5\u4f5c\u7684\u65e5\u76ca\u589e\u957f\u7684\u9700\u6c42\u76f8\u7ed3\u5408\uff0c\u610f\u5473\u7740\u5b83\u7684\u4eba\u53e3\u6b63\u5728\u7f13\u6162\u5730\u79fb\u6c11\u5230\u4e0d\u540c\u7684\u73af\u5883\u3002\u8d85\u8fc7\u4e00\u534a\u7684\u7f8e\u56fd\u52b3\u52a8\u529b\u5df2\u7ecf\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u81f3\u5c11\u5728\u67d0\u4e9b\u65f6\u5019\u662f\u8fd9\u6837\u3002\u7eb5\u89c2\u5168\u7403\uff0c\u5728\u5bb6\u5de5\u4f5c\u7684\u4eba\u6570\u5341\u5e74\u6765\u4e00\u76f4\u5728\u7a33\u6b65\u4e0a\u5347\u3002\u4e13\u5bb6\u4eec\u9884\u6d4b\uff0c\u8fd9\u4e00\u6570\u5b57\u8fd8\u4f1a\u8fdb\u4e00\u6b65\u589e\u52a0\u3002\u6ca1\u4eba\u60f3\u5230\u4f1a\u6709\u4e00\u4e2a..\u3002\n\u73b0\u5728\u8bf4\u8fd9\u4e2a\u804c\u4f4d\u662f\u5426\u5df2\u7ecf\u7ed3\u675f\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\u4e0e\u4efb\u4f55\u7a81\u5982\u5176\u6765\u7684\u635f\u5931\u4e00\u6837\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u53d1\u73b0\u81ea\u5df1\u7684\u5224\u65ad\u88ab\u76f8\u4e92\u51b2\u7a81\u7684\u60c5\u7eea\u6240\u6a21\u7cca\u3002\u4ece\u65e5\u5e38\u901a\u52e4\u4e2d\u89e3\u8131\u51fa\u6765\u7684\u89e3\u8131\uff0c\u4ee5\u53ca\u629b\u5f03\u83f2\u5229\u666e\u00b7\u62c9\u91d1(Philip Larkin)\u6240\u79f0\u7684\u201c\u87fe\u870d\u5de5\u4f5c\u201d\u7684\u559c\u60a6\uff0c\u90fd\u5939\u6742\u7740\u9057\u61be\u548c\u6000\u65e7\u4e4b\u60c5\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u4e3a\u53c8\u4e00\u4e2a\u7a7f\u7740\u6162\u8dd1\u88e4\u7684\u4e0d\u4fee\u8fb9\u5e45\u7684\u65e5\u5b50\u505a\u51c6\u5907\u3002\n\u4f46\u662f\u6211\u4eec\u4e0d\u5e94\u8be5\u8ba9\u591a\u6101\u5584\u611f\u8499\u853d\u6211\u4eec\u3002\u529e\u516c\u5ba4\u4e00\u76f4\u662f\u5b58\u5728\u4e25\u91cd\u7f3a\u9677\u7684\u7a7a\u95f4\u3002\u4e1c\u5370\u5ea6\u516c\u53f8\u662f\u4e16\u754c\u4e0a\u6700\u65e9\u7684\u516c\u53f8\u4e4b\u4e00\uff0c\u5b83\u7684\u5efa\u8bbe\u66f4\u591a\u7684\u662f\u4e3a\u4e86\u5439\u5618\uff0c\u800c\u4e0d\u662f\u5b98\u50da\u4f5c\u98ce\u3002\u5b83\u4eec\u662f\u77f3\u5934\u5e03\u9053\uff0c\u6bcf\u4e00\u5757\u5927\u7406\u77f3\u53f0\u9636\u7684\u575a\u56fa\uff0c\u6bcf\u4e00\u6839\u5e15\u62c9\u8fea\u4e9a\u67f1\u5b50\u7684\u4f18\u96c5\uff0c\u90fd\u610f\u5728\u5145\u5206\u8bf4\u660e\u5185\u90e8\u7684\u76c8\u5229\u548c\u5e73\u7a33\u8fd0\u4f5c\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u65e0\u7a3d\u4e4b\u8c08\u3002\u4e3a\u4e86\u786e\u4fdd\u6548\u7387\u800c\u521b\u5efa\u7684\u529e\u516c\u5ba4\u7acb\u5373\u5236\u5ea6\u5316\u3002\n\u7b2c\u4e00\u6279\u529e\u516c\u5ba4\u5c5e\u4e8e\u653f\u5e9c\u6216\u534a\u5b98\u65b9\u673a\u6784\uff0c\u5982\u4e1c\u5370\u5ea6\u516c\u53f8\u3002\u7ba1\u7406\u4e00\u4e2a\u56fd\u5bb6\uff0c\u66f4\u4e0d\u7528\u8bf4\u7ba1\u7406\u4e00\u4e2a\u5e1d\u56fd\u4e86\uff0c\u9700\u8981\u63a8\u52a8\u5927\u91cf\u7684\u6587\u4ef6\uff0c\u5f53\u6240\u6709\u8fd9\u4e9b\u5b98\u5458\u90fd\u5728\u4e00\u4e2a\u5730\u65b9\u65f6\uff0c\u6cbb\u7406\u88ab\u8bc1\u660e\u662f\u66f4\u7b80\u5355\u7684\u3002\u4f46\u771f\u6b63\u6539\u53d8\u4e8b\u60c5\u7684\u662f\u5de5\u4e1a\u9769\u547d\u3002\u7164\u70ad\u3001\u94a2\u94c1\u548c\u84b8\u6c7d\u5f00\u59cb\u4ee5\u524d\u6240\u672a\u6709\u7684\u901f\u5ea6\u8f6c\u52a8\u82f1\u56fd\u7eba\u7ec7\u4e1a\u7684\u8f66\u8f6e\uff0c\u94c1\u8def\u5728\u4e61\u6751\u94fa\u5f00\u3002\u65b0\u7684\u84b8\u6c7d\u706b\u8f66\u7a7f\u68ad\u5728\u2026\u2026\u3002\n\u529e\u516c\u5ba4\u6700\u5177\u53d8\u9769\u6027\u7684\u65b9\u9762\u4e0e\u5176\u8bf4\u662f\u5efa\u7b51\u672c\u8eab\uff0c\u4e0d\u5982\u8bf4\u662f\u6211\u4eec\u5728\u91cc\u9762\u82b1\u8d39\u7684\u5927\u91cf\u65f6\u95f4\u3002\u8fd9\u5bf9\u8bb8\u591a\u65e9\u671f\u793e\u4f1a\u6765\u8bf4\u4f3c\u4e4e\u662f\u964c\u751f\u7684\u3002\u5251\u6865\u5927\u5b66\u53e4\u5178\u6587\u5b66\u6559\u6388\u739b\u4e3d\u00b7\u6bd4\u5c14\u5fb7(Mary Beard)\u6307\u51fa\uff0c\u7cbe\u82f1\u7f57\u9a6c\u4eba\u52aa\u529b\u5c3d\u53ef\u80fd\u5730\u4e0e\u5916\u754c\u9694\u7edd\u3002\u201c\u5728\u7f57\u9a6c\u4e16\u754c\uff0c\u6211\u4eec\u5bf9\u4f11\u95f2\u548c\u5de5\u4f5c\u7684\u5212\u5206\u662f\u76f8\u53cd\u7684\u3002\u6211\u4eec\u4e3b\u8981\u505a\u7684\u662f\u5de5\u4f5c\uff0c\u5f53\u6211\u4eec\u4e0d\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u5728\u4f11\u95f2\u3002\u201c\u5728\u7f57\u9a6c\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u2026\u2026\u3002\n\u7f57\u9a6c\u4eba\u4e0d\u5fc5\u53bb\u7279\u6b8a\u7684\u5730\u65b9\u5de5\u4f5c\u3002\u4ed6\u4eec\u7684\u5e73\u677f\u7535\u8111\u548c\u89e6\u63a7\u7b14\u548c\u6211\u4eec\u7684\u4e00\u6837\u4fbf\u643a\uff0c\u7f57\u9a6c\u7cbe\u82f1\u5145\u5206\u5229\u7528\u4e86\u8fd9\u4e00\u7279\u70b9\u3002\u4e24\u5343\u5e74\u524d\uff0c\u4f5c\u5bb6\u517c\u5f8b\u5e08\u5c0f\u666e\u6797\u5c3c\u7ed9\u4ed6\u7684\u670b\u53cb\u5854\u897f\u56fe\u65af\u5199\u4e86\u4e00\u5c01\u4fe1\u3002\u4ed6\u8bf4\uff0c\u4ed6\u53d1\u73b0\u4e86\u4e00\u79cd\u51fa\u8272\u7684\u65b0\u5de5\u4f5c\u65b9\u6cd5\u3002\u90a3\u5929\uff0c\u4ed6\u51b3\u5b9a\u628a\u5b83\u4e0e\u730e\u6740\u91ce\u732a\u7ed3\u5408\u8d77\u6765\uff0c\u800c\u4e0d\u662f\u5750\u5728\u529e\u516c\u684c\u524d\u5fd9\u788c\u3002\u4ed6\u5750\u5728\u4ed6\u7684\u6e14\u7f51\u65c1\u201c\u4e0d\u662f\u62ff\u7740\u91ce\u732a\u957f\u77db\u6216\u8005.\u3002\n\u5f88\u5c11\u6709\u4e0a\u73ed\u65cf\u88ab\u7eb5\u5bb9\u5230\u8fd9\u79cd\u7a0b\u5ea6\u3002\u572820\u4e16\u7eaa\uff0c\u66fe\u7ecf\u8bbe\u8ba1\u8fc7\u5de5\u5382\u7684\u4eba\u628a\u6ce8\u610f\u529b\u8f6c\u5411\u4e86\u529e\u516c\u5ba4\u3002\u8fd9\u4e9b\u673a\u5668\u4e2d\u7684\u8fd0\u52a8\u90e8\u4ef6\u662f\u4eba\uff0c\u5b83\u4eec\u7684\u8f93\u51fa\u53ea\u662f\u7eb8\uff0c\u4f46\u6839\u636e\u63a8\u7406\uff0c\u540c\u6837\u7684\u539f\u7406\u80af\u5b9a\u9002\u7528\u3002\u5728\u7f8e\u56fd\uff0ct t", "note_en": "The coronavirus pandemic has sped up a revolution in home working, leaving offices around the world empty. But what was the point of them anyway?\n    In the spring of 1822 an employee in one of the world \u2019s first offices \u2013that of the East India Company in London \u2013sat down to write a letter to a friend. If the man was excited to be working in a building that was revolutionary, or thrilled to be part of a novel institution which would transform the world in the centuries that followed, he showed little sign of it. \u201cYou don \u2019t know how wearisome it is \u201d, wrote Charles Lamb, \u201cto breathe the air of four pent walls, without relief, day after  ...\n The world that Lamb wrote from is now long gone. The infamous East India Company collapsed in ignominy in the 1850s. Its most famous legacy, British colonial rule in India, disintegrated a century later. But his letter resonates today, because, while other empires have fallen, the empire of the office has triumphed over modern professional life.\n The dimensions of this empire are awesome. Its population runs into hundreds of millions, drawn from every nation on Earth. It dominates the skylines of our cities \u2013their tallest buildings are no longer cathedrals or temples but multi-storey vats filled with workers. It delineates much of our lives. If you are a hardworking citizen of this empire you will spend more waking hours with the irritating colleague to your left whose spare shoes invade your footwell than with your husband or wife,  ...\n Or rather you used to. This spring, almost overnight, the world\u2019s offices emptied. In New York and Paris, in Madrid and Milan, they ready themselves for commuters who never come. Empty lifts slide up and down announcing floor numbers to empty vestibules; water coolers hum and gurgle, cooling water that no one will drink. For the moment, office life is over.\n Even before coronavirus struck, the reign of the office had started to look a little shaky. A combination of rising rents, the digital revolution and increased demands for flexible working meant its population was slowly emigrating to different milieux. More than half of the Ameri\u00adcan workforce already worked remotely, at least some of the time. Across the world, home working had been rising steadily for a decade. Pundits predicted that it would increase further. No one imagined that a  ...\n It\u2019s too early to say whether the office is done for. As with any sudden loss, many of us find our judgment blurred by conflicting emotions. Relief at freedom from the daily commute and pleasure at turning one\u2019s back on what Philip Larkin called \u201cthe toad work\u201d are tinged with regret and nostalgia, as we prepare for another shapeless day of   in jogging bottoms.\n But we shouldn \u2019t let sentimentality cloud us. Offices have always been profoundly flawed spaces. Those of the East India Company, among the world \u2019s first, were built more for bombast than bureaucracy. They were sermons in stone, and the solidity of every marble step, the elegance of every Palladian pillar, were intended to speak volumes about the profitability and smooth functioning within. This was nonsense, of course. Created to ensure efficiency, offices immediately institutionalised  ...\n The first offices belonged to governments or quasi-government bodies like the East India Company. Running a country, let alone an empire, requires a lot of paper to be pushed and governing proved simpler when all those functionaries were in one place. But it was the Industrial Revolution that really changed things. Coal, steel and steam started to spin the wheels of the English textile industry ever faster and railways unspooled across the countryside. The new steam trains shuttled  ...\n The most transformatory aspect of offices was less the buildings themselves than the sheer amount of time we spent in them. This would have seemed alien to many earlier societies. Mary Beard, professor of classics at Cambridge University, notes that elite Romans strived to switch off as much as possible. \u201cOur division between leisure and work is reversed in the Roman world. What we mostly do is work and, when we \u2019re not working, we \u2019re at leisure. \u201dIn Rome it was the other way round  ...\n Romans didn \u2019t have to go to a special place to work. Their tablets and styluses were every bit as portable as our own, a feature that elite Romans took full advantage of. Two thousand years ago Pliny the Younger, an author and lawyer, wrote a letter to his friend Tacitus. He had found, he said, a splendid new method of working. Instead of going about his business at a desk, he had decided that day to combine it with a boar hunt. He sat next to his nets \u201cnot with boar spear or  ...\n Few office workers have been indulged to this extent. In the 20th century, the people who had once designed factories turned their attention to offices. The moving parts in these machines were humans and their output merely paper but, it was reasoned, the same principles surely applied. In America teams armed with stopwatches, and a firm belief that a well-oiled office was a wonderful thing, recorded how long each task took. Anything that added extra tick-tocks of time received  ...\n When time-and-motion studies examine offices today, their results can be dispiriting. Office-work takes up not merely the bulk of our time but the best part of it, the hours when we are alert and alive. Home, and its occupants, has the husk. Most managers spend at least 20 hours a week in meetings, according to a study by Bain &amp; Company in 2014. Over the course of a lifetime that amounts to nearly five full years. Many of these meetings, in wistful retrospect, might have  ...\n But getting work done has never really been the point of offices. In 2004 Corinne Maier, a French psychoanalyst who at the time was working at  , the French electrical giant, published a book called \u201cBonjour paresse \u201d, or \u201cHello Laziness \u201d. The critique of corporate culture became an instant international bestseller. Maier argues that, far from aiding efficiency, offices are \u201cuseless \u201dsince workers \u201close a lot of time going to meetings and speaking the jargon and doing in fact  ...\n Maier might have become a bestseller but on the whole writing about offices is not \u2013at least in the West \u2013an instant route to stardom. Lamb \u2019s letters are typical. His correspondent for that first, springtime letter was William Wordsworth, the great Romantic poet, who filled his days with walks in the Lake District and his pages with dancing daffodils. Lamb, by contrast, filled his days in London \u2019s financial district and his pages with the price of tea. Though Lamb \u2019s is the  ...\n It \u2019s not just poetry but fiction that tends to ignore the office (China, where top-selling novelists write books with such thrilling titles as \u201cThe Civil Servant \u2019s Notebook \u201d, is a rare exception). Though great writers have tackled the subject, including Balzac, Dickens, Flaubert, Melville and Kafka, they do so more in satire than celebration. Joshua Ferris, an American novelist, won literary plaudits for \u201cThen We Came to the End \u201d, a novel that sustained a narrative in  ...\n Poets have been even more scathing. John Betjeman wished for bombs to fall and \u201cblow to smithereens/Those air-conditioned, bright canteens\u201d. In \u201cThe Waste Land\u201d, T.S. Eliot (who had once worked in Lloyds Bank) saw the crowds of commuters crossing London Bridge in terms of Dante\u2019s vision of hell: \u201cI had not thought death had undone so many.\u201d Walt Whitman sneered at clerks as men \u201cof minute leg, chalky face and hollow chest\u201d.\n There is more than a dash of superiority in such attacks, but there are good reasons to be critical of offices. Many of the more recent examples are aesthetic embarrassments. Where Ancient Rome had the Colosseum, Renaissance Florence had Brunelleschi \u2019s dome and Byzantium had the Hagia Sophia, we have endless, interchangeable glass-and-steel boxes. This, says Thomas Heatherwick, a British architect, is because the design of offices \u2013indeed all public buildings \u2013has been  ...\n  Like a dad at the disco, the office has been trying to do this for a while. Daring architects have broken the mould to construct buildings in the shape of gherkins, cheese graters and walkie talkies \u2013and that \u2019s just in London. To change the stale spaces inside, startups introduced ping-pong tables and ball pits ( \u201cdumb fun \u201d, sniffs Heatherwick). Then they offered free food in an attempt to keep workers perpetually in their embrace. Who needs to go home for dinner, when your company  ...\n Offices can be not just offensive to the eye but harmful to the body. Sitting isn \u2019t quite the new smoking, but it certainly won \u2019t do you any good. A life lived on one \u2019s bottom increases the risk of heart disease, type-2 diabetes, some cancers and all manner of back problems. Offices also entrench social inequalities. The top dog is more likely to hire in his own image, perpetuating male privilege. In 2018 there were more men called Steve than there were women among the chief  ...\n The office has further-reaching patriarchal ploys up its sleeve. Chief among these is its response to children. Or rather lack of it. For most of history, workplaces ignored children entirely (the run on deposits precipitated by the arrival of the Banks twins at their father \u2019s place of work in \u201cMary Poppins \u201dshows the dire consequences of offspring turning up at the office). The Angel in the House, as Victorians fondly referred to their wives, was assumed to handle all that.  ...\n The office \u2019s ongoing indifference to children has resulted in the social phenomenon that Emily Oster, professor of economics at Brown University and author of \u201cCribsheet \u201d, a data-led guide to raising kids, calls \u201csecret parenting \u201d. Parents strive to keep up the old pretence that children don \u2019t exist, deploying techniques that range from not putting up pictures of one \u2019s children at work, to pretending that they themselves are ill so that they can care for genuinely sick infants  ...\n Despite the commute and the colleagues, the sitting and the stale meetings, offices bring many of us something else too: joy. Lucy Kellaway, who wrote a long-running column in the  Financial Timeson the absurdities of office life, talks of the \u201cgreat artificiality \u201dwe embrace the moment that we step into an office. \u201cWe pretend that our clothes are always in order and that we are entirely professional and impersonal. Whereas probably in our heads and definitely in our homes there  ...\n And what a wonderful thing that artifice can be. Now that we are all working from home, amid the children, the toast crumbs and the laundry, we are realising that the pretence of an orderly life at the office is also a liberation. It allows each day to have its own architecture, its rhythms of departure and arrival. Putting on a perfectly ironed silk shirt or a crisp suit and leaving the house may be contrived but it is also, says Kellaway, \u201cone of the beauties of working life...It  ...\n And so, for all the threat faced by the office, there is also cause for optimism about its future. These days the \u201chyper-physical\u2026is so cherished,\u201d notes Heatherwick. Sales of records are at their highest in years, book covers have rarely looked so beautiful. Though many of us might have been loth to admit it until this spring, all those desks and all those people, all that bustle and time-wasting, have their benefits.\n Humans need offices. Online encounters may be keeping us alive as social beings right now, but work-related video meetings are too often transactional, awkward and unappealing. After the initial joy of peering into each other \u2019s houses on Zoom, we are confronted with people \u2019s heads looming even closer than we see them across the desk at work, and we gaze in horror \u2013half of it self-awareness that we, too, must look awful \u2013at thinning hair and double chins. We become freakish  ...\n For all his grumbling, Charles Lamb believed something similar too. When Wordsworth seems to have grown a trifle too smug about the sublime joys of the natural world, Lamb snapped back. \u201cI don\u2019t much care if I never see a mountain in my life.\u201d But he did care for the city and he certainly loved offices. All his complaints were, he wrote, mere \u201clovers\u2019 quarrels\u201d. Above all, he loved his desk. For it was that \u201cdead timber of a desk that makes me live\u201d. \u2022", "posttime": "2020-05-02 18:03:24", "tags": "\u529e\u516c\u5ba4,death,offices", "title": "\u529e\u516c\u5ba4\u4e4b\u6b7b", "title_en": "Death of the Office", "transed": 0, "url": "https://www.1843magazine.com/features/death-of-the-office", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u529e\u516c\u5ba4", "death", "offices"]}, {"category": "", "categoryclass": "", "imagename": "25ad01b0db940a18f01708fd54eda006.png", "infoid": 1000270, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8981\u5728\u60a8\u7684AWS\u73af\u5883\u4e2d\u8bbe\u7f6e\u65e0\u670d\u52a1\u5668CI/CD\u7ba1\u9053\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u51e0\u9879\u5173\u952e\u670d\u52a1\u3002\u5728\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u3002", "note_en": "To set up a serverless CI/CD pipeline in your AWS environments, there are several key services that you need to use. Find out more here.", "posttime": "2020-05-02 18:03:20", "tags": "\u670d\u52a1\u5668,ci,\u9700\u8981,serverless", "title": "AWS\u4e91\u4e0a\u7684\u65e0\u670d\u52a1\u5668CI/CD", "title_en": "Serverless CI/CD on the AWS Cloud", "transed": 0, "url": "https://caylent.com/serverless-ci-cd-on-the-aws-cloud", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u670d\u52a1\u5668", "ci", "\u9700\u8981"]}, {"category": "", "categoryclass": "", "imagename": "1d3da5d3fe8f3381e9b30706c7b0c031.jpg", "infoid": 1000269, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u573a\u5927\u6d41\u884c\u671f\u95f4\uff0c\u88ab\u56f0\u5728\u5bb6\u91cc\u7684\u4f17\u591a\u6311\u6218\u4e4b\u4e00\u662f\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u4ee5\u6700\u597d\u7684\u65b9\u5f0f\u5e2e\u52a9\u6211\u4eec\u6240\u70ed\u7231\u548c\u4f9d\u8d56\u7684\u5f53\u5730\u4f01\u4e1a\u3002\u4ee5\u5916\u5356\u4e3a\u4f8b\uff1a\u6211\u4eec\u5949\u547d\u4ece\u6211\u4eec\u6700\u559c\u6b22\u7684\u9910\u5385-\u7279\u522b\u662f\u89c4\u6a21\u8f83\u5c0f\u7684\u5bb6\u65cf\u4f01\u4e1a-\u8ba2\u8d2d\u5916\u5356\u548c\u9001\u8d27\u670d\u52a1\uff0c\u4ee5\u786e\u4fdd\u5728\u8fd9\u6bb5\u7269\u7406\u8ddd\u79bb\u671f\u95f4\uff0c\u4ed6\u4eec\u7684\u9910\u5385\u5173\u95ed\u65f6\uff0c\u81f3\u5c11\u80fd\u5e26\u6765\u4e00\u4e9b\u6536\u5165\u3002\u867d\u7136\u8fd9\u662f\u4e2a\u5f88\u68d2\u7684\u8ba1\u5212\uff0c\u4f46\u4f60\u5e2e\u52a9\u4ed6\u4eec\u7684\u7a0b\u5ea6.\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5df2\u7ecf\u517b\u6210\u4e86\u901a\u8fc7\u7b2c\u4e09\u65b9\u9001\u8d27\u5e94\u7528\u7a0b\u5e8f\u8ba2\u9910\u7684\u4e60\u60ef\uff0c\u6bd4\u5982GrubHub\u3001Seamless\u6216Caviar\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u4f60\u53ef\u80fd\u6536\u5230\u4e86\u6765\u81ea\u8fd9\u4e9b\u516c\u53f8\u7684\u6e90\u6e90\u4e0d\u65ad\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8bd5\u56fe\u7528\u201c\u652f\u6301\u665a\u9910\u201d\u8fd9\u6837\u7684\u4fc3\u9500\u6d3b\u52a8\u6765\u5438\u5f15\u6211\u4eec\uff0c\u5728\u8fd9\u4e9b\u4fc3\u9500\u6d3b\u52a8\u4e2d\uff0cGrubHub\u7684\u7528\u6237\u5728\u7279\u5b9a\u65f6\u95f4\u4ece\u5f53\u5730\u9910\u5385\u8ba2\u9910\u53ef\u4ee5\u83b7\u5f97\u989d\u5916\u7684\u6298\u6263\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e2a\u597d\u4e3b\u610f\uff1a\u4fdd\u7559\u4f60\u6700\u559c\u6b22\u7684\u9910\u5385\u2026\u2026\u3002\n\u5728\u8d44\u672c\u4e3b\u4e49\u4e0b\u6ca1\u6709\u9053\u5fb7\u6d88\u8d39-\u5373\u4f7f\u662f\u8f6f\u7cd6\u718a\u4e5f\u4e0d\u5b89\u5168-\u4f46\u6211\u66f4\u613f\u610f\u8ba4\u4e3a\u2026\u3002\n\u591a\u8bfb\u3002\n\u4f46\u5e76\u4e0d\u662f\u90a3\u4e48\u5feb\uff1a\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e9b\u6298\u6263\u6765\u81ea\u9910\u5385\u7684\u5229\u6da6\uff0c\u80af\u5b9a\u4e0d\u662f\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u60f3\u8ba9\u4f60\u76f8\u4fe1\u7684\u5229\u4ed6\u4e3b\u4e49\u884c\u4e3a\u3002\n\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u6570\u5b57\u3002\u82f1\u56fd\u300a\u536b\u62a5\u300b\u8bb0\u8005\u82cf\u897f\u00b7\u5361\u683c\u5c14\u6700\u8fd1\u5728\u63a8\u7279\u4e0a\u53d1\u4e86\u4e00\u5f20\u6765\u81ea\u829d\u52a0\u54e5\u62ab\u8428\u8001\u677f\u7684GrubHub\u53d1\u7968\uff0c\u8be6\u7ec6\u8bf4\u660e\u4e86\u5f53\u4f60\u4f7f\u7528\u8fd9\u6b3e\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5e76\u5229\u7528\u5176\u4fc3\u9500\u6d3b\u52a8\u65f6\uff0c\u4f60\u7684\u94b1\u5230\u5e95\u82b1\u5728\u4e86\u54ea\u91cc\u3002(\u5267\u900f\uff1a\u4e0d\u662f\u53bb\u9910\u5385\u3002)\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u60c5\u51b5\uff1a\u6211\u4eec\u5df2\u7ecf\u5199\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u901a\u8fc7\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u8ba2\u9910\u662f\u5982\u4f55\u635f\u5bb3\u5f53\u5730\u9910\u5385\u7684\u3002\u4e0d\u540c\u7684\u662f\uff0c\u73b0\u5728\u4eba\u4eec\u8ba2\u8d2d\u9001\u8d27\u7684\u6b21\u6570\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u591a\uff0c\u800c\u4e14\u53ef\u80fd\u662f\u5728\u9519\u8bef\u7684\u770b\u6cd5\u4e0b\u8fd9\u6837\u505a\u7684\uff0c\u8ba4\u4e3a\u4ed6\u4eec\u662f\u5728\u5e2e\u52a9\u4e00\u5bb6\u4f01\u4e1a\u7ef4\u6301\u8fd0\u8425\uff0c\u800c\u6ca1\u6709\u610f\u8bc6\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u7591\u505a\u6cd5\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u9910\u9986\u6839\u672c\u4e0d\u80fd\u63d0\u4f9b\u9910\u684c\u670d\u52a1\uff0c\u9001\u9910\u548c\u5916\u5356\u90fd\u662f\u767e\u5206\u4e4b\u767e\u7684\u2026\u3002\n\u4f8b\u5982\uff0c\u6b63\u5982\u5e03\u9c81\u514b\u6797\u7684Baba\u2018s Pierogie\u6700\u8fd1\u5728Instagram\u4e0a\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u81ea2020\u5e741\u67081\u65e5\u4ee5\u6765\uff0c\u8fd9\u5bb6\u9910\u5385\u5df2\u7ecf\u82b1\u8d39\u4e86\u8d85\u8fc72\u4e07\u7f8e\u5143\u7684\u7b2c\u4e09\u65b9\u5e73\u53f0\u767e\u5206\u6bd4\u8d39\u7528\u3002\u90a3\u4e48\uff0c\u4ed6\u4eec\u5f53\u521d\u4e3a\u4ec0\u4e48\u8981\u52a0\u5165\u5462\uff1f\u4ed6\u4eec\u4e5f\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u6211\u4eec\u522b\u65e0\u9009\u62e9\uff0c\u6211\u4eec\u6295\u964d\u4e86\u3002\u6765\u81ea\u8fd9\u4e9b\u5e73\u53f0\u7684\u6536\u5165\u5bf9\u6211\u4eec\u7684\u4e1a\u52a1\u4ea7\u751f\u4e86\u5f71\u54cd\uff0c\u6211\u76f8\u4fe1\u7ebd\u7ea6\u7684\u8bb8\u591a\u5176\u4ed6\u4e1a\u52a1\u4e5f\u662f\u5982\u6b64\u3002\u50cf\u5176\u4ed6\u540c\u884c\u4e00\u6837\uff0c\u6211\u4eec\u4ece\u6765\u4e0d\u559c\u6b22\u8fd9\u79cd\u5408\u4f5c\u5173\u7cfb\uff0c\u4f46\u6211\u4eec\u987a\u4ece\u4e86\u5b83\u3002\u73b0\u5728\uff0c\u5728\u8fd9\u573a\u771f\u6b63\u5c06\u8be5\u884c\u4e1a\u6263\u4e3a\u7b2c\u4e09\u65b9\u5e73\u53f0\u4eba\u8d28\u7684\u5371\u673a\u4e2d\uff0c\u6211\u4eec\u66f4\u6e05\u695a\u5730\u610f\u8bc6\u5230\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u540d\u5b57\u51fa\u73b0\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\uff0c\u6211\u4eec\u5c31\u4ece\u81ea\u5df1\u7684\u8d26\u6237\u4e2d\u63d0\u53d6\u4e86\u591a\u5c11\u94b1\u3002\u6211\u4eec\u505a\u98df\u7269\uff0c\u7136\u540e\u9001\u98df\u7269\u3002\u770b\u8d77\u6765..\u3002\n\u662f\u7684\uff0c\u8fd9\u4e00\u5207\u90fd\u76f8\u5f53\u4e25\u5cfb-\u7279\u522b\u662f\u5982\u679c\u4f60\u8ba4\u4e3a\u901a\u8fc7\u8fd9\u4e9b\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u8ba2\u8d2d\u786e\u5b9e\u662f\u5728\u505a\u6b63\u786e\u7684\u4e8b\u60c5-\u4f46\u4f60\u53ef\u4ee5\u505a\u4e00\u4e9b\u4e8b\u60c5\u6765\u5e2e\u52a9\u4f60\u3002\n\u6211\u4eec\u4ee5\u524d\u8bf4\u8fc7\uff0c\u6211\u4eec\u4f1a\u518d\u8bf4\u4e00\u904d\uff1a\u4e0b\u6b21\u51b3\u5b9a\u653e\u7f6e\u2026\u65f6\u62ff\u8d77\u7535\u8bdd\u3002\n\u591a\u8bfb\u3002\n\u901a\u8fc7\u76f4\u63a5\u4ece\u9910\u5385\u8ba2\u9910\uff0c\u4f60\u53ef\u4ee5\u4fdd\u8bc1\u4ed6\u4eec\u662f\u4ece\u9500\u552e\u4e2d\u83b7\u5229\u7684\u4eba\u3002\u8fd8\u8bb0\u5f97\u5f53\u65f6\u6bcf\u4e2a\u4eba\u7684\u53a8\u623f\u91cc\u90fd\u6709\u4e00\u4e2a\u62bd\u5c49\uff0c\u91cc\u9762\u585e\u6ee1\u4e86\u5916\u5356\u83dc\u5355\uff0c\u65c1\u8fb9\u8fd8\u6709\u94a2\u7b14\u3001\u80f6\u5e26\u548c\u6a61\u76ae\u7b4b\u7b49\u5176\u4ed6\u5404\u5f0f\u5404\u6837\u7684\u5783\u573e\u3002\u597d\u4e86\uff0c\u73b0\u5728\u662f\u65f6\u5019\u91cd\u632f\u83dc\u5355\u62bd\u5c49\u4e86--\u81f3\u5c11\u662f\u4ee5\u67d0\u79cd\u5f62\u5f0f\u3002\n\u4f46\u662f\u4f60\u5c31\u4e0d\u80fd\u6253\u5f00GrubHub\u6765\u4ed4\u7ec6\u9605\u8bfb\u83dc\u5355\uff0c\u7136\u540e\u627e\u5230\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u6765\u6253\u7535\u8bdd\u70b9\u9910\u5417\uff1f\u867d\u7136\u8fd9\u5728\u7406\u8bba\u4e0a\u542c\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u7b2c\u4e09\u65b9\u7f51\u7ad9\u53ef\u80fd\u4f1a\u5217\u51fa\u4ed6\u4eec\u81ea\u5df1\u7684\u9910\u5385\u7535\u8bdd\u53f7\u7801-\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u6253\u7535\u8bdd\u4e0b\u5355\uff0c\u5b83\u4ecd\u7136\u5728\u901a\u8fc7\u4ed6\u4eec\u7684\u5e73\u53f0\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u5c06\u6b64\u4f5c\u4e3a\u6536\u53d6\u4f63\u91d1\u7684\u7406\u7531\uff0c\u5373\u4f7f\u4f60\u7684\u8ba2\u5355\u4e0d\u662f\u901a\u8fc7\u4ed6\u4eec\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u6765\u7684\uff0c\u56e0\u4e3a\u8fd9\u201c\u8bc1\u660e\u201d\u4ea4\u6613\u662f\u4ece\u90a3\u91cc\u5f00\u59cb\u7684\u3002\n\u8fd9\u5c31\u662f\u597d\u7684\u8001\u5f0f\u7eb8\u8d28\u83dc\u5355-\u6216\u8005\u81f3\u5c11\u76f4\u63a5\u8fdb\u5165\u9910\u5385\u81ea\u5df1\u7684\u7f51\u7ad9-\u7684\u7528\u6b66\u4e4b\u5730\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u5168\u7701\u53bb\u4e2d\u95f4\u5546\uff0c\u5e76\u786e\u4fdd\u4f60\u5fc3\u7231\u7684\u5f53\u5730\u9910\u5385\u4ece\u4f60\u7684\u8ba2\u5355\u4e2d\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u5229\u6da6\u3002\n\u5728\u540c\u4e00\u4e2aInstagram\u5e16\u5b50\u4e2d\uff0cBaba\u2018s Pierogie\u5ba3\u5e03\u4ed6\u4eec\u5df2\u7ecf\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2a\u94fe\u63a5\uff0c\u987e\u5ba2\u53ef\u4ee5\u76f4\u63a5\u4ece\u4ed6\u4eec\u90a3\u91cc\u8ba2\u8d2d\u9001\u8d27\u6216\u63d0\u8d27\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u5728\u7ebf\u652f\u4ed8\uff0c\u56e0\u6b64\u5916\u5356/\u9001\u8d27\u4fdd\u6301\u975e\u63a5\u89e6\u5f0f\u3002\u5176\u4ed6\u9910\u5385\u4e5f\u505a\u4e86\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u5728\u70b9\u83dc\u4e4b\u524d\u68c0\u67e5\u4e00\u4e0b\u8fd9\u662f\u4e0d\u662f\u4e00\u4e2a\u9009\u62e9\u3002\n\u5f53\u4f60\u5728\u7f51\u4e0a\u8ba2\u9910\u65f6\uff0c\u53ea\u9700\u5728\u7f51\u4e0a\u52a0\u51e0\u7f8e\u5143\u4f5c\u4e3a\u2026\u5c31\u592a\u5bb9\u6613\u4e86\u3002\n\u591a\u8bfb\u3002\n\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u6742\u4e71\u65e0\u7ae0\uff0c\u6216\u8005\u4e0d\u559c\u6b22\u7eb8\u8d28\u83dc\u5355\uff0c\u53ea\u9700\u6293\u62cd\u83dc\u5355\u7684\u7167\u7247\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u624b\u673a\u4e0a\u6216\u7535\u8111\u4e0a\u7684\u4e00\u4e2a\u7279\u6b8a\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002\u5e95\u7ebf\u662f\u6295\u5165\u5fae\u4e0d\u8db3\u9053\u7684\u989d\u5916\u52aa\u529b\u3002", "note_en": "One of the many challenges of being stuck at home during this pandemic is not knowing the best ways to help the local businesses we love and depend on. Take, well, takeout: We\u2019ve been instructed to order takeout and delivery from our favorite restaurants\u2014especially smaller, family-owned businesses\u2014to ensure they are bringing in at least some income while their dining rooms are closed during this period of physical distancing. And while this is a great plan, the degree to which you \u2019re helping them  ...\n   Over the past several years, many of us have gotten in the habit of ordering food through third-party delivery appslike GrubHub, Seamless or Caviar. And over the past few weeks, you \u2019ve likely received a steady stream of emails from these companies, trying to lure us in with promotions like \u201cSupport for Supper, \u201dwhere GrubHub users get additional discounts for ordering food from local restaurants during certain hours. On the surface, this seems like a great idea: keeping your favorite restaurants  ...\n   There\u2019s no ethical consumption under capitalism\u2014even gummy bears aren\u2019t safe\u2014but I\u2019d like to think\u2026\n Read more\n But not so fast: As it turns out, these discounts are coming out of the  restaurants\u2019 profits, and are certainly not the altruistic acts that third-party apps want you to believe they are.\n  Let\u2019s take a look at some numbers. Susie Cagle, a reporter at The Guardian,   recently tweeted a GrubHub invoice from Chicago Pizza Boss, breaking down exactly where your money is going when you use the third-party app and take advantage of its promotions. (Spoiler: it\u2019s not to the restaurants.)\n    Unfortunately, this is not a new situation:   We\u2019ve been writing about how   ordering food through third-party apps is   harming local restaurants for a while. The difference is that now people are ordering delivery more than ever before,  and may be doing so under the mistaken perception that they are helping a business stay afloat, unaware of the apps\u2019 shady practices. On top of that, restaurants are no longer able to offer table service at all, and withdelivery and takeout comprising 100 percent  ...\n For example, as   Baba\u2019s Pierogies in Brooklyn   recently explained in an Instagram post that the restaurant has spent more than $20,000 in third-party platform percentage fees since January 1, 2020. So why did they join in the first place? They explain that, too:\n We didn \u2019t have a choice, we caved. Revenue from these platforms made a difference for our business and I \u2019m certain does for many other NYC businesses. Like other fellow businesses, we never liked the partnership but went along with it. Now, during this crisis which is really holding the industry hostage to 3rd party platforms, we are even more aware of the amount of money that we get withdrawn from our account just to have our name on their site. We make the food AND deliver the food. Seems  ...\n   Yes, this is all pretty grim\u2014especially if you thought you were genuinely doing the right thing by ordering through these third-party apps\u2014but there is something you can do to help.\n  We\u2019ve said it before and we\u2019ll say it again: Pick up the phone the next time you decide to place a\u2026\n Read more\n  By ordering food directly from the restaurant, you\u2019re guaranteeing that they\u2019re the ones who profit from the sale. Remember back when everyone had a drawer in their kitchen stuffed with takeout menus alongside the other assorted junk like pens, tape and rubber bands? Well, it\u2019s time to resurrect the menu drawer\u2014at least in some form.\n  But can\u2019t you just pull up GrubHub to peruse the menu and find a phone number to call and order your food? While that sounds great in theory, in practice,   third-party sites may list their own phone numbers for the restaurant\u2014meaning that if you call to place an order, it\u2019s still going through their platform. The app uses this as a justification to take a commission, even though your order didn\u2019t come through their website or app, because it \u201cproves\u201d the transaction originated there.\n That\u2019s where good old-fashioned paper menus\u2014or at least going directly to a restaurant\u2019s own website\u2014come in. This allows you to completely cut out the middleman and ensure that your beloved local eatery is getting the maximum profits possible from your order.\n  In the   same Instagram post, Baba\u2019s Pierogies announced that they have set up a link on their website that allows customers to order directly from them for delivery or pickup. It also allows you to pay online, so the takeout/delivery remains contactless. Other restaurants have done the same thing, so   check to see if that\u2019s an option before you order.\n When you\u2019re ordering food online, it\u2019s all too easy to just add a couple of dollars online as a\u2026\n Read more\n  And if you\u2019re not a fan of clutter or having paper menus sitting around, just snap a photo of the menu and store it on your phone or in a special folder on your computer. The bottom line is to put in the tiny amount of extra effort it takes to order directly from the business you are trying to support. It may mean the difference between them staying open and\u00a0going under before you\u2019re able to dine there in person again.", "posttime": "2020-05-02 18:03:16", "tags": "\u9910\u5385,order", "title": "\u53c8\u5230\u4e86\u76f4\u63a5\u4ece\u9910\u5385\u70b9\u83dc\u7684\u65f6\u5019\u4e86", "title_en": "It's Time to Order Directly from Restaurants Again", "transed": 0, "url": "https://lifehacker.com/its-time-to-order-directly-from-restaurants-again-1843199079", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u9910\u5385", "order"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000267, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u5de5\u4f5c\u4e2d\u9047\u5230\u4e86\u6570\u636e\u53ef\u89c6\u5316\u95ee\u9898\u3002\u6211\u4e00\u76f4\u5728\u8003\u8651\u5e03\u666f\u8986\u76d6\u7684\u95ee\u9898\uff0c\u5e76\u60f3\u6d4b\u8bd5\u4e00\u4e9b\u53ef\u89c6\u5316\u7684\u60f3\u6cd5\u3002\u6211\u66fe\u7ecf\u60f3\u8981\u53ef\u89c6\u5316\u805a\u5408\u5ea6\u91cf\u7684\u7a7a\u95f4(\u5373\u50cf\u624b\u6bb5\u4e4b\u7c7b\u7684\u4e1c\u897f)\u3002\u540e\u6765\u53d1\u73b0\u6211\u4e0d\u9700\u8981\u5b83\uff0c\u56e0\u4e3a\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u60f3\u6cd5\u4ece\u4e00\u5f00\u59cb\u5c31\u662f\u9519\u8bef\u7684\u3002\u6211\u5df2\u7ecf\u5199\u4e86\u4e00\u4e9b\u4ee3\u7801\uff0c\u975e\u5e38\u60f3\u68c0\u67e5\u4e00\u4e0b\u3002\u5230\u4e86\u6700\u540e\uff0c\u5b83\u5df2\u7ecf\u53d8\u6210\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5a31\u4e50\u4e4b\u591c\u2026\u2026\u3002\n\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u8ba1\u7b97\u673a\u8bed\u8a00\u57fa\u51c6\u6e38\u620f\u5df2\u7ecf\u5728\u6211\u7684\u4e00\u4e2a\u6d4f\u89c8\u5668\u9009\u9879\u5361\u4e0a\u6253\u5f00\u4e86\u5927\u7ea6\u4e00\u4e2a\u6708\u3002\u6211\u60f3\u77e5\u9053\u8fd9\u4e9b\u6570\u636e\u662f\u5426\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u3002\u786e\u5b9e\u662f\u3002\u6211\u63c9\u4e86\u63c9\u624b\u5c31\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002\u4e00\u5c0f\u65f6\u540e\uff0c\u6211\u6709\u4e86\u8fd9\u4e2a(\u89e3\u91ca\u548c\u64cd\u4f5c\u6307\u5357\u5982\u4e0b)\u3002\nX\u8f74\u8868\u793aCLEAN(\u5373\u65e0\u6ce8\u91ca\u3001\u6807\u51c6\u5316\u7a7a\u767d)GZip\u2018d\u7a0b\u5e8f\u6e90\u4ee3\u7801\u7684\u5927\u5c0f(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\u3002Y\u8f74\u8868\u793a\u6027\u80fd\uff0c\u4ee5CPU\u65f6\u95f4\u8861\u91cf-\u8d8a\u4f4e\u8d8a\u597d\u3002\u8fd9\u4e9b\u70b9\u662f\u57fa\u51c6\u6e38\u620f\u6570\u636e\u96c6\u4e2d\u6240\u6709\u8bed\u8a00\u7684\u6240\u6709\u57fa\u51c6\u7684\u6240\u6709\u6570\u636e\u70b9\u3002\u5728\u6bcf\u4e2a\u5c0f\u60c5\u8282\u4e2d\uff0c\u90fd\u6709\u7279\u5b9a\u8bed\u8a00\u7684\u60c5\u8282\u3002\u6bcf\u6761\u7ea2\u7ebf\u662f\u4ece\u7ed9\u5b9a\u8bed\u8a00\u7684\u5e73\u5747\u503c(X\uff0cY)\u5230\u6570\u636e\u70b9\u7684\u4e00\u6761\u7ebf\u3002\u7f16\u7a0b\u8bed\u8a00\u7684\u7279\u5b9a\u5b50\u96c6.\u3002\n\u6b64\u56fe\u8868\u663e\u793a\u4e86\u7528\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u7684\u5197\u957f\u7a0b\u5ea6\u4e0e\u5176\u8fd0\u884c\u65f6\u6027\u80fd\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u7406\u60f3\u7684\u7f16\u7a0b\u8bed\u8a00\u5e94\u8be5\u4f4d\u4e8e\u5de6\u4e0b\u8c61\u9650\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u7701\u7565\u4e86\u6211\u6700\u559c\u6b22\u7684\u8bed\u8a00\u4e4b\u4e00Python\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u5728\u7ed9\u5b9a\u7684\u6700\u5927X\u548cY\u5904\u622a\u65ad\u4e86\u56fe\u8868\u3002Python\u7684\u8fd9\u6837\u4e00\u4e2a\u60c5\u8282\u4e0d\u4f1a\u663e\u793a\u7ea2\u7ebf\u3002\u6211\u628a\u5b83\u6362\u6210\u4e86\u65af\u5a01\u592b\u7279\u3002\n\u7ebf\u6761\u7684\u5bc6\u5ea6\u663e\u793a\u4e86\u6b63\u5728\u8003\u8651\u7684\u8ba1\u5212\u6570\u91cf\u3002\u5728\u6570\u636e\u96c6\u4e2d\uff0c\u4e3a\u6bcf\u79cd\u8bed\u8a00\u7684\u6bcf\u4e2a\u57fa\u51c6\u8003\u8651\u591a\u4e2a\u5b9e\u73b0\u3002\u5bf9\u4e8e\u4e0a\u56fe\uff0c\u6211\u53ea\u8003\u8651\u4e86\u6bcf\u79cd\u8bed\u8a00\u57fa\u51c6\u6d4b\u8bd5\u7684\u6700\u9ad8\u6027\u80fd\u57fa\u51c6\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u6ca1\u6709\u53ea\u8fc7\u6ee4\u6700\u597d\u7684\uff1a\n\u9762\u79ef\u57fa\u672c\u4e0a\u5c31\u662f\u65b9\u5dee\u3002\u6211\u539f\u672c\u8fd8\u60f3\u7ed8\u5236\u8fde\u63a5\u5b83\u4eec\u7684\u591a\u8fb9\u5f62\u3002\u4f46\u6211\u8ba4\u4e3a\u4eba\u7c7b\u7684\u5927\u8111\u4e0d\u64c5\u957f\u7406\u89e3\u67d0\u4e9b\u9886\u57df\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u4e0d\u8fd9\u4e48\u505a\u3002\n\u8fd9\u4e9b\u56fe\u8868\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\u55ef\uff0c\u9996\u5148\uff0c\u5b83\u8ba9\u6211\u626e\u6f14\u4e1a\u4f59\u5206\u7c7b\u5b66\u5bb6\u7684\u89d2\u8272\u3002\u5b83\u7edd\u5bf9\u4e0d\u662f\u6b63\u5f0f\u7684\uff0c\u4f46\u662f\u73b0\u5728\u6211\u53ef\u4ee5\u6839\u636e\u7f16\u7a0b\u8bed\u8a00\u7684\u5927\u5c0f-\u6027\u80fd\u56fe\u7684\u5f62\u72b6\u6765\u91cf\u5316\u5b83\u4eec\u7684\u79cd\u7c7b\u3002\u5b83\u5141\u8bb8\u8fdb\u884c\u4ee5\u4e0b\u89c2\u5bdf\u3002\n\u56f4\u68cb\u662f\u4e3a\u559c\u6b22\u201c\u4e2d\u9053\u201d\u7684\u4f5b\u6559\u5f92\u51c6\u5907\u7684\u3002\u8fd9\u771f\u7684\u5f88\u666e\u901a\u3002\u5b8c\u5168\u662f\u5076\u7136\u7684\uff0c\u6211\u628a\u5b83\u843d\u5728\u4e86\u5267\u60c5\u7684\u4e2d\u592e\u3002Ruust\u5177\u6709C\u8bed\u8a00\u7684\u6027\u80fd\u7279\u5f81\uff0c\u4f46\u66f4\u52a0\u5197\u957f\u3002\u6700\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\u51fd\u6570\u5f0f\u8bed\u8a00OCaml\u548cHaskell\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u4e8e\u4e00\u79cd\u4ee5\u7b80\u6d01\u8457\u79f0\u7684\u8bed\u8a00\uff0cHaskell\u5e76\u4e0d\u50cf\u9884\u671f\u7684\u90a3\u6837\u7b80\u6d01-\u5b83\u7684\u5e73\u5747\u6e90\u4ee3\u7801\u5927\u5c0f\u5927\u4e8eGo\u6e90\u4ee3\u7801\u7684\u5e73\u5747\u5927\u5c0f\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5965\u5361\u59c6\u5c14\u5219\u662f\u4e00\u5339\u9ed1\u9a6c\u3002\u662f\u5173\u4e8e..\u3002\n\u6731\u8389\u5a05\u5728\u51e0\u4e2a\u65b9\u9762\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\uff1a\u6731\u8389\u5a05\u662f\u4e2a\u53e3\u9f7f\u4e0d\u6e05\u7684\u4eba\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u7b80\u6d01\u6027\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002Julia\u4f7f\u7528LLVM\uff0c\u5b83\u6709\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u540e\u7aef\u4f18\u5316\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u7684\u8f83\u4f4e\u8868\u73b0\u6709\u70b9\u4ee4\u4eba\u60ca\u8bb6\u3002\u7136\u800c\uff0c\u4f7f\u7528\u4e2d\u503c\u805a\u5408\u8861\u91cf\u6807\u51c6\uff0c\u6731\u8389\u5a05\u770b\u8d77\u6765\u66f4\u50cf\u9884\u671f\u7684\u90a3\u6837\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u7edd\u5bf9\u6ca1\u6709\u4e00\u4e2a\u7ecf\u5e38\u9605\u8bfb\u8fd9\u4e2a\u535a\u5ba2\u7684\u4eba(\u4f60\u4eec\u4e24\u4e2a\u597d)\uff0c\u6211\u628a\u5b83\u5199\u5728\u56f4\u68cb\u91cc\u4e86\u3002\u6211\u4f7f\u7528\u4e86\u6208\u7eb3\u59c6\u7684\u66f2\u7ebf\u56fe\u5e93\u6765\u751f\u6210\u66f2\u7ebf\u56fe\u3002\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\n\u8fd9\u4e2a\u7a0b\u5e8f\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u89e3\u91ca\u3002\u6ca1\u6709\u7ed8\u56fe\u3002\u7ed8\u56fe\u673a\u7528\u6765\u753b\u7ebf\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u4ece\u5934\u5f00\u59cb\u5199\u3002\u4ee5\u4e0b\u662f\u76f8\u5173\u884c\uff1a\n//STAR\u662f\u7528\u4e8e\u7ed8\u5236\u7ebf\u6761Starstype STAR Struct{plotter.XYs\u7ed8\u56fe\u7684\u6570\u636e\u7ed3\u6784\u3002LineStyle MX\uff0cmy float64 trx\uff0ctry float64//truncate at}func(s*star)Plot(c dra.Canvas\uff0cp*plot.Plot){tx\uff0cty\uff1a=p.Transforms(&amp\uff1bc)trx\uff0ctry\uff1a=tx(s.trx)\uff0cty(s.try)ls\uff1a=s.LineStyle mx\uff0cmy\uff1a=tx(s.mx)\uff0cty(s.my)for_\uff0cxy\uff1a=range s.xy{x\uff1a=tx(xy.x)y\uff1a=ty(xy.Y)if x&gt\uff1btrx{x=trx}if y&gt\uff1btry{y=try}c.StrokeLine2(ls\uff0cmx\uff0cmy\u3002\n\u6211\u4e0d\u592a\u8bb0\u5f97\u600e\u4e48\u505a\u8fd9\u4ef6\u4e8b\u4e86\u3002\u4f46\u8c22\u5929\u8c22\u5730\uff0c\u6211\u5df2\u7ecf\u5199\u4e86\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u5b9a\u5236\u7684Gonum\u7ed8\u56fe\u4eea\u8fdb\u884c\u7ed8\u56fe\u7684\u4e66\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u3002\u5982\u679c\u4f60\u60f3\u8981\u5b8c\u6574\u7684\u89e3\u91ca\uff0c\u4e70\u8fd9\u672c\u4e66\uff0c\u6216\u8005\u53cb\u597d\u5730\u95ee\u6211\uff0c\u4f5c\u4e3a\u6211\u7684\u8425\u9500\u5408\u540c\u8981\u6c42\u7684\u4e00\u90e8\u5206\uff0c\u6211\u9700\u8981\u5199\u4e00\u7bc7\u5173\u4e8e\u6211\u7684\u4e66\u7684\u6587\u7ae0\u3002\u5199\u4e66\u7684\u7ecf\u5386\u6bd4\u9884\u60f3\u7684\u8981\u4ed3\u4fc3\u5f97\u591a\uff0c\u5982\u679c\u6709\u4eba\u95ee\u6211\uff0c\u6211\u4f1a\u8bf4\u6211\u672c\u53ef\u4ee5\u5199\u5f97\u66f4\u597d\u3002\u56e0\u6b64\uff0c\u6211\u5c06\u98a0\u8986\u8fd9\u7bc7\u6587\u7ae0\uff0c\u56e0\u4e3a\u524d\u9762\u63d0\u5230\u7684.\u3002\n\u6b64\u5916\uff0c\u4e3a\u4e86\u5e73\u94fa\u56fe\u5f62\uff0c\u6211\u4f7f\u7528\u4e86Gorgonia\u5f20\u91cf\u5305\uff0c\u5b83\u63d0\u4f9b\u4e86\u771f\u6b63\u901a\u7528\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u5bf9\u4e8e3x3\u7684\u5730\u5757\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u5feb\u6377\u800c\u7b80\u5355\u7684\u65b9\u5f0f\uff1a\nt\uff1a=tensor.New(tensor.WithBacking(Ps)\uff0ctensor.WithShape(len(List)/cols))matUgh\uff0cerr\uff1a=native.Matrix(T)dieIfErr(Err)mat\uff1a=matUgh.([][]*plot.Plot)\u5e73\u94fa", "note_en": "I had a data visualization problem at work. I \u2019ve been thinking about set coverage issues, and wanted to test some ideas for visualizations. I had wanted to visualize the space of aggregate measures (i.e. things like means, etc). It later transpired that I didn \u2019t need it, because my thinking around the issue had been wrong to begin with. I had written some code, and was eager to check it out. By the end of it, it had morphed into something entirely different, but it was a good entertaining night  ...\n For some reason, the  Computer Language Benchmarks Game had been sitting open on one of my browser tabs for about a month now. I wondered if the data was freely available.  It was. I rubbed my hands and got to work. An hour later, I have this (explanations and how-to follows).\n   The X-axis represents the size of the clean (i.e. no comments, normalized white space) GZip \u2019d program source code, in bytes. The Y-axis represents performance, as measured by CPU time - the lower, the better. The dots are all the data points for all the benchmarks for all the languages in the Benchmarks Game dataset. In each subplot, are the language specific plots. Each red line is a line from the mean (X, Y) to a data point of the given language. The specific subset of programming languages  ...\n This chart shows the balance between the verbosity of a program written in a language, and the runtime performance of it. The ideal programming language would sit at the lower left quadrant. You may have noticed I left one of my favourite languages, Python, out. This is because I had truncated the chart at the given maximum X and Ys. Such a plot for Python would show no red line. I replaced it with Swift.\n The density of lines show how many programs are being considered. In the dataset, multiple implementations are considered for each benchmark for each language. For the image above, I considered only the highest performing benchmarks for each language benchmark. Here\u2019s one without filtering only the best:\n  The area is essentially the variance. I had originally wanted to also plot the polygon connecting them. But I reasoned that the human mind is not good at understanding areas, so decided against it.\n What\u2019s the point of these charts? Well, for one, it allows me to play the amateur taxonomist. It is by no means formal, but now I can quantify the species of programming languages by the shape of their size-performance plot. It allows for the following observations to be made.\n  Go is for Buddhists who like \u201cThe Middle Way \u201d. It is really average. By sheer chance I left it at the middle of the plot. Rust shares the performance characteristics of C, but is more verbose. The biggest surprise is the functional languages, OCaml, and Haskell. For a language famed for its terseness, Haskell it turns out, isn \u2019t as terse as expected - it \u2019s average size of source code is larger than the average Go source code size. Ocaml on the other hand was the dark horse. It \u2019s about  ...\n Julia was rather surprising in several aspects: Julia is a lisp. So its terseness is expected. Julia uses LLVM, which has crazy amazing backend optimization. Which is why its lower performance is somewhat surprising. However, using a median aggregate measure, Julia looks more as expected.\n  To the surprise to absolutely no one who reads this blog frequently (hello to the two of you), I wrote it in Go. I used Gonum\u2019s  plot library to generate the plots. The full souce code can be found  here\n The program does warrant some explanations. There are no  plot.Plotter for drawing the lines, so I had to write that from scratch. These are the relevant lines:\n // star is a data structure used for plotting line starstype star struct {\tplotter.XYs\tdraw.LineStyle\tmx, my float64\ttrx, try float64 // truncate at}func (s *star) Plot(c draw.Canvas, p *plot.Plot) {\ttx, ty := p.Transforms(&amp;c)\ttrx, try := tx(s.trx), ty(s.try)\tls := s.LineStyle\tmx, my := tx(s.mx), ty(s.my)\tfor _, xy := range s.XYs {\t\tx := tx(xy.X)\t\ty := ty(xy.Y)\t\tif x &gt; trx {\t\t\tx = trx\t\t}\t\tif y &gt; try {\t\t\ty = try\t\t}\t\tc.StrokeLine2(ls, mx, my, x, y)\t}}\n I didn\u2019t quite remember how to do this. But thankfully I had written  a book on how to plot with custom Gonum plotters, so I could just refer to it . If you want full explanations, buy the book, or ask me nicely  * As part of my marketing contract requirement, I am required to write an article about my book. The experience of writing a book had been more rushed than expected, and if asked, I will say &#34;I could have done better&#34;. So I shall subvert this article for the aforementioned  ...\n Further, to tile the plots, I made use of Gorgonia\u2019s  tensor package, which provides truly generic multidimensional arrays. It\u2019s not strictly necessary for 3x3 plots, but it was a quick and easy way to do things for me:\n t := tensor.New(tensor.WithBacking(ps), tensor.WithShape(len(list)/cols, cols))\tmatUgh, err := native.Matrix(t)\tdieIfErr(err)\tmat := matUgh.([][]*plot.Plot)\ttiles := draw.Tiles{Rows: t.Shape()[0], Cols: t.Shape()[1]}\n I do definitely think the tiling function could have been more neatly written. But it is what it is. Old mate  Sebastien Binet from  Go-HEP suggests using the  TiledPlot data structure from  hplot. I concur with the suggestion.\n  I set out to visualize the space of aggregates in neural networks. I got sidetracked and plotted some charts about programming languages as an attempt to quantify them in some way. Came into some probably spurious conclusions. Go is pretty average.\n There is somewhere, an irony - this is that I have now taken more time to write this blog post than to write the program. I\u2019d like to hear what you think.\n  In a case of not-doing-your-research-before-blabbing, Isaac Gouy, current maintainer of the Computer Language Benchmarks Game mentions in the comments below that something similar had been done by  Guillaume Marceau almost a decade ago. Guillaume even has the whole quadrant thing set up and properly explained. Do note that if you want to compare my results with Guillaume\u2019s, the axes are flipped on Guillaume\u2019s\n Additionally, the post above have been corrected to include a note that the source code size is GZip\u2019d. This does not change the result of the \u201canalysis\u201d (if ever there was one)", "posttime": "2020-05-02 18:03:08", "tags": "ocaml,pretty,\u8bed\u8a00,plot", "title": "\u300aOCaml\u5f88\u68d2\u300b(2019)", "title_en": "OCaml is Pretty Great (2019)", "transed": 0, "url": "https://blog.chewxy.com/2019/02/20/go-is-average/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["ocaml", "pretty", "\u8bed\u8a00", "plot"]}]