[{"category": "", "categoryclass": "", "imagename": "ba28d97563d3143ad873507f341e0bcf.jpeg", "infoid": 1003793, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b65\u9aa44\uff1a\u4e0b\u8f7d\u7ea7\u8054\u6587\u4ef6\u3001\u6743\u91cd\u548c\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u5728\u540d\u4e3aExtract\u7684\u6587\u4ef6\u5939\u4e2d\u3002\n@InProceases{Siarohin_2019\u5e74_NeurIPS\uff0c\u4f5c\u8005={Siarohin\uff0cAliaksandr\u548cLathuil\u00e8re\uff0cSt\u00e9phane\u548cTulyakov\uff0cSergey\u548cRicci\uff0cELISA\u548cSebe\uff0cNICU}\uff0cTitle={\u56fe\u50cf\u52a8\u753b\u4e00\u9636\u8fd0\u52a8\u6a21\u578b}\uff0cBooktitle={\u795e\u7ecf\u4fe1\u606f\u5904\u7406\u7cfb\u7edf\u4f1a\u8bae(NeurIPS)}\uff0c\u6708={12\u6708}\uff0c\u5e74={2019\u5e74}\uff0curl={https://github.com/AliaksandrSiarohin/first-order-model}}\u3002\n\u5982\u679c\u60a8\u559c\u6b22\u6b64\u9879\u76ee\uff0c\u8bf7\u901a\u8fc7\u5c06GitHub\u661f\u6388\u4e88Author&#39\uff1b\u7684\u9879\u76ee\u6765\u652f\u6301\u6b64\u9879\u76ee\u7684\u539f\u59cb\u4f5c\u8005", "note_en": "Step 4 : Download cascade file ,weights and model and save in folder named extract\n                @InProceedings{Siarohin_2019_NeurIPS, author={Siarohin, Aliaksandr and Lathuili\u00e8re, St\u00e9phane and Tulyakov, Sergey and Ricci, Elisa and Sebe, Nicu}, title={First Order Motion Model for Image Animation}, booktitle = {Conference on Neural Information Processing Systems (NeurIPS)}, month = {December}, year = {2019}, url = {https://github.com/AliaksandrSiarohin/first-order-model}}\n If you like this project give your support to original author of this project by giving github star to author&#39;s project", "posttime": "2020-05-26 23:58:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9879\u76ee", "title": "OpenCV\u4e2d\u4f7f\u7528\u4e00\u9636\u6a21\u578b\u7684\u5b9e\u65f6\u56fe\u50cf\u52a8\u753b", "title_en": "Real time image animation in opencv using first order model", "transed": 1, "url": "https://github.com/anandpawara/Real_Time_Image_Animation", "via": "", "real_tags": ["\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "2827a32f19e7e4e0045c1c7bebc8180a.png", "infoid": 1003792, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "5\u670820\u65e5\u65e9\u4e0a6\u70b945\u5206\uff0c\u6211\u63a5\u5230\u4e86\u6765\u81ea\u6211\u4eecTwilio\u96c6\u6210\u7684Spike.sh\u7684\u7535\u8bdd\u8b66\u62a5\uff0c\u79f0\u547c\u53eb\u91cf\u6fc0\u589e\u3002\n\u8bc8\u9a97\u8005\u6ee5\u7528\u6211\u4eec\u7684\u7535\u8bdd\u9a8c\u8bc1\uff0c\u901a\u8fc7\u52a8\u6001\u53e3\u4ee4\u751f\u6210\u6570\u5343\u4e2a\u7535\u8bdd\u3002\u8fd9\u7b97\u662f\u901a\u884c\u8d39\u6b3a\u8bc8\u3002\n\u5728\u63a5\u4e0b\u6765\u768415\u5206\u949f\u5185\uff0c\u6211\u9192\u4e86\uff0c\u76ef\u7740\u5c4f\u5e55\uff0c\u60f3\u77e5\u9053\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u8fc7\u53bb\u4e00\u5c0f\u65f6\u5185\u4f7f\u7528\u4e00\u6b21\u6027\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u768440\u4e2a\u65b0\u6ce8\u518c\uff0c\u4e3b\u8981\u662fMailinator(.com\u548c.Net)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5728Twilio\u8eab\u4e0a\u82b1\u4e86107\u7f8e\u5143\uff0c\u56e0\u4e3a\u9a97\u5b50\u5df2\u7ecf\u7ed9\u6469\u5c14\u591a\u74e6\u7684\u4e00\u4e2a\u53f7\u7801\u6253\u4e86\u5927\u7ea6\u6570\u767e\u4e2a\u7535\u8bdd\u3002\n\u6b64\u5916\uff0c\u4ee4\u4eba\u656c\u754f\u7684Twilio\u5f53\u65f6\u53d1\u73b0\u4e86\u53ef\u7591\u6d3b\u52a8\uff0c\u5e76\u5c4f\u853d\u4e86\u51e0\u4e2a\u7535\u8bdd\u3002\u6211\u6536\u5230\u4e86\u4ed6\u4eec\u7684\u6b3a\u8bc8\u4fa6\u7834\u5c0f\u7ec4\u53d1\u6765\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u8c22\u8c22\u4f60\uff0c\u7279\u5229\u5965\u3002\n\u5728\u6df1\u5165\u6316\u6398\u65e5\u5fd7\u540e\uff0c\u6211\u4e86\u89e3\u5230\u8bc8\u9a97\u8005\u4ece\u6211\u4eec\u7684\u7535\u8bdd\u9a8c\u8bc1\u533a\u4ea7\u751f\u4e86\u7535\u8bdd\u3002\u5728Spike\u4e0a\u6ce8\u518c\u540e\uff0c\u6211\u4eec\u4f1a\u6253\u7535\u8bdd\u9a8c\u8bc1\u60a8\u7684\u7535\u8bdd\u53f7\u7801\u3002\u6211\u77e5\u9053\u8fd9\u4e5f\u4e0d\u662f\u6700\u597d\u7684\u4e3b\u610f.\u3002\ud83d\ude41\u6211\u4eec\u73b0\u5728\u53d1\u9001\u77ed\u4fe1\u8fdb\u884c\u9a8c\u8bc1\uff0c\u800c\u4e0d\u662f\u6253\u7535\u8bdd\u3002\n\u6211\u63a5\u5230\u6211\u4eec\u4fe1\u7528\u5361\u516c\u53f8\u7684\u7535\u8bdd\uff0c\u4ed6\u4eec\u544a\u8bc9\u6211\u4eec\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u603b\u5171\u88ab\u6536\u53d6\u4e86\u5927\u7ea6870\u7f8e\u5143\u3002\ud83d\ude2d\n\u6211\u4eec\u5df2\u7ecf\u7981\u6b62\u4f7f\u7528Twilio\u7684GeoPermission\u7ed9\u6469\u5c14\u591a\u74e6\u548c\u5176\u4ed6\u4e00\u4e9b\u8bc8\u9a97\u8005\u7784\u51c6\u7684\u5730\u533a\u6253\u7535\u8bdd\u3002\n\u5728\u4eea\u8868\u677f\u4e0a\u96c6\u6210Google reCaptcha\u3002\u963b\u6b62\u5783\u573e\u90ae\u4ef6\u7528\u6237\u7684\u5e10\u6237\u3002\u6211\u4e2a\u4eba\u975e\u5e38\u6000\u7591\u4e8b\u60c5\u662f\u5426\u4f1a\u6062\u590d\u6b63\u5e38\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u5bf9\u751f\u4ea7\u8fdb\u884c\u4e86\u5927\u7ea620\u6b21\u90e8\u7f72\uff0c\u8fd9\u8981\u5f52\u529f\u4e8eGitHub\u64cd\u4f5c\u7684\u81ea\u52a8\u5316\u3002\n\u53d6\u6d88\u6240\u6709Twilio\u4ee3\u5e01\uff0c\u5e76\u518d\u6b21\u9605\u8bfb\u5176\u5173\u4e8e\u901a\u884c\u8d39\u6b3a\u8bc8\u7684\u6307\u5357\u3002\u6211\u4eec\u9519\u8fc7\u4ec0\u4e48\u4e86\u5417\uff1f\nfacepalm-Twilio\u5728\u4ed6\u4eec\u7684\u6587\u6863\u4e2d\u660e\u786e\u5199\u9053\uff0c\u4e0d\u8981\u901a\u8fc7\u52a8\u6001\u53e3\u4ee4\u4f7f\u7528\u7535\u8bdd\u8fdb\u884c\u9a8c\u8bc1\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u505a\u7684\ud83e\udd26\u200d\u2640\ufe0f\u3002\n\u6211\u4eec\u516c\u5e03\u4e86\u4e00\u4e9b\u65e7\u7535\u8bdd\u53f7\u7801\uff0c\u5e76\u4e70\u4e86\u4e00\u4e9b\u65b0\u53f7\u7801\u3002\u8fd9\u5e76\u6ca1\u6709\u82b1\u592a\u957f\u65f6\u95f4\u3002\n\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u770b\u5230\u4e00\u4e9b\u6ce8\u518c\u662f\u901a\u8fc7\u4f7f\u7528Mailinator\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u673a\u5668\u4eba\u6765\u7684\u3002\n\u95ee\u9898\u662f\u521b\u5efa\u65b0\u7684\u4e00\u6b21\u6027\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5f88\u5bb9\u6613\u3002\u6307\u671b\u4e00\u9879\u670d\u52a1\u5c31\u80fd\u6db5\u76d6\u6240\u6709\u8fd9\u4e9b\u670d\u52a1\u53ef\u80fd\u592a\u8fc7\u5206\u4e86\u3002\n\u6709\u8da3\u7684\u7edf\u8ba1\u6570\u636e--\u6211\u4eec\u6709\u5927\u91cf\u7528\u6237\u5728\u4f7f\u7528Google OAuth\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u53d6\u4e86\u5927\u80c6\u7684\u4e3e\u63aa\u3002\nCloudFlare\u5728\u8fd9\u65b9\u9762\u76f8\u5f53\u51fa\u8272\u3002\u5f53\u4f60\u8bbf\u95eeSpike.sh\u65f6\uff0cCloudflare\u4f1a\u5c1d\u8bd5\u5224\u65ad\u4f60\u662f\u4eba\u7c7b\u8fd8\u662f\u673a\u5668\u4eba\u3002\u6709\u65f6\uff0c\u8fd8\u4f1a\u51fa\u73b0\u4f7f\u7528hcaptcha\u8fdb\u884c\u9a8c\u8bc1\u7684\u6d4b\u8bd5\u3002\n\u6211\u4eec\u5b89\u88c5\u4e86Needle.sh\uff0c\u5b83\u4e3a\u4ed6\u4eec\u7684NPM\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b89\u5168\u5c42\u3002\u5728\u4ed6\u4eec\u7684\u4eea\u8868\u677f\u4e0a\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5b89\u5168\u626b\u63cf\u4eea\u6bcf\u5929\u90fd\u4f1a\u591a\u6b21\u63a2\u6d4b\u6211\u4eec\u7684\u7f51\u7edc\u5c5e\u6027\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u3002\u663e\u7136\uff0c\u8fd9\u8ba9\u6211\u4eec\u5728\u65e9\u671f\u9636\u6bb5\u5c31\u610f\u8bc6\u5230\u4e86\u4e3a\u6211\u4eec\u7684\u7f51\u7edc\u4ea7\u54c1\u4f7f\u7528\u5b89\u5168\u5de5\u5177\u7684\u91cd\u8981\u6027\u3002\n\u901f\u7387\u9650\u5236\u975e\u5e38\u6709\u7528\uff0c\u800c\u4e14\u6613\u4e8e\u8bbe\u7f6e\u3002\u5728\u6211\u4eec\u6fc0\u6d3b\u8fd9\u4e2a\u4e4b\u540e\uff0c\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u5927\u91cf\u7684429\u54cd\u5e94\u72b6\u6001\u3002\n\u8bc8\u9a97\u8005\u65e0\u6cd5\u521b\u5efa\u65b0\u5e10\u6237\u3002\u8036\uff01\u4e00\u4e9b\u4eba\u786e\u5b9e\u4f7f\u7528Google OAuth\u521b\u5efa\u4e86\u8d26\u6237\uff0c\u5e76\u8bd5\u56fe\u62e8\u6253\u66f4\u591a\u7535\u8bdd\uff0c\u4f46\u8d85\u8fc799%\u7684\u7535\u8bdd\u6700\u7ec8\u4ee5401\u6216429\u4e2a\u54cd\u5e94\u4ee3\u7801\u7ed3\u675f\u3002\n\u8bbe\u7f6e\u7d27\u6025\u8b66\u62a5\uff0c\u5982\u679c\u6211\u6ca1\u6709\u63a5\u5230Spike.sh\u7684\u7535\u8bdd\uff0c\u6211\u9192\u6765\u65f6\u5f88\u5bb9\u6613\u5c31\u4f1a\u6536\u52305000\u591a\u7f8e\u5143\u7684\u8d26\u5355\u3002\n\u8fd9\u4e9b\u662f\u6211\u5728\u6574\u4e2a\u78e8\u96be\u8fc7\u7a0b\u4e2d\u8bfb\u5230\u7684\u4e00\u4e9b\u597d\u4e66\u3002\u5e0c\u671b\u8fd9\u80fd\u5e2e\u52a9\u4f60-", "note_en": "On the 20th of May at 6:45 AM, I got a phone call alert from  Spike.sh from our  Twilio integration about a surge in calls.\n Scammers abused our phone verification by otp generating thousands of phone calls. This qualifies as  Toll fraud\n       Within the next 15 minutes, I was awake and glaring into my screen trying to find out what the hell is happening.\n  40 new registrations in the last one hour using disposable email addresses, mainly  Mailinator (.com and .net)\n  So far, I was knee-deep with $107 bill on Twilio because scammers had made about hundreds of phone calls to a number in  Moldova\n Also, Twilio, being awesome, detected suspicious activity and blocked several phone calls by that time. I had emails from their Fraud detection team.  Thank you Twilio\n   After digging into logs, I learn that the scammers were generating phone calls from our Phone verification section. We make phone calls to verify your phone number after signing up on Spike. I knew this was not the best idea going in too... \ud83d\ude41 We now send SMS to verify instead of making a phone call.\n     I got a call from our credit card company who inform us we have been charged about  $870 in total so far \ud83d\ude2d\n We have barred making calls to Moldova and some other regions scammers had been targeting using  Twilio&#39;s GeoPermissions\n        Integrate Google reCaptcha on the dashboard. Block spam user&#39;s accounts. I was personally very sceptical if things would go back to normal.\n    So far, I have made about 20 deployments to production, thanks to GitHub Actions for automating that.\n    Revoke all Twilio tokens and read their guide again on  toll frauds. Are we missing anything?\n Facepalm - Twilio has explicitly written in their docs to not use a phone call for verification via OTP and that&#39;s exactly what we did \ud83e\udd26\u200d\u2640\ufe0f\n We released some of our old phone numbers and bought new ones. This didn&#39;t take long.\n   Deploy to production but we still see a number of signups coming in via bots using Mailinator email addresses.\n       The problem is creating newer disposable email addresses is easy. It&#39;s perhaps too much to expect that one service would cover all of them.\n Interesting stat - A ton of our users were using Google OAuth, so we made the bold move.\n      Cloudflare is pretty awesome at this. When you visit  Spike.sh, Cloudflare will try to determine if you are human or a bot. Sometimes, a test also appears for verification using hcaptcha.\n  We installed  Needle.sh, which provides a security layer with their NPM module. In their dashboard, we noticed that security scanners have been probing our web properties for vulnerabilities multiple times a day. This made us realise the importance of using security tools for our web products from an early stage,  obviously.\n  Rate limiting was super helpful and easy to setup. I have seen tons of  429 response status after we activated this.\n   Scammers were unable to create new accounts. Yipee! Some literally created accounts using Google OAuth and tried to make more calls but over 99% of them ended up in either 401 or 429 response codes.\n  Setup critical alerts, had I not gotten the phone call from  Spike.sh, I easily would have gotten a bill of more than $5000 by the time I woke up.\n  These are some good reads I came across during the entire ordeal. Hope this helps you -", "posttime": "2020-05-26 23:57:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9a97\u5b50,signed", "title": "\u9a97\u5b50\u7b7e\u7ea6\uff0c\u572815\u5206\u949f\u5185\u9a97\u8d70\u4e86\u6211\u4eec870\u7f8e\u5143", "title_en": "Scammers signed up, scammed us of $870 in 15 minutes", "transed": 1, "url": "https://dev.to/spike/scammers-signed-up-scammed-us-of-870-in-15-minutes-4gjf", "via": "", "real_tags": ["\u9a97\u5b50", "signed"]}, {"category": "", "categoryclass": "", "imagename": "5cf458efcfe590c0fbe322b311828b14.png", "infoid": 1003790, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1.\u5728\u6211\u611f\u5230\u8d44\u5386\u4e0d\u8db3\u3001\u4e0d\u77e5\u6240\u63aa\u3001\u529b\u4e0d\u4ece\u5fc3\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u6bcf\u4e2a\u4eba\u6709\u65f6\u4e5f\u4f1a\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u5192\u540d\u9876\u66ff\u8005\u3002\u8bb0\u4f4f\uff0c\u5176\u4ed6\u6bcf\u4e2a\u4eba\u4e5f\u90fd\u7ecf\u5386\u8fc7\u5192\u540d\u9876\u66ff\u8005\u7efc\u5408\u75c7\uff0c\u8fd9\u5bf9\u6211\u5f88\u6709\u5e2e\u52a9\u3002\u4f60\u6709\u4eca\u5929\u7684\u6210\u5c31\uff0c\u4e0d\u662f\u56e0\u4e3a\u4f60\u5f88\u5e78\u8fd0\uff0c\u800c\u662f\u56e0\u4e3a\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u770b\u5230\u4e86\u4f60\u7684\u4ef7\u503c\u548cABI", "note_en": "1. Everyone else feels like an imposter sometimes too In times when I am feeling underqualified, overwhelmed, and inadequate, it helps to remember that everyone else experiences imposter syndrome too. You have gotten to where you are now not because you were lucky, but because at least one person saw your value and abi", "posttime": "2020-05-26 23:41:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u77e5\u9053,knew,\u5192\u540d\u9876\u66ff", "title": "\u4e0a\u5927\u5b66\u524d\u6211\u5e0c\u671b\u77e5\u9053\u7684\u4e8b\u60c5", "title_en": "Things I Wish I Knew Before University", "transed": 1, "url": "https://www.yvoneyang.com/post/3-things-i-wish-i-knew-before-university", "via": "", "real_tags": ["\u5927\u5b66", "\u77e5\u9053", "knew", "\u5192\u540d\u9876\u66ff"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003789, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u6b63\u5728\u7528Javascript\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u5f88\u5feb\u60a8\u5c06\u4e0d\u5f97\u4e0d\u62c5\u5fc3\u5185\u5b58\u6cc4\u6f0f\u3002\u4f46\u662f\uff0c\u751a\u81f3\u5f88\u96be\u77e5\u9053\u662f\u5426\u5b58\u5728\u5185\u5b58\u6cc4\u6f0f\u3002\u8fd9\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u53ef\u4ee5\u6709\u6240\u5e2e\u52a9\u3002\u8d77\u521d\uff0c\u60a8\u53ef\u80fd\u8ba4\u4e3aWeakMap\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002WeakMap/WeakSet\u5c06\u4e3a\u60a8\u4fdd\u7559\u5185\u5bb9\uff0c\u4f46\u4e0d\u8981\u963b\u6b62\u5bf9\u8c61\u88ab\u5783\u573e\u6536\u96c6\u3002\u4e00\u65e6\u5bf9\u8c61\u662fGC&#39\uff1bd\uff0c\u5b83\u5c31\u4f1a\u4eceWeakMap\u6216WeakSet\u4e2d\u5220\u9664\u3002\u56e0\u6b64\uff0c\u663e\u800c\u6613\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u4ecd\u5728WeakMap\u4e2d\u3002\u5982\u679c\u5b83\u4e22\u5931\u4e86\uff0c\u90a3\u4e48\u5b83\u5c31\u662fGC&#39\uff1bd\u3002\u8fd9\u4e0d\u4f1a\u8d77\u4f5c\u7528\u3002\u95ee\u9898\u662f\uff0cWeakMap\u548cWeakSet\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u8ba9\u4f60\u5728\u4e0d\u77e5\u9053\u5b83\u5728\u90a3\u91cc\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u83b7\u53d6\u91cc\u9762\u7684\u5185\u5bb9\u3002\u8981\u67e5\u627e\u9879\u76ee\uff0c\u60a8\u9700\u8981\u5df2\u7ecf\u62e5\u6709\u8be5\u9879\u76ee\u3002\u8fd9\u4e9b\u96c6\u5408\u751a\u81f3\u6ca1\u6709\u957f\u5ea6\u65b9\u6cd5\u3002\u8981\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u5728WeakMap\u4e2d\uff0c\u60a8\u5fc5\u987b\u5df2\u7ecf\u6709\u4e86\u5bf9\u5b83\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u9632\u6b62\u5b83\u88ab\u5783\u573e\u6536\u96c6\u3002\u90a3\u4e48\uff0c\u5b83\u4eec\u6709\u4ec0\u4e48\u7528\u5462\uff1fWeakMap\u6700\u9002\u5408\u7528\u4e8e\u5c06\u5bf9\u8c61\u94fe\u63a5\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u4e00\u7ec4&lt\uff1bimg&gt\uff1b\u5143\u7d20\uff0c\u5e76\u4e14\u5e0c\u671b\u5c06\u67d0\u4e9b\u6570\u636e\u4e0e\u5b83\u4eec\u76f8\u5173\u8054\uff0c\u5219\u53ea\u9700\u6267\u884cimg.myExtraproperty=&#34\uff1bblah&#34\uff1b\u5373\u53ef\u3002\u4f46\u662f\u60a8\u7684IDE\u53ef\u80fd\u4f1a\u62b1\u6028\uff0c\u56e0\u4e3aHTMLImageElement\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\u3002\u76f8\u53cd\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528WeakMap\u3002\u5982\u679c\u989d\u5916\u5c5e\u6027\u662f\u5355\u4e2a\u503ctrue\uff0c\u5219\u4f7f\u7528WeakSet\u3002\u4e00\u4e9b\u6d4f\u89c8\u5668\uff0c\u5305\u62ecChrome\uff0c\u4f46\u4e0d\u5305\u62ecFirefox\uff0c\u53ef\u4ee5\u68c0\u67e5\u4f7f\u7528\u7684Javascript\u5185\u5b58\u91cf\u3002\u56e0\u6b64\uff0c\u6d4b\u8bd5\u5bf9\u8c61\u662f\u5426\u5b58\u5728\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u5176\u8db3\u591f\u5927\uff0c\u4ee5\u4fbf\u5bf9\u5185\u5b58\u4ea7\u751f\u660e\u663e\u5f71\u54cd\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4f7f\u7528WeakMap\u5c06\u4e00\u4e2a1 GB\u7684\u5bf9\u8c61\u4e0e\u60a8\u4f20\u5165\u7684\u4efb\u4f55\u5185\u5bb9\u5173\u8054\u8d77\u6765\u3002\u5f53\u91ca\u653e\u5bf9\u8c61\u5e76\u8fd0\u884c\u5783\u573e\u6536\u96c6\u5668\u65f6\uff0c\u9884\u8ba1\u8fd8\u4f1a\u91ca\u653e\u81f3\u5c111 GB\u7684\u5185\u5b58\u3002\u8fd9\u5c31\u662f\u4ee3\u7801\u68c0\u67e5\u7684\u5185\u5bb9\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u81f3\u5c11\u9700\u898110\u79d2\uff0c\u56e0\u4e3aChrome\u4f3c\u4e4e\u6bcf10\u79d2\u624d\u8fd0\u884c\u4e00\u6b21\u5783\u573e\u6536\u96c6\u5668\u3002View on CodePen/**\u786e\u5b9a\u5bf9\u8c61\u662f\u5426\u5df2\u91ca\u653e@param obj\u662f\u611f\u5174\u8da3\u7684\u5bf9\u8c61@param freFn\u662f\u91ca\u653e\u5bf9\u8c61\u7684\u51fd\u6570\u3002@\u8fd4\u56de\u89e3\u6790\u4e3a{freed\uff1aboolean\uff0cmemory yDiff\uff1anumber}@Author Steve Hanov&amp\uff1bltsteve.hanov@gmail.com&gt\uff1b*/function isObjectFreed(obj\uff0cfreFn){return new Promise((Resolean)=&gt\uff1b{if(\uff01d\uff0c\u5927\u578b\u9635\u5217\u4e5f\u5c06\u662fGCD\uff0c//\u5176\u5f71\u54cd\u5c06\u662f\u663e\u800c\u6613\u89c1\u7684\u3002const allocSize=1024*1024*1024\uff1bconst Wm=new WeakMap([[obj\uff0cnew Uint8Array(AllocSize)]])\uff1b//\u7b49\u5f85\u5185\u5b58\u8ba1\u6570\u5668\u66f4\u65b0setTimeout(()=&gt\uff1b{const Beer=Performance.Memory y.usedJSHeapSize\uff1b//\u91ca\u653e\u5185\u5b58\u91ca\u653eFn()\uff1b//\u7b49\u5f85GC\u8fd0\u884c\uff0c\u81f3\u5c1110\u79d2setTimeout(()=&gt\uff1b}\uff0c100)\uff1b})\uff1b}\u8ba9foo={bar\uff1a1}\uff1bisObjectFreed(foo\uff0c()=&gt\uff1bfoo=null)\uff0c\u7136\u540e((Result)=&gt\uff1b{Docent.write(`Object gcd\uff1a${result t.freed}\uff0c${result t.ememyDiff}bytes freed`)}\uff0c(Error)=&gt\uff1b{Docent.write(`Error\uff1a${error.message}`)})\u3002\n\u6211\u4f7f\u7528\u6b64\u65b9\u6cd5\u4f5c\u4e3a\u6211\u7684Zwibbler\u6d4b\u8bd5\u5957\u4ef6\u7684\u4e00\u90e8\u5206\uff0cZwibbler\u662f\u6211\u7684Javascript\u7ed8\u56fe\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u6709\u4e00\u4e2a\u9500\u6bc1()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5e94\u8be5\u5220\u9664\u6240\u6709\u8d44\u6e90\u3002\u4f46\u5076\u5c14\uff0c\u6211\u4f1a\u6709\u4e00\u4e9b\u672a\u5220\u9664\u7684\u4e8b\u4ef6\u4fa6\u542c\u5668\uff0c\u5b83\u4f1a\u4fdd\u7559\u5bf9\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5f15\u7528\u3002\u56e0\u6b64\uff0c\u5f53\u5728\u8bf8\u5982\u53cd\u5e94\u6216\u89d2\u5ea6\u4e4b\u7c7b\u7684\u4e1c\u897f\u4e2d\u4f7f\u7528\u5b83\u65f6\uff0c\u89c6\u56fe\u6846\u67b6\u53ef\u4ee5\u91cd\u590d\u663e\u793a\u548c\u9690\u85cf\u5b83\uff0c\u56e0\u6b64\u5b8c\u5168\u91ca\u653e\u8d44\u6e90\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002", "note_en": "If you are writing an application in Javascript, soon you will have to worry about memory leaks. But it is difficult to even know if a memory leak exists. This handy method can help. At first, you may think that WeakMap will do it. WeakMap/WeakSet will hold onto things for you, but don&#39;t prevent an object from being garbage collected. The instant an object is GC&#39;d, it is removed from the WeakMap or WeakSet.  So, the obvious solution is to check if an object is still inside the WeakMap. If it is missing, it has been GC&#39;d. This won&#39;t work. The problem is that WeakMap and WeakSet are designed so that you cannot get at what&#39;s inside without already knowing it is there. In order to lookup an item, you need to  already have that item. These collections don&#39;t even have a  length method. To check if an object is inside of a WeakMap, you must already have a reference to it, and therefore you are preventing it from being garbage collected. So, what good are they?  WeakMap is best used to link objects together. For example, if you have a bunch of &lt;img&gt; elements and you want to associate some data with them, you could simply do  img.myextraproperty=&#34;blah&#34;. But your IDE may complain because the HTMLImageElement does not have this property. Instead, you can use WeakMap. If the extra property is a single value  true then use a WeakSet. Some browsers, including Chrome but not Firefox, have the ability to check the amount of Javascript memory used. So the solution to test if an object is there, is to make it sufficiently large so that it has a noticeable impact on memory. In the code below, I use a WeakMap to associate a 1 gigabyte object with whatever you pass in. When the object is freed, and the garbage collector is run, you would expect at least 1 GB of memory to be freed as well. That is what the code checks for. The process takes at least 10 seconds, because it seems that Chrome only runs the garbage collector every 10 seconds. View on CodePen /** Determines if an object is freed@param obj is the object of interest@param freeFn is a function that frees the object.@returns a promise that resolves to {freed: boolean, memoryDiff:number}@author Steve Hanov &amp;ltsteve.hanov@gmail.com&gt;*/function isObjectFreed(obj, freeFn) { return new Promise( (resolve) =&gt; { if (!performance.memory) { throw new Error(&#34;Browser not supported.&#34;); } // When obj is GC&#39;d, the large array will also be GCd and the impact will // be noticeable. const allocSize = 1024*1024*1024; const wm = new WeakMap([[obj, new Uint8Array(allocSize)]]); // wait for memory counter to update setTimeout( () =&gt; { const before = performance.memory.usedJSHeapSize; // Free the memory freeFn(); // wait for GC to run, at least 10 seconds setTimeout( () =&gt; { const diff = before - performance.memory.usedJSHeapSize; resolve({ freed: diff &gt;= allocSize, memoryDiff: diff - allocSize }); }, 10000); }, 100); });}let foo = {bar:1};isObjectFreed(foo, () =&gt; foo = null).then( (result) =&gt; { document.write(`Object GCd:${result.freed}, ${result.memoryDiff} bytes freed`)}, (error) =&gt; { document.write(`Error: ${error.message}`)})\n I use this method as part of my test suite for  Zwibbler, my Javascript drawing app. It has a  destroy() method that is supposed to remove all resources. But occasionally, I would have some event listener that was not removed, that would keep a reference to the entire application. So when using it inside something like React or Angular, where it can be repeatedly shown and hidden by the view framework, it is vitally important that resources be completely freed.", "posttime": "2020-05-26 23:07:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u5bf9\u8c61,object", "title": "\u5982\u4f55\u5728JavaScript\u4e2d\u68c0\u6d4b\u5bf9\u8c61\u662f\u5426\u5df2\u88ab\u5783\u573e\u56de\u6536", "title_en": "How to detect if an object has been garbage collected in JavaScript", "transed": 1, "url": "http://stevehanov.ca/blog/?id=148", "via": "", "real_tags": ["java", "\u5bf9\u8c61", "object"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003788, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e00\u4e2a\u6708\u8bfb\u5927\u7ea63\u672c\u4e66\uff0c\u6bcf\u5c0f\u65f660\u9875\u3002\u4e0e\u6bd4\u5c14\u00b7\u76d6\u8328(Bill Gates)\u4e0d\u592a\u4e00\u6837\uff0c\u4ed6\u5728\u4e00\u5c0f\u65f6\u5185\u8bfb\u4e86\u5927\u7ea6150\u9875\uff0c\u7559\u5b58\u7387\u4e3a90%\uff0c\u4f46\u6211\u6b63\u5728\u6162\u6162\u63a5\u8fd1\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u517b\u6210\u4e86\u4e00\u4e9b\u4e60\u60ef\uff0c\u8fd9\u4e9b\u4e60\u60ef\u5e2e\u52a9\u6211\u8bfb\u5f97\u66f4\u5feb\uff0c\u4fdd\u6301\u4e86\u66f4\u591a\u3002\u4e3a\u4e86\u793e\u533a\u7684\u5229\u76ca\uff0c\u5728\u8fd9\u91cc\u5206\u4eab\u5b83\u4eec\uff1a\n\u4ece\u540c\u4e00\u533a\u57df\u62ff\u8d77\u591a\u672c\u4e66\uff0c\u6df1\u5165\u4e00\u4e2a\u533a\u57df\u3002\u8fd9\u6837\u624d\u80fd\u771f\u6b63\u4e86\u89e3\u4e00\u4e2a\u8bdd\u9898\u3002\n\u5728\u62ff\u8d77\u4efb\u4f55\u4e00\u672c\u4e66\u4e4b\u524d\uff0c\u5148\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u4f5c\u8005\u3002\u7814\u7a76\u90a3\u672c\u4e66\u7684\u4e3b\u65e8\u548c\u5b58\u5728\u7684\u539f\u56e0\u3002\u5728\u771f\u6b63\u5f00\u59cb\u8bfb\u8fd9\u672c\u4e66\u4e4b\u524d\uff0c\u6211\u7ecf\u5e38\u5148\u770b\u5bfc\u8a00\u6216\u524d\u8a00\u3002\u90a3\u4e9b\u90e8\u5206\u5145\u6ee1\u4e86\u5173\u4e8e\u4f5c\u8005\u4ee5\u53ca\u4ed6\u4eec\u662f\u5982\u4f55\u5199\u8fd9\u672c\u4e66\u7684\u6545\u4e8b\u3002\n\u4f60\u4e0d\u5fc5\u5f3a\u8feb\u8bfb\u5b8c\u4e00\u672c\u4f60\u4e0d\u559c\u6b22\u7684\u4e66\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u67d0\u4e2a\u70b9\u4e0a\uff0c\u5f53\u4f60\u60f3\u56de\u5230\u67d0\u4e2a\u4e3b\u9898\u65f6\u518d\u62ff\u8d77\u5b83\u3002\n\u6709\u4e9b\u4e66\u66f4\u7075\u6d3b\uff0c\u53ef\u80fd\u4e0d\u80fd\u7ebf\u6027\u9605\u8bfb\u3002\u8fd9\u786e\u5b9e\u53d6\u51b3\u4e8e\u4f60\u6b63\u5728\u8bfb\u7684\u4e66\u7684\u4e3b\u9898\u3002\u5982\u679c\u8fd9\u672c\u4e66\u7684\u76ee\u7684\u662f\u6536\u96c6\u65e0\u5173\u4e3b\u9898\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u9009\u62e9\u7ae0\u8282\u662f\u53ef\u4ee5\u7684\u3002\u4f8b\u5982\uff0c\u6211\u8bfb\u4e86\u4e00\u672c\u5173\u4e8e\u963f\u80b2\u5420\u9640\u6cbb\u7597\u7684\u4e66\uff0c\u5728\u4e00\u4e9b\u57fa\u672c\u539f\u5219\u4e4b\u540e\uff0c\u5b83\u6309\u7167\u75be\u75c5\u7684\u7c7b\u578b\u8fdb\u884c\u4e86\u7ec4\u7ec7\u3002\u6211\u53ef\u4ee5\u6311\u9009\u6211\u611f\u5174\u8da3\u9605\u8bfb\u66f4\u591a\u7684\u75be\u75c5\u3002\n\u6bcf\u6b21\u90fd\u8981\u5199\u7b14\u8bb0\u3002\u4e0d\u8981\u4ece\u4f60\u7684Kindle\u6216\u624b\u673a\u4e0a\u590d\u5236\u7c98\u8d34\u7b14\u8bb0\uff0c\u8981\u624b\u52a8\u4e66\u5199\uff0c\u6bcf\u4e00\u4e2a\u5b57\u90fd\u8981\u6253\u5b57\u3002\u8fd8\u8981\u8bd5\u7740\u89e3\u91ca\u4e00\u4e0b\uff0c\u8fd9\u6837\u4f60\u5c31\u4f1a\u88ab\u8feb\u79ef\u6781\u5730\u601d\u8003\u4f60\u6b63\u5728\u9605\u8bfb\u7684\u6750\u6599\u3002\n\u5feb\u901f\u9605\u8bfb\u53ef\u80fd\u65e0\u7528\u4e8e\u8bb0\u5fc6\u7684\u90e8\u5206\u3002\u6211\u7684\u5927\u8111\u7f13\u5b58\u662f\u6709\u9650\u7684\uff0c\u6709\u4e9b\u4e1c\u897f\u6211\u559c\u6b22\u4fdd\u7559\uff0c\u6709\u4e9b\u4e1c\u897f\u6211\u53ea\u662f\u4e22\u5f03\u3002\u5b66\u4f1a\u8fa8\u522b\u4e66\u4e2d\u90a3\u4e9b\u4f60\u9700\u8981\u8bb0\u4f4f\u7684\u90e8\u5206\u548c\u90a3\u4e9b\u53ef\u4ee5\u4e22\u5f03\u7684\u90e8\u5206\u3002\n\u9605\u8bfb\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u4f60\u4e0d\u592a\u4e86\u89e3\u7684\u8bdd\u9898\u3002\u5728\u4f60\u8fd8\u5728\u8bfb\u5b8c\u8fd9\u672c\u4e66\u7684\u65f6\u5019\uff0c\u8bfb\u4e00\u4e2a\u7b80\u77ed\u7684\u6458\u8981\u6765\u770b\u6e05\u695a\u5f53\u524d\u7684\u5185\u5bb9\u3002\u628a\u5b83\u4eec\u5206\u5f00\u5199\u4e0b\u6765\uff0c\u4ee5\u4fbf\u4ee5\u540e\u8fdb\u884c\u66f4\u591a\u7684\u7814\u7a76\u3002\u5728\u6211\u8bfb\u5b8c\u51e0\u672c\u5173\u4e8e\u8fd9\u4e00\u9886\u57df\u7684\u4e66\u4e4b\u540e\uff0c\u6216\u8005\u6709\u65f6\u5728\u4e66\u7684\u4e2d\u95f4\uff0c\u5982\u679c\u7406\u89e3\u8fd9\u672c\u4e66\u53d6\u51b3\u4e8e\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u7684\u7406\u89e3\uff0c\u6211\u4f1a\u56de\u5230\u8fd9\u4e2a\u6e05\u5355\u4e0a\u3002\n\u8bfb\u5b8c\u6574\u672c\u4e66\u540e\u5199\u4e00\u7bc7\u6458\u8981\u3002\u5728\u4f60\u7684\u535a\u5ba2\u3001\u793e\u4ea4\u5a92\u4f53\u6216\u53ef\u80fd\u611f\u5174\u8da3\u7684\u793e\u533a\u4e2d\u5206\u4eab\u603b\u7ed3\u548c\u89e3\u91ca\u8fc7\u7684\u4fe1\u606f\u3002\u8fd9\u5c06\u5e2e\u52a9\u4f60\u66f4\u5e7f\u6cdb\u5730\u601d\u8003\u8fd9\u672c\u4e66\u7684\u4e3b\u9898\uff0c\u800c\u4e0d\u662f\u4f60\u7b14\u8bb0\u7684\u6df1\u5c42\u3002\n\u8ba8\u8bba\u8fd9\u672c\u4e66\uff0c\u5e76\u5c06\u5176\u8f6c\u4ecb\u7ed9\u4f60\u7684\u670b\u53cb\u548c\u5bb6\u4eba\u3002\u8ba8\u8bba\u5c06\u5e2e\u52a9\u4f60\u5728\u540c\u4e00\u4e3b\u9898\u4e0a\u53d1\u73b0\u65b0\u7684\u89c2\u70b9\u3002\u63a8\u8350\u4eba\u4f1a\u5e2e\u52a9\u4f60\u6210\u4e3a\u4e00\u540d\u66f4\u597d\u7684\u8001\u5e08\u3002\n\u5f53\u7136\uff0c\u4e0a\u8ff0\u89c4\u5219\u5bf9\u6211\u6709\u6548\uff0c\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u6240\u6709\u4eba\u3002\u5b83\u4eec\u4e0d\u662f\u6212\u5f8b\u3002\n\u5982\u679c\u4f60\u53ea\u80fd\u4ece\u4ee5\u4e0a\u5185\u5bb9\u4e2d\u6311\u51fa\u4e00\u4ef6\u4e8b\uff0c\u6211\u4f1a\u628a\u91cd\u70b9\u653e\u5728\u5199\u4f5c\u7b14\u8bb0/\u603b\u7ed3\u90e8\u5206\u3002\u6211\u8ba4\u4e3a\u5728\u9605\u8bfb\u65f6\u5199\u4f5c\u548c\u79ef\u6781\u601d\u8003\u7ed9\u4e86\u6211\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u901a\u8bfb\u548c\u9057\u5fd8\u3002", "note_en": "I read about 3 books in a month and 60 pages per hour. Not quite the same as  Bill Gates who reads about  150 pages in an hour with 90% retention but I\u2019m slowly getting closer.\n There are certain habits I\u2019ve developed over time that have helped me vastly read faster and retain much more. Sharing them here for the benefit of the community:\n Pick up multiple books from the same area to go deeper in an area. That way to genuinely learn about a topic.\n Research the author thoroughly before picking up any book. Research the gist and the reason for that book to exist. I quite often read the Introduction or Foreword before actually starting the book. Those sections are filled with stories about the author and how they came to write the book.\n You\u2019re not compelled to finish a book you don\u2019t like. You can leave it at some point and pick it up again when you feel like returning to a topic.\n Some books are more flexible and might not be read linearly. It does depend on the topic of book you\u2019re reading. It\u2019s okay to pick up chapters if the book is meant to be a collection of answers to unrelated topics. For example, I read a book on Ayurvedic healing and after some basic principles, it was organized by type of ailment. I could pick and choose the ailment I was interested to read more about.\n Write notes  every single time. Don\u2019t copy paste notes from your kindle or phone, write manually, typing every single word. Also try to paraphrase, this way you are forced to actively think about the material you\u2019re reading.\n Speed read parts that might not be useful to remember. My brain cache is limited, there are things I like to keep and things I just discard. Learn to recognize those parts of the book that you need to remember and those that can be discarded.\n While reading you might come across topics you don\u2019t know much about. While you\u2019re still finishing the book, read a brief summary to get through the current content. Write them down separately to research more later. I come back to that list after I\u2019ve finished a few books on that area or sometimes while in the middle of the book if comprehension of the book depends on understanding that topic.\n Write a summary after you\u2019ve read the whole book. Share summarized and paraphrased information on your blog, on social media or in communities that might be interested. This will help you think more broadly about the topic of the book rather than the deep level of your notes.\n Discuss and refer the book to your friends and family. Discussion will help you discover new opinions on the same topic. Referring will help you become a better teacher.\n Of course, the above are rules that worked for me and might not for everyone else. They\u2019re not commandments.\n If you had to pick up just one thing from the above, I would focus on the writing notes/summary part. I think writing and actively thinking while I\u2019m reading has given me a lot more knowledge than just reading through books and forgetting.", "posttime": "2020-05-26 23:07:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9605\u8bfb,habits,\u4e3b\u9898", "title": "\u6539\u53d8\u4e86\u6211\u4e00\u751f\u7684\u9605\u8bfb\u4e60\u60ef", "title_en": "Reading habits that changed my life", "transed": 1, "url": "https://blog.usejournal.com/10-reading-habits-that-changed-my-life-5c7673bc34bc", "via": "", "real_tags": ["\u9605\u8bfb", "habits", "\u4e3b\u9898"]}, {"category": "", "categoryclass": "", "imagename": "2eb435bc1ed2008021661a31c03ecb0e.png", "infoid": 1003786, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5c31\u662f\u96c5\u5854\u8bed\u7684\u6545\u4e8b\u3002YATTA\u662f\u4e00\u79cd\u9762\u5411GraalVM\u7684\u51fd\u6570\u5f0f\u3001\u52a8\u6001\u3001\u975e\u963b\u585e\u8bed\u8a00\u3002\u4eca\u5929\u662f\u5b83\u9996\u6b21\u516c\u5f00\u53d1\u5e03alpha\u7684\u65e5\u5b50\u3002\n\u6211\u76f8\u4fe1\u8bb8\u591a\u8bfb\u8005\u4f1a\u95ee\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u201c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff1f\u201d\u5192\u7740\u542c\u8d77\u6765\u50b2\u6162\u7684\u98ce\u9669\uff0c\u6211\u7684\u7b54\u6848\u5f88\u7b80\u5355\uff1a\u6211\u60f3\u8981\u4e00\u79cd\u50cfYatta\u8fd9\u6837\u7684\u8bed\u8a00\uff0c\u4e00\u79cd\u5141\u8bb8\u6211\u5c06\u7a0b\u5e8f\u7f16\u5199\u4e3a\u7b80\u5355\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u8bf8\u5982\u5e76\u53d1\u6027\u4e4b\u7c7b\u7684\u4f4e\u7ea7\u5185\u5bb9\uff0c\u5177\u6709\u6f02\u4eae\u7684\u8bed\u6cd5\u548c\u5f3a\u5927\u4f46\u52a8\u6001\u7684\u7c7b\u578b\u7cfb\u7edf\u3002\u6211\u4e0d\u60f3\u4e0e\u4efb\u4f55\u4f4e\u4e8e\u8fd9\u4e00\u70b9\u7684\u4eba\u59a5\u534f\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u4ee5\u4e00\u79cd\u975e\u6b63\u5f0f\u7684\u98ce\u683c\u5199\u7684\uff0c\u91cd\u70b9\u662f\u8fd9\u4e2a\u9879\u76ee\u80cc\u540e\u7684\u5386\u53f2\u548c\u52a8\u673a\u3002\u5b83\u4e5f\u662f\u4ece\u6211\u7684\u89d2\u5ea6\u7f16\u5199\u7684\uff0c\u4f46\u6211\u60f3\u5f3a\u8c03Fedor\u7684\u8d21\u732e\uff0c\u7279\u522b\u662f\u5728\u8fd0\u884c\u65f6\u548c\u6570\u636e\u7ed3\u6784\u9886\u57df\uff0c\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u5bf9\u8bed\u8a00\u7279\u6027\u8fdb\u884c\u4e86\u65e0\u6570\u5c0f\u65f6\u7684\u4e00\u822c\u8ba8\u8bba\u3002\n\u8ba9\u6211\u8df3\u5230\u8fd9\u91cc\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6211\u4eec\u60f3\u8981\u5728\u8fd9\u4e2a\u535a\u5ba2\u4e2d\u8fbe\u5230\u7684\u9876\u5cf0\u3002\u5e0c\u671b\u5728\u6df1\u5165\u7814\u7a76\u6240\u6709\u5176\u4ed6\u8bed\u8a00\u7684\u95ee\u9898\u4e4b\u524d\u5f15\u8d77\u60a8\u7684\u6ce8\u610f\u3002\n\u5c1d\u8bd5\u8ba9KEYS_FILE=File\uff1a\uff1aOPEN&#34\uff1bTESTS/Keys.txt&#34\uff1b{\uff1aREAD}VALUES_FILE=File\uff1a\uff1aOPEN&#34\uff1bTESTS/Values.txt&#34\uff1b{\uff1aREAD}KEYS=File\uff1a\uff1aREAD_LINES KEYS_FILE VALUES=File\uff1a\uff1aREAD_LINES VALUES_FILE()=File\uff1a\uff1aCLOSE KEYS_FILE()=File\uff1a\uff1aCLOSE VALUES_FILE in Seq\uff1a\uff1aZIP KEYES VALUES|&gt\uff1bdict\uff1a\uff1afrom_se.\u3002{}\u7ed3\u675f|&gt\uff1b\u6253\u5370\u3002\n\u4e0d\u8981\u62c5\u5fc3\u6ca1\u6709\u7406\u89e3\u6240\u6709\u7684\u8bed\u6cd5\uff0c\u8fd9\u5728\u76ee\u524d\u5e76\u4e0d\u91cd\u8981\u3002\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1a\u7a0b\u5e8f\u5e76\u884c\u8bfb\u53d6\u4e24\u4e2a\u6587\u4ef6(\u4e00\u4e2a\u5305\u542b\u952e\uff0c\u53e6\u4e00\u4e2a\u5305\u542b\u503c)\uff0c\u7136\u540e\u5c06\u952e/\u503c\u538b\u7f29\u6210\u5bf9\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u3002\n\u53ef\u80fd\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u5e76\u884c\u8bfb\u53d6\u8fd9\u4e9b\u6587\u4ef6\u3002\u8fd9\u5c31\u662f\u96c5\u5854\u7684\u5168\u90e8\u610f\u4e49\u6240\u5728\uff01\n\u5982\u679c\u60a8\u6ce8\u610f\u4e86\uff0c\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u8bfb\u3002\u7a0d\u540e\u6211\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u4f46\u9996\u5148\u6211\u60f3\u5206\u4eab\u4e00\u4e9b\u66f4\u5e7f\u6cdb\u7684\u80cc\u666f\u548c\u6211\u521b\u5efa\u8fd9\u79cd\u8bed\u8a00\u7684\u52a8\u673a\u3002\n\u4ece\u6211\u5f00\u59cb\u5b66\u4e60\u51fd\u6570\u5f0f\u7f16\u7a0b\u6982\u5ff5\u5f00\u59cb\uff0c\u6211\u5c31\u53d1\u73b0\u5b83\u4eec\u975e\u5e38\u6709\u7528\u3002\u8fc7\u53bb\u4f7f\u7528Scala\u548cErlang\u662f\u4e00\u4ef6\u4ee4\u4eba\u6109\u5feb\u7684\u4e8b\u60c5\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u7406\u5ff5\u622a\u7136\u4e0d\u540c\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u7279\u6027\uff0c\u6bd4\u5982\u4e00\u6d41\u7684\u51fd\u6570\u3001\u4e0d\u53d8\u7684\u6570\u636e\u7ed3\u6784\u6216\u5f3a\u5927\u7684\u6a21\u5f0f\u5339\u914d\u3002\u5728\u4e0b\u9762\u7684\u6587\u672c\u4e2d\uff0c\u6211\u5e76\u4e0d\u662f\u8981\u6279\u8bc4\u4efb\u4f55\u73b0\u6709\u7684\u8bed\u8a00\uff0c\u4f46\u6211\u786e\u5b9e\u60f3\u6307\u51fa\u4e00\u4e9b\u6211\u8ba4\u4e3a\u6709\u7528\u6216\u56f0\u96be\u7684\u5177\u4f53\u89c2\u70b9\u3002\u8fd9\u5e94\u8be5\u4f1a\u63d0\u4f9b\u8db3\u591f\u7684\u80cc\u666f\u6765\u89e3\u91ca\u4e3a\u4ec0\u4e48Yatta\u662f\u8fd9\u6837\u8bbe\u8ba1\u7684\u3002\nScala\u662f\u6211\u5b66\u4e60\u5e76\u5b9e\u9645\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u7684\u7b2c\u4e00\u79cd\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u3002\u6211\u4ee5\u524d\u4e3b\u8981\u662f\u4e00\u540dJava\u5de5\u7a0b\u5e08\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u662f\u8fdb\u5165FP\u4e16\u754c\u7684\u4e00\u79cd\u81ea\u7136\u65b9\u5f0f\u3002\u6211\u5bf9Scala\u7684\u4e3b\u8981\u671f\u671b\u662f\u80fd\u591f\u8f7b\u677e\u5730\u5e76\u884c\u5316\u4e00\u4e9b\u4ee3\u7801\uff0c\u8fd9\u5728\u5f53\u65f6\u7684Java\u4e2d\u662f\u76f8\u5f53\u75db\u82e6\u7684(\u81f3\u5c11\u5728\u8bed\u8a00\u7ea7\u522b\u4e0a\u4ecd\u7136\u662f\u5982\u6b64)\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4ecd\u7136\u5bf9\u5982\u4f55\u5411\u4ee3\u7801\u6dfb\u52a0\u5e76\u884c\u6027\u975e\u5e38\u611f\u5174\u8da3\u3002\u96c5\u5854\u662f\u4e13\u95e8\u8bbe\u8ba1\u7684\uff0c\u6211\u518d\u4e5f\u4e0d\u7528\u53bb\u60f3\u90a3\u4ef6\u4e8b\u4e86\uff01\n\u8d77\u521d\uff0c\u6211\u5bf9Scala\u975e\u5e38\u6ee1\u610f--\u80fd\u591f\u91cd\u7528\u6211\u73b0\u6709\u7684\u5927\u90e8\u5206Java\u4ee3\u7801\u662f\u975e\u5e38\u68d2\u7684\u3002\u80fd\u591f\u6162\u6162\u5730\u4eceOOP\u6982\u5ff5\u8f6c\u5411FP\u98ce\u683c\u662f\u4ef6\u597d\u4e8b\u3002\u5728\u540e\u6765\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u6211\u610f\u8bc6\u5230\u6211\u7684\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u662f\u4ee5\u51fd\u6570\u98ce\u683c\u7f16\u5199\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u7ee7\u627f\uff0c\u4f46\u662f\u4f7f\u7528\u4e86\u6a21\u5f0f\u5339\u914d\u3001\u4e0d\u53ef\u53d8\u7684\u6848\u4f8b\u7c7b\u548c\u66f4\u9ad8\u9636\u7684\u51fd\u6570\u3002\nCASE\u7c7b\u975e\u5e38\u9002\u5408\u5b58\u50a8\u6570\u636e\uff0c\u4e0d\u518d\u9700\u8981\u4e3aDTO\u800c\u70e6\u607c\u3002\u5728\u5bf9\u5e76\u53d1\u6027\u8fdb\u884c\u63a8\u7406\u65f6\uff0c\u62e5\u6709\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b\u662f\u975e\u5e38\u6709\u76ca\u7684\u3002\u90fd\u662f\u597d\u4e8b\u3002\u7136\u800c\uff0c\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u5f00\u59cb\u6323\u624e\u3002\u6211\u6ca1\u6709\u4e00\u53f0\u901f\u5ea6\u5f88\u6162\u7684\u8ba1\u7b97\u673a\uff0c\u4f46\u968f\u7740\u6211\u7684\u9879\u76ee\u7684\u589e\u957f\uff0c\u7f16\u8bd1\u65f6\u95f4\u4e5f\u968f\u4e4b\u589e\u52a0\u3002\u589e\u91cf\u7f16\u8bd1\u6709\u6240\u5e2e\u52a9\uff0c\u4f46\u4ec5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6709\u6240\u5e2e\u52a9\u3002\u6211\u4f7f\u7528\u4e86\u76f8\u5f53\u591a\u7684Scala\u5e93\uff0c\u6709\u65f6\u6211\u4e00\u5929\u4e2d\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u4e0e\u590d\u6742\u7684\u7c7b\u578b\u9519\u8bef\u4f5c\u6597\u4e89\uff0c\u7f13\u6162\u7684\u7f16\u8bd1\u65f6\u95f4\u66f4\u662f\u96ea\u4e0a\u52a0\u971c\u3002\n\u5f53\u7136\uff0c\u7f16\u8bd1\u5668\u786e\u5b9e\u6355\u83b7\u4e86\u4e00\u4e9b\u9519\u8bef\uff0c\u4f46\u6709\u65f6\u6211\u771f\u7684\u60f3\u77e5\u9053\uff0c\u6355\u83b7\u7684\u8fd9\u4e24\u4e2a\u9519\u8bef\u662f\u5426\u771f\u7684\u503c\u5f97\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u7b49\u5f85\u7f16\u8bd1\u5b8c\u6210\u6216\u4e0e\u96be\u4ee5\u7406\u89e3\u7684\u7c7b\u578b\u9519\u8bef\u4f5c\u6597\u4e89\u3002\u8fd9\u91cc\u901a\u5e38\u8981\u5f52\u548e\u4e8e\u6784\u5efa\u5728\u5927\u578b\u5e93\u548c\u6846\u67b6\u4e2d\u7684\u590d\u6742\u62bd\u8c61\u5c06\u7f16\u8bd1\u5668\u63a8\u5411\u6781\u9650\u3002\n\u6700\u7ec8\uff0c\u6211\u5728Erlang\u5b8c\u6210\u4e86\u4e00\u4e2a\u9879\u76ee\u3002\u7531\u4e8e\u4e4b\u524d\u6ca1\u6709\u4f7f\u7528\u5b83\u7684\u7ecf\u9a8c\uff0c\u6211\u4e0d\u786e\u5b9a\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6bd5\u7adf\uff0cErlang\u662f\u52a8\u6001\u7c7b\u578b\u7684\u3002\u5b83\u4e5f\u4e0d\u652f\u6301Java\u7b49\u8bed\u8a00\u4e2d\u7684\u201c\u4f20\u7edf\u201dOOP\u6982\u5ff5\u3002\u5b83\u6709\u4e00\u4e2a\u201c\u5947\u602a\u7684\u201d\u8bed\u6cd5\u548c\u4e00\u4e2a\u4e0d\u540c\u5bfb\u5e38\u7684\u5e76\u53d1\u6a21\u578b\u3002\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\u3002\n\u6211\u5f88\u5feb\u5c31\u7231\u4e0a\u4e86\u4e8c\u90ce\u3002\u6211\u6700\u521d\u6700\u5bb3\u6015\u7684\u4e8b\u60c5(\u6bd4\u5982\u7f3a\u4e4fOOP\u7279\u6027)\u539f\u6765\u662f\u90a3\u4e9b\u5141\u8bb8\u66f4\u7b80\u5355\u7684\u8bed\u6cd5\u7684\u4e1c\u897f\u3002\u53e6\u5916\uff0c\u5b83\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u5e76\u53d1\u6a21\u578b\uff0c\u800c\u4e0d\u662fJava\u4e2d\u57fa\u4e8e\u9501/\u76d1\u89c6\u5668\u7684\u57fa\u672c\u540c\u6b65\u3002\u7136\u800c\uff0c\u6211\u6700\u62c5\u5fc3\u7684\u662fErlang\u662f\u4e00\u79cd\u52a8\u6001\u8bed\u8a00\u3002\u6211\u4e00\u76f4\u4ee5\u4e3a\u6211\u6c38\u8fdc\u4e0d\u4f1a\u559c\u6b22\u4e00\u95e8\u5145\u6ee1\u6d3b\u529b\u7684\u8bed\u8a00\u3002\u6211\u7684\u5fc3\u6001\u4ecd\u7136\u975e\u5e38\u503e\u5411\u4e8e\u9759\u6001\u7c7b\u578b\uff0c\u5c3d\u7ba1\u6211\u6709\u8fc7\u5904\u7406\u4e0d\u6e05\u695a\u7c7b\u578b\u9519\u8bef\u548c\u7f16\u8bd1\u65f6\u95f4\u7f13\u6162\u7684\u75db\u82e6\u7ecf\u5386\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u53c8\u4f7f\u7528\u4e86\u4e00\u4e9bJava\u3001Scala\u3001JavaScript\u3001TypeScript\u3001Python\uff0c\u4f46\u6211\u89c9\u5f97\u5b83\u4eec\u90fd\u6709\u4e00\u4e9b\u4e0d\u5e94\u8be5\u51fa\u73b0\u7684\u4e1c\u897f\uff1a\u8fd9\u4e9b\u90fd\u4e0d\u662f\u7eaf\u51fd\u6570\u8bed\u8a00\uff0c\u5b83\u4eec\u4ecd\u7136\u5b9e\u73b0\u4e86OOP\u7279\u6027\u3002\u81ea\u4ece\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528Erlang\u4ee5\u6765\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u89c9\u5f97\u9700\u8981OOP(\u81f3\u5c11\u5728\u4e3b\u6d41\u5f62\u5f0f\u4e0b\uff0c\u9700\u8981\u7ee7\u627f)\u3002\u73b0\u5728\uff0c\u6bcf\u4e00\u79cd\u652f\u6301OOP\u7684\u8bed\u8a00\u5bf9\u6211\u6765\u8bf4\u90fd\u662f\u81c3\u80bf\u7684\u3002\u6211\u4e0d\u60f3\u518d\u5904\u7406\u8fd9\u4ef6\u4e8b\u4e86\u3002\u6211\u6700\u7ec8\u4e5f\u6539\u53d8\u4e86\u5bf9\u9759\u6001\u8f93\u5165\u7684\u770b\u6cd5\u3002\u6211\u4e0d\u60f3\u518d\u6b21\u843d\u5165\u7f13\u6162\u7f16\u8bd1\u548c\u8c03\u8bd5\u795e\u79d8\u952e\u5165\u9519\u8bef\u7684\u9677\u9631\u3002\n\u6211\u4e0d\u5fc5\u7b80\u5355\u5730\u56de\u5230Erlang\u7684\u552f\u4e00\u539f\u56e0\u5b9e\u9645\u4e0a\u662f\u5b83\u7684\u5e76\u53d1\u6a21\u578b\u3002\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u8fdb\u7a0b\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\u5f00\u59cb\u8ba9\u4eba\u611f\u89c9\u6709\u4e9b\u4f4e\u7ea7\u3002\u6211\u5f00\u59cb\u6000\u7591\u8fd9\u4e2a\u62bd\u8c61\u7ea7\u522b\u662f\u5426\u9700\u8981\u51fa\u73b0\u5728\u5927\u591a\u6570\u7528\u6237\u7ea7\u4ee3\u7801\u4e2d\uff0c\u6216\u8005\u662f\u5426\u53ef\u4ee5\u9690\u85cf\u5728\u8bed\u8a00\u201c\u672c\u8eab\u201d\u4e2d\u3002\n\u5927\u7ea6\u4e24\u5e74\u524dGraalVM\u51fa\u73b0\u65f6(\u6216\u8005\u81f3\u5c11\u5f53\u5b83\u5f15\u8d77\u6211\u7684\u6ce8\u610f\u65f6)\uff0c\u6211\u7acb\u5373\u5f00\u59cb\u8ba1\u5212\u5982\u4f55\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u4e00\u79cd\u6211\u60f3\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u4e0d\u53d7\u73b0\u6709\u8bed\u8a00\u7684\u59a5\u534f\u548c\u9650\u5236\u3002\u8fd9\u610f\u5473\u7740\u9996\u5148\u8981\u6709\u4e00\u79cd\u51fd\u6570\u5f0f\u8bed\u8a00\u3002\u5145\u6ee1\u6d3b\u529b\u3002\u52a8\u6001\u7684\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u73b0\u5728\u6709\u8fd9\u4e48\u591a\u9759\u6001\u8bed\u8a00\uff0c\u4f3c\u4e4e\u6ca1\u6709\u4eba\u771f\u6b63\u77e5\u9053\u54ea\u79cd\u7c7b\u578b\u7cfb\u7edf\u662f\u201c\u6700\u597d\u7684\u201d\u3002\u6bcf\u79cd\u9759\u6001\u8bed\u8a00\u90fd\u6709\u4e00\u4e9b\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u54ea\u79cd\u65b9\u6cd5\u662f\u201c\u6b63\u786e\u7684\u201d\u5462\uff1f\u54c8\u65af\u514b\u5c14\u6709\u51e0\u5341\u4e2a\u5206\u673a\u5417\uff1fScala\u53ca\u5176\u56fe\u7075\u5b8c\u6574\u7c7b\u578b\u7cfb\u7edf\uff1f\u4e5f\u8bb8\uff0c\u6211\u80af\u5b9a\u4e0d\u662f\u5728\u53cd\u5bf9\u8fd9\u4e9b\u5728\u5176\u9886\u57df\u975e\u5e38\u6210\u529f\u7684\u8bed\u8a00\u3002\u4f0a\u5fb7\u91cc\u65af\u6700\u7ec8\u4f1a\u4e0d\u4f1a\u505a\u5bf9\u4e86\u5462\uff1f\n\u7136\u800c\uff0c\u6211\u4e0d\u60f3\u5c06\u81ea\u5df1\u9501\u5b9a\u5728\u7279\u5b9a\u7c7b\u578b\u7cfb\u7edf\u7684\u7ea6\u675f\u4e2d\uff0c\u7136\u540e\u5c06\u5176\u4ed6\u6240\u6709\u51b3\u5b9a\u90fd\u7f6e\u4e8e\u8fd9\u4e9b\u81ea\u6211\u5f3a\u52a0\u7684\u9650\u5236\u4e4b\u4e0b\u3002\u6211\u5e0c\u671b\u62e5\u6709\u52a8\u6001\u7c7b\u578b\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\uff0c\u7136\u540e\u5c3d\u6700\u5927\u52aa\u529b\u907f\u514d\u7c7b\u578b\u7cfb\u7edf\u4ee5\u5916\u7684\u4e0d\u540c\u62bd\u8c61\u7ea7\u522b\u7684\u9519\u8bef\u3002\u201c\u5f53\u7136\uff0c\u8fd9\u662f\u4ee5\u8fd0\u884c\u65f6\u6210\u672c\u4e3a\u4ee3\u4ef7\u7684\uff01\u201d\uff0c\u60a8\u53ef\u80fd\u4f1a\u8fd9\u6837\u60f3--\u8fd9\u662f\u771f\u7684\u3002\u4f46\u8fd9\u6b63\u662fGraalVM\u7684\u7528\u6b66\u4e4b\u5730\uff0c\u5b83\u4e3aYatta\u63d0\u4f9b\u4e86JIT\u548c\u57fa\u4e8e\u8fd0\u884c\u65f6\u914d\u7f6e\u6587\u4ef6\u4f18\u5316\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u5e0c\u671b\u5b9e\u9645\u6210\u672c\u4e0d\u4f1a\u90a3\u4e48\u7cdf\u7cd5\u3002\n\u7b80\u5355\u660e\u4e86\u7684\u8bed\u6cd5\uff0c\u6700\u5c0f\u7684\u6837\u677f\uff0c\u5f88\u5c11\u7684\u5173\u952e\u5b57\uff0c\u4e0d\u9700\u8981OOP\u6784\u9020\u3002\u4ee3\u7801\u5fc5\u987b\u975e\u5e38\u5bb9\u6613\u9605\u8bfb\u3002\n\u4e00\u6d41\u7684\u51fd\u6570\u548c\u6a21\u5757\u3002\u6a21\u5757\u53ea\u662f\u51fd\u6570\u548c\u8bb0\u5f55\u7684\u96c6\u5408\u3002\u6a21\u5757\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7ec4\u7ec7\u5230\u5305\u4e2d\u3002\u652f\u6301\u5c3e\u90e8\u8c03\u7528\u4f18\u5316\u7684\u51fd\u6570\u8c03\u7528\u3002\n\u6570\u636e\u7c7b\u578b\u5f88\u5c11\u3002YATTA\u5177\u6709\u4ee5\u4e0b\u5185\u7f6e\u7c7b\u578b\uff1a\u6574\u6570(64\u4f4d)\u3001\u6d6e\u70b9\u6570(64\u4f4d)\u3001\u5b57\u7b26(UTF-8)\u3001\u7b26\u53f7\u3001\u5e8f\u5217(\u53ef\u53d8\u957f\u5ea6\uff0c\u4e24\u7aef\u7684\u6052\u5b9a\u65f6\u95f4\u8bbf\u95ee)\u3001\u5143\u7ec4(\u56fa\u5b9a\u957f\u5ea6)\u3001\u5b57\u5178\u3001\u96c6\u5408\u548cSTM(\u8f6f\u4ef6\u4e8b\u52a1\u5185\u5b58-\u6d4b\u8bd5\u7248)\u3002\u4f46\u662f\uff0c\u7c7b\u578b\u4e4b\u95f4\u6ca1\u6709\u9690\u5f0f\u8f6c\u6362\uff01\n\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u6216\u8bb0\u5f55\u3002\u8bb0\u5f55\u57fa\u672c\u4e0a\u53ea\u662f\u5e26\u6709\u547d\u540d\u5b57\u6bb5\u7684\u5143\u7ec4\uff0c\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u4f34\u7684\u8bed\u6cd5\u7cd6\u3002\n\u5f3a\u5927\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u5141\u8bb8\u5d4c\u5957\u5339\u914d\u548c\u975e\u7ebf\u6027\u6a21\u5f0f(\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u591a\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0)\u3002\n\u975e\u5e38\u7b80\u5355\u7684\u5e76\u53d1\u6a21\u578b\u3002\u5373\u4f7f\u5b83\u5728\u67d0\u4e9b(\u6216\u5927\u591a\u6570)\u60c5\u51b5\u4e0b\u4e0d\u662f\u6027\u80fd\u6700\u597d\u7684\uff0c\u5b83\u4e5f\u5e94\u8be5\u5185\u7f6e\u4e8e\u8bed\u8a00\u4e2d\uff0c\u5e76\u4e14\u975e\u5e38\u5bb9\u6613\u4f7f\u7528\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\u53ea\u4f7f\u7528\u51fd\u6570\u6784\u5efa\uff0c\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u8bed\u6cd5\u7ed3\u6784\u3002\u901a\u8fc7STM\u5b9e\u73b0\u9ad8\u7ea7\u5e76\u53d1\u3002\n\u5728JVM(GraalVM)\u4e0a\u8fd0\u884c\uff0c\u5e76\u5141\u8bb8\u4e0e\u5176\u4ed6JVM\u8bed\u8a00\u8fdb\u884c\u591a\u8bed\u8a00\u534f\u4f5c\u3002\u5982\u679c\u4e0e\u73b0\u6709\u4ee3\u7801\u5e93\u96c6\u6210\uff0c\u5219\u975e\u5e38\u91cd\u8981\u3002\n\u5f53\u7136\uff0c\u8fd9\u7ec4\u4f18\u5148\u4e8b\u9879\u662f\u975e\u5e38\u4e2a\u4eba\u5316\u7684\uff0c\u5e76\u4e14\u6765\u81ea\u6211\u4ee5\u524d\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u7684\u7ecf\u9a8c\u3002\u5176\u4ed6\u4eba\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u4f18\u5148\u4e8b\u9879\u3002\u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\uff0c\u6211\u5f88\u5feb\u5c31\u5f00\u59cb\u4e86\u8fd9\u95e8\u8bed\u8a00\u7684\u5b9e\u73b0\u5de5\u4f5c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u6bb5\u843d\u4e2d\uff0c\u6211\u5c06\u5c1d\u8bd5\u66f4\u6df1\u5165\u5730\u7814\u7a76\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002\n\u6211\u77e5\u9053\u6211\u60f3\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u6cd5\uff0c\u4f46\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1fLISP\u8bed\u6cd5\u7edd\u5bf9\u7b80\u7ea6(\u4ece\u6280\u672f\u4e0a\u8bb2)\uff0c\u4f46\u4e0d\u77e5\u4f55\u6545\u975e\u5e38\u96be\u770b\u3002\u5305\u62ec\u6211\u5728\u5185\u7684\u4e00\u4e9b\u4eba\u8ba4\u4e3aPython\u7684\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u6bd5\u7adf\uff0c\u8fd9\u662fPython\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u3002\u4f46\u662f\u6211\u60f3\u77e5\u9053\uff0c\u5b83\u771f\u7684\u662f\u53ef\u80fd\u7684\u201c\u6700\u7b80\u5355\u201d\u7684\u8bed\u6cd5\u5417\uff1fHaskell\u7684\u8bed\u6cd5\u53ef\u4ee5\u8bf4\u662f\u66f4\u7b80\u7ea6\u7684\uff0c\u4f46\u662f\u518d\u8bf4\u4e00\u904d\uff0c\u5b83\u771f\u7684\u5f88\u7b80\u5355\u5417\uff1f\u6211\u4e0d\u8fd9\u6837\u8ba4\u4e3a\u3002Haskell\u5141\u8bb8\u7531\u5404\u79cd\u968f\u673a\u5b57\u7b26\u7ec4\u6210\u7684\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26(\u4e4d\u4e00\u770b)\uff0c\u6211\u8ba4\u4e3a\u5982\u679c\u60a8\u4e0d\u6bcf\u5929\u4f7f\u7528Haskell\u8bed\u8a00\uff0cHaskell\u7a0b\u5e8f\u662f\u6700\u96be\u8bfb\u7684\u7a0b\u5e8f\u4e4b\u4e00\u3002\u56e0\u6b64\uff0c\u7b80\u5355\u5bf9\u6211\u7684\u771f\u6b63\u610f\u4e49\u662f\u8fd9\u6837\u7684\uff1a\n\u5173\u952e\u5b57\u7684\u6700\u5c0f\u503c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u4eec\u53ea\u670920\u4e2a\u5de6\u53f3\u3002\u5177\u4f53\u5730\u8bf4\uff1alet\u3001in\u3001if\u3001Then\u3001Else\u3001true\u3001false\u3001module\u3001exports\u3001as\u3001case\u3001of\u3001import\u3001from\u3001end\u3001do\u3001try\u3001catch\u3001raise\u3001module\u3001record\u3002\u8fd9\u4efd\u6e05\u5355\u5728\u672a\u6765\u53ef\u80fd\u4f1a\u7565\u6709\u53d8\u5316\uff0c\u4f46\u76ee\u6807\u662f\u660e\u786e\u7684\u3002\u5403\u5f97\u8d8a\u5c11\u8d8a\u597d\u3002\n\u51e0\u79cd\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002\u6ca1\u6709\u4efb\u4f55\u58f0\u660e\u3002\u8fd9\u51cf\u5c11\u4e86\u7406\u89e3\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u6240\u9700\u7684\u8111\u529b\u3002\u65e0\u9700\u8003\u8651Monad\u8f6c\u6362\u6216\u5177\u6709X\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49\u7279\u5b9a\u4e8e\u7c7b\u578b\u7684\u884c\u4e3a(\u7c7b\u578b\u7c7b\u3001\u7ee7\u627f\u3001\u5b8f\u3001\u9690\u542b\u3001\u2026)\u3002\u3002\u8bf4\u5f97\u591f\u591a\u4e86\uff0cYatta\u6709\u8fd9\u4e9b\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\uff1acase/if/let/do/try+catch/raise\uff0c\u7136\u540e\u662f\u6587\u5b57\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982\u6570\u5b57\u6216\u5b57\u7b26\u4e32\uff0c\u6216\u8005\u51fd\u6570\u548c\u6a21\u5757\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f\u6240\u6709\u7684\u5185\u5bb9\uff0c\u6211\u5e0c\u671b\u5c06\u8bed\u8a00\u771f\u6b63\u4fdd\u6301\u5728\u5c3d\u53ef\u80fd\u5c0f\u7684\u8303\u56f4\u5185\u3002\n\u7b80\u5355\u7684\u98ce\u683c\u662f\u5173\u952e\uff0c\u5c11\u5c31\u662f\u591a\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u5206\u53f7\uff0c\u6ca1\u6709\u82b1\u62ec\u53f7\uff0c\u751a\u81f3\u6ca1\u6709\u4efb\u4f55\u201c\u5757\u201d\u3002\n\u6d41\u6c34\u7ebf\u8bed\u6cd5-\u4fbf\u4e8e\u94fe\u63a5\u51fd\u6570\u8c03\u7528\u3002\u652f\u6301\u7684\u8fd0\u7b97\u7b26|&gt\uff1b\u548c&lt\uff1b|\u5c06\u51fd\u6570\u7ed3\u679c\u91cd\u5b9a\u5411\u5230\u53f3\u4fa7\u6216\u5de6\u4fa7\u3002\n\u751f\u6210\u5668\u8bed\u6cd5\u4f5c\u4e3aTransducers(\u5f52\u7ea6\u51fd\u6570\u7684\u6cdb\u578b\u8f6c\u6362)\u5468\u56f4\u7684\u8bed\u6cd5\u7cd6\uff0c\u5141\u8bb8\u8f7b\u677e\u8fed\u4ee3\u548c\u6784\u5efa\u6570\u636e\u7ed3\u6784\uff0c\u5982\u5e8f\u5217\u3001\u96c6\u5408\u6216\u5b57\u5178\u3002\n\u8003\u8651\u5230\u8fd9\u4e9b\u8981\u6c42\uff0c\u6211\u76f8\u4fe1Yatta\u7684\u8bed\u6cd5\u5b9e\u9645\u4e0a\u975e\u5e38\u5c0f\u4e14\u6613\u4e8e\u9605\u8bfb\u3002(\u6211\u5efa\u8bae\u60a8\u6d4f\u89c8\u4e00\u4e0b\u8be5\u9875\u9762\uff0c\u6211\u8bd5\u56fe\u4f7f\u5176\u975e\u5e38\u7b80\u6d01\u800c\u5168\u9762\u5730\u63cf\u8ff0\u6240\u6709\u8bed\u6cd5\u548c\u6240\u6709\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\uff0c\u5305\u62ec\u793a\u4f8b)\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u7ec8\u4e8e\u53ef\u4ee5\u56de\u5230\u6211\u5f00\u59cb\u65f6\u7684\u5185\u5bb9\uff0c\u5e76\u89e3\u91ca\u8fd9\u4e00\u5207\u662f\u5173\u4e8e\u4ec0\u4e48\u7684\u3002\u800c\u6211\u76f8\u4fe1\uff0c\u8fd9\u624d\u662f\u96c5\u5854\u771f\u6b63\u8131\u9896\u800c\u51fa\u7684\u8981\u70b9\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u5728Yatta\u8fd0\u884c\u65f6\u4e2d\u5b9e\u73b0\u7684\u60f3\u6cd5\u5728\u4ee5\u524d\u662f\u95fb\u6240\u672a\u95fb\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u5728\u8fd0\u884c\u65f6\u7ea7\u522b\u4e0a\u7684\u5b9e\u73b0\u4f7f\u5f97\u8be5\u8bed\u8a00\u975e\u5e38\u5bb9\u6613\u548c\u76f4\u89c2\u5730\u4f7f\u7528\u3002\n\u8fd9\u91cc\u7684\u5173\u952e\u70b9\u662f\uff1aYatta\u57fa\u672c\u4e0a\u6d88\u9664\u4e86\u5df2\u7ecf\u8ba1\u7b97\u7684\u503c\u548c\u627f\u8bfa(\u6216Java/Scala\u4e2d\u7684Futures)\u4e4b\u95f4\u7684\u4efb\u4f55\u5dee\u5f02\u3002\u8fd9\u610f\u5473\u7740\u7a0b\u5e8f\u5458\u4e0d\u5fc5\u7f16\u5199\u4efb\u4f55\u4e0d\u540c\u7684\u4ee3\u7801\uff0c\u8fd9\u53d6\u51b3\u4e8e\u503c\u662f\u5df2\u7ecf\u5b58\u5728\u8fd8\u662f\u5c06\u5728\u7a0d\u540e\u8fdb\u884c\u8ba1\u7b97\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u60a8\u5e0c\u671b\u5728Scala\u4e2d\u5e76\u884c\u8bfb\u53d6\u4e24\u4e2a\u6587\u4ef6(\u4e00\u4e2a\u5305\u542b\u952e\uff0c\u53e6\u4e00\u4e2a\u5305\u542b\u503c)\uff0c\u7136\u540e\u5c06\u952e/\u503c\u538b\u7f29\u6210\u5bf9\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u3002\u5728Scala\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u5178\u578b\u65b9\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n\u5f53\u7136\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u5e93\u53ef\u4ee5\u8ba9\u5b83\u53d8\u5f97\u66f4\u77ed\u3001\u66f4\u4f18\u96c5\uff0c\u4f46\u662f\u5bf9\u4e8e\u57fa\u672c\u7684Scala\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u53ef\u884c\u7684\u65b9\u6cd5\u3002\u73b0\u5728\u5728\u96c5\u5854\u8fd9\u6837\u505a\u600e\u4e48\u6837\uff1a\n\u5c1d\u8bd5\u8ba9KEYS_FILE=File\uff1a\uff1aOPEN&#34\uff1bTESTS/Keys.txt&#34\uff1b{\uff1aREAD}VALUES_FILE=File\uff1a\uff1aOPEN&#34\uff1bTESTS/Values.txt&#34\uff1b{\uff1aREAD}KEYS=File\uff1a\uff1aREAD_LINES KEYS_FILE VALUES=File\uff1a\uff1aREAD_LINES VALUES_FILE()=File\uff1a\uff1aCLOSE KEYS_FILE()=File\uff1a\uff1aCLOSE VALUES_FILE in Seq\uff1a\uff1aZIP KEYES VALUES|&gt\uff1bdict\uff1a\uff1afrom_se.\u3002{}\u7ed3\u675f|&gt\uff1b\u6253\u5370\n\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u90fd\u663e\u793a\u4e86\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u5305\u62ec\u6240\u6709\u7684\u201c\u6837\u677f\u201d\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u5728\u96c5\u5854\u51e0\u4e4e\u6ca1\u6709\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0cYatta\u4e2d\u7684\u4ee3\u7801\u672c\u8d28\u4e0a\u4e5f\u662f\u975e\u963b\u585e\u7684\uff0c\u5e76\u4e14\u4e24\u4e2a\u6587\u4ef6\u90fd\u662f\u5e76\u53d1\u8bfb\u53d6\u7684\uff0c\u800c\u65e0\u9700\u7f16\u5199\u4efb\u4f55\u989d\u5916\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u91cd\u8981\u7684\u662f\u60a8\u60f3\u8981\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u5b9e\u73b0\u5b83\u3002\n\u96c5\u5854\u662f\u600e\u4e48\u505a\u5230\u8fd9\u4e00\u70b9\u7684\uff1f\u6709\u51e0\u4ef6\u4e8b\uff1a\u9996\u5148\uff0c\u5b83\u77e5\u9053do\u548clet\u8868\u8fbe\u5f0f\u4e4b\u95f4\u7684\u533a\u522b\u3002\u5b83\u4eec\u90fd\u7528\u4e8e\u8bc4\u4f30\u591a\u4e2a\u8ba1\u7b97\u6b65\u9aa4\uff0c\u4f46\u662f\u786e\u5b9e\u8981\u786e\u4fdd\u8fd9\u4e9b\u6b65\u9aa4\u6309\u7167\u5b9a\u4e49\u7684\u987a\u5e8f\u8fdb\u884c\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u5e76\u884c\u5316\u975e\u963b\u585e\u4efb\u52a1\u3002\n\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1aYatta\u5c06\u9996\u5148\u5bf9let\u8868\u8fbe\u5f0f\u6267\u884c\u9759\u6001\u5206\u6790\uff0c\u4ee5\u786e\u5b9a\u6b65\u9aa4\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5b83\u77e5\u9053\u5728File\uff1a\uff1aRead_Lines\u51fd\u6570\u4e2d\u4f7f\u7528\u4e86KEYS_FILE\u548cVALUES_FILE\uff0c\u8fd8\u77e5\u9053\u952e\u548c\u503c\u4e0d\u76f8\u4e92\u4f9d\u8d56\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u5e76\u53d1\u8fd0\u884c\u3002\u8fd8\u8981\u77e5\u9053\u8fd9\u4e00\u70b9\uff0cYATTA\u6ca1\u6709\u5e76\u884cKEYS_FILE\u548cVALUES_FILE\uff0c\u4e5f\u6ca1\u6709\u5e76\u884c\u5173\u95ed\u6587\u4ef6--\u5c3d\u7ba1\u770b\u8d77\u6765\u5e94\u8be5\u5e76\u884c\u5316--\u8fd9\u4e9b\u884c\u4e4b\u95f4\u4e5f\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002\u8bc0\u7a8d\u5728\u4e8eFile\uff1a\uff1aRead_Lines\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u8fd0\u884c\u65f6\u7ea7\u522b\u7684\u627f\u8bfa(\u5bf9\u7528\u6237\u9690\u85cf)\uff0c\u8fd9\u610f\u5473\u7740\u5e76\u884c\u8bfb\u53d6\u4e24\u4e2a\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u7684\uff0c\u5426\u5219\u60a8\u5c06\u4e0d\u5f97\u4e0d\u963b\u585e\u5b83\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u540c\u65f6\u963b\u585e\u6b63\u5728\u8bfb\u53d6\u7684\u4e24\u4e2a\u6587\u4ef6\u5462\uff1f\n\u8fd9\u91cc\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\u662f\uff0clet\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u7684\u522b\u540d\u987a\u5e8f\u786e\u5b9e\u5f88\u91cd\u8981\u3002Yatta\u4e0d\u53ea\u662f\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\u968f\u673a\u5730\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5728\u8bfb\u53d6\u8fd9\u4e9b\u6587\u4ef6\u4e4b\u524d\u5c06\u5176\u5173\u95ed\u3002\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\u3002Yatta\u53ea\u662f\u4f7f\u7528\u5bf9\u8be5\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u5206\u6790\u6765\u786e\u5b9a\u54ea\u4e9b\u522b\u540d\u53ef\u4ee5\u201c\u6279\u5904\u7406\u201d\uff0c\u5982\u679c\u5b83\u4eec\u63d0\u4f9b\u5e95\u5c42\u627f\u8bfa\uff0c\u5219\u5b9e\u9645\u4e0a\u4f1a\u5bf9\u6267\u884c\u8fdb\u884c\u6279\u5904\u7406\u3002\u7136\u540e\u5c06\u6574\u4e2a\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u5982\u4e0b\u6240\u793a\uff1a\n\u6267\u884c\u6279\u6b211(\u987a\u5e8f\u6267\u884c\uff0c\u56e0\u4e3aFile\uff1a\uff1aOpen\u4e0d\u8fd4\u56de\u627f\u8bfa)\uff1aKEYS_FILE=File\uff1a\uff1aOpen&#34\uff1bTesting/Keys.txt&#34\uff1b{\uff1aRead}Values_File=File\uff1a\uff1aOpen&#34\uff1bTesting/Values.txt&#34\uff1b{\uff1aread}\u5e76\u884c\u6267\u884c\u6279\u5904\u74062(\u56e0\u4e3aFile\uff1a\uff1aRead_Lines\u786e\u5b9e\u8fd4\u56de\u627f\u8bfa)\uff1aKey=File\uff1a\uff1aRead_Lines KEYS_FILE VALUES=File\uff1a\uff1aREAD_LINES VALUES_fileResult from Batch 2\u662f\u805a\u5408\u4e86\u952e\u548c\u503c\u7684\u627f\u8bfa\uff0c\u5b8c\u6210\u540e\u5c06\u6267\u884c\u6279\u5904\u74063\uff1a()=File\uff1a\uff1aClose Key_file()=File\uff1a\uff1aClose Values_file\u6700\u540e\uff0c\u6574\u4e2alet\u8868\u8fbe\u5f0f\u73b0\u5728\u662f\u627f\u8bfa\uff0c\u56e0\u6b64\u53ea\u8981\u51c6\u5907\u5c31\u7eea\uff0c\u5c31\u8fd0\u884c\u6700\u7ec8\u8868\u8fbe\u5f0f\uff1aSEQ\uff1a\uff1aZIP KEYS\u3002\nYatta\u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u94fe\u63a5\u8fd0\u884c\u65f6\u627f\u8bfa\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6bcf\u5f53\u5b83\u4eec\u5b8c\u6210\u65f6\uff0c\u5b83\u90fd\u4f1a\u201c\u5c55\u5f00\u201d\u5b83\u4eec\uff0c\u56e0\u6b64\u8fd0\u884c\u65f6\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u56e0\u4e3a\u5230\u5904\u4f20\u64ad\u627f\u8bfa\u800c\u53d8\u5f97\u81c3\u80bf\u3002\u4e00\u65e6\u8ba1\u7b97\u51fa\u627f\u8bfa\uff0c\u5b83\u5c31\u4f1a\u518d\u6b21\u53d8\u6210\u6b63\u89c4\u503c\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6b64\u5904\u4e3a\u8fd4\u56de\u627f\u8bfa\u7684\u8868\u8fbe\u5f0f\u6355\u83b7\u5f02\u5e38\u4e0e\u6355\u83b7\u6b63\u89c4\u503c\u7684\u5f02\u5e38\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u8fd9\u662f\u56e0\u4e3aYatta\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u5bf9\u7528\u6237\u5b8c\u5168\u548c\u900f\u660e\u5730\u9690\u85cf\u4e86\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u3002\nYATTA\u5305\u542b\u4e00\u4e9b\u7531Fedor\u6784\u5efa\u7684\u6700\u5148\u8fdb\u7684\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u5305\u62ecSEQUENCE\u3001SET\u3001DICTIONARY\u548cSTM\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e00\u8282\u503c\u5f97\u53d1\u8868\uff0c\u56e0\u4e3aFedor\u5728\u4f18\u5316\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e0a\u4ed8\u51fa\u4e86\u5de8\u5927\u7684\u52aa\u529b\uff0c\u5b83\u4eec\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u51fa\u8272\u7684\u6027\u80fd\uff0c\u800c\u4e14\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u7279\u6027\uff0c\u4f8b\u5982\uff0cUTF-8\u5b57\u7b26\u6216\u5b57\u8282\u5e8f\u5217\u5c06\u81ea\u52a8\u5c06\u5b83\u4eec\u7f16\u7801\u5728\u5f15\u64ce\u76d6\u4e0b\u7684\u5757\u4e2d\uff0c\u4ece\u800c\u5927\u5927\u51cf\u5c11\u5185\u5b58\u4f7f\u7528\u548c\u5783\u573e\u6536\u96c6\u5668\u538b\u529b\uff0c\u540c\u65f6\u4ecd\u7136\u63d0\u4f9b\u4e30\u5bcc\u800c\u7075\u6d3b\u7684\u529f\u80fdAPI\uff01\n\u5728\u6211\u770b\u6765\uff0cYatta\u786e\u5b9e\u63a8\u52a8\u4e86\u52a8\u6001\u8bed\u8a00\u7684\u671f\u671b\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\u7ea7\u522b\uff0c\u4f7f\u5f97\u7f16\u7a0b\u53ea\u9488\u5bf9\u8868\u8fbe\u5f0f\u3002\u5b83\u6d88\u9664\u4e86\u7f16\u7a0b\u201c\u5982\u4f55\u201d\u7684\u9700\u8981\uff0c\u5e76\u5c06\u91cd\u70b9\u91cd\u65b0\u653e\u5728\u201c\u505a\u4ec0\u4e48\u201d\u4e0a\u3002\u5c3d\u7ba1\u8fd9\u542c\u8d77\u6765\u5f88\u5e38\u89c1\uff0c\u4f46\u5bf9\u4e8e\u6240\u6709\u7684\u58f0\u660e\u6027\u8bed\u8a00\uff0c\u6211\u76f8\u4fe1Yatta\u5728\u8fd9\u65b9\u9762\u6bd4\u5927\u591a\u6570\u8bed\u8a00\u8d70\u5f97\u66f4\u8fdc\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u5e76\u4e0d\u5168\u9762\u3002\u8fd9\u91cc\u751a\u81f3\u6ca1\u6709\u63d0\u5230\u66f4\u591a\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u8bf7\u52a1\u5fc5\u9605\u8bfb\u6587\u6863\u3002\n\u5982\u679c\u4f60\u5f88\u597d\u5947\uff0c\u53ef\u4ee5\u9605\u8bfbYatta\u4e3b\u9875\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u672c\u5730\u7684GraalVM\uff0c\u7136\u540e\u5b89\u88c5Yatta\u6765\u73a9\u3002\u5b89\u88c5\u975e\u5e38\u7b80\u5355-\u53ea\u9700\u5728\u8bbe\u7f6eGraalVM\u4e4b\u540e\u6267\u884c\u4e00\u4e2a\u547d\u4ee4\u3002\n\u6211\u5efa\u8bae\uff0c\u514b\u9686\u9879\u76eerepo\uff0c\u5e76\u4ece\u4f7f\u7528\u8bed\u8a00/\u6d4b\u8bd5\u7a0b\u5e8f\u5f00\u59cb\u3002\u5feb\u8dd1\u5427\uff1a\n\u8fd9\u4e2aalpha\u7248\u672c\u662f\u7b2c\u4e00\u4e2a\u516c\u5f00\u53d1\u5e03\u7684\u7248\u672c\uff0c\u5305\u542b\u4e86\u5927\u90e8\u5206\u8bed\u6cd5\u548c\u8bed\u4e49\u3002\u6807\u51c6\u5e93\u4ecd\u7136\u76f8\u5f53\u5c0f\uff0c\u4e0b\u4e00\u6b65\u5de5\u4f5c\u7684\u91cd\u70b9\u5c06\u662f\u5927\u5e45\u6269\u5c55\u5b83\u3002GitHub\u9879\u76ee\u6258\u7ba1\u4e86\u95ee\u9898\u8ddf\u8e2a\u5668\uff0c\u6709\u4e00\u4e2aGoogle\u7ec4\u53ef\u4ee5\u5bf9\u8bed\u8a00\u8fdb\u884c\u4e00\u822c\u6027\u8ba8\u8bba\uff0c\u8fd8\u6709\u4e00\u4e2aGitter\u623f\u95f4\u53ef\u4ee5\u4e0e\u6211\u3001Fedor\u6216\u4efb\u4f55\u611f\u5174\u8da3\u7684\u7528\u6237\u8fdb\u884c\u5feb\u901f\u804a\u5929\u3002\n\u8bf7\u968f\u65f6\u5efa\u8bae\u4e0b\u4e00\u7bc7\u535a\u5ba2\u5e16\u5b50\u5e94\u8be5\u662f\u5173\u4e8e\u4ec0\u4e48\u7684\u3002\u6211\u4f1a\u7ee7\u7eed\u64b0\u5199\u5173\u4e8e\u65b0\u529f\u80fd\u6216\u6539\u8fdb\u7684\u6587\u7ae0\uff0c\u5e76\u4fdd\u6301\u7248\u672c\u8bf4\u660e\u7684\u66f4\u65b0\u3002\n\u901a\u8fc7\u4e3b\u6f14GitHub\u9879\u76ee\u3001\u8ba2\u9605\u548c\u5171\u4eab\u6b64\u535a\u5ba2\uff0c\u6216\u8005\u8d21\u732e\u60a8\u7684\u53cd\u9988\u3001\u60f3\u6cd5\u3001\u60a8\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668/IDE\u96c6\u6210\u3001\u5e93\u6216\u4efb\u4f55\u60a8\u8ba4\u4e3a\u53ef\u80fd\u4f1a\u6709\u5e2e\u52a9\u7684\u4e1c\u897f\u6765\u8868\u793a\u652f\u6301\uff01", "note_en": "This is the story of the Yatta Language.  Yatta is a functional, dynamic, non-blocking language for the  GraalVM. Today is the day of its first public alpha release.\n I\u2019m sure the first question many readers will ask is \u201cwhy yet another programming language?\u201d. At risk of sounding arrogant, my answer is as simple as: I wanted a language like Yatta, one that  allows me to write programs as simple expressions, without having to worry about low-level stuff such as concurrency, with a beautiful syntax and a strong but dynamic type system. I didn\u2019t want to compromise with anything less than that.\n This post is written in an informal style, focusing on the history and motivation behind this project. It is also written from my perspective, but I want to emphasize the contributions of  Fedor, specifically to the area of the runtime and data structures and, just as importantly, countless hours of discussion about the language features in general.\n  Let me jump in here and give you a sneak peak of where we want to get in this blog. Hoping to capture your attention before dwelling into what\u2019s wrong with all the other languages.\n  try let keys_file = File::open &#34;tests/Keys.txt&#34; {:read} values_file = File::open &#34;tests/Values.txt&#34; {:read} keys = File::read_lines keys_file values = File::read_lines values_file () = File::close keys_file () = File::close values_file in Seq::zip keys values |&gt; Dict::from_seqcatch (:ioerror, _, _) -&gt; {}end |&gt; println\n Don\u2019t worry about not understanding all of the syntax, that\u2019s not important at the moment. What is happening here is this: the program reads two files (one containing keys, the other values) in parallel, and then zip the keys/values into pairs creating a dictionary.\n It is probably not clear why those files are being read in parallel. And that is the whole point of Yatta!\n If I have your attention, please read on. I will get into the details in a bit, but first I\u2019d like to share some wider context and my motivations that lead me to creating this language.\n  I found functional programming concepts very useful since when I started learning about them. Working with Scala and Erlang in the past has been a pleasure and, even though they are quite different in their philosophy, they share some nice features such as  first-class functions,  immutable data structures or  powerful pattern matching. In the following text, I don\u2019t mean to criticize any existing language, but I do want to point out some specific points that I either found useful or difficult for some reason. This should provide enough context to why Yatta is designed the way it is.\n Scala was the first functional programming language I learned and actually used in a production setting. I was primarily a Java engineer before so it felt like a natural way to get into the FP world. My main expectation from Scala was to be able to easily parallelize some code, which was pretty painful at the time in Java (it still is, at the language level at least).\n Note here that, at that point, I was still very much interested in how to add parallelism to the code. Yatta is specifically designed in a way that I no longer have to think about that at all!\n I was initially very happy with Scala \u2013 being able to reuse most of my existing Java code was great. Being able to slowly move away from OOP concepts to a FP style was nice. At some point later I realized that I am writing most of my code in a functional style, without any inheritance, but with pattern matching, immutable case classes, and higher order functions.\n Case classes are great for storing data and there is no more need to hassle with DTOs. Having immutable types was hugely beneficial when reasoning about concurrency. All good things. After some time, though, I started to struggle. I did not have a slow computer but, as my project grew, compile times grew with it. Incremental compilation helped but only to a degree. I was at a point where I was using quite a bit of various Scala libraries and sometimes I would spend most of my day fighting complicated type errors, aggravated by slow compilation times.\n Sure, the compiler did catch some errors, but there were times when I was really wondering if the couple of errors caught were really worth the amount of time wasted waiting for compilation to finish or fight hard-to-understand type errors. Complex abstractions built into large libraries and frameworks pushing the compiler to its limits usually were to blame here.\n Eventually I ended up working on a project in Erlang. Having no previous experience working with it, I was not sure what to expect. Erlang is dynamically typed after all. It also does not support \u201ctraditional\u201d OOP concepts found in Java and alike. It has a \u201cweird\u201d syntax and an unusual concurrency model as well. Lots to learn.\n I quickly fell in love with Erlang. The things I initially feared most (such as the lack of OOP features) turned out to be those which allowed for a simpler syntax. Plus, it has a built-in concurrency model, rather than the basic lock/monitor based synchronization found in Java. Yet, my biggest fear was the fact that Erlang is a dynamic language. I always thought I could never like a dynamic language. My mindset was still very strongly in favor of static typing, despite all the painful experiences dealing with unclear type errors and slow compile times I had.\n Since then I have worked some more with Java, Scala, JavaScript, TypeScript, Python, but I felt like they all had something that shouldn\u2019t have been there: none of these were functional-only languages, they all still implemented OOP features. I never, since I first used Erlang, felt like I needed OOP (in its mainstream form at least, with inheritance). Every language which supports OOP now feels bloated to me. I do not want to deal with it any more. I eventually changed my mind about static typing too. I do not want to fall in the trap of slow compilations and debugging mysterious typing errors again.\n The only reason I had to not simply go back to Erlang was actually its concurrency model. After a while, sending messages between processes started to feel somewhat low-level. I started to wonder whether this level of abstraction needed to be present for most of the user-level code, or whether it could be hidden into the language \u201citself\u201d.\n  When GraalVM appeared about 2 years ago (or at least when it caught my attention), I immediately started planning on how to use it to create a programming language I would like to use, without the compromises and limitations of existing languages. That meant a functional language in the first place. Dynamic. Dynamic, because I feel like there are so many static languages these days and it seems like no-one really knows which type system is \u201cthe best\u201d. Every static language comes with a little different approach, but which one is the \u201cright\u201d one? Haskell with its dozens of extensions? Scala with its Turing complete type system? Maybe, I surely am not advocating against these languages, very successful in their domains. Could Idris finally be getting it right?\n I, however, do not want to lock myself into constraints of a particular type system and then subject every other decision to those self-imposed limits. I want to have the flexibility of a dynamic type system, and then do my best to avoid errors at different levels of abstraction other than the type system. \u201cSurely, this comes at a run-time cost!\u201d, you might think \u2013 and it is true. But this is where GraalVM comes to help, it provides Yatta with JIT and the ability to optimize the code based on the run-time profile, so the actual cost will hopefully not be that bad.\n  Plain and simple  syntax, minimal boilerplate, few keywords, no need for OOP constructs. The code must be very easy to read through.\n  First-class functions and modules. Modules are simply sets of functions and records. Modules can be further organized into packages. Function calls supporting tail-call optimizations.\n Few  data types. Yatta comes with the following built-in types: integer (64 bit), floating point number (64 bit), character (UTF-8), symbol, sequence (variable length, constant-time access to both ends), tuple (fixed length), dictionary, set and STM (Software Transactional Memory \u2013 coming in beta). No implicit conversions between types though!\n Custom data types, or  records. Records are basically just tuples with named fields, and syntax sugar that goes with it.\n Powerful pattern-matching, allowing nested matches and non-linear patterns (ability to use the same name in pattern more than once).\n Dead-simple  concurrency model. Even if it won\u2019t be the most performing one for some (or most) situations, it should be built into the language and be very easy to use. Ideally built with functions alone, requiring no special syntactic constructs. Advanced concurrency possible via STM.\n Run on JVM (GraalVM) and allow  polyglot  cooperation with other JVM languages. Very important if integrating with existing code-bases.\n Surely this set of priorities is very personal and comes from my previous experiences with other languages. Other people may have different priorities. Either way, I quickly started working on the implementation of this language. In the next paragraphs, I will try to dive a little deeper into each of them.\n  I knew I wanted a simple syntax, but what does that mean? Lisp syntax is absolutely minimalistic (technically), yet somehow very unpleasant to look at. Some people, including me, consider Python\u2019s syntax to be very simple. It is one of Python\u2019s main goals after all. But I wondered, is it really the \u201csimplest\u201d possible syntax? Haskell\u2019s syntax is arguably more minimalistic, but again, is it really simple? I do not think so. Haskell allows custom operators composed of all kinds of what looks like random characters (at first sight) and I would argue Haskell programs are some of the most difficult to read if you do not use the language daily. Therefore, what does simple really mean to me, is this:\n Minimum of keywords. There are as of now only around 20 of them. Specifically:  let,  in,  if,  then,  else,  true,  false,  module,  exports,  as,  case,  of,  import,  from,  end,  do,  try,  catch,  raise,  module, record. This list might slightly change in the future, but the aim is clear. Have as few as possible.\n Few types of expressions.  No statements at all. This reduces the mental effort required to understand what is going on. No need to think about monad transformations or having X ways to define type-specific behaviors (type classes, inheritance, macros, implicits, \u2026). Enough said, Yatta has these types of expressions:  case/ if/ let/ do/ try+ catch/ raise, and then literal expressions, such as numbers or strings, or functions and modules. That is all there is as of now, and I would like to keep the language really as small as possible.\n Simple style is the key and less is more, meaning no semicolons, no braces, not even any \u201cblocks\u201d.\n Pipeline syntax \u2013 for easy chaining of function calls. Supported operators  |&gt; and  &lt;| redirecting result of a function to either right or left side.\n Generators syntax as a syntax sugar around  Transducers (generic transformations of reducing function), allowing iterating and constructing data structures such as sequence, set or dictionary with ease .\n Considering these requirements, Yatta\u2019s  syntax is actually really small and easy to read, I believe. (I suggest you skim through that page, I tried to make it really concise yet comprehensive description of all of the syntax and all types of expressions, including examples).\n  At this point I can finally circle back to what I started in the beginning and explain what is this all about. And I believe, this is the main point where Yatta really stands out. It\u2019s not that the ideas implemented in Yatta runtime would be anything unheard of before, but their implementation on the runtime level makes this language very easy and intuitive to work with.\n The key point here is this: Yatta essentially removes any difference between already computed values and Promises (or Futures in Java/Scala). What that means is that the programmer doesn\u2019t have to write any different code depending on whether the value is already there or will be computed later.\n Consider this, you want to read two files (one containing keys, the other values) in parallel in Scala, and then zip the keys/values into pairs creating a dictionary. A typical way to do that in Scala would be something like:\n  Sure, there might be libraries that could make this shorter and more elegant, but for basic Scala, this is probably the way to go. Now how about doing that in Yatta:\n try let keys_file = File::open &#34;tests/Keys.txt&#34; {:read} values_file = File::open &#34;tests/Values.txt&#34; {:read} keys = File::read_lines keys_file values = File::read_lines values_file () = File::close keys_file () = File::close values_file in Seq::zip keys values |&gt; Dict::from_seqcatch (:ioerror, _, _) -&gt; {}end |&gt; println\n Both of these examples show full programs, including all the \u201cboiler-plate\u201d. As you can see, there is very little of it in Yatta. More importantly, the code in Yatta is also non-blocking in nature, and both files are read concurrently, without ever having to write a single extra character to make that happen. What is important is what you want to do with these files, not how to make it happen.\n How does Yatta do this? A couple of things: first, it knows the difference between the  do and  let expressions. They both are used to evaluate multiple steps of computation, however  do ensures that the steps take place in the same sequence as they are defined,  let tries to parallelize non-blocking tasks.\n So what\u2019s going on here is this: Yatta will first perform a  static analysis of the  let expression in order to  determine dependencies between the steps. It knows that  keys_file and  values_file are used in the  File::read_lines function and also knows that  keys and  values do not depend on each other, and so they  may be ran concurrently. Also know this, Yatta  doesn\u2019t parallelize  keys_file and  values_file, nor does it parallelize closing files \u2013 even though it seemingly should \u2013 there are no dependencies between these lines either. The trick is that  File::read_lines is a function that returns a runtime level Promise (hidden from the user), and that means that  reading two files in parallel is actually fine, since you\u2019d have to block on it otherwise, so why not block on both being read at once.\n Another important concept here is that the  order of aliases defined in the let expression does matter. Yatta  doesn\u2019t just randomly re-arrange them based on dependencies alone. If it did, it could for example close those files before they are ever read. That would be incorrect. Yatta just uses static analysis of this expression to determine which aliases can be \u201cbatched\u201d and actually batches the execution if they provide underlying Promises. Then the whole expression is transformed into something like this:\n Execute batch 1 (sequentially, since File::open does not return a Promise): keys_file = File::open &#34;tests/Keys.txt&#34; {:read} values_file = File::open &#34;tests/Values.txt&#34; {:read}Execute batch 2 (in parallel, since File::read_lines does return a Promise): keys = File::read_lines keys_file values = File::read_lines values_fileResult from batch 2 is a Promise aggregating both keys and values, which when complete, executes batch 3: () = File::close keys_file () = File::close values_fileFinally, the whole let expression is now a Promise, so run the final expression whenever it is ready: Seq::zip keys values |&gt; Dict::from_seq\n Yatta automatically chains runtime Promises as needed and, more than that, it \u201cunwraps\u201d them whenever they are complete, so the runtime doesn\u2019t actually get bloated with propagating Promises all over the place. As soon as a Promise is computed, it becomes just a regular value again.\n Note that catching exception here for an expression returning a Promise doesn\u2019t differ from catching exceptions for regular values. This is because Yatta completely and transparently hides the difference between the two from the user, in all cases.\n  Yatta contains some of the state-of-art data structures built by  Fedor. This include sequence, set, dictionary and STM. I think this section deserves its own post, as Fedor has put tremendous effort into optimizing these data structures and they offer not only excellent performance, but also some interesting features, for example that a sequence of UTF-8 characters or bytes will automatically keep them encoded in chunks under the hood, thus greatly decreasing memory usage and garbage collector pressure while still providing rich and flexible functional API!\n  Yatta, in my opinion, really pushes the expectations from dynamic languages. It provides a level of abstraction that makes programming just about expressions. It removes the need from programming of \u201chow\u201d and puts the focus back on \u201cwhat\u201d. As common as this sounds, for all declarative languages, I believe Yatta goes further in that way than most.\n This blog post is by no means comprehensive. There are many more features not even mentioned here, so please do make sure to read the  docs.\n If you\u2019re curious, read the Yatta  homepage, set up a local  GraalVM and install Yatta to play with. The  installation is dead simple \u2013 just one command after you\u2019ve set up GraalVM.\n I suggest, clone the  project repo, and start by playing with programs in language/tests. Just run:\n  This alpha release is the first public release, with most of the syntax and semantics in place. The standard library is still pretty small and the focus of the next work will be to expand it significantly. The GitHub  project hosts the issue tracker and there is a  Google group for general discussions about the language, as well as a  Gitter room for a quick chat with me, Fedor or any interested users.\n   Feel free to suggest what the next blog post should be about. I will keep writing them about new features or improvements, as well as maintain the  release notes updated.\n Show support by starring a GitHub  project, subscribing and sharing this blog, or by contributing your feedback, ideas, your favorite editor/IDE integration, libraries, or whatever else you think might help!", "posttime": "2020-05-26 23:06:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u7a0b\u5e8f,programming,\u8bed\u8a00,functional", "title": "\u51fd\u6570\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00YATTA\u7684\u8bbe\u8ba1", "title_en": "Designing a functional programming language: Yatta", "transed": 1, "url": "https://functional.blog/2020/05/25/designing-a-functional-programming-language-yatta/", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u7a0b\u5e8f", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "844e194e7e8f646bcdf46e353dd7615c.jpg", "infoid": 1003782, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u65b0\u51a0\u80ba\u708e\u76f4\u63a5\u593a\u8d70\u4e86\u6570\u4ee5\u4e07\u8ba1\u7684\u7f8e\u56fd\u4eba\u7684\u751f\u547d\uff0c\u4f46\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u5f15\u53d1\u7684\u72b6\u51b5-\u7316\u7357\u7684\u5931\u4e1a\u3001\u4e0e\u4e16\u9694\u7edd\u548c\u4e0d\u786e\u5b9a\u7684\u672a\u6765-\u53ef\u80fd\u4f1a\u5bfc\u81f475,000\u4eba\u6b7b\u4e8e\u5438\u6bd2\u3001\u9157\u9152\u548c\u81ea\u6740\u3002\n\u8fd9\u4e9b\u539f\u56e0\u9020\u6210\u7684\u6b7b\u4ea1\u88ab\u79f0\u4e3a\u7edd\u671b\u6b7b\u4ea1\uff0c\u800c\u65b0\u51a0\u80ba\u708e\u7684\u5927\u6d41\u884c\u53ef\u80fd\u6b63\u5728\u52a0\u901f\u5bfc\u81f4\u8fd9\u79cd\u6b7b\u4ea1\u7684\u6761\u4ef6\u3002\n\u7edd\u671b\u7684\u6b7b\u4ea1\u4e0e\u591a\u79cd\u56e0\u7d20\u6709\u5173\uff0c\u6bd4\u5982\u5931\u4e1a\u3001\u6050\u60e7\u3001\u6050\u60e7\u548c\u5b64\u7acb\u3002\u5728\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u4e4b\u524d\uff0c\u5df2\u7ecf\u51fa\u73b0\u4e86\u524d\u6240\u672a\u6709\u7684\u7edd\u671b\u6b7b\u4ea1\u4eba\u6570\u3002\u8fd9\u9879\u7814\u7a76\u7684\u4f5c\u8005\u4e4b\u4e00\u672c\u6770\u660e\u00b7\u7c73\u52d2(Benjamin Miller)\u8bf4\uff0c\u6211\u4eec\u60f3\u8981\u4f30\u8ba1\u8fd9\u573a\u5927\u6d41\u884c\u5c06\u5982\u4f55\u6539\u53d8\u672a\u6765\u7684\u8fd9\u4e00\u6570\u5b57\u3002\u4ed6\u662f\u52a0\u5dde\u5965\u514b\u5170\u798f\u5229\u4fe1\u6258\u516c\u53f8\u7684\u9996\u5e2d\u6218\u7565\u5b98\u3002\n\u5728\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u4e4b\u524d\uff0c\u798f\u7949\u4fe1\u6258\u62a5\u544a\u79f0\uff0c2017\u5e74\u6b7b\u4e8e\u7edd\u671b\u7684\u751f\u547d\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u591a\u3002\n\u7c73\u52d2\u89e3\u91ca\u8bf4\uff0c\u5f53\u65f6\u4eba\u4eec\u7684\u4e3b\u8981\u53cd\u5e94\u662f\u5173\u6ce8\u963f\u7247\u7c7b\u836f\u7269\u7684\u6d41\u884c\uff0c\u4f46\u8fd9\u751a\u81f3\u6ca1\u6709\u89e3\u51b3\u4e0e\u7edd\u671b\u6b7b\u4ea1\u76f8\u5173\u7684\u6240\u6709\u5fc3\u7406\u5065\u5eb7\u95ee\u9898\u3002\n\u6839\u636e\u798f\u7949\u4fe1\u6258\u7684\u8bf4\u6cd5\uff0c\u8bb8\u591a\u56e0\u7d20\u90fd\u53ef\u80fd\u5bfc\u81f4\u7edd\u671b\u6b7b\u4ea1\uff0c\u5305\u62ec\u5b64\u72ec\u3001\u5b64\u7acb\u3001\u7f3a\u4e4f\u5f52\u5c5e\u611f\u3001\u83b7\u5f97\u8d1f\u62c5\u5f97\u8d77\u7684\u533b\u7597\u4fdd\u5065\u7684\u673a\u4f1a\u6709\u9650\u3001\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u3001\u521b\u4f24\u548c\u7ecf\u6d4e\u62c5\u5fe7\uff0c\u6bd4\u5982\u7f3a\u4e4f\u4f4f\u623f\u548c\u98df\u7269\u3002\n\u8fd9\u9879\u65b0\u7684\u7814\u7a76\u5c062018\u5e74\u7edd\u671b\u6b7b\u4ea1\u4eba\u6570(\u8fd118.2\u4e07\u4eba)\u7684\u4fe1\u606f\u4e0e2020\u5e74\u81f32029\u5e74\u9884\u8ba1\u7684\u5931\u4e1a\u7387\u6c34\u5e73\u4ee5\u53ca\u7ecf\u6d4e\u5efa\u6a21\u7ed3\u5408\u8d77\u6765\u3002\n\u7ed3\u679c\uff1a\u7531\u4e8e\u590d\u82cf\u8fc5\u901f\uff0c\u5bf9\u7edd\u671b\u6b7b\u4ea1\u7684\u5f71\u54cd\u6700\u5c0f\uff0c\u65b0\u51a0\u80ba\u708e\u7684\u5927\u6d41\u884c\u5c06\u5bfc\u81f4\u8fd128,000\u4eba\u989d\u5916\u7684\u7edd\u671b\u6b7b\u4ea1\u3002\n\u4f46\u7814\u7a76\u4f30\u8ba1\uff0c\u975e\u5e38\u7f13\u6162\u7684\u590d\u82cf\u52a0\u4e0a\u5931\u4e1a\u7684\u6700\u5927\u5f71\u54cd\u53ef\u80fd\u5bfc\u81f4\u8d85\u8fc715\u4e07\u4eba\u6b7b\u4e8e\u7edd\u671b\u3002\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u6700\u6709\u53ef\u80fd\u7684\u662f\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u989d\u5916\u67097.5\u4e07\u4eba\u6b7b\u4ea1\u3002\n\u4f8b\u5982\uff0c\u5728\u793e\u4f1a\u89c4\u8303\u88ab\u6401\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e9b\u4eba\u6b63\u5728\u505a\u4ed6\u4eec\u901a\u5e38\u4e0d\u4f1a\u505a\u7684\u4e8b\u60c5-\u6bd4\u5982\u5728\u4e2d\u5348\u559d\u9152\u3002\u5982\u679c\u8fd9\u5728\u793e\u4f1a\u5b64\u7acb\u671f\u95f4\u6210\u4e3a\u4e00\u79cd\u4e60\u60ef\uff0c\u53ef\u80fd\u5f88\u96be\u6253\u7834\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9157\u9152\uff0c\u53ef\u80fd\u4ee5\u540e\u8fd8\u4f1a\u51fa\u73b0\u5065\u5eb7\u95ee\u9898\u3002\n\u7c73\u52d2\u6307\u51fa\uff0c\u8fd9\u9879\u7814\u7a76\u662f\u4e00\u9879\u9884\u6d4b\uff0c\u9884\u6d4b\u53ef\u80fd\u4e0d\u7cbe\u786e\u3002\u6b64\u5916\uff0c\u5f53\u4eba\u4eec\u5f00\u59cb\u89e3\u51b3\u95ee\u9898\u65f6\uff0c\u4f30\u8ba1\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5e2e\u52a9\u9632\u6b62\u5176\u4e2d\u4e00\u4e9b\u6b7b\u4ea1\u7684\u6700\u5927\u65b9\u6cd5\u662f\u8ba9\u4eba\u4eec\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u3002\n\u4eba\u4eec\u5fc5\u987b\u5de5\u4f5c\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9\u4eba\u4eec\u4e0e\u5176\u4ed6\u4eba\u8054\u7cfb\u8d77\u6765\uff0c\u7c73\u52d2\u8bf4\u3002\n\u4ed6\u8bf4\uff0c\u6539\u5584\u83b7\u5f97\u533b\u7597\u4fdd\u5065\u7684\u673a\u4f1a\uff0c\u5305\u62ec\u7cbe\u795e\u536b\u751f\u4fdd\u5065\uff0c\u4e5f\u662f\u5173\u952e\u3002\u7136\u540e\uff0c\u91cd\u8981\u7684\u662f\u6574\u5408\u8fd9\u4e9b\u62a4\u7406\uff0c\u8fd9\u6837\u6240\u6709\u7684\u63d0\u4f9b\u8005\u90fd\u77e5\u9053\u4f60\u7684\u8eab\u5fc3\u5065\u5eb7\u3002\u800c\u4e14\uff0c\u62a4\u7406\u7684\u969c\u788d-\u8f6c\u8bca\u3001\u4e8b\u5148\u6388\u6743\u548c\u5176\u4ed6\u884c\u653f\u969c\u788d-\u8ba9\u60a3\u8005\u548c\u63d0\u4f9b\u8005\u90fd\u611f\u5230\u6cae\u4e27\u3002\n\u7f8e\u56fd\u7cbe\u795e\u75c5\u5b66\u534f\u4f1a\u4e0a\u763e\u7cbe\u795e\u75c5\u5b66\u7406\u4e8b\u4f1a\u526f\u4e3b\u5e2d\u57c3\u5229\u00b7\u5965\u6069\u535a\u58eb\u79f0\u6b7b\u4ea1\u9884\u6d4b\u4ee4\u4eba\u9707\u60ca\uff0c\u4f46\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u4ed6\u8bf4\uff1a\u6211\u5728\u5b9e\u8df5\u4e2d\u770b\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u7684\u540c\u4e8b\u4eec\u4e5f\u4e00\u76f4\u5728\u8c08\u8bba\u8fd9\u4e00\u70b9\u3002\n\u5965\u6069\u8bf4\uff0c\u793e\u4f1a\u5b64\u7acb\u5bf9\u8bb8\u591a\u60a3\u6709\u6291\u90c1\u3001\u7126\u8651\u548c\u6210\u763e\u7684\u8106\u5f31\u60a3\u8005\u6709\u66f4\u591a\u7684\u540e\u679c\u3002\n\u4ed6\u8bf4\uff0c\u4e0a\u763e\u60a3\u8005\u6b63\u5728\u590d\u53d1\uff0c\u8bb8\u591a\u6ca1\u6709\u5438\u6bd2\u6216\u9157\u9152\u95ee\u9898\u7684\u60a3\u8005\u73b0\u5728\u996e\u9152\u66f4\u591a\uff0c\u6709\u65f6\u4ece\u4e0b\u53484\u70b9\u62165\u70b9\u5f00\u59cb\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u76f4\u5230\u7761\u7740\u3002\n\u4ed6\u8bf4\uff0c\u6700\u8fd1\u653e\u677e\u5bf9\u4f7f\u7528\u8fdc\u7a0b\u533b\u7597\u8fdb\u884c\u7cbe\u795e\u79d1\u5c31\u8bca\u7684\u9650\u5236\u7684\u4e3e\u63aa\u6709\u6240\u5e2e\u52a9\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u60a3\u8005\u6765\u8bf4\uff0c\u8fdc\u7a0b\u533b\u7597\u8bbf\u95ee\u4e0d\u5982\u627f\u8bfa\u6bcf\u5468\u53bb\u529e\u516c\u5ba4\u66f4\u6709\u5e2e\u52a9\u3002\u5965\u6069\u8fd8\u62c5\u5fc3\u8fdc\u7a0b\u533b\u7597\u9650\u5236\u53ef\u80fd\u4f1a\u5377\u571f\u91cd\u6765\u3002\n\u4e0d\u8981\u90a3\u4e48\u62c5\u5fc3\u751f\u4ea7\u7387\u3002\u8981\u61d2\u60f0\u3002\u4f60\u4e0d\u5fc5\u5b66\u53e6\u4e00\u95e8\u8bed\u8a00\u3002\u4f46\u4f60\u5fc5\u987b\u5141\u8bb8\u81ea\u5df1\u611f\u53d7\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u5965\u6069\u8bf4\u3002\u5982\u679c\u4f60\u8bd5\u56fe\u538b\u6291\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u6216\u8005\u7528\u836f\u7269\u6216\u9152\u7cbe\u4f7f\u5b83\u4eec\u9ebb\u6728\uff0c\u5b83\u4f1a\u963b\u6b62\u4f60\u5904\u7406\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u4f7f\u4f60\u65e0\u6cd5\u514b\u670d\u5b83\u4eec\u3002\n\u4f60\u5fc5\u987b\u81ea\u5728\u5730\u8c08\u8bba\u4f60\u7684\u611f\u53d7\u3002\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u8c08\u8bba\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u4ed6\u8bf4\u3002\u95ee\u95ee\u5bb6\u4eba\u6216\u670b\u53cb\uff0c\u4f60\u8fd8\u597d\u5417\uff1f&#34\uff1b\u6211\u4e0d\u77e5\u9053\u6709\u8c01\u56e0\u6b64\u800c\u6ca1\u6709\u53d8\u5316\uff0c\u6240\u4ee5\u5982\u679c\u7b54\u6848\u603b\u662f\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u90a3\u53ef\u80fd\u5c31\u4e0d\u662f\u4e86\u3002\n\u8fd9\u573a\u6d41\u884c\u75c5\u7ed9\u4e86\u793e\u4f1a\u4e00\u4e2a\u53cd\u601d\u4ec0\u4e48\u7ba1\u7528\uff0c\u4ec0\u4e48\u4e0d\u7ba1\u7528\u7684\u673a\u4f1a\uff0c\u7c73\u52d2\u5e0c\u671b\u5176\u4e2d\u4e00\u4e2a\u7ed3\u679c\u662f\u91cd\u65b0\u8bbe\u8ba1\u7cbe\u795e\u536b\u751f\u4fdd\u5065\u7cfb\u7edf\u3002\n\u8fd9\u4efd\u62a5\u544a-\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u8870\u9000\u671f\u95f4\u7edd\u671b\u6b7b\u4ea1\u7684\u9884\u6d4b-\u53d1\u8868\u4e8e5\u67088\u65e5\uff0c\u7531\u798f\u7949\u4fe1\u6258(Well Being Trust)\u548c\u603b\u90e8\u4f4d\u4e8e\u534e\u76db\u987f\u7279\u533a\u7684\u7f57\u4f2f\u7279\u00b7\u683c\u96f7\u5384\u59c6\u5bb6\u5ead\u533b\u5b66\u548c\u521d\u7ea7\u4fdd\u5065\u653f\u7b56\u7814\u7a76\u4e2d\u5fc3(Robert Graham Center For Policy Studies In Family Medicine And Primary Care)\u8054\u5408\u53d1\u5e03\u3002\n\u5982\u679c\u4f60\u5904\u4e8e\u5371\u673a\u4e2d\uff0c\u8bf7\u62e8\u6253\u514d\u8d39\u7684\u56fd\u5bb6\u9884\u9632\u81ea\u6740\u751f\u547d\u7ebf\u7535\u8bdd\uff1a1-800-273-Talk(8255)\uff0c\u8be5\u70ed\u7ebf\u4e00\u54687\u5929\uff0c\u6bcf\u592924\u5c0f\u65f6\u90fd\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\uff0c\u5982\u679c\u4f60\u5904\u4e8e\u5371\u673a\u4e2d\uff0c\u8bf7\u62e8\u6253\u514d\u8d39\u7684\u5168\u56fd\u9884\u9632\u81ea\u6740\u751f\u547d\u7ebf\u7535\u8bdd\uff1a1-800-273-Talk(8255)\u3002\u6240\u6709\u7535\u8bdd\u90fd\u662f\u4fdd\u5bc6\u7684\u3002\n\u6211\u4eec\u7684\u707e\u96be\u6c42\u6551\u70ed\u7ebf\u7535\u8bdd\u662f1-800-985-5990\uff0c\u8fd9\u4e5f\u662f\u4fdd\u5bc6\u7684\uff0c\u514d\u8d39\u7684\uff0c\u4e00\u54687\u5929\uff0c\u6bcf\u592924\u5c0f\u65f6\u90fd\u53ef\u4ee5\u63a5\u542c\u3002\u4eba\u4eec\u8fd8\u53ef\u4ee5\u5411TalkWithus\u53d1\u9001\u77ed\u4fe1\u81f366746\uff0c\u4ee5\u4e0e\u8bad\u7ec3\u6709\u7d20\u7684\u5371\u673a\u8f85\u5bfc\u5458\u8054\u7cfb\u3002", "note_en": "COVID-19 has directly claimed tens of thousands of U.S. lives, but conditions stemming from the novel  coronavirus \u2014 rampant unemployment, isolation and an uncertain future \u2014 could lead to 75,000 deaths from drug or alcohol abuse and   suicide, new research suggests.\n  Deaths from these causes are known as &#34;deaths of despair.&#34; And the COVID-19 pandemic may be accelerating conditions that lead to such deaths.\n &#34;Deaths of despair are tied to multiple factors, like   unemployment,   fear and dread, and isolation. Prior to the COVID-19 pandemic, there were already an unprecedented number of deaths of despair. We wanted to estimate how this pandemic would change that number moving forward,&#34; said one of the study&#39;s authors, Benjamin Miller. He&#39;s chief strategy officer for the  Well Being Trust in Oakland, Calif.\n  Prior to the COVID-19 pandemic, the Well Being Trust reported that more lives had been lost to deaths of despair in 2017 than ever before.\n &#34;The primary response at the time was to look at the   opioid epidemic, but that didn&#39;t even come close to cracking all of the issues of mental health related to deaths of despair,&#34; Miller explained.\n Many things can contribute to deaths of despair, including loneliness, isolation, a lack of belonging, limited access to affordable health care, systemic racism, trauma and financial concerns, like a lack of housing and food, according to the Well Being Trust.\n   The new study combined information on   deaths of despair in 2018 (nearly 182,000) with projected unemployment levels from 2020 to 2029, and economic modeling.\n  The upshot: With a rapid recovery and the smallest impact on deaths of despair, the COVID-19 pandemic would lead to nearly 28,000 additional deaths of despair.\n But a very slow recovery combined with the greatest   impact of unemployment could result in more than 150,000 deaths of despair, the study estimates. Researchers think somewhere in the middle is most likely, with 75,000 additional deaths.\n  For example, with social norms on the back burner, some people are doing things they wouldn&#39;t normally \u2014 like drinking in the middle of the day. If that becomes a habit during social isolation, it may be hard to break and could lead to alcohol abuse and possibly later health problems.\n Miller pointed out that the study is a projection, and projections can be imprecise. Plus, estimates can change for the better when people start tackling the problems.\n The researchers said the biggest way to help prevent some of these deaths is to get people back to work.\n &#34;People have to be working and we have to get people connected to other people,&#34; Miller said.\n  Improving access to health care, including mental health care, is also key, he said. Then, it&#39;s important to integrate that care, so all providers are aware of both your physical and mental health. And, roadblocks to care \u2014 referrals, prior authorizations and other administrative hurdles \u2014 frustrate both patients and providers.\n Dr. Elie Aoun, vice chairman of the American Psychiatric Association&#39;s Council on Addiction Psychiatry, called the death projections shocking but not surprising.\n &#34;I&#39;ve been seeing this in practices and my colleagues have been talking about it, too,&#34; he said.\n Aoun said social isolation has more consequences for the many vulnerable patients who suffer from depression, anxiety and addiction.\n &#34;Addiction patients are relapsing, and a lot of patients who don&#39;t have drug use or alcohol problems are drinking more now, sometimes every day from 4 or 5 p.m., and they don&#39;t stop until they sleep,&#34; he said.\n Recent moves to ease restrictions on use of telehealth for psychiatry visits has helped, he said. But, for some patients, a telehealth visit isn&#39;t as helpful as having to make the commitment to go to the office every week. Aoun is also concerned that telehealth restrictions may return.\n   &#34;Don&#39;t worry so much about productivity. Be lazy. You don&#39;t have to learn another language. But you do have to give yourself permission to feel your emotions,&#34; Aoun said. &#34;If you try to suppress your emotions or numb them with drugs or alcohol, it prevents you from processing your emotions and being able to move past them.&#34;\n  &#34;You have to be comfortable talking about how you feel. We have to be able to talk about the hard stuff,&#34; he said. &#34;Ask family or friends, &#39;Are you OK?&#39; I don&#39;t know anyone who hasn&#39;t had some sort of change because of this, so if the answer is always that everything is fine, maybe it&#39;s not.&#34;\n The pandemic is giving society an opportunity to reflect on what works and what doesn&#39;t. Miller hopes one result will be a redesigned mental health care system.\n The report \u2014\u00a0  Projected Deaths of Despair During the Coronavirus Recession\u00a0\u2014 was published May 8 by the Well Being Trust, and the Washington, D.C.-based Robert Graham Center for Policy Studies in Family Medicine and Primary Care.\n  For immediate help if you are in a crisis, call the toll-free National Suicide Prevention Lifeline at\u00a0  1-800-273-TALK (8255) , which is available 24 hours a day, 7 days a week. All calls are confidential.\n The\u00a0  Disaster Distress Helpline \u00a0at  \u00a01-800-985-5990, \u00a0is also confidential, free and available 24 hours a day, 7 days a week. People can also text\u00a0  TalkWithUs to 66746 \u00a0to connect with a trained crisis counselor.", "posttime": "2020-05-26 14:56:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u53ef\u80fd,pandemic", "title": "\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u53ef\u80fd\u5bfc\u81f47.5\u4e07\u4eba\u201c\u7edd\u671b\u800c\u6b7b\u201d", "title_en": "Coronavirus pandemic may lead to 75,000 \u201cdeaths of despair\u201d", "transed": 1, "url": "https://www.cbsnews.com/news/coronavirus-deaths-suicides-drugs-alcohol-pandemic-75000/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u53ef\u80fd", "pandemic"]}, {"category": "", "categoryclass": "", "imagename": "f5948cf88d0f351cc7d0d496a55af6a1.jpg", "infoid": 1003781, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u533b\u9662\u5728\u83b7\u5f97\u7ef4\u4fee\u533b\u7597\u8bbe\u5907\u7684\u670d\u52a1\u4fe1\u606f\u65b9\u9762\u9047\u5230\u4e86\u56f0\u96be-\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u65b0\u51a0\u80ba\u708e\u7684\u95ee\u9898\u3002\u6211\u4eec\u4ece\u751f\u7269\u533b\u5b66\u6280\u672f\u4eba\u5458(\u7b80\u79f0\u751f\u7269\u751f\u7269)\u90a3\u91cc\u542c\u5230\u4e86\u65e0\u6570\u5173\u4e8e\u533b\u7597\u8bbe\u5907\u5236\u9020\u5546\u5982\u4f55\u901a\u8fc7\u9650\u5236\u83b7\u53d6\u4fee\u590d\u4fe1\u606f\u6765\u589e\u52a0\u5de5\u4f5c\u96be\u5ea6\u7684\u6545\u4e8b\u3002\n\u591a\u4e8f\u4e86\u65c5\u884c\u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u95ee\u9898\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u4e25\u91cd\u3002\u5236\u9020\u5546\u670d\u52a1\u4ee3\u8868\u8ddf\u4e0d\u4e0a\u65e5\u76ca\u589e\u957f\u7684\u5173\u952e\u533b\u9662\u8bbe\u5907\u7ef4\u4fee\u9700\u6c42\u3002\u5373\u4f7f\u5b83\u4eec\u53ef\u4ee5\uff0c\u5b83\u4eec\u4e5f\u4e0d\u80fd\u50cf\u5df2\u7ecf\u5728\u524d\u7ebf\u7684\u751f\u7269\u90a3\u6837\u5feb\u901f\u53cd\u5e94\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u751f\u7269\u7fa4\u82b1\u8d39\u4e86\u65e0\u6570\u4e2a\u5c0f\u65f6\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22\u5b83\u4eec\u9700\u8981\u7684\u5173\u952e\u4fee\u590d\u4fe1\u606f\uff0c\u4ee5\u4fbf\u8fdb\u884c\u4fee\u590d\u6216\u8fdb\u884c\u9884\u9632\u6027\u7ef4\u62a4\u3002\u8fd9\u4e0d\u662f\u8fd0\u884c\u536b\u751f\u7cfb\u7edf\u7684\u597d\u65b9\u6cd5\uff01\n\u6240\u4ee5\u6211\u4eec\u8981\u628a\u5b83\u4fee\u597d\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u4e2a\u6708\u91cc\uff0ciFixit\u5df2\u7ecf\u5c06\u5176\u4e00\u534a\u7684\u5458\u5de5\u7528\u4e8e\u5efa\u7acb\u4e16\u754c\u4e0a\u6700\u5168\u9762\u7684\u533b\u7597\u8bbe\u5907\u670d\u52a1\u6570\u636e\u5e93\u3002\u5b83\u662f\u4e00\u4e2a\u96c6\u4e2d\u7684\u3001\u7531\u591a\u4e2a\u5236\u9020\u5546\u63d0\u4f9b\u7684\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u6570\u5343\u53f0\u8bbe\u5907\u7684\u7528\u6237\u624b\u518c\u548c\u7ef4\u4fee\u6587\u6863\u3002\u6211\u4eec\u521a\u521a\u5728\u7f51\u4e0a\u53d1\u5e03\u4e86\u6765\u81ea\u6570\u767e\u5bb6\u5236\u9020\u5546\u768413000\u591a\u4efd\u624b\u518c\uff0c\u53ef\u4ee5\u7acb\u5373\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u533b\u7597\u5668\u68b0\u7c7b\u522b\u4e2d\u627e\u5230\u5b83\u4eec\u3002\n\u8fd9\u7edd\u5bf9\u662f\u4e00\u9879\u5de8\u5927\u7684\u4e8b\u4e1a-\u6211\u4eec\u5f88\u5e78\u8fd0\u5730\u5f97\u5230\u4e86\u6765\u81ea\u5168\u56fd\u5404\u5730\u7684200\u591a\u540d\u56fe\u4e66\u7ba1\u7406\u5458\u548c\u6863\u6848\u5458\u7684\u5e2e\u52a9\u548c\u652f\u6301\u3002\u6765\u81ea\u5927\u5b66\u548c\u516c\u5171\u56fe\u4e66\u9986\u3001\u7814\u7a76\u673a\u6784\u3001\u4fdd\u9669\u548c\u8f6f\u4ef6\u516c\u53f8\u7684\u6863\u6848\u7ba1\u7406\u5458\uff0c\u5f53\u7136\u8fd8\u6709\u751f\u7269\u7fa4\u672c\u8eab-\u90fd\u8d21\u732e\u4e86\u5b9d\u8d35\u7684\u65f6\u95f4\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u4ed6\u4eec\u82b1\u8d39\u4e86\u6570\u5343\u5c0f\u65f6\u5c06\u6210\u5806\u7684\u6587\u6863\u7ec4\u7ec7\u6210\u4e00\u4e2a\u53ef\u5bfc\u822a\u3001\u53ef\u641c\u7d22\u7684\u7cfb\u7edf\u3002\n\u4e00\u4e9b\u533b\u7597\u5236\u9020\u5546\uff0c\u5982\u8fc8\u745e\uff0c\u5141\u8bb8\u751f\u7269\u6807\u5fd7\u7269\u81ea\u7531\u8bbf\u95ee\u4ed6\u4eec\u7684\u624b\u518c\u3002\u65b0\u51a0\u80ba\u708e\u7206\u53d1\u540e\uff0c\u53c8\u516c\u5e03\u4e86\u51e0\u4efd\u7cbe\u9009\u6587\u4ef6\u3002\u4f46\u5bf9\u4e8e\u4ed6\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\uff0c\u751f\u7269\u7fa4\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u4f9d\u8d56\u4e8e\u4e00\u5957\u7834\u70c2\u7684\u7f51\u7edc\u8d44\u6e90\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u5176\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u662f\u5f17\u5170\u514b\u533b\u9662\u5de5\u4f5c\u5ba4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f4d\u4e8e\u5766\u6851\u5c3c\u4e9a\u7684\u7f51\u7ad9\uff0c\u62e5\u6709\u6570\u767e\u4efd\u533b\u7597\u8bbe\u5907\u624b\u518c-\u8fd9\u662f\u975e\u5b98\u65b9\u7684\u751f\u7269\u533b\u5b66\u5723\u7ecf\u3002\n\u6211\u4eec\u4e4b\u6240\u4ee5\u77e5\u9053\uff0c\u662f\u56e0\u4e3a\u5728\u8fc7\u53bb\u7684\u4e24\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u4e0e\u5c3d\u53ef\u80fd\u591a\u7684\u751f\u7269\u3001\u62a4\u58eb\u548c\u533b\u751f\u8fdb\u884c\u4e86\u4ea4\u8c08\uff0c\u4ee5\u4e86\u89e3\u6211\u4eec\u5982\u4f55\u652f\u6301\u4ed6\u4eec\u7684\u73b0\u573a\u7ef4\u4fee\u3002\u6211\u4eec\u5e0c\u671b\u6d88\u9664\u5355\u4e00\u6545\u969c\u70b9\uff0c\u4f7f\u4efb\u4f55\u4eba\u90fd\u66f4\u5bb9\u6613\u627e\u5230\u6b63\u786e\u7684\u624b\u518c\uff0c\u7279\u522b\u662f\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u4f17\u5305\u533b\u9662\u8bbe\u5907\u7684\u7ef4\u4fee\u4fe1\u606f\u65f6\uff0c\u6211\u4eec\u4f18\u5148\u8003\u8651\u547c\u5438\u673a\u6587\u6863\u3001\u9ebb\u9189\u7cfb\u7edf\u548c\u547c\u5438\u5206\u6790\u4eea-\u8fd9\u4e9b\u8bbe\u5907\u5e7f\u6cdb\u7528\u4e8e\u652f\u6301\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u3002\u968f\u7740\u6765\u81ea\u751f\u7269\u7fa4\u548c\u793e\u533a\u6210\u5458\u7684\u6587\u6863\u8702\u62e5\u800c\u81f3\uff0c\u4ea7\u54c1\u6e05\u5355\u5448\u6307\u6570\u7ea7\u589e\u957f\u3002\u4f46\u6211\u4eec\u6536\u85cf\u7684\u4e00\u4e9b\u6587\u6863\u5df2\u7ecf\u53ef\u4ee5\u83b7\u5f97\u3002\u5176\u4ed6\u4eba\u76f4\u5230\u73b0\u5728\u624d\u88ab\u516c\u5f00\u53d1\u5e03\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u4e2a\u8d44\u6e90\u4e0d\u4ec5\u590d\u5236\u4e86\u73b0\u6709\u7684\u8d44\u6e90\uff0c\u800c\u4e14\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u6539\u8fdb\u4e86\u53ef\u8bbf\u95ee\u6027\u3002\n\u6211\u4eec\u4e3a\u6570\u4ee5\u5343\u8ba1\u7684\u533b\u7597\u8bbe\u5907\u5efa\u7acb\u4e86\u4e00\u4e2a\u5355\u4e00\u7684\u3001\u5f3a\u5927\u7684\u3001\u5168\u9762\u7684\u7ef4\u4fee\u4fe1\u606f\u5b9d\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u591a\u5236\u9020\u5546\u7684\u96c6\u5408\uff0c\u5c06\u5728iFixit.com\u4e0a\u5c55\u793a\u3002\u9700\u8981\u975e\u5e38\u6e05\u695a\u7684\u662f\uff1aiFixit\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u4e0d\u8d5a\u94b1\u3002\u6211\u4eec\u514d\u8d39\u4e3a\u533b\u7597\u754c\u63d0\u4f9b\u6258\u7ba1\u548c\u7ba1\u7406\u670d\u52a1\uff0c\u4e0d\u542b\u5e7f\u544a\u3002\u6211\u4eec\u6b22\u8fce\u5236\u9020\u5546\u52a0\u5165\u6211\u4eec\uff0c\u4e3a\u751f\u7269\u533b\u5b66\u793e\u533a\u63d0\u4f9b\u6700\u65b0\u7684\u4e2d\u592e\u5b58\u50a8\u5e93\u3002\n\u6211\u4eec\u4e5f\u6b22\u8fce\u4e16\u754c\u5404\u5730\u7684\u751f\u7269\u7fa4\u52a0\u5165iFixit\u7684\u7ef4\u4fee\u793e\u533a\u3002\u6ca1\u6709\u6280\u672f\u4eba\u5458\u662f\u5b64\u5c9b\uff0c\u6211\u4eec\u5e0c\u671b\u4fc3\u8fdb\u77e5\u8bc6\u4ea4\u6d41\u548c\u6545\u969c\u6392\u9664\u3002\u6211\u4eec\u7684\u7ef4\u57fa\u7ec4\u7ec7\u7cfb\u7edf\u548c\u534f\u4f5c\u6027\u95ee\u7b54\u8bba\u575b\u5c06\u786e\u4fdd\u8fd9\u4e9b\u4fe1\u606f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d8\u5f97\u66f4\u52a0\u6709\u7528\u3002\u5982\u679c\u5728\u6211\u4eec\u7684\u5e2e\u52a9\u4e0b\uff0c\u7531\u751f\u7269\u7fa4\u534f\u540c\u4e3b\u6301\uff0c\u8fd9\u4e2a\u533b\u7597\u50a8\u5b58\u5e93\u662f\u6700\u6709\u7528\u7684\u3002\n\u4e0eiFixit.com\u4e0a\u7684\u6240\u6709\u4fee\u590d\u6307\u5357\u4e00\u6837\uff0c\u6211\u4eec\u6b22\u8fce\u793e\u533a\u8d21\u732e\u3002\u5982\u679c\u60a8\u6709\u4e0d\u5728\u6211\u4eec\u6536\u85cf\u4e2d\u7684\u7ef4\u4fee\u4fe1\u606f\uff0c\u8bf7\u4e0e\u6211\u4eec\u5206\u4eab\uff01\n\u6211\u4eec\u5bf9\u8fd9\u4e9b\u5fd7\u613f\u8005\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u7684\u5e2e\u52a9\u8868\u793a\u8bda\u631a\u7684\u611f\u8c22\uff1a", "note_en": "Hospitals are having trouble getting service information to fix medical equipment\u2014and it\u2019s  not just a COVID-19 problem. We\u2019ve heard countless stories from biomedical technicians (biomeds, for short) about how medical device manufacturers make their jobs more difficult by restricting access to repair information.\n Thanks to travel limitations, the problem is bigger than ever. Manufacturer service reps can\u2019t keep pace with the growing demand for repair of critical hospital equipment. Even if they could, they can\u2019t respond as quickly as the biomeds, already at the front lines. Unfortunately, biomeds spend innumerable hours scouring the internet, searching for crucial repair information they need to make a fix or perform preventative maintenance. This is not a good way to run a health system!\n So we\u2019re fixing it. For the last two months, iFixit has pivoted half of its staff toward building the world\u2019s most comprehensive medical equipment service database. It\u2019s a central, multi-manufacturer library of user manuals and repair documentation for thousands of devices. We just posted more than 13,000 manuals from hundreds of manufacturers, online and available for use immediately. You can find them in our  Medical Device category.\n  This has been an absolutely massive undertaking\u2014and we were fortunate to have the help and support of over 200 librarians and archivists from across the country. Archivists from university and public libraries, research institutes, insurance and software companies, and of course biomeds themselves\u2014all donated their valuable time. Collectively, they\u2019ve contributed thousands of hours organizing piles of documents into a navigable, searchable system.\n   Some medical manufacturers, like  Mindray, allow biomeds to access their manuals freely. A few more released select documents after the outbreak of COVID-19. But for their day-to-day work, biomeds have long relied on a rag-tag set of web resources to get the job done. Among the most popular is  Frank\u2019s Hospital Workshop, a Tanzania-based site that hosts hundreds of medical device manuals\u2014it\u2019s the unofficial biomed bible.\n We know because we\u2019ve spent the past two months talking to as many biomeds, nurses, and doctors as possible to understand how we can support their field repairs. We wanted to eliminate a single point of failure and make it even easier for anyone to find the right manual, especially in an emergency.\n  When we began  crowdsourcing repair information for hospital equipment, we prioritized ventilator documentation,  anesthesia systems, and respiratory analyzers\u2014devices widely used to support COVID-19 patients. The list of products has grown exponentially as the documents from biomeds and community members poured in.\u00a0 Some of the documents in our collection were already available. Others were not publicly posted until now. It was important to us that this resource didn\u2019t just duplicate existing resources, but improved accessibility in a meaningful way.\n   We have built a single, robust, comprehensive treasure trove of repair information for thousands of medical devices. It\u2019s a multi-manufacturer collection that will live  on iFixit.com. To be very clear: iFixit does not make money on this project. We are providing hosting and curation free of charge, and free of advertising, to the medical community. We welcome manufacturers to join us and contribute toward an up-to-date central repository for the biomedical community.\n We also welcome biomeds around the world to join  iFixit\u2019s repair community. No technician is an island, and we hope to facilitate an exchange of knowledge and troubleshooting. Our wiki organization system and  collaborative Q&amp;A forum will make sure that this information gets more useful over time. This medical repository is most useful if it is collaboratively moderated by biomeds, with our assistance.\n As with all of the repair guides on iFixit.com,  we welcome community contributions. If you have repair information that isn\u2019t in our collection yet, please share it with us!\n  We\u2019d like to offer our sincere thanks to these volunteers for their help with this project:", "posttime": "2020-05-26 14:54:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "database,\u6570\u636e\u5e93,\u8bbe\u5907,puts,\u4fe1\u606f", "title": "iFixit\u5c06\u4e16\u754c\u4e0a\u6700\u5927\u7684\u533b\u7597\u8bbe\u5907\u7ef4\u4fee\u6570\u636e\u5e93\u4e0a\u7ebf", "title_en": "iFixit puts world's largest medical equipment repair database online", "transed": 1, "url": "https://www.ifixit.com/News/41440/introducing-the-worlds-largest-medical-repair-database-free-for-everyone", "via": "", "real_tags": ["database", "\u6570\u636e\u5e93", "\u8bbe\u5907", "puts", "\u4fe1\u606f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003780, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eceSublime Merge\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u8c08\u5230\u4e86\u8f6f\u4ef6\u201c\u771f\u6b63\u505a\u5230\u6b63\u786e\u201d\u7684\u7b80\u5355\u4e50\u8da3\u3002\u5bf9\u6211\u4eec\u7684\u56e2\u961f\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u8d85\u8d8a\u6700\u4f4e\u9650\u5ea6\uff0c\u8ba9\u8f6f\u4ef6\u5c3d\u53ef\u80fd\u597d\uff0c\u5e76\u5173\u6ce8\u7ec6\u8282\u3002\nSublime Merge\u63a8\u51fa\u5df2\u7ecf\u5feb\u4e24\u5e74\u4e86\uff0c\u6211\u4eec\u7684\u5173\u6ce8\u70b9\u6ca1\u6709\u6539\u53d8\u3002\u6211\u4eec\u6700\u65b0\u66f4\u65b0\u7684\u76ee\u6807\u662f\u5728\u7075\u6d3b\u6027\u548c\u5b9a\u5236\u5316\u65b9\u9762\u201c\u505a\u5230\u771f\u6b63\u6b63\u786e\u201d\u3002\n\u6211\u4eec\u7684\u793e\u533a\u4ee5\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528Sublime Merge\uff1b\u4ece\u5728\u5e73\u677f\u7535\u8111\u4e0a\u67e5\u770b\u63d0\u4ea4\uff0c\u5230\u5728\u53f0\u5f0f\u8ba1\u7b97\u673a\u4e0a\u7f16\u5199\u6570\u5343\u884c\u4ee3\u7801\u3002\n\u6700\u65b0\u7248\u672c\u7684Sublime Merge\u5145\u6ee1\u4e86\u5347\u7ea7\uff0c\u4f46\u6211\u4eec\u60f3\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u6211\u4eec\u4e3a\u60a8\u7684\u5de5\u4f5c\u65b9\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7075\u6d3b\u6027\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u8fd9\u7bc7\u5e16\u5b50\u7684\u5e95\u90e8\u5305\u542b\u4e86\u5b8c\u6574\u7684\u66f4\u6539\u5217\u8868(\u5267\u900f\uff1a\u6709\u5f88\u591a\u66f4\u6539)\u3002\n\u5347\u7ea7\u63d0\u4ea4UI-\u5173\u6ce8\u5347\u7ea7\u63d0\u4ea4UI\u7684\u91cd\u8981\u5185\u5bb9\u3002\n\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u77e5\u9053\u7a97\u53e3\u53ef\u80fd\u5f88\u9ebb\u70e6\u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u60a8\u63d0\u4f9b\u4e13\u6ce8\u4e8e\u5de5\u4f5c\u800c\u4e0d\u662f\u7ba1\u7406\u7a97\u53e3\u6240\u9700\u7684\u5de5\u5177\u3002\n\u6211\u4eec\u91cd\u65b0\u8bbe\u8ba1\u4e86\u63d0\u4ea4UI\uff0c\u4ee5\u652f\u6301\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u63d0\u4ea4\u6d88\u606f\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u7528\u6587\u4ef6\u9009\u9879\u5361\u5728\u5404\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5207\u6362\u3002\u60a8\u8fd8\u4f1a\u6ce8\u610f\u5230\u65b0\u7684\u6587\u4ef6\u7edf\u8ba1\u4fe1\u606f\u3002\n\u5982\u4eca\u7684\u663e\u793a\u5668\u79cd\u7c7b\u7e41\u591a\uff0c\u62e5\u6709\u9002\u5408\u60a8\u7684\u7075\u6d3b\u5e03\u5c40\u975e\u5e38\u91cd\u8981\u3002\u4ece\u4eca\u5929\u5f00\u59cb\uff0c\u60a8\u53ea\u9700\u9009\u62e9\u9002\u5408\u60a8\u8bbe\u7f6e\u7684\u5e03\u5c40\u5373\u53ef\u3002\u65e0\u8bba\u60a8\u4f7f\u7528\u7684\u662f4K\u53f0\u5f0f\u673a\u5c4f\u5e55\u3001\u5de5\u4f5c\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u751a\u81f3\u662f\u5e73\u677f\u7535\u8111\uff0c\u6211\u4eec\u90fd\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\u3002\n\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\u652f\u6301Sublime Merge\u4e2d\u7684\u786c\u4ef6\u52a0\u901f\u3002\u5728OpenGL\u7684\u652f\u6301\u4e0b\uff0c\u8fd9\u5c06\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u63d0\u4f9b\u663e\u8457\u7684\u6e32\u67d3\u6027\u80fd\u6539\u8fdb\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5728MacOS\u4e0a\u5904\u4e8e\u542f\u7528\u72b6\u6001\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u9996\u9009\u9879\u7684\u9ad8\u7ea7\u90e8\u5206\u8fdb\u884c\u63a7\u5236\u3002\n\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4f7f\u7528Sublime Merge\u6765\u7ba1\u7406\u548c\u5206\u4eab\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u4eba\u4f7f\u7528\u5b83\u6765\u56de\u987e\u5de5\u4f5c\u3002\u6587\u4ef6\u9009\u9879\u5361\u663e\u8457\u6539\u8fdb\u4e86\u6b64\u8fc7\u7a0b\uff0c\u4f46\u4ecd\u6709\u66f4\u591a\u5de5\u4f5c\u8981\u505a\u3002\u6ce8\u610f\u591a\u65b9\u9762\u7684\u6539\u8fdb\uff0c\u91cd\u70b9\u662f\u63d0\u9ad8\u4f60\u7684\u590d\u4e60\u80fd\u529b\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fGit\uff0c\u5f88\u53ef\u80fd\u60a8\u4e5f\u5728\u5904\u7406\u56fe\u50cf\u3002\u5c31\u50cf\u4ee3\u7801\u4e00\u6837\uff0c\u5728\u4fee\u6539\u56fe\u50cf\u6587\u4ef6\u65f6\u8981\u67e5\u770b\u66f4\u6539\u4e86\u4ec0\u4e48\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u4f7f\u68c0\u67e5\u56fe\u50cf\u66f4\u6539\u4e0e\u68c0\u67e5\u4ee3\u7801\u66f4\u6539\u4e00\u6837\u65e0\u7f1d\u3002\n\u770b\u5230\u793e\u533a\u4f7f\u7528Sublime Text\u7684\u63d2\u4ef6\u7cfb\u7edf\u6784\u5efa\u4e86\u4ec0\u4e48\uff0c\u8fd9\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u3002\u63d2\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86\u771f\u6b63\u4e2a\u6027\u5316\u4f53\u9a8c\u6240\u9700\u7684\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u8f6f\u4ef6\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u628a\u5b83\u5e26\u5230Sublime Merge\u3002\n\u6211\u4eec\u5df2\u7ecf\u4e3a\u5d07\u9ad8\u5408\u5e76\u56e2\u961f\u5236\u5b9a\u4e86\u5b8f\u4f1f\u7684\u8ba1\u5212\uff0c\u6211\u4eec\u6b63\u5168\u901f\u524d\u8fdb\uff01\u6211\u4eec\u7684\u56e2\u961f\u6b63\u5728\u58ee\u5927\uff0c\u6b22\u8fce\u6211\u4eec\u7684\u65b0\u5f00\u53d1\u4eba\u5458David\uff01\u60a8\u53ef\u4ee5\u611f\u8c22\u4ed6\u63d0\u4f9b\u7684\u7279\u6027\uff0c\u5982\u63d0\u4ea4\u7edf\u8ba1\u4fe1\u606f\u3001\u65b0\u63a7\u5236\u53f0\u4ee5\u53caSublime Merge\u4e2d\u7684\u4e00\u4e9b\u91cd\u5927\u6027\u80fd\u6539\u8fdb\u3002\n\u4f60\u597d\uff0c\u4f60\u597d\uff0c\u6211\u662f\u5927\u536b\uff0cSublime\u603b\u90e8\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e4b\u4e00\u3002\u53ea\u8981\u6709\u673a\u4f1a\uff0c\u6211\u901a\u5e38\u662f\u4e2a\u6c89\u9ed8\u5be1\u8a00\u7684\u4eba\uff0c\u559c\u6b22\u8bb2\u611a\u8822\u7684\u7b11\u8bdd\u3002\u4f5c\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\uff0c\u6211\u559c\u6b22\u5b66\u4e60\u5982\u4f55\u5236\u4f5c\u4f20\u7edf\u8f6f\u4ef6\uff0c\u5e76\u7f16\u5199\u5e72\u51c0\u7d27\u51d1\u7684\u4ee3\u7801\u3002\u5728\u6211\u81ea\u5df1\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u5b66\u4e60\u5982\u4f55\u6570\u5b57\u7ed8\u753b\u3002\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u542c\u5230\u4f60\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u4f1a\u5728\u8bba\u575b\u4e0a\u542c\u53d6\u4efb\u4f55\u53cd\u9988\u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u5b98\u65b9\u7684bug\u8ddf\u8e2a\u5668\uff0c\u4f60\u53ef\u4ee5\u5728\u90a3\u91cc\u5206\u4eab\u4f60\u5bf9\u529f\u80fd\u7684\u60f3\u6cd5\u3002\n\u6211\u4eec\u77e5\u9053\u76ee\u524d\u5168\u7403\u8303\u56f4\u5185\u7684\u65e5\u5b50\u5f88\u8270\u96be\uff0c\u6211\u4eec\u7684\u60f3\u6cd5\u4e0e\u4f60\u4eec\u6240\u6709\u4eba\u5728\u4e00\u8d77\u3002\u6211\u4eec\u60f3\u501f\u6b64\u673a\u4f1a\u611f\u8c22\u60a8\u7684\u53cd\u9988\u548c\u53c2\u4e0e\uff0c\u65e0\u8bba\u662f\u5728\u8bba\u575b\u4e0a\u8fd8\u662f\u5728\u4e0d\u548c\u8c10\u670d\u52a1\u5668\u4e0a\u3002\u901a\u8fc7\u8fd9\u4e00\u70b9\uff0c\u60a8\u5df2\u7ecf\u5f15\u5bfc\u5d07\u9ad8\u5408\u5e76\u5230\u4eca\u5929\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u7ee7\u7eed\u4e3a\u60a8\u63d0\u4f9b\u6700\u597d\u7684Git\u4f53\u9a8c\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9690\u85cf\u547d\u4ee4\u4e0d\u518d\u63d0\u4f9b-q\uff0c\u4ee5\u89e3\u51b3Git2.24\u4e2d\u7684\u9519\u8bef\u3002\n\u9996\u9009\u9879\uff1a\u901a\u8fc7\u9996\u9009\u9879\u5bf9\u8bdd\u6846\u66f4\u65b0\u8bbe\u7f6e\u4e0d\u518d\u6e05\u9664\u8bbe\u7f6e\u6587\u4ef6\u4e2d\u7684\u6ce8\u91ca\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728Mac\u4e0a\u542f\u7528GPU\u6e32\u67d3\uff0c\u5728Windows\u548cLinux\u4e0a\u7981\u7528GPU\u6e32\u67d3\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u9996\u9009\u9879\u5bf9\u8bdd\u6846\u8fdb\u884c\u66f4\u6539\u3002\nUnicode\u7a7a\u767d\u5b57\u7b26(\u5982\u96f6\u5bbd\u5ea6\u4e0d\u95f4\u65ad\u7a7a\u683c)\u73b0\u5728\u7ed8\u5236\u4e3a\u5341\u516d\u8fdb\u5236\u503c\u3002\u901a\u8fc7DRAW_UNICODE_\u767d\u8272_SPACE\u8bbe\u7f6e\u8fdb\u884c\u63a7\u5236\u3002\n\u5982\u679c\u9009\u5b9a\u5185\u5bb9\u4e0d\u5305\u542b\u4efb\u4f55\u6362\u884c\u7b26\uff0c\u5219\u9009\u5b9a\u5185\u5bb9/\u62c6\u5206\u6210\u884c\u73b0\u5728\u4f1a\u5c06\u9009\u5b9a\u5185\u5bb9\u62c6\u5206\u6210\u5355\u8bcd\u3002\n\u4fee\u6b63\u4e86SWAP_LINE_DOWN\u65e0\u6cd5\u5c06\u7a7a\u884c\u4ea4\u6362\u5230\u6587\u4ef6\u6700\u540e\u4e00\u884c\u7684\u95ee\u9898\u3002\n\u4fee\u6539\u952e\u8f7b\u51fb\u73b0\u5728\u53ef\u4ee5\u7528\u4f5c\u952e\u7ed1\u5b9a\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982\uff0c[&#34\uff1bctrl&#34\uff1b\uff0c&#34\uff1bctrl&#34\uff1b]\u5c06\u5728\u672a\u6309\u4e2d\u95f4\u4efb\u4f55\u5176\u4ed6\u952e\u7684\u60c5\u51b5\u4e0b\u6309Ctrl\u4e24\u6b21\u65f6\u89e6\u53d1\u3002\nLinux\uff1a\u6dfb\u52a0\u4e86\u9488\u5bf9\u89e6\u6478\u5c4f\u9a71\u52a8\u7a0b\u5e8f\u9519\u8bef\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u8be5\u9519\u8bef\u4f1a\u5bfc\u81f4\u53f3\u952e\u5355\u51fb\u548c\u9f20\u6807\u6eda\u52a8\u505c\u6b62\u5de5\u4f5c\n\u4e3b\u9898\u73b0\u5728\u6709\u4e86title_bar\u5143\u7d20\u7684\u6837\u5f0f\u5c5e\u6027\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u4e0eOS&#34\uff1b\u6697\u6a21\u5f0f&#34\uff1b\u96c6\u6210\u3002\n\u6dfb\u52a0\u4e86\u5b89\u5168\u6a21\u5f0f\uff0c\u4ee5\u6a21\u62df\u5168\u65b0\u5b89\u88c5\u3002\u901a\u8fc7\u5728\u547d\u4ee4\u884c\u4f20\u9012--safe-mode\u542f\u7528\u3002\n\u5728Windows\u4e0a\u6309\u4f4fShift\u952e\uff0c\u6216\u5728MacOS\u4e0a\u6309\u4f4fOption\u952e\uff0c\u5c06\u5728\u5b89\u5168\u6a21\u5f0f\u4e0b\u542f\u52a8Sublime Merge", "note_en": "From the first release of Sublime Merge, we talked about the simple joy of software that \u2018gets it really right\u2019. For our team it means going beyond the minimum, making software as good as it can be, and paying attention to the details.\n It\u2019s been almost two years since Sublime Merge was launched, and our focus hasn\u2019t changed. Our aim for the newest update was to \u2018get it really right\u2019 when it comes to flexibility and customization.\n Our community uses Sublime Merge in many different ways; from reviewing commits on a tablet, to writing thousands of lines of code on a desktop computer.\n The latest version of Sublime Merge is packed full of upgrades, but we want to highlight some of the ways we\u2019re giving you flexibility in the way you work. We\u2019ve included the full list of changes at the bottom of this post  (spoiler: there\u2019s a lot)\n Upgraded Commit UI - focus on what\u2019s important with an upgraded commit UI\n   As developers, we know that windows can be cumbersome. We want to give you the tools you need to focus on your work, not on managing windows.\n   We\u2019ve re-worked the commit UI to support different workflows. You can now configure the commit message position, and toggle between individual files using file tabs. You\u2019ll also notice the new file stats.\n  With the wide variety of displays available today, it\u2019s important to have a flexible layout that works for you. Starting today, you can simply select the layout that fits your set up. Whether you\u2019re on your 4K desktop screen, your work laptop, or even a tablet, we\u2019ve got you covered.\n  We&#39;re excited to announce support for hardware acceleration in Sublime Merge. Powered by OpenGL, this will deliver significant rendering performance improvements on all platforms. It is enabled by default on MacOS, and can be controlled via the advanced section of the preferences.\n   Many of us use Sublime Merge to manage and share our work, but some of us also use it to review work. File tabs have improved this process significantly, but there\u2019s more work to do. Keep your eyes out for multiple improvements focused on improving your ability to review.\n  If you\u2019re using Git, chances are you\u2019re working with images too. Just like code, it\u2019s important to see what\u2019s changed when modifying image files. We want to make reviewing image changes as seamless as reviewing code changes.\n  It\u2019s incredible to see what the community has built using the plugin system for Sublime Text. The plugin system offers the power and flexibility needed to truly personalize your experience. We know this is an important part of software that gets it really right, so we\u2019ll be bringing it to Sublime Merge.\n  We\u2019ve got big plans for the Sublime Merge team, and we\u2019re full steam ahead! Our team is growing, and we\u2019d like to welcome our new developer, David! You can thank him for features such as commit stats, the new console, and some great performance improvements in Sublime Merge.\n Hello hello, I\u2019m David, one of the software engineers at Sublime HQ. I\u2019m usually the quiet guy that enjoys making silly jokes whenever I\u2019m given the chance. As a programmer, I enjoy learning how to make traditional software, and writing clean compact code. In my own time I\u2019ve been learning how to draw digitally.\n  As always, we\u2019re excited to hear your thoughts. We\u2019ll be on the  forum listening to any feedback. We also have an  official bug tracker, where you can share your ideas for features.\n  We know times are tough on a global scale at the moment, and our thoughts are with all of you. We\u2019d like to take this time to thank you for your feedback and participation, whether it be on the forums or the Discord server. Through this, you have guided Sublime Merge to where it is today. We\u2019re excited to continue delivering the best Git experience to you.\n  Stash commands no longer supply  -q by default, to work around a bug in Git 2.24\n            Preferences: Updating settings via the preferences dialog no longer clears comments in the settings file\n    By default, GPU rendering is enabled on Mac, and disabled on Windows and Linux. This can be changed via the Preferences dialog.\n    Unicode white space characters, such as the zero width no-break space, are now drawn as hex values. Controlled via  draw_unicode_white_space setting.\n  Selection/Split into Lines will now split a selection into words if the selection doesn&#39;t contain any newlines\n  Fixed  swap_line_down not being able to swap an empty line onto the last line of a file\n  Modifier key taps can now be used as part of a key binding. For example,  [&#34;ctrl&#34;, &#34;ctrl&#34;] will trigger when  Ctrl is pressed twice without pressing any other keys in between.\n    Linux: Added a workaround for a touchscreen driver bug, which would cause right click and mouse scrolling to stop working\n  Themes now have a  style property for  title_bar element, for better integration with OS &#34;dark modes&#34;\n    Added  Safe Mode, to simulate a clean install. Enabled by passing  --safe-mode on the command line.\n  Holding down Shift on Windows, or Option on macOS, will start Sublime Merge in Safe Mode", "posttime": "2020-05-26 14:39:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u529f\u80fd,merge", "title": "\u5d07\u9ad8\u5408\u5e762-\u529f\u80fd\u548c\u7075\u6d3b\u6027", "title_en": "Sublime Merge 2 \u2013 Features and Flexibility", "transed": 1, "url": "https://www.sublimetext.com/blog/articles/sublime-merge-2-announcement", "via": "", "real_tags": ["\u529f\u80fd", "merge"]}, {"category": "", "categoryclass": "", "imagename": "f78380a2faa664f7e5ee39c77263dd9b.jpg", "infoid": 1003779, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u6bcf\u4e2aBuilders\u8ba1\u5212\u7684\u53c2\u4e0e\u8005\u90fd\u5c06\u4e0e\u521b\u5efa\u4e86\u6210\u529f\u7684\u521d\u521b\u4f01\u4e1a\u5e76\u63a8\u51fa\u4e86\u6570\u5341\u79cd\u6210\u529f\u4ea7\u54c1\u7684\u5bfc\u5e08\u914d\u5bf9\uff0c\u5176\u4e2d\u5305\u62ec\u8d85\u8fc725\u4e2a\u6392\u540d\u7b2c\u4e00\u7684App Store\u70b9\u51fb\u91cf\uff0c\u8986\u76d6\u4e8610\u591a\u4ebf\u4eba\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002\u666e\u83b1\u7eb3\u662f\u4e00\u4f4d\u8fde\u7eed\u521b\u4e1a\u8005\u3001\u6295\u8d44\u4eba\u548c\u4f5c\u5bb6\u3002\u5979\u7684\u4f5c\u54c1\u5728\u2026\u4e0a\u6709\u4e13\u9898\u62a5\u9053\u3002&amp\uff1b\u4ee5\u53ca\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u3001\u201cTechCrunch\u201d\u3001\u201c\u8d6b\u82ac\u987f\u90ae\u62a5\u201d\u3001\u201c\u798f\u5e03\u65af\u201d\u3001\u201cRe/Code\u201d\u7b49\u3002\u5979\u4e4b\u524d\u662fSmule\u7684\u9996\u5e2d\u4ea7\u54c1\u5b98\u548c\u9996\u5e2d\u8425\u9500\u5b98\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u666e\u96f7\u7eb3\u662fKhush\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\uff0cKhush\u662f\u667a\u80fd\u97f3\u4e50\u5e94\u7528\u7684\u9886\u5148\u5f00\u53d1\u5546\uff0c\u6bd4\u5982\u6392\u540d\u7b2c\u4e00\u7684\u70ed\u95e8\u5e94\u7528Songify\uff0c\u8fd9\u662f\u4e00\u6b3e\u5c06\u8bed\u97f3\u8f6c\u6362\u4e3a\u97f3\u4e50\u7684\u5e94\u7528\u3002\u5979\u7684\u4ea7\u54c1\u89c6\u9891\u70b9\u51fb\u91cf\u8d85\u8fc72.5\u4ebf\u6b21\u3002\u666e\u83b1\u7eb3\u88ab\u9009\u4e3aFastCompany 2011\u5e74\u6700\u5177\u5f71\u54cd\u529b\u7684\u79d1\u6280\u5973\u6027\u4e4b\u4e00\u3002\u5979\u8fd8\u662f\u4e00\u540d\u521d\u9732\u5934\u89d2\u7684\u5929\u4f7f\u6295\u8d44\u8005\u548c500 Startups\u7684\u5e38\u9a7b\u5bfc\u5e08\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002\u4e39\u5c3c\u5c14\u662f\u58a8\u897f\u54e5\u7b2c\u4e00\u5bb6\u4e5f\u662f\u76ee\u524d\u6700\u5927\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6240Bitso\u7684\u9996\u5e2d\u6267\u884c\u5b98\u3002\u4e39\u5c3c\u5c14\u662f\u2026\u3002&amp\uff1bplus\u66f4\u81f4\u529b\u4e8e\u5728\u58a8\u897f\u54e5\u6253\u9020\u4e00\u79cd\u65b0\u7684\u52a0\u5bc6\u8d27\u5e01\u7ecf\u6d4e\u7684\u57fa\u7840-\u8fd9\u79cd\u7ecf\u6d4e\u53ef\u4ee5\u6539\u53d8\u6c47\u6b3e\uff0c\u4f7f\u771f\u6b63\u65e0\u6469\u64e6\u7684\u56fd\u9645\u8d38\u6613\u6210\u4e3a\u53ef\u80fd\u3002Daniel\u62e5\u6709\u54c8\u4f5b\u5de5\u5546\u7ba1\u7406\u7855\u58eb\u5b66\u4f4d\uff0c\u5728\u65af\u5766\u798f\u5927\u5b66\u653b\u8bfb\u8ba1\u7b97\u673a\u7cfb\u7edf\u5b66\u58eb\u5b66\u4f4d\uff0c\u5e76\u5728\u5de5\u7a0b\u548c\u4ea7\u54c1\u65b9\u9762\u6709\u5f88\u5f3a\u7684\u80cc\u666f\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002\u970d\u8389\u4e00\u76f4\u662fY Combinator\u7684\u8bbf\u95ee\u5408\u4f19\u4eba\uff0c\u4e0e200\u591a\u5bb6\u516c\u53f8\u5bc6\u5207\u5408\u4f5c\u3002\u5728\u6b64\u4e4b\u524d\uff0cShe\u2026\u30022006\u5e74\uff0c&amp\uff1bplus More\u4e0e\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(UC Berkeley)\u7684\u6821\u53cb\u5171\u540c\u521b\u7acb\u4e86Kabam\uff0c\u8fd9\u662f\u4e00\u5bb6\u7531\u98ce\u9669\u6295\u8d44\u652f\u6301\u7684\u624b\u673a\u6e38\u620f\u516c\u53f8\u3002\u5361\u5df4\u59c6\u5df2\u7ecf\u4e3a\u6f2b\u5a01(Marvel)\u3001\u970d\u6bd4\u7279\u4eba(Hobbit)\u548c\u901f\u5ea6\u4e0e\u6fc0\u60c5(Fast And Furious)\u7b49\u6df1\u53d7\u559c\u7231\u7684\u7279\u8bb8\u7ecf\u8425\u6743\u5f00\u53d1\u4e86\u6e38\u620f\uff0c\u8fd9\u4e9b\u6e38\u620f\u5728iOS\u548cGoogle Play\u4e2d\u90fd\u8fde\u7eed\u8dfb\u8eab\u524d10\u540d\u3002\u5979\u7684\u5de5\u4f5c\u63a8\u52a8Kabam\u7684\u6536\u5165\u540c\u6bd4\u589e\u957f\u521b\u7eaa\u5f55\uff0c\u4ece\u6bcf\u5e740\u7f8e\u5143\u589e\u957f\u52304\u4ebf\u7f8e\u5143\uff0c\u8fd9\u8ba9Kabam\u57282014\u5e74\u8fdb\u5165\u4e86\u72ec\u89d2\u517d\u4ff1\u4e50\u90e8\u3002\u5979\u9886\u5bfc\u4e86\u5361\u5df4\u59c6\u5c61\u83b7\u6b8a\u8363\u7684\u201c\u5361\u6885\u6d1b\u738b\u56fd\u201d\u7cfb\u5217\u7684\u4ea7\u54c1\u8bbe\u8ba1\uff0c\u8be5\u7cfb\u5217\u5728\u4e0d\u5230\u56db\u5e74\u7684\u65f6\u95f4\u91cc\u5df2\u7ecf\u83b7\u5f97\u4e86\u8d85\u8fc73.5\u4ebf\u7f8e\u5143\u7684\u7968\u623f\u6536\u5165\u30022017\u5e74\uff0c\u5361\u5df4\u59c6\u9000\u51faFoxNext\u548cNetmarble\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002\u9a6c\u7279\u662f\u4e00\u4f4d\u4f4f\u5728\u4f11\u65af\u987f\u7684\u7f8e\u56fd\u4f01\u4e1a\u5bb6\u548c\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u3002\u4ed6\u4ee5\u5f00\u53d1FREE\u548c\u2026\u800c\u95fb\u540d\u3002&amp\uff1b\u5916\u52a0\u66f4\u591a\u5f00\u6e90\u7f51\u7edc\u8f6f\u4ef6WordPress\u3002\u4f11\u65af\u987f\u5927\u5b66\u8f8d\u5b66\u540e\uff0c\u4ed6\u4e8e2004\u5e74\u81f32006\u5e74\u5728CNET Networks\u5de5\u4f5c\uff0c\u76f4\u5230\u8f9e\u804c\u5e76\u521b\u7acb\u4e86Automattic\uff0c\u8fd9\u662f\u4e00\u5bb6\u4e92\u8054\u7f51\u516c\u53f8\uff0c\u65d7\u4e0b\u54c1\u724c\u5305\u62ecWordPress.com\u3001Akimet\u3001Gravtal\u3001VaultPress\u3001IntenseDebate\u3001CrowdSignal\u548cTumblr\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002\u827e\u7c73\u4e3d\u5728\u8d39\u57ce\u7684\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u5b66\u4e60\u795e\u7ecf\u79d1\u5b66\u548c\u7ecf\u5178\u7814\u7a76\uff0c\u7136\u540e\u5728\u7c73\u5c14\u65af\u5927\u5b66(Mills\u2026)\u83b7\u5f97\u8de8\u5b66\u79d1CS\u7855\u58eb\u5b66\u4f4d\u3002&amp\uff1b\u5728\u5965\u514b\u5170\u8fd8\u6709\u66f4\u591a\u3002\u827e\u7c73\u4e3d\u76ee\u524d\u662f\u65e7\u91d1\u5c71Mozilla\u7684\u4e00\u540d\u79fb\u52a8\u5f00\u53d1\u4eba\u5458\uff0c\u4e3b\u8981\u4ece\u4e8bAndroid\u4ea7\u54c1\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\n\u62dc\u8bbf\u5bfc\u5e08\u3002Parisa\u76ee\u524d\u662fGoogle Chrome\u4ea7\u54c1\u3001\u5de5\u7a0b\u548c\u7528\u6237\u4f53\u9a8c\u90e8\u95e8\u7684\u8d1f\u8d23\u4eba\uff0c\u4e4b\u524d\u662f\u5de5\u7a0b\u90e8\u7684\u9ad8\u7ea7\u603b\u76d1\u3002\u5e15\u91cc\u8428\u7684\u2026\u3002&amp\uff1b\u52a0\u4e0a\u66f4\u4e30\u5bcc\u7684\u5b89\u5168\u7ecf\u9a8c\uff0c\u4f7f\u5979\u81ea\u7136\u6210\u4e3a\u66f4\u5b89\u5168\u7684\u7f51\u7edc\u7684\u62e5\u62a4\u8005\u3002\u5979\u5bf9\u8c37\u6b4c\u96f6\u9879\u76ee\u548c\u5171\u540c\u521b\u5efa\u6211\u4eec\u7684\u8bc1\u5238\u5021\u5bfc\u8005\u7684\u9886\u5bfc\uff0c\u4ee5\u53ca\u63a8\u52a8\u8c37\u6b4c\u548c\u6574\u4e2a\u7f51\u7edc\u91c7\u7528HTTPS\u6d41\u91cf\uff0c\u90fd\u8ba9\u5979\u83b7\u5f97\u4e86\u201c\u5b89\u5168\u516c\u4e3b\u201d\u7684\u7ef0\u53f7\u3002\u5728\u201c\u798f\u5e03\u65af\u201d(Forbes)\u3001\u201c\u8fde\u7ebf\u201d(Wire)\u548c\u201c\u8d22\u5bcc\u201d(Fortune)\u6742\u5fd7\u4e0a\uff0c\u5e15\u91cc\u8428\u662f\u5b89\u5168\u9886\u57df\u7684\u9876\u7ea7\u6280\u672f\u8fdc\u89c1\u5353\u8bc6\u8005\u3002\n\u51ef\u897f\u662f\u4e00\u540d\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\uff0c\u4e5f\u662fMozilla\u3001\u54c8\u4f5b\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u548c\u4e3d\u5854\u00b7\u827e\u4f26\u57fa\u91d1\u4f1a\u7684\u7814\u7a76\u5458(\u8fc7\u53bb\u548c\u73b0\u5728)\u3002\u5979\u5df2\u627f\u8bfa\u5c06\u81ea\u5df1\u6295\u5165\u5230\u2026\u7684\u4ea4\u53c9\u53e3\u3002&amp\uff1b\u52a0\u4e0a\u66f4\u591a\u7684\u6280\u672f\u3001\u4f26\u7406\u548c\u793e\u4f1a\u3002\u51ed\u501f\u5728\u8c37\u6b4c\u548c\u767d\u5bab\u7f8e\u56fd\u6570\u5b57\u670d\u52a1(US Digital Service)\u7684\u4ea7\u54c1\u5f00\u53d1\u3001\u5de5\u7a0b\u548c\u533b\u7597\u4fdd\u5065\u65b9\u9762\u7684\u7ecf\u9a8c\uff0c\u51ef\u897f\u5728\u521b\u9020\u4e13\u6ce8\u4e8e\u516c\u5e73\u3001\u6b63\u4e49\u548c\u516c\u5e73\u7684\u4ea7\u54c1\u65b9\u9762\u62e5\u6709\u5b9d\u8d35\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\n\u9a6c\u514b\u4e4b\u524d\u662f\u706b\u72d0\u7684\u9996\u5e2d\u4ea7\u54c1\u5b98\uff0c\u4e5f\u662f\u591a\u5bb6\u521d\u521b\u516c\u53f8\u7684\u6280\u672f\u521b\u59cb\u4eba\uff0c\u4ed6\u638c\u63e1\u4e86\u2026\u3002&amp\uff1b\u4ee5\u53ca\u66f4\u591a\u5c06\u4ea7\u54c1\u4ece\u8bde\u751f\u5230\u53d1\u5e03\u7684\u8fc7\u7a0b\u3002\u4ed6\u5728Joyent\u5b75\u5316Node.js\u7684\u7ecf\u9a8c\u4ee5\u53ca\u4ed625\u5e74\u591a\u7684\u6280\u672f\u7ecf\u9a8c\u4f7f\u4ed6\u6210\u4e3a\u6784\u5efa\u91cd\u8981\u5de5\u5177\u7684\u5b8c\u7f8e\u8d44\u6e90\u3002\n\u76ee\u524d\u662fDataKind\u7684\u6267\u884c\u56e2\u961f\u6210\u5458\uff0c\u6700\u8fd1\u62c5\u4efb\u65b0\u7f8e\u56fd\u2026\u7684\u5de5\u7a0b\u603b\u76d1\u3002&amp\uff1b\u52a0\u4e0a\u66f4\u591a\u7684\u516c\u5171\u5229\u76ca\u6280\u672f\u9879\u76ee\uff0cAfua\u4e3a\u5404\u7ea7\u653f\u5e9c\u548c\u975e\u653f\u5e9c\u7ec4\u7ec7\u5e26\u6765\u4e86\u6df1\u523b\u7684\u7ecf\u9a8c\u3002\u5979\u7684\u9879\u76ee\u6db5\u76d6\u5bc4\u517b\u3001\u5211\u4e8b\u53f8\u6cd5\u6539\u9769\u3001\u963f\u7247\u7c7b\u836f\u7269\u6d41\u884c\u3001\u91d1\u878d\u5305\u5bb9\u7b49\u3002", "note_en": "Participants in each of our Builders programs will be paired with mentors who have built successful startups and shipped dozens of successful products, including more than 25 #1 App Store Hits that reached 1+ billion people.\n  Visiting Mentor. Prerna is a serial entrepreneur, investor, and author. Her writing has been featured  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\tin the New York Times, TechCrunch, Huffington Post, Forbes, Re/code and more. She was previously Chief Product Officer and Chief Marketing Officer at Smule. Prior, Prerna was Co-Founder and CEO of Khush, the leading developer of intelligent music apps, like the #1 hit app Songify, an app that turns speech into music. Her product videos reached over 250 million views. Prerna was voted one of FastCompany\u2019s Most Influential Women in Technology 2011. She is also a budding angel investor and Resident Mentor at 500 Startups.\n  Visiting Mentor. Daniel is CEO of Bitso, Mexico\u2019s first and now largest cryptocurrency exchange. Daniel is  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\t committed to forging the foundation for a new cryptocurrency economy in Mexico - one that can transform remittances and make truly frictionless international commerce a possibility. Daniel holds an MBA from Harvard, attended Stanford for his undergraduate degree in Computer Systems, and has a strong background in engineering and product.\n  Visiting Mentor. Holly has been a Visiting Partner at Y Combinator working closely with over 200 companies. Prior to that, she  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\tfounded Kabam, a venture backed mobile gaming company, in 2006 with UC Berkeley alumni. Kabam has built games for beloved franchises such as Marvel, Hobbit and Fast and Furious that has continuously been Top 10 in both iOs and Google Play. Her work has contributed to record revenue growth for Kabam year over year from $0 to $400MM annually, that led Kabam into the unicorn club in 2014. She led the product design for Kabam\u2019s award-winning \u201cKingdoms of Camelot\u201d franchise, which has grossed over $350 million in less than four years. In 2017 Kabam exited to FoxNext and Netmarble.\n  Visiting Mentor. Matt is an American entrepreneur and web developer living in Houston. He is known for developing the free and   \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\topen-source web software WordPress. After dropping out of the University of Houston, he worked at CNET Networks from 2004 to 2006 until he quit and founded Automattic, an internet company whose brands include WordPress.com, Akismet, Gravatar, VaultPress, IntenseDebate, Crowdsignal, and Tumblr.\n  Visiting Mentor. Emily studied neuroscience and classical studies at University of Pennsylvania in Philadelphia, then got an MA in Interdisciplinary CS at Mills  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\tin Oakland. Emily is currently a mobile developer for Mozilla in San Francisco, working mostly on Android products.\n  Visiting Mentor. Parisa is currently Head of Product, Engineering, &amp; UX of Chrome at Google and was previously a Senior Director of Engineering. Parisa\u2019s  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\textensive experience with security make her a natural champion for a more secure web. Her leadership of Project Zero at Google and Co-Founding Our Securities Advocates, as well as driving the adoption of HTTPS traffic at Google and across the Web more than warrant her the moniker \u201cSecurity Princess\u201d. Featured in Forbes, WIRED, and Fortune magazines, Parisa is a top tech visionary in the realm of security.\n  Kathy is a Computer Scientist and Fellow (past and present) at Mozilla, Harvard, the MIT Media Lab, and Rita Allen Foundation. She has committed herself to the intersection of  \u2026  &amp;plus More  \t\t\t\t\t\t\t\t\t technology, ethics, and society. With experience in product development, engineering, and healthcare at Google and the US Digital Service in the White House, Kathy has invaluable expertise in creating products with a focus on fairness, justice, and equitability.\n  Previously Chief Product Officer for Firefox as well as the technical founder of multiple startups, Mark has mastered  \u2026  &amp;plus More   the process of taking a product from birth to launch. His experience incubating Node.js at Joyent as well as his 25+ years of experience in technology make him the perfect resource for building tools that matter.\n  Currently on the Executive Team at DataKind, and most recently the Director of Engineering at New America&#39;s  \u2026  &amp;plus More  Public Interest Tech Program, Afua brings deep experience across all government levels and NGOs. Her projects have spanned foster care, criminal justice reform, the opioid epidemic, financial inclusion, and more.", "posttime": "2020-05-26 14:38:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fee\u590d,fix,\u4ea7\u54c1", "title": "Mozilla\u7684\u4fee\u590d\u4e92\u8054\u7f51\u5b75\u5316\u5668", "title_en": "Mozilla\u2019s Fix-the-Internet Incubator", "transed": 1, "url": "https://builders.mozilla.community", "via": "", "real_tags": ["\u4fee\u590d", "fix", "\u4ea7\u54c1"]}, {"category": "", "categoryclass": "", "imagename": "550389f553aa84546c1fde1daa900316.jpg", "infoid": 1003778, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e66\u8bc4|\u706b\u5728\u6211\u4eec\u8eab\u4e0a\uff1a\u8a79\u59c6\u65af\u00b7\u9c8d\u5fb7\u6e29(James Baldwin)\uff0c\u5c0f\u5a01\u5ec9\u00b7F\u00b7\u5df4\u514b\u5229(William F.Buckley Jr)\uff0c\u5c3c\u53e4\u62c9\u65af\u00b7\u5e03\u79d1\u62c9(Nicholas Buccola)\u6240\u8457\u7684\u5173\u4e8e\u7f8e\u56fd\u79cd\u65cf\u7684\u8fa9\u8bba-TLS", "note_en": "Book review | The Fire Is Upon Us: James Baldwin, William F. Buckley Jr, and the debate over race in America by Nicholas Buccola - The TLS", "posttime": "2020-05-26 14:38:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u72b9\u592a\u4eba,ghetto,\u9c8d\u5fb7\u6e29", "title": "\u72b9\u592a\u4eba\u533a\u548c\u8c6a\u5b85", "title_en": "The Ghetto and the Mansion", "transed": 1, "url": "https://www.the-tls.co.uk/articles/fire-is-upon-us-by-nicholas-buccola-book-review/", "via": "", "real_tags": ["\u72b9\u592a\u4eba", "ghetto", "\u9c8d\u5fb7\u6e29"]}, {"category": "", "categoryclass": "", "imagename": "73cb20ff9fff6a5b8ff5254500f753ff.jpg", "infoid": 1003777, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "70\u591a\u5e74\u524d\uff0c\u5904\u4e8e\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u524d\u6cbf\u7684\u7814\u7a76\u4eba\u5458\u5f15\u5165\u4e86\u795e\u7ecf\u7f51\u7edc\uff0c\u5c06\u5176\u4f5c\u4e3a\u4e00\u79cd\u9769\u547d\u6027\u7684\u65b9\u5f0f\u6765\u601d\u8003\u5927\u8111\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5728\u4eba\u8111\u4e2d\uff0c\u7531\u6570\u5341\u4ebf\u4e2a\u76f8\u4e92\u8fde\u63a5\u7684\u795e\u7ecf\u5143\u7ec4\u6210\u7684\u7f51\u7edc\u80fd\u591f\u7406\u89e3\u611f\u89c9\u6570\u636e\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4ece\u7ecf\u9a8c\u4e2d\u5b66\u4e60\u3002\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5c42\u8fc7\u6ee4\u5927\u91cf\u6570\u636e\uff0c\u6309\u7167\u4ed6\u4eec\u81ea\u5df1\u5b66\u4e60\u7684\u89c4\u5219\u8fdb\u884c\u9884\u6d4b\u548c\u8bc6\u522b\u6a21\u5f0f\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eba\u4eec\u5c06\u795e\u7ecf\u7f51\u7edc\u89c6\u4e3a\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u7684\u7075\u4e39\u5999\u836f\uff0c\u80fd\u591f\u89e3\u51b3\u53ef\u4ee5\u88ab\u91cd\u7533\u4e3a\u6a21\u5f0f\u8bc6\u522b\u95ee\u9898\u7684\u6280\u672f\u6311\u6218\u3002\u4ed6\u4eec\u63d0\u4f9b\u542c\u8d77\u6765\u81ea\u7136\u7684\u8bed\u8a00\u7ffb\u8bd1\u3002\u7167\u7247\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5b83\u4eec\u6765\u8bc6\u522b\u548c\u5206\u7c7b\u4f60\u6536\u85cf\u4e2d\u7684\u53cd\u590d\u51fa\u73b0\u7684\u9762\u5b54\u3002\u7531\u795e\u7ecf\u7f51\u7edc\u9a71\u52a8\u7684\u7a0b\u5e8f\u5df2\u7ecf\u5728\u56f4\u68cb\u548c\u56fd\u9645\u8c61\u68cb\u7b49\u6e38\u620f\u4e2d\u51fb\u8d25\u4e86\u4e16\u754c\u4e0a\u6700\u597d\u7684\u68cb\u624b\u3002\n\u7136\u800c\uff0c\u795e\u7ecf\u7f51\u7edc\u5728\u4e00\u4e2a\u660e\u663e\u7684\u9886\u57df\u4e00\u76f4\u843d\u540e\uff1a\u89e3\u51b3\u56f0\u96be\u7684\u7b26\u53f7\u6570\u5b66\u95ee\u9898\u3002\u8fd9\u4e9b\u8bfe\u7a0b\u5305\u62ec\u5fae\u79ef\u5206\u8bfe\u7a0b\u7684\u7279\u70b9\uff0c\u6bd4\u5982\u79ef\u5206\u5b66\u6216\u5e38\u5fae\u5206\u65b9\u7a0b\u3002\u969c\u788d\u6765\u81ea\u6570\u5b66\u672c\u8eab\u7684\u6027\u8d28\uff0c\u8fd9\u9700\u8981\u7cbe\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u76f8\u53cd\uff0c\u795e\u7ecf\u7f51\u7edc\u503e\u5411\u4e8e\u5728\u6982\u7387\u4e0a\u51fa\u7c7b\u62d4\u8403\u3002\u4ed6\u4eec\u5b66\u4e60\u8bc6\u522b\u56fe\u6848-\u897f\u73ed\u7259\u8bed\u7ffb\u8bd1\u542c\u8d77\u6765\u6700\u597d\uff0c\u6216\u8005\u4f60\u7684\u8138\u662f\u4ec0\u4e48\u6837\u5b50-\u5e76\u80fd\u4ea7\u751f\u65b0\u7684\u56fe\u6848\u3002\n\u53bb\u5e74\u5e74\u5e95\uff0c\u5728\u5df4\u9eceFacebook\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5c0f\u7ec4\u5de5\u4f5c\u7684\u4e24\u540d\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u7eaa\u5c27\u59c6\u00b7\u5170\u666e\u5c14(Guillaume Lample)\u548c\u5f17\u6717\u7d22\u74e6\u00b7\u67e5\u987f(Fran\u00e7ois Charton)\u7684\u60c5\u51b5\u53d1\u751f\u4e86\u53d8\u5316\u3002\u4ed6\u4eec\u516c\u5e03\u4e86\u7528\u795e\u7ecf\u7f51\u7edc\u89e3\u51b3\u7b26\u53f7\u6570\u5b66\u95ee\u9898\u7684\u9996\u4e2a\u6210\u529f\u65b9\u6cd5\u3002\u4ed6\u4eec\u7684\u65b9\u6cd5\u4e0d\u6d89\u53ca\u6570\u5b57\u8fd0\u7b97\u6216\u6570\u503c\u8fd1\u4f3c\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u53d1\u6325\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u4f18\u52bf\uff0c\u6839\u636e\u4e00\u4e2a\u5b9e\u9645\u4e0a\u5df2\u7ecf\u89e3\u51b3\u7684\u95ee\u9898-\u8bed\u8a00\u7ffb\u8bd1-\u91cd\u65b0\u6784\u9020\u4e86\u6570\u5b66\u95ee\u9898\u3002\n\u201c\u6211\u4eec\u7684\u4e13\u4e1a\u90fd\u662f\u6570\u5b66\u548c\u7edf\u8ba1\u5b66\uff0c\u201d\u7814\u7a76\u4eba\u5de5\u667a\u80fd\u5728\u6570\u5b66\u4e2d\u7684\u5e94\u7528\u7684\u67e5\u987f\u8bf4\u3002\u201c\u6570\u5b66\u662f\u6211\u4eec\u6700\u521d\u7684\u8bed\u8a00\u3002\u201d\n\u56e0\u6b64\uff0c\u5170\u666e\u5c14\u548c\u67e5\u987f\u7684\u7a0b\u5e8f\u53ef\u4ee5\u4ea7\u751f\u590d\u6742\u79ef\u5206\u548c\u5fae\u5206\u65b9\u7a0b\u7684\u7cbe\u786e\u89e3-\u5305\u62ec\u4e00\u4e9b\u5185\u7f6e\u4e86\u663e\u5f0f\u89e3\u9898\u89c4\u5219\u7684\u6d41\u884c\u6570\u5b66\u8f6f\u4ef6\u5305\u3002\n\u65b0\u7a0b\u5e8f\u5229\u7528\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u4e3b\u8981\u4f18\u52bf\u4e4b\u4e00\uff1a\u5b83\u4eec\u5f00\u53d1\u4e86\u81ea\u5df1\u7684\u9690\u542b\u89c4\u5219\u3002\u56e0\u6b64\uff0c\u201c\u89c4\u5219\u548c\u4f8b\u5916\u4e4b\u95f4\u6ca1\u6709\u533a\u522b\uff0c\u201d\u65af\u5766\u798f\u5927\u5b66(Stanford University)\u5fc3\u7406\u5b66\u5bb6\u6770\u4f0a\u00b7\u9ea6\u514b\u83b1\u5170(Jay McClelland)\u8bf4\uff0c\u4ed6\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5bf9\u4eba\u4eec\u5b66\u4e60\u6570\u5b66\u7684\u65b9\u5f0f\u8fdb\u884c\u5efa\u6a21\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u6700\u96be\u7684\u79ef\u5206\u4e0a\u8dcc\u8dcc\u649e\u649e\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u63a8\u5bfc\u51fa\u975e\u4f20\u7edf\u7684\u201c\u89c4\u5219\u201d\uff0c\u53ef\u4ee5\u5728\u4eba\u6216\u673a\u5668\u76ee\u524d\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u4e0a\u53d6\u5f97\u8fdb\u5c55-\u6570\u5b66\u95ee\u9898\uff0c\u6bd4\u5982\u53d1\u73b0\u65b0\u7684\u8bc1\u636e\uff0c\u6216\u8005\u7406\u89e3\u795e\u7ecf\u7f51\u7edc\u672c\u8eab\u7684\u6027\u8d28\u3002\n\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4ef6\u4e8b\u8fd8\u6ca1\u6709\u53d1\u751f\u3002\u4f46\u5f88\u660e\u663e\uff0c\u8be5\u56e2\u961f\u5df2\u7ecf\u56de\u7b54\u4e86\u8fd9\u4e2a\u51e0\u5341\u5e74\u6765\u7684\u95ee\u9898-\u4eba\u5de5\u667a\u80fd\u80fd\u505a\u7b26\u53f7\u6570\u5b66\u5417\uff1f-\u662f\u80af\u5b9a\u7684\u3002\u4ed6\u8bf4\uff1a\u201c\u4ed6\u4eec\u7684\u6a21\u5f0f\u5df2\u7ecf\u786e\u7acb\u3002\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u662f\u6210\u719f\u7684\u3002\u4ed6\u4eec\u5de7\u5999\u5730\u5047\u8bbe\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u201c\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u96c6\u56e2OpenAI\u7684\u8054\u5408\u521b\u59cb\u4eba\u6c83\u4f0a\u5207\u8d6b\u00b7\u624e\u4f26\u5df4(Wojciech Zaremba)\u8bf4\u3002\n\u9ea6\u514b\u83b1\u5170\u8bf4\uff1a\u201c\u4ed6\u4eec\u786e\u5b9e\u6210\u529f\u5730\u63d0\u51fa\u4e86\u795e\u7ecf\u7f51\u7edc\uff0c\u53ef\u4ee5\u89e3\u51b3\u9075\u5b88\u89c4\u5219\u7684\u673a\u5668\u7cfb\u7edf\u6240\u4e0d\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u3002\u201d\u201c\u8fd9\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u3002\u201d\n\u8ba1\u7b97\u673a\u4e00\u5411\u64c5\u957f\u5904\u7406\u6570\u5b57\u3002\u8ba1\u7b97\u673a\u4ee3\u6570\u7cfb\u7edf\u5c06\u6570\u5341\u6216\u6570\u767e\u79cd\u7b97\u6cd5\u4e0e\u9884\u8bbe\u6307\u4ee4\u76f8\u7ed3\u5408\u3002\u5b83\u4eec\u901a\u5e38\u662f\u4e25\u683c\u7684\u89c4\u5219\u8ffd\u968f\u8005\uff0c\u65e8\u5728\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\uff0c\u4f46\u65e0\u6cd5\u5bb9\u7eb3\u5f02\u5e38\u3002\u5bf9\u4e8e\u8bb8\u591a\u7b26\u53f7\u95ee\u9898\uff0c\u5b83\u4eec\u4ea7\u751f\u7684\u6570\u503c\u89e3\u8db3\u591f\u63a5\u8fd1\u5de5\u7a0b\u548c\u7269\u7406\u5e94\u7528\u3002\n\u795e\u7ecf\u7f51\u7edc\u662f\u4e0d\u540c\u7684\u3002\u4ed6\u4eec\u6ca1\u6709\u56fa\u5b9a\u7684\u89c4\u5219\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u5728\u5927\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3-\u8d8a\u5927\u8d8a\u597d-\u5e76\u4f7f\u7528\u7edf\u8ba1\u6570\u636e\u505a\u51fa\u975e\u5e38\u597d\u7684\u8fd1\u4f3c\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4ed6\u4eec\u5b66\u4e60\u4ec0\u4e48\u80fd\u4ea7\u751f\u6700\u597d\u7684\u7ed3\u679c\u3002\u8bed\u8a00\u7ffb\u8bd1\u7a0b\u5e8f\u7279\u522b\u51fa\u8272\uff1a\u5b83\u4eec\u4e0d\u662f\u9010\u5b57\u7ffb\u8bd1\uff0c\u800c\u662f\u5728\u6574\u4e2a\u6587\u672c\u7684\u4e0a\u4e0b\u6587\u4e2d\u7ffb\u8bd1\u77ed\u8bed\u3002Facebook\u7684\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u8fd9\u662f\u89e3\u51b3\u7b26\u53f7\u6570\u5b66\u95ee\u9898\u7684\u4f18\u52bf\uff0c\u800c\u4e0d\u662f\u969c\u788d\u3002\u5b83\u7ed9\u4e86\u7a0b\u5e8f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u81ea\u7531\u3002\n\u8fd9\u79cd\u81ea\u7531\u5bf9\u4e8e\u67d0\u4e9b\u5f00\u653e\u5f0f\u95ee\u9898\u7279\u522b\u6709\u7528\uff0c\u6bd4\u5982\u6574\u5408\u3002\u6570\u5b66\u5bb6\u4e2d\u6709\u4e00\u53e5\u8001\u8bdd\uff1a\u201c\u5dee\u5f02\u5316\u662f\u529b\u5b66\uff0c\u79ef\u5206\u662f\u827a\u672f\u3002\u201d\u8fd9\u610f\u5473\u7740\u4e3a\u4e86\u6c42\u51fa\u51fd\u6570\u7684\u5bfc\u6570\uff0c\u4f60\u53ea\u9700\u9075\u5faa\u4e00\u4e9b\u5b9a\u4e49\u660e\u786e\u7684\u6b65\u9aa4\u3002\u4f46\u662f\u8981\u627e\u5230\u4e00\u4e2a\u79ef\u5206\uff0c\u901a\u5e38\u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u4e1c\u897f\uff0c\u4e00\u4e9b\u66f4\u63a5\u8fd1\u76f4\u89c9\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u8ba1\u7b97\u3002\n\u8138\u4e66\u5c0f\u7ec4\u6000\u7591\u8fd9\u79cd\u76f4\u89c9\u53ef\u4ee5\u7528\u6a21\u5f0f\u8bc6\u522b\u6765\u8fd1\u4f3c\u3002\u201c\u79ef\u5206\u662f\u6570\u5b66\u4e2d\u6700\u50cf\u6a21\u5f0f\u8bc6\u522b\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u201d\u67e5\u987f\u8bf4\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4e0d\u7406\u89e3\u51fd\u6570\u7684\u4f5c\u7528\u6216\u53d8\u91cf\u7684\u542b\u4e49\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u53d1\u5c55\u4e86\u4e00\u79cd\u672c\u80fd\u3002\u795e\u7ecf\u7f51\u7edc\u5f00\u59cb\u611f\u89c9\u5230\u4ec0\u4e48\u662f\u6709\u6548\u7684\uff0c\u5373\u4f7f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n\u4f8b\u5982\uff0c\u4e00\u4f4d\u6570\u5b66\u5bb6\u88ab\u8981\u6c42\u5bf9$LaTeX yy^{\\Prime}\\Left(y^{2}+1\\right)^{-1/2}$}\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u8fdb\u884c\u79ef\u5206\uff0c\u4ed6\u4f1a\u76f4\u89c2\u5730\u6000\u7591\u57fa\u5143-\u5373\u88ab\u5fae\u5206\u4ee5\u4ea7\u751f\u79ef\u5206\u7684\u8868\u8fbe\u5f0f-\u5305\u542b\u770b\u8d77\u6765\u50cfy\u00b2x+1\u7684\u5e73\u65b9\u6839\u7684\u4e1c\u897f\u3002\n\u4e3a\u4e86\u8ba9\u795e\u7ecf\u7f51\u7edc\u50cf\u6570\u5b66\u5bb6\u4e00\u6837\u5904\u7406\u7b26\u53f7\uff0c\u67e5\u987f\u548c\u5170\u666e\u5c14\u9996\u5148\u5c06\u6570\u5b66\u8868\u8fbe\u5f0f\u7ffb\u8bd1\u6210\u66f4\u6709\u7528\u7684\u5f62\u5f0f\u3002\u4ed6\u4eec\u6700\u7ec8\u5c06\u5b83\u4eec\u91cd\u65b0\u89e3\u91ca\u4e3a\u6811-\u4e00\u79cd\u5728\u7cbe\u795e\u4e0a\u7c7b\u4f3c\u4e8e\u56fe\u8868\u53e5\u5b50\u7684\u5f62\u5f0f\u3002\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u548c\u9664\u6cd5\u7b49\u6570\u5b66\u8fd0\u7b97\u7b26\u6210\u4e3a\u6811\u4e0a\u7684\u8fde\u63a5\u70b9\u3002\u50cf\u5347\u5e42\u6216\u4e09\u89d2\u51fd\u6570\u8fd9\u6837\u7684\u8fd0\u7b97\u4e5f\u662f\u5982\u6b64\u3002\u53c2\u6570(\u53d8\u91cf\u548c\u6570\u5b57)\u53d8\u6210\u4e86\u53f6\u5b50\u3002\u9664\u4e86\u6781\u5c11\u6570\u4f8b\u5916\uff0c\u6811\u7ed3\u6784\u6355\u83b7\u4e86\u64cd\u4f5c\u53ef\u4ee5\u5d4c\u5957\u5728\u8f83\u957f\u8868\u8fbe\u5f0f\u4e2d\u7684\u65b9\u5f0f\u3002\n\u5170\u666e\u5c14\u8bf4\uff1a\u201c\u5f53\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u5927\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u7531\u8f83\u5c0f\u7684\u51fd\u6570\u7ec4\u6210\u7684\uff0c\u5e76\u4e14\u5bf9\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u662f\u4ec0\u4e48\u6709\u4e00\u4e9b\u76f4\u89c9\u3002\u201d\u201c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u6a21\u578b\u8bd5\u56fe\u4ece\u7b26\u53f7\u4e2d\u627e\u5230\u89e3\u51b3\u65b9\u6848\u7684\u7ebf\u7d22\u3002\u201d\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0e\u4eba\u4eec\u89e3\u51b3\u79ef\u5206\u7684\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u5b9e\u9645\u4e0a\u6240\u6709\u7684\u6570\u5b66\u95ee\u9898\u90fd\u662f\u901a\u8fc7\u5c06\u5b83\u4eec\u5f52\u7ed3\u4e3a\u4ed6\u4eec\u4ee5\u524d\u89e3\u51b3\u8fc7\u7684\u53ef\u8bc6\u522b\u7684\u5b50\u95ee\u9898\u6765\u89e3\u51b3\u7684\u3002\n\u5728\u63d0\u51fa\u8fd9\u4e00\u67b6\u6784\u540e\uff0c\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u4e00\u7ec4\u521d\u7b49\u51fd\u6570\u751f\u6210\u4e86\u51e0\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u603b\u8ba1\u7ea62\u4ebf\u4e2a(\u6811\u5f62)\u65b9\u7a0b\u548c\u89e3\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u5c06\u8fd9\u4e9b\u6570\u636e\u201c\u8f93\u5165\u201d\u5230\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u4e86\u89e3\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4ec0\u4e48\u3002\n\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u662f\u65f6\u5019\u770b\u770b\u7f51\u80fd\u505a\u4e9b\u4ec0\u4e48\u4e86\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5bf9\u5b83\u8fdb\u884c\u4e865000\u4e2a\u65b9\u7a0b\u5f0f\u7684\u6d4b\u8bd5\uff0c\u8fd9\u6b21\u6ca1\u6709\u7b54\u6848\u3002(\u8fd9\u4e9b\u6d4b\u8bd5\u95ee\u9898\u90fd\u6ca1\u6709\u88ab\u5f52\u7c7b\u4e3a\u201c\u65e0\u6cd5\u89e3\u51b3\u201d\u3002)\u3002\u795e\u7ecf\u7f51\u7edc\u4ee5\u4f18\u5f02\u7684\u6210\u7ee9\u901a\u8fc7\u4e86\u6d4b\u8bd5\uff1a\u5b83\u6210\u529f\u5730\u83b7\u5f97\u4e86\u7edd\u5927\u591a\u6570\u95ee\u9898\u7684\u6b63\u786e\u89e3\u51b3\u65b9\u6848--\u7cbe\u786e\u5ea6\u548c\u5168\u9762\u6027\u3002\u5b83\u7279\u522b\u64c5\u957f\u96c6\u6210\uff0c\u89e3\u51b3\u4e86\u51e0\u4e4e100%\u7684\u6d4b\u8bd5\u95ee\u9898\uff0c\u4f46\u5728\u5e38\u5fae\u5206\u65b9\u7a0b\u65b9\u9762\u7565\u663e\u900a\u8272\u3002\n\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709\u7684\u95ee\u9898\uff0c\u7a0b\u5e8f\u53ea\u7528\u4e86\u4e0d\u52301\u79d2\u7684\u65f6\u95f4\u5c31\u751f\u6210\u4e86\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u79ef\u5206\u95ee\u9898\u4e0a\uff0c\u5728\u901f\u5ea6\u548c\u7cbe\u5ea6\u4e0a\u5747\u4f18\u4e8e\u6d41\u884c\u8f6f\u4ef6\u5305MATHEMICA\u548cMatlab\u4e2d\u7684\u4e00\u4e9b\u6c42\u89e3\u5668\u3002Facebook\u56e2\u961f\u62a5\u544a\u8bf4\uff0c\u795e\u7ecf\u7f51\u7edc\u4e3a\u8fd9\u4e9b\u5546\u4e1a\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u63d0\u4f9b\u4e86\u89e3\u51b3\u65b9\u6848\u3002\n\u5c3d\u7ba1\u6709\u4e86\u8fd9\u4e9b\u7ed3\u679c\uff0c\u6570\u5b66\u5bb6\u7f57\u6770\u00b7\u683c\u8499\u68ee(Roger Germundsson)\u5bf9\u8fd9\u79cd\u76f4\u63a5\u6bd4\u8f83\u63d0\u51fa\u4e86\u5f02\u8bae\u3002\u683c\u8499\u68ee\u662f\u5236\u9020\u6570\u5b66\u8f6f\u4ef6\u7684Wolfram\u516c\u53f8\u7814\u53d1\u90e8\u95e8\u7684\u8d1f\u8d23\u4eba\u3002Facebook\u7684\u7814\u7a76\u4eba\u5458\u5c06\u4ed6\u4eec\u7684\u65b9\u6cd5\u4e0e\u6570\u5b66\u8f6f\u4ef6\u7684\u51e0\u4e2a\u529f\u80fd--\u79ef\u5206\u7684\u201c\u79ef\u5206\u201d\u548c\u5fae\u5206\u65b9\u7a0b\u7684\u201cDSolve\u201d--\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u4f46\u6570\u5b66\u8f6f\u4ef6\u7684\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u6210\u767e\u4e0a\u5343\u4e2a\u5176\u4ed6\u7684\u6c42\u89e3\u5de5\u5177\u3002\nGermundsson\u8fd8\u6307\u51fa\uff0c\u5c3d\u7ba1\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u89c4\u6a21\u5de8\u5927\uff0c\u4f46\u5b83\u53ea\u5305\u62ec\u5177\u6709\u4e00\u4e2a\u53d8\u91cf\u7684\u65b9\u7a0b\uff0c\u5e76\u4e14\u53ea\u5305\u62ec\u90a3\u4e9b\u57fa\u4e8e\u521d\u7b49\u51fd\u6570\u7684\u65b9\u7a0b\u3002\u201c\u8fd9\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u53ef\u80fd\u7684\u8868\u8fbe\uff0c\u201d\u4ed6\u8bf4\u3002\u795e\u7ecf\u7f51\u7edc\u6ca1\u6709\u5728\u7269\u7406\u548c\u91d1\u878d\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u66f4\u6df7\u4e71\u7684\u51fd\u6570\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6bd4\u5982\u8bef\u5dee\u51fd\u6570\u6216\u8d1d\u585e\u5c14\u51fd\u6570\u3002(Facebook\u5c0f\u7ec4\u8868\u793a\uff0c\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u8fdb\u884c\u975e\u5e38\u7b80\u5355\u7684\u4fee\u6539\u3002)\u3002\n\u52a0\u5dde\u5927\u5b66\u5723\u5df4\u5df4\u62c9\u5206\u6821(University of California\uff0cSanta Barbara)\u6570\u5b66\u5bb6\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u5409\u5e03(Fr\u00e9d\u00e9ric Gibou)\u7814\u7a76\u8fc7\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u89e3\u51b3\u504f\u5fae\u5206\u65b9\u7a0b\u7684\u65b9\u6cd5\uff0c\u4ed6\u5e76\u4e0d\u76f8\u4fe1Facebook\u5c0f\u7ec4\u7684\u795e\u7ecf\u7f51\u7edc\u662f\u4e07\u65e0\u4e00\u5931\u7684\u3002\u201c\u4f60\u9700\u8981\u6709\u4fe1\u5fc3\uff0c\u5b83\u4f1a\u4e00\u76f4\u8d77\u4f5c\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u67d0\u4e9b\u9009\u5b9a\u7684\u95ee\u9898\u4e0a\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f46\u8fd9\u91cc\u7684\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u201d\u5176\u4ed6\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\uff0cFacebook\u56e2\u961f\u7684\u795e\u7ecf\u7f51\u7edc\u5e76\u4e0d\u771f\u6b63\u7406\u89e3\u6570\u5b66\uff1b\u5b83\u66f4\u591a\u7684\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u731c\u6d4b\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u4eec\u4e00\u81f4\u8ba4\u4e3a\u65b0\u7684\u65b9\u6cd5\u5c06\u88ab\u8bc1\u660e\u662f\u6709\u7528\u7684\u3002Germundsson\u548cGibou\u76f8\u4fe1\u795e\u7ecf\u7f51\u7edc\u5c06\u5728\u4e0b\u4e00\u4ee3\u7b26\u53f7\u6570\u5b66\u89e3\u7b97\u5668\u7684\u8c08\u5224\u684c\u4e0a\u5360\u6709\u4e00\u5e2d\u4e4b\u5730-\u5b83\u5c06\u53ea\u662f\u4e00\u5f20\u5927\u684c\u5b50\u3002\u201c\u6211\u8ba4\u4e3a\u8fd9\u5c06\u662f\u4f17\u591a\u5de5\u5177\u4e2d\u7684\u4e00\u4e2a\uff0c\u201dGermundsson\u8bf4\u3002\n\u9664\u4e86\u89e3\u51b3\u7b26\u53f7\u6570\u5b66\u8fd9\u4e00\u5177\u4f53\u95ee\u9898\u5916\uff0cFacebook\u5c0f\u7ec4\u7684\u5de5\u4f5c\u4e5f\u662f\u8fd9\u79cd\u65b9\u6cd5\u539f\u7406\u548c\u529b\u91cf\u7684\u4ee4\u4eba\u9f13\u821e\u7684\u8bc1\u660e\u3002\u5251\u6865\u5927\u5b66\u6570\u5b66\u5bb6\u5b89\u5fb7\u65af\u00b7\u6c49\u68ee(Anders Hansen)\u8bf4\uff1a\u201c\u5982\u679c\u8fd9\u4e9b\u6280\u672f\u80fd\u8ba9\u6570\u5b66\u5bb6\u89e3\u51b3\u4eba\u4eec\u4ee5\u524d\u89e3\u51b3\u4e0d\u4e86\u7684\u95ee\u9898\uff0c\u4ed6\u4eec\u603b\u4f53\u4e0a\u4f1a\u5370\u8c61\u975e\u5e38\u6df1\u523b\u3002\u201d\n\u795e\u7ecf\u7f51\u7edc\u7684\u53e6\u4e00\u4e2a\u53ef\u80fd\u7684\u63a2\u7d22\u65b9\u5411\u662f\u5f00\u53d1\u81ea\u52a8\u5b9a\u7406\u751f\u6210\u5668\u3002\u5170\u666e\u5c14\u8bf4\uff0c\u6570\u5b66\u5bb6\u4eec\u6b63\u5728\u8d8a\u6765\u8d8a\u591a\u5730\u7814\u7a76\u5982\u4f55\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u6765\u751f\u6210\u65b0\u7684\u5b9a\u7406\u548c\u8bc1\u660e\uff0c\u5c3d\u7ba1\u201c\u6700\u5148\u8fdb\u7684\u6280\u672f\u8fd8\u6ca1\u6709\u53d6\u5f97\u5f88\u5927\u7684\u8fdb\u5c55\u201d\u3002\u201c\u8fd9\u662f\u6211\u4eec\u6b63\u5728\u8003\u8651\u7684\u95ee\u9898\u3002\u201d\n\u67e5\u987f\u63cf\u8ff0\u4e86\u81f3\u5c11\u4e24\u79cd\u4ed6\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u63a8\u52a8\u4eba\u5de5\u667a\u80fd\u5b9a\u7406\u53d1\u73b0\u8005\u5411\u524d\u53d1\u5c55\u3002\u9996\u5148\uff0c\u5b83\u53ef\u4ee5\u5145\u5f53\u4e00\u79cd\u6570\u5b66\u5bb6\u7684\u52a9\u624b\uff0c\u901a\u8fc7\u8bc6\u522b\u5df2\u77e5\u731c\u60f3\u4e2d\u7684\u6a21\u5f0f\u6765\u5e2e\u52a9\u89e3\u51b3\u73b0\u6709\u7684\u95ee\u9898\u3002\u5176\u6b21\uff0c\u673a\u5668\u53ef\u80fd\u4f1a\u751f\u6210\u6570\u5b66\u5bb6\u9057\u6f0f\u7684\u6f5c\u5728\u53ef\u8bc1\u660e\u7ed3\u679c\u7684\u5217\u8868\u3002\u201c\u6211\u4eec\u76f8\u4fe1\uff0c\u5982\u679c\u4f60\u80fd\u505a\u6574\u5408\uff0c\u4f60\u5e94\u8be5\u80fd\u505a\u8bc1\u660e\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4e3a\u8bc1\u636e\u63d0\u4f9b\u5e2e\u52a9\u6700\u7ec8\u53ef\u80fd\u662f\u6740\u624b\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u8d85\u51fa\u4e86Facebook\u56e2\u961f\u6240\u63cf\u8ff0\u7684\u8303\u56f4\u3002\u8bc1\u660e\u5b9a\u7406\u7684\u4e00\u79cd\u5e38\u89c1\u65b9\u6cd5\u662f\u62ff\u51fa\u4e00\u4e2a\u53cd\u4f8b\u6765\u8bc1\u660e\u5b83\u4e0d\u6210\u7acb\u3002\u6709\u4e00\u5929\uff0c\u8fd9\u7c7b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4f1a\u72ec\u4e00\u65e0\u4e8c\u5730\u9002\u5408\u8fd9\u9879\u4efb\u52a1\uff1a\u627e\u5230\u4e00\u4e2a\u610f\u5916\u7684\u6273\u624b\u6254\u8fdb\u673a\u5668\u91cc\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u663e\u793a\u51fa\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u662f\u795e\u7ecf\u7f51\u7edc\u6700\u4ee4\u4eba\u4e0d\u5b89\u7684\u65b9\u9762\u4e4b\u4e00\uff1a\u6ca1\u6709\u4eba\u771f\u6b63\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8bad\u7ec3\u6bd4\u7279\u4ece\u4e00\u7aef\u8fdb\u5165\uff0c\u9884\u6d4b\u6bd4\u7279\u4ece\u53e6\u4e00\u7aef\u51fa\u6765\uff0c\u4f46\u5728\u8fd9\u4e24\u8005\u4e4b\u95f4\u53d1\u751f\u4e86\u4ec0\u4e48-\u4f7f\u795e\u7ecf\u7f51\u7edc\u6210\u4e3a\u5982\u6b64\u597d\u7684\u731c\u6d4b\u8005\u7684\u786e\u5207\u8fc7\u7a0b-\u4ecd\u7136\u662f\u4e00\u4e2a\u5173\u952e\u7684\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u7b26\u53f7\u6570\u5b66\u663e\u7136\u4e0d\u90a3\u4e48\u795e\u79d8\u3002\u201c\u6211\u4eec\u77e5\u9053\u6570\u5b66\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u201d\u67e5\u987f\u8bf4\u3002\u201c\u901a\u8fc7\u4f7f\u7528\u7279\u5b9a\u7684\u6570\u5b66\u95ee\u9898\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u770b\u770b\u673a\u5668\u5728\u54ea\u91cc\u6210\u529f\uff0c\u5728\u54ea\u91cc\u5931\u8d25\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e86\u89e3\u795e\u7ecf\u7f51\u7edc\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u201d\n\u5f88\u5feb\uff0c\u4ed6\u548c\u5170\u666e\u5c14\u8ba1\u5212\u5c06\u6570\u5b66\u8868\u8fbe\u5f0f\u8f93\u5165\u4ed6\u4eec\u7684\u7f51\u7edc\uff0c\u5e76\u8ffd\u8e2a\u7a0b\u5e8f\u5bf9\u8868\u8fbe\u5f0f\u7684\u5fae\u5c0f\u53d8\u5316\u7684\u53cd\u5e94\u65b9\u5f0f\u3002\u6620\u5c04\u8f93\u5165\u89e6\u53d1\u5668\u7684\u53d8\u5316\u5728\u8f93\u51fa\u4e2d\u7684\u53d8\u5316\u53ef\u80fd\u6709\u52a9\u4e8e\u63ed\u793a\u795e\u7ecf\u7f51\u7edc\u662f\u5982\u4f55\u8fd0\u884c\u7684\u3002\nZaremba\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u7406\u89e3\u662f\u6559\u6388\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u63a8\u7406\u5e76\u771f\u6b63\u7406\u89e3\u4ed6\u4eec\u56de\u7b54\u7684\u95ee\u9898\u7684\u6f5c\u5728\u4e00\u6b65\u3002\u201c\u5728\u6570\u5b66\u4e2d\uff0c\u5f88\u5bb9\u6613\u79fb\u52a8\u6307\u9488\uff0c\u770b\u770b(\u795e\u7ecf\u7f51\u7edc)\u5728\u8868\u60c5\u53d8\u5f97\u4e0d\u540c\u65f6\u5de5\u4f5c\u5f97\u6709\u591a\u597d\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u771f\u6b63\u4e86\u89e3\u5176\u4e2d\u7684\u9053\u7406\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b54\u6848\uff0c\u201c\u4ed6\u8bf4\u3002\u201c\u7ed3\u679c\u5c06\u662f\u76f8\u5f53\u6709\u529b\u7684\u3002\u201d", "note_en": "More than 70 years ago, researchers at the forefront of artificial intelligence research introduced neural networks as a revolutionary way to think about how the brain works. In the human brain, networks of billions of connected neurons make sense of sensory data, allowing us to learn from experience. Artificial neural networks can also filter huge amounts of data through connected layers to make predictions and recognize patterns, following rules they taught themselves.\n By now, people treat neural networks as a kind of AI panacea, capable of solving tech challenges that can be restated as a problem of pattern recognition. They provide natural-sounding language translation. Photo apps use them to recognize and categorize recurrent faces in your collection. And programs driven by neural nets have defeated the world\u2019s best players at  games including Go and chess.\n However, neural networks have always lagged in one conspicuous area: solving difficult symbolic math problems. These include the hallmarks of calculus courses, like integrals or ordinary differential equations. The hurdles arise from the nature of mathematics itself, which demands precise solutions. Neural nets instead tend to excel at probability. They learn to recognize patterns \u2014 which Spanish translation sounds best, or what your face looks like \u2014 and can generate new ones.\n The situation changed late last year when Guillaume Lample and Fran\u00e7ois Charton, a pair of computer scientists working in Facebook\u2019s AI research group in Paris, unveiled a successful first approach to solving symbolic math problems with neural networks.  Their method didn\u2019t involve number crunching or numerical approximations. Instead, they played to the strengths of neural nets, reframing the math problems in terms of a problem that\u2019s practically solved: language translation.\n \u201cWe both majored in math and statistics,\u201d said Charton, who studies applications of AI to mathematics. \u201cMath was our original language.\u201d\n As a result, Lample and Charton\u2019s program could produce precise solutions to complicated integrals and differential equations \u2014 including some that stumped popular math software packages with explicit problem-solving rules built in.\n  The new program exploits one of the major advantages of neural networks: They develop their own implicit rules. As a result, \u201cthere\u2019s no separation between the rules and the exceptions,\u201d said  Jay McClelland, a psychologist at Stanford University who uses neural nets to model how people learn math. In practice, this means that the program didn\u2019t stumble over the hardest integrals. In theory, this kind of approach could derive unconventional \u201crules\u201d that could make headway on problems that are currently unsolvable, by a person or a machine \u2014 mathematical problems like discovering new proofs, or understanding the nature of neural networks themselves.\n Not that that\u2019s happened yet, of course. But it\u2019s clear that the team has answered the decades-old question \u2014 can AI do symbolic math? \u2014 in the affirmative. \u201cTheir models are well established. The algorithms are well established. They postulate the problem in a clever way,\u201d said  Wojciech Zaremba, co-founder of the AI research group OpenAI.\n \u201cThey did succeed in coming up with neural networks that could solve problems that were beyond the scope of the rule-following machine system,\u201d McClelland said. \u201cWhich is very exciting.\u201d\n  Computers have always been good at crunching numbers. Computer algebra systems combine dozens or hundreds of algorithms hard-wired with preset instructions. They\u2019re typically strict rule followers designed to perform a specific operation but unable to accommodate exceptions. For many symbolic problems, they produce numerical solutions that are close enough for engineering and physics applications.\n Neural nets are different. They don\u2019t have hard-wired rules. Instead, they train on large data sets \u2014 the larger the better \u2014 and use statistics to make very good approximations. In the process, they learn what produces the best outcomes. Language translation programs particularly shine: Instead of translating word by word, they translate phrases in the context of the whole text. The Facebook researchers saw that as an advantage to solving symbolic math problems, not a hindrance. It gives the program a kind of problem-solving freedom.\n That freedom is especially useful for certain open-ended problems, like integration. There\u2019s an old saying among mathematicians: \u201cDifferentiation is mechanics; integration is art.\u201d It means that in order to find the derivative of a function, you only have to follow some well-defined steps. But to find an integral often requires something else, something that\u2019s closer to intuition than calculation.\n  The Facebook group suspected that this intuition could be approximated using pattern recognition. \u201cIntegration is one of the most pattern recognition-like problems in math,\u201d Charton said. So even though the neural net may not understand what functions do or what variables mean, they do develop a kind of instinct. The neural net begins to sense what works, even without knowing why.\n For example, a mathematician asked to integrate an expression like $latex y y^{\\prime}\\left(y^{2}+1\\right)^{-1 / 2}$\u00a0will intuitively suspect that the primitive \u2014 that is, the expression that was differentiated to give rise to the integral \u2014 contains something that looks like the square root of  y\u00b2\u00a0+ 1.\n To allow a neural net to process the symbols like a mathematician, Charton and Lample began by translating mathematical expressions into more useful forms. They ended up reinterpreting them as trees \u2014 a format similar in spirit to a diagrammed sentence. Mathematical operators such as addition, subtraction, multiplication and division became junctions on the tree. So did operations like raising to a power, or trigonometric functions. The arguments (variables and numbers) became leaves. The tree structure, with very few exceptions, captured the way operations can be nested inside longer expressions.\n \u201cWhen we see a large function, we can see that it\u2019s composed of smaller functions and have some intuition about what the solution can be,\u201d Lample said. \u201cWe think the model tries to find clues in the symbols about what the solution can be.\u201d He said this process parallels how people solve integrals \u2014 and really all math problems \u2014 by reducing them to recognizable sub-problems they\u2019ve solved before.\n  After coming up with this architecture, the researchers used a bank of elementary functions to generate several training data sets totaling about 200 million (tree-shaped) equations and solutions. They then \u201cfed\u201d that data to the neural network, so it could learn what solutions to these problems look like.\n After the training, it was time to see what the net could do. The computer scientists gave it a test set of 5,000 equations, this time without the answers. (None of these test problems were classified as \u201cunsolvable.\u201d) The neural net passed with flying colors: It managed to get the right solutions \u2014 precision and all \u2014 to the vast majority of problems. It particularly excelled at integration, solving nearly 100% of the test problems, but it was slightly less successful at ordinary differential equations.\n For almost all the problems, the program took less than 1 second to generate correct solutions. And on the integration problems, it outperformed some solvers in the popular software packages Mathematica and Matlab in terms of speed and accuracy. The Facebook team reported that the neural net produced solutions to problems that neither of those commercial solvers could tackle.\n  Despite the results, the mathematician  Roger Germundsson, who heads research and development at Wolfram, which makes Mathematica, took issue with the direct comparison. The Facebook researchers compared their method to only a few of Mathematica\u2019s functions \u2014\u201cintegrate\u201d for integrals and \u201cDSolve\u201d for differential equations \u2014 but Mathematica users can access hundreds of other solving tools.\n Germundsson also noted that despite the enormous size of the training data set, it only included equations with one variable, and only those based on elementary functions. \u201cIt was a thin slice of possible expressions,\u201d he said. The neural net wasn\u2019t tested on messier functions often used in physics and finance, like error functions or Bessel functions. (The Facebook group said it could be, in future versions, with very simple modifications.)\n And  Fr\u00e9d\u00e9ric Gibou, a mathematician at the University of California, Santa Barbara who has investigated ways to use neural nets to solve partial differential equations, wasn\u2019t convinced that the Facebook group\u2019s neural net was infallible. \u201cYou need to be confident that it\u2019s going to work all the time, and not just on some chosen problems,\u201d he said, \u201cand that\u2019s not the case here.\u201d Other critics have noted that the Facebook group\u2019s neural net doesn\u2019t really understand the math; it\u2019s more of an exceptional guesser.\n Still, they agree that the new approach will prove useful. Germundsson and Gibou believe neural nets will have a seat at the table for next-generation symbolic math solvers \u2014 it will just be a big table. \u201cI think that it will be one of many tools,\u201d Germundsson said.\n Besides solving this specific problem of symbolic math, the Facebook group\u2019s work is an encouraging proof of principle and of the power of this kind of approach. \u201cMathematicians will in general be very impressed if these techniques allow them to solve problems that people could not solve before,\u201d said  Anders Hansen, a mathematician at the University of Cambridge.\n  Another possible direction for the neural net to explore is the development of automated theorem generators. Mathematicians are increasingly investigating ways to use AI to generate new theorems and proofs, though \u201cthe state of the art has not made a lot of progress,\u201d Lample said. \u201cIt\u2019s something we\u2019re looking at.\u201d\n Charton describes at least two ways their approach could move AI theorem finders forward. First, it could act as a kind of mathematician\u2019s assistant, offering assistance on existing problems by identifying patterns in known conjectures. Second, the machine could generate a list of potentially provable results that mathematicians have missed. \u201cWe believe that if you can do integration, you should be able to do proving,\u201d he said.\n Offering assistance for proofs may ultimately be the killer app, even beyond what the Facebook team described. One common way to disprove a theorem is to come up with a counterexample that shows it can\u2019t hold. And that\u2019s a task that these kinds of neural nets may one day be uniquely suited for: finding an unexpected wrench to throw in the machine.\n Another unsolved problem where this approach shows promise is one of the most disturbing aspects of neural nets: No one really understands how they work. Training bits enter at one end and prediction bits emerge from the other, but what happens in between \u2014 the exact process that makes neural nets into such good guessers \u2014 remains a critical open question.\n Symbolic math, on the other hand, is decidedly less mysterious. \u201cWe know how math works,\u201d said Charton. \u201cBy using specific math problems as a test to see where machines succeed and where they fail, we can learn how neural nets work.\u201d\n  Soon, he and Lample plan to feed mathematical expressions into their networks and trace the way the program responds to small changes in the expressions. Mapping how changes in the input trigger changes in the output might help expose how the neural nets operate.\n Zaremba sees that kind of understanding as a potential step toward teaching neural nets to reason and to actually understand the questions they\u2019re answering. \u201cIt\u2019s easy in math to move the needle and see how well [the neural network] works if expressions are becoming different. We might truly learn the reasoning, instead of just the answer,\u201d he said. \u201cThe results would be quite powerful.\u201d", "posttime": "2020-05-26 14:37:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf\u7f51\u7edc,\u7b26\u53f7,mathematics", "title": "\u7b26\u53f7\u6570\u5b66\u6700\u7ec8\u5c48\u670d\u4e8e\u795e\u7ecf\u7f51\u7edc", "title_en": "Symbolic mathematics finally yields to neural networks", "transed": 1, "url": "https://www.quantamagazine.org/symbolic-mathematics-finally-yields-to-neural-networks-20200520/", "via": "", "real_tags": ["\u795e\u7ecf\u7f51\u7edc", "\u7b26\u53f7"]}, {"category": "", "categoryclass": "", "imagename": "6a1a880aadd399e65ac27617e8f60e83.jpg", "infoid": 1003776, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e8c\uff0c\u7535\u5b50\u548c\u4fe1\u606f\u5316\u90e8\u79d8\u4e66Ajay Prakash Sawhney\u5ba3\u5e03\u4e86\u8fd9\u4e00\u6d88\u606f\uff0c\u79f0\u5176\u4e3aAarogya Setu\u5e94\u7528\u7684\u201c\u6253\u5f00\u4e86\u5fc3\u810f\u201d\uff0c\u8be5\u5e94\u7528\u5728\u4e0d\u5230\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\u5df2\u7ecf\u79ef\u7d2f\u4e86\u8d85\u8fc71.14\u4ebf\u7528\u6237-\u8fd9\u662f\u5168\u7403\u524d\u6240\u672a\u6709\u7684\u89c4\u6a21\uff0c\u5141\u8bb8\u5de5\u7a0b\u5e08\u68c0\u67e5\u548c\u4fee\u8865\u4ee3\u7801\u3002\nAarogya Setu\u7684Android\u5e94\u7528\u7a0b\u5e8f\u6e90\u4ee3\u7801\u5c06\u4e8e\u5468\u4e8c\u5348\u591c(\u5f53\u5730\u65f6\u95f4)\u5728GitHub\u4e0a\u516c\u5e03\u3002\u7d22\u5c3c\u8868\u793a\uff0c\u653f\u5e9c\u8fd8\u5c06\u5411\u5b89\u5168\u4e13\u5bb6\u63d0\u4f9b\u6700\u9ad81325\u7f8e\u5143\u7684\u73b0\u91d1\u5956\u52b1\uff0c\u5956\u52b1\u4ed6\u4eec\u8bc6\u522b\u548c\u62a5\u544aAarogya Setu\u4ee3\u7801\u4e2d\u7684\u6f0f\u6d1e\u548c\u6f0f\u6d1e\u3002(\u8fd198%\u7684Aarogya Setu APP\u7528\u6237\u5728Android\u5e73\u53f0\u4e0a\u3002)\u3002\n\u51e0\u4f4d\u9690\u79c1\u548c\u5b89\u5168\u5021\u5bfc\u8005\uff0c\u4ee5\u53ca\u5370\u5ea6\u53cd\u5bf9\u515a\uff0c\u5728\u53d1\u73b0\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e00\u4e9b\u636e\u79f0\u5b58\u5728\u7684\u6f0f\u6d1e\u540e\uff0c\u6566\u4fc3\u653f\u5e9c\u516c\u5e03\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u4f9b\u516c\u4f17\u5ba1\u8ba1\u3002\u65b0\u5fb7\u91cc\u5f53\u65f6\u5bf9\u6b64\u4e0d\u5c51\u4e00\u987e\uff0c\u79f0\u5176\u4e3a\u529f\u80fd\u3002\nSawhney\u8bf4\uff0c\u4eca\u5929\u7684\u4e3e\u63aa\u5e94\u8be5\u4f1a\u51cf\u8f7b\u4eba\u4eec\u5bf9\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u7684\u62c5\u5fe7\uff0c\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u65e8\u5728\u5e2e\u52a9\u904f\u5236\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u7684\u4f20\u64ad\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0cSawhney\u8868\u793a\uff0c\u653f\u5e9c\u4e0d\u4f1a\u5f00\u6e90Aarogya Setu\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u62c5\u5fc3\u8fd9\u4f1a\u7ed9\u4e3b\u8981\u7531\u5fd7\u613f\u8005\u7ec4\u6210\u7684\u56e2\u961f\u5e26\u6765\u8d1f\u62c5\uff0c\u8be5\u56e2\u961f\u7684\u4efb\u52a1\u662f\u5f00\u53d1\u548c\u7ef4\u62a4\u8be5\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7535\u5b50\u548c\u4fe1\u606f\u6280\u672f\u90e8\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u5411\u5f00\u53d1\u8005\u793e\u533a\u5f00\u653e\u6e90\u4ee3\u7801\u610f\u5473\u7740\u6211\u4eec\u7ee7\u7eed\u81f4\u529b\u4e8e\u900f\u660e\u548c\u534f\u4f5c\u7684\u539f\u5219\u3002\u201dAarogya Setu\u7684\u53d1\u5c55\u662f\u653f\u5e9c\u3001\u4ea7\u4e1a\u754c\u3001\u5b66\u672f\u754c\u548c\u516c\u6c11\u5408\u4f5c\u7684\u4e00\u4e2a\u6770\u51fa\u4f8b\u5b50\u3002\n\u4e0e\u667a\u80fd\u624b\u673a\u4f9b\u5e94\u5546\u82f9\u679c(Apple)\u548c\u8c37\u6b4c(Google)\u5f00\u53d1\u7684\u8054\u7cfb\u4eba\u8ffd\u8e2a\u6280\u672f\u4e0d\u540c\uff0cAarogya Setu\u5c06\u67d0\u4e9b\u6570\u636e\u5b58\u50a8\u5728\u4e2d\u592e\u670d\u52a1\u5668\u4e2d\u3002\u5305\u62ec\u7814\u7a76\u4eba\u5458\u5df4\u8482\u65af\u7279\u00b7\u7f57\u4f2f\u7279(Baptiste Robert)\u5728\u5185\u7684\u9690\u79c1\u4e13\u5bb6\u66fe\u8fa9\u79f0\uff0c\u5982\u679c\u670d\u52a1\u5668\u88ab\u6cc4\u9732\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c06\u5bfc\u81f4\u51e0\u4e2a\u5370\u5ea6\u4eba\u7684\u654f\u611f\u7ec6\u8282\u6cc4\u9732\u3002\n\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5bf9Aarogya Setu\u5e94\u7528\u7a0b\u5e8f\u7684\u8bc4\u7ea7\u5df2\u964d\u81f31\uff0c\u900f\u660e\u5ea6\u548c\u81ea\u613f\u4f7f\u7528\u662f\u4e3b\u8981\u95ee\u9898\u3002\u5370\u5ea6\u4eba\u6c11\u515a\u653f\u5e9c\u5bf9\u6b64\u6b21\u964d\u7ea7\u6709\u4f55\u89e3\u91ca\uff1fpic.twitter.com/SbV6GcXd6c\u3002\n\u201c\u5f00\u6e90\u7684Aarogya Setu\u5bf9\u5370\u5ea6\u6765\u8bf4\u662f\u4e00\u9879\u72ec\u7279\u7684\u58ee\u4e3e\u3002\u5728\u4eca\u5929\u7684\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\uff0c\u653f\u5e9c\u8fd0\u8425\u7684\u667a\u5e93NITI Aayog\u7684\u9996\u5e2d\u6267\u884c\u5b98\u963f\u7c73\u5854\u5e03\u00b7\u5eb7\u5fb7(Amitabh Kant)\u8868\u793a\uff0c\u4e16\u754c\u4e0a\u6ca1\u6709\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u7684\u653f\u5e9c\u4ea7\u54c1\u50cf\u8fd9\u6837\u89c4\u6a21\u7684\u5f00\u6e90\u3002", "note_en": "Ajay Prakash Sawhney, secretary in the ministry of electronics and information technology, made the announcement on Tuesday, dubbing it as \u201copening the heart\u201d of Aarogya Setu app, which has  amassed over 114 million users in less than two months\u00a0\u2014 an unprecedented scale globally, to allow engineers to inspect and tinker with the code.\n The source code of Aarogya Setu\u2019s  Android   app will be published on  GitHub   at midnight Tuesday (local time).\u00a0Sawhney said the government will also offer cash prizes of up to $1,325 to security experts for identifying and reporting bugs and vulnerabilities in the code of Aarogya Setu. (Nearly 98% of Aarogya Setu app users are on Android platform.)\n  Several privacy and security advocates, as well as India\u2019s opposition party, had urged the government to release the code of the app for public auditing after  some alleged lapses in the app were found, which New Delhi dismissed as features at the time.\n Sawhney said today\u2019s move should allay people\u2019s concern with the app that is designed to help curb the spread of the coronavirus disease. Earlier this month, Sawhney said the government was not open sourcing Aarogya Setu app as it worried that it would overburden the team, comprising of mostly volunteers, that is tasked to develop and maintain the app.\n \u201cOpening the source code to the developer community signifies our continuing commitment to the principles of transparency and collaboration,\u201d the ministry of electronics and information technology\u00a0said in a statement. \u201cAarogya Setu\u2019s development has been a remarkable example of collaboration between government, industry, academia, and citizens.\u201d\n Aarogya Setu, unlike the contact tracing technology developed by  smartphone vendors Apple and Google, stores certain data in a centralized server. Privacy experts, including\u00a0researcher Baptiste Robert,  had argued that this approach would result in leakage of sensitive details of several Indians if that server was ever compromised.\n Aarogya Setu app&#39;s rating by MIT has been downgraded to 1 with transparency &amp; voluntary use being major concerns. Does the BJP Govt have any explanation for this downgrade?  pic.twitter.com/SbV6GcXd6c\n \u201cOpen-sourcing Aarogya Setu is a unique feat for India. No other government product anywhere in the world has been open-sourced at this scale,\u201d said Amitabh Kant, chief executive of government-run think-tank NITI Aayog, in a press conference today.", "posttime": "2020-05-26 14:37:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,\u5f00\u6e90,\u8054\u7cfb\u4eba,contact", "title": "\u5370\u5ea6\u8054\u7cfb\u4eba\u8ffd\u8e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f00\u6e90", "title_en": "India\u2019s contact tracing app is going open source", "transed": 1, "url": "https://techcrunch.com/2020/05/26/aarogya-setu-india-source-code-release/", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "\u5f00\u6e90", "\u8054\u7cfb\u4eba", "contact"]}, {"category": "", "categoryclass": "", "imagename": "ba037cf94202fa77edef8859a09080a7.png", "infoid": 1003774, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60f3\u770b\u770b\u6211\u4eec\u7684\u5176\u4ed6\u5185\u5bb9\uff0c\u5305\u62ec\u6e38\u620f\u8bbe\u8ba1\u3001\u89d2\u8272\u53d1\u5c55\u548c\u884c\u4e1a\u8d8b\u52bf\u5417\uff1f\u6211\u4eec\u6bcf\u5468\u53d1\u5e03\u4e00\u4efd\u5173\u4e8e\u6e38\u620f\u548c\u884c\u4e1a\u7684\u65f6\u4e8b\u901a\u8baf\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u201cNPC\u201d(\u975e\u73a9\u5bb6\u89d2\u8272)\u8fd9\u4e2a\u8bcd\u542c\u8d77\u6765\u6709\u4e9b\u7a7a\u6d1e\u3002\u4e5f\u8bb8\u662f\u7f29\u5199\u8bcd\u7684\u6a21\u68f1\u4e24\u53ef\uff0c\u6216\u8005\u8fd9\u4e2a\u8bcd\u7684\u5b57\u9762\u610f\u601d\u542c\u8d77\u6765\u50cf\u201c\u7a7a\u7684\u201d\u3002\u4f5c\u4e3a\u4e00\u540d\u53d9\u4e8b\u8bbe\u8ba1\u5e08\uff0c\u6211\u7684\u7406\u5ff5\u662f\u5c06NPC\u89c6\u4e3a\u7535\u5b50\u8868\u683c\u4e0a\u7684\u8d44\u4ea7\uff0c\u800c\u66f4\u50cf\u662f\u6211\u7684\u6f14\u5458\u9635\u5bb9\u3002\u6709\u5927\u6709\u5c0f\uff0c\u4f46\u6211\u76f8\u4fe1\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u8d4b\u4e88\u4efb\u4f55\u89d2\u8272\u7075\u9b42\u3002(\u751a\u81f3\u662f\u4e00\u4e2a\u7075\u9b42\u88ab\u67d0\u79cd\u90aa\u6076\u5deb\u5e08\u5077\u8d70\u7684\u89d2\u8272\uff01)\u3002\u591a\u82b1\u70b9\u529f\u592b\u5c31\u80fd\u8ba9\u4e00\u4e2a\u5c0fNPC\u53d8\u5f97\u66f4\u6709\u4eba\u60c5\u5473\uff0c\u8ba9\u6e38\u620f\u4e16\u754c\u53d8\u5f97\u66f4\u6709\u6d3b\u529b\u3002\n\u5f53\u6211\u60f3\u5230NPC\u65f6\uff0c\u6211\u7acb\u523b\u60f3\u5230\u7684\u662f\u5c45\u4f4f\u5728\u89d2\u8272\u626e\u6f14\u6e38\u620f\u57ce\u9547\u7684\u6751\u6c11\u3002\u4f60\u8d70\u8fdb\u6751\u5b50\uff0c\u62e6\u4f4f\u4e86\u4f60\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u6d41\u6d6a\u7684\u964c\u751f\u4eba\uff0c\u4ed6\u8bf4\u4e86\u8fd9\u6837\u7684\u8bdd\uff1a\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u5b83\u7684\u706b\u7130\u3002\n\u6211\u5728\u65e0\u6570\u4e2a\u6e38\u620f\u4e2d\u90fd\u770b\u5230\u8fc7\u8fd9\u6837\u7684\u5bf9\u8bdd\uff0c\u65e0\u8bba\u662f\u65e7\u7684\u8fd8\u662f\u65b0\u7684\u3002\u6211\u79f0\u4e4b\u4e3a\u201c\u9ab7\u9ac5\u8c08\u8bdd\u201d\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u9aa8\u67b6\u8c08\u8bdd\u901a\u5e38\u662f\u6709\u6548\u7684\u3002\u4ece\u6e38\u620f\u6027\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u6bb5\u5bf9\u8bdd\u7684\u76ee\u7684\u662f\u6c9f\u901a\u4e00\u4e2a\u91cd\u8981\u7684\u5267\u60c5\u70b9(\u5c0f\u9547\u88ab\u9f99\u88ad\u51fb)\uff0c\u5e76\u6307\u5bfc\u73a9\u5bb6\u7684\u4e0b\u4e00\u6b65\u884c\u52a8(\u53bb\u706b\u5c71\u627e\u9b54\u955c)\u3002\n\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u6f14\u594f\u8005\u548c\u4e00\u4e2a\u8bb2\u6545\u4e8b\u7684\u4eba\uff0c\u6211\u89c9\u5f97\u9ab7\u9ac5\u8bdd\u4e0d\u80fd\u4ee4\u4eba\u6ee1\u610f\u3002\u662f\u7684\uff0c\u5b83\u544a\u8bc9\u6211\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u4f46\u8fd9\u4e2a\u89d2\u8272\u5f88\u5bb9\u6613\u88ab\u9057\u5fd8\uff0c\u56e0\u6b64\u9519\u8fc7\u4e86\u4e00\u4e2a\u673a\u4f1a\u3002\u6545\u4e8b\u6e38\u620f\u7684\u610f\u4e49\u4e0d\u662f\u8ba9\u4f60\u6c89\u6d78\u5728\u5e7b\u60f3\u4e2d\u5417\uff1f\u50cf\u4e0a\u9762\u7684\u6751\u6c11\u8fd9\u6837\u5bb9\u6613\u88ab\u9057\u5fd8\u7684\u4eba\u7269\u4e0d\u4f1a\u589e\u52a0\u4f60\u7684\u4e16\u754c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u5bf9\u8bdd\u8bfb\u8d77\u6765\u592a\u50cf\u7b80\u5355\u7684\u6e38\u620f\u7ebf\u7d22\uff0cNPC\u53ef\u80fd\u4f1a\u504f\u79bb\u5b83\u3002\u5b83\u53ef\u4ee5\u628a\u73a9\u5bb6\u4ece\u6c89\u6d78\u4e2d\u5e26\u51fa\u6765\u3002\n\u5728\u4ece\u6e38\u620f\u8bbe\u8ba1\u7684\u89d2\u5ea6\u4e86\u89e3\u4e86\u5bf9NPC\u7684\u8981\u6c42\u540e\uff0c\u6211\u5728\u5199\u4ed6\u4eec\u7684\u5bf9\u8bdd\u65f6\u95ee\u4e86\u81ea\u5df1\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\n\u8fd9\u662f\u6211\u5173\u4e8e\u62df\u4eba\u5316(\u4e13\u5229\u7533\u8bf7)\u7684\u56db\u4e2a\u95ee\u9898\u3002\u5b83\u4eec\u53ef\u4ee5\u8ba9\u6211\u628a\u8089\uff0c\u5668\u5b98\uff0c\u6240\u6709\u5f88\u9177\u7684\u4eba\u7c7b\u4e1c\u897f\u653e\u5728\u9aa8\u67b6\u4e0a\u3002\u8ba9\u6211\u628a\u8fd9\u4e9b\u95ee\u9898\u9010\u4e00\u5206\u89e3\uff0c\u7136\u540e\u6211\u5c06\u5411\u4f60\u4eec\u5c55\u793a\u5982\u4f55\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ece\u800c\u5e26\u6765\u66f4\u4e30\u5bcc\u7684\u5bf9\u8bdd\u3002\n\u5f62\u5bb9\u8bcd\uff0c\u5f62\u5bb9\u8bcd\uff0c\u5f62\u5bb9\u8bcd\u3002\u5f53\u6211\u5f00\u59cb\u5199\u4e00\u4e2a\u4eba\u7269\u65f6\uff0c\u6211\u4f1a\u4ece\u63cf\u8ff0\u4eba\u7269\u6027\u683c\u7684\u8bcd\u8bed\u5f00\u59cb\u3002\u55a7\u95f9\u3001\u541d\u556c\u3001\u5bb3\u6015\u3001\u6e29\u6587\u5c14\u96c5\u3002\u5bf9\u4e8e\u6b21\u8981\u7684\u5b57\u7b26\uff0c\u53ef\u80fd\u53ea\u9700\u8981\u4e00\u4e2a\u5f62\u5bb9\u8bcd\uff0c\u4f46\u5bf9\u4e8e\u66f4\u91cd\u8981\u7684NPC\uff0c\u6211\u4f1a\u60f3\u51fa\u51e0\u4e2a\u3002\n\u8ba9\u6211\u4eec\u56de\u5230\u6211\u4eec\u7684\u6751\u6c11\u90a3\u91cc\u53bb\u5427\u3002\u5047\u8bbe\u5979\u7a7f\u7740\u4e00\u4ef6\u810f\u8863\u670d\uff0c\u80cc\u7740\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u91cd\u7684\u9ebb\u888b\u3002\u4ec0\u4e48\u6837\u7684\u5f62\u5bb9\u8bcd\u53ef\u4ee5\u63cf\u8ff0\u5979\u7684\u6027\u683c\uff1f\u4e5f\u8bb8\u5979\u56e0\u8fc7\u5ea6\u52b3\u7d2f\u800c\u6194\u60b4\uff0c\u6216\u8005\u5bf9\u81ea\u5df1\u7684\u8d23\u4efb\u8fc7\u4e8e\u81ea\u4fe1\uff0c\u6216\u8005\u6025\u4e8e\u4e3a\u6751\u5b50\u5c3d\u81ea\u5df1\u7684\u4e00\u4efd\u529b\u91cf\u3002\u6211\u4f1a\u8bf4\u5979\u5f88\u52c7\u6562\uff0c\u4e0d\u4f1a\u88ab\u4e00\u4e9b\u9f99\u5413\u5012\u7684\u3002\n\u6240\u4ee5\uff0c\u77e5\u9053\u5979\u5f88\u52c7\u6562\uff0c\u8ba9\u6211\u4eec\u91cd\u5199\u5979\u7684\u5bf9\u767d\u6765\u5c55\u73b0\u5979\u7684\u4e2a\u6027\u3002\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u5b83\u7684\u706b\u7130\u3002\n\u6751\u6c11\uff1a\u5982\u679c\u6211\u4e0d\u662f\u90a3\u4e48\u5fd9\u7740\u62c9\u7cae\u98df\uff0c\u6211\u5c31\u81ea\u5df1\u53bb\u62ff\u4e86\uff01\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u4f1a\u66f4\u6539\u73a9\u5bb6\u63a5\u6536\u7684\u4fe1\u606f\u3002\u6211\u4eec\u53ea\u662f\u5728\u589e\u6dfb\u4e2a\u6027\u3002\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5979\u662f\u4e2a\u52c7\u6562\u7684\u6751\u6c11\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\u4fe1\u7ed9\u5979\u3002\u5979\u4e0d\u6015\u4fae\u8fb1\u53ef\u6015\u7684\u751f\u7269\u3002\u5979\u751a\u81f3\u613f\u610f\u53bb\u6500\u767b\u706b\u7130\u5c71\uff0c\u8fd9\u542c\u8d77\u6765\u662f\u4e00\u4e2a\u76f8\u5f53\u5371\u9669\u7684\u6500\u767b\u4e4b\u5730\uff01\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u8d70\u5b8c\u5168\u76f8\u53cd\u7684\u8def\u7ebf\u3002\u6bd4\u65b9\u8bf4\uff0c\u8fd9\u4e2a\u6751\u6c11\u4e0d\u662f\u52c7\u6562\uff0c\u800c\u662f\u7b28\u624b\u7b28\u811a\u7684\u2026\u3002\n\u6751\u6c11\uff1a\u54e6\uff0c\u4e0d\uff01\u6211\u53c8\u6d12\u4e86\u4e00\u4e2a\u8c37\u7269\u888b\u3002\u6211\u7684\u4e3b\u4eba\u4f1a\u6740\u4e86\u6211\u7684\u3002\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u5b83\u7684\u706b\u7130\u3002\n\u5bf9\u4e8e\u6e38\u620f\u4e2d\u7684\u4e3b\u8981\u89d2\u8272\uff0c\u6211\u559c\u6b22\u7ed9\u4ed6\u4eec\u5199\u5b8c\u6574\u7684\u4f20\u8bb0\uff0c\u8fd9\u6837\u6211\u5c31\u80fd\u4e86\u89e3\u4ed6\u4eec\u7684\u80cc\u666f\u548c\u89c2\u70b9\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u52a9\u4e8e\u573a\u666f\u7684\u51fa\u73b0\u3002\u4f46\u6211\u6240\u6709\u7684\u4f20\u8bb0\u90fd\u662f\u4ee5\u6027\u683c\u7279\u5f81\u5f62\u5bb9\u8bcd\u5f00\u59cb\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e2e\u52a9\u6211\u8fc5\u901f\u4e86\u89e3\u4e00\u4e2a\u4eba\u7269\u3002\n\u5927\u591a\u6570\u4eba\u4e0e\u4ed6\u4eec\u7684\u4f34\u4fa3\u3001\u4ed6\u4eec\u7684\u8001\u677f\u3001\u4ed6\u4eec\u7684\u5ba0\u7269\u4ee5\u53ca\u4e0e\u964c\u751f\u4eba\u4ea4\u8c08\u7684\u65b9\u5f0f\u5404\u4e0d\u76f8\u540c\u3002\u6211\u5f88\u5c11\u79f0\u4e00\u4e2a\u5b8c\u5168\u964c\u751f\u7684\u4eba\u4e3a\u201c\u6211\u5b8c\u7f8e\u7684Widdle Fuzzball\u201d\uff0c\u6211\u4e5f\u4e0d\u4f1a\u8981\u6c42\u4e0e\u6211\u7684\u4f34\u4fa3\u901a\u8fc7Skype\u4f1a\u9762\u6765\u7ed9\u51fa\u201c\u5173\u4e8e\u7528\u9910\u5b89\u6392\u7684\u5efa\u8bbe\u6027\u610f\u89c1\u201d\u3002\u5bf9\u4e8eNPC\u6765\u8bf4\uff0c\u8c01\u662f\u73a9\u5bb6\u53ef\u4ee5\u5728\u4ed6\u4eec\u4e0e\u4f60\u4ea4\u8c08\u7684\u65b9\u5f0f\u4e0a\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c\u3002\u5b9a\u4e49\u8fd9\u79cd\u5173\u7cfb\u4f1a\u7ed9\u4f60\u4eec\u7684\u5bf9\u8bdd\u5e26\u6765\u66f4\u591a\u7684\u4e2a\u6027\u3002\n\u4f8b\u5982\uff0c\u6751\u6c11\u548c\u73a9\u5bb6\u89d2\u8272\u53ef\u80fd\u662f\u5b57\u9762\u4e0a\u7684\u5173\u7cfb\u3002\u5982\u679c\u6751\u6c11\u662f\u73a9\u5bb6\u7684\u6bcd\u4eb2\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u62c5\u5fc3\u4f60\uff0c\u5e76\u7528\u6635\u79f0\u2026\u6765\u79f0\u547c\u4f60\u3002\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u5b83\u7684\u706b\u7130\u3002\n\u6751\u6c11\uff1a\u4f46\u662f\u4e0d\u8981\u53bb\u3002\u5bf9\u6211\u7684\u5b9d\u8d1d\u5929\u4f7f\u6765\u8bf4\u592a\u5371\u9669\u4e86\uff01\n\u5982\u679c\u6751\u6c11\u662f\u964c\u751f\u4eba\uff1a\u8fd9\u4e2a\u5c0f\u9547\u7684\u6751\u6c11\u5bf9\u964c\u751f\u4eba\u6709\u4ec0\u4e48\u611f\u89c9\uff1f\u4ed6\u4eec\u89c1\u5230\u4efb\u4f55\u80fd\u5e2e\u4e0a\u5fd9\u7684\u4eba\u90fd\u6b23\u559c\u82e5\u72c2\u5417\uff1f\u4ed6\u4eec\u662f\u5426\u6025\u4e8e\u5411\u4efb\u4f55\u613f\u610f\u503e\u542c\u7684\u4eba\u53d1\u6cc4\u81ea\u5df1\u7684\u611f\u53d7\uff1f\u6bd4\u65b9\u8bf4\u5728\u88ad\u51fb\u4e4b\u540e\uff0c\u9547\u4e0a\u7684\u4eba\u53d8\u5f97\u5bf9\u964c\u751f\u4eba\u4ea7\u751f\u4e86\u504f\u6267\u3002\n\u6751\u6c11\uff1a\u8bc1\u660e\u4f60\u662f\u7ad9\u5728\u6211\u4eec\u8fd9\u8fb9\u7684\u3002\u7ed9\u6211\u4eec\u5f04\u4e2a\u6b66\u5668\u6765\u548c\u9f99\u640f\u6597\u3002\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u5b83\u7684\u706b\u7130\u3002\n\u901a\u8fc7\u4e3a\u81ea\u5df1\u660e\u786e\u5b9a\u4e49\u5173\u7cfb\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u4f20\u8fbe\u7ed9\u60a8\u7684\u73a9\u5bb6\u3002\n\u8fd9\u662f\u6211\u4ece\u4e00\u4f4d\u540d\u53eb\u6258\u5fb7\u00b7\u5965\u5c14\u79d1\u7279\u7684\u5929\u624d\u7f16\u5267\u90a3\u91cc\u5f97\u5230\u7684\u4e00\u70b9\u5efa\u8bae\u3002\u4ed6\u603b\u662f\u95ee\uff1a\u201c\u4e3b\u4eba\u516c\u60f3\u8981\u4ec0\u4e48\uff1f\u201d\u6545\u4e8b\u4e2d\u7684\u4e3b\u4eba\u516c\u6709\u4e00\u79cd\u5f3a\u70c8\u7684\u5185\u5728\u6b32\u671b\uff0c\u8fd9\u6fc0\u52b1\u7740\u4ed6\u4eec\u91c7\u53d6\u884c\u52a8\u3002\u6c64\u59c6\u00b7\u52aa\u514b\u60f3\u6210\u4e3a\u4e00\u540d\u6210\u529f\u7684\u5546\u4eba\u3002\u52b3\u62c9\u00b7\u514b\u7f57\u592b\u7279(Lara Croft)\u901a\u8fc7\u63ed\u5f00\u4e22\u5931\u7684\u6587\u7269\u6765\u5bfb\u6c42\u5192\u9669\u3002\u8fd9\u4e9b\u4eba\u7269\u7684\u65c5\u7a0b\u548c\u884c\u52a8\u6e90\u4e8e\u4ed6\u4eec\u7684\u4e3b\u8981\u6b32\u671b\u3002\n\u6b21\u8981\u4eba\u7269\u4e5f\u6709\u9700\u6c42\u3002\u4e86\u89e3\u5168\u56fd\u4eba\u5927\u7684\u9700\u6c42\uff0c\u5e76\u6e05\u695a\u5730\u8bf4\u660e\u8fd9\u4e9b\u9700\u6c42\uff0c\u53ef\u4ee5\u6fc0\u52b1\u4e50\u4e8e\u52a9\u4eba\u7684\u73a9\u5bb6\u60f3\u8981\u5e2e\u52a9\u4ed6\u4eec\u3002\u6bd4\u65b9\u8bf4\uff0c\u6211\u4eec\u7684\u6751\u6c11\u975e\u5e38\u9700\u8981\u7761\u7720\uff0c\u81ea\u4ece\u9f99\u653b\u540e\u5979\u5c31\u518d\u4e5f\u6ca1\u6709\u7761\u8fc7\u89c9\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4f1a\u8ba9\u5979\u76f4\u63a5\u544a\u8bc9\u73a9\u5bb6\u5979\u60f3\u8981\u4ec0\u4e48\u3002\n\u6751\u6c11\uff1a\u6211\u7d2f\u574f\u4e86\u3002\u81ea\u4ece\u7ea2\u9f99\u88ad\u51fb\u540e\u5c31\u6ca1\u5408\u773c\u8fc7\u3002\n\u6751\u6c11\uff1a\u8fd9\u4e2a\u5c0f\u9547\u8fc7\u53bb\u5f88\u5b81\u9759\u3002\u73b0\u5728\u6211\u6574\u665a\u90fd\u542c\u5230\u6050\u6016\u7684\u5c16\u53eb\u58f0\u3002\n\u6751\u6c11\uff1a\u706b\u7130\u5c71\u91cc\u53ef\u80fd\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u9f99\u706b\u3002\n\u4f46\u5979\u53ef\u80fd\u60f3\u8981\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4e5f\u8bb8\u8fd9\u4e2a\u6751\u6c11\u66f4\u597d\u6597\uff0c\u5e0c\u671b\u770b\u5230\u9f99\u88ab\u6467\u6bc1\u3002\n\u6751\u6c11\uff1a\u7ec8\u4e8e\uff0c\u9547\u4e0a\u6709\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u52c7\u58eb\u3002\u6211\u6709\u4efb\u52a1\u8981\u627e\u4f60\u5417\uff1f\n\u6751\u6c11\uff1a\u4e00\u6761\u7ea2\u9f99\u4e00\u76f4\u56f0\u6270\u7740\u6211\u4eec\u3002\u6211\u5f88\u60f3\u770b\u4f60\u628a\u4ed6\u6076\u5fc3\u7684\u8111\u888b\u6253\u70c2\u3002\n\u6751\u6c11\uff1a\u6211\u542c\u8bf4\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u53ef\u4ee5\u6321\u4f4f\u4ed6\u7684\u706b\u7130\uff0c\u2026\u3002\n\u6751\u6c11\u7684\u52a8\u673a\uff0c\u6e05\u695a\u5730\u8868\u660e\uff0c\u7ed9\u4e86\u73a9\u5bb6\u4e00\u4e2a\u66f4\u5f3a\u70c8\u7684\u611f\u89c9\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u8981\u8fdb\u884c\u8fd9\u4e2a\u63a2\u7d22-\u4ece\u4eba\u7c7b\u7684\u89d2\u5ea6\u6765\u770b\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4f60\u9700\u8981\u53bb\u4e00\u4e2a\u5730\u65b9\u624d\u80fd\u4e70\u5230\u4e00\u4ef6\u4e1c\u897f\u3002\u4f60\u73a9\u662f\u4e3a\u4e86\u5e2e\u52a9\u6751\u6c11\u7761\u89c9\uff0c\u8fd8\u662f\u4e3a\u4e86\u6ee1\u8db3\u4ed6\u4eec\u5947\u602a\u7684\u55dc\u8840\u6b32\u671b\uff01\u5f53\u73a9\u5bb6\u8fd4\u56de\u6751\u5e84\u65f6\uff0cNPC\u7684\u8d5e\u8d4f\u5c06\u662f\u5bf9\u6210\u529f\u4efb\u52a1\u7684\u989d\u5916\u5956\u52b1\u3002\u5bf9\u8fd9\u4e9b\u4eba\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u96c6\u4f53\u7684\u8fd8\u662f\u4e2a\u4eba\u7684\uff0c\u90fd\u9762\u4e34\u7740\u4ec0\u4e48\u98ce\u9669\uff1f\n\u5982\u679c\u4f60\u963b\u6b62\u67d0\u4eba\u9003\u79bb\u4e00\u53ea\u72c2\u66b4\u7684\u718a\uff0c\u5e76\u5411\u4ed6\u4eec\u95ee\u8def\uff0c\u4ed6\u4eec\u53ef\u80fd\u4e0d\u4f1a\u5bf9\u4f60\u8868\u73b0\u51fa\u592a\u591a\u7684\u4e2a\u6027\u3002\u4f46\u5f53\u4ed6\u4eec\u60ca\u6050\u5730\u5c16\u53eb\u65f6\uff0c\u4f60\u5f88\u53ef\u80fd\u4f1a\u611f\u53d7\u5230\u4ed6\u4eec\u5f53\u65f6\u7684\u611f\u53d7\uff0c\u8fd9\u4f1a\u8ba9\u4f60\u4e0e\u4ed6\u4eec\u7684\u4e92\u52a8\u611f\u89c9\u975e\u5e38\u4eba\u6027\u5316\u3002\u6bd5\u7adf\uff0c\u8fd8\u6709\u4ec0\u4e48\u80fd\u6bd4\u6211\u4eec\u9ecf\u7cca\u7cca\u7684\u611f\u89c9\u66f4\u4eba\u6027\u5316\u5462\uff1f\n\u6240\u4ee5\u8ba9\u6211\u4eec\u628a\u6211\u4eec\u7684\u6751\u6c11\u7f6e\u4e8e\u76f4\u63a5\u7684\u5371\u9669\u4e4b\u4e2d\u3002\u8bf4\u9f99\u5728\u5730\u5e73\u7ebf\u4e0a\u9690\u7ea6\u53ef\u89c1\uff0c\u2026\u3002\n\u6751\u6c11\uff1a\u5b83\u80fd\u6321\u4f4f\u706b\u7130--\u54e6\uff0c\u5929\u54ea\uff0c\u6211\u770b\u5230\u9f99\u7684\u5f71\u5b50\u4e86\uff01\n\u5904\u4e8e\u76f4\u63a5\u5371\u9669\u4e2d\u7684\u4eba\u53ef\u80fd\u4f1a\u611f\u5230\u6050\u614c\u6216\u5bb3\u6015\uff0c\u8fd9\u662f\u5408\u4e4e\u903b\u8f91\u7684\uff0c\u4f46\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u5982\u6b64\u3002\u4eba\u4eec\u5e76\u4e0d\u603b\u662f\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u611f\u53d7\u5230\u540c\u6837\u7684\u4e8b\u60c5\u3002\u6bd4\u65b9\u8bf4\u8fd9\u4e2a\u6751\u6c11\u5f88\u5e73\u9759\uff0c\u56e0\u4e3a\u5979\u7684\u5b97\u6559\u7ed9\u5979\u63d0\u4f9b\u4e86\u5b89\u6170\u2026\n\u6751\u6c11\uff1a\u7ea2\u9f99\u4e0d\u4f1a\u4f24\u5bb3\u6211\u7684\u3002\u5973\u795e\u628a\u4f60\u9001\u5230\u8fd9\u91cc\u6765\u6253\u8d25\u5b83\u3002\n\u6751\u6c11\uff1a\u706b\u7130\u5c71\u91cc\u6709\u4e00\u9762\u955c\u5b50\u3002\u5b83\u4f1a\u4fdd\u62a4\u4f60\u514d\u53d7\u9f99\u706b\u7684\u4f24\u5bb3\u3002\n\u5728\u4e00\u4e2a\u5145\u6ee1\u6050\u60e7\u548c\u6050\u614c\u7684\u5c0f\u9547\u4e0a\uff0c\u51e0\u4e2a\u8868\u8fbe\u4e0d\u540c\u611f\u53d7\u7684\u4eba\u4f1a\u8131\u9896\u800c\u51fa\uff0c\u7ed9\u73a9\u5bb6\u7559\u4e0b\u6df1\u523b\u7684\u5370\u8c61\u3002\n\u5bf9\u4e8e\u6211\u5199\u7684\u6bcf\u4e2a\u5c0f\u89d2\u8272\uff0c\u6211\u5e76\u4e0d\u603b\u662f\u56de\u7b54\u6240\u6709\u56db\u4e2a\u95ee\u9898\u3002\u6709\u65f6\u5019\u56de\u7b54\u4e00\u4e24\u4e2a\u5c31\u8db3\u591f\u4e86\u3002\u7136\u800c\uff0c\u6211\u603b\u662f\u8bd5\u56fe\u901a\u8fc7\u82b1\u65f6\u95f4\u4e86\u89e3\u4ed6\u4eec\u662f\u8c01\u6765\u7ed9\u4eba\u5927\u4f38\u5f20\u6b63\u4e49\u3002\u5c31\u50cf\u827a\u672f\u5bb6\u8003\u8651NPC\u7684\u9762\u90e8\u7279\u5f81\u3001\u8863\u670d\u548c\u4ed6\u4eec\u7684\u8d70\u8def\u65b9\u5f0f\u4e00\u6837\uff0c\u6211\u601d\u8003\u4ed6\u4eec\u7684\u60f3\u6cd5\u548c\u611f\u89c9\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u7684\u6240\u6709\u793a\u4f8b\u90fd\u57283-4\u884c\u4ee5\u5185\u3002\u4f60\u4e0d\u9700\u8981\u5199\u5f88\u591a\u5bf9\u767d\u5c31\u80fd\u8d4b\u4e88\u4e00\u4e2a\u6b21\u8981\u89d2\u8272\u4e2a\u6027\u3002\u4f5c\u4e3a\u5bf9\u8bdd\u64b0\u7a3f\u4eba\uff0c\u4f60\u53ea\u9700\u8981\u505a\u51fa\u51e0\u4e2a\u51b3\u5b9a\uff0c\u7136\u540e\u7ed9\u4ed6\u4eec\u5199\u4fe1\u3002\u8fd9\u4e2a\u5168\u56fd\u4eba\u5927\u662f\u8c01\uff1f\u4ed6\u4eec\u89c9\u5f97\u8fd9\u4e2a\u7403\u5458\u600e\u4e48\u6837\uff1f\u4ed6\u4eec\u60f3\u8981\u4ec0\u4e48\uff1f\u4ed6\u4eec\u611f\u89c9\u600e\u4e48\u6837\uff1f\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u7b80\u77ed\u56de\u7b54\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8ba9\u4f60\u7684\u975e\u73a9\u5bb6\u89d2\u8272-\u8fdb\u800c\u4e5f\u5c31\u662f\u4f60\u7684\u6e38\u620f\u4e16\u754c-\u53d8\u5f97\u6829\u6829\u5982\u751f\u3002\n\u6770\u5f17\u91cc\u00b7\u6208\u5c14\u767b\u662f\u4e00\u540d\u53d9\u4e8b\u8bbe\u8ba1\u5e08\uff0c\u66fe\u4e3a\u4e16\u754c\u5404\u5730\u7684\u80b2\u78a7\u3001Square Enix\u3001Capcom\u548c\u72ec\u7acb\u5236\u7247\u5382\u5199\u4f5c\u3002\u4ed6\u662f\u5192\u9669\u5c0f\u5403\u7684\u6e38\u620f\u5927\u5e08\uff0c\u8fd9\u662f\u4e00\u6b3e\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u73a9\u7684\u514d\u8d39\u201c\u9009\u62e9\u4f60\u7684\u8def\u5f84\u201d\u5192\u9669\u6e38\u620f\u3002\n\u7f16\u8f91\u8981\u6c42\u6770\u5f17\u91cc\u5217\u51fa\u4ed6\u4e3a\u5176\u7f16\u5199\u6e38\u620f\u7684\u6240\u6709\u4e0d\u540c\u5e73\u53f0\u3002\u8fd9\u91cc\u6709\uff1a\u4efb\u5929\u5802\u4ea4\u6362\u673a\u3001PlayStation4\u3001iOS\u3001Android\u3001\u684c\u9762RPG(\u5728\u4e66\u7c4d\u3001\u6742\u5fd7\u548c\u6742\u5fd7\u4e2d)\u3001Kik Mobile\u3001Facebook Messenger\u3001Adobe Flash\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u73a9\u5177\u673a\u5668\u4eba\u3002", "note_en": "Want to check out the rest of our content covering game design, character development and industry trends? We release a weekly newsletter gathering about games and the industry.\n   There\u2019s something about the term \u201cNPC\u201d (Non-Player Character) that sounds hollow to me. Maybe it\u2019s the ambiguousness of acronyms, or how the term literally sounds like \u201cempty.\u201d As a narrative designer, my philosophy is to think of NPCs less like assets on a spreadsheet, and more like my  cast. There are big and small parts, but I believe designers can give any character soul. (Even a character whose soul was stolen by an evil wizard of some sort!) A bit more effort can make a minor NPC more human, and a game\u2019s world more alive.\n    When I think of NPCs, what immediately comes to mind are the villagers who populate roleplaying game towns. You enter the village and stop the first wandering stranger you meet, who says something like:\n Villager: I hear there\u2019s a mirror in the Fire Mountains that can block its flames.\n I\u2019ve seen dialogue like this in countless games, both old and new. I call it \u201cskeleton talk.\u201d On the plus side, skeleton talk is usually efficient. From a gameplay perspective, the purpose of this dialogue is to communicate an important plot point (the town was attacked by a dragon), and guide the player\u2019s next action (go to the Fire Mountains to find a magical mirror).\n But as a player and a storyteller, I find skeleton talk unsatisfying. Yes, it tells me what I need to do, but this character is forgettable, and therefore a missed opportunity. Isn\u2019t the point of a story-driven game to immerse you in a fantasy? Forgettable characters like the villager above won\u2019t add to your world. In fact, if the dialogue reads too much like simply a game clue, the NPCs might detract from it.,. It could take players out of the immersion.\n After understanding what the requirements for an NPC are from a game design perspective, here are questions I ask myself when writing their dialogue:\n  These are my Four Questions of Personification (patent pending). They allow me to put flesh, organs, all the cool human-stuff onto the skeleton. Let me break each of these questions down, and I\u2019ll show you how answering them leads to richer dialogue.\n     Adjectives, adjectives, adjectives. When I start writing a character, I begin by thinking of words that describe a character\u2019s personality. Boisterous, stingy, scared, suave. For minor characters, maybe only one adjective is necessary, but for more important NPCs I\u2019ll come up with several.\n Let\u2019s go back to our villager. Say she\u2019s wearing a dirty dress and is carrying a heavy looking burlap sack. What kind of adjectives might describe her personality? Maybe she\u2019s  haggard from overwork, or  assertive about her responsibilities, or  eager to do her part for the village. I\u2019ll say she\u2019s  brave, and won\u2019t let some dragon intimidate her.\n So, knowing she\u2019s brave, let\u2019s rewrite her dialogue to show that personality.\n Villager: I hear there\u2019s a mirror in the Fire Mountains that can block its flames.\n Villager: If I wasn\u2019t so busy hauling grain, I\u2019d get it myself!\n Notice we\u2019re not changing the information the player receives. We\u2019re just adding personality. Because we know she\u2019s a  brave villager, we can write her as such. She\u2019s not afraid to insult a scary creature. And she\u2019d even be willing to climb the Fire Mountains, which sounds like a pretty dangerous place to climb!\n We could also go the complete opposite route. Let\u2019s say instead of brave, this villager is  klutzy\u2026\n Villager: Oh no! I spilled another grain sack. My lord is going to KILL me.\n  Villager: I hear there\u2019s a mirror in the Fire Mountains that can block its flames.\n For major characters in a game, I like to write them full biographies, so I get a sense of their background and point of view, all of which contribute to scenes. But all my biographies begin with personality trait adjectives, because they help me quickly get my bearings with a character.\n     Most people have different ways of speaking to their partner, their boss, their pet, and to strangers. I rarely call a perfect stranger \u201cmy perfect widdle fuzzball,\u201d and I don\u2019t ask for a Skype meeting with my partner to give \u201cconstructive feedback on meal scheduling.\u201d Who the player is to the NPC can make a big difference in how they talk to you. Defining that relationship will bring more personality to your dialogue.\n For example, the villager and the player character might be literally related. If the villager is the player\u2019s mother, they might be worried about you, and call you by pet names\u2026\n Villager: I hear there\u2019s a mirror in the Fire Mountains that can block its flames.\n Villager: But don\u2019t go. It\u2019s too dangerous for my precious angel!\n If the villager is a stranger: How do villagers in this town feel about strangers? Are they overjoyed to meet anyone who can help? Are they eager to vent their feelings to anyone who will listen? Let\u2019s say after the attack, the townspeople became paranoid of strangers...\n Villager: Prove you\u2019re on our side. Get us a weapon to fight the dragon.\n Villager: I hear there\u2019s a mirror in the Fire Mountains that can block its flames.\n By clearly defining the relationship for yourself, you can then communicate it to your players.\n  This is a bit of advice I got from a talented screenwriter named  Todd Alcott. He always asks, \u201cWhat does the protagonist want?\u201d The hero of a story has a strong inner desire that inspires them to action. Tom Nook wants to be a successful businessman. Lara Croft seeks adventure by uncovering lost artifacts. The journey and actions these characters take spring from their main desires.\n    Minor characters have wants, too. Knowing an NPC\u2019s needs, and stating them clearly, can inspire helpful players to want to assist them. For example, let\u2019s say our villager desperately needs sleep, which she hasn\u2019t gotten since the dragon attack. In this version, I\u2019ll have her state what she wants directly to the player.\n Villager: I\u2019m exhausted. Haven\u2019t slept a wink since the red dragon attack.\n Villager: This town used to be so peaceful. Now I hear shrieks of terror all night.\n Villager: There might be a mirror in the Fire Mountains that can block dragon flames.\n But she might want something completely different. Maybe this villager is more militant and wants to see the dragon destroyed.\n Villager: Finally, there\u2019s a true warrior in town. Have I got a quest for you!\n Villager: A red dragon\u2019s been plaguing us. I\u2019d love to see you bash his disgusting head in.\n Villager: I hear there\u2019s a mirror in the Fire Mountains that can block his flames\u2026\n The villager\u2019s motivation, clearly stated, gives the player a stronger sense for why they\u2019re going on this quest \u2013 from a human perspective. It\u2019s not just that you need to go to a location to acquire an item. You\u2019re playing to help a villager sleep, or to satisfy their weird bloodlust! The NPC\u2019s appreciation when the player returns to the village will be an extra reward for a successful quest. What\u2019s at stake for these people, both collectively and individually?\n  If you stop someone fleeing a rampaging bear and ask them for directions, they probably won\u2019t express much of their personality to you. But you\u2019ll likely get a sense for how they\u2019re feeling at that moment \u2013 as they scream in terror \u2013 and that\u2019ll make your interaction with them feel very human. After all, what could be more human than our gooey, squishy feelings?\n So let\u2019s put our villager in immediate danger. Say the dragon is looming on the horizon\u2026\n Villager: It can block the flames and\u2013 OH GOD, I can see the dragon\u2019s shadow!\n It\u2019s logical that someone in immediate danger might feel panicked or scared, but it\u2019s not always the case. People don\u2019t always feel the same thing in the same way. Let\u2019s say the villager is serene, because her religion provides her comfort\u2026\n Villager: The red dragon will not harm me. The goddess sent you here to defeat it.\n Villager: There is a mirror in the Fire Mountains. It will protect you against dragonfire.\n  In a town full of frightened and panicking NPCs, a few expressing very different feelings would stand out and be memorable to the player.\n I don\u2019t always answer all four questions for every minor character I write. Sometimes it\u2019s enough to answer one or two. However, I always try and give an NPC justice by taking the time to understand who they are. Just in the same way an artist considers an NPCs facial features, clothes, and how they walk, I think about what they\u2019re thinking and feeling.\n Notice that all my examples stayed within 3-4 lines. You don\u2019t have to write a lot of dialogue to give a minor character personality. As the dialogue writer, you just need to make a few decisions and write to them. Who is this NPC? What do they think of the player? What do they want? How are they feeling? Short answers to those questions can go a long way toward bringing your non-player characters \u2014 and by extension, your game\u2019s world \u2014 to life.\n  Geoffrey Golden is a narrative designer who has written for Ubisoft, Square Enix, Capcom, and indie studios around the world. He\u2019s the game master for  Adventure Snack, a free \u201cchoose your path\u201d adventure game played via email.\n The editor asked Geoffrey to list all the different platforms he\u2019s written games for. Here goes: Nintendo Switch, Playstation 4, iOS, Android, tabletop RPG (in books, zines, and magazines), Kik Mobile, Facebook Messenger, Adobe Flash, email, and toy robot.", "posttime": "2020-05-26 14:35:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "npc,character,\u6751\u6c11", "title": "\u5982\u4f55\u7ed9\u4f60\u7684NPC\u6ce8\u5165\u66f4\u591a\u7684\u201c\u7279\u8272\u201d", "title_en": "How to Put More \u201cCharacter\u201d into Your NPCs", "transed": 1, "url": "https://pausebutton.substack.com/p/how-to-put-more-character-into-your", "via": "", "real_tags": ["npc", "character", "\u6751\u6c11"]}, {"category": "", "categoryclass": "", "imagename": "c7c9ba27fd34b4c2fda9faa23d8cc750.jpg", "infoid": 1003773, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7528\u6765\u5224\u65ad\u5f00\u53d1\u4eba\u5458\u8d44\u5386\u6c34\u5e73\u7684\u6700\u5e38\u89c1\u7684\u6807\u51c6\u662f\u591a\u5e74\u7684\u7ecf\u9a8c\u3002\n\u5982\u679c\u60a8\u4ece\u4e8b\u7684\u662f\u540c\u4e00\u4e2a\u9879\u76ee\uff0c\u5728\u8fc7\u53bb\u76846\u5e74\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\uff0c\u4e0e\u53e6\u4e00\u4e2a\u62e5\u67093\u5e74\u7ecf\u9a8c\u548c\u4e24\u4e09\u4e2a\u4e0d\u540c\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u76f8\u6bd4\uff0c\u60a8\u7684\u673a\u4f1a\u5c31\u76f8\u5f62\u89c1\u7ecc\u4e86\u3002\n\u9009\u62e9\u4e00\u4e2a\u4f60\u611f\u5174\u8da3\u7684\u65b0\u9879\u76ee\uff0c\u5c1d\u8bd5\u6280\u672f\u3001\u6280\u672f\u5806\u6808\u3001\u6982\u5ff5\u548c\u4efb\u4f55\u4f60\u60f3\u5230\u7684\u4e1c\u897f\u3002\n\u5ba0\u7269\u9879\u76ee\u5141\u8bb8\u4f60\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u4f7f\u7528\u5ba2\u6237\u9879\u76ee\u4e2d\u5f88\u5c11\u51fa\u73b0\u7684\u5404\u79cd\u4e1c\u897f\u3002\n\u6df1\u601d\u719f\u8651\u7684\u7ec3\u4e60\u662f\u6210\u957f\u6700\u91cd\u8981\u7684\u65b9\u9762\uff0c\u65e0\u8bba\u662f\u5728\u5de5\u4f5c\u4e2d\uff0c\u8fd8\u662f\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\u548c\u597d\u5947\u5fc3\u3002\n\u4f46\u4e0d\u662f\u4e00\u822c\u7684\u7ec3\u4e60\uff0c\u4e3a\u4e86\u66f4\u6df1\u5165\u5730\u9605\u8bfb\u5b66\u4e60\u4e3b\u9898\uff0c\u6211\u6709\u53e6\u4e00\u4e2a\u4eba\u7c7b\u673a\u5668\u5b66\u4e60\u7684\u5e16\u5b50\uff1a\u5982\u4f55\u66f4\u597d\u3001\u66f4\u5feb\u5730\u5b66\u4e60\uff1f", "note_en": "The most common measure used to tell the level of seniority of a developer is years of experience.\n  If you are working on the same project, with the same technologies for the last 6 years, chances are you pale when compared to another developer with 3 years of experience and two or three different projects under his belt.\n     Pick up a new project that interests you and experiment techniques, tech stacks, concepts and whatever comes to mind.\n Pet projects allow you to use all sorts of things that may rarely come up in a client\u2019s project in your day job.\n Deliberate practice is the most important aspect of growth, either on the job or just for fun and curiosity.\n But not just any practice, for further reading on the learning topic, I have this other post  Machine Learning for Humans: how to learn better and faster?", "posttime": "2020-05-26 14:35:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u6df1\u601d\u719f\u8651,practice,\u9879\u76ee", "title": "\u6df1\u601d\u719f\u8651\u7684\u5b9e\u8df5\u4e0e\u9ad8\u7ea7\u5f00\u53d1\u4eba\u5458", "title_en": "Deliberate Practice and the Senior Developer", "transed": 1, "url": "https://renanmf.com/deliberate-practice-and-the-senior-developer/", "via": "", "real_tags": ["\u5f00\u53d1", "\u6df1\u601d\u719f\u8651", "practice", "\u9879\u76ee"]}]