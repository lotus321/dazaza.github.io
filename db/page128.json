[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1005850, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8036\u9c81\u5927\u5b66\u7684\u4e00\u4e2a\u7814\u7a76\u56e2\u961f\u5f00\u53d1\u4e86\u4e00\u6b3e\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u540d\u4e3a\u201cHunala\u201d\uff0c\u65e8\u5728\u6210\u4e3a\u201cWAZE for CoronaVirus\u201d\u3002\n\u7531\u65af\u7279\u6797\u6559\u6388\u3001\u5185\u79d1\u533b\u751f\u548c\u793e\u4ea4\u7f51\u7edc\u4e13\u5bb6\u5c3c\u53e4\u62c9\u65af\u00b7\u514b\u91cc\u65af\u5854\u57fa\u65af\u4e0e\u8036\u9c81\u5de5\u7a0b\u4e0e\u5e94\u7528\u79d1\u5b66\u5b66\u9662\u7684\u540c\u4e8b\u5171\u540c\u9886\u5bfc\uff0c\u8fd9\u6b3e\u514d\u8d39\u7684\u5e94\u7528\u7a0b\u5e8f\u6839\u636e\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u7684\u6570\u636e\u4ee5\u53ca\u7528\u6237\u81ea\u6211\u62a5\u544a\u7684\u5065\u5eb7\u548c\u4eba\u53e3\u4fe1\u606f\uff0c\u63d0\u4f9b\u4e86\u65b0\u51a0\u80ba\u708e\u611f\u67d3\u7684\u4e2a\u4eba\u548c\u533a\u57df\u98ce\u9669\u7684\u6bcf\u65e5\u5feb\u7167\u3002\n\u5c31\u50cfWaze\u4f9d\u9760\u4f17\u5305\u6570\u636e\u63d0\u4f9b\u4ea4\u901a\u72b6\u51b5\u7684\u5b9e\u65f6\u66f4\u65b0\uff0c\u4ee5\u4fbf\u5c06\u53f8\u673a\u91cd\u65b0\u5f15\u5bfc\u5230\u4e0d\u90a3\u4e48\u62e5\u5835\u7684\u8def\u7ebf\u4e00\u6837\uff0cHunala\u4f9d\u8d56\u4e8e\u7528\u6237\u7684\u65e5\u5e38\u8f93\u5165\uff0c\u6839\u636e\u4e2a\u4eba\u7684\u5173\u8054\u3001\u6d3b\u52a8\u548c\u5065\u5eb7\u72b6\u51b5\u63d0\u4f9b\u51a0\u72b6\u75c5\u6bd2\u98ce\u9669\u7684\u5b9e\u65f6\u67e5\u770b\u3002\u968f\u7740\u7528\u6237\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8be5\u5e94\u7528\u5728\u8bc4\u4f30\u65b0\u51a0\u80ba\u708e\u76f8\u5173\u98ce\u9669\u65b9\u9762\u7684\u6709\u6548\u6027\u4e5f\u5728\u63d0\u9ad8\u3002\u81ea\u4ece\u8be5\u5e94\u7528\u5728\u4e24\u5468\u524d\u53d1\u5e03\u4ee5\u6765\uff0c\u5df2\u67093,000\u4eba\u6ce8\u518c\u3002\n\u201c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u5c06\u5e2e\u52a9\u7f8e\u56fd\u516c\u4f17\u6446\u8131\u5c01\u9501\uff0c\u8bc4\u4f30\u4ed6\u4eec\u7684\u98ce\u9669\uff0c\u201d\u65af\u7279\u6797\u793e\u4f1a\u79d1\u5b66\u548c\u81ea\u7136\u79d1\u5b66\u6559\u6388\u514b\u91cc\u65af\u5854\u57fa\u65af(Christakis)\u8bf4\uff0c\u201c\u7279\u522b\u662f\u5728\u6211\u4eec\u8d70\u5411\u7b2c\u4e8c\u6ce2(\u611f\u67d3)\u7684\u65f6\u5019\u3002\u201d\n\u514b\u91cc\u65af\u5854\u57fa\u65af\u9886\u5bfc\u7740\u4eba\u6027\u5b9e\u9a8c\u5ba4\uff0c\u8be5\u5b9e\u9a8c\u5ba4\u662f\u8036\u9c81\u5927\u5b66\u7f51\u7edc\u79d1\u5b66\u7814\u7a76\u6240\u7684\u4e00\u90e8\u5206\uff0c\u65e8\u5728\u66f4\u597d\u5730\u4e86\u89e3\u4eba\u7c7b\u7f51\u7edc\u548c\u4eba\u7c7b\u5065\u5eb7\u7684\u4ea4\u96c6\u3002\n\u5f53\u7528\u6237\u4e0b\u8f7d\u80e1\u5a1c\u62c9\u65f6\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u4ed6\u4eec\u8f93\u5165\u81ea\u5df1\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u62ec\u4f4d\u7f6e\u3001\u5e74\u9f84\u3001\u5065\u5eb7\u53f2\u3001\u65b0\u51a0\u80ba\u708e\u4e4b\u524d\u7684\u9633\u6027\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5728\u8fc7\u53bb24\u5c0f\u65f6\u5185\u662f\u5426\u53c2\u52a0\u8fc7\u5927\u578b\u805a\u4f1a\u3002\n\u6bcf\u5929\uff0c\u8fd9\u6b3e\u5e94\u7528\u90fd\u4f1a\u8981\u6c42\u7528\u6237\u63d0\u4f9b\u66f4\u65b0\u7684\u4fe1\u606f\u3002\u4f5c\u4e3a\u56de\u62a5\uff0c\u5b83\u8c03\u6574\u4e86\u4e24\u4e2a\u989c\u8272\u7f16\u7801\u7684\u523b\u5ea6\u76d8\uff0c\u4e00\u4e2a\u4ee3\u8868\u4ed6\u4eec\u7684\u5730\u533a\uff0c\u53e6\u4e00\u4e2a\u4ee3\u8868\u4ed6\u4eec\u7684\u4e2a\u4eba\u98ce\u9669\uff0c\u4ece\u4f4e(\u84dd\u8272)\u5230\u9ad8(\u7ea2\u8272)\u3002\n\u5728\u6ce8\u518c\u671f\u95f4\uff0c\u7528\u6237\u8fd8\u4f1a\u5217\u51fa\u4ed6\u4eec\u7684\u624b\u673a\u8054\u7cfb\u4eba\u4e2d\u4e0e\u5bb6\u4eba\u548c\u670b\u53cb\u5173\u7cfb\u5bc6\u5207\u7684\u4eba\u3002\u8fd9\u4e9b\u8054\u7cfb\u4eba\u6536\u5230\u4ed6\u4eec\u8ba4\u8bc6\u7684\u4eba\u5df2\u52a0\u5165Hunala\u7684\u901a\u77e5\u548c\u52a0\u5165\u9080\u8bf7\u3002\u4e00\u4e2a\u4eba\u7684\u793e\u4ea4\u7f51\u7edc\u5e2e\u52a9\u5e94\u7528\u7a0b\u5e8f\u8bc4\u4f30\u98ce\u9669\uff0c\u56e0\u4e3a\u75be\u75c5\u5728\u4eba\u4e0e\u4eba\u4e4b\u95f4\u4f20\u64ad\u3002\n\u514b\u91cc\u65af\u5854\u57fa\u65af\u8bf4\uff1a\u201c\u79bb\u7f51\u7edc\u4e2d\u5fc3\u8d8a\u8fd1\u7684\u4eba\u98ce\u9669\u8d8a\u9ad8\u3002\u201d\u201c\u53d7\u6b22\u8fce\u7684\u4eba\u66f4\u6709\u53ef\u80fd\u5728\u75ab\u60c5\u65e9\u671f\u53d7\u5230\u611f\u67d3\u3002\u201d\n\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u65e8\u5728\u4fdd\u62a4\u7528\u6237\u7684\u9690\u79c1\u548c\u533f\u540d\u6027\uff1a\u8054\u7cfb\u4eba\u53ea\u53d1\u9001\u4e00\u6b21\u6d88\u606f\uff1b\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5b58\u50a8\u8054\u7cfb\u4fe1\u606f\uff1b\u7528\u6237\u7684\u59d3\u540d\u548c\u5065\u5eb7\u4fe1\u606f\u6c38\u8fdc\u4e0d\u4f1a\u5171\u4eab\u3002\n\u8036\u9c81\u5927\u5b66\u7535\u6c14\u5de5\u7a0b\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u52a9\u7406\u6559\u6388\u3001\u591a\u5b66\u79d1\u7814\u7a76\u5e72\u6270\u3001\u4fe1\u606f\u548c\u51b3\u7b56\u5c0f\u7ec4\u8d1f\u8d23\u4eba\u3001\u8036\u9c81\u5927\u5b66\u7684\u963f\u660e\u00b7\u5361\u5c14\u5df4\u897f(Amin Karbasi)\u8868\u793a\uff1a\u201c\u5982\u679c\u7f51\u7edc\u7684\u67d0\u4e2a\u90e8\u5206\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u60c5--\u5982\u679c\u4e00\u4e2a\u2018\u8282\u70b9\u2019\u68c0\u6d4b\u5448\u9633\u6027\uff0c\u90a3\u4e48\u8be5\u7f51\u7edc\u4e2d\u7684\u4eba\u9762\u4e34\u7684\u98ce\u9669\u5c31\u4f1a\u4e0a\u5347\u3002\u201d\u4ed6\u9886\u5bfc\u7740\u8fd9\u6b3e\u5e94\u7528\u7684\u673a\u5668\u5b66\u4e60\u548c\u4eba\u5de5\u667a\u80fd\u9aa8\u5e72\u3002\n\u7531\u4e8eWaze\u5728\u524d\u65b9\u4ea4\u901a\u5835\u585e\u65f6\u4f1a\u5f15\u5bfc\u53f8\u673a\u6539\u53d8\u8def\u7ebf\uff0c\u7814\u7a76\u4eba\u5458\u5e0c\u671bHunala\u7684\u8bc4\u4f30\u5c06\u5e2e\u52a9\u7528\u6237\u6539\u53d8\u4ed6\u4eec\u7684\u884c\u4e3a\uff0c\u4ee5\u964d\u4f4e\u4ed6\u4eec\u7684\u98ce\u9669\u3002\n\u8be5\u56e2\u961f\u6210\u5458\u96c5\u5404\u5e03\u00b7\u5fb7\u96f7\u94a6(Jacob Derechin)\u662f\u514b\u91cc\u65af\u5854\u57fa\u65af\u4eba\u7c7b\u81ea\u7136\u5b9e\u9a8c\u5ba4\u7684\u535a\u58eb\u751f\uff0c\u4ed6\u8bf4\uff1a\u201c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u544a\u8bc9\u4f60\u98ce\u9669\u5f88\u9ad8\uff0c\u4f60\u53ef\u80fd\u66f4\u6709\u53ef\u80fd\u4e0e\u670b\u53cb\u4fdd\u6301\u7269\u7406\u8ddd\u79bb\uff0c\u4e0d\u7ecf\u5e38\u5916\u51fa\u3002\u201d\n\u8036\u9c81\u5927\u5b66\u56e2\u961f\u7684\u5176\u4ed6\u6210\u5458\u5305\u62ec\u9996\u5e2d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u9a6c\u514b\u00b7\u9ea6\u514b\u5948\u7279(Mark McKnight)\u3001\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5546\u6000\u4e9a\u7279\u00b7\u4ee5\u8272\u5217(Wyatt Israel)\u548c\u751f\u7269\u533b\u5b66\u5de5\u7a0b\u535a\u58eb\u751f\u5e0c\u592b\u5e93\u9a6c\u5c14\u00b7\u7ef4\u4ec0\u5185\u59c6\u4f69\u7279(Shivkumar Vishnemet)\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u7684\u963f\u5217\u514b\u897f\u00b7\u514b\u91cc\u65af\u5854\u57fa\u65af(Alexi Christakis)\uff0c20\u5c81\uff0c\u514b\u91cc\u65af\u5854\u57fa\u65af\u535a\u58eb\u7684\u4f84\u5b50\uff0c\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u505a\u51fa\u4e86\u65e9\u671f\u8d21\u732e\u3002\n\u514b\u91cc\u65af\u5854\u57fa\u65af20\u5e74\u524d\u5f00\u59cb\u7814\u7a76\u793e\u4ea4\u7f51\u7edc\u3002\u57282010\u5e74TED\u7684\u4e00\u6b21\u6f14\u8bb2\u201c\u793e\u4ea4\u7f51\u7edc\u5982\u4f55\u9884\u6d4b\u6d41\u884c\u75c5\u201d\u4e2d\uff0c\u4ed6\u63cf\u8ff0\u4e86\u67d0\u4e9b\u4eba\u5982\u4f55\u4ee3\u8868\u7f51\u7edc\u7684\u4e2d\u5fc3\uff0c\u901a\u8fc7\u5bb6\u5ead\u3001\u670b\u53cb\u548c\u5de5\u4f5c\u5efa\u7acb\u4e86\u8bb8\u591a\u8054\u7cfb\u3002\u201c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8ffd\u8e2a\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\u7684\u4e1c\u897f\u201d\uff0c\u6bd4\u5982\u75be\u75c5\uff0c\u4ed6\u8bf4\uff0c\u201c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u60f3\u8981\u505a\u7684\u662f\u5728\u4e2d\u592e\u4e2a\u4f53\u2026\u4e0a\u8bbe\u7f6e\u4f20\u611f\u5668\u3002\u201d\u201c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8ffd\u8e2a\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\u7684\u4e1c\u897f\uff0c\u201d\u6bd4\u5982\u75be\u75c5\uff0c\u4ed6\u8bf4\uff0c\u201c\u6211\u4eec\u7406\u60f3\u7684\u505a\u6cd5\u662f\u5728\u4e2d\u592e\u4e2a\u4f53DNA\u4e0a\u8bbe\u7f6e\u4f20\u611f\u5668\u3002\u201d\u76d1\u63a7\u90a3\u4e9b\u5c31\u5728\u7f51\u7edc\u4e2d\u95f4\u7684\u4eba\uff0c\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u53ca\u65e9\u53d1\u73b0\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u201c\u3002\nHunala\u5c31\u662f\u8fd9\u6837\u505a\u7684\u4e00\u9879\u52aa\u529b\uff1a\u901a\u8fc7\u4ece\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u90a3\u91cc\u63d0\u53d6\u6570\u636e\uff0c\u5b83\u9884\u6d4b\u8c01\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\uff0c\u5e76\u8b66\u544a\u4ed6\u4eec\u91c7\u53d6\u76f8\u5e94\u7684\u884c\u52a8\u3002\n\u201c\u8fd9\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u5c31\u50cf\u9762\u5177\u4e00\u6837\uff0c\u201d\u514b\u91cc\u65af\u5854\u57fa\u65af\u8bf4\u3002\u201c\u5f53\u4e00\u79cd\u65b0\u7684\u75c5\u539f\u4f53\u88ab\u5f15\u5165\u6211\u4eec\u7684\u7269\u79cd\u65f6\uff0c\u6211\u4eec\u8fd8\u6d3b\u7740\u3002\u5b83\u4e0d\u4f1a\u6d88\u5931\uff0c\u6211\u4eec\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u4eba\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u201c", "note_en": "A team of Yale researchers has developed a new app,\u00a0 Hunala, that aims to be the \u201cWaze for coronavirus.\u201d\n Led by Sterling Professor  Nicholas Christakis, a physician and social networks expert, with colleagues in the Yale School of Engineering and Applied Science, the free app provides a daily snapshot of personal and regional risk for COVID-19 infection based on data from the Centers for Disease Control and Prevention and users\u2019 self-reported health and demographic information.\n Just as Waze relies on crowd-sourced data to provide real-time updates of traffic conditions in order to redirect drivers to less congested routes, Hunala relies on daily inputs from users to provide a real-time look at coronavirus risk based on individuals\u2019 associations, activities, and health status. The app\u2019s effectiveness at assessing COVID-19-related risks improves as the number of users grows.\u00a0Since the app launched two weeks ago, 3,000 people have signed up.\n \u201cWe think this will help the American public as we emerge from lockdowns to assess their risk,\u201d said Christakis,\u00a0the Sterling Professor of Social and Natural Science,\u00a0\u201cespecially as we head toward a second wave [of infections].\u201d\n Christakis directs The Human Nature Lab,\u00a0part of the Yale Institute for Network Science, which aims to better understand the intersection of human networks and human health.\n When users download Hunala, they are prompted to enter basic information about themselves, including location, age, health history, prior positive tests for COVID-19, and whether they\u2019ve been in large gatherings in the past 24 hours.\n Each day, the app asks users for updated information. In return, it adjusts two color-coded dials, one representing their regional and one their personal risk, from low (blue) to high (red).\n During sign-up, users also list people from their phone contacts who are close family and friends. These contacts receive a notification that someone they know has joined Hunala and an invitation to join. A person\u2019s social network helps the app assess risk because disease spreads from person to person.\n \u201cA person closer to the center of the network is at higher risk,\u201d Christakis said. \u201cPopular people are more likely to get infections early in the epidemic.\u201d\n The app is designed to protect users\u2019 privacy and anonymity: contacts are only messaged once; the app does not store contact information; and users\u2019 names and health information are never shared.\n  \u201cIf something happens in some part of the network \u2014 if one \u2018node\u2019 tests positive, then the risk goes up for people in that network,\u201d said Yale\u2019s Amin Karbasi, assistant professor of electrical engineering and computer science and head of the multidisciplinary\u00a0 Interference, Information, and Decision Group. He is leading the machine learning and artificial intelligence backbone of the app.\n As Waze leads drivers to change routes when there\u2019s a traffic jam ahead, the researchers hope that Hunala\u2019s assessments will help users to modify their behavior to reduce their risk.\n \u201cIf the app tells you that your risk is high, you may be more likely to physical distance from friends and not go outside as much,\u201d said Jacob Derechin, a doctoral student in Christakis\u2019 Human Nature Lab and a member of the team.\n Additional members of the Yale team are principal software engineer Mark McKnight; web app developer Wyatt Israel; and biomedical engineering doctoral student Shivkumar Vishnempet. Computer science major Alexi Christakis, \u201920, nephew of Dr. Christakis, contributed early in the process.\n Christakis began studying social networks 20 years ago. In a 2010 TED talk, \u201c How social networks predict epidemics,\u201d he describes how certain people represent the centers of networks, with many connections via family, friends, and work. \u201cIf we want to track something\u00a0that was spreading through a network,\u201d such as a disease, he said,\u00a0\u201cwhat we ideally would like to do is to set up sensors\u00a0on the central individuals \u2026 monitor those people that are right there in the middle of the network,\u00a0and somehow get an early detection\u00a0of whatever it is that is spreading through the network.\u201d\n Hunala is an effort to do this: By pulling data from as many people as possible it predicts who is at risk and warns them to act accordingly.\n \u201cThis is a tool, just like masks,\u201d Christakis said. \u201cWe are alive at a moment when a new pathogen has been introduced to our species. It\u2019s not going away, and millions of us will be affected.\u201d", "posttime": "2020-06-09 21:59:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u76ee\u6807,aims", "title": "\u80e1\u90a3\u62c9\u7684\u76ee\u6807\u662f\u6210\u4e3a\u201c\u51a0\u72b6\u75c5\u6bd2\u7684\u5b88\u671b\u8005\u201d", "title_en": "Hunala aims to be \u2018Waze for coronavirus\u2019", "transed": 1, "url": "https://news.yale.edu/2020/06/05/yale-app-hunala-aims-be-waze-coronavirus", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u76ee\u6807", "aims"]}, {"category": "", "categoryclass": "", "imagename": "ce8c8c634e74329f8dbfbd2432f148a7.jpg", "infoid": 1005849, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8003\u53e4\u5b66\u5bb6\u9996\u6b21\u4f7f\u7528\u5148\u8fdb\u7684\u63a2\u5730\u96f7\u8fbe(GPR)\u6210\u529f\u7ed8\u5236\u4e86\u4e00\u5ea7\u5b8c\u6574\u7684\u7f57\u9a6c\u57ce\u5e02\uff0c\u610f\u5927\u5229\u7684Falert ii Novi\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5728\u5b83\u4ecd\u7136\u6df1\u57cb\u5728\u5730\u4e0b\u7684\u540c\u65f6\u63ed\u793a\u51fa\u4ee4\u4eba\u9707\u60ca\u7684\u7ec6\u8282\u3002\u8fd9\u9879\u6280\u672f\u53ef\u80fd\u4f1a\u5f7b\u5e95\u6539\u53d8\u6211\u4eec\u5bf9\u53e4\u4ee3\u805a\u843d\u7684\u7406\u89e3\u3002\u6765\u81ea\u5251\u6865\u5927\u5b66\u548c\u6839\u7279\u5927\u5b66\u7684\u7814\u7a76\u5c0f\u7ec4\u53d1\u73b0\u4e86\u4e00\u5ea7\u6d74\u6c60\u5efa\u7b51\u7fa4\u3001\u5e02\u573a\u3001\u5bfa\u5e99\u3001\u4e00\u5ea7\u524d\u6240\u672a\u6709\u7684\u516c\u5171\u7eaa\u5ff5\u7891\uff0c\u751a\u81f3\u8fd8\u53d1\u73b0\u4e86\u8fd9\u5ea7\u57ce\u5e02\u5e9e\u5927\u7684\u6c34\u7ba1\u7f51\u7edc\u3002\u901a\u8fc7\u89c2\u5bdf\u4e0d\u540c\u7684\u6df1\u5ea6\uff0c\u8003\u53e4\u5b66\u5bb6\u73b0\u5728\u53ef\u4ee5\u7814\u7a76\u8fd9\u4e2a\u5c0f\u9547\u6570\u767e\u5e74\u6765\u662f\u5982\u4f55\u6f14\u53d8\u7684\u3002\n\u4eca\u5929\u53d1\u8868\u5728\u201c\u53e4\u4ee3\u201d\u6742\u5fd7\u4e0a\u7684\u8fd9\u9879\u7814\u7a76\u5229\u7528\u4e86\u63a2\u5730\u96f7\u8fbe\u6280\u672f\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u8fd9\u4f7f\u5f97\u4ee5\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u63a2\u7d22\u66f4\u5927\u7684\u533a\u57df\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u53e4\u57ce\u7684\u7814\u7a76\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff0c\u56e0\u4e3a\u8bb8\u591a\u53e4\u57ce\u8981\u4e48\u56e0\u4e3a\u592a\u5927\uff0c\u8981\u4e48\u56e0\u4e3a\u88ab\u56f0\u5728\u73b0\u4ee3\u5efa\u7b51\u4e4b\u4e0b\u800c\u65e0\u6cd5\u6316\u6398\u3002\n\u63a2\u5730\u96f7\u8fbe\u7684\u5de5\u4f5c\u539f\u7406\u5c31\u50cf\u666e\u901a\u96f7\u8fbe\u4e00\u6837\uff0c\u4ece\u7269\u4f53\u4e0a\u53cd\u5c04\u65e0\u7ebf\u7535\u6ce2\uff0c\u5e76\u5229\u7528\u56de\u6ce2\u5728\u4e0d\u540c\u6df1\u5ea6\u5efa\u7acb\u56fe\u50cf\u3002*\u901a\u8fc7\u5c06\u63a2\u5730\u96f7\u8fbe\u4eea\u5668\u62d6\u5230\u4e00\u8f86\u56db\u8f6e\u81ea\u884c\u8f66\u540e\u9762\uff0c\u8003\u53e4\u5b66\u5bb6\u4eec\u8c03\u67e5\u4e86\u8fd9\u5ea7\u57ce\u5e02\u57ce\u5899\u5185\u7684\u6240\u670930.5\u516c\u9877\u571f\u5730--\u8d39\u52d2\u91cc\u5965\u8bfa\u7ef4\u7684\u5927\u5c0f\u8fd8\u4e0d\u5230\u5e9e\u8d1d\u7684\u4e00\u534a--\u6bcf12.5\u5398\u7c73\u5c31\u8fdb\u884c\u4e00\u6b21\u8bfb\u6570\u3002\n\u4f4d\u4e8e\u7f57\u9a6c\u4ee5\u531750\u516c\u91cc\uff0c\u516c\u5143\u524d241\u5e74\u9996\u6b21\u5360\u9886\uff0c\u6cd5\u52d2\u91cc\u8bfa\u7ef4\u5e78\u5b58\u5230\u4e2d\u4e16\u7eaa\u65f6\u671f(\u76f4\u5230\u516c\u5143700\u5e74\u5de6\u53f3)\u3002\u8be5\u56e2\u961f\u7684\u63a2\u5730\u96f7\u8fbe\u6570\u636e\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u63ed\u793a\u8fd9\u5ea7\u57ce\u5e02\u5728\u8fd9\u6bb5\u65f6\u95f4\u7ecf\u5386\u7684\u4e00\u4e9b\u7269\u7406\u53d8\u5316\u3002\u4ed6\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u62a2\u52ab\u77f3\u5934\u7684\u8bc1\u636e\u3002\n\u8fd9\u9879\u7814\u7a76\u8fd8\u6311\u6218\u4e86\u5173\u4e8e\u7f57\u66fc\u7684\u67d0\u4e9b\u5047\u8bbe\uff0c\u8868\u660e\u6cd5\u52d2\u91cc\u8bfa\u7ef4\u7684\u5e03\u5c40\u6bd4\u8bb8\u591a\u5176\u4ed6\u7814\u7a76\u5f97\u5f88\u597d\u7684\u57ce\u9547(\u5982\u5e9e\u8d1d)\u7684\u5e03\u5c40\u4e0d\u90a3\u4e48\u6807\u51c6\u5316\u3002\u7814\u7a76\u5c0f\u7ec4\u53d1\u73b0\u7684\u5bfa\u5e99\u3001\u5e02\u573a\u5efa\u7b51\u548c\u6d74\u5ba4\u5efa\u7b51\u7fa4\u5728\u5efa\u7b51\u4e0a\u4e5f\u6bd4\u5c0f\u57ce\u5e02\u901a\u5e38\u9884\u671f\u7684\u66f4\u7cbe\u81f4\u3002\n\u5728\u5357\u533a\uff0c\u5c31\u5728\u57ce\u5899\u4e4b\u5185\uff0c\u63a2\u5730\u96f7\u8fbe\u53d1\u73b0\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u957f\u65b9\u5f62\u5efa\u7b51\uff0c\u8fde\u63a5\u7740\u4e00\u7cfb\u5217\u901a\u5f80\u6e21\u69fd\u7684\u6c34\u7ba1\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7ba1\u9053\u53ef\u4ee5\u5728\u8d39\u52d2\u91cc\u8bfa\u7ef4\u7684\u5927\u90e8\u5206\u5730\u533a\u88ab\u8ffd\u8e2a\u5230\uff0c\u5728\u5b83\u7684\u5b64\u5c9b(\u57ce\u5e02\u8857\u533a)\u4e0b\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u50cf\u901a\u5e38\u9884\u671f\u7684\u90a3\u6837\u53ea\u6cbf\u7740\u5b83\u7684\u8857\u9053\u3002\u7814\u7a76\u5c0f\u7ec4\u8ba4\u4e3a\uff0c\u8fd9\u4e2a\u7ed3\u6784\u662f\u4e00\u4e2a\u9732\u5929\u6e38\u6cf3\u9986\u6216\u6e38\u6cf3\u6c60\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u516c\u5171\u6c90\u6d74\u7efc\u5408\u4f53\u7684\u4e00\u90e8\u5206\u3002\n\u66f4\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u5728\u57ce\u5e02\u7684\u5317\u95e8\u9644\u8fd1\uff0c\u7814\u7a76\u5c0f\u7ec4\u5728\u95e8\u5eca\u590d\u5f0f(\u4e00\u6761\u6709\u4e2d\u592e\u4e00\u6392\u67f1\u5b50\u7684\u6709\u76d6\u901a\u9053)\u5185\u53d1\u73b0\u4e86\u4e00\u5bf9\u9762\u5bf9\u9762\u7684\u5927\u578b\u5efa\u7b51\u3002\u4ed6\u4eec\u77e5\u9053\u6ca1\u6709\u76f4\u63a5\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u516c\u5171\u7eaa\u5ff5\u7891\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e3a\u57ce\u5e02\u8fb9\u7f18\u4e00\u5e45\u5f15\u4eba\u5165\u80dc\u7684\u795e\u5723\u666f\u89c2\u505a\u51fa\u4e86\u8d21\u732e\u3002\n\u6211\u4eec\u5728Falert ii Novi\u83b7\u5f97\u7684\u60ca\u4eba\u7684\u8be6\u7ec6\u7a0b\u5ea6\uff0c\u4ee5\u53caGPR\u63ed\u793a\u7684\u4ee4\u4eba\u60ca\u8bb6\u7684\u7279\u5f81\uff0c\u8868\u660e\u8fd9\u79cd\u7c7b\u578b\u7684\u8c03\u67e5\u53ef\u80fd\u4f1a\u6539\u53d8\u8003\u53e4\u5b66\u5bb6\u8c03\u67e5\u57ce\u5e02\u9057\u5740\u7684\u65b9\u5f0f\uff0c\u4f5c\u4e3a\u6574\u4f53\u3002\n\u7c73\u5229\u7279\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u5df2\u7ecf\u4f7f\u7528\u63a2\u5730\u96f7\u8fbe\u8c03\u67e5\u4e86\u610f\u5927\u5229\u7684Interamna Lirenas\uff0c\u4ee5\u53ca\u89c4\u6a21\u8f83\u5c0f\u7684\u5317\u7ea6\u514b\u90e1\u7684Alborough\uff0c\u4f46\u4ed6\u4eec\u73b0\u5728\u5e0c\u671b\u770b\u5230\u5b83\u90e8\u7f72\u5728\u66f4\u5927\u7684\u5730\u70b9\u3002\n\u7c73\u5229\u7279\u8bf4\uff0c\u60f3\u8c61\u63a2\u5730\u96f7\u8fbe\u88ab\u7528\u6765\u8c03\u67e5\u4e00\u4e2a\u5927\u57ce\u5e02\uff0c\u5982\u571f\u8033\u5176\u7684\u7c73\u5229\u90fd\u3001\u5e0c\u814a\u7684\u5c3c\u79d1\u6ce2\u5229\u65af\u6216\u5229\u6bd4\u4e9a\u7684\u9521\u6797\uff0c\u8fd9\u662f\u4ee4\u4eba\u5174\u594b\u7684\uff0c\u73b0\u5728\u4e5f\u662f\u73b0\u5b9e\u7684\u3002\u5173\u4e8e\u7f57\u9a6c\u7684\u57ce\u5e02\u751f\u6d3b\uff0c\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\uff0c\u8fd9\u9879\u6280\u672f\u5e94\u8be5\u4f1a\u5728\u672a\u6765\u51e0\u5341\u5e74\u91cc\u5e26\u6765\u524d\u6240\u672a\u6709\u7684\u673a\u4f1a\u3002\n\u7136\u800c\uff0c\u8fd9\u79cd\u9ad8\u5206\u8fa8\u7387\u6d4b\u7ed8\u4ea7\u751f\u7684\u7edd\u5bf9\u4e30\u5bcc\u7684\u6570\u636e\u786e\u5b9e\u6784\u6210\u4e86\u5de8\u5927\u7684\u6311\u6218\u3002\u4f20\u7edf\u7684\u624b\u5de5\u6570\u636e\u5206\u6790\u65b9\u6cd5\u592a\u8017\u65f6\uff0c\u9700\u8981\u5927\u7ea620\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6574\u8bb0\u5f55\u4e00\u516c\u9877\u571f\u5730\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u5bf9Falert ii Novi\u7684\u68c0\u67e5\uff0c\u4f46\u4e3a\u4e86\u52a0\u5feb\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4ed6\u4eec\u6b63\u5728\u5f00\u53d1\u65b0\u7684\u81ea\u52a8\u5316\u6280\u672f\u3002\nFalert ii Novi\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u6709\u5f88\u597d\u7684\u8bb0\u5f55\uff0c\u6ca1\u6709\u88ab\u73b0\u4ee3\u5efa\u7b51\u6240\u8986\u76d6\uff0c\u5e76\u4e14\u5df2\u7ecf\u6210\u4e3a\u4f7f\u7528\u5176\u4ed6\u975e\u4fb5\u5165\u6027\u6280\u672f(\u5982\u78c1\u529b\u6d4b\u91cf)\u8fdb\u884c\u4e86\u6570\u5341\u5e74\u5206\u6790\u7684\u5bf9\u8c61\uff0c\u4f46\u63a2\u5730\u96f7\u8fbe\u73b0\u5728\u63ed\u793a\u4e86\u4e00\u5e45\u66f4\u5b8c\u6574\u7684\u56fe\u666f\u3002\u66f4\u591a\u4fe1\u606f\uff1aL.Verdonck\uff0cA.Launaro\uff0cF.Vermeulen&Amp\uff1bM.Millett\uff0cFalert ii Novi\u7684\u63a2\u5730\u96f7\u8fbe\u8c03\u67e5\uff1a\u7814\u7a76\u7f57\u9a6c\u57ce\u5e02\u7684\u65b0\u65b9\u6cd5\uff0c2020\u5e746\u67089\u65e5\u3002DOI\uff1a10.15184/aqy.2020.82\u3002\n*\u63a2\u5730\u96f7\u8fbe\u4e4b\u6240\u4ee5\u5982\u6b64\u6709\u6548\uff0c\u662f\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u65e0\u7ebf\u7535\u6ce2\u5728\u5730\u9762\u7269\u54c1\u4e0a\u7684\u53cd\u5c04\u3002\u4e0d\u540c\u7684\u6750\u8d28\u53cd\u5c04\u4e0d\u540c\u7684\u6ce2\uff0c\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u5730\u4e0b\u5730\u7269\u7684\u5730\u56fe\u3002\u867d\u7136\u8fd9\u4e00\u539f\u7406\u4ece1910\u5e74\u5c31\u5f00\u59cb\u4f7f\u7528\u4e86\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6280\u672f\u7684\u8fdb\u6b65\u4f7f\u8bbe\u5907\u53d8\u5f97\u66f4\u5feb\u3001\u66f4\u9ad8\u5206\u8fa8\u7387\u3002", "note_en": "For the first time, archeologists have succeeded in mapping a complete Roman city, Falerii Novi in Italy, using advanced ground penetrating radar (GPR), allowing them to reveal astonishing details while it remains deep underground. The technology could revolutionize our understanding of ancient settlements.    The team, from the University of Cambridge and Ghent University, has discovered a bath complex, market, temple, a public monument unlike anything seen before, and even the city&#39;s sprawling network of water pipes. By looking at different depths, the archeologists can now study how the town evolved over hundreds of years.\n The research, published today in  Antiquity, harnessed recent advances in GPR technology which make it possible to explore larger areas in higher resolution than ever before. This is likely to have major implications for the study of ancient cities because many cannot be excavated either because they are too large, or because they are trapped under modern structures.\n GPR works like regular radar, bouncing radio waves off objects and using the &#39;echo&#39; to build up a picture at different depths.* By towing their GPR instruments behind a quad bike, the archeologists surveyed all 30.5 hectares within the city&#39;s walls\u2014Falerii Novi was just under half the size of Pompeii\u2014taking a reading every 12.5cm.\n Located 50 km north of Rome and first occupied in 241 BC, Falerii Novi survived into the medieval period (until around AD 700). The team&#39;s GPR data can now start to reveal some of the physical changes experienced by the city in this time. They have already found evidence of stone robbing.\n The study also challenges certain assumptions about Roman  , showing that Falerii Novi&#39;s layout was less standardized than many other well-studied towns, like Pompeii. The temple, market building and bath complex discovered by the team are also more architecturally elaborate than would usually be expected in a small city.\n In a southern district, just within the city&#39;s walls, GPR revealed a large rectangular building connected to a series of water pipes which lead to the aqueduct. Remarkably, these pipes can be traced across much of Falerii Novi, running beneath its insulae (city blocks), and not just along its streets, as might normally be expected. The team believes that this structure was an open-air natatio or pool, forming part of a substantial public bathing complex.\n Even more unexpectedly, near the city&#39;s north gate, the team identified a pair of large structures facing each other within a porticus duplex (a covered passageway with central row of columns). They know of no direct parallel but believe these were part of an impressive public monument, and contributed to an intriguing sacred landscape on the city&#39;s edge.\n  &#34;The astonishing level of detail which we have achieved at Falerii Novi, and the surprising features that GPR has revealed, suggest that this type of survey could transform the way archeologists investigate urban sites, as total entities.&#34;\n Millett and his colleagues have already used GPR to survey Interamna Lirenas in Italy, and on a lesser scale, Alborough in North Yorkshire, but they now hope to see it deployed on far bigger sites.\n &#34;It is exciting and now realistic to imagine GPR being used to survey a major city such as Miletus in Turkey, Nicopolis in Greece or Cyrene in Libya&#34;, Millett said. &#34;We still have so much to learn about Roman urban life and this technology should open up unprecedented opportunities for decades to come.&#34;\n The sheer wealth of data produced by such high-resolution mapping does, however, pose significant challenges. Traditional methods of manual data analysis are too time consuming, requiring around 20 hours to fully document a single hectare. It will be some time before the researchers finish examining Falerii Novi but to speed the process up they are developing new automated techniques.\n Falerii Novi is well documented in the historical record, is not covered by modern buildings and has been the subject of decades of analysis using other non-invasive techniques, such as magnetometry, but GPR has now revealed a far more complete picture.        More information:\t\t\t\t\t\t\t\t\t\t\t\tL. Verdonck, A. Launaro, F. Vermeulen &amp; M. Millett, &#39;Ground-penetrating radar survey at Falerii Novi: a new approach to the study of Roman cities&#39;, 9 June 2020.  DOI: 10.15184/aqy.2020.82\n *GPR is so effective because it relies on the reflection of radio waves off items in the ground. Different materials reflect waves differently, which can be used to create maps of underground features. Although this principle has been employed since the 1910s, over the past few years technological advances have made the equipment faster and higher resolution.", "posttime": "2020-06-09 21:25:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57ce\u5e02,roman,\u96f7\u8fbe", "title": "\u6574\u4e2a\u7f57\u9a6c\u57ce\u5e02\u5728\u6ca1\u6709\u4efb\u4f55\u6316\u6398\u7684\u60c5\u51b5\u4e0b\u5c31\u88ab\u63ed\u5f00\u4e86", "title_en": "Entire Roman city revealed without any digging", "transed": 1, "url": "https://phys.org/news/2020-06-entire-roman-city-revealed.html", "via": "", "real_tags": ["\u57ce\u5e02", "roman", "\u96f7\u8fbe"]}, {"category": "", "categoryclass": "", "imagename": "6b2993c97c8db534d180a91c453a25d2.jpg", "infoid": 1005848, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u8d1f\u8d23\u4eba\u8b66\u544a\u8bf4\uff0c\u5c3d\u7ba1\u6b27\u6d32\u7684\u60c5\u51b5\u6b63\u5728\u6539\u5584\uff0c\u4f46\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5728\u5168\u7403\u8303\u56f4\u5185\u6b63\u5728\u6076\u5316\u3002\n\u5728\u5468\u4e00\u7684\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\uff0cTedros Adhanom Ghebreyesus\u6307\u51fa\uff0c\u5468\u65e5\u5411\u8054\u5408\u56fd\u536b\u751f\u673a\u6784\u62a5\u544a\u7684\u75c5\u4f8b\u4e2d\uff0c\u7ea675%\u6765\u81ea\u7f8e\u6d32\u548c\u5357\u4e9a\u768410\u4e2a\u56fd\u5bb6\u3002\u4ed6\u6307\u51fa\uff0c\u5728\u8fc7\u53bb\u768410\u5929\u4e2d\uff0c\u67099\u5929\u62a5\u544a\u4e86\u8d85\u8fc710\u4e07\u4f8b\u75c5\u4f8b-\u5468\u65e5\u62a5\u544a\u768413.6\u4e07\u4f8b\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u6570\u5b57\u3002\n\u7279\u5fb7\u7f57\u65af\u8bf4\uff0c\u975e\u6d32\u5927\u591a\u6570\u56fd\u5bb6\u7684\u75c5\u4f8b\u4ecd\u5728\u589e\u52a0\uff0c\u5305\u62ec\u5728\u65b0\u7684\u5730\u7406\u533a\u57df\uff0c\u5c3d\u7ba1\u975e\u6d32\u5927\u9646\u7684\u5927\u591a\u6570\u56fd\u5bb6\u7684\u75c5\u4f8b\u4e0d\u52301000\u4f8b\u3002\n\u201c\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u611f\u5230\u9f13\u821e\u7684\u662f\uff0c\u4e16\u754c\u4e0a\u6709\u51e0\u4e2a\u56fd\u5bb6\u770b\u5230\u4e86\u79ef\u6781\u7684\u8ff9\u8c61\uff0c\u201d\u7279\u5fb7\u7f57\u65af\u8bf4\u3002\u201c\u5728\u8fd9\u4e9b\u56fd\u5bb6\uff0c\u73b0\u5728\u6700\u5927\u7684\u5a01\u80c1\u662f\u81ea\u6ee1.\u201d", "note_en": "Health        The head of the World Health Organization warned that the coronavirus pandemic is worsening globally, even as the situation in Europe is improving.\n At a press briefing on Monday, Tedros Adhanom Ghebreyesus noted that about 75% of cases reported to the U.N. health agency on Sunday came from 10 countries in the Americas and South Asia. He noted that more than 100,000 cases have been reported on nine of the past 10 days \u2014 and that the 136,000 cases reported Sunday was the biggest number so far.\n Tedros said most countries in Africa are still seeing an increase in cases, including in new geographic areas even though most countries on the continent have fewer than 1,000 cases.\n \u201cAt the same time, we\u2019re encouraged that several countries around the world are seeing positive signs,\u201d Tedros said. \u201cIn these countries, the biggest threat now is complacency.\u201d", "posttime": "2020-06-09 21:10:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u7ec4\u7ec7,worsening", "title": "\u4e16\u536b\u7ec4\u7ec7\u5728\u8c08\u5230\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u65f6\u8bf4\uff0c\u5168\u7403\u8303\u56f4\u5185\u60c5\u51b5\u6b63\u5728\u6076\u5316", "title_en": "'Globally It's Worsening,' WHO Says of Coronavirus Pandemic", "transed": 1, "url": "https://www.pbs.org/newshour/health/who-chief-warns-virus-is-worsening-globally", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u7ec4\u7ec7", "worsening"]}, {"category": "", "categoryclass": "", "imagename": "a69a1ea7d3370be97d8d5f48563692e6.jpg", "infoid": 1005847, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u67e5\u770b\u6240\u6709\u7167\u7247\uff0c\u5728\u7f57\u9a6c\u57ce\u5e02\u6cd5\u52d2\u91cc\u8bfa\u7ef4\uff0c\u610f\u5927\u5229\u65b0\u53d1\u73b0\u7684\u5bfa\u5e99\u7684\u63a2\u5730\u96f7\u8fbe\u5730\u56fe\u3002\u7f72\u540d\uff1aL.Verdonck\u3002\n\u8003\u53e4\u5b66\u5bb6\u7b2c\u4e00\u6b21\u6210\u529f\u5730\u4f7f\u7528\u5148\u8fdb\u7684\u63a2\u5730\u96f7\u8fbe(GPR)\u7ed8\u5236\u4e86\u4e00\u5ea7\u5b8c\u6574\u7684\u7f57\u9a6c\u57ce\u5e02\uff0c\u610f\u5927\u5229\u7684Falert ii Novi\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5728\u5b83\u4ecd\u7136\u6df1\u57cb\u5728\u5730\u4e0b\u7684\u540c\u65f6\u63ed\u793a\u51fa\u4ee4\u4eba\u9707\u60ca\u7684\u7ec6\u8282\u3002\u8fd9\u9879\u6280\u672f\u53ef\u80fd\u4f1a\u5f7b\u5e95\u6539\u53d8\u6211\u4eec\u5bf9\u53e4\u4ee3\u805a\u843d\u7684\u7406\u89e3\u3002\n\u6765\u81ea\u5251\u6865\u5927\u5b66\u548c\u6839\u7279\u5927\u5b66\u7684\u7814\u7a76\u5c0f\u7ec4\u53d1\u73b0\u4e86\u4e00\u4e2a\u6d74\u6c60\u5efa\u7b51\u7fa4\u3001\u5e02\u573a\u3001\u5bfa\u5e99\u3001\u4e00\u5ea7\u524d\u6240\u672a\u6709\u7684\u516c\u5171\u7eaa\u5ff5\u7891\uff0c\u751a\u81f3\u8fd8\u53d1\u73b0\u4e86\u57ce\u5e02\u5e9e\u5927\u7684\u6c34\u7ba1\u7f51\u7edc\u3002\u901a\u8fc7\u89c2\u5bdf\u4e0d\u540c\u7684\u6df1\u5ea6\uff0c\u8003\u53e4\u5b66\u5bb6\u73b0\u5728\u53ef\u4ee5\u7814\u7a76\u8fd9\u4e2a\u5c0f\u9547\u6570\u767e\u5e74\u6765\u662f\u5982\u4f55\u6f14\u53d8\u7684\u3002\n\u4eca\u5929\u53d1\u8868\u5728\u201c\u53e4\u4ee3\u201d\u6742\u5fd7\u4e0a\u7684\u8fd9\u9879\u7814\u7a76\uff0c\u5229\u7528\u4e86\u63a2\u5730\u96f7\u8fbe\u6280\u672f\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u4f7f\u4ee5\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u63a2\u7d22\u66f4\u5927\u7684\u533a\u57df\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u53e4\u57ce\u7684\u7814\u7a76\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff0c\u56e0\u4e3a\u8bb8\u591a\u53e4\u57ce\u8981\u4e48\u56e0\u4e3a\u592a\u5927\uff0c\u8981\u4e48\u56e0\u4e3a\u88ab\u56f0\u5728\u73b0\u4ee3\u5efa\u7b51\u4e4b\u4e0b\u800c\u65e0\u6cd5\u6316\u6398\u3002\n\u63a2\u5730\u96f7\u8fbe\u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u666e\u901a\u96f7\u8fbe\u4e00\u6837\uff0c\u5c06\u65e0\u7ebf\u7535\u6ce2\u53cd\u5c04\u5230\u7269\u4f53\u4e0a\uff0c\u5e76\u5229\u7528\u201c\u56de\u6ce2\u201d\u5728\u4e0d\u540c\u6df1\u5ea6\u5efa\u7acb\u56fe\u50cf\u3002\u901a\u8fc7\u5c06\u4ed6\u4eec\u7684\u63a2\u5730\u96f7\u8fbe\u4eea\u5668\u62d6\u5230\u4e00\u8f86\u56db\u8f6e\u81ea\u884c\u8f66\u540e\u9762\uff0c\u8003\u53e4\u5b66\u5bb6\u4eec\u8c03\u67e5\u4e86\u8fd9\u5ea7\u57ce\u5e02\u57ce\u5899\u5185\u7684\u6240\u670930.5\u516c\u9877\u571f\u5730-Falert ii Novi\u7684\u5927\u5c0f\u7565\u4f4e\u4e8e\u5e9e\u8d1d\u7684\u4e00\u534a-\u6bcf12.5\u5398\u7c73\u6d4b\u91cf\u4e00\u6b21\u8bfb\u6570\u3002\n\u4f4d\u4e8e\u7f57\u9a6c\u4ee5\u531750\u516c\u91cc\uff0c\u516c\u5143\u524d241\u5e74\u9996\u6b21\u5360\u9886\uff0c\u6cd5\u52d2\u91cc\u8bfa\u7ef4\u5e78\u5b58\u5230\u4e2d\u4e16\u7eaa\u65f6\u671f(\u76f4\u5230\u516c\u5143700\u5e74\u5de6\u53f3)\u3002\u8be5\u56e2\u961f\u7684\u63a2\u5730\u96f7\u8fbe\u6570\u636e\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u63ed\u793a\u8fd9\u5ea7\u57ce\u5e02\u5728\u8fd9\u6bb5\u65f6\u95f4\u7ecf\u5386\u7684\u4e00\u4e9b\u7269\u7406\u53d8\u5316\u3002\u4ed6\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u62a2\u52ab\u77f3\u5934\u7684\u8bc1\u636e\u3002\n\u8fd9\u9879\u7814\u7a76\u8fd8\u6311\u6218\u4e86\u5173\u4e8e\u7f57\u9a6c\u57ce\u5e02\u8bbe\u8ba1\u7684\u67d0\u4e9b\u5047\u8bbe\uff0c\u8868\u660e\u6cd5\u52d2\u91cc\u8bfa\u7ef4\u7684\u5e03\u5c40\u6bd4\u8bb8\u591a\u5176\u4ed6\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u7684\u57ce\u9547(\u5982\u5e9e\u8d1d)\u7684\u5e03\u5c40\u4e0d\u90a3\u4e48\u6807\u51c6\u5316\u3002\u7814\u7a76\u5c0f\u7ec4\u53d1\u73b0\u7684\u5bfa\u5e99\u3001\u5e02\u573a\u5efa\u7b51\u548c\u6d74\u5ba4\u5efa\u7b51\u7fa4\u5728\u5efa\u7b51\u4e0a\u4e5f\u6bd4\u5c0f\u57ce\u5e02\u901a\u5e38\u9884\u671f\u7684\u66f4\u7cbe\u81f4\u3002\n\u5728\u5357\u533a\uff0c\u5c31\u5728\u57ce\u5899\u5185\uff0c\u63a2\u5730\u96f7\u8fbe\u53d1\u73b0\u4e86\u4e00\u5ea7\u5de8\u5927\u7684\u77e9\u5f62\u5efa\u7b51\uff0c\u8fde\u63a5\u7740\u4e00\u7cfb\u5217\u901a\u5f80\u6e21\u69fd\u7684\u6c34\u7ba1\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7ba1\u9053\u53ef\u4ee5\u5728\u8d39\u52d2\u91cc\u8bfa\u7ef4\u7684\u5927\u90e8\u5206\u5730\u533a\u88ab\u8ffd\u8e2a\u5230\uff0c\u5728\u5b83\u7684\u5b64\u5c9b(\u57ce\u5e02\u8857\u533a)\u4e0b\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u50cf\u901a\u5e38\u9884\u671f\u7684\u90a3\u6837\u53ea\u6cbf\u7740\u5b83\u7684\u8857\u9053\u3002\u7814\u7a76\u5c0f\u7ec4\u8ba4\u4e3a\uff0c\u8fd9\u4e2a\u7ed3\u6784\u662f\u4e00\u4e2a\u9732\u5929\u6e38\u6cf3\u9986\u6216\u6e38\u6cf3\u6c60\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u516c\u5171\u6c90\u6d74\u7efc\u5408\u4f53\u7684\u4e00\u90e8\u5206\u3002\n\u66f4\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u5728\u57ce\u5e02\u5317\u95e8\u9644\u8fd1\uff0c\u7814\u7a76\u5c0f\u7ec4\u5728\u95e8\u5eca\u590d\u5f0f(\u4e00\u6761\u6709\u4e2d\u592e\u4e00\u6392\u67f1\u5b50\u7684\u6709\u76d6\u901a\u9053)\u5185\u53d1\u73b0\u4e86\u4e00\u5bf9\u9762\u5bf9\u9762\u7684\u5927\u578b\u5efa\u7b51\u3002\u4ed6\u4eec\u77e5\u9053\u6ca1\u6709\u76f4\u63a5\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u76f8\u4fe1\u8fd9\u4e9b\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u516c\u5171\u7eaa\u5ff5\u7891\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e3a\u57ce\u5e02\u8fb9\u7f18\u4e00\u5e45\u5f15\u4eba\u5165\u80dc\u7684\u795e\u5723\u666f\u89c2\u505a\u51fa\u4e86\u8d21\u732e\u3002\n\u901a\u8baf\u4f5c\u8005\u3001\u5251\u6865\u5927\u5b66\u53e4\u5178\u5b66\u9662\u7684\u9a6c\u4e01\u00b7\u7c73\u5229\u7279\u6559\u6388\u8bf4\uff1a\u201c\u6211\u4eec\u5728Falert ii Novi\u53d6\u5f97\u7684\u60ca\u4eba\u7684\u7ec6\u8282\u6c34\u5e73\uff0c\u4ee5\u53caGPR\u63ed\u793a\u7684\u4ee4\u4eba\u60ca\u8bb6\u7684\u7279\u5f81\uff0c\u8868\u660e\u8fd9\u79cd\u7c7b\u578b\u7684\u8c03\u67e5\u53ef\u80fd\u4f1a\u6539\u53d8\u8003\u53e4\u5b66\u5bb6\u8c03\u67e5\u57ce\u5e02\u9057\u5740\u7684\u65b9\u5f0f\uff0c\u4f5c\u4e3a\u6574\u4f53\u3002\u201d(\u7f16\u8005\u6309\uff1a\u201c\u6211\u4eec\u5728Falert ii Novi\u53d6\u5f97\u4e86\u60ca\u4eba\u7684\u7ec6\u8282\u6c34\u5e73\uff0c\u4ee5\u53caGPR\u63ed\u793a\u7684\u4ee4\u4eba\u60ca\u8bb6\u7684\u7279\u5f81\uff0c\u8fd9\u8868\u660e\u8fd9\u79cd\u7c7b\u578b\u7684\u8c03\u67e5\u53ef\u80fd\u4f1a\u6539\u53d8\u8003\u53e4\u5b66\u5bb6\u8c03\u67e5\u57ce\u5e02\u9057\u5740\u7684\u65b9\u5f0f\u3002\u201d\n\u7c73\u5229\u7279\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u5df2\u7ecf\u4f7f\u7528\u63a2\u5730\u96f7\u8fbe\u8c03\u67e5\u4e86\u610f\u5927\u5229\u7684Interamna Lirenas\uff0c\u4ee5\u53ca\u89c4\u6a21\u8f83\u5c0f\u7684\u5317\u7ea6\u514b\u90e1\u7684Alborough\uff0c\u4f46\u4ed6\u4eec\u73b0\u5728\u5e0c\u671b\u770b\u5230\u5b83\u90e8\u7f72\u5728\u66f4\u5927\u7684\u5730\u70b9\u3002\n\u7c73\u5229\u7279\u8bf4\uff1a\u201c\u60f3\u8c61\u63a2\u5730\u96f7\u8fbe\u88ab\u7528\u6765\u8c03\u67e5\u4e00\u4e2a\u5927\u57ce\u5e02\uff0c\u5982\u571f\u8033\u5176\u7684\u7c73\u5229\u90fd\u3001\u5e0c\u814a\u7684\u5c3c\u6ce2\u5229\u65af\u6216\u5229\u6bd4\u4e9a\u7684\u5e0c\u96f7\u6069\uff0c\u8fd9\u662f\u4ee4\u4eba\u5174\u594b\u7684\uff0c\u73b0\u5728\u4e5f\u662f\u73b0\u5b9e\u7684\u3002\u201d\u201c\u5173\u4e8e\u7f57\u9a6c\u7684\u57ce\u5e02\u751f\u6d3b\uff0c\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\uff0c\u8fd9\u9879\u6280\u672f\u5e94\u8be5\u4f1a\u5728\u672a\u6765\u51e0\u5341\u5e74\u5e26\u6765\u524d\u6240\u672a\u6709\u7684\u673a\u4f1a\u3002\u201d\n\u7136\u800c\uff0c\u8fd9\u79cd\u9ad8\u5206\u8fa8\u7387\u6d4b\u7ed8\u4ea7\u751f\u7684\u7edd\u5bf9\u4e30\u5bcc\u7684\u6570\u636e\u786e\u5b9e\u6784\u6210\u4e86\u5de8\u5927\u7684\u6311\u6218\u3002\u4f20\u7edf\u7684\u624b\u5de5\u6570\u636e\u5206\u6790\u65b9\u6cd5\u592a\u8017\u65f6\uff0c\u9700\u8981\u5927\u7ea620\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6574\u8bb0\u5f55\u4e00\u516c\u9877\u571f\u5730\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u5bf9Falert ii Novi\u7684\u68c0\u67e5\uff0c\u4f46\u4e3a\u4e86\u52a0\u5feb\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4ed6\u4eec\u6b63\u5728\u5f00\u53d1\u65b0\u7684\u81ea\u52a8\u5316\u6280\u672f\u3002\nFalert ii Novi\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u6709\u5f88\u597d\u7684\u8bb0\u5f55\uff0c\u6ca1\u6709\u88ab\u73b0\u4ee3\u5efa\u7b51\u6240\u8986\u76d6\uff0c\u5e76\u4e14\u5df2\u7ecf\u6210\u4e3a\u4f7f\u7528\u5176\u4ed6\u975e\u4fb5\u5165\u6027\u6280\u672f(\u5982\u78c1\u529b\u6d4b\u91cf)\u8fdb\u884c\u4e86\u6570\u5341\u5e74\u5206\u6790\u7684\u5bf9\u8c61\uff0c\u4f46\u63a2\u5730\u96f7\u8fbe\u73b0\u5728\u63ed\u793a\u4e86\u4e00\u5e45\u66f4\u5b8c\u6574\u7684\u56fe\u666f\u3002", "note_en": "See all photos  Ground Penetrating Radar map of the newly discovered temple in the Roman city of Falerii Novi, Italy. Credit: L. Verdonck\n            For the first time, archaeologists have succeeded in mapping a complete Roman city, Falerii Novi in Italy, using advanced ground penetrating radar (GPR), allowing them to reveal astonishing details while it remains deep underground. The technology could revolutionise our understanding of ancient settlements.\n The team, from the University of Cambridge and Ghent University, has discovered a bath complex, market, temple, a public monument unlike anything seen before, and even the city\u2019s sprawling network of water pipes. By looking at different depths, the archaeologists can now study how the town evolved over hundreds of years.\n The research, published today in\u00a0 Antiquity, harnessed recent advances in GPR technology which make it possible to explore larger areas in higher resolution than ever before. This is likely to have major implications for the study of ancient cities because many cannot be excavated either because they are too large, or because they are trapped under modern structures.\n GPR works like regular radar, bouncing radio waves off objects and using the \u2018echo\u2019 to build up a picture at different depths. By towing their GPR instruments behind a quad bike, the archaeologists surveyed all 30.5 hectares within the city\u2019s walls \u2014 Falerii Novi was just under half the size of Pompeii \u2014 taking a reading every 12.5cm.\n Located 50 km north of Rome and first occupied in 241 BC, Falerii Novi survived into the medieval period (until around AD 700). The team\u2019s GPR data can now start to reveal some of the physical changes experienced by the city in this time. They have already found evidence of stone robbing.\n The study also challenges certain assumptions about Roman urban design, showing that Falerii Novi\u2019s layout was less standardised than many other well-studied towns, like Pompeii. The temple, market building and bath complex discovered by the team are also more architecturally elaborate than would usually be expected in a small city.\n In a southern district, just within the city\u2019s walls, GPR revealed a large rectangular building connected to a series of water pipes which lead to the aqueduct. Remarkably, these pipes can be traced across much of Falerii Novi, running beneath its insulae (city blocks), and not just along its streets, as might normally be expected. The team believes that this structure was an open-air natatio or pool, forming part of a substantial public bathing complex.\n Even more unexpectedly, near the city\u2019s north gate, the team identified a pair of large structures facing each other within a porticus duplex (a covered passageway with central row of columns). They know of no direct parallel but believe these were part of an impressive public monument, and contributed to an intriguing sacred landscape on the city\u2019s edge.\n Corresponding author, Professor Martin Millett from the University of Cambridge\u2019s Faculty of Classics, said:\u00a0\u201cThe astonishing level of detail which we have achieved at Falerii Novi, and the surprising features that GPR has revealed, suggest that this type of survey could transform the way archaeologists investigate urban sites, as total entities.\u201d\n Millett and his colleagues have already used GPR to survey Interamna Lirenas in Italy, and on a lesser scale, Alborough in North Yorkshire, but they now hope to see it deployed on far bigger sites.\n \u201cIt is exciting and now realistic to imagine GPR being used to survey a major city such as Miletus in Turkey, Nicopolis in Greece or Cyrene in Libya\u201d, Millett said. \u201cWe still have so much to learn about Roman urban life and this technology should open up unprecedented opportunities for decades to come.\u201d\n The sheer wealth of data produced by such high-resolution mapping does, however, pose significant challenges. Traditional methods of manual data analysis are too time consuming, requiring around 20 hours to fully document a single hectare. It will be some time before the researchers finish examining Falerii Novi but to speed the process up they are developing new automated techniques.\n Falerii Novi is well documented in the historical record, is not covered by modern buildings and has been the subject of decades of analysis using other non-invasive techniques, such as magnetometry, but GPR has now revealed a far more complete picture.", "posttime": "2020-06-09 21:09:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96f7\u8fbe,ground,\u57ce\u5e02", "title": "\u5148\u8fdb\u7684\u63a2\u5730\u96f7\u8fbe(GPR)\u663e\u793a\u7f57\u9a6c\u57ce\u5e02", "title_en": "Advanced ground penetrating radar (GPR) reveals Roman city", "transed": 1, "url": "https://www.archaeology.wiki/blog/2020/06/09/entire-roman-city-revealed-without-any-digging/", "via": "", "real_tags": ["\u96f7\u8fbe", "ground", "\u57ce\u5e02"]}, {"category": "", "categoryclass": "", "imagename": "54e3dcdeb7344d32e7ed22245a6edc2b.jpg", "infoid": 1005843, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u7ea62\u4ebf\u7f8e\u56fd\u4eba\uff0c\u51e0\u4e4e\u5360\u603b\u4eba\u53e3\u7684\u4e09\u5206\u4e4b\u4e8c\uff0c\u559d\u542b\u6c1f\u7684\u6c34\u6765\u5bf9\u6297\u86c0\u7259\u3002\u65e7\u91d1\u5c71\u4e00\u5bb6\u8054\u90a6\u6cd5\u9662\u76ee\u524d\u6b63\u5728\u5ba1\u7406\u7684\u4e00\u8d77\u6848\u4ef6\u53ef\u80fd\u4f1a\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\n\u5305\u62ec\u98df\u54c1\u548c\u6c34\u89c2\u5bdf\u3001\u6c1f\u5316\u7269\u884c\u52a8\u7f51\u7edc\u548c\u5988\u5988\u53cd\u5bf9\u6c1f\u5316\u5728\u5185\u7684\u6d88\u8d39\u8005\u56e2\u4f53\u8ba4\u4e3a\uff0c\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660e\uff0c\u5f53\u5b55\u5987\u559d\u542b\u6c1f\u6c34\u65f6\uff0c\u5979\u4eec\u7684\u5b69\u5b50\u660e\u663e\u6bd4\u5176\u4ed6\u4eba\u66f4\u6709\u53ef\u80fd\u906d\u53d7\u795e\u7ecf\u635f\u4f24\uff0c\u5305\u62ec\u667a\u5546\u4e0b\u964d\u548c\u6ce8\u610f\u529b\u7f3a\u9677\u591a\u52a8\u969c\u788d\u3002\u7814\u7a76\u5c0f\u7ec4\u575a\u6301\u8ba4\u4e3a\uff0c\u542b\u6c1f\u7259\u818f\u63d0\u4f9b\u4e86\u6240\u6709\u7684\u597d\u5904\uff0c\u800c\u6ca1\u6709\u4efb\u4f55\u98ce\u9669\u3002\n\u5468\u4e00\uff0c\u5f8b\u5e08\u8fc8\u514b\u5c14\u00b7\u5eb7\u5948\u7279(Michael Connett)\u5728\u7f8e\u56fd\u5730\u533a\u6cd5\u5b98\u7231\u5fb7\u534e\u00b7\u9648(Edward Chen)\u4f5c\u8bc1\u7684\u7b2c\u4e00\u5929\u540e\u8868\u793a\uff0c\u8fd9\u573a\u5ba1\u5224\u53ef\u80fd\u4f1a\u5bfc\u81f4\u201c\u6211\u4eec\u4f7f\u7528\u548c\u76d1\u7ba1\u6c1f\u5316\u7269\u7684\u65b9\u5f0f\u53d1\u751f\u5386\u53f2\u6027\u7684\u53d8\u5316\u201d\u3002\u9648\u6b63\u5728\u6ca1\u6709\u966a\u5ba1\u56e2\u7684\u60c5\u51b5\u4e0b\u5ba1\u7406\u6b64\u6848\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u8bc1\u636e\u53ef\u4ee5\u4e0e20\u4e16\u7eaa70\u5e74\u4ee3\u5bfc\u81f4\u73af\u5883\u4fdd\u62a4\u5c40\u9010\u6b65\u505c\u6b62\u4f7f\u7528\u542b\u94c5\u6c7d\u6cb9\u7684\u53d1\u73b0\u76f8\u63d0\u5e76\u8bba\u3002\nEPA\u5bf9\u996e\u7528\u6c34\u4e2d\u6c1f\u5316\u7269\u7684\u6279\u51c6\u5728\u6b64\u6848\u4e2d\u53d7\u5230\u6311\u6218\uff0c\u8be5\u673a\u6784\u8868\u793a\uff0c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u8fd9\u79cd\u5316\u5b66\u7269\u8d28\u4f24\u5bb3\u4e86\u513f\u7ae5\u6216\u4ed6\u4eec\u7684\u6bcd\u4eb2\u3002\u8be5\u673a\u6784\u6307\u51fa\uff0c\u4e16\u754c\u5404\u5730\u7684\u5927\u591a\u6570\u536b\u751f\u673a\u6784\u90fd\u540c\u610f\u7f8e\u56fd\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u7684\u89c2\u70b9\uff0c\u5373\u52a0\u6c1f\u7684\u6c34\u662f\u5b89\u5168\u548c\u5065\u5eb7\u7684\u3002\n\u7f8e\u56fd\u572820\u4e16\u7eaa40\u5e74\u4ee3\u4e2d\u671f\u9996\u6b21\u5141\u8bb8\u5c06\u6c1f\u5316\u7269\u6dfb\u52a0\u5230\u996e\u7528\u6c34\u4e2d\uff0c\u73b0\u5728\u5927\u591a\u6570\u670d\u52a1\u4e8e\u5927\u91cf\u4eba\u53e3\u7684\u4f9b\u6c34\u7cfb\u7edf\u90fd\u4f7f\u7528\u6c1f\u5316\u7269\u3002\u5eb7\u5948\u7279\u8bf4\uff0c\u6570\u767e\u4e2a\u793e\u533a\u5df2\u7ecf\u7981\u6b62\u4e86\u6c1f\u5316-\u7279\u522b\u662f\u4fc4\u52d2\u5188\u5dde\u7684\u6ce2\u7279\u5170\uff0c\u8be5\u5dde\u7684\u9009\u6c11\u57281956\u5e74\u81f32013\u5e74\u7684\u56db\u6b21\u5355\u72ec\u6295\u7968\u4e2d\u62d2\u7edd\u6388\u6743\u6c1f\u5316\u3002\u4f46\u52a0\u5dde\u6cd5\u5f8b\u8981\u6c42\u4e3a1\u4e07\u6216\u66f4\u591a\u5ba2\u6237\u63d0\u4f9b\u4f9b\u6c34\u7cfb\u7edf\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u662f\u6839\u636e1976\u5e74\u7684\u4e00\u9879\u8054\u90a6\u6cd5\u5f8b-\u6709\u6bd2\u7269\u8d28\u63a7\u5236\u6cd5-\u63d0\u8d77\u7684\uff0c\u8be5\u6cd5\u5f8b\u5141\u8bb8\u516c\u6c11\u56e2\u4f53\u5411EPA\u8bf7\u613f\uff0c\u8981\u6c42\u91cd\u65b0\u8003\u8651\u5176\u4e4b\u524d\u5bf9\u4e00\u79cd\u5316\u5b66\u54c1\u7684\u6279\u51c6\u3002\u8fd9\u4e9b\u6d88\u8d39\u8005\u56e2\u4f53\u4e8e2016\u5e7411\u6708\u5411EPA\u63d0\u4ea4\u4e86\u8bf7\u613f\u4e66\uff0c\u5e76\u5728EPA\u4e8e2017\u5e742\u6708\u62d2\u7edd\u4ed6\u4eec\u540e\u8bc9\u8bf8\u6cd5\u9662\u3002\u5eb7\u5948\u7279\u8bf4\uff0c\u8fd9\u663e\u7136\u662f\u81ea1976\u5e74\u4ee5\u6765\u7b2c\u4e00\u8d77\u8fd9\u6837\u7684\u6848\u4ef6\u5f00\u5ead\u5ba1\u7406\u3002\n\u9648\u62d2\u7edd\u9a73\u56de\u8fd9\u8d77\u8bc9\u8bbc\uff0c\u53d1\u73b0\u4e86\u5173\u4e8e\u6c1f\u5316\u7269\u7684\u597d\u5904\u548c\u98ce\u9669\u7684\u4e8b\u5b9e\u4e89\u8bae\uff0c\u5e76\u62d2\u7edd\u4e86EPA\u5c06\u8bc1\u636e\u9650\u5236\u5728\u8be5\u673a\u6784\u9762\u524d\u7684\u884c\u653f\u8bb0\u5f55\u7684\u8981\u6c42\u3002\n\u8fd9\u4f7f\u5f97\u539f\u544a\u80fd\u591f\u5f15\u5165\u66f4\u591a\u7684\u8bc1\u636e\uff0c\u5305\u62ec\u6700\u8fd1\u7531\u7f8e\u56fd\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662(U.S.National Institutes Of Health)\u8d44\u52a9\u7684\u5173\u4e8e\u52a0\u62ff\u5927\u548c\u58a8\u897f\u54e5\u513f\u7ae5\u72b6\u51b5\u7684\u7814\u7a76\u3002\u5eb7\u5948\u7279\u8bf4\uff0c\u7814\u7a76\u53d1\u73b0\uff0c\u65e9\u671f\u63a5\u89e6\u542b\u6c1f\u6c34\u4e0e\u667a\u529b\u4e0b\u964d\u6216ADHD\u884c\u4e3a\u4e4b\u95f4\u5b58\u5728\u201c\u91cd\u5927\u5173\u8054\u201d\u3002\n\u6cd5\u5b98\u8fd8\u9a73\u56de\u4e86\u73af\u5883\u4fdd\u62a4\u5c40\u8bd5\u56fe\u5728\u5ba1\u5224\u7684\u7b2c\u4e00\u9636\u6bb5\u5f15\u5165\u8bc1\u636e\uff0c\u4ee5\u8bc1\u660e\u6c1f\u5316\u7269\u7684\u597d\u5904\u8d85\u8fc7\u4e86\u4efb\u4f55\u5065\u5eb7\u98ce\u9669\u3002\u5728\u8ba1\u5212\u5230\u4e0b\u5468\u7684\u7b2c\u4e00\u9636\u6bb5\u4e4b\u540e\uff0c\u9648\u5c06\u51b3\u5b9a\u6c1f\u5316\u7269\u662f\u5426\u5bf9\u996e\u7528\u6c34\u6784\u6210\u4e0d\u5408\u7406\u7684\u98ce\u9669\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u4ed6\u5c06\u547d\u4ee4EPA\u5f00\u59cb\u89c4\u5219\u5236\u5b9a\u7a0b\u5e8f\uff0c\u4ee5\u6d88\u9664\u8fd9\u79cd\u98ce\u9669\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u5c06\u5728\u5ba1\u5224\u7684\u7b2c\u4e8c\u9636\u6bb5\u8fdb\u884c\u8fa9\u8bba\u3002", "note_en": "About 200 million Americans, nearly two-thirds of the population, drink water containing fluoride to fight tooth decay. That could be changed by a case now on trial in a San Francisco federal court.\n  Consumer groups including Food and Water Watch, the Fluoride Action Network and Moms Against Fluoridation contend recent studies show that when pregnant women drink fluoridated water, their children are significantly more likely than others to suffer neurological damage, including reduced IQs and attention deficit hyperactivity disorder. Fluoridated toothpaste, the groups maintain, provides all of the benefits and none of the risks.\n  The trial could lead to \u201ca historic shift in how we go about using and regulating fluoride,\u201d attorney Michael Connett said Monday after the first day of testimony before U.S. District Judge Edward Chen, who is hearing the case without a jury. He said the evidence was comparable to discoveries in the 1970s that led the Environmental Protection Agency to phase out the use of leaded gasoline.\n  The EPA, whose approval of fluoride in drinking water is challenged in the case, says there is no evidence the chemical has harmed children or their mothers. The agency notes that most health agencies around the world agree with the U.S. Centers for Disease Control and Prevention that fluoridated water is safe and healthful.\n  The U.S. first allowed fluoride to be added to drinking water in the mid-1940s, and it is now used in most water systems that serve substantial populations. Connett said hundreds of communities have banned it \u2014 notably Portland, Ore., whose voters have refused to authorize fluoridation in four separate votes between 1956 and 2013. But it is required by California law for water systems serving 10,000 or more customers.\n  The suit was filed under a 1976 federal law, the Toxic Substances Control Act, which allows citizen groups to petition the EPA to reconsider its previous approval of a chemical. The consumer groups presented their petition to the EPA in November 2016 and went to court after the agency turned them down in February 2017. Connett said it is apparently the first such case to go to trial since 1976.\n  Chen has refused to dismiss the suit, finding factual disputes over the benefits and risks of fluoride, and also denied the EPA\u2019s request to limit evidence to the administrative record before the agency.\n  That has allowed the plaintiffs to introduce additional evidence, including recent studies funded by the U.S. National Institutes of Health on conditions of children in Canada and Mexico. Connett said the studies found \u201csignificant associations\u201d between early-life exposure to fluoridated water and reduced intelligence or ADHD behavior.\n  The judge also rejected the EPA\u2019s attempt to introduce evidence at the first phase of the trial to show that the benefits of fluoride outweigh any health risks. After the first phase, scheduled through next week, Chen will decide whether fluoride poses an unreasonable risk in drinking water. If so, he would order the EPA to begin rule-making proceedings to eliminate that risk, proceedings that would be debated in a second phase of the trial.", "posttime": "2020-06-09 21:05:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u80fd,remove,\u6c1f\u5316\u7269", "title": "\u8bc9\u8bbc\u53ef\u80fd\u53bb\u9664\u996e\u7528\u6c34\u4e2d\u7684\u6c1f\u5316\u7269", "title_en": "Lawsuit Could Remove Fluoride from Drinking Water", "transed": 1, "url": "https://www.sfchronicle.com/bayarea/article/Trial-underway-in-SF-could-remove-fluoride-from-15326196.php", "via": "", "real_tags": ["\u53ef\u80fd", "remove", "\u6c1f\u5316\u7269"]}, {"category": "", "categoryclass": "", "imagename": "95e30af2803e1b62dc04dbd82ab78efe.jpg", "infoid": 1005841, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Java\u8fd0\u884c\u65f6\u5728\u6700\u8fd1\u51e0\u5e74\u53d1\u5c55\u5f97\u66f4\u5feb\uff0c15\u5e74\u540e\uff0c\u6211\u4eec\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e2a\u65b0\u7684\u9ed8\u8ba4\u5783\u573e\u6536\u96c6\u5668\uff1aG1\u3002\u53e6\u5916\u4e24\u4e2aGC\u6b63\u5728\u6295\u5165\u751f\u4ea7\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u8bd5\u9a8c\u6027\u529f\u80fd\u4f7f\u7528\uff1aOracle\u7684Z\u548cOpenJDK\u7684Sherandoah\u3002\u6211\u4eecHazelcast\u8ba4\u4e3a\u662f\u65f6\u5019\u5c06\u6240\u6709\u8fd9\u4e9b\u65b0\u9009\u9879\u653e\u5230\u6d4b\u8bd5\u53f0\u4e0a\u4e86\uff0c\u627e\u51fa\u54ea\u4e9b\u9009\u9879\u9002\u5408\u6211\u4eec\u7684\u5206\u5e03\u5f0f\u6d41\u5904\u7406\u5f15\u64ceHazelcast Jet\u7684\u5178\u578b\u5de5\u4f5c\u8d1f\u8f7d\u3002\nJET\u7528\u4e8e\u5e7f\u6cdb\u7684\u7528\u4f8b\uff0c\u5177\u6709\u4e0d\u540c\u7684\u5ef6\u8fdf\u548c\u541e\u5410\u91cf\u8981\u6c42\u3002\u8fd9\u91cc\u6709\u4e09\u4e2a\u91cd\u8981\u7684\u7c7b\u522b\uff1a\n\u4f4e\u5ef6\u65f6\u65e0\u9650\u5236\u6d41\u5904\u7406\uff0c\u72b6\u6001\u9002\u4e2d\u3002\u4f8b\u5982\uff1a\u68c0\u6d4b\u6765\u81ea10,000\u53f0\u8bbe\u5907\u7684100 Hz\u4f20\u611f\u5668\u6570\u636e\u7684\u8d8b\u52bf\uff0c\u5e76\u572810-20\u6beb\u79d2\u5185\u53d1\u9001\u7ea0\u6b63\u53cd\u9988\u3002\n\u9ad8\u541e\u5410\u91cf\u3001\u5927\u72b6\u6001\u7684\u65e0\u9650\u6d41\u5904\u7406\u3002\u4f8b\u5982\uff1a\u8ddf\u8e2a\u6570\u767e\u4e07\u7528\u6237\u7684GPS\u4f4d\u7f6e\uff0c\u63a8\u65ad\u4ed6\u4eec\u7684\u901f\u5ea6\u77e2\u91cf\u3002\n\u8001\u5f0f\u7684\u5927\u6570\u636e\u91cf\u6279\u91cf\u5904\u7406\u3002\u76f8\u5173\u7684\u63aa\u65bd\u662f\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u8fd9\u610f\u5473\u7740\u5f88\u9ad8\u7684\u541e\u5410\u91cf\u9700\u6c42\u3002\u4f8b\u5982\uff1a\u5206\u6790\u4e00\u5929\u7684\u80a1\u7968\u4ea4\u6613\u6570\u636e\uff0c\u4ee5\u66f4\u65b0\u7ed9\u5b9a\u6295\u8d44\u7ec4\u5408\u7684\u98ce\u9669\u655e\u53e3\u3002\n\u5728\u573a\u666f1\u4e2d\uff0c\u5ef6\u8fdf\u8981\u6c42\u8fdb\u5165GC\u6682\u505c\u7684\u5371\u9669\u533a\u57df\uff1a100\u6beb\u79d2\uff0c\u4f20\u7edf\u4e0a\u88ab\u8ba4\u4e3a\u662f\u6700\u574f\u60c5\u51b5GC\u6682\u505c\u7684\u6781\u4f73\u7ed3\u679c\uff0c\u4f46\u5728\u4efb\u4f55\u7528\u4f8b\u4e2d\u90fd\u53ef\u80fd\u662f\u4e00\u4e2a\u4ee4\u4eba\u671b\u800c\u5374\u6b65\u7684\u7ed3\u679c\u3002\n\u573a\u666f2\u548c\u573a\u666f3\u5728\u5783\u573e\u6536\u96c6\u5668\u7684\u9700\u6c42\u65b9\u9762\u662f\u76f8\u4f3c\u7684\u3002\u5ef6\u8fdf\u4e0d\u90a3\u4e48\u4e25\u683c\uff0c\u4f46\u5bf9\u6301\u4e45\u4e00\u4ee3\u7684\u538b\u529b\u5f88\u5927\u3002\n\u65b9\u68482\u66f4\u96be\u5904\u7406\uff0c\u56e0\u4e3a\u5ef6\u8fdf\u5373\u4f7f\u6bd4\u65b9\u68481\u5c11\uff0c\u4e5f\u662f\u76f8\u5173\u7684\n\u5728\u73b0\u4ee3JDK\u7248\u672c\u4e2d\uff0cG1\u662f\u4e00\u4e2a\u6536\u96c6\u5668\u7684\u602a\u7269\u3002\u5b83\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u51e0\u5341GB\u7684\u5806(\u6211\u4eec\u5c1d\u8bd5\u4e8660 GB)\uff0c\u5c06\u6700\u5927GC\u6682\u505c\u4fdd\u6301\u5728200ms\u5185\u3002\u5728\u6781\u7aef\u538b\u529b\u4e0b\uff0c\u5b83\u4e0d\u4f1a\u8868\u73b0\u51fa\u8106\u6027\u548c\u707e\u96be\u6027\u7684\u5931\u6548\u6a21\u5f0f\u3002\u76f8\u53cd\uff0c\u5b8c\u6574\u7684GC\u6682\u505c\u4e0a\u5347\u5230\u4f4e\u79d2\u6570\u8303\u56f4\u3002\u5b83\u7684\u963f\u5580\u7409\u65af\u811a\u8ddf\u662f\u5728\u6709\u5229\u7684\u4f4e\u538b\u6761\u4ef6\u4e0bGC\u6682\u505c\u7684\u4e0a\u9650\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u5b83\u63a8\u4f4e\u523020-25\u6beb\u79d2\u4ee5\u4e0b\u3002\nJDK8\u662f\u4e00\u4e2a\u8fc7\u65f6\u7684\u8fd0\u884c\u65f6\u3002\u7f3a\u7701\u7684\u5e76\u884c\u6536\u96c6\u5668\u8fdb\u5165\u5b8c\u5168GC\u6682\u505c\uff0c\u800cG1\u867d\u7136\u6ca1\u6709\u90a3\u4e48\u9891\u7e41\u7684FullGC\uff0c\u4f46\u662f\u505c\u7559\u5728\u53ea\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u6267\u884c\u5b83\u7684\u65e7\u7248\u672c\u4e2d\uff0c\u5bfc\u81f4\u66f4\u957f\u7684\u6682\u505c\u3002\u5373\u4f7f\u572812 GB\u7684\u4e2d\u7b49\u5806\u4e0a\uff0c\u5e76\u884c\u7684\u6682\u505c\u4e5f\u8d85\u8fc720\u79d2\uff0cG1\u7684\u6682\u505c\u8d85\u8fc71\u5206\u949f\u3002ConcurrentMarkSweep\u6536\u96c6\u5668\u5728\u6240\u6709\u573a\u666f\u4e2d\u90fd\u4e25\u683c\u6bd4G1\u5dee\uff0c\u5176\u6545\u969c\u6a21\u5f0f\u662f\u591a\u5206\u949f\u7684FullGC\u6682\u505c\u3002\nZ\u867d\u7136\u5141\u8bb8\u6bd4G1\u4f4e\u5f97\u591a\u541e\u5410\u91cf\uff0c\u4f46\u5728G1\u7684\u4e00\u4e2a\u8584\u5f31\u533a\u57df\u975e\u5e38\u597d\uff0c\u5728\u8f7b\u8d1f\u8f7d\u4e0b\u63d0\u4f9b\u957f\u8fbe10ms\u7684\u6700\u574f\u60c5\u51b5\u505c\u987f\u3002\n\u820d\u5357\u591a\u4ee4\u4eba\u5931\u671b\u7684\u662f\uff0c\u5728\u4f4e\u538b\u72b6\u6001\u4e0b\uff0c\u5076\u5c14\u4f1a\u51fa\u73b0\u9ad8\u8fbe220ms\u7684\u6f5c\u4f0f\u671f\u5cf0\u503c\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u662f\u4e0d\u89c4\u5f8b\u7684\u3002\nZ\u548cSherandoah\u5747\u672a\u8868\u73b0\u51faG1\u90a3\u6837\u7684\u5e73\u6ed1\u5931\u6548\u6a21\u5f0f\u3002\u4ed6\u4eec\u8868\u73b0\u51fa\u8106\u6027\uff0c\u4f4e\u5ef6\u8fdf\u5236\u5ea6\u7a81\u7136\u8ba9\u4f4d\u4e8e\u975e\u5e38\u957f\u7684\u505c\u987f\uff0c\u751a\u81f3OOME\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u5c55\u793a\u4e86\u6211\u4eec\u5bf9\u8fd9\u4e24\u4e2a\u6d41\u5a92\u4f53\u573a\u666f\u7684\u53d1\u73b0\u3002\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6279\u5904\u7406\u7684\u7ed3\u679c\u3002\n\u5bf9\u4e8e\u6d41\u57fa\u51c6\u6d4b\u8bd5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u8fd9\u91cc\u63d0\u4f9b\u7684\u4ee3\u7801\uff0c\u6d4b\u8bd5\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u5f02\u3002\u8fd9\u662f\u4e3b\u8981\u7684\u90e8\u5206\uff0c\u55b7\u6c14\u7ba1\u9053\uff1a\n&lt\uff1b&gt\uff1bsource=p.\u3002readFrom(LongSource(Items_Per_Second))\u3002WITH NativeTimestamps(0)\u3002ReBalance()\uff1b//\u5728Jet 4.2\u4e2d\u5f15\u5165\u3002groupingKey(n-&gt\uff1bn%NUM_KEYS)\u3002\u7a97\u53e3(\u6ed1\u52a8(\u79d2\u3002toMillis(Win_Size_Second)\uff0cSliding_Step_Millis))\u3002Aggregate(Counting())\u3002\u8fc7\u6ee4\u5668(kwr-&gt\uff1bkwr.\u3002getkey()%Diagnostic_KEYSET_DOWNSAMPLING_FACTOR==0)\u3002\u7a97\u53e3(\u7ffb\u6eda(Sliding_Step_Millis))\u3002Aggregate(Counting())\u3002WriteTo(\u3002\u8bb0\u5f55\u4eea(WR-&GT\uff1b\u683c\u5f0f(&#34\uff1b\u65f6\u95f4%\uff0cd\uff1a\u5ef6\u8fdf%\uff0cd\u6beb\u79d2\uff0cCCA\u3002%\uff0cd\u4e2a\u5bc6\u94a5&#34\uff1b\uff0csimpleTime(\u5199\u5165\u3002end())\uff0c\u7eb3\u79d2\u3002\u6258\u7c73\u5229\u65af(\u3002NanTime())-WR.\u3002end()\uff0cWR\u3002RESULT()*DIAGUSTIONCE_KEYSET_DOWNSAMPLING_FACTOR)\uff1b\n\u6b64\u7ba1\u9053\u8868\u793a\u5177\u6709\u65e0\u754c\u4e8b\u4ef6\u6d41\u7684\u7528\u4f8b\uff0c\u5176\u4e2d\u5f15\u64ce\u88ab\u8981\u6c42\u6267\u884c\u6ed1\u52a8\u7a97\u53e3\u805a\u5408\u3002\u4f8b\u5982\uff0c\u60a8\u9700\u8981\u8fd9\u79cd\u805a\u5408\u6765\u83b7\u5f97\u53d8\u5316\u91cf\u7684\u65f6\u95f4\u5bfc\u6570\u3001\u4ece\u6570\u636e\u4e2d\u53bb\u9664\u9ad8\u9891\u566a\u58f0(\u5e73\u6ed1)\u6216\u6d4b\u91cf\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u5f3a\u5ea6(\u6bcf\u79d2\u4e8b\u4ef6\u6570)\u3002\u5f15\u64ce\u53ef\u4ee5\u9996\u5148\u6309\u67d0\u4e2a\u7c7b\u522b(\u4f8b\u5982\uff0c\u6bcf\u4e2a\u4e0d\u540c\u7684\u7269\u8054\u7f51\u8bbe\u5907\u6216\u667a\u80fd\u624b\u673a)\u5c06\u6d41\u5206\u5272\u6210\u5b50\u6d41\uff0c\u7136\u540e\u72ec\u7acb\u8ddf\u8e2a\u6bcf\u4e2a\u5b50\u6d41\u4e2d\u7684\u805a\u5408\u503c\u3002\u5728Hazelcast Jet\u4e2d\uff0c\u6ed1\u52a8\u7a97\u53e3\u4ee5\u60a8\u914d\u7f6e\u7684\u56fa\u5b9a\u5927\u5c0f\u6b65\u957f\u79fb\u52a8\u3002\u4f8b\u5982\uff0c\u6ed1\u52a8\u6b65\u957f\u4e3a1\u79d2\u65f6\uff0c\u60a8\u6bcf\u79d2\u90fd\u4f1a\u83b7\u5f97\u5b8c\u6574\u7684\u7ed3\u679c\u96c6\uff0c\u5982\u679c\u7a97\u53e3\u5927\u5c0f\u4e3a1\u5206\u949f\uff0c\u5219\u7ed3\u679c\u4f1a\u53cd\u6620\u6700\u8fd1\u4e00\u5206\u949f\u5185\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\n\u4ee3\u7801\u662f\u5b8c\u5168\u81ea\u5305\u542b\u7684\uff0c\u6ca1\u6709\u5916\u90e8\u6570\u636e\u6e90\u6216\u63a5\u6536\u5668\u3002\u6211\u4eec\u4f7f\u7528\u6a21\u62df\u6570\u636e\u6e90\u6765\u6a21\u62df\u4e8b\u4ef6\u6d41\uff0c\u8be5\u6570\u636e\u6e90\u7cbe\u786e\u5730\u6a21\u62df\u6bcf\u79d2\u6240\u9009\u7684\u4e8b\u4ef6\u6570\u3002\u8fde\u7eed\u7684\u4e8b\u4ef6\u65f6\u95f4\u6233\u662f\u76f8\u7b49\u7684\u95f4\u9694\u65f6\u95f4\u3002\u6e90\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u51fa\u65f6\u95f4\u6233\u4ecd\u5728\u5c06\u6765\u7684\u4e8b\u4ef6\uff0c\u5426\u5219\u4f1a\u5c3d\u53ef\u80fd\u5feb\u5730\u53d1\u51fa\u5b83\u4eec\u3002\n\u5982\u679c\u6d41\u6c34\u7ebf\u843d\u540e\uff0c\u4e8b\u4ef6\u5c06\u88ab\u7f13\u51b2\uff0c\u4f46\u4e0d\u4f1a\u6709\u4efb\u4f55\u5b58\u50a8\u3002\u5728\u843d\u540e\u4e4b\u540e\uff0c\u7ba1\u9053\u5fc5\u987b\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u63a5\u6536\u6570\u636e\u6765\u8fce\u5934\u8d76\u4e0a\u3002\u7531\u4e8e\u6211\u4eec\u7684\u6e90\u662f\u975e\u5e76\u884c\u7684\uff0c\u56e0\u6b64\u5176\u541e\u5410\u91cf\u7684\u9650\u5236\u7ea6\u4e3a\u6bcf\u79d2220\u4e07\u4e2a\u4e8b\u4ef6\u3002\u6211\u4eec\u6bcf\u79d2\u4f7f\u7528100\u4e07\u4e2a\u6a21\u62df\u4e8b\u4ef6\uff0c\u7559\u4e0b\u4e86120\u4e07\u4e2a\u6bcf\u79d2\u7684\u8ffd\u8d76\u51c0\u7a7a\u3002\n\u7ba1\u9053\u901a\u8fc7\u5c06\u53d1\u5c04\u7684\u6ed1\u52a8\u7a97\u53e3\u7ed3\u679c\u7684\u65f6\u95f4\u6233\u4e0e\u5b9e\u9645\u7684\u6302\u949f\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83\u6765\u6d4b\u91cf\u5176\u81ea\u8eab\u7684\u5ef6\u8fdf\u3002\u66f4\u8be6\u7ec6\u5730\u8bf4\uff0c\u6709\u4e24\u4e2a\u805a\u5408\u9636\u6bb5\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u8fc7\u6ee4\u3002\u5355\u4e2a\u6ed1\u52a8\u7a97\u53e3\u7ed3\u679c\u7531\u8bb8\u591a\u9879\u7ec4\u6210\uff0c\u6bcf\u4e2a\u9879\u5bf9\u5e94\u4e00\u4e2a\u5b50\u6d41\uff0c\u6211\u4eec\u5bf9\u6700\u540e\u53d1\u51fa\u7684\u9879\u7684\u5ef6\u8fdf\u5f88\u611f\u5174\u8da3\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u8fc7\u6ee4\u6389\u5927\u90e8\u5206\u8f93\u51fa\uff0c\u6bcf10,000\u4e2a\u6761\u76ee\u4fdd\u7559\u4e00\u6b21\uff0c\u7136\u540e\u5c06\u7a00\u758f\u7684\u6d41\u5b9a\u5411\u5230\u7b2c\u4e8c\u4e2a\u975e\u952e\u63a7\u7ffb\u6eda\u7a97\u53e3\u9636\u6bb5\uff0c\u8be5\u9636\u6bb5\u8bb0\u5f55\u7ed3\u679c\u5927\u5c0f\u5e76\u6d4b\u91cf\u5ef6\u8fdf\u3002\u65e0\u952e\u805a\u5408\u4e0d\u662f\u5e76\u884c\u5316\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u6d4b\u91cf\u70b9\u3002\u8fc7\u6ee4\u9636\u6bb5\u662f\u5e76\u884c\u7684\u548c\u6570\u636e\u672c\u5730\u7684\uff0c\u56e0\u6b64\u989d\u5916\u805a\u5408\u6b65\u9aa4\u7684\u5f71\u54cd\u975e\u5e38\u5c0f(\u8fdc\u4f4e\u4e8e1ms)\u3002\n\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u805a\u5408\u51fd\u6570\uff1aCOUNTING\uff0c\u5b9e\u9645\u4e0a\u83b7\u5f97\u6d41\u7684\u4e8b\u4ef6/\u79d2\u5ea6\u91cf\u3002\u5b83\u5177\u6709\u6700\u5c0f\u72b6\u6001(\u5355\u4e2a\u957f\u6570)\uff0c\u5e76\u4e14\u4e0d\u4ea7\u751f\u5783\u573e\u3002\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u5806\u4f7f\u7528\u91cf(\u4ee5\u5343\u5146\u5b57\u8282\u4e3a\u5355\u4f4d)\uff0c\u6bcf\u4e2a\u952e\u7684\u5982\u6b64\u5c0f\u7684\u72b6\u6001\u610f\u5473\u7740\u5783\u573e\u6536\u96c6\u5668\u7684\u6700\u574f\u60c5\u51b5\uff1a\u975e\u5e38\u5927\u91cf\u7684\u5bf9\u8c61\u3002GC\u7684\u5f00\u9500\u4e0d\u662f\u5806\u5927\u5c0f\uff0c\u800c\u662f\u5bf9\u8c61\u8ba1\u6570\u3002\u6211\u4eec\u8fd8\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u8ba1\u7b97\u76f8\u540c\u7684\u805a\u5408\u51fd\u6570\uff0c\u4f46\u662f\u4f7f\u7528\u4e86\u4ea7\u751f\u5783\u573e\u7684\u5dee\u5206\u5b9e\u73b0\u3002\n\u6211\u4eec\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u6267\u884c\u5927\u591a\u6570\u6d41\u57fa\u51c6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u662f\u5185\u5b58\u7ba1\u7406\u5bf9\u6d41\u6c34\u7ebf\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u800c\u7f51\u7edc\u5ef6\u8fdf\u53ea\u4f1a\u589e\u52a0\u566a\u58f0\u3002\u6211\u4eec\u5728\u4e00\u4e2a\u4e09\u8282\u70b9\u7684AmazonEC2\u96c6\u7fa4\u4e0a\u91cd\u590d\u4e86\u4e00\u4e9b\u5173\u952e\u6d4b\u8bd5\uff0c\u4ee5\u9a8c\u8bc1\u6211\u4eec\u7684\u9884\u6d4b\uff0c\u5373\u96c6\u7fa4\u6027\u80fd\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u7ed3\u8bba\u3002\u60a8\u53ef\u4ee5\u5728\u7b2c2\u90e8\u5206\u7684\u672b\u5c3e\u627e\u5230\u66f4\u8be6\u7ec6\u7684\u7406\u7531\u3002\n\u6211\u4eec\u5c06\u5e76\u884c\u6536\u96c6\u5668\u6392\u9664\u5728\u6d41\u5f0f\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ed3\u679c\u4e4b\u5916\uff0c\u56e0\u4e3a\u5b83\u5e26\u6765\u7684\u5ef6\u8fdf\u5cf0\u503c\u5728\u51e0\u4e4e\u4efb\u4f55\u73b0\u5b9e\u573a\u666f\u4e2d\u90fd\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\n\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u5806\u4f7f\u7528\u91cf\u4e0d\u52301 GB\u3002\u6536\u96c6\u5668\u538b\u529b\u4e0d\u9ad8\uff0c\u5b83\u6709\u5145\u8db3\u7684\u65f6\u95f4\u5728\u540e\u53f0\u6267\u884c\u5e76\u53d1GC\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u901a\u8fc7\u6d4b\u8bd5\u7684\u4e09\u4e2a\u5783\u573e\u6536\u96c6\u5668\u89c2\u5bdf\u5230\u7684\u6700\u5927\u7ba1\u9053\u5ef6\u8fdf\uff1a\n\u6ce8\u610f\uff0c\u8fd9\u4e9b\u6570\u5b57\u5305\u62ec\u53d1\u5c04\u7a97\u53e3\u7ed3\u679c\u7684\u5927\u7ea63\u6beb\u79d2\u7684\u56fa\u5b9a\u65f6\u95f4\u3002\u8be5\u56fe\u8868\u975e\u5e38\u7b80\u5355\u660e\u4e86\uff1a\u9ed8\u8ba4\u6536\u96c6\u5668G1\u672c\u8eab\u76f8\u5f53\u4e0d\u9519\uff0c\u4f46\u662f\u5982\u679c\u60a8\u9700\u8981\u66f4\u597d\u7684\u5ef6\u8fdf\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b9e\u9a8c\u6027\u7684Z\u6536\u96c6\u5668\u3002\u5bf9\u4e8eJavaruntime\u6765\u8bf4\uff0c\u5c06GC\u6682\u505c\u65f6\u95f4\u51cf\u5c11\u523010\u6beb\u79d2\u4ee5\u4e0b\u4f3c\u4e4e\u4ecd\u7136\u9065\u4e0d\u53ef\u53ca\u3002\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8c22\u5357\u591a\u662f\u4e2a\u5927\u8f93\u5bb6\uff0c\u7ecf\u5e38\u6682\u505c\uff0c\u751a\u81f3\u8d85\u8fc7\u4e86G1\u9ed8\u8ba4\u7684200\u6beb\u79d2\u3002\n\u5728\u573a\u666f2\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe\u7531\u4e8e\u6211\u4eec\u65e0\u6cd5\u63a7\u5236\u7684\u5404\u79cd\u539f\u56e0(\u4f8b\u5982\uff0c\u79fb\u52a8\u7f51\u7edc)\uff0c\u5ef6\u8fdf\u53ef\u4ee5\u589e\u957f\u5230\u4f4e\u79d2\u6570\uff0c\u8fd9\u653e\u5bbd\u4e86\u6211\u4eec\u5fc5\u987b\u5bf9\u6d41\u5904\u7406\u6d41\u6c34\u7ebf\u65bd\u52a0\u7684\u8981\u6c42\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u5904\u7406\u7684\u6570\u636e\u5377\u53ef\u80fd\u8981\u5927\u5f97\u591a\uff0c\u5927\u7ea6\u6709\u6570\u767e\u4e07\u6216\u6570\u5343\u4e07\u4e2a\u5bc6\u94a5\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u786c\u4ef6\uff0c\u4f7f\u5176\u5f97\u5230\u5145\u5206\u5229\u7528\uff0c\u4f9d\u9760GC\u6765\u7ba1\u7406\u5927\u578b\u5806\uff0c\u800c\u4e0d\u662f\u5c06\u6570\u636e\u5206\u6563\u5728\u8bb8\u591a\u96c6\u7fa4\u8282\u70b9\u4e0a\u3002\n\u6211\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u7ec4\u5408\u6267\u884c\u4e86\u8bb8\u591a\u6d4b\u8bd5\uff0c\u4ee5\u627e\u51fa\u5404\u79cd\u56e0\u7d20\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u5982\u4f55\u5bfc\u81f4\u8fd0\u884c\u65f6\u8ddf\u4e0a\u6216\u843d\u540e\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u51b3\u5b9a\u8fd9\u4e00\u70b9\u7684\u4e24\u4e2a\u53c2\u6570\uff1a\n\u7b2c\u4e00\u4e2a\u4e0e\u79df\u671f\u751f\u6210\u4e2d\u7684\u5bf9\u8c61\u6570\u76f8\u5bf9\u5e94\u3002\u6ed1\u52a8\u7a97\u53e3\u805a\u5408\u5728\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u5185(\u7a97\u53e3\u7684\u957f\u5ea6)\u4fdd\u7559\u5bf9\u8c61\uff0c\u7136\u540e\u91ca\u653e\u5b83\u4eec\u3002\u8fd9\u4e0e\u4ee3\u9645\u5783\u573e\u5047\u8bf4\u76f4\u63a5\u80cc\u9053\u800c\u9a70\uff0c\u8be5\u5047\u8bf4\u8ba4\u4e3a\uff0c\u7269\u4f53\u8981\u4e48\u82f1\u5e74\u65e9\u901d\uff0c\u8981\u4e48\u6c38\u751f\u3002\u8fd9\u79cd\u673a\u5236\u7ed9GC\u5e26\u6765\u4e86\u6700\u5927\u7684\u538b\u529b\uff0c\u7531\u4e8eGC\u7684\u5de5\u4f5c\u91cf\u4e0e\u6d3b\u52a8\u5bf9\u8c61\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\uff0c\u56e0\u6b64\u6027\u80fd\u5bf9\u6b64\u53c2\u6570\u9ad8\u5ea6\u654f\u611f\u3002\n\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u591a\u5c11GC\u5f00\u9500\u6709\u5173\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u89e3\u91ca\u5b83\uff0c\u8ba9\u6211\u4eec\u7528\u4e00\u4e9b\u56fe\u8868\u3002\u7ba1\u9053\u6267\u884c\u7a97\u53e3\u805a\u5408\u8981\u7ecf\u5386\u4e09\u4e2a\u4e0d\u540c\u7684\u6b65\u9aa4\uff1a\n\u73b0\u5728\uff0c\u51c0\u7a7a\u7a7a\u95f4\u5df2\u7ecf\u7f29\u5c0f\u5230\u51e0\u4e4e\u4e3a\u96f6\uff0c\u7ba1\u9053\u51e0\u4e4e\u8ddf\u4e0d\u4e0a\uff0c\u4efb\u4f55\u6682\u65f6\u7684\u95ee\u9898\uff0c\u5982\u5076\u5c14\u7684GC\u6682\u505c\uff0c\u90fd\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\u4ee5\u975e\u5e38\u7f13\u6162\u7684\u901f\u5ea6\u589e\u957f\u548c\u6062\u590d\u3002\n\u5982\u679c\u6211\u4eec\u6539\u53d8\u8fd9\u5f20\u56fe\u7247\uff0c\u53ea\u663e\u793a\u7a97\u53e3\u53d1\u5c04\u540e\u7684\u5e73\u5747\u4e8b\u4ef6\u6444\u53d6\u7387\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a\n\u6211\u4eec\u79f0\u9ec4\u8272\u77e9\u5f62\u7684\u9ad8\u5ea6\u4e3a\u8ffd\u8d76\u9700\u6c42\uff1a\u5b83\u662f\u5bf9\u6e90\u541e\u5410\u91cf\u7684\u9700\u6c42\u3002\u5982\u679c\u8d85\u8fc7\u5b9e\u9645\u6700\u5927\u541e\u5410\u91cf\uff0c\u5219\u7ba1\u9053\u5931\u8d25\u3002\n\u7ea2\u8272\u548c\u9ec4\u8272\u77e9\u5f62\u7684\u9762\u79ef\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u4e0e\u5fc5\u987b\u6d41\u7ecf\u7ba1\u9053\u7684\u6570\u636e\u91cf\u76f8\u5bf9\u5e94\u3002\u57fa\u672c\u4e0a\uff0c\u7ea2\u8272\u7684\u77e9\u5f62\u6324\u6389\u4e86\u9ec4\u8272\u7684\u77e9\u5f62\u3002\u4f46\u9ec4\u8272\u77e9\u5f62\u7684\u9ad8\u5ea6\u5b9e\u9645\u4e0a\u662f\u6709\u9650\u7684\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u79d2\u53ea\u80fd\u53d1\u751f220\u4e07\u6b21\u4e8b\u4ef6\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u5b83\u7684\u9ad8\u5ea6\u8d85\u8fc7\u6781\u9650\u65f6\uff0c\u6211\u4eec\u5c31\u4f1a\u770b\u5230\u4e00\u6761\u5931\u8d25\u7684\u7ba1\u9053\uff0c\u5b83\u7684\u5ef6\u8fdf\u65e0\u9650\u5236\u5730\u589e\u957f\u3002\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e8b\u4ef6\u53d1\u751f\u7387\u3001\u7a97\u53e3\u5927\u5c0f\u3001\u6ed1\u52a8\u6b65\u957f\u548c\u952e\u96c6\u5927\u5c0f\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u9884\u6d4b\u77e9\u5f62\u5927\u5c0f\u7684\u516c\u5f0f\uff0c\u4ece\u800c\u53ef\u4ee5\u786e\u5b9a\u6bcf\u79cd\u60c5\u51b5\u4e0b\u7684\u8ffd\u8d76\u9700\u6c42\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u6216\u591a\u6216\u5c11\u7684\u72ec\u7acb\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u6765\u81ea\u63cf\u8ff0\u6bcf\u4e2a\u5355\u72ec\u8bbe\u7f6e\u7684\u66f4\u591a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a2D\u56fe\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u8fd0\u884c\u90fd\u6709\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u7ed9\u6bcf\u4e2a\u70b9\u5206\u914d\u4e86\u4e00\u79cd\u989c\u8272\uff0c\u544a\u8bc9\u6211\u4eec\u7ed9\u5b9a\u7684\u7ec4\u5408\u662f\u6709\u6548\u7684\u8fd8\u662f\u5931\u8d25\u7684\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5b89\u88c5\u4e86G1\u7684JDK 14\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u56fe\u7247\uff1a\n\u6211\u4eec\u533a\u5206\u4e86&#34\uff1byes&#34\uff1b\uff0c&#34\uff1bno&#34\uff1b\u548c&#34\uff1bGC&34\uff1b\uff0c\u8fd9\u610f\u5473\u7740\u7ba1\u9053\u8ddf\u4e0d\u4e0a\uff0c\u56e0\u4e3a\u541e\u5410\u91cf\u4e0d\u8db3\u800c\u8ddf\u4e0d\u4e0a\uff0c\u6216\u8005\u56e0\u4e3a\u9891\u7e41\u7684\u957f\u65f6\u95f4GC\u6682\u505c\u800c\u8ddf\u4e0d\u4e0a\u3002\u8bf7\u6ce8\u610f\uff0c\u541e\u5410\u91cf\u4e0d\u8db3\u4e5f\u53ef\u80fd\u662f\u5e76\u53d1GC\u6d3b\u52a8\u548c\u9891\u7e41\u7684\u77ed\u6682GC\u6682\u505c\u9020\u6210\u7684\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u533a\u522b\u5e76\u4e0d\u91cd\u8981\u3002\n\u4f60\u53ef\u4ee5\u627e\u51fa\u4e00\u6761\u7b49\u9ad8\u7ebf\uff0c\u5c06\u5de6\u4e0b\u89d2\u7684\u533a\u57df\u4e0e\u5176\u4f59\u7684\u7a7a\u95f4\u5206\u5f00\uff0c\u5728\u90a3\u91cc\uff0c\u4e8b\u60c5\u662f\u53ef\u884c\u7684\uff0c\u800c\u5728\u5176\u4ed6\u7a7a\u95f4\uff0c\u4e8b\u60c5\u662f\u5931\u8d25\u7684\u3002\u6211\u4eec\u4e3aJDK\u548cGC\u7684\u5176\u4ed6\u7ec4\u5408\u5236\u4f5c\u4e86\u540c\u6837\u7684\u56fe\u8868\uff0c\u63d0\u53d6\u4e86\u7b49\u9ad8\u7ebf\uff0c\u5e76\u5f97\u51fa\u4e86\u4ee5\u4e0b\u6c47\u603b\u56fe\u8868\uff1a\n\u4f5c\u4e3a\u53c2\u8003\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u786c\u4ef6\u662fMacBook Pro 2018\uff0c\u5177\u67096\u6838Intel Core i7\u548c16 GB DDR4 RAM\uff0c\u4e3aJVM\u914d\u7f6e-Xmx10g\u3002\u4f46\u662f\uff0c\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u7ec4\u5408\u4e4b\u95f4\u7684\u603b\u4f53\u5173\u7cfb\u5728\u5e7f\u6cdb\u7684\u786c\u4ef6\u53c2\u6570\u8303\u56f4\u5185\u4fdd\u6301\u4e0d\u53d8\u3002\u8be5\u56fe\u8868\u76f4\u89c2\u5730\u5c55\u793a\u4e86G1\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4ea7\u54c1\u7684\u4f18\u52bf\uff0cG1\u5728JDK8\u4e0a\u7684\u5f31\u70b9\uff0c\u4ee5\u53ca\u5b9e\u9a8c\u6027\u4f4e\u5ef6\u8fdf\u6536\u96c6\u5668\u5728\u8fd9\u7c7b\u5de5\u4f5c\u8d1f\u8f7d\u65b9\u9762\u7684\u5f31\u70b9\u3002\n\u57fa\u672c\u5ef6\u8fdf\uff0c\u5373\u53d1\u51fa\u7a97\u53e3\u7ed3\u679c\u6240\u9700\u7684\u65f6\u95f4\uff0c\u5927\u81f4\u5728500\u6beb\u79d2\u5de6\u53f3\uff0c\u4f46\u7531\u4e8e\u5076\u5c14\u51fa\u73b0\u5927\u578bGC(\u5bf9\u4e8eG1\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e0d\u5408\u7406\u7684\u957f)\uff0c\u5ef6\u8fdf\u901a\u5e38\u9700\u8981\u589e\u52a0\uff0c\u5728\u8fb9\u754c\u60c5\u51b5\u4e0b(\u7ba1\u9053\u51e0\u4e4e\u8ddf\u4e0d\u4e0a)\uff0c\u6700\u957f\u53ef\u8fbe10\u79d2\uff0c\u4f46\u4ecd\u4f1a\u6062\u590d\u5230\u4e00\u4e24\u79d2\u3002\u6211\u4eec\u8fd8\u6ce8\u610f\u5230JIT\u7f16\u8bd1\u5728\u8fb9\u754c\u60c5\u51b5\u4e0b\u7684\u6548\u679c\uff1a\u6d41\u6c34\u7ebf\u4e00\u5f00\u59cb\u4f1a\u6709\u4e00\u4e2a\u4e0d\u65ad\u589e\u52a0\u7684\u5ef6\u8fdf\uff0c\u4f46\u5927\u7ea6\u4e24\u5206\u949f\u540e\uff0c\u5b83\u7684\u6027\u80fd\u4f1a\u6539\u5584\uff0c\u5ef6\u8fdf\u4f1a\u5b8c\u5168\u6062\u590d\u3002", "note_en": "The Java runtime has been evolving more rapidly in recent years and,after 15 years, we finally got a new default garbage collector: theG1. Two more GCs are on their way to production and are available asexperimental features: Oracle&#39;s Z and OpenJDK&#39;s Shenandoah. We atHazelcast thought it was time to put all these new options to the testand find which choices work well with workloads typical for ourdistributed stream processing engine, Hazelcast Jet.\n Jet is being used for a broad spectrum of use cases, with differentlatency and throughput requirements. Here are three importantcategories:\n Low-latency unbounded stream processing, with moderate state.Example: detecting trends in 100 Hz sensor data from 10,000 devicesand sending corrective feedback within 10-20 milliseconds.\n High-throughput, large-state unbounded stream processing. Example:tracking GPS locations of millions of users, inferring their velocityvectors.\n Old-school batch processing of big data volumes. The relevant measureis time to complete, which implies a high throughput demand. Example:analyzing a day&#39;s worth of stock trading data to update the riskexposure of a given portfolio.\n  in scenario 1 the latency requirements enter the danger zone of GCpauses: 100 milliseconds, something traditionally considered anexcellent result for a worst-case GC pause, may be a showstopper formany use cases\n scenarios 2 and 3 are similar in terms of demands on the garbagecollector. Less strict latency, but large pressure on the tenuredgeneration\n scenario 2 is tougher because latency, even if less so than inscenario 1, is still relevant\n    On modern JDK versions, the G1 is one monster of a collector. Ithandles heaps of dozens of GB with ease (we tried 60 GB), keepingmaximum GC pauses within 200 ms. Under extreme pressure it doesn&#39;tshow brittleness with catastrophic failure modes. Instead the Full GCpauses rise into the low seconds range. Its Achilles&#39; heel is theupper bound on the GC pause in favorable low-pressure conditions,which we couldn&#39;t push lower than 20-25 ms.\n JDK 8 is an antiquated runtime. The default Parallel collector entershuge Full GC pauses and the G1, although having less frequent FullGCs, is stuck in an old version that uses just one thread to performit, resulting in even longer pauses. Even on a moderate heap of 12GB, the pauses were exceeding 20 seconds for Parallel and a fullminute for G1. The ConcurrentMarkSweep collector is strictly worsethan G1 in all scenarios, and its failure mode are multi-minute FullGC pauses.\n The Z, while allowing substantially less throughput than G1, is verygood in that one weak area of G1, offering worst-case pauses up to 10ms under light load.\n Shenandoah was a disappointment with occasional, but neverthelessregular, latency spikes up to 220 ms in the low-pressure regime.\n Neither Z nor Shenandoah showed as smooth failure modes as G1. Theyexhibited brittleness, with the low-latency regime suddenly givingway to very long pauses and even OOMEs.\n This post is Part 1 of a two-part series and presents our findings forthe two streaming scenarios. In  Part2 we&#39;ll present the resultsfor batch processing.\n  For the streaming benchmarks, we used the code available here,with some minor variations between the tests. Here is the main part, theJet pipeline:\n &lt;  &gt; source  = p . readFrom ( longSource (ITEMS_PER_SECOND ) )  . withNativeTimestamps ( 0 )  . rebalance ( ) ;  // Introduced in Jet 4.2source . groupingKey (n  -&gt; n  % NUM_KEYS )  . window ( sliding (SECONDS . toMillis (WIN_SIZE_SECONDS ) , SLIDING_STEP_MILLIS ) )  . aggregate ( counting ( ) )  . filter (kwr  -&gt; kwr . getKey ( )  % DIAGNOSTIC_KEYSET_DOWNSAMPLING_FACTOR  ==  0 )  . window ( tumbling (SLIDING_STEP_MILLIS ) )  . aggregate ( counting ( ) )  . writeTo (  . logger (wr  -&gt;   . format ( &#34;time %,d: latency %,d ms, cca. %,d keys&#34; ,  simpleTime (wr . end ( ) ) , NANOSECONDS . toMillis (  . nanoTime ( ) )  - wr . end ( ) , wr . result ( )  * DIAGNOSTIC_KEYSET_DOWNSAMPLING_FACTOR ) ) ) ;\n This pipeline represents use cases with an unbounded event stream wherethe engine is asked to perform sliding window aggregation. You need thiskind of aggregation, for example, to obtain the time derivative of achanging quantity, remove high-frequency noise from the data (smoothing)or measure the intensity of the occurrence of some event (events persecond). The engine can first split the stream by some category (forexample, each distinct IoT device or smartphone) into substreams andthen independently track the aggregated value in each of them. InHazelcast Jet the sliding window moves in fixed-size steps that youconfigure. For example, with a sliding step of 1 second you get acomplete set of results every second, and if the window size is 1minute, the results reflect the events that occurred within the lastminute.\n  The code is entirely self-contained with no outside data sources orsinks. We use a mock data source that simulates an event stream withexactly the chosen number of events per second. Consecutive eventtimestamps are an equal amount of time apart. The source never emits anevent whose timestamp is still in the future, but otherwise emits themas fast as possible.\n If the pipeline falls behind, events will be &#34;buffered&#34; but without anystorage. After falling behind, the pipeline must catch up by ingestingdata as fast as it can. Since our source is non-parallel, the limit onits throughput was about 2.2 million events per second. We used 1million simulated events per second, leaving a catching-up headroom of1.2 million per second.\n The pipeline measures its own latency by comparing the timestamp of anemitted sliding window result with the actual wall-clock time. In moredetail, there are two aggregation stages with filtering between them. Asingle sliding window result consists of many items, each for onesubstream, and we&#39;re interested in the latency of the last-emitteditem. For this reason we first filter out most of the output, keepingevery 10,000th entry, and then direct the thinned-out stream to thesecond, non-keyed tumbling window stage that notes the result size andmeasures the latency. Non-keyed aggregation is not parallelized, so weget a single point of measurement. The filtering stage is parallel anddata-local so the impact of the additional aggregation step is verysmall (well below 1 ms).\n We used a trivial aggregate function: counting, in effect obtaining theevents/second metric of the stream. It has minimal state (a single long number) and produces no garbage. For any given heap usage ingigabytes, such a small state per key implies the worst case for thegarbage collector: a very large number of objects. GC overheads scalenot with heap size, but object count. We also tested a variant thatcomputes the same aggregate function, but with a differentimplementation that produces garbage.\n We performed most of the streaming benchmarks on a single node since ourfocus was the effect of memory management on pipeline performance andnetwork latency just adds noise into the picture. We repeated some keytests on a three-node Amazon EC2 cluster to validate our prediction thatcluster performance won&#39;t affect our conclusions. You can find a moredetailed justification for this towards the end of  Part2.\n We excluded the Parallel collector from the results for streamingworkloads because the latency spikes it introduces would be unacceptablein pretty much any real-life scenario.\n    In this scenario there&#39;s less than 1 GB heap usage. The collector is notunder high pressure, it has plenty of time to perform concurrent GC inthe background. These are the maximum pipeline latencies we observedwith the three garbage collectors we tested:\n  Note that these numbers include a fixed time of about 3 milliseconds toemit the window results. The chart is pretty self-explanatory: thedefault collector, G1, is pretty good on its own, but if you need evenbetter latency, you can use the experimental Z collector. Reducing theGC pauses below 10 milliseconds still seems to be out of reach for Javaruntimes. Shenandoah came out as a big loser in our test, pausesregularly exceeding even the G1&#39;s default of 200 ms.\n  In scenario 2 we assume that, for various reasons outside our control,(e.g., mobile network), the latency can grow into low seconds, whichrelaxes the requirements we must impose on our stream processingpipeline. On the other hand, we may be dealing with much larger datavolumes, on the order of millions or dozens of millions of keys.\n In this scenario we can provision our hardware so it&#39;s heavily utilized,relying on the GC to manage a large heap instead of spreading out thedata over many cluster nodes.\n We performed many tests with different combinations to find out how theinterplay between various factors causes the runtime to either keep upor fall behind. In the end we found two parameters that determine this:\n  The first one corresponds to the number of objects in the tenuredgeneration. Sliding window aggregation retains objects for a significanttime (the length of the window) and then releases them. This goesdirectly against the Generational Garbage Hypothesis, which states thatobjects will either die young or live forever. This regime puts thestrongest pressure on the GC, and since the GC effort scales with thenumber of live objects, performance is highly sensitive to thisparameter.\n The second parameter relates to how much GC overhead the application cantolerate. To explain it better, let&#39;s use some diagrams. A pipelineperforming windowed aggregation goes through three distinct steps:\n      Now the headroom has shrunk to almost nothing, the pipeline is barelykeeping up, and any temporary hiccups like an occasional GC pause willcause latency to grow and recover at a very slow pace.\n If we change this picture and present just the average event ingestionrate after window emission, we get this:\n  We call the height of the yellow rectangle &#34;catchup demand&#34;: it is thedemand on the throughput of the source. If it exceeds the actual maximumthroughput, the pipeline fails.\n   The area of the red and the yellow rectangles is fixed, it correspondsto the amount of data that must flow through the pipeline. Basically,the red rectangle &#34;squeezes out&#34; the yellow one. But the yellowrectangle&#39;s height is actually limited, in our case to 2.2 millionevents per second. So whenever it would be taller than the limit, we&#39;dhave a failing pipeline whose latency grows without bounds.\n We worked out the formulas that predict the sizes of the rectangles fora given combination of event rate, window size, sliding step and keysetsize, so that we could determine the catchup demand for each case.\n Now we that we have two more-or-less independent parameters derived frommany more parameters describing each individual setup, we can create a2D-chart where each benchmark run has a point on it. We assigned a colorto each point, telling us whether the given combination worked orfailed. For example, for JDK 14 with G1 on a developer&#39;s laptop, we gotthis picture:\n  We made the distinction between &#34;yes&#34;, &#34;no&#34; and &#34;gc&#34;, meaning thepipeline keeps up, doesn&#39;t keep up due to lack of throughput, or doesn&#39;tkeep up due to frequent long GC pauses. Note that the lack of throughputcan also be caused by concurrent GC activity and frequent short GCpauses. In the end, the distinction doesn&#39;t matter a lot.\n You can make out a contour that separates the lower-left area wherethings work out from the rest of the space, where they fail. We madethe same kind of chart for other combinations of JDK and GC, extractedthe contours, and came up with this summary chart:\n  For reference, the hardware we used is a MacBook Pro 2018 with a 6-coreIntel Core i7 and 16 GB DDR4 RAM, configuring  -Xmx10g for the JVM.However, we do expect the overall relationship among the combinations toremain the same on a broad range of hardware parameters. The chartvisualizes the superiority of the G1 over others, the weakness of the G1on JDK 8, and the weakness of the experimental low-latency collectorsfor this kind of workload.\n The base latency, the time it takes to emit the window results, was inthe ballpark of 500 milliseconds, but latency would often take hikes dueto occasional Major GC&#39;s (which are not unreasonably long with the G1),up to 10 seconds in the borderline cases (where the pipeline barelykeeps up), and still recover back to a second or two. We also noticedthe effects of JIT compilation in the borderline cases: the pipelinewould start out with a constantly increasing latency, but then afteraround two minutes, its performance would improve and the latency wouldmake a full recovery.", "posttime": "2020-06-09 20:16:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,java,modern,\u5ef6\u8fdf", "title": "\u73b0\u4ee3Java\u5728\u6570\u636e\u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u7684\u6027\u80fd\uff0c\u7b2c1\u90e8\u5206\u548c\u7b2c2\u90e8\u5206", "title_en": "Performance of Modern Java on Data-Heavy Workloads, Parts 1 and 2", "transed": 1, "url": "https://jet-start.sh/blog/2020/06/09/jdk-gc-benchmarks-part1", "via": "", "real_tags": ["\u6027\u80fd", "java", "modern", "\u5ef6\u8fdf"]}, {"category": "", "categoryclass": "", "imagename": "51dd248f5b0c6ee351edceab55ac7c91.jpg", "infoid": 1005840, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6cd5\u56fd\u6570\u5b66\u5bb6\u76ae\u57c3\u5c14-\u897f\u8499\u00b7\u62c9\u666e\u62c9\u65af(Pierre-Simon Laplace\uff0c1749-1827)\u8ba4\u4e3a\uff0c\u5b87\u5b99\u662f\u4e00\u5757\u673a\u68b0\uff0c\u7269\u7406\u51b3\u5b9a\u4e00\u5207\u3002\u62ff\u7834\u4ed1\u66fe\u7814\u8bfb\u8fc7\u62c9\u666e\u62c9\u65af\u7684\u8457\u4f5c\uff0c\u4ed6\u5c31\u4ed6\u7684\u7406\u8bba\u4e2d\u660e\u663e\u7f3a\u5c11\u521b\u9020\u8005\u4e00\u4e8b\u4e0e\u4ed6\u8fdb\u884c\u4e86\u5bf9\u8d28\u3002\u201c\u6211\u4e0d\u9700\u8981\u8fd9\u4e2a\u5047\u8bbe\uff0c\u201d\u4ed6\u56de\u7b54\u8bf4\u3002\u62c9\u666e\u62c9\u65af\u53ef\u80fd\u4e5f\u4f1a\u5bf9\u81ea\u7531\u610f\u5fd7\u8bf4\u540c\u6837\u7684\u8bdd\uff0c\u800c\u4ed6\u7684\u673a\u68b0\u8bba\u5b87\u5b99\u5219\u663e\u5f97\u591a\u4f59\u3002\n\u81ea\u62c9\u666e\u62c9\u65af\u65f6\u4ee3\u4ee5\u6765\uff0c\u79d1\u5b66\u5bb6\u3001\u54f2\u5b66\u5bb6\u751a\u81f3\u795e\u7ecf\u5b66\u5bb6\u90fd\u8ddf\u968f\u4ed6\u7684\u811a\u6b65\uff0c\u5426\u8ba4\u81ea\u7531\u610f\u5fd7\u7684\u53ef\u80fd\u6027\u3002\u8fd9\u53cd\u6620\u4e86\u7406\u8bba\u7269\u7406\u5b66\u5bb6\u4e2d\u7684\u4e00\u79cd\u666e\u904d\u4fe1\u5ff5\uff0c\u5373\u5982\u679c\u4f60\u77e5\u9053\u8868\u5f81\u7269\u7406\u7cfb\u7edf\u7684\u53d8\u91cf\u7684\u521d\u59cb\u503c\uff0c\u4ee5\u53ca\u89e3\u91ca\u8fd9\u4e9b\u53d8\u91cf\u5982\u4f55\u968f\u65f6\u95f4\u53d8\u5316\u7684\u65b9\u7a0b\u5f0f\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4ee5\u540e\u4efb\u4f55\u65f6\u5019\u7684\u7cfb\u7edf\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u77e5\u9053\u5bb9\u5668\u4e2d\u7ec4\u6210\u6c14\u4f53\u7684\u6240\u6709\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u5219\u53ef\u4ee5\u5728\u4ee5\u540e\u7684\u6240\u6709\u65f6\u95f4\u786e\u5b9a\u6240\u6709\u8fd9\u4e9b\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u5e94\u8be5\u6709\u4efb\u4f55\u504f\u79bb\u8fd9\u4e2a\u7269\u7406\u51b3\u5b9a\u7684\u8f68\u8ff9\u7684\u81ea\u7531\u3002\n\u90a3\u4e48\uff0c\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u5468\u56f4\u770b\u5230\u7684\u4e00\u5207-\u5ca9\u77f3\u548c\u884c\u661f\uff0c\u9752\u86d9\u548c\u6811\u6728\uff0c\u4f60\u7684\u8eab\u4f53\u548c\u5927\u8111-\u90fd\u662f\u7531\u8d28\u5b50\u3001\u7535\u5b50\u548c\u4e2d\u5b50\u4ee5\u975e\u5e38\u590d\u6742\u7684\u65b9\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u3002\u5c31\u4f60\u7684\u8eab\u4f53\u800c\u8a00\uff0c\u5b83\u4eec\u5236\u9020\u591a\u79cd\u7ec6\u80de\uff1b\u53cd\u8fc7\u6765\uff0c\u8fd9\u4e9b\u7ec6\u80de\u5236\u9020\u7ec4\u7ec7\uff0c\u5982\u808c\u8089\u548c\u76ae\u80a4\uff1b\u8fd9\u4e9b\u7ec4\u7ec7\u5236\u9020\u7cfb\u7edf\uff0c\u5982\u5fc3\u3001\u80ba\u548c\u8111\uff1b\u8fd9\u4e9b\u7cfb\u7edf\u6784\u6210\u6574\u4e2a\u8eab\u4f53\u3002\u4f3c\u4e4e\u5728\u66f4\u9ad8\u7684\u201c\u7d27\u6025\u201d\u6c34\u5e73\u4e0a\u53d1\u751f\u7684\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u5e94\u8be5\u7531\u5b83\u4eec\u4e0b\u9762\u8fd0\u884c\u7684\u7269\u7406\u552f\u4e00\u5730\u51b3\u5b9a\u3002\u8fd9\u5c06\u610f\u5473\u7740\u4f60\u5728\u8fd9\u4e2a\u975e\u5e38\u65f6\u523b\u7684\u60f3\u6cd5\u662f\u5728\u5b87\u5b99\u5f00\u59cb\u7684\u65f6\u5019\u9884\u5148\u786e\u5b9a\u7684\uff0c\u57fa\u4e8e\u5f53\u65f6\u7c92\u5b50\u7269\u7406\u53d8\u91cf\u7684\u503c\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u4f60\u6000\u7591\u5a01\u5ec9\u00b7\u838e\u58eb\u6bd4\u4e9a\u7684\u5341\u56db\u884c\u8bd7\u3001\u6e29\u65af\u987f\u00b7\u4e18\u5409\u5c14\u7684\u6f14\u8bb2\u4ee5\u53ca\u65af\u8482\u82ac\u00b7\u970d\u91d1(Stephen Hawking)\u7684\u201c\u65f6\u95f4\u7b80\u53f2\u201d(A Brief History of Time\uff0c1988)\u4e2d\u7684\u6587\u5b57\u662f\u5426\u771f\u7684\u662f\u8fd9\u6837\u4ea7\u751f\u7684\uff0c\u90a3\u4e5f\u662f\u60c5\u6709\u53ef\u539f\u7684\u3002\u4f60\u7684\u6000\u7591\u662f\u6b63\u786e\u7684\uff1a\u6000\u7591\u8005\u7684\u7acb\u573a\u5b58\u5728\u8bb8\u591a\u95ee\u9898\u3002\n\u5728\u975e\u5e38\u5c0f\u7684\u5c3a\u5ea6\u4e0a\uff0c\u91cf\u5b50\u7406\u8bba\u662f\u4e16\u754c\u4e0a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u57fa\u7840\u3002\u6d77\u68ee\u5821\u7684\u4e0d\u786e\u5b9a\u6027\u539f\u7406\u5728\u91cf\u5b50\u7ed3\u679c\u4e2d\u5f15\u5165\u4e86\u4e0d\u53ef\u907f\u514d\u7684\u6a21\u7cca\u6027\u548c\u4e0d\u53ef\u7ea6\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u4f60\u53ef\u80fd\u77e5\u9053\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u6bd4\u5982\u7c92\u5b50\u7684\u52a8\u91cf\uff0c\u4f46\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u51c6\u786e\u68c0\u6d4b\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u6bd4\u5982\u5b83\u7684\u4f4d\u7f6e\u3002\u8fd9\u4f3c\u4e4e\u4ece\u6839\u672c\u4e0a\u7834\u574f\u4e86\u521d\u59cb\u6570\u636e\u548c\u7269\u7406\u7ed3\u679c\u4e4b\u95f4\u6240\u8c13\u7684\u94c1\u677f\u4e00\u5757\u7684\u8054\u7cfb\u3002\u7136\u800c\uff0c\u8fd9\u662f\u6709\u4e89\u8bae\u7684\uff0c\u6240\u4ee5\u6211\u73b0\u5728\u628a\u5b83\u653e\u5728\u4e00\u8fb9\uff0c\u5c3d\u7ba1\u5b83\u5f88\u91cd\u8981\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u5c06\u96c6\u4e2d\u5728\u5927\u8111\u4e2d\u795e\u7ecf\u5143\u7684\u5206\u5b50\u751f\u7269\u5b66\u4e2d\u53d1\u751f\u7684\u56e0\u679c\u5173\u7cfb\u7684\u5173\u952e\u65b9\u9762\u3002\n\u4e0a\u4e2a\u4e16\u7eaa\u6700\u4ee4\u4eba\u9707\u60ca\u7684\u53d1\u73b0\u4e4b\u4e00\u662f\uff0c\u5fae\u89c2\u5c42\u9762\u7684\u751f\u7269\u6d3b\u52a8\u5b9e\u9645\u4e0a\u662f\u4ee5\u751f\u7269\u5206\u5b50\u7684\u7269\u7406\u5f62\u72b6\u4e3a\u57fa\u7840\u7684\uff0c\u7279\u522b\u662fDNA\u3001RNA\u548c\u86cb\u767d\u8d28\u3002\u53ea\u6709\u5f53X\u5c04\u7ebf\u7ed3\u6676\u5b66\u53d6\u5f97\u8fdb\u5c55\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u8fd9\u4e9b\u5206\u5b50\u7684\u5f02\u5e38\u590d\u6742\u7684\u8be6\u7ec6\u7ed3\u6784\u548c\u6298\u53e0\u65f6\uff0c\u8fd9\u4e00\u53d1\u73b0\u624d\u6210\u4e3a\u53ef\u80fd\u3002\n\u6b63\u5982\u5f17\u6717\u897f\u65af\u00b7\u514b\u91cc\u514b(Francis Crick)\u548c\u8a79\u59c6\u65af\u00b7\u6c83\u68ee(James Watson)\u5728\u7f57\u838e\u7433\u5fb7\u00b7\u5bcc\u5170\u514b\u6797(Rosalind Franklin)\u7684\u5de5\u4f5c\u5e2e\u52a9\u4e0b\u53d1\u73b0DNA\u7684\u53cc\u87ba\u65cb\u7ed3\u6784\u65f6\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u5206\u5b50\u7ed3\u6784\u786e\u5b9e\u662f\u751f\u547d\u7684\u79d8\u5bc6\u3002\u8fd9\u7406\u6240\u5f53\u7136\u5730\u5f15\u8d77\u4e86\u516c\u4f17\u5bf9DNA\u5206\u5b50\u5982\u4f55\u5bf9\u6211\u4eec\u7684\u9057\u4f20\u8fdb\u884c\u7f16\u7801\u7684\u5de8\u5927\u5174\u594b\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a\u662f\u5176\u4ed6\u5206\u5b50-\u86cb\u767d\u8d28\u548c\u76f8\u5173\u7684\u4fe1\u4f7f\u5206\u5b50-\u7684\u7ed3\u6784\u4f7f\u4e8b\u60c5\u5728\u7ec6\u80de\u6c34\u5e73\u4e0a\u53d1\u751f\u3002DNA\u4e4b\u6240\u4ee5\u91cd\u8981\uff0c\u53ea\u662f\u56e0\u4e3a\u5b83\u7f16\u7801\u4e86\u771f\u6b63\u8fdb\u884c\u751f\u7269\u5de5\u4f5c\u7684\u86cb\u767d\u8d28\u3002\u4f8b\u5982\uff0c\u8840\u7ec6\u80de\u4e2d\u7684\u8840\u7ea2\u86cb\u767d\u5c06\u6c27\u6c14\u4ece\u80ba\u90e8\u8f93\u9001\u5230\u8eab\u4f53\u7684\u5176\u4ed6\u90e8\u4f4d\u3002\u773c\u775b\u4e2d\u7684\u89c6\u7d2b\u7ea2\u8d28\u5438\u6536\u5149\u7ebf\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u7535\u4fe1\u53f7\u3002\u52a8\u86cb\u767d\u548c\u52a8\u529b\u86cb\u767d\u662f\u5728\u7ec6\u80de\u4e2d\u5c06\u7269\u8d28\u4ece\u4e00\u4e2a\u5730\u65b9\u8fd0\u9001\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u7684\u9a6c\u8fbe\u86cb\u767d\u3002\u9176\u4ee5\u5982\u6b64\u5de8\u5927\u7684\u6570\u91cf\u52a0\u901f\u5316\u5b66\u53cd\u5e94\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u6253\u5f00\u548c\u5173\u95ed\u7684\u3002\u7535\u538b\u95e8\u63a7\u79bb\u5b50\u901a\u9053\u5145\u5f53\u6676\u4f53\u7ba1\u7684\u751f\u7269\u7248\u672c\uff0c\u800c\u914d\u4f53\u95e8\u63a7\u79bb\u5b50\u901a\u9053\u5141\u8bb8\u4fe1\u4f7f\u5206\u5b50(\u201c\u914d\u4f53\u201d)\uff0c\u5982\u795e\u7ecf\u9012\u8d28\uff0c\u5c06\u4fe1\u606f\u4ece\u5927\u8111\u4e2d\u7684\u4e00\u4e2a\u7ec6\u80de\u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u7ec6\u80de\u3002\u4e8b\u60c5\u5c31\u8fd9\u6837\u8fc7\u53bb\u4e86\u3002\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\u90fd\u6765\u81ea\u4e8e\u8fd9\u4e9b\u86cb\u767d\u8d28\u590d\u6742\u5f62\u72b6\u7684\u7ec6\u8282\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u8981\u5c06\u7269\u7406\u5b66\u548c\u751f\u7269\u5b66\u8054\u7cfb\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u770b\u770b\u5206\u5b50\u5f62\u72b6\u80cc\u540e\u7684\u7406\u8bba\u3002\u8fd9\u4e2a\u7406\u8bba\u5c31\u662f\u91cf\u5b50\u5316\u5b66\uff0c\u5b83\u57fa\u4e8e\u91cf\u5b50\u7269\u7406\u7684\u57fa\u672c\u65b9\u7a0b\uff1a\u859b\u5b9a\u8c14\u65b9\u7a0b\u3002\u5728\u91cf\u5b50\u7406\u8bba\u4e2d\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u662f\u7531\u5b83\u7684\u6ce2\u51fd\u6570\u6765\u63cf\u8ff0\u7684\uff0c\u5b83\u51b3\u5b9a\u4e86\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\u4e0d\u540c\u7ed3\u679c\u7684\u6982\u7387\u3002\u859b\u5b9a\u8c14\u65b9\u7a0b\u652f\u914d\u7740\n\u6211\u8ba4\u4e3a\u859b\u5b9a\u8c14\u65b9\u7a0b\u7684\u6709\u6548\u6027\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u5b83\u662f\u7269\u7406\u5b66\u4e2d\u68c0\u9a8c\u6700\u5145\u5206\u7684\u65b9\u7a0b\u4e4b\u4e00\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e0e\u751f\u547d\u7684\u529f\u80fd\u8054\u7cfb\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u5c06\u859b\u5b9a\u8c14\u65b9\u7a0b\u5e94\u7528\u4e8e\u76f8\u5173\u5206\u5b50(\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u86cb\u767d\u8d28)\u7684\u6ce2\u51fd\u6570\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u7684\u5f62\u72b6\u5c06\u5982\u4f55\u968f\u65f6\u95f4\u53d8\u5316\u3002\u6240\u4ee5\u771f\u6b63\u7684\u95ee\u9898\u662f\uff1a\u859b\u5b9a\u8c14\u65b9\u7a0b\uff0c\u8fde\u540c\u63cf\u8ff0\u65e9\u671f\u5b87\u5b99\u4e2d\u5b58\u5728\u7684\u4e00\u5207\u7684\u6ce2\u51fd\u6570\u7684\u521d\u59cb\u72b6\u6001\uff0c\u662f\u5426\u51b3\u5b9a\u4e86\u6211\u4eca\u5929\u6240\u60f3\u7684\u4e00\u5207\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u6211\u4f53\u5185\u6240\u6709\u751f\u7269\u5206\u5b50\u7684\u72b6\u6001\uff1f\n\u5bf9\u4e8e\u81ea\u7531\u610f\u5fd7\u6000\u7591\u8bba\u8005\u6765\u8bf4\uff0c\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u6240\u6709\u7684\u7ed3\u679c\u5e76\u4e0d\u4ec5\u4ec5\u53d6\u51b3\u4e8e\u65b9\u7a0b\u5f0f\u548c\u521d\u59cb\u6570\u636e\u3002\u5b83\u4eec\u8fd8\u4f9d\u8d56\u4e8e\u7ea6\u675f\u3002\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u53d7\u91cd\u529b\u5f71\u54cd\u7684\u82f9\u679c\uff0c\u6bd4\u5982\u827e\u8428\u514b\u00b7\u725b\u987f\u5728\u4f0d\u5c14\u7d22\u666e\u5e84\u56ed\u770b\u7740\u82f9\u679c\u4ece\u6811\u4e0a\u6389\u5230\u5730\u4e0a\u3002\u90a3\u662f\u5b83\u4e0d\u53d7\u7ea6\u675f\u7684\u8fd0\u52a8\u3002\n\u73b0\u5728\u5047\u8bbe\u725b\u987f\u7528\u4e00\u6839\u7ef3\u5b50\u628a\u82f9\u679c\u6302\u5728\u6811\u679d\u4e0a\u3002\u56e0\u6b64\uff0c\u5b83\u4f1a\u53d8\u6210\u4e00\u4e2a\u949f\u6446\uff0c\u56e0\u4e3a\u7ef3\u5b50\u9650\u5236\u4e86\u5b83\u7684\u8fd0\u52a8\u3002\u5b83\u4e0d\u4f1a\u843d\u5230\u5730\u9762\u4e0a\uff0c\u800c\u662f\u5728\u6811\u679d\u4e0b\u4ee5\u5706\u5f27\u6765\u56de\u6446\u52a8\uff0c\u5176\u8fd0\u52a8\u72b6\u6001\u7531\u5176\u521d\u59cb\u4f4d\u7f6e\u548c\u901f\u5ea6\u552f\u4e00\u786e\u5b9a\u3002\u56e0\u6b64\uff0c\u7ec4\u6210\u82f9\u679c\u7684\u6240\u6709\u6570\u5341\u4ebf\u4e2a\u539f\u5b50\u7684\u8fd0\u52a8\u4e5f\u5c06\u7531\u8fd9\u6839\u5f26\u51b3\u5b9a\u3002\u8fd9\u5c06\u4f7f\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5728\u652f\u627f\u4e0b\u4e5f\u5728\u5706\u5f27\u5185\u8fd0\u52a8\u3002\u8fd9\u5c31\u662f\u7ea6\u675f\u5982\u4f55\u5851\u9020\u7ed3\u679c\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u7ea6\u675f\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u5f53\u82f9\u679c\u5e73\u9759\u5730\u6765\u56de\u6446\u52a8\u65f6\uff0c\u60f3\u8c61\u4e00\u4e0b\u725b\u987f\u526a\u65ad\u4e86\u7ef3\u5b50\u3002\u7136\u540e\u82f9\u679c\u5c31\u4f1a\u6389\u5230\u5730\u4e0a\u3002\u521d\u59cb\u72b6\u6001(\u5f00\u59cb\u65f6\u5728\u5706\u5f27\u4e2d\u7684\u901f\u5ea6)\u4e0d\u518d\u51b3\u5b9a\u7ed3\u679c\u3002\u662f\u7ef3\u5b50\u7684\u610f\u5916\u5207\u5272\u51b3\u5b9a\u4e86\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5b83\u6d88\u9664\u4e86\u4e4b\u524d\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u6545\u4e8b\u7684\u5bd3\u610f\u662f\uff0c\u5f53\u7ea6\u675f\u6761\u4ef6\u53d8\u5316\u65f6\uff0c\u7ed3\u679c\u4e0d\u662f\u7531\u521d\u59cb\u6761\u4ef6\u51b3\u5b9a\u7684\uff0c\u800c\u662f\u53d6\u51b3\u4e8e\u7ea6\u675f\u6761\u4ef6\u968f\u65f6\u95f4\u53d8\u5316\u7684\u65b9\u5f0f\u3002\n\u5c31\u751f\u547d\u5b58\u5728\u7684\u751f\u7269\u5206\u5b50\u800c\u8a00\uff0c\u5206\u5b50\u7684\u5f62\u72b6\u5bf9\u6240\u53d1\u751f\u7684\u4e8b\u60c5\u8d77\u5230\u4e86\u5236\u7ea6\u4f5c\u7528\u3002\u8fd9\u4e9b\u5206\u5b50\u76f8\u5f53\u7075\u6d3b\uff0c\u50cf\u94f0\u94fe\u4e00\u6837\u7ed5\u7740\u5173\u8282\u5f2f\u66f2\u3002\u5206\u5b50\u4e2d\u539f\u5b50\u6838\u4e4b\u95f4\u7684\u8ddd\u79bb\u51b3\u5b9a\u4e86\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u5f2f\u66f2\u3002\u4efb\u4f55\u7279\u5b9a\u7684\u8fd9\u79cd\u5206\u5b50\u201c\u6784\u8c61\u201d(\u4e00\u79cd\u7279\u5b9a\u7684\u6298\u53e0\u72b6\u6001)\u90fd\u4f1a\u9650\u5236\u79bb\u5b50\u548c\u7535\u5b50\u5728\u5e95\u5c42\u7269\u7406\u6c34\u5e73\u4e0a\u7684\u8fd0\u52a8\u3002\u6839\u636e\u751f\u7269\u9700\u8981\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4ee5\u4e00\u79cd\u4f9d\u8d56\u65f6\u95f4\u7684\u65b9\u5f0f\u53d1\u751f\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u751f\u7269\u5b66\u53ef\u4ee5\u6df1\u5165\u5230\u5851\u9020\u8eab\u4f53\u7ed3\u679c\u3002\u5b83\u6539\u53d8\u4e86\u9002\u7528\u7684\u859b\u5b9a\u8c14\u65b9\u7a0b\u4e2d\u7684\u7ea6\u675f\u6761\u4ef6\u3002\n\u4e00\u4e2a\u5173\u952e\u7684\u4f8b\u5b50\u662f\u7ec6\u80de\u58c1\u4e2d\u7684\u79bb\u5b50\u901a\u9053\uff0c\u5b83\u5c06\u7ec6\u80de\u7684\u5185\u90e8\u548c\u5916\u90e8\u5206\u5f00\u3002\u79bb\u5b50\u662f\u56e0\u4e3a\u5931\u53bb\u6216\u83b7\u5f97\u7535\u5b50\u800c\u5e26\u7535\u7684\u539f\u5b50\u3002\u94a0\u548c\u94be\u539f\u5b50\u5e26\u6b63\u7535\u662f\u56e0\u4e3a\u5b83\u4eec\u5931\u53bb\u4e86\u4e00\u4e2a\u7535\u5b50\uff0c\u800c\u6c2f\u79bb\u5b50\u5e26\u8d1f\u7535\u662f\u56e0\u4e3a\u5b83\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a\u7535\u5b50\u3002\u79bb\u5b50\u901a\u9053\u662f\u5d4c\u5165\u5728\u7ec6\u80de\u58c1\u4e2d\u7684\u86cb\u767d\u8d28\uff0c\u63a7\u5236\u7740\u79bb\u5b50\u8fdb\u51fa\u7ec6\u80de\u7684\u6d41\u52a8\u3002\u5b83\u4eec\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5176\u94f0\u94fe\u90e8\u5206\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u6216\u8005\u5141\u8bb8\u79bb\u5b50\u8fdb\u5165\u6216\u79bb\u5f00\u7ec6\u80de(\u53d6\u51b3\u4e8e\u5b83\u4eec\u7684\u7c7b\u578b)\uff0c\u6216\u8005\u963b\u6b62\u79bb\u5b50\u8fdb\u5165\u6216\u79bb\u5f00\u7ec6\u80de\u3002\n\u8fd9\u79cd\u95e8\u63a7\u5728\u5927\u8111\u529f\u80fd\u4e2d\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u795e\u7ecf\u5143\u901a\u8fc7\u79f0\u4e3a\u8f74\u7a81\u7684\u7ea4\u7ef4\u76f8\u4e92\u8fde\u63a5\u3002\u8f74\u7a81\u58c1\u4e0a\u7684\u7535\u538b\u95e8\u63a7\u79bb\u5b50\u901a\u9053\u6839\u636e\u7ec6\u80de\u5185\u5916\u7535\u538b\u7684\u4e0d\u540c\u800c\u6253\u5f00\u6216\u5173\u95ed\u3002\u901a\u8fc7\u8fd9\u4e9b\u79bb\u5b50\u901a\u9053\u8fdb\u51fa\u8f74\u7a81\u7684\u79bb\u5b50\u4f1a\u5bfc\u81f4\u7535\u4fe1\u53f7\u6cbf\u7740\u795e\u7ecf\u7ea4\u7ef4\u79fb\u52a8\uff0c\u4ece\u800c\u4ea7\u751f\u6211\u4eec\u601d\u8003\u7684\u795e\u7ecf\u7535\u8109\u51b2(\u88ab\u79f0\u4e3a\u201c\u5c16\u5cf0\u94fe\u201d\uff0c\u56e0\u4e3a\u5b83\u4eec\u7531\u4e00\u7cfb\u5217\u5c0f\u7684\u7535\u538b\u6d6a\u6d8c\u6216\u201c\u5c16\u5cf0\u201d\u7ec4\u6210)\u3002\u8fd9\u4e9b\u79bb\u5b50\u901a\u9053\u662f\u8ba1\u7b97\u673a\u4e2d\u6676\u4f53\u7ba1\u7684\u751f\u7269\u6a21\u62df\uff0c\u6839\u636e\u7535\u8def\u4e24\u90e8\u5206\u4e4b\u95f4\u7684\u7535\u538b\u5dee\uff0c\u5141\u8bb8\u7535\u6d41\u6d41\u52a8\u6216\u4e0d\u6d41\u52a8\u3002\n\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u79bb\u5b50\u901a\u9053\u662f\u914d\u4f53\u95e8\u63a7\u901a\u9053\uff0c\u5b83\u53d1\u751f\u5728\u5c06\u795e\u7ecf\u5143\u76f8\u4e92\u8fde\u63a5\u7684\u7a81\u89e6\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u590d\u6742\u7684\u751f\u5316\u7248\u672c\uff0c\u5c31\u50cf\u7528\u94a5\u5319\u5f00\u95e8\uff1a\u53ea\u6709\u5f53\u94a5\u5319\u7684\u5f62\u72b6\u9002\u5408\u7279\u5b9a\u7684\u9501\u65f6\uff0c\u5b83\u624d\u4f1a\u6253\u5f00\u3002\u914d\u4f53\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u795e\u7ecf\u9012\u8d28\uff0c\u662f\u4e00\u79cd\u4fe1\u4f7f\u5206\u5b50\uff0c\u5b83\u4e0e\u79bb\u5b50\u901a\u9053\u4e0a\u7684\u53d7\u4f53\u7ed3\u5408\uff0c\u56e0\u6b64\u901a\u8fc7\u6539\u53d8\u5176\u5f62\u72b6\u6765\u6253\u5f00\u5b83\u3002\n\u8fd9\u5141\u8bb8\u79bb\u5b50\u6d41\u5165\u795e\u7ecf\u5143\uff0c\u5c06\u5316\u5b66\u7269\u8d28\u8f6c\u53d8\u4e3a\u7535\u4fe1\u53f7\u3002\u53ea\u6709\u5f53\u914d\u4f53\u4e0e\u53d7\u4f53\u7ed3\u5408\u65f6\uff0c\u79bb\u5b50\u901a\u9053\u624d\u5141\u8bb8\u79bb\u5b50\u8fdb\u5165\u7ec6\u80de\uff0c\u5e76\u6539\u53d8\u79bb\u5b50\u901a\u9053\u7684\u5f62\u72b6\uff0c\u4f7f\u5176\u6253\u5f00\u3002\u5982\u679c\u4e0d\u5b58\u5728\u914d\u4f53\uff0c\u5219\u901a\u9053\u5173\u95ed\uff0c\u6ca1\u6709\u79bb\u5b50\u53ef\u4ee5\u8fdb\u5165\u3002\u5f15\u8d77\u8fd9\u79cd\u6253\u5f00\u548c\u5173\u95ed\u7684\u7ed3\u5408\u662f\u914d\u4f53\u7684\u7279\u6b8a\u5f62\u72b6\u7684\u7ed3\u679c\uff1a\u5f53\u4e14\u4ec5\u5f53\u5b83\u5177\u6709\u4e0e\u8be5\u7279\u5b9a\u53d7\u4f53\u5b8c\u5168\u76f8\u540c\u7684\u5f62\u72b6\u65f6\uff0c\u5b83\u624d\u80fd\u7ed3\u5408\u3002\u56e0\u6b64\uff0c\u9009\u901a\u529f\u80fd\u662f\u79bb\u5b50\u901a\u9053\u7684\u8be6\u7ec6\u5f62\u72b6\u7684\u7ed3\u679c\u3002\n\u8fd9\u5c31\u662f\u4fe1\u53f7\u5206\u5b50\u5982\u4f55\u6539\u53d8\u5bf9\u901a\u8fc7\u7ec6\u80de\u58c1\u79bb\u5b50\u901a\u9053\u7684\u79bb\u5b50\u6d41\u52a8\u7684\u9650\u5236\u3002\u4fe1\u4f7f\u5206\u5b50\u7ed3\u5408\u524d\u540e\u7684\u7ea6\u675f\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u79cd\u4e0e\u65f6\u95f4\u76f8\u5173\u7684\u7ed3\u5408\u6027\u8d28\u63a7\u5236\u7740\u4e00\u4e2a\u795e\u7ecf\u5143\u4e0e\u53e6\u4e00\u4e2a\u795e\u7ecf\u5143\u8fde\u63a5\u7684\u7a81\u89e6\u4e0a\u7684\u79bb\u5b50\u6d41\u3002\u6b63\u662f\u8fd9\u4e9b\u5206\u5b50\u5f62\u72b6\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u521d\u59cb\u6761\u4ef6\uff0c\u51b3\u5b9a\u4e86\u5f53\u4f60\u601d\u8003\u65f6\uff0c\u5206\u5b50\u859b\u5b9a\u8c14\u65b9\u7a0b\u7684\u54ea\u4e9b\u7279\u5b9a\u89e3\u4f1a\u51fa\u73b0\u5728\u4f60\u7684\u5927\u8111\u4e2d\u3002\u5b83\u4eec\u6784\u6210\u4e86\u601d\u8003\u7684\u53ef\u80fd\u6027\u3002\n\u90a3\u4e48\uff0c\u662f\u4ec0\u4e48\u51b3\u5b9a\u4e86\u54ea\u4e9b\u4fe1\u606f\u901a\u8fc7\u4fe1\u53f7\u5206\u5b50\u4f20\u9012\u7ed9\u4f60\u7684\u7a81\u89e6\u5462\uff1f\u5b83\u4eec\u662f\u7531\u601d\u7ef4\u8fc7\u7a0b\u51b3\u5b9a\u7684\u4fe1\u53f7\uff0c\u4e0d\u80fd\u5728\u4efb\u4f55\u66f4\u4f4e\u7684\u5c42\u9762\u4e0a\u63cf\u8ff0\uff0c\u56e0\u4e3a\u5b83\u4eec\u672c\u8d28\u4e0a\u6d89\u53ca\u6982\u5ff5\u3001\u8ba4\u77e5\u548c\u60c5\u611f\u3002\u5fc3\u7406\u4f53\u9a8c\u9a71\u52a8\u7740\u4e8b\u60c5\u7684\u53d1\u751f\u3002\u4f60\u7684\u601d\u60f3\u548c\u611f\u89c9\u901a\u8fc7\u6539\u53d8\u5bf9\u79bb\u5b50\u548c\u7535\u5b50\u6d41\u52a8\u7684\u9650\u5236\uff0c\u4ee5\u4e00\u79cd\u968f\u65f6\u95f4\u53d8\u5316\u7684\u65b9\u5f0f\uff0c\u201c\u5411\u4e0b\u201d\u5851\u9020\u5927\u8111\u4e2d\u7684\u8f83\u4f4e\u6c34\u5e73\u7684\u8fc7\u7a0b\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6b63\u8d70\u5728\u8857\u4e0a\uff0c\u5c31\u5728\u4f60\u524d\u9762\u53d1\u751f\u4e86\u4e00\u8d77\u53ef\u6015\u7684\u4e8b\u6545--\u6c7d\u8f66\u88ab\u649e\u574f\u4e86\uff0c\u6709\u4eba\u53d7\u4f24\uff0c\u5230\u5904\u90fd\u662f\u8840\u3002\u4f60\u7684\u53cd\u5e94\u662f\u6050\u60e7\uff1a\u540c\u60c5\u90a3\u4e9b\u53d7\u4f24\u7684\u4eba\uff0c\u5bb3\u6015\u4ed6\u4eec\u4f1a\u6b7b\uff0c\u5bf9\u6ca1\u6709\u53d1\u751f\u5728\u4f60\u8eab\u4e0a\u7684\u4e8b\u60c5\u611f\u5230\u5185\u759a\u548c\u5bbd\u6170\u3002\u8fd9\u4e9b\u90fd\u662f\u56e0\u4e3a\u4f60\u7684\u5927\u8111\u5728\u5fc3\u7406\u5c42\u9762\u4e0a\u7684\u8fd0\u4f5c\u65b9\u5f0f\uff0c\u57fa\u4e8e\u8fc7\u53bb\u7684\u7ecf\u9a8c\u548c\u5929\u751f\u7684\u53cd\u5e94\u7684\u67d0\u79cd\u7ec4\u5408\u800c\u53d1\u751f\u7684\u5fc3\u7406\u4e8b\u4ef6\u3002\u6240\u6709\u8fd9\u4e9b\u7279\u8d28--\u540c\u60c5\u3001\u6050\u60e7\u3001\u5185\u759a--\u90fd\u4e0d\u4f1a\u53d1\u751f\u5728\u79bb\u5b50\u6216\u7a81\u89e6\u6c34\u5e73\u4e0a\u3002\u8fd9\u4e9b\u9ad8\u6c34\u5e73\u7684\u5fc3\u7406\u64cd\u4f5c\u4f1a\u6539\u53d8\u79bb\u5b50\u901a\u9053\u7684\u5f62\u72b6\uff0c\u4ece\u800c\u6539\u53d8\u4f60\u5927\u8111\u4e2d\u6570\u5341\u4ebf\u4e2a\u79bb\u5b50\u548c\u7535\u5b50\u7684\u8fd0\u52a8\u3002\u5728\u4f60\u5927\u8111\u5404\u5c42\u4e4b\u95f4\u9519\u7efc\u590d\u6742\u7684\u56e0\u679c\u821e\u8e48\u4e2d\uff0c\u8fd9\u4e9b\u60f3\u6cd5\u4e4b\u6240\u4ee5\u80fd\u591f\u51fa\u73b0\uff0c\u662f\u56e0\u4e3a\u6f5c\u5728\u7684\u5c16\u5cf0\u94fe\uff0c\u4f46\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u5fc3\u7406\u6027\u8d28-\u8bc6\u522b\u4e8b\u6545\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u5f53\u4f60\u51b3\u5b9a\u505a\u4ec0\u4e48\u65f6\uff0c\u54ea\u4e9b\u60f3\u6cd5\u5728\u4f60\u8111\u6d77\u4e2d\u6d41\u6dcc\uff0c\u4f53\u9a8c\u770b\u5230\u4e8b\u4ef6\u7684\u9707\u64bc\u662f\u4ec0\u4e48\u611f\u89c9-\u5bfc\u81f4\u4e86\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u7269\u7406\u5b66\u4f7f\u4f60\u7684\u5927\u8111\u548c\u8eab\u4f53\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4f46\u4e0d\u662f\u7531\u4f60\u51b3\u5b9a\u7684\uff0c\u800c\u662f\u7531\u4f60\u5bf9\u4e8b\u4ef6\u7684\u5fc3\u7406\u89e3\u91ca\u51b3\u5b9a\u7684\u3002\n\u5b66\u4e60\u548c\u8bb0\u5fc6\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf4\u660e\u5411\u4e0b\u7684\u56e0\u679c\u6548\u5e94\u5982\u4f55\u5851\u9020\u6f5c\u5728\u7684\u7269\u7406\u5b66\u3002\u8bb0\u5fc6\u662f\u7531\u5f00\u542f\u548c\u5173\u95ed\u7684\u57fa\u56e0\u63a7\u5236\u7684\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u57fa\u56e0\u8c03\u8282\u201d\u3002\u57fa\u56e0\u7531DNA\u5206\u5b50\u7ec4\u6210\uff0c\u5305\u542b\u7ec6\u80de\u5728\u6b63\u786e\u7684\u5730\u70b9\u548c\u65f6\u95f4\u5236\u9020\u7279\u5b9a\u86cb\u767d\u8d28\u6240\u9700\u7684\u4fe1\u606f\u3002\u73b0\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u51e0\u4e4e\u6211\u4eec\u8eab\u4f53\u91cc\u7684\u6bcf\u4e2a\u7ec6\u80de\u90fd\u6709\u76f8\u540c\u7684\u57fa\u56e0\uff0c\u5e76\u4e14\u7f16\u7801\u6240\u6709\u51fa\u73b0\u5728\u8eab\u4f53\u5176\u4ed6\u90e8\u4f4d\u7684\u86cb\u767d\u8d28\u3002\u4f46\u6bcf\u4e2a\u7ec6\u80de\u90fd\u9700\u8981\u4ea7\u751f\u7279\u5b9a\u7684\u86cb\u767d\u8d28\uff0c\u8fd9\u53d6\u51b3\u4e8e\u73af\u5883\u3002\u56e0\u6b64\uff0c\u76f8\u540c\u7684DNA\u94fe\u5728\u4e0d\u540c\u7684\u7ec6\u80de\u4e2d\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u4ea7\u751f\u4e0d\u540c\u7684\u86cb\u767d\u8d28\u3002\u8fd9\u662f\u600e\u4e48\u53d1\u751f\u7684\uff1f\u5b83\u662f\u901a\u8fc7\u57fa\u56e0\u8c03\u63a7\u53d1\u751f\u7684\uff1a\u57fa\u56e0\u88ab\u5f00\u542f\u548c\u5173\u95ed\uff0c\u56e0\u6b64\u8868\u8fbe\u6216\u4e0d\u8868\u8fbe\u3002\u57fa\u56e0\u8c03\u63a7\u662f\u7531\u79f0\u4e3a\u8f6c\u5f55\u56e0\u5b50\u7684\u86cb\u767d\u8d28\u63a7\u5236\u7684\u3002\u8fd9\u4e9b\u8c03\u63a7\u86cb\u767d\u7ed3\u5408\u5230DNA\u5206\u5b50\u4e0a\u7684\u7279\u5b9a\u4f4d\u7f6e\uff0c\u8bc6\u522b\u5b83\u4eec\u7684\u5f62\u72b6\uff0c\u4ece\u800c\u51b3\u5b9a\u5f53\u8bfb\u53d6DNA\u65f6\u5c06\u4ea7\u751f\u54ea\u4e9b\u86cb\u767d\u8d28\u3002\n\u8fd9\u4e00\u57fa\u56e0\u8c03\u63a7\u8fc7\u7a0b\u52a0\u5f3a\u6216\u524a\u5f31\u4e86\u6211\u4eec\u5927\u8111\u4e2d\u7684\u795e\u7ecf\u8fde\u63a5\u3002\u5927\u8111\u76ae\u5c42\u6709\u5bc6\u5bc6\u9ebb\u9ebb\u6392\u5217\u7684\u795e\u7ecf\u5143\uff0c\u901a\u8fc7\u4e00\u4e2a\u6781\u5176\u590d\u6742\u7684\u8fde\u63a5\u7f51\u7edc\u76f8\u4e92\u8fde\u63a5\u3002\u8fd9\u4e2a\u7f51\u7edc\u7684\u5927\u81f4\u7ed3\u6784\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u7ec6\u8282\u4e0d\u540c\u3002\u6b63\u662f\u6bcf\u4e2a\u5927\u8111\u7684\u8be6\u7ec6\u7ed3\u6784\u4f53\u73b0\u4e86\u6211\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u7279\u522b\u662f\u6211\u4eec\u7684\u957f\u671f\u8bb0\u5fc6\u3002\u5173\u4e8e\u54ea\u4e2a\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u54ea\u4e2a\u795e\u7ecf\u5143\u7684\u7ec6\u8282\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u8fde\u63a5\u7684\u5f3a\u5ea6\uff0c\u90fd\u662f\u7531\u6211\u4eec\u81ea\u5df1\u7684\u5386\u53f2\u548c\u8bb0\u5fc6\u5851\u9020\u7684\u3002\n\u8fd9\u4e00\u5207\u662f\u600e\u4e48\u53d1\u751f\u7684\uff1f\u6b63\u5982\u5965\u5730\u5229\u88d4\u7f8e\u56fd\u533b\u751f\u57c3\u91cc\u514b\u00b7\u574e\u5fb7\u5c14(Eric Kandel)\u5728\u4ed62000\u5e74\u7684\u8bfa\u8d1d\u5c14\u5956\u6f14\u8bb2\u4e2d\u6240\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u5728\u7cbe\u795e\u5c42\u9762\u4e0a\u5b66\u4e60\u7684\u8fc7\u7a0b\u4f1a\u5bfc\u81f4\u57fa\u56e0\u8868\u8fbe\u6a21\u5f0f\u7684\u6539\u53d8\uff0c\u4ece\u800c\u4ea7\u751f\u7279\u5b9a\u7684\u86cb\u767d\u8d28\uff0c\u4ece\u800c\u6539\u53d8\u7a81\u89e6\u5904\u795e\u7ecf\u8fde\u63a5\u7684\u5f3a\u5ea6\u3002\u8fd9\u4f1a\u6539\u53d8\u795e\u7ecf\u5143\u4e4b\u95f4\u8fde\u63a5\u7684\u5f3a\u5ea6\uff0c\u4ece\u800c\u50a8\u5b58\u8bb0\u5fc6\u3002\n\u8fd9\u6837\u7684\u5b66\u4e60\u662f\u4e00\u79cd\u5fc3\u7406\u73b0\u8c61\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5403\u4e00\u987f\u7f8e\u5473\u5927\u9910\u65f6\u7684\u5feb\u4e50\uff0c\u8bb0\u5f97\u9a6c\u53cb\u53cb\u6f14\u5531\u5df4\u8d6b\u594f\u9e23\u66f2\u7684\u7ec6\u8282\uff0c\u6216\u8005\u8bb0\u5f97\u8f66\u7978\u7684\u75db\u82e6\u8bb0\u5fc6\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u8fd9\u4e9b\u662f\u7ea2\u5916\u7ebf\u7684\n\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u7406\u6027\u601d\u7ef4\u3002\u5927\u7ea6\u5728\u516c\u5143\u524d500\u5e74\uff0c\u6bd5\u8fbe\u54e5\u62c9\u65af\u5b66\u6d3e\u53d1\u73b0\u4e86\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u4e8b\u60c5\uff1a2\u7684\u5e73\u65b9\u6839\u662f\u65e0\u7406\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c2\u662f\u4e00\u4e2a\u6570\u5b57N\u4e0e\u5176\u81ea\u8eab\u7684\u4e58\u79ef(N\u4e58N\u4e3a2)\uff0c\u90a3\u4e48N\u5c31\u4e0d\u80fd\u8868\u793a\u4e3a\u6574\u6570\u7684\u6bd4\u7387\uff0c\u4f8b\u5982N\u4e0d\u53ef\u80fd\u662f3/2\u3002\u8fd9\u4e00\u53d1\u73b0\u4ee4\u4eba\u9707\u60ca\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e00\u53d1\u73b0\u88ab\u89c6\u4e3a\u5b98\u65b9\u79d8\u5bc6\u3002\u8fd9\u4e0d\u662f\u4ed6\u4eec\u60f3\u8981\u7684\u4e8b\u5b9e\uff0c\u77e5\u9053\u8fd9\u4e00\u70b9\u662f\u5371\u9669\u7684\u3002\n\u8fd9\u4e2a\u53ef\u803b\u7684\u7ed3\u8bba\u662f\u6839\u636e\u6570\u5b66\u89c4\u5219\u901a\u8fc7\u7406\u6027\u8bba\u8bc1\u5f97\u51fa\u7684--\u8fd9\u4e9b\u89c4\u5219\u5851\u9020\u4e86\u540e\u6865\u59c6\u6cb3\u9a6c\u5927\u8111\u4e2d\u53d1\u751f\u7684\u8fc7\u7a0b\u3002\u62bd\u8c61\u903b\u8f91\u4ece\u5fc3\u7406\u5b66\u7684\u89d2\u5ea6\u9a71\u52a8\u4e86\u6240\u6709\u5c42\u6b21\u7684\u5927\u8111\u64cd\u4f5c(\u201c\u6574\u6570\u7684\u591a\u5927\u6bd4\u4f8b\u7ed9\u62112\u7684\u5e73\u65b9\u6839\uff1f\u201d)\u3002\u5230\u6cbf\u7740\u795e\u7ecf\u7ea4\u7ef4\u98de\u884c\u7684\u7535\u8109\u51b2\uff0c\u5230\u901a\u8fc7\u79bb\u5b50\u901a\u9053\u8fdb\u51fa\u8fd9\u4e9b\u7ea4\u7ef4\u7684\u79bb\u5b50\uff0c\u5230\u7535\u5b50\u548c\u8d28\u5b50\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u4f7f\u6574\u4e2a\u4e8b\u60c5\u5f97\u4ee5\u53d1\u751f\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u601d\u60f3\u662f\u5982\u4f55\u88ab\u5c16\u5cf0\u94fe\u7f16\u7801\u7684\u7ec6\u8282\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u8fd9\u79cd\u7f16\u7801\u80af\u5b9a\u4f1a\u53d1\u751f\u3002\u5c16\u5cf0\u5e8f\u5217\u4e00\u5b9a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u53cd\u6620\u4e86\u903b\u8f91\u8bba\u70b9\u7684\u7ed3\u6784\uff0c\u53732\u7684\u5e73\u65b9\u6839\u662f\u65e0\u7406\u7684\u3002\u5982\u679c\u6211\u4eec\u8bb0\u4f4f\u4e86\u8fd9\u4e2a\u8bc1\u636e\uff0c\u6570\u5b66\u8bba\u8bc1\u5c31\u4f1a\u5ef6\u4f38\u5230\u8bb0\u5fc6\u50a8\u5b58\u65f6\uff0c\u901a\u8fc7\u57fa\u56e0\u8c03\u63a7\u6765\u91cd\u5851\u795e\u7ecf\u5143\u8fde\u63a5\u3002\u7136\u540e\uff0c\u903b\u8f91\u8bba\u8bc1\u5c31\u4f1a\u5177\u4f53\u4f53\u73b0\u5728\u5927\u8111\u8fde\u63a5\u7684\u7ec6\u8282\u4e0a\u3002\n\u8fd9\u4e9b\u4f8b\u5b50\u8868\u660e\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5fc3\u7406\u5b66\u4e0a\u7684\u7406\u89e3\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7269\u7406\u5c42\u9762\u7684\u7ea6\u675f\u6765\u5f71\u54cd\u79bb\u5b50\u548c\u7535\u5b50\u7684\u8fd0\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7cbe\u795e\u72b6\u6001\u4f1a\u6539\u53d8\u86cb\u767d\u8d28\u7684\u5f62\u72b6\uff0c\u56e0\u4e3a\u5927\u8111\u62e5\u6709\u771f\u6b63\u7684\u903b\u8f91\u80fd\u529b\u3002\u8fd9\u79cd\u5411\u4e0b\u7684\u56e0\u679c\u5173\u7cfb\u80dc\u8fc7\u521d\u59cb\u6761\u4ef6\u7684\u529b\u91cf\u3002\u903b\u8f91\u542b\u4e49\u51b3\u5b9a\u4e86\u6211\u4eec\u601d\u60f3\u4e2d\u5b8f\u89c2\u5c42\u9762\u7684\u7ed3\u679c\uff0c\u4e5f\u51b3\u5b9a\u4e86\u5fae\u89c2\u5c42\u9762\u4e0a\u7684\u7535\u5b50\u548c\u79bb\u5b50\u6d41\u52a8\u7684\u7ed3\u679c\u3002\n\u8fd9\u4e9b\u4f8b\u5b50\u5f53\u7136\u662f\u6709\u4e89\u8bae\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6d89\u53ca\u4eba\u7c7b\u7684\u5927\u8111\u548c\u601d\u60f3\uff0c\u5e76\u9690\u542b\u7740\u81ea\u7531\u610f\u5fd7\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u7c7b\u4f3c\u7684\u95ee\u9898\u4e5f\u51fa\u73b0\u5728\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u60c5\u51b5\u4e0b\u3002\u8ba1\u7b97\u51fa\u7279\u5b9a\u95ee\u9898\u7b54\u6848\u7684\u7b97\u6cd5-\u8c37\u6b4c\u5c06\u5411\u60a8\u663e\u793a\u54ea\u4e9b\u9875\u9762\uff1f\u7528\u8fd9\u5f20\u4fe1\u7528\u5361\u53ef\u4ee5\u53d6\u591a\u5c11\u94b1\uff1f\u6211\u53ef\u4ee5\u9884\u8ba2\u660e\u5929\u65e9\u4e0a8\u70b945\u5206\u7684\u706b\u8f66\u5417\uff1f-\u540c\u6837\u662f\u57fa\u4e8e\u62bd\u8c61\u903b\u8f91\u3002\u8be5\u903b\u8f91\u5728\u7528\u8bf8\u5982FORTRAN\u3001Java\u6216Python\u7b49\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u7f16\u7801\u3002\n\u7269\u7406\u5b66\u57fa\u7840\u4e0a\u7684\u65b9\u7a0b\u5f0f\u4e0e\u8fd9\u4e9b\u7b97\u6cd5\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u4f46\u8ba1\u7b97\u673a\u7a0b\u5e8f\u663e\u7136\u662f\u56e0\u679c\u6709\u6548\u7684\uff1a\u5b83\u4eec\u6539\u53d8\u4e86\u4e16\u754c\u7684\u7ed3\u679c\u3002\u7a0b\u5e8f\u6839\u636e\u4f5c\u7528\u4e8e\u76f8\u5173\u6570\u636e\u7684\u7b97\u6cd5\u903b\u8f91\u6765\u786e\u5b9a\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u8fd9\u5c31\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u7684\u5b66\u751f\u5b66\u4e60\u7684\u5185\u5bb9\u3002\u8fd9\u79cd\u903b\u8f91\u7ea7\u8054\u5230\u6570\u5b57\u6c34\u5e73\uff0c\u5728\u90a3\u91cc\u5b83\u901a\u8fc7\u6539\u53d8\u65bd\u52a0\u7684\u7535\u538b\u6765\u6539\u53d8\u6676\u4f53\u7ba1\u4e2d\u7535\u5b50\u4f20\u5bfc\u901a\u9053\u7684\u7ed3\u6784\uff0c\u4ece\u800c\u786e\u5b9a\u7535\u5b50\u6d41\u52a8\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u5728\u7a0b\u5e8f\u52a0\u8f7d\u5230\u8ba1\u7b97\u673a\u4e4b\u524d\uff0c\u76f8\u5173\u7684\u7b97\u6cd5\u6ca1\u6709\u5728\u5176\u5185\u90e8\u8868\u793a\uff1b\u5728\u7a0b\u5e8f\u52a0\u8f7d\u4e4b\u540e\uff0c\u5b83\u662f\u3002\u5b8f\u7ea7\u7684\u7ea6\u675f\u5df2\u901a\u8fc7\u52a0\u8f7d\u7a0b\u5e8f\u8fdb\u884c\u4e86\u66f4\u6539\u3002\u5f53\u5fae\u7ea7\u7535\u538b\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4e00\u5fae\u79d2\u4e00\u5fae\u79d2\u5730\u53d8\u5316\u65f6\uff0c\u7269\u7406\u968f\u7740\u7b97\u6cd5\u7684\u8c03\u5b50\u8d77\u821e\u3002\n\u81ea\u7531\u610f\u5fd7\u6000\u7591\u8bba\u8005\u5ffd\u7565\u4e86\u6211\u5728\u8fd9\u91cc\u8ba8\u8bba\u7684\u90a3\u79cd\u4f9d\u8d56\u4e8e\u65f6\u95f4\u7684\u7ea6\u675f\uff0c\u8fd9\u4f7f\u5f97\u751f\u7269\u5b66\u4e2d\u7684\u5411\u4e0b\u56e0\u679c\u5173\u7cfb\u603b\u4f53\u4e0a\uff0c\u7279\u522b\u662f\u5927\u8111\u529f\u80fd\u4e2d\u7684\u5411\u4e0b\u56e0\u679c\u5173\u7cfb\u6210\u4e3a\u53ef\u80fd\u3002\u5f53\u7136\uff0c\u5206\u5b50\u751f\u7269\u5b66\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u4e0e\u6784\u6210\u6240\u6709\u7269\u8d28\u5b58\u5728\u57fa\u7840\u7684\u7269\u7406\u5b66\u76f8\u77db\u76fe\u3002\u76f8\u53cd\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f02\u5e38\u590d\u6742\u7684\u4e0a\u4e0b\u6587\uff0c\u5176\u4e2d\u4e8b\u60c5\u6839\u636e\u8be5\u4e0a\u4e0b\u6587\u8fdb\u884c\u5904\u7406\u3002\u5c3d\u7ba1\u6211\u4eec\u7684\u5927\u8111\u786e\u5b9e\u662f\u7531\u57fa\u672c\u7c92\u5b50\u7ec4\u6210\u7684\uff0c\u4f46\u9ad8\u7ea7\u529f\u80fd\u662f\u901a\u8fc7\u5411\u4e0a\u548c\u5411\u4e0b\u56e0\u679c\u8fc7\u7a0b\u7684\u76f8\u4e92\u4f5c\u7528\u800c\u51fa\u73b0\u7684\u3002\n\u4f46\u4ecd\u6709\u4e00\u4e2a\u7ea0\u7f20\u4e0d\u4f11\u7684\u60f3\u6cd5\u51fa\u73b0\uff1a\u5982\u679c\u6574\u4e2a\u5b87\u5b99\u7684\u521d\u59cb\u6570\u636e\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u80fd\u4ee5\u4e00\u79cd\u673a\u68b0\u7684\u65b9\u5f0f\u786e\u5b9a\u6240\u6709\u8fd9\u4e9b\u8f83\u4f4e\u7ea7\u522b\u7684\u52a8\u529b\u5b66\u5462\uff1f\u6bd5\u7adf\uff0c\u5728\u8fd9\u5e45\u66f4\u5927\u7684\u56fe\u666f\u4e2d\uff0c\u5b83\u4eec\u4e0d\u662f\u5f88\u5c0f\u7684\u7ec6\u8282\u5417\uff1f\u5728\u8fd9\u91cc\uff0c\u4eba\u4eec\u53ef\u4ee5\u58f0\u79f0\u6ca1\u6709\u7ea6\u675f\u53d1\u751f\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u5b87\u5b99\u5c31\u662f\u4e00\u5207\uff0c\u6240\u4ee5\u5b83\u4e0d\u80fd\u53d7\u5230\u6765\u81ea\u66f4\u5927\u73af\u5883\u7684\u5f71\u54cd\u7684\u9650\u5236\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7269\u7406\u5b66\u96be\u9053\u4e0d\u662f\u51b3\u5b9a\u8bba\u7684\u5417\uff1f\u6211\u7684\u8bba\u70b9\u4f1a\u4e0d\u4f1a\u5206\u5d29\u79bb\u6790\uff1f\n\u53cd\u5e94\u662f\u53cc\u91cd\u7684\u3002\u9996\u5148\uff0c\u5728BOT\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u968f\u673a\u6027\u56e0\u7d20\u3002\n..", "note_en": "The French mathematician Pierre-Simon Laplace (1749-1827) believed that the Universe was a piece of machinery, and that physics determines everything. Napoleon, who had read up on Laplace\u2019s work, confronted him about the conspicuous absence of a creator in his theory. \u2018I had no need of that hypothesis,\u2019 came the reply. Laplace might have said the same thing about free will, which his mechanistic universe rendered superfluous.\n Since Laplace\u2019s day, scientists, philosophers and even neuroscientists have followed his lead in denying the possibility of free will. This reflects a widespread belief among theoretical physicists that if you know the initial values of the variables that characterise a physical system, together with the equations that explain how these variables change over time, then you can calculate the state of the system at all later times. For example, if you know the positions and velocities of all the particles that make up a gas in a container, you can determine the positions and velocities of all those particles at all later times. This means that there should be no freedom for any deviation from this physically determined trajectory.\n Consider, then, that everything we see around us \u2013 rocks and planets, frogs and trees, your body and brain \u2013 is made up of nothing but protons, electrons and neutrons put together in very complex ways. In the case of your body, they make many kinds of cells; in turn, these cells make tissues, such as muscle and skin; these tissues make systems, such as the heart, lungs and brain; and these systems make the body as a whole. It might seem that everything that\u2019s happening at the higher, \u2018emergent\u2019 levels should be uniquely determined by the physics operating beneath them. This would mean that the thoughts you\u2019re having at this very moment were predetermined at the start of the Universe, based on the values of the particle physics variables at that time.\n Now you might be forgiven for doubting whether William Shakespeare\u2019s sonnets, Winston Churchill\u2019s speeches and the words in Stephen Hawking\u2019s book  A Brief History of Time (1988) really came into being in this way. And you would be right to doubt: there are many problems with the skeptics\u2019 position.\n At very small scales, quantum theory underlies what\u2019s happening in the world. Heisenberg\u2019s uncertainty principle introduces an unavoidable fuzziness and an irreducible uncertainty in quantum outcomes. You might know the value of one variable, such as a particle\u2019s momentum, but that means you can\u2019t accurately detect another, such as its position. This seems to fundamentally undermine the allegedly iron-clad link between initial data and physical results. However, this is controversial, so I\u2019ll set it aside for now, as important as it is. Instead, I\u2019ll focus on key aspects of causation that occur in the molecular biology of neurons in the brain.\n One of the most astounding discoveries of the previous century was that biological activity at the micro level is literally grounded in the physical shape of biological molecules, particularly DNA, RNA and proteins. This discovery became possible only when X-ray crystallography had progressed to the point of allowing us to determine the extraordinarily complex detailed structure and foldings of these molecules.\n The structure of these molecules is truly the secret of life, as Francis Crick and James Watson exclaimed when they discovered the double helix structure of DNA, helped by the work of Rosalind Franklin. This deservedly led to huge public excitement about how DNA molecules encode our genetic inheritance. However, it is the structure of other molecules \u2013 proteins and associated messenger molecules \u2013 that in fact makes things happen at the cellular level. DNA is important only because it codes for the proteins that do the real biological work. For example, haemoglobin in blood cells transports oxygen from the lungs to the rest of the body. Rhodopsin in the eye absorbs light and turns it into electrical signals. Kinesin and dynein are motor proteins that transport materials from one place to another in a cell. Enzymes speed up chemical reactions by such huge amounts that they essentially turn them on and off. Voltage-gated ion channels serve as biological versions of transistors, while ligand-gated ion channels allow messenger molecules (\u2018ligands\u2019) such as neurotransmitters to convey information from one cell to another in the brain. And so it goes. And all this  functioning follows from the details of the complex shapes of these proteins.\n This means that, to link physics and biology, we need to look at the theory that underlies molecular shape. And that theory is quantum chemistry, based in the fundamental equation of quantum physics: the Schr\u00f6dinger equation. In quantum theory, the state of a system is described by what\u2019s known as its wave function, which determines the probabilities of different outcomes when events take place. The Schr\u00f6dinger equation governs how the wave function changes with time. For example, it governs the process of quantum tunnelling, which in turn underlies important physical effects such as how the Sun generates energy via nuclear fusion, photosynthesis in plants, and flash memories you use to store data in computer USB flash drives.\n I will take for granted the validity of the Schr\u00f6dinger equation, which is one of the best-tested equations in physics. To link this to the functioning of life, we need to apply the Schr\u00f6dinger equation to the wave function of the relevant molecules \u2013 in this case, proteins \u2013 so as to determine how their shape will change with time. So the actual question is: does the Schr\u00f6dinger equation, together with the initial state of the wave function describing everything that existed in the early Universe, determine everything I think today because it determines the states of all the biomolecules in my body?\n The confounding thing for free-will skeptics is that all outcomes don\u2019t depend only on the equations and the initial data. They also depend on constraints. An example is an apple under the influence of gravity, such as the one that Isaac Newton watched fall to the ground from a tree at Woolsthorpe Manor. That was its unconstrained motion.\n Now suppose Newton had suspended the apple from a branch of the tree by a string attached to its stalk. It would thereby have been turned into a pendulum, because the string constrained its motion. Instead of dropping to the ground, it would have swung back and forth in a circular arc under the branch, with its state of motion determined uniquely by its initial position and velocity. Consequently, the motions of all the billions of atoms that make up the apple would then also be determined by the string. It would make each of them also move in a circular arc under the support. This is how constraints shape outcomes.\n Now let\u2019s examine variation of the constraint over time. While the apple was swinging peacefully back and forth, imagine that Newton cut the string. The apple would then have fallen to the ground. The initial state (its speed in a circular arc when it started) no longer determined the outcome. It was the unexpected cutting of the string that determined what happened, because it removed the previous constraint. The moral of the story is that, when constraints vary, outcomes are not determined by initial conditions; they depend on the way that the constraints change with time.\n In the case of the biomolecules that underlie the existence of life, it\u2019s the shape of the molecule that acts as a constraint on what happens. These molecules are quite flexible, bending around joints rather like hinges. The distances between the atomic nuclei in the molecules determine what bending is possible. Any particular such molecular \u2018conformation\u2019 (a specific state of folding) constrains the motions of ions and electrons at the underlying physical level. This can happen in a time-dependent fashion, according to biological needs. In this way, biology can reach down to shape physical outcomes. It changes constraints in the applicable Schr\u00f6dinger equation.\n  A key case are the ion channels in cell walls that separate the interior of a cell from its exterior. Ions are atoms that have become electrically charged because they have lost or gained an electron. Sodium and potassium atoms are positively charged because they have lost an electron, while chlorine ions are negatively charged because they have gained an electron. Ion channels are proteins imbedded in the cell wall, controlling the flow of ions in and out of the cell. They can be open or closed, depending on the position of their hinged parts. They thereby either allow movement of ions into or out of the cell (depending on their type), or prevent it.\n This gating plays a crucial role in brain functioning. For example, neurons are linked to each other by fibres called axons. Voltage-gated ion channels in the axon wall open or close based on the difference in electrical voltage between the inside and the outside of the cell. The ions moving in and out of axons through these ion channels cause an electrical signal to move along the neuron fibres, thus creating the electric nerve impulses by which we think (called \u2018spike chains\u2019, because they consist of a series of little voltage surges or \u2018spikes\u2019). These ion channels are a biological analogue of transistors in computers, which allow currents to flow or not, based in the voltage difference between two parts of the circuit.\n Another type of ion channel is a  ligand-gated one, which occurs in the synapses that connect neurons to each other. The process is a complex biochemical version of opening a door with a key: it will open only if the key is the right shape for the specific lock. A ligand, in this case a neurotransmitter, is a messenger molecule that binds to a receptor on the ion channel, and so opens it by  changing its shape.\n  This allows ions to flow into a neuron, changing a chemical to an electrical signal. The ion channel allows ions to enter a cell only when a ligand is bound to a receptor and changes the shape of the ion channel so that it opens. If no ligand is present, the channel is closed and no ions can enter. The binding that causes this opening and closing is a consequence of the particular shape of the ligand: it can bind if and only if it has precisely the right shape for that specific receptor. The gating function, then, is a consequence of the detailed shape of the ion channel.\n  This is how signalling molecules alter constraints on the flow of ions through ion channels in cell walls. The constraints are different before and after the binding of a messenger molecule. This time-dependent nature of binding controls ion flows at the synapses where one neuron joins to another one. It is these changes of molecular shape, rather than initial conditions, that determine which specific solutions of the molecular Schr\u00f6dinger equation will occur in your brain when you\u2019re thinking . They underlie the possibility of thought.\n So what determines which messages are conveyed to your synapses by signalling molecules? They are signals determined by thinking processes that can\u2019t be described at any lower level because they involve concepts, cognition and emotions in an essential way. Psychological experiences drive what happens. Your thoughts and feelings reach \u2018down\u2019 to shape lower-level processes in the brain by altering the constraints on ion and electron flows in a way that changes with time.\n For example, suppose you\u2019re walking down the street, and just in front of you a terrible accident happens \u2013 smashed-up cars, people injured, blood everywhere. You react with horror: sympathy for those who\u2019ve been hurt, fear that they will die, a guilty sense of relief that it didn\u2019t happen to you. These are all mental events that take place because of the way your brain functions at the psychological level, based on some combination of past experience and innate responses. None of those qualities \u2013 sympathy, fear, guilt \u2013 occur at the ion or synapse level. These high-level mental operations act down to alter the shape of ion channels, and so change the motions of billions of ions and electrons in your brain. In an intricate causal dance between levels in your brain, those thoughts are able to occur because of the underlying spike chains, but it\u2019s their essentially psychological nature \u2013 what it means to recognise an accident, which thoughts flow through your mind as you decide what to do, what it feels like to experience the shock of seeing the event \u2013 that causes what happens. Physics enabled what took place in your head and body, but didn\u2019t determine it; your mental interpretation of the event did.\n Learning and memory offer another example of how downward causal effect shapes the underlying physics. Memory is controlled by genes switching on and off, known as \u2018gene regulation\u2019. Genes, made of DNA molecules, contain the information needed for cells to manufacture specific proteins at the right place and time. Now there\u2019s a problem here: nearly every cell in our body has the same genes, and codes for all the proteins that occur in the rest of the body. But each cell needs specific proteins to be produced, depending on context. So identical DNA strands produce different proteins in different cells at various times. How does this happen? It occurs by gene regulation: genes being switched on and off, and so being expressed or not. Gene regulation is controlled by proteins called transcription factors. These are regulatory proteins that bind to specific sites on a DNA molecule that recognise their shape, and so determine which proteins will be produced when the DNA is read.\n This process of gene regulation strengthens or weakens neural connections in our brain. The cortex has columns of densely packed neurons, connected to each other by an immensely complex network of connections. The broad structure of that network is the same for everyone, but the details are not. It\u2019s the detailed structure in each brain that embodies the differences between us, and specifically our long-term memories. The details of which neuron is connected to which, and the strength of each connection, have been shaped by our own history and memories.\n  How does any of this happen? As the Austrian-American doctor Eric Kandel  explained in his Nobel Prize Lecture from 2000, the process of learning at the mental level leads to changed patterns of gene expression, and so specific proteins being produced, which alter the strengths of neural connections at synapses. This changes the strength of connections between neurons, thereby storing memories.\n Such learning is a psychological happening. You might remember your pleasure on eating a delicious meal, the details of a Yo-Yo Ma rendition of a Bach sonata, or the painful memory of the car crash. Once again, these are irreducible psychological events: they can\u2019t be described at any lower level. They reach down to alter neuronal connections over time. These changes can\u2019t be predicted on the basis of the initial state of the neural connections (your neurons did not know that the car crash was about to happen) \u2013 but, afterwards, they constrain electron flows differently, because connections have changed. Learning changes structure at the macro scale (we have a \u2018plastic brain\u2019), which reaches down to alter micro connections and the details of electron flows at the bottom.\n Another case in point is rational thought. In about 500 BCE, the Pythagoreans discovered something startling: that the square root of two is irrational. That is, if 2 is the product of a number N with itself (N times N is 2), then N can\u2019t be expressed as a ratio of whole numbers, for example N cannot be 3/2. This was so shocking that the discovery was treated as an official secret. It wasn\u2019t something they wished to be true, and it was dangerous to know it.\n This scandalous conclusion was reached by rational argument according to mathematical rules \u2013 rules that shaped the processes that took place in the brain of Hippasus of Metapontum. Abstract logic was driving those brain operations at all levels from the psychological (\u2018What ratio of integral numbers gives me the square root of 2?\u2019) to electrical impulses flying along nerve fibres, to the ions moving in and out of those fibres through ion channels, to the interactions between electrons and protons that enabled the whole thing to happen.\n We don\u2019t know the details of how thoughts are encoded by spike chains, but we do know this coding must occur. The spike trains must somehow reflect the structure of the logical argument that the square root of 2 is irrational. If we memorise this proof, the mathematical argument reaches down to reshape neuronal connections via gene regulation as the memory is stored. The logical argument is then literally embodied in details of brain connections.\n What these instances show is that psychological understandings reach down to shape the motions of ions and electrons by altering constraints at the physics-level over time. That is, mental states change the shape of proteins because the brain has real logical powers. This downward  causation trumps the power of initial conditions. Logical implications determine the outcomes at the macro level in our thoughts, and at the micro level in terms of flows of electrons and ions.\n These examples are of course contentious because they involve the human brain and thought, and implicitly the issue of free will. However, the analogous issue also arises in the case of computer algorithms. An algorithm working out answers to specific questions \u2013 What pages will Google display to you? How much can you withdraw with this credit card? Can I book the 8:45am train tomorrow? \u2013 is again based in abstract logic. This logic is explicitly coded in a computer program written in a high-level programming language such as FORTRAN, Java or Python.\n The equations at the foundations of physics have no direct relation to such algorithms. But computer programs are clearly causally effective: they alter outcomes in the world. Programs determine what happens according to the logic of the algorithm acting on the relevant data. This is what computer science students study. That logic cascades down to the digital level, where it determines what happens to electron flows by altering applied voltages that change the structure of electron conduction channels in transistors. Before the program is loaded into the computer, the relevant algorithm is not represented in its innards; after the program is loaded, it is. Constraints at the macro level have been changed by loading the program. The physics  dances to the tune of the algorithm, as voltages at the micro level change microsecond by microsecond during the program execution.\n Free-will skeptics ignore the kind of time-dependent constraints that I discuss here, which  enable downwards causation in biology in general and brain function in particular. Of course, nothing about molecular biology contradicts the physics that underlies all material existence. Rather, it provides an extraordinarily complex context where things work out according to that context. Even though our brains are indeed made up of fundamental particles, high-level function emerges through the  interaction of upward and downward causal processes.\n  But still a nagging thought occurs: if the initial data were known for the entire Universe, then why can\u2019t it determine all these lower-level dynamics in a mechanistic way? After all, aren\u2019t they just smallscale details in this larger picture, where one can claim that no constraints occur? The Universe is by definition all that there is, so it can\u2019t be constrained by effects from a larger environment. Might physics not be deterministic in that case, and my argument fall apart?\n The response is twofold. First, there\u2019s a major element of randomness in what happens bot\n......", "posttime": "2020-06-09 20:15:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u610f\u5fd7,chaos,\u51b3\u5b9a", "title": "\u4ece\u6df7\u4e71\u5230\u81ea\u7531\u610f\u5fd7", "title_en": "From Chaos to Free Will", "transed": 1, "url": "https://aeon.co/essays/heres-why-so-many-physicists-are-wrong-about-free-will", "via": "", "real_tags": ["\u610f\u5fd7", "chaos", "\u51b3\u5b9a"]}, {"category": "", "categoryclass": "", "imagename": "23636bfd30694ea34660e87d2b40a269.png", "infoid": 1005839, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "seL4(\u53d1\u97f3\u4e3aess-e-ell-4)\u53ef\u4ee5\u8bf4\u662f\u4e16\u754c\u4e0a\u6700\u5b89\u5168\u7684\u64cd\u4f5c\u7cfb\u7edf(OS)\u5185\u6838\u3002\n\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6700\u4f4e\u7ea7\u522b\u7684\u8f6f\u4ef6\u3002\u5b83\u662f\u5728\u7279\u6743\u6a21\u5f0f\u4e0b\u6267\u884c\u7684\u4ee3\u7801(RISC-V\u4e2d\u7684S\u6a21\u5f0f\uff1bM\u6a21\u5f0f\u662f\u4e3a\u5fae\u7801/\u56fa\u4ef6\u4fdd\u7559\u7684)\u3002\u5185\u6838\u6700\u7ec8\u8d1f\u8d23\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5b89\u5168\u3002\nseL4\u662f\u4e00\u4e2a\u5fae\u5185\u6838\u3002\u5fae\u5185\u6838\u7684\u60f3\u6cd5\u662f\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u53ef\u4fe1\u8ba1\u7b97\u57fa\u7840--\u8fd9\u662f\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u5982\u679c\u5b83\u5931\u8d25\u4e86\uff0c\u5c31\u6ca1\u6709B\u8ba1\u5212\u4e86\u3002Linux\u548cWindows\u5185\u6838\u7531\u6570\u5343\u4e07\u884c\u4ee3\u7801\u7ec4\u6210\uff0c\u5305\u542b\u6570\u4ee5\u5343\u8ba1(\u66f4\u6709\u53ef\u80fd\u662f\u6570\u4e07)\u7684\u9519\u8bef--\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u653b\u51fb\u9762\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u5fae\u5185\u6838\uff0c\u6bd4\u5982seL4\uff0c\u5927\u7ea6\u670910,000\u884c--\u672c\u8d28\u4e0a\u66f4\u53ef\u9760\u3002\nseL4\u4e0e\u6240\u6709\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838(\u5305\u62ec\u5176\u4ed6\u5fae\u5185\u6838)\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u7684\u9a8c\u8bc1\u6545\u4e8b\u3002\u5b83\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u901a\u8fc7\u673a\u5668\u68c0\u67e5\u7684\u3001\u5bf9\u5176C\u5b9e\u73b0\u7684\u529f\u80fd\u6b63\u786e\u6027\u8fdb\u884c\u6570\u5b66\u8bc1\u660e\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838(\u7ed3\u679c\u4e3a\u6211\u4eec\u8d62\u5f97\u4e86\u540d\u4eba\u5802\u5956)\u3002\u8fd9\u610f\u5473\u7740\u76f8\u5bf9\u4e8e\u7528\u6570\u7406\u903b\u8f91\u8868\u793a\u7684\u89c4\u8303\u800c\u8a00\uff0c\u5b83\u88ab\u8bc1\u660e\u662f\u65e0bug\u7684\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u5df2\u7ecf\u8bc1\u660e\u4e86\u8fdb\u4e00\u6b65\u7684\u5b89\u5168\u5c5e\u6027(\u8fd9\u8868\u660e\u89c4\u8303\u5177\u6709\u6b63\u786e\u7684\u5c5e\u6027)\u548c\u5411\u4e0b\u5ef6\u4f38\u5230\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u529f\u80fd\u6b63\u786e\u6027\u3002\u5e76\u4e14\u5b83\u62e5\u6709\u5bf9\u786c\u5b9e\u65f6\u7cfb\u7edf\u7684\u6700\u5148\u8fdb\u7684\u652f\u6301\u3002\u5b83\u662f\u4e16\u754c\u4e0a\u6700\u5feb\u7684\u5fae\u5185\u6838\u3002\u4e0d\u7ba1\u600e\u4e48\u5b9a\u4e49\uff0c\u5b83\u90fd\u662f\u8bfe\u5802\u4e0a\u6700\u68d2\u7684\u3002\n\u6211\u4eec\u6700\u521d\u4e3a32\u4f4dARM\u5904\u7406\u5668\u9a8c\u8bc1\u4e86seL4\u3002\u7136\u540e\u6211\u4eec\u5c06\u5176\u6269\u5c55\u523064\u4f4dx86\u5904\u7406\u5668\u3002\u73b0\u5728\u5230RISC-V RV64\u5904\u7406\u5668\u3002\u73b0\u5728\u6db5\u76d6\u4e86\u6240\u6709\u91cd\u8981\u7684\u56fd\u9645\u4f1a\u8ba1\u51c6\u5219\u3002\nRISC-V\u662f\u4e00\u79cd\u5f00\u653e\u5f0f\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784(ISA)\u3002seL4\u662f\u4e00\u4e2a\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\u5fae\u5185\u6838\u3002\u8fd9\u662f\u5929\u4f5c\u4e4b\u5408\u3002\u7279\u522b\u662f\u5728\u5b89\u5168\u65b9\u9762\u3002\n\u5f53\u6211\u4eec\u9a8c\u8bc1seL4\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5047\u8bbe\u786c\u4ef6\u8fd0\u884c\u6b63\u5e38(\u5373\u6309\u7167\u89c4\u5b9a)\u3002\u8fd9\u5047\u8bbe\u9996\u5148\u6709\u4e00\u4e2a\u660e\u786e\u7684\u89c4\u8303\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u786c\u4ef6\u90fd\u662f\u8fd9\u6837\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6709\u8fd9\u6837\u7684\u89c4\u8303\uff0c\u5e76\u4e14\u5b83\u662f\u6b63\u5f0f\u7684(\u610f\u601d\u662f\u7528\u652f\u6301\u5173\u4e8e\u5176\u5c5e\u6027\u7684\u6570\u5b66\u63a8\u7406\u7684\u6570\u5b66\u5f62\u5f0f\u4e3b\u4e49\u7f16\u5199\u7684)\uff0c\u6211\u4eec\u5982\u4f55\u77e5\u9053\u5b83\u5b9e\u9645\u4e0a\u6355\u83b7\u4e86\u786c\u4ef6\u7684\u884c\u4e3a\u5462\uff1f\u73b0\u5b9e\u60c5\u51b5\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f8\u5f53\u80af\u5b9a\u7684\u662f\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u786c\u4ef6\u548c\u8f6f\u4ef6\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u6709\u7f3a\u9677\u3002\n\u4f46\u662f\uff0c\u62e5\u6709\u4e00\u4e2a\u5f00\u653e\u7684ISA\u7684\u597d\u5904\u4e0d\u4ec5\u4ec5\u662f\u514d\u7248\u7a0e\u3002\u5176\u4e00\u662f\u5b83\u5141\u8bb8\u5f00\u653e\u6e90\u7801\u7684\u786c\u4ef6\u5b9e\u73b0\u3002\u82cf\u9ece\u4e16\u7406\u5de5\u5927\u5b66\u5f00\u53d1\u7684CV64(\u524d\u8eab\u4e3a\u963f\u4e3d\u4e9a\u5a1c)\u6838\u5fc3\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u4f7f\u7528\u5f00\u653e\u6e90\u7801\u5b9e\u73b0\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u60a8\u5f97\u5230\u4e86\u4ec0\u4e48\uff0c\u5e76\u4e14\u53ef\u4ee5\u81ea\u5df1\u68c0\u67e5\u5b83\u662f\u5426\u5b58\u5728\u5b89\u5168\u5173\u952e\u9519\u8bef\u3002\u8fd9\u5c31\u662f\u5fb7\u56fd\u516c\u53f8HENSOLDT Cyber GmbH\u6240\u505a\u7684\uff1a\u4ed6\u4eec\u751f\u4ea7\u4e86\u4e00\u6b3e\u57fa\u4e8e\u963f\u4e3d\u4e9a\u5a1c\u7684\u82af\u7247\uff0c\u5177\u6709\u5f3a\u5927\u7684\u4f9b\u5e94\u94fe\u5b89\u5168\u6545\u4e8b\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u7528\u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u6765\u8865\u5145\u8fd9\u4e00\u70b9\uff0c\u4e3a\u5728RISC-V\u4e0a\u9a8c\u8bc1seL4\u63d0\u4f9b\u4e86\u8d44\u91d1\u3002[\u514d\u8d23\u58f0\u660e\uff1a\u6211\u5728HENSOLDT Cyber\u6709\u6743\u76ca\u3002]\n\u4f7f\u7528\u5f00\u6e90\u786c\u4ef6\u5b9e\u73b0\u7684\u5f00\u653eISA\u6700\u4ee4\u4eba\u5174\u594b\u7684\u65b9\u9762\u662f\u9a8c\u8bc1\u5b9e\u73b0\u7684\u524d\u666f\u3002\u8fd9\u542c\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8981\u6c42\uff0c\u4f46\u5f88\u96be\u5b9e\u73b0\u3002\u4f46\u540c\u6837\u7684\u8bdd\u4e5f\u9002\u7528\u4e8e\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838-\u76f4\u5230\u6211\u4eec\u8fd9\u4e48\u505a\u4e86\u3002\u6211\u77e5\u9053\u6709\u591a\u4e2a\u56e2\u4f53\u671d\u7740\u8fd9\u4e2a\u76ee\u6807\u52aa\u529b\uff0c\u8fdf\u65e9\u4f1a\u6709\u4e00\u4e2a\u56e2\u4f53\u6210\u529f\u3002\u8fd9\u5c06\u662f\u5b9e\u73b0\u771f\u6b63\u7684\u5b89\u5168\u7684\u9769\u547d\u6027\u7684\u4e00\u6b65\uff0c\u6211\u6253\u8d4c\u53ea\u6709\u51e0\u5e74\u7684\u65f6\u95f4\u4e86\uff01\n\u5177\u6709\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u6e90\u786c\u4ef6\u5bf9\u4e8e\u5b89\u5168\u6027\u6765\u8bf4\u662f\u4e00\u4ef6\u5f88\u68d2\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u7684\u4e1c\u897f\u3002\n\u5f00\u653eISA\u3001\u5f00\u653e\u6e90\u7801\u64cd\u4f5c\u7cfb\u7edf\u548c\u5f00\u653e\u6e90\u7801\u786c\u4ef6\u7684\u7ed3\u5408\u4f7f\u5f97\u4ee5\u524d\u4e3a\u786c\u4ef6\u5236\u9020\u5546\u4fdd\u7559\u7684\u786c\u4ef6-\u8f6f\u4ef6\u63a5\u53e3\u5b9e\u73b0\u4e86\u521b\u65b0(\u56e0\u6b64\u53d1\u751f\u5f97\u975e\u5e38\u7f13\u6162)\u3002\u8fd9\u5bf9\u5b89\u5168\u6765\u8bf4\u771f\u7684\u5f88\u91cd\u8981\u3002\n\u6211\u4eec\u90fd\u77e5\u9053\u5e7d\u7075\u653b\u51fb\uff0c\u5b83\u5229\u7528\u6295\u673a\u6027\u5904\u51b3\u7684\u526f\u4f5c\u7528\u6765\u7a83\u53d6\u673a\u5bc6\u3002\u4eba\u4eec\u4e0d\u592a\u4e86\u89e3\u7684\u662f\uff0c\u4ec5\u9760\u6295\u673a\u6027\u6267\u884c\u662f\u4e0d\u591f\u7684\u3002\u5e7d\u7075\u9700\u8981\u4e00\u4e2a\u9690\u853d\u7684\u5b9a\u65f6\u901a\u9053\u624d\u80fd\u628a\u4fe1\u606f\u4f20\u51fa\u53bb\u3002\u6ca1\u6709\u9690\u853d\u7684\u5b9a\u65f6\u901a\u9053\uff0c\u5c31\u6ca1\u6709\u5e7d\u7075\u653b\u51fb\u3002\n\u9632\u6b62\u8fd9\u4e9b\u9690\u853d\u7684\u8ba1\u65f6\u901a\u9053\u6070\u597d\u662f\u6211\u4eec\u51e0\u5e74\u6765\u4e00\u76f4\u5728\u7814\u7a76\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5f00\u53d1\u4e86\u64cd\u4f5c\u7cfb\u7edf\u673a\u5236\u6765\u9884\u9632\u5b83\u4eec\uff0c\u4f46\u540e\u6765\u624d\u610f\u8bc6\u5230\u5b83\u4eec\u5e76\u4e0d\u5b8c\u5168\u8d77\u4f5c\u7528\u3002\u66f4\u6df1\u5165\u5730\u6316\u6398\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u56e0\u4e3a\u786c\u4ef6\u6ca1\u6709\u7ed9\u6211\u4eec\u63d0\u4f9b\u6b63\u786e\u7684\u673a\u5236\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5927\u591a\u6570\u73b0\u6709\u786c\u4ef6\u5728\u5b89\u5168\u6027\u65b9\u9762\u90fd\u51fa\u73b0\u4e86\u95ee\u9898\uff01\u6f5c\u5728\u7684\u539f\u56e0\u662fISA\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u786c\u4ef6-\u8f6f\u4ef6\u5408\u540c\u3002ISA\u6307\u5b9a\u786c\u4ef6\u7684\u529f\u80fd\uff0c\u4f46\u6709\u610f\u62bd\u8c61\u51fa\u4e0e\u65f6\u95f4\u6709\u5173\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u4f46\u8ba1\u65f6\u53ef\u4ee5\u7528\u6765\u6cc4\u9732\u4fe1\u606f\uff0c\u800cISA\u5e76\u6ca1\u6709\u63d0\u4f9b\u963b\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u624b\u6bb5\u3002\u56e0\u6b64\uff0cISA\u4e0d\u8db3\u4ee5\u786e\u4fdd\u5b89\u5168\uff0c\u5fc5\u987b\u52a0\u4ee5\u6539\u8fdb\u3002\n\u8fd9\u901a\u5e38\u662f\u65e0\u671b\u7684\u52aa\u529b\uff1a\u8bd5\u56fe\u8bf4\u670d\u786c\u4ef6\u5236\u9020\u5546\u540c\u610f\u4e00\u4efd\u5bf9\u4ed6\u4eec\u80fd\u505a\u7684\u4e8b\u60c5\u65bd\u52a0\u989d\u5916\u9650\u5236\u7684\u65b0\u5408\u540c\u3002(\u76f8\u4fe1\u6211\uff0c\u6211\u8bd5\u8fc7\u4e86\uff01)\u3002\u6216\u8005\u751a\u81f3\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684\u6307\u4ee4\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u51fb\u8d25\u79d8\u5bc6\u901a\u9053-\u53ea\u8981\u623f\u5b50\u6ca1\u6709\u7740\u706b\uff0c\u5b83\u4eec\u5c31\u4e0d\u592a\u53ef\u80fd\u542c\u3002\u800c\u4e14\u5e7d\u7075\u4e4b\u706b\u663e\u7136\u8fd8\u6ca1\u6709\u71c3\u70e7\u5230\u8db3\u591f\u70ed\u7684\u7a0b\u5ea6\u3002\n\u5f00\u653e\u5f0f\u786c\u4ef6\u6539\u53d8\u4e86\u8fd9\u4e00\u70b9\u3002\u5b83\u4f7f\u6211\u4eec\u65e0\u9700\u7b49\u5f85\u5236\u9020\u5546\u5c31\u80fd\u8fdb\u884c\u521b\u65b0\u3002\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u63a7\u5236\u56f4\u680f\u7684\u4e24\u8fb9\u3002\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u5b83\u5b9e\u73b0\u4e86\u771f\u6b63\u7684\u534f\u540c\u8bbe\u8ba1\u3002\n\u4e0e\u82cf\u9ece\u4e16\u7406\u5de5\u5927\u5b66\u7684Ariane\u7684\u521b\u5efa\u8005\u5408\u4f5c\uff0c\u6211\u4eec\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a\u6211\u4eec\u63a2\u7d22\u4e86\u5982\u4f55\u53ea\u9700\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u786c\u4ef6-\u8f6f\u4ef6\u5408\u540c\uff0c\u5c31\u53ef\u4ee5\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u6b63\u786e\u7684\u65b9\u6cd5\u6765\u51fb\u8d25\u79d8\u5bc6\u901a\u9053\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5b83\u53ea\u9700\u8981\u5f88\u5c11\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u8fbe\u5230\u9ad8\u5ea6\u6709\u6548\u7684\u6548\u679c\u3002\nRISC-V\u57fa\u91d1\u4f1a\u7684\u76f8\u5173\u5de5\u4f5c\u7ec4\u76ee\u524d\u6b63\u5728\u8ba8\u8bba\u8fd9\u4e9b\u673a\u5236\u3002\u656c\u8bf7\u5173\u6ce8RISC-V\u5728\u5904\u7406\u5668\u5b89\u5168\u6027\u65b9\u9762\u7684\u57fa\u51c6\u8bbe\u7f6e\uff0c\u4e0e\u4e16\u754c\u4e0a\u6700\u5b89\u5168\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838-seL4\u76f8\u8f85\u76f8\u6210\u3002\nsel4\u7f51\u7ad9\u89e3\u91ca\u4e86sel4\uff0c\u5e76\u6709\u4e00\u4efd\u4e3a\u975e\u4e13\u5bb6\u7f16\u5199\u7684\u767d\u76ae\u4e66\uff0c\u8be6\u7ec6\u89e3\u91ca\u4e86sel4\u53ca\u5176\u9a8c\u8bc1\u6545\u4e8b\u3002", "note_en": "seL4  (pronounced   ess-e-ell-four ) is arguably the world\u2019s most secure operating system (OS) kernel.\n The OS kernel is the lowest level of software running on a computer system. It is the code that executes in privileged mode (S-mode in RISC-V; M-mode is reserved for microcode/firmware).\u00a0 The kernel is ultimately responsible for the security of a computer system.\n seL4 is a   microkernel . The idea of a microkernel is to minimise the   trusted computing base  \u2013 the part of the system for which there is no Plan B if it fails. The Linux and Windows kernels consist of tens of millions of lines of code, and contain literally thousands (more likely tens of thousands) of bugs \u2013 a huge attack surface. A well-designed microkernel, such as seL4, has about ten thousand lines \u2013   inherently more trustworthy .\n What sets seL4 aside from all other OS kernels, including other microkernels, is its verification story. It was the world\u2019s first OS kernel with a machine-checked, mathematical proof of the   functional correctness  of its C implementation (winning us a   Hall of Fame Award  as a result). This means that it is proved to be bug-free relative to a specification formulated in a mathematical logic. And by now it has proofs about further security properties (which show that the specification has the right properties) and functional correctness extending down to the binary code. And it has the most advanced support for hard real-time systems. And it is the world\u2019s fastest microkernel. It\u2019s   best in class by any definition .\n We originally verified seL4 for 32-bit Arm processors. We then extended that to 64-bit x86 processors. And now to RISC-V RV64 processors. Which now covers all the important ISAs.\n   RISC-V is an open instruction-set architecture (ISA). seL4 is an open-source OS microkernel. It\u2019s a match made in heaven. Especially in terms of security.\n When we verify seL4, we have to assume that the hardware operates correctly (i.e. as specified). That assumes that there is an unambiguous specification in the first place, which is not the case for all hardware. But even where there is such a specification, and it is formal (meaning written in a mathematical formalism that supports mathematical reasoning about its properties), how do we know that it actually captures the behaviour of the hardware? Reality is we can be pretty sure that it does not. Hardware is no different from software in that\u00a0both have bugs.\n But having an open ISA has advantages that go beyond being free of royalties. One is that it allows having open-source hardware implementations. An example of this is the   CV64 (formerly Ariane) core  developed at ETH Zurich. With an open-source implementation, you see what you get, and can check for yourself whether it has security-critical bugs. This is what German company HENSOLDT Cyber GmbH did:   they produced a chip , based on Ariane, with a strong supply-chain security story. And, to complement this with a secure OS, funded the verification of seL4 on RISC-V. [Disclaimer: I have an interest in HENSOLDT Cyber.]\n The most exciting aspect of an open ISA with open-source hardware implementations is the prospect of verifying the implementations. This sounds like a big ask that will be hard to realise. But the same was said about a verified OS kernel \u2013\u00a0until we did it. I know there are multiple groups working towards this goal, and sooner or later one of them will succeed. This will be a revolutionary step towards achieving real security, and I bet it\u2019s only a few years away!\n  Open-source hardware with a verified, open-source OS is a great thing for security, but there is more.\n The combination of open ISA, open-source OS and open-source hardware enables innovation at the hardware-software interface that was previously reserved for hardware manufacturers (and thus happened at a snail\u2019s pace). This is really important for security.\n We are all aware of   Spectre attacks , which use side effects of speculative execution to steal secrets. What is less understood is that speculative execution on its own is not enough. Spectre needs a    covert timing channel  to get the information out. Without the covert timing channel there is no Spectre attack.\n Preventing these covert timing channels happens to be something we\u2019ve been working on for a few years. We developed   OS mechanisms for preventing them , but only to realise that they don\u2019t quite work. Digging deeper, we found that this is because the hardware doesn\u2019t give us the right mechanisms. In other words, most existing hardware is broken in terms of security! And the underlying cause is the ISA, which is our hardware-software contract. The ISA specifies functionality of the hardware, but intentionally abstracts away anything to do with time. But timing can be used to leak information, and the ISA does not provide the means for stopping this. As such, the ISA is   insufficient for ensuring security , and must be improved.\n This would normally be hopeless endeavour: trying to convince hardware manufacturers to agree to a new contract that imposes additional restriction on what they can do. (Trust me, I\u2019ve tried!) Or even provide the OS with an extra instruction it can use to defeat covert channels \u2013 as long as the house is not on fire, they are unlikely to listen. And the Spectre fire is apparently not burning hot enough yet.\n Open hardware changes this. It enables us to innovate without waiting for manufacturers. It enables us to control both sides of the fence. It enables true co-design, for the benefit of security.\n Partnering with the creators of Ariane at ETH Zurich, we did exactly that: We explored how we can amend the hardware-software contract just a bit to   give the OS the right means to defeat covert channels . And we could demonstrate that it takes very little to be highly effective.\n The relevant working groups in the RISC-V Foundation are discussing these mechanisms right now. Stay tuned for RISC-V setting the benchmark in processor security, complementing the world\u2019s most secure OS kernel \u2013 seL4.\n  The   seL4 web site  explains seL4, and has a whitepaper, written for non-experts, that explains seL4 and its verification story in detail.", "posttime": "2020-06-09 19:59:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "risc,verified,\u786c\u4ef6", "title": "SeL4\u5df2\u5728RISC-V\u4e0a\u9a8c\u8bc1", "title_en": "SeL4 is verified on RISC-V", "transed": 1, "url": "https://microkerneldude.wordpress.com/2020/06/09/sel4-is-verified-on-risc-v/", "via": "", "real_tags": ["risc", "verified", "\u786c\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "32ae625137617b1c67341a0bbb2578d1.gif", "infoid": 1005838, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u6211\u6765\u8bf4\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u8981\u6c42\u662f\uff0c\u5728\u80fd\u591f\u8bfb\u53d6\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u4e4b\u524d\uff0c\u4e0d\u5e94\u8be5\u9700\u8981\u4e0b\u8f7d\u5e76\u89e3\u5bc6\u6574\u4e2a\u6587\u4ef6\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u5730\u65b9\u662f\u97f3\u9891\u548c\u89c6\u9891\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4f7f\u56de\u653e\u53ef\u4ee5\u5feb\u901f\u5f00\u59cb\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662fZIP\u6587\u4ef6\uff1a\u8bb8\u591a\u6587\u4ef6\u6d4f\u89c8\u5668\u90fd\u6709\u80fd\u529b\u6d4f\u89c8\u538b\u7f29\u7684\u6863\u6848\uff0c\u6bd4\u5982ZIP\u6587\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u89e3\u538b\u7f29\u3002\u8981\u542f\u7528\u6b64\u529f\u80fd\uff0c\u6d4f\u89c8\u5668\u9700\u8981\u80fd\u591f\u8bfb\u53d6\u5b58\u6863\u6587\u4ef6\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u4ec5\u89e3\u538b\u7f29\u8be5\u90e8\u5206\uff0c\u7136\u540e\u79fb\u52a8\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002\n\u5728\u5185\u90e8\uff0cUtahFS\u4ece\u4e0d\u5b58\u50a8\u5927\u4e8e\u914d\u7f6e\u5927\u5c0f(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a32KB)\u7684\u5bf9\u8c61\u3002\u5982\u679c\u6587\u4ef6\u5177\u6709\u8d85\u8fc7\u8be5\u6570\u636e\u91cf\uff0c\u5219\u8be5\u6587\u4ef6\u88ab\u5206\u89e3\u6210\u591a\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u7531\u8df3\u8fc7\u5217\u8868\u8fde\u63a5\u3002\u8df3\u8fc7\u5217\u8868\u662f\u94fe\u8868\u7684\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u7248\u672c\uff0c\u5b83\u5141\u8bb8\u8bfb\u53d6\u5668\u901a\u8fc7\u5728\u6bcf\u4e2a\u5757\u4e2d\u5b58\u50a8\u989d\u5916\u7684\u6307\u9488\u6765\u5feb\u901f\u79fb\u52a8\u5230\u968f\u673a\u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u6307\u9488\u6307\u5411\u6bd4\u524d\u9762\u53ea\u6709\u4e00\u8df3\u66f4\u8fdc\u7684\u5730\u65b9\u3002\n\u5f53\u56e0\u4e3a\u6587\u4ef6\u88ab\u5220\u9664\u6216\u622a\u65ad\u800c\u4e0d\u518d\u9700\u8981\u8df3\u8fc7\u5217\u8868\u4e2d\u7684\u5757\u65f6\uff0c\u5b83\u4eec\u4f1a\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u201c\u5783\u573e\u6876\u201d\u94fe\u8868\u4e2d\u3002\u7136\u540e\uff0c\u5f53\u5728\u5176\u4ed6\u5730\u65b9\u9700\u8981\u5757\u65f6\uff0c\u5783\u573e\u6876\u5217\u8868\u7684\u5143\u7d20\u53ef\u4ee5\u88ab\u56de\u6536\uff0c\u4f8b\u5982\uff0c\u7528\u4e8e\u521b\u5efa\u65b0\u6587\u4ef6\u6216\u5c06\u66f4\u591a\u6570\u636e\u5199\u5165\u73b0\u6709\u6587\u4ef6\u7684\u672b\u5c3e\u3002\u8fd9\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u4e86\u91cd\u590d\u5229\u7528\u7387\uff0c\u610f\u5473\u7740\u53ea\u6709\u5728\u5783\u573e\u6876\u5217\u8868\u4e3a\u7a7a\u65f6\u624d\u9700\u8981\u521b\u5efa\u65b0\u5757\u3002\u4e00\u4e9b\u8bfb\u8005\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u662f\u201c\u8ba1\u7b97\u673a\u7f16\u7a0b\u827a\u672f\uff1a\u7b2c\u4e00\u5377\uff0c\u7b2c2.2.3\u8282\uff01\u201d\u4e2d\u63cf\u8ff0\u7684\u94fe\u63a5\u5206\u914d\u7b56\u7565\uff01\n\u4f7f\u7528\u94fe\u63a5\u5206\u914d\u7684\u539f\u56e0\u4ece\u6839\u672c\u4e0a\u8bf4\u662f\u56e0\u4e3a\u5b83\u5bf9\u5927\u591a\u6570\u64cd\u4f5c\u6765\u8bf4\u662f\u6700\u6709\u6548\u7684\u3002\u4f46\u662f\uff0c\u5b83\u4e5f\u662f\u5206\u914d\u5185\u5b58\u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u4e0e\u6211\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u4e09\u8282\u4e2d\u8ba8\u8bba\u7684\u5bc6\u7801\u5b66\u6700\u517c\u5bb9\u3002\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5c06\u6587\u4ef6\u62c6\u5206\u6210\u5757\u5e76\u901a\u8fc7\u8df3\u8fc7\u5217\u8868\u8fdb\u884c\u8fde\u63a5\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8ba8\u8bba\u4e00\u4e0b\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u53d7\u5230\u4fdd\u62a4\u7684\u3002\u8fd9\u65b9\u9762\u6709\u4e24\u4e2a\u65b9\u9762\uff1a\n\u7b2c\u4e00\u4e2a\u662f\u673a\u5bc6\u6027\uff0c\u5b83\u5411\u5b58\u50a8\u63d0\u4f9b\u5546\u9690\u85cf\u6bcf\u4e2a\u5757\u7684\u5185\u5bb9\u3002\u8fd9\u53ea\u9700\u4f7f\u7528\u4ece\u7528\u6237\u5bc6\u7801\u6d3e\u751f\u7684\u5bc6\u94a5\uff0c\u4f7f\u7528AES-GCM\u5bf9\u6bcf\u4e2a\u5757\u8fdb\u884c\u52a0\u5bc6\u5373\u53ef\u3002\n\u867d\u7136\u7b80\u5355\uff0c\u4f46\u8be5\u65b9\u6848\u4e0d\u63d0\u4f9b\u524d\u5411\u4fdd\u5bc6\u6216\u540e\u59a5\u534f\u5b89\u5168\u3002\u6b63\u5411\u4fdd\u5bc6\u610f\u5473\u7740\u5982\u679c\u7528\u6237\u7684\u8bbe\u5907\u906d\u5230\u7834\u574f\uff0c\u653b\u51fb\u8005\u5c06\u65e0\u6cd5\u8bfb\u53d6\u5df2\u5220\u9664\u7684\u6587\u4ef6\u3002\u540e\u5b89\u5168\u610f\u5473\u7740\u4e00\u65e6\u7528\u6237\u7684\u8bbe\u5907\u4e0d\u518d\u53d7\u5230\u5a01\u80c1\uff0c\u653b\u51fb\u8005\u5c06\u65e0\u6cd5\u8bfb\u53d6\u65b0\u6587\u4ef6\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u63d0\u4f9b\u8fd9\u4e24\u79cd\u4fdd\u8bc1\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u90fd\u610f\u5473\u7740\u5c06\u9700\u8981\u5728\u8bbe\u5907\u4e4b\u95f4\u540c\u6b65\u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u7528\u6237\u8bbe\u5907\u4e0a\uff0c\u5982\u679c\u4e22\u5931\uff0c\u5c06\u5bfc\u81f4\u6863\u6848\u4e0d\u53ef\u8bfb\u3002\n\u8be5\u65b9\u6848\u4e5f\u4e0d\u80fd\u9632\u6b62\u8131\u673a\u5bc6\u7801\u7834\u89e3\uff0c\u56e0\u4e3a\u653b\u51fb\u8005\u53ef\u4ee5\u83b7\u53d6\u4efb\u4f55\u52a0\u5bc6\u5757\uff0c\u5e76\u4e00\u76f4\u731c\u6d4b\u5bc6\u7801\uff0c\u76f4\u5230\u627e\u5230\u6709\u6548\u7684\u5bc6\u7801\u4e3a\u6b62\u3002\u4f7f\u7528Argon2\u4f1a\u4f7f\u731c\u6d4b\u5bc6\u7801\u7684\u6210\u672c\u66f4\u9ad8\uff0c\u5e76\u5efa\u8bae\u7528\u6237\u9009\u62e9\u5f3a\u5bc6\u7801\uff0c\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\n\u6211\u7edd\u5bf9\u613f\u610f\u5728\u672a\u6765\u6539\u8fdb\u52a0\u5bc6\u65b9\u6848\uff0c\u4f46\u6211\u8ba4\u4e3a\u4e0a\u9762\u5217\u51fa\u7684\u5b89\u5168\u5c5e\u6027\u5bf9\u4e8e\u521d\u59cb\u7248\u672c\u6765\u8bf4\u592a\u56f0\u96be\u548c\u8106\u5f31\u4e86\u3002\n\u6570\u636e\u4fdd\u62a4\u7684\u7b2c\u4e8c\u4e2a\u65b9\u9762\u662f\u5b8c\u6574\u6027\uff0c\u5b83\u786e\u4fdd\u5b58\u50a8\u63d0\u4f9b\u5546\u6ca1\u6709\u66f4\u6539\u6216\u5220\u9664\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u662f\u901a\u8fc7\u5728\u7528\u6237\u6570\u636e\u4e0a\u6784\u5efaMerkle\u6811\u6765\u5b9e\u73b0\u7684\u3002Merkle\u6811\u5728\u6211\u4eec\u5173\u4e8e\u8bc1\u4e66\u900f\u660e\u5ea6\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u6709\u8be6\u7ec6\u63cf\u8ff0\u3002Merkle Tree\u7684\u6839\u6563\u5217\u4e0e\u968f\u6bcf\u6b21\u66f4\u6539\u800c\u9012\u589e\u7684\u7248\u672c\u53f7\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u6839\u6563\u5217\u548c\u7248\u672c\u53f7\u90fd\u4f7f\u7528\u4ece\u7528\u6237\u5bc6\u7801\u6d3e\u751f\u7684\u5bc6\u94a5\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\u6b64\u6570\u636e\u5b58\u50a8\u5728\u4e24\u4e2a\u4f4d\u7f6e\uff1a\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u5e93\u4e2d\u7684\u7279\u6b8a\u952e\u4e0b\u548c\u7528\u6237\u8bbe\u5907\u4e0a\u7684\u6587\u4ef6\u4e2d\u3002\n\u6bcf\u5f53\u7528\u6237\u60f3\u8981\u4ece\u5b58\u50a8\u63d0\u4f9b\u5546\u8bfb\u53d6\u6570\u636e\u5757\u65f6\uff0c\u4ed6\u4eec\u90fd\u4f1a\u9996\u5148\u8bf7\u6c42\u8fdc\u7a0b\u5b58\u50a8\u7684\u6839\u76ee\u5f55\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u4e0e\u78c1\u76d8\u4e0a\u7684\u76f8\u540c\uff0c\u6216\u8005\u7248\u672c\u53f7\u662f\u5426\u9ad8\u4e8e\u78c1\u76d8\u4e0a\u7684\u7248\u672c\u53f7\u3002\u68c0\u67e5\u7248\u672c\u53f7\u53ef\u9632\u6b62\u5b58\u50a8\u63d0\u4f9b\u7a0b\u5e8f\u5728\u672a\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u5c06\u5f52\u6863\u6062\u590d\u5230\u4ee5\u524d\u7684(\u6709\u6548)\u72b6\u6001\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u5bf9\u7167\u6700\u65b0\u7684\u6839\u54c8\u5e0c\u9a8c\u8bc1\u8bfb\u53d6\u7684\u4efb\u4f55\u6570\u636e\uff0c\u4ece\u800c\u9632\u6b62\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u4fee\u6539\u6216\u5220\u9664\u3002\n\u5728\u8fd9\u91cc\u4f7f\u7528Merkle Tree\u4e0e\u4f7f\u7528\u8bc1\u4e66\u900f\u660e\u6027\u5177\u6709\u76f8\u540c\u7684\u597d\u5904\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u9a8c\u8bc1\u5355\u4e2a\u6570\u636e\u7247\u6bb5\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u6b21\u4e0b\u8f7d\u5e76\u9a8c\u8bc1\u6240\u6709\u5185\u5bb9\u3002\u53e6\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u5b8c\u6574\u6027\u7684\u5e38\u7528\u5de5\u5177\u79f0\u4e3a\u6d88\u606f\u9a8c\u8bc1\u7801(MAC)\uff0c\u867d\u7136\u5b83\u8981\u7b80\u5355\u5f97\u591a\uff0c\u6548\u7387\u4e5f\u66f4\u9ad8\uff0c\u4f46\u5b83\u6ca1\u6709\u529e\u6cd5\u53ea\u8fdb\u884c\u90e8\u5206\u9a8c\u8bc1\u3002\n\u6211\u4eec\u4f7f\u7528Merkle\u6811\u65e0\u6cd5\u9632\u6b62\u7684\u4e00\u4ef6\u4e8b\u662f\u5206\u53c9\uff0c\u5373\u5b58\u50a8\u63d0\u4f9b\u5546\u5411\u4e0d\u540c\u7684\u7528\u6237\u663e\u793a\u4e0d\u540c\u7248\u672c\u7684\u5b58\u6863\u3002\u7136\u800c\uff0c\u68c0\u6d4b\u5206\u53c9\u9700\u8981\u7528\u6237\u4e4b\u95f4\u7684\u67d0\u79cd\u516b\u5366\uff0c\u8fd9\u76ee\u524d\u8d85\u51fa\u4e86\u521d\u59cb\u5b9e\u73b0\u7684\u8303\u56f4\u3002\n\u4e0d\u7ecf\u610fRAM\u6216ORAM\u662f\u4e00\u79cd\u5bc6\u7801\u6280\u672f\uff0c\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u5176\u65b9\u5f0f\u5bf9\u5b58\u50a8\u5668\u672c\u8eab\u9690\u85cf\u4e86\u6267\u884c\u4e86\u54ea\u9879\u64cd\u4f5c(\u8bfb\u53d6\u6216\u5199\u5165)\u4ee5\u53ca\u64cd\u4f5c\u6267\u884c\u5230\u4e86\u5b58\u50a8\u5668\u7684\u54ea\u4e00\u90e8\u5206\uff01\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u201c\u5185\u5b58\u201d\u662f\u6211\u4eec\u7684\u5bf9\u8c61\u5b58\u50a8\u63d0\u4f9b\u8005\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5bf9\u4ed6\u4eec\u9690\u85cf\u4e86\u6211\u4eec\u6b63\u5728\u8bbf\u95ee\u54ea\u4e9b\u6570\u636e\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8981\u8bbf\u95ee\u3002\u8fd9\u5bf9\u4e8e\u9632\u5fa1\u6d41\u91cf\u5206\u6790\u653b\u51fb\u5f88\u6709\u4ef7\u503c\uff0c\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u5bf9UtahFS\u8fd9\u6837\u7684\u7cfb\u7edf\u6709\u8be6\u7ec6\u4e86\u89e3\u7684\u5bf9\u624b\u53ef\u4ee5\u67e5\u770b\u5176\u53d1\u51fa\u7684\u8bf7\u6c42\uff0c\u5e76\u63a8\u65ad\u52a0\u5bc6\u6570\u636e\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u60a8\u5b9a\u671f\u4e0a\u4f20\u6570\u636e\uff0c\u4f46\u51e0\u4e4e\u4ece\u4e0d\u4e0b\u8f7d\uff0c\u5e76\u63a8\u65ad\u60a8\u6b63\u5728\u5b58\u50a8\u81ea\u52a8\u5907\u4efd\u3002\nORAM\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u5305\u62ec\u59cb\u7ec8\u8bfb\u53d6\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u968f\u65f6\u4f7f\u7528\u6240\u6709\u65b0\u503c\u91cd\u5199\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u4ee5\u8bfb\u53d6\u6216\u5199\u5165\u5355\u4e2a\u503c\u3002\u67e5\u770b\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u7684\u5bf9\u624b\u4e0d\u4f1a\u77e5\u9053\u60a8\u5b9e\u9645\u60f3\u8981\u7684\u503c\uff0c\u56e0\u4e3a\u60a8\u603b\u662f\u89e6\u6478\u6240\u6709\u4e1c\u897f\u3002\u7136\u800c\uff0c\u8fd9\u5c06\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4f4e\u6548\u3002\n\u6211\u4eec\u5b9e\u9645\u4f7f\u7528\u7684\u7ed3\u6784\u79f0\u4e3apath Oram\uff0c\u5b83\u7a0d\u5fae\u62bd\u8c61\u4e86\u8fd9\u4e2a\u7b80\u5355\u7684\u65b9\u6848\uff0c\u4f7f\u5176\u66f4\u6709\u6548\u7387\u3002\u9996\u5148\uff0c\u5b83\u5c06\u5185\u5b58\u5757\u7ec4\u7ec7\u6210\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5176\u6b21\uff0c\u5b83\u4fdd\u5b58\u4e00\u4e2a\u5ba2\u6237\u7aef\u8868\u683c\uff0c\u8be5\u8868\u683c\u5c06\u5e94\u7528\u7a0b\u5e8f\u7ea7\u6307\u9488\u6620\u5c04\u5230\u4e8c\u53c9\u6811\u4e2d\u7684\u968f\u673a\u53f6\u5b50\u3002\u8bc0\u7a8d\u5728\u4e8e\uff0c\u503c\u88ab\u5141\u8bb8\u9a7b\u7559\u5728\u5176\u5206\u914d\u7684\u53f6\u548c\u4e8c\u53c9\u6811\u7684\u6839\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u4efb\u4f55\u5185\u5b58\u5757\u4e2d\u3002\n\u73b0\u5728\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u67e5\u627e\u6307\u9488\u6307\u5411\u7684\u503c\u65f6\uff0c\u6211\u4eec\u5728\u8868\u4e2d\u67e5\u627e\u5206\u914d\u7ed9\u5b83\u7684\u53f6\uff0c\u5e76\u8bfb\u53d6\u6839\u548c\u53f6\u4e4b\u95f4\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u3002\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u4ef7\u503c\u5e94\u8be5\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u62e5\u6709\u4e86\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\uff01\u5728\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u624b\u770b\u5230\u7684\u53ea\u662f\u6211\u4eec\u4ece\u6811\u4e0a\u8bfb\u53d6\u4e86\u4e00\u6761\u968f\u673a\u8def\u5f84\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u9690\u85cf\u6211\u4eec\u662f\u5728\u8bfb\u8fd8\u662f\u5728\u5199\uff0c\u5e76\u91cd\u65b0\u968f\u673a\u5316\u4e00\u4e9b\u5185\u5b58\uff0c\u4ee5\u786e\u4fdd\u6b64\u67e5\u627e\u4e0d\u4f1a\u4e0e\u6211\u4eec\u5c06\u6765\u8fdb\u884c\u7684\u5176\u4ed6\u67e5\u627e\u76f8\u5173\u8054\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u91cd\u65b0\u968f\u673a\u5316\uff0c\u6211\u4eec\u5c06\u521a\u521a\u8bfb\u53d6\u7684\u6307\u9488\u5206\u914d\u7ed9\u4e00\u4e2a\u65b0\u53f6\uff0c\u5e76\u5c06\u503c\u4ece\u4e4b\u524d\u5b58\u50a8\u5b83\u7684\u4efb\u4f55\u4e00\u4e2a\u5757\u79fb\u52a8\u5230\u4e00\u4e2a\u65e2\u662f\u65b0\u53f6\u53c8\u662f\u65e7\u53f6\u7684\u7236\u5757\u4e2d\u3002(\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6839\u5757\uff0c\u56e0\u4e3a\u6839\u662f\u6240\u6709\u5185\u5bb9\u7684\u7236\u7ea7\u3002)\u3002\u4e00\u65e6\u5c06\u503c\u79fb\u52a8\u5230\u5408\u9002\u7684\u5757\u5e76\u7531\u5e94\u7528\u7a0b\u5e8f\u5b8c\u6210\u6d88\u8d39/\u4fee\u6539\uff0c\u6211\u4eec\u5c31\u4f1a\u91cd\u65b0\u52a0\u5bc6\u6211\u4eec\u83b7\u53d6\u7684\u6240\u6709\u5757\uff0c\u5e76\u5c06\u5b83\u4eec\u5199\u56de\u5185\u5b58\u3002\u8fd9\u4f1a\u5c06\u503c\u653e\u5165\u6839\u53ca\u5176\u65b0\u53f6\u4e4b\u95f4\u7684\u8def\u5f84\u4e2d\uff0c\u800c\u53ea\u66f4\u6539\u6211\u4eec\u5df2\u7ecf\u83b7\u53d6\u7684\u5185\u5b58\u5757\u3002\n\u8fd9\u79cd\u7ed3\u6784\u5f88\u68d2\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u89e6\u53ca\u5206\u914d\u7ed9\u4e8c\u53c9\u6811\u4e2d\u5355\u4e2a\u968f\u673a\u8def\u5f84\u7684\u5185\u5b58\uff0c\u5b83\u662f\u76f8\u5bf9\u4e8e\u5185\u5b58\u603b\u5927\u5c0f\u7684\u5bf9\u6570\u5de5\u4f5c\u91cf\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6211\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u8bfb\u53d6\u76f8\u540c\u7684\u503c\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u4f1a\u63a5\u89e6\u5230\u6811\u4e2d\u5b8c\u5168\u968f\u673a\u7684\u8def\u5f84\uff01\u4f46\u662f\uff0c\u989d\u5916\u7684\u5185\u5b58\u67e5\u627e\u4ecd\u7136\u4f1a\u5bfc\u81f4\u6027\u80fd\u635f\u5931\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48ORAM\u652f\u6301\u662f\u53ef\u9009\u7684\u3002\n\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\u5bf9\u6211\u6765\u8bf4\u771f\u7684\u5f88\u6709\u4ef7\u503c\uff0c\u56e0\u4e3a\u867d\u7136\u7cfb\u7edf\u7684\u8bb8\u591a\u5355\u72ec\u5c42\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u4eec\u662f\u5927\u91cf\u6539\u8fdb\u7684\u7ed3\u679c\uff0c\u5f88\u5feb\u5c31\u4f1a\u53d8\u6210\u590d\u6742\u7684\u4e1c\u897f\u3002\u4e0d\u8fc7\uff0c\u8fd9\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u6211\u5fc5\u987b\u81ea\u5df1\u5b9e\u73b0\u5f88\u591a\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u91cd\u7528\u522b\u4eba\u7684\u4ee3\u7801\u3002\u8fd9\u662f\u56e0\u4e3a\u6784\u5efa\u7aef\u5230\u7aef\u52a0\u5bc6\u7cfb\u7edf\u9700\u8981\u4ed4\u7ec6\u5730\u5c06\u5b89\u5168\u6027\u96c6\u6210\u5230\u6bcf\u4e2a\u529f\u80fd\u4e2d\uff0c\u800c\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u552f\u4e00\u597d\u65b9\u6cd5\u662f\u4ece\u4e00\u5f00\u59cb\u3002\u6211\u5e0c\u671bUtahFS\u5bf9\u5176\u4ed6\u5bf9\u5b89\u5168\u5b58\u50a8\u611f\u5174\u8da3\u7684\u4eba\u6709\u7528\u3002\nUtahFS\u52a0\u5bc6\u5b58\u50a8", "note_en": "Encryption is one of the most powerful technologies that everyone uses on a daily basis without realizing it. Transport-layer encryption, which protects data as it\u2019s sent across the Internet to its intended destination, is now ubiquitous because it\u2019s a fundamental tool for creating a trustworthy Internet. Disk encryption, which protects data while it\u2019s sitting idly on your phone or laptop\u2019s hard drive, is also becoming ubiquitous because it prevents anybody who steals your device from also being able to see what\u2019s on your desktop or read your email.\n The next improvement on this technology that\u2019s starting to gain popularity is end-to-end encryption, which refers to a system where only the end-users are able to access their data -- not any intermediate service providers. Some of the most popular examples of this type of encryption are chat apps like  WhatsApp and  Signal. End-to-end encryption significantly reduces the likelihood of a user\u2019s data being  maliciously stolen from, or  otherwise mishandled by a service provider. This is because even if the service provider loses the data, nobody will have the keys to decrypt it!\n Several months ago, I realized that I had a lot of sensitive files on my computer (my diary, if you must know) that I was afraid of losing, but I didn\u2019t feel comfortable putting them in something like Google Drive or Dropbox. While Google and Dropbox are absolutely trustworthy companies, they don\u2019t offer encryption and this is a case where I would really wanted complete control of my data.\n From looking around, it was hard for me to find something that met all of my requirements:\n Would both encrypt and authenticate the directory structure, meaning that file names are hidden and it\u2019s not possible for others to move or rename files.\n Viewing/changing part of a large file doesn\u2019t require downloading and decrypting the entire file.\n So I set out to build such a system! The end result is called UtahFS, and the  code for it is available here. Keep in mind that this system is not used in production at Cloudflare: it\u2019s a proof-of-concept that I built while working on our  Research Team. The rest of this blog post describes why I built it as I did, but there\u2019s documentation in the repository on actually using it if you  want to skip to that.\n  The first and most important part of a storage system is\u2026 the storage. For this, I used  Object Storage, because it\u2019s one of the cheapest and most reliable ways to store data on somebody else\u2019s hard drives. Object storage is nothing more than a key-value database hosted by a cloud provider, often tuned for storing values around a few kilobytes in size. There are a ton of different providers with different pricing schemes like  Amazon S3,  Backblaze B2, and  Wasabi. All of them are capable of storing terabytes of data, and many also offer geographic redundancy.\n  One of the requirements that was important to me was that it shouldn\u2019t be necessary to download and decrypt an entire file before being able to read a part of it. One place where this matters is audio and video files, because it enables playback to start quickly. Another case is ZIP files: a lot of file browsers have the ability to explore compressed archives, like ZIP files, without decompressing them. To enable this functionality, the browser needs to be able to read a specific part of the archive file, decompress just that part, and then move somewhere else.\n Internally, UtahFS never stores objects that are larger than a configured size (32 kilobytes, by default). If a file has more than that amount of data, the file is broken into multiple objects which are connected by a  skip list. A skip list is a slightly more complicated version of a  linked list that allows a reader to move to a random position quickly by storing additional pointers in each block that point further than just one hop ahead.\n When blocks in a skip list are no longer needed, because a file was deleted or truncated, they\u2019re added to a special \u201ctrash\u201d linked list. Elements of the trash list can then be recycled when blocks are needed somewhere else, to create a new file or write more data to the end of an existing file, for example. This maximizes reuse and means new blocks only need to be created when the trash list is empty. Some readers might recognize this as the Linked Allocation strategy described in The Art of Computer Programming: Volume 1, section 2.2.3!\n  The reason for using Linked Allocation is fundamentally that it\u2019s the most efficient for most operations. But also, it\u2019s the approach for allocating memory that\u2019s going to be most compatible with the cryptography we talk about in the next three sections.\n  Now that we\u2019ve talked about how files are broken into blocks and connected by a skip list, we can talk about how the data is actually protected. There are two aspects to this:\n The first is  confidentiality, which hides the contents of each block from the storage provider. This is achieved simply by encrypting each block with AES-GCM, with a key derived from the user\u2019s password.\n While simple, this scheme doesn\u2019t provide  forward secrecy or  post-compromise security. Forward Secrecy means that if the user\u2019s device was compromised, an attacker wouldn\u2019t be able to read deleted files. Post-Compromise Security means that once the user\u2019s device is no longer compromised, an attacker wouldn\u2019t be able to read new files. Unfortunately, providing either of these guarantees means storing cryptographic keys on the user\u2019s device that would need to be synchronized between devices and, if lost, would render the archive unreadable.\n This scheme also doesn\u2019t protect against  offline password cracking, because an attacker can take any of the encrypted blocks and keep guessing passwords until they find one that works. This is somewhat mitigated by using  Argon2, which makes guessing passwords more expensive, and by recommending that users choose strong passwords.\n I&#39;m definitely open to improving the encryption scheme in the future, but considered the security properties listed above too difficult and fragile for the initial release.\n  The second aspect of data protection is  integrity, which ensures the storage provider hasn\u2019t changed or deleted anything. This is achieved by building a Merkle Tree over the user\u2019s data. Merkle Trees are described in-depth in our  blog post about Certificate Transparency. The root hash of the Merkle Tree is associated with a version number that\u2019s incremented with each change, and both the root hash and the version number are authenticated with a key derived from the user\u2019s password. This data is stored in two places: under a special key in the object storage database, and in a file on the user\u2019s device.\n Whenever the user wants to read a block of data from the storage provider, they first request the root stored remotely and check that it\u2019s either the same as what they have on disk, or has a greater version number than what\u2019s on disk. Checking the version number prevents the storage provider from reverting the archive to a previous (valid) state undetected. Any data which is read can then be verified against the most recent root hash, which prevents any other types of modifications or deletions.\n Using a Merkle Tree here has the same benefit as it does for Certificate Transparency: it allows us to verify individual pieces of data without needing to download and verify  everything at once. Another common tool used for data integrity is called a Message Authentication Code (or MAC), and while it\u2019s a lot simpler and more efficient, it doesn\u2019t have a way to do only partial verification.\n The one thing our use of Merkle Trees doesn\u2019t protect against is  forking, where the storage provider shows different versions of the archive to different users. However, detecting forks would require some kind of gossip between users, which is beyond the scope of the initial implementation for now.\n  Oblivious RAM, or ORAM, is a cryptographic technique for reading and writing to random-access memory in a way that hides which operation was performed (a read, or a write) and to which part of memory the operation was performed, from the memory itself! In our case, the \u2018memory\u2019 is our object storage provider, which means we\u2019re hiding from them which pieces of data we\u2019re accessing and why. This is valuable for defending against  traffic analysis attacks, where an adversary with detailed knowledge of a system like UtahFS can look at the requests it makes, and infer the contents of encrypted data. For example, they might see that you  upload data at regular intervals and almost never  download, and infer that you\u2019re storing automated backups.\n The simplest implementation of ORAM would consist of always reading the entire memory space and then rewriting the entire memory space with all new values, any time you want to read or write an individual value. An adversary looking at the pattern of memory accesses wouldn\u2019t be able to tell which value you actually wanted, because you always touch everything. This would be incredibly inefficient, however.\n The construction we actually use, which is called  Path ORAM, abstracts this simple scheme a little bit to make it more efficient. First, it organizes the blocks of memory into a binary tree, and second, it keeps a client-side table that maps application-level pointers to random leafs in the binary tree. The trick is that a value is allowed to live in any block of memory that\u2019s on the path between its assigned leaf and the root of the binary tree.\n Now, when we want to lookup the value that a pointer goes to, we look in our table for its assigned leaf, and read all the nodes on the path between the root and that leaf. The value we\u2019re looking for should be on this path, so we already have what we need! And in the absence of any other information, all the adversary saw is that we read a random path from the tree.\n  However, we still need to hide whether we\u2019re reading or writing, and to re-randomize some memory to ensure this lookup can\u2019t be linked with others we make in the future. So to re-randomize, we assign the pointer we just read to a new leaf and move the value from whichever block it was stored in before to a block that\u2019s a parent of both the new and old leaves. (In the worst case, we can use the root block since the root is a parent of everything.) Once the value is moved to a suitable block and done being consumed/modified by the application, we re-encrypt all the blocks we fetched and write them back to memory. This puts the value in the path between the root and its new leaf, while only changing the blocks of memory we\u2019ve already fetched.\n  This construction is great because we\u2019ve only had to touch the memory assigned to a single random path in a binary tree, which is a logarithmic amount of work relative to the total size of our memory. But even if we read the same value again and again, we\u2019ll touch completely random paths from the tree each time! There\u2019s still a performance penalty caused by the additional memory lookups though, which is why ORAM support is optional.\n  Working on this project has been really rewarding for me because while a lot of the individual layers of the system seem simple, they\u2019re the result of a lot of refinement and build up into something complex quickly. It was difficult though, in that I had to implement a lot of functionality myself instead of reuse other people\u2019s code. This is because building end-to-end encrypted systems requires carefully integrating security into every feature, and the only good way to do that is from the start. I hope UtahFS is useful for others interested in secure storage.\n  UtahFS  Encryption  Storage", "posttime": "2020-06-09 19:42:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a0\u5bc6,encrypted,\u5b58\u50a8", "title": "UtahFS\uff1a\u52a0\u5bc6\u6587\u4ef6\u5b58\u50a8", "title_en": "UtahFS: Encrypted File Storage", "transed": 1, "url": "https://blog.cloudflare.com/utahfs/", "via": "", "real_tags": ["\u52a0\u5bc6", "encrypted", "\u5b58\u50a8"]}, {"category": "", "categoryclass": "", "imagename": "73da0e6186c2551cb2d1019c940bfb29.png", "infoid": 1005837, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b89\u4e1c\u5c3c\u5965\u00b7\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af(Antonio Garc\u00eda Mart\u00ednez)\u5728\u8fd9\u91cc\u53ea\u662f\u5728\u5f00\u73a9\u7b11\u3002\u6211\u4eec\u8ba4\u4e3a\u3002\u5728\u8fd9\u6bb5\u6458\u5f55\u4e2d\uff0c\u5b89\u4e1c\u5c3c\u5965\u00b7\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af(Antonio Garc\u00eda Mart\u00ednez)\u8bb2\u8ff0\u4e86\u4ed6\u6210\u7acb\u4e00\u5e74\u7684Y Combinator\u521d\u521b\u516c\u53f8\u60b2\u60e8\u7684\u9000\u51fa\u8fc7\u7a0b\uff0c\u8fd9\u672c\u4e66\u6539\u7f16\u81ea\u4ed6\u65b0\u8fd1\u51fa\u7248\u7684\u7845\u8c37\u56de\u5fc6\u5f55\u201c\u6df7\u6c8c\u7334\u5b50\u201d(Chaos Monkey)\u3002\u5f53\u6211\u4eec\u5f00\u59cb\u6211\u4eec\u7684\u53d9\u8ff0\u65f6\uff0c\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af\u662fAdGrok\u7684\u9996\u5e2d\u6267\u884c\u5b98\u548c\u975e\u5b98\u65b9\u7b56\u7565\u5e08\uff0cAdGrok\u5728\u63a8\u51fa\u540e\u5904\u4e8e\u201c\u7edd\u671b\u7684\u4f4e\u8c37\u201d\uff0c\u6536\u5165\u53ef\u89c2\u3002\u4ed6\u7684\u4e24\u4f4d\u8054\u5408\u521b\u59cb\u4eba\uff0c\u9a6c\u4fee\u00b7\u9ea6\u514b\u57c3\u741b(Matthew McEachen)\u548c\u963f\u76d6\u91cc\u65af\u00b7\u9f50\u59c6\u5c3c\u65af(Argyris Zymnis)\uff0c\u4e5f\u5c31\u662f\u201c\u7537\u5b69\u4eec\u201d(The Boys)\u63d0\u4f9b\u4e86\u8fd9\u9879\u5de5\u7a0b\u3002(\u4ed6\u4eec\u662f\u8fd9\u672c\u4e66\u7684\u7f57\u68ee\u5170\u8328\u548c\u5409\u5c14\u767b\u65af\u7279\u6069)\u8fd9\u91cc\u7684\u884c\u52a8\u53d1\u751f\u57284\u6708\u521d\uff0c\u4e0d\u5230\u4e24\u5468\u524d\uff0cTwitter\u8868\u793a\u6709\u5174\u8da3\u6536\u8d2dAdGrok\u3002\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af\u8fc5\u901f\u5bfb\u627e\u53e6\u4e00\u4e2a\u7ade\u6807\u8005\uff0c\u4ee5\u63d0\u9ad8Twitter\u7684\u51fa\u4ef7\uff0c\u5e76\u53ef\u80fd\u4ea7\u751f\u66f4\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u8fd9\u5c31\u662fFacebook\uff1a\u5728\u516c\u53f8\u53d1\u5c55\u4e3b\u7ba1\u963f\u660e\u00b7\u4f50\u65b9\u519c(Amin Zoufonoun)\u8868\u793a\u5174\u8da3\u540e\uff0cAdGrok\u4e09\u4eba\u524d\u5f80\u603b\u90e8\u8fdb\u884c\u4e86\u4e3a\u671f\u4e00\u5929\u7684\u91c7\u8bbf\u3002\u6211\u4eec\u7684\u53d9\u8ff0\uff0c\u4ee5\u6e38\u620f\u3001\u80cc\u53db\u548c\u7845\u8c37\u68a6\u60f3\u4e3a\u4e3b\u9898\uff0c\u53d6\u6750\u4e8e\u6b64\u3002\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af(Garc\u00eda Mart\u00ednez)\u7684\u4e66\u662f\u4e00\u79cd\u70e7\u6865\u7ec3\u4e60(\u6211\u5efa\u8bae\u4ed6\u79f0\u4e4b\u4e3a\u201c\u4f60\u518d\u4e5f\u4e0d\u4f1a\u5728\u8fd9\u4e2a\u5c0f\u9547\u5403(\u514d\u8d39)\u5348\u9910\u4e86\u201d)\uff0c\u4f46\u4ed6\u8bb2\u8ff0\u8fd9\u4e00\u4e8b\u4ef6\u7684\u5766\u7387\u8868\u660e\uff0c\u4ed6\u5728\u5ba1\u89c6\u81ea\u5df1\u7684\u884c\u4e3a\u65f6\u4e5f\u540c\u6837\u65e0\u60c5\u3002--\u53f2\u8482\u6587\u00b7\u5229\u7ef4\u3002\n\u4e00\u5343\u4e07\u7f8e\u5143\u3002Twitter\u6b63\u5f0f\u91cd\u8fd4\u8fd9\u573a\u6e38\u620f\u3002\u4ed6\u4eec\u7ec8\u4e8e\u5e26\u7740\u4e00\u4e2a\u771f\u6b63\u7684\u62a5\u4ef7\u56de\u6765\u4e86\u3002\u867d\u7136\u6211\u4eec\u8fd8\u6ca1\u6709\u770b\u5230\u6b63\u5f0f\u7684\u6761\u6b3e\u8bf4\u660e\u4e66-\u9b54\u9b3c\u7edd\u5bf9\u662f\u5728\u8fd9\u4e9b\u7ec6\u8282\u4e0a-\u4f46\u5f88\u660e\u663e\uff0cTwitter\u73b0\u5728\u6b63\u5904\u4e8e2011\u5e74\u79d1\u6280\u6ce1\u6cab\u7684\u7406\u667a\u72b6\u6001\u3002\u6211\u4eec\u7684\u963b\u6320\u884c\u52a8\u5f97\u5230\u4e86\u56de\u62a5\u3002\u5373\u4f7f\u662f\u6295\u8d44\u4eba\u514b\u91cc\u65af\u00b7\u8428\u5361\u548c\u6211\u4e5f\u4e0d\u80fd\u8bf4\u8fd9\u4e0d\u662f\u4e00\u4e2a\u8bf1\u4eba\u7684\u51fa\u4ef7\u3002\n\u5f53\u7535\u8bdd\u94c3\u54cd\u7684\u65f6\u5019\uff0c\u6211\u6b63\u9a91\u5f97\u7279\u522b\u9ad8\u3002\u201c\u4f60\u597d\uff0c\u5b89\u4e1c\u5c3c\u5965\uff01\u201d\u90a3\u662f\u4e0b\u53486\u70b9\u534a\uff0c\u8fd9\u662f\u671f\u5f85\u5df2\u4e45\u7684\u963f\u660e\u6253\u6765\u7684\u7535\u8bdd\uff0c\u62a5\u9053\u6211\u4eec\u5728Facebook\u63a5\u53d7\u76f4\u80a0\u75be\u75c5\u91c7\u8bbf\u7684\u90a3\u4e00\u5929\u3002\n\u5728\u4e9a\u4f26\u00b7\u7d22\u5c14\u91d1(Aaron Sorkin)\u6839\u636e\u8fd9\u4e2a\u6545\u4e8b\u6539\u7f16\u7684\u7535\u5f71\u4e2d\uff0c\u5c0f\u63d0\u7434\u4eec\u5c06\u4ece\u8fd9\u91cc\u5f00\u59cb\u53d1\u51fa\u7d27\u5f20\u7684\u54c0\u53f7\u3002\n\u201c\u6211\u5f88\u62b1\u6b49\u5730\u8bf4\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u63a8\u8fdbAdGrok\u7684\u4ea4\u6613\u3002\u5bf9\u963f\u76d6\u91cc\u65af\u548c\u9a6c\u7279\u7684\u53cd\u9988\u597d\u574f\u53c2\u534a\uff0c\u6211\u8ba4\u4e3a\u73b0\u5728\u8fd8\u4e0d\u80fd\u5f00\u59cb\u3002\u201c\u3002\n\u201c\u4e3a\u4e86AdGrok\u7684\u5229\u76ca\uff0c\u4f60\u80fd\u544a\u8bc9\u6211\u4e00\u4e9b\u53cd\u9988\u662f\u4ec0\u4e48\u5417\uff1f\u201d\u6211\u55b7\u4e86\u4e00\u4e0b\u3002\n\u963f\u660e\u6539\u53d8\u4e86\u4eba\u4eec\u4f7f\u7528\u7684\u7565\u5fae\u5b89\u9759\u548c\u7d27\u5f20\u7684\u9634\u8c0b\u8bba\u8bed\u6c14\uff0c\u5c31\u50cf\u8eb2\u5728\u704c\u6728\u4e1b\u91cc\u4e00\u6837\uff0c\u800c\u5b9e\u9645\u4e0a\u6211\u4ee5\u4e3a\u4ed6\u662f\u5728\u4e00\u4e2a\u5173\u7740\u95e8\u7684\u4f1a\u8bae\u5ba4\u91cc\u3002\u4ed6\u63a5\u7740\u505a\u4e86\u4e00\u4e9b\u65e0\u507f\u7684\u62d6\u62c9\u5de5\u3002\u963f\u76d6\u91cc\u65af\u672c\u6765\u662f\u6709\u53ef\u80fd\u8058\u7528\u7684\uff0c\u4f46\u9a6c\u7279\u80af\u5b9a\u4e0d\u4f1a\u3002\u663e\u7136\uff0cMRM\u662f\u4e00\u4f4d\u6709\u5929\u8d4b\u7684\u5de5\u7a0b\u5e08\uff0c\u4f46Facebook\u5bf9\u5de5\u7a0b\u4f1f\u5927\u6709\u7740\u975e\u5e38\u5177\u4f53\u7684\u6982\u5ff5\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u6a21\u7cca\u7684\u201c\u6587\u5316\u5951\u5408\u201d\u969c\u788d\u3002\n\u7ecf\u8fc7\u4e00\u5929\u7684\u91c7\u8bbf\u540e\uff0c\u6211\u66fe\u8bbe\u60f3MRM\u548cFacebook\u4f1a\u76f8\u5904\u5f97\u50cf\u4f2f\u514b\u5229\u7684\u5b09\u76ae\u58eb\u548c\u6d77\u519b\u9646\u6218\u961f\u4fa6\u5bdf\u5175\u72d9\u51fb\u624b\u4e00\u6837\u597d\uff0c\u6211\u662f\u5bf9\u7684\u3002\n\u4f5c\u4e3a\u4e00\u540d\u77f3\u6cb9\u4e1a\u5973\u6027\uff0c\u82f1\u56fd\u4ea4\u6613\u5458\u5b8c\u5168\u7f6e\u8eab\u4e8e\u79d1\u6280\u9886\u57df\u4e4b\u5916\uff0c\u5bf9\u9519\u7efc\u590d\u6742\u7684\u4e8b\u60c5\u77e5\u4e4b\u751a\u5c11\u3002\u4f46\u5979\u5bf9\u4e13\u4e1a\u80cc\u666f\u4e0b\u7684\u4eba\u6027\u6709\u7740\u7cbe\u660e\u7684\u7406\u89e3\u3002\u6b64\u5916\uff0c\u8003\u8651\u5230\u6211\u5b8c\u5168\u6ca1\u6709\u4eba\u7c7b\u7684\u754c\u9650\u6216\u9053\u5fb7\uff0c\u5979\u5bf9\u6211\u7684\u884c\u4e3a\u8fdb\u884c\u4e86\u4e3b\u6d41\u7684\u7406\u667a\u68c0\u67e5\u3002\n\u201c\u522b\u544a\u8bc9\u5b69\u5b50\u4eec\u3002\u8fd9\u53ea\u4f1a\u6467\u6bc1\u4ed6\u4eec\u7684\u4fe1\u5fc3\u3002\u4f60\u5fc5\u987b\u60f3\u51fa\u4e00\u4e9b\u529e\u6cd5\u6765\u7ba1\u7406\u5b83\u3002\u201c\u3002\n\u6211\u4eec\u6765\u56de\u8d70\u52a8\uff0c\u6211\u52fe\u52d2\u51fa\u66f4\u591a\u7ec6\u8282\uff0c\u5979\u5206\u4eab\u5979\u7684\u89c2\u70b9\u3002\n\u6211\u770b\u4e86\u770b\u624b\u8868\u3002\u51e0\u4e4e\u665a\u4e0a7\u70b9\u3002\u518d\u8fc7\u51e0\u5206\u949f\uff0c\u963f\u76d6\u91cc\u65af\u5c31\u4f1a\u50cf\u6295\u7bee\u4e00\u6837\u79bb\u5f00\uff0c\u4e0e\u5973\u53cb\u8f6c\u53d8\u4e3a\u59bb\u5b50\u7684\u897f\u59c6\u62c9\u5171\u5ea6\u7f8e\u597d\u65f6\u5149\u3002\u5982\u679c\u6211\u518d\u575a\u6301\u51e0\u5206\u949f\uff0c\u4ed6\u5c31\u4e0d\u5728\u529e\u516c\u5ba4\u4e86\uff0c\u6211\u5c31\u53ef\u4ee5\u4e0d\u7406\u776c\u7535\u5b50\u90ae\u4ef6\u91cc\u7684\u7537\u5b69\u4eec\uff0c\u6709\u4e00\u4e2a\u665a\u4e0a\u7684\u65f6\u95f4\u6765\u8003\u8651\u8fd9\u4ef6\u4e8b\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6570\u636e\u70b9\u7ed9\u4f60\uff1a\u4f5c\u4e3a\u6211\u4eec\u4e89\u53d6Facebook\u7684\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u51e0\u4e2a\u6708\u6765\u4e00\u76f4\u6536\u5230\u5173\u4e8e\u8be5\u516c\u53f8\u7684Google Alerts\u3002\u5176\u4e2d\u4e00\u4e2a\u7279\u522b\u5f15\u8d77\u4e86\u6211\u7684\u6ce8\u610f\u30022010\u5e7410\u6708\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u4e00\u4f4d\u6bcd\u4eb2\u6447\u6b7b\u4e86\u5979\u7684\u5a74\u513f\uff0c\u56e0\u4e3a\u5a74\u513f\u4f1a\u54ed\u7740\u6253\u65ad\u5979\u7684FarmVille\u6e38\u620f\u3002\u4e00\u4f4d\u6bcd\u4eb2\u4eb2\u624b\u6bc1\u6389\u4e86\u5979\u5343\u767e\u5e74\u6765\u88ab\u7f16\u7a0b\u8981\u7231\u7684\u4e1c\u897f\uff0c\u53ea\u662f\u4e3a\u4e86\u7ee7\u7eed\u56de\u590d\u7531\u67d0\u4e2a\u767d\u75f4\u6e38\u620f\u5f15\u53d1\u7684Facebook\u901a\u77e5\u3002\u90a3\u4e9b\u5bfc\u81f4\u6bcd\u4eb2\u4e3a\u4e86\u66f4\u591a\u4f7f\u7528\u5a74\u513f\u800c\u8c0b\u6740\u5a74\u513f\u7684\u4ea7\u54c1\uff0c\u5047\u8bbe\u5b83\u4eec\u662f\u5408\u6cd5\u7684\uff0c\u5728\u4e16\u754c\u4e0a\u662f\u4e0d\u53ef\u80fd\u5931\u8d25\u7684\u3002Facebook\u88ab\u5408\u6cd5\u5316\uff0c\u800c\u4e14\u662f\u5728\u4e92\u8054\u7f51\u89c4\u6a21\u4e0a\u3002\u8fd9\u6837\u7684\u516c\u53f8\u80af\u5b9a\u80fd\u60f3\u51fa\u5356\u978b\u7684\u529e\u6cd5\u3002\u63a8\u7279\u5f88\u53ef\u7231\uff0c\u4f46\u662f\u4e0d\u7ba1\u8fd9\u4e2aLady Gaga\u7684\u4eba\u53d1\u4e86\u591a\u5c11\u63a8\u7279\uff0c\u5b83\u8fd8\u6ca1\u6709\u4e00\u4e2a\u4f24\u4ea1\u7387\u3002\n\u4f46Twitter\u5df2\u7ecf\u63d0\u51fa\u4e86\u5bf9AdGrok\u7684\u53ef\u9760\u62a5\u4ef7\uff0c\u800cFacebook\u8fd8\u6ca1\u6709\u63d0\u51fa\u4efb\u4f55\u53ef\u9760\u7684\u62a5\u4ef7\u3002\n\u90a3\u4e9b\u6742\u4e71\u65e0\u7ae0\u7684\u6f6e\u4eba\uff0c\u6709\u7740\u6602\u8d35\u88c5\u9970\u7684\u529e\u516c\u5ba4\uff0c\u4ed6\u4eec\u7684\u81ea\u884c\u8f66\u67b6\u4e0a\u67091000\u7f8e\u5143\u7684\u56fa\u5b9a\u88c5\u7f6e\uff0c\u8fd8\u6709\u5931\u8d25\u9cb8\uff1f*\u8fd8\u662f\u90a3\u4e9b\u7a7f\u7740\u8fde\u5e3d\u886b\u3001\u6709\u7687\u5ba4\u547d\u4ee4\u7684\u5144\u5f1f\u4f1a\u7537\u5b69\uff0c\u4ed6\u4eec\u4e00\u8fb9\u5927\u4fbf\u4e00\u8fb9\u7f16\u7801\uff1f\u4f1a\u662f\u54ea\u4e00\u4e2a\u5462\uff1f\u6709\u6ca1\u6709\u53ef\u80fd\u4e24\u8005\u517c\u800c\u6709\u4e4b\u5462\uff1f\n\u7ba1\u7406Facebook\u548cTwitter\u4e4b\u95f4\u7684\u8054\u5408\u4ea4\u6613\u5c31\u50cf\u8bd5\u56fe\u5728\u65e9\u6cc4\u7684\u4eba\u548c\u51b7\u6f20\u7684\u5973\u4eba\u4e4b\u95f4\u8bbe\u8ba1\u540c\u6b65\u7684\u6027\u9ad8\u6f6e\uff1a\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff0c\u5145\u6ee1\u5371\u9669\uff0c\u9700\u8981\u975e\u5e38\u7a33\u5b9a\u7684\u624b\u3002\n\u6211\u4eec\u5750\u5728\u5357\u65b9\u516c\u56ed\u7684\u91ce\u9910\u684c\u65c1\uff0c\u7537\u5b69\u4eec\u5728\u6211\u5bf9\u9762\u30022006\u5e74\uff0c\u5728\u516c\u56ed\u7684\u4e00\u4e2a\u5e7b\u706f\u7247\u4e0a\u4e3e\u884c\u7684\u5934\u8111\u98ce\u66b4\u4f1a\u8bae\u4e0a\uff0cTwitter\u672c\u8eab\u5c31\u662f\u5728\u8fd9\u91cc\u6784\u601d\u51fa\u6765\u7684\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u8fd9\u4ef6\u4e8b\u4ee4\u4eba\u9707\u60ca\u3002\n\u5728\u5bf9\u7eff\u8272\u684c\u9762\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c34\u5c2c\u7684\u72b9\u8c6b\u4e0d\u51b3\u548c\u5927\u91cf\u60b2\u89c2\u7684\u7814\u7a76\u4e4b\u540e\uff0c\u6211\u4eec\u7ec8\u4e8e\u5f00\u59cb\u4ea4\u8c08\u4e86\u3002\u53ef\u80fd\u662f\u7b2c\u4e00\u6b21\uff0c\u6211\u544a\u8bc9\u5b69\u5b50\u4eec\uff0c\u81ea\u4ece\u4e00\u4e2a\u6708\u524d\u53d1\u5e03\u4ee5\u6765\uff0c\u6211\u4eec\u6ca1\u6709\u53d1\u8fd0\u4efb\u4f55\u4e1c\u897f\uff0c\u56e2\u961f\u6280\u672f\u65b9\u9762\u7684\u627f\u8bfa\u4f3c\u4e4e\u6b63\u5728\u51cf\u5f31\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u7b2c\u4e00\u6b21\u4e0e\u5b69\u5b50\u4eec\u6b63\u9762\u4ea4\u950b\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u7b2c\u4e00\u6b21\u9762\u5bf9\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6211\u4eec\u81ea\u4ece\u53d1\u5e03\u4ee5\u6765\u5c31\u6ca1\u6709\u53d1\u8d27\u3002\u8003\u8651\u5230AdGrok\u7684\u6280\u672f\u65b9\u9762\u548c\u5176\u4ed6\u4e00\u5207(\u5373\uff0c\u4ed6\u4eec\u548c\u6211\u4e4b\u95f4)\u4e4b\u95f4\u5076\u5c14\u4f1a\u6709\u4e00\u5835\u5899\uff0c\u6211\u60f3\u786e\u8ba4\u4ed6\u4eec\u4e5f\u6709\u540c\u6837\u7684\u611f\u89c9\u3002\nMRM\u672c\u4eba\u4f3c\u4e4e\u5df2\u7ecf\u9000\u623f\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u6709\u51e0\u5468\u6ca1\u6709\u5728\u65b0\u7684\u4ee3\u7801\u65b9\u9762\u4ea4\u4ed8\u4efb\u4f55\u4e1c\u897f\u4e86\u3002\u963f\u76d6\u91cc\u65af\u548c\u6211\u5df2\u7ecf\u804a\u8fc7\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u5728\u4ed6\u8fdf\u5230\u7684\u65e9\u4e0a\u6253\u7535\u8bdd\u7ed9\u4ed6\uff0c\u544a\u8bc9\u4ed6\u5feb\u53bbAdGrok\u3002Argyris\u575a\u6301\u81ea\u5df1\u7684\u76ee\u6807\uff0c\u4f46\u4e24\u4eba\u5df2\u7ecf\u5931\u53bb\u4e86\u4ece\u6211\u4eec\u7834\u65e7\u7684\u5c71\u666f\u57ce\u516c\u5bd3\u7684\u6700\u521d\u51e0\u5929\u8d77\u63a8\u52a8AdGrok\u53d1\u5c55\u7684\u90a3\u79cd\u7f8e\u5999\u7684\u5fc3\u7075\u878d\u5408\u7684\u540c\u6b65\u6027\u3002\u5f00\u53d1\u56e2\u961f\u662f\u4e00\u5bb6\u79d1\u6280\u516c\u53f8\u7684\u5f15\u64ce\u3002\u5982\u679c\u4ed6\u4eec\u505a\u5b8c\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u6b7b\u5728\u6c34\u91cc\u4e86\u3002\u5982\u679c\u5f15\u64ce\u4e0d\u80fd\u4fee\u590d\uff0c\u6062\u590d\u751f\u4ea7\u529b\uff0c\u90a3\u4e48\u5c31\u662f\u65f6\u5019\u8d81\u6211\u4eec\u8fd8\u53ef\u4ee5\u7684\u65f6\u5019\u5356\u6389\u516c\u53f8\u4e86\u3002\n\u6211\u4ece\u4e00\u4e2a\u770b\u5230\u53e6\u4e00\u4e2a\uff1a\u4ed6\u4eec\u770b\u8d77\u6765\u53c8\u7d2f\u53c8\u62c5\u5fc3\uff0c\u5df2\u7ecf\u73a9\u5b8c\u4e86\u521b\u4e1a\u6e38\u620f\u3002\u4ed6\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u6211\u4eec\u5e94\u8be5\u7ee7\u7eed\u8fdb\u884c\u6536\u8d2d\u8fc7\u7a0b\uff0c\u76f4\u5230\u5b8c\u6210\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u628aAdGrok\u5356\u7ed9Twitter\uff0c\u5426\u5219\u3002\n\u63a8\u7279\u7684\u6770\u897f\u5361\u00b7\u97e6\u91cc\u5229\u53d1\u9001\u4e86\u4e00\u5c01\u4e3b\u9898\u4e3a\u201c\u6765\u7535\u201d\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0e\u5979\u548c\u63a8\u7279\u526f\u603b\u88c1\u51ef\u6587\u00b7\u97e6\u5c14(Kevin Weil)\u5b89\u6392\u4e86\u4e00\u4e9b\u65f6\u95f4\u3002\n\u8bb0\u4f4f\uff1a\u5982\u679c\u4f60\u6709\u7535\u8bdd\uff0c\u4ea4\u6613\u4ecd\u7136\u6709\u6548\u3002\u7535\u8bdd\u662f\u201c\u662f\u201d\uff0c\u7535\u5b50\u90ae\u4ef6\u662f\u201c\u5426\u201d\u3002\n\u6770\u897f\u90a3\u4ee4\u4eba\u4fe1\u670d\u7684\u8bed\u6c14\u5728\u5f00\u59cb\u7684\u4e24\u79d2\u949f\u91cc\u5c31\u544a\u8bc9\u4e86\u6211\u9700\u8981\u77e5\u9053\u7684\u4e8b\u60c5\u3002Twitter\u8fd9\u6b21\u60f3\u8981\u771f\u6b63\u6536\u8d2dAdGrok\u3002\u5979\u7b54\u5e94\u572824\u5c0f\u65f6\u5185\u63d0\u4ea4\u4e00\u4efd\u6761\u6b3e\u8bf4\u660e\u4e66\u3002\u6211\u4eec\u4ee5\u524d\u4ece\u63a8\u7279\u4e0a\u542c\u8bf4\u8fc7\uff0c\u4f46\u8fd9\u4e00\u6b21\u6211\u76f8\u4fe1\u4e86\u4ed6\u4eec\u3002\u4e00\u4ef6\u5c0f\u9053\u6d88\u606f\u662f\uff1a\u6770\u897f\u56de\u4e86\u7535\u8bdd\uff0c\u8be2\u95ee\u6709\u5173\u5e3d\u5b50\u684c\u7684\u5177\u4f53\u60c5\u51b5\u3002\n\u201c\u4e0a\u9650\u8868\u201d\u662f\u8d44\u672c\u8868\uff0c\u8be6\u7ec6\u5217\u51fa\u4e86\u6bcf\u4e2a\u80a1\u6743\u6240\u6709\u8005(\u6295\u8d44\u8005\u3001\u521b\u59cb\u4eba\u6216\u5458\u5de5)\u4ee5\u53ca\u4ed6\u6216\u5979\u62e5\u6709\u591a\u5c11\u516c\u53f8\u80a1\u4efd\u3002\u5b83\u5927\u6982\u662f\u6240\u6709\u516c\u53f8\u91cc\u6700\u91cd\u8981\u7684\u6587\u4ef6\u3002\u90a3\u5f20\u684c\u5b50\u4e0a\u7684\u6bcf\u4e2a\u6210\u5458\u90fd\u4f1a\u77e5\u9053\u4ed6\u6216\u5979\u7684\u6570\u5b57\uff0c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5728\u4ed6\u4eec\u63d0\u51fa\u7684\u4ea4\u6613\u4e2d\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5728\u8003\u8651\u6295\u8d44\u8005\u548c\u521b\u59cb\u4eba\u7684\u5206\u79bb\uff0c\u8fd9\u662f\u66f4\u91cd\u8981\u7684\u9ad8\u5c42\u53c2\u6570\u4e4b\u4e00\u3002\n\u8be5\u662f\u8ddf\u5b69\u5b50\u4eec\u5766\u767d\u7684\u65f6\u5019\u4e86\u3002\u6211\u518d\u4e5f\u4e0d\u80fd\u4ece\u9053\u4e49\u4e0a\u8bc1\u660e\u8fd9\u79cd\u6b3a\u9a97\u662f\u6b63\u5f53\u7684\u4e86\u3002\n\u897f\u73ed\u7259\u98ce\u4fd7\u753b\u6709\u4e00\u79cd\u72ec\u7279\u7684\u98ce\u683c\uff0c\u53eb\u505aDesenga\u00f1o\u3002\u201cDesenga\u00f1o\u201d\u7684\u5b57\u9762\u610f\u601d\u662f\u201c\u4e0d\u800d\u82b1\u62db\u201d\uff0c\u6700\u597d\u7684\u7ffb\u8bd1\u662f\u201c\u5e7b\u60f3\u7834\u706d\u201d\uff0c\u6216\u8005\u662f\u63ed\u5f00\u4e00\u4e2a\u4e25\u9177\u4e8b\u5b9e\u7684\u9762\u7eb1\uff0c\u5bf9\u6b64\u558b\u558b\u4e0d\u4f11\u3002\u5728Desenga\u00f1o\u4e2d\uff0c\u5178\u578b\u7684\u63cf\u8ff0\u662f\u4eba\u7c7b\u80ae\u810f\u6b3a\u9a97\u7684\u65e5\u5e38\u63ed\u9732\uff1a\u4e00\u4e2a\u5e74\u8f7b\u4eba\u65e0\u610f\u4e2d\u53d1\u73b0\u4ed6\u5fc3\u7231\u7684\u4eba\u6b63\u5728\u548c\u4ed6\u6700\u597d\u7684\u670b\u53cb\u5583\u5583\u81ea\u8bed\uff0c\u4e00\u4e2a\u5546\u4eba\u6293\u4f4f\u4e86\u4ed6\u7684\u4f34\u4fa3\u4ece\u6536\u94f6\u53f0\u5077\u94b1\uff0c\u7b49\u7b49\u3002\u5b83\u4eec\u5e94\u8be5\u662f\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u4e00\u5802\u6709\u6559\u80b2\u610f\u4e49\u7684\u9053\u5fb7\u8bfe\uff0c\u63d0\u5347\u4e3a\u4e00\u79cd\u827a\u672f\u5f62\u5f0f\u3002Enga\u00f1ado(\u201c\u88ab\u9a97\u7684\u4eba\u201d)\u901a\u5e38\u4f1a\u5e26\u7740\u4e00\u79cd\u5938\u5f20\u7684\u80cc\u53db\u8868\u60c5\uff0c\u8fd1\u4e4e\u521a\u5f00\u59cb\u7684\u6124\u6012\u3002\u8a00\u4e0b\u4e4b\u610f\u662f\uff0c\u8fd9\u90e8\u5267\u7684\u4e0b\u4e00\u5e27\u5c06\u4ee5\u4e00\u4e9b\u7ea0\u6b63\u6027\u7684\u9053\u5fb7\u884c\u4e3a\u4e3a\u7279\u8272\uff0c\u6bd4\u5982\u7eb3\u74e6\u8d3e\u7684\u51b3\u6597\uff0c\u6216\u8005\u6234\u7740\u624b\u94d0\u7684\u5c0f\u5077\u5728\u8857\u4e0a\u8fdb\u884c\u7684\u53ef\u803b\u7684\u6e38\u884c\u3002\n\u6211\u5e0c\u671b\u90a3\u5929\u4e0b\u5348\u5728AdGrok\u529e\u516c\u5ba4\u5373\u5c06\u4e0a\u6f14\u7684\u573a\u666f\u4e0d\u503c\u5f97Vel\u00e1zquez\u5173\u6ce8\u3002\n\u201c\u563f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8c08\u8c08\uff0c\u201d\u6211\u80cc\u7740\u4ed6\u4eec\u8bf4\u3002\u4ed6\u4eec\u5e26\u7740\u597d\u5947\u7684\u795e\u60c5\u8f6c\u8fc7\u8eab\u6765\u3002\u8003\u8651\u5230\u6211\u4eec\u7ecf\u5386\u8fc7\u7684\u8d77\u8d77\u843d\u843d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u671f\u5f85\u4ece\u53e6\u4e00\u573a\u8bc9\u8bbc\u5230\u6211\u51fa\u67dc\u6210\u4e3a\u4e00\u4e2a\u6709\u62b1\u8d1f\u7684\u53d8\u6027\u4eba\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\n\u201c\u90a3\u4e48\uff0c\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7Facebook\u62d2\u7edd\u4e86\u6211\u4eec\u5417\uff1f\u55ef\uff0c\u8fd9\u5e76\u4e0d\u5b8c\u5168\u662f\u771f\u7684\u3002\u201c\u3002\n\u6211\u63a5\u7740\u52fe\u52d2\u51fa\u4e86\u5f53\u65f6\u7684\u60c5\u51b5\uff0c\u6211\u5728Facebook\u5de5\u4f5c\u7684\u5730\u65b9\uff0c\u4ee5\u53ca\u6211\u4e3a\u4ec0\u4e48\u5728\u8fc7\u53bb\u4e24\u5468\u91cc\u5bf9\u4ed6\u4eec\u9690\u7792\u4e86\u8fd9\u4ef6\u4e8b\u3002\n\u201c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u539f\u4ee5\u4e3aFacebook\u7684\u4e8b\u60c5\u53ef\u80fd\u6bd4\u4f60\u6240\u8bf4\u7684\u8981\u590d\u6742\u5f97\u591a\uff0c\u201d\u963f\u76d6\u91cc\u65af\u51fa\u5947\u5730\u5e73\u9759\u5730\u8bf4\u3002\n\u70b8\u5f39\u88ab\u62c6\u9664\uff0c\u6216\u8005\u81f3\u5c11\u8fd8\u6ca1\u6709\u5f15\u7206\uff0c\u6211\u5411\u4ed6\u4eec\u89e3\u91ca\u8bf4\uff0c\u6211\u8ba4\u4e3a\u6211\u7684\u672a\u6765\u53d6\u51b3\u4e8eFacebook\uff0c\u6211\u6709\u5145\u5206\u7684\u7406\u7531\u76f8\u4fe1-\u5728\u8fd9\u91cc\uff0c\u6211\u5982\u5c65\u8584\u51b0-\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8fbe\u6210\u4e00\u9879\u5408\u5e76\u4ea4\u6613\u3002\n\u8fd9\u4ef6\u4e8b\u8fdb\u884c\u5f97\u4e0d\u662f\u5f88\u987a\u5229\u3002\u7537\u5b69\u4eec\u60ca\u614c\u5931\u63aa\uff1b\u5982\u679cTwitter\u610f\u8bc6\u5230\u6211\u6ca1\u6709\u5f97\u5230\u540c\u6837\u7684\u597d\u5904\uff0c\u6211\u80af\u5b9a\u4f1a\u7834\u574f\u4ed6\u4eec\u7684\u4ea4\u6613\u3002\n\u4ed6\u4eec\u8bd5\u56fe\u8bf4\u670d\u6211\u575a\u6301\u4e0eTwitter\u7684\u534f\u8bae\uff0c\u4f46\u8fd9\u5c31\u50cf\u662f\u8bd5\u56fe\u8bf4\u670d\u4e00\u5934\u9aa1\u5b50\u8df3\u96f7\u683c\u987f\u821e\u3002\u6211\u6ca1\u6709\u6df1\u5165\u6316\u6398\uff0c\u4ee5\u5bf9\u7b49\u7684\u6311\u8845\u6765\u717d\u52a8\u5175\u53d8\uff0c\u800c\u662f\u7b80\u5355\u5730\u5c06Facebook\u63cf\u8ff0\u4e3a\u65e2\u6210\u4e8b\u5b9e\uff0c\u800c\u4e0d\u662f\u9700\u8981\u8fbe\u6210\u5171\u8bc6\u7684\u96c6\u4f53\u51b3\u5b9a\u3002\u4ed6\u4eec\u653e\u4e0b\u7bb1\u5b50\uff0c\u5782\u5934\u4e27\u6c14\u5730\u8f6c\u8fc7\u8eab\u6765\uff0c\u770b\u7740\u88ab\u4ee3\u7801\u6e85\u5f97\u5230\u5904\u90fd\u662f\u7684\u76d1\u89c6\u5668\u3002\n\u5728\u4e0eTwitter\u8fdb\u884c\u7b2c\u4e00\u6b21\u771f\u6b63\u7684\u4ea4\u6613\u8c08\u5224\u4e4b\u524d\uff0c\u6211\u4eec\u4e0d\u4f1a\u518d\u6b21\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u90a3\u4e4b\u524d\uff0c\u56f4\u7ed5\u5b83\u7684\u60ac\u5ff5\u6709\u70b9\u60ac\u800c\u672a\u51b3\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4f1a\u627e\u5230\u4e00\u4e9b\u65b9\u6cd5\uff0c\u8ba9\u7b80\u5355\u7684\u4e8b\u60c5\u53d8\u5f97\u590d\u6742\uff0c\u800c\u76f8\u5bf9\u5b89\u5168\u7684\u4e8b\u60c5\u53d8\u5f97\u6709\u98ce\u9669\u3002\n\u6539\u7f16\u81ea\u201c\u6df7\u6c8c\u7334\u5b50\uff1a\u7845\u8c37\u7684\u6deb\u79fd\u8d22\u5bcc\u548c\u968f\u673a\u5931\u8d25\u201d\uff0c\u5b89\u4e1c\u5c3c\u5965\u00b7\u52a0\u897f\u4e9a\u00b7\u9a6c\u4e01\u5185\u65af(Harper Collins)\u8457\u3002\u7167\u7247\u7531\u4f5c\u8005\u63d0\u4f9b\u3002\n2016\u5e74\u6700\u53d7\u6b22\u8fce\u7684\u6280\u672f\u4e66\u7c4d(\u7b2c\u4e8c\u90e8\u5206\u8fd9\u91cc\u6709\u53e6\u5916\u4e94\u672cBackchannel\u559c\u6b22\u7684\u4e66\uff0c\u4ee5\u53ca\u6bcf\u672c\u4e66\u7684\u8282\u9009\u3002\n2016\u5e74\u6700\u53d7\u6b22\u8fce\u7684\u79d1\u6280\u4e66\u7c4d(\u7b2c\u4e00\u90e8\u5206)\u4ee5\u4e0b\u662fBackchannel\u559c\u6b22\u7684\u4e66\u7c4d\uff0c\u4ee5\u53ca\u6bcf\u672c\u4e66\u7684\u8282\u9009\u3002", "note_en": "Antonio Garc\u00eda Mart\u00ednez is just kidding here. We think. In this excerpt adapted from his new, take-no-prisoners Silicon Valley memoir Chaos Monkeys, Antonio Garc\u00eda Mart\u00ednez explains the harrowing exit of his one-year-old Y Combinator startup company. As we begin our narrative, Garc\u00eda Mart\u00ednez is CEO and unofficial strategist of AdGrok, which is in the midst of the \u201ctrough of despair\u201d following launch and preceding significant revenues. His two co-founders, Matthew McEachen (MRM) and Argyris Zymnis, aka \u201cthe boys,\u201d provide the engineering. (They are the book\u2019s Rosencrantz and Guildenstern.)The action here takes place in early April, less than two weeks after Twitter showed interest in buying AdGrok. Garc\u00eda Mart\u00ednez quickly sought to find another bidder, to boost Twitter\u2019s offer and possibly produce a better alternative. That was Facebook: after interest from its head of corporate development Amin Zoufonoun, the AdGrok trio went to its headquarters for a day of interviewing. Our narrative, with themes of gamesmanship, betrayal, and the Silicon Valley dream, picks up from there.Garc\u00eda Mart\u00ednez\u2019s book is an exercise in bridge-burning (I suggested he call it \u201cYou\u2019ll Never Eat (Free) Lunch in This Town Again\u201d), but his candor in recounting this incident shows that he is just as merciless when examining his own behavior. \u2014 Steven Levy\n   Ten million dollars. Twitter was officially back in the game. They had finally come back with a real offer. While we hadn\u2019t seen a formal term sheet \u2014 and the devil was absolutely in those details \u2014 it was clear Twitter was now in the realm of 2011 tech-bubble (in)sanity. Our stonewalling had paid off. Even investor Chris Sacca and I couldn\u2019t claim this wasn\u2019t a tempting offer.\n I was riding that particular high when the phone rang. \u201cHello, Antonio!\u201d It was six thirty p.m., and this was the much-awaited phone call from Amin, reporting on our proctological day of interviews at Facebook.\n    In the Aaron Sorkin cinematic adaptation of this story, this is where the violins will start scraping their tension-building wail.\n \u201cI\u2019m sorry to say that we won\u2019t be moving forward with a deal for AdGrok. The feedback on Argyris and Matt was mixed, and I don\u2019t think it\u2019s a go right now.\u201d\n     \u201cIn the interests of AdGrok, can you tell me what some of the feedback was?\u201d I sputtered.\n  Amin changed to that slightly hushed and tense conspiratorial tone that people use, as if hiding in the bushes, when in fact I assumed he was in a closed-door conference room. He proceeded to do some pro bono  dragoman-ing. Argyris would have been a possible hire, but Matt was a definite no. Clearly MRM was a gifted engineer, but Facebook had very specific conceptions of engineering greatness. Also, there was a bit of that nebulous \u201ccultural fit\u201d blocking as well.\n After my day of interviews, I had imagined that MRM and Facebook would get along about as well as a Berkeley hippie and a Marine scout sniper, and I was right.\n \u201cSorry to hear that, Amin. Thanks for your time and that of everyone at Facebook.\u201d\n \u201cHold on. While that was the feedback for the engineers, the feedback for you was different. We want you to come and join the Facebook Ads team. Your feedback was excellent, and everyone really felt you were an extremely strong candidate.\u201d\n   My mind stuttered a bit on that one. When in doubt, act coy. \u201cWell. . . . Amin, as you can understand, I\u2019m somewhat committed to both AdGrok and this other deal we have. I\u2019ll have to think about this.\u201d\n \u201cThink about it. But again, we really want you to come to Facebook.\u201d\n I looked up suddenly toward our windowed office. I had isolated myself on our balcony in an obvious bid for privacy. Argyris was inside, looking at me with a worried frown. He wanted an answer as badly as I did. I raised two fingers and mouthed \u201ctwo minutes\u201d to indicate I\u2019d need a bit more time. He nodded, and went back to his screen.\n  What the fuck should I do? I couldn\u2019t tell the boys this, at least not yet.\n Stealthily, making it look like I was readjusting my phone, I hung up and dialed [my former girlfriend who I call] British Trader. While I had moved out a few months ago and we were officially apart, we were still regularly in touch. You don\u2019t just cut contact with the mother of your children, and besides, she still wanted to hear about the AdGrok saga.\n    \u201cSo, get this. Facebook doesn\u2019t want the boys, but they want me. Argyris is right here. I don\u2019t know what to do.\u201d\n As an oil woman, British Trader was completely outside the tech scene, and knew little about the intricacies. But she had a savvy read on human nature in a professional setting. Also, given that I was wholly devoid of most human boundaries or morality, she provided a mainstream sanity check on my actions.\n \u201cDon\u2019t tell the boys. It will just destroy their confidence. You\u2019ve got to figure out some way to manage it.\u201d\n We went back and forth, with me sketching out more details, and her sharing her take.\n   I looked at my watch. Almost seven p.m. In a few minutes, Argyris would be off like a shot to spend quality time with Simla, the girlfriend turned wife. If I held out for a few more minutes, he\u2019d be out of the office, and I could ignore the boys on email and have a night to think about it.\n Here\u2019s a data point for you: As part of our push to woo Facebook, I had been getting Google Alerts on the company for months. One in particular had caught my attention. In October 2010, a mother in Florida had shaken her baby to death, as the baby would interrupt her FarmVille games with crying. A mother destroyed with her own hands what she\u2019d been programmed over aeons to love, just to keep on responding to Facebook notifications triggered by some idiot game. Products that cause mothers to murder their infants in order to use them more, assuming they\u2019re legal, simply cannot fail in the world. Facebook was legalized crack, and at Internet scale. Such a company could certainly figure out a way to sell shoes. Twitter was cute and all, but it didn\u2019t have a casualty rate yet, no matter how much this Lady Gaga person was tweeting.\n   But Twitter had come up with the solid offer for AdGrok, while Facebook hadn\u2019t come up with a solid offer for anything yet.\n The shambolic hipsters with the expensively decorated offices, thousand-dollar fixies in their bike stand, and the Fail Whale?* Or the hoodie-wearing frat boys with an imperial mandate who coded while they shat? Which was it going to be? Could it possibly be both?\n  Managing a combined deal between Facebook and Twitter was like trying to engineer simultaneous orgasm between a premature ejaculator and a frigid woman: nigh impossible, fraught with danger, and requiring a very steady hand.\n  But here\u2019s a truth about tech life: anyone who claims the Valley is meritocratic is someone who has profited vastly from it via nonmeritocratic means like happenstance, membership in a privileged cohort, or some concealed act of absolute skulduggery. Since fortune had never been on my side, and I had no privileged cohort to fall back on, skulduggery it would have to be.\n As I would come to learn, my situation wasn\u2019t unusual, though not generally talked about. Companies with acquisition wherewithal and the nerve to use it bid for what they wanted in deals. You came in with your team and your product; they gave it the once-over, and said, \u201cWe want person A and B, but not C, and we don\u2019t care about the tech.\u201d They then offered you a lump sum for what they wanted, and you were left to double-deal, buy out, or otherwise fuck over whoever in order to get the deal done. The company \u2014 and places like Facebook and Google did this commonly \u2014 cared only about net price per engineer (or product person), not the absolute cost. And they certainly didn\u2019t care what investors got. Many an early-stage acquisition unfolded in this vulturelike way.\n ####  WEDNESDAY, APRIL 6, 2011I had decided to deceive my cofounders for the first time in our harried time together.\n As with many such lies, the rationalization was that it served the greater good. The boys were already stressed to the point of hyperventilation with all the shit we\u2019d been through, and now we were betting it all on this very flaky acquisition process that could collapse in an instant. If they realized that this Twitter process was truly do-or-die for them, they\u2019d choke. So what you do as a CEO is internalize that stress for the company and let it consume you instead of the rest.\n    What\u2019s more, it wasn\u2019t even clear the Facebook offer was for real. In God we trust, everyone else show me an offer letter. I had called them that morning and mentioned I found Facebook\u2019s interest flattering, but I needed to see an offer before I could even begin to manipulate the other side of the deal to spring me.\n   Part of any acquisition process is what\u2019s loosely called \u201cdue diligence.\u201d Taking both technical and legal forms, it\u2019s the snooping around an acquiring company does to make sure it\u2019s actually getting what it thinks it is. On the technical side, it means understanding the company\u2019s \u201cstack\u201d; that is, the pile of interrelated user interface and back-end server technologies that power the product. It might even be as detailed as line-by-line code reviews with the startup\u2019s engineers. You can fake a lot in a startup these days, what with Amazon Web Services and all sorts of off-the- shelf back-end components that let any even minimally competent duffer set up a Web app that does something. Intelligent planning for growth is rare among early startups, but it\u2019s the name of the game at a large, rapidly scaling tech company. Waiting for a team to grow from technical adolescence to mature talent was too long even for a larger company.\n As a first step, Twitter had invited us in as a group to talk technical turkey with a pack of engineers that reported to Kevin Weil. We spent a tense and wonky hour locked in a room with the senior engineers on the Twitter Ads team, walking them through our back-end stack that made AdGrok possible. I\u2019m using the corporate \u201cwe\u201d here, as it was completely the boys\u2019 show. It had been so long since I\u2019d even touched AdGrok code, there was little I could have said about it. While the meeting seemed to have gone well, the fact that we were going deeper in with Twitter underscored the fact that we were approaching a point of no return in terms of AdGrok investment.\n  \u201cLook, we\u2019ve got to figure out if we\u2019re selling or what,\u201d I said once we were out of earshot of the Twitter offices.\n  We were sitting at the picnic tables in South Park, the boys across from me. This was where Twitter itself was conceived in 2006, during a brainstorming session held on one of the park\u2019s slides. The irony was striking.\n After some awkward dithering, and lots of downcast study of the green tabletop, we finally got to talking. For probably the first time, I confronted the boys with the fact that we hadn\u2019t shipped anything since launch almost a month before, and that the commitment from the technical side of the team seemed to be waning. Given the occasional wall between the technical side of AdGrok and everything else (i.e., between them and me), I wanted to confirm that they also had the same vibe.\n  MRM himself seemed checked out and hadn\u2019t delivered anything on the new code front in weeks. Argyris and I had chatted about it, but so far all we\u2019d done was to call him the mornings he was late to tell him to get his ass to AdGrok. Argyris was holding up his end, but the two had lost that wonderful mind-meld synchrony that had powered AdGrok\u2019s development from the first days in our ratty Mountain View apartment. The dev team is the engine of a tech company. If they were done, then we were dead in the water. If that engine couldn\u2019t be fixed back into productivity, then it was time to sell the company while we even could.\n   I looked from one to the other: they seemed tired and worried and done with the startup game. They agreed we should pursue the acquisition process to its conclusion. We had to sell AdGrok to Twitter, or else.\n  Twitter\u2019s Jessica Verrilli sent an email, subject line: \u201cCall,\u201d to set up some time with her and Twitter VP Kevin Weil.\n   Remember: if you\u2019re having phone calls, the deal is still on. Phone calls are yesses, emails are nos.\n    Jess\u2019s persuasive tone told me what I needed to know in the first two seconds. Twitter wanted to buy AdGrok, for real this time. She promised a term sheet within twenty-four hours. We\u2019d heard this from Twitter before, but I believed them this time. One giveaway: Jess called back to ask specifics about the cap table.\n The \u201ccap table\u201d is the capitalization table, a list detailing each owner of equity (investor, founder, or employee) and how much of the company he or she owns. It\u2019s about the most important document at any company. Every member of that table will know his or her number down to the decimal. This meant they were already thinking about the investor versus founder split in their proposed deal, one of the more important high-level parameters.\n It was time to come clean with the boys. I couldn\u2019t morally justify the deception any longer.\n There\u2019s a unique style of Spanish genre painting called the  desenga\u00f1o. \u201c Desenga\u00f1o\u201d means literally \u201cun-tricking,\u201d and it is best translated as the disillusion, or the unveiling of a harsh truth, to be wordy about it. Typically depicted in the  desenga\u00f1o are the everyday reveals of sordid human deception: a young man stumbling on his beloved cooing with his best friend, a businessman catching his partner pinching from the till, and so on. They are meant to be an instructive moral lesson in everyday life, elevated to an art form. The  enga\u00f1ado (\u201ctricked one\u201d) typically wears an exaggerated expression of betrayal bordering on incipient rage. The implication is that the next frame in this drama will feature some corrective moral action, such as a duel to the death by  navaja, or an ignominious march through the streets by the manacled thief.\n   I was hoping the scene about to unfold in the AdGrok office that afternoon was not worthy of a Vel\u00e1zquez\u2019s attention.\n \u201cHey, so we need to have a chat,\u201d I said to their backs. They turned with quizzical looks. Given the ups and downs we\u2019d been through, they could expect anything from another lawsuit to my coming out as an aspiring transsexual.\n \u201cSo, remember when I said that Facebook rejected us? Well, that wasn\u2019t completely true.\u201d\n  I proceeded to sketch out the situation, where I was with Facebook, and why I had concealed this from them for the past two weeks.\n   \u201cYou know, I had kind of thought that maybe the Facebook thing was more complicated than you let on,\u201d said Argyris, surprisingly calmly.\n  Bomb defused, or at least not yet detonated, I explained to them that I thought my future lay with Facebook, and that I had every reason to believe \u2014 here I was skating on pretty thin ice \u2014 that we could pull off a combined deal if we tried.\n This did not go over so well. The boys panicked; surely I\u2019d torpedo their deal if Twitter realized it wasn\u2019t getting me as well.\n They tried to convince me to stick with the Twitter deal, but that was like trying to convince a mule to dance reggaet\u00f3n. Rather than dig in and fan the mutiny with reciprocal defiance, I simply presented Facebook as a fait accompli, and not a group decision requiring consensus. They dropped their case, and, with crestfallen looks, turned back to their code-splattered monitors.\n We wouldn\u2019t discuss the matter again until right before the first real deal negotiation with Twitter, and the suspense around it kind of hung in the air until then. As always, I\u2019d find some way to make the simple complicated, and the relatively safe, risky.\n    Adapted from  Chaos Monkeys: Obscene Fortune and Random Failure in Silicon Valley , by Antonio Garc\u00eda Mart\u00ednez (Harper Collins). Photos courtesy author.\n   The Top Tech Books of 2016 (Part II  Here are five more books that Backchannel loved, plus an excerpt from each.\n The Top Tech Books of 2016 (Part I)  Here are the books Backchannel loved, plus an excerpt from each.", "posttime": "2020-06-09 19:41:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u8054\u5408,company", "title": "\u6211\u5982\u4f55\u5c06\u6211\u7684\u516c\u53f8\u5356\u7ed9Twitter\uff0c\u53bbFacebook\uff0c\u7136\u540e\u641e\u7838\u4e86\u6211\u7684\u8054\u5408\u521b\u59cb\u4eba", "title_en": "How I Sold My Company to Twitter, Went to Facebook, and Screwed My Co-Founders", "transed": 1, "url": "https://www.wired.com/2016/06/how-i-sold-my-company-to-twitter-went-to-facebook-and-screwed-my-co-founders/", "via": "", "real_tags": ["facebook", "\u8054\u5408", "company"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005836, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Erlang\u662f\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u6211\u4e0d\u80fd\u5728\u4e00\u7bc7\u7b80\u77ed\u7684\u6587\u7ae0\u4e2d\u516c\u6b63\u5730\u63cf\u8ff0\u5b83\u7684\u5185\u90e8\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f46\u6211\u60f3\u6df1\u5165\u4e86\u89e3\u7f16\u8bd1\u548c\u52a0\u8f7d\u6a21\u5757\u65f6\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u4e0e\u5927\u591a\u6570\u7f16\u8bd1\u5668\u4e00\u6837\uff0c\u7b2c\u4e00\u6b65\u662f\u5c06\u6587\u672c\u6e90\u4ee3\u7801\u8f6c\u6362\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u4f46\u8fd9\u5e76\u4e0d\u91cd\u8981\u3002\u6709\u8da3\u7684\u662f\uff0c\u4ee3\u7801\u7ecf\u5386\u4e86\u4e09\u4e2a\u4e3b\u8981\u8868\u793a\u5f62\u5f0f\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6bcf\u4e00\u4e2a\u8868\u793a\u5f62\u5f0f\u3002\nErlang\u7684\u968f\u610f\u4f5c\u7528\u57df\u89c4\u5219\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u5f15\u5165\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u5927\u5f20\u65d7\u9f13\uff0c\u800c\u4e14\u6ca1\u6709\u663e\u5f0f\u4f5c\u7528\u57df\u9020\u6210\u7684\u7f13\u6162\u7f29\u8fdb\u3002\u5728\u5e55\u540e\uff0c\u8fd9\u592a\u79bb\u5947\u4e86\uff0c\u6240\u4ee5\u8bed\u6cd5\u6811\u88ab\u8f6c\u6362\u4e3aCore Erlang\u3002\u6838\u5fc3Erlang\u770b\u8d77\u6765\u5f88\u50cfHaskell\u6216ML\uff0c\u5728&#34\uff1blet&#34\uff1b\u8bed\u53e5\u4e2d\u4ed4\u7ec6\u5f15\u7528\u4e86\u6240\u6709\u53d8\u91cf\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528shell\u4e2d\u7684\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u6a21\u5757\u7684Core Erlang\u8868\u793a\uff1a\n\u4e0b\u4e00\u4e2a\u91cd\u5927\u8f6c\u53d8\u662f\u4eceCore Erlang\u5230\u57fa\u4e8e\u5bc4\u5b58\u5668\u7684BEAM\u865a\u62df\u673a\u7684\u4ee3\u7801\u3002BEAM\u7684\u6587\u6863\u5f88\u5c11\uff0c\u4f46\u5b83\u5f88\u50cf\u4e3aProlog\u5f00\u53d1\u7684Warren Abstract Machine(\u4f46\u4e0d\u9700\u8981\u56de\u6eaf)\u3002\u5982\u679c\u60a8\u7f16\u5199\u7b80\u77ed\u7684\u6a21\u5757\u5e76\u7528\u4ee5\u4e0b\u65b9\u5f0f\u68c0\u67e5\u5b83\u4eec\uff0cBEAM\u5e76\u4e0d\u662f\u5f88\u96be\u5f04\u6e05\u695a\uff1a\n\u793a\u4f8b\u6a21\u5757\u7684\u53cd\u6c47\u7f16BEAM\u4ee3\u7801\u7f16\u5199\u4e3aexample.S.\u3002\u7406\u89e3BEAM\u7684\u5173\u952e\u5728\u4e8e\u6709\u4e24\u7ec4\u5bc4\u5b58\u5668\uff1a\u4e00\u7ec4\u7528\u4e8e\u4f20\u9012\u53c2\u6570(&#34\uff1bx&34\uff1b\u5bc4\u5b58\u5668)\uff0c\u53e6\u4e00\u7ec4\u7528\u4f5c\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf(&#34\uff1by&#34\uff1b\u5bc4\u5b58\u5668)\u3002\n\u865a\u62df\u6ce2\u675f\u4ee3\u7801\u662f\u7f16\u8bd1\u5668\u7684\u6700\u7ec8\u8f93\u51fa\uff0c\u4f46\u5b83\u4ecd\u7136\u4e0d\u662f\u7cfb\u7edf\u6267\u884c\u7684\u4ee3\u7801\u3002\u5982\u679c\u60a8\u67e5\u770bErlang\u8fd0\u884c\u65f6\u7684\u6e90\u4ee3\u7801\uff0c\u60a8\u4f1a\u53d1\u73b0Beam_load.c\u67096000\u591a\u884c\u4ee3\u7801\u3002\u516d\u5343\u884c\u6765\u52a0\u8f7d\u4e00\u4e2a\u6a21\u5757\uff1f\u8fd9\u662f\u56e0\u4e3a\u5149\u675f\u52a0\u8f7d\u5668\u505a\u7684\u4e8b\u60c5\u6bd4\u5b83\u7684\u540d\u5b57\u900f\u9732\u7684\u66f4\u591a\u3002\n\u6709\u4e00\u4e2a\u865a\u62df\u673a\u6307\u4ee4\u7684\u4f18\u5316\u4f20\u9012\uff0c\u4e00\u4e9b\u4e13\u95e8\u7528\u4e8e\u67d0\u4e9b\u60c5\u51b5\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u7ec4\u5408\u6210\u8d85\u7ea7\u6307\u4ee4\u3002\u68c0\u67e5\u503c\u662f\u5426\u7531\u4e09\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u5143\u7ec4\u662f\u901a\u8fc7\u4e00\u5bf9\u6881\u64cd\u4f5c\u6765\u5b8c\u6210\u7684\uff1ais_tuple\u548cis_ality\u3002\u6ce2\u675f\u52a0\u8f7d\u5668\u5c06\u8fd9\u4e9b\u8f6c\u6362\u6210\u4e00\u6761\u8d85\u7ea7\u6307\u4ee4\uff1ais_tuple_of_ality\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u6881\u4ee3\u7801\u7684\u7b80\u5316\u8868\u793a\uff1a\n\u53cd\u6c47\u7f16\u4ee3\u7801\u5199\u5165example.dis\u3002(\u8bf7\u6ce8\u610f\uff0c\u5fc5\u987b\u52a0\u8f7d\u8be5\u6a21\u5757\uff0c\u56e0\u6b64\u5728\u53d1\u51fa\u4e0a\u8ff0\u547d\u4ee4\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u7f16\u8bd1\u3002)\u3002\n\u52a0\u8f7d\u5668\u8fd8\u5c06BEAM\u5b57\u8282\u7801\u8f6c\u6362\u4e3a\u7ebf\u7a0b\u4ee3\u7801\uff1a\u6309\u987a\u5e8f\u8df3\u8f6c\u5230\u7684\u5730\u5740\u5217\u8868\u3002\u73b0\u5728\u6211\u8be5\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u64cd\u4f5c\u7801\u5462\uff1f\u53ea\u9700\u6293\u53d6\u5e76\u8df3\u8f6c\uff0c\u6293\u53d6\u5e76\u8df3\u8f6c\u5373\u53ef\u3002\u5982\u679c\u60a8\u60f3\u66f4\u591a\u5730\u4e86\u89e3\u7ebf\u7a0b\u5316\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003Forth\u4e16\u754c\u3002\n\u7ebf\u7a0b\u5316\u4ee3\u7801\u5229\u7528\u6807\u7b7e\u4f5c\u4e3aGCC\u7684\u503c\u6269\u5c55\u3002\u5982\u679c\u60a8\u4f7f\u7528\u53e6\u4e00\u4e2a\u7f16\u8bd1\u5668(\u5982Visual C++)\u6784\u5efa\u675f\u6d41\u4eff\u771f\u5668\uff0c\u5b83\u5c06\u4f9d\u8d56\u4e8e\u4f7f\u7528\u5de8\u5927\u7684SWITCH\u8bed\u53e5\u8fdb\u884c\u6307\u4ee4\u5206\u6d3e\uff0c\u5e76\u4e14\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u91cd\u5927\u5f71\u54cd\u3002", "note_en": "Erlang is a complex system, and I can&#39;t do its inner workings justice in a short article, but I wanted to give some insight into what goes on when a module is compiled and loaded. As with most compilers, the first step is to convert the textual source to an abstract syntax tree, but that&#39;s unremarkable. What is interesting is that the code goes through three major representations, and you can look at each of them.\n Erlang is unique among functional languages in its casual scope rules. You introduce variables as you go, without fanfare, and there&#39;s no creeping indentation caused by explicit scopes. Behind the scenes that&#39;s too quirky, so the syntax tree is converted into Core Erlang. Core Erlang looks a lot like Haskell or ML with all variables carefully referenced in &#34;let&#34; statements. You can see the Core Erlang representation of a module with this command from the shell:\n   The next big transformation is from Core Erlang to code for the register-based BEAM virtual machine. BEAM is poorly documented, but it&#39;s a lot like the  Warren Abstract Machine developed for Prolog (but without the need for backtracking). BEAM isn&#39;t terribly hard to figure out if you write short modules and examine them with:\n  The disassembled BEAM code for the  example module is written to  example.S. The key to understanding BEAM is that there are two sets of registers: one for passing parameters (&#34;x&#34; registers) and one for use as locals within functions (&#34;y&#34; registers).\n Virtual BEAM code is the final output of the compiler, but it&#39;s still not what gets executed by the system. If you look at the source for the Erlang runtime, you&#39;ll see that  beam_load.c is over six thousand lines of code. Six thousand lines to load a module? That&#39;s because the beam loader is doing more than its name lets on.\n There&#39;s an optimization pass on the virtual machine instructions, specializing some for certain situations and combining others into superinstructions. To check if a value is a tuple of three elements is accomplished with a pair of BEAM operations:  is_tuple and  is_arity. The BEAM loader turns these into one superinstruction:  is_tuple_of_arity. You can see this condensed representation of BEAM code with:\n  The disassembled code is written to  example.dis. (Note that the module must be loaded, so compile it before giving the above command.)\n The loader also turns the BEAM bytecode into  threaded code: a list of addresses that get jumped to in sequence. There&#39;s no &#34;Now what do I do with this opcode?&#34; step, just fetch and jump, fetch and jump. If you want to to know more about threaded code, look to the  Forth world.\n Threaded code takes advantage of the  labels as values extension of gcc. If you build the BEAM emulator with another compiler like Visual C++, it falls back on using a giant  switch statement for instruction dispatch and there&#39;s a significant performance hit.", "posttime": "2020-06-09 19:24:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,\u4e86\u89e3,erlang,\u4ee3\u7801", "title": "\u6df1\u5165\u4e86\u89e3Erlang\u7f16\u8bd1\u5668(2012)", "title_en": "A Peek Inside the Erlang Compiler (2012)", "transed": 1, "url": "https://prog21.dadgum.com/127.html", "via": "", "real_tags": ["\u7f16\u8bd1", "\u4e86\u89e3", "erlang", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "484a2fb5fa82515791ee462c6ba8d818.png", "infoid": 1005835, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Coinbase\uff0c\u6211\u4eec\u5173\u5fc3\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\u3002\u968f\u7740\u6211\u4eec\u4ece\u4e00\u9879\u670d\u52a1\u6269\u5c55\u5230\u591a\u9879\u670d\u52a1\uff0c\u6211\u4eec\u5bf9\u5de5\u5177\u8fdb\u884c\u4e86\u6295\u8d44\uff0c\u8fd9\u4e9b\u5de5\u5177\u4f7f\u6211\u4eec\u6709\u4fe1\u5fc3\u5feb\u901f\u5c06\u65b0\u670d\u52a1\u4ea4\u4ed8\u751f\u4ea7\u3002\u50cf\u5176\u4ed6\u6210\u957f\u4e2d\u7684\u79d1\u6280\u516c\u53f8\u4e00\u6837\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u901a\u8fc7\u65b0\u7684\u5fae\u670d\u52a1\u6765\u6269\u5c55\u6211\u4eec\u66fe\u7ecf\u5355\u4e00\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u8fd9\u4e9b\u670d\u52a1\u5c01\u88c5\u4e86\u5b9a\u4e49\u660e\u786e\u7684\u4efb\u52a1\uff0c\u964d\u4f4e\u4e86\u6280\u672f\u503a\u52a1\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u884c\u52a8\u3002\u5f53\u6211\u4eec\u6cbf\u7740\u8fd9\u6761\u8def\u8d70\u4e0b\u53bb\u65f6\uff0c\u6211\u4eec\u7684DevOps\u56e2\u961f\u4e00\u76f4\u5728\u52aa\u529b\u4fdd\u6301\u8f83\u9ad8\u7684\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u3002\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u6570\u636e\u6765\u6307\u5bfc\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u73b0\u5728\u6211\u4eec\u5728\u8fd9\u91cc\u5206\u4eab\uff0c\u5e76\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002\u8fd9\u7bc7\u6587\u7ae0\u8ba9\u6211\u4eec\u4e00\u7aa5Coinbase\u90e8\u7f72\u80cc\u540e\u7684\u6570\u636e\uff0c\u4e5f\u662f\u6211\u4eec\u770b\u5f85\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n\u5728\u65e9\u671f\uff0cCoinbase\u5f88\u7b80\u5355\u3002\u5f53\u6211\u4eec\u57282015\u5e74\u521d\u9996\u6b21\u80fd\u591f\u6d4b\u91cf\u90e8\u7f72\u6570\u636e\u65f6\uff0c\u6211\u4eec\u53ea\u8fd0\u884c\u4e00\u9879\u751f\u4ea7\u670d\u52a1\uff1aCoinbase.com\u3002Coinbase\u662f\u4e00\u6b3eRails\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5728Heroku\u4e0a\u8fd0\u884c\u3002\u751f\u6d3b\u5f88\u7f8e\u597d\u3002\u90e8\u7f72\u662f\u4e00\u4e2a\u547d\u4ee4\uff0c\u6211\u4eec\u884c\u52a8\u8fc5\u901f\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u9879\u670d\u52a1\uff0c\u4e3a\u6211\u4eec\u4eca\u5929\u7684\u53d1\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002\n2015\u5e742\u6708\u5728Heroku\u4e0a\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u90e8\u7f72\u4e86120\u6b21\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u5c0f\u56e2\u961f\u4e2d\u90e8\u7f72\u9891\u7387\u6700\u9ad8\u7684\u524d3\u540d\u4eba\u5458\u5360\u6240\u6709\u751f\u4ea7\u90e8\u7f72\u768458%\u3002\u5f53\u65f6\u5de5\u7a0b\u5e08\u6bcf\u6708\u7684\u90e8\u7f72\u4e2d\u503c\u662f8\u6b21\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u770b\u5230\u6211\u4eec\u56e2\u961f\u7684\u4e00\u4e9b\u90e8\u7f72\u8d8b\u52bf\uff0c\u5bd2\u5047\u8fc7\u540e\u53c8\u56de\u6765\u4e86\uff0c\u4e00\u76f4\u6301\u7eed\u52302015\u5e74\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u4eec\u53ea\u8861\u91cf\u6211\u4eec\u5728Heroku\u7684\u90e8\u7f72\u60c5\u51b5\u3002(\u867d\u7136\u6211\u4eec\u57282015\u5e742\u6708\u63a8\u51fa\u4e86\u540e\u6765\u6210\u4e3aGDAX\u7684\u670d\u52a1\uff0c\u4f46\u5b83\u7684\u65e9\u671f\u90e8\u7f72\u6ca1\u6709\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u4e2d\u8861\u91cf)\u3002\n\u968f\u77402015\u5e74\u7684\u5230\u6765\uff0c\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u53d1\u751f\u4e86\u4e24\u5927\u53d8\u5316\u3002\u6211\u4eec\u7684\u5b89\u5168\u548c\u5408\u89c4\u6027\u9700\u6c42\u4e0d\u65ad\u589e\u957f\uff0c\u4ee5\u52a0\u901f\u6211\u4eec\u8fc1\u79fb\u5230\u66f4\u5b89\u5168\u7684\u73af\u5883(\u6211\u4eec\u9009\u62e9\u4e86AWS)\uff0c\u6211\u4eec\u5f00\u59cb\u4e3a\u652f\u6301GDAX\u7684\u5206\u5e03\u5f0f\u67b6\u6784\u521b\u5efa\u65b0\u670d\u52a1\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u8bbe\u8ba1\u5e76\u5f00\u59cb\u90e8\u7f72\u5230\u65b0\u7684\u4e91\u57fa\u7840\u8bbe\u65bd\u4e2d\uff0c\u4ee5\u5b89\u5168\u5730\u63d0\u4f9b\u591a\u79cd\u670d\u52a1\u3002\u6211\u4eec\u9996\u5148\u90e8\u7f72\u4e86GDAX\u548cCoinbase\uff0c\u968f\u540e\u5f88\u5feb\u4e5f\u90e8\u7f72\u4e86GDAX\u548cCoinbase\u3002\n\u6211\u4eec\u9700\u8981\u8d4b\u4e88\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u884c\u52a8\u7684\u80fd\u529b\uff0c\u540c\u65f6\u63d0\u4f9b\u7cfb\u7edf\u5b89\u5168\u53ef\u9760\u7684\u4fe1\u5fc3\u3002\n\u5f53\u6211\u4eec\u8bbe\u8ba1\u65b0\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u4f7f\u5176\u53ef\u8bbf\u95ee\u7684\u90e8\u7f72\u7ba1\u9053\u65f6\uff0c\u6211\u4eec\u52aa\u529b\u6539\u8fdb\u7684\u5173\u952e\u6307\u6807\u4e4b\u4e00\u662f\u90e8\u7f72\u901f\u5ea6\uff0c\u5373\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5b89\u5168\u5730\u4ea4\u4ed8\u751f\u4ea7\u7684\u9891\u7387\u3002\u968f\u7740\u8f6f\u4ef6\u7ee7\u7eed\u541e\u566c\u4e16\u754c\uff0c\u50cfdocker\u8fd9\u6837\u7684\u516c\u53f8\u6b63\u5728\u52aa\u529b\u4f7f\u4e92\u8054\u7f51\u53d8\u5f97\u53ef\u7f16\u7a0b\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u6709\u80fd\u529b-\u9664\u975e\u6709\u4ec0\u4e48\u4e1c\u897f\u963b\u788d\u4e86\u4ed6\u4eec\u3002\u5f53\u57fa\u7840\u8bbe\u65bd\u89c4\u6a21\u6269\u5927\u548c\u5f00\u53d1\u56e2\u961f\u901f\u5ea6\u51cf\u6162\u65f6\uff0c\u516c\u53f8\u4f1a\u51fa\u73b0\u51e0\u79cd\u6545\u969c\u60c5\u51b5\u3002\u9ad8\u7d20\u8d28\u7684\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a\u53bb\u4e00\u4e2a\u66f4\u6709\u80fd\u529b\u7684\u73af\u5883\uff0c\u4f4e\u603b\u7ebf\u56e0\u7d20\u53ef\u80fd\u4f1a\u7ed9\u60a8\u7559\u4e0b\u96be\u4ee5\u7406\u89e3\u7684\u670d\u52a1\uff0c\u6216\u8005\u4e00\u4e2a\u8003\u8651\u4e0d\u5468\u7684\u4f53\u7cfb\u7ed3\u6784\u53ef\u80fd\u4f1a\u4f7f\u9519\u8bef\u66f4\u96be\u8ffd\u8e2a\u3002\u6309\u7167\u6211\u4eec\u884c\u4e1a\u7684\u53d1\u5c55\u901f\u5ea6\uff0c\u62d6\u6162\u516c\u53f8\u7684\u53d1\u5c55\u901f\u5ea6\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u6211\u4eec\u9700\u8981\u8d4b\u4e88\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u884c\u52a8\u7684\u80fd\u529b\uff0c\u540c\u65f6\u63d0\u4f9b\u7cfb\u7edf\u5b89\u5168\u53ef\u9760\u7684\u4fe1\u5fc3\u3002\n\u6211\u4eec\u52aa\u529b\u6539\u8fdb\u7684\u5173\u952e\u6307\u6807\u4e4b\u4e00\u662f\u90e8\u7f72\u901f\u5ea6\uff0c\u5373\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5b89\u5168\u5730\u4ea4\u4ed8\u751f\u4ea7\u7684\u9891\u7387\u3002\n\u4e3a\u4e86\u5728\u8d4b\u4e88\u5de5\u7a0b\u5e08\u6743\u529b\u548c\u7ba1\u7406\u5b89\u5168\u6027\u7684\u540c\u65f6\u4fdd\u6301\u8f83\u9ad8\u7684\u90e8\u7f72\u901f\u5ea6\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u65b0\u7684\u90e8\u7f72\u7cfb\u7edf\uff1aCodeflow\u3002\n\u4ece2015\u5e746\u6708\u52307\u6708\uff0c\u6211\u4eec\u5f00\u59cb\u4f7f\u7528Codeflow\u81ea\u884c\u90e8\u7f72Codeflow\uff0c\u5e76\u5c06GDAX\u548cCoinbase\u8fc1\u79fb\u5230\u6211\u4eec\u5728AWS\u4e2d\u7684\u65b0\u90e8\u7f72\u6e20\u9053\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u5f00\u59cb\u8ba9\u66f4\u591a\u7684\u5de5\u7a0b\u56e2\u961f\u6210\u5458\u767b\u4e0aCodeflow\u3002\u5728\u7ed9\u4e88\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u5feb\u901f\u884c\u52a8\u6240\u9700\u7684\u4fe1\u5fc3\u7684\u540c\u65f6\uff0c\u6211\u4eec\u52aa\u529b\u9f13\u52b1\u66f4\u591a\u7684\u4eba\u66f4\u9891\u7e41\u5730\u5b89\u5168\u90e8\u7f72\u3002\u6211\u4eec\u4e3a\u4fdd\u6301\u9ad8\u90e8\u7f72\u901f\u5ea6\u6240\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\u5305\u62ec\uff1a\n\u5171\u8bc6\uff1a\u6ca1\u6709\u4e00\u4e2a\u4eba(\u6216\u6545\u969c\u70b9)\u53ef\u4ee5\u5bf9\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\u505a\u51fa\u4efb\u4f55\u6539\u53d8\uff0c\u4f46\u4e0e\u4e0d\u540c\u7a0b\u5ea6\u7684\u5171\u8bc6\u4e00\u8d77\uff0c\u5de5\u7a0b\u5e08\u4eec\u88ab\u8d4b\u4e88\u4e86\u5feb\u901f\u884c\u52a8\u7684\u80fd\u529b\u3002\n\u5b89\u5168\u90e8\u7f72\uff1a\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u603b\u662f\u5b89\u5168\u7684\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u968f\u65f6\u91cd\u65b0\u90e8\u7f72\u4efb\u4f55\u670d\u52a1\u3002\u6211\u4eec\u4f9d\u9760\u670d\u52a1\u7ea7\u522b\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u6765\u786e\u4fdd\u7cfb\u7edf\u5728\u84dd/\u7eff\u90e8\u7f72\u5b8c\u6210\u4e4b\u524d\u6b63\u5e38\u8fd0\u884c\u3002\u5176\u4ed6\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5982\u9632\u6b62\u90e8\u7f72\u65e7\u7684\u6216\u4e0d\u5b89\u5168\u7684\u63d0\u4ea4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u4e86\u90e8\u7f72\u59cb\u7ec8\u5b89\u5168\u7684\u53ef\u80fd\u6027\u3002\u5982\u679cDeploy\u6309\u94ae\u4e3a\u7eff\u8272\uff0c\u5219\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5355\u51fb\u5b83\u3002\n\u5165\u804c\uff1a\u5bf9\u4e8e\u4efb\u4f55\u6709\u81ea\u6211\u610f\u8bc6\u7684\u65b0\u5458\u5de5\u6765\u8bf4\uff0c\u90e8\u7f72\u5230\u751f\u4ea7\u4e2d\u542c\u8d77\u6765\u90fd\u5f88\u53ef\u6015\uff0c\u6240\u4ee5\u6211\u4eec\u9f13\u52b1\u65b0\u5de5\u7a0b\u5e08\u5728\u7b2c\u4e00\u5929\u5c31\u90e8\u7f72coinbase.com\u3002\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u8fd9\u6837\u505a\u662f\u5b89\u5168\u7684\u3002\n\u5b89\u5168\u7ba1\u9053\uff1a\u5728\u63d0\u4ea4\u53ef\u90e8\u7f72\u6216\u90e8\u7f72\u5b8c\u6210\u4e4b\u524d\uff0c\u591a\u5c42\u5185\u8054\u5b89\u5168\u626b\u63cf\u4e3a\u5df2\u77e5\u6216\u53ef\u80fd\u7684\u5b89\u5168\u95ee\u9898\u63d0\u4f9b\u5c3d\u53ef\u80fd\u5feb\u7684\u53cd\u9988\u3002\n\u5931\u8d25\uff1a\u90e8\u7f72\u603b\u662f\u5931\u8d25\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u5f3a\u8c03\u8fd9\u6c38\u8fdc\u4e0d\u662f\u90e8\u7f72\u8005\u7684\u9519\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u770b\u770b\u5982\u4f55\u4ece\u4e8b\u540e\u603b\u7ed3\u4e2d\u5438\u53d6\u6559\u8bad\uff0c\u5e76\u901a\u8fc7\u66f4\u597d\u7684\u81ea\u52a8\u5316\u6765\u9632\u6b62\u8fd9\u79cd\u5931\u8d25\u518d\u6b21\u53d1\u751f\u3002\n\u6709\u4e86\u5171\u8bc6\uff0c\u6ca1\u6709\u4eba\u80fd\u5bf9\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\u505a\u51fa\u4efb\u4f55\u6539\u53d8\uff0c\u4f46\u5de5\u7a0b\u5e08\u4eec\u53ef\u4ee5\u4e00\u8d77\u5feb\u901f\u884c\u52a8\u3002\nCodeflow\u5bf9\u6211\u4eec\u90e8\u7f72\u901f\u5ea6\u7684\u5f71\u54cd\u7acb\u7aff\u89c1\u5f71\uff1a\u5c3d\u7ba1\u6211\u4eec\u63d0\u9ad8\u4e86\u8fdb\u5165\u66f4\u5b89\u5168\u4e91\u7684\u6e20\u9053\u7684\u5b89\u5168\u6027\u548c\u63a7\u5236\u529b\uff0c\u4f46\u4ece6\u52307\u6708\uff0c\u6211\u4eec\u7684\u90e8\u7f72\u6570\u91cf\u589e\u52a0\u4e86450%\uff0c\u4ece128\u6b21\u589e\u52a0\u5230580\u6b21\u3002\u8fd9\u8fdc\u8fdc\u76d6\u8fc7\u4e86\u6211\u4eec\u5de5\u7a0b\u56e2\u961f\u5728\u90a3\u51e0\u4e2a\u6708\u91cc\u5927\u7ea630%\u7684\u89c4\u6a21\u589e\u957f\uff0c\u662f\u6211\u4eec\u5de5\u4f5c\u6b63\u5728\u52a0\u5feb\u516c\u53f8\u901f\u5ea6\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u6807\u3002\n\u968f\u7740\u6211\u4eec\u670d\u52a1\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u6211\u4eec\u7684\u5931\u8d25\u7387\u4e5f\u5728\u589e\u52a0\u3002\u90e8\u7f72\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u591a\u79cd\uff0c\u65e2\u6709\u597d\u7684\uff0c\u4e5f\u6709\u574f\u7684\u3002\u597d\u7684\u5931\u8d25\u53ef\u80fd\u4f1a\u4fdd\u62a4\u6211\u4eec\u514d\u53d7\u91cd\u5927\u66f4\u6539\u6216\u6027\u80fd\u5f71\u54cd\uff0c\u4f7f\u5176\u65e0\u6cd5\u6295\u5165\u751f\u4ea7\uff0c\u4f46\u5176\u4ed6\u9519\u8bef\u6216\u9519\u8bef\u914d\u7f6e\u53ef\u80fd\u4f1a\u964d\u4f4e\u90e8\u7f72\u901f\u5ea6\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u4eec\u901a\u8fc7\u6539\u8fdb\u81ea\u52a8\u5316\u6765\u51cf\u5c11\u6545\u969c\u3002\u5f53\u6211\u4eec\u57287\u6708\u4efd\u5f00\u59cb\u901a\u8fc7Codeflow\u90e8\u7f72\u6211\u4eec\u6240\u6709\u7684\u670d\u52a1\u65f6\uff0c\u6211\u4eec\u8fbe\u5230\u4e8627%\u7684\u90e8\u7f72\u5931\u8d25\u7684\u5cf0\u503c\u3002\u968f\u7740\u6211\u4eec\u63d0\u9ad8\u4e86\u90e8\u7f72\u5f39\u6027\uff0c\u5e76\u589e\u52a0\u4e86\u5bf9\u5de5\u7a0b\u5e08\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u7684\u65e9\u671f\u53cd\u9988\uff0c\u6211\u4eec\u5df2\u5c06\u6545\u969c\u7387\u964d\u81f3\u7ea615%\uff0c\u5e76\u4e14\u4ecd\u5728\u6539\u8fdb\u3002\n\u968f\u7740\u56e2\u961f\u5f00\u59cb\u4fe1\u4efb\u8fd9\u4e2a\u65b0\u7684\u6e20\u9053\uff0c\u6211\u4eec\u5f00\u59cb\u901a\u8fc7\u5f15\u5165\u65b0\u670d\u52a1\u6765\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5f00\u53d1\u901f\u5ea6\u3002\u968f\u7740\u6211\u4eec\u7684\u53cd\u6b3a\u8bc8\u3001\u5b89\u5168\u3001\u5f00\u53d1\u8fd0\u8425\u3001\u4ea7\u54c1\u56e2\u961f\u4e0d\u65ad\u6269\u5927\uff0c\u8fd9\u4e9b\u670d\u52a1\u5305\u62ec\u66f4\u597d\u5730\u5c01\u88c5\u73b0\u6709\u529f\u80fd\u548c\u5168\u65b0\u7684\u5185\u90e8\u548c\u5916\u90e8\u4ea7\u54c1\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u770b\u5230\u6211\u4eec\u7684\u670d\u52a1\u7684\u5168\u9762\u589e\u957f\uff0c\u76ee\u524d\u5df2\u8fbe\u523082\u9879\u3002\u5305\u62ec\u5728\u8fd9\u4e9b\u65b0\u670d\u52a1\u4e2d\u7684\u662f\u5168\u65b0\u7684\u652f\u4ed8\u548c\u94b1\u5305\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u73b0\u5728\u53ef\u4ee5\u6545\u610f\u4ee5\u6bd4\u9762\u5411\u672a\u6765\u7684\u4ea7\u54c1\u66f4\u4e25\u683c\u7684\u65b9\u5f0f\u53d1\u5c55\u3002\n\u81ea\u4ece\u8fc1\u79fb\u5230\u6211\u4eec\u7684\u65b0\u90e8\u7f72\u6e20\u9053\u4ee5\u6765\uff0c\u6211\u4eec\u73b0\u5728\u6709\u66f4\u591a\u7684\u4eba\u81ea\u4fe1\u5730\u90e8\u7f72\u66f4\u591a\u7684\u670d\u52a1\uff0c\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9891\u7e41\u3002\u5728\u6211\u4eec\u8fd0\u884c\u81ea\u5df1\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u524d\uff0c\u6bcf\u4e2a\u5de5\u7a0b\u5e08\u6bcf\u6708\u90e8\u7f72\u7684\u4e2d\u4f4d\u6570\u662f8\u6b21\u3002\u5728\u8fc1\u79fb\u5230Codeflow\u4e4b\u540e\uff0c\u8fd9\u4e00\u6570\u5b57\u589e\u957f\u523011\u6b21\uff0c\u73b0\u5728\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u6bcf\u6708\u90e8\u7f72\u7684\u4e2d\u4f4d\u6570\u662f16\u6b21\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u56fe\u8868\uff0c\u5176\u4e2d\u7a81\u51fa\u663e\u793a\u4e86\u6211\u4eec\u90e8\u7f72\u6700\u9891\u7e41\u7684\u524d5\u540d\u5de5\u7a0b\u5e08\u7684\u90e8\u7f72\u60c5\u51b5\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u9ad8\u6548\u6269\u5c55\u7684\u57fa\u7840\uff0c\u6211\u4eec\u9762\u4e34\u7740\u65b0\u7684\u6311\u6218\u3002\u4f7f\u7528\u91cf\u7684\u663e\u8457\u589e\u957f\u6b63\u5728\u5bf9\u6211\u4eec\u7684\u7cfb\u7edf\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\uff0c\u4ee5\u524d\u7684\u5c0f\u89c4\u6a21\u7cfb\u7edf\u73b0\u5728\u9700\u8981\u65b0\u7684\u4f18\u5316\u6765\u652f\u6301\u6211\u4eec\u7684\u8d1f\u8f7d\u3002\u5c55\u671b\u4e0b\u4e2a\u5b63\u5ea6\uff0c\u6211\u4eec\u6b63\u81f4\u529b\u4e8e\u63d0\u9ad8\u6211\u4eec\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u9760\u6027\u3001\u5de5\u4f5c\u6d41\u7a0b\u548c\u5f39\u6027\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u60f3\u8981\u5206\u4eab\u66f4\u591a\u5173\u4e8e\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u548c\u901f\u5ea6\u7684\u4fe1\u606f\u5417\uff1f\u6211\u4eec\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u7075\u611f\u6765\u81ea\u4e8eDevOps\u7684\u5e74\u5ea6\u72b6\u51b5\u62a5\u544a\uff0c\u6211\u4eec\u5f88\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u60a8\u7684\u56e2\u961f\u5982\u4f55\u4fdd\u6301\u9ad8\u6548\u7684\u4fe1\u606f\u3002\n\u5982\u679c\u60a8\u6709\u5174\u8da3\u8ba9\u5f00\u53d1\u4eba\u5458\u5728\u4e00\u4e2a\u5f88\u597d\u7684\u73af\u5883\u4e2d\u5feb\u901f\u884c\u52a8\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u4e0e\u60a8\u5408\u4f5c\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u62db\u8058\u5404\u79cd\u5de5\u7a0b\u5e08\u804c\u4f4d\u3002\n\u611f\u8c22\u683c\u96f7\u5384\u59c6\u3001\u6770\u514b\u3001\u5362\u514b\u3001\u8428\u7d22\u3001\u6770\u91cc\u7c73\u548c\u5e03\u83b1\u6069\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff01", "note_en": "At Coinbase we care about developer productivity. As we\u2019ve scaled from a single service to many, we\u2019ve invested in tools that give us the confidence to rapidly ship new services to production. Like other growing technology companies we\u2019ve been scaling our once monolithic infrastructure through new microservices that encapsulate well defined tasks, buy-down technical debt and help us move fast. As we\u2019ve gone down this path our DevOps team has worked to maintain high developer productivity. We\u2019ve used data to guide our work that we\u2019re now sharing here and hope more people will too. This post takes a glimpse into the data behind deployments at Coinbase and one way we think about developer productivity.\n In the early days, Coinbase was simple. When we were first able to measure deployment data in early 2015 we ran one production service:  coinbase.com. Coinbase is a rails app and we ran on Heroku. Life was good. Deployments were one command, we moved fast and we built a service that laid the foundation for where we are today.\n  While running on Heroku in February 2015, we deployed 120 times and our top 3 most frequent deployers on a small team accounted for 58% of all deploys to production. At the time the median deployments per month for an engineer was 8. You can see some of our team\u2019s deployment trends below coming back after winter holidays and ramping up into 2015. Throughout this period, we are only measuring our deployments to Heroku. (Though we launched the service that would become GDAX in February 2015, its early deploys aren\u2019t measured in this dataset).\n  With 2015 came two big changes to our infrastructure. Our security and compliance needs grew to accelerate our migration into a more secure environment (we  chose AWS) and we started creating new services for the distributed architecture that would power  GDAX. To meet both of these goals we designed and started deploying into new cloud infrastructure to securely many services. We started by deploying GDAX and Coinbase soon followed suit.\n We need to empower developers to move fast yet provide confidence that systems are safe and secure.\n As we designed our new infrastructure and the deployment pipeline that made it accessible, one of the key metrics that we worked to improve was  deployment velocity or how often developers were able to safely ship to production. As software continues to  eat the world and companies like docker work towards  making the internet programmable, developers  can be more empowered than ever \u2014 unless something is standing in their way. There are several failure scenarios for the company when infrastructures scale and development teams slow down. High quality engineers might leave for a more empowering environment, low bus factors can leave you with poorly understood services or a poorly thought out architecture might make bugs exponentially more difficult to track down. At the pace our industry evolves, slowing the company down wasn\u2019t acceptable. We need to empower developers to move fast yet provide confidence that systems are safe and secure.\n One of the key metrics that we worked to improve was  deployment velocity or how often developers were able to safely ship to production.\n To maintain a high rate of deployment while both empowering engineers and managing security, we designed our new deployment system: Codeflow.\n  From June to July of 2015, we started self-deploying Codeflow with Codeflow and migrated both GDAX and then Coinbase into our new deployment pipeline in AWS. At the same time, we started to onboard more of the engineering team onto Codeflow. In giving our engineers the confidence they needed to move fast, we worked to encourage more people to safely deploy more often. Some of the things we do that allow us to maintain high deployment velocity include:\n Consensus: no single person (or point of failure) can make any changes to our production environment, but together with varying degrees of consensus, engineers are empowered to move fast.\n Safe Deploys: deploying to production is always safe. Anyone can redeploy any service at any time. We rely on service level health checks to make sure systems are acting normally before a blue/green deploy completes. Other heuristics like preventing the deploy of old or unsafe commits maximize the probability the deploys are always safe. If the deploy button is green, anyone can click it.\n Onboarding: Deploying to production sounds scary to any self-aware new hire, so we encourage new engineers to deploy coinbase.com on their first day. We want everyone to know this is a safe thing to do.\n Security Pipeline : Several layers of inline security scanning provide the fastest possible feedback for known or likely security issues,  before a commit is made deployable or a deploy completes.\n Failures: Deployment will always fail. When that happens, we\u2019re quick to reinforce that it\u2019s never the fault of the deployer. Instead, we look at how we can learn from our post-mortems and prevent that failure from occurring again with better automation.\n With consensus, no single person can make any changes to our production environment, but together, engineers are empowered to move fast.\n The impact Codeflow had on our deployment velocity was immediately obvious: despite increasing the security and controls of our pipeline into a more secure cloud, we increased our number of deployments 450% from 128 to 580 from June to July. This far out shadowed the ~30% increase in the size of our engineering team in those months and was a good indicator that our work was increasing the company\u2019s velocity.\n  As our complexity of services grew, so too did our rate of failure. Deploys can fail for a variety of reasons that can be both good and bad. Good failures might protect us from a breaking change or performance hit from going out into production but others stemming from bugs or poor configuration can hurt deployment velocity. Over the last year we\u2019ve invested in reducing failures through improved automation. As we started to deploy all of our services through Codeflow in July we peaked at 27% of all deployments failing. As we\u2019ve improved our deployment resilience and increased early feedback on possible issues to engineers, we\u2019ve since brought our failure rate down to ~15% and are still improving.\n  As the team came to trust this new pipeline we began to further increase developer velocity through the introduction of new services. These services included better encapsulation of existing functionality and completely new products, both internal and external, as our anti-fraud, security, devops, product teams continued to scale. You can see the full growth of our services below, now up to 82 today. Included in these new services are brand new payment and wallet services that can now intentionally evolve with much more rigor than forward facing products.\n  Since migrating into our new deployment pipeline we now have more people confidently deploying more services more frequently than ever. Before we ran our own Infrastructure our median monthly deployments per engineer was 8. After our migration to Codeflow that grew to 11 and we\u2019re now up to a median of 16 deploys per developer per month. You can see a chart of that below, where you can see the deployment of our top-5 most frequently deploying engineers highlighted.\n  Now that we have the foundation to scale productively, we\u2019re facing new challenges. Significant growth in usage is stress testing our systems and previously small-scale systems now need new optimizations to support our load. Looking ahead to the next quarter we\u2019re working on improving our reliability, workflow and resilience of our infrastructure without compromising developer productivity.\n Want to share more on developer productivity and velocity? We were inspired to write this by the annual  State Of DevOps Report and would love to hear more about how your team is staying productive.\n If you\u2019re interested in empowering developers to move fast in a great environment, we\u2019d love to work with you. We\u2019re hiring for a variety of engineering roles  here.\n Thanks to  Graham,  Jack,  Luke,  Saso,  Jeremy, and  Brian for helping to make this possible!", "posttime": "2020-06-09 19:24:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u53ef\u4f38\u7f29\u6027,developer,\u90e8\u7f72", "title": "Coinbase\u7684\u53ef\u4f38\u7f29\u6027\u548c\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b", "title_en": "Scaling and Developer Productivity at Coinbase", "transed": 1, "url": "https://blog.coinbase.com/scaling-developer-productivity-d23ce491f869", "via": "", "real_tags": ["\u5f00\u53d1", "\u53ef\u4f38\u7f29\u6027", "developer", "\u90e8\u7f72"]}, {"category": "", "categoryclass": "", "imagename": "0058383b157d7c4f7e1da37985b1b679.png", "infoid": 1005833, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u53f0\u72ec\u7279\u7684\u53d1\u52a8\u673a\u6b63\u5728\u4e3a\u4e00\u4e2a\u504f\u8fdc\u7684\u83f2\u5f8b\u5bbe\u5c9b\u5c7f\u63d0\u4f9b\u52a8\u529b", "note_en": "A Unique Engine Is Bringing Power to a Remote Philippine Island", "posttime": "2020-06-09 18:51:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u4f9b,startups,\u5c9b\u5c7f", "title": "\u4ee5\u8272\u5217\u542f\u52a8\u72ec\u7279\u7684\u53d1\u52a8\u673a\u4e3a\u83f2\u5f8b\u5bbe\u504f\u8fdc\u5c9b\u5c7f\u63d0\u4f9b\u52a8\u529b", "title_en": "Israeli Startups Unique Engine Bringing Power to a Remote Philippine Island", "transed": 1, "url": "https://www.bloombergquint.com/markets/a-unique-engine-is-bringing-power-to-a-remote-philippine-island", "via": "", "real_tags": ["\u63d0\u4f9b", "startups", "\u5c9b\u5c7f"]}, {"category": "", "categoryclass": "", "imagename": "e7e49567d75cd8d266643cdfb3f9839c.png", "infoid": 1005832, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CapRover\u662f\u4e00\u4e2a\u6781\u5176\u6613\u4e8e\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f/\u6570\u636e\u5e93\u90e8\u7f72&amp\uff1bWeb\u670d\u52a1\u5668\u7ba1\u7406\u5668\uff0c\u9002\u7528\u4e8eNodeJS\u3001Python\u3001PHP\u3001ASP.NET\u3001Ruby\u3001MySQL\u3001MongoDB\u3001Postgres\u3001WordPress(\u7b49\u7b49)\u3002\u7533\u8bf7\uff01\n\u5b83\u7684\u8fd0\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u800c\u4e14\u975e\u5e38\u5065\u58ee\uff0c\u5728\u5176\u7b80\u5355\u6613\u7528\u7684\u754c\u9762\u80cc\u540e\u4f7f\u7528\u4e86Docker\u3001nginx\u3001LetsEncrypt\u548cNetData\u3002\u7528\u4e8e\u81ea\u52a8\u5316\u548c\u7f16\u5199\u811a\u672c\u7684\u2714\u547d\u4ee4\u884c\u754c\u9762\u2714\u7f51\u7edc\u56fe\u5f62\u7528\u6237\u754c\u9762\uff0c\u53ef\u8f7b\u677e\u8bbf\u95ee\u548c\u65b9\u4fbf\u2714\uff0c\u65e0\u9700\u9501\u5b9a\uff01\u79fb\u9664CapRover\uff0c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u8fd0\u884c\uff01\u5e55\u540e\u7684\u2714\u6587\u6863\u7fa4\u7ec4\u53ef\u5b9e\u73b0\u5bb9\u5668\u5316\u548c\u7fa4\u96c6\u2714nginx(\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u6a21\u677f)\uff0c\u5e76\u53ef\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u2714\u8ba9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u5e55\u540e\u52a0\u5bc6\u4ee5\u83b7\u5f97\u514d\u8d39\u7684ssl(HTTPS)\u3002\n\u6211\u4e0d\u559c\u6b22\u82b1\u8d39\u6570\u5c0f\u65f6\u548c\u6570\u5929\u7684\u65f6\u95f4\u6765\u8bbe\u7f6e\u670d\u52a1\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001\u5411\u670d\u52a1\u5668\u53d1\u9001\u4ee3\u7801\u3001\u6784\u5efa\u5b83\u3001\u83b7\u53d6SSL\u8bc1\u4e66\u3001\u5b89\u88c5\u5b83\u3001\u53cd\u590d\u66f4\u65b0nginx\u3002\n\u4f7f\u7528\u6602\u8d35\u7684\u670d\u52a1\uff0c\u5982Heroku\u3001Microsoft Azure\u7b49\uff0c\u5e76\u5e0c\u671b\u5c06\u5176\u6210\u672c\u964d\u4f4e\u5230\u539f\u6765\u76841/4(Heroku\u76841 GB\u5b9e\u4f8b\u6bcf\u6708\u6536\u8d3925\u7f8e\u5143\uff0c\u5728DigitalOcean\u4e0a\u540c\u6837\u7684\u670d\u52a1\u5668\u6536\u8d395\u7f8e\u5143\uff01)\u3002\n\u66f4\u559c\u6b22\u7f16\u5199\u66f4\u591a\u7684showResults(getUserList())\uff0c\u800c\u4e0d\u662f\u592a\u591a\u7684apt-get install libstdc++6&&gt;\uff1b/dev/null\u3002\n\u4eab\u53d7\u4e00\u4e2a\u5728\u5176\u670d\u52a1\u5668\u4e0a\u5b89\u88c5MySQL\u3001MongoDB\u7b49\u7684\u5e73\u53f0\uff0c\u65b9\u6cd5\u662f\u4ece\u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u5e76\u5355\u51fbInstall\uff01\n\u559c\u6b22\u4eab\u53d7Docker\u548cnginx\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u5b66\u4e60\u5b83\u4eec\u6216\u5904\u7406\u5b83\u4eec\u7684\u8bbe\u7f6e\u811a\u672c\u6765\u4f7f\u4e8b\u60c5\u6b63\u5e38\u5de5\u4f5c\uff01\uff01\n\u5bf9Docker\u548cnginx\u4e86\u5982\u6307\u638c\uff0c\u5e76\u4e14\u559c\u6b22\u5728\u5176\u4e2d\u6267\u884c\u57fa\u672c\u64cd\u4f5c\u7684\u5e73\u53f0\uff0c\u5e76\u4e14\u5141\u8bb8\u4ed6\u4eec\u5728\u9700\u8981\u65f6\u81ea\u5b9a\u4e49\u4efb\u4f55\u7279\u5b9a\u8bbe\u7f6e\u3002\n\u80fd\u591f\u901a\u8fc7HTTPS\u514d\u8d39\u4fdd\u62a4\u60a8\u7684\u670d\u52a1\uff0c\u80fd\u591f\u81ea\u52a8\u5c06HTTP\u91cd\u5b9a\u5411\u5230HTTPS\u3002\n\u90e8\u7f72\u4e00\u952e\u5f0f\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u51e0\u79d2\u949f\uff01MongoDB\u3001Parse\u3001MySQL\u3001WordPress\u3001Postgres\u7b49\u7b49\u3002\n\u6709\u591a\u79cd\u90e8\u7f72\u65b9\u5f0f\uff1a\u4ece\u4eea\u8868\u677f\u4e0a\u4f20\u6e90\u6587\u4ef6\u3001\u4f7f\u7528\u547d\u4ee4\u884ccaprover\u90e8\u7f72\u3001\u4f7f\u7528webhooks\u548c\u57fa\u4e8egit\u63a8\u9001\u6784\u5efa\u3002\n\u754c\u9762\u7b80\u5355\uff0c\u53ef\u8fdb\u884c\u591a\u79cd\u7801\u5934\u64cd\u4f5c\uff1a\u5411\u4e3b\u673a\u516c\u5f00\u5bb9\u5668\u7aef\u53e3\u3001\u8bbe\u7f6e\u6301\u4e45\u76ee\u5f55\u3001\u5b9e\u4f8b\u8ba1\u6570\u7b49\u3002\n\u53ef\u9009\u62e9\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684nginx\u914d\u7f6e\uff0c\u5141\u8bb8\u60a8\u542f\u7528HTTP2\u3001\u7279\u5b9a\u7684\u7f13\u5b58\u903b\u8f91\u3001\u81ea\u5b9a\u4e49SSL\u8bc1\u4e66\u7b49\u3002\n\u8fde\u63a5\u66f4\u591a\u8282\u70b9\uff0c\u5e76\u5728\u51e0\u79d2\u949f\u5185\u521b\u5efa\u4e00\u4e2a\u7fa4\u96c6\uff01CapRover\u81ea\u52a8\u914d\u7f6enginx\u4ee5\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002", "note_en": "CapRover is an extremely easy to use app/database deployment &amp; web server manager for your  NodeJS,  Python,  PHP,  ASP.NET,  Ruby,  MySQL,  MongoDB,  Postgres,  WordPress (and etc...) applications!\n It&#39;s blazingly fast and veryrobust asit uses Docker, nginx, LetsEncrypt and NetData under the hood behind its simple-to-use interface.   \u2714  CLI for automation and scripting  \u2714  Web GUI for ease of access and convenience  \u2714  No lock-in! Remove CapRover and your apps keep working!  \u2714  Docker Swarm under the hood for containerization and clustering  \u2714  Nginx (fully customizable template) under the hood for load-balancing  \u2714  Let&#39;s Encrypt under the hood for free SSL (HTTPS)\n    does not like spending hours and days setting up a server, build tools, sending code to server, build it, get an SSL certificate, install it, update nginx over and over again.\n uses expensive services like Heroku, Microsoft Azure and etc. And is interested in reducing their cost by 4x (Heroku charges 25$/month for their 1gb instance, the same server is 5$ on DigitalOcean!!)\n prefers to write more of  showResults(getUserList()) and not much of  apt-get install libstdc++6 &gt; /dev/null\n enjoys a platform where installing MySQL, MongoDB and etc on their server is done by selecting from a dropdown and clicking on install!\n likes to enjoy the power of Docker and nginx without having to learn them or deal with their settings scripts to make things work!!\n knows Docker and nginx inside out, and enjoys a platform where basic operations are done, yet allowing them to customize any specific settings if they need to\n  Ability to secure your services over HTTPS for FREE, ability to automatically redirect HTTP to HTTPS.\n Deploying one-click apps is a matter of seconds! MongoDB, Parse, MySQL, WordPress, Postgres and many more.\n Many ways to deploy: upload your source from dashboard, use command line  caprover deploy, use webhooks and build upon  git push\n Simple interface for many docker operations: exposing container ports to host, setting up persistent directories, instance count and etc.\n Optionally fully customizable nginx config allowing you to enable HTTP2, specific caching logic, custom SSL certs and etc.\n Attach more nodes and create a cluster in seconds! CapRover automatically configures nginx to load balance.", "posttime": "2020-06-09 18:50:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6784\u5efa,paas", "title": "\u5728\u51e0\u5206\u949f\u5185\u6784\u5efa\u60a8\u81ea\u5df1\u7684PaaS", "title_en": "Build your own PaaS in minutes", "transed": 1, "url": "https://caprover.com/", "via": "", "real_tags": ["\u6784\u5efa", "paas"]}, {"category": "", "categoryclass": "", "imagename": "876312673ce5a4490986e2600f825379.jpg", "infoid": 1005831, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd8\u53ef\u4ee5\u770b\u770b\u6211\u4eec2011\u5e74\u30012012\u5e74\u30012013\u5e74\u30012014\u5e74\u30012015\u5e74\u30012016\u5e74\u548c2017\u5e74\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u699c\u5355\u3002\u597d\u597d\u4eab\u53d7\u5427\u3002", "note_en": "Check out our  2011,  2012,  2013,  2014,  2015,  2016, and  2017 Florida lists as well. Enjoy.", "posttime": "2020-06-09 18:49:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "hope,\u4f5b\u7f57\u91cc\u8fbe\u5dde", "title": "\u4eba\u7c7b\u6ca1\u6709\u5e0c\u671b", "title_en": "No Hope for Humanity", "transed": 1, "url": "https://www.buzzfeed.com/mjs538/crazy-florida-headlines-2018", "via": "", "real_tags": ["hope", "\u4f5b\u7f57\u91cc\u8fbe\u5dde"]}]