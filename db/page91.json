[{"category": "", "categoryclass": "", "imagename": "0da981326371a74e9f24e8b539b5ce39.jpeg", "infoid": 1006958, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u8868\u793a\u7406\u8bba\u572819\u4e16\u7eaa\u672b\u51fa\u73b0\u65f6\uff0c\u8bb8\u591a\u6570\u5b66\u5bb6\u8d28\u7591\u5b83\u7684\u4ef7\u503c\u30021897\u5e74\uff0c\u82f1\u56fd\u6570\u5b66\u5bb6\u5a01\u5ec9\u00b7\u4f2f\u6069\u8d5b\u5fb7(William Burnside)\u5199\u9053\uff0c\u4ed6\u6000\u7591\u8fd9\u79cd\u975e\u6b63\u7edf\u7684\u89c2\u70b9\u4f1a\u4ea7\u751f\u4efb\u4f55\u65b0\u7684\u7ed3\u679c\u3002\n\u6089\u5c3c\u5927\u5b66\u6559\u6388\u4e54\u6cbb\u5a01\u5ec9\u59c6\u68ee(Geordie Williamson)\u57282015\u5e74\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u8868\u793a\uff1a\u201c\u57fa\u672c\u4e0a(\u4f2f\u6069\u8d5b\u5fb7\u5f53\u65f6\u7684\u610f\u601d)\u662f\uff0c\u4ee3\u8868\u6743\u7406\u8bba\u6beb\u65e0\u7528\u5904\u3002\u201d\n\u4e00\u4e2a\u591a\u4e16\u7eaa\u4ee5\u6765\uff0c\u8868\u793a\u7406\u8bba\u4e00\u76f4\u662f\u8bb8\u591a\u6700\u91cd\u8981\u7684\u6570\u5b66\u53d1\u73b0\u7684\u5173\u952e\u56e0\u7d20\u3002\u7136\u800c\uff0c\u5b83\u7684\u7528\u5904\u4e00\u5f00\u59cb\u4ecd\u7136\u5f88\u96be\u5bdf\u89c9\u3002\n\u5fb7\u56fd\u51ef\u6cfd\u65af\u52b3\u6ed5\u6280\u672f\u5927\u5b66\u7684\u827e\u7c73\u4e3d\u00b7\u8bfa\u987f\u6559\u6388\u8bf4\uff1a\u201c\u73b0\u5728\u4f3c\u4e4e\u8fd8\u4e0d\u6e05\u695a\u8fd9\u662f\u4e0d\u662f\u4e00\u4ef6\u5408\u7406\u7684\u7814\u7a76\u3002\u201d\n\u8868\u8c61\u7406\u8bba\u662f\u4e00\u79cd\u628a\u590d\u6742\u7684\u7269\u4f53\u7528\u66f4\u7b80\u5355\u7684\u7269\u4f53\u201c\u8868\u73b0\u201d\u51fa\u6765\u7684\u65b9\u6cd5\u3002\u590d\u6742\u7684\u5bf9\u8c61\u901a\u5e38\u662f\u6570\u5b66\u5bf9\u8c61\u7684\u96c6\u5408-\u4f8b\u5982\u6570\u5b57\u6216\u5bf9\u79f0-\u5b83\u4eec\u5f7c\u6b64\u4e4b\u95f4\u5177\u6709\u7279\u5b9a\u7684\u7ed3\u6784\u5316\u5173\u7cfb\u3002\u8fd9\u4e9b\u96c6\u5408\u79f0\u4e3a\u7ec4\u3002\u66f4\u7b80\u5355\u7684\u5bf9\u8c61\u662f\u79f0\u4e3a\u77e9\u9635\u7684\u6570\u5b57\u6570\u7ec4\uff0c\u5b83\u662f\u7ebf\u6027\u4ee3\u6570\u7684\u6838\u5fc3\u5143\u7d20\u3002\u867d\u7136\u7ec4\u662f\u62bd\u8c61\u7684\uff0c\u901a\u5e38\u5f88\u96be\u638c\u63e1\uff0c\u4f46\u77e9\u9635\u548c\u7ebf\u6027\u4ee3\u6570\u662f\u57fa\u672c\u7684\u3002\n\u201c\u6570\u5b66\u5bb6\u57fa\u672c\u4e0a\u77e5\u9053\u5173\u4e8e\u77e9\u9635\u7684\u4e00\u5207\u3002\u8fd9\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u51e0\u95e8\u88ab\u5f7b\u5e95\u7406\u89e3\u548c\u7406\u89e3\u7684\u6570\u5b66\u79d1\u76ee\u4e4b\u4e00\u3002\u201c\u6ce2\u58eb\u987f\u5927\u5b66\u6559\u6388\u8d3e\u91cc\u5fb7\u00b7\u6e29\u65af\u5766(Jared Weinstein)\u8bf4\u3002\n\u8981\u4e86\u89e3\u5982\u4f55\u7528\u77e9\u9635\u8868\u793a\u7ec4\uff0c\u6709\u5fc5\u8981\u4f9d\u6b21\u8003\u8651\u6bcf\u4e2a\u5bf9\u8c61\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u6709\u5c0f\u7ec4\u3002\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8003\u8651\u7b49\u8fb9\u4e09\u89d2\u5f62\u7684\u516d\u4e2a\u5bf9\u79f0\uff1a\n\u4e09\u4e2a\u53cd\u5c04\u5bf9\u79f0(\u4ece\u6bcf\u4e2a\u9876\u70b9\u5230\u5bf9\u4fa7\u4e2d\u70b9\u7ed8\u5236\u7684\u7ebf)\u3002\n\u8fd9\u516d\u4e2a\u5bf9\u79f0\u5f62\u6210\u4e86\u4e00\u4e2a\u5c01\u95ed\u7684\u5143\u7d20\u5b87\u5b99-\u4e00\u4e2a\u7fa4-\u5b83\u7684\u6b63\u5f0f\u540d\u79f0\u662fS3\u3002\u5b83\u4eec\u5f62\u6210\u4e86\u4e00\u4e2a\u7ec4\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5c06\u4efb\u610f\u6570\u91cf\u7684\u5b83\u4eec\u4ee5\u4efb\u4f55\u987a\u5e8f\u5e94\u7528\u4e8e\u4e00\u884c\u4e2d\u7684\u4e09\u89d2\u5f62\uff0c\u6700\u7ec8\u7ed3\u679c\u5c06\u4e0e\u60a8\u53ea\u5e94\u7528\u4e00\u4e2a\u5bf9\u79f0\u7684\u7ed3\u679c\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u53cd\u5c04\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u5c06\u5176\u65cb\u8f6c120\u5ea6\uff0c\u5c31\u50cf\u53ea\u662f\u6267\u884c\u4e86\u4e0d\u540c\u7684\u53cd\u5c04\u4e00\u6837\uff0c\u5bf9\u9876\u70b9\u8fdb\u884c\u4e86\u91cd\u65b0\u6392\u5e8f\u3002\n\u201c\u6211\u5148\u505a\u4e00\u4ef6\u4e8b\uff0c\u7136\u540e\u518d\u505a\u53e6\u4e00\u4ef6\u4e8b\u3002\u91cd\u8981\u7684\u662f\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u4e09\u89d2\u5f62\u7684\u5bf9\u79f0\u6027\u3002\u201c\u8bfa\u987f\u8bf4\u3002\n\u6570\u5b66\u5bb6\u5c06\u4e24\u4e2a\u5bf9\u79f0\u7684\u7ec4\u5408\u79f0\u4e3a\u5408\u6210\uff1a\u6765\u81ea\u7ec4(\u53cd\u5c04)\u7684\u4e00\u4e2a\u52a8\u4f5c\u4e0e\u53e6\u4e00\u4e2a(\u65cb\u8f6c)\u7ec4\u5408\u4ea7\u751f\u7b2c\u4e09\u4e2a(\u4e0d\u540c\u7684\u53cd\u5c04)\u3002\u4f60\u53ef\u4ee5\u50cf\u6570\u5b66\u5bb6\u90a3\u6837\u8ba4\u4e3a\u4f5c\u6587\u662f\u4e00\u79cd\u4e58\u6cd5\u884c\u4e3a\u3002\n\u8bfa\u987f\u8bf4\uff1a\u201c\u6211\u4eec\u559c\u6b22\u628a\u6211\u4eec\u7684\u64cd\u4f5c\u770b\u4f5c\u4e58\u6cd5\uff0c\u5c3d\u7ba1\u6211\u4e0d\u662f\u5728\u4e58\u6570\uff1b\u6211\u662f\u5728\u4e58\u6cd5\u53d8\u6362\u3002\u201d\n\u5982\u679c\u60a8\u8003\u8651\u975e\u96f6\u7684\u5b9e\u6570\uff0c\u8fd9\u662f\u6700\u5bb9\u6613\u770b\u5230\u7684\uff0c\u5b83\u4eec\u4e5f\u6784\u6210\u4e86\u4e00\u4e2a\u7ec4\u3002\u5b9e\u6570\u6709\u4e00\u4e2a\u8eab\u4efd\u5143\u7d20-\u6570\u5b571\u3002\u4efb\u4f55\u4e0e1\u76f8\u52a0\u6216\u76f8\u4e58\u7684\u5b9e\u6570\u90fd\u4fdd\u6301\u4e0d\u53d8\u3002\u60a8\u8fd8\u53ef\u4ee5\u6309\u7167\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u987a\u5e8f\u5c06\u5b9e\u6570\u7684\u4efb\u610f\u7ec4\u5408\u76f8\u4e58\uff0c\u5e76\u4e14\u4e58\u79ef\u59cb\u7ec8\u662f\u5b9e\u6570\u3002\u6570\u5b66\u5bb6\u8bf4\uff0c\u5b9e\u6570\u7fa4\u5728\u4e58\u6cd5\u4e0b\u662f\u201c\u5c01\u95ed\u7684\u201d\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u4ec5\u4ec5\u901a\u8fc7\u4e58\u6cd5\u5143\u7d20\u5c31\u79bb\u5f00\u8fd9\u4e2a\u7fa4\u3002\n\u81ea\u4ece\u5b83\u4eec\u572819\u4e16\u7eaa30\u5e74\u4ee3\u88ab\u53d1\u73b0\u4ee5\u6765\uff0c\u7fa4\u5df2\u7ecf\u6210\u4e3a\u6570\u5b66\u4e2d\u6700\u91cd\u8981\u7684\u5bf9\u8c61\u4e4b\u4e00\u3002\u5b83\u4eec\u7f16\u7801\u5173\u4e8e\u8d28\u6570\u3001\u51e0\u4f55\u7a7a\u95f4\u4ee5\u53ca\u51e0\u4e4e\u6240\u6709\u6570\u5b66\u5bb6\u6700\u5173\u5fc3\u7684\u4e1c\u897f\u7684\u4fe1\u606f\u3002\u89e3\u51b3\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u901a\u5e38\u9700\u8981\u4e86\u89e3\u4e0e\u4e4b\u76f8\u5173\u7684\u7279\u5b9a\u7fa4\u4f53\u3002\u4f46\u662f\u5927\u591a\u6570\u7fa4\u6bd4\u7b49\u8fb9\u4e09\u89d2\u5f62\u7684\u5bf9\u79f0\u7fa4\u66f4\u96be\u7406\u89e3\u3002\u4f8b\u5982\uff0c\u201c\u674e\u7fa4\u201d\u5305\u542b\u65e0\u9650\u591a\u4e2a\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u516d\u4e2a\u5143\u7d20\u3002\n\u8fd9\u5c31\u628a\u6211\u4eec\u5e26\u5230\u4e86\u8868\u793a\u7406\u8bba\uff0c\u5b83\u5c06\u6709\u65f6\u795e\u79d8\u7684\u7fa4\u4e16\u754c\u8f6c\u5316\u4e3a\u7ebf\u6027\u4ee3\u6570\u7684\u4e25\u5bc6\u9886\u57df\u3002\n\u7ebf\u6027\u4ee3\u6570\u662f\u5bf9\u79f0\u4e3a\u77e2\u91cf\u7684\u5bf9\u8c61\u6267\u884c\u7684\u7b80\u5355\u53d8\u6362\u7684\u7814\u7a76\uff0c\u77e2\u91cf\u662f\u6709\u6548\u5b9a\u5411\u7684\u7ebf\u6bb5\u3002\u8fd9\u4e9b\u5bf9\u8c61\u7531\u5750\u6807\u5b9a\u4e49\uff0c\u53ef\u4ee5\u4ee5\u77e9\u9635\u3001\u6570\u5b57\u6570\u7ec4\u7684\u5f62\u5f0f\u663e\u793a\u3002\n\u5f53\u53e6\u4e00\u4e2a\u77e9\u9635\u5e94\u7528\u4e8e\u5411\u91cf\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u53d8\u6362\u3002\u4f8b\u5982\uff0c\u5e94\u7528\u77e9\u9635\u3002\n\u5230\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5411\u91cf\uff0c\u5c06\u5176\u62c9\u4f382\u500d\u3002\u8fd9\u662f\u4e00\u4e2a\u201c\u7ebf\u6027\u201d\u53d8\u6362\u7684\u4f8b\u5b50\u3002\n\u5176\u4ed6\u77e9\u9635\u6267\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u5982\u53cd\u5c04\u3001\u65cb\u8f6c\u548c\u526a\u5207\u3002\u8fd8\u6709\u4e00\u4e2a\u201c\u5355\u4f4d\u201d\u77e9\u9635\uff0c\u5b83\u4f7f\u4e00\u4e2a\u5411\u91cf\u4fdd\u6301\u4e0d\u53d8(\u5c31\u50cf\u5355\u4f4d\u5bf9\u79f0\u4f7f\u4e09\u89d2\u5f62\u4e0d\u53d8\uff0c\u6570\u5b571\u4f7f\u5176\u4ed6\u5b9e\u6570\u4e0d\u53d8\u4e00\u6837)\uff1a\n\u7ebf\u6027\u4ee3\u6570\u6307\u5b9a\u4e86\u8fd9\u4e9b\u8f6c\u6362\u80cc\u540e\u7684\u7b97\u672f\u3002\u77e9\u9635\u53ef\u4ee5\u8fdb\u884c\u4e58\u6cd5\u3001\u52a0\u6cd5\u548c\u51cf\u6cd5\uff0c\u5c31\u50cf\u6211\u4eec\u5bf9\u6b63\u6570\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u4e00\u6837\u5bb9\u6613\u3002\n\u8868\u793a\u8bba\u6839\u636e\u4e00\u5b9a\u7684\u89c4\u5219\u7ed9\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5206\u914d\u4e00\u4e2a\u77e9\u9635\uff0c\u4ece\u800c\u5728\u7fa4\u8bba\u548c\u7ebf\u6027\u4ee3\u6570\u4e4b\u95f4\u67b6\u8d77\u4e86\u4e00\u5ea7\u6865\u6881\u3002\u4f8b\u5982\uff0c\u5fc5\u987b\u4e3a\u7ec4\u4e2d\u7684\u6807\u8bc6\u5143\u7d20\u5206\u914d\u6807\u8bc6\u77e9\u9635\u3002\u5206\u914d\u8fd8\u5fc5\u987b\u5c0a\u91cd\u7ec4\u4e2d\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5982\u679c\u53cd\u5c04\u4e58\u4ee5\u7ed9\u5b9a\u65cb\u8f6c\u7b49\u4e8e\u7b2c\u4e8c\u53cd\u5c04\uff0c\u5219\u5206\u914d\u7ed9\u7b2c\u4e00\u53cd\u5c04\u7684\u77e9\u9635\u4e58\u4ee5\u5206\u914d\u7ed9\u65cb\u8f6c\u7684\u77e9\u9635\u5fc5\u987b\u7b49\u4e8e\u5206\u914d\u7ed9\u7b2c\u4e8c\u53cd\u5c04\u7684\u77e9\u9635\u3002\u7b26\u5408\u8fd9\u4e9b\u8981\u6c42\u7684\u77e9\u9635\u96c6\u5408\u79f0\u4e3a\u7ec4\u7684\u8868\u793a\u3002\n\u51ef\u6cfd\u65af\u52b3\u6ed5\u6280\u672f\u5927\u5b66\u7684\u827e\u7c73\u4e3d\u00b7\u8bfa\u987f\u6559\u6388\u8bf4\uff1a\u201c\u73b0\u5728\u4f3c\u4e4e\u8fd8\u4e0d\u6e05\u695a\u8fd9\u662f\u4e0d\u662f\u4e00\u4ef6\u5408\u7406\u7684\u7814\u7a76\u3002\u201d\n\u8868\u793a\u6cd5\u63d0\u4f9b\u4e86\u7ec4\u7684\u7b80\u5316\u56fe\u7247\uff0c\u5c31\u50cf\u7070\u5ea6\u7167\u7247\u53ef\u4ee5\u4f5c\u4e3a\u539f\u59cb\u5f69\u8272\u56fe\u50cf\u7684\u4f4e\u6210\u672c\u6a21\u4eff\u4e00\u6837\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4f1a\u201c\u8bb0\u4f4f\u201d\u4e00\u4e9b\u5173\u4e8e\u56e2\u961f\u7684\u57fa\u672c\u4f46\u5fc5\u4e0d\u53ef\u5c11\u7684\u4fe1\u606f\uff0c\u800c\u5fd8\u8bb0\u4e86\u5176\u4f59\u7684\u4fe1\u606f\u3002\u6570\u5b66\u5bb6\u7684\u76ee\u6807\u662f\u907f\u514d\u7ea0\u7ed3\u4e8e\u4e00\u4e2a\u7ec4\u7684\u5168\u90e8\u590d\u6742\u6027\uff1b\u76f8\u53cd\uff0c\u4ed6\u4eec\u901a\u8fc7\u89c2\u5bdf\u5f53\u8f6c\u6362\u4e3a\u7ebf\u6027\u53d8\u6362\u7684\u7b80\u5316\u683c\u5f0f\u65f6\u5b83\u7684\u884c\u4e3a\u65b9\u5f0f\u6765\u83b7\u5f97\u5bf9\u5176\u5c5e\u6027\u7684\u611f\u89c9\u3002\n\u8bfa\u987f\u8bf4\uff1a\u201c\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u6b21\u5c31\u770b\u8fd9\u4e2a\u96c6\u56e2\u3002\u201d\u201c\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u770b\u89c4\u6a21\u8f83\u5c0f\u7684\u4ee3\u8868\u4f5c\uff0c\u540c\u65f6\u4ecd\u80fd\u4e86\u89e3\u6211\u4eec\u96c6\u56e2\u7684\u4e00\u4e9b\u60c5\u51b5\u3002\u201d\n\u4e00\u4e2a\u7fa4\u51e0\u4e4e\u603b\u662f\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u5f0f\u8868\u793a\uff0c\u4f8b\u5982\uff0c\u5f53\u7528\u5b9e\u6570\u586b\u5145\u77e9\u9635\u65f6\uff0cS3\u6709\u4e09\u79cd\u622a\u7136\u4e0d\u540c\u7684\u8868\u793a\uff1a\u5e73\u51e1\u8868\u793a\u3001\u53cd\u5c04\u8868\u793a\u548c\u7b26\u53f7\u8868\u793a\u3002\n\u6570\u5b66\u5bb6\u5c06\u7ed9\u5b9a\u7fa4\u4f53\u7684\u8868\u793a\u6574\u7406\u6210\u4e00\u4e2a\u8868\u683c--\u79f0\u4e3a\u5b57\u7b26\u8868--\u8be5\u8868\u683c\u6c47\u603b\u4e86\u5173\u4e8e\u8be5\u7fa4\u4f53\u7684\u4fe1\u606f\u3002\u884c\u6307\u7684\u662f\u6bcf\u4e2a\u4e0d\u540c\u7684\u8868\u793a\uff0c\u5217\u6307\u7684\u662f\u8be5\u8868\u793a\u5185\u7684\u91cd\u8981\u77e9\u9635\uff1a\u5206\u914d\u7ed9\u7ec4\u4e2d\u7684\u8eab\u4efd\u5143\u7d20\u7684\u77e9\u9635\uff0c\u4ee5\u53ca\u5206\u914d\u7ed9\u7ec4\u4e2d\u7684\u201c\u751f\u6210\u201d\u5143\u7d20\u7684\u77e9\u9635\uff0c\u8fd9\u4e9b\u5143\u7d20\u4e00\u8d77\u4ea7\u751f\u6240\u6709\u5176\u4ed6\u5143\u7d20\u3002\u8868\u4e2d\u7684\u6761\u76ee\u662f\u4e00\u4e2a\u79f0\u4e3a\u6bcf\u4e2a\u77e9\u9635\u7684\u201c\u8ff9\u7ebf\u201d\u7684\u503c\uff0c\u901a\u8fc7\u5c06\u77e9\u9635\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u5bf9\u89d2\u7ebf\u6761\u76ee\u76f8\u52a0\u6765\u8ba1\u7b97\u3002\u4e0b\u9762\u662fS3\u7684\u4e09\u4e2a\u4ee3\u8868\u7684\u5b57\u7b26\u8868\u3002\n\u5b57\u7b26\u8868\u63d0\u4f9b\u4e86\u8be5\u7ec4\u7684\u7b80\u5316\u56fe\u7247\u3002\u5176\u4e2d\u7684\u6bcf\u4e2a\u8868\u793a\u63d0\u4f9b\u7684\u4fe1\u606f\u7565\u6709\u4e0d\u540c\u3002\u6570\u5b66\u5bb6\u5c06\u8868\u793a\u6cd5\u63d0\u4f9b\u7684\u5404\u79cd\u89c2\u70b9\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u5bf9\u8fd9\u4e2a\u7fa4\u4f53\u7684\u603b\u4f53\u5370\u8c61\u3002\n\u8bfa\u987f\u8bf4\uff1a\u201c\u4f60\u6709\u5f88\u591a\u4e0d\u540c\u7684\u8868\u73b0\u5f62\u5f0f\uff0c\u5b83\u4eec\u8bb0\u7740\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5f53\u4f60\u628a\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u653e\u5728\u4e00\u8d77\u65f6\uff0c\u4f60\u5c31\u4f1a\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u770b\u5230\u4f60\u7684\u56e2\u961f\u7684\u4e07\u82b1\u7b52\u822c\u7684\u753b\u9762\u3002\u201d\n\u6570\u5b66\u5bb6\u53ef\u4ee5\u7acb\u5373\u8bc6\u522b\u4e0a\u9762\u7684\u5b57\u7b26\u8868\u662fS3\u7684\u5b57\u7b26\u8868\u3002\u4f46\u6709\u65f6\uff0c\u540c\u4e00\u5b57\u7b26\u8868\u53ef\u4ee5\u8868\u793a\u591a\u4e2a\u7ec4-\u5728\u5904\u7406\u7b80\u5316\u65f6\uff0c\u8fd9\u79cd\u7a0b\u5ea6\u7684\u6b67\u4e49\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\n\u5728\u90a3\u4e9b\u6a21\u68f1\u4e24\u53ef\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u5b66\u5bb6\u53ef\u4ee5\u4f7f\u7528\u989d\u5916\u7684\u5de5\u5177\u3002\u4e00\u79cd\u662f\u66f4\u6539\u4ed6\u4eec\u521b\u5efa\u8868\u793a\u6cd5\u7684\u7f16\u53f7\u7cfb\u7edf\u3002\u4e0a\u9762\u7684S3\u8868\u793a\u6d89\u53ca\u5230\u5177\u6709\u5b9e\u6570\u6761\u76ee\u7684\u77e9\u9635\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u590d\u6570\u6761\u76ee(\u5176\u4e2d\u6bcf\u4e2a\u6570\u5b57\u90fd\u6709\u4e00\u4e2a\u5b9e\u6570\u90e8\u5206\u548c\u4e00\u4e2a\u865a\u6570\u90e8\u5206)\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u8868\u5f81\u7406\u8bba\u90fd\u662f\u8fd9\u6837\u7684\u3002\n\u4e00\u4e9b\u6700\u6709\u6210\u679c\u7684\u8868\u793a\u65e2\u4e0d\u6d89\u53ca\u5b9e\u6570\uff0c\u4e5f\u4e0d\u6d89\u53ca\u590d\u6570\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u4f7f\u7528\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u6761\u76ee\u53d6\u81ea\u5fae\u578b\u6216\u201c\u6a21\u6570\u201d\u6570\u5b57\u7cfb\u7edf\u3002\u8fd9\u662f\u65f6\u949f\u7b97\u672f\u7684\u771f\u5b9e\u4e16\u754c\uff0c\u5176\u4e2d7+6\u73af\u7ed512\u5c0f\u65f6\u65f6\u949f\u4ee5\u7b49\u4e8e1\u3002\u5177\u6709\u76f8\u540c\u5b57\u7b26\u8868\u7684\u4e24\u7ec4\u4f7f\u7528\u5b9e\u6570\u8868\u793a\u6cd5\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u5177\u6709\u6a21\u6570\u8868\u793a\u6cd5\u7684\u5b57\u7b26\u8868\uff0c\u4ece\u800c\u4f7f\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u533a\u5206\u5f00\u6765\u3002\n\u4eca\u5929\uff0c\u8868\u793a\u7406\u8bba\u662f\u8bb8\u591a\u6570\u5b66\u9886\u57df\u7684\u4e2d\u5fc3\u5de5\u5177\uff1a\u4ee3\u6570\u3001\u62d3\u6251\u3001\u51e0\u4f55\u3001\u6570\u5b66\u7269\u7406\u548c\u6570\u8bba-\u5305\u62ec\u5e2d\u5377\u5168\u7403\u7684\u6717\u5170\u5179\u8ba1\u5212\u3002\n\u5a01\u5ec9\u59c6\u68ee\u5728\u4e00\u6b21\u91c7\u8bbf\u4e2d\u544a\u8bc9\u6211\uff1a\u201c\u8fd9\u79cd\u8868\u8c61\u7406\u8bba\u54f2\u5b66\u572820\u4e16\u7eaa\u4e0b\u534a\u53f6\u541e\u566c\u4e86\u5927\u91cf\u7684\u6570\u5b66\u3002\u201d\n\u8868\u793a\u7406\u8bba-\u7279\u522b\u662f\u6a21\u8868\u793a-\u5728Andrew Wiles\u5177\u6709\u91cc\u7a0b\u7891\u610f\u4e49\u76841994\u5e74\u8d39\u9a6c\u5927\u5b9a\u7406\u7684\u8bc1\u660e\u4e2d\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002\u95ee\u9898\u662f\uff0c\u5bf9\u4e8e\u5f62\u5f0f\u4e3an+100\u4ebf\u7684\u65b9\u7a0b\u662f\u5426\u5b58\u5728\u6574\u6570\u89e3\u3002Wiles\u8bc1\u660e\u4e86\u5f53n&gt;2\u65f6\uff0c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u89e3\u3002\u7c97\u7565\u5730\u8bf4\uff0c\u4ed6\u8ba4\u4e3a\uff0c\u5982\u679c\u89e3\u5b58\u5728\uff0c\u5c06\u5bfc\u81f4\u5177\u6709\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684\u6027\u8d28\u7684\u7fa4(\u6216\u201c\u692d\u5706\u66f2\u7ebf\u201d)\u3002\u8fd9\u4e9b\u5c5e\u6027\u662f\u5982\u6b64\u4e0d\u540c\u5bfb\u5e38\uff0c\u4ee5\u81f3\u4e8e\u4f3c\u4e4e\u6709\u53ef\u80fd\u8868\u660e\u8fd9\u4e2a\u7269\u4f53\u4e0d\u53ef\u80fd\u5b58\u5728\u3002\u7136\u800c\uff0c\u76f4\u63a5\u8bc1\u660e\u5b83\u7684\u4e0d\u5b58\u5728\u592a\u56f0\u96be\u4e86\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6000\u5c14\u65af\u4f7f\u7528\u7684\u662f\u4e00\u65cf\u6a21\u8868\u793a\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u8fd9\u4e9b\u6a21\u8868\u793a\u4f1a\u9644\u5728\u7ec4\u4e0a\u3002\u4ed6\u8bc1\u660e\u4e86\u8fd9\u65cf\u6a21\u8868\u793a\u4e0d\u5b58\u5728\uff0c\u8fd9\u610f\u5473\u7740\u7fa4(\u6216\u692d\u5706\u66f2\u7ebf)\u4e0d\u5b58\u5728\uff0c\u8fd9\u610f\u5473\u7740\u89e3\u4e5f\u4e0d\u5b58\u5728\u3002\n\u8fd9\u53cd\u8fc7\u6765\u610f\u5473\u7740\uff0c\u5728\u5a01\u5ec9\u00b7\u4f2f\u6069\u8d5b\u5fb7(William Burnside)\u5c06\u8868\u5f81\u7406\u8bba\u65a5\u4e3a\u65e0\u7528\u7684\u5927\u7ea6100\u5e74\u540e\uff0c\u5b83\u662f\u53ef\u4ee5\u8bf4\u662f20\u4e16\u7eaa\u6700\u8457\u540d\u7684\u8bc1\u636e\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\n\u6e29\u65af\u5766\u8bf4\uff1a\u201c\u6211\u60f3\u4e0d\u51fa\u8d39\u9a6c\u5927\u5b9a\u7406\u7684\u8bc1\u660e\u5728\u4ec0\u4e48\u5730\u65b9\u4e0d\u6d89\u53ca\u8868\u8c61\u7406\u8bba\u3002\u201d\n\u66f4\u6b63\uff1a2020\u5e7406\u670810\u65e5\u672c\u6587\u4e4b\u524d\u7684\u4e00\u4e2a\u7248\u672c\u6ca1\u6709\u660e\u786e\u89c4\u5b9a\uff0c\u5f53\u4f60\u6392\u9664\u96f6\u65f6\uff0c\u5b9e\u6570\u53ea\u80fd\u5728\u4e58\u6cd5\u4e0b\u7ec4\u6210\u4e00\u4e2a\u7fa4\u3002\u8fd9\u7bc7\u6587\u7ae0\u5df2\u4f5c\u4e86\u76f8\u5e94\u7684\u4fee\u6539\u3002\n\u94c5\u56fe\u50cf\uff1a\u6570\u5b66\u5bb6\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u5bf9\u8c61\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u6bd4\u5982\u8fd9\u91cc\u53ef\u89c6\u5316\u7684\u674e\u7fa4\uff0c\u901a\u8fc7\u7528\u66f4\u7b80\u5355\u7684\u6982\u5ff5\u6765\u8868\u793a\u5b83\u4eec\u3002\u63a8\u8350\u4eba\uff1aJgmoxness", "note_en": "When representation theory emerged in the late 19th century, many mathematicians questioned its worth. In 1897, the English mathematician William Burnside wrote that he doubted that this unorthodox perspective would yield any new results at all.\n  \u201cBasically what [Burnside was] saying is that representation theory is useless,\u201d said\u00a0 Geordie Williamson\u00a0of the University of Sydney in a\u00a0 2015 lecture.\n  More than a century since its debut, representation theory has served as a key ingredient in many of the most important discoveries in mathematics. Yet its usefulness is still hard to perceive at first.\n  \u201cIt doesn\u2019t seem immediately clear that this is a reasonable thing to study,\u201d said\u00a0 Emily Norton\u00a0of the Technical University of Kaiserslautern in Germany.\n  Representation theory is a way of taking complicated objects and \u201crepresenting\u201d them with simpler objects. The complicated objects are often collections of mathematical objects\u2014like numbers or symmetries\u2014that stand in a particular structured relationship with each other. These collections are called groups. The simpler objects are arrays of numbers called matrices, the core element of linear algebra. While groups are abstract and often difficult to get a handle on, matrices and linear algebra are elementary.\n  \u201cMathematicians basically know everything there is to know about matrices. It\u2019s one of the few subjects of math that\u2019s thoroughly well\u00a0understood,\u201d said\u00a0 Jared Weinstein\u00a0of Boston University.\n  To see how groups can be represented by matrices, it\u2019s worth thinking about each object in turn.\n  First, we have groups. To take a straightforward example, consider the six symmetries of an equilateral triangle:\n  Three reflection symmetries (across lines drawn from each vertex through the midpoint of the opposite side)\n    These six symmetries form a closed universe of elements\u2014a group\u2014whose formal name is\u00a0 S3. They form a group because you can apply any number of them to the triangle in a row, in any order, and the end result will be the same as if you\u2019d applied just one symmetry. For example, reflecting the triangle and then rotating it 120 degrees reorders the vertices the same way as if you\u2019d merely performed a different reflection.\n  \u201cI do something and then something else. The important thing is the result is still a symmetry of the triangle,\u201d Norton said.\n    Mathematicians refer to the combination of two symmetries as a composition: One action from the group (a reflection) composed with another (a rotation) yields a third (a different reflection). You can consider composition an act of multiplication, as mathematicians do.\n  \u201cWe like to think of our operations as multiplications even though I\u2019m not multiplying numbers; I\u2019m multiplying transformations,\u201d Norton said.\n  This is easiest to see if you consider the non-zero real numbers, which also form a group. The real numbers have an identity element\u2014the number 1. Any real number composed with, or multiplied by, 1 remains unchanged. You can also multiply any combination of real numbers, in any order you want, and the product is always also a real number. Mathematicians say the group of real numbers is \u201cclosed\u201d under multiplication, meaning that you never leave the group just by multiplying elements.\n  Since their discovery in the 1830s, groups have become one of the most important objects in mathematics. They encode information about prime numbers, geometric spaces and nearly all the things mathematicians care about most. Solving an important problem often turns on understanding the particular group it\u2019s related to. But most groups are far more difficult to understand than the symmetry group of an equilateral triangle. Instead of six elements, \u201cLie groups,\u201d for example, contain infinitely many.\n    That brings us to representation theory, which converts the sometimes mysterious world of groups into the well-trammeled territory of linear algebra.\n  Linear algebra is the study of simple transformations performed on objects called vectors, which are effectively directed line segments. These objects are defined by coordinates, which can be displayed in the form of a matrix, an array of numbers.\n  The transformations occur when another matrix is applied to the vector. For example, applying the matrix\n    to a given vector stretches it out by a factor of two. This is an example of a \u201clinear\u201d transformation.\n    Other matrices perform different kinds of linear transformations, such as reflections, rotations and shears. There is also an \u201cidentity\u201d matrix that leaves a vector unchanged (just as the identity symmetry leaves the triangle unchanged and the number 1 leaves other real numbers unchanged):\n    Linear algebra specifies the arithmetic behind those transformations. Matrices can be multiplied, added and subtracted as easily as we perform those operations on regular numbers.\n  Representation theory creates a bridge between group theory and linear algebra by assigning a matrix to each element in a group, according to certain rules. For example, the identity element in the group must be assigned the identity matrix. The assignments must also respect the relationships between the elements in the group. If a reflection multiplied by a given rotation equals a second reflection, then the matrix assigned to the first reflection multiplied by the matrix assigned to the rotation must equal the matrix assigned to the second reflection. A collection of matrices that respect these requirements is called a representation of a group.\n  \u201cIt doesn\u2019t seem immediately clear that this is a reasonable thing to study,\u201d says\u00a0Emily Norton of\u00a0Technical University of Kaiserslautern.\n  A representation provides a simplified picture of a group, just as a grayscale photo can serve as a low-cost imitation of the original color image. Put another way, it \u201cremembers\u201d some basic but essential information about the group while forgetting the rest. Mathematicians aim to avoid grappling with the full complexity of a group; instead they gain a sense of its properties by looking at how it behaves when converted into the stripped-down format of linear transformations.\n  \u201cWe don\u2019t have to look at the group at once,\u201d Norton said. \u201cWe can look at a representation that\u2019s smaller and still understand something about our group.\u201d\n  A group can almost always be represented in multiple ways.\u00a0 S3, for example, has three distinct representations when real numbers are used to fill in the matrices: the trivial representation, the reflection representation and the sign representation.\n  Mathematicians collate the representations of a given group into a table\u2014called a character table\u2014that summarizes information about the group. The rows refer to each of the different representations, and the columns refer to important matrices within that representation: the matrix assigned to the identity element in the group, and the matrices assigned to the \u201cgenerating\u201d elements in the group that, together, give rise to all other elements. The entries of the table are a value called the \u201ctrace\u201d of each matrix, calculated by summing the diagonal entries from the upper left of the matrix to the lower right. Below is the character table for the three representations of\u00a0 S3 .\n    The character table provides a simplified picture of the group. Each representation within it provides slightly different information. Mathematicians combine the various perspectives provided by the representations into an overall impression of the group.\n  \u201cYou have a lot of different representations, which remember different things, and when you put all that information together you have this kaleidoscopic picture of your group in some sense,\u201d Norton said.\n  The character table above is instantly recognizable to mathematicians as the one for\u00a0 S3. But sometimes the same character table can represent multiple groups\u2014a degree of ambiguity that\u2019s inevitable when you\u2019re dealing with simplifications.\n  In those ambiguous cases, mathematicians have additional tools at their disposal. One is to change the number system in which they create the representation. The representation of\u00a0 S3\u00a0above involves matrices with real-number entries, but you could also use complex number entries (where each number has a real part and an imaginary part). In fact, most of representation theory does.\n    Some of the most fruitful representations involve neither real numbers nor complex numbers. Instead, they use matrices with entries taken from miniature, or \u201cmodular,\u201d number systems. This is the\u00a0 world of clock arithmetic, in which 7 + 6 wraps around the 12-hour clock to equal 1. Two groups that have the same character table with real-number representations might have different character tables with modular representations, allowing you to tell them apart.\n  Today, representation theory is a central tool in many mathematical fields: algebra, topology, geometry, mathematical physics and number theory\u2014including the\u00a0 sweeping Langlands program.\n  \u201cThis philosophy of representation theory has gone on to gobble vast tracts of mathematics in the second half of the 20th century,\u201d Williamson told me in an interview.\n  Representation theory\u2014and modular representations in particular\u2014played an important role in Andrew Wiles\u2019 landmark 1994\u00a0 proof\u00a0of Fermat\u2019s Last Theorem. The problem was about whether whole-number solutions exist for equations of the form\u00a0 an\u00a0+\u00a0 bn\u00a0=\u00a0 cn. Wiles proved that no such solutions exist when\u00a0 n\u00a0is greater than 2. Roughly, he argued that solutions, if they existed, would lead to a group (or \u201celliptic curve\u201d) with very unusual properties. These properties were so unusual that it seemed possible to show that this object could not exist. However, directly proving its nonexistence was too difficult. Instead, Wiles worked with a family of modular representations that would have been attached to the group if it existed. He proved that this family of modular representations cannot exist, which meant that the group (or elliptic curve) cannot exist, which means that the solutions do not exist either.\n  Which in turn means that about 100 years after William Burnside dismissed representation theory as useless, it was a critical component in arguably the most celebrated proof of the 20th century.\n  \u201cI couldn\u2019t conceive of a proof of Fermat\u2019s Last Theorem that doesn\u2019t involve representation theory somewhere,\u201d Weinstein said.\n    Correction : June 10, 2020  A previous version of this article didn\u2019t specify that the real numbers only form a group under multiplication when you exclude zero. The article has been revised accordingly.\n      Lead image:\u00a0Mathematicians can better understand aspects of complicated objects, such as the Lie group visualized here, by representing them with simpler concepts. Credit:\u00a0 Jgmoxness", "posttime": "2020-06-17 23:41:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6452\u5f03,dismissed,\u77e9\u9635", "title": "\u6700\u521d\u88ab\u6452\u5f03\uff0c\u8868\u793a\u7406\u8bba\u73b0\u5728\u662f\u8bb8\u591a\u6570\u5b66\u7684\u6838\u5fc3\u3002", "title_en": "Initially dismissed, representation theory is now central to much of mathematics", "transed": 1, "url": "http://abstractions.nautil.us/article/571/the-useless-perspective-that-transformed-mathematics", "via": "", "real_tags": ["\u6452\u5f03", "dismissed", "\u77e9\u9635"]}, {"category": "", "categoryclass": "", "imagename": "6be862511a74c6ce571d4808259b2526.png", "infoid": 1006957, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u5173\u5b89\u88c5\u8bf4\u660e\u3001\u6df1\u5165\u4f7f\u7528\u548c\u90e8\u7f72\u8be6\u60c5\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863\u3002\n\u5982\u679c\u60a8\u53d1\u73b0\u4efb\u4f55\u4e0e\u5b89\u5168\u76f8\u5173\u7684\u95ee\u9898\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3marcel@byondco.de\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u95ee\u9898\u8ddf\u8e2a\u5668\u3002", "note_en": "For installation instructions, in-depth usage and deployment details, please take a look at the  official documentation.\n  If you discover any security related issues, please email  marcel@beyondco.de instead of using the issue tracker.", "posttime": "2020-06-17 23:41:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,php,fully,\u95ee\u9898", "title": "Expose-\u7528PHP\u7f16\u5199\u7684\u5b8c\u5168\u5f00\u6e90\u7684ngrok\u66ff\u4ee3\u65b9\u6848", "title_en": "Expose \u2013 A fully open-source ngrok alternative written in PHP", "transed": 1, "url": "https://github.com/beyondcode/expose", "via": "", "real_tags": ["\u5f00\u6e90", "php", "fully", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006956, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6700\u8fd1\u7684\u6ce8\u518c\u64cd\u4f5c\u7814\u8ba8\u4f1a\u4e0a\uff0c\u6211\u53c2\u52a0\u4e86\u4e00\u4e2a\u4e3b\u9898\u4e3aDNS\u9690\u79c1\u548c\u52a0\u5bc6\u7684\u5c0f\u7ec4\u8ba8\u8bba\u3002\n\u6211\u53d1\u73b0\u81ea\u5df1\u95ee\u7684\u95ee\u9898\u662f\uff1a\u201cDNS\u9690\u79c1\u4e0e\u6ce8\u518c\u64cd\u4f5c\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u201d\u6ce8\u518c\u529f\u80fd\u662f\u4e0e\u67d0\u79cd\u5f62\u5f0f\u7684\u6392\u4ed6\u6027\u63a7\u5236\u6240\u6709\u6743\u76f8\u5173\u7684\u516c\u5f00\u8bc1\u660e\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u4f46\u662f\u540d\u79f0\u6ce8\u518c\u6761\u76ee\u4e0e\u8be5\u540d\u79f0\u7684\u89e3\u6790\u65b9\u5f0f\u51e0\u4e4e\u6ca1\u6709\u5173\u7cfb(\u5982\u679c\u6709\u7684\u8bdd)\u3002\u5982\u679c\u5ba2\u6237\u7aef\u4f7f\u7528\u666e\u901aDNS\u3001TLS\u4e0a\u7684DNS\u3001HTTPS\u4e0a\u7684DNS\u3001QuIC\u4e0a\u7684DNS\u6216\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u4e0a\u7684DNS\u6765\u5c06\u67e5\u8be2\u4f20\u9012\u5230\u9012\u5f52\u89e3\u6790\u5668\uff0c\u81f3\u5c11\u5e94\u8be5\u6ca1\u6709\u5173\u7cfb\u3002\u540c\u6837\uff0c\u9012\u5f52\u89e3\u6790\u5668\u7684\u6ce8\u518c\u8868\u64cd\u4f5c\u5458\u4f7f\u7528\u52a0\u5bc6\u96a7\u9053\u6765\u67e5\u8be2\u6743\u5a01\u670d\u52a1\u5668\uff0c\u8fd9\u81f3\u5c11\u5e94\u8be5\u65e0\u5173\u7d27\u8981\u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u6ce8\u518c\u8868\u64cd\u4f5c\u5458\u6765\u8bf4\uff0c\u5ba2\u6237\u7aef\u662f\u5426\u4f7f\u7528\u67e5\u8be2\u540d\u79f0\u6700\u5c0f\u5316\u5e94\u8be5\u65e0\u5173\u7d27\u8981\u3002\u5728\u6ce8\u518c\u8868\u64cd\u4f5c\u5458\u53ef\u80fd\u6216\u5e94\u8be5\u5173\u5fc3\u7684\u6240\u6709\u4e8b\u60c5\u4e2d\uff0c\u5728DNS\u9690\u79c1\u548c\u52a0\u5bc6\u4e2d\u51e0\u4e4e\u627e\u4e0d\u5230\u6d89\u53ca\u5176\u64cd\u4f5c\u7684\u4e1c\u897f\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u8bdd\u9898\u4f1a\u51fa\u73b0\u5728\u6ce8\u518c\u8fd0\u8425\u7814\u8ba8\u4f1a\u7684\u8bae\u7a0b\u4e0a\uff1f\n\u4f46\u4e5f\u8bb8\u8fd9\u6709\u70b9\u8fc7\u4e8e\u7b80\u5355\u5316\u4e86\u3002\u4e5f\u8bb8\u5728\u4eca\u5929\u7684\u7f51\u7edc\u4e2d\uff0cDNS\u89e3\u6790\u7684\u4f7f\u7528\u65b9\u5f0f\u4e2d\u6709\u4e00\u4e9b\u5143\u7d20\u6307\u5411\u53ef\u80fd\u4f1a\u5f71\u54cd\u540d\u79f0\u6ce8\u518c\u529f\u80fd\u548c\u6574\u4e2a\u4e92\u8054\u7f51\u540d\u79f0\u7a7a\u95f4\u7684\u4e00\u81f4\u6027\u7684\u8fdb\u4e00\u6b65\u53d8\u5316\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u53ef\u4fe1\u7684\u6848\u4f8b\uff0c\u5373\u9690\u79c1\u548c\u52a0\u5bc6\u6709\u53ef\u80fd\u4fc3\u8fdbDNS\u547d\u540d\u7a7a\u95f4\u7684\u788e\u7247\u5316\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u9000\u4e00\u6b65\u770b\u4e00\u4e0b\u201c\u4f20\u7edf\u7684\u201dDNS\u540d\u79f0\u89e3\u6790(\u56fe1)\u3002\n\u5728\u6b64\u6a21\u578b\u4e2d\uff0cDNS\u662fInternet\u516c\u5171\u57fa\u7840\u8bbe\u65bd\u7684\u4e00\u90e8\u5206\u3002\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u77e5\u9053\u540d\u79f0\u89e3\u6790\u7684\u6027\u8d28\u3002\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u8bf8\u5982gethostbyname\u7684\u5e93\u8c03\u7528\u6765\u8c03\u7528\u4e3b\u673a\u5e73\u53f0\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u4e14\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u540d\u79f0\u89e3\u6790\u8fc7\u7a0b\u6210\u4e3a\u8be5\u5e73\u53f0\u4e0a\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u516c\u5171\u8fc7\u7a0b\u3002\u5982\u679c\u540d\u79f0\u4e0d\u5728\u6700\u8fd1\u89e3\u6790\u7684\u540d\u79f0\u7684\u672c\u5730\u7f13\u5b58\u4e2d\uff0c\u5e76\u4e14\u540d\u79f0\u4e0d\u662f\u5728hosts.txt\u4e2d\u672c\u5730\u5b9a\u4e49\u7684(\u662f\u7684\uff0c\u8bb8\u591a\u5e73\u53f0\u4ecd\u7136\u652f\u6301\u8fd9\u79cd\u73b0\u5728\u5df2\u7ecf\u8fc7\u65f6\u7684\u540d\u79f0\u89e3\u6790\u5f62\u5f0f)\uff0c\u5219\u5b83\u5c06\u628a\u67e5\u8be2\u4f20\u9012\u5230\u9012\u5f52\u89e3\u6790\u5668\u6765\u89e3\u6790\u8be5\u540d\u79f0\u3002\u54ea\u4e2a\u89e3\u6790\u5668\uff1f\u5728\u6b64\u7ecf\u5178DNS\u6a21\u578b\u4e2d\uff0c\u89e3\u6790\u529f\u80fd\u4f5c\u4e3a\u672c\u5730\u7f51\u7edc\u670d\u52a1\u7684\u4e00\u90e8\u5206\u6267\u884c\u3002\u5f53\u8f6c\u6362\u5230ISP\u73af\u5883\u4e2d\u65f6\uff0c\u540d\u79f0\u89e3\u6790\u529f\u80fd\u7531\u672c\u5730ISP\u6267\u884c\u3002\n\u9664\u4e86\u89e6\u53d1\u521d\u59cb\u67e5\u8be2\u6765\u89e3\u6790\u540d\u79f0\u4e4b\u5916\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u540d\u79f0\u89e3\u6790\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4efb\u4f55\u89d2\u8272\uff0c\u5e76\u4e14\u540d\u79f0\u89e3\u6790\u8fc7\u7a0b\u5b8c\u5168\u72ec\u7acb\u4e8e\u5e94\u7528\u7a0b\u5e8f\u3002\u540c\u4e00\u5e73\u53f0\u4e0a\u7684\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u8bf7\u6c42\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u5e76\u4e14DNS\u54cd\u5e94\u5927\u6982\u662f\u76f8\u540c\u7684\u3002\u540d\u79f0\u662f\u6b64\u6a21\u578b\u4e2d\u5e38\u89c1\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff0c\u95ee\u8fd9\u79cd\u6a21\u5f0f\u5728\u4eca\u5929\u7684\u4e92\u8054\u7f51\u4e2d\u6709\u591a\u666e\u904d\u3002\u7ec8\u7aef\u5ba2\u6237\u7aef\u662f\u5426\u4f7f\u7528\u5176\u672c\u5730\u914d\u7f6e\u7684DNS\u9012\u5f52\u89e3\u6790\u5668\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528APNIC\u5b9e\u9a8c\u5ba4\u6536\u96c6\u7684\u6d4b\u91cf\u6570\u636e\u6765\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6216\u8005\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u5fae\u5c0f\u53d8\u4f53\u3002\u591a\u5927\u6bd4\u4f8b\u7684\u5ba2\u6237\u7aef\u4f7f\u7528\u4e0e\u5ba2\u6237\u7aef\u672c\u8eab\u4f4d\u4e8e\u540c\u4e00\u7f51\u7edc\u4e2d\u7684\u89e3\u6790\u7a0b\u5e8f\u6765\u67e5\u8be2\u6743\u5a01\u670d\u52a1\u5668\uff1f\u8fd9\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0a\u5347\u8fd8\u662f\u4e0b\u964d\u5462\uff1f\u56fe2\u663e\u793a\u4e86\u53ef\u4ee5\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u7684\u6570\u636e\u3002\n\u4f3c\u4e4e\u7565\u4f4e\u4e8e\u4e00\u534a\u7684\u7528\u6237\u4f7f\u7528\u5728\u5176\u672c\u5730\u7f51\u7edc\u5185\u8fd0\u884c\u7684\u89e3\u6790\u5668\uff0c\u5176\u4e2d\u89e3\u6790\u5668\u76f4\u63a5\u5904\u7406\u8bf7\u6c42\uff0c\u800c\u4e0d\u5c06\u5176\u8f6c\u53d1\u5230\u5176\u4ed6\u5916\u90e8\u89e3\u6790\u5668\u3002\u5728\u8fc7\u53bb\u768418\u4e2a\u6708\u91cc\uff0c\u8fd9\u4e00\u6570\u5b57\u4e0b\u964d\u4e86\u7ea65%\u3002\u672c\u5730\u89e3\u6790\u5668\u7684\u672c\u5730\u5728\u5468\u672b\u7a0d\u663e\u7a81\u51fa\uff0c\u800c\u5e73\u65e5\u4f7f\u7528\u503e\u5411\u4e8e\u4f7f\u7528\u975e\u672c\u5730\u89e3\u6790\u5668\u3002\n\u7ed3\u8bba\u662f\uff0cDNS\u7684\u8fd9\u79cd\u672c\u5730\u57fa\u7840\u8bbe\u65bd\u6a21\u578b\u6b63\u5728\u7ecf\u5386\u4e00\u4e9b\u53d8\u5316\u3002\u662f\u4ec0\u4e48\u5728\u6539\u53d8\uff1f\u8fd9\u91cc\u7684\u4e00\u4e2a\u4e3b\u8981\u56e0\u7d20\u662f\u5f15\u5165\u4e86\u5f00\u653e\u5f0f\u9012\u5f52\u89e3\u6790\u5668\u3002\u8fd9\u7c7b\u89e3\u6790\u5668\u5305\u62ecGoogle\u76848.8.8.8\u670d\u52a1\u3001Open DNS\u3001Cloudflare\u76841.1.1.1\u670d\u52a1\u3001Quad9(9.9.9.9)\u7b49\u670d\u52a1\u3002\u5728\u8be5\u6a21\u578b\u4e2d\uff0cDNS\u9012\u5f52\u89e3\u6790R\u88ab\u63d0\u4f9b\u4e3a\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u5e76\u4e14DNS\u540d\u79f0\u89e3\u6790\u529f\u80fd\u88ab\u63d0\u5347\u4e3a\u4ee5\u7c7b\u4f3c\u4e8e\u4efb\u4f55\u5176\u4ed6\u56e0\u7279\u7f51\u5e94\u7528\u670d\u52a1\u7684\u65b9\u5f0f\u64cd\u4f5c\u7684\u8986\u76d6\u670d\u52a1(\u56fe3)\u3002\n\u8fd9\u79cd\u8986\u76d6\u670d\u52a1\u6a21\u5f0f\u5728\u4eca\u5929\u7684\u4e92\u8054\u7f51\u4e2d\u6709\u591a\u666e\u904d\uff1f\u5c06\u5176DNS\u67e5\u8be2\u4f20\u9012\u7ed9\u6253\u5f00\u7684DNS\u89e3\u6790\u5668\u7684\u7528\u6237\u6bd4\u4f8b\u662f\u591a\u5c11\uff1f\n\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u5982\u56fe4\u6240\u793a\u3002\u5927\u7ea628%\u7684\u7528\u6237\u901a\u8fc7\u5f00\u653e\u89e3\u6790\u5668\u53d1\u9001DNS\u67e5\u8be2\u3002\u8fd9\u5728\u5de5\u4f5c\u65e5\u66f4\u4e3a\u7a81\u51fa\uff0c\u8868\u660e\u4f01\u4e1a\u7f51\u7edc\u6bd4\u6d88\u8d39\u8005\u670d\u52a1\u7f51\u7edc\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u5f00\u653e\u5f0f\u89e3\u6790\u5668\u3002\u5f00\u653e\u89e3\u6790\u5668\u7684\u5e02\u573a\u4efd\u989d\u5e76\u4e0d\u5747\u5300\uff0c\u56e0\u4e3a\u5927\u7ea622%\u7684\u7528\u6237\u4f7f\u7528\u8c37\u6b4c\u7684\u516c\u5171DNS\u670d\u52a1\u3002\u8fd9\u4e0d\u592a\u53ef\u80fd\u662f\u4e2a\u522b\u914d\u7f6e\u5b50\u89e3\u6790\u5668\u7684\u7ed3\u679c\u3002\u66f4\u6709\u53ef\u80fd\u7684\u662f\u5728\u57fa\u4e8e\u7f51\u7edc\u7684\u89e3\u6790\u5668\u4e2d\u4f7f\u7528\u8f6c\u53d1\u5668\u529f\u80fd\uff0c\u5c06\u6240\u6709\u5ba2\u6237\u67e5\u8be2\u4f20\u9012\u5230Google\u7684\u670d\u52a1\u4e0a\u3002\u8fd9\u53ef\u80fd\u662f\u7531\u6210\u672c\u3001\u670d\u52a1\u53ef\u9760\u6027\u3001\u6570\u636e\u5b8c\u6574\u6027\u6216\u8bb8\u591a\u5176\u4ed6\u6f5c\u5728\u539f\u56e0\u9a71\u52a8\u7684\u9009\u62e9\uff0c\u4f46\u7ed3\u679c\u662f\u76f8\u540c\u7684\u3002DNS\u770b\u8d77\u6765\u8d8a\u6765\u8d8a\u50cf\u4e00\u79cd\u8986\u76d6\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u901a\u7528\u7684\u57fa\u7840\u8bbe\u65bd\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u5c06\u9690\u79c1\u548c\u52a0\u5bc6\u5f15\u5165\u5230\u8fd9\u5f20\u56fe\u7247\u4e2d\u3002DNS\u5f53\u7136\u662f\u4e00\u4e2a\u4e30\u5bcc\u7684\u6d3b\u52a8\u9886\u57df\u3002DNS\u67e5\u8be2\u662f\u5f00\u653e\u7684\uff0c\u5f88\u5bb9\u6613\u88ab\u62e6\u622a\u5e76\u66ff\u6362\u4e3a\u865a\u5047\u54cd\u5e94\u3002\u8fd9\u79cdDNS\u62e6\u622a\u4e0d\u4ec5\u662f\u6076\u610f\u8f6f\u4ef6\u5de5\u5177\u96c6\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e14\u662f\u8bb8\u591a\u56fd\u5bb6\u4e92\u8054\u7f51\u8fc7\u6ee4\u63aa\u65bd\u7684\u56fa\u6709\u7ec4\u4ef6\u3002\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5f88\u591a\u56fd\u5bb6\u7684\u5185\u5bb9\u653f\u7b56\u90fd\u662f\u901a\u8fc7DNS\u62e6\u622a\u6765\u5b9e\u65bd\u7684\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u5c06\u67d0\u4e9b\u540d\u5b57\u4ece\u7528\u6237\u6d3b\u52a8\u7684\u6743\u9650\u4e2d\u5220\u9664\u3002DNS\u662f\u6709\u5173\u7528\u6237\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e30\u5bcc\u6570\u636e\u6e90\u3002\u5982\u679c\u89c2\u5bdf\u8005\u8981\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6574\u7406\u6765\u81ea\u5355\u4e2a\u7528\u6237\u7684\u5b8c\u6574DNS\u67e5\u8be2\u96c6\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u6784\u5efa\u8be5\u5355\u4e2a\u7528\u6237\u7684\u975e\u5e38\u51c6\u786e\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5728\u8fd9\u79cd\u6570\u5b57\u76d1\u89c6\u548c\u63a7\u5236\u7684\u5b9e\u8df5\u4e2d\uff0cDNS\u4f3c\u4e4e\u662f\u4e00\u4e2a\u81ea\u613f\u7684\u5408\u4f5c\u8005(\u56fe5)\u3002\n\u5728DNS\u89e3\u6790\u8fc7\u7a0b\u7684\u51e0\u4e4e\u6bcf\u4e00\u6b65\uff0c\u90fd\u6709\u673a\u4f1a\u5c06DNS\u67e5\u8be2\u94fe\u63a5\u5230\u539f\u59cb\u6700\u7ec8\u7528\u6237\uff0c\u5e76\u6709\u673a\u4f1a\u622a\u53d6\u67e5\u8be2\u5e76\u66ff\u6362\u4e3a\u5408\u6210\u7b54\u6848\u3002\n\u8fd9\u4e9b\u5929\u6211\u4eec\u8c08\u8bba\u7684\u662f\u201c\u77e5\u60c5\u540c\u610f\u201d\u3002\u7528\u6237\u5141\u8bb8\u4ee5\u5404\u79cd\u65b9\u5f0f\u6536\u96c6\u4ed6\u4eec\u7684\u6570\u636e\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u7528\u6237\u7684\u660e\u786e\u540c\u610f\u901a\u5e38\u662f\u5fc5\u8981\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5e76\u4e14\u8fd9\u79cd\u540c\u610f\u9700\u8981\u88ab\u544a\u77e5\u8fd9\u4e9b\u4e2a\u4eba\u6570\u636e\u5c06\u88ab\u7528\u4e8e\u4ec0\u4e48\u76ee\u7684\u3002\u8fd9\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u4f46\u7528\u6237\u5982\u4f55\u9632\u6b62\u672a\u7ecf\u540c\u610f\u6536\u96c6\u6b64\u7c7b\u6570\u636e\u5462\uff1f\u5728\u6ca1\u6709\u7528\u6237\u660e\u786e\u540c\u610f\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5982\u4f55\u963b\u6b62\u7b2c\u4e09\u65b9\u8fdb\u5165DNS\u5e76\u6536\u96c6\u751a\u81f3\u66f4\u6539DNS\u6570\u636e\uff1f\n\u6b63\u662f\u5728\u8fd9\u91cc\uff0cDNS\u9690\u79c1\u548c\u52a0\u5bc6\u8fdb\u5165\u4e86\u753b\u9762\u3002\u9690\u79c1\u63aa\u65bd\u5305\u62ec\u9650\u5236DNS\u7684\u201c\u95f2\u804a\u201d\u7ea7\u522b\uff0c\u5e76\u901a\u8fc7\u67e5\u8be2\u540d\u79f0\u6700\u5c0f\u5316\u505c\u6b62\u5411\u6240\u6709\u6743\u5a01\u540d\u79f0\u670d\u52a1\u5668\u66b4\u9732\u5b8c\u6574\u7684\u67e5\u8be2\u540d\u79f0\u3002\u4f46\u6700\u6709\u6548\u7684\u5de5\u5177\u662f\u52a0\u5bc6\u3002\u8fd1\u5e74\u6765\uff0c\u4e92\u8054\u7f51\u5df2\u7ecf\u8fc8\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u514d\u8d39\u57df\u540d\u8bc1\u4e66\u7684\u5f15\u5165\uff0c\u5b83\u5df2\u7ecf\u5c06\u4f1a\u8bdd\u7ea7\u5b89\u5168\u670d\u52a1\u4ece\u4e00\u79cd\u6602\u8d35\u7684\u3001\u5145\u6ee1\u5f02\u56fd\u60c5\u8c03\u7684\u5962\u4f88\u54c1\u53d8\u6210\u4e86\u4e00\u79cd\u65e0\u5904\u4e0d\u5728\u7684\u5546\u54c1\u3002\u4f20\u8f93\u5c42\u5b89\u5168(TLS)\u7684\u5f15\u5165\u6539\u53d8\u4e86Web\u3002\u73b0\u5728\uff0c\u51e0\u4e4e\u6bcf\u4e2aHTTP\u4f1a\u8bdd\u5b9e\u9645\u4e0a\u90fd\u662f\u4f7f\u7528TLS\u7684HTTPS\u4f1a\u8bdd\u3002(\u56fe6)\u3002\n\u5982\u679cTLS\u5728\u7f51\u7edc\u4e0a\u5de5\u4f5c\u5f97\u8fd9\u4e48\u597d\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u5bf9DNS\u505a\u540c\u6837\u7684\u4e8b\u60c5\u5462\uff1f\u5bf9\u4ece\u7528\u6237\u8bbe\u5907\u5230\u9012\u5f52\u89e3\u6790\u5668\u7684\u8def\u5f84\u4e0a\u7684\u67e5\u8be2\u8fdb\u884c\u52a0\u5bc6\u5c06\u963b\u6b62\u5bf9DNS\u7684\u76d1\u89c6\u548c\u62e6\u622a\u3002\u6839\u672c\u7684\u53d8\u5316\u662f\u4ece\u6570\u636e\u62a5UDP\u534f\u8bae\u8f6c\u53d8\u4e3a\u4f1a\u8bdd\u534f\u8bae\uff0c\u4f46\u662f\u5b58\u6839\u89e3\u6790\u5668\u53ca\u5176\u9012\u5f52\u89e3\u6790\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u5206\u644a\u5728\u6574\u4e2a\u5b58\u6839\u67e5\u8be2\u5e8f\u5217\u4e0a\u901a\u8fc7TCP\u5efa\u7acbTLS\u4f1a\u8bdd\u7684\u5f00\u9500\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5b58\u6839\u89e3\u6790\u5668\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u51e0\u4e4e\u6ca1\u6709\u76f4\u63a5\u7f3a\u70b9\u7684\u63aa\u65bd\u3002\u9012\u5f52\u89e3\u6790\u5668\u627f\u53d7\u66f4\u5927\u7684\u8d1f\u8f7d\u4ee5\u7ef4\u62a4\u4f1a\u8bdd\u72b6\u6001\uff0c\u5e76\u4e14\u4eceUDP\u5230TLS\u4e0a\u7684DNS(\u6216DOT)\u7684\u8f6c\u6362\u5bf9\u89e3\u6790\u5668\u6709\u4e00\u5b9a\u7684\u6210\u672c\u5f71\u54cd\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u5728Web\u4e8b\u52a1\u4e0a\u5de5\u4f5c\uff0c\u800c\u4e14\u6211\u4eec\u505a\u5230\u4e86\uff0c\u90a3\u4e48\u4f3c\u4e4e\u6ca1\u6709\u7406\u7531\u4e0d\u80fd\u5728DNS\u9012\u5f52\u89e3\u6790\u5668\u4e0a\u5de5\u4f5c\u3002\n\u5982\u56fe7\u6240\u793a\uff0c\u63d0\u9ad8DNS\u5b89\u5168\u6027\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u52a0\u5bc6\u672c\u5730\u677f\u8f7d\u5b58\u6839\u89e3\u6790\u5668\u548c\u8fdc\u7a0b\u9012\u5f52\u89e3\u6790\u5668\u4e4b\u95f4\u7684\u8def\u5f84\uff0c\u4f7f\u7528TLS\u4f5c\u4e3aDNS\u67e5\u8be2\u7684\u5305\u88c5\u5668\u3002\u901a\u8fc7\u4f7f\u7528TLS\uff0c\u53ef\u4ee5\u9632\u6b62\u4e24\u79cd\u975e\u5e38\u5e7f\u6cdb\u4f7f\u7528\u7684\u62e6\u622a\u548c\u76d1\u89c6\u673a\u5236\uff0c\u5373\u5f53\u67e5\u8be2\u5728\u5b58\u6839\u548c\u9012\u5f52\u89e3\u6790\u5668\u4e4b\u95f4\u901a\u8fc7\u7f51\u7edc\u65f6\u6355\u83b7\u5b83\u4eec\u3002\n\u4e3a\u4ec0\u4e48\u53ea\u505c\u7559\u5728TLS\uff1f\u5982\u679c\u6211\u4eec\u4e5f\u6dfb\u52a0\u4e00\u5c42HTML\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6539\u53d8\uff0c\u884c\u4e3a\u5e94\u8be5\u662f\u76f8\u4f3c\u7684\u3002\u4f46\u4ece\u53e6\u4e00\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u98de\u8dc3\u3002\u5982\u679cDNS\u67e5\u8be2\u548c\u54cd\u5e94\u88ab\u5305\u88c5\u5728HTTPS\u4e2d\uff0c\u90a3\u4e48\u4efb\u4f55HTTP\u5f15\u64ce\uff0c\u5373\u6d4f\u89c8\u5668\uff0c\u90fd\u53ef\u4ee5\u72ec\u7acb\u627f\u62c5DNS\u67e5\u8be2\u5e76\u83b7\u5f97\u54cd\u5e94\u3002\u4e3a\u4ec0\u4e48\u6d4f\u89c8\u5668\u8981\u8fd9\u6837\u505a\u5462\uff1f\n\u9996\u5148\uff0c\u5b83\u53ef\u4ee5\u9632\u6b62\u5e73\u53f0\u7aa5\u89c6\u5e94\u7528\u7a0b\u5e8f\u7684\u6d3b\u52a8\u3002DNS\u4e8b\u52a1\u53d7\u5230\u4fdd\u62a4\uff0c\u4e0d\u4f1a\u88ab\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u7a83\u542c\u3002\n\u5176\u6b21\uff0c\u53ef\u4ee5\u4f7f\u7528HTML\u5411\u540d\u79f0\u89e3\u6790\u6dfb\u52a0\u5176\u4ed6\u884c\u4e3a\u3002HTML\u652f\u6301\u63a8\u9001\u529f\u80fd\uff0c\u5176\u4e2d\u5bf9\u8c61\u7531\u670d\u52a1\u5668\u63a8\u9001\u5230\u5ba2\u6237\u7aef\u3002\u901a\u8fc7\u9884\u5148\u5411\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u5668\u53ef\u80fd\u77e5\u9053\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u8be2\u95ee\u7684\u540d\u79f0\u89e3\u6790\u7ed3\u679c\uff0c\u53ef\u4ee5\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5904\u7406DNS\u54cd\u5e94\u5e76\u51cf\u5c11\u7528\u6237\u7b49\u5f85\u65f6\u95f4\u3002\n\u7b2c\u4e09\uff0c\u53ef\u4ee5\u901a\u8fc7\u5411\u67e5\u8be2\u6dfb\u52a0HTML\u5c5e\u6027\u6765\u4fdd\u5b58\u7b54\u6848\u3002\u901a\u8fc7EDNS(0)\u7684\u9053\u8def\u662f\u6f2b\u957f\u800c\u66f2\u6298\u7684\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u7ed3\u679c(\u5373\u5ba2\u6237\u7aef\u5b50\u7f51)\u5e76\u4e0d\u5b8c\u5168\u662f\u6700\u597d\u7684\u7ed3\u679c\u3002\u4e8b\u5b9e\u4e0a\u6070\u6070\u76f8\u53cd\u3002\u90a3\u4e48\uff0c\u5982\u679cDNS\u67e5\u8be2\u53ef\u4ee5\u7528HTML\u8fdb\u884c\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u4e5f\u7528HTML\u4f20\u9012\u5173\u4e8e\u67e5\u8be2\u7684\u5143\u6570\u636e\u5462\uff1f\n\u73b0\u5728\u4e0d\u53ea\u662fHTTPS\u53ef\u4ee5\u8fd9\u6837\u5bf9\u5f85\u4e86\u3002Quic\u53ef\u4ee5\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4f7f\u7528\uff0c\u8fd9\u5bfc\u81f4\u4e86\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u5c01\u95ed\u5ba2\u6237\u7aefDNS\uff0c\u4f7f\u5176\u4e0d\u88ab\u62e6\u622a\u5668\u548c\u7a83\u542c\u8005\u7a83\u542c\u3002(\u56fe8)\u3002\n\u5982\u679c\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u4e0e\u5176\u81ea\u5df1\u7684DNS\u540d\u79f0\u89e3\u6790\u7a0b\u5e8f\u901a\u4fe1\uff0c\u90a3\u4e48\u4f7f\u7528\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0\u89e3\u6790\u670d\u52a1\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e00\u6b65\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5d4c\u5165\u5176\u81ea\u5df1\u7684\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u53e5\u67c4\u548c\u6807\u8bc6\u7b26\u7684\u89e3\u6790\u3002\u5e94\u7528\u7a0b\u5e8f\u5728DNS\u4e2d\u6784\u9020\u67e5\u8be2\u4ee5\u5c06\u67e5\u8be2\u4f20\u9012\u5230\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u662f\u7279\u522b\u5fc5\u8981\u7684\uff0c\u4e5f\u6ca1\u6709\u5fc5\u8981\u4e25\u683c\u9650\u5236\u8981\u59d4\u6d3e\u7ed9DNS\u540d\u79f0\u7684\u67e5\u8be2(\u6211\u4eec\u8fc7\u53bb\u79f0\u4e4b\u4e3a\u201c\u5168\u5c40DNS\u201d)\u3002\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u80fd\u591f\u81ea\u5b9a\u4e49\u540d\u79f0\u7a7a\u95f4\u4ee5\u6ee1\u8db3\u81ea\u5df1\u7684\u8981\u6c42\u3002\u7ed3\u679c\u5982\u56fe9\u6240\u793a\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0e\u539f\u59cbDNS\u5e7f\u544a\u57fa\u7840\u8bbe\u65bd\u8d77\u70b9\u5b8c\u5168\u4e0d\u540c\u7684\u573a\u666f\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06DNS\u4f5c\u4e3a\u516c\u5171\u57fa\u7840\u8bbe\u65bd\u7684\u6982\u5ff5\u8fdc\u8fdc\u629b\u5728\u4e86\u540e\u9762\u3002\u8fd9\u4e9b\u4fdd\u62a4\u4e8b\u52a1\u5e76\u5c06\u5176\u4ece\u6253\u5f00\u89c6\u56fe\u4e2d\u79fb\u9664\u7684\u673a\u5236\u4f34\u968f\u7740\u5c06\u540d\u79f0\u89e3\u6790\u529f\u80fd\u79fb\u5230\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u63a7\u5236\u4e0b\u7684\u8f6c\u6362\u3002\u4e00\u65e6\u5411\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\u8f6c\u53d8\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u901a\u7528DNS\u540d\u79f0\u7a7a\u95f4\u3002\u7136\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u60f3\u8981\u4f7f\u7528\u5404\u79cd\u5f62\u5f0f\u7684\u5b9a\u5236\u6765\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u5e76\u7528\u5b83\u4eec\u81ea\u5df1\u7684\u806a\u660e\u60f3\u6cd5\u6765\u589e\u5f3a\u547d\u540d\u7a7a\u95f4\u3002\n\u8fd9\u7ec4\u65b0\u7684\u57fa\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0\u7a7a\u95f4\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u5b83\u662f\u4ecd\u7136\u5177\u6709\u51dd\u805a\u529b\uff0c\u8fd8\u662f\u5df2\u7ecf\u5168\u9762\u788e\u7247\u5316\uff1f\n\u5982\u679c\u4f7f\u4e92\u8054\u7f51\u6210\u4e3a\u5355\u4e00\u7f51\u7edc\u7684\u7279\u5f81\u662f\u5355\u4e00\u7684\u5730\u5740\u7a7a\u95f4\u548c\u5355\u4e00\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u90a3\u4e48\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5df2\u7ecf\u653e\u5f03\u4e86\u8fde\u8d2f\u548c\u7edf\u4e00\u7684\u5730\u5740\u8ba1\u5212\uff0c\u56e0\u4e3aNAT\u662f\u5982\u6b64\u65e0\u5904\u4e0d\u5728\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u7edf\u4e00\u7684\u4e92\u8054\u7f51\u53ea\u5269\u4e0b\u4e00\u4e2a\u8fde\u8d2f\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5c06\u5176\u62c6\u6563\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\n\u56de\u5230\u6700\u521d\u7684\u95ee\u9898\uff1a\u201cDNS\u9690\u79c1\u4e0e\u6ce8\u518c\u64cd\u4f5c\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u201d\u5982\u679c\u6ce8\u518c\u529f\u80fd\u662f\u4e00\u79cd\u4e3aInternet\u4fdd\u7559\u5355\u4e2a\u5305\u542b\u540d\u79f0\u7a7a\u95f4\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027\u7684\u529f\u80fd\uff0c\u90a3\u4e48\u6211\u4eec\u5728DNS\u9690\u79c1\u65b9\u9762\u7684\u52aa\u529b\u6b63\u5728\u5c06\u6211\u4eec\u5f15\u5411\u6709\u53ef\u80fd\u5c06\u6240\u6709\u8fd9\u4e9b\u90fd\u6495\u88c2\u7684\u65b9\u5411\uff01\n\u5982\u679c\u540d\u79f0\u7a7a\u95f4\u7684\u8fd9\u79cd\u5e94\u7528\u7ea7\u788e\u7247\u662fDNS\u7684\u53d1\u5c55\u65b9\u5411\uff0c\u90a3\u4e48\u6211\u4e0d\u6e05\u695a\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff01\n\u4e0a\u8ff0\u89c2\u70b9\u4e0d\u4e00\u5b9a\u4ee3\u8868\u4e9a\u592a\u7f51\u7edc\u4fe1\u606f\u4e2d\u5fc3\u7684\u89c2\u70b9\u3002\nGeoff Huston AM\uff0cB.SC\uff0cM.SC\u662fAPNIC\u7684\u9996\u5e2d\u79d1\u5b66\u5bb6\uff0cAPNIC\u662f\u670d\u52a1\u4e8e\u4e9a\u592a\u5730\u533a\u7684\u5730\u533a\u4e92\u8054\u7f51\u6ce8\u518c\u673a\u6784\u3002", "note_en": "I was on a panel at the recent  Registration Operations Workshop on the topic of DNS Privacy and Encryption.\n  The question I found myself asking was: \u201cWhat has DNS privacy to do with registration operations?\u201d The registration function is part of the process of public attestation relating to some form of title of exclusive control. But the name registration entry has very little if anything to do with the manner of resolution of that name. It should not matter in the least if a client uses plain DNS, DNS over TLS, DNS over HTTPS, DNS over QUIC or DNS over anything else to pass a query to a recursive resolver. Equally it should not matter in the least to the registry operator of the recursive resolver uses an encrypted tunnel to query an authoritative server. Similarly, it shouldn\u2019t matter to the registry operator if the client uses Query Name Minimisation or not. Of all the things a registry operator may or should concern themselves about, there is little to find in DNS privacy and encryption that touches upon their operation. Why is this topic even on the agenda of a registration operations workshop?\n But perhaps this is a little too simplistic. Perhaps there are some elements of the way in which DNS resolution is being used in today\u2019s network that point to further changes that may impinge on the name registration function and the coherence of the Internet\u2019s name space as a whole. Let&#39;s see if we can build a credible case that privacy and encryption have the potential to facilitate fragmentation on the DNS namespace.\n To start this, let\u2019s take a step back and look at \u201ctraditional\u201d DNS name resolution (Figure 1).\n  In this model the DNS is part of the common infrastructure of the Internet. Applications are not necessarily aware of the nature of name resolution. The application calls the host platform operating system through a library call such as gethostbyname and at that point the process of name resolution becomes a common process used by all applications on this platform. If the name is not in a local cache of recently resolved names, and if the name is not locally defined in hosts.txt (yes, many platforms still support this now archaic form of name resolution) then it will pass the query on to a recursive resolver to resolve the name. Which resolver? In this model of classic DNS the resolution function is performed as part of the local network service. When translated into the context of ISPs, the name resolution function is performed by the local ISP.\n The application has no role in the name resolution process, other than triggering the initial query to resolve a name, and the name resolution process is completely independent of the application. Any application on the same platform could ask the same query and the DNS response would presumably be the same. Names are part of the common network infrastructure in this model.\n It is interesting to ask how prevalent this model is in the Internet today. Do end clients use their locally provisioned DNS recursive resolver? We can answer this question, or a slight variant of this question using measurement data collected by APNIC Labs. What proportion of clients use a resolver in the same network as the client itself to query authoritative servers? And is this rising or falling over time? Figure 2 shows the data that can answer these questions.\n  It appears that slight under one half of users use resolvers operated within their local network where the resolver directly processes the request without forwarding it to other external resolvers. Over the past 18 months this number has fallen by some 5%. The local of local resolvers is slightly more prominent on weekends while weekday use tends to use non-local resolvers.\n The conclusion is that this local infrastructure model of the DNS is undergoing some changes. What is changing? One major factor here is the introduction of the use of open recursive resolvers. This class of resolvers include services operated by Google\u2019s 8.8.8.8 service, Open DNS, Cloudflare\u2019s 1.1.1.1 service, Quad 9 (9.9.9.9) and others. In this model the DNS recursive resolve r is provided as a distinct service and the DNS name resolution function is lifted up to be an overlay service that operates in a way that is analogous to any other Internet application service (Figure 3).\n  How prevalent is this overlay service model in today\u2019s Internet? What proportion of users pass their DNS queries to open DNS resolvers?\n  The answers to these questions are shown in Figure 4. Some 28% of users send DNS queries via open resolvers. This is more prominent on weekdays, suggesting that enterprise networks are more inclined to use open resolvers than consumer service networks. The open resolver market share is not uniformly distributed, as some 22% of users use Google\u2019s public DNS service. It is unlikely that this is the result of individual configuration of sub resolvers. More likely is the use of forwarder functions in network-based resolvers, that pass all client queries onto Google\u2019s service. This may be a choice driven by cost, service reliability, data integrity or many other potential reasons, but the outcome is the same. The DNS is increasingly looking like an overlay service and not common infrastructure.\n Let\u2019s now bring privacy and encryption into this picture. The DNS is certainly a rich field of activity. DNS queries are in the open, and can be readily intercepted and fake responses substituted. This DNS interception is not just part of the toolset for malware, but an intrinsic component of many national internet filtering measures. It can be observed that many national content policies are implemented through DNS interception. It\u2019s not just removing certain names from the purview of users\u2019 activities. The DNS is a rich source of data about users and applications. If an observer were to collate the complete set of DNS queries from an individual user over a period of time then it\u2019s possible to construct a very accurate profile of that individual user. It seems that the DNS is a willing collaborator in this exercise of digital surveillance and control (Figure 5).\n  At almost every step of the DNS resolution process there is the opportunity to link a DNS query to the original end user, and the opportunity to intercept a query and substitute a synthetic answer.\n These days we talk of \u201cinformed consent\u201d. It&#39;s ok for a user to grant permission to have their data collected in various ways, but the user\u2019s explicit consent is usually a necessary precondition, and such consent needs to be informed as to the purposes to which such personal data will be used. All well and good, but how can a user prevent the unconsented collection of such data. How can a user stop third parties from tapping into the DNS and gathering, and even altering, DNS data without the users\u2019 explicit consent?\n It\u2019s here that DNS privacy and encryption enter into the picture. Privacy measures include restricting the level of \u201cchattiness:\u201d of the DNS, and stopping exposing the full query name to all authoritative name servers through Query Name Minimisation. But the most effective tool is encryption. Major steps have been taken with the web in recent years. We\u2019ve seen the introduction of free domain name certificates that have turned session level secure services from an expensive and exotic luxury good to a universally accessible commodity. The introduction of Transport Layer Security (TLS) has transformed the web. Now almost every HTTP session is in fact an HTTPS session using TLS. (Figure 6)\n  If TLS has worked so well for the web, then why not do the same for the DNS? Encryption of the query on its path from the user\u2019s device to the recursive resolver would prevent both surveillance and interception of the DNS. The fundamental change is a shift from a datagram UDP protocol to a session protocol, but the relationship between a stub resolver and its recursive resolver can amortise the overheads of setting up a TLS session over TCP across entire sequences of stub queries, so for the stub resolver this is a measure with few direct disadvantages. The recursive resolver is placed under a greater load to maintain session state and the shift from UDP to DNS over TLS, or DoT, has some cost implications for the resolver. However, if we can make it work for web transactions, and we have, then there seems no reason why this shouldn\u2019t work for the DNS recursive resolver.\n As shown in Figure 7, one approach to improve the security of the DNS is to encrypt the path between the local onboard stub resolver and the remote recursive resolver, using TLS as a wrapper for DNS queries. Two very widely used mechanisms for interception and surveillance, trapping queries as they pass across the network between the stub and the recursive resolver are prevented through the use of TLS.\n  Why stop at TLS? What if we added a layer of HTML as well? In one sense it&#39;s a minor change and the behaviour should be similar. But in another sense, it&#39;s a big jump. If the DNS queries and responses are wrapped in HTTPS then any HTTP engine, namely a browser, can undertake DNS queries and get responses all on its own. Why would a browser want to do this?\n Firstly, it can prevent the platform from peeking into the application\u2019s activities. The DNS transactions are secured from eavesdropping from the application itself.\n Secondly, its possible to use HTML to add additional behaviours to name resolution. HTML supports push functions where objects are pushed to the client by the server. It\u2019s possible to treat DNS responses in a similar way and reduce user wait times by pre-provisioning the user with name resolution outcomes that a server may know that the client will likely ask.\n Thirdly its possible to customeise the answer by adding HTML attroibutes to the query. The path through EDNS(0) has been long and tortuous and the outcomes so far, namely Client Subnet are not exactly the best of outcomes. Quite the opposite in fact. So if DNS queries can be made in HTML then why not communicate metadata about the query in HTML as well?\n Now it\u2019s not only HTTPS that can be treated in this way. QUIC can be used in an analogous manner, and this leads to a generic approach to sealing up the client-side DNS from interceptors and eavesdroppers. (Figure 8).\n  If each application is free to communicate with its own DNS name resolver, then it\u2019s a very short step to use an application-specific name resolution service. In this way the application can embed resolution of its own application-specific handles and identifiers. Its not particularly necessary for the application to frame queries in the DNS to pass queries to an application-specific server, nor is it strictly necessary to limit the queries to be delegated DNS names in what we used to call the \u201cglobal DNS. Each application is able to customise a namespace to meet its own requirements. Thre result is Figure 9, which is a scenario that is well removed from the original DNS ad infrastructure starting point.\n  At this point we have left the concept of DNS as a common infrastructure far behind. These mechanisms to secure the transactions and remove them from open view are accompanied by a shift to move the name resolution function to one that is under the application\u2019s direct control. Once this shift to application specific services is made the need to use a common DNS name space recedes. Applications can then determine whether they want to use various forms of customisation to improve the performance of the application, and augment the namespace with their own bright ideas.\n What does this new application-based set of name spaces really look like? Is it still cohesive, or has it been comprehensively fragmented?\n  If the characterisation of what makes the internet a single network is a single address space and a single name space, then it\u2019s pretty clear that we\u2019ve dispensed with a coherent and uniform address plan already as NATs are just so pervasive. But if a coherent name space is all that&#39;s left of a single unifying Internet what happens when we tear that apart as well?\n Back to that original question: \u201cWhat has DNS privacy to do with registration operations?\u201d If the registry function is a function that preserves the coherence and integrity of a single embracing name space for the Internet, then our efforts in DNS privacy are leading us in directions that threaten to rip all of this apart!\n If this application-level fragmentation of the namespace is where the DNS is headed, then it\u2019s unclear to me what comes next!\n    The above views do not necessarily represent the views of the Asia Pacific Network Information Centre.\n   GEOFF HUSTON AM, B.Sc., M.Sc., is the Chief Scientist at APNIC, the Regional Internet Registry serving the Asia Pacific region.", "posttime": "2020-06-17 23:40:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dns", "title": "DNS\u6307\u5411\u54ea\u91cc\uff1f", "title_en": "Where Is the DNS Headed?", "transed": 1, "url": "https://www.potaroo.net/ispcol/2020-06/row.html", "via": "", "real_tags": ["dns"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006955, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u7136\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u53ea\u6709\u4e24\u4ef6\u68d8\u624b\u7684\u4e8b\u60c5\uff1a\u7f13\u5b58\u5931\u6548\u3001\u547d\u540d\u548c\u9010\u4e2a\u9519\u8bef\u3002\u4f46\u662f\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6742\u8349\u4e1b\u751f\u4e2d\uff0c\u6f5c\u85cf\u7740\u53e6\u4e00\u4e2a\u96be\u9898\uff1a\u628a\u4e8b\u60c5\u770b\u5f97\u4e95\u4e95\u6709\u6761\u3002\u65e0\u8bba\u662f\u6392\u5e8f\u3001\u4e0d\u6392\u5e8f\uff0c\u8fd8\u662f\u53d1\u63a8\u6587\uff0c\u770b\u4e8b\u60c5\u662f\u5426\u4e95\u7136\u6709\u5e8f\uff0c\u90fd\u662f\u4e00\u4e2a\u4e16\u4ee3\u7684\u6311\u6218\u3002\n\u4e00\u4e2a\u5e38\u89c1\u7684\u6392\u5e8f\u6311\u6218\u662f\u5185\u5b58\u4e00\u81f4\u6027\uff0c\u8fd9\u662f\u5b9a\u4e49\u5e76\u884c\u7ebf\u7a0b\u5982\u4f55\u89c2\u5bdf\u5176\u5171\u4eab\u5185\u5b58\u72b6\u6001\u7684\u95ee\u9898\u3002\u5173\u4e8e\u5185\u5b58\u4e00\u81f4\u6027\u7684\u8d44\u6e90\u5f88\u591a\uff0c\u4f46\u5927\u591a\u6570\u8981\u4e48\u662f\u5e7b\u706f\u7247(\u5c31\u50cf\u6211\u7684\uff01)\uff0c\u8981\u4e48\u662f\u5bc6\u96c6\u7684\u5927\u90e8\u5934\u3002\u6211\u7684\u76ee\u6807\u662f\u5236\u4f5c\u4e00\u672c\u5165\u95e8\u8bfb\u7269\uff0c\u5e76\u8bf4\u660e\u4e3a\u4ec0\u4e48\u5185\u5b58\u4e00\u81f4\u6027\u662f\u591a\u6838\u7cfb\u7edf\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u60a8\u5f53\u7136\u5e94\u8be5\u53c2\u8003\u5176\u4ed6\u4f18\u79c0\u7684\u53c2\u8003\u8d44\u6599\u3002\n\u4e00\u81f4\u6027\u6a21\u578b\u5904\u7406\u591a\u4e2a\u7ebf\u7a0b(\u6216\u5de5\u4f5c\u7ebf\u7a0b\u3001\u8282\u70b9\u6216\u526f\u672c\u7b49)\u67e5\u770b\u4e16\u754c\u7684\u65b9\u5f0f\u3002\u8003\u8651\u8fd9\u4e2a\u8fd0\u884c\u4e24\u4e2a\u7ebf\u7a0b\u7684\u7b80\u5355\u7a0b\u5e8f\uff0c\u5176\u4e2dA\u548cB\u6700\u521d\u90fd\u4e3a0\uff1a\n\u8981\u4e86\u89e3\u6b64\u7a0b\u5e8f\u53ef\u4ee5\u8f93\u51fa\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5e94\u8be5\u8003\u8651\u5176\u4e8b\u4ef6\u53d1\u751f\u7684\u987a\u5e8f\u3002\u5b9e\u9645\u4e0a\uff0c\u6b64\u7a0b\u5e8f\u53ef\u4ee5\u6309\u7167\u4e24\u4e2a\u660e\u663e\u7684\u987a\u5e8f\u8fd0\u884c\uff1a\n(1)\u2192(2)\u2192(3)\u2192(4)\uff1a\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5728\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e4b\u524d\u8fd0\u884c\u5b83\u7684\u4e24\u4e2a\u4e8b\u4ef6\uff0c\u56e0\u6b64\u7a0b\u5e8f\u6253\u537001\u3002\n(3)\u2192(4)\u2192(1)\u2192(2)\uff1a\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u5728\u7b2c\u4e00\u7ebf\u7a0b\u4e4b\u524d\u8fd0\u884c\u5b83\u7684\u4e24\u4e2a\u4e8b\u4ef6\u3002\u7a0b\u5e8f\u4ecd\u7136\u6253\u537001\u3002\n\u8fd8\u6709\u4e00\u4e9b\u4e0d\u592a\u660e\u663e\u7684\u987a\u5e8f\uff0c\u5176\u4e2d\u6307\u4ee4\u76f8\u4e92\u4ea4\u9519\uff1a\n(1)\u2192(3)\u2192(2)\u2192(4)\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5728\u4efb\u4e00\u7ebf\u7a0b\u4e2d\u7684\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e4b\u524d\u8fd0\u884c\uff0c\u6253\u537011\u3002\n(1)\u2192(3)\u2192(4)\u2192(2)\uff1a\u8fd0\u884c\u6765\u81ea\u7b2c\u4e00\u7ebf\u7a0b\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff0c\u7136\u540e\u8fd0\u884c\u6765\u81ea\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u7684\u4e24\u6761\u6307\u4ee4\uff0c\u7136\u540e\u8fd0\u884c\u6765\u81ea\u7b2c\u4e00\u7ebf\u7a0b\u7684\u7b2c\u4e8c\u6761\u6307\u4ee4\u3002\u7a0b\u5e8f\u4ecd\u7136\u6253\u537011\u4e2a\u3002\n\u76f4\u89c9\u4e0a\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5e94\u8be5\u4e0d\u53ef\u80fd\u6253\u537000\u3002\u5bf9\u4e8e\u8981\u6253\u53700\u7684\u7b2c(2)\u884c\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u7b2c(3)\u884c\u5411\u5176\u5199\u51651\u4e4b\u524d\u6253\u5370B\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u7528\u4e00\u6761\u8fb9\u6765\u8868\u793a\uff1a\n\u4ecex\u8fd0\u7b97\u5230y\u8fd0\u7b97\u7684\u4e00\u6761\u8fb9\u8868\u660e\uff0cx\u5fc5\u987b\u53d1\u751f\u5728y\u4e4b\u524d\uff0c\u624d\u80fd\u5f97\u5230\u6211\u4eec\u611f\u5174\u8da3\u7684\u884c\u4e3a\u3002\u7c7b\u4f3c\u5730\uff0c\u5bf9\u4e8e\u8981\u6253\u53700\u884c(4)\uff0c\u6253\u5370\u5fc5\u987b\u5728\u884c(1)\u5c061\u5199\u5165A\u4e4b\u524d\u8fdb\u884c\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\u56fe\u4e2d\uff1a\n\u5f53\u7136\uff0c\u6700\u540e\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e8b\u4ef6\u5e94\u8be5\u6309\u987a\u5e8f\u53d1\u751f-(1)\u5728(2)\u4e4b\u524d\uff0c(3)\u5728(4)\u4e4b\u524d-\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u5bf9\u547d\u4ee4\u5f0f\u7a0b\u5e8f\u7684\u671f\u671b\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4e5f\u6dfb\u52a0\u8fd9\u4e9b\u8fb9\uff1a\n\u4f46\u73b0\u5728\u6211\u4eec\u6709\u95ee\u9898\u4e86\u3002\u5982\u679c\u6211\u4eec\u4ece(1)\u5f00\u59cb\uff0c\u7136\u540e\u6cbf\u7740\u8fb9-\u5230(2)\uff0c\u7136\u540e\u662f(3)\uff0c\u7136\u540e\u662f(4)\uff0c\u7136\u540e\u662f\u2026\u3002(1)\u53c8\u6765\u4e86\uff01\u8bb0\u4f4f\uff0c\u8fb9\u7f18\u662f\u8bf4\u54ea\u4e9b\u4e8b\u4ef6\u5fc5\u987b\u5728\u5176\u4ed6\u4e8b\u4ef6\u4e4b\u524d\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4ece(1)\u5f00\u59cb\uff0c\u5e76\u518d\u6b21\u8fd4\u56de\u5230(1)\uff0c\u5219\u8be5\u56fe\u8bf4\u660e(1)\u5fc5\u987b\u5728\u5176\u672c\u8eab\u4e4b\u524d\u53d1\u751f\uff01\u9664\u975e\u5728\u7269\u7406\u5b66\u65b9\u9762\u53d6\u5f97\u975e\u5e38\u4ee4\u4eba\u62c5\u5fe7\u7684\u8fdb\u5c55\uff0c\u5426\u5219\u8fd9\u662f\u4e0d\u592a\u53ef\u80fd\u7684\u3002\n\u7531\u4e8e\u6b64\u6267\u884c\u9700\u8981\u65f6\u95f4\u626d\u66f2\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u6b64\u7a0b\u5e8f\u4e0d\u80fd\u6253\u537000\u3002\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u77db\u76fe\u8bc1\u660e\uff1a\u5047\u8bbe\u8fd9\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u6253\u537000\u3002\u90a3\u4e48\u6211\u4eec\u521a\u624d\u5c55\u793a\u7684\u6240\u6709\u6392\u5e8f\u89c4\u5219\u90fd\u5fc5\u987b\u6210\u7acb\u3002\u4f46\u662f\u8fd9\u4e9b\u89c4\u5219\u5bfc\u81f4\u4e86\u4e00\u4e2a\u77db\u76fe(\u4e8b\u4ef6(1)\u53d1\u751f\u5728\u5b83\u81ea\u5df1\u4e4b\u524d)\u3002\u6240\u4ee5\u8fd9\u4e2a\u5047\u8bbe\u662f\u9519\u8bef\u7684\u3002\n\u67b6\u6784\u5e08\u548c\u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u4eba\u5458\u76f8\u4fe1\u6211\u4eec\u521a\u624d\u63a2\u7d22\u7684\u89c4\u5219\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u662f\u76f4\u89c2\u7684\u3002\u5176\u601d\u60f3\u662f\u5e76\u884c\u8fd0\u884c\u7684\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u5355\u4e2a\u4e3b\u5185\u5b58\uff0c\u56e0\u6b64\u6240\u6709\u4e8b\u60c5\u90fd\u5fc5\u987b\u6309\u987a\u5e8f\u8fdb\u884c\u3002\u4e0d\u5b58\u5728\u4e24\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u201c\u540c\u65f6\u201d\u53d1\u751f\u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5728\u8bbf\u95ee\u5355\u4e2a\u4e3b\u5185\u5b58\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6b64\u89c4\u5219\u6ca1\u6709\u8bf4\u660e\u4e8b\u4ef6\u53d1\u751f\u7684\u987a\u5e8f-\u53ea\u662f\u8bf4\u660e\u5b83\u4eec\u6309\u67d0\u79cd\u987a\u5e8f\u53d1\u751f\u3002\u6b64\u76f4\u89c2\u6a21\u578b\u7684\u53e6\u4e00\u90e8\u5206\u662f\u4e8b\u4ef6\u6309\u7a0b\u5e8f\u987a\u5e8f\u53d1\u751f\uff1a\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u4ef6\u6309\u5176\u7f16\u5199\u7684\u987a\u5e8f\u53d1\u751f\u3002\u8fd9\u5c31\u662f\u7a0b\u5e8f\u5458\u6240\u671f\u5f85\u7684\uff1a\u5982\u679c\u6211\u7684\u7a0b\u5e8f\u5728\u68c0\u67e5\u94a5\u5319\u662f\u5426\u8f6c\u52a8\u4e4b\u524d\u5c31\u88ab\u5141\u8bb8\u53d1\u5c04\u5bfc\u5f39\uff0c\u90a3\u4e48\u5404\u79cd\u4e0d\u597d\u7684\u4e8b\u60c5\u90fd\u4f1a\u5f00\u59cb\u53d1\u751f\u3002\n\u8fd9\u4e24\u6761\u89c4\u5219(\u5355\u4e2a\u4e3b\u5b58\u50a8\u5668\u548c\u7a0b\u5e8f\u987a\u5e8f)\u5171\u540c\u5b9a\u4e49\u4e86\u987a\u5e8f\u4e00\u81f4\u6027\u3002\u5b9a\u4e49\u987a\u5e8f\u4e00\u81f4\u6027\u662f\u4e3aLeslie Lamport\u8d62\u5f972013\u5e74\u56fe\u7075\u5956\u7684\u4f17\u591a\u6210\u5c31\u4e4b\u4e00\u30021\u4e2a\u3002\n\u987a\u5e8f\u4e00\u81f4\u6027\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b\u793a\u4f8b\u3002\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b(\u6211\u4eec\u901a\u5e38\u7b80\u79f0\u4e3a\u201c\u5185\u5b58\u6a21\u578b\u201d)\u5b9a\u4e49\u4e86\u591a\u5904\u7406\u5668\u4e0a\u591a\u4e2a\u7ebf\u7a0b\u7684\u5141\u8bb8\u6392\u5e8f\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u987a\u5e8f\u4e00\u81f4\u6027\u7981\u6b62\u4efb\u4f55\u5bfc\u81f4\u6253\u537000\u7684\u6392\u5e8f\uff0c\u4f46\u5141\u8bb8\u6253\u537001\u548c11\u7684\u67d0\u4e9b\u6392\u5e8f\u3002\n\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b\u662f\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u5408\u540c\u3002\u786c\u4ef6\u627f\u8bfa\u53ea\u4ee5\u6a21\u578b\u5141\u8bb8\u7684\u65b9\u5f0f\u91cd\u65b0\u6392\u5e8f\u64cd\u4f5c\uff0c\u4f5c\u4e3a\u56de\u62a5\uff0c\u8f6f\u4ef6\u627f\u8ba4\u6240\u6709\u8fd9\u6837\u7684\u91cd\u65b0\u6392\u5e8f\u90fd\u662f\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u9700\u8981\u8003\u8651\u5230\u5b83\u4eec\u3002\n\u8003\u8651\u987a\u5e8f\u4e00\u81f4\u6027\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u5f00\u5173\u3002\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u5f00\u5173\u9009\u62e9\u8981\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u5e76\u5b8c\u5168\u8fd0\u884c\u5176\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u3002\u6b64\u6a21\u578b\u4fdd\u7559\u4e86\u987a\u5e8f\u4e00\u81f4\u6027\u89c4\u5219\uff1a\u4e8b\u4ef6\u8bbf\u95ee\u5355\u4e2a\u4e3b\u5185\u5b58\uff0c\u56e0\u6b64\u6309\u987a\u5e8f\u53d1\u751f\uff1b\u901a\u8fc7\u59cb\u7ec8\u8fd0\u884c\u9009\u5b9a\u7ebf\u7a0b\u7684\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e8b\u4ef6\u6309\u7a0b\u5e8f\u987a\u5e8f\u53d1\u751f\u3002\n\u8fd9\u79cd\u6a21\u5f0f\u7684\u95ee\u9898\u662f\uff0c\u5b83\u7684\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u800c\u4e14\u662f\u707e\u96be\u6027\u7684\u3002\u6211\u4eec\u4e00\u6b21\u53ea\u80fd\u8fd0\u884c\u4e00\u6761\u6307\u4ee4\uff0c\u56e0\u6b64\u5931\u53bb\u4e86\u8ba9\u591a\u4e2a\u7ebf\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u5927\u90e8\u5206\u597d\u5904\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u7b49\u5f85\u6bcf\u6761\u6307\u4ee4\u5b8c\u6210\uff0c\u7136\u540e\u624d\u80fd\u5f00\u59cb\u4e0b\u4e00\u6761\u6307\u4ee4-\u5728\u5f53\u524d\u6307\u4ee4\u7684\u6548\u679c\u5bf9\u5176\u4ed6\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u89c1\u4e4b\u524d\uff0c\u4e0d\u80fd\u518d\u8fd0\u884c\u66f4\u591a\u6307\u4ee4\u3002\n\u6709\u65f6\uff0c\u8fd9\u79cd\u7b49\u5f85\u7684\u8981\u6c42\u662f\u6709\u610f\u4e49\u7684\u3002\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff0c\u5176\u4e2d\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u60f3\u8981\u5199\u5165\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u60f3\u8981\u8bfb\u53d6\u7684\u53d8\u91cfA\uff1a\n\u5982\u679c\u6211\u4eec\u653e\u5f03\u5355\u4e00\u4e3b\u5185\u5b58\u7684\u60f3\u6cd5\uff0c\u5141\u8bb8(1)\u548c(2)\u5e76\u884c\u8fd0\u884c\uff0c\u90a3\u4e48\u7a81\u7136\u4e4b\u95f4\u5c31\u4e0d\u6e05\u695a\u5e94\u8be5\u8bfb\u53d6\u4e8b\u4ef6(3)\u7684\u54ea\u4e2a\u503c\u4e86\u3002\u5355\u4e00\u7684\u4e3b\u5b58\u4fdd\u8bc1\u603b\u4f1a\u6709\u4e00\u4e2a\u201c\u8d62\u5bb6\u201d\uff1a\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u7684\u6700\u540e\u4e00\u6b21\u5199\u5165\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u4fdd\u8bc1\uff0c\u5728(1)\u548c(2)\u90fd\u53d1\u751f\u4e4b\u540e\uff0c(3)\u53ef\u4ee5\u770b\u52301\u62162\uff0c\u8fd9\u662f\u4ee4\u4eba\u56f0\u60d1\u7684\u3002\n\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u5b83\u8868\u793a\u6bcf\u4e2a\u7ebf\u7a0b\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u770b\u5230\u5bf9\u540c\u4e00\u4f4d\u7f6e\u7684\u6240\u6709\u5199\u5165\u3002\u5b83\u6ca1\u6709\u89c4\u5b9a\u5b9e\u9645\u7684\u987a\u5e8f((1)\u6216(2)\u53ef\u80fd\u6700\u5148\u53d1\u751f)\uff0c\u4f46\u786e\u5b9e\u8981\u6c42\u6bcf\u4e2a\u4eba\u90fd\u770b\u5230\u76f8\u540c\u7684\u201c\u8d62\u5bb6\u201d\u3002\n\u6ca1\u6709\u7406\u7531\u6267\u884c\u4e8b\u4ef6(2)(\u4eceB\u8bfb\u53d6)\u9700\u8981\u7b49\u5f85\u4e8b\u4ef6(1)(\u5bf9A\u7684\u5199\u5165)\u5b8c\u6210\u3002\u5b83\u4eec\u5b8c\u5168\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u56e0\u6b64\u5e94\u8be5\u5141\u8bb8\u5e76\u884c\u8fd0\u884c\u3002\u4e8b\u4ef6(1)\u7279\u522b\u6162\uff0c\u56e0\u4e3a\u5b83\u662f\u5199\u5165\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u5355\u4e00\u7684\u5185\u5b58\u89c6\u56fe\uff0c\u6211\u4eec\u4e0d\u80fd\u8fd0\u884c(2)\uff0c\u76f4\u5230(1)\u5bf9\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u90fd\u53ef\u89c1\u3002\u5728\u73b0\u4ee3CPU\u4e0a\uff0c\u7531\u4e8e\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c\uff1a\n\u4e24\u4e2a\u6838\u5fc3\u4e4b\u95f4\u552f\u4e00\u7684\u5171\u4eab\u5185\u5b58\u662f\u4e00\u76f4\u56de\u5230L3\u7f13\u5b58\uff0c\u8fd9\u901a\u5e38\u9700\u898190\u4e2a\u4ee5\u4e0a\u7684\u5468\u671f\u624d\u80fd\u8bbf\u95ee\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u653e\u5165\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5199\u5165(1)\u53d8\u5f97\u53ef\u89c1\uff1a\n\u90a3\u4e48(2)\u53ef\u4ee5\u5728\u5c06(1)\u653e\u5165\u5b58\u50a8\u7f13\u51b2\u5668\u4e4b\u540e\u7acb\u5373\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5b83\u5230\u8fbeL3\u9ad8\u901f\u7f13\u5b58\u3002\u7531\u4e8e\u5b58\u50a8\u7f13\u51b2\u533a\u4f4d\u4e8e\u5185\u6838\u4e0a\uff0c\u56e0\u6b64\u8bbf\u95ee\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5728\u5c06\u6765\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u5c06\u4ece\u5b58\u50a8\u7f13\u51b2\u533a\u62c9\u51fa\u5199\u5165\uff0c\u5e76\u901a\u8fc7\u7f13\u5b58\u4f20\u64ad\u5b83\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u770b\u5230\u5b83\u3002\u5b58\u50a8\u7f13\u51b2\u533a\u5141\u8bb8\u6211\u4eec\u9690\u85cf\u4f7fwrite(1)\u5bf9\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1\u901a\u5e38\u9700\u8981\u7684\u5199\u5165\u5ef6\u8fdf\u3002\n\u5b58\u50a8\u7f13\u51b2\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4fdd\u7559\u4e86\u5355\u7ebf\u7a0b\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u5355\u7ebf\u7a0b\u7a0b\u5e8f\uff1a\n\u8bfb\u5165(2)\u9700\u8981\u770b\u5230(1)\u4e3a\u8be5\u7a0b\u5e8f\u5199\u5165\u7684\u503c\uff0c\u4ee5\u4fdd\u7559\u9884\u671f\u7684\u5355\u7ebf\u7a0b\u884c\u4e3a\u3002write(1)\u8fd8\u6ca1\u6709\u8fdb\u5165\u5185\u5b58-\u5b83\u4f4d\u4e8e\u5185\u68381\u7684\u5b58\u50a8\u7f13\u51b2\u533a\u4e2d-\u6240\u4ee5\u5982\u679cread(2)\u53ea\u662f\u67e5\u770b\u5185\u5b58\uff0c\u5b83\u5c06\u83b7\u5f97\u4e00\u4e2a\u65e7\u503c\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u5b83\u5728\u540c\u4e00\u4e2aCPU\u4e0a\u8fd0\u884c\uff0c\u6240\u4ee5\u8bfb\u53d6\u53ef\u4ee5\u76f4\u63a5\u68c0\u67e5\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u67e5\u770b\u5b83\u662f\u5426\u5305\u542b\u5bf9\u6b63\u5728\u8bfb\u53d6\u7684\u4f4d\u7f6e\u7684\u5199\u5165\uff0c\u5e76\u6539\u7528\u8be5\u503c\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4f7f\u7528\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u6b64\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u6b63\u786e\u6253\u53701\u3002\n\u4e00\u79cd\u5141\u8bb8\u5b58\u50a8\u7f13\u51b2\u7684\u6d41\u884c\u5185\u5b58\u6a21\u578b\u79f0\u4e3a\u603b\u5b58\u50a8\u6392\u5e8f(TSO)\u3002\u9664\u4e86\u5141\u8bb8\u4f7f\u7528\u5b58\u50a8\u7f13\u51b2\u533a\u4e4b\u5916\uff0cTSO\u57fa\u672c\u4e0a\u4fdd\u7559\u4e86\u4e0eSC\u76f8\u540c\u7684\u4fdd\u8bc1\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u9690\u85cf\u4e86\u5199\u5165\u5ef6\u8fdf\uff0c\u5927\u5927\u52a0\u5feb\u4e86\u6267\u884c\u901f\u5ea6\u3002\n\u5b58\u50a8\u7f13\u51b2\u533a\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u80fd\u4f18\u5316\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1aTSO\u5141\u8bb8SC\u4e0d\u5141\u8bb8\u7684\u884c\u4e3a\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728TSO\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u53ef\u4ee5\u8868\u73b0\u51fa\u7a0b\u5e8f\u5458\u4f1a\u611f\u5230\u60ca\u8bb6\u7684\u884c\u4e3a\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u4e0a\u9762\u76f8\u540c\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f46\u8fd9\u4e00\u6b21\u662f\u5728\u5e26\u6709\u5b58\u50a8\u7f13\u51b2\u533a\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u3002\u9996\u5148\uff0c\u6211\u4eec\u6267\u884c(1)\uff0c\u7136\u540e\u6267\u884c(3)\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u5c06\u5176\u6570\u636e\u653e\u5165\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u53d1\u9001\u56de\u4e3b\u5185\u5b58\uff1a\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u6838\u5fc31\u4e0a\u6267\u884c(2)\uff0c\u5b83\u5c06\u8bfb\u53d6B\u7684\u503c\u3002\u5b83\u9996\u5148\u68c0\u67e5\u5b83\u7684\u672c\u5730\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u4f46\u662f\u90a3\u91cc\u6ca1\u6709B\u7684\u503c\uff0c\u6240\u4ee5\u5b83\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6B\u5e76\u83b7\u5f97\u503c0\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u3002\u6700\u540e\uff0c\u6211\u4eec\u5728\u5185\u68382\u4e0a\u6267\u884c(4)\uff0c\u5b83\u5c06\u8bfb\u53d6A\u7684\u503c\u3002\u5185\u68382\u7684\u5b58\u50a8\u7f13\u51b2\u533a\u4e2d\u6ca1\u6709A\u503c\uff0c\u56e0\u6b64\u5b83\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u5e76\u83b7\u5f97\u503c0\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u3002\u5728\u672a\u6765\u67d0\u4e2a\u4e0d\u786e\u5b9a\u7684\u65f6\u95f4\u70b9\uff0c\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u6e05\u7a7a\u5b58\u50a8\u7f13\u51b2\u533a\u5e76\u5c06\u66f4\u6539\u4f20\u64ad\u5230\u5185\u5b58\u3002\n\u90a3\u4e48\uff0c\u5728TSO\u4e0b\uff0c\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u6253\u537000\u3002\u8fd9\u662f\u6211\u4eec\u5728\u4e0a\u9762\u5c55\u793a\u7684\u4e00\u79cd\u884c\u4e3a\uff0cSC\u660e\u786e\u6392\u9664\u4e86\u8fd9\u79cd\u884c\u4e3a\uff01\u56e0\u6b64\uff0c\u5b58\u50a8\u7f13\u51b2\u533a\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5458\u610f\u60f3\u4e0d\u5230\u7684\u884c\u4e3a\u3002\n\u662f\u5426\u6709\u4efb\u4f55\u67b6\u6784\u613f\u610f\u91c7\u7528\u8fdd\u80cc\u7a0b\u5e8f\u5458\u76f4\u89c9\u7684\u4f18\u5316\uff1f\u662f!\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u73b0\u4ee3\u4f53\u7cfb\u7ed3\u6784\u90fd\u5305\u542b\u4e00\u4e2a\u5b58\u50a8\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5185\u5b58\u6a21\u578b\u81f3\u5c11\u4e0eTSO\u4e00\u6837\u5f31\u3002\n\u7279\u522b\u662f\uff0c\u5386\u53f2\u60a0\u4e45\u7684x86\u67b6\u6784\u6307\u5b9a\u4e86\u4e00\u79cd\u975e\u5e38\u63a5\u8fd1TSO\u7684\u5185\u5b58\u6a21\u578b\u3002Intel(x86\u7684\u53d1\u8d77\u4eba)\u548cAMD(x86-64\u7684\u53d1\u8d77\u4eba)\u90fd\u4f7f\u7528\u4e0e\u4e0a\u9762\u7684\u7a0b\u5e8f\u7c7b\u4f3c\u7684\u793a\u4f8b\u77f3\u854a\u6d4b\u8bd5\u6765\u6307\u5b9a\u5176\u5185\u5b58\u6a21\u578b\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u63cf\u8ff0\u4e86\u5c0f\u578b\u6d4b\u8bd5\u7684\u53ef\u89c2\u5bdf\u7ed3\u679c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7528\u51e0\u4e2a\u793a\u4f8b\u6765\u6307\u5b9a\u590d\u6742\u7cfb\u7edf\u7684\u884c\u4e3a\u4f1a\u7559\u4e0b\u6a21\u68f1\u4e24\u53ef\u7684\u7a7a\u95f4\u3002\u5251\u6865\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u82b1\u4e86\u5927\u91cf\u7cbe\u529b\u5c06x86-TSO\u6b63\u5f0f\u5316\uff0c\u4ee5\u660e\u786ex86\u7684TSO\u5b9e\u73b0\u7684\u9884\u671f\u884c\u4e3a(\u7279\u522b\u662f\uff0c\u5b83\u4e0e\u5b58\u50a8\u7f13\u51b2\u6982\u5ff5\u7684\u4e0d\u540c\u4e4b\u5904)\u3002\n\u5c3d\u7ba1x86\u653e\u5f03\u4e86\u987a\u5e8f\u4e00\u81f4\u6027\uff0c\u4f46\u5c31\u5176\u5141\u8bb8\u7684\u75af\u72c2\u884c\u4e3a\u800c\u8a00\uff0c\u5b83\u662f\u884c\u4e3a\u6700\u597d\u7684\u4f53\u7cfb\u7ed3\u6784\u4e4b\u4e00\u3002\u5927\u591a\u6570\u5176\u4ed6\u67b6\u6784\u5b9e\u73b0\u7684\u5185\u5b58\u6a21\u578b\u751a\u81f3\u66f4\u5f31\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5141\u8bb8\u66f4\u591a\u4e0d\u76f4\u89c2\u7684\u884c\u4e3a\u3002\u8fd9\u6837\u7684\u6a21\u578b\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u8303\u56f4-SPARC\u4f53\u7cfb\u7ed3\u6784\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u8fd0\u884c\u65f6\u5728\u4e09\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\n\u5176\u4e2d\u4e00\u4e2a\u503c\u5f97\u4e00\u63d0\u7684\u67b6\u6784\u662fARM\uff0c\u5b83\u53ef\u80fd\u4e3a\u4f60\u7684\u667a\u80fd\u624b\u673a\u63d0\u4f9b\u52a8\u529b\u3002ARM\u5185\u5b58\u6a21\u578b\u662f\u51fa\u4e86\u540d\u7684\u4e0d\u591f\u8be6\u7ec6\uff0c\u4f46\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5f31\u6392\u5e8f\u5f62\u5f0f\uff0c\u63d0\u4f9b\u7684\u4fdd\u8bc1\u5f88\u5c11\u3002\u5f31\u6392\u5e8f\u5141\u8bb8\u5bf9\u51e0\u4e4e\u4efb\u4f55\u64cd\u4f5c\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u8fd9\u5b9e\u73b0\u4e86\u5404\u79cd\u786c\u4ef6\u4f18\u5316\uff0c\u4f46\u5728\u6700\u4f4e\u7ea7\u522b\u7f16\u7a0b\u4e5f\u662f\u4e00\u573a\u5669\u68a6\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u6240\u6709\u73b0\u4ee3\u67b6\u6784\u90fd\u5305\u542b\u540c\u6b65\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u5728\u5fc5\u8981\u65f6\u63a7\u5236\u5176\u5bbd\u677e\u7684\u5185\u5b58\u6a21\u578b\u3002\u6700\u5e38\u89c1\u7684\u6b64\u7c7b\u64cd\u4f5c\u662f\u6805\u680f(\u6216\u6805\u680f)\u3002\u5c4f\u969c\u6307\u4ee4\u5f3a\u5236\u5176\u4e4b\u524d\u7684\u6240\u6709\u5185\u5b58\u64cd\u4f5c\u5728\u5176\u53ef\u4ee5\u5f00\u59cb\u4e4b\u540e\u7684\u4efb\u4f55\u5185\u5b58\u64cd\u4f5c\u4e4b\u524d\u5b8c\u6210\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c4f\u969c\u6307\u4ee4\u5728\u7a0b\u5e8f\u6267\u884c\u4e2d\u7684\u7279\u5b9a\u70b9\u6709\u6548\u5730\u6062\u590d\u987a\u5e8f\u4e00\u81f4\u6027\u3002\n\u5f53\u7136\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u5f15\u5165\u5b58\u50a8\u7f13\u51b2\u533a\u548c\u5176\u4ed6\u4f18\u5316\u6765\u907f\u514d\u7684\u884c\u4e3a\u3002\u969c\u788d\u7269\u662f\u4e00\u79cd\u53ef\u4ee5\u8282\u7701\u4f7f\u7528\u7684\u9003\u751f\u8231\u53e3\uff1a\u5b83\u4eec\u53ef\u80fd\u9700\u8981\u6570\u767e\u6b21\u5faa\u73af\u3002\u6b63\u786e\u4f7f\u7528\u5b83\u4eec\u4e5f\u975e\u5e38\u5fae\u5999\uff0c\u7279\u522b\u662f\u5728\u4e0e\u6a21\u68f1\u4e24\u53ef\u7684\u5185\u5b58\u6a21\u578b\u5b9a\u4e49\u7ed3\u5408\u4f7f\u7528\u65f6\u3002\u8fd8\u6709\u4e00\u4e9b\u66f4\u6709\u7528\u7684\u539f\u8bed\uff0c\u6bd4\u5982\u539f\u5b50\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u4f46\u662f\u786e\u5b9e\u5e94\u8be5\u907f\u514d\u76f4\u63a5\u4f7f\u7528\u4f4e\u7ea7\u540c\u6b65\u3002\u4e00\u4e2a\u771f\u6b63\u7684\u540c\u6b65\u5e93\u5c06\u4f7f\u60a8\u7701\u53bb\u75db\u82e6\u7684\u4e16\u754c\u3002\n\u4e0d\u4ec5\u4ec5\u662f\u786c\u4ef6\u5bf9\u5185\u5b58\u64cd\u4f5c\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f-\u7f16\u8bd1\u5668\u4e00\u76f4\u90fd\u5728\u8fd9\u6837\u505a\u3002\u8bf7\u8003\u8651\u4ee5\u4e0b\u8ba1\u5212\uff1a\n\u6b64\u7a0b\u5e8f\u59cb\u7ec8\u6253\u5370100\u4e2a1\u7684\u5b57\u7b26\u4e32\u3002\u5f53\u7136\uff0c\u5728\u5faa\u73af\u5185\u5199\u5165X\u662f\u591a\u4f59\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u4ee3\u7801\u66f4\u6539X\u7684\u503c\u3002\u6807\u51c6\u7684\u5faa\u73af\u4e0d\u53d8\u4ee3\u7801\u8fd0\u52a8\u7f16\u8bd1\u5668\u4f20\u9012\u5c06\u628a\u5199\u5165\u79fb\u51fa\u5faa\u73af\u4ee5\u907f\u514d\u91cd\u590d\uff0c\u7136\u540e\u6b7b\u5b58\u50a8\u6d88\u9664\u5c06\u5220\u9664X=0\uff0c\u7559\u4e0b\uff1a\n\u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u5b8c\u5168\u76f8\u7b49\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5c06\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\u30022\u4e2a\u3002\n\u4f46\u662f\u73b0\u5728\u5047\u8bbe\u6709\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e0e\u6211\u4eec\u7684\u7a0b\u5e8f\u5e76\u884c\u8fd0\u884c\uff0c\u5e76\u4e14\u5b83\u5bf9X\u6267\u884c\u4e00\u6b21\u5199\u5165\uff1a\n\u5728\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a\u53d1\u751f\u4e86\u53d8\u5316\uff1a\u73b0\u5728\uff0c\u53ea\u8981\u53ea\u6709\u4e00\u4e2a0(\u56e0\u4e3a\u5b83\u5c06\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u91cd\u7f6eX=1)\uff0c\u5b83\u5c31\u53ef\u4ee5\u6253\u5370\u50cf11101111\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u3002\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\uff1a\u5b83\u73b0\u5728\u53ef\u4ee5\u6253\u5370\u50cf11100000\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff0c\u4e00\u65e6\u5b83\u5f00\u59cb\u6253\u53700\uff0c\u5b83\u5c31\u518d\u4e5f\u4e0d\u4f1a\u56de\u52301\u4e86\u3002\n\u4f46\u8fd9\u4e24\u4e2a\u66f4\u6539\u884c\u4e3a\u5bf9\u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u5e76\u4e0d\u5e38\u89c1\uff1a\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u6c38\u8fdc\u4e0d\u80fd\u6253\u537011100000\u2026\u2026\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u4e5f\u4e0d\u80fd\u6253\u537011101111\u2026\u2026\u8fd9\u610f\u5473\u7740\u5728\u5b58\u5728\u5e76\u884c\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f18\u5316\u4e0d\u518d\u751f\u6210\u7b49\u4ef7\u7684\u7a0b\u5e8f\uff01\n\u8fd9\u4e2a\u4f8b\u5b50\u6697\u793a\u7684\u662f\uff0c\u5728\u7a0b\u5e8f\u7ea7\u522b\u4e0a\u4e5f\u6709\u4e00\u4e2a\u5185\u5b58\u4e00\u81f4\u6027\u7684\u6982\u5ff5\u3002\u8fd9\u91cc\u7684\u7f16\u8bd1\u5668\u4f18\u5316\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u91cd\u65b0\u6392\u5e8f\uff1a\u5b83\u4ee5\u7a0b\u5e8f\u5458\u53ef\u80fd\u770b\u4e0d\u89c1\u7684\u65b9\u5f0f\u91cd\u65b0\u6392\u5217(\u548c\u5220\u9664)\u5185\u5b58\u8bbf\u95ee\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fdd\u7559\u76f4\u89c2\u7684\u884c\u4e3a\uff0c\u7f16\u7a0b\u8bed\u8a00\u9700\u8981\u5b83\u4eec\u81ea\u5df1\u7684\u5185\u5b58\u6a21\u578b\uff0c\u4e3a\u7a0b\u5e8f\u5458\u63d0\u4f9b\u5173\u4e8e\u5982\u4f55\u91cd\u65b0\u6392\u5e8f\u5176\u5185\u5b58\u64cd\u4f5c\u7684\u5951\u7ea6\u3002\u8fd9\u79cd\u60f3\u6cd5\u5728\u8bed\u8a00\u8bbe\u8ba1\u793e\u533a\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\u3002\u4f8b\u5982\uff0c\u6700\u65b0\u7248\u672c\u7684C++\u548cJava\u90fd\u6709\u4e25\u683c\u5b9a\u4e49\u7684\u5185\u5b58\u6a21\u578b\u6765\u7ba1\u7406\u5b83\u4eec\u7684\u64cd\u4f5c\u3002\n\u6240\u6709\u8fd9\u4e9b\u91cd\u65b0\u6392\u5e8f\u770b\u8d77\u6765\u975e\u5e38\u75af\u72c2\uff0c\u4eba\u7c7b\u4e0d\u53ef\u80fd\u4fdd\u6301\u4e00\u5207\u6b63\u5e38\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u60a8\u53cd\u601d\u60a8\u7684\u7f16\u7a0b\u7ecf\u9a8c\uff0c\u5185\u5b58\u4e00\u81f4\u6027\u53ef\u80fd\u4e0d\u662f\u60a8\u7ecf\u5e38\u9047\u5230\u7684\u95ee\u9898(\u9664\u975e\u60a8\u662f\u4e00\u4e2a\u4f4e\u7ea7\u5185\u6838\u9ed1\u5ba2)\u3002\u6211\u5982\u4f55\u534f\u8c03\u8fd9\u4e24\u4e2a\u6781\u7aef\u5462\uff1f\n\u8bc0\u7a8d\u5728\u4e8e\uff0c\u6211\u5728\u8fd9\u91cc\u63d0\u5230\u7684\u6bcf\u4e2a\u793a\u4f8b\u90fd\u6d89\u53ca\u6570\u636e\u7ade\u4e89\u3002\u6570\u636e\u7ade\u4e89\u662f\u5bf9\u540c\u4e00\u5185\u5b58\u4f4d\u7f6e\u7684\u4e24\u6b21\u8bbf\u95ee\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u662f\u5199\u64cd\u4f5c\uff0c\u5e76\u4e14\u6ca1\u6709\u540c\u6b65\u5f15\u8d77\u7684\u6392\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u6570\u636e\u7ade\u4e89\uff0c\u5219\u91cd\u65b0\u6392\u5e8f\u884c\u4e3a\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u6240\u6709\u4e0d\u76f4\u89c2\u7684\u91cd\u65b0\u6392\u5e8f\u90fd\u5c06\u88ab\u540c\u6b65\u963b\u6b62\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u65e0\u7ade\u4e89\u7684\u7a0b\u5e8f\u662f\u786e\u5b9a\u6027\u7684\uff1a\u4e0d\u540c\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5728\u6bcf\u6b21\u6267\u884c\u65f6\u8d62\u5f97\u7ade\u4e89\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u50cfC++\u548cJava\u8fd9\u6837\u7684\u8bed\u8a00\u4e3a\u65e0\u6570\u636e\u4e89\u7528\u7684\u7a0b\u5e8f(\u6216\u65f6\u9ae6\u7684\u7248\u672c\uff0c\u201cSC for DRF\u201d)\u63d0\u4f9b\u4e86\u4e00\u79cd\u79f0\u4e3a\u987a\u5e8f\u4e00\u81f4\u6027\u7684\u4fdd\u8bc1\u3002\u8fd9\u4e2a\u4fdd\u8bc1\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6ca1\u6709\u6570\u636e\u4e89\u7528\uff0c\u7f16\u8bd1\u5668\u5c06\u63d2\u5165\u6240\u6709\u5fc5\u8981\u7684\u6805\u680f\u6765\u4fdd\u6301\u987a\u5e8f\u4e00\u81f4\u6027\u7684\u5916\u89c2\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6709\u6570\u636e\u4e89\u7528\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8d4c\u6ce8\u90fd\u662f\u65e0\u6548\u7684\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u7531\u5730\u505a\u5b83\u60f3\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u76f4\u89c9\u662f\uff0c\u6709\u6570\u636e\u4e89\u7528\u7684\u7a0b\u5e8f\u5f88\u53ef\u80fd\u662f\u6709\u9519\u8bef\u7684\uff0c\u800c\u4e14\u5c31\u662f\u8fd9\u6837\u3002\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6709\u6570\u636e\u4e89\u7528\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u505a\u5b83\u60f3\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u76f4\u89c9\u662f\uff0c\u6709\u6570\u636e\u4e89\u7528\u7684\u7a0b\u5e8f\u5f88\u53ef\u80fd\u6709\u9519\u8bef\uff0c\u5c31\u662f\u8fd9\u6837\u3002\u5982\u679c\u7a0b\u5e8f\u6709\u6545\u610f\u7684\u6570\u636e\u7ade\u4e89\uff0c\u7a0b\u5e8f\u5458\u5f88\u53ef\u80fd\u65e0\u8bba\u5982\u4f55\u90fd\u77e5\u9053\u4ed6\u4eec\u5728\u505a\u4ec0\u4e48\uff0c\u56e0\u6b64\u53ef\u4ee5\u81ea\u5df1\u8d1f\u8d23\u5185\u5b58\u6392\u5e8f\u95ee\u9898\u3002\n\u65e2\u7136\u60a8\u5df2\u7ecf\u770b\u5230\u4e86\u6240\u6709\u8fd9\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u6700\u91cd\u8981\u7684\u4e00\u8bfe\u5c31\u662f\u60a8\u5e94\u8be5\u4f7f\u7528\u540c\u6b65\u5e93\u3002\u5b83\u5c06\u4e3a\u60a8\u89e3\u51b3\u96be\u770b\u7684\u91cd\u65b0\u6392\u5e8f\u95ee\u9898\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u8fdb\u884c\u4e86\u76f8\u5f53\u5927\u7684\u4f18\u5316\uff0c\u4ee5\u4fbf\u53ea\u5728\u7279\u5b9a\u5e73\u53f0\u4e0a\u8fdb\u884c\u5fc5\u8981\u7684\u540c\u6b65\u3002\u4f46\u662f\u73b0\u5728\u60a8\u77e5\u9053\u4e86\uff0c\u5f53\u8fd9\u4e9b\u5e93\u548c\u5185\u6838\u5904\u7406\u5fae\u5999\u7684\u540c\u6b65\u95ee\u9898\u65f6\uff0c\u5e55\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u5982\u679c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u4f60\u60f3\u66f4\u591a\u5730\u4e86\u89e3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u7ed9\u4e16\u754c\u5e26\u6765\u7684\u5404\u79cd\u4ee4\u4eba\u8ba8\u538c\u7684\u8bb0\u5fc6\u6a21\u578b\uff0c\u6469\u6839\u548c\u514b\u83b1\u666e\u5c14\u5173\u4e8e\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u7684\u7efc\u5408\u8bb2\u5ea7\u6709\u4e00\u7bc7\u5173\u4e8e\u5185\u5b58\u4e00\u81f4\u6027\u548c\u8fde\u8d2f\u6027\u7684\u597d\u6587\u7ae0\u3002\n\u867d\u7136\u5170\u6ce2\u7279\u6700\u521d\u5199\u7684\u662f\u591a\u5904\u7406\u5668\uff0c\u4f46\u4ed6\u540e\u6765\u7684\u5de5\u4f5c\u8f6c\u5411\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5728\u73b0\u4ee3\u5206\u5e03\u5f0f\u7cfb\u7edf\u73af\u5883\u4e2d\uff0c\u201c\u987a\u5e8f\u4e00\u81f4\u6027\u201d\u7684\u542b\u4e49\u4e0e\u67b6\u6784\u5e08\u7684\u610f\u56fe\u7565\u6709\u4e0d\u540c(\u4e14\u66f4\u5f31)\u3002\u67b6\u6784\u5e08\u6240\u8bf4\u7684\u201c\u987a\u5e8f\u4e00\u81f4\u6027\u201d\u66f4\u50cf\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4eba\u5458\u6240\u8bf4\u7684\u201c\u7ebf\u6027\u5316\u201d\u3002--\u21a9\u3002\n\u8ba9\u6211\u4eec\u6682\u4e14\u4e0d\u4fe1\uff0c\u5047\u8bbe\u7f16\u8bd1\u5668\u8fd8\u4e0d\u591f\u806a\u660e\uff0c\u65e0\u6cd5\u5c06\u6b64\u7a0b\u5e8f\u4f18\u5316\u4e3a\u4e00\u4e2a\u6253\u5370\u8c03\u7528\u3002--\u21a9", "note_en": "There are, of course,  only two hard things in computer science: cache invalidation, naming things, and off-by-one errors.But there is another hard problem lurking amongst the tall weeds of computer science: seeing things in order.Whether it be  sorting, un-sorting,or  tweeting,seeing things in order is a challenge for the ages.\n One common ordering challenge is memory consistency,which is the problem of defining how parallel threadscan observe their shared memory state.There are many resources on memory consistency,but most are either  slides(like  mine!)or  dense tomes.My goal is to produce a primer,and motivate why memory consistency is an issue for multicore systems.For the details, you should certainly consult these other excellent sources.\n  Consistency models deal with how multiple threads (or workers, or nodes, or replicas, etc.)see the world.Consider this simple program, running two threads,and where  A and  B are initially both  0:\n  To understand what this program can output,we should think about the order in which its events can happen.Intuitively, there are two obvious orders in which this program could run:\n (1) \u2192 (2) \u2192 (3) \u2192 (4): The first thread runs both its events before the second thread, and so the program prints  01.\n  (3) \u2192 (4) \u2192 (1) \u2192 (2): The second thread runs both its events before the first thread. The program still prints  01.\n There are also some less obvious orders, where the instructions are interleaved with each other:\n (1) \u2192 (3) \u2192 (2) \u2192 (4): The first instruction in each thread runs before the second instruction in either thread, printing  11.\n  (1) \u2192 (3) \u2192 (4) \u2192 (2): The first instruction from the first thread runs, then both instructions from the second thread, then the second instruction from the first thread. The program still prints  11.\n  Intuitively, it shouldn\u2019t be possible for this program to print  00. For line (2) to print  0, we have to print  B before line (3) writes a  1 to it. We can represent this graphically with an edge:\n  An edge from operation  x to operation  y says that  x must  happen before  y to get the behavior we\u2019re interested in. Similarly, for line (4) to print  0, that print must happen before line (1) writes a  1 to  A, so let\u2019s add that to the graph:\n  And finally, of course, each thread\u2019s events should happen in order\u2014(1) before (2), and (3) before (4)\u2014because that\u2019s what we expect from an imperative program. So let\u2019s add those edges too:\n  But now we have a problem. If we start at (1), and follow the edges\u2014to (2), then (3), then (4), then\u2026 (1) again! Remember that the edges are saying which events must happen before other events. So if we start at (1), and end up back at (1) again, the graph is saying that (1) must  happen before itself! Barring a very concerning advance in physics, this is unlikely to be possible.\n Since this execution would require time-warping, we can conclude that this program can\u2019t print  00. Think of it as a  proof by contradiction: suppose this program  could print  00. Then all the ordering rules we just showed must hold. But those rules lead to a contradiction (event (1) happening before itself). So the assumption is false.\n  Architects and programming language designers believe the rules we just explored to be  intuitive to programmers. The idea is that multiple threads running in parallel are manipulating a single main memory, and so everything must happen in order. There\u2019s no notion that two events can occur \u201cat the same time\u201d, because they are all accessing a single main memory.\n Note that this rule says nothing about  what order the events happen in\u2014just that they happen in  some order. The other part of this intuitive model is that events happen in  program order: the events in a single thread happen in the order in which they were written. This is what programmers expect: all sorts of bad things would start happening if my programs were allowed to launch their missiles before checking that the key was turned.\n Together, these two rules\u2014a single main memory, and program order\u2014define  sequential consistency.  Defining sequential consistency is one of the many achievements that earned  Leslie Lamport the  Turing award in 2013.  1\n Sequential consistency is our first example of a  memory consistency model. A memory consistency model (which we often just call a \u201cmemory model\u201d) defines the allowed orderings of multiple threads on a multiprocessor. For example, on the program above, sequential consistency  forbids any ordering that results in printing  00, but  allows some orderings that print  01 and  11.\n A memory consistency model is a  contract between the hardware and software. The hardware promises to only reorder operations in ways allowed by the model, and in return, the software acknowledges that all such reorderings are possible and that it needs to account for them.\n  One nice way to think about sequential consistency is as a switch. At each time step, the switch selects a thread to run, and runs its next event completely. This model preserves the rules of sequential consistency: events are accessing a single main memory, and so happen in order; and by always running the  next event from a selected thread, each thread\u2019s events happen in program order.\n The problem with this model is that it\u2019s  terribly, disastrously slow. We can only run a single instruction at a time, so we\u2019ve lost most of the benefit of having multiple threads run in parallel. Worse, we have to wait for each instruction to finish before we can start the next one\u2014no more instructions can run until the current instruction\u2019s effects become  visible to every other thread.\n  Sometimes, this requirement to wait makes sense. Consider the case where two threads both want to write to a variable  A that another thread wants to read:\n  If we give up on the idea of a single main memory, to allow (1) and (2) to run in parallel, it\u2019s suddenly unclear which value of  A event (3) should read. The single main memory guarantees that there will always be a \u201cwinner\u201d: a single last write to each variable. Without this guarantee, after both (1) and (2) have happened, (3) could see either  1 or  2, which is confusing.\n We call this guarantee  coherence, and it says that all writes  to the same location are seen in the same order by every thread. It doesn\u2019t prescribe the actual order (either (1) or (2) could happen first), but does require that everyone sees the same \u201cwinner\u201d.\n    There\u2019s no reason why performing event (2) (a read from  B) needs to wait until event (1) (a write to  A) completes. They don\u2019t interfere with each other at all, and so should be allowed to run in parallel. Event (1) is particularly slow because it\u2019s a write. This means that with a single view of memory, we can\u2019t run (2) until (1) has become visible to every other thread. On a modern CPU, that\u2019s a very expensive operation due to the cache hierarchy:\n  The only shared memory between the two cores is all the way back at the L3 cache, which often takes upwards of 90 cycles to access.\n  Rather than waiting for the write (1) to become visible, we could instead place it into a  store buffer:\n  Then (2) could start immediately after putting (1) into the store buffer, rather than waiting for it to reach the L3 cache. Since the store buffer is on-core, it\u2019s very fast to access. At some time in the future, the cache hierarchy will pull the write from the store buffer and propagate it through the caches so that it becomes visible to other threads. The store buffer allows us to hide the write latency that would usually be required to make write (1) visible to all the other threads.\n Store buffering is nice because it preserves single-threaded behavior. For example, consider this simple single-threaded program:\n  The read in (2) needs to see the value written by (1) for this program to preserve the expected single-threaded behavior. Write (1) has not yet gone to memory\u2014it\u2019s sitting in core 1\u2019s store buffer\u2014so if read (2) just looks to memory, it\u2019s going to get an old value. But because it\u2019s running on the same CPU, the read can instead just inspect the store buffer directly, see that it contains a write to the location it\u2019s reading, and use that value instead. So even with a store buffer, this program correctly prints  1.\n A popular memory model that allows store buffering is called  total store ordering (TSO). TSO mostly preserves the same guarantees as SC, except that it allows the use of store buffers. These buffers hide write latency, making execution  significantly faster.\n  A store buffer sounds like a great performance optimization, but there\u2019s a catch: TSO allows behaviors that SC does not. In other words, programs running on TSO hardware can exhibit behavior that programmers would find surprising.\n Let\u2019s look at the same first example from above, but this time running on a machine with store buffers. First, we execute (1) and then (3), which both place their data into the store buffer rather than sending it back to main memory:\n  Next we execute (2) on core 1, which is going to read the value of  B. It first inspects its local store buffer, but there\u2019s no value of  B there, so it reads  B from memory and gets the value  0, which it prints. Finally, we execute (4) on core 2, which is going to read the value of  A. There\u2019s no value of  A in core 2\u2019s store buffer, so it reads from memory and gets the value  0, which it prints. At some indeterminate point in the future, the cache hierarchy empties both store buffers and propagates the changes to memory.\n Under TSO, then, this program can print  00. This is a behavior that we showed above to be explicitly ruled out by SC! So store buffers cause behaviors that programmers don\u2019t expect.\n Is there any architecture willing to adopt an optimization that runs against programmer intuition? Yes! It turns out that practically  every modern architecture includes a store buffer, and so has a memory model at least as weak as TSO.\n In particular, the venerable x86 architecture specifies a memory model that is very close to TSO. Both Intel (the originator of x86) and AMD (the originator of x86-64) specify their memory model with example  litmus tests, similar to the programs above, that describe the observable outcomes of small tests. Unfortunately, specifying the behavior of a complex system with a handful of examples leaves room for ambiguity. Researchers at Cambridge have poured significant effort into  formalizing x86-TSO to make clear the intended behaviors of x86\u2019s TSO implementation (and in particular, where it differs from this notion of store buffering).\n  Even though x86 gives up on sequential consistency, it\u2019s among the most well-behaved architectures in terms of the crazy behaviors it allows. Most other architectures implement even weaker memory models, meaning they allow even more unintuitive behaviors. There is an entire spectrum of such models\u2014the  SPARC architecture allows programmer to  choose between three different models at run time.\n One such architecture worth calling out is  ARM, which among other things, probably powers your smartphone. The ARM memory model is notoriously underspecified, but is essentially a form of  weak ordering, which provides very few guarantees. Weak ordering allows almost any operation to be reordered, which enables a variety of hardware optimizations but is also a nightmare to program at the lowest levels.\n  Luckily, all modern architectures include synchronization operations to bring their relaxed memory models under control when necessary. The most common such operation is a  barrier (or  fence). A barrier instruction forces all memory operations before it to complete before any memory operation after it can begin. That is, a barrier instruction effectively reinstates sequential consistency at a particular point in program execution.\n Of course, this is exactly the behavior we were trying to avoid by introducing store buffers and other optimizations. Barriers are an escape hatch to be used sparingly: they can cost hundreds of cycles. They are also extremely subtle to use correctly, especially when combined with ambiguous memory model definitions. There are some more usable primitives, such as  atomic compare-and-swap, but using low-level synchronization directly should really be avoided. A real synchronization library will spare you worlds of pain.\n  It\u2019s not only hardware that reorders memory operations\u2014compilers do it all the time. Consider this program:\n  This program always prints a string of 100  1s. Of course, the write to  X inside the loop is redundant, because no other code changes the value of  X. A standard  loop-invariant code motion compiler pass will move the write outside the loop to avoid repeating it, and  dead store elimination will then remove  X = 0, leaving:\n  These two programs are totally equivalent, in that they will both produce the same output.  2\n But now suppose there\u2019s another thread running in parallel with our program, and it performs a single write to  X:\n  With these two threads running in parallel, the first program\u2019s behavior changes:now, it can print strings like  11101111..., so long as there\u2019s only a singlezero (because it will reset  X=1 on the next iteration).The second program\u2019s behavior also changes:it can now print strings like  11100000...,where once it starts printing zeroes it never goes back to ones.\n But these two changes behaviors are not common to the two programs:the first program can never print  11100000...,nor can the second program ever print  11101111....This means that in the presence of parallelism,the compiler optimization no longer produces an equivalent program!\n What this example is suggesting is that there\u2019s also an idea of memory consistency at the program level.The compiler optimization here is effectively a reordering: it\u2019s rearranging (and removing some) memory accesses in ways that may or may not be visible to programmers.So to preserve intuitive behavior, programming languages need memory models of their own, to provide a contract to programmers about how their memory operations will be reordered.This idea is becoming more common in the language design community. For example, the latest versions of  C++ and  Java have rigorously-defined memory models governing their operations.\n  All this reordering seems crazy insane, and there\u2019s no way a human can keep it all straight.On the other hand, if you reflect on your programming experience, memory consistency is probably not an issue you\u2019ve run into often, if at all (unless you\u2019re a low-level kernel hacker).How do I reconcile these two extremes?\n The trick is that every example I\u2019ve mentioned here has involved a  data race.A data race is two accesses to the same memory location, of which at least one is a write operation,and with no ordering induced by synchronization.If there are no data races, then the reordering behaviors don\u2019t matter,because all unintuitive reorderings will be blocked by synchronization.Note that this doesn\u2019t mean race-free programs are  deterministic: different threads can win the races on each execution.\n In fact, languages such as C++ and Java offer a guarantee known as  sequential consistency for data-race-free programs (or the buzzwordy version, \u201cSC for DRF\u201d).This guarantee says that if your program has no data races, the compiler will insert all the necessary fences to preserve the appearance of sequential consistency.If your program  does have data races, however, all bets are off, and the compiler is free to do whatever it likes.The intuition is that programs with data races are quite likely to be buggy, and there\u2019s no need to provide strong guarantees for such buggy programs. If a program has deliberate data races, the programmer likely knows what they\u2019re doing anyway, and so can be responsible for memory ordering issues themselves.\n  Now that you\u2019ve seen all this mess, the most important lesson is that you should use a synchronization library. It will take care of ugly reordering issues for you. Operating systems are also pretty heavily optimized to have only the synchronization necessary on a particular platform. But now you know what\u2019s going on under the hood when these libraries and kernels deal with subtle synchronization issues.\n If, for some reason, you want to know more about the various abominable memory models computer architecture has inflicted on the world, the Morgan &amp; Claypool synthesis lectures on computer architecture have  a nice entry on memory consistency and coherence.\n Though Lamport was originally writing about multiprocessors, his later work has moved toward distributed systems. In the modern distributed systems context, \u201csequential consistency\u201d means something slightly different (and weaker) than what architects intend. What architects call \u201csequential consistency\u201d is more like what distributed systems folks would call \u201clinearizability\u201d.\u00a0 \u21a9\n  Let\u2019s suspend disbelief for a moment and assume the compiler isn\u2019t smart enough to optimize this program into a single call to  print.\u00a0 \u21a9", "posttime": "2020-06-17 23:38:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u5b58,\u4e00\u81f4\u6027,consistency,\u7a0b\u5e8f", "title": "\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b(2016)", "title_en": "Memory Consistency Models (2016)", "transed": 1, "url": "https://www.cs.utexas.edu/~bornholt/post/memory-models.html", "via": "", "real_tags": ["\u5185\u5b58", "\u4e00\u81f4\u6027", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "c0678717f3a086b77f51503c5326fb9e.png", "infoid": 1006954, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u6761\u76ee\u662f\u6211\u4e0a\u5468\u4e00\u76f4\u5728\u505a\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u5c0f\u9879\u76ee\u3002\u8fd9\u672c\u4e66\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u6216\u5f00\u521b\u6027\u7684\uff0c\u4f46\u6211\u5e0c\u671b\u4f60\u80fd\u4ece\u4e2d\u83b7\u5f97\u4e00\u4e9b\u4e50\u8da3\u3002\n\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u5230MadBoulder\u7f51\u7ad9\u7684\u529f\u80fd\u4e4b\u4e00(\u9879\u76ee\u7684\u7b80\u77ed\u63cf\u8ff0\u5728\u672b\u5c3e)\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6d89\u53ca\u767b\u5c71\u533a\u7684\u9875\u9762\uff0c\u90fd\u6709\u4e00\u4e2a\u5929\u6c14\u5c0f\u90e8\u4ef6\uff0c\u5b83\u63d0\u4f9b\u8be5\u5730\u533a\u7684\u5929\u6c14\u72b6\u51b5\u548c\u5929\u6c14\u9884\u62a5\u7684\u4fe1\u606f\u3002\u8fd9\u4e9b\u4fe1\u606f\u5728\u8ba1\u5212\u6237\u5916\u6d3b\u52a8\u65f6\u603b\u662f\u5f88\u6709\u7528\u7684\u3002\n\u6dfb\u52a0\u8be5\u529f\u80fd\u7684\u4e24\u79cd\u6700\u660e\u663e\u7684\u65b9\u6cd5\u8981\u4e48\u662f\u67e5\u8be2\u5929\u6c14API\u5e76\u5f00\u53d1\u4e00\u4e2a\u5f88\u597d\u7684\u5e03\u5c40\u6765\u663e\u793a\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u8981\u4e48\u662f\u5728\u9875\u9762\u4e2d\u5305\u542b\u4e00\u4e2a\u5373\u7528\u5373\u7528\u7684\u5c0f\u90e8\u4ef6\u3002\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u770b\u8d77\u6765\u66f4\u76f4\u622a\u4e86\u5f53\uff0c\u5de5\u4f5c\u91cf\u66f4\u5c11\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u8d70\u8fd9\u6761\u8def\u3002\n\u5728\u7814\u7a76\u4e86\u4e0d\u540c\u7684\u9009\u9879\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528WeatherWidget.io\u63d0\u4f9b\u7684\u5c0f\u90e8\u4ef6\u3002\u4e0d\u9700\u8981\u6ce8\u518c\uff0c\u4e5f\u4e0d\u9700\u8981\u63d0\u4f9b\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u559c\u6b22\u5b83\u7684\u6837\u5b50\uff0c\u4f46-\u4e0d\u662fUI\u7684\u4eba\uff0c\u4f46\u6211\u8ba4\u4e3a-\u5b83\u7b26\u5408\u7f51\u7ad9\u7684\u611f\u89c9\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u8bbe\u7f6e\u3002\n\u5728\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u5c0f\u90e8\u4ef6\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u4e3a\u6240\u6709\u53d7\u652f\u6301\u7684\u533a\u57df\u751f\u6210\u5c0f\u90e8\u4ef6\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u76f8\u5e94\u7684\u9875\u9762\u3002\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u5bfc\u822a\u5230\u5c06\u4ece\u4e2d\u83b7\u53d6\u5c0f\u90e8\u4ef6\u7684\u9875\u9762\uff0c\u5f15\u5165\u6240\u9700\u4f4d\u7f6e\uff0c\u751f\u6210\u5c0f\u90e8\u4ef6\u4ee3\u7801\uff0c\u7136\u540e\u5c06\u5176\u590d\u5236\u5e76\u7c98\u8d34\u5230\u7f51\u9875\u4e2d\u7684\u6240\u9700\u4f4d\u7f6e\u3002\n\u8fd9\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4f60\u53ea\u9700\u8981\u51e0\u4e2a\u5c0f\u90e8\u4ef6\uff0c\u4e5f\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u9ebb\u70e6\uff0c\u4f46\u662f\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b3\u6b21\u4e4b\u540e\uff0c\u5c31\u4f1a\u53d8\u5f97\u76f8\u5f53\u4e4f\u5473\u548c\u4e4f\u5473\u3002\u6211\u4eec\u76ee\u524d\u670960\u4e2a\u53d7\u652f\u6301\u7684\u9886\u57df\uff0c\u800c\u4e14\u540d\u5355\u8fd8\u5728\u4e0d\u65ad\u589e\u52a0\u3002\u6211\u4e0d\u60f3\u624b\u52a8\u751f\u6210\u6bcf\u4e2a\u5c0f\u90e8\u4ef6\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u4ece\u5f53\u524d\u533a\u57df\u5217\u8868\u4e2d\u81ea\u52a8\u751f\u6210\u5c0f\u90e8\u4ef6\uff0c\u8fd9\u662f\u6211\u4eec\u5df2\u7ecf\u62e5\u6709\u7684\u529f\u80fd\u3002\n\u4e3a\u4e86\u907f\u514d\u624b\u52a8\u751f\u6210\u6bcf\u4e2a\u5c0f\u90e8\u4ef6\uff0c\u6211\u51b3\u5b9a\u5f00\u53d1\u4e00\u4e2a\u80fd\u591f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u811a\u672c\uff1a\n\u4e3a\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u68c0\u67e5\u5c0f\u90e8\u4ef6\u7684\u4ee3\u7801\uff0c\u5e76\u80fd\u591f\u81ea\u5df1\u751f\u6210\u5b83\u3002\n\u4e0b\u9762\uff0c\u6211\u590d\u5236\u4e86\u5728\u5c06\u6240\u9700\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u5df4\u585e\u7f57\u90a3\u5e76\u6309\u4e0b\u83b7\u53d6\u4ee3\u7801\u6309\u94ae\u540e\u83b7\u5f97\u7684\u5c0f\u90e8\u4ef6\u4ee3\u7801\uff1a\n\u53ef\u4ee5\u770b\u5230\uff0c\u5c0f\u90e8\u4ef6\u6709\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u94fe\u63a5(\u6807\u7b7e)\u548c\u4e00\u4e2a\u811a\u672c(\u811a\u672c\u6807\u7b7e)\u3002\n\u5feb\u901f\u68c0\u67e5\u5c0f\u90e8\u4ef6\u4ee3\u7801\u540e\uff0c\u5f88\u660e\u663e\uff0c\u4efb\u4f55\u4f4d\u7f6e\u7684\u5c0f\u90e8\u4ef6\u4ee3\u7801\u5927\u90e8\u5206\u90fd\u662f\u76f8\u540c\u7684\u3002\u5c0f\u90e8\u4ef6\u4ee3\u7801\u7684\u8fd9\u90e8\u5206\u53ef\u4ee5\u5728\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u590d\u5236\u3002\n\u6574\u4e2a\u811a\u672c\u90e8\u5206\u53ef\u4ee5\u6309\u539f\u6837\u590d\u5236\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5305\u542b\u6709\u5173\u6211\u4eec\u8981\u663e\u793a\u5929\u6c14\u9884\u62a5\u7684\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u94fe\u63a5\u4e2d\u7684\u5927\u591a\u6570\u5c5e\u6027\u4e5f\u5f88\u5bb9\u6613\u751f\u6210\u3002\u6211\u4eec\u53ea\u9700\u5c06\u8be5\u4f4d\u7f6e\u66ff\u6362\u4e3a\u5c0f\u90e8\u4ef6\u5f15\u7528\u7684\u5f53\u524d\u4f4d\u7f6e\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u201c\u901a\u7528\u201d\u5c0f\u90e8\u4ef6\u6a21\u677f\u5982\u4e0b\u6240\u793a\uff1a\n\u6211\u4eec\u53ea\u9700\u7528\u9002\u5f53\u7684\u503c\u66ff\u6362\u6807\u7b7eLOCATION_NAME\u548cLOCATION_FORECTORY_URL\uff0c\u7136\u540e\uff0c\u8be5\u4f4d\u7f6e\u7684\u5c0f\u90e8\u4ef6\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7528\u6240\u9700\u7684\u4e3b\u9898\u540d\u79f0\u66ff\u6362Data-Theme\u5c5e\u6027\u7684\u503c\u6765\u66f4\u6539\u4e3b\u9898\u3002\n\u7528\u6211\u4eec\u60f3\u8981\u7684\u4f4d\u7f6e\u66ff\u6362LOCATION_NAME\u5f88\u7b80\u5355\uff0c\u4f46\u662fLOCATION_FORESTORY_URL\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\u6211\u4eec\u9700\u8981\u4e86\u89e3URL\u662f\u5982\u4f55\u4e3a\u4efb\u4f55\u4f4d\u7f6e\u6784\u5efa\u7684\uff0c\u4ee5\u4fbf\u80fd\u591f\u81ea\u5df1\u751f\u6210\u5b83\u3002\u5982\u679c\u6b64\u64cd\u4f5c\u4e0d\u6b63\u786e\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u4e00\u4e2a404\u9875\u9762\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u597d\u5904\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3a\u4e0d\u540c\u4f4d\u7f6e\u751f\u6210\u5c0f\u90e8\u4ef6\u6765\u83b7\u5f97\u4efb\u610f\u591a\u7684\u793a\u4f8bURL\u3002\u6709\u4e86\u8db3\u591f\u7684\u6570\u636e\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u5bf9URL\u6784\u5efa\u8fc7\u7a0b\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3002\n\u9996\u5148\u8981\u505a\u7684\u662f\u68c0\u67e5URL\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u7136\u540e\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0b\uff0c\u770b\u770b\u6211\u4eec\u80fd\u5f97\u5230\u4ec0\u4e48\u3002\u663e\u793a\u5df4\u585e\u7f57\u90a3\u5929\u6c14\u7684\u5c0f\u90e8\u4ef6\u7684URL\u662f\uff1a\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cURL\u6709\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u3002\u9996\u5148\uff0c\u6211\u4eec\u6709\u9886\u57df\u548c\u770b\u4f3c\u662f\u5c0f\u90e8\u4ef6\u8bed\u8a00\u7684\u4e1c\u897f\uff1a\n\u6211\u4eec\u53ef\u4ee5\u9884\u671f\u6b64\u90e8\u4ef6\u5728\u4efb\u4f55\u4f4d\u7f6e\u90fd\u662f\u76f8\u540c\u7684\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u770b\u8d77\u6765\u50cf\u662f\u7279\u5b9a\u4e8e\u4f4d\u7f6e\u7684\u4fe1\u606f\uff1a\n\u5176\u4e2d\u6700\u540e\u4e00\u90e8\u5206\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u5305\u542b\u4f4d\u7f6e\u7684\u540d\u79f0\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u83b7\u5f97\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e(\u897f\u73ed\u7259\u5df4\u4f26\u897f\u4e9a)\u7684\u4e0d\u540c\u8bed\u8a00\u7684url\u6765\u786e\u8ba4\u6211\u4eec\u5f53\u524d\u7684\u5047\u8bbe\uff1a\n\u679c\u7136\uff0c\u7ed3\u679c\u4e0d\u51fa\u6240\u6599\u3002\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5f04\u6e05\u695a\u5b57\u6bcd\u6570\u5b57\u5e8f\u521741d392d17\u548c39d47n0d38\u662f\u4ec0\u4e48\u610f\u601d\u3002\u6211\u7684\u731c\u6d4b\u662f\uff0cURL\u7684\u8fd9\u4e00\u90e8\u5206\u88ab\u7528\u6765\u533a\u5206\u5171\u4eab\u76f8\u540c\u540d\u79f0\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u5b83\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u6211\u76f8\u5f53\u80af\u5b9a\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u5171\u4eab\u540d\u79f0\u3002\u6211\u53c8\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u5730\u70b9\uff0c\u6700\u540e\u5f97\u5230\u4e86\u4ee5\u4e0b\u5217\u8868\uff1a\n\u4f3c\u4e4e\u6211\u4eec\u6709\u67d0\u79cd\u6a21\u5f0f\u3002\u552f\u4e00\u51fa\u73b0\u7684\u5b57\u6bcd\u4f3c\u4e4e\u662fd\u548cn\uff0c\u6570\u5b57\u7684\u6570\u91cf\u4f3c\u4e4e\u4e0d\u8d85\u8fc73\u4f4d\u3002\u4ece\u8fd9\u4e00\u70b9\u7b97\u8d77\uff0c\u8ddd\u79bb\u8f83\u8fd1\u7684\u5730\u70b9\uff0c\u5982\u5df4\u585e\u7f57\u90a3\u548c\u7ef4\u62c9\u8428\u5fb7\u9a6c\u5c14\uff0c\u90fd\u6709\u975e\u5e38\u76f8\u4f3c\u7684\u5e8f\u5217\u3002\u8fd9\u8ba9\u6211\u60f3\u5230\uff0c\u5728\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u7f16\u7801\u7684\u90fd\u662f\u4f4d\u7f6e\u7684\u5750\u6807\u3002\u5982\u679c\u6211\u4eec\u68c0\u67e5\u5df4\u585e\u7f57\u90a3\u7684\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u5b9e\u8fd9\u4e2a\u731c\u6d4b\uff1a\n\u5bf9\u5570!\u3002\u7ed3\u679c\u662f\uff0c\u5750\u6807\u56db\u820d\u4e94\u5165\u4e3a\u4e24\u4e2a\u5c0f\u6570\uff0cd\u7528\u4e8e\u66ff\u6362\u5c0f\u6570\u70b9\uff0cn\u7528\u4e8e\u66ff\u6362\u8d1f\u53f7\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u751f\u6210\u6709\u6548URL\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002\u901a\u7528\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u751f\u6210\u4efb\u4f55\u4f4d\u7f6e\u7684\u5c0f\u90e8\u4ef6\u4ee3\u7801\u6240\u9700\u4e86\u89e3\u7684\u4e00\u5207\u3002\u73b0\u5728\u662f\u7f16\u5199\u5c0f\u90e8\u4ef6\u751f\u6210\u5668\u7684\u65f6\u5019\u4e86\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u6784\u5efa\u5c0f\u90e8\u4ef6\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u73b0\u5728\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\u4e86\u3002\u6211\u4eec\u8ba1\u5212\u7684\u7ed3\u6784\u5c06\u662f\uff1a\n\u4f4d\u7f6e\u662f\u4eceMadBoulder\u63d0\u4f9b\u7684\u533a\u57df\u6570\u636e\u96c6\u4e2d\u83b7\u5f97\u7684\u3002\u8981\u83b7\u5f97\u5750\u6807\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528WeatherWidget.io\u6b63\u5728\u4f7f\u7528\u7684\u76f8\u540c\u670d\u52a1\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u53ef\u80fd\u4f1a\u6709\u5c0f\u7684\u5dee\u5f02\uff0c\u4ece\u800c\u5bfc\u81f4\u65e0\u6548\u7684url\u3002\u4f46\u662f\uff0c\u6211\u627e\u4e0d\u5230\u4ed6\u4eec\u662f\u4ece\u54ea\u91cc\u5f97\u5230\u5750\u6807\u7684\u3002\n\u5728\u6d4b\u8bd5\u4e86\u4e0d\u540c\u7684\u670d\u52a1\u4e4b\u540e\uff0cOpen Cage\u7684\u524d\u5411\u5730\u7406\u7f16\u7801API\u63d0\u4f9b\u4e86\u6700\u63a5\u8fd1\u7684\u7ed3\u679c\uff0c\u5e76\u4e14\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6837\u672c\u54cd\u5e94\u7684\u6458\u5f55\u3002\n{[.]&#34\uff1b\u7ed3\u679c&#34\uff1b\uff1a[{[.]&#34\uff1b\u51e0\u4f55&#34\uff1b\uff1a{&#34\uff1b\u7eac\u5ea6&#34\uff1b\uff1a51.9526599\uff0c&#34\uff1blng&#34\uff1b\uff1a7.632473}}]\uff0c&#34\uff1b\u72b6\u6001&#34\uff1b\uff1a{&#34\uff1b\u4ee3\u7801&#34\uff1b\uff1a200\uff0c&#34\uff1b\u6d88\u606f&#34\uff1b\uff1a&#34\uff1b\u786e\u5b9a&#34\uff1b}\uff0c[.]&#34\uff1bTOTAL_RESULTS&#34\uff1b\uff1a1}\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u6765\u83b7\u53d6\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u5750\u6807\uff1a\ndef get_coels(Location)\uff1a&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u7ed9\u5b9a\u7684\u4f4d\u7f6e\uff0c\u901a\u8fc7opencagedata API&#34\uff1b&#34\uff1b&#34\uff1blocation=location.place(&#34\uff1b&#34\uff1b\uff0c&#34\uff1b+&#34\uff1b)API_KEY=NONE WITH OPEN(&#34\uff1bredentials.txt&#34\uff1b\uff0c&#34\uff1br&#34\uff1b\uff0ccoding=&#39\uff1butf-8)\u68c0\u7d22\u5176\u7eac\u5ea6\u548c\u7ecf\u5ea6\u5750\u6807\u3002)as f\uff1aapi_key=f.read()query_url=&#34\uff1bhttps://api.opencagedata.com/geocode/v1/json?q={}&amp\uff1bkey={}&#34\uff1b.format(\u4f4d\u7f6e\uff0capi_key)inp=urllib.request.urlopen(Query_Url)coord=json.load(Inp)[&#39\uff1bResults&#39\uff1b][0][&#39\uff1bGeometry&#39\uff1b]\u8fd4\u56de\u5750\u6807\u3002\n\u83b7\u5f97\u5750\u6807\u540e\uff0c\u6211\u4eec\u5c06\u7eac\u5ea6\u548c\u7ecf\u5ea6\u56db\u820d\u4e94\u5165\u4e3a\u4e24\u4f4d\u5c0f\u6570\uff0c\u5e76\u901a\u8fc7\u94fe\u63a5\u7eac\u5ea6\u548c\u7ecf\u5ea6\u5e76\u66ff\u6362\u5706\u70b9\u548c\u8d1f\u53f7\u6765\u6784\u5efa\u9884\u671f\u7684\u5e8f\u5217\uff1a\n\u7ed9\u5b9a\u683c\u5f0f\u4e3a{&#39\uff1blat&#39\uff1b\uff1alat\uff0c&#39\uff1blng&#39\uff1b\uff1alng}\u683c\u5f0f\u7684\u4e00\u7ec4\u5750\u6807\uff0c\u683c\u5f0f\u4e3aweatherwidget.io\u9884\u671f\u7684url\u5750\u6807\u683c\u5f0f\u7684\u5b9a\u4e49\u683c\u5f0f_\u5750\u6807(\u5750\u6807)\uff1a&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u3002\u683c\u5f0f\u4e3a\uff1a-\u56db\u820d\u4e94\u5165\u5230\u7b2c\u4e8c\u4e2a\u5c0f\u6570\u70b9\u7684\u5750\u6807-\u88abd\u51cf\u53f7\u66ff\u6362\u4e3an-LAT\u548cLNG\u4e32\u8054\u7684\u5750\u6807[&#39\uff1blat&#39\uff1b]=round(\u5750\u6807[&#39\uff1blat&#39\uff1b]\uff0c2)\u5750\u6807[&#39\uff1blng&#39\uff1b]=round(\u5750\u6807[&#39\uff1blng&#39\uff1b]\uff0c2)lat=str(\u5750\u6807[&#39\uff1blng&#39\uff1b]\uff0c2)\u3002])\u5982\u679clat[\uff1a\uff1a-1].find(&#39\uff1b.&#39\uff1b)==1\uff1alat+=&#34\uff1b0&#34\uff1blat=lat=l.place(.#34\uff1b\uff0c&#34\uff1bd&#34\uff1b).place(&#34\uff1b-&#34\uff1b\uff0c&#34\uff1bn&#34\uff1b)lng=str(\u5750\u6807[&#39\uff1blng&#39\uff1b])\u5982\u679clng[\uff1a\uff1a-1].find(&#39\uff1b.&#39\uff1b)==1\uff1alng+=&#34\uff1b0&#34\uff1blng=lng.place(&#34\uff1b.&#34\uff1b\uff0c&#34\uff1bd&#34\uff1b).place(&#34\uff1b-&#34\uff1b\uff0c&#34\uff1bn&#34\uff1b)\u8fd4\u56deLAT+LNG\u3002\n\u4e4b\u540e\uff0c\u6211\u4eec\u51c6\u5907\u6784\u5efa\u5c0f\u90e8\u4ef6\u7684\u5b8c\u6574url\u548c\u94fe\u63a5\u6807\u8bb0\uff1a\nA_TAG=&#34\uff1b&#34\uff1b&#34\uff1b\u7c7b=&#34\uff1b\u5929\u6c14\u5c0f\u90e8\u4ef6-io&#34\uff1bhref=&#34\uff1bhttps://forecast7.com/_LANG_/_COORDS_/_LOCATION_/&#34\uff1b\u6570\u636e\u6807\u7b7e_1=&#34\uff1b_LOCATIONPRETTY_&#34\uff1b\u6570\u636e\u6807\u7b7e_2=&#34\uff1b\u5929\u6c14&#34\uff1b\u6570\u636e\u4e3b\u9898=&#34\uff1b\u7eaf&#34\uff1b&gt\uff1b_LOCATIONPRETTY_\u5929\u6c14&#34\uff1b&#34\uff1b&#34\uff1bdef get_url_location_name(Location)\uff1a&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u5c06\u7528\u4e8e\u641c\u7d22\u5750\u6807\u7684\u4f4d\u7f6e\u540d\u79f0\u8f6c\u6362\u4e3aweatherwidget.io\u5c0f\u90e8\u4ef6url&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1bReturn Location.Split(&#34\uff1b\uff0c&#34\uff1b)[0].LOWER().place(&#34\uff1b&#34\uff1b\uff0c&#34\uff1b-&#34\uff1b)def get_widget_code(cocords\uff0cPretty\u3002\u4ece\u68c0\u7d22\u5230\u7684\u4fe1\u606f&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u4f4d\u7f6e=get_url_location_name(Pretty_Location)tag=A_tag.place(&#34\uff1b_COORDS_&#34\uff1b\uff0ccoods)tag=tag.place(&#34\uff1b_LOCATIONPRETTY_&#34\uff1b\uff0cPretty_Location)tag=tag.place(&#34\uff1b_location_&#34\uff1b\uff0cCOORDS_&#34\uff1b\uff0cCOORDS_&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\uff0clang)url=&#34\uff1bhttps://forecast7.com/_LANG_/_COORDS_/_LOCATION_/&#34\uff1burl=url.place(&#34\uff1b_coords.place(&#34\uff1b_location_&#34\uff1b\uff0clocation).place(&#34\uff1b_lang_&#34\uff1b\uff0clang)\u8fd4\u56de\u6807\u7b7e\uff0curl\u3002\n\u73b0\u5728\uff0c\u7531\u4e8e\u4eceOpen Cage\u7684API\u83b7\u5f97\u7684\u5750\u6807\u53ef\u80fd\u4e0eWeatherWidget.io\u4f7f\u7528\u7684\u5750\u6807\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u6211\u4eec\u83b7\u5f97\u7684url\u662f\u6709\u6548\u7684\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5411URL\u53d1\u51fa\u8bf7\u6c42\uff0c\u5982\u679c\u8bf7\u6c42\u6210\u529f\uff0c\u5219\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002\ndef is_url_ok(Url)\uff1a&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u6d4b\u8bd5weatherwidget.io\u751f\u6210\u7684url\u662f\u5426\u6709\u6548&#34\uff1b&#34\uff1b&#34\uff1btry\uff1areq=urllib.request.Request(url\uff0cHeaders={&#39\uff1bUser-Agent&#39\uff1b\uff1a&#34\uff1bMagic Browser&#34\uff1b})urllib.request.urlopen(Req)\u9664urllib\u5916\u8fd4\u56deTrue\u3002\n\u5f53\u8bf7\u6c42\u5931\u8d25\u65f6\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u7531\u4e8e\u5750\u6807\u4e0a\u7684\u4e00\u4e9b\u5fae\u5c0f\u5dee\u5f02\u3002\u56e0\u6b64\uff0c\u5f53url\u5931\u8d25\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u4e00\u4e2a\u542f\u53d1\u5f0f\u8fc7\u7a0b\u6765\u4fee\u590d\u5b83\uff0c\u8be5\u8fc7\u7a0b\u6d4b\u8bd5\u4ee5\u7ed9\u5b9a\u5750\u6807\u4e3a\u4e2d\u5fc3\u7684\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u53ef\u80fd\u7684\u5750\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5c06\u7eac\u5ea6\u6216\u7ecf\u5ea6\u589e\u52a0\u6216\u51cf\u5c110.01\uff0c\u5e76\u68c0\u67e5\u8be5\u66f4\u6539\u662f\u5426\u4fee\u590d\u4e86url\uff1a\ndef fix_url(COCORS\uff0cPretty_Name\uff0cLang)\uff1aIF TERTENCE\uff1a\u5bf9\u4e8e\u8303\u56f4\u5185\u7684i(-\u516c\u5dee\uff0c\u516c\u5dee+1)\uff1aNC=COCORDS[&#39\uff1bLAT&#39\uff1b]+i/100\uff0c\u5bf9\u4e8e\u8303\u56f4\u5185\u7684j(-TRANCE\uff0cTRANSION+1)\uff1aNCL=COCORDS[&#39\uff1bLNG&#39\uff1b]+j/100 Formated_COCORDS=FORMAT_COORDIES({&#39\uff1bLAT&#39\uff1b\uff1aNC\uff0c&#39\uff1bLNG&#\u3002\uff1ancl})tag_code\uff0curl=get_widget_code(Formatated_coods\uff0cPretty_Name\uff0clang)if is_url_ok(Url)\uff1areturn tag_code\uff0curl return&#34\uff1b&#34\uff1b\uff0c&#34\uff1b&#34\uff1b\n\u6211\u53d1\u73b0\u5bb9\u5dee\u503c\u4e3a5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8db3\u4ee5\u627e\u5230\u6b63\u786e\u7684url\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u6240\u6709\u4e0d\u540c\u7684\u6b65\u9aa4\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u529f\u80fd\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\ndef main(PRETY_NAME)\uff1aCOCORDS=GET_COORS(PRY_NAME)Formated_COCORDS=Format_COORS(COCORS)tag_code\uff0curl=get_widget_code(Formatated_COCORDS\uff0cPretty_Name\uff0c&#34\uff1bes&#34\uff1b)\u5982\u679c\u4e0d\u662f_url_ok(Url)\uff1atag_code\uff0curl=fix_url(COCORDS\uff0cPretty_Name\uff0c&#34\uff1bes&34\uff1b)with open(&#34\uff1btemplate.\u3002)\u4f5c\u4e3af\uff1af.write(Tag_code+script)\u3002\n\u5176\u4e2d\uff0c\u5728\u672c\u4f8b\u4e2d\uff0ctemplate.html\u53ea\u662f\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\u7684\u7a7ahtml\u6587\u4ef6\u3002\u5728\u51e0\u6b21\u6267\u884c\u4e4b\u540e\uff0c\u5b83\u770b\u8d77\u6765\u5982\u4e0b\u6240\u793a\uff0c\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u65f6\uff0c\u7ed3\u679c\u662f\uff1a\n\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u5728GitHub\u627e\u5230\u4e3a\u8fd9\u4e2a\u5c0f\u9879\u76ee\u5f00\u53d1\u7684\u793a\u4f8b\u4ee3\u7801\u3002\nMadBoulder\u662f\u4e00\u4e2a\u5408\u4f5c\u9879\u76ee\uff0c\u65e8\u5728\u6210\u4e3aBoulder Beta\u7684\u53c2\u8003\u5e93\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u6536\u96c6\u5c3d\u53ef\u80fd\u591a\u7684\u6d4b\u8bd5\u7248\uff0c\u4ece\u6700\u5bb9\u6613\u7684\u5230\u6700\u96be\u7684\u3002\n\u8be5\u7f51\u7ad9\u4f7f\u6d4f\u89c8\u53ef\u7528\u4fe1\u606f\u548c\u67e5\u627e\u6240\u9700\u89c6\u9891\u53d8\u5f97\u66f4\u5bb9\u6613\u3002", "note_en": "This entry is a fun little project I have been working on for the last week. It is nothing special or groundbreaking, but I hope you have some fun reading it.\n One of the features we wanted to add to  MadBoulder\u2019s website (short description of the project at the end) was, for each page refering to a climbing area, a weather widget that provided info about the weather conditions and forecast in the area. This information is always useful when planning an outdoor activity.\n The two most obvious approaches to add the feature are either querying a weather API and developing a nice layout to display the provided info or including a ready-to-use widget in the page. Since the second one seems more straightformward and less work,\u00a0 it is the way I decided to go.\n After taking a look at different options, I decided to use the widget provided by  WeatherWidget.io. No registration nor providing an email required, I like how it looks,\u00a0 \u2013 not a UI guy, but I think \u2013 it matches the website\u2019s feeling and it is easy to setup.\n   After having decided which widget to use, it was time to generate the widgets for all the supported areas and add them to the corresponding page. The most common way of doing so is navigating to the page from where the widget will be obtained, introducing the desired location, generating the widget code and copying and pasting it in the desired location in your webpage.\n  This is quite simple and not that much of a trouble if you only need a few widgets, but after repating the process 3 times it gets quite tedious and boring. We currently have 60 supported areas and the list is still growing. I did not want to have to generate each widget by hand. Ideally, I would like to be able to automatically generate the widgets from the list of current areas, which is something we already have.\n  In order to avoid having to generate each widget manually I decided to develop a script that was able to:\n  In order to do so, we must inspect the code for the widget and be able to generate it ourselves.\n  Below I have copied the widget code I got after having set the desired location to Barcelona and pressing the GET CODE button:\n   It can be seen that the widget has two parts, a link (a tag) and a script (script tag).\n After a quick examination of the widget code, it is clear that most of it will be the same for any location. This parts of the widget code can be replicated without any modification.\n The whole script part can be replicated as-is since it contains no information about the location we want to show the forecast of. Apart from that, most of the attributes in the link are also straightforward to generate. We only have to replace the location by the current location the widget refers to. With this in mind our \u201cgeneric\u201d widget template so far looks like this:\n   We just have to replace the tags  LOCATION_NAME and  LOCATION_FORECAST_URL with the appropiate values and voil\u00e0, the widget for that location will be ready to use. We can also change the theme by replacing the value of the   data-theme attribute with the desired theme name.\n Replacing the  LOCATION_NAME by the location we want is trivial, but the same cannot be said for the  LOCATION_FORECAST_URL. We need to understand how the url is built for any location to be able to generate it ourselves. If this is not done right we will get a 404 page as the one shown below:\n  The good thing is that we can get as many sample urls as we want by generating widgets for different locations. And with enough data we should be able to reverse engineer the url build process.\n  The first thing to do is examine the different parts of the url and see what can we get from a quick glance. The url for the widget that shows Barcelona\u2019s weather is:\n  We can see that the url has two main parts. First we have the domain and what seems to be the widget language:\n  We can expect this part to be the same for any location. After that we have what looks like some location specific information:\n  Where the last part is trivial, since it just contains the name of the location. We can confirm our current hypotheses by checking the url obtained for another location (Valencia, Spain) and in a different language:\n  Sure enough, it came out as expected. Now we just have to figure out what the alphanumeric sequences   41d392d17 and   39d47n0d38 mean. My guess was that this part of the url was being used to differentiate between locations that shared the same name. So, however it was generated, I was quite sure it had to be unique for each location even if they shared names. Testing a few more locations I ended up with the following list:\n    It seems we have some sort of pattern. The only letters that seem to be present are   d and   n, and the number of digits doesn\u2019t seem to exceed 3. A part from that, locations that are close to each other, such as Barcelona and Vilassar de Mar, have very similar sequences. This led me to think that what is being encoded in each of these sequences are the coordinates of the location. If we check Barcelona\u2019s coordinates we can verify this guess:\n  Bingo! As it turns out, coordinates are rounded to two decimals,   d is used to replace decimal dots and   n is used to replace negative signs. We already have all the required information to generate a valid url. The generic format is presented below:\n  We already know everything we need to know to generate the widget code of any location. It is time to code the widget generator.\n  Now that we have all the information required to build the widget it is time to code it. The structure of our program will be:\n  The location is obtained from the area\u2019s dataset provided by MadBoulder. To obtain the coordinates, ideally we would use the same service WeatherWidget.io is using, because if not there can be small discrepancies that will result an invalid url. However, I was not able to find from where they obtain the coordinates.\n After testing different services,  Open Cage\u2019s forward geocoding  API was the one that delivered the closest results and it is free to use. An excerpt of a sample response is shown below.\n { [...] &#34;results&#34; : [ { [...] &#34;geometry&#34; : { &#34;lat&#34; : 51.9526599, &#34;lng&#34; : 7.632473 } } ], &#34;status&#34; : { &#34;code&#34; : 200, &#34;message&#34; : &#34;OK&#34; }, [...] &#34;total_results&#34; : 1}\n  We can then define a simple function that gets the coordinates of a given location:\n def  get_coordinates(location):  &#34;&#34;&#34;  Given a location, retrieve its latitude and longitude  coordinates via opencagedata API  &#34;&#34;&#34; location  = location .replace( &#34; &#34;,  &#34;+&#34;) api_key  =  None  with  open( &#34;credentials.txt&#34;,  &#34;r&#34;, encoding = &#39;utf-8&#39;)  as f: api_key  = f .read() query_url  =  &#34;https://api.opencagedata.com/geocode/v1/json?q={}&amp;key={}&#34; .format( location, api_key) inp  = urllib .request .urlopen(query_url) coords  = json .load(inp)[ &#39;results&#39;][ 0][ &#39;geometry&#39;]  return coords\n  Once the coordinates are obtained, we round the latitude and longitude to two decimals and build the expected sequence by chaining the latitude and longitude and replacing the dots and negative signs:\n def  format_coordinates(coordinates):  &#34;&#34;&#34;  Given a set of coordinates in the form {&#39;lat&#39;: LAT, &#39;lng&#39;: LNG}  format them to weatherwidget.io expected url coordinate format.  The format is:  - coordinates rounded to 2nd decimal  - dots replaced by d  - minus signs replaced by n  - LAT and LNG concatenated  &#34;&#34;&#34; coordinates[ &#39;lat&#39;]  =  round(coordinates[ &#39;lat&#39;],  2) coordinates[ &#39;lng&#39;]  =  round(coordinates[ &#39;lng&#39;],  2) lat  =  str(coordinates[ &#39;lat&#39;])  if lat[:: - 1] .find( &#39;.&#39;)  ==  1: lat  +=  &#34;0&#34; lat  = lat .replace( &#34;.&#34;,  &#34;d&#34;) .replace( &#34;-&#34;,  &#34;n&#34;) lng  =  str(coordinates[ &#39;lng&#39;])  if lng[:: - 1] .find( &#39;.&#39;)  ==  1: lng  +=  &#34;0&#34; lng  = lng .replace( &#34;.&#34;,  &#34;d&#34;) .replace( &#34;-&#34;,  &#34;n&#34;)  return lat  + lng\n  After that we are ready to build the complete url and the link tag of the widget:\n A_TAG  =  &#34;&#34;&#34;    class=&#34;weatherwidget-io&#34;   href=&#34;https://forecast7.com/_LANG_/_COORDS_/_LOCATION_/&#34;   data-label_1=&#34;_LOCATIONPRETTY_&#34; data-label_2=&#34;WEATHER&#34;   data-theme=&#34;pure&#34; &gt;  _LOCATIONPRETTY_ WEATHER &#34;&#34;&#34; def  get_url_location_name(location):  &#34;&#34;&#34;  Transform the location name used to search the coordinates into  the location format used in weatherwidget.io widget url  &#34;&#34;&#34;  return location .split( &#34;,&#34;)[ 0] .lower() .replace( &#34; &#34;,  &#34;-&#34;) def  get_widget_code(coords, pretty_location, lang):  &#34;&#34;&#34;  Generate the a tag of the widget from the retrieved info  &#34;&#34;&#34; location  = get_url_location_name(pretty_location) tag  = A_TAG .replace( &#34;_COORDS_&#34;, coords) tag  = tag .replace( &#34;_LOCATIONPRETTY_&#34;, pretty_location) tag  = tag .replace( &#34;_LOCATION_&#34;, location) tag  = tag .replace( &#34;_LANG_&#34;, lang) url  =  &#34;https://forecast7.com/_LANG_/_COORDS_/_LOCATION_/&#34; url  = url .replace( &#34;_COORDS_&#34;, coords) .replace(  &#34;_LOCATION_&#34;, location) .replace( &#34;_LANG_&#34;, lang)  return tag, url\n  Now, since there might be some differences in the coordinates obtained from Open Cage\u2019s API and the ones used by WeatherWidget.io, we have to make sure that the url we obtained is valid. To do so we can define a simple function that makes a request to the url and returns True if the request was successful and False otherwise.\n def  is_url_ok(url):  &#34;&#34;&#34;  Test if the weatherwidget.io generated url is valid  &#34;&#34;&#34;  try: req  = urllib .request .Request( url, headers ={ &#39;User-Agent&#39;:  &#34;Magic Browser&#34;}) urllib .request .urlopen(req)  return  True  except urllib .error .HTTPError  as e:  print(e)  return  False\n  When the request fails, most of the time it will be due to some small differences in the coordinates. So, when the url fails we can try to fix it with an heuristic process that tests all possible coordinates in a given range centered around the given coordinates. We can increase or decrease the latitude or longitude by 0.01 each iteration and check if that change fixes the url:\n def  fix_url(coords, pretty_name, lang):  if TOLERANCE:  for i  in  range( -TOLERANCE, TOLERANCE  +  1): nc  = coords[ &#39;lat&#39;]  + i / 100  for j  in  range( -TOLERANCE, TOLERANCE  +  1): ncl  = coords[ &#39;lng&#39;]  + j / 100 formated_coords  = format_coordinates( { &#39;lat&#39;: nc,  &#39;lng&#39;: ncl}) tag_code, url  = get_widget_code( formated_coords, pretty_name, lang)  if is_url_ok(url):  return tag_code, url  return  &#34;&#34;,  &#34;&#34;\n  I found that a tolerance value of 5 will be enough to find the correct url most of the times. Now that we have all the different steps covered, our main function might look like:\n  def  main(pretty_name): coords  = get_coordinates(pretty_name) formated_coords  = format_coordinates(coords) tag_code, url  = get_widget_code( formated_coords, pretty_name,  &#34;es&#34;)  if  not is_url_ok(url): tag_code, url  = fix_url(coords, pretty_name,  &#34;es&#34;)  with  open( &#34;template.html&#34;,  &#34;a&#34;)  as f: f .write(tag_code  + SCRIPT)\n  Where  template.html in this case is just an empty html file used for testing purposes. After a few executions it looks like  this which, when opened in a browser results in:\n     As always, you can find the sample code developed for this little project at  GitHub.\n  MadBoulder is a collaborative project that aims to become the reference library of  boulder  betas. Our idea is to collect as many betas as we can, from the easiest to the hardest.\n The website makes it easier to navigate through the available information and find the desired video.", "posttime": "2020-06-17 23:21:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9006\u5411\u5de5\u7a0b,\u63a7\u4ef6,widget,url", "title": "\u5929\u6c14\u63a7\u4ef6\u9006\u5411\u5de5\u7a0b\u548c\u81ea\u52a8\u5316", "title_en": "Weather widget reverse engineering and automation", "transed": 1, "url": "https://bitesofcode.wordpress.com/2020/06/17/automating-weather-widget-generation/", "via": "", "real_tags": ["\u9006\u5411\u5de5\u7a0b", "\u63a7\u4ef6", "widget", "url"]}, {"category": "", "categoryclass": "", "imagename": "91e82279ffe14a90ea719e866b4d87a8.png", "infoid": 1006952, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "a\uff1a=[1\uff0c3\uff0c5\uff0c7\uff0c11]b\uff1a=[x*x for x&lt\uff1b-a\uff0cx&gt\uff1b3]println(B)//\u8f93\u51fa\uff1a[25 49 121]mapData\uff1a={&#34\uff1bHi&#34\uff1b\uff1a1\uff0c&#34\uff1bHello&#34\uff1b\uff1a2\uff0c&#34\uff1bgo+&#34\uff1b\uff1a3}reversedMap\uff1a={v\uff1ak for k\uff0cv&lt\uff1b-mapData}println(VersedMap)//\u8f93\u51fa\uff1amap[1\uff1ahi 2\uff1ahello 3\uff1ago+]\u3002\n\u53e6\u5916\uff0c\u6240\u6709\u7684GO+\u5957\u9910\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210GO\u5957\u9910\uff0c\u7136\u540e\u901a\u8fc7GO\u5bfc\u5165\u3002\nGOP Go Tutorial/#\u5c06Tutorial/\u4e2d\u7684\u6240\u6709Go+\u5305\u8f6c\u6362\u4e3aGo\u5305Go Install./.\u3002\n\u6ce8\u610f\uff1aGOP\u547d\u4ee4\u5f53\u524d\u672a\u63d0\u4f9b(\u5904\u4e8e\u963f\u5c14\u6cd5\u9636\u6bb5)\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86qrun\u548cqgo\u547d\u4ee4\u3002\n\u5f53\u6211\u4eec\u4f7f\u7528GOP GO\u6216GOP INSTALL\u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u751f\u6210GO\u4ee3\u7801\uff0c\u5c06GO+\u5305\u8f6c\u6362\u6210GO\u5305\u3002\n\u5f53\u6211\u4eec\u4f7f\u7528GOP\u8fd0\u884c\u547d\u4ee4\u65f6\uff0c\u5b83\u4e0d\u4f1a\u8c03\u7528GO\u8fd0\u884c\u547d\u4ee4\u3002\u5b83\u751f\u6210\u8981\u6267\u884c\u7684\u5b57\u8282\u7801\u3002\nGOP GO\uff1bgopSrcDir&&gt;\uff1b#\u5c06&lt\uff1bgopSrcDir&&gt;\uff1b\u4e0b\u7684\u6240\u6709GO+\u5305\u8f6c\u6362\u4e3aGO\u5305\uff0c\u9012\u5f52\u5730ygop\u8fd0\u884c&lt\uff1bgopSrcDir&&gt;#\u4f5c\u4e3aGo+Main\u5305\u8fd0\u884c&lt\uff1bgopSrcDir&&gt;#\u4f5c\u4e3aGo\uff1b\u8fd0\u884c&lt\uff1bgopSrcFile&&gt;#Running&lt\uff1bgopSrcFile&&gt;\u3002\nGOP\u547d\u4ee4\u5f53\u524d\u672a\u63d0\u4f9b(\u5904\u4e8e\u963f\u5c14\u6cd5\u9636\u6bb5)\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u63d0\u4f9b\u4ee5\u4e0b\u547d\u4ee4\uff1a\nqrun&lt\uff1bgopSrcDir&gt\uff1b#gop run&lt\uff1bgopSrcDir&gt\uff1bqrun-ASM&lt\uff1bgopSrcDir&gt\uff1b#\u751f\u6210go+\u5b57\u8282\u7801\u540e\u7aef\u7684`asm`\u4ee3\u7801qrun-Quiet&lt\uff1bgopSrcDir&gt\uff1b#don&#39\uff1bt\u751f\u6210\u4efb\u4f55\u7f16\u8bd1\u9636\u6bb5logqrun-debug&lt\uff1bgopSrcDir&gt\uff1b#print debug&gt\uff1b#print debug&lt\uff1b#print debug&gt\uff1b\nqgo-test&lt\uff1bgopSrcDir&gt\uff1b\u5c06GO+\u5305\u8f6c\u6362\u4e3aGO\u5305\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5305\uff0c\u5b83\u90fd\u4f1a\u8c03\u7528Go Run&lt\uff1bgopPkgDir&gt\uff1b/gop_autogen.go\u548cqrun-Quiet&lt\uff1bgopPkgDir&gt\uff1b\u6765\u6bd4\u8f83\u5b83\u4eec\u7684\u8f93\u51fa\u3002\u5982\u679c\u5b83\u4eec\u7684\u8f93\u51fa\u4e0d\u76f8\u7b49\uff0c\u5219\u6d4b\u8bd5\u7528\u4f8b\u5931\u8d25\u3002\n\u6211\u4eec\u5f15\u5165\u6709\u7406\u6570\u4f5c\u4e3a\u539f\u751fGO+\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528-r\u540e\u7f00\u4f5c\u4e3a\u6709\u7406\u5e38\u6570\u3002\u4f8b\u5982\uff0c(1r&lt\uff1b&lt\uff1b200)\u8868\u793a\u503c\u7b49\u4e8e2 200\u7684\u5927\u6574\u6570\u30024/5r\u8868\u793a\u6709\u7406\u5e38\u65704/5\u3002\na\uff1a=1 r&lt\uff1b&lt\uff1b65//bigint\uff0c\u5927\u4e8eint64 b\uff1a=4/5 r//bgrat c\uff1a=b-1/3 r+3*1/2 r println(a\uff0cb\uff0cc)\u3002\nx\uff1a={&#34\uff1bHello&#34\uff1b\uff1a1\uff0c&#34\uff1bxsw&#34\uff1b\uff1a3.4}//map[string]float64 y\uff1a={&#34\uff1bhello&#34\uff1b\uff1a1\uff0c&#34\uff1bxsw&#34\uff1b\uff1a&#34\uff1bgo+&#34\uff1b}//map[string]interface{}z\uff1a={&#34\uff1bhello&#34\uff1b\uff1a1\uff0c&#34\uff1bxsw&#34\uff1b\u7528\u6cd5\uff1a3}//map[String]int Empty\uff1a={}//map[String]\u63a5\u53e3{}\u3002\nx\uff1a=[1\uff0c3.4]//[]float64 y\uff1a=[1]//[]int z\uff1a=[1+2i\uff0c&#34\uff1bxsw&#34\uff1b]//[]interface{}a\uff1a=[1\uff0c3.4\uff0c3+4i]//[]\u590d\u5408128 b\uff1a=[5+6i]//[]\u590d\u5408128 c\uff1a=[&#34\uff1bxsw&#34\uff1b\uff0c3]//[]\u63a5\u53e3{}\u4e3a\u7a7a\uff1a=[]//[]\u63a5\u53e3{}\u3002\na\uff1a=[x*x for x&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11]]b\uff1a=[x*x for x&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11]\uff0cx&gt\uff1b3]c\uff1a=[i+v for i\uff0cv&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11]\uff0ci%2=1]d\uff1a=[k+#34\uff1b\uff0c&#34\uff1b\uff1b\u5bf9\u4e8ek\uff0cs&lt\uff1b-{&#34\uff1bHello&#34\uff1b\uff1a&#34\uff1bxsw&#34\uff1b\uff0c&#34\uff1bHi&#34\uff1b\uff1a&#34\uff1bGo+&#34\uff1b}]arr\uff1a=[1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6]e\uff1a=[[a\uff0cb]\u5bf9\u4e8ea&lt\uff1b-arr\uff0ca&lt\uff1bb\u5bf9\u4e8eb&lt\uff1b-arr\uff0cb&gt\uff1b2]x\uff1a={x\uff1ai for i\uff0cx&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11]}y\uff1a={x\uff1ai for i\uff0cx&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11]\uff0ci%2==1}z\uff1a={v\uff1ak for k\uff0cv&lt\uff1b-{1\uff1a&#34\uff1bHello&#34\uff1b\uff0c3\uff1a&#34\uff1bHi&#34\uff1b\uff0c5\uff1a&#34\uff1bxsw&#34\uff1b\uff0c7\uff1a&#34\uff1bgo+&#34\uff1b}\uff0ck&gt\uff1b3}\u3002\nSUM\uff1a=0\u8868\u793ax&lt\uff1b-[1\uff0c3\uff0c5\uff0c7\uff0c11\uff0c13\uff0c17]\uff0cx&gt\uff1b3{sum+=x}\nimport(&#34\uff1bstrconv&#34\uff1b)\u51fd\u6570add(x\uff0cy\u5b57\u7b26\u4e32)(int\uff0cerror){return strconv.\u3002Atoi(X)\uff1f+strconv.\u3002Atoi(Y)\uff1f\uff0cnil}func addSafe(x\uff0cy\u5b57\u7b26\u4e32)int{return strconv.\u3002Atoi(X)\uff1f\uff1a0+strconv.\u3002Atoi(Y)\uff1f\uff1a0}println(`add(&#34\uff1b100&#34\uff1b\uff0c&#34\uff1b23&#34\uff1b)\uff1a`\uff0cadd(&#34\uff1b100&#34\uff1b\uff0c&#34\uff1b23&#34\uff1b)\uff01)\u3002sum\uff0cerr\uff1a=add(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b)println(`add(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b)\uff1a`\uff0csum\uff0cerr)println(`addSafe(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b)\uff1a`\uff0caddSafe(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b))\u3002\n\u6dfb\u52a0(&#34\uff1b100&#34\uff1b\uff0c&#34\uff1b23&#34\uff1b)\uff1a123add(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b)\uff1a0\u5b57\u7b26\u4e32\u3002Atoi\uff1a\u89e3\u6790&#34\uff1babc&#34\uff1b\uff1a\u65e0\u6548\u8bed\u6cd5=&gt\uff1b\u9519\u8bef\u5806\u6808\uff1amain.add(&#34\uff1b10&#34\uff1b\uff0c&#34\uff1babc&#34\uff1b)/Users/xsw/goplus/tutorial/15-ErrWrap/err_wrap.gop:6\u5b57\u7b26\u4e32\u3002Atoi(Y)\uff1faddSafe(&\u300210&#34\uff1b\uff0c&#34\uff1bABC&#34\uff1b)\uff1a10\u3002\n\u6700\u6709\u8da3\u7684\u662f\uff0c\u8fd4\u56de\u9519\u8bef\u5305\u542b\u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808\u3002\u5f53\u6211\u4eec\u9047\u5230\u9519\u8bef\u65f6\uff0c\u5f88\u5bb9\u6613\u786e\u5b9a\u6839\u672c\u539f\u56e0\u662f\u4ec0\u4e48\u3002\n\u4ee5\u4e0b\u662fGO+\u8d21\u732e\u8005\u7684\u5217\u8868\u3002\u6211\u4eec\u4e3a\u6bcf\u4f4d\u6295\u7a3f\u4eba\u5956\u52b1\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5e10\u6237(XXX@goplus.org)\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u4f7f\u7528\u6b64\u7535\u5b50\u90ae\u4ef6\u5e10\u6237\u63d0\u4ea4\u4ee3\u7801\uff1a\nGo+\u7684\u8d21\u732e\u8005\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u4ed6\u5fc5\u987b\u7b26\u5408\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\uff1a", "note_en": "a  := [ 1,  3,  5,  7,  11] b  := [ x * x  for  x  &lt;-  a,  x  &gt;  3] println( b)  // output: [25 49 121] mapData  := {&#34; Hi&#34;:  1, &#34; Hello&#34;:  2, &#34; Go +&#34;:  3} reversedMap  := { v:  k  for  k,  v  &lt;-  mapData} println( reversedMap)  // output: map[1:Hi 2:Hello 3:Go+]\n          Also, all Go+ packages can be converted into Go packages, and then be imported by Go.\n       gop go tutorial/   # Convert all Go+ packages in tutorial/ into Go packagesgo install ./...\n    Note: The  gop command isn&#39;t provided currently (in alpha stage). Instead, we provide  qrun and  qgo commands.\n         When we use  gop go or  gop install command, it generates Go code to covert Go+ package into Go packages.\n When we use  gop run command, it doesn&#39;t call  go run command. It generates bytecode to execute.\n  gop go  &lt;gopSrcDir &gt;   # Convert all Go+ packages under &lt;gopSrcDir&gt; into Go packages, recursivelygop run  &lt;gopSrcDir &gt;   # Running &lt;gopSrcDir&gt; as a Go+ main packagegop run  &lt;gopSrcFile &gt;   # Running &lt;gopSrcFile&gt; as a Go+ scriptgop install ./...   # Convert all Go+ packages under ./ and go install ./...\n The  gop command isn&#39;t provided currently (in alpha stage). Instead, we provide the following commands:\n qrun  &lt;gopSrcDir &gt;   # gop run &lt;gopSrcDir&gt;qrun -asm  &lt;gopSrcDir &gt;   # generates `asm` code of Go+ bytecode backendqrun -quiet  &lt;gopSrcDir &gt;   # don&#39;t generate any compiling stage logqrun -debug  &lt;gopSrcDir &gt;   # print debug informationqrun -prof  &lt;gopSrcDir &gt;   # do profile and generate profile reportqgo  &lt;gopSrcDir &gt;   # gop go &lt;gopSrcDir&gt;qgo -test  &lt;gopSrcDir &gt;\n  qgo -test &lt;gopSrcDir&gt; converts Go+ packages into Go packages, and for every package, it call  go run &lt;gopPkgDir&gt;/gop_autogen.go and  qrun -quiet &lt;gopPkgDir&gt; to compare their outputs. If their outputs aren&#39;t equal, the test case fails.\n  We introduce rational number as native Go+ types. We use -r suffix as a rational constant. For example, (1r &lt;&lt; 200) means a big int whose value is equal to 2 200. And 4/5r means the rational constant 4/5.\n a  :=  1 r  &lt;&lt;  65  // bigint, large than int64 b  :=  4 / 5 r  // bigrat c  :=  b  -  1 / 3 r  +  3  *  1 / 2 r println( a,  b,  c)\n  x  := {&#34; Hello&#34;:  1, &#34; xsw&#34;:  3.4}  // map[string]float64 y  := {&#34; Hello&#34;:  1, &#34; xsw&#34;: &#34; Go +&#34;}  // map[string]interface{} z  := {&#34; Hello&#34;:  1, &#34; xsw&#34;:  3}  // map[string]int empty  := {}  // map[string]interface{}\n  x  := [ 1,  3.4]  // []float64 y  := [ 1]  // []int z  := [ 1 + 2i, &#34; xsw&#34;]  // []interface{} a  := [ 1,  3.4,  3 + 4i]  // []complex128 b  := [ 5 + 6i]  // []complex128 c  := [&#34; xsw&#34;,  3]  // []interface{} empty  := []  // []interface{}\n  a  := [ x * x  for  x  &lt;- [ 1,  3,  5,  7,  11]] b  := [ x * x  for  x  &lt;- [ 1,  3,  5,  7,  11],  x  &gt;  3] c  := [ i + v  for  i,  v  &lt;- [ 1,  3,  5,  7,  11],  i % 2  ==  1] d  := [ k +&#34;,&#34; + s  for  k,  s  &lt;- {&#34; Hello&#34;: &#34; xsw&#34;, &#34; Hi&#34;: &#34; Go +&#34;}] arr  := [ 1,  2,  3,  4,  5,  6] e  := [[ a,  b]  for  a  &lt;-  arr,  a  &lt;  b  for  b  &lt;-  arr,  b  &gt;  2] x  := { x:  i  for  i,  x  &lt;- [ 1,  3,  5,  7,  11]} y  := { x:  i  for  i,  x  &lt;- [ 1,  3,  5,  7,  11],  i % 2  ==  1} z  := { v:  k  for  k,  v  &lt;- { 1: &#34; Hello&#34;,  3: &#34; Hi&#34;,  5: &#34; xsw&#34;,  7: &#34; Go +&#34;},  k  &gt;  3}\n  sum  :=  0 for  x  &lt;- [ 1,  3,  5,  7,  11,  13,  17],  x  &gt;  3 {  sum  +=  x}\n     import (\t &#34;strconv&#34;) func  add( x,  y  string) ( int,  error) {\t return strconv. Atoi( x)?  + strconv. Atoi( y)?,  nil} func  addSafe( x,  y  string)  int {\t return strconv. Atoi( x)?: 0  + strconv. Atoi( y)?: 0} println( `add(&#34;100&#34;, &#34;23&#34;):`,  add(&#34; 100&#34;, &#34; 23&#34;) !) sum,  err  :=  add(&#34; 10&#34;, &#34; abc&#34;) println( `add(&#34;10&#34;, &#34;abc&#34;):`,  sum,  err) println( `addSafe(&#34;10&#34;, &#34;abc&#34;):`,  addSafe(&#34; 10&#34;, &#34; abc&#34;))\n  add(&#34;100&#34;, &#34;23&#34;): 123add(&#34;10&#34;, &#34;abc&#34;): 0 strconv.Atoi: parsing &#34;abc&#34;: invalid syntax===&gt; errors stack:main.add(&#34;10&#34;, &#34;abc&#34;)\t/Users/xsw/goplus/tutorial/15-ErrWrap/err_wrap.gop:6 strconv.Atoi(y)?addSafe(&#34;10&#34;, &#34;abc&#34;): 10\n  And the most interesting thing is, the return error contains the full error stack. When we got an error, it is very easy to position what the root cause is.\n       Here are  list of Go+ Contributors. We award an email account ( XXX@goplus.org) for every contributor. And we suggest you commit code by using this email account:\n  What does  a contributor of Go+ means? He must meet one of the following conditions:", "posttime": "2020-06-17 23:20:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,language,lt", "title": "GoPlus-\u6570\u636e\u79d1\u5b66\u7684Go+\u8bed\u8a00", "title_en": "GoPlus \u2013 The Go+ language for data science", "transed": 1, "url": "https://www.github.com/qiniu/goplus", "via": "", "real_tags": ["\u6570\u636e", "language", "lt"]}, {"category": "", "categoryclass": "", "imagename": "2987ae840aea0650fd82e5a61b471144.jpg", "infoid": 1006951, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u6d41\u884c\u5bf9\u6211\u4eec\u5de5\u4f5c\u65b9\u5f0f\u7684\u957f\u671f\u5f71\u54cd\u4e4b\u4e00\u53ef\u80fd\u662f\u7ed3\u675f\u4e3a\u671f5\u5929\u3001\u671d\u4e5d\u665a\u4e94\u7684\u5de5\u4f5c\u5468\u3002\n\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff1a\u5bf9\u8bb8\u591a\u516c\u53f8\u6765\u8bf4\uff0c\u8fc7\u53bb\u51e0\u4e2a\u6708\u662f\u5feb\u901f\u8bd5\u9a8c\u671f\uff0c\u4e00\u4e9b\u516c\u53f8\u53d1\u73b0\u7f29\u77ed\u5de5\u4f5c\u65e5\u548c\u6bcf\u5468\u56db\u5929\u5de5\u4f5c\u5236\u53ef\u4ee5\u5f88\u597d\u5730\u53d1\u6325\u4f5c\u7528\u3002\n1.\u8f83\u77ed\u7684\u4e00\u5929\uff1a\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u6c83\u987f\u5546\u5b66\u9662(UPenn\u2018s Wharton School)\u7684\u7ec4\u7ec7\u5fc3\u7406\u5b66\u5bb6\u4e9a\u5f53\u00b7\u683c\u5170\u7279(Adam Grant)\u5728\u201c\u7ecf\u6d4e\u5b66\u4eba\u201d(The Economist)\u4e0a\u5199\u9053\uff0c\u5de5\u4f5c\u65e5\u901a\u5e38\u7ed3\u675f\u65f6(\u4e0b\u53483\u70b9)\u548c\u5de5\u4f5c\u65e5\u7ed3\u675f\u65f6(\u4e0b\u53485\u70b9)\u4e4b\u95f4\u7684\u5dee\u8ddd\u5bf9\u5728\u804c\u7236\u6bcd\u975e\u5e38\u4e0d\u516c\u5e73\u3002\n\u4ed6\u5199\u9053\uff0c\u5982\u679c\u75ab\u60c5\u7206\u53d1\u540e\uff0c\u6211\u4eec\u4e2d\u7684\u66f4\u591a\u4eba\u6700\u7ec8\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u6539\u53d8\u53ef\u80fd\u4f1a\u8ba9\u5de5\u4f5c\u53d8\u5f97\u66f4\u597d\uff1a\u7ed3\u675f\u5b66\u6821\u548c\u5de5\u4f5c\u65e5\u4e4b\u95f4\u7684\u9519\u4f4d\u3002\n\u5728\u8fdc\u7a0b\u529e\u516c\u7684\u540c\u65f6\u517c\u987e\u5de5\u4f5c\u548c\u7167\u770b\u5b69\u5b50\u7684\u7236\u6bcd\u5df2\u7ecf\u627f\u62c5\u4e86\u540c\u4e8b\u4eec\u6ca1\u6709\u7684\u8d1f\u62c5\uff0c\u800c\u5c06\u5de5\u4f5c\u65e5\u7f29\u77ed\u5230\u4e0b\u53483\u70b9\u5c06\u4f1a\u51cf\u8f7b\u5f88\u5927\u7684\u538b\u529b\u3002\n\u683c\u5170\u7279\u6ce8\u610f\u5230\uff1a\u4ee5\u5b66\u4e60\u5de5\u4f5c\u4e3a\u751f\u7684\u4eba\u8bf4\uff1a\u6211\u4eec\u4e00\u5929\u516d\u4e2a\u5c0f\u65f6\u7684\u4e13\u6ce8\u529b\u6bd4\u4e24\u500d\u7684\u5fc3\u4e0d\u5728\u7109\u7684\u65f6\u95f4\u66f4\u80fd\u5bcc\u6709\u521b\u9020\u529b\u548c\u751f\u4ea7\u529b\u3002\n\u4e00\u4e9b\u4eba\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u964d\u4f4e\u5de5\u8d44\u548c\u524a\u51cf\u6210\u672c\u3002\u5176\u4ed6\u4eba\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u786e\u4fdd\u4ed6\u4eec\u7684\u5458\u5de5\u5728\u8fd9\u6bb5\u65f6\u95f4\u4e0d\u4f1a\u611f\u5230\u538b\u529b\u592a\u5927\u6216\u7b4b\u75b2\u529b\u5c3d\u3002\n\u4f46\u6bcf\u5468\u56db\u5929\u5de5\u4f5c\u5236\u53ef\u80fd\u4f1a\u6bd4\u5927\u6d41\u884c\u6301\u7eed\u65f6\u95f4\u66f4\u957f\u3002\u636eNBC\u62a5\u9053\uff0c\u5927\u7ea6\u4e09\u5206\u4e4b\u4e00\u7684\u7f8e\u56fd\u96c7\u4e3b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u66f4\u77ed\u7684\u5de5\u4f5c\u5468\uff0c\u66f4\u591a\u7684\u96c7\u4e3b\u53ef\u80fd\u4f1a\u6548\u4eff\u3002", "note_en": "One of the pandemic&#39;s longer-term impacts on how we work could be the end of the five-day, 9-to-5 workweek.\n What&#39;s happening: For many companies, these past few months have been a period of rapid experimentation \u2014 and some are finding that shorter workdays and four-day weeks can work quite well.\n 1. Shorter days: The gap between when the school day typically ends \u2014 3pm \u2014 and when the workday ends \u2014 5 pm \u2014 &#34;is grossly unfair to working parents,&#34; Adam Grant, an organizational psychologist at UPenn&#39;s Wharton School,  writes in the Economist.\n &#34;If more of us end up working remotely after the pandemic, there is one change that could make work better: ending the misalignment between the school day and the work day,&#34; he writes.\n Parents  juggling work and child care while telecommuting are already bearing burdens their colleagues are not, and shortening the workday to 3pm would take away a great deal of stress.\n Grant notes: &#34;Take it from someone who studies work for a living: we can be every bit as creative and productive in six focused hours a day as in twice as many distracted hours.&#34;\n  Some are doing it so they can reduce pay and cut costs. And others are doing it to ensure their employees don&#39;t get too stressed or burned out during these times.\n But the four-day workweek could outlast the pandemic. About one-third of U.S. employers already offer shorter weeks,  NBC reports, and more could follow suit.", "posttime": "2020-06-17 23:02:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u53ef\u80fd,upend", "title": "\u51a0\u72b6\u75c5\u6bd2\u53ef\u80fd\u98a0\u8986\u4f20\u7edf\u7684\u5de5\u4f5c\u5468", "title_en": "Coronavirus Could Upend Traditional Workweeks", "transed": 1, "url": "https://www.axios.com/coronavirus-jobs-work-week-00ebe7de-2c3d-4eae-91ba-98e65b0abb8c.html", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u53ef\u80fd", "upend"]}, {"category": "", "categoryclass": "", "imagename": "e1ee69d02c1b4d412b7beca8039d18c7.jpeg", "infoid": 1006950, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5305\u62ec\u53cd\u8bfd\u8c24\u8054\u76df(Anti-Defamation League)\u548c\u5168\u56fd\u6709\u8272\u4eba\u79cd\u534f\u8fdb\u4f1a(NAACP)\u5728\u5185\u7684\u51e0\u4e2a\u7f8e\u56fd\u6c11\u6743\u7ec4\u7ec7\u6b63\u5728\u9f13\u52b1\u5927\u5e7f\u544a\u5546\u4eceFacebook Inc.\u64a4\u8d44\u3002\u4ee5\u6297\u8bae\u4ed6\u4eec\u6240\u8bf4\u7684\u8be5\u516c\u53f8\u672a\u80fd\u4f7f\u5176\u5e73\u53f0\u6210\u4e3a\u4e00\u4e2a\u4e0d\u90a3\u4e48\u654c\u610f\u7684\u5730\u65b9\u3002\n\u8fd9\u573a\u8fd0\u52a8\u5c06\u4e8e\u5468\u4e09\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\uff0c\u6b64\u524d\u8fd9\u4e9b\u56e2\u4f53\u4e0eFacebook\u8fdb\u884c\u4e86\u591a\u5e74\u7684\u79c1\u4e0b\u8ba8\u8bba\uff0c\u6d3b\u52a8\u4eba\u58eb\u8868\u793a\uff0c\u8fd9\u4e9b\u8ba8\u8bba\u51e0\u4e4e\u6ca1\u6709\u6539\u53d8\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u5de8\u5934\u6267\u884c\u6709\u5173\u4ec7\u6068\u8a00\u8bba\u548c\u9519\u8bef\u4fe1\u606f\u7684\u653f\u7b56\u7684\u65b9\u5f0f\u3002\u90a3\u4e2a.\u3002", "note_en": "Several American civil-rights groups, including the Anti-Defamation League and the NAACP, are encouraging big advertisers to pull spending from Facebook Inc. to protest what they say is the company\u2019s failure to make its platform a less-hostile place.\n  The campaign, to be announced early on Wednesday, comes after years of private discussions between these groups and Facebook, which the activists say have amounted to little change in the way the social-media giant enforces its policies around hate speech and misinformation. The...", "posttime": "2020-06-17 23:00:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e7f\u544a,facebook,\u7ec4\u7ec7,rights", "title": "\u6c11\u6743\u7ec4\u7ec7\u63a8\u52a8Facebook\u5e7f\u544a\u62b5\u5236", "title_en": "Civil Rights Groups Push for Facebook Ad Boycott", "transed": 1, "url": "https://www.wsj.com/articles/civil-rights-groups-push-for-facebook-ad-boycott-11592379002", "via": "", "real_tags": ["\u5e7f\u544a", "facebook", "\u7ec4\u7ec7", "rights"]}, {"category": "", "categoryclass": "", "imagename": "bebee31025b59095bf171a832e9bf1ae.jpg", "infoid": 1006949, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u5916\uff0c\u8be5\u516c\u53f8\u4eca\u5929\u8fd8\u5ba3\u5e03\uff0c\u5df2\u8058\u8bf7\u5e03\u91cc\u5947\u7279\u00b7\u4f69\u91cc(Bridget Perry)\u62c5\u4efb\u9996\u5e2d\u8425\u9500\u5b98\u3002\u5979\u4e4b\u524d\u9886\u5bfc\u4e86Adobe\u5728\u6b27\u6d32\u3001\u4e2d\u4e1c\u548c\u975e\u6d32\u7684\u8425\u9500\u5de5\u4f5c\u3002\n\u76ee\u524d\uff0c28%\u7684\u8d22\u5bcc500\u5f3a\u4f01\u4e1a\u4f7f\u7528\u5185\u5bb9\u4e30\u5bcc\u7684\u8f6f\u4ef6\u8de8\u5e73\u53f0\u7ba1\u7406\u5176\u5185\u5bb9\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u76ee\u524d\u5171\u67092200\u540d\u4ed8\u8d39\u5ba2\u6237\uff0c\u5176\u4e2d\u5305\u62ecSpotify\u3001\u82f1\u56fd\u72ec\u7acb\u7535\u89c6\u53f0(ITV)\u3001\u5927\u82f1\u535a\u7269\u9986(British Museum)\u3001\u82f1\u56fd\u7535\u4fe1(Telus)\u548cUrban Outfitters\u7b49\u516c\u53f8\u3002\n\u53bb\u5e74\u5e74\u5e95\u52a0\u5165\u516c\u53f8\u7684\u9996\u5e2d\u6267\u884c\u5b98\u53f2\u8482\u592b\u00b7\u65af\u9686(Steve Sloan)\u5c06\u5176\u6210\u529f\u5f52\u529f\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u4eca\u5929\u51e0\u4e4e\u6bcf\u4e00\u5bb6\u4f01\u4e1a\u90fd\u5728\u7814\u7a76\u5982\u4f55\u5b9e\u73b0\u6570\u5b57\u5316\uff0c\u5e76\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u4e3a\u5ba2\u6237\u670d\u52a1-\u800c\u8fd9\u4e00\u8fc7\u7a0b\u53ea\u4f1a\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u7684\u6d41\u884c\u800c\u52a0\u901f\u3002\n\u4ed6\u8bf4\uff1a\u201c\u5341\u5e74\u6216\u5341\u4e94\u5e74\u524d\uff0c\u5f53\u8fd9\u4e9b\u5185\u5bb9\u5e73\u53f0\u6216\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\u88ab\u521b\u5efa\u65f6\uff0c\u5b83\u4eec\u662fa)\u771f\u6b63\u4e3a\u7eaf\u7f51\u7edc\u4e16\u754c\u800c\u5efa\u7684\uff0cb)\u7f51\u7ad9\u662f\u5bf9\u4e00\u4e9b\u5176\u4ed6\u4e1a\u52a1\u7684\u8865\u5145\u3002\u201d\u201c\u4eca\u5929\uff0c\u79fb\u52a8APP\uff0c\u79fb\u52a8\u7f51\u7edc\u4f53\u9a8c\u662f\u8fd9\u4e2a\u661f\u7403\u4e0a\u6bcf\u4e00\u5bb6\u4f01\u4e1a\u7684\u524d\u95e8\u3002\u8fd9\u4e00\u70b9\u5728\u6700\u8fd1\u7684COVID\u5371\u673a\u4e2d\u8868\u73b0\u5f97\u6700\u4e3a\u660e\u663e\uff0c\u6211\u4eec\u770b\u5230\u5f88\u591a\u4f01\u4e1a--\u751a\u81f3\u662f\u90a3\u4e9b\u975e\u5e38\u4f20\u7edf\u7684\u4f01\u4e1a--\u610f\u8bc6\u5230\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u7684\u5ba2\u6237\u80fd\u591f\u4e0e\u4ed6\u4eec\u4e92\u52a8\u7684\u4e3b\u8981\u65b9\u5f0f\u662f\u901a\u8fc7\u6570\u5b57\u4f53\u9a8c\u3002\u201c\u3002\n\u4f46\u65af\u9686\u8ba4\u4e3a\uff0c\u5728\u8003\u8651\u81ea\u5df1\u7684\u9009\u62e9\u65f6\uff0c\u8bb8\u591a\u4eba\u51b3\u5b9a\uff0c\u4ed6\u4eec\u4e0d\u4ec5\u4ec5\u662f\u60f3\u8981\u73b0\u6210\u7684\u4ea7\u54c1\uff0c\u56e0\u4e3a\u8fd9\u5e76\u4e0d\u80fd\u8ba9\u4ed6\u4eec\u5efa\u7acb\u4e00\u4e2a\u5b8c\u5168\u5dee\u5f02\u5316\u7684\u4ea7\u54c1\u3002\n\u4f69\u91cc\u8fd8\u6307\u51fa\uff0c\u8fd9\u4e5f\u662f\u5979\u5728Adobe\u770b\u5230\u7684\uff0c\u56e0\u4e3a\u5b83\u5efa\u7acb\u4e86\u6570\u5b57\u4f53\u9a8c\u4e1a\u52a1\u3002\u5979\u8bf4\uff1a\u201c\u5728Adobe\u9886\u5bfc\u5e02\u573a\u8425\u9500\u65f6\uff0c\u6211\u4eec\u81ea\u5df1\u4e5f\u4f7f\u7528\u4e86\u5b83\u3002\u201d\u56e0\u6b64\uff0c\u6211\u4eec\u4ece\u5e02\u573a\u4e0a\u7684\u5ba2\u6237\u90a3\u91cc\u542c\u5230\u7684\u6311\u6218\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b9e\u65bd\u3001\u56f4\u7ed5\u5b83\u8fdb\u884c\u7ec4\u7ec7\u3001\u5feb\u901f\u5efa\u7acb\u8fd9\u4e9b\u4f53\u9a8c\u5e76\u770b\u5230\u5bf9\u4e1a\u52a1\u7684\u4ef7\u503c\u548c\u5f71\u54cd\u662f\u591a\u4e48\u590d\u6742\u3002\u6211\u8ba4\u4e3a\uff0c\u8fd9\u4e00\u6311\u6218\u7684\u90e8\u5206\u539f\u56e0\u662fAdobe\u63d0\u4f9b\u7684\u90a3\u79cd\u5355\u4e00\u7684\u3001\u4e00\u4f53\u5f0f\u7684\u5957\u4ef6\u3002\u5373\u4f7f\u662f\u4f5c\u4e3aAdobe\u7684\u8425\u9500\u5458\uff0c\u6211\u4eec\u5728\u8fd9\u6837\u7684\u4e0a\u5e02\u65f6\u95f4\u548c\u654f\u6377\u6027\u65b9\u9762\u4e5f\u9762\u4e34\u7740\u6311\u6218\u3002\u56e0\u6b64\uff0c\u6211\u771f\u6b63\u611f\u5174\u8da3\u7684\u662f\uff0cContent\u4ee5\u4e00\u79cd\u975e\u5e38\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u6211\u52a0\u5165Content\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u201c\u3002\n\u65af\u9686\u6307\u51fa\uff0c\u5c06\u8fd9\u8f6e\u878d\u8d44\u6574\u5408\u8d77\u6765\u6709\u70b9\u5192\u9669\u3002Content ful\u7684\u73b0\u6709\u6295\u8d44\u8005\u5728\u5047\u671f\u524d\u540e\u4e0e\u8be5\u516c\u53f8\u63a5\u6d3d\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e0c\u671b\u5bf9\u8be5\u516c\u53f8\u8fdb\u884c\u66f4\u5927\u89c4\u6a21\u7684\u6295\u8d44\uff0c\u4ee5\u63a8\u52a8\u5176\u957f\u671f\u589e\u957f\u3002\u4f46\u5f53\u65f6\uff0c\u8be5\u516c\u53f8\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u7b79\u96c6\u65b0\u8d44\u672c\u3002\n\u201c\u7136\u540e\u57281\u6708\u548c2\u6708\uff0c\u6211\u4eec\u6536\u5230\u4e86\u4e00\u4e9b\u8fd8\u4e0d\u662f\u6295\u8d44\u8005\u7684\u4eba\u7684\u5165\u573a\u5174\u8da3\uff0c\u4ed6\u4eec\u6765\u627e\u6211\u4eec\u8bf4\uff0c\u2018\u563f\uff0c\u6211\u4eec\u771f\u7684\u5f88\u60f3\u6295\u8d44\u8fd9\u5bb6\u516c\u53f8\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8d8b\u52bf\uff0c\u6211\u4eec\u771f\u7684\u76f8\u4fe1\u5b83\u3002\u2019\u65af\u9686\u544a\u8bc9\u6211\uff0c\u6240\u4ee5\u6211\u4eec\u56de\u5230\u5185\u90e8\u4eba\u58eb\u90a3\u91cc\uff0c\u8bf4\uff0c\u2018\u563f\uff0c\u6211\u4eec\u4f1a\u8003\u8651\u5b9e\u9645\u8c03\u6574\u6211\u4eec\u7684\u878d\u8d44\u65f6\u95f4\u8868\u3002\u2019\u201c\u7136\u540e\uff0c\u5c31\u5728\u90a3\u4e2a\u65f6\u5019\uff0cCOVID\u771f\u6b63\u7206\u53d1\u4e86\uff0c\u7279\u522b\u662f\u5728\u5317\u7f8e\u7684\u897f\u6b27\u3002\u201d\n\u201c\u6211\u4eec\u7684\u6295\u8d44\u8005--\u7279\u522b\u662f\u6211\u4eec\u8fd9\u8f6e\u84dd\u5b9d\u77f3\u7684\u4e3b\u8981\u6295\u8d44\u8005--\u771f\u6b63\u5f15\u4eba\u6ce8\u76ee\u7684\u4e00\u70b9\u662f\uff0c\u5f53\u5176\u4ed6\u6240\u6709\u4eba\u90fd\u975e\u5e38\u3001\u975e\u5e38\u5bb3\u6015\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u975e\u5e38\u6e05\u695a\u8fd9\u4e2a\u673a\u4f1a\uff0c\u4ed6\u4eec\u5bf9\u56e2\u961f\u7684\u4fe1\u5fc3\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u6211\u4eec\u5df2\u7ecf\u53d6\u5f97\u7684\u8fdb\u5c55\u7684\u7406\u89e3\u3002\u4ed6\u4eec\u5728\u652f\u6301\u65b9\u9762\u771f\u7684\u662f\u6beb\u4e0d\u754f\u7f29\uff0c\u201c\u65af\u9686\u8bf4\u3002\n\u4e0d\u51fa\u6240\u6599\uff0c\u8be5\u516c\u53f8\u8ba1\u5212\u5229\u7528\u8fd9\u7b14\u65b0\u8d44\u91d1\u6269\u5927\u4e0a\u5e02\u52aa\u529b(\u6bd5\u7adf\u8fd9\u5c31\u662f\u5b83\u8058\u8bf7\u4f69\u91cc\u7684\u539f\u56e0)\uff0c\u4f46\u65af\u9686\u4e5f\u6307\u51fa\uff0c\u5fc3\u6ee1\u610f\u8db3\u7684\u516c\u53f8\u8ba1\u5212\u5728\u7814\u53d1\u65b9\u9762\u6295\u5165\u76f8\u5f53\u5927\u7684\u8d44\u91d1\uff0c\u540c\u65f6\u5e0c\u671b\u5e2e\u52a9\u5ba2\u6237\u89e3\u51b3\u66f4\u591a\u90bb\u8fd1\u7684\u95ee\u9898\u3002", "note_en": "In addition, the company also today announced that it has hired Bridget Perry as its CMO. She previously led Adobe\u2019s marketing efforts across Europe, the Middle East and Africa.\n Currently, 28% of the Fortune 500 use\u00a0Contentful\u00a0to manage their content across platforms. The company says it has a total of 2,200 paying customers right now and these include the likes of\u00a0 Spotify,   \u00a0ITV, the British Museum,\u00a0Telus\u00a0and Urban Outfitters.\n  Steve Sloan, the company\u2019s CEO who joined the company late last year, attributes its success to the fact that virtually every business today is in the process of figuring out how to become digital and serve its customers across platforms \u2013 and that\u2019s a process that has only been accelerated by the coronavirus pandemic.\n \u201cTen or fifteen years ago, when these content platforms or content management systems were created, they were a) really built for a web-only world and b) where the website was a complement to some other business,\u201d he said. \u201cToday, the mobile app, the mobile web experience is the front door to every business on the planet. And that\u2019s never been any more clear than in this recent COVID crisis, where we\u2019ve seen many, many businesses \u2014 even those that are very traditional businesses \u2014 realize that the dominant and, in some cases, only way their customers can interact with them is through that digital experience.\u201d\n But as they are looking at their options, many decide that they\u00a0don\u2019t\u00a0just want to take an off-the-shelf product, Sloan argues, because it\u00a0doesn\u2019t\u00a0allow them to build a\u00a0differentiated\u00a0offering.\n  Perry also noted that this is something she saw at Adobe, too, as it built its digital experience business. \u201cLeading marketing at Adobe, we used it ourselves,\u201d she said. \u201cAnd so the challenge that we heard from customers in the market was how complex it was in some cases to implement, to organize around it, to build those experiences fast and see value and impact on the business. And part of that challenge, I think, stemmed from the kind of monolithic, all-in-one type of suite that Adobe offered. Even as a marketer at Adobe, we had challenges with that kind of time to market and agility. And so what\u2019s really interesting to me \u2014 and one of the reasons why I joined Contentful \u2014 is that Contentful approaches this in a very different way.\u201d\n Sloan noted that putting the round together was a bit of an adventure. Contentful\u2019s existing investors approached the company around the holidays because they wanted to make a bigger investment in the company to fuel its long-term growth. But at the time, the company wasn\u2019t ready to raise new capital yet.\n \u201cAnd then in January and February, we had inbound interest from people who weren\u2019t yet investors, who came to us and said, \u2018hey, we really want to invest in this company, we\u2019ve seen the trend and we really believe in it.\u2019 So we went back to our insiders and said, \u2018hey, we\u2019re going to think about actually moving in our timeline for raising capital,\u201d Sloan told me. \u201cAnd then, right about that time is when COVID really broke out, particularly in Western Europe in North America.\u201d\n  \u201cOne of the things that really stood out about our investors \u2014 and particularly our lead investor for this round Sapphire \u2014 is that when everybody else was really, really frightened, they were really clear about the opportunity, about their belief in the team and about their understanding of the progress we had already made. And they were really unflinching in terms of their support,\u201d Sloan said.\n Unsurprisingly, the company plans to use the new funding to expand its go-to-market efforts (that\u2019s why it hired Perry, after all) but Sloan also noted that\u00a0Contentful\u00a0plans to invest quite a bit into R&amp;D as well as it looks to help its customers solve more adjacent problems as well.", "posttime": "2020-06-17 22:41:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ful,headless", "title": "Content ful\u4e3a\u5176\u65e0\u5934CMS\u7b79\u96c68000\u4e07\u7f8e\u5143\u7684E\u7cfb\u5217\u878d\u8d44", "title_en": "Contentful raises $80M Series E round for its headless CMS", "transed": 1, "url": "https://techcrunch.com/2020/06/17/contentful-raises-80m-series-e-round-for-its-headless-cms/", "via": "", "real_tags": ["ful", "headless"]}, {"category": "", "categoryclass": "", "imagename": "1fe24d46ab9ea991d91673509563dd48.jpg", "infoid": 1006948, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5373\u4f7f\u5728\u610f\u89c1\u90e8\u5206\uff0c\u4e5f\u53ea\u5141\u8bb8\u7ecf\u8fc7\u6279\u51c6\u7684\u60f3\u6cd5\u3002", "note_en": "Even in the opinion section, only approved thought is permitted.", "posttime": "2020-06-17 22:23:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6765\u5230,cultural,\u6279\u51c6", "title": "\u6b22\u8fce\u6765\u5230\u7f8e\u56fd\u7684\u6587\u5316\u5927\u9769\u547d", "title_en": "Welcome to America\u2019s Cultural Revolution", "transed": 1, "url": "https://www.nationalreview.com/2020/06/welcome-to-americas-cultural-revolution/", "via": "", "real_tags": ["\u6765\u5230", "cultural", "\u6279\u51c6"]}, {"category": "", "categoryclass": "", "imagename": "c2b244318cb79afafc48c37e282d80d7.png", "infoid": 1006946, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u627e\u5de5\u4f5c\u6216\u521b\u5efa\u5de5\u4f5c\u805a\u5408\u5668\u65f6\uff0c\u6709\u65f6\u5f88\u96be\u8ddf\u8e2a\u6709\u8da3\u7684\u5de5\u4f5c\u673a\u4f1a\u3002\u5de5\u4f5c\u5e16\u5b50\u6bcf\u5929\u90fd\u4f1a\u66f4\u65b0\uff0c\u6bcf\u5c0f\u65f6\u5de6\u53f3\u5c31\u4f1a\u6709\u65b0\u7684\u5e16\u5b50\u6d8c\u5165\u3002\u518d\u6b21\u624b\u52a8\u8bbf\u95ee\u9875\u9762\u4f1a\u53d8\u5f97\u65e2\u9ebb\u70e6\u53c8\u7d2f\u4eba\u3002\u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u9759\u89c2\u5176\u53d8\uff0c\u8ba9\u5927\u91cf\u7684\u4f18\u60e0\u6d8c\u5165\u4f60\u7684\u90ae\u7bb1\u3002\u7136\u540e\u5bf9\u4f60\u611f\u5174\u8da3\u7684\u4e8b\u60c5\u91c7\u53d6\u884c\u52a8\u3002\n\u5982\u679c\u6211\u4eec\u80fd\u4f7f\u8fd9\u4e2a\u8fc7\u7a0b\u81ea\u52a8\u5316\u5462\uff1f\u6211\u4eec\u9700\u8981\u505a\u4e9b\u4ec0\u4e48\u624d\u80fd\u8ba9\u62db\u8058\u4fe1\u606f\u81ea\u52a8\u53d1\u9001\u5230\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\uff1f\u6700\u597d\u662f\u6bcf\u5c0f\u65f6\u4e00\u6b21\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u53d1\u5e03\u5de5\u4f5c\u7684\u9891\u7387\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u540d\u4e3aScrper.AI\u7684\u65b0\u6269\u5c55\uff0c\u53ea\u9700\u5355\u51fb\u51e0\u4e2a\u6309\u94ae\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\u3002\u5b83\u4f1a\u5e2e\u4f60\u505a\u5269\u4e0b\u7684\u4e8b\u3002\n\u9996\u5148\uff0c\u524d\u5f80https://scraper.ai\uff0c\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u5e76\u5b89\u88c5\u5176\u6269\u5c55\u3002\u53ea\u9700\u89811\u5206\u949f\u3002\n\u7136\u540e\u6211\u4eec\u53bb\u770b\u6211\u4eec\u7684\u5de5\u4f5c\u6e05\u5355\u3002\u6211\u4eec\u60f3\u5f97\u5230\u5728\u4f26\u6566\u5e02\u7684\u6240\u6709\u804c\u4f4d\uff0c\u4e0e\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6709\u5173\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u201cWhat\u201d\u5b57\u6bb5\u4e2d\u952e\u5165\u201cSoftware Engineer\u201d\uff0c\u5728\u201cWHERE\u201d\u5b57\u6bb5\u4e2d\u952e\u5165\u201cLondon\u201d\u3002\u8bf7\u6ce8\u610f\uff0cURL\u66f4\u6539\u4e3a\u201chttps://www.indeed.com/jobs?q=Software%20engineer&amp\uff1bl=London&amp\uff1bvjk=cc297f2eaab0dec8\u201d\n\u6211\u4eec\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u201cVJK\u201d\uff0c\u5982\u679c\u6211\u4eec\u79fb\u9664\u5b83\uff0c\u5b83\u5c31\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002\u8fd9\u662f\u4e00\u4e2a\u6307\u793a\u7b26\uff0c\u8868\u660e\u5b83\u53ef\u80fd\u5bf9\u6211\u4eec\u7684\u67e5\u8be2\u662f\u552f\u4e00\u7684\uff0c\u5e76\u201c\u8ddf\u8e2a\u201d\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u7834\u574f\u529f\u80fd\uff0c\u6211\u4eec\u5220\u9664\u5b83\u662f\u56e0\u4e3a\u66f4\u5e72\u51c0\u7684url\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\n\u7136\u540e\u70b9\u51fb\u201c\u9009\u62e9\u5143\u7d20\u201d\u3002\u8fd9\u624d\u662f\u771f\u6b63\u795e\u5947\u7684\u5f00\u59cb\uff0c\u8fd9\u5c06\u5927\u5927\u7b80\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002\n\u6700\u540e\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u7a81\u51fa\u663e\u793a\u7684\u9875\u9762\uff0c\u60a8\u7684\u9009\u62e9\u4f4d\u4e8e\u53f3\u4e0b\u89d2\u3002\n\u7531\u4e8e\u8fd9\u53ea\u662f10\u4e2a\u5217\u8868\uff0c\u800c\u4e14\u9875\u9762\u8981\u591a\u5f97\u591a\uff0c\u6211\u4eec\u4e5f\u6709\u5174\u8da3\u626b\u63cf\u5176\u4ed6\u9875\u9762\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5c31\u50cf\u9009\u62e9\u4e0b\u4e00\u9875\u6309\u94ae\u4e00\u6837\u7b80\u5355\u3002\u56e0\u6b64\uff0c\u5355\u51fb\u201c\u4e0b\u4e00\u6b65\u201d\uff0c\u7136\u540e\u5355\u51fb\u201c\u4e0b\u4e00\u9875\u6309\u94ae\u201d\u65c1\u8fb9\u7684\u201c\u9009\u62e9\u201d\u6309\u94ae\uff0c\u4ee5\u7a81\u51fa\u663e\u793a\u7f51\u9875\u4e0a\u7684\u201c\u4e0b\u4e00\u6b65\u201d\u6309\u94ae\u3002\n\u5728\u7a81\u51fa\u663e\u793a\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u201cFinish\u201d\u6765\u5b8c\u6210\u8be5\u8fc7\u7a0b\u3002\u8fd9\u5c06\u628a\u6211\u4eec\u5e26\u56dehttps://scraper.ai\u7684\u6982\u89c8\uff0c\u5728\u90a3\u91cc\u6211\u53ef\u4ee5\u770b\u5230\u6211\u63d0\u53d6\u7684\u6570\u636e\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0cScrper.AI\u5c06\u4ee5\u6211\u6307\u5b9a\u7684\u95f4\u9694\u8bbf\u95ee\u9875\u9762\uff0c\u5e76\u76f8\u5e94\u5730\u63d0\u53d6\u548c\u66f4\u65b0\u6211\u8bf7\u6c42\u7684\u6570\u636e\u3002\n\u8fd9\u4e2aGET\u6536\u96c6\u5728\u4e00\u4e2aJSON\u7aef\u70b9\u4e2d\uff0c\u6211\u53ef\u4ee5\u5c06\u5b83\u9988\u9001\u5230\u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u5904\u7406\u5668\u4e2d\uff0c\u4e00\u65e6\u6709\u65b0\u7684\u4e1c\u897f\u53ef\u7528\uff0c\u5c31\u8ba9\u6211\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u6b64\u5217\u8868\u4e5f\u53ef\u7528\u4e8e\u4e0e\u5176\u4ed6\u7f51\u7ad9\u5408\u5e76\u3002\n\u5f88\u5feb\uff0cCSV\u4e0b\u8f7d\u5c06\u53ef\u7528\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528Microsoft Excel\u5206\u6790\u4e00\u4e9b\u5e16\u5b50\u3002\n\u5728\u4e0b\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u4e0d\u540c\u7684WebHook\u81ea\u52a8\u8fd0\u884c\u4e0d\u540c\u7684\u7ba1\u9053\u3002\n\u611f\u8c22\u60a8\u7684\u9605\u8bfb-\u8ba9\u6211\u77e5\u9053\u60a8\u4e0b\u4e00\u6b65\u60f3\u770b\u4ec0\u4e48\uff01", "note_en": "When looking for a job, or creating a job aggregator, it\u2019s sometimes hard to keep track of interesting offers. Job posts get updated daily and new ones flood in every hour or so. Manually visiting the page again becomes cumbersome and tiring. In an ideal world we would just sit back and get the offers flood to your mailbox. Then take action on the ones you\u2019re interested in.\n What if we could automate this process? What would we have to do in order to get job posts send to my email automatically? Preferably every hour as that\u2019s how often jobs get posted.\n Using this new Extension called Scraper.AI it becomes as easy as clicking a few buttons. It does the rest for you.\n   First, head over to  https://scraper.ai and create an account and install their extension. It only takes 1min.\n  Afterwards we head over to our job listing. We want to get all posts in the city of London that are related to Software engineer. So we type \u201cSoftware Engineer\u201d in the \u201cWhat\u201d Field and \u201cLondon\u201d in the \u201cWhere\u201d field. Notice the url changing to \u201c https://www.indeed.com/jobs?q=Software%20engineer&amp;l=London&amp;vjk=cc297f2eaab0dec8\u201d\n We don\u2019t know what\u2019s \u201cvjk\u201d, if we remove it it keeps working. This is an indicator that it might be unique to our query and \u201ctracks\u201d what we\u2019re doing. Since it doesn\u2019t break functionality, we remove it as a cleaner url is easier to work with.\n    Followed by clicking \u201cSelect Element\u201d. This is where the real magic starts and which will simplify the process a lot.\n        On the end you\u2019ll end up with a highlighted page and your selections in bottom right.\n  Since these are only 10 listings, and there are way more pages, we\u2019re interested in scanning the other pages as well. Luckily this is a easy as selecting the next page button. So click \u201cNext\u201d and then click the \u201cSelect\u201d button next to \u201cNext Page Button\u201d to highlight the next button on the webpage.\n   After that\u2019s highlighted we\u2019re finished and can finish the process by clicking \u201cFinish\u201d. This will take us back to the overview at  https://scraper.ai where i can see my extracted data.\n From there on it\u2019s entirely automated, Scraper.AI will visit the page in an interval i specified and extract and update my requested data accordingly.\n  This get\u2019s collected in a JSON endpoint that i can feed into, for example, email processor and let me send an email as soon as something new comes available. This list can also be used to combine with other sites.\n Soon CSV download will be available and we can even analyze some posts using Microsoft Excel.\n In the next part we\u2019ll show how you can run different pipelines automatically using their webhooks.\n Thanks for reading \u2014 let me know what you\u2019d like to see next!", "posttime": "2020-06-17 22:04:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u67e5\u770b,job", "title": "\u5982\u4f55\u4f7f\u7528Scrper.AI\u67e5\u770b\u6765\u81eaindeed.com\u7684\u5de5\u4f5c\u5217\u8868", "title_en": "How to watch job listings from indeed.com using Scraper.AI", "transed": 1, "url": "https://medium.com/@maxim_9663/how-to-watch-job-listings-from-indeed-com-using-scraper-ai-fa7399e80a00", "via": "", "real_tags": ["\u67e5\u770b", "job"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006944, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u9700\u8981\u4e00\u4e2a\u66ff\u4ee3BountySource\u7684\u9009\u62e9\uff0c\u4ed6\u4eec\u505a\u4e86\u4e00\u4ef6\u90aa\u6076\u7684\u4e8b\u60c5\u3002\u8bf7\u5728\u8bc4\u8bba\u4e2d\u53d1\u5e03\u5efa\u8bae\u3002\u53d1\u4ef6\u4eba\uff1aIan Jackson&lt\uff1b*&&gt;\u6536\u4ef6\u4eba\uff1asuppport@bountySoure.com\u4e3b\u9898\uff1aRe\uff1a\u66f4\u65b0\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u65e5\u671f\uff1aWed\uff0cJun\uff0c17 2020 12\uff1a23\uff1a01+0100 Bountysource\u5199\u5165(&#34\uff1b\u66f4\u65b0\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e&34\uff1b)\uff1a&&gt;\u60a8\u6536\u5230\u6b64\u7535\u5b50\u90ae\u4ef6\u662f\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u66f4\u65b0&&gt;\u670d\u52a1\u7684Bountysource\u6761\u6b3e\uff0c\u4ece2020\u5e747\u67081\u65e5\u8d77\u751f\u6548\u30022.13\u8d4f\u91d1\u8d85\u65f6\u3002&gt\uff1b\u5982\u679c\u5728\u8d4f\u91d1\u8fc7\u5e10\u540e\u4e24\u5e74\u5185\u6ca1\u6709\u63a5\u53d7\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\uff0c\u5219&gt\uff1b\u8d4f\u91d1\u5c06\u88ab\u64a4\u56de\uff0c\u800c\u4e3a\u8d4f\u91d1\u8fc7\u5e10\u7684\u91d1\u989d\u5c06\u7531Bountysource\u4fdd\u7559&gt\uff1b\u3002\u5bf9\u4e8e2018\u5e746\u670830\u65e5\u4e4b\u524d\u53d1\u5e03\u7684\u8d4f\u91d1\uff0cBacker\u53ef\u80fd\u4f1a\u57282020\u5e747\u67081\u65e5\u4e4b\u524d\u901a\u8fc7\u8054\u7cfbsupport@bountySoure.com&gt\uff1b\u5c06\u5176\u8d4f\u91d1\u91cd\u65b0\u90e8\u7f72\u5230\u65b0\u7684\u95ee\u9898\u4e0a\u3002\u5982\u679cBacker\u6ca1\u6709\u5728&&gt;\u622a\u6b62\u65e5\u671f\u524d\u91cd\u65b0\u90e8\u7f72\u4ed6\u4eec\u7684\u8d4f\u91d1\uff0c\u8d4f\u91d1\u5c06\u88ab\u64a4\u56de\uff0c\u4e3a\u8d4f\u91d1\u8fc7\u5e10\u7684\u91d1\u989d\u5c06\u7531Bountysource\u4fdd\u7559\u3002&&gt;\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e&&gt;\u6211\u9700\u8981\u505a\u4e9b\u4ec0\u4e48\uff1f&&gt;\u5982\u679c\u60a8\u540c\u610f\u65b0\u6761\u6b3e\uff0c\u60a8\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u5b8c\u6574\u7684\u670d\u52a1\u6761\u6b3e\u3002&&gt;\u5982\u679c\u60a8\u6709\u8d4f\u91d1\uff0c\u5219\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u6216\u8005\uff0c\u5982\u679c&gt\uff1b\u60a8\u4e0d\u540c\u610f\u65b0\u6761\u6b3e\uff0c\u8bf7\u505c\u6b62\u4f7f\u7528BountySource\u3002\u6211\u4e0d\u540c\u610f\u5bf9\u6761\u6b3e\u548c\u6761\u4ef6\u8fdb\u884c\u6b64\u66f4\u6539\u3002\u56e0\u6b64\uff0c\u6211\u4e0d\u4f1a\u518d\u5728BountySourc\u4e0a\u53d1\u5e03\u4efb\u4f55\u8d4f\u91d1\u3002\u6211\u76ee\u524d\u5728https://www.bountysource.com/issues/86138921-rfe-add-a-frontend-for-the-rust-programming-languageThat\u4e0a\u6709\u4e00\u7b14200\u4ebf\u7f8e\u5143\u7684\u60ac\u8d4f\uff0c\u8be5\u60ac\u8d4f\u662f\u57282019\u5e7412\u6708\u53d1\u5e03\u7684\u3002\u73b0\u5728\u8fd8\u4e0d\u6e05\u695a\u8fd9\u7b14\u8d4f\u91d1\u662f\u5426\u4f1a\u5728\u60a8\u7684\u4e24\u5e74\u8d85\u65f6\u671f\u9650\u5185\u7533\u8bf7\u3002\u7531\u4e8e\u6211\u6ca1\u6709\u63a5\u53d7T&A\uff1bC\u7684\u53d8\u66f4\uff0c\u8bf7\u60a8\u786e\u8ba4\uff1a(I)\u5373\u4f7f\u57282021\u5e7412\u6708\u4e4b\u524d\u6ca1\u6709\u63a5\u53d7\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\uff0cBountySource\u4e5f\u4e0d\u4f1a\u4fdd\u7559\u6211\u7684\u8d4f\u91d1\u3002(Ii)\u4f5c\u4e3a\u8d44\u52a9\u8005\uff0c\u5982\u679c\u5728\u6b64\u4e4b\u524d\u63d0\u51fa\u89e3\u51b3\u65b9\u6848\uff0c\u60a8\u5c06\u5141\u8bb8\u6211\u6295\u7968\u51b3\u5b9a\u662f\u5426\u63a5\u53d7\u8be5\u8d4f\u91d1\u3002\u6211\u6000\u7591\u60a8\u6253\u7b97\u4f9d\u8d56\u4e0a\u4e00\u6b21T&amp\uff1bC\u4e2d\u7684\u6761\u6b3e\u7ed9\u4e88\u60a8\u65e0\u9650\u7684\u80fd\u529b\u3002\u5f53\u7136\uff0c\u8fd9\u6837\u7684\u6761\u6b3e\u662f\u4e00\u4e2a\u4e0d\u516c\u5e73\u7684\u5408\u540c\u6761\u6b3e\uff0c\u56e0\u4e3a\u5982\u679c\u5b83\u662f\u6709\u6548\u7684\uff0c\u5b83\u4f1a\u7ed9\u4f60\u6743\u529b\u53bb\u505a\u4f60\u60f3\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u6240\u4ee5\u5b83\u5bf9\u6211\u6ca1\u6709\u7ea6\u675f\u529b\u3002\u6211\u671f\u5f85\u7740\u57287\u67088\u65e5\u4e4b\u524d\u6536\u5230\u60a8\u7684\u56de\u97f3\u3002\u5982\u679c\u4f60\u4e0d\u540c\u610f\uff0c\u6211\u4f1a\u548c\u6211\u7684\u4fe1\u7528\u5361\u516c\u53f8\u5546\u91cf\u8fd9\u4ef6\u4e8b\u3002\u8c22\u8c22\u4f60\u7684\u5173\u6ce8\u3002\u4f0a\u6069\u3002\n\u4ed6\u4eec\u4f1a\u8bd5\u56fe\u8bf4\uff0c\u54e6\uff0c\u8fd9\u90fd\u662f\u53d7\u7f8e\u56fd\u6cd5\u5f8b\u7ba1\u8f96\u7684\uff0c\u4f46\u5f53\u7136\uff0c\u201c\u6d88\u8d39\u8005\u4fe1\u8d37\u6cd5\u6848\u201d(Consumer Credit Act)\u7b2c75\u6761\u89c4\u5b9a\uff0c\u4fe1\u7528\u5361\u516c\u53f8\u5bf9Bountysource\u7684\u8fdd\u7ea6\u8d1f\u6709\u5171\u540c\u8d23\u4efb\uff0c\u82f1\u56fd\u6cd5\u9662\u751a\u81f3\u4f1a\u5c06\u82f1\u56fd\u6d88\u8d39\u8005\u4fdd\u62a4\u6cd5\u9002\u7528\u4e8e\u4e00\u4efd\u58f0\u79f0\u53d7\u7f8e\u56fd\u6cd5\u5f8b\u7ba1\u8f96\u7684\u5408\u540c--\u56e0\u4e3a\u51fa\u4e8e\u6d88\u8d39\u8005\u4fdd\u62a4\uff0c\u4f60\u4e0d\u80fd\u7b7e\u8ba2\u5408\u540c\u3002\u6240\u4ee5\u4fe1\u7528\u5361\u516c\u53f8\u88ab\u5957\u4e0a\u4e86\u94a9\uff0c\u6211\u53ef\u4ee5\u7528\u5b83\u4eec\u4f5c\u4e3a\u6760\u6746\u3002", "note_en": "diziet I need an alternative to BountySource, who have done an evil thing. Please post recommendations in the comments. From: Ian Jackson &lt;*****&gt;To: suppport@bountysource.comSubject: Re: Update to our Terms of ServiceDate: Wed, 17 Jun 2020 12:23:01 +0100Bountysource writes (&#34;Update to our Terms of Service&#34;):&gt; You are receiving this email because we are updating the Bountysource Terms of&gt; Service, effective 1st July 2020.&gt;&gt; What&#39;s changing?&gt; We have added a Time-Out clause to the Bounties section of the agreement:&gt;&gt; 2.13 Bounty Time-Out.&gt; If no Solution is accepted within two years after a Bounty is posted, then the&gt; Bounty will be withdrawn and the amount posted for the Bounty will be retained&gt; by Bountysource. For Bounties posted before June 30, 2018, the Backer may&gt; redeploy their Bounty to a new Issue by contacting support@bountysource.com&gt; before July 1, 2020. If the Backer does not redeploy their Bounty by the&gt; deadline, the Bounty will be withdrawn and the amount posted for the Bounty&gt; will be retained by Bountysource.&gt;&gt; You can read the full Terms of Service here&gt;&gt; What do I need to do?&gt; If you agree to the new terms, you don&#39;t have to do anything.&gt;&gt; If you have a bounty posted prior to June 30, 2018 that is not currently being&gt; solved, email us at support@bountysource.com to redeploy your bounty. Or, if&gt; you do not agree with the new terms, please discontinue using Bountysource.I do not agree to this change to the Terms and Conditions.Accordingly, I will not post any more bounties on BountySource.I currently have one outstanding bounty of $200 on https://www.bountysource.com/issues/86138921-rfe-add-a-frontend-for-the-rust-programming-languageThat was posted in December 2019. It is not clear now whether thatbounty will be claimed within your 2-year timeout period.Since I have not accepted the T&amp;C change, please can you confirm that(i) My bounty will not be retained by BountySource even if no solution is accepted by December 2021.(ii) As a backer, you will permit me to vote on acceptance of that bounty should a solution be proposed before then.I suspect that you intend to rely on the term in the previous T&amp;Cgiving you unlimited ability to modify the terms and conditions. Ofcourse such a term is an unfair contract term, because if it wereeffective it would give you the power to do whatever you like. So itis not binding on me.I look forward to hearing from you by the 8th of July. If I do nothear from you I will take the matter up with my credit card company.Thank you for your attention.Ian.\n They will try to say &#34;oh it&#39;s all governed by US law&#34; but of course section 75 of the Consumer Credit Act makes the card company jointly liable for Bountysource&#39;s breach of contract and a UK court will apply UK consumer protection law even to a contract which says it is to be governed by US law - because you can&#39;t contract out of consumer protection. So the card company are on the hook and I can use them as a lever.", "posttime": "2020-06-17 22:02:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bountysource,turned", "title": "BountySource\u5df2\u7ecf\u53d8\u6210\u4e86\u90aa\u6076\u7684\u9009\u62e9\uff1f", "title_en": "BountySource have turned evil \u2013 alternatives?", "transed": 1, "url": "https://diziet.dreamwidth.org/5938.html", "via": "", "real_tags": ["turned"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006943, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6628\u5929\uff0c\u6211\u5174\u594b\u5730\u5411\u4e00\u4f4d\u670b\u53cb\u63a8\u8350\uff0c\u8ba9\u4ed6\u8bd5\u7740\u5728\u5bb6\u91cc\u505a\u4e00\u4e9b\u9178\u5976\u3002\u7136\u540e\u6211\u610f\u8bc6\u5230\u6211\u7684\u4e2a\u4eba\u98df\u8c31\u6709\u70b9\u5927\u6742\u70e9\uff0c\u6240\u4ee5\u6211\u60f3\u6211\u5e94\u8be5\u8bd5\u7740\u628a\u5b83\u5199\u51fa\u6765\u3002\n\u8fd9\u4e2a\u98df\u8c31\u5e76\u4e0d\u5b8c\u7f8e\uff1a\u5f53\u4f7f\u7528\u751f\u5976\u65f6\uff0c\u5728\u57f9\u517b\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u5976\u6cb9\u4ecd\u7136\u4f1a\u5206\u79bb\u5230\u9876\u90e8\u3002(\u6211\u5b81\u613f\u628a\u5b83\u4eec\u90fd\u6df7\u5728\u4e00\u8d77\uff0c\u4f46\u6211\u731c\u4f60\u53ef\u4ee5\u53eb\u5b83\u201c\u5976\u6cb9\u4e0a\u8863\u201d\uff01)\u3002\n\u6211\u5e0c\u671b\u6709\u4e00\u5929\u80fd\u6dfb\u52a0\u56fe\u7247\uff0c\u4f46\u76ee\u524d\uff0c\u6211\u63a8\u8350Fankhauser\u535a\u5ba2\u4e0a\u7684\u56fe\u7247\u3002\n\u9178\u5976\u7684\u5473\u9053\u53d6\u51b3\u4e8e\u4f60\u653e\u5728\u91cc\u9762\u7684\u4e1c\u897f\u3002\u6211\u901a\u5e38\u4f1a\u5bf9\u98df\u8c31\u6240\u9700\u7684\u4e00\u5207\u8fdb\u884c\u6d88\u6bd2\uff1a\n\u628a\u6240\u6709\u4e1c\u897f\u90fd\u653e\u8fdb\u6d17\u7897\u673a(\u4e0d\u5e26\u80a5\u7682)\u5e7f\u544a\u91cc\uff0c\u8ba9\u5b83\u8fd0\u8f6c\uff0c\u76f4\u5230\u201c\u6d88\u6bd2\u201d\u706f\u53d8\u6210\u7eff\u8272\uff1b\u6216\u8005\u3002\n\u628a\u6240\u6709\u4e1c\u897f\u90fd\u653e\u8fdb\u4e00\u4e2a\u5e95\u90e8\u6709\u51e0\u82f1\u5bf8\u6df1\u7684\u5927\u9505\u91cc\u3002\u628a\u6c34\u70e7\u5f00\uff0c\u6162\u716e10\u5206\u949f\u3002(\u8fd9\u9879\u6280\u672f\u6765\u81ea\u4e0a\u9762\u7684Fankhauser\u3002)\u3002\n\u6709\u65f6\u6211\u4f1a\u5728\u8fd9\u4e00\u6b65\u5fd8\u8bb0\u4e00\u4ef6\u4e1c\u897f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u5c3d\u53ef\u80fd\u5730\u628a\u5b83\u6d17\u5e72\u51c0\uff0c\u5e0c\u671b\u80fd\u6709\u6700\u597d\u7684\u7ed3\u679c\u3002\u6211\u4ece\u6765\u6ca1\u6709\u5403\u8fc7\u771f\u6b63\u8150\u70c2\u7684\u4e1c\u897f\uff0c\u4f46\u6211\u786e\u5b9e\u6709\u4e00\u6279\u6709\u70b9\u5f00\u83f2\u5c14\u5473\u9053\u7684\u4e1c\u897f\uff01\u6211\u731c\u5b83\u88ab\u9175\u6bcd\u6c61\u67d3\u4e86\u3002\u6211\u8fd8\u662f\u5403\u4e86\u5b83\uff0c\ud83e\udd37\u200d\u3002\nFankhauser\u5efa\u8bae\u5c06\u6b64\u6b65\u9aa4\u7528\u4e8e\u5df4\u6c0f\u6740\u83cc\u76ee\u7684\uff0c\u4ee5\u6740\u706d\u4e0d\u9700\u8981\u7684\u7ec6\u83cc\u3002Brod&amp\uff1bTaylor\u7684\u914d\u65b9\u89c4\u5b9a\u4e86\u66f4\u9ad8\u7684\u6e29\u5ea6(195\u534e\u6c0f\u5ea6)\u548c\u66f4\u957f\u7684\u4fdd\u6301\u65f6\u95f4\uff0c\u4ee5\u4fbf\u6405\u4e71\u86cb\u767d\u8d28\uff0c\u83b7\u5f97\u66f4\u7a20\u7684\u9178\u5976\u3002(\u6211\u771f\u7684\u4e0d\u77e5\u9053\u5b83\u662f\u600e\u4e48\u505a\u5230\u7684\u3002\u6211\u8bfb\u5230\u5b83\u201c\u53d8\u6027\u4e73\u6e05\u86cb\u767d\u201d\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u76f8\u4fe1\uff0c\u56e0\u4e3a\u8fd9\u548c\u4f60\u505a\u4e73\u6e05\u4e73\n\u4e0d\u7ba1\u600e\u6837\uff0c\u9996\u5148\u628a\u725b\u5976\u52a0\u70ed\u5230190\u534e\u6c0f\u5ea6\uff0c\u7136\u540e\u628a\u5b83\u4ece\u706b\u4e0a\u62ff\u51fa\u676520\u5206\u949f\u3002\n\u771f\u6b63\u7684\u8bc0\u7a8d\u662f\u4e0d\u8981\u628a\u725b\u5976\u70e7\u7126\u3002\u6bcf\u5f53\u6211\u5728\u7089\u5b50\u4e0a\u7684\u9505\u91cc\u716e\u5b83\u7684\u65f6\u5019\uff0c\u4e0d\u7ba1\u6211\u7528\u591a\u5c11\u5c0f\u706b\u6405\u62cc\uff0c\u6211\u90fd\u4f1a\u628a\u5b83\u70e7\u5728\u5e95\u90e8\u3002\u70e7\u725b\u5976\u662f\u4e00\u79cd\u53cc\u91cd\u6253\u51fb\uff1a\u5b83\u4f1a\u4f7f\u4e00\u4e9b\u725b\u5976\u7cd6\u7126\u7cd6\uff0c\u7ed9\u9178\u5976\u5e26\u6765\u4e00\u4e1d\u5947\u602a\u7684\u5473\u9053\uff0c\u800c\u4e14\u5b83\u50cf\u6c34\u6ce5\u4e00\u6837\u7c98\u5728\u9505\u5e95(\u96ea\u4e0a\u52a0\u971c)\u3002\n\u6700\u540e\uff0c\u6211\u627e\u5230\u4e86\u4e00\u79cd\u4e0d\u70e7\u725b\u5976\u7684\u65b9\u6cd5\u3002\u6211\u628a\u4e00\u7f502\u52a0\u4ed1\u7684\u725b\u5976\u653e\u8fdb\u7f50\u5934\u91cc(\u6ca1\u6709\u76d6\u5b50)\uff0c\u628a\u7f50\u5934\u88c5\u6ee1\u6c34\uff0c\u7136\u540e\u50cf\u4e00\u4e2a\u5de8\u5927\u7684\u53cc\u9505\u4e00\u6837\u4f7f\u7528\u5b83\u3002\u5c31\u50cf\u53cc\u9505\u4e00\u6837\uff0c\u70ed\u6c34\u4f1a\u7f13\u51b2\u6e29\u5ea6(\u5b83\u4e0d\u80fd\u8d85\u8fc7\u6cb8\u817e\u7684\u6e29\u5ea6)\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u989d\u5916\u7684\u597d\u5904\uff0c\u5b83\u53ef\u4ee5\u66f4\u5feb\u3001\u66f4\u5747\u5300\u5730\u52a0\u70ed\u725b\u5976\uff0c\u56e0\u4e3a\u9505\u5468\u56f4\u90fd\u662f\u70ed\u6c34\u3002\u5f53\u725b\u5976\u8fbe\u5230\u76ee\u6807\u6e29\u5ea6\u65f6\uff0c\u6211\u628a\u5b83\u4ece\u53cc\u9505\u91cc\u62ff\u51fa\u6765\u653e\u5728\u4e00\u8fb9\u3002\n\u725b\u5976\u73b0\u5728\u53ef\u4ee5\u53d8\u6210\u7f8e\u5473\u7684\u9178\u5976\u4e86\uff0c\u4f46\u5b83\u592a\u70ed\u4e86\uff0c\u9178\u5976\u6587\u5316\u65e0\u6cd5\u751f\u5b58\u3002\u5c06\u725b\u5976\u653e\u5165\u51b0\u6c34\u69fd\u4e2d\u51b7\u5374\u81f3120\u00b0F\u3002\u7ecf\u5e38\u6405\u62cc\u4ee5\u4f7f\u725b\u5976\u7684\u6e29\u5ea6\u5747\u5300\uff0c\u5f53\u725b\u5976\u8fbe\u5230\u76ee\u6807\u6e29\u5ea6\u65f6\u5c06\u5176\u53d6\u51fa\u3002\n\u73b0\u5728\uff0c\u628a\u53d1\u9175\u5242\u52a0\u5230\u725b\u5976\u9505\u91cc\u3002\u6211\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\u52a0\u4e00\u5305\u55dc\u70ed\u53d1\u9175\u5242\u3002\u8fd9\u662f\u7b80\u5355\u53ef\u9760\u7684\u3002\u6211\u5728\u5e02\u4e2d\u5fc3\u7684\u7b2c\u4e94\u5b63\u56ed\u827a\u5e97\u4e70\u4e86\u5f00\u80c3\u83dc\u3002\u7f3a\u70b9\u662f\uff0c\u5b83\u6bd4\u2026\u8d35\u3002\n\u6216\u8005\uff0c\u6bcf\u52a0\u4ed1\u725b\u5976\u6dfb\u52a01\u676f\u9178\u5976(\u8fd9\u662f\u4e0a\u9762\u98df\u8c31\u4e2d\u7684Fankauser\u6bd4\u4f8b)\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u6279\u7684\u9178\u5976\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5546\u5e97\u8d2d\u4e70\u7684\u9178\u5976\uff1a\u627e\u5230\u6807\u6709\u201c\u6d3b\u6027\u83cc\u79cd\u201d\u548c\u201c\u4fdd\u8d28\u671f\u201d\u7684\u666e\u901a\u9178\u5976(\u6240\u4ee5\u5b83\u662f\u65b0\u9c9c\u7684)\u3002\u5f53\u7528\u8fd9\u79cd\u65b9\u6cd5\u6dfb\u52a0\u9178\u5976\u65f6\uff0c\u9996\u5148\u5c06\u7b49\u91cf\u7684\u9178\u5976\u548c\u70ed\u725b\u5976(\u4ece\u9505\u4e2d)\u6df7\u5408\u5728\u4e00\u4e2a\u5f13\u5f62\u4e2d\uff0c\u7136\u540e\u6405\u62cc\u76f4\u5230\u7a20\u5ea6\u5747\u5300\u3002\u7136\u540e\uff0c\u628a\u8fd9\u79cd\u6df7\u5408\u7269\u5012\u56de\u9505\u91cc\u6405\u62cc\u3002(\u8fd9\u662fFankhauser\u7684\u6280\u672f\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e3a\u4e86\u786e\u4fdd\u6587\u5316\u7684\u5747\u5300\u5206\u5e03\u3002)\u3002\n\u65e2\u7136\u4f60\u7684\u9178\u5976\u5df2\u7ecf\u63a5\u79cd\u4e86\uff0c\u90a3\u5c31\u628a\u5b83\u5206\u53d1\u5230\u4f60\u7684\u7f50\u5b50\u91cc(\u6216\u8005\u968f\u4fbf\u4ec0\u4e48)\u53bb\u57f9\u517b\u3002\u6211\u4e00\u6b21\u751f\u4ea72\u52a0\u4ed1\uff0c\u6240\u4ee5\u6211\u7528\u4e868\u5938\u8131\u7684\u7f50\u5b50\u3002\n\u628a\u4f60\u7684\u7f50\u5b50\u653e\u8fdb\u51b7\u5374\u5668\u91cc\uff0c\u5728\u51b7\u5374\u5668\u91cc\u88c5\u6ee1120\u00b0F\u7684\u6c34\u3002(\u5b9e\u9645\u4e0a\uff0c\u6211\u51c6\u5907\u51b7\u5374\u5668\u7684\u65b9\u6cd5\u662f\u5148\u52a0\u4e00\u4e9b\u70ed\u6c34\uff0c\u7136\u540e\u5012\u51fa\u6765\uff0c\u518d\u52a0\u6ee1\u8fd9\u4e2a\u3002\u6211\u5e0c\u671b\u5b83\u80fd\u63d0\u524d\u8ba9\u51c9\u723d\u7684\u4e1c\u897f\u6696\u548c\u8d77\u6765\u3002)\u3002\n\u6211\u8fc7\u53bb\u771f\u7684\u5f88\u5728\u610f\u6c34\u6e29\uff0c\u65f6\u4e0d\u65f6\u5730\u68c0\u67e5\u6c34\u6e29\uff0c\u7136\u540e\u628a\u5b83\u52a0\u70ed\u56de\u6765\uff0c\u8ba9\u5b83\u4fdd\u6301\u5728\u63a5\u8fd1120\u534e\u6c0f\u5ea6\u7684\u6e29\u5ea6\u3002\u4f46\u540e\u6765\uff0c\u6211\u5728Brod&amp\uff1bTaylor\u98df\u8c31(\u4e0a\u9762\u7684\u94fe\u63a5)\u4e0a\u8bfb\u5230\uff0c\u5982\u679c\u4f60\u57281\u5c0f\u65f6\u540e\u964d\u4f4e\u6e29\u5ea6\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u8d28\u5730\u3002\n\u6211\u4e0d\u9075\u5faa\u90a3\u4e2a\u98df\u8c31\uff0c\u4f46\u6211\u4f1a\u5173\u4e0a\u51b0\u7bb1\uff0c\u7136\u540e\u5fd8\u6389\u5b83\u3002\u5b83\u4f1a\u81ea\u884c\u964d\u6e29\uff0c\u7ed3\u679c\u4f3c\u4e4e\u5f88\u597d\u3002\u6211\u4e5f\u5728\u67d0\u4e2a\u5730\u65b9\u770b\u8fc7\u4e66(\u4e0d\u8bb0\u5f97\u5728\u54ea\u91cc\u4e86\uff1f)\u3002\u8fd9\u79cd\u6e29\u5ea6\u5dee\u5f02\u6709\u52a9\u4e8e\u4e92\u8865\u57f9\u517b\u7269(\u4fdd\u52a0\u5229\u4e9a\u4e73\u6746\u83cc\u548c\u55dc\u70ed\u83cc)\u6709\u81ea\u5df1\u7684\u65f6\u95f4\u6765\u5904\u7406\u725b\u5976\u3002\u4f8b\u5982\uff0c\u5176\u4e2d\u4e00\u79cd\u7ec6\u83cc\u5728\u8f83\u9ad8\u7684\u8303\u56f4\u5185\u8868\u73b0\u8f83\u597d\uff0c\u800c\u53e6\u4e00\u79cd\u7ec6\u83cc\u5728\u8f83\u4f4e\u8303\u56f4\u5185\u8868\u73b0\u8f83\u597d\u3002\n\u6211\u628a\u5b83\u653e\u5728\u90a3\u91cc8-16\u4e2a\u5c0f\u65f6\uff0c\u5927\u7ea6\u4e00\u6574\u5929\u6216\u4e00\u591c\u3002\u201c\u5b8c\u6210\u201d\u662f\u4e00\u4e2a\u54c1\u5473\u95ee\u9898\u3002\u57f9\u517b\u5f97\u8d8a\u591a\uff0c\u5c31\u4f1a\u5f97\u5230\u66f4\u591a\u5206\u79bb\u4e73\u6e05\u7684\u4e39\u5409\u5c14\u9178\u5976\u3002\u65f6\u95f4\u8d8a\u77ed\uff0c\u4e73\u6e05\u5206\u79bb\u8d8a\u5c11\uff0c\u9178\u5976\u5c31\u8d8a\u751c\u3002\n\u6211\u8fc7\u53bb\u5e38\u5e38\u628a\u5b83\u653e\u572824\u5c0f\u65f6\u5de6\u53f3\uff0c\u4f46\u6211\u610f\u8bc6\u5230\u66f4\u751c\u7684\u9178\u5976\u591f\u9178\u4e86\uff0c\u800c\u4e14\u82b1\u8d39\u7684\u65f6\u95f4\u66f4\u5c11\u3002\u6b64\u5916\uff0c\u6211\u5728Brod&Amp\uff1bTaylor\u7684\u201c\u5982\u4f55\u7ef4\u6301\u9178\u5976\u6587\u5316\u201d\u4e2d\u8bfb\u5230\uff0c\u5982\u679c\u5728\u51b0\u7bb1\u91cc\u6709\u66f4\u591a\u7684\u4e73\u7cd6\u9700\u8981\u6d88\u5316\uff0c\u9178\u5976\u6587\u5316\u4f1a\u6301\u7eed\u66f4\u957f\u65f6\u95f4\u3002\u6211\u6ca1\u6709\u9075\u5faa\u90a3\u7bc7\u6587\u7ae0\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\uff0c\u4f46\u6211\u5e0c\u671b\u5b83\u80fd\u8ba9\u6211\u7684\u6587\u5316\u5728\u66f4\u957f\u7684\u65f6\u95f4\u91cc\u4fdd\u6301\u5f3a\u5927\u3002\n\u628a\u7f50\u5b50\u667e\u5e72\uff0c\u653e\u5230\u51b0\u7bb1\u91cc\u3002\u5b83\u4eec\u7ecf\u8fc7\u706d\u83cc\u548c\u5df4\u6c0f\u6740\u83cc\uff0c\u6240\u4ee5\u9664\u4e86\u9178\u5976\u7ec6\u83cc\u7ee7\u7eed\u52a0\u5de5\u4e73\u7cd6\u5916\uff0c\u5b83\u4eec\u5e76\u4e0d\u4f1a\u771f\u7684\u53d8\u8d28\u3002\u6211\u6bcf\u4e00\u4e24\u4e2a\u6708\u505a\u4e00\u6b21\u9178\u5976\u3002\n\u6211\u60f3\u8bd5\u7740\u505a\u51b7\u51bb\u9178\u5976\uff0c\u4f46\u8fd8\u6ca1\u6709\uff01", "note_en": "Yesterday I excitedly recommended to a friend that he try making some yogurt at home. Then I realized that my personal recipe is a bit of a hodge-podge, so I thought I\u2019d try writing it out.\n This recipe isn\u2019t perfect: when using raw milk, a bit of the cream still separates to the top while it\u2019s culturing. (I\u2019d rather have it all mixed in, but I guess you could call it \u201ccream top\u201d!)\n   I\u2019d like to add pictures someday, but for now, I recommend the pictures on Fankhauser\u2019s blog.\n  Yogurt will only be as good as what you put in it. I generally  sterilize everything I\u2019ll need for the recipe:\n   Put everything in the dishwasher (without soap) ad let it run until the \u201csterilized\u201d light is green; or\n Put everything in a big pot with a few inches of water at the bottom. Boil the water and keep a slow boil for 10 minutes. (This technique is from Fankhauser, above.)\n Sometimes I forget an item at this step, in which case I wash it as welll as I can and hope for the best. I\u2019ve never had anything really  spoil, but I did have a batch that had a bit of kefir taste to it! I assume it had some yeast contamination. I still ate it \ud83e\udd37\u200d.\n  Fankhauser recommends this step for pasteurization purposes, to kill unwanted bacteria. Brod &amp; Taylor\u2019s recipe prescribes a higher temperature (195\u00b0F) and a longer holding time in order to mess with the proteins and get a thicker yogurt. (I really don\u2019t know  how it accomplishes that. I read that it \u201cdenatures whey proteins\u201d, and anyhow, I\u2019m convinced because this is the same temperature you use to make whey ricotta, so there must be something to it.)\n Anyway, first,  heat the milk to 190\u00b0F and then take it off of the heat for 20 minutes.\n The real trick is not to burn the milk. Whenever I cook it in a pot on the stove, I burn it on the bottom, no matter how much I use low heat and stir. Burning the milk is a double-whammy: it caramelizes some milk sugar, giving a hint of weird taste to the yogurt, and it sticks like cement to the bottom of the pot (adding insult to injury).\n Finally, I found an approach that doesn\u2019t burn the milk. I put a 2-gallon pot of milk inside my canner (without a lid) and fill the canner with water, then use it like a giant double-boiler. Just like a double-boiler, the hot water will buffer the temperature (it can\u2019t go above boiling), and as a bonus, it heats the milk faster and more evenly, since the pot is surrounded with hot water. When the milk reaches the target temperature, I take it out of the double-boiler and set it aside.\n  The milk is now ready to become delicious yogurt, but it\u2019s too hot for yogurt cultures to survive.  Cool the milk to 120\u00b0F by placing it a sink of ice water. Stir frequently to equalize the temperature of the milk, and remove it when it reaches the target temperature.\n  Now, add the starter culture to the pot of milk. I\u2019ve done it two ways:\n Add a  packet of thermophilic starter. This is easy and reliable. I buy the starter at Fifth Season Gardening downtown. The downside is, it\u2019s more expensive than\u2026\n Or, add 1 cup of yogurt per gallon of milk (this is Fankauser\u2019s ratio from the recipe above). You can use yogurt from your own previous batch, or use store-bought: find plain yogurt labeled with \u201cactive cultures\u201d and a \u201cuse-by\u201d date in the far future (so it\u2019s fresh). When adding yogurt this way, first mix equal parts yogurt and warmed milk (from the pot) in a bow, and stir until the consistency is even. Then, pour this mixture back into the pot and stir. (This is Fankhauser\u2019s technique. I assume it\u2019s to ensure that the culture is evenly distributed.)\n  Now that your yogurt is inoculated,  distribute it into your jars (or whatever) to culture. I make 2 gallons at a time, so I use 8 quart jars.\n  Put your jars in a cooler, and fill the cooler with 120\u00b0F water. (Actually, I prep the cooler by adding some hot water first, then dumping it out and refilling this. I hope it warms up the cooler ahead-of-time.)\n I used to really fuss with the water temperature, checking it from time to time and heating it back up to keep it close to 120\u00b0F. But then, I read in the Brod &amp; Taylor recipe (linked above) that you might get a better texture by reducing the temperature after 1 hour.\n I don\u2019t follow that recipe, but I do close the cooler and forget about it. It cools off on its own and seems to turn out fine. I also read somewhere (don\u2019t remember where?) that temperature variance helps complementary cultures (Bulgaricus and Thermophilus) get their own time to work on the milk. Something like, one of the bacteria does better on the higher range, while the other does better on the lower range.\n  I  leave it for 8-16 hours, roughly all day or overnight. \u201cDone\u201d is a matter of taste. More culturing will make a tangier yogurt that separates whey more. Less time will make a sweeter yogurt with less whey separation.\n I used to leave it for 24-ish hours, but I realized that the sweeter yogurt is tart enough and takes less time. Besides, I read on  Brod &amp; Taylor\u2019s \u201cHow to Maintain a Yogurt Culture\u201d that the culture will last longer if it has more lactose to digest while it\u2019s in the fridge. I don\u2019t follow all the steps in that article, but I hope it will keep my culture going strong for longer.\n  Dry off the jars and put them in the fridge. They\u2019re sterilized and pasteurized, so besides the yogurt bacteria continuing to process the lactose, they don\u2019t really spoil. I make yogurt once every month or two.\n   I\u2019d like to try making  frozen yogurt, but I haven\u2019t yet!", "posttime": "2020-06-17 22:02:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5236\u4f5c,yogurt,\u9178\u5976", "title": "\u201c\u6211\u662f\u5982\u4f55\u5236\u4f5c\u9178\u5976\u7684\u201d(2019)", "title_en": "How I Make Yogurt (2019)", "transed": 1, "url": "https://rmosolgo.github.io/blog/2019/03/28/how-i-make-yogurt/", "via": "", "real_tags": ["\u5236\u4f5c", "yogurt", "\u9178\u5976"]}, {"category": "", "categoryclass": "", "imagename": "bf6c21e38408eb8f1dd9da9b1709bd3a.jpg", "infoid": 1006942, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u65d7\u4e0b\u5e7f\u53d7\u6b22\u8fce\u7684\u5373\u65f6\u901a\u8baf\u5e94\u7528WhatsApp\u63a8\u51fa\u4e86\u4e00\u9879\u529f\u80fd\uff0c\u5141\u8bb8\u7528\u6237\u5411\u4e2a\u4eba\u548c\u4f01\u4e1a\u4ed8\u6b3e\u6216\u6c47\u6b3e\u3002\u8be5\u652f\u4ed8\u529f\u80fd\u4e8e2020\u5e746\u670815\u65e5\u9996\u5148\u5728\u5df4\u897f\u5ba3\u5e03\u53ef\u7528\uff0c\u9884\u8ba1\u57282018\u5e74\u5728\u5370\u5ea6\u8fdb\u884c\u521d\u6b65\u6d4b\u8bd5\u540e\uff0c\u5c06\u6269\u5c55\u5230\u66f4\u591a\u56fd\u5bb6\u3002\n\u5df4\u897f\u62e5\u6709\u7ea61.2\u4ebf\u6d3b\u8dc3\u7528\u6237\uff0c\u662fWhatsApp\u4ec5\u6b21\u4e8e\u5370\u5ea6\u7684\u7b2c\u4e8c\u5927\u5e02\u573a\u3002\u968f\u7740\u76ee\u524d\u7684\u51a0\u72b6\u75c5\u6bd2\u75be\u75c52019\u5e74(\u65b0\u51a0\u80ba\u708e)\u7684\u5927\u6d41\u884c\u8feb\u4f7f\u8bb8\u591a\u4eba\u538c\u5026\u4e86\u5904\u7406\u5b9e\u7269\u8d27\u5e01\u548c\u8fdb\u5165\u516c\u5171\u573a\u6240\uff0cWhatsApp\u7684\u652f\u4ed8\u529f\u80fd\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u662f\u53d7\u6b22\u8fce\u7684\u3002\n1000\u591a\u4e07\u5bb6\u5c0f\u5fae\u4f01\u4e1a\u662f\u5df4\u897f\u793e\u533a\u7684\u5fc3\u8df3\u3002\u4e3a\u4e86\u8ba9\u95ee\u9898\u5f97\u5230\u56de\u7b54\uff0c\u7ed9\u4e00\u5bb6\u4f01\u4e1a\u53d1\u4e00\u901a\u7535\u8bdd\u5df2\u7ecf\u6210\u4e3a\u7b2c\u4e8c\u5929\u6027\u3002\u73b0\u5728\uff0c\u9664\u4e86\u67e5\u770b\u5546\u5e97\u7684\u76ee\u5f55\u5916\uff0c\u5ba2\u6237\u8fd8\u53ef\u4ee5\u4e3a\u4ea7\u54c1\u4ed8\u6b3e\u3002\u8ba9\u652f\u4ed8\u53d8\u5f97\u7b80\u5355\u53ef\u4ee5\u5e2e\u52a9\u66f4\u591a\u7684\u4f01\u4e1a\u8fdb\u5165\u6570\u5b57\u7ecf\u6d4e\uff0c\u6253\u5f00\u65b0\u7684\u589e\u957f\u673a\u4f1a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7ed9\u6240\u7231\u7684\u4eba\u6c47\u6b3e\u53d8\u5f97\u50cf\u53d1\u9001\u4fe1\u606f\u4e00\u6837\u5bb9\u6613\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u4eba\u4eec\u5728\u8eab\u4f53\u4e0a\u5f7c\u6b64\u76f8\u8ddd\u5f88\u8fdc\u3002\u56e0\u4e3aWhatsApp\u4e0a\u7684\u652f\u4ed8\u662f\u7531Facebook Pay\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u672a\u6765\u8ba9\u4e2a\u4eba\u548c\u4f01\u4e1a\u80fd\u591f\u5728Facebook\u7684\u6240\u6709\u5e94\u7528\u7cfb\u5217\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u5361\u4fe1\u606f\u3002WhatsApp\u535a\u5ba2\u4e0a\u7684\u4e00\u4efd\u58f0\u660e\u5199\u9053\u3002\n\u8bb8\u591a\u65e8\u5728\u5c06\u672a\u5f00\u6237\u94f6\u884c\u5b58\u5165\u94f6\u884c\u7684\u9879\u76ee\u548c\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u4f1a\u62db\u81f4\u7528\u6237\u6c47\u6b3e\u6216\u6536\u6b3e\u7684\u9ad8\u989d\u8d39\u7528\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u8fdd\u80cc\u4e86\u7ed9\u81ea\u5df1\u8d34\u4e0a\u7ecf\u6d4e\u5305\u5bb9\u6027\u6807\u7b7e\u7684\u76ee\u7684\u3002\n\u7136\u800c\uff0c\u5bf9\u4e8eWhatsApp\uff0c\u4ed6\u4eec\u8868\u793a\uff0c\u4ed6\u4eec\u7684\u652f\u4ed8\u529f\u80fd\u5c06\u4f7f\u7528Facebook Pay\uff0c\u4e2a\u4eba\u7528\u6237\u5c06\u514d\u6536\u4ea4\u6613\u8d39\uff0c\u4f01\u4e1a\u5c06\u6536\u53d6\u6536\u6b3e\u624b\u7eed\u8d39\u3002\n\u4eba\u4eec\u5728WhatsApp\u4e0a\u6c47\u6b3e\u6216\u8d2d\u7269\u662f\u514d\u8d39\u7684\u3002\u5546\u5bb6\u5c06\u652f\u4ed8\u624b\u7eed\u8d39\u6765\u63a5\u6536\u5ba2\u6237\u4ed8\u6b3e\uff0c\u7c7b\u4f3c\u4e8e\u4ed6\u4eec\u63a5\u53d7\u4fe1\u7528\u5361\u4ea4\u6613\u65f6\u53ef\u80fd\u5df2\u7ecf\u652f\u4ed8\u7684\u624b\u7eed\u8d39\u3002\n\u53e6\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\u662f\u5b89\u5168\u95ee\u9898\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd8\u6709\u9690\u79c1\u95ee\u9898\u3002Facebook\u6b64\u524d\u66fe\u591a\u6b21\u627f\u8ba4\uff0c\u5176\u4e00\u4e9b\u7528\u6237\u7684\u4e2a\u4eba\u6570\u636e\u5728\u672a\u7ecf\u9002\u5f53\u6388\u6743\u7684\u60c5\u51b5\u4e0b\u88ab\u8bbf\u95ee\u548c\u6cc4\u9732\u3002\n\u73b0\u5728\uff0c\u968f\u7740\u4eba\u4eec\u5c06\u4ed6\u4eec\u7684\u652f\u4ed8\u7ec6\u8282\u4e0e\u4ed6\u4eec\u7684\u624b\u673a\u53f7\u7801\u8054\u7cfb\u8d77\u6765\uff0c\u53ef\u80fd\u8fd8\u4f1a\u4e0eFacebook\u8d26\u6237\u8054\u7cfb\u8d77\u6765\uff0c\u8fd9\u6784\u6210\u4e86\u66f4\u5927\u7684\u5a01\u80c1\u3002\u7136\u800c\uff0c\u8be5\u516c\u53f8\u8bd5\u56fe\u901a\u8fc7\u58f0\u660e\u5df2\u7ecf\u91c7\u53d6\u4e86\u51e0\u9879\u5b89\u5168\u63aa\u65bd\u6765\u6d88\u9664\u8fd9\u4e9b\u62c5\u5fe7\uff0c\u4ee5\u786e\u4fdd\u5b89\u5168\u4e0d\u4f1a\u88ab\u7834\u574f\u3002\n\u6211\u4eec\u5728\u5efa\u7acb\u652f\u4ed8\u65f6\u8003\u8651\u5230\u4e86\u5b89\u5168\u6027\uff0c\u5c06\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u516d\u4f4d\u6570PIN\u6216\u6307\u7eb9\u6765\u9632\u6b62\u672a\u7ecf\u6388\u6743\u7684\u4ea4\u6613\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5728Visa\u548c\u4e07\u4e8b\u8fbe\u5361\u7f51\u7edc\u4e0a\u652f\u6301\u5df4\u897f\u94f6\u884c(Banco Do Brasil)\u3001Nubank\u548c\u897f\u897f\u91cc\u8fea\u94f6\u884c\u7684\u501f\u8bb0\u5361\u6216\u4fe1\u7528\u5361-\u6211\u4eec\u6b63\u5728\u4e0e\u5df4\u897f\u9886\u5148\u7684\u652f\u4ed8\u5904\u7406\u5668Cielo\u5408\u4f5c\u3002\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5f00\u653e\u7684\u6a21\u5f0f\u6765\u6b22\u8fce\u672a\u6765\u66f4\u591a\u7684\u5408\u4f5c\u4f19\u4f34\u3002\n\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5206\u4eab\u672c\u6587\uff1a", "note_en": "WhatsApp, the popular instant messaging app  owned by Facebook, has introduced a feature that  allows users to make payments or send money to individuals and businesses. Announced first for availability in Brazil on 15 June 2020, it is expected that this payments functionality will be extended to more countries after it was  initially tested in India during 2018.\n Brazil, with approximately 120 million active users, is WhatsApp&#39;s second largest market behind India. With the current  coronavirus disease 2019 (COVID-19) pandemic having forced many people to be weary of handling physical money and going into public places, the WhatsApp payments feature could prove popular.\n &#34;The over 10 million small and micro businesses are the heartbeat of Brazil\u2019s communities. It\u2019s become second nature to send a  zap to a business to get questions answered. Now in addition to viewing a store\u2019s catalog, customers will be able to send payments for products as well. Making payments simple can help bring more businesses into the digital economy, opening up new opportunities for growth. In addition, we\u2019re making sending money to loved ones as easy as sending a message, which could not be more important as people are physically distant from one another. Because payments on WhatsApp are enabled by Facebook Pay, in the future we want to make it possible for people and businesses to use the same card information across Facebook\u2019s family of apps.&#34; reads a statement on WhatsApp&#39;s blog.\n   Many projects and solutions that aim to &#34;bank the unbanked&#34; typically attract high fees for their users to send or receive money. This, at the end of the day defeats the purpose of labelling themselves &#34;financially inclusive.&#34;\n However, with WhatsApp, they have said that their payments feature will use Facebook Pay and will be free of transaction fees for individual users and businesses will be charged a fee for receiving money.\n &#34;Sending money or making a purchase on WhatsApp is free for people. Businesses will pay a processing fee to receive customer payments, similar to what they may already pay when accepting a credit card transaction.&#34;\n  Another concern is around security and to some extent, privacy. Facebook has previously admitted, on several occasions, that some of its  users personal data was accessed and leaked without due authorization.\n Now, with people linking their payment details to their mobile phone numbers and possibly Facebook accounts, this presents an even bigger threat. The company has however tried to wave away these fears by stating that it has adopted several security measures to ensure the security is not breached.\n &#34;We have built payments with security in mind and a special six digit PIN or fingerprint will be required to prevent unauthorized transactions. To start, we will support debit or credit cards from Banco do Brasil, Nubank, and Sicredi on the Visa and Mastercard networks -and we are working with Cielo, the leading payments processor in Brazil. We have built an open model to welcome more partners in the future.&#34;\n      Share this article via:", "posttime": "2020-06-17 22:01:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u5141\u8bb8,introduced,\u652f\u4ed8", "title": "WhatsApp\u63a8\u51fa\u4e86\u4e00\u9879\u529f\u80fd\uff0c\u5141\u8bb8\u7528\u6237\u6c47\u6b3e\u548c\u6536\u6b3e", "title_en": "WhatsApp has introduced a feature that allows users to send and receive money", "transed": 1, "url": "https://www.iafrikan.com/2020/06/17/facebook-whatsapp-payments-chat/", "via": "", "real_tags": ["app", "\u5141\u8bb8", "\u652f\u4ed8"]}, {"category": "", "categoryclass": "", "imagename": "b2d0049a24d71c94068f1fa64201d07b.png", "infoid": 1006940, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u8c08\u5230\u5728\u5b8f\u89c2\u5c42\u9762\u4e0a\u8ba1\u5212\u8f6f\u4ef6\u9879\u76ee\u65f6\uff0c\u6709\u4e24\u4e2a\u6781\u7aef--\u8bd5\u56fe\u9884\u5148\u8ba1\u5212\u6240\u6709\u4e8b\u60c5\uff0c\u6216\u8005\u63a5\u53d7\u4e0d\u53ef\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u800c\u6839\u672c\u4e0d\u53bb\u8ba1\u5212\u4efb\u4f55\u4e8b\u60c5\u3002\u867d\u7136\u5927\u591a\u6570\u56e2\u961f\u4f1a\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4f46\u66f4\u8be6\u7ec6\u5730\u89c2\u5bdf\u4ed6\u4eec\u4ecd\u7136\u662f\u503c\u5f97\u7684\u3002\n\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u5728\u4e00\u4e2a\u4ee5\u7011\u5e03\u4e3a\u57fa\u7840\u7684\u4e16\u754c\u91cc\uff0c\u8fc7\u5ea6\u89c4\u5212\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u8fd9\u79cd\u65b9\u6cd5\u80cc\u540e\u7684\u60f3\u6cd5\u662f\u9884\u5148\u5bf9\u9879\u76ee\u7684\u6574\u4f53\u8fdb\u884c\u975e\u5e38\u8be6\u7ec6\u7684\u8ba1\u5212\uff0c\u5c06\u8ba1\u5212\u6295\u5c04\u5230\u4e00\u4e2a\u65f6\u95f4\u8868\u4e0a\uff0c\u7136\u540e\u6267\u884c\u5b83\u3002\u5b9e\u8df5\u8fc7\u5ea6\u8ba1\u5212\u7684\u56e2\u961f\u4f1a\u5199\u51fa\u8be6\u7ec6\u7684\u89c4\u8303\uff0c\u63cf\u8ff0\u9879\u76ee\u7684\u5404\u4e2a\u65b9\u9762\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f1a\u5c06\u89c4\u8303\u5206\u89e3\u6210\u4e00\u4e9b\u79ef\u538b\u7684\u5c0f\u4efb\u52a1\uff0c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f30\u8ba1\u79ef\u538b\u7684\u4efb\u52a1\uff0c\u5e76\u63a8\u65ad\u9879\u76ee\u5c06\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1b\u6700\u7ec8\u4f1a\u5f97\u51fa\u8fd9\u6837\u7684\u58f0\u660e\uff1a\u6211\u4eec\u53ef\u4ee5\u572867\u5468\u5185\u6784\u5efa\u51fa587\u9875\u957f\u7684\u89c4\u8303\u4e2d\u6240\u63cf\u8ff0\u7684\u793e\u4ea4\u7f51\u7edc\u5148\u884c\u8005\uff0c\u603b\u5171\u5c06\u82b1\u8d39134\u767e\u4e07\u82f1\u9551\u3002\u6b27\u5143&34\uff1b\u3002\n\u6b63\u5982\u6211\u4eec\u73b0\u5728\u90fd\u77e5\u9053\u7684\uff0c\u8fd9\u51e0\u4e4e\u4ece\u6765\u6ca1\u6709\u50cf\u8ba1\u5212\u7684\u90a3\u6837\u594f\u6548\uff0c\u9519\u8fc7\u4e86\u6700\u540e\u671f\u9650\uff0c\u9884\u7b97\u8d85\u652f--\u65e0\u6570\u7684\u4f8b\u5b50\u90fd\u8868\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u76f8\u53cd\u4e4b\u5904\u662f\uff0c\u53ea\u505a\u5f88\u5c11\u7684\u524d\u671f\u8ba1\u5212\uff0c\u6216\u8005\u6839\u672c\u4e0d\u505a\u4efb\u4f55\u524d\u671f\u8ba1\u5212\uff0c\u7136\u540e\u5c31\u8fd9\u6837\u9003\u4e4b\u592d\u592d\u3002\u867d\u7136\u8fd9\u6d88\u9664\u4e86\u5f00\u53d1\u56e2\u961f(\u7279\u522b\u662f\u8bbe\u8ba1\u5e08\u548c\u5de5\u7a0b\u5e08)\u7684\u5f88\u5927\u538b\u529b\uff0c\u4f46\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\u5728\u9879\u76ee\u8fdb\u5c55\u7684\u53ef\u9884\u6d4b\u6027\u548c\u6d1e\u5bdf\u529b\u65b9\u9762\u6709\u5408\u6cd5\u9700\u6c42\u7684\u4eba\u5374\u88ab\u51b7\u843d\u4e86\u3002\u8425\u9500\u56e2\u961f\u5c06\u4e0d\u77e5\u9053\u4f55\u65f6\u5728\u5f53\u5730\u52a8\u7269\u56ed\u9884\u8ba2\u5e7f\u544a\u724c\uff0c\u4ea7\u54c1\u4e13\u5bb6\u4e5f\u65e0\u6cd5\u4e0e\u4e00\u7fa4\u6837\u672c\u5927\u8c61\u5efa\u7acb\u7528\u6237\u6d4b\u8bd5\u4f1a\u8bae\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u77e5\u9053\u4ed6\u4eec\u4f55\u65f6\u80fd\u591f\u6d4b\u8bd5\u54ea\u4e9b\u529f\u80fd\uff0c\u6216\u8005\u662f\u5426\u4f1a\u6709\u4e00\u5957\u8fde\u8d2f\u7684\u529f\u80fd\uff0c\u751a\u81f3\u5728\u4efb\u4f55\u65f6\u5019\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u90fd\u662f\u6709\u610f\u4e49\u7684\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6ca1\u6709\u4e00\u4e2a\u56e2\u961f(\u81f3\u5c11\u6211\u89c1\u8fc7\ud83e\udd1e)\u4e25\u683c\u6267\u884c\u8fd9\u4e24\u4e2a\u6781\u7aef\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u7ecf\u5178\u7684\u7011\u5e03\u6a21\u578b\u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u8fc7\u53bb\uff0c\u8ba9\u4e00\u4e2a\u56e2\u961f\u6beb\u65e0\u8ba1\u5212\u5730\u9003\u8dd1\u7684\u7f3a\u70b9\u975e\u5e38\u660e\u663e\uff0c\u4ee5\u81f3\u4e8e\u4efb\u4f55\u4eba\u90fd\u6709\u8db3\u591f\u7684\u52c7\u6c14(\u6216\u5929\u771f)\u53bb\u5c1d\u8bd5\u5b83\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6309\u7167\u654f\u6377\u6d41\u7a0b\u8fed\u4ee3\u5f00\u53d1\u4ea7\u54c1(\u4e0d\u7ba1\u8fd9\u4e2a\u672f\u8bed\u5bf9\u4efb\u4f55\u7279\u5b9a\u56e2\u961f\u6765\u8bf4\u53ef\u80fd\u662f\u4ec0\u4e48\u610f\u601d)\u73b0\u5728\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u63a5\u53d7\u7684\u6280\u672f\u3002\u8fd9\u6837\uff0c\u8fed\u4ee3\u7684\u8303\u56f4\u3001\u590d\u6742\u6027\u548c\u98ce\u9669\u5c31\u5927\u5927\u51cf\u5c11\u4e86(\u901a\u5e38\u88ab\u79f0\u4e3a\u51b2\u523a--\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u672f\u8bed\uff0c\u4f46\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0)\uff0c\u53d8\u5f97\u66f4\u5bb9\u6613\u7ba1\u7406\u4e86\u3002(\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u672f\u8bed\uff0c\u4f46\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0)\u3002\u8fd9\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u63a5\u53d7\u7684\u6280\u672f\uff0c\u56e0\u6b64\u5b83\u7684\u8303\u56f4\u548c\u590d\u6742\u6027\u548c\u98ce\u9669\u90fd\u5927\u5927\u51cf\u5c11\u4e86(\u901a\u5e38\u88ab\u79f0\u4e3aSprint-34\uff1b\u8fd9\u4e2a\u672f\u8bed\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u672f\u8bed\uff0c\u4f46\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0)\u3002\u7136\u540e\uff0c\u6240\u6709\u7684\u8ba1\u5212\u90fd\u662f\u57fa\u4e8e\u5bf9\u76f8\u5bf9\u8f83\u5c0f\u7684\u4efb\u52a1\u7684\u4f30\u8ba1(\u4f8b\u5982\u4f7f\u7528\u6545\u4e8b\u70b9)\uff0c\u4ee5\u53ca\u57fa\u4e8e\u8fd9\u4e9b\u4f30\u8ba1\u7684\u751f\u4ea7\u529b\u5ea6\u91cf(\u56e2\u961f\u7684\u901f\u5ea6)\u3002\n\u7136\u800c\uff0c\u5728\u73b0\u5b9e\u4e2d\uff0c\u91c7\u7528\u654f\u6377\u3001\u8fed\u4ee3\u7684\u8fc7\u7a0b(\u65e0\u8bba\u662fScrum\u3001\u56e2\u961f\u81ea\u5df1\u7684\u89e3\u91ca\u8fd8\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f)\u90fd\u4e0d\u4f1a\u795e\u5947\u5730\u89e3\u51b3\u6240\u6709\u4e0a\u8ff0\u95ee\u9898\u3002\u56e2\u961f\u4ecd\u5c06\u9762\u4e34\u9884\u7b97\u8d85\u652f\uff0c\u5373\u4f7f\u8003\u8651\u5230\u4e24\u5468\u8fed\u4ee3\u7684\u77ed\u65f6\u95f4\u8303\u56f4\uff0c\u4e5f\u4e0d\u80fd\u7ed9\u51fa\u53ef\u9760\u7684\u4f30\u8ba1\u3002\u610f\u60f3\u4e0d\u5230\u7684\u548c\u8ba1\u5212\u5916\u7684-\u56e0\u4e3a\u590d\u6742\u6027\u548c\u6311\u6218\u53ea\u6709\u5728\u4efb\u52a1\u5f00\u59cb\u540e\u624d\u4f1a\u88ab\u53d1\u73b0\uff0c\u8bb8\u591a\u4efb\u52a1\u5c06\u610f\u5916\u5730\u8de8\u8d8a\u591a\u4e2a\u5370\u8bb0\uff0c\u5373\u4f7f\u5728\u542f\u52a8MVP\u4e4b\u524d\uff0c\u5df2\u7ecf\u5b8c\u6210\u7684\u529f\u80fd\u4e5f\u5fc5\u987b\u5b9a\u671f\u8fdb\u884c\u5220\u9664\u548c\u66f4\u6539\u3002\n\u5c06\u8ba1\u5212\u4ece\u4f7f\u7528\u7ecf\u5178\u7011\u5e03\u65b9\u6cd5\u7684\u5b8f\u89c2\u5c42\u6b21\u8f6c\u79fb\u5230\u8fed\u4ee3\u7684\u5fae\u89c2\u5c42\u6b21\u4e4b\u540e\uff0c\u8be5\u5c42\u6b21\u4e5f\u662f\u95ee\u9898\u8f6c\u79fb\u5230\u7684\u5730\u65b9\u3002\n\u5728\u8fed\u4ee3\u7684\u5fae\u89c2\u5c42\u9762\u4e0a\u8fdb\u884c\u8ba1\u5212\u610f\u5473\u7740\u786e\u5b9a\u8303\u56f4\u3001\u6346\u7ed1\u548c\u8bc4\u4f30\u5177\u4f53\u7684\u3001\u53ef\u64cd\u4f5c\u7684\u5de5\u4f5c\u5355\u5143\u3002\u8fd9\u4e9b\u5355\u5143\u6709\u6570\u4e0d\u6e05\u7684\u540d\u79f0\uff0c\u5b83\u4eec\u53d6\u51b3\u4e8e\u6240\u4f7f\u7528\u7684\u7279\u5b9a\u8fc7\u7a0b\u6216\u5de5\u5177\uff0c\u4f46\u5728\u73b0\u5b9e\u4e2d\uff0c\u65e0\u8bba\u60a8\u5c06\u5b83\u4eec\u79f0\u4e3a\u95ee\u9898\u3001(\u7528\u6237)\u6545\u4e8b\u8fd8\u662f\u5f85\u529e\u4e8b\u9879\uff0c\u65e0\u8bba\u60a8\u662f\u5426\u5c06\u5b83\u4eec\u7ec4\u7ec7\u6210\u5177\u6709\u591a\u5c42\u5b50\u4efb\u52a1\u548c/\u6216\u603b\u4f53\u53f2\u8bd7\u7684\u6811-\u5b83\u4eec\u662f\u4e00\u4e2a\u6216\u51e0\u4e2a\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5904\u7406\u5e76\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u5728\u76f8\u5bf9\u8f83\u77ed\u7684\u65f6\u95f4\u5185(\u6bd4\u5982\u6700\u591a\u51e0\u5929)\u3002\u4efb\u52a1\u5305\u5b9a\u4e49\u4e86\u8fed\u4ee3\u7684\u8303\u56f4\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u5fae\u89c2\u5c42\u9762\u91cd\u65b0\u89c4\u5212\u7684\u3002\nBasecamp\u662f\u4e00\u5bb6\u81ea\u529b\u66f4\u751f\u7684\u516c\u53f8\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u975e\u5e38\u6210\u529f\u7684\u9879\u76ee\u7ba1\u7406SaaS\uff0c\u540c\u540d\u516c\u53f8Basecamp\u80cc\u540e\u7684\u56e2\u961f\u6709\u4e00\u53e5\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8bdd\uff1a\nBasecamp\u5728\u4ed6\u4eec\u7684\u7545\u9500\u4e66\u201c\u8fd4\u5de5\u201d\u4e2d\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u3002\u8fd9\u53e5\u8bdd\u5f88\u68d2\uff0c\u4f46\u4e5f\u88ab\u5e7f\u6cdb\u8bef\u89e3\u4e86\u3002\u5b83\u7684\u610f\u601d\u662f\uff0c\u4efb\u4f55\u8d85\u51fa\u76f8\u5f53\u5c0f\u7684\u8303\u56f4\u7684\u4e8b\u60c5\u672c\u8d28\u4e0a\u90fd\u662f\u4e0d\u53ef\u8ba1\u5212\u7684\uff0c\u4efb\u4f55\u4eba\u5236\u5b9a\u7684\u4efb\u4f55\u8ba1\u5212\uff0c\u672c\u8d28\u4e0a\u90fd\u53ea\u4e0d\u8fc7\u662f\u4e00\u79cd\u731c\u6d4b\u3002\u6b63\u5982\u4e0a\u9762\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u5728\u5b8f\u89c2\u5c42\u9762\u4e0a\u8fd9\u662f\u975e\u5e38\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u8303\u56f4\u548c\u590d\u6742\u6027\u592a\u5927\u4e86\uff0c\u4efb\u4f55\u4eba\u90fd\u65e0\u6cd5\u5b8c\u5168\u638c\u63e1\u3002\u7136\u800c\uff0c\u5f15\u7528\u5e76\u4e0d\u610f\u5473\u7740\uff0c\u5f53\u8303\u56f4\u6709\u9650\u65f6\uff0c\u60a8\u6c38\u8fdc\u4e0d\u80fd\u51c6\u5907\u548c\u9884\u5148\u8bc4\u4f30\u4efb\u4f55\u5de5\u4f5c--\u8fd9\u662f\u5728\u8fed\u4ee3\u7684\u5fae\u89c2\u7ea7\u522b\u4e0a\u7684\u4e8b\u5b9e\u3002\n\u7136\u800c\uff0c\u8bb8\u591a\u9879\u76ee\u56e2\u961f\u4ee5\u8ba1\u5212\u662f\u731c\u6d4b\u4e3a\u501f\u53e3\uff0c\u6839\u672c\u62d2\u7edd\u505a\u4efb\u4f55\u5f7b\u5e95\u7684\u524d\u671f\u5206\u6790\u6216\u4efb\u52a1\u51c6\u5907\u3002\u5373\u4f7f\u56e2\u961f\u5728\u5f00\u59cb\u5de5\u4f5c\u4e4b\u524d\u82b1\u8d39\u65f6\u95f4\u51c6\u5907\u5de5\u4f5c\uff0c\u8fd9\u79cd\u51c6\u5907\u5f80\u5f80\u53ea\u662f\u8868\u9762\u4e0a\u7684\uff0c\u7559\u4e0b\u4e86\u5f88\u591a\u4e0d\u786e\u5b9a\u6027\u548c\u98ce\u9669\uff0c\u53ea\u6709\u5728\u4efb\u52a1\u5de5\u4f5c\u5f00\u59cb\u4e4b\u540e\u624d\u80fd\u53d1\u73b0\u3002\u7406\u89e3\u4efb\u4f55\u4efb\u52a1\u7684\u5168\u9762\u6027\u548c\u591a\u6101\u5584\u611f\uff0c\u5f53\u7136\u9700\u8981\u79ef\u6781\u5730\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u9700\u8981\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\u3002\u7136\u800c\uff0c\u5206\u6790\u4efb\u52a1\u4ee5\u53d1\u73b0\u9690\u85cf\u7684\u590d\u6742\u6027\u3001\u4f9d\u8d56\u6027\u548c\u5f71\u54cd\u662f\u5f88\u6709\u53ef\u80fd\u7684-\u4e0d\u4ec5\u4ece\u5de5\u7a0b\u89d2\u5ea6\uff0c\u800c\u4e14\u4ece\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\u7684\u89d2\u5ea6\uff0c\u5982\u8bbe\u8ba1\u3001\u4ea7\u54c1\u3001\u8425\u9500\u7b49\u3002\n\u900f\u5f7b\u5730\u5206\u6790\u548c\u51c6\u5907\u4efb\u52a1\u5c06\u6709\u52a9\u4e8e\u7406\u89e3\u4efb\u52a1\u7684\u8303\u56f4\uff0c\u786e\u5b9a\u9700\u8981\u5728\u4e4b\u524d\u6216\u4e0d\u9002\u5f53\u5730\u5b8c\u6210\u7684\u76f8\u5173\u5de5\u4f5c\uff0c\u6216\u76f8\u4e92\u6743\u8861\u66ff\u4ee3\u5b9e\u65bd\u65b9\u6848\u4ee5\u53ca\u5bf9\u7167\u5176\u4ed6\u4f18\u5148\u4e8b\u9879\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u51cf\u5c11\u4e86\u4e0e\u4efb\u52a1\u76f8\u5173\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5373\u4f7f\u4f60\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u6240\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u6d88\u9664\u5f88\u5927\u4e00\u90e8\u5206\u6216\u5927\u90e8\u5206\u4e0d\u786e\u5b9a\u6027\u4f1a\u663e\u8457\u63d0\u9ad8\u4f30\u8ba1\u7684\u53ef\u9760\u6027\uff0c\u5e76\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u8ba1\u5212\u5916\u5de5\u4f5c\uff0c\u800c\u8fd9\u4e9b\u5de5\u4f5c\u901a\u5e38\u662f\u5728\u5de5\u4f5c\u5f00\u59cb\u540e\u624d\u4f1a\u9047\u5230\u4e0d\u53ef\u9884\u89c1\u7684\u590d\u6742\u60c5\u51b5\u65f6\u624d\u9700\u8981\u505a\u7684\u3002\n\u8981\u505a\u597d\u5fae\u89c2\u5c42\u9762\u7684\u89c4\u5212\uff0c\u5fc5\u987b\u505a\u597d\u5468\u5bc6\u7684\u51c6\u5907\u5de5\u4f5c\u3002\u6211\u5c06\u4ecb\u7ecd\u56db\u4e2a\u5173\u952e\u6280\u672f\uff0c\u5b83\u4eec\u662f\u6709\u6548\u51c6\u5907\u4efb\u52a1\u6240\u5fc5\u9700\u7684\uff0c\u800c\u4e14SIMPLABS\u5df2\u7ecf\u6210\u529f\u5730\u5b9e\u8df5\u4e86\u591a\u5e74\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4ea7\u54c1\u56e2\u961f\u901a\u5e38\u5f00\u5c55\u7684\u5de5\u4f5c\u662f\u4ece\u54ea\u91cc\u5f00\u59cb\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6216\u591a\u6216\u5c11\u53ea\u6709\u4e24\u4e2a\u6765\u6e90-\u7531\u4ea7\u54c1\u56e2\u961f\u5b9a\u4e49\u7684\u7279\u6027\u6545\u4e8b\u548c\u7531\u5de5\u7a0b\u56e2\u961f\u9a71\u52a8\u7684\u6280\u672f\u66f4\u6539(\u5982\u5206\u89e3)\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u79cd\u5de5\u4f5c\u90fd\u7b49\u540c\u4e8e\u4efb\u52a1\uff0c\u5c3d\u7ba1\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u7eaf\u6280\u672f\u5de5\u4f5c\u5e76\u975e\u5982\u6b64\u3002\u56e0\u4e3a\u8fd9\u9879\u5de5\u4f5c\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u53d1\u751f\uff0c\u4e0d\u628a\u5b83\u8868\u793a\u4e3a\u5355\u72ec\u7684\u4efb\u52a1\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u9519\u8bef\uff0c\u5e76\u5bfc\u81f4\u6b63\u5728\u53d1\u751f\u7684\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5229\u76ca\u76f8\u5173\u8005\u90fd\u80fd\u770b\u5230\u7684\uff0c\u56e0\u4e3a\u968f\u4e4b\u800c\u6765\u7684\u662f\u6240\u6709\u8d1f\u9762\u7684\u5e8f\u5217\u3002\n\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u9879\u76ee\u4e2d\u53d1\u751f\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u7b49\u540c\u5730\u8868\u793a\u4e3a\u4efb\u52a1\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5229\u76ca\u76f8\u5173\u8005\u53ea\u4f1a\u5b9a\u4e49\u4ed6\u4eec\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u800c\u4e0d\u4f1a\u4ece\u5f7c\u6b64\u90a3\u91cc\u83b7\u5f97\u592a\u591a\u4fe1\u606f\u3002\u7136\u540e\uff0c\u6bcf\u4e2a\u6d89\u4f17\u90fd\u4f1a\u63a8\u52a8\u5728\u7279\u5b9a\u8fed\u4ee3\u4e2d\u8ba1\u5212\u4ed6\u4eec\u7684\u4efb\u52a1\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e0d\u662f\u6709\u6548\u7684\u534f\u4f5c\u65b9\u5f0f\uff0c\u901a\u5e38\u4e5f\u4e0d\u7b26\u5408\u9879\u76ee\u6210\u529f\u7684\u6700\u4f73\u5229\u76ca\u3002\u4e00\u4e2a\u6210\u529f\u7684\u9879\u76ee\u9700\u8981\u8003\u8651\u5230\u6240\u6709\u5229\u76ca\u76f8\u5173\u8005\u7684\u4e2a\u4eba\u89c2\u70b9\u548c\u4f18\u5148\u4e8b\u9879\u3002\u6bd5\u7adf\uff0c\u65e2\u4e0d\u662f\u53ea\u5173\u6ce8\u529f\u80fd\u800c\u653e\u5f03\u4ea7\u54c1\u7684\u957f\u671f\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u7b49\u6280\u672f\u65b9\u9762\uff0c\u4e5f\u4e0d\u662f\u91cd\u6784\u4ee3\u7801\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\uff0c\u800c\u53ea\u662f\u4ea4\u4ed8\u5f97\u592a\u5c11\u592a\u665a\uff0c\u90fd\u4e0d\u4f1a\u5bfc\u81f4\u4e1a\u52a1\u7684\u6210\u529f\u3002\n\u6210\u529f\u7684\u56e2\u961f\u516c\u5f00\u800c\u76f4\u63a5\u5730\u6c9f\u901a\uff0c\u5e76\u5bc6\u5207\u5408\u4f5c\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u58f0\u660e\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f80\u5f80\u6709\u5f88\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\u3002\u8bb8\u591a\u56e2\u961f\u5728\u5229\u76ca\u76f8\u5173\u8005\u4e4b\u95f4\u7b51\u8d77\u4e00\u5835\u5899\uff0c\u800c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u90fd\u5fc5\u987b\u534f\u4f5c-\u4ece\u4ea7\u54c1\u4e13\u5bb6\u5230\u5de5\u7a0b\u548c\u8bbe\u8ba1\uff0c\u4f46\u4e5f\u5305\u62ec\u8425\u9500\u3001\u8d22\u52a1\u548c\u5176\u4ed6\u6f5c\u5728\u7684\u9886\u57df\u3002\u8fd9\u79cd\u5408\u4f5c\u59cb\u4e8e\u5c31\u5e94\u8be5\u4ee5\u4ec0\u4e48\u987a\u5e8f\u548c\u6df1\u5ea6\u505a\u4ec0\u4e48\u5de5\u4f5c\u8fbe\u6210\u4e00\u81f4\u3002\u901a\u8fc7\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u6216\u9632\u6b62\u56e2\u961f\u901f\u5ea6\u7684\u957f\u671f\u4e0b\u964d\uff0c\u6709\u4e00\u4e2a\u9002\u5f53\u7684\u534f\u4f5c\u8fc7\u7a0b\u4f7f\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u6709\u6548\u3002\n\u4f8b\u5982\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5c06\u4f1a\u6709\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4ea7\u54c1\u4e13\u5bb6\u60f3\u8981\u6dfb\u52a0\u7684\u7279\u5b9a\u529f\u80fd\uff0c\u5e76\u4e14\u76f8\u5173\u5f00\u53d1\u590d\u6742\u6027\u7684\u7ea7\u522b\u4f1a\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u901a\u5e38\uff0c\u4ece\u4ea7\u54c1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u9009\u62e9\u8fd9\u4e9b\u66ff\u4ee3\u65b9\u6848\u4e2d\u7684\u54ea\u4e00\u4e2a\u5e76\u4e0d\u91cd\u8981\uff0c\u53ca\u65e9\u53d1\u73b0\u53ef\u4ee5\u4e3a\u8bbe\u8ba1\u5e08\u548c\u5de5\u7a0b\u5e08\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u5de5\u7a0b\u56e2\u961f\u53ef\u80fd\u4f1a\u770b\u5230\u7279\u5b9a\u91cd\u6784\u7684\u5fc5\u8981\u6027\uff0c\u4f46\u53ef\u80fd\u4f1a\u6709\u8425\u9500\u56e2\u961f\u5fc5\u987b\u5c65\u884c\u7684\u76f8\u4e92\u51b2\u7a81\u7684\u627f\u8bfa\uff0c\u8fd9\u8bc1\u660e\u5c06\u91cd\u6784\u63a8\u8fdf\u5230\u4ee5\u540e\u7684\u8fed\u4ee3\u662f\u5408\u7406\u7684\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u4ece\u7528\u6237\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u91cd\u6784\u53ef\u80fd\u5bf9\u4ea7\u54c1\u6709\u5f88\u5927\u7684\u79ef\u6781\u5f71\u54cd\uff0c\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709\u5229\u76ca\u76f8\u5173\u8005\u5bf9\u8be5\u627f\u8bfa\u7684\u652f\u6301\u3002\u53ea\u6709\u901a\u8fc7\u6c9f\u901a\u548c\u534f\u4f5c\u624d\u80fd\u53d1\u73b0\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\uff0c\u4e0d\u4ec5\u662f\u5728\u8fdb\u884c\u5de5\u4f5c\u65f6\uff0c\u800c\u4e14\u5728\u786e\u5b9a\u8303\u56f4\u548c\u8ba1\u5212\u5de5\u4f5c\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u5c3d\u7ba1\u8fd9\u770b\u8d77\u6765\u5f88\u660e\u663e\uff0c\u4f46\u8bb8\u591a\u56e2\u961f\u90fd\u5728\u4e3a\u4e0d\u5f00\u653e\u7684\u540e\u679c\u800c\u82e6\u82e6\u6323\u624e\u3002\n\u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u8fed\u4ee3\u9886\u5bfc\u89d2\u8272\u3002\u8fed\u4ee3\u8d1f\u8d23\u4eba\u8d1f\u8d23\u8bc6\u522b\u3001\u786e\u5b9a\u8303\u56f4\u548c\u51c6\u5907\u5728\u7279\u5b9a\u8fed\u4ee3\u4e2d\u8ba1\u5212\u53d1\u751f\u7684\u6240\u6709\u5de5\u4f5c\u3002\u4ed6\u4eec\u5c06\u4ece\u6240\u6709\u6d89\u4f17\u90a3\u91cc\u6536\u96c6\u8f93\u5165\uff0c\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u51c6\u5907\u9002\u5f53\u7684\u4efb\u52a1(\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\u4ec0\u4e48\u662f\u9002\u5f53\u7684\u4efb\u52a1)\uff0c\u786e\u5b9a\u4efb\u52a1\u7684\u4f18\u5148\u987a\u5e8f\uff0c\u5e76\u5728\u5f00\u59cb\u8fed\u4ee3\u4e4b\u524d\u5c06\u7ed3\u679c\u5448\u73b0\u7ed9\u4ea7\u54c1\u56e2\u961f\u3002\u5f53\u7136\uff0c\u8fed\u4ee3\u8d1f\u8d23\u4eba\u4e0d\u53ef\u80fd\u62e5\u6709\u6bcf\u4e2a\u6d89\u4f17\u62e5\u6709\u7684\u5173\u4e8e\u5176\u9886\u57df\u7684\u6240\u6709\u8be6\u7ec6\u77e5\u8bc6\uff0c\u800c\u4e14\u4ed6\u4eec\u4e5f\u4e0d\u5e94\u8be5\u62e5\u6709-\u4ed6\u4eec\u5c06\u8054\u7cfb\u5404\u81ea\u7684\u4e13\u5bb6\uff0c\u5c06\u4eba\u4eec\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u5e76\u786e\u4fdd\u8fdb\u884c\u6c9f\u901a\u3002\n\u8fed\u4ee3\u9886\u5bfc\u89d2\u8272\u5e76\u4e0d\u56fa\u5b9a\u4e8e\u4ea7\u54c1\u56e2\u961f\u7684\u7279\u5b9a\u6210\u5458\uff0c\u800c\u662f\u8bbe\u7f6e\u4e3a\u6574\u4e2a\u56e2\u961f\u7684\u8f6e\u6362\u89d2\u8272-\u6bcf\u9694\u4e00\u6b21\u8fed\u4ee3\uff0c\u8be5\u89d2\u8272\u5c31\u4f1a\u8f6c\u79fb\u5230\u4e00\u4e2a\u65b0\u7684\u56e2\u961f\u6210\u5458\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4ea7\u54c1\u6216\u8425\u9500\u4e13\u5bb6\u3001\u8bbe\u8ba1\u5e08\u6216\u5de5\u7a0b\u5e08\u90fd\u4f1a\u5b9a\u671f\u62c5\u4efb\u8be5\u89d2\u8272\u3002\u5728\u6574\u4e2a\u56e2\u961f\u4e2d\u8f6e\u6362\u89d2\u8272\u662f\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u786e\u4fdd\u4eba\u4eec\u7406\u89e3\u548c\u6b23\u8d4f\u6bcf\u4e2a\u5229\u76ca\u76f8\u5173\u8005\u7684\u89c2\u70b9\uff0c\u800c\u4e0d\u662f\u53ea\u505c\u7559\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u89c2\u70b9\u4e0a\u3002\u8fd9\u79cd\u6b23\u8d4f\u4e0d\u4ec5\u6709\u76ca\u4e8e\u56e2\u961f\u7cbe\u795e\uff0c\u8fd8\u80fd\u6781\u5927\u5730\u6539\u5584\u6211\u4eec\u7ecf\u9a8c\u4e2d\u7684\u534f\u4f5c\u3002\u6211\u4eec\u751a\u81f3\u6839\u672c\u4e0d\u4e0e\u9879\u76ee\u7ecf\u7406\u4e00\u8d77\u5de5\u4f5c\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u8fed\u4ee3\u9886\u5bfc\u89d2\u8272\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8ba4\u4e3a\u9879\u76ee\u7ecf\u7406\u8fd9\u4e2a\u89d2\u8272--\u81f3\u5c11\u5728\u5b83\u7684\u7ecf\u5178\u5f62\u8c61\u4e2d\uff0c\u662f\u4e00\u4e2a\u9886\u5bfc\u4ea7\u54c1\u56e2\u961f\u7684\u4eba--\u662f\u4e00\u79cd\u7ec4\u7ec7\u53cd\u6a21\u5f0f\uff0c\u901a\u5e38\u53ea\u6709\u5728\u56e2\u961f\u6838\u5fc3\u771f\u6b63\u5931\u7075\u7684\u60c5\u51b5\u4e0b\u624d\u662f\u5fc5\u8981\u7684\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u8bb8\u591a\u56e2\u961f\u5c06\u51c6\u5907\u548c\u7ef4\u62a4\u4e00\u4e2a\u5e7f\u6cdb\u7684Backlog\uff0c\u5176\u4e2d\u586b\u6ee1\u4e86\u4efb\u4f55\u4eba\u66fe\u7ecf\u63d0\u51fa\u8fc7\u7684\u6216\u671f\u671b\u6700\u7ec8\u9700\u8981\u7279\u5b9a\u9879\u76ee\u7684\u6240\u6709\u4efb\u52a1\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u4e3a\u4e86\u66f4\u5b8c\u6574\u5730\u7406\u89e3\u9879\u76ee\u7684\u6574\u4f53\uff0c\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u552f\u4e00\u91cd\u8981\u7684\u5de5\u4f5c\u662f\u56e2\u961f\u5f53\u524d\u6b63\u5728\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6b63\u5728\u4e3a\u4e0b\u4e00\u6b21\u8fed\u4ee3\u505a\u4ec0\u4e48\u51c6\u5907\u548c\u8ba1\u5212\u3002\u5176\u4ed6\u7684\u4e00\u5207\u90fd\u53ef\u4ee5\u5b89\u5168\u5730\u5ffd\u7565\uff0c\u56e0\u4e3a\u6211\u4eec\u5b8c\u5168\u4e0d\u77e5\u9053\u5c06\u6765\u4f1a\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u6765\u5904\u7406\u67d0\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u6216\u8005\u5b83\u662f\u5426\u4f1a\u88ab\u5b8c\u5168\u5ffd\u7565\u3002\u6bcf\u4e2a\u4eba\u90fd\u770b\u5230\u8fc7\u6709\u5927\u91cf\u79ef\u538b\u7684\u9879\u76ee\uff0c\u8fd9\u4f3c\u4e4e\u610f\u5473\u7740\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u9700\u8981\u5b8c\u6210\uff0c\u800c\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\uff0c90%\u7684\u4efb\u52a1\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u627f\u62c5\uff0c\u800c75%\u7684\u4efb\u52a1\u5df2\u7ecf\u8fc7\u65f6\u4e86(\u8fd9\u4e9b\u90fd\u662f\u865a\u6784\u7684\u6570\u5b57\uff0c\u53ea\u6709\u6211\u7684\u4e2a\u4eba\u7ecf\u9a8c\u270c\ufe0f\u652f\u6301)\u3002\n\u79ef\u6781\u5730\u4fdd\u6301\u79ef\u538b\u5de5\u4f5c\u901a\u5e38\u53ea\u662f\u6d6a\u8d39\u65f6\u95f4\u3002\u8fd9\u4e0d\u4ec5\u9002\u7528\u4e8e\u529f\u80fd\u4efb\u52a1\uff0c\u4e5f\u9002\u7528\u4e8e\u9519\u8bef\u62a5\u544a--\u8fc7\u53bb\u516d\u4e2a\u6708\u6ca1\u6709\u89e3\u51b3\u7684\u9519\u8bef\u4e0d\u592a\u53ef\u80fd\u5728\u63a5\u4e0b\u6765\u7684\u516d\u4e2a\u6708\u5185\u5f97\u5230\u89e3\u51b3\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u4e0d\u592a\u53ef\u80fd\u4e0e\u4efb\u4f55\u4eba\u771f\u6b63\u76f8\u5173\uff0c\u56e0\u6b64\u4e0d\u592a\u53ef\u80fd\u5b8c\u5168\u89e3\u51b3(\u9664\u975e\u5b83\u662f\u4f5c\u4e3a\u5e95\u5c42\u529f\u80fd\u66f4\u6539\u7684\u7ed3\u679c\u81ea\u52a8\u89e3\u51b3\u7684)\u3002\n\u4e00\u65e6\u4ece\u9879\u76ee\u6d89\u4f17\u5904\u83b7\u5f97\u5de5\u4f5c\u8d44\u6e90\uff0c\u5c31\u9700\u8981\u5f88\u597d\u5730\u7406\u89e3\u5b83\u5e76\u786e\u5b9a\u5176\u8303\u56f4\u3002\u4e3a\u4e86\u5168\u9762\u4e86\u89e3\u4efb\u52a1\u7684\u6574\u4f53\u60c5\u51b5\uff0c\u9632\u6b62\u56e2\u961f\u5728\u5de5\u4f5c\u5f00\u59cb\u540e\u9047\u5230\u4e0d\u53ef\u9884\u89c1\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u81f3\u5173\u91cd\u8981\u7684\u4e00\u6b65\u3002\u5f53\u7136\uff0c\u4e0d\u53ef\u80fd\u603b\u662f\u5b8c\u5168\u907f\u514d\u4ee5\u540e\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8d8a\u65e9\u53d1\u73b0\u548c\u89e3\u51b3\u7684\u95ee\u9898\u8d8a\u591a\uff0c\u5b8c\u6210\u6bcf\u9879\u4efb\u52a1\u5c31\u8d8a\u987a\u5229\u3002\n\u9996\u5148\uff0c\u5fc5\u987b\u6ee1\u8db3\u4e00\u9879\u4efb\u52a1\u7684\u6240\u6709\u524d\u63d0\u6761\u4ef6\uff0c\u7136\u540e\u624d\u80fd\u8fdb\u884c\u5de5\u4f5c\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u8bbe\u8ba1\u51c6\u5907\u5c31\u7eea\u6216\u7528\u6237\u6d4b\u8bd5\u5df2\u7ecf\u8fdb\u884c\u548c\u5206\u6790\u3002\u8fd9\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u5df2\u7ecf\u4e0e\u5916\u90e8\u63d0\u4f9b\u5546\u7b7e\u7f72\u4e86\u5408\u540c\uff0c\u6216\u8005\u5df2\u7ecf\u9884\u8ba2\u4e86\u8425\u9500\u6d3b\u52a8\u3002\u4e0e\u524d\u63d0\u6761\u4ef6\u540c\u6837\u91cd\u8981\u7684\u662f\u4efb\u52a1\u7684\u540e\u679c\uff0c\u8fd9\u4e9b\u540e\u679c\u53ef\u4ee5\u662f\u6280\u672f\u6027\u7684\uff0c\u4f46\u4e5f\u4e0e\u529f\u80fd\u6216\u8bbe\u8ba1\u6709\u5173-\u53ef\u80fd\u662f\u6280\u672f\u4e0a\u7684\u6539\u53d8\n\u4e00\u4e9b\u56e2\u961f\u6b63\u5728\u91c7\u7528\u5168\u9762\u7684RFC\u6d41\u7a0b\u6765\u786e\u5b9a\u548c\u5b9a\u4e49\u5de5\u4f5c\u7684\u8303\u56f4\uff0c\u5c31\u50cf\u8fd9\u6837\u3002\u5728RFC\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4eba\u6216\u4e00\u7fa4\u4eba\u4f1a\u5199\u4e00\u4efd\u6587\u4ef6\uff0c\u76f8\u5bf9\u8be6\u7ec6\u5730\u89e3\u91ca\u9884\u671f\u7684\u53d8\u5316\uff0c\u7136\u540e\u8981\u6c42\u6240\u6709\u53d7\u5f71\u54cd\u7684\u5229\u76ca\u76f8\u5173\u8005(\u6216\u5b9e\u9645\u4e0a\u662f\u4efb\u4f55\u4eba)\u63d0\u4f9b\u53cd\u9988\uff0c\u76f4\u5230\u8fbe\u6210\u5171\u8bc6\uff0cRFC\u51c6\u5907\u597d\u5b9e\u65bd\u4e3a\u6b62\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u5408\u7406\u7684\u624b\u7eed\u548c\u6d41\u7a0b\u5f00\u9500\uff0c\u4f46\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u786e\u4fdd\u4e0a\u8ff0\u51e0\u70b9\u5f97\u5230\u89e3\u51b3\u3002\u901a\u5e38\uff0cRFC\u8fc7\u7a0b\u53ef\u80fd\u8d8a\u9002\u5408\u4efb\u52a1\u4e3b\u9898\u8d8a\u5e7f\u3001\u56e2\u961f\u89c4\u6a21\u8d8a\u5927\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e\u8f83\u5c0f\u7684\u56e2\u961f\uff0c\u76f4\u63a5\u5728\u5404\u81ea\u7684\u5de5\u5177\u4e2d\u534f\u4f5c\u7f16\u8f91\u4efb\u52a1\u53ef\u80fd\u5c31\u8db3\u591f\u4e86\u3002\n\u6b63\u786e\u51c6\u5907\u4efb\u52a1\u7684\u6700\u540e\u4e00\u6b65\u662f\u5c06\u524d\u9762\u6b65\u9aa4\u4e2d\u83b7\u5f97\u7684\u6240\u6709\u4fe1\u606f\u5199\u5230\u6240\u9009\u7684\u5de5\u5177\u4e2d\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u4ec0\u4e48\u5de5\u5177\u65e0\u5173\u7d27\u8981-\u597d\u7684\u4efb\u52a1\u5171\u4eab\u4e00\u4e9b\u72ec\u7acb\u4e8e\u4efb\u4f55\u7279\u5b9a\u5de5\u5177\u7684\u5171\u540c\u7279\u5f81\uff1a\n\u5b83\u4eec\u63cf\u8ff0\u4e86\u8981\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u53ef\u80fd\u4f34\u968f\u7740\u5c4f\u5e55\u622a\u56fe\u3001\u6a21\u578b/\u8349\u56fe\u6216\u5176\u4ed6\u6709\u52a9\u4e8e\u7406\u89e3\u9884\u671f\u7ed3\u679c\u7684\u89c6\u89c9\u6548\u679c\uff1b\u6dfb\u52a0\u4efb\u52a1\u5386\u53f2\u6458\u8981\u4e5f\u662f\u6709\u76ca\u7684\uff0c\u5305\u62ec\u4ee5\u524d\u5728\u786e\u5b9a\u4efb\u52a1\u8303\u56f4\u7684\u8fc7\u7a0b\u4e2d\u6392\u9664\u7684\u76f8\u5173\u66f4\u6539\u6216\u66ff\u4ee3\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u8fd9\u4e9b\u51b3\u5b9a\u7684\u539f\u56e0\u3002\n\u5982\u679c\u4efb\u52a1\u63cf\u8ff0\u4e86\u9519\u8bef\uff0c\u5219\u5b83\u4eec\u5305\u62ec\u518d\u73b0\u6b65\u9aa4\uff1b\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u662f\u7528\u5c4f\u5e55\u8bb0\u5f55\u6216\u5176\u4ed6\u5a92\u4f53\u53ef\u89c6\u5316\u7684\u3002\n\u5b83\u4eec\u5217\u51fa\u4e86\u4e3a\u5b8c\u6210\u4efb\u52a1\u800c\u5fc5\u987b\u91c7\u53d6\u7684\u5177\u4f53\u6b65\u9aa4(\u53c2\u89c1\u4e0a\u9762\u7684\u8303\u56f4\u754c\u5b9a\u548c\u5206\u6790)\u3002\n\u5b83\u4eec\u5305\u62ec\u4efb\u52a1\u6240\u9700\u7684\u6240\u6709\u5fc5\u8981\u6750\u6599\uff1b\u8fd9\u53ef\u4ee5\u662f\u53ef\u89c6\u8d44\u4ea7\u3001\u6307\u5411\u7b2c\u4e09\u65b9\u5e93\u6216API\u7684\u5728\u7ebf\u6587\u6863\u7684\u94fe\u63a5\u6216\u6d89\u53ca\u95ee\u9898\u7684\u5916\u90e8\u65b9\u7684\u8054\u7cfb\u8be6\u7ec6\u4fe1\u606f\u7b49\u3002\n\u4ed6\u4eec\u63d0\u5230\u4e86\u4efb\u4f55\u9700\u8981\u56de\u7b54\u7684\u672a\u51b3\u95ee\u9898\uff0c\u6216\u8005\u5df2\u7ecf\u786e\u5b9a\u4f46\u65e0\u6cd5\u9884\u5148\u89e3\u51b3\u7684\u98ce\u9669\uff0c\u8fd9\u4e9b\u98ce\u9669\u53ef\u80fd\u4f1a\u963b\u788d\u4efb\u52a1\u7684\u5b8c\u6210\u3002\n\u5b83\u4eec\u662f\u4e00\u4e2a\u79bb\u6563\u7684\u5de5\u4f5c\u5355\u5143\uff1b\u4efb\u52a1\u5e94\u8be5\u53ea\u5305\u542b\u76f8\u5173\u7684\u8981\u6c42\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u4e0d\u80fd\u8d85\u8fc7\u51e0\u5929\u7684\u5de5\u4f5c\u91cf--\u5927\u7684\u4efb\u52a1\u901a\u5e38\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u591a\u4e2a\u8f83\u5c0f\u7684\u4efb\u52a1\uff0c\u751a\u81f3\u53ef\u80fd\u5141\u8bb8\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c\u3002\n\u4e00\u9879\u51c6\u5907\u5145\u5206\u7684\u4efb\u52a1\u5c06\u4f7f\u4ea7\u54c1\u56e2\u961f\u4e2d\u4efb\u4f55\u5728\u5404\u81ea\u9886\u57df\u90fd\u662f\u4e13\u5bb6\u7684\u6210\u5458\u90fd\u80fd\u591f\u627f\u62c5\u5e76\u5b8c\u6210\u4efb\u52a1\u3002\u7136\u800c\uff0c\u4efb\u52a1\u4e0d\u4ec5\u662f\u4e3a\u5c06\u8981\u5904\u7406\u4efb\u52a1\u7684\u56e2\u961f\u6210\u5458\u7f16\u5199\u7684\uff0c\u4e5f\u662f\u4e3a\u5bf9\u9879\u76ee\u611f\u5174\u8da3\u5e76\u9700\u8981\u968f\u65f6\u77e5\u9053\u6b63\u5728\u8fdb\u884c\u4ec0\u4e48\u7684\u4efb\u4f55\u5176\u4ed6\u6d89\u4f17\u7f16\u5199\u7684-\u65e0\u8bba\u662f\u5728\u4efb\u52a1\u88ab\u79ef\u6781\u8ba1\u5212\u6216\u6b63\u5728\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u7a0d\u540e\u8bd5\u56fe\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u505a\u4e00\u4e9b\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u5f53\u65f6\u7684\u610f\u56fe\u548c\u8003\u8651\u662f\u4ec0\u4e48\u7b49\u7b49\uff0c\u90fd\u662f\u4e3a\u4ed6\u4eec\u7f16\u5199\u7684\uff0c\u8fd9\u4e9b\u4eba\u90fd\u5bf9\u9879\u76ee\u611f\u5174\u8da3\uff0c\u9700\u8981\u968f\u65f6\u77e5\u9053\u6b63\u5728\u8fdb\u884c\u7684\u4e8b\u60c5--\u65e0\u8bba\u662f\u5728\u4efb\u52a1\u88ab\u79ef\u6781\u8ba1\u5212\u6216\u6b63\u5728\u8fdb\u884c\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u5728\u4ee5\u540e\u8bd5\u56fe\u7406\u89e3\u4e3a\u4ec0\u4e48\u8981\u505a\u4e00\u4e9b\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u4ee5\u53ca\u5f53\u65f6\u7684\u610f\u56fe\u548c\u8003\u8651\u56e0\u7d20\u7b49\u7b49\u3002\n\u56e2\u961f\u4e4b\u6240\u4ee5\u4e0d\u6210\u529f\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u91c7\u7528\u4e86\u7279\u5b9a\u7684\u6d41\u7a0b(\u751a\u81f3\u6709\u53ef\u80fd\u8ba9\u81ea\u5df1\u83b7\u5f97\u8ba4\u8bc1)\uff0c\u6216\u8005\u91c7\u7528\u4e86\u6700\u65b0\u6700\u68d2\u7684\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002\u6210\u529f\u4e3b\u8981\u662f\u901a\u8fc7\u76f8\u5bf9\u7b80\u5355\u7684\u503c\u6765\u5b9e\u73b0\u7684\uff1a\n\u5728\u4efb\u52a1\u5f00\u59cb\u5de5\u4f5c\u4e4b\u524d\uff0c\u5728\u4efb\u52a1\u7ea7\u522b\u8bc6\u522b\u548c\u89e3\u51b3\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u786e\u5b9a\u6027\u5e76\u53d1\u73b0\u5c3d\u53ef\u80fd\u591a\u7684\u9690\u85cf\u590d\u6742\u6027\u3002\n\u5728\u8ba1\u5212\u548c\u6267\u884c\u8fed\u4ee3\u65f6\u5ffd\u7565\u6240\u6709\u5df2\u77e5\u4e0d\u76f8\u5173\u7684\u5de5\u4f5c\u3002\n\u5f7b\u5e95\u5730\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b\u90fd\u9700\u8981\u4e00\u70b9\u989d\u5916\u7684\u65f6\u95f4(\u8fed\u4ee3\u9886\u5bfc\u6bcf\u5468\u5f88\u5bb9\u6613\u88ab\u5360\u7528\u51e0\u5929\u65f6\u95f4\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6bcf\u4e2a\u4e3b\u9898\u7684\u9884\u671f\u4e13\u5bb6\u90fd\u4f1a\u6295\u5165\u4ed6\u4eec\u7684\u610f\u89c1)\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6548\u7387\u7684\u5927\u5927\u63d0\u9ad8\uff0c\u4ee5\u53ca\u786e\u5b9a\u6027\u548c\u53ef\u8ba1\u5212\u6027\u7684\u63d0\u9ad8\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5f97\u5230\u4e86\u6210\u500d\u7684\u56de\u62a5\u3002\n\u6211\u4eec\u5df2\u7ecf\u5c06\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6240\u6709\u4ef7\u503c\u89c2\u548c\u6280\u5de7\u66f4\u8be6\u7ec6\u5730\u5199\u5728\u4e86\u6211\u4eec\u7684\u624b\u518c\u4e2d\uff0c\u5e76\u6b22\u8fce\u6bcf\u4e2a\u4eba\u6539\u7f16\u8fd9\u4e9b\u6a21\u5f0f\uff0c\u5e76\u4e0e\u6211\u4eec\u5206\u4eab\u4ed6\u4eec\u7684\u7ecf\u9a8c\u548c\u53cd\u9988\u3002", "note_en": "When it comes to planning software projects on the macro level, there&#39;s twoextremes \u2013 trying to plan everything up-front or accepting the impossibility ofgetting that right and not bothering to plan anything at all. While most teamswill find themselves somewhere in the middle between those two, it&#39;s still worthreviewing them in a bit more detail.\n  Historically, in a  waterfallbased world, over-planning was widely used. The idea behind this approach is toplan out the entirety of the project up-front in excessive detail, project thatplan on to a timeline and then execute it. Teams practicing over-planning wouldwrite long and detailed specifications that describe all aspects of the project.They would then break that specification down into a backlog of smaller tasks,estimate that backlog somehow and extrapolate how long the project will take;eventually leading to statements like  &#34;We can build the social network forelephants as described in the 587 page long specification in 67 weeks and itwill cost a total of 1.34 Mio. \u20ac&#34;.\n As we all know now this almost never works as planned, deadlines are missed andbudgets overrun \u2013 as countless examples show.\n  The opposite of that approach is doing only very little or no up-front planningat all and just running off. While that removes a lot of pressure fromdevelopment teams (designers and engineers in particular), other stakeholdersthat have legitimate needs with regards to predictability and insight into aproject&#39;s progress are left in the cold. The marketing team will not know whento book the billboards in the local zoo and the product experts can&#39;t set up theuser testing session with a group of sample elephants as they don&#39;t know whatfeatures they will be able to test when or whether there will be a coherent setof functionality that even makes sense as a unit at any time at all.\n  No teams (that I have seen at least \ud83e\udd1e) in reality strictly practice either ofthese two extremes. The classic waterfall model fortunately is a thing of thepast now and the shortcomings of having a team just run off with no plan are tooobvious for anyone to be brave (or naive) enough to try it. In fact, developingproducts iteratively following an  &#34;agile&#34; process (whatever precisely thatterm might mean for any particular team) is a widely accepted technique now.That way, the scope and thus complexity and risk is significantly reduced periteration (often referred to as &#34;sprints&#34;\u2013 which I think is a horrible term but that&#39;s a blog post of its own right) intosomething much more manageable. All planning is then based on estimates ofrelatively small tasks (using e.g. story points) and productivitymeasures based on those estimates (the team&#39;s &#34;velocity&#34;).\n In reality however, adopting an agile, iterative process (whether that&#39;s Scrum, a team&#39;sown interpretation of it or something completely different) will not magicallysolve all of the above problems. Teams will still face budget overruns and notbe able to give reliable estimates even given the short time horizon of a twoweek iteration. Unforeseen and unplanned-for complexities and challenges willstill be uncovered only after a task was started, many tasks will span multiplesprints unexpectedly and already completed features will regularly have to berevisited and changed even before launching an MVP.\n Having moved planning from the macro level where it did reside with the classicwaterfall approach to the micro level of an iteration, that level is also wherethe problems were moved to.\n  Planning on the micro level of an iteration means scoping, bundling andestimating concrete, actionable units of work. There are countless names forthese units which depend on the particular process or tool in use but in realityit doesn&#39;t matter whether you call them issues, (user) stories or TODOs, whetheryou organize them in trees with several levels of subtasks and/or overarchingepics \u2013 what they are is tasks that one or several team members can work on andcomplete, ideally in relatively short time (like a few days at most). A bundleof tasks defines the scope of an iteration which is what we&#39;re planning for onthe micro level.\n  There&#39;s a very popular quote from the team behind Basecamp, a bootstrapped company that built a hugelysuccessful project management SaaS with the same name:\n  Basecamp explain the idea in more detail in their bestselling book  &#34;Rework&#34;. The quote is both great andwidely misunderstood. What it means is that anything beyond a pretty small scopeis inherently not plannable and any plan anyone makes up for it, is essentiallynothing more than a guess. As explained above that is very much true at themacro level where scope and complexity are way too big for anyone to be able tofully grasp. What the quote does not mean however, is that you can never prepareand pre\u2013assess any work when the scope is limited \u2013 which is the fact on themicro level of an iteration.\n Yet, many project teams use  &#34;planning is guessing&#34; as an excuse to refusedoing any thorough up-front analysis or preparation of tasks at all. Even ifteams spend time on preparing work before starting it, that preparation is oftensuperficial only, leaving a lot of uncertainty and risk to be uncovered onlyafter work on a task has started. Understanding any task fully and in itsentirety does of course require actively working on and in fact completing thetask. It is however very well possible to analyze tasks to uncover hiddencomplexity, dependencies and implications \u2013 not only from an engineeringperspective but also from the perspectives of other stakeholders like design,product, marketing etc.\n Thorough analysis and preparation of tasks will help in understanding the scopeof the tasks, identifying dependent work that needs to be done before or inconsequence or weighing alternative implementation options against each other aswell as against other priorities. All that reduces the uncertainty that isassociated with a task and even while you won&#39;t be able to fully eliminate alluncertainty, eliminating a big part or maybe most of it significantly improvesthe reliability of estimates and minimizes unplanned work that is usuallynecessary when running into unforeseen complications only after work hasstarted.\n  In order to improve planning on the micro level, it is essential to conductthorough preparation. I will present four key techniques that are essential foreffective preparation of tasks and that simplabs has been practicingsuccessfully for years.\n  First, let&#39;s look at where the work that a product team conducts typicallyoriginates from. In most cases, there are more or less only two sources \u2013feature stories that are defined by the product team and technical changes likerefactorings driven by the engineering team. Ideally both kinds of work areequally represented as tasks although in many cases that is not the case forpurely technical work. Since that work happens anyway though, not representingit as individual tasks is a big mistake and leads to part of the work that ishappening not being visible to all stakeholders with all of the negativeconsequences that come with that.\n So let&#39;s assume  all work that is happening in a project is equallyrepresented as tasks. Still, in many cases stakeholders would only define theirown tasks without receiving much input from each other. Each stakeholder thenpushes for their tasks to be planned for in a particular iteration. That is notan effective way of collaborating though and generally not in the best interestof the success of the project. A successful project needs to take all of thestakeholder&#39;s individual perspectives and priorities into account. After all,neither focusing on features only and giving up technical aspects like long-termmaintainability and extensibility of the product, nor refactoring the code toperfection but only shipping too little too late, will result in a success forthe business.\n  Successful teams communicate openly and directly and collaborate closely. Whilethis might read like an obvious statement, in reality there is often lots ofroom for improvement. Many teams build walls between stakeholders when theyreally would all have to collaborate \u2013 from product experts to engineering anddesign but also marketing, finance and potentially others. That collaborationstarts with agreeing what work should be done in which order and to what levelof depth. Having a collaborative process for this in place makes the entiredevelopment process more effective by eliminating unnecessary complexity orpreventing longer-term decline of a team&#39;s velocity.\n In many cases for example, there will be different ways to implement aparticular feature that the product experts want to add with drasticallydifferent levels of associated development complexity. Often, it might notmatter much from a product perspective which of these alternatives is chosen andfinding that out early can save the designers and engineers a substantial amountof time and effort. In other cases, the engineering team might see the necessityfor particular refactorings but there might be conflicting commitments that themarketing team has to fulfill which justify delaying the refactoring to a lateriteration. In other cases yet, a refactoring might have substantial positiveconsequences for the product also from a user&#39;s perspective which would lead towide support of the undertaking from all stakeholders. Uncovering all thesesituations is only possible by communicating and collaborating, not only whenconducting work but already when scoping and planning it. Yet again, as obviousas this might seem, many teams struggle hard with the consequences of not beingas open.\n  In our projects, we leverage an iteration lead role. The iteration lead isresponsible for identifying, scoping and preparing all work that is planned tohappen in a particular iteration. They will collect input from all stakeholders,prepare proper tasks for each request (more on what a proper task is below),prioritize tasks and present the result to the product team before kicking offan iteration. Of course, the iteration lead cannot have all of the detailedknowledge that each stakeholder has about their field and they are not supposedto \u2013 they will reach out to the respective experts, bring people together andmake sure communication happens.\n  The iteration lead role is not fixed to a particular member of the product teambut set up as a rotating role among the  entire team instead \u2013 every otheriteration the role moves on to a new team member so that every product ormarketing expert, designer or engineer will assume it periodically. Rotating therole among the entire team is a great way to ensure people get to understand andappreciate each stakeholder&#39;s perspective and are not stuck with their own pointof view only. That appreciation is not only beneficial for the team spirit butalso significantly improves collaboration in our experience. We do not even workwith project managers at all and depend on the iteration lead role instead. Infact, we see the project manager role \u2013 at least in its classic shape as someonedirecting the product team \u2013 as an organizational anti-pattern that is mostoften necessary only as a consequence of teams that are really dysfunctional attheir core.\n  As described above, many teams will prepare and maintain an extensive backlogfilled with all tasks that anyone ever brought up or that are expected toeventually be required for a particular project. What seems like a good idea inorder to have a more complete understanding of the entirety of a project, in aniterative process the only work that ever matters is what the team is currentlydoing and what is being prepared and planned for the next iteration. Everythingelse can safely be ignored as it is completely unknown in which way a particulartask will be addressed in the future or whether it will be at all. Everyone hasseen projects with huge backlogs that seem to imply lots and lots of work thatstill needs to be done while everyone knows that 90% of the tasks will likelynever be taken on and 75% of them are already outdated anyway (these are made-upnumbers only backed by my personal experience \u270c\ufe0f).\n Actively keeping a backlog is most often simply a waste of time. That is notonly the case for feature tasks but also for bug reports \u2013 a bug that has notbeen addressed for the past six months is unlikely to be addressed in the comingsix months. At the same time it also is unlikely to be really relevant to anyoneand thus unlikely to ever be solved at all (unless it is solved automatically asa consequence of a change to the underlying functionality maybe).\n  Once work has been sourced from the project stakeholders, it needs to be wellunderstood and scoped. This is a critical step in order to fully understand thetasks in their entirety and prevent the team from running into unforeseenproblems once the work has started. Of course, it is not possible to alwaysprevent all problems that might occur at a later point altogether but the morethat is uncovered and addressed earlier rather than later, the smoothercompleting each task will go.\n First, all of a task&#39;s preconditions must be met before it can be worked on atall. That can include designs being ready or user tests having been conductedand analysed. It might also mean contracts with external providers have beensigned or marketing campaigns have been booked. Just as important as thepreconditions are a task&#39;s consequences which can be technical ones but alsorelated to features or design \u2013 a technical change might require a change to thedeployment and monitoring systems; changing feature A might also requireadapting feature B in an unrelated part of the application so that both featuresmake sense together; switching to a new design for forms might have consequencesfor the application&#39;s accessibility and marketing materials outside of theapplication. Most of such consequences can usually be identified and planned forup-front \u2013 in many cases even with relatively little effort.\n Lastly, fully understanding a task should result in the ability to break it downinto a series of steps that need to be performed in order to complete it. Thesesteps do not need to be extremely fine-grained ( &#34;change line x in file y toz&#34;) or be limited to what the engineering team needs to do. Instead, theyshould reflect on a high level  all changes that need to be made to allaspects of the application and related systems to complete the task. Sometimesit turns out that for a particular task it is not possible yet to identify andclearly describe these steps. In these cases, it is recommendable to conduct aspike and prepare a prototype for the aspect that is yet unclear first in orderto understand it better. While this technique comes from the engineering world,it is not limited to it and is just as valuable for designers and productexperts as well (e.g. for validating particular feature flows or designapproaches with real users before implementing it).\n Some teams are adopting full-on RFC processes for scopingand defining work like this. In an RFC process, someone or a group of peoplewould write a document explaining an intended change in relative detail, thenask all affected stakeholders (or anyone really) for feedback until consensus isreached and the RFC is ready to be implemented. While that can come withformalities and process overhead that might not always be justified, it isgenerally a good approach and ensures the above points are addressed. Generally,an RFC process is likely the better suited the wider the topic of a task is andthe larger the team size is. For smaller teams, it might be sufficient tocollaboratively edit a task in the respective tool directly.\n  The final step for proper preparation of tasks is to write all of theinformation acquired in the previous steps down in the tool of choice. As statedabove, it does not matter what tool that is \u2013 good tasks share some commoncharacteristics that are independent of any particular tool:\n They describe what is to be done and why, potentially accompanied byscreenshots, mockups/sketches or other visuals that help understand thedesired outcome; it is also beneficial to add a summary of the task&#39;s history,covering previous related changes or alternative approaches that have beenruled out in the process of scoping the task and also providing the reasonsfor those decisions.\n They include reproduction steps if the task describes a bug; ideally those arevisualized with a screen recording or other media.\n They list concrete steps that must be taken in order to complete the task (see  &#34;3. Scoping and analysis&#34; above).\n They include all necessary materials that are needed for the task; this couldbe visual assets, links to online documentation for third party libraries orAPIs or contact details for external parties involved in an issue etc.\n They reference any open questions that need to be answered, or risks that havebeen identified but could not be resolved up-front and that might prevent thetask from being completed.\n They are a discrete unit of work; tasks should only contain relatedrequirements and ideally not represent more than a few days of work - largertasks can often be broken down into multiple smaller ones, possibly evenallowing for work to happen simultaneously.\n  A well prepared task would enable any member of the product team that is anexpert in the respective field to take on and complete the task. However, tasksare not only written for the team member that will work on them but also for anyother stakeholder that has an interest in the project and needs to know what isgoing on at any time \u2013 be it at the time the task is actively planned or beingworked on or later when trying to understand why something was doneretroactively, what the intentions and considerations were at the time etc.\n  Teams are not successful because they adopt a particular process (andpotentially even get themselves certified) or adopt the latest and greatestproject management tools. Success is mostly enabled through relatively simplevalues:\n identifying and resolving as much uncertainty and uncovering as much hiddencomplexity as possible on the task level  before work on the task starts\n ignoring all work that is not known to be relevant at the time aniteration is planned and executed\n Doing all this thoroughly requires a bit of extra time (the iteration lead wouldeasily be occupied a few days per week with that in addition to the time therespective experts for each topic invest to give their input). However, thanksto much improved effectiveness as well as the benefits of improved certainty andplanability, that time pays off manyfold.\n We have written all of the values and techniques introduced in this post in muchmore detail in our  playbook and welcome everyone to adapt thesepatterns and share their experience and feedback with us.", "posttime": "2020-06-17 21:42:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,winning,\u4efb\u52a1", "title": "\u5728\u89c4\u5212\u8f6f\u4ef6\u9879\u76ee\u65b9\u9762\u5931\u8d25(\u548c\u83b7\u80dc)", "title_en": "Failing (and winning) at planning software projects", "transed": 1, "url": "https://simplabs.com/blog/2020/06/17/failing-and-winning-at-planning-software-projects", "via": "", "real_tags": ["\u8f6f\u4ef6", "winning", "\u4efb\u52a1"]}]