[{"category": "", "categoryclass": "", "imagename": "7bfa0afcf41fa289490c55a511a33b0e.jpeg", "infoid": 1004012, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u662f\u4e00\u5bb6\u5bf9\u672a\u6765\u62b1\u6709\u8fdc\u5927\u68a6\u60f3\u7684\u5c0f\u516c\u53f8\uff0c\u4e91\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u5546\u4e0e\u4f20\u7edf\u4f9b\u5e94\u7cfb\u7edf\u76f8\u6bd4\u7684\u6700\u5927\u4f18\u52bf\u4e4b\u4e00\u662f\uff0c\u5b83\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u8d44\u6e90\u7684\u7075\u6d3b\u6027\u3002", "note_en": "If you\u2019re a small company with big dreams for the future, one of the biggest advantages cloud infrastructure providers have over traditional provisioning systems is the flexibility they offer you to adjust the resources your application\u00a0uses.", "posttime": "2020-05-28 09:08:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u589e\u91cf,increment,\u8d44\u6e90", "title": "\u589e\u91cf\u95ee\u989813\uff1a\u524d\u7aef", "title_en": "Increment Issue 13: Frontend", "transed": 1, "url": "https://increment.com/frontend/", "via": "", "real_tags": ["\u589e\u91cf", "increment", "\u8d44\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "046224e021cd84de5b0eb960f6dc7847.png", "infoid": 1004010, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd1\u5341\u5e74\u7684\u65f6\u95f4\u91cc\uff0cStack Overflow\u7684\u5e74\u5ea6\u5f00\u53d1\u4eba\u5458\u8c03\u67e5\u4e00\u76f4\u88ab\u8a89\u4e3a\u5bf9\u4e16\u754c\u5404\u5730\u7684\u7a0b\u5e8f\u5458\u8fdb\u884c\u7684\u6700\u5927\u89c4\u6a21\u7684\u8c03\u67e5\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u6210\u4e3a\u6700\u5927\u7684\uff0c\u800c\u662f\u8ba9\u6211\u4eec\u7684\u8c03\u67e5\u66f4\u80fd\u4ee3\u8868\u4e16\u754c\u5404\u5730\u7a0b\u5e8f\u5458\u7684\u591a\u6837\u6027\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u8fd9\u9879\u8c03\u67e5\u4ecd\u7136\u5f88\u5927\u3002\u4eca\u5e74\u7684\u8c03\u67e5\u53ea\u67096.5\u4e07\u591a\u4eba\u53c2\u52a0\u3002\n\u5728\u6211\u4eec\u52aa\u529b\u8d85\u8d8a\u5806\u6808\u6ea2\u51fa\u7f51\u7edc\u5e76\u5bfb\u6c42\u66f4\u591a\u4e0d\u540c\u7a0b\u5e8f\u5458\u7684\u4ee3\u8868\u65f6\uff0c\u6211\u4eec\u5728\u81ea\u5df1\u7684\u6e20\u9053\u4e0a\u53d1\u5e03\u7684\u8c03\u67e5\u5e7f\u544a\u6bd4\u524d\u51e0\u5e74\u66f4\u5c11\u4e86\uff0c\u5e76\u5bfb\u6c42\u4ece\u90a3\u4e9b\u53ef\u80fd\u4e0d\u7ecf\u5e38\u8bbf\u95ee\u6211\u4eec\u7f51\u7ad9\u7684\u4eba\u90a3\u91cc\u83b7\u5f97\u56de\u5e94\u7684\u65b9\u6cd5\u3002\u8fd9\u4e00\u65b9\u6cd5\u5305\u62ec\u793e\u4f1a\u63a8\u5e7f\u548c\u5bf9\u4efb\u804c\u4eba\u6570\u4e0d\u8db3\u7684\u7a0b\u5e8f\u5458\u7684\u5ba3\u4f20\u3002\n\u867d\u7136\u6211\u4eec\u770b\u5230\u4ee3\u8868\u4eba\u6570\u4e0d\u8db3\u7684\u7fa4\u4f53\u6709\u6240\u589e\u52a0\uff0c\u4f46\u4ee3\u8868\u4eba\u6570\u7684\u5dee\u5f02\u5e76\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u5927\u3002\u4e00\u4e9b\u79cd\u65cf\u548c\u65cf\u88d4\u7fa4\u4f53\u7684\u4eba\u6570\u6709\u6240\u4e0a\u5347\uff0c\u7279\u522b\u662f\u897f\u73ed\u7259\u88d4\u6216\u62c9\u4e01\u88d4/a/x\u548c\u9ed1\u4eba\u6216\u975e\u6d32\u88d4\u7fa4\u4f53\uff0c\u800c\u5176\u4ed6\u79cd\u65cf\u548c\u65cf\u88d4\u4fdd\u6301\u76f8\u4f3c\u6216\u51cf\u5c11\u3002\u540c\u6837\uff0c\u6211\u4eec\u770b\u5230\u5973\u6027\u6027\u522b\u53d7\u8bbf\u8005\u7565\u6709\u589e\u52a0\uff0c\u800c\u975e\u4e8c\u5143\u3001\u6027\u522b\u9177\u513f\u6216\u4e0d\u7b26\u5408\u6807\u51c6\u7684\u53d7\u8bbf\u8005\u6570\u91cf\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u627f\u8ba4\u6211\u4eec\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u800c\u6211\u4eec\u6bcf\u5e74\u8fdb\u884c\u7684\u8c03\u67e5\u6240\u5f97\u7684\u6570\u636e\uff0c\u6709\u52a9\u6211\u4eec\u4f5c\u51fa\u6539\u53d8\uff0c\u8ba2\u4e0b\u76ee\u6807\uff0c\u4ee5\u6539\u5584\u793e\u4f1a\u7684\u6b22\u8fce\u7a0b\u5ea6\u548c\u5305\u5bb9\u6027\u3002\n\u4f7f\u7528\u624b\u5934\u7684\u6570\u636e\uff0c\u6211\u4eec\u6839\u636e\u9002\u7528\u7684\u4eba\u53e3\u7edf\u8ba1\u6570\u636e\u5bf9\u6211\u4eec\u7684\u5206\u6790\u8fdb\u884c\u4e86\u7ec6\u5206\u3002\u5bfb\u627e\u56fe\u6807\uff0c\u770b\u770b\u4eba\u53e3\u7edf\u8ba1\u5728\u54ea\u4e9b\u65b9\u9762\u4ea7\u751f\u4e86\u6709\u8da3\u7684\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u4e00\u5b9a\u8981\u67e5\u770b\u4eca\u5e74\u8c03\u67e5\u4e2d\u7684\u65b0\u8bdd\u9898\uff0c\u6bd4\u5982\u5173\u4e8eDevOps\u548c\u52a0\u73ed\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u8fd8\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u4eca\u5e74\u7684\u8c03\u67e5\u662f\u57282\u6708\u4efd\u8fdb\u884c\u7684\uff0c\u5f53\u65f6\u65b0\u51a0\u80ba\u708e\u8fd8\u6ca1\u6709\u88ab\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u5ba3\u5e03\u4e3a\u5927\u6d41\u884c\uff0c\u75c5\u6bd2\u8fd8\u6ca1\u6709\u5f71\u54cd\u5230\u4e16\u754c\u4e0a\u6bcf\u4e2a\u56fd\u5bb6\u3002\u5728\u5ba1\u67e5\u5de5\u4f5c\u548c\u85aa\u8d44\u6570\u636e\u7b49\u4fe1\u606f\u65f6\uff0c\u8bf7\u7262\u8bb0\u8c03\u67e5\u7684\u65f6\u95f4\u3002\n\u6700\u540e\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u81ea\u5df1\u6df1\u5165\u7814\u7a76\u7ed3\u679c\u7684\u4eba\uff0c\u53ef\u4ee5\u6839\u636e\u5f00\u653e\u6570\u636e\u5e93\u8bb8\u53ef\u8bc1(ODbL)\u4e0b\u8f7d\u533f\u540d\u7684\u8c03\u67e5\u7ed3\u679c\u3002\u6211\u4eec\u671f\u5f85\u770b\u5230\u60a8\u7684\u53d1\u73b0-\u5982\u679c\u60a8\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u5206\u4eab\uff0c\u8bf7\u52a1\u5fc5\u6807\u8bb0\u6211\u4eec\uff01\n\u7ecf\u8fc7\u8fc7\u53bb\u4e94\u5e74\u7684\u6301\u7eed\u4e0a\u5347\uff0cPython\u5728\u6700\u53d7\u6b22\u8fce\u7684\u6280\u672f\u6392\u884c\u699c\u4e0a\u4ece\u53bb\u5e74\u7684\u7b2c\u4e8c\u540d\u8dcc\u81f3\u4eca\u5e74\u7684\u7b2c\u4e09\u540d\uff0c\u88ab\u6253\u5b57\u7a3f\u51fb\u8d25\u3002\u94c1\u9508\u8fde\u7eed\u7b2c\u4e94\u5e74\u8363\u767b\u6700\u53d7\u6b22\u8fce\u79d1\u6280\u699c\u9996\u3002\n\u6700\u53d7\u6b22\u8fce\u7684\u8bed\u8a00\u2192\n\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\u5e08\u548cDevOps\u4e13\u5bb6\u4ecd\u7136\u662f\u85aa\u916c\u6700\u9ad8\u7684\u4e2a\u4eba\u8d21\u732e\u8005\u89d2\u8272\u300280%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3aDevOps\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5f88\u91cd\u8981\uff0c44%\u7684\u53d7\u8bbf\u8005\u5728\u81f3\u5c11\u6709\u4e00\u540d\u4e13\u6ce8\u7684DevOps\u5458\u5de5\u7684\u7ec4\u7ec7\u4e2d\u5de5\u4f5c\u3002\n\u5168\u7403\u85aa\u8d44\u2192\u3002\n52%\u7684\u53d7\u8bbf\u8005\u5728\u7f51\u4e0a\u641c\u7d22\u7f16\u7801\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u7ed3\u679c\u94fe\u63a5\u662f\u7d2b\u8272\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u8be5\u94fe\u63a5\uff0c\u4ed6\u4eec\u4f1a\u60f3\u5230\u201c\u4f60\u597d\uff0c\u8001\u670b\u53cb\u201d\u3002\n\u5df2\u8bbf\u95ee\u8fc7\u7684Feel\u2192\u3002\n\u5f53\u88ab\u95ee\u53ca\u9047\u5230\u7f16\u7801\u95ee\u9898\u65f6\u5e94\u8be5\u91c7\u53d6\u54ea\u4e9b\u6b65\u9aa4\u65f6\uff0c90%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u4f1a\u8bbf\u95eeStack Overflow\u3002\n\u5f53\u4f60\u88ab\u5361\u4f4f\u7684\u65f6\u5019\u2192\u3002\n\u8d85\u8fc775%\u7684\u5f00\u53d1\u4eba\u5458\u81f3\u5c11\u5076\u5c14\u4f1a\u52a0\u73ed--\u6bcf\u5b63\u5ea6\u52a0\u73ed\u4e00\u5230\u4e24\u5929\u300225%\u7684\u4eba\u6bcf\u5468\u52a0\u73ed1-2\u5929\u6216\u66f4\u591a\u3002\n\u52a0\u73ed\u2192\n\u6fb3\u5927\u5229\u4e9a\u53d7\u8bbf\u8005\u62a5\u544a\u7684\u5e73\u5747\u7f16\u7801\u7ecf\u9a8c\u6700\u9ad8\uff0c\u4e3a16.9\u5e74\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u82f1\u56fd\u548c\u7f8e\u56fd\u7684\u5f00\u53d1\u4eba\u5458\u3002\u4e0e\u4e4b\u76f8\u5173\u7684\u662f\uff0c\u6765\u81ea\u7f8e\u56fd\u548c\u82f1\u56fd\u7684\u53d7\u8bbf\u8005\u7684\u5e73\u5747\u5e74\u9f84\u6700\u9ad8\uff0c\u5206\u522b\u4e3a33.7\u5c81\u548c33.1\u5c81\u3002\n\u56fd\u5bb6/\u5730\u533a\u2192\u7684\u7ecf\u9a8c\u3002\n\u8d85\u8fc740%\u7684\u53d7\u8bbf\u8005\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u662fStack Overflow\u4ee5\u5916\u7684\u5176\u4ed6\u5728\u7ebf\u5f00\u53d1\u8005\u793e\u533a\u7684\u6210\u5458\u3002\n\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u793e\u533a\u2192\u3002\n\u8d85\u8fc715%\u7684\u4eba\u8ba4\u4e3aStack Overflow\u81f3\u5c11\u6bd4\u53bb\u5e74\u66f4\u53d7\u6b22\u8fce\u3002\u6211\u4eec\u8fd8\u6709\u5de5\u4f5c\u8981\u505a\uff0c\u4f46\u8fd9\u662f\u4e2a\u5f00\u59cb\u3002\n\u5171\u540c\u53c2\u4e0e\u2192\u3002\n\u6211\u4eec\u4ecd\u7136\u770b\u5230\u6709\u8bc1\u636e\u8868\u660e\uff0c\u6709\u8272\u4eba\u79cd\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\uff0c\u4f46\u5f53\u6211\u4eec\u5305\u62ec\u6240\u6709\u5f00\u53d1\u4eba\u5458\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u90a3\u4e9b\u4e13\u4e1a\u7f16\u7801\u7684\u4eba\u65f6\uff0c\u6211\u4eec\u786e\u5b9e\u770b\u5230\u4e86\u4e00\u4e9b\u6539\u5584\u3002\n\u79cd\u65cf\u548c\u65cf\u88d4\u2192\n\u6bcf\u4e2a\u6708\uff0c\u5927\u7ea6\u67095000\u4e07\u4eba\u8bbf\u95eeStack Overflow\u6765\u5b66\u4e60\u3001\u5206\u4eab\u548c\u5efa\u7acb\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\u3002\u4e1a\u5185\u4f30\u8ba1\uff0c\u8fd9\u4e9b\u4eba\u4e2d\u67092000\u4e07\u81f32500\u4e07\u662f\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u548c\u5927\u5b66\u6c34\u5e73\u7684\u5b66\u751f\u3002\u4eca\u5e74\u6211\u4eec\u8c03\u67e5\u7684\u7edd\u5927\u591a\u6570\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u662f\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\uff0c\u6216\u8005\u6709\u65f6\u4f1a\u5c06\u7f16\u5199\u4ee3\u7801\u4f5c\u4e3a\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u6216\u8005\u662f\u4e3a\u8fd9\u6837\u7684\u804c\u4e1a\u751f\u6daf\u505a\u51c6\u5907\u7684\u5b66\u751f\u3002\n\u6709\u5173\u4e16\u754c\u5404\u5730\u7684\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u8bbf\u95ee\u6211\u4eec\u7684\u8c03\u67e5\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u65b9\u6cd5\u8bba\u90e8\u5206\u3002\n\u7ea655%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u5168\u6808\u5f00\u53d1\u4eba\u5458\uff0c\u7ea620%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u79fb\u52a8\u5f00\u53d1\u4eba\u5458\u3002\u4eca\u5e74\u6bcf\u4e2a\u53d7\u8bbf\u8005\u8bc6\u522b\u5f00\u53d1\u8005\u7c7b\u578b\u7684\u4e2d\u4f4d\u6570\u662f3\u4e2a\uff0c\u6700\u5e38\u89c1\u7684\u7ec4\u5408\u5305\u62ec\u540e\u7aef\u3001\u524d\u7aef\u548c\u5168\u6808\u5f00\u53d1\u8005\u3002\u9ad8\u5ea6\u76f8\u5173\u7684\u914d\u5bf9\u5305\u62ec\u6570\u636e\u5e93\u7ba1\u7406\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u3001DevOps\u4e13\u5bb6\u548c\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\u5e08\u3001\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u79d1\u5b66\u5bb6\u4ee5\u53ca\u8bbe\u8ba1\u5e08\u548c\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u3002\n\u5f53\u8c03\u67e5\u6837\u672c\u4e0e\u57fa\u672c\u4eba\u7fa4\u4e0d\u5339\u914d\u65f6\uff0c\u8c03\u67e5\u52a0\u6743\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u6790\u8c03\u67e5\u6570\u636e\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u4eca\u5e74\u7684\u8c03\u67e5\u4e2d\uff0c12%\u7684\u7f8e\u56fd\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u5973\u6027\uff0c\u4f46\u7f8e\u56fd\u52b3\u5de5\u7edf\u8ba1\u5c40(US Bureau Of Labor Statistics)\u7684\u6570\u636e\u4f30\u8ba1\uff0c\u5973\u6027\u5728\u8f6f\u4ef6\u5f00\u53d1\u52b3\u52a8\u529b\u4e2d\u7684\u6bd4\u4f8b\u5927\u7ea6\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u4e24\u500d\uff0c\u66f4\u63a5\u8fd120%\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8c03\u67e5\u6743\u91cd\u6765\u8c03\u6574\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u4e0e\u5f00\u53d1\u5546\u7fa4\u4f53\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4e0d\u540c\u6027\u522b\u7684\u5f00\u53d1\u4eba\u5458\u7c7b\u578b\u4ee3\u8868\u6709\u6240\u4e0d\u540c\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u7f8e\u56fd\u539f\u59cb\u7ed3\u679c\u4e2d\u7684\u603b\u4f53\u6bd4\u4f8b\u4e0e\u52a0\u6743\u6bd4\u4f8b\u8fdb\u884c\u6bd4\u8f83\uff0c\u5047\u8bbe\u6211\u4eec\u6309\u7167\u52b3\u5de5\u7edf\u8ba1\u5c40\u62a5\u544a\u663e\u793a\u7684\u6bd4\u7387\u5bf9\u5c11\u6570\u6027\u522b\u7fa4\u4f53\u8fdb\u884c\u4e86\u4e0d\u8db3\u62bd\u6837\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u6743\u91cd\u65f6\uff0c\u6211\u4eec\u770b\u5230\u6765\u81ea\u5973\u6027\u7684\u6700\u5177\u4ee3\u8868\u6027\u7684\u5f00\u53d1\u4eba\u5458\u89d2\u8272(\u5982\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5b66\u672f\u7814\u7a76\u4eba\u5458)\u7684\u4ee3\u8868\u6027\u7565\u6709\u589e\u52a0\uff0c\u800c\u5176\u4ed6\u6765\u81ea\u5973\u6027\u7684\u4ee3\u8868\u6027\u8f83\u4f4e\u7684\u89d2\u8272(\u5982DevOps)\u7684\u4ee3\u8868\u6027\u7565\u6709\u4e0b\u964d\u3002\n\u6211\u4eec\u77e5\u9053\uff0c\u9664\u4e86\u6027\u522b(\u5305\u62ec\u4f7f\u7528Stack Overflow\u7684\u9891\u7387)\u4e4b\u5916\uff0c\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u4e0e\u6f5c\u5728\u5f00\u53d1\u4eba\u5458\u7fa4\u4f53\u4e0d\u5339\u914d\u7684\u5730\u65b9\u8fd8\u6709\u66f4\u591a\uff0c\u800c\u4e14\u6211\u4eec\u9884\u8ba1\u8fd9\u79cd\u4e0d\u5339\u914d\u7684\u56fd\u5bb6\u5e76\u4e0d\u53ea\u6709\u7f8e\u56fd\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u8fd9\u4e2a\u52a0\u6743\u7684\u5177\u4f53\u4f8b\u5b50\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u6211\u4eec\u6709\u7cfb\u7edf\u6027\u7684\u62bd\u6837\u95ee\u9898\uff0c\u5e76\u4e14\u6211\u4eec\u5bf9\u9884\u671f\u7684\u4eba\u53e3\u6bd4\u4f8b\u6709\u4e00\u4e2a\u4f30\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u5bf9\u6211\u4eec\u7684\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u65e0\u8bba\u662f\u5728\u65b9\u5411\u4e0a\u8fd8\u662f\u5728\u7a0b\u5ea6\u4e0a\u3002\n\u8bb8\u591a\u5f00\u53d1\u4eba\u5458\u5728\u5de5\u4f5c\u4e4b\u5916\u5904\u7406\u4ee3\u7801\u3002\u7ea678%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u7f16\u5199\u4ee3\u7801\u662f\u4e00\u79cd\u7231\u597d\u3002\u8f6f\u4ef6\u4e4b\u5916\u7684\u5176\u4ed6\u804c\u8d23\u4f1a\u51cf\u5c11\u5f00\u53d1\u4eba\u5458\u5c06\u7f16\u7801\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\uff1b\u90a3\u4e9b\u58f0\u79f0\u81ea\u5df1\u6709\u5b69\u5b50\u6216\u5176\u4ed6\u7167\u987e\u8d23\u4efb\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u592a\u53ef\u80fd\u5c06\u7f16\u5199\u4ee3\u7801\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\u3002\u5973\u6027\u53d7\u8bbf\u8005\u4e5f\u4e0d\u592a\u53ef\u80fd\u8bf4\u5979\u4eec\u628a\u7f16\u7a0b\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\u3002\n\u8bbf\u95eeStack Overflow\u7684\u5f00\u53d1\u4eba\u5458\u6709\u5e7f\u6cdb\u7684\u7ecf\u9a8c\uff0c\u4ece30\u591a\u5e74\u524d\u5b66\u4f1a\u7f16\u7a0b\u7684\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5f00\u53d1\u4eba\u5458(\u5927\u7ea615%)\u5230\u4e0d\u52305\u5e74\u524d\u5b66\u4f1a\u7f16\u7a0b\u7684\u76f8\u5f53\u5927\u6bd4\u4f8b\u7684\u5f00\u53d1\u4eba\u5458(17%)\u3002\u5728Stack Overflow\u4e0a\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u5927\u7ea640%\u7684\u4eba\u5728\u4e0d\u523010\u5e74\u524d\u5b66\u4f1a\u4e86\u7f16\u7a0b\u3002\u6709\u5173\u8fd9\u4e9b\u4f53\u9a8c\u6c34\u5e73\u5982\u4f55\u56e0\u6027\u522b\u800c\u5f02\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u3002\n\u6280\u672f\u4e3b\u7ba1\u548c\u5de5\u7a0b\u7ecf\u7406\u5f80\u5f80\u62e5\u6709\u6700\u4e13\u4e1a\u7684\u7f16\u7801\u7ecf\u9a8c\u3002\u5728\u5404\u4e2a\u8d21\u732e\u8005\u89d2\u8272\u4e2d\uff0c\u6700\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\u5f80\u5f80\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u3001\u6570\u636e\u5e93\u7ba1\u7406\u5458\u548c\u521b\u5efa\u684c\u9762\u548c\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u3001\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u7ecf\u9a8c\u5f80\u5f80\u8f83\u5c11\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u5f52\u56e0\u4e8e\u6559\u6388\u7f51\u7edc\u5f00\u53d1\u7684\u7f16\u7801\u8bad\u7ec3\u8425\u7684\u6fc0\u589e\uff0c\u4ee5\u53ca\u4ece\u5b66\u672f\u754c\u8fdb\u5165\u8be5\u9886\u57df\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u6570\u91cf\u3002\n\u5728\u6240\u6709\u53d7\u8bbf\u8005\u4e2d\uff0c\u8d85\u8fc754%\u7684\u4eba\u572816\u5c81\u4e4b\u524d\u7f16\u5199\u4e86\u4ed6\u4eec\u7684\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u65e0\u8bba\u662f\u7f51\u9875\u8fd8\u662fhello world\u7a0b\u5e8f\u3002\u572820\u591a\u5c81\u65f6\u7f16\u5199\u7b2c\u4e00\u884c\u4ee3\u7801\u7684\u4eba\u5360\u5230\u4e8613%\u3002\u5f53\u6309\u56fd\u5bb6\u67e5\u770b\u5e73\u5747\u5e74\u9f84\u65f6\uff0c\u6765\u81ea\u5df4\u897f\u548c\u5370\u5ea6\u7b49\u56fd\u7684\u53d7\u8bbf\u8005\u503e\u5411\u4e8e\u5728\u6574\u6574\u4e24\u5e74\u540e\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u6ce2\u5170\u548c\u5fb7\u56fd\u7b49\u56fd\u7684\u5f00\u53d1\u4eba\u5458\u5e73\u5747\u4ece15\u5c81\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u3002\n\u5168\u4e16\u754c\u5927\u7ea675%\u7684\u53d7\u8bbf\u8005\u81f3\u5c11\u5b8c\u6210\u4e86\u76f8\u5f53\u4e8e\u5b66\u58eb\u5b66\u4f4d\u6216\u66f4\u9ad8\u7684\u5b66\u4f4d\u3002\u8fd9\u4e0e\u6211\u4eec\u524d\u51e0\u5e74\u770b\u5230\u7684\u60c5\u51b5\u662f\u4e00\u81f4\u7684\u3002\n\u6210\u4e3a\u4e13\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6709\u591a\u79cd\u5b66\u672f\u9014\u5f84\u3002\u5728\u4e13\u4e1a\u7f16\u5199\u4ee3\u7801\u5e76\u5728\u5927\u5b66\u5b66\u4e60\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u8d85\u8fc762%\u7684\u4eba\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u3001\u8ba1\u7b97\u673a\u5de5\u7a0b\u6216\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u4f4d\uff0c\u7565\u4f4e\u4e8e10%\u7684\u4eba\u62e5\u6709\u5176\u4ed6\u5de5\u7a0b\u9886\u57df\u7684\u5b66\u4f4d\u3002\u6709\u8da3\u7684\u662f\uff0c\u51e0\u4e4e10%\u7684\u53d7\u8bbf\u8005\u62e5\u6709\u4e0e\u5546\u4e1a\u76f8\u5173\u7684\u5b66\u4f4d\uff0c\u6216\u8005\u662f\u4eba\u6587\u3001\u793e\u4f1a\u79d1\u5b66\u6216\u7f8e\u672f\u9886\u57df\u7684\u5b66\u4f4d\u3002\n\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u51e0\u4e4e85%\u7684\u4eba\u8ba4\u4e3a\u6b63\u89c4\u6559\u80b2\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u91cd\u8981\u7684\uff0c\u8fd9\u4e0e\u4f60\u4e0d\u9700\u8981\u6b63\u89c4\u6559\u80b2\u5c31\u80fd\u6210\u4e3a\u5f00\u53d1\u4eba\u5458\u7684\u6d41\u884c\u6210\u8bed\u76f8\u53cd\u3002\u7136\u800c\uff0c\u51e0\u4e4e16%\u7684\u4eba\u8ba4\u4e3a\u8fd9\u6839\u672c\u4e0d\u91cd\u8981\u6216\u4e0d\u5fc5\u8981\u3002\n\u4e0e\u53bb\u5e74\u7684\u6570\u636e\u4e00\u81f4\uff0c\u6211\u4eec\u4ecd\u7136\u770b\u5230\u6709\u8bc1\u636e\u8868\u660e\uff0c\u6709\u8272\u4eba\u79cd\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u89c2\u5bdf\u6240\u6709\u53d7\u8bbf\u8005\u65f6\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4e00\u4e9b\u6539\u8fdb-\u4e0d\u4ec5\u4ec5\u662f\u90a3\u4e9b\u4e13\u4e1a\u7f16\u7801\u7684\u4eba\u3002\u5c3d\u7ba1\u6bcf\u5e74\u90fd\u5728\u9010\u6b65\u53d8\u5316\uff0c\u4f46\u8981\u63d0\u9ad8\u53c2\u4e0e\u7387\uff0c\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\n\u5f53\u6309\u56fd\u5bb6\u67e5\u770b\u6027\u522b\u8ba4\u540c\u65f6\uff0c\u6211\u4eec\u770b\u5230\u5973\u6027\u4e13\u4e1a\u5f00\u53d1\u5546\u7684\u53c2\u4e0e\u7387\u5404\u4e0d\u76f8\u540c\u3002\u4e0e\u53bb\u5e74\u7684\u8c03\u67e5\u4e00\u81f4\uff0c\u5973\u6027\u5f00\u53d1\u4eba\u5458\u51e0\u4e4e\u5360\u7f8e\u56fd\u5f00\u53d1\u4eba\u5458\u768412%\u3002\u5728\u5fb7\u56fd\u3001\u5df4\u897f\u548c\u6ce2\u5170\u7b49\u56fd\uff0c\u53c2\u4e0e\u7387\u7ea6\u4e3a\u8fd9\u4e2a\u6570\u5b57\u7684\u4e00\u534a\uff0c\u8fd9\u8868\u660e\u8981\u5728\u8be5\u9886\u57df\u5b9e\u73b0\u9002\u5f53\u7684\u6027\u522b\u4ee3\u8868\u6027\uff0c\u4ecd\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u5728\u4e13\u4e1a\u7f16\u5199\u4ee3\u7801\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u8fd192%\u662f\u7537\u6027\u3002\n\u5728\u6211\u4eec\u7684\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e0d\u540c\u5f00\u53d1\u4eba\u5458\u89d2\u8272\u7684\u7537\u6027\u548c\u5973\u6027\u7684\u4ee3\u8868\u6027\u4e0d\u540c\u3002\u6240\u6709\u7c7b\u522b\u7684\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u8ba4\u4e3a\u81ea\u5df1\u662f\u7537\u6027\u7684\u90fd\u6bd4\u5973\u6027\u591a\u5f97\u591a\uff0c\u4f46\u7537\u6027\u548c\u5973\u6027\u7684\u6bd4\u4f8b\u6709\u6240\u4e0d\u540c\u3002\u7ebf\u4e0a\u7684\u5f00\u53d1\u5546\u7c7b\u578b\u7684\u53d7\u8bbf\u8005\u6bd4\u5e73\u5747\u6c34\u5e73\u66f4\u6709\u53ef\u80fd\u662f\u7537\u6027\uff0c\u800c\u865a\u7ebf\u4ee5\u4e0b\u7684\u5f00\u53d1\u5546\u7684\u53d7\u8bbf\u8005\u6bd4\u5e73\u5747\u6c34\u5e73\u66f4\u6709\u53ef\u80fd\u662f\u5973\u6027\u3002\u6570\u636e\u79d1\u5b66\u5bb6\u6216\u5b66\u672f\u7814\u7a76\u4eba\u5458\u7684\u7537\u6027\u53ef\u80fd\u6027\u662f\u5973\u6027\u768410\u500d\u5de6\u53f3\uff0c\u800c\u7cfb\u7edf\u7ba1\u7406\u5458\u6216DevOps\u4e13\u5bb6\u7684\u7537\u6027\u53ef\u80fd\u6027\u662f\u5973\u6027\u768425-30\u500d\u3002\u5973\u6027\u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u3001\u8bbe\u8ba1\u5e08\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u6570\u636e\u5206\u6790\u5e08\u3001QA\u6216\u6d4b\u8bd5\u5f00\u53d1\u4eba\u5458\u3001\u79d1\u5b66\u5bb6\u548c\u6559\u80b2\u5de5\u4f5c\u8005\u7684\u4ee3\u8868\u6027\u6700\u9ad8\u3002\n\u5f53\u6211\u4eec\u5206\u6790\u81ea\u4ece\u5b66\u4e60\u6309\u6027\u522b\u7f16\u7801\u4ee5\u6765\u7684\u5dee\u5f02\u65f6\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e9b\u8bb0\u5fc6\u95ee\u9898\u3002\u867d\u7136\u4e0e\u53bb\u5e74\u7684\u8c03\u67e5\u76f8\u6bd4\uff0c\u6211\u4eec\u770b\u5230\u7537\u6027\u572810\u5c81\u81f314\u5c81\u65f6\u6709\u4e86\u4e00\u4e9b\u6539\u5584\uff0c\u4f46\u6211\u4eec\u53d1\u73b010\u5c81\u523014\u5c81\u7684\u5973\u6027\u6bd4\u4f8b\u6709\u4e86\u5f88\u5927\u7684\u4e0b\u964d\u3002\u8fd9\u4e0e\u5176\u4ed6\u7814\u7a76\u4e00\u81f4\uff0c\u5373\u5973\u6027\u79bb\u5f00\u79d1\u6280\u5de5\u4f5c\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u7537\u6027\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u8981\u6709\u6240\u4f5c\u4e3a\uff0c\u5e76\u5728\u53cd\u6620\u793e\u4f1a\u7684\u884c\u4e1a\u4e2d\u770b\u5230\u6027\u522b\u5e73\u7b49\uff0c\u7559\u4f4f\u4eba\u624d\u662f\u5173\u952e\u3002\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u4ec5\u8981\u96c7\u4f63\u6765\u81ea\u4e0d\u540c\u80cc\u666f\u7684\u4eba\uff0c\u8fd8\u8981\u521b\u9020\u4e00\u4e2a\u8ba9\u4ed6\u4eec\u611f\u5230\u88ab\u7eb3\u5165\u5e76\u80fd\u591f\u8301\u58ee\u6210\u957f\u7684\u73af\u5883\u3002\n\u5728\u53d7\u8bbf\u8005\u4e2d\uff0c\u8fd115%\u7684\u4eba\u8bf4\u4ed6\u4eec\u6709\u67d0\u79cd\u7c7b\u578b\u7684\u7126\u8651\u3001\u60c5\u7eea\u6216\u60c5\u7eea\u969c\u788d\u3002\u5f53\u89c2\u5bdf\u8eab\u4f53\u80fd\u529b\u7684\u5dee\u5f02\u65f6\uff0c\u5927\u7ea62%\u7684\u53d7\u8bbf\u8005\u80fd\u529b\u4e0d\u540c\uff0c\u6bd4\u5982\u5931\u660e/\u89c6\u529b\u56f0\u96be\u6216\u5931\u806a/\u542c\u529b\u56f0\u96be\u3002\u8fd9\u7a81\u663e\u4e86\u5f00\u53d1\u6613\u4e8e\u8bbf\u95ee\u7684\u8f6f\u4ef6\u548c\u521b\u5efa\u80fd\u591f\u5bb9\u7eb3\u4e0d\u540c\u80fd\u529b\u7684\u4eba\u7684\u516c\u53f8\u7684\u91cd\u8981\u6027\u3002\n\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c70%\u7684\u4eba\u5e74\u9f84\u572835\u5c81\u4ee5\u4e0b\uff0c\u7ea65%\u7684\u4eba\u5e74\u9f84\u572850\u5c81\u6216\u4ee5\u4e0a\u3002\n\u5f53\u6211\u4eec\u5c06\u8c03\u67e5\u5bf9\u8c61\u7684\u5e74\u9f84\u6309\u56fd\u5bb6\u7ec6\u5206\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u5317\u7f8e\u548c\u897f\u6b27\u7684\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u5e74\u9f84\u504f\u5927\uff0c\u4e0e\u5176\u4ed6\u5730\u533a\u76f8\u6bd4\u62e5\u6709\u66f4\u591a\u7684\u7f16\u7801\u7ecf\u9a8c\u3002\n\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0cJavaScript\u8fde\u7eed\u7b2c\u516b\u5e74\u4fdd\u6301\u7740\u6700\u5e38\u7528\u7f16\u7a0b\u8bed\u8a00\u7684\u5730\u4f4d\u3002\u518d\u5f80\u4e0b\u770b\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u4e86TypeScript\u7684\u9002\u5ea6\u589e\u957f\uff0c\u5728\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e0a\u7565\u5fae\u8d85\u8fc7\u4e86C\u8bed\u8a00\u3002\u6b64\u5916\uff0cRuby\u57282017\u5e74\u521a\u521a\u8fdb\u5165\u8fd9\u4efd\u699c\u5355\u7684\u524d10\u540d\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0b\u964d\uff0c\u88abGo\u548cKotlin\u7b49\u66f4\u65b0\u3001\u66f4\u65f6\u5c1a\u7684\u6280\u672f\u8d85\u8d8a\u3002\n\u5f53\u7eaf\u7cb9\u4e13\u6ce8\u4e8eweb\u6846\u67b6\u65f6\uff0c\u6211\u4eec\u770b\u5230jQuery\u4ecd\u7136\u662f\u738b\u8005\uff0c\u4f46\u662f\u4e00\u5e74\u6bd4\u4e00\u5e74\u6162\u6162\u5730\u8f93\u7ed9\u4e86React.js\u548cANGLING\u3002\u6211\u4eec\u786e\u5b9e\u770b\u5230\u4e86\u4e00\u4e9b\u6574\u5408\uff0c\u56e0\u4e3a\u8d85\u8fc735%\u7684\u53d7\u8bbf\u8005\u4f7f\u7528jQuery\uff0cReaction\uff0c\u4e00\u4e2a\u7248\u672c\u7684\u89d2\u5ea6(\u7ec4\u5408\u4e86\u89d2\u5ea6\uff0c\u4ee3\u8868\u89d2\u5ea62+\uff0c\u548cAngular.js)\u6216ASP.NET\u98ce\u683c(ASP.NET\u6216ASP.NET Core)\u3002\n\u4e0e\u53bb\u5e74\u7c7b\u4f3c\uff0c\u6211\u4eec\u8be2\u95ee\u4e86\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u4f7f\u7528\u7684\u8bb8\u591a\u5176\u4ed6\u6742\u9879\u6280\u672f\u3002Node.js\u8fde\u7eed\u7b2c\u4e8c\u5e74\u4f4d\u5c45\u699c\u9996\uff0c\u56e0\u4e3a\u6709\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u4f7f\u7528Node.js\u3002\u6211\u4eec\u8fd8\u770b\u5230\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u6280\u672f(\u5982Pandas\u3001TensorFlow\u548cTorch/PyTorch)\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u5168\u9762\u589e\u957f\u3002\n\u5728\u8003\u5bdf\u6570\u636e\u5e93\u6280\u672f\u65f6\uff0c\u7ed3\u679c\u4e0e\u6211\u4eec\u53bb\u5e74\u89c2\u5bdf\u5230\u7684\u7ed3\u679c\u57fa\u672c\u4e00\u81f4\u3002MySQL\u4e00\u76f4\u4f4d\u5c45\u699c\u9996\uff0c\u7d27\u968f\u5176\u540e\u7684\u662fPostgreSQL\u548cMicrosoft SQL Server\u3002\u7136\u800c\uff0c\u6211\u4eec\u770b\u5230Firebase\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u7565\u6709\u4e0a\u5347\uff0c\u4eca\u5e74\u5b83\u7565\u5fae\u8d85\u8fc7\u4e86Elasticsearch\u3002\nLinux\u548cWindows\u4fdd\u6301\u4e86\u5927\u591a\u6570\u6d41\u884c\u5e73\u53f0\u7684\u699c\u9996\u4f4d\u7f6e\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u4eca\u5e74\u5df2\u7ecf\u7528\u5b83\u4eec\u505a\u4e86\u5f00\u53d1\u5de5\u4f5c\u3002\u6211\u4eec\u8fd8\u770b\u5230\u5bb9\u5668\u6280\u672f(\u5982Docker\u548cKubernetes)\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u9010\u5e74\u589e\u957f\u3002\n\u8fde\u7eed\u4e94\u5e74\uff0cRust\u4e00\u76f4\u4f4d\u5c45\u6700\u53d7\u6b22\u8fce\u7f16\u7a0b\u8bed\u8a00\u7684\u699c\u9996\u3002\u4e0e\u53bb\u5e74\u76f8\u6bd4\uff0cTyescript\u6392\u540d\u7b2c\u4e8c\uff0c\u8d85\u8fc7\u4e86Python\u3002\u6211\u4eec\u4e5f\u770b\u5230\u56f4\u68cb\u5927\u5e45\u589e\u957f\uff0c\u4ece\u53bb\u5e74\u7684\u7b2c10\u4f4d\u4e0a\u5347\u5230\u7b2c5\u4f4d\u3002\nVBA\u3001Objective C\u548cPerl\u5728\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u8bed\u8a00\u4e2d\u540d\u5217\u524d\u8305-\u8fd9\u4e9b\u8bed\u8a00\u76ee\u524d\u6709\u5f88\u9ad8\u6bd4\u4f8b\u7684\u5f00\u53d1\u4eba\u5458\u5728\u4f7f\u7528\u5b83\u4eec\uff0c\u4f46\u6ca1\u6709\u5174\u8da3\u7ee7\u7eed\u8fd9\u6837\u505a\u3002\n\u5982\u679c\u6211\u4eec\u770b\u4e00\u770b\u5f00\u53d1\u4eba\u5458\u62a5\u544a\u8bf4\u4ed6\u4eec\u4e0d\u4f7f\u7528\u4f46\u60f3\u5b66\u4e60\u7684\u6280\u672f\uff0cPython\u8fde\u7eed\u7b2c\u56db\u5e74\u4f4d\u5c45\u699c\u9996\u3002\u6211\u4eec\u4e5f\u770b\u5230\u4eba\u4eec\u5bf9\u5b66\u4e60\u201c\u9508\u201d\u7684\u5174\u8da3\u7565\u6709\u589e\u52a0\u3002\nASP.NET Core\u662f\u6700\u53d7\u6b22\u8fce\u7684Web\u6846\u67b6\uff0c\u51fb\u8d25\u4e86React.js\u3002\u76d6\u8328\u6bd4\u662f\u6b64\u6b21\u8c03\u67e5\u7684\u65b0\u4eba\uff0c\u5df2\u7ecf\u6392\u5728\u7b2c5\u4f4d\uff0c\u53d7\u523060%\u7684\u53d7\u8bbf\u8005\u7684\u559c\u7231\u3002\n\u5c3d\u7ba1Angular.js\u662f\u6700\u6d41\u884c\u7684Web\u6846\u67b6\u4e4b\u4e00\uff0c\u4f46\u5b83\u4e5f\u88ab\u8ba4\u4e3a\u662f\u6700\u53ef\u6015\u7684\u3002\n\u5728\u5176\u4ed6\u5269\u4f59\u7684\u6846\u67b6\u3001\u5e93\u548c\u5de5\u5177\u4e2d\uff0c.NET Core\u548cTorch/PyTorch\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\u3002DevOps\u3001Tools\u3001Chef\u548cPuppet\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u6280\u672f\u3002\n\u770b\u770b\u6570\u636e\u5e93\u6280\u672f\uff0cRedis\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\uff0c\u7d27\u968f\u5176\u540e\u7684\u662fPostgreSQL\u548cElasticsearch\u3002\u636e\u4f20\u95fb\uff0cStack Overflow\u5728\u6211\u4eec\u7684\u6280\u672f\u5806\u6808\u4e2d\u4f7f\u7528Redis\u548cElasticsearch\u5df2\u7ecf\u6709\u5f88\u591a\u5e74\u4e86\uff0c\u4ece\u516c\u53f8\u6210\u7acb\u4e4b\u521d\u5c31\u5f00\u59cb\u4e86\u3002IBMDB2\u88ab\u8bc4\u4e3a\u6700\u53ef\u6015\u7684\u6570\u636e\u5e93\uff0c\u800cMongoDB\u4ecd\u7136\u662f\u5f00\u53d1\u4eba\u5458\u6700\u60f3\u5b66\u4e60\u7684\u6570\u636e\u5e93\u6280\u672f\u3002\nLinux\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5e73\u53f0\u3002\u5bb9\u5668\u6280\u672fDocker\u548cKubernetes\u5206\u522b\u4f4d\u5c45\u6700\u53d7\u6b22\u8fce\u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4f4d\u3002\u5b83\u4eec\u4e5f\u662f\u5f00\u53d1\u4eba\u5458\u6700\u60f3\u5b66\u4e60\u7684\u5e73\u53f0\u4e4b\u4e00\uff0c\u8fd9\u8868\u660e\u5b83\u4eec\u662f\u591a\u4e48\u53d7\u6b22\u8fce\u3002WordPress\u4ecd\u7136\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\uff0c\u4f46\u4eca\u5e74\u65b0\u52a0\u5165\u699c\u5355\u7684\u677e\u5f1b\u5e94\u7528\u7a0b\u5e8f\u548c\u96c6\u6210\u5e94\u7528\u7a0b\u5e8f\u6392\u5728\u7b2c\u56db\u4f4d\u3002\n\u51e0\u4e4e\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u4f7f\u7528Windows\u4f5c\u4e3a\u4ed6\u4eec\u7684\u4e3b\u8981\u64cd\u4f5c\u7cfb\u7edf\u3002\u5176\u4f59\u7684\u51e0\u4e4e\u5e73\u5747\u5206\u914d\u7ed9\u4e86MacOS\u548cLinux\u7684\u4e00\u79cd\u53e3\u5473\u3002\n\u5728\u56de\u5e94\u8c03\u67e5\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u8fd182%\u7684\u4eba\u5c06GitHub\u7528\u4f5c\u534f\u4f5c\u5de5\u5177\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u4eba\u4f7f\u7528Slake\u3002\n\u5728\u7814\u7a76\u65b0\u5de5\u5177\u65f6\uff0c\u8d85\u8fc7\u56db\u5206\u4e4b\u4e09\u7684\u53d7\u8bbf\u8005\u559c\u6b22\u901a\u8fc7\u514d\u8d39\u8bd5\u7528\u6765\u4eb2\u81ea\u8bd5\u7528\u8be5\u5de5\u5177\u3002\u793e\u4ea4\u8bc1\u660e\u4e5f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8d85\u8fc760%\u7684\u5f00\u53d1\u4eba\u5458\u4f1a\u8be2\u95ee\u4ed6\u4eec\u77e5\u9053\u7684\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\uff0c\u6216\u8005\u8bbf\u95ee\u5f00\u53d1\u4eba\u5458\u793e\u533a\uff0c\u5982Stack Overflow\u3002\n\u5173\u4e8e\u5176\u7ec4\u7ec7\u5185\u7684\u6280\u672f\u91c7\u8d2d\uff0c\u7ea657%\u7684\u53d7\u8bbf\u8005\u5177\u6709\u4e00\u5b9a\u6216\u5f88\u5927\u7684\u5f71\u54cd\u529b\u3002\n\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u4f7f\u7528Perl\u3001Scala\u548cGo\u7684\u53d7\u8bbf\u8005\u5f80\u5f80\u85aa\u8d44\u6700\u9ad8\uff0c\u5e73\u5747\u85aa\u8d44\u7ea6\u4e3a75000\u7f8e\u5143\u3002\u6709\u8da3\u7684\u662f\uff0cPerl\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u8bed\u8a00\u4e4b\u4e00\uff0c\u6240\u4ee5\u8fd9\u4efd\u9ad8\u85aa\u53ef\u80fd\u662f\u4e3a\u4e86\u5f25\u8865\u60f3\u8981\u4f7f\u7528\u8be5\u6280\u672f\u7684\u5f00\u53d1\u4eba\u5458\u7684\u532e\u4e4f\u3002\u5982\u679c\u53ea\u770b\u7f8e\u56fd\uff0cScala\u5f00\u53d1\u4eba\u5458\u7684\u85aa\u6c34\u5f80\u5f80\u6700\u9ad8\u3002\n\u6211\u4eec\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\u5b66\u4e60\u4e00\u95e8\u65b0\u8bed\u8a00\u6216\u6846\u67b6\u7684\u9891\u7387\u3002\u7ea675%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u81f3\u5c11\u6bcf\u9694\u51e0\u4e2a\u6708\u6216\u6bcf\u5e74\u5b66\u4e60\u4e00\u9879\u65b0\u6280\u672f\u3002\u8fd9\u8868\u660e\u521b\u65b0\u53d1\u751f\u5f97\u6709\u591a\u5feb\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u65ad\u5730\u5b66\u4e60\u4fdd\u6301\u4ed6\u4eec\u7684\u6280\u80fd\u65b0\u9c9c\u3002\n\u6211\u4eec\u8be2\u95ee\u53d7\u8bbf\u8005\u5728\u9047\u5230\u95ee\u9898\u65f6\u4f1a\u600e\u4e48\u505a\u3002\u51e0\u4e4e90%\u7684\u4eba\u62a5\u544a\u8bf4\u4ed6\u4eec\u8bbf\u95ee\u4e86Stack Overflow\u3002\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u9f13\u821e\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u6211\u4eec\u6b63\u5728\u6210\u529f\u5b8c\u6210\u6211\u4eec\u7684\u4f7f\u547d\uff0c\u5e2e\u52a9\u4eba\u4eec\u83b7\u5f97\u4ed6\u4eec\u5b8c\u6210\u5de5\u4f5c\u6240\u9700\u7684\u77e5\u8bc6\u3002\n\u6211\u4eec\u7b2c\u4e00\u6b21\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\uff0c\u5f53\u4ed6\u4eec\u5728\u7ebf\u641c\u7d22\u7f16\u7801\u89e3\u51b3\u65b9\u6848\u65f6\u611f\u89c9\u5982\u4f55\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u94fe\u63a5\u662f\u7d2b\u8272\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u8bbf\u95ee\u4e86\u8be5\u94fe\u63a5\u3002\u5927\u7ea6\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u9009\u62e9\u4e86\u201c\u4f60\u597d\uff0c\u8001\u670b\u53cb\u201d\uff0c\u8fd9\u8868\u660e\u5728\u67d0\u4e9b\u4efb\u52a1\u4e2d\u8fd9\u53ef\u80fd\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8d85\u8fc7210\u4e07\u4eba\u8bbf\u95ee\u4e86\u5982\u4f55\u9000\u51faVim\u7f16\u8f91\u5668\uff1f\u5173\u4e8e\u5806\u6808\u6ea2\u51fa\u7684\u95ee\u9898\u3002\n\u8d85\u8fc792%\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u81f3\u5c11\u662f\u517c\u804c\u7684\u3002\u5927\u7ea612%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u662f\u5b66\u751f\u3002\n\u4e0e\u5728\u8c03\u67e5\u6570\u636e\u4e2d\u6709\u826f\u597d\u4ee3\u8868\u6027\u7684\u5176\u4ed6\u56fd\u5bb6\u76f8\u6bd4\uff0c\u5370\u5ea6\u7684\u5b66\u751f\u6bd4\u4f8b\u660e\u663e\u66f4\u9ad8\u3002\u5728\u6240\u6709\u8fd9\u4e9b\u5730\u70b9\uff0c\u8d85\u8fc770%\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u5168\u804c\u53d7\u96c7\u7684\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u611f\u5230\u6ee1\u610f\uff0c\u8fd165%\u7684\u4eba\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u7565\u6709\u6216\u975e\u5e38\u6ee1\u610f\u3002\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u5927\u7ea625%\u7684\u4eba\u7565\u6709\u5230\u975e\u5e38\u4e0d\u6ee1\u610f\u3002\n\u8fd183%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u8981\u4e48\u4e0d\u79ef\u6781\u5bfb\u627e\u65b0\u7684\u5de5\u4f5c\u673a\u4f1a\uff0c\u8981\u4e48\u5bf9\u65b0\u7684\u5de5\u4f5c\u673a\u4f1a\u4e0d\u611f\u5174\u8da3\u3002\u8fd9\u4e0e\u6211\u4eec\u5173\u4e8e\u5f00\u53d1\u4eba\u5458\u5de5\u4f5c\u6ee1\u610f\u5ea6\u7684\u53d1\u73b0\u662f\u4e00\u81f4\u7684--\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u5f88\u6ee1\u610f\u3002\n\u7eb5\u89c2\u62e5\u6709\u5927\u91cf\u5f00\u53d1\u4eba\u5458\u7684\u51e0\u4e2a\u56fd\u5bb6\uff0c\u5de5\u4f5c\u6ee1\u610f\u5ea6\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002\u5728\u7f8e\u56fd\u3001\u5370\u5ea6\u3001\u82f1\u56fd\u3001\u5fb7\u56fd\u548c\u52a0\u62ff\u5927\uff0c\u8d85\u8fc780%\u7684\u5f00\u53d1\u4eba\u5458\u6ca1\u6709\u79ef\u6781\u5bfb\u627e\u5de5\u4f5c\uff0c\u4f46\u81f3\u5c11\u6709\u4e00\u534a\u7684\u4eba\u613f\u610f\u63a5\u53d7\u65b0\u7684\u673a\u4f1a\u3002\n\u5982\u679c\u6211\u4eec\u6309\u5de5\u4f5c\u804c\u80fd\u7ec6\u5206\u6570\u636e\uff0c\u8d85\u8fc720%\u7684\u5b66\u672f\u7814\u7a76\u4eba\u5458\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u6570\u636e/\u4e1a\u52a1\u5206\u6790\u5e08\u6b63\u5728\u79ef\u6781\u5bfb\u627e\u65b0\u5de5\u4f5c\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u8bbe\u8ba1\u5e08\u3001\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u548c\u79fb\u52a8\u5f00\u53d1\u4eba\u5458\uff0c\u8fd9\u4e00\u6bd4\u4f8b\u4e3a19%\u3002\u8fd9\u4e0e\u8fc7\u53bb\u8c03\u67e5\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5728\u8fc7\u53bb\u7684\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u8bbe\u8ba1\u5e08\u662f\u5de5\u4f5c\u6ee1\u610f\u5ea6\u6700\u4f4e\u7684\u89d2\u8272\u4e4b\u4e00\u3002\n\u6211\u4eec\u7b2c\u4e00\u6b21\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\u662f\u4ec0\u4e48\u9a71\u4f7f\u4ed6\u4eec\u5bfb\u627e\u65b0\u5de5\u4f5c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u66f4\u597d\u7684\u85aa\u916c\u662f\u53d7\u8bbf\u8005\u6700\u5e38\u89c1\u7684\u56e0\u7d20\uff0c70%\u7684\u53d7\u8bbf\u8005\u6307\u51fa\u66f4\u9ad8\u7684\u85aa\u916c\u5f88\u91cd\u8981\u3002\u60f3\u8981\u4f7f\u7528\u65b0\u6280\u672f\u662f\u7b2c\u4e8c\u4e2a\u6700\u53d7\u6b22\u8fce\u7684\u56e0\u7d20\uff0c\u8fd9\u4e0e\u3002\n..", "note_en": "For almost a decade, Stack Overflow\u2019s annual Developer Survey held the honor of being the largest survey of people who code around the world. This year, rather than aiming to be the biggest, we set out to make our survey more representative of the diversity of programmers worldwide. That said, the survey is still big. This year\u2019s survey was taken by just over 65,000 people.\n  In our efforts to reach beyond the Stack Overflow network and seek representation from a greater diversity of coders, we advertised the survey less on our own channels than in previous years and sought ways to earn responses from those who may not frequent our sites. This approach included social promotion and outreach to underrepresented coders.\n  While we saw a lift in underrepresented groups, the difference in representation isn\u2019t as large as we had hoped. There was an uptick in some race and ethnicity groups, notably those of Hispanic or Latino/a/x and Black or of African descent, while other races and ethnicities remained similar or decreased. Similarly, we saw a slight increase in female-gendered respondents, while non-binary, genderqueer, or non-conforming remained the same. We acknowledge that we have a lot of work to do, and the data we obtain in our annual survey helps us make changes and set goals to improve the welcomeness and inclusiveness of our community.\n    Working with the data at hand, we broke down our analysis by demographics where applicable. Look for the icon to see where demographics have an interesting impact. Also be sure to check out the topics that were new to this year\u2019s survey, like questions regarding DevOps and working overtime.\n  We also need to point out that this year\u2019s survey was taken in February, before COVID-19 was declared a pandemic by the World Health Organization and before the virus impacted every country in the world. Please keep the timing of the survey in mind when reviewing information such as job and salary data.\n  Finally, for those who want to dive into the results yourself, the anonymized results of the survey are available for download under the Open Database License (ODbL). We look forward to seeing what you find\u2014if you share on social media, be sure to tag us!\n  After a consistent rise over the last five years, Python fell from second last year to third this year on the list of most loved technologies, being beat out by TypeScript. Rust held the top spot for most loved technology for the fifth year in a row.\n  Most loved languages  \u2192\n  Site reliability engineers and DevOps specialists remain among the highest paid individual contributor roles. 80% of respondents believe that DevOps is at least somewhat important, and 44% work at organizations with at least one dedicated DevOps employee.\n  Global salaries  \u2192\n  52% of respondents think \u201cHello, old friend\u201d when they search for a coding solution online and find that the first result link is purple because they\u2019ve already visited the link.\n  Already visited feeling  \u2192\n  When asked what steps to take when stuck on a coding problem, 90% of respondents indicated they visit Stack Overflow.\n  When you get stuck  \u2192\n  More than 75% of developers work overtime at least occasionally -- one to two days per quarter. 25% work overtime 1-2 days per week or more.\n  Overtime  \u2192\n  Australia respondents reported the highest average amount of coding experience at 16.9 years, followed by developers in United Kingdom and United States. In correlation, respondents from the United States and United Kingdom maintain the highest average age, at 33.7 and 33.1 years, respectively.\n  Experience by country  \u2192\n  More than 40% of respondents reported that they are members of other online developer communities beyond Stack Overflow.\n  Other developer communities  \u2192\n  More than 15% of people find Stack Overflow at least somewhat more welcome than last year. We still have work to do, but it\u2019s a start.\n  Engaging together  \u2192\n  We still see evidence that people of color are underrepresented among professional developers, but we do see some improvement when we include all developers, not just those who code professionally.\n  Race and ethnicity  \u2192\n  Each month, about 50 million people visit Stack Overflow to learn, share, and build their careers. Industry estimates suggest that 20-25 million of these people are professional developers and university-level students. The vast majority of our survey respondents this year said they are professional developers or who code sometimes as part of their work or students preparing for such a career.\n See our  Methodology section for details on how developers around the world accessed our survey.\n  About 55% of respondents identify as full-stack developers, and about 20% consider themselves mobile developers. The median number of developer type identifications per respondent this year is three, and the most common combinations include back-end, front-end, and full-stack developer. Pairs that are highly correlated include database administrator and system administrator, DevOps specialist and site reliability engineer, academic researcher and scientist, and designer and front-end developer.\n Survey weighting is an approach used to analyze survey data when the survey sample doesn&#39;t match the underlying population well. For example, in our survey this year, 12% of US respondents identify as women, but data from the US Bureau of Labor Statistics estimates that women&#39;s participation in the software developer workforce is about twice that, more like 20%. We can use survey weighting to adjust for the mismatch between our survey sample and the population of developers. We know that there is a difference in developer type representation by gender, so let&#39;s compare the overall proportions in our raw results for the United States with weighted proportions, assuming that we undersampled gender minorities at the rate indicated by the BLS report. When we use weighting, we see small increases in the representation of developer roles that have the most representation from women, like Data Scientists and Academic Researchers, and decreases in others with low representation from women, like DevOps.\n We know there are more ways in which our survey sample doesn&#39;t match the underlying population of developers than only gender (including frequency of use of Stack Overflow), and the United States is not the only country for which we expect such a mismatch. The reason we&#39;re using this specific example of weighting here is that it is one where we know we have systemic sampling issues and we have an estimate about the expected population proportion. We can demonstrate the effect of our survey sample on our results, both in direction and magnitude.\n  Many developers work on code outside of work. About 78% of our respondents say that they code as a hobby. Other responsibilities outside of software can reduce developers&#39; engagement in coding as a hobby; developers who say they have children or other caretaking responsibilities are less likely to code as a hobby. Respondents who are women are also less likely to say they code as a hobby.\n  There is a wide range of experience among developers who visit Stack Overflow, from seasoned developers who learned to code more than 30 years ago (approximately 15%), to a sizable percentage of developers (17%) who learned how to code less than five years ago. Of the professional developers on Stack Overflow, approximately 40% learned to code less than 10 years ago. See more on how these  experience levels vary by gender.\n    Technical executives and engineering managers tend to have the most professional coding experience. Among the individual contributor roles, the most experienced developers tend to be system administrators, database administrators, and developers who create desktop and embedded applications. On the other end of the spectrum, web developers, academic researchers, and data scientists tend to have fewer years of experience. Part of this could be explained by the proliferation of coding bootcamps that teach web development and the amount of data scientists entering the field from academia.\n  Of all of the respondents, over 54% wrote their first line of code, whether it was a web page or a hello world program, by the age of 16. People who wrote their first line of code in their 20s accounted for 13% of the respondents. When looking at the average age by country, respondents from countries such as Brazil and India tend to start writing code a full two years later compared to developers in countries such as Poland and Germany, who on average start coding by the age of 15.\n  Approximately 75% of respondents worldwide completed at least the equivalent of a bachelor&#39;s degree or higher. This is consistent with what we&#39;ve seen in previous years.\n  There are a variety of academic paths to becoming a professional software developer. Of the respondents that write code professionally and studied at the university level, over 62% have a degree in computer science, computer engineering, or software engineering and just under 10% have a degree in another engineering field. Interestingly enough, almost 10% of the respondents have a business related degree or a degree in a humanities, social science, or fine arts field of study.\n  Almost 85% of the respondents that are professional developers feel that formal education is at least somewhat important, which is contrary to the popular idiom that you don&#39;t need formal education to become a developer. However, almost 16% believe that it is not at all important or necessary.\n  Consistent with the data from last year, we still see evidence that people of color are underrepresented among professional developers. However, we see some improvement when we look at all respondents\u2014not just the ones who code professionally. Despite a gradual change year over year, there is still much work to do to increase participation rates.\n  When looking at gender identity by country, we see various participation rates of professional developers who are women. Consistent with last year&#39;s survey, women developers account for almost 12% of developers in the US. In countries such as Germany, Brazil, and Poland, the participation rate is about half of that, which goes to show there is still much work to do to reach appropriate gender representation in the field. Among the respondents that code professionally, almost 92% are men.\n    We see varying representation from men and women in different developer roles on our survey. All categories have dramatically more developers who identify as men than women, but the ratio of men to women varies. Developer types above the line have respondents that are more likely than average to be men, and those below the dotted line have respondents who are more likely than average to be women. Developers who are data scientists or academic researchers are about 10 times more likely to be men than women, while developers who are system admins or DevOps specialists are 25-30 times more likely to be men than women. Women have the highest representation as front-end developers, designers, data scientists, data analysts, QA or test developers, scientists, and educators.\n  When we break down differences in years since learning to code by gender, we notice some retention problems. We see a big drop off at the 10-14 year mark when compared to men, though we&#39;ve seen some improvement from last year&#39;s survey. This is consistent with other research that women leave tech jobs at higher rates than men. If we truly want to make a difference and see gender parity in the industry that is reflective of society, retention is key. It is important to not only hire people from diverse backgrounds, but to also create an environment where they feel included and can thrive.\n    Among the respondents, almost 15% said they have some type of anxiety, mood, or emotional disorder. When looking at differences in physical ability, around 2% of respondents are differently-abled, such as being blind / having difficulty seeing or being deaf / having difficulty hearing. This underscores the importance of creating accessible software and creating companies that accomodate differently-abled people.\n  Of the respondents that are professional developers, 70% are under 35 and about 5% are 50 years old or older.\n  When we break down the age of the survey respondents by country, we see that developers in North America and Western Europe tend to skew older and have more coding experience compared to other regions.\n  Unsurprisingly, for the eighth year in a row, JavaScript has maintained it&#39;s stronghold as the most commonly used programming language. Going further down the list, we also see moderate gains for TypeScript, edging out C in terms of popularity. Additionally, Ruby, once in the top 10 of this list as recently as 2017, has declined, being surpassed by newer, trendier technologies such as Go and Kotlin.\n  When focusing purely on web frameworks, we see that jQuery is still king, but is slowly losing ground to React.js and Angular year over year. We do see some consolidation, as more than 35% of respondents use jQuery, React, a version of Angular (combining Angular, which represents Angular 2+, and Angular.js) or a flavor of ASP.NET (ASP.NET or ASP.NET Core).\n  Similar to last year, we asked about many of the other miscellaneous technologies that developers are using. For the second year in a row, Node.js takes the top spot, as it is used by half of the respondents. We also see growth across the board in the popularity of data analysis and machine learning technologies such as Pandas, TensorFlow, and Torch/PyTorch.\n  When looking at database technologies, the results are mostly consistent with what we observed last year. MySQL has maintained the top spot, followed by PostgreSQL and Microsoft SQL Server. However, we see some slight growth in the popularity of Firebase, which edged out Elasticsearch this year.\n  Linux and Windows maintain the top spots for most popular platforms, with over half of the respondents reporting that they have done development work with them this year. We also see some year over year growth in the popularity of container technologies such as Docker and Kubernetes.\n  For five years running, Rust has taken the top spot as the most loved programming language. TypeScript is second surpassing Python compared to last year. We also see big gains in Go, moving up to 5th from 10th last year.\n VBA, Objective C, and Perl hold the top spots for the most dreaded languages\u2014languages that had a high percentage of developers who are currently using them, but have no interest in continuing to do so.\n If we look at technologies that developers report that they do not use but want to learn, Python takes the top spot for the fourth year in a row. We also see some modest gains in the interest in learning Rust.\n  ASP.NET Core is the most loved web framework, beating out React.js. Gatsby, a newcomer on the survey, is already sitting at 5th, being loved by 60% of the respondents.\n Although it is amongst the most popular web frameworks, Angular.js is also considered to be the most dreaded.\n  .NET Core and Torch/PyTorch remain the most loved of the other remaining frameworks, libraries and tools. DevOps tools Chef and Puppet are among the most dreaded technologies.\n  Taking a look at database technologies, Redis remains the most loved, followed by PostgreSQL and Elasticsearch. Anecdotally, Stack Overflow has been using both Redis and Elasticsearch in our tech stack for years, since the early days of the company. IBM DB2 ranked as the most dreaded database and MongoDB remains the database technology that developers want to learn the most.\n  Linux remains the most loved platform. Container technologies Docker and Kubernetes rank as the second and third most loved. They are also among the platforms that developers most want to learn, which demonstrates how beloved they are. Wordpress is still the most dreaded, but Slack Apps and integrations, newly added to the list this year, rank high at the number four spot.\n  Almost half of the respondents use Windows as their primary operating system. The rest were almost evenly split between MacOS and a flavor of Linux.\n  Of the professional developers who responded to the survey, almost 82% use GitHub as a collaborative tool and more than half use Slack.\n  When researching new tools, over three-fourths of respondents like to try the tool for themselves via a free trial. Social proof is also important, as over 60% of developers ask other developers they know about it or visit developer communities such as Stack Overflow.\n  With regards to technology purchases within their organization, around 57% of respondents have some or a great deal of influence.\n  Globally, respondents who use Perl, Scala, and Go tend to have the highest salaries, with a median salary around $75k. Interestingly, Perl is amongst the top most dreaded languages, so it&#39;s possible that this high salary is to compensate for the dearth of developers who want to use that technology. When looking only at the US, Scala developers tend to have the highest salaries.\n    We asked developers how frequently they learn a new language or framework. Around 75% of respondents noted that they learn a new technology at least every few months or once a year. This demonstrates how quickly innovations happen and developers are constantly learning to keep their skills fresh.\n  We asked respondents what they do when they get stuck on a problem. Almost 90% reported that they visit Stack Overflow. This is an encouraging sign that we&#39;re succeeding in our mission to help people get access to the knowledge they need to get things done.\n  For the first time, we asked developers how they feel when they search for a coding solution online and the first result link is purple because they already visited the link. About half of respondents chose &#39;Hello, old friend&#39;, which suggests it may be a frequent occurrence for certain tasks. Perhaps this is why over 2.1 million people visited the  &#39;How do I exit the Vim editor?&#39; question on Stack Overflow.\n  Over 92% of professional developers are employed at least part-time. Roughly 12% of all respondents say they are students.\n  India has an noticeably higher proportion of students compared to other countries that are well-represented in the survey data. In all of these locations, more than 70% of developers are employed full-time.\n    Overall, developers tend to be satisfied with their jobs, with almost 65% reporting that they are either slightly or very satisfied with their job. On the other end of the spectrum, around 25% are slightly to very dissatisfied.\n  Almost 83% of respondents reported that they are either not actively looking or interested in new job opportunities. This is consistent with our findings about developer job satisfaction\u2014most developers are happy with their jobs.\n  When looking across several countries with large developer populations, job satisfaction is mostly consistent. In the US, India, UK, Germany, and Canada, over 80% of developers are not actively looking for a job, but at least half are open to new opportunities.\n  If we break out the data by job function, over 20% of academic researchers, data scientists, and data/business analysts are actively looking for a new job, followed closely by designers, game developers, and mobile developers at 19%. This is consistent with findings from past surveys, where we saw that academic researchers and designers were among the roles that had the lowest job satisfaction.\n  For the first time, we asked developers what drove them to look for a new job. Better compensation was by far the most common factor for respondents with 70% of them noting that more pay was important. Wanting to work with new technologies was the second most popular factor, which is consistent w\n......", "posttime": "2020-05-28 08:37:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,2020,\u6ea2\u51fa,overflow,\u5f00\u53d1\u4eba\u5458", "title": "\u5806\u6808\u6ea2\u51fa\u5f00\u53d1\u8005\u8c03\u67e52020\u5e74", "title_en": "Stack Overflow Developer Survey 2020", "transed": 1, "url": "https://insights.stackoverflow.com/survey/2020#overview", "via": "", "real_tags": ["\u5f00\u53d1", "2020", "\u6ea2\u51fa", "overflow", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "57a11c7bea7780e3e02b1052fe74e49e.png", "infoid": 1004009, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u798f\u7279\u5468\u4e09\u5ba3\u5e03\u4e86\u4e00\u6b3e\u65b0\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u5c06\u4f7f\u8b66\u65b9\u80fd\u591f\u6740\u6b7b2013-2019\u5e74\u798f\u7279\u8b66\u5bdf\u62e6\u622a\u5668SUV\u8868\u9762\u53ef\u80fd\u9690\u85cf\u7684\u201c99.9%\u7684\u75c5\u6bd2\u201d\u3002\u8be5\u8f6f\u4ef6\u5df2\u7ecf\u5728\u4e00\u4e9b\u8b66\u533a\u4f7f\u7528\uff0c\u6240\u6709\u5f53\u4ee3\u8f66\u8f86\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\n\u636e\u5e95\u7279\u5f8b\u81ea\u7531\u5a92\u4f53\u62a5\u9053\uff0c\u798f\u7279\u7684\u60f3\u6cd5\u6765\u81ea\u7ebd\u7ea6\u8b66\u5bdf\uff0c\u4ed6\u4eec\u62c5\u5fc3\u5b89\u5168\u800c\u5f7b\u5e95\u5730\u5c06\u65b0\u51a0\u80ba\u708e\u4ece\u8f66\u91cc\u94f2\u9664\u3002\u798f\u7279\u662f\u8fd9\u6837\u63cf\u8ff0\u8fd9\u9879\u6280\u672f\u7684\uff1a\n\u89e3\u51b3\u65b9\u6848\u5f88\u7b80\u5355\uff1a\u5c06\u8f66\u5185\u7684\u75c5\u6bd2\u70d8\u70e4\u81f3\u706d\u6d3b\u3002\u8be5\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u8b66\u5bdf\u62e6\u622a\u5668\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u81ea\u5df1\u7684\u52a8\u529b\u7cfb\u7edf\u548c\u6c14\u5019\u63a7\u5236\u7cfb\u7edf\uff0c\u4f7f\u8f66\u8f86\u80fd\u591f\u5c06\u4e58\u5ba2\u8231\u5185\u7684\u6e29\u5ea6\u63d0\u9ad8\u5230133\u534e\u6c0f\u5ea6\u4ee5\u4e0a1\uff0c\u6bd4\u6700\u70ed\u7684\u65e5\u5b50\u91cc\u7684\u6b7b\u4ea1\u8c37\u8fd8\u8981\u70ed\uff0c\u6301\u7eed15\u5206\u949f-\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u5e2e\u52a9\u6d88\u6bd2\u8f66\u8f86\u63a5\u89e6\u70b9\u3002\n\u4e00\u65e6\u6fc0\u6d3b\uff0c\u8f66\u8f86\u7684\u52a8\u529b\u7cfb\u7edf\u548c\u6c14\u5019\u63a7\u5236\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u534f\u540c\u5de5\u4f5c\uff0c\u63d0\u9ad8\u4e58\u5ba2\u8231\u7684\u6e29\u5ea6\u3002\u8be5\u8f6f\u4ef6\u5c06\u53d1\u52a8\u673a\u9884\u70ed\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\uff0c\u70ed\u91cf\u548c\u98ce\u6247\u8bbe\u7f6e\u90fd\u5728\u9ad8\u6c34\u5e73\u8fd0\u884c\u3002\u8be5\u8f6f\u4ef6\u81ea\u52a8\u76d1\u6d4b\u5ba4\u5185\u6e29\u5ea6\uff0c\u76f4\u5230\u6574\u4e2a\u5ba2\u8231\u8fbe\u5230\u6700\u4f73\u6c34\u5e73\uff0c\u7136\u540e\u5c06\u8be5\u6e29\u5ea6\u4fdd\u630115\u5206\u949f\u3002\ufeff\u3002\n\u4e00\u65e6\u5faa\u73af\u5b8c\u6210\uff0c\u798f\u7279\u5c31\u4f1a\u81ea\u52a8\u8fdb\u5165\u964d\u6e29\u6a21\u5f0f\uff0c\u5e76\u95ea\u70c1\u6307\u793a\u706f\uff0c\u8ba9\u8b66\u5bdf\u77e5\u9053\u5b83\u4f55\u65f6\u8fdb\u5165\u6bcf\u8f86\u81ea\u884c\u8f66\uff0c\u4f55\u65f6\u8f66\u8f86\u53ef\u4ee5\u5b89\u5168\u8fdb\u5165\u3002\n\u4fc4\u4ea5\u4fc4\u5dde\u7acb\u5927\u5b66\u7684\u4e00\u4e2a\u56e2\u961f\u5e2e\u52a9\u7814\u7a76\u4e86\u798f\u7279\u7684\u9002\u5f53\u70ed\u91cf\u548c\u6301\u7eed\u65f6\u95f4\uff0c\u540c\u65f6\u5728\u7ebd\u7ea6\u548c\u6d1b\u6749\u77f6\u8b66\u5bdf\u5c40\u4ee5\u53ca\u5bc6\u6b47\u6839\u5dde\u8b66\u5bdf\u3001\u9a6c\u8428\u8bf8\u585e\u5dde\u8b66\u5bdf\u3001\u4fc4\u4ea5\u4fc4\u5dde\u535a\u5fb7\u66fc\u9547\u8b66\u5bdf\u5c40\u548c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u585e\u7c73\u8bfa\u5c14\u53bf\u8b66\u957f\u529e\u516c\u5ba4\u4f7f\u7528\u7684\u6c7d\u8f66\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\n\u798f\u7279\u4e8e3\u6708\u4e2d\u65ec\u5f00\u59cb\u7814\u7a76\u6e05\u9664\u8b66\u5bdf\u62e6\u622a\u5668\u6c61\u67d3\u7684\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u7684\u53ef\u80fd\u6027\u3002\u4ec5\u4ec5\u4e24\u4e2a\u6708\u540e\uff0c\u8be5\u8f6f\u4ef6\u5c31\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u4e86\u3002\u798f\u7279\u8868\u793a\uff0c\u62e5\u6709\u81ea\u5df1\u670d\u52a1\u4e2d\u5fc3\u7684\u5927\u578b\u90e8\u95e8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bca\u65ad\u670d\u52a1\u5de5\u5177\u5b89\u88c5\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u5176\u4ed6\u8f66\u961f\u53ef\u4ee5\u4e0e\u5f53\u5730\u7ecf\u9500\u5546\u5408\u4f5c\uff0c\u4e3a2013-19\u5e74\u7684\u8b66\u7528\u62e6\u622a\u5668\u591a\u529f\u80fd\u8f66\u5b89\u88c5\u8f6f\u4ef6\u3002", "note_en": "Ford announced new software Wednesday that will allow police to kill \u201c99.9 percent of viruses\u201d that may be hiding on surfaces in 2013-2019 Ford Police Interceptor SUVs. The software is already in use in some police precincts and is available for all current-generation vehicles.\n  Ford got the idea from New York police officers who were concerned about safely and thoroughly eradicating Covid-19 from their cars, according to the   Detroit Free Press. Here\u2019s how   Ford describes the technology:\n The solution is simple: Bake the vehicle\u2019s interior until viruses inside are inactivated. Using Police Interceptor Utility\u2019s own powertrain and climate control systems, this software solution enables vehicles to elevate passenger compartment temperatures beyond 133 degrees Fahrenheit1, hotter than Death Valley on its hottest day, for 15 minutes \u2013 long enough to help disinfect vehicle touchpoints.\n Once activated, the vehicle\u2019s powertrain and climate control systems work together automatically to elevate passenger compartment temperatures. The software warms up the engine to an elevated level, and both heat and fan settings operate on high. The software automatically monitors interior temperatures until the entire passenger compartment hits the optimal level, then that temperature is maintained for 15 minutes.\ufeff\n    Once the cycle is complete, the Ford automatically enters a cool down mode, and flashes its lights to let police know when it is entering each cycle and when the vehicles are safe to enter.\n A team from Ohio State University helped research the proper heat and time duration for Ford, while the process was tested in New York and Los Angeles police departments as well as cars used by the Michigan State Police, Massachusetts State Police, Boardman Township Police Department in Ohio and Seminole County Sheriff\u2019s Office in Florida.\n  Ford started researching the possibility of a software answer to decontaminating Police Interceptors in mid-March. Just two months later, the software is widely available. Ford says large departments with their own service centers can install the software solution using their own diagnostic service tools, while other fleets can work with their local dealers to install the software for 2013-19 Police Interceptor Utility vehicles.", "posttime": "2020-05-28 08:36:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u798f\u7279,coronavirus,\u75c5\u6bd2,\u8b66\u8f66", "title": "\u798f\u7279\u8b66\u8f66\u73b0\u5728\u53ef\u4ee5\u5c06\u5185\u90e8\u52a0\u70ed\u5230133\u5ea6\u4ee5\u4e0a\u4ee5\u6740\u6b7b\u51a0\u72b6\u75c5\u6bd2", "title_en": "Ford Cop Cars Can Now Heat Interiors to over 133 Degrees to Kill Coronavirus", "transed": 1, "url": "https://jalopnik.com/ford-cop-cars-can-now-heat-interiors-to-over-133-degree-1843707924", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u798f\u7279", "\u75c5\u6bd2", "\u8b66\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004008, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u4e00\u76f4\u5728\u5f00\u53d1\u4e00\u6b3e\u97f3\u4e50\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u9700\u8981\u5c06\u97f3\u4e50\u5e8f\u5217(\u5982\u65cb\u5f8b)\u4ece\u670d\u52a1\u5668\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aABC\u7684\u683c\u5f0f\u3002(\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfbABC\u97f3\u7b26\u7684\u5de5\u4f5c\u539f\u7406\u3002)\u3002\u6211\u4eec\u9009\u62e9ABC\u662f\u56e0\u4e3a\u5b83\u6bd4MIDI\u66f4\u6613\u8bfb\uff0c\u975e\u5e38\u7b80\u6d01\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5728JSON\u4e0a\u91cd\u65b0\u53d1\u660e\u4e00\u4e9b\u683c\u5f0f\u3002\nABC\u662f\u4e00\u79cd\u7b80\u5355\u7684\u683c\u5f0f\uff0c\u5728\u7528\u5b57\u7b26\u4e32\u8868\u793a\u97f3\u4e50\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4f8b\u5982\uff0c\u8d1d\u591a\u82ac\u7684\u201cF\u00fcr Elise\u201d\u4e2d\u7684\u4e00\u5c0f\u6bb5\u5927\u5bb6\u90fd\u77e5\u9053\uff1a\n\u5b57\u6bcd\u5bf9\u5e94\u4e8e\u7279\u5b9a\u7684\u97f3\u9ad8\uff0c\u5b57\u6bcd\u524d\u9762\u7684\u5b57\u7b26\u4ee3\u8868\u610f\u5916\u97f3(\u9510\u97f3\u548c\u964d\u97f3)\uff0c\u5b57\u6bcd\u540e\u9762\u7684\u6570\u5b57\u4ee3\u8868\u8be5\u97f3\u7b26\u5e94\u8be5\u6f14\u594f\u7684\u6301\u7eed\u65f6\u95f4\u3002ABC\u6709\u66f4\u591a\u7684\u7279\u6027(\u5b83\u652f\u6301\u9759\u6b62\u3001\u7cfb\u5e26\u3001\u6a2a\u6881\u3001\u6a2a\u7ebf\u7b49\u7b49)\uff0c\u4f46\u662f\u8fd9\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u8ba9\u60a8\u4e86\u89e3\u4e86\u8be5\u683c\u5f0f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u8be5\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u67d0\u79cd\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5b9a\u5e8f\u5668\u77e5\u9053\u5982\u4f55\u64ad\u653e\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u89e3\u6790\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f3c\u4e4e\u5f88\u5bb9\u6613\u3002\u62c6\u5206\u7a7a\u683c\uff0c\u5e76\u7f16\u5199\u4e00\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u5c06\u6bcf\u4e2a\u97f3\u7b26\u8f6c\u6362\u4e3a\u67d0\u79cd\u503c\u3002\u5bf9\u4e8e\u7b14\u8bb0\u89e3\u6790\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n\u51e0\u4e4e\u4e0d\u53ef\u80fd\u901a\u8fc7\u67e5\u770b\u6765\u786e\u5b9a\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528\u3002\u7279\u522b\u662f\u5bf9\u4e8eABC\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u5b83\u4f7f\u7528\u6807\u70b9\u7b26\u53f7\u8868\u793a\u610f\u5916(^\u3001_\u548c=)\u4ee5\u53ca\u516b\u5ea6\u8c03\u6574(&#39\uff1b\u548c\uff0c)\uff0c\u771f\u7684\u5f88\u96be\u533a\u5206\u54ea\u4e9b\u5b57\u7b26\u662f\u6211\u4eec\u8bd5\u56fe\u5339\u914d\u7684\u6587\u5b57\u5b57\u7b26\uff0c\u54ea\u4e9b\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u63a7\u5236\u5b57\u7b26\uff0c\u5b83\u4eec\u544a\u8bc9\u6a21\u5f0f\u5339\u914d\u8fd9\u4e2a\u5b57\u7b26\u4e2d\u7684\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u53ef\u9009\u5730\u5339\u914d\u90a3\u4e2a\u5b57\u7b26\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u8fd9\u91cc\u6211\u8981\u627f\u8ba4\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5c3d\u7ba1\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee4\u4eba\u8d39\u89e3\uff0c\u4f46\u5b83\u662f\u60a8\u53ef\u4ee5\u7f16\u5199\u7684\u6700\u7b80\u6d01\u7684\u8bed\u8a00\u4e4b\u4e00\u3002\n\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u7ec4\u6210\u7ec4\u4ef6\u4e0d\u5bb9\u6613\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0a\u9762\u7684\u8d1d\u591a\u82ac\u5e8f\u5217\u6ca1\u6709\u4efb\u4f55\u4f11\u6b62\u7b26\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5e26\u6709z\u7684\u97f3\u7b26\uff0c\u800c\u4e0d\u662f\u97f3\u9ad8\u7684\u5b57\u6bcd\u3002\u4f8b\u5982\uff0c\u534a\u4f11\u606f\u53ef\u80fd\u770b\u8d77\u6765\u50cfz/2\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u91cd\u7528\u6301\u7eed\u65f6\u95f4\u6a21\u5f0f\uff0c\u4f46\u5b83\u76ee\u524d\u88ab\u56f0\u5728\u90a3\u4e2a\u5de8\u5927\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06\u5b83\u4eec\u5206\u5f00\uff0c\u7136\u540e\u5e94\u7528\u4e00\u4e9b\u5b57\u7b26\u4e32\u8fde\u63a5\uff1a\n\u8ba9\u610f\u5916\u6a21\u5f0f=&#34\uff1b(\\\\^+|_+|=)\uff1f&#34\uff1b\u8ba9letterPattern=&#34\uff1b([a-Ga-G])&#34\uff1b\u8ba9octaveAdjumentPattern=&#34\uff1b(\uff0c+|&#39\uff1b+)\uff1f&#34\uff1b\u8ba9durationPattern=&#34\uff1b(\\\\d*)(\\\\/)\uff1f(\\\\d*)&#34\uff1b\u8ba9restPattern=&#34\uff1bNSRegularExpression(Pattern\uff1aacterentalPattern+letterPattern+octaveAdjumentPattern+durationPattern)\u8ba9rest Regex=try\uff01NSRegularExpression(Pattern\uff1arestPattern+durationPattern\u3002\n\u8fd9\u786e\u5b9e\u662f\u83b7\u5f97\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u7ec4\u5408\u6027\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53ea\u662f\u6211\u4eec\u6b63\u5728\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u65e0\u6cd5\u77e5\u9053\u6211\u4eec\u7684\u8fde\u63a5\u662f\u5426\u8868\u793a\u5e95\u5c42\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6709\u6548\u8f6c\u6362\uff0c\u56e0\u4e3a\u5b83\u5728\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u88ab\u68c0\u67e5\u3002\n\u6700\u540e\uff0c\u5373\u4f7f\u6211\u4eec\u6210\u529f\u5730\u7ec4\u5408\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\uff0c\u5c06\u5176\u7f16\u8bd1\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u89e3\u6790\u4e86\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u4ecd\u7136\u6ca1\u6709\u4efb\u4f55\u6709\u7528\u7684\u4e1c\u897f\uff01\u6211\u4eec\u6709\u4e00\u5806\u6355\u83b7\u7ec4\u9700\u8981\u505a\u624b\u672f\u624d\u80fd\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u610f\u5916\u5b57\u7b26\u4e32\u3002\u8fd9\u53ef\u4ee5\u662f\u591a\u4e00\u4e2a\u63d2\u5165\u7b26\u53f7(^)(\u9510\u5316)\u3001\u591a\u4e00\u4e2a\u4e0b\u5212\u7ebf(_)(\u5e73\u5766)\u6216\u7b49\u53f7(=)(\u81ea\u7136)\uff0c\u4f46\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u5b83\u662f\u54ea\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u6790\u5b83\u3002\nlet numAccidilents=match.captureGroups[0].text.countlet\u610f\u5916\u5b57\u7b26=match.captureGroups[0].text.firstswitch\u610f\u5916\u5b57\u7b26{case&#34\uff1b^&#34\uff1b\uff1aReturn.Accidental(NumAccidents)\u6848\u4f8b&#34\uff1b_&#34\uff1b\uff1aReturn.Accidental(-numAccidilents)\u6848\u4f8b&#34\uff1b=&#34\uff1b\uff1aReturn.Natural alcase&#34\uff1b&#34\uff1b\uff1aReturn.Unitalcase&#34\uff1b&#34\uff1b\uff1aReturn.Underalcase&#34\uff1b&#34\uff1b&#34\uff1b\uff1aReturn.UnitalCase&#34\uff1b&#34\uff1b\n\u9700\u8981\u624b\u52a8\u6b65\u9aa4\u5c06\u5339\u914d\u7684\u5b50\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6211\u4eec\u7684\u57df\u5bf9\u8c61\uff0c\u8fd9\u6709\u70b9\u70e6\u4eba\u3002\n\u6211\u4eec\u9700\u8981\u66f4\u4ed4\u7ec6\u5730\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7d22\u662f\u51fd\u6570\u7b7e\u540d\u3002\u6211\u4eec\u89e3\u6790\u5e8f\u5217\u7684\u7b56\u7565\u662f\u6d88\u8017\u5b57\u7b26\u4e32\u524d\u9762\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4fbf\u6761\uff0c\u6211\u4eec\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd4\u56de(T\uff1f\uff0cSubstring)\u5143\u7ec4\u7684\u51fd\u6570\u770b\u8d77\u6765\u975e\u5e38\u719f\u6089\u3002\u6211\u5728Pointfree\u4ee3\u7801\u4e2d\u770b\u5230\u8fc7\u5173\u4e8e\u7ec4\u5408\u89e3\u6790\u7684\u5f15\u7528\uff1a\n\u8fd9\u88ab\u79f0\u4e3a\u7ec4\u5408\u89e3\u6790\u5668\uff0c\u56e0\u4e3a\u5b83\u4e0e\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u79f0\u4e3a\u7ec4\u5408\u5668\u7684\u4e00\u4e2a\u6709\u70b9\u6666\u6da9\u96be\u61c2\u7684\u90e8\u5206\u6709\u5173\u3002\u6211\u4e0d\u5b8c\u5168\u7406\u89e3\u5b83\u4eec\uff0c\u4f46\u6211\u4f1a\u628a\u5b83\u7559\u7ed9\u4e39\u5c3c\u5c14\u00b7\u65af\u5766\u4f2f\u683c\u6765\u5206\u4eab\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u4f8b\u5b50\u3002\n\u6211\u60f3\uff0c\u5982\u679c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u89e3\u6790\u6587\u672c\u5e76\u8fd4\u56de\u8fd9\u79cd\u683c\u5f0f\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u7ec4\u5408\u89e3\u6790\u5668\u53ef\u80fd\u4f1a\u975e\u5e38\u5408\u9002\u3002\u56e0\u6b64\uff0c\u6211\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u505a\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u5e76\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e2a\u65b0\u7b56\u7565\u91cd\u65b0\u5b9e\u73b0\u6211\u4eec\u7684\u89e3\u6790\u8fc7\u7a0b\u3002\u89e3\u6790\u5668\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u51fd\u6570\u7684\u7ed3\u6784\uff1a\n\u60a8\u7ed9\u5b83\u4e00\u4e2a\u5b57\u7b26\u4e32(\u672c\u4f8b\u4e2d\u662f\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0)\uff0c\u5b83\u4f7f\u7528\u7f13\u51b2\u533a\u524d\u9762\u7684\u5b57\u7b26\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u5b57\u7b26\u6784\u9020\u4e00\u4e2a\u6cdb\u578bA\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u8fd4\u56deA\u3002\u5982\u679c\u5931\u8d25\uff0c\u5219\u8fd4\u56denil\uff0c\u786e\u4fdd\u4e0d\u4fee\u6539\u8f93\u5165\u53c2\u6570\u3002\n\u4f7f\u7528\u89e3\u6790\u5668\u7ec4\u5408\u5668\uff0c\u53ef\u4ee5\u7f16\u5199\u7b80\u6d01\u3001\u7c7b\u578b\u5b89\u5168\u3001\u53ef\u7ec4\u5408\u7684\u4ee3\u7801\uff0c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u6837\u6709\u6548\u5730\u89e3\u6790\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u5982\u4f55\u68c0\u67e5\u6587\u5b57\u7684\uff1a\n\u9759\u6001\u51fd\u6570\u6587\u672c(_string\uff1astring)-&gt\uff1bParser&lt\uff1bvoid&gt\uff1b{return Parser&lt\uff1bvoid&gt\uff1b(run\uff1a{input in if input.hasPrefix(String){input.removeFirst(string.count)return()}Else{return nil}})}\u3002\n\u5982\u679c\u8f93\u5165\u5177\u6709\u6211\u4eec\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u8bf7\u4ece\u524d\u9762\u5220\u9664\u8be5\u6570\u91cf\u7684\u5b57\u7b26\u5e76\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u503c(\u5728\u672c\u4f8b\u4e2d\u4e3avoid)\u3002\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5219\u8fd4\u56denil-no match\u3002\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\u6240\u6709\u5176\u4ed6\u7684\u5e2e\u52a9\u7a0b\u5e8f-\u60a8\u53ef\u4ee5\u5728Pointfree\u793a\u4f8b\u4ee3\u7801\u4e2d\u627e\u5230\u5f88\u591a\u5e2e\u52a9\u7a0b\u5e8f\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u5e2e\u52a9\u5668\u548c\u5176\u4ed6\u5e2e\u52a9\u5668\uff0c\u60a8\u53ef\u4ee5\u5c06\u610f\u5916\u7684\u89e3\u6790\u4ece\u4e0a\u9762\u91cd\u5199\u4e3a\u5982\u4e0b\u6240\u793a\uff1a\n\u8ba9\u610f\u5916\u89e3\u6790\u5668\uff1aparser&lt\uff1b\u610f\u5916&gt\uff1b=Parsers.oneOf([Parsers.Repeating(&#34\uff1b^&#34\uff1b).map({.\u610f\u5916($0.count)})\uff0cParsers.Repeating(&#34\uff1b_&#34\uff1b).map({.\u610f\u5916(-$0.count)})\uff0cParsers.Genal(&#34\uff1b=&#34\uff1b).map({.Natural})\uff0cParsers.wen\n\u9996\u5148\uff0c\u5b83\u7684\u53ef\u8bfb\u6027\u5f88\u5f3a\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u5b83\u5339\u914d\u7684\u662f\u4ec0\u4e48\u6587\u5b57\u5b57\u7b26\uff0c\u56e0\u4e3a\u5b83\u4eec\u4ecd\u7136\u662f\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u6240\u6709\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u63a7\u5236\u5b57\u7b26\u90fd\u5df2\u66f4\u6539\u4e3a\u547d\u540d\u51fd\u6570\uff0c\u5bf9\u4e8e\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e13\u5bb6\u7684\u4eba\u6765\u8bf4\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\u3002\n\u7b2c\u4e8c\uff0c\u5b83\u975e\u5e38\u5bb9\u6613\u7ec4\u5408\u3002\u6b64\u89e3\u6790\u5668\u7531\u8f83\u5c0f\u7684\u89e3\u6790\u5668\u7ec4\u6210\uff0c\u5982.repeating\u6216.cripal\uff0c\u672c\u8eab\u4e5f\u7531\u8f83\u5927\u7684\u89e3\u6790\u5668\u7ec4\u6210\uff0c\u5982\u7528\u4e8e\u6ce8\u91ca\u3001REST\u7b49\u7684\u89e3\u6790\u5668\u3002\u4e0b\u9762\u662f\u7b14\u8bb0\u89e3\u6790\u5668\u4e2d\u7684\u610f\u5916\u89e3\u6790\u5668\u3002\nvar noteParser\uff1aparser&lt\uff1bNote&gt\uff1b{Return Parsers.zip(acuentalParser\uff0cPitchParser\uff0cdurationParser).map({\u610f\u5916\uff0c\u97f3\u8c03\uff0c\u8fd4\u56de\u8bf4\u660e\u4e2d\u7684\u6301\u7eed\u65f6\u95f4(\u610f\u5916\uff1a\u610f\u5916\uff0c\u97f3\u8c03\uff1a\u97f3\u8c03\uff0c\u6301\u7eed\u65f6\u95f4\uff1a\u6301\u7eed\u65f6\u95f4)})}\u3002\n(zip\u6309\u987a\u5e8f\u5339\u914d\u63d0\u4f9b\u7ed9\u5b83\u7684\u6240\u6709\u89e3\u6790\u5668\uff0c\u5982\u679c\u4efb\u4f55\u89e3\u6790\u5668\u5931\u8d25\uff0c\u5219\u4f1a\u5931\u8d25\u3002)\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u770b\u5230\u6240\u6709\u7c7b\u578b\u5982\u4f55\u6574\u9f50\u6392\u5217\u4e5f\u662f\u975e\u5e38\u68d2\u7684\u3002\u60a8\u53ef\u4ee5\u4ece\u7f16\u8bd1\u5668\u90a3\u91cc\u5f97\u5230\u5f88\u591a\u4fdd\u8bc1\uff0c\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u3002\n\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u6bd4\uff0c\u5b83\u7684\u6700\u540e\u4e00\u4e2a\u597d\u5904\u662f\u751f\u6210\u60a8\u671f\u671b\u7684\u5b9e\u9645\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5076\u7136\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u60a8\u5fc5\u987b\u8fdb\u4e00\u6b65\u5904\u7406\u7684\u5b50\u5b57\u7b26\u4e32\u6355\u83b7\u7ec4\u3002\u7279\u522b\u662f\u4f7f\u7528map\u64cd\u4f5c\uff0c\u60a8\u53ef\u4ee5\u5c06\u7b80\u5355\u7684\u7ed3\u679c(\u5982\u5b50\u5b57\u7b26\u4e32\u6216void)\u8f6c\u6362\u4e3a\u7279\u5b9a\u4e8e\u57df\u7684\u7ed3\u679c(\u5982\u610f\u5916\u6216\u5907\u6ce8)\u3002\n\u8fd9\u4e0eregexes\u76f8\u6bd4\uff0c\u552f\u4e00\u771f\u6b63\u5931\u53bb\u7684\u5730\u65b9\u662f\u7b80\u6d01\u6027\uff0c\u5f53\u60a8\u6dfb\u52a0regexes\u6240\u9700\u7684\u8f6c\u6362\u4ee3\u7801\u65f6\uff0c\u57fa\u672c\u4e0a\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u7528\u7eafSWIFT\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u4e86\u4e00\u4e2a\u89e3\u6790\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u4f7f\u7528\u5b50\u5b57\u7b26\u4e32\u548c\u5757\u7b49\u5de5\u5177\u3002\u5f53\u7136\uff0c\u9ad8\u5ea6\u8c03\u4f18\u5e76\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u8be5\u80fd\u591f\u5728\u901f\u5ea6\u65b9\u9762\u5927\u5927\u8d85\u8fc7\u6b64\u4ee3\u7801\uff1f\n\u4e0d\u5bf9\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u79cd\u65b0\u65b9\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u5168\u9762\u52a0\u5feb25%\u7684\u89e3\u6790\u901f\u5ea6\u3002\u8001\u5b9e\u8bf4\uff0c\u8fd9\u8ba9\u6211\u5f88\u9707\u60ca\u3002\u5982\u679c\u4ee3\u7801\u53d8\u5f97\u66f4\u597d(\u5047\u8bbe\u5b83\u4e0d\u662f\u5173\u952e\u8def\u5f84\uff0c\u7528\u6237\u4e0d\u4f1a\u6ce8\u610f\u5230\u7b49\u7b49)\uff0c\u6211\u901a\u5e38\u4f1a\u7a0d\u5fae\u964d\u4f4e\u901f\u5ea6\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u751a\u81f3\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u66f4\u597d\u7684\u4ee3\u7801\u4e5f\u662f\u66f4\u5feb\u7684\u4ee3\u7801\u3002\u53cc\u8d62\uff01\u6211\u8ba4\u4e3a\u5f88\u591a\u901f\u5ea6\u4f18\u52bf\u6765\u81ea\u4f7f\u7528\u5b50\u5b57\u7b26\u4e32\u3002\u4fee\u526a\u5b50\u5b57\u7b26\u4e32\u7684\u524d\u90e8\u5b9e\u9645\u4e0a\u662f\u81ea\u7531\u7684\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u4e9b\u64cd\u4f5c\u4e2d\u7684\u8bb8\u591a\u64cd\u4f5c\u90fd\u975e\u5e38\u5feb\u3002\n\u6211\u8fd8\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u51e0\u4e2a\u9886\u57df\uff0c\u6bd4\u5982\u53d6\u6d88\u89e3\u6790(\u5982\u679c\u6211\u4eec\u60f3\u5c06\u5e8f\u5217\u7ed3\u6784\u8f6c\u6362\u56deABC\u5b57\u7b26\u4e32\u600e\u4e48\u529e)\uff0c\u4ee5\u53ca\u5f53\u6307\u9488\u4f4d\u4e8e\u5927\u6d77\u635e\u9488\u7684\u4efb\u610f\u4f4d\u7f6e\u65f6\u89e3\u6790\u5668\u662f\u5982\u4f55\u6267\u884c\u7684\uff0c\u4f46\u662f\u5728\u5f97\u5230\u8fd9\u4e9b\u7ed3\u679c\u540e\u5f88\u96be\u8ba9\u6211\u56de\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\u3002", "note_en": "Recently, I\u2019ve been working on a music app that needs to get a musical sequence (like a melody) from the server to the client. To do this, we use a format called ABC. (You can read about how ABC music notation works  here.) We chose ABC because it\u2019s more readable than MIDI, it\u2019s pretty concise, and it\u2019s a standard, so we wouldn\u2019t be re-inventing some format over JSON.\n ABC is a simple format, and it does a great job of representing music in strings. For example, here\u2019s the little bit from Beethoven\u2019s \u201cF\u00fcr Elise\u201d that everyone knows:\n  The letters correspond to specific pitches, the characters before the letters represent accidentals (sharps and flats), and the numbers after them represent the duration that that note should be played for. ABC has a lot more features (it supports rests, ties, beams, barlines, and so on), but this simple example gives you a sense for how the format works.\n The app needs to transform the string into some kind of struct that the sequencer knows how to play. In short, we need to parse this string.\n  At first blush, the problem seems easy enough. Split on spaces, and write some regular expressions to convert each note into some kind of value. For note parsing, the expression looks something like this:\n    It is nearly impossible to determine what this regex does by looking at it. Especially for something like ABC, which uses punctuation marks for things like accidentals ( ^,  _, and  =) as well as octave adjustments ( &#39; and  ,), it\u2019s really hard to tell which are literal characters that we are trying to match, and which are regex control characters that tell the pattern to match zero or more of this one, optionally match that one, and so on.\n One thing I will grant here is that despite their inscrutability, regexes are one of the tersest languages you can write.\n  Another problem with regular expressions is that the constituent components don\u2019t compose easily. For example, our Beethoven sequence above doesn\u2019t include any rests, but they typically look like just like a note with a  z instead of the letter of the pitch. So for example, a half rest might look like  z/2.\n Ideally, we\u2019d like to be able to reuse the duration pattern, but it\u2019s currently trapped inside that giant regex. In order to compose these regexes together, we have to break them apart first, and then apply some string concatenation:\n let accidentalPattern = &#34;(\\\\^+|_+|=)?&#34;let letterPattern = &#34;([a-gA-G])&#34;let octaveAdjustmentPattern = &#34;(,+|&#39;+)?&#34;let durationPattern = &#34;(\\\\d*)(\\\\/)?(\\\\d*)&#34;let restPattern = &#34;z&#34;let noteRegex = try! NSRegularExpression(pattern: accidentalPattern + letterPattern + octaveAdjustmentPattern + durationPattern)let restRegex = try! NSRegularExpression(pattern: restPattern + durationPattern\n This is really the only way to get composability with regexes. And of course, because these are just strings that we\u2019re concatenating, there\u2019s no way to know if our concatenation represents a valid transformation of the underlying regular expression because it isn\u2019t checked at compile time.\n  Lastly, even once we have successfully composed our regex pattern, compiled it into a regular expression, and parsed a string, we still don\u2019t actually have anything useful! We have a bunch of capture groups that we need to operate on to get our final result. For example, the first capture group in the regex gives us our accidental string. This can either be one more carets ( ^) (sharp), one more underscores ( _) (flat), or an equals sign ( =) (natural), but the regex doesn\u2019t tell us which it is, so we need to parse it further.\n let numAccidentals = match.captureGroups[0].text.countlet accidentalChar = match.captureGroups[0].text.firstswitch accidentalChar {case &#34;^&#34;: return .accidental(numAccidentals)case &#34;_&#34;: return .accidental(-numAccidentals)case &#34;=&#34;: return .naturalcase &#34;&#34;: return Accidental.nonedefault: return nil}\n Requiring a manual step where we have to convert the matched substring into our domain object is kind of annoying.\n  My first clue that we needed to look closer at this problem was a function signature. Our strategy for parsing sequences was to consume small pieces of the front of a string. For example, for a note, we\u2019d have something like this:\n  A function that returns a tuple of  (T?, Substring) looked very familiar. I\u2019d seen it referenced in the  Pointfree code about combinatorial parsing:\n  This is called a combinatorial parser because it relates to a somewhat obscure part of computer science called  combinators. I don\u2019t understand them fully, but I will kick it over to  Daniel Steinberg to share some very cool examples.\n I figured if we\u2019re trying to parse text and return something in this format anyway, maybe the combinatorial parser could be a good fit. So I did a little research on the topic and started the process of reimplementing our parsing with this new strategy. The crux of the parser is a struct with a single function:\n  You give it a string (a substring in this case, for performance reasons) and it consumes characters from the front of the buffer to see if it can construct a generic  A from them. If that succeeds, it returns the  A. If it fails, it returns  nil, ensuring no modifications to the input parameter.\n Using parser combinators, it\u2019s possible to write concise, type-safe, composable code that parses strings just as effectively as regexes. For example, here\u2019s how you check for a literal:\n static func literal(_ string: String) -&gt; Parser&lt;Void&gt; { return Parser&lt;Void&gt;(run: { input in if input.hasPrefix(string) { input.removeFirst(string.count) return () } else { return nil } })}\n If the input has a prefix of the string we\u2019re looking for, drop that many characters off the front and return a valid value ( Void in this case). If not, return nil \u2014 no match. I won\u2019t go into detail on all the other helpers here \u2014 you can find a lot of them in the  Pointfree sample code.\n Using this helper and others, you can rewrite the accidental parsing from above into something like this:\n let accidentalParser: Parser&lt;Accidental&gt; = Parsers.oneOf([ Parsers.repeating(&#34;^&#34;).map({ .accidental($0.count) }), Parsers.repeating(&#34;_&#34;).map({ .accidental(-$0.count) }), Parsers.literal(&#34;=&#34;).map({ .natural }), Parsers.literal(&#34;&#34;).map({ .none }),])\n  First, it\u2019s very readable. You can see what literal characters it\u2019s matching because they\u2019re still strings, but all the regex control characters have changed into named functions, which are approachable for people who aren\u2019t regex experts.\n Second, it\u2019s very composable. This parser is made up of smaller parsers, like  .repeating or  .literal, and is itself composed into bigger parsers, like those for notes, rests, and so on. Here\u2019s the accidental parser in the note parser.\n var noteParser: Parser&lt;Note&gt; { return Parsers.zip(accidentalParser, pitchParser, durationParser) .map({ accidental, pitch, duration in return Note(accidental: accidental, pitch: pitch, duration: duration) })}\n ( zip matches all of the parsers that are given to it, in order, and fails if any of them fail.) In this example, it\u2019s also really great to see how all the types line up cleanly. You get a lot of assurance from the compiler that everything is in order.\n The last benefit it has over regex is that it produces the actual value that you\u2019re expecting, an  Accidental, as opposed to substring capture groups that you have to process further. Especially using the  map operation, you can transform simple results, like a substring or  Void into domain specific results, like  Accidental or  Note.\n The only real place that this loses out to regexes is terseness, and when you add the transformation code that regexes require, it\u2019s basically a wash.\n Now, we\u2019ve completely handrolled a parsing solution from scratch, in pure Swift, using only tools like substrings and blocks. Surely regexes, which are highly tuned and written in C, should be able to massively outperform this code in terms of speed?\n Wrong. By using this new approach, we were able to get 25% faster parsing across the board. This shocked me, to be honest. I will usually take a small speed hit if it makes the code nicer (assuming it\u2019s not a critical path, not noticable by the user, etc), but in this case, that wasn\u2019t even a concern, since the nicer code was also the faster code. Win-win! I think a lot of the speed benefit comes from using substrings. Trimming off the front of a substring is effectively free, which makes a lot of these operations super fast.\n There are still a few areas which I\u2019d like to learn more about, like unparsing (what if we want to turn our sequence struct back into an ABC string), and how parsers perform when the needle is in an arbitrary place in the haystack, but it\u2019s going to be pretty hard to get me to go back to regexes after these results.", "posttime": "2020-05-28 08:21:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u5408,combinatorial,\u5b57\u7b26\u4e32", "title": "\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u7ec4\u5408\u89e3\u6790", "title_en": "Regexes vs. Combinatorial Parsing", "transed": 1, "url": "https://khanlou.com/2019/12/regex-vs-combinatorial-parsing/", "via": "", "real_tags": ["\u7ec4\u5408", "\u5b57\u7b26\u4e32"]}, {"category": "", "categoryclass": "", "imagename": "d5fd8cb26c1af564a2ac86c63fffd811.jpg", "infoid": 1004007, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u957f\u8fbe20\u591a\u5e74\u7684\u94f6\u6cb3\u7cfb\u95f4\u641c\u7d22\uff0c\u4e00\u4e2a\u7531\u6fb3\u5927\u5229\u4e9a\u4eba\u9886\u5bfc\u7684\u79d1\u5b66\u5bb6\u56e2\u961f\u8868\u793a\uff0c\u4ed6\u4eec\u7ec8\u4e8e\u627e\u5230\u4e86\u5b87\u5b99\u5931\u8e2a\u7684\u7269\u8d28\uff0c\u89e3\u5f00\u4e86\u4e00\u4e2a\u957f\u671f\u56f0\u6270\u5929\u6587\u5b66\u5bb6\u7684\u8c1c\u56e2\u3002\n\u81ea90\u5e74\u4ee3\u4e2d\u671f\u4ee5\u6765\uff0c\u79d1\u5b66\u5bb6\u4eec\u4e00\u76f4\u8bd5\u56fe\u786e\u5b9a\u5b87\u5b99\u4e2d\u666e\u901a\u7269\u8d28\u7684\u4f4d\u7f6e\u3002\u4ed6\u4eec\u76f8\u4fe1\u5b83\u662f\u5b58\u5728\u7684\uff0c\u56e0\u4e3a\u5927\u7206\u70b8\u7559\u4e0b\u4e86\u7ebf\u7d22\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u4eba\u770b\u5230\u8fc7\u5b83\u3002\n\u6765\u81ea\u79d1\u5ef7\u5927\u5b66\u56fd\u9645\u5c04\u7535\u5929\u6587\u7814\u7a76\u4e2d\u5fc3\u7684\u526f\u6559\u6388Jean-Pierre MacQuart\u8bf4\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8c08\u8bba\u7684\u662f\u79d1\u5b66\u5bb6\u4eec\u6240\u8bf4\u7684\u91cd\u5b50\u7269\u8d28\uff0c\u8fd9\u662f\u4f60\u6211\u7ec4\u6210\u7684\u6b63\u5e38\u7269\u8d28\u3002\n\u5929\u6587\u5b66\u5145\u6ee1\u4e86\u7f3a\u5931\u7684\u4e1c\u897f\u3002\u636e\u4e86\u89e3\uff0c\u5b87\u5b99\u7684\u5927\u90e8\u5206\u662f\u6697\u7269\u8d28\u548c\u6697\u80fd\u91cf\uff0c\u6ca1\u6709\u4eba\u76f4\u63a5\u770b\u5230\u8fc7\u3002\u4f46\u5bf9\u5929\u6587\u5b66\u5bb6\u6765\u8bf4\uff0c\u66f4\u795e\u79d8\u7684\u662f\uff0c\u4ed6\u4eec\u627e\u4e0d\u5230\u5b87\u5b99\u4e2d\u5927\u7ea6\u4e00\u534a\u7684\u666e\u901a\u7269\u8d28\u3002\n\u52a0\u5dde\u5927\u5b66\u5723\u514b\u9c81\u65af\u5206\u6821\u7684\u5929\u6587\u5b66\u5bb6\u6cfd\u7ef4\u5c14\u00b7\u666e\u7f57\u67e5\u65af\u5361\u6559\u6388\u8bf4\uff0c\u6211\u4eec\u4e00\u76f4\u6ca1\u80fd\u627e\u5230\u5b83\uff0c\u8fd9\u771f\u662f\u4e00\u4ef6\u4ee4\u4eba\u5c34\u5c2c\u7684\u4e8b\u3002\n\u5929\u6587\u5b66\u5bb6\u4e00\u76f4\u5728\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u5f62\u5f0f\u7684\u5149--\u4ece\u65e0\u7ebf\u7535\u6ce2\u5230X\u5c04\u7ebf\u548c\u53ef\u89c1\u5149--\u6765\u89c2\u5bdf\u5b87\u5b99\u3002\u6ca1\u6709\u4eba\u900f\u9732\u4e22\u5931\u7684\u7269\u8d28\u3002\n\u76f4\u5230\u4ed6\u4eec\u5f00\u59cb\u6d4b\u91cf\u5feb\u901f\u5c04\u7535\u7206\u53d1-\u53d1\u73b0\u5728\u5b87\u5b99\u4e2d\u98de\u9a70\u7684\u77ed\u6682\u9ad8\u80fd\u95ea\u5149-\u5e76\u53d1\u73b0\u5931\u8e2a\u7684\u7269\u8d28\u9690\u85cf\u5728\u661f\u7cfb\u4e4b\u95f4\u7684\u51b7\u5206\u6563\u6c14\u4f53\u4e2d\u3002\n\u661f\u9645\u7a7a\u95f4\u975e\u5e38\u7a00\u758f\u3002\u9ea6\u5938\u7279\u535a\u58eb\u8bf4\uff0c\u4e22\u5931\u7684\u7269\u8d28\u53ea\u76f8\u5f53\u4e8e\u4e00\u4e2a\u666e\u901a\u529e\u516c\u5ba4\u5927\u5c0f\u7684\u623f\u95f4\u91cc\u7684\u4e00\u4e2a\u6216\u4e24\u4e2a\u539f\u5b50\u3002\n\u5f53FRB\u5728\u5b87\u5b99\u4e2d\u65c5\u884c\u65f6\uff0c\u5b83\u4eec\u4f1a\u88ab\u5b83\u4eec\u6240\u7ecf\u8fc7\u7684\u7269\u8d28\u5206\u6563\u548c\u51cf\u901f\u3002\u65e0\u7ebf\u7535\u80fd\u91cf\u7684\u6bcf\u4e2a\u9891\u7387\u90fd\u4f1a\u56e0\u6b64\u800c\u4e0d\u540c\u5730\u51cf\u6162\u3002\n\u7a7a\u683c\u952e\u7528\u4e8e\u64ad\u653e\u6216\u6682\u505c\uff0cM\u952e\u7528\u4e8e\u9759\u97f3\uff0c\u5de6\u53f3\u7bad\u5934\u952e\u7528\u4e8e\u67e5\u627e\uff0c\u4e0a\u4e0b\u7bad\u5934\u952e\u7528\u4e8e\u97f3\u91cf\u3002\n\u5c31\u50cf\u68f1\u955c\u5c06\u5149\u4f20\u64ad\u5230\u5f69\u8679\u4e2d\uff0c\u6bcf\u4e00\u79cd\u989c\u8272\u90fd\u6709\u4e0d\u540c\u7684\u9891\u7387\uff0c\u5b87\u5b99\u4e2d\u7f3a\u5931\u7684\u7269\u8d28\u5c06FRB\u6269\u6563\u6210\u4e0d\u540c\u7684\u9891\u7387\u3002\n\u901a\u8fc7\u7814\u7a76\u7206\u53d1\u7684\u8d77\u6e90\u6709\u591a\u8fdc\uff0c\u4ee5\u53ca\u5b83\u4eec\u5230\u8fbe\u5730\u7403\u65f6\u5df2\u7ecf\u6269\u6563\u4e86\u591a\u5c11\uff0c\u79d1\u5b66\u5bb6\u4eec\u80fd\u591f\u8ba1\u7b97\u51fa\u661f\u7cfb\u4e4b\u95f4\u6709\u591a\u5c11\u7269\u8d28\u3002\n\u5bf9\u6765\u81ea\u5b87\u5b99\u4e0d\u540c\u90e8\u5206\u76846\u4e2a\u4e0d\u540c\u7684FRB\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u7814\u7a76\u5c0f\u7ec4\u80fd\u591f\u627e\u51fa\u4e22\u5931\u7684\u7269\u8d28\u662f\u5982\u4f55\u5b58\u5728\u7684\uff0c\u4ee5\u53ca\u5728\u54ea\u91cc\u3002\u8fd9\u9879\u7814\u7a76\u7ed3\u679c\u4eca\u5929\u53d1\u8868\u5728\u9876\u7ea7\u79d1\u5b66\u6742\u5fd7\u201c\u81ea\u7136\u201d\u4e0a\u3002\n&#34\uff1b\u8fd9\u662f\u4e00\u79cd\u5f88\u68d2\u7684\u611f\u89c9\uff0c\u2026\u3002\u9ea6\u5938\u7279\u535a\u58eb\u8bf4\uff0c\u8981\u6709\u8fd9\u6837\u7684\u6d4b\u91cf\uff0c\u4e86\u89e3\u4e00\u4e9b\u4f60\u8ba4\u4e3a\u4e16\u754c\u4e0a\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u4eba\u77e5\u9053\u7684\u4e8b\u60c5\uff0c\u5c31\u53ef\u4ee5\u63ed\u5f00\u4e00\u4e2a\u5b87\u5b99\u4e4b\u8c1c\u3002\n\u89c2\u5bdfFRB\u5982\u6b64\u5fae\u5c0f\u7684\u53d8\u5316\u9700\u8981\u4ed8\u51fa\u5de8\u5927\u7684\u52aa\u529b\uff0c\u4f7f\u7528\u5927\u578b\u5c04\u7535\u671b\u8fdc\u955c\u548c\u5149\u5b66\u671b\u8fdc\u955c\u76f8\u7ed3\u5408\u3002\n\u7814\u7a76\u5c0f\u7ec4\u4f7f\u7528\u4e86CSIRO\u7684\u6fb3\u5927\u5229\u4e9a\u5e73\u65b9\u516c\u91cc\u9635\u5217\u63a2\u8def\u5668(ASKAP)\uff0c\u8fd9\u662f\u4e00\u79cd\u4f4d\u4e8e\u897f\u6fb3\u5927\u5229\u4e9a\u4e2d\u897f\u90e8\u7684\u753136\u4e2a\u5c04\u7535\u671b\u8fdc\u955c\u7ec4\u6210\u7684\u9635\u5217\u3002\u8fd9\u4e9b\u789f\u5b50\u52a0\u5728\u4e00\u8d77\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c04\u7535\u671b\u8fdc\u955c\u6709\u4e00\u4e2a4000\u5e73\u65b9\u7c73\u7684\u789f\u5b50\u3002\n\u5b83\u4eec\u6709\u80fd\u529b\u4ee5\u9ad8\u5206\u8fa8\u7387\u89c2\u5bdf\u5927\u7247\u5929\u7a7a\u3002\u8fd9\u610f\u5473\u7740\u5728\u4e0d\u77e5\u9053FRB\u4ece\u54ea\u91cc\u6765\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u80fd\u591f\u6355\u6349\u5230\u5b83\uff0c\u5e76\u51c6\u786e\u5730\u5206\u6790\u5176\u4e2d\u6bcf\u4e2a\u6ce2\u957f\u7684\u5206\u5e03\u60c5\u51b5\u3002\n\u7136\u540e\uff0c\u667a\u5229\u7684\u8d85\u5927\u671b\u8fdc\u955c\u6070\u5982\u5176\u5206\u5730\u6d4b\u91cf\u4e86\u5730\u7403\u4e0eFRB\u6240\u5728\u661f\u7cfb\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\u6709\u4e86\u8fd9\u4e24\u6761\u4fe1\u606f\uff0c\u7814\u7a76\u4eba\u5458\u5c31\u80fd\u591f\u786e\u5b9a\u6bcf\u4e2aFRB\u6240\u7ecf\u8fc7\u7684\u7a7a\u767d\u7a7a\u95f4\u4e2d\u6709\u591a\u5c11\u7269\u8d28\u3002\n\u8fd9\u4e00\u53d1\u73b0\u4ecd\u7136\u8ba9\u5b87\u5b99\u7684\u5927\u90e8\u5206\u5730\u533a\u6ca1\u6709\u88ab\u53d1\u73b0\u3002\u5927\u7ea685%\u7684\u7269\u8d28\u88ab\u8ba4\u4e3a\u662f\u6697\u7269\u8d28\uff0c\u4e5f\u5c31\u662f\u7528\u666e\u901a\u65b9\u6cd5\u65e0\u6cd5\u63a2\u6d4b\u5230\u7684\u7269\u8d28\u3002\n\u6211\u559c\u6b22\u795e\u79d8\u7684\u5b87\u5b99\u3002\u9ea6\u5938\u7279\u535a\u58eb\u544a\u8bc9\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\uff0c\u8fd9\u610f\u5473\u7740\u8fd8\u6709\u66f4\u591a\u9700\u8981\u7406\u89e3\u7684\u5730\u65b9\u3002\n\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u7684\u6089\u5c3c\u5927\u5b66\u5929\u6587\u5b66\u5bb6\u5854\u62c9\u00b7\u58a8\u83f2(Tara Murphy)\u6559\u6388\u8bf4\uff0c\u6211\u8ba4\u4e3a\u8fd9\u771f\u7684\u5f88\u4ee4\u4eba\u5174\u594b\u3002\n\u5979\u8bf4\uff0c\u8fd9\u662f\u5229\u7528\u5feb\u901f\u5c04\u7535\u7206\u53d1\u63a2\u6d4b\u4e0d\u53ef\u89c1\u5b87\u5b99\u7684\u7b2c\u4e00\u6b65\u3002\n\u9ea6\u5938\u7279\u535a\u58eb\u8bf4\uff0c\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528100\u4e2a\u6216\u66f4\u591a\u7684FRB\uff0c\u5bf9\u8fd9\u79cd\u65b0\u53d1\u73b0\u7684\u7269\u8d28\u6709\u4e00\u4e2a\u9519\u7efc\u590d\u6742\u7684\u7406\u89e3\u3002\n\u4ed6\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u7684\u4e1c\u897f\u662f\u5b87\u5b99\u7684\u5927\u6c14\u5c42\u3002\u5b83\u662f\u661f\u7cfb\u8d56\u4ee5\u751f\u5b58\u7684\u751f\u6001\u7cfb\u7edf\u3002\n\u4ed6\u8bf4\uff0c\u901a\u8fc7\u4e86\u89e3\u5b83\u7684\u7cbe\u786e\u7ed3\u6784\uff0c\u5929\u6587\u5b66\u5bb6\u5c06\u80fd\u591f\u66f4\u597d\u5730\u4e86\u89e3\u661f\u7cfb\u662f\u5982\u4f55\u8bde\u751f\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u6b7b\u4ea1\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\u3002", "note_en": "After an intergalactic search lasting more than two decades, an Australian-led team of scientists say they have finally found the universe&#39;s &#34;missing matter&#34;, solving a mystery that has long stumped astronomers.\n Since the mid-90s, scientists have been trying to locate half of the universe&#39;s ordinary matter. They believed it was out there because of clues left over from the Big Bang, but it had never been seen.\n &#34;What we&#39;re talking about here is what scientists call baryonic matter, which is the normal stuff that you and I are made of,&#34; said Associate Professor Jean-Pierre Macquart, from the Curtin University node of the International Centre for Radio Astronomy Research.\n Astronomy is full of missing stuff. Most of the universe is understood to be &#34;dark matter&#34; and &#34;dark energy&#34;, which nobody has ever directly seen. But even more of a mystery for astronomers was that they couldn&#39;t find about half the ordinary matter in the universe.\n  &#34;It&#39;s been a true embarrassment that we haven&#39;t been able to find it,&#34; said Professor Xavier Prochaska, an astronomer from the University of California, Santa Cruz.\n  Astronomers had been looking at the universe using all sorts of different forms of light \u2014 from radio waves through to x-rays and visible light. None revealed the missing matter.\n That was until they started to measure fast radio bursts \u2014 brief flashes of intense energy found racing across the universe \u2014 and discovered the missing matter hiding in the cold dispersed gas between galaxies.\n &#34;Intergalactic space is very sparse. The missing matter was equivalent to only one or two atoms in a room the size of an average office,&#34; Dr Macquart said.\n  As FRBs travel across the universe, they are dispersed and slowed by the matter they pass through. Each frequency of radio energy is slowed down differently by that matter.\n Space to play or pause, M to mute, left and right arrows to seek, up and down arrows for volume.\n Just like a prism spreads light into a rainbow of colours, each with a different frequency, the missing matter in the universe spreads the FRBs out into different frequencies.\n By studying how far away the origin of the bursts were, and how much they had spread out by the time they reached Earth, the scientists were able to figure out how much matter was sitting between galaxies.\n Repeating the process with six different FRBs coming from different parts of the universe, the team was able to figure out how \u2014 and where \u2014 the missing matter was. The results were published today in the top scientific journal  Nature.\n &#34;It was a great feeling \u2026 to have that measurement, to know something that you think only a small number of people in the world know, to put to bed a cosmic mystery,&#34; Dr Macquart said.\n  Seeing such tiny changes in FRBs required a mammoth effort, using a combination of massive radio and optical telescopes.\n The team used the CSIRO&#39;s Australian Square Kilometre Array Pathfinder (ASKAP), \u2014 an array of 36 radio telescopes in the Mid West of Western Australia. Combined, the dishes equate to a single radio telescope with a 4,000 square metre dish.\n  They have the ability to look at a huge area of the sky in high resolution. That means without knowing where an FRB would come from, they were able to capture it, and analyse exactly how spread out each wavelength in it was.\n Then the aptly named Very Large Telescope in Chile measured the distance between Earth and the galaxy that the FRB came from.\n With those two pieces of information, the researchers were able to determine how much matter was in the otherwise empty space that each FRB passed through.\n   The discovery still leaves much of the universe undetected. About 85 per cent of its matter is thought to be &#34;dark matter&#34; \u2014 that which is undetectable using ordinary methods.\n &#34;I like a mysterious universe. It means there is much more to be understood,&#34; Dr Macquart told the ABC.\n &#34;I think it&#39;s really exciting,&#34; said Professor Tara Murphy, an astronomer from the University of Sydney, who was not involved in the research.\n &#34;It&#39;s the first step to using fast radio bursts to probe the invisible universe,&#34; she said.\n Dr Macquart said the next step was to get an intricate understanding of this newly found matter, using 100 or more FRBs.\n &#34;The thing that we&#39;ve discovered is the atmosphere of the universe,&#34; he said. &#34;It&#39;s the ecosystem in which galaxies live.&#34;\n He said by understanding its precise structure, astronomers would be able to better understand how galaxies were born, and what happened to them when they died.", "posttime": "2020-05-28 08:21:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u73b0,find,\u7269\u8d28", "title": "\u5929\u6587\u5b66\u5bb6\u53d1\u73b0\u5931\u8e2a\u7684\u91cd\u5b50\u7269\u8d28", "title_en": "Astronomers find missing baryonic matter", "transed": 1, "url": "https://www.abc.net.au/news/2020-05-28/astronomers-find-universe-missing-matter/12291788", "via": "", "real_tags": ["\u53d1\u73b0", "find", "\u7269\u8d28"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004006, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1952\u5e74\u7684\u590f\u5929\u5f88\u70ed\uff0c\u5373\u4f7f\u6309\u7167\u5fb7\u514b\u8428\u65af\u5dde\u7684\u6807\u51c6\uff1a\u534e\u6c0f100\u5ea6(38\u6444\u6c0f\u5ea6)\u4ee5\u4e0a25\u5929\uff0c\u201c\u51c9\u723d\u201d\u7684\u65e5\u5b50\u4e5f\u4e0d\u4f1a\u51c9\u5feb\u591a\u5c11\u3002\u4f46\u5728\u5168\u5dde\uff0c\u6e38\u6cf3\u6c60\u90fd\u5173\u95ed\u4e86\u3002\u7535\u5f71\u9662\uff0c\u9152\u5427\u548c\u4fdd\u9f84\u7403\u9986\u3002\u6559\u5802\u670d\u52a1\u6682\u505c\u3002\u57ce\u5e02\u7528DDT\u6740\u866b\u5242\u6d47\u5728\u8857\u9053\u4e0a\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u536b\u751f\u5b98\u5458\u77e5\u9053\u868a\u5b50\u4e0d\u4f1a\u4f20\u64ad\u75be\u75c5\uff0c\u4f46\u5fc5\u987b\u8ba9\u4eba\u770b\u5230\u4ed6\u4eec\u5728\u505a\u4e9b\u4ec0\u4e48\u3002\u4f3c\u4e4e\u4ec0\u4e48\u90fd\u4e0d\u7ba1\u7528\u3002\u968f\u7740\u590f\u5929\u7684\u6d41\u901d\uff0c\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u4f8b\u7684\u6570\u91cf\u4e0d\u65ad\u589e\u52a0\u3002\n\u4e03\u6708\u7684\u4e00\u5929\uff0c\u5728\u8fbe\u62c9\u65af\u4e00\u4e2a\u5b89\u9759\u7684\u90ca\u533a\uff0c\u4e00\u4e2a\u540d\u53eb\u4fdd\u7f57\u00b7\u4e9a\u5386\u5c71\u5927\u7684\u516d\u5c81\u7537\u5b69\u5728\u5916\u9762\u7684\u590f\u96e8\u4e2d\u73a9\u800d\u3002\u4ed6\u611f\u89c9\u4e0d\u8212\u670d--\u8116\u5b50\u75bc\uff0c\u5934\u649e\u5f97\u5389\u5bb3\u3002\u4ed6\u628a\u6cbe\u6ee1\u6ce5\u5df4\u7684\u978b\u5b50\u7559\u5728\u9662\u5b50\u91cc\uff0c\u5149\u7740\u811a\u8d70\u8fdb\u53a8\u623f\uff0c\u8ba9\u7eb1\u95e8\u5728\u4ed6\u8eab\u540e\u7830\u5730\u4e00\u58f0\u5173\u4e0a\u3002\u5f53\u4ed6\u7684\u6bcd\u4eb2\u62ac\u5934\u770b\u7740\u4ed6\u53d1\u70e7\u7684\u8138\u65f6\uff0c\u5979\u5012\u5438\u4e86\u4e00\u53e3\u51b7\u6c14\u3002\u5979\u8ba9\u4ed6\u8dd1\u51fa\u53bb\uff0c\u6293\u8d77\u4ed6\u7684\u978b\u5b50\uff0c\u7136\u540e\u547d\u4ee4\u4ed6\u4e0a\u5e8a\u7761\u89c9\u3002\n\u4fdd\u7f57\u5728\u7236\u6bcd\u7684\u5e8a\u4e0a\u5ea6\u8fc7\u4e86\u7b2c\u4e00\u5929\uff0c\u586b\u5199\u7f57\u4f0a\u00b7\u7f57\u6770\u65af\u7684\u6d82\u8272\u4e66\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u4ed6\u7684\u53d1\u70e7\u98d9\u5347\uff0c\u56db\u80a2\u75bc\u75db\u5982\u82b1\uff0c\u5bb6\u5ead\u533b\u751f\u8fd8\u662f\u5efa\u8bae\u4ed6\u7684\u7236\u6bcd\u4e0d\u8981\u5e26\u4ed6\u53bb\u533b\u9662\u3002\u533b\u751f\u8bf4\uff0c\u5f88\u660e\u663e\u4ed6\u60a3\u6709\u5c0f\u513f\u9ebb\u75f9\u75c7\uff0c\u4f46\u90a3\u91cc\u7684\u75c5\u4eba\u592a\u591a\u4e86\u3002\u4fdd\u7f57\u5728\u5bb6\u5eb7\u590d\u7684\u673a\u4f1a\u66f4\u5927\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u7537\u5b69\u7684\u75c5\u60c5\u6076\u5316\u4e86\u3002\u4fdd\u7f57\u8d64\u811a\u8d70\u8fdb\u53a8\u623f\u4e94\u5929\u540e\uff0c\u4ed6\u4e0d\u80fd\u518d\u62ff\u7740\u8721\u7b14\uff0c\u4e0d\u80fd\u8bf4\u8bdd\uff0c\u4e0d\u80fd\u541e\u54bd\uff0c\u4e5f\u4e0d\u80fd\u54b3\u55fd\u3002\u4ed6\u7684\u7236\u6bcd\u6025\u5fd9\u628a\u4ed6\u9001\u5f80\u5e15\u514b\u5170\u533b\u9662\u3002\u5c3d\u7ba1\u5de5\u4f5c\u4eba\u5458\u8bad\u7ec3\u6709\u7d20\uff0c\u800c\u4e14\u6709\u4e13\u95e8\u7684\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u623f\uff0c\u4f46\u533b\u9662\u8fd8\u662f\u4e0d\u582a\u91cd\u8d1f\u3002\u5230\u5904\u90fd\u662f\u751f\u75c5\u7684\u5b69\u5b50\uff0c\u6ca1\u6709\u5730\u65b9\u7ed9\u4ed6\u4eec\u5168\u90e8\u6cbb\u7597\u3002\u4fdd\u7f57\u7684\u6bcd\u4eb2\u628a\u4ed6\u62b1\u5728\u6000\u91cc\u7b49\u7740\u3002\n\u5f53\u7537\u5b69\u7ec8\u4e8e\u88ab\u533b\u751f\u770b\u75c5\u65f6\uff0c\u4ed6\u7684\u6bcd\u4eb2\u88ab\u544a\u77e5\u5df2\u7ecf\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u4fdd\u7f57\u88ab\u7559\u5728\u8d70\u5eca\u7684\u8f6e\u5e8a\u4e0a\uff0c\u51e0\u4e4e\u5598\u4e0d\u8fc7\u6c14\u6765\u3002\u5982\u679c\u4e0d\u662f\u53e6\u4e00\u4f4d\u533b\u751f\u51b3\u5b9a\u7ed9\u4ed6\u518d\u68c0\u67e5\u4e00\u6b21\uff0c\u4ed6\u65e9\u5c31\u6b7b\u4e86\u3002\u7b2c\u4e8c\u4f4d\u533b\u751f\u628a\u4ed6\u62b1\u8d77\u6765\uff0c\u548c\u4ed6\u4e00\u8d77\u8dd1\u5230\u624b\u672f\u5ba4\uff0c\u8fdb\u884c\u4e86\u7d27\u6025\u6c14\u7ba1\u5207\u5f00\u672f\uff0c\u62bd\u8d70\u4e86\u4ed6\u762b\u75ea\u7684\u8eab\u4f53\u65e0\u6cd5\u79fb\u4f4d\u7684\u80ba\u90e8\u5145\u8840\u3002\n\u4e09\u5929\u540e\uff0c\u4fdd\u7f57\u9192\u6765\u4e86\u3002\u4ed6\u7684\u8eab\u4f53\u88ab\u5305\u88f9\u5728\u4e00\u53f0\u673a\u5668\u91cc\uff0c\u673a\u5668\u53d1\u51fa\u5598\u606f\u7684\u58f0\u97f3\u3002\u4ed6\u52a8\u4e0d\u4e86\u4e86\u3002\u4ed6\u4e0d\u80fd\u8bf4\u8bdd\u3002\u4ed6\u4e0d\u80fd\u54b3\u55fd\u3002\u4ed6\u770b\u4e0d\u89c1\u84b8\u6c7d\u5e10\u7bf7\u96fe\u8499\u8499\u7684\u7a97\u6237-\u4e00\u4e2a\u4e59\u70ef\u57fa\u7f69\uff0c\u4f7f\u4ed6\u5934\u90e8\u5468\u56f4\u7684\u7a7a\u6c14\u4fdd\u6301\u6e7f\u6da6\uff0c\u80ba\u90e8\u7684\u7c98\u6db2\u758f\u677e\u3002\u4ed6\u4ee5\u4e3a\u4ed6\u5df2\u7ecf\u6b7b\u4e86\u3002\n\u5f53\u5e10\u7bf7\u6700\u7ec8\u88ab\u62c6\u9664\u65f6\uff0c\u4ed6\u6240\u80fd\u770b\u5230\u7684\u53ea\u6709\u5176\u4ed6\u5b69\u5b50\u7684\u5934\u90e8\uff0c\u4ed6\u4eec\u7684\u5c38\u4f53\u88ab\u5305\u88f9\u5728\u91d1\u5c5e\u7f50\u91cc\uff0c\u7a7f\u7740\u4e0a\u6d46\u7684\u767d\u8272\u5236\u670d\u7684\u62a4\u58eb\u548c\u6f02\u6d6e\u5728\u4ed6\u4eec\u4e4b\u95f4\u7684\u5e3d\u5b50\u3002\u201c\u4f60\u80fd\u770b\u5230\u7684\u662f\u4e00\u6392\u6392\u94c1\u80ba\u3002\u6ee1\u662f\u5b69\u5b50\uff0c\u201c\u4ed6\u6700\u8fd1\u56de\u5fc6\u9053\u3002\n\u63a5\u4e0b\u6765\u768418\u4e2a\u6708\u662f\u6298\u78e8\u3002\u867d\u7136\u4ed6\u56e0\u4e3a\u6c14\u7ba1\u5207\u5f00\u4e0d\u80fd\u8bf4\u8bdd\uff0c\u4f46\u4ed6\u80fd\u542c\u5230\u5176\u4ed6\u5b69\u5b50\u5728\u75db\u82e6\u4e2d\u7684\u54ed\u58f0\u3002\u4ed6\u8eba\u5728\u81ea\u5df1\u7684\u7caa\u4fbf\u91cc\u597d\u51e0\u4e2a\u5c0f\u65f6\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u80fd\u544a\u8bc9\u5458\u5de5\u4ed6\u9700\u8981\u6e05\u6d17\u3002\u4ed6\u5dee\u70b9\u88ab\u81ea\u5df1\u7684\u7c98\u6db2\u6df9\u6b7b\u3002\u4ed6\u7684\u7236\u6bcd\u51e0\u4e4e\u6bcf\u5929\u90fd\u6765\u770b\u671b\u4ed6\uff0c\u4f46\u4ed6\u7684\u751f\u6d3b\u5374\u4ee4\u4eba\u751f\u538c\u3002\u4ed6\u548c\u5176\u4ed6\u5b69\u5b50\u8bd5\u7740\u4ea4\u6d41\uff0c\u4e92\u76f8\u505a\u9b3c\u8138\uff0c\u4f46\u662f\uff0c\u4fdd\u7f57\u8bf4\uff1a\u201c\u6bcf\u6b21\u6211\u4ea4\u670b\u53cb\uff0c\u4ed6\u4eec\u90fd\u4f1a\u6b7b\u3002\u201d\n\u4fdd\u7f57\u4ece\u6700\u521d\u7684\u611f\u67d3\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u4f46\u5c0f\u513f\u9ebb\u75f9\u75c7\u4f7f\u4ed6\u51e0\u4e4e\u4ece\u9888\u90e8\u4ee5\u4e0b\u5b8c\u5168\u762b\u75ea\u3002\u4ed6\u7684\u6a2a\u9694\u819c\u4e0d\u518d\u80fd\u4e3a\u4ed6\u505a\u4ec0\u4e48\uff0c\u94c1\u80ba\u505a\u4e86\u4ec0\u4e48\u3002\u4fdd\u7f57\u4ef0\u9762\u5e73\u8eba\uff0c\u5934\u9760\u5728\u6795\u5934\u4e0a\uff0c\u8eab\u4f53\u4ece\u8116\u5b50\u4ee5\u4e0b\u88ab\u5305\u88f9\u5728\u91d1\u5c5e\u5706\u67f1\u4f53\u4e2d\u3002\u7a7a\u6c14\u7531\u4e00\u7ec4\u7531\u9a6c\u8fbe\u9a71\u52a8\u7684\u76ae\u9769\u98ce\u7bb1\u5438\u51fa\u6c14\u7f38\uff1b\u771f\u7a7a\u4ea7\u751f\u7684\u8d1f\u538b\u8feb\u4f7f\u4ed6\u7684\u80ba\u6269\u5f20\u3002\u5f53\u7a7a\u6c14\u88ab\u62bd\u56de\u65f6\uff0c\u538b\u529b\u7684\u53d8\u5316\u4f7f\u4ed6\u7684\u80ba\u8f7b\u5fae\u653e\u6c14\u3002\u6b63\u662f\u8fd9\u79cd\u7ecf\u5e38\u53d1\u51fa\u7684\u5636\u5636\u58f0\u548c\u53f9\u606f\u58f0\u8ba9\u4fdd\u7f57\u6d3b\u4e86\u4e0b\u6765\u3002\u4ed6\u4e0d\u80fd\u79bb\u5f00\u80ba\u3002\u5f53\u533b\u62a4\u4eba\u5458\u6253\u5f00\u5b83\u7ed9\u4ed6\u6d17\u6fa1\u6216\u7ba1\u7406\u4ed6\u7684\u8eab\u4f53\u529f\u80fd\u65f6\uff0c\u4ed6\u4e0d\u5f97\u4e0d\u5c4f\u4f4f\u547c\u5438\u3002\n\u4fdd\u7f57\u5bf9\u75c5\u623f\u5370\u8c61\u6700\u6df1\u523b\u7684\u662f\uff0c\u5f53\u4ed6\u4eec\u5de1\u89c6\u65f6\uff0c\u542c\u5230\u533b\u751f\u4eec\u8c08\u8bba\u4ed6\u3002\u201c\u4ed6\u4eca\u5929\u5c31\u8981\u6b7b\u4e86\uff0c\u201d\u4ed6\u4eec\u8bf4\u3002\u201c\u4ed6\u4e0d\u5e94\u8be5\u8fd8\u6d3b\u7740\u3002\u201d\u8fd9\u8ba9\u4ed6\u6012\u4e0d\u53ef\u904f\u3002\u8fd9\u8ba9\u4ed6\u60f3\u6d3b\u4e0b\u53bb\u3002\n1954\u5e74\uff0c\u5f53\u4fdd\u7f578\u5c81\u65f6\uff0c\u4ed6\u7684\u6bcd\u4eb2\u63a5\u5230\u4e86\u4e00\u4f4d\u7269\u7406\u6cbb\u7597\u5e08\u7684\u7535\u8bdd\uff0c\u8fd9\u4f4d\u7406\u7597\u5e08\u4e0e\u81f4\u529b\u4e8e\u6839\u9664\u810a\u9ad3\u7070\u8d28\u708e\u7684\u7f8e\u56fd\u6148\u5584\u673a\u6784\u8fea\u6885\u65af\u8fdb\u884c\u66f2(The March Of Dimes)\u5408\u4f5c\u3002\u4fdd\u7f57\u5728\u5c0f\u513f\u9ebb\u75f9\u75c7\u75c5\u623f\u5446\u4e86\u51e0\u4e2a\u6708\uff0c\u8fd9\u8ba9\u4ed6\u5bb3\u6015\u533b\u751f\u548c\u62a4\u58eb\uff0c\u4f46\u4ed6\u7684\u6bcd\u4eb2\u8ba9\u4ed6\u653e\u5fc3\uff0c\u6240\u4ee5\u6cbb\u7597\u5e08\u6c99\u5229\u6587\u592b\u4eba\u5f00\u59cb\u6bcf\u5468\u6765\u770b\u4ed6\u4e24\u6b21\u3002\n\u4fdd\u7f57\u544a\u8bc9\u8fd9\u4f4d\u6cbb\u7597\u5e08\uff0c\u4ed6\u66fe\u88ab\u533b\u751f\u5f3a\u8feb\u5c1d\u8bd5\u5728\u6ca1\u6709\u80ba\u7684\u60c5\u51b5\u4e0b\u547c\u5438\uff0c\u4ed6\u662f\u5982\u4f55\u53d8\u84dd\u5e76\u660f\u5012\u7684\u3002\u4ed6\u8fd8\u544a\u8bc9\u5979\uff0c\u4ed6\u6709\u4e00\u6b21\u541e\u4e0b\u4e86\u4e00\u4e9b\u7a7a\u6c14\uff0c\u51e0\u4e4e\u50cf\u547c\u5438\u4e00\u6837\u201c\u541e\u4e0b\u201d\u4e86\u4e00\u4e9b\u7a7a\u6c14\u3002\u8fd9\u9879\u6280\u672f\u6709\u4e00\u4e2a\u4e13\u4e1a\u540d\u79f0\uff0c\u53eb\u201c\u820c\u54bd\u547c\u5438\u201d\u3002\u4f60\u901a\u8fc7\u538b\u5e73\u820c\u5934\u548c\u6253\u5f00\u5589\u5499\u6765\u5c06\u7a7a\u6c14\u7559\u5728\u5634\u91cc\u548c\u5589\u5499\u91cc\uff0c\u5c31\u50cf\u4f60\u5728\u4e3a\u533b\u751f\u8bf4\u201c\u554a\u201d\u4e00\u6837\u3002\u5f53\u4f60\u95ed\u4e0a\u5634\u7684\u65f6\u5019\uff0c\u5589\u5499\u808c\u8089\u4f1a\u5c06\u7a7a\u6c14\u5411\u4e0b\u63a8\u8fc7\u58f0\u5e26\uff0c\u8fdb\u5165\u80ba\u90e8\u3002\u4fdd\u7f57\u79f0\u4e4b\u4e3a\u201c\u9752\u86d9\u547c\u5438\u201d\u3002\n\u6c99\u5229\u6587\u548c\u5979\u7684\u75c5\u4eba\u505a\u4e86\u4e2a\u4ea4\u6613\u3002\u5982\u679c\u4ed6\u80fd\u5728\u6ca1\u6709\u94c1\u80ba\u7684\u60c5\u51b5\u4e0b\u86d9\u5f0f\u547c\u5438\u4e09\u5206\u949f\uff0c\u5979\u4f1a\u7ed9\u4ed6\u4e00\u53ea\u5c0f\u72d7\u3002\u4fdd\u7f57\u82b1\u4e86\u4e00\u5e74\u7684\u65f6\u95f4\u624d\u5b66\u4f1a\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u4ed6\u5f97\u5230\u4e86\u4ed6\u7684\u5c0f\u72d7\uff1b\u4ed6\u7ed9\u5979\u53d6\u540d\u4e3a\u91d1\u5409\u5c14\u3002\u867d\u7136\u4ed6\u4e0d\u5f97\u4e0d\u8003\u8651\u6bcf\u4e00\u6b21\u547c\u5438\uff0c\u4f46\u4ed6\u505a\u5f97\u66f4\u597d\u4e86\u3002\u4e00\u65e6\u4ed6\u53ef\u4ee5\u53ef\u9760\u5730\u547c\u5438\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u4ed6\u5c31\u53ef\u4ee5\u77ed\u6682\u5730\u79bb\u5f00\u80ba\u90e8\uff0c\u9996\u5148\u5728\u95e8\u5eca\u4e0a\uff0c\u7136\u540e\u8fdb\u5165\u9662\u5b50\u3002\n\u5c3d\u7ba1\u4fdd\u7f57\u6bcf\u5929\u665a\u4e0a\u4ecd\u7136\u9700\u8981\u7761\u5728\u94c1\u80ba\u91cc--\u4ed6\u660f\u8ff7\u7684\u65f6\u5019\u65e0\u6cd5\u547c\u5438--\u4f46\u4fdd\u7f57\u5e76\u6ca1\u6709\u5728\u9662\u5b50\u91cc\u505c\u4e0b\u6765\u300221\u5c81\u65f6\uff0c\u4ed6\u6210\u4e3a\u7b2c\u4e00\u4e2a\u6ca1\u6709\u4eb2\u81ea\u4e0a\u8bfe\u5c31\u4ece\u8fbe\u62c9\u65af\u9ad8\u4e2d\u6bd5\u4e1a\u7684\u4eba\u3002\u5728\u591a\u6b21\u906d\u5230\u5927\u5b66\u7ba1\u7406\u90e8\u95e8\u7684\u62d2\u7edd\u540e\uff0c\u4ed6\u8fdb\u5165\u4e86\u8fbe\u62c9\u65af\u7684\u5357\u65b9\u536b\u7406\u516c\u4f1a\u5927\u5b66\uff0c\u7136\u540e\u8fdb\u5165\u4e86\u5fb7\u514b\u8428\u65af\u5927\u5b66\u5965\u65af\u6c40\u5206\u6821\u7684\u6cd5\u5b66\u9662\u3002\u51e0\u5341\u5e74\u6765\uff0c\u4fdd\u7f57\u4e00\u76f4\u662f\u8fbe\u62c9\u65af\u548c\u6c83\u65af\u5821\u7684\u4e00\u540d\u5f8b\u5e08\uff0c\u7a7f\u7740\u4e09\u4ef6\u5957\u897f\u88c5\uff0c\u5750\u7740\u6539\u88c5\u8fc7\u7684\u8f6e\u6905\uff0c\u76f4\u7acb\u7740\u762b\u75ea\u7684\u8eab\u4f53\uff0c\u5728\u6cd5\u5ead\u4e0a\u4ee3\u8868\u5ba2\u6237\u3002\n\u5728\u6b8b\u75be\u4eba\u8f83\u5c11\u5728\u516c\u5171\u573a\u5408\u9732\u9762\u7684\u65f6\u5019-\u7981\u6b62\u6b67\u89c6\u7684\u7f8e\u56fd\u6b8b\u75be\u4eba\u6cd5\u6848\u8981\u52301990\u5e74\u624d\u80fd\u901a\u8fc7-\u4fdd\u7f57\u51fa\u73b0\u5728\u516c\u4f17\u9762\u524d\u3002\u5728\u4ed6\u7684\u4e00\u751f\u4e2d\uff0c\u4ed6\u5750\u8fc7\u98de\u673a\uff0c\u53bb\u8fc7\u8131\u8863\u821e\u4ff1\u4e50\u90e8\uff0c\u770b\u8fc7\u5927\u6d77\uff0c\u5728\u6559\u5802\u7948\u7977\uff0c\u5760\u5165\u7231\u6cb3\uff0c\u72ec\u81ea\u751f\u6d3b\uff0c\u5e76\u4e3a\u6b8b\u75be\u4eba\u6743\u5229\u4e3e\u884c\u9759\u5750\u6297\u8bae\u3002\u4ed6\u98ce\u5ea6\u7fe9\u7fe9\u3001\u53cb\u5584\u3001\u5065\u8c08\u3001\u6613\u6012\u3001\u7231\u5f00\u73a9\u7b11\u3002\n74\u5c81\u65f6\uff0c\u4ed6\u53c8\u4e00\u6b21\u5168\u5929\u5019\u5730\u88ab\u9650\u5236\u5728\u80ba\u90e8\u3002\u5728\u7f8e\u56fd\uff0c\u53ea\u6709\u4e00\u4e2a\u4eba\u8fd8\u5728\u4f7f\u7528\u5b83\u3002\u82f1\u56fd\u6700\u540e\u4e00\u4e2a\u4f7f\u7528\u94c1\u80ba\u7684\u4eba\u4e8e2017\u5e7412\u6708\u53bb\u4e16\uff0c\u4eab\u5e7475\u5c81\u3002\u6ca1\u4eba\u60f3\u5230\u9700\u8981\u94c1\u80ba\u7684\u4eba\u80fd\u6d3b\u8fd9\u4e48\u4e45\u3002\u5728\u4e00\u573a\u81f4\u547d\u7684\u4f20\u67d3\u75c5\u4e2d\u5e78\u5b58\u4e0b\u6765\u540e\uff0c\u4fdd\u7f57\u6ca1\u6709\u60f3\u5230\u81ea\u5df1\u4f1a\u53d7\u5230\u53e6\u4e00\u573a\u75ab\u60c5\u7684\u5a01\u80c1\u3002\n\u5c0f\u513f\u9ebb\u75f9\u75c7\u662f\u7a92\u606f\u81f4\u6b7b\u7684-\u4e0d\u662f\u50cf\u65b0\u51a0\u80ba\u708e\u90a3\u6837\u901a\u8fc7\u7834\u574f\u80ba\u90e8\uff0c\u800c\u662f\u901a\u8fc7\u653b\u51fb\u810a\u9ad3\u4e2d\u7684\u8fd0\u52a8\u795e\u7ecf\u5143\uff0c\u524a\u5f31\u6216\u5207\u65ad\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\u548c\u808c\u8089\u4e4b\u95f4\u7684\u901a\u8baf\u3002\u968f\u4e4b\u800c\u6765\u7684\u762b\u75ea\u610f\u5473\u7740\u4f7f\u547c\u5438\u6210\u4e3a\u53ef\u80fd\u7684\u808c\u8089\u4e0d\u518d\u5de5\u4f5c\u3002\n\u51e0\u5343\u5e74\u6765\uff0c\u5c0f\u513f\u9ebb\u75f9\u75c7\u5728\u4e16\u754c\u5404\u5730\u4ee5\u5b64\u7acb\u7684\u7206\u53d1\u5f62\u5f0f\u5b58\u5728\uff0c\u4f46\u5b83\u76f4\u523020\u4e16\u7eaa\u624d\u5f00\u59cb\u6d41\u884c-\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u8fd9\u5f97\u76ca\u4e8e\u536b\u751f\u6761\u4ef6\u7684\u6539\u5584\u3002\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u6bd2\u901a\u8fc7\u53d7\u611f\u67d3\u7caa\u4fbf\u6c61\u67d3\u7684\u53e3\u8154\u3001\u98df\u7269\u6216\u6c34\u6216\u672a\u6d17\u624b\u8fdb\u5165\u4eba\u4f53\u3002\u76f4\u523019\u4e16\u7eaa\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u513f\u7ae5\u90fd\u4f1a\u5728\u4e00\u5c81\u4e4b\u524d\u63a5\u89e6\u5230\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u6bd2\uff0c\u540c\u65f6\u4ed6\u4eec\u4ecd\u7136\u4eab\u6709\u4fdd\u62a4\uff0c\u4e0d\u53d7\u6000\u5b55\u671f\u95f4\u6bcd\u4f53\u6297\u4f53\u4ece\u6bcd\u4eb2\u4f20\u67d3\u7ed9\u5a74\u513f\u7684\u5f71\u54cd\u3002\u7136\u800c\uff0c\u968f\u7740\u536b\u751f\u6761\u4ef6\u7684\u6539\u5584\uff0c\u513f\u7ae5\u5728\u5a74\u513f\u65f6\u671f\u63a5\u89e6\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u6bd2\u7684\u53ef\u80fd\u6027\u964d\u4f4e\uff1b\u5f53\u4ed6\u4eec\u5728\u8f83\u5927\u7684\u513f\u7ae5\u65f6\u671f\u9047\u5230\u810a\u9ad3\u7070\u8d28\u708e\u75c5\u6bd2\u65f6\uff0c\u4ed6\u4eec\u7684\u514d\u75ab\u7cfb\u7edf\u6beb\u65e0\u51c6\u5907\u3002\n\u5728\u7f8e\u56fd\uff0c\u4ece1916\u5e74\u5f00\u59cb\uff0c\u6bcf\u5e74\u590f\u5929\u90fd\u4f1a\u6709\u5c0f\u513f\u9ebb\u75f9\u75c7\u5728\u5168\u56fd\u7684\u67d0\u4e9b\u5730\u65b9\u6d41\u884c\u3002\u572840\u5e74\u4ee3\u548c50\u5e74\u4ee3\u7684\u9ad8\u5cf0\u671f\uff0c\u8fd9\u79cd\u75c5\u6bd2\u6bcf\u5e74\u5bfc\u81f4\u7f8e\u56fd\u8d85\u8fc71.5\u4e07\u4f8b\u762b\u75ea\u3002\u5728\u540c\u4e00\u65f6\u671f\uff0c\u5168\u7403\u6bcf\u5e74\u81f3\u5c11\u670960\u4e07\u4eba\u6b7b\u4e8e\u6b64\u75c5\u6216\u762b\u75ea\u3002\u4fdd\u7f57\u611f\u67d3\u75c5\u6bd2\u7684\u90a3\u4e00\u5e74\uff0c\u53731952\u5e74\uff0c\u89c1\u8bc1\u4e86\u7f8e\u56fd\u5386\u53f2\u4e0a\u6700\u5927\u7684\u4e00\u6b21\u810a\u9ad3\u7070\u8d28\u708e\u7206\u53d1\uff1a\u5168\u56fd\u8fd15.8\u4e07\u4f8b\u75c5\u4f8b\u3002\u5176\u4e2d\uff0c\u8d85\u8fc72.1\u4e07\u4eba-\u5927\u90e8\u5206\u662f\u513f\u7ae5-\u7559\u4e0b\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u6b8b\u75be\uff0c3145\u4eba\u6b7b\u4ea1\u3002\n\u867d\u7136\u810a\u9ad3\u7070\u8d28\u708e\u4e0d\u662f\u6700\u81f4\u547d\u7684\u4f20\u67d3\u75c5\uff0c\u4f46\u5b83\u63a5\u89e6\u5230\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u201c\u8fd9\u5c31\u50cf\u761f\u75ab\uff0c\u5b83\u628a\u6bcf\u4e2a\u4eba\u90fd\u903c\u75af\u4e86\uff0c\u201d\u4fdd\u7f57\u5728\u53bb\u5e74\u6211\u7b2c\u4e00\u6b21\u548c\u4ed6\u4ea4\u8c08\u65f6\u544a\u8bc9\u6211\u3002\u5728\u75ab\u60c5\u53d1\u751f\u7684\u5730\u65b9\uff0c\u5bb6\u5ead\u5728\u5bb6\u4e2d\u5173\u7740\u7a97\u6237\uff0c\u5728\u6050\u60e7\u4e2d\u8eb2\u907f\u3002\u5404\u7c7b\u516c\u4f17\u96c6\u4f1a\u573a\u6240\u5173\u95ed\u3002\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u4e92\u52a8\u5145\u6ee1\u4e86\u4e0d\u786e\u5b9a\u6027\u3002\u6839\u636e\u5386\u53f2\u5b66\u5bb6\u5927\u536b\u00b7\u5965\u8f9b\u65af\u57fa(David Oshinsky)\u7684\u8bf4\u6cd5\uff0c\u4e00\u4e9b\u4eba\u62d2\u7edd\u5728\u7535\u8bdd\u4e2d\u4ea4\u8c08\uff0c\u56e0\u4e3a\u4ed6\u4eec\u62c5\u5fc3\u75c5\u6bd2\u53ef\u80fd\u4f1a\u6cbf\u7740\u8fd9\u6761\u7ebf\u4f20\u64ad\u3002\u57281916\u5e74\u7ebd\u7ea6\u7b2c\u4e00\u6b21\u5927\u7206\u53d1\u671f\u95f4\uff0c\u5728\u4e00\u4e2a\u6708\u5185\u670972000\u53ea\u732b\u548c8000\u53ea\u72d7\u88ab\u6740\uff0c\u56e0\u4e3a\u6709\u4f20\u8a00\u8bf4\u52a8\u7269\u4f20\u64ad\u4e86\u8fd9\u79cd\u75be\u75c5(\u5b83\u4eec\u6ca1\u6709\u4f20\u64ad)\u3002\u5230\u4e8640\u591a\u5c81\u7684\u65f6\u5019\uff0c\u7236\u6bcd\u4eec\u4f1a\u8ba9\u4ed6\u4eec\u7684\u5b69\u5b50\u5728\u590f\u5929\u6bcf\u5929\u7ed9\u4ed6\u4eec\u505a\u201c\u5c0f\u513f\u9ebb\u75f9\u75c7\u6d4b\u8bd5\u201d--\u6478\u811a\u8dbe\uff0c\u628a\u4e0b\u5df4\u8d34\u5728\u80f8\u53e3\uff0c\u68c0\u67e5\u75bc\u75db\u6216\u865a\u5f31--\u800c\u4fdd\u9669\u516c\u53f8\u5219\u5411\u65b0\u751f\u5a74\u513f\u7684\u7236\u6bcd\u51fa\u552e\u201c\u5c0f\u513f\u9ebb\u75f9\u75c7\u4fdd\u9669\u201d\u3002\n\u57281955\u5e74\u75ab\u82d7\u95ee\u4e16\u4e4b\u524d\uff0c\u5c0f\u513f\u9ebb\u75f9\u75c7\u4e4b\u6240\u4ee5\u5982\u6b64\u53ef\u6015\uff0c\u662f\u56e0\u4e3a\u65e0\u6cd5\u9884\u6d4b\u8c01\u4f1a\u4ece\u5934\u75bc\u7684\u611f\u67d3\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u8c01\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u518d\u8d70\u8def\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u75be\u75c5\u6ca1\u6709\u660e\u663e\u7684\u5f71\u54cd\u3002\u5728\u51fa\u73b0\u75c7\u72b6\u768430%\u5de6\u53f3\u7684\u4eba\u4e2d\uff0c\u5927\u591a\u6570\u4eba\u53ea\u7ecf\u5386\u4e86\u8f7b\u5fae\u7684\u75be\u75c5\u3002\u4f46\u6709\u4e00\u5c0f\u90e8\u5206\u4eba(4-5%)\u8868\u73b0\u51fa\u4e25\u91cd\u7684\u75c7\u72b6\uff0c\u5305\u62ec\u6781\u7aef\u7684\u808c\u8089\u75bc\u75db\u3001\u9ad8\u70e7\u548c\u795e\u5fd7\u4e0d\u6e05\u3002\u5f53\u75c5\u6bd2\u4fb5\u5165\u810a\u9ad3\u7684\u795e\u7ecf\u7ec4\u7ec7\u65f6\uff0c\u4e00\u4e9b\u611f\u67d3\u8005\u762b\u75ea\uff1b\u8fd9\u79cd\u75c5\u6bd2\u7684\u53d1\u5c55\u88ab\u79f0\u4e3a\u9ebb\u75f9\u6027\u810a\u9ad3\u7070\u8d28\u708e\u3002\u611f\u67d3\u9ebb\u75f9\u6027\u810a\u9ad3\u7070\u8d28\u708e\u7684\u60a3\u8005\u4e2d\u5927\u7ea6\u67095-10%\u6b7b\u4ea1\uff0c\u5c3d\u7ba1\u5728\u5e7f\u6cdb\u4f7f\u7528\u94c1\u80ba\u4e4b\u524d\u8fd9\u4e2a\u6570\u5b57\u8981\u9ad8\u5f97\u591a\u3002\n\u5982\u679c\u6211\u4eec\u5fd8\u8bb0\u4e86\u6d41\u884c\u75c5\u7684\u6050\u6016\uff0c\u73b0\u5728\u6211\u4eec\u6b63\u88ab\u5f3a\u884c\u63d0\u9192\u3002\u6211\u6700\u540e\u4e00\u6b21\u4e0e\u4fdd\u7f57\u901a\u8bdd\u662f\u57284\u6708\u4efd\uff0c\u90a3\u662f\u5728\u6211\u4eec\u5404\u81ea\u7684\u5c01\u9501\u4e2d\u901a\u8fc7Skype-\u4ed6\u5728\u8fbe\u62c9\u65af\u7684\u4e00\u5957\u516c\u5bd3\u91cc\u5750\u5728\u4ed6\u7684\u94c1\u80ba\u91cc\uff0c\u5168\u804c\u62a4\u7406\u5458\u8f6e\u6d41\u5de5\u4f5c\uff0c\u5934\u90e8\u65c1\u8fb9\u653e\u7740\u4e9a\u9a6c\u900a\u56de\u58f0(Amazon Echo)\uff0c\u800c\u6211\u5728\u6211\u4f4d\u4e8e\u82f1\u683c\u5170\u8428\u91cc\u7684\u5bb6\u91cc\u3002\n\u5c31\u50cf\u5c0f\u513f\u9ebb\u75f9\u75c7\u4e00\u6837\uff0c\u65b0\u51a0\u80ba\u708e\u53ef\u4ee5\u901a\u8fc7\u6c89\u9ed8\u7684\u643a\u5e26\u8005\u4f20\u64ad\uff0c\u800c\u4ed6\u4eec\u5e76\u4e0d\u77e5\u9053\u81ea\u5df1\u611f\u67d3\u4e86\u8fd9\u79cd\u75be\u75c5\u3002\u5c31\u50cf\u5c0f\u513f\u9ebb\u75f9\u75c7\u4e00\u6837\uff0c\u5b83\u5df2\u7ecf\u6401\u7f6e\u4e86\u6b63\u5e38\u7684\u751f\u6d3b\u3002\u5c31\u50cf\u5c0f\u513f\u9ebb\u75f9\u75c7\u4e00\u6837\uff0c\u6211\u4eec\u628a\u5e0c\u671b\u5bc4\u6258\u5728\u75ab\u82d7\u4e0a\u3002\u751a\u81f3\u6709\u4f20\u8a00\u8bf4\u8981\u628a\u94c1\u80ba\u5e26\u56de\u6765--\u82f1\u56fd\u7684\u4e00\u9879\u5021\u8bae\u6b63\u8bd5\u56fe\u5c06\u4e00\u79cd\u540d\u4e3aExovent\u7684\u65b0\u578b\u8d1f\u538b\u547c\u5438\u5668\u5e26\u5230\u533b\u9662\uff0c\u4e3a\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u670d\u52a1\u3002\u4e0e\u6b63\u538b\u547c\u5438\u673a\u4e0d\u540c\uff0c\u8fd9\u4e2a\u8f83\u5c0f\u7684\u94c1\u80ba\u53ef\u4ee5\u8986\u76d6\u5728\u60a3\u8005\u7684\u80f8\u90e8\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5728\u673a\u5668\u4e3a\u4ed6\u4eec\u547c\u5438\u65f6\u4fdd\u6301\u6e05\u9192\u3001\u8bf4\u8bdd\u3001\u8fdb\u98df\u548c\u53e3\u670d\u836f\u7269\u3002\n\u4fdd\u7f57\u5728\u8c08\u5230\u810a\u9ad3\u7070\u8d28\u708e\u548c\u65b0\u51a0\u80ba\u708e\u4e4b\u95f4\u7684\u76f8\u4f3c\u4e4b\u5904\u65f6\u8bf4\uff1a\u201c\u4e8b\u60c5\u5c31\u662f\u8fd9\u6837\uff0c\u5bf9\u6211\u6765\u8bf4\u51e0\u4e4e\u662f\u602a\u5f02\u7684\u3002\u201d\u201c\u8fd9\u8ba9\u6211\u5f88\u5bb3\u6015\u3002\u201d\n\u867d\u7136\u8fd9\u79cd\u75c5\u6bd2\uff0c\u5982\u679c\u4ed6\u611f\u67d3\u4e86\uff0c\u5f88\u53ef\u80fd\u4f1a\u6740\u6b7b\u4ed6\uff0c\u4f46\u81ea\u4ece\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\uff0c\u4fdd\u7f57\u7684\u751f\u6d3b\u5e76\u6ca1\u6709\u53d1\u751f\u620f\u5267\u6027\u7684\u53d8\u5316\u3002\u591a\u5e74\u6765\uff0c\u4ed6\u5728\u80ba\u5916\u5192\u9669\u7684\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc75\u5206\u949f\u3002\u6b63\u5982\u4ed6\u7684\u4e00\u4f4d\u670b\u53cb\u544a\u8bc9\u6211\u7684\u90a3\u6837\uff1a\u201c\u8fd9\u5bf9\u4ed6\u6765\u8bf4\u4e0d\u662f\u4e00\u79cd\u538b\u529b\uff0c\u8fd9\u662f\u4ed6\u7684\u751f\u6d3b\u3002\u8fd9\u4f4d\u662f\u539f\u5730\u907f\u96be\u6240\u5148\u751f\u3002\u201c\u3002\u6211\u95ee\u4fdd\u7f57\u662f\u5426\u62c5\u5fc3\u65b0\u51a0\u80ba\u708e\u3002\u201c\u5f53\u7136\uff0c\u5f53\u7136\uff0c\u201d\u4ed6\u8bf4\u3002\u7136\u540e\u4ed6\u8865\u5145\u9053\uff1a\u201c\u55ef--\u6211\u4e0d\u4f1a\u5750\u5728\u90a3\u91cc\u62c5\u5fc3\u8fd9\u4ef6\u4e8b\u3002\u6211\u5feb\u6b7b\u4e86\u3002\u8fd9\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e0d\u540c\u3002\u201c\u3002\n\u4fdd\u7f57\u7684\u5065\u5eb7\u72b6\u51b5\u4e00\u76f4\u5c8c\u5c8c\u53ef\u5371\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u4ed6\u7684\u5065\u5eb7\u72b6\u51b5\u6709\u6240\u4e0b\u964d\u3002\u5f53\u6211\u57282019\u5e745\u6708\u7b2c\u4e00\u6b21\u89c1\u5230\u4ed6\u65f6\uff0c\u4ed6\u662f\u8fbe\u62c9\u65af\u5317\u90e8\u514b\u83b1\u95e8\u8328\u533b\u9662\u7684\u957f\u671f\u4f4f\u9662\u60a3\u8005\u3002\u56db\u4e2a\u591a\u6708\u524d\uff0c\u4ed6\u60a3\u4e0a\u4e86\u6301\u7eed\u6027\u547c\u5438\u9053\u611f\u67d3\uff0c\u9001\u5f80\u533b\u9662\u3002\u6bcf\u6b21\u4ed6\u52a8\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u817f\u90fd\u4f1a\u75bc\u3002\u4ed6\u66fe\u5e0c\u671b\u533b\u751f\u80fd\u5e2e\u52a9\u4ed6\u63a7\u5236\u8fd9\u79cd\u75bc\u75db\uff0c\u4f46\u4ed6\u544a\u8bc9\u6211\uff0c\u201c\u8fd9\u79cd\u75bc\u75db\u4e0d\u4f1a\u6d88\u5931\u201d\uff0c\u4ed6\u5750\u5728\u4e00\u5757\u8fde\u63a5\u7740\u80ba\u90e8\u4e00\u7aef\u7684\u5bbd\u677f\u4e0a\u7684\u6795\u5934\u4e0a\u62ac\u5934\u770b\u7740\u6211\u3002\u4ed6\u7684\u58f0\u97f3\u7f13\u6162\u3001\u6c99\u54d1\uff0c\u6709\u65f6\u8fd8\u4e0d\u65f6\u88ab\u5598\u606f\u6253\u65ad\u3002\u5728\u673a\u5668\u6301\u7eed\u4e0d\u65ad\u7684\u53f9\u606f\u58f0\u4e2d\u542c\u5230\u4fdd\u7f57\uff0c\u9700\u8981\u542c\u8005\u4e13\u6ce8\u4e8e\u4ed6\uff0c\u800c\u5ffd\u7565\u80ba\u90e8\uff1b\u56e0\u6b64\uff0c\u4ed6\u5df2\u7ecf\u4e60\u60ef\u4e86\u88ab\u503e\u542c\u3002\n\u5728\u4fdd\u7f57\u7684\u5934\u65c1\u8fb9\u662f\u4e00\u6839\u900f\u660e\u7684\u5851\u6599\u68cd\u5b50\uff0c\u6241\u5e73\uff0c\u5927\u7ea6\u4e00\u82f1\u5c3a\u957f\uff0c\u672b\u7aef\u7cfb\u7740\u4e00\u652f\u7b14\u3002\u5f53\u4fdd\u7f57\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u7236\u4eb2\u5c31\u5236\u4f5c\u4e86\u8fd9\u6837\u4e00\u6839\u68cd\u5b50\uff0c\u4ece\u90a3\u4ee5\u540e\uff0c\u4ed6\u4e00\u76f4\u5728\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684\u68cd\u5b50\u3002\u4ed6\u628a\u68cd\u5b50\u7684\u4e00\u7aef\u5939\u5728\u5634\u91cc\uff0c\u64cd\u7eb5\u94a2\u7b14\u5728\u7535\u8bdd\u4e0a\u5199\u5b57\u3001\u6253\u5b57\u548c\u6309\u952e\uff1b\u4ed6\u7528\u5b83\u7b7e\u7f72\u4e86\u533b\u9662\u7684\u8c41\u514d\u4e66\uff0c\u5141\u8bb8\u4ed6\u4e0e\u6211\u4ea4\u8c08\uff0c\u5c3d\u7ba1\u4ed6\u5bf9\u5fc5\u987b\u7b7e\u7f72\u4efb\u4f55\u4e1c\u897f\u624d\u80fd\u544a\u8bc9\u6211\u4ed6\u81ea\u5df1\u7684\u6545\u4e8b\u611f\u5230\u6124\u6012\u3002\u201c\u8fd9\u662f\u6700\u8352\u8c2c\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u62b1\u6028\u9053\u3002\u4fdd\u7f57\u7684\u7259\u9f7f\u56e0\u591a\u5e74\u4f7f\u7528\u68cd\u5b50\u800c\u53d8\u5f97\u6241\u5e73\u800c\u78e8\u635f\u3002\u867d\u7136\u4ed6\u80ba\u5185\u7684\u8eab\u4f53\u51e0\u4e4e\u6ca1\u6709\u5c0f\u65f6\u5019\u90a3\u4e48\u5927\uff0c\u808c\u8089\u4e5f\u840e\u7f29\u4e86\uff0c\u4f46\u4ed6\u7684\u8116\u5b50\u670918\u82f1\u5bf8\u957f\uff0c\u4e0b\u5df4\u808c\u8089\u80bf\u80c0\u3002\n\u4fdd\u7f57\u7684\u94c1\u80ba--\u4ed6\u79f0\u4e4b\u4e3a\u5fe0\u5b9e\u7684\u201c\u8001\u94c1\u9a6c\u201d--\u662f50\u5e74\u4ee3\u53a8\u623f\u7535\u5668\u7684\u9ec4\u6cb9\u9ec4\u8272\u3002\u5b83\u7684\u91d1\u5c5e\u817f\uff0c\u672b\u7aef\u662f\u9ed1\u8272\u6a61\u80f6\u8f6e\u5b50\uff0c\u628a\u5b83\u63d0\u5347\u5230\u9002\u5408\u7167\u987e\u8005\u7684\u9ad8\u5ea6\uff0c\u800c\u9876\u90e8\u7684\u7a97\u6237\u8ba9\u4ed6\u4eec\u770b\u5230\u91cc\u9762\uff0c\u4e24\u4fa7\u7684\u56db\u4e2a\u8237\u7a97\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u4f38\u624b\u8fdb\u53bb\u3002\u4e3a\u4e86\u6253\u5f00\u8fd9\u53f0\u91cd\u8fd1300\u516c\u65a4\u7684\u673a\u5668\uff0c\u62a4\u7406\u4eba\u5458\u5fc5\u987b\u677e\u5f00\u5934\u90e8\u7684\u5bc6\u5c01\u4ef6\uff0c\u5e76\u5c06\u4f7f\u7528\u8005\u6ed1\u5230\u5185\u5e8a\u4e0a\u3002\u8237\u7a97\u3001\u538b\u529b\u9600\u3001\u5706\u67f1\u5f62\u548c\u989c\u8272\u90fd\u7ed9\u4eba\u4e00\u79cd\u575a\u56fa\u7684\u5fae\u578b\u6f5c\u8247\u7684\u5370\u8c61\u3002\n\u94c1\u80ba\u662f\u7528\u6765\u5efa\u9020\u7684\uff0c\u5373\u4f7f\u6ca1\u6709\u4eba\u8ba4\u4e3a\u91cc\u9762\u7684\u4eba\u80fd\u6301\u4e45\u5b58\u5728\u30021928\u5e74\uff0c\u54c8\u4f5b\u5927\u5b66\u7684\u533b\u5b66\u5de5\u7a0b\u5e08\u83f2\u5229\u666e\u00b7\u5fb7\u6797\u514b(Philip Drinker)\u548c\u751f\u7406\u5b66\u5bb6\u8def\u6613\u65af\u00b7\u8096(Louis Shaw)\u53d1\u660e\u4e86\u8fd9\u79cd\u8bbe\u5907\u3002\u9152\u9b3c\u66fe\u53bb\u6ce2\u58eb\u987f\u513f\u7ae5\u533b\u9662(Boston Children\u2018s Hospital)\u8c03\u67e5\u75c5\u623f\u91cc\u65e9\u4ea7\u513f\u7684\u7a7a\u8c03\u6545\u969c\uff0c\u4f46\u4ed6\u79bb\u5f00\u65f6\u5e26\u7740\u5728\u5c0f\u513f\u9ebb\u75f9\u75c7\u75c5\u623f\u770b\u5230\u7684\u4e1c\u897f\u6325\u4e4b\u4e0d\u53bb-\u6b63\u5982\u4ed6\u7684\u59b9\u59b9\u3001\u4f20\u8bb0\u4f5c\u5bb6\u51ef\u745f\u7433\u00b7\u5fb7\u6797\u514b\u00b7\u9c8d\u6069(Catherine Drinker Bowen)\u540e\u6765\u5199\u7684\u90a3\u6837\uff0c\u201c\u84dd\u8272\u7684\u5c0f\u8138\uff0c\u53ef\u6015\u7684\u547c\u5438\u201d\u3002\u4ed6\u7684\u53d1\u660e\u662f\u4e00\u79cd\u7b80\u5355\u7684\u673a\u68b0\u88c5\u7f6e\uff0c\u8d77\u5230\u4e86\u8017\u5c3d\u808c\u8089\u7684\u4f5c\u7528\uff0c\u8fd9\u610f\u5473\u7740\u6570\u4ee5\u5343\u8ba1\u539f\u672c\u4f1a\u6b7b\u53bb\u7684\u513f\u7ae5\u6ca1\u6709\u6b7b\u3002\u94c1\u80ba\u6700\u591a\u53ef\u4ee5\u4f7f\u7528\u4e24\u5468\uff0c\u7ed9\u8eab\u4f53\u4e00\u4e2a\u5eb7\u590d\u7684\u673a\u4f1a\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5e7d\u95ed\u6050\u60e7\u75c7\u7684\u94c1\u80ba\u6210\u4e3a\u810a\u9ad3\u7070\u8d28\u708e\u7834\u574f\u6027\u5f71\u54cd\u7684\u8c61\u5f81\u3002\u53ea\u6709\u75c5\u60c5\u6700\u91cd\u7684\u75c5\u4eba\u624d\u4f1a\u6b7b\u4e8e\u5176\u4e2d\u4e00\u4e2a\uff1b\u5982\u679c\u4ed6\u4eec\u6d3b\u4e86\u4e0b\u6765\uff0c\u5f88\u53ef\u80fd\u968f\u4e4b\u800c\u6765\u7684\u662f\u7ec8\u751f\u6b8b\u75be\u3002\u4f46\u81ea1955\u5e74\u8d77\uff0c\u4e00\u65e6\u7f8e\u56fd\u5404\u5730\u7684\u513f\u7ae5\u63a5\u79cd\u4e86\u75ab\u82d7\uff0c\u8fd9\u79cd\u75be\u75c5\u7684\u53d1\u75c5\u7387\u5c31\u76f4\u7ebf\u4e0b\u964d\u3002\u90a3\u4e9b\u9700\u8981\u77ed\u671f\u547c\u5438\u5e2e\u52a9\u7684\u4eba\u63a5\u53d7\u4e86\u66f4\u5177\u4fb5\u5165\u6027\u4f46\u66f4\u5c0f\u7684\u6b63\u538b\u547c\u5438\u673a\u7684\u6cbb\u7597\uff0c\u8fd9\u79cd\u547c\u5438\u673a\u662f1952\u5e74\u54e5\u672c\u54c8\u6839\u810a\u9ad3\u7070\u8d28\u708e\u7206\u53d1\u671f\u95f4\u7531\u4e00\u540d\u9ebb\u9189\u5e08\u53d1\u660e\u7684\u3002\u8fd9\u4e9b\u88c5\u7f6e\u5c06\u7a7a\u6c14\u76f4\u63a5\u63a8\u5165\u548c\u6392\u51fa\u80ba\u90e8\uff0c\u8981\u4e48\u662f\u901a\u8fc7\u5634\u5df4\uff0c\u8981\u4e48\u662f\u901a\u8fc7\u75c5\u4eba\u670d\u7528\u9547\u9759\u5242\u65f6\u873f\u8712\u8fdb\u5165\u5589\u5499\u7684\u7ba1\u5b50\uff0c\u6216\u8005\u662f\u901a\u8fc7\u6c14\u7ba1\u4e0a\u7684\u4e00\u4e2a\u6d1e\u3002\u5c31\u50cf\u94c1\u80ba\u4e00\u6837\uff0c\u8fd9\u4e9b\u4e1c\u897f\u53ea\u6253\u7b97\u77ed\u671f\u4f7f\u7528\uff1b\u90a3\u4e9b\u5728\u4f59\u751f\u4e2d\u9700\u8981\u547c\u5438\u5e2e\u52a9\u7684\u5c11\u6570\u4eba\u8ba4\u4e3a\uff0c\u4e3a\u4e86\u652f\u4ed8\u79ef\u6781\u538b\u529b\u5e26\u6765\u7684\u66f4\u5927\u6d41\u52a8\u6027\uff0c\u5728\u5589\u5499\u4e0a\u6253\u4e2a\u6d1e\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u7684\u4ee3\u4ef7\u3002\u6700\u540e\u4e00\u6279\u94c1\u80ba\u662f\u572860\u5e74\u4ee3\u672b\u5236\u9020\u7684\u3002\n\u7136\u800c\uff0c\u5f53\u6b63\u538b\u547c\u5438\u673a\u88ab\u5e7f\u6cdb\u4f7f\u7528\u65f6\uff0c\u4fdd\u7f57\u5df2\u7ecf\u4e60\u60ef\u4e86\u5728\u4ed6\u7684\u80ba\u91cc\u751f\u6d3b\uff0c\u800c\u4e14\u4ed6\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5728\u6ca1\u6709\u5b83\u7684\u60c5\u51b5\u4e0b\u90e8\u5206\u65f6\u95f4\u547c\u5438\u3002\u4ed6\u4e5f\u518d\u4e5f\u4e0d\u60f3\u5589\u5499\u4e0a\u6709\u6d1e\u4e86\u3002\u6240\u4ee5\u4ed6\u4fdd\u7559\u4e86\u4ed6\u7684\u94c1\u80ba\u3002\n\u968f\u7740\u75be\u75c5\u7684\u51cf\u5c11\uff0c\u4ee5\u53ca\u9690\u85cf\u5728\u5c11\u6570\u5bb6\u5ead\u548c\u62a4\u7406\u8bbe\u65bd\u4e2d\u7684\u89c6\u89c9\u63d0\u9192\uff0c\u5728\u897f\u65b9\u4e16\u754c\u7684\u5927\u90e8\u5206\u5730\u533a\uff0c\u5bf9\u810a\u9ad3\u7070\u8d28\u708e\u7684\u6050\u60e7\u4ece\u96c6\u4f53\u8bb0\u5fc6\u4e2d\u6d88\u5931\u4e86\u3002\u201c\u4f60\u4e0d\u6562\u76f8\u4fe1\u6709\u591a\u5c11\u4eba\u8d70\u8fdb\u6211\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\uff0c\u201d\u4fdd\u7f57\u8bf4\uff0c\u201c\u770b\u5230\u6211\u7684\u94c1\u80ba\u5c31\u8bf4\uff1a\u2018\u90a3\u662f\u4ec0\u4e48\uff1f\u2019\u6211\u4f1a\u544a\u8bc9\u4ed6\u4eec\uff1a\u2018\u8fd9\u662f\u4e00\u6761\u94c1\u80ba\u3002\u2019\u201c\u4ec0\u4e48\u80fd\u505a\u5f97\u5230\u5462\uff1f\u201d\n\u5f53\u6211\u53bb\u514b\u83b1\u95e8\u8328\u533b\u9662\u770b\u671b\u4fdd\u7f57\u65f6\uff0c\u4ed6\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4f4d\u533b\u5b66\u754c\u7684\u540d\u4eba--\u533b\u9662\u7684\u6240\u6709\u5de5\u4f5c\u4eba\u5458\u4ee5\u524d\u90fd\u6ca1\u6709\u89c1\u8fc7\u94c1\u80ba\u3002\u5c31\u5728\u6211\u4eec\u8c08\u8bdd\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u7a7f\u7740\u62a4\u58eb\u624b\u672f\u670d\u7684\u5973\u4eba\u8d70\u4e86\u8fdb\u6765\u3002\u4ed6\u4eec\u8bf4\uff0c\u4ed6\u4eec\u662f\u4ece\u53e6\u4e00\u4e2a\u5355\u4f4d\u6765\u7684\uff0c\u4f46\u4ed6\u4eec\u53ea\u662f\u60f3\u89c1\u89c1\u90a3\u4e2a\u94c1\u80ba\u91cc\u7684\u4eba\u3002\u4fdd\u7f57\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u6b63\u5728\u9762\u8bd5\u3002\u201c\u6ca1\u5173\u7cfb\uff0c\u5148\u751f\uff0c\u201d\u5e74\u957f\u7684\u62a4\u58eb\u8bf4\uff0c\u201c\u6211\u4eec\u5c31\u542c\u4e00\u4f1a\u513f\u5427\u3002\u201d\u4ed6\u4eec\u8d70\u540e\uff0c\u4fdd\u7f57\u544a\u8bc9\u6211\u8fd9\u79cd\u4e8b\u7ecf\u5e38\u53d1\u751f\u3002\u201c\u4e8b\u60c5\u5c31\u662f\u8fd9\u6837--\u5c31\u50cf\u4f4f\u5728\u52a8\u7269\u56ed\u91cc\u4e00\u6837\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4eba\u4eec\u89c1\u5230\u4fdd\u7f57\u540e\u5e38\u5e38\u8c26\u5351\u5730\u79bb\u5f00\u3002\u8bfa\u66fc\u00b7\u5e03\u6717\u662f\u4e00\u540d\u9000\u4f11\u62a4\u58eb\uff0c\u81ea1971\u5e74\u4ee5\u6765\u4e00\u76f4\u662f\u4fdd\u7f57\u7684\u597d\u670b\u53cb\uff0c\u4ed6\u8bf4\uff1a\u201c\u8fd9\u5bb6\u4f19\u662f\u4e00\u4e2a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u89d2\u8272\u2026\u3002\u5927\u591a\u6570\u4eba\u7b2c\u4e00\u6b21\u89c1\u5230\u4ed6\u65f6\u90fd\u5fc3\u5b58\u656c\u754f\u3002\u201c\u3002\u4fdd\u7f57\u4e0d\u4ecb\u610f\u56de\u7b54\u4eba\u4eec\u7684\u95ee\u9898\uff1a\u201c\u6211\u662f\u5f8b\u5e08\uff0c\u6211\u662f\u82b1\u94b1\u8bf7\u4eba\u8bf4\u8bdd\u7684\uff01\u201d\u4ed6\u559c\u6b22\u8c08\u8bba\u810a\u9ad3\u7070\u8d28\u708e\u548c\u80ba\uff0c\u4ee5\u53ca\u4ed6\u7684\u751f\u6d3b\uff0c\u56e0\u4e3a\u6bd4\u65b0\u51a0\u80ba\u708e\u7684\u53ef\u80fd\u6027\u66f4\u53ef\u6015\u7684\u662f\uff0c\u4e16\u754c\u4f1a\u5fd8\u8bb0\u810a\u9ad3\u7070\u8d28\u708e\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u4ee5\u53ca\u4ed6\u5c3d\u7ba1\u8fd9\u6837\u505a\u53d6\u5f97\u4e86\u4ec0\u4e48\u6210\u5c31\u3002\n1953\u5e74\u5e73\u5b89\u591c\uff0c\u4fdd\u7f57\u4f4f\u8fdb\u5e15\u514b\u5170\u533b\u9662\u4e00\u5e74\u534a\u540e\uff0c\u4ed6\u7684\u7236\u6bcd\u79df\u4e86\u4e00\u53f0\u4fbf\u643a\u5f0f\u53d1\u7535\u673a\u548c\u4e00\u8f86\u5361\u8f66\u628a\u4ed6\u548c\u4ed6\u7684\u94c1\u80ba\u9001\u56de\u5bb6\u3002\u8fd9\u662f\u4e00\u6b21\u77ed\u6682\u7684\u3001\u4ee4\u4eba\u4f24\u8111\u7b4b\u7684\u9a7e\u9a76\uff1a\u201c\u770b\u8d77\u6765\u90a3\u53f0\u65e7\u53d1\u7535\u673a\u968f\u65f6\u90fd\u4f1a\u7206\u70b8\uff0c\u201d\u4ed6\u7684\u7236\u4eb2\u683c\u65af\u540e\u6765\u544a\u8bc9\u5fb7\u514b\u8428\u65af\u5dde\u7684\u4e00\u5bb6\u62a5\u7eb8\u3002\u201c\u5b83\u4e00\u76f4\u5728\u7830\u7684\u4e00\u58f0\u54cd\u3002\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u80fd\u4e0d\u80fd\u56de\u5bb6\u3002\u201c\u3002\u4fdd\u7f57\u83b7\u51c6\u51fa\u9662\u7684\u90e8\u5206\u539f\u56e0\u662f\u6ca1\u6709\u4eba\u6307\u671b\u4ed6\u80fd\u6d3b\u5f88\u4e45\u3002\n\u4f46\u662f\u4fdd\u7f57\u6ca1\u6709\u6b7b\u3002\u4ed6\u4f53\u91cd\u589e\u52a0\u4e86\uff1b\u56de\u5230\u5bb6\u7684\u90a3\u5929\uff0c\u4ed6\u7684\u54e5\u54e5\u7ed9\u4ed6\u505a\u4e86\u4e00\u76d8\u57f9\u6839-\u4ed6\u8bf4\u8fd9\u662f\u4ed6\u5403\u8fc7\u7684\u6700\u597d\u5403\u7684\u4e00\u76d8\u3002\u4ed6\u7684\u7236\u6bcd\u548c\u4ed6\u4e00\u8d77\u7761\u5728\u4e00\u697c\u7684\u8d77\u5c45\u5ba4\u91cc\uff0c\u603b\u662f\u534a\u9192\u7740\uff0c\u4ee5\u9632\u673a\u5668\u7684\u560e\u560e\u4f5c\u54cd\u505c\u6b62\u3002\u5728\u505c\u7535\u671f\u95f4\u5c31\u662f\u8fd9\u6837-\u5373\u4f7f\u662f\u4eca\u5929\uff0c\u5fb7\u514b\u8428\u65af\u7684\u66b4\u98ce\u96e8\u548c\u9f99\u5377\u98ce\u6709\u65f6\u4e5f\u4f1a\u6467\u6bc1\u7535\u7ebf-\u4ed6\u7684\u7236\u6bcd\u4e0d\u5f97\u4e0d\u7528\u624b\u62bd\u673a\u5668\uff0c\u53eb\u90bb\u5c45\u6765\u5e2e\u5fd9\u3002\n\u4e09\u5e74\u540e\uff0c\u4fdd\u7f57\u53ef\u4ee5\u4e00\u6b21\u79bb\u5f00\u4ed6\u7684\u80ba\u51e0\u4e2a\u5c0f\u65f6\u3002\u4ed6\u544a\u8bc9\u6211\uff0c\u4ed6\u7684\u9752\u86d9\u547c\u5438\u5df2\u7ecf\u53d8\u6210\u4e86\u808c\u8089\u8bb0\u5fc6\uff0c\u5c31\u50cf\u9a91\u81ea\u884c\u8f66\u4e00\u6837\u3002\u5728\u75c5\u623f\u768418\u4e2a\u6708\u91cc\uff0c\u4ed6\u7684\u6559\u80b2\u7559\u7ed9\u4e86\u65b9\u6b63\u3002\u6709\u4e00\u5929\uff0c\u4ed6\u7684\u6bcd\u4eb2\u5e26\u7740\u4e00\u5806\u4ece\u5f53\u5730\u5c0f\u5b66\u501f\u6765\u7684\u4e66\u8d70\u4e86\u8fdb\u6765\uff1a\u5979\u8981\u6559\u4ed6\u8bfb\u4e66\u3002\n\u201c\u6211\u6709\u6240\u6709\u8fd9\u4e9b\u96c4\u5fc3\u58ee\u5fd7\u3002\u6211\u672c\u6765\u8981\u5f53\u603b\u7edf\u7684\uff0c\u201c\u4ed6\u8bf4\u3002\u4f46\u4ed6\u7684\u7236\u6bcd\u548c\u5176\u4ed6\u51e0\u540d\u6b8b\u75be\u513f\u7ae5\u7684\u7236\u6bcd\u82b1\u4e86\u4e00\u5e74\u591a\u7684\u65f6\u95f4\u624d\u8bf4\u670d\u8fbe\u62c9\u65af\u7684\u5b66\u6821\u7cfb\u7edf\u5141\u8bb8\u4ed6\u5728\u5bb6\u4e0a\u8bfe\u30021959\u5e74\uff0c\u5f53\u4ed613\u5c81\u7684\u65f6\u5019\uff0c\u4fdd\u7f57\u662f\u7b2c\u4e00\u6279\u62a5\u540d\u53c2\u52a0\u8be5\u5b66\u533a\u65b0\u7684\u5728\u5bb6\u513f\u7ae5\u9879\u76ee\u7684\u5b66\u751f\u4e4b\u4e00\u3002\u201c\u6211\u77e5\u9053\uff0c\u5982\u679c\u6211\u8981\u7528\u6211\u7684\u751f\u547d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u90a3\u5c31\u5fc5\u987b\u662f\u4e00\u4ef6\u7cbe\u795e\u4e0a\u7684\u4e8b\u60c5\u3002\u6211\u4e0d\u60f3\u6210\u4e3a\u4e00\u540d\u7bee\u7403\u8fd0\u52a8\u5458\uff0c\u201c\u4ed6\u544a\u8bc9\u6211\u3002\n\u5927\u591a\u6570\u65f6\u5019\uff0c\u4ed6\u4f1a\u5728\u5176\u4ed6\u5b69\u5b50\u653e\u5b66\u7684\u65f6\u5019\u79bb\u5f00\u80ba\uff0c\u5750\u5728\u5916\u9762\u7684\u8f6e\u6905\u4e0a\u3002\u670b\u53cb\u4eec\u4f1a\u63a8\u7740\u4ed6\u5728\u8857\u4e0a\u8f6c\u60a0\uff1b\u540e\u6765\uff0c\u968f\u7740\u4ed6\u4eec\u5e74\u9f84\u7684\u589e\u957f\uff0c\u8fd9\u4e9b\u670b\u53cb\u5e26\u4ed6\u53bb\u4e86\u9910\u9986\u548c\u7535\u5f71\u9662\uff0c\u7136\u540e\u662f\u9910\u9986\u548c\u9152\u5427\u3002\n\u4ed6\u53bb\u4e86\u6559\u5802\u3002\u4e9a\u5386\u5c71\u5927\u4e00\u5bb6\u6240\u5c5e\u7684\u4e94\u65ec\u8282\u6559\u662f\u4e00\u4e2a\u6559\u6d3e\uff0c\u5176\u7279\u70b9\u662f\n..", "note_en": "The summer of 1952 was hot, even by Texas standards: 25 days above 100F (38C), the \u201ccool\u201d days not much cooler. But across the state, swimming pools were shut. Cinemas, too, and bars and bowling alleys. Church services were suspended. Cities doused their streets with DDT insecticide; by now, health officials knew that mosquitoes didn\u2019t spread the disease, but they had to be seen to be doing something. Nothing seemed to work. As the summer wore on, the numbers of polio cases grew.\n One day in July, in a quiet Dallas suburb, a six-year-old boy named Paul Alexander was playing outside in the summer rain. He didn\u2019t feel well \u2013 his neck hurt, his head pounded. Leaving his muddy shoes in the yard, he walked barefoot into the kitchen, letting the screen door slam behind him. When his mother looked up at his feverish face, she gasped. She made him run out and grab his shoes, then ordered him to bed.\n Paul spent the first day in his parents\u2019 bed, filling in Roy Rogers colouring books. But even as his fever soared and aching pains blossomed in his limbs, the family doctor advised his parents not to take him to hospital. It was clear that he had polio, but there were just too many patients there, the doctor said. Paul had a better chance of recovering at home.\n Over the next few days, the boy\u2019s condition worsened. Five days after he had walked into the kitchen barefoot, Paul could no longer hold a crayon, speak, swallow or cough. His parents rushed him to Parkland hospital. Though the staff were well trained and there was a dedicated polio ward, the hospital was overwhelmed. There were sick children everywhere, and nowhere to treat them all. Paul\u2019s mother held him in her arms and waited.\n When the boy was finally seen by a doctor, his mother was told that there was nothing to be done for him. Paul was left on a gurney in a hallway, barely breathing. He would have died had another doctor not decided to examine him again. This second doctor picked him up, ran with him to the operating theatre and performed an emergency tracheotomy to suction out the congestion in his lungs that his paralysed body couldn\u2019t shift.\n Three days later, Paul woke up. His body was encased in a machine that wheezed and sighed. He couldn\u2019t move. He couldn\u2019t speak. He couldn\u2019t cough. He couldn\u2019t see through the fogged windows of the steam tent \u2013 a vinyl hood that kept the air around his head moist and the mucus in his lungs loose. He thought he was dead.\n When the tent was eventually removed, all he could see were the heads of other children, their bodies encased in metal canisters, nurses in starched white uniforms and caps floating between them. \u201cAs far as you can see, rows and rows of iron lungs. Full of children,\u201d he recalled recently.\n  The next 18 months were torture. Although he couldn\u2019t talk because of the tracheotomy, he could hear the cries of other children in pain. He lay for hours in his own waste because he couldn\u2019t tell the staff he needed to be cleaned. He nearly drowned in his own mucus. His parents visited almost every day, but his existence was unrelentingly boring. He and the other children tried to communicate, making faces at each other, but, Paul said: \u201cEvery time I\u2019d make a friend, they\u2019d die.\u201d\n Paul recovered from the initial infection, but polio left him almost completely paralysed from the neck down. What his diaphragm could no longer do for him, the iron lung did. Paul lay flat on his back, his head resting on a pillow and his body encased in the metal cylinder from the neck down. Air was sucked out of the cylinder by a set of leather bellows powered by a motor; the negative pressure created by the vacuum forced his lungs to expand. When the air was pumped back in, the change in pressure gently deflated his lungs. This was the regular hiss and sigh that kept Paul alive. He could not leave the lung. When medical staff opened it to wash him or manage his bodily functions, he had to hold his breath.\n What Paul remembers most vividly about the ward is hearing the doctors talk about him when they walked through on their rounds. \u201cHe\u2019s going to die today,\u201d they said. \u201cHe shouldn\u2019t be alive.\u201d It made him furious. It made him want to live.\n  In 1954, when Paul was eight, his mother got a call from a physical therapist who worked with the March of Dimes, a US charity dedicated to eradicating polio. Paul\u2019s months on the polio ward had left him with a fear of doctors and nurses, but his mother reassured him, and so the therapist, Mrs Sullivan, began visiting twice a week.\n Paul told the therapist about the times he had been forced by doctors to try to breathe without the lung, how he had turned blue and passed out. He also told her about the time he had gulped and \u201cswallowed\u201d some air, almost like breathing. The technique had a technical name, \u201cglossopharyngeal breathing\u201d. You trap air in your mouth and throat cavity by flattening the tongue and opening the throat, as if you\u2019re saying \u201cahh\u201d for the doctor. With your mouth closed, the throat muscle pushes the air down past the vocal cords and into the lungs. Paul called it \u201cfrog-breathing\u201d.\n  Sullivan made a deal with her patient. If he could frog-breathe without the iron lung for three minutes, she\u2019d give him a puppy. It took Paul a year to learn to do it, but he got his puppy; he called her Ginger. And though he had to think about every breath, he got better at it. Once he could breathe reliably for long enough, he could get out of the lung for short periods of time, first out on the porch, and then into the yard.\n Although he still needed to sleep in the iron lung every night \u2013 he couldn\u2019t breathe when he was unconscious \u2013 Paul didn\u2019t stop at the yard. At 21, he became the first person to graduate from a Dallas high school without physically attending a class. He got into Southern Methodist University in Dallas, after repeated rejections by the university administration, then into law school at the University of Texas at Austin. For decades, Paul was a lawyer in Dallas and Fort Worth, representing clients in court in a three-piece suit and a modified wheelchair that held his paralysed body upright.\n At a time when disabled people were less often seen in public \u2013 the Americans With Disabilities Act, which banned discrimination, wouldn\u2019t be passed until 1990 \u2013 Paul was visible. Over the course of his life, he has been on planes and to strip clubs, seen the ocean, prayed in church, fallen in love, lived alone and staged a sit-in for disability rights. He is charming, friendly, talkative, quick to anger and quick to make a joke.\n At 74, he is once again confined to the lung full-time. Only one other person in the US still uses one. The last person to use an iron lung in the UK died in December 2017, at the age of 75. No one expected someone who needed an iron lung to live this long. And after surviving one deadly epidemic, Paul did not expect to find himself threatened by another.\n  Poliomyelitis kills by suffocation \u2013 not by damaging the lungs, as Covid-19 does, but by attacking motor neurons in the spinal cord, weakening or severing communication between the central nervous system and the muscles. The ensuing paralysis means that the muscles that make it possible to breathe no longer work.\n Polio existed in isolated outbreaks around the world for millennia, but it didn\u2019t become epidemic until the 20th century \u2013 helped, ironically, by improvements in sanitation. Poliovirus enters the body through the mouth, via food or water, or unwashed hands, contaminated with infected faecal matter. Until the 19th century, almost all children would have come in contact with poliovirus before the age of one, while they still enjoyed protection from maternal antibodies transferred from mother to baby during pregnancy. However, as sanitation improved, children were less likely to come into contact with poliovirus as babies; when they encountered it as older children, their immune systems were unprepared.\n In the US, from 1916 onwards, each summer brought an epidemic of polio in some part of the nation. At its peak in the 40s and 50s, the virus was responsible for more than 15,000 cases of paralysis in the US each year. During this same period, it killed or paralysed at least 600,000 people annually worldwide. The year Paul contracted the virus, 1952, saw the largest single outbreak of polio in US history: almost 58,000 cases across the nation. Of those, more than 21,000 people \u2013 mostly children \u2013 were left with varying degrees of disability, and 3,145 died.\n  Though polio was not the most lethal of epidemic diseases, it transformed everywhere it touched. \u201cIt was like the plague, it drove everybody mad,\u201d Paul told me when I first spoke to him last year. In places where outbreaks occurred, families sheltered in fear at home with the windows shut. All kinds of public gathering places closed. Human interactions were laced with uncertainty. According to the historian David Oshinsky, some people refused to talk on the phone out of concern that the virus could be transmitted down the line. During the first major outbreak in New York in 1916, 72,000 cats and 8,000 dogs were killed in one month after a rumour went around that animals transmitted the disease (they don\u2019t). By the 40s, parents had their children perform \u201cpolio tests\u201d every day during the summer \u2013 touch their toes, tuck their chin to their chests, checking for pain or weakness \u2013 while insurance companies sold \u201cpolio insurance\u201d to parents of new babies.\n Before the arrival of a vaccine in 1955, what made polio so terrifying was that there was no way of predicting who would walk away from an infection with a headache, and who would never walk again. In most cases, the disease had no discernible effect. Of the 30% or so who showed symptoms, most experienced only minor illness. But a small proportion, 4-5%, exhibited serious symptoms, including extreme muscular pain, high fever and delirium. As the virus hacked its way through the neural tissue of the spinal cord, a few of those infected were paralysed; this progression of the virus was known as paralytic polio. Roughly 5-10% of patients who caught paralytic polio died, although this number was far higher in the days before widespread use of the iron lung.\n If we had forgotten the terror of epidemics, we are now being forcibly reminded. The last time I spoke to Paul, in April, it was over Skype, from our respective lockdowns \u2013 him in his iron lung in an apartment in Dallas, with a rotating staff of full-time carers and an Amazon Echo next to his head, and me in my house in Surrey, England.\n Like polio, Covid-19 can be transmitted by silent carriers who don\u2019t know they have it. Like polio, it has put normal life on hold. And just as with polio, we are pinning our hopes on a vaccine. There is even talk of bringing back the iron lung \u2013 a UK-based  initiative is trying to bring a new negative-pressure ventilator called Exovent to hospitals for Covid-19 patients. Unlike positive-pressure ventilators, this smaller iron lung would fit over the patient\u2019s chest, allowing them to remain conscious, speak, eat and take medication orally as a machine breathes for them.\n \u201cIt\u2019s exactly the way it was, it\u2019s almost freaky to me,\u201d Paul said of the parallels between polio and Covid-19. \u201cIt scares me.\u201d\n  Though this virus, if he gets it, will likely kill him, life hasn\u2019t changed dramatically for Paul since the start of the pandemic. He hasn\u2019t been able to venture outside of his lung for more than five minutes in years. As one of his friends told me: \u201cIt\u2019s not a strain for him, it\u2019s his life. This is Mr Shelter-in-Place.\u201d I asked Paul if he is worried about Covid-19. \u201cSure, sure,\u201d he said. Then he added: \u201cWell \u2013 I don\u2019t sit around and worry about it. I\u2019m dying a lot. It doesn\u2019t make any difference.\u201d\n Paul\u2019s health has always been precarious, but it has declined in the past few years. When I first met him in May 2019, he was a long-term inpatient at Clements Hospital in north Dallas. More than four months earlier, he had developed a persistent respiratory infection, which had sent him to hospital. He also suffers pain in his legs every time he is moved. He had hoped the doctors could help him manage that pain, but, he told me, \u201cIt\u2019s not about to go away,\u201d looking up from a pillow on a wide board attached to one end of the lung. His voice is slow, raspy and sometimes punctuated by gasps. Hearing Paul over the machine\u2019s constant sighs requires the listener to focus on him and tune out the lung; accordingly, he is used to being listened to.\n Next to Paul\u2019s head was a clear plastic stick, flat and about a foot long, with a pen attached to the end of it. His father crafted a stick like this when Paul was a child, and he has been using versions of it since. He clamps the end of the stick in his mouth and manipulates the pen to write, type and push buttons on the phone; he used it to sign the hospital\u2019s waiver allowing him to talk to me, although he bristled at having to sign anything at all to tell me his own story. \u201cThat is the most ridiculous thing,\u201d he grumbled. Paul\u2019s teeth are flattened and worn from years of using the stick. Though his body inside the lung is scarcely larger than it was when he was a child and his muscles atrophied, his neck measures 18 inches around and his jaw muscles bulge.\n Paul\u2019s iron lung \u2013 his faithful \u201cold iron horse\u201d as he calls it \u2013 is the butter-yellow colour of 50s kitchen appliances. Its metal legs, ending in black rubber wheels, raise it to a height that suits a caregiver, while windows at the top allow them to see inside, and four portholes on the sides let them reach in. To open the machine, which weighs almost 300kg, carers must release the seals at the head and slide the user out on the interior bed. The portholes, the pressure valves, the cylindrical shape and the colour all give the impression of a sturdy miniature submarine.\n  Iron lungs were built to last, even if no one thought the people in them would. The device was invented in 1928 by Philip Drinker, a medical engineer, and Louis Shaw, a physiologist, at Harvard. Drinker had visited Boston Children\u2019s Hospital to investigate a malfunctioning air conditioner in the ward for premature babies, but he came away haunted what he saw in the polio ward \u2013 \u201cthe small blue faces, the terrible gasping for air\u201d, as his sister and biographer, Catherine Drinker Bowen, later wrote. His invention was a simple mechanism, doing the job of depleted muscles, and it meant that thousands of children who would have died didn\u2019t. The iron lung was intended to be used for two weeks at most, to give the body a chance to recover.\n Over time, the claustrophobic iron lung became emblematic of the devastating effects of polio. Only the sickest patients ended up in one; if they made it out, a lifetime of disability was likely to follow. But once the vaccine was administered to children across the US from 1955, incidence of the disease plummeted. Those who needed short-term breathing assistance were treated by more invasive but much smaller positive-pressure ventilators, invented in 1952 by an anaesthetist during a polio outbreak in Copenhagen. These push air directly into and out of the lungs either through the mouth, via a tube that is snaked down the throat while the patient is sedated, or through a hole made in the trachea. These, like the iron lung, were only intended for short-term use; those few people who needed help breathing for the rest of their lives saw a hole in their throat as an acceptable price to pay for the increased mobility that positive pressure offered. The last iron lungs were manufactured in the late 60s.\n By the time positive-pressure ventilators were in widespread use, however, Paul was used to living in his lung, and he had already learned to breathe part of the time without it. He also never wanted a hole in his throat again. So he kept his iron lung.\n With the decline of the disease, and the visual reminders of it hidden away in a handful of homes and care facilities, across much of the western world the terror of polio faded from collective memory. \u201cYou can\u2019t believe how many people walked into my law office,\u201d Paul said, \u201cand saw my iron lung and said: \u2018What is that?\u2019 And I\u2019d tell them: \u2018It\u2019s an iron lung.\u2019 \u2018What does it do?\u2019 \u2018Breathe for me.\u2019 \u2018Why?\u2019 \u2018I got polio when I was little.\u2019 \u2018What\u2019s polio?\u2019 Uh oh.\u201d David Oshinsky, the author of Polio: An American Story, believes that the success of vaccines in eradicating so many deadly diseases is precisely why the  anti-vaxx  movement has gained ground in recent years. \u201cThese vaccines have done away with the evidence of how frightening these diseases were,\u201d he told me.\n When I visited him at Clements Hospital, Paul seemed like a kind of medical celebrity \u2013 none of the hospital staff had ever seen an iron lung before. As we talked, two women in nurses\u2019 scrubs came in. They were from another unit, but they just wanted to meet the man in the iron lung, they said. Paul told them that he was in the middle of an interview. \u201cThat\u2019s all right, sir,\u201d the older nurse said, \u201cwe\u2019ll just listen for a bit.\u201d After they left, Paul told me this happens all the time. \u201cThat\u2019s the way it is \u2013 like living in a zoo,\u201d he said.\n People often come away from meeting Paul humbled. Norman Brown, a retired nurse who has been good friends with Paul since 1971, said: \u201cThe guy is such an impressive character \u2026 most people are in awe when they first meet him.\u201d Paul doesn\u2019t mind answering people\u2019s questions: \u201cI\u2019m a lawyer, I\u2019m paid to talk!\u201d He likes talking about polio and the lung, and about his life, because what terrifies him, even more than the possibility of Covid-19, is that the world will forget what polio was like, and what he achieved in spite of it.\n  On Christmas Eve 1953, a year and a half after Paul was admitted to Parkland Hospital, his parents rented a portable generator and a truck to bring him and his iron lung home. It was a short, nerve-racking drive: \u201cAny minute it looked like that old generator would go off,\u201d his father Gus later told a Texas newspaper. \u201cIt kept popping. I didn\u2019t know if we would make it home or not.\u201d Part of the reason Paul was cleared to leave the hospital was that no one expected him to live much longer.\n But Paul didn\u2019t die. He gained weight; the day he got home, his older brother made him a plate of bacon \u2013 the best he\u2019d ever tasted, he said. His parents slept in the same ground-floor living room with him, always half-awake in case the swish-swish of the machine stopped. It did during power cuts \u2013 even today, Texan storms and tornadoes sometimes knock down power lines \u2013 and his parents had to pump the machine by hand, calling neighbours in to help.\n After three years, Paul could leave his lung for a few hours at a time. His frog-breathing had become muscle memory \u2013 like riding a bicycle, he told me. His education had been left to founder during his 18 months on the ward. One day, his mother walked in with a pile of books borrowed from the local elementary school: she was going to teach him to read.\n  \u201cI had all these ambitions. I was going to be president,\u201d he said. But it took his parents, along with the parents of several other disabled children, more than a year to convince the Dallas school system to allow him to take classes from home. In 1959, when he was 13, Paul was one of the first students to enrol in the district\u2019s new programme for children at home. \u201cI knew if I was going to do anything with my life, it was going to have to be a mental thing. I wasn\u2019t going to be a basketball player,\u201d he told me.\n Most days, he would leave the lung around the time other children got out of school, and sit out front in his wheelchair. Friends would push him around the streets; later, as they got older, the same friends took him to diners and cinemas, then restaurants and bars.\n And he went to church. The Pentecostal church, to which the Alexanders belong, is a denomination characterised by \n......", "posttime": "2020-05-28 08:20:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u94c1\u80ba,iron,\u810a\u9ad3\u7070\u8d28\u708e", "title": "\u94c1\u80ba\u91cc\u7684\u4eba", "title_en": "A Man in the Iron Lung", "transed": 1, "url": "https://www.theguardian.com/society/2020/may/26/last-iron-lung-paul-alexander-polio-coronavirus", "via": "", "real_tags": ["\u94c1\u80ba", "iron", "\u810a\u9ad3\u7070\u8d28\u708e"]}, {"category": "", "categoryclass": "", "imagename": "7d6ec9c22e2a3b96cb40a8cb0026429e.jpg", "infoid": 1004005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ESET\u7684\u5b89\u5168\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u7531Turla\u5b9e\u65bd\u7684\u65b0\u653b\u51fb\uff0cTurla\u662f\u4fc4\u7f57\u65af\u6700\u5148\u8fdb\u7684\u56fd\u5bb6\u652f\u6301\u7684\u9ed1\u5ba2\u7ec4\u7ec7\u4e4b\u4e00\u3002\n\u65b0\u7684\u88ad\u51fb\u53d1\u751f\u57282020\u5e741\u6708\u3002ESET\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u88ad\u51fb\u7684\u76ee\u6807\u662f\u4e09\u4e2a\u5907\u53d7\u77a9\u76ee\u7684\u5b9e\u4f53\uff0c\u5982\u9ad8\u52a0\u7d22\u7684\u56fd\u5bb6\u8bae\u4f1a\u548c\u4e1c\u6b27\u7684\u4e24\u4e2a\u5916\u4ea4\u90e8\u3002\u7531\u4e8e\u56fd\u5bb6\u5b89\u5168\u539f\u56e0\uff0c\u65e0\u6cd5\u70b9\u540d\u8bc6\u522b\u76ee\u6807\u3002\n\u8fd9\u4e9b\u5165\u4fb5\u662f\u4e00\u957f\u4e32\u53d7\u5bb3\u8005\u540d\u5355\u4e2d\u7684\u6700\u65b0\u4e00\u4f8b\uff0c\u5176\u4e2d\u5927\u591a\u6570\u5305\u62ec\u5916\u4ea4\u548c\u519b\u4e8b\u5b9e\u4f53\u3002\u8fd9\u4efd\u6e05\u5355\u59cb\u4e8e2000\u5e74\u4ee3\u4e2d\u671f\u7684\u4e94\u89d2\u5927\u697c\uff0c\u591a\u5e74\u6765\u4e00\u76f4\u6301\u7eed\u5230\u6b27\u6d32\u3001\u4e2d\u4e1c\u3001\u4e9a\u6d32\u548c\u975e\u6d32\u7684\u76ee\u6807\u3002\n\u7136\u800c\uff0c2020\u5e741\u6708\u7684\u653b\u51fb\u4e4b\u6240\u4ee5\u8131\u9896\u800c\u51fa\uff0c\u662f\u56e0\u4e3a\u90e8\u7f72\u4e86\u66f4\u65b0\u7248\u672c\u7684Comrat\u6076\u610f\u8f6f\u4ef6\uff0cESET\u8868\u793a\uff0c\u8be5\u8f6f\u4ef6\u5305\u542b\u4e86\u4e00\u4e9b\u76f8\u5f53\u806a\u660e\u7684\u65b0\u529f\u80fd\u3002\nComrat\u6076\u610f\u8f6f\u4ef6\uff0c\u4e5f\u88ab\u79f0\u4e3aAgent.BTZ\uff0c\u662fTurla\u6700\u53e4\u8001\u7684\u6b66\u5668\u4e4b\u4e00\uff0c\u4e5f\u662f\u4ed6\u4eec\u57282008\u5e74\u7528\u6765\u4ece\u4e94\u89d2\u5927\u697c\u7f51\u7edc\u4e2d\u8679\u5438\u6570\u636e\u7684\u5de5\u5177\u3002\n\u8be5\u5de5\u5177\u591a\u5e74\u6765\u7ecf\u5386\u4e86\u51e0\u6b21\u66f4\u65b0\uff0c\u5206\u522b\u57282014\u5e74\u548c2017\u5e74\u53d1\u73b0\u4e86\u65b0\u7248\u672c\u3002\n\u6700\u65b0\u7684Comrat v4\u9996\u6b21\u51fa\u73b0\u57282017\u5e74\uff0c\u7136\u800c\uff0c\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\uff0cESET\u8868\u793a\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86Comrat v4\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u5176\u4e2d\u5305\u62ec\u4e24\u4e2a\u65b0\u529f\u80fd\uff0c\u6bd4\u5982\u80fd\u591f\u6e17\u51fa\u53cd\u75c5\u6bd2\u65e5\u5fd7\uff0c\u4ee5\u53ca\u80fd\u591f\u4f7f\u7528Gmail\u6536\u4ef6\u7bb1\u63a7\u5236\u6076\u610f\u8f6f\u4ef6\u3002\n\u8fd9\u4e9b\u529f\u80fd\u4e2d\u7684\u7b2c\u4e00\u4e2a\u662f\u6076\u610f\u8f6f\u4ef6\u4ece\u53d7\u611f\u67d3\u7684\u4e3b\u673a\u6536\u96c6\u9632\u75c5\u6bd2\u65e5\u5fd7\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u5176\u4e2d\u4e00\u4e2a\u547d\u4ee4\u548c\u63a7\u5236\u670d\u52a1\u5668\u7684\u80fd\u529b\u3002\n\u9ed1\u5ba2\u7ec4\u7ec7\u7684\u786e\u5207\u52a8\u673a\u4e00\u76f4\u4e0d\u6e05\u695a\uff0c\u4f46\u5206\u6790\u6076\u610f\u8f6f\u4ef6\u7684ESET\u7814\u7a76\u5458Matthieu Faou\u544a\u8bc9ZDNet\uff0cTurla\u64cd\u4f5c\u5458\u53ef\u80fd\u6b63\u5728\u6536\u96c6\u9632\u75c5\u6bd2\u65e5\u5fd7\uff0c\u4ee5\u4fbf\u8ba9\u4ed6\u4eec\u66f4\u597d\u5730\u4e86\u89e3\u662f\u5426\u68c0\u6d4b\u5230\u4e86\u6076\u610f\u8f6f\u4ef6\u6837\u672c\uff0c\u4ee5\u53ca\u68c0\u6d4b\u5230\u4e86\u54ea\u4e9b\u6076\u610f\u8f6f\u4ef6\u6837\u672c\u3002\n\u4eba\u4eec\u76f8\u4fe1\uff0c\u5982\u679cTurla\u64cd\u4f5c\u5458\u770b\u5230\u68c0\u6d4b\u5230\u7684\u4e1c\u897f\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u4ed6\u4eec\u7684\u6076\u610f\u8f6f\u4ef6\uff0c\u907f\u514d\u5c06\u6765\u5728\u5176\u4ed6\u7cfb\u7edf\u4e0a\u88ab\u68c0\u6d4b\u5230\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u88ab\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u64cd\u4f5c\u3002\nFaou\u8bf4\uff0c\u7a83\u53d6\u65e5\u5fd7\u7684\u6076\u610f\u8f6f\u4ef6\u5f88\u5e38\u89c1\uff0c\u4f46\u4e8b\u4ef6\u54cd\u5e94\u4eba\u5458\u603b\u662f\u5f88\u96be\u68c0\u6d4b\u5230\u8fd9\u79cd\u884c\u4e3a\u3002\n\u6cd5\u4e4c\u544a\u8bc9\u6211\u4eec\uff0c\u95ee\u9898\u662f\u901a\u5e38\u5f88\u96be\u786e\u5b9a\u653b\u51fb\u8005\u6cc4\u9732\u4e86\u54ea\u4e9b\u6587\u4ef6\u3002\u4f46\u5bf9\u4e8e\u76f8\u5bf9\u5148\u8fdb\u7684\u7fa4\u4f53\u6765\u8bf4\uff0c\u8bd5\u56fe\u4e86\u89e3\u4ed6\u4eec\u662f\u5426\u88ab\u53d1\u73b0\u6216\u662f\u5426\u7559\u4e0b\u75d5\u8ff9\u5e76\u4e0d\u5c11\u89c1\u3002\n\u4f46\u8fd9\u5e76\u4e0d\u662f\u6700\u65b0\u7684Comrat\u6076\u610f\u8f6f\u4ef6\u7248\u672c\u4e2d\u552f\u4e00\u7684\u91cd\u5927\u53d8\u5316\u3002Faou\u8bf4\uff0c\u6076\u610f\u8f6f\u4ef6\u73b0\u5728\u5305\u62ec\u7684\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e24\u4e2a\u547d\u4ee4\u548c\u63a7\u5236\u673a\u5236\u3002\n\u7b2c\u4e00\u79cd\u662f\u901a\u8fc7HTTP\u8054\u7cfb\u8fdc\u7a0b\u670d\u52a1\u5668\u5e76\u68c0\u7d22\u5728\u53d7\u611f\u67d3\u4e3b\u673a\u4e0a\u6267\u884c\u7684\u6307\u4ee4\u7684\u7ecf\u5178\u65b9\u6cd5\u3002\n\u7b2c\u4e8c\u4e2a\uff0c\u4e5f\u662f\u65b0\u7684\u4e00\u4e2a\uff0c\u662f\u4f7f\u7528Gmail\u7684\u7f51\u7edc\u754c\u9762\u3002Faou\u8bf4\uff0c\u6700\u65b0\u7684Comrat v4\u63a5\u7ba1\u4e86\u53d7\u5bb3\u8005\u7684\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0c\u52a0\u8f7d\u4e86\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684cookie\u6587\u4ef6\uff0c\u7136\u540e\u542f\u52a8\u4e86\u4e0eGmail Web\u4eea\u8868\u677f\u7684\u4f1a\u8bdd\u3002\n\u5728\u8fd9\u91cc\uff0c\u6076\u610f\u8f6f\u4ef6\u8bfb\u53d6\u6536\u4ef6\u7bb1\u4e2d\u7684\u6700\u65b0\u7535\u5b50\u90ae\u4ef6\uff0c\u4ece\u6536\u4ef6\u7bb1\u4e0b\u8f7d\u6587\u4ef6\u9644\u4ef6\uff0c\u7136\u540e\u8bfb\u53d6\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u8bf4\u660e\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u6bcf\u5f53Turla\u64cd\u4f5c\u5458\u60f3\u8981\u5411\u5728\u53d7\u611f\u67d3\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684Comrat\u5b9e\u4f8b\u53d1\u51fa\u65b0\u547d\u4ee4\u65f6\uff0c\u9ed1\u5ba2\u53ea\u9700\u5411Gmail\u5730\u5740\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u5373\u53ef\u3002\u6267\u884c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u53d1\u9001\u7684\u6307\u4ee4\u540e\u6536\u96c6\u7684\u6240\u6709\u6570\u636e\u90fd\u88ab\u53d1\u9001\u56deGmail\u6536\u4ef6\u7bb1\uff0c\u5e76\u91cd\u5b9a\u5411\u56deTurla\u64cd\u4f5c\u5458\u3002\nESET\u8bf4\uff0c\u5c3d\u7ba1\u6709\u65b0\u7684\u529f\u80fd\uff0cTurla\u8fd0\u8425\u5546\u4ecd\u7136\u50cf\u4ee5\u524d\u4e00\u6837\u4f7f\u7528Comrat\uff0c\u8fd9\u4e3b\u8981\u662f\u4f5c\u4e3a\u5df2\u7ecf\u611f\u67d3\u7684\u4e3b\u673a\u4e0a\u7684\u7b2c\u4e8c\u9636\u6bb5\u6709\u6548\u8f7d\u8377\u3002\u5728\u8fd9\u91cc\uff0cComrat\u7528\u4e8e\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u641c\u7d22\u7279\u5b9a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6570\u636e\u6e17\u900f\u5230\u8fdc\u7a0b\u70b9\uff0c\u901a\u5e38\u662fOneDrive\u62164Shared\u4e0a\u7684\u4e91\u6587\u4ef6\u5171\u4eab\u5e10\u6237\u3002\n\u4e24\u5468\u524d\uff0c\u5361\u5df4\u65af\u57fa\u8fd8\u53d1\u5e03\u4e86\u4e00\u4efd\u5173\u4e8e\u4e00\u4e9b\u8f83\u65e7\u7684Turla\u6076\u610f\u8f6f\u4ef6\u7684\u62a5\u544a\uff0c\u8be5\u8f6f\u4ef6\u6536\u5230\u4e86\u6f02\u4eae\u7684\u66f4\u65b0\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7248\u672c\u7684COMPFUN\u6076\u610f\u8f6f\u4ef6\uff0cTurla\u64cd\u4f5c\u5458\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u4f9d\u8d56HTTP\u72b6\u6001\u7801\u7684\u65b0\u9896\u4e14\u524d\u6240\u672a\u89c1\u7684\u7cfb\u7edf\u6765\u63a7\u5236\u8fd9\u79cd\u6076\u610f\u8f6f\u4ef6\u3002", "note_en": "Security researchers from ESET have discovered new attacks carried out by  Turla, one of Russia&#39;s most advanced state-sponsored hacking groups.\n The new attacks have taken place in January 2020. ESET researchers say the attacks targeted three high-profile entities, such as a national parliament in the Caucasus and two Ministries of Foreign Affairs in Eastern Europe. Targets could not be identified by name due to national security reasons.\n These intrusions represent the latest entries in a long list of victims, most of which include diplomatic and military entities. This list started in the mid-2000s with the Pentagon and has continued throughout the years with targets in Europe, the Middle East, Asia, and Africa.\n The January 2020 attacks, however, stood out due to the deployment of an updated version of the ComRAT malware, which ESET says contained some pretty clever new features.\n  The  ComRAT malware, also known as Agent.BTZ, is one of Turla&#39;s oldest weapons, and the one they  used to siphon data from the Pentagon&#39;s network in 2008.\n   The tool has seen several updates across the years, with new versions discovered in  2014 and  2017, respectively.\n  The latest version, known as ComRAT v4, was first seen in 2017, however, in a report published today, ESET says they&#39;ve spotted a variation of ComRAT v4 that includes two new features, such as the ability to exfiltrate antivirus logs and the ability to control the malware using a Gmail inbox.\n   The first of these features is the malware&#39;s ability to collect antivirus logs from an infected host and upload it to one of its command and control servers.\n The exact motives of a hacker group will always remain unclear, but Matthieu Faou, the ESET researcher who analyzed the malware, told  ZDNet that Turla operators might be collecting antivirus logs to &#34;allow them to better understand if and which one of their malware sample was detected.&#34;\n The belief is that if Turla operators see a detection, they can then tweak their malware and avoid future detections on other systems, where they can then operate undetected.\n Faou says that malware that steals logs is common, but it&#39;s always hard for incident responders to detect the behavior.\n &#34;The thing is that it is generally hard to determine what files were exfiltrated by the attackers,&#34; Faou told us. &#34;But for relatively advanced groups, it is not uncommon to try to understand if they are detected or if they leave traces behind them or not.&#34;\n  But this wasn&#39;t the only major change in the latest ComRAT malware version. Faou says that the malware now includes not one, but two command-and-control mechanisms.\n The first is the classic method of contacting a remote server via HTTP and retrieving instructions to execute on infected hosts.\n The second, and the new one, is the use of Gmail&#39;s web interface. Faou says that the latest ComRAT v4 takes over one of the victim&#39;s browsers, loads a predefined cookie file, and then initiates a session to the Gmail web dashboard.\n Here, the malware reads recent emails in the inbox, from where it downloads file attachments, and then reads the instructions contained within the file.\n The idea is that whenever Turla operators want to issue new commands to ComRAT instances running on infected hosts, the hackers merely have to send an email to the Gmail address. All data collected following the execution of instructions sent this way is sent back to the Gmail inbox, and redirected back to Turla operators.\n  ESET says that despite the new features, Turla operators continue to use ComRAT as they did before, which is primarily as a second-stage payload on already infected hosts. Here, ComRAT is used to search the filesystem for specific files, and then exfiltrate the data to a remote point, usually a cloud file sharing account on OneDrive or 4shared.\n  Two weeks ago, Kaspersky also published a report on some older Turla malware that received a nifty update. Researchers said they spotted a new version of the COMpfun malware, which Turla operators could control using a novel and never-before-seen system  that relied on HTTP status codes.", "posttime": "2020-05-28 08:05:46", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u75c5\u6bd2,hacker,\u6076\u610f\u8f6f\u4ef6", "title": "Turla Hacker Group\u7a83\u53d6\u9632\u75c5\u6bd2\u65e5\u5fd7\u4ee5\u67e5\u770b\u662f\u5426\u68c0\u6d4b\u5230\u5176\u6076\u610f\u8f6f\u4ef6", "title_en": "Turla Hacker Group Steals Antivirus Logs To See If Its Malware Was Detected", "transed": 1, "url": "https://www.zdnet.com/article/turla-hacker-group-steals-antivirus-logs-to-see-if-its-malware-was-detected/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u75c5\u6bd2", "hacker", "\u6076\u610f\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "5253dd6c43cd039d295da84a253dd826.jpg", "infoid": 1004004, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u5fae\u8f6f\u53d1\u5e03\u4e86Winget(\u4e0d\u8981\u4e0eAppGet\u6df7\u6dc6)\uff0c\u4f5c\u4e3a\u51762020\u7248\u672c\u58f0\u660e\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5929\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u6574\u7406\u6211\u7684\u60f3\u6cd5\uff0c\u5f04\u6e05\u695a\u8fc7\u53bb12\u4e2a\u6708\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\nTLDR\uff1b\u6211\u5c06\u4e0d\u518d\u5f00\u53d1AppGet\u3002\u5ba2\u6237\u7aef\u548c\u540e\u7aef\u670d\u52a1\u5c06\u7acb\u5373\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\uff0c\u76f4\u52302020\u5e748\u67081\u65e5\uff0c\u5c4a\u65f6\u5b83\u4eec\u5c06\u88ab\u6c38\u4e45\u5173\u95ed\u3002\n\u4e00\u5e74\u524d(2019\u5e747\u67083\u65e5)\uff0c\u6211\u6536\u5230\u4e00\u5c01\u6765\u81ea\u5fae\u8f6f\u9ad8\u7ea7\u7ecf\u7406\u5b89\u5fb7\u9c81\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\n\u6211\u8d1f\u8d23Windows\u5e94\u7528\u7a0b\u5e8f\u6a21\u578b\u5de5\u7a0b\u56e2\u961f\uff0c\u7279\u522b\u662f\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u56e2\u961f\u3002\u6211\u53ea\u60f3\u7ed9\u4f60\u4e00\u5f20\u7b80\u77ed\u7684\u4fbf\u6761\uff0c\u611f\u8c22\u4f60\u6784\u5efa\u4e86Appget-\u8fd9\u662f\u5bf9Windows\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8865\u5145\uff0c\u8ba9Windows\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u672a\u6765\u51e0\u5468\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u6e29\u54e5\u534e\u4e0e\u5176\u4ed6\u516c\u53f8\u4f1a\u9762\uff0c\u4f46\u5982\u679c\u60a8\u6709\u65f6\u95f4\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u4e0e\u60a8\u548c\u60a8\u7684\u56e2\u961f\u4f1a\u9762\uff0c\u542c\u53d6\u6709\u5173\u5982\u4f55\u8ba9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u5de5\u4f5c\u66f4\u8f7b\u677e\u7684\u53cd\u9988\u3002\n\u81ea\u7136\uff0c\u6211\u5f88\u5174\u594b\uff1b\u6211\u7684\u7231\u597d\u9879\u76ee\u88ab\u5fae\u8f6f\u6ce8\u610f\u5230\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u6211\u56de\u590d\u4e86\uff0c\u4e24\u4e2a\u6708\u540e\uff0c\u52a0\u4e0a\u51e0\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4eec\u7ec8\u4e8e\u8ba1\u5212\u4e8e8\u670820\u65e5\u5728\u5fae\u8f6f\u6e29\u54e5\u534e\u5f00\u4f1a\u3002\u4f1a\u8bae\u662f\u5728\u6211\u3001\u5b89\u5fb7\u9c81\u548c\u540c\u4e00\u4ea7\u54c1\u7ec4\u7684\u53e6\u4e00\u4f4d\u5de5\u7a0b\u7ecf\u7406\u4e4b\u95f4\u8fdb\u884c\u7684\u3002\u6211\u73a9\u5f97\u5f88\u5f00\u5fc3\uff1b\u6211\u4eec\u8c08\u8bba\u4e86AppGet\u80cc\u540e\u7684\u60f3\u6cd5\uff0c\u6211\u8ba4\u4e3a\u76ee\u524dWindows\u4e2d\u7684\u5305\u7ba1\u7406\u5668\u7cfb\u7edf\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4ee5\u53ca\u6211\u5bf9AppGet\u7684\u672a\u6765\u6709\u4ec0\u4e48\u8ba1\u5212\u3002\u6211\u4eec\u51fa\u53bb\u5403\u5348\u996d\uff0c\u804a\u4e86\u66f4\u591a\u5173\u4e8eAppGet\u3001Windows Phone\u548c\u5176\u4ed6\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u4f1a\u8bae\u7684\u7ed3\u679c\u662f\uff0c\u5fae\u8f6f\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u5e2e\u52a9\u6211\u4eec\uff1f\u6211\u63d0\u5230\u8fc7\u4e00\u4e9bAzure\u4fe1\u7528\u4f1a\u5f88\u597d\uff0c\u5f97\u5230\u4e00\u4e9b\u5173\u4e8e\u65b0\u7684MSIX\u5305\u5982\u4f55\u5de5\u4f5c\u7684\u6587\u6863\uff0c\u5982\u679c\u4ed6\u4eec\u80fd\u4fee\u590d\u6211\u5728\u4e0b\u8f7d\u94fe\u63a5\u4e0a\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u5f88\u9ad8\u5174\u89c1\u5230\u60a8\uff0c\u5e76\u4e86\u89e3\u66f4\u591a\u5173\u4e8eAppget\u7684\u60c5\u51b5\u3002\u6211\u6b63\u5728\u4e3a\u60a8\u8ddf\u8fdbAzure\u542f\u52a8\u5b9a\u4ef7\u3002\u5982\u4f60\u6240\u77e5\uff0c\u6211\u4eec\u662fWindows\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u8fd9\u4e00\u9886\u57df\u505a\u5f97\u66f4\u591a\u3002\u6211\u7684\u56e2\u961f\u6b63\u5728\u58ee\u5927\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u5efa\u7acb\u4e00\u4e2a\u56e2\u961f\uff0c\u8d1f\u8d23\u786e\u4fddWindows\u4e0a\u7684\u5305\u7ba1\u7406\u5668\u548c\u8f6f\u4ef6\u5206\u53d1\u5411\u524d\u8fc8\u8fdb\u4e00\u5927\u6b65\u3002\u6211\u4eec\u6b63\u5728\u5bfb\u6c42\u5bf9\u6211\u4eec\u5728Windows\u4e0a\u542f\u7528\u8f6f\u4ef6\u5206\u53d1\u7684\u65b9\u5f0f\u505a\u51fa\u4e00\u4e9b\u91cd\u5927\u6539\u53d8\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a(\u55ef\uff0c\u6211\u60f3\u8bf4\u8fd9\u4e0d\u662f\u5417\uff1f)\u3002\u5e2e\u52a9\u5b9a\u4e49\u6574\u4e2aAzure/Microsoft 365\u4e2dWindows\u548c\u5e94\u7528\u7a0b\u5e8f\u5206\u53d1\u7684\u672a\u6765\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u6709\u6ca1\u6709\u8003\u8651\u8fc7\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u81f4\u529b\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5728\u5fae\u8f6f\uff1f\n\u8d77\u521d\uff0c\u6211\u6709\u70b9\u72b9\u8c6b\uff1b\u6211\u4e0d\u60f3\u53bb\u5fae\u8f6f\u4ece\u4e8bWindows Store\u3001MSI Engine\u6216\u5176\u4ed6\u4e00\u4e9b\u4e0e\u5e94\u7528\u90e8\u7f72\u76f8\u5173\u7684\u5de5\u4f5c\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u5f97\u5230\u4e86\u4fdd\u8bc1\uff0c\u6211\u4f1a\u628a\u6240\u6709\u7684\u65f6\u95f4\u90fd\u82b1\u5728AppGet\u4e0a\u3002\u7ecf\u8fc7\u5927\u7ea6\u4e00\u4e2a\u6708\u7684\u957f\u65f6\u95f4\u7535\u5b50\u90ae\u4ef6\u6765\u56de\u53d1\u9001\uff0c\u6211\u4eec\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u8fd9\u4e00\u5b89\u6392\u5c06\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6536\u8d2d-\u8058\u7528\uff1b\u5fae\u8f6f\u5c06\u8058\u7528\u6211\uff0cAppGet\u5c06\u4e0e\u6211\u4e00\u8d77\u6765\uff0c\u4ed6\u4eec\u5c06\u51b3\u5b9a\u662f\u60f3\u8981\u91cd\u65b0\u547d\u540d\u4e3a\u5176\u4ed6\u540d\u79f0\uff0c\u8fd8\u662f\u5c06\u5176\u66f4\u540d\u4e3aMicrosoft AppGet\u3002\n\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u975e\u5e38\u4e0d\u6e05\u695a\u6211\u5728\u5fae\u8f6f\u5c06\u626e\u6f14\u4ec0\u4e48\u89d2\u8272\u3002\u6211\u7684\u804c\u8d23\u662f\u4ec0\u4e48\uff1f\u6211\u8be5\u5411\u8c01\u6c47\u62a5\u5462\uff1f\u8c01/\u4efb\u4f55\u4eba\u4f1a\u5411\u6211\u6c47\u62a5\uff1f\u5728\u90a3\u4e9b\u7f13\u6162\u7684\u5bf9\u8bdd\u4e2d\uff0c\u6211\u8bd5\u56fe\u6f84\u6e05\u5176\u4e2d\u7684\u4e00\u4e9b\u7b54\u6848\uff0c\u4f46\u4ece\u672a\u5f97\u5230\u660e\u786e\u7684\u7b54\u6848\u3002\n\u5728\u53c8\u8fdb\u884c\u4e86\u51e0\u4e2a\u6708\u7684\u975e\u5e38\u7f13\u6162\u7684\u7535\u5b50\u90ae\u4ef6\u4ea4\u8c08\u540e\uff0c\u6211\u88ab\u544a\u77e5\u901a\u8fc7BizDev\u8fdb\u884c\u6536\u8d2d-\u62db\u8058\u8fc7\u7a0b\u5c06\u9700\u8981\u975e\u5e38\u957f\u7684\u65f6\u95f4\u3002\u52a0\u5feb\u8fd9\u4e00\u8fc7\u7a0b\u7684\u53e6\u4e00\u79cd\u9009\u62e9\u662f\uff0c\u53ea\u9700\u7528\u201c\u5956\u91d1\u201d\u8058\u7528\u6211\uff0c\u7136\u540e\u5728\u4e8b\u540e\u8fc1\u79fb\u4ee3\u7801\u6240\u6709\u6743\u3002\u6211\u6ca1\u6709\u4efb\u4f55\u5f02\u8bae\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u96f7\u5fb7\u8499\u5fb7\u5b89\u6392\u4e86\u4e00\u4e9b\u4f1a\u8bae/\u9762\u8bd5\u3002\n12\u67085\u65e5\uff0c\u6211\u98de\u5f80\u897f\u96c5\u56fe\uff0c\u5728\u5fae\u8f6f\u603b\u90e8\u53c2\u52a0\u4e86\u4e00\u6574\u5929\u7684\u9762\u8bd5/\u4f1a\u8bae\u3002\u6211\u4f1a\u89c1\u4e86\u56db\u4e2a\u4e0d\u540c\u7684\u4eba\uff1b\u5176\u4e2d\u4e09\u4e2a\u4f1a\u8bae\u66f4\u50cf\u662f\u5178\u578b\u7684\u9762\u8bd5\uff1b\u4e0eAndrew\u7684\u4f1a\u8bae\u66f4\u591a\u7684\u662f\u5173\u4e8e\u5728\u8fd9\u4e00\u5207\u7ed3\u675f\u540e\u6211\u4eec\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u8fc1\u79fbAppGet\u7684\u6d41\u7a0b\u548c\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u4fbf\u80fd\u591f\u5904\u7406Microsoft\u7684\u89c4\u6a21\u3002\u6211\u4eec\u8c08\u5230\u4e86\u6211\u4eec\u7684\u4e00\u4e9b\u9009\u62e9\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u8ba4\u4e3a\u4e00\u5207\u90fd\u5f88\u987a\u5229\u3002\n\u6211\u6700\u540e\u4e00\u6b21\u4f1a\u8bae\u5728\u4e0b\u53486\u70b9\u5de6\u53f3\u7ed3\u675f\u3002\u6211\u6253\u4e86\u4e00\u8f86\u4f18\u6b65\u53bb\u673a\u573a\uff0c\u7136\u540e\u56de\u5230\u4e86\u6e29\u54e5\u534e\u3002\n\u7136\u540e\uff0c\u6211\u6709\u516d\u4e2a\u6708\u6ca1\u6709\u6536\u5230\u5fae\u8f6f\u4efb\u4f55\u4eba\u7684\u4efb\u4f55\u56de\u97f3\u3002\n\u76f4\u5230\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u5f97\u5230\u4e86Winget\u7b2c\u4e8c\u5929\u53d1\u5c04\u7684\u901a\u77e5\uff0c\n\u55e8\uff0c\u51ef\u6587\uff0c\u6211\u5e0c\u671b\u4f60\u548c\u4f60\u7684\u5bb6\u4eba\u8fc7\u5f97\u5f88\u597d-\u4e0e\u7f8e\u56fd\u76f8\u6bd4\uff0cBC\u4f3c\u4e4e\u5728Covid\u65b9\u9762\u5904\u7406\u5f97\u5f88\u597d\u3002\n\u6211\u5f88\u62b1\u6b49\uff0c\u9996\u76f8\u7684\u804c\u4f4d\u6ca1\u6709\u6210\u529f\u3002\u6211\u60f3\u82b1\u65f6\u95f4\u544a\u8bc9\u60a8\uff0c\u6211\u4eec\u975e\u5e38\u611f\u8c22\u60a8\u7684\u610f\u89c1\u548c\u89c1\u89e3\u3002\u6211\u4eec\u4e00\u76f4\u5728\u6784\u5efawindows\u5305\u7ba1\u7406\u5668\uff0c\u7b2c\u4e00\u4e2a\u9884\u89c8\u7248\u5c06\u5728\u660e\u5929\u7684build\u4e0a\u4e0a\u7ebf\u3002\u6211\u4eec\u5728\u535a\u5ba2\u4e2d\u4e5f\u7ed9\u4e86appget\u4e00\u4e2a\u547c\u5401\uff0c\u56e0\u4e3a\u6211\u4eec\u76f8\u4fe1Windows\u4e0a\u4f1a\u6709\u4e0d\u540c\u7684\u5305\u7ba1\u7406\u5668\u7684\u7a7a\u95f4\u3002\u60a8\u5c06\u770b\u5230\u6211\u4eec\u7684\u5305\u7ba1\u7406\u5668\u4e5f\u662f\u57fa\u4e8eGitHub\u7684\uff0c\u4f46\u663e\u7136\u662f\u57fa\u4e8e\u6211\u4eec\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u7b49\u7b49\u3002\u6211\u4eec\u7684\u5305\u7ba1\u7406\u5668\u4e5f\u5c06\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u663e\u7136\u6211\u4eec\u6b22\u8fce\u60a8\u7684\u4efb\u4f55\u8d21\u732e\u3002\n\u6211\u671f\u5f85\u7740\u5728\u6211\u4eec\u660e\u5929\u4e0a\u7ebf\u540e\u4e0e\u60a8\u8ba8\u8bba\u6211\u4eec\u7684\u5957\u9910\u7ba1\u7406\u5668\u3002\u663e\u7136\u5728\u660e\u5929\u65e9\u4e0a\u4e4b\u524d\u8fd9\u662f\u4fdd\u5bc6\u7684\u6240\u4ee5\u8bf7\u4fdd\u5b88\u79d8\u5bc6\u3002\u4f60\u548c\u5de7\u514b\u529b\u662f\u6211\u4eec\u4e8b\u5148\u544a\u8bc9\u7684\u552f\u4e00\u4e24\u4e2a\u4eba\u3002\n\u6211\u5e76\u4e0d\u592a\u60ca\u8bb6\uff1b\u51e0\u4e2a\u6708\u524d\u6211\u5c31\u77e5\u9053\u201c\u5fae\u8f6f\u7684\u4e8b\u60c5\u201d\u5e76\u6ca1\u6709\u53d1\u751f\u3002\n\u6211\u7b49\u5230\u7b2c\u4e8c\u5929\u624d\u770b\u5230\u8fd9\u4e2a\u65b0\u7684\u5305\u7ba1\u7406\u5668\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5f53\u6211\u6700\u7ec8\u770b\u5230\u516c\u544a\u548cGitHub\u5b58\u50a8\u5e93\u65f6\uff0c\u6211\u611f\u5230\u9707\u60ca\uff1f\u5fc3\u70e6\u610f\u4e71\uff1f\u6211\u751a\u81f3\u4e0d\u786e\u5b9a\u6211\u5728\u770b\u7684\u662f\u4ec0\u4e48\u3002\n\u5f53\u6211\u628a\u5b83\u62ff\u7ed9\u6211\u59bb\u5b50\u770b\u65f6\uff0c\u5979\u8bf4\u7684\u7b2c\u4e00\u53e5\u8bdd\u5c31\u662f\uff1a\u201c\u4ed6\u4eec\u7ba1\u5b83\u53eb\u7ffc\u7247\uff1f\u4f60\u662f\u8ba4\u771f\u7684\u5417\uff1f\u201c\u3002\u6211\u751a\u81f3\u4e0d\u9700\u8981\u5411\u5979\u89e3\u91ca\u6838\u5fc3\u673a\u5236\u3001\u672f\u8bed\u3001\u6e05\u5355\u683c\u5f0f\u548c\u7ed3\u6784\uff0c\u751a\u81f3\u5305\u5e93\u7684\u6587\u4ef6\u5939\u7ed3\u6784\u662f\u5982\u4f55\u53d7\u5230AppGet\u7684\u542f\u53d1\u7684\u3002\n\u4ed6\u4eec\u6ca1\u96c7\u6211\uff0c\u6211\u662f\u4e0d\u662f\u5f88\u751f\u6c14\uff1f\u4e0d\u662f\u7684\uff0c\u53c2\u89c2\u5b8c\u6821\u56ed\u540e\uff0c\u6211\u4e0d\u592a\u786e\u5b9a\u6211\u662f\u5426\u60f3\u4e3a\u8fd9\u4e48\u5927\u7684\u516c\u53f8\u5de5\u4f5c\uff0c\u800c\u4e14\u4ece\u52a0\u62ff\u5927\u642c\u5230\u7f8e\u56fd\u4e5f\u4e0d\u662f\u6211\u592a\u5174\u594b\u7684\u4e8b\u60c5\u3002\u6b64\u5916\uff0c\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u8ba4\u4e3a\u8fd9\u662f\u4e00\u7b14\u4ea4\u6613\u3002\n\u5fae\u8f6f\uff0c\u4e00\u5bb6\u5e02\u503c1.4\u4e07\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\uff0c\u6700\u7ec8\u9f50\u5fc3\u534f\u529b\uff0c\u4e3a\u4ed6\u4eec\u7684\u65d7\u8230\u4ea7\u54c1\u53d1\u5e03\u4e86\u4e00\u4e2a\u50cf\u6837\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u6211\u662f\u4e0d\u662f\u611f\u5230\u4e0d\u5b89\uff1f\u4e0d\uff0c\u4ed6\u4eec\u51e0\u5e74\u524d\u5c31\u8be5\u8fd9\u4e48\u505a\u4e86\u3002\u4ed6\u4eec\u4e0d\u5e94\u8be5\u50cf\u4ed6\u4eec\u90a3\u6837\u628aWindows Store\u641e\u5f97\u4e00\u56e2\u7cdf\u3002\n\u5b9e\u9645\u4e0a\uff0c\u65e0\u8bba\u6211\u591a\u4e48\u52aa\u529b\u5730\u63a8\u5e7fAppGet\uff0c\u5b83\u7684\u589e\u957f\u901f\u5ea6\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u5fae\u8f6f\u89e3\u51b3\u65b9\u6848\u90a3\u6837\u5feb\u3002\u6211\u521b\u5efaAppGet\u4e0d\u662f\u4e3a\u4e86\u53d1\u8d22\uff0c\u4e0d\u662f\u4e3a\u4e86\u6210\u540d\uff0c\u4e5f\u4e0d\u662f\u4e3a\u4e86\u53d7\u96c7\u4e8e\u5fae\u8f6f\u3002\u6211\u521b\u5efaAppGet\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u6211\u4eec\u8fd9\u4e9bWindows\u7528\u6237\u4e5f\u5e94\u8be5\u5f97\u5230\u4e0d\u9519\u7684\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u4f53\u9a8c\u3002\n\u8ba9\u6211\u70e6\u607c\u7684\u662f\u6574\u4ef6\u4e8b\u662f\u600e\u4e48\u5904\u7406\u7684\u3002\u7f13\u6162\u800c\u53ef\u6015\u7684\u4ea4\u6d41\u901f\u5ea6\u3002\u6700\u540e\u5b8c\u5168\u7684\u65e0\u7ebf\u7535\u5bc2\u9759\u3002\u4f46\u6700\u8ba9\u4eba\u75db\u5fc3\u7684\u662f\u516c\u544a\u3002\u5ba2\u89c2\u4e0a\uff0cWinget\u7684\u5927\u90e8\u5206\u60f3\u6cd5\u90fd\u6765\u81eaAppGet\uff0c\u53ea\u662f\u63d0\u5230\u5b83\u662f\u78b0\u5de7\u5b58\u5728\u7684\u53e6\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\uff1b\u800c\u5176\u4ed6Winget\u5f88\u5c11\u5171\u4eab\u7684\u5305\u7ba1\u7406\u5668\u5219\u88ab\u63d0\u5230\uff0c\u5e76\u66f4\u4ed4\u7ec6\u5730\u8fdb\u884c\u4e86\u89e3\u91ca\u3002\n\u8fd8\u6709\u4e00\u7ebf\u5e0c\u671b\u3002Winget\u5c06\u5efa\u7acb\u5728\u575a\u5b9e\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5177\u6709\u6210\u529f\u7684\u6f5c\u529b\u3002\u6211\u4eec\u5ffd\u89c6\u4e86Windows\u7528\u6237\u53ef\u80fd\u6700\u7ec8\u4f1a\u6709\u4e00\u4e2a\u50cf\u6837\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u3002-", "note_en": "Microsoft released  WinGet (  Not to be mistaken with    AppGet) earlier this week as part of their  Build 2020 announcements. For the past few days, I\u2019ve been collecting my thoughts figuring out what actually happened in the past 12 months.\n TLDR;   I\u2019m no longer going to be developing AppGet. The client and backend services will go into maintenance mode immediately until August 1st, 2020, at which point they\u2019ll be shut down permanently.\n  A year ago (July 3rd  , 2019) I got this email from Andrew, a high-level manager at Microsoft,\n I run the Windows App Model engineering team and in particular the app deployment team. Just wanted to drop you a quick note to thank you for building appget \u2014 it\u2019s a great addition to the Windows ecosystem and makes Windows developers life so much easier. We will likely be up in Vancouver in the coming weeks for meetings with other companies but if you had time we\u2019d love to meet up with you and your team to get feedback on how we can make your life easier building appget.\n Naturally, I was excited; my hobby project being noticed by Microsoft was a big deal. I replied, and two months and a few emails later, we finally had a meeting planned on August 20th at Microsoft Vancouver. The meeting was between me, Andrew and another engineering manager in the same product group. I had a great time; we talked about the ideas behind AppGet,  what I thought was broken about the current package manager systems in Windows and what I had planned for AppGet\u2019s future. We went out for lunch and talked a bit more about AppGet, Windows Phone, and a few other things, but the outcome of the meeting as far as I understood it was,   what can Microsoft do to help? I mentioned some Azure credit would be nice, getting some doc on how the new MSIX packages work and if they could fix a few issues I had with some of their download links.\n  it was a pleasure to meet you and to find out more about appget. I\u2019m following up on the azure startup pricing for you. As you know we are big fans of package managers on Windows and we are looking to do more in that space. My team is growing and part of that is to build a team who is responsible for ensuring package managers and software distribution on Windows makes a big step forward. We are looking to make some significant changes to the way that we enable software distribution on Windows and there\u2019s a great opportunity (well I would say that wouldn\u2019t I?) to help define the future of Windows and app distribution throughout Azure/Microsoft 365.\n With that in mind have you considered spending more time dedicated to appget and potentially at Microsoft?\n Initially, I was a bit hesitant; I didn\u2019t want to go to Microsoft to work on Windows Store, MSI engine or some other app deployment-related stuff. Shortly after, I was assured that I would spend all my time on AppGet. After about a month of prolonged email back and forth, we came to the conclusion that the arrangement will be very similar to an acqui-hire; Microsoft would hire me, AppGet would come with me, and they would decide if they wanted to rename it something else, or it would become Microsoft AppGet.\n Throughout the whole process, I was very unclear on what my role would be at Microsoft. What would my responsibilities be? Who would I report to? Who/anyone would report to me? I tried clearing some of these answers throughout those slow conversations but never got a clear answer.\n After another few months of again very slow email conversations, I was told that the acqui-hire process through BizDev would take a very long time. An alternative to speed up the process would be just to hire me with a \u201c  bonus\u201d and then work on migrating the code ownership after the fact. I didn\u2019t have any objections, so we scheduled some meetings/interviews in Redmond.\n I flew to Seattle on December 5th to have a full day of interviews/meetings at Microsoft HQ. I met with four different people; three of the meetings were more like your typical interviews; the meeting with Andrew was more about what we should do once this is all over and how we would migrate AppGet\u2019s process and infrastructure to be able to handle Microsoft\u2019s scale. We talked about some of our options, but in general, I thought everything went well.\n My last meeting ended at around 6 pm. I took an Uber to the airport and was back in Vancouver.\n And then, I didn\u2019t hear anything back from anyone at Microsoft for six months.\n Until earlier this week when I was given heads up about WinGet\u2019s launch the next day,\n Hi Keivan, I hope you and your family are doing well \u2014 BC seems to have a good handle on covid compared to the us.\n I\u2019m sorry that the pm position didn\u2019t work out. I wanted to take the time to tell you how much we appreciated your input and insights. We have been building the windows package manager and the first preview will go live tomorrow at build. We give appget a call out in our blog post too since we believe there will be space for different package managers on windows. You will see our package manager is based on GitHub too but obviously with our own implementation etc. our package manager will be open source too so obviously we would welcome any contribution from you.\n I look forward to talking to you about our package manager once we go live tomorrow. Obviously this is confidential until tomorrow morning so please keep this to yourself. You and chocolatey are the only folks we have told about this in advance.\n I wasn\u2019t too surprised; I had figured out months ago that the \u201cMicrosoft thing\u201d isn\u2019t happening.\n I waited until the next day to see what this new package manager was going to be like. When I finally saw the  announcement and the  GitHub repositories, I was shocked? Upset? I wasn\u2019t even sure what I was looking at.\n When I showed it to my wife, the first thing she said was, \u201cThey Called it WinGet? are you serious!?\u201d I didn\u2019t even have to explain to her how the core mechanics, terminology, the  manifest format and structure, even the package repository\u2019s folder structure, are very   inspired by AppGet.\n Am I upset they didn\u2019t hire me? Not really, after visiting the campus, I wasn\u2019t too sure I wanted to work for such a big company, also moving from Canada to the U.S. wasn\u2019t something I was too excited about. Also, throughout the process, at no time I assumed this was done deal.\n Am I upset that Microsoft, a 1.4 trillion-dollar company, finally got their act together and released a decent package manager for their flagship product? No, they should\u2019ve done it years ago. They shouldn\u2019t have screwed Windows Store as badly as they did.\n Realistically, no matter how hard I tried to promote AppGet, it would never grow at the rate a   Microsoft solution would. I didn\u2019t create AppGet to get rich or to become famous or get hired by Microsoft. I created AppGet because I thought us Windows users deserved a decent app management experience too.\n What bothers me is how the whole thing was handled. The slow and dreadful communication speed. The total radio silence at the end. But the part that hurts the most was the announcement. AppGet, which is objectively where most ideas for WinGet came from, was only mentioned as another package manager   that just happened to exist; While other package managers that WinGet shares very little with were mentioned and explained much more deliberately.\n There is a silver lining. WinGet will be built on a solid foundation and has the potential to succeed. And we neglected Windows users might finally have a decent package manager. \u2014", "posttime": "2020-05-28 08:04:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,appget", "title": "AppGet\u53bb\u4e16\u7684\u90a3\u4e00\u5929", "title_en": "The Day AppGet Died", "transed": 1, "url": "https://keivan.io/the-day-appget-died/", "via": "", "real_tags": ["app", "appget"]}, {"category": "", "categoryclass": "", "imagename": "e7df6d203f02a2964574bc6841958324.jpg", "infoid": 1004003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "IBM3270\u578b\u7ec8\u7aef\u662f\u5927\u578b\u8ba1\u7b97\u673a\u7ec8\u7aef\u3002\u6211\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5bf9IBM\u7684\u5927\u578b\u673a\u7740\u8ff7\uff0c\u5c24\u5176\u662f\u8fd9\u4e9b\u7ec8\u7aef\u30023278\u548c3279\u7b49\u65e9\u671f\u673a\u578b\u6709\u72ec\u7279\u7684\u7f8e\u5b66\uff0c\u5b83\u4eec\u7684\u5757\u72b6\u8bbe\u8ba1\u4e0e\u65e0\u5904\u4e0d\u5728\u7684VT\u7cfb\u5217\u7ec8\u7aef\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\n\u6211\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u60f3\u8981\u5c06\u771f\u6b63\u7684IBM\u7ec8\u7aef\u8fde\u63a5\u5230Hercules\u4eff\u771f\u5668\u4e0a\u7684\u4eba\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f88\u96be\u627e\u5230\u5fc5\u8981\u7684\u5e26\u4ee5\u592a\u7f51\u6216\u4ee4\u724c\u73af\u63a5\u53e3\u7684IBM3174\u7ec8\u7aef\u63a7\u5236\u5668\uff0c\u8fd9\u662f\u652f\u6301TCP/IP\u4e14\u5904\u4e8e\u5de5\u4f5c\u72b6\u6001\u7684\u8f6f\u4ef6\u7248\u672c\u3002\u6b64\u5916\uff0c\u5b83\u4eec\u5f88\u5927\uff0c\u566a\u97f3\u5f88\u5927\uff0c\u800c\u4e14\u5f88\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u662f\u4ece\u4e00\u5f20\u4e0d\u5e38\u89c1\u76842.4MB 5.25\u82f1\u5bf8\u8f6f\u76d8\u4e0a\u52a0\u8f7d\u7684-\u5982\u679c\u4f60\u5e78\u8fd0\u7684\u8bdd\uff0c\u8fd8\u6709\u4e00\u4e2a20MB\u7684\u786c\u76d8\u9009\u9879\u3002\u6240\u4ee5\u6211\u51b3\u5b9a\u5efa\u9020\u6211\u81ea\u5df1\u7684\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\n\u6839\u636eIBM\u7684\u8bf4\u6cd5\uff0c3270\u4fe1\u606f\u663e\u793a\u7cfb\u7edf\u4e8e1972\u5e74\u63a8\u51fa\uff0c5\u5e74\u540e\u76841977\u5e74\u6210\u4e3a\u6807\u5fd7\u6027\u76843278\u7ec8\u7aef\u3002\u5f69\u8272\u7ec8\u7aef\u4e8e1979\u5e74\u4e0e3279\u4e00\u8d77\u95ee\u4e16\u3002\u5c06IBM\u578b\u53f7\u548c\u65e5\u671f\u6df7\u4e3a\u4e00\u8c08\u975e\u5e38\u4ee4\u4eba\u56f0\u60d1\uff01\n3270\u662f\u6700\u6613\u8bc6\u522b\u7684\u9762\u5411\u5757\u7684\u7ec8\u7aef\u4e4b\u4e00\u30023270\u6570\u636e\u6d41\u5141\u8bb8\u7a0b\u5e8f\u5458\u63cf\u8ff0\u5305\u542b\u53d7\u4fdd\u62a4\u6587\u672c\u3001\u4e0d\u53d7\u4fdd\u62a4\u5b57\u6bb5\u548c\u683c\u5f0f\u5c5e\u6027\u7684\u5c4f\u5e55\u3002\u4e0d\u53d7\u4fdd\u62a4\u7684\u5b57\u6bb5\u5141\u8bb8\u60a8\u8f93\u5165\u6216\u4fee\u6539\u6570\u636e\u3002\u7ec8\u7aef\u4e0d\u4f1a\u50cf\u9762\u5411\u5b57\u7b26\u7684\u7ec8\u7aef\u90a3\u6837\u7acb\u5373\u5c06\u60a8\u6309\u4e0b\u7684\u6bcf\u4e2a\u952e\u90fd\u53d1\u9001\u7ed9\u4e3b\u673a\uff0c\u800c\u662f\u4f1a\u5b58\u50a8\u8f93\u5165\uff0c\u76f4\u5230\u60a8\u6309\u4e0b\u6ce8\u610f\u952e(\u5982Enter)\u3002\u53ea\u6709\u5f53\u60a8\u6309\u4e0b\u6ce8\u91ca\u952e\u65f6\uff0c\u8f93\u5165\u624d\u4f1a\u53d1\u9001\u5230\u4e3b\u673a\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f29\u77ed\u7f13\u6162\u6216\u4e0d\u53ef\u9760\u8fde\u63a5\u7684\u611f\u77e5\u54cd\u5e94\u65f6\u95f4\u3002\u5b83\u8fd8\u964d\u4f4e\u4e86\u4e3b\u673a\u5904\u7406\u8981\u6c42\uff0c\u5141\u8bb8\u8fde\u63a5\u5230\u4e3b\u673a\u7684\u7ec8\u7aef\u6bd4\u9762\u5411\u5b57\u7b26\u7684\u7ec8\u7aef\u591a\u5f97\u591a\u3002\u5b83\u4e0eHTML\u8868\u5355\u6ca1\u6709\u592a\u5927\u4e0d\u540c\u3002\n\u65e9\u671f\u76843270\u7ec8\u7aef\u4e0a\u6709\u4ee4\u4eba\u5174\u594b\u7684\u5916\u56f4\u8bbe\u5907\uff0c\u5305\u62ec\u7528\u4e8e\u6539\u8fdb\u5bfc\u822a\u548c\u78c1\u5361\u8bfb\u5361\u5668\u7684\u5149\u7b14\uff1b\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4ece\u672a\u5728eBay\u4e0a\u770b\u5230\u8fc7\u8fd9\u4e9b\u3002\n\u5728\u661f\u5f62\u62d3\u6251\u4e2d\uff0c\u7ec8\u7aef\u901a\u8fc7\u540c\u8f74\u7535\u7f06\u8fde\u63a5\u5230\u63a7\u5236\u5668\u3002Balun\u53ef\u4ee5\u5c06\u6b64\u8f6c\u6362\u4e3a\u66f4\u5e38\u89c1\u7684\u53cc\u7ede\u7ebf\u5e03\u7ebf\uff0c\u5c3d\u7ba1\u6211\u8ba4\u4e3aIBM\u66f4\u559c\u6b22\u60a8\u4f7f\u7528\u4ed6\u4eec\u7684\u5e03\u7ebf\u7cfb\u7edf\u3002\u63a7\u5236\u5668\u6839\u636e\u662f\u672c\u5730\u63a7\u5236\u5668\u8fd8\u662f\u9065\u63a7\u5668\u548c\u5e74\u4efd\u901a\u8fc7\u4e0d\u540c\u7684\u63a5\u53e3\u8fde\u63a5\u5230\u4e3b\u673a\uff0c\u63a5\u53e3\u5305\u62ec\uff1a\n\u56e0\u6b64\uff0cIBM 3174\u548c3274\u63a7\u5236\u5668\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5f62\u72b6\u548c\u5927\u5c0f-\u4ece\u5c0f\u578b\u53f0\u5f0f\u8bbe\u5907\u3001\u4e2d\u578b\u673a\u67b6\u5b89\u88c5\u8bbe\u5907\u5230\u5927\u578b\u843d\u5730\u5f0f\u8bbe\u5907\u3002\n\u5305\u62ecMemorex\u5728\u5185\u7684\u5176\u4ed6\u516c\u53f8\u4e5f\u751f\u4ea7\u517c\u5bb9\u7684\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u3002\u4e00\u65e6\u4e2a\u4eba\u8ba1\u7b97\u673a\u53d8\u5f97\u53f8\u7a7a\u89c1\u60ef\uff0c\u7ec8\u7aef\u5c31\u53ef\u4ee5\u88abISA\u3001PCMCIA\u4ee5\u53ca\u540e\u6765\u7684PCI\u5361\u53d6\u4ee3\uff0cPCI\u5361\u5141\u8bb8\u8fd0\u884c\u4eff\u771f\u5668\u7684PC\u4f7f\u7528\u76f8\u540c\u7684\u540c\u8f74\u7535\u7f06\u8fdb\u884c\u8fde\u63a5\u3002\u540e\u6765\uff0c\u968f\u7740LAN\u548cTCP/IP\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fde\u63a5\u88ab\u4e0d\u9700\u8981\u989d\u5916\u786c\u4ef6\u6216\u540c\u8f74\u7535\u7f06\u7684TN3270 Telnet\u6240\u53d6\u4ee3\u3002\n\u5bf9\u4e8e\u73b0\u5728\u62e5\u6709TCP/IP\u7f51\u7edc\u4f46\u4e5f\u62e5\u6709\u5927\u91cf\u7269\u7406\u7ec8\u7aef\u7684\u5ba2\u6237\uff0c\u540e\u6765\u76843174\u63a7\u5236\u5668\u63d0\u4f9b\u4e86\u901a\u8fc7TCP/IP\u4e0a\u7684Telnet\u5c06\u8fd9\u4e9b\u7ec8\u7aef\u8fde\u63a5\u5230\u5927\u578b\u673a\u7684\u80fd\u529b\u3002\u8fd9\u4e9b\u662f\u60a8\u8981\u8fde\u63a5\u5230\u5927\u529b\u795e\u7684\u63a7\u5236\u5668\u3002\u8ba9\u6211\u611f\u5174\u8da3\u7684\u662f\uff0c\u8fd9\u4e9b\u540e\u6765\u7684\u63a7\u5236\u5668\u8fd8\u63d0\u4f9b\u4e86VT100\u4eff\u771f\u529f\u80fd\uff0c3270\u7ec8\u7aef\u53ef\u4ee5\u901a\u8fc7telnet\u8fde\u63a5\u5230UNIX\u6216VMS\u4e3b\u673a\uff0c\u5c31\u50cf\u5b83\u662fVT100\u4e00\u6837\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u4f3c\u4e4e\u5f88\u5947\u602a\uff1b\u5982\u679c\u7ec8\u7aef\u662f\u9762\u5411\u5757\u7684\uff0c\u4f3c\u4e4e\u4e0d\u53ef\u80fd\u4ee5\u4e00\u79cd\u6709\u7528\u7684\u65b9\u5f0f\u6a21\u62dfVT100\u3002\n\u6700\u540e\u4e00\u53f0IBM\u7ec8\u7aef\u662f20\u4e16\u7eaa90\u5e74\u4ee3\u672b\u63a8\u51fa\u76843483\u3002\u5230\u90a3\u65f6\uff0c\u8be5\u7ec8\u7aef\u7c7b\u4f3c\u4e8e\u7626\u5ba2\u6237\u7aef\uff0c\u5e76\u4f7f\u7528\u884c\u4e1a\u6807\u51c6\u7684VGA\u663e\u793a\u5668\u548cPS/2\u952e\u76d8\u8fde\u63a5\u3002\n\u6211\u6700\u521d\u7684\u641c\u7d22\u53d1\u73b0\u4e86\u6240\u4f7f\u7528\u7684\u7535\u7f06\u548c3270\u6570\u636e\u6d41\u7684\u63cf\u8ff0\uff0c\u8fd9\u662f\u6709\u8be6\u7ec6\u8bb0\u5f55\u7684\uff0c\u4f46\u6ca1\u6709\u5173\u4e8e\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u4f7f\u7528\u7684\u534f\u8bae\u7684\u63cf\u8ff0\u3002\u76f4\u5230\u6211\u627e\u5230\u4e86\u7528\u4e8e\u6784\u5efaPC\u63a5\u53e3\u7684\u73b0\u5df2\u8fc7\u65f6\u7684\u82af\u7247\u7684\u6570\u636e\u8868\uff0c\u6211\u624d\u4ece\u82af\u7247\u548c\u56fd\u5bb6\u534a\u5bfc\u4f53\u516c\u53f8(National Semiconductor)\u627e\u5230\u4e86\u6211\u60f3\u8981\u7684\u7ec6\u8282\uff1a\n\u8bbe\u5907\u901a\u8fc7\u7279\u6027\u963b\u6297\u4e3a93&Amp\uff1bOhm\u7684RG-62\u578b\u540c\u8f74\u7535\u7f06\u8fdb\u884c\u70b9\u5bf9\u70b9\u8fde\u63a5-\u4e0e\u4f7f\u7528\u603b\u7ebf\u62d3\u6251\u548c50&Amp\uff1bOhm\u963b\u6297\u7535\u7f06\u768410BASE2\u4ee5\u592a\u7f51\u4e0d\u540c\u3002\u4e3a\u4e86\u51cf\u5c11\u957f\u7535\u7f06\u7ebf\u8def\u4e0a\u7684\u566a\u58f0\u5e72\u6270\uff0c\u4f7f\u7528\u4e86\u5dee\u5206\u4fe1\u4ee4\uff0c\u8be5\u89c4\u8303\u5141\u8bb8\u8bbe\u5907\u4e4b\u95f4\u7684\u8ddd\u79bb\u957f\u8fbe1.5\u516c\u91cc\u3002\n\u4f7f\u7528MACHESTER\u7f16\u7801\u4ee52.3587 Mb/s\u7684\u6bd4\u7279\u7387\u53d1\u9001\u6570\u636e\u3002\u8be5\u7f16\u7801\u65b9\u6848\u786e\u4fdd\u6bcf\u4e2a\u6bd4\u7279\u4e2d\u95f4\u7684\u8f6c\u6362(\u4ece\u9ad8\u5230\u4f4e\u6216\u4ece\u4f4e\u5230\u9ad8)\uff0c\u4ece\u800c\u5141\u8bb8\u63a5\u6536\u5668\u53ef\u9760\u5730\u6062\u590d\u6570\u636e\u3002\u4e00\u5e27\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a10\u4f4d\u5b57\uff1b\u5e27\u4e2d\u7684\u6bcf\u4e2a\u5b57\u4ee5\u540c\u6b65\u4f4d\u5f00\u59cb\uff0c\u4ee5\u5947\u5076\u6821\u9a8c\u4f4d\u7ed3\u675f\u3002\u552f\u4e00\u7684\u5e8f\u5217\u6307\u793a\u5e27\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\n\u63a7\u5236\u5668\u53d1\u8d77\u6240\u6709\u901a\u4fe1\uff1b\u5b83\u5411\u7ec8\u7aef\u53d1\u9001\u5305\u542b\u547d\u4ee4\u5b57\u548c\u53ef\u9009\u6570\u636e\u5b57(\u5c06\u5176\u89c6\u4e3a\u53c2\u6570)\u7684\u5e27\u3002\u7ec8\u7aef\u7528\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u636e\u5b57\u7684\u5e27\u8fdb\u884c\u54cd\u5e94\u3002\n\u539f\u6765\u6709\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u7ec8\u7aef\u5207\u5272\u548cDFT\u3002\u5207\u5272\u578b\u7ec8\u7aef\u4f9d\u9760\u63a7\u5236\u5355\u5143\u6765\u5904\u74063270\u6570\u636e\u6d41\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u57fa\u672c\u64cd\u4f5c\uff0c\u4f8b\u5982\u5c06\u5149\u6807\u79fb\u52a8\u5230\u8be5\u5730\u5740\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b57\u7b26\u5199\u5165\u663e\u793a\u7f13\u51b2\u5668(\u79f0\u4e3a\u518d\u751f\u7f13\u51b2\u5668)\u3002\u8be5\u63a7\u5236\u5668\u5904\u7406\u4e0e3270\u7ec8\u7aef\u76f8\u5173\u7684\u5927\u90e8\u5206\u667a\u80fd\u4eba\u5458\uff0c\u8fd9\u610f\u5473\u7740CUT\u7ec8\u7aef\u903b\u8f91\u6bd4\u53ef\u6bd4\u7684VT100\u66f4\u7b80\u5355\u3002DFT\u7c7b\u578b\u7684\u7ec8\u7aef\u53ef\u4ee5\u81ea\u5df1\u5904\u74063270\u6570\u636e\u6d41\uff0c\u5e76\u4e14\u63a7\u5236\u5668\u5c06\u5176\u4f20\u9012\u7ed9\u7ec8\u7aef\u3002\n\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728\u6613\u8da3\u4e0a\u627e\u5230\u56fd\u5bb6\u534a\u5bfc\u4f53DP8340\u53d1\u5c04\u5668\u548cDP8341\u63a5\u6536\u5668\uff0c\u6240\u4ee5\u6211\u548c\u6570\u636e\u624b\u518c\u53c2\u8003\u7535\u8def\u4e2d\u663e\u793a\u7684\u5176\u4ed6\u5143\u4ef6\u4e00\u8d77\u8d2d\u4e70\u4e86\u4e00\u4e9b\u3002\u6211\u6700\u521d\u8ba4\u4e3a\u6211\u5fc5\u987b\u4ece\u5934\u5f00\u59cb\u5efa\u7acb\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f46\u8fd9\u4e9b\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668IC\u4e3a\u6211\u63d0\u4f9b\u4e86\u6570\u636e\u94fe\u8def\u5c42\u5904\u7406\u3002\n\u6211\u8fd8\u627e\u5230\u4e86\u4e00\u4e2a\u5e26\u4ee4\u724c\u73af\u63a5\u53e3\u7684IBM3174-23R\u673a\u67b6\u5f0f\u63a7\u5236\u5668\uff0c\u6211\u60f3\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u51fa\u53d1\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u63a7\u5236\u7a0b\u5e8f\u8f6f\u76d8\u5df2\u635f\u574f\uff0c\u53ea\u80fd\u52a0\u8f7d\u8bca\u65ad\u76d8\u3002\u8bca\u65ad\u7a0b\u5e8f\u786e\u5b9e\u5728\u7ec8\u7aef\u4e0a\u663e\u793a\u83dc\u5355\uff0c\u8fd9\u8db3\u4ee5\u6355\u83b7\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u4e00\u4e9b\u6d41\u91cf\u8fdb\u884c\u5206\u6790\u3002\n\u6211\u6839\u636eDP8341\u6570\u636e\u8868\u5728\u9762\u5305\u677f\u4e0a\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u6536\u5668\u7535\u8def\uff0c\u5c06\u5176\u8fde\u63a5\u5230Arduino Mega\u4e0a\uff0c\u5e76\u4f7f\u7528T\u5f62\u8fde\u63a5\u5668\u8fde\u63a5\u63a7\u5236\u5668\u548c\u7ec8\u7aef\u4e4b\u95f4\u7684\u7ebf\u8def\u3002\u5f53\u6570\u636e\u53ef\u7528\u5f15\u811a\u7b2c\u4e00\u6b21\u53d8\u9ad8\u65f6\uff0c\u6211\u975e\u5e38\u5174\u594b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86\u6211\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u53ef\u9760\u5730\u4ece\u63a5\u6536\u5668\u8bfb\u53d6\u6570\u636e\u3002\u6211\u5f88\u5feb\u5c31\u53d1\u73b0Arduino Mega\uff1b\u76848KB\u5185\u5b58\u6ea2\u51fa\u4e86\uff0c\u800c\u4e14\u6570\u636e\u901f\u7387\u592a\u5feb\uff0c\u65e0\u6cd5\u901a\u8fc7\u4e32\u53e3\u5b9e\u65f6\u5c06\u6570\u636e\u5378\u8f7d\u5230\u6211\u7684PC\u4e0a\u3002\n\u6211\u6355\u83b7\u7684\u5927\u90e8\u5206\u6d88\u606f\u90fd\u662f\u6765\u81ea\u63a7\u5236\u5668\u7684\u8f6e\u8be2\u547d\u4ee4\u548c\u6765\u81ea\u7ec8\u7aef\u7684\u786e\u8ba4\u54cd\u5e94\u3002\u56e0\u4e3a\u63a7\u5236\u5668\u53d1\u8d77\u6240\u6709\u901a\u4fe1\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u8f6e\u8be2\u7ec8\u7aef\u4ee5\u8fde\u7eed\u68c0\u67e5\u6309\u952e\u3002\u8fc7\u6ee4\u6389\u65e0\u6309\u952e\u6d88\u606f\u540e\uff0c\u6211\u53ef\u4ee5\u5c06\u7ec8\u7aef\u8fd4\u56de\u7684\u626b\u63cf\u7801\u6620\u5c04\u5230\u952e\u4e0a\u3002\n\u6211\u8fd8\u6355\u83b7\u4e86\u4e0e\u663e\u793a\u7f13\u51b2\u533a\u76f8\u5173\u7684LOAD ADDRESS COUNTER\u548cWRITE DATA\u547d\u4ee4\u3002\u63d0\u53d6\u5730\u5740\u5f88\u5bb9\u6613\uff0c\u4f46\u6839\u636e\u7ec8\u7aef\u4e0a\u663e\u793a\u7684\u8bca\u65ad\u754c\u9762\uff0c\u6211\u6ca1\u6709\u770b\u5230\u4ee5EBCDIC\u7f16\u7801\u5199\u5165\u663e\u793a\u7f13\u51b2\u533a\u7684\u6570\u636e\uff0c\u5b83\u4e5f\u4e0d\u662fASCII\u3002\u539f\u6765\u7ec8\u7aef\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u6211\u4e0d\u77e5\u9053\u5b83\u53eb\u4ec0\u4e48\uff0c\u4e5f\u627e\u4e0d\u5230\u4efb\u4f55\u4e0e\u5b83\u76f8\u5173\u7684\u4fe1\u606f\u3002\u6211\u4ece\u8bca\u65ad\u754c\u9762\u83b7\u5f97\u4e86\u8db3\u591f\u7684\u793a\u4f8b\uff0c\u53ef\u4ee5\u4ece\u6355\u83b7\u7684\u6570\u636e\u6784\u5efa\u5927\u90e8\u5206\u6620\u5c04\u3002\u5f53\u6211\u5c06DP8340\u53d1\u9001\u5668\u6dfb\u52a0\u5230\u9762\u5305\u677f\u65f6\uff0c\u5728\u7b2c\u4e00\u6b21\u5199\u5165\u540e\u80fd\u591f\u751f\u6210\u5b8c\u6574\u7684\u6620\u5c04\u3002\u5f53\u7136\uff0chello world\uff01\n3270\u7ec8\u7aef\u5728\u663e\u793a\u5c4f\u5e95\u90e8\u663e\u793a\u72b6\u6001\u884c\u3002\u9664\u5f53\u524d\u5149\u6807\u4f4d\u7f6e\u5916\uff0c\u72b6\u6001\u884c\u7531\u63a7\u5236\u5668\u7ba1\u7406\u3002\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u72b6\u6001\u884c\u5f00\u59cb\u4e8e\u663e\u793a\u7f13\u51b2\u5668\u7684\u5730\u57400\uff0c\u5c3d\u7ba1\u5b83\u4f4d\u4e8e\u5c4f\u5e55\u7684\u5e95\u90e8\uff0c\u4f46\u5730\u574080\u662f80\u5217\u6a21\u5f0f\u4e2d\u7684\u5de6\u4e0a\u89d2\u5355\u5143\u3002\u6b64\u5916\uff0c\u72b6\u6001\u884c\u7684\u5b57\u7b26\u7f16\u7801\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e14\u5305\u62ec\u8bb8\u591a\u4e0d\u5bfb\u5e38\u7684\u7b26\u53f7\u3002\n\u6700\u7ec8\uff0c\u6211\u80fd\u591f\u521b\u5efa\u4e00\u4e2aPython\u5e93pycoax\u6765\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u53163270\u5e27-Python\u4ee3\u7801\u5728\u60a8\u7684PC\u4e0a\u8fd0\u884c\uff0c\u5e76\u901a\u8fc7\u4e32\u884c(\u771f\u6b63\u7684USB)\u4e0eArduino\u901a\u4fe1\u3002\n\u6700\u540e\uff0c\u6211\u4f7f\u7528KiCad\u8bbe\u8ba1\u4e86\u6211\u7684\u7b2c\u4e00\u4e2aPCB\uff0c\u5e76\u5c06\u8bbe\u8ba1\u53d1\u9001\u5230JLCPCB\u300215\u7f8e\u5143\uff0c\u4e00\u5468\u540e\uff0c\u6211\u51c6\u5907\u597d\u4e865\u4e2aArduino\u76fe\u724c\uff0c\u53ef\u4ee5\u7ec4\u88c5\u4e86\u3002\u4e0e\u9762\u5305\u677f\u7535\u8def\u76f8\u6bd4\uff0cPCB\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6539\u8fdb\uff0c\u6211\u6ce8\u610f\u5230\u63a5\u6536\u5668\u9519\u8bef\u663e\u8457\u51cf\u5c11\u3002\u597d\u7684\uff0c\u6211\u627f\u8ba4\u7b2c\u4e00\u6b21\u6709\u4e00\u4e2a\u8def\u7ebf\u9519\u8bef-\u6211\u786e\u5b9e\u4e0d\u5f97\u4e0d\u8ba2\u8d2d\u4e00\u4e2a\u4fee\u8ba2\u7248\uff01\n\u6211\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u53ef\u4ee5\u4e0eHercules\u4e00\u8d77\u4f7f\u7528\u7684IBM3174\u63a7\u5236\u5668\u7684\u66ff\u4ee3\u54c1\u3002\u73b0\u5728\u6211\u660e\u767d\u4e86\u5207\u5272\u578b\u7ec8\u7aef\u4e0d\u4f1a\u76f4\u63a5\u5904\u74063270\u6570\u636e\u6d41\uff0c\u6211\u610f\u8bc6\u5230\u9996\u5148\u5b9e\u73b0VT100\u4eff\u771f\u6bd4\u5b9e\u73b0TN3270\u66f4\u5bb9\u6613\u3002\n\u6211\u53d1\u73b0\u4e86pyte\uff0c\u5b83\u63d0\u4f9b\u5185\u5b58\u4e2d\u7684VT100\u4eff\u771f\uff0c\u6211\u53ef\u4ee5\u8fde\u63a5\u5230\u8fdb\u7a0b(\u6bd4\u5982shell\u6216SSH)\u3002\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u8f6e\u8be2\u7ec8\u7aef\u4e0a\u7684\u6309\u952e\uff0c\u5c06\u8fd9\u4e9b\u6309\u952e\u4f20\u9012\u7ed9\u8fdb\u7a0b\uff0c\u7528\u8fdb\u7a0b\u8f93\u51fa\u66f4\u65b0pyte\u4eff\u771f\u5668\uff0c\u7136\u540e\u5c06\u6a21\u62df\u7684\u7ec8\u7aef\u5c4f\u5e55\u5199\u5165\u7ec8\u7aef-\u9700\u8981\u4e00\u4e9b\u6620\u5c04\u3002\u518d\u91cd\u590d\u4e00\u904d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u8fd8\u5fc5\u987b\u76d1\u89c6\u7ec8\u7aef\u662f\u5426\u8fde\u63a5(\u901a\u7535)\u6216\u65ad\u5f00\uff0c\u5e76\u76d1\u63a7\u8fdb\u7a0b\u8fd0\u884c\u72b6\u51b5\u3002\n\u5728\u5185\u5b58\u6602\u8d35\u7684\u65f6\u4ee3\uff0c\u50cf\u6211\u8fd9\u6837\u5728\u63a7\u5236\u5668\u5185\u5b58\u4e2d\u7ef4\u62a4\u5c4f\u5e55\u526f\u672c\u4e0d\u662f\u65e9\u671f\u63a7\u5236\u5668\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5207\u5272\u7ec8\u7aef\u63d0\u4f9b\u547d\u4ee4\u4ee5\u4ece\u663e\u793a\u7f13\u51b2\u5668\u8bfb\u53d6\u5e76\u67e5\u627e\u4e0e\u7279\u5b9a\u6a21\u5f0f\u5339\u914d\u7684\u5355\u5143\uff0c\u4f8b\u5982\u6307\u793a\u672a\u53d7\u4fdd\u62a4\u5b57\u6bb5\u7684\u5f00\u59cb\u7684\u5c5e\u6027\u3002\u6ca1\u6709\u540c\u6837\u7684\u8d44\u6e90\u9650\u5236\uff0c\u6211\u53d1\u73b0\u7ef4\u62a4\u5c4f\u5e55\u526f\u672c\u548c\u4f7f\u7528\u66f4\u6539\u7684\u5185\u5bb9\u66f4\u65b0\u7ec8\u7aef\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u53d7pyte\u7684\u542f\u53d1\uff0c\u6211\u7f16\u5199\u4e86pytn3270\uff0c\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9b\u7c7b\u4f3c\u5185\u5b58\u4eff\u771f\u7684\u7eafPython TN3270\u5e93\u3002\u5c06\u5176\u4e0e\u63a7\u5236\u5668\u96c6\u6210\u51e0\u4e4e\u4e0d\u9700\u8981\u66f4\u6539\uff1b\u6211\u9700\u8981\u505a\u7684\u6240\u6709\u4e0d\u540c\u4e4b\u5904\u5c31\u662f\u5c06\u5b57\u6bb5\u5c5e\u6027\u6620\u5c04\u52303270\u7ec8\u7aef\u5c5e\u6027\u5b57\u8282\u3002\u6211\u672c\u6765\u53ef\u4ee5\u4f7f\u7528x3270\uff0c\u4f46\u6211\u60f3\u66f4\u597d\u5730\u7406\u89e3telnet\u534f\u8bae\u548c3270\u6570\u636e\u6d41\u3002\u6211\u53ea\u5b9e\u73b0\u4e86\u6700\u4f4e\u9650\u5ea6\u7684TN3270\u534f\u8bae\uff0c\u4f46\u662f\u8fde\u63a5\u5230z/OS\u5c31\u8db3\u591f\u4e86\uff0c\u4e00\u4e2a\u7eafPython\u5e93\u53ef\u80fd\u4f1a\u5728\u672c\u9879\u76ee\u4e4b\u5916\u6d3e\u4e0a\u7528\u573a\u3002\n\u4eca\u5929\uff0cOEC\u8fdc\u4e0d\u80fd\u63d0\u4f9bIBM3174\u63a7\u5236\u5668\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f46\u5b83\u662f\u53ef\u7528\u7684\u3002\n\u9996\u5148\uff0c\u6211\u60f3\u6dfb\u52a0\u4e00\u4e2a\u8fde\u63a5\u83dc\u5355\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u9009\u62e9\u4e3b\u673a(\u5b83\u5f53\u524d\u53ea\u80fd\u8fde\u63a5\u5230\u5355\u4e2a\u4e3b\u673a)\u548c\u591a\u4e2a\u903b\u8f91\u7ec8\u7aef\u652f\u6301\u3002\u7a0d\u540e\u7684EAB\u548cTN3270E\u652f\u6301-\u6211\u9700\u8981\u5b9e\u73b0\u4e00\u4e9b\u7f3a\u5c11\u7684pytn3270\u529f\u80fd\u6765\u652f\u6301\u8fd9\u4e9b\u529f\u80fd\u3002\n\u6211\u6b63\u5728\u7814\u7a76\u4e00\u4e2a\u57fa\u4e8eFPGA\u7684\u63a5\u53e3\uff0c\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u65f6\u7684\u56fd\u5bb6\u534a\u5bfc\u4f53IC-\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e86\u89e3\u4e86\u66f4\u591a\u5173\u4e8e\u534f\u8bae\u548c\u4e00\u4e9bVerilog\u7684\u77e5\u8bc6\u3002\n\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9b\u611f\u5174\u8da3\uff0c\u6211\u5f88\u4e50\u610f\u6536\u5230\u60a8\u7684\u6765\u4fe1\u3002\u76ee\u524d\u5173\u4e8e\u8fd9\u4e9b\u7ec8\u7aef\u7684\u4fe1\u606f\u5f88\u5c11\uff0c\u6211\u53ef\u80fd\u628a\u73b0\u5b58\u7684\u4e1c\u897f\u548c\u5386\u53f2\u9519\u8bef\u5730\u62fc\u51d1\u5728\u4e00\u8d77\u4e86-\u6b22\u8fce\u4efb\u4f55\u66f4\u6b63\u3001\u6f84\u6e05\u6216\u5176\u4ed6\u4fe1\u606f\uff01", "note_en": "The IBM 3270 type terminal is a mainframe computer terminal. I&#39;ve long been fascinated by the IBM mainframe, and especially these terminals. Early models such as the 3278 and 3279 have a unique aesthetic, and their block-oriented design is so different from the ubiquitous VT series terminals.\n    I&#39;m not alone in wanting to  connect a real IBM terminal to the Hercules emulator. Unfortunately, it&#39;s difficult to find the necessary IBM 3174 terminal controller with Ethernet or Token Ring interface, version of the software that supports TCP/IP and in working condition. Also, they are large, noisy, and difficult to maintain, given the software is loaded from an uncommon 2.4 MB 5\u00bc-inch floppy disk - if you are lucky, there is a 20 MB hard disk option. So I decided to build my own and learn a little in the process.\n  According to IBM, the 3270 information display system was introduced in 1972, the iconic  3278 terminal 5 years later, in 1977. Color terminals arrived in 1979 with the 3279. Mixing IBM model numbers and dates is very confusing!\n  The 3270 is one of the most recognizable  block-oriented terminals. The  3270 data stream allows the programmer to describe a screen containing protected text, unprotected fields, and formatting attributes. Unprotected fields allow you to input or modify data. Instead of sending every key you press to the host immediately, as is the case with a character-oriented terminal, the terminal stores the input until you press an attention key - such as  enter. Only when you press an attention key is the input sent to the host, this improves the perceived response time over a slow or unreliable connection. It also reduces the host processing requirements allowing many more terminals to be connected to a host than could be with character-oriented terminals. It&#39;s not that different from an HTML form.\n  Exciting peripherals were available on early 3270 terminals, including light pens for improved navigation and magnetic card readers; unfortunately, I&#39;ve never seen these on eBay.\n  Terminals are connected to a controller by coax cable in a star topology. A balun can convert this to more common twisted pair cabling, although I think IBM would prefer you use their  cabling system. The controller is connected to the mainframe by different interfaces depending on whether it is a local or remote controller and year, interfaces include:\n    As a result, IBM 3174 and 3274 controllers come in many different shapes and sizes - from small desktop units, medium rack-mount, and large floor standing units.\n    Other companies, including Memorex, manufactured compatible terminals and controllers. Once personal computers became commonplace, terminals could be replaced with ISA, PCMCIA, and later PCI cards that allowed a PC running an emulator to connect using the same coax cable. Later, with the advent of LANs and TCP/IP, these connections were replaced with TN3270 telnet needing no additional hardware or coax cabling.\n  For customers that by now had a TCP/IP network but also a large number of physical terminals, the later 3174 controllers offered the ability to connect these terminals to the mainframe via telnet over TCP/IP. These are the controllers you want to connect to Hercules. It intrigued me that these later controllers also offered a VT100 emulation feature where a 3270 terminal could connect to a UNIX or VMS host via telnet as if it were a VT100. That seemed strange to me; if the terminal is block-oriented, it would seem impossible to emulate VT100 in a useful way.\n  The last IBM terminal was the 3483 introduced in the late 1990s. By then, the terminal resembled a thin-client and used industry-standard VGA display and PS/2 keyboard connections.\n  My initial search uncovered a description of the cabling used and the 3270 data stream, that is well-documented, but nothing about the protocol used between the terminal and the controller. It was not until I found datasheets for the now-obsolete chips used to build  PC interfaces that I found the detail I was looking for, from CHIPS and National Semiconductor:\n    Devices are connected point-to-point by coaxial cable with a characteristic impedance of 93 &amp;ohm, type RG-62 cable - unlike 10BASE2 Ethernet networks that use a bus topology and 50 &amp;ohm impedance cable. To reduce noise interference over long cable runs differential signaling is used, the specification allows up to 1.5 km between devices.\n  Data is sent at a bit rate of 2.3587 Mb/s using  Machester encoding. This encoding scheme ensures a transition (from high to low or low to high) in the middle of each bit, allowing the data to be recovered reliably by the receiver. A frame contains one or more 10-bit words; each word in a frame starts with a sync-bit and ends with a parity bit. Unique sequences indicate the start and end of a frame.\n    The controller initiates all communication; it sends a frame containing a command word and optional data words (think of these as parameters) to the terminal. The terminal responds with a frame containing one or more data words.\n  It turns out that there are two different types of terminal  CUT and  DFT. CUT type terminals rely on the control unit to process the 3270 data stream and convert this to basic operations such as move the cursor to this address and write these characters to the display buffer (known as the  regen buffer). The controller handles much of the intelligence people associate with 3270 terminals, meaning the CUT terminal logic is simpler than a comparable VT100. DFT type terminals can process the 3270 data stream themselves, and the controller passes this on to the terminal.\n  You can still find National Semiconductor DP8340 transmitters and DP8341 receivers on eBay, so I bought some along with the other components shown in the datasheet reference circuits. I had initially thought I&#39;d have to build an interface from scratch, but these transmitter and receiver ICs provided the data link layer handling for me.\n  I also found an IBM 3174-23R rack-mount controller with Token Ring interface and thought I was ready to go. Unfortunately, the control program floppy disk was corrupt, and only the diagnosis disk could be loaded. The diagnosis program did display menus on the terminal, which was sufficient to capture some traffic between the terminal and the controller for analysis.\n  I built a simple receiver circuit from the DP8341 datasheet on a breadboard, attached it to an Arduino Mega, and using a tee connector tapped the wire between controller and terminal. I was very excited when the  DATA AVAILABLE pin went high for the first time, and my interrupt handler was called. It took me a while to reliably read data from the receiver. I soon discovered I was overflowing the Arduino Mega&#39;s 8 KB of memory, and the data rate was too fast to to unload the data to my PC over the serial port in real-time.\n  The majority of the messages I captured were  poll commands from the controller and acknowledgment responses from the terminal. Because the controller initiates all communication, it has to poll the terminal to check for keypresses continually. After filtering out the no keypress messages, I was able to map the scan codes returned by the terminal to the keys.\n  I also captured  load address counter and  write data commands associated with the display buffer. Extracting the addresses was easy, but I did not see the data written to the display buffer in the  EBCDIC encoding that I expected based on the diagnosis interface shown on the terminal, it wasn&#39;t ASCII either. It turns out the terminal uses a different character encoding, I don&#39;t know what it&#39;s called and couldn&#39;t find any reference to it. I had enough examples from the diagnosis interface to build most of the mapping from captured data. When I added the DP8340 transmitter to the breadboard was able to generate a complete mapping after first writing &#34;hello world,&#34; of course!\n  3270 terminals have a status line shown at the bottom of the display. Other than the current cursor position, the status line is managed by the controller. Confusingly the status line starts at address  0 of the display buffer, although it is at the bottom of the screen, address  80 is the top-left cell in 80 column mode. Also, the character encoding for the status line is different and includes many unusual symbols.\n  Eventually, I was able to create a Python library,  pycoax, to serialize and deserialize 3270 frames - the Python code runs on your PC and communicates with the Arduino over serial (really USB).\n  Finally, I designed my first PCB using KiCad and sent the design off to  JLCPCB. $15 and a week later, I had 5 Arduino shields ready to assemble. The PCB was a considerable improvement over the breadboard circuit, and I noticed a dramatic reduction in receiver errors. Ok, I admit there was a routing mistake the first time around - I did have to order a revision!\n  My goal was to build a replacement for the IBM 3174 controller that I could use with Hercules. Now that I understood CUT type terminals don&#39;t process the 3270 data stream directly, I realized implementing VT100 emulation first would be easier than TN3270.\n  I found  pyte, which provides in-memory VT100 emulation that I could connect to a process (such as a shell or SSH). All I had to do was poll the terminal for keypresses, pass these to the process, update the pyte emulator with the process output and then write the emulated terminal screen to the terminal - some mapping required. And repeat. Other than that, I had to watch for a terminal being attached (powered on) or detached and monitor the process health.\n  Maintaining a copy of the screen in the controller memory as I do is not how early controllers operated in an era where memory was expensive. Instead, the CUT terminal provides commands to read from the display buffer and to find cells matching a particular pattern, such as an attribute indicating the start of an unprotected field. Without the same resource constraints, I found it far easier to maintain a copy of the screen and update the terminal with what changed.\n  Inspired by pyte, I wrote  pytn3270, a pure Python TN3270 library providing similar in-memory emulation. Integrating this with the controller required little change; all I had to do differently was to map the field attributes to the 3270 terminal attribute byte. I could have used x3270, but I wanted a better understanding of the telnet protocol and 3270 data stream. I&#39;ve only implemented the bare minimum of the TN3270 protocol, but it is enough to connect to z/OS, and a pure Python library may be useful beyond this project.\n  Today oec is far from providing all of the IBM 3174 controller features, but it is useable.\n  First, I want to add a connection menu so you can select the host (it can only currently connect to a single host) and multiple logical terminal support. Later EAB and TN3270E support - I&#39;ll need to implement some missing pytn3270 features to support those.\n  I&#39;m working on an FPGA based interface that doesn&#39;t depend on obsolete National Semiconductor ICs - learning a little more about the protocol and some Verilog in the process.\n  I&#39;d love to  hear from you if you are interested in any of this. There is very little out there currently about these terminals, I may have pieced what does exist and the history together incorrectly - any corrections, clarifications or additional information is welcome!", "posttime": "2020-05-28 08:04:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ibm3270,building,\u7ec8\u7aef", "title": "\u6784\u5efaIBM3270\u7ec8\u7aef\u63a7\u5236\u5668", "title_en": "Building an IBM 3270 terminal controller", "transed": 1, "url": "https://ajk.me/building-an-ibm-3270-terminal-controller", "via": "", "real_tags": ["ibm3270", "building", "\u7ec8\u7aef"]}, {"category": "", "categoryclass": "", "imagename": "6df6ff571c944ed2d5c0f8ccf96980b7.jpg", "infoid": 1004002, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u53d1\u5e03\u4e8640\u591a\u4e2a\u6d4b\u8bd5\u7248\u548c\u5019\u9009\u7248\u672c\u4e4b\u540e\uff0c\u6211\u4eec\u975e\u5e38\u5174\u594b\u5730\u63a8\u51fa\u4e86SnowPack 2.0\uff1a\u4e00\u4e2a\u7528\u4e8e\u73b0\u4ee3\u7f51\u7edc\u7684\u6784\u5efa\u7cfb\u7edf\u3002\nSnowPack 1.0\u7684\u8bbe\u8ba1\u76ee\u7684\u5f88\u7b80\u5355\uff1a\u5b89\u88c5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684NPM\u5305\u3002\u5f53\u65f6\u7684\u7406\u8bba\u662f\uff0cJavaScript\u5305\u662f\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u552f\u4e00\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u6346\u7ed1\u5668\u7684\u4e1c\u897f\u3002\u53bb\u6389\u8fd9\u4e00\u8981\u6c42\uff0c\u53bb\u6389\u6346\u7ed1\u5305\uff0c\u52a0\u5feb\u6bcf\u4e2a\u4eba\u7684web\u5f00\u53d1\u3002\n\u4f60\u731c\u600e\u4e48\u7740\uff1f\u554a\uff0c\u771f\u7075!\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u5f00\u53d1\u4eba\u5458\u5f00\u59cb\u4f7f\u7528SnowPack\u6765\u5b89\u88c5\u4ed6\u4eec\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u4f7f\u7528\u66f4\u5c11\u7684\u5de5\u5177\u6784\u5efa\u7f51\u7ad9\u3002\u4e00\u79cd\u5168\u65b0\u7684\u66f4\u5feb\u3001\u66f4\u8f7b\u7684\u5f00\u53d1\u7a81\u7136\u6210\u4e3a\u53ef\u80fd\u3002\nSnowPack 2.0\u662f\u4e3a\u8fd9\u4e2aweb\u5f00\u53d1\u7684\u65b0\u65f6\u4ee3\u8bbe\u8ba1\u7684\u6784\u5efa\u7cfb\u7edf\u3002SnowPack\u4ece\u60a8\u7684\u5f00\u53d1\u73af\u5883\u4e2d\u5220\u9664\u4e86\u6346\u7ed1\u5305\uff0c\u5229\u7528\u6d4f\u89c8\u5668\u4e2d\u7684\u672c\u5730ES\u6a21\u5757(ESM)\u8bed\u6cd5\u76f4\u63a5\u63d0\u4f9b\u6784\u5efa\u7684\u6587\u4ef6\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u901f\u5ea6\u66f4\u5feb\u7684\u5de5\u5177\uff0c\u5b83\u8fd8\u662fWeb\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u79cd\u65b0\u65b9\u6cd5\u3002\n\u6346\u7ed1\u662f\u4e00\u4e2aO(N)\u590d\u6742\u5ea6\u7684\u8fc7\u7a0b\u3002\u968f\u7740\u9879\u76ee\u7684\u53d1\u5c55\uff0c\u60a8\u7684\u5f00\u53d1\u6346\u7ed1\u7a0b\u5e8f\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u6765\u542f\u52a8\u5e76\u5bf9\u66f4\u6539\u505a\u51fa\u53cd\u5e94\u3002\u4e00\u4e9b\u6346\u7ed1\u5305\u751a\u81f3\u53ef\u80fd\u5177\u6709O(n^2)\u590d\u6742\u5ea6\uff1a\u968f\u7740\u9879\u76ee\u7684\u589e\u957f\uff0c\u60a8\u7684\u5f00\u53d1\u73af\u5883\u4f1a\u53d8\u5f97\u6210\u500d\u5730\u53d8\u6162\uff0c\u56e0\u4e3a\u5b83\u5728\u542f\u52a8\u548c\u6bcf\u6b21\u66f4\u6539\u65f6\u90fd\u8981\u5904\u7406\u4ee3\u7801\u62c6\u5206\u3001\u6811\u6296\u52a8\u548c\u5176\u4ed6\u6346\u7ed1\u5305\u6392\u5217\u3002\u5728\u5904\u7406\u6570\u767e\u751a\u81f3\u6570\u5343\u4e2a\u6587\u4ef6\u7684\u5f00\u53d1\u671f\u95f4\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u7406\u60f3\u3002\nSnowPack\u662f\u4e00\u4e2aO(1)\u6784\u5efa\u7cfb\u7edf\u3002\u8fd9\u4e2a\u672f\u8bed\u6700\u65e9\u662f\u7531Ives van Hoorne\u9996\u521b\u7684\uff0c\u5b83\u5b8c\u7f8e\u5730\u6982\u62ec\u4e86\u6211\u4eec\u7684\u613f\u666f\uff1a\u6bcf\u4e2a\u6587\u4ef6\u90fd\u901a\u8fc7\u7ebf\u6027\u8f93\u5165&&gt\uff1bbuild-&gt\uff1boutput build\u7ba1\u9053\uff0c\u7136\u540e\u8f93\u51fa\u5230\u6d4f\u89c8\u5668(\u6216\u8005\u6700\u7ec8\u7684\u6784\u5efa\u76ee\u5f55\uff0c\u5982\u679c\u60a8\u662f\u4e3a\u751f\u4ea7\u800c\u6784\u5efa\u7684\u8bdd)\u3002\u591a\u6587\u4ef6\u6346\u7ed1\u6210\u4e3a\u5355\u6587\u4ef6\u6784\u5efa\u6b65\u9aa4\u3002\n\u6700\u540e\u4e00\u70b9\u5f88\u5173\u952e\uff1a\u6bcf\u4e2a\u6784\u5efa\u7684\u6587\u4ef6\u90fd\u88ab\u5355\u72ec\u7f13\u5b58\u5e76\u65e0\u9650\u671f\u5730\u91cd\u7528\u3002\u5982\u679c\u60a8\u4ece\u4e0d\u66f4\u6539\u6587\u4ef6\uff0c\u5219\u6c38\u8fdc\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u5efa\u5b83\u3002\n\u8fd0\u884cSnowpack dev\u6765\u542f\u52a8\u65b0\u7684web\u5f00\u53d1\u73af\u5883\uff0c\u60a8\u9996\u5148\u4f1a\u6ce8\u610f\u5230\u7684\u662fO(1)\u6784\u5efa\u5de5\u5177\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u79ef\u96ea\u542f\u52a8\u65f6\u95f4\u4e0d\u523050\u6beb\u79d2\u3002\u8fd9\u4e0d\u662f\u6253\u5b57\u9519\u8bef\uff1a50\u6beb\u79d2\u6216\u66f4\u5c11\u3002\n\u65e0\u9700\u5f00\u59cb\u6346\u7ed1\u5de5\u4f5c\uff0c\u60a8\u7684\u670d\u52a1\u5668\u5c06\u7acb\u5373\u542f\u52a8\u3002\u5728\u60a8\u7684\u7b2c\u4e00\u4e2a\u9875\u9762\u52a0\u8f7d\u65f6\uff0cSnowpack\u4f1a\u6784\u5efa\u60a8\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7684\u6587\u4ef6\uff0c\u7136\u540e\u7f13\u5b58\u5b83\u4eec\u4ee5\u5907\u5c06\u6765\u4f7f\u7528\u3002\u5373\u4f7f\u60a8\u7684\u9879\u76ee\u5305\u542b\u4e00\u767e\u4e07\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\uff0cSnowPack\u4e5f\u53ea\u751f\u6210\u52a0\u8f7d\u5f53\u524d\u9875\u9762\u6240\u9700\u7684\u6587\u4ef6\u3002\u8fd9\u5c31\u662f\u79ef\u96ea\u4fdd\u6301\u5feb\u901f\u7684\u539f\u56e0\u3002\nSnowPack dev\u5305\u62ec\u4e00\u4e2a\u5f00\u53d1\u670d\u52a1\u5668\u548c\u4e00\u7cfb\u5217\u719f\u6089\u7684\u5f00\u7bb1\u5373\u7528\u529f\u80fd\uff1a\n\u6784\u5efa\u811a\u672c\u5141\u8bb8\u60a8\u8fde\u63a5\u60a8\u6700\u559c\u6b22\u7684\u6784\u5efa\u5de5\u5177\u3002\u4f7f\u7528SnowPack\uff0c\u60a8\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u6784\u5efa\u8868\u793a\u4e3a\u7ebf\u6027\u8f93\u5165-&gt\uff1b\u6784\u5efa-&gt\uff1b\u8f93\u51fa\u5de5\u4f5c\u6d41\u3002\u8fd9\u5141\u8bb8Snowpack\u901a\u8fc7\u7ba1\u9053\u5c06\u60a8\u7684\u6587\u4ef6\u4f20\u5165\u548c\u4f20\u51fa\u4efb\u4f55\u73b0\u6709\u7684UNIX-y CLI\u5de5\u5177\uff0c\u800c\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u3002\n//nowPack.config.json{&#34\uff1bscript&#34\uff1b\uff1a{//\u6bcf&#34\uff1b*.css&34\uff1b\u6587\u4ef6\u901a\u8fc7PostCSS CLI//stdin(\u6e90\u6587\u4ef6)&gt\uff1bpostcss&gt\uff1bstdout(\u751f\u6210\u8f93\u51fa)&#34\uff1bbuild\uff1acss&#34\uff1b\uff1a&#34\uff1bpostcss&34\uff1b\uff0c}}\u3002\n\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7\u60a8\u7684Package.json\u201c\u811a\u672c\u201d\u914d\u7f6e\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u719f\u6089\u8fd9\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u559c\u6b22\u76f4\u63a5\u4f7f\u7528CLI\u7684\u7b80\u5355\u6027\uff0c\u4e0d\u9700\u8981\u4e0d\u5fc5\u8981\u7684\u63d2\u4ef6\u7cfb\u7edf\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u6a21\u5f0f\u80fd\u63d0\u4f9b\u7c7b\u4f3c\u7684\u76f4\u89c2\u8bbe\u8ba1\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u66f4\u597d\u5730\u63a7\u5236\u60a8\u7684\u6784\u5efa(\u6216\u8005\u5e0c\u671b\u7f16\u5199\u60a8\u81ea\u5df1\u7684\u6784\u5efa\u5de5\u5177)\uff0cSnowPack\u8fd8\u652f\u6301\u7b2c\u4e09\u65b9JavaScript\u63d2\u4ef6\u3002\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u6587\u6863\uff0c\u4e86\u89e3\u6709\u5173\u81ea\u5b9a\u4e49\u6784\u5efa\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSnowPack\u5e76\u4e0d\u53cd\u5bf9\u6346\u7ed1\u751f\u4ea7\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u63a8\u8350\u5b83\u3002\u6587\u4ef6\u7f29\u5c0f\u3001\u538b\u7f29\u3001\u6d88\u9664\u6b7b\u7801\u548c\u7f51\u7edc\u4f18\u5316\u90fd\u53ef\u4ee5\u8ba9\u6346\u7ed1\u7ad9\u70b9\u4e3a\u60a8\u7684\u7528\u6237\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u8fd9\u662f\u4efb\u4f55\u6784\u5efa\u5de5\u5177\u7684\u6700\u7ec8\u76ee\u6807\u3002\nSnowPack\u5c06\u6346\u7ed1\u89c6\u4e3a\u6700\u7ec8\u7684\u3001\u4ec5\u9650\u751f\u4ea7\u7684\u6784\u5efa\u4f18\u5316\u3002\u901a\u8fc7\u5c06\u6346\u7ed1\u4f5c\u4e3a\u6700\u540e\u4e00\u6b65\uff0c\u60a8\u53ef\u4ee5\u907f\u514d\u5728\u540c\u4e00\u4e2a\u5de8\u5927\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6df7\u5408\u4f7f\u7528\u6784\u5efa\u903b\u8f91\u548c\u6346\u7ed1\u903b\u8f91\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u60a8\u7684\u6346\u7ed1\u5668\u83b7\u5f97\u5df2\u7ecf\u6784\u5efa\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u53ea\u4e13\u6ce8\u4e8e\u5b83\u6700\u64c5\u957f\u7684\u4e8b\u60c5\uff1a\u6346\u7ed1\u3002\nSnowPack\u4e3awebpack\u548cAmp\uff1bParcel\u7ef4\u62a4\u5b98\u65b9\u63d2\u4ef6\u3002\u8fde\u63a5\u60a8\u6700\u559c\u6b22\u7684\u7f51\u7ad9\uff0c\u7136\u540e\u8fd0\u884cSnowpack Build\u6765\u6784\u5efa\u60a8\u7684\u7ad9\u70b9\u4ee5\u7528\u4e8e\u751f\u4ea7\u3002\n\u5982\u679c\u4f60\u4e0d\u60f3\u7528\u6346\u7ed1\u673a\uff0c\u4e5f\u6ca1\u5173\u7cfb\u3002SnowPack\u7684\u9ed8\u8ba4\u6784\u5efa\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u8fd0\u884c\u826f\u597d\u7684\u975e\u6346\u7ed1\u7ad9\u70b9\u3002\u8fd9\u5c31\u662f\u79ef\u96ea\u9879\u76ee\u4ece\u4e00\u5f00\u59cb\u5c31\u8981\u505a\u7684\uff1a\u4f7f\u7528\u6346\u7ed1\u5668\u662f\u56e0\u4e3a\u4f60\u60f3\u8981\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u9700\u8981\u8fd9\u6837\u505a\u3002\n\u4eca\u5929\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u4e0e\u5927\u5bb6\u5206\u4eab\u8fd9\u4e00\u5207\u3002\u4e0b\u8f7dSnowPack\uff0c\u4f53\u9a8c\u7f51\u7edc\u53d1\u5c55\u7684\u672a\u6765\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u6709\u4e00\u4e2a\u73b0\u6709\u7684SnowPack\u5e94\u7528\u7a0b\u5e8f\uff0cSnowPack 2.0\u5c06\u6307\u5bfc\u60a8\u66f4\u65b0\u4efb\u4f55\u8fc7\u65f6\u7684\u914d\u7f6e\u3002SnowPack\u6700\u521d\u7684\u8f6f\u4ef6\u5305\u5b89\u88c5\u7a0b\u5e8f\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u901a\u8fc7\u65b0\u7684dev&amp\uff1bbuild\u547d\u4ee4\uff0cSnowpack\u751a\u81f3\u53ef\u4ee5\u4e3a\u60a8\u7ba1\u7406\u60a8\u7684Web\u8f6f\u4ef6\u5305\u3002\n\u5f00\u59cb\u4f7f\u7528\u79ef\u96ea\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u79ef\u96ea\u5e94\u7528\u7a0b\u5e8f(CSA)\u3002CSA\u4f7f\u7528\u9884\u914d\u7f6e\u7684\u96ea\u5730\u9a71\u52a8\u5f00\u53d1\u73af\u5883\u81ea\u52a8\u4e3a\u60a8\u521d\u59cb\u5316\u5165\u95e8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u611f\u8c22\u6211\u4eec\u6240\u6709\u768480\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u611f\u8c22\u4ed6\u4eec\u4f7f\u8fd9\u4e2a\u7248\u672c\u6210\u4e3a\u53ef\u80fd\u3002\u9a6c\u4e91\u611f\u8c22Melissa McEwen&amp\uff1b@TheoOnTwitch\u5e2e\u52a9\u7f16\u8f91\u4e86\u8fd9\u7bc7\u5e16\u5b50\u3002", "note_en": "After 40+ beta versions &amp; release candidates we are very excited to introduce  Snowpack 2.0: A build system for the modern web.\n     Snowpack 1.0 was designed for a simple mission: install npm packages to run directly in the browser. The theory was that JavaScript packages are the only thing still   requiring the use of a bundler during development. Remove that requirement, remove the bundler, and speed up web development for everyone.\n Guess what? It worked! Thousands of developers started using Snowpack to install their dependencies and build websites with less tooling. A whole new type of faster, lighter-weight development suddenly became possible.\n Snowpack 2.0 is a build system designed for this new era of web development. Snowpack removes the bundler from your dev environment, leveraging native  ES Module (ESM) syntax in the browser to serve built files directly. This isn\u2019t just a faster tool, it\u2019s a new approach to web build systems.\n   Bundling is a process of  O(n) complexity. As your project grows, your dev bundler takes longer to startup and react to changes. Some bundlers may even have  O(n^2) complexity: as your project grows, your dev environment gets   exponentially slower as it handles code splitting, tree-shaking, and other bundle permutations on startup and on every change. Neither scenario is ideal during development when you\u2019re working with hundreds or even thousands of files.\n Snowpack is a O(1) build system. The term was first coined by  Ives van Hoorne and it perfectly encapsulates our vision: Every file goes through a linear  input -&gt; build -&gt; output build pipeline and then out to the browser (or the final build directory, if you\u2019re building for production). Mutli-file bundling becomes a single-file build step.\n   That last point is key: every built file is cached individually and reused indefinitely.  If you never change a file, you will never need to re-build it again.\n   Run  snowpack dev to start your new web dev environment and the first thing you\u2019ll notice is  how flippin\u2019 fast O(1) build tooling is. Snowpack starts up in less than 50ms. That\u2019s no typo: 50 milliseconds or less.\n With no bundling work needed to start, your server spins up immediately. On your very first page load, Snowpack builds your first requested files and then caches them for future use. Even if your project contains a million different files, Snowpack only builds the files needed to load the current page. This is how Snowpack stays fast.\n snowpack dev includes a development server and a bunch of familiar features right out of the box:\n   Build Scripts let you connect your favorite build tools. With Snowpack, you express every build as a linear  input -&gt; build -&gt; output workflow. This allow Snowpack to pipe your files into and out of any existing UNIX-y CLI tools without the need for a special plugin ecosystem.\n // snowpack.config.json  {   &#34;scripts&#34; :  {   // Pipe every &#34;*.css&#34; file through the PostCSS CLI   // stdin (source file) &gt; postcss &gt; stdout (build output)   &#34;build:css&#34; :  &#34;postcss&#34; ,   }  }\n If you\u2019ve ever used your  package.json \u201cscripts\u201d config, this format should feel familiar. We love the simplicity of using your CLIs directly without an unnecessary plugin system. We hope this pattern offers a similar intuitive design.\n If you want more control over your build (or want to write your own build tool) Snowpack also supports  third-party JavaScript plugins.  Check out our docs to learn more about customizing your build.\n   To be clear, Snowpack isn\u2019t against bundling for production. In fact, we recommend it. File minification, compression, dead-code elimination and network optimizations can all make a bundled site run faster for your users, which is the ultimate goal of any build tool.\n Snowpack treats bundling as a final, production-only build optimization. By bundling as the final step, you avoid mixing build logic and bundle logic in the same huge configuration\u00a0file. Instead, your bundler gets already-built files and can focus solely on what it does best: bundling.\n Snowpack maintains official plugins for both Webpack &amp; Parcel. Connect your favorite, and then run  snowpack build to build your site for production.\n  If you don\u2019t want to use a bundler, that\u2019s okay too. Snowpack\u2019s default build will give you an unbundled site that also runs just fine. This is what the Snowpack project has been all about from the start:  Use a bundler because you want to, and not because you need to.\n  We are so excited to share this all with you today. Download Snowpack to experience the future of web development.\n  If you already have an existing Snowpack application, Snowpack 2.0 will walk you through updating any outdated configuration. Snowpack\u2019s original package installer still works as expected, and with the new  dev &amp;  build commands Snowpack even manages your web packages for you.\n   The easiest way to get started with Snowpack is with  Create Snowpack App (CSA). CSA automatically initializes a starter application for you with a pre-configured, Snowpack-powered dev environment.\n     Thank you to all of our  80+ contributors for making this release possible. ma Thanks to  Melissa McEwen &amp;  @TheoOnTwitch for helping to edit this post.", "posttime": "2020-05-28 07:18:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u7ecd,introducing,\u6784\u5efa", "title": "\u4ecb\u7ecd\u79ef\u96ea2.0", "title_en": "Introducing Snowpack 2.0", "transed": 1, "url": "https://www.snowpack.dev/posts/2020-05-26-snowpack-2-0-release/", "via": "", "real_tags": ["\u4ecb\u7ecd", "\u6784\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "htmx\u5141\u8bb8\u60a8\u4f7f\u7528\u5c5e\u6027\u5728HTML\u4e2d\u76f4\u63a5\u8bbf\u95eeAjax\u3001WebSockets\u548cServer Sent Event\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u8d85\u6587\u672c\u7684\u7b80\u5355\u6027\u548c\u5f3a\u5927\u529f\u80fd\u6784\u5efa\u73b0\u4ee3\u7528\u6237\u754c\u9762\u3002\n&lt\uff1b\uff01--\u4eceunpkg\u52a0\u8f7d--&gt\uff1b&lt\uff1bScript src=&#34\uff1bhttps://unpkg.com/htmx.org@0.0.4&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1b\uff01--\u8ba9\u6309\u94ae\u901a\u8fc7AJAX\u53d1\u5e03\u5355\u51fb--&gt\uff1b&lt\uff1b\u6309\u94aeHX-POST=&#34\uff1b/\u5355\u51fb&#34\uff1bHX-SWAP=&#34\uff1b\u5916\u90e8HTML&#34\uff1b&gt\uff1b\u5355\u51fb\u6211&lt\uff1b/\u6309\u94ae&gt\uff1b\n&#34\uff1b\u5f53\u7528\u6237\u5355\u51fb\u6b64\u6309\u94ae\u65f6\uff0c\u5411/CLICED\u53d1\u51faAJAX\u8bf7\u6c42\uff0c\u5e76\u5c06\u6574\u4e2a\u6309\u94ae\u66ff\u6362\u4e3a\u54cd\u5e94&#34\uff1b", "note_en": "htmx allows you to access  AJAX, WebSockets and  Server Sent Eventsdirectly in HTML, using  attributes, so you can build modern user interfaces with the  simplicity and power of hypertext\n   &lt;!-- Load from unpkg --&gt; &lt;script src=&#34;https://unpkg.com/htmx.org@0.0.4&#34;&gt;&lt;/script&gt; &lt;!-- have a button POST a click via AJAX --&gt; &lt;button hx-post=&#34;/clicked&#34; hx-swap=&#34;outerHTML&#34;&gt; Click Me &lt;/button&gt;\n  &#34;When a user clicks on this button, issue an AJAX request to /clicked, and replace the entire button with the response&#34;", "posttime": "2020-05-28 07:03:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u7528\u4e8e,high,ajax", "title": "htmx-\u7528\u4e8eHTML\u7684\u9ad8\u6027\u80fd\u5de5\u5177", "title_en": "htmx \u2013 high power tools for HTML", "transed": 1, "url": "https://htmx.org/", "via": "", "real_tags": ["\u6027\u80fd", "\u7528\u4e8e", "high", "ajax"]}, {"category": "", "categoryclass": "", "imagename": "0b37347f047636e8d42e1c654625a8da.jpeg", "infoid": 1003999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a7a\u519b\u4e00\u53f7(\u8def\u900f\u793e)-\u767d\u5bab\u53d1\u8a00\u4eba\u5468\u4e09\u8868\u793a\uff0c\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u4e0d\u4e45\u5c06\u7b7e\u7f72\u4e00\u9879\u5173\u4e8e\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u547d\u4ee4\u3002\n\u53d1\u8a00\u4eba\u51ef\u8389\u00b7\u9ea6\u514b\u7eb3\u5c3c(Kayleigh McEnany)\u5728\u4e0e\u7279\u6717\u666e\u4e00\u8d77\u4ece\u4f5b\u7f57\u91cc\u8fbe\u5dde\u524d\u5f80\u534e\u76db\u987f\u7684\u7a7a\u519b\u4e00\u53f7\u4e0a\u5bf9\u8bb0\u8005\u53d1\u8868\u4e86\u4e0a\u8ff0\u8a00\u8bba\u3002\u4e00\u5929\u524d\uff0c\u63a8\u7279\u516c\u53f8(Twitter Inc)\u5bf9\u7279\u6717\u666e\u7684\u4e00\u4e9b\u63a8\u6587\u53d1\u51fa\u8b66\u544a\uff0c\u4fc3\u4f7f\u8bfb\u8005\u5bf9\u603b\u7edf\u7684\u8bf4\u6cd5\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002", "note_en": "ABOARD AIR FORCE ONE (Reuters) - U.S. President Donald Trump will sign an executive order shortly regarding social media companies, a White House spokeswoman said on Wednesday.\n Spokeswoman Kayleigh McEnany made the remark to reporters aboard Air Force One, traveling with Trump to Washington from Florida a day after Twitter Inc attached a warning to some of his tweets prompting readers to fact-check the president\u2019s claims.", "posttime": "2020-05-28 07:02:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5a92\u4f53,sign", "title": "\u7279\u6717\u666e\u5c06\u7b7e\u7f72\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u4ee4", "title_en": "Trump will sign an executive order on social media companies", "transed": 1, "url": "https://www.reuters.com/article/us-twitter-trump-executive-order/trump-will-sign-an-executive-order-on-social-media-companies-white-house-spokeswoman-idUSKBN2333BT", "via": "", "real_tags": ["\u5a92\u4f53", "sign"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5728Facebook\u4e0a\u5173\u6ce8\u6211\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u6bcf\u5929\u90fd\u5728\u53d1\u5e03\u51a0\u72b6\u75c5\u6bd2\u7684\u7edf\u8ba1\u6570\u636e\u3002\u6211\u4f7f\u7528Johns Hopkins GitHub\u5b58\u50a8\u5e93\u4e2d\u7684\u6bcf\u65e5\u66f4\u65b0\u6765\u751f\u6210\u8fd9\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\n\u8d77\u521d\uff0c\u6211\u53ea\u662f\u624b\u5de5\u5c06\u6570\u636e\u590d\u5236\u5230\u7535\u5b50\u8868\u683c\u4e2d\u3002\u4f46\u8fd9\u5f88\u5feb\u5c31\u53d8\u5f97\u5355\u8c03\u4e4f\u5473\u4e86\u3002\n\u7136\u540e\uff0c\u57283\u6708\u4e0b\u65ec\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u5c0fClojure\u7a0b\u5e8f\u6765\u63d0\u53d6\u548c\u5904\u7406\u6570\u636e\u3002\u6bcf\u5929\u65e9\u4e0a\u6211\u90fd\u4f1a\u542f\u52a8\u56de\u8d2d\uff0c\u7136\u540e\u8fd0\u884c\u6211\u7684\u5c0f\u7a0b\u5e8f\u3002\u5b83\u8bfb\u53d6\u6587\u4ef6\u3001\u8ba1\u7b97\u6570\u5b66\u5e76\u6253\u5370\u7ed3\u679c\u3002\n\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u5bf9\u8fd9\u4e2a\u7a0b\u5e8f\u505a\u4e86\u76f8\u5f53\u591a\u7684\u5c0f\u4fee\u6539\uff1b\u800c\u4e14\u5b83\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u589e\u957f\u3002\u5728\u8fdb\u884c\u8fd9\u4e9b\u8c03\u6574\u65f6\uff0c\u6211\u9009\u62e9\u4f7f\u7528\u4e0d\u540c\u7684\u89c4\u7a0b\uff1aREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u3002\nREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u5728Clojure\u5708\u5b50\u91cc\u975e\u5e38\u6d41\u884c\u3002\u5b83\u4e5f\u5f88\u6709\u8bf1\u60d1\u529b\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u60a8\u53ef\u4ee5\u5728REPL\u4e2d\u5c1d\u8bd5\u4e00\u4e9b\u5b9e\u9a8c\uff0c\u4ee5\u786e\u4fdd\u60a8\u6709\u6b63\u786e\u7684\u60f3\u6cd5\u3002\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u60f3\u6cd5\u5728\u4ee3\u7801\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u3002\u6700\u540e\uff0c\u901a\u8fc7\u5728REPL\u8c03\u7528\u8be5\u51fd\u6570\u6765\u6d4b\u8bd5\u8be5\u51fd\u6570\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4ee4\u4eba\u6ee1\u610f\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u5468\u671f\u65f6\u95f4-\u4ee3\u7801\u5b9e\u9a8c\u548cREPL\u6d4b\u8bd5\u4e4b\u95f4\u7684\u65f6\u95f4-\u51e0\u4e4e\u4e0eTDD\u4e00\u6837\u5c0f\u3002\u8fd9\u4f7f\u4eba\u4eec\u5bf9\u89e3\u51b3\u65b9\u6848\u5145\u6ee1\u4fe1\u5fc3\u3002\u5b83\u4f3c\u4e4e\u8fd8\u8282\u7701\u4e86\u6a21\u62df\u548c\u521b\u5efa\u5047\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u81f3\u5c11\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u53ef\u4ee5\u5728REPL\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u771f\u5b9e\u7684\u751f\u4ea7\u6570\u636e\u3002\u56e0\u6b64\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u6bd4TDD\u8d70\u5f97\u66f4\u5feb\u3002\n\u4f46\u540e\u6765\uff0c\u57284\u6708\u4e0b\u65ec\uff0c\u6211\u60f3\u505a\u4e00\u4e9b\u6bd4\u5f80\u5e38\u66f4\u590d\u6742\u7684\u4e8b\u60c5\u3002\u8fd9\u9700\u8981\u5bf9\u6211\u7684\u57fa\u672c\u7ed3\u6784\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\u3002\u7a81\u7136\u6211\u53d1\u73b0\u81ea\u5df1\u5145\u6ee1\u4e86\u6050\u60e7\u3002\u6211\u65e0\u6cd5\u786e\u4fdd\u8fd9\u4e9b\u8bbe\u8ba1\u66f4\u6539\u4e0d\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u7834\u574f\u7cfb\u7edf\u3002\u5982\u679c\u6211\u505a\u4e86\u8fd9\u4e9b\u66f4\u6539\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8f93\u51fa\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u90fd\u6ca1\u6709\u635f\u574f\u3002\u56e0\u6b64\uff0c\u6211\u63a8\u8fdf\u4e86\u6539\u9769\uff0c\u76f4\u5230\u6211\u53ef\u4ee5\u9f13\u8d77\u52c7\u6c14\uff0c\u628a\u9700\u8981\u7684\u4e13\u95e8\u65f6\u95f4\u653e\u5728\u4e00\u8fb9\u3002\n\u8fd9\u4e2a\u53d8\u5316\u5e76\u4e0d\u592a\u75db\u82e6\u3002Clojure\u662f\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u7684\u8bed\u8a00\u3002\u4f46\u9a8c\u8bc1\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u8fd9\u5bfc\u81f4\u6211\u5728\u90e8\u7f72\u7a0b\u5e8f\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef-4\u5929\u540e\u6211\u6355\u6349\u5230\u7684\u4e00\u4e2a\u5c0f\u9519\u8bef\u3002\u8fd9\u4e2a\u9519\u8bef\u8feb\u4f7f\u6211\u56de\u53bb\u66f4\u6b63\u6211\u751f\u6210\u7684\u6570\u636e\u548c\u56fe\u8868\u3002\n\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4fee\u6539\u8bbe\u8ba1\uff1f\u56e0\u4e3a\u6211\u6ca1\u6709\u5632\u7b11\u548c\u521b\u9020\u5047\u6570\u636e\u3002\u6211\u7684\u51fd\u6570\u53ea\u662f\u76f4\u63a5\u4ecerepo\u6587\u4ef6\u4e2d\u8bfb\u53d6\u3002\u6ca1\u6709\u529e\u6cd5\u7ed9\u4ed6\u4eec\u4f20\u9012\u5047\u6570\u636e\u3002\u6211\u9700\u8981\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u4e0e\u5632\u7b11\u548c\u4f2a\u9020\u6570\u636e\u6240\u9700\u7684\u8bbe\u8ba1\u66f4\u6539\u5b8c\u5168\u76f8\u540c\u3002\n\u5982\u679c\u6211\u575a\u6301TDD\u539f\u5219\uff0c\u6211\u5c31\u4f1a\u81ea\u52a8\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\uff0c\u5c31\u4e0d\u4f1a\u9762\u4e34\u6050\u60e7\u3001\u5ef6\u8fdf\u548c\u9519\u8bef\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0cTDD\u4f1a\u5f3a\u8feb\u6211\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u6b63\u662f\u6211\u6700\u7ec8\u9700\u8981\u7684\u8bbe\u8ba1\u66f4\u6539\uff1f\u4e0d\u7528\u8c22\u3002\u4e3a\u4e86\u4f20\u9012\u5b64\u7acb\u7684\u8f93\u5165\u548c\u6536\u96c6\u5b64\u7acb\u7684\u8f93\u51fa\uff0cTDD\u5f3a\u52a0\u7ed9\u6211\u4eec\u7684\u89e3\u8026\u51e0\u4e4e\u603b\u662f\u5f3a\u8c03\u7075\u6d3b\u6027\u548c\u4fc3\u8fdb\u53d8\u5316\u7684\u8bbe\u8ba1\u3002\n\u6240\u4ee5\u6211\u5df2\u7ecf\u5438\u53d6\u4e86\u6559\u8bad\u3002REPL\u9a71\u52a8\u7684\u5f00\u53d1\u611f\u89c9\u6bd4TDD\u66f4\u5bb9\u6613\u3001\u66f4\u5feb\uff1b\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u53c8\u56de\u5230TDD\u4e86\u3002", "note_en": "If you follow me on facebook you know that I\u2019ve been publishing daily CoronaVirus statistics. I generate these statistics using the daily updates in the Johns Hopkins github  repository.\n At first I just hand copied the data into a spreadsheet. But that became tedious quite rapidly.\n Then, in late March, I wrote a little Clojure program to extract and process the data. Every morning I pull the repo, and then run my little program. It reads the files, does the math, and prints the results.\n  But over the last several weeks I\u2019ve made quite a few small modifications to the program; and it has grown substantially. In making these adaptations I chose to use a different discipline: REPL Driven Design.\n REPL Driven Design is quite popular in Clojure circles. It\u2019s also quite seductive. The idea is that you try some experiments in the REPL to make sure you\u2019ve got the right ideas. Then you write a function in your code using those idea. Finally, you test that function by invoking it at the REPL.\n It turns out that this is a very satisfying way to work. The cycle time \u2013 the time between a code experiment and the test at the REPL \u2013 is nearly as small as TDD. This breeds lots of confidence in the solution. It also seems to save the time needed to mock, and create fake data because, at least in my case, I could use real production data in my REPL tests. So, overall, it felt like I was moving faster than I would have with TDD.\n But then, in late April, I wanted to do something a little more complicated than usual. It required a design change to my basic structure. And suddenly I found myself full of fear. I had no way to ensure that those design changes wouldn\u2019t leave the system broken in some way. If I made those changes, I\u2019d have to examine every output to make sure that none of them had broken. So I postponed the change until I could muster the courage, and set aside the dedicated time it would require.\n The change was not too painful. Clojure is an easy language to work with. But the verfication was not trivial, which led me to deploy the program with a small bug \u2013 a bug I caught 4 days later. That bug forced me to go back and correct the data and graphs that I generated.\n Why did I need the design change? Because I was not mocking and creating fake data. My functions just read from the repo files directly. There was no way to pass them fake data. The design change I needed to make was precisely the same as the design change that I\u2019d have needed for mocking and fake data.\n Had I stuck with the TDD discipline I would have automatically made that design change, and I would not have faced the fear, the delay, and the error.\n Is it ironic that the very design change that TDD would have forced upon me was the design change I eventually needed? Not at all. The decoupling that TDD forces upon us in order to pass isolated inputs and gather isolated outputs is almost always the design that fascilitates flexibility and promotes change.\n So I\u2019ve learned my lesson. REPL driven development feels easier and faster than TDD; but it is not. Next time, it\u2019s back to TDD for me.", "posttime": "2020-05-28 07:02:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u9a71\u52a8,driven,tdd", "title": "REPL\u9a71\u52a8\u7684\u8bbe\u8ba1", "title_en": "REPL Driven Design", "transed": 1, "url": "http://blog.cleancoder.com/uncle-bob/2020/05/27/ReplDrivenDesign.html", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u9a71\u52a8", "driven", "tdd"]}, {"category": "", "categoryclass": "", "imagename": "9947574ad946f0dbe022efabe4ac64a4.jpg", "infoid": 1003997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u897f\u96c5\u56fe-\u5df2\u6545\u4fdd\u7f57\u00b7\u827e\u4f26(Paul Allen)\u521b\u7acb\u7684\u5730\u533a\u6587\u5316\u673a\u6784\uff0c\u5305\u62ec\u897f\u7eb3\u9a6c\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\uff0c\u5728\u74e6\u80af\u516c\u53f8(Vulcan Inc.)\u4e4b\u540e\u9762\u4e34\u6c38\u4e45\u5173\u95ed\u7684\u53ef\u80fd\u6027\u3002\u5468\u56db\u5ba3\u5e03\uff0c\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u706b\u795e\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u706b\u795e\u5236\u4f5c\u516c\u53f8\u3002\n\u5728\u74e6\u80af\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u8be5\u7ec4\u7ec7\u63d0\u5230\u4e86\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u7684\u7834\u574f\u6027\u5f71\u54cd\uff0c\u4ee5\u53ca\u57282018\u5e74\u5fae\u8f6f\u8054\u5408\u521b\u59cb\u4eba\u827e\u4f26\u53bb\u4e16\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u8bc4\u4f30\u5176\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7684\u6f14\u53d8\u3002\n\u867d\u7136\u6301\u7eed\u7684\u5065\u5eb7\u5371\u673a\u5bfc\u81f4\u8bb8\u591a\u4f01\u4e1a\u5728\u5dde\u653f\u5e9c\u5f3a\u5236\u5173\u95ed\u671f\u95f4\u5173\u95ed\uff0c\u4f46\u74e6\u80af\u7684\u4e3e\u52a8\u8ba9\u4eba\u6000\u7591\u5b83\u7684\u4e00\u4e9b\u7ec4\u7ec7\u662f\u5426\u4f1a\u56de\u6765\u3002\n\u8fd9\u4e00\u4e3e\u63aa\u5f71\u54cd\u4e86\u5386\u53f2\u60a0\u4e45\u7684\u897f\u7eb3\u9a6c\u535a\u7269\u9986(Cineama)\uff0c\u5b83\u6b63\u5728\u8fdb\u884c\u56e0\u75ab\u60c5\u800c\u6682\u505c\u7684\u7ffb\u4fee\uff1b\u751f\u6d3b\u7535\u8111\uff1a\u8ba1\u7b97\u6280\u672f\u548c\u4e92\u52a8\u5c55\u54c1\u7684\u5386\u53f2\u5c55\u793a--\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4(Museum+Labs)\uff1b\u897f\u96c5\u56fe\u73b0\u5f53\u4ee3\u827a\u672f\u535a\u89c8\u4f1a\uff1b\u534e\u76db\u987f\u5dde\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u88c5\u7532\u535a\u7269\u9986(Fly Heritage And Tighting Armor Museum)\uff0c\u7b49\u7b49\u3002\n\u4e0e\u4e16\u754c\u5404\u5730\u7684\u8bb8\u591a\u4f01\u4e1a\u4e00\u6837\uff0c\u65b0\u51a0\u80ba\u708e\u5371\u673a\u7684\u7ecf\u6d4e\u5f71\u54cd\u8981\u6c42\u74e6\u80af\u8bc4\u4f30\u5176\u89c4\u6a21\u548c\u7ed3\u6784\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6548\u7387\u548c\u5f71\u54cd\uff0c\u5e76\u5728\u6211\u4eec\u7684\u8054\u5408\u521b\u59cb\u4eba\u53bb\u4e16\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7ee7\u7eed\u53d1\u5c55\u3002\u6211\u4eec\u5df2\u7ecf\u505a\u51fa\u4e86\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u5173\u95ed\u4e24\u4e2a\u90e8\u95e8\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u8fc8\u5411\u4e00\u4e2a\u5c06\u56e0\u5927\u6d41\u884c\u800c\u4ee5\u65e0\u6cd5\u9884\u6d4b\u7684\u65b9\u5f0f\u6539\u53d8\u7684\u672a\u6765\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u74e6\u80af\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u74e6\u80af\u5236\u4f5c\u516c\u53f8\u3002\n\u8fd9\u573a\u5927\u6d41\u884c\u5bf9\u8bb8\u591a\u4f01\u4e1a\u548c\u975e\u8425\u5229\u7ec4\u7ec7\u90fd\u4ea7\u751f\u4e86\u6bc1\u706d\u6027\u7684\u5f71\u54cd\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u4f9d\u8d56\u516c\u5171\u96c6\u4f1a\u548c\u7279\u6b8a\u6d3b\u52a8\u4f5c\u4e3a\u5b9e\u73b0\u4f7f\u547d\u7684\u4e00\u90e8\u5206\u7684\u4f01\u4e1a\u3002\n\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u201c\u6d3b\u7740\u7684\u8ba1\u7b97\u673a\uff1a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\u201d\u5c06\u6682\u65f6\u5173\u95ed\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u91cd\u65b0\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u897f\u5185\u62c9\u9a6c\u7684\u7ffb\u4fee\u5df2\u7ecf\u6682\u505c\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\u4e5f\u5c06\u7ee7\u7eed\u5173\u95ed\u3002\u5df2\u7ecf\u53d6\u6d88\u4e862020\u5e74\u7684\u897f\u96c5\u56fe\u827a\u672f\u535a\u89c8\u4f1a\uff0c\u5728\u51b3\u5b9a\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u8ba1\u5212\u4e4b\u524d\uff0c\u5c06\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u770b\u770b\u5f62\u52bf\u548c\u827a\u672f\u4e16\u754c\u65e5\u5386\u7684\u53d1\u5c55\u60c5\u51b5\u3002\u540c\u6837\uff0c\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u76d4\u7532\u535a\u7269\u9986\u7684\u8463\u4e8b\u4f1a\u5df2\u7ecf\u51b3\u5b9a\uff0c\u5b83\u73b0\u5728\u4e5f\u5c06\u4fdd\u6301\u5173\u95ed\uff0c\u4ee5\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u6211\u4eec\u8fd8\u505a\u51fa\u4e86\u6c38\u4e45\u5173\u95ed\u6d1b\u6749\u77f6h\u4ff1\u4e50\u90e8\u7684\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5e76\u5f00\u59cb\u4e86\u5173\u95ed\u4f26\u6566\u539f\u6765\u7684h\u4ff1\u4e50\u90e8\u7684\u63d0\u6848\u7a0b\u5e8f\u3002\nVulcan Productions\u4eca\u5e74\u5c06\u7ee7\u7eed\u4e0e\u4ed6\u4eec\u503c\u5f97\u4fe1\u8d56\u7684\u5408\u4f5c\u4f19\u4f34\u548c\u8054\u5408\u5236\u7247\u4eba\u5408\u4f5c\uff0c\u9010\u6b65\u7ed3\u675f\u548c\u8fc7\u6e21\u9879\u76ee\uff0c\u5728\u6211\u4eec\u9010\u6b65\u9000\u51fa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u6700\u5927\u52aa\u529b\u4e3a\u8fd9\u4e9b\u9879\u76ee\u7684\u6210\u529f\u505a\u597d\u51c6\u5907\u3002\n\u6211\u4eec\u4e3a\u6570\u5341\u4e07\u4eba\u53d7\u5230\u8fd9\u4e9b\u72ec\u7279\u7684\u673a\u6784\u548c\u7535\u5f71\u9879\u76ee\u7684\u6559\u80b2\u3001\u5a31\u4e50\u548c\u542f\u53d1\u800c\u611f\u5230\u81ea\u8c6a\uff0c\u5b83\u4eec\u7684\u5168\u7403\u5f71\u54cd\u4e0d\u53ef\u4f4e\u4f30\u3002Vulcan\u4ecd\u7136\u81f4\u529b\u4e8e\u4f7f\u4e16\u754c\u53d8\u5f97\u66f4\u7f8e\u597d\u7684\u4f7f\u547d\uff0c\u6211\u4eec\u611f\u8c22\u6bcf\u4e00\u4f4d\u56e2\u961f\u6210\u5458\u6bcf\u5929\u6240\u8868\u73b0\u51fa\u7684\u5949\u732e\u548c\u627f\u8bfa\u3002\u6b63\u662f\u901a\u8fc7\u4ed6\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u5bf9\u6211\u4eec\u4f7f\u547d\u7684\u70ed\u60c5\uff0c\u6211\u4eec\u591a\u5e74\u6765\u5728\u8fd9\u4e9b\u9879\u76ee\u4e2d\u53d6\u5f97\u4e86\u5982\u6b64\u591a\u7684\u6210\u5c31\u3002\n\u827e\u4f26\u7684\u53bb\u4e16\u5728\u897f\u96c5\u56fe\u7684\u6148\u5584\u827a\u672f\u754c\u7559\u4e0b\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7f3a\u53e3\uff0c\u56e0\u4e3a\u4ed6\u662f\u97f3\u4e50\u3001\u827a\u672f\u3001\u7535\u5f71\u548c\u79d1\u5e7b\u5c0f\u8bf4\u7684\u957f\u671f\u62e5\u62a4\u8005\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u70ed\u60c5\u82b1\u8d39\u4e86\u5927\u91cf\u8d22\u5bcc\u3002\n\u5728\u963f\u4f26\u59d0\u59d0\u4e54\u8fea\u00b7\u827e\u4f26\u7684\u9886\u5bfc\u4e0b\uff0c\u74e6\u80af\u7684\u672a\u6765\u4ee5\u53ca\u963f\u4f26\u8eab\u8fb9\u548c\u4eb2\u7231\u7684\u5927\u91cf\u8d44\u4ea7\uff0c\u5305\u62ec\u897f\u96c5\u56fe\u6d77\u9e70\u961f\u548c\u6ce2\u7279\u5170\u5f00\u62d3\u8005\u961f\uff0c\u90fd\u9762\u4e34\u7740\u4e0d\u786e\u5b9a\u7684\u51e0\u5e74\u3002\n\u706b\u795e\u6ca1\u6709\u5c06\u6d41\u884c\u6587\u5316\u535a\u7269\u9986(MoPOP)\u5217\u4e3a\u9762\u4e34\u4e0d\u786e\u5b9a\u6027\u7684\u7ec4\u7ec7\u4e4b\u4e00\uff0c\u8fd9\u662f\u827e\u4f26\u7684\u53e6\u4e00\u4ef6\u4f5c\u54c1\uff0c\u706b\u795e\u8868\u793a\uff0c\u97f3\u4e50\u548c\u79d1\u5e7b\u535a\u7269\u9986\u662f\u4e00\u4e2a\u72ec\u7acb\u7684501(C)3\u7ec4\u7ec7\uff0c\u4e0d\u53d7\u8fd9\u4e9b\u51b3\u5b9a\u7684\u5f71\u54cd\u3002\n\u827e\u4f26\u57281998\u5e74\u6536\u8d2d\u7684\u9ad8\u79d1\u6280\u7535\u5f71\u9662Cineama\u57282014\u5e74\u8fdb\u884c\u4e86\u4e00\u6b21\u91cd\u5927\u7684\u6700\u5148\u8fdb\u7684\u6280\u672f\u5347\u7ea7\uff0c\u5e76\u57282\u6708\u4efd\u5173\u95ed\uff0c\u8fdb\u884c\u4e86\u66f4\u591a\u7684\u6539\u53d8\u3002\u7531\u4e8e\u5f53\u65f6\u88ab\u5ba3\u4f20\u4e3a\u4e34\u65f6\u5173\u95ed\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u4e4b\u524d\uff0c\u74e6\u80af\u89e3\u96c7\u4e86\u4e00\u6279\u5458\u5de5\u3002\nGeekWire Space&amp\uff1bScience-\u83b7\u5956\u822a\u7a7a\u822a\u5929\u548c\u79d1\u5b66\u7f16\u8f91\u827e\u4f26\u00b7\u535a\u4f0a\u5c14(Alan Boyle)\u6bcf\u5468\u5934\u6761", "note_en": "Seattle-area cultural institutions founded by the late Paul Allen, including the  Cinerama\u00a0movie theater and\u00a0 Living Computers Museum + Labs, face the possibility of permanent closure after Vulcan Inc. announced Thursday that it will wind down Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n In a statement from Vulcan, the organization cited the devastating impact of the COVID-19 pandemic as well as the need to continue to assess its evolution as an organization following the 2018 death of Allen, the Microsoft co-founder.\n While the ongoing health crisis has caused numerous businesses to close during state-mandated lockdowns, Vulcan\u2019s move called into question whether some of its organizations would ever return.\n  The move affects the historic Cinerama, which was undergoing renovations that had been halted by the pandemic; Living Computers: Museum + Labs, a historical showcase of computing technology as well as interactive exhibits;  Seattle Art Fair, a modern and contemporary art showcase in Seattle; the  Flying Heritage and Combat Armor Museum in Everett, Wash.; and more.\n  Like so many businesses worldwide, the economic impacts of the COVID-19 crisis require Vulcan to assess its size and structure to maximize effectiveness and impact, and continue to evolve as an organization following the death of our co-founder. We have made the extremely hard decision to close two divisions over the next several months as we move to a future that will be changed in untold ways by the pandemic. This means we are winding down both Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n The pandemic has had devastating effects on many businesses and nonprofits alike, especially those that rely on public gatherings and special events as part of achieving their mission.\n For this reason, Living Computers: Museum + Labs will remain closed for now and spend the coming months reassessing if, how, and when to reopen. Cinerama\u2019s renovation was already paused given the pandemic, and will also stay closed for the foreseeable future. The Seattle Art Fair, which was already cancelled for 2020, will take some time to see how the situation and art world calendar evolve before deciding any further plans. And similarly, the board of the Flying Heritage and Combat Armor Museum in Everett has decided it will also remain closed for now to evaluate if, how, and when to reopen. We have also made the extremely difficult decision to permanently close h Club LA and are beginning the proposal process toward closing the original h Club in London.\n Vulcan Productions will continue to work with their trusted partners and co-producers to wind down and transition projects this year, doing their best to set these projects up for success as we make a gradual exit.\n We are proud of the hundreds of thousands of people that have been educated, entertained, and inspired by these unique institutions and film projects, and their global impact cannot be underestimated. Vulcan remains committed to its mission of making and leaving the world a better place, and we are grateful to each and every team member for the dedication and commitment they have exhibited on a daily basis. It is through their expertise and passion for our mission that we have accomplished so much in these projects throughout the years.\n Allen\u2019s death left a gaping hole in Seattle\u2019s philanthropic arts scene, as he was a longtime champion of music, art, film and science fiction, and spent large sums of his wealth in accordance with those passions.\n The future of Vulcan and the vast array of holdings near and dear to Allen, including the Seattle Seahawks and Portland Trail Blazers, have  faced an uncertain couple of years under the leadership of Allen\u2019s sister, Jody Allen.\n  The Museum of Pop Culture, or MoPOP, another Allen creation, was not listed by Vulcan among the organizations facing uncertainty, and Vulcan said the music and sci-fi museum is an independent 501(c)3 organization that is not impacted by the decisions.\n Cinerama, the high-tech movie theater that Allen purchased in 1998, underwent a major start-of-the-art technology upgrade in 2014 and was  closed for more changes in February. With what was billed as a temporary closure at the time, before COVID-19, Vulcan laid off a number of employees.\n      GeekWire Space &amp; Science - Weekly headlines from Alan Boyle, award-winning aerospace and science editor", "posttime": "2020-05-28 06:31:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u7535\u5f71\u9662,seattle,\u5173\u95ed", "title": "\u897f\u96c5\u56fe\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986\u7684\u672a\u6765\u60ac\u800c\u672a\u51b3", "title_en": "Future of Seattle\u2019s Cinerama and Living Computers Museum in Doubt", "transed": 1, "url": "https://www.geekwire.com/2020/paul-allens-vulcan-inc-shuttering-divisions-impact-cinerama-cultural-institutions/", "via": "", "real_tags": ["\u7535\u5f71", "\u7535\u5f71\u9662", "seattle", "\u5173\u95ed"]}, {"category": "", "categoryclass": "", "imagename": "78a4bff214844f9aaec3cd17cf4cd57e.jpg", "infoid": 1003996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u6b3e\u771f\u6b63\u4ee4\u4eba\u60ca\u53f9\u7684\u89c6\u9891\u6e38\u620f\u7ed3\u5408\u4e86\u5de7\u5999\u7684\u4ee3\u7801\u3001\u534e\u4e3d\u7684\u56fe\u5f62\u548c\u5de7\u5999\u7684\u52a8\u753b-\u5916\u52a0\u6570\u5343\u5c0f\u65f6\u7684\u8f9b\u52e4\u5de5\u4f5c\u3002\n\u56fd\u9645\u8db3\u8054(FIFA)\u3001\u72c2\u4eba(Madden)\u548c\u5176\u4ed6\u6d41\u884c\u6e38\u620f\u80cc\u540e\u7684\u827a\u7535\u516c\u53f8(Electronic Arts)\u7684\u7814\u7a76\u4eba\u5458\u6b63\u5728\u6d4b\u8bd5\u4eba\u5de5\u667a\u80fd\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u4ee5\u6b64\u6765\u52a0\u5feb\u5f00\u53d1\u8fdb\u7a0b\uff0c\u4f7f\u6e38\u620f\u66f4\u903c\u771f\u3002\u4e00\u4e2a\u5de7\u5999\u7684\u8f6c\u6298\u662f\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u5229\u7528\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u901a\u8fc7\u73a9\u4e00\u4e9b\u6700\u65e9\u7684\u6e38\u620f\u673a\u89c6\u9891\u6e38\u620f\u6765\u8bc1\u660e\u81ea\u5df1\u3002\n\u6765\u81eaEA\u548c\u6e29\u54e5\u534e\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u4e00\u4e2a\u56e2\u961f\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u5f3a\u5316\u5b66\u4e60\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u5927\u81f4\u4e0a\u662f\u53d7\u5230\u52a8\u7269\u5bf9\u6b63\u9762\u548c\u8d1f\u9762\u53cd\u9988\u505a\u51fa\u53cd\u5e94\u7684\u5b66\u4e60\u65b9\u5f0f\u7684\u542f\u53d1\uff0c\u4ee5\u81ea\u52a8\u5236\u4f5c\u7c7b\u4eba\u89d2\u8272\u7684\u52a8\u753b\u3002\u201c\u7ed3\u679c\u975e\u5e38\u975e\u5e38\u6709\u5e0c\u671b\uff0c\u201d\u827a\u7535\u9ad8\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6cd5\u6bd4\u5965\u00b7\u6d25\u8bfa(Fabio Zinno)\u8bf4\u3002\n\u4f20\u7edf\u4e0a\uff0c\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u89d2\u8272\u548c\u4ed6\u4eec\u7684\u52a8\u4f5c\u90fd\u662f\u624b\u5de5\u5236\u4f5c\u7684\u3002\u56fd\u9645\u8db3\u8054(FIFA)\u7b49\u4f53\u80b2\u6e38\u620f\u5229\u7528\u52a8\u4f5c\u6355\u6349(Motion Capture)\uff0c\u8fd9\u662f\u4e00\u79cd\u6d89\u53ca\u8ddf\u8e2a\u771f\u4eba\u7684\u6280\u672f\uff0c\u901a\u5e38\u4f7f\u7528\u771f\u4eba\u8138\u4e0a\u6216\u8eab\u4f53\u4e0a\u7684\u6807\u8bb0\u6765\u5448\u73b0\u66f4\u903c\u771f\u7684\u4eba\u7c7b\u89d2\u8272\u52a8\u4f5c\u3002\u4f46\u53ef\u80fd\u6027\u53d7\u5230\u5df2\u7ecf\u5f55\u5236\u7684\u52a8\u4f5c\u7684\u9650\u5236\uff0c\u4ecd\u7136\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u4e3a\u89d2\u8272\u8bbe\u7f6e\u52a8\u753b\u3002\n\u4f8b\u5982\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u52a8\u753b\u8fc7\u7a0b\u4ee5\u53ca\u6e38\u620f\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\u5176\u4ed6\u5143\u7d20\uff0c\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u6e38\u620f\u516c\u53f8\u8282\u7701\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u540c\u65f6\u4f7f\u6e38\u620f\u66f4\u52a0\u903c\u771f\u548c\u9ad8\u6548\uff0c\u8fd9\u6837\u4e00\u6b3e\u590d\u6742\u7684\u6e38\u620f\u5c31\u53ef\u4ee5\u5728\u667a\u80fd\u624b\u673a\u4e0a\u8fd0\u884c\u3002\n\u8fd1\u5e74\u6765\uff0c\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u8ba9\u8ba1\u7b97\u673a\u5728\u6ca1\u6709\u4efb\u4f55\u6307\u5bfc\u7684\u60c5\u51b5\u4e0b\u5b66\u4f1a\u73a9\u590d\u6742\u7684\u6e38\u620f\u548c\u89e3\u51b3\u4ee4\u4eba\u70e6\u607c\u7684\u95ee\u9898\u800c\u6fc0\u8d77\u4e86\u4eba\u4eec\u7684\u5174\u594b\u30022013\u5e74\uff0c\u540e\u6765\u88ab\u8c37\u6b4c(Google)\u6536\u8d2d\u7684\u82f1\u56fd\u516c\u53f8DeepMind\u7684\u7814\u7a76\u4eba\u5458\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u521b\u5efa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4f1a\u4e86\u5c06\u51e0\u6b3e\u96c5\u8fbe\u5229(Atari)\u89c6\u9891\u6e38\u620f\u73a9\u5230\u8d85\u4eba\u7684\u6c34\u5e73\u3002\u8be5\u7a0b\u5e8f\u901a\u8fc7\u5b9e\u9a8c\u4ee5\u53ca\u50cf\u7d20\u548c\u6e38\u620f\u5206\u6570\u7684\u53cd\u9988\u5b66\u4f1a\u4e86\u73a9\u6e38\u620f\u3002DeepMind\u540e\u6765\u4f7f\u7528\u540c\u6837\u7684\u6280\u672f\u6784\u5efa\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u638c\u63e1\u4e86\u6781\u5176\u590d\u6742\u548c\u5fae\u5999\u7684\u68cb\u7c7b\u6e38\u620f\u56f4\u68cb\u7b49\u3002\n\u57287\u6708\u4efd\u5c06\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4f1a\u8baeSiggraph 2020\u4e0a\u5c55\u793a\u7684\u5de5\u4f5c\u4e2d\uff0cEA-UBC\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u521b\u9020\u51fa\u4e00\u79cd\u53ef\u63a7\u7684\u8db3\u7403\u8fd0\u52a8\u5458\uff0c\u65e0\u9700\u4f7f\u7528\u4f20\u7edf\u7684\u7f16\u7801\u6216\u52a8\u753b\u5c31\u53ef\u4ee5\u771f\u5b9e\u5730\u79fb\u52a8\u3002\n\u4e3a\u4e86\u5236\u4f5c\u8fd9\u4e2a\u89d2\u8272\uff0c\u7814\u7a76\u5c0f\u7ec4\u9996\u5148\u8bad\u7ec3\u4e86\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u4ee5\u8bc6\u522b\u548c\u590d\u5236\u52a8\u4f5c\u6355\u6349\u6570\u636e\u4e2d\u7684\u7edf\u8ba1\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u8bad\u7ec3\u53e6\u4e00\u4e2a\u6a21\u578b\uff0c\u4ee5\u518d\u73b0\u5177\u6709\u7279\u5b9a\u76ee\u6807\u7684\u771f\u5b9e\u8fd0\u52a8\uff0c\u4f8b\u5982\u5728\u6e38\u620f\u4e2d\u5411\u7403\u8dd1\u53bb\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4f1a\u751f\u6210\u539f\u59cb\u8fd0\u52a8\u6355\u6349\u6570\u636e\u4e2d\u627e\u4e0d\u5230\u7684\u52a8\u753b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4e60\u8db3\u7403\u8fd0\u52a8\u5458\u5982\u4f55\u79fb\u52a8\uff0c\u7136\u540e\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u89d2\u8272\u6162\u8dd1\u3001\u51b2\u523a\u548c\u6446\u52a8\u7684\u52a8\u753b\u3002\n\u7ebd\u7ea6\u5927\u5b66(NYU)\u6559\u6388\u6731\u5229\u5b89\u00b7\u6258\u683c\u5229\u5384\u65af(Julian Togelius)\u8bf4\uff1a\u201c\u6211\u7edd\u5bf9\u53ef\u4ee5\u770b\u5230\u8fd9\u9879\u6280\u672f\u5728\u4e0d\u540c\u65b9\u9762\u90fd\u5f88\u6709\u7528\u3002\u201d\u4ed6\u4e5f\u662f\u4e00\u5bb6\u4e3a\u6e38\u620f\u5236\u9020\u4eba\u5de5\u667a\u80fd\u5de5\u5177\u7684\u516c\u53f8a Modl.ai\u7684\u8054\u5408\u521b\u59cb\u4eba\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u5f3a\u5316\u5b66\u4e60\u9879\u76ee\u662f\u81ea\u52a8\u5316\u6216\u201c\u7a0b\u5e8f\u751f\u6210\u201d\u65b9\u6cd5\u6d6a\u6f6e\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u6539\u53d8\u6e38\u620f\u5185\u5bb9\u7684\u521b\u5efa\u65b9\u5f0f\u3002\n\u6258\u683c\u5229\u5384\u65af\u8bf4\uff1a\u201c\u7a0b\u5e8f\u5316\u52a8\u753b\u5c06\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u201d\u201c\u5b83\u57fa\u672c\u4e0a\u81ea\u52a8\u5316\u4e86\u6784\u5efa\u6e38\u620f\u5185\u5bb9\u7684\u5927\u91cf\u5de5\u4f5c\u3002\u201d\n\u968f\u7740\u6e38\u620f\u673a\u3001\u4e2a\u4eba\u7535\u8111\u548c\u667a\u80fd\u624b\u673a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u6e38\u620f\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u548c\u590d\u6742\uff0c\u9700\u8981\u6e38\u620f\u516c\u53f8\u8fdb\u884c\u66f4\u5927\u7684\u6295\u8d44\u3002\u73b0\u6709\u7684\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u52a8\u753b\u5e08\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u5b83\u4eec\u3002\u5c31\u50cf\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u5728\u8f93\u5165\u8db3\u591f\u7684\u6570\u636e\u65f6\u70ae\u5236\u51fa\u7167\u7247\u7ea7\u7684\u9762\u5b54\u548c\u573a\u666f\u4e00\u6837\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u81ea\u52a8\u521b\u5efa\u65b0\u7684\u89d2\u8272\u548c\u573a\u666f\u3002\n\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u5176\u4ed6\u6d41\u6d3e\u751f\u6210\u5185\u5bb9\uff0c\u5305\u62ec\u52a8\u4f5c\u548c\u89d2\u8272\u626e\u6f14\u6e38\u620f\u3002\u4e00\u4e9b\u6e38\u620f\u516c\u53f8\u6b63\u5728\u8bd5\u9a8c\u7a0b\u5e8f\u751f\u6210\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4f7f\u6e38\u620f\u66f4\u5177\u6269\u5c55\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u88ab\u7528\u6765\u751f\u6210\u65b0\u7684\u4e16\u754c\uff0c\u4f9b\u73a9\u5bb6\u57282016\u5e74\u53d1\u5e03\u7684\u592a\u7a7a\u751f\u5b58\u6e38\u620f\u201c\u65e0\u4eba\u7684\u5929\u7a7a\u201d\u4e2d\u63a2\u7d22\u3002Togelius\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u4e5f\u6b63\u5728\u6210\u4e3a\u4e00\u79cd\u4f7f\u7528\u4eba\u9020\u73a9\u5bb6\u6d4b\u8bd5\u6e38\u620f\u548c\u53d1\u73b0\u9519\u8bef\u7684\u5f3a\u5927\u65b9\u5f0f\u3002\n\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u4eba\u5de5\u667a\u80fd\u6709\u53ef\u80fd\u4ece\u5934\u5f00\u59cb\u751f\u6210\u7b80\u5355\u7684\u89c6\u9891\u6e38\u620f\u3002\u5468\u4e94\uff0c\u6765\u81ea\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u548c\u5236\u9020\u6e38\u620f\u82af\u7247\u7684\u82f1\u4f1f\u8fbe(Nvidia)\u7684\u7814\u7a76\u4eba\u5458\u62ab\u9732\u4e86\u4e00\u6b3e\u4eba\u5de5\u667a\u80fd\u5f15\u64ce\uff0c\u5b83\u5b66\u4f1a\u4e86\u5982\u4f55\u5728\u6ca1\u6709\u4efb\u4f55\u539f\u59cb\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u91cd\u73b0\u7ecf\u5178\u6e38\u620f\u5403\u8c46\u4eba(Pac-Man)\u3002\n\u5728\u8857\u673a\u6e38\u620f\u53d1\u5e0340\u5468\u5e74\u4e4b\u9645\uff0c\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u4e3aGameGan\u7684\u7a0b\u5e8f\u5982\u4f55\u901a\u8fc7\u89c2\u5bdf\u5c4f\u5e55\u5e76\u76d1\u63a75\u4e07\u4e2a\u5403\u8c46\u4eba\u6e38\u620f\u671f\u95f4\u4f7f\u7528\u7684\u63a7\u4ef6\u6765\u91cd\u73b0\u7b80\u5355\u7684\u6e38\u620f\u3002GameGan\u968f\u540e\u751f\u6210\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u5305\u62ec\u65b0\u7684\u573a\u666f\u548c\u5e73\u53f0\u3002\nPac-Man\u80cc\u540e\u7684Namco\u516c\u53f8\u768410\u540d\u5de5\u7a0b\u5e08\u82b1\u4e8617\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u8bbe\u8ba1\u3001\u7f16\u7a0b\u548c\u6d4b\u8bd5\u6700\u521d\u7684\u6e38\u620f\u3002\u5982\u679c\u63d0\u4f9b\u8db3\u591f\u7684\u6570\u636e\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u6700\u7ec8\u53ef\u80fd\u4f1a\u521b\u9020\u51fa\u4e00\u6b3e\u5f15\u4eba\u6ce8\u76ee\u7684\u65b0\u6e38\u620f--\u201c\u6124\u6012\u7684\u5c0f\u9e1f\u201d\u6216\u201c\u7cd6\u679c\u7c89\u788e\u4f20\u5947\u201d\uff0c\u6ca1\u6709\u4eba\u9700\u8981\u7f16\u5199\u4ee3\u7801\u3002\n\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u52a9\u7406\u6559\u6388\u3001\u82f1\u4f1f\u8fbe(Nvidia)\u4eba\u5de5\u667a\u80fd\u4e3b\u4efb\u6851\u8d3e\u00b7\u83f2\u5fb7\u52d2(Sanja Fidler)\u8868\u793a\uff1a\u201c\u4f60\u53ef\u4ee5\u60f3\u8c61\u5728\u8bb8\u591a\u6e38\u620f\u4e0a\u8bad\u7ec3\u5b83-\u6570\u5343\u79cd\u4e0d\u540c\u7684\u6e38\u620f\u3002\u201d\u201c\u4eba\u4eec\u4f1a\u5e0c\u671b\uff0c\u73b0\u5728\u4f60\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u4e0d\u540c\u6e38\u620f\u4e2d\u7684\u4e0d\u540c\u4e1c\u897f\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u63d2\u5165\u5176\u4e2d\u3002\u201d\nEA\u7684Zinno\u8bf4\uff0c\u6e38\u620f\u5f00\u53d1\u8005\u53ef\u80fd\u9700\u8981\u51e0\u5e74\u65f6\u95f4\u624d\u80fd\u4f8b\u884c\u516c\u4e8b\u5730\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\uff0c\u90e8\u5206\u539f\u56e0\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5f88\u96be\u7406\u89e3\u548c\u8c03\u8bd5\u3002\u4ed6\u6307\u51fa\uff0c\u8bc1\u636e\u5c06\u5728\u7531\u6b64\u4ea7\u751f\u7684\u6e38\u620f\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e2d\u5f97\u5230\u8bc1\u660e\uff1a\u201c\u6e38\u620f\u5f00\u53d1\u5c31\u662f\u5b83\u81ea\u5df1\u7684\u91ce\u517d\u3002\u4e0d\u7ba1\u4f60\u7684\u52a8\u753b\u6280\u672f\u6709\u591a\u4e0d\u53ef\u601d\u8bae\uff0c\u5173\u952e\u662f\uff0c\u73a9\u8d77\u6765\u597d\u73a9\u5417\uff1f\u201c\u3002\n\u53c2\u4e0eEA\u9879\u76ee\u7684UBC\u6559\u6388Michiel van de Panne\u8bf4\uff0c\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u5728\u7269\u7406\u73b0\u5b9e\u73af\u5883\u4e2d\u8bad\u7ec3\u975e\u4eba\u7c7b\u7684\u89c6\u9891\u6e38\u620f\u89d2\u8272\u3002\u4f46\u4ed6\u627f\u8ba4\uff0c\u8bad\u7ec3\u7b97\u6cd5\u4ece\u5934\u5f00\u59cb\u5236\u4f5c\u5168\u65b0\u7684\u52a8\u753b\u5c06\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5f88\u96be\u91cf\u5316\u73a9\u5bb6\u4f1a\u53d1\u73b0\u4ec0\u4e48\u662f\u6709\u5438\u5f15\u529b\u7684\u3002Van de Panne\u8bf4\uff1a\u201c\u6211\u5728\u7b49\u7740\u770b\u771f\u6b63\u5145\u5206\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6765\u751f\u6210\u52a8\u753b\u7684\u4e1c\u897f\u3002\u201d\u201c\u4f46\u5b83\u80af\u5b9a\u4f1a\u6765\u7684\u3002\u201d\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u60f3\u8981\u6700\u597d\u7684\u5065\u5eb7\u5de5\u5177\u5417\uff1f\u770b\u770b\u6211\u4eecGear\u56e2\u961f\u6311\u9009\u7684\u6700\u597d\u7684\u5065\u8eab\u8ddf\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907(\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50)\u548c\u6700\u597d\u7684\u8033\u673a", "note_en": "A truly kick-ass videogame combines clever code, gorgeous graphics, and artful animation\u2014plus thousands of hours of hard work.\n Researchers at  Electronic Arts\u2014the company behind   FIFA,   Madden, and other popular games\u2014are testing recent advances in  artificial intelligence as a way to speed the development process and make games more lifelike. And in a neat twist, the researchers are harnessing an AI technique that proved itself by playing some of the earliest console videogames.\n A team from EA and the University of British Columbia in Vancouver is using a technique called  reinforcement learning, which is loosely inspired by the way animals learn in response to positive and negative feedback, to automatically animate humanoid characters. \u201cThe results are very, very promising,\u201d says Fabio Zinno, a senior software engineer at Electronic Arts.\n  Traditionally, characters in videogames and their actions are crafted manually. Sports games, such as  FIFA, make use of  motion capture, a technique that involves tracking a real person often using markers on their face or body, to render more lifelike actions in human characters. But the possibilities are limited by the actions that have been recorded, and code still needs to be written to animate the character.\n By automating the animation process, as well as other elements of game design and development, AI could save game companies millions of dollars while making games more realistic and efficient, so that a complex game can run on a smartphone, for example.\n  Reinforcement learning has sparked excitement in recent years by letting computers learn to play complex games and solve vexing problems without any instruction. In 2013, researchers at  DeepMind, a UK company later acquired by Google, used reinforcement learning to create a computer program that  learned to play several Atari videogames to a superhuman level. The program learned to play through experimentation and feedback from the pixels and the game score. DeepMind later  employed the same technique to build a program that  mastered the fiendishly complex and subtle board game Go, among other things.\n  In work to be presented in July at  Siggraph 2020, a computer graphics conference, the EA-UBC researchers show that reinforcement learning can  create a controllable soccer player that moves realistically without using conventional coding or animation.\n  To make the character, the team first trained a  machine-learning model to identify and reproduce statistical patterns in motion-capture data. They then used reinforcement learning to train another model to reproduce realistic motion with a specific objective, such as running toward a ball in the game. Crucially, this produces animations not found in the original motion-capture data. In other words, the program learns how a soccer player moves, and can then animate the character jogging, sprinting, and shimmying by itself.\n \u201cI can definitely see this technology being useful in different ways,\u201d says  Julian Togelius, a professor at NYU and the cofounder of a  Modl.ai, a company that makes AI tools for games. He adds that the reinforcement learning project is part of a wave of automated or \u201cprocedural generation\u201d methods that will transform how game content is created.\n \u201cProcedural animation will be a huge thing,\u201d Togelius says. \u201cIt basically automates a lot of the work that goes into building game content.\u201d\n As consoles, PCs, and smartphones become ever-more powerful, games will become increasingly sophisticated and complex, requiring greater investment from game companies. Existing tools can help make designers and animators more efficient, but they\u2019re still needed at every step. Just as AI can concoct photo-realistic  faces and  scenes when fed enough data, algorithms may automate the creation of new characters and scenes.\n AI could generate content for other genres, including action and role-playing games. Some game companies are experimenting with procedural generation as a way to make games more expansive. A simple method is used to generate new worlds for players to explore in   No Man\u2019s Sky, a space-based survival game released in 2016. Togelius says AI is also emerging as a powerful way to test games and find bugs, using artificial players.\n  At the other end of the spectrum, there\u2019s potential for AI to generate simple videogames from scratch. On Friday, researchers from the University of Toronto, MIT, and  Nvidia, which makes gaming chips, revealed an AI engine that learned how to recreate the classic game  Pac-Man without any of the original code.\n  On the  40th anniversary of the arcade game\u2019s release, the researchers showed how a program called  GameGAN can recreate simple games by watching the screen and monitoring the controls used during 50,000 games of  Pac-Man. GameGAN then generated its own version, complete with new scenarios and platforms.\n  It took 10 engineers at Namco, the company behind  Pac-Man, 17 months to design, program, and test the original game. If fed enough data, such an algorithm might eventually fashion a compelling new game\u2014an  Angry Birds or  Candy Crush that no one needed to code.\n \u201cYou can imagine training it on many games\u2014thousands of different games,\u201d says  Sanja Fidler, an assistant professor at the University of Toronto and director of AI at Nvidia. \u201cAnd one would hope that now you can somehow mash up and interpolate different things from different games.\u201d\n Zinno of EA says it may be several years before game developers routinely use AI, partly because machine-learning algorithms are tricky to understand and debug. The proof will be in the popularity of the resulting games, he notes: \u201cGame development is its own beast. No matter how incredible your animation technology, the point is, is it fun to play?\u201d\n Michiel van de Panne, a professor at UBC who is involved in the EA project, says the next step is to use reinforcement learning to train nonhuman videogame characters inside physically realistic environments. But he acknowledges it will be more difficult to train algorithms to come up with entirely new animation from scratch, because it is difficult to quantify what players will find appealing. \u201cI\u2019m waiting to see something that really takes full advantage of AI for the generation of animation,\u201d van de Panne says. \u201cBut it will come for sure.\u201d\n   \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2020-05-28 06:16:42", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f00\u53d1,\u6e38\u620f,\u4eba\u5de5\u667a\u80fd,\u5236\u4f5c,inject", "title": "\u6e38\u620f\u5236\u4f5c\u4eba\u6ce8\u5165\u4eba\u5de5\u667a\u80fd\u4ee5\u5f00\u53d1\u66f4\u903c\u771f\u7684\u89d2\u8272", "title_en": "Gamemakers Inject AI To Develop More Lifelike Characters", "transed": 1, "url": "https://www.wired.com/story/game-makers-inject-ai-develop-more-lifelike-characters/", "via": "", "real_tags": ["\u5f00\u53d1", "\u6e38\u620f", "\u4eba\u5de5\u667a\u80fd", "\u5236\u4f5c", "inject"]}]