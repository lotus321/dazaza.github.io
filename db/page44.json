[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1006575, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TLS E.RescorlaInternet-Draft RTFM\uff0cInc.\u516c\u5f00\u72b6\u6001\uff1a\u5b9e\u9a8c\u6027K.OkuExpires\uff1a2020\u5e7412\u67083\u65e5Fastly N.Sullivan C.A.Wood Cloudflare 2020\u5e746\u67081\u65e5TLS\u52a0\u5bc6\u7684\u5ba2\u6237\u7aefHello Draft-IETF-TLS-esni-07\u6458\u8981\u672c\u6587\u6863\u63cf\u8ff0\u4e86\u4f20\u8f93\u5c42\u5b89\u5168(TLS)\u4e2d\u7528\u4e8e\u5728\u670d\u52a1\u5668\u516c\u94a5\u4e0b\u52a0\u5bc6ClientHello\u6d88\u606f\u7684\u673a\u5236\u3002\u672c\u5907\u5fd8\u5f55\u7684\u72b6\u6001\u672cInternet-Draft\u5b8c\u5168\u7b26\u5408BCP 78\u7684\u89c4\u5b9a\u63d0\u4ea4\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4(IETF)\u7684\u5de5\u4f5c\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u5c0f\u7ec4\u4e5f\u53ef\u4ee5\u5c06\u5de5\u4f5c\u6587\u4ef6\u4f5c\u4e3a\u4e92\u8054\u7f51\u8349\u7a3f\u5206\u53d1\u3002\u76ee\u524d\u7684\u4e92\u8054\u7f51\u8349\u7a3f\u5217\u8868\u5728https://datatracker.ietf.org/drafts/current/.\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u6709\u6548\u671f\u6700\u957f\u4e3a6\u4e2a\u6708\u7684\u8349\u6848\u6587\u4ef6\uff0c\u53ef\u968f\u65f6\u66f4\u65b0\u3001\u66ff\u6362\u6216\u88ab\u5176\u4ed6\u6587\u4ef6\u6dd8\u6c70\u3002\u4f7f\u7528\u4e92\u8054\u7f51\u8349\u7a3f\u4f5c\u4e3a\u53c2\u8003\u6750\u6599\u6216\u5c06\u5176\u4f5c\u4e3a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u4ee5\u5916\u7684\u5f15\u7528\u662f\u4e0d\u5408\u9002\u7684\u3002\u672c\u4e92\u8054\u7f51\u8349\u7a3f\u5c06\u4e8e2020\u5e7412\u67083\u65e5\u5230\u671f\u3002\u7248\u6743\u6240\u6709(C)2020 IETF Trust\u548c\u6307\u5b9a\u4e3a\u6587\u6863\u4f5c\u8005\u7684\u4eba\u5458\u3002\u7248\u6743\u6240\u6709\u3002\u672c\u6587\u4ef6\u53d7BCP78\u548cIETF Trust\u5173\u4e8eIETF\u6587\u4ef6(https://trustee.ietf.org/\u8bb8\u53ef\u8bc1\u4fe1\u606f)\u7684\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7ea6\u675f\uff0c\u81ea\u672c\u6587\u4ef6\u53d1\u5e03\u4e4b\u65e5\u8d77\u751f\u6548\u3002\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u8fd9\u4e9b\u6587\u6863\uff0c\u56e0\u4e3a\u5b83\u4eec\u63cf\u8ff0\u4e86\u60a8\u5bf9\u672c\u6587\u6863\u7684\u6743\u5229\u548c\u9650\u5236\u3002\u672c\u6587\u6863\u4e2d\u63d0\u53d6\u7684\u4ee3\u7801\u7ec4\u4ef6\u5fc5\u987b\u5305\u62ec\u7b80\u5316\u7684BSD\u8bb8\u53ef\u8bc1\u6587\u672c\uff0c\u5982\u4fe1\u6258\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7b2c4.e\u8282\u6240\u8ff0\uff0c\u5e76\u4e14\u5982\u7b80\u5316\u7684BSD\u8bb8\u53ef\u8bc1\u4e2d\u6240\u8ff0\uff0c\u63d0\u4f9b\u7684\u4ee3\u7801\u7ec4\u4ef6\u4e0d\u63d0\u4f9b\u62c5\u4fdd\u3002Rescorla\u7b49\u4eba\u30022020\u5e7412\u67083\u65e5\u5230\u671f[\u7b2c1\u9875]\u3002\n\u4e92\u8054\u7f51\u8349\u6848TLS\u52a0\u5bc6\u5ba2\u6237\u7aef\u4f60\u597d2020\u5e746\u6708\u76ee\u5f551\u3002\u7b80\u4ecb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30023.\u7ea6\u5b9a\u548c\u5b9a\u4e49\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024.\u6982\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024 3.1.\u3002\u62d3\u6251\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024 3.2.\u3002\u52a0\u5bc6\u7684ClientHello(ECH)\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30025 4.\u52a0\u5bc6\u7684ClientHello\u914d\u7f6e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30026 5.&#34\uff1bENCRYPTED_CLIENT_HELLO&#34\uff1b\u6269\u5c55\u540d\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30027 6.\u6280\u672f\u6269\u5c55\u540d(&#34\uff1bech_nonce&34\uff1bExtension)\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30029 6.1.\u3002\u5408\u5e76\u5916\u90e8\u6269\u5c55\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30029 7.\u5ba2\u6237\u884c\u4e3a\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300210 7.1\u3002\u6b63\u5728\u53d1\u9001\u52a0\u5bc6\u7684ClientHello\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300210 7.2.\u3002\u63a8\u8350\u7684\u586b\u5145\u65b9\u6848\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300212 7.3.\u3002\u5904\u7406\u670d\u52a1\u5668\u54cd\u5e94\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300212 7.3.1\u3002\u63a5\u53d7ECH\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300213 7.3.2.\u3002\u5df2\u62d2\u7eddECH\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300213 7.3.3.\u3002\u4f60\u597d\uff0c\u91cd\u8bd5\u8bf7\u6c42\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300214 7.4.\u3002\u7ed9\u5ef6\u957f\u4ef6\u6d82\u4e0a\u6da6\u6ed1\u8102\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 8.\u9762\u5411\u5ba2\u6237\u7aef\u7684\u670d\u52a1\u5668\u884c\u4e3a\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300216 9.\u517c\u5bb9\u6027\u95ee\u9898\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 9.1.\u3002\u9519\u8bef\u914d\u7f6e\u548c\u90e8\u7f72\u95ee\u9898\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 9.2.\u3002\u4e2d\u95f4\u5305\u53a2\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300219 10.\u5b89\u5168\u8003\u8651\u4e8b\u9879\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300219 10.1.\u3002\u4e3a\u4ec0\u4e48\u660e\u6587DNS\u6b63\u5e38\uff1f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300219 10.2.\u3002\u5ba2\u6237\u8ddf\u8e2a\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30022010.3.\u3002\u53ef\u9009\u7684\u8bb0\u5f55\u6458\u8981\u548c\u8bd5\u7528\u89e3\u5bc6\u3002\u3002\u3002\u3002\u3002\u30022010.4.\u3002\u76f8\u5173\u9690\u79c1\u6cc4\u9732\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30022010.5.\u3002\u5bf9\u7167\u6807\u51c6\u8fdb\u884c\u6bd4\u8f83\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 10.5.1.\u3002\u7f13\u89e3\u91cd\u64ad\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 10.5.2.\u3002\u907f\u514d\u5e7f\u6cdb\u90e8\u7f72\u7684\u5171\u4eab\u673a\u5bc6\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 10.5.3\u3002\u9632\u6b62\u57fa\u4e8eSNI\u7684DoS\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 10.5.4.\u3002\u4e0d\u8981\u9732\u51fa\u6765\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 10.5.5\u3002\u5411\u524d\u4fdd\u5bc6\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.5.6\u3002\u9002\u5f53\u7684\u5b89\u5168\u73af\u5883\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.5.7\u3002\u62c6\u5206\u670d\u52a1\u5668\u6b3a\u9a97\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.5.8\u3002\u652f\u6301\u591a\u79cd\u534f\u8bae\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.6.\u3002\u586b\u5145\u7b56\u7565\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.7.\u3002\u4e3b\u52a8\u653b\u51fb\u7f13\u89e3\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 10.7.1\u3002\u5ba2\u6237\u53cd\u5e94\u653b\u51fb\u7f13\u89e3\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300223 10.7.2\u3002\u4f60\u597d\uff0c\u91cd\u8bd5\u8bf7\u6c42\uff0c\u52ab\u6301\u7f13\u89e3\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300224 10.7.3.\u3002\u6062\u590dPSK Oracle Mitigation\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 11.IANA\u8003\u8651\u56e0\u7d20\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 11.1.\u3002\u66f4\u65b0TLS ExtensionType\u6ce8\u518c\u8868\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 11.2.\u3002\u66f4\u65b0TLS\u8b66\u62a5\u6ce8\u518c\u8868\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 12.ECHConfig\u6269\u5c55\u6307\u5357\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 13.\u63d0\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 13.1.\u3002\u89c4\u8303\u6027\u53c2\u8003\u6587\u732e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 Rescorla\u7b49\u4eba\u30022020\u5e7412\u67083\u65e5\u5230\u671f[\u7b2c2\u9875]\u3002\n\u4e92\u8054\u7f51-\u8349\u7a3f\nInternet-Draft TLS\u52a0\u5bc6\u7684\u5ba2\u6237\u7aefHello 2020\u5e746\u67086.\u6269\u5c55\u540d\u5f53\u4f7f\u7528ECH\u65f6\uff0c\u5ba2\u6237\u7aef\u8fd8\u5fc5\u987b\u5c06\u7c7b\u578b\u4e3a&#34\uff1bech_nonce&34\uff1b\u7684\u6269\u5c55\u540d\u6dfb\u52a0\u5230ClientHelloInternal(\u4f46\u4e0d\u662f\u5916\u90e8\u7684ClientHello)\u3002\u6b64\u968f\u673a\u6570\u786e\u4fdd\u670d\u52a1\u5668\u7684\u52a0\u5bc6\u8bc1\u4e66\u53ea\u80fd\u7531\u53d1\u9001\u6b64ClientHello\u7684\u5b9e\u4f53\u8bfb\u53d6\u3002\u8be5\u6269\u5c55\u5b9a\u4e49\u5982\u4e0b\uff1aenum{ech_nonce(0xff03)\uff0c(65535)}ExtensionType\uff1bstruct{uint8 nonce[16]\uff1b}echnonce\uff1bnonce\u4eceHPKE\u52a0\u5bc6\u4e0a\u4e0b\u6587\u5bfc\u51fa\u768416\u5b57\u8282\u968f\u673a\u6570\u3002\u6709\u5173\u5176\u8ba1\u7b97\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7b2c7.1\u8282\u3002\u6700\u540e\uff0c\u7b2c7\u8282\u548c\u7b2c8\u8282\u4e2d\u7684\u8981\u6c42\u8981\u6c42\u5b9e\u73b0\u9664\u4e86\u8ddf\u8e2a\u7531\u524d\u4e00\u4e2a\u8fde\u63a5\u5efa\u7acb\u7684\u6bcf\u4e2aPSK\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u8ddf\u8e2a\u8be5\u8fde\u63a5\u662f\u5426\u4f7f\u7528&#34\uff1bech_Accept&#34\uff1b\u54cd\u5e94\u7c7b\u578b\u534f\u5546\u4e86\u6b64\u6269\u5c55\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u88ab\u79f0\u4e3aECH PSK\u3002\u5426\u5219\uff0c\u5b83\u5c31\u662f\u975eECH PSK\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5411\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f1a\u8bdd\u72b6\u6001\u6dfb\u52a0\u65b0\u5b57\u6bb5\u6765\u5b9e\u73b0\u30026.1.\u3002\u5408\u5e76\u5916\u90e8\u6269\u5c55\uff0c\u4e00\u4e9bTLS1.3\u6269\u5c55\u53ef\u80fd\u4f1a\u76f8\u5f53\u5927\uff0c\u5c06\u5b83\u4eec\u540c\u65f6\u5305\u542b\u5728\u5185\u90e8\u548c\u5916\u90e8ClientHello\u4e2d\u5c06\u5bfc\u81f4\u975e\u5e38\u5927\u7684\u6574\u4f53\u5927\u5c0f\u3002\u4e00\u4e2a\u7279\u522b\u75c5\u6001\u7684\u4f8b\u5b50\u662f\u540e\u91cf\u5b50\u7b97\u6cd5\u7684KEY_SHARE\u3002\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u6269\u5c55\u540d\u7684\u5f71\u54cd\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u540d&#34\uff1bOUTER_EXTENSIONS&#34\uff1b\u3002enum{OUTER_EXTENSION(0xff04)\uff0c(65535)}ExtensionType\uff1bStruct{ExtensionType Out_Extensions&lt\uff1b2..254&gt\uff1b\uff1buint8\u54c8\u5e0c&lt\uff1b32..255&gt\uff1b}ExterExtensions\uff1bExterExtensions\uff1b\u53ea\u80fd\u5728ClientHelloInside\u4e2d\u4f7f\u7528\u3002\u5b83\u7531\u4e00\u4e2a\u6216\u591a\u4e2aExtensionType\u503c\u7ec4\u6210\uff0c\u6bcf\u4e2a\u503c\u5f15\u7528ClientHelloOuter\u4e2d\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u4ee5\u53ca\u5b8c\u6574ClientHelloInternal\u7684\u6458\u8981\u3002Rescorla\u7b49\u4eba\u30022020\u5e7412\u67083\u65e5\u5230\u671f[\u7b2c9\u9875]\u3002\n\u4e92\u8054\u7f51\u8349\u6848TLS\u52a0\u5bc6\u7684\u5ba2\u6237\u7aefHello 2020\u5e746\u6708\u5f53\u53d1\u9001ClientHello\u65f6\uff0c\u5ba2\u6237\u7aef\u9996\u5148\u8ba1\u7b97ClientHelloInternal\uff0c\u5305\u62ec\u4efb\u4f55PSK\u7ed1\u5b9a\u5668\uff0c\u7136\u540e\u53ef\u4ee5\u66ff\u6362\u5b83\u77e5\u9053\u5c06\u5728ClientHelloExternal\u4e2d\u590d\u5236\u7684\u6269\u5c55\u3002\u4e3a\u6b64\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528\u4e0e\u7528\u4e8e\u52a0\u5bc6ClienHelloInternal\u7684KDF\u76f8\u540c\u7684\u6563\u5217\u8ba1\u7b97\u6574\u4e2aClientHelloInternal\u6d88\u606f\u7684\u6563\u5217H\u3002\u7136\u540e\uff0c\u5ba2\u6237\u7aef\u5220\u9664\u548c\uff0c\u5e76\u7528\u5355\u4e2a&#34\uff1bOUTER_EXTENSIONS&34\uff1b\u6269\u5c55\u540d\u66ff\u6362ClientHelloInternal\u4e2d\u7684\u6269\u5c55\u540d\u3002OUTER_EXTENSIONS\u5217\u8868\u6309\u7167\u5b83\u4eec\u88ab\u5220\u9664\u7684\u987a\u5e8f\u5305\u62ec\u4eceClientHelloInternal\u4e2d\u5220\u9664\u7684\u90a3\u4e9b\u6269\u5c55\u3002\u8be5\u6563\u5217\u5305\u542b\u4e0a\u9762\u8ba1\u7b97\u7684\u5b8c\u6574\u7684ClientHelloInternal\u6563\u5217H\u3002\u6b64\u8fc7\u7a0b\u7531\u5ba2\u6237\u7aef\u53cd\u8f6c\u3002\n..", "note_en": "tls E. RescorlaInternet-Draft RTFM, Inc.Intended status: Experimental K. OkuExpires: 3 December 2020 Fastly N. Sullivan C.A. Wood Cloudflare 1 June 2020  TLS Encrypted Client Hello  draft-ietf-tls-esni-07Abstract This document describes a mechanism in Transport Layer Security (TLS) for encrypting a ClientHello message under a server public key.Status of This Memo This Internet-Draft is submitted in full conformance with the provisions of  BCP 78 and  BCP 79. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF). Note that other groups may also distribute working documents as Internet-Drafts. The list of current Internet- Drafts is at  https://datatracker.ietf.org/drafts/current/. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as &#34;work in progress.&#34; This Internet-Draft will expire on 3 December 2020.Copyright Notice Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to  BCP 78 and the IETF Trust&#39;s Legal Provisions Relating to IETF Documents ( https://trustee.ietf.org/  license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the  Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License. Rescorla, et al. Expires 3 December 2020 [Page 1]\n  Internet-Draft TLS Encrypted Client Hello June 2020Table of Contents  1. Introduction . . . . . . . . . . . . . . . . . . . . . . . .  3  2. Conventions and Definitions . . . . . . . . . . . . . . . . .  4  3. Overview . . . . . . . . . . . . . . . . . . . . . . . . . .  4  3.1. Topologies . . . . . . . . . . . . . . . . . . . . . . .  4  3.2. Encrypted ClientHello (ECH) . . . . . . . . . . . . . . .  5  4. Encrypted ClientHello Configuration . . . . . . . . . . . . .  6  5. The &#34;encrypted_client_hello&#34; extension . . . . . . . . . . .  7  6. The &#34;ech_nonce&#34; extension . . . . . . . . . . . . . . . . . .  9  6.1. Incorporating Outer Extensions . . . . . . . . . . . . .  9  7. Client Behavior . . . . . . . . . . . . . . . . . . . . . . .  10  7.1. Sending an encrypted ClientHello . . . . . . . . . . . .  10  7.2. Recommended Padding Scheme . . . . . . . . . . . . . . .  12  7.3. Handling the server response . . . . . . . . . . . . . .  12  7.3.1. Accepted ECH . . . . . . . . . . . . . . . . . . . .  13  7.3.2. Rejected ECH . . . . . . . . . . . . . . . . . . . .  13  7.3.3. HelloRetryRequest . . . . . . . . . . . . . . . . . .  14  7.4. GREASE extensions . . . . . . . . . . . . . . . . . . . .  15  8. Client-Facing Server Behavior . . . . . . . . . . . . . . . .  16  9. Compatibility Issues . . . . . . . . . . . . . . . . . . . .  18  9.1. Misconfiguration and Deployment Concerns . . . . . . . .  18  9.2. Middleboxes . . . . . . . . . . . . . . . . . . . . . . .  19  10. Security Considerations . . . . . . . . . . . . . . . . . . .  19  10.1. Why is cleartext DNS OK? . . . . . . . . . . . . . . . .  19  10.2. Client Tracking . . . . . . . . . . . . . . . . . . . .  20  10.3. Optional Record Digests and Trial Decryption . . . . . .  20  10.4. Related Privacy Leaks . . . . . . . . . . . . . . . . .  20  10.5. Comparison Against Criteria . . . . . . . . . . . . . .  21  10.5.1. Mitigate against replay attacks . . . . . . . . . .  21  10.5.2. Avoid widely-deployed shared secrets . . . . . . . .  21  10.5.3. Prevent SNI-based DoS attacks . . . . . . . . . . .  21  10.5.4. Do not stick out . . . . . . . . . . . . . . . . . .  21  10.5.5. Forward secrecy . . . . . . . . . . . . . . . . . .  22  10.5.6. Proper security context . . . . . . . . . . . . . .  22  10.5.7. Split server spoofing . . . . . . . . . . . . . . .  22  10.5.8. Supporting multiple protocols . . . . . . . . . . .  22  10.6. Padding Policy . . . . . . . . . . . . . . . . . . . . .  22  10.7. Active Attack Mitigations . . . . . . . . . . . . . . .  22  10.7.1. Client Reaction Attack Mitigation . . . . . . . . .  23  10.7.2. HelloRetryRequest Hijack Mitigation . . . . . . . .  24  10.7.3. Resumption PSK Oracle Mitigation . . . . . . . . . .  25  11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  25  11.1. Update of the TLS ExtensionType Registry . . . . . . . .  26  11.2. Update of the TLS Alert Registry . . . . . . . . . . . .  26  12. ECHConfig Extension Guidance . . . . . . . . . . . . . . . .  26  13. References . . . . . . . . . . . . . . . . . . . . . . . . .  26  13.1. Normative References . . . . . . . . . . . . . . . . . .  26 Rescorla, et al. Expires 3 December 2020 [Page 2]\n  Internet-Draft TLS Encrypted Client Hello June 2020  13.2. Informative References . . . . . . . . . . . . . . . . .  27  Appendix A. Alternative SNI Protection Designs . . . . . . . . .  28  A.1. TLS-layer . . . . . . . . . . . . . . . . . . . . . . . .  28  A.1.1. TLS in Early Data . . . . . . . . . . . . . . . . . .  28  A.1.2. Combined Tickets . . . . . . . . . . . . . . . . . .  29  A.2. Application-layer . . . . . . . . . . . . . . . . . . . .  29  A.2.1. HTTP/2 CERTIFICATE Frames . . . . . . . . . . . . . .  29  Appendix B. Total Client Hello Encryption . . . . . . . . . . .  29  Appendix C. Acknowledgements . . . . . . . . . . . . . . . . . .  30 Authors&#39; Addresses . . . . . . . . . . . . . . . . . . . . . . .  30  1. Introduction DISCLAIMER: This is very early a work-in-progress design and has not yet seen significant (or really any) security analysis. It should not be used as a basis for building production systems. Although TLS 1.3 [ RFC8446] encrypts most of the handshake, including the server certificate, there are several ways in which an on-path attacker can learn private information about the connection. The cleartext Server Name Indication (SNI) extension in ClientHello messages, which leaks the target domain for a given connection, is perhaps the most sensitive information unencrypted in TLS 1.3. The target domain may also be visible through other channels, such as cleartext client DNS queries, visible server IP addresses (assuming the server does not use domain-based virtual hosting), or other indirect mechanisms such as traffic analysis. DoH [ I-D.ietf-doh-dns-over-https] and DPRIVE [ RFC7858] [ RFC8094] provide mechanisms for clients to conceal DNS lookups from network inspection, and many TLS servers host multiple domains on the same IP address. In such environments, the SNI remains the primary explicit signal used to determine the server&#39;s identity. The TLS WG has extensively studied the problem of protecting the SNI, but has been unable to develop a completely generic solution. [ I-D.ietf-tls-sni-encryption] provides a description of the problem space and some of the proposed techniques. One of the more difficult problems is &#34;Do not stick out&#34; ([ I-D.ietf-tls-sni-encryption], Section 3.4): if only sensitive or private services use SNI encryption, then SNI encryption is a signal that a client is going to such a service. For this reason, much recent work has focused on concealing the fact that the SNI is being protected. Unfortunately, the result often has undesirable performance consequences, incomplete coverage, or both. The design in this document takes a different approach: it assumes that private origins will co-locate with or hide behind a provider Rescorla, et al. Expires 3 December 2020 [Page 3]\n  Internet-Draft TLS Encrypted Client Hello June 2020 (CDN, application server, etc.) which can protect SNIs for all of the domains it hosts. As a result, SNI protection does not indicate that the client is attempting to reach a private origin, but only that it is going to a particular service provider, which the observer could already tell from the visible IP address. The design in this document introduces a new extension, called Encrypted Client Hello (ECH), which allows clients to encrypt the entirety of their ClientHello to a supporting server. This protects the SNI and other potentially sensitive fields, such as the ALPN list. This extension is only supported with (D)TLS 1.3 [ RFC8446] and newer versions of the protocol.  2. Conventions and Definitions The key words &#34;MUST&#34;, &#34;MUST NOT&#34;, &#34;REQUIRED&#34;, &#34;SHALL&#34;, &#34;SHALL NOT&#34;, &#34;SHOULD&#34;, &#34;SHOULD NOT&#34;, &#34;RECOMMENDED&#34;, &#34;NOT RECOMMENDED&#34;, &#34;MAY&#34;, and &#34;OPTIONAL&#34; in this document are to be interpreted as described in  BCP  14 [ RFC2119] [ RFC8174] when, and only when, they appear in all capitals, as shown here. All TLS notation comes from  [RFC8446], Section\u00a03.  3. Overview This document is designed to operate in one of two primary topologies shown below, which we call &#34;Shared Mode&#34; and &#34;Split Mode&#34;  3.1. Topologies +---------------------+ | | | 2001:DB8::1111 | | | Client &lt;-----&gt; | private.example.org | | | | public.example.com | | | +---------------------+ Server Figure 1: Shared Mode Topology In Shared Mode, the provider is the origin server for all the domains whose DNS records point to it and clients form a TLS connection directly to that provider, which has access to the plaintext of the connection. Rescorla, et al. Expires 3 December 2020 [Page 4]\n  Internet-Draft TLS Encrypted Client Hello June 2020 +--------------------+ +---------------------+ | | | | | 2001:DB8::1111 | | 2001:DB8::EEEE | Client &lt;------------------------------------&gt;| | | public.example.com | | private.example.com | | | | | +--------------------+ +---------------------+ Client-Facing Server Backend Server Figure 2: Split Mode Topology In Split Mode, the provider is _not_ the origin server for private domains. Rather the DNS records for private domains point to the provider, and the provider&#39;s server relays the connection back to the backend server, which is the true origin server. The provider does not have access to the plaintext of the connection.  3.2. Encrypted ClientHello (ECH) ECH works by encrypting the entire ClientHello, including the SNI and any additional extensions such as ALPN. This requires that each provider publish a public key and metadata which is used for ClientHello encryption for all the domains for which it serves directly or indirectly (via Split Mode). This document defines the format of the SNI encryption public key and metadata, referred to as an ECH configuration, and delegates DNS publication details to [ HTTPSSVC], though other delivery mechanisms are possible. In particular, if some of the clients of a private server are applications rather than Web browsers, those applications might have the public key and metadata preconfigured. When a client wants to form a TLS connection to any of the domains served by an ECH-supporting provider, it constructs a ClientHello in the regular fashion containing the true SNI value (ClientHelloInner) and then encrypts it using the public key for the provider. It then constructs a new ClientHello (ClientHelloOuter) with an innocuous SNI (and potentially innocuous versions of other extensions such as ALPN [ RFC7301]) and containing the encrypted ClientHelloInner as an extension. It sends ClientHelloOuter to the server. Upon receiving ClientHelloOuter, the server can then decrypt ClientHelloInner and either terminate the connection (in Shared Mode) or forward it to the backend server (in Split Mode). Note that both ClientHelloInner and ClientHelloOuter are both valid, complete ClientHello messages. ClientHelloOuter carries an encrypted representation of ClientHelloInner in a &#34;encrypted_client_hello&#34; extension, defined in  Section 5. Rescorla, et al. Expires 3 December 2020 [Page 5]\n  Internet-Draft TLS Encrypted Client Hello June 2020  4. Encrypted ClientHello Configuration ClientHello encryption configuration information is conveyed with the following ECHConfigs structure. opaque HpkePublicKey&lt;1..2^16-1&gt;; uint16 HkpeKemId; // Defined in I-D.irtf-cfrg-hpke uint16 HkpeKdfId; // Defined in I-D.irtf-cfrg-hpke uint16 HkpeAeadId; // Defined in I-D.irtf-cfrg-hpke struct { HkpeKdfId kdf_id; HkpeAeadId aead_id; } HpkeCipherSuite; struct { opaque public_name&lt;1..2^16-1&gt;; HpkePublicKey public_key; HkpeKemId kem_id; HpkeCipherSuite cipher_suites&lt;4..2^16-2&gt;; uint16 maximum_name_length; Extension extensions&lt;0..2^16-1&gt;; } ECHConfigContents; struct { uint16 version; uint16 length; select (ECHConfig.version) { case 0xff07: ECHConfigContents; } } ECHConfig; ECHConfig ECHConfigs&lt;1..2^16-1&gt;; The ECHConfigs structure contains one or more ECHConfig structures in decreasing order of preference. This allows a server to support multiple versions of ECH and multiple sets of ECH parameters. The ECHConfig structure contains the following fields: version The version of the structure. For this specification, that value SHALL be 0xff07. Clients MUST ignore any ECHConfig structure with a version they do not understand. contents An opaque byte string whose contents depend on the version Rescorla, et al. Expires 3 December 2020 [Page 6]\n  Internet-Draft TLS Encrypted Client Hello June 2020 of the structure. For this specification, the contents are an ECHConfigContents structure. The ECHConfigContents structure contains the following fields: public_name The non-empty name of the entity trusted to update these encryption keys. This is used to repair misconfigurations, as described in  Section 7.3. public_key The HPKE [ I-D.irtf-cfrg-hpke] public key which can be used by the client to encrypt the ClientHello. kem_id The HPKE [ I-D.irtf-cfrg-hpke] KEM identifier corresponding to public_key. Clients MUST ignore any ECHConfig structure with a key using a KEM they do not support. cipher_suites The list of HPKE [ I-D.irtf-cfrg-hpke] AEAD and KDF identifier pairs clients can use for encrypting the ClientHello. maximum_name_length The largest name the server expects to support, if known. If this value is not known it can be set to zero, in which case clients SHOULD use the inner ClientHello padding scheme described below. That could happen if wildcard names are in use, or if names can be added or removed from the anonymity set during the lifetime of a particular resource record value. extensions A list of extensions that the client can take into consideration when generating a ClientHello message. The purpose of the field is to provide room for additional functionality in the future. See  Section 12 for guidance on what type of extensions are appropriate for this structure. The format is defined in  [RFC8446], Section\u00a04.2. The same interpretation rules apply: extensions MAY appear in any order, but there MUST NOT be more than one extension of the same type in the extensions block. An extension can be tagged as mandatory by using an extension type codepoint with the high order bit set to 1. A client which receives a mandatory extension they do not understand MUST reject the ECHConfig content. Clients MUST parse the extension list and check for unsupported mandatory extensions. If an unsupported mandatory extension is present, clients MUST reject the ECHConfig value.  5. The &#34;encrypted_client_hello&#34; extension The encrypted ClientHelloInner is carried in an &#34;encrypted_client_hello&#34; extension, defined as follows: Rescorla, et al. Expires 3 December 2020 [Page 7]\n  Internet-Draft TLS Encrypted Client Hello June 2020 enum { encrypted_client_hello(0xff02), (65535) } ExtensionType; For clients (in ClientHello), this extension contains the following ClientEncryptedCH structure: struct { HpkeCipherSuite suite; opaque record_digest&lt;0..2^16-1&gt;; opaque enc&lt;1..2^16-1&gt;; opaque encrypted_ch&lt;1..2^16-1&gt;; } ClientEncryptedCH; suite The HpkeCipherSuite cipher suite used to encrypt ClientHelloInner. This MUST match a value provided in the corresponding ECHConfig.cipher_suites list. record_digest A cryptographic hash of the ECHConfig structure from which the ECH key was obtained, i.e., from the first byte of &#34;version&#34; to the end of the structure. This hash is computed using the hash function associated with &#34;suite&#34;, i.e., the corresponding HPKE KDF algorithm hash. enc The HPKE encapsulated key, used by servers to decrypt the corresponding encrypted_ch field. encrypted_ch The serialized and encrypted ClientHelloInner structure, AEAD-encrypted using HPKE with the selected KEM, KDF, and AEAD algorithm and key generated as described below. If the server accepts ECH, it does not send this extension. If it rejects ECH, then it sends the following structure in EncryptedExtensions: struct { ECHConfigs retry_configs; } ServerEncryptedCH; retry_configs An ECHConfigs structure containing one or more ECHConfig structures in decreasing order of preference that the client should use on subsequent connections to encrypt the ClientHelloInner structure. This protocol also defines the &#34;ech_required&#34; alert, which is sent by the client when it offered an &#34;encrypted_client_hello&#34; extension which was not accepted by the server. Rescorla, et al. Expires 3 December 2020 [Page 8]\n  Internet-Draft TLS Encrypted Client Hello June 2020  6. The &#34;ech_nonce&#34; extension When using ECH, the client MUST also add an extension of type &#34;ech_nonce&#34; to the ClientHelloInner (but not to the outer ClientHello). This nonce ensures that the server&#39;s encrypted Certificate can only be read by the entity which sent this ClientHello. This extension is defined as follows: enum { ech_nonce(0xff03), (65535) } ExtensionType; struct { uint8 nonce[16]; } ECHNonce; nonce A 16-byte nonce exported from the HPKE encryption context. See  Section 7.1 for details about its computation. Finally, requirements in  Section 7 and  Section 8 require implementations to track, alongside each PSK established by a previous connection, whether the connection negotiated this extension with the &#34;ech_accept&#34; response type. If so, this is referred to as an &#34;ECH PSK&#34;. Otherwise, it is a &#34;non-ECH PSK&#34;. This may be implemented by adding a new field to client and server session states.  6.1. Incorporating Outer Extensions Some TLS 1.3 extensions can be quite large and having them both in the inner and outer ClientHello will lead to a very large overall size. One particularly pathological example is &#34;key_share&#34; with post-quantum algorithms. In order to reduce the impact of duplicated extensions, the client may use the &#34;outer_extensions&#34; extension. enum { outer_extension(0xff04), (65535) } ExtensionType; struct { ExtensionType outer_extensions&lt;2..254&gt;; uint8 hash&lt;32..255&gt;; } OuterExtensions; OuterExtensions MUST only be used in ClientHelloInner. It consists of one or more ExtensionType values, each of which reference an extension in ClientHelloOuter, and a digest of the complete ClientHelloInner. Rescorla, et al. Expires 3 December 2020 [Page 9]\n  Internet-Draft TLS Encrypted Client Hello June 2020 When sending ClientHello, the client first computes ClientHelloInner, including any PSK binders, and then MAY substitute extensions which it knows will be duplicated in ClientHelloOuter. To do so, the client computes a hash H of the entire ClientHelloInner message with the same hash as for the KDF used to encrypt ClienHelloInner. Then, the client removes and and replaces extensions from ClientHelloInner with a single &#34;outer_extensions&#34; extension. The list of outer_extensions include those which were removed from ClientHelloInner, in the order in which they were removed. The hash contains the full ClientHelloInner hash H computed above. This process is reversed by client\n......", "posttime": "2020-06-15 05:28:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a0\u5bc6,encrypted,\u670d\u52a1\u5668", "title": "TLS\u52a0\u5bc6\u5ba2\u6237\u7aefHello(\u4ee5\u524d\u79f0\u4e3aESNI)\u8fdb\u5165\u8349\u7a3f\u72b6\u6001", "title_en": "TLS Encrypted Client Hello (formerly ESNI) Enters Draft Status", "transed": 1, "url": "https://tools.ietf.org/html/draft-ietf-tls-esni-07", "via": "", "real_tags": ["\u52a0\u5bc6", "encrypted", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "15f303f6633ba3cb6fa08eb7d657defc.jpg", "infoid": 1006574, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u957f\u671f\u4ee5\u6765\uff0c\u7535\u5f71\u5386\u53f2\u5b66\u5bb6\u4e00\u76f4\u8ba4\u4e3a\u201c\u4f20\u8bb0\u5973\u5b69\u201d\u5f17\u6d1b\u4f26\u65af\u00b7\u7279\u7eb3\u662f\u7b2c\u4e00\u4f4d\u7535\u5f71\u660e\u661f\u3002\u7136\u800c\uff0c\u4e00\u9879\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u83ab\u91cc\u65af\u00b7\u79d1\u65af\u7279\u6d1b\u662f\u7b2c\u4e00\u4f4d\u5e7f\u4e3a\u4eba\u77e5\u7684\u7535\u5f71\u660e\u661f\u3002\u7279\u91cc\u00b7\u8212\u5c14\u66fc\u7684\u7535\u5f71\u201c\u7b2c\u4e00\u5bb6\u5ead\uff1a\u79d1\u65af\u7279\u6d1b\u7684\u4e0d\u4e3a\u4eba\u77e5\u7684\u6545\u4e8b\u201d\u5f15\u7528\u4e86\u201c\u7535\u5f71\u6545\u4e8b\u6742\u5fd7\u201d1912\u5e74\u7684\u4e00\u9879\u6c11\u610f\u8c03\u67e5\uff0c\u663e\u793a\u79d1\u65af\u7279\u6d1b\u4e0d\u4ec5\u662f\u201c\u6700\u53d7\u6b22\u8fce\u7684\u7403\u5458\u201d\uff0c\u800c\u4e14\u4ed6\u7684\u9009\u7968\u6bd4\u8457\u540d\u660e\u661f\u5f17\u6d1b\u4f26\u65af\u00b7\u52b3\u4f26\u65af\u548c\u5f17\u6d1b\u4f26\u65af\u00b7\u7279\u7eb3\u7684\u603b\u548c\u8fd8\u8981\u591a\u30021924\u5e74\uff0cPhotoplay\u5c06\u4ed6\u547d\u540d\u4e3a\u201c\u7535\u5f71\u754c\u6700\u53d7\u8ba4\u53ef\u7684\u660e\u661f\u201d\u3002\n\u83ab\u91cc\u65af\u00b7\u79d1\u65af\u7279\u6d1b\u4e8e1877\u5e74\u51fa\u751f\u4e8e\u5339\u5179\u5821\uff0c\u5f53\u65f6\u8fd9\u5ea7\u57ce\u5e02\u6b63\u5904\u4e8e\u56f0\u96be\u65f6\u671f\u3002\u8d2b\u7a77\u3001\u751f\u75c5\u7684\u78e8\u574a\u5de5\u4eba\u6bd4\u6bd4\u7686\u662f\uff0c\u9965\u8352\u8086\u8650\u3002\u4ed6\u7684\u7236\u4eb2\u572825\u5c81\u65f6\u53bb\u4e16\uff1b\u4ed6\u7684\u6bcd\u4eb2\u662f\u4e00\u4f4d\u5be1\u5987\uff0c\u79df\u4e86\u4e00\u5ea7\u5927\u623f\u5b50\uff0c\u6536\u7559\u4e86\u5bc4\u5bbf\u8005-\u90fd\u662f\u7231\u5c14\u5170\u5929\u4e3b\u6559\u7684\u78e8\u574a\u5de5\u4eba\u3002\u5339\u5179\u5821\u4e00\u76f4\u662f\u620f\u5267\u7684\u62e5\u62a4\u8005\uff1b\u7136\u800c\uff0c\u5230\u4e8619\u4e16\u7eaa60\u5e74\u4ee3\uff0c\u8457\u540d\u7684\u5339\u5179\u5821\u5267\u9662\u201c\u7981\u6b62\u4e0a\u6d41\u793e\u4f1a\u8fdb\u5165\u201d\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u6210\u4e3a\u201c\u5f53\u5730\u6d41\u6c13\u7684\u4e13\u5c5e\u9886\u57df-\u5728\u8868\u6f14\u671f\u95f4\u516c\u5f00\u996e\u9152\uff0c\u81ea\u59cb\u81f3\u7ec8\u884c\u4e3a\u98a0\u8986\u7684\u5de5\u4eba\u9636\u7ea7\u786c\u6c49\u201d\u3002\u8fd9\u4e2a\u5c0f\u9547\u8feb\u5207\u9700\u8981\u4e00\u6b21\u6587\u5316\u6539\u9769\u3002\n1894\u5e74\uff0c\u83ab\u91cc\u65af\u88ab\u5438\u5f15\u5230\u821e\u53f0\u4e0a\uff0c\u627e\u5230\u4e86\u4ed6\u7684\u7b2c\u4e00\u4efd\u5a31\u4e50\u4e1a\u5de5\u4f5c\uff0c\u6f14\u5531\u201c\u6254\u7816\u5934\u7684\u7c73\u514b\u201d(The Mick Who Well The Brick)\u3002\u8bb8\u591a\u7231\u5c14\u5170\u79fb\u6c11\u559c\u6b22\u6742\u800d\uff0c\u5b83\u5f88\u5feb\u5c31\u6210\u4e86\u4eba\u6c11\u5267\u9662\u3002\u8fd9\u4e9b\u8868\u6f14\u5927\u591a\u662f\u559c\u5267\uff0c\u4e5f\u6709\u5c11\u8bb8\u4f53\u80b2\u8fd0\u52a8\uff0c\u6bd4\u5982\u62f3\u51fb\u3002\u83ab\u91cc\u65af\u8fd8\u66fe\u4e3a\u54c8\u91cc\u00b7\u6234\u7ef4\u65af(Harry Davis)\u5de5\u4f5c\uff0c\u54c8\u91cc\u00b7\u6234\u7ef4\u65af\u662f\u4e00\u4f4d\u5a31\u4e50\u4f01\u4e1a\u5bb6\uff0c\u7ecf\u8425\u7740\u4ece\u535a\u7269\u9986\u548c\u5267\u9662\u5230\u65e9\u671f\u4e94\u5206\u4e4b\u591c\u7684\u4e00\u5207\u4e8b\u52a1\u3002\u8981\u8bc1\u660e\u4ed6\u4f5c\u4e3a\u8868\u6f14\u8005\u7684\u4ef7\u503c\uff0c\u83ab\u91cc\u65af\u9700\u8981\u5728\u6c99\u9f99\u3001\u5267\u573a\u548c\u201c\u80ae\u810f\u7684\u793c\u5802\u201d\u91cc\u78e8\u7ec3\u591a\u5e74\u624d\u80fd\u8bc1\u660e\u4ed6\u4f5c\u4e3a\u4e00\u540d\u8868\u6f14\u8005\u7684\u4ef7\u503c\u3002\n1902\u5e74\uff0c\u83ab\u91cc\u65af\u4e0e\u6885\u00b7\u963f\u5c14\u8212\u514b\u7ed3\u5a5a\uff0c\u540e\u8005\u7684\u7236\u4eb2\u618e\u6068\u6f14\u827a\u8fd9\u4e00\u804c\u4e1a\u3002\u5c3d\u7ba1\u5339\u5179\u5821\u7684\u5a74\u513f\u6b7b\u4ea1\u7387\u662f\u5168\u56fd\u6700\u9ad8\u7684\u4e4b\u4e00\uff0c\u4f46\u6885\u751f\u4e0b\u4e86\u4e24\u4e2a\u5065\u5eb7\u7684\u5973\u513f\uff0c1903\u5e74\u7684\u591a\u6d1b\u4e3d\u4e1d\u548c1906\u5e74\u7684\u6d77\u7433\uff0c\u4e24\u4eba\u90fd\u6ce8\u5b9a\u8981\u53bb\u6f14\u827a\u5708\u3002\u83ab\u91cc\u65af\u662f\u4e00\u540d\u8001\u724c\u821e\u53f0\u5267\u6f14\u5458\uff0c\u4f46\u7535\u5f71\u662f\u65e5\u76ca\u589e\u957f\u7684\u8d8b\u52bf\uff0c\u4e5f\u662f\u62a5\u916c\u66f4\u9ad8\u7684\u8d8b\u52bf\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4ece\u4e8b\u7535\u5f71\u5de5\u4f5c\u88ab\u9ad8\u5c1a\u7684\u5267\u9662\u89c2\u4f17\u89c6\u4e3a\u201c\u827a\u672f\u91cd\u7f6a\u201d\u3002\u83ab\u91cc\u65af\u5bf9\u8fd9\u79cd\u65b0\u5a92\u4f53\u5f88\u611f\u5174\u8da3\uff0c\u4ed6\u4e8e1907\u5e74\u5f00\u59cb\u4e3aVitagraph\u5bfc\u6f14\u8303\u6234\u514b\u00b7\u5e03\u9c81\u514b(Van Dyke Brooke)\u5de5\u4f5c\u3002\n\u83ab\u91cc\u65af\u5f88\u5feb\u5c31\u7740\u624b\u6539\u53d8\u7535\u5f71\u4e1a\u3002\u5728\u821e\u53f0\u4e0a\uff0c\u8fd9\u4f4d\u6f14\u5458\u7684\u5de5\u4f5c\u53ea\u662f\u8868\u6f14\uff0c\u4f46\u5f53\u83ab\u91cc\u65af\u5230\u8fbeVitagraph\u65f6\uff0c\u4ed6\u770b\u5230\u6f14\u5458\u4eec\u5728\u4e0d\u5728\u955c\u5934\u524d\u65f6\u6b63\u5728\u505a\u8bb8\u591a\u5176\u4ed6\u7684\u4efb\u52a1\u3002\u8457\u540d\u7684\u201c\u4f20\u8bb0\u5973\u5b69\u201d\u5f17\u6d1b\u4f26\u65af\u00b7\u7279\u7eb3\u56de\u5fc6\u8bf4\uff0c\u5f53\u5979\u4e0d\u8868\u6f14\u7684\u65f6\u5019\uff0c\u5979\u5728\u603b\u529e\u516c\u5ba4\u8bb0\u8d26\uff0c\u53c2\u52a0\u5546\u52a1\u4f1a\u8bae\uff0c\u5f00\u652f\u7968\u3002\u5728\u5236\u7247\u5382\u7248\u672c\u7684\u201c\u7f57\u5bc6\u6b27\u4e0e\u6731\u4e3d\u53f6\u201d\u4e2d\u9970\u6f14\u7f57\u5bc6\u6b27\u7684\u4fdd\u7f57\u00b7\u6f58\u6cfd\u4e0d\u5f97\u4e0d\u5efa\u9020\u81ea\u5df1\u7684\u9633\u53f0\u3002\u5f53\u83ab\u91cc\u65af\u88ab\u8058\u4e3a\u6f14\u5458\u65f6\uff0c\u4ed6\u5f88\u5feb\u5c31\u88ab\u5b89\u6392\u53bb\u642d\u5efa\u5e03\u666f\u3002\u6d77\u4f26\u8bb0\u5f97\uff0c\u201c\u83ab\u91cc\u65af\u7528\u5f20\u5f00\u7684\u9f3b\u5b54\u6253\u91cf\u7740\u8fd9\u4e2a\u5351\u9119\u7684\u573a\u666f\u3002\u4ed6\u4e0d\u5c51\u4e00\u987e\u5730\u62d2\u7edd\u4e86Vitagraph\u7684\u4e00\u4f4d\u5408\u4f19\u4eba\u7ed9\u4ed6\u7684\u722a\u9524\u3002\u83ab\u91cc\u65af\u5bf9\u6b64\u4e0d\u5c51\u4e00\u987e\uff0cVitagraph\u7684\u9ad8\u7ba1J\u00b7\u65af\u56fe\u5c14\u7279\u00b7\u5e03\u83b1\u514b\u987f\u6700\u7ec8\u5c48\u670d\u4e86\u3002\u6ca1\u8fc7\u591a\u4e45\uff0c\u6728\u5320\u5c31\u88ab\u96c7\u4f63\u4e86\uff0c\u6f14\u5458\u4eec\u53ef\u4ee5\u5168\u795e\u8d2f\u6ce8\u5730\u8868\u6f14\u4e86\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u94f6\u5e55\u5929\u624d\u5728\u638c\u63a7\u5c40\u9762\uff1a\u591a\u6d1b\u96f7\u65af\u8bb0\u5f97\u4e00\u4f4d\u5bfc\u6f14\u544a\u8bc9\u5979\uff0c\u7535\u5f71\u80a1\u7968\u4ecd\u7136\u6bd4\u6f14\u5458\u66f4\u503c\u94b1\u3002\n\u8212\u5c14\u66fc\u8ba4\u4e3a\uff0c\u201cD\u00b7W\u00b7\u683c\u91cc\u83f2\u65af\u4e3a\u7535\u5f71\u5bfc\u6f14\u6240\u505a\u7684\u4e8b\u60c5[\u2026]\u3002\u5bf9\u4e8e\u94f6\u5e55\u8868\u6f14\uff0c\u83ab\u91cc\u65af\u505a\u5230\u4e86\uff1a\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u628a\u6807\u51c6\u63d0\u9ad8\u5230\u4e86\u4e00\u4e2a\u66f4\u9ad8\u7684\u6807\u51c6\uff0c\u5f88\u5feb\u5c31\u6210\u4e3a\u4e86\u5e38\u6001\u3002\u4ed6\u6bd4\u683c\u91cc\u83f2\u65af\u65e9\u4e86\u4e00\u5e74\uff0c\u683c\u91cc\u83f2\u65af\u76f4\u52301908\u5e74\u624d\u5f00\u59cb\u4e3aBiograph\u5de5\u4f5c\u3002\u201c\u3002\u83ab\u91cc\u65af\u6539\u53d8\u4e86\u73a9\u5bb6\u5728\u955c\u5934\u524d\u7684\u884c\u4e3a\u65b9\u5f0f\u3002\u56e0\u4e3a\u6447\u52a8\u901f\u5ea6\u56e0\u6444\u5f71\u5e08\u800c\u5f02\uff0c\u5c31\u50cf\u653e\u6620\u901f\u5ea6\u56e0\u5f71\u9662\u800c\u5f02\u4e00\u6837\uff0c\u65e0\u58f0\u7684\u94f6\u5e55\u4e0a\u4e5f\u6709\u5f88\u5927\u8303\u56f4\u7684\u8fd0\u52a8\u3002\u4e00\u4e9b\u53c2\u5c55\u5546\u751a\u81f3\u52a0\u5feb\u4e86\u4ed6\u4eec\u7684\u7248\u753b\u901f\u5ea6\uff0c\u4ee5\u4fbf\u5728\u4e00\u5929\u5185\u5bb9\u7eb3\u66f4\u591a\u7684\u653e\u6620\u3002\u6b63\u5982\u8212\u5c14\u66fc\u6240\u5c55\u793a\u7684\u90a3\u6837\uff0c\u83ab\u91cc\u65af\u5728\u5f53\u5730\u7684\u5339\u5179\u5821\u516c\u62a5\u548c\u5168\u56fd\u7684Photoplay\u4e2d\u88ab\u8a89\u4e3a\u5b9e\u65bd\u4e86\u4e00\u79cd\u66f4\u6162\u7684\u8868\u6f14\u98ce\u683c\u7684\u660e\u661f\uff0c\u5728\u5c4f\u5e55\u4e0a\u64ad\u653e\u5f97\u66f4\u903c\u771f\u3002\u5230\u4e861910\u5e74\uff0cVitagraph\u5c06\u83ab\u91cc\u65af\u5217\u4e3a\u8be5\u8282\u76ee\u7684\u660e\u661f\uff0c\u5e76\u914d\u4e0a\u8bf8\u5982\u201c\u4e0eMaurice Costello\u4e00\u8d77\u7684Vitagraph\u4e4b\u591c\u201d\u4e4b\u7c7b\u7684\u5ba3\u4f20\u5e7f\u544a\u3002\u6bcf\u5f53\u9700\u8981\u5b69\u5b50\u7684\u65f6\u5019\uff0c\u6d77\u4f26\u548c\u591a\u6d1b\u4e3d\u4e1d\u4e5f\u4f1a\u5f97\u5230\u989d\u5916\u7684\u5c4f\u5e55\u65f6\u95f4\u3002\n\u81ea\u4ece\u51fa\u7248\u7269\u5f00\u59cb\u5173\u6ce8\u83ab\u91cc\u65af\u7684\u5bb6\u5ead\u751f\u6d3b\u540e\uff0c\u4ed6\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u5c31\u5f00\u59cb\u4e0b\u964d\u3002\u5168\u4e16\u754c\u7684\u8ff7\u59b9\u4eec\u7684\u5fc3\u90fd\u5728\u8df3\u52a8\uff0c\u4e0d\u5f97\u4e0d\u627e\u4e00\u4e2a\u65b0\u7684\u3001\u672a\u5a5a\u7684\u65e5\u573a\u5076\u50cf\u3002\u5f53\u4ed6\u66b4\u529b\u9157\u9152\u7684\u6d88\u606f\u4f20\u51fa\u65f6\uff0c\u4ed6\u7684\u58f0\u8a89\u4e5f\u53d7\u5230\u4e86\u635f\u5bb3\u3002\u5230\u4e861913\u5e74\uff0c\u4ed6\u7684\u660e\u661f\u6b63\u5728\u8fc5\u901f\u892a\u8272\uff0c1914\u5e74\u4e4b\u540e\uff0cVitagraph\u4e0d\u518d\u4f7f\u7528\u4ed6\u4f5c\u4e3a\u4e3b\u8981\u7403\u5458\u3002\u83ab\u91cc\u65af\u5728\u7535\u5f71\u548c\u5267\u9662\u4e4b\u95f4\u6765\u56de\u5954\u6ce2\uff0c\u53d1\u73b0\u6bcf\u90e8\u4f5c\u54c1\u7684\u6536\u8d39\u90fd\u8f83\u4f4e\u3002\u8fd9\u5bb6\u4eba\u5f88\u5feb\u53d1\u73b0\u81ea\u5df1\u88ab\u5b64\u7acb\u5728\u4ed6\u4eec\u7684\u957f\u5c9b\u5e84\u56ed\u91cc\uff0c\u53ea\u6709\u6700\u8fd1\u540d\u4eba\u4e91\u96c6\u7684\u6d3e\u5bf9\u624d\u80fd\u7ef4\u6301\u4ed6\u4eec\u7684\u751f\u6d3b\u3002\u8d64\u88f8\u88f8\u7684\u5e76\u5217\n\u591a\u6d1b\u96f7\u65af\u4e0e\u5236\u7247\u5382\u6700\u5927\u7684\u660e\u661f\u7ea6\u7ff0\u00b7\u767d\u745e\u6469(John Barrymore)\u4e00\u8d77\u51fa\u6f14\u4e86\u201c\u6d77\u517d\u201d(1926)\u3002\u767d\u745e\u6469\u5f53\u65f6\u6b63\u4e0e\u739b\u4e3d\u00b7\u963f\u65af\u7279\u6709\u67d3\uff0c\u5979\u88ab\u591a\u6d1b\u4e3d\u4e1d\u8ff7\u4f4f\u4e86\u3002\u83ab\u91cc\u65af\u770b\u5230\u5973\u513f\u88ab\u4ed6\u8ba4\u4e3a\u5e94\u8be5\u6210\u4e3a\u7684\u90a3\u79cd\u660e\u661f\u8ffd\u6c42\u65f6\uff0c\u975e\u5e38\u5ac9\u5992\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u81f3\u5c11\u5bf9\u83ab\u91cc\u65af\u6765\u8bf4\uff0c\u767d\u745e\u6469\u548c\u6885\u5f88\u5feb\u6210\u4e86\u670b\u53cb\u3002\u867d\u7136\u5df4\u91cc\u83ab\u5c14\u5bb6\u65cf\u7684\u4e0d\u673d\u540d\u4eba\u51e0\u5341\u5e74\u6765\u5df2\u7ecf\u5728\u7535\u5f71\u53f2\u4e0a\u7ad9\u7a33\u811a\u8ddf\uff0c\u4f46\u8212\u5c14\u66fc\u7684\u4e66\u901a\u8fc7\u6316\u6398\u79d1\u65af\u7279\u6d1b\u5bb6\u65cf\u4e4b\u524d\u7684\u540d\u6c14\uff0c\u4e3a\u6545\u4e8b\u589e\u52a0\u4e86\u4e00\u4e2a\u957f\u671f\u7f3a\u5931\u7684\u5c42\u9762\u3002\u6b64\u5916\uff0c\u5982\u679c\u6ca1\u6709\u4ed6\u4e0e\u591a\u6d1b\u4e3d\u4e1d\u8fbe\u6210\u7684\u5c4f\u5e55\u5316\u5b66\u53cd\u5e94\uff0c\u767d\u745e\u6469\u5f88\u53ef\u80fd\u4f1a\u6bd4\u4ed6\u66f4\u65e9\u5730\u81ea\u6bc1\u3002\n\u83ab\u91cc\u65af\u5728\u81ea\u6211\u7834\u574f\u7684\u6e38\u620f\u4e2d\u9065\u9065\u9886\u5148\u4e8e\u767d\u745e\u6469\u3002\u4ed6\u7684\u5ac9\u5992\u4fc3\u4f7f\u4ed6\u5bc6\u5207\u5173\u6ce8\u8fd9\u5bb6\u4eba\u5728\u597d\u83b1\u575e\u7684\u6240\u4f5c\u6240\u4e3a\uff0c\u7279\u522b\u662f\u5728\u767d\u745e\u6469\u642c\u5230\u4ed6\u4eec\u90a3\u91cc\u4e4b\u540e\u3002\u591a\u6d1b\u4e3d\u4e1d\u548c\u767d\u745e\u6469\u4e8e1928\u5e74\u7ed3\u5a5a\uff0c\u6b64\u524d\u5979\u66fe\u4e0e\u5236\u7247\u5382\u603b\u88c1\u54c8\u91cc\u00b7\u534e\u7eb3\u7684\u513f\u5b50\u5218\u6613\u65af\u00b7\u534e\u7eb3\u77ed\u6682\u7ea6\u4f1a\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6d77\u4f26\u5728\u201c\u7ebd\u7ea6\u4e4b\u5149\u201d(1928\u5e74)\u4e2d\u83b7\u5f97\u4e86\u4e00\u4e2a\u89d2\u8272\uff0c\u8fd9\u662f\u7b2c\u4e00\u90e8\u957f\u7bc7\u7684\u5168\u5bf9\u8bdd\u7535\u5f71\u3002\u8212\u5c14\u66fc\u8bf4\uff1a\u201c\u5c3d\u7ba1\u591a\u6d1b\u4e3d\u4e1d\u5982\u6b64\u8ff7\u4eba\u548c\u53d7\u6b22\u8fce\uff0c\u4f46\u521b\u9020\u5386\u53f2\u7684\u662f\u6d77\u4f26\u3002\u201d\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u90e8\u7535\u5f71\u4e0d\u8db3\u4ee5\u8d62\u5f97\u5979\u7684\u660e\u661f\u5730\u4f4d\uff0c\u5979\u7684\u804c\u4e1a\u751f\u6daf\u5f88\u5feb\u5c31\u6ce1\u6c64\u4e86\u3002\u5c31\u5979\u800c\u8a00\uff0c\u591a\u6d1b\u4e3d\u4e1d\u5bf9\u9001\u6765\u7684\u5267\u672c\u7c7b\u578b\u611f\u5230\u65e0\u804a\u5f97\u6d41\u4e0b\u4e86\u773c\u6cea\uff0c\u5979\u81ea\u613f\u79bb\u5f00\u5236\u7247\u5382\uff0c\u626e\u6f14\u7ea6\u7ff0\u00b7\u767d\u745e\u6469(John Barrymore)\u7684\u59bb\u5b50\u3002\u8fd9\u5bf9\u592b\u5987\u5f88\u5feb\u5c31\u751f\u4e0b\u4e86\u8fea\u5fb7\uff0c\u4ed6\u4eca\u5929\u4ecd\u7136\u5065\u5728\uff0c\u5e76\u4e3a\u8fd9\u672c\u4e66\u63a5\u53d7\u4e86\u91c7\u8bbf\u3002\u968f\u7740\u767d\u745e\u6469\u4e8b\u4e1a\u7684\u6301\u7eed\u53d1\u5c55\uff0c\u591a\u6d1b\u4e3d\u4e1d\u5f00\u59cb\u5168\u795e\u8d2f\u6ce8\u4e8e\u5bb6\u5ead\u751f\u6d3b\uff0c\u6700\u7ec8\u88ab\u89e3\u96c7\u4e86\u5728\u534e\u7eb3\u5144\u5f1f\u7684\u5408\u540c\u3002\u4e0e\u8bb8\u591a\u5176\u4ed6\u5236\u7247\u5382\u4e00\u6837\uff0c\u534e\u7eb3\u6709\u4e00\u9879\u6761\u6b3e\uff0c\u5141\u8bb8\u4ed6\u4eec\u5728\u5973\u6f14\u5458\u6000\u5b55\u540e\u89e3\u96c7\u5979\u4eec\u3002\u867d\u7136\u591a\u6d1b\u4e3d\u4e1d\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u592a\u613f\u610f\u91cd\u8fd4\u94f6\u5e55\uff0c\u4f46\u8fd9\u4ee4\u4eba\u9707\u60ca\u5730\u63d0\u9192\u4eba\u4eec\uff0c\u5236\u7247\u5382\u5bf9\u81ea\u5df1\u7684\u624d\u534e\u8fdb\u884c\u4e86\u4e25\u5389\u7684\u63a7\u5236\u3002\n\u591a\u6d1b\u4e3d\u4e1d\u548c\u6d77\u4f26\u57281929\u5e74\u7684\u6f14\u51fa\u4e2d\u5f97\u5230\u4e86\u534e\u7eb3\u5144\u5f1f\u7684\u9001\u522b\u3002\u7136\u800c\uff0c\u6885\u6b7b\u540e\uff0c\u8fd9\u5bb6\u4eba\u5f00\u59cb\u5206\u5d29\u79bb\u6790\u3002\u8212\u5c14\u66fc\u5e26\u7740\u8bfb\u8005\u8fdb\u884c\u4e86\u51e0\u6b21\u5947\u602a\u7684\u65c5\u884c\uff0c\u5176\u4e2d\u4e00\u6b21\u662f\u5e74\u8f7b\u7684\u94a2\u7434\u6559\u5e08\u7ef4\u7ef4\u5b89\u00b7\u68ee\u683c\u52d2(Vivienne Sengler)\u8d77\u8bc9\u83ab\u91cc\u65af\uff0c\u8981\u6c42\u4ed6\u8d54\u507f10\u4e07\u7f8e\u5143\uff0c\u636e\u8bf4\u83ab\u91cc\u65af\u89e3\u9664\u4e86\u4ed6\u4eec\u7684\u8ba2\u5a5a\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u662f\u5426\u6709\u4eba\u6c42\u5a5a\uff0c\u4f46\u8212\u5c14\u66fc\u63f4\u5f15\u4e86\u4e00\u5c01\u4fe1\uff0c\u5728\u4fe1\u4e2d\uff0c\u5979\u5a01\u80c1\u8bf4\uff0c\u5982\u679c\u83ab\u91cc\u65af\u4e0d\u56de\u4fe1\uff0c\u5979\u5c31\u4f1a\u81ea\u6740\u3002\u8212\u5c14\u66fc\u8ba4\u4e3a\u68ee\u683c\u52d2\u201c\u5bf9\u4e00\u4e2a\u5931\u8d25\u7684\u7535\u5f71\u660e\u661f\u6000\u6709\u604b\u6bcd\u60c5\u7ed3\u201d\u3002\u8fd9\u6bb5\u5947\u602a\u7684\u63d2\u66f2\u663e\u793a\u4e86\u7535\u5f71\u53d1\u5c55\u7684\u591a\u4e48\u8fc5\u901f\uff0c\u4e00\u4e2a\u4eba\u53ef\u80fd\u662f\u6c89\u9ed8\u65f6\u4ee3\u7684\u4e3b\u8981\u660e\u661f\uff0c\u4f46\u5230\u4e861930\u5e74\u5c31\u88ab\u6dd8\u6c70\u4e86\uff0c\u4f46\u4ecd\u7136\u6709\u4e00\u79cd\u6325\u4e4b\u4e0d\u53bb\u7684\u540d\u4eba\u3002\n\u6d77\u4f26\u540e\u6765\u5ac1\u7ed9\u4e86\u6bd4\u5979\u5927\u5f88\u591a\u5e74\u7684\u6f14\u5458\u517c\u5bfc\u6f14\u6d1b\u5384\u5c14\u00b7\u8c22\u5c14\u66fc(\u53ef\u80fd\u6700\u51fa\u540d\u7684\u662f\u5728\u300a\u5979\u5bf9\u4ed6\u4e0d\u597d\u300b\u4e2d\u6267\u5bfc\u4e86\u6885\u00b7\u97e6\u65af\u7279[1933])\u3002\u4ed6\u4eec\u7684\u5a5a\u59fb\u57281932\u5e74\u7834\u88c2\uff0c\u5f53\u65f6\u8212\u5c14\u66fc\u79f0\u8fd9\u573a\u79bb\u5a5a\u8bc9\u8bbc\u662f\u201c\u597d\u83b1\u575e\u5386\u53f2\u4e0a\u6700\u5177\u7834\u574f\u6027\u7684\u5a5a\u59fb\u8bfd\u8c24\u8fd0\u52a8\u4e4b\u4e00\u201d\u3002\u9996\u5148\uff0c\u8c22\u5c14\u66fc\u5077\u8d70\u4e86\u6d77\u7433\u4ef7\u503c10\u4e07\u7f8e\u5143\u7684\u73e0\u5b9d\uff0c\u6700\u540e\u624d\u5c06\u5176\u5f52\u8fd8\uff1b\u7136\u540e\u4ed6\u6307\u63a7\u5979\u6709\u9157\u9152\u95ee\u9898\uff0c\u8fd9\u80af\u5b9a\u662f\u5bb6\u65cf\u9057\u4f20\u7684\u3002\u6700\u540e\uff0c\u4e5f\u662f\u6700\u5177\u653b\u51fb\u6027\u7684\u662f\uff0c\u4ed6\u63ed\u9732\u4e86\u6d77\u7433\u662f\u4e00\u4e2a\u8272\u60c5\u8bfb\u8005\uff0c\u5411\u6cd5\u5ead\u63d0\u4ea4\u4e86\u5979\u768414\u672c\u4e66\uff0c\u5176\u4e2d\u5305\u62ec\u201c\u8303\u59ae\u00b7\u5e0c\u5c14\u56de\u5fc6\u5f55\u201d(Memoir Of Fanny Hill)\u3002\u8fd9\u4e9b\u6587\u672c\u7684\u6240\u6709\u6743\u4ece\u672a\u660e\u786e\u786e\u5b9a\uff0c\u8fd9\u4e9b\u4e66\u7c4d\u5947\u602a\u5730\u4ece\u6cd5\u9662\u6d88\u5931\u4e86\u3002\u8212\u5c14\u66fc\u8be6\u7ec6\u63cf\u8ff0\u4e86\u968f\u4e4b\u800c\u6765\u7684\u6574\u4e2a\u79bb\u5947\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\u3002\u6b63\u5982\u201c\u7535\u5f71\u7ecf\u5178\u201d(Movie Classic)\u57281932\u5e74\u6240\u5199\u7684\u90a3\u6837\uff0c\u201c\u8fd9\u662f\u4e00\u573a\u7f8e\u597d\u7684\u3001\u8001\u5f0f\u7684\u79bb\u5a5a\uff0c\u6709\u70df\u706b\u3001\u773c\u6cea\uff0c\u6709\u6307\u8d23--\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u5230\u4e00\u4e9b\u7535\u5f71\u6743\u52bf\u4eba\u7269\u4ecb\u5165\u5e76\u63a8\u4e0b\u4e86\u8f6f\u8e0f\u677f\u3002\u201d\n\u6d77\u4f26\u6709\u4e00\u8fde\u4e32\u7684\u5384\u8fd0\u4f34\u968f\u7740\u5979\u7684\u4f59\u751f\u3002\u6291\u90c1\u3001\u62d9\u52a3\u7684\u624b\u672f\u3001\u6ee5\u7528\u836f\u7269\u548c\u5728\u7597\u517b\u9662\u5ea6\u8fc7\u7684\u65f6\u95f4\u5c06\u5b9a\u4e49\u5979\u7684\u665a\u5e74\u751f\u6d3b\u3002\u83ab\u91cc\u65af\u548c\u7ea6\u7ff0\u00b7\u767d\u745e\u6469\u4e5f\u4f1a\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5916\u51fa\uff0c\u53ea\u662f\u5e26\u7740\u74f6\u5b50\u3002\u591a\u6d1b\u4e3d\u4e1d\u575a\u6301\u7684\u65f6\u95f4\u8981\u957f\u5f97\u591a\uff0c\u5c3d\u7ba1\u5979\u5728\u597d\u83b1\u575e\u7684\u5de5\u4f5c\u523040\u5e74\u4ee3\u4e2d\u671f\u5c31\u4f1a\u7ed3\u675f\uff0c\u5979\u7684\u6700\u540e\u4e24\u4e2a\u89d2\u8272\u662f\u5728\u201c\u4e86\u4e0d\u8d77\u7684\u5b89\u4f2f\u68ee\u4e00\u5bb6\u201d(1942)\u548c\u201c\u8fd9\u662f\u519b\u961f\u201d(1943)\u4e2d\u3002\n\u4e0e\u8bb8\u591a\u81ed\u540d\u662d\u8457\u7684\u597d\u83b1\u575e\u5bb6\u65cf\u7684\u5386\u53f2\u4e0d\u540c\uff0c\u8212\u5c14\u66fc\u7684\u5386\u53f2\u4e0d\u4f1a\u6c89\u6d78\u5728\u660e\u661f\u7684\u8870\u843d\u4e2d\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u7535\u5f71\u7684\u7b2c\u4e00\u5bb6\u5ead\u5c55\u793a\u4e86\u5bfc\u81f4\u79d1\u65af\u7279\u6d1b\u592b\u5987\u53d6\u5f97\u6210\u5c31\u7684\u529b\u91cf\uff0c\u5728\u4e00\u4e9b\u5f02\u5e38\u56f0\u96be\u7684\u65f6\u671f\uff0c\u5728\u4e00\u79cd\u5168\u65b0\u5a92\u4f53\u7684\u8bde\u751f\u548c\u53d1\u5c55\u4e2d\u3002\u83ab\u91cc\u65af\u3001\u6d77\u4f26\u548c\u591a\u6d1b\u4e3d\u4e1d\u662f\u7b2c\u4e00\u6279\u6311\u6218\u597d\u83b1\u575e\u804c\u4e1a\u751f\u6daf\u7684\u7535\u5f71\u540d\u4eba\uff0c\u4ece\u5e74\u8f7b\u7684\u540d\u6c14\u5230\u4e11\u95fb\u548c\u9057\u5fd8\u3002\u867d\u7136\u767d\u745e\u6469\u592b\u5987\u5c06\u6c38\u8fdc\u88ab\u4eba\u4eec\u8bb0\u4f4f\uff0c\u4f46\u79d1\u65af\u7279\u6d1b\u592b\u5987\u8fd8\u6ca1\u6709\u5206\u4eab\u4ed6\u4eec\u6c38\u6052\u7684\u540d\u4eba\u3002\u8212\u5c14\u66fc\u7684\u4f20\u8bb0\u5728\u7ea0\u6b63\u8fd9\u79cd\u5ffd\u89c6\u65b9\u9762\u8d70\u4e86\u4e00\u6bb5\u8def\uff0c\u8868\u660e\u4ecd\u6709\u8bb8\u591a\u88ab\u9057\u5fd8\u7684\u8001\u597d\u83b1\u575e\u6545\u4e8b\u6709\u5f85\u8bb2\u8ff0\u3002", "note_en": "FILM HISTORIANS HAVE long viewed Florence Turner, the \u201cVitagraph Girl,\u201d as the first movie star. A new study, however, argues that Maurice Costello was the first widely recognized film star. Terry Shulman\u2019s  Film\u2019s First Family: The Untold Story of the Costellos cites a 1912 poll in  Motion Picture Story Magazine showing not only that Costello was the \u201cmost popular player\u201d but also that he had more votes than notable stars Florence Lawrence and Florence Turner combined. In 1924,  Photoplay named him \u201cthe most recognized star in motion pictures.\u201d\n Maurice Costello was born in 1877 in Pittsburgh, at a difficult time for the city. Poor, sick mill workers abounded, and famine was rampant. His father died at 25; his mother was a widow who rented a large house and took on boarders \u2014 all Irish Catholic mill workers. Pittsburgh had been a town that championed theater; by the 1860s, however, the famed Pittsburgh Theater \u201cwas off limits to polite society\u201d because it had become \u201cthe exclusive domain of local rowdies \u2014 working class toughs who drank openly during performances and behaved disruptively throughout.\u201d The town was in desperate need of a cultural overhaul.\n Drawn to the stage, Maurice found his first entertainment job singing \u201cThe Mick Who Threw the Brick\u201d in 1894. Many Irish immigrants were taking to vaudeville, which was quickly becoming the people\u2019s theater. The majority of these acts were comedy, with a dash of athletics such as boxing. Maurice also worked for Harry Davis, an entertainment entrepreneur who ran everything from museums and theaters to the early nickelodeons. It would take Maurice many years of grinding out gigs in saloons, playhouses, and \u201cseedy auditoriums\u201d in order to prove his value as a performer.\n In 1902, Maurice married Mae Altschuk, whose father detested the acting profession. Though Pittsburgh had one of the highest infant mortality rates in the country, Mae gave birth to two healthy daughters, Dolores in 1903 and Helene in 1906, both destined for show business. Maurice was an established stage actor, but movies were the growing \u2014 and better paying \u2014 trend. Unfortunately, working on film was seen by the high-minded theater crowd as an \u201cartistic felony.\u201d Intrigued by the new medium, Maurice began working for Vitagraph director Van Dyke Brooke in 1907.\n Maurice quickly set out to change the film business. On the stage, the actor\u2019s job was solely to act, but when Maurice arrived at Vitagraph, he saw actors doing many other tasks when not in front of the camera. Florence Turner, the famed \u201cVitagraph Girl,\u201d recalled that, when she wasn\u2019t performing, she was keeping books, attending business meetings, and writing checks in the main office. Paul Panzer, who played Romeo in the studio\u2019s version of  Romeo and Juliet, had to build his own balcony. When Maurice was hired as an actor, he was quickly put to work building sets. As Helene remembers, \u201cMaurice surveyed this ignoble scene with flaring nostrils. In cold disdain, he rejected the claw hammer offered him by one of the Vitagraph partners.\u201d Maurice would have none of it, and Vitagraph executive J. Stuart Blackton finally gave in. It was not long before carpenters were hired, and actors could focus fully on acting. This did not mean the screen talent was running the show: Dolores remembers a director telling her that the film stock was still worth more than the actors.\n Shulman argues that \u201cwhat D. W. Griffith did for film direction [\u2026], Maurice did for screen acting: that is, he raised the bar to a higher standard that quickly became the norm. And he did it a year before Griffith, who didn\u2019t come work for Biograph until 1908.\u201d Maurice transformed how players acted in front of the camera. Because cranking speeds varied by cameraperson, just as projection speeds varied by cinema, there was a wide range of movement on the silent screen. Some exhibitors even sped up their prints so as to fit more screenings into a day. As Shulman shows, Maurice was hailed \u2014 locally in the  Pittsburgh Gazette and nationally in  Photoplay \u2014 as the star who implemented a slower style of acting that played back onscreen more realistically. By 1910, Vitagraph was billing Maurice as the star of the program, with promotional blurbs such as, \u201cA Vitagraph Night with Maurice Costello.\u201d Helene and Dolores were also getting screen time as extras whenever children were needed.\n  Maurice\u2019s popularity began to wane once publications started taking note of his family life. The throbbing hearts of fangirls worldwide had to find a new, unmarried matinee idol. His reputation also suffered when news broke of his violent alcoholism. By 1913, his star was fading fast, and after 1914, Vitagraph no longer used him as a primary player. Maurice jumped between film and theater, finding lower billing with each production. The family soon found themselves isolated in their Long Island estate, with only the recent memory of celebrity-studded parties to sustain them. The stark juxtaposition between excess and poverty was something his daughters would never forget.\n Their fortunes changed again when a talent scout from Warner Bros. reached out to Dolores and offered her a screen test. Dolores, Helene, and Mae hopped on a train for Los Angeles while Maurice stayed behind to nurse his ailing stage career. Both Dolores and Helene landed small roles. They warmly remembered meeting Rin Tin Tin, the first star at Warner Bros., along with some of his puppies. In 1925, the Costello girls were given one-year contracts with the studio. Shulman\u2019s narrative of the Costello women\u2019s career adds useful context to our knowledge of the early Warner Bros. studio.\n Dolores was cast alongside John Barrymore, the studio\u2019s biggest star, in  The Sea Beast (1926). Barrymore, who was then having an affair with Mary Astor, was smitten with Dolores. Maurice could not have been more jealous to see his daughter being courted by the type of star he believed he still should be. To make matters worse, at least for Maurice, Barrymore and Mae became fast friends. While the monumental celebrity of the Barrymore family has been solidified in film history for decades, Shulman\u2019s book adds a long-missing layer to the tale, with its excavation of the prior fame of the Costellos. Moreover, without the screen chemistry he achieved with Dolores, Barrymore likely would have self-destructed much sooner than he did.\n  Maurice was well ahead of Barrymore in the game of self-sabotage. His jealousy led him to keep tabs on the family\u2019s doings in Hollywood, especially after Barrymore moved in with them. Dolores and Barrymore wed in 1928, after she had briefly dated Lewis Warner, son of studio president Harry Warner. At the same time, Helene landed a role in  Lights of New York (1928), the first feature-length all-talking film. \u201cFor all Dolores\u2019s glamour and popularity,\u201d Shulman observes, \u201cit was Helene who made history.\u201d Unfortunately, the film was not enough to win her stardom, and her career quickly fizzled. For her part, Dolores, bored to tears over the types of scripts being sent her way, voluntarily left the studio to play wife to John Barrymore. The couple soon gave birth to Dede, who is still alive today and who was interviewed for the book. Dolores, who became absorbed in domestic life as Barrymore\u2019s career continued to take off, was eventually let go from her contract at Warner Bros. Like many other studios, Warners had a clause that legally allowed them to fire actresses if they got pregnant. While Dolores didn\u2019t much care to return to the screen anyway, this stands as a startling reminder of the draconian control the studios had over their talent.\n Dolores and Helene would get their Warner Bros. sendoff in  Show of Shows in 1929. After Mae\u2019s death, however, the family began to unravel. Shulman takes readers on several strange journeys, in one of which a young piano teacher, Vivienne Sengler, sues Maurice for $100,000 after he supposedly broke off their engagement. It\u2019s unclear whether or not there was ever a proposal, but Shulman, who sees Sengler as harboring \u201can oedipal obsession with a washed-up movie star,\u201d cites one letter in which she threatened to kill herself if Maurice didn\u2019t write back. This strange episode shows how quickly the movies evolved, where someone could be a major silent-era star but washed up by 1930, yet still have a kind of lingering celebrity.\n Helene went on to marry actor/director Lowell Sherman, who was many years her senior (and probably best known for directing Mae West in  She Done Him Wrong [1933]). Their marriage fell apart in 1932, during a divorce proceeding that Shulman calls \u201cone of the most damaging marital smear campaigns in Hollywood history.\u201d First, Sherman stole $100,000 worth of Helene\u2019s jewelry before ultimately returning it; then he accused her of having a drinking problem, which certainly ran in the family. Finally, and most aggressively, he exposed Helene as a reader of pornography, submitting 14 of her books to the court, including  The Memoirs of Fanny Hill. The ownership of these texts was never clearly established, and the books strangely went missing from the courthouse. Shulman details the entire bizarre series of events that followed. As  Movie Classic wrote in 1932, \u201cIt was a good, old-fashioned divorce with fireworks, tears, accusations \u2018n\u2019 everything \u2014 that is, until some of the Movie Powers stepped in and pushed down the soft pedal.\u201d\n  Helene had a string of bad luck that followed her for the rest of her life. Episodes of depression, botched surgeries, drug abuse, and time spent in sanitariums would define her later life. Maurice and John Barrymore would go out in similar fashion, by way of the bottle. Dolores hung on much longer, though her stint in Hollywood would be over by the mid-\u201940s, with her last two roles in  The Magnificent Ambersons (1942) and  This is the Army (1943).\n Unlike many histories of notorious Hollywood families, Shulman\u2019s does not wallow in the downfall of its stars. Instead,  Film\u2019s First Family shows the strengths that led to the Costellos\u2019 accomplishments, during some extraordinarily difficult times and amid the birth and growth of an entirely new medium. Maurice, Helene, and Dolores were among the first film celebrities to run the complete gauntlet of a Hollywood career, from youthful fame to scandal and oblivion. While the Barrymores will be remembered forever, the Costellos have yet to share in their enduring celebrity. Shulman\u2019s biography goes some distance toward rectifying this neglect, showing that there are still many forgotten stories of old Hollywood left to be told.", "posttime": "2020-06-15 05:28:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,movie", "title": "\u88ab\u9057\u5fd8\u7684\u7535\u5f71\u7248\u7a0e", "title_en": "Forgotten Movie Royalty", "transed": 1, "url": "https://lareviewofbooks.org/article/forgotten-movie-royalty/", "via": "", "real_tags": ["\u7535\u5f71", "movie"]}, {"category": "", "categoryclass": "", "imagename": "5db224db473f8eee63db4357c422fe6d.png", "infoid": 1006573, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\nNewt DB\u662f\u4e00\u4e2aPython\u9762\u5411\u5bf9\u8c61\u7684\u6570\u636e\u5e93\uff0c\u5728PostgreSQL http://www.newtdb.org\u4e2d\u5177\u6709\u57fa\u4e8eJSONB\u7684\u8bbf\u95ee\u548c\u641c\u7d22\u529f\u80fd", "note_en": "GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n   Newt DB is a Python object-oriented database with JSONB-based access and search in PostgreSQL    http://www.newtdb.org", "posttime": "2020-06-15 05:27:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u6570\u636e\u5e93,database,python,newt", "title": "Newt DB\uff0c\u4e24\u6816\u6570\u636e\u5e93-\u4e0a\u9762\u662fPython\u5bf9\u8c61\uff0c\u4e0b\u9762\u662fPostgreSQL JSONB", "title_en": "Newt DB, the amphibious database \u2013 Python objects above, PostgreSQL JSONB below", "transed": 1, "url": "https://github.com/newtdb/db", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "python", "newt"]}, {"category": "", "categoryclass": "", "imagename": "c5275f3a94cf5e09301fead2147ebd1d.jpeg", "infoid": 1006572, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u65e9\u57282013\u5e74\u5c31\u63a8\u51fa\u4e86Hangout\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b83\u4e5f\u662f\u8bd5\u56fe\u5c06\u5176\u4e0d\u540c\u7684\u670d\u52a1(Gtalk\uff0cG+Messenger)\u7edf\u4e00\u5230\u4e00\u4e2a\u4ea7\u54c1\u4e2d\uff0c\u800cHangout\u7684\u5b9a\u4f4d\u7c7b\u4f3c\u4e8eWhatsApp\u3002\u8fd9\u4e00\u7b56\u7565\u6709\u4e00\u5b9a\u7684\u9053\u7406\uff0c\u5c3d\u7ba1\u5b83\u4ece\u672a\u771f\u6b63\u8d77\u98de(\u4e0eWhatsApp\u76f8\u6bd4)\u3002\u6700\u5927\u7684\u539f\u56e0\u53ef\u80fd\u662f\uff0c\u6ca1\u6709\u8db3\u591f\u4e13\u6ce8\u4e8e\u4e00\u79cd\u7279\u5b9a\u7684\u6c9f\u901a\u65b9\u5f0f\u3002Hangout\u65e2\u6709\u804a\u5929\u529f\u80fd\uff0c\u4e5f\u6709\u89c6\u9891\u529f\u80fd\uff0c\u6b64\u5916\uff0c\u5b83\u8fd8\u4f5c\u4e3a\u9762\u5411\u4f01\u4e1a\u7684GSuite\u7684\u4e00\u90e8\u5206\u51fa\u552e\u3002\n\u5feb\u8fdb\u52302017\u5e74&Amp\uff1b\u7684\u4ea4\u6d41\u7a7a\u95f4\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u52a0\u5feb\u4e86\u6b65\u4f10\u3002Slake\u4e13\u6ce8\u4e8e\u4f01\u4e1a\u901a\u4fe1\uff0cZoom\u7528\u4e8e\u4f01\u4e1a\u89c6\u9891\u4f1a\u8bae\uff0cWhatsapp Video&amp\uff1bFacetime\u7528\u4e8e\u4e2a\u4eba\u89c6\u9891\u804a\u5929\uff0camp\uff1bWhatsApp(&amp\uff1b\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u7528\u4e8e\u804a\u5929\u7684FB Mess)\u3002\u6240\u6709\u8fd9\u4e9b\u4ea7\u54c1\u90fd\u8868\u660e\uff0c\u4e0d\u540c\u7684\u6c9f\u901a\u9700\u6c42\u9700\u8981\u4e0d\u540c\u7684\u4ea7\u54c1\u3002\u6709\u4e86\u8fd9\u4e00\u70b9\uff0cHangout\u53d1\u73b0\u81ea\u5df1\u5728\u6240\u6709\u8fd9\u4e9b\u7f51\u7ad9\u4e2d\u5904\u4e8e\u4e00\u4e2a\u5947\u602a\u7684\u4f4d\u7f6e\u3002\u8fd9\u5c31\u662f\u8c37\u6b4c\u5f00\u59cb\u5bc6\u5207\u5173\u6ce8\u7684\u65f6\u5019&\u6253\u9020\u4e0e\u5f53\u65f6\u5b9e\u9645\u9700\u6c42\u76f8\u4f3c\u7684\u4ea7\u54c1\u3002\u73b0\u5728\u6211\u4eec\u6709&#34\uff1bMeet&34\uff1b\uff0c&#34\uff1bChat&34\uff1b\uff0c&#34\uff1bDuo&34\uff1b\u548c&#34\uff1bMessages&#34\uff1b\uff0c\u5b83\u4eec\u4e0e\u7ade\u4e89\u5bf9\u624b\u4e0d\u76f8\u4e0a\u4e0b\u3002\nMeet&amp\uff1bDuo\u5206\u522b\u4e0eZoom&amp\uff1bWhatsApp\u89c6\u9891/Facetime\u4e0d\u76f8\u4e0a\u4e0b\u3002\u4f46\u8fd9\u4f3c\u4e4e\u662f\u6700\u6709\u8da3\u7684\u804a\u5929\u4fe1\u606f(Messages&34\uff1b&amp\uff1bChat&34\uff1b)\u3002\n&#34\uff1b\u6d88\u606f&#34\uff1b\u5982\u679c\u60a8\u6ca1\u6709\u6ce8\u610f\u5230\u662f\u9ed8\u8ba4\u6d88\u606f(\u8fd8\u8bb0\u5f97\u5417\uff1f)\u3002\u5b89\u5353\u624b\u673a\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u4e0e\u60a8\u7684Pixel\u624b\u673a\u4e00\u8d77\u9884\u88c5\uff0c\u5e76\u4e14\u5728\u5176\u4ed6\u624b\u673a\u4e0a\u9884\u88c5\uff0c\u60a8\u5fc5\u987b\u5355\u72ec\u5b89\u88c5\u3002\u6700\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u5b9e\u662f\uff0c\u5b83\u7684Play\u5546\u5e97\u4e0b\u8f7d\u91cf\u8d85\u8fc7\u4e8610\u4ebf\u6b21\uff01\u8fd9\u6b3e\u5e94\u7528\u73b0\u5728\u652f\u6301Rich Messages\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u5c31\u50cfWhatsApp\u4e00\u6837\u3002\u8c37\u6b4c\u5df2\u7ecf\u4e3a\u5b83\u53d1\u5e03\u4e86\u4e00\u4e2a\u7f51\u9875\u7248\u672c\uff0c\u5c31\u50cfWhatsApp web\u4e00\u6837\u3002\u4e0d\u8fc7\uff0c\u6700\u68d2\u7684\u662f\uff0cDuo\u76f4\u63a5\u96c6\u6210\u5230\u4e86\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u4f7f\u5f97\u8c37\u6b4c\u66f4\u5bb9\u6613\u5411\u7528\u6237\u63a8\u5e7fDuo\u3002\n\u8fd9\u6b3e\u804a\u5929\u5e94\u7528\u975e\u5e38\u4e13\u6ce8\u4e8e\u4f01\u4e1a\u3002\u5b83\u6709\u4e00\u4e2a\u975e\u5e38\u677e\u6563\u7684\u529f\u80fd\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u4e0eMeet\u76f4\u63a5\u96c6\u6210\u7684\u529f\u80fd\u3002\u804a\u5929\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u8c37\u6b4c\u53ef\u4ee5\u5c06\u5b83\u7684\u5176\u4ed6GSuite\u4ea7\u54c1\uff0c\u5982Drive\u3001\u6587\u6863\u3001\u5de5\u4f5c\u8868\u90fd\u96c6\u6210\u5230\u804a\u5929\u4e2d\u3002\u5c06\u5b83\u4e0eMeet\u5206\u5f00\u4e5f\u53ef\u4ee5\u8ba9\u8c37\u6b4c\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u9500\u552e\u804a\u5929\u548cMeet\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4eba\u5b89\u6392\u4f1a\u9762\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u6536\u53d6\u804a\u5929\u8d39\u7528\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4eba\u4eec\u559c\u6b22\u89c1\u9762\uff0c\u4ed6\u4eec\u53ef\u80fd\u4e5f\u559c\u6b22\u4f7f\u7528\u804a\u5929\u3002(\u4f46\u6211\u8ba4\u4e3a\u53cd\u8fc7\u6765\u6548\u679c\u4f1a\u66f4\u597d)\u3002\u5728\u672a\u6765\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230Chat\u4e0e\u5176\u4ed6Google\u4ea7\u54c1\uff0c\u5982Docs\uff0cSheet\uff0cCalendar\uff0cGmail\u6709\u66f4\u7d27\u5bc6\u7684\u96c6\u6210\u3002\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u4f01\u4e1a\u5ba2\u6237\u5e0c\u671b\u4ece\u4e00\u4e2a\u5730\u65b9\u505a\u6240\u6709\u4e8b\u60c5\uff0c\u4ee5\u63d0\u9ad8\u751f\u4ea7\u529b\u3002\u8fd9\u4e5f\u4f7f\u5b83\u6210\u4e3a\u5fae\u8f6f\u56e2\u961f\u66f4\u76f4\u63a5\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8c37\u6b4c\u7684\u901a\u4fe1\u4ea7\u54c1\u73b0\u5728\u4f3c\u4e4e\u66f4\u7b26\u5408\u4e0d\u540c\u7528\u6237\u3001\u4f01\u4e1a\uff0c\u5c24\u5176\u662f\u7ade\u4e89\u5bf9\u624b\u7684\u671f\u671b\u3002\u8fd9\u91cc\u7684\u5173\u952e\u662f\u4ece\u4ea7\u54c1\u7684\u89d2\u5ea6\u6216\u901a\u8fc7\u96c6\u6210\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u63d0\u4f9b\u4ef7\u503c\uff0c\u4ece\u800c\u5e26\u6765\u8db3\u591f\u7684\u5dee\u5f02\u5316\u3002\u4f8b\u5982\uff0c\u4e00\u8d77\u62e8\u6253\u53cc\u4eba\u7535\u8bdd&amp\uff1b\u4e00\u8d77\u89c2\u770bYouTube\u89c6\u9891&\u6216\u4e00\u8d77\u62e8\u6253\u4f1a\u8bae\u7535\u8bdd&amp\uff1b\u81ea\u52a8\u5c06\u4f1a\u8bae\u7b14\u8bb0\u4fdd\u5b58\u5728Google Docs&34\uff1b\u4e2d\u3002", "note_en": "Google launched Hangouts back in 2013.  At that point too, it was an attempt to unify its different services (Gtalk, G+ messenger) into a single product and Hangouts positioned itself similar to WhatsApp. That strategy kind of made sense, though it never really took off (compared to WhatsApp). Biggest reason might be, not focusing enough towards a particular style of communication. Hangouts was chat &amp; video both, plus it was also sold as part of its GSuite offering to enterprise.\n Fast forward to 2017 &amp; the communication space has picked up pace like never before.  You have Slack focused towards enterprise communication, Zoom for business video conferencing, Whatsapp Video &amp; Facetime for personal video chat &amp; WhatsApp (&amp; to some extent FB mess for chat). All these products show that there is a need for different products for different communication needs. With this, Hangouts finds itself in a weird spot among all of these. That&#39;s when Google started paying attention closely &amp; building products which resemble the actual needs of the time. Now we have &#34;Meet&#34;, &#34;Chat&#34;, &#34;Duo&#34; and &#34;Messages&#34; and they closely match the competition.\n   Meet &amp; Duo are on a head to head comparison with Zoom &amp; WhatsApp video/Facetime respectively. But it&#39;s &#34;Messages&#34; &amp; &#34;Chat&#34;, that seems most interesting.\n &#34;Messages&#34; if you haven&#39;t noticed is the default messages (remember?) app on your Android phone.  It comes preinstalled with your Pixel phone &amp; on other phones, you have to separately install it. The most amazing fact is that it surpassed 1 billion play store downloads! The app now supports Rich messages which means it works just like WhatsApp. Google has released a web version for it just like WhatsApp web. The best thing about it though is that Duo is directly integrated in the app which made it easier for Google to promote Duo to users.\n The &#34;Chat&#34; app is very focused towards enterprise.  It has a very slack like functionality plus there is a direct integration with Meet. The other great thing about Chat is that, Google can integrate it&#39;s other GSuite products like Drive, Documents, Sheets all within the Chat. Having it separate from Meet also allows Google to sell Chat vs Meet differently. For e.g they can make Meet for everyone but still keep Chat paid. The idea is that if people like Meet they might like to use Chat too. (But I think it would have worked bettee the other way around). In future we might see Chat having a more close integration with other Google products like Docs, Sheets, Calendar, Gmail. This kind of makes sense because enterprise customers want to do everything from one place to increase productivity. And it also makes it a more direct competitor to Teams from Microsoft. All in all, Google&#39;s communication products seem to be more aligned now with the expectations of different users, the businesses and especially the competition. The key thing here will be to bring enough differentiation from a product standpoint or by providing value through integration of different apps. E.g &#34;Make a Duo call &amp; watch a youtube video together&#34; OR &#34;Make a meet call &amp; automatically save meeting notes in Google Docs&#34;.", "posttime": "2020-06-15 05:27:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,app,\u804a\u5929", "title": "\u5206\u6790-\u4e3a\u4ec0\u4e48\u8c37\u6b4c\u73b0\u5728\u662fSlake\uff0cWhatsApp\u548cZoom\u66f4\u597d\u7684\u7ade\u4e89\u5bf9\u624b\uff1f", "title_en": "Analysis \u2013 Why Google is now a better competitor to Slack, WhatsApp and Zoom?", "transed": 1, "url": "https://cnc.substack.com/p/coming-together-of-googles-communication", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "app", "\u804a\u5929"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006571, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u7531\u52b3\u4f26\u65af\u00b7\u514b\u9c81\u7eb3\u64b0\u5199\uff0c\u4e0d\u8fc7\u7f29\u8fdb\u7684\u6bb5\u843d\u901a\u5e38\u662f\u5f15\u53f7)\u3002\u4f60\u53ef\u4ee5\u8054\u7cfb\u52b3\u4f26\u65af\uff1alawrence@krubner.com\uff0c\u6216\u8005\u5728Twitter\u4e0a\u5173\u6ce8\u6211\u3002\n\u56e0\u6b64\uff0c\u4e2a\u4ebaA\u53d7\u5230\u4fdd\u62a4\uff0c\u4e0d\u53d7\u65b0\u4fe1\u606f\u7684\u6709\u5bb3\u5f71\u54cd\u3002\u65b0\u4fe1\u606f\u662f\u5371\u9669\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4eba\u6539\u53d8\u4e3b\u610f\u3002\u53ea\u9700\u5c06\u65b0\u4fe1\u606f\u58f0\u660e\u4e3a\u65e0\u6548\uff0c\u5373\u53ef\u4f7f\u5176\u53d8\u5f97\u5b89\u5168\u3002A\u76f8\u4fe1\u6240\u6709\u7684\u82cf\u683c\u5170\u4eba\u90fd\u662f\u52c7\u6562\u548c\u53ef\u656c\u7684\uff0c\u4f60\u4e0d\u80fd\u8bf4\u670d\u4ed6\u4eec\u76f8\u53cd\u7684\uff0c\u56e0\u4e3a\u4f60\u63d0\u5230\u7684\u4efb\u4f55\u53cd\u4f8b\u90fd\u662f\u4e00\u4e9b\u5815\u843d\u7684\u4e0d\u771f\u5b9e\u7684\u82cf\u683c\u5170\u4eba\uff0c\u8fd9\u4e0e\u4ed6\u4eec\u5bf9\u771f\u6b63\u7684\u82cf\u683c\u5170\u4eba\u7684\u60f3\u6cd5\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u6bcf\u5f53\u6211\u53cd\u5bf9\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b(OOP)\u65f6\uff0c\u8fd9\u5c31\u662f\u6211\u7684\u7ecf\u9a8c\uff1a\u65e0\u8bba\u6211\u63d0\u51fa\u4ec0\u4e48\u8bc1\u636e\u4f9b\u8003\u8651\uff0c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u5982\u679c\u6211\u62b1\u6028Java\u592a\u5197\u957f\uff0c\u6211\u4f1a\u88ab\u544a\u77e5True OOP\u7a0b\u5e8f\u5458\u8ba9IDE\u6765\u5904\u7406\u4e00\u4e9b\u6837\u677f\u6587\u4ef6\uff0c\u6216\u8005\u53ef\u80fd\u6709\u4eba\u544a\u8bc9\u6211Scala\u66f4\u597d\u3002\u5982\u679c\u6211\u62b1\u6028Scala\u6d89\u53ca\u592a\u591a\u4eea\u5f0f\uff0c\u6211\u5c31\u4f1a\u88ab\u544a\u77e5Ruby\u7f3a\u4e4f\u4eea\u5f0f\u3002\u5982\u679c\u6211\u62b1\u6028Ruby\u4e2d\u4fee\u8865\u7a0b\u5e8f\u7684\u5371\u9669\uff0c\u6211\u4f1a\u88ab\u544a\u77e5\u771f\u6b63\u7684OOP\u7a0b\u5e8f\u5458\u77e5\u9053\u5982\u4f55\u5c06\u5143\u7f16\u7a0b\u7528\u4e8e\u4ed6\u4eec\u7684\u4f18\u52bf\uff0c\u5982\u679c\u6211\u4e0d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u6211\u5c31\u662f\u65e0\u80fd\u7684\u3002\u6211\u5e94\u8be5\u4f7f\u7528\u66f4\u7eaf\u7cb9\u7684\u8bed\u8a00\uff0c\u6216\u8005\u66f4\u5b9e\u7528\u7684\u8bed\u8a00\uff0c\u6211\u5e94\u8be5\u4f7f\u7528\u5177\u6709\u7f16\u8bd1\u65f6\u9759\u6001\u6570\u636e\u7c7b\u578b\u68c0\u67e5\u7684\u8bed\u8a00\uff0c\u6216\u8005\u6211\u5e94\u8be5\u4f7f\u7528\u5141\u8bb8\u6211\u81ea\u7531\u52a8\u6001\u8f93\u5165\u7684\u8bed\u8a00\u3002\u5982\u679c\u6211\u62b1\u6028bug\uff0c\u6211\u88ab\u544a\u77e5\u8fd9\u4e9b\u7279\u5b9a\u7684bug\u5df2\u7ecf\u5728\u65b0\u7248\u672c\u4e2d\u4fee\u590d\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6211\u8fd8\u6ca1\u6709\u5347\u7ea7\uff0c\u6216\u8005\u6211\u88ab\u544a\u77e5\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5982\u679c\u6211\u4e0d\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u6211\u5c31\u662f\u4e2a\u767d\u75f4\u3002\u5982\u679c\u6211\u62b1\u6028\u6700\u6d41\u884c\u7684\u6846\u67b6\u8fc7\u4e8e\u81c3\u80bf\uff0c\u6211\u4f1a\u88ab\u544a\u77e5\u6ca1\u6709\u4eba\u518d\u4f7f\u7528\u8be5\u6846\u67b6\u3002\u6ca1\u6709\u771f\u6b63\u7684OOP\u7a0b\u5e8f\u5458\u4f1a\u505a\u6211\u62b1\u6028\u7684\u4e8b\u60c5\u3002\n\u4eba\u4eec\u4f1a\u5c06\u8bb8\u591a\u7f8e\u597d\u7684\u60f3\u6cd5\u4e0eOOP\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u6211\u5c06\u5c55\u793a\u4e24\u4e2a\u4e1c\u897f\uff1a\n1)\u3002\u4e0e\u5176\u4ed6\u8bed\u8a00(LISP\u3001\u51fd\u6570\u5f0f\u8bed\u8a00\u7b49)\u76f8\u6bd4\uff0cOOP\u8bed\u8a00\u6ca1\u6709\u72ec\u7279\u7684\u4f18\u52bf\u3002\n2.)\u3002\u4e0e\u5176\u4ed6\u8bed\u8a00(LISP\u3001\u51fd\u6570\u5f0f\u8bed\u8a00\u7b49)\u76f8\u6bd4\uff0cOOP\u8bed\u8a00\u5e26\u6765\u4e86\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u7684\u6c89\u91cd\u8d1f\u62c5\u3002\n\u90a3\u4e9b\u6f5c\u5728\u7684\u597d\u7279\u6027(\u6570\u636e\u9690\u85cf\u3001\u5951\u7ea6\u6267\u884c\u3001\u591a\u6001\u6027)\u5e76\u4e0d\u662fOOP\u72ec\u6709\u7684\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u7279\u6027\u7684\u66f4\u5f3a\u7248\u672c\u5728\u975eOOP\u8bed\u8a00\u4e2d\u662f\u53ef\u7528\u7684\u3002\u90a3\u4e9bOOP\u72ec\u6709\u7684\u7279\u6027(\u4f9d\u8d56\u6ce8\u5165\u3001\u5b9e\u4f8b\u5316)\u975e\u5e38\u7cdf\u7cd5\uff0c\u5b83\u4eec\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u53ea\u662f\u56e0\u4e3aOOP\u5f88\u7cdf\u7cd5\u3002\n\u6211\u6b63\u5728\u91c7\u53d6\u4e00\u79cd\u666e\u4e16\u7684\u3001\u666e\u4e16\u4e3b\u4e49\u7684\u65b9\u6cd5\u6765\u5904\u7406\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1(OOP)\u3002\u4e0b\u9762\u6211\u5c06\u628a\u6240\u6709\u8fd9\u4e9b\u8bed\u8a00\u79f0\u4e3aOOP\uff1aC++\u3001Java\u3001Scala\u3001PHP\u3001Ruby\u548cJavascript\u3002\u8fd9\u516c\u5e73\u5417\uff1f\u6211\u77e5\u9053\uff0c\u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\uff0cJava\u7684\u4e00\u4e9b\u652f\u6301\u8005\u4f1a\u62b1\u6028Ruby\u548cPHP\u7f3a\u4e4f\u7f16\u8bd1\u65f6\u6570\u636e\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u6b64\u4e0d\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u6211\u77e5\u9053\uff0c\u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\uff0cRuby\u7684\u4e00\u4e9b\u652f\u6301\u8005\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u5728Ruby\u4e2d\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u800cJava\u4ecd\u7136\u6709\u975e\u5bf9\u8c61\u539f\u8bed(\u5982\u6574\u6570)\uff0c\u56e0\u6b64Ruby\u66f4\u50cf\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u800c\u4e0d\u662fJava\u3002\u6211\u77e5\u9053PHP\u7684\u4e00\u4e9b\u6279\u8bc4\u8005\u4f1a\u4e89\u8fa9\u8bf4\uff0cOOP\u7279\u6027\u662f\u56fa\u5b9a\u5728PHP\u4e0a\u7684\uff0c\u4e0d\u5e94\u8be5\u628a\u5b83\u4f5c\u4e3a\u4e00\u79cdOOP\u8bed\u8a00\u6765\u8ba4\u771f\u5bf9\u5f85\u3002\u6211\u77e5\u9053\u6709\u4e9b\u4eba\u4f1a\u6307\u51faScala\u662f\u591a\u8303\u5f0f\u7684\uff0c\u5728Scala\u4e2d\u4f7f\u7528\u201c\u51fd\u6570\u8303\u5f0f\u201d\u5c31\u50cf\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u8303\u5f0f\u4e00\u6837\u5bb9\u6613\u3002\n\u9274\u4e8e\u8bed\u8a00\u7684\u591a\u6837\u6027\uff0c\u4ee5\u53ca\u7f3a\u4e4f\u6807\u51c6\u5b9a\u4e49\uff0c\u8c08\u8bba\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6709\u610f\u4e49\u5417\uff1f\u6211\u4f1a\u8bf4\u662f\u7684\u3002\u8fd9\u662f\u975e\u5e38\u8feb\u5207\u7684\u9700\u8981\u3002OOP\u53ef\u80fd\u662f\u4e00\u4e2a\u5b9a\u4e49\u4e0d\u660e\u786e\u3001\u6a21\u68f1\u4e24\u53ef\u7684\u6982\u5ff5\uff0c\u4f46\u5b83\u7edd\u5bf9\u4e3b\u5bfc\u7740\u79d1\u6280\u884c\u4e1a\u3002\u8bb8\u591a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u548c\u8bb8\u591a\u516c\u53f8\u90fd\u8ba4\u4e3aOOP\u662f\u5f53\u4eca\u552f\u4e00\u5408\u7406\u7684\u8f6f\u4ef6\u5f00\u53d1\u65b9\u5f0f\u3002\u4efb\u4f55\u53cd\u5bf9OOP\u7684\u4eba\u90fd\u4f1a\u7acb\u5373\u610f\u8bc6\u5230\u4ed6\u4eec\u662f\u5728\u53cd\u5bf9\u4e1a\u754c\u7684\u201c\u4f20\u7edf\u667a\u6167\u201d\u3002\n\u6211\u53bb\u9762\u8bd5\u7684\u65f6\u5019\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0d\u7ba1\u6211\u9762\u8bd5\u7684\u662fRuby\u804c\u4f4d\u3001Java\u804c\u4f4d\u8fd8\u662fPHP\u804c\u4f4d\uff0c\u9762\u8bd5\u5b98\u90fd\u4f1a\u95ee\u6211\u662f\u5426\u77e5\u9053\u4ec0\u4e48\u662fOOP\u3002\u4ed6\u4eec\u8ba9\u6211\u5b9a\u4e49\u201c\u5c01\u88c5\u201d\u548c\u201c\u591a\u6001\u5206\u6d3e\u201d\u3002\u8fd9\u4e9b\u90fd\u662f\u6807\u51c6\u95ee\u9898\uff0c\u6211\u5e94\u8be5\u7ed9\u51fa\u6807\u51c6\u7b54\u6848\u3002\u5f53\u4ed6\u4eec\u95ee\u6211\u201cOOP\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u201d\u6211\u53d1\u73b0\u81ea\u5df1\u60f3\u8981\u7ed9\u51fa\u4e00\u4e2a\u5c34\u5c2c\u7684\u957f\u7b54\u6848\uff0c\u5b83\u5305\u62ec\u201c\u8fd912\u4ef6\u4e8b\u5e94\u8be5\u662fOOP\u7684\u597d\u5904\uff0c\u4f46\u5b9e\u9645\u4e0aOOP\u6ca1\u6709\u72ec\u7279\u7684\u4f18\u70b9\u3002\u201d\u6240\u4ee5\u6211\u6b63\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5c06\u6765\uff0c\u5f53\u6211\u5728\u6c42\u804c\u9762\u8bd5\u4e2d\u88ab\u95ee\u5230\u8fd9\u6837\u7684\u95ee\u9898\u65f6\uff0c\u6211\u4f1a\u7b80\u5355\u5730\u628a\u4eba\u4eec\u5f15\u5411\u6211\u5728\u8fd9\u91cc\u5199\u7684\u4e1c\u897f\u3002\n\u8fd9\u4e9b\u771f\u7684\u91cd\u8981\u5417\uff1f\u4f60\u53ef\u80fd\u4f1a\u8bf4\u6211\u662f\u5728\u6d6a\u8d39\u65f6\u95f4\uff0c\u6211\u6b63\u5728\u5199\u4e00\u7bc7\u5f88\u957f\u7684\u6587\u7ae0\uff0c\u53ea\u4f1a\u6d89\u53ca\u4e00\u5806\u5bf9\u4efb\u4f55\u4eba\u90fd\u6ca1\u6709\u597d\u5904\u7684\u8bed\u4e49\u4e0a\u7684\u5439\u6bdb\u6c42\u75b5\u3002\u4f46\u6211\u8ba4\u4e3a\uff0c\u6df7\u4e71\u7684\u5b9a\u4e49\u4f1a\u5bfc\u81f4\u6df7\u4e71\u7684\u601d\u7ef4\uff0c\u6b63\u5982\u5965\u5a01\u5c14\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff1a\n\u4e00\u4e2a\u7537\u4eba\u53ef\u80fd\u56e0\u4e3a\u4ed6\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u5931\u8d25\u8005\u800c\u5f00\u59cb\u559d\u9152\uff0c\u7136\u540e\u56e0\u4e3a\u4ed6\u559d\u9152\u800c\u66f4\u52a0\u5f7b\u5e95\u5730\u5931\u8d25\u3002\u8fd9\u4e0e\u53d1\u751f\u5728\u82f1\u8bed\u4e0a\u7684\u4e8b\u60c5\u975e\u5e38\u76f8\u4f3c\u3002\u5b83\u53d8\u5f97\u4e11\u964b\u548c\u4e0d\u51c6\u786e\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u611a\u8822\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8bed\u8a00\u7684\u61d2\u6563\u4f7f\u6211\u4eec\u66f4\u5bb9\u6613\u4ea7\u751f\u611a\u8822\u7684\u60f3\u6cd5\u3002\u5173\u952e\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\u3002\u73b0\u4ee3\u82f1\u8bed\uff0c\u5c24\u5176\u662f\u4e66\u9762\u8bed\uff0c\u5145\u6ee1\u4e86\u901a\u8fc7\u6a21\u4eff\u4f20\u64ad\u7684\u574f\u4e60\u60ef\uff0c\u53ea\u8981\u613f\u610f\u4ed8\u51fa\u5fc5\u8981\u7684\u52aa\u529b\uff0c\u8fd9\u4e9b\u574f\u4e60\u60ef\u662f\u53ef\u4ee5\u907f\u514d\u7684\u3002\n\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u613f\u610f\u8ba4\u4e3a\u6211\u505a\u4e86\u4e00\u4e9b\u6709\u76ca\u7684\u4e8b\u60c5\uff0c\u53ea\u8981\u6211\u80fd\u591f\u63a5\u53d7\u4e0eOOP\u76f8\u5173\u7684\u5e7f\u6cdb\u7684\u60f3\u6cd5\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u5f88\u957f\uff0c\u5982\u679c\u6211\u4ed4\u7ec6\u9650\u5b9a\u5173\u4e8eOOP\u7684\u6bcf\u4e00\u53e5\u8bdd\uff0c\u5b83\u4f1a\u66f4\u957f\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0b\u9762\uff0c\u5f53\u6211\u5c06\u591a\u8303\u4f8b\u8bed\u8a00(\u5982Scala)\u79f0\u4e3aOOP\u8bed\u8a00\u65f6\uff0c\u6211\u4e13\u95e8\u6307\u7684\u662f\u8be5\u8bed\u8a00\u4e2d\u7684OOP\u7279\u6027\u3002\u6211\u60f3\u8ba9\u60a8\u95ee\u95ee\u81ea\u5df1\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u4e00\u79cd\u591a\u8303\u4f8b\u8bed\u8a00\u6765\u7f16\u5199\u201c\u51fd\u6570\u5f0f\u201d\u8303\u4f8b\uff0c\u60a8\u662f\u5426\u771f\u7684\u4ece\u8be5\u8bed\u8a00\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1(OOP)\u7279\u6027\u4e2d\u83b7\u5f97\u4e86\u4ec0\u4e48\uff1f\u60a8\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u4ece\u6839\u672c\u4e0a\u662f\u201c\u51fd\u6570\u5f0f\u201d\u7684\u8bed\u8a00\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u66f4\u5bb9\u6613\u5730\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff1f\n\u5728\u79d1\u6280\u535a\u5ba2\u548c\u8bba\u575b\u4e0a\uff0c\u6709\u5f88\u591a\u4eba\u4e3aOOP\u8fa9\u62a4\uff0c\u4ed6\u4eec\u786e\u4fe1\u81ea\u5df1\u77e5\u9053\u81ea\u5df1\u5728\u634d\u536b\u4ec0\u4e48\uff0c\u5c3d\u7ba1\u6ca1\u6709\u4efb\u4f55\u6807\u51c6\u7684\u5b9a\u4e49\u3002\u60f3\u60f3\u201c\u7c73\u5c14\u65af\u901a\u201d\u5728\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u7684\u8fd9\u53e5\u8bdd\uff1a\n\u8fd9\u7bc7\u6587\u7ae0\u548c\u8bb8\u591a\u9f13\u5439\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6587\u7ae0\u4e00\u6837\uff0c\u5b58\u5728\u4e00\u5b9a\u7684\u8ba4\u77e5\u504f\u5dee\uff0c\u8fd9\u4f7f\u5b83\u770b\u4e0d\u5230OO\u64c5\u957f\u4ec0\u4e48\u3002\nOO\u64c5\u957f\u4ec0\u4e48\uff1f\u663e\u7136\uff0c\u7c73\u5c14\u65af\u901a\u8ba4\u4e3aOO\u64c5\u957f\u52a8\u6001\u3002\u7136\u540e\uff0c\u7c73\u5c14\u65af\u901a\u6279\u8bc4\u4e86Haskel\u5177\u6709\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u7684\u4e8b\u5b9e\uff0c\u5ffd\u7565\u4e86Java\u3001C++\u3001C#\u548c\u8bb8\u591a\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u90fd\u5177\u6709\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u7684\u4e8b\u5b9e\uff1a\nAlan Kay\u5199\u9053\uff1a\u201c\u5236\u9020\u4f1f\u5927\u7684\u3001\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u7684\u5173\u952e\u66f4\u591a\u7684\u662f\u8bbe\u8ba1\u5176\u6a21\u5757\u5982\u4f55\u901a\u4fe1\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u5185\u90e8\u5c5e\u6027\u548c\u884c\u4e3a\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u201d\n\u8981\u5f00\u59cb\u4e86\u89e3\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u8bf7\u8003\u8651Haskell\u4e2d\u4ee4\u4eba\u8ba8\u538c\u7684\u5b57\u7b26\u4e32/Data.Text\u62c6\u5206\u3002String\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5904\u4e8e\u201c\u4e0d\u8003\u8651\u6570\u636e\u201d\u7684\u601d\u7ef4\u6a21\u5f0f\u4e2d\uff0c\u5b83\u8d64\u88f8\u88f8\u5730\u5145\u5f53[Char]\u3002\u73b0\u5728\u60a8\u9677\u5165\u4e86\u56f0\u5883\uff1a\u4e0d\u80fd\u66f4\u6539\u5176\u8868\u793a\u5f62\u5f0f\uff0c\u4e0d\u80fd\u8f7b\u677e\u5f15\u5165Unicode\u7b49\u7b49\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u5982\u6b64\u4e25\u683c\uff0c\u4ee5\u81f3\u4e8e\u5fc5\u987b\u5f15\u5165\u4e00\u4e2a\u5168\u65b0\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u800c\u6211\u4eec\u4ecd\u5728\u5904\u7406\u5176\u540e\u679c\u3002\n\u4f1f\u5927\u7684\u3001\u53ef\u751f\u957f\u7684\u7cfb\u7edf\uff01\u6211\u4eec\u8f6f\u4ef6\u7684\u5927\u89c4\u6a21\u7ed3\u6784\uff0c\u88ab\u5206\u89e3\u6210\u6a21\u5757\uff0c\u4e0d\u4ec5\u5728\u65f6\u95f4\u4e0a\u51bb\u7ed3\uff0c\u800c\u4e14\u5728\u672a\u6765\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u601d\u8003\u5173\u7cfb\u548c\u6c9f\u901a\u3002\n\u7c73\u5c14\u65af\u901a\u968f\u540e\u5f15\u7528\u4e86\u539f\u6587\uff0c\u5e76\u660e\u786e\u8868\u793a\u4ed6\u4eec\u771f\u6b63\u5728\u8c08\u8bba\u7684\u662f\u201c\u771f\u6b63\u7684\u52a8\u6001\u8bed\u8a00\u201d\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1(OOP)\uff1a\n\u4e3a\u4e86\u63d0\u51fa\u66f4\u597d\u7684[\u5206\u6d3e]\u89e3\u51b3\u65b9\u6848\uff0cHaskell\u548cClojure\u91c7\u7528\u4e86\u622a\u7136\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u90fd\u4f18\u4e8e\u4efb\u4f55OO\u7a0b\u5e8f\u5458\u901a\u5e38\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\n\u201c\u6709\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u5458\u5417\uff1f\u201d\u4e0d\u884c!\u3002\u5728\u771f\u6b63\u7684\u52a8\u6001\u8bed\u8a00\u4e2d\u5b9e\u73b0\u7684OO\u4e0d\u4ec5\u516c\u5f00\u4e86\u56fa\u5b9a\u7684\u5206\u6d3e\u673a\u5236\uff0c\u8fd8\u516c\u5f00\u4e86\u5206\u6d3e\u672c\u8eab\u7684\u673a\u5236\uff0c\u5373\u5143\u5bf9\u8c61\u534f\u8bae\u3002\n\u6709\u5f88\u591aOOP\u8bed\u8a00\u5177\u6709\u9759\u6001\u6570\u636e\u7c7b\u578b\u68c0\u67e5\uff0c\u8fd8\u6709\u4e00\u4e9b\u975eOOP\u8bed\u8a00\u662f\u52a8\u6001\u7684\uff0c\u6240\u4ee5\u7c73\u5c14\u65af\u901a\u6839\u672c\u4e0d\u662f\u5728\u8c08\u8bbaOOP\uff0c\u4f46\u662f\u7c73\u5c14\u65af\u901a\u786e\u4fe1\u4ed6\u4eec\u77e5\u9053\u4ec0\u4e48\u662fOOP\u3002\u8fd9\u662f\u6211\u7ecf\u5e38\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2aOOP\u7684\u72c2\u70ed\u62e5\u62a4\u8005\uff0c\u4ed6\u4f7f\u7528\u4e86OOP\u7684\u67d0\u79cd\u7279\u6b8a\u5b9a\u4e49\uff0c\u8fd9\u8ba9\u6211\u5b8c\u5168\u63aa\u624b\u4e0d\u53ca\u3002\n\u8bf7\u6ce8\u610f\u8fd9\u91cc\u7684\u8bbd\u523a\uff1a\u7c73\u5c14\u65af\u901a\u5f15\u7528\u4e86\u4e00\u6bb5\u6279\u8bc4Java\u7684\u6587\u7ae0\uff0c\u800c\u7c73\u5c14\u65af\u901a\u5374\u58f0\u79f0\u8fd9\u6bb5\u5173\u4e8e\u201c\u540e\u671f\u7ed1\u5b9a\u201d\u7684\u6587\u7ae0\u5c55\u793a\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u957f\u5904\u3002\u6839\u636e\u8fd9\u4e2a\u5b9a\u4e49\uff0cJava\u4e0d\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u8fd9\u80af\u5b9a\u4f1a\u8ba9Java\u7a0b\u5e8f\u5458\u5927\u5403\u4e00\u60ca\u3002\n\u540c\u6837\uff0c\u6709\u4e9bOOP\u8bed\u8a00\u6ca1\u6709\u540e\u671f\u7ed1\u5b9a\uff0c\u6709\u4e9b\u975eOOP\u8bed\u8a00\u6709\u540e\u671f\u7ed1\u5b9a\u3002\u4f46\u5bf9\u4e8e\u7c73\u5c14\u65af\u901a\u6765\u8bf4\uff0c\u6ca1\u6709\u54ea\u4e2a\u771f\u6b63\u7684OOP\u7a0b\u5e8f\u5458\u4f1a\u4f7f\u7528\u5e26\u6709\u9759\u6001\u6570\u636e\u7c7b\u578b\u68c0\u67e5\u7684\u8bed\u8a00\u3002\u5728\u7c73\u5c14\u65af\u901a\u53d1\u660e\u4e86\u4e00\u4e2a\u5b8c\u5168\u72ec\u7279\u7684OOP\u5b9a\u4e49\u7684\u7a0b\u5ea6\u4e0a\uff0c\u4ed6\u4eec\u5bf9OOP\u7684\u8bc4\u8bba\u4e0e\u4efb\u4f55\u5176\u4ed6\u60f3\u8981\u8c08\u8bbaOOP\u7684\u4eba\u5b8c\u5168\u65e0\u5173\u3002\u7136\u800c\uff0c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u7c73\u5c14\u65af\u901a\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff1a\u6211\u7ecf\u5e38\u9047\u5230\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u4ed6\u4eec\u5bf9OOP\u6709\u7740\u5b8c\u5168\u72ec\u7279\u7684\u5b9a\u4e49\u3002\u8fd9\u4f1a\u8ba9\u6211\u4eec\u5f88\u96be\u8fdb\u884c\u6709\u610f\u4e49\u7684\u5bf9\u8bdd\u3002\n\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u8c08\u8bba\u50cfOOP\u8fd9\u6837\u65e0\u5b9a\u5f62\u7684\u6982\u5ff5\u5462\uff1f\u6ca1\u6709\u6807\u51c6\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\u6211\u4eec\u6240\u80fd\u505a\u7684\u5c31\u662f\u8c03\u67e5\u51e0\u4e2a\u4e0d\u540c\u7684\u6765\u6e90\uff0c\u5e76\u6536\u96c6\u4e3b\u8981\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u8fd9\u9879\u8c03\u67e5\uff1f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u9996\u5148\u662f\u5386\u53f2\u4e4b\u65c5\uff0c\u542cAlan Kay\u63cf\u8ff0OOP\u7684\u6839\u6e90\uff0c\u7136\u540e\u770b\u770b\u76ee\u524d\u7684\u4e00\u4e9b\u5165\u95e8\u6750\u6599\u5728\u5411\u521d\u5b66\u8005\u4f20\u6388OOP\u7684\u6838\u5fc3\u601d\u60f3\u3002\n\u4eba\u4eec\u5c06\u4f7f\u7528[\u7b14\u8bb0\u672c]\u201cDynabook\u201d\u4ee5\u5728\u5171\u4eab\u5927\u578b\u673a\u4e0a\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b9\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff1b\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u6f5c\u5728\u7528\u6237\u610f\u5473\u7740\u7528\u6237\u754c\u9762\u5c06\u4e0d\u5f97\u4e0d\u6210\u4e3a\u8499\u7279\u68ad\u5229\u548c\u5e03\u9c81\u7eb3\u90a3\u6837\u7684\u5b66\u4e60\u73af\u5883\uff1b\u5bf9\u4e8e\u5927\u8303\u56f4\u3001\u964d\u4f4e\u590d\u6742\u6027\u548c\u6700\u7ec8\u7528\u6237\u8bc6\u5b57\u7684\u9700\u6c42\uff0c\u5c06\u9700\u8981\u5e9f\u9664\u6570\u636e\u548c\u63a7\u5236\u7ed3\u6784\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u79cd\u66f4\u5177\u751f\u7269\u6027\u7684\u8ba1\u5212\uff0c\u5373\u53d7\u4fdd\u62a4\u7684\u901a\u7528\u7ec6\u80de\u53ea\u901a\u8fc7\u80fd\u591f\u6a21\u62df\u4efb\u4f55\u6240\u9700\u884c\u4e3a\u7684\u6d88\u606f\u8fdb\u884c\u4ea4\u4e92\u3002\n\u2026\u3002\u5728\u8fd9\u4e00\u5207\u4e2d\uff0c\u6211\u610f\u8bc6\u5230\u901a\u5411\u57fa\u4e8e\u5bf9\u8c61\u7684\u7cfb\u7edf\u7684\u6865\u6881\u53ef\u80fd\u662f\u5c06\u6bcf\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u53d1\u9001\u7ed9\u5b83\u7684\u6d88\u606f\u7684\u8bed\u6cd5\u5236\u5bfc\u89e3\u91ca\u5668\u3002\u8fd9\u5c06\u4e00\u4e3e\u5c06\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u4e49\u4e0e\u5b8c\u5168\u53ef\u6269\u5c55\u8bed\u8a00\u7684\u7406\u60f3\u7edf\u4e00\u8d77\u6765\u3002\u8111\u6d77\u4e2d\u7684\u5f62\u8c61\u662f\u4e00\u53f0\u72ec\u7acb\u7684\u8ba1\u7b97\u673a\u5411\u5176\u4ed6\u8ba1\u7b97\u673a\u53d1\u9001\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u5fc5\u987b\u88ab\u63a5\u6536\u8005\u63a5\u53d7\u548c\u7406\u89e3\uff0c\u7136\u540e\u624d\u80fd\u53d1\u751f\u4efb\u4f55\u4e8b\u60c5\u3002\u5728\u4eca\u5929\u7684\u672f\u8bed\u4e2d\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u4e00\u4e2a\u63d0\u4f9b\u670d\u52a1\u7684\u670d\u52a1\u5668\uff0c\u5176\u90e8\u7f72\u548c\u5224\u65ad\u5b8c\u5168\u53d6\u51b3\u4e8e\u670d\u52a1\u5668\u4e0e\u88ab\u670d\u52a1\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\u6982\u5ff5\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7f8e\u597d\u7684\u613f\u666f\uff0c\u4f46\u8fd9\u4e0e\u6211\u4eec\u73b0\u5728\u6240\u8bf4\u7684\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u201d\u662f\u4e00\u6837\u7684\u5417\uff1f\u5728\u4e0a\u9762\u7684\u5f15\u8ff0\u4e2d\uff0c\u827e\u4f26\u00b7\u51ef\u4f3c\u4e4e\u5728\u63cf\u8ff0\u4e00\u79cd\u63a5\u8fd1\u6211\u4eec\u73b0\u5728\u6240\u8bf4\u7684\u6f14\u5458\u6a21\u578b\u7684\u4e1c\u897f\u3002\n\u53c2\u4e0e\u8005\u662f\u6267\u884c\u51fd\u6570\u7684\u8fdb\u7a0b\u3002\u2026\u3002\u53c2\u4e0e\u8005\u4ece\u4e0d\u5171\u4eab\u72b6\u6001\uff0c\u56e0\u6b64\u6c38\u8fdc\u4e0d\u9700\u8981\u4e89\u7528\u9501\u6765\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u3002\u76f8\u53cd\uff0c\u53c2\u4e0e\u8005\u901a\u8fc7\u53d1\u9001\u4e0d\u53ef\u53d8\u7684\u6d88\u606f\u6765\u5171\u4eab\u6570\u636e\u3002\u4e0d\u80fd\u4fee\u6539\u4e0d\u53ef\u53d8\u6570\u636e\uff0c\u56e0\u6b64\u8bfb\u53d6\u4e0d\u9700\u8981\u9501\u5b9a\u3002\u6d88\u606f\u4ee5\u5f02\u6b65\u65b9\u5f0f\u53d1\u9001\uff0c\u5e76\u7f13\u5b58\u5728\u53c2\u4e0e\u8005\u7684\u90ae\u7bb1\u4e2d\u3002\u90ae\u7bb1\u672c\u8d28\u4e0a\u662f\u5177\u6709\u591a\u4e2a\u751f\u4ea7\u8005(\u5176\u4ed6\u53c2\u4e0e\u8005)\u548c\u5355\u4e2a\u6d88\u8d39\u8005\u7684\u961f\u5217\u3002\u901a\u8fc7\u57fa\u4e8e\u6a21\u5f0f\u5339\u914d\u4ece\u90ae\u7bb1\u63a5\u6536\u6d88\u606f\u6765\u9a71\u52a8\u7279\u5b9a\u53c2\u4e0e\u8005\u3002\n\u827e\u4f26\u00b7\u51ef(Alan Kay)\u5bf9\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1(OOP)\u7684\u7f8e\u4e3d\u63cf\u8ff0\u4e0e\u6211\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u6240\u89c1\u8fc7\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u6ca1\u6709\u5173\u7cfb\u3002\u6bcf\u5f53\u6211\u6307\u51fa\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u4e0e\u627f\u8bfa\u7684\u76f8\u53bb\u751a\u8fdc\u65f6\uff0c\u6211\u7ecf\u5e38\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u662f\u771f\u6b63\u7684\u82cf\u683c\u5170\u4eba\u7684\u8fa9\u62a4\uff1a\u5982\u679c\u6211\u505a\u5f97\u66f4\u597d\uff0c\u6216\u8005\u4f7f\u7528\u66f4\u7eaf\u7cb9\u7684\u8bed\u8a00\uff0c\u90a3\u4e48\u6211\u5c31\u4f1a\u4f53\u9a8c\u5230\u542f\u8499\uff0c\u7a81\u7136\u4e4b\u95f4\u6211\u5c31\u4f1a\u83b7\u5f97\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6240\u6709\u597d\u5904\u3002\u7136\u800c\uff0c\u5373\u4f7f\u662f\u827e\u4f26\u00b7\u51ef\u4f3c\u4e4e\u4e5f\u610f\u8bc6\u5230\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u8fdc\u4e0d\u662f\u4ed6\u4e00\u5f00\u59cb\u7684\u6837\u5b50\u3002\u5f53\u7136\uff0c\u4ed6\u610f\u8bc6\u5230\u81ea\u5df1\u7684\u6bcd\u8bedSmalltalk\u4ece\u672a\u6d41\u884c\u8d77\u6765\u3002\u4f46\u662f\u4ed6\u5982\u4f55\u770b\u5f85\u666e\u53ca\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u8bed\u8a00\u5462\uff1f\nSun Microsystems\u6709\u5408\u9002\u7684\u4eba\u5c06Java\u53d8\u6210\u4e00\u79cd\u4e00\u6d41\u7684\u8bed\u8a00\uff0c\u6211\u76f8\u4fe1\u662fSun\u7684\u8425\u9500\u4eba\u5458\u5728\u5b83\u5e94\u8be5\u53d1\u5e03\u4e4b\u524d\u5306\u5fd9\u63a8\u51fa\u4e86\u5b83\u3002\n\u2026\u3002\u5982\u679cSun\u7684\u4e13\u4e1a\u4eba\u5458\u6709\u673a\u4f1a\u4fee\u590dJava\uff0c\u4e16\u754c\u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u6109\u5feb\u3002\u8fd9\u4e0d\u662f\u79d8\u5bc6\u4fe1\u606f\u3002\u8fd9\u53ea\u662f\u8fd9\u79cd\u6d41\u884c\u6587\u5316\u7684\u79d8\u5bc6\u3002\n\u827e\u4f26\u00b7\u51ef\u81ea\u5df1\u4ece\u6765\u90fd\u4e0d\u662fOOP\u7684\u76f2\u76ee\u7684\u610f\u8bc6\u5f62\u6001\u634d\u536b\u8005\u3002\u4ed6\u501f\u9274\u4e86Lisp\u7684\u5f88\u591a\u60f3\u6cd5\uff0c\u5e76\u5766\u7387\u5730\u8868\u8fbe\u4e86\u4ed6\u5bf9Lisp\u7684\u94a6\u4f69\uff1a\n\u51ef\u5c06SIMULA\u63cf\u8ff0\u4e3a\u4e00\u5957\u4f1f\u5927\u7684\u8fc7\u6e21\u601d\u60f3\u3002\u6709\u4e86SIMULA\uff0cALGOL\u5757\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u7684\u4e1c\u897f\u4f7f\u7528\uff0c\u53ef\u4ee5\u627f\u8f7d\u6570\u636e\u548c\u884c\u4e3a\u30021966\u5e74\uff0c\u5f53\u51ef\u8bfb\u5230\u5c3c\u52a0\u5fb7\u548c\u8fbe\u5c14\u5173\u4e8eSIMULA\u7684\u65e9\u671f\u8bba\u6587\u65f6\uff0c\u4ed6\u521a\u521a\u5b66\u4f1a\u4e86Sketchpad\u3002\u51ef\u5bf9\u4ed6\u540e\u6765\u6240\u8bf4\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u884c\u4e86\u751f\u7269\u5b66\u4e0a\u7684\u626d\u66f2\u3002\u201c\u4e00\u5207\u90fd\u662f\u4e00\u4e2a\u7ec6\u80de\uff0c\u201d\u4ed6\u89e3\u91ca\u8bf4\u3002\u201c\u6211\u8865\u5145\u7684\u4e3b\u8981\u4e00\u70b9\u662f\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u662f\u5bf9\u8c61\u3002\u6709\u4e00\u79cd\u63a5\u53e3\u4ee3\u6570\uff0c\u4eca\u5929\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u591a\u6001\u3002\u51fa\u73b0\u4e86\u8fd9\u4e9b\u89c2\u5ff5\u7684\u78b0\u649e\u548c\u53e3\u9f7f\u4e0d\u6e05\u3002\u201c\u3002Kay\u94a6\u4f69LISP\u63d0\u4f9b\u7684\u4e00\u7ec4\u4f1f\u5927\u7684\u601d\u60f3\uff0c\u5e76\u5c06\u5176\u79f0\u4e3a\u201c\u6709\u53f2\u4ee5\u6765\u8bbe\u8ba1\u7684\u6700\u4f1f\u5927\u7684\u5355\u4e00\u7f16\u7a0b\u8bed\u8a00\u201d\u3002\n\u6211\u81ea\u5df1\u4f7f\u7528OOP\u7684\u7ecf\u9a8c\u662f\u5f00\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u4f1a\u8bae\uff0c\u8ba8\u8bba\u4e00\u4e9b\u6beb\u65e0\u4ef7\u503c\u7684\u7410\u4e8b\uff0c\u6bd4\u5982\u5982\u4f55\u5904\u7406Ruby on rails\u4e2d\u7684\u80d6\u6a21\u578b\u7c7b\uff0c\u628a\u4ee3\u7801\u91cd\u6784\u6210\u66f4\u5c0f\u7684\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u662f\u4e00\u4e9b\u5b9e\u7528\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5c3d\u7ba1\u6211\u4eec\u4e0d\u5141\u8bb8\u79f0\u5b83\u4e3a\u5b9e\u7528\u7a0b\u5e8f\u4ee3\u7801\uff0c\u56e0\u4e3a\u5b9e\u7528\u7a0b\u5e8f\u4ee3\u7801\u5728OOP\u4e0b\u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u4e1c\u897f\u3002\u6211\u89c1\u8fc7\u8d85\u667a\u80fd\u7684\u4eba\u6d6a\u8d39\u4e86\u65e0\u6570\u7684\u65f6\u95f4\u6765\u8ba8\u8bba\u5982\u4f55\u5c06\u4f9d\u8d56\u9879\u6ce8\u5165\u7cfb\u7edf\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u6b63\u786e\u5730\u5b9e\u4f8b\u5316\u6211\u4eec\u7684\u5bf9\u8c61\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u5c31\u662fOOP\u7684\u6700\u5927\u60b2\u54c0\uff1a\u8fd9\u4e48\u591a\u624d\u534e\u6a2a\u6ea2\u7684\u5934\u8111\u88ab\u6d6a\u8d39\u5728\u4e00\u4e2a\u65e0\u7528\u7684\u6559\u6761\u4e0a\uff0c\u5b83\u5e26\u6765\u4e86\u5f88\u591a\u75db\u82e6\uff0c\u5374\u6ca1\u6709\u5e26\u6765\u4efb\u4f55\u597d\u5904\u3002\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u7531\u4e8eOOP\u672a\u80fd\u63d0\u4f9b\u7ed3\u675f\u6211\u4eec\u8f6f\u4ef6\u56f0\u5883\u7684\u7075\u4e39\u5999\u836f\uff0c\u6bcf\u4e00\u4e24\u5e74\u6211\u4eec\u5c31\u4f1a\u53d7\u5230\u4e00\u79cd\u65b0\u7684\u6b63\u7edf\u89c2\u5ff5\u7684\u6b22\u8fce\uff0c\u6bcf\u4e2a\u6b63\u7edf\u89c2\u5ff5\u90fd\u627f\u8bfa\u6700\u7ec8\u4f7fOOP\u6309\u7167\u6700\u521d\u627f\u8bfa\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\nSG\uff1a\u55ef\uff0c\u6b63\u5982\u5b83\u5728\u540d\u79f0\u4e2d\u6240\u8bf4\uff0cSOAP\u662f\u7528\u6765\u8bbf\u95ee\u8fdc\u7a0b\u5bf9\u8c61\u7684\u3002\nSG\uff1a\u548cCORBA\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u66f4\u7b80\u5355\u3002\u6211\u4eec\u4f7f\u7528HTTP\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u4eba\u90fd\u4e0d\u5141\u8bb8\u7a7f\u8d8a\u9632\u706b\u5899\u7684\u590d\u6742\u4f20\u8f93\u534f\u8bae\u3002\u6211\u4eec\u4f7f\u7528\u7684\u4e0d\u662f\u67d0\u79cd\u4e8c\u8fdb\u5236\u6d88\u606f\u683c\u5f0f\uff0c\u800c\u662fXML\u3002\nSG\uff1a\u5f53\u7136\u53ef\u4ee5\u3002\u9996\u5148\u662f\u80a5\u7682\u4fe1\u5c01\u3002\u8fd9\u76f8\u5f53\u7b80\u5355\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u7531\u5934\u548c\u6b63\u6587\u7ec4\u6210\u7684XML\u6587\u6863\u3002\u5728\u8eab\u4f53\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8fdb\u884cRPC\u8c03\u7528\u3002\nSG\uff1a\u5f53\u7136\u53ef\u4ee5\u3002\u6b63\u5982\u6211\u6240\u8bf4\u7684\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u65b9\u6cd5\u540d\u53ca\u5176\u53c2\u6570\u653e\u5165\u4e3b\u4f53\u4e2d\u6765\u8fdb\u884cRPC\u8c03\u7528\u3002\u65b9\u6cd5\u540d\u662f\u6700\u5916\u5c42\u7684\u5143\u7d20\uff0c\u6bcf\u4e2a\u5b50\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u53c2\u6570\u3002\u6240\u6709\u53c2\u6570\u90fd\u53ef\u4ee5\u6309\u7167\u89c4\u8303\u7b2c5\u8282\u4e2d\u7684\u89c4\u5b9a\u952e\u5165\u3002\nSG\uff1a\u7aef\u70b9\uff0c\u670d\u52a1\u7684\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5c06SOAP\u4fe1\u5c01\u53d1\u9001\u5230\u7aef\u70b9\u7684URL\u3002\n\u6234\u592b\uff1a\u55ef\u3002\u5982\u679c\u6211\u5c06\u670d\u52a1\u79fb\u52a8\u5230\u4e0d\u540c\u7684\u7aef\u70b9\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u6211\u80fd\u62ff\u56de301\u5417\uff1f\nDev\uff1a\u90a3\u4e48\uff0c\u5f53\u60a8\u8bf4SOAP\u4f7f\u7528HTTP\u65f6\uff0c\u60a8\u7684\u610f\u601d\u662f\u8bf4HTTP\u4e0a\u7684SOAP\u96a7\u9053\u3002\nSG\uff1a\u55ef\uff0c\u201c\u96a7\u9053\u201d\u8fd9\u4e2a\u8bcd\u592a\u96be\u542c\u4e86\u3002\u6211\u4eec\u66f4\u613f\u610f\u8bf4SOAP\u662f\u4ea4\u901a\u4e0d\u53ef\u77e5\u7684\u3002\nDev\uff1a\u4f46\u662fHTTP\u4e0d\u662f\u4e00\u79cd\u4f20\u8f93\u534f\u8bae\uff0c\u5b83\u662f\u4e00\u79cd\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u3002\u4e0d\u7ba1\u600e\u6837\uff0cSOAP\u8fd8\u652f\u6301\u54ea\u4e9b\u5176\u4ed6\u201c\u4f20\u8f93\u201d\u5462\uff1f\nSG\uff1a\u55ef\uff0c\u5b98\u65b9\u6ca1\u6709\u3002\u4f46\u4f60\u53ef\u80fd\u4f1a\u652f\u6301\u4ed6\u4eec\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u800c\u4e14\u6709\u5f88\u591a\u5e73\u53f0\u652f\u6301JMS\u3001FTP\u548cSMTP\u3002\n\u6234\u592b\uff1a\u8fd8\u6709\u8fd9\u4e9b\u201c\u6f14\u5458\u201d\u548c\u201c\u5fc5\u987b\u7406\u89e3\u201d\u7684\u5c5e\u6027\uff0c\u6709\u4eba\u7528\u8fc7\u5417\uff1f\nDev\uff1a\u55ef\uff0c\u6211\u57fa\u672c\u4e0a\u53ef\u4ee5\u8ba9\u4e8b\u60c5\u8fd0\u8f6c\u8d77\u6765\uff0c\u4f46\u524d\u63d0\u662f\u6211\u5fc5\u987b\u575a\u6301\u4f7f\u7528\u4e00\u4e2aSOAP\u5806\u6808\u3002\u6b64\u5916\uff0c\u6211\u4e0d\u80fd\u8bf4\u6211\u559c\u6b22\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u548c\u5e8f\u5217\u5316\u5bf9\u8c61\u7684\u60f3\u6cd5\u3002\nSG\uff1a\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff01\u5e8f\u5217\u5316\u5bf9\u8c61\uff01\u60a8\u662f\u4ece\u54ea\u91cc\u5f97\u5230SOAP\u662f\u5173\u4e8eRPC\u7684\u5370\u8c61\u7684\uff1fSOAP\u5b8c\u5168\u662f\u57fa\u4e8e\u6587\u6863\u7684\u6d88\u606f\u4f20\u9012\uff0c\u6211\u7684\u670b\u53cb\u3002\nSG\uff1a\u5fd8\u4e86\u6211\u8bf4\u7684\u8bdd\u5427\u3002\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u4f20\u9012\u7c97\u7c92\u5ea6\u7684\u6d88\u606f--\u60a8\u559c\u6b22\u201c\u7c97\u7c92\u5ea6\u201d\u8fd9\u4e2a\u8bcd\u5417\uff1f\u7b26\u5408XML\u67b6\u6784\u7684\u6d88\u606f\u3002\u6211\u4eec\u5c06\u65b0\u6837\u5f0f\u79f0\u4e3a\u6587\u6863/\u6587\u5b57\uff0c\u5c06\u65e7\u6837\u5f0f\u79f0\u4e3arpc/encode\u3002\ndev\uff1a(\u8bfb\u53d6XML Schema\u89c4\u8303)\u3002\u5723\u5f92\u4fdd\u4f51\u6211\u4eec\uff01\u4e9a\u5386\u5c71\u5927\u5927\u5e1d\u65e0\u6cd5\u89e3\u5f00\u8fd9\u4e00\u70b9\u3002\nSG\uff1a\u522b\u62c5\u5fc3\u3002\u60a8\u7684\u5de5\u5177\u5c06\u4e3a\u60a8\u521b\u5efa\u67b6\u6784\u3002\u771f\u7684\uff0c\u90fd\u662f\u5de5\u88c5\u7684\u95ee\u9898\u3002\nSG\uff1a\u55ef\uff0c\u5b83\u4eec\u4f1a\u53cd\u6620\u60a8\u7684\u4ee3\u7801(\u5982\u679c\u53ef\u80fd\u7684\u8bdd)\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u517c\u5bb9\u7684\u6a21\u5f0f\u3002\nDev\uff1a\u53cd\u601d\u6211\u7684\u4ee3\u7801\uff1f\u6211\u4ee5\u4e3a\u8fd9\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6587\u6863\u7684\uff0c\u800c\u4e0d\u662f\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002\nSG\uff1a\u4f60\u6ca1\u542c\u5230\u6211\u8bf4\u7684\u5417\uff1f\u8fd9\u90fd\u662f\u5de5\u5177\u7684\u95ee\u9898\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u4e0d\u80fd\u6307\u671b\u60a8\u624b\u52a8\u7f16\u5199XML Schema\u548cWSDL\u3002\u518d\u8bf4\u4e86\uff0c\u8fd9\u53ea\u662f\u4e2a\u7ba1\u9053\u5de5\u7a0b\u3002\u4f60\u4e0d\u9700\u8981\u770b\u7684\u3002\nSG\uff1a\u54e6\uff0c\u6211\u6ca1\u63d0\u5230WSDL\u5417\uff1fW-S-D-L\u3002Web\u670d\u52a1\u63cf\u8ff0\u8bed\u8a00\u3002\u5b83\u662f\u5982\u4f55\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u3001\u53c2\u6570\u5217\u8868\u3001\u64cd\u4f5c\u540d\u3001\u4f20\u8f93\u7ed1\u5b9a\u548c\u7aef\u70b9URI\u7684\uff0c\u4ee5\u4fbf\u5ba2\u6237\u7aef\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8bbf\u95ee\u60a8\u7684\u670d\u52a1\u3002\u5feb\u770b\u554a\u3002\ndev\uff1a(\u8bfb\u53d6WSDL\u89c4\u8303)\u3002\u6211\u76f8\u4fe1\u5199\u8fd9\u5c01\u4fe1\u7684\u4eba\u5df2\u7ecf\u88ab\u67aa\u6740\u4e86\u3002\u8fd9\u751a\u81f3\u4e0d\u662f\u5185\u90e8\u4e00\u81f4\u7684\u3002\n\u56f4\u7ed5WSDL\u7b49\u884c\u4e1a\u6807\u51c6\u53d1\u5c55\u8d77\u6765\u7684\u6587\u5316\u5bfc\u81f4\u8a79\u59c6\u65af\u00b7\u5218\u6613\u65af(James Lewis)\u548c\u9a6c\u4e01\u00b7\u798f\u52d2(Martin Fowler)\u62b1\u6028\u201c\u5766\u7387\u5730\u8bf4\uff0c\u590d\u6742\u6027\u4ee4\u4eba\u60ca\u53f9\u201d\uff1a\n\u5f53\u7136\uff0c\u5fae\u670d\u52a1\u793e\u533a\u4e2d\u4f7f\u7528\u7684\u8bb8\u591a\u6280\u672f\u90fd\u662f\u4ece\u5f00\u53d1\u4eba\u5458\u5728\u5927\u578b\u7ec4\u7ec7\u4e2d\u96c6\u6210\u670d\u52a1\u7684\u7ecf\u9a8c\u4e2d\u53d1\u5c55\u800c\u6765\u7684\u3002\u5bb9\u9519\u8bfb\u53d6\u5668\u6a21\u5f0f\u5c31\u662f\u4e00\u4e2a\u8fd9\u6837\u7684\u4f8b\u5b50\u3002\u4f7f\u7528\u7f51\u7edc\u7684\u52aa\u529b\u8d77\u5230\u4e86\u4f5c\u7528\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u534f\u8bae\u662f\u4ece\u8fd9\u4e9b\u7ecf\u5386\u4e2d\u884d\u751f\u51fa\u6765\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5-\u8fd9\u662f\u5bf9\u4e2d\u592e\u6807\u51c6\u7684\u4e00\u79cd\u53cd\u5e94\uff0c\u8fd9\u79cd\u53cd\u5e94\u5df2\u7ecf\u8fbe\u5230\u4e86\u4ee4\u4eba\u60ca\u53f9\u7684\u590d\u6742\u6027\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee4\u4eba\u60ca\u53f9\u7684\u53cd\u5e94\u3002(\u4efb\u4f55\u65f6\u5019\u60a8\u9700\u8981\u672c\u4f53\u6765\u7ba1\u7406\u60a8\u7684\u672c\u4f53\uff0c\u60a8\u90fd\u77e5\u9053\u60a8\u6709\u5f88\u5927\u7684\u9ebb\u70e6\u3002)\u3002\n\u5f53\u7136\uff0c\u5c3d\u7ba1\u5728\u8fd9\u4e9b\u7cfb\u7edf\u4e0a\u6295\u5165\u4e86\u65e0\u6570\u7684\u8d44\u91d1\uff0c\u4e3e\u884c\u4e86\u6210\u5343\u4e0a\u4e07\u7684\u4f1a\u8bae\u548c\u805a\u4f1a\uff0c\u51fa\u7248\u4e86\u51e0\u5341\u672c\u4e66\uff0c\u65e0\u6570\u7684\u79d1\u6280\u516c\u53f8\u50cfCroesus\u4e00\u6837\u81f4\u5bcc\uff0c\u4f46\u5f53\u6211\u63d0\u5230\u8fd9\u4e9b\u6602\u8d35\u7684\u707e\u96be\u65f6\uff0c\u6211\u88ab\u544a\u77e5\u6ca1\u6709\u771f\u6b63\u7684OOP\u7a0b\u5e8f\u5458\u518d\u505a\u8fd9\u4e9b\u65e0\u7a3d\u4e4b\u8c08\u4e86\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u5f53\u7136\u4f1a\u8fd9\u6837\u505a\uff1a\u7ef4\u62a4\u8fd9\u4e9b\u8106\u5f31\u3001\u5197\u957f\u7684\u9057\u7559\u7cfb\u7edf\u5360OOP\u7a0b\u5e8f\u5458\u6240\u505a\u5de5\u4f5c\u7684\u5f88\u5927\u6bd4\u4f8b\u3002\nSmalltalk\u4e0d\u4ec5\u4ec5\u662f\u5b83\u7684\u8bed\u6cd5\u6216\u7c7b\u5e93\uff0c\u5b83\u751a\u81f3\u4e0e\u7c7b\u65e0\u5173\u3002\u5f88\u62b1\u6b49\uff0c\u6211\u5f88\u4e45\u4ee5\u524d\u5c31\u4e3a\u8fd9\u4e2a\u8bdd\u9898\u521b\u9020\u4e86\u201c\u5bf9\u8c61\u201d\u8fd9\u4e2a\u8bcd\uff0c\u56e0\u4e3a\u5b83\u8ba9\u5f88\u591a\u4eba\u628a\u6ce8\u610f\u529b\u653e\u5728\u6b21\u8981\u7684\u60f3\u6cd5\u4e0a\u3002\u6700\u91cd\u8981\u7684\u60f3\u6cd5\u662f\u201c\u6d88\u606f\u4f20\u9012\u201d\u2026\u3002\u5236\u9020\u4f1f\u5927\u7684\u3001\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u7684\u5173\u952e\u66f4\u591a\u7684\u662f\u8bbe\u8ba1\u5176\u6a21\u5757\u5982\u4f55\u901a\u4fe1\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u5b83\u4eec\u7684\u5185\u90e8\u5c5e\u6027\u548c\u884c\u4e3a\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u60f3\u60f3\u4e92\u8054\u7f51-\u4e3a\u4e86\u751f\u5b58\uff0c\u5b83(A)\u5fc5\u987b\u5141\u8bb8\u8d85\u8fc7\u4efb\u4f55\u5355\u4e00\u6807\u51c6\u7684\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u60f3\u6cd5\u548c\u5b9e\u73b0\uff0c\u4ee5\u53ca(B)\u5141\u8bb8\u8fd9\u4e9b\u60f3\u6cd5\u4e4b\u95f4\u4e0d\u540c\u7a0b\u5ea6\u7684\u5b89\u5168\u4e92\u64cd\u4f5c\u6027\u3002\u5982\u679c\u4f60\u53ea\u5173\u6ce8\u6d88\u606f\u4f20\u9012-\u5e76\u4e14\u610f\u8bc6\u5230\u4e00\u4e2a\u597d\u7684\u5143\u7cfb\u7edf\u53ef\u4ee5\u540e\u671f\u7ed1\u5b9a\u5bf9\u8c61\u4e2d\u4f7f\u7528\u7684\u5404\u79cd\u4e8c\u7ea7\u67b6\u6784-\u90a3\u4e48\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u5f88\u591a\u57fa\u4e8e\u8bed\u8a00\u3001UI\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8ba8\u8bba\u90fd\u662f\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\u7684\u3002\n\u6709\u4eba\u771f\u7684\u8ba4\u4e3aOOP\u662f\u7ed9\u6211\u4eec\u201c\u6d88\u606f\u4f20\u9012\u201d\u7684\u6700\u597d\u65b9\u5f0f\u5417\uff1f\u76ee\u524d\uff0c\u6211\u4eec\u6709\u8bb8\u591a\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u4f20\u9012\u6d88\u606f\u3002\u51fd\u6570\u8303\u5f0f\u7684\u5021\u5bfc\u8005\u53ef\u80fd\u4f1a\u8bf4\u8fd9\u6837\u7684\u8bdd\uff1a\u201c\u7eaf\u51fd\u6570\u4e0e\u53c2\u4e0e\u8005\u6a21\u578b\u7684\u7ed3\u5408\u66f4\u8fdb\u4e00\u6b65\u5730\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86Alan Kay\u4f3c\u4e4e\u8ba4\u4e3a\u6700\u597d\u7684\u4e1c\u897f\u201d\uff0c\u4f46\u6211\u8981\u6307\u51fa\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u5c06\u81ea\u5df1\u9650\u5236\u5728\u4f7f\u7528PHP\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528\u90a3\u4e9b\u65e9\u57282004\u5e74PHP4\u4e2d\u63d0\u4f9b\u7684\u7279\u6027\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u79cd\u73b0\u4ee3\u6210\u5206f\u3002\n..", "note_en": "(written by lawrence krubner, however indented passages are often quotes). You can contact lawrence at: lawrence@krubner.com, or follow me on  Twitter.\n      Person A is thus protected from the harmful effects of new information. New information is dangerous, as it might cause someone to change their mind. New information can be rendered safe simply by declaring it to be invalid. Person A believes all Scotsman are brave and honorable, and you can not convince them otherwise, for any counter-example you bring up is of some degraded Untrue Scotsman, which has no bearing on whatever they think of True Scotsman. And this is my experience whenever I argue against Object Oriented Programming (OOP): no matter what evidence I bring up for consideration, it is dismissed as irrelevant. If I complain that Java is verbose, I\u2019m told that True OOP Programmers let the IDE take care of some of the boilerplate, or perhaps I am told that Scala is better. If I complain that Scala involves too much ceremony, I\u2019m told that Ruby lacks ceremony. If I complain about the dangers of monkey-patching in Ruby, I\u2019m told that True OOP Programmers know how to use the meta-programming to their advantage, and if I can\u2019t do it then I am simply incompetent. I should use a language that is more pure, or a language that is more practical, I should use a language that has compile-time static data-type checking, or I should use a language that gives me the freedom of dynamic typing. If I complain about bugginess, I\u2019m told that those specific bugs have been fixed in the new version, why haven\u2019t I upgraded, or I\u2019m told there is a common workaround, and I\u2019m an idiot if I didn\u2019t know about it. If I complain that the most popular framework is bloated, I\u2019m told that no one uses that framework any more. No True OOP Programmer ever does whatever it is that I\u2019m complaining about.\n There are many beautiful ideas that people associate with OOP. I am going to show 2 things:\n 1.) compared to other languages (lisps, functional languages, etc) OOP languages have no unique strengths\n 2.) compared to other languages (lisps, functional languages, etc) OOP languages inflict a heavy burden of unneeded complexity\n Those features which are potentially good (data hiding, contract enforcement, polymorphism) are not unique to OOP and, in fact, stronger versions of these things are available in non-OOP languages. Those features that are unique to OOP (dependency injection, instantiation) are awful and exist only because OOP is awful.\n I am taking an ecumenical, universalist approach to OOP. Below I will refer to all of these languages as OOP: C++, Java, Scala, PHP, Ruby, and Javascript. Is that fair? I know, from personal experience, some proponents of Java will complain that Ruby and PHP lack compile time data-type checking and therefore should not be considered OOP. And I know, from personal experience, some proponents of Ruby will argue that in Ruby everything is an object, whereas Java still has non-object primitives (such as integers), and therefore Ruby is more of an OOP language than Java. I know that some critics of PHP will argue that OOP features were bolted on to PHP and it should not be taken seriously as an OOP language. I know some people will point out that Scala is multi-paradigm and it is as easy to work in the \u201cfunctional paradigm\u201d with Scala as it is easy to work with the object oriented paradigm.\n Given the diversity of the languages, and the lack of a standard definition, is it meaningful to talk about OOP at all? I would say yes. The need is urgent. OOP may be a poorly defined, amorphous concept, but it absolutely dominates the tech industry. Many software developers, and many companies, feel that OOP is the only reasonable way to develop software today. Any one who argues against OOP is immediately made conscious of the fact that they are arguing against the \u201cconventional wisdom\u201d of the industry.\n I run into this when I go to a job interview. It does not matter if I interview for a Ruby job, or a Java job, or a PHP job, the job interviewers ask me if I know what OOP is. They ask me to define \u201cencapsulation\u201d and \u201cpolymorphic dispatch\u201d. These are standard questions, to which I am expected to give the standard answers. And when they ask me \u201cWhat are the benefits of OOP?\u201d I find myself wanting to give an awkwardly long answer, which consists \u201cThese are the 12 things that are supposed to be the benefits of OOP, but really OOP has no unique strengths.\u201d And so I am writing this essay, and in the future, when I\u2019m asked questions like this at a job interview, I\u2019ll simply directly people to what I have written here.\n Does any of this really matter? You could argue that I\u2019m wasting my time, that I am writing a very long essay that merely engages in a bunch of semantic hair-splitting that benefits no one. But I would suggest that muddled definitions lead to muddled thinking,  in the manner that Orwell described:\n A man may take to drink because he feels himself to be a failure, and then fail all the more completely because he drinks. It is rather the same thing that is happening to the English language. It becomes ugly and inaccurate because our thoughts are foolish, but the slovenliness of our language makes it easier for us to have foolish thoughts. The point is that the process is reversible. Modern English, especially written English, is full of bad habits which spread by imitation and which can be avoided if one is willing to take the necessary trouble.\n On that basis, I would like to think that I do some good, to the extent that I\u2019m able to take on the broad range of ideas associated with OOP.\n This essay is long, and it would be even longer if I carefully qualified every sentence about OOP. Please note that, below, when I refer to a multi-paradigm language, such as Scala, as an OOP language, I am specifically referring to the OOP qualities in that language. And I would like you to ask yourself, if you use a multi-paradigm language to write in the \u201cfunctional\u201d paradigm, are you actually gaining anything from the OOP qualities of that language? Could you perhaps achieve the same thing, more easily, using a language that is fundamentally \u201cfunctional\u201d, rather than object oriented?\n On tech blogs and forums, there are a great many people who defend OOP, and who feel certain that they know what they are defending, despite the lack of any standard definition.  Consider this remark by \u201cmillstone\u201d on Hacker News:\n This article, like many that cheer functional programming, falls into a certain cognitive bias, that prevents it from seeing what OO is good at.\n What is OO good at? Apparently millstone thinks that OO is good at being dynamic. millstone then criticizes the fact that Haskel has static type checking, ignoring the fact that Java, C++, C# and many other OO languages all have static type checking:\n Alan Kay wrote \u201cThe key in making great and growable systems is much more to design how its modules communicate rather than what their internal properties and behaviors should be.\u201d\n To start to see what this means, consider the annoying String / Data.Text split in Haskell. String is very much in the \u201cleave data alone\u201d mindset, baring its guts as a [Char]. Now you\u2019re stuck: you can\u2019t change its representation, you can\u2019t easily introduce Unicode, etc. This proved to be so rigid that an entirely new string type had to be introduced, and we\u2019re still dealing with the fallout.\n Great and growable systems! The large scale structure of our software, decomposed into modules, not just at a moment frozen in time, but in the future as well. We are tasked with thinking about relationships and communication.\n millstone then quotes the original article, and then makes clear they are really talking about \u201d truly dynamic languages\u201d and not OOP:\n To come up with a better solution [for dispatching], Haskell and Clojure take very different approaches, but both excel what any OO programmer is commonly used to.\n \u201cAny OO programmer?\u201d No way! OO as realized in truly dynamic languages exposes not just a fixed dispatch mechanism, but the machinery of dispatch itself, i.e. a metaobject protocol\n There are plenty of OOP languages that have static data-type checking, and there are non-OOP languages that are dynamic, so millstone is not really talking about OOP at all, and yet millstone is certain that they know what OOP is. This is a problem that I run into fairly often: a fierce advocate of OOP who is using some idiosyncratic definition of OOP, which takes me completely off-guard.\n   Please note the irony here: millstone is quoting a passage that is critical of Java, and yet millstone is claiming this passage, about \u201clate binding\u201d, shows what OO is good at. By this definition, Java is not an OOP language, which would surely be a surprise to Java programmers.\n Again, there are OOP languages that have don\u2019t have late binding, and there are non-OOP languages that do have late binding. But for millstone, No True OOP Programmer would ever use a language with static data-type checking. To the extent that millstone is inventing a wholly idiosyncratic definition of OOP, their comments about OOP are wholly irrelevant to anyone else who wants to talk about OOP. And yet, in some sense, millstone is very common: I commonly run into software developers who have wholly idiosyncratic definitions of OOP. This can make it difficult to have a meaningful conversation.\n How should we talk about a concept as amorphous as OOP? There is no standard definition, so the best we can do is survey a few different sources and gather up the main ideas. How should we conduct this survey? Two ways: first, a trip through history, listening to Alan Kay describe the roots of OOP, and then a look at what some current introductory materials are teaching beginners about the core ideas of OOP.\n  One would compute with a [laptop] \u201cDynabook\u201d in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior.\n \u2026Somewhere in all of this, I realized that the bridge to an object-based system could be in terms of each object as a syntax directed interpreter of messages sent to it. In one fell swoop this would unify object-oriented semantics with the ideal of a completely extensible language. The mental image was one of separate computers sending requests to other computers that had to be accepted and understood by the receivers before anything could happen. In today\u2019s terms every object would be a server offering services whose deployment and discretion depended entirely on the server\u2019s notion of relationship with the servee.\n That is a beautiful vision, but is that the same thing as what we now call \u201cobject oriented programming\u201d? In the above quote,  Alan Kay seems to be describing something close to what we would now call the Actor Model.\n An actor is a process that executes a function. \u2026 Actors never share state and thus never need to compete for locks for access to shared data. Instead, actors share data by sending messages that are immutable. Immutable data cannot be modified, so reads do not require a lock. Messages are sent asynchronously and are buffered in an actor\u2019s mailbox. A mailbox is essentially a queue with multiple producers (other actors) and a single consumer. A particular actor is driven by receiving messages from the mailbox based on pattern matching.\n Alan Kay\u2019s beautiful description of OOP bears no relation to anything that I have ever seen in the real world. Whenever I point out that what we ended up with is very far from what we were promised, I am often greeted with a No True Scotsman defense: if only I did things better, or used a purer language, then I would experience Enlightenment, and suddenly I would gain all the benefits of True Object Oriented Programming. And yet, even Alan Kay seems aware of the fact that what we ended up with is far from what he started with. He is, of course, aware that his own language, SmallTalk, never became popular.  But what does he think of the languages which popularized object oriented programming?\n Sun Microsystems had the right people to make Java into a first-class language, and I believe it was the Sun marketing people who rushed the thing out before it should have gotten out.\n \u2026If the pros at Sun had had a chance to fix Java, the world would be a much more pleasant place. This is not secret knowledge. It\u2019s just secret to this pop culture.\n Alan Kay himself has never been a blind, ideological defender of OOP.  He borrowed many ideas from Lisp, and he is open about his admiration of Lisp:\n Kay characterizes SIMULA as a great transitional set of ideas. With SIMULA, Algol blocks could be used as independent things that could carry data and behavior. In 1966, Kay had just learned Sketchpad when he read an early paper on SIMULA by Nygaard and Dahl. Kay put a biological twist on what he would later call object-oriented programming. \u201cEverything is a cell,\u201d he explains. \u201cThe main thing I added is that everything could be an object. There is an interface algebra that today might be called polymorphism. There was a collision of these ideas and LISP.\u201d Kay admires the great set of ideas present in LISP and refers to it as the \u201cgreatest single programming language ever designed.\u201d\n My own experience with OOP involves long meetings debating worthless trivia such as how to deal with fat model classes in Ruby On Rails, refactoring the code into smaller pieces, each piece a bit of utility code, though we were not allowed to call it utility code, because utility code is regarded as a bad thing under OOP. I have seen hyper-intelligent people waste countless hours discussing how to wire together a system of Dependency Injection that will allow us to instantiate our objects correctly. This, to me, is the great sadness of OOP: so many brilliant minds have been wasted on a useless dogma that inflicts much pain, for no benefit. And worst of all, because OOP has failed to deliver the silver bullet that ends our software woes, every year or two we are greeted with a new orthodoxy, each one promising to finally make OOP work the way it was originally promised.\n  SG: Well, just like it says in the name, SOAP is used for accessing remote objects.\n  SG: Exactly like CORBA, only simpler. Instead of some complex transport protocol that no one will let traverse a firewall, we use HTTP. And instead of some binary message format we use XML.\n  SG: Sure thing. First there\u2019s the SOAP envelope. It\u2019s pretty simple. It\u2019s just an XML document consisting of a header and a body. And in the body you make your RPC call.\n  SG: Absolutely. As I was saying, you make your RPC call by putting the method name and its arguments in the body. The method name is the outermost element and each sub-element is a parameter. And all the parameters can be typed as specified right here in Section 5 of the specification.\n    SG: Endpoint, the address of the service. You POST your SOAP envelope to the endpoint\u2019s URL.\n   Dev: Hrrm. And what happens if I move the service to a different endpoint? Do I get a 301 back?\n  Dev: So, when you said SOAP uses HTTP, what you meant to say is SOAP tunnels over HTTP.\n SG: Well, \u2018tunnel\u2019 is such an ugly word. We prefer to say SOAP is transport agnostic.\n Dev: But HTTP isn\u2019t a transport, it\u2019s an application protocol. Anyway, what other \u201ctransports\u201d does SOAP support?\n SG: Well, officially none. But you can potentially support any of \u2018em. And there\u2019s lots of platforms that support JMS, and FTP, and SMTP.\n     Dev: And these \u2018actor\u2019 and \u2018mustUnderstand\u2019 attributes, does anyone use those?\n    Dev: Well, I could mostly make things work, but only if I stick with one SOAP stack. Also, I can\u2019t say I like the idea of remote procedure calls and serializing objects.\n SG: Remote procedure calls! Serialized objects! Where did you get the impression that SOAP was about RPCs? SOAP is all about document-based message passing, my friend.\n  SG: Forget what I said. From here on in we pass around coarse-grained messages \u2014 you like that term, \u2018coarse-grained?\u2019 Messages that conform to an XML Schema. We call the new style Document/Literal and the old style RPC/Encoded.\n   Dev: (Reads XML Schema spec). Saints preserve us! Alexander the Great couldn\u2019t unravel that.\n SG: Don\u2019t worry about it. Your tools will create the schema for you. Really, its all about the tooling.\n  SG: Well, they will reflect on your code (if possible) and autogenerate a compliant schema.\n Dev: Reflect on my code? I thought it was all about documents, not serialized objects.\n SG: Didn\u2019t you hear me? It\u2019s all about the tools. Anyway, we can\u2019t expect you to write XML Schema and WSDL by hand. Besides, its just plumbing. You don\u2019t need to see it.\n  SG: Oh, haven\u2019t I mentioned WSDL? W-S-D-L. Web Services Description Language. It\u2019s how you specify the data types, parameter lists, operation names, transport bindings, and the endpoint URI, so that client developers can access your service. Check it out.\n Dev: (Reads WSDL spec). I trust that the guys who wrote this have been shot. It\u2019s not even internally consistent.\n The culture that grew up around industry standards such as WSDL lead James Lewis and Martin Fowler to complain about \u201c a complexity that is, frankly, breathtaking\u201c:\n Certainly, many of the techniques in use in the microservice community have grown from the experiences of developers integrating services in large organisations. The Tolerant Reader pattern is an example of this. Efforts to use the web have contributed, using simple protocols is another approach derived from these experiences \u2014 a reaction away from central standards that have reached a complexity that is, frankly, breathtaking. (Any time you need an ontology to manage your ontologies you know you are in deep trouble.)\n   But of course, although umpteen millions were invested in these systems, thousands of conferences and MeetUps were held, dozens of books published, and numerous tech companies got rich as Croesus, when I bring up these expensive disasters, I am told that No True OOP Programmer does any of that nonsense any more. But of course, they do: maintaining these fragile, verbose legacy systems makes up a huge percentage of the work that OOP programmers do.\n  Smalltalk is not only its syntax or the class library, it is not even about classes. I\u2019m sorry that I long ago coined the term \u201cobjects\u201d for this topic because it gets many people to focus on the lesser idea. The big idea is \u201cmessaging\u201d \u2026 The key in making great and growable systems is much more to design how its modules communicate rather than what their internal properties and behaviors should be. Think of the internet \u2013 to live, it (a) has to allow many different kinds of ideas and realizations that are beyond any single standard and (b) to allow varying degrees of safe interoperability between these ideas. If you focus on just messaging \u2013 and realize that a good metasystem can late bind the various 2nd level architectures used in objects \u2013 then much of the language-, UI-, and OS based discussions on this thread are really quite moot.\n Does anyone really think that OOP is the best way to give us \u201cmessaging\u201d? We have, at this time, numerous technologies that help with messaging. An advocate of the functional paradigm might say something like \u201cPure functions combined with the Actor Model go much further toward giving us what Alan Kay seems to think best\u201d but I\u2019ll point out, you could restrict yourself to using PHP, and only use those features that were available in PHP4, back in 2004, and then add in one modern ingredient, f\n......", "posttime": "2020-06-15 05:26:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u9ad8\u6602,oriented,oop", "title": "\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u662f\u4e00\u573a\u4ee3\u4ef7\u9ad8\u6602\u7684\u707e\u96be\uff0c\u5fc5\u987b\u7ed3\u675f", "title_en": "Object Oriented Programming is an expensive disaster which must end", "transed": 1, "url": "http://www.smashcompany.com/technology/object-oriented-programming-is-an-expensive-disaster-which-must-end", "via": "", "real_tags": ["\u7f16\u7a0b", "\u9ad8\u6602", "oriented", "oop"]}, {"category": "", "categoryclass": "", "imagename": "0d033261ae0fad4093625973c4c3de99.png", "infoid": 1006570, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fdd\u62a4\u82af\u7247\u514d\u53d7\u7f51\u7edc\u653b\u51fb\u6b63\u53d8\u5f97\u8d8a\u6765\u8d8a\u56f0\u96be\uff0c\u6210\u672c\u8d8a\u6765\u8d8a\u9ad8\uff0c\u8d44\u6e90\u4e5f\u8d8a\u6765\u8d8a\u5bc6\u96c6\uff0c\u4f46\u968f\u7740\u5176\u4e2d\u4e00\u4e9b\u82af\u7247\u6700\u7ec8\u8fdb\u5165\u4efb\u52a1\u5173\u952e\u578b\u670d\u52a1\u5668\u548c\u6c7d\u8f66\u7b49\u5b89\u5168\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4fdd\u62a4\u82af\u7247\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u6709\u5fc5\u8981\u3002\n\u5c3d\u7ba1\u5b89\u5168\u6280\u672f\u7684\u8fdb\u5c55\u53c2\u5dee\u4e0d\u9f50\uff0c\u5e94\u7528\u4e5f\u4e0d\u4e00\u81f4\uff0c\u4f46\u81f3\u5c11\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\uff0c\u5b89\u5168\u4e00\u76f4\u5728\u534a\u5bfc\u4f53\u884c\u4e1a\u7684\u96f7\u8fbe\u4e0a\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5b89\u5168\u80cc\u540e\u7684\u7ecf\u6d4e\u53d8\u5316\uff0c\u8fd9\u79cd\u60c5\u51b5\u6b63\u5728\u5f00\u59cb\u597d\u8f6c\u3002\u867d\u7136\u5b89\u5168\u4e00\u76f4\u662f\u4e00\u4e2a\u98ce\u9669\u4e0e\u6536\u76ca\u7684\u7b49\u5f0f\uff0c\u4f46\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u5b83\u8ddd\u79bb\u534a\u5bfc\u4f53\u5e02\u573a\u53ea\u6709\u4e00\u6b65\u4e4b\u9065\u3002\u73b0\u5728\u4e0d\u518d\u662f\u8fd9\u6837\u4e86\u3002\u968f\u7740\u7cfb\u7edf\u4f9b\u5e94\u5546\u548cOEM\u8d8a\u6765\u8d8a\u591a\u5730\u8bbe\u8ba1\u81ea\u5df1\u7684\u82af\u7247\uff0c\u800c\u4e0d\u662f\u8d2d\u4e70\u7531\u7b2c\u4e09\u65b9\u5f00\u53d1\u5546\u521b\u5efa\u7684\u5546\u4e1a\u5f00\u53d1\u7684\u8bbe\u5907\u548cIP\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u521b\u5efa\u81ea\u5df1\u7684\u751f\u6001\u7cfb\u7edf\u548c\u9700\u6c42\uff0c\u5b89\u5168\u662f\u4ed6\u4eec\u7684\u5173\u952e\u95ee\u9898\u3002\n\u5b8f\u89c2\u7ecf\u6d4e\u5b66\u3002\u6570\u636e\u7684\u4ef7\u503c\u6b63\u5728\u4e0a\u5347\uff0c\u4ece\u7f51\u7edc\u548c\u8f6f\u4ef6\u4e00\u76f4\u5230\u82af\u7247\u548c\u4e92\u8fde\u7ea7\u522b\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u6709\u591a\u4e2a\u5165\u53e3\u70b9\u3002\u7cfb\u7edf\u4f9b\u5e94\u5546\u9762\u4e34\u7740\u9632\u6b62\u5b89\u5168\u6f0f\u6d1e\u7684\u538b\u529b\uff0c\u4ed6\u4eec\u6b63\u5728\u5bf9\u5404\u81ea\u7684\u4f9b\u5e94\u94fe\u65bd\u52a0\u538b\u529b\u3002\n\u5fae\u89c2\u7ecf\u6d4e\u5b66\u3002\u968f\u7740\u65b0\u5e02\u573a\u7684\u51fa\u73b0\uff0c\u7279\u522b\u662fEDGE\u548cAI\uff0c\u82af\u7247\u5236\u9020\u5546\u6b63\u4e89\u5148\u6050\u540e\u5730\u5236\u9020\u5b89\u5168\u6027\u66f4\u5f3a\u7684\u534a\u5b9a\u5236\u82af\u7247\u3002\u4ed6\u4eec\u91c7\u53d6\u4e86\u4e24\u6761\u4e3b\u8981\u9014\u5f84\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4e00\u79cd\u662f\u201c\u8d85\u7ea7\u82af\u7247\u201d\u65b9\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e\u74f7\u7816/\u82af\u7247\u7684\u65b9\u6cd5\u3002\u5b89\u5168\u6b63\u88ab\u67b6\u6784\u5230\u8fd9\u4e24\u4e2a\u65b9\u9762\u3002\n\u7eb3\u7c73\u7ecf\u6d4e\u5b66\u3002\u7ecf\u8fc7\u534a\u4e2a\u4e16\u7eaa\u7684\u529f\u80fd\u6269\u5c55\uff0c\u82af\u7247\u5df2\u7ecf\u51cf\u5c11\u5230\u4e86\u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u4fdd\u62a4\u82af\u7247\u4e0a\u7684\u6570\u636e\u7684\u5730\u6b65\u3002\u66f4\u8584\u7684\u7edd\u7f18\u3001\u66f4\u597d\u7684\u626b\u63cf\u5de5\u5177\u548c\u66f4\u591a\u8fdb\u51fa\u82af\u7247\u7684\u65b9\u5f0f\u9700\u8981\u66f4\u590d\u6742\u7684\u5b89\u5168\u65b9\u6848\uff0c\u8fd9\u4e9b\u65b9\u6848\u9700\u8981\u5728\u67b6\u6784\u4e2d\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5f71\u54cd\u529f\u8017\u3001\u6027\u80fd\u548c\u9762\u79ef\u3002\n\u5b8f\u89c2\u7ecf\u6d4e\u8fd9\u4e09\u4e2a\u9a71\u52a8\u56e0\u7d20\u4e2d\u6700\u660e\u663e\u7684\u662f\u5b8f\u89c2\u7ecf\u6d4e\u3002\u5728\u6295\u673a\u6027\u6267\u884c\u548c\u5206\u652f\u9884\u6d4b(Meltdown\u3001Spectre\u3001Prehadow)\u4e2d\u53d1\u73b0\u5907\u53d7\u77a9\u76ee\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u6700\u7ec8\u9700\u8981\u5bf9\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u6602\u8d35\u7684\u4fee\u590d\u3002\u6240\u6709\u4e3b\u8981\u7684\u5904\u7406\u5668\u4f9b\u5e94\u5546\u90fd\u5fc5\u987b\u7528\u8f6f\u4ef6\u4fee\u8865\u6f0f\u6d1e\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u6d88\u9664\u4e86\u4e24\u79cd\u63d0\u9ad8\u6027\u80fd\u7684\u6709\u6548\u6280\u672f\u3002\u56e0\u6b64\uff0c\u5347\u7ea7\u670d\u52a1\u5668\u4ee5\u5229\u7528\u6700\u65b0\u5904\u7406\u5668\u7684\u5ba2\u6237\u5931\u53bb\u4e86\u5927\u90e8\u5206\u6027\u80fd\u6539\u8fdb\u3002\u53cd\u8fc7\u6765\uff0c\u8fd9\u53c8\u8feb\u4f7f\u4ed6\u4eec\u589e\u52a0\u66f4\u591a\u7684\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u5904\u7406\u76f8\u540c\u7684\u6570\u636e\u91cf\u3002\n\u8fd9\u662f\u7cfb\u7edf\u4f9b\u5e94\u5546\u9009\u62e9\u5f00\u53d1\u4ed6\u4eec\u81ea\u5df1\u7684\u5b9a\u5236\u82af\u7247\u67b6\u6784\u7684\u90e8\u5206\u539f\u56e0\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u6027\u80fd\u548c\u529f\u8017\u65b9\u9762\u63d0\u4f9b\u66f4\u5927\u7684\u6536\u76ca\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u8bb8\u591a\u516c\u53f8\u5229\u7528ARM\u5185\u6838\u548c\u81ea\u5b9a\u4e49\u52a0\u901f\u5668(RISC-V\u3001eFPGA)\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u4f9d\u8d56\u82f1\u7279\u5c14\u3001AMD\u3001IBM\u6216NVIDIA\u5904\u7406\u5668\u3002\u8fd9\u4e00\u4e3e\u63aa\u8fd8\u5c06\u82af\u7247\u5b89\u5168\u5b8c\u5168\u7f6e\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u5e76\u63d0\u4f9b\u4e86\u8bbe\u8ba1\u81ea\u7531\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u9700\u8981\u5411\u540e\u517c\u5bb9\u7279\u5b9a\u7684ISA\u3002\n\u6240\u6709\u8fd9\u4e9b\u53d8\u5316\u5c06\u4ea7\u751f\u591a\u5927\u5f71\u54cd\u8fd8\u6709\u5f85\u89c2\u5bdf\u3002\u7136\u800c\uff0c\u663e\u800c\u6613\u89c1\u7684\u662f\uff0c\u786c\u4ef6\u653b\u51fb\u7684\u7ecf\u6d4e\u6027\u6b63\u5728\u53d1\u751f\u53d8\u5316\u3002\u4fb5\u5165\u82af\u7247\u548c\u82af\u7247\u7cfb\u7edf\u6240\u9700\u7684\u5de5\u5177\u4e0d\u518d\u662f\u666e\u901a\u7f6a\u72af\u65e0\u6cd5\u4f01\u53ca\u7684\u3002\u6b64\u5916\uff0c\u5728\u8fc7\u53bb\uff0c\u5927\u591a\u6570\u9488\u5bf9\u786c\u4ef6\u7684\u653b\u51fb\u6ca1\u6709\u8f6f\u4ef6\u5165\u4fb5\u90a3\u4e48\u660e\u663e\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e3b\u8981\u6d89\u53ca\u4f01\u4e1a\u548c\u653f\u5e9c\u5b9e\u4f53\uff0c\u800c\u8fd9\u4e24\u4e2a\u5b9e\u4f53\u90fd\u4e0d\u559c\u6b22\u63d0\u9192\u4eba\u4eec\u6ce8\u610f\u5b89\u5168\u6f0f\u6d1e\u3002\u968f\u7740\u8ba1\u7b97\u53d8\u5f97\u66f4\u52a0\u666e\u53ca\u548c\u4e92\u8054\uff0c\u6f5c\u5728\u7684\u653b\u51fb\u9762\u6b63\u5728\u6269\u5927\uff0c\u5305\u62ec\u66f4\u591a\u7684\u8bbe\u5907\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5c06\u589e\u52a0\u786c\u4ef6\u653b\u51fb\u7684\u53ef\u89c1\u6027\u3002\n\u201c\u6709\u56db\u4e2a\u4e3b\u8981\u7684\u653b\u51fb\u9762\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e0d\u540c\u7684\u6210\u672c\uff0c\u201dDARPA\u5fae\u7cfb\u7edf\u6280\u672f\u529e\u516c\u5ba4\u7684\u9879\u76ee\u7ecf\u7406Serge Leef\u8bf4\u3002\u201c\u4e00\u4e2a\u662f\u4f9b\u5e94\u94fe\uff0c\u662f\u4ee5PUF(\u7269\u7406\u4e0a\u4e0d\u53ef\u514b\u9686\u7684\u529f\u80fd)\u7684\u5927\u5c0f\u4e3a\u57fa\u7840\u7684\u3002\u8fd9\u91cc\u7684\u6743\u8861\u662f\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6027\u80fd\u6216\u529f\u7387\u3002\u7b2c\u4e8c\u79cd\u662f\u65c1\u8def\u653b\u51fb\uff0c\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u4f60\u62b5\u6d88\u4e86\u6d3b\u52a8\u7684\u95e8\u3002\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u5b89\u5168\u529f\u80fd\u7684\u5927\u5c0f\u7ffb\u4e00\u756a\uff0c\u4e5f\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4ea7\u751f\u968f\u673a\u566a\u97f3\u800c\u8017\u8d39\u7535\u529b\u3002\u7b2c\u4e09\u79cd\u662f\u53cd\u5411\u5de5\u7a0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u903b\u8f91\u9501\u5b9a\u6216\u6a21\u7cca\u5904\u7406\u3002\u56e0\u4e3a\u60a8\u4f7f\u7528\u7684\u662f\u6d3b\u52a8\u7684\u9644\u52a0\u7535\u8def\uff0c\u6240\u4ee5\u5b83\u4f1a\u5bf9\u623f\u5730\u4ea7\u548c\u6027\u80fd\u4ea7\u751f\u5f71\u54cd\u3002\u56db\u662f\u6728\u9a6c\u68c0\u6d4b\u3002\u8fd9\u4e5f\u4f1a\u8017\u8d39\u623f\u5730\u4ea7\u548c\u4e1a\u7ee9\u3002\u201c\u3002\n\u5bf9\u4e8e\u519b\u7528/\u822a\u7a7a\u5e94\u7528\uff0c\u786c\u4ef6\u5b89\u5168\u663e\u7136\u662f\u5fc5\u8981\u7684\u3002\u4f46\u5bf9\u4e8e\u6c7d\u8f66\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u95ee\u9898\uff0c\u7531\u4e8e\u8f66\u8f86\u4e2d\u7684\u7535\u5b50\u4f53\u7cfb\u7ed3\u6784\u4e0d\u65ad\u53d1\u5c55\uff0c\u8fd9\u4e2a\u95ee\u9898\u4ecd\u5728\u53d1\u5c55\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u8f85\u52a9\u548c\u6700\u7ec8\u81ea\u52a8\u9a7e\u9a76\u7684\u57fa\u672c\u7b56\u7565\u5df2\u7ecf\u4ece\u5c06\u4e00\u5207\u53d1\u9001\u5230\u4e91\u5e76\u8fd4\u56de\u5230\u8f66\u8f86\uff0c\u5230\u8f66\u8f86\u4e2d\u7684\u96c6\u4e2d\u5904\u7406\uff0c\u7136\u540e\u5230\u5206\u5e03\u5f0f\u5904\u7406\uff0c\u6700\u540e\u662f\u4f20\u611f\u5668\u7ea7\u522b\u7684\u5206\u5e03\u5f0f\u5904\u7406\u4e0e\u7ed3\u6784\u5316\u548c\u6e05\u7406\u6570\u636e\u7684\u96c6\u4e2d\u5904\u7406\u7684\u7ec4\u5408\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\uff0c\u6c7d\u8f66\u5236\u9020\u5546\u5df2\u7ecf\u610f\u8bc6\u5230\uff0c\u8c01\u62e5\u6709\u7535\u5b50\u57fa\u7840\u8bbe\u65bd\uff0c\u8c01\u5c31\u62e5\u6709\u5e02\u573a\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u88ab\u4f9b\u5e94\u5546\u53d6\u4ee3\u3002\u786e\u4fdd\u6c7d\u8f66\u6570\u636e\u5b89\u5168\u7684\u6218\u7565\u4e5f\u540c\u6837\u6447\u6446\u4e0d\u5b9a\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u67b6\u6784\u3002\u4f46\u7531\u4e8e\u5165\u4fb5\u7684\u8d23\u4efb\u542b\u4e49\u548c\u52d2\u7d22\u8f6f\u4ef6\u7684\u6f5c\u5728\u6210\u672c\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\uff0c\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e00\u6837\u662f\u76ee\u6807\u3002\u8fd9\u91cc\u7684\u65b9\u6cd5\u5f80\u5f80\u5206\u6210\u51e0\u4e2a\u4e0d\u540c\u7684\u9635\u8425\u3002\n\u201c\u653b\u51fb\u4e3b\u8981\u6709\u4e24\u79cd\uff0c\u201dTortuga Logic\u7684\u9996\u5e2d\u6267\u884c\u5b98\u6770\u68ee\u00b7\u5965\u4f2f\u683c(Jason Oberg)\u8bf4\u3002\u201c\u4e00\u79cd\u662f\u7269\u7406\u4e0a\u7684\uff0c\u6bd4\u5982\u5411\u82af\u7247\u53d1\u5c04\u6fc0\u5149\uff0c\u4f7f\u7528\u5149\u5b66\u6d4b\u91cf\u548c\u663e\u5fae\u955c\u3002\u8fd9\u8fd8\u5305\u62ec\u7269\u7406\u4fa7\u901a\u9053\u653b\u51fb\uff0c\u5982\u7535\u78c1\u8f90\u5c04\u548c\u70ed\u53d8\u5316\u3002\u8981\u83b7\u5f97\u82af\u7247\u7684\u7269\u7406\u8bbf\u95ee\u6743\u9650\uff0c\u60a8\u9700\u8981\u5b9e\u9645\u62e5\u6709\u8be5\u82af\u7247\u3002\u5728\u6570\u5b57\u9886\u57df\u4e5f\u6709\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u88ab\u8fdc\u7a0b\u5229\u7528\uff0c\u6bd4\u5982\u4f4e\u7ea7\u5fae\u7801\uff0c\u5b83\u5229\u7528\u4e86\u82af\u7247\u7684\u5b9e\u9645\u95ee\u9898\u3002\u6211\u4eec\u770b\u5230\u8fdc\u7a0b\u653b\u51fb\u6709\u66f4\u591a\u7684\u589e\u957f\uff0c\u7279\u522b\u662f\u5728\u5546\u4e1a\u9886\u57df\u3002\u8fd9\u4e9b\u90fd\u662f\u6700\u53ef\u6015\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u5728\u5de5\u7a0b\u4e2d\u53d1\u73b0\u4e00\u4e2a\u7f3a\u9677\uff0c\u4f60\u4e0d\u9700\u8981\u62c6\u5f00\u4ec0\u4e48\u4e1c\u897f\u6216\u505a\u53cd\u5411\u5de5\u7a0b\u3002\u4f46\u662f\u4f60\u4e5f\u4e0d\u80fd\u7528\u56fa\u4ef6\u6253\u8865\u4e01\u3002\u8fd9\u5c31\u589e\u52a0\u4e86\u4fee\u590d\u7684\u96be\u5ea6\u3002\u201c\u3002\n\u6b64\u5916\uff0c\u65e0\u8bba\u662f\u8c01\u8bbe\u8ba1\u7684\u7cfb\u7edf\uff0c\u51e0\u4e4e\u90fd\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9IP\u3002\u8fd9\u5728\u6c7d\u8f66\u9886\u57df\u53d8\u5f97\u5c24\u5176\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u6c7d\u8f66\u4f9b\u5e94\u94fe\u5e9e\u5927\uff0c\u7cfb\u7edf\u9700\u8981\u5bf9\u5e7f\u6cdb\u7684\u5bf9\u8c61\u548c\u73af\u5883\u6761\u4ef6\u505a\u51fa\u53cd\u5e94\u3002\nClioSoft\u8d1f\u8d23\u5e02\u573a\u8425\u9500\u7684\u526f\u603b\u88c1\u897f\u8499\u00b7\u5170\u65af(Simon Rance)\u8bf4\uff1a\u201c\u6c7d\u8f66\u4e2d\u7684\u8bb8\u591a\u8bbe\u8ba1\u90fd\u662f\u9ad8\u5ea6\u53ef\u914d\u7f6e\u7684\uff0c\u5373\u4f7f\u662f\u57fa\u4e8e\u4ece\u4f20\u611f\u5668\u83b7\u5f97\u7684\u6570\u636e\uff0c\u5b83\u4eec\u4e5f\u662f\u53ef\u4ee5\u52a8\u6001\u914d\u7f6e\u7684\u3002\u201d\u201c\u6570\u636e\u6b63\u4ece\u8fd9\u4e9b\u4f20\u611f\u5668\u4f20\u56de\u5904\u7406\u5668\u3002\u4ece\u8f66\u8f86\u5230\u6570\u636e\u4e2d\u5fc3\u518d\u56de\u5230\u8f66\u8f86\u7684\u6d77\u91cf\u6570\u636e\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5fc5\u987b\u8fdb\u884c\u8ffd\u8e2a\u3002\u5982\u679c\u51fa\u4e86\u95ee\u9898\uff0c\u4ed6\u4eec\u5fc5\u987b\u8fdb\u884c\u8ffd\u8e2a\uff0c\u627e\u51fa\u6839\u672c\u539f\u56e0\u662f\u4ec0\u4e48\u3002\u8fd9\u5c31\u662f\u9700\u8981\u586b\u8865\u7684\u5730\u65b9\u3002\u201c\u3002\n\u8ddf\u8e2a\u548c\u5b89\u5168\u901a\u5e38\u5728\u8fc7\u53bb\u662f\u5206\u5f00\u7684\uff0c\u4f46\u8fd9\u79cd\u60c5\u51b5\u6b63\u5728\u5f00\u59cb\u6539\u53d8\uff0c\u7279\u522b\u662f\u968f\u7740ISO26262\u5bf9\u53ef\u8ddf\u8e2a\u6027\u7684\u8981\u6c42\u3002\u5170\u65af\u8bf4\uff1a\u201c\u6211\u4eec\u80af\u5b9a\u5728\u8fd9\u4e2a\u9886\u57df\u770b\u5230\u4e86\u66f4\u591a\u7684\u7275\u5f15\u529b\u3002\u201d\u201c\u534a\u5bfc\u4f53IP\u63d0\u4f9b\u5546\u5df2\u7ecf\u62e5\u6709\u8fd9\u9879\u670d\u52a110\u5e74\u4e86\uff0c\u4f46\u968f\u7740IP\u7684\u591a\u79cd\u4f7f\u7528\uff0c\u7279\u522b\u662f\u5728\u7b7e\u8ba2\u6cd5\u5f8b\u534f\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u60c5\u51b5\u80af\u5b9a\u4f1a\u4e0d\u65ad\u589e\u957f\u3002\u201d\n\u5fae\u89c2\u7ecf\u6d4e\u5b66\u9700\u8981\u591a\u5c11\u8fd9\u4e9b\u4e0d\u540c\u7684\u5b89\u5168\u65b9\u6cd5\uff0c\u53d6\u51b3\u4e8e\u7ec6\u5206\u5e02\u573a\u548c\u7279\u5b9a\u5e94\u7528\u7684\u9700\u8981\u3002\u6bcf\u4e2a\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u90fd\u6709\u6210\u672c\uff0c\u56e0\u6b64\u5f52\u6839\u7ed3\u5e95\u53d6\u51b3\u4e8e\u6570\u636e\u7684\u4ef7\u503c\u548c\u6bcf\u53f0\u8bbe\u5907\u7684\u4ef7\u683c\u5f39\u6027\u3002\nRambus\u9632\u4f2a\u4ea7\u54c1\u6280\u672f\u603b\u76d1\u65af\u79d1\u7279\u00b7\u8d1d\u65af\u7279(Scott Best)\u8868\u793a\uff1a\u201c\u6700\u5927\u7684\u95ee\u9898\u662f\uff0c\u4ed6\u4eec\u662f\u5728\u8ffd\u6c42\u6570\u636e\uff0c\u8fd8\u662f\u5728\u8bd5\u56fe\u7834\u574f\u6574\u4e2a\u7cfb\u7edf\u3002\u201d\u201c\u8fd9\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u653b\u51fb\u9762\u3002\u5bf9\u624b\u4f1a\u7528\u4e0d\u540c\u7684\u5de5\u5177\u548c\u7b56\u7565\u53bb\u5bf9\u4ed8\u90a3\u4e9b\u4eba\uff0c\u800c\u9884\u9632\u548c/\u6216\u62d6\u5ef6\u7684\u5bf9\u7b56\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6700\u7ec8\u5bf9\u624b\u4f1a\u8d62\uff0c\u6240\u4ee5\u4f60\u8bd5\u7740\u62d6\u5ef6\uff0c\u76f4\u5230\u4ed6\u4eec\u7d2f\u4e86\uff0c\u7136\u540e\u8f6c\u79fb\u5230\u4f60\u7684\u7ade\u4e89\u5bf9\u624b\u7684\u7cfb\u7edf\u4e0a\uff0c\u800c\u7ade\u4e89\u5bf9\u624b\u7684\u7cfb\u7edf\u6ca1\u6709\u90a3\u4e48\u5f3a\u5927\u7684\u5b89\u5168\u6027\u3002\u6211\u4eec\u5728\u6253\u5047\u9886\u57df\u770b\u5230\u4e86\u5f88\u591a\u3002\u901a\u5e38\u4f60\u53ea\u662f\u60f3\u62d6\u5ef6\u65f6\u95f4\u3002\u201c\n\u6210\u529f\u7684\u5ef6\u8fdf\u57fa\u4e8e\u590d\u6742\u7684\u5b89\u5168\u5806\u6808\u548c\u6700\u4f73\u5b9e\u8df5\u3002\u53ea\u8981\u6709\u8db3\u591f\u7684\u51b3\u5fc3\uff0c\u4efb\u4f55\u5b89\u5168\u90fd\u53ef\u4ee5\u88ab\u6253\u7834\u3002\u4f46\u8fd9\u4e5f\u9700\u8981\u653e\u5728\u5411\u8fb9\u7f18\u8ba1\u7b97\u6f14\u8fdb\u7684\u80cc\u666f\u4e0b\u6765\u770b\u5f85\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u53ef\u4ee5\u53d1\u9001\u5230\u4e91\u4e2d\u8fdb\u884c\u5904\u7406\u7684\u7269\u8054\u7f51\u6982\u5ff5\u5728\u5f88\u591a\u65b9\u9762\u90fd\u662f\u884c\u4e0d\u901a\u7684\uff0c\u5305\u62ec\u7535\u529b\u3001\u5ef6\u8fdf\u548c\u6700\u7ec8\u6210\u672c\u3002\u8fd9\u4e00\u6210\u672c\u5305\u62ec\u6765\u56de\u53d1\u9001\u6570\u636e\u6240\u9700\u7684\u7535\u529b\u548c\u5e26\u5bbd\u3001\u5b58\u50a8\u6570\u636e\u6240\u9700\u7684\u5185\u5b58\u91cf\u4ee5\u53ca\u5904\u7406\u5927\u91cf\u6570\u636e\u6240\u9700\u7684\u8d44\u6e90\u3002\n\u5f53\u524d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u66f4\u9760\u8fd1\u6570\u636e\u6e90\u7684\u5730\u65b9\u8fdb\u884c\u66f4\u591a\u7684\u5904\u7406\uff0c\u5728\u90a3\u91cc\u53ef\u4ee5\u5904\u7406\u548c\u6e05\u7406\u6570\u636e\u3002\u8fd9\u9700\u8981\u4e00\u5b9a\u7a0b\u5ea6\u7684\u667a\u80fd\u6765\u786e\u5b9a\u54ea\u4e9b\u662f\u6709\u7528\u7684\u6570\u636e\uff0c\u54ea\u4e9b\u662f\u5783\u573e\u6570\u636e\uff0c\u5e76\u4e14\u9700\u8981\u5c06\u5b89\u5168\u6027\u672c\u5730\u5316\u5e76\u5f88\u597d\u5730\u96c6\u6210\u5230\u8fb9\u7f18\u8bbe\u5907/\u7cfb\u7edf\u67b6\u6784\u4e2d\u3002\n\u6311\u6218\u5728\u4e8e\uff0c\u8fb9\u7f18\u7684\u5927\u90e8\u5206\u5f00\u53d1\u8303\u56f4\u4ece\u9ad8\u5ea6\u5b9a\u5236\u5230\u534a\u5b9a\u5236\u3002\u7ba1\u7406\u8fd9\u4e9b\u6210\u672c\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u8981\u4e48\u5efa\u7acb\u4e00\u4e2a\u5e73\u53f0\uff0c\u5229\u7528\u7c7b\u4f3c\u4e50\u9ad8\u7684\u82af\u7247/\u74f7\u7816\u65b9\u6cd5\uff0c\u8981\u4e48\u91c7\u7528\u8d85\u7ea7\u82af\u7247\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u73b0\u5728\u90fd\u9700\u8981\u5c06\u5b89\u5168\u57fa\u7840\u8bbe\u65bd\u6269\u5c55\u5230\u6574\u4e2a\u4f9b\u5e94\u94fe\u3002\nDARPA\u7684Leef\u8bf4\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u57fa\u4e8e\u78c1\u7816\u7684\u5f02\u6784\u7b56\u7565\u7684\u52aa\u529b\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u4e86\u5177\u6709\u5927\u91cfIP\u5757\u7684\u5de8\u5927\u7684SoC\u5df2\u7ecf\u88ab\u505c\u7528\u3002\u201d\u201c\u56e0\u6b64\uff0c\u60a8\u53ef\u80fd\u6709\u5305\u542b1\u52301,000\u4e2a\u4e0d\u540c\u5757\u7684\u90e8\u4ef6\uff0c\u5176\u4e2d70%\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u8fd9\u90fd\u662f\u901a\u8fc7\u8f6f\u4ef6\u5b8c\u6210\u7684\uff0c\u6216\u8005\u5728\u60a8\u505c\u7528\u591a\u4e2a\u5757\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u3002\u867d\u7136\u5b83\u5f88\u5927\uff0c\u4f46\u6027\u4ef7\u6bd4\u66f4\u9ad8\u3002\u4f60\u770b\u5230\u7684\u662f\u7ecf\u6d4e\u66f2\u7ebf\u5df2\u7ecf\u6539\u53d8\u3002\u63d0\u5347\u5236\u9020\u4e1a\u7684\u6210\u672c\u66f4\u9ad8\u3002\u201c\u3002\n\u7136\u800c\uff0c\u8fd9\u4e9b\u6a21\u5757\u6216\u5c0f\u82af\u7247\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981\u5b89\u5168\uff0c\u8f6f\u4ef6\u3001\u56fa\u4ef6\u548c\u5141\u8bb8\u4e0d\u540c\u6a21\u5757\u5f7c\u6b64\u901a\u4fe1\u548c\u4e0e\u5916\u90e8\u4e16\u754c\u901a\u4fe1\u7684\u4e92\u8fde\u4e5f\u662f\u5982\u6b64\u3002\u5bf9\u4e8e\u7531\u5355\u4e2a\u4f9b\u5e94\u5546\u5f00\u53d1\u7684\u5e73\u53f0\u4e5f\u662f\u5982\u6b64\uff0c\u5176\u4e2d\u9488\u5bf9\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u5206\u5c42\u4e86\u4e0d\u540c\u7684\u90e8\u5206\u3002\nMaxim Integrated\u7684Micros\u3001Software&amp\uff1bSecurity\u4e1a\u52a1\u90e8\u6267\u884c\u8463\u4e8b\u514b\u91cc\u65af\u00b7\u963f\u8fea\u65af(Kris Ardis)\u8868\u793a\uff1a\u201c\u6211\u4eec\u5185\u7f6e\u5b89\u5168\u7684\u76ee\u7684\u6709\u5f88\u591a\u3002\u201d\u201c\u5176\u4e00\u5c31\u662f\u5e94\u7528\u7a0b\u5e8f\u7ea7\u7684\u5b89\u5168\u6027\u3002\u4f46\u662f\u6211\u4eec\u4e5f\u8ba4\u4e3a\u6743\u91cd\u548c\u7f51\u7edc\u914d\u7f6e\u662fIP\u3002\u6211\u4eec\u5bf9\u5f85FPGA\u7a0b\u5e8f\u6587\u4ef6\u5c31\u50cf\u5bf9\u5f85\u60a8\u7684\u8f6f\u4ef6\u4e00\u6837\uff0cC\u4ee3\u7801\u5c31\u662f\u60a8\u7684IP\u3002\u6211\u4eec\u5728\u5176\u4e2d\u653e\u7f6e\u5b89\u5168\u52a0\u5bc6\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5b89\u5168\u5730\u52a0\u8f7d\u6587\u4ef6\u3002\u5982\u679c\u60a8\u662f\u4e00\u5bb6\u5408\u540c\u5236\u9020\u5546\uff0c\u5e76\u4e14\u60a8\u4ee5\u539f\u59cb\u6587\u672c\u53d1\u9001\u7f51\u7edc\u6587\u4ef6\uff0c\u5219\u6709\u4eba\u53ef\u4ee5\u83b7\u53d6\u8be5\u6587\u4ef6\u5e76\u5c06\u5176\u7f16\u7a0b\u5230\u60a8\u7684\u82af\u7247\u7684\u4e0d\u540c\u7248\u672c\u4e0a\u3002\u4f46\u5982\u679c\u5b83\u662f\u52a0\u5bc6\u7684\uff0c\u800c\u4e14\u6709\u5b89\u5168\u5f15\u5bfc\uff0c\u90a3\u4e48\u4f60\u7684\u4f53\u91cd\u6587\u4ef6\u5c31\u50cf\u4e00\u4e2a\u5b89\u5168\u5f15\u5bfc\u4e00\u6837\uff0c\u4f1a\u5728\u6b63\u5e38\u8f6f\u4ef6\u4e0b\u53d7\u5230\u4fdd\u62a4\u3002\u8fd9\u4efd\u8def\u7ebf\u56fe\u6709\u5f88\u591a\u90e8\u5206\u3002\u5b83\u4e13\u4e3a\u4e0d\u540c\u7684\u7f51\u7edc\u3001\u5916\u56f4\u8bbe\u5907\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u3002\u4f46\u6211\u4eec\u80af\u5b9a\u4f1a\u770b\u5230\u5176\u4ed6\u79cd\u7c7b\u7684\u5b89\u5168\u548c\u5065\u58ee\u529f\u80fd\u6b63\u5728\u5b9e\u65bd\uff0c\u7279\u522b\u662f\u5728\u4e00\u4e9b\u9ad8\u7aef\u5de5\u4e1a\u548c\u533b\u7597\u5e94\u7528\u4e2d\u3002\u201c\u3002\n\u8fd9\u4e5f\u6709\u5f88\u597d\u7684\u7406\u7531\u3002Synopsys\u9996\u5e2d\u5b89\u5168\u6280\u672f\u4e13\u5bb6\u8fc8\u514b\u00b7\u535a\u5c14\u624e(Mike Borza)\u8868\u793a\uff1a\u201c\u653b\u51fb\u8fc7\u53bb\u4ec5\u9650\u4e8e\u5b89\u5168\u5b9e\u9a8c\u5ba4\uff0c\u4ed6\u4eec\u4f1a\u5728\u90a3\u91cc\u8fdb\u884c\u6545\u969c\u6ce8\u5165\uff0c\u4ee5\u7ed5\u8fc7\u5b89\u5168\u65b9\u6848\u3002\u201d\u201c\u4f46\u968f\u7740\u6210\u50cf\u6280\u672f\u4ef7\u683c\u7684\u4e0b\u964d\uff0c\u5b83\u4e0d\u518d\u53ea\u662f\u7531\u5927\u5b66\u5b9e\u9a8c\u5ba4\u548c\u79c1\u4eba\u5b9e\u9a8c\u5ba4\u5b8c\u6210\u7684\u3002\u653b\u51fb\u4e0d\u518d\u4ec5\u4ec5\u662f\u7814\u7a76\u3002\u786e\u5b9e\u5b58\u5728\u6076\u610f\u653b\u51fb\u3002\u5bf9\u4e8e\u8bb8\u591a\u4eba\u6765\u8bf4\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u6df1\u5965\u7684\u95ee\u9898\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u770b\u5230\u82af\u7247\u6280\u672f\u7684\u8fdb\u6b65\u3002\u201c\u3002\n\u7eb3\u7c73\u7ecf\u6d4e\u5b66\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u6bd4\u524d\u6cbf\u8282\u70b9\u66f4\u660e\u663e\uff0c\u5728\u90a3\u91cc\u5efa\u7acb\u6709\u6548\u7684\u5b89\u5168\u53ef\u80fd\u662f\u6700\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684\u6311\u6218\u3002\u5728\u8fd9\u4e9b\u8282\u70b9\u4e0a\u5f00\u53d1\u7684\u82af\u7247\u662f\u6700\u590d\u6742\u3001\u6700\u6602\u8d35\u7684\uff0c\u901a\u5e38\u4e5f\u662f\u6700\u96be\u4fdd\u62a4\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4eba\u4eec\u8d8a\u6765\u8d8a\u62c5\u5fc3\uff0c\u4e0d\u65ad\u6269\u5927\u89c4\u6a21\u6b63\u5728\u5f00\u8f9f\u65b0\u7684\u653b\u51fb\u9762\uff0c\u8fd9\u5728\u8fc7\u53bb\u662f\u4ece\u672a\u6709\u8fc7\u7684\u3002\n\u572810 nm\u53ca\u4ee5\u4e0b\uff0c\u65e0\u9700\u5b9e\u9645\u63a5\u89e6\u82af\u7247\u5373\u53ef\u626b\u63cf\u52a0\u5bc6\u65b9\u6848\u3002\u51e0\u5e74\u524d\uff0c\u67cf\u6797\u7406\u5de5\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u9996\u6b21\u786e\u5b9a\u8fd9\u662f\u4e00\u4e2a\u53ef\u80fd\u7684\u653b\u51fb\u9762\uff0c\u4ed6\u4eec\u5c55\u793a\u4e86\u901a\u8fc7\u572828 nm FPGA\u4e0a\u5229\u7528\u5149\u5b66\u975e\u63a5\u89e6\u5f0f\u63a2\u6d4b\uff0c\u4ed6\u4eec\u80fd\u591f\u5bf9\u82af\u7247\u7684\u6bd4\u7279\u6d41\u52a0\u5bc6\u6267\u884c\u975e\u4fb5\u5165\u6027\u653b\u51fb\u3002\u81ea\u90a3\u4ee5\u540e\uff0cFPGA\u4f9b\u5e94\u5546\u5b89\u88c5\u4e86\u5404\u79cd\u963b\u585e\u548c\u6df7\u6dc6\u6280\u672f\uff0c\u4f46\u4e00\u4e9b\u719f\u6089\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b89\u5168\u4e13\u5bb6\u8868\u793a\uff0c\u4ed6\u4eec\u5bf9\u5728\u4e0d\u63a5\u89e6\u82af\u7247\u7684\u60c5\u51b5\u4e0b\u67e5\u770b\u6570\u636e\u52a0\u5bc6\u65b9\u6848\u662f\u5982\u6b64\u5bb9\u6613\u611f\u5230\u9707\u60ca\u3002\n\u5728\u8fd9\u4e9b\u5de5\u827a\u8282\u70b9\uff0c\u66f4\u8584\u7684\u7edd\u7f18\u5c42\u548c\u66f4\u8584\u7684\u886c\u5e95\u4e5f\u610f\u5473\u7740\u82af\u7247\u4e0a\u6709\u66f4\u591a\u7684\u566a\u97f3\u3002\u5176\u4e2d\u90e8\u5206\u539f\u56e0\u662f\u7535\u78c1\u8f90\u5c04\uff0c\u5b83\u5df2\u7ecf\u9020\u6210\u4e86\u82af\u7247\u4e0a\u7684\u4fe1\u53f7\u5e72\u6270\u3002\u5b83\u4e5f\u53ef\u4ee5\u5728\u82af\u7247\u5916\u542c\u5230\u3002\nAnsys\u7684\u4ea7\u54c1\u8425\u9500\u603b\u76d1\u9a6c\u514b\u00b7\u65af\u6e29\u5b81(Marc Swinnen)\u8868\u793a\uff1a\u201c\u7531\u4e8e\u5b83\u662f\u57fa\u4e8e\u786c\u4ef6\u7684\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u6709\u7f3a\u9677\uff0c\u4e00\u65e6\u5b83\u51fa\u73b0\u5728\u73b0\u573a\uff0c\u4f60\u51e0\u4e4e\u65e0\u80fd\u4e3a\u529b\u3002\u201d\u201c\u901a\u8fc7\u8f6f\u4ef6\uff0c\u60a8\u53ef\u4ee5\u53d1\u9001\u8865\u4e01\u3002\u5982\u679c\u901a\u8fc7\u5305\u88f9\u53ef\u4ee5\u542c\u5230\u4fe1\u53f7\uff0c\u4f60\u5fc5\u987b\u91cd\u65b0\u5236\u4f5c\u4e00\u4e2a\u3002\u5b83\u771f\u7684\u9700\u8981\u53ca\u65e9\u8bbe\u8ba1\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u4fe1\u7528\u5361\u7684\u82af\u7247\uff0c\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u5fc5\u987b\u6d88\u8017\u76f8\u540c\u7684\u7535\u91cf\u3002\u4ed6\u4eec\u88c5\u4e0a\u4e86\u865a\u62df\u5f00\u5173\uff0c\u4ee5\u963b\u6b62\u7535\u5b50\u63a2\u6d4b\u3002\u201c\u3002\n\u867d\u7136\u6269\u5c55\u7684\u7ecf\u6d4e\u6027\u5bf9\u4e00\u4e9b\u516c\u53f8\u4ecd\u7136\u5177\u6709\u8db3\u591f\u7684\u5438\u5f15\u529b\uff0c\u4f46\u5b83\u4eec\u6b63\u5728\u8feb\u4f7f\u82af\u7247\u5236\u9020\u5546\u5728\u8fd9\u4e9b\u9ad8\u7ea7\u8282\u70b9\u4e0a\u5b9e\u65bd\u5b89\u5168\u63aa\u65bd\uff0c\u800c\u8fd9\u4e9b\u63aa\u65bd\u5728\u8f83\u8001\u7684\u8282\u70b9\u4e0a\u662f\u4e0d\u5fc5\u8981\u7684\u3002\nTortuga Logic\u7684Oberg\u8bf4\uff1a\u201c\u5f53\u4f60\u5728\u4e00\u5757\u7269\u7406\u7845\u7247\u4e0a\u53d8\u5f97\u66f4\u7d27\u51d1\u3001\u66f4\u591a\u7684\u6805\u6570\u65f6\uff0c\u7269\u7406\u53d1\u5c04\u91cf\u5c31\u53d8\u5f97\u66f4\u96be\u51cf\u5c11\u3002\u201d\u201c\u5149\u5b66\u662f\u975e\u5e38\u8584\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u4f60\u5728\u8fd9\u4e9b\u82af\u7247\u4e2d\u6dfb\u52a0\u5b89\u5168\u7f51\u683c\uff0c\u8fd9\u6837\u5982\u679c\u6709\u4eba\u5728\u91cc\u9762\u7167\u5c04\u5149\u7ebf\uff0c\u4f60\u5c31\u4e0d\u80fd\u771f\u6b63\u770b\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u968f\u7740\u7cfb\u7edf\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u8fd9\u4e9b\u6280\u672f\u53d8\u5f97\u8d8a\u6765\u8d8a\u56f0\u96be\u3002\u201c\u3002\n\u8fd9\u4e5f\u5ef6\u4f38\u5230\u5b58\u50a8\u5668\uff0c\u5728\u9ad8\u7ea7\u82af\u7247\u4e2d\uff0c\u5b58\u50a8\u5668\u5f80\u5f80\u5bb9\u6613\u53d7\u5230\u653b\u51fb\uff0c\u56e0\u4e3a\u5b83\u6563\u5e03\u5728\u82af\u7247\u5468\u56f4\uff0c\u4ee5\u4fbf\u51cf\u5c11\u6570\u636e\u9700\u8981\u5728\u5404\u79cd\u5904\u7406\u5143\u4ef6\u4e4b\u95f4\u4f20\u8f93\u7684\u8ddd\u79bb\u3002DRAM\u548cSRAM\u76f8\u5bf9\u5b89\u5168\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6613\u5931\u6027\u7684\uff0c\u5f53\u5b83\u4eec\u65ad\u7535\u65f6\u6570\u636e\u4f1a\u6d88\u5931\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u4e9b\u524d\u6cbf\u82af\u7247\u4e2d\u90e8\u7f72\u7684\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668\u7c7b\u578b\u4e5f\u5728\u4e0d\u65ad\u589e\u52a0\u3002\nRambus\u7684\u8d1d\u65af\u7279\u8bf4\uff1a\u201c\u6240\u6709\u7684\u5d4c\u5165\u5f0f\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668\u4e00\u822c\u90fd\u6709\u4e24\u79cd\u98ce\u683c\u3002\u201d\u60a8\u8981\u4e48\u4f7f\u7528\u57fa\u4e8e\u7535\u8377\u7684\u65b9\u6cd5\u5b58\u50a8\u6570\u636e\uff0c\u8981\u4e48\u4f7f\u7528\u57fa\u4e8e\u963b\u6297\u7684\u5b58\u50a8\u5668\u5b58\u50a8\u6570\u636e\u3002\u5145\u7535\u8981\u5bb9\u6613\u5f97\u591a\u3002\u6570\u636e\u4f4d\u4e8e\u9694\u79bb\u95e8\u4e0a\u7684\u4f4d\u5355\u5143\u4e2d\uff0c\u6709\u5404\u79cd\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u6570\u636e\u3002\u6709\u4e00\u79cd\u6280\u672f\u53eb\u505a\u88ab\u52a8\u7535\u538b\u5bf9\u6bd4\u5ea6\uff0c\u5b83\u6d89\u53ca\u5230\u4f7f\u7528\u626b\u63cf\u7535\u5b50\u663e\u5fae\u955c(SEM)\u6765\u5b9e\u9645\u611f\u77e5\u7535\u8377\u578b\u5b58\u50a8\u5668\u4e2d\u7684\u7535\u8377\u3002\u6709\u51e0\u5341\u7bc7\u5173\u4e8e\u4eba\u4eec\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528SEM\u4ece\u4f9d\u8d56\u7535\u8377\u7684\u5d4c\u5165\u5f0f\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668\u4e2d\u63d0\u53d6\u5185\u5bb9\u7684\u8bba\u6587\u3002\u5176\u4ed6\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668-MRAM\u3001RRAM\u3001\u76f8\u53d8\u5b58\u50a8\u5668-\u90fd\u662f\u76f8\u4f3c\u7684\uff0c\u56e0\u4e3a\u4f4d\u5355\u5143\u7684\u963b\u6297\u968f\u7740\u67d0\u7269\u7684\u51fd\u6570\u800c\u6539\u53d8\u3002\u4f60\u6539\u53d8\u94c1\u7535\u5b58\u50a8\u5668\u4e2d\u7684\u78c1\u81ea\u65cb\uff0c\u963b\u6297\u5c31\u4f1a\u6539\u53d8\u3002\u4f60\u5728CBRAM(\u5bfc\u7535\u6865\u63a5RAM)\u4e2d\u5f62\u6210\u4e00\u4e2a\u7535\u611f\u7535\u6865\uff0c\u963b\u6297\u5c31\u4f1a\u6539\u53d8\u3002\u5bf9\u4e8eRRAM\uff0c\u4f60\u6709\u6c27\u5316\u7269\u7a7a\u4f4d\uff0c\u8fd9\u4f1a\u6539\u53d8\u963b\u6297\u3002\u8fd9\u4e9b\u90fd\u662f\u57fa\u4e8e\u963b\u6297\u7684\u5b58\u50a8\u5668\u3002\u597d\u6d88\u606f\u662f\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u624b\u66f4\u719f\u6089\u4ee5\u5145\u7535\u4e3a\u57fa\u7840\u7684\u8bb0\u5fc6\u3002\u201c\u3002\n\u89e3\u51b3\u65b9\u6848\u7684\u5bf9\u624b\u901a\u5e38\u5206\u4e3a\u4e09\u4e2a\u9635\u8425\uff1a\u62e5\u6709\u65e0\u9650\u8d44\u6e90\u7684\u5b89\u5168\u56fd\u5bb6\u56fd\u5bb6\uff0c\u5bfb\u6c42\u7528\u52d2\u7d22\u8f6f\u4ef6\u7b49\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u6362\u53d6\u56de\u62a5\u7684\u7f6a\u72af\uff0c\u6216\u8005\u5bfb\u6c42\u6270\u4e71\u67d0\u4e8b\u7684\u5bfb\u6c42\u523a\u6fc0\u7684\u4eba\u3002\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u89c4\u5b9a\u98ce\u9669\uff0c\u800c\u98ce\u9669\u53c8\u89c4\u5b9a\u6240\u9700\u7684\u5b89\u5168\u7ea7\u522b\u3002\nFlex Logix\u9996\u5e2d\u6267\u884c\u5b98\u6770\u592b\u00b7\u6cf0\u7279(Geoff Tate)\u8868\u793a\uff1a\u201c\u4efb\u4f55\u4e8b\u60c5\u90fd\u662f\u6709\u6210\u672c\u7684\u3002\u201d\u201c\u56e0\u6b64\uff0c\u56fd\u9632\u65b9\u9762\u7684\u9700\u6c42\u4e0e\u5546\u4e1a\u793e\u533a\u7684\u9700\u6c42\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u5bf9\u7f8e\u56fd\u519b\u65b9\u6765\u8bf4\u5c24\u5176\u56f0\u96be\uff0c\u56e0\u4e3a\u6ca1\u6709\u503c\u5f97\u4fe1\u8d56\u7684\u5de5\u5382\u3002\u8fc7\u53bb\uff0c\u6240\u6709\u82af\u7247\u90fd\u662f\u7531\u7f8e\u56fd\u516c\u53f8\u8bbe\u8ba1\u548c\u5236\u9020\u7684\u3002\u73b0\u5728\uff0c\u82af\u7247\u662f\u901a\u8fc7\u6807\u51c6\u7684\u5546\u4e1a\u6676\u5706\u5382\u8fd0\u884c\u7684\uff0c\u4ed6\u4eec\u65e0\u6cd5\u77e5\u9053\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u662f\u5426\u5b58\u5728\u7279\u6d1b\u4f0a\u6728\u9a6c\u7a0b\u5e8f\uff0c\u751a\u81f3\u65e0\u6cd5\u77e5\u9053\u82af\u7247\u662f\u5426\u662f\u5047\u5192\u7684\u3002\u4f46\u662f\u6709\u5f88\u591a\u5173\u4e8e\u5904\u7406\u5668\u67b6\u6784\u7684\u95ee\u9898\uff0c\u800c\u8fd9\u5728\u5d4c\u5165\u5f0fFPGA\u4e2d\u662f\u5f88\u96be\u7a81\u7834\u7684\u3002\u6839\u636e\u5b9a\u4e49\uff0cFPGA\u662f\u4e00\u5f20\u767d\u677f\u3002\u201c\u3002\n\u53e6\u4e00\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\u7684\u4e8b\u60c5\u662f\u673a\u5668\u5b66\u4e60\uff0c\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u4e00\u628a\u53cc\u5203\u5251\uff0c\u56e0\u4e3a\u5bf9\u624b\u4e00\u5fc3\u60f3\u8981\u4f7f\u7528ML\u6765\u5371\u5bb3\u7cfb\u7edf\uff0c\u5c31\u50cf\u5b89\u5168\u4e13\u5bb6\u60f3\u8981\u4fdd\u62a4\u5b83\u4e00\u6837\u3002\u4f46\u5f53\u4e3a\u5408\u6cd5\u884c\u4e3a\u548c\u6d41\u91cf\u5efa\u7acb\u57fa\u7ebf\u65f6\uff0c\u5b83\u5728\u9632\u5fa1\u65b9\u9762\u5c24\u5176\u6709\u6548\u3002\u5bf9\u4e8e\u82af\u7247\u548cIP\u7684\u6c34\u5370\u4e5f\u662f\u5982\u6b64\u3002\nLeef\u8bf4\uff1a\u201c\u5982\u679c\u4e00\u5bb6\u516c\u53f8\u5373\u5c06\u5411\u5ba2\u6237\u53d1\u8fd0IP\u6838\uff0c\u5ba2\u6237\u53ef\u4ee5\u5728\u95e8\u53e3\u8d70\u6765\u8d70\u53bb\uff0c\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7801\u3002\u201d\u201c\u4f46IP\u4f9b\u5e94\u5546\u53ef\u4ee5\u5728\u53d1\u5e03\u4e4b\u524d\u4e3a\u8be5IP\u6dfb\u52a0\u6c34\u5370\u3002\u5728\u672a\u6765\uff0c\u8bbe\u8ba1\u8be5IP\u7684\u4e00\u65b9\u53ef\u80fd\u4f1a\u5f3a\u8feb\u8be5IP\u81ea\u6211\u8bc6\u522b\u3002\u201c\u3002\n\u8fd8\u6709\u4e00\u9879\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\uff0c\u4ee5\u589e\u5f3a\u82af\u7247\u7684\u5f39\u6027\uff0c\u4f7f\u82af\u7247\u5728\u53d7\u5230\u653b\u51fb\u540e\u80fd\u591f\u5b89\u5168\u5730\u91cd\u65b0\u542f\u52a8\u3002ARM\u5728\u8fd9\u65b9\u9762\u7684\u52aa\u529b\u5c24\u4e3a\u79ef\u6781\u3002\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5e38\u89c1\u786c\u4ef6\u5f31\u70b9\u7684\u6570\u636e\u5e93\uff0c\u7531MITRE\u5f00\u53d1\uff0cMITRE\u662f\u4e00\u4e2a\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u4e3a\u7f8e\u56fd\u653f\u5e9c\u7ba1\u7406\u8054\u90a6\u8d44\u52a9\u7684\u7814\u53d1\u4e2d\u5fc3\u3002Mitre\u4e4b\u524d\u4e00\u76f4\u4e13\u6ce8\u4e8e\u8f6f\u4ef6\u3002\u5b83\u57282\u6708\u4efd\u63a8\u51fa\u4e86\u5305\u62ec\u786c\u4ef6\u5728\u5185\u7684\u6700\u65b0\u6570\u636e\u5e93\u3002\n\u7ed3\u8bba\u5b89\u5168\u6027\u4e00\u76f4\u5305\u62ec\u7ecf\u6d4e\u98ce\u9669\u8bc4\u4f30\u90e8\u5206\uff0c\u4f46\u7531\u4e8e\u590d\u6742\u6027\u589e\u52a0\u548c\u7ec4\u4ef6\u53d8\u8584\uff0c\u4ee5\u53ca\u6570\u636e\u91cf\u548c\u5904\u7406\u6570\u636e\u4ef7\u503c\u7684\u589e\u52a0\uff0c\u98ce\u9669\u6b63\u5728\u589e\u52a0\u3002\u8fd9\u4fc3\u4f7f\u82af\u7247\u5236\u9020\u5546\u5f00\u59cb\u6bd4\u8fc7\u53bb\u66f4\u8ba4\u771f\u5730\u5bf9\u5f85\u5b89\u5168\u95ee\u9898\uff0c\u5e76\u8981\u6c42\u6240\u6709\u4e0e\u4ed6\u4eec\u6709\u4e1a\u52a1\u5f80\u6765\u7684\u4eba\u4e5f\u8fd9\u6837\u505a\u3002\n\u4ee5\u524d\uff0c\u5b89\u5168\u6027\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u529f\u80fd\u3002\u73b0\u5728\uff0c\u5b83\u4e0e\u6d89\u53ca\u4efb\u52a1\u548c\u5b89\u5168\u5173\u952e\u578b\u8bbe\u8ba1\u7684\u5e02\u573a\u4e2d\u7684\u8bbe\u8ba1\u3001\u7cfb\u7edf\u67b6\u6784\u548c\u6f5c\u5728\u8d23\u4efb\u7d27\u5bc6\u4ea4\u7ec7\u5728\u4e00\u8d77\u3002\u800c\u4e14\uff0c\u5728\u7ecf\u6d4e\u9700\u8981\u7684\u5730\u65b9\uff0c\u8be5\u884c\u4e1a\u73b0\u5728\u4f3c\u4e4e\u5df2\u7ecf\u505a\u597d\u4e86\u8ddf\u8fdb\u7684\u51c6\u5907\u3002", "note_en": "Protecting chips from cyberattacks is becoming more difficult, more expensive and much more resource-intensive, but it also is becoming increasingly necessary as some of those chips end up in mission-critical servers and in safety-critical applications such as automotive.\n Security has been on the semiconductor industry\u2019s radar for at least the past several years, despite spotty progress and inconsistent applications of security technology. However, that is starting to change for the better due to shifts in the economics behind security. While security always has been a risk versus benefit equation, for the most part it was one step removed from the semiconductor market. That\u2019s no longer the case. As systems vendors and OEMs increasingly design their own chips, instead of buying commercially developed devices and IP created by third-party developers, they effectively are creating their own ecosystems and requirements, and security is a key concern for them.\n  Macroeconomics. The value of data is rising and there are multiple entry points to that data, from the network and the software all the way down to the chip and interconnect level. System vendors are under pressure to prevent security breaches, and they are exerting pressure across their respective supply chains.\n Microeconomics. As new markets emerge, notably the edge and AI, chipmakers are scrambling to build semi-customized chips with more robust security. They are taking two primary routes to achieve this, a \u201csuperchip\u201d approach and a tile/ chiplet-based approach. Security is being architected into both of these.\n Nanoeconomics. A half century of feature scaling has reduced chips to the point where there is no simple way to protect data on a chip. Thinner insulation, better scanning tools and more ways into and out of a chip demand more complex security schemes, which need to be implemented in the architecture because they can impact power, performance and area.\n Macroeconomics The most visible of these three drivers is macroeconomics. The discovery of high-profile security vulnerabilities in speculative execution and branch prediction (Meltdown, Spectre, Foreshadow) ended up requiring costly fixes for data centers. All of the major processor vendors had to patch holes with software, and in doing so they eliminated two effective techniques for improving performance. As a result, customers that had upgraded their servers to leverage the latest processors lost much of the performance improvement. That, in turn, forced them to add more servers to process the same volume of data in the same amount of time.\n This was part of the reason system vendors opted to develop their own custom chip architectures, which could provide even bigger gains in performance and power. Many have since leveraged  Arm cores and custom accelerators (RISC-V, eFPGAs) rather than just relying on Intel, AMD, IBM or Nvidia processors. That move also puts chip security squarely under their own control, and it has provided an element of design freedom because new solutions do not need to be backward compatible with a particular  ISA.\n How much of an impact all of these changes will have remains to be seen. What is clear, however, is that the economics of hardware attacks are changing. The tools needed to hack into chips and systems of chips are no longer beyond the reach of ordinary criminals. Moreover, in the past, most attacks on hardware were less visible than software breaches because they mainly involved corporations and government entities, neither of which likes to call attention to security breaches. As computing becomes more pervasive and connected, the potential attack surfaces is widening to include many more devices, all of which will increase the visibility of hardware attacks.\n \u201cThere are four main attack surfaces, and each of those has different costs,\u201d said Serge Leef, program manager in DARPA\u2019s Microsystems Technology Office. \u201cOne is the supply chain, which is based on the size of a PUF ( physically unclonable function). The tradeoff here is size, not performance or power. The second is a  side-channel attack, where you cancel out the active gates. That can double the size of the security features, or it can cost power from generating random noise. The third is reverse engineering, where you employ logic locking or obfuscation. Because you\u2019re using additional circuits that are active, it has an impact on real estate and performance. The fourth is Trojan detection. That also costs real estate and performance.\u201d\n For mil/aero applications, hardware security is an obvious necessity. But for automotive, this is a new and critical issue that is still evolving because the electronic architectures in vehicles continue to evolve. Over the past few years the underlying strategy for assisted and ultimately autonomous driving has shifted from sending everything to the cloud and back to the vehicle, to centralized processing in a vehicle, then to distributed processing, and finally to a combination of distributed processing at the sensor level with centralized processing of structured and cleaned data. This is partly due to the fact that carmakers have come to the realization that whoever owns the electronic infrastructure owns the market, and they are not about to be supplanted by their suppliers.\u00a0Strategies for securing that data in autos have likewise seesawed to accommodate different architectures. But due to the liability implications of a breach and the potential cost for ransomware, there is a growing recognition that hardware is as much of a target as software. Approaches here tend to fall into a couple of different camps.\n \u201cThere are two main kinds of attacks,\u201d said Jason Oberg, CEO of  Tortuga Logic. \u201cOne is physical, such as shooting a laser at chip and using optical measurements and microscopes. That also includes physical side-channel attacks, like electromagnetic radiation and thermal changes. Getting physical access to a chip requires you to actually have that chip. There also are things in the digital domain that can get exploited remotely, like low-level microcode, which leverages an actual problem with the chip. We see a lot more growth in the remote attacks, particularly in the commercial domain. Those are the scariest ones, because if you find a flaw in the engineering, you don\u2019t have to tear something apart or do reverse engineering. But you also can\u2019t patch it with firmware. That makes it harder to fix.\u201d\n In addition, regardless of who designs a system, almost all of them utilize third-party IP. This becomes particularly challenging to secure in automotive, where the supply chain is enormous and systems need to react to a broad range of objects and ambient conditions.\n \u201cA lot of designs in automotive are highly configurable, and they\u2019re configurable even on the fly based on the data they\u2019re getting from sensors,\u201d said Simon Rance, vice president of marketing at  ClioSoft. \u201cThe data is going from those sensors back to processors. The sheer amount of data that\u2019s running from the vehicle to the data center and back to the vehicle, all of that has to be traced. If something goes wrong, they\u2019ve got to trace it and figure out what the root cause is. That\u2019s where there\u2019s a need to be filled.\u201d\n Tracking and security typically have been separated in the past, but that\u2019s beginning to change, particularly with  ISO 26262 requirements for traceability. \u201cWe\u2019re definitely seeing a lot more traction in that space,\u201d Rance said. \u201cThe semiconductor IP providers have had this for 10 years, but it\u2019s certainly growing with multiple uses of IP, especially with legal agreements.\u201d\n Microeconomics How many of these various approaches to security are required depends upon the market segment and the need of a particular application. Each security solution has a cost, so it comes down to the value of the data and the price elasticity for each device.\n \u201cThe big question is whether they are going after data, or whether they are they trying to bring down an entire system,\u201d said Scott Best, technical director of anti-counterfeiting products at  Rambus. \u201cThose are two different attack surfaces. The adversary is going to go after those with different sets of tools and strategies, and the countermeasures will be different to either prevent and/or delay. Eventually the adversary will win, so you\u2019re trying to delay until they get tired and move onto your competitor\u2019s system, which doesn\u2019t have as strong security. We see that a lot in the anti-counterfeiting space. Usually you\u2019re just trying to delay.\u201d\n A successful delay is based on a complex security stack coupled with best practices. With enough determination any security can be broken. But this also needs to be viewed in the context of an evolution toward edge computing. The IoT concept that everything can be sent to the cloud for processing has proved to be unworkable on many counts, including power, latency, and ultimately cost. That cost includes everything from the power and bandwidth needed to send data back and forth, the amount of memory needed to store it, and the resources necessary to process large quantities of data.\n The current solution is to do more processing much closer to the source of data, where that data can be processed and cleaned. That requires some level of intelligence to determine what is useful data and what is junk, and it requires security to be localized and well integrated into the edge device/system architecture.\n The challenge is that much of the development at the edge ranges from highly customized to semi-customized. The only ways to manage those costs are to either build a platform, utilize a LEGO-like chiplet/tile approach, or adopt the superchip approach. As a result, the security infrastructure now needs to be extended across the supply chain for whichever approach is used.\n \u201cWe\u2019ve seen efforts for tile-based heterogeneous strategies, and we\u2019ve also seen huge SoCs with a number of IP blocks that have been deactivated,\u201d said DARPA\u2019s Leef. \u201cSo you may have parts with 1 to 1,000 different blocks, where 70% are turned off. This is all done through software, or where you deactivate a number of blocks. Even though it\u2019s large, it\u2019s more cost-effective. What you\u2019re seeing is that the economic curve has changed. It\u2019s more expensive to get manufacturing ramped up.\u201d\n However, each of those blocks or chiplets needs to be secure, and so does the software, the firmware, and the interconnects that allows different blocks to communicate with each other and the outside world. The same is true for platforms developed by a single vendor, where different pieces are layered on for specific applications.\n \u201cWe\u2019ve built in security for a number of purposes,\u201d said Kris Ardis, executive director for  Maxim Integrated\u2018s Micros, Software &amp; Security Business Unit. \u201cOne is just application-level security. But we also consider the weights and the network configuration to be IP. We treat an FPGA program file just like your software, and C code is your IP. One of the reasons we put secure encryption in there is we want to be able to securely load a file. If you\u2019re a contract manufacturer and you ship your network file in raw text, someone can take that and program it on the different versions of your chip. But if it\u2019s encrypted and it has secure boot, then your weight file is just like a secure boot would be protected under normal software. This roadmap has many parts. It\u2019s designed for different networks, peripherals and applications. But we certainly see other kinds of security and robustness features being implemented, particularly for some of the higher-end industrial and medical applications.\u201d\n There is good reason for this, too. \u201cAttacks used to be confined to security labs, where they would do fault injection to bypass security schemes,\u201d said Mike Borza, principal security technologist at  Synopsys. \u201cBut as imaging technology has fallen in price, it\u2019s no longer just being done by university labs and private labs. Attacks are not just research anymore. There are actual malicious attacks. It\u2019s still somewhat of an esoteric concern for many people, but we are are seeing improvements showing up in chips.\u201d\n Nanoeconomics Nowhere is that more evident than at leading-edge nodes, where building in effective security poses perhaps the most daunting challenge. Chips developed at these nodes are the most complex, the most costly, and often the hardest to secure. In fact, there is growing concern that continued scaling is opening up new attack surfaces that never existed in the past.\n At 10nm and below, encryption schemes can be scanned without actually touching a chip. This was first identified as a possible attack surface several years ago by researchers at Technische Universit\u00e4t Berlin, who  demonstrated that by utilizing optical contactless probing on a 28nm FPGA, they were able to execute a non-invasive attack on the chip\u2019s bitstream encryption. FPGA vendors have since installed various blocking and obfuscation techniques, but a number of security experts familiar with this method said they were shocked at how easy it was to view data encryption schemes without ever touching the chip.\n At these process nodes, thinner insulation layers and thinner substrates also mean more noise across a chip. Some of that is due to electromagnetic radiation, which already is causing signal interference on-chip. It can be heard off-chip, as well.\n \u201cSince it\u2019s hardware-based, if there\u2019s a flaw in your system, once it\u2019s out in the field there\u2019s very little you can do about it,\u201d said Marc Swinnen, director of product marketing at  Ansys. \u201cWith software, you can send out a patch. If the signals can be heard through the package, you have to make a new one. It really needs to be designed in early. If you look at the chips for your credit card, every switch has to consume the same amount of power. They put in dummy switches to thwart electronic probing.\u201d\n  While the economics of scaling are still attractive enough for some companies, they are forcing chipmakers to implement security measures at these advanced nodes that are not necessary at older nodes.\n \u201cAs you get more compact, more gate count into a physical piece of silicon, the amount of physical emanations become harder to mitigate,\u201d said Tortuga Logic\u2019s Oberg. \u201cOptical is very thin. A lot of times you add secure meshes into these chips so that if someone shines a light in there, you can\u2019t actually see what\u2019s going on. Those techniques become harder as the system becomes smaller.\u201d\n This extends to memory, as well, which in advanced chips tends to be vulnerable because it is scattered around the die in order to reduce the distance that data needs to travel between various processing elements. DRAM and SRAM are relatively safe, because they are volatile and data disappears when they are powered down. But there are an increasing number of non-volatile memory types being deployed in these leading-edge chips, as well.\n \u201cAll of the embedded non-volatile memories generally come in two flavors,\u201d said Rambus\u2019 Best. \u201cEither you\u2019re storing data using a charge-based approach, or you\u2019re storing the data using an impedance-based memory. Charge is much easier. The data is sitting in a bit cell on an isolated gate, and there are all sorts of ways of extracting that data. There\u2019s a technique called passive voltage contrast, which involves using a scanning electron microscope (SEM) to actually sense what the charge is inside a charge-based memory. There are dozens of papers about people using SEMs in this way to extract content from embedded non-volatile memories that rely on charge. The other non-volatile memories \u2014  MRAM,  RRAM,  phase-change memory \u2014 are all similar in that the impedance of the bit cell changes as the function of something. You change the magnetic spin in an FRAM and the impedance changes. You form an inductive bridge in the CBRAM (conductive-bridging RAM) and the impedance changes. With  RRAM you have oxide vacancies, and that changes the impedance. Those are all impedance-based memories. The good news is that, in general, the adversary is more familiar with memory based on charge.\u201d\n Solutions Adversaries typically fall into three camps with security \u2014 nation states, which have unlimited resources, criminals looking for a payoff with something valuable such as ransomware, or thrill-seekers looking to disrupt something. The application typically dictates the risk, which in turn dictates the required level of security.\n \u201cEverything has a cost,\u201d said Geoff Tate, CEO of  Flex Logix. \u201cSo the needs in defense are different than for the commercial community. This is particularly difficult for the U.S. military because there is no trusted fab. In the past, all chips were designed and fabricated by American companies. Now, chips are run through standard commercial fabs and they have no way of knowing whether something has changed or whether there are Trojans or even whether the chips are counterfeit. But there is a lot of concern about the processor architecture, and that\u2019s a lot harder to breach with an embedded FPGA. By definition, an FPGA is a blank slate.\u201d\n Another thing that can help is machine learning, which is something of a double-edged sword because adversaries are as bent on using ML to compromise systems as security experts are to protect it. But it works particularly well on the defensive side when a baseline is established for legal behavior and traffic. The same is true for watermarking of chips and IP.\n \u201cIf a company is about to ship an IP core to a customer, a customer can walk about the door and add their own code,\u201d said Leef. \u201cBut the IP vendor could watermark that IP before they release it. In the future, the party designing in that IP could force the IP to self-identify.\u201d\n There also is work underway to build resilience into chips, which allows chips to reboot securely after being attacked. Arm has been especially active in this effort. And there is now a database of  common hardware weaknesses, which was developed by  MITRE, a not-for-profit organization that manages federally funded R&amp;D centers for the U.S. government. Mitre previously had focused on software. It introduced its latest database in February that includes hardware.\n Conclusion Security always has included an economic risk assessment component, but the risks are increasing due to increased complexity and thinner components, as well as the increase in the amount of data and the value of processed data. This has prompted chipmakers to begin taking security much more seriously than in the past, and demanding everyone who does business with them to do so, as well.\n Previously, security was largely a standalone feature. It is now tightly intertwined with design, system architecture and potential liability in markets that involve mission- and safety-critical designs. And wherever economics require it, the industry now appears ready to follow.", "posttime": "2020-06-15 05:26:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82af\u7247,\u5b89\u5168,economics", "title": "\u82af\u7247\u5b89\u5168\u7ecf\u6d4e\u5b66\u7684\u6839\u672c\u6027\u53d8\u9769", "title_en": "Fundamental Changes in Economics of Chip Security", "transed": 1, "url": "https://semiengineering.com/fundamental-changes-in-economics-of-security/", "via": "", "real_tags": ["\u82af\u7247", "\u5b89\u5168", "economics"]}, {"category": "", "categoryclass": "", "imagename": "f213cb01bd69d97c06c15655216389ee.jpg", "infoid": 1006569, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u8054\u90a6\u653f\u5e9c\u521a\u521a\u5411\u533a\u5757\u94fe\u521d\u521b\u516c\u53f8Key Retability Network Consensus(KRNC)\u6388\u4e88\u62e8\u6b3e\uff0c\u7814\u7a76\u5c06\u52a0\u5bc6\u8d27\u5e01\u878d\u5165\u7ecf\u6d4e\u7684\u53ef\u884c\u6027\u3002\nCoinDesk\u62a5\u9053\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u7f8e\u56fd\u5c06\u8f6c\u5411\u6570\u5b57\u533a\u5757\u94fe\u7f8e\u5143\u3002\u76f8\u53cd\uff0c\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u8d44\u52a9Krnc\u662f\u56e0\u4e3a\u5b83\u5bf9\u63a2\u7d22\u63d0\u9ad8\u6570\u5b57\u4ea4\u6613\u5b89\u5168\u6027\u7684\u65b0\u65b9\u6cd5\u611f\u5174\u8da3\u3002\n\u636eCoinDesk\u62a5\u9053\uff0cKrnc\u6b63\u5728\u5f00\u53d1\u7684\u534f\u8bae\u5c06\u6839\u636e\u7528\u6237\u73b0\u6709\u7684\u8d22\u5bcc\u6bd4\u4f8b\u8ba1\u91cf\u51fa\u4e00\u79cd\u65b0\u7684\u52a0\u5bc6\u8d27\u5e01\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u4ed6\u4eec\u8d2d\u4e70\u6216\u79ef\u6781\u6316\u6398\u65b0\u7684\u52a0\u5bc6\u8d27\u5e01\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u4eba\u4eec\u53d8\u5f97\u66f4\u5bcc\u6709\uff0c\u4f46\u5b83\u4f1a\u8ba9\u4ed6\u4eec\u6709\u53e6\u4e00\u79cd\u5728\u7ebf\u8f6c\u8d26\u7684\u65b9\u5f0f\u3002\nKrnc\u9996\u5e2d\u6267\u884c\u5b98Clint Ehrlich\u5bf9CoinDesk\u8868\u793a\uff1a\u201c\u57fa\u4e8e\u5de5\u4f5c\u8bc1\u660e\u539f\u5219\u8fd0\u884c\u7684\u6bd4\u7279\u5e01\u662f\u6d6a\u8d39\u7684\u3002\u201d\u201c\u8fd9\u9700\u8981\u4eba\u4eec\u6d6a\u8d39\u91d1\u94b1\u548c\u8ba1\u7b97\u80fd\u529b\u6765\u89e3\u51b3\u6beb\u65e0\u610f\u4e49\u7684\u95ee\u9898\u3002\u201d\n\u53d1\u653e\u8fd9\u7b14\u62e8\u6b3e\u7684\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a(National Science Foundation)\u7ecf\u7406\u5b89\u5a1c\u00b7\u5e03\u96f7\u8fea-\u57c3\u65af\u7279\u7ef4\u65af(Anna Brady-Esteves)\u5f88\u5feb\u6f84\u6e05\u8bf4\uff0c\u653f\u5e9c\u5bf9\u63a2\u7d22\u533a\u5757\u94fe\u548c\u5bc6\u7801\u6280\u672f\u611f\u5174\u8da3\uff0c\u4f46\u8be5\u9879\u76ee\u6ca1\u6709\u5177\u4f53\u7684\u6700\u7ec8\u76ee\u6807-\u7279\u522b\u662f\u6ca1\u6709\u4efb\u4f55\u50cf\u8c61\u5f81\u5316\u7f8e\u5143\u8fd9\u6837\u7684\u4e1c\u897f\u3002\n\u57c3\u65af\u7279\u97e6\u65af\u544a\u8bc9CoinDesk\uff1a\u201c\u6211\u4eec\u4e13\u6ce8\u4e8e\u90a3\u4e9b\u6709\u610f\u4e49\u7684\u6280\u672f\u5de5\u4f5c\u9700\u8981\u5b8c\u6210\u7684\u9879\u76ee\uff0c\u6709\u6f5c\u529b\u63a8\u52a8\u7ade\u4e89\u4f18\u52bf\u548c\u5546\u4e1a\u5f71\u54cd\u3002\u201d", "note_en": "The U.S. federal government just awarded a grant to the blockchain startup Key Retroactivity Network Consensus (KRNC) to study the feasibility of integrating cryptocurrency into the economy.\n That doesn\u2019t mean that the U.S. is going to pivot to a digital blockchain dollar,   CoinDesk  reports. Rather, the National Science Foundation funded KRNC because it\u2019s interested in exploring new ways to improve the security of digital transactions.\n  The protocol KRNC is developing would meter out a new cryptocurrency in proportion to a user\u2019s existing wealth,  CoinDesk reports, instead of requiring them to purchase or  actively mine new crypto. In other words, it wouldn\u2019t make people richer, but it would grant them an alternative means to transfer funds online.\n   \u201cBitcoin, which runs on the principle of Proof-of-Work, is wasteful,\u201d KRNC CEO Clint Ehrlich told  CoinDesk. \u201cIt requires people to waste money and computing power solving pointless problems.\u201d\n  Anna Brady-Esteves, the National Science Foundation manager who issued the grant, was quick to clarify that the government was interested in exploring blockchain and crypto technology, but that there\u2019s no specific end-goal to the project \u2014 especially not anything like  tokenizing the dollar.\n \u201cWe focus on projects where there is meaningful technical work to be done with the potential to drive competitive advantage and impact commercially,\u201d Estevez told  CoinDesk.", "posttime": "2020-06-15 04:37:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u542f\u52a8,paid,krnc", "title": "\u7f8e\u56fd\u653f\u5e9c\u521a\u521a\u4e3a\u63a2\u7d22\u6570\u5b57\u7f8e\u5143\u652f\u4ed8\u4e86\u4e00\u9879\u52a0\u5bc6\u542f\u52a8\u8ba1\u5212", "title_en": "The US Government Just Paid a Crypto Startup to Explore Digital Dollars", "transed": 1, "url": "https://futurism.com/the-byte/us-gov-paying-crypto-startup-explore-digital-dollar", "via": "", "real_tags": ["\u542f\u52a8", "paid", "krnc"]}, {"category": "", "categoryclass": "", "imagename": "6ae1ca745e5fa00c56e14f85cd268665.png", "infoid": 1006568, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u7c7b\u5974\u96b6\u5236\u7684\u53ef\u6015\u5f71\u54cd\u7ee7\u7eed\u5f71\u54cd\u7740\u793e\u4f1a\u3002\u5728\u8ba1\u7b97\u673a\u8f6f\u4ef6\u4e2d\u7ecf\u5e38\u4f7f\u7528\u672f\u8bed\u201c\u4ece\u5c5e\u201d\u662f\u5bf9\u4eba\u7c7b\u75db\u82e6\u7ecf\u5386\u7684\u4e0d\u5fc5\u8981\u5f15\u7528\u3002\u6b64\u63d0\u4ea4\u5220\u9664\u4e86\u5bf9\u672f\u8bed\u201c\u4ece\u5c5e\u201d\u7684\u6240\u6709\u53ef\u80fd\u5f15\u7528\u3002\u5b9e\u73b0\u8bf4\u660e\uff1azpool.d/Slaves\u811a\u672c\u91cd\u547d\u540d\u4e3adm-deps\uff0c\u5b83\u4f7f\u7528\u4e0e\u201cdmsetup des`\u201d\u76f8\u540c\u7684\u672f\u8bed\u3002\u5bf9`/sys/class/block/$dev/laves`\u76ee\u5f55\u7684\u5f15\u7528\u4fdd\u6301\u4e0d\u53d8\u3002\u6b64\u76ee\u5f55\u540d\u7531Linux\u5185\u6838\u51b3\u5b9a\u3002\u867d\u7136`dmsetup des`\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u9700\u8981\u63d0\u5347\u7684\u6743\u9650\uff0c\u800c`/sys/.`\u76ee\u5f55\u662f\u5168\u7403\u53ef\u8bfb\u7684\u3002\u5ba1\u9605\u4eba\uff1aBrian Behlendorf&lt\uff1bbehlendorf1@llnl.gov&gt\uff1b\u5ba1\u9605\u4eba\uff1aRyan Moeller&lt\uff1bRyan@iXsystems.com&gt\uff1b\u7b7e\u5b57\u4eba\uff1aMatthew Ahrens&lt\uff1bmahrens@delphix.com&gt\uff1b\u5ba1\u9605\u4eba\uff1aRyan Moeller&lt\uff1bRyan@iXsystems.com&gt\uff1b\u7b7e\u6536\u4eba\uff1aMatthew Ahrens&lt\uff1bmahrens@delphix.com&gt\uff1b", "note_en": "The horrible effects of human slavery continue to impact society. Thecasual use of the term &#34;slave&#34; in computer software is an unnecessaryreference to a painful human experience.This commit removes all possible references to the term &#34;slave&#34;.Implementation notes:The zpool.d/slaves script is renamed to dm-deps, which uses the sameterminology as `dmsetup deps`.References to the `/sys/class/block/$dev/slaves` directory remain. Thisdirectory name is determined by the Linux kernel. Although`dmsetup deps` provides the same information, it unfortunately requireselevated privileges, whereas the `/sys/...` directory is world-readable.Reviewed-by: Brian Behlendorf &lt;behlendorf1@llnl.gov&gt;Reviewed-by: Ryan Moeller &lt;ryan@iXsystems.com&gt;Signed-off-by: Matthew Ahrens &lt;mahrens@delphix.com&gt; Closes  openzfs#10435", "posttime": "2020-06-15 04:37:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5220\u9664,removes,\u5f15\u7528", "title": "ZFS\u5220\u9664\u5bf9Slavery\u7684\u5f15\u7528", "title_en": "ZFS Removes References to Slavery", "transed": 1, "url": "https://github.com/openzfs/zfs/pull/10435", "via": "", "real_tags": ["\u5220\u9664", "removes", "\u5f15\u7528"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006567, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fdd\u52a0\u5229\u4e9a\u5e03\u5c14\u52a0\u65af-\u7d22\u975e\u4e9a\u73af\u7403\u62a5(Sofia Globe)\u62a5\u9053\u79f0\uff0c\u4fdd\u52a0\u5229\u4e9a\u5357\u90e8\u9ed1\u6d77\u6d77\u5cb8\u7684\u4e00\u4e2a\u5efa\u7b51\u5de5\u5730\u6b63\u5728\u6316\u639814\u4e2a\u53ef\u8ffd\u6eaf\u5230\u516c\u5143\u524d5\u4e16\u7eaa\u5de6\u53f3\u7684\u4eea\u5f0f\u5751\u3002\u8fd8\u53d1\u73b0\u4e86\u81f3\u5c1110\u4e2a\u989d\u5916\u7684\u5751\u3002\u5730\u533a\u5386\u53f2\u535a\u7269\u9986\u7684\u7c73\u7f57\u65af\u62c9\u592b\u00b7\u514b\u62c9\u65af\u7eb3\u79d1\u592b(Miroslv Klasnakov)\u8868\u793a\uff0c\u5df2\u7ecf\u627e\u5230\u4e86\u4eba\u548c\u52a8\u7269\u7684\u9aa8\u5934\u3001\u7164\u4ee5\u53ca\u9676\u74f7\u7897\u548c\u53cc\u7b52\u7684\u788e\u7247\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u5927\u90e8\u5206\u9676\u5668\u90fd\u662f\u5f53\u5730\u5236\u9020\u7684\u3002\u60f3\u8981\u4e86\u89e3\u5728\u516c\u51433\u4e16\u7eaa\u8272\u96f7\u65af\u4eba\u7684\u846c\u793c\u4e2d\u53d1\u73b0\u7684\u62df\u4eba\u6cb9\u8239\uff0c\u53ef\u4ee5\u53bb\u5df4\u65af\u5df4\u8fea(Bath Buddy)\u3002", "note_en": "BURGAS, BULGARIA\u2014  The Sofia Globe reports that 14 ritual pits dated to about the fifth century B.C. are being excavated at a construction site on southern Bulgaria\u2019s Black Sea coast. At least ten additional pits have also been found. Miroslav Klasnakov of the Regional History Museum said human and animal bone, coal, and fragments of ceramic bowls and amphoras have been recovered. Most of the pottery was made locally, he added. To read about an anthropomorphic oil vessel found in a third-century A.D. Thracian burial, go to &#34; Bath Buddy.&#34;", "posttime": "2020-06-15 04:36:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eea\u5f0f,ritual", "title": "\u4fdd\u52a0\u5229\u4e9a\u53d1\u73b0\u8272\u96f7\u65af\u4eba\u4eea\u5f0f\u5751", "title_en": "Thracian Ritual Pits Discovered in Bulgaria", "transed": 1, "url": "https://www.archaeology.org/news/8795-200612-bulgaria-ritual-pits", "via": "", "real_tags": ["\u4eea\u5f0f", "ritual"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006565, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7ecf\u5e38\u8fdb\u5165\u4e00\u4e2a\u5947\u602a\u7684\u7761\u7720\u5468\u671f\uff0c\u6211\u7761\u5f97\u5f88\u665a\uff0c\u5728\u4e0a\u5348\u665a\u4e9b\u65f6\u5019\u751a\u81f3\u4e0b\u5348\u9192\u6765\u3002\n\u8fd9\u901a\u5e38\u4e0d\u662f\u56e0\u4e3a\u6211\u201c\u665a\u4e0a\u5de5\u4f5c\u5f97\u66f4\u597d\u201d--\u5b9e\u9645\u4e0a\u6211\u89c9\u5f97\u6211\u53ef\u80fd\u5728\u665a\u4e0a\u5de5\u4f5c\u5f97\u66f4\u5dee\u3002\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5982\u679c\u591c\u91cc\u592a\u665a\u4e86\uff0c\u6211\u4f1a\u4e0b\u610f\u8bc6\u5730\u66f4\u591a\u5730\u61c8\u6020\uff0c\u6216\u8005\u4e5f\u4e0d\u80fd\u96c6\u4e2d\u7cbe\u529b\u3002\n\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u6211\u201c\u66f4\u559c\u6b22\u665a\u4e0a\u9192\u7740\u201d\u3002\u662f\u7684\uff0c\u5929\u6c14\u66f4\u51c9\u723d\uff0c\u66f4\u5b89\u9759\uff0c\u4f46\u8fd9\u4e0d\u662f\u539f\u56e0\u3002\n\u4e0d\uff0c\u90a3\u662f\u56e0\u4e3a\u6211\u4e00\u76f4\u5728\u52aa\u529b\u5728\u4e00\u5929\u4e2d\u53d6\u5f97\u66f4\u591a\u7684\u6210\u5c31\u3002\n\u6bd4\u65b9\u8bf4\uff0c\u6211\u6309\u7167\u201c\u6b63\u5e38\u201d\u7684\u4f5c\u606f\u65f6\u95f4\u7761\u89c9--\u65e9\u8d77\uff0c\u5348\u591c\u524d\u7761\u89c9\uff0c\u8bf8\u5982\u6b64\u7c7b\u3002\u5982\u679c\u6211\u5bf9\u767d\u5929\u53d6\u5f97\u7684\u6210\u7ee9\u4e0d\u6ee1\u610f\uff0c\u6211\u4f1a\u901a\u8fc7\u71ac\u591c\u6765\u6324\u51fa\u4e00\u70b9\u65f6\u95f4\u3002\n\u8fd9\u4f1a\u4ea7\u751f\u8fde\u9501\u53cd\u5e94\uff0c\u8ba9\u6211\u665a\u4e00\u70b9\u9192\u6765(\u5047\u8bbe\u6211\u6ca1\u6709\u8981\u505a\u7684\u4e8b)\u3002\n\u91cd\u590d\u8fd9\u4e2a\u8db3\u591f\u591a\u7684\u6b21\u6570\uff0c\u6211\u7a81\u7136\u5728\u4e2d\u5348\u9192\u6765\uff0c\u7136\u540e\u5728\u592a\u9633\u5f00\u59cb\u5347\u8d77\u7684\u540c\u65f6\u5165\u7761\uff01\n\u6211\u6700\u7ec8\u4e0d\u5f97\u4e0d\u505a\u4e00\u4e2a\u201c\u6539\u6b63\u65e5\u201d\uff0c\u8ba9\u6211\u4fdd\u6301\u66f4\u957f\u65f6\u95f4\u7684\u6e05\u9192\uff0c\u5e76\u5728\u201c\u6b63\u5e38\u201d\u65f6\u95f4\u7761\u89c9\u3002\n\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e00\u5b9a\u662f\u5065\u5eb7\u7684\u3002\u6211\u60f3\u6211\u9700\u8981\u5b66\u4f1a\u201c\u653e\u624b\u201d\uff0c\u7b2c\u4e8c\u5929\u53d6\u5f97\u66f4\u591a\u7684\u6210\u5c31\uff1b\u6211\u53ef\u80fd\u4f1a\u66f4\u7cbe\u795e\u9971\u6ee1\uff0c\u66f4\u6e34\u671b\u5de5\u4f5c\u3002\n\u6211\u4e0d\u8fd9\u6837\u505a\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u5728\u6211\u9009\u62e9\u63a8\u8fdf\u7761\u7720\u65f6\u95f4\u8868\u7684\u665a\u4e0a\uff0c\u6211\u5904\u4e8e\u4e00\u79cd\u201c\u5fc3\u6d41\u72b6\u6001\u201d\uff0c\u800c\u65e9\u4e0a\u6211\u4e0d\u4e00\u5b9a\u4f1a\u5904\u4e8e\u8fd9\u79cd\u72b6\u6001\u3002\n\u6240\u4ee5\u6211\u731c\u201c\u7ecf\u7406\u65f6\u95f4\u8868\u201d\u4e0a\u7684\u4eba\u6bd4\u201c\u5236\u9020\u8005\u65f6\u95f4\u8868\u201d\u4e0a\u7684\u4eba\u66f4\u5bb9\u6613\u7ef4\u6301\u89c4\u5f8b\u7684\u7761\u7720\u65f6\u95f4\u8868\uff1b\u5236\u9020\u8005\u786e\u5b9e\u9700\u8981\u201c\u5fc3\u6d41\u72b6\u6001\u201d\u3002\n\u4e5f\u8bb8\u6211\u5e94\u8be5\u6362\u4e00\u79cd\u65b9\u5f0f\u8bd5\u8bd5\u3002\u5982\u679c\u6211\u60f3\u201c\u63a8\u52a8\u201d\u5b9e\u73b0\u66f4\u591a\u4e00\u70b9\uff0c\u6211\u5e94\u8be5\u8bb0\u4e0b\u6211\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u76f4\u63a5\u53bb\u7761\u89c9\uff0c\u4f46\u628a\u6211\u7684\u95f9\u949f\u8bbe\u4e3a\u63d0\u524d\u4e00\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210\uff1f\n\u53e6\u5916\uff0c\u6211\u53c2\u52a0\u805a\u4f1a\u8fdf\u5230\u4e86\uff0c\u4e0d\u8fc7\u6211\u6700\u8fd1\u6709\u4e00\u4e2a\u63a8\u7279\u8d26\u53f7\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5173\u6ce8\u3002", "note_en": "I often end up in a weird sleep cycle where I sleep at a very late time and wake up during the late morning or even during the afternoon.\n This usually isn\u2019t because I \u201cwork better at night\u201d - I actually feel like I probably work worse at night. Or rather, if it\u2019s too late in the night, I subconsciously slack off more or can\u2019t focus as well.\n And it isn\u2019t because I \u201cprefer to be awake at night\u201d. I do - it\u2019s cooler and quieter - but that\u2019s not the reason.\n No, it\u2019s because  I keep trying to push to achieve more in a day.\n Let\u2019s say I\u2019m sleeping at a \u2018normal\u2019 sleep schedule - waking up early, sleeping before midnight, whatever. If I\u2019m not happy with what I achieved during the day, I try to squeeze in  a little bit more by staying up late.\n This has a knock-on effect of making me wake up later (assuming that I don\u2019t have a commitment to attend to).\n Repeat this enough times, and suddenly  I\u2019m waking up during the middle of the day, and heading to sleep at around the same time that the sun is beginning to rise!\n I end up having to do a \u2018correction day\u2019 where I stay awake for longer and sleep at a \u2018normal\u2019 time.\n I don\u2019t think that this is necessarily healthy. I think that I need to learn to \u201clet it go\u201d and just achieve more the next day; I\u2019ll probably be more refreshed and eager to work.\n The main reason that I don\u2019t do that is because I\u2019m in a \u201cflow state\u201d during the nights when I choose to push the sleep schedule, which I wouldn\u2019t necessarily be in during the morning.\n So I\u2019d guess that it\u2019s easier for someone on a \u201c Manager\u2019s Schedule\u201d to maintain a regular sleep schedule than someone on a \u201cMaker\u2019s Schedule\u201d; the maker has a real need for a \u2018flow state\u2019.\n Maybe I should try it the other way. If I want to \u201cpush\u201d to achieve a little more, I should note what I need to do, go directly to sleep, but set my alarm for an hour early to get it done?\n P.S. I&#39;m late to the party, but I recently got  a twitter account that you can follow  here.", "posttime": "2020-06-15 04:18:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u71ac\u591c,staying,\u7761\u89c9", "title": "\u71ac\u591c\u5230\u5f88\u665a", "title_en": "Staying Up Late", "transed": 1, "url": "https://jetholt.com/micro/staying-up-late/", "via": "", "real_tags": ["\u71ac\u591c", "staying", "\u7761\u89c9"]}, {"category": "", "categoryclass": "", "imagename": "9f716b74a89e8ff61511c81008dcdc81.jpg", "infoid": 1006564, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5236\u9020\u50ac\u5316\u5242\u5c06\u5e9f\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u6709\u7528\u7684\u5de5\u4e1a\u4ea7\u54c1\u4e00\u76f4\u65e2\u6602\u8d35\u53c8\u590d\u6742\u3002\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u7684\u5de5\u7a0b\u5e08\u4eec\u5c55\u793a\u4e86\u8fd9\u5c31\u50cf\u73a9\u4e50\u9ad8\u4e00\u6837\u7b80\u5355\u3002\n\u6765\u81ea\u6089\u5c3c\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u7684\u5316\u5b66\u5de5\u7a0b\u5e08\u5df2\u7ecf\u5f00\u53d1\u51fa\u65b0\u6280\u672f\uff0c\u5e2e\u52a9\u5c06\u6709\u5bb3\u7684\u4e8c\u6c27\u5316\u78b3\u6392\u653e\u8f6c\u5316\u4e3a\u5316\u5b66\u79ef\u6728\uff0c\u4ee5\u5236\u9020\u6709\u7528\u7684\u5de5\u4e1a\u4ea7\u54c1\uff0c\u5982\u71c3\u6599\u548c\u5851\u6599\u3002\n\u5982\u679c\u5927\u89c4\u6a21\u91c7\u7528\uff0c\u5728\u4e16\u754c\u5411\u7eff\u8272\u7ecf\u6d4e\u8fc7\u6e21\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u7ed9\u4e16\u754c\u5e26\u6765\u5598\u606f\u7684\u7a7a\u95f4\u3002\n\u5728\u4eca\u5929\u53d1\u8868\u5728\u300a\u5148\u8fdb\u80fd\u6e90\u6750\u6599\u300b\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u5316\u5b66\u5de5\u7a0b\u5b66\u9662\u7684Rahman Daiyan\u535a\u58eb\u548cEmma Lovell\u535a\u58eb\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e00\u79cd\u521b\u9020\u7eb3\u7c73\u9897\u7c92\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u7eb3\u7c73\u9897\u7c92\u53ef\u4ee5\u4fc3\u8fdb\u5c06\u5e9f\u5f03\u7684\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u6709\u7528\u7684\u5de5\u4e1a\u96f6\u90e8\u4ef6\u3002\n\u7814\u7a76\u4eba\u5458\u5728\u201c\u79d1\u5b66\u201d\u6742\u5fd7\u524d\u6559\u6388\u7f57\u65af\u00b7\u963f\u8fc8\u52d2(Rose Amal)\u9886\u5bfc\u7684\u7c92\u5b50\u4e0e\u50ac\u5316\u7814\u7a76\u5b9e\u9a8c\u5ba4\u5f00\u5c55\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u8868\u660e\uff0c\u901a\u8fc7\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u706b\u7130\u55b7\u96fe\u70ed\u89e3(FSP)\u7684\u6280\u672f\u5728\u975e\u5e38\u9ad8\u7684\u6e29\u5ea6\u4e0b\u5236\u9020\u6c27\u5316\u950c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u521b\u9020\u51fa\u7eb3\u7c73\u9897\u7c92\uff0c\u4f5c\u4e3a\u50ac\u5316\u5242\u5c06\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u201c\u5408\u6210\u6c14\u201d-\u4e00\u79cd\u7528\u4e8e\u5236\u9020\u5de5\u4e1a\u4ea7\u54c1\u7684\u6c22\u6c14\u548c\u4e00\u6c27\u5316\u78b3\u7684\u6df7\u5408\u7269\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u4e0e\u76ee\u524d\u53ef\u7528\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u4fbf\u5b9c\uff0c\u66f4\u80fd\u6ee1\u8db3\u91cd\u5de5\u4e1a\u7684\u8981\u6c42\u3002\n\u6d1b\u7ef4\u5c14\u535a\u58eb\u8bf4\uff1a\u201c\u6211\u4eec\u4f7f\u7528\u71c3\u70e7\u6e29\u5ea6\u4e3a2000\u534e\u6c0f\u5ea6\u7684\u660e\u706b\u6765\u5236\u9020\u6c27\u5316\u950c\u7eb3\u7c73\u9897\u7c92\uff0c\u7136\u540e\u5229\u7528\u7535\u80fd\u5c06\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u5408\u6210\u6c14\u3002\u201d\n\u201c\u5408\u6210\u6c14\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e50\u9ad8\u7684\u5316\u5b66\u7b49\u4ef7\u7269\uff0c\u56e0\u4e3a\u4e24\u79cd\u79ef\u6728-\u6c22\u548c\u4e00\u6c27\u5316\u78b3-\u53ef\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u7528\u4e8e\u5236\u9020\u5408\u6210\u67f4\u6cb9\u3001\u7532\u9187\u3001\u9152\u7cbe\u6216\u5851\u6599\u7b49\u4e1c\u897f\uff0c\u8fd9\u4e9b\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u5de5\u4e1a\u524d\u4f53\u3002\n\u201c\u56e0\u6b64\uff0c\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u505a\u7684\u5c31\u662f\u5c06\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u8fd9\u4e9b\u524d\u4f53\uff0c\u8fd9\u4e9b\u524d\u4f53\u53ef\u4ee5\u7528\u6765\u5236\u9020\u6240\u6709\u8fd9\u4e9b\u91cd\u8981\u7684\u5de5\u4e1a\u5316\u5b66\u54c1\u3002\u201d\n\u6234\u71d5\u535a\u58eb\u8bf4\uff0c\u5728\u5de5\u4e1a\u73af\u5883\u4e2d\uff0c\u542b\u6709FSP\u4ea7\u751f\u7684\u6c27\u5316\u950c\u9897\u7c92\u7684\u7535\u89e3\u69fd\u53ef\u4ee5\u7528\u6765\u5c06\u5e9f\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u6709\u7528\u7684\u5408\u6210\u6c14\u6392\u5217\u3002\n\u201c\u4ece\u53d1\u7535\u5382\u6216\u6c34\u6ce5\u5382\u6392\u51fa\u7684\u4e8c\u6c27\u5316\u78b3\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7535\u89e3\u69fd\uff0c\u91cc\u9762\u6709\u6211\u4eec\u7684\u706b\u7130\u55b7\u6d82\u7684\u6c27\u5316\u950c\u6750\u6599\uff0c\u5448\u7535\u6781\u7684\u5f62\u5f0f\u3002\u201d\u4ed6\u8bf4\uff1a\u201c\u5f53\u6211\u4eec\u628a\u5e9f\u5f03\u7684\u4e8c\u6c27\u5316\u78b3\u6392\u5165\u65f6\uff0c\u5b83\u662f\u7528\u7535\u529b\u5904\u7406\u7684\uff0c\u7136\u540e\u4ee5CO\u548c\u6c22\u7684\u6df7\u5408\u7269\u7684\u5408\u6210\u6c14\u7684\u5f62\u5f0f\u4ece\u51fa\u53e3\u91ca\u653e\u51fa\u6765\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4eec\u6b63\u5728\u5173\u95ed\u5de5\u4e1a\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u6709\u5bb3\u6e29\u5ba4\u6c14\u4f53\u7684\u78b3\u5faa\u73af\u3002\u901a\u8fc7\u5bf9FSP\u6280\u672f\u71c3\u70e7\u7eb3\u7c73\u9897\u7c92\u7684\u65b9\u5f0f\u8fdb\u884c\u5fae\u5c0f\u8c03\u6574\uff0c\u4ed6\u4eec\u53ef\u4ee5\u786e\u5b9a\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4ea7\u751f\u7684\u5408\u6210\u6c14\u4f53\u79ef\u6728\u7684\u6700\u7ec8\u6df7\u5408\u7269\u3002\n\u6234\u71d5\u535a\u58eb\u8bf4\uff1a\u201c\u76ee\u524d\uff0c\u4eba\u4eec\u901a\u8fc7\u4f7f\u7528\u5929\u7136\u6c14\u6765\u4ea7\u751f\u5408\u6210\u6c14--\u5316\u77f3\u71c3\u6599\u4e5f\u662f\u5982\u6b64\u3002\u201d\u201c\u4f46\u6211\u4eec\u6b63\u5728\u5229\u7528\u5e9f\u5f03\u7684\u4e8c\u6c27\u5316\u78b3\uff0c\u7136\u540e\u6839\u636e\u4f60\u60f3\u5728\u54ea\u4e2a\u884c\u4e1a\u4f7f\u7528\u5b83\uff0c\u6309\u4e00\u5b9a\u7684\u6bd4\u4f8b\u5c06\u5176\u8f6c\u5316\u4e3a\u5408\u6210\u6c14\u3002\u201d\n\u4f8b\u5982\uff0c\u4e00\u6c27\u5316\u78b3\u548c\u6c22\u6c14\u4e4b\u95f4\u7684\u6bd4\u4f8b\u4e3a1\uff1a1\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5408\u6210\u6c14\u53ef\u4ee5\u7528\u4f5c\u71c3\u6599\u3002\u4f46\u6234\u71d5\u535a\u58eb\u8bf4\uff0c\u56db\u4efd\u4e00\u6c27\u5316\u78b3\u548c\u4e00\u4efd\u6c22\u7684\u6bd4\u4f8b\u9002\u5408\u5236\u9020\u5851\u6599\u3002\n\u901a\u8fc7\u9009\u62e9\u6c27\u5316\u950c\u4f5c\u4e3a\u50ac\u5316\u5242\uff0c\u7814\u7a76\u4eba\u5458\u786e\u4fdd\u4e86\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e0e\u4e4b\u524d\u5728\u8fd9\u4e00\u9886\u57df\u5c1d\u8bd5\u7684\u65b9\u6848\u76f8\u6bd4\uff0c\u4ecd\u7136\u662f\u4e00\u79cd\u66f4\u4fbf\u5b9c\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u6234\u71d5\u535a\u58eb\u8868\u793a\uff1a\u201c\u8fc7\u53bb\u7684\u5c1d\u8bd5\u90fd\u4f7f\u7528\u4e86\u94af\u7b49\u6602\u8d35\u7684\u6750\u6599\uff0c\u4f46\u8fd9\u662f\u7b2c\u4e00\u6b21\u6210\u529f\u5730\u5c06\u6fb3\u5927\u5229\u4e9a\u5f53\u5730\u5f00\u91c7\u7684\u4e00\u79cd\u975e\u5e38\u5ec9\u4ef7\u4e14\u50a8\u91cf\u4e30\u5bcc\u7684\u6750\u6599\u6210\u529f\u5730\u5e94\u7528\u4e8e\u5e9f\u7269\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u7684\u95ee\u9898\u3002\u201d\n\u6d1b\u5f17\u5c14\u535a\u58eb\u8865\u5145\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5438\u5f15\u4eba\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u4f7f\u7528FSP\u706b\u7130\u7cfb\u7edf\u6765\u521b\u9020\u548c\u63a7\u5236\u8fd9\u4e9b\u6709\u4ef7\u503c\u7684\u6750\u6599\u3002\n\u5979\u8bf4\uff1a\u201c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u5de5\u4e1a\u5316\u4f7f\u7528\uff0c\u53ef\u4ee5\u89c4\u6a21\u5316\uff0c\u5236\u9020\u6750\u6599\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u975e\u5e38\u6709\u6548\u3002\u201d\n\u201c\u6211\u4eec\u4e0d\u9700\u8981\u62c5\u5fc3\u4f7f\u7528\u975e\u5e38\u6602\u8d35\u7684\u91d1\u5c5e\u548c\u524d\u4f53\u7684\u590d\u6742\u5408\u6210\u6280\u672f-\u6211\u4eec\u53ef\u4ee5\u71c3\u70e7\u5b83\uff0c\u572810\u5206\u949f\u5185\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e9b\u9897\u7c92\u51c6\u5907\u5c31\u7eea\u3002\u901a\u8fc7\u63a7\u5236\u71c3\u70e7\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u6240\u9700\u5408\u6210\u6c14\u79ef\u6728\u7684\u6bd4\u4f8b\u3002\u201c\u3002\n\u867d\u7136\u8fd9\u4e24\u5bb6\u516c\u53f8\u5df2\u7ecf\u5efa\u9020\u4e86\u4e00\u53f0\u7535\u89e3\u69fd\uff0c\u5e76\u7528\u542b\u6709\u6c61\u67d3\u7269\u7684\u4e8c\u6c27\u5316\u78b3\u5e9f\u6c14\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u4f46\u5c06\u8fd9\u9879\u6280\u672f\u63a8\u5e7f\u5230\u53ef\u4ee5\u8f6c\u5316\u53d1\u7535\u5382\u6392\u653e\u7684\u6240\u6709\u4e8c\u6c27\u5316\u78b3\u7684\u7a0b\u5ea6\uff0c\u4ecd\u6709\u4e00\u6bb5\u8def\u8981\u8d70\u3002\n\u201c\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e8c\u6c27\u5316\u78b3\u7684\u70b9\u6e90\uff0c\u6bd4\u5982\u71c3\u7164\u53d1\u7535\u5382\u3001\u5929\u7136\u6c14\u53d1\u7535\u5382\uff0c\u751a\u81f3\u662f\u5929\u7136\u6c14\u77ff\u5c71\uff0c\u5728\u90a3\u91cc\u4f60\u53ef\u4ee5\u91ca\u653e\u51fa\u5927\u91cf\u7684\u7eaf\u4e8c\u6c27\u5316\u78b3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e9b\u5de5\u5382\u7684\u540e\u7aef\u57fa\u672c\u4e0a\u6539\u9020\u8fd9\u9879\u6280\u672f\u3002\u201d\u7136\u540e\u4f60\u53ef\u4ee5\u6355\u83b7\u4ea7\u751f\u7684\u4e8c\u6c27\u5316\u78b3\uff0c\u5e76\u5c06\u5176\u8f6c\u5316\u6210\u5bf9\u5de5\u4e1a\u6709\u5de8\u5927\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u201c\u6d1b\u7ef4\u5c14\u535a\u58eb\u8bf4\u3002\n\u8be5\u5c0f\u7ec4\u7684\u4e0b\u4e00\u4e2a\u9879\u76ee\u5c06\u662f\u5728\u70df\u6c14\u73af\u5883\u4e2d\u6d4b\u8bd5\u4ed6\u4eec\u7684\u7eb3\u7c73\u6750\u6599\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u5bf9\u6076\u52a3\u7684\u6761\u4ef6\u548c\u5de5\u4e1a\u5e9f\u6c14\u4e2d\u53d1\u73b0\u7684\u5176\u4ed6\u5316\u5b66\u7269\u8d28\u5177\u6709\u8010\u53d7\u6027\u3002", "note_en": "Making catalysts to convert waste carbon dioxide into useful industrial products has been expensive and complicated \u2013 until now. UNSW engineers show it\u2019s as easy as playing with Lego.\n   Chemical engineers from UNSW Sydney have developed new technology that helps convert harmful carbon dioxide emissions into chemical building blocks to make useful industrial products like fuel and plastics.\n And if adopted on a large scale, the process could give the world breathing space as it transitions towards a green economy.\n In a paper published today in the journal  Advanced Energy Materials, Dr Rahman Daiyan and Dr Emma Lovell from\u00a0UNSW\u2019s School of Chemical Engineering detail a way of creating nanoparticles that promote conversion of waste carbon dioxide into useful industrial components.\n  The researchers, who carried out their work in the  Particles and Catalysis Research Laboratory led by\u00a0Scientia Professor Rose Amal, show that by making zinc oxide at very high temperatures using a technique called flame spray pyrolysis (FSP), they can create nanoparticles which act as the catalyst for turning carbon dioxide into \u2018syngas\u2019 \u2013 a mix of hydrogen and carbon monoxide used in the manufacture of industrial products. The researchers say this method is cheaper and more scalable to the requirements of heavy industry than what is available today.\n \u201cWe used an open flame, which burns at 2000 degrees, to create nanoparticles of zinc oxide that can then be used to convert CO 2, using electricity, into syngas,\u201d says Dr Lovell.\n \u201cSyngas is often considered the chemical equivalent of Lego because the two building blocks \u2013 hydrogen and carbon monoxide \u2013 can be used in different ratios to make things like synthetic diesel, methanol, alcohol or plastics, which are very important industrial precursors.\n \u201cSo essentially what we\u2019re doing is converting CO 2 into these precursors that can be used to make all these vital industrial chemicals.\u201d\n  In an industrial setting, an electrolyser containing the FSP-produced zinc oxide particles could be used to convert the waste CO 2 into useful permutations of syngas, says Dr Daiyan.\n \u201cWaste CO 2 from say, a power plant or cement factory, can be passed through this electrolyser, and inside we have our flame-sprayed zinc oxide material in the form of an electrode. When we pass the waste CO 2 in, it is processed using electricity and is released from an outlet as syngas in a mix of CO and hydrogen,\u201d he says.\n The researchers say in effect, they are closing the carbon loop in industrial processes that create harmful greenhouse gases. And by making small adjustments to the way the nanoparticles are burned by the FSP technique, they can determine the eventual mix of the syngas building blocks produced by the carbon dioxide conversion.\n \u201cAt the moment you generate syngas by using natural gas \u2013 so from fossil fuels,\u201d Dr Daiyan says. \u201cBut we\u2019re using waste carbon dioxide and then converting it to syngas in a ratio depending on which industry you want to use it in.\u201d\n For example, a one to one ratio between the carbon monoxide and hydrogen lends itself to syngas that can be used as fuel. But a ratio of four parts carbon monoxide and one part hydrogen is suitable for the creation of plastics, Dr Daiyan says.\n  In choosing zinc oxide as their catalyst, the researchers have ensured that their solution has remained a cheaper alternative to what has been previously attempted in this space.\n \u201cPast attempts have used expensive materials such as palladium, but this is the first instance where a very cheap and abundant material, mined locally in Australia, has been successfully applied to the problem of waste carbon dioxide conversion,\u201d Dr Daiyan says.\n Dr Lovell adds that what also makes this method appealing is using the FSP flame system to create and control these valuable materials.\n \u201cIt means it can be used industrially, it can be scaled, it\u2019s super quick to make the materials and very effective,\u201d she says.\n \u201cWe don\u2019t need to worry about complicated synthesis techniques that use really expensive metals and precursors \u2013 we can burn it and in 10 minutes have these particles ready to go. And by controlling how we burn it, we can control those ratios of desired syngas building blocks.\u201d\n  While the duo have already built an electrolyser that has been tested with waste CO 2 gas that contains contaminants, scaling the technology up to the point where it could convert all of the waste carbon dioxide emitted by a power plant is still a way down the track.\n \u201cThe idea is that we can take a point source of CO 2, such as a coal fired power plant, a gas power plant, or even a natural gas mine where you liberate a huge amount of pure CO 2 and we can essentially retrofit this technology at the back end of these plants. Then you could capture that produced CO 2 and convert it into something that is hugely valuable to industry,\u201d says Dr Lovell.\n The group\u2019s next project will be to test their nanomaterials in a flue gas setting to ensure they are tolerant to the harsh conditions and other chemicals found in industrial waste gas.", "posttime": "2020-06-15 04:01:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6709\u7528,find,\u4e8c\u6c27\u5316\u78b3", "title": "\u5de5\u7a0b\u5e08\u4eec\u627e\u5230\u4e86\u5c06\u5e9f\u7269\u4e8c\u6c27\u5316\u78b3\u8f6c\u5316\u4e3a\u6709\u7528\u6750\u6599\u7684\u5de7\u5999\u65b9\u6cd5", "title_en": "Engineers find neat way to turn waste carbon dioxide into useful material", "transed": 1, "url": "https://newsroom.unsw.edu.au/news/science-tech/engineers-find-neat-way-turn-waste-carbon-dioxide-useful-material", "via": "", "real_tags": ["\u6709\u7528", "find", "\u4e8c\u6c27\u5316\u78b3"]}, {"category": "", "categoryclass": "", "imagename": "cff84eee244b6503686e11d17f700644.jpg", "infoid": 1006563, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136\u73b0\u4ee3\u7f51\u7edc\u6280\u672f\u6b63\u5728\u79ef\u6781\u5f25\u5408\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u7684\u5dee\u8ddd\uff0c\u4f46Google Chrome\u548cMicrosoft Edge\u7b49\u7f51\u7edc\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\u5e0c\u671bWindows 10\u7528\u6237\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u8fdb\u6b65\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f(PWAS)\u76f4\u63a5\u4ece\u4efb\u52a1\u680f\u6267\u884c\u5e38\u89c1\u4efb\u52a1\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5feb\u6377\u65b9\u5f0f\u3002Google Chrome&amp\uff1bMicrosoft Edge\u6b63\u5728\u5f00\u53d1App\u5feb\u6377\u65b9\u5f0f\uff0c\u8ba9\u4f60\u53ef\u4ee5\u76f4\u63a5\u4eceWindows10\u4efb\u52a1\u680f\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3001\u64b0\u5199\u63a8\u6587\u7b49\u3002\n\u8c37\u6b4cChrome85\u6b63\u5728\u63a8\u51faApp\u5feb\u6377\u65b9\u5f0f\uff0c\u4f7f\u6e10\u8fdb\u5f0fWeb\u5e94\u7528\u4e0eWindows10\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u672c\u673a\u64cd\u4f5c\u7cfb\u7edf\u7ec4\u4ef6(\u5982\u4efb\u52a1\u680f)\u5b8c\u5168\u517c\u5bb9\u3002\u8fd9\u6837\uff0c\u7528\u6237\u5c06\u80fd\u591f\u5feb\u901f\u6267\u884c\u5e38\u89c1\u4efb\u52a1\uff0c\u5982\u76f4\u63a5\u4eceWindows10\u4efb\u52a1\u680f\u64b0\u5199\u7535\u5b50\u90ae\u4ef6\u6216\u63a8\u6587\u3002\nGoogle Chrome\u548cMicrosoft Edge\u652f\u6301App\u5feb\u6377\u65b9\u5f0f\u7684\u53ef\u80fd\u6027\u51e0\u4e4e\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\uff0c\u6839\u636e\u7279\u5b9aWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\uff0cWindows10\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u4ece\u4efb\u52a1\u680f\u6267\u884c\u5e38\u89c1\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u76f8\u5e94\u7684\u6e10\u8fdb\u5f0fWeb\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u76f4\u63a5\u4eceWindows10\u4efb\u52a1\u680f\u4e00\u952e\u8bbf\u95ee\u7ecf\u5e38\u8054\u7cfb\u7684WhatsApp\u7ec4\u6216YouTube\u641c\u7d22\u680f\uff0c\u6211\u4eec\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\n\u56de\u60f3\u4e00\u4e0b\uff0cWindows 10 2018\u5e7410\u6708\u66f4\u65b0\u5141\u8bb8\u4f7f\u7528Microsoft Edge\u8bbf\u95eeWindows\u4efb\u52a1\u680f\u6216\u5f00\u59cb\u83dc\u5355\u4e0a\u8df3\u8f6c\u5217\u8868\u4e2d\u7684\u9876\u7ea7\u7ad9\u70b9\u3002\u4e0d\u4ec5\u662fWindows\uff0cMac\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0eMacOS\u5e95\u5ea7\u4e0a\u7684Chrome\u56fe\u6807\u4ea4\u4e92\uff0c\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u7a97\u53e3\u3002\u540c\u6837\u7684\u7406\u5ff5\u4e5f\u9002\u7528\u4e8e\u4f7f\u7528\u57fa\u4e8eChromium\u5f15\u64ce\u7684Web\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u5feb\u6377\u65b9\u5f0f\u3002\n\u201c\u5141\u8bb8Web\u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u5e38\u89c1\u4efb\u52a1\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u8fd9\u4e9b\u901a\u5e38\u4f1a\u6dfb\u52a0\u5230\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u5668\u56fe\u6807(\u5bf9\u4e8e\u6e10\u8fdb\u5f0fWeb\u5e94\u7528\u7a0b\u5e8f)\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u5feb\u901f\u8fd0\u884c\u5173\u952e\u4efb\u52a1\u3002\u5c06\u8fd9\u4e9b\u529f\u80fd\u6dfb\u52a0\u5230Web\u5e73\u53f0\u4e0a\uff0c\u53ef\u63d0\u4f9b\u4e0e\u8bb8\u591a\u5e73\u53f0\u4e0a\u7684\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u76f8\u540c\u7684\u529f\u80fd\u3002\u201c\u3002\n\u5feb\u901f\u542f\u52a8\u680f\u4e2d\u7684Windows 10\u539f\u751f\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5e38\u7528\u6216\u9891\u7e41\u6267\u884c\u7684\u4efb\u52a1\u7684\u5feb\u6377\u83dc\u5355\u3002\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e\u5355\u51fb\u5e94\u7528\u7a0b\u5e8f\u7684\u5feb\u901f\u542f\u52a8\u680f\u56fe\u6807\u6765\u8c03\u7528\u6b64\u83dc\u5355\u3002\n\u4f5c\u4e3aChromium\u4e2dPWA\u5b89\u88c5\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4f1a\u5728\u684c\u9762\u3001\u5feb\u901f\u542f\u52a8\u680f\u548c\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u5668\u7b49\u4f4d\u7f6e\u6dfb\u52a0\u56fe\u6807\uff0c\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u542f\u52a8PWA\u3002\u4f46\u76ee\u524d\uff0cChromium\u4e0d\u5141\u8bb8\u7528\u6237\u901a\u8fc7Windows10\u4efb\u52a1\u680f\u5728PWA\u5185\u542f\u52a8\u5173\u952e\u4efb\u52a1\u3002\u8fd9\u6b63\u662f\u57fa\u4e8eChromium\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u73b0\u5728\u6b63\u8bd5\u56fe\u6539\u53d8\u7684\u3002\n\u6b64\u529f\u80fd\u5c06\u4f7fWeb\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5728Chromium\u4e2d\u6dfb\u52a0\u5bf9Web\u5e94\u7528\u7a0b\u5e8f\u6e05\u5355\u4e2d\u5b9a\u4e49\u7684\u5feb\u6377\u65b9\u5f0f\u7684\u652f\u6301\u3002\u56e0\u6b64\uff0cChromium PWAS\u53ef\u4ee5\u4e3a\u5176\u5feb\u901f\u542f\u52a8\u680f\u56fe\u6807\u63d0\u4f9bApp\u5feb\u6377\u65b9\u5f0f\uff0c\u5c31\u50cf\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u3002\nMicrosoft Edge\u4e0a\u5f53\u524d\u6b63\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u5feb\u6377\u65b9\u5f0f\u529f\u80fd\u3002\u540c\u65f6\uff0c\u8c37\u6b4cChrome85\u4e5f\u5728Dev\u9891\u9053\u3002", "note_en": "While modern web technologies are  actively bridging the native app gap, web browser applications like Google Chrome and Microsoft Edge want Windows 10 users to rely heavily on  Progressive Web Apps (PWAs) to perform common tasks directly from the taskbar, courtesy of  App shortcuts.  Google Chrome &amp;  Microsoft Edge are working on App Shortcuts that allow you to send emails, compose tweets, etc, directly from Windows 10 taskbar.\n   Google Chrome 85 is rolling out App shortcuts to make progressive web apps fully compatible with native OS components such as taskbar in the Windows 10 operating system. This way, users will be able to quickly perform common tasks like composing an email or tweets directly from  Windows 10 taskbar.\n The possibilities of App shortcuts support in Google Chrome and Microsoft Edge are practically endless, and depending on the functionalities of particular web applications, Windows 10 users can choose to perform common tasks directly from the taskbar. For example, we won\u2019t be surprised if respective progressive web apps enable one-click access to frequently contacted WhatsApp groups or YouTube search bar directly from Windows 10 taskbar in the coming days.\n  To recall, Windows 10 October 2018 Update enabled access to top sites in the Jump List on the Windows taskbar or Start menu using Microsoft Edge. Not only Windows but Mac users can also create a new web browser window directly by interacting with the Chrome icon on the macOS dock. The same philosophy will apply to App shortcuts using web browser applications based on the Chromium engine.\n  \u201cLets a web application register shortcuts for common tasks. These would typically be added to the app launcher icon (for a progressive web app) enabling the user to quickly run key tasks. Adding these to the web platform provides an equivalent capability to native apps on many platforms.\u201d\n Windows 10 native app icons in the quick launch bar support a shortcut menu for commonly or frequently performed tasks in the app. This menu can be invoked by right-clicking the app\u2019s quick launch bar icon.\n As part of the PWA installation process in Chromium, icons are added in several locations like the desktop, quick launch bar, and app launcher to help users quickly launch the PWA. But right now, Chromium does not allow users to start a key task within a PWA through the Windows 10 taskbar. This is exactly what Chromium-based web browsers are now trying to change.\n This feature will enable web developers to add support in Chromium for shortcuts defined in a Web App Manifest. As a result, Chromium PWAs can offer App shortcuts for their quick launch bar icon much like native apps.\n  App shortcuts feature is currently in development on Microsoft Edge. Meanwhile, Google Chrome 85 is in the Dev channel.", "posttime": "2020-06-15 03:45:17", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,windows,windows-10,google,chrome", "title": "\u8c37\u6b4cChrome 85\u5141\u8bb8\u7528\u6237\u4eceWindows 10\u4efb\u52a1\u680f\u64b0\u5199\u63a8\u6587", "title_en": " Google Chrome 85 To Allow Users To Compose Tweets From Windows 10 Taskbar", "transed": 1, "url": "https://news.thewindowsclub.com/pwas-to-let-you-send-emails-compose-tweets-directly-from-windows-10-taskbar-courtesy-of-app-shortcuts-100745/", "via": "", "real_tags": ["\u8c37\u6b4c", "windows", "google", "chrome"]}, {"category": "", "categoryclass": "", "imagename": "005b0297772ddaa7e3f74d3af5846d7b.png", "infoid": 1006562, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5ba3\u5e03\u5168\u56fd\u5404\u5730\u7684\u56fe\u4e66\u9986\u3001\u5b66\u6821\u548c\u5927\u5b66\u56e0\u65b0\u51a0\u80ba\u708e\u5168\u7403\u75ab\u60c5\u800c\u5173\u95ed\u540e\u7684\u51e0\u5929\u5185\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u4e34\u65f6\u56fd\u5bb6\u5e94\u6025\u56fe\u4e66\u9986\uff0c\u5728\u5173\u95ed\u671f\u95f4\u63d0\u4f9b\u56fe\u4e66\uff0c\u4ee5\u652f\u6301\u7d27\u6025\u8fdc\u7a0b\u6559\u5b66\u3001\u7814\u7a76\u6d3b\u52a8\u3001\u81ea\u4e3b\u5956\u5b66\u91d1\u548c\u667a\u529b\u6fc0\u53d1\u3002\n\u6211\u4eec\u4ece\u56fe\u4e66\u9986\u5458\u3001\u4f5c\u5bb6\u3001\u5bb6\u957f\u3001\u8001\u5e08\u548c\u5b66\u751f\u90a3\u91cc\u542c\u5230\u4e86\u6570\u4ee5\u767e\u8ba1\u7684\u6545\u4e8b\uff0c\u8bb2\u8ff0\u4e86NEL\u5982\u4f55\u5728\u8fd9\u573a\u5371\u673a\u4e2d\u586b\u8865\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u7a7a\u767d\u3002\n\u4f8b\u5982\uff0c\u6765\u81ea\u65b0\u6cfd\u897f\u5dde\u7684\u56fe\u4e66\u7ba1\u7406\u5458\u672c\u00b7S(Ben S)\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4f7f\u7528NEL\u201c\u4e3a\u6211\u5de5\u4f5c\u7684\u5b66\u672f\u533b\u7597\u4e2d\u5fc3\u7684\u4e00\u7ebf\u533b\u52a1\u4eba\u5458\u627e\u5230\u4e86\u6240\u9700\u7684\u57fa\u672c\u751f\u547d\u7ef4\u6301\u624b\u518c\u201d\u3002\u7531\u4e8e\u65b0\u51a0\u80ba\u708e\u7684\u539f\u56e0\uff0c\u6211\u4eec\u7684\u5b9e\u7269\u6536\u85cf\u88ab\u5173\u95ed\u4e86\uff0cNEL\u8ba9\u6211\u4ecd\u7136\u53ef\u4ee5\u5411\u6211\u4eec\u533b\u9662\u7684\u987e\u5ba2\u63d0\u4f9b\u6240\u9700\u7684\u5065\u5eb7\u4fe1\u606f\u6750\u6599\u3002\u201c\u3002\u6211\u4eec\u4e3a\u80fd\u5e2e\u52a9\u4e00\u7ebf\u5de5\u4f5c\u4eba\u5458\u800c\u611f\u5230\u81ea\u8c6a\u3002\n\u4eca\u5929\u6211\u4eec\u5ba3\u5e03\uff0c\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\u5c06\u57286\u670816\u65e5\u5173\u95ed\uff0c\u800c\u4e0d\u662f6\u670830\u65e5\uff0c\u56de\u5f52\u4f20\u7edf\u7684\u53d7\u63a7\u6570\u5b57\u501f\u9605\u3002\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u7edd\u5927\u591a\u6570\u4eba\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u4f7f\u7528\u6570\u5b57\u5316\u56fe\u4e66\u7684\u65f6\u95f4\u5f88\u77ed\u3002\u5373\u4f7fNEL\u5173\u95ed\u4e86\uff0c\u6211\u4eec\u4e5f\u80fd\u591f\u901a\u8fc7\u53d7\u63a7\u7684\u6570\u5b57\u501f\u9605\u4e3a\u5927\u591a\u6570\u987e\u5ba2\u63d0\u4f9b\u670d\u52a1\uff0c\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8e\u975e\u8425\u5229\u6027\u7684HathiTrust\u6570\u5b57\u56fe\u4e66\u9986\u7684\u51fa\u8272\u5de5\u4f5c\u3002HathiTrust\u7684\u65b0\u7d27\u6025\u4e34\u65f6\u63a5\u5165\u670d\u52a1\u5177\u6709\u6211\u4eec\u8ba1\u5212\u9075\u5faa\u7684\u77ed\u671f\u63a5\u5165\u6a21\u5f0f\u3002\n\u6211\u4eec\u63d0\u524d\u4e86\u65e5\u7a0b\uff0c\u56e0\u4e3a\u4e0a\u5468\u4e00\uff0c\u56db\u5bb6\u5546\u4e1a\u51fa\u7248\u5546\u9009\u62e9\u5728\u4e00\u573a\u5168\u7403\u5927\u6d41\u884c\u671f\u95f4\u8d77\u8bc9\u4e92\u8054\u7f51\u6863\u6848\u9986\u3002\u201c\u7136\u800c\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u4e34\u65f6\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\u7684\u3002\u201d\u8d77\u8bc9\u4e66\u62a8\u51fb\u4e86\u4efb\u4f55\u62e5\u6709\u548c\u501f\u9605\u6570\u5b57\u56fe\u4e66\u7684\u56fe\u4e66\u9986\u7684\u6982\u5ff5\uff0c\u6311\u6218\u4e86\u6570\u5b57\u4e16\u754c\u4e2d\u56fe\u4e66\u9986\u662f\u4ec0\u4e48\u7684\u60f3\u6cd5\u3002\u8fd9\u8d77\u8bc9\u8bbc\u4e0e\u4e00\u4e9b\u5b66\u672f\u51fa\u7248\u5546\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\uff0c\u4ed6\u4eec\u6700\u521d\u8868\u8fbe\u4e86\u5bf9NEL\u7684\u62c5\u5fe7\uff0c\u4f46\u6700\u7ec8\u51b3\u5b9a\u4e0e\u6211\u4eec\u5408\u4f5c\uff0c\u4e3a\u90a3\u4e9b\u4e0e\u7269\u7406\u5b66\u6821\u548c\u56fe\u4e66\u9986\u9694\u7edd\u7684\u4eba\u63d0\u4f9b\u8bbf\u95ee\u6743\u9650\u3002\u6211\u4eec\u5e0c\u671b\u7c7b\u4f3c\u7684\u5408\u4f5c\u5728\u8fd9\u91cc\u662f\u53ef\u80fd\u7684\uff0c\u51fa\u7248\u5546\u53d6\u6d88\u4e86\u4ed6\u4eec\u4ee3\u4ef7\u9ad8\u6602\u7684\u653b\u51fb\u3002\n\u53d7\u63a7\u6570\u5b57\u501f\u9605\u662f\u6307\u4e5d\u5e74\u6765\uff0c\u6709\u591a\u5c11\u56fe\u4e66\u9986\u4e00\u76f4\u5728\u63d0\u4f9b\u83b7\u53d6\u6570\u5b57\u5316\u56fe\u4e66\u7684\u9014\u5f84\u3002\u53d7\u63a7\u6570\u5b57\u501f\u9605\u662f\u7531\u7248\u6743\u4e13\u5bb6\u5f00\u53d1\u7684\u6cd5\u5f8b\u6846\u67b6\uff0c\u4e00\u6b21\u53ea\u6709\u4e00\u540d\u8bfb\u8005\u53ef\u4ee5\u9605\u8bfb\u5408\u6cd5\u62e5\u6709\u7684\u56fe\u4e66\u9986\u56fe\u4e66\u7684\u6570\u5b57\u5316\u526f\u672c\u3002\u6570\u5b57\u5316\u56fe\u4e66\u53d7\u5230\u51fa\u7248\u5546\u5728\u81ea\u5df1\u7f51\u7ad9\u4e0a\u7528\u4e8e\u6570\u5b57\u4ea7\u54c1\u7684\u76f8\u540c\u6570\u5b57\u4fdd\u62a4\u3002\u81ea2011\u5e74\u4ee5\u6765\uff0c\u5305\u62ec\u4e92\u8054\u7f51\u6863\u6848\u9986\u5728\u5185\u7684\u8bb8\u591a\u56fe\u4e66\u9986\u90fd\u91c7\u7528\u4e86\u8fd9\u4e00\u7cfb\u7edf\uff0c\u4ee5\u5728\u65e5\u76ca\u6570\u5b57\u5316\u7684\u4e16\u754c\u4e2d\u5229\u7528\u4ed6\u4eec\u5bf9\u65e7\u7eb8\u8d28\u56fe\u4e66\u7684\u6295\u8d44\u3002\n\u6211\u4eec\u73b0\u5728\u90fd\u88ab\u4e92\u8054\u7f51\u675f\u7f1a\u7740\uff0c\u5145\u65a5\u7740\u9519\u8bef\u4fe1\u606f\u548c\u865a\u5047\u4fe1\u606f--\u4e3a\u4e86\u4e0e\u8fd9\u4e9b\u4f5c\u6597\u4e89\uff0c\u6211\u4eec\u90fd\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9700\u8981\u83b7\u5f97\u4e66\u7c4d\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u56fe\u4e66\u9986\u3001\u4f5c\u5bb6\u3001\u4e66\u5546\u548c\u51fa\u7248\u5546\u4e4b\u95f4\u7684\u5408\u4f5c\u3002", "note_en": "Within a few days of the announcement that libraries, schools and colleges across the nation would be closing due to the COVID-19 global pandemic, we launched the temporary  National Emergency Library to provide books to support emergency remote teaching, research activities, independent scholarship, and intellectual stimulation during the closures.\n We have heard hundreds of stories from librarians, authors, parents, teachers, and students about how the NEL has filled an important gap during this crisis.\n Ben S., a librarian from New Jersey, for example, told us that he used the NEL \u201cto find basic life support manuals needed by frontline medical workers in the academic medical center I work at. Our physical collection was closed due to COVID-19 and the NEL allowed me to still make available needed health informational materials to our hospital patrons.\u201d We are proud to aid frontline workers.\n Today we are announcing the National Emergency Library will close on June 16th, rather than June 30th, returning to traditional controlled digital lending. We have learned that the vast majority of  people use digitized books on the Internet Archive for a very short time. Even with the closure of the NEL, we will be able to serve most patrons through controlled digital lending, in part because of the good work of the non-profit HathiTrust Digital Library. HathiTrust\u2019s new  Emergency Temporary Access Service features a short-term access model that we plan to follow.\n We moved up our schedule because, last Monday, four commercial publishers chose to sue Internet Archive during a global pandemic.\u00a0 However, this lawsuit is not just about the temporary National Emergency Library. The complaint attacks the concept of any library owning and lending digital books, challenging the very idea of what a library is in the digital world. This lawsuit stands in contrast to some academic publishers who initially expressed concerns about the NEL, but ultimately decided to  work with us to provide access to people cut off from their physical schools and libraries. We hope that similar cooperation is possible here, and the publishers call off their costly assault.\n Controlled digital lending is how many libraries have been providing access to digitized books for nine years.\u00a0 Controlled digital lending is a legal framework, developed by copyright experts, where one reader at a time can read a digitized copy of a legally owned library book. The digitized book is protected by the same digital protections that publishers use for the digital offerings on their own sites. Many libraries, including the Internet Archive, have adopted this system since 2011 to leverage their investments in older print books in an increasingly digital world.\n We are now all Internet-bound and flooded with misinformation and disinformation\u2014to fight these we all need access to books more than ever. To get there we need collaboration between libraries, authors, booksellers, and publishers.", "posttime": "2020-06-15 03:44:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fe\u4e66\u9986,national", "title": "\u56fd\u5bb6\u4e34\u65f6\u7d27\u6025\u56fe\u4e66\u9986\u5c06\u63d0\u524d2\u5468\u5173\u95ed", "title_en": "Temporary National Emergency Library to close 2 weeks early", "transed": 1, "url": "https://blog.archive.org/2020/06/10/temporary-national-emergency-library-to-close-2-weeks-early-returning-to-traditional-controlled-digital-lending/", "via": "", "real_tags": ["\u56fe\u4e66\u9986", "national"]}, {"category": "", "categoryclass": "", "imagename": "6abe98fc4fb5b6b504f0f91926c603e5.png", "infoid": 1006561, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u4eec\u4f17\u7b79\u4e86\u4e00\u7b1410000\u7f8e\u5143\u7684\u8d4f\u91d1\uff0c\u4ee5\u6bd4\u7279\u5e01\u652f\u4ed8\uff0c\u8d2d\u4e70\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u5e2e\u52a9\u4eba\u4eec\u5c06\u4ed6\u4eec\u7684\u8ffd\u968f\u8005\u4ece\u63a8\u7279\u8f93\u51fa\u5230Substack\u3001Ghost\u3001\u5f53\u5730\u4eba\u6216\u5176\u4ed6\u7528\u6237\u63a7\u5236\u7684\u5e73\u53f0\u4e0a\u3002\n\u56e0\u4e3a\u8fd9\u662f\u8bb8\u591a\u4eba\u60f3\u8981\u7684\uff0c\u6240\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u597d\u65b9\u6848\u53ef\u4ee5\u6210\u4e3a\u4e00\u79cd\u4ea7\u54c1\uff0c\u751a\u81f3\u662f\u4e00\u5bb6\u521d\u521b\u516c\u53f8\u3002\u4f60\u9996\u5148\u8981\u8ba9\u5b83\u5bf9Twitter\u6709\u5f71\u54cd\u529b\u7684\u4eba\u8d77\u5230\u5f88\u597d\u7684\u4f5c\u7528\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u767d\u624b\u5957\u670d\u52a1\uff0c\u4e3a\u524d100\u4e2a\u5de6\u53f3\u7684\u8d26\u6237\u63d0\u4f9b\u670d\u52a1\u3002\u7136\u540e\u8ba9\u5b83\u5728\u5176\u4ed6\u793e\u4ea4\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002\u50cfBuffer\u8fd9\u6837\u7684\u516c\u53f8\u505a\u5f97\u975e\u5e38\u597d(2000\u4e07\u7f8e\u5143+ARR\uff01)\u3002\u7c7b\u4f3c\u7684\u770b\u4f3c\u7b80\u5355\u7684\u4ea7\u54c1\u586b\u8865\u4e86\u793e\u4ea4\u7f51\u7edc\u9886\u57df\u7684\u4e00\u4e2a\u6f0f\u6d1e\u3002\nTwitter\u662f\u4e00\u4e2a\u5b66\u4e60\u548c\u5bfb\u627e\u5fd7\u540c\u9053\u5408\u7684\u4eba\u7684\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5e73\u53f0\u3002\u6211\u5f88\u94a6\u4f69\u6770\u514b\u00b7\u591a\u5c14\u897f\u548c\u4ed6\u7684\u56e2\u961f\u6240\u53d6\u5f97\u7684\u6210\u5c31\u3002\n\u7136\u800c\uff0c\u5bf9\u4e8e\u62e5\u6709\u5927\u91cf\u8ffd\u968f\u8005\u7684\u7528\u6237\u6765\u8bf4\uff0c\u5b83\u6709\u51e0\u4e2a\u7f3a\u70b9\uff0c\u56e0\u4e3a\u5b83\u7f3a\u4e4f\u7528\u4e8e\u4ee5\u4e0b\u65b9\u9762\u7684\u5de5\u5177\uff1a\n\u8d27\u5e01\u5316\uff1a\u4f60\u4e0d\u4f1a\u4f5c\u4e3a\u63a8\u7279\u6709\u5f71\u54cd\u529b\u7684\u4eba\u8d5a\u94b1\uff0c\u4e5f\u4e0d\u4f1a\u53bb\u5e97\u9762\u5356\u4e1c\u897f\u3002\n\u4f18\u5148\u987a\u5e8f\uff1a\u60a8\u4e0d\u80fd\u5bf9\u60a8\u7684\u8ba2\u9605\u6e90\u6216\u60a8\u7684\u5173\u6ce8\u8005\u7684\u63d0\u8981\u4e2d\u51fa\u73b0\u7684\u5185\u5bb9\u8fdb\u884c\u4e0a\u8c03\u6216\u4e0b\u8c03\u3002\n\u54c1\u724c\u7ba1\u7406\uff1a\u60a8\u4e0d\u80fd\u63a7\u5236\u81ea\u5df1\u7684\u54c1\u724c\u6216\u57df\u540d\uff0c\u56e0\u4e3a\u5b83\u662ftwitter.com/instance\u800c\u4e0d\u662fexample.com\u3002\n\u7531\u4e8e\u8fd9\u4e9b\u548c\u66f4\u591a\u7684\u539f\u56e0\uff0c\u8bb8\u591a\u4eba\u6b63\u5728\u8f6c\u5411Substack\u3001Ghost\u3001Locals\u7b49\u5e73\u53f0\u3002\u5728\u8fd9\u4e9b\u5e73\u53f0\u4e2d\uff0c\u6709\u5f71\u54cd\u529b\u7684\u4eba\u5bf9\u4ed6\u4eec\u7684\u793e\u533a\u62e5\u6709\u5b8c\u5168\u7684\u6839\u6743\u9650\uff0c\u53ef\u4ee5\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u4f53\u9a8c\u3002\u4f60\u4e0d\u9700\u8981\u4ed8\u94b1\u7ed9Twitter\u5e7f\u544a\u6765\u63a5\u89e6\u4f60\u7684\u8ffd\u968f\u8005\uff0c\u4e5f\u4e0d\u9700\u8981\u76f8\u4fe1\u4ed6\u4eec\u4f1a\u628a\u4f60\u7684\u5185\u5bb9\u9001\u5230\u4ed6\u4eec\u7684feed\u4e0a\u3002\n\u7136\u800c\uff0c\u95ee\u9898\u662f\uff0c\u4eceTwitter\u4e0a\u8f93\u51fa\u4e00\u4e2a\u5e9e\u5927\u7684\u8ffd\u968f\u8005\u57fa\u7840\u5e76\u4e0d\u662f\u4e00\u4ef6\u5fae\u4e0d\u8db3\u9053\u7684\u4e8b\uff01\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u95ee\u9898\u4e0d\u662f\u5bfc\u51fa\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u6570\u636e\u3002\u8fd9\u76f8\u5bf9\u5bb9\u6613\uff0cTwitter\u5df2\u7ecf\u652f\u6301\u8fd9\u4e00\u70b9\u3002\u95ee\u9898\u4e0d\u662f\u8bbf\u95ee\u4f60\u81ea\u5df1\u7684\u6570\u636e\uff0c\u800c\u662f\u5728\u6ca1\u6709Twitter\u989d\u5916\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u8054\u7cfb\u4f60\u7684\u8ffd\u968f\u8005(\u4f8b\u5982\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6216\u7535\u8bdd)\u7684\u80fd\u529b\u3002\n\u7406\u60f3\u7684\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u4f60\u6709N\u4e2a\u7c89\u4e1d\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u4e9b\u7c89\u4e1d\u7684N\u4e2a\u7535\u5b50\u90ae\u4ef6(\u6216\u7535\u8bdd\u53f7\u7801)\u5217\u8868\uff0c\u4ed6\u4eec\u660e\u786e\u540c\u610f\u5728\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u4e0e\u4ed6\u4eec\u8054\u7cfb\uff0c\u800c\u4e14\u4e0d\u4f1a\u7ed9\u4ed6\u4eec\u5e26\u6765\u592a\u591a\u751a\u81f3\u6839\u672c\u5c31\u662f\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002\u6b64\u5916\uff0c\u89e3\u51b3\u65b9\u6848\u4e0d\u5e94\u8be5\u5360\u7528\u5f71\u54cd\u8005\u8fd0\u884c\u548c\u7ef4\u62a4\u811a\u672c\u7684\u592a\u591a\u65f6\u95f4\u3002\n\u7406\u8bba\u4e0a\uff0cTwitter\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u52a0\u5165\uff0c\u5141\u8bb8\u4ed6\u4eec\u5173\u6ce8\u7684\u51e0\u4e2a\u3001\u90e8\u5206\u6216\u6240\u6709\u8d26\u6237\u67e5\u770b\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u8bb8\u53ef\u4ee5\u6362\u53d6\u67d0\u79cd\u5f62\u5f0f\u7684\u5c0f\u989d\u652f\u4ed8\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8d26\u6237\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8d26\u9f84\u8d85\u8fc73\u4e2a\u6708\u7684\u5173\u6ce8\u8005\u548c&gt\uff1b100\u4e2a\u73b0\u5b9e\u5173\u6ce8\u8005\u7684\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\u652f\u4ed8X\u7f8e\u5143\u3002\n\u4f46\u662f\u5728\u6ca1\u6709\u8fd9\u6837\u7684\u5185\u7f6e\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u51e0\u79cd\u91cd\u53e0\u7684\u65b9\u5f0f\u53ef\u4ee5\u5c06\u7528\u6237\u57fa\u5bfc\u51fa\u5230example.com/SUBSCRIBE\u3002\n\u5efa\u7acb\u4e00\u4e2a\u5355\u72ec\u7684\u65b0\u5e10\u6237\uff0c\u505a#1-4\uff0c\u4ee5\u907f\u514d\u5728\u60a8\u7684\u65f6\u95f4\u7ebf\u4e0a\u516c\u5f00\u63d0\u53ca\u3002\n\u89e3\u6790\u6bcf\u4e2a\u5173\u6ce8\u8005\u5e10\u6237\u7684\u4e2a\u4eba\u7b80\u5386\u4ee5\u83b7\u53d6\u516c\u5171\u8054\u7cfb\u4fe1\u606f(\u4f8b\u5982\uff0c\u5982\u679c\u4ed6\u4eec\u7684\u7b80\u5386\u4e2d\u6709\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6)\uff0c\u7136\u540e\u901a\u8fc7example.com/scribe\u5411\u4ed6\u4eec\u53d1\u9001\u5e26\u5916\u7535\u5b50\u90ae\u4ef6\u3002\n\u8fd9\u4e9b\u90fd\u4e0d\u662f\u5341\u5168\u5341\u7f8e\u7684\u3002\u4f46\u662f\u6700\u540e\u4e00\u4e2a\u770b\u8d77\u6765\u662f\u5408\u7406\u7684(\u5bf9\u4e8e\u9009\u62e9\u8ddf\u968f\u4f60\u7684\u4eba\u6765\u8bf4\uff0c\u5355\u4e2aDM\u5e94\u8be5\u662f\u53ef\u4ee5\u7684)\uff0c\u5e76\u4e14\u5728\u7406\u8bba\u4e0a\u76f8\u5bf9\u5bb9\u6613\u81ea\u52a8\u5316\u3002\u6211\u4eec\u79f0\u8fd9\u4e3a\u5927\u4f17DM\u65b9\u6cd5\u3002\u7279\u522b\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cTwitter\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5de5\u5177\uff0c\u7528\u4e8e\u901a\u8fc7DM\u5bf9\u5ba2\u6237\u670d\u52a1\u8fdb\u884c\u6587\u6863\u7f16\u5236\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u80fd\u4f1a\u88ab\u91cd\u65b0\u7528\u4e8e\u6b64\u7528\u4f8b\u3002\n\u5927\u89c4\u6a21DM\u65b9\u6cd5\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u662f\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2aTwitter API\u5bc6\u94a5\u548c\u53d1\u9001\u7ed9\u6bcf\u4e2a\u7528\u6237\u7684\u6d88\u606f\u4f5c\u4e3a\u8f93\u5165\u3002\u5b83\u4e3a\u4f60\u63d0\u4f9b\u4e86\u6240\u6709\u5173\u6ce8\u8005\u7684\u9884\u89c8\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9009\u9879\u6765\u6839\u636e\u91cd\u8981\u6027\u5bf9\u4ed6\u4eec\u8fdb\u884c\u6392\u540d\uff0c\u5e76\u5141\u8bb8\u4f60\u5728\u6bcf\u5929\u5f00\u653e\u52301000\u4e2a\u8d26\u6237\u4e4b\u524d\uff0c\u901a\u8fc7\u5411\u51e0\u4e2a\u8d26\u6237\u53d1\u9001\u6d4b\u8bd5\u90ae\u4ef6\u6765\u8fdb\u884c\u5c1d\u8bd5\u3002\u5b83\u5b58\u50a8\u72b6\u6001\uff0c\u8fd9\u6837\u60a8\u5c31\u77e5\u9053\u60a8\u8fc7\u53bb\u7ed9\u8c01\u53d1\u4e86\u6d88\u606f\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u65e0\u610f\u4e2d\u91cd\u65b0\u8054\u7cfb\u4ed6\u4eec\u3002\n\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e2a\u66f4\u534e\u4e3d\u7684\u672c\u5730Mac App\uff0c\u5b83\u5728\u4e0a\u9762\u63cf\u8ff0\u7684\u547d\u4ee4\u884c\u5f15\u64ce\u4e4b\u4e0a\u653e\u4e86\u4e00\u4e2a\u6f02\u4eae\u7684GUI\u3002\u6216\u8005\u4e00\u4e2a\u66f4\u534e\u4e3d\u7684\u6258\u7ba1\u7248\u672c\uff0c\u5e26\u6709\u5355\u72ec\u7684\u8f6c\u6362\u94fe\u63a5\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u7528\u6237\u540d\u8f6c\u6362\u6210\u4e86\u54ea\u4e9b\u7535\u5b50\u90ae\u4ef6\u3002\u6258\u7ba1\u7248\u672c\u8fd8\u5141\u8bb8\u60a8\u6bcf\u5929\u5728\u540e\u53f0\u8fd0\u884c1000\u4e2aDM\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u662f\u4e00\u9879SaaS\u670d\u52a1\u3002\n\u6709\u8db3\u591f\u591a\u7684\u5176\u4ed6\u4eba\u5bf9\u6b64\u611f\u5174\u8da3\uff0c\u622a\u81f32020\u5e746\u670814\u53f7\u661f\u671f\u65e5\uff0c\u8d4f\u91d1\u603b\u989d\u5df2\u8fbe&gt\uff1b10000\u7f8e\u5143\uff01\n\u5982\u679c\u6709\u66f4\u591a\u7684\u94b1\u8d85\u8fc710,000\u7f8e\u5143\uff0c\u6211\u4eec\u5c06\u5206\u914d\u7b2c\u4e00\u4e2a10,000\u7f8e\u5143\u7ed9\u83b7\u80dc\u8005\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u628a\u5269\u4f59\u7684\u94b1\u5206\u914d\u7ed9\u90a3\u4e9b\u6d4b\u8bd5\u8fc7\u8fd9\u6b3e\u5e94\u7528\u7684\u4eba\uff0c\u548c/\u6216\u53ef\u80fd\u5206\u914d\u7ed9\u7b2c\u4e8c\u540d\u548c\u7b2c\u4e09\u540d\u7684\u7528\u6237\u3002\n\u5728\u673a\u5236\u65b9\u9762\uff0c\u6211(@balajis)\u5c06\u57282020\u5e746\u670821\u65e5\u4e4b\u524d\u51b3\u5b9a\u83b7\u80dc\u8005\uff0c\u7136\u540e\u5c06\u83b7\u80dc\u8005\u7684BTC\u5730\u5740\u63d0\u4f9b\u7ed9\u516c\u5f00\u652f\u6301\u8d4f\u91d1\u7684\u5404\u4e2a\u4eba\u3002\n\u8fd9\u4e9b\u4eba\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e49\u52a1\u652f\u4ed8\u4ed6\u4eec\u63d0\u4ea4\u7ed9\u83b7\u80dc\u8005\u7684\u91d1\u989d\u3002\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u516c\u5f00\u53d1\u5e03\u5728\u7ebf\u786e\u8ba4\u3002\n\u8bf7\u8f6c\u5230\u672c\u671f\u5e76\u53d1\u8868\u8bc4\u8bba\uff0c\u5e76\u63d0\u4f9b\u6307\u5411\u60a8\u7684\u9879\u76ee\u7684\u94fe\u63a5\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u5e94\u8be5\u6709\u4e00\u4e2agif\u6216\u4ec0\u4e48\u4e1c\u897f\u6765\u8bc1\u660e\u5b83\u662f\u6709\u6548\u7684\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u7406\u60f3\u7684\u60c5\u51b5\u662f\uff0c\u5982\u679c\u4f60\u6709N\u4e2a\u8ffd\u968f\u8005\uff0c\u5728\u4ed6\u4eec\u660e\u786e\u540c\u610f\u5728\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u4e0e\u4ed6\u4eec\u8054\u7cfb\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u5f97\u5230\u8fd9\u4e9b\u8ffd\u968f\u8005\u7684n\u5c01\u7535\u5b50\u90ae\u4ef6(\u6216\u7535\u8bdd\u53f7\u7801)\u5217\u8868\uff0c\u800c\u4e0d\u4f1a\u7ed9\u4ed6\u4eec\u5e26\u6765\u592a\u591a\u6216\u6839\u672c\u7684\u9ebb\u70e6\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u5f71\u54cd\u8005\u9020\u6210\u592a\u591a\u65f6\u95f4\u6216\u91d1\u94b1\u7684\u8981\u6c42\u3002\n\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u5173\u952e\u7684\u7ea6\u675f\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u5728\u7406\u8bba\u4e0a\u662f\u6709\u6548\u7684\uff0c\u4f46\u5b83\u7834\u574f\u4e86\u62e5\u6709\u5f88\u591a\u8ffd\u968f\u8005\u7684\u8d26\u6237\uff0c\u6216\u8005\u56e0\u4e3a\u5783\u573e\u90ae\u4ef6\u800c\u5bfc\u81f4\u8d26\u6237\u88ab\u7981\u6b62\u6216\u5f71\u5b50\u88ab\u7981\u6b62\uff0c\u6216\u8005\u6709\u5176\u4ed6\u4e00\u4e9b\u4e25\u91cd\u7684\u8d1f\u9762\u526f\u4f5c\u7528\uff0c\u90a3\u4e48\u4f60\u5c31\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\u3002\n\u56e0\u4e3a\u60a8\u6bcf\u5929\u53ea\u80fd\u53d1\u90011000\u4e2aDM\uff0c\u6240\u4ee5\u60a8\u9700\u8981\u786e\u5b9a\u5173\u6ce8\u8005\u7684\u4f18\u5148\u987a\u5e8f\uff0c\u4ee5\u4fbf\u9996\u5148\u5bfc\u51fa\u6700\u91cd\u8981\u7684\u5173\u6ce8\u8005\u3002\u8fd9\u4e9b\u4eba\u53ef\u80fd\u81ea\u5df1\u62e5\u6709\u6700\u591a\u7684\u8ffd\u968f\u8005\uff0c\u6216\u8005\u5728\u4ed6\u4eec\u7684\u4e2a\u4eba\u7b80\u5386\u4e2d\u6709\u4e00\u4e9b\u5c5e\u6027(\u6bd4\u5982#\u6bd4\u7279\u5e01\u6807\u7b7e)\uff0c\u6216\u8005\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u6807\u51c6\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u5173\u6ce8\u8005\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u5217\u662fTwitter\u7528\u6237\u540d\uff0c\u540e\u7eed\u5217\u662f\u8be5\u7528\u6237\u540d\u7684\u5143\u6570\u636e(\u4ee5\u53ca\u4e0a\u6b21\u6536\u96c6\u8be5\u5143\u6570\u636e\u7684\u65f6\u95f4\u6233\uff0c\u56e0\u4e3a\u968f\u7740\u4eba\u4eec\u66f4\u65b0\u4ed6\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u5f97\u9648\u65e7)\u3002\n\u662f\u7684\uff0cTwitter\u7684\u9ed8\u8ba4API\u6709\u6bcf\u59291000 DM\u7684\u9650\u5236\u3002\u56e0\u6b64\uff0c\u60a8\u7684\u5de5\u5177\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u6570\u5929\u3002\n\u5f00\u653e\u6e90\u7801\u7248\u672c\u5c06\u5728\u672c\u5730\u8fd0\u884c\uff0c\u5e76\u5177\u6709\u67d0\u79cd\u72b6\u6001\uff0c\u5982SQLite\u6570\u636e\u5e93\u6216\u5e73\u9762\u6587\u4ef6\u3002\u5b83\u5c06\u4f7f\u7528\u8be5\u72b6\u6001\u6765\u8bb0\u5f55DM\u7684\u4eba\u5458\u3001\u65f6\u95f4\uff0c\u4ee5\u53ca\u4ed6\u4eec\u8bf4\u4e86\u4ec0\u4e48\u4ee5\u53ca\u4ed6\u4eec\u662f\u5426\u505a\u51fa\u4e86\u56de\u5e94\u3002\u60a8\u8fd8\u5e94\u8be5\u5141\u8bb8\u5728\u65b0\u7684\u5173\u6ce8\u8005\u51fa\u73b0\u65f6\u5b9a\u671f\u91cd\u65b0\u8fd0\u884c\u8be5\u5de5\u5177\uff0c\u800c\u4e0d\u9700\u8981\u5f71\u54cd\u8005\u8003\u8651\u4ed6\u4eec\u662f\u5426\u5728\u4e0d\u7ecf\u610f\u95f4\u7ed9\u4ed6\u4eec\u5df2\u7ecf\u53d1\u8fc7\u6d88\u606f\u7684\u4eba\u53d1\u6d88\u606f\u3002\n\u4e5f\u8bb8\u5427\uff0c\u53ea\u8981API\u8bbf\u95ee\u5bf9\u4e8e\u62e5\u6709(\u6bd4\u65b9\u8bf4)10000\u540d\u8ffd\u968f\u8005\u7684\u5178\u578bTwitter\u5f71\u54cd\u8005\u6765\u8bf4\u4e0d\u662f\u592a\u6602\u8d35\u6216\u592a\u8017\u65f6\u3002\n\u8fd9\u662f\u6700\u7b80\u5355\u7684\u7248\u672c\uff0c\u4f46\u7406\u60f3\u60c5\u51b5\u4e0b\u5e94\u8be5\u6709\u4e00\u4e2a\u7b80\u5355\u7684Macapp\u548c\u4e00\u4e2a\u6258\u7ba1\u7248\u672c\u3002\n\u8fd9\u6b3eMac\u5e94\u7528\u7a0b\u5e8f\u5c06\u9762\u5411\u90a3\u4e9b\u4e0d\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u53c8\u4e0d\u60f3\u628a\u4ed6\u4eec\u7684Twitter\u8bc1\u4e66\u5206\u53d1\u7ed9\u4e00\u4e2a\u65b0\u7f51\u7ad9\u7684\u4eba\u3002\u4ed6\u4eec\u66f4\u559c\u6b22\u5728\u672c\u5730\u7c98\u8d34API\u5bc6\u94a5\u3002\n\u6258\u7ba1\u7248\u672c\u53ef\u80fd\u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\uff0c\u5728\u8fd9\u91cc\u6709\u4eba\u767b\u5f55Twitter OAuth\u5e76\u5728\u540e\u53f0\u8bbe\u7f6e\u8fd9\u4e2a\u5927\u89c4\u6a21\u7684DM Torun\uff0c\u5206\u6790\u8c01\u88ab\u8054\u7cfb\u4e86\uff0c\u8c01\u6ce8\u518c\u4e86\uff0c\u7b49\u7b49\u3002\n\u7136\u800c\uff0c\u7531\u4e8eTwitter\u4e0a\u6709\u5f88\u591a\u53d8\u5e7b\u83ab\u6d4b\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u8003\u8651\u5230\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6240\u505a\u7684\u4e8b\u60c5\u7684\u6027\u8d28(\u5927\u91cf\u8ffd\u968f\u8005)\uff0c\u6709\u5f71\u54cd\u529b\u7684\u4eba\u4f1a\u60f3\u8981\u5c0f\u5fc3\u5730\u7167\u770b\u5b83\uff0c\u800c\u5f00\u6e90\u7248\u672c\u7684\u51fa\u73b0\u5c06\u589e\u52a0\u4eba\u4eec\u5bf9\u6258\u7ba1\u7248\u672c\u7684\u4fe1\u4efb\u3002\n\u5728GitHub\u548c\u66f4\u5e7f\u6cdb\u7684\u4e92\u8054\u7f51\u4e0a\uff0c\u6709\u5927\u91cf\u7684\u5f00\u6e90\u5de5\u5177\u53ef\u4ee5\u4e0eTwitter\u534f\u540c\u5de5\u4f5c\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50\u3002\n\u8f93\u51fa\u4f60\u7684\u8ffd\u968f\u8005\u7684\u95ee\u9898\u9002\u7528\u4e8e\u6240\u6709\u7684\u793e\u4ea4\u5a92\u4f53\uff0c\u4eba\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5341\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u4f46\u73b0\u5728\u611f\u89c9\u5b83\u5df2\u7ecf\u6cb8\u817e\u4e86\u3002\u6709\u4e00\u5927\u6279\u4eba\u6b63\u5728\u8f6c\u79fb\u5230Substack\u3001Ghost\u548c\u5f53\u5730\u4eba\u8fd9\u6837\u7684\u5e73\u53f0\u4e0a\uff0c\u8fd9\u4e9b\u5e73\u53f0\u53ef\u4ee5\u66f4\u597d\u5730\u63a7\u5236\u4f60\u7684\u89c2\u4f17(\u968f\u4e4b\u800c\u6765\u7684\u662f\uff0c\u4e3a\u5f71\u54cd\u8005\u8d5a\u94b1\uff0c\u4e3a\u89c2\u4f17\u5e26\u6765\u597d\u5904)\u3002\n\u5982\u679c\u6211\u4eec\u80fd\u4e3a\u63a8\u7279\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u8bb8\u53ef\u4ee5\u5c06\u5176\u63a8\u5e7f\u5230Facebook\u548cInstagram\u7b49\u5176\u4ed6\u5e73\u53f0\u4e0a\u7684\u90e8\u5206\u6709\u5f71\u54cd\u529b\u7684\u4eba\u79bb\u5f00\u3002\n\u8bf7\u6ce8\u610f\uff0cTwitter\u548c\u516c\u53f8\u5f88\u5feb\u5c31\u4f1a\u597d\u8d77\u6765\u7684\uff0c\u800c\u4e14\u4e0d\u4f1a\u5f88\u5feb\u6d88\u5931\u3002\u8fd9\u662f\u4e00\u79cd\u5c71\u6d1e\u4e0e\u516c\u5730\u7684\u65b9\u6cd5\u3002\u5927\u578b\u7684\u5168\u7403\u793e\u4ea4\u7f51\u7edc\u53ef\u80fd\u8fd8\u4f1a\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u90a3\u91cc\u62db\u52df\u6210\u5458\uff0c\u4f46\u8fd9\u4e9b\u7531\u4e2a\u4eba\u5f71\u54cd\u529b\u4eba\u58eb\u9886\u5bfc\u7684\u793e\u533a\u5c06\u4f1a\u84ec\u52c3\u53d1\u5c55\u3002\n\u6700\u540e\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u50cfBuffer\u8fd9\u6837\u89e3\u51b3\u8fd9\u7c7b\u770b\u4f3c\u7b80\u5355\u95ee\u9898\u7684\u516c\u53f8\u5df2\u7ecf\u83b7\u5f97\u4e862000\u4e07\u7f8e\u5143\u4ee5\u4e0a\u7684ARR\u3002\u5982\u679c\u4f60\u80fd\u6784\u5efa\u548c\u7ef4\u62a4\u4e00\u4e2a\u5de5\u5177\uff0c\u5728\u5f97\u5230\u7528\u6237\u540c\u610f\u7684\u60c5\u51b5\u4e0b\uff0c\u4ee5\u5408\u7406\u7684\u4ef7\u683c\u53ef\u9760\u5730\u4eceTwitter\u548c\u5176\u4ed6\u793e\u4ea4\u7f51\u7edc\u5bfc\u51fa\u5927\u91cf\u8ffd\u968f\u8005\u7535\u5b50\u90ae\u4ef6\uff0c\u90a3\u4e48\u4f60\u5c31\u62e5\u6709\u4e86\u53ef\u80fd\u4f1a\u8ba9\u5927\u91cf\u6709\u5f71\u54cd\u529b\u7684\u4eba\u4ed8\u94b1\u7684\u4e1c\u897f\u3002", "note_en": "People have crowdfunded a  $10000 bounty, payable in BTC, for an open sourcetool that helps people export their followers from Twitter to Substack,  Ghost,  Locals, or other user-controlledplatforms.\n  Because this is desired by many people, a good solution to this bountycould become a product or even a startup. You&#39;d want to first get itto work robustly for Twitter influencers, probably via white gloveservice for the first 100 or so accounts. And then make it work forother social platforms. Companies like  Buffer have donesurprisingly well ($20M+ ARR!) with similar seemingly simpleproducts that fill a hole in the social networking landscape.\n  Twitter is an incredible platform for learning and finding people oflike mind. I admire much of what Jack Dorsey and his team haveaccomplished.\n However, it has several downsides for users with large follower bases,as it lacks tools for:\n monetization: you don&#39;t make money as a Twitter influencer, and don&#39;t get a storefront to sell things\n   prioritization: you can&#39;t up- or down-regulate what appears in your feed or that of your followers\n brand management: you don&#39;t control your own brand or domain name, as it&#39;s twitter.com/example rather than example.com\n For these reasons and more, many people are moving to platforms like Substack,  Ghost,  Locals, or the like. In these platforms,an influencer has full root privileges over their community and cangive a richer experience. You don&#39;t need to pay Twitter ads to reachyour followers, or trust that they will deliver your content to theirfeed.\n The issue, however, is that it&#39;s not trivial to export a largefollower base from Twitter!\n Note that the problem here is  not the export of one&#39;s own profiledata. That is relatively easy and  Twitter alreadysupports that. The issue is not the  access to your own data, theissue is the ability to  contact your followers (eg via email orphone) without Twitter&#39;s additional consent.\n  Here&#39;s the ideal: if you have N followers, you get a list of N emails(or phone numbers) for those followers  with their explicit consentto contact them on another platform, and without bothering them verymuch or at all. Also, the solution shouldn&#39;t take too much time on thepart of the influencer to run and maintain a script.\n In theory, Twitter could add a feature where users could opt in toallowing their emails to be viewed by a few, some, or all of theaccounts they followed, perhaps in return for a micropayment of somekind. For example, an account could pay $X for the verified email ofeach follower with an account age over 3 months and &gt;100 realfollowers themselves.\n But in the absence of a built-in feature like this, there are severaloverlapping ways to export your userbase to example.com/subscribe.\n Set up a separate new account that does #1-4, to keep the public mentions out of your timeline\n Parse the bios of each follower account for public contact info (eg if they have their email in their bio), and email them out-of-band with example.com/subscribe\n None of these are perfect. But the last one seems like it has theright balance of being reasonable (a single DM to someone who haschosen to follow you should be OK) and in theory relatively easy toautomate. Call this the mass DM approach. In particular, Twitter has a bunch of tools for corporations to docustomer service  via DM that might be repurposed for this use case.\n  The simplest solution for the mass DM approach might be a command line app that takes as input a Twitter API key and a message to send each user. It gives you a preview of all of your followers, gives you some options to rank them by importance, and lets you try it out by sending test messages to a few accounts before opening it up to message 1000 accounts per day. It stores state so you know who you messaged in the past, such that you don&#39;t inadvertently recontact them.\n You can imagine a fancier local Mac App that puts a nice GUI on top of the command line engine described above. Or an even fancier hosted version with individually attributable conversion links, so you know which usernames converted to which emails. The hosted version would also allow you to keep running the 1000 DMs per day in the background, so it could be a SaaS service.\n     Enough other people were interested in this that the total bounty funds are now &gt;$10000 as of Sunday June 14, 2020!\n If more money comes in beyond $10,000, we will allocate the first $10,000 to the winner. We&#39;ll then allocate remaining monies to folks who test out the app and/or possibly to second and third place submissions.\n   In terms of mechanics, I (@balajis) will decide on the winner by June21, 2020, and then the BTC address of the winner will be provided tothe various people who have publicly supported the bounty.\n It will be incumbent upon each of these people to pay what they havecommitted to the winner. They can optionally publicly post an on-chainconfirmation.\n   Go to this  issue and make a comment with a link toyour project. Ideally it should have a gif or something that showsthat it works.\n  As noted above, the ideal is that if you have N followers, you get a list ofN emails (or phone numbers) for those followers  with their explicitconsent to contact them on another platform, and without botheringthem very much or at all, or requiring too much time or money on the partof the influencer.\n   These are a critical constraint. If you have a solution that works in theory, but thatbreaks on accounts with many followers, or gets an account banned or shadowbanned for spam,or has some other serious negative side effect, then you don&#39;t have a solution.\n  Because you can only send 1000 DMs per day, you will want to prioritize your followers such that you export the most important ones first. These might be the ones who have the most followers themselves, or who have some attribute in their bio (like a #Bitcoin hashtag), or that have some other criteria. In practice this means that you&#39;ll likely want a  follower table, where the first column is the Twitter username and subsequent columns are metadata on that username (along with a timestamp for when that metadata was last collected, as it can become stale as people update their profiles).\n  Yes, Twitter&#39;s default API has a  1000-daily-DM limit. So your tool might need to runfor multiple days.\n The open source version would run locally and have some state, like aSQLite database or a flatfile. It would use that state to record whatpeople it had DM\u2019d and when, along with what was said and whether theyresponded. You should also allow re-running of the tool periodicallyas new followers arise, without requiring the influencer to thinkabout whether they are inadvertently messaging people they alreadymessaged.\n  Maybe, so long as that API access isn&#39;t too expensive or timeconsuming to get for the typical Twitter influencer with (say) 10,000followers.\n   That&#39;s the simplest version, but ideally there should be a simple Macapp and a hosted version as well.\n The Mac app would be for folks who aren&#39;t developers, but don&#39;twant to give their Twitter credentials out to a new website. They&#39;dprefer to paste in an API key locally.\n The hosted version will probably be the most widely used, wheresomeone logs in with Twitter OAuth and sets up this mass DM torun in the background, with analytics on who has been contacted,who signed up, and so on.\n However, because there are many fly-by-night Twitter apps, and becauseof the nature of what this app is doing (mass DM of followers), theinfluencer will want to carefully babysit it and the presence of theopen source versions will increase trust in the hosted version.\n    There are tons of open source tools for working with Twitter out thereon GitHub and the broader internet. Feel free to use them rather thanreinventing the wheel.\n  The problem of exporting your following applies to all social media,and has been discussed for the better part of a decade, but it nowfeels like it&#39;s gotten to a boil. There is a critical mass of peoplewho are moving to platforms like Substack, Ghost, and Locals thatoffer greater control over your audience (and, with it, monetizationfor the influencer and benefits for the audience).\n If we can solve it for Twitter, we can probably generalize this towork for  partial exodus of influencers from other platforms likeFacebook and Instagram.\n Please note that Twitter and company will be fine and won&#39;t go away any time soon.This is a  cave-and-commons approach. The large global social networkswill likely persist for some time as &#34;commons&#34; where you recruitmembers, but these &#34;caves&#34; off to the side with individual influencer-led communitieswill thrive.\n Finally, as noted above, companies like Buffer that solve seemingly simple problemslike this have gotten to $20M+ in ARR. If you can build and maintain a tool that reliably exportsa large percentage of follower emails from Twitter and other social networks, with the consent of the users and at a reasonable price, you have something that a large number of influencers will likely pay for.", "posttime": "2020-06-15 03:27:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u7279,\u5f00\u6e90,\u8d4f\u91d1,bounty,twitter", "title": "10000\u7f8e\u5143\u7684\u6bd4\u7279\u5e01\u8d4f\u91d1\uff0c\u8d2d\u4e70\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\u6765\u5bfc\u51fa\u4f60\u7684\u63a8\u7279\u8ffd\u968f\u8005", "title_en": "$10000 BTC Bounty for an open source tool to export your Twitter followers", "transed": 1, "url": "https://github.com/balajis/twitter-export", "via": "", "real_tags": ["\u63a8\u7279", "\u5f00\u6e90", "\u8d4f\u91d1", "bounty", "twitter"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006560, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL\uff1bDR\uff1a\u6211\u4eec\u6765\u770b\u770b\u5f53Unix\u7f16\u7a0b\u6a21\u578b\u6392\u9664\u68c0\u67e5\u8f93\u51fa\u672c\u8eab\u65f6\uff0cZsh\u548cFish\u5982\u4f55\u80fd\u591f\u5728\u7a0b\u5e8f\u8f93\u51fa\u4e2d\u6307\u51fa\u7f3a\u5c11\u7684\u7ec8\u6b62\u6362\u884c\u7b26\u3002\n\u5927\u591a\u6570shell\uff0c\u5305\u62ecbash\u3001ksh\u3001dash\u548cash\uff0c\u90fd\u4f1a\u5728\u524d\u4e00\u4e2a\u547d\u4ee4\u9000\u51fa\u5149\u6807\u65f6\u79bb\u5f00\u5149\u6807\u7684\u4f4d\u7f6e\u663e\u793a\u63d0\u793a\u7b26\u3002\n\u63d0\u793a\u7b26(\u51e0\u4e4e)\u603b\u662f\u51fa\u73b0\u5728\u4e0b\u4e00\u884c\u719f\u6089\u7684\u6700\u5de6\u8fb9\u4e00\u5217\uff0c\u8fd9\u662f\u56e0\u4e3aUnix\u7a0b\u5e8f\u5728\u9000\u51fa\u65f6\u666e\u904d\u5408\u4f5c\u5c06\u5149\u6807\u505c\u5728\u90a3\u91cc\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u59cb\u7ec8\u786e\u4fdd\u8f93\u51fa\u7ec8\u6b62\u6362\u884c\u7b26\\n(\u4e5f\u79f0\u4e3a\u6362\u884c\u7b26)\uff1a\nvidar@vidarholen-vm2~$whamividarvidar@vidarholen-vm2~$whomami|HEXDUMP-c0000000 v i d a r\\n\u3002\n\u5982\u679c\u7a0b\u5e8f\u672a\u80fd\u9075\u5faa\u6b64\u7ea6\u5b9a\uff0c\u63d0\u793a\u5c06\u5728\u9519\u8bef\u7684\u4f4d\u7f6e\u7ed3\u675f\uff1a\n\u4f46\u662f\uff0c\u6211\u6700\u8fd1\u6ce8\u610f\u5230\uff0czsh\u548cfish\u5c06\u6539\u4e3a\u663e\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u6307\u793a\u7f3a\u5c11\u6362\u884c\u7b26\uff0c\u5e76\u4e14\u4ecd\u7136\u5728\u60a8\u671f\u671b\u627e\u5230\u5b83\u7684\u4f4d\u7f6e\u5f00\u59cb\u63d0\u793a\uff1a\nvidarholen-vm2%ECHO-n34\uff1bhello zsh&#34\uff1bhello zsh%vidarholen-vm2%vidar@vidarholen-vm2~&gt\uff1bECHO-n34\uff1bhello fish\u23cevidar@vidarholen-vm2~&gt\uff1b\n\u5982\u679c\u60a8\u5bf9\u6709\u4e00\u6574\u7bc7\u535a\u5ba2\u6587\u7ae0\u90fd\u662f\u5173\u4e8e\u8fd9\u4e00\u70b9\u611f\u5230\u5931\u671b\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u7f16\u5199\u4e00\u4e2ashell\u3002\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u77e5\u9053\u7684\u8d8a\u591a\uff0c\u770b\u8d77\u6765\u5c31\u8d8a\u96be(\u5f3a\u5236\u6027\u7684XKCD)\u3002\n\u5982\u679c\u60a8\u5fc3\u4e2d\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aif(\uff01output.ends_with(&#34\uff1b\\n&#34\uff1b))printf(&#34\uff1b%\\n&#34\uff1b)\uff1b\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u9650\u5236*\uff1a\n\u4e0e\u666e\u904d\u8ba4\u4e3a\u7684\u76f8\u53cd\uff0cshell\u5e76\u4e0d\u4f4d\u4e8e\u7a0b\u5e8f\u548c\u7ec8\u7aef\u4e4b\u95f4\u3002\u5916\u58f3\u4e0d\u80fd\u62e6\u622a\u6216\u68c0\u67e5\u7a0b\u5e8f\u7684\u7ec8\u7aef\u8f93\u51fa\u3002\n\u7ec8\u7aef\u7f16\u7a0b\u6a21\u578b\u57fa\u4e8e\u7535\u4f20\u6253\u5b57\u673a(\u53c8\u540dTTY)\uff0c\u537320\u4e16\u7eaa\u521d\u7684\u673a\u7535\u6253\u5b57\u673a\u3002\u4ed6\u4eec\u9010\u4e2a\u5b57\u6bcd\u5730\u6253\u5370\u5230\u7eb8\u4e0a\uff0c\u56e0\u6b64\u6ca1\u6709\u5185\u5b58\u6216\u5c4f\u5e55\u7f13\u51b2\u533a\u53ef\u4ee5\u7f16\u7a0b\u56de\u8bfb\u3002\n\u5916\u58f3\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u62e6\u622a\u6240\u6709\u8f93\u51fa\uff0c\u5e76\u5c06\u5176\u4e2d\u7ee7\u5230\u7ec8\u7aef\u3002\u867d\u7136\u5b83\u5728woami\u8fd9\u6837\u7684\u666e\u901a\u60c5\u51b5\u4e0b\u6709\u6548\uff0c\u4f46\u6709\u4e9b\u7a0b\u5e8f\u4f1a\u68c0\u67e5stdout\u662f\u5426\u662f\u7ec8\u7aef\u5e76\u6539\u53d8\u5b83\u4eec\u7684\u884c\u4e3a\uff0c\u6709\u4e9b\u7a0b\u5e8f\u4f1a\u8d8a\u8fc7\u60a8\u7684\u6743\u9650\u76f4\u63a5\u4e0eTTY\u5bf9\u8bdd(\u4f8b\u5982\uff0cssh\u7684\u5bc6\u7801\u63d0\u793a\u7b26)\uff0c\u6709\u4e9b\u7a0b\u5e8f\u4f1a\u4f7f\u7528\u7279\u5b9a\u4e8eTTY\u7684ioctls\uff0c\u5982\u679c\u8f93\u51fa\u4e0d\u662fTTY\uff0c\u6bd4\u5982\u67e5\u8be2\u7a97\u53e3\u5927\u5c0f\u6216\u7981\u7528\u5bc6\u7801\u8f93\u5165\u7684\u672c\u5730\u56de\u663e\uff0c\u8fd9\u4e9bioctls\u5c31\u4f1a\u5931\u8d25\u3002\n\u5916\u58f3\u7a0b\u5e8f\u53ef\u4ee5ptrace\u8be5\u8fdb\u7a0b\uff0c\u4ee5\u67e5\u770b\u5b83\u5728\u54ea\u91cc\u5199\u5165\u4e86\u4ec0\u4e48\u5185\u5bb9\u3002\u8fd9\u4f1a\u5e26\u6765\u5de8\u5927\u7684\u5f00\u9500\uff0c\u5e76\u7834\u574fsudo\u3001ping\u548c\u5176\u4ed6\u4f9d\u8d56suid\u7684\u547d\u4ee4\u3002\nshell\u53ef\u4ee5\u521b\u5efa\u4f2atty(Pty)\uff0c\u5728\u5176\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u5e76\u50cfssh\u6216\u811a\u672c\u4e00\u6837\u6765\u56de\u8f6c\u53d1\u4fe1\u606f\u3002\u8fd9\u662f\u4e00\u79cd\u70e6\u4eba\u4e14\u7b28\u91cd\u7684\u65b9\u6cd5\uff0c\u5176\u6700\u7ec8\u5f62\u5f0f\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u6574\u4e2a\u7ec8\u7aef\u4eff\u771f\u5668\u3002\n\u5916\u58f3\u53ef\u4ee5\u4f7f\u7528ECMA-48\u5149\u6807\u4f4d\u7f6e\u62a5\u544a\u529f\u80fd\uff1aprintf&#39\uff1b\\e[6n&39\uff1b]\u5728\u652f\u6301\u7684\u7ec8\u7aef\u4e0a\uff0c\u5c06\u5bfc\u81f4\u7ec8\u7aef\u6a21\u62df\u8868\u5355^[[y\uff1bxr]\u4e0a\u7684\u7528\u6237\u8f93\u5165\uff0c\u5176\u4e2dy\u548cx\u662f\u884c\u548c\u5217\u3002\u7136\u540e\uff0c\u5916\u58f3\u53ef\u4ee5\u8bfb\u53d6\u5b83\u6765\u786e\u5b9a\u5149\u6807\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u5f80\u8fd4\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5982\u6b64\u7b80\u5355\u7684\u529f\u80fd\uff0c\u5b9e\u73b0\u8d77\u6765\u6709\u4e9b\u7f13\u6162\u548c\u70e6\u4eba\u3002\n\u76f8\u53cd\uff0cZsh\u548cFish\u6709\u4e00\u79cd\u7b80\u5355\u5f97\u591a\u3001\u806a\u660e\u5f97\u591a\u7684\u65b9\u6cd5\u6765\u505a\u8fd9\u4ef6\u4e8b\uff1a\n\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u63d0\u793a\u4e4b\u524d\u6253\u5370\u4e00\u4e2a\u56fa\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u5728\u6240\u6709\u7ec8\u7aef\u4e0a\u90fd\u975e\u5e38\u6709\u6548\u3002\n\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u7684\u7ec8\u7aef\u670910\u5217\u5bbd\uff0c3\u884c\u9ad8\uff0c\u4e00\u4e2a\u89c4\u8303\u7684\u7a0b\u5e8f\u521a\u521a\u7f16\u5199\u4e86\u4e00\u4e2a\u5e26\u6709\u5c3e\u968f\u6362\u884c\u7b26\u7684\u77ed\u5b57\u7b26\u4e32\uff1a\n\u5149\u6807(\u7531|\u8868\u793a)\u4f4d\u4e8e\u8be5\u884c\u7684\u5f00\u5934\u3002\u8fd9\u662f\u5728\u6b65\u9aa41\u548c2\u4e2d\u5c06\u53d1\u751f\u7684\u60c5\u51b5\uff1a\n\u6b64\u65f6\u5c06\u663e\u793a\u6307\u793a\u7b26\uff0c\u7531\u4e8e\u6211\u4eec\u6b63\u597d\u5199\u5165\u4e86$Column\u5b57\u7b26\uff0c\u56e0\u6b64\u5149\u6807\u4f4d\u4e8e\u6700\u540e\u4e00\u5217\u4e4b\u540e\u3002\u6b65\u9aa43(\u56de\u8f66\u7b26)\u73b0\u5728\u5c06\u5176\u79fb\u56de\u8d77\u70b9\uff1a\n\u6700\u7ec8\u7ed3\u679c\u4e0e\u6211\u4eec\u7b80\u5355\u5730\u5199\u51fa\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u63d0\u793a\u7b26\u5b8c\u5168\u76f8\u540c\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5f53\u7a0b\u5e8f\u6ca1\u6709\u8f93\u51fa\u7ec8\u6b62\u6362\u884c\u7b26\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n\u5c06\u663e\u793a\u6307\u793a\u7b26\uff0c\u4f46\u8fd9\u4e00\u6b21\u6b65\u9aa42\u4e2d\u7684\u7a7a\u683c\u4f1a\u5bfc\u81f4\u8be5\u884c\u4e00\u76f4\u6362\u884c\u5230\u4e0b\u4e00\u884c\uff1a\n\u63d0\u793a\u73b0\u5728\u663e\u793a\u5728\u8be5\u884c\u4e0a\uff0c\u56e0\u6b64\u4e0d\u4f1a\u8986\u76d6\u6307\u793a\u5668\uff1a\n\u73b0\u5728\u4f60\u5c31\u77e5\u9053\u4e86\u3002\u4e00\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u95ee\u9898\u88ab\u8bc1\u660e\u6bd4\u9884\u671f\u7684\u8981\u96be\uff0c\u4f46\u5de7\u5999\u5730\u4f7f\u7528\u6362\u884c\u4f7f\u5b83\u518d\u6b21\u53d8\u5f97\u5bb9\u6613\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u79d8\u8bc0\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u5728Bash\u4e2d\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff1a\n\u867d\u7136\u5f88\u6709\u7528\u5e76\u4e14\u7ecf\u5e38\u88ab\u8bf7\u6c42\uff0c\u4f46\u662f\u6ca1\u6709\u53ef\u9760\u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u5148\u524d\u6267\u884c\u7684\u547d\u4ee4\u7684\u8f93\u51fa\u3002\n\u622a\u53d6\u7ec8\u7aef\u7684\u5c4f\u5e55\u622a\u56fe/\u8f6c\u50a8\u4ee4\u4eba\u60ca\u8bb6\u5730\u68d8\u624b\uff0c\u800c\u4e14\u5b83\u53ea\u5728\u7279\u5b9a\u7684\u7ec8\u7aef\u4e0a\u5de5\u4f5c\u3002\n\u80cc\u666f\u8fdb\u7a0b\u8f93\u51fa\u88c5\u9970\u6027\u5730\u7834\u574f\u524d\u666f\u8fdb\u7a0b\u7684\u73b0\u8c61\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u89e3\u51b3\u65b9\u6848", "note_en": "tl;dr: We look at how Zsh and Fish is able to indicate a missing terminating linefeed in program output when the Unix programming model precludes examining the output itself.\n Most shells, including bash, ksh, dash, and ash, will show a prompt wherever the previous command left the cursor when it exited.\n The fact that the prompt (almost) always shows up on the familiar left-most column of the next line is because Unix programs universally cooperate to park the cursor there when they exit.\n This is done by always making sure to output a terminating linefeed  \\n (aka newline):\n vidar@vidarholen-vm2 ~ $ whoamividarvidar@vidarholen-vm2 ~ $ whoami | hexdump -c0000000 v i d a r \\n\n If a program fails to follow this convention, the prompt will end up in the wrong place:\n  However, I recently noticed that  zsh and  fish will instead show a character indicating a missing linefeed, and still start the prompt where you\u2019d expect to find it:\n vidarholen-vm2% echo -n &#34;hello zsh&#34;hello zsh% vidarholen-vm2%vidar@vidarholen-vm2 ~&gt; echo -n &#34;hello fish&#34;hello fish\u23cevidar@vidarholen-vm2 ~&gt;\n If you\u2019re disappointed that  this is what there\u2019s an entire blog post about, you probably haven\u2019t tried to write a shell. This is one of those problems where the more you know, the harder it seems ( obligatory XKCD).\n If you have a trivial solution in mind, maybe along the lines of  if (!output.ends_with(&#34;\\n&#34;)) printf(&#34;%\\n&#34;);, consider the following restrictions*:\n Contrary to popular belief, the shell does  not sit between programs and the terminal. The shell has no ability to intercept or examine the terminal output of programs.\n The terminal programming model is based on teletypes (aka TTYs), electromechanical typewriters from the early 1900s. They printed letter by letter onto paper, so there is no memory or screen buffer that can be programmatically read back.\n  The shell could use pipes to intercept all output, and relay it onto the terminal. While it works in trivial cases like  whoami, some programs  check whether stdout is a terminal and change their behavior, others go over your head and talk to the TTY directly (e.g.  ssh\u2018s password prompt), and some use TTY specific  ioctls that fail if the output is not a TTY, such as querying window size or disabling local echo for password input.\n The shell can  ptrace the process to see what it writes where. This has a huge overhead and breaks  sudo,  ping, and other commands that rely on suid.\n The shell can create a pseudo-tty (pty), run commands in that, and relay information back and forth much like  ssh or  script does. This is an annoying and heavy-handed approach, which in its ultimate form would require re-implementing an entire terminal emulator.\n The shell can use ECMA-48 cursor position reporting features:  printf &#39;\\e[6n&#39; on a supported terminal will cause the terminal to simulate user input on the form  ^[[y;xR where  y and  x is the row and column. The shell could then read this to figure out where the cursor is. These kinds of round trips are feasible, but somewhat slow and annoying to implement for such a simple feature.\n Zsh and Fish instead have a much simpler and far more clever way of doing it:\n  This solution is very simple because it only requires printing a fixed string before every prompt, but it\u2019s highly effective on all terminals.\n  Let\u2019s pretend our terminal is 10 columns wide and 3 rows tall, and a canonical program just wrote a short string with a trailing linefeed:\n  The cursor, indicated by  |, is at the start of the line. This is what would happen in step 1 and 2:\n  The indicator is shown, and since we have written exactly  $COLUMN characters, the cursor is after the last column. Step 3, a carriage return, now moves it back to the start:\n    The final result is exactly the same as if we had simply written out the prompt wherever the cursor was.\n Now, let\u2019s look at what happens when a program does  not output a terminating linefeed:\n  The indicator is shown, but this time the spaces in step 2 causes the line to wrap all the way around to the next line:\n    The prompt is now shown on that line, and therefore doesn\u2019t overwrite the indicator:\n  And there you have it. A seemingly simple problem turned out harder than expected, but a clever use of line wrapping made it easy again.\n Now that we know the secret sauce, we can of course do the same thing in Bash:\n    While useful and often requested, there is no robust way to get the output of the previously executed command.\n It\u2019s surprisingly tricky to take screenshots/dumps of terminals, and it only works on specific terminals.\n The phenomenon of background process output cosmetically trashing foreground processes is well known, and yet there\u2019s no solution", "posttime": "2020-06-15 03:27:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f3a\u5c11,fish,\u7ec8\u7aef", "title": "Zsh\u548cFish\u00e2uro\u2122\u9ad8\u4eae\u663e\u793a\u7f3a\u5c11\u7684\u6362\u884c\u7b26\u7684\u7b80\u5355\u800c\u806a\u660e\u7684\u6280\u5de7", "title_en": "Zsh and Fish\u00e2\u20ac\u2122s simple but clever trick for highlighting missing linefeeds", "transed": 1, "url": "https://www.vidarholen.net/contents/blog/?p=878", "via": "", "real_tags": ["\u7f3a\u5c11", "fish", "\u7ec8\u7aef"]}]