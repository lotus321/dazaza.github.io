[{"category": "", "categoryclass": "", "imagename": "dee6ac83b1fb37e17e9c40b0e9465a9f.jpg", "infoid": 1006119, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4eceWindows\u9996\u6b21\u53d1\u5e03\u4ee5\u6765\uff0c\u4eba\u4eec\u4e00\u76f4\u5728\u4fee\u6539\u8fd9\u4e2a\u4e3e\u4e16\u95fb\u540d\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u53d8\u4f53\uff0c\u4ee5\u66f4\u597d\u5730\u6ee1\u8db3\u4ed6\u4eec\u7684\u4e2a\u4eba\u9700\u6c42\u3002\n\u8fd9\u4e9b\u8c03\u6574\u4e2d\u7684\u8bb8\u591a\u90fd\u53ef\u4ee5\u4f7f\u7528\u8f6f\u4ef6\u672c\u8eab\u63d0\u4f9b\u7684\u5de5\u5177\u8fdb\u884c\uff0c\u4f46\u6700\u8fd1\u53d1\u5e03\u7684NINJUTSOS\u65e8\u5728\u5c06Windows10\u7684\u4fee\u6539\u63d0\u5347\u5230\u4e00\u4e2a\u5168\u65b0\u7684\u6c34\u5e73\u3002\nNingjutsu OS\u4e8e5\u67087\u65e5\u53d1\u5e03\uff0c\u58f0\u79f0\u5c06\u628aWindows10\u6539\u9020\u6210\u4e00\u4e2a\u6e17\u900f\u6d4b\u8bd5\u5f3a\u56fd\uff0c\u589e\u52a0\u4e86\u5927\u91cf\u9488\u5bf9\u5b89\u5168\u4e13\u5bb6\u7684\u5de5\u5177(\u7ea6800\u4e2a)\uff0c\u5176\u4e2d\u4e00\u4e9b\u9488\u5bf9\u666e\u901a\u7528\u6237(\u4f8b\u5982qBitTorrent\u548cTor\u6d4f\u89c8\u5668)\uff0c\u540c\u65f6\u4e5f\u5220\u9664\u4e86\u5728\u8fd9\u6837\u7684\u73af\u5883\u4e2d\u88ab\u8ba4\u4e3a\u662f\u4e0d\u9700\u8981\u6216\u4e0d\u9700\u8981\u7684\u529f\u80fd\u3002\n\u201c\u6211\u521b\u5efa\u8fd9\u4e2a\u9879\u76ee\u662f\u4e3a\u4e86\u5e2e\u52a9\u4fe1\u606f\u5b89\u5168\u9886\u57df\u7684\u521d\u5b66\u8005\u548c\u5b66\u751f\u3002\u5982\u4f60\u6240\u77e5\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u4e3a\u4fe1\u606f\u5b89\u5168\u9886\u57df\u4e2d\u9700\u8981\u7684\u4e00\u4e9b\u7a0b\u5e8f\u6784\u5efaWindows\u3001\u5b89\u88c5\u6240\u6709\u5de5\u5177\u548c\u5b89\u88c5\u5e93\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u201c\u5fcd\u672f\u7684\u521b\u5efa\u8005\u2018Hasan\u2019\u544a\u8bc9TF\u3002\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5fcd\u672f\u7684\u5916\u8868\u5f15\u4eba\u6ce8\u76ee\uff0c\u5f88\u53ef\u80fd\u4f1a\u5438\u5f15\u76ee\u6807\u89c2\u4f17\u3002\n\u4ece2020\u5e746\u67086\u65e5\u5f00\u59cb\uff0c\u8be5\u9879\u76ee\u88ab\u6258\u7ba1\u5728Github\u4e0a\uff0c\u4f46\u6839\u636e\u5546\u4e1a\u8f6f\u4ef6\u8054\u76df(BSA)\u4ee3\u8868\u5fae\u8f6f\u63d0\u4ea4\u7684DMCA\u7533\u8bc9\uff0cNINJUTSOS\u4fb5\u72af\u4e86\u5fae\u8f6f\u7684\u7248\u6743\u3002\n\u8d77\u8bc9\u4e66\u4e2d\u5199\u9053\uff1a\u201cBSA\u5df2\u7ecf\u786e\u5b9aGitHub.com(\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u901a\u8fc7\u4e0b\u9762\u5217\u51fa\u7684\u94fe\u63a5\u5728GitHub\u4e0a\u63d0\u4f9b\u7684\u5185\u5bb9)\u63d0\u4f9b\u4e86\u5bf9\u6211\u4eec\u6210\u5458\u5fae\u8f6f\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u3001\u975e\u516c\u5f00\u7684\u3001\u4e13\u6709\u4fe1\u606f\u7684\u8bbf\u95ee\u6743\u9650\u3002\u201d\n\u201c\u8be5\u94fe\u63a5\u6307\u5411\u4e0eMicrosoft\u6709\u5173\u7684\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u6750\u6599\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6709\u95ee\u9898\u7684\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u6750\u6599\u53ef\u4ee5\u5728\u4ee5\u4e0b\u94fe\u63a5\u4e2d\u627e\u5230\uff1ahttps://github.com/ninjutsu-project/ninjutsu-project.github.io.\u201d\n\u867d\u7136\u8be5\u9879\u76ee\u7684\u94fe\u63a5\u73b0\u5728\u5df2\u7ecf\u88abGithub\u5220\u9664(Hasan\u575a\u79f0\u8be5\u9875\u9762\u201c\u6ca1\u6709\u4efb\u4f55\u4fb5\u72af\u5fae\u8f6f\u6743\u5229\u7684\u5185\u5bb9\u201d)\uff0c\u4f46\u8d77\u8bc9\u4e66\u7ee7\u7eed\u5f3a\u8c03\u4e86NINJUTU OS\u7684\u51e0\u4e2a\u58f0\u79f0\u4fb5\u72af\u6743\u5229\u7684\u529f\u80fd\u3002\u6b63\u5982BSA/Microsoft\u6240\u5ba3\u4f20\u548c\u7279\u522b\u5f3a\u8c03\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u662f\uff1a", "note_en": "Since Windows was first released, people have been modifying variants of the world-famous operating system to better fit their individual requirements.\n Many of these tweaks can be carried out using tools provided within the software itself but the recently-released Ninjutsu OS aims to take Windows 10 modding to a whole new level.\n Released on May 7, Ninjutsu OS claims to take Windows 10 and transform it into a penetration testing powerhouse, adding huge numbers of tools (around 800) aimed at security experts, a few for regular users (qBitTorrent and Tor Browser, for example) while also removing features considered unwanted or unneeded in such an environment.\n  \u201cI created this project to help beginners and students in the field of information security. As you know it is very difficult for beginners to build Windows and install all the tools and install libraries for some of the programs that you need in the field of information security,\u201d Ninjutsu creator \u2018Hasan\u2019 informs TF.\n As the image below shows, Ninjutsu\u2019s appearance is striking and is likely to appeal to the target audience.\n  From June 6, 2020, the project was hosted on Github but according to a DMCA complaint filed by the Business Software Alliance (BSA) on behalf of Microsoft, Ninjutsu OS violates Microsoft\u2019s copyrights.\n \u201cBSA has determined that GitHub.com (specifically, content made available on GitHub through the link listed below) is providing access to copyrighted, nonpublic, proprietary information of our member Microsoft,\u201d the complaint reads.\n \u201cThe link leads to copyrighted material pertaining to Microsoft. Specifically, the copyrighted material in question can be found at the following link: https://github.com/ninjutsu-project/ninjutsu-project.github.io.\u201d\n  While that link to the project has now been taken down by Github (Hasan insists that the page \u201cdoes not contain any violation of Microsoft\u2019s rights\u201d), the complaint goes on to highlight several features of Ninjutsu OS that are claimed to be infringing. As advertised and specifically highlighted by BSA/Microsoft they are:", "posttime": "2020-06-11 17:54:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fae\u8f6f,windows,windows-10,windows10,microsoft", "title": "\u5fae\u8f6f\u79f0\uff0c\u5220\u9664\u201c\u607c\u4eba\u7684\u201dWindows10\u529f\u80fd\u8fdd\u53cd\u4e86DMCA\u89c4\u5b9a", "title_en": "Removing \u201cAnnoying\u201d Windows 10 Features Is a DMCA Violation, Microsoft Says", "transed": 1, "url": "https://torrentfreak.com/removing-annoying-windows-10-features-is-a-dmca-violation-microsoft-says-200611/", "via": "", "real_tags": ["\u5fae\u8f6f", "windows", "windows10", "microsoft"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006118, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u7684\u793e\u533a\u5728\u65b0\u51a0\u80ba\u708e\u671f\u95f4\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u6211\u4eec\u5c06\u57282020\u5e746\u670830\u65e5\u4e4b\u524d\u514d\u8d39\u63d0\u4f9bACM\u5728\u6211\u4eec\u6570\u5b57\u56fe\u4e66\u9986\u4e2d\u53d1\u5e03\u7684\u6240\u6709\u4f5c\u54c1\u3002\u4e86\u89e3\u66f4\u591a\u3002\n\u6211\u4eec\u4f7f\u7528\u997c\u5e72\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7ed9\u4f60\u6700\u597d\u7684\u7ecf\u9a8c\uff0c\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u3002\n\u60a8\u7684\u6d4f\u89c8\u5668\u4f3c\u4e4e\u4e0d\u652f\u6301\u5b83\u4eec\uff0c\u8fd9\u4f1a\u5f71\u54cd\u7f51\u7ad9\u529f\u80fd\u3002", "note_en": "To help support our community working remotely during COVID-19, we are making all work published by ACM in our Digital Library freely accessible through June 30, 2020.  Learn more\n   We use cookies to ensure that we give you the best experience on our website.\n  It seems your browser doesn&#39;t support them and this affects the site functionality.", "posttime": "2020-06-11 16:32:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u84dd\u56fe,house,\u7f51\u7ad9", "title": "\u8c01\u4e0d\u753b\u84dd\u56fe\u5c31\u76d6\u623f\u5b50\u5462\uff1f(2015)", "title_en": "Who builds a house without drawing blueprints? (2015)", "transed": 1, "url": "https://dl.acm.org/doi/fullHtml/10.1145/2736348", "via": "", "real_tags": ["\u84dd\u56fe", "house", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "f44d3df67948df88d2a81b6a51103f8f.png", "infoid": 1006116, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2017\u5e74\u673a\u5668\u5b66\u4e60\u53d6\u5f97\u8fdb\u6b65\u7684\u6700\u4ee4\u4eba\u5174\u594b\u7684\u8ff9\u8c61\u4e4b\u4e00\u662fAlphaGo\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u597d\u7684\u56f4\u68cb\u68cb\u624b\u300210\u6708\u4efd\uff0cDeepMind\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u63cf\u8ff0\u4e86\u65b0\u7248\u672c\u7684AlphaGo\uff0c\u540d\u4e3aAlphaGo Zero.\u4ec5\u7ecf\u8fc736\u4e2a\u5c0f\u65f6\u7684\u8bad\u7ec3\uff0cAlphaGo Zero\u5c31\u53d8\u5f97\u6bd4\u51fb\u8d25\u674e\u4e16\u77f3\u7684\u7248\u672c\u66f4\u64c5\u957f\u56f4\u68cb\u3002\n\u4e0d\u4ec5\u5982\u6b64\uff0cAlphaGo Zero\u5728\u6ca1\u6709\u4efb\u4f55\u56f4\u68cb\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u5b66\u4f1a\u4e86\u56f4\u68cb(\u4e5f\u5c31\u662f\u8bf4\uff0cTabula rasa)\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e4b\u524d\u51fa\u7248\u7684AlphaGo\u7248\u672c\u662f\u5728\u4eba\u7c7b\u56f4\u68cb\u6570\u636e\u5e93\u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u8bad\u7ec3\u7684\u3002\n\u8fd9\u4e00\u6210\u5c31\u771f\u7684\u5f88\u4e86\u4e0d\u8d77\uff0c\u56e0\u4e3a\u5b83\u8868\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u53d1\u51fa\u4e00\u79cd\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4ece\u5934\u5f00\u59cb\u6559\u81ea\u5df1\u505a\u4e0d\u5e73\u51e1\u7684\u4efb\u52a1\uff0c\u5e76\u6700\u7ec8\u53d8\u5f97\u6bd4\u4eba\u7c7b\u505a\u5f97\u66f4\u597d\u3002\u8fd9\u8868\u660e\uff0c\u73b0\u5728\u6574\u4e2a\u4e16\u754c\u7684\u53ef\u80fd\u6027\u90fd\u89e6\u624b\u53ef\u53ca-\u60f3\u8c61\u4e00\u4e0b\uff0c\u53ef\u4ee5\u6559\u81ea\u5df1\u505a\u4eba\u7c7b\u80fd\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u7684\u8ba1\u7b97\u673a\u3002\n\u4f46\u8fd9\u6837\u7684\u8fdb\u6b65\u5e76\u4e0d\u4fbf\u5b9c\u3002\u5c31\u50cf\u4eba\u7c7b\u638c\u63e1\u56f4\u68cb\u9700\u8981\u591a\u5e74\u7684\u8bad\u7ec3\u4e00\u6837\uff0c\u8ba1\u7b97\u673a\u638c\u63e1\u56f4\u68cb\u9700\u8981\u5927\u91cf\u7684\u8d44\u6e90\u3002\u6211\u4f30\u8ba1\u590d\u5236AlphaGo Zero\u8bba\u6587\u4e2d\u62a5\u544a\u7684\u5b9e\u9a8c\u9700\u8981\u5927\u7ea63500\u4e07\u7f8e\u5143\u7684\u8ba1\u7b97\u80fd\u529b\u3002\nAlphaGo Zero\u901a\u8fc7\u6a21\u62df\u4e0e\u81ea\u5df1\u7684\u5bf9\u5c40\u6765\u5b66\u4e60\u4e0b\u56f4\u68cb\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u81ea\u6211\u5bf9\u5c40\u3002\u8bba\u6587\u62a5\u544a\u4e86\u4ee5\u4e0b\u6570\u5b57\uff1a\n\u81ea\u73a9\u662f\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fdb\u884c\u7684\uff0c\u8fd9\u53f0\u673a\u5668\u5305\u542b4\u4e2aTPU-\u7531\u8c37\u6b4c\u5236\u9020\u7684\u4e13\u7528\u8ba1\u7b97\u673a\u82af\u7247\uff0c\u53ef\u4ee5\u5728\u4ed6\u4eec\u7684\u4e91\u8ba1\u7b97\u670d\u52a1\u4e0a\u51fa\u79df\u3002\n\u53c2\u6570\u66f4\u65b0\u753164\u4e2aGPU\u548c19\u4e2aCPU\u9a71\u52a8\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e0e\u7528\u4e8e\u81ea\u73a9\u7684TPU\u7684\u6210\u672c\u76f8\u6bd4\uff0c\u8fd9\u4e9bGPU\u7684\u6210\u672c\u76f8\u5f62\u89c1\u7ecc\u3002\n\u4e00\u4e2a\u53ef\u7591\u7684\u6570\u5b57\u662f\u5728\u4e09\u5929\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u81ea\u73a9\u673a\u5668\u7684\u6570\u91cf\u30021.\u4f7f\u7528\u5e73\u5747\u6bcf\u573a\u56f4\u68cb\u6bd4\u8d5b211\u6b65\u7684\u4f30\u8ba1\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u6700\u7ec8\u76841595\u53f0\u81ea\u73a9\u673a\u5668\u7684\u6570\u91cf\uff0c\u53736380\u53f0TPU\u3002(\u8ba1\u7b97\u5982\u4e0b\u3002)\n\u6309\u71676.50\u7f8e\u5143/TPU/\u5c0f\u65f6\u7684\u62a5\u4ef7(\u622a\u81f32018\u5e743\u6708)\uff0c\u6574\u4e2a\u9879\u76ee\u4ec5TPU\u4e00\u9879\u7684\u590d\u5236\u6210\u672c\u5c31\u5c06\u8fbe\u52302986,822\u7f8e\u5143\u3002\u8fd9\u53ea\u662f\u4ed6\u4eec\u62a5\u544a\u7684\u4e24\u4e2a\u5b9e\u9a8c\u4e2d\u89c4\u6a21\u8f83\u5c0f\u7684\u4e00\u4e2a\uff1a\n\u968f\u540e\uff0c\u6211\u4eec\u5c06\u5f3a\u5316\u5b66\u4e60\u7ba1\u9053\u5e94\u7528\u4e8eAlphaGoZero\u7684\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\uff0c\u4f7f\u7528\u7684\u662f\u66f4\u5927\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6301\u7eed\u65f6\u95f4\u66f4\u957f\u3002\u8bad\u7ec3\u518d\u6b21\u4ece\u5b8c\u5168\u968f\u673a\u7684\u884c\u4e3a\u5f00\u59cb\uff0c\u6301\u7eed\u4e86\u5927\u7ea640\u5929\u3002\n\u5728\u4e3a\u671f40\u5929\u7684\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u5c42\u6570\u662f\u57283\u5929\u7684\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u7f51\u7edc\u7684\u4e24\u500d(\u5927\u5c0f\u76f8\u540c)\uff0c\u6240\u4ee5\u5047\u8bbe\u5b9e\u9a8c\u7684\u5176\u4ed6\u65b9\u9762\u6ca1\u6709\u4ec0\u4e48\u53d8\u5316\uff0c\u90a3\u4e48\u505a\u51fa\u4e00\u4e2a\u5355\u4e00\u7684\u4e3e\u52a8\u9700\u8981\u5927\u7ea6\u4e24\u500d\u7684\u8ba1\u7b97\u673a\u601d\u8003\u65f6\u95f4\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u56de\u5230\u4e00\u7cfb\u5217\u7684\u8ba1\u7b97\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u590d\u523640\u5929\u7684\u5b9e\u9a8c\u7684\u6700\u7ec8\u6210\u672c\u4e3a35,354,222\u7f8e\u5143\u7684TPU\u3002\n\u81f3\u4e8eDeepMind(\u8c37\u6b4c\u6bcd\u516c\u53f8\u7684\u5b50\u516c\u53f8)\u8fdb\u884c\u8fd9\u9879\u5b9e\u9a8c\u7684\u5b9e\u9645\u6210\u672c\uff0c\u8fd8\u6709\u5176\u4ed6\u56e0\u7d20\u9700\u8981\u8003\u8651\uff0c\u6bd4\u5982\u7814\u7a76\u4eba\u5458\u7684\u5de5\u8d44\uff0c\u6216\u8005\u6240\u62a5\u7684TPU\u8d39\u7387\u53ef\u80fd\u5305\u62ec\u76f8\u5f53\u53ef\u89c2\u7684\u8fb9\u9645\u3002\u4f46\u5bf9\u4e8e\u8c37\u6b4c\u4ee5\u5916\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u590d\u5236\u8fd9\u9879\u5b9e\u9a8c\u6240\u9700\u6210\u672c\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u7c97\u7565\u4f30\u8ba1\u3002\n\u770b\u5f85AlphaGo Zero\u5b9e\u9a8c\u60ca\u4eba\u6210\u672c\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u60f3\u8c61\u9700\u8981\u591a\u5c11\u4eba\u8111\u624d\u80fd\u63d0\u4f9b\u540c\u6837\u6570\u91cf\u7684\u80fd\u91cf\u3002\n\u8fd9\u5e76\u4e0d\u662f\u8bf4AlphaGo Zero\u4e0d\u662f\u4e00\u9879\u4e86\u4e0d\u8d77\u7684\u6210\u5c31(\u5b83\u662f)\uff0cAlphaGo Zero\u5411\u4e16\u754c\u5c55\u793a\u4e86\u53ef\u4ee5\u5efa\u7acb\u7cfb\u7edf\u6765\u81ea\u5b66\u5b8c\u6210\u590d\u6742\u7684\u4efb\u52a1\uff0c\u53ea\u662f\u5f00\u53d1\u8fd9\u79cd\u901a\u7528\u6280\u672f\u5bf9\u5927\u4f17\u6765\u8bf4\u4ecd\u7136\u662f\u6ca1\u6709\u7684\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bb8\u591a\u5177\u6709\u73b0\u5b9e\u4e16\u754c\u4ef7\u503c\u7684\u95ee\u9898\u4e0d\u9700\u8981(1)\u5b66\u4e60\u8868\u683c\u6216(2)\u8d85\u4eba\u6027\u80fd\uff0c\u4e5f\u8bb8\u901a\u8fc7\u5e94\u7528\u9886\u57df\u77e5\u8bc6\u548cAlphaGo Zero\u4e2d\u63d0\u4f9b\u7684\u6280\u672f\uff0c\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u6bd4\u521b\u5efaAlphaGo Zero\u7684\u6210\u672c\u4f4e\u5f97\u591a\u7684\u6210\u672c\u5f97\u5230\u89e3\u51b3\u3002\n\u5bf9\u8fd9\u7bc7\u8bba\u6587\u7684\u4e00\u79cd\u5929\u771f\u7684\u89e3\u91ca\u662f\uff0c\u6240\u6709\u7684\u81ea\u73a9\u6bd4\u8d5b\u90fd\u662f\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fdb\u884c\u7684\u3002\u4f46\u8fd9\u6ca1\u6709\u9053\u7406\uff0c\u56e0\u4e3a\u4e00\u53f0\u673a\u5668\u5728\u4e09\u5929\u7684\u65f6\u95f4\u91cc\u53ea\u80fd\u8fdb\u884c[72(Hr)\u00d73600(s/hr)]\u00d70.4(s/move)=648,000\u6b21\u79fb\u52a8\uff0c\u800c\u8be5\u62a5\u62a5\u9053\u4e864,900,000\u573a\u6bd4\u8d5b\u3002\u663e\u7136\uff0c\u8fd9\u610f\u5473\u7740\u6709\u591a\u53f0\u81ea\u52a9\u6e38\u620f\u673a\u5e76\u884c\u8fd0\u884c\u3002--\u21a9", "note_en": "One of the most exciting signs of progress in machine learning in 2017 was the emergence of  AlphaGo as the best Go player in the world.In October, DeepMind published a  paper describing a new version of AlphaGo, called  AlphaGo Zero.After merely 36 hours of training, AlphaGo Zero had become better at Go than the  version of itself that defeated Lee Sedol.\n   Not only that, AlphaGo Zero learned to play Go without any prior knowledge of the game (in other words,  tabula rasa).By comparison, the  previously published version of AlphaGo was trained with the help of a database of human Go matches.\n This accomplishment is truly remarkable in that it shows that we can develop systems that teach themselves to do non-trivial tasks from a blank slate, and eventually become better than humans at doing the task.It suggests that a whole world of possibilities now are now within reach \u2013 just imagine computers that can teach themselves to do  anything that a human can do.\n But progress like this doesn\u2019t come cheap.Just as human mastery of Go requires years of training, computer mastery of Go requires an enormous amount of resources.I estimate that it costs around  $35 million in computing power to replicate the experiments reported in the  AlphaGo Zero paper.\n  AlphaGo Zero learns to play Go by simulating matches against itself in a procedure referred to as  self-play.The paper reports the following numbers:\n Self-play was performed on a single machine that contains  4 TPUs \u2013 special-purposecomputer chips built by Google and available for rental on their cloud computing service.\n  Parameter updates are powered by  64 GPUs and  19 CPUs, but as it turns out, thecost of these pale in comparison to the cost of the TPUs that were used for self-play.\n One number that is suspiciously missing is the number of self-play machines that were used over the course of the three days  1.Using an estimate of  211 moves per Go match on average, we come to a final number of  1,595 self-play machines, or  6,380 TPUs.( Calculations are below.)\n At the  quoted rate of  $6.50/TPU/hr (as of March 2018), the whole venture would cost  $2,986,822 in TPUs alone to replicate.And that\u2019s just the smaller of the two experiments they report:\n We subsequently applied our reinforcement learning pipeline to a second instance of AlphaGoZero using a larger neural network and over a longer duration. Training again started fromcompletely random behaviour and continued for approximately 40 days.\n The neural network used in the 40-day experiment has twice as many layers (of the same size) as the network used in the 3-day experiment, so making a single move takes about twice as much computer thinking time, assuming nothing else changed about the experiment.With this in mind, going back through the series of calculations leads us to a final cost of  $35,354,222 in TPUs to replicate the 40-day experiment.\n In terms of actual cost to DeepMind (a subsidiary of Google\u2019s parent company) to run the experiment, there are other factors that need to be taken into account, such as researcher salaries, or that the quoted TPU rate probably includes a healthy amount of margin.But for someone outside Google, this number is a good ballpark estimate of how much it would cost to replicate this experiment.\n  Another way to look at the staggering cost of the AlphaGo Zero experiment is to imagine how many  human brains would be required to provide the same amount of energy.\n       This is not to say that AlphaGo Zero is not an amazing achievement (it is!).AlphaGo Zero showed the world that it is possible to build systems to teach themselves to do complicated tasks.It\u2019s just that developing this sort of general technology is still not available to the masses.\n That said, many problems that have real-world value don\u2019t require (1) learning  tabula rasa or (2) superhuman performance.Perhaps, through applying domain knowledge along with techniques presented in AlphaGo Zero, these problems can be solved for much cheaper than it would cost to create AlphaGo Zero.\n    A na\u00efve interpretation of the paper is that all the self-play matches took place on a single machine. But this doesn\u2019t make sense, because a single machine is only capable of making [72 (hr) \u00d7 3600 (s/hr)] \u00f7 0.4 (s/move) =  648,000 moves over the course of three days, whereas the paper reports that  4,900,000 matches were played. Clearly this means that there were multiple self-play machines running in parallel.\u00a0 \u21a9", "posttime": "2020-06-11 16:31:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "alpha,alphago", "title": "Alpha Go\u4ece\u5934\u5f00\u59cb\u518d\u57f9\u8bad\u8017\u8d443600\u4e07\u7f8e\u5143", "title_en": "Alpha Go cost 36M to retrain from scratch", "transed": 1, "url": "https://www.yuzeh.com/data/agz-cost.html", "via": "", "real_tags": ["alpha", "alphago"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006114, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u6211\u5f00\u59cb\u6ce8\u610f\u5230\uff0c\u6211\u7f16\u5199\u7684\u5927\u591a\u6570\u6ce8\u91ca\u8981\u4e48\u662f\u591a\u4f59\u7684\uff0c\u8981\u4e48\u662f\u4ee3\u7801\u4e2d\u5176\u4ed6\u5931\u8d25\u7684\u501f\u53e3\u3002\n\u81ea\u4ece\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u5728\u6709\u610f\u8bc6\u5730\u52aa\u529b\u4ece\u6211\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\u5220\u9664\u5927\u90e8\u5206\u6ce8\u91ca\u3002\n\u6211\u53d1\u73b0\u8bc4\u8bba\u5927\u4f53\u4e0a\u53ef\u4ee5\u5f52\u5165\u51e0\u4e2a\u5e38\u89c1\u7684\u7c7b\u522b\u3002\u4ee5\u4e0b\u662f\u6211\u4e00\u76f4\u4ee5\u6765\u5904\u7406\u6bcf\u4e00\u4e2a\u95ee\u9898\u7684\u65b9\u5f0f\uff1a\n\u6211\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u4f7f\u7528\u6ce8\u91ca\uff0c\u800c\u5c06\u4ee3\u7801\u63d0\u53d6\u5230\u65b9\u6cd5\u4f1a\u66f4\u597d\u3002\n\u73b0\u5728\u6211\u4e0d\u9700\u8981\u4e86\u89e3\u514d\u8d39\u9001\u8d27\u662f\u5982\u4f55\u5e94\u7528\u7684\uff0c\u53ea\u9700\u8981\u4e86\u89e3\u5b83\u662f\u5728\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u65f6\u5e94\u7528\u7684\u3002\n\u7b2c\u4e00\u884c\u5408\u5e76\u4e86\u4e24\u4e2a\u5173\u6ce8\u70b9\uff1b\u4ed8\u6b3e\u662f\u5426\u5230\u671f\uff0c\u4ee5\u53ca\u4ed8\u6b3e\u5230\u671f\u65f6\u8be5\u600e\u4e48\u529e\u3002\n\u5c06\u8c13\u8bcd\u79fb\u5165\u5177\u6709\u9002\u5f53\u540d\u79f0\u7684\u65b0\u53d8\u91cf\u4e2d\uff0c\u53ef\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\uff0c\u5e76\u6d88\u9664\u5bf9\u6ce8\u91ca\u7684\u9700\u8981\uff1a\n\u6ce8\u610f\uff1a\u6211\u751a\u81f3\u53ef\u4ee5\u5728\u8fd9\u91cc\u66f4\u8fdb\u4e00\u6b65\uff0c\u5c06\u8c13\u8bcd\u5c01\u88c5\u5728Order\u5bf9\u8c61\u4e2d\uff1aorder.PaymentDue\u3002\n\u5f53\u6211\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u7136\u540e\u7a0d\u540e\u4f7f\u7528\u5b83\u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u6700\u5e38\u89c1\u3002\n\u5982\u679c\u8be5\u53d8\u91cf\u547d\u540d\u4e0d\u5f53\uff0c\u6211\u4f1a\u672c\u80fd\u5730\u5199\u4e00\u6761\u6ce8\u91ca\uff0c\u89e3\u91ca\u4f7f\u7528\u5b83\u7684\u4ee3\u7801\u5728\u505a\u4ec0\u4e48\u3002\n\u6ce8\u610f\uff1a\u5f53\u7136\uff0c\u58f0\u660e\u548c\u4f7f\u7528\u53d8\u91cf\u4e4b\u95f4\u5dee\u8ddd\u4e0d\u5927\u7684\u8f83\u77ed\u51fd\u6570\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\u6211\u901a\u5e38\u5728\u7f16\u5199\u8111\u6d77\u4e2d\u5c1a\u672a\u5b8c\u5168\u6210\u5f62\u7684\u4ee3\u7801\u65f6\u6dfb\u52a0\u8fd9\u4e9b\u6ce8\u91ca\u3002\n\u6211\u77e5\u9053\u6211\u9700\u8981\u4ee3\u7801\u505a\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u7f16\u5199\u5b8c\u6210\u5de5\u4f5c\u7684\u7b2c\u4e00\u4ef6\u4e8b\u3002\n\u8fd9\u7c7b\u4ee3\u7801\u901a\u5e38\u4f34\u968f\u7740\u4e00\u4e2a\u6ce8\u91ca\uff0c\u8be5\u6ce8\u91ca\u89e3\u91ca\u4ee3\u7801\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u89e3\u91ca\u5b83\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002\n\u6211\u5e94\u8be5\u505a\u7684\u662f\u8fd4\u56de\u5e76\u91cd\u6784\u4ee3\u7801\uff0c\u4f7f\u5176\u81ea\u6587\u6863\u5316\uff0c\u4f7f\u6ce8\u91ca\u53d8\u5f97\u4e0d\u5fc5\u8981\u3002\n\u6709\u65f6\u5019\uff0c\u6211\u4f1a\u8bfb\u5230\u6211\u524d\u6bb5\u65f6\u95f4\u5199\u7684\u4ee3\u7801\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u5199\u5f97\u8fd9\u4e48\u5947\u602a\u3002\n\u901a\u5e38\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u5bf9\u5b83\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u53d1\u73b0\u5b83\u7684\u901f\u5ea6\u8981\u5feb\u5f97\u591a\uff0c\u6216\u8005\u56e0\u4e3a\u5b83\u6355\u6349\u5230\u4e86\u4e00\u79cd\u8fb9\u7f18\u60c5\u51b5\uff0c\u800c\u505a\u540c\u6837\u4e8b\u60c5\u7684\u66f4\u76f4\u89c2\u7684\u65b9\u6cd5\u53ef\u80fd\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\n//\u8fdb\u884c\u6027\u80fd\u5206\u6790\u65f6\uff0c\u8fd0\u884c\u4e24\u4e2a\u5355\u72ec\u7684\u67e5\u8be2\u5e76\u5c06\u7ed3\u679c\u5408\u5e76\u5230\u5185\u5b58\u4e2d//\u6bd4\u5728SQLvar USERS=sql\u4e2d\u6267\u884c\u8fde\u63a5\u5feb2\u500d\u3002GetUsers()\uff1bvar task=sql\u3002GetAllTasks()\uff1b.\u3002\u7b49\u7b49\u3002\n\u6211\u5199\u7684\u5927\u591a\u6570\u8bc4\u8bba\u90fd\u51fa\u81ea\u61d2\u60f0\u7684\u7f16\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u547d\u540d\u66f4\u597d\u7684\u4e1c\u897f\u6216\u6dfb\u52a0\u66f4\u591a\u7684\u62bd\u8c61\u6765\u6d88\u9664\u3002\n\u6211\u53d1\u73b0\uff0c\u5f53\u6211\u4e13\u6ce8\u4e8e\u5220\u9664\u4ee3\u7801\u4e2d\u7684\u5927\u90e8\u5206\u6ce8\u91ca\u65f6\uff0c\u5b83\u5b9e\u9645\u4e0a\u53d8\u5f97\u66f4\u5177\u53ef\u8bfb\u6027\u3002\u4f8b\u5916\u7684\u662f\u89e3\u91ca\u539f\u56e0\u7684\u8bc4\u8bba\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u89e3\u91ca\u7684\u8bc4\u8bba\u3002", "note_en": "Recently I\u2019ve started to notice that the majority of comments I write are either redundant, or are excuses for other failings in my code.\n  Since that realisation, I\u2019ve been making a conscious effort to eliminate the majority of comments from the code I write.\n  I find that comments generally fall into a handful of common categories. Here\u2019s how I\u2019ve been dealing with each:\n    I often find myself using a comment, when extracting code to a method would be better.\n          Now I don\u2019t need to understand  how free shipping is applied, only that it  is applied when this condition is satisfied.\n        That first line conflates two concerns; whether a payment is due, and what to do when it is.\n  Moving the predicate in to a new variable, with an appropriate name, makes the code easier to read and eliminates the need for the comment:\n    Note: I might even go one step further here and encapsulate the predicate inside the Order object:  order.PaymentDue\n    This most commonly occurs when I\u2019m declaring a variable, then using it some time later.\n  If that variable is poorly named, I\u2019ll instinctively write a comment explaining what code that uses it is doing.\n        Note: Shorter functions, where there isn\u2019t a large gap between declaring and using a variable would also help, of course\n    I usually add these comments when I\u2019m writing code that isn\u2019t fully-formed in my head yet.\n  I have some idea what I need the code to do, so I write the first thing that does the job.\n  This kind of code is often accompanied by a comment that explains  what the code does, rather than  why it does it.\n  What I  should do is go back and refactor the code to make it self-documenting, making the comment un-necessary.\n      Sometimes, I come to code I\u2019ve written a while ago and have  no idea why it is written in such a strange way.\n  Often, it\u2019s because I\u2019ve profiled it and found it to be significantly faster, or because it catches an edge-case that a more intuitive method of doing the same thing might not:\n  // When profiled, running two seperate queries and combining the results in  // memory is 2x faster that doing the join in SQL var  users  =  sql . GetUsers (); var  tasks  =  sql . GetAllTasks (); ...  etc  ...\n        The majority of comments I write are a born out of lazy coding, and can be eliminated by simply naming things better or adding more abstraction.\n  I\u2019m find that when I focus on removing the majority of comments from my code, it actually becomes  more readable. The exception is comments that explain why, not how.", "posttime": "2020-06-11 16:14:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,eliminate", "title": "\u6211\u7684\u4efb\u52a1\u662f(\u51e0\u4e4e)\u6d88\u9664\u4ee3\u7801\u6ce8\u91ca", "title_en": "My mission to (almost) eliminate code comments", "transed": 1, "url": "http://www.davejsaunders.com/2020/06/10/eliminating-code-comments.html", "via": "", "real_tags": ["\u4ee3\u7801", "eliminate"]}, {"category": "", "categoryclass": "", "imagename": "2466f663e288e4788c892ad942733694.jpeg", "infoid": 1006113, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u624b\u673a\u5f00\u53d1\u8005\u544a\u8bc9CNBC\uff0c\u82f9\u679c\u6b63\u5728\u6253\u51fb\u4e0e\u65b0\u51a0\u80ba\u708e\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u76f8\u5173\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u6765\u81ea\u653f\u5e9c\u6216\u533b\u9662\u7b49\u516c\u8ba4\u7684\u673a\u6784\u3002\n\u56db\u540d\u72ec\u7acb\u5f00\u53d1\u8005\u544a\u8bc9CNBC\uff0c\u82f9\u679c\u62d2\u7edd\u4e86\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5c06\u5141\u8bb8\u4eba\u4eec\u770b\u5230\u54ea\u4e9b\u56fd\u5bb6\u5df2\u7ecf\u786e\u8ba4\u4e86\u65b0\u51a0\u80ba\u708e\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u7684\u7edf\u8ba1\u6570\u636e\u3002\u5176\u4e2d\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u6765\u81ea\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(WHO)\u7b49\u53ef\u9760\u6765\u6e90\u7684\u516c\u5171\u6570\u636e\u6765\u521b\u5efa\u4eea\u8868\u76d8\u6216\u5b9e\u65f6\u5730\u56fe\u3002\u4e00\u4e9b\u5f00\u53d1\u8005\u8981\u6c42\u4e0d\u5177\u540d\uff0c\u4ee5\u514d\u82f9\u679c\u7684\u5ba1\u67e5\u8fc7\u7a0b\u8fdb\u4e00\u6b65\u590d\u6742\u5316\u3002\n\u4e00\u540d\u5f00\u53d1\u4eba\u5458\u8bf4\uff0c\u82f9\u679c\u516c\u53f8\u7684\u4e00\u540d\u5458\u5de5\u5728\u7535\u8bdd\u4e2d\u89e3\u91ca\u8bf4\uff0c\u4efb\u4f55\u4e0e\u51a0\u72b6\u75c5\u6bd2\u76f8\u5173\u7684\u4e1c\u897f\u90fd\u5fc5\u987b\u7531\u5b98\u65b9\u536b\u751f\u7ec4\u7ec7\u6216\u653f\u5e9c\u53d1\u5e03\u3002\u6839\u636eCNBC\u770b\u5230\u7684\u4e00\u5f20\u622a\u56fe\uff0c\u53e6\u4e00\u4f4d\u5f00\u53d1\u8005\u5f97\u5230\u7684\u4e66\u9762\u56de\u5e94\u662f\uff0c\u5e26\u6709\u5f53\u524d\u533b\u7597\u4fe1\u606f\u4fe1\u606f\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7531\u4e00\u5bb6\u516c\u8ba4\u7684\u673a\u6784\u63d0\u4ea4\u3002\n\u82f9\u679c\u4e00\u76f4\u5728\u4e13\u95e8\u8bc4\u4f30\u51a0\u72b6\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u9632\u6b62\u9519\u8bef\u4fe1\u606f\u7684\u4f20\u64ad\u3002\u636e\u4e00\u4f4d\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u5b83\u65e2\u8003\u5bdf\u4e86\u5065\u5eb7\u6570\u636e\u7684\u6765\u6e90\uff0c\u4e5f\u8003\u5bdf\u4e86\u5f00\u53d1\u4eba\u5458\u662f\u5426\u4ee3\u8868\u4e86\u7528\u6237\u53ef\u4ee5\u4fe1\u4efb\u7684\u7ec4\u7ec7\uff0c\u6bd4\u5982\u653f\u5e9c\u6216\u4e13\u6ce8\u4e8e\u5065\u5eb7\u7684\u7ec4\u7ec7\uff0c\u53ef\u4ee5\u53d1\u5e03\u51c6\u786e\u7684\u6570\u636e\u3002\n\u8fd9\u4e00\u9650\u5236\u4f3c\u4e4e\u6b63\u5728\u594f\u6548\uff0c\u56e0\u4e3a\u641c\u7d22\u7ed3\u679c\u663e\u793a\uff0c\u51e0\u4e4e\u6ca1\u6709\u5173\u4e8e\u75ab\u60c5\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u6ca1\u6709\u660e\u663e\u7684\u5783\u573e\u90ae\u4ef6\u3002\u4f46\u8fd9\u4e5f\u53ef\u80fd\u4f1a\u51cf\u5c11\u4f7fiPhone\u7528\u6237\u80fd\u591f\u8ddf\u8e2a\u75ab\u60c5\u7684\u8f6f\u4ef6\u7684\u53ef\u7528\u6027\uff0c\u5e76\u5f15\u53d1\u5173\u4e8e\u8c01\u88ab\u5141\u8bb8\u4e3aiPhone\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u516c\u5e73\u95ee\u9898\u3002\n\u6b64\u4e3e\u51fa\u53f0\u4e4b\u9645\uff0c\u8bb8\u591a\u5927\u578b\u79d1\u6280\u516c\u53f8\u90fd\u5728\u52aa\u529b\u5e94\u5bf9\u4e0e\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u76f8\u5173\u7684\u9519\u8bef\u4fe1\u606f\u5728\u5176\u5e73\u53f0\u4e0a\u7684\u5f71\u54cd\u3002\u4e0a\u4e2a\u6708\uff0c\u4e9a\u9a6c\u900a\u8b66\u544a\u5356\u5bb6\uff0c\u5b83\u5c06\u5220\u9664\u58f0\u79f0\u53ef\u4ee5\u6740\u6b7b\u51a0\u72b6\u75c5\u6bd2\u7684\u4ea7\u54c1\u7684\u5217\u8868\u3002Facebook\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c\u5468\u4e8c\u5199\u9053\uff0c\u4ed6\u4e13\u6ce8\u4e8e\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u80fd\u83b7\u5f97\u6709\u5173\u75ab\u60c5\u7684\u53ef\u4fe1\u548c\u51c6\u786e\u4fe1\u606f\uff0c\u5e76\u6b63\u5728\u5220\u9664\u5e26\u6709\u9634\u8c0b\u8bba\u7684\u5185\u5bb9\u3002\u8c37\u6b4c\u5c06\u6765\u81ea\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(World Health Organization)\u7684\u4fe1\u606f\u663e\u793a\u5728\u8c37\u6b4c\u641c\u7d22\u7684\u9876\u90e8\uff0c\u5e76\u5728\u4e00\u4e2a\u7279\u6b8a\u6a21\u5757\u4e2d\u663e\u793a\u4e86\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u4fe1\u606f\uff0c\u5e76\u7981\u6b62\u4e86\u6297\u51a0\u72b6\u75c5\u6bd2\u4ea7\u54c1\u7684\u5e7f\u544a\u3002\n\u4ee3\u8868\u5e94\u7528\u5f00\u53d1\u5546\u7684\u884c\u4e1a\u7ec4\u7ec7\u5e94\u7528\u534f\u4f1a(App Association)\u4e3b\u5e2d\u6469\u6839\u00b7\u91cc\u5fb7(Morgan Reed)\u8868\u793a\uff1a\u76ee\u524d\uff0c\u79d1\u6280\u884c\u4e1a\u6b63\u5728\u975e\u5e38\u52aa\u529b\u5730\u786e\u4fdd\u8fd9\u4e9b\u5e73\u53f0\u4e0d\u4f1a\u88ab\u7528\u6765\u5411\u4eba\u4eec\u63d0\u4f9b\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u865a\u5047\u4fe1\u606f\uff0c\u751a\u81f3\u66f4\u7cdf\u7cd5\u7684\u5371\u9669\u4fe1\u606f\u3002\u6211\u4eec\u770b\u5230\u5185\u90e8\u548c\u5916\u90e8\u90fd\u6709\u5de8\u5927\u7684\u538b\u529b\uff0c\u8981\u6c42\u5728\u7533\u8bf7\u548c\u5e7f\u544a\u4f24\u5bb3\u516c\u6c11\u4e4b\u524d\u505c\u6b62\u5b83\u4eec\u3002\n\u5468\u4e09\uff0c\u5728\u7f8e\u56fd\u7684App Store\u4e0a\u641c\u7d22\u51a0\u72b6\u75c5\u6bd2(Coronavirus)\uff0c\u7ed3\u679c\u5927\u591a\u662f\u826f\u6027\u7684\u3002\n\u6392\u540d\u7b2c\u4e00\u7684\u7ed3\u679c\u662f\u5df4\u897f\u653f\u5e9c\u53d1\u5e03\u7684\u4e00\u6b3e\u5173\u4e8e\u75ab\u60c5\u7684\u8461\u8404\u7259\u8bed\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u90a3\u4e0b\u9762\u662f\u4e00\u6b3e\u65e0\u5173\u7684\u5899\u7eb8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u6b3e\u6e38\u620f\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u7968\u623f\u6700\u9ad8\u7684\u6d41\u884c\u75c5\u6e38\u620f\u761f\u75ab\u516c\u53f8\uff0c\u52a0\u62ff\u5927\u5e7f\u64ad\u516c\u53f8\u7684\u5e94\u7528\u7a0b\u5e8f\u5927\u7eaa\u5143\u65f6\u62a5\uff0c\u4ee5\u53ca\u4e00\u6b3e\u7531\u533b\u7597\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5546Unbound\u53d1\u5e03\u7684\u5e26\u6709\u65b0\u51a0\u80ba\u708e\u4fe1\u606f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\nCOVID19&34\uff1b\u7684\u6700\u9ad8\u7ed3\u679c\u662f\u4e00\u5bb6\u540d\u4e3aHealthlynked\u7684\u5f00\u53d1\u5546\u63d0\u4f9b\u7684\u75c5\u6bd2\u8ddf\u8e2a\u5668\uff0c\u4e0a\u9762\u6807\u6709\u4e16\u536b\u7ec4\u7ec7\u786e\u8bca\u75c5\u4f8b\u7684\u6570\u5b57\u548c\u5730\u56fe\u3002\u76ee\u524d\uff0c\u5728\u7f8e\u56fd\u82f9\u679c\u7684\u5e94\u7528\u5546\u5e97\u91cc\uff0c\u5b83\u662f\u6392\u540d\u7b2c\u4e8c\u7684\u533b\u7597\u5e94\u7528\u3002\u4e0b\u9762\u662fUnbound\u5e94\u7528\u7a0b\u5e8f\u548c\u51e0\u4e2a\u4e2d\u6587\u5e94\u7528\u7a0b\u5e8f\u3002\nApp Review\u662f\u82f9\u679c\u5185\u90e8\u7684\u4e00\u4e2a\u90e8\u95e8\uff0c\u8d1f\u8d23\u5bf9\u6bcf\u4e00\u6b3eiPhone\u5e94\u7528\u8fdb\u884c\u4eba\u5de5\u7b5b\u9009\uff0c\u7136\u540e\u624d\u80fd\u5728\u82f9\u679c\u7684\u5e73\u53f0\u4e0a\u4e0b\u8f7d\u3002\u5b83\u4f9d\u9760\u4e00\u4efd\u540d\u4e3a\u201cApp Store Review Guidance\u201d\u7684\u6587\u4ef6\uff0c\u5411\u8f6f\u4ef6\u516c\u53f8\u8bc1\u660e\u4ed6\u4eec\u5173\u4e8eiPhone\u5141\u8bb8\u54ea\u4e9b\u529f\u80fd\u7684\u51b3\u5b9a\u662f\u5408\u7406\u7684\u3002\n\u66fe\u4f7f\u7528\u8fc7\u88ab\u82f9\u679c\u62d2\u7edd\u7684\u51a0\u72b6\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u8005\u8bf4\uff0c\u5ba1\u67e5\u8005\u5f15\u7528\u4e86\u7f16\u53f7\u4e3a5.2.1\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u5176\u4e2d\u89c4\u5b9a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u7531\u62e5\u6709\u6216\u5df2\u7ecf\u6388\u6743\u77e5\u8bc6\u4ea7\u6743\u548c\u5176\u4ed6\u76f8\u5173\u6743\u5229\u7684\u4e2a\u4eba\u6216\u6cd5\u4eba\u5b9e\u4f53\u63d0\u4ea4\u3002\nZachary Shakked\u5f00\u53d1\u5e2e\u52a9\u5c0f\u4f01\u4e1a\u7ba1\u7406\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ed6\u8868\u793a\uff0c\u5c3d\u7ba1\u4ed6\u540c\u60c5\u82f9\u679c\u516c\u53f8\u9632\u6b62\u9519\u8bef\u4fe1\u606f\u7684\u9700\u8981\uff0c\u4f46\u4ed6\u8fc7\u53bb\u53d1\u5e03\u7684\u5e94\u7528\u7a0b\u5e8f\u8bc4\u7ea7\u5f88\u9ad8\uff0c\u4e0b\u8f7d\u91cf\u9ad8\u8fbe\u6570\u5341\u4e07\u6b21\uff0c\u5e76\u5efa\u8bae\u5efa\u7acb\u4e00\u4e2a\u5206\u7ea7\u7cfb\u7edf\uff0c\u5c06\u5783\u573e\u90ae\u4ef6\u53d1\u9001\u8005\u6216\u9519\u8bef\u4fe1\u606f\u53d1\u9001\u8005\u4e0e\u7ecf\u8fc7\u5ba1\u67e5\u7684\u5f00\u53d1\u8005\u5206\u5f00\u3002\n\u82f9\u679c\u5468\u4e09\u53d1\u5e03\u7684\u66f4\u65b0\u653f\u7b56\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c5.1.1.ix\uff0c\u8fd9\u4e0e\u5f00\u53d1\u4eba\u5458\u6240\u8bf4\u7684\u63a5\u8fd1\u4ed6\u4eec\u88ab\u544a\u77e5\u7684\u60c5\u51b5\u3002\u533b\u7597\u4fdd\u5065\u3001\u91d1\u878d\u670d\u52a1\u6216\u822a\u7a7a\u65c5\u884c\u7b49\u9ad8\u5ea6\u76d1\u7ba1\u9886\u57df\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7531\u63d0\u4f9b\u670d\u52a1\u7684\u6cd5\u4eba\u5b9e\u4f53\u63d0\u4ea4\uff0c\u800c\u4e0d\u662f\u7531\u4e2a\u4eba\u5f00\u53d1\u8005\u63d0\u4ea4\u3002\n\u82f9\u679c\u7684App Store\u653f\u7b56\u62db\u81f4\u6279\u8bc4\uff0c\u79f0\u5176\u9ad8\u6df1\u83ab\u6d4b\uff0c\u4e00\u4e9b\u7ade\u4e89\u5bf9\u624b\u58f0\u79f0\uff0c\u9274\u4e8eApp Store\u662f\u5411\u516c\u4f17\u5206\u53d1iPhone\u8f6f\u4ef6\u7684\u552f\u4e00\u9014\u5f84\uff0c\u82f9\u679c\u7684\u6743\u529b\u592a\u5927\u3002\nSpotify\u9996\u5e2d\u6267\u884c\u5b98\u4e39\u5c3c\u5c14\u00b7\u57c3\u514b\u57282019\u5e74\u5199\u9053\uff0cApp Store\u7684\u89c4\u5b9a\u6545\u610f\u9650\u5236\u9009\u62e9\uff0c\u627c\u6740\u521b\u65b0\uff0c\u4ee5\u727a\u7272\u7528\u6237\u4f53\u9a8c\u4e3a\u4ee3\u4ef7\uff0c\u5e76\u5411\u6b27\u76df\u63d0\u51fa\u7533\u8bc9\u3002\n\u57281\u6708\u4efd\u7684\u4e00\u6b21\u56fd\u4f1a\u542c\u8bc1\u4f1a\u4e0a\uff0c\u4e3aApp Store\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684Tile\u516c\u53f8\u7684\u603b\u6cd5\u5f8b\u987e\u95ee\u4f5c\u8bc1\u8bf4\uff0c\u82f9\u679c\u516c\u53f8\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\u89c4\u5219\u3002Basecamp\u521b\u59cb\u4eba\u5927\u536b\u00b7\u6d77\u5185\u8fc8\u5c14\u00b7\u6c49\u68ee(David Heinemeier Hansson)\u5728\u540c\u4e00\u573a\u542c\u8bc1\u4f1a\u4e0a\u8868\u793a\uff0c\u6bcf\u4e00\u4e2a\u4f7f\u7528App Store\u7684\u5e94\u7528\u7a0b\u5e8f\u5236\u9020\u5546\u90fd\u751f\u6d3b\u5728\u6050\u60e7\u4e4b\u4e2d\uff0c\u62c5\u5fc3\u4ed6\u4eec\u7684\u7533\u8bf7\u4f1a\u88ab\u62d2\u7edd\uff0c\u4e0a\u8bc9\u7a0b\u5e8f\u4f1a\u8ba9\u5361\u592b\u5361\u8138\u7ea2\u3002\n\u8c37\u6b4c\u7684\u5b89\u5353\u5e94\u7528\u5546\u5e97\u8c37\u6b4cPlay\u6709\u4e00\u6761\u89c4\u5b9a\uff0c\u7981\u6b62\u5e94\u7528\u5229\u7528\u81ea\u7136\u707e\u5bb3\u6216\u66b4\u884c\u83b7\u5229\uff0c\u6216\u8005\u4f3c\u4e4e\u4ece\u60b2\u5267\u4e8b\u4ef6\u4e2d\u83b7\u5229\uff0c\u800c\u53d7\u5bb3\u8005\u5374\u6ca1\u6709\u660e\u663e\u7684\u597d\u5904\u3002\u5468\u56db\uff0c\u8c37\u6b4c\u5728\u7f8e\u56fd\u7684\u5e94\u7528\u5546\u5e97\u641c\u7d22\u51a0\u72b6\u75c5\u6bd2\u6216\u65b0\u51a0\u80ba\u708e\uff0c\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u7ed3\u679c\uff0c\u8fd9\u662f\u6545\u610f\u7684\u4e3e\u52a8\u3002\u5728\u8c37\u6b4c\u7684\u5b89\u5353\u5e94\u7528\u5546\u5e97\u4e2d\uff0c\u8c37\u6b4cPlay\u6709\u4e00\u6761\u89c4\u5b9a\uff0c\u7981\u6b62\u5229\u7528\u81ea\u7136\u707e\u5bb3\u6216\u66b4\u884c\u83b7\u5229\uff0c\u6216\u8005\u4f3c\u4e4e\u4ece\u60b2\u5267\u4e8b\u4ef6\u4e2d\u83b7\u5229\uff0c\u4f46\u5bf9\u53d7\u5bb3\u8005\u6ca1\u6709\u660e\u663e\u7684\u597d\u5904\u3002\u5468\u56db\uff0c\u5728\u8c37\u6b4c\u7f8e\u56fd\u7684\u5e94\u7528\u5546\u5e97\u4e0a\u641c\u7d22\u51a0\u72b6\u75c5\u6bd2\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u7ed3\u679c\uff0c\u8fd9\u662f\u6545\u610f\u7684\u4e3e\u52a8\u3002\u5728\u8c37\u6b4c\u7684\u5b89\u5353\u5e94\u7528\u5546\u5e97\u4e2d\uff0c\u8c37\u6b4cPlay\u6709\u4e00\u6761\u89c4\u5b9a\uff0c\u7981\u6b62\u5229\u7528\u81ea\u7136\u707e\u5bb3\u6216\u66b4\u884c\u83b7\u5229\uff0c\u6216\u8005\u4f3c\u4e4e\u4ece\u60b2\u5267\u4e8b\u4ef6\u4e2d\u83b7\u5229\uff0c\u4f46\u5bf9\u53d7\u5bb3\u8005\u6ca1\u6709\u660e\u663e\u7684\u597d\u5904\u3002\u5468\u56db\uff0c\u5728\u8c37\u6b4c\u7f8e\u56fd\u7684\u5e94\u7528\u5546\u5e97\u4e0a\u641c\u7d22\u51a0\u72b6\u75c5\u6bd2\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u7ed3\u679c\u3002\nGoogle Play\u8fd8\u53d1\u5e03\u4e86\u4e00\u4e2a\u540d\u4e3a\u201c\u51a0\u72b6\u75c5\u6bd2\uff1a\u4fdd\u6301\u77e5\u60c5\u201d\u7684\u7f51\u7ad9\uff0c\u5e76\u63d0\u4f9b\u4e86\u63a8\u8350\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\u75be\u63a7\u4e2d\u5fc3\u3001\u7ea2\u5341\u5b57\u4f1a\u548c\u63a8\u7279\u7684\u8f6f\u4ef6\u3002\n\u4e0e\u51a0\u72b6\u75c5\u6bd2\u76f8\u5173\u7684\u4e00\u4e9b\u6d41\u884c\u7684Android\u5e94\u7528\u7a0b\u5e8f\u5728iPhone\u4e0a\u4e0d\u53ef\u7528\u3002\u5468\u4e09\uff0c\u97e9\u56fd\u4e00\u6b3e\u9876\u7ea7\u7684\u514d\u8d39\u5b89\u5353\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u67093,000\u591a\u4f8b\u65b0\u51a0\u80ba\u708e\u786e\u8bca\u75c5\u4f8b\uff0c\u662f\u4e00\u6b3e\u5730\u56fe\u5e94\u7528\u7a0b\u5e8f\uff0c\u5f53\u7528\u6237\u5230\u8fbe\u786e\u8bca\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u7684\u767e\u7c73\u8303\u56f4\u5185\u65f6\uff0c\u5b83\u4f1a\u63d0\u9192\u7528\u6237\u3002\n\u8fd9\u6b3e\u540d\u4e3aCorona 1\u4ebf\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u7531\u516c\u5171\u536b\u751f\u6765\u6e90\u53d1\u5e03\u7684\uff0c\u6839\u636e\u5176Google Play\u5217\u8868\uff0c\u5b83\u81f3\u5c11\u6709100\u4e07\u6b21\u4e0b\u8f7d\u91cf\u3002\u5b83\u4e0d\u80fd\u5728iPhone\u4e0a\u4f7f\u7528\uff0c\u5f00\u53d1\u8005\u4e5f\u6ca1\u6709\u7acb\u5373\u56de\u590d\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u662f\u5426\u6709\u8ba1\u5212\u5728\u82f9\u679c\u7684App Store\u4e0a\u53d1\u5e03\u5b83\u3002", "note_en": "Apple is cracking down on apps related to the COVID-19 coronavirus outbreak that aren&#39;t from recognized institutions like governments or hospitals, iPhone developers told CNBC.\n Four independent developers told CNBC that Apple rejected their apps, which would allow people to see stats about which countries have confirmed cases of the COVID-19 coronavirus. Some of these apps used public data from reliable sources like the World Health Organization (WHO) to create dashboards or live maps. Some developers asked not to be named to avoid further complications with Apple&#39;s review process.\n  One developer said an Apple employee explained over the phone that\u00a0anything related to the coronavirus must be released by an official health organization or government. Another developer got a written response that &#34;apps with information about current medical information need to be submitted by a recognized institution,&#34; according to a screenshot seen by CNBC.\n Apple has been specifically evaluating coronavirus apps to prevent the spread of misinformation. It looks at both where the health data comes from and whether the developers represent organizations that users can trust to publish accurate data, like governments or health-focused organizations, according to a person familiar with the matter.\n The restriction appears to be working, as search results show few apps about the outbreak and no obvious spam. But it could also reduce the availability of software that would enable iPhone users to track the outbreak, and raise fairness questions about who is allowed to develop apps for iPhones.\n The move comes as\u00a0big tech companies have grappled with the effects of misinformation related to the coronavirus outbreak on their platforms. Last month,  Amazon warned sellers that it would take down listings for products that claim to kill coronavirus. Facebook CEO Mark Zuckerberg  wrote on Tuesday that he&#39;s &#34;focused on making sure everyone can access credible and accurate information&#34; about the outbreak and is removing content with conspiracy theories. Google presents information from the World Health Organization at the top of Google searches about the coronavirus in a special module and has  banned ads for anti-coronavirus products.\n &#34;Right now the technology industry is working very hard to ensure the platforms are not being used to provide people with false or, even worse, dangerous information about the coronavirus,&#34; said Morgan Reed, president of the App Association, an industry group that represents app developers. &#34;We are seeing significant pressure inside and outside to halt applications and advertisements before they harm citizens.&#34;\n  A search for &#34;coronavirus&#34; on the App Store on Wednesday in the United States revealed mostly benign results.\n The top result was a Portuguese-language app about the outbreak published by the Brazilian government. Below that was an unrelated wallpaper app, a game that looks  similar to\u00a0top-grossing\u00a0epidemic\u00a0game Plague Inc, the Canadian Broadcasting Corporation&#39;s app,  the Epoch Times, and an app with  COVID-19 information published by Unbound, a developer of medical apps.\n The top result for &#34;COVID 19&#34; is a &#34;virus tracker&#34; from a  developer called Healthlynked with WHO figures and maps charting where confirmed cases have been. It&#39;s currently No. 2. for medical apps on Apple&#39;s app store in the United States. Below that is the Unbound app and several Chinese-language apps.\n  App Review, the department inside Apple that manually screens every single iPhone app before they become available to download on Apple&#39;s platforms, relies on a document\u00a0called the  App Store Review Guidelines to justify their decisions to software companies about what&#39;s allowed on iPhones.\n Developers who had coronavirus apps rejected by Apple said that reviewers cited a guideline numbered 5.2.1, which says that &#34;apps should be submitted by the person or legal entity that owns or has licensed the intellectual property and other relevant rights.&#34;\n  Zachary Shakked,  who makes apps to help small businesses manage social media accounts, said although he was sympathetic to Apple&#39;s need to prevent misinformation, he had published apps in the past with high ratings and hundreds of thousands of downloads, and suggested a tiered system to separate spammers or misinformation from vetted developers.\n An updated policy published by Apple on Wednesday has a new item, 5.1.1.ix, which is close to what developers said they were told. Apps in &#34;highly-regulated&#34; fields like healthcare, financial services, or air travel need to be submitted by a &#34;legal entity that provides the services, and not by an individual developer.&#34;\n Apple&#39;s App Store policies have drawn criticism for being\u00a0 inscrutable, and some competitors have claimed Apple has too much power given that the App Store is the only way to distribute software for iPhones to the public.\n Spotify CEO Daniel Ek  wrote in 2019 that App Store rules &#34;purposely limit choice and stifle innovation at the expense of the user experience&#34; and filed a complaint with the EU.\n At a congressional hearing in January, the general counsel of Tile, which makes an app for the App Store, testified that Apple &#34;can change the rules when it wants.&#34;\u00a0\u00a0Basecamp founder David Heinemeier Hansson said at the same hearing that every &#34;application maker using the App Store lives in fear that their application is denied&#34; and that the appeals process would make &#34;Kafka blush.&#34;\n  Google Play, Google&#39;s Android app store, has a  rule against apps that &#34;capitalize on a natural disaster&#34; or &#34;atrocity&#34; or appears to &#34;profit from a tragic event with no discernible benefit to the victims.&#34; On Thursday, a search for &#34;coronavirus&#34; or &#34;COVID-19&#34; returned no results on Google&#39;s app store in the United States, an intentional move from Google to prevent misinformation.\n Google\u00a0Play also published a website called &#34; Coronavirus: Stay informed&#34; with suggested apps, including software from the CDC, Red Cross, and Twitter.\n  Some popular Android apps related to the coronavirus are not available for iPhones. On Wednesday, a top free Android app in South Korea, which has over 3,000 confirmed cases of COVID-19, was a mapping app that alerts users when they have been within 100 meters of where a confirmed coronavirus case had been.\n The app,  Corona 100m, is not published by a public health source and has at least 1 million downloads, according to its Google Play listing. It&#39;s not available for iPhone and the developer didn&#39;t immediately return an email asking if there were plans to release it for Apple&#39;s App Store.", "posttime": "2020-06-11 16:14:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u82f9\u679c,coronavirus,\u75c5\u6bd2,app", "title": "\u82f9\u679c\u516c\u53f8\u62d2\u7edd\u4f7f\u7528\u975e\u536b\u751f\u7ec4\u7ec7\u7684\u51a0\u72b6\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f", "title_en": "Apple is rejecting coronavirus apps that aren\u2019t from health organizations", "transed": 1, "url": "https://www.cnbc.com/2020/03/05/apple-rejects-coronavirus-apps-that-arent-from-health-organizations.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u82f9\u679c", "\u75c5\u6bd2", "app"]}, {"category": "", "categoryclass": "", "imagename": "81a09ad0a0d16d2c8438597209d4cf13.jpg", "infoid": 1006112, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b83\u4e0d\u662f\u7535\u5b50\u58a8\u6c34\uff0c\u5b83\u6709\u4e00\u79cd\u53eb\u505aRLCD\u7684\u5168\u65b0\u6280\u672f\uff0c\u6240\u4ee5\u6211\u5bf9\u8fd9\u6b3e\u4ea7\u54c1\u975e\u5e38\u5174\u594b\uff0c\u56e0\u4e3a\u6211\u60f3\u770b\u770bRLCD\u7684\u5b9e\u9645\u5e94\u7528\u3002\u6d77\u4fe1A5 PROC\u4e0d\u662fRLCD\uff0c\u4f46\u901f\u5ea6\u4ecd\u7136\u5f88\u5feb\uff0c\u6240\u4ee5\u6211\u60f3\u77e5\u9053\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u6280\u672f\uff1f\u9ed1\u767d\u7684\u5417\uff1f\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5b83\u66f4\u5feb&#34\uff1b\n\u6211\u77e5\u9053\u4ed6\u4eec\u4eca\u5929\u53d1\u5e03\uff0c\u6240\u4ee5\u6211\u5728\u4e2d\u6587\u7f51\u4e0a\u641c\u7d22\u4e86\u5f88\u591a\u6b21(+30\u5206\u949f)\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86\u3002\n\u7f16\u8f91\uff1aYoutube\u94fe\u63a5\u540c\u4e00\u4e2a\u89c6\u9891\uff0c\u5982\u679c\u4f60\u559c\u6b22\u7684\u8bdd\uff1ahttps://www.youtube.com/watch?v=3DBztaY51V8this\u7b80\u76f4\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5feb\u7684\uff0c\u5b83\u7684\u901f\u5ea6\u548c\u6db2\u6676\u663e\u793a\u5668\u4e00\u6837\u5feb\uff01\n\u4f60\u53ef\u4ee5\u770b\u5f55\u50cf\u5e26\uff0c\u6ca1\u95ee\u9898\uff0c\u5927\u6982\u81f3\u5c1133 hz\u5427\uff01\uff01\u5b83\u6bd4\u5927\u5b8b\u6700\u597d\u7684\u4ea7\u54c1\u8fd8\u5feb\uff0c\u53ea\u9700\u8981325\u7f8e\u5143\u3002\n\u6d77\u4fe1\uff0c\u4f60\u4eec\u662f\u6211\u7684\u82f1\u96c4\uff0c\u8c22\u8c22\u4f60\u4eec\u7ed9\u6211\u53ef\u601c\u7684\u773c\u775b\uff0c\u6211\u5bf9\u8fd9\u6b3e\u4ea7\u54c1\u592a\u5938\u5f20\u4e86\uff01\uff01\n\u7f16\u8f91\uff1a\u60a8\u4e5f\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u663e\u793a\u5668\uff0c\u5b83\u6709\u4e00\u4e2aHDMI\u7aef\u53e3https://www.e-ink-info.com/hisense-q5", "note_en": "it s not eink guys it has a totally new technology called RLCDso I was really excited about this product because I want to see RLCD in action .Hisense A5 pro cc wasnt RLCD but still fast so I was wondering &#34; why they used another tech? for black and white ? it probably means it s even faster&#34;\n I know they release it today so I search A LOT in chinese internet(+30min ) and FINALLY I FOUND IT\n  Edit : youtube link of the same video if you prefer :  https://www.youtube.com/watch?v=3DBztaY51V8this is simply THE FASTEST EVER it s as fast as an lcd!!!!\n  you can watch a video no problem it s probably at least 33hz!!it s faster than dasung best product and only 325 dollars\n  HISENSE YOU ARE MY HEROES thanks you for my poor eyes I am so sooooo hyped about this product!!\n edit : you can also use this as a monitor it has a HDMI port  https://www.e-ink-info.com/hisense-q5", "posttime": "2020-06-11 15:40:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rlcd,technology", "title": "RLCD\uff0c\u6bd4E-Ink\u672c\u8eab\u66f4\u597d\u7684\u6280\u672f\uff1f", "title_en": "RLCD, better technology than E-Ink itself?", "transed": 1, "url": "https://www.reddit.com/r/eink/comments/h0fj3s/new_ereader_hisense_q5_new_tech_rlcd_the_best_of/", "via": "", "real_tags": ["rlcd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006111, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Spark\u4ee5\u4e00\u79cd\u5b8c\u5168\u72ec\u7acb\u4e8e\u6570\u636e\u5206\u533a\u65b9\u5f0f\u7684\u65b9\u5f0f\u751f\u6210\u968f\u673a\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u79cd\u5b50\uff0c\u6211\u4eec\u7684Spark\u7a0b\u5e8f\u5c06\u5728\u6240\u6709\u786c\u4ef6\u548c\u8bbe\u7f6e\u4e0a\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684PRNG\uff0c\u5e76\u4f7f\u7528TestU01\u548cPractRand\u6d4b\u8bd5\u5957\u4ef6\u6765\u8bc4\u4f30\u5176\u8d28\u91cf\u3002\n\u5f53\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5bf9\u4e0d\u540c\u503c\u7684\u975e\u968f\u673a\u53c2\u6570\u91cd\u590d\u5b9e\u9a8c\u65f6\uff0c\u53ef\u91cd\u73b0\u7684\u4f2a\u968f\u673a\u5e8f\u5217\u7279\u522b\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u8fd0\u884c\u4e00\u9879\u9700\u8981\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u6837\u672c\u7684\u5b9e\u9a8c\u3002\u7136\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u9488\u5bf9\u5b8c\u5168\u76f8\u540c\u7684\u968f\u673a\u6837\u672c\u6539\u53d8\u5b9e\u9a8c\u53c2\u6570\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u8f7b\u677e\u5730\u5bf9\u5176\u4ed6\u6837\u672c\u8fd0\u884c\u5b9e\u9a8c\u3002\n\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u9644\u5e26\u4e00\u4e2a\u6216\u591a\u4e2a\u5185\u7f6e\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668(PRNG)\u3002\u5982\u679c\u4f60\u6b63\u5728\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u7528\u8fc7\u51e0\u6b21\u4e86\u3002\nPRNG\u7684\u7c7b\u578b\u5f88\u591a\uff0c\u800c\u4e14\u5927\u90e8\u5206\u90fd\u662f\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u8fd0\u4f5c\u7684\u3002\u60a8\u8bbe\u7f6e\u4e00\u4e2a\u5f00\u59cb\u72b6\u6001(\u79cd\u5b50)\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8c03\u7528\uff0c\u60a8\u5c06\u83b7\u5f97\u56fa\u5b9a\u7684\u4f4d\u6570(\u901a\u5e38\u4e00\u6b2132\u4f4d\u621664\u4f4d\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u6570\u5b57)\u3002\u5982\u679c\u60a8\u77e5\u9053\u79cd\u5b50\uff0c\u5219\u53ef\u4ee5\u91cd\u590d\u751f\u6210\u76f8\u540c\u7684\u4f4d\u5e8f\u5217\u3002\n\u200c\u8fd9\u79cdPRNG\u7684\u57fa\u672c\u8bbe\u8ba1\u4e0d\u9002\u5408\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u4f7f\u7528\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5e76\u884c\u751f\u6210\u968f\u673a\u5e8f\u5217\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4e3a\u6bcf\u4e2a\u5e76\u884c\u8fdb\u7a0b\u4f7f\u7528\u76f8\u540c\u7684PRNG\u548c\u4e0d\u540c\u7684\u79cd\u5b50\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u5f53\u5e76\u884c\u5ea6\u7ea7\u522b\u6539\u53d8\u65f6\uff0c\u4ea7\u751f\u7684\u5e8f\u5217\u4e5f\u4f1a\u6539\u53d8\u3002\n\u200cSpark SQL\u63d0\u4f9b\u4e86rand()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c31\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u4e3a\u6bcf\u4e2a\u5206\u533a\u521b\u5efaPRNG\u7684\u5b9e\u4f8b\uff0c\u5e76\u7531\u5168\u5c40\u79cd\u5b50\u52a0\u4e0a\u5206\u533a\u7d22\u5f15\u4f5c\u4e3a\u79cd\u5b50(\u53c2\u89c1eval\u548ccodegen)\u3002\u5982\u679c\u60a8\u7684Spark\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u7fa4\u96c6\u62d3\u6251\u4e0a\u3001\u4ee5\u4e0d\u540c\u7684\u6a21\u5f0f\u3001\u4f7f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u6267\u884c\uff0c\u6216\u8005\u5982\u679cSpark\u7684\u65b0\u7248\u672c\u6539\u53d8\u4e86\u9ed8\u8ba4\u503c\uff0c\u5219\u5206\u533a\u53ef\u80fd\u4f1a\u6539\u53d8\u3002\n\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528Spark\u4e3aDataSet\u4e2d\u7684\u884c\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u5e8f\u5217\uff0c\u4ee5\u4fbf\u8be5\u65b9\u6cd5\u4e0e\u6570\u636e\u5982\u4f55\u5206\u533a\u4ee5\u53caSpark\u4f5c\u4e1a\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u5e95\u5c42\u5806\u6808\u5b8c\u5168\u65e0\u5173\u3002\n\u8be5\u7b97\u6cd5\u57fa\u672c\u4e0a\u679a\u4e3e\u884c\uff0c\u7136\u540e\u5c06\u54c8\u5e0c\u51fd\u6570\u5e94\u7528\u4e8e\u884c\u7d22\u5f15\u3002\u6563\u5217\u503c\u662f\u4f2a\u968f\u673a\u6570\u3002\n\u6211\u6000\u7591\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u60f3\u6cd5\uff0c\u4f46\u5f53\u6211\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u4f7f\u7528\u5b83\u7684\u4f8b\u5b50\u3002\u56e0\u6b64\uff0c\u5728\u8fdb\u5165\u7ec6\u8282\u4e4b\u524d\uff0c\u6211\u60f3\u5206\u4eab\u4e00\u4e0b\u6211\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u80cc\u540e\u7684\u76f4\u89c9\u3002\n\u200c\u7ebf\u6027\u540c\u4f59\u751f\u6210\u65cf(LCG)\u4e0e\u6559\u79d1\u4e66\u4e0a\u7684\u591a\u91cdmod\u7d20\u6570\u6563\u5217\u51fd\u6570\u6709\u76f8\u4f3c\u4e4b\u5904(\u60a8\u77e5\u9053\uff0ch(X)=ax+bm od\u2009\u2009p h(X)=ax+b\\mod p h(X)=ax+bm o d p\uff0c\u5bf9\u4e8e\u968f\u673a\u9009\u62e9\u7684a a\uff0cb b\u548c\u7d20\u6570p p\uff0ch(X)=ax+b m o d p)\u3002\u57fa\u672c\u4e0a\uff0c\u5bf9LCG\u7684\u72b6\u6001\u8fdb\u884c\u6563\u5217\u4ee5\u751f\u6210\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u8be5\u6570\u5b57\u5c31\u662f\u65b0\u72b6\u6001\u3002\u4e58\u6cd5\u6a21\u7d20\u6570\u671f\u671b\u5c06\u8f93\u5165\u6570\u5b57\u5e8f\u5217\u7684\u6563\u5217\u503c\u5206\u6563\u5728[0\uff0cp\u22121][0\uff0cp-1][0\uff0cp-1][0\uff0cp\u22121]\u4e2d\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u7ebf\u6027\uff0c\u5c06\u6570\u5b57\u4ece1111\u6563\u5217\u5230nnn\u5c06\u5f97\u5230\u4e00\u4e2a\u5747\u5300\u95f4\u9694\u7684\u6570\u5b57\u5e8f\u5217(Modp)\u3002\u8fd9\u4e0d\u7b26\u5408\u968f\u673a\u6570\u5e8f\u5217\u7684\u8981\u6c42\u3002\u7136\u800c\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5e7f\u6cdb\u4f7f\u7528\u7684\u6563\u5217\u51fd\u6570(\u5982Murmu3\u548cxxHash)\u5177\u6709\u826f\u597d\u7684\u96ea\u5d29\u7279\u6027\uff0c\u5373\uff0c\u8f93\u5165\u7684\u5c0f\u53d8\u5316\u4f1a\u5bfc\u81f4\u8f93\u51fa\u548c\u8272\u6563\u7684\u5927\u53d8\u5316\uff0c\u5c3d\u7ba1\u8fd8\u6ca1\u6709\u8bc1\u660e\u5b83\u4eec\u7684\u5f62\u5f0f\u6027\u8d28\u3002\n\u5bfc\u5165org.apache.partk.sql.{DataFrame\uff0cRow}\u5bfc\u5165org.apache.spark.sql.catalyst.expressions.XXH64import org.apache.partk.sql.type.{LongType.StructField\uff0cStructType}def addRNGColumn(df\uff1aDataFrame\uff0ccolName\uff1aString\uff0cSeed\uff1aLong=42L)\uff1aDataFrame={val rddWithIndex=df.rdd.zipWithIndex()df.spokSession.sqlContext\u3002Row.fromSeq(row.toSeq\uff1a+XXH64.hashLong(index\uff0cSeed))}\uff0cStructType(df.schema.field\uff1a+StructField(colName\uff0cLongType\uff0cfalse))}\u3002\n\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aDataFrame\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684DataFrame\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u5305\u542b\u968f\u673a\u6570\u7684\u9644\u52a0\u5217\u3002\u6211\u4eec\u5728RDDS\u4e0a\u4f7f\u7528zipWithIndex()\u51fd\u6570\u4e3aDataFrame\u7684\u884c\u751f\u6210\u4ece1111\u5230nnn\u7684\u7d22\u5f15\u3002\u8bf7\u6ce8\u610f\uff0c\u8c03\u7528\u6b64\u51fd\u6570\u5c06\u89e6\u53d1\u4e00\u4e2a\u64cd\u4f5c(\u8bf7\u53c2\u89c1\u4ee3\u7801)\u3002\n\u5bf9\u4e8e\u6563\u5217\uff0c\u6211\u4eec\u4f7f\u7528xxHash\uff0c\u56e0\u4e3a\u5b83\u662f\u5e26\u6709Spark\u768464\u4f4d\u7248\u672c\uff0c\u5e76\u4e14\u6b63\u5982\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u5bf9\u4e8e\u8fd9\u9879\u4efb\u52a1\u6267\u884c\u5f97\u5f88\u597d\u3002\n\u4f17\u6240\u5468\u77e5\uff0czipWithIndex()\u901f\u5ea6\u5f88\u6162-\u5c24\u5176\u662f\u5728\u4e0eDataFrames\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u8f6c\u6362\u4e3aRDD\u548c\u8fd4\u56de\u9700\u8981\u8fdb\u4e00\u6b65\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u884c\u3002\n\u7528\u4e8e\u6dfb\u52a0\u8fde\u7eed\u7d22\u5f15\u7684Spark SQL\u51fd\u6570\u4e0d\u5b58\u5728\u3002\u8fd9\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u5411\u5206\u5e03\u5f0f\u6570\u636e\u96c6\u6dfb\u52a0\u8fde\u7eed\u7d22\u5f15\u672c\u8eab\u5c31\u9700\u8981\u4e24\u6b21\u904d\u5386\u6570\u636e\uff1a\u4e00\u6b21\u7528\u4e8e\u8ba1\u7b97\u504f\u79fb\u672c\u5730\u7d22\u5f15\u6240\u9700\u7684\u5206\u533a\u5927\u5c0f\uff0c\u53e6\u4e00\u6b21\u7528\u4e8e\u6dfb\u52a0\u7d22\u5f15\u3002\u8fd9\u4e0eSpark SQL\u3001\u67e5\u8be2\u4f18\u5316\u5668\u7b49\u4e0d\u80fd\u5f88\u597d\u5730\u914d\u5408\u4f7f\u7528\u3002\nzipWithIndex()\u6b63\u597d\u91c7\u7528\u4e0a\u8ff0\u504f\u79fb\u91cf\u65b9\u6cd5\u3002\u540c\u6837\u7684\u60f3\u6cd5\u53ef\u4ee5\u57fa\u4e8eSpark SQL\u51fd\u6570monotally_increating_id()\u8f7b\u677e\u5b9e\u73b0\u3002\u8fd9\u5bf9\u4e8eDataFrames\u6765\u8bf4\u80af\u5b9a\u4f1a\u66f4\u5feb(\u6211\u8bd5\u8fc7\u4e86)\uff0c\u4f46\u9644\u5e26\u4e86\u5176\u4ed6\u8b66\u544a\uff0c\u6211\u4e0d\u60f3\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u63d0\u53ca\u3002\n\u6211\u4eec\u58f0\u79f0\u6709\u4e00\u79cd\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\u6709\u5f85\u56de\u7b54\uff1a\u4f7f\u7528xxHash\u6563\u5217\u4ece1111\u5230nnn\u7684\u6570\u5b57\u771f\u7684\u80fd\u5f97\u5230\u4e00\u4e2a\u597d\u7684\u968f\u673a\u5e8f\u5217\u5417\uff1f\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u8bc4\u4f30PRNG\uff0c\u5e76\u5728\u6211\u4eec\u7684\u201cxxHash the number from 1111 to nn n\u201d-PRNG\u4e0a\u8fd0\u884c\u4e00\u4e9b\u5b9e\u9a8c\u3002\n\u9996\u5148\uff0c\u5047\u8bbe\u968f\u673a\u6bd4\u7279\u5e8f\u5217\u662f\u8fd9\u6837\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6bd4\u7279\u4ee5\u76f8\u7b49\u7684\u6982\u7387\u53d6\u503c0 0 0\u621611\uff0c\u800c\u4e0e\u5176\u4ed6\u6bd4\u7279\u65e0\u5173\u3002\u5173\u4e8e\u968f\u673a\u6027\u8fd8\u6709\u5176\u4ed6\u5b9a\u4e49\uff0c\u4f46\u8fd9\u4e00\u5b9a\u4e49\u65e2\u5b9e\u7528\u53c8\u5207\u4e2d\u8981\u5bb3\u3002\n\u7136\u800c\uff0c\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6839\u636e\u5b9a\u4e49\u7ed9\u6211\u4eec\u4e00\u79cd\u786e\u5b9a\u5e8f\u5217\u662f\u5426\u968f\u673a\u7684\u65b9\u6cd5\uff0c\u5219\u4efb\u4f55PRNG\u90fd\u5c06\u65e0\u6cd5\u901a\u8fc7\u6b64\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u4efb\u610f\u56fa\u5b9a\u7684t\uff0c\u5177\u6709b\u4f4d\u72b6\u6001\u7684PRNG\u53ea\u80fd\u751f\u62102b 2^b 2b\u957f\u5ea6\u4e3at\u7684\u4e0d\u540c\u5e8f\u5217\uff0c\u5bf9\u4e8e\u4efb\u610ft&gt\uff1bb&gt\uff1bb t&gt\uff1b\u63d0\u793a\u51af\u00b7\u8bfa\u4f9d\u66fc\u53c2\u8003\u3002\n\u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f0a\u66fc(John Von Neumann)\u7684\u5fc5\u5907\u7167\u7247\uff0c\u4ed6\u4ee5\u63d0\u51fa\u7b2c\u4e00\u4e2aPRNG\u800c\u95fb\u540d\uff0c\u4ed6\u8bf4\uff1a\u201c\u4efb\u4f55\u8003\u8651\u4ea7\u751f\u968f\u673a\u6570\u5b57\u7684\u7b97\u672f\u65b9\u6cd5\u7684\u4eba\uff0c\u5f53\u7136\u90fd\u662f\u5904\u4e8e\u7f6a\u6076\u72b6\u6001\u3002\u201d\u8fd9\u5f20\u7167\u7247\u4e0d\u662f\u6211\u62cd\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u662f\u6211\u7684\u3002\n\u6211\u4eec\u4e0d\u662f\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e2a\u5e8f\u5217\u662f\u968f\u673a\u7684\uff0c\u800c\u662f\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u5728\u7edf\u8ba1\u4e0a\u4e0e\u771f\u6b63\u7684\u968f\u673a\u5e8f\u5217\u662f\u4e0d\u53ef\u533a\u5206\u7684\u3002\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e9b\u6d4b\u8bd5\u7edf\u8ba1\u91cf\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u77e5\u9053\u968f\u673a\u5e8f\u5217\u7684\u5206\u5e03(\u6216\u5176\u8fd1\u4f3c\u503c)\u3002\n\u4f8b\u5982\uff0c\u6ee1\u8db3\u6211\u4eec\u5b9a\u4e49\u7684\u957f\u5ea6\u4e3ann\u7684\u5e8f\u5217\u4e2d\u96f6(\u62161)\u7684\u4e2a\u6570\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u5e73\u5747\u503c\u4e3a1 2n\\FRAC 1 2 n 2 1\u200bn\uff0c\u65b9\u5dee\u4e3a1 4 n\\FRAC 1 4 n 4 1\u200bn\u3002\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u7531\u6211\u4eec\u7684PRNG\u751f\u6210\u7684\u5e8f\u5217\u7684\u5e73\u5747\u503c\uff0c\u5e76\u5c06\u5176\u63d0\u4ea4\u7ed9\u7edf\u8ba1\u68c0\u9a8c\uff0c\u4ee5\u786e\u5b9a\u5b83\u662f\u5426\u4e0e\u9884\u671f\u5206\u5e03\u663e\u8457\u4e0d\u540c\u3002\n\u663e\u7136\uff0c\u6b64\u6d4b\u8bd5\u4e0d\u4f1a\u5e2e\u52a9\u6211\u4eec\u62d2\u7edd\u50cf0n/2 1n/2 0^{n/2}1^{n/2}0 n/2 1n/2\u8fd9\u6837\u7684\u5e8f\u5217\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u591a\u7684\u6d4b\u8bd5\u3002\n\u6d4b\u8bd5\u7684\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\u8ba1\u7b97\u5e8f\u5217\u7684Lempel-Ziv\u89e3\u6790\u3002Lempel-Ziv\u89e3\u6790\u5728\u5f53\u4eca\u4f7f\u7528\u7684\u8bb8\u591a\u538b\u7f29\u65b9\u6848\u4e2d\u90fd\u662f\u5b8c\u6574\u7684\uff0c\u968f\u673a\u6027\u548c\u53ef\u538b\u7f29\u6027\u4e4b\u95f4\u7684\u53cd\u5411\u5173\u7cfb\u975e\u5e38\u660e\u663e(\u968f\u673a\u6570\u636e\u4e0d\u80fd\u5f88\u597d\u5730\u538b\u7f29-\u53e6\u8bf7\u53c2\u9605Kolmogorov\u590d\u6742\u6027)\u3002\u7ecf\u9a8c\u8bc1\u660e\uff0c\u968f\u673a\u5e8f\u5217\u7684Lempel-Ziv\u5206\u6790\u4e2d\u7684\u77ed\u8bed\u6570\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u5747\u503c\u4e3an/loglogn/\\lognn/logn\uff0c\u65b9\u5dee\u4e3a0.266 n/(\u2061\u2061n)3 0.266 n/(\\logn)^30\u30022 6 6n/(Log N)3.\u3002\n\u540c\u6837\uff0c\u4e00\u4e9b\u5e8f\u5217\u4e0d\u80fd\u57fa\u4e8e\u8be5\u6d4b\u8bd5\u88ab\u5ba3\u5e03\u4e3a\u975e\u968f\u673a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5728Lempel-Ziv\u65b9\u6848\u4e2d\u5b58\u5728\u538b\u7f29\u4e0d\u597d\u7684\u975e\u968f\u673a\u5e8f\u5217\u3002\n\u6587\u732e\u4e2d\u5df2\u7ecf\u63d0\u51fa\u4e86\u5177\u6709\u4e0d\u540c\u5f3a\u5ea6\u7684\u6709\u9650\u6570\u91cf\u7684\u6d4b\u8bd5(\u8bf7\u53c2\u9605\u53c2\u8003\u8d44\u6599\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f)\uff0c\u5e76\u4e14\u5176\u4e2d\u8bb8\u591a\u5df2\u7ecf\u5728\u4e24\u4e2a\u7528\u4e8e\u8bc4\u4f30PRNG\u7684\u8f6f\u4ef6\u5e93\u4e2d\u5b9e\u73b0\uff1aTestU01\u548cPractRand\u3002\u4e00\u4e2a\u597d\u7684PRNG\u5e94\u8be5\u901a\u8fc7\u8fd9\u4e9b\u6d4b\u8bd5\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u5f88\u597d\u5730\u63cf\u8ff0\u4e86\u5982\u4f55\u4e0b\u8f7d\u3001\u6784\u5efa\u548c\u5f00\u59cb\u4f7f\u7528TestU01\u3002\nTestU01\u8bbe\u8ba1\u4e3a\u4f7f\u7528PRNG\u4e3a\u6bcf\u6b21\u8c03\u7528\u751f\u621032\u4f4d\u3002\u6211\u4eec\u575a\u6301\u4f7f\u752864\u4f4d\u7248\u672c\u7684xxHash\uff0c\u56e0\u6b64\u5728\u4e0b\u9762\u7684\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u5c06\u54c8\u5e0c\u503c\u5206\u4e3a\u9ad832\u4f4d\u548c\u4f4e32\u4f4d\u3002PRNG\u7684\u72b6\u6001\u7531\u8ba1\u6570\u5668\u548c\u6307\u793a\u6211\u4eec\u5e94\u8be5\u8fd4\u56de\u503c\u7684\u9ad832\u4f4d\u8fd8\u662f\u4f4e32\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u7ec4\u6210\u3002\u6211\u4eec\u5728\u6bcf\u9694\u4e00\u79d2\u7684\u8c03\u7528\u4e2d\u9012\u589e\u8ba1\u6570\u5668\u3002\n#include&lt\uff1bstdbool.h&gt\uff1b#include&#34\uff1bTestU01.h&#34\uff1b#include&#34\uff1bxxhash.h&#34\uff1bstatic unsign long y=0U\uff1bstatic uint64_t hash\uff1bstatic bool LOWER=TRUE\uff1bUNSIGNED INT xxhash(Void){IF(LOWER){HASH=XXH64(&amp\uff1by\uff0c8\uff0c42)\uff1bLOWER=FALSE\uff1bRETURN(INT)\u54c8\u5e0c&amp\uff1b0\u3002}}int main(){unif01_Gen*gen=unif01_CreateExternGenBits(&#34\uff1bxxhash&#34\uff1b\uff0cxxhash)\uff1bbcell_SmallCrush(Gen)\uff1bbcell_Crush(Gen)\uff1bbcell_bigcrush(Gen)\uff1bunif01_DeleteExternGenBits(Gen)\uff1breturn 0\uff1b}\u3002\nTestU01\u7531\u4e09\u4e2a\u6d4b\u8bd5\u96c6\u5408\u7ec4\u6210\uff1aSmallCrush\u3001Crush\u548cBig Crush\u3002\u4e0a\u9762\u7684\u7a0b\u5e8f\u8fd0\u884c\u8fd9\u4e09\u4e2a\u7a0b\u5e8f\u3002\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u82b1\u4e86\u5927\u7ea612\u4e2a\u5c0f\u65f6\u3002\u4e0b\u9762\u663e\u793a\u6240\u6709\u4e09\u4e2a\u6d4b\u8bd5\u90fd\u901a\u8fc7\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u6ce8\u91ca\u3002\n=SmallCrush\u7684\u6c47\u603b\u7ed3\u679c=\u7248\u672c\uff1aTestU01 1.2.3\u751f\u6210\u5668\uff1axxhash\u7edf\u8ba1\u6570\uff1a15 CPU\u603b\u65f6\u95f4\uff1a00\uff1a00\uff1a05.56\u6240\u6709\u6d4b\u8bd5\u5747\u5df2\u901a\u8fc7=\u7248\u672c\uff1aTestU01 1.2.3\u751f\u6210\u5668\uff1axxhash\u7edf\u8ba1\u6570\uff1a144\u603bCPU\u65f6\u95f4\uff1a00\uff1a25\uff1a07.50\u6240\u6709\u6d4b\u8bd5\u5747\u5df2\u901a\u8fc7=\nPractRand\u5141\u8bb8\u60a8\u4eceSTDIN\u8bfb\u53d6\u8981\u6d4b\u8bd5\u7684\u5e8f\u5217\u3002\u4e0b\u9762\u7684C\u7a0b\u5e8f\u5b9e\u73b0\u6211\u4eec\u7684\u7b97\u6cd5\u5e76\u5c06\u6563\u5217\u503c\u5199\u5165STDOUT\u3002\n#include&lt\uff1bstdio.h&gt\uff1b#include&#34\uff1bxxhash.h&#34\uff1bstatic unsign long y=1u\uff1bunsign long xxhash(Void){uint64_t hash=XXH64(&amp\uff1by\uff0c8\uff0c42)\uff1by+=1\uff1breturn hash\uff1b}int main(){while(1){uint64_t h=xxhash()\uff1bfwrite((void*)&amp\uff1bh\uff0csi.\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6ePractRand\u3002\u6211\u4eec\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\u5e76\u901a\u8fc7\u7ba1\u9053\u5c06\u8f93\u51fa\u4f20\u9012\u7ed9PractRand\u3002\nPractRand\u5c06\u5bf9\u4e0d\u65ad\u589e\u5927\u7684\u5e8f\u5217\u8fd0\u884c\u5176\u6d4b\u8bd5\u3002\u6211\u8ba9\u5b83\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884c\u4e86\u5927\u7ea630\u4e2a\u5c0f\u65f6\uff0c\u6700\u540e\u6d4b\u8bd5\u4e86\u4e00\u4e2a4TB\u7684\u5e8f\u5217\u3002\u8fd9\u662f\u4e00\u4e2a\u75315\u4e2a\u22c51 0 11 5\\cot10^{11}5\u22c51 0 1 1 64\u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u5bf9\u4e8e\u6211\u7684\u7528\u4f8b\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u8fd0\u884c\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u3002\nRNG_TEST Using PractRand Version 0.93RNG=rng_stdin64\uff0cSeed=0xdf55786dtest set=Normal\uff0cFolding=Standard(64 Bit)RNG=RNG_stdin64\uff0cSeed=0xdf55786dlength=256 MB(2^28\u5b57\u8282)\uff0c\u65f6\u95f4=3.5\u79d2\u6d4b\u8bd5\u540d\u79f0\u539f\u59cb\u5904\u7406\u8bc4\u4f30\u54c1\u724c(12)\uff1a384(1)R=+14.7 p~=1.8e-5\u5f02\u5e38.\u548c158\u4e2a\u6d4b\u8bd5\u7ed3\u679c(\u3002\u65f6\u95f4=7.5\u79d2\u6d4b\u8bd5\u540d\u79f0\u539f\u59cb\u5904\u7406\u8bc4\u4f30\u54c1\u724c(12)\uff1a384(1)R=+14.7 p~=1.8e-5\u5f02\u5e38.\u548c168\u4e2a\u65e0\u5f02\u5e38\u7684\u6d4b\u8bd5\u7ed3\u679crng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=1 GB(2^30\u5b57\u8282)\uff0c\u65f6\u95f4=14.9\u79d2\u6d4b\u8bd5\u540d\u79f0\u539f\u59cb\u5904\u7406\u8bc4\u4f30\u54c1\u724c(12)\uff1a384(1)R=+14.7 p=1.8e-5\u5f02\u5e38.\u548c179\u3002\u65f6\u95f4=56.5\u79d2201\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38rng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=8 GB(2^33\u5b57\u8282)\uff0c\u65f6\u95f4=113\u79d2212\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38rng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=16 GB(2^34\u5b57\u8282)\uff0c\u65f6\u95f4=226\u79d2223\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38rng=rng_stdin\u3002\u65f6\u95f4=1783\u79d2255\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38rng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=256 GB(2^38\u5b57\u8282)\uff0c\u65f6\u95f4=3488\u79d2265\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38rng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=512 GB(2^39\u5b57\u8282)\uff0c\u65f6\u95f4=6948\u79d2276\u4e2a\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u65e0\u5f02\u5e38\u3002t)R=-7.1p=1-1.3e-3\u5f02\u5e38.\u548c296\u4e2a\u65e0\u5f02\u5e38\u7684\u6d4b\u8bd5\u7ed3\u679crng=rng_stdin64\uff0c\u79cd\u5b50=0xdf55786dlength=4TB(2^42\u5b57\u8282)\uff0c\u65f6\u95f4=56881\u79d2\u6d4b\u8bd5\u540d\u79f0\u539f\u59cb\u5904\u7406\u8bc4\u4f30[Low1/64]bcfn(2+0\uff0c13-0\uff0cT)R=+8.2p=6.2e-4\u5f02\u5e38.\u548c307\u4e2a\u65e0\u5f02\u5e38\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002\n\u7136\u800c\uff0c\u5bf9\u4e8e\u8f83\u77ed\u7684\u5e8f\u5217\uff0cPractRand\u62a5\u544a\u8bf4Brank\u6d4b\u8bd5\u7ed3\u679c\u662f\u201c\u4e0d\u5bfb\u5e38\u7684\u201d\u3002PractRand\u7684\u6d4b\u8bd5\u6587\u6863\u8bf4\uff0c\u201cBrank\u4e0a\u7684[f]\u75c5\u75c7\u8868\u660e\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0cPRNG\u7684\u8f93\u51fa\uff0c\u6216\u8005\u81f3\u5c11\u90e8\u5206\uff0c\u662f\u975e\u5e38\u7ebf\u6027\u7684\uff0c\u53ef\u4ee5\u4e25\u683c\u5730\u901a\u8fc7\u5bf9\u4ee5\u524d\u7684PRNG\u8f93\u51fa\u7684\u4f4d\u8fdb\u884c\u5f02\u6216\u6765\u4ea7\u751f\u3002\u201d\u60c5\u51b5\u53ef\u80fd\u662f\uff0c\u5bf9\u4e8e\u5e26\u6709\u8bb8\u591a\u96f6\u7684\u5c0f\u8f93\u5165\u503c\uff0cxxHash\u7684\u96ea\u5d29\u5e76\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u597d\u3002\n\u5bf9\u4e8e\u957f\u5e8f\u5217\uff0cBCFN\u6d4b\u8bd5\u4e5f\u62a5\u544a\u4e86\u540c\u6837\u7684\u60c5\u51b5\u3002\u6587\u6863\u79f0\u201c\u5217\u51fa\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4f4e\u7684BCFN\u6545\u969c\u901a\u5e38\u4e0eDC6\u53c2\u6570\u5316\u6545\u969c(\u8fd9\u662f\u6df7\u5408/\u96ea\u5d29\u4e0d\u8db3\u7684\u5c0f\u578b\u6df7\u4e71PRNG\u7684\u5178\u578b\u6545\u969c)\u7684\u542b\u4e49\u76f8\u4f3c\u3002\u201d\u540c\u6837\uff0c\u6211\u4eec\u6563\u5217\u7684\u6570\u5b57\u5e8f\u5217\u63091\u9012\u589e\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u53ef\u80fd\u4f1a\u53cd\u6620\u5728\u7ed3\u679c\u5e8f\u5217\u4e2d\u3002\n\u6211\u4eec\u7684\u7b97\u6cd5\u901a\u8fc7\u4e86TestU01\u548cPractRand\u4e2d\u7684\u6240\u6709\u6d4b\u8bd5\u3002\u4e00\u4e9b\u6d4b\u8bd5\u88abPractRand\u6807\u8bb0\u4e3a\u201c\u5f02\u5e38\u201d\uff0c\u8fd9\u53ef\u80fd\u8868\u660e\u7b97\u6cd5\u4e2d\u5b58\u5728\u5f31\u70b9\u7684\u75c7\u72b6\u3002\n\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0cJava/Scala\u4e2d\u4f7f\u7528\u7684LCG\u548cSpark\u4f7f\u7528\u7684XorShift PRNG\u5728TestU01(\u8bf7\u53c2\u89c1\u672c\u6587\u7684\u7ed3\u679c)\u548cPractRand(\u6211\u81ea\u5df1\u8fd0\u884c\u6b64\u6d4b\u8bd5)\u4e2d\u90fd\u6ca1\u6709\u901a\u8fc7\u4e0d\u53ef\u5ffd\u7565\u6570\u91cf\u7684\u6d4b\u8bd5\u3002\n\u6211\u4eec\u7684\u7b97\u6cd5\u662f\u5426\u8db3\u591f\u5f3a\u5927\u53d6\u51b3\u4e8e\u7528\u4f8b\u3002\u5bf9\u4e8e\u5c06\u6570\u636e\u968f\u673a\u5212\u5206\u4e3a\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u8bad\u7ec3\u548c\u9a8c\u8bc1\u5b50\u96c6\u4e4b\u7c7b\u7684\u4e8b\u60c5\uff0c\u6211\u4f1a\u6beb\u4e0d\u72b9\u8c6b\u5730\u4f7f\u7528\u8be5\u7b97\u6cd5\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u4f7f\u7528\u7684\u6807\u9898\u56fe\u50cf\u662f\u4ece\u6211\u4eec\u7684\u7b97\u6cd5\u751f\u6210\u7684\u968f\u673a\u6bd4\u7279\u4e2d\u63d0\u53d6\u7684\u50cf\u7d20\u566a\u58f0\u3002\u200c\u5b83\u9664\u4e86\u53ef\u89c6\u5316\u968f\u673a\u6027\u4e4b\u5916\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002\u901a\u5e38\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u53ef\u89c6\u5316\u800c\u4e0d\u662f\u7edf\u8ba1\u6d4b\u8bd5\u6765\u786e\u5b9a\u5e8f\u5217\u662f\u5426\u662f\u968f\u673a\u7684\u3002\u4f46\u662f\u6211\u60f3\u8981\u8fd9\u4e2a\u5e16\u5b50\u7684\u6807\u9898\u56fe\u7247\u3002\n\u4f7f\u7528\u4ee5\u4e0bPython\u811a\u672c\u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u753b\u5e03\u4e0a\u7684\u50cf\u7d20\u3002\n\u4ecetkinter import*master=TK()canvas_width=1400canvas_width=600w=canvas(master\uff0cwidth=canvas_width\uff0cHeight=canvas_high)w.pack()with open(&#34\uff1bRandom_Binary&#34\uff1b\uff0c&#34\uff1bRb&#34\uff1b)as f\uff1abyte=f.read(1)bit=0 for x in range(0\uff0ccanvas_width\uff0c2)\uff1afor y in range(0\uff0ccanvas_width\uff0c2)\u30027\uff1a\u4f4d=0\u5b57\u8282=f.read(1)r=(int.from_bytes(byte\uff0c&#39\uff1bBig&#39\uff1b)&gt\uff1b&gt\uff1bbit)&amp\uff1b1\u4f4d+=1\uff0c\u5982\u679cr==1\uff1aw.create_Rectangle((x\uff0cy)\uff0c(x+2\uff0cy+2)\uff0cOutline=&#34\uff1b&#34\uff1b\uff0cFill=&#34\uff1b#616161&#34\uff1b)ELSE\uff1aw.create_Rectangle((x\uff0cy)\uff0c(x+2\uff0cy+2)\uff0cOutline=&#34\uff1b&#34\uff1b\uff0cFill=&#34\uff1b#cccccc&#34\uff1b)mainloop()\u3002\n\u6574\u6570\u548c\u5b57\u7b26\u4e32\u7684\u9ad8\u901f\u6563\u5217(Mikkel Thorup)\u3002\u8bb2\u8bfe\u5185\u5bb9\u5305\u62ec\u63cf\u8ff0\u6a21-\u6a21\u7d20\u6570\u54c8\u5e0c\u51fd\u6570\u65cf\u7b49\u5185\u5bb9\u3002\n\u201c\u4ec0\u4e48\u662f\u968f\u673a\u5e8f\u5217\uff1f\u201d(\u585e\u5c14\u5409\u5965\u00b7B\u00b7\u6c83\u5c14\u574e)\u3002\u5173\u4e8e\u968f\u673a\u6027\u5b9a\u4e49\u7684\u8ba8\u8bba\u3002\n\u201c\u7528\u4e8e\u5bc6\u7801\u5e94\u7528\u7684\u968f\u673a\u548c\u4f2a\u968f\u673a\u6570\u53d1\u751f\u5668\u7684\u7edf\u8ba1\u6d4b\u8bd5\u5957\u4ef6\u201d(A.Ruhkin\u7b49\u4eba)\u3002\u6280\u672f\u62a5\u544a\uff0c\u8be6\u7ec6\u8bf4\u660e\u8bc4\u4f30PRNG\u7684\u7edf\u8ba1\u6d4b\u8bd5\u3002\n\u201cTestU01\uff1a\u968f\u673a\u6570\u751f\u6210\u5668\u7ecf\u9a8c\u6d4b\u8bd5\u7684C\u5e93\u201d(Pierre L\u2018\u5384\u74dc\u591a\u5c14\u548cRichard Simard)\u3002TestU01\u4e2d\u4f7f\u7528\u7684\u7edf\u8ba1\u6d4b\u8bd5\u8bf4\u660e\u548c\u591a\u4e2aPRNG\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002", "note_en": "In this post we will use Spark to generate random numbers in a way that is completely independent of how data is partitioned. That is, given a fixed seed, our Spark program will produce the same result across all hardware and settings. To do this, we introduce a new PRNG and use the TestU01 and PractRand test suites to evaluate its quality.\n  Reproducible pseudo-random sequences are particularly useful when we want to be able to repeat experiments for different values of non-random parameters. For example, let\u2019s say that we are running an experiment that requires a random sample from a dataset. Then we want to be able to vary the parameters of the experiment for exactly the same random sample while also easily be able to run the experiment for other samples.\n Most programming languages come with one or more built-in pseudo-random number generators (PRNGs). If you are reading this, you have probably used some several times.\n There are many types of PRNGs, and most of them are operated in the same way. You set a start state (the seed), and then for each invocation you get a fixed number of bits (typically 32 or 64 at a time, so we refer to these as numbers). If you know the seed, you can repeatedly generate the same sequence of bits.\n \u200cThis fundamental design of the PRNGs doesn\u2019t lend itself well to be used in distributed computing. If we want to generate a random sequence in parallel, we typically will use the same PRNG with different seeds for each parallel process. The problem with this approach is that when the level of parallelism changes, the resulting sequence will also change.\n \u200cSpark SQL provides the  rand() function, which suffers from exactly this problem. An instance of the PRNG is created for each partition and seeded by the global seed plus the partition index (see  eval and  codegen). The partitioning may change if your Spark program is executed on different cluster topologies, in different modes, with different settings, or if the defaults change with new versions of Spark.\n To address the above problem, we would like to generate a sequence of random numbers for rows in a dataset using Spark in such a way that the method is completely agnostic to how the data is partitioned and the underlying stack the Spark job is running on.\n  The algorithm basically enumerates rows and then apply a hash function to row indices. The hash values are the pseudo-random numbers.\n I doubt that this is a novel idea, but while I was researching the problem, I didn\u2019t find any examples of it being used. So before going into details, I would like to share my intuition behind going with this approach.\n \u200cThe family of  linear congruential generators (LCGs) share similarities with textbook multiply-mod-prime hash functions (you know,       h ( x ) = a x + b    m o d \u2009 \u2009 p h(x)=ax+b \\mod p    h ( x )  =    a x  +    b       m o d   p for       a a    a,       b b    b, and prime       p p    p chosen at random). Basically, the state of the LCG is hashed to generate the next number, which is then the new state. Multiply-mod-prime will, in expectation, disperse the hash values of an input sequence of numbers in       [ 0 , p \u2212 1 ] [0, p-1]    [ 0 ,  p  \u2212    1 ], but due to its linearity, hashing the numbers from       1 1    1 to       n n    n will give a sequence of evenly spaced numbers (mod p). This will not qualify as a sequence of random numbers. However, widely used hash functions like  Murmur3 and  xxHash are known to have good avalanching, i.e., a small change in input yields a big change in the output, and dispersion, although no formal properties have been proved for them.\n    import org.apache.spark.sql.{DataFrame, Row}import org.apache.spark.sql.catalyst.expressions.XXH64import org.apache.spark.sql.types.{LongType, StructField, StructType}def addRNGColumn(df: DataFrame, colName: String, seed: Long = 42L): DataFrame = { val rddWithIndex = df.rdd.zipWithIndex() df.sparkSession.sqlContext.createDataFrame( rddWithIndex.map { case (row, index) =&gt; Row.fromSeq(row.toSeq :+ XXH64.hashLong(index, seed)) }, StructType(df.schema.fields :+ StructField(colName, LongType, false)) ) }\n The function takes a DataFrame and produces a new DataFrame with an additional column containing the random numbers. We use the  zipWithIndex() function on RDDs to generate indices from       1 1    1 to       n n    n for the rows of the DataFrame. Note that calling this function will trigger an action (see  code).\n For hashing, we use xxHash because it comes in the 64 bit version with Spark, and as we shall see in the following section, performs well for this task.\n  zipWithIndex() is known to be slow \u2014 especially when used with DataFrames, where conversion to RDD and back requires further serialization/deserialization of the rows.\n A Spark SQL function for adding consecutive indices does not exist. This is most likely because adding consecutive indices to a distributed dataset inherently requires two passes over the data: One for computing the sizes of the partitions needed to offset local indices, and one for adding the indices. This wouldn\u2019t work well with Spark SQL, the query optimizer, and so forth.\n zipWithIndex() takes exactly the offset approach described above. The same idea can, with little effort, be implemented based on the Spark SQL function  monotonically_increasing_id(). This will certainly be faster for DataFrames (I tried), but comes with other caveats that I don\u2019t want to address in this post.\n  We claim to have an algorithm that solves the problem, but one important question remains to be answered: Does hashing the numbers from       1 1    1 to       n n    n using xxHash actually give a &#34;good&#34; random sequence?\n In this section we will discuss how to evaluate PRNGs and run some experiments on our \u201cxxHash the numbers from       1 1    1 to       n n    n\u201d-PRNG.\n First, let\u2019s say that a random sequence of bits is a sequence where each bit takes the the value       0 0    0 or       1 1    1 with equal probability independently of the other bits. There are other definitions of randomness out there, but this one is both practical and to the point.\n Notice, however, that if we were given a method for determining if a sequence is random according to the definition, any PRNG would fail this test. For any fixed       t t    t, a PRNG with a       b b    b-bit state can only generate        2 b 2^b     2        b distinct sequences of length       t t    t. For any       t &gt; b t&gt;b    t  &gt;    b, not all possible sequences can be generated, so a generated sequence can not be a sequence satisfying the definition of being random. Cue Von Neumann reference.\n Obligatory picture of John Von Neumann, famous for, among many things, coming up with the first PRNG and saying: \u201cAny one who considers arithmetical methods of producing\u00a0random\u00a0digits is, of course, in a state of sin.\u201c  I didn\u2019t take the picture, so it is not mine.\n  Instead of trying to prove that a sequence is random we may determine if a sequence is statistically indistinguishable from a truly random sequence. We do this by computing some test statistic for which we know the distribution (or an approximation of it) for a random sequence.\n For example, the number of zeroes (or ones) in sequence of length       n n    n satisfying our definition is normally distributed with mean        1 2 n \\frac 1 2 n             2       1 \u200b     n and variance        1 4 n \\frac 1 4 n             4       1 \u200b     n. We may compute the mean for a sequence generated by our PRNG and submit it to a statistical test to determine if it is significantly different from the expected distribution.\n Clearly, this test would not help us to reject sequences like for example        0  n / 2  1  n / 2 0^{n/2}1^{n/2}     0         n / 2  1         n / 2, so more tests are needed.\n Another example of a test is to compute the  Lempel-Ziv parse of the sequence. The Lempel-Ziv parse is integral in many of the compression schemes used today, and the inverse relation between randomness and compressibility is quite obvious (random data does not compress well \u2014 see also  Kolmogorov complexity). It has been empirically determined that the number of phrases in the Lempel-Ziv parse of random sequences follows a normal distribution with mean       n / log \u2061 n n/\\log n    n /  lo g  n and variance       0.266 n / ( log \u2061 n  ) 3 0.266 n/(\\log n)^3    0 . 2 6 6 n / ( lo g  n  )        3.\n Again, some sequences can not be declared non-random based on this test because there are non-random sequences that do not compress well in the Lempel-Ziv scheme.\n  A finite number of tests with various strengths have been suggested in the literature (see the References to learn more) and many of them have been implemented in two software libraries for evaluating PRNGs:  TestU01 and  PractRand. A good PRNG should pass the tests in these.\n   This blog post does a good job describing how to download, build, and get started with TestU01.\n  TestU01 is designed to work with PRNGs generating 32 bits for each invocation. We insist on using the 64 bit version of xxHash, so in the following implementation we break hash values into its upper 32 bits and lower 32 bits. The state of the PRNG consists of the counter and binary value indicating if we should return the upper or lower 32 bits of the value. We increment the counter in every second invocation.\n #include &lt;stdbool.h&gt;#include &#34;TestU01.h&#34;#include &#34;xxhash.h&#34;static unsigned long y = 0U;static uint64_t hash;static bool lower = true;unsigned int xxhash (void) { if (lower) { hash = XXH64(&amp;y, 8, 42); lower = false; return (int)hash &amp; 0xFFFFFFFF; } else { y += 1; lower = true; return (int)(hash &gt;&gt; 32) &amp; 0xFFFFFFFF; }}int main() { unif01_Gen* gen = unif01_CreateExternGenBits(&#34;xxhash&#34;, xxhash); bbattery_SmallCrush(gen); bbattery_Crush(gen); bbattery_BigCrush(gen); unif01_DeleteExternGenBits(gen); return 0;}\n TestU01 consists of three collections of tests: SmallCrush, Crush, and BigCrush. The above program runs all three of them. It took around 12 hours on my laptop. The following shows that all three tests passed without any remarks.\n ========= Summary results of SmallCrush ========= Version: TestU01 1.2.3 Generator: xxhash Number of statistics: 15 Total CPU time: 00:00:05.56 All tests were passed========= Summary results of Crush ========= Version: TestU01 1.2.3 Generator: xxhash Number of statistics: 144 Total CPU time: 00:25:07.50 All tests were passed ========= Summary results of BigCrush ========= Version: TestU01 1.2.3 Generator: xxhash Number of statistics: 160 Total CPU time: 02:42:26.79 All tests were passed\u200c\n  PractRand lets you read the sequence to test from STDIN. The following C program implements our algorithm and writes the hash values to STDOUT.\n #include &lt;stdio.h&gt;#include &#34;xxhash.h&#34;static unsigned long y = 1U;unsigned long xxhash (void) { uint64_t hash = XXH64(&amp;y, 8, 42); y += 1; return hash;}int main() { while (1) { uint64_t h = xxhash(); fwrite((void*) &amp;h, sizeof(h), 1, stdout); } return 0;}\n This blog post describes how to set up PractRand. We run the above program and pipe the output to PractRand.\n  PractRand will run its tests for sequences of increasing size. I let it run for about 30 hours on my laptop, and ended up testing a 4 TB sequence. That is a sequence of       5 \u22c5 1  0 11 5\\cdot 10^{11}    5  \u22c5    1  0         1 1 64-bit numbers, which was sufficient for my use cases. The output from the run is seen below.\n RNG_test using PractRand version 0.93RNG = RNG_stdin64, seed = 0xdf55786dtest set = normal, folding = standard (64 bit)rng=RNG_stdin64, seed=0xdf55786dlength= 256 megabytes (2^28 bytes), time= 3.5 seconds Test Name Raw Processed Evaluation BRank(12):384(1) R= +14.7 p~= 1.8e-5 unusual ...and 158 test result(s) without anomaliesrng=RNG_stdin64, seed=0xdf55786dlength= 512 megabytes (2^29 bytes), time= 7.5 seconds Test Name Raw Processed Evaluation BRank(12):384(1) R= +14.7 p~= 1.8e-5 unusual ...and 168 test result(s) without anomaliesrng=RNG_stdin64, seed=0xdf55786dlength= 1 gigabyte (2^30 bytes), time= 14.9 seconds Test Name Raw Processed Evaluation BRank(12):384(1) R= +14.7 p~= 1.8e-5 unusual ...and 179 test result(s) without anomaliesrng=RNG_stdin64, seed=0xdf55786dlength= 2 gigabytes (2^31 bytes), time= 29.1 seconds no anomalies in 191 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 4 gigabytes (2^32 bytes), time= 56.5 seconds no anomalies in 201 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 8 gigabytes (2^33 bytes), time= 113 seconds no anomalies in 212 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 16 gigabytes (2^34 bytes), time= 226 seconds no anomalies in 223 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 32 gigabytes (2^35 bytes), time= 446 seconds no anomalies in 233 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 64 gigabytes (2^36 bytes), time= 894 seconds no anomalies in 244 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 128 gigabytes (2^37 bytes), time= 1783 seconds no anomalies in 255 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 256 gigabytes (2^38 bytes), time= 3488 seconds no anomalies in 265 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 512 gigabytes (2^39 bytes), time= 6948 seconds no anomalies in 276 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 1 terabyte (2^40 bytes), time= 13815 seconds no anomalies in 287 test result(s)rng=RNG_stdin64, seed=0xdf55786dlength= 2 terabytes (2^41 bytes), time= 27409 seconds Test Name Raw Processed Evaluation BCFN(2+2,13-0,T) R= -7.1 p =1-1.3e-3 unusual ...and 296 test result(s) without anomaliesrng=RNG_stdin64, seed=0xdf55786dlength= 4 terabytes (2^42 bytes), time= 56881 seconds Test Name Raw Processed Evaluation [Low1/64]BCFN(2+0,13-0,T) R= +8.2 p = 6.2e-4 unusual ...and 307 test result(s) without anomalies\n  However, for short sequences, PractRand reports that the BRank test results are \u201cunusual\u201d.  The PractRand test documentation says that \u201c[f]ailures on BRank suggest that in some way the PRNG output, or at least part of it, was extremely linear, producable strictly by xoring bits of previous PRNG output.\u201d It may be the case that for small input values with a lot of zeroes, the avalanching of xxHash isn\u2019t as great as we could hope for.\n For long sequences the same is reported for the BCFN tests. The documentations says \u201cBCFN failures where the first parameter listed is low are typically similar in meaning to a failure on a DC6 parameterization [which is] typical of small chaotic PRNGs with insufficient mixing / avalanche.\u201d Again, the fact that we are hashing a sequence of numbers increasing by one may reflect in the resulting sequence.\n  Our algorithm passed all tests in TestU01 and PractRand. Some tests are marked as \u201cunusual\u201d by PractRand, which may indicate symptoms of weaknesses in the algorithm.\n For comparison, the LCG used in Java/Scala and the  Xorshift PRNG used by Spark both fail a non negligible number of tests in both TestU01 (see the results in  this paper) and PractRand (I ran this myself).\n The decision whether our algorithm is strong enough depends on the use case. For something like random partitioning of data into training and validation subsets for machine learning, I would not hesitate to use the algorithm.\n  The header image used for this post is pixel noise drawn from random bits generated by our algorithm.\u200c It serves no purpose other than visualizing randomness. Generally, visualization should not be used instead of statistical testing for determining if a sequence is random. But I wanted a header image for this post.\n    The file is read and translated to pixels on a canvas using the following Python script.\n from tkinter import *master = Tk()canvas_width = 1400canvas_height = 600w = Canvas(master, width=canvas_width, height=canvas_height)w.pack()with open(&#34;random_binary&#34;, &#34;rb&#34;) as f: byte = f.read(1) bit = 0 for x in range(0, canvas_width, 2):\tfor y in range(0, canvas_height, 2):\t if bit &gt; 7:\t\tbit = 0\t\tbyte = f.read(1)\t r = (int.from_bytes(byte, &#39;big&#39;) &gt;&gt; bit) &amp; 1\t bit += 1\t if r == 1:\t\tw.create_rectangle((x, y), (x + 2, y + 2), outline=&#34;&#34;, fill=&#34;#616161&#34;)\t else:\t w.create_rectangle((x, y), (x + 2, y + 2), outline=&#34;&#34;, fill=&#34;#cccccc&#34;)mainloop()\n  High Speed Hashing for Integers and Strings (Mikkel Thorup). Lectures notes that, among many others, describe the modulo-mod-prime family of hash functions.\n \u201cWhat Is a Random Sequence?\u201d (Sergio B. Volcan). A discussion on the definition of randomness.\n \u201cA Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications\u201d (A. Ruhkin et al.) Technical report with detailed description of statistical tests for evaluating PRNGs.\n \u201cTestU01: A C Library for Empirical Testing of Random Number Generators\u201d (Pierre L\u2019Ecuyer and Richard Simard). Descriptions of statistical tests used in TestU01 and test results for a number of PRNGs.", "posttime": "2020-06-11 15:24:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u5e03\u5f0f,distributed,\u5e8f\u5217", "title": "Spark\u4e2d\u53ef\u91cd\u73b0\u7684\u5206\u5e03\u5f0f\u968f\u673a\u6570\u751f\u6210", "title_en": "Reproducible Distributed Random Number Generation in Spark", "transed": 1, "url": "https://able.bio/patrickcording/reproducible-distributed-random-number-generation-in-spark--03tcnko", "via": "", "real_tags": ["\u5206\u5e03\u5f0f", "\u5e8f\u5217"]}, {"category": "", "categoryclass": "", "imagename": "1949d997e3e2789cc826f2bdf5fe8e62.jpg", "infoid": 1006110, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e09\uff0c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u79d1\u5b66\u9879\u76ee\u8d1f\u8d23\u4eba\u8868\u793a\uff0c\u8a79\u59c6\u65af\u00b7\u97e6\u4f2f\u592a\u7a7a\u671b\u8fdc\u955c(James Webb Space Telescope)\u5c06\u65e0\u6cd5\u6309\u76ee\u524d\u8ba1\u5212\u4e8e2021\u5e743\u6708\u53d1\u5c04\u3002\n\u822a\u5929\u5c40\u8d1f\u8d23\u79d1\u5b66\u4e8b\u52a1\u7684\u526f\u5c40\u957f\u6258\u9a6c\u65af\u00b7\u7956\u5c14\u5e03\u8fb0(Thomas Zurbuchen)\u8bf4\uff0c\u6211\u4eec\u4e0d\u4f1a\u57283\u6708\u4efd\u53d1\u5c04\u3002\u6211\u4eec\u7edd\u5bf9\u4e0d\u4f1a\u5728\u4e09\u6708\u4efd\u63a8\u51fa\u3002\u8fd9\u4e00\u70b9\u76ee\u524d\u8fd8\u4e0d\u5728\u7eb8\u724c\u4e0a\u3002\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u4ed6\u4eec\u505a\u9519\u4e86\u4ec0\u4e48\u3002\u8fd9\u4e0d\u662f\u4efb\u4f55\u4eba\u7684\u9519\u6216\u7ba1\u7406\u4e0d\u5584\u3002\n\u7956\u5c14\u5e03\u741b\u662f\u5728\u56fd\u5bb6\u79d1\u5b66\u9662\u592a\u7a7a\u7814\u7a76\u59d4\u5458\u4f1a\u7684\u4e00\u6b21\u865a\u62df\u4f1a\u8bae\u4e0a\u53d1\u8868\u4e0a\u8ff0\u8bc4\u8bba\u7684\u3002\u4ed6\u8bf4\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u88ad\u51fb\u8be5\u673a\u6784\u4e4b\u524d\uff0c\u671b\u8fdc\u955c\u5c31\u5df2\u7ecf\u5728\u6309\u8ba1\u5212\u524a\u51cf\u5de5\u4f5c\u65f6\u95f4\uff0c\u800c\u4e14\u75c5\u6bd2\u5df2\u7ecf\u5bfc\u81f4\u4e86\u989d\u5916\u7684\u5de5\u4f5c\u65f6\u95f4\u635f\u5931\u3002\n\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u56e2\u961f\u4e00\u76f4\u4fdd\u6301\u8b66\u89c9\uff0c\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u63a8\u8fdb\u671b\u8fdc\u955c\u3002\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6d6a\u8d39\u4e86\u65f6\u95f4\u3002\u7531\u4e8e\u6211\u4eec\u6240\u8bf4\u7684\u6240\u6709\u539f\u56e0\uff0c\u6211\u4eec\u4e0d\u80fd\u8fd9\u6837\u505a\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\u73ed\u6b21\u7684\u5168\u5458\u5de5\u4f5c\u3002\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u6709\u7a7a\u3002\u5230\u5904\u90fd\u6709\u9633\u6027\u75c5\u4f8b(\u5728\u5468\u56f4\u5730\u533a\uff0c\u800c\u4e0d\u662f\u5728\u73b0\u573a)\u3002\u56e0\u6b64\uff0c\u4e5f\u8bb8\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u73ed\u6b21\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u548c\u671b\u8fdc\u955c\u7684\u4e3b\u627f\u5305\u5546\u8bfa\u65af\u7f57\u666e\u00b7\u683c\u9c81\u66fc\u516c\u53f8\u6b63\u5728\u8bc4\u4f30\u672a\u6765\u7684\u8ba1\u5212\u3002\u8fd9\u5c06\u5305\u62ec\u4f30\u8ba1\u4f55\u65f6\u64cd\u4f5c\u53ef\u4ee5\u5b8c\u5168\u6062\u590d\u6b63\u5e38-\u7956\u5c14\u5e03\u8fb0\u8bf4\u671b\u8fdc\u955c\u51c6\u5907\u548c\u6d4b\u8bd5\u6d3b\u52a8\u518d\u6b21\u63a5\u8fd1\u6ee1\u5458-\u5e76\u4e3a\u53d1\u5c04\u8bbe\u5b9a\u4e86\u65b0\u7684\u65e5\u671f\u3002\u8fd9\u4e00\u65f6\u95f4\u8868\u5ba1\u67e5\u5e94\u8be5\u57287\u6708\u4efd\u7ed3\u675f\u3002\n\u7956\u5c14\u5e03\u8fb0\u8bf4\uff1a\u201c\u6211\u5bf92021\u5e74\u53d1\u5c04\u5347\u7a7a\u6301\u975e\u5e38\u4e50\u89c2\u7684\u6001\u5ea6\u3002\u201d\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u5c71\u8981\u722c\u3002\n\u53c8\u4e00\u6b21\u53d1\u5c04\u5ef6\u8fdf\u4e00\u76f4\u88ab\u6000\u7591\uff0c\u4f46\u8fd9\u662fNASA\u9ad8\u7ea7\u5b98\u5458\u7b2c\u4e00\u6b21\u8bc1\u5b9e\u8fd9\u4e00\u70b9\u30021\u6708\u4efd\u53d1\u5e03\u7684\u4e00\u4efd\u653f\u5e9c\u62a5\u544a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5927\u578b\u592a\u7a7a\u671b\u8fdc\u955c\u57282021\u5e743\u6708\u53d1\u5c04\u7684\u53ef\u80fd\u6027\u53ea\u670912%\u3002\u5b83\u5c06\u642d\u8f7d\u4e00\u679a\u963f\u4e3d\u4e9a\u5a1c5\u53f7\u706b\u7bad\u4ece\u6b27\u6d32\u822a\u5929\u5c40\u4f4d\u4e8e\u6cd5\u5c5e\u572d\u4e9a\u90a3\u5e93\u9c81\u7684\u592a\u7a7a\u6e2f\u5347\u7a7a\u3002\n\u97e6\u4f2f\u671b\u8fdc\u955c\u662f\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u5728\u54c8\u52c3\u592a\u7a7a\u671b\u8fdc\u955c(Hubble Space Telescope)\u57fa\u7840\u4e0a\u7684\u540e\u7eed\u8bbe\u5907\uff0c\u539f\u5b9a\u4e8e\u5927\u7ea610\u5e74\u524d\u53d1\u5c04\uff0c\u7814\u53d1\u6210\u672c\u4e3a10\u4ebf\u7f8e\u5143\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6280\u672f\u95ee\u9898\u548c\u5ef6\u8bef\u4e00\u76f4\u56f0\u6270\u7740\u8fd9\u53f0\u590d\u6742\u7684\u671b\u8fdc\u955c\u30021\u6708\u4efd\u7684\u62a5\u544a\u8fd8\u8bf4\uff0c\u76ee\u524d\u5bf9Webb\u5f00\u53d1\u6210\u672c\u7684\u4f30\u8ba1\u4e3a97\u4ebf\u7f8e\u5143\uff0c\u53ef\u80fd\u592a\u4f4e\u4e86\u3002\n\u5efa\u9020\u97e6\u4f2f\u4e00\u76f4\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u76846.5\u7c73\u957f\u7684\u955c\u5b50\u4e00\u65e6\u5230\u8fbe\u8ddd\u79bb\u5730\u7403\u7ea6150\u4e07\u516c\u91cc\u7684\u8f68\u9053\uff0c\u5c31\u9700\u8981\u5c55\u5f00\u81ea\u5df1\u3002\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u5929\u6587\u53f0\u4e0a\u6709300\u591a\u4e2a\u5355\u70b9\u6545\u969c\u3002\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u5728\u6a21\u62df\u6df1\u7a7a\u6e29\u5ea6\u3001\u538b\u529b\u548c\u5fae\u91cd\u529b\u7684\u6761\u4ef6\u4e0b\uff0c\u5728\u5730\u7403\u4e0a\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u4e00\u6b21\u8270\u96be\u7684\u6d4b\u8bd5\u3002", "note_en": "On Wednesday, the chief of NASA&#39;s science programs said the James Webb Space Telescope will not meet its current schedule of launching in March 2021.\n &#34;We will not launch in March,&#34; said Thomas Zurbuchen, the space agency&#39;s associate administrator for science. &#34;Absolutely we will not launch in March. That is not in the cards right now. That&#39;s not because they did anything wrong. It&#39;s not anyone&#39;s fault or mismanagement.&#34;\n Zurbuchen made these comments at a virtual meeting of the National Academies&#39; Space Studies Board. He said the telescope was already cutting it close on its schedule before the COVID-19 pandemic struck the agency and that the virus had led to additional lost work time.\n &#34;This team has stayed on its toes and pushed this telescope forward at the maximum speed possible,&#34; he said. &#34;But we&#39;ve lost time. Instead of two shifts fully staffed, we could not do that for all the reasons that we talk about. Not everybody was available. There were positive cases here and there (in the surrounding area, not on site). And so, perhaps, we had only one shift.&#34;\n  NASA and the telescope&#39;s prime contractor, Northrop Grumman, are evaluating the schedule going forward. This will include an estimate of when operations can completely return to normal\u2014Zurbuchen said telescope preparation and testing activities are nearing full staffing again\u2014and set a new date for a launch. This schedule review should conclude in July.\n &#34;I&#39;m very optimistic about this thing getting off the launch pad in 2021,&#34; Zurbuchen said. &#34;Of course, there is still a lot of mountain to climb.&#34;\n Yet another launch delay has long been suspected, but this is the first time a senior NASA official has confirmed it. A government report  published in January found\u00a0that there was only a 12 percent chance that the large space telescope will launch in March 2021. It is due to lift off on board an Ariane 5 rocket from the European Space Agency&#39;s spaceport in Kourou, French Guiana.\n  The Webb telescope, NASA&#39;s follow-on instrument to the wildly successful Hubble Space Telescope, was originally due to launch about a decade ago, with a development cost of $1 billion. Since then, technical problems and delays have bedeviled the complex telescope. The January report also said the current estimate for Webb&#39;s development cost, $9.7 billion, may be too low.\n Building Webb has been difficult because its 6.5-meter mirror needs to unfurl itself once it reaches an orbit about 1.5 million kilometers from Earth. This is an exceedingly complex process, and there are more than 300 single points of failure aboard the observatory. NASA has had a difficult time testing them all on Earth in conditions that mimic the temperatures, pressure, and microgravity of deep space.", "posttime": "2020-06-11 15:07:42", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u592a\u7a7a,\u97e6\u4f2f,webb,\u53d1\u5c04", "title": "\u8a79\u59c6\u65af\u00b7\u97e6\u4f2f\u592a\u7a7a\u671b\u8fdc\u955c\u5c06\u201c\u7edd\u5bf9\u201d\u4e0d\u4f1a\u57283\u6708\u53d1\u5c04", "title_en": "James Webb Space Telescope Will 'Absolutely' Not Launch In March", "transed": 1, "url": "https://arstechnica.com/science/2020/06/james-webb-space-telescope-will-absolutely-not-launch-in-march/", "via": "", "real_tags": ["\u592a\u7a7a", "\u97e6\u4f2f", "webb", "\u53d1\u5c04"]}, {"category": "", "categoryclass": "", "imagename": "ad19e1bfbc0556e63042916071150288.png", "infoid": 1006109, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662f\u7684\uff0cJTAG/SWD\u63a5\u53e3\u5728\u53d7\u4fdd\u62a4\u5e73\u53f0\u4e0a\u7684\u6062\u590d\u4e00\u76f4\u662f\u5d4c\u5165\u5f0f\u5b89\u5168\u9886\u57df\u7684\u654f\u611f\u8bdd\u9898\u3002\n\u6b64\u5b89\u5168\u8c03\u67e5\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed5\u8fc7\u53d7\u4fdd\u62a4nRF52840\u4e0a\u7684APPROTECT\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u91cd\u65b0\u6fc0\u6d3b\u4e32\u884c\u7ebf\u8c03\u8bd5\u63a5\u53e3(SWD)\uff0c\u4ece\u800c\u5728\u76ee\u6807\u4e0a\u63d0\u4f9b\u5168\u9762\u7684\u8c03\u8bd5\u529f\u80fd(\u5bf9\u95ea\u5b58/RAM/\u5bc4\u5b58\u5668\u7684\u8bfb/\u5199\u8bbf\u95ee\u3001\u4ee3\u7801\u6267\u884c\u548c\u91cd\u65b0\u7f16\u7a0b)\u3002\u6240\u6709nRF52\u7248\u672c\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\n\u7531\u4e8e\u5176\u56fa\u6709\u7684\u7279\u6027\uff0c\u5982\u679c\u6ca1\u6709\u7845\u7247\u7684\u91cd\u65b0\u8bbe\u8ba1\uff0c\u6f0f\u6d1e\u5c31\u65e0\u6cd5\u4fee\u8865\uff0c\u4ece\u800c\u5bfc\u81f4\u65e0\u6570\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\u6c38\u8fdc\u51fa\u73b0\u5728\u73b0\u573a\u3002\n\u5317\u6b27\u534a\u5bfc\u4f53(Nordic Semiconductor)\u548c\u6709\u9650\u7ed3\u679c\u516c\u53f8(Limited Results)\u6ca1\u6709\u5c31\u8d1f\u8d23\u4efb\u7684\u62ab\u9732\u8fbe\u6210\u4e00\u81f4\u3002\u8fd9\u5c31\u662f\u751f\u6d3b\u3002\n\u6574\u4e2anRF52\u7cfb\u5217\u7531\u516d\u4e2a\u4e0d\u540c\u7684nRF52\u5e73\u53f0\u7ec4\u6210\uff0c\u5168\u90e8\u56f4\u7ed5ARM Cortex-M4F CPU\u6784\u5efa\u3002\n\u8ba9\u6211\u4eec\u628a\u91cd\u70b9\u653e\u5728\u5bb6\u65cf\u7684\u65d7\u8230\u5e73\u53f0\u4e0a\uff0c\u6211\u7684\u610f\u601d\u662fnRF52840\u3002\nnRF52840 SoC(\u7247\u4e0a\u7cfb\u7edf)\u662fnRF52\u7cfb\u5217SoC\u5bb6\u65cf\u4e2d\u6700\u5148\u8fdb\u7684\u6210\u5458\u3002\u5b83\u662f\u4e00\u6b3e\u5148\u8fdb\u7684\u84dd\u7259\u3001\u7ebf\u7a0b\u548cZigbee\u591a\u534f\u8baeSoC\uff0c\u56f4\u7ed564 MHz Cortex-M4F CPU\u6784\u5efa\u3002\u5b83\u914d\u67091MB\u7684\u95ea\u5b58\u548c256Kb\u7684RAM\uff0c\u4e24\u8005\u90fd\u662f\u5b8c\u5168\u96c6\u6210\u7684\u3002\n\u5728\u5b89\u5168\u6027\u65b9\u9762\uff0c\u7247\u4e0a\u96c6\u6210\u4e86ARM TrustZone CryptoCell\u5bc6\u7801\u5355\u5143\u4f5c\u4e3a\u5bc6\u7801\u5f15\u64ce\u3002SoC\u7684\u6846\u56fe\u663e\u793a\u4e86nRF52840\u7684\u529f\u80fd(\u548c\u590d\u6742\u6027)\uff1a\n\u5982\u4eca\uff0c\u5927\u591a\u6570\u534a\u5bfc\u4f53\u4f9b\u5e94\u5546\u5728\u5176MCU/SoC\u5185\u90e8\u5b9e\u73b0\u4e86\u540d\u4e3a\u4ee3\u7801\u8bfb\u51fa\u4fdd\u62a4\u7684\u5b89\u5168\u529f\u80fd\uff0c\u4ee5\u9632\u6b62\u5177\u6709\u7269\u7406\u8bbf\u95ee\u6743\u9650\u7684\u653b\u51fb\u8005\u8f6c\u50a8\u5b58\u50a8\u5728\u96c6\u6210\u95ea\u5b58\u4e2d\u7684\u4ee3\u7801/\u6570\u636e\u5e76\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002\n\u6839\u636e\u82af\u7247\u4f9b\u5e94\u5546\u7684\u4e0d\u540c\uff0c\u6b64\u5b89\u5168\u529f\u80fd\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u540d\u79f0(crp\u3001rdp\u3001pcrop\u2026)\u3002\n\u901a\u5e38\uff0c\u4e00\u65e6\u653b\u51fb\u8005\u83b7\u5f97\u56fa\u4ef6\u526f\u672c\uff0c\u4ed6\u5c31\u53ef\u4ee5\u5f00\u59cb\u53cd\u5411\u5de5\u7a0b\u8fc7\u7a0b\uff0c\u6216\u8005\u53ea\u83b7\u53d6\u4e00\u4e9b\u654f\u611f\u6570\u636e(\u5982\u5bc6\u94a5\u548c\u5bc6\u7801)\u3002\n2015\u5e74\uff0cInclude Security\u5728nRF51\u4ee3\u7801\u8bfb\u51fa\u4fdd\u62a4\u529f\u80fd(\u79f0\u4e3aRBPCONF)\u7684\u8bbe\u8ba1\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u4f7f\u5f97\u653b\u51fb\u8005\u80fd\u591f\u4f7f\u7528SWD\u8c03\u8bd5\u754c\u9762\u6062\u590d\u6574\u4e2a\u56fa\u4ef6\u3002\n\u5728nRF51\u4e0a\uff0c\u542f\u7528RBPCONF\u4fdd\u62a4\u540e\uff0c\u4f7f\u7528\u8c03\u8bd5\u5668\u76f4\u63a5\u8bbf\u95ee\u95ea\u5b58\u6216RAM\u53ea\u8fd4\u56de\u96f6\u3002\u4f46\u662f\uff0c\u4ecd\u7136\u53ef\u4ee5\u63a7\u5236\u4ee3\u7801\u6267\u884c\u548c\u8bfb\u5199\u5bc4\u5b58\u5668(\u751a\u81f3\u662f\u7a0b\u5e8f\u8ba1\u6570\u5668)\u3002\u56e0\u6b64\uff0c\u5728\u53d7\u4fdd\u62a4\u7684\u5b58\u50a8\u5668\u4e2d\u627e\u5230\u201c\u5c0f\u5de5\u5177\u201d\uff0c\u4f8b\u5982\u4ece\u67d0\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740\u8bfb\u53d6\u5b58\u50a8\u5668\u5230\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u7b80\u5355\u52a0\u8f7d\u5b57\u6307\u4ee4\uff0c\u5c31\u8db3\u4ee5\u63d0\u53d6\u6574\u4e2a\u56fa\u4ef6\u3002\u56e0\u6b64\uff0c\u5bf9\u57fa\u4e8enRF51\u7684\u8bbe\u5907\u5177\u6709\u7269\u7406\u8bbf\u95ee\u6743\u9650\u7684\u653b\u51fb\u8005\u80fd\u591f\u8f6c\u50a8\u95ea\u5b58\uff0c\u4ece\u800c\u5229\u7528\u6b64\u8bbe\u8ba1\u6f0f\u6d1e\u3002\n\u56e0\u6b64\uff0cnRF51\u4ee3\u7801\u8bfb\u51fa\u4fdd\u62a4(RBPCONF)\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u635f\u574f\u7684\u5b89\u5168\u673a\u5236\uff0c\u4e0d\u80fd\u9632\u6b62\u56fa\u4ef6\u88ab\u63d0\u53d6\u3002\n\u5728\u8fd9\u4e00\u5931\u8d25\u4e4b\u540e\uff0c\u5317\u6b27\u534a\u5bfc\u4f53\u51b3\u5b9a\u8bbe\u8ba1\u5177\u6709\u66f4\u4e25\u683c\u5b89\u5168\u673a\u5236\u7684nRF52\uff0c\u4ee5\u9632\u6b62\u5b58\u50a8\u5668\u8bfb\u51fa\u3002\u6b64\u5b89\u5168\u529f\u80fd\u79f0\u4e3a\u8bbf\u95ee\u7aef\u53e3\u4fdd\u62a4(APPROTECT)\uff0c\u5728\u6bcf\u4e2anRF52\u4ea7\u54c1\u624b\u518c\u4e2d\u90fd\u6709\u7b80\u8981\u63d0\u53ca\uff1a\n\u901a\u5e38\uff0c\u5916\u90e8\u8c03\u8bd5\u5668\u901a\u8fc7\u8c03\u8bd5\u8bbf\u95ee\u7aef\u53e3(DAP)\u8bbf\u95eeARM CPU\u3002\u7136\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7aef\u53e3\u53ef\u7528\uff1a\n-CTRL-AP\u3002\u8fd9\u662f\u4e3b\u8c03\u8bd5\u7aef\u53e3\uff0c\u5b83\u4e0d\u4f9d\u8d56\u4e8eAPPROTECT\u3002\u5b83\u5c06\u7528\u4e8e\u6062\u590d\uff0c\u4f8b\u5982\uff0c\u5728\u8bbe\u5907\u88ab\u7816\u5c01\u7684\u60c5\u51b5\u4e0b\u3002\n-AHB-AP\u3002\u8fd9\u662f\u901a\u8fc7SWD\u8bbf\u95ee\u5b58\u50a8\u5668\u548c\u63a7\u5236CPU\u7684\u771f\u6b63\u8c03\u8bd5\u7aef\u53e3\u3002\n\u5317\u6b27\u534a\u5bfc\u4f53\u4e0d\u63d0\u4f9b\u4efb\u4f55\u6709\u5173APPROTECT\u673a\u5236\u7684\u4fe1\u606f\u3002\u6211\u63a8\u8350\u9605\u8bfbCortex-M\u7684ARM\u53c2\u8003\u6587\u6863\u3002\n\u7528\u6237\u4fe1\u606f\u914d\u7f6e\u5bc4\u5b58\u5668(UICR)\u662f\u7528\u4e8e\u914d\u7f6e\u7528\u6237\u7279\u5b9a\u8bbe\u7f6e\u7684\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668(NVM)\u5bc4\u5b58\u5668\u3002\u5b83\u4eec\u88ab\u6620\u5c04\u52300x10001000\u3002\nAPPROTECT\u5c5e\u4e8eUICR\u3002\u9700\u8981\u5728\u5730\u57400x10001208\u5199\u51650xFFFFF00\u624d\u80fd\u542f\u7528\u8bbf\u95ee\u7aef\u53e3\u4fdd\u62a4\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\u6839\u636e\u5317\u6b27\u7684\u8bf4\u6cd5\uff0c\u5982\u679c\u4e0d\u64e6\u9664\u6240\u6709RAM\u548c\u5185\u5b58\u95ea\u5b58\uff0c\u5219\u65e0\u6cd5\u7981\u7528APPROTECT\u5b89\u5168\u6027\u3002\n\u7528\u6237\u624b\u518c\u548c\u539f\u7406\u56fe\u53ef\u5728\u5236\u9020\u5546\u7684\u7f51\u7ad9\u4e0a\u627e\u5230\u3002nRF52840\u662fQFN73\u7248\u672c\uff0c7x7 mm\uff0c\u4f4d\u4e8e\u53f3\u4fa7\u3002\n\u8be5\u5957\u4ef6\u5177\u6709\u5d4c\u5165\u5f0fSegger J-Link\u8c03\u8bd5\u5668(\u767d\u8272\u8d34\u7eb8\u7684\u6700\u5927\u82af\u7247)\u3002\n\u9996\u5148\uff0c\u6211\u53ea\u9700\u7f16\u8bd1\u5e76\u5237\u65b0SDK\u4e2d\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u4ee5\u68c0\u67e5\u6211\u7684\u73af\u5883\u662f\u5426\u6b63\u5e38\u3002\n$openocd-s/usr/local/share/openocd/scripts-f./interface/jlink.cfg-c&#34\uff1bTransport select SWD&#34\uff1b-f./target/nrf52.cfg#telnet$telnet localhost 4444&gt\uff1b\u95ea\u5b58\u586b\u51450x10001208 0xFFFFF00 0x01&gt\uff1b\u91cd\u7f6e\u3002\n\u6b64\u540e\uff0c\u4efb\u4f55\u8fde\u63a5CPU\u7684\u5c1d\u8bd5\u90fd\u5c06\u5931\u8d25\uff0c\u5e76\u663e\u793a\u201cError\uff1aCan not find MEM-AP to control the core\u201d(\u9519\u8bef\uff1a\u65e0\u6cd5\u627e\u5230MEM-AP\u6765\u63a7\u5236\u5185\u6838)\uff1a\n#read APPROTECTSTATUS#(0x0\u8bbf\u95ee\u7aef\u53e3\u4fdd\u62a4\u542f\u7528-0x1\u5e94\u7528\u7a0b\u5e8f\u7981\u7528)&gt\uff1bnrf52.dap apreg 1 0x0c 0x00000000#write ERASEALL register&gt\uff1bnrf52.dap apreg 1 0x04 0x01&gt\uff1bReset\u3002\n\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u95ea\u5b58\u548cRAM\u90fd\u4f1a\u88ab\u64e6\u9664\u3002\u590d\u4f4d\u540e\uff0c\u53ef\u4ee5\u518d\u6b21\u5bf9nRF52\u8fdb\u884c\u7f16\u7a0b\u3002\n\u5f15\u5bfc\u8fc7\u7a0b\u76f8\u5bf9\u7b80\u5355\uff0c\u56e0\u4e3anRF52840\u4e0d\u5305\u542bbootROM\u4ee3\u7801(\u56e0\u6b64\u6ca1\u6709\u5d4c\u5165\u5f0f\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u4f8b\u7a0b\uff0c\u4e5f\u6ca1\u6709\u7528\u4e8e\u53cd\u5411\u5de5\u7a0b\u2026\u7684iap/isp\u4f8b\u7a0b)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u771f\u7684\u5f88\u7b80\u5355\u3002\u6240\u6709\u6a21\u5757\uff0c\u5982NVMC\u3001\u5b58\u50a8\u5668\u3001\u8c03\u8bd5\u8bbf\u95ee\u7aef\u53e3\u2026\u3002\u5b8c\u5168\u5728\u786c\u4ef6\u4e2d\u521d\u59cb\u5316\u3002\n\u5728nRF52 SoC\u4e2d\uff0c\u51e0\u4e2a\u6e90\u53ef\u80fd\u4f1a\u89e6\u53d1\u590d\u4f4d\u3002\u4e0b\u8868\u6c47\u603b\u4e86\u6240\u6709\u91cd\u7f6e\u6e90\u53ca\u5176\u76ee\u6807\uff1a\n\u6700\u540e\u4e00\u884c\u5f88\u6709\u8da3\u3002\u4e0a\u7535\u91cd\u7f6e\u5c06\u91cd\u7f6e\u6574\u4e2aSoC\uff0c\u5305\u62ec\u8c03\u8bd5\u7aef\u53e3\u3002\n\u76ee\u6807\u662f\u91cd\u65b0\u542f\u7528\u5bf9AHB-AP\u8c03\u8bd5\u7684\u8bbf\u95ee\uff0c\u5c3d\u7ba1\u6709APPROTECT\u3002\n\u4e0a\u7535\u590d\u4f4d\u540e\uff0cAHB-AP\u5fc5\u987b\u6839\u636eAPPROTECT\u7684\u503c\u8fdb\u884c\u81ea\u8eab\u521d\u59cb\u5316\uff0cAPPROTECT\u5b58\u50a8\u5728UICR(\u4e13\u7528\u95ea\u5b58\u5206\u533a)\u4e2d\u3002\n\u5728\u542f\u52a8\u671f\u95f4\uff0c\u5185\u5b58\u63a7\u5236\u5668(NVMC)\u5fc5\u987b\u4e0eCPU(\u6216\u76f4\u63a5\u4e0eAHB-AP\u6a21\u5757)\u901a\u4fe1\uff0c\u4ee5\u63d0\u4f9b\u5b58\u50a8\u5728\u95ea\u5b58\u4e2d\u7684APPROTECT\u503c\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8bbe\u7f6e\u5176\u4fdd\u62a4\u72b6\u6001\u3002\n\u7531\u4e8e\u6ca1\u6709BootROM\uff0c\u8fd9\u662f\u901a\u8fc7\u7eaf\u786c\u4ef6\u5b9e\u73b0\u7684\uff0c\u5fc5\u987b\u5728CPU\u5f00\u59cb\u52a0\u8f7d\u548c\u6267\u884c\u4ee3\u7801\u4e4b\u524d\u7684\u65e9\u671f\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u3002\n\u6211\u5c06\u5c1d\u8bd5\u8bc6\u522b\u8fd9\u4e2a\u201c\u7eaf\u786c\u4ef6\u8fdb\u7a0b\u201d\uff0c\u7136\u540e\u5c1d\u8bd5\u4fee\u6539AHB-AP\u8c03\u8bd5\u521d\u59cb\u5316\u3002\u5982\u679c\u6210\u529f\uff0c\u8c03\u8bd5\u529f\u80fd\u5c06\u91cd\u65b0\u6fc0\u6d3b\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u5f00\u673a\u91cd\u7f6e\u3002\n\u8be5\u7cfb\u7edf\u5305\u542b\u4e24\u4e2a\u4e0d\u540c\u7684\u8c03\u8282\u7ea7\uff0cREG0\u548cREG1\u3002\u57fa\u4e8e\u4f4e\u538b\u5dee\u7a33\u538b\u5668(LDO)\u548c\u964d\u538b\u7a33\u538b\u5668(DC/DC)\uff0c\u6bcf\u4e2a\u7a33\u538b\u5668\u7ea7\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u53ef\u914d\u7f6e\u9009\u9879\u3002\n\u6211\u5bf9\u8fde\u63a5\u5916\u90e8\u53bb\u8026\u7535\u5bb9\u5668\u7684DEC\u5f15\u811a(DEC1\u3001DEC2\u81f3DEC6)\u7279\u522b\u611f\u5174\u8da3\u3002\u5317\u6b27\u534a\u5bfc\u4f53\u6ca1\u6709\u63d0\u4f9b\u6709\u5173nRF52\u7535\u6e90\u7f51\u7edc\u7684\u4efb\u4f55\u7ec6\u8282\u3002\n\u7ecf\u8fc7\u5feb\u901f\u6d4b\u8bd5\uff0c\u6211\u51b3\u5b9a\u5c06\u91cd\u70b9\u653e\u5728DEC4(1.2V-1.3V)\u548cDEC1(0.8V-0.9V)\u4e0a\uff1a\nDEC4\u662fREG1\u9636\u6bb5\u4e4b\u540e\u7684\u529f\u7387\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u80fd\u63d0\u4f9b\u6574\u4e2a\u6570\u5b57\u7cfb\u7edf(CPU\u548c\u5b58\u50a8\u5668)\u3002\n\u8981\u5206\u6790\u82af\u7247\u5185\u90e8\u7684\u6d3b\u52a8\uff0c\u901a\u5e38\u9700\u8981\u7a0d\u5fae\u4fee\u6539PCB\uff1a\n\u6211\u7684\u4f4e\u6210\u672c\u7535\u538b\u95ea\u5149\u706f\u662f\u4e00\u4e2a\u81ea\u5236\u7684\u786c\u4ef6\u7535\u5b50\u7cfb\u7edf\uff0c\u81f4\u529b\u4e8e\u4ee5\u9002\u5f53\u7684\u65b9\u5f0f\u6267\u884c\u6545\u969c\u6ce8\u5165\u3002\u8be5\u7535\u8def\u677f\u7684\u603b\u6210\u672c\u4e0d\u52305\u7f8e\u5143\uff0c\u8bc1\u660e\u4e86\u6545\u969c\u6ce8\u5165\u662f\u4e00\u79cd\u6210\u672c\u5f88\u4f4e\u7684\u6280\u672f\uff0c\u53ef\u4ee5\u7531\u6709\u9650\u7684\u9ed1\u5ba2\u6765\u5b9e\u73b0\u3002\n\u6211\u7684\u4f4e\u6210\u672c\u7535\u538b\u6bdb\u523a\u7cfb\u7edf\u7684\u8f93\u51fa\u5c06\u4f7f\u7528\u5148\u524d\u5b89\u88c5\u7684SMA\u8fde\u63a5\u5668\u8fde\u63a5\u5230DEC1\u3002\n\u5c06\u4e00\u6839\u7ea2\u7ebf\u710a\u63a5\u5230DEC4\uff0c\u5e76\u5c06\u4e00\u6839\u7ec6\u7ebf\u710a\u63a5\u5230DEC1\uff1a\n\u6ce8\uff1a\u6211\u5728C5\u4f4d\u7f6e\u91cd\u65b0\u710a\u63a5\u4e86\u4e00\u4e2a100nF\u7684\u7535\u5bb9\u5668\uff0c\u4ee5\u4fbf\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2dCPU\u529f\u7387\u6709\u66f4\u591a\u7684\u201c\u7a33\u5b9a\u6027\u201d\u3002\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u5fc5\u8981\u7684\uff0c\u4f46\u5b83\u53ef\u4ee5\u5728\u610f\u5916\u7684CPU\u5d29\u6e83\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u5e2e\u52a9\u3002\n\u6211\u5c06\u4e24\u6761\u5bfc\u7ebf\u8fde\u63a5\u5230SMA\u8fde\u63a5\u5668\uff0c\u5e76\u4f7f\u7528GND\u70b9\u4f5c\u4e3a\u516c\u5171\u63a5\u5730\uff1a\n\u5fae\u578bUSB\u7535\u7f06\u7528\u4e8e\u4e3a\u6574\u4e2a\u7535\u8def\u677f\u4f9b\u7535\u3002\u8fde\u63a5USBtoSerial\u7535\u7f06\u4ee5\u663e\u793a\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f(115200\u30018N1)\u7684\u901a\u7528\u5f02\u6b65\u6536\u53d1\u5668\u6d88\u606f\u3002\nCHANNEL3(CH3)=\u95ea\u70c1\u8109\u51b2\u547d\u4ee4CHANNEL4(CH4)=\u82af\u7247\u901a\u8fc7DEC4\u7684\u529f\u8017(\u793a\u6ce2\u5668\u89e6\u53d1)\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u786e\u5b9a\u529f\u8017\u4e2d\u7684\u7279\u5b9a\u6a21\u5f0f\uff0c\u8fd9\u53ef\u80fd\u9a8c\u8bc1\u6211\u4e4b\u524d\u7684\u5047\u8bbe\u3002\n\u4e3a\u6b64\uff0c\u76d1\u63a7DEC1\u4e0a\u7684CPU\u529f\u8017(CH2)\u548cDEC4\u4e0a\u7684\u7cfb\u7edf\u529f\u8017(CH4)\u3002\n\u9996\u5148\uff0c\u95ea\u5b58\u6d3b\u52a8\u53ef\u6e05\u695a\u533a\u5206(\u5728\u89e6\u53d1T\u6807\u8bb0\u5904)\uff0c\u5e76\u5bf9\u5e94\u4e8e\u6765\u81ea\u95ea\u5b58\u7684\u8fde\u7eed\u8bfb\u53d6\u64cd\u4f5c\uff1a\n\u5728\u4e0b\u4e00\u4e2a\u5c4f\u5e55\u622a\u56fe\u4e0a\uff0cARM CPU\u5f00\u59cb\u6267\u884c(\u89e6\u53d1\u6807\u8bb0\u540e19us)\u3002\u5b83\u5728CH2(CPU\u529f\u8017)\u4e0a\u662f\u53ef\u533a\u5206\u7684\uff1a\n\u7136\u540e\uff0c\u6211\u51b3\u5b9a\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a\u7535\u6e90\u4fe1\u53f7DEC4\u548cDEC1\uff0c\u96c6\u4e2d\u5206\u6790\u4ee5\u627e\u51faNVMC\u6d3b\u52a8\uff1a\n\u6211\u975e\u5e38\u786e\u4fe1\u6b64\u6a21\u5f0f(\u7ea2\u6846)\u5bf9\u5e94\u4e8e\u5b58\u50a8\u5668\u63a7\u5236\u5668\u5c06UICR\u503c\u4f20\u8f93\u5230\u5185\u6838(\u6216\u76f4\u63a5\u4f20\u8f93\u5230AHB-AP\u5757)\uff0c\u4ee5\u914d\u7f6e\u8c03\u8bd5\u7aef\u53e3(AHB-AP\u3001CTRL-AP)\uff0c\u5e76\u5c06APPROTECT\u8bbe\u7f6e\u4e3a\u6700\u7ec8\u7981\u7528\u8c03\u8bd5\u63a5\u53e3\u3002\nPython\u811a\u672c\u8d1f\u8d23\u542f\u52a8\u793a\u6ce2\u5668\u3001\u8bbe\u7f6e\u4e0d\u540c\u7684\u6bdb\u523a\u53c2\u6570\u5e76\u91cd\u7f6e\u7535\u8def\u677f\u3002\n\u5f00\u59cb\u6bdb\u523a\u6d3b\u52a8\uff0c\u5728DEC1\u7535\u6e90\u7ebf\u4e0a\u4ea7\u751f\u975e\u5e38\u77ed\u7684\u8109\u51b2\uff0c\u4ee5\u7279\u522b\u9488\u5bf9\u5148\u524d\u8bc6\u522b\u7684\u56fe\u6848\u3002\n\u8bf7\u6ce8\u610f\u5728\u6545\u969c\u53d1\u751f\u540e\u7cfb\u7edf\u7684\u529f\u8017\u662f\u5982\u4f55\u4fee\u6539\u7684\u3002\u8fd9\u5c31\u662f\u4f60\u9700\u8981\u7684\u7ed3\u679c\u3002\n\u5728\u6bcf\u6b21\u6545\u969c\u5c1d\u8bd5\u4e4b\u540e\uff0c\u811a\u672c\u5c06\u64ad\u653e\u4ee5\u4e0bOpenOcd\u547d\u4ee4\uff0c\u4ee5\u4fbf\u8f6c\u50a8\u6574\u4e2a\u95ea\u5b58(\u4ec5\u5728\u6210\u529f\u8fde\u63a5\u5230AHB-AP\u8c03\u8bd5\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u53d1\u751f\u6b64\u60c5\u51b5)\uff1a\n$openocd-s/usr/local/share/openocd/scripts-f./interface/jlink.cfg-c&#34\uff1bTransport select SWD&#34\uff1b-f./target/nrf52.cfg-c&#34\uff1binit\uff1bdump_image nrf52_dumped.bin 0x0 0x100000&#34\uff1b\nAHB-AP\u8c03\u8bd5\u7aef\u53e3\u88ab\u6bdb\u523a\u6548\u5e94\u6210\u529f\u89e3\u9501\u3002\u5916\u90e8\u8c03\u8bd5\u5668\u73b0\u5728\u53ef\u4ee5\u8fde\u63a5\u5230nRF52840 CPU(Cortec M4F)\u4ee5\u8f6c\u50a8\u95ea\u5b58\uff1a\n\u7136\u540e\u9644\u52a0\u4e00\u4e2aARM GDB\u4f1a\u8bdd\u3002\u5373\u4f7fAPPROTECT\u503c\u663e\u793anRF52840\u53d7\u5230\u4fdd\u62a4(0xFFFFFF00)\uff0c\u6211\u73b0\u5728\u4e5f\u53ef\u4ee5\u8c03\u8bd5\u76ee\u6807\uff0c\u4f8b\u5982\u901a\u8fc7\u8bfb\u53d60x00000000\u5904\u7684\u56fa\u4ef6\uff1a\n\u60a8\u53ef\u80fd\u4f1a\u731c\u60f3\uff0c\u5b8c\u5168\u63a7\u5236\u8bbe\u5907\u4e5f\u662f\u53ef\u80fd\u7684(\u56e0\u4e3a\u91cd\u65b0\u6fc0\u6d3b\u4e86\u8c03\u8bd5\u754c\u9762)\u3002\n\u5728\u6211\u7684\u5b9e\u9a8c\u671f\u95f4\uff0c\u5728\u6545\u969c\u4e4b\u540e\uff0cCPU\u57280x61C4\u5904\u9677\u5165\u6b7b\u5faa\u73af\u3002\u56e0\u6b64\uff0c\u4e0b\u9762\u7684\u5c4f\u5e55\u663e\u793a\u4e86\u5982\u4f55\u5c06\u7a0b\u5e8f\u8ba1\u6570\u5668(PC)\u8bbe\u7f6e\u4e3a\u6267\u884c\u7b2c\u4e00\u6761\u6307\u4ee4(\u57280x2b4)\uff0c\u7136\u540e\u4f5c\u4e3a\u6982\u5ff5\u9a8c\u8bc1\u8fdb\u5165\u4ee3\u7801\uff1a\n\u5bf9\u5bc4\u5b58\u5668\u7684\u8bfb/\u5199\u8bbf\u95ee\u5982\u4e0b(\u76f8\u4fe1\u6211\uff0cSRAM\u548c\u95ea\u5b58\u8bfb/\u5199\u64cd\u4f5c\u4e5f\u53ef\u7528)\uff1a\n\u5de5\u5382\u4fe1\u606f\u914d\u7f6e\u5bc4\u5b58\u5668(FICR)\u5728\u5de5\u5382\u9884\u7f16\u7a0b\uff0c\u7528\u6237\u65e0\u6cd5\u64e6\u9664\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u5305\u542b\u82af\u7247\u7279\u5b9a\u4fe1\u606f(\u8bbe\u5907ID\u3001\u5bc6\u94a5\u3001\u8bbe\u5907\u5730\u5740\u2026)\u3002\u548c\u4f4d\u4e8e0x10000000\uff1a\n\u76ee\u6807\u662f\u6c38\u4e45\u91cd\u65b0\u6fc0\u6d3b\u57fa\u4e8enRF52 SoC\u7684\u8bbe\u5907\u7684\u5168\u90e8\u8c03\u8bd5\u529f\u80fd\u3002\n\u518d\u6b21\u5237\u65b0nRF52\u4ee5\u5199\u5165\u95ea\u5b58\u5185\u5bb9\u548cUICR(\u5f53\u7136\uff0cAPPROTECT\u503c\u7684\u9002\u5f53\u8865\u4e01\u8bbe\u7f6e\u4e3a0xFFFFFFFF)\u3002\n\u6b64\u540e\uff0c\u5c06\u6c38\u4e45\u542f\u7528SWD\u63a5\u53e3\u4e0a\u7684\u6c38\u4e45\u5b8c\u5168\u8c03\u8bd5\uff0c\u4e0d\u9700\u8981\u51fa\u73b0\u6bdb\u523a\u3002\n\u4e3a\u4e86\u8bc1\u660e\u5e94\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u662f\u591a\u4e48\u5bb9\u6613\uff0c\u653b\u51fb\u5df2\u7ecf\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u4ea7\u54c1\u4e0a\u91cd\u73b0\uff0c\u6211\u6bcf\u5929\u4f7f\u7528\u7684\u7f57\u6280\u4e13\u4e1aG\u9f20\u6807\u3002\n\u8fd9\u5c06\u662f\u5bf9nRF52 SoC\u7684\u8c03\u67e5\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\u5728\u8fd9\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u8fd8\u5c06\u6f14\u793a\u6b64\u6f0f\u6d1e\u5f53\u524d\u5982\u4f55\u5f71\u54cd\u4ecenRF52810\u5230nRF52840\u7684\u6240\u6709nRF52SoC\u3002\n\u63a5\u5165\u7aef\u53e3\u4fdd\u62a4APPROTECT\u662f\u5317\u6b27\u534a\u5bfc\u4f53\u4e3a\u9632\u6b62\u56fa\u4ef6\u8bfb\u51fa\u548c\u53cd\u5411\u5de5\u7a0b\u800c\u8bbe\u8ba1\u7684\u6700\u65b0\u5b89\u5168\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u6574\u4e2anRF52 SoC\u7cfb\u5217\u90fd\u91c7\u7528\u4e86\u6b64APPROTECT\u529f\u80fd\u3002\n\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\uff0c\u5728nRF52840\u4e0a\u6210\u529f\u5b9e\u73b0\u4e86\u4e00\u6b21\u4f4e\u6210\u672c\u7684\u6545\u969c\u653b\u51fb\u3002\u5b83\u5141\u8bb8\u5177\u6709\u7269\u7406\u8bbf\u95ee\u6743\u9650\u7684\u653b\u51fb\u8005\u7ed5\u8fc7APPROTECT\u6c38\u4e45\u91cd\u65b0\u6fc0\u6d3bSWD\u8c03\u8bd5\u63a5\u53e3(\u5bf9\u5b58\u50a8\u5668\u548c\u5bc4\u5b58\u5668\u7684\u8bfb/\u5199\u8bbf\u95ee\u3001\u63a7\u5236\u4e2d\u592e\u5904\u7406\u5668\u4ee3\u7801\u6267\u884c\u3001\u8f6c\u50a8\u95ea\u5b58\u3001FICR\u548cUICR\u2026)\u3002\n\u7531\u4e8e\u590d\u6742\u5ea6\u4f4e\uff0c\u8fd9\u79cd\u5bf9nRF52840\u7684\u653b\u51fb\u5f88\u5bb9\u6613\u5728\u73b0\u573a\u590d\u5236\u3002\u6211\u6beb\u4e0d\u6000\u7591\uff0c\u4efb\u4f55\u6709\u52a8\u673a\u7684\u719f\u7ec3\u9ed1\u5ba2\u90fd\u53ef\u4ee5\u5728\u4e0d\u5230\u4e00\u5929\u7684\u65f6\u95f4\u91cc\uff0c\u7528\u4e0d\u5230500\u7f8e\u5143\u7684\u8bbe\u5907\u590d\u5236\u8fd9\u79cd\u653b\u51fb\u3002\n\u8be5\u6f0f\u6d1e\u5b58\u5728\u4e8eSilicon\u4e2d\u3002\u6ca1\u6709\u786c\u4ef6\u4fee\u8ba2\u662f\u65e0\u6cd5\u6253\u8865\u4e01\u7684\u3002\u8fd9\u5f71\u54cd\u4e86\u5927\u91cf\u57fa\u4e8enRF52\u5e73\u53f0\u7684\u4ea7\u54c1\u3002\n2020\u5e744\u670828\u65e5\uff1aLimitedResults\u5efa\u8bae\u4e0e\u5317\u6b27\u5408\u4f5c\uff0c\u57fa\u4e8eCVE\u6d41\u7a0b\u8fdb\u884c\u8d1f\u8d23\u4efb\u7684\u62ab\u9732\u3002\n2020\u5e748\u67086\u65e5\uff1a\u5728\u4e00\u4e2a\u6708\u7684\u6c89\u9ed8\u548c\u51e0\u6b21\u5317\u6b27\u4eba\u6ca1\u6709\u4efb\u4f55\u56de\u5e94\u7684\u540e\u7eed\u884c\u52a8\u4e4b\u540e\uff0c\u5317\u6b27\u4eba\u62d2\u7edd\u4e0eLimitedResults\u5408\u4f5c\uff0c\u4ee5\u83b7\u5f97\u8d1f\u8d23\u4efb\u7684\u62ab\u9732\u7ed3\u679c\u3002", "note_en": "Yes, resurrection of JTAG/SWD interface on protected platforms has always been a sensitive topic in embedded security.\n This security investigation presents a way to bypass the APPROTECT on a protected nRF52840, in order to reactivate the Serial Wire Debug Interface (SWD), offering full debug capabilities on the target (R/W access to Flash/RAM/Registers, Code Exec and reprogramming). All the nRF52 versions are impacted.\n Due to its intrinsic characteristics, the vulnerability cannot be patched without Silicon redesign, leading to a countless number of vulnerable devices on the field forever.\n Nordic Semiconductor and LimitedResults did not agree on a responsible disclosure.  That\u2019s life.\n  The entire nRF52 family consists of six different nRF52 platforms, all built around the ARM Cortex-M4F CPU.\n   Let\u2019s focus on the flagship platform of the family, I mean the nRF52840.\n  The nRF52840 SoC (System-on- Chip) is the most advanced member of the nRF52 Series SoC family. It is an advanced Bluetooth, Thread and Zigbee multi-protocol SoC built around a 64 MHz Cortex-M4F CPU. It comes with 1MB of Flash and 256Kb of RAM, both fully integrated.\n In term of security, the ARM TrustZone CryptoCell cryptographic unit is included on-chip as cryptographic engine. The block diagram of the SoC gives an idea of the capabilities (and the complexity) of the nRF52840:\n   Nowadays, most of the Semiconductor Vendors implement a security feature called  Code Readout Protection inside their MCUs/SoCs, preventing an attacker with physical access to dump the Code/Data stored in the integrated Flash Memory and also to modify it.\n This security feature can have different names depending on the chip vendors (CRP, RDP, PCROP\u2026)\n Generally, once an attacker has a copy of the Firmware, he can start the reverse engineering process or just grab some sensitive data (such as keys and passwords).\n  In 2015,   Include Security found a vulnerability in the design of the nRF51 code readout protection feature (called  RBPCONF), allowing an attacker to recover the entire Firmware using the SWD debug interface.\n On the nRF51, once the RBPCONF protection is enabled, using the debugger to access directly the Flash or RAM return nothing but zeros. However, it is still possible to control the code execution and read and write to registers (even to Program Counter). So finding a \u201cgadget\u201d in the protected memory such as a simple load word instruction that read memory from an address in some register to another register is sufficient to extract the entire Firmware. Consequently, an attacker with physical access to an nRF51-based device, is able to dump the Flash, exploiting this design vulnerability.\n Thereby, nRF51 code readout protection (RBPCONF) is considered as a broken security mechanism and does not protect against Firmware Extraction.\n  After this fail,   NordicSemiconductor decided to design the nRF52 with a more restricted security mechanism in order to protect against Memory Readout. This security feature is called  Access Port Protection (APPROTECT), mentioned very briefly in each of the nRF52 datasheet:\n  Typically, an external debugger is accessing the ARM CPU through the Debug Access Port (DAP). Then, two different ports are potentially available:\n \u2013\u00a0 CTRL-AP. This is the Master Debug Port and it is not dependent of APPROTECT. It will be used to recover, in case of bricked device for example.\n \u2013\u00a0 AHB-AP. This the real Debug Port to access memories and control the CPU via SWD.\n NordicSemiconductor does not provide any information about the APPROTECT mechanism. I recommend to read   ARM reference documentation of Cortex-M.\n  User Information Configuration Registers (UICR) are non-volatile memory (NVM) registers for configuring user-specific settings. They are mapped at  0x10001000.\n APPROTECT belongs to UICR.  It is necessary to write 0xFFFFFF00 at address 0x10001208 to enable the Access Port Protection, as shown below:\n   According to Nordic, the APPROTECT security cannot be disabled without erasing all the RAM and Memory Flash.\n     The User Manual and schematics are available on the manufacturer\u2019s website. The nRF52840 is a QFN73 version, 7x7mm, located on the right.\n This kit has an embedded   Segger J-Link debugger (the biggest chip with a white sticker).\n   To Start, I just compile and flash an example from the SDK to check my environment is OK.\n    $ openocd -s /usr/local/share/openocd/scripts -f ./interface/jlink.cfg -c &#34;transport select swd&#34; -f ./target/nrf52.cfg#Telnet$ telnet localhost 4444&gt; flash fillw 0x10001208 0xFFFFFF00 0x01&gt; reset\n   After that, any attempt to connect the CPU will fail, displaying \u201c Error: Could not find MEM- AP to control the core\u201d:\n      # Read APPROTECTSTATUS # (0x0 Access port protection enabled - 0x1 APP disabled) &gt; nrf52.dap apreg 1 0x0c 0x00000000# Write ERASEALL register&gt; nrf52.dap apreg 1 0x04 0x01&gt; reset\n   All Flash and RAM are erased during the process. After a Reset, the nRF52 can be programmed again.\n   The Boot Process is relatively simple, due to the fact that the nRF52840 does not contain bootROM code (so no embedded boot-loader routines, nor IAP/ISP routines to\u00a0 reverse-engineer\u2026)\n   So far, it is really simple. All the blocks, like the NVMC, the memories, the Debug Acces Port\u2026 are initialised purely in Hardware.\n  In nRF52 SoC, several sources may trigger a reset. All the reset sources and their targets are summarised in the table below:\n  The last line is interesting.  A Power-on reset will reset the entire SoC, included the Debug Port.\n  The goal is to reenable the access to the AHB-AP Debug, despite of the APPROTECT.\n After a Power-on Reset, the AHB-AP has to initialise itself according to the value of the APPROTECT, which is stored in UICR (a dedicated Flash memory partition).\n During the boot, the Memory Controller (NVMC) has to communicate with the CPU (or with the AHB-AP Block directly) to provide the APPROTECT value stored in Flash, and then set its protection state accordingly.\n Due to the absence of BootROM, this is achieved by pure Hardware and it has to be done during the early boot process, before the CPU start to load and execute code.\n I will try to identify this \u201cpure HW process\u201d and then try to modify the AHB-AP Debug Initialisation. If successful, the Debug features will be reactivated until the next Power-on Reset.\n    The system contains two different regulator stages, REG0 and REG1. Each regulator stage has two different and configurable options based on Low-dropout Regulators (LDO) and Buck Regulators (DC/DC).\n   I am particularly interested by the DEC pins (DEC1, DEC2 until DEC6), where external decoupling capacitors are connected. NordicSemiconductor does not provide any detail about the nRF52 power network.\n After a quick probing session, I  decide to focus on DEC4 (1.2V-1.3V) and DEC1 (0.8V-0.9V):\n DEC4 is the power after the REG1 stage. So it probably supplies the entire digital system (CPU &amp; memories)\n   To analyse the activity inside the chip, it is generally necessary to slightly modified the PCB:\n    My  low-cost voltage gliching is an homemade HW electronic system, dedicated to perform fault injections in a suitable manner. The total cost of this electronic board is less than 5$, which proves fault injection is a very low cost technique and can be achieved by limited hackers.\n The output of my low-cost voltage glitching system will be connected to DEC1, using the SMA connector previously installed.\n  A red wire is soldered to DEC4 and a thin wire is soldered to DEC1:\n  Note: I re-soldered a 100nF capacitor at C5 location to have more \u201cstability\u201d of the CPU power during boot-up. This is not really necessary but it can help in case of unexpected CPU crashes.\n I connect the two wires to SMA connectors and I use a GND point as a common ground:\n  A micro-USB cable is used to power the entire board. USB to Serial Cable is connected to display UART message from the application (115200, 8N1).\n   CHANNEL3 (CH3) = Pulse command for the glitterCHANNEL4 (CH4) = Power consumption of the chip through DEC4 (Scope Trigger)\n   The goal is to identify a particular pattern into the power consumption, which could validated my previous assumption.\n For that purpose, the CPU power consumption (CH2) on DEC1 and System power Consumption (CH4) on DEC4 are both monitored.\n First, the Flash Memory Activity is clearly distinguishable (at the trigger T mark) and corresponds to successive read operations from Flash:\n  On the next screenshot, the Arm CPU start its execution (at 19us after the trigger mark). It is distinguishable on CH2 (CPU power consumption):\n  Then, I decide to focus my analysis to find the NVMC activity, by comparing the two power signals DEC4 and DEC1:\n  I am quite confident this pattern ( red frame) corresponds to the memory controller transferring the UICR values to the core (or to the AHB-AP blockdirectly), to configure the Debug Ports (AHB-AP, CTRL-AP) and set the APPROTECT to finally disable the debug interface.\n  A python script is in charge to arm the scope, set the different glitch parameters and reset the board.\n A glitch campaign is started, producing very short pulse on the DEC1 power line to target specifically the previous identified pattern.\n   Note how the power consumption of the System is modified after the glitch. This is the result you need.\n After each glitch attempt, the following OpenOcd command is then played by the script, in order to dump the entire Flash memory (this will happen only in case of successful connection to the AHB-AP Debug interface):\n $ openocd -s /usr/local/share/openocd/scripts -f ./interface/jlink.cfg -c &#34;transport select swd&#34; -f ./target/nrf52.cfg -c &#34;init;dump_image nrf52_dumped.bin 0x0 0x100000&#34;\n The AHB-AP Debug Port is successfully unlocked by the glitch effect. The external debugger can now connect to the nRF52840 CPU (cortex M4F) to dump the Flash memory:\n  An Arm GDB session is then attached. Even if the APPROTECT value shows the nRF52840 is protected (0xFFFFFF00), I can now debug the target, for example by reading the Firmware at 0x00000000:\n   You probably guess it\u2019s also possible to fully control the device (because the debug interface is reactivated).\n During my experiment, the CPU is stuck in endless loop at 0x61C4 after the glitch. So, the screen below shows how the Program Counter (PC) is set to execute the first instruction (at 0x2b4) then step-in into the code as Proof-of-Concept:\n  R/W Access to Registers is below (SRAM and Flash R/W operations are available too, trust me):\n    Factory information configuration registers (FICR) are pre-programmed in factory and cannot be erased by the user. These registers contain chip-specific information (device id, keys, device address\u2026) and are located at 0x10000000:\n   The goal is to reactivate permanently the full debug capabilities on a device based on nRF52 SoCs.\n  Reflash the nRF52 again to write the Flash memory content and the UICR (with a proper patch of the APPROTECT value set to 0xFFFFFFFF of course).\n After that, permanent full debug over the SWD interface is permanently enabled and glitching is not necessary.\n     To demonstrate how easy it is to apply this exploit, the attack has been reproduced on a real product,   my\u00a0Logitech Pro G Mouse I used everyday.\n  This will be the  part 2 of this investigation of the nRF52 SoCs. In this second part , I will also demonstrate how  this vulnerability is currently impacting ALL the nRF52 SoCs, from nRF52810 to nRF52840.\n  The Access Port Protection APPROTECT is the most recent security feature designed by NordicSemiconductor to protect against Firmware Readout and Reverse-Engineering. This APPROTECT feature is therefore present into the entire nRF52 SoC Family.\n in this blogpost, a low-cost fault attack has been successfully achieved on nRF52840.  It allows an attacker having physical access to bypass the APPROTECT to reactivate the SWD debug interface permanently (R/W access to memories and registers, control CPU code execution, dump the Flash memory, FICR and UICR\u2026)\n Due to its low-complexity, this attack on the nRF52840 can be reproduced on the field easily. I have no doubt any motivated proficient hacker could reproduce this attack in less than one day and with less than 500$ equipment.\n The vulnerability resides in Silicon. There is no way to patch without HW revision. This is impacting a tremendous number of products based on nRF52 platforms.\n      28/04/2020: LimitedResults proposes to work with Nordic on a responsible disclosure based on CVE process.\n   08/06/2020: After one month of silence and several follow-ups without any response from Nordic, Nordic declines to work with LimitedResults on a responsible disclosure.", "posttime": "2020-06-11 14:49:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fa\u4ef6,firmware,\u95ea\u5b58", "title": "NRF52\u56fa\u4ef6\u8bfb\u53d6\u548c\u53cd\u5411\u5de5\u7a0b\u73b0\u5df2\u6210\u4e3a\u53ef\u80fd", "title_en": "NRF52 Firmware Readout and Reverse-Engineering Now Possible", "transed": 1, "url": "https://limitedresults.com/2020/06/nrf52-debug-resurrection-approtect-bypass/", "via": "", "real_tags": ["\u56fa\u4ef6", "firmware", "\u95ea\u5b58"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006108, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63a7\u5236\u5668\u5982\u4f55\u6700\u5927\u9650\u5ea6\u5730\u5ef6\u957f\u56fa\u6001\u786c\u76d8\u7684\u5bff\u547d\uff1f\u6bd5\u7adf\uff0cMLC\u95ea\u5b58\u7684\u5bff\u547d\u53ea\u670910,000\u4e2a\u6216\u66f4\u5c11\u7684\u64e6\u9664/\u5199\u5165\u5468\u671f\uff0c\u4e0e\u56fa\u6001\u786c\u76d8\u5728\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u73af\u5883\u4e2d(\u7279\u522b\u662f\u5728\u4f01\u4e1a\u4e2d)\u9884\u671f\u7684\u5199\u5165\u6d41\u91cf\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6570\u5b57\u3002\u4e0d\u8fc7\uff0cMLC\u6b63\u5728\u6210\u4e3a\u4f01\u4e1a\u7684\u6807\u51c6\u3002\n\u8fd9\u624d\u662f\u56fa\u6001\u786c\u76d8\u67b6\u6784\u5e08\u771f\u6b63\u8d5a\u94b1\u7684\u5730\u65b9\u3002\u56fa\u6001\u786c\u76d8\u4e13\u5bb6\u77e5\u9053\u6709\u516b\u79cd\u57fa\u672c\u6280\u672f\u53ef\u4ee5\u5ef6\u957f\u56fa\u6001\u786c\u76d8\u7684\u4f7f\u7528\u5bff\u547d\uff0c\u4f7f\u5176\u8d85\u51fa\u4ec5\u6709\u95ea\u5b58\u6240\u80fd\u63d0\u4f9b\u7684\u8010\u7528\u6027\uff1a\n\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u662f\u4e00\u4e2a\u8db3\u591f\u590d\u6742\u7684\u4e3b\u9898\uff0c\u8db3\u4ee5\u4fdd\u8bc1\u6709\u81ea\u5df1\u7684\u5e16\u5b50\uff0c\u6240\u4ee5\u5728\u516b\u4e2a\u661f\u671f\u4e94\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u90fd\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u6bcf\u4e2a\u4e3b\u9898\u7684\u5e16\u5b50\uff0c\u89e3\u91ca\u6bcf\u4e2a\u4e3b\u9898\u7684\u542b\u4e49\u3002\n\u9700\u8981\u8003\u8651\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u8fd9\u4e9b\u6280\u672f\u7684\u6b63\u786e\u7ec4\u5408\u5141\u8bb8SSD\u5177\u6709\u6bd4\u5185\u90e8NAND\u89c4\u8303\u6240\u652f\u6301\u7684\u66f4\u597d\u7684\u8010\u78e8\u6027\u3002\n\u5355\u51fb\u4e0a\u9762\u7684\u4efb\u4e00\u94fe\u63a5\uff0c\u4e86\u89e3\u6bcf\u79cd\u6280\u672f\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5b58\u50a8\u7f51\u7edc\u884c\u4e1a\u534f\u4f1a(SNIA)\u7f51\u7ad9\uff0c\u4ee5pdf\u683c\u5f0f\u4e0b\u8f7d\u6574\u4e2a\u7cfb\u5217\u768420\u9875\u5c0f\u518c\u5b50\u3002", "note_en": "How do controllers maximize the life of an SSD?\u00a0 After all, MLC flash has a lifetime of only 10,000 erase/write cycles or fewer and that is a very small number compared to the write traffic an SSD is expected to see in a high-workload environment, especially in the enterprise.\u00a0 Still, MLC is becoming the norm in the enterprise.\n  This is where SSD architects really earn their pay.\u00a0 There are eight basic techniques that  The SSD Guy knows of to extend SSD life beyond  the wear that the flash alone would provide:\n  Each of these is a topic that is complex enough to warrant its own post, so for eight Fridays I published a post on each to explain what each means.\n What is important to consider is that the right mix of these techniques allows an SSD to have significantly better wear than the internal NAND\u2019s specifications would support.\n Click on any of the above links to learn about how each of these techniques works.\n Alternatively, you can visit the Storage Networking Industry Association (SNIA)  website to download the entire series as a 20-page booklet in pdf format.", "posttime": "2020-06-11 14:33:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fa\u6001\u786c\u76d8,\u786c\u76d8,ssd", "title": "\u56fa\u6001\u786c\u76d8\u63a7\u5236\u5668\u5982\u4f55\u6700\u5927\u5316\u56fa\u6001\u786c\u76d8\u5bff\u547d(2012)", "title_en": "How SSD Controllers Maximize SSD Life (2012)", "transed": 1, "url": "https://thessdguy.com/how-controllers-maximize-ssd-life/", "via": "", "real_tags": ["\u56fa\u6001\u786c\u76d8", "\u786c\u76d8", "ssd"]}, {"category": "", "categoryclass": "", "imagename": "785f544ed5058277f528a9d77d169e84.jpg", "infoid": 1006107, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u90fd\u88ab\u56f0\u5728\u53e6\u4e00\u4e2a\u73b0\u5b9e\u4e2d\uff0c\u5728\u90a3\u91ccGUI\u4ecd\u7136\u5f88\u7cdf\u7cd5\u3002\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u662f\u5426\u80fd\u6210\u529f\u3002\u8bba\u575b\u8ba8\u8bba\u94fe\u63a5\uff1ahttps://www.accursedf.", "note_en": "We're all trapped in an alternate reality where the GUI is still bad. I don't know if we're going to make it. Link to forum discussion: https://www.accursedf...", "posttime": "2020-06-11 13:43:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e94\u8be5,lot,\u8ba8\u8bba", "title": "GUI\u5e94\u8be5\u4f1a\u66f4\u597d[\u89c6\u9891]", "title_en": "The GUI should be a lot better [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=AItTqnTsVjA", "via": "", "real_tags": ["\u5e94\u8be5", "lot", "\u8ba8\u8bba"]}, {"category": "", "categoryclass": "", "imagename": "da175bd3f8f86d3b60e23fbbf803c089.jpg", "infoid": 1006106, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80af\u5854\u57fa\u5dde\u8def\u6613\u65af\u7ef4\u5c14\u3002-\u8def\u6613\u65af\u7ef4\u5c14\u5730\u94c1\u8b66\u5bdf\u5728\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2(Breonna Taylor)\u7684\u516c\u5bd3\u91cc\u5f00\u67aa\u6253\u6b7b\u5979\u8fd1\u4e09\u4e2a\u6708\u540e\uff0c\u8be5\u90e8\u95e8\u53d1\u5e03\u4e86\u5f53\u665a\u7684\u4e8b\u4ef6\u62a5\u544a\u3002\n\u8fd9\u4efd\u957f\u8fbe\u56db\u9875\u7684\u62a5\u544a\u5217\u51fa\u4e86\u65f6\u95f4\u3001\u65e5\u671f\u3001\u6848\u4ef6\u7f16\u53f7\u3001\u4e8b\u53d1\u5730\u70b9\u548c\u53d7\u5bb3\u8005\u7684\u540d\u5b57-\u5e03\u96f7\u5a1c\u00b7\u6c99\u594e\u5c14\u00b7\u6cf0\u52d2(Breonna Shaquille Taylor)-\u4ee5\u53ca\u5979\u662f\u4e00\u540d26\u5c81\u7684\u975e\u9ed1\u4eba\u5973\u6027\u7684\u4e8b\u5b9e\u3002\n\u8fd9\u4efd\u62a5\u544a\u7f16\u8f91\u4e86\u6cf0\u52d2\u7684\u8857\u9053\u53f7\u7801\u3001\u516c\u5bd3\u53f7\u7801\u548c\u51fa\u751f\u65e5\u671f-\u6240\u6709\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u62a5\u9053\u3002\n\u636e\u5979\u5bb6\u4eba\u7684\u5f8b\u5e08\u79f0\uff0c\u540d\u5355\u4e0a\u5217\u51fa\u7684\u662f\u5979\u7684\u4f24\u52bf\uff0c\u6ca1\u6709\u53d7\u4f24\uff0c\u5c3d\u7ba1\u5979\u81f3\u5c11\u88ab\u67aa\u51fb\u4e868\u67aa\uff0c\u5e76\u5728\u8d70\u5eca\u5730\u677f\u4e0a\u6b7b\u4e8e\u8840\u6cca\u4e2d\u3002\n\u5b83\u5217\u51fa\u7684\u6307\u63a7\u662f\u6b7b\u4ea1\u8c03\u67e5\u548cLMPD\u6d89\u53ca\u7684\uff0c\u4f46\u52fe\u9009\u4e86\u5f3a\u884c\u8fdb\u5165\u4e0b\u9762\u7684\u65b9\u6846\uff0c\u5373\u4f7f\u8b66\u5bdf\u7528\u649e\u51fb\u9524\u6572\u4e86\u6cf0\u52d2\u7684\u516c\u5bd3\u95e8\u3002\n\u5b83\u8fd8\u5728\u62a5\u544a\u7684\u7f6a\u72af\u90e8\u5206\u5217\u51fa\u4e86\u5728\u6cf0\u52d2\u7684\u516c\u5bd3\u5f00\u67aa\u6253\u6b7b\u5979\u7684\u4e09\u540d\u8b66\u5bdf-47\u5c81\u7684\u4e54\u6069\u00b7\u9a6c\u4e01\u5229\u4e2d\u58eb\u300142\u5c81\u7684\u8fc8\u5c14\u65af\u00b7\u79d1\u65af\u683c\u7f57\u592b\u548c44\u5c81\u7684\u5e03\u96f7\u7279\u00b7\u6c49\u514b\u68ee\u3002\n3\u670813\u65e5\u7684\u4e8b\u4ef6\u53d9\u8ff0\u53ea\u8bf4\u4e86PIU\u8c03\u67e5\uff0c\u62a5\u544a\u7684\u5176\u4f59\u90e8\u5206\u6839\u672c\u6ca1\u6709\u586b\u5199\u4efb\u4f55\u4fe1\u606f\u3002\n\u6cf0\u52d2\u5728\u51cc\u666812\u70b940\u5206\u5de6\u53f3\u5728\u5979\u7684\u516c\u5bd3\u91cc\u3002\u5f53\u5730\u65f6\u95f4\uff0c\u4f5c\u4e3a\u6bd2\u54c1\u8c03\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e09\u540d\u4fbf\u8863\u8b66\u5bdf\u4f7f\u7528\u5730\u533a\u6cd5\u5b98\u739b\u4e3d\u00b7\u8096(Mary Shaw)\u7b7e\u7f72\u7684\u4e0d\u6572\u95e8\u641c\u67e5\u4ee4\u8fdb\u5165\u4e86\u5979\u7684\u5bb6\u3002\n\u8b66\u5bdf\u8bf4\u4ed6\u4eec\u5ba3\u5e03\u4e86\u4ed6\u4eec\u7684\u5b58\u5728\uff0c\u4f46\u662f\u6cf0\u52d2\u7684\u7537\u670b\u53cb\u80af\u5c3c\u65af\u00b7\u6c83\u514b\u548c\u51e0\u4e2a\u90bb\u5c45\u8bf4\u4ed6\u4eec\u6ca1\u6709\u3002\u6c83\u514b\u66fe\u8868\u793a\uff0c\u4ed6\u8ba4\u4e3a\u5165\u4fb5\u8005\u8bd5\u56fe\u7834\u95e8\u800c\u5165\uff0c\u5e76\u5f00\u4e86\u4e00\u67aa\u8b66\u544a\uff0c\u51fb\u4e2d\u4e86\u9a6c\u4e01\u5229\u7684\u817f\u90e8\u3002\n\u9a6c\u4e01\u5229\uff0c\u6c49\u514b\u68ee\u548c\u79d1\u65af\u683c\u7f57\u592b\u6b63\u5728\u8fdb\u884c\u884c\u653f\u91cd\u65b0\u5206\u914d\uff0c\u7b49\u5f85\u8c03\u67e5\u3002LMPD\u5468\u4e09\u5ba3\u5e03\uff0c\u8981\u6c42\u902e\u6355\u4ee4\u7684\u4fa6\u63a2\u7ea6\u4e66\u4e9a\u00b7\u6770\u6069\u65af(Joshua Jaynes)\u4e5f\u5df2\u88ab\u91cd\u65b0\u5206\u914d\u3002\n\u4eca\u65e5\u7f8e\u56fd\u7f51\u7edc\u8def\u6613\u65af\u7ef4\u5c14\u4fe1\u4f7f\u6742\u5fd7(Louisville Courier Journal Of The USA Today Network)\u7684\u5f8b\u5e08\u4e54\u6069\u00b7\u5f17\u83b1\u6c99\u514b(Jon Fleischaker)\u8bf4\uff1a\u201c\u8fd9\u4efd\u6587\u4ef6\u8bc1\u660e\uff0cLMPD\u7ee7\u7eed\u5632\u5f04\u900f\u660e\u5ea6\u3002\u201d\u5f17\u83b1\u6c99\u514b\u662f\u8be5\u5dde\u5f00\u653e\u6863\u6848\u6cd5\u7684\u4e3b\u8981\u4f5c\u8005\u4e4b\u4e00\uff0c\u8be5\u6cd5\u8981\u6c42\u5728\u9664\u6781\u5176\u7f55\u89c1\u7684\u60c5\u51b5\u4e0b\u516c\u5e03\u516c\u5f00\u6587\u4ef6\u3002\n\u5f17\u83b1\u6c99\u514b\u8bf4\uff1a\u201c\u5728\u8d39\u820d\u5c14\u6267\u653f\u671f\u95f4\uff0c\u6709\u4e00\u4e2a\u4e00\u8d2f\u7684\u653f\u7b56\u548c\u505a\u6cd5\uff0c\u5373\u62d2\u7edd\u544a\u8bc9\u516c\u4f17\u8b66\u65b9\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u65e0\u8bba\u8b66\u5bdf\u7684\u884c\u4e3a\u591a\u4e48\u4e0d\u5f53\u3002\u201d\n\u968f\u7740\u5173\u4e8e\u8b66\u5bdf\u6539\u9769\u7684\u8fa9\u8bba\u5728\u5168\u56fd\u8303\u56f4\u5185\u5c55\u5f00\uff0c\u5f17\u83b1\u6c99\u514b\u8bf4\uff0c\u57ce\u5e02\u9886\u5bfc\u4eba\u62d2\u7edd\u5c65\u884c\u4ed6\u4eec\u7684\u4e49\u52a1\uff0c\u516c\u5f00\u8def\u6613\u65af\u7ef4\u5c14\u516c\u6c11\u6240\u9700\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5c31\u54ea\u4e9b\u65b9\u9762\u9700\u8981\u6539\u53d8\u8fdb\u884c\u6709\u610f\u4e49\u7684\u8fa9\u8bba\u3002\n\u5982\u679c\u8b66\u5bdf\u4e0d\u53c2\u4e0e\uff0c\u5e02\u957f\u4e5f\u4e0d\u6562\u53cd\u6297\uff0c\u6211\u4eec\u600e\u4e48\u80fd\u8ba4\u771f\u8ba8\u8bba\u8b66\u5bdf\u6539\u9769\u5462\uff1f\u4ed6\u8bf4\u3002\n\u201c\u4fe1\u4f7f\u65e5\u62a5\u201d\u6b63\u5728\u8d77\u8bc9LMPD\uff0c\u5e76\u5bfb\u6c42\u7acb\u5373\u516c\u5e03\u8be5\u90e8\u95e8\u5728\u6cf0\u52d2\u67aa\u51fb\u6848\u4e2d\u7684\u8c03\u67e5\u6587\u4ef6\u3002\n\u201c\u4fe1\u4f7f\u65e5\u62a5\u201d\u8fd8\u57285\u6708\u4efd\u5411\u5dde\u603b\u68c0\u5bdf\u957f\u529e\u516c\u5ba4\u63d0\u51fa\u4e0a\u8bc9\uff0c\u53cd\u5bf9\u8def\u6613\u65af\u7ef4\u5c14\u516c\u5171\u673a\u6784\u505a\u51fa\u7684\u516c\u5f00\u8bb0\u5f55\u7684\u51b3\u5b9a\uff0c\u62d2\u7edd\u516c\u5e03\u6cf0\u52d2\u6848\u4ef6\u80cc\u540e\u7684\u8bb0\u5f55\uff0c\u5305\u62ec\u4e8b\u4ef6\u62a5\u544a\u3001\u4e8b\u4ef6\u4e2d\u62e8\u6253\u7684911\u7535\u8bdd\u548c\u6cf0\u52d2\u7684\u5c38\u68c0\u62a5\u544a\u3002\n\u81ea\u90a3\u4ee5\u540e\uff0c\u8be5\u5e02\u53d1\u5e03\u4e86\u6c83\u514b\u7684911\u7535\u8bdd-\u4f46\u53ea\u662f\u5728\u6cf0\u52d2\u5bb6\u4eba\u7684\u5f8b\u5e08\u51e0\u4e2a\u5c0f\u65f6\u524d\u5c06\u5176\u4ea4\u7ed9\u65b0\u95fb\u5a92\u4f53\u4e4b\u540e\u3002", "note_en": "LOUISVILLE, Ky. \u2014\u00a0Nearly three months after Louisville Metro Police officers fatally shot\u00a0Breonna Taylor\u00a0in her apartment, the department  has released the incident report\u00a0from that night.\n  The four-page report lists the time, date, case number, incident location and the victim&#39;s name\u00a0\u2014 Breonna Shaquille Taylor\u00a0\u2014 as well as the fact that she is a 26-year-old\u00a0black female.\n The report redacts Taylor&#39;s street number, apartment number and date of birth\u00a0\u2014 all of which have been widely reported already.\n And it lists as her injuries, &#34;none,&#34; even though\u00a0she was shot at least eight times\u00a0and died on her hallway floor in a pool of blood, according to attorneys for her family.\n It lists the charges as &#34;death investigation\u00a0\u2014 LMPD involved&#34; but checks the &#34;no&#34; box under &#34;forced entry,&#34; even though officers used a battering ram to knock in Taylor&#39;s apartment door.\n    It also lists under the &#34;Offenders&#34; portion of the report the\u00a0three officers who fired in Taylor&#39;s apartment, fatally shooting her \u2014 Sgt. Jon Mattingly, 47; Myles Cosgrove, 42; and Brett Hankison, 44.\n The\u00a0&#34;narrative&#34; of events March 13 says only &#34;PIU investigation.&#34; And the rest of the report has no information filled in at all.\n  Taylor was at her apartment around 12:40 a.m. local time when the three plainclothes officers used a no-knock search warrant signed by District Judge Mary Shaw\u00a0to enter her home as part of a narcotics investigation.\n Officers say they announced their presence, but Taylor&#39;s boyfriend, Kenneth Walker, and several neighbors say they did not. Walker has said he thought intruders were trying to break in\u00a0and fired a warning shot that struck Mattingly in the leg.\n  Mattingly, Hankison and Cosgrove are\u00a0on administrative reassignment pending the investigation. The detective who requested the warrant, Joshua Jaynes,\u00a0has also been reassigned, LMPD announced Wednesday.\n \u201cThis document is proof that LMPD continues to make a mockery of transparency,\u201d said Jon Fleischaker, counsel for the Louisville Courier Journal of the USA TODAY Network\u00a0and one of the principal authors of the state\u2019s Open Records law that requires the release of public documents in all but extremely rare circumstances.\n  \u201cUnder the Fischer administration, there has been a consistent policy and practice of refusing to tell the public what is going on with the police, regardless of how inappropriate the officer conduct has been,&#34; Fleischaker said.\n  With debate about police reform taking place nationwide, Fleischaker said city leaders\u00a0&#34;are refusing to honor their obligations to disclose the basic information necessary for the citizens of Louisville to have a meaningful debate about what needs to change.&#34;\n  &#34;How can we even seriously debate police reform if the police won\u2019t engage and the mayor won\u2019t stand up to them?&#34; he said.\n The Courier Journal is suing LMPD,\u00a0seeking the immediate release of the department&#39;s investigative file\u00a0in\u00a0Taylor&#39;s shooting.\n  The Courier Journal also filed an appeal with the state attorney general\u2019s office in May to object to open-records decisions Louisville public agencies made refusing to release records underlying the Taylor case, including the incident report, 911 calls made in the incident and Taylor&#39;s autopsy report.\n The city has since released Walker&#39;s 911 call\u00a0\u2014 but only after\u00a0an attorney for Taylor&#39;s family gave it to news media\u00a0hours earlier.", "posttime": "2020-06-11 13:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,incident,\u6cf0\u52d2", "title": "\u8def\u6613\u65af\u7ef4\u5c14\u8b66\u65b9\u53d1\u5e03\u4e86\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2\u4e8b\u4ef6\u62a5\u544a\u3002\u51e0\u4e4e\u662f\u7a7a\u767d\u7684", "title_en": "Louisville police release the Breonna Taylor incident report. It's nearly blank", "transed": 1, "url": "https://eu.usatoday.com/story/news/nation/2020/06/10/breonna-taylor-case-louisville-police-nearly-blank-incident-report/5335929002/", "via": "", "real_tags": ["\u53d1\u5e03", "incident", "\u6cf0\u52d2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006105, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7ecf\u5e38\u63d0\u9192\u7528\u6237\uff0cSourceHut\u662f\u4e00\u4e2a\u201c\u963f\u5c14\u6cd5\u8d28\u91cf\u7684\u4ea7\u54c1\u201d\uff0c\u5c3d\u7ba1\u5f88\u591a\u4eba\u73b0\u5728\u5df2\u7ecf\u5728\u4f7f\u7528\u5b83\uff0c\u5e76\u4e14\u53d1\u73b0\u5b83\u975e\u5e38\u9002\u5408\u4ed6\u4eec\u76ee\u524d\u7684\u9700\u6c42\u3002\u6211\u8fd9\u6837\u8bf4\u7684\u610f\u601d\u662f\u8981\u63d0\u9192\u60a8\uff0c\u867d\u7136\u5f88\u591a\u4e8b\u60c5\u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\uff0c\u4f46\u5728\u6211\u4eec\u6295\u5165\u8bbe\u8ba1\u4e4b\u524d\uff0c\u6211\u4ecd\u5728\u52aa\u529b\u5b8c\u5584\u5b9e\u73b0\u3002\u8fd9\u9879\u57fa\u7840\u6027\u5de5\u4f5c\u6bd4\u8bb8\u591a\u9ad8\u7ea7\u529f\u80fd\u66f4\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e3a\u6211\u4eec\u6784\u5efa\u548c\u6269\u5c55\u66f4\u5e7f\u6cdb\u7684SourceHut\u5e73\u53f0\u63d0\u4f9b\u57fa\u7840\uff0c\u4f7f\u5176\u5728\u672a\u6765\u5f97\u5230\u5f88\u597d\u7684\u6269\u5c55\u3002\n\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684SourceHut\u90fd\u662f\u4f7f\u7528Python\u3001Flask\u548cSQLAlChemy\u6784\u5efa\u7684\uff0c\u8fd9\u5bf9\u4e8e\u5feb\u901f\u6784\u5efa\u5de5\u4f5c\u539f\u578b\u975e\u5e38\u6709\u7528\u3002\u8fd9\u662f\u6784\u5efa\u201c\u826f\u597d\u201d\u670d\u52a1\u548c\u7406\u89e3\u95ee\u9898\u7a7a\u95f4\u7ea6\u675f\u7684\u6709\u6548\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6211\u5df2\u7ecf\u6e05\u695a\u5730\u8ba4\u8bc6\u5230\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u7684\u76ee\u6807\u4e0d\u4ec5\u662f\u201c\u597d\u201d\u7684\uff0c\u800c\u4e14\u662f\u201c\u6781\u597d\u7684\u201d\u3002\u9759\u6001\u7c7b\u578b\u7684\u597d\u5904\u4f1a\u4f7f\u7cfb\u7edf\u53d8\u5f97\u66f4\u7a33\u5b9a\uff0c\u66f4\u5feb\u3001\u66f4\u8f7b\u91cf\u7ea7\u7684\u5b9e\u73b0\u4f1a\u4f7f\u7cfb\u7edf\u66f4\u5177\u53ef\u6269\u5c55\u6027\u3002\u603b\u7684\u6765\u8bf4\uff0c\u6211\u5728SourceHuthas\u4e0a\u7684\u5de5\u4f5c\u771f\u7684\u8ba9\u6211\u5bf9Python\u4f5c\u4e3a\u5927\u578b\u9879\u76ee\u7684\u4e00\u79cd\u4e25\u8083\u8bed\u8a00\u7684\u770b\u6cd5\u53d8\u5f97\u7cdf\u7cd5\u8d77\u6765\u3002\nalpha\u5347\u7ea7\u5230\u201cbeta\u201d\u7684\u6838\u5fc3\u8981\u6c42\u4e4b\u4e00\u662f\u5728\u6574\u4e2a\u670d\u52a1\u4e2d\u5b9e\u73b0\u5b8c\u6574\u7684API\uff0c\u65e2\u4f9b\u7528\u6237\u8bbf\u95ee\uff0c\u4e5f\u4f9b\u670d\u52a1\u76f8\u4e92\u901a\u4fe1\u3002\u8fd9\u4e9bAPI\u7684\u4f4e\u8ff7\u72b6\u6001\u662f\u6211\u8ba1\u5212\u8fdb\u884c\u7684\u4e00\u4e9b\u5927\u89c4\u6a21\u66f4\u6539\u7684\u4e3b\u8981\u52a8\u673a\u3002\u6700\u521d\u6211\u9009\u62e9\u5c06REST\u7528\u4e8eAPI\uff0c\u56e0\u4e3aREST\u4e4f\u5473\u4e14\u6613\u4e8e\u7406\u89e3\u3002\u4e4f\u5473\u7684\u3001\u88ab\u5e7f\u6cdb\u7406\u89e3\u7684\u65b9\u6cd5\u662f\u91c7\u8d2d\u5c0f\u5c4b\u7684\u9762\u5305\u548c\u9ec4\u6cb9\u3002\u7136\u800c\uff0c\u6211\u5bf9\u7ed3\u679c\u975e\u5e38\u4e0d\u6ee1\u610f\uff0c\u4e5f\u4e0d\u613f\u610f\u628a\u8fd9\u4e2a\u8bbe\u8ba1\u63a8\u5411\u6d4b\u8bd5\u7248\u3002\u5728\u6b64\u671f\u95f4\uff0cAlpha\u662f\u91cd\u65b0\u8003\u8651\u6b64\u65b9\u6cd5\u5e76\u6784\u5efa\u66f4\u53ef\u6301\u7eed\u7684API\u8bbe\u8ba1\u7684\u6700\u4f73\u65f6\u673a\u3002\n\u8f93\u5165GraphQL\u3002\u6211\u8fc7\u53bb\u66fe\u8003\u8651\u8fc7GraphQL\u51e0\u6b21\uff0c\u4f46\u7531\u4e8e\u4ee5\u4e0b\u51e0\u4e2a\u539f\u56e0\u9009\u62e9\u4e0d\u8fdb\u4e00\u6b65\u7814\u7a76\u5b83\uff1a\n\u5728\u6211\u7684\u6bcf\u4e00\u6b21\u7814\u7a76\u5c1d\u8bd5\u4e2d\uff0c\u670d\u52a1\u5668\u5b9e\u73b0\u7684\u8d28\u91cf\u90fd\u76f8\u5f53\u5dee\uff0c\u7279\u522b\u662f\u5728JavaScript\u5b9e\u73b0\u4e4b\u5916\u3002\n\u751f\u6001\u7cfb\u7edf\u53d7\u5230\u7f51\u7edc\u5f00\u53d1\u6587\u5316\u7684\u4e25\u91cd\u5f71\u54cd\uff0c\u800c\u8fd9\u79cd\u6587\u5316\u88abSourceHut\u7684\u7406\u5ff5\u65ad\u7136\u62d2\u7edd\u3002\u8fd9\u6cc4\u9732\u4e86GraphQL\u53ef\u7528\u7684\u6587\u6863\u548c\u8d44\u6e90\uff0c\u8fd9\u4f7f\u5f97\u901a\u8fc7SourceHut\u66f4\u4fdd\u5b88\u7684\u503c\u8fdb\u884c\u8bc4\u4f30\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\nGraphQL\u6ca1\u6709\u89e3\u51b3\u6211\u5e0c\u671b\u5b83\u80fd\u89e3\u51b3\u7684\u8bb8\u591a\u95ee\u9898\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u5e76\u4e0d\u4ee3\u8868\u6211\u4eec\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u597d\u7684Web API\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u7ec8\u7b54\u6848\u3002\u56e0\u6b64\uff0c\u6709\u4e00\u5929\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u6280\u672f\u6765\u53d6\u4ee3\u5b83\uff0c\u8fd9\u8ba9\u6211\u5728\u57fa\u4e8e\u5b83\u7684\u957f\u671f\u7cfb\u7edf\u8bbe\u8ba1\u4e0a\u72b9\u8c6b\u4e0d\u51b3\u3002\nGraphQL\u5728\u4e00\u822c\u7684Web\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u6709\u4e9b\u7f13\u6162\uff0c\u589e\u503c\u5f88\u96be\u7406\u89e3\uff0c\u66f4\u96be\u5f88\u597d\u5730\u5b9e\u73b0\uff0c\u8fd9\u4f7f\u5f97\u9664\u4e86\u9ad8\u7ea7\u5de5\u7a0b\u56e2\u961f\u4e4b\u5916\u7684\u6240\u6709\u4eba\u90fd\u5f88\u96be\u7406\u89e3\u3002\n\u7136\u800c\uff0c\u968f\u7740\u6211\u5bf9REST\u65b9\u6cd5\u7684\u4e0d\u6ee1\u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u8fbe\u5230\u9876\u5cf0\uff0c\u6211\u5bf9\u5b83\u8fdb\u884c\u4e86\u66f4\u8ba4\u771f\u3001\u66f4\u6df1\u5165\u7684\u5ba1\u67e5\u3002\u6211\u4e3agit.sr.ht\u6784\u5efa\u4e86\u4e00\u4e2aResearch GraphQL API\uff0c\u8270\u96be\u5730\u6d4f\u89c8\u4e86\u6587\u6863\u548c\u89c4\u8303\uff0c\u76ee\u7684\u662f\u4eceSourceHut\u7684\u89d2\u5ea6\u7406\u89e3\u5b83\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5e94\u7528\u4e8e\u6211\u4eec\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u89c2\u3002\u6211\u8fd8\u53d1\u73b0(\u6216\u8bbe\u8ba1)\u4e86GraphQL\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u8ba9\u6211\u66f4\u6709\u4fe1\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u4e0d\u4f1a\u8fc7\u65f6\u6216\u7cdf\u7cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5f53NextThing\u51fa\u73b0\u65f6\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u4eba\u611f\u89c9\u8fc7\u65f6\u6216\u7cdf\u7cd5\u3002\u800c\u4e14\uff0c\u91cd\u8981\u7684\u662f\uff0c\u81ea\u4ece\u6211\u4e0a\u6b21\u5c1d\u8bd5\u4e4b\u540e\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u540d\u4e3agqlgen\u7684\u65b0\u670d\u52a1\u5668\u7aef\u5b9e\u73b0\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u8db3\u4ee5\u8ba9\u6211\u8ba4\u771f\u8003\u8651\u5c06\u5176\u4f5c\u4e3a\u5927\u578b\u7cfb\u7edf\u7684\u57fa\u7840\u3002\nGraphQL\u7684\u53e6\u4e00\u4e2a(\u6f5c\u5728)\u4f18\u52bf\u662f\u80fd\u591f\u5c06\u8bb8\u591a\u4e0d\u540c\u7684API\u7ec4\u5408\u5230\u5355\u4e2a\u8054\u5408GraphQL\u6a21\u5f0f\u4e2d\u3002\u5982\u679c\u8fd9\u6210\u529f\u4e86\uff0c\u90a3\u4e48\u8bbf\u95ee\u6240\u6709\u5206\u5e03\u5f0fSourceHut\u670d\u52a1\u5c06\u975e\u5e38\u65b9\u4fbf\uff0c\u53ea\u9700\u5c06\u6bcf\u4e2a\u670d\u52a1\u6216\u670d\u52a1\u5b50\u96c6\u7ec4\u5408\u6210\u9002\u5408\u4e8e\u7279\u5b9aSourceHut\u90e8\u7f72\u7684\u7b80\u5355\u805a\u5408\u7cfb\u7edf\u5373\u53ef\u3002\u53e6\u4e00\u4e2a\u53ef\u80fd\u88abGraphQL\u6539\u8fdb\u7684\u7814\u7a76\u9886\u57df\u662fWebHook\uff1a\u6211\u60f3\u5c1d\u8bd5\u4f7f\u7528GraphQL\u67e5\u8be2\u6ce8\u518c\u60a8\u7684WebHook\uff0c\u8fd9\u6837WebHook\u6709\u6548\u8d1f\u8f7d\u5c31\u53ef\u4ee5\u5305\u542b\u5904\u7406\u4e8b\u4ef6\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u989d\u5916\u7684API\u8bf7\u6c42\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u7684\u7ed3\u8bba\u662f\uff0cGraphQL\u867d\u7136\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u5728REST\u7684\u6700\u65b0\u6c34\u5e73\u4e0a\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u8fdb\u6b65\uff0c\u5e76\u4e14\u8db3\u591f\u6210\u719f\u548c\u6210\u719f\uff0c\u53ef\u4ee5\u4f5c\u4e3aAPI\u7684\u57fa\u7840\u548c\u6211\u53ef\u4ee5\u957f\u671f\u4fe1\u4efb\u7684\u5b9e\u73b0\u3002\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3aSourceHut\u7684\u8ff7\u4f60\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u8bbe\u8ba1\u9700\u8981\u6bcf\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u9ad8\u8d28\u91cf\u901a\u4fe1\u3002\u5728\u6ca1\u6709\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4e0d\u80fd\u4eceAlpha\u7ee7\u7eed\u524d\u8fdb\uff0c\u800cGraphQL\u8ba9\u6211\u66f4\u6709\u4fe1\u5fc3\u5f88\u597d\u5730\u5b9e\u73b0\u5b83\u3002\n\u6211\u5728\u524d\u9762\u4e5f\u63d0\u5230\u8fc7\uff0c\u6211\u5bf9\u4f5c\u4e3aSourceHut\u5927\u90e8\u5206\u5b9e\u73b0\u57fa\u7840\u7684Python/Flask/SQLAlChemydesign\u4e0d\u6ee1\u610f\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u7684\u6027\u80fd\u7279\u70b9\u76f8\u5f53\u5dee\uff0c\u6211\u53ef\u4ee5\u6539\u8fdb\u7684\u9009\u62e9\u6709\u9650\u3002\u53ef\u9760\u6027\u4e5f\u4e0d\u662f\u6211\u7279\u522b\u6709\u4fe1\u5fc3\u7684\uff0cGraphQL\u7684\u5de5\u4f5c\u672c\u6765\u4e0d\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u610f\u60f3\u4e0d\u5230\u7684\u89e3\u51b3\u65b9\u6848\u3002\nGraphQL\u670d\u52a1\u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u72ec\u7acb\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5b83\u4eec\u3002\u73b0\u5728\uff0cWeb\u670d\u52a1\u7684Python\u540e\u7aef\u901a\u8fc7SQLAlChemy\u76f4\u63a5\u4e0ePostgreSQL\u901a\u4fe1\uff0c\u4f46\u6211\u6253\u7b97\u6784\u5efa\u901a\u8fc7GraphQL\u8def\u7531\u7684\u8bd5\u9a8c\u6027\u66ff\u6362\u540e\u7aef\u3002\u8fd9\u6837\uff0c\u66f4\u9ad8\u6027\u80fd\u548c\u66f4\u5065\u58ee\u7684GraphQL\u540e\u7aef\u6210\u4e3aSourceHut\u4e2d\u6240\u6709\u4fe1\u606f\u7684\u552f\u4e00\u771f\u5b9e\u6027\u6765\u6e90\u3002\u5982\u679c\u6210\u529f\u7684\u8bdd\uff0c\u8fd9\u5c06\u5927\u5927\u589e\u5f3a\u6211\u5bf9\u7cfb\u7edf\u7684\u4fe1\u5fc3--Python\u5360\u7528\u7684\u7a7a\u95f4\u5c06\u53d8\u5f97\u66f4\u5c0f\u3001\u66f4\u7b80\u5355\uff0c\u5176\u4e2d\u7684\u9519\u8bef\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u4e0d\u4e00\u81f4\u72b6\u6001\u7684\u98ce\u9669\u4e5f\u4f1a\u66f4\u5c0f\u3002\n\u8fd9\u4e9b\u66f4\u6539\u53ef\u4ee5\u5e76\u4e14\u5c06\u4ee5\u589e\u91cf\u65b9\u5f0f\u8fdb\u884c\uff0c\u4f5c\u4e3a\u7528\u6237\uff0c\u60a8\u5e94\u8be5\u6ce8\u610f\u5230\u9664\u4e86\u6027\u80fd\u548c\u53ef\u9760\u6027\u7684\u63d0\u9ad8\u4ee5\u53ca\u5bf9\u66f4\u597d\u7684API\u7684\u8bbf\u95ee\u4e4b\u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u66f4\u6539\u3002\u6211\u7684\u76ee\u7684\u662f\u53d1\u626c\u7528\u6237\u6570\u636e\uff0c\u7ee7\u7eed\u652f\u6301\u73b0\u6709\u9879\u76ee\uff0c\u4e0d\u4f1a\u9020\u6210\u91cd\u5927\u670d\u52a1\u4e2d\u65ad\u3002\u4eca\u5929\uff0cSourceHut\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\u5df2\u7ecf\u662f\u540c\u7c7b\u4ea7\u54c1\u4e2d\u6700\u597d\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u6211\u4eec\u6ca1\u6709\u7406\u7531\u4e0d\u80fd\u66f4\u8fdb\u4e00\u6b65\u3002\u6211\u4e5f\u8ba4\u4e3a\u4e94\u4e2a\u4e5d\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\u76ee\u6807\u3002\n\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u6709\u4e24\u4e2aGraphQLAPI\u53ef\u4f9b\u60a8\u4f7f\u7528\uff1ameta.sr.ht\u548cgit.sr.ht\u3002\u8fd9\u4e9b\u4ecd\u88ab\u8ba4\u4e3a\u662f\u8bd5\u9a8c\u6027\u7684\uff0c\u4e00\u4e9b\u66f4\u5927\u7684\u95ee\u9898\uff0c\u5982\u5199\u8bbf\u95ee\u548c\u8eab\u4efd\u9a8c\u8bc1\u7684\u6539\u8fdb\uff0c\u4ecd\u6709\u5f85\u5b9e\u65bd\u3002\u8bd5\u4e00\u8bd5\uff0c\u8bf7\u5206\u4eab\u4f60\u7684\u53cd\u9988\uff01", "note_en": "Often I will remind users that SourceHut is an \u201calpha-quality product\u201d, eventhough many people are already using it today and find it well-suited to theirpresent needs. What I mean by this is to remind you that, while many thingsalready work, I am still working on refining the implementation before we committo the design going forward. This foundational work is more important than manyhigh-level features, because it will give us the basis from which the broaderSourceHut platform is built and extended upon well into the future.\n Almost all of SourceHut today is built with Python, Flask, and SQLAlchemy, whichis great for quickly building a working prototype. This has been an effectiveapproach to building a \u201cgood\u201d service and understanding the constraints of theproblem space. However, it\u2019s become clear to me that this approach isn\u2019t goingto cut it in the long term, where the goal is not just \u201cgood\u201d, but \u201cexcellent\u201d.The system would become more stable with the benefit of static typing, and morescalable with a faster and lighter-weight implementation. My work on SourceHuthas, on the whole, really soured my opinion of Python as a serious language forlarge projects.\n One of the core requirements for the alpha to graduate to \u201cbeta\u201d is theimplementation of complete APIs throughout the services, both for users toaccess and for the services to use to communicate with each other. Thelackluster state of these APIs was the main motivator for some of thelarge-scale changes I have planned. Originally I choose to use REST for the API,because REST is boring and well-understood. Boring, well-understood approachesare the bread and butter of SourceHut. However, I have been very unsatisfiedwith the results, and have been unwilling to take this design forward into thebeta. During the alpha is the best time to reconsider this approach and build amore sustainable API design.\n Enter  GraphQL. I have considered GraphQL a few times in the past, butchoose not to research it further for a number of reasons:\n The quality of server implementations has been rather poor on each of myresearch attempts, especially outside of JavaScript implementations.\n The ecosystem is heavily influenced by a web development culture which isflatly rejected by SourceHut\u2019s ethos. This leaks into the documentation andresources available for GraphQL, which makes it more difficult to evaluatethrough the lens of SourceHut\u2019s more conservative values.\n GraphQL does not solve many of the problems I would have hoped it wouldsolve. It does not represent, in my opinion, the ultimate answer to thequestion of how we build a good web API. Therefore, someday there may come abetter technology to supplant it, which makes me hesitate to base a long-termsystem design on it.\n The uptake of GraphQL in the general web ecosystem has been somewhat slow.The value-add is difficult to understand and even more difficult to implementwell, making it difficult for all but senior engineering teams to understand.\n However, with my dissatisfaction with the REST approach reaching its peak in thepast few months, I gave it a more serious and in-depth review. I built aresearch GraphQL API for git.sr.ht, trudging through the docs and specs with theaim of understanding it from the SourceHut perspective and how it could apply toour outlook on software design. I also found (or designed) solutions to some ofthe limitations of GraphQL which make me more confident that we can build afuture-proof solution which is not going to feel outdated or bad when The NextThing comes along. And, importantly, a new server-side implementation called gqlgen has appeared since my last attempt, which, although imperfect,is good enough for me to consider it seriously as the basis for a large system.\n Another (potential) advantage of GraphQL is the ability to compose manydifferent APIs into a single, federated GraphQL schema. If this pans out, itwould be very convenient to access all of the distributed SourceHut services asa single cohesive system, trivially composing each service or subset of servicesas appropriate to the particular SourceHut deployment in question. Another areaof research which may be improved by GraphQL are webhooks: I want to experimentwith registering your webhooks with a GraphQL query, so that the webhook payloadcan contain all of the information you need to process the event without anyadditional API requests.\n In short, I\u2019ve concluded that GraphQL, while imperfect, is a significant advancein the state of the art from REST, and is mature and sophisticated enough to beuseful as the basis of an API and an implementation that I can have long-termconfidence in. This is important to get right, because the distributed design ofSourceHut\u2019s mini-services demands high-quality communication between eachcomponent. I cannot feel comfortable moving forward from the alpha without thisgoal being met, and GraphQL makes me more confident in achieving it well.\n I also mentioned earlier that I am unsatisfied with the Python/Flask/SQLAlchemydesign that underlies most of SourceHut\u2019s implementation. The performancecharacteristics of this design are rather poor, and I have limited options forimprovement. The reliability is also not something I am especially confident in.The GraphQL work was not expected to solve this problem, but it may offer anunexpected solution.\n The GraphQL services are completely standalone, and it is possible to deploythem independently of the web application. With these, you can deploy aSourceHut instance with no frontend at all, using the GraphQL APIs exclusively.Today, the Python backends to the web services communicate directly withPostgreSQL via SQLAlchemy, but it is my intention to build out experimentalreplacement backends which are routed through GraphQL instead. This way, themuch more performant and robust GraphQL backends become the single source oftruth for all information in SourceHut. This could substantially increase myconfidence in the system if it pans out \u2014 the Python footprint wouldbecome much smaller and simpler, and bugs in it would have less risk of creatinginconsistent states in the system.\n These changes can be and will be made incrementally, and as a user, you shouldnotice no changes other than improved performance and reliability, and access tobetter APIs. It is my intention to carry forward user data and continue tosupport existing projects throughout with no significant service disruptions.The performance and reliability of SourceHut today is already best in class, butI see no reason why we can\u2019t push the envelope even further. I also think that five nines is an achievable goal.\n At the time of writing, there are two GraphQL APIs available for you toplay with:  meta.sr.ht and git.sr.ht. These are still considered experimental,and some larger concerns such as write access and improvements to authenticationremain to be implemented. Give it a shot and please share your feedback!", "posttime": "2020-06-11 13:26:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "graphql,sourcehut,influence", "title": "GraphQL\u5c06\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f1a\u5f71\u54cdSourcehut Alpha", "title_en": "How and why GraphQL will influence the Sourcehut alpha", "transed": 1, "url": "https://sourcehut.org/blog/2020-06-10-how-graphql-will-shape-the-alpha/", "via": "", "real_tags": ["graphql", "sourcehut", "influence"]}, {"category": "", "categoryclass": "", "imagename": "4c18c1093d9c75b43796d63691043de0.jpg", "infoid": 1006104, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u83b7\u53d6\u7a81\u53d1\u65b0\u95fb\u8b66\u62a5\u548c\u7279\u522b\u62a5\u9053\u3002\u91cd\u8981\u7684\u65b0\u95fb\u548c\u6545\u4e8b\u4f1a\u5728\u5de5\u4f5c\u65e5\u65e9\u4e0a\u53d1\u5e03\u3002\n\u8ba2\u9605\u3002\n\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5965\u514b\u5170\u3002-\u52a0\u5dde\u516c\u7528\u4e8b\u4e1a\u59d4\u5458\u4f1a(California Public Utilities Commission)\u5468\u4e8c\u6b63\u5f0f\u88c1\u5b9a\uff0c\u6839\u636e\u4e00\u9879\u540d\u4e3aAB5\u7684\u65b0\u9881\u5e03\u7684\u5dde\u6cd5\u5f8b\uff0c\u5b83\u5c06\u6b63\u5f0f\u8003\u8651\u5c06\u8fd9\u4e9b\u516c\u53f8\u7684\u53f8\u673a\u89c6\u4e3a\u5458\u5de5\u3002\u52a0\u5dde\u516c\u7528\u4e8b\u4e1a\u59d4\u5458\u4f1a\u662f\u8d1f\u8d23\u8bb8\u53ef\u548c\u76d1\u7ba1\u5305\u62ec\u4f18\u6b65(Uber)\u548cLyft\u5728\u5185\u7684\u4e00\u4e9b\u8fd0\u8f93\u516c\u53f8\u7684\u5dde\u653f\u5e9c\u673a\u6784\u3002\n\u201c\u65e7\u91d1\u5c71\u7eaa\u4e8b\u62a5\u201d(The San Francisco Chronicle)\u6700\u5148\u62a5\u9053\u4e86\u8fd9\u4e00\u53d1\u73b0\uff0c\u5b83\u662f\u4e00\u4efd\u957f\u8fbe18\u9875\u7684\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u6587\u4ef6\u6db5\u76d6\u4e86\u5373\u5c06\u51fa\u53f0\u7684\u4e00\u7cfb\u5217\u5176\u4ed6\u89c4\u5219\u5236\u5b9a\uff0c\u56e0\u4e3a\u5b83\u4e0e\u8fd9\u4e9b\u7c7b\u578b\u7684\u516c\u53f8\u6709\u5173\uff0c\u8fd9\u4e9b\u516c\u53f8\u5728\u8be5\u5dde\u88ab\u79f0\u4e3a\u201c\u4ea4\u901a\u7f51\u7edc\u516c\u53f8\u201d\uff0c\u6216\u79f0\u8de8\u56fd\u516c\u53f8\u3002\n\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8003\u8651\u5230\u8fd9\u4e9b\u516c\u53f8\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u62b5\u5236\u5bf9\u5458\u5de5\u9aa8\u5e72\u8fdb\u884c\u91cd\u65b0\u5206\u7c7b\uff0c\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u9879\u5c06\u53f8\u673a\u5b9a\u4e49\u4e3a\u5458\u5de5\u7684\u88c1\u51b3\u4f1a\u4ea7\u751f\u4ec0\u4e48\u5b9e\u9645\u5f71\u54cd\u3002\n\u4e0d\u8fc7\uff0c\u52a0\u5dde\u76d1\u7ba1\u673a\u6784\u4e0a\u5468\u4e5f\u6b63\u5f0f\u63d0\u9192\u8fd9\u4e9b\u516c\u53f8\uff0c\u4ed6\u4eec\u5fc5\u987b\u57287\u67081\u65e5\u524d\u4e3a\u5458\u5de5\u63d0\u4f9b\u5de5\u4eba\u8865\u507f\uff0c\u6839\u636e\u5dde\u6cd5\u5f8b\uff0c\u5982\u679c\u4ed6\u4eec\u4e0d\u9075\u5b88\u89c4\u5b9a\uff0c\u53ef\u4ee5\u8003\u8651\u64a4\u9500\u516c\u53f8\u7684\u76f8\u5173\u7ecf\u8425\u6743\u3002\u4e0a\u4e2a\u6708\uff0c\u53f8\u6cd5\u90e8\u957f\u6cfd\u7ef4\u5c14\u00b7\u8d1d\u585e\u62c9(Xavier Becera)\u548c\u6765\u81ea\u65e7\u91d1\u5c71\u3001\u6d1b\u6749\u77f6\u548c\u5723\u5730\u4e9a\u54e5\u7684\u5e02\u68c0\u5bdf\u5b98\u5c31\u8fd9\u4e9b\u516c\u53f8\u6d89\u5acc\u8fdd\u53cdAB5\u63d0\u8d77\u8bc9\u8bbc\u3002\n\u5c06\u5173\u4e8e\u5feb\u901f\u53d8\u5316\u7684\u5a92\u4f53\u548c\u6280\u672f\u4e16\u754c\u7684\u7a81\u53d1\u65b0\u95fb\u548c\u5185\u90e8\u5206\u6790\u76f4\u63a5\u53d1\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\u3002\n\u65e7\u91d1\u5c71\u5e02\u68c0\u5bdf\u5b98\u4e39\u5c3c\u65af\u00b7\u57c3\u96f7\u62c9(Dennis Herrera)\u7684\u53d1\u8a00\u4eba\u6885\u6797\u00b7\u8d1d\u8fbe\u5c14(Meling Bedard)\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\uff1a\u201c\u6211\u4eec\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u575a\u6301\u8ba4\u4e3a\uff0c\u4f18\u6b65\u548cLyft\u5bf9\u53f8\u673a\u8fdb\u884c\u4e86\u9519\u8bef\u7684\u5206\u7c7b\u548c\u5265\u524a\uff0c\u6211\u4eec\u6253\u7b97\u5728\u6cd5\u5ead\u4e0a\u8bc1\u660e\u8fd9\u4e00\u70b9\u3002\u201d\u5979\u8865\u5145\u8bf4\uff1a\u201c\u5c31\u52a0\u5dde\u516c\u7528\u4e8b\u4e1a\u59d4\u5458\u4f1a(California Public Utilities Commission)\u8ba4\u4e3a\u4f18\u6b65(Uber)\u548cLyft\u53f8\u673a\u662f\u5458\u5de5\u7684\u7acb\u573a\u800c\u8a00\uff0c\u4ed6\u4eec\u52a0\u5165\u4e86\u4e00\u957f\u4e32\u653f\u5e9c\u5b9e\u4f53\u548c\u76d1\u7ba1\u673a\u6784\u7684\u884c\u5217\uff0c\u4ed6\u4eec\u4e00\u81f4\u4e14\u6b63\u786e\u5730\u5f97\u51fa\u4e86\u540c\u6837\u7684\u7ed3\u8bba\u3002\u201d\n\u4f18\u6b65\u548cLyft\u6ca1\u6709\u56de\u590d\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u7684\u95ee\u9898\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u5173\u4e8e\u4ed6\u4eec\u662f\u5426\u4f1a\u9075\u5b887\u67081\u65e5\u6700\u540e\u671f\u9650\u7684\u95ee\u9898\uff0c\u800c\u662f\u53d1\u9001\u4e86\u58f0\u660e\u3002\n\u4f18\u6b65\u53d1\u8a00\u4eba\u6234\u7ef4\u65af\u00b7\u6000\u7279(Davis White)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u4f18\u6b65\u5c06\u7ee7\u7eed\u81f4\u529b\u4e8e\u6269\u5927\u5bf9\u53f8\u673a\u7684\u798f\u5229\u548c\u4fdd\u62a4\u3002\u201d\u4ed6\u6307\u7684\u662f\u4f18\u6b65\u901a\u8fc7\u4e00\u9879\u9009\u6c11\u5021\u8bae\u63a8\u7ffbAB5\u7684\u52aa\u529b\uff0c\u8be5\u5021\u8bae\u5c06\u4e8e2020\u5e7411\u6708\u8fdb\u884c\u6295\u7968\u3002\n\u201c\u5982\u679c\u52a0\u5dde\u76d1\u7ba1\u673a\u6784\u8feb\u4f7f\u62fc\u8f66\u516c\u53f8\u6539\u53d8\u4ed6\u4eec\u7684\u5546\u4e1a\u6a21\u5f0f\uff0c\u8fd9\u5c06\u5f71\u54cd\u6211\u4eec\u63d0\u4f9b\u53ef\u9760\u548c\u8d1f\u62c5\u5f97\u8d77\u7684\u670d\u52a1\u7684\u80fd\u529b\uff0c\u540c\u65f6\u5a01\u80c1\u5230\u52a0\u5dde\u4eba\u8d56\u4ee5\u751f\u5b58\u7684\u8fd9\u9879\u57fa\u672c\u5de5\u4f5c\u7684\u51c6\u5165\u3002\u201d\n\u5f53\u88ab\u8981\u6c42\u8be6\u7ec6\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8fd9\u4f1a\u5a01\u80c1\u5c31\u4e1a\u65f6\uff0c\u6000\u7279\u6307\u7740\u4e00\u5bb6\u540d\u4e3a\u4f2f\u514b\u5229\u7814\u7a76\u96c6\u56e2(Berkeley Research Group)\u7684\u516c\u53f8\u57282020\u5e745\u6708\u8fdb\u884c\u7684\u4e00\u4efd\u62a5\u544a\u7684\u6458\u8981\u3002\n\u6458\u8981\u58f0\u79f0\uff0c\u5982\u679c\u4f18\u6b65\u548cLyft\u4e0d\u5f97\u4e0d\u5bf9\u53f8\u673a\u8fdb\u884c\u91cd\u65b0\u5206\u7c7b\uff0c\u5c06\u5bfc\u81f4\u53f8\u673a\u6570\u91cf\u51cf\u5c1180%\u523090%\u3002\u7136\u800c\uff0c\u8fd9\u4efd\u957f\u8fbe\u56db\u9875\u7684\u6458\u8981\u5e76\u6ca1\u6709\u5b8c\u5168\u89e3\u91ca\u5176\u5206\u6790\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u516c\u53f8\u8fd8\u6ca1\u6709\u63d0\u4f9b\u5b8c\u6574\u62a5\u544a\u7684\u526f\u672c\u3002\n\u540c\u6837\uff0cLyft\u53d1\u8a00\u4ebaCJ Macklin\u53d1\u5e03\u4e86\u4e00\u4efd\u7b80\u77ed\u7684\u58f0\u660e\uff0c\u79f0\u201cCPUC\u7684\u63a8\u5b9a\u662f\u6709\u7f3a\u9677\u7684\u201d\uff0c\u5e76\u62d2\u7edd\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002\n\u6839\u636eLyft\u548cUber\u5206\u522b\u4e8e2020\u5e742\u6708\u548c3\u6708\u63d0\u4ea4\u7ed9\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(Securities And Exchange Commission)\u7684\u6700\u65b0\u5e74\u5ea6\u62a5\u544a\uff0c\u591a\u5e74\u6765\uff0cLyft\u548cUber\u90fd\u8868\u793a\uff0c\u5982\u679c\u5b83\u4eec\u88ab\u8feb\u5c06\u96f6\u5de5\u91cd\u65b0\u5206\u7c7b\u4e3a\u5458\u5de5\uff0c\u8fd9\u6837\u7684\u53d8\u5316\u5c06\u5bf9\u5b83\u4eec\u7684\u76c8\u5229\u80fd\u529b\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\n\u591a\u5e74\u6765\uff0c\u7ade\u4e89\u5bf9\u624b\u7684\u516c\u53f8\u4e00\u76f4\u5c06\u4e34\u65f6\u5de5\u4f5c\u65f6\u95f4\u8868\u5439\u6367\u4e3a\u53f8\u673a\u63d0\u4f9b\u7684\u4e00\u9879\u6709\u5438\u5f15\u529b\u7684\u798f\u5229\u3002\u7136\u800c\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e3b\u8981\u7684\u7f3a\u70b9\u662f\uff0c\u53f8\u673a\u8981\u627f\u62c5\u5927\u91cf\u7684\u5de5\u4f5c\u8d39\u7528\uff0c\u5305\u62ec\u6c7d\u6cb9\u3001\u6c7d\u8f66\u7ef4\u4fee\u3001\u4fdd\u9669\u7b49\u3002\n\u6ce2\u58eb\u987f\u7684\u52b3\u5de5\u5f8b\u5e08\u9999\u519c\u00b7\u91cc\u65af-\u91cc\u5c14\u4e39(Shannon Liss-Riordan)\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u591a\u6b21\u8d77\u8bc9\u8fd9\u4e24\u5bb6\u516c\u53f8\uff0c\u79f0\u8fd9\u4e00\u4e3e\u52a8\u662f\u201c\u4f18\u6b65\u548cLyft\u7684\u5de8\u5927\u5931\u8d25\u201d\u3002\u8fc7\u53bb\u51e0\u5e74\uff0c\u4ed6\u66fe\u591a\u6b21\u8d77\u8bc9\u8fd9\u4e24\u5bb6\u516c\u53f8\uff0c\u79f0\u5176\u4e3a\u201c\u4f18\u6b65\u548cLyft\u7684\u5de8\u5927\u5931\u8d25\u201d\u3002\n\u5979\u8bf4\uff1a\u201c\u4f18\u6b65\u548cLyft\u4ee5\u53ca\u5176\u4ed6\u5bf9\u6cd5\u5f8b\u4e0d\u5c51\u4e00\u987e\u7684\u516c\u53f8\u9762\u4e34\u7684\u538b\u529b\u6b63\u5728\u4e0d\u65ad\u5347\u7ea7\u3002\u201d\u201c\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u8fd9\u573a\u5927\u6d41\u884c\u5371\u673a\u8fdb\u4e00\u6b65\u7a81\u663e\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u63d0\u9ad8\u4e86\u516c\u4f17\u7684\u610f\u8bc6\uff0c\u5373\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4e3a\u5de5\u4eba\u63d0\u4f9b\u57fa\u672c\u4fdd\u62a4\uff0c\u96c7\u4f63\u8fd9\u4e9b\u5de5\u4eba\u7684\u516c\u53f8\u9700\u8981\u53d7\u5230\u8c34\u8d23\u3002\u201d\n\u585e\u52d2\u65af\u00b7\u6cd5\u91cc\u74e6(Cyrus Farivar)\u662f\u65e7\u91d1\u5c71NBC\u65b0\u95fb\u79d1\u6280\u8c03\u67e5\u90e8\u95e8\u7684\u8bb0\u8005\u3002", "note_en": "Get breaking news alerts and special reports. The news and stories that matter, delivered weekday mornings.\n SUBSCRIBE\n  OAKLAND, Calif. \u2014The California Public Utilities Commission, the state government body responsible for licensing and regulating some transportation companies including Uber and Lyft, officially  ruled Tuesday that it would formally consider drivers of those companies to be employees, in line with a  newly-enacted state law known as AB5.\n The finding, first reported by  The San Francisco Chronicle, came as part of an  18-page document that covers a host of other upcoming rulemaking as it pertains to these types of companies, which are known in the state as \u201ctransportation networking companies,\u201d or TNCs.\n   For now, it is not clear what practical difference this ruling defining drivers as employees makes, given the companies\u2019 longstanding resistance to re-classifying the backbone of their workforce.\n However, last week, the California regulator also  issued a formal reminder to the companies that they had to provide workers\u2019 compensation for their employees by July 1, and under state law could consider revoking the companies\u2019 relevant operating authority if they did not comply. Last month, Attorney General Xavier Becerra and the city attorneys from San Francisco, Los Angeles and San Diego  sued over the companies\u2019 alleged non-compliance with AB5.\n  Get breaking news and insider analysis on the rapidly changing world of media and technology right to your inbox.\n \u201cWe have long maintained that Uber and Lyft are misclassifying and exploiting their drivers, and we intend to prove that in court,\u201d Meiling Bedard, a spokesman for San Francisco City Attorney Dennis Herrera, said in an email. \u201cTo the extent that the California Public Utilities Commission takes the position that Uber and Lyft drivers are employees, they join a long list of government entities and regulators that have consistently and correctly reached that same conclusion,&#34; she added.\n Uber and Lyft did not respond to emailed questions, including one about whether they would abide by the July 1 deadline, and sent statements instead.\n  \u201cUber remains committed to expanded benefits and protections to drivers,\u201d the company said in a statement sent by spokesman Davis White, referring to its  efforts to overturn AB5 with a voter initiative that will be on the ballot in November 2020.\n \u201cIf California regulators force rideshare companies to change their business model it would affect our ability to provide reliable and affordable services, along with threatening access to this essential work Californians depend on.\u201d\n  When asked to elaborate as to why it would threaten jobs, White pointed to a  summary of a May 2020 report conducted by a company called the Berkeley Research Group.\n The summary claims that if Uber and Lyft had to re-classify drivers, it will result in an 80 to 90 percent reduction in the number of drivers. However, this four-page summary does not fully explain its analysis, and to date, the company has not provided a copy of the full report.\n  Similarly, Lyft spokesman CJ Macklin sent a brief statement saying that the \u201cCPUC\u2019s presumption is flawed,\u201d and declined to explain further.\n For years, both Lyft and Uber have said that if they are forced to reclassify gig workers as employees that such a change would have an adverse effect on their profitability, according to their latest annual reports submitted to the Securities and Exchange Commission in  February and  March 2020, respectively.\n  For years, the rival companies have touted the ad-hoc work schedule as an attractive perk for drivers. However, one of the major downsides has been that drivers are on the hook for incurring numerous work expenses, including gas, car maintenance, insurance and more.\n Shannon Liss-Riordan, a Boston-based labor lawyer who has sued both companies multiple times for alleged labor misclassification over the course of the past several years, called the move a \u201chuge defeat for Uber and Lyft.\u201d\n  \u201cThe pressure is escalating on Uber and Lyft and other companies that are thumbing their nose at the law,\u201d she said. \u201cIf anything, this pandemic crisis is highlighting even more and raising public awareness about why we need basic protections for workers, and that companies that employ those workers need to be called to task.\u201d\n Cyrus Farivar is a reporter on the tech investigations unit of NBC News in San Francisco.", "posttime": "2020-06-11 13:26:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lyft", "title": "\u52a0\u5dde\u76d1\u7ba1\u673a\u6784\u53d1\u73b0\uff0c\u4f18\u6b65\u548cLyft\u53f8\u673a\u90fd\u662f\u5458\u5de5", "title_en": "Uber and Lyft drivers are employees, California regulatory agency finds", "transed": 1, "url": "https://www.nbcnews.com/tech/tech-news/uber-lyft-drivers-are-employees-california-regulatory-agency-finds-n1229616", "via": "", "real_tags": ["lyft"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006103, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5404\u4f4d\u7f51\u53cb\uff0c\u5927\u5bb6\u597d\uff01\u4f60\u662f\u5426\u66fe\u7ecf\u6fc0\u6012\u8fc7\u4e00\u4e2a\u5ba2\u6237\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u8d2d\u4e70\u4e86\u4e00\u4e2a\u57df\u540d\uff0c\u5e76\u5efa\u7acb\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5bf9\u4f60\u611a\u8822\u800c\u611a\u8822\u7684\u5546\u4e1a\u884c\u4e3a\u62c9\u5c4e\uff1f\u901a\u7528\u7535\u6c14\u521a\u521a\u5c31\u8fd9\u4e48\u505a\u4e86\u3002\n\u6211\u53ea\u60f3\u5728\u51cc\u66683\u70b9\u559d\u4e00\u676f\u9ad8\u5927\u7684\u51b0\u9547\u6e05\u51c9\u7684\u6c34\uff0c\u7ed3\u679c\u5374\u88ab\u6211\u90a3\u503c\u5f97\u4fe1\u8d56\u7684\u51b7\u6c34\u52a0\u51b0\u914d\u6599\u4f19\u4f34\u4ed6\u5988\u7684\u539f\u5b50\u5012\u8ba1\u65f6\u6253\u62db\u547c\u3002\n\u4e03\u5929\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6211\u4ee5\u524d\u89c1\u8fc7\u8fc7\u6ee4\u5668\u62a5\u8b66\u5668--\u8fd9\u662f\u65b0\u7684\u3002\u6211\u7684\u51b0\u7bb1\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u5012\u8ba1\u65f6\u8fc7\u3002\u5728\u6545\u4e8b\u7684\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u60f3\u8fd9\u662f\u4e00\u4e2a\u95f9\u949f\uff0c\u8bf7\u5c3d\u5feb\u91cd\u65b0\u8ba2\u8d2d\u3002\u7136\u540e\u6211\u72af\u4e86\u4e00\u4e2a\u9519\u8bef--\u6211\u5728\u5e8a\u4e0a\u7528\u8c37\u6b4c\u641c\u7d22\u4e86\u4e00\u4e0b\u3002\u5982\u679c\u6211\u4e0d\u5c48\u670d\u4e8e\u5b83\u7684\u5f3a\u529b\u7535\u5668\u6572\u8bc8\u52d2\u7d22\u7b56\u7565\uff0c\u6211\u7684\u51b0\u7bb1\u5c31\u4f1a\u505c\u7528\u5b83\u81ea\u5df1\u7684\u51b0\u6c34\u7cfb\u7edf\u3002\n\u6211\u77e5\u9053\u6211\u5fc5\u987b\u6316\u6398\uff0c\u6211\u613f\u610f\u6253\u8d4c\u53ea\u6709\u4e00\u4e9b\u6a21\u62df\u4f7f\u80fd\u4fe1\u53f7\u6211\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e2a\u611a\u8822\u7684\u4e1c\u897f\u3002\u6211\u7ffb\u904d\u4e86\u7535\u8def\u56fe..\u3002\u4e0d\uff0c\u6574\u4e2a\u5bb6\u7535\u90fd\u6709\u81ea\u5df1\u7684\u901a\u4fe1\u603b\u7ebf\u3002\u5206\u914d\u677f/\u4e3b\u677f\u8be2\u95eeDRM/RFID\u677f\uff0c\u8be2\u95ee\u6709\u5173\u8fc7\u6ee4\u5668\u72b6\u6001\u7684\u95ee\u9898\uff0c\u7136\u540e\u624d\u4f1a\u547d\u4ee4\u90e8\u4ef6\u4ed6\u5988\u7684\u5de5\u4f5c\uff0c\u5e76\u5c06\u4fe1\u53f7\u53d1\u9001\u5230\u8fd0\u884c\u6c34/\u5236\u51b0\u673a\u7ee7\u7535\u5668\u7684\u7ee7\u7535\u5668\u3002\n\u6240\u4ee5\u6211\u7684\u51b0\u7bb1\u91cc\u6709\u4e00\u4e2a\u6c34\u7eb3\u7cb9\u8ff7\u4f60\u5e0c\u7279\u52d2\u7535\u8def\u677f\uff0c\u6211\u53ea\u662f\u60f3\u770b\u770b\u3002\n\u8fc7\u6ee4\u5668\u9694\u95f4\uff1a\u7f9e\u803b\u7684RFID\u7535\u8def\u6d3b\u677f\uff1a\u901a\u7528\u7535\u6c14\u7684\u96c6\u6210\u5bcc\u52d2\u7535\u8def\u677f(IFB)\uff1a\u7ed9\u4e86\u4ec0\u4e48\uff1f\u901a\u7528\u7535\u6c14\u7684\u4e00\u4e9b\u6df7\u86cb\u8ba4\u4e3a\uff0c\u5728\u7cbe\u9009\u7684\u51b0\u7bb1\u4e2d\u5b89\u88c5\u4ed6\u5988\u7684RFID DRM\u6a21\u5757\u662f\u4e2a\u597d\u4e3b\u610f\u3002\n\u4ece\u8fd9\u4e9b\u4e13\u5229\u6765\u770b\uff0c\u6211\u4f3c\u4e4e\u53ef\u4ee5\u611f\u8c22\u53d1\u660e\u5bb6\u514b\u52b3\u65af\u5148\u751f\u548c\u5207\u5c14\u8bfa\u592b\u5148\u751f\uff0c\u611f\u8c22\u4ed6\u4eec\u7684\u81ea\u7531\u5438\u542e\uff0c\u4e3b\u8981\u5bb6\u7535\u5931\u6548\uff0c\u5171\u4ea7\u4e3b\u4e49\uff0c1984\u5e74\u5f0f\u7684\u60f3\u6cd5\u3002\u4ece\u6211\u8bfb\u5230\u7684--\u6bcf\u6b21\u6309\u4e0b\u5206\u914d\u5f00\u5173\uff0c\u63a7\u5236\u59d4\u5458\u4f1a\u90fd\u4f1a\u95eeDRM\u59d4\u5458\u4f1a\uff0c\u8bf7\u5148\u751f\uff0c\u6211\u53ef\u4ee5\u4e3a\u6211\u4eb2\u7231\u7684\u4e3b\u4eba\u5206\u914d\u4e00\u4e9b\u6c34\u5417\uff1f\u8bf7\u770b\u4e0b\u9762\u7684\u9ad8\u7ea7\u620f\u5267\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u9605\u8bfb\u672c\u6587\u7684\u4eba\u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u77e5\u9053DRM\u662f\u6570\u5b57\u7248\u6743\u7ba1\u7406(Digital Rights Management)\u7684\u7f29\u5199\uff0c\u8fd9\u662f\u4e00\u79cd\u5077\u5077\u6478\u6478\u7684\u65b9\u5f0f\uff0c\u5373\u4f60\u7684\u5496\u5561\u673a\u5728\u6ca1\u6709\u201c\u6279\u51c6\u201d\u5496\u5561\u7684\u60c5\u51b5\u4e0b\u62d2\u7edd\u716e\u5496\u5561\uff0c\u6216\u8005\u4f9b\u5e94\u5546\u7684\u97f3\u4e50\u53ea\u4f1a\u5728\u4ed6\u4eec\u7684\u5a92\u4f53\u64ad\u653e\u5668\u4e0a\u64ad\u653e\u3002\u5728\u62cd\u6444\u4e2d\uff0c\u8fd9\u662f\u4e00\u79cd\u5feb\u901f\u7684\u65b9\u5f0f\u6765\u6fc0\u6012\u987e\u5ba2\uff0c\u5e76\u53d6\u6d88\u9009\u62e9\uff01\u603b\u662f\u5e26\u7740\u4e00\u4e9b\u7ad9\u4e0d\u4f4f\u811a\u7684\u501f\u53e3\uff0c\u6bd4\u5982\u201c\u54e6\uff0c\u5982\u679c\u4f60\u7684\u6253\u5370\u673a\u4e0d\u7528\u6211\u4eec\u7684\u58a8\u6c34\uff0c\u5b83\u4f1a\u7740\u706b\u7684-\u7206\u70b8-\u7206\u70b8-\u7830\u3002\u201d\u6216\u8005\u201c\u53ea\u6709\u6211\u4eec\u7684\u6ee4\u6c34\u5668\u662f\u7528\u7eaf\u51c0\u7684\u72ec\u89d2\u517d\u5c3f\u6db2\u548c\u5f69\u8679\u6309\u7167XYZ\u9b54\u6cd5\u6807\u51c6\u5236\u9020\u7684\u3002\u201d\n\u4ece\u6765\u6ca1\u6709\u4eba\u544a\u8bc9\u6211\u8fc7\u6ee4\u5668\u9020\u5047\u96c6\u56e2\u7684\u4e8b\uff0c\u6211\u771f\u7684\u6000\u7591\u771f\u7684\u8fc7\u6ee4\u5668\u662f\u4e00\u4e2a\u5927\u95ee\u9898\uff0c\u53cd\u6b63\u6211\u4ece\u6765\u6ca1\u6709\u3002\u7136\u800c\uff0c\u6211\u786e\u5b9e\u5bf9\u6c7d\u8f66\u95ee\u4e16\u4ee5\u6765\u516c\u53f8\u662f\u5982\u4f55\u8bd5\u56fe\u505a\u8fd9\u79cd\u72d7\u5c4e\u7684\u4e8b\u60c5\u7565\u77e5\u4e00\u4e8c\u3002\u6211\u76f8\u4fe1\u7231\u8fea\u751f\u5148\u751f\u4e00\u5b9a\u4f1a\u559c\u6b22\u9664\u4e86\u4ed6\u4ee5\u5916\u6ca1\u4eba\u80fd\u5356\u96f6\u4ef6\u7684\u60f3\u6cd5\uff01\u56e0\u4e3a\u4ed6\u57fa\u672c\u4e0a\u5784\u65ad\u4e86\u6574\u4e2a\u7535\u5f71\u4e1a\u3002\n\u4ece\u7ef4\u57fa\u767e\u79d1\u770b\u4e00\u4e0bMagnuson Moss\uff1b\u4fdd\u4fee\u4e66\u4e0d\u80fd\u8981\u6c42\u4ea7\u54c1\u53ea\u4f7f\u7528\u54c1\u724c\u90e8\u4ef6\u624d\u80fd\u4fdd\u7559\u4fdd\u4fee\u3002[7]\u8fd9\u901a\u5e38\u88ab\u79f0\u4e3a\u642d\u552e\u9500\u552e\u6761\u6b3e[8]\uff0c\u7ecf\u5e38\u5728\u7b2c\u4e09\u65b9\u8ba1\u7b97\u673a\u90e8\u4ef6(\u5982\u5185\u5b58\u548c\u786c\u76d8)\u7684\u4e0a\u4e0b\u6587\u4e2d\u88ab\u63d0\u53ca\u3002(\u6ce8\uff1a\u9a6c\u683c\u52aa\u68ee\u00b7\u83ab\u65af\u662f\u9a6c\u683c\u52aa\u68ee\u00b7\u83ab\u65af\u7684\u4ee3\u8a00\u4eba)\u4fdd\u4fee\u4e66\u4e0d\u80fd\u8981\u6c42\u4ea7\u54c1\u53ea\u4f7f\u7528\u54c1\u724c\u90e8\u4ef6\u624d\u80fd\u4fdd\u7559\u4fdd\u4fee\u3002[7]\u8fd9\u901a\u5e38\u6307\u7684\u662f\u642d\u552e\u9500\u552e\u6761\u6b3e[8]\uff0c\u7ecf\u5e38\u5728\u7b2c\u4e09\u65b9\u8ba1\u7b97\u673a\u90e8\u4ef6(\u5982\u5185\u5b58\u548c\u786c\u76d8\u9a71\u52a8\u5668)\u7684\u4e0a\u4e0b\u6587\u4e2d\u63d0\u53ca\u3002\n\u65b9\u6cd5\uff1aBypass\uff0cBypass\u65b9\u6cd5\uff1a\u8fd9\u91cc\u9996\u5148\u63cf\u8ff0\u7684\u662f\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u4ece\u65c1\u8def\u58a8\u76d2\u4e2d\u53d6\u51faRFID\u5370\u7ae0\uff0c\u7136\u540e\u7b80\u5355\u5730\u5c06\u5176\u8d34\u5728\u60a8\u4ed6\u5988\u7684\u559c\u6b22\u7684\u4efb\u4f55\u8fc7\u6ee4\u5668\u4e0a\u3002\u7136\u800c\uff0c\u5f53\u6211\u5c1d\u8bd5\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u90aa\u6076\u7684\u5e1d\u56fdGE\u4f3c\u4e4e\u5df2\u7ecf\u4fee\u6539\u4e86\u4ed6\u4eec\u7684\u5236\u9020\u6280\u672f\uff0c\u6240\u4ee5\u73b0\u5728\u6807\u7b7e\u63d0\u53d6\u4f1a\u66f4\u6709\u8da3\u4e00\u4e9b\u3002\u7b2c\u4e00\u6b21\u63d0\u53d6\u5c1d\u8bd5(\u5931\u8d25)a)\u5982\u4e92\u8054\u7f51\u4e0a\u5176\u4ed6\u5730\u65b9\u6240\u6307\u51fa\u7684\uff0c\u6807\u7b7e\u4f4d\u4e8e\u80cc\u90e8&#34\uff1b\u6807\u7b7e\uff1ab)\u6807\u7b7e\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u5200\u63d0\u8d77\u3002c)\u53ef\u60b2\u7684\u662f\uff0c\u5b9e\u9645\u7684RFID\u82af\u7247\u88ab\u80f6\u6c34\u5305\u88f9\u7740\uff0c\u6211\u521a\u521a\u6495\u4e0b\u7684\u662f\u5929\u7ebf\uff1a\u7b2c\u4e8c\u6b21\u62bd\u51fa\u5c1d\u8bd5(\u6210\u529f)a)\u8fd9\u4e00\u6b21\u6211\u5e26\u4e86\u4e00\u4e2a\u6316\u6ce5\u673a\u5230\u65c1\u8def\u58a8\u76d2b)\u7136\u540e\u6211\u62ff\u4e86\u8fd9\u9879\u5de5\u4f5c\u6240\u9700\u7684\u552f\u4e00\u5de5\u5177c)\u73b0\u5728\u53ea\u9700\u79fb\u9664\u8986\u76d6\u6beb\u65e0\u610f\u4e49\u7684DRM\u677f\u76d6\u7684\u4e00\u4e2a\u5341\u5b57\u87ba\u4e1dd)\u73b0\u5728\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u5c0fRFID\u65c1\u8def\u6807\u7b7e\u8d34\u5230\u677f\u7684\u80cc\u9762\u3002\u5f88\u9177\u7684\u662f\uff0cRFID\u677f\u7684\u9694\u95f4\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u7a7a\u9699\uff0c\u6b63\u597d\u9002\u5408\u6211\u4eec\u526a\u4e0b\u7684\u6807\u7b7e\u3002e)\u73b0\u5728\u6211\u4eec\u53ea\u9700\u91cd\u65b0\u63d2\u5165\u7535\u8def\u677ff)\u5bf9\u4e8e\u6700\u540e\u4e00\u6b65\uff0c\u5982\u679c\u60a8\u6253\u7b97\u7ee7\u7eed\u4f7f\u7528\u65e7\u8fc7\u6ee4\u5668\uff0c\u5219\u9700\u8981\u5c06RFID\u6807\u7b7e\u4ece\u65e7\u8fc7\u6ee4\u5668\u4e2d\u53d6\u51fa\u3002g)\u4eab\u53d7\u60a8\u7684\u8fc7\u6ee4\u81ea\u7531\u3002\n\u4ea4\u6362-a-roo\u65b9\u6cd5\uff1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u60a8\u53ea\u9700\u4fdd\u7559\u4e00\u4e2a\u65e7\u8fc7\u6ee4\u5668-\u6709\u4eba\u544a\u8bc9\u6211\uff0c\u6709\u4e9b\u4eba\u53ea\u662f\u62ff\u4e00\u4e2a\u65e7\u8fc7\u6ee4\u5668\u4e0e\u4ed6\u4eec\u7684\u65b0\u8fc7\u6ee4\u5668\u4ea4\u6362\u3002\u6807\u7b7e\u5b58\u50a8\u5668\u5c06\u663e\u5f97\u6781\u5176\u6709\u9650\u3002\n\u672c\u7f51\u7ad9\u6700\u597d\u4f7f\u7528Lynx\u6216Elink\u7b49\u5408\u9002\u7684Web\u6d4f\u89c8\u5668\u67e5\u770b\u3002\u672c\u7f51\u7ad9\u6240\u6709\u5185\u5bb9\u5747\u4e3a\u4f5c\u8005\u89c2\u70b9\u3002\u8fd9\u91cc\u63d0\u51fa\u7684\u4e00\u5207\u90fd\u4e0d\u662f\u4e8b\u5b9e\u3002\u8fd9\u91cc\u7684\u4e00\u5207\u90fd\u662f\u89c2\u70b9\u3002\u672c\u7f51\u7ad9\u7684\u4f5c\u8005\u4e0d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5bf9\u60a8\u4f7f\u7528\u8fd9\u4e9b\u7f51\u9875\u4e2d\u5305\u542b\u6216\u94fe\u63a5\u7684\u4fe1\u606f\u8d1f\u8d23\u3002\u672a\u7ecf\u6388\u6743\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u635f\u574f\u7535\u5668\uff0c\u5c16\u9510\u7684\u4e1c\u897f\u4e5f\u4f1a\u6233\u5230\u60a8\u3002\u60a8\u5e94\u5bf9\u6839\u636e\u672c\u7f51\u7ad9\u63d0\u4f9b\u7684\u4fe1\u606f\u91c7\u53d6\u7684\u4efb\u4f55\u884c\u52a8\u8d1f\u8d23\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u6253\u7834\u4e86\u4ec0\u4e48\u4e1c\u897f\uff0c\u4e0d\u8981\u6765\u627e\u6211\u54ed\u8bc9\uff0c\u56e0\u4e3a\u4f60\u9075\u5faa\u4e86\u4e92\u8054\u7f51\u4e0a\u7684\u968f\u673a\u4fe1\u606f\u548c\u89c2\u70b9\u3002", "note_en": "Greetings and salutations internet person! Have you ever pissed off a customer so much they bought a domain and stood up a website to shit on your asinine and boneheaded business practices? GE just did.\n  I just wanted a tall, cold, refreshing glass of water at 3am only to be greeted by a fucking atomic countdown on my trusty cold water and ice dispensing pal.\n    What happens in seven days? I have seen filter alarms before- this was new. I have never had a count down on my fridge before. At this point in the story I figure this is a &#34;Please Reorder Soon&#34; alarm. Then I made a mistake- I googled this when I was in bed.  My fridge was going to disable its own ice and water system if I did not succumb to its strong-arm appliance extortion tactics.\n  I knew that I had to dig, I was willing to bet that there was just some analog enable signal I could trip to bypass this stupid thing. I dug through the schematics... Nope the entire appliance has its own communications bus. The dispense board/main board interrogates the drm/rfid board and asks questions about filter status before it will command parts to do their fucking job and send signals to the relays that run the water/ice maker relays.\n  So my fridge has a water-nazi-mini-hitler circuit board in it, I just had to see it.\n\r The Filter Compartment:     The RFID Circuit Trapdoor of Shame:     General Electric&#39;s Integrated F\u00fchrer Board(IFB):       What gives? Well some asshole at GE thought it would be a good idea to include a fucking RFID DRM module in select refrigerators.\n    From the patents it looks like I can thank inventors Mr. Krause and Mr. Chernov for their freedom sucking, major appliance disabling, communist, 1984-esque idea. From what I am reading- with every press of the dispense switch the control board asks the drm board &#34;Please sir, may I dispense some water for my loving owners.&#34; See the advanced dramatization below.\n    For anyone reading this who is unaware DRM is short for digital rights management it\u2019s the sneaky way that your  coffee machine refuses to make coffee without \u201capproved\u201d coffee or  music from a vendor will only play back in their media player. In shot, it\u2019s a quick way  to  piss  customers  off and remove choice! Always with some lame ass excuse like  \u201cOh if you don\u2019t use our ink in your printer it will catch-fire-explode-boom-poof.\u201d Or \u201cOnly our water filters are made to xyz magical standards with pure unicorn piss and rainbows.\u201d\n  No one ever told me about the filter counterfeiting consortium, I really doubt authentic filters are a huge problem, never have been for me anyway. However, I do know a thing or two about how companies have been trying to do shit like this since the dawn of the automobile. I am sure Mr. Edisons&#39; GE would have loved the idea that no one could sell parts but him!  Since he basically monopolized the entire motion picture industry.\n  Take a peek at  Magnuson Moss; From the wiki &#34;Warrantors cannot require that only branded parts be used with the product in order to retain the warranty.[7] This is commonly referred to as the &#34;tie-in sales&#34; provisions[8] and is frequently mentioned in the context of third-party computer parts, such as memory and hard drives.&#34;\n  \r Methods:\r  The Bypass, Bypass method:  first described here With this method you take the rfid stamp from a &#34;bypass&#34; cartridge and simply slap it on whatever filter you damn well please. However when I attempted this it would seem that the evil empire GE has modified their manufacturing technique so tag extraction will be a little more fun now.\r  First Extraction Attempt (Failure) \r a) As noted elsewhere on the internet the tag is located under the &#34;Back&#34; Label:\r   \r b) The tag was able to be lifted easily with a knife.\r   \r c) Sadly the actual rfid chip is encased in glue and what I just ripped out was the antenna:\r     Second Extraction Attempt (Success) \r a) This time I took a dremel to the bypass cartridge\r   \r b) Then I took the only tools you will need for this job    \r c) Now to simply remove the one phillips screw covering the pointless DRM board cover      \r d) Now we will tape our little RFID bypass tag to the back of the board. Cool thing is that the compartment for the RFID board has a huge void that perfectly fits the tag we cut out.\r     \r e) Now we just reinsert the board    \r f) For the last step you need to remove the RFID tag from the old filter if you intend to continue to use it.      \r g) Enjoy your filter freedom.\n  The Swap-a-roo method: With this method you simply keep one old filter- I have been told that some folks just take an old filter and swap it with their new one. The tag memory would appear to be extremely limited.\n      This website is best viewed with proper web browsers such as  Lynx or  Elinks. All content on this website is opinion of the author. Nothing presented here is fact. Everything here is opinion. The author of this website cannot, in any way whatsoever, be responsible for your use of the information contained in or linked from these web pages. You can damage appliances by making un-authorized changes and sharp things can also poke you. YOU ARE RESPONSIBLE for any actions you take based on information presented on this site. So, don\u2019t come crying to me if you break something because you followed random information and opinion from the internet.", "posttime": "2020-06-11 13:09:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51b0\u7bb1,fridge,rfid", "title": "GE\u51b0\u7bb1DRM\u89e3\u51b3\u65b9\u6cd5", "title_en": "GE Fridge DRM Workaround", "transed": 1, "url": "https://gefiltergate.com/", "via": "", "real_tags": ["\u51b0\u7bb1", "fridge", "rfid"]}]