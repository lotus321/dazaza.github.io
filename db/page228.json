[{"category": "", "categoryclass": "", "imagename": "e10567d16a490509dfec22401ca7f0f0.jpg", "infoid": 1004028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u573a\u761f\u75ab\u4e2d\uff0c\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u65e2\u5177\u6709\u5168\u7403\u6027\u53c8\u6781\u5177\u5730\u65b9\u6027\u7684\u6545\u4e8b\u4e2d\u3002\u867d\u7136\u6211\u4eec\u6240\u6709\u4eba\u90fd\u6536\u5230\u4e86\u5927\u91cf\u5173\u4e8e\u56fd\u5185\u548c\u56fd\u9645\u65b0\u51a0\u80ba\u708e\u8d8b\u52bf\u7684\u62a5\u9053\uff0c\u4f46\u6211\u4eec\u5927\u591a\u6570\u4eba\u5f88\u5c11\u6216\u6839\u672c\u6ca1\u6709\u5173\u4e8e\u6211\u4eec\u5b9e\u9645\u751f\u6d3b\u7684\u793e\u533a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u62a5\u9053\u3002\n\u5f53\u5730\u65b0\u95fb\u57fa\u672c\u4e0a\u5df2\u7ecf\u6d88\u5931\u4e86--\u65b0\u95fb\u6c99\u6f20\u7684\u73b0\u8c61\u73b0\u5728\u5df2\u7ecf\u5e7f\u4e3a\u4eba\u77e5\u3002\u7136\u800c\uff0c\u5bf9\u5f53\u5730\u4fe1\u606f\u7684\u9700\u6c42\u4ece\u672a\u50cf\u73b0\u5728\u8fd9\u6837\u5f3a\u70c8\u3002\u5927\u65b0\u95fb\u53ef\u80fd\u4e0e\u5c0f\u65b0\u95fb\u5b8c\u5168\u4e0d\u540c--\u5bf9\u4e2a\u4eba\u6765\u8bf4\uff0c\u5c0f\u65b0\u95fb\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\u5173\u952e\u7684\u75c5\u6bd2\u6570\u636e\u662f\u8d85\u672c\u5730\u5316\u7684\u3002\u5728\u6211\u6240\u5728\u7684\u793e\u533a\uff0c\u9690\u85cf\u5728\u4e00\u5e45\u66f4\u5927\u7684\u5730\u7406\u56fe\u666f\u4e2d\uff0c\u5176\u8d8b\u52bf\u7ed9\u4eba\u4ee5\u5e0c\u671b\uff0c\u8fd9\u79cd\u75be\u75c5\u6b63\u5728\u620f\u5267\u6027\u5730\u6fc0\u589e\uff0c\u751a\u81f3\u4ee4\u4eba\u6050\u60e7\u3002\u51e0\u4e4e\u6ca1\u4eba\u77e5\u9053\u3002\n\u6211\u4f4f\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u7684\u80af\u5185\u7279\u5e7f\u573a\uff0c\u8fd9\u662f\u8d39\u57ce\u897f\u5357\u90e8\u7684\u4e00\u4e2a\u62e5\u6709\u7ea66000\u4eba\u7684\u884c\u653f\u533a\u3002\u5b83\u662f\u5207\u65af\u7279\u53bf\u7684\u4e00\u90e8\u5206\uff0c\u5207\u65af\u7279\u53bf\u662f\u4e00\u4e2a\u5916\u73af\u90ca\u533a\u3002\u9664\u4e86\u5c11\u6570\u4f8b\u5916\uff0c\u8be5\u53bf\u7684\u7279\u70b9\u662f\u8fde\u7ef5\u8d77\u4f0f\u7684\u9752\u5c71\u3001\u7267\u573a\u548c\u519c\u573a-\u4e3b\u8981\u662f\u9a6c\u573a\u3002\u8fd9\u4e2a\u53bf\u56e0\u5b89\u5fb7\u9c81\u00b7\u60e0\u65af\u7684\u753b\u4f5c\u800c\u51fa\u540d\u3002\u5b83\u5927\u591a\u662f\u767d\u8272\u7684\uff0c\u76f8\u5bf9\u5bcc\u88d5\u3002\n\u80af\u5185\u7279\u5e7f\u573a\u884c\u653f\u533a\u662f\u53cd\u5e38\u7684\u3002\u5b83\u5305\u62ec\u4e00\u4e2a\u4eba\u53e3\u7a20\u5bc6\u7684\u5730\u533a\uff0c\u9762\u79ef\u7565\u9ad8\u4e8e1\u5e73\u65b9\u82f1\u91cc\u3002\u5927\u7ea6\u4e00\u534a\u7684\u5c45\u6c11\u662f\u62c9\u4e01\u88d4\uff0c\u5176\u4e2d\u8bb8\u591a\u662f\u4ece\u58a8\u897f\u54e5\u548c\u5371\u5730\u9a6c\u62c9\u79fb\u6c11\u5230\u8fd9\u91cc\u7684\u5bb6\u5ead\uff0c\u4ed6\u4eec\u5728\u8be5\u53bf\u84ec\u52c3\u53d1\u5c55\u7684\u8611\u83c7\u4ea7\u4e1a\u5de5\u4f5c\uff0c\u7f8e\u56fd\u5927\u7ea6\u4e00\u534a\u7684\u8611\u83c7\u6d88\u8d39\u90fd\u662f\u7531\u8fd9\u4e2a\u4ea7\u4e1a\u751f\u4ea7\u7684\u3002\u6bcf\u5e74\u79cb\u5929\uff0c\u6211\u4eec\u90fd\u4f1a\u4e3e\u529e\u5468\u672b\u8611\u83c7\u8282\u6765\u5e86\u795d\uff0c\u6570\u5341\u4e07\u4eba\u6324\u6ee1\u4e86\u8fd9\u4e2a\u884c\u653f\u533a\u7684\u4e3b\u5e72\u9053\u9053\u5bcc\u5927\u8857(State Street)\u3002\u80af\u5185\u7279\u5e7f\u573a\u4e5f\u5df2\u6210\u4e3a\u7cbe\u917f\u5564\u9152\u3001\u7cbe\u81f4\u9910\u5385\u548c\u73b0\u573a\u97f3\u4e50\u7684\u5145\u6ee1\u6d3b\u529b\u7684\u4e2d\u5fc3\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u4e2a\u793e\u533a\u5438\u5f15\u4e86\u5bcc\u4eba-\u65e0\u8bba\u662f\u5e74\u8f7b\u4eba\u8fd8\u662f\u8001\u5e74\u4eba-\u5bfb\u627e\u4e00\u4e2a\u9002\u5408\u6b65\u884c\u3001\u6709\u8da3\u548c\u8d1f\u62c5\u5f97\u8d77\u7684\u5c45\u4f4f\u5730\u3002\u5f53\u7136\uff0c\u6240\u6709\u8fd9\u4e9b\u666f\u70b9\u90fd\u6d88\u5931\u4e86\u3002\n\u8d39\u57ce\u672c\u8eab\u4e5f\u53d7\u5230\u4e86\u75c5\u6bd2\u7684\u91cd\u521b\uff0c\u6709\u8d85\u8fc71.7\u4e07\u4eba\u611f\u67d3\uff0c1217\u4eba\u6b7b\u4ea1\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5207\u65af\u7279\u53bf\u5728\u5927\u90fd\u5e02\u5730\u533a\u6700\u5bb9\u6613\u6446\u8131\u56f0\u5883\uff0c\u611f\u67d3\u4eba\u6570\u7565\u4f4e\u4e8e2500\u4eba\uff0c\u6b7b\u4ea1\u4eba\u6570241\u4eba\uff0c\u5927\u90e8\u5206\u53d1\u751f\u5728\u79bb\u57ce\u5e02\u6700\u8fd1\u7684\u4e61\u9547\u3002\u80af\u5185\u7279\u9547(Kennett Township)\u662f\u6211\u6240\u5728\u884c\u653f\u533a\u5468\u56f4\u7684\u519c\u6751\u5730\u533a\uff0c\u76ee\u524d\u53ea\u670927\u4f8b\u75c5\u4f8b\u548c1\u4f8b\u6b7b\u4ea1\u3002\n\u6211\u6bcf\u5929\u90fd\u770b\u201c\u8d39\u57ce\u95ee\u8be2\u62a5\u201d\uff0c\u5b83\u94fe\u63a5\u5230\u8bb0\u5f55\u75be\u75c5\u8fdb\u5c55\u7684\u5730\u56fe\u548c\u56fe\u8868\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u65b0\u51a0\u80ba\u708e\u7684\u6570\u636e\u5df2\u7ecf\u53d6\u4ee3\u4e86\u6211\u65e9\u4e0a\u6c89\u6d78\u5728\u4f53\u80b2\u7248\u4e0a\u3002\u4e00\u5f20\u989c\u8272\u7f16\u7801\u7684\u5728\u7ebf\u5730\u56fe\u663e\u793a\u4e86\u6574\u4e2a\u53bf\u51fa\u73b0\u75c5\u6bd2\u7684\u5730\u65b9\u3002\u6709\u6761\u5f62\u56fe\u663e\u793a\u6bcf\u5929\u7684\u68c0\u6d4b\u6b21\u6570\uff0c\u9634\u6027\u548c\u9633\u6027\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u60f3\u8981\u66f4\u4ed4\u7ec6\u5730\u67e5\u770b\u8fd9\u4e9b\u6570\u5b57\u7684\u4eba\u6765\u8bf4\uff0c\u8fd8\u6709\u8be5\u53bf73\u4e2a\u76f4\u8f96\u5e02\u6bcf\u4e2a\u57ce\u5e02\u7684\u603b\u6570\u3002\u6211\u4e00\u76f4\u5728\u5173\u6ce8\u80af\u5185\u7279\u5e7f\u573a\u7684\u6570\u5b57\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u5b57\u5bf9\u6211\u548c\u6211\u7684\u5bb6\u4eba\u6765\u8bf4\u90fd\u662f\u6700\u91cd\u8981\u7684\u3002\u5b83\u8868\u660e\u4e86\u6211\u4eec\u5f53\u524d\u7684\u98ce\u9669\u6c34\u5e73\u3002\u5982\u679c\u6709\u5f53\u5730\u8bb0\u8005\u7684\u8bdd\uff0c\u8fd9\u662f\u5f53\u5730\u8bb0\u8005\u4f1a\u5199\u7684\u90a3\u79cd\u4e8b\u60c5\u3002\n\u5982\u679c\u4f60\u53ea\u770b\u5730\u533a\u6570\u636e\uff0c\u76ee\u524d\u7684\u60c5\u51b5\u51e0\u4e4e\u662f\u4ee4\u4eba\u632f\u594b\u7684\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5468\u91cc\uff0c\u5207\u65af\u7279\u53bf\u7684\u65b0\u611f\u67d3\u4eba\u6570\u5df2\u7ecf\u4ece\u4e24\u5468\u524d\u7684\u65e5\u5747\u8fd140\u4eba\u4e0b\u964d\u5230\u8fc7\u53bb\u51e0\u5929\u7684\u5e73\u574710\u4eba\u5de6\u53f3\u3002\u4e0a\u5468\u516d\uff0c\u5168\u53bf\u53ea\u6709\u56db\u4f8b\u65b0\u75c5\u4f8b\u3002\u5929\u6c14\u8f6c\u6696\uff0c\u9c9c\u82b1\u76db\u5f00\uff0c\u8fd9\u91cc\u5192\u9669\u5916\u51fa\u7684\u4eba\u8d8a\u6765\u8d8a\u591a\u3002\u4e0a\u5468\u672b\uff0c\u5728\u6211\u6240\u5728\u884c\u653f\u533a\u7684\u4e00\u4e2a\u5c0f\u89d2\u843d\u91cc\uff0c\u5728\u542c\u5f97\u89c1\u7684\u8303\u56f4\u5185\uff0c\u6709\u51e0\u4e2a\u76f8\u5f53\u5927\u7684\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u96c6\u4f1a\u3002\n\u76f4\u5230\u5927\u7ea6\u4e24\u5468\u524d\uff0c\u53bf\u536b\u751f\u5c40\u5730\u56fe\u7ed8\u5236\u7684\u80af\u5185\u7279\u5e7f\u573a\u56fe\u7247\u8fd8\u597d\u5f97\u4ee4\u4eba\u5403\u60ca\u3002\u968f\u7740\u53bf\u4eba\u6570\u7684\u6500\u5347\uff0c\u6211\u4eec\u7684\u884c\u653f\u533a\u4e00\u76f4\u62a5\u544a\u53ea\u6709\u4e24\u4eba\u611f\u67d3\uff0c\u6ca1\u6709\u6b7b\u4ea1\u3002\u8003\u8651\u5230\u6211\u4eec\u7684\u4eba\u53e3\u5bc6\u5ea6\u548c\u5728\u5f53\u5730\u8611\u83c7\u5c4b\u4e00\u8d77\u5de5\u4f5c\u7684\u5c45\u6c11\u6570\u91cf\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4e0a\u5468\uff0c\u8fd9\u4e00\u6570\u5b57\u4ee4\u4eba\u9707\u60ca\u5730\u8dc3\u5347\u81f330\u591a\u4eba\uff0c\u7136\u540e\u662f40\u591a\u4eba\uff0c\u7136\u540e\u662f50\u591a\u4eba\u3002\u5c31\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5dde\u957f\u6c64\u59c6\u00b7\u6c83\u5c14\u592b(Tom Wolf)\u5f00\u59cb\u653e\u677e\u6211\u4eec\u5730\u533a\u7684\u4e00\u4e9b\u9650\u5236\u7684\u540c\u65f6\uff0c\u622a\u81f3\u6628\u5929\uff0c\u8be5\u884c\u653f\u533a\u7684\u611f\u67d3\u4eba\u6570\u5df2\u8dc3\u5347\u81f365\u4eba-\u662f5\u6708\u521d\u768430\u591a\u500d\u3002\n\u6211\u5413\u4e86\u4e00\u8df3\uff0c\u5f00\u59cb\u56db\u5904\u6253\u7535\u8bdd\u3002\u201c\u8fd9\u771f\u7684\u5f88\u4ee4\u4eba\u62c5\u5fe7\uff0c\u201d\u5f53\u5730\u76d1\u4e8b\u4f1a\u526f\u4e3b\u5e2d\u60e0\u7279\u5c3c\u00b7\u970d\u592b\u66fc(Whitney Hoffman)\u8bf4\uff0c\u4ed6\u4e00\u76f4\u5728\u4e00\u4e2a\u793e\u533a\u7f51\u7ad9\u4e0a\u53d1\u5e03\u65b0\u51a0\u80ba\u708e\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u53ea\u5438\u5f15\u4e86\u4e00\u5c0f\u90e8\u5206\u53d7\u4f17\uff0c\u65e0\u8bba\u662f\u5370\u5237\u7684\u8fd8\u662f\u5728\u7ebf\u7684\uff0c\u4e00\u4e2a\u597d\u7684\u5730\u65b9\u65b0\u95fb\u8fd0\u8425\u90fd\u4f1a\u5438\u5f15\u5f88\u5c0f\u4e00\u90e8\u5206\u53d7\u4f17\u3002\u201c\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u6211\u62c5\u5fc3\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u53ef\u80fd\u662f\u4eba\u4eec\u6b63\u5728\u653e\u677e\u4ed6\u4eec\u7684\u793e\u4ea4\u8ddd\u79bb\u3002\u6211\u8d70\u5728\u5c3c\u514b\u677e\u516c\u56ed\uff0c\u770b\u5230\u5404\u5f0f\u5404\u6837\u7684\u4eba\u6ca1\u6709\u6234\u53e3\u7f69\uff0c\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u5728\u91ce\u9910\u684c\u4e0a\u5403\u996d\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u5b9a\u671f\u7ed9\u4ed6\u4eec\u6d88\u6bd2\uff0c\u8fd9\u4e9b\u684c\u5b50\u662f\u7528\u7ef3\u5b50\u56f4\u8d77\u6765\u7684\u3002\u8fd9\u662f\u4e2a\u574f\u4e3b\u610f\u3002\u201c\u3002\n\u6211\u4eec\u90fd\u77e5\u9053\u8fd9\u4e9b\u6570\u5b57\u662f\u4e0d\u51c6\u786e\u7684\u3002\u5927\u591a\u6570\u4eba\u90fd\u6ca1\u6709\u63a5\u53d7\u8fc7\u68c0\u6d4b\u3002\u4e00\u4e9b\u63a5\u53d7\u6d4b\u8bd5\u7684\u4eba\u63a5\u53d7\u4e86\u6d3b\u52a8\u6027\u611f\u67d3\u7684\u6d4b\u8bd5\uff0c\u53e6\u4e00\u4e9b\u4eba\u5219\u63a5\u53d7\u4e86\u6807\u5fd7\u7740\u65e7\u611f\u67d3\u7684\u6297\u4f53\u7684\u6d4b\u8bd5-\u8fd9\u4e9b\u6570\u5b57\u88ab\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6ca1\u6709\u5f88\u597d\u7684\u7406\u7531\u3002\u4e00\u4e9b\u8df3\u8dc3\u53ef\u80fd\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6b63\u5728\u8fdb\u884c\u66f4\u591a\u7684\u6d4b\u8bd5\u3002La Comunota Hispana\u662f\u4e00\u5bb6\u670d\u52a1\u4e8e\u62c9\u4e01\u88d4\u793e\u533a\u7684\u5065\u5eb7\u4e2d\u5fc3\uff0c\u4e0a\u5468\u6536\u5230\u4e86\u4e00\u7b14\u8d60\u6b3e\uff0c\u5c06\u628a\u79fb\u52a8\u68c0\u6d4b\u8bbe\u5907\u5e26\u5230\u8be5\u5730\u533a\u7684\u8611\u83c7\u519c\u573a\u3002\u7ed3\u679c\u662f\u53ef\u4ee5\u9884\u89c1\u7684\u3002\n\u8be5\u7ec4\u7ec7\u9996\u5e2d\u6267\u884c\u5b98\u739b\u4e3d\u5b89\u5a1c\u00b7\u4f0a\u65af\u96f7\u5c14\u68ee(Mariana Izraelson)\u672c\u5468\u672b\u5728\u5176\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86\u4e00\u6bb5\u89c6\u9891\u4fe1\u606f\uff0c\u5979\u8bf4\uff0c\u201c\u76ee\u524d\u6211\u4eec\u6b63\u5904\u4e8e\u5dc5\u5cf0\u65f6\u671f\u3002\u201d\u201c\u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u624d\u770b\u5230\u6fc0\u589e\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u6bcf\u4e2a\u4e0d\u662f\u5fc5\u8981\u5458\u5de5\u7684\u4eba\u5446\u5728\u5bb6\u91cc\u2026\u3002\u5982\u679c\u4f60\u80fd\u5446\u5728\u5bb6\u91cc\uff0c\u8bf7\u5446\u5728\u5bb6\u91cc\u3002\u201c\u3002\n\u6240\u4ee5\uff0c\u5f53\u9762\u5177\u6458\u4e0b\uff0c\u540e\u9662\u7684\u70e7\u70e4\u5f00\u59cb\u71c3\u70e7\u65f6\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5904\u4e8e\u67d0\u79cd\u65e0\u58f0\u7684\u7d27\u6025\u60c5\u51b5\u3002\u5728\u53bf\u536b\u751f\u5c40\u7684\u7f51\u7ad9\u4e0a\uff0c\u6ca1\u6709\u4e00\u4e2a\u8bcd\u5f15\u8d77\u4eba\u4eec\u5bf9\u5f53\u5730\u8fd9\u4e00\u5cf0\u503c\u7684\u5173\u6ce8\uff0c\u8be5\u7f51\u7ad9\u6b63\u5728\u8ffd\u8e2a\u66f4\u5927\u7684\u533a\u57df\u3002\u201c\u8be2\u95ee\u8005\u201d\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u6b63\u5728\u52aa\u529b\u8ffd\u8e2a\u66f4\u5927\u7684\u5730\u533a\u6545\u4e8b\u3002\u5f53\u5730\u5fae\u4e0d\u8db3\u9053\u7684\u65b0\u95fb\u673a\u6784\u4f3c\u4e4e\u90fd\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u80af\u5185\u7279\u5e7f\u573a\u8fd8\u6ca1\u6709\u4eba\u6b7b\u4e8e\u611f\u67d3\u3002\u636e\u6211\u4eec\u6240\u77e5\u3002\n\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u5411\u7f16\u8f91\u63d0\u4ea4\u4e00\u5c01\u4fe1\uff0c\u6216\u5199\u4fe1\u7ed9letters@theatlantic.com\u3002\n\u662f\u201c\u5927\u897f\u6d0b\u6708\u520a\u201d\u7684\u7279\u7ea6\u4f5c\u5bb6\uff0c\u8457\u6709\u201c\u9ed1\u9e70\u5760\u843d\u201d\u3001\u201c1968\u5e74Hu\u1ebf\u201d\u548c\u201c\u7ec8\u7ed3\uff1a\u6740\u6b7b\u5965\u8428\u9a6c\u00b7\u672c\u00b7\u62c9\u767b\u201d\u3002", "note_en": "Here in the plague, we are living a story that is global and yet intensely local. While all of us get reams of reporting about national and international COVID-19 trends, most of us get little or no reporting about what\u2019s happening in the communities where we actually live.\n  Local news has largely disappeared\u2014the phenomenon of news deserts is by now well known. And yet never has the need for local information been greater. The big news can be completely at odds with the small news\u2014and for individuals, it\u2019s the small news that matters most. The crucial virus data is hyper-local. In my neighborhood, hidden within a larger geographic picture whose trends give cause for hope, the disease is spiking dramatically, even scarily. And almost nobody knows.\n  I live in Kennett Square, Pennsylvania, a borough of about 6,000 souls southwest of Philadelphia. It is part of Chester County, an outer-ring suburb. With a few exceptions, the county is characterized by rolling green hills, pastures, and farms\u2014mostly horse farms. The county was made famous by the paintings of Andrew Wyeth. It is mostly white and relatively affluent.\n   Kennett Square Borough is anomalous. It encompasses a densely populated area of just over one square mile. About half its residents are Latino, many of them families who immigrated here from Mexico and Guatemala to work in the county\u2019s  thriving mushroom industry, which produces about half the mushrooms consumed in the United States. Each fall we celebrate with a weekend Mushroom Festival, where hundreds of thousands of people jam State Street, the borough\u2019s main thoroughfare. Kennett Square has also become a vibrant center for craft beer, fine restaurants, and live music, which has made the community a draw for the well-heeled\u2014young and old\u2014looking for a walkable, fun, and affordable place to live. All of these attractions have, of course, gone dark.\n    Philadelphia itself has been hard hit by the virus, with more than 17,000 infections and 1,217 deaths. Chester County has so far gotten off easiest in the metropolitan area, with just under  2,500 infections and 241 deaths, mostly in the townships closest to the city. Kennett Township, the rural area that surrounds my borough, has had just  27 cases and one death.\n  I read  The Philadelphia Inquirer every day, which links to maps and charts that record the progress of the disease. For me, COVID-19 stats have replaced my morning immersion in the sports pages.  A color-coded map online shows where the virus has appeared throughout the county. There are bar charts showing the number of tests, negative and positive, each day, and for those wanting a closer look at the numbers, there are totals for each of the county\u2019s 73 municipalities. I have been keeping an eye on the numbers for Kennett Square because these are the most important ones for me and my family. It indicates our immediate risk level. It\u2019s the kind of thing a local reporter would write about, if there were any local reporters.\n   If you look only at the regional data, the picture at the moment is almost cheerful. In the past week, new infections in Chester County have declined from a daily average of close to 40, two weeks ago, to an average of about 10 for the past few days. Last Saturday there were just four new cases in the entire county. The weather is turning warm, flowers are in bloom, and more and more people here are venturing out. In my little corner of the borough, within earshot, there were several fairly large Memorial Day gatherings last weekend.\n   Until about two weeks ago, the picture of Kennett Square painted by the county health department\u2019s maps was astonishingly good. As the county numbers climbed, our borough consistently reported only two infections and no deaths. This didn\u2019t make sense to me, given the density of our population and the number of residents who work close together in the local mushroom houses. Last week, the numbers jumped shockingly, to the 30s, then the 40s, then the 50s. At the very moment when Pennsylvania Governor Tom Wolf began easing some restrictions in our region, the number of infections in the borough has jumped, as of yesterday, to 65\u2014more than 30 times what it was at the beginning of May.\n I was startled enough to start calling around. \u201cIt\u2019s really alarming,\u201d said Whitney Hoffman, the vice chair of the local board of supervisors, who has been posting COVID-19 data on a community website that attracts a tiny fraction of the audience a good local-news operation would, whether in print or online. \u201cWe aren\u2019t sure what\u2019s really causing it, but I\u2019m concerned that one reason might be that people are relaxing their social distancing. I walk in Nixon Park and I see all kinds of people without masks, some of them eating at picnic tables that are roped off because we are unable to disinfect them regularly. Bad idea.\u201d\n    We all know that these numbers are imprecise. Most people have not been tested. Some of those who have been tested were tested for active infections and others for antibodies that signal old infections\u2014 numbers that have been combined, for no good reason. Some of the jump might simply be because more tests are being administered. La Comunidad Hispana, a health center serving the Latino community, received a grant last week to bring mobile testing units to area mushroom farms. The results were predictable.\n  \u201cRight now we\u2019re at a peak,\u201d said Mariana Izraelson, the organization\u2019s CEO, in a video message she posted on its website this weekend. \u201cIt has taken until now for us to see a surge. And we strongly recommend to everyone who is not an essential employee to stay at home \u2026 If you can stay at home, please stay at home.\u201d\n So while the masks are coming off and the backyard barbecues are firing up, we\u2019re in something of a silent emergency here. There is not a word drawing attention to this local spike on the county health department\u2019s website, which is tracking a much larger area. It hasn\u2019t been noted by the  Inquirer, which is tracking the larger regional story hard. None of the paltry local-news outfits appears to have even noticed.\n So far no one has died of the infection in Kennett Square. That we know of.\n  We want to hear what you think about this article.  Submit a letter to the editor or write to letters@theatlantic.com.\n         is a contributing writer at  The Atlantic and the author of   Black Hawk Down,   Hu\u1ebf 1968, and   The Finish: The Killing of Osama Bin Laden.", "posttime": "2020-05-28 11:59:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65b0\u95fb,local,\u5730\u533a", "title": "\u201c\u5730\u65b9\u65b0\u95fb\u201d\u7684\u6d88\u4ea1\u662f\u5927\u6d41\u884c\u7684\u7d27\u6025\u72b6\u6001", "title_en": "The Demise of Local News Is a Pandemic Emergency", "transed": 1, "url": "https://www.theatlantic.com/health/archive/2020/05/towns-rural-coronavirus-local-news/612109/", "via": "", "real_tags": ["\u65b0\u95fb", "local", "\u5730\u533a"]}, {"category": "", "categoryclass": "", "imagename": "91428812d152f832264435db86484411.jpg", "infoid": 1004027, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5982\u5b83\u7684\u65b0\u4f7f\u547d\u6240\u6697\u793a\u7684\u90a3\u6837\uff0c\u5b83\u6d89\u53ca\u5230Docker\u548c\u51e0\u4e2aAzure\u5f00\u53d1\u5de5\u5177(\u5305\u62ecVisual Studio Code\u548cAzure Container Instance(ACI))\u4e4b\u95f4\u66f4\u7d27\u5bc6\u7684\u96c6\u6210\u3002\u6839\u636eDocker\u7684\u8bf4\u6cd5\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u751a\u81f3\u51e0\u5929\u7684\u65f6\u95f4\u624d\u80fd\u8de8\u4e24\u5957\u5de5\u5177\u5efa\u7acb\u4ed6\u4eec\u7684\u96c6\u88c5\u7bb1\u5316\u73af\u5883\u3002\n\u96c6\u6210\u7684\u60f3\u6cd5\u662f\u5728\u4f7f\u7528Microsoft\u5de5\u5177\u96c6\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4f7f\u5305\u542bDocker\u5bb9\u5668\u53d8\u5f97\u66f4\u5bb9\u6613\u3001\u66f4\u5feb\u3001\u66f4\u9ad8\u6548\u3002Docker\u9996\u5e2d\u6267\u884c\u5b98\u65af\u79d1\u7279\u00b7\u7ea6\u7ff0\u65af\u987f\u8868\u793a\uff0c\u8fd9\u662f\u4e3a\u4e86\u7ed9\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u4f53\u9a8c\u3002\n\u6269\u5c55\u6211\u4eec\u4e0e\u5fae\u8f6f\u516c\u53f8\u7684\u6218\u7565\u5173\u7cfb\u5c06\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e3a\u5f00\u53d1\u5546\u6784\u5efa\u3001\u5171\u4eab\u548c\u8fd0\u884c\u57fa\u4e8e\u4e91\u7684\u3001\u57fa\u4e8e\u5fae\u670d\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u590d\u6742\u6027\u3002Docker\u548cVS Code\u662f\u6700\u53d7\u6b22\u8fce\u7684\u4e24\u4e2a\u5f00\u53d1\u5de5\u5177\uff0c\u6211\u4eec\u5f88\u81ea\u8c6a\u80fd\u5c06\u5b83\u4eec\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4e3a\u4e3aAzure Container\u5b9e\u4f8b\u6784\u5efa\u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u201cJohnston\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002\n\u4ed6\u4eec\u5ba3\u5e03\u7684\u529f\u80fd\u4e4b\u4e00\u662f\u80fd\u591f\u76f4\u63a5\u4eceDocker\u547d\u4ee4\u884c\u754c\u9762\u767b\u5f55Azure\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u5927\u7b80\u5316\uff0c\u51cf\u5c11\u4e86\u4e24\u5957\u5de5\u5177\u4e4b\u95f4\u7684\u5f80\u8fd4\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8bbe\u7f6e\u5177\u6709\u4e00\u7ec4\u9ed8\u8ba4\u914d\u7f6e\u7684Microsoft ACI\u73af\u5883\u3002\u5f00\u53d1\u4eba\u5458\u8fd8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u672c\u5730\u684c\u9762\u5b9e\u4f8b\u548c\u4e91\u4e4b\u95f4\u5207\u6362\u4ee5\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u4e9b\u96c6\u6210\u548c\u5176\u4ed6\u96c6\u6210\u90fd\u662f\u4e3a\u4e86\u8ba9Azure\u548cDocker\u7684\u666e\u901a\u7528\u6237\u66f4\u5bb9\u6613\u5728\u5fae\u8f6f\u4e91\u670d\u52a1\u4e2d\u5de5\u4f5c\uff0c\u800c\u4e0d\u9700\u8981\u7ecf\u5386\u5f88\u591a\u989d\u5916\u7684\u9ebb\u70e6\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u96c6\u6210\u662f\u4eceBeta\u5f00\u59cb\u7684\uff0c\u4f46\u8be5\u516c\u53f8\u627f\u8bfa\u5b83\u4eec\u5c06\u5728\u4eca\u5e74\u4e0b\u534a\u5e74\u53d1\u5e03\u3002", "note_en": "As its new mission suggests, it involves tighter integration between  Docker   and a couple of Azure developer tools including Visual Studio Code and Azure Container Instances (ACI). According to Docker, it can take developers hours or even days to set up their containerized environment across the two sets of tools.\n The idea of the integration is to make it easier, faster and more efficient to include  Docker   containers when developing applications with the  Microsoft   tool set. Docker CEO Scott Johnston says it\u2019s a matter of giving developers a better experience.\n  \u201cExtending our strategic relationship with  Microsoft   will further reduce the complexity of building, sharing and running cloud-native, microservices-based applications for developers.  Docker   and VS Code are two of the most beloved developer tools and we are proud to bring them together to deliver a better experience for developers building container-based apps for Azure Container Instances,\u201d Johnston said in a statement.\n Among the features they are announcing is the ability to log into Azure directly from the Docker command line interface, a big simplification that reduces going back and forth between the two sets of tools. What\u2019s more, developers can set up a Microsoft ACI environment complete with a set of configuration defaults. Developers will also be able to switch easily between their local desktop instance and the cloud to run applications.\n These and other integrations are designed to make it easier for Azure and Docker common users to work in in the Microsoft cloud service without having to jump through a lot of extra hoops to do it.\n It\u2019s worth noting that these integrations are starting in Beta, but the company promises they should be released some time in the second half of this year.", "posttime": "2020-05-28 11:45:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u5f00\u53d1,docker,\u5fae\u8f6f,\u7b80\u5316", "title": "Docker\u6269\u5c55\u4e0e\u5fae\u8f6f\u7684\u5173\u7cfb\uff0c\u7b80\u5316\u8de8\u5e73\u53f0\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c", "title_en": "Docker Expands Relationship With Microsoft To Ease Developer Experience Across Platforms", "transed": 1, "url": "https://techcrunch.com/2020/05/27/docker-expands-relationship-with-microsoft-to-ease-developer-experience-across-platforms/", "via": "", "real_tags": ["microsoft", "\u5f00\u53d1", "docker", "\u5fae\u8f6f", "\u7b80\u5316"]}, {"category": "", "categoryclass": "", "imagename": "46af9a6fc665f160493ed7e4e4a97ab7.jpeg", "infoid": 1004025, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u96ea\u5df2\u7ecf\u5728\u6726\u80e7\u4e2d\u5f00\u59cb\u4e86\uff0c\u6574\u591c\u5fd9\u788c\u5730\u5806\u79ef\u5728\u7530\u91ce\u548c\u516c\u8def\u4e0a\uff0c\u4e00\u7247\u6df1\u767d\u7684\u5bc2\u9759\u3002\n\u6bcf\u4e00\u68f5\u677e\u6811\u3001\u51b7\u6749\u548c\u94c1\u6749\u4e0a\u7684\u8c82\u76ae\u5bf9\u4f2f\u7235\u6765\u8bf4\u90fd\u592a\u8d35\u4e86\uff0c\u6986\u6811\u4e0a\u6700\u53ef\u601c\u7684\u6811\u679d\u4e0a\u4e5f\u957f\u7740\u4e00\u82f1\u5bf8\u6df1\u7684\u73cd\u73e0\u3002\n\u4ece\u65b0\u76d6\u4e0a\u5361\u62c9\u62c9\u7684\u68da\u5b50\u91cc\u4f20\u6765\u5f3a\u5b89\u63d0\u514b\u5229\u5c14\u4f4e\u6c89\u7684\u4e4c\u9e26\u58f0\uff0c\u50f5\u786c\u7684\u94c1\u8f68\u53d8\u5f97\u67d4\u548c\u5f97\u50cf\u5929\u9e45\u4e00\u6837\uff0c\u4ecd\u7136\u5728\u96ea\u5730\u4e0a\u98d8\u52a8\u3002\n\u6211\u7ad9\u5728\u7a97\u8fb9\uff0c\u770b\u7740\u65e0\u58f0\u7684\u5929\u7a7a\u548c\u7a81\u7136\u98de\u6765\u7684\u96ea\u9e1f\uff0c\u5c31\u50cf\u68d5\u8272\u7684\u6811\u53f6\u5728\u65cb\u8f6c\u3002\n\u6211\u60f3\u5230\u4e86\u751c\u871c\u5965\u672c\u7684\u4e00\u4e2a\u571f\u5806\uff0c\u90a3\u91cc\u77d7\u7acb\u7740\u4e00\u5757\u5c0f\u5893\u7891\uff1b\u8584\u7247\u5982\u4f55\u8f7b\u8f7b\u5730\u6298\u53e0\u7740\u5b83\uff0c\u6811\u6797\u91cc\u7684\u77e5\u66f4\u9e1f\u4e5f\u662f\u5982\u6b64\u3002\n\u6211\u4eec\u81ea\u5df1\u7684\u5c0f\u6885\u5e03\u5c14\u5927\u58f0\u8bf4\uff1a\u201c\u7238\u7238\uff0c\u662f\u8c01\u8ba9\u5b83\u4e0b\u96ea\u7684\uff1f\u201d\u6211\u8fd8\u8bb2\u5230\u4e86\u5728\u4e0b\u9762\u7167\u987e\u6211\u4eec\u7684\u597d\u7684\u5168\u7236\u3002\n\u6211\u518d\u4e00\u6b21\u770b\u7740\u964d\u96ea\uff0c\u60f3\u8d77\u4e86\u6211\u4eec\u7b2c\u4e00\u6b21\u5927\u60b2\u54c0\u65f6\uff0c\u90a3\u5806\u96ea\u5806\u5f97\u90a3\u4e48\u9ad8\u7684\u94c5\u7070\u8272\u7684\u5929\u7a7a\u3002\n\u6211\u8bb0\u5f97\u4ece\u90a3\u6735\u4e91\u4e00\u6837\u7684\u96ea\u82b1\u4e0a\u6162\u6162\u843d\u4e0b\u7684\u8010\u5fc3\uff0c\u4e00\u7247\u4e00\u7247\u5730\uff0c\u6108\u5408\u5e76\u63a9\u76d6\u4e86\u6211\u4eec\u6df1\u6df1\u7684\u60b2\u75db\u7559\u4e0b\u7684\u4f24\u75a4\u3002\n\u6211\u53c8\u5bf9\u5b69\u5b50\u8f7b\u58f0\u8bf4\uff1a\u201c\u96ea\u8ba9\u4e00\u5207\u5b89\u9759\uff0c\u4eb2\u7231\u7684\uff0c\u53ea\u6709\u4ec1\u6148\u7684\u5929\u7236\u624d\u80fd\u8ba9\u5b83\u6389\u4e0b\u6765\uff01\u201d\n\u7136\u540e\uff0c\u6211\u7528\u770b\u4e0d\u89c1\u7684\u773c\u775b\u543b\u4e86\u5979\uff1b\u5979\u4e5f\u56de\u543b\u7740\uff0c\u4e0d\u77e5\u9053\u6211\u7684\u543b\u662f\u7ed9\u5979\u59b9\u59b9\u7684\uff0c\u7d27\u7d27\u5730\u53e0\u5728\u539a\u539a\u7684\u79ef\u96ea\u4e0b\u3002\n\u6211\u7684\u7236\u4eb2\u51fa\u751f\u5728\u7530\u7eb3\u897f\u5dde\u7684\u5b5f\u83f2\u65af\uff0c\u6211\u60f3\u5728\u4ed6\u751f\u547d\u7684\u524d18\u5e74\u91cc\uff0c\u4ed6\u5f88\u5c11\u770b\u5230\u96ea\uff0c\u5982\u679c\u66fe\u7ecf\u89c1\u8fc7\u96ea\u7684\u8bdd\u3002\u6211\u521a\u6ee19\u5c81\u7684\u65f6\u5019\uff0c\u6211\u4eec\u642c\u5230\u4e86\u6ce2\u58eb\u987f\u90ca\u5916\u7684\u9a6c\u8428\u8bf8\u585e\u5dde\u5217\u514b\u661f\u6566\u3002\u4e0b\u96ea\u7684\u65f6\u5019\uff0c\u7238\u7238\u4f1a\u5e26\u6211\u53bb\u4ed6\u6240\u8c13\u7684\u201c\u96ea\u5730\u6f2b\u6b65\u201d\uff0c\u5728\u90a3\u91cc\u6211\u4eec\u53ef\u4ee5\u804a\u5929\uff0c\u4eab\u53d7\u8857\u9053\u7684\u5b81\u9759\u3002\n\u5728\u90a3\u4e9b\u603b\u662f\u611f\u89c9\u50cf\u662f\u4e00\u79cd\u6b3e\u5f85\u7684\u6563\u6b65\u4e2d\uff0c\u6211\u7236\u4eb2\u7ecf\u5e38\u80cc\u8bf5\u4ed6\u719f\u8bb0\u7684\u300a\u7b2c\u4e00\u573a\u96ea\u300b\u7684\u524d\u4e24\u8282\uff1a\n\u96ea\u5df2\u7ecf\u5728\u6726\u80e7\u4e2d\u5f00\u59cb\u4e86\uff0c\u6574\u591c\u5fd9\u788c\u5730\u5806\u79ef\u5728\u7530\u91ce\u548c\u516c\u8def\u4e0a\uff0c\u4e00\u7247\u6df1\u767d\u7684\u5bc2\u9759\u3002\n\u6bcf\u4e00\u68f5\u677e\u6811\u3001\u51b7\u6749\u548c\u94c1\u6749\u4e0a\u7684\u8c82\u76ae\u5bf9\u4f2f\u7235\u6765\u8bf4\u90fd\u592a\u8d35\u4e86\uff0c\u6986\u6811\u4e0a\u6700\u53ef\u601c\u7684\u6811\u679d\u4e0a\u4e5f\u957f\u7740\u4e00\u82f1\u5bf8\u6df1\u7684\u73cd\u73e0\u3002\n\u8fd9\u53e5\u8bdd\u592a\u795e\u5947\u4e86\u3002\u964d\u96ea\u5f00\u59cb\u4e8e\u201c\u6726\u80e7\u201d\uff0c\u4e5f\u5c31\u662f\u9ec4\u660f\u3002\u5b83\u201c\u5fd9\u788c\u201d\u5730\u843d\u4e86\u4e0b\u6765\uff0c\u4eff\u4f5b\u5b83\u6709\u4e00\u9879\u5de5\u4f5c\u8981\u505a--\u7ed9\u539f\u672c\u8d2b\u7a77\u7684\u6811\u6728\u62ab\u4e0a\u8c82\u76ae\u548c\u73cd\u73e0\u7684\u5916\u8863\uff0c\u8fd9\u5c42\u73cd\u73e0\u5b8c\u7f8e\u5730\u6355\u6349\u5230\u4e86\u96ea\u540e\u6811\u6728\u53ef\u4ee5\u7a7f\u6234\u7684\u51b0\u96ea\u6df7\u5408\u7269\u3002\n\u7b2c\u4e09\u8282\u4e5f\u5f88\u4e0d\u9519--\u5361\u62c9\u62c9\u662f\u4e00\u79cd\u5927\u7406\u77f3\u3002\u5f3a\u557c\u514b\u5229\u5c14\u662f\u4e00\u53ea\u516c\u9e21\uff0c\u5b83\u7684\u4e4c\u9e26\u88ab\u96ea\u63d0\u4f9b\u7684\u9694\u97f3\u6240\u906e\u853d\u3002\n\u6211\u7236\u4eb2\u4ece\u672a\u80cc\u8bf5\u6216\u6717\u8bfb\u8fc7\u8fd9\u9996\u8bd7\u7684\u5176\u4f59\u90e8\u5206\u3002\u6211\u4ece\u6765\u90fd\u4e0d\u77e5\u9053\u30021978\u5e74\uff0c\u6211\u7684\u7236\u6bcd\u642c\u5230\u4e86\u963f\u62c9\u5df4\u9a6c\u5dde\u7684\u4ea8\u8328\u7ef4\u5c14\uff0c\u90a3\u91cc\u7684\u96ea\u51e0\u4e4e\u5f88\u5c11\uff0c\u5c31\u50cf\u5b5f\u83f2\u65af\u4e00\u6837\uff0c\u964d\u96ea\u7684\u539a\u5ea6\u4e5f\u5f88\u5c11\u5230\u8db3\u4ee5\u88c5\u9970\u6811\u6728\u7684\u5730\u6b65\u3002\u6211\u6709\u6211\u7684\u5b69\u5b50\uff0c\u5f53\u4ed6\u4eec\u957f\u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5076\u5c14\u4f1a\u53bb\u5723\u8def\u6613\u65af\u548c\u534e\u76db\u987f\u90ca\u533a\u7684\u96ea\u5730\u6563\u6b65\u3002\u6211\u4f1a\u7ecf\u5e38\u60f3\u8d77\u8fd9\u9996\u8bd7\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u8bb0\u4f4f\u5b83\uff0c\u5509\uff0c\u9519\u8fc7\u4e86\u548c\u6211\u7684\u5b69\u5b50\u4eec\u5206\u4eab\u8fd9\u4e9b\u8bd7\u53e5\u7684\u673a\u4f1a\u3002\n\u7136\u540e\uff0c\u4e5f\u8bb8\u5728\u6211\u7b2c\u4e00\u6b21\u542c\u5230\u8fd9\u4e24\u53e5\u5f00\u5934\u7684\u8bd7\u53e5\u534a\u4e2a\u4e16\u7eaa\u540e\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u6574\u9996\u8bd7\u3002\u6211\u4e00\u76f4\u4ee5\u4e3a\u8fd9\u53ea\u662f\u6b4c\u9882\u81ea\u7136\u4e4b\u7f8e\u7684\u8bd7\u4e2d\u7684\u4e00\u9996\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u9996\u8bd7\u5728\u7b2c\u4e94\u8282\u4e2d\u7684\u4e3b\u9898\u53d1\u751f\u4e86\u6839\u672c\u6027\u7684\u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u8f6c\u5411\u4e86\u8bd7\u6b4c\u7684\u771f\u6b63\u4e3b\u9898\uff0c\u6d1b\u5384\u5c14\u5973\u513f\u7684\u6b7b\u4ea1\uff0c\u4ee5\u53ca\u60b2\u4f24\u548c\u54c0\u60bc\u7684\u672c\u8d28\u3002\n\u6700\u540e\u4e00\u8282\u8ba9\u6211\u70ed\u6cea\u76c8\u7736-\u4e00\u4f4d\u7236\u4eb2\u7684\u5fc3\u5599\uff0c\u4ed6\u5bf9\u6d3b\u7740\u7684\u5973\u513f\u7684\u559c\u60a6\u4e0e\u5979\u59b9\u59b9\u7684\u6b7b\u4ea1\u65e0\u60c5\u5730\u878d\u4e3a\u4e00\u4f53\u3002\u8fd9\u5f88\u591a\u6101\u5584\u611f\uff0c\u6211\u89c9\u5f97\u81ea\u5df1\u88ab\u64cd\u7eb5\u4e86\uff0c\u4f46\u5b83\u6bcf\u6b21\u90fd\u5bf9\u6211\u8d77\u4f5c\u7528\u3002\u4e5f\u8bb8\u662f\u56e0\u4e3a\u6211\u662f\u4e2a\u7236\u4eb2\u3002\u6216\u8bb8\u8fd9\u53ea\u662f\u4e00\u79cd\u7ec6\u817b\u7684\u591a\u6101\u5584\u611f\u3002\u6700\u540e\u4e00\u8282\u7684\u6784\u601d\u65b9\u5f0f\u76f8\u5f53\u4e0d\u540c\u5bfb\u5e38\u3002\u4ed6\u63cf\u8ff0\u4e86\u4e00\u4ef6\u76f8\u5f53\u5e73\u51e1\u7684\u4e8b\u60c5\uff0c\u4f20\u8fbe\u4e86\u5927\u91cf\u7684\u60c5\u611f-\u4e00\u4f4d\u9677\u5165\u6c89\u601d\u7684\u7236\u4eb2\uff0c\u671b\u7740\u7a97\u5916\u98d8\u843d\u7684\u96ea\uff0c\u4eb2\u543b\u7ad9\u5728\u4ed6\u8eab\u8fb9\u7684\u5973\u513f\u3002\n\u6211\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7236\u4eb2\u6ca1\u6709\u7ed9\u6211\u8bfb\u5b8c\u8fd9\u9996\u8bd7\u7684\u5176\u4f59\u90e8\u5206\uff0c\u4f46\u6211\u77e5\u9053\u4ed6\u7684\u6bcd\u4eb2\u5728\u6211\u7236\u4eb2\u51fa\u751f\u540e\u5931\u53bb\u4e86\u4e00\u4e2a\u5973\u5a74\uff0c\u4e5f\u5c31\u662f\u6211\u7236\u4eb2\u4ece\u672a\u62e5\u6709\u8fc7\u7684\u59b9\u59b9\u3002\u6211\u5728\u5b5f\u83f2\u65af\u7684\u4e00\u4e2a\u516c\u5893\u91cc\u770b\u5230\u8fc7\u5979\u7684\u5c0f\u5893\u7891\uff0c\u751a\u81f3\u8fde\u540d\u5b57\u90fd\u6ca1\u6709\uff0c\u53ea\u6709\u201c\u5c0f\u7f57\u4f2f\u8328\u201d\u3002\n\u6211\u60f3\u77e5\u9053\uff0c\u6bcf\u6b21\u4e0b\u96ea\uff0c\u6211\u7236\u4eb2\u80cc\u8bf5\u8fd9\u4e24\u9996\u5f00\u573a\u767d\u7684\u65f6\u5019\uff0c\u4ed6\u662f\u5426\u56de\u60f3\u8d77\u4ed6\u6bcd\u4eb2\u7684\u635f\u5931\u548c\u5979\u7684\u5fc3\u788e\uff0c\u4ed6\u77e5\u9053\u8fd9\u4e9b\u90fd\u9690\u85cf\u5728\u5979\u60c5\u611f\u751f\u6d3b\u7684\u8868\u9762\u4e4b\u4e0b\u3002\u6211\u548c\u7236\u4eb2\u4e00\u8d77\u8d70\u96ea\u5730\u7684\u611f\u89c9\u53ef\u80fd\u4e0e\u4ed6\u4eec\u5bf9\u6211\u7684\u611f\u89c9\u4e0d\u540c\uff0c\u56e0\u4e3a\u4ed6\u80cc\u8bf5\u4e86\u5f00\u573a\u767d\uff0c\u60f3\u5230\u4e86\u7ed3\u5c40\uff0c\u60f3\u5230\u4e86\u4ed6\u6bcd\u4eb2\u7684\u75db\u82e6\u3002\u5982\u679c\u6211\u662f\u5bf9\u7684\uff0c\u4ed6\u5bf9\u6211\u9690\u7792\u4e86\u4ed6\u7684\u60c5\u611f\uff0c\u5c31\u50cf\u8bd7\u4eba\u5728\u8bd7\u7684\u6700\u540e\u4e00\u8282\u5bf9\u81ea\u5df1\u7684\u5b69\u5b50\u9690\u7792\u4e00\u6837\u3002\n\u4e3a\u4ec0\u4e48\u8fd9\u9996\u8bd7\u53eb\u201c\u7b2c\u4e00\u573a\u96ea\u201d\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u5e72\u8106\u53eb\u201c\u4e0b\u96ea\uff1f\u201d\n2.\u4e0b\u96ea\u662f\u4e00\u79cd\u6bd4\u55bb\u3002\u4f60\u5982\u4f55\u63cf\u8ff0\u6d1b\u5384\u5c14\u7528\u5b83\u6765\u6355\u6349\u4ec0\u4e48\uff1f\n3.\u201c\u5168\u7236\u201d\u5c31\u662f\u4e0a\u5e1d\u3002\u4f60\u5982\u4f55\u63cf\u8ff0\u6d1b\u5384\u5c14\u5173\u4e8e\u795e\u7684\u4ec1\u6148(\u53ca\u5176\u9650\u5ea6)\u7684\u89c2\u70b9\uff1f\n4.\u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u201c\u7528\u773c\u775b\u770b\u4e0d\u89c1\u201d\u8fd9\u53e5\u8bdd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "note_en": "The snow had begun in the gloaming, And busily all the night Had been heaping field and highway With a silence deep and white.\n Every pine and fir and hemlock Wore ermine too dear for an earl, And the poorest twig on the elm-tree Was ridged inch deep with pearl.\n From sheds new-roofed with Carrara Came Chanticleer\u2019s muffled crow, The stiff rails were softened to swan\u2019s-down, And still fluttered down the snow.\n I stood and watched by the window The noiseless work of the sky, And the sudden flurries of snow-birds, Like brown leaves whirling by.\n I thought of a mound in sweet Auburn Where a little headstone stood; How the flakes were folding it gently, As did robins the babes in the wood.\n Up spoke our own little Mabel, Saying, \u201cFather, who makes it snow?\u201d And I told of the good All-father Who cares for us here below.\n Again I looked at the snow-fall, And thought of the leaden sky That arched o\u2019er our first great sorrow, When that mound was heaped so high.\n I remembered the gradual patience That fell from that cloud-like snow, Flake by flake, healing and hiding The scar of our deep-plunged woe.\n And again to the child I whispered, \u201cThe snow that husheth all, Darling, the merciful Father Alone can make it fall!\u201d\n Then, with eyes that saw not, I kissed her; And she, kissing back, could not know That  my kiss was given to her sister,  Folded close under deepening snow.\n  My father was born in Memphis, Tennessee and I assume that through the first 18 years of his life, he rarely, if ever, saw snow. When I was just turning 9, we moved to Lexington, Massachusetts, just outside of Boston. When it snowed, my Dad would take me for what he called a \u201csnow walk\u201d where we would talk and enjoy the quiet of the streets.\n On those walks, which always felt like a treat, my father would often recite the opening two verses of \u201cThe First Snowfall\u201d which he knew by heart:\n The snow had begun in the gloaming, And busily all the night Had been heaping field and highway With a silence deep and white.\n Every pine and fir and hemlock Wore ermine too dear for an earl, And the poorest twig on the elm-tree Was ridged inch deep with pearl.\n The words are magical. The snowfall started in the \u201cgloaming\u201d which is twilight. It fell \u201cbusily\u201d as if it had a job to take care of \u2014 to dress up the otherwise impoverished trees with the white fur of ermine, and the coating of pearl which captures perfectly the mixture of snow and ice that trees can wear after a snowfall.\n The third verse is pretty good, too \u2014 carrara is a kind of marble. Chanticleer is a rooster whose crow is muffled by the sound-proofing that snow provide.\n My father never recited or read me the rest of the poem. I never knew it. In 1978, my parents moved to Huntsville, Alabama, where snow is almost rare as it is in Memphis and it rarely falls thickly enough to dress up the trees. I had my children and we took the occasional snow walk in St. Louis and suburban DC when they were growing up. I would often think of the poem, but I didn\u2019t know it by heart, alas, and missed a chance to share those lines with my children.\n And then, maybe a half a century after I first heard those opening two verses, I stumbled on the full poem. I had always assumed it was just one of those poems extolling the beauties of nature. I didn\u2019t know of the radical change of subject that the poem takes in the fifth verse as it turns to the real subject of the poem, the death of Lowell\u2019s daughter, and the nature of grief and mourning.\n The last verse brings tears to my eyes \u2014 the heartbeak of a father whose joy in his living daughter is melded inexorably with the death of her sister. It\u2019s sentimental and I feel manipulated but it works on me every time. Maybe because I\u2019m a father. Or maybe it\u2019s just an exquisite bit of sentimentality. The way the last verse is constructed is quite extraordinary. An immense amount of emotion is conveyed in the way he describes something quite mundane \u2014 a father lost in thought, looking out the window at falling snow and kissing the daughter who stands beside him.\n I wonder why my Dad never read me the rest of the poem, but I know that his mother lost a baby girl after my father was born, the sister my father never had. I\u2019ve seen her little headstone in a Memphis cemetery without even a name, just \u201cBaby Roberts.\u201d\n And I wonder if every time it snowed, and my father recited those two opening verses, if he thought back to his mother\u2019s loss and her heartbreak that he knew lay beneath the surface of her emotional life. Those snow walks my dad and I took together probably had a different feel for him than they had for me, as he recited the opening verses and thought of the ending, and of his mother\u2019s pain. If I\u2019m right, he kept his emotions from me, just as the poet does from his own child in the last verse of the poem.\n  Why is the poem called \u201cThe First Snowfall.\u201d Why not just \u201cThe Snowfall?\u201d\n 2. The falling snow is a metaphor. How would you describe what Lowell is using it to capture?\n 3. The \u201cAll-father\u201d is God. How would you describe Lowell\u2019s view of Divine mercy (and its limits)?\n 4. What does the phrase \u201cwith eyes that saw not\u201d mean in the last verse?", "posttime": "2020-05-28 10:57:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7236\u4eb2,poems", "title": "\u7236\u4eb2\u7684\u8bd7#3-\u7b2c\u4e00\u573a\u96ea", "title_en": "Poems of my Father #3 \u2013 The First Snowfall", "transed": 1, "url": "https://medium.com/@russroberts/poems-of-my-father-3-797a00b44a00", "via": "", "real_tags": ["\u7236\u4eb2", "poems"]}, {"category": "", "categoryclass": "", "imagename": "c269caa59ae31756e2a9a9d6200b9289.png", "infoid": 1004024, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\n\u8be5\u5b58\u50a8\u5e93\u5305\u542bOpenSilver\u548cCSHTML5\u7684\u6e90\u4ee3\u7801\u3002\u6709\u5173\u5982\u4f55\u6784\u5efa\u6e90\u4ee3\u7801\u548c\u5982\u4f55\u6d4b\u8bd5\u6e90\u4ee3\u7801\u7684\u8bf4\u660e\uff0c\u8bf7\u8bbf\u95eewww.opensilver.net\u548cwww.cshtml5.com-Readme.md\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\n\u8be5\u5b58\u50a8\u5e93\u5305\u542bOpenSilver(\u7f16\u8bd1\u4e3aWebAssembly)\u548cCSHTML5(\u7f16\u8bd1\u4e3aJavaScript)\u7684\u6e90\u4ee3\u7801\u3002\u6709\u5173\u8fd9\u4e24\u79cd\u4ea7\u54c1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eewww.opensilver.net\u548cwww.cshtml5.com\u3002\ntl\uff1bdr\uff1a\u8fd0\u884cRestore-Packages-opensilver.bat&34\uff1b\uff0c\u7136\u540e\u6253\u5f00\u540d\u4e3a&#34\uff1bOpenSilver.sln&#34\uff1b\u7684\u89e3\u51b3\u65b9\u6848\u4ee5\u7f16\u8bd1OpenSilver\u8fd0\u884c\u65f6\u3002\n\u5728\u672c\u5730\u514b\u9686\u6b64\u8d44\u6599\u6863\u6848\u5e93\uff0c\u6216\u5c06\u5176\u4e0b\u8f7d\u4e3aZIP\u5b58\u6863\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\n\u4f7f\u7528Visual Studio 2019\u6216\u66f4\u9ad8\u7248\u672c\u6253\u5f00\u89e3\u51b3\u65b9\u6848\u6587\u4ef6&#34\uff1bOpenSilver.sln&#34\uff1b(\u4f4d\u4e8e&#34\uff1bsrc&34\uff1b\u6587\u4ef6\u5939\u4e2d\u3002\n\u6839\u636e\u60a8\u662f\u8981\u4f7f\u7528&#34\uff1bOpenSilver&#34\uff1bNuGet\u8f6f\u4ef6\u5305(\u63a8\u8350)\u8fd8\u662f&#34\uff1bOpenSilver.UWPCompatible&34\uff1b\u8f6f\u4ef6\u5305\uff0c\u6784\u5efa&#34\uff1bSL&#34\uff1b\u914d\u7f6e\u6216&#34\uff1bUWP&#34\uff1b\u914d\u7f6e\u3002\u8fd9\u5c06\u5728&#34\uff1bbin/OpenSilver/SL/&#34\uff1b\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u7a0b\u5e8f\u96c6&#34\uff1bOpenSilver.dll&#34\uff1b\uff0c\u6216\u5728&#34\uff1bbin/OpenSilver/UWP/&#34\uff1b\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u7a0b\u5e8f\u96c6&#34\uff1bOpenSilver.UWPCompatible.dll&#34\uff1b\u3002\n\u521b\u5efa\u7c7b\u578b\u4e3aOpenSilver\u7684\u65b0Visual Studio\u9879\u76ee\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5https://opensilver.net/download.aspx\u4e0a\u63d0\u4f9b\u7684\u6700\u65b0\u7248\u672c\uff0c\u5b83\u4f1a\u5c06\u65b0\u7684\u9879\u76ee\u6a21\u677f\u6dfb\u52a0\u5230Visual Studio2019\u7684\u201c\u65b0\u5efa\u9879\u76ee\u201d\u5bf9\u8bdd\u6846\u4e2d\u3002\n\u4eceOpenSilver\u6e90\u4ee3\u7801\u7684&#34\uff1bbin/OpenSilver/SL/&#34\uff1b\u6587\u4ef6\u5939\u4e2d\u590d\u52363\u4e2a\u6587\u4ef6&#34\uff1bOpenSilver.dll&#34\uff1b\u3001&#34\uff1bOpenSilver.pdb&#34\uff1b\u548c&#34\uff1bOpenSilver.xml&#34\uff1b\u3002\u6b64\u5b58\u50a8\u5e93\u4e2d\u7684\u6e90\u4ee3\u7801)\u653e\u5165\u6587\u4ef6\u5939&#34\uff1bC\uff1a\\Users\\YOUR_USERNAME.nuget\\packages\\opensilver\\PACKAGE_VERSION\\lib\\netstandard2.0&#34\uff1b(\u8bf7\u66ff\u6362\u8def\u5f84\u4e2d\u7684&#34\uff1bYOUR_USERNAME&#34\uff1b\u548c&#34\uff1bPACKAGE_VERSION&#34\uff1b)\uff0c\u8986\u76d6\u73b0\u6709\u6587\u4ef6\u3002\ntl\uff1bdr\uff1a\u8fd0\u884c&#34\uff1brestore-Packages-cshtml5.bat&#34\uff1b\uff0c\u7136\u540e\u6253\u5f00\u540d\u4e3a&#34\uff1bCSHTML5.sln&#34\uff1b\u7684\u89e3\u51b3\u65b9\u6848\u4ee5\u7f16\u8bd1CSHTML5\u8fd0\u884c\u65f6\u3002\n\u5728\u672c\u5730\u514b\u9686\u6b64\u8d44\u6599\u6863\u6848\u5e93\uff0c\u6216\u5c06\u5176\u4e0b\u8f7d\u4e3aZIP\u5b58\u6863\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\n\u4f7f\u7528Visual Studio 2017\u6216\u66f4\u9ad8\u7248\u672c\u6253\u5f00\u89e3\u51b3\u65b9\u6848\u6587\u4ef6&#34\uff1bCSHTML5.sln&#34\uff1b(\u4f4d\u4e8e&#34\uff1bsrc&#34\uff1b\u6587\u4ef6\u5939\u4e2d\u3002\n\u6839\u636e\u60a8\u662f\u8981\u4f7f\u7528&#34\uff1bCSHTML5&#34\uff1bNuGet\u5305(\u5efa\u8bae\u7528\u4e8e\u521b\u5efa\u65b0\u5e94\u7528)\u8fd8\u662f&#34\uff1bCSHTML5.Migration&#34\uff1b\u5305(\u5efa\u8bae\u7528\u4e8e\u8fc1\u79fb\u73b0\u6709Silverlight\u6216WPF\u5e94\u7528\u7a0b\u5e8f)\uff0c\u6784\u5efa&#34\uff1b\u8c03\u8bd5\u914d\u7f6e\u6216&#34\uff1b\u8fc1\u79fb\u914d\u7f6e\u3002\u8fd9\u5c06\u5728&#34\uff1bbin/Debug/&34\uff1b\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u7a0b\u5e8f\u96c6&#34\uff1bCSHTML5.dll&#34\uff1b\uff0c\u6216\u5728&#34\uff1bbin/Migration/&#34\uff1b\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u7a0b\u5e8f\u96c6&#34\uff1bCSHTML5.Migration.dll&#34\uff1b\u3002\n\u521b\u5efa\u7c7b\u578b\u4e3aCSHTML5\u7248\u672c2.x\u7684\u65b0Visual Studio\u9879\u76ee\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5http://forums.cshtml5.com/viewforum.php?f=6\u4e0a\u63d0\u4f9b\u7684VSIX(\u67e5\u627e\u6700\u65b0\u7248\u672c2.x)\uff0c\u5b83\u4f1a\u5c06\u65b0\u7684\u9879\u76ee\u6a21\u677f\u6dfb\u52a0\u5230Visual Studio\u7684New Project\u5bf9\u8bdd\u6846\u4e2d\u3002\n\u4eceCSHTML5\u6e90\u4ee3\u7801\u7684&#34\uff1bbin/Debug/&34\uff1b\u6587\u4ef6\u5939\u4e2d\u590d\u52363\u4e2a\u6587\u4ef6&#34\uff1bCSHTML5.dll&#34\uff1b\u3001&#34\uff1bCSHTML5.pdb&#34\uff1b\u548c&#34\uff1bCSHTML5.xml&#34\uff1b\u3002\u6b64\u5b58\u50a8\u5e93\u4e2d\u7684\u6e90\u4ee3\u7801)\u653e\u5230\u60a8\u5728\u6b65\u9aa41\u4e2d\u521b\u5efa\u7684\u9879\u76ee\u7684\u6587\u4ef6\u5939&#34\uff1bPackages/CSHTML5(.)/lib/net40/&#34\uff1b\u4e2d\uff0c\u8986\u76d6\u73b0\u6709\u6587\u4ef6", "note_en": "GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n   This repository contains the source of both OpenSilver and CSHTML5. More information is available at:  www.opensilver.net and  www.cshtml5.com - Read README.md for the instructions on how to build the source code and how to test it.\n             This repository contains the source code of both OpenSilver (which compiles to WebAssembly) and CSHTML5 (which compiles to JavaScript). More information about those two products can be found at:  www.opensilver.net and  www.cshtml5.com\n  TL;DR: Run &#34;restore-packages-opensilver.bat&#34; and then open the solution named &#34;OpenSilver.sln&#34; to compile the OpenSilver runtime.\n  Clone this repository locally or download it as a ZIP archive and extract it on your machine\n  Open the solution file &#34;OpenSilver.sln&#34; (located in the &#34;src&#34; folder) with Visual Studio 2019 or newer\n Build either the &#34;SL&#34; configuration or the &#34;UWP&#34; configuration, depending on whether you want to use the &#34;OpenSilver&#34; NuGet package (recommended) or the &#34;OpenSilver.UWPCompatible&#34; package. This will generate the assembly &#34;OpenSilver.dll&#34; in the &#34;bin/OpenSilver/SL/&#34; folder, or the assembly &#34;OpenSilver.UWPCompatible.dll&#34; in the &#34;bin/OpenSilver/UWP/&#34; folder.\n  Create a new Visual Studio project of type OpenSilver. To do so, you can install the latest VSIX available at  https://opensilver.net/download.aspx , which will add new project templates to the&#34;New Project&#34; dialog of Visual Studio 2019.\n  Copy the 3 files &#34;OpenSilver.dll&#34;, &#34;OpenSilver.pdb&#34;, and &#34;OpenSilver.xml&#34; from the &#34;bin/OpenSilver/SL/&#34; folder of the OpenSilver source code (ie. the source code in this repository) into the folder &#34;C:\\Users\\YOUR_USERNAME.nuget\\packages\\opensilver\\PACKAGE_VERSION\\lib\\netstandard2.0&#34; (please replace &#34;YOUR_USERNAME&#34; and &#34;PACKAGE_VERSION&#34; in the path), overwriting the existing files\n  TL;DR: Run &#34;restore-packages-cshtml5.bat&#34; and then open the solution named &#34;CSHTML5.sln&#34; to compile the CSHTML5 runtime.\n  Clone this repository locally or download it as a ZIP archive and extract it on your machine\n  Open the solution file &#34;CSHTML5.sln&#34; (located in the &#34;src&#34; folder) with Visual Studio 2017 or newer\n Build either the &#34;Debug&#34; configuration or the &#34;Migration&#34; configuration, depending on whether you want to use the &#34;CSHTML5&#34; NuGet package (recommended for creating new apps) or the &#34;CSHTML5.Migration&#34; package (recommended for migrating existing Silverlight or WPF applications). This will generate the assembly &#34;CSHTML5.dll&#34; in the &#34;bin/Debug/&#34; folder, or the assembly &#34;CSHTML5.Migration.dll&#34; in the &#34;bin/Migration/&#34; folder.\n   Create a new Visual Studio project of type CSHTML5 version 2.x. To do so, you can install the VSIX available at  http://forums.cshtml5.com/viewforum.php?f=6 (look for the latest version 2.x), which will add new project templates to the Visual Studio &#34;New Project&#34; dialog.\n  Copy the 3 files &#34;CSHTML5.dll&#34;, &#34;CSHTML5.pdb&#34;, and &#34;CSHTML5.xml&#34; from the &#34;bin/Debug/&#34; folder of the CSHTML5 source code (ie. the source code in this repository) into the folder &#34;packages/CSHTML5(...)/lib/net40/&#34; of the project that you created at step 1, overwriting the existing files", "posttime": "2020-05-28 10:57:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,silverlight,modern,opensilver", "title": "OpenSilver\u662fSilverlight\u7684\u73b0\u4ee3\u3001\u514d\u63d2\u4ef6\u3001\u5f00\u6e90\u7684\u91cd\u65b0\u5b9e\u73b0", "title_en": "OpenSilver is a modern, plugin-free, open-source reimplementation of Silverlight", "transed": 1, "url": "https://github.com/OpenSilver/OpenSilver", "via": "", "real_tags": ["\u5f00\u6e90", "modern"]}, {"category": "", "categoryclass": "", "imagename": "feea307bbd5bfcfa856f8fb5a16cd001.jpg", "infoid": 1004023, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u4ea8\u5229\u00b7\u5361\u6587\u8fea\u4ec0\u7528\u4e00\u5bf9\u60ac\u6302\u5728\u94c1\u4e1d\u4e0a\u7684\u94c5\u7403\u6d4b\u91cf\u5f15\u529b\u5e38\u6570\u4ee5\u6765\uff0c\u5df2\u7ecf\u6709120\u5e74\u4e86\u3002\u91cd\u529b\u7684\u57fa\u672c\u6027\u8d28\u662f..\u3002", "note_en": "It\u2019s been 120 years since Henry Cavendish measured the gravitational constant with a pair of lead balls suspended by a wire. The fundamental nature of gravit...", "posttime": "2020-05-28 10:57:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cd\u529b,require,\u57fa\u672c", "title": "\u91cd\u529b\u9700\u8981\u989d\u5916\u7684\u7ef4\u5ea6\u5417\uff1f", "title_en": "Does gravity require extra dimensions?", "transed": 1, "url": "https://youtu.be/z91oGI5aP0A", "via": "", "real_tags": ["\u91cd\u529b", "require", "\u57fa\u672c"]}, {"category": "", "categoryclass": "", "imagename": "3c7849d7452c90b8aaf223885c544fe9.jpg", "infoid": 1004022, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TLDR-\u5c06\u73b0\u6709\u7684Express.js\u5e94\u7528\u7a0b\u5e8f\u8f7b\u677e\u6258\u7ba1\u5230AWS Lambda\u548cAWS HTTP API with Serverless Express\u4e0a\u7684\u5ec9\u4ef7\u3001\u53ef\u81ea\u52a8\u6269\u5c55\u7684\u65e0\u670d\u52a1\u5668\u57fa\u7840\u8bbe\u65bd\u4e0a\u3002\u5b83\u6253\u5305\u4e86\u5927\u91cf\u53ef\u6295\u5165\u751f\u4ea7\u7684\u529f\u80fd\uff0c\u5982\u81ea\u5b9a\u4e49\u57df\u3001SSL\u8bc1\u4e66\u3001\u91d1\u4e1d\u96c0\u90e8\u7f72\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u7684\u8d39\u7528\u7ea6\u4e3a0.000003\u7f8e\u5143\u3002\n\u5982\u679c\u60a8\u53ea\u662f\u60f3\u6258\u7ba1\u4e00\u4e2a\u5e38\u89c1\u7684Express.js Node.js\u5e94\u7528\u7a0b\u5e8f\uff0c\u8ba9\u5b83\u81ea\u52a8\u6269\u5c55\u5230\u6570\u5341\u4ebf\u4e2a\u8bf7\u6c42\uff0c\u5e76\u4e14\u53ea\u5728\u4f7f\u7528\u65f6\u624d\u5411\u60a8\u6536\u8d39\uff0c\u6211\u4eec\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e9b\u7279\u522b\u7684\u4e1c\u897f\u2026\u2026\u3002\n\u5ba3\u5e03\u63a8\u51fa\u65e0\u670d\u52a1\u5668Express\uff0c\u8fd9\u662f\u4e00\u6b3e\u65e0\u670d\u52a1\u5668\u6846\u67b6\u4ea7\u54c1\uff0c\u4f7f\u60a8\u80fd\u591f\u5728AWS Lambda\u548c\u65b0\u7684AWS HTTP API\u4e0a\u8f7b\u677e\u6258\u7ba1\u548c\u7ba1\u7406Express.js\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u901f\u5ea6\u6bd4\u6700\u521d\u7684API Gateway\u4ea7\u54c1\u5feb60%\uff0c\u6210\u672c\u4f4e71%\u3002\n\u65e0\u670d\u52a1\u5668Expess\u662f\u4e00\u79cd\u7eaf\u7cb9\u7684Express.js\u4f53\u9a8c\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u60f3\u8981\u4e13\u6ce8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u662f\u57fa\u7840\u8bbe\u65bd\u590d\u6742\u6027\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u662f\u5b8c\u7f8e\u7684\u3002\n\u5b9e\u65f6\u65e5\u5fd7\u8bb0\u5f55-\u4f7f\u7528CLI\u4e2d\u7684\u5b9e\u65f6\u65e5\u5fd7\u548c\u9519\u8bef\u5728\u4e91\u4e0a\u5feb\u901f\u5f00\u53d1\u3002\n\u81ea\u5b9a\u4e49\u57df+SSL-\u4f7f\u7528\u514d\u8d39\u7684AWS ACM SSL\u8bc1\u4e66\u81ea\u52a8\u914d\u7f6e\u81ea\u5b9a\u4e49\u57df\u3002\n\u4ee5\u4e0b\u662f\u5982\u4f55\u5f00\u59cb\u5e76\u4ea4\u4ed8\u57fa\u4e8e\u65e0\u670d\u52a1\u5668Express.js\u7684API\uff0c\u8be5API\u5177\u6709\u81ea\u5b9a\u4e49\u57df\u3001\u514d\u8d39SSL\u8bc1\u4e66\u7b49\u7b49\uff01\u60a8\u8fd8\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684\u65e0\u670d\u52a1\u5668\u5168\u6808\u5e94\u7528\u7a0b\u5e8f\u6837\u677f\uff0c\u5176\u4e2d\u5305\u62ec\u771f\u5b9e\u793a\u4f8b\u4e2d\u7684\u65e0\u670d\u52a1\u5668Express\uff0c\u8be5\u793a\u4f8b\u4ee5\u6570\u636e\u5e93\u3001\u4f7f\u7528React\u7684\u7f51\u7ad9\u7b49\u4e3a\u7279\u8272\u3002\nServerless Express\u662f\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u6846\u67b6\u7ec4\u4ef6(\u5373\u9488\u5bf9\u6d41\u884c\u7684\u65e0\u670d\u52a1\u5668\u7528\u4f8b\u7684\u9ad8\u7ea7\u4f53\u9a8c)\uff0c\u60a8\u9700\u8981\u5b89\u88c5Node.js\u548c\u65e0\u670d\u52a1\u5668\u6846\u67b6CLI\u624d\u80fd\u4f7f\u7528\u5b83\u3002\n\u6700\u540e\uff0c\u65e0\u670d\u52a1\u5668Express\u90e8\u7f72\u5230\u60a8\u81ea\u5df1\u7684Amazon Web Services\u5e10\u6237\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u8bbf\u95ee\u60a8\u62e5\u6709\u7684AWS\u5e10\u6237\u7684\u8bbf\u95ee\u5bc6\u94a5\u3002\u8bf7\u6309\u7167\u672c\u6307\u5357\u8fdb\u884c\u521b\u5efa\u3002\n\u521b\u5efaAWS\u8bbf\u95ee\u5bc6\u94a5\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u6dfb\u52a0\u5230\u60a8\u5b89\u88c5\u7684\u6a21\u677f\u6839\u76ee\u5f55\u4e0b\u7684.env\u6587\u4ef6\u4e2d\uff0c\u6216\u5f15\u7528.env\u6587\u4ef6\u4e2d\u7684AWS\u914d\u7f6e\u6587\u4ef6\u3002\n\u5982\u679c\u60a8\u4e0d\u5305\u542b.env\u6587\u4ef6\uff0c\u65e0\u670d\u52a1\u5668\u6846\u67b6\u5c06\u81ea\u52a8\u5728\u60a8\u8ba1\u7b97\u673a\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u9ed8\u8ba4\u7684AWS\u914d\u7f6e\u6587\u4ef6\u3002\n\u6b64\u5916\uff0c\u65e0\u670d\u52a1\u5668\u6846\u67b6\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u9636\u6bb5\u6982\u5ff5\u3002\u5982\u679c\u60a8\u66f4\u6539\u4e86\u9636\u6bb5\uff0c\u5b83\u5c06\u90e8\u7f72\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u526f\u672c\u3002\n\u66f4\u68d2\u7684\u662f\uff0c\u53ea\u9700\u4f7f\u7528\u4ee5\u4e0b\u7ea6\u5b9a\uff0c\u60a8\u5c31\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u9636\u6bb5\u4f7f\u7528\u4e0d\u540c\u7684.env\u6587\u4ef6\uff1a\n\u6700\u540e\u4e00\u4e2a\u7ecf\u5e38\u88ab\u5ffd\u7565\u7684\u6b65\u9aa4\u662f\u901a\u8fc7\u5728\u6a21\u677f\u4e2d\u8fd0\u884cnpmi\u6765\u5b89\u88c5Express.js\u4f9d\u8d56\u9879\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u90e8\u7f72\u4e86\u3002\u6a21\u677f\u5e94\u8be5\u5f00\u7bb1\u5373\u7528\uff0c\u56e0\u6b64\u8fd0\u884c\u6b64\u547d\u4ee4\u4ee5\u542f\u52a8\u5e76\u8fd0\u884c.\u3002\n\u65e0\u670d\u52a1\u5668\u5feb\u9012\u5c06\u8c03\u914d\u6240\u6709\u57fa\u7840\u8bbe\u65bd\uff0c\u5e76\u5728\u51e0\u79d2\u949f\u5185\u5c06\u60a8\u7684\u4ee3\u7801\u4e0a\u4f20\u5230\u5176\u4e2d\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u7b2c\u4e00\u6b21\u90e8\u7f72\u603b\u662f\u6bd4\u5176\u4ed6\u90e8\u7f72\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\u3002\n\u5927\u591a\u6570\u4eba\u559c\u6b22\u5728\u672c\u5730\u8fd0\u884cExpress\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u5b8c\u5168\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u5728\u672c\u5730\u542f\u52a8Express\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7136\u800c\uff0c\u672c\u5730\u6a21\u62df\u4e0e\u5728\u771f\u6b63\u7684\u65e0\u670d\u52a1\u5668\u57fa\u7840\u8bbe\u65bd\u4e0a\u8fd0\u884c\u5b8c\u5168\u4e0d\u540c\uff0c\u5f53\u60a8\u5c06\u5176\u63a8\u5411\u751f\u4ea7\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4ee4\u4eba\u60ca\u8bb6\u7684\u9519\u8bef\u3002\n\u6b64\u5916\uff0c\u60a8\u5f88\u53ef\u80fd\u6700\u7ec8\u4f1a\u901a\u8fc7Express.js API\u4f7f\u7528\u5176\u4ed6\u4e91\u8d44\u6e90\uff0c\u5e76\u4e14\u60a8\u5e0c\u671b\u786e\u4fdd\u4e00\u5207\u90fd\u80fd\u5f88\u597d\u5730\u534f\u540c\u5de5\u4f5c\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u8877\u5fc3\u5efa\u8bae\u60a8\u5728\u771f\u5b9e\u7684\u4e91\u73af\u5883(AWS Lambda)\u4e0a\u8fdb\u884c\u5f00\u53d1-\u65e0\u670d\u52a1\u5668Express\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u5916\u89c2\u548c\u611f\u89c9\u4e0a\u7684\u672c\u5730\u5316\u4f53\u9a8c\u6765\u5e2e\u52a9\u60a8\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u65e0\u670d\u52a1\u5668Express\u53ef\u5b9e\u73b0\u5feb\u901f\u90e8\u7f72\uff0c\u5e76\u53ef\u4ece\u60a8\u7684\u5b9e\u65f6AWS Lambda\u8fdb\u884c\u5b9e\u65f6\u65e5\u5fd7\u8bb0\u5f55\u3002\u8981\u5f00\u59cb\uff0c\u53ea\u9700\u8fd0\u884c\uff1a\n\u73b0\u5728\uff0c\u60a8\u6bcf\u6b21\u4fdd\u5b58\u65f6\uff0c\u60a8\u7684\u65e0\u670d\u52a1\u5668Express\u90fd\u4f1a\u5c06\u60a8\u7684\u66f4\u6539\u5feb\u901f\u63a8\u9001\u5230\u4e91\u4e2d\u3002\u6b64\u5916\uff0c\u5982\u679c\u6240\u6709API\u8bf7\u6c42\u3001\u65e5\u5fd7\u8bed\u53e5\u548c\u9519\u8bef\u90fd\u5c06\u6d41\u5165\u60a8\u7684\u7ec8\u7aef\u3002\u5e94\u8be5\u5982\u4e0b\u6240\u793a\uff1a\n\u65e0\u670d\u52a1\u5668\u5feb\u9012\u53ef\u80fd\u5f88\u7b80\u5355\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4e0d\u5f3a\u5927\u6216\u4e0d\u80fd\u81ea\u5b9a\u4e49\u3002\u5b83\u7684\u7279\u70b9\u662f\u6700\u597d\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f46\u5f53\u60a8\u51c6\u5907\u597d\u63a5\u53d7\u66f4\u591a\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u65f6\uff0c\u5c31\u4f1a\u6709\u5927\u91cf\u7684\u53ef\u80fd\u6027\u3002\n\u672c\u6559\u7a0b\u662f\u4f7f\u7528Serverless Express\u7248\u672c1.0.8\u7f16\u5199\u7684\uff0c\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u8be5\u7248\u672c\u652f\u6301\u4ee5\u4e0b\u6240\u6709\u914d\u7f6e\u9009\u9879\u3002\nexpress@1.0.8#(\u5fc5\u586b)\u7ec4\u4ef6\u7684\u540d\u79f0\u3002\u90a3\u6837\u7684\u8bdd\uff0c\u90a3\u662f\u5feb\u9012\u7684\u3002Express-API#(\u5fc5\u9700)Express\u7ec4\u4ef6\u5b9e\u4f8b\u7684\u540d\u79f0\u3002\u5f00\u53d1\u4eba\u5458#(\u53ef\u9009)\u65e0\u670d\u52a1\u5668\u4eea\u8868\u677f\u9636\u6bb5\u3002\u9ed8\u8ba4\u503c\u4e3adev\u3002./#(\u53ef\u9009)\u6e90\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\u9ed8\u8ba4\u662fhello world\u5e94\u7528\u7a0b\u5e8f\u3002512#(\u53ef\u9009)\u03bb\u5185\u5b58\u5927\u5c0f\u300210#(\u53ef\u9009)\u03bb\u8d85\u65f6\u3002My Express App#(\u53ef\u9009)lambda&amp\uff1bAPI\u7f51\u5173\u63cf\u8ff0\u3002#(\u53ef\u9009)env\u53d8\u91cf\u3002EXPRESS\uff1a*&##\u6b64EXPRESS\u7279\u5b9a\u73af\u5883\u53d8\u91cf\u5c06\u6253\u5370EXPRESS\u8c03\u8bd5\u65e5\u5fd7\u3002MY-CUSTOM-ROLE-NAME#(\u53ef\u9009)\u7528\u4e8e\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6743\u9650\u7684\u81ea\u5b9a\u4e49AWS IAM\u89d2\u8272\u540d\u79f0\u30020.2#(\u53ef\u9009)\u8981\u5e94\u7528\u4e8e\u6b64\u90e8\u7f72\u7684\u6d41\u91cf\u767e\u5206\u6bd4\u3002#(\u53ef\u9009)\u8981\u9644\u52a0\u5230lambda\u51fd\u6570\u7684lambda\u5c42Arn\u5217\u8868\u3002-arn\uff1aaws\uff1afirst\uff1alayer-arn\uff1aaws\uff1aSecond\uff1alayer api.serverless.com#(\u53ef\u9009)\u5982\u679c\u57df\u540d\u662f\u901a\u8fc7AWS Route53\u5728\u60a8\u8981\u90e8\u7f72\u5230\u7684\u5e10\u6237\u4e0a\u6ce8\u518c\u7684\uff0c\u5b83\u5c06\u81ea\u52a8\u4f7f\u7528\u60a8\u7684Express\u5e94\u7528\u7a0b\u5e8f\u7684API\u7f51\u5173\u4ee5\u53ca\u514d\u8d39\u7684AWS ACM SSL\u8bc1\u4e66\u8fdb\u884c\u8bbe\u7f6e\u3002\u8981\u90e8\u7f72\u5230\u7684\u7f8e\u56fd-\u4e1c\u90e8-2#(\u53ef\u9009)AWS\u533a\u57df\u3002\u9ed8\u8ba4\u503c\u4e3aUS-EAST-1\u3002\n\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u5728AWS Route53\u4e0a\u8f7b\u677e\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u548cSSL\u8bc1\u4e66\u3002\u60a8\u8fd8\u53ef\u4ee5\u6309\u7167\u4e0b\u4e00\u8282\u6dfb\u52a0\u5728AWS Route53\u5916\u90e8\u6ce8\u518c\u7684\u81ea\u5b9a\u4e49\u57df\u3002\n\u8981\u8bbe\u7f6e\u5728AWS Route53\u4e0a\u8d2d\u4e70\u7684\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u57df\u540d\u5904\u4e8e\u5df2\u6ce8\u518c\u72b6\u6001\uff0c\u5e76\u4e14\u4f4d\u4e8e\u8fd0\u884cExpress.js\u5e94\u7528\u7a0b\u5e8f\u7684\u540c\u4e00AWS\u8d26\u6237\u4e2d\u3002\n\u4e00\u65e6\u6b64\u57df\u7684\u72b6\u6001\u4ece&#34\uff1b\u6302\u8d77&#34\uff1b\u53d8\u4e3a&#34\uff1b\u5df2\u6ce8\u518c&#34\uff1b\uff0c\u53ea\u9700\u5c06\u4ee5\u4e0b\u914d\u7f6e\u6dfb\u52a0\u5230\u60a8\u7684serverless.yml.\u3002\n\u7136\u540e\uff0cServerless Express\u4f1a\u5c06\u60a8\u7684\u81ea\u5b9a\u4e49\u57df\u6dfb\u52a0\u5230\u60a8\u7684API\u4e2d\uff0c\u5e76\u81ea\u52a8\u8bbe\u7f6e\u4e00\u4e2a\u901a\u8fc7\u5b83\u8ba4\u8bc1\u7684SSL\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u53ef\u6295\u5165\u751f\u4ea7\u7684Express.js API\u3002\n\u4e0d\u8981\u5fd8\u8bb0\u5728\u4e0d\u540c\u7684\u9636\u6bb5\u4f7f\u7528.env\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u57df\u3002\n\u5982\u679c\u60a8\u7684\u57df\u4e0d\u5728AWS Route53\u4e0a\uff0c\u5219\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u8be5\u7ec4\u4ef6\u65e0\u6743\u8bbf\u95ee\u60a8\u7684\u6ce8\u518c\u5546\u3002\u4ee5\u4e0b\u662f\u6d89\u53ca\u7684\u4e00\u822c\u6b65\u9aa4\uff1a\n\u4e3a\u60a8\u7684\u57df\u521b\u5efaAWS ACM\u8bc1\u4e66\u3002\u786e\u4fdd\u5c06&#34\uff1bAdditional Names&#34\uff1b\u5b57\u6bb5\u4e5f\u8bbe\u7f6e\u4e3a*.youdomain.com\uff0c\u4ee5\u5305\u62ec\u6240\u6709\u5b50\u57df\u3002\n\u521b\u5efa\u8bc1\u4e66\u540e\uff0c\u5b83\u5e94\u8be5\u5904\u4e8ePENDING_VALIDATION\u72b6\u6001\u3002\u73b0\u5728\u60a8\u9700\u8981\u9a8c\u8bc1\u57df\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u9075\u5faaDNS\u6b65\u9aa4\uff0c\u901a\u8fc7\u60a8\u7684\u6ce8\u518c\u5546\u63a7\u5236\u9762\u677f\u5c06\u60a8\u5728AWS\u63a7\u5236\u53f0\u4e0a\u770b\u5230\u7684\u9a8c\u8bc1CNAME\u8bb0\u5f55\u6dfb\u52a0\u5230\u60a8\u7684\u57df\u4e2d\u3002\n\u6dfb\u52a0\u9a8c\u8bc1\u8bb0\u5f55\u540e\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u6700\u7ec8\u8bc1\u4e66\u7684\u72b6\u6001\u5e94\u8be5\u66f4\u6539\u4e3a\u201c\u5df2\u9881\u53d1\u201d\u3002\u901a\u5e38\u9700\u89815\u5206\u949f\u5de6\u53f3\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5c06\u60a8\u7684\u57df\u6dfb\u52a0\u5230serverless.yml\u6587\u4ef6\u5e76\u8fdb\u884c\u90e8\u7f72\u3002\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5c06\u60a8\u7684\u57df\u6dfb\u52a0\u5230API\u7f51\u5173\u3002\n\u8bf7\u6ce8\u610f\u4f5c\u4e3a\u8f93\u51fa\u8fd4\u56de\u7684\u533a\u57dfURL\u3002\u590d\u5236\u6b64URL\uff0c\u8fd4\u56de\u7ed9\u60a8\u7684\u6ce8\u518c\u5546\uff0c\u5e76\u6dfb\u52a0\u53e6\u4e00\u4e2aCNAME\u8bb0\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u60a8\u7684\u57df\u540d\u6216\u5b50\u57df\u540d\u4ee5\u53ca\u6b64\u533a\u57dfurl\u7684\u503c\u3002\u8fd9\u53ef\u786e\u4fdd\u60a8\u7684\u57df\u6307\u5411\u8be5CloudFront URL\u3002\n\u5927\u7ea620\u5206\u949f\u540e\uff0c\u60a8\u7684SSL\u8bc1\u4e66\u548c\u57df\u5e94\u8be5\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u5e76\u6307\u5411\u60a8\u7684URL\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c\u60a8\u66f4\u6539serverless.yml\u4e2d\u7684\u540d\u79f0\u3001\u9636\u6bb5\u3001\u5e94\u7528\u7a0b\u5e8f\u6216\u7ec4\u7ec7\u5c5e\u6027\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4f7f\u7528\u65b0\u7684CloudFront url\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u5b9e\u4f8b\u3002\u8fd9\u5141\u8bb8\u60a8\u4e3a\u6bcf\u4e2a\u9636\u6bb5\u6216\u5b9e\u4f8b\u8bbe\u7f6e\u4e0d\u540c\u7684\u57df\u3002\n\u901a\u8fc7\u51cf\u5c11\u4ee3\u7801\u5927\u5c0f\uff0c\u60a8\u7684Express\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u4f1a\u5728AWS Lambda\u73af\u5883\u4e2d\u6267\u884c\u5f97\u66f4\u597d\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u5feb\u7684API\u3002\u51cf\u5c11\u4ee3\u7801\u5927\u5c0f\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u5176\u4e0ewebpack\u3001Parcel\u6216\u5176\u4ed6\u516c\u53f8\u6346\u7ed1\u5728\u4e00\u8d77\u3002\n\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539src\u8f93\u5165\u4ee5\u5728\u90e8\u7f72\u4e4b\u524d\u8fd0\u884c\u6302\u94a9\u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5728\u89c4\u6a21\u4e0a\uff0c\u5f53\u60a8\u60f3\u8981\u5c06\u66f4\u6539\u63a8\u9001\u7ed9\u4e00\u5c0f\u90e8\u5206\u7528\u6237\u65f6\uff0cServerless Express\u63d0\u4f9b\u4e86\u8f7b\u677e\u7684\u91d1\u4e1d\u96c0\u90e8\u7f72\uff01\n\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u63a8\u51fa\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u4e2a\u7248\u672c(\u5305\u542b\u60a8\u8ba4\u4e3a\u6709\u98ce\u9669\u7684\u4ee3\u7801\u66f4\u6539)\uff0c\u8be5\u7248\u672c\u53ea\u670d\u52a1\u4e8e\u60a8\u6307\u5b9a\u7684\u4e00\u5b9a\u767e\u5206\u6bd4\u7684\u6d41\u91cf(0-99%)\u3002\u8fd9\u5141\u8bb8\u60a8\u4ee5\u5f88\u5c0f\u7684\u98ce\u9669\u6d4b\u8bd5\u8f83\u5927\u7684\u66f4\u6539\u3002\n\u8fd9\u544a\u8bc9Serverless Express\u4e3a50%\u7684API\u8bf7\u6c42\u63d0\u4f9b\u65b0\u7684(\u53ef\u80fd\u6709\u98ce\u9669\u7684)\u4ee3\u7801\uff0c\u4e3a\u5176\u4ed650%\u7684\u8bf7\u6c42\u63d0\u4f9b\u65e7\u7684(\u7a33\u5b9a\u7684)\u4ee3\u7801\u3002\n\u8fd0\u884c\u65e0\u670d\u52a1\u5668\u90e8\u7f72\u3002\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u65b0\u7684\u5b9e\u9a8c\u4ee3\u7801\u5c06\u968f\u673a\u5904\u7406\u60a850%\u7684\u8bf7\u6c42\u3002\n\u5982\u679c\u4e8b\u60c5\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u5c06\u60a8\u7684\u4ee3\u7801\u6062\u590d\u4e3a\u65e7\u4ee3\u7801\uff0c\u5220\u9664\u6d41\u91cf\u914d\u7f6e\u9009\u9879\uff0c\u7136\u540e\u8fdb\u884c\u90e8\u7f72\u3002\n\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8bf7\u4fdd\u7559\u65b0\u4ee3\u7801\uff0c\u5220\u9664\u6d41\u91cf\u914d\u7f6e\u9009\u9879\uff0c\u7136\u540e\u8fdb\u884c\u90e8\u7f72\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u5c3d\u53ef\u80fd\u597d\u7684\u65e0\u670d\u52a1\u5668Express.js\u4f53\u9a8c\u3002\u6211\u4eec\u5728\u65e0\u670d\u52a1\u5668Express\u4e2d\u79ef\u7d2f\u4e86\u591a\u5e74\u7684\u65e0\u670d\u52a1\u5668\u7ecf\u9a8c\uff0c\u56e0\u6b64\u60a8\u548c\u60a8\u7684\u56e2\u961f\u4e0d\u5fc5\u914d\u7f6e\u3001\u7ba1\u7406\u548c\u81ea\u52a8\u5316\u5e95\u5c42\u57fa\u7840\u67b6\u6784\uff0c\u800c\u4e14\u6211\u4eec\u51e0\u4e4e\u6ca1\u6709\u6d89\u53ca\u5230\u65e0\u670d\u52a1\u5668Express\u63d0\u4f9b\u7684\u5f3a\u5927\u529f\u80fd\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u60a8\u5e94\u8be5\u4e13\u6ce8\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u5c31\u662f\u65e0\u670d\u52a1\u5668\u7684\u65b9\u5f0f\uff01\nServerless Express-\u8fd9\u662f\u65e0\u670d\u52a1\u5668Express\u7684Repo\uff0c\u5b83\u5305\u542b\u8bb8\u591a\u9644\u52a0\u6587\u6863\u3002\n\u65e0\u670d\u52a1\u5668\u7ec4\u4ef6--\u60a8\u5f88\u53ef\u80fd\u5e0c\u671b\u5728\u60a8\u7684Express.js\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5305\u542b\u6570\u636e\u5e93\u3001\u81ea\u5b9a\u4e49\u6743\u9650\u89d2\u8272\u3001\u7f51\u7ad9\u7b49\u3002\u65e0\u670d\u52a1\u5668\u57fa\u7840\u8bbe\u65bd\u7684\u7ec4\u6210\u662f\u7ec4\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u56e0\u6b64\u8bf7\u67e5\u770b\u60a8\u53ef\u4ee5\u901a\u8fc7\u7ec4\u4ef6\u6587\u6863\u6267\u884c\u7684\u6240\u6709\u5de7\u5999\u64cd\u4f5c\u3002\n\u65e0\u670d\u52a1\u5668\u5168\u6808\u5e94\u7528--\u8fd9\u91cc\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5168\u6808\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u65e0\u670d\u52a1\u5668Express\uff0c\u8be5\u5168\u6808\u5e94\u7528\u5177\u6709\u6570\u636e\u5e93\u3001\u7f51\u7ad9\u3001\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u7b49\u529f\u80fd\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\n\u5965\u65af\u6c40\u00b7\u67ef\u6797\u65af(Austen Collins)\u662f\u65e0\u670d\u52a1\u5668\u516c\u53f8(Serverless\uff0cInc.)\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u3002\u4ee5\u53ca\u65e0\u670d\u52a1\u5668\u6846\u67b6\u7684\u521b\u5efa\u8005\u3002", "note_en": "TLDR - Take existing Express.js apps and host them easily onto cheap, auto-scaling, serverless infrastructure on  AWS Lambda and  AWS HTTP API with   Serverless Express. It&#39;s packed loads of production-ready features, like custom domains, SSL certificates, canary deployments, and costs  ~$0.000003 per request.\n If you simply want to host a common  Express.js Node.js application, have it auto-scale to billions of requests, and charge you only when it&#39;s used, we have something special for you...\n Announcing   Serverless Express, a Serverless Framework offering enabling you to easily host and manage Express.js applications on AWS Lambda and the new AWS HTTP API, which is 60% faster and 71% cheaper than their initial API Gateway product.\n Serverless Expess is a pure Express.js experience and  it&#39;s perfect for those that want to focus on apps, not infrastructure complexity.\n  Real-time Logging - Rapidly develop on the cloud w/ real-time logs and errors in the CLI.\n  Custom Domain + SSL - Auto-configure a custom domain w/ a free AWS ACM SSL certificate.\n Here is how to get started and deliver a Serverless Express.js based API with a custom domain, free SSL certificate and much more! You can also check out our   Serverless Fullstack Application boilerplate, which includes Serverless Express in a real-world example that features a database, website using React and more.\n  Serverless Express is a  Serverless Framework Component (i.e premium experiences for popular serverless use-cases) and you&#39;ll need to install Node.js and the Serverless Framework CLI to use it.\n      Lastly, Serverless Express deploys onto your own Amazon Web Services account, so you&#39;ll need Access Keys to an AWS account you own.  Follow this guide to create those.\n After you have created AWS Access Keys you can add them directly to an  .env file, or reference an AWS Profile in a  .env file, within the root of the template you installed.\n    If you don&#39;t include a  .env file, the Serverless Framework will automatically look for a  default AWS Profile in the root folder of your machine.\n Also, Serverless Framework has a built-in  stages concept. If you change the  stage it will deploy a totally separate copy of your serverless application.\n  Even better, you can use different  .env files for each  stage by simply using this convention:\n  One last\u2014often overlooked\u2014step is to install the Express.js dependency, by running  npm i in the template.\n  Now, you are ready to deploy. The template should work out-of-the-box, so run this command to get up and running...\n  Serverless Express will provision all of the infrastructure and upload your code to it, in a matter of seconds. Though, the first deployment always takes longer than the rest.\n    Most like to run their Express app locally, and you can absolutely boot up your Express app locally, as you always would.\n However, local emulations are never the same as running it on real serverless infrastructure, resulting in surprising bugs when you push to production.\n Further, you will most likely end up using other cloud resources with your Express.js API, and you want to be sure everything works together well.\n So we  wholeheartedly recommend you develop on the real cloud environment (AWS Lambda)\u2014and Serverless Express comes with some powerful features to help you do that, via an experience that looks and feels local.\n Serverless Express features fast deployments and real-time logging from your live AWS Lambda. To get started, simply run:\n  Now, every time you save, your Serverless Express will quickly push your changes to the cloud. Further, if all API requests, log statements and errors will stream into your terminal. It should look like this:\n   Serverless Express may be easy, but that does not mean it isn&#39;t powerful or customizable. It features the best possible defaults, but when you are ready for more, there is a ton of possibility.\n This tutorial was written with Serverless Express version 1.0.8, which at the time of writing, supports all of the following configuration options.\n  express@1.0.8  # (required) name of the component. In that case, it&#39;s express.   express-api  # (required) name of your express component instance.   dev  # (optional) serverless dashboard stage. default is dev.     ./  # (optional) path to the source folder. default is a hello world app.    512  # (optional) lambda memory size.    10  # (optional) lambda timeout.    My  Express  App  # (optional) lambda &amp; api gateway description.    # (optional) env vars.    &#39;express:*&#39;  # this express specific env var will print express debug logs.    my-custom-role-name  # (optional) custom AWS IAM Role name for setting custom permissions.    0.2  # (optional) traffic percentage to apply to this deployment.    # (optional) list of lambda layer arns to attach to your lambda function.  -  arn:aws:first:layer  -  arn:aws:second:layer    api.serverless.com  # (optional) if the domain was registered via AWS Route53 on the account you are deploying to, it will automatically be set-up with your Express app&#39;s API Gateway, as well as a free AWS ACM SSL Cert.    us-east-2  # (optional) aws region to deploy to. default is us-east-1.\n  Here&#39;s how to easily set up a custom domain and SSL certificate on AWS Route53. You can also follow the next section to add a custom domain registered outside of AWS Route53.\n To set up a custom domain purchased on AWS Route53, make sure you it is in a &#34;registered&#34; status and within the same AWS account your Express.js application is running in.\n Once this domain&#39;s status goes from &#34;pending&#34; to &#34;registered&#34;, simply add the following configuration to your  serverless.yml...\n  Serverless Express will then add your custom domain to your API as well as automatically set-up an SSL certificated with it, so that you can have a production-ready Express.js API.\n Don&#39;t forget to use  .env files for different  stages to use different domains for different environments.\n     If your domain is not on AWS Route53, you will have to set this up manually because the component does not have access to your registrar. Here are the general steps involved:\n Create an AWS ACM certificate for your domain. Make sure you set the &#34;Additional Names&#34; field to  *.yourdomain.com as well to include all subdomains as well.\n After you create the certificate, it should be in a  PENDING_VALIDATION status. Now you will need to validate your domain. We suggest you follow the DNS steps by adding the validation CNAME record you see on the AWS console to your domain via your registrar dashboard.\n After you add the validation record, it might take a while, but eventually the certificate should change status to  ISSUED. Usually it takes around 5 minutes.\n Add your domain to the  serverless.yml file as shown above and deploy. This step is important as it adds your domain to API Gateway.\n Notice the regional url that is returned as an output. Copy this URL, get back to your registrar and add another CNAME record with your domain or subdomain name and a value of this regional url. This ensures that your domain points to that cloudfront URL.\n After around 20 mins, your SSL certificate and domain should all be working and pointing to your URL. Keep in mind that if you change the  name,  stage,  app or  org properties in  serverless.yml, this would result in a completely new instance with a new cloudfront url. This allows you to setup different domains for each stage or instance\n  By reducing your code size, your Express app will actually perform better in the AWS Lambda environment, resulting in a faster API. A great way to reduce your code size is to bundle it with Webpack, Parcel, or others.\n To do this, you can modify the  src input to run a  hook script before deployment, like this:\n   At scale, when you want to push changes out to a small set of users, Serverless Express offers easy Canary Deployments out of the box!\n This enables you to push out a version of your app (containing code changes you deem risky) which is only served to a percentage of traffic that you specificy (0-99%). This allows you to test big changes with little risk.\n    This tells Serverless Express to serve the new (potentially risky) code to 50% of the API requests, and the old (stable) code to the other 50% of requests.\n Run  serverless deploy. After deployment is complete, 50% of your requests will be randomly handled by the new experimental code.\n  If things aren&#39;t working, revert your code to the old code, remove the  traffic configuration option, and deploy.\n If things are working, keep the new code, remove the  traffic configuration option, and deploy.\n  Our goal is to offer the best Serverless Express.js experience possible. We have packed years of serverless experience into Serverless Express so you and your team don&#39;t have to configure, manage and automate the underlying infrastructure, and we&#39;ve barely touched on the tremendous power Serverless Express offers.\n As always, you should focus on your application, not infrastructure. That is the Serverless Way!\n  Serverless Express - This is the repo for Serverless Express and it contains lots of additional documentation.\n Serverless Components - You will most likely want to include a database, custom permissions role, website and more with your Express.js app. Composition of serverless infrastructure is what Components are all about, so check out all of the neat things you can do via the Components Documentation.\n Serverless Fullstack Application - Here is a real-world example of how to use Serverless Express within the context of a fullstack application that features a database, website, authentication, authorization and more. It&#39;s a great starting point.\n  Austen Collins is the founder and CEO of Serverless, Inc. and the creator of the Serverless Framework.", "posttime": "2020-05-28 10:56:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1\u5668,serverless,express", "title": "\u65e0\u670d\u52a1\u5668Express", "title_en": "Serverless Express", "transed": 1, "url": "https://www.serverless.com/blog/serverless-express-apis-aws-lambda-http-api/", "via": "", "real_tags": ["\u670d\u52a1\u5668", "express"]}, {"category": "", "categoryclass": "", "imagename": "05d7b4649c7db7705b7d2bacafe9571d.jpg", "infoid": 1004020, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1898\u5e74\uff0c\u7406\u67e5\u5fb7\u00b7M\u00b7\u5c3c\u514b\u677e(Richard M.Nixon)\u7684\u201c\u4f60\u518d\u4e5f\u6ca1\u6709\u5c3c\u514b\u677e\u53ef\u4ee5\u73a9\u800d\u4e86\u201d\u7684\u6f14\u8bb2\u5728\u6587\u5316\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4f4d\u5fc3\u6000\u4e0d\u6ee1\u7684\u8bc4\u8bba\u5bb6\u3001\u5931\u8d25\u7684\u5c0f\u8bf4\u5bb6\u548c\u4e0d\u8d77\u773c\u7684\u5267\u4f5c\u5bb6\u4e54\u6cbb\u00b7\u4f2f\u7eb3\u5fb7\u00b7\u8096(George Bernard Shaw)\u53d1\u8868\u7684\u6f14\u8bb2\u3002\u5728\u4ed6\u4f5c\u4e3a\u8bc4\u8bba\u5bb6\u5728\u5f53\u65f6\u9ad8\u8038\u7684\u5468\u516d\u8bc4\u8bba\u4e2d\u7684\u6700\u540e\u4e00\u7bc7\u4e13\u680f\u4e2d\uff0c\u90b5\u9038\u592b\u5728\u52aa\u529b\u8ba9\u81ea\u5df1\u7684\u620f\u5267\u5236\u4f5c\u7684\u540c\u65f6\uff0c\u4e5f\u4e3a\u8fd9\u7bc7\u4e13\u680f\u8f9b\u52e4\u5de5\u4f5c\uff0c\u4ed6\u62a8\u51fb\u516c\u4f17\u4e0d\u914d\u62e5\u6709\u4ed6\u3002\u4ed6\u5199\u9053\uff1a\u201c\u6211\u5728\u4e00\u4e2a\u4e0d\u503c\u94b1\u7684\u673a\u6784\u548c\u4e00\u4e2a\u611a\u8822\u7684\u516c\u4f17\u8eab\u4e0a\u6325\u970d\u4e86\u5927\u91cf\u7684\u6280\u80fd\u548c\u52e4\u594b\u7684\u5929\u624d\uff0c\u6211\u662f\u5426\u4f1a\u56e0\u4e3a\u8fd9\u4e9b\u5929\u624d\u800c\u5f97\u5230\u4efb\u4f55\u81ea\u53d1\u7684\u8ba4\u53ef\uff1f\u201d\u201c\u4e00\u70b9\u4e5f\u4e0d\uff0c\u6211\u6709\u4e00\u534a\u7684\u65f6\u95f4\u90fd\u82b1\u5728\u544a\u8bc9\u522b\u4eba\u6211\u662f\u4e2a\u591a\u4e48\u806a\u660e\u7684\u4eba\u4e0a\u4e86\u3002\u5728\u82f1\u56fd\u53ea\u505a\u806a\u660e\u7684\u4e8b\u60c5\u662f\u6ca1\u6709\u7528\u7684\u3002\u201c\u3002\u4ed6\u62b1\u6028\u8bf4\uff1a\u201c\u5728\u5c55\u793a\u4e86\u6700\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u4e13\u4e1a\u80fd\u529b\u4e4b\u540e\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u2026\u2026\u8fd9\u4e5f\u662f\u4e00\u79cd\u803b\u8fb1\u3002", "note_en": "T he cultural equivalent of Richard M. Nixon\u2019s \u201cYou don\u2019t have Nixon to kick around anymore\u201d speech was delivered by a disgruntled forty-one-year-old critic, failed novelist, and undistinguished playwright named George Bernard Shaw in 1898. In his final column as a critic in the then-towering  Saturday Review, for which he toiled even as he struggled to get his own plays produced, Shaw lambasted the public for being unworthy of him. \u201cDo I receive any spontaneous recognition for the prodigies of skill and industry I lavish on an unworthy institution and a stupid public?,\u201d he wrote. \u201cNot a bit of it: half my time is spent in telling people what a clever man I am. It\u2019s no use merely doing clever things in England.\u201d He complained, \u201cIt is humiliating, too, after making the most dazzling displays of professional ability, to have to tell...", "posttime": "2020-05-28 10:11:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u897f\u7c73\u4e9a,puritan,\u5c3c\u514b\u677e", "title": "\u6e05\u6559\u5f92\u6ce2\u897f\u7c73\u4e9a\u4eba", "title_en": "The Puritan Bohemian", "transed": 1, "url": "https://newcriterion.com/issues/2020/6/the-puritan-bohemian", "via": "", "real_tags": ["\u897f\u7c73\u4e9a", "puritan", "\u5c3c\u514b\u677e"]}, {"category": "", "categoryclass": "", "imagename": "cefdd776c6f51d187fd0f150d9d0bdc7.jpg", "infoid": 1004019, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u641c\u7d22\u7ec4\u7ec7\u4eba\u662f\u5a01\u5ec9\u00b7H\u00b7\u6000\u7279(William H.Whyte)\u7684\u4e00\u672c\u7545\u9500\u4e66\uff0c\u6700\u521d\u7531\u897f\u8499\u00b7\u8212\u65af\u7279\u51fa\u7248\u793e(Simon&Amp\uff1bSchuster)\u4e8e1956\u5e74\u51fa\u7248\u3002[1]\u5b83\u88ab\u8ba4\u4e3a\u662f\u6709\u53f2\u4ee5\u6765\u6700\u6709\u5f71\u54cd\u529b\u7684\u7ba1\u7406\u5b66\u4e66\u7c4d\u4e4b\u4e00\u3002[2]\u3002\n\u5728\u53d7\u96c7\u4e8e\u201c\u8d22\u5bcc\u201d\u6742\u5fd7\u671f\u95f4\uff0c\u6000\u7279\u5bf9\u901a\u7528\u7535\u6c14(General Electric)\u548c\u798f\u7279(Ford)\u7b49\u7f8e\u56fd\u5927\u516c\u53f8\u7684\u9996\u5e2d\u6267\u884c\u5b98\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u91c7\u8bbf\u3002[3]\u8fd9\u672c\u4e66\u7684\u4e00\u4e2a\u4e2d\u5fc3\u539f\u5219\u662f\uff0c\u666e\u901a\u7f8e\u56fd\u4eba\u8ba4\u540c\u96c6\u4f53\u4e3b\u4e49\u4f26\u7406\uff0c\u800c\u4e0d\u662f\u666e\u904d\u5b58\u5728\u7684\u7c97\u66b4\u7684\u4e2a\u4eba\u4e3b\u4e49\u89c2\u5ff5\u3002[4]\u63d0\u51fa\u7684\u4e00\u4e2a\u5173\u952e\u70b9\u662f\uff0c\u4eba\u4eec\u5f00\u59cb\u76f8\u4fe1\uff0c\u7ec4\u7ec7\u548c\u56e2\u4f53\u53ef\u4ee5\u6bd4\u4e2a\u4eba\u505a\u51fa\u66f4\u597d\u7684\u51b3\u5b9a\uff0c\u56e0\u6b64\uff0c\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u670d\u52a1\u4e8e\u4e00\u4e2a\u7ec4\u7ec7\u6bd4\u63d0\u9ad8\u4e2a\u4eba\u7684\u521b\u9020\u529b\u66f4\u53ef\u53d6\u3002\u6000\u7279\u8ba4\u4e3a\u8fd9\u662f\u8fdd\u53cd\u4e8b\u5b9e\u7684\uff0c\u5e76\u5217\u4e3e\u4e86\u4e00\u4e9b\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e2a\u4eba\u7684\u5de5\u4f5c\u548c\u521b\u9020\u529b\u5982\u4f55\u80fd\u591f\u4ea7\u751f\u6bd4\u96c6\u4f53\u4e3b\u4e49\u8fc7\u7a0b\u66f4\u597d\u7684\u7ed3\u679c\u3002\u4ed6\u89c2\u5bdf\u5230\uff0c\u8fd9\u79cd\u5236\u5ea6\u5bfc\u81f4\u4e86\u4e0d\u613f\u627f\u62c5\u98ce\u9669\u7684\u9ad8\u7ba1\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u9762\u4e34\u4efb\u4f55\u540e\u679c\uff0c\u53ea\u8981\u4ed6\u4eec\u4e0d\u72af\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u671f\u5f85\u7ec8\u8eab\u5de5\u4f5c\u3002\u4ed6\u8fd8\u8ba4\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u6709\u66f4\u591a\u7684\u81ea\u7531\u3002\n\u6000\u7279\u7684\u4e66\u5f15\u53d1\u4e86\u5bf9\u516c\u53f8\u5185\u90e8\u627f\u8bfa\u548c\u5fe0\u8bda\u6982\u5ff5\u7684\u66f4\u6df1\u5165\u7814\u7a76\u3002[5]\u6000\u7279\u7684\u4e66\u4e0e\u90a3\u4e2a\u65f6\u671f\u7684\u5c0f\u8bf4\u7545\u9500\u4e66\u65af\u9686\u00b7\u5a01\u5c14\u900a(Sloan Wilson)\u7684\u201c\u7a7f\u7070\u8272\u6cd5\u5170\u7ed2\u897f\u88c5\u7684\u4eba\u201d(The Man in the Gray Flannel Suit\uff0c1955)\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u8fd9\u672c\u4e66\u6fc0\u8d77\u4e86\u4eba\u4eec\u7684\u6279\u8bc4\uff0c\u6279\u8bc4\u90a3\u4e9b\u60f3\u8981\u8d62\u5f97\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u7684\u7f8e\u56fd\u4eba\u53c8\u56de\u5230\u4e86\u8868\u9762\u4e0a\u6ca1\u6709\u610f\u4e49\u7684\u751f\u6d3b\u4e2d\u3002\u9a6c\u514b\u601d\u4e3b\u4e49\u7406\u8bba\u5bb6\u76d6\u4f0a\u00b7\u5fb7\u535a\u5fb7\u5728\u201c\u5947\u89c2\u793e\u4f1a\u201d(1967)\u4e2d\u8ba8\u8bba\u4e86\u6000\u7279\u7684\u89c2\u5bdf\u7ed3\u679c\u3002[6][7]\u3002\n^\u73c0\u5c14\u4fee\u65af\u51fa\u7248\u516c\u53f8\u7f16\u8f91(2003)\u3002\u6709\u53f2\u4ee5\u6765\u6700\u597d\u7684\u5546\u4e1a\u4e66\u7c4d\uff1a100\u672c\u6700\u6709\u5f71\u54cd\u529b\u7684\u7ba1\u7406\u4e66\u7c4d\uff0c\u4f60\u6c38\u8fdc\u6ca1\u6709\u65f6\u95f4\u53bb\u8bfb\u3002\u73c0\u5c14\u4fee\u65af\u56fe\u4e66\u96c6\u56e2\uff0cISBN\uff0c\u7535\u8bdd\uff1a978-0-7382-0849-7\u3002\n\u51ef\u6587\u00b7D\u00b7\u5a01\u5ec9\u59c6\u68ee(^Williamson)\u3002(2017\u5e743\u670813\u65e5)\u3002\u4e3a\u4ec0\u4e48\u516c\u53f8\u9886\u5bfc\u4eba\u4f1a\u6210\u4e3a\u8fdb\u6b65\u79ef\u6781\u5206\u5b50\u3002\u201c\u56fd\u5bb6\u8bc4\u8bba\u201d\u3002\n\u5510\u5a1c\u00b7M\u00b7\u5170\u5fb7\u5c14(1987)\u3002\u627f\u8bfa\u4e0e\u7ec4\u7ec7\uff1a\u91cd\u65b0\u5ba1\u89c6\u7ec4\u7ec7\u4eba\u3002\u7ba1\u7406\u5b66\u9662\u8bc4\u8bba", "note_en": "Jump to navigation  Jump to search  The Organization Man is a  bestselling book by  William H. Whyte, originally published by  Simon &amp; Schuster in 1956.  [1] It is considered one of the most influential books on  management ever written.  [2]\n  While employed by   Fortune Magazine, Whyte did extensive interviews with the  CEOs of major American corporations such as  General Electric and  Ford.  [3] A central tenet of the book is that average Americans subscribed to a  collectivist ethic rather than to the prevailing notion of  rugged individualism.  [4] A key point made was that people became convinced that organizations and groups could make better decisions than individuals, and thus serving an organization became logically preferable to advancing one&#39;s individual creativity. Whyte felt this was counterfactual and listed a number of examples of how individual work and creativity can produce better outcomes than collectivist processes. He observed that this system led to  risk-averse executives who faced no consequences and could expect jobs for life as long as they made no egregious missteps. He also thought that everyone should have more freedom.\n Whyte&#39;s book led to deeper examinations of the concept of &#34;commitment&#34; and &#34;loyalty&#34; within corporations.  [5] Whyte&#39;s book matched the fiction best seller of the period,   The Man In The Gray Flannel Suit (1955) by  Sloan Wilson in inspiring criticism that those Americans motivated to win World War II returned to ostensibly less-meaningful lives.  Marxist theorist  Guy Debord discusses Whyte&#39;s observations in   The Society of the Spectacle (1967).  [6]  [7]\n  ^  Editors Of Perseus Publishing (2003).  The best business books ever: the 100 most influential management books you&#39;ll never have time to read. Perseus Books Group,   ISBN\u00a0 978-0-7382-0849-7\n  ^    Williamson, Kevin D. (March 13, 2017).  &#34;Why Corporate Leaders Became Progressive Activists&#34;.  National Review .\n ^  Randall, Donna M. (1987).  Commitment and the Organization: The Organization Man Revisited.  The Academy of Management Review", "posttime": "2020-05-28 10:10:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6709\u6761\u7406,organization,\u7ec4\u7ec7", "title": "\u201c\u6709\u6761\u7406\u7684\u4eba\u201d(1956)", "title_en": "The Organization Man (1956)", "transed": 1, "url": "https://en.wikipedia.org/wiki/The_Organization_Man", "via": "", "real_tags": ["\u6709\u6761\u7406", "\u7ec4\u7ec7"]}, {"category": "", "categoryclass": "", "imagename": "52c4ffc2a544a3da1eae3b45220ce8c4.png", "infoid": 1004018, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u4f60\u5c06\u53c2\u4e0e\u4e00\u7cfb\u5217\u7684\u6311\u6218\uff0c\u65e8\u5728\u589e\u52a0\u4f60\u81ea\u5df1\u7684\u5e78\u798f\u611f\uff0c\u5e76\u5efa\u7acb\u66f4\u6709\u6210\u6548\u7684\u4e60\u60ef\u3002\u4f5c\u4e3a\u8fd9\u4e9b\u4efb\u52a1\u7684\u51c6\u5907\uff0c\u52b3\u91cc\u00b7\u6851\u6258\u65af\u6559\u6388\u63ed\u793a\u4e86\u5bf9\u5e78\u798f\u7684\u8bef\u89e3\uff0c\u5f15\u5bfc\u6211\u4eec\u601d\u8003\u65b9\u5f0f\u7684\u607c\u4eba\u7684\u601d\u7ef4\u7279\u5f81\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6539\u53d8\u7684\u7814\u7a76\u3002\u4f60\u6700\u7ec8\u4f1a\u505a\u597d\u51c6\u5907\uff0c\u6210\u529f\u5730\u5c06\u4e00\u9879\u7279\u5b9a\u7684\u5065\u5eb7\u6d3b\u52a8\u878d\u5165\u5230\u4f60\u7684\u751f\u6d3b\u4e2d\u3002\n\u5e78\u798f\u5b66\u7684\u4ea7\u751f\u90e8\u5206\u5f52\u529f\u4e8e\u5927\u536b\u00b7F\u00b7\u65af\u6587\u68ee(David F.Swensen)\u6559\u5b66\u521b\u65b0\u57fa\u91d1\u7684\u6177\u6168\u8d44\u52a9\u3002\n300\u591a\u5e74\u6765\uff0c\u8036\u9c81\u5927\u5b66\u6fc0\u53d1\u4e86\u6fc0\u52b1\u4e16\u754c\u7684\u601d\u60f3\u3002\u603b\u90e8\u8bbe\u5728\u5eb7\u6d85\u72c4\u683c\u5dde\u7ebd\u9ed1\u6587\u7684\u8036\u9c81\u5927\u5b66\u5c06\u4eba\u4eec\u548c\u60f3\u6cd5\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u5728\u5168\u7403\u8303\u56f4\u5185\u4ea7\u751f\u79ef\u6781\u5f71\u54cd\u3002\u8036\u9c81\u5927\u5b66\u662f\u4e00\u6240\u7814\u7a76\u578b\u5927\u5b66\uff0c\u4ee5\u5b66\u751f\u4e3a\u4e2d\u5fc3\uff0c\u9f13\u52b1\u5b66\u4e60\u4f5c\u4e3a\u4e00\u79cd\u57fa\u672c\u7684\u751f\u6d3b\u65b9\u5f0f\uff0c\u662f\u4e00\u4e2a\u8de8\u6587\u5316\u548c\u8de8\u5b66\u79d1\u7684\u8054\u7cfb\u3001\u521b\u9020\u529b\u548c\u521b\u65b0\u7684\u5730\u65b9\u3002\n\u4f60\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u5fc3\u6001\u6765\u6b23\u8d4f\u4f60\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u8fdb\u6b65\uff0c\u5e76\u5728\u8bfe\u7a0b\u7ed3\u675f\u540e\u7ee7\u7eed\u8fdb\u6b65\uff1f\n\u6ce8\u518c\u8bc1\u4e66\u540e\uff0c\u60a8\u5c06\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u89c6\u9891\u3001\u6d4b\u9a8c\u548c\u7f16\u7a0b\u4f5c\u4e1a(\u5982\u679c\u9002\u7528)\u3002\u540c\u884c\u5ba1\u9605\u4f5c\u4e1a\u53ea\u80fd\u5728\u671f\u6b21\u5f00\u59cb\u540e\u63d0\u4ea4\u548c\u5ba1\u9605\u3002\u5982\u679c\u60a8\u9009\u62e9\u5728\u4e0d\u8d2d\u4e70\u7684\u60c5\u51b5\u4e0b\u6d4f\u89c8\u8bfe\u7a0b\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95ee\u67d0\u4e9b\u4f5c\u4e1a\u3002\n\u5f53\u60a8\u8d2d\u4e70\u8bc1\u4e66\u65f6\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u8bfe\u7a0b\u6750\u6599\uff0c\u5305\u62ec\u5df2\u8bc4\u5206\u7684\u4f5c\u4e1a\u3002\u5b8c\u6210\u8bfe\u7a0b\u540e\uff0c\u60a8\u7684\u7535\u5b50\u8bc1\u4e66\u5c06\u6dfb\u52a0\u5230\u60a8\u7684\u6210\u7ee9\u9875\u9762-\u4ece\u90a3\u91cc\uff0c\u60a8\u53ef\u4ee5\u6253\u5370\u60a8\u7684\u8bc1\u4e66\u6216\u5c06\u5176\u6dfb\u52a0\u5230\u60a8\u7684LinkedIn\u4e2a\u4eba\u8d44\u6599\u4e2d\u3002\u5982\u679c\u60a8\u53ea\u60f3\u9605\u8bfb\u548c\u67e5\u770b\u8bfe\u7a0b\u5185\u5bb9\uff0c\u60a8\u53ef\u4ee5\u514d\u8d39\u5ba1\u6838\u8bfe\u7a0b\u3002\n\u60a8\u5c06\u6709\u8d44\u683c\u83b7\u5f97\u5168\u989d\u9000\u6b3e\uff0c\u76f4\u5230\u60a8\u7684\u4ed8\u6b3e\u65e5\u671f\u540e\u4e24\u5468\uff0c\u6216(\u5bf9\u4e8e\u521a\u521a\u5f00\u8bfe\u7684\u8bfe\u7a0b)\u5728\u8bfe\u7a0b\u5f00\u59cb\u540e\u4e24\u5468\u5185\uff0c\u4ee5\u8f83\u665a\u7684\u65f6\u95f4\u4e3a\u51c6\u3002\u4e00\u65e6\u60a8\u83b7\u5f97\u4e86\u8bfe\u7a0b\u8bc1\u4e66\uff0c\u5373\u4f7f\u60a8\u5728\u4e24\u5468\u7684\u9000\u6b3e\u671f\u5185\u5b8c\u6210\u4e86\u8bfe\u7a0b\uff0c\u60a8\u4e5f\u4e0d\u80fd\u83b7\u5f97\u9000\u6b3e\u3002\u8bf7\u770b\u6211\u4eec\u7684\u5168\u989d\u9000\u6b3e\u653f\u7b56\u3002\n\u662f\u7684\uff0cCoursera\u4e3a\u4ed8\u4e0d\u8d77\u5b66\u8d39\u7684\u5b66\u5458\u63d0\u4f9b\u7ecf\u6d4e\u8d44\u52a9\u3002\u70b9\u51fb\u5de6\u4fa7\u201c\u6ce8\u518c\u201d\u6309\u94ae\u4e0b\u65b9\u7684\u201c\u8d22\u653f\u63f4\u52a9\u201d\u94fe\u63a5\u5373\u53ef\u7533\u8bf7\u3002\u7cfb\u7edf\u5c06\u63d0\u793a\u60a8\u5b8c\u6210\u7533\u8bf7\uff0c\u5982\u679c\u60a8\u83b7\u5f97\u6279\u51c6\uff0c\u5c06\u4f1a\u6536\u5230\u901a\u77e5\u3002\u4e86\u89e3\u66f4\u591a\u3002", "note_en": "In this course you will engage in a series of challenges designed to increase your own happiness and build more productive habits. As preparation for these tasks, Professor Laurie Santos reveals misconceptions about happiness, annoying features of the mind that lead us to think the way we do, and the research that can help us change. You will ultimately be prepared to successfully incorporate a specific wellness activity into your life.\n THE SCIENCE OF WELL BEING WAS PRODUCED IN PART DUE TO THE GENEROUS FUNDING OF THE DAVID F. SWENSEN FUND FOR INNOVATION IN TEACHING.\n For more than 300 years, Yale University has inspired the minds that inspire the world. Based in New Haven, Connecticut, Yale brings people and ideas together for positive impact around the globe. A research university that focuses on students and encourages learning as an essential way of life, Yale is a place for connection, creativity, and innovation among cultures and across disciplines.\n   What mindset can you have to appreciate your progress so far and continue your progress beyond the course?\n   Once you enroll for a Certificate, you\u2019ll have access to all videos, quizzes, and programming assignments (if applicable). Peer review assignments can only be submitted and reviewed once your session has begun. If you choose to explore the course without purchasing, you may not be able to access certain assignments.\n When you purchase a Certificate you get access to all course materials, including graded assignments. Upon completing the course, your electronic Certificate will be added to your Accomplishments page - from there, you can print your Certificate or add it to your LinkedIn profile. If you only want to read and view the course content, you can audit the course for free.\n You will be eligible for a full refund until two weeks after your payment date, or (for courses that have just launched) until two weeks after the first session of the course begins, whichever is later. You cannot receive a refund once you\u2019ve earned a Course Certificate, even if you complete the course within the two-week refund period.  See our full refund policy.\n Yes, Coursera provides financial aid to learners who cannot afford the fee. Apply for it by clicking on the Financial Aid link beneath the &#34;Enroll&#34; button on the left. You\u2019ll be prompted to complete an application and will be notified if you are approved.  Learn more.", "posttime": "2020-05-28 09:55:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u8bfe\u7a0b,science", "title": "\u8036\u9c81\u5927\u5b66\u7684\u5e78\u798f\u5b66\u8bfe\u7a0b\u4eca\u5929\u5f00\u8bfe", "title_en": "Yale's the science of well-being course starts today", "transed": 1, "url": "https://mathvault.ca/coursera-well-being", "via": "", "real_tags": ["\u5927\u5b66", "\u8bfe\u7a0b", "science"]}, {"category": "", "categoryclass": "", "imagename": "412a927ced1919fbd0c8c705a5246f84.jpeg", "infoid": 1004016, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e09\uff0c\u56fd\u4f1a\u901a\u8fc7\u4e86\u4e00\u9879\u6cd5\u6848\uff0c\u65e8\u5728\u521b\u5efa\u5229\u7528\u4eba\u5de5\u667a\u80fd\u3001\u5927\u6570\u636e\u548c\u5176\u4ed6\u6280\u672f\u6765\u89e3\u51b3\u793e\u4f1a\u95ee\u9898\u7684\u8d85\u7ea7\u57ce\u5e02\u3002\n\u8fd9\u9879\u4fee\u8ba2\u56fd\u5bb6\u6218\u7565\u7279\u533a\u6cd5\u7684\u6cd5\u6848\u5728\u53c2\u4f17\u4e24\u9662\u4ee5\u591a\u6570\u7968\u901a\u8fc7\uff0c\u4e3b\u8981\u5f97\u5230\u6267\u653f\u8054\u76df\u7684\u652f\u6301\u3002\n\u4fee\u8ba2\u89c4\u5b9a\u4e86\u52a0\u5feb\u5404\u9886\u57df\u6cd5\u89c4\u53d8\u5316\u7684\u7a0b\u5e8f\uff0c\u4ee5\u4fc3\u8fdb\u6b64\u7c7b\u667a\u6167\u57ce\u5e02\u7684\u521b\u5efa\u3002\n\u653f\u5e9c\u5e0c\u671b\u5229\u7528\u5c16\u7aef\u6280\u672f\u6765\u89e3\u51b3\u4eba\u53e3\u51cf\u5c11\u548c\u793e\u4f1a\u8001\u9f84\u5316\u7b49\u95ee\u9898\u3002\n\u5728\u8fd9\u4e9b\u57ce\u5e02\uff0c\u5c06\u5efa\u7acb\u6570\u636e\u94fe\u63a5\u5e73\u53f0\uff0c\u6536\u96c6\u548c\u7ec4\u7ec7\u884c\u653f\u673a\u6784\u548c\u516c\u53f8\u7684\u5404\u79cd\u6570\u636e\uff0c\u4e3a\u81ea\u52a8\u9a7e\u9a76\u3001\u65e0\u73b0\u91d1\u652f\u4ed8\u3001\u8fdc\u7a0b\u533b\u7597\u7b49\u670d\u52a1\u3002\n\u6839\u636e\u4fee\u8ba2\u540e\u7684\u6cd5\u5f8b\uff0c\u62df\u9009\u51fa\u7684\u5730\u65b9\u653f\u5e9c\u5c06\u4e0e\u4e2d\u592e\u653f\u5e9c\u548c\u79c1\u8425\u516c\u53f8\u5f00\u5c55\u8bba\u575b\uff0c\u5236\u5b9a\u57ce\u5e02\u53d1\u5c55\u89c4\u5212\uff0c\u5e76\u5728\u8d62\u5f97\u5f53\u5730\u5c45\u6c11\u7684\u7406\u89e3\u540e\u5411\u56fd\u5bb6\u63d0\u51fa\u7533\u8bf7\u3002\n\u653f\u5e9c\u5e0c\u671b\u7ecf\u8fc7\u76f8\u5173\u653f\u5e9c\u673a\u6784\u7684\u8ba8\u8bba\uff0c\u5c3d\u5feb\u5b9e\u73b0\u8fd9\u6837\u7684\u57ce\u5e02\u53d1\u5c55\u8ba1\u5212\u3002\n\u4eba\u4eec\u5bf9\u4e2a\u4eba\u4fe1\u606f\u7684\u4f7f\u7528\u611f\u5230\u62c5\u5fe7\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u57ce\u5e02\u5c06\u6536\u96c6\u548c\u4f7f\u7528\u5404\u79cd\u6570\u636e\u3002\n\u53bb\u5e74\uff0c\u653f\u5e9c\u5411\u56fd\u4f1a\u63d0\u4ea4\u4e86\u4e00\u9879\u7c7b\u4f3c\u7684\u6cd5\u6848\u3002\u4f46\u5728\u6267\u653f\u96c6\u56e2\u547c\u5401\u5ba1\u67e5\u8be5\u6cd5\u6848\u540e\uff0c\u5b83\u540e\u6765\u53d6\u6d88\u4e86\u8fd9\u9879\u63aa\u65bd\u3002", "note_en": "The Diet enacted a bill Wednesday to create &#34;super cities&#34; where artificial intelligence, big data and other technologies are utilized to resolve social problems.\n The bill revising the national strategic special zone law passed the House of Councilors by a majority vote with support mainly from the ruling coalition.\n  The revision stipulates procedures to speed up the changing of regulations in various fields to facilitate the creating of such smart cities.\n The government hopes to utilize cutting-edge technologies to address issues such as depopulation and the aging of society.\n In such cities, data-linking platforms to collect and organize various kinds of data from administrative organizations and companies will be established for autonomous driving, cashless payments, telemedicine and other services.\n Under the revised law, local governments to be selected will launch forums with the central government and private companies, draw up city development plans and make applications to the state after winning understanding from local residents.\n The government hopes to realize such city development plans swiftly after discussions at related government agencies.\n There are concerns about the use of personal information because various kinds of data will be gathered and used in such cities.\n Last year, the government submitted a similar bill to the Diet. But it later scrapped the measure following calls for reviewing the bill from the ruling bloc.", "posttime": "2020-05-28 09:40:19", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5927\u6570\u636e,\u65e5\u672c,\u4eba\u5de5\u667a\u80fd,\u6cd5\u6848,enacts", "title": "\u65e5\u672c\u901a\u8fc7\u9ad8\u79d1\u6280\u201c\u8d85\u7ea7\u57ce\u5e02\u201d\u6cd5\u6848\uff0c\u5229\u7528\u4eba\u5de5\u667a\u80fd\u3001\u5927\u6570\u636e\u548c\u5176\u4ed6\u6280\u672f\u89e3\u51b3\u793e\u4f1a\u95ee\u9898", "title_en": "Japan Enacts High-Tech 'Super City' Bill Where AI, Big Data and Other Technologies Are Utilized To Resolve Social Problems", "transed": 1, "url": "https://www.japantimes.co.jp/news/2020/05/27/national/japan-enacts-high-tech-super-city-bill/#.Xs7T9hNKi9s", "via": "", "real_tags": ["\u5927\u6570\u636e", "\u65e5\u672c", "\u4eba\u5de5\u667a\u80fd", "\u6cd5\u6848", "enacts"]}, {"category": "", "categoryclass": "", "imagename": "007b482aa986333fc78089046c59a771.png", "infoid": 1004015, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5854\u6d1b\u592b\u6d1b\uff0c\u6211\u4eec\u51b3\u5fc3\u4e0d\u6210\u4e3a\u5b69\u5b50\u4eec\u8d64\u811a\u8d70\u8def\u7684\u978b\u5320\u3002\u6211\u4eec\u5904\u7406\u81ea\u5df1\u7684AWS\u6210\u672c\u65f6\uff0c\u5c31\u597d\u50cf\u662f\u5728\u5e2e\u52a9\u6211\u4eec\u7684\u4e00\u4f4d\u5ba2\u6237\u3002\u7ed3\u679c\u4ee4\u4eba\u9707\u60ca\uff0c\u503c\u5f97\u5206\u4eab\u3002\u5e76\u4e14\uff0c\u65e0\u9700\u4efb\u4f55\u9884\u4ed8\u6216\u9884\u7559\u627f\u8bfa\uff01\n\u8fd9\u7bc7\u6587\u7ae0\u5c55\u793a\u4e86\u4e00\u70b9\u70b9\u52e4\u594b\u548c\u4e00\u4e2a\u660e\u786e\u7684\u6210\u672c\u76ee\u6807\u5982\u4f55\u6700\u7ec8\u5bf9\u76c8\u5229\u80fd\u529b\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\n\u4e00\u6761AWS Glue ETL\u7ba1\u9053\uff0c\u4ee5\u53ca\u51e0\u9879\u4f5c\u4e3aGlue\u3001ECS\u6216Sagemaker\u4f5c\u4e1a\u8fd0\u884c\u7684\u6570\u636e\u79d1\u5b66\u670d\u52a1\uff1b\n\u6bcf\u4e2a\u73af\u5883\u6709\u4e24\u4e2aEMR\u96c6\u7fa4\uff0c\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u5c06\u4e00\u4e9bFlink\u7ba1\u9053\u62c6\u5206\u6210\u5b83\u4eec\uff1b\n\u6211\u4eec\u8fd8\u4e3a\u6bcf\u4e2a\u73af\u5883\u8fd0\u884c\u4e86\u4e00\u4e2aAmazon MSK\u96c6\u7fa4\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u4f7f\u7528Kafka\u7684\u6d41\u5a92\u4f53\u7ba1\u9053\u3002\n\u7ba1\u7406\u6210\u672c\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u5173\u952e\ud83d\udd11\u662f\u67d0\u79cd\u6210\u672c\u76d1\u63a7\u5e73\u53f0\uff0c\u5b83\u53ef\u4ee5\u65b9\u4fbf\u5730\u4e0e\u5f00\u53d1\u4eba\u5458\u6c9f\u901a\u6210\u672c\u76ee\u6807\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e86\u89e3\u5404\u79cd\u6210\u672c\u56e0\u7d20\u3002\u5feb\u901f\u68c0\u6d4b\u4e0d\u5229\u53d8\u5316\u7684\u67d0\u79cd\u5f62\u5f0f\u7684\u8b66\u62a5\u4e5f\u6709\u5f88\u5927\u5e2e\u52a9\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u77e5\u9053\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u3002\n\u540c\u6837\u5173\u952e\u7684\u662f\uff0c\u5982\u4f55\u5c06\u6211\u4eec\u5e73\u53f0\u4e0a\u7684\u7528\u6237\u6d3b\u52a8\u4e0e\u6211\u4eec\u7684AWS\u6210\u672c\u5173\u8054\u8d77\u6765(\u5373\uff1a\u4e91\u652f\u51fa\u7684\u8fb9\u9645\u5206\u6790)\u3002\u8fd9\u4f7f\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u6570\u91cf\u5dee\u5f02\u7684\u60c5\u51b5\u4e0b\u8ddf\u8e2a\u6548\u7387\u3002\u5982\u679c\u6211\u4eec\u7684\u8d26\u5355\u4e0a\u6da8\u4e8620%\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u7531\u4e8e\u5de5\u7a0b\u6548\u7387\u4f4e\u4e0b\u3001\u67b6\u6784\u6216\u4ea7\u54c1\u66f4\u6539\uff0c\u751a\u81f3\u662f\u4e1a\u52a1\u9700\u6c42\u7684\u589e\u52a0\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ee5\u6211\u4eec\u8fd9\u8fb9\u7684\u6700\u4f73\u8fb9\u9645\u548c\u5e73\u5747\u4e91\u6210\u672c\u70b9\u63d0\u4f9b\u6211\u4eec\u7684\u5ba2\u6237\u60f3\u8981\u7684\u670d\u52a1\u3002\u8fd9\u610f\u5473\u7740\u8ddf\u8e2a\u5de5\u4f5c\u6216\u6d3b\u52a8\u5355\u5143(\u4f8b\u5982\uff1a\u5ba2\u6237\u6570\u91cf\u3001API\u8c03\u7528\u3001\u751f\u6210\u7684\u62a5\u544a)\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u6211\u4eec\u63d0\u4f9b\u7684\u670d\u52a1\u76f8\u5173\u8054\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u6210\u672c\u7684\u53d8\u5316\u5982\u4f55\u4e5f\u4e0e\u8fd9\u4e9b\u6d3b\u52a8\u7684\u53d8\u5316\u76f8\u5173\u3002\u4e0b\u9762\u662f\u6211\u4eec\u975e\u5e38\u5bc6\u5207\u8ddf\u8e2a\u7684\u4e24\u4e2a\u95ee\u9898\u3002\n\u5b83\u662f\u4e00\u4e2a\u4ee3\u8868\u4ee5\u4e0b\u5185\u5bb9\u7684\u7efc\u5408\u5355\u4f4d\uff1a(1)\u6211\u4eec\u9884\u6d4b\u7684\u670d\u52a1\u6570\u91cf\uff0c(2)\u6211\u4eec\u5bf9\u4efb\u4f55\u7279\u5b9a\u5ba2\u6237\u8fdb\u884c\u9884\u6d4b\u6240\u4f9d\u636e\u7684\u6570\u636e\u5927\u5c0f\uff0c\u4ee5\u53ca(3)\u9884\u6d4b\u7684\u9891\u7387\u3002\n\u6211\u4eec\u63a5\u6536\u5927\u91cf\u4e0d\u540c\u5927\u5c0f\u7684AWS\u6210\u672c\u548c\u4f7f\u7528\u62a5\u544a\uff0c\u56e0\u6b64\u6211\u4eec\u8ddf\u8e2a\u63a5\u6536\u7684\u6bcf100K\u884c\u7684\u8fb9\u9645\u6210\u672c\uff0c\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u5ba2\u6237\u7684\u76c8\u5229\u80fd\u529b\u3002\n\u6211\u4eec\u8ba1\u7b97\u51fa\uff0c\u6211\u4eec\u5728\u67d0\u4e9b\u670d\u52a1\u4e0a\u7684\u8d39\u7528\u5360\u8d26\u5355\u7684\u767e\u5206\u6bd4\u8981\u6bd4\u5176\u4ed6\u670d\u52a1\u9ad8\u5f97\u591a\u3002\u6211\u4eec\u9700\u8981\u5bf9\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u5c0f\u7684\u548c\u5927\u7684\u8c03\u6574\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u56e0\u4e3a.\u5b66\u5206\u5feb\u7528\u5b8c\u4e86\ud83d\udd5a\u3002\u6309\u7167\u987a\u5e8f\uff0c\u6700\u6602\u8d35\u7684\u670d\u52a1\u662f\uff1aAWS Glue\u3001Amazon EC2\u3001Amazon S3\u548cAmazon MSK\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u7684\u66f4\u6539\u7279\u5b9a\u4e8e\u6211\u4eec\u7684\u7528\u4f8b\uff0c\u4f46\u6211\u4eec\u5728\u672c\u6587\u4e2d\u5f3a\u8c03\u4e86\u65b9\u6cd5\u3002\u5bf9\u4f60\u6765\u8bf4\uff0c\u5173\u952e\u662f\u9996\u5148\u4e13\u6ce8\u4e8e\u6700\u4f4e\u7684\u6302\u679c\uff0c\u7136\u540e\u9010\u6e10\u8f6c\u5411\u89c4\u6a21\u8f83\u5c0f\u4f46\u4e0d\u65ad\u589e\u957f\u7684AWS\u6210\u672c\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u8fd9\u662f\u6211\u4eec\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\u7684\u64cd\u4f5c\uff1a\n\u8fd9\u5f88\u96be\u505a\u5230\u3002\u6b64\u4efb\u52a1\u7684\u590d\u6742\u7a0b\u5ea6\u5c06\u53d6\u51b3\u4e8e\u60a8\u516c\u53f8\u7684\u89c4\u6a21\u4ee5\u53ca\u5141\u8bb8\u591a\u5c11\u4eba\u521b\u5efaEC2\u5b9e\u4f8b\u3002\u6709\u4e9b\u4eba\u6709\u770b\u95e8\u4eba\uff0c\u6709\u4e9b\u4eba\u6ca1\u6709\u3002\u6709\u4eba\u53ef\u80fd\u9700\u8981\u95ee\u522b\u4eba\uff0c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u4ed6\u4eec\u662f\u5426\u8fd8\u5728\u4f7f\u7528\u4e00\u4e9b\u770b\u4f3c\u65e0\u7528\u7684\u5b9e\u4f8b\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8ffd\u4eba\u5f88\u70c2\u3002\ud83e\udd26\ud83c\udffd\u826f\u597d\u7684\u6807\u8bb0\u53ef\u80fd\u6709\u52a9\u4e8e\u67e5\u627e\u4e0d\u9700\u8981\u4f46\u4ecd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684\u5b9e\u4f8b\u3002\n\u9644\u6ce8\uff1a\u5982\u679c\u4f60\u4e0d\u7ed9\u4efb\u4f55\u4e1c\u897f\u52a0\u6807\u7b7e\uff0c\u5f00\u59cb\u505a\u4ec0\u4e48\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u592a\u665a\u3002\u4e0b\u4e00\u6b21\u60a8\u5fc5\u987b\u524a\u51cf\u4e91\u6210\u672c\u65f6\uff0c\u7a0d\u52a0\u52aa\u529b\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\u521b\u5efa\u4e00\u4e9bS3\u751f\u547d\u5468\u671f\u7b56\u7565\u6709\u52a9\u4e8e\u67e5\u627e\u548c\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u6587\u4ef6\u3002\u5f53\u60a8\u7684\u670d\u52a1\u7684\u4e00\u90e8\u5206\u5904\u7406\u4e00\u4e9b\u6587\u4ef6\uff0c\u5e76\u4e14\u60a8\u4e5f\u6709\u4e00\u4e9b\u90e8\u5206\u5904\u7406\u7684\u6587\u4ef6\u65f6\uff0c\u5f88\u5bb9\u6613\u79ef\u7d2f\u5927\u91cf\u7684\u6587\u4ef6\u3002\u5b9a\u4e49\u5220\u9664\u6216\u66f4\u6539\u5404\u4e2a\u6587\u4ef6\u7684\u5b58\u50a8\u7c7b\u522b\u7684\u7b56\u7565\u53ef\u80fd\u4f1a\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c\u3002\n\u6211\u4eec\u8c03\u6574\u4e86\u4f5c\u4e1a\u5927\u5c0f\uff0c\u4ee5\u4fbf\u5728\u6ca1\u6709AWS Glue\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u3002\u5b83\u4eec\u88ab\u201c\u505c\u9760\u201d\uff0c\u5728AWS Fargate\u4e0a\u4f5c\u4e3aAmazon ECS\u4efb\u52a1\u8fd0\u884c\u3002\u6211\u4eec\u5bf9Glue Job\u8fdb\u884c\u4e86\u91cd\u6784\uff0c\u4f7f\u5176\u9700\u8981\u66f4\u5c11\u7684\u5185\u5b58\uff0c\u5e76\u5728\u66f4\u5c0f\u7684\u5757\u4e2d\u8fd0\u884c\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5c06\u5927\u90e8\u5206\u5de5\u4f5c\u8f6c\u79fb\u5230Fargate\uff0c\u8fd9\u82b1\u8d39\u4e86\u6211\u4eecGlue Run\u6210\u672c\u7684\u4e09\u5206\u4e4b\u4e00\u3002\n\u6211\u4eec\u6ca1\u6709\u4f7f\u7528AWS Athena\u67e5\u8be2\uff0c\u800c\u662f\u901a\u8fc7\u76f4\u63a5\u4eceS3\u62c9\u53d6\u6570\u636e\u5e93\uff0c\u51cf\u5c11\u4e86\u722c\u884c\u6570\u636e\u5e93\u6240\u9700\u7684\u6570\u636e\u91cf\u3002(\u4f7f\u7528\u8fc7\u6ee4\u7684\u62c9\u53d6)\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4f18\u5316GetObject\u8bf7\u6c42\u7684\u6570\u91cf\uff0c\u8fd9\u5f00\u59cb\u6210\u4e3a\u4e00\u4e2a\u4ee4\u4eba\u5934\u75bc\u7684\u95ee\u9898\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u6781\u5927\u5730\u51cf\u5c11\u4e86\u4e3a\u6570\u636e\u62c9\u53d6\u4fdd\u6301\u5206\u533a\u66f4\u65b0\u6240\u9700\u7684\u722c\u884c\u91cf\u3002\n=&gt\uff1b\u7ed3\u679c\uff1a\u4e0e\u5c06\u9576\u6728\u5730\u677f\u91cd\u65b0\u52a0\u5de5\u4e3a\u66f4\u5927\u6587\u4ef6\u5927\u5c0f\u76f8\u7ed3\u5408\uff0c\u8fd9\u53ef\u5c06AWS S3 GET OBJECT\u548cPUT OBJECT\u8bf7\u6c42\u548c\u6210\u672c\u964d\u4f4e90%+\u3002\n\u6211\u4eec\u5c06\u8d1f\u8d23\u5c06\u5927\u578bCSV\u8f6c\u6362\u4e3a\u53bb\u91cd\u590d\u62fc\u56fe\u6587\u4ef6\u7684AWS Glue\u4f5c\u4e1a\u8f6c\u6362\u4e3aApache Flink\u7ba1\u9053\u4f5c\u4e1a\u3002\u6211\u4eec\u5df2\u7ecf\u5728EMR\u7fa4\u96c6\u5185\u8fd0\u884cFlink\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7b80\u5355\u5730\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684Flink\u4f5c\u4e1a\uff0c\u8be5\u4f5c\u4e1a\u5177\u6709\u4e0eAWS Glue\u4f5c\u4e1a\u76f8\u540c\u7684\u529f\u80fd\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u6211\u4eec\u7684Flink\u7ba1\u9053\u662f\u6211\u4eec\u62db\u81f4\u7684\u6c89\u6ca1\u6210\u672c\u3002\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528\u5b83\uff0c\u907f\u514d\u56e0\u4f7f\u7528\u6309\u5c0f\u65f6\u6536\u8d39\u7684AWS Glue\u7ba1\u9053\u800c\u4ea7\u751f\u7684\u8fb9\u9645\u6210\u672c\u3002\n\u867d\u7136\u6211\u4eec\u5b9e\u73b0\u4e86\u65b0\u7684Flink\u4f5c\u4e1a\u6765\u66ff\u6362AWS Glue\u4f5c\u4e1a\uff0c\u4f46\u6211\u4eec\u66f4\u6539\u4e86\u751f\u6210\u7684\u62fc\u82b1\u5730\u677f\u6587\u4ef6\u7684\u5927\u5c0f\u3002\u6211\u4eec\u7684Glue\u4f5c\u4e1a\u5728\u6211\u4eec\u7684\u4e00\u4e2aS3\u5b58\u50a8\u6876\u4e2d\u521b\u5efa\u4e86\u6570\u91cf\u60ca\u4eba\u7684\u5c0f\u6587\u4ef6\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u5bfc\u81f4AWS S3 GET\u548cPUT\u64cd\u4f5c\u8d70\u5f97\u66f4\u9ad8\uff0c\u5e76\u5927\u5e45\u589e\u52a0\u4e86\u6211\u4eec\u7684AWS\u8d26\u5355\u3002\n\u6211\u4eec\u5e73\u53f0\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5927\u91cf\u4f7f\u7528Apache Kafka\u3002\u8ba9\u4e00\u4e2a\u5f3a\u5927\u800c\u7a33\u5b9a\u7684\u5361\u592b\u5361\u96c6\u7fa4\u59cb\u7ec8\u8fd0\u884c\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u4f46\u662f\uff0c\u968f\u7740\u6211\u4eec\u8fc7\u53bb\u7684\u4e00\u4e9b\u53d8\u5316(\u5728\u8fd9\u4e9b\u8c03\u6574\u4e4b\u524d)\uff0c\u6211\u4eec\u5bf9\u5361\u592b\u5361\u7684\u4f7f\u7528\u53d8\u5f97\u4e0d\u90a3\u4e48\u82db\u523b\u4e86\u3002\u867d\u7136\u6211\u4eec\u4f7f\u7528MSK\u7684\u8d39\u7528\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u6211\u4eec\u4e0d\u518d\u90a3\u4e48\u4f9d\u8d56\u5361\u592b\u5361\u4e86\uff0c\u6240\u4ee5\u4f7f\u7528MSK\u5e76\u4e0d\u5212\u7b97\u3002\u6211\u4eec\u80fd\u591f\u5c06\u6211\u4eec\u7684\u5361\u592b\u5361\u8f6c\u79fb\u5230ECS\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u96c6\u88c5\u7bb1\u5316\u7684\u96c6\u56e2\u8fd0\u8425\u3002\u6211\u4eec\u6bd5\u7adf\u4e0d\u9700\u8981\u4e00\u4e9b\u88c1\u5458\u3002\n\u6211\u4eec\u6781\u5927\u5730\u51cf\u5c11\u4e86\u6d3b\u52a8\u65e5\u5fd7\u8bb0\u5f55\uff0c\u540c\u65f6\u786e\u4fdd\u53ef\u4ee5\u91cd\u65b0\u542f\u7528\u5b83\u4ee5\u8fdb\u884c\u8c03\u8bd5\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u76d1\u63a7\u6210\u672c\uff0c\u56e0\u4e3a\u5b83\u4e0a\u5347\u5f97\u5f88\u5feb\u3002\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5728\u6ca1\u6709\u8ba1\u5212\u5982\u4f55\u5728\u751f\u4ea7\u4e2d\u5229\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u5f88\u5bb9\u6613\u6295\u5165\u8c03\u8bd5\u65e5\u5fd7\u8bb0\u5f55\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u4e0d\u4ec5\u662f\u6f5c\u5728\u7684\u5b89\u5168\u8fdd\u89c4\uff0c(\u54ce\u5440\uff01)\u3002\u4f46\u662f\u4e0d\u5fc5\u8981\u7684\u8d39\u7528\u3002\u6211\u4eec\u8ba4\u4e3a\u751f\u4ea7\u6d4b\u4e95\u548c\u5f00\u53d1\u6d4b\u4e95\u5e94\u8be5\u6709\u4e0d\u540c\u7684\u8981\u6c42\u3002\u6211\u4eec\u77e5\u9053\u4e0d\u80fd\u7528\u540c\u6837\u7684\u65b9\u5f0f\u8bb0\u5f55\u6bcf\u4ef6\u4e8b\u3002\n\ufeff\u6211\u4eec\u8fc7\u53bb\u5728\u6bcf\u4e2a\u73af\u5883\u4e0a\u90fd\u67092\u4e2a\u7535\u5b50\u75c5\u5386\u7fa4\u96c6\uff0c\u5e76\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b(\u4e3b\u8282\u70b9\u3001\u6838\u5fc3\u8282\u70b9\u6216\u4efb\u52a1\u8282\u70b9)\u4f7f\u7528\u6309\u9700\u5b9e\u4f8b\u7ec4\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u5b9e\u4f8b\u8f66\u961f\u548cSpot\u5b9e\u4f8b\u8fdb\u884c\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u3002\u5982\u679c\u53d1\u751f\u8d44\u6e90\u8c03\u914d\u8d85\u65f6\uff0c\u6211\u4eec\u542f\u7528\u4e86\u5207\u6362\u5230\u6309\u9700\u5b9e\u4f8b\u7684\u529f\u80fd\uff0c\u4f46\u8fd9\u5e76\u4e0d\u8d77\u4f5c\u7528\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48..\u3002\n\u6211\u4eec\u7684\u96c6\u7fa4\u53ef\u4ee5\u5728\u542f\u52a8\u65f6\u63d0\u4f9b\u6240\u6709\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u5982\u679cAWS\u56de\u6536\u7ed9\u5b9a\u673a\u7fa4(\u6838\u5fc3\u6216\u4e3b)\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\uff0c\u7fa4\u96c6\u5c31\u4f1a\u5d29\u6e83\uff01\u4ed6\u4eec\u6ca1\u6709\u5207\u6362\u5230\u6309\u9700\uff0c\u5e76\u4e14\u8c03\u6574\u961f\u5217\u5927\u5c0f\u4ee5\u4f7f\u7528\u6309\u9700\u5b9e\u4f8b\u6216\u4e0d\u540c\u6570\u91cf\u7684Spot\u5b9e\u4f8b\u6ca1\u6709\u4efb\u4f55\u6539\u53d8\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c062\u4e2aEMR\u96c6\u7fa4\u8f6c\u6362\u4e3a\u5355\u4e2a\u96c6\u7fa4\u3002\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u4e00\u4e2a\u6309\u9700\u5b9e\u4f8b\u4f5c\u4e3a\u4e3b\u8282\u70b9\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u6838\u5fc3\u8282\u70b9\u7684\u4e00\u90e8\u5206\u3002\u4f5c\u4e3aSpot\u5b9e\u4f8b\u7684\u6240\u6709\u5176\u4ed6Core\u6216Task\u8282\u70b9\u3002\u8fd9\u79cd\u5b9e\u73b0\u7684\u5931\u8d25\u7387\u5f88\u4f4e\u3002\u4f46\u662f\uff0cAWS\u53ef\u4ee5\u968f\u65f6\u56de\u6536\u5b9e\u4f8b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u6b65\u9aa4\u5931\u8d25\u3002\u4e3a\u6b64\uff0c\u91cd\u8981\u7684\u662f\u8981\u6709\u4e00\u5b9a\u7684\u5bb9\u9519\u80fd\u529b\u6765\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u91cd\u8bd5\u673a\u5236\u6765\u91cd\u65b0\u8fd0\u884c\u5931\u8d25\u7684\u6b65\u9aa4\u3002\u554a\uff0c\u771f\u7075\u3002\n\u5728\u6240\u6709\u8fd9\u4e9b\u8c03\u6574\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7ed3\u679c\u611f\u5230\u60ca\u8bb6\u3002\u540c\u6837\uff0c\u8fd9\u4e5f\u662f\u4e0d\u540c\u4e4b\u5904\uff1a\n\u8fd9\u4e9b\u53d8\u5316\u610f\u5473\u7740\u6211\u4eec\u6bcf\u6708\u7684AWS\u8d26\u5355\u51cf\u5c11\u4e86\u8fd167%\u3002\ud83d\ude3a\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u627f\u8bfa\u4efb\u4f55\u65b0\u7684\u50a8\u84c4\u8ba1\u5212\u6216\u9884\u7559\u5b9e\u4f8b\u3002(\u90a3\u53ef\u4ee5\u4e3a\u6211\u4eec\u8282\u7701\u66f4\u591a\u7684\u94b1\uff0c\u4f46\u6211\u4eec\u4f1a\u628a\u94b1\u7559\u5230\u53e6\u4e00\u4e2a\u804c\u4f4d\u53bb\u505a\u3002)\u3002\u540c\u6837\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u6211\u4eec\u6539\u8fdb\u4e86\u6bcf\u4e2a\u5ba2\u6237\u7684\u8fb9\u9645\u6210\u672c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5173\u952e\u7684SaaS\u6307\u6807\uff01\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u4e00\u4e9b\u6210\u529f\u662f\u7279\u5b9a\u4e8e\u7528\u4f8b\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u91c7\u53d6\u7684\u65b9\u5411\u53ef\u4ee5\u4e3a\u4efb\u4f55AWS\u7528\u6237\u8282\u7701\u8d44\u91d1\u3002\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u53d1\u7535\u5b50\u90ae\u4ef6\u7ed9\u6211\u4eec\uff1aLouis@taloflow.ai", "note_en": "At Taloflow, we are determined not to be the cobbler whose children went barefoot. We approach our own AWS costs as if we are helping one of our customers. The results are striking and worth sharing. And, with zero upfront or reserved commitments required!\n This post illustrates how a little bit of diligence and a clear cost objective can end up making a large impact on profitability.\n     An AWS Glue ETL pipeline, and several data science services which ran as Glue, ECS, or Sagemaker jobs;\n There were two EMR clusters for each environment since we opted to split some of our Flink pipelines into them;\n We were also running an Amazon MSK cluster for every environment since there were some streaming pipelines using Kafka.\n  The first &#34;major key&#34; \u00a0\ud83d\udd11 to managing costs is some sort of cost monitoring platform that makes it easy to communicate cost objectives to developers. This should provide easy visibility into the various cost factors. Some form of alerting for detecting adverse changes fast also helps a lot. Luckily, we knew where to find one of those.\n   Also key was some way to correlate user activity on our platform to our AWS costs (i.e.:  marginal analysis of cloud spend). This allows us to track efficiency without the quantity variance. If our bill goes up 20%, we know whether it\u2019s due to engineering inefficiency, architecture or product changes, or  even an increase in business demand.\n The goal was to provide the services that our customers wanted, but at the optimal marginal and average cloud cost point on our side. This means tracking units of work or activities (e.g.: number of customers, API calls, reports generated) and relating them to the services we provide. We can then determine how changes in costs are also related to changes in these activities. Below are the two that we track  very closely.\n It&#39;s a synthesized unit representing the following: (1) the number of services we predict, (2) the size of the data upon which we make predictions for any particular customer, and (3) the frequency of the predictions.\n We ingest lots of AWS cost and usage reports, and of various sizes, so we track the marginal cost per 100K rows ingested to get a better idea of customer profitability.\n  We figured out that our expenses with some services were a lot higher as a percent of the bill than others. We needed to make some minor and major adjustments to our infrastructure and code to deal with this. Because...credits were running out \ud83d\udd5a. In order, the most expensive services were: AWS Glue, Amazon EC2, Amazon S3 and Amazon MSK.\n   Of course our changes are specific to our use case, but we emphasized the approach in this post. The key is for you to focus on your lowest hanging fruit first, and gradually move to smaller but growing AWS costs. In our case, this is what we did in the following order:\n     This is rarely easy. The complexity of this task will depend on the size of your company and how many people are allowed to create EC2 instances. Some have gatekeepers, some don&#39;t. One might need to ask other people if, for some reason, they are still using some instances that appear useless. We know, chasing people sucks. \ud83e\udd26\ud83c\udffdGood tagging may help find undesired yet still live instances.\n P.S.: If you don\u2019t tag anything, it\u2019s never too late to start doing that. A bit of extra effort will help the next time you have to trim cloud costs.\n   Creating some  S3 lifecycle policies helps to find and delete unnecessary files. When a part of your service processes some files, and you also have some partially processed files, it\u2019s easy to accumulate lots of them. Defining policies to delete or change the storage class of the respective files can make a big difference.\n  We resized our jobs to run without AWS Glue. They were \u201cdockerized\u201d and run as Amazon ECS tasks on AWS Fargate. We refactored our Glue Jobs to require less memory and to run in smaller chunks.\u00a0 This enabled us to move much of that work to Fargate,  which cost us 1/3 of what the Glue runs had cost.\n   Instead of using AWS Athena queries, we reduced the amount of data needed to crawl the databases by pulling it directly from S3. (with filtered pulls) This allowed us to optimize the amount of GetObject requests which were starting to become a big headache. In addition, it drastically reduced the amount of crawling needed to keep the partitions updated for the data pulls.\n =&gt; Result: Combined with reworking parquet to larger file sizes, this cut AWS S3 Get Object and Put Object requests and costs by 90%+\n  We converted our AWS Glue job responsible for converting a huge CSV into de-duplicated parquet files into an Apache Flink pipeline job. We were already running  Flink inside an EMR cluster. So we simply introduced a new Flink job with the same functionality of that AWS Glue job. In essence, our Flink pipeline was a sunk cost we had incurred. We decided to use it and avoid incurring the marginal costs from the use of the AWS Glue pipeline, which is charged hourly.\n  While we implemented the new Flink job to replace the AWS Glue job, we changed the size of the parquet files being generated. Our Glue job was creating an insane amount of small files in one of our S3 buckets. This in turn caused AWS S3 GET and PUT operations to go higher and increase our AWS bill significantly.\n   The first version of our platform made heavy use of Apache Kafka. It was crucial to have a robust and stable  Kafka cluster running all the time. But, with some of our past changes (before these adjustments), our use of Kafka became much less demanding. Although our expenses with MSK were pretty fixed, we were not that dependent on Kafka anymore, so using MSK was not cost efficient. We were able to move our Kafka to ECS and run it as a containerized group. We didn\u2019t need some of the redundancies after all.\n   We dramatically reduced our active logging, while making sure it could be re-enabled for debugging purposes. This is an interesting cost to monitor in that it creeps up quickly. It&#39;s easy for developers to throw in debugging logging without a plan as to how that logging will be utilized in production. The net result is not only potential security violations, (oops!) but unnecessary costs. We believe that production logging and development logging should have different requirements. We know  not to log everything the same way.\n   \ufeffWe used to have 2 EMR clusters on each environment and used on-demand instance groups for every node type (Master, Core, or Task).\n First, we made some tests using instance fleets with spot instances. We enabled the switch to on-demand instances if a provisioning timeout happened, but that didn\u2019t work. Here&#39;s why...\n Our clusters could provision all the instances while it started. But, if AWS reclaimed all of our instances in a given fleet (Core or Master), the   cluster crashed! They didn\u2019t switch to on-demand and resizing the fleet to use an on-demand instance or a different number of spot instances changed nothing.\n To solve this, we turned our 2 EMR clusters into a single cluster. We kept using an on-demand instance as the Master node and another as part of the Core nodes. All of the other Core or Task nodes as Spot instances. The failure rate of this implementation is low. However, AWS can reclaim an instance at anytime, which can cause some of the steps to fail. To that end, it\u2019s important to have a certain level of fault tolerance to deal with that. In our case, we implemented a simple retry mechanism to re-run the failed steps. It worked.\n  After these adjustments were all made, we could wonder at the results. Again,  this was the difference:\n  These changes represent  a nearly 67% reduction of our monthly AWS bill. \ud83d\ude3aWe didn\u2019t even need commit to any new savings plans or reserved instances. (That could save us even more money, but we&#39;ll leave that for another post). It is also exciting to see that we improved our marginal cost per customer, which is a key SaaS metric! We know that some of our success is use-case specific. However, the direction we took can be applied to save money for any AWS user. We invite you to email us with any questions:  louis@taloflow.ai", "posttime": "2020-05-28 09:39:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,aws", "title": "\u6211\u4eec\u7684\u6d41\u6570\u636e\u6e20\u9053\u4e0a\u7684AWS\u6210\u672c\u964d\u4f4e\u4e8667%", "title_en": "We reduced AWS costs by 67% on our streaming data pipeline", "transed": 1, "url": "https://www.taloflow.ai/blog/reducing-aws-costs", "via": "", "real_tags": ["\u6570\u636e", "aws"]}, {"category": "", "categoryclass": "", "imagename": "7bfa0afcf41fa289490c55a511a33b0e.jpeg", "infoid": 1004012, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u662f\u4e00\u5bb6\u5bf9\u672a\u6765\u62b1\u6709\u8fdc\u5927\u68a6\u60f3\u7684\u5c0f\u516c\u53f8\uff0c\u4e91\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u5546\u4e0e\u4f20\u7edf\u4f9b\u5e94\u7cfb\u7edf\u76f8\u6bd4\u7684\u6700\u5927\u4f18\u52bf\u4e4b\u4e00\u662f\uff0c\u5b83\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u8d44\u6e90\u7684\u7075\u6d3b\u6027\u3002", "note_en": "If you\u2019re a small company with big dreams for the future, one of the biggest advantages cloud infrastructure providers have over traditional provisioning systems is the flexibility they offer you to adjust the resources your application\u00a0uses.", "posttime": "2020-05-28 09:08:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u589e\u91cf,increment,\u8d44\u6e90", "title": "\u589e\u91cf\u95ee\u989813\uff1a\u524d\u7aef", "title_en": "Increment Issue 13: Frontend", "transed": 1, "url": "https://increment.com/frontend/", "via": "", "real_tags": ["\u589e\u91cf", "increment", "\u8d44\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "046224e021cd84de5b0eb960f6dc7847.png", "infoid": 1004010, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd1\u5341\u5e74\u7684\u65f6\u95f4\u91cc\uff0cStack Overflow\u7684\u5e74\u5ea6\u5f00\u53d1\u4eba\u5458\u8c03\u67e5\u4e00\u76f4\u88ab\u8a89\u4e3a\u5bf9\u4e16\u754c\u5404\u5730\u7684\u7a0b\u5e8f\u5458\u8fdb\u884c\u7684\u6700\u5927\u89c4\u6a21\u7684\u8c03\u67e5\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u6210\u4e3a\u6700\u5927\u7684\uff0c\u800c\u662f\u8ba9\u6211\u4eec\u7684\u8c03\u67e5\u66f4\u80fd\u4ee3\u8868\u4e16\u754c\u5404\u5730\u7a0b\u5e8f\u5458\u7684\u591a\u6837\u6027\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u8fd9\u9879\u8c03\u67e5\u4ecd\u7136\u5f88\u5927\u3002\u4eca\u5e74\u7684\u8c03\u67e5\u53ea\u67096.5\u4e07\u591a\u4eba\u53c2\u52a0\u3002\n\u5728\u6211\u4eec\u52aa\u529b\u8d85\u8d8a\u5806\u6808\u6ea2\u51fa\u7f51\u7edc\u5e76\u5bfb\u6c42\u66f4\u591a\u4e0d\u540c\u7a0b\u5e8f\u5458\u7684\u4ee3\u8868\u65f6\uff0c\u6211\u4eec\u5728\u81ea\u5df1\u7684\u6e20\u9053\u4e0a\u53d1\u5e03\u7684\u8c03\u67e5\u5e7f\u544a\u6bd4\u524d\u51e0\u5e74\u66f4\u5c11\u4e86\uff0c\u5e76\u5bfb\u6c42\u4ece\u90a3\u4e9b\u53ef\u80fd\u4e0d\u7ecf\u5e38\u8bbf\u95ee\u6211\u4eec\u7f51\u7ad9\u7684\u4eba\u90a3\u91cc\u83b7\u5f97\u56de\u5e94\u7684\u65b9\u6cd5\u3002\u8fd9\u4e00\u65b9\u6cd5\u5305\u62ec\u793e\u4f1a\u63a8\u5e7f\u548c\u5bf9\u4efb\u804c\u4eba\u6570\u4e0d\u8db3\u7684\u7a0b\u5e8f\u5458\u7684\u5ba3\u4f20\u3002\n\u867d\u7136\u6211\u4eec\u770b\u5230\u4ee3\u8868\u4eba\u6570\u4e0d\u8db3\u7684\u7fa4\u4f53\u6709\u6240\u589e\u52a0\uff0c\u4f46\u4ee3\u8868\u4eba\u6570\u7684\u5dee\u5f02\u5e76\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u5927\u3002\u4e00\u4e9b\u79cd\u65cf\u548c\u65cf\u88d4\u7fa4\u4f53\u7684\u4eba\u6570\u6709\u6240\u4e0a\u5347\uff0c\u7279\u522b\u662f\u897f\u73ed\u7259\u88d4\u6216\u62c9\u4e01\u88d4/a/x\u548c\u9ed1\u4eba\u6216\u975e\u6d32\u88d4\u7fa4\u4f53\uff0c\u800c\u5176\u4ed6\u79cd\u65cf\u548c\u65cf\u88d4\u4fdd\u6301\u76f8\u4f3c\u6216\u51cf\u5c11\u3002\u540c\u6837\uff0c\u6211\u4eec\u770b\u5230\u5973\u6027\u6027\u522b\u53d7\u8bbf\u8005\u7565\u6709\u589e\u52a0\uff0c\u800c\u975e\u4e8c\u5143\u3001\u6027\u522b\u9177\u513f\u6216\u4e0d\u7b26\u5408\u6807\u51c6\u7684\u53d7\u8bbf\u8005\u6570\u91cf\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u627f\u8ba4\u6211\u4eec\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u800c\u6211\u4eec\u6bcf\u5e74\u8fdb\u884c\u7684\u8c03\u67e5\u6240\u5f97\u7684\u6570\u636e\uff0c\u6709\u52a9\u6211\u4eec\u4f5c\u51fa\u6539\u53d8\uff0c\u8ba2\u4e0b\u76ee\u6807\uff0c\u4ee5\u6539\u5584\u793e\u4f1a\u7684\u6b22\u8fce\u7a0b\u5ea6\u548c\u5305\u5bb9\u6027\u3002\n\u4f7f\u7528\u624b\u5934\u7684\u6570\u636e\uff0c\u6211\u4eec\u6839\u636e\u9002\u7528\u7684\u4eba\u53e3\u7edf\u8ba1\u6570\u636e\u5bf9\u6211\u4eec\u7684\u5206\u6790\u8fdb\u884c\u4e86\u7ec6\u5206\u3002\u5bfb\u627e\u56fe\u6807\uff0c\u770b\u770b\u4eba\u53e3\u7edf\u8ba1\u5728\u54ea\u4e9b\u65b9\u9762\u4ea7\u751f\u4e86\u6709\u8da3\u7684\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u4e00\u5b9a\u8981\u67e5\u770b\u4eca\u5e74\u8c03\u67e5\u4e2d\u7684\u65b0\u8bdd\u9898\uff0c\u6bd4\u5982\u5173\u4e8eDevOps\u548c\u52a0\u73ed\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u8fd8\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u4eca\u5e74\u7684\u8c03\u67e5\u662f\u57282\u6708\u4efd\u8fdb\u884c\u7684\uff0c\u5f53\u65f6\u65b0\u51a0\u80ba\u708e\u8fd8\u6ca1\u6709\u88ab\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u5ba3\u5e03\u4e3a\u5927\u6d41\u884c\uff0c\u75c5\u6bd2\u8fd8\u6ca1\u6709\u5f71\u54cd\u5230\u4e16\u754c\u4e0a\u6bcf\u4e2a\u56fd\u5bb6\u3002\u5728\u5ba1\u67e5\u5de5\u4f5c\u548c\u85aa\u8d44\u6570\u636e\u7b49\u4fe1\u606f\u65f6\uff0c\u8bf7\u7262\u8bb0\u8c03\u67e5\u7684\u65f6\u95f4\u3002\n\u6700\u540e\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u81ea\u5df1\u6df1\u5165\u7814\u7a76\u7ed3\u679c\u7684\u4eba\uff0c\u53ef\u4ee5\u6839\u636e\u5f00\u653e\u6570\u636e\u5e93\u8bb8\u53ef\u8bc1(ODbL)\u4e0b\u8f7d\u533f\u540d\u7684\u8c03\u67e5\u7ed3\u679c\u3002\u6211\u4eec\u671f\u5f85\u770b\u5230\u60a8\u7684\u53d1\u73b0-\u5982\u679c\u60a8\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u5206\u4eab\uff0c\u8bf7\u52a1\u5fc5\u6807\u8bb0\u6211\u4eec\uff01\n\u7ecf\u8fc7\u8fc7\u53bb\u4e94\u5e74\u7684\u6301\u7eed\u4e0a\u5347\uff0cPython\u5728\u6700\u53d7\u6b22\u8fce\u7684\u6280\u672f\u6392\u884c\u699c\u4e0a\u4ece\u53bb\u5e74\u7684\u7b2c\u4e8c\u540d\u8dcc\u81f3\u4eca\u5e74\u7684\u7b2c\u4e09\u540d\uff0c\u88ab\u6253\u5b57\u7a3f\u51fb\u8d25\u3002\u94c1\u9508\u8fde\u7eed\u7b2c\u4e94\u5e74\u8363\u767b\u6700\u53d7\u6b22\u8fce\u79d1\u6280\u699c\u9996\u3002\n\u6700\u53d7\u6b22\u8fce\u7684\u8bed\u8a00\u2192\n\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\u5e08\u548cDevOps\u4e13\u5bb6\u4ecd\u7136\u662f\u85aa\u916c\u6700\u9ad8\u7684\u4e2a\u4eba\u8d21\u732e\u8005\u89d2\u8272\u300280%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3aDevOps\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5f88\u91cd\u8981\uff0c44%\u7684\u53d7\u8bbf\u8005\u5728\u81f3\u5c11\u6709\u4e00\u540d\u4e13\u6ce8\u7684DevOps\u5458\u5de5\u7684\u7ec4\u7ec7\u4e2d\u5de5\u4f5c\u3002\n\u5168\u7403\u85aa\u8d44\u2192\u3002\n52%\u7684\u53d7\u8bbf\u8005\u5728\u7f51\u4e0a\u641c\u7d22\u7f16\u7801\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u7ed3\u679c\u94fe\u63a5\u662f\u7d2b\u8272\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u8be5\u94fe\u63a5\uff0c\u4ed6\u4eec\u4f1a\u60f3\u5230\u201c\u4f60\u597d\uff0c\u8001\u670b\u53cb\u201d\u3002\n\u5df2\u8bbf\u95ee\u8fc7\u7684Feel\u2192\u3002\n\u5f53\u88ab\u95ee\u53ca\u9047\u5230\u7f16\u7801\u95ee\u9898\u65f6\u5e94\u8be5\u91c7\u53d6\u54ea\u4e9b\u6b65\u9aa4\u65f6\uff0c90%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u4f1a\u8bbf\u95eeStack Overflow\u3002\n\u5f53\u4f60\u88ab\u5361\u4f4f\u7684\u65f6\u5019\u2192\u3002\n\u8d85\u8fc775%\u7684\u5f00\u53d1\u4eba\u5458\u81f3\u5c11\u5076\u5c14\u4f1a\u52a0\u73ed--\u6bcf\u5b63\u5ea6\u52a0\u73ed\u4e00\u5230\u4e24\u5929\u300225%\u7684\u4eba\u6bcf\u5468\u52a0\u73ed1-2\u5929\u6216\u66f4\u591a\u3002\n\u52a0\u73ed\u2192\n\u6fb3\u5927\u5229\u4e9a\u53d7\u8bbf\u8005\u62a5\u544a\u7684\u5e73\u5747\u7f16\u7801\u7ecf\u9a8c\u6700\u9ad8\uff0c\u4e3a16.9\u5e74\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u82f1\u56fd\u548c\u7f8e\u56fd\u7684\u5f00\u53d1\u4eba\u5458\u3002\u4e0e\u4e4b\u76f8\u5173\u7684\u662f\uff0c\u6765\u81ea\u7f8e\u56fd\u548c\u82f1\u56fd\u7684\u53d7\u8bbf\u8005\u7684\u5e73\u5747\u5e74\u9f84\u6700\u9ad8\uff0c\u5206\u522b\u4e3a33.7\u5c81\u548c33.1\u5c81\u3002\n\u56fd\u5bb6/\u5730\u533a\u2192\u7684\u7ecf\u9a8c\u3002\n\u8d85\u8fc740%\u7684\u53d7\u8bbf\u8005\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u662fStack Overflow\u4ee5\u5916\u7684\u5176\u4ed6\u5728\u7ebf\u5f00\u53d1\u8005\u793e\u533a\u7684\u6210\u5458\u3002\n\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u793e\u533a\u2192\u3002\n\u8d85\u8fc715%\u7684\u4eba\u8ba4\u4e3aStack Overflow\u81f3\u5c11\u6bd4\u53bb\u5e74\u66f4\u53d7\u6b22\u8fce\u3002\u6211\u4eec\u8fd8\u6709\u5de5\u4f5c\u8981\u505a\uff0c\u4f46\u8fd9\u662f\u4e2a\u5f00\u59cb\u3002\n\u5171\u540c\u53c2\u4e0e\u2192\u3002\n\u6211\u4eec\u4ecd\u7136\u770b\u5230\u6709\u8bc1\u636e\u8868\u660e\uff0c\u6709\u8272\u4eba\u79cd\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\uff0c\u4f46\u5f53\u6211\u4eec\u5305\u62ec\u6240\u6709\u5f00\u53d1\u4eba\u5458\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u90a3\u4e9b\u4e13\u4e1a\u7f16\u7801\u7684\u4eba\u65f6\uff0c\u6211\u4eec\u786e\u5b9e\u770b\u5230\u4e86\u4e00\u4e9b\u6539\u5584\u3002\n\u79cd\u65cf\u548c\u65cf\u88d4\u2192\n\u6bcf\u4e2a\u6708\uff0c\u5927\u7ea6\u67095000\u4e07\u4eba\u8bbf\u95eeStack Overflow\u6765\u5b66\u4e60\u3001\u5206\u4eab\u548c\u5efa\u7acb\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\u3002\u4e1a\u5185\u4f30\u8ba1\uff0c\u8fd9\u4e9b\u4eba\u4e2d\u67092000\u4e07\u81f32500\u4e07\u662f\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u548c\u5927\u5b66\u6c34\u5e73\u7684\u5b66\u751f\u3002\u4eca\u5e74\u6211\u4eec\u8c03\u67e5\u7684\u7edd\u5927\u591a\u6570\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u662f\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\uff0c\u6216\u8005\u6709\u65f6\u4f1a\u5c06\u7f16\u5199\u4ee3\u7801\u4f5c\u4e3a\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u6216\u8005\u662f\u4e3a\u8fd9\u6837\u7684\u804c\u4e1a\u751f\u6daf\u505a\u51c6\u5907\u7684\u5b66\u751f\u3002\n\u6709\u5173\u4e16\u754c\u5404\u5730\u7684\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u8bbf\u95ee\u6211\u4eec\u7684\u8c03\u67e5\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u65b9\u6cd5\u8bba\u90e8\u5206\u3002\n\u7ea655%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u5168\u6808\u5f00\u53d1\u4eba\u5458\uff0c\u7ea620%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u79fb\u52a8\u5f00\u53d1\u4eba\u5458\u3002\u4eca\u5e74\u6bcf\u4e2a\u53d7\u8bbf\u8005\u8bc6\u522b\u5f00\u53d1\u8005\u7c7b\u578b\u7684\u4e2d\u4f4d\u6570\u662f3\u4e2a\uff0c\u6700\u5e38\u89c1\u7684\u7ec4\u5408\u5305\u62ec\u540e\u7aef\u3001\u524d\u7aef\u548c\u5168\u6808\u5f00\u53d1\u8005\u3002\u9ad8\u5ea6\u76f8\u5173\u7684\u914d\u5bf9\u5305\u62ec\u6570\u636e\u5e93\u7ba1\u7406\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u3001DevOps\u4e13\u5bb6\u548c\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\u5e08\u3001\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u79d1\u5b66\u5bb6\u4ee5\u53ca\u8bbe\u8ba1\u5e08\u548c\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u3002\n\u5f53\u8c03\u67e5\u6837\u672c\u4e0e\u57fa\u672c\u4eba\u7fa4\u4e0d\u5339\u914d\u65f6\uff0c\u8c03\u67e5\u52a0\u6743\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u6790\u8c03\u67e5\u6570\u636e\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u4eca\u5e74\u7684\u8c03\u67e5\u4e2d\uff0c12%\u7684\u7f8e\u56fd\u53d7\u8bbf\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u5973\u6027\uff0c\u4f46\u7f8e\u56fd\u52b3\u5de5\u7edf\u8ba1\u5c40(US Bureau Of Labor Statistics)\u7684\u6570\u636e\u4f30\u8ba1\uff0c\u5973\u6027\u5728\u8f6f\u4ef6\u5f00\u53d1\u52b3\u52a8\u529b\u4e2d\u7684\u6bd4\u4f8b\u5927\u7ea6\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u4e24\u500d\uff0c\u66f4\u63a5\u8fd120%\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8c03\u67e5\u6743\u91cd\u6765\u8c03\u6574\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u4e0e\u5f00\u53d1\u5546\u7fa4\u4f53\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4e0d\u540c\u6027\u522b\u7684\u5f00\u53d1\u4eba\u5458\u7c7b\u578b\u4ee3\u8868\u6709\u6240\u4e0d\u540c\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5c06\u7f8e\u56fd\u539f\u59cb\u7ed3\u679c\u4e2d\u7684\u603b\u4f53\u6bd4\u4f8b\u4e0e\u52a0\u6743\u6bd4\u4f8b\u8fdb\u884c\u6bd4\u8f83\uff0c\u5047\u8bbe\u6211\u4eec\u6309\u7167\u52b3\u5de5\u7edf\u8ba1\u5c40\u62a5\u544a\u663e\u793a\u7684\u6bd4\u7387\u5bf9\u5c11\u6570\u6027\u522b\u7fa4\u4f53\u8fdb\u884c\u4e86\u4e0d\u8db3\u62bd\u6837\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u6743\u91cd\u65f6\uff0c\u6211\u4eec\u770b\u5230\u6765\u81ea\u5973\u6027\u7684\u6700\u5177\u4ee3\u8868\u6027\u7684\u5f00\u53d1\u4eba\u5458\u89d2\u8272(\u5982\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u5b66\u672f\u7814\u7a76\u4eba\u5458)\u7684\u4ee3\u8868\u6027\u7565\u6709\u589e\u52a0\uff0c\u800c\u5176\u4ed6\u6765\u81ea\u5973\u6027\u7684\u4ee3\u8868\u6027\u8f83\u4f4e\u7684\u89d2\u8272(\u5982DevOps)\u7684\u4ee3\u8868\u6027\u7565\u6709\u4e0b\u964d\u3002\n\u6211\u4eec\u77e5\u9053\uff0c\u9664\u4e86\u6027\u522b(\u5305\u62ec\u4f7f\u7528Stack Overflow\u7684\u9891\u7387)\u4e4b\u5916\uff0c\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u4e0e\u6f5c\u5728\u5f00\u53d1\u4eba\u5458\u7fa4\u4f53\u4e0d\u5339\u914d\u7684\u5730\u65b9\u8fd8\u6709\u66f4\u591a\uff0c\u800c\u4e14\u6211\u4eec\u9884\u8ba1\u8fd9\u79cd\u4e0d\u5339\u914d\u7684\u56fd\u5bb6\u5e76\u4e0d\u53ea\u6709\u7f8e\u56fd\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u8fd9\u4e2a\u52a0\u6743\u7684\u5177\u4f53\u4f8b\u5b50\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u6211\u4eec\u6709\u7cfb\u7edf\u6027\u7684\u62bd\u6837\u95ee\u9898\uff0c\u5e76\u4e14\u6211\u4eec\u5bf9\u9884\u671f\u7684\u4eba\u53e3\u6bd4\u4f8b\u6709\u4e00\u4e2a\u4f30\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u6211\u4eec\u7684\u8c03\u67e5\u6837\u672c\u5bf9\u6211\u4eec\u7684\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u65e0\u8bba\u662f\u5728\u65b9\u5411\u4e0a\u8fd8\u662f\u5728\u7a0b\u5ea6\u4e0a\u3002\n\u8bb8\u591a\u5f00\u53d1\u4eba\u5458\u5728\u5de5\u4f5c\u4e4b\u5916\u5904\u7406\u4ee3\u7801\u3002\u7ea678%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u7f16\u5199\u4ee3\u7801\u662f\u4e00\u79cd\u7231\u597d\u3002\u8f6f\u4ef6\u4e4b\u5916\u7684\u5176\u4ed6\u804c\u8d23\u4f1a\u51cf\u5c11\u5f00\u53d1\u4eba\u5458\u5c06\u7f16\u7801\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\uff1b\u90a3\u4e9b\u58f0\u79f0\u81ea\u5df1\u6709\u5b69\u5b50\u6216\u5176\u4ed6\u7167\u987e\u8d23\u4efb\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u592a\u53ef\u80fd\u5c06\u7f16\u5199\u4ee3\u7801\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\u3002\u5973\u6027\u53d7\u8bbf\u8005\u4e5f\u4e0d\u592a\u53ef\u80fd\u8bf4\u5979\u4eec\u628a\u7f16\u7a0b\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\u3002\n\u8bbf\u95eeStack Overflow\u7684\u5f00\u53d1\u4eba\u5458\u6709\u5e7f\u6cdb\u7684\u7ecf\u9a8c\uff0c\u4ece30\u591a\u5e74\u524d\u5b66\u4f1a\u7f16\u7a0b\u7684\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5f00\u53d1\u4eba\u5458(\u5927\u7ea615%)\u5230\u4e0d\u52305\u5e74\u524d\u5b66\u4f1a\u7f16\u7a0b\u7684\u76f8\u5f53\u5927\u6bd4\u4f8b\u7684\u5f00\u53d1\u4eba\u5458(17%)\u3002\u5728Stack Overflow\u4e0a\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u5927\u7ea640%\u7684\u4eba\u5728\u4e0d\u523010\u5e74\u524d\u5b66\u4f1a\u4e86\u7f16\u7a0b\u3002\u6709\u5173\u8fd9\u4e9b\u4f53\u9a8c\u6c34\u5e73\u5982\u4f55\u56e0\u6027\u522b\u800c\u5f02\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u3002\n\u6280\u672f\u4e3b\u7ba1\u548c\u5de5\u7a0b\u7ecf\u7406\u5f80\u5f80\u62e5\u6709\u6700\u4e13\u4e1a\u7684\u7f16\u7801\u7ecf\u9a8c\u3002\u5728\u5404\u4e2a\u8d21\u732e\u8005\u89d2\u8272\u4e2d\uff0c\u6700\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\u5f80\u5f80\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u3001\u6570\u636e\u5e93\u7ba1\u7406\u5458\u548c\u521b\u5efa\u684c\u9762\u548c\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u3001\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u7ecf\u9a8c\u5f80\u5f80\u8f83\u5c11\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u5f52\u56e0\u4e8e\u6559\u6388\u7f51\u7edc\u5f00\u53d1\u7684\u7f16\u7801\u8bad\u7ec3\u8425\u7684\u6fc0\u589e\uff0c\u4ee5\u53ca\u4ece\u5b66\u672f\u754c\u8fdb\u5165\u8be5\u9886\u57df\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u6570\u91cf\u3002\n\u5728\u6240\u6709\u53d7\u8bbf\u8005\u4e2d\uff0c\u8d85\u8fc754%\u7684\u4eba\u572816\u5c81\u4e4b\u524d\u7f16\u5199\u4e86\u4ed6\u4eec\u7684\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u65e0\u8bba\u662f\u7f51\u9875\u8fd8\u662fhello world\u7a0b\u5e8f\u3002\u572820\u591a\u5c81\u65f6\u7f16\u5199\u7b2c\u4e00\u884c\u4ee3\u7801\u7684\u4eba\u5360\u5230\u4e8613%\u3002\u5f53\u6309\u56fd\u5bb6\u67e5\u770b\u5e73\u5747\u5e74\u9f84\u65f6\uff0c\u6765\u81ea\u5df4\u897f\u548c\u5370\u5ea6\u7b49\u56fd\u7684\u53d7\u8bbf\u8005\u503e\u5411\u4e8e\u5728\u6574\u6574\u4e24\u5e74\u540e\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u6ce2\u5170\u548c\u5fb7\u56fd\u7b49\u56fd\u7684\u5f00\u53d1\u4eba\u5458\u5e73\u5747\u4ece15\u5c81\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u3002\n\u5168\u4e16\u754c\u5927\u7ea675%\u7684\u53d7\u8bbf\u8005\u81f3\u5c11\u5b8c\u6210\u4e86\u76f8\u5f53\u4e8e\u5b66\u58eb\u5b66\u4f4d\u6216\u66f4\u9ad8\u7684\u5b66\u4f4d\u3002\u8fd9\u4e0e\u6211\u4eec\u524d\u51e0\u5e74\u770b\u5230\u7684\u60c5\u51b5\u662f\u4e00\u81f4\u7684\u3002\n\u6210\u4e3a\u4e13\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6709\u591a\u79cd\u5b66\u672f\u9014\u5f84\u3002\u5728\u4e13\u4e1a\u7f16\u5199\u4ee3\u7801\u5e76\u5728\u5927\u5b66\u5b66\u4e60\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u8d85\u8fc762%\u7684\u4eba\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u3001\u8ba1\u7b97\u673a\u5de5\u7a0b\u6216\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u4f4d\uff0c\u7565\u4f4e\u4e8e10%\u7684\u4eba\u62e5\u6709\u5176\u4ed6\u5de5\u7a0b\u9886\u57df\u7684\u5b66\u4f4d\u3002\u6709\u8da3\u7684\u662f\uff0c\u51e0\u4e4e10%\u7684\u53d7\u8bbf\u8005\u62e5\u6709\u4e0e\u5546\u4e1a\u76f8\u5173\u7684\u5b66\u4f4d\uff0c\u6216\u8005\u662f\u4eba\u6587\u3001\u793e\u4f1a\u79d1\u5b66\u6216\u7f8e\u672f\u9886\u57df\u7684\u5b66\u4f4d\u3002\n\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u51e0\u4e4e85%\u7684\u4eba\u8ba4\u4e3a\u6b63\u89c4\u6559\u80b2\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u91cd\u8981\u7684\uff0c\u8fd9\u4e0e\u4f60\u4e0d\u9700\u8981\u6b63\u89c4\u6559\u80b2\u5c31\u80fd\u6210\u4e3a\u5f00\u53d1\u4eba\u5458\u7684\u6d41\u884c\u6210\u8bed\u76f8\u53cd\u3002\u7136\u800c\uff0c\u51e0\u4e4e16%\u7684\u4eba\u8ba4\u4e3a\u8fd9\u6839\u672c\u4e0d\u91cd\u8981\u6216\u4e0d\u5fc5\u8981\u3002\n\u4e0e\u53bb\u5e74\u7684\u6570\u636e\u4e00\u81f4\uff0c\u6211\u4eec\u4ecd\u7136\u770b\u5230\u6709\u8bc1\u636e\u8868\u660e\uff0c\u6709\u8272\u4eba\u79cd\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\u7684\u4ee3\u8868\u6027\u4e0d\u8db3\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u89c2\u5bdf\u6240\u6709\u53d7\u8bbf\u8005\u65f6\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4e00\u4e9b\u6539\u8fdb-\u4e0d\u4ec5\u4ec5\u662f\u90a3\u4e9b\u4e13\u4e1a\u7f16\u7801\u7684\u4eba\u3002\u5c3d\u7ba1\u6bcf\u5e74\u90fd\u5728\u9010\u6b65\u53d8\u5316\uff0c\u4f46\u8981\u63d0\u9ad8\u53c2\u4e0e\u7387\uff0c\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\n\u5f53\u6309\u56fd\u5bb6\u67e5\u770b\u6027\u522b\u8ba4\u540c\u65f6\uff0c\u6211\u4eec\u770b\u5230\u5973\u6027\u4e13\u4e1a\u5f00\u53d1\u5546\u7684\u53c2\u4e0e\u7387\u5404\u4e0d\u76f8\u540c\u3002\u4e0e\u53bb\u5e74\u7684\u8c03\u67e5\u4e00\u81f4\uff0c\u5973\u6027\u5f00\u53d1\u4eba\u5458\u51e0\u4e4e\u5360\u7f8e\u56fd\u5f00\u53d1\u4eba\u5458\u768412%\u3002\u5728\u5fb7\u56fd\u3001\u5df4\u897f\u548c\u6ce2\u5170\u7b49\u56fd\uff0c\u53c2\u4e0e\u7387\u7ea6\u4e3a\u8fd9\u4e2a\u6570\u5b57\u7684\u4e00\u534a\uff0c\u8fd9\u8868\u660e\u8981\u5728\u8be5\u9886\u57df\u5b9e\u73b0\u9002\u5f53\u7684\u6027\u522b\u4ee3\u8868\u6027\uff0c\u4ecd\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u5728\u4e13\u4e1a\u7f16\u5199\u4ee3\u7801\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c\u8fd192%\u662f\u7537\u6027\u3002\n\u5728\u6211\u4eec\u7684\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e0d\u540c\u5f00\u53d1\u4eba\u5458\u89d2\u8272\u7684\u7537\u6027\u548c\u5973\u6027\u7684\u4ee3\u8868\u6027\u4e0d\u540c\u3002\u6240\u6709\u7c7b\u522b\u7684\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u8ba4\u4e3a\u81ea\u5df1\u662f\u7537\u6027\u7684\u90fd\u6bd4\u5973\u6027\u591a\u5f97\u591a\uff0c\u4f46\u7537\u6027\u548c\u5973\u6027\u7684\u6bd4\u4f8b\u6709\u6240\u4e0d\u540c\u3002\u7ebf\u4e0a\u7684\u5f00\u53d1\u5546\u7c7b\u578b\u7684\u53d7\u8bbf\u8005\u6bd4\u5e73\u5747\u6c34\u5e73\u66f4\u6709\u53ef\u80fd\u662f\u7537\u6027\uff0c\u800c\u865a\u7ebf\u4ee5\u4e0b\u7684\u5f00\u53d1\u5546\u7684\u53d7\u8bbf\u8005\u6bd4\u5e73\u5747\u6c34\u5e73\u66f4\u6709\u53ef\u80fd\u662f\u5973\u6027\u3002\u6570\u636e\u79d1\u5b66\u5bb6\u6216\u5b66\u672f\u7814\u7a76\u4eba\u5458\u7684\u7537\u6027\u53ef\u80fd\u6027\u662f\u5973\u6027\u768410\u500d\u5de6\u53f3\uff0c\u800c\u7cfb\u7edf\u7ba1\u7406\u5458\u6216DevOps\u4e13\u5bb6\u7684\u7537\u6027\u53ef\u80fd\u6027\u662f\u5973\u6027\u768425-30\u500d\u3002\u5973\u6027\u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u3001\u8bbe\u8ba1\u5e08\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u6570\u636e\u5206\u6790\u5e08\u3001QA\u6216\u6d4b\u8bd5\u5f00\u53d1\u4eba\u5458\u3001\u79d1\u5b66\u5bb6\u548c\u6559\u80b2\u5de5\u4f5c\u8005\u7684\u4ee3\u8868\u6027\u6700\u9ad8\u3002\n\u5f53\u6211\u4eec\u5206\u6790\u81ea\u4ece\u5b66\u4e60\u6309\u6027\u522b\u7f16\u7801\u4ee5\u6765\u7684\u5dee\u5f02\u65f6\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e9b\u8bb0\u5fc6\u95ee\u9898\u3002\u867d\u7136\u4e0e\u53bb\u5e74\u7684\u8c03\u67e5\u76f8\u6bd4\uff0c\u6211\u4eec\u770b\u5230\u7537\u6027\u572810\u5c81\u81f314\u5c81\u65f6\u6709\u4e86\u4e00\u4e9b\u6539\u5584\uff0c\u4f46\u6211\u4eec\u53d1\u73b010\u5c81\u523014\u5c81\u7684\u5973\u6027\u6bd4\u4f8b\u6709\u4e86\u5f88\u5927\u7684\u4e0b\u964d\u3002\u8fd9\u4e0e\u5176\u4ed6\u7814\u7a76\u4e00\u81f4\uff0c\u5373\u5973\u6027\u79bb\u5f00\u79d1\u6280\u5de5\u4f5c\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u7537\u6027\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u8981\u6709\u6240\u4f5c\u4e3a\uff0c\u5e76\u5728\u53cd\u6620\u793e\u4f1a\u7684\u884c\u4e1a\u4e2d\u770b\u5230\u6027\u522b\u5e73\u7b49\uff0c\u7559\u4f4f\u4eba\u624d\u662f\u5173\u952e\u3002\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u4ec5\u8981\u96c7\u4f63\u6765\u81ea\u4e0d\u540c\u80cc\u666f\u7684\u4eba\uff0c\u8fd8\u8981\u521b\u9020\u4e00\u4e2a\u8ba9\u4ed6\u4eec\u611f\u5230\u88ab\u7eb3\u5165\u5e76\u80fd\u591f\u8301\u58ee\u6210\u957f\u7684\u73af\u5883\u3002\n\u5728\u53d7\u8bbf\u8005\u4e2d\uff0c\u8fd115%\u7684\u4eba\u8bf4\u4ed6\u4eec\u6709\u67d0\u79cd\u7c7b\u578b\u7684\u7126\u8651\u3001\u60c5\u7eea\u6216\u60c5\u7eea\u969c\u788d\u3002\u5f53\u89c2\u5bdf\u8eab\u4f53\u80fd\u529b\u7684\u5dee\u5f02\u65f6\uff0c\u5927\u7ea62%\u7684\u53d7\u8bbf\u8005\u80fd\u529b\u4e0d\u540c\uff0c\u6bd4\u5982\u5931\u660e/\u89c6\u529b\u56f0\u96be\u6216\u5931\u806a/\u542c\u529b\u56f0\u96be\u3002\u8fd9\u7a81\u663e\u4e86\u5f00\u53d1\u6613\u4e8e\u8bbf\u95ee\u7684\u8f6f\u4ef6\u548c\u521b\u5efa\u80fd\u591f\u5bb9\u7eb3\u4e0d\u540c\u80fd\u529b\u7684\u4eba\u7684\u516c\u53f8\u7684\u91cd\u8981\u6027\u3002\n\u5728\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u7684\u53d7\u8bbf\u8005\u4e2d\uff0c70%\u7684\u4eba\u5e74\u9f84\u572835\u5c81\u4ee5\u4e0b\uff0c\u7ea65%\u7684\u4eba\u5e74\u9f84\u572850\u5c81\u6216\u4ee5\u4e0a\u3002\n\u5f53\u6211\u4eec\u5c06\u8c03\u67e5\u5bf9\u8c61\u7684\u5e74\u9f84\u6309\u56fd\u5bb6\u7ec6\u5206\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u5317\u7f8e\u548c\u897f\u6b27\u7684\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u5e74\u9f84\u504f\u5927\uff0c\u4e0e\u5176\u4ed6\u5730\u533a\u76f8\u6bd4\u62e5\u6709\u66f4\u591a\u7684\u7f16\u7801\u7ecf\u9a8c\u3002\n\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0cJavaScript\u8fde\u7eed\u7b2c\u516b\u5e74\u4fdd\u6301\u7740\u6700\u5e38\u7528\u7f16\u7a0b\u8bed\u8a00\u7684\u5730\u4f4d\u3002\u518d\u5f80\u4e0b\u770b\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u4e86TypeScript\u7684\u9002\u5ea6\u589e\u957f\uff0c\u5728\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e0a\u7565\u5fae\u8d85\u8fc7\u4e86C\u8bed\u8a00\u3002\u6b64\u5916\uff0cRuby\u57282017\u5e74\u521a\u521a\u8fdb\u5165\u8fd9\u4efd\u699c\u5355\u7684\u524d10\u540d\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0b\u964d\uff0c\u88abGo\u548cKotlin\u7b49\u66f4\u65b0\u3001\u66f4\u65f6\u5c1a\u7684\u6280\u672f\u8d85\u8d8a\u3002\n\u5f53\u7eaf\u7cb9\u4e13\u6ce8\u4e8eweb\u6846\u67b6\u65f6\uff0c\u6211\u4eec\u770b\u5230jQuery\u4ecd\u7136\u662f\u738b\u8005\uff0c\u4f46\u662f\u4e00\u5e74\u6bd4\u4e00\u5e74\u6162\u6162\u5730\u8f93\u7ed9\u4e86React.js\u548cANGLING\u3002\u6211\u4eec\u786e\u5b9e\u770b\u5230\u4e86\u4e00\u4e9b\u6574\u5408\uff0c\u56e0\u4e3a\u8d85\u8fc735%\u7684\u53d7\u8bbf\u8005\u4f7f\u7528jQuery\uff0cReaction\uff0c\u4e00\u4e2a\u7248\u672c\u7684\u89d2\u5ea6(\u7ec4\u5408\u4e86\u89d2\u5ea6\uff0c\u4ee3\u8868\u89d2\u5ea62+\uff0c\u548cAngular.js)\u6216ASP.NET\u98ce\u683c(ASP.NET\u6216ASP.NET Core)\u3002\n\u4e0e\u53bb\u5e74\u7c7b\u4f3c\uff0c\u6211\u4eec\u8be2\u95ee\u4e86\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u4f7f\u7528\u7684\u8bb8\u591a\u5176\u4ed6\u6742\u9879\u6280\u672f\u3002Node.js\u8fde\u7eed\u7b2c\u4e8c\u5e74\u4f4d\u5c45\u699c\u9996\uff0c\u56e0\u4e3a\u6709\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u4f7f\u7528Node.js\u3002\u6211\u4eec\u8fd8\u770b\u5230\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u6280\u672f(\u5982Pandas\u3001TensorFlow\u548cTorch/PyTorch)\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u5168\u9762\u589e\u957f\u3002\n\u5728\u8003\u5bdf\u6570\u636e\u5e93\u6280\u672f\u65f6\uff0c\u7ed3\u679c\u4e0e\u6211\u4eec\u53bb\u5e74\u89c2\u5bdf\u5230\u7684\u7ed3\u679c\u57fa\u672c\u4e00\u81f4\u3002MySQL\u4e00\u76f4\u4f4d\u5c45\u699c\u9996\uff0c\u7d27\u968f\u5176\u540e\u7684\u662fPostgreSQL\u548cMicrosoft SQL Server\u3002\u7136\u800c\uff0c\u6211\u4eec\u770b\u5230Firebase\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u7565\u6709\u4e0a\u5347\uff0c\u4eca\u5e74\u5b83\u7565\u5fae\u8d85\u8fc7\u4e86Elasticsearch\u3002\nLinux\u548cWindows\u4fdd\u6301\u4e86\u5927\u591a\u6570\u6d41\u884c\u5e73\u53f0\u7684\u699c\u9996\u4f4d\u7f6e\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u4eca\u5e74\u5df2\u7ecf\u7528\u5b83\u4eec\u505a\u4e86\u5f00\u53d1\u5de5\u4f5c\u3002\u6211\u4eec\u8fd8\u770b\u5230\u5bb9\u5668\u6280\u672f(\u5982Docker\u548cKubernetes)\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u9010\u5e74\u589e\u957f\u3002\n\u8fde\u7eed\u4e94\u5e74\uff0cRust\u4e00\u76f4\u4f4d\u5c45\u6700\u53d7\u6b22\u8fce\u7f16\u7a0b\u8bed\u8a00\u7684\u699c\u9996\u3002\u4e0e\u53bb\u5e74\u76f8\u6bd4\uff0cTyescript\u6392\u540d\u7b2c\u4e8c\uff0c\u8d85\u8fc7\u4e86Python\u3002\u6211\u4eec\u4e5f\u770b\u5230\u56f4\u68cb\u5927\u5e45\u589e\u957f\uff0c\u4ece\u53bb\u5e74\u7684\u7b2c10\u4f4d\u4e0a\u5347\u5230\u7b2c5\u4f4d\u3002\nVBA\u3001Objective C\u548cPerl\u5728\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u8bed\u8a00\u4e2d\u540d\u5217\u524d\u8305-\u8fd9\u4e9b\u8bed\u8a00\u76ee\u524d\u6709\u5f88\u9ad8\u6bd4\u4f8b\u7684\u5f00\u53d1\u4eba\u5458\u5728\u4f7f\u7528\u5b83\u4eec\uff0c\u4f46\u6ca1\u6709\u5174\u8da3\u7ee7\u7eed\u8fd9\u6837\u505a\u3002\n\u5982\u679c\u6211\u4eec\u770b\u4e00\u770b\u5f00\u53d1\u4eba\u5458\u62a5\u544a\u8bf4\u4ed6\u4eec\u4e0d\u4f7f\u7528\u4f46\u60f3\u5b66\u4e60\u7684\u6280\u672f\uff0cPython\u8fde\u7eed\u7b2c\u56db\u5e74\u4f4d\u5c45\u699c\u9996\u3002\u6211\u4eec\u4e5f\u770b\u5230\u4eba\u4eec\u5bf9\u5b66\u4e60\u201c\u9508\u201d\u7684\u5174\u8da3\u7565\u6709\u589e\u52a0\u3002\nASP.NET Core\u662f\u6700\u53d7\u6b22\u8fce\u7684Web\u6846\u67b6\uff0c\u51fb\u8d25\u4e86React.js\u3002\u76d6\u8328\u6bd4\u662f\u6b64\u6b21\u8c03\u67e5\u7684\u65b0\u4eba\uff0c\u5df2\u7ecf\u6392\u5728\u7b2c5\u4f4d\uff0c\u53d7\u523060%\u7684\u53d7\u8bbf\u8005\u7684\u559c\u7231\u3002\n\u5c3d\u7ba1Angular.js\u662f\u6700\u6d41\u884c\u7684Web\u6846\u67b6\u4e4b\u4e00\uff0c\u4f46\u5b83\u4e5f\u88ab\u8ba4\u4e3a\u662f\u6700\u53ef\u6015\u7684\u3002\n\u5728\u5176\u4ed6\u5269\u4f59\u7684\u6846\u67b6\u3001\u5e93\u548c\u5de5\u5177\u4e2d\uff0c.NET Core\u548cTorch/PyTorch\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\u3002DevOps\u3001Tools\u3001Chef\u548cPuppet\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u6280\u672f\u3002\n\u770b\u770b\u6570\u636e\u5e93\u6280\u672f\uff0cRedis\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\uff0c\u7d27\u968f\u5176\u540e\u7684\u662fPostgreSQL\u548cElasticsearch\u3002\u636e\u4f20\u95fb\uff0cStack Overflow\u5728\u6211\u4eec\u7684\u6280\u672f\u5806\u6808\u4e2d\u4f7f\u7528Redis\u548cElasticsearch\u5df2\u7ecf\u6709\u5f88\u591a\u5e74\u4e86\uff0c\u4ece\u516c\u53f8\u6210\u7acb\u4e4b\u521d\u5c31\u5f00\u59cb\u4e86\u3002IBMDB2\u88ab\u8bc4\u4e3a\u6700\u53ef\u6015\u7684\u6570\u636e\u5e93\uff0c\u800cMongoDB\u4ecd\u7136\u662f\u5f00\u53d1\u4eba\u5458\u6700\u60f3\u5b66\u4e60\u7684\u6570\u636e\u5e93\u6280\u672f\u3002\nLinux\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5e73\u53f0\u3002\u5bb9\u5668\u6280\u672fDocker\u548cKubernetes\u5206\u522b\u4f4d\u5c45\u6700\u53d7\u6b22\u8fce\u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4f4d\u3002\u5b83\u4eec\u4e5f\u662f\u5f00\u53d1\u4eba\u5458\u6700\u60f3\u5b66\u4e60\u7684\u5e73\u53f0\u4e4b\u4e00\uff0c\u8fd9\u8868\u660e\u5b83\u4eec\u662f\u591a\u4e48\u53d7\u6b22\u8fce\u3002WordPress\u4ecd\u7136\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\uff0c\u4f46\u4eca\u5e74\u65b0\u52a0\u5165\u699c\u5355\u7684\u677e\u5f1b\u5e94\u7528\u7a0b\u5e8f\u548c\u96c6\u6210\u5e94\u7528\u7a0b\u5e8f\u6392\u5728\u7b2c\u56db\u4f4d\u3002\n\u51e0\u4e4e\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u4f7f\u7528Windows\u4f5c\u4e3a\u4ed6\u4eec\u7684\u4e3b\u8981\u64cd\u4f5c\u7cfb\u7edf\u3002\u5176\u4f59\u7684\u51e0\u4e4e\u5e73\u5747\u5206\u914d\u7ed9\u4e86MacOS\u548cLinux\u7684\u4e00\u79cd\u53e3\u5473\u3002\n\u5728\u56de\u5e94\u8c03\u67e5\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u4e2d\uff0c\u8fd182%\u7684\u4eba\u5c06GitHub\u7528\u4f5c\u534f\u4f5c\u5de5\u5177\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u4eba\u4f7f\u7528Slake\u3002\n\u5728\u7814\u7a76\u65b0\u5de5\u5177\u65f6\uff0c\u8d85\u8fc7\u56db\u5206\u4e4b\u4e09\u7684\u53d7\u8bbf\u8005\u559c\u6b22\u901a\u8fc7\u514d\u8d39\u8bd5\u7528\u6765\u4eb2\u81ea\u8bd5\u7528\u8be5\u5de5\u5177\u3002\u793e\u4ea4\u8bc1\u660e\u4e5f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8d85\u8fc760%\u7684\u5f00\u53d1\u4eba\u5458\u4f1a\u8be2\u95ee\u4ed6\u4eec\u77e5\u9053\u7684\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\uff0c\u6216\u8005\u8bbf\u95ee\u5f00\u53d1\u4eba\u5458\u793e\u533a\uff0c\u5982Stack Overflow\u3002\n\u5173\u4e8e\u5176\u7ec4\u7ec7\u5185\u7684\u6280\u672f\u91c7\u8d2d\uff0c\u7ea657%\u7684\u53d7\u8bbf\u8005\u5177\u6709\u4e00\u5b9a\u6216\u5f88\u5927\u7684\u5f71\u54cd\u529b\u3002\n\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u4f7f\u7528Perl\u3001Scala\u548cGo\u7684\u53d7\u8bbf\u8005\u5f80\u5f80\u85aa\u8d44\u6700\u9ad8\uff0c\u5e73\u5747\u85aa\u8d44\u7ea6\u4e3a75000\u7f8e\u5143\u3002\u6709\u8da3\u7684\u662f\uff0cPerl\u662f\u6700\u4ee4\u4eba\u754f\u60e7\u7684\u8bed\u8a00\u4e4b\u4e00\uff0c\u6240\u4ee5\u8fd9\u4efd\u9ad8\u85aa\u53ef\u80fd\u662f\u4e3a\u4e86\u5f25\u8865\u60f3\u8981\u4f7f\u7528\u8be5\u6280\u672f\u7684\u5f00\u53d1\u4eba\u5458\u7684\u532e\u4e4f\u3002\u5982\u679c\u53ea\u770b\u7f8e\u56fd\uff0cScala\u5f00\u53d1\u4eba\u5458\u7684\u85aa\u6c34\u5f80\u5f80\u6700\u9ad8\u3002\n\u6211\u4eec\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\u5b66\u4e60\u4e00\u95e8\u65b0\u8bed\u8a00\u6216\u6846\u67b6\u7684\u9891\u7387\u3002\u7ea675%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u81f3\u5c11\u6bcf\u9694\u51e0\u4e2a\u6708\u6216\u6bcf\u5e74\u5b66\u4e60\u4e00\u9879\u65b0\u6280\u672f\u3002\u8fd9\u8868\u660e\u521b\u65b0\u53d1\u751f\u5f97\u6709\u591a\u5feb\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u65ad\u5730\u5b66\u4e60\u4fdd\u6301\u4ed6\u4eec\u7684\u6280\u80fd\u65b0\u9c9c\u3002\n\u6211\u4eec\u8be2\u95ee\u53d7\u8bbf\u8005\u5728\u9047\u5230\u95ee\u9898\u65f6\u4f1a\u600e\u4e48\u505a\u3002\u51e0\u4e4e90%\u7684\u4eba\u62a5\u544a\u8bf4\u4ed6\u4eec\u8bbf\u95ee\u4e86Stack Overflow\u3002\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u9f13\u821e\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u6211\u4eec\u6b63\u5728\u6210\u529f\u5b8c\u6210\u6211\u4eec\u7684\u4f7f\u547d\uff0c\u5e2e\u52a9\u4eba\u4eec\u83b7\u5f97\u4ed6\u4eec\u5b8c\u6210\u5de5\u4f5c\u6240\u9700\u7684\u77e5\u8bc6\u3002\n\u6211\u4eec\u7b2c\u4e00\u6b21\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\uff0c\u5f53\u4ed6\u4eec\u5728\u7ebf\u641c\u7d22\u7f16\u7801\u89e3\u51b3\u65b9\u6848\u65f6\u611f\u89c9\u5982\u4f55\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u94fe\u63a5\u662f\u7d2b\u8272\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u8bbf\u95ee\u4e86\u8be5\u94fe\u63a5\u3002\u5927\u7ea6\u4e00\u534a\u7684\u53d7\u8bbf\u8005\u9009\u62e9\u4e86\u201c\u4f60\u597d\uff0c\u8001\u670b\u53cb\u201d\uff0c\u8fd9\u8868\u660e\u5728\u67d0\u4e9b\u4efb\u52a1\u4e2d\u8fd9\u53ef\u80fd\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8d85\u8fc7210\u4e07\u4eba\u8bbf\u95ee\u4e86\u5982\u4f55\u9000\u51faVim\u7f16\u8f91\u5668\uff1f\u5173\u4e8e\u5806\u6808\u6ea2\u51fa\u7684\u95ee\u9898\u3002\n\u8d85\u8fc792%\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u81f3\u5c11\u662f\u517c\u804c\u7684\u3002\u5927\u7ea612%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u662f\u5b66\u751f\u3002\n\u4e0e\u5728\u8c03\u67e5\u6570\u636e\u4e2d\u6709\u826f\u597d\u4ee3\u8868\u6027\u7684\u5176\u4ed6\u56fd\u5bb6\u76f8\u6bd4\uff0c\u5370\u5ea6\u7684\u5b66\u751f\u6bd4\u4f8b\u660e\u663e\u66f4\u9ad8\u3002\u5728\u6240\u6709\u8fd9\u4e9b\u5730\u70b9\uff0c\u8d85\u8fc770%\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u5168\u804c\u53d7\u96c7\u7684\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u611f\u5230\u6ee1\u610f\uff0c\u8fd165%\u7684\u4eba\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u7565\u6709\u6216\u975e\u5e38\u6ee1\u610f\u3002\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u5927\u7ea625%\u7684\u4eba\u7565\u6709\u5230\u975e\u5e38\u4e0d\u6ee1\u610f\u3002\n\u8fd183%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u8981\u4e48\u4e0d\u79ef\u6781\u5bfb\u627e\u65b0\u7684\u5de5\u4f5c\u673a\u4f1a\uff0c\u8981\u4e48\u5bf9\u65b0\u7684\u5de5\u4f5c\u673a\u4f1a\u4e0d\u611f\u5174\u8da3\u3002\u8fd9\u4e0e\u6211\u4eec\u5173\u4e8e\u5f00\u53d1\u4eba\u5458\u5de5\u4f5c\u6ee1\u610f\u5ea6\u7684\u53d1\u73b0\u662f\u4e00\u81f4\u7684--\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u5f88\u6ee1\u610f\u3002\n\u7eb5\u89c2\u62e5\u6709\u5927\u91cf\u5f00\u53d1\u4eba\u5458\u7684\u51e0\u4e2a\u56fd\u5bb6\uff0c\u5de5\u4f5c\u6ee1\u610f\u5ea6\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002\u5728\u7f8e\u56fd\u3001\u5370\u5ea6\u3001\u82f1\u56fd\u3001\u5fb7\u56fd\u548c\u52a0\u62ff\u5927\uff0c\u8d85\u8fc780%\u7684\u5f00\u53d1\u4eba\u5458\u6ca1\u6709\u79ef\u6781\u5bfb\u627e\u5de5\u4f5c\uff0c\u4f46\u81f3\u5c11\u6709\u4e00\u534a\u7684\u4eba\u613f\u610f\u63a5\u53d7\u65b0\u7684\u673a\u4f1a\u3002\n\u5982\u679c\u6211\u4eec\u6309\u5de5\u4f5c\u804c\u80fd\u7ec6\u5206\u6570\u636e\uff0c\u8d85\u8fc720%\u7684\u5b66\u672f\u7814\u7a76\u4eba\u5458\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u548c\u6570\u636e/\u4e1a\u52a1\u5206\u6790\u5e08\u6b63\u5728\u79ef\u6781\u5bfb\u627e\u65b0\u5de5\u4f5c\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u8bbe\u8ba1\u5e08\u3001\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u548c\u79fb\u52a8\u5f00\u53d1\u4eba\u5458\uff0c\u8fd9\u4e00\u6bd4\u4f8b\u4e3a19%\u3002\u8fd9\u4e0e\u8fc7\u53bb\u8c03\u67e5\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5728\u8fc7\u53bb\u7684\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u8bbe\u8ba1\u5e08\u662f\u5de5\u4f5c\u6ee1\u610f\u5ea6\u6700\u4f4e\u7684\u89d2\u8272\u4e4b\u4e00\u3002\n\u6211\u4eec\u7b2c\u4e00\u6b21\u8be2\u95ee\u5f00\u53d1\u4eba\u5458\u662f\u4ec0\u4e48\u9a71\u4f7f\u4ed6\u4eec\u5bfb\u627e\u65b0\u5de5\u4f5c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u66f4\u597d\u7684\u85aa\u916c\u662f\u53d7\u8bbf\u8005\u6700\u5e38\u89c1\u7684\u56e0\u7d20\uff0c70%\u7684\u53d7\u8bbf\u8005\u6307\u51fa\u66f4\u9ad8\u7684\u85aa\u916c\u5f88\u91cd\u8981\u3002\u60f3\u8981\u4f7f\u7528\u65b0\u6280\u672f\u662f\u7b2c\u4e8c\u4e2a\u6700\u53d7\u6b22\u8fce\u7684\u56e0\u7d20\uff0c\u8fd9\u4e0e\u3002\n..", "note_en": "For almost a decade, Stack Overflow\u2019s annual Developer Survey held the honor of being the largest survey of people who code around the world. This year, rather than aiming to be the biggest, we set out to make our survey more representative of the diversity of programmers worldwide. That said, the survey is still big. This year\u2019s survey was taken by just over 65,000 people.\n  In our efforts to reach beyond the Stack Overflow network and seek representation from a greater diversity of coders, we advertised the survey less on our own channels than in previous years and sought ways to earn responses from those who may not frequent our sites. This approach included social promotion and outreach to underrepresented coders.\n  While we saw a lift in underrepresented groups, the difference in representation isn\u2019t as large as we had hoped. There was an uptick in some race and ethnicity groups, notably those of Hispanic or Latino/a/x and Black or of African descent, while other races and ethnicities remained similar or decreased. Similarly, we saw a slight increase in female-gendered respondents, while non-binary, genderqueer, or non-conforming remained the same. We acknowledge that we have a lot of work to do, and the data we obtain in our annual survey helps us make changes and set goals to improve the welcomeness and inclusiveness of our community.\n    Working with the data at hand, we broke down our analysis by demographics where applicable. Look for the icon to see where demographics have an interesting impact. Also be sure to check out the topics that were new to this year\u2019s survey, like questions regarding DevOps and working overtime.\n  We also need to point out that this year\u2019s survey was taken in February, before COVID-19 was declared a pandemic by the World Health Organization and before the virus impacted every country in the world. Please keep the timing of the survey in mind when reviewing information such as job and salary data.\n  Finally, for those who want to dive into the results yourself, the anonymized results of the survey are available for download under the Open Database License (ODbL). We look forward to seeing what you find\u2014if you share on social media, be sure to tag us!\n  After a consistent rise over the last five years, Python fell from second last year to third this year on the list of most loved technologies, being beat out by TypeScript. Rust held the top spot for most loved technology for the fifth year in a row.\n  Most loved languages  \u2192\n  Site reliability engineers and DevOps specialists remain among the highest paid individual contributor roles. 80% of respondents believe that DevOps is at least somewhat important, and 44% work at organizations with at least one dedicated DevOps employee.\n  Global salaries  \u2192\n  52% of respondents think \u201cHello, old friend\u201d when they search for a coding solution online and find that the first result link is purple because they\u2019ve already visited the link.\n  Already visited feeling  \u2192\n  When asked what steps to take when stuck on a coding problem, 90% of respondents indicated they visit Stack Overflow.\n  When you get stuck  \u2192\n  More than 75% of developers work overtime at least occasionally -- one to two days per quarter. 25% work overtime 1-2 days per week or more.\n  Overtime  \u2192\n  Australia respondents reported the highest average amount of coding experience at 16.9 years, followed by developers in United Kingdom and United States. In correlation, respondents from the United States and United Kingdom maintain the highest average age, at 33.7 and 33.1 years, respectively.\n  Experience by country  \u2192\n  More than 40% of respondents reported that they are members of other online developer communities beyond Stack Overflow.\n  Other developer communities  \u2192\n  More than 15% of people find Stack Overflow at least somewhat more welcome than last year. We still have work to do, but it\u2019s a start.\n  Engaging together  \u2192\n  We still see evidence that people of color are underrepresented among professional developers, but we do see some improvement when we include all developers, not just those who code professionally.\n  Race and ethnicity  \u2192\n  Each month, about 50 million people visit Stack Overflow to learn, share, and build their careers. Industry estimates suggest that 20-25 million of these people are professional developers and university-level students. The vast majority of our survey respondents this year said they are professional developers or who code sometimes as part of their work or students preparing for such a career.\n See our  Methodology section for details on how developers around the world accessed our survey.\n  About 55% of respondents identify as full-stack developers, and about 20% consider themselves mobile developers. The median number of developer type identifications per respondent this year is three, and the most common combinations include back-end, front-end, and full-stack developer. Pairs that are highly correlated include database administrator and system administrator, DevOps specialist and site reliability engineer, academic researcher and scientist, and designer and front-end developer.\n Survey weighting is an approach used to analyze survey data when the survey sample doesn&#39;t match the underlying population well. For example, in our survey this year, 12% of US respondents identify as women, but data from the US Bureau of Labor Statistics estimates that women&#39;s participation in the software developer workforce is about twice that, more like 20%. We can use survey weighting to adjust for the mismatch between our survey sample and the population of developers. We know that there is a difference in developer type representation by gender, so let&#39;s compare the overall proportions in our raw results for the United States with weighted proportions, assuming that we undersampled gender minorities at the rate indicated by the BLS report. When we use weighting, we see small increases in the representation of developer roles that have the most representation from women, like Data Scientists and Academic Researchers, and decreases in others with low representation from women, like DevOps.\n We know there are more ways in which our survey sample doesn&#39;t match the underlying population of developers than only gender (including frequency of use of Stack Overflow), and the United States is not the only country for which we expect such a mismatch. The reason we&#39;re using this specific example of weighting here is that it is one where we know we have systemic sampling issues and we have an estimate about the expected population proportion. We can demonstrate the effect of our survey sample on our results, both in direction and magnitude.\n  Many developers work on code outside of work. About 78% of our respondents say that they code as a hobby. Other responsibilities outside of software can reduce developers&#39; engagement in coding as a hobby; developers who say they have children or other caretaking responsibilities are less likely to code as a hobby. Respondents who are women are also less likely to say they code as a hobby.\n  There is a wide range of experience among developers who visit Stack Overflow, from seasoned developers who learned to code more than 30 years ago (approximately 15%), to a sizable percentage of developers (17%) who learned how to code less than five years ago. Of the professional developers on Stack Overflow, approximately 40% learned to code less than 10 years ago. See more on how these  experience levels vary by gender.\n    Technical executives and engineering managers tend to have the most professional coding experience. Among the individual contributor roles, the most experienced developers tend to be system administrators, database administrators, and developers who create desktop and embedded applications. On the other end of the spectrum, web developers, academic researchers, and data scientists tend to have fewer years of experience. Part of this could be explained by the proliferation of coding bootcamps that teach web development and the amount of data scientists entering the field from academia.\n  Of all of the respondents, over 54% wrote their first line of code, whether it was a web page or a hello world program, by the age of 16. People who wrote their first line of code in their 20s accounted for 13% of the respondents. When looking at the average age by country, respondents from countries such as Brazil and India tend to start writing code a full two years later compared to developers in countries such as Poland and Germany, who on average start coding by the age of 15.\n  Approximately 75% of respondents worldwide completed at least the equivalent of a bachelor&#39;s degree or higher. This is consistent with what we&#39;ve seen in previous years.\n  There are a variety of academic paths to becoming a professional software developer. Of the respondents that write code professionally and studied at the university level, over 62% have a degree in computer science, computer engineering, or software engineering and just under 10% have a degree in another engineering field. Interestingly enough, almost 10% of the respondents have a business related degree or a degree in a humanities, social science, or fine arts field of study.\n  Almost 85% of the respondents that are professional developers feel that formal education is at least somewhat important, which is contrary to the popular idiom that you don&#39;t need formal education to become a developer. However, almost 16% believe that it is not at all important or necessary.\n  Consistent with the data from last year, we still see evidence that people of color are underrepresented among professional developers. However, we see some improvement when we look at all respondents\u2014not just the ones who code professionally. Despite a gradual change year over year, there is still much work to do to increase participation rates.\n  When looking at gender identity by country, we see various participation rates of professional developers who are women. Consistent with last year&#39;s survey, women developers account for almost 12% of developers in the US. In countries such as Germany, Brazil, and Poland, the participation rate is about half of that, which goes to show there is still much work to do to reach appropriate gender representation in the field. Among the respondents that code professionally, almost 92% are men.\n    We see varying representation from men and women in different developer roles on our survey. All categories have dramatically more developers who identify as men than women, but the ratio of men to women varies. Developer types above the line have respondents that are more likely than average to be men, and those below the dotted line have respondents who are more likely than average to be women. Developers who are data scientists or academic researchers are about 10 times more likely to be men than women, while developers who are system admins or DevOps specialists are 25-30 times more likely to be men than women. Women have the highest representation as front-end developers, designers, data scientists, data analysts, QA or test developers, scientists, and educators.\n  When we break down differences in years since learning to code by gender, we notice some retention problems. We see a big drop off at the 10-14 year mark when compared to men, though we&#39;ve seen some improvement from last year&#39;s survey. This is consistent with other research that women leave tech jobs at higher rates than men. If we truly want to make a difference and see gender parity in the industry that is reflective of society, retention is key. It is important to not only hire people from diverse backgrounds, but to also create an environment where they feel included and can thrive.\n    Among the respondents, almost 15% said they have some type of anxiety, mood, or emotional disorder. When looking at differences in physical ability, around 2% of respondents are differently-abled, such as being blind / having difficulty seeing or being deaf / having difficulty hearing. This underscores the importance of creating accessible software and creating companies that accomodate differently-abled people.\n  Of the respondents that are professional developers, 70% are under 35 and about 5% are 50 years old or older.\n  When we break down the age of the survey respondents by country, we see that developers in North America and Western Europe tend to skew older and have more coding experience compared to other regions.\n  Unsurprisingly, for the eighth year in a row, JavaScript has maintained it&#39;s stronghold as the most commonly used programming language. Going further down the list, we also see moderate gains for TypeScript, edging out C in terms of popularity. Additionally, Ruby, once in the top 10 of this list as recently as 2017, has declined, being surpassed by newer, trendier technologies such as Go and Kotlin.\n  When focusing purely on web frameworks, we see that jQuery is still king, but is slowly losing ground to React.js and Angular year over year. We do see some consolidation, as more than 35% of respondents use jQuery, React, a version of Angular (combining Angular, which represents Angular 2+, and Angular.js) or a flavor of ASP.NET (ASP.NET or ASP.NET Core).\n  Similar to last year, we asked about many of the other miscellaneous technologies that developers are using. For the second year in a row, Node.js takes the top spot, as it is used by half of the respondents. We also see growth across the board in the popularity of data analysis and machine learning technologies such as Pandas, TensorFlow, and Torch/PyTorch.\n  When looking at database technologies, the results are mostly consistent with what we observed last year. MySQL has maintained the top spot, followed by PostgreSQL and Microsoft SQL Server. However, we see some slight growth in the popularity of Firebase, which edged out Elasticsearch this year.\n  Linux and Windows maintain the top spots for most popular platforms, with over half of the respondents reporting that they have done development work with them this year. We also see some year over year growth in the popularity of container technologies such as Docker and Kubernetes.\n  For five years running, Rust has taken the top spot as the most loved programming language. TypeScript is second surpassing Python compared to last year. We also see big gains in Go, moving up to 5th from 10th last year.\n VBA, Objective C, and Perl hold the top spots for the most dreaded languages\u2014languages that had a high percentage of developers who are currently using them, but have no interest in continuing to do so.\n If we look at technologies that developers report that they do not use but want to learn, Python takes the top spot for the fourth year in a row. We also see some modest gains in the interest in learning Rust.\n  ASP.NET Core is the most loved web framework, beating out React.js. Gatsby, a newcomer on the survey, is already sitting at 5th, being loved by 60% of the respondents.\n Although it is amongst the most popular web frameworks, Angular.js is also considered to be the most dreaded.\n  .NET Core and Torch/PyTorch remain the most loved of the other remaining frameworks, libraries and tools. DevOps tools Chef and Puppet are among the most dreaded technologies.\n  Taking a look at database technologies, Redis remains the most loved, followed by PostgreSQL and Elasticsearch. Anecdotally, Stack Overflow has been using both Redis and Elasticsearch in our tech stack for years, since the early days of the company. IBM DB2 ranked as the most dreaded database and MongoDB remains the database technology that developers want to learn the most.\n  Linux remains the most loved platform. Container technologies Docker and Kubernetes rank as the second and third most loved. They are also among the platforms that developers most want to learn, which demonstrates how beloved they are. Wordpress is still the most dreaded, but Slack Apps and integrations, newly added to the list this year, rank high at the number four spot.\n  Almost half of the respondents use Windows as their primary operating system. The rest were almost evenly split between MacOS and a flavor of Linux.\n  Of the professional developers who responded to the survey, almost 82% use GitHub as a collaborative tool and more than half use Slack.\n  When researching new tools, over three-fourths of respondents like to try the tool for themselves via a free trial. Social proof is also important, as over 60% of developers ask other developers they know about it or visit developer communities such as Stack Overflow.\n  With regards to technology purchases within their organization, around 57% of respondents have some or a great deal of influence.\n  Globally, respondents who use Perl, Scala, and Go tend to have the highest salaries, with a median salary around $75k. Interestingly, Perl is amongst the top most dreaded languages, so it&#39;s possible that this high salary is to compensate for the dearth of developers who want to use that technology. When looking only at the US, Scala developers tend to have the highest salaries.\n    We asked developers how frequently they learn a new language or framework. Around 75% of respondents noted that they learn a new technology at least every few months or once a year. This demonstrates how quickly innovations happen and developers are constantly learning to keep their skills fresh.\n  We asked respondents what they do when they get stuck on a problem. Almost 90% reported that they visit Stack Overflow. This is an encouraging sign that we&#39;re succeeding in our mission to help people get access to the knowledge they need to get things done.\n  For the first time, we asked developers how they feel when they search for a coding solution online and the first result link is purple because they already visited the link. About half of respondents chose &#39;Hello, old friend&#39;, which suggests it may be a frequent occurrence for certain tasks. Perhaps this is why over 2.1 million people visited the  &#39;How do I exit the Vim editor?&#39; question on Stack Overflow.\n  Over 92% of professional developers are employed at least part-time. Roughly 12% of all respondents say they are students.\n  India has an noticeably higher proportion of students compared to other countries that are well-represented in the survey data. In all of these locations, more than 70% of developers are employed full-time.\n    Overall, developers tend to be satisfied with their jobs, with almost 65% reporting that they are either slightly or very satisfied with their job. On the other end of the spectrum, around 25% are slightly to very dissatisfied.\n  Almost 83% of respondents reported that they are either not actively looking or interested in new job opportunities. This is consistent with our findings about developer job satisfaction\u2014most developers are happy with their jobs.\n  When looking across several countries with large developer populations, job satisfaction is mostly consistent. In the US, India, UK, Germany, and Canada, over 80% of developers are not actively looking for a job, but at least half are open to new opportunities.\n  If we break out the data by job function, over 20% of academic researchers, data scientists, and data/business analysts are actively looking for a new job, followed closely by designers, game developers, and mobile developers at 19%. This is consistent with findings from past surveys, where we saw that academic researchers and designers were among the roles that had the lowest job satisfaction.\n  For the first time, we asked developers what drove them to look for a new job. Better compensation was by far the most common factor for respondents with 70% of them noting that more pay was important. Wanting to work with new technologies was the second most popular factor, which is consistent w\n......", "posttime": "2020-05-28 08:37:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,2020,\u6ea2\u51fa,overflow,\u5f00\u53d1\u4eba\u5458", "title": "\u5806\u6808\u6ea2\u51fa\u5f00\u53d1\u8005\u8c03\u67e52020\u5e74", "title_en": "Stack Overflow Developer Survey 2020", "transed": 1, "url": "https://insights.stackoverflow.com/survey/2020#overview", "via": "", "real_tags": ["\u5f00\u53d1", "2020", "\u6ea2\u51fa", "overflow", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "57a11c7bea7780e3e02b1052fe74e49e.png", "infoid": 1004009, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u798f\u7279\u5468\u4e09\u5ba3\u5e03\u4e86\u4e00\u6b3e\u65b0\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u5c06\u4f7f\u8b66\u65b9\u80fd\u591f\u6740\u6b7b2013-2019\u5e74\u798f\u7279\u8b66\u5bdf\u62e6\u622a\u5668SUV\u8868\u9762\u53ef\u80fd\u9690\u85cf\u7684\u201c99.9%\u7684\u75c5\u6bd2\u201d\u3002\u8be5\u8f6f\u4ef6\u5df2\u7ecf\u5728\u4e00\u4e9b\u8b66\u533a\u4f7f\u7528\uff0c\u6240\u6709\u5f53\u4ee3\u8f66\u8f86\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\n\u636e\u5e95\u7279\u5f8b\u81ea\u7531\u5a92\u4f53\u62a5\u9053\uff0c\u798f\u7279\u7684\u60f3\u6cd5\u6765\u81ea\u7ebd\u7ea6\u8b66\u5bdf\uff0c\u4ed6\u4eec\u62c5\u5fc3\u5b89\u5168\u800c\u5f7b\u5e95\u5730\u5c06\u65b0\u51a0\u80ba\u708e\u4ece\u8f66\u91cc\u94f2\u9664\u3002\u798f\u7279\u662f\u8fd9\u6837\u63cf\u8ff0\u8fd9\u9879\u6280\u672f\u7684\uff1a\n\u89e3\u51b3\u65b9\u6848\u5f88\u7b80\u5355\uff1a\u5c06\u8f66\u5185\u7684\u75c5\u6bd2\u70d8\u70e4\u81f3\u706d\u6d3b\u3002\u8be5\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u8b66\u5bdf\u62e6\u622a\u5668\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u81ea\u5df1\u7684\u52a8\u529b\u7cfb\u7edf\u548c\u6c14\u5019\u63a7\u5236\u7cfb\u7edf\uff0c\u4f7f\u8f66\u8f86\u80fd\u591f\u5c06\u4e58\u5ba2\u8231\u5185\u7684\u6e29\u5ea6\u63d0\u9ad8\u5230133\u534e\u6c0f\u5ea6\u4ee5\u4e0a1\uff0c\u6bd4\u6700\u70ed\u7684\u65e5\u5b50\u91cc\u7684\u6b7b\u4ea1\u8c37\u8fd8\u8981\u70ed\uff0c\u6301\u7eed15\u5206\u949f-\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u5e2e\u52a9\u6d88\u6bd2\u8f66\u8f86\u63a5\u89e6\u70b9\u3002\n\u4e00\u65e6\u6fc0\u6d3b\uff0c\u8f66\u8f86\u7684\u52a8\u529b\u7cfb\u7edf\u548c\u6c14\u5019\u63a7\u5236\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u534f\u540c\u5de5\u4f5c\uff0c\u63d0\u9ad8\u4e58\u5ba2\u8231\u7684\u6e29\u5ea6\u3002\u8be5\u8f6f\u4ef6\u5c06\u53d1\u52a8\u673a\u9884\u70ed\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\uff0c\u70ed\u91cf\u548c\u98ce\u6247\u8bbe\u7f6e\u90fd\u5728\u9ad8\u6c34\u5e73\u8fd0\u884c\u3002\u8be5\u8f6f\u4ef6\u81ea\u52a8\u76d1\u6d4b\u5ba4\u5185\u6e29\u5ea6\uff0c\u76f4\u5230\u6574\u4e2a\u5ba2\u8231\u8fbe\u5230\u6700\u4f73\u6c34\u5e73\uff0c\u7136\u540e\u5c06\u8be5\u6e29\u5ea6\u4fdd\u630115\u5206\u949f\u3002\ufeff\u3002\n\u4e00\u65e6\u5faa\u73af\u5b8c\u6210\uff0c\u798f\u7279\u5c31\u4f1a\u81ea\u52a8\u8fdb\u5165\u964d\u6e29\u6a21\u5f0f\uff0c\u5e76\u95ea\u70c1\u6307\u793a\u706f\uff0c\u8ba9\u8b66\u5bdf\u77e5\u9053\u5b83\u4f55\u65f6\u8fdb\u5165\u6bcf\u8f86\u81ea\u884c\u8f66\uff0c\u4f55\u65f6\u8f66\u8f86\u53ef\u4ee5\u5b89\u5168\u8fdb\u5165\u3002\n\u4fc4\u4ea5\u4fc4\u5dde\u7acb\u5927\u5b66\u7684\u4e00\u4e2a\u56e2\u961f\u5e2e\u52a9\u7814\u7a76\u4e86\u798f\u7279\u7684\u9002\u5f53\u70ed\u91cf\u548c\u6301\u7eed\u65f6\u95f4\uff0c\u540c\u65f6\u5728\u7ebd\u7ea6\u548c\u6d1b\u6749\u77f6\u8b66\u5bdf\u5c40\u4ee5\u53ca\u5bc6\u6b47\u6839\u5dde\u8b66\u5bdf\u3001\u9a6c\u8428\u8bf8\u585e\u5dde\u8b66\u5bdf\u3001\u4fc4\u4ea5\u4fc4\u5dde\u535a\u5fb7\u66fc\u9547\u8b66\u5bdf\u5c40\u548c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u585e\u7c73\u8bfa\u5c14\u53bf\u8b66\u957f\u529e\u516c\u5ba4\u4f7f\u7528\u7684\u6c7d\u8f66\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\n\u798f\u7279\u4e8e3\u6708\u4e2d\u65ec\u5f00\u59cb\u7814\u7a76\u6e05\u9664\u8b66\u5bdf\u62e6\u622a\u5668\u6c61\u67d3\u7684\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u7684\u53ef\u80fd\u6027\u3002\u4ec5\u4ec5\u4e24\u4e2a\u6708\u540e\uff0c\u8be5\u8f6f\u4ef6\u5c31\u53ef\u4ee5\u5e7f\u6cdb\u4f7f\u7528\u4e86\u3002\u798f\u7279\u8868\u793a\uff0c\u62e5\u6709\u81ea\u5df1\u670d\u52a1\u4e2d\u5fc3\u7684\u5927\u578b\u90e8\u95e8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bca\u65ad\u670d\u52a1\u5de5\u5177\u5b89\u88c5\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u5176\u4ed6\u8f66\u961f\u53ef\u4ee5\u4e0e\u5f53\u5730\u7ecf\u9500\u5546\u5408\u4f5c\uff0c\u4e3a2013-19\u5e74\u7684\u8b66\u7528\u62e6\u622a\u5668\u591a\u529f\u80fd\u8f66\u5b89\u88c5\u8f6f\u4ef6\u3002", "note_en": "Ford announced new software Wednesday that will allow police to kill \u201c99.9 percent of viruses\u201d that may be hiding on surfaces in 2013-2019 Ford Police Interceptor SUVs. The software is already in use in some police precincts and is available for all current-generation vehicles.\n  Ford got the idea from New York police officers who were concerned about safely and thoroughly eradicating Covid-19 from their cars, according to the   Detroit Free Press. Here\u2019s how   Ford describes the technology:\n The solution is simple: Bake the vehicle\u2019s interior until viruses inside are inactivated. Using Police Interceptor Utility\u2019s own powertrain and climate control systems, this software solution enables vehicles to elevate passenger compartment temperatures beyond 133 degrees Fahrenheit1, hotter than Death Valley on its hottest day, for 15 minutes \u2013 long enough to help disinfect vehicle touchpoints.\n Once activated, the vehicle\u2019s powertrain and climate control systems work together automatically to elevate passenger compartment temperatures. The software warms up the engine to an elevated level, and both heat and fan settings operate on high. The software automatically monitors interior temperatures until the entire passenger compartment hits the optimal level, then that temperature is maintained for 15 minutes.\ufeff\n    Once the cycle is complete, the Ford automatically enters a cool down mode, and flashes its lights to let police know when it is entering each cycle and when the vehicles are safe to enter.\n A team from Ohio State University helped research the proper heat and time duration for Ford, while the process was tested in New York and Los Angeles police departments as well as cars used by the Michigan State Police, Massachusetts State Police, Boardman Township Police Department in Ohio and Seminole County Sheriff\u2019s Office in Florida.\n  Ford started researching the possibility of a software answer to decontaminating Police Interceptors in mid-March. Just two months later, the software is widely available. Ford says large departments with their own service centers can install the software solution using their own diagnostic service tools, while other fleets can work with their local dealers to install the software for 2013-19 Police Interceptor Utility vehicles.", "posttime": "2020-05-28 08:36:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u798f\u7279,coronavirus,\u75c5\u6bd2,\u8b66\u8f66", "title": "\u798f\u7279\u8b66\u8f66\u73b0\u5728\u53ef\u4ee5\u5c06\u5185\u90e8\u52a0\u70ed\u5230133\u5ea6\u4ee5\u4e0a\u4ee5\u6740\u6b7b\u51a0\u72b6\u75c5\u6bd2", "title_en": "Ford Cop Cars Can Now Heat Interiors to over 133 Degrees to Kill Coronavirus", "transed": 1, "url": "https://jalopnik.com/ford-cop-cars-can-now-heat-interiors-to-over-133-degree-1843707924", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u798f\u7279", "\u75c5\u6bd2", "\u8b66\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004008, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u4e00\u76f4\u5728\u5f00\u53d1\u4e00\u6b3e\u97f3\u4e50\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u9700\u8981\u5c06\u97f3\u4e50\u5e8f\u5217(\u5982\u65cb\u5f8b)\u4ece\u670d\u52a1\u5668\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aABC\u7684\u683c\u5f0f\u3002(\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfbABC\u97f3\u7b26\u7684\u5de5\u4f5c\u539f\u7406\u3002)\u3002\u6211\u4eec\u9009\u62e9ABC\u662f\u56e0\u4e3a\u5b83\u6bd4MIDI\u66f4\u6613\u8bfb\uff0c\u975e\u5e38\u7b80\u6d01\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5728JSON\u4e0a\u91cd\u65b0\u53d1\u660e\u4e00\u4e9b\u683c\u5f0f\u3002\nABC\u662f\u4e00\u79cd\u7b80\u5355\u7684\u683c\u5f0f\uff0c\u5728\u7528\u5b57\u7b26\u4e32\u8868\u793a\u97f3\u4e50\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4f8b\u5982\uff0c\u8d1d\u591a\u82ac\u7684\u201cF\u00fcr Elise\u201d\u4e2d\u7684\u4e00\u5c0f\u6bb5\u5927\u5bb6\u90fd\u77e5\u9053\uff1a\n\u5b57\u6bcd\u5bf9\u5e94\u4e8e\u7279\u5b9a\u7684\u97f3\u9ad8\uff0c\u5b57\u6bcd\u524d\u9762\u7684\u5b57\u7b26\u4ee3\u8868\u610f\u5916\u97f3(\u9510\u97f3\u548c\u964d\u97f3)\uff0c\u5b57\u6bcd\u540e\u9762\u7684\u6570\u5b57\u4ee3\u8868\u8be5\u97f3\u7b26\u5e94\u8be5\u6f14\u594f\u7684\u6301\u7eed\u65f6\u95f4\u3002ABC\u6709\u66f4\u591a\u7684\u7279\u6027(\u5b83\u652f\u6301\u9759\u6b62\u3001\u7cfb\u5e26\u3001\u6a2a\u6881\u3001\u6a2a\u7ebf\u7b49\u7b49)\uff0c\u4f46\u662f\u8fd9\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u8ba9\u60a8\u4e86\u89e3\u4e86\u8be5\u683c\u5f0f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u8be5\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u67d0\u79cd\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5b9a\u5e8f\u5668\u77e5\u9053\u5982\u4f55\u64ad\u653e\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u89e3\u6790\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f3c\u4e4e\u5f88\u5bb9\u6613\u3002\u62c6\u5206\u7a7a\u683c\uff0c\u5e76\u7f16\u5199\u4e00\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u5c06\u6bcf\u4e2a\u97f3\u7b26\u8f6c\u6362\u4e3a\u67d0\u79cd\u503c\u3002\u5bf9\u4e8e\u7b14\u8bb0\u89e3\u6790\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n\u51e0\u4e4e\u4e0d\u53ef\u80fd\u901a\u8fc7\u67e5\u770b\u6765\u786e\u5b9a\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528\u3002\u7279\u522b\u662f\u5bf9\u4e8eABC\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u5b83\u4f7f\u7528\u6807\u70b9\u7b26\u53f7\u8868\u793a\u610f\u5916(^\u3001_\u548c=)\u4ee5\u53ca\u516b\u5ea6\u8c03\u6574(&#39\uff1b\u548c\uff0c)\uff0c\u771f\u7684\u5f88\u96be\u533a\u5206\u54ea\u4e9b\u5b57\u7b26\u662f\u6211\u4eec\u8bd5\u56fe\u5339\u914d\u7684\u6587\u5b57\u5b57\u7b26\uff0c\u54ea\u4e9b\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u63a7\u5236\u5b57\u7b26\uff0c\u5b83\u4eec\u544a\u8bc9\u6a21\u5f0f\u5339\u914d\u8fd9\u4e2a\u5b57\u7b26\u4e2d\u7684\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u53ef\u9009\u5730\u5339\u914d\u90a3\u4e2a\u5b57\u7b26\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u8fd9\u91cc\u6211\u8981\u627f\u8ba4\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5c3d\u7ba1\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee4\u4eba\u8d39\u89e3\uff0c\u4f46\u5b83\u662f\u60a8\u53ef\u4ee5\u7f16\u5199\u7684\u6700\u7b80\u6d01\u7684\u8bed\u8a00\u4e4b\u4e00\u3002\n\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u7ec4\u6210\u7ec4\u4ef6\u4e0d\u5bb9\u6613\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0a\u9762\u7684\u8d1d\u591a\u82ac\u5e8f\u5217\u6ca1\u6709\u4efb\u4f55\u4f11\u6b62\u7b26\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5e26\u6709z\u7684\u97f3\u7b26\uff0c\u800c\u4e0d\u662f\u97f3\u9ad8\u7684\u5b57\u6bcd\u3002\u4f8b\u5982\uff0c\u534a\u4f11\u606f\u53ef\u80fd\u770b\u8d77\u6765\u50cfz/2\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u91cd\u7528\u6301\u7eed\u65f6\u95f4\u6a21\u5f0f\uff0c\u4f46\u5b83\u76ee\u524d\u88ab\u56f0\u5728\u90a3\u4e2a\u5de8\u5927\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06\u5b83\u4eec\u5206\u5f00\uff0c\u7136\u540e\u5e94\u7528\u4e00\u4e9b\u5b57\u7b26\u4e32\u8fde\u63a5\uff1a\n\u8ba9\u610f\u5916\u6a21\u5f0f=&#34\uff1b(\\\\^+|_+|=)\uff1f&#34\uff1b\u8ba9letterPattern=&#34\uff1b([a-Ga-G])&#34\uff1b\u8ba9octaveAdjumentPattern=&#34\uff1b(\uff0c+|&#39\uff1b+)\uff1f&#34\uff1b\u8ba9durationPattern=&#34\uff1b(\\\\d*)(\\\\/)\uff1f(\\\\d*)&#34\uff1b\u8ba9restPattern=&#34\uff1bNSRegularExpression(Pattern\uff1aacterentalPattern+letterPattern+octaveAdjumentPattern+durationPattern)\u8ba9rest Regex=try\uff01NSRegularExpression(Pattern\uff1arestPattern+durationPattern\u3002\n\u8fd9\u786e\u5b9e\u662f\u83b7\u5f97\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u7ec4\u5408\u6027\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53ea\u662f\u6211\u4eec\u6b63\u5728\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u65e0\u6cd5\u77e5\u9053\u6211\u4eec\u7684\u8fde\u63a5\u662f\u5426\u8868\u793a\u5e95\u5c42\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6709\u6548\u8f6c\u6362\uff0c\u56e0\u4e3a\u5b83\u5728\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u88ab\u68c0\u67e5\u3002\n\u6700\u540e\uff0c\u5373\u4f7f\u6211\u4eec\u6210\u529f\u5730\u7ec4\u5408\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\uff0c\u5c06\u5176\u7f16\u8bd1\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u89e3\u6790\u4e86\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u4ecd\u7136\u6ca1\u6709\u4efb\u4f55\u6709\u7528\u7684\u4e1c\u897f\uff01\u6211\u4eec\u6709\u4e00\u5806\u6355\u83b7\u7ec4\u9700\u8981\u505a\u624b\u672f\u624d\u80fd\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u610f\u5916\u5b57\u7b26\u4e32\u3002\u8fd9\u53ef\u4ee5\u662f\u591a\u4e00\u4e2a\u63d2\u5165\u7b26\u53f7(^)(\u9510\u5316)\u3001\u591a\u4e00\u4e2a\u4e0b\u5212\u7ebf(_)(\u5e73\u5766)\u6216\u7b49\u53f7(=)(\u81ea\u7136)\uff0c\u4f46\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u5b83\u662f\u54ea\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u6790\u5b83\u3002\nlet numAccidilents=match.captureGroups[0].text.countlet\u610f\u5916\u5b57\u7b26=match.captureGroups[0].text.firstswitch\u610f\u5916\u5b57\u7b26{case&#34\uff1b^&#34\uff1b\uff1aReturn.Accidental(NumAccidents)\u6848\u4f8b&#34\uff1b_&#34\uff1b\uff1aReturn.Accidental(-numAccidilents)\u6848\u4f8b&#34\uff1b=&#34\uff1b\uff1aReturn.Natural alcase&#34\uff1b&#34\uff1b\uff1aReturn.Unitalcase&#34\uff1b&#34\uff1b\uff1aReturn.Underalcase&#34\uff1b&#34\uff1b&#34\uff1b\uff1aReturn.UnitalCase&#34\uff1b&#34\uff1b\n\u9700\u8981\u624b\u52a8\u6b65\u9aa4\u5c06\u5339\u914d\u7684\u5b50\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6211\u4eec\u7684\u57df\u5bf9\u8c61\uff0c\u8fd9\u6709\u70b9\u70e6\u4eba\u3002\n\u6211\u4eec\u9700\u8981\u66f4\u4ed4\u7ec6\u5730\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7d22\u662f\u51fd\u6570\u7b7e\u540d\u3002\u6211\u4eec\u89e3\u6790\u5e8f\u5217\u7684\u7b56\u7565\u662f\u6d88\u8017\u5b57\u7b26\u4e32\u524d\u9762\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4fbf\u6761\uff0c\u6211\u4eec\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd4\u56de(T\uff1f\uff0cSubstring)\u5143\u7ec4\u7684\u51fd\u6570\u770b\u8d77\u6765\u975e\u5e38\u719f\u6089\u3002\u6211\u5728Pointfree\u4ee3\u7801\u4e2d\u770b\u5230\u8fc7\u5173\u4e8e\u7ec4\u5408\u89e3\u6790\u7684\u5f15\u7528\uff1a\n\u8fd9\u88ab\u79f0\u4e3a\u7ec4\u5408\u89e3\u6790\u5668\uff0c\u56e0\u4e3a\u5b83\u4e0e\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u79f0\u4e3a\u7ec4\u5408\u5668\u7684\u4e00\u4e2a\u6709\u70b9\u6666\u6da9\u96be\u61c2\u7684\u90e8\u5206\u6709\u5173\u3002\u6211\u4e0d\u5b8c\u5168\u7406\u89e3\u5b83\u4eec\uff0c\u4f46\u6211\u4f1a\u628a\u5b83\u7559\u7ed9\u4e39\u5c3c\u5c14\u00b7\u65af\u5766\u4f2f\u683c\u6765\u5206\u4eab\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u4f8b\u5b50\u3002\n\u6211\u60f3\uff0c\u5982\u679c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u89e3\u6790\u6587\u672c\u5e76\u8fd4\u56de\u8fd9\u79cd\u683c\u5f0f\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u7ec4\u5408\u89e3\u6790\u5668\u53ef\u80fd\u4f1a\u975e\u5e38\u5408\u9002\u3002\u56e0\u6b64\uff0c\u6211\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u505a\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u5e76\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e2a\u65b0\u7b56\u7565\u91cd\u65b0\u5b9e\u73b0\u6211\u4eec\u7684\u89e3\u6790\u8fc7\u7a0b\u3002\u89e3\u6790\u5668\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u51fd\u6570\u7684\u7ed3\u6784\uff1a\n\u60a8\u7ed9\u5b83\u4e00\u4e2a\u5b57\u7b26\u4e32(\u672c\u4f8b\u4e2d\u662f\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0)\uff0c\u5b83\u4f7f\u7528\u7f13\u51b2\u533a\u524d\u9762\u7684\u5b57\u7b26\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u5b57\u7b26\u6784\u9020\u4e00\u4e2a\u6cdb\u578bA\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u8fd4\u56deA\u3002\u5982\u679c\u5931\u8d25\uff0c\u5219\u8fd4\u56denil\uff0c\u786e\u4fdd\u4e0d\u4fee\u6539\u8f93\u5165\u53c2\u6570\u3002\n\u4f7f\u7528\u89e3\u6790\u5668\u7ec4\u5408\u5668\uff0c\u53ef\u4ee5\u7f16\u5199\u7b80\u6d01\u3001\u7c7b\u578b\u5b89\u5168\u3001\u53ef\u7ec4\u5408\u7684\u4ee3\u7801\uff0c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u6837\u6709\u6548\u5730\u89e3\u6790\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u5982\u4f55\u68c0\u67e5\u6587\u5b57\u7684\uff1a\n\u9759\u6001\u51fd\u6570\u6587\u672c(_string\uff1astring)-&gt\uff1bParser&lt\uff1bvoid&gt\uff1b{return Parser&lt\uff1bvoid&gt\uff1b(run\uff1a{input in if input.hasPrefix(String){input.removeFirst(string.count)return()}Else{return nil}})}\u3002\n\u5982\u679c\u8f93\u5165\u5177\u6709\u6211\u4eec\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u8bf7\u4ece\u524d\u9762\u5220\u9664\u8be5\u6570\u91cf\u7684\u5b57\u7b26\u5e76\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u503c(\u5728\u672c\u4f8b\u4e2d\u4e3avoid)\u3002\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5219\u8fd4\u56denil-no match\u3002\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\u6240\u6709\u5176\u4ed6\u7684\u5e2e\u52a9\u7a0b\u5e8f-\u60a8\u53ef\u4ee5\u5728Pointfree\u793a\u4f8b\u4ee3\u7801\u4e2d\u627e\u5230\u5f88\u591a\u5e2e\u52a9\u7a0b\u5e8f\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u5e2e\u52a9\u5668\u548c\u5176\u4ed6\u5e2e\u52a9\u5668\uff0c\u60a8\u53ef\u4ee5\u5c06\u610f\u5916\u7684\u89e3\u6790\u4ece\u4e0a\u9762\u91cd\u5199\u4e3a\u5982\u4e0b\u6240\u793a\uff1a\n\u8ba9\u610f\u5916\u89e3\u6790\u5668\uff1aparser&lt\uff1b\u610f\u5916&gt\uff1b=Parsers.oneOf([Parsers.Repeating(&#34\uff1b^&#34\uff1b).map({.\u610f\u5916($0.count)})\uff0cParsers.Repeating(&#34\uff1b_&#34\uff1b).map({.\u610f\u5916(-$0.count)})\uff0cParsers.Genal(&#34\uff1b=&#34\uff1b).map({.Natural})\uff0cParsers.wen\n\u9996\u5148\uff0c\u5b83\u7684\u53ef\u8bfb\u6027\u5f88\u5f3a\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u5b83\u5339\u914d\u7684\u662f\u4ec0\u4e48\u6587\u5b57\u5b57\u7b26\uff0c\u56e0\u4e3a\u5b83\u4eec\u4ecd\u7136\u662f\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u6240\u6709\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u63a7\u5236\u5b57\u7b26\u90fd\u5df2\u66f4\u6539\u4e3a\u547d\u540d\u51fd\u6570\uff0c\u5bf9\u4e8e\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e13\u5bb6\u7684\u4eba\u6765\u8bf4\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\u3002\n\u7b2c\u4e8c\uff0c\u5b83\u975e\u5e38\u5bb9\u6613\u7ec4\u5408\u3002\u6b64\u89e3\u6790\u5668\u7531\u8f83\u5c0f\u7684\u89e3\u6790\u5668\u7ec4\u6210\uff0c\u5982.repeating\u6216.cripal\uff0c\u672c\u8eab\u4e5f\u7531\u8f83\u5927\u7684\u89e3\u6790\u5668\u7ec4\u6210\uff0c\u5982\u7528\u4e8e\u6ce8\u91ca\u3001REST\u7b49\u7684\u89e3\u6790\u5668\u3002\u4e0b\u9762\u662f\u7b14\u8bb0\u89e3\u6790\u5668\u4e2d\u7684\u610f\u5916\u89e3\u6790\u5668\u3002\nvar noteParser\uff1aparser&lt\uff1bNote&gt\uff1b{Return Parsers.zip(acuentalParser\uff0cPitchParser\uff0cdurationParser).map({\u610f\u5916\uff0c\u97f3\u8c03\uff0c\u8fd4\u56de\u8bf4\u660e\u4e2d\u7684\u6301\u7eed\u65f6\u95f4(\u610f\u5916\uff1a\u610f\u5916\uff0c\u97f3\u8c03\uff1a\u97f3\u8c03\uff0c\u6301\u7eed\u65f6\u95f4\uff1a\u6301\u7eed\u65f6\u95f4)})}\u3002\n(zip\u6309\u987a\u5e8f\u5339\u914d\u63d0\u4f9b\u7ed9\u5b83\u7684\u6240\u6709\u89e3\u6790\u5668\uff0c\u5982\u679c\u4efb\u4f55\u89e3\u6790\u5668\u5931\u8d25\uff0c\u5219\u4f1a\u5931\u8d25\u3002)\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u770b\u5230\u6240\u6709\u7c7b\u578b\u5982\u4f55\u6574\u9f50\u6392\u5217\u4e5f\u662f\u975e\u5e38\u68d2\u7684\u3002\u60a8\u53ef\u4ee5\u4ece\u7f16\u8bd1\u5668\u90a3\u91cc\u5f97\u5230\u5f88\u591a\u4fdd\u8bc1\uff0c\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u3002\n\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u6bd4\uff0c\u5b83\u7684\u6700\u540e\u4e00\u4e2a\u597d\u5904\u662f\u751f\u6210\u60a8\u671f\u671b\u7684\u5b9e\u9645\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5076\u7136\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u60a8\u5fc5\u987b\u8fdb\u4e00\u6b65\u5904\u7406\u7684\u5b50\u5b57\u7b26\u4e32\u6355\u83b7\u7ec4\u3002\u7279\u522b\u662f\u4f7f\u7528map\u64cd\u4f5c\uff0c\u60a8\u53ef\u4ee5\u5c06\u7b80\u5355\u7684\u7ed3\u679c(\u5982\u5b50\u5b57\u7b26\u4e32\u6216void)\u8f6c\u6362\u4e3a\u7279\u5b9a\u4e8e\u57df\u7684\u7ed3\u679c(\u5982\u610f\u5916\u6216\u5907\u6ce8)\u3002\n\u8fd9\u4e0eregexes\u76f8\u6bd4\uff0c\u552f\u4e00\u771f\u6b63\u5931\u53bb\u7684\u5730\u65b9\u662f\u7b80\u6d01\u6027\uff0c\u5f53\u60a8\u6dfb\u52a0regexes\u6240\u9700\u7684\u8f6c\u6362\u4ee3\u7801\u65f6\uff0c\u57fa\u672c\u4e0a\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u7528\u7eafSWIFT\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u4e86\u4e00\u4e2a\u89e3\u6790\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u4f7f\u7528\u5b50\u5b57\u7b26\u4e32\u548c\u5757\u7b49\u5de5\u5177\u3002\u5f53\u7136\uff0c\u9ad8\u5ea6\u8c03\u4f18\u5e76\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u8be5\u80fd\u591f\u5728\u901f\u5ea6\u65b9\u9762\u5927\u5927\u8d85\u8fc7\u6b64\u4ee3\u7801\uff1f\n\u4e0d\u5bf9\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u79cd\u65b0\u65b9\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u5168\u9762\u52a0\u5feb25%\u7684\u89e3\u6790\u901f\u5ea6\u3002\u8001\u5b9e\u8bf4\uff0c\u8fd9\u8ba9\u6211\u5f88\u9707\u60ca\u3002\u5982\u679c\u4ee3\u7801\u53d8\u5f97\u66f4\u597d(\u5047\u8bbe\u5b83\u4e0d\u662f\u5173\u952e\u8def\u5f84\uff0c\u7528\u6237\u4e0d\u4f1a\u6ce8\u610f\u5230\u7b49\u7b49)\uff0c\u6211\u901a\u5e38\u4f1a\u7a0d\u5fae\u964d\u4f4e\u901f\u5ea6\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u751a\u81f3\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u66f4\u597d\u7684\u4ee3\u7801\u4e5f\u662f\u66f4\u5feb\u7684\u4ee3\u7801\u3002\u53cc\u8d62\uff01\u6211\u8ba4\u4e3a\u5f88\u591a\u901f\u5ea6\u4f18\u52bf\u6765\u81ea\u4f7f\u7528\u5b50\u5b57\u7b26\u4e32\u3002\u4fee\u526a\u5b50\u5b57\u7b26\u4e32\u7684\u524d\u90e8\u5b9e\u9645\u4e0a\u662f\u81ea\u7531\u7684\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u4e9b\u64cd\u4f5c\u4e2d\u7684\u8bb8\u591a\u64cd\u4f5c\u90fd\u975e\u5e38\u5feb\u3002\n\u6211\u8fd8\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u51e0\u4e2a\u9886\u57df\uff0c\u6bd4\u5982\u53d6\u6d88\u89e3\u6790(\u5982\u679c\u6211\u4eec\u60f3\u5c06\u5e8f\u5217\u7ed3\u6784\u8f6c\u6362\u56deABC\u5b57\u7b26\u4e32\u600e\u4e48\u529e)\uff0c\u4ee5\u53ca\u5f53\u6307\u9488\u4f4d\u4e8e\u5927\u6d77\u635e\u9488\u7684\u4efb\u610f\u4f4d\u7f6e\u65f6\u89e3\u6790\u5668\u662f\u5982\u4f55\u6267\u884c\u7684\uff0c\u4f46\u662f\u5728\u5f97\u5230\u8fd9\u4e9b\u7ed3\u679c\u540e\u5f88\u96be\u8ba9\u6211\u56de\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\u3002", "note_en": "Recently, I\u2019ve been working on a music app that needs to get a musical sequence (like a melody) from the server to the client. To do this, we use a format called ABC. (You can read about how ABC music notation works  here.) We chose ABC because it\u2019s more readable than MIDI, it\u2019s pretty concise, and it\u2019s a standard, so we wouldn\u2019t be re-inventing some format over JSON.\n ABC is a simple format, and it does a great job of representing music in strings. For example, here\u2019s the little bit from Beethoven\u2019s \u201cF\u00fcr Elise\u201d that everyone knows:\n  The letters correspond to specific pitches, the characters before the letters represent accidentals (sharps and flats), and the numbers after them represent the duration that that note should be played for. ABC has a lot more features (it supports rests, ties, beams, barlines, and so on), but this simple example gives you a sense for how the format works.\n The app needs to transform the string into some kind of struct that the sequencer knows how to play. In short, we need to parse this string.\n  At first blush, the problem seems easy enough. Split on spaces, and write some regular expressions to convert each note into some kind of value. For note parsing, the expression looks something like this:\n    It is nearly impossible to determine what this regex does by looking at it. Especially for something like ABC, which uses punctuation marks for things like accidentals ( ^,  _, and  =) as well as octave adjustments ( &#39; and  ,), it\u2019s really hard to tell which are literal characters that we are trying to match, and which are regex control characters that tell the pattern to match zero or more of this one, optionally match that one, and so on.\n One thing I will grant here is that despite their inscrutability, regexes are one of the tersest languages you can write.\n  Another problem with regular expressions is that the constituent components don\u2019t compose easily. For example, our Beethoven sequence above doesn\u2019t include any rests, but they typically look like just like a note with a  z instead of the letter of the pitch. So for example, a half rest might look like  z/2.\n Ideally, we\u2019d like to be able to reuse the duration pattern, but it\u2019s currently trapped inside that giant regex. In order to compose these regexes together, we have to break them apart first, and then apply some string concatenation:\n let accidentalPattern = &#34;(\\\\^+|_+|=)?&#34;let letterPattern = &#34;([a-gA-G])&#34;let octaveAdjustmentPattern = &#34;(,+|&#39;+)?&#34;let durationPattern = &#34;(\\\\d*)(\\\\/)?(\\\\d*)&#34;let restPattern = &#34;z&#34;let noteRegex = try! NSRegularExpression(pattern: accidentalPattern + letterPattern + octaveAdjustmentPattern + durationPattern)let restRegex = try! NSRegularExpression(pattern: restPattern + durationPattern\n This is really the only way to get composability with regexes. And of course, because these are just strings that we\u2019re concatenating, there\u2019s no way to know if our concatenation represents a valid transformation of the underlying regular expression because it isn\u2019t checked at compile time.\n  Lastly, even once we have successfully composed our regex pattern, compiled it into a regular expression, and parsed a string, we still don\u2019t actually have anything useful! We have a bunch of capture groups that we need to operate on to get our final result. For example, the first capture group in the regex gives us our accidental string. This can either be one more carets ( ^) (sharp), one more underscores ( _) (flat), or an equals sign ( =) (natural), but the regex doesn\u2019t tell us which it is, so we need to parse it further.\n let numAccidentals = match.captureGroups[0].text.countlet accidentalChar = match.captureGroups[0].text.firstswitch accidentalChar {case &#34;^&#34;: return .accidental(numAccidentals)case &#34;_&#34;: return .accidental(-numAccidentals)case &#34;=&#34;: return .naturalcase &#34;&#34;: return Accidental.nonedefault: return nil}\n Requiring a manual step where we have to convert the matched substring into our domain object is kind of annoying.\n  My first clue that we needed to look closer at this problem was a function signature. Our strategy for parsing sequences was to consume small pieces of the front of a string. For example, for a note, we\u2019d have something like this:\n  A function that returns a tuple of  (T?, Substring) looked very familiar. I\u2019d seen it referenced in the  Pointfree code about combinatorial parsing:\n  This is called a combinatorial parser because it relates to a somewhat obscure part of computer science called  combinators. I don\u2019t understand them fully, but I will kick it over to  Daniel Steinberg to share some very cool examples.\n I figured if we\u2019re trying to parse text and return something in this format anyway, maybe the combinatorial parser could be a good fit. So I did a little research on the topic and started the process of reimplementing our parsing with this new strategy. The crux of the parser is a struct with a single function:\n  You give it a string (a substring in this case, for performance reasons) and it consumes characters from the front of the buffer to see if it can construct a generic  A from them. If that succeeds, it returns the  A. If it fails, it returns  nil, ensuring no modifications to the input parameter.\n Using parser combinators, it\u2019s possible to write concise, type-safe, composable code that parses strings just as effectively as regexes. For example, here\u2019s how you check for a literal:\n static func literal(_ string: String) -&gt; Parser&lt;Void&gt; { return Parser&lt;Void&gt;(run: { input in if input.hasPrefix(string) { input.removeFirst(string.count) return () } else { return nil } })}\n If the input has a prefix of the string we\u2019re looking for, drop that many characters off the front and return a valid value ( Void in this case). If not, return nil \u2014 no match. I won\u2019t go into detail on all the other helpers here \u2014 you can find a lot of them in the  Pointfree sample code.\n Using this helper and others, you can rewrite the accidental parsing from above into something like this:\n let accidentalParser: Parser&lt;Accidental&gt; = Parsers.oneOf([ Parsers.repeating(&#34;^&#34;).map({ .accidental($0.count) }), Parsers.repeating(&#34;_&#34;).map({ .accidental(-$0.count) }), Parsers.literal(&#34;=&#34;).map({ .natural }), Parsers.literal(&#34;&#34;).map({ .none }),])\n  First, it\u2019s very readable. You can see what literal characters it\u2019s matching because they\u2019re still strings, but all the regex control characters have changed into named functions, which are approachable for people who aren\u2019t regex experts.\n Second, it\u2019s very composable. This parser is made up of smaller parsers, like  .repeating or  .literal, and is itself composed into bigger parsers, like those for notes, rests, and so on. Here\u2019s the accidental parser in the note parser.\n var noteParser: Parser&lt;Note&gt; { return Parsers.zip(accidentalParser, pitchParser, durationParser) .map({ accidental, pitch, duration in return Note(accidental: accidental, pitch: pitch, duration: duration) })}\n ( zip matches all of the parsers that are given to it, in order, and fails if any of them fail.) In this example, it\u2019s also really great to see how all the types line up cleanly. You get a lot of assurance from the compiler that everything is in order.\n The last benefit it has over regex is that it produces the actual value that you\u2019re expecting, an  Accidental, as opposed to substring capture groups that you have to process further. Especially using the  map operation, you can transform simple results, like a substring or  Void into domain specific results, like  Accidental or  Note.\n The only real place that this loses out to regexes is terseness, and when you add the transformation code that regexes require, it\u2019s basically a wash.\n Now, we\u2019ve completely handrolled a parsing solution from scratch, in pure Swift, using only tools like substrings and blocks. Surely regexes, which are highly tuned and written in C, should be able to massively outperform this code in terms of speed?\n Wrong. By using this new approach, we were able to get 25% faster parsing across the board. This shocked me, to be honest. I will usually take a small speed hit if it makes the code nicer (assuming it\u2019s not a critical path, not noticable by the user, etc), but in this case, that wasn\u2019t even a concern, since the nicer code was also the faster code. Win-win! I think a lot of the speed benefit comes from using substrings. Trimming off the front of a substring is effectively free, which makes a lot of these operations super fast.\n There are still a few areas which I\u2019d like to learn more about, like unparsing (what if we want to turn our sequence struct back into an ABC string), and how parsers perform when the needle is in an arbitrary place in the haystack, but it\u2019s going to be pretty hard to get me to go back to regexes after these results.", "posttime": "2020-05-28 08:21:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u5408,combinatorial,\u5b57\u7b26\u4e32", "title": "\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u7ec4\u5408\u89e3\u6790", "title_en": "Regexes vs. Combinatorial Parsing", "transed": 1, "url": "https://khanlou.com/2019/12/regex-vs-combinatorial-parsing/", "via": "", "real_tags": ["\u7ec4\u5408", "\u5b57\u7b26\u4e32"]}]