[{"category": "", "categoryclass": "", "imagename": "5ee940fee3bbb459294046c9c1b0fcc8.jpeg", "infoid": 1002771, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u642c\u5230\u4e00\u4e2a\u65b0\u57ce\u5e02\uff0c\u5374\u4e0d\u77e5\u9053\u6700\u8fd1\u7684\u6742\u8d27\u5e97\u5728\u54ea\u91cc\u3002\n\u4f60\u4e0d\u4f1a\u8d23\u5907\u81ea\u5df1--\u8fd9\u5f88\u6b63\u5e38\u3002\u4f60\u53ea\u9700\u4f7f\u7528\u8c37\u6b4c\u5730\u56fe\u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u3002\n\u5728\u4f60\u53bb\u8fc7\u90a3\u91cc\u51e0\u6b21\u4e4b\u540e\uff0c\u5f88\u53ef\u80fd\u4f60\u5c31\u4e0d\u9700\u8981\u4f7f\u7528\u8c37\u6b4c\u5730\u56fe\u4e86\u3002\n\u5176\u4ed6\u5730\u65b9\u4e5f\u662f\u5982\u6b64\uff0c\u6bd4\u5982\u6700\u8fd1\u7684\u9910\u5385\u6216\u4f53\u80b2\u4e2d\u5fc3--\u4e00\u5f00\u59cb\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u8c37\u6b4c\u5730\u56fe\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u81ea\u5df1\u4e86\u89e3\u4f4d\u7f6e\uff0c\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u4e86\u3002\n\u4f60\u5b66\u4f1a\u4e86\u5b83\u4eec\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u8bf4\u4f60\u6545\u610f\u8981\u8bb0\u4f4f\u6bcf\u4e00\u6761\u8def\uff0c\u6bcf\u4e00\u6761\u901a\u5f80\u7279\u5b9a\u76ee\u7684\u5730\u7684\u53ef\u80fd\u7684\u8def\u5f84\u3002\n\u60a8\u53ef\u80fd\u9700\u8981\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4f7f\u7528\u7684\u67d0\u4e9b\u65b9\u6cd5\u4e5f\u662f\u5982\u6b64\u3002\n\u65b0\u7684\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u56e0\u4e3a\u6ca1\u6709\u8bb0\u4f4f\u8db3\u591f\u7684\u8bed\u6cd5\u800c\u611f\u5230\u96be\u8fc7-\u4ed6\u4eec\u4ecd\u7136\u9700\u8981\u53c2\u8003\u6587\u6863\u3002\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u8868\u660e\u4ed6\u4eec\u662f\u7cdf\u7cd5\u7684\u5f00\u53d1\u4eba\u5458\u3002\n\u4ee5\u4e0b\u662f\u4ed6\u4eec\u5728\u5f00\u59cb\u7f16\u7a0b\u4e4b\u65c5\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u51e0\u4e2a\u5e38\u89c1\u95ee\u9898\uff1a\n\u6211\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u638c\u63e1\u5b83\u5e76\u5728\u4e0d\u53c2\u8003\u6587\u6863\u7684\u60c5\u51b5\u4e0b\u5199\u4f5c\uff1f\n\u5f53\u4ed6\u4eec\u80fd\u591f\u8bb0\u4f4f\u4e00\u4e9b\u5e38\u7528\u7684\u8bed\u6cd5\u65f6\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u53d8\u5f97\u64c5\u957f\u7f16\u7a0b\u4e86\u3002\n\u4ed6\u4eec\u5f97\u5230\u7684\u5370\u8c61\u662f\uff0c\u771f\u6b63\u91cd\u8981\u7684\u662f\u4e00\u95e8\u8bed\u8a00\u7684\u6570\u91cf\uff0c\u6216\u8005\u4ed6\u4eec\u80fd\u591f\u8bb0\u4f4f\u7684\u7f16\u7a0b\u8bed\u8a00\u548c\u6846\u67b6\u7684\u6570\u91cf\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0b\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u4e2d\u67e5\u627e\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u8bed\u6cd5\uff1a\n\u5982\u60a8\u6240\u89c1\uff0c\u6bcf\u79cd\u8bed\u8a00\u6216\u6280\u672f\u90fd\u6709\u81ea\u5df1\u7684\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u7248\u672c\u3002\u8fd9\u662f\u4e00\u4e2a\u6307\u6807\uff0c\u8868\u660e\u572812\u4e2a\u5907\u9009\u65b9\u6848\u4e2d\u8bb0\u4f4f\u76f8\u540c\u7684\u51fd\u6570\u771f\u7684\u5f88\u56f0\u96be\u3002\n\u4f7f\u7528\u8fc7\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u592a\u53ef\u80fd\u8bb0\u4f4f\u4ed6\u4eec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u6240\u6709\u8bed\u6cd5\u3002\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u4ece\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u8d39\u5fc3\u53bb\u5c1d\u8bd5\u53bb\u5b66\u4e60\u5b83\u3002\n\u6211\u7f16\u5199\u4e86255\u884c\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u6b63\u5e38\u5de5\u4f5c\u7684\u670d\u52a1\u5668\u548c\u4e00\u4e2a\u5ba2\u6237\u7aef\u3002\u6211\u5411\u8c37\u6b4c\u67e5\u8be2\u4e8623\u6b21\uff0c\u4e3b\u8981\u662f\u767b\u9646StackOverflow\u3001Netty4\u7f51\u7ad9\u3001GitHub\u548cJavaDocs\u3002\u5982\u679c\u8ba1\u7b97\u4e00\u4e0b\uff0c\u5e73\u5747\u6bcf10\u884c\u4ee3\u7801\u5c31\u67091\u4e2a\u67e5\u8be2\uff01\u6211\u4e00\u70b9\u4e5f\u4e0d\u77e5\u9053\u3002-\u4e4c\u9ed8\u00b7\u66fc\u82cf\u5c14(Umer Mansoor)\u3002\n\u8fd9\u4e9b\u62db\u751f\u5e94\u8be5\u4f1a\u7ed9\u4f60\u52c7\u6c14--\u4f60\u4e0d\u5fc5\u4e3a\u8bb0\u4e0d\u4f4f\u53e5\u6cd5\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\u800c\u611f\u5230\u7f9e\u6127\u3002\n\u8fd9\u53ef\u80fd\u662f\u8bb8\u591a\u521d\u7ea7\u5f00\u53d1\u4eba\u5458\u5173\u5fc3\u7684\u95ee\u9898\u3002\u4e8b\u5b9e\u662f\uff0c\u4f60\u771f\u7684\u6ca1\u6709\u5fc5\u8981\u4e00\u8fb9\u8d70\u4e00\u8fb9\u8bb0\u4f4f\u6bcf\u4e00\u4ef6\u4e8b\u3002\n\u5373\u4f7f\u662f\u6280\u672f\u62db\u8058\u4eba\u5458\u4e5f\u4e0d\u5173\u5fc3\u8fd9\u4e00\u70b9\u3002\u4ee5\u4e0b\u662f\u8c37\u6b4c\u4e00\u4f4d\u5de5\u7a0b\u603b\u76d1\u5bf9\u6b64\u7684\u56de\u5e94\uff1a\n\u6211\u4e0d\u4ec5\u7ecf\u5e38\u4f7f\u7528\u8c37\u6b4c\uff0c\u6211\u8fd8\u7528\u5b83\u6765\u641c\u7d22\u6211\u81ea\u5df1\u8fc7\u53bb\u5199\u8fc7\u7684\u4e1c\u897f\u3002\n\u6211\u6570\u4e0d\u6e05\u6211\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u7f16\u7a0b\u95ee\u9898\u7684\u6b21\u6570\uff0c\u56e0\u4e3a\u7b54\u6848\u5728\u6211\u7f16\u5199\u7684Stack Overflow\u9875\u9762\u4e0a\u53ef\u4ee5\u627e\u5230\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u6211\u5df2\u7ecf\u5b8c\u5168\u5fd8\u8bb0\u7684\u7279\u522b\u53e4\u8001\u7684\u7b54\u6848\uff0c\u6211\u751a\u81f3\u5bf9\u81ea\u5df1\u8bf4\uff0c\u201c\u54c7\uff0c\u8fd9\u4e2a\u5929\u624d\u542c\u8d77\u6765\u771f\u50cf\u6211\uff01\u201d\u4ee5\u53ca\u201c\u8fd9\u4e2a\u767d\u75f4\u6839\u672c\u4e0d\u77e5\u9053\u4ed6\u5728\u8bf4\u4ec0\u4e48\uff01\u201d\n\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u5728Facebook\u7684\u4e00\u4e2a\u7fa4\u91cc\u8bfb\u5230\u4e00\u7bc7\u6765\u81ea\u4e00\u4f4d\u8d44\u6df1\u5f00\u53d1\u4eba\u5458\u7684\u5e16\u5b50\uff0c\u4ed6\u63d0\u5230\uff0c\u5f53\u62db\u8058\u4eba\u5458\u95ee\u4ed6\u662f\u5426\u6709\u4f7f\u7528\u67d0\u9879\u6280\u672f\u7684\u7ecf\u9a8c\uff0c\u800c\u4ed6\u6ca1\u6709\u7ecf\u9a8c\u65f6\uff0c\u4ed6\u56de\u7b54\u8bf4\uff1a\u201c\u90a3\u53ea\u662f\u53e6\u4e00\u79cd\u5de5\u5177\u3002\u201d\n\u8fd9\u610f\u5473\u7740\u6211\u8fc7\u53bb\u53ef\u80fd\u6ca1\u6709\u673a\u4f1a\u4f7f\u7528\u5b83\uff0c\u4f46\u6211\u6709\u4fe1\u5fc3\u53ef\u4ee5\u5b66\u4e60\u5b83\u3002\n\u6211\u53ef\u80fd\u4e0d\u9700\u8981\u82b1\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002\u6211\u53ef\u80fd\u53ea\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u6765\u9605\u8bfb\u5b83\u7684\u6587\u6863\uff0c\u7136\u540e\u5728\u65c5\u9014\u4e2d\u6839\u636e\u9700\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u800c\u4e0d\u9700\u8981\u8bb0\u4f4f\u6240\u6709\u4e1c\u897f\u3002\n\u5f53\u4f60\u5f00\u59cb\u4f60\u7684\u76ee\u7684\u5730\u4e4b\u65c5\u65f6\uff0c\u4f60\u4e0d\u4f1a\u671f\u671b\u6240\u6709\u7684\u7eff\u706f\u90fd\u4eae\u7740\u3002\u4f60\u901a\u8fc7\u5f53\u524d\u7684\u7eff\u706f\uff0c\u5728\u7ea2\u706f\u5904\u505c\u8f66\u3002\u4f60\u8981\u7b49\u5230\u7eff\u706f\u4eae\u4e86\u518d\u7ee7\u7eed\u3002\n\u5982\u4eca\uff0c\u6211\u4eec\u6709\u4e86\u65b0\u7684\u8bed\u8a00\u548c\u6846\u67b6\uff0c\u6216\u8005\u5bf9\u73b0\u6709\u7684\u8bed\u8a00\u548c\u6846\u67b6\u8fdb\u884c\u4e86\u76f8\u5f53\u5927\u7684\u66f4\u6539\uff0c\u56e0\u6b64\u5c1d\u8bd5\u8bb0\u5fc6\u8bed\u6cd5\u65e2\u56f0\u96be\u53c8\u4e0d\u90a3\u4e48\u91cd\u8981\u3002\u6b63\u5982\u4e00\u4f4d\u8bc4\u8bba\u5458\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u7cbe\u8f9f\u5730\u6307\u51fa\u7684\u90a3\u6837\uff1a\n\u201c\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\u77e5\u9053\u5982\u4f55\u63d0\u51fa\u597d\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u9762\u8bd5\u5b98\u671f\u5f85\u7684\u662f\u6d3b\u5b57\u5178\u3002", "note_en": "You move to a new city and you don\u2019t know where the nearest grocery store is.\n You don\u2019t beat yourself up \u2014 it\u2019s normal. You just use Google Maps to find it.\n After you\u2019ve been there several times, it\u2019s highly likely that you won\u2019t need to use Google Maps.\n It\u2019s the same with other places, like the nearest restaurant, or sports center \u2014 at first, you perhaps need to use Google Maps, then you learn the locations yourself and no longer need to use it.\n You learn them but it\u2019s not that you\u2019re intentionally  trying to memorize every road, every possible path to a certain destination.\n  It\u2019s the same with certain methods that you may need to use in a programming language.\n New software developers may feel bad that they\u2019re not memorizing sufficient syntax \u2014 they still need to refer to the documentation. They see this as a sign that they\u2019re bad developers.\n Here are a couple of common questions they may have when they start their journey into programming:\n How long will it take for me to master it and write without referring to the documentation?\n When they\u2019re able to memorize some frequently used syntax, they may think that they\u2019ve become good at programing.\n They get the impression that it\u2019s the amount of a language or the number of programming languages and frameworks they are able to memorize that really matters.\n To put things in perspective, let\u2019s compare the syntax of finding the length of a string in different programming languages:\n  As you can see, each language or technology has its own version of finding the length of a string. This is an indicator that it\u2019s really difficult to memorize the same function in 12 alternatives.\n It\u2019s very unlikely that a developer who\u2019s used multiple programming languages can memorize all the syntax that they have used in the past. They may even not bother trying to learn it in the first place.\n          I wrote 255 lines of code that included a working server and a client. I queried google 23 times mostly landing on StackOverflow, Netty 4 website, GitHub, and JavaDocs. If you do the math, that averages out to 1 query every 10 lines of code! I had no idea. \u2014  Umer Mansoor\n  These admissions should give you courage \u2014 you don\u2019t have to be ashamed that you can\u2019t remember every detail of the syntax.\n This is something that many junior developers may be concerned about. The truth is, you really do not have to memorize everything as you go.\n Not even tech recruiters care about that. Here\u2019s the response that an engineering director at Google gave regarding this:\n   I not only use Google frequently, I use it to search for things I myself have written in the past.\n I can\u2019t count the number of times I\u2019ve Googled for a programming question where the answer is found on a Stack Overflow page I\u2019ve written. If it\u2019s a particularly old answer that I\u2019ve completely forgotten, I\u2019ve even thought to myself, \u201cWow this genius sounds just like me!\u201d as well as \u201cThis idiot has no clue what he\u2019s talking about!\u201d .\n  A couple of months ago, I read a post on a Facebook group from a senior developer mentioning that when recruiters ask him whether he has experience with a particular technology for which he hasn\u2019t, he responds, \u201cThat\u2019s just another tool.\u201d\n Meaning that I may not have had the chance to work with it in the past but I have the confidence that I can learn it.\n I may not need to spend months before I am able to work on it. I may only need a few hours to read its documentation and then learn more as needed along the journey without the need to memorize everything.\n You do not expect to have all green lights on when you start your journey to your destination. You pass through the current green light and stop at a red light. You wait until the green light is on before proceeding.\n Nowadays, we get new languages and frameworks, or considerable changes to existing ones, so that trying to memorize the syntax is both difficult and not that important. As one commentator on a blog post brilliantly  put it:\n \u201cGreat engineers know how to formulate good queries. Yet interviewers expect walking dictionaries.\u201d", "posttime": "2020-05-19 21:00:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u5173\u6ce8,developer,\u53ef\u80fd", "title": "\u5982\u679c\u60a8\u60f3\u6210\u4e3a\u9ad8\u7ea7\u5f00\u53d1\u4eba\u5458\uff0c\u8bf7\u505c\u6b62\u5173\u6ce8\u8bed\u6cd5", "title_en": "If You Want to Be a Senior Developer, Stop Focusing on Syntax", "transed": 1, "url": "https://medium.com/better-programming/if-you-want-to-be-a-senior-developer-stop-focusing-on-syntax-d77b081cb10b", "via": "", "real_tags": ["\u5f00\u53d1", "\u5173\u6ce8", "developer", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "e5363b29ff4d0291e2562f240d2e82fb.jpeg", "infoid": 1002770, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9a\u4e49\u8fdc\u666f\u4f1a\u8ba9\u4f60\u7684\u56e2\u961f\u6709\u66f4\u957f\u8fdc\u7684\u76ee\u6807--\u8d85\u8d8a\u5b63\u5ea6\u76ee\u6807\u548c\u7ed3\u679c\u7684\u76ee\u6807\u3002\u4e0b\u9762\u662f\u5982\u4f55\u4f7f\u7528\u60a8\u7684Team\u2026\u521b\u5efa\u4e00\u4e2a\u3002\n\u6211\u6700\u8fd1\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u56e2\u961f\u76ee\u6807\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u5982\u4f55\u4e3a\u4f60\u7684\u56e2\u961f\u5b9a\u4e49\u56e2\u961f\u76ee\u6807\u7684\u6587\u7ae0\u3002\u5f53\u6d89\u53ca\u5230\u4e3a\u60a8\u7684\u4ea7\u54c1\u56e2\u961f\u5efa\u7acb\u6210\u529f\u65f6\uff0c\u76ee\u6807\u53ea\u662f\u62fc\u56fe\u4e2d\u7684\u4e00\u5757\u3002\u4f60\u7684\u56e2\u961f\u4e5f\u9700\u8981\u4e00\u4e9b\u76ee\u6807\uff0c\u5317\u6781\u661f\u3002\n\u56e2\u961f\u613f\u666f\u662f\u4e00\u4e2a\u8f83\u957f\u671f\u7684\u76ee\u6807\uff0c\u7740\u773c\u4e8e\u672a\u676512\u4e2a\u6708\u5de6\u53f3\u3002\u5b83\u4e0e\u516c\u53f8\u613f\u666f\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u6bd4\u5d07\u9ad8\u76845-10\u5e74\u76ee\u6807\u66f4\u5177\u4f53\u4e00\u4e9b\u3002\u5b83\u5e94\u8be5\u662f\u53ef\u4ee5\u5728\u5927\u7ea6\u4e00\u5e74\u5185\u5b9e\u73b0\u7684\uff0c\u5e76\u8be6\u7ec6\u8bf4\u660e\u60a8\u5c06\u5b9e\u73b0\u4ec0\u4e48\u4ee5\u53ca\u4e3a\u8c01\u800c\u5b9e\u73b0\u3002\n\u6709\u66f4\u957f\u8fdc\u7684\u773c\u5149\u5c06\u6709\u52a9\u4e8e\u8ba9\u60a8\u7684\u56e2\u961f\u4e13\u6ce8\u4e8e\u6b64\uff0c\u5e76\u786e\u4fdd\u60a8\u80fd\u591f\u5236\u5b9a\u6218\u7565\u548c\u4e3b\u9898\uff0c\u4ece\u800c\u5c06\u6709\u610f\u4e49\u7684\u4ea7\u54c1\u4ea4\u4ed8\u7ed9\u60a8\u7684\u5ba2\u6237\u548c/\u6216\u7528\u6237\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u4e0d\u5fc5\u6bcf\u4e2a\u5b63\u5ea6\u5b8c\u5168\u91cd\u65b0\u8003\u8651\u4f60\u5728\u505a\u4ec0\u4e48\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u7684\u7834\u574f\u66f4\u5c11\uff01\n\u89e3\u91ca\u201c\u662f\u4ec0\u4e48\u201d\u3001\u201c\u4e3a\u4ec0\u4e48\u201d\u548c\u201c\u5982\u4f55\u201d(5\u5206\u949f)\u3002\n\u5728\u6bcf\u4e2a\u7814\u8ba8\u4f1a\u4e2d\uff0c\u4f60\u90fd\u4f1a\u53d1\u73b0\u53c2\u4e0e\u8005\u4f1a\u72b9\u8c6b\u662f\u5426\u53c2\u52a0\uff0c\u9664\u975e\u4ed6\u4eec\u88ab\u544a\u77e5\u4e3a\u4ec0\u4e48\u8981\u53c2\u52a0\uff0c\u4f60\u8981\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6700\u7ec8\u7ed3\u679c\u4f1a\u662f\u4ec0\u4e48(\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684\uff01)\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u4efb\u4f55\u7814\u8ba8\u4f1a\u5f00\u59cb\u65f6\uff0c\u5e26\u7740\u201c\u4ec0\u4e48\u201d\u3001\u201c\u4e3a\u4ec0\u4e48\u201d\u548c\u201c\u5982\u4f55\u201d\u6765\u8282\u7701\u65f6\u95f4\u5e76\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\u662f\u6709\u76ca\u7684\uff1a\n\u4e3a\u4ec0\u4e48=\u5bf9\u6211\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u56e2\u961f\u7684\u957f\u671f\u76ee\u6807\u6709\u4e00\u81f4\u7684\u7406\u89e3\u3002\n\u6839\u636e\u60a8\u7684\u4e1a\u52a1\u89c4\u6a21\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u6709\u4e86\u4e0e\u60a8\u7684\u56e2\u961f\u76f8\u5173\u7684\u516c\u53f8\u613f\u666f\u548c\u76f8\u5173\u7684\u9ad8\u7ea7OKR\u6216\u6218\u7565\u76ee\u6807\u3002\u5982\u679c\u4f60\u6709\u7684\u8bdd\uff0c\u82b15\u5206\u949f\u56de\u987e\u8fd9\u4e9b\u662f\u503c\u5f97\u7684\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u53ef\u4ee5\u8df3\u5230\u4e0b\u4e00\u6b65\u3002\n\u8fd9\u4e00\u5207\u90fd\u662f\u4e3a\u4e86\u8ba9\u60a8\u7684\u56e2\u961f\u601d\u8003\u60a8\u7684\u5de5\u4f5c\u5c06\u572812\u4e2a\u6708\u540e\u5bf9\u60a8\u7684\u5ba2\u6237/\u7528\u6237\u7684\u751f\u6d3b\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u63d0\u9192\u60a8\u7684\u56e2\u961f\uff0c\u8fd9\u4e0d\u662f\u60a8\u63d0\u4f9b\u54ea\u4e9b\u529f\u80fd\u6216\u6784\u5efa\u54ea\u4e9b\u670d\u52a1\u7684\u95ee\u9898\uff0c\u800c\u662f\u66f4\u591a\u4eba\u7c7b\u5c42\u9762\u7684\u4e8b\u60c5--\u4ed6\u4eec\u7684\u751f\u6d3b\u5c06\u4f1a\u53d1\u751f\u600e\u6837\u7684\u53d8\u5316\uff1f\u4ed6\u4eec\u5c06\u6765\u80fd\u505a\u4ec0\u4e48\uff0c\u4e5f\u8bb8\u4ed6\u4eec\u73b0\u5728\u505a\u4e0d\u5230\u5462\uff1f\n\u8fd9\u4e2a\u95ee\u9898\u662f\u4e3a\u4e86\u8ba9\u4eba\u4eec\u601d\u8003\uff0c\u5982\u679c\u4f60\u6210\u529f\u5730\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u76ee\u6807\uff0c\u4f60\u7684\u5ba2\u6237\u6216\u7528\u6237\u572812\u4e2a\u6708\u540e\u4f1a\u6709\u4ec0\u4e48\u611f\u53d7\u3002\u4ed6\u4eec\u4f1a\u5feb\u4e50\u3001\u6ca1\u6709\u538b\u529b\u8fd8\u662f\u6ee1\u610f\u5462\uff1f\u8bd5\u7740\u8ba9\u4f60\u7684\u56e2\u961f\u628a\u81ea\u5df1\u653e\u5728\u5ba2\u6237\u6216\u7528\u6237\u7684\u5fc3\u6001\u4e2d\u3002\n\u5e0c\u671b\u5728\u56de\u7b54\u6700\u540e\u4e00\u6b65\u7684\u95ee\u9898\u65f6\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e00\u4e9b\u4e3b\u9898\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5c31\u5982\u4f55\u5236\u5b9a\u60a8\u7684\u56e2\u961f\u613f\u666f\u58f0\u660e\u8fdb\u884c\u6709\u65f6\u95f4\u9650\u5236\u7684\u8ba8\u8bba\uff1a\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a10\u4eba\u6216\u66f4\u591a\u4eba\u7684\u56e2\u961f\uff0c\u4f60\u7684\u4ea7\u54c1\u7ecf\u7406\u6700\u597d\u628a\u7814\u8ba8\u4f1a\u7684\u6210\u679c\u62ff\u8d70\uff0c\u7136\u540e\u5199\u4e00\u4efd\u613f\u666f\u58f0\u660e\u8349\u6848\u4f9b\u56e2\u961f\u53cd\u9988\uff0c\u56e0\u4e3a\u81f3\u5c11\u5728\u6211\u7684\u7ecf\u9a8c\u4e2d\uff0c\u5927\u578b\u5c0f\u7ec4\u8ba8\u8bba\u53ef\u80fd\u4f1a\u53d8\u5f97\u76f8\u5f53\u7b28\u62d9\u3002", "note_en": "Defining a vision gives your team something to aim for in the longer term \u2014 something beyond quarterly goals and outcomes. Here\u2019s how to create one with your team\u2026\n  I recently wrote about the importance of having a  team purpose and how to define one for your team. Purpose is just one piece of the puzzle when it comes to setting your product team up for success. Your team also needs something to aim for, a North Star.\n  A team vision is a longer term aim that looks out around 12 months ahead. It\u2019s different from a company vision as it\u2019s something a little more specific than a lofty 5\u201310 year goal. It should be something that can be achieved in around a year and details what you are going to achieve and for whom.\n  Having a longer term view will help to give your team focus and ensure that you can formulate a strategy and themes to work on that will result in meaningful products being delivered to your customers and / or users. It also means that you don\u2019t have to completely rethink what you\u2019re working on every quarter, which means less disruption to good team work!\n  Explain the \u2018what\u2019, \u2018why\u2019 and \u2018how\u2019 (5 minutes)\n In every workshop you will find participants who will be hesitant to take part unless they are told why they are there, what you will be doing and what the end result will be (and rightly so!). With this in mind, it\u2019s beneficial to start any workshop with the \u2018what\u2019, \u2018why\u2019 and \u2018how\u2019 to save time and head off these sorts of questions:\n Why = to have an agreed understanding of what our longer term aim is as a team\n  Depending on the size of your business, you may already have a company vision and a relevant high level OKR or strategic goal that relates to your team. It\u2019s worth spending 5 minutes reviewing these, if you have them. If you don\u2019t then you can skip to the next step.\n    This is all about getting your team to think about the impact that your work will have on your customers\u2019 / users\u2019 lives in 12 months\u2019 time. Remind your team that this isn\u2019t about which features you deliver or what services you build, but something much more on a human level \u2014 how will their lives have changed? What will they be able to do that maybe they can\u2019t do now?\n  This question is to get people thinking about the emotions that your customers or users will be feeling 12 months from now, if you\u2019re successful in achieving the above. Will they be happy, stress-free or satisfied? Try to get your team to put themselves in your customers\u2019 or users\u2019 mindset.\n  Hopefully some themes have emerged from answering the questions in the last step and you should be able to have a time-boxed discussion about how to formulate your team vision statement:\n   If you have a team of 10 or more people it might be better for your Product Manager to take the workshop outputs away and write up a draft vision statement for the team to feedback on, as a large group discussion can get rather unwieldy, in my experience at least.", "posttime": "2020-05-19 21:00:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u613f\u666f,team,\u56e2\u961f", "title": "\u5982\u4f55\u4e3a\u56e2\u961f\u613f\u666f\u7814\u8ba8\u4f1a\u63d0\u4f9b\u4fbf\u5229", "title_en": "How to facilitate a team vision workshop", "transed": 1, "url": "https://medium.com/swlh/how-to-facilitate-a-team-vision-workshop-d636c0e35c6", "via": "", "real_tags": ["\u613f\u666f", "team", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "2f4ebab64c5f7b45b048443be2e37c71.jpg", "infoid": 1002769, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u516c\u53f8\u5728\u4e00\u4efd\u7b80\u77ed\u7684\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u7531\u4e8e\u6c83\u5c14\u739b(Walmart.com)\u54c1\u724c\u7684\u6301\u7eed\u5f3a\u52bf\uff0c\u516c\u53f8\u5c06\u505c\u6b62\u4f7f\u7528Jet.com\u3002\u201d\u8fd1\u56db\u5e74\u524d\u5bf9Jet.com\u7684\u6536\u8d2d\u5bf9\u4e8e\u52a0\u5feb\u6211\u4eec\u7684\u5168\u65b9\u4f4d\u6218\u7565\u81f3\u5173\u91cd\u8981\u3002\u201c\u3002\nJet.com\u505c\u4ea7\u7684\u6d88\u606f\u65e2\u4ee4\u4eba\u60ca\u8bb6\uff0c\u4e5f\u53ef\u80fd\u662f\u90a3\u4e9b\u5173\u6ce8\u5176\u8fdb\u5c55\u7684\u4eba\u9884\u6599\u5230\u7684\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u7684\u6301\u7eed\u5f71\u54cd\u5bfc\u81f4\u4e86\u7f51\u8d2d\u4eba\u6570\u7684\u6fc0\u589e\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u6c83\u5c14\u739b\u53ef\u80fd\u60f3\u8981\u52a0\u500d\u52aa\u529b\u81ea\u5df1\u7684\u5728\u7ebf\u8d2d\u7269\u3002\u8fd9\u662f\u610f\u6599\u4e4b\u4e2d\u7684\uff0c\u56e0\u4e3a\u5728\u73b0\u5b9e\u4e2d\uff0cJet.com\u5e76\u6ca1\u6709\u50cf\u6c83\u5c14\u739b\u5e0c\u671b\u7684\u90a3\u6837\u6210\u4e3a\u7687\u51a0\u4e0a\u7684\u660e\u73e0\u3002\n\u8fd9\u4e00\u58f0\u660e\u662f\u6c83\u5c14\u739b\u7b2c\u4e00\u5b63\u5ea6\u6536\u76ca\u62a5\u544a\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u516c\u53f8\u5728\u62a5\u544a\u4e2d\u8868\u793a\uff0c\u5176\u6838\u5fc3\u7f8e\u56fd\u5e02\u573a\u7684\u589e\u957f\u7387\u4e0d\u523010%\uff0c\u5e76\u5c06\u64a4\u56de2021\u8d22\u5e74\u7684\u6307\u5bfc\u3002\n\u6c83\u5c14\u739b\u79f0\uff0c\u201c\u8be5\u516c\u53f8\u7684\u51c0\u9500\u552e\u548c\u7ecf\u8425\u4e1a\u7ee9\u53d7\u5230\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u7684\u91cd\u5927\u5f71\u54cd.\u201d\u4ed6\u8bf4\uff1a\u201c\u5bf9\u591a\u79cd\u7c7b\u522b\u4ea7\u54c1\u7684\u7a7a\u524d\u9700\u6c42\u5e26\u6765\u4e86\u5f3a\u52b2\u7684\u8425\u6536\u4e1a\u7ee9\u3002\u67d0\u4e9b\u589e\u52a0\u7684\u6210\u672c\u5bf9\u8425\u4e1a\u6536\u5165\u4ea7\u751f\u4e86\u8d1f\u9762\u5f71\u54cd\uff0c\u5305\u62ec\u4e0e\u63d0\u9ad8\u5de5\u8d44\u548c\u798f\u5229\u4ee5\u53ca\u5b89\u5168\u548c\u536b\u751f\u76f8\u5173\u7684\u6210\u672c\u3002\u201c\u3002\u603b\u6536\u5165\u4e3a1,346\u4ebf\u7f8e\u5143\uff0c\u589e\u52a0107\u4ebf\u7f8e\u5143\uff0c\u589e\u5e45\u4e3a8.6%\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u9996\u5e2d\u8d22\u52a1\u5b98\u5e03\u96f7\u7279\u00b7\u6bd4\u683c\u65af(Brett Biggs)\u5173\u4e8e\u4e1a\u7ee9\u6307\u5f15\u7684\u58f0\u660e\u7a81\u663e\u51fa\uff0c\u9274\u4e8e\u7ecf\u6d4e\u3001\u516c\u5171\u536b\u751f\u72b6\u51b5\u548c\u6c83\u5c14\u739b\u8d2d\u7269\u60c5\u51b5\u5c06\u5982\u4f55\u53d1\u5c55\uff0c\u8fd9\u4e9b\u6570\u5b57\u53ef\u80fd\u53ea\u662f\u672a\u6765\u51e0\u4e2a\u6708\u8270\u96be\u6d88\u606f\u7684\u5f00\u59cb\u3002\n\u4ed6\u6307\u51fa\uff1a\u201c\u64a4\u56de\u6307\u5f15\u7684\u51b3\u5b9a\u53cd\u6620\u51fa\u6570\u4e2a\u4e3b\u8981\u5916\u90e8\u53d8\u6570\u53ca\u5176\u5bf9\u6211\u4eec\u7684\u4e1a\u52a1\u548c\u5168\u7403\u7ecf\u6d4e\u7684\u6f5c\u5728\u5f71\u54cd\u5b58\u5728\u91cd\u5927\u4e0d\u786e\u5b9a\u6027\uff0c\u5305\u62ec\uff1a\u5168\u7403\u51a0\u72b6\u75c5\u6bd2\u5065\u5eb7\u5371\u673a\u7684\u6301\u7eed\u65f6\u95f4\u548c\u5f3a\u5ea6\u3001\u5728\u5bb6\u5de5\u4f5c\u8ba2\u5355\u7684\u6301\u7eed\u65f6\u95f4\u548c\u5f71\u54cd\u3001\u7ecf\u6d4e\u523a\u6fc0\u7684\u89c4\u6a21\u548c\u6301\u7eed\u65f6\u95f4\u3001\u5c31\u4e1a\u8d8b\u52bf\u548c\u6d88\u8d39\u8005\u4fe1\u5fc3\u3002\u201d\u201c\u6211\u4eec\u7684\u4e1a\u52a1\u57fa\u672c\u9762\u5f3a\u52b2\uff0c\u8d22\u52a1\u72b6\u51b5\u6781\u4f73\u3002\u5ba2\u6237\u4fe1\u4efb\u6211\u4eec\u4f1a\u5151\u73b0\u6211\u4eec\u7684\u54c1\u724c\u627f\u8bfa\uff0c\u6211\u5bf9\u6211\u4eec\u5728\u51e0\u4e4e\u4efb\u4f55\u73af\u5883\u4e0b\u90fd\u80fd\u8868\u73b0\u51fa\u8272\u5145\u6ee1\u4fe1\u5fc3\u3002\u867d\u7136\u77ed\u671f\u73af\u5883\u5c06\u662f\u5177\u6709\u6311\u6218\u6027\u7684\uff0c\u4f46\u5728\u4e00\u4e2a\u65e5\u76ca\u5168\u65b9\u4f4d\u7684\u4e16\u754c\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u957f\u671f\u6210\u529f\u505a\u597d\u4e86\u51c6\u5907\u3002\u201c\u3002\n\u5c3d\u7ba1\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5bfc\u81f4\u7f51\u8d2d\u4eba\u6570\u6fc0\u589e\uff0c\u4f46\u5305\u62ec\u4e9a\u9a6c\u900a(Amazon)\u548ceBay\u5728\u5185\u7684\u4e00\u4e9b\u516c\u53f8\u53d1\u73b0\uff0c\u76ee\u524d\u5904\u7406\u4e1a\u52a1\u53ef\u80fd\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u7ba1\u7406\u6210\u672c\uff0c\u8fd9\u662f\u5728\u8003\u8651\u5230\u5728\u6536\u8d2d\u4e86\u6240\u6709\u536b\u751f\u7eb8\u548c\u610f\u5927\u5229\u9762\u4e4b\u540e\uff0c\u7ecf\u6d4e\u5d29\u6e83\u5bf9\u6574\u4f53\u9500\u552e\u989d\u7684\u957f\u671f\u5f71\u54cd\u4e4b\u524d\u3002\u56e0\u6b64\uff0c\u867d\u7136\u5728\u8fd9\u6837\u7684\u65f6\u5019\u653e\u5f03Jet.com\u4f3c\u4e4e\u6709\u8fdd\u76f4\u89c9\uff0c\u4f46\u6700\u7ec8\u8fd8\u662f\u8981\u524a\u51cf\u6210\u672c\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u56fe\u666f\u3002\n\u5f53\u6c83\u5c14\u739b(Walmart)\u57282016\u5e74\u6536\u8d2dJet.com\u65f6\uff0c\u5176\u96c4\u5fc3\u58ee\u5fd7\u662f\u8ba9\u8fd9\u5bb6\u5de8\u5934\u96f6\u552e\u5546\u6210\u4e3a\u5176\u5b9e\u4f53\u5e97\u7684\u8865\u5145\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u4e0e\u4e9a\u9a6c\u900a(Amazon)\u53ca\u5176\u65e5\u76ca\u589e\u957f\u7684\u4e3b\u8981\u8d2d\u7269\u76ee\u7684\u5730\u5730\u4f4d\u7ade\u4e89\u3002\u6536\u8d2dJet.com\u4e5f\u662f\u4e3a\u4e86\u8ba9\u5176\u7ecf\u9a8c\u4e30\u5bcc\u7684\u521b\u59cb\u4eba\u517c\u9886\u5bfc\u4eba\u9a6c\u514b\u00b7\u6d1b\u5c14(Marc Lore)\u9886\u5bfcJet\u548c\u6c83\u5c14\u739b(Walmart Online)\n\u6c83\u5c14\u739b\u603b\u88c1\u517c\u9996\u5e2d\u6267\u884c\u5b98\u9053\u683c\u00b7\u8463\u660e\u4f26(Doug McMillon)\u5f53\u65f6\u5728\u4e0e\u6295\u8d44\u8005\u7684\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\uff1a\u201c\u8fd9\u662f\u6c83\u5c14\u739b\u66f4\u52a0\u81f4\u529b\u4e8e\u5728\u7535\u5b50\u5546\u52a1\u9886\u57df\u53d6\u80dc\u3002\u201d\n\u4f46\u5feb\u8fdb\u5230\u4eca\u5929\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u7ed9\u96f6\u552e\u4e1a\u548c\u66f4\u5e7f\u6cdb\u7684\u7ecf\u6d4e\u5e26\u6765\u7684\u6240\u6709\u538b\u529b\u4e2d\uff0c\u8fd9\u6b21\u505c\u4ea7\u662f\u8fd9\u5bb6\u7ecf\u5386\u4e86\u4e0d\u540c\u9636\u6bb5\u53d8\u9769\u7684\u516c\u53f8\u6700\u7ec8\u9762\u4e34\u95ee\u9898\u7684\u52aa\u529b\u7684\u6700\u540e\u7bc7\u7ae0\u3002\u8fd9\u4e9b\u63aa\u65bd\u5305\u62ec\uff0c\u53bb\u5e74\uff0c\u5c06Jet\u7684\u56e2\u961f\u5b8c\u5168\u6574\u5408\u5230\u81ea\u5df1\u7684\u56e2\u961f\u4e2d\uff1b\u91cd\u65b0\u63a8\u51fa\u8fd9\u9879\u670d\u52a1\uff1b\u8fd8\u53d6\u6d88\u4e86Jet Black\u7b49\u5404\u79cdJet\u5b9e\u9a8c\uff0c\u8fd9\u662f\u4e00\u9879\u4e2a\u4eba\u8d2d\u7269\u670d\u52a1\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u6c83\u5c14\u739b\u4e00\u76f4\u5728\u52aa\u529b\u589e\u52a0\u6c83\u5c14\u739b(Walmart.com)\u7684\u66f4\u591a\u798f\u5229\uff0c\u6bd4\u5982\u4e0a\u6708\u5e95\u8bd5\u884c\u4e24\u5c0f\u65f6\u9001\u8d27\u670d\u52a1\u3002", "note_en": "\u201c Due to continued strength of the Walmart.com brand, the company will discontinue Jet.com,\u201d the company said in a short statement. \u201cThe acquisition of Jet.com nearly four years ago was critical to accelerating our omni strategy.\u201d\n The news of Jet.com\u2019s discontinuation is both a surprise and probably expected by those who have been watching its progress. Surprise, because the continued impact of COVID-19 has led to a surge of people shopping online, and so it would seem that Walmart might have wanted to double down on its own online efforts. Expected, because in reality Jet.com hasn\u2019t shaped up to be the jewel in the crown that Walmart had hoped it would become.\n  The statement was made as part of Walmart\u2019s Q1 earnings report, in which the company said it saw growth of less than 10% in its core US market, and that it would be withdrawing guidance for fiscal 2021.\n \u201cThe company\u2019s net sales and operating results were significantly affected by the outbreak of COVID-19,\u201d Walmart said. \u201cUnprecedented demand for products across multiple categories led to strong top-line results. Certain incremental costs negatively affected operating income, including costs associated with enhanced wages and benefits as well as safety and sanitation.\u201d Total revenue was $134.6 billion, an increase of $10.7 billion, or 8.6%.\n Meanwhile, CFO Brett Biggs\u2019 statement on guidance underscored how these numbers are possibly just the beginning of the difficult news in the months ahead, given the lack of visibility of how the economy, the state of public health and shopping at Walmart will shape up.\n \u201cThe decision to withdraw guidance reflects significant uncertainty around several key external variables and their potential impact on our business and the global economy, including: the duration and intensity of the COVID- 19 health crisis globally, the length and impact of stay-at-home orders, the scale and duration of economic stimulus, employment trends and consumer confidence,\u201d he noted. \u201cOur business fundamentals are strong, and our financial position is excellent. Customers trust us to deliver on our brand promise, and I\u2019m confident in our ability to perform well in most any environment. While the short-term environment will be challenging, we\u2019re positioned well for long-term success in an increasingly omni world.\u201d\n Although the COVID-19 pandemic has led to a surge of people shopping online, a number of companies, including Amazon and eBay, have found that handling business at the moment can prove to come with more overhead costs, and that\u2019s before considering what the larger effects of a collapsed economy will have on overall sales longer term, after all the toilet paper and pasta have been acquired. So while it might seem counterintuitive to get rid of Jet.com at a time like this, it\u2019s about cost cutting ultimately because of that bigger picture.\n When Walmart acquired Jet.com in 2016, the big ambition was to give the giant retailer a complement to its brick-and-mortar stores to compete better against Amazon and its growing presence as a primary shopping destination. Buying Jet.com was also about bringing on its experienced founder and leader Marc Lore to lead both Jet and\u00a0Walmart online\n \u201cThis is Walmart being even more committed to winning in e-commerce,\u201d said Doug McMillon, president and CEO of Walmart, in a conference call with investors at the time.\n But fast forward to today, amid all the strains that COVID-19 is putting on the retail sector and the wider economy, and the\u00a0discontinuation is the final chapter in what ultimately was a problematic endeavour for the company that went through various stages of change. They included, last year,  fully integrating Jet\u2019s teams into its own;\u00a0 relaunching the service; and also axing various Jet experiments like  Jet Black, a personal shopping service.\n In the meantime, Walmart has been working on adding more Walmart.com perks such as  piloting a two-hour deliver service at the end of last month.", "posttime": "2020-05-19 20:30:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u793a,discontinue,\u6c83\u5c14\u739b", "title": "\u6c83\u5c14\u739b\u8868\u793a\u5c06\u505c\u6b62\u751f\u4ea72016\u5e74\u4ee530\u4ebf\u7f8e\u5143\u6536\u8d2d\u7684Jet", "title_en": "Walmart says it will discontinue Jet, which it acquired for $3B in 2016", "transed": 1, "url": "https://techcrunch.com/2020/05/19/walmart-says-it-will-discontinue-jet-com-which-it-acquired-for-3b-in-2016/", "via": "", "real_tags": ["\u8868\u793a", "\u6c83\u5c14\u739b"]}, {"category": "", "categoryclass": "", "imagename": "cb9748d0cff93378c49889e088cfb172.jpg", "infoid": 1002768, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u516c\u53f8\u8868\u793a\uff0c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u65c5\u884c\u8be6\u7ec6\u4fe1\u606f\u88ab\u76d7\uff0c2208\u540d\u5ba2\u6237\u7684\u4fe1\u7528\u5361\u8be6\u7ec6\u4fe1\u606f\u4e5f\u88ab\u7a83\u53d6\u3002\n\u8be5\u516c\u53f8\u5df2\u7ecf\u901a\u77e5\u4e86\u82f1\u56fd\u4fe1\u606f\u4e13\u5458\u529e\u516c\u5ba4\uff0c\u5e76\u6b63\u5728\u7ee7\u7eed\u8c03\u67e5\u8fd9\u8d77\u8fdd\u89c4\u4e8b\u4ef6\u3002\n\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff1a\u6211\u4eec\u975e\u5e38\u8ba4\u771f\u5730\u5bf9\u5f85\u5b89\u5168\u95ee\u9898\uff0c\u5e76\u5c06\u7ee7\u7eed\u6295\u8d44\uff0c\u8fdb\u4e00\u6b65\u6539\u5584\u6211\u4eec\u7684\u5b89\u5168\u73af\u5883\u3002\n\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u4efb\u4f55\u6027\u8d28\u7684\u4e2a\u4eba\u4fe1\u606f\u88ab\u6ee5\u7528\uff0c\u4f46\u662f\uff0c\u6839\u636eICO\u7684\u5efa\u8bae\uff0c\u6211\u4eec\u6b63\u5728\u4e0e\u65c5\u884c\u8be6\u7ec6\u4fe1\u606f\u88ab\u83b7\u53d6\u7684\u5927\u7ea6900\u4e07\u5ba2\u6237\u6c9f\u901a\uff0c\u5efa\u8bae\u4ed6\u4eec\u91c7\u53d6\u4fdd\u62a4\u63aa\u65bd\uff0c\u5c06\u6f5c\u5728\u7684\u7f51\u7edc\u9493\u9c7c\u98ce\u9669\u964d\u81f3\u6700\u4f4e\u3002&#34\uff1b", "note_en": "It said email addresses and travel details had been stolen and that 2,208 customers had also had their credit card details &#34;accessed&#34;.\n The firm has informed the UK&#39;s Information Commissioner&#39;s Office and is continuing to investigate the breach.\n  In a statement it said: &#34;We take issues of security extremely seriously and continue to invest to further enhance our security environment.\n  &#34;There is no evidence that any personal information of any nature has been misused, however, on the recommendation of the ICO, we are communicating with the approximately nine million customers whose travel details were accessed to advise them of protective steps to minimise any risk of potential phishing.&#34;", "posttime": "2020-05-19 20:15:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u822a\u7a7a,admits,\u8be6\u7ec6\u4fe1\u606f", "title": "\u6613\u6377\u822a\u7a7a\u627f\u8ba4900\u4e07\u5ba2\u6237\u88ab\u9ed1\u5ba2\u653b\u51fb", "title_en": "EasyJet admits nine million customers hacked", "transed": 1, "url": "https://www.bbc.co.uk/news/technology-52722626", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u822a\u7a7a", "admits", "\u8be6\u7ec6\u4fe1\u606f"]}, {"category": "", "categoryclass": "", "imagename": "b9f7a8cb29a71dcdad019613643eeb46.jpg", "infoid": 1002767, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54e6\uff0c\u4f60\u5728\u4e0a\u4e00\u4e2a\u96c7\u4e3b\u7684Scrum\u4e0a\u9047\u5230\u8fc7\u95ee\u9898\u5417\uff1f\u55ef\uff0c\u90a3\u4e0d\u662f\u771f\u6b63\u7684Scrum\u3002&\u4f60\u7684Scrum\u4e3b\u4eba\uff0c\u4ed6\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u82cf\u683c\u5170\u4eba\u70b9\u51fb\u63a8\u7279\u5f88\u96be\u6279\u8bc4Scrum\u3002\u6211\u8111\u6d77\u4e2d\u7684\u201cScrum\u201d\u6982\u5ff5\u53ef\u80fd\u4e0e\u60a8\u6240\u719f\u6089\u7684\u622a\u7136\u4e0d\u540c\u3002\u8fd9\u662f\u6545\u610f\u7684\uff0c\u4e5f\u662f\u627f\u8ba4\u7684\u3002\u5728\u5b98\u65b9\u7684Scrum\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230Scrum\u7684\u5b9a\u4e49\uff1a\n\u4e00\u4e2a\u6846\u67b6\uff0c\u4eba\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u89e3\u51b3\u590d\u6742\u7684\u9002\u5e94\u6027\u95ee\u9898\uff0c\u540c\u65f6\u9ad8\u6548\u5730\u548c\u521b\u9020\u6027\u5730\u4ea4\u4ed8\u5c3d\u53ef\u80fd\u9ad8\u4ef7\u503c\u7684\u4ea7\u54c1\u3002\n\u56e0\u4e3a\u5b9a\u4e49\u5f88\u6a21\u7cca\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u957f\u7bc7\u5927\u8bba\u4e2d\uff0c\u6211\u552f\u4e00\u80fd\u6279\u8bc4\u7684\u5c31\u662f\u6211\u719f\u6089\u7684\u201cScrummers\u201d\u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5e0c\u671b\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u53ef\u7231\u7684\u8bfb\u8005\u80fd\u4ea7\u751f\u5171\u9e23\u3002\nScrum\u7684\u6838\u5fc3\u662fSprint\uff0c\u4e00\u4e2a\u6708\u6216\u66f4\u77ed\u7684\u65f6\u95f4\u6bb5\uff0c\u5728\u6b64\u671f\u95f4\u521b\u5efa\u201c\u5b8c\u6210\u201d\u7684\u3001\u53ef\u7528\u7684\u548c\u6f5c\u5728\u7684\u53ef\u53d1\u5e03\u7684\u4ea7\u54c1\u589e\u91cf\u3002\n\u51b2\u523a\u662f\u6709\u7528\u7684\uff0c\u5c31\u50cf\u7535\u5b50\u6e38\u620f\u4e2d\u7684\u6210\u5c31\u662f\u6709\u7528\u7684\u4e00\u6837\uff1b\u5b83\u4eec\u8ba9\u6211\u4eec\u5185\u5fc3\u611f\u5230\u6e29\u6696\u548c\u6a21\u7cca\u3002\u6fc0\u52b1\u662f\u4e00\u79cd\u5f3a\u6709\u529b\u7684\u5de5\u5177\uff0c\u4e0d\u8981\u8bef\u89e3\u6211\u7684\u610f\u601d\u3002\u95ee\u9898\u662f\uff0c\u90a3\u4e9b\u6e29\u6696\u7684\u6a21\u7cca\u5927\u591a\u662f\u4e3a\u4e86\u7ba1\u7406\u56e2\u961f\u3002\u8fd9\u4f1a\u8ba9\u4ed6\u4eec\u89c9\u5f97\u81ea\u5df1\u638c\u63e1\u4e86\u63a7\u5236\u6743\uff0c\u5e76\u88ab\u544a\u77e5\u4e86\u60c5\u51b5\u3002\u4ed6\u4eec\u786e\u5207\u5730\u77e5\u9053\u505a\u4e86\u4ec0\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u5b8c\u6210\u7684\u3002\n\u77ed\u8dd1\u9700\u8981\u53ef\u5b9e\u73b0\u7684\u77ed\u671f\u76ee\u6807\u3002\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u662f\u4e00\u4e2a\u8fdb\u884c\u4e24\u5468\u51b2\u523a\u7684\u56e2\u961f\u7684\u4e00\u5458(\u56e0\u4e3a\u6301\u7eed\u65f6\u95f4\u5fc5\u987b\u662f\u4e00\u81f4\u7684)\uff0c\u5e76\u4e14\u6211\u88ab\u6307\u6d3e\u6784\u5efa\u4e00\u4e2a\u5728\u6574\u4e2a\u4e8b\u60c5\u5b8c\u6210\u4e4b\u524d\u90fd\u6ca1\u6709\u7528\u5904\u7684API\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6211\u7684\u5934\u8111\u4e2d\uff0c\u6211\u76f8\u4fe1\u5982\u679c\u6211\u80fd\u59cb\u7ec8\u5982\u4e00\u5730\u5de5\u4f5c\uff0c\u6574\u4e2a\u4efb\u52a1\u5c31\u9700\u8981\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u3002\n\u6211\u9700\u8981\u5c06API\u5206\u6210\u51e0\u4e2a\u90e8\u5206\uff0c\u53ef\u4ee5\u57282\u5468\u5185\u5b8c\u6210\u3002\u6211\u4e5f\u8bb8\u53ef\u4ee5\u5728\u77ed\u77ed\u4e00\u4e24\u5929\u5185\u5b8c\u6210\u4e00\u4e9b\u7aef\u70b9\uff0c\u4f46\u6211\u4e0d\u60f3\u9519\u8fc7\u4efb\u4f55\u4e00\u4e2a\u76ee\u6807\uff0c\u6211\u77e5\u9053\u4e00\u4e9b\u66f4\u56f0\u96be\u7684\u903b\u8f91\u53ef\u80fd\u9700\u8981\u6bcf\u4e2a\u7aef\u70b9\u6574\u6574\u4e00\u5468\u7684\u65f6\u95f4\u3002\u670914\u4e2a\u7aef\u70b9\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u6bcf\u4e2a\u51b2\u523a2\u4e2a\u7aef\u70b9\u7684\u6574\u6570\u3002\n\u4e00\u4e2a\u672c\u53ef\u4ee5\u57282\u4e2a\u6708\u5185\u5b8c\u6210\u7684API\u73b0\u5728\u5c06\u9700\u8981\u8fd14\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u6d6a\u8d39\u4e86\u65f6\u95f4\u6765\u8bbe\u7f6e\u4eba\u5de5\u505c\u9760\u70b9\u3002\u6211\u7684\u5192\u540d\u9876\u66ff\u8005\u7efc\u5408\u75c7\u5f00\u59cb\u51fa\u73b0\uff0c\u4f46\u81f3\u5c11\u7ba1\u7406\u5c42\u4f1a\u6709\u76f8\u5f53\u591a\u7684\u5026\u6020\u56fe\u8868\u3002\nScrum Master\u662fScrum\u56e2\u961f\u7684\u4ec6\u4eba\u9886\u5bfc\u3002Scrum Master\u5e2e\u52a9Scrum\u56e2\u961f\u4e4b\u5916\u7684\u4eba\u4e86\u89e3\u4ed6\u4eec\u4e0eScrum\u56e2\u961f\u7684\u54ea\u4e9b\u4ea4\u4e92\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u54ea\u4e9b\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\u3002\nhttps://www.scrumguides.org/scrum-guide.html\u3002\n\u6839\u636eScrum\u5927\u5e08\u7684\u60f3\u6cd5\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u60f3\u6cd5\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u7cdf\u7cd5\u7684\u60f3\u6cd5\u3002\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u5728\u6211\u770b\u6765\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u3002\nScrum\u4e3b\u7ba1\u662f\u4e00\u79cd\u975e\u6280\u672f\u578b\u7684\u4e2d\u5c42\u7ba1\u7406\u4eba\u5458\uff0c\u559c\u6b22\u638c\u7ba1\u4e8b\u60c5\u3002\n\u9664\u4e86\u4ed6\u4eec\u6240\u6709\u7684\u5f00\u53d1\u5de5\u4f5c\u4e4b\u5916\uff0c\u5de5\u7a0b\u5e08\u4eec\u73b0\u5728\u8fd8\u7ecf\u5e38\u88abScrum\u7ba1\u7406\u5458\u6253\u65ad\uff0c\u4ed6\u8be2\u95eeReaction\u5e94\u7528\u7a0b\u5e8f\u7684\u201cJava\u4ee3\u7801\u201d\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5b8c\u6210\u3002\n\u5176\u76ee\u7684\u662f\u963b\u6b62\u5916\u90e8\u4e16\u754c\u6253\u6270\u4ed6\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u7684\u4e2a\u4eba\u5c31\u662f\u6700\u5927\u7684\u9ebb\u70e6\u3002\u5728\u6211\u770b\u6765\uff0c\u975e\u6280\u672f\u4eba\u5458\u5e94\u8be5\u5f88\u5c11(\u5982\u679c\u6709\u7684\u8bdd)\u7ba1\u7406\u6280\u672f\u4eba\u5458(\u9996\u5e2d\u6267\u884c\u5b98\u9664\u5916)\u3002\u6211\u5e94\u8be5\u80fd\u591f\u5c31\u6211\u7684\u4efb\u52a1\u5411\u6211\u7684\u8001\u677f\u5bfb\u6c42\u5e2e\u52a9\u548c\u5efa\u8bae\uff0c\u6216\u8005\u81f3\u5c11\u6211\u5e94\u8be5\u5e0c\u671b\u4ed6\u4eec\u7406\u89e3\u6211\u7684\u4efb\u52a1\u3002\n\u5373\u4f7fScrum\u5927\u5e08\u662f\u4e00\u4e2a\u4ece\u9ad8\u5c42\u638c\u63e1\u6280\u672f\u95ee\u9898\u7684\u53ef\u7231\u7684\u4eba\uff0cScrum Master\u4e5f\u4e0d\u662f\u4e00\u4efd\u5168\u804c\u5de5\u4f5c\u3002Scrum\u5927\u5e08\u7684\u65e5\u5e38\u4efb\u52a1\u901a\u5e38\u53ea\u662f\u65e9\u4e0a\u4e00\u4e24\u6b21\u7ad9\u7acb\uff0c\u4e0b\u5348\u4e0e\u4e0a\u7ea7\u5f00\u4f1a\uff0c\u5176\u4ed6\u5c31\u6ca1\u4ec0\u4e48\u4e86\u3002\n\u5982\u679c\u60a8\u4ecd\u7136\u89c9\u5f97\u9700\u8981\u4e00\u4e2a\u201cScrum\u5927\u5e08\u201d\uff0c\u90a3\u5c31\u8ba9\u4e3b\u8981\u5f00\u53d1\u4eba\u5458\u6765\u5904\u7406\u8fd9\u9879\u5de5\u4f5c\u3002\u4ed6\u4eec\u5df2\u7ecf\u7ad9\u8d77\u6765\u4e86\uff0c\u5f88\u53ef\u80fd\u5bf9\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u66f4\u597d\u7684\u4e86\u89e3\u3002\u4f60\u6ca1\u6709\u628a\u66f4\u591a\u7684\u4e1c\u897f\u653e\u5728\u4ed6\u4eec\u7684\u76d8\u5b50\u4e0a\uff0c\u4f60\u5f88\u53ef\u80fd\u662f\u5728\u51cf\u5c11\u4e00\u4e9b\u4e1c\u897f\u3002\n\u5728Scrum\u4e2d\uff0c\u8bc4\u4f30\u6709\u4e00\u4e2a\u4e3b\u8981\u76ee\u7684--\u8ba1\u7b97\u51fa\u56e2\u961f\u5728\u7ed9\u5b9a\u7684Sprint\u4e2d\u53ef\u4ee5\u5b8c\u6210\u591a\u5c11\u5de5\u4f5c\u3002\u5982\u679c\u6211\u627f\u8ba4\u51b2\u523a\u662f\u4e2a\u597d\u4e3b\u610f(\u6211\u663e\u7136\u4e0d\u76f8\u4fe1)\uff0c\u90a3\u4e48\u5b98\u65b9Scrum\u6307\u5357\u4e2d\u5bf9\u4f30\u8ba1\u7684\u63cf\u8ff0\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\n\u95ee\u9898\u662f\uff0c\u5b9e\u8df5\u4e2d\u7684\u4f30\u8ba1\u662f\u5bf9\u73b0\u5b9e\u7684\u79c1\u751f\u5316\u3002Scrum\u6307\u5357\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e0a\u542b\u7cca\u5176\u8f9e\uff0c\u6240\u4ee5\u7ecf\u7406\u4eec\u81ea\u5df1\u52a8\u624b\u89e3\u51b3\u95ee\u9898\u3002\u5728\u8fd9\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u518d\u6b21\u6279\u8bc4\u6211\u5728\u9884\u7b97\u65b9\u9762\u6240\u89c1\u7684\u4e00\u4e9b\u5e38\u89c1\u505a\u6cd5\u3002\n\u8bb8\u591a\u8d85\u7ea7\u65f6\u9ae6\u7684\u7ec4\u7ec7\u559c\u6b22\u4f7f\u7528\u6700\u4ee4\u4eba\u56f0\u60d1\u7684\u6807\u51c6\u6765\u8fdb\u884c\u4f30\u8ba1\u3002\u4ed6\u4eec\u58f0\u79f0\uff0c\u4e0d\u77e5\u4f55\u6545\uff0c\u8fd9\u4f7f\u5f97\u8bc4\u4f30\u8fc7\u7a0b\u66f4\u5feb\u3001\u538b\u529b\u66f4\u5c0f\u3002\u53ef\u60b2\u7684\u662f\uff0c\u6211\u4ecd\u7136\u4e0d\u4fe1\u670d\u3002\n\u6211\u5728\u4e00\u5bb6\u65b0\u516c\u53f8\u7684\u7b2c\u4e00\u5929\u53c2\u52a0\u4e86\u6211\u4eec\u7684\u8bc4\u4f30\u4f1a\u8bae\uff0c\u56e0\u4e3a\u6211\u542c\u8bf4\u4ed6\u4eec\u4f7f\u7528\u4e86\u53ef\u6015\u7684\u201c\u6545\u4e8b\u70b9\u201d\u7cfb\u7edf\uff1a\nScrum\u5927\u5e08\uff1a\u201c\u6590\u6ce2\u7eb3\u5951\u6570\uff0c\u5176\u4e2d8\u5206\u662f\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5176\u5b9a\u4e49\u4e3a\u5f00\u53d1\u4eba\u5458\u5728\u4e24\u5468\u51b2\u523a\u671f\u95f4\u53ef\u4ee5\u5904\u7406\u7684\u5de5\u4f5c\u91cf\u3002\u201d\n\u4f30\u7b97\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8f6c\u6362\u5de5\u4f5c\u91cf-&gt\uff1b\u65f6\u95f4\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6b65\u9aa4-&gt\uff1b\u6545\u4e8b\u70b9-&gt\uff1b\u65f6\u95f4\uff1f\u7b80\u5355\u4f30\u8ba1\u201c\u591a\u5c11\u5929\uff1f\u201d\u8fd9\u6837\u4f1a\u66f4\u5bb9\u6613\u601d\u8003\u548c\u63a8\u7406\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7c92\u5ea6\u3002\n\u6211\u4eec\u4f7f\u7528\u6590\u6ce2\u7eb3\u5947\u6570\uff0c\u56e0\u4e3a\u5f88\u96be\u60f3\u8c617\u5929\u548c8\u5929\u7684\u533a\u522b\u3002\u6ca1\u6709\u4eba\u80fd\u5982\u6b64\u8fd1\u8ddd\u79bb\u5730\u4f30\u8ba1\u3002\u6590\u6ce2\u7eb3\u5951\u6570\u5217\u5728\u6bcf\u4e00\u6b65\u90fd\u4f1a\u4e0a\u5347~60%\uff0c\u6240\u4ee5\u4f60\u4e0d\u4f1a\u88ab\u8feb\u975e\u5e38\u63a5\u8fd1\u4f60\u7684\u4f30\u8ba1\u503c\u3002\n\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u5efa\u8bae\u57fa\u4e8e\u60a8\u9996\u5148\u5173\u5fc3\u7684\u6807\u5ea6\uff0c\u5373\u65f6\u95f4\uff0c\u8fdb\u884c\u57fa\u6570\u4e3a2\u7684\u5e42\u8fd0\u7b97\u3002\n\u5982\u679c\u4f30\u8ba1\u662f\u5728\u53ef\u6d4b\u91cf\u7684\u65f6\u95f4\u5185\u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u5982\u679c\u5de5\u7a0b\u5e08\u6ca1\u6709\u8fbe\u5230\u4ed6\u4eec\u7684\u4f30\u8ba1\uff0c\u4ed6\u4eec\u4f1a\u89c9\u5f97\u81ea\u5df1\u641e\u7838\u4e86\u3002\n\u597d\u7684\uff0c\u4f30\u8ba1\u662f\u5f88\u56f0\u96be\u7684\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u4efb\u4f55\u4eba\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u662f\u5b8c\u7f8e\u7684\u4f30\u8ba1\u8005\u800c\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u7cdf\u7cd5\u7684\u5de5\u7a0b\u5e08\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0e\u5176\u5f00\u59cb\u4e00\u573a\u201c\u5230\u5e95\u662f\u8c01\u7684\u7ebf\uff1f\u201d\u7684\u6e38\u620f\uff0c\u4e0d\u5982\u5148\u73a9\u4e00\u573a\u201c\u5230\u5e95\u662f\u8c01\u7684\u7ebf\uff1f\u201d\n\u5982\u679c\u4f30\u8ba1\u7ed3\u679c\u662f\u4e0d\u597d\u7684\uff0c\u5219\u53ef\u4ee5\u5728\u4e0d\u635f\u5bb3\u4f30\u8ba1\u8005\u7684\u60c5\u51b5\u4e0b\u5bf9\u5176\u8fdb\u884c\u91cd\u65b0\u4f30\u8ba1\u3002\n\u6211\u662f\u654f\u6377\u65b9\u6cd5\u8bba\u548c\u654f\u6377\u5ba3\u8a00\u7684\u7c89\u4e1d\u3002\u6211\u4e0d\u662fScrum\u7684\u7c89\u4e1d\u3002\u5728\u540e\u9762\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u8ba1\u5212\u56de\u987e\u4e00\u4e0b\u6211\u5bf9\u5982\u4f55\u5728\u8fd0\u884c\u201c\u654f\u6377\u201d\u7ec4\u7ec7\u7684\u540c\u65f6\u505a\u4e9b\u4ec0\u4e48\u6765\u4ee3\u66ffScrum\u7684\u60f3\u6cd5\u3002", "note_en": "&#34;Oh you had problems with Scrum at your last employer? Well, that&#39;s not real Scrum.&#34;- your scrum master, who is not a true Scotsman  Click To Tweet   It\u2019s hard to criticize Scrum. The idea of \u201cScrum\u201d in my mind is likely very different from the one you are familiar with. This is by design, and by admission. In the official  Scrum Guide we find Scrum\u2019s definition:\n A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.\n   Because the definition is so vague, the only thing I\u2019ll be able to criticize throughout the rest of my tirade is the common practices of \u201cScrummers\u201d that I\u2019m familiar with. Hopefully, some of you lovely readers can relate.\n   The heart of Scrum is a Sprint, a time-box of one month or less during which a \u201cDone\u201d, useable, and potentially releasable product Increment is created\n Sprints are useful like achievements in video games are useful; they make us feel warm and fuzzy inside. Motivation is a powerful tool, don\u2019t misunderstand me. The problem is that those warm fuzzies are mostly for the sake of  the management team. It makes them feel in control and informed. They know exactly what was done and when it was completed.\n  Sprints require achievable short-term goals. Let\u2019s pretend that I\u2019m part of a team that does two-week sprints (because the duration must be consistent) and I\u2019m assigned to build an API that isn\u2019t useful until the whole thing is completed. Let\u2019s also say that in my head I believe the whole task to take two months if I can work consistently.\n  I need to break the API into pieces that can be completed in 2-week increments. I might be able to get some of the endpoints done in as little as a day or two, but I don\u2019t want to miss any of my goals, and I know some of the more difficult logic could take as long as an entire week per endpoint. There are 14 endpoints so I decide on a round figure of 2 endpoints per sprint.\n  An API that could have been completed in  2 months will now take almost  4 months because I\u2019ve wasted time putting in  artificial stopping points along the way. My imposter syndrome starts to set in, but at least management will have pretty burndown charts.\n  The Scrum Master is a servant-leader for the Scrum Team. The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which aren\u2019t.\n  https://www.scrumguides.org/scrum-guide.html\n Depending on how the idea of the scrum master is implemented, it can be a bad idea or a worse one. Let\u2019s just talk about what seems to me to be the most common scenario.\n The scrum master is a non-technical, middle-management type that likes to be in charge of stuff.\n In addition to all of their development work, the engineers are now interrupted frequently by the scrum master who is asking when the \u201cJava code\u201d for the React app will be done.\n The very individual whose purpose it is to stop the outside world from bothering their developers is the single biggest bother. In my opinion, non-technical people should rarely, if ever, be managing technical people (except the CEO). I should be able to go to my boss for help and advice with my tasks, or at the very least I should expect them to  understand my assignments.\n Even if the scrum master is a lovable person who grasps the technical issues from a high-level,  Scrum Master isn\u2019t a full-time job. Too often scrum masters daily tasks involve a stand-up or two in the morning, a meeting with higher-ups in the afternoon, and not much else.\n If you still feel the need for a \u201cscrum master\u201d, just let the lead developers handle the job. They are already at stand-up and likely have a better idea of what is going on. You aren\u2019t putting more on their plates, you are likely taking something off.\n   Within Scrum, estimates have a primary purpose \u2013 to figure out how much work the team can accomplish in a given sprint. If I were to grant that Sprints were a good idea (which I obviously don\u2019t believe) then the description of estimates in the official Scrum guide wouldn\u2019t be a problem.\n The problem is that estimates in practice are a bastardization of reality. The Scrum guide is vague on the topic so managers take matters into their own hands. With this in mind, I am again going to criticize some common practices that I have seen in regards to estimates.\n  Many super-hip organizations enjoy using the most confusing scales for estimates. They claim that this somehow makes estimating a faster and less stressful process. I remain woefully unconvinced.\n My first day at a new company during our estimation meeting after hearing they used the dreaded \u201cstory points\u201d system:\n Scrum master: \u201cFibonacci, where 8 points is the max because we defined it as the amount of work a developer can handle during a two-week sprint\u201d.\n       The end goal of an estimate is to convert  workload -&gt; time. Why do we need to add an extra step of  workload -&gt; story points -&gt; time? A simple estimate of \u201chow many days?\u201d would have been easier to think and reason about, while also providing more granularity.\n  We use fibonacci because its hard to imagine the difference between 7 and 8 days. No one can estimate that closely. Fibonacci sequences go up by ~60% at each step so you aren\u2019t forced to get very close to your estimate.\n To that, I propose base-2 exponentiation based on the scale you care about in the first place,  time.\n   If estimates are grounded in measurable time then engineers will feel like they\u2019ve screwed up if they miss their estimate.\n Good point, estimating is hard and we don\u2019t want anyone to feel like they are a bad engineer just because they aren\u2019t the perfect estiamtor. That said, maybe instead of starting a game of \u201cWhose Line Is It Anyway?\u201d\n    If an estimate turns out to be bad it can be re-estimated at  no detriment to the estimator.\n  I\u2019m a fan of agile methodologies and the  Agile Manifesto. I\u2019m not a fan of Scrum. In a later article, I plan to go over my thoughts on what to do in lieu of Scrum while still running an \u201cagile\u201d organization.", "posttime": "2020-05-19 19:45:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7559\u7ed9,scrum", "title": "\u628aScrum\u7559\u7ed9\u6a44\u6984\u7403", "title_en": "Leave Scrum to Rugby", "transed": 1, "url": "https://qvault.io/2020/05/18/leave-scrum-to-rugby-i-like-getting-stuff-done/", "via": "", "real_tags": ["\u7559\u7ed9", "scrum"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002766, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6613\u6377\u822a\u7a7a(EasyJet)\u900f\u9732\uff0c\u5728\u9488\u5bf9\u8be5\u822a\u7a7a\u516c\u53f8\u7684\u4e00\u6b21\u201c\u9ad8\u5ea6\u590d\u6742\u7684\u201d\u7f51\u7edc\u653b\u51fb\u4e2d\uff0c900\u4e07\u5ba2\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\u88ab\u83b7\u53d6\u3002\n\u8be5\u516c\u53f8\u5468\u4e8c\u62ab\u9732\uff0c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u65c5\u884c\u8be6\u7ec6\u4fe1\u606f\u5df2\u88ab\u83b7\u53d6\uff0c\u5e76\u8868\u793a\u5c06\u8054\u7cfb\u6240\u6709\u53d7\u5f71\u54cd\u7684\u5ba2\u6237\u3002\neasyJet\u5728\u63d0\u4ea4\u7ed9\u80a1\u5e02\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u5728900\u4e07\u53d7\u5f71\u54cd\u7684\u4eba\u4e2d\uff0c\u67092208\u4eba\u7684\u4fe1\u7528\u5361\u4fe1\u606f\u88ab\u76d7\u3002\n\u90a3\u4e9b\u4fe1\u7528\u5361\u8be6\u7ec6\u4fe1\u606f\u88ab\u76d7\u7684\u5ba2\u6237\u5df2\u7ecf\u5f97\u5230\u8054\u7cfb\uff0c\u800c\u5176\u4ed6\u53d7\u5f71\u54cd\u7684\u4eba\u4e5f\u5c06\u5728\u201c\u672a\u6765\u51e0\u5929\u201d\u5f97\u5230\u8054\u7cfb\u3002\n\u6570\u636e\u76d1\u7ba1\u673a\u6784\u4fe1\u606f\u4e13\u5458\u529e\u516c\u5ba4(ICO)\u5efa\u8baeEasyJet\u8054\u7cfb\u6240\u6709\u53d7\u5f71\u54cd\u7684\u4eba\uff0c\u56e0\u4e3a\u9493\u9c7c\u6b3a\u8bc8\u7684\u98ce\u9669\u589e\u52a0\u4e86\u3002\n\u6613\u6377\u822a\u7a7a\u8868\u793a\uff0c\u201c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u4efb\u4f55\u6027\u8d28\u7684\u4e2a\u4eba\u4fe1\u606f\u88ab\u6ee5\u7528\u201d\u3002\n\u6613\u6377\u822a\u7a7a\u9996\u5e2d\u6267\u884c\u5b98\u7ea6\u7ff0\u00b7\u4f26\u5fb7\u683c\u4f26(Johan Lundgren)\u8868\u793a\uff1a\u201c\u6211\u4eec\u60f3\u5411\u90a3\u4e9b\u53d7\u5230\u8fd9\u8d77\u4e8b\u4ef6\u5f71\u54cd\u7684\u5ba2\u6237\u9053\u6b49\u3002\n\u4ed6\u8bf4\uff1a\u201c\u81ea\u4ece\u6211\u4eec\u77e5\u6089\u8fd9\u5b97\u4e8b\u4ef6\u540e\uff0c\u5f88\u660e\u663e\uff0c\u7531\u65bc\u51a0\u72b6\u75c5\u6bd2\uff0c\u5e02\u6c11\u5bf9\u4e2a\u4eba\u8d44\u6599\u88ab\u7528\u4f5c\u7f51\u4e0a\u8bc8\u9a97\u7684\u95ee\u9898\u6108\u6765\u6108\u5173\u6ce8\u3002\u56e0\u6b64\uff0c\u6839\u636eICO\u7684\u5efa\u8bae\uff0c\u6211\u4eec\u6b63\u5728\u8054\u7cfb\u90a3\u4e9b\u65c5\u884c\u4fe1\u606f\u88ab\u83b7\u53d6\u7684\u5ba2\u6237\uff0c\u6211\u4eec\u5efa\u8bae\u4ed6\u4eec\u63d0\u9ad8\u8b66\u60d5\uff0c\u7279\u522b\u662f\u5728\u4ed6\u4eec\u6536\u5230\u4e3b\u52a8\u901a\u4fe1\u7684\u60c5\u51b5\u4e0b\u3002\u201c", "note_en": "EasyJet has revealed that the personal information of 9 million customers was accessed in a \u201chighly sophisticated\u201d cyber-attack on the airline.\n The company on Tuesday disclosed that email addresses and travel details were accessed and said it will contact all of the customers affected.\n Of the 9 million people affected, 2,208 had credit card details stolen,  easyJet said in a statement to the stock market.\n Those customers whose credit card details were taken have already been contacted, while everyone else affected will be contacted in the \u201cnext few days\u201d.\n The Information Commissioner\u2019s Office (ICO), the data regulator, has recommended easyJet contact everyone affected because of an increased risk of phishing fraud.\n EasyJet said \u201cthere is no evidence that any personal information of any nature has been misused\u201d.\n  The easyJet chief executive, Johan Lundgren, said: \u201cWe would like to apologise to those customers who have been affected by this incident.\n \u201cSince we became aware of the incident, it has become clear that owing to Covid-19 there is heightened concern about personal data being used for online scams. As a result, and on the recommendation of the ICO, we are contacting those customers whose travel information was accessed and we are advising them to be extra vigilant, particularly if they receive unsolicited communications.\u201d", "posttime": "2020-05-19 19:29:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u822a\u7a7a,reveals,\u8868\u793a", "title": "\u6613\u6377\u822a\u7a7a\u62ab\u9732\u7f51\u7edc\u653b\u51fb\u66b4\u9732\u4e86900\u4e07\u5ba2\u6237\u7684\u8be6\u7ec6\u4fe1\u606f", "title_en": "EasyJet reveals cyber-attack exposed 9m customers' details", "transed": 1, "url": "https://www.theguardian.com/business/2020/may/19/easyjet-cyber-attack-customers-details-credit-card", "via": "", "real_tags": ["\u822a\u7a7a", "reveals", "\u8868\u793a"]}, {"category": "", "categoryclass": "", "imagename": "90e9d7285aa8faa8538fd6ea6cfc61e0.jpg", "infoid": 1002765, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81f4\u5bc6\u661f\u56e2\u4e2d\u7684\u9ed1\u6d1e\u548c\u4e2d\u5b50\u661f\u4e4b\u95f4\u7684\u5408\u5e76\u4e0e\u5728\u6052\u661f\u7a00\u5c11\u7684\u5b64\u7acb\u5730\u533a\u5f62\u6210\u7684\u5408\u5e76\u975e\u5e38\u4e0d\u540c\u3002\u5b83\u4eec\u7684\u76f8\u5173\u7279\u5f81\u53ef\u80fd\u5bf9\u7814\u7a76\u5f15\u529b\u6ce2\u53ca\u5176\u6765\u6e90\u81f3\u5173\u91cd\u8981\u3002\u6d77\u5fb7\u5821\u5927\u5b66\u5929\u6587\u8ba1\u7b97\u7814\u7a76\u6240\u7684\u66fc\u52aa\u57c3\u5c14\u00b7\u963f\u5361\u00b7\u585e\u8fbe\u535a\u58eb\u5728\u4e00\u9879\u4f7f\u7528\u8ba1\u7b97\u673a\u6a21\u62df\u7684\u7814\u7a76\u4e2d\u5f97\u51fa\u4e86\u8fd9\u4e00\u7ed3\u8bba\u3002\u8fd9\u9879\u7814\u7a76\u53ef\u80fd\u4f1a\u4e3a\u5929\u6587\u5b66\u5bb6\u57282019\u5e74\u89c2\u5bdf\u5230\u7684\u4e24\u4e2a\u5927\u8d28\u91cf\u6052\u661f\u7269\u4f53\u7684\u878d\u5408\u63d0\u4f9b\u5173\u952e\u7684\u89c1\u89e3\u3002\u8fd9\u9879\u7814\u7a76\u7ed3\u679c\u53d1\u8868\u5728\u201c\u901a\u4fe1\u7269\u7406\u201d\u6742\u5fd7\u4e0a\u3002\u6bd4\u592a\u9633\u5927\u5f97\u591a\u7684\u6052\u661f\u901a\u5e38\u4ee5\u4e2d\u5b50\u661f\u6216\u9ed1\u6d1e\u7684\u5f62\u5f0f\u7ed3\u675f\u751f\u547d\u3002\u4e2d\u5b50\u661f\u53d1\u51fa\u89c4\u5219\u7684\u8f90\u5c04\u8109\u51b2\uff0c\u4f7f\u5b83\u4eec\u80fd\u591f\u88ab\u63a2\u6d4b\u5230\u3002\u4f8b\u5982\uff0c2017\u5e748\u6708\uff0c\u5f53\u89c2\u5bdf\u5230\u7b2c\u4e00\u6b21\u53cc\u4e2d\u5b50\u661f\u5408\u5e76\u65f6\uff0c\u5168\u7403\u5404\u5730\u7684\u79d1\u5b66\u5bb6\u7528\u671b\u8fdc\u955c\u63a2\u6d4b\u5230\u4e86\u7206\u70b8\u4ea7\u751f\u7684\u5149\u7ebf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u9ed1\u6d1e\u901a\u5e38\u4fdd\u6301\u9690\u85cf\u72b6\u6001\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5f15\u529b\u5982\u6b64\u4e4b\u5f3a\uff0c\u751a\u81f3\u8fde\u5149\u90fd\u65e0\u6cd5\u9003\u8131\uff0c\u4f7f\u5f97\u7535\u78c1\u63a2\u6d4b\u5668\u770b\u4e0d\u5230\u5b83\u4eec\u3002\n\u5982\u679c\u4e24\u4e2a\u5408\u5e76\uff0c\u4e8b\u4ef6\u53ef\u80fd\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u4ece\u6240\u8c13\u7684\u65f6\u7a7a\u6d9f\u6f2a\u4e2d\u68c0\u6d4b\u5230\u3002\u67d0\u4e9b\u63a2\u6d4b\u5668\uff0c\u5982\u7f8e\u56fd\u7684\u6fc0\u5149\u5e72\u6d89\u4eea\u5f15\u529b\u6ce2\u5929\u6587\u53f0(LIGO)\uff0c\u80fd\u591f\u63a2\u6d4b\u5230\u8fd9\u4e9b\u6ce2\u3002\u7b2c\u4e00\u6b21\u6210\u529f\u7684\u76f4\u63a5\u89c2\u6d4b\u662f\u57282015\u5e74\u3002\u8fd9\u4e2a\u4fe1\u53f7\u662f\u7531\u4e24\u4e2a\u9ed1\u6d1e\u4ea7\u751f\u7684\u3002\u4f46\u8fd9\u4e00\u4e8b\u4ef6\u53ef\u80fd\u4e0d\u662f\u5f15\u529b\u6ce2\u7684\u552f\u4e00\u6765\u6e90\uff0c\u5f15\u529b\u6ce2\u4e5f\u53ef\u80fd\u6765\u81ea\u4e24\u4e2a\u6216\u4e00\u4e2a\u9ed1\u6d1e\u4e0e\u4e2d\u5b50\u661f\u7684\u5408\u5e76\u3002\u6839\u636eArca Sedda\u535a\u58eb\u7684\u8bf4\u6cd5\uff0c\u53d1\u73b0\u8fd9\u4e9b\u5dee\u5f02\u662f\u89c2\u5bdf\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u4e3b\u8981\u6311\u6218\u4e4b\u4e00\u3002\n\u5728\u4ed6\u7684\u7814\u7a76\u4e2d\uff0c\u6d77\u5fb7\u5821\u7684\u7814\u7a76\u4eba\u5458\u5206\u6790\u4e86\u9ed1\u6d1e\u548c\u4e2d\u5b50\u661f\u5bf9\u7684\u878d\u5408\u3002\u4ed6\u4f7f\u7528\u8be6\u7ec6\u7684\u8ba1\u7b97\u673a\u6a21\u62df\u6765\u7814\u7a76\u7531\u6052\u661f\u548c\u81f4\u5bc6\u7269\u4f53(\u5982\u9ed1\u6d1e)\u7ec4\u6210\u7684\u7cfb\u7edf\u4e0e\u805a\u53d8\u6240\u9700\u7684\u7b2c\u4e09\u4e2a\u5927\u8d28\u91cf\u6f2b\u6e38\u7269\u4f53\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u7ed3\u679c\u8868\u660e\uff0c\u8fd9\u79cd\u4e09\u4f53\u76f8\u4e92\u4f5c\u7528\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4fc3\u8fdb\u50cf\u7403\u72b6\u661f\u56e2\u8fd9\u6837\u5bc6\u96c6\u6052\u661f\u533a\u57df\u7684\u9ed1\u6d1e-\u4e2d\u5b50\u661f\u5408\u5e76\u3002\u66fc\u52aa\u57c3\u5c14\u00b7\u963f\u5361\u00b7\u585e\u8fbe(Manuel Arca Sedda)\u89e3\u91ca\u8bf4\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7c7b\u7279\u6b8a\u7684\u52a8\u6001\u5408\u5e76\uff0c\u5b83\u4e0e\u5b64\u7acb\u5730\u533a\u7684\u5408\u5e76\u622a\u7136\u4e0d\u540c\uff0c#34\uff1b\u66fc\u52aa\u57c3\u5c14\u00b7\u963f\u5361\u00b7\u585e\u8fbe(Manuel Arca Sedda)\u89e3\u91ca\u8bf4\u3002\n2019\u5e748\u6708\uff0c\u5f15\u529b\u6ce2\u5929\u6587\u53f0\u9996\u6b21\u89c2\u6d4b\u5230\u9ed1\u6d1e\u4e0e\u4e2d\u5b50\u661f\u7684\u878d\u5408\u3002\u7136\u800c\uff0c\u4e16\u754c\u5404\u5730\u7684\u5149\u5b66\u5929\u6587\u53f0\u90fd\u65e0\u6cd5\u5728\u5f15\u529b\u6ce2\u4fe1\u53f7\u7684\u53d1\u6e90\u5730\u627e\u5230\u7535\u78c1\u5bf9\u5e94\u7269\uff0c\u8fd9\u8868\u660e\u9ed1\u6d1e\u5728\u6ca1\u6709\u9996\u5148\u6467\u6bc1\u4e2d\u5b50\u661f\u7684\u60c5\u51b5\u4e0b\u5c31\u5b8c\u5168\u541e\u566c\u4e86\u5b83\u3002\u5982\u679c\u5f97\u5230\u8bc1\u5b9e\uff0c\u8fd9\u53ef\u80fd\u662f\u9996\u6b21\u89c2\u6d4b\u5230\u7684\u5728\u5bc6\u96c6\u6052\u661f\u73af\u5883\u4e2d\u89c2\u6d4b\u5230\u7684\u9ed1\u6d1e-\u4e2d\u5b50\u661f\u5408\u5e76\uff0c\u6b63\u5982Arca Sedda\u535a\u58eb\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u66f4\u591a\u4fe1\u606f\uff1aManuel Arca Sedda\uff0c\u5256\u6790\u8d77\u6e90\u4e8e\u81f4\u5bc6\u661f\u56e2\u7684\u4e2d\u5b50\u661f-\u9ed1\u6d1e\u5408\u5e76\u7684\u6027\u8d28\uff0c\u901a\u4fe1\u7269\u7406(2020)\u3002\u7f51\u5740\uff1a10.1038/s420050310-x", "note_en": "Mergers between black holes and neutron stars in dense star clusters are quite unlike those that form in isolated regions where stars are few. Their associated features could be crucial to the study of gravitational waves and their source. Dr. Manuel Arca Sedda of the Institute for Astronomical Computing at Heidelberg University came to this conclusion in a study that used computer simulations. The research may offer critical insights into the fusion of two massive stellar objects that astronomers observed in 2019. The findings were published in the journal  Communications Physics.    Stars much more massive than our sun usually end their lives as a neutron star or black hole. Neutron stars emit regular pulses of radiation that allow their detection. In August 2017, for example, when the first double neutron star merger was observed, scientists all around the globe detected light from the explosion with their telescopes. Black holes, on the other hand, usually remain hidden because their gravitational attraction is so strong that even light cannot escape, making them invisible to electromagnetic detectors.\n  If two   merge, the event may be invisible but is nonetheless detectable from ripples in space-time in the form of so-called  . Certain detectors, like the &#34;Laser Interferometer Gravitational Waves Observatory&#34; (LIGO) in the USA, are able to detect these waves. The first successful direct observation was made in 2015. The signal was generated by the   of two black holes. But this event may not be the only source of gravitational waves, which could also come from the merger of two   or a black hole with a neutron star. Discovering the differences is one of the major challenges in observing these events, according to Dr. Arca Sedda.\n  In his study, the Heidelberg researcher analysed the fusion of pairs of black holes and neutron stars. He used detailed computer simulations to study the interactions between a system made up of a star and a compact object, such as a black hole, and a third massive roaming object that is required for a fusion. The results indicate that such three-body interactions can in fact contribute to black hole-neutron star mergers in dense stellar regions like globular star clusters. &#34;A special family of dynamic mergers that is distinctly different from mergers in isolated areas can be defined,&#34; explains Manuel Arca Sedda.\n  The fusion of a black hole with a neutron star was first observed by gravitational wave observatories in August 2019. Yet optical observatories around the world were unable to locate an electromagnetic counterpart in the region from which the gravitational wave signal originated, suggesting that the black hole had completely devoured the neutron star without first destroying it. If confirmed, this could be the first observed black hole-neutron star merger detected in a dense stellar environment, as described by Dr. Arca Sedda.        More information:\t\t\t\t\t\t\t\t\t\t\t\tManuel Arca Sedda, Dissecting the properties of neutron star\u2013black hole mergers originating in dense star clusters,  Communications Physics (2020).  DOI: 10.1038/s42005-020-0310-x", "posttime": "2020-05-19 19:00:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u6d1e,holes,\u5408\u5e76", "title": "\u9ed1\u6d1e\u548c\u4e2d\u5b50\u661f\u5728\u81f4\u5bc6\u661f\u56e2\u4e2d\u5408\u5e76\uff0c\u8fd9\u662f\u770b\u4e0d\u89c1\u7684\u3002", "title_en": "Black holes and neutron stars merge unseen in dense star clusters", "transed": 1, "url": "https://phys.org/news/2020-05-black-holes-neutron-stars-merge.html", "via": "", "real_tags": ["\u9ed1\u6d1e", "holes", "\u5408\u5e76"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002764, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fb7\u56fd\u5361\u5c14\u65af\u9c81\u5384\uff0c5\u670819\u65e5(\u8def\u900f\u793e)-\u5fb7\u56fd\u5baa\u6cd5\u6cd5\u9662\u5468\u4e8c\u88c1\u5b9a\uff0cBND\u60c5\u62a5\u673a\u6784\u76d1\u63a7\u5916\u56fd\u516c\u6c11\u5728\u56fd\u5916\u7684\u4e92\u8054\u7f51\u6d41\u91cf\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fdd\u53cd\u4e86\u5baa\u6cd5\u3002\n\u8fd9\u9879\u671f\u5f85\u5df2\u4e45\u7684\u88c1\u51b3\u79f0\uff0c\u5bf9\u5883\u5916\u5916\u56fd\u4eba\u7684\u4e92\u8054\u7f51\u76d1\u63a7\u8fdd\u53cd\u4e86\u8be5\u56fd\u5baa\u6cd5\u89c4\u5b9a\u7684\u65b0\u95fb\u81ea\u7531\u3002\n\u8fd9\u662f\u6cd5\u9662\u9996\u6b21\u88c1\u5b9aBND\u5373\u4f7f\u5728\u6d77\u5916\u6d3b\u52a8\u4e5f\u53d7\u5fb7\u56fd\u5baa\u6cd5\u7ba1\u8f96\uff0c\u8fd9\u610f\u5473\u7740\u5916\u56fd\u8bb0\u8005\u548c\u8bb0\u8005\u65e0\u56fd\u754c\u7ec4\u7ec7(Reports Without Borders)\u63d0\u51fa\u7684\u7533\u8bc9\u57fa\u672c\u4e0a\u662f\u6210\u529f\u7684\u3002(Ursula Knapp\u62a5\u9053\uff0cMadeline Chambers\u7f16\u5199\uff0cMichelle Martin\u7f16\u8f91)", "note_en": "KARLSRUHE, Germany, May 19 (Reuters) - Germany&#39;s Constitutional Court ruled on Tuesday that monitoring the internet traffic of foreign nationals abroad by the BND intelligence agency partly breaches the constitution.\n  The long-awaited ruling stated that internet surveillance of foreigners abroad violates the freedom of the press enshrined in the country&#39;s constitution.\n  It is the first time the court has ruled that the BND is subject to Germany&#39;s constitution even for its activities abroad and means that complaints brought by foreign journalists and Reporters Without Borders were largely successful. (Reporting by Ursula Knapp Writing by Madeline Chambers Editing by Michelle Martin)", "posttime": "2020-05-19 18:44:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6700\u9ad8\u6cd5\u9662,top,\u5fb7\u56fd", "title": "\u5fb7\u56fd\u6700\u9ad8\u6cd5\u9662\u5c06\u9690\u79c1\u6743\u6269\u5927\u5230\u5916\u56fd\u4eba\uff0c\u6682\u505c\u7a83\u542c\u9879\u76ee", "title_en": "Germany\u2019s Top Court Extends Privacy Rights to Foreigners, Halts Wiretap Programs", "transed": 1, "url": "https://news.trust.org/item/20200519072904-kkpa7/", "via": "", "real_tags": ["\u6700\u9ad8\u6cd5\u9662", "top", "\u5fb7\u56fd"]}, {"category": "", "categoryclass": "", "imagename": "4e4a3cb708b261bea5009dcd9b4593f7.jpg", "infoid": 1002762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Polygon\u83b7\u5f97\u7684\u6cd5\u5ead\u6587\u4ef6\u663e\u793a\uff0c\u7f8e\u56fd\u4efb\u5929\u5802\u5468\u4e94\u5bf9\u9500\u552e\u73a9\u76d7\u7248\u89c6\u9891\u6e38\u620f\u8f6f\u4ef6\u7684\u4efb\u5929\u5802Switch\u9ed1\u5ba2\u7ecf\u9500\u5546\u63d0\u8d77\u4e24\u8d77\u8bc9\u8bbc\u3002\n\u7b2c\u4e00\u8d77\u8bc9\u8bbc\u662f\u5468\u4e94\u5728\u4fc4\u4ea5\u4fc4\u5dde\u4e00\u5bb6\u6cd5\u9662\u5bf9\u5c0f\u6c64\u59c6\u00b7\u8fea\u5c14\u65af(Tom Dilts Jr.)\u63d0\u8d77\u7684\uff0c\u4ed6\u88ab\u6307\u63a7\u4e3aUberChips\u7f51\u7ad9\u7684\u8fd0\u8425\u5546\u3002\u7b2c\u4e8c\u8d77\u8bc9\u8bbc\u662f\u540c\u4e00\u5929\u5728\u897f\u96c5\u56fe\u4e00\u5bb6\u6cd5\u9662\u63d0\u8d77\u7684\uff0c\u9488\u5bf9\u7684\u662f\u6765\u81ea\u4e00\u4e9b\u7cbe\u9009\u7f51\u7ad9\u7684\u4e00\u4e9b\u533f\u540d\u88ab\u544a\u3002\u636e\u62a5\u9053\uff0c\u6240\u6709\u88ab\u544a\u90fd\u51fa\u552e\u4e00\u7fa4\u540d\u4e3a\u201cTeam Xecuter\u201d\u7684\u533f\u540d\u9ed1\u5ba2\u7684\u4ea7\u54c1\u3002\u4efb\u5929\u5802\u7684\u5f8b\u5e08\u5c06\u8fd9\u4e9b\u4ea7\u54c1\u63cf\u8ff0\u4e3a\u201c\u672a\u7ecf\u6388\u6743\u7684\u64cd\u4f5c\u7cfb\u7edf\u2026\u2026\u3002\u5e76\u9644\u5e26\u5b89\u88c5\u8be5\u8f6f\u4ef6\u7684\u76d7\u7248\u5de5\u5177\u3002\u201c\u3002\n\u8fd9\u4e9b\u4ea7\u54c1\u5141\u8bb8\u7528\u6237\u7ed5\u8fc7\u4efb\u5929\u5802\u65e8\u5728\u4fdd\u62a4\u5176\u4ea7\u54c1\u514d\u53d7\u201c\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u548c\u590d\u5236\u201d\u7684\u201c\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\u201d\u3002\u5f8b\u5e08\u4eec\u8bf4\uff0c\u4e00\u65e6\u88ab\u7981\u7528\uff0c\u73a9\u5bb6\u5c31\u53ef\u4ee5\u4e0b\u8f7d\u672a\u7ecf\u6388\u6743\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u73a9\u76d7\u7248\u89c6\u9891\u6e38\u620f\u3002\n\u4e3a\u4e86\u6253\u51fb\u9ed1\u5ba2\u653b\u51fb\uff0c\u4efb\u5929\u5802\u6b63\u5c06\u6cd5\u5f8b\u52aa\u529b\u7684\u91cd\u70b9\u653e\u5728\u7ecf\u9500\u5546\u8eab\u4e0a\u30022018\u5e74\uff0c\u4efb\u5929\u5802\u5bf9Team Xecutor\u9ed1\u5ba2\u7ecf\u9500\u5546\u63d0\u8d77\u4e86\u7c7b\u4f3c\u7684\u8bc9\u8bbc\u3002\u4eca\u5e741\u6708\uff0c\u5b83\u8d62\u5f97\u4e86\u9488\u5bf9\u8be5\u6848\u88ab\u544a\u585e\u5c14\u5409\u5965\u00b7\u83ab\u8d3e\u7f57\u00b7\u83ab\u96f7\u8bfa(Sergio Mojarro Moreno)\u7684\u7981\u4ee4\uff0c\u540e\u8005\u88ab\u52d2\u4ee4\u505c\u6b62\u8f6c\u552e\u9ed1\u5ba2\u3002\u540c\u6837\uff0c\u4efb\u5929\u5802\u57282019\u5e749\u6708\u5bf9\u4e00\u5bb6\u540d\u4e3aRomUniversal\u7684ROM\u7f51\u7ad9\u63d0\u8d77\u8bc9\u8bbc\uff0c\u8be5\u7f51\u7ad9\u5141\u8bb8\u4f1a\u5458\u4e3a\u8be5\u7cfb\u7edf\u548c\u5176\u4ed6\u516c\u53f8\u4e0b\u8f7d\u76d7\u7248\u89c6\u9891\u6e38\u620f\u3002\n\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0cUberChips\u7f51\u7ad9\u4f3c\u4e4e\u5904\u4e8e\u79bb\u7ebf\u72b6\u6001\uff0c\u5904\u4e8e\u201c\u5b9a\u671f\u7ef4\u62a4\u201d\u72b6\u6001\u3002\u7b2c\u4e8c\u8d77\u8bc9\u8bbc\u4e2d\u5217\u51fa\u7684\u5176\u4ed6\u7f51\u7ad9\u4ecd\u5728\u8fd0\u8425\u3002\u7528\u4e8e\u5165\u4fb5\u4efb\u5929\u5802\u4ea4\u6362\u673a\u7684\u5957\u4ef6\u6807\u4ef7\u4e3a47.99\u7f8e\u5143\u3002\u8be5\u7f51\u7ad9\u8fd8\u9500\u552eSNES Classic\u3001PlayStation Mini\u3001\u4efb\u5929\u58023DS\u548cGame Boy Advance\u7684\u4ea7\u54c1\u3002\n\u8fd9\u4e9b\u7f51\u7ad9\u8fd8\u63d0\u4f9b\u8bbe\u5907\u9884\u8ba2\uff0c\u8fd9\u4e9b\u8bbe\u5907\u5c06\u7ed5\u8fc7\u4e4b\u524d\u4e0d\u53ef\u7834\u89e3\u7684\u4efb\u5929\u5802Switch Lite\u548c\u8f83\u65b0\u7684\u4efb\u5929\u5802Switch\u673a\u578b\u7684\u4fdd\u62a4\u63aa\u65bd\u3002\u4efb\u5929\u5802\u8868\u793a\uff0c\u8fd9\u5bf9\u516c\u53f8\u9020\u6210\u4e86\u201c\u5de8\u5927\u7684\u4f24\u5bb3\u201d\uff1b\u4efb\u5929\u5802\u7684\u5f8b\u5e08\u8bf4\uff0c\u6570\u767e\u53f0\u8bbe\u5907\u5df2\u7ecf\u552e\u51fa\u3002\n\u4efb\u5929\u5802\u5728\u6bcf\u8d77\u6848\u4ef6\u4e2d\u90fd\u8981\u6c42\u6bcf\u4e00\u6b21\u8d29\u8fd0\u8fdd\u89c4\u884c\u4e3a\u83b7\u5f972500\u7f8e\u5143\u7684\u8d54\u507f\uff0c\u5e76\u8981\u6c42\u6c38\u4e45\u7981\u4ee4\u505c\u6b62\u8fd9\u4e9b\u7f51\u7ad9\u7684\u8fd0\u8425\u3002", "note_en": "Nintendo of America filed  two  lawsuits on Friday against Nintendo Switch hack resellers that sell software to play pirated video games, according to court documents obtained by Polygon.\n The first lawsuit was filed Friday in an Ohio court against Tom Dilts Jr., the alleged operator of the website UberChips. The second lawsuit was filed in a Seattle court that same day, against a number of anonymous defendants from a selection of websites. All defendants reportedly sell products from a group of anonymous hackers called \u201cTeam Xecuter.\u201d Nintendo\u2019s lawyers described the products as \u201can unauthorized operating system ... and accompanying piracy tools that install it.\u201d\n These products allow users to get around Nintendo\u2019s \u201ctechnological protection measures\u201d designed to protect its products from \u201cunauthorized access and copying.\u201d Once it\u2019s disabled, players can download the unauthorized operating system and play pirated video games, lawyers said.\n In an attempt to crackdown on the hacks, Nintendo is focusing its legal efforts on the resellers. In 2018, Nintendo filed a similar lawsuit  against a Team Xecutor hack reseller. In January, it won an injunction against the defendant of that case, Sergio Mojarro Moreno, who was ordered to stop reselling the hacks. Likewise, Nintendo filed a lawsuit in September 2019  against a ROM website called RomUniverse, which allows members to download pirated video games for the system and others.\n  At the time of writing, the UberChips website appears to be offline \u2014 under \u201cscheduled maintenance.\u201d Other websites listed in the second lawsuit are still operating. A kit used for hacking the Nintendo Switch is listed for $47.99. The site also sells products for the SNES Classic, PlayStation Mini, Nintendo 3DS, and Game Boy Advance.\n The websites are also offering pre-orders for devices that will circumvent protection measures for the previously unhackable Nintendo Switch Lite and newer Nintendo Switch models. Nintendo said this is causing \u201ctremendous harm\u201d to the company; Nintendo lawyers said hundreds of the devices have already been sold.\n Nintendo is seeking $2,500 per trafficking violation in each of these cases, as well as a permanent injunction to stop operations of these websites.", "posttime": "2020-05-19 18:15:25", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4efb\u5929\u5802,\u9ed1\u5ba2,\u6253\u51fb,files", "title": "\u4efb\u5929\u5802\u5728\u6253\u51fb\u4ea4\u6362\u673a\u9ed1\u5ba2\u65b9\u9762\u63d0\u8d77\u8bc9\u8bbc", "title_en": "Nintendo Files Lawsuits In Crackdown Against Switch Hackers", "transed": 1, "url": "https://www.polygon.com/2020/5/18/21262121/nintendo-switch-hacking-lawsuit-pirated-games", "via": "", "real_tags": ["\u4efb\u5929\u5802", "\u9ed1\u5ba2", "\u6253\u51fb", "files"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002761, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "NeoCities\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u552e\u60a8\u7684\u4e2a\u4eba\u6570\u636e\u6216\u5728\u60a8\u7684\u7f51\u7ad9\u4e0a\u6295\u653e\u5e7f\u544a\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u76f4\u63a5\u7531\u50cf\u4f60\u8fd9\u6837\u7684\u4eba\u901a\u8fc7\u652f\u6301\u8005\u8d26\u6237\u548c\u6350\u6b3e\u63d0\u4f9b\u8d44\u91d1\u3002\n\u4e0e\u8bb8\u591a\u5176\u4ed6\u7f51\u7edc\u4e3b\u673a\u4e0d\u540c\uff0c\u6211\u4eec\u5728\u57fa\u7840\u8bbe\u65bd\u4e0a\u5e76\u4e0d\u541d\u556c\u3002NeoCities\u5728\u5168\u740311\u4e2a\u6570\u636e\u4e2d\u5fc3\u8fd0\u8425\u81ea\u5df1\u7684\u7f13\u5b58CDN\uff0c\u4e3a\u60a8\u7684\u7ad9\u70b9\u63d0\u4f9b\u5feb\u901f\u670d\u52a1\u3002\u6211\u4eec\u8fd8\u5728\u6240\u6709\u7ad9\u70b9\u4e0a\u5f3a\u5236\u4f7f\u7528100%\u5f3aSSL\uff0c\u5e76\u4e14\u5b8c\u5168\u652f\u6301HTTP/2\u3002\u7531\u4e8e\u6211\u4eec\u5bf9\u8d28\u91cf\u7684\u627f\u8bfa\uff0c\u6211\u4eec\u5728\u53ef\u9760\u6027\u3001\u901f\u5ea6\u548c\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u65b9\u9762\u7684\u8868\u73b0\u7ecf\u5e38\u4f18\u4e8e\u6602\u8d35\u7684\u4e91\u670d\u52a1\u3002\u65e0\u8bba\u662f\u60a8\u7684\u4e2a\u4eba\u4e3b\u9875\u8fd8\u662f\u7e41\u5fd9\u7684\u4e13\u4e1a\u7ad9\u70b9\uff0c\u60a8\u7684\u7ad9\u70b9\u52a0\u8f7d\u901f\u5ea6\u90fd\u5f88\u5feb\u3002\n\u6211\u4eec\u5feb\u901f\u7684\u9759\u6001\u6258\u7ba1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u68d2\u7684\u6d4f\u89c8\u5668\u5185HTML\u7f16\u8f91\u5668\u3001\u7b80\u5355\u7684\u6587\u4ef6\u4e0a\u4f20\u3001\u547d\u4ee4\u884c\u5de5\u5177\u3001\u6bcf\u4e2a\u7ad9\u70b9\u7684RSS\u63d0\u8981\u3001\u7528\u4e8e\u6784\u5efa\u5f00\u53d1\u4eba\u5458\u5e94\u7528\u7a0b\u5e8f\u7684API\u7b49\u7b49\uff01\n\u6211\u4eec\u53d1\u5e03\u4e3a\u7ad9\u70b9\u63d0\u4f9b\u52a8\u529b\u7684\u4ee3\u7801\u4ee5\u4f9b\u68c0\u67e5\u3002\u6211\u4eec\u60f3\u8981\u8d62\u5f97\u60a8\u7684\u4fe1\u4efb\uff0c\u800c\u4e0d\u662f\u628a\u60a8\u9501\u5728\u91cc\u9762\u3002\n\u4f5c\u4e3a21\u4e16\u7eaaGeoCities\u7684\u8f6c\u4e16\uff0cNeoCities\u8ba9\u4f60\u53ef\u4ee5\u514d\u8d39\u521b\u5efa\u81ea\u5df1\u7684\u7f51\u7ad9\u3002\u800c\u4e14\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f15\u53d1\u7f51\u7edc\u521b\u610f\u7684\u590d\u5174\u3002", "note_en": "Neocities will never sell your personal data or put advertising on your site. Instead, we are funded directly by people just like you with  supporter accounts and  donations.\n  Unlike many other web hosts, we don&#39;t skimp on infrastructure. Neocities operates our own caching CDN in 11 datacenters all over the world to quickly serve your site. We also force 100% strong SSL on all sites, and have full support for HTTP/2. Because of our commitment to quality, we routinely out-perform the pricey cloud services on reliability, speed and uptime. Whether it\u2019s your personal home page or a busy professional site,  your site loads fast.\n  Our fast static hosting comes with a great in-browser HTML editor, easy file uploading, a  command line tool, RSS feeds for every site,  APIs for building developer applications, and much more!\n  We  publish the code that powers the site for inspection. We want to win your trust\u2014not lock you in.\n  &#34;Designed as a 21st century reincarnation of GeoCities, Neocities lets you make your own site for free.  And it just might spark a renaissance of creativity online.&#34;", "posttime": "2020-05-19 18:14:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb0\u5f97,remember,\u7ad9\u70b9", "title": "\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97GeoCities\uff0c\u8fd9\u662f\u7ed9\u4f60\u7684", "title_en": "If you remember GeoCities this one is for you", "transed": 1, "url": "https://neocities.org", "via": "", "real_tags": ["\u8bb0\u5f97", "remember", "\u7ad9\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u53c8\u4e00\u6761\u5168\u9762\u7684\u7403\u62cd\u65b0\u95fb\uff01\u7403\u62cd\u793e\u533a\u5468\u56f4\u6b63\u5728\u53d1\u751f\u5f88\u591a\u4e8b\u60c5\uff0c\u6162\u6162\u5730\uff0c\u6211\u5728\u52aa\u529b\u8ddf\u4e0a\u6700\u65b0\u7684\u60c5\u51b5\u3002\u5982\u679c\u6211\u5fd8\u4e86\u4ec0\u4e48\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u5728\u4e0b\u4e00\u7248\u51fa\u7248\u3002\n2020\u5e74\u6b27\u6d32Lisp\u7814\u8ba8\u4f1a\u5728\u7f51\u4e0a\u4e3e\u884c\uff0c\u53d6\u5f97\u4e86\u76f8\u5f53\u6210\u529f\u3002\u8fd9\u4e9b\u89c6\u9891\u662f\u5728\u7ebf\u7684\uff0c\u5176\u4e2d\u5305\u62ecAndy Keep\u5728Nanopass\u7f16\u8bd1\u5668\u4e0a\u7684\u4e3b\u9898\u6f14\u8bb2\u3002\n\u4e54\u5c14\u00b7\u8fea\u514b(Joel Dueck)\u521b\u529e\u4e86\u4e00\u4efd\u540d\u4e3a\u201c\u82b1\u7c89\u65f6\u95f4\u201d(Pollen Time)\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u901a\u77e5\u8ba2\u9605\u8005\u6709\u5173\u82b1\u7c89\u6559\u80b2\u548c\u5408\u4f5c\u7684\u5728\u7ebf\u6d3b\u52a8\u3002\n\u6211\u4eec\u81ea\u5df1\u7684Robby Findler\u5c06\u57286\u670815\u65e5\u4e3aChalmers\u5728\u7ebf\u51fd\u6570\u7f16\u7a0b\u7814\u8ba8\u4f1a\u7cfb\u5217\u6f14\u8bb2\u201c\u9ad8\u9636\u8f93\u5165\u7684Concolic\u6d4b\u8bd5\u201d\u3002\u8fd9\u6bb5\u89c6\u9891\u5c06\u5728\u7f51\u4e0a\u6d41\u5a92\u4f53\uff0c\u5e76\u5728\u7a0d\u540e\u53d1\u5e03\u5728\u4ed6\u4eec\u7684YouTube\u9891\u9053\u4e0a\u7ecf\u8fc7\u7f16\u8f91\u7684\u89c6\u9891\u3002\n\u5982\u679c\u60a8\u77e5\u9053\u5e93\u7248\u672c\uff0c\u6216\u8005\u60a8\u81ea\u5df1\u7684\u5e93\uff0c\u5e76\u4e14\u60a8\u5e0c\u671b\u5c06\u5b83\u4eec\u4f5c\u4e3a\u7279\u8272\uff0c\u8bf7\u8ba9\u6211\u77e5\u9053\u3002\n\u8be5\u5e93\u5b9a\u4e49\u4e86\u4e00\u6b21\u6027\u7684\u3001\u53ef\u7ec4\u5408\u7684\u4e00\u6d41\u4ef7\u503c\u751f\u4ea7\u8005\uff0c\u4ee5\u53ca\u5fc5\u987b\u5206\u914d\u548c\u91ca\u653e\u7684\u76f8\u5173\u5916\u90e8\u8d44\u6e90\uff0c\u5982\u6570\u636e\u5e93\u8fde\u63a5\u3002\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5b89\u5168\u62bd\u8c61\u6765\u4f7f\u7528\u53ef\u5904\u7406\u7684\u503c\uff0c\u540c\u65f6\u786e\u4fdd\u5728\u4f7f\u7528\u540e\u91ca\u653e\u4e0e\u5176\u76f8\u5173\u8054\u7684\u8d44\u6e90\u3002\n\u672c\u671f\u7684\u4e13\u9898\u8bba\u6587\u662fJay McCarthy\u6240\u8457\u7684\u5ba4\u5185\u4e50\u6bd5\u591a\u82ac-\u54e5\u5fb7\u5c14\u7f16\u7801\u548c\u529f\u80fd\u60278\u4f4d\u97f3\u9891\u5408\u6210\u3002\n\u6bd5\u591a\u82ac\u662f\u4e00\u4f4d\u591a\u4ea7\u7684\u4f5c\u66f2\u5bb6\uff0c\u5927\u7ea6\u67091.079363\u7f8e\u5143*10239\u7f8e\u5143\u7684\u4e0d\u540c\u4f5c\u66f2\uff0c\u57fa\u4e8e\u56db\u58f0\u90e8\u548c\u58f0\u548c\u57fa\u672c\u548c\u5f26\u8fdb\u884c\u3002\u5b83\u4e0e\u57fa\u4e8e1985\u5e74\u4efb\u5929\u5802\u5a31\u4e50\u7cfb\u7edf(NES)\u4e2d\u7684\u7406\u5149RP2A03\u7684\u7eaf\u529f\u80fd\u97f3\u9891\u5408\u6210\u5f15\u64ce\u76f8\u7ed3\u5408\u3002\u5408\u6210\u5f15\u64ce\u5728\u4e00\u7cfb\u5217\u4e50\u5668\u548c\u6f14\u594f\u98ce\u683c\u4e0a\u88ab\u53c2\u6570\u5316\uff0c\u56e0\u6b64\u6bcf\u9996\u4e50\u66f2\u90fd\u53ef\u4ee5\u5728\u5927\u7ea64.22234*10^41\u79cd\u4e0d\u540c\u7684\u6392\u5217\u6216\u201cNEStrations\u201d\u4e2d\u7684\u4e00\u79cd\u4e2d\u6f14\u594f\u3002\nRacketCon 2020\u672c\u5e94\u57282020\u5e74\u79cb\u5b63\u53d1\u5e03\uff0c\u4f46\u76ee\u524d\u8fd8\u6ca1\u6709\u5b98\u65b9\u6d88\u606f\u3002\n\u672c\u671f\u8282\u76ee\u7531\u4fdd\u7f57\u00b7\u9a6c\u6258\u65af\u4e3a\u60a8\u5e26\u6765\u3002\u4efb\u4f55\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u90fd\u662f\u6211\u4e2a\u4eba\u7684\u610f\u89c1\uff0c\u5e76\u4e0d\u4ee3\u8868PLT\u56e2\u961f\u7684\u89c2\u70b9\uff0c\u4ed6\u4eec\u5f00\u53d1\u4e86\u7403\u62cd\u3002\n\u6211\u4e5f\u8bd5\u7740\u8c03\u67e5\u4e86\u6700\u8fd1\u5728\u7403\u62cd\u90ce\u4e2d\u53d1\u751f\u7684\u6700\u76f8\u5173\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u505a\u4e86\u4e00\u4e9b\u4e86\u4e0d\u8d77\u7684\u4e8b\u60c5\uff0c\u5199\u4e86\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u6216\u8005\u770b\u5230\u4e86\u6211\u9519\u8fc7\u7684\u4e8b\u60c5-\u6211\u7684\u9053\u6b49\u3002\u8ba9\u6211\u77e5\u9053\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5728\u4e0b\u4e00\u671f\u6539\u6b63\u5b83\u3002", "note_en": "This is another full-to-the-brim Racket News! Lots of things are happening all around the Racket community, and slowly I am struggling to keep up-to-date. If I have forgotten something,  let me know and I will publish it in the next edition.\n      The European Lisp Symposium 2020 took place online this year and it was quite a success. The videos  are online and include a keynote talk from Andy Keep on the Nanopass Compiler.\n  Joel Dueck started a newsletter called  Pollen Time where he notifies subscribers about online events focused on pollen education and collaboration.\n  Our own Robby Findler will be giving a talk on \u201cConcolic Testing with Higher-Order Inputs\u201d for the  Chalmers Online Functional Programming seminar series on June 15th. This will be streamed online and an edited video posted later on their  Youtube channel.\n       If you know of library releases or maybe your own libraries and you want them to be featured, please  let me know.\n      This library defines disposables, composable first-class producers of values with associated external resources that must be allocated and deallocated such as database connections. Several safe abstractions are provided to consume disposable values while ensuring their associated resources are deallocated after use.\n   This issue\u2019s featured paper is  Bithoven - G\u00f6del Encoding of Chamber Music and Functional 8-Bit Audio Synthesis by Jay McCarthy.\n  Bithoven is a prolific composer of approximately $1.079363 * 10^239$ different compositions based on four-part harmony and basic chord progressions. It is combined with a purely functional audio synthesis engine based on the Ricoh RP2A03, found in the 1985 Nintendo Entertainment System (NES). The synthesis engine is parameterized over a band of instruments and styles of play, so each composition can be played in one of approximately  4.22234 * 10^41 different arrangements or \u201cNEStrations\u201d.\n    RacketCon 2020, was supposed to be announced for the fall of 2020 but there are no official news about it yet.\n         This issue is brought to you by  Paulo Matos. Any mistakes or inaccuracies are solely mine and they do not represent the views of the  PLT Team, who develop Racket.\n I have also tried to survey the most relevant things that happened in Racket lang recently. If you have done something awesome, wrote a blog post or seen something that I missed - my apologies.  Let me know so I can rectify it in the next issue.", "posttime": "2020-05-19 17:59:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7403\u62cd,news", "title": "\u7403\u62cd\u65b0\u95fb-\u7b2c31\u671f", "title_en": "Racket News \u2013 Issue 31", "transed": 1, "url": "https://racket-news.com/2020/05/racket-news-issue-31.html", "via": "", "real_tags": ["\u7403\u62cd", "news"]}, {"category": "", "categoryclass": "", "imagename": "3df3474847de939912d1bd066c096481.jpg", "infoid": 1002759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Defold\u662f\u5728\u8bb8\u53ef\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u514d\u8d39\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002Defold\u662f\u7531Defold\u57fa\u91d1\u4f1a\u62e5\u6709\u548c\u5f00\u53d1\u7684\u3002\nDefold\u662f\u5728\u6d41\u884c\u7684Apache2.0\u8bb8\u53ef\u884d\u751f\u7684\u8bb8\u53ef\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u514d\u8d39\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002\u8bb8\u53ef\u8bc1\u5141\u8bb8\u60a8\u81ea\u7531\u5f00\u53d1\u6e38\u620f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u652f\u4ed8\u8bb8\u53ef\u8d39\u6216\u6536\u5165\u7684\u7248\u7a0e\u3002\n\u9605\u8bfb\u8bb8\u53ef\u8bc1\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff0c\u6211\u4eec\u4f9d\u9760\u793e\u533a\u6350\u6b3e\u548c\u4f01\u4e1a\u4f19\u4f34\u5173\u7cfb\u6765\u786e\u4fdd\u9879\u76ee\u7684\u957f\u671f\u53ef\u6301\u7eed\u6027\u3002\u6211\u4eec\u9080\u8bf7\u60a8\u4e00\u6b21\u6027\u6216\u6bcf\u6708\u6350\u6b3e\u4ee5\u652f\u6301\u5fb7\u798f\u3002\n\u4e86\u89e3\u66f4\u591a\u4fe1\u606f&\u6350\u8d60(&A)\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0cDefold\u63a5\u53d7\u793e\u533a\u5bf9\u4ea7\u54c1\u7684\u4efb\u4f55\u90e8\u5206\u7684\u8d21\u732e\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5f15\u64ce\u3001\u7f16\u8f91\u5668\u3001\u6269\u5c55\u548c\u6587\u6863\u3002\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728GitHub\u4e0a\u627e\u5230\u3002\n\u5982\u4f55\u8d21\u732e\u3002\n\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u622a\u81f32020\u5e745\u6708\uff0c\u7ec8\u6781\u8de8\u5e73\u53f0\u6e38\u620f\u5f15\u64ceDefold\u5df2\u7ecf\u8f6c\u79fb\u5230Defold\u57fa\u91d1\u4f1a\uff0c\u5e76\u4f5c\u4e3a\u5f00\u6e90\u9879\u76ee\u63d0\u4f9b\uff01\u6211\u4eec\u76f8\u4fe1\u8fd9\u5c06\u7ed9\u5f00\u53d1\u8fc7\u7a0b\u5e26\u6765\u900f\u660e\u5ea6\uff0c\u6211\u4eec\u9080\u8bf7\u6211\u4eec\u7684\u793e\u533a\u6210\u5458\u53c2\u4e0e\u8fdb\u6765\u3002\n\u4f60\u6709\u6ca1\u6709\u4e00\u4e2a\u95ee\u9898\u6ca1\u6709\u5728\u8fd9\u91cc\u56de\u7b54\uff1f\u8bf7\u5411\u6211\u4eec\u54a8\u8be2\uff0c\u6211\u4eec\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u56de\u7b54\u60a8\u7684\u95ee\u9898\uff01\n\u7b54\uff1a\u6ca1\u6709\uff0cDefold\u5df2\u7ecf\u6350\u7ed9\u4e86Defold\u57fa\u91d1\u4f1a\u3002King\u5728Defold\u8463\u4e8b\u4f1a\u4e2d\u53ea\u6709\u4e00\u4e2a\u5e2d\u4f4d\uff0c\u4f46\u5bf9Defold\u7684\u672a\u6765\u6ca1\u6709\u76f4\u63a5\u5f71\u54cd\u3002\n\u7b54\uff1aDefold\u4ecd\u5728\u7531Defold\u56e2\u961f\u7684\u6210\u5458\u8fdb\u884c\u5de5\u4f5c\u3002\u8be5\u56e2\u961f\u8ba1\u5212\u57282020\u5e74\u5185\u5b9e\u73b0\u589e\u957f\uff0c\u4f46\u4e0e\u4efb\u4f55\u5f00\u6e90\u9879\u76ee\u4e00\u6837\uff0c\u5b83\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u5c06\u4f9d\u8d56\u4e8e\u793e\u533a\u8d21\u732e\u3002\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u5982\u4f55\u8d21\u732e\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u7b54\uff1a\u91d1\u5728\u5fb7\u798f\u5c14\u5fb7\u57fa\u91d1\u4f1a\u6210\u7acb\u65f6\u8fdb\u884c\u4e86\u6177\u6168\u7684\u6350\u8d60\u3002\u6234\u798f\u516c\u53f8\u5c06\u4ece\u6700\u521d\u7684\u6350\u8d60\u4ee5\u53ca\u901a\u8fc7\u793e\u533a\u6350\u8d60\u548c\u516c\u53f8\u5408\u4f5c\u534f\u8bae\u4e3a\u6301\u7eed\u53d1\u5c55\u63d0\u4f9b\u8d44\u91d1\u3002\u4e86\u89e3\u6709\u5173\u5982\u4f55\u6350\u8d60\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u95ee\uff1a\u65e2\u7136Deold\u662f\u5f00\u6e90\u7684\u5e76\u63a5\u53d7\u793e\u533a\u8d21\u732e\uff0c\u5b83\u7684\u8d28\u91cf\u4f1a\u4e0b\u964d\u5417\uff1f\n\u7b54\uff1a\u6ca1\u6709\u3002\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5728\u4ee3\u7801\u8d28\u91cf\u4e0a\u59a5\u534f\u3002\u6211\u4eec\u53ea\u63a5\u53d7\u7ecf\u8fc7\u56e2\u961f\u5ba1\u67e5\u7684\u8d21\u732e\uff0c\u6211\u4eec\u5c06\u5bf9\u793e\u533a\u8d21\u732e\u5b9e\u65bd\u4e0e\u6838\u5fc3\u56e2\u961f\u8d21\u732e\u76f8\u540c\u7684\u9ad8\u6807\u51c6\u3002\u6211\u4eec\u4e5f\u4e0d\u4f1a\u63a5\u53d7\u4e0e\u6211\u4eec\u7684\u8def\u7ebf\u56fe\u4e0d\u7b26\u7684\u6350\u6b3e\u3002\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u5982\u4f55\u8d21\u732e\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u95ee\uff1a\u6211\u4eec\u8fd8\u4f1a\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u5f15\u64ce\uff0c\u8ddf\u4e0aiOS\u3001Android\u7b49\u7684\u6700\u65b0\u5e73\u53f0\u8981\u6c42\u5417\uff1f\n\u7b54\uff1a\u662f\u7684\u3002Defold\u57fa\u91d1\u4f1a\u5c06\u59cb\u7ec8\u4e13\u6ce8\u4e8e\u7ef4\u62a4\u7a33\u5b9a\u548c\u6700\u65b0\u7684\u5f15\u64ce\u3002\u4fdd\u6301\u5f15\u64ce\u548c\u7f16\u8f91\u5668\u66f4\u65b0\u7684\u4e3b\u8981\u8d23\u4efb\u843d\u5728Defold\u57fa\u91d1\u4f1a\u8eab\u4e0a\uff0c\u4f46\u6211\u4eec\u53ef\u80fd\u4f1a\u4e0d\u65f6\u5411\u793e\u533a\u5bfb\u6c42\u5e2e\u52a9\u3002\n\u7b54\uff1a\u6ca1\u6709\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u672c\u5730\u6269\u5c55\u6784\u5efa\u670d\u52a1\u5668\u5c06\u662fDefold\u4ea7\u54c1\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u5e94\u8be5\u7ee7\u7eed\u4f5c\u4e3a\u514d\u8d39\u670d\u52a1\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u7528\u6237\u3002\u73b0\u5728\u6784\u5efa\u670d\u52a1\u5668\u662f\u5f00\u6e90\u7684\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u8bbe\u7f6e\u548c\u8fd0\u884c\u4ed6\u4eec\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u662f\u672c\u5730\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u662f\u516c\u5171\u6216\u79c1\u6709\u670d\u52a1\u5668\u3002\n\u7b54\uff1a\u8fd9\u7edd\u5bf9\u662f\u6211\u4eec\u5e0c\u671b\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u901a\u62a5\u4e862020\u5e74\u9ad8\u7ea7\u522b\u8def\u7ebf\u56fe\uff0c\u6211\u4eec\u5c06\u6839\u636e\u8fd9\u4e00\u8def\u7ebf\u56fe\u89c4\u5212\u6211\u4eec\u7684\u5de5\u4f5c\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u8def\u7ebf\u56fe\u662f\u5728\u9ad8\u6c34\u5e73\u4e0a\u5b9a\u4e49\u7684\uff0c\u793e\u533a\u6709\u53ef\u80fd\u5f71\u54cd\u5de5\u4f5c\u3002\u968f\u7740\u62a5\u544a\u7684\u95ee\u9898\u3001\u529f\u80fd\u8bf7\u6c42\u548c\u4efb\u52a1\u73b0\u5728\u5728GitHub\u4e0a\u516c\u5f00\uff0c\u793e\u533a\u5c06\u6709\u53ef\u80fd\u5bf9\u4ed6\u4eec\u8ba4\u4e3a\u91cd\u8981\u7684\u9879\u76ee\u8fdb\u884c\u6295\u7968\uff0c\u6211\u4eec\u5c06\u5728\u8ba1\u5212\u5de5\u4f5c\u65f6\u8003\u8651\u6295\u7968\u60c5\u51b5\u3002\n\u7b54\uff1a\u6211\u4eec\u76ee\u524d\u6709\u8d44\u4ea7\u95e8\u6237\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u4e0e\u793e\u533a\u5171\u4eab\u5185\u5bb9\u3002\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u8ba1\u5212\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u51fa\u552e/\u8d2d\u4e70\u8d44\u4ea7\u7684\u5e02\u573a\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u8d44\u4ea7\u95e8\u6237\u6765\u8425\u9500\u60a8\u7684\u5185\u5bb9\uff0c\u5e76\u89e3\u91ca\u5982\u4f55\u8d2d\u4e70\u8fd9\u4e9b\u5185\u5bb9\u3002\n\u7b54\uff1aDefold\u662f\u5728\u6d41\u884c\u7684Apache2.0\u8bb8\u53ef\u884d\u751f\u7684\u8bb8\u53ef\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u514d\u8d39\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002\u8bb8\u53ef\u8bc1\u5141\u8bb8\u60a8\u81ea\u7531\u5f00\u53d1\u6e38\u620f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u652f\u4ed8\u8bb8\u53ef\u8d39\u6216\u6536\u5165\u7684\u7248\u7a0e\u3002\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u8bb8\u53ef\u8bc1\u7684\u66f4\u591a\u4fe1\u606f\u3002\nA\uff1a\u662f\u7684\uff0c\u5f53\u7136\u53ef\u4ee5\uff01\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cDefold\u53ef\u4ee5\u66f4\u597d\u5730\u8bc1\u660e\u672a\u6765\u7684\u60c5\u51b5\u3002Defold\u662f\u5f00\u6e90\u7684\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u5c06\u5141\u8bb8\u4efb\u4f55\u4eba\u901a\u8fc7\u4fee\u590d\u9519\u8bef\u3001\u4f7f\u7528\u65b0\u529f\u80fd\u66f4\u65b0\u5b83\u6216\u4e3a\u5176\u6253\u8865\u4e01\u6765\u4e0e\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4e00\u8d77\u5de5\u4f5c\uff0c\u800c\u4e0d\u9700\u8981\u4f9d\u8d56\u53e6\u4e00\u5bb6\u516c\u53f8\u6765\u5b8c\u6210\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u4ece\u800c\u6539\u8fdbDefold\u3002\n\u7b54\uff1a\u90fd\u662f\u3002\u5f15\u64ce\u548c\u7f16\u8f91\u5668\u662f\u4ece\u8fd9\u4e2aGitHub\u5b58\u50a8\u5e93\u5f00\u6e90\u7684\u3002\u672c\u5730\u6269\u5c55\u6784\u5efa\u670d\u52a1\u5668\u662f\u4ece\u8fd9\u4e2aGitHub\u5b58\u50a8\u5e93\u5f00\u6e90\u7684\u3002\u6269\u5c55\u548c\u5176\u4ed6\u6742\u9879\u9879\u76ee\u5728GitHub\u4e0a\u4e5f\u662f\u5f00\u6e90\u7684\u3002\n\u7b54\uff1a\u5173\u4e8eDefold\u4e3a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u5f00\u6e90\u7684\u57fa\u672c\u4fe1\u606f\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u7f51\u9875\u4e0a\u627e\u5230\u3002\u53ef\u4ee5\u5728GitHub\u4e0a\u8ddf\u8e2a\u65e5\u5e38\u5f00\u53d1\u6d41\u7a0b\u3002\u8981\u53c2\u4e0e\u5f00\u6e90\u8ba8\u8bba\uff0c\u8bf7\u52a0\u5165#\u5f00\u6e90\u677e\u5f1b\u9891\u9053\u6216\u6211\u4eec\u8bba\u575b\u7684\u5f00\u6e90\u90e8\u5206\u3002\n\u95ee\uff1a\u6211\u60f3\u6295\u7a3f\uff0c\u4f46\u6211\u4e0d\u61c2C/C++\u6216Clojure\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u5728\u5f15\u64ce\u548c\u7f16\u8f91\u5668\u65b9\u9762\u63d0\u4f9b\u5e2e\u52a9\u3002\u6211\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u5e2e\u5fd9\u5417\uff1f\n\u7b54\uff1a\u4f60\u4e0d\u9700\u8981\u77e5\u9053C/C++\u6216Clojure\u5c31\u80fd\u5e2e\u4e0a\u5fd9\u3002\u5982\u679c\u6211\u4eec\u6536\u5230\u5bf9\u6211\u4eec\u7684\u6587\u6863\u3001\u793a\u4f8b\u548c\u6559\u7a0b\u7684\u8d21\u732e\uff0c\u6211\u4eec\u4f1a\u975e\u5e38\u6fc0\u52a8\u3002\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u5982\u4f55\u8d21\u732e\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u95ee\uff1a\u8fd9\u662f\u5426\u610f\u5473\u7740\u60a8\u7684\u5927\u90e8\u5206\u65b0\u529f\u80fd\u90fd\u5c06\u4f9d\u8d56\u4e8e\u793e\u533a\uff1f\n\u7b54\uff1a\u6ca1\u6709\u3002Defold\u57fa\u91d1\u4f1a\u5c06\u6709\u4e00\u4e2a\u5f00\u53d1\u56e2\u961f\u81f4\u529b\u4e8e\u5f15\u64ce\u7684\u5f00\u53d1\uff0c\u4f46\u56e2\u961f\u6700\u521d\u4f1a\u66f4\u5c0f\u3002\u6211\u4eec\u76f8\u4fe1\u793e\u4f1a\u4e0a\u6709\u4e9b\u6210\u5458\u4f1a\u6709\u5174\u8da3\u4f5c\u51fa\u8d21\u732e\u3002\n\u7b54\uff1a\u4e00\u5f00\u59cb\u4e0d\u662f\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u8d44\u91d1\u80fd\u591f\u7ef4\u6301\u5c3d\u53ef\u80fd\u957f\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u4e0d\u60f3\u96c7\u4f63\u66f4\u591a\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u76f4\u5230\u6211\u4eec\u77e5\u9053\u6211\u4eec\u6709\u8db3\u591f\u7684\u6350\u6b3e\u548c\u6765\u81ea\u516c\u53f8\u8d5e\u52a9\u7684\u8d44\u91d1\u6765\u652f\u6301\u66f4\u591a\u7684\u4eba\u3002\n\u95ee\uff1a\u6211\u6ca1\u6709\u65f6\u95f4\u4e3a\u5f15\u64ce\u8d21\u732e\u65b0\u7684\u4ee3\u7801\uff0c\u4f46\u6211\u975e\u5e38\u4e50\u610f\u5728\u7ecf\u6d4e\u4e0a\u505a\u51fa\u8d21\u732e\u3002\u6211\u80fd\u8fd9\u4e48\u505a\u5417\uff1f\n\u7b54\uff1a\u662f\u7684\uff0c\u5f53\u7136\u53ef\u4ee5\u3002\u6211\u4eec\u63a5\u53d7Patreon\u3001PayPal\u548cGitHub\u8d5e\u52a9\u5546\u7684\u6350\u6b3e\u3002\u4e86\u89e3\u6709\u5173\u5982\u4f55\u6350\u8d60\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u95ee\uff1aDefold\u793e\u533a\u76f8\u5f53\u5c0f\u3002\u4f60\u786e\u5b9a\u6709\u8db3\u591f\u7684\u4eba\u80fd\u591f\u5e76\u4e14\u613f\u610f\u8d21\u732e\u5417\uff1f\u60a8\u5c06\u91c7\u53d6\u4ec0\u4e48\u63aa\u65bd\u6765\u589e\u52a0\u7528\u6237\u6570\u91cf\uff1f\n\u7b54\uff1a\u524d\u51e0\u5e74\u6211\u4eec\u6ca1\u6709\u628a\u91cd\u70b9\u653e\u5728\u7528\u6237\u589e\u957f\u4e0a\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cDefold\u793e\u533a\u6bcf\u5e74\u90fd\u5728\u589e\u957f\uff0c\u8fd9\u662f\u6211\u4eec\u975e\u5e38\u81ea\u8c6a\u7684\u4e00\u4e2a\u4e8b\u5b9e\u3002\u6211\u4eec\u5c06\u57282020\u5e74\u79ef\u6781\u53d1\u5c55Defold\u793e\u533a\uff0c\u4ee5\u66f4\u597d\u5730\u652f\u6301Defold\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u8f6c\u5411\u5f00\u6e90Defold\u5c06\u4f1a\u5438\u5f15\u65b0\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u4e2d\u7684\u4e00\u4e9b\u4eba\u4e5f\u4f1a\u6709\u5174\u8da3\u505a\u51fa\u8d21\u732e\u3002\n\u4f60\u6709\u6ca1\u6709\u4e00\u4e2a\u95ee\u9898\u6ca1\u6709\u5728\u8fd9\u91cc\u56de\u7b54\uff1f\u8bf7\u5411\u6211\u4eec\u54a8\u8be2\uff0c\u6211\u4eec\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u56de\u7b54\u60a8\u7684\u95ee\u9898\uff01", "note_en": "Defold is free and open source software released under a permissive license. Defold is owned and developed by the Defold Foundation.\n Defold is free and open source software released under a permissive license derived from the popular Apache 2.0 License. The license grants you the freedom to develop games without worrying about paying licensing fees or royalties on your earnings.\n  Read the license\n  As a software foundation we rely on community donations and corporate partnerships to ensure the long term sustainability of the project. We invite you to make one-time or monthly donations to support Defold.\n  Learn more &amp; Donate\n  As an open source project Defold accepts community contributions to any part of the product, including, but not limited to, the engine, editor, extensions and documentation. The source code is available on GitHub.\n  How to contribute\n We are happy to announce that as of May 2020 Defold, the ultimate cross platform game engine, has been transferred to the Defold Foundation and made available as an open source project! We belive this will bring transparency to the development process and we invite our community members to get involved.\n Do you have a question that isn&#39;t answered here? Please  ask us and we will do our best to answer!\n  A: No, Defold has been donated to the  Defold Foundation. King holds a single seat on the Defold board but has no direct influence on the future of Defold.\n  A: Defold is still being worked on by members of the Defold team. The team has plans to grow during 2020 but as with any open source project it will also to some extent rely on community contributions. Learn more about  how to contribute here.\n A: King made a generous donation when the  Defold Foundation was created. Defold will fund continued development from the initial donation and through community donations and corporate partnership deals. Learn more about  how to donate.\n Q: Will the quality of Defold degrade now that it is open source and accepting community contributions?\n  A: No. We will never compromise on code quality. We will only accept contributions that have been reviewed by the team, and we will impose the same high standards on community contributions as contributions made by the core team. We will also not accept contributions that aren&#39;t in line with our roadmap. Learn more about  how to contribute here.\n Q: Will we still have a stable engine that is kept up to date with the latest platform requirements for iOS, Android and more?\n  A: Yes. The  Defold Foundation will always focus on maintaining a stable and up to date engine. The main responsibility of keeping the engine and editor updated falls on the Defold Foundation, but we may from time to time ask for help from the community.\n A: No. We believe the native extension build servers to be such an integral part of the Defold product offering that they should remain available as a free service to our users. And now that the  build server is open source anyone is free to set up and run their own server, either locally or as a public or private server.\n  A: This is definitely something we want to happen. Earlier this year we communicated the high level roadmap for 2020 and we will plan our work based on this roadmap. But since the roadmap is defined on a high level there is a possibility for the community to influence the work. With reported issues, feature requests and task now being public on GitHub it will be possible for the community to upvote items they feel are important, and we will take the votes into account when we plan our work.\n A: We currently have the  Asset Portal where users can share content with the community. We do not have any plans to create a marketplace where assets can be sold / bought. You are however free to use the Asset Portal to market your content and explain how the content can be purchased.\n A: Defold is free and open source software released under a permissive license derived from the popular Apache 2.0 License. The license grants you the freedom to develop games without worrying about paying licensing fees or royalties on your earnings. Learn more about  the license here.\n A: Yes, absolutely! Defold is much more future proof this way. The fact that Defold is open source will allow anyone to improve Defold by fixing bugs, updating it with new features or patching it to work with new operating system updates without being dependent on another company to do the work.\n A: All of it. The engine and editor are open sourced from  this GitHub repository. The native extension build server is open sourced from  this GitHub repository. Extensions and other miscellaneous projects are also open sourced  on GitHub.\n A: The basic information about why and how Defold is open sourced can be found on our  webpage. The daily development process can be followed on  GitHub. To participate in open source discussions please join the  #opensource Slack channel or the  Open Source section of our forum.\n  Q: I would like to contribute but I don&#39;t know C/C++ or Clojure so I can&#39;t help with the engine and editor. Can I help out some other way?\n  A: You don&#39;t need to know C/C++ or Clojure to help out. We would be thrilled if we received contributions to our documentation, examples and tutorials. Learn more about  how to contribute here.\n Q: Does this mean that you will rely on the community for most of the new features?\n  A: No. The  Defold Foundation will have a team of developers working on the engine, but the team will initially be smaller. We believe that some members from our community would be interested in contributing.\n A: Not initially. We want the funding we have to last for as long as possible and we don&#39;t want to hire more developers until we know we have enough donations and money from corporate sponsorships to support more people.\n Q: I do not have the time to contribute new code to the engine but I would be more than happy to contribute financially. Can I do this?\n  A: Yes, absolutely. We accept donations via Patreon, PayPal and GitHub Sponsors. Learn more about  how to donate.\n Q: The Defold community is quite small. Are you sure there are enough people that can and are willing to contribute? And what will you do to increase the number of users?\n  A: We have not focused on user growth in previous years. Despite this the Defold community has grown year over year, a fact which we are very proud of. We will work actively to grow the Defold community in 2020 to better sustain Defold as an open source project. We do believe that the move to open source Defold will attract new developers and we hope that some of those developers would also be interested in contributing.\n  Do you have a question that isn&#39;t answered here? Please  ask us and we will do our best to answer!", "posttime": "2020-05-19 17:44:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u6e38\u620f,making,defold", "title": "King\u6b63\u5728\u5c06\u5176Defold\u6e38\u620f\u5f15\u64ce\u5f00\u6e90", "title_en": "King is making its Defold game engine open source", "transed": 1, "url": "https://defold.com/opensource/", "via": "", "real_tags": ["\u5f00\u6e90", "\u6e38\u620f", "making", "defold"]}, {"category": "", "categoryclass": "", "imagename": "29590ad6ad57088cde1cd31ef2859d66.png", "infoid": 1002757, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "libpoireau\u5e93\u622a\u53d6\u4e00\u5c0f\u90e8\u5206toalloc/calloc/\u7b49\u8c03\u7528\uff0c\u4ee5\u751f\u6210\u5177\u6709\u7edf\u8ba1\u4ee3\u8868\u6027\u7684\u5e94\u7528\u7a0b\u5e8f\u5806\u5360\u7528\u6982\u89c8\u3002\u867d\u7136\u62e6\u622a\u5668\u76ee\u524d\u53ea\u8ddf\u8e2a\u957f\u671f\u5206\u914d(\u4f8b\u5982\uff0c\u6cc4\u6f0f)\uff0c\u4f46\u6211\u4eec\u4e5f\u8ba1\u5212\u6309\u7167\u201c\u7535\u5b50\u56f4\u680f\u201d\u7684\u7cbe\u795e\u5b9e\u73b0\u4fdd\u62a4\u9875\u9762\u3002\n\u4e0eLeakSanitizeror Valgrind\u4e0d\u540c\uff0c\u91c7\u6837\u65b9\u6cd5\u4f7f\u5f97\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u6b64\u5e93\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u6700\u5c0f(\u8bf7\u53c2\u9605\u6027\u80fd\u5f00\u9500\u4e00\u8282)\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5bf9\u4ee3\u7801\u751f\u6210\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\n\u7a0b\u5e8f\u5e93\u7684\u5b9e\u73b0\u7b56\u7565\u5c06\u5927\u90e8\u5206\u590d\u6742\u6027\u5378\u8f7d\u5230\u5185\u6838\u6216\u5916\u90e8\u5206\u6790\u811a\u672c\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5c11\u6570\u91c7\u6837\u7684\u5206\u914d\u53ea\u8986\u76d6\u7cfb\u7edf\u5185\u5b58\u5206\u914d\u5668(\u6216\u4efb\u4f55\u5176\u4ed6\u5df2\u8986\u76d6\u7cfb\u7edf\u9519\u8bef\u9501\u7684\u5206\u914d\u5668)\uff0c\u8fd9\u610f\u5473\u7740\u63d2\u88c5\u4e0d\u592a\u53ef\u80fd\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e00\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002(#**$${##**$$}\u3002\u9884\u52a0\u8f7dlibpoireau.so\u6bd4\u63d2\u5165tcmalloconly(\u56e0\u4e3a\u8981\u8c03\u8bd5\u5206\u914d)\u4fb5\u5165\u6027\u5c0f\u5f97\u591a\u3002\u4ee3\u7801\u5e93\u4e5f\u66f4\u5c0f\uff0c\u5728\u5c06\u65b0\u7684\u5e93\u6295\u5165\u751f\u4ea7\u4e4b\u524d\u66f4\u5bb9\u6613\u5ba1\u6838\u3002\n\u6700\u540e\uff0cpoireau.py\u5206\u6790\u811a\u672c\u53ea\u62a5\u544a\u65e7\u7684\u5206\u914d\uff0c\u800c\u4e0d\u662f\u626b\u63cf\u5806\u4ee5\u67e5\u627e\u5f15\u7528\u3002\u5bf9\u4e8e\u671f\u671b\u5728\u542f\u52a8\u540e\u5feb\u901f\u8fdb\u5165\u7a33\u5b9a\u72b6\u6001\u7684\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u548c\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd9\u6bd4\u53ea\u62a5\u544a\u65e0\u6cd5\u8bbf\u95ee\u7684\u5bf9\u8c61\u66f4\u6709\u7528\uff1a\u5806\u5360\u7528\u7684\u7f13\u6162\u589e\u957f\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u4f7f\u7f6a\u9b41\u7978\u9996\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u4f8b\u5982\uff0c\u5728\u5e94\u8be5\u6e05\u9664\u7684\u65f6\u5019\u6ca1\u6709\u6e05\u9664\u7684\u5217\u8868\u4e2d\u3002\nlibpoireau\u76ee\u524d\u7684\u76ee\u6807\u662f\u57284KB\u9875\u9762\u768464\u4f4d\u5e73\u53f0\u4e0a\u8fd0\u884cLinux4.8+(\u7528\u4e8e\u9759\u6001\u5b9a\u4e49\u7684\u8ddf\u8e2a\u70b9\u652f\u6301)\u3002\u6267\u884cmake.sh\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efalibpoireau.so\uff1b\u4ee3\u7801\u9700\u8981\u4e0eGCC\u517c\u5bb9\u7684C11\u5b9e\u73b0\u3002\n\u5728\u4f7f\u7528libpoireau\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u7528Linux perf\u6ce8\u518c\u5b83\u7684\u9759\u6001\u63a2\u6d4b\u70b9\uff1b\u8fd9\u53ef\u4ee5\u5728\u4f7f\u7528LD_PRELOAD\u542f\u52a8\u7a0b\u5e8f\u4e4b\u524d\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u5728\u542f\u52a8\u4e4b\u540e\u5b8c\u6210\uff0c\u8fd9\u5e76\u4e0d\u91cd\u8981\u3002\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5728libpoireau\u8986\u76d6stdlib\u8c03\u7528\u65f6\u542f\u7528\u8ddf\u8e2a\u70b9\u6765\u751f\u6210perf\u4e8b\u4ef6\u3002\n\u8fd9\u8db3\u4ee5\u8ba9Linux perf\u62a5\u544a\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u4f8b\u5982\uff0c\u5728perf top\u4e2d\u3002\u7136\u800c\uff0c\u8fd9\u662f\u5f88\u591a\u4fe1\u606f\uff0c\u4e0d\u4e00\u5b9a\u6709\u7528\u3002\n\u6267\u884cscripts/poireau.sh$pid\u4ee5\u542f\u52a8\u5bf9\u8be5PID\u6027\u80fd\u8ddf\u8e2a\uff0c\u5e76\u5c06\u8f93\u51fa\u63d0\u4f9b\u7ed9\u5206\u914d\u8ddf\u8e2a\u811a\u672c\u3002\u6bcf\u969410\u5206\u949f\uff0c\u8be5\u811a\u672c\u5c06\u8f6c\u50a8\u5f53\u524d\u6d3b\u52a8\u7684\u65e7(&gt\uff1b5\u5206\u949f)\u91c7\u6837\u5206\u914d\u5217\u8868\u3002\u5411poireau.py\u53d1\u9001HUP\u4fe1\u53f7\uff0c\u4ee5\u83b7\u53d6\u6240\u6709\u5b9e\u65f6\u91c7\u6837\u5206\u914d\u7684\u5217\u8868\u3002\u65e7\u5206\u914d\u6700\u7ec8\u5c06\u7528\u5df2\u77e5\u7684\u6cc4\u6f0f\u6216\u542f\u52a8\u5206\u914d\u6765\u586b\u5145\uff1b\u901a\u8fc7\u5411poireau.py\u53d1\u9001USR1\u4fe1\u53f7\uff0c\u4ece\u672a\u6765\u7684\u62a5\u544a\u4e2d\u5220\u9664\u6240\u6709\u5f53\u524d\u7684\u65e7\u5206\u914d\u3002\n\u5728\u8fc7\u7a0b\u4e4b\u5916\u8fdb\u884c\u5206\u6790\u7684\u4e00\u4e2a\u5173\u952e\u4f18\u52bf\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5728\u5d29\u6e83\u540e\u63d0\u4f9b\u4fe1\u606f\u3002\u5411poireau.py\u53d1\u9001\u4e00\u4e2aUSR2\u4fe1\u53f7\uff0c\u5217\u51fa\u6700\u8fd1\u5bf9free\u6216realloc\u7684\u4e00\u4e9b\u8c03\u7528\uff0c\u5e0c\u671b\u5b83\u80fd\u5e2e\u52a9\u8c03\u8bd5\u91ca\u653e\u540e\u4f7f\u7528\u3002\nperf\u901a\u5e38\u9700\u8981sudo\u8bbf\u95ee\u6743\u9650\uff0c\u4f46\u662f\u4ee5root\u8eab\u4efd\u8fd0\u884call of poireau.py\u6ca1\u6709\u610f\u4e49\uff1bpoireau.sh\u53ea\u4f7f\u7528sudo\u6267\u884cPerfect\u3002\u4e3a\u4e86\u8986\u76d6sudo\u4e0b\u7684perf\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528PERF=Which perf scripts/poireau.sh.\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u8c03\u7528poireau.sh\u6765\u542f\u7528\u7cfb\u7edf\u8303\u56f4\u7684\u8ddf\u8e2a\u3002\u5982\u679catime\u4e2d\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5c06LD_PRELOAD libpoireau.so\uff1apoireau.py\u4e2d\u7684\u5206\u6790\u4ee3\u7801\u5f53\u524d\u4e0d\u80fd\u533a\u5206\u8fdb\u7a0b\u4f55\u65f6\u5339\u914d\u5206\u914d\u548c\u91ca\u653e(\u7f16\u8f91poireau.py\u4e2d\u7684\u5168\u5c40\u901a\u4fe1\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u53ea\u4ece\u4e0e\u7279\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u7a0b\u5e8f\u4e2d\u6444\u53d6\u4e8b\u4ef6)\uff0c\u8fd9\u5c06\u975e\u5e38\u6709\u7528\u3002\u7cfb\u7edf\u8303\u56f4\u7684\u8ddf\u8e2a\u4f7f\u8ddf\u8e2a\u7a0b\u5e8f\u542f\u52a8\u65f6\u7acb\u5373\u53d1\u751f\u7684\u4e8b\u4ef6\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\n\u5982\u679c\u60a8\u5fc5\u987b\u5728\u6267\u884c\u7a0b\u5e8f\u4e4b\u524d\u7f16\u8f91init\u811a\u672c\u4ee5\u63d2\u5165LD_PRELOAD\u53d8\u91cf\uff0c\u90a3\u4e48\u64a4\u6d88\u7f16\u8f91\u5e76\u5c3d\u5feb\u91cd\u65b0\u542f\u52a8\u63d2\u5165\u6307\u4ee4\u7684\u7a0b\u5e8f\u662f\u6709\u610f\u4e49\u7684\u3002\n\u5f53LD_PRELOAD\u65f6\uff0clibpoireau\u622a\u53d6\u5bf9malloc/calloc/realloc/free\u7684\u6bcf\u4e2a\u8c03\u7528\uff0c\u5e76\u5feb\u901f\u5c06\u7edd\u5927\u591a\u6570\u8c03\u7528\u8f6c\u53d1\u7ed9\u5b9e\u9645\u5b9e\u73b0\uff0c\u5982\u679clibpoireau\u4e0d\u5b58\u5728\uff0c\u8fd9\u4e9b\u8c03\u7528\u5c06\u88ab\u4f7f\u7528\u3002\n\u53ea\u6709\u90a3\u4e9b\u6807\u8bb0\u4e3a\u91c7\u6837\u7684\u5206\u914d\u624d\u4f1a\u88ab\u8f6c\u79fb\uff0c\u5728malloc\u548ccalloc\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u8c03\u7528\u88ab\u8f6c\u79fb\u7684\u5206\u914d\u65f6\uff0cfree\u4f1a\u88ab\u8986\u76d6\u3002\u6700\u540e\uff0c\u51fa\u4e8e\u91c7\u6837\u76ee\u7684\uff0crealloc\u88ab\u89c6\u4e3a\u4e00\u5bf9malloc\u548cfree\u3002\n\u91c7\u6837\u903b\u8f91\u6a21\u62df\u4ee5\u76f8\u7b49\u6982\u7387\u5bf9\u6bcf\u4e2a\u5206\u914d\u7684\u5b57\u8282\u8fdb\u884c\u91c7\u6837\u7684\u8fc7\u7a0b\u3002(\u786c\u7f16\u7801)\u91c7\u6837\u7387\u7684\u76ee\u6807\u662f\u5e73\u5747\u6bcf32MB\u91c7\u6837\u4e00\u6b21\u5206\u914d\uff1b\u4f8b\u5982\uff0c\u6211\u4eec\u5bf9100\u5b57\u8282\u7684\u5206\u914d\u8bf7\u6c42\u4ee5\u76f8\u540c\u7684\u6982\u7387\u6210\u4e3a\u6837\u672c\u7684\u4e00\u90e8\u5206\uff0c\u5c31\u597d\u50cf\u6211\u4eec\u4ee51/(32*1024*1024)\u7684\u6982\u7387\u629b\u51fa\u4e86100\u6b21\u843d\u5728&#34\uff1b\u5934\u4e0a\u7684\u504f\u5411\u786c\u5e01\uff0c\u5e76\u51b3\u5b9a\u5982\u679c\u8fd9\u4e9b\u786c\u5e01\u4e2d\u6709\u4efb\u4f55\u629b\u5230\u5934\u4e0a\uff0c\u5219\u5c06\u8be5\u8bf7\u6c42\u4f5c\u4e3a\u6837\u672c\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u79cd\u65e0\u5185\u5b58\u91c7\u6837\u7b56\u7565\u4f7f\u5f97\u5373\u4f7f\u5728\u5bf9\u6297\u5de5\u4f5c\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5806\u5206\u914d\u8c03\u7528\u7684\u5f62\u72b6\u7684\u7edf\u8ba1\u754c\u9650\u3002\u7136\u800c\uff0c\u7b80\u5355\u7684\u5b9e\u73b0\u901f\u5ea6\u5f88\u6162\uff0c\u6211\u4eec\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u5206\u914d\u7684\u5b57\u8282\u7ffb\u8f6c\u504f\u5411\u786c\u5e01\uff0c\u800c\u662f\u901a\u8fc7\u4ece\u6307\u6570\u5206\u5e03\u751f\u6210\u503c\u6765\u751f\u6210\u8fde\u7eed\u7684\u5c3e\u6570\u3002\n\u6bcf\u5f53\u9009\u62e9\u5bf9malloc\u3001calloc\u6216realloc\u7684\u8c03\u7528\u8fdb\u884c\u91c7\u6837\u65f6\uff0clibpoireau\u90fd\u4f1a\u6267\u884c\u4f7f\u7528USDT(\u7528\u6237\u9759\u6001\u5b9a\u4e49\u7684\u8ddf\u8e2a)\u63a2\u6d4b\u8fdb\u884c\u68c0\u6d4b\u7684\u4ee3\u7801\u3002Linux Perf\u53ef\u4ee5\u6ce8\u91ca\u4ee3\u7801\u4ee5\u751f\u6210\u4e8b\u4ef6(\u5bf9\u4e8e\u94fe\u63a5\u5171\u4eab\u5e93\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u7cfb\u7edf\u8303\u56f4\u7684\u5f00\u5173)\uff1b\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u4e8b\u4ef6\u8ba9\u5185\u6838\u6355\u83b7\u6bcf\u4e2a\u91c7\u6837\u8c03\u7528\u7684\u8c03\u7528\u5806\u6808\u3002\n\u6b64\u5916\uff0c\u8fd9\u4e9b\u5206\u914d\u8bf7\u6c42\u88ab\u8f6c\u79fb\u5230\u5185\u90e8\u8ddf\u8e2a\u5206\u914d\u5668\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u8bc6\u522b\u5bf9\u8ddf\u8e2a\u7684\u5206\u914d\u8fdb\u884c\u91ca\u653e\u548c\u91cd\u65b0\u5206\u914d\u7684\u8c03\u7528\uff0c\u8fd9\u5bf9\u4e8e\u751f\u6210\u914d\u5bf9\u7684USDT\u4e8b\u4ef6(\u91ca\u653e\u6216\u91cd\u65b0\u5206\u914d\u6b64\u5206\u914d)\u81f3\u5173\u91cd\u8981\uff1b\u5b83\u8fd8\u786e\u4fdd\u6211\u4eec\u5c06\u8fd9\u4e9b\u5206\u914d\u4f20\u9012\u56de\u5907\u4efd\u8ddf\u8e2a\u5206\u914d\u5668\uff0c\u800c\u4e0d\u662f\u7cfb\u7edfmalloc\u3002\n\u5bf9\u6027\u80fd\u654f\u611f\u7684\u7a0b\u5e8f\u503e\u5411\u4e8e\u907f\u514d\u5728\u70ed\u70b9\u533a\u57df\u8fdb\u884c\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7\u5728\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u91cd\u590d\u8c03\u7528\u4e00\u5bf9malloc\u548cfree(\u5927\u591a\u6570\u5185\u5b58\u5206\u914d\u5668\u7684\u6700\u4f73\u60c5\u51b5)\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u5fae\u57fa\u51c6\u6d4b\u8bd5\u548c\u4e0a\u9650\u9650\u5236libpoire.so\u4e2dLD_PRELOAD\u7684\u5f00\u9500\u3002\u4e0b\u9762\u7684\u7ed3\u679c\u662f\u5728\u8fd0\u884cLinux 5.3.11\u548cglibc 2.27\u7684\u5378\u8f7dAMD EPYC 7601\u4e0a\u8ba1\u65f6\u7684\u3002\n\u57fa\u7ebf(Glibc Malloc)\uff1a0.092 us/malloc-free(0.047\u7528\u6237\uff0c0.046\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u65e0\u63a2\u6d4b\uff1a0.153 us/malloc-free(0.058\u7528\u6237\uff0c0.094\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u63a2\u6d4b\u5668\uff1a0.236 us/malloc-free(0.067\u7528\u6237\uff0c0.169\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u8ddf\u8e2a\uff1a0.271 us/malloc free(0.069\u7528\u6237\uff0c0.203\u7cfb\u7edf)\u3002\n\u8fd9\u51e0\u4e4e\u662f\u6211\u4eec\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\uff1a\u6211\u4eec\u9884\u8ba1\u4f1a\u975e\u5e38\u9891\u7e41\u5730\u89e6\u53d1allocationtracking\uff0c\u6bcf32\u4e2a\u5206\u914d\u4e00\u6b21\uff0c\u800c\u4e14\u6211\u4eec\u7684trackingallocator\u6bd4\u666e\u901a\u7684mmap/munmap\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b(\u8fd9\u4e00\u70b9\u6211\u4eec\u4ecd\u7136\u9700\u8981\u6539\u8fdb)\u3002\n\u57fa\u7ebf(Glibc Malloc)\uff1a0.042 us/malloc-free(0.041\u7528\u6237\uff0c0.001\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u65e0\u63a2\u6d4b\uff1a0.044 us/malloc-free(0.043\u7528\u6237\uff0c0.001\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u63a2\u6d4b\u5668\uff1a0.046 us/malloc-free(0.042\u7528\u6237\uff0c0.004\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u8ddf\u8e2a\uff1a0.054 us/malloc free(0.042\u7528\u6237\uff0c0.012\u7cfb\u7edf)\u3002\n\u5728\u8fd9\u79cd\u4e0d\u592a\u5408\u7406\u7684\u5927\u5c0f\u4e0b\uff0c\u5c06\u91c7\u6837\u5206\u914d\u8f6c\u79fb\u5230\u8ddf\u8e2a\u5206\u914d\u5668\u7684\u5f00\u9500\u4e0d\u52305%\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5c3d\u7ba1\u6bcf\u5f53\u6211\u4eec\u6267\u884c\u7ade\u8d5b\u70b9\u65f6\u90fd\u4f1a\u89e6\u53d1\u4e2d\u65ad\uff0c\u4f46\u4e0e\u751f\u6210\u56de\u6eaf\u6240\u9700\u7684\u65f6\u95f4\u76f8\u6bd4\uff0c\u670d\u52a1\u4e2d\u65ad\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u76f8\u5bf9\u8f83\u5c11(&lt\uff1b20%)\u3002\u8fd9\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u5185\u6838\u90e8\u5206\u4e0e\u5206\u6790\u6027\u80fd\u95ee\u9898\u65f6\u4f7f\u7528\u7684\u5185\u6838\u90e8\u5206\u76f8\u540c\u3002\n\u57fa\u7ebf(Glibc Malloc)\uff1a0.017 us/malloc-free(0.017\u7528\u6237\uff0c0.000\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u65e0\u63a2\u6d4b\uff1a0.020 us/malloc-free(0.020\u7528\u6237\uff0c0.000\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u63a2\u6d4b\u5668\uff1a0.020 us/malloc-free(0.020\u7528\u6237\uff0c0.000\u7cfb\u7edf)\u9884\u52a0\u8f7d\uff0c\u8ddf\u8e2a\uff1a0.020 us/malloc free(0.020\u7528\u6237\uff0c0.000\u7cfb\u7edf)\u3002\n\u5728\u8fd9\u91cc\uff0c\u6240\u6709\u7684\u51cf\u901f\u90fd\u662f\u901a\u8fc7\u4ece\u6211\u4eec\u7684\u62e6\u622a\u5668malloc\u5230\u57fa\u7840\u7cfb\u7edfmalloc\u7684\u8e66\u5e8a\u6765\u5b9e\u73b0\u7684\u3002\nTL\uff1bDR\uff1a\u5728\u5206\u914d\u5fae\u57fa\u51c6\u4e2d\uff0c\u5bf9\u4e8e\u5c0f\u578b\u6216\u4e2d\u578b\u5206\u914d\uff0clibpoireaustrumentation\u7684\u5f00\u9500\u7ea6\u4e3a5-20%\uff0c\u800c\u5bf9\u4e8e\u975e\u5e38\u5927\u7684\u5206\u914d\uff0c\u5219\u9ad8\u8fbe~70%\u3002\n\u542f\u7528\u5206\u914d\u8ddf\u8e2a\u5c06\u4e3a\u5c0f\u578b\u6216\u4e2d\u578b\u5206\u914d\u518d\u589e\u52a00-20%\uff0c\u4e3a\u8d85\u5927\u578b\u5206\u914d\u518d\u589e\u52a0\u7ea6130%\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u505a\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u662f\u6700\u574f\u7684\u6570\u5b57\uff0c\u4f46\u662f\u5faa\u73af\u4e2d\u7684malloc\u548cfree\u90fd\u662f\u7a7a\u95f2\u7684\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5bf9\u6027\u80fd\u654f\u611f\u7684\u7a0b\u5e8f\u5728\u5185\u5b58\u7ba1\u7406\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u5e0c\u671b\u4e0d\u523010%(\u800c\u4e14\u6bd4\u5728\u5927\u5206\u914d\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u8981\u5c11\u5f97\u591a)\uff0c\u8fd9\u610f\u5473\u7740libpoireau\u548c\u6355\u83b7\u5806\u6808\u8ddf\u8e2a\u5e26\u6765\u7684\u603b\u5f00\u9500\u53ef\u80fd\u63a5\u8fd11-5%\u3002\nlibpoireau\u5305\u62ec\u6d3e\u751f\u81eaxoshio 256+1.0\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7531David Blackman\u548cSebastiano Vigna(vigna@acm.org)\u4e8e2018\u5e74\u7f16\u5199\uff0c\u4e13\u7528\u4e8e\u516c\u5171\u9886\u57df\u3002", "note_en": "The libpoireau library intercepts a small fraction of calls tomalloc/calloc/etc., to generate a statistically representativeoverview of an application&#39;s heap footprint. While the interceptorcurrently only tracks long-lived allocations (e.g., leaks), we plan toalso implement guard pages, in the spirit of Electric Fence.\n The sampling approach makes it possible to use this library inproduction with a minimal impact on performance (see the section onPerformance overhead), and without any change to code generation,unlike, e.g.,  LeakSanitizeror  Valgrind.\n The library&#39;s implementation strategy, which offloads most of thecomplexity to the kernel or an external analysis script, and onlyoverrides the system memory allocator (or any other allocator thatalready overrides the system malloc) for the few sampled allocations,means the instrumentation is less likely to radically change aprogram&#39;s behaviour. Preloading  libpoireau.so is much less invasivethan slotting in, e.g.,  tcmalloconly because one wants to debug allocations. The code base is alsomuch smaller, and easier to audit before dropping a new library inproduction.\n Finally, rather than scanning the heap for references, the poireau.py analysis script merely reports old allocations. Forapplication servers, and other workloads that expect to enter a steadystate quickly after startup, that is  more useful than only reportingunreachable objects: a slow growth in heap footprint is an issue, evenif the culprits are reachable, e.g., in a list that isn&#39;t gettingcleared when it should be.\n  libpoireau currently targets Linux 4.8+ (for statically definedtracepoint support) on 64 bit platforms with 4 KB pages. Execute make.sh to create  libpoireau.so in the current directory; the coderequires a GCC-compatible C11 implementation.\n   Before using libpoireau, we must register its static probepoints withLinux  perf; this may be done before starting programs with LD_PRELOAD, or after, it does not matter.\n  We can now enable the tracepoints to generate perf events whenever libpoireau overrides a stdlib call.\n  That&#39;s enough for Linux  perf to report these events, e.g., in  perf top. However, that&#39;s a lot of information, not necessarily useful.\n Execute  scripts/poireau.sh $PID to start  perf trace on that  PID,and feed the output to an allocation tracking script. Every 10minutes, that script will dump a list of currently live old (&gt; 5minutes) sampled allocations. Send  poireau.py a  HUP signal toinstead get a list of all live sampled allocations. Old allocationswill eventually fill up with known leaks, or startup allocations;remove all current old allocations from future reports by sending a USR1 signal to  poireau.py.\n A key advantage of having the analysis out of process is that we canstill provide information after a crash. Send a  USR2 signal to poireau.py to list some recent calls to  free or  realloc, on theoff chance that it will help debug a use-after-free.\n Perf often needs  sudo access, but it doesn&#39;t make sense to run allof  poireau.py as root;  poireau.sh instead executes only  perfwith sudo. In order to override the  perf binary under  sudo,use  PERF=which perf  scripts/poireau.sh ....\n You may also enable system-wide tracing by invoking  poireau.shwithout any argument. This is mostly useful if only one process at atime will ever  LD_PRELOAD  libpoireau.so: the analysis code in poireau.py does not currently tell processes apart when matchingallocations and frees (edit the global  COMM pattern in  poireau.pyto only ingest events from programs that match a certain regex).System-wide tracing makes it easier to track events that happenimmediately on program startup.\n       If you had to edit an init script to insert the  LD_PRELOAD variablebefore executing a program, it makes sense to undo the edit andrestart the instrumented program as soon as possible.\n  When  LD_PRELOADed, libpoireau intercepts every call to malloc/ calloc/ realloc/ free, and quickly forwards the vastmajority of calls to the real implementation that would be used iflibpoireau were absent.\n Only those allocations that are marked for sampling are diverted, inthe case of  malloc and  calloc, and  free is overridden iff calledon an allocation that was diverted. Finally,  realloc is treated asa pair of  malloc and  free, for sampling purposes.\n The sampling logic simulates a process that samples each allocatedbyte with equal probability. The (hardcoded) sampling rate aims foran average of sampling one allocation every 32 MB; for example, we anallocation request for 100 bytes becomes part of the sample with thesame probability as if we had flipped 100 times a biased coin thatlands on &#34;head&#34; with probability  1 / (32 * 1024 * 1024), and decidedto make the request part of the sample if any of these coin flip hadlanded on &#34;head.&#34;\n This memory-less sampling strategy makes it possible to derivestatistical bounds on the shape of heap allocation calls, even with anadversarial workload. However, a naive implementation is slow.Rather than flipping biased coins for each allocated byte, we insteadgenerate the number of consecutive &#34;tails&#34; results by generatingvalues from an Exponential distribution.\n Whenever a call to  malloc,  calloc, or  realloc is picked forsampling, libpoireau executes code that is instrumented with USDT(user statically-defined tracing) probes. Linux  perf can annotatethat code to generate events (this is a system-wide switch, for everyprocess that linked the shared library); we use these events to letthe kernel capture callstacks for each sampled call.\n In addition, these allocation requests are diverted to an internaltracking allocator. This lets us identify calls to  free and realloc on tracked allocations, which is crucial to generate pairedUSDT events (&#34;this allocation was freed or reallocated&#34;); it alsoensures we pass these allocations back to the backup trackingallocator, rather than the system malloc.\n  Performance sensitive programs tend to avoid dynamic memory allocationin hot spots. That being said, here are a couple microbenchmark totry and upper bound the overhead of  LD_PRELOADing in libpoireau.so, by repeatedly making pairs of calls to  malloc and free (a best case for most memory allocators) in a single thread.The results below were timed on an unloaded AMD EPYC 7601 runningLinux 5.3.11 and glibc 2.27.\n  baseline (glibc malloc): 0.092 us/malloc-free (0.047 user, 0.046 system) preloaded, no probe: 0.153 us/malloc-free (0.058 user, 0.094 system) preloaded, with probes: 0.236 us/malloc-free (0.067 user, 0.169 system)preloaded, with tracing: 0.271 us/malloc-free (0.069 user, 0.203 system)\n This is pretty much our worst case: we expect to trigger allocationtracking very frequently, once every 32 allocation, and our trackingallocator is slightly more complex than a plain  mmap/ munmap(something we should still improve).\n  baseline (glibc malloc): 0.042 us/malloc-free (0.041 user, 0.001 system) preloaded, no probe: 0.044 us/malloc-free (0.043 user, 0.001 system) preloaded, with probes: 0.046 us/malloc-free (0.042 user, 0.004 system)preloaded, with tracing: 0.054 us/malloc-free (0.042 user, 0.012 system)\n At this less unreasonable size, the overhead of diverting sampledallocations to a tracking allocator is less that 5%. We can alsoobserve that, while triggering an interrupt whenever we execute atracepoint isn&#39;t free, the time spent servicing the interrupt isrelatively small (&lt; 20%) compared to the time it takes to generate abacktrace. This isn&#39;t surprising, since we use the same part of thekernel that&#39;s exercised when analysing performance issues with  perf.\n  baseline (glibc malloc): 0.017 us/malloc-free (0.017 user, 0.000 system) preloaded, no probe: 0.020 us/malloc-free (0.020 user, 0.000 system) preloaded, with probes: 0.020 us/malloc-free (0.020 user, 0.000 system)preloaded, with tracing: 0.020 us/malloc-free (0.020 user, 0.000 system)\n Here, all the slowdown is introduced by trampolining from ourinterceptor malloc to the base system malloc.\n TL;DR: in allocation microbenchmarks, the overhead of libpoireauinstrumentation is on the order of 5-20% for small or mediumallocations, and goes up to ~70% for very large allocations.\n Enabling allocation tracing adds another 0-20% for small or mediumallocations, and ~130% for very large allocations.\n These are worst-case figures, for a program that does  nothing butrepeatedly  malloc and  free in a loop. In practice, a performancesensitive program hopefully spends less than 10% of its time in memorymanagement (and much less than that in large allocations), which meansthe total overhead introduced by libpoireau and capturing stack tracesis probably closer to 1-5%.\n  libpoireau includes code derived from xoshiro 256+ 1.0,written in 2018 by David Blackman and Sebastiano Vigna ( vigna@acm.org)and  dedicated to the public domain.", "posttime": "2020-05-19 16:59:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u914d,sampling", "title": "Poireau\uff1a\u4e00\u4e2a\u91c7\u6837\u5206\u914d\u8c03\u8bd5\u5668", "title_en": "Poireau: A Sampling Allocation Debugger", "transed": 1, "url": "https://github.com/backtrace-labs/poireau", "via": "", "real_tags": ["\u5206\u914d", "sampling"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5931\u771f\u5728\u97f3\u4e50\u4e2d\u65e0\u5904\u4e0d\u5728\uff0c\u7279\u522b\u662f\u6d89\u53ca\u5230\u7535\u5409\u4ed6\u7684\u65f6\u5019\u3002\u6b63\u662f\u8fd9\u79cd\u560e\u5431\u4f5c\u54cd\u7684\u3001\u6a21\u7cca\u7684\u58f0\u97f3\u8ba9\u6447\u6eda\u4e50\u542c\u8d77\u6765\u5f88\u6447\u6eda\u4e50\u3002\u5f53\u592a\u591a\u7684\u4fe1\u53f7\u88ab\u8f93\u5165\u5230\u6a21\u62df\u5143\u4ef6\u4e2d\uff0c\u4eba\u4eec\u610f\u8bc6\u5230\u5b83\u53d1\u51fa\u4e86\u6709\u8da3\u7684\u58f0\u97f3\u65f6\uff0c\u5b83\u5c31\u5076\u7136\u5730\u51fa\u73b0\u4e86\u3002\n\u5b83\u542c\u8d77\u6765\u5982\u6b64\u9177\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u5b83\u4fdd\u7559\u4e86\u6b63\u5728\u64ad\u653e\u7684\u97f3\u7b26\u7684\u9891\u7387\uff0c\u540c\u65f6\u5728\u4e0a\u9762\u6dfb\u52a0\u4e86\u5176\u4ed6\u9891\u7387\u3002\u5bf9\u4e8e\u6a21\u62df\u5143\u4ef6\uff0c\u8fd9(\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u662f\u901a\u8fc7\u5bf9\u7528\u4e8e\u4ea7\u751f\u58f0\u97f3\u7684\u4fe1\u53f7\u8fdb\u884c\u9650\u5e45\u6765\u5b9e\u73b0\u7684\u3002\u6700\u7ec8\u7ed3\u679c\u53d6\u51b3\u4e8e\u4f7f\u7528\u7684\u7535\u8def\u548c\u7ec4\u4ef6\uff0c\u56e0\u6b64\u6709\u5f88\u591a\u79cd\u3002\u6b63\u786e\u7684\u5931\u771f\u53ef\u4ee5\u4e3a\u4efb\u4f55\u58f0\u97f3\u6dfb\u52a0\u5b57\u7b26\u3002\n\u5728\u6570\u5b57\u4e16\u754c\u91cc\uff0c\u5931\u771f\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u6ce2\u5f62\u6574\u5f62\u7684\u6280\u672f\u6765\u4ea7\u751f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u9177\u7684\u6982\u5ff5\uff0c\u6211\u8ba4\u4e3a\u5e94\u8be5\u5728\u535a\u5ba2\u4e0a\u53d1\u8868\u4e00\u7bc7\u6587\u7ae0\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6ce2\u5f62\u6574\u5f62\u6765\u521b\u5efa\u7b80\u5355\u7684\u526a\u5207\u626d\u66f2\uff0c\u4f46\u5b83\u8fd8\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\n\u672c\u6bb5\u4ee5\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u90fd\u9700\u8981\u542f\u7528javascript\u624d\u80fd\u8fd0\u884c\uff0c\u5982\u679c\u60a8\u4e0d\u4fe1\u4efb\u6211\uff0c\u6e90\u4ee3\u7801\u5c31\u5728\u8fd9\u91cc\u3002\u6211\u6b63\u5728\u4f7f\u7528\u4e00\u4e9b\u57fa\u4e8e\u7eaf\u6b63\u5f26\u6ce2\u7684\u58f0\u97f3\u6f14\u793a\uff0c\u8fd9\u542c\u8d77\u6765\u975e\u5e38\u53ef\u6015\uff0c\u4f46\u662f\u56fe\u8868\u8981\u6f02\u4eae\u5f97\u591a\u3002\u6211\u5df2\u786e\u4fdd\u58f0\u97f3\u4e0d\u4f1a\u592a\u5927\uff0c\u4f46\u8bf7\u786e\u4fdd\u60a8\u7684\u97f3\u91cf\u4e0d\u4f1a\u8c03\u5f97\u8fc7\u5927\u3002\u6700\u540e\u58f0\u97f3\u53d8\u5f97\u66f4\u597d\u542c\u4e86\u3002\n\u6211\u77e5\u9053\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u4f1a\u5728\u7535\u8bdd\u91cc\u770b\u8fd9\u4e2a\u3002\u795d\u4f60\u597d\u8fd0\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u5e94\u8be5\u4f1a\u8d77\u4f5c\u7528\u3002\n\u4f7f\u7528\u6b64\u9009\u9879\u53ef\u66f4\u6539\u6b64\u9875\u9762\u4e0a\u6bcf\u4e2a\u58f0\u97f3\u7684\u97f3\u91cf\u3002\u5355\u51fb\u6bcf\u4e2a\u56fe\u5f62\u4ee5\u64ad\u653e\u5176\u58f0\u97f3\uff0c\u7136\u540e\u518d\u6b21\u5355\u51fb\u4ee5\u505c\u6b62\u3002\n\u8fd9\u662f\u4e00\u4e2a\u4ee5440 Hz(A\u97f3\u7b26)\u64ad\u653e\u7684\u57fa\u672c\u6b63\u5f26\u6ce2\uff0c\u4f7f\u7528\u526a\u88c1\uff0c\u60a8\u53ef\u4ee5\u5728\u526a\u88c1\u548c\u672a\u526a\u88c1\u7684\u6ce2\u4e4b\u95f4\u6de1\u5165\u6de1\u51fa\uff0c\u5e76\u4f7f\u7528\u4e0b\u9762\u7684\u6ed1\u5757\u8c03\u6574\u526a\u88c1\u7ea7\u522b\u3002\n\u5f53\u524a\u6ce2\u503c\u5728\u6ce2\u7684\u5e38\u7528\u503c\u4e4b\u5916\u65f6\uff0c\u524a\u6ce2\u7684\u6b63\u5f26\u6ce2\u542c\u8d77\u6765\u4e0e\u7eaf\u6b63\u5f26\u6ce2\u5b8c\u5168\u76f8\u540c\u3002\u6211\u544a\u8bc9\u8fc7\u4f60\u4ed6\u4eec\u542c\u8d77\u6765\u5f88\u53ef\u6015\u2026\n\u4e00\u7ec4\u6b63\u5f26\u6ce2\u542c\u8d77\u6765\u6bd4\u5355\u4e2a\u6ce2\u7a0d\u5fae\u597d\u4e00\u4e9b\uff0c\u90a3\u91cc\u7684\u6570\u5b66\u5bb6\u4f1a\u77e5\u9053\u4f60\u53ef\u4ee5\u7528\u6b63\u5f26\u6ce2\u7684\u7ec4\u5408\u5f62\u6210\u4efb\u4f55\u58f0\u97f3\uff0c\u4f46\u6211\u4e0d\u4f1a\u8d70\u5f97\u90a3\u4e48\u8fdc\u3002\n\u6211\u5c06\u5bf9\u4e00\u7ec4\u9891\u7387\u76f8\u8fd1\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u4e03\u4e2a\u6b63\u5f26\u6ce2\u5e94\u7528\u76f8\u540c\u7684\u526a\u8f91\u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4ee5\u67d0\u79cd\u65b9\u5f0f\u76f8\u4e92\u5e72\u6270\uff0c\u4ece\u800c\u4ea7\u751f\u6572\u6253\u6548\u679c(\u8fd9\u542c\u8d77\u6765\u4ecd\u7136\u4e0d\u662f\u5f88\u597d)\u3002\n\u526a\u88c1\u7684\u4e00\u4e2a\u602a\u7656\u662f\uff0c\u8f83\u5b89\u9759\u7684\u58f0\u97f3\u4e0d\u4f1a\u8fbe\u5230\u9608\u503c\uff0c\u56e0\u6b64\u53ea\u6709\u8f83\u54cd\u4eae\u7684\u58f0\u97f3\u624d\u4f1a\u6539\u53d8\u3002\u8fd9\u5c31\u662f\u5982\u4f55\u5728\u5927\u58f0\u7684\u58f0\u97f3\u4e0a\u83b7\u5f97\u201c\u8d85\u901f\u201d\u6548\u679c\u3002\n\u526a\u88c1\u7684\u53e6\u4e00\u4e2a\u526f\u4f5c\u7528\u662f\u5b83\u9650\u5236\u4e86\u97f3\u91cf\uff0c\u56e0\u6b64\u5931\u771f\u901a\u5e38\u4f34\u968f\u7740\u632f\u5e45\u7684\u63d0\u5347\u3002\n\u6b64\u5904(\u548c\u4e0a\u9762)\u7ed8\u5236\u7684\u6ce2\u5f62\u6bd4\u60a8\u53ef\u4ee5\u542c\u5230\u7684\u58f0\u97f3\u6162\u7ea6100\u500d\uff1a\n\u6b64\u6ed1\u5757\u4f1a\u66f4\u6539\u626d\u66f2\u7a0b\u5ea6\uff0c\u518d\u5f80\u53f3\u662f\u66f4\u591a\u7684\u526a\u88c1\u548c\u66f4\u9ad8\u7684\u63d0\u5347\uff1a\n\u5728\u5f15\u64ce\u76d6\u4e0b\u9762\uff0c\u6211\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u6ce2\u5f62\u6574\u5f62\u7684\u6280\u672f\u6765\u521b\u5efa\u88ab\u524a\u6ce2\u7684\u4fe1\u53f7\u3002\u5b83\u7ecf\u5e38\u88ab\u7528\u6765\u6a21\u62df\u66f4\u7ecf\u5178\u7684\u5931\u771f\u58f0\u97f3\uff0c\u8fd9\u6bd4\u526a\u8f91\u8981\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002\u800c\u4e14\u5b83\u53ef\u4ee5\u505a\u5f97\u66f4\u591a\u3002\n\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u4f7f\u7528\u4f20\u9012\u51fd\u6570\uff0c\u8be5\u4f20\u9012\u51fd\u6570\u5c06\u6bcf\u4e2a\u8f93\u5165\u503c(\u5728-1\u548c1\u4e4b\u95f4)\u6620\u5c04\u5230\u4e5f\u5728-1\u548c1\u4e4b\u95f4\u7684\u8f93\u51fa\u503c\u3002\n\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f20\u9012\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u56fe\u5f62\u4e0a\u7684\u8f74\u90fd\u4ece-1\u52301\u3002\u5149\u6807\u4f4d\u7f6e\u5c06\u663e\u793a\u51fd\u6570\u7684\u793a\u4f8b\u503c\uff1a\n\u4e0b\u9762\u663e\u793a\u4e86\u5c06\u4f20\u9012\u51fd\u6570\u5e94\u7528\u4e8e\u6b63\u5f26\u6ce2\u7684\u7ed3\u679c\u3002\u5355\u51fb\u56fe\u8868\u64ad\u653e\u58f0\u97f3\uff0c\u60a8\u53ef\u4ee5\u5728\u64ad\u653e\u65f6\u901a\u8fc7\u5355\u51fb\u6309\u94ae\u6765\u66f4\u6539\u529f\u80fd\uff0c\u4ee5\u542c\u53d6\u4e0d\u540c\u4e4b\u5904\u3002\n\u5173\u4e8e\u4e0d\u540c\u529f\u80fd\u7684\u4e00\u4e9b\u4fe1\u606f(\u67e5\u770b\u6b64\u9875\u9762\u7684\u6e90\u4ee3\u7801\u5e76\u641c\u7d22\u201cHello\uff01\u201d\u8981\u67e5\u770b\u51fd\u6570\u672c\u8eab\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c)\uff1a\n\u526a\u8f91/\u589e\u5f3a-\u526a\u8f91\u4e3a0.5\u5e76\u5c06\u632f\u5e45\u52a0\u500d\u4ee5\u4fdd\u6301\u97f3\u91cf\u4e0d\u53d8\u3002\n\u975e\u5e38\u5608\u6742-\u5c06\u4fe1\u53f7\u66ff\u6362\u4e3a\u968f\u673a\u566a\u97f3\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u542c\u5230\u539f\u59cb\u97f3\u8c03(\u6211\u8ba4\u4e3a\u8fd9\u662f\u7531\u4e8e\u6df7\u53e0\u9020\u6210\u7684)\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u97f3\u9891\u8bb0\u5f55\u5c06\u901a\u8fc7\u4f20\u9012\u51fd\u6570\u8fd0\u884c\uff0c\u6211\u5df2\u7ecf\u590d\u5236\u4e86\u4e0b\u9762\u4e0d\u540c\u7684\u5931\u771f\u6309\u94ae\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u64ad\u653e\u58f0\u97f3\u65f6\u6446\u5f04\u58f0\u97f3(\u8bf7\u8bb0\u4f4f\uff0c\u7ebf\u6027\u5c06\u4e0d\u53d8\u5730\u64ad\u653e\u58f0\u97f3)\u3002\u73a9\u5f97\u5f00\u5fc3!\u3002\n\u8fd9\u4e9b\u53ef\u80fd\u5728\u67d0\u4e9b\u6d4f\u89c8\u5668\u4e2d\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u5148\u5c1d\u8bd5\u64ad\u653e\u4e0a\u9762\u7684\u4e00\u4e2a\u6b63\u5f26\u6ce2\uff0c\u7136\u540e\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e8c\u6b21\u7684\u90a3\u4e2a\u542c\u8d77\u6765\u5f88\u5947\u602a\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5076\u6570\u51fd\u6570\uff0c\u800c\u5176\u4ed6\u5927\u591a\u6570\u51fd\u6570\u90fd\u662f\u2026\u51fd\u6570\u3002\u5947\u602a\u3002\u8fd9\u4e9b\u90fd\u662f\u51fd\u6570\u5bf9\u79f0\u6027\u7684\u526f\u4f5c\u7528\uff0c\u5b83\u4eec\u6539\u53d8\u4e86\u5931\u771f\u4ea7\u751f\u7684\u8c10\u6ce2\u3002\nCLIP/BOOST\u548c\u6307\u6570\u4e4b\u95f4\u7684\u533a\u522b\u662f\u5fae\u5999\u7684-\u8fd9\u4e9b\u5dee\u522b\u5bf9\u4e8e\u9ad8\u7aef\u97f3\u9891\u8bbe\u5907\u6765\u8bf4\u53d8\u5f97\u975e\u5e38\u91cd\u8981\u3002\u4eba\u4eec\u4f1a\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u6765\u5bfb\u627e\u51c6\u786e\u7684\u58f0\u97f3\u3002\n\u6211\u5e0c\u671b\u4f60\u89c9\u5f97\u8fd9\u5f88\u9177\uff0c\u6211\u77e5\u9053\u8fd9\u662f\u4e2a\u968f\u673a\u8bdd\u9898\u3002\u76ee\u524d\u6211\u6b63\u5728\u7528javascript\u6784\u5efa\u5408\u6210\u5668\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u8fd9\u4e2a\u5947\u602a\u7684\u8bdd\u9898\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u656c\u8bf7\u5173\u6ce8\u6216\u8054\u7cfb\u6211\u4eec\u3002", "note_en": "Distortion is everywhere in music, especially when electric guitars are involved. It\u2019s the crunchy, fuzzy sound that makes rock music sound rocky. It came into existence by accident when too much signal was fed into analogue components and people realised it made an interesting sound.\n One of the reasons it sounds so cool is that it preserves the frequency of the note being played, while adding other frequencies on top. With analogue components, this (sort of) works by clipping the signal used to generate the sound. The end result depends on the circuits and components used, so there\u2019s a lot of variety. The right distortion can add character to any sound.\n In the digital world, distortion is commonly created using a technique called wave shaping, which is a cool concept that I thought deserved a blog post. You can use wave shaping to create a simple clipping distortion, but it can do a few more things as well.\n  Everything below this paragraph needs javascript enabled to run, the source code is  here if you don\u2019t trust me. I\u2019m using some sound demos based on pure sine waves which sound utterly horrible, but the graphs are so much prettier. I\u2019ve made sure things aren\u2019t too loud but make sure your volume isn\u2019t turned up super high. The sounds get better at the end.\n I know some of you will be viewing this on a phone. Good luck,  technically it should work.\n  Use this to change the volume of every sound on this page. Click each graph to play its sound, and click again to stop.\n   This is a basic sine wave playing at 440Hz (an A note) with clipping, you can fade between the clipped and not-clipped waves and adjust the clipping level using the sliders below.\n      When the clipping value is outside the usual value of the wave, the clipped sine wave sounds exactly the same as the pure sine wave. I told you they sound horrible\u2026\n  Groups of sine waves sound slightly less bad than single waves, mathematicians out there will know you can form any sound with a combination of sine waves, but I\u2019m not going that far.\n I\u2019ll apply the same clipping to a group of seven sine waves which have frequencies close, but not exactly the same. This makes them interfere with each other in a way which causes a beating effect (it still doesn\u2019t sound very nice).\n A quirk of clipping is that quieter sounds will not hit the threshold, so only the louder sounds get changed. This is how you get \u201coverdrive\u201d effects on loud sounds.\n Another side effect of clipping is that it limits the volume, so the distortion is often paired with a boost to the amplitude.\n The waveform here (and above) is being drawn about 100x slower than the sound you can hear:\n  This slider changes the distortion amount, further to the right is more clipping coupled with a higher boost:\n   Under the hood I\u2019m using a technique called wave shaping to create the clipped signals. It\u2019s often used to emulate more classic distortion sounds which are a bit more involved than clipping. And it can do quite a lot more.\n It works by using a transfer function, which maps every  input value (between -1 and 1) to an  output value also between -1 and 1.\n Here are a few examples of transfer functions, the axes on the graph both go from -1 to 1. The cursor position will show example values of the function:\n    Below shows the result of applying the transfer function to a sine wave. Click the graph to play the sound, you can change the function by clicking the buttons while it\u2019s playing to hear the difference.\n  Some info on the different functions (look at this page\u2019s source and search \u201cHello!\u201d to see the functions themselves):\n Clip/Boost - clips to 0.5 and doubles the amplitude to keep the volume the same\n        Very Noisy - replaces the signal with random noise, but you can still hear the original tone (I think this is due to aliasing)\n   Here are some audio recordings which will be run through the transfer function, I\u2019ve copied the different distortion buttons below so you can mess about with the sound while it\u2019s playing (remember, linear will play the sound unchanged). Have fun!\n    These might not work in some browsers, try playing one of the sine waves above first, then email me\n         The quadratic one sounds so odd. It\u2019s because it\u2019s an even function whereas most of the others are\u2026 odd. These are side effects of the symmetry of the function, they change the harmonics produced by the distortion.\n The difference between clip/boost and exponential is subtle - these are the sorts of differences that become very important for high end audio equipment. People will spend lots of time and money looking for the exact right sound.\n  I hope you found that cool, I know it\u2019s a random subject. I\u2019m building a synthesiser in javascript at the moment, hence the weird topic. Stay tuned or get in touch if you\u2019re interested.", "posttime": "2020-05-19 16:00:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5931\u771f,works,\u58f0\u97f3", "title": "\u97f3\u4e50\u4e2d\u7684\u5931\u771f\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684", "title_en": "How Distortion Works in Music", "transed": 1, "url": "https://benmosheron.gitlab.io/blog/2020/04/26/distortion.html", "via": "", "real_tags": ["\u5931\u771f", "works", "\u58f0\u97f3"]}, {"category": "", "categoryclass": "", "imagename": "9c5c449ca31c00b372124e031a937051.png", "infoid": 1002755, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u8c22\u8c22\u60a8\u7684\u76db\u60c5\u9080\u8bf7\uff0c\u6d1b\u7a46\u6258\u5148\u751f\u3002\u6211\u5f88\u5feb\u5c31\u4f1a\u56de\u5230\u82f1\u56fd\uff0c\u6240\u4ee5\u8fd9\u662f\u975e\u5e38\u53ca\u65f6\u7684\u3002\u201c\u3002\n\u201c\u8c22\u8c22\u4f60\u540c\u610f\u89c1\u6211\uff0c\u2026\u5148\u751f\u3002\u2026\u7235\u58eb\u3002\u67e5\u5c14\u65af\u00b7\u2026\u3002A.R.\u2026\u3002\u970d\u5c14\u3002\u8fd9\u662f\u6211\u83ab\u5927\u7684\u8363\u5e78\u3002\u6211\u751a\u81f3\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u79f0\u547c\u4f60\u3002\u4f60\u88ab\u5c01\u4e3a\u7235\u58eb\u4e86\u5417\uff1f\u201c\u3002\n\u201c\u53eb\u6211\u6258\u5c3c\u5427\uff0c\u5982\u679c\u4e0d\u592a\u9ebb\u70e6\u7684\u8bdd\uff0c\u8bf7\u5141\u8bb8\u6211\u53eb\u4f60\u5c3c\u79d1\u3002\u201d\n\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e73\u6de1\u65e0\u5947\u7684\u573a\u666f--\u4e24\u4e2a\u7537\u4eba\u5728\u4eab\u53d7\u5a01\u58eb\u5fcc\u3002\u7136\u800c\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e9b\u8010\u4eba\u5bfb\u5473\u7684\u7ec6\u8282\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u4f60\u53ef\u4ee5\u7528\u5200\u5272\u65ad\u7684\u5f20\u529b\u3002\n\u6258\u5c3c\u00b7\u970d\u5c14(Tony Hoare)\u7a7f\u7740\u4e00\u5957\u526a\u88c1\u7cbe\u7f8e\u7684\u56db\u4ef6\u5957\u897f\u88c5\uff0c\u795e\u60c5\u6de1\u7136\uff0c\u53ea\u6709\u82f1\u56fd\u4eba\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u5c31\u50cf\u4e00\u676f\u8336\u4e00\u6837\u82f1\u56fd\u5316\u3002\u5f53\u4ed6\u4ece\u676f\u5b50\u91cc\u555c\u996e\u65f6\uff0c\u4ed6\u65e0\u53ef\u5948\u4f55\u7684\u9b3c\u8138\u5145\u5206\u8bf4\u660e\u4e86\u4ed6\u5bf9\u6ce2\u65c1\u5a01\u58eb\u5fcc\u4e0e\u82cf\u683c\u5170\u5a01\u58eb\u5fcc\u7684\u770b\u6cd5\u3002\u5728\u5c0f\u684c\u5b50\u7684\u53e6\u4e00\u8fb9\uff0c\u5c3c\u79d1\u00b7\u6d1b\u7a46\u6258(Nico Lomuto)\u4e0e\u4f17\u4e0d\u540c\uff1a\u4ed6\u662f\u4e00\u4e2a\u7a7f\u7740\u4f11\u95f2\u7684\u7a0b\u5e8f\u5458\uff0c\u6b63\u4eab\u53d7\u7740\u4ed6\u7684\u5a01\u58eb\u5fcc\u548c\u53ef\u53e3\u53ef\u4e50(\u8fd9\u4ef6\u4e8b\u5982\u6b64\u4ee4\u4eba\u9707\u60ca\uff0c\u4ee5\u81f3\u4e8e\u6258\u5c3c\u5f88\u65e9\u5c31\u51b3\u5b9a\u523b\u610f\u5047\u88c5\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u5c31\u50cf\u9762\u5bf9\u6210\u719f\u7684\u4f53\u5473\u6216\u653b\u51fb\u6027\u7eb9\u8eab\u65f6\u4e00\u6837)\uff0c\u770b\u5230\u4ed6\u521a\u521a\u9047\u5230\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5de8\u5934\uff0c\u4ed6\u6709\u4e00\u79cd\u653e\u677e\u7684\u656c\u754f\u4e4b\u60c5\u3002\n\u201c\u542c\u7740\uff0c\u6258\u5c3c\uff0c\u201d\u5c3c\u79d1\u5728\u95f2\u804a\u7ed3\u675f\u65f6\u8bf4\uff0c\u201c\u5173\u4e8e\u90a3\u4e2a\u5206\u533a\u7b97\u6cd5\u3002\u6211\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8981\u53d1\u8868\u6216--\u201c\u3002\n\u201c\u54e6\uff1f\u662f\u7684\uff0c\u662f\u7684\uff0c\u5206\u533a\u7b97\u6cd5\u3002\u201c\u3002\u6258\u5c3c\u5047\u88c5\u60ca\u8bb6\u5730\u626c\u8d77\u7709\u6bdb\uff0c\u4eff\u4f5b\u4ed6\u6ca1\u6709\u60f3\u5230\u8fc7\u53bb\u4e94\u5e74\u91cc\u5173\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u6bcf\u4e00\u7bc7\u8bba\u6587\u548c\u6bcf\u4e00\u672c\u4e66\u90fd\u540c\u65f6\u63d0\u5230\u4e86\u5b83\u4eec\u7684\u540d\u5b57\u3002\u8fd9\u663e\u7136\u662f\u8fde\u63a5\u4e24\u4e2a\u4eba\u548c\u4f1a\u9762\u52a8\u673a\u7684\u552f\u4e00\u56e0\u7d20\uff0c\u4f46\u662f\u6258\u5c3c\u8fd9\u4e2a\u5b8c\u7f8e\u7684\u7ec5\u58eb\uff0c\u5982\u679c\u4ed6\u7684\u8c08\u8bdd\u4f19\u4f34\u4e0d\u63d0\u8d77\u5929\u6c14\uff0c\u4ed6\u53ef\u4ee5\u5728\u623f\u95f4\u91cc\u7528\u7c89\u8272\u7684\u5927\u8c61\u8c08\u8bba\u51e0\u4e2a\u5c0f\u65f6\u7684\u5929\u6c14\u3002\n\u201c\u662f\u7684\uff0c\u90a3\u4e2a\u4e0d\u65ad\u88ab\u63d0\u53ca\u7684\u5206\u533a\u7b97\u6cd5\u548c\u4f60\u7684\u4e00\u6837\uff0c\u201d\u5c3c\u79d1\u7ee7\u7eed\u8bf4\u3002\u201c\u6211\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7b97\u6cd5\u7406\u8bba\u5bb6\u3002\u6211\u6b63\u5728\u5f00\u53d1Ada\uff0c\u5173\u4e8e\u6211\u7684\u5206\u533a\u65b9\u6848\u7684\u6574\u4e2a\u4e8b\u60c5\u8ba9\u6211\u5206\u5fc3\u3002\u4ee4\u4eba\u70e6\u607c\u7684\u662f\uff0c\u201c\u5c3c\u79d1\u7528\u4e00\u79cd\u6beb\u65e0\u63a9\u9970\u7684\u4eba\u7684\u8bed\u6c14\u8bf4\uff0c\u201d\u5b83\u751a\u81f3\u4e0d\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u7b97\u6cd5\u3002\u6211\u7684\u5206\u533a\u65b9\u6848\u5c06\u59cb\u7ec8\u6267\u884c\u4e0e\u60a8\u7684\u76f8\u540c\u6570\u91cf\u7684\u6bd4\u8f83\u548c\u81f3\u5c11\u76f8\u540c\u6570\u91cf\u7684\u4ea4\u6362\u3002\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u7684\u662fn\u4e2a\u989d\u5916\u7684\u6389\u671f-n\uff01\u6211\u4e0d\u660e\u767d\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4e00\u76f4\u63d0\u5230\u8fd9\u4ef6\u53d7\u795d\u798f\u7684\u4e8b\u3002\u73b0\u5728\u5df2\u7ecf\u4e0d\u662f\u6211\u80fd\u63a7\u5236\u7684\u4e86\u3002\u6211\u4e0d\u80fd\u544a\u8bc9\u4ed6\u4eec\u5e94\u8be5\u6559\u6388\u548c\u51fa\u7248\u4ec0\u4e48\u7b97\u6cd5\u3002\u5c31\u50cf\u6ce1\u6ce1\u9171\u4e00\u6837\u3002\u6bcf\u5f53\u6709\u4eba\u63d0\u5230\u5feb\u901f\u6392\u5e8f\u65f6\uff0c\u89c2\u4f17\u4e2d\u5c31\u4f1a\u6709\u4e00\u4e9b\u7b28\u86cb--\u6216\u8005\u6211\u5e94\u8be5\u8bf4\u662f\u6ce1\u6ce1\u8111\u888b--\u662f\u7684\uff0c\u6211\u4e5f\u542c\u8bf4\u8fc7\u6ce1\u6ce1\u6392\u5e8f\u7b97\u6cd5\u3002\u8ba9\u6211\u6bdb\u9aa8\u609a\u7136\u3002\u201c\n\u5c3c\u79d1\u53f9\u4e86\u53e3\u6c14\u3002\u6258\u5c3c\u70b9\u70b9\u5934\u3002\u5171\u540c\u7684\u4ef7\u503c\u89c2\u3002\u878d\u6d3d\u7684\u7a7a\u6c14\u4e2d\u5f25\u6f2b\u7740\u7a81\u5982\u5176\u6765\u7684\u3001\u5b89\u9759\u7684\u3001\u6109\u60a6\u7684\u6c14\u606f\uff0c\u5c31\u50cf\u70e4\u7bb1\u91cc\u4f20\u51fa\u7684\u997c\u5e72\u7684\u5473\u9053\u4e00\u6837\u3002\u51e0\u79d2\u949f\u8fc7\u53bb\u4e86\u3002\u6770\u514b\u548c\u53ef\u4e50\u559d\u4e86\u4e00\u53e3\u3002\u684c\u5b50\u7684\u53e6\u4e00\u8fb9\uff0c\u6ce2\u65c1\u5c0f\u53e3\u559d\u4e86\u4e00\u53e3\uff0c\u505a\u4e86\u4e2a\u65e0\u53ef\u5948\u4f55\u7684\u9b3c\u8138\u3002\n\u6258\u5c3c\u8bb2\u8bdd\u65f6\u7528\u7684\u662f\u4e00\u4f4d\u79d1\u5b66\u5bb6\u7cbe\u5fc3\u6311\u9009\u7684\u63aa\u8f9e\uff0c\u4ed6\u4e0d\u60f3\u8ba9\u4efb\u4f55\u5047\u8bf4\u90fd\u6ca1\u6709\u88ab\u63a2\u7a76\u8fc7\u3002\u201c\u6211\u660e\u767d\uff0c\u5c3c\u79d1\u3002\u4e0d\u8fc7\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\u3002\u60a8\u7684\u7b97\u6cd5\u7b80\u5355\u800c\u89c4\u5219\uff0c\u53ea\u5411\u4e00\u4e2a\u65b9\u5411\u79fb\u52a8\uff0c\u5e76\u4e14\u6bcf\u6b65\u6700\u591a\u8fdb\u884c\u4e00\u6b21\u4ea4\u6362\u3002\u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u4e00\u4e9b\u672a\u6765\u7684\u2026\u8ba1\u7b97\u673a\u3002\u201c\u3002\n\u201c\u65e0\u8bba\u673a\u5668\u5982\u4f55\uff0c\u6389\u671f\u8d8a\u591a\u4e0d\u53ef\u80fd\u6bd4\u6389\u671f\u8d8a\u5c11\u3002\u8fd9\u662f\u5e38\u8bc6\uff0c\u201c\u5c3c\u79d1\u4e13\u6a2a\u5730\u8bf4\u3002\n\u201c\u6211\u4e0d\u4f1a\u90a3\u4e48\u80af\u5b9a\u3002\u8ba1\u7b97\u673a\u6ca1\u6709\u5e38\u8bc6\u3002\u8ba1\u7b97\u673a\u4ee4\u4eba\u60ca\u8bb6\u3002\u7406\u6240\u5f53\u7136\uff0c\u4ed6\u4eec\u5c06\u7ee7\u7eed\u8fd9\u6837\u505a\u3002\u55ef\uff0c\u4e0d\u5982\u6211\u4eec\u597d\u597d\u4eab\u53d7\u4eca\u665a\u5427\u3002\u6ca1\u6709\u4ec0\u4e48\u6bd4\u5728\u5b89\u9759\u7684\u4ff1\u4e50\u90e8\u91cc\u8fdb\u884c\u4e00\u6b21\u6109\u5feb\u7684\u8c08\u8bdd\u66f4\u597d\u7684\u4e86\u3002\u201c\u3002\n\u201c\u662f\u7684\u3002\u5e72\u676f\u3002\u8fd9\u662f\u4e2a\u6709\u8da3\u7684\u5730\u65b9\u3002\u6211\u542c\u8bf4\u4ed6\u4eec\u5f88\u5feb\u5c31\u4f1a\u6709\u73b0\u573a\u7684\u4e61\u6751\u97f3\u4e50\u3002\u201c\u3002\n\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u5bf9\u5206\u7c7b\u95ee\u9898\u6709\u4e00\u79cd\u672a\u8868\u767d\u7684\u4e0a\u763e\u3002\u8fd9\u5e76\u4e0d\u96be\u9690\u85cf-\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u75f4\u8ff7\u4e8e\u7814\u7a76\u6392\u5e8f\u662f\u4e00\u79cd\u793e\u4f1a\u4e0a\u53ef\u4ee5\u5bb9\u5fcd\u7684\u6df7\u4e71\u804c\u4e1a\uff1b\u6beb\u65e0\u7591\u95ee\uff0c\u8bb8\u591a\u7a0b\u5e8f\u5458\u82b1\u4e86\u51e0\u4e2a\u6df1\u591c\u5c1d\u8bd5\u53e6\u4e00\u79cd\u6392\u5e8f\u65b9\u6cd5\uff0c\u5b83\u5c06\u6bd4\u5176\u4ed6\u65b9\u6cd5\u597d\u5f97\u591a\u3002\u6240\u4ee5\uff0c\u5f53\u6211\u57282002\u5e74\u5199\u5173\u4e8e\u6392\u5e8f\u7684\u6587\u7ae0\u65f6\uff0c\u6ca1\u6709\u4eba\u5bf9\u6b64\u611f\u5230\u60ca\u8bb6(\u542c\u8bf4\u8fc7\u201cFit Pivot\u201d\u5417\uff1f)\u3002\u4f60\u5f53\u7136\u6ca1\u6709)\u3002\u5f53\u6211\u7f16\u5199D\u7684std.ort\u65f6\uff0c\u6ca1\u6709\u7ec4\u7ec7\u4efb\u4f55\u5e72\u9884\uff0c\u7ed3\u679c\u8bc1\u660e\u5b83\u6709\u65f6\u662f\u4e8c\u6b21\u7684(\u8c22\u5929\u8c22\u5730\uff0c\u540e\u6765\u5f97\u5230\u4e86\u4fee\u590d)\u3002\u5373\u4f7f\u5f53\u6211\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5c40\u5916\u4eba\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u9009\u62e9\u95ee\u9898\u7684\u5b66\u672f\u8bba\u6587(\u7d22\u7279\u7684\u8868\u4eb2)\u65f6\uff0c\u4e5f\u6ca1\u6709\u4eba\u5632\u7b11\u6211\uff0c\u5c31\u8fde\u4f1a\u8bae\u7ec4\u7ec7\u8005\u90fd\u8bf4\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u4e0d\u9519\u7684\u628a\u620f\u3002\u5f53\u6211\u5728CppCon 2019\u5e74\u8c08\u5230\u5206\u7c7b\u65f6\uff0c\u6ca1\u6709\u5f15\u8d77\u516c\u4f17\u7684\u6124\u6012\u3002\u7a0b\u5e8f\u5458\u660e\u767d\u8fd9\u4e00\u70b9\u3002\n\u6240\u4ee5\uff0c\u6211\u8bbe\u6cd5\u505a\u5230\u4e86\u3002\u4f60\u77e5\u9053\u4ed6\u4eec\u600e\u4e48\u8bf4\u7684-\u4e00\u5929\u4e00\u6b21\u3002\u7136\u800c\uff0c\u5f53\u6211\u770b\u5230\u6700\u8fd1\u4e00\u7bc7\u8bba\u6587\u7684\u6807\u9898\uff1a\u201c\u5206\u652f\u9884\u6d4b\u5931\u8bef\u4e0d\u4f1a\u5f71\u54cdMergesort\u65f6\uff0c\u6211\u786e\u5b9e\u611f\u5230\u4e86\u4e00\u4e1d\u5174\u594b\u3002\u201d\u5982\u6b64\u8010\u4eba\u5bfb\u5473\u7684\u6807\u9898\u3002\u9996\u5148\uff0c\u5206\u652f\u673a\u6784\u7684\u9519\u8bef\u9884\u6d4b\u9884\u8ba1\u4f1a\u5f71\u54cd\u5408\u5e76\u6392\u5e8f\u5417\uff1f\u6211\u6ca1\u6709\u592a\u591a\u7684\u60f3\u6cd5\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u548c\u4ed6\u4eec\u7684\u732b\u90fd\u5728\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\uff0c\u800c\u4e0d\u662fMergesort\uff0c\u6240\u4ee5\u540e\u8005\u5e76\u4e0d\u662f\u6211\u5173\u6ce8\u7684\u7126\u70b9\u3002\u4f46\u662f\u54ce\uff0c\u6211\u6839\u672c\u4e0d\u9700\u8981\u62c5\u5fc3\uff0c\u56e0\u4e3a\u6807\u9898\u575a\u51b3\u65ad\u8a00\uff0c\u6211\u4e0d\u77e5\u9053\u6211\u5e94\u8be5\u62c5\u5fc3\u7684\u90a3\u4e2a\u95ee\u9898\uff0c\u6211\u7ec8\u7a76\u4e0d\u9700\u8981\u62c5\u5fc3\u3002\u56e0\u6b64\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6807\u9898\u4f1a\u81ea\u52a8\u62b5\u6d88\u3002\u7136\u800c\uff0c\u6211\u786e\u5b9e\u8bfb\u4e86\u8fd9\u7bc7\u8bba\u6587(\u5e76\u5efa\u8bae\u60a8\u4e5f\u8fd9\u6837\u505a)\uff0c\u5728\u8bb8\u591a\u6709\u8da3\u7684\u89c1\u89e3\u4e2d\uff0c\u6709\u4e00\u4e2a\u5f15\u8d77\u4e86\u6211\u7684\u6ce8\u610f\uff1a\u4ece\u6548\u7387\u7684\u89d2\u5ea6\u8ba8\u8bba\u4e86Lomuto\u7684\u5206\u533a\u65b9\u6848\uff0c\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7ade\u4e89\u8005(\u4e0e\u666e\u904d\u4f7f\u7528\u7684Hoare\u5206\u533a\u76f8\u6bd4)\u3002\u6548\u7387\uff01\n\u8ba9\u6211\u4eec\u9996\u5148\u56de\u987e\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u5206\u533a\u65b9\u6848\u3002\u5728\u7ed9\u5b9a\u6570\u7ec4\u548c\u67a2\u8f74\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\uff0c\u5212\u5206\u6570\u7ec4\u610f\u5473\u7740\u6392\u5217\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u5c0f\u4e8e\u6216\u7b49\u4e8e\u67a2\u8f74\u7684\u6240\u6709\u5143\u7d20\u90fd\u5728\u5de6\u4fa7\uff0c\u800c\u5927\u4e8e\u6216\u7b49\u4e8e\u67a2\u8f74\u7684\u5143\u7d20\u5728\u53f3\u4fa7\u3002\u8f74\u5fc3\u7684\u6700\u7ec8\u4f4d\u7f6e\u5c06\u4f4d\u4e8e\u8fb9\u754c\u3002(\u5982\u679c\u6709\u591a\u4e2a\u7b49\u6548\u7684\u8f74\u503c\uff0c\u5219\u6700\u7ec8\u8f74\u4f4d\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u4f1a\u5e26\u6765\u91cd\u8981\u7684\u5b9e\u9645\u540e\u679c\uff1b\u4f46\u662f\uff0c\u5bf9\u4e8e\u672c\u6587\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u6570\u7ec4\u503c\u90fd\u662f\u4e0d\u540c\u7684\u3002)\nLomuto\u7684\u5206\u533a\u65b9\u6848\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u4fdd\u6301\u4e00\u4e2a\u201c\u8bfb\u201d\u4f4d\u7f6e\u548c\u4e00\u4e2a\u201c\u5199\u201d\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u6700\u521d\u90fd\u662f0\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8bfb\u53d6\u7684\u5143\u7d20\uff0c\u5982\u679c\u201c\u8bfb\u78c1\u5934\u201d\u770b\u5230\u7684\u503c\u5927\u4e8e\u67a2\u8f74\uff0c\u5219\u8df3\u8fc7\u5b83(\u8bfb\u78c1\u5934\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e)\u3002\u5426\u5219\uff0c\u8bfb\u78c1\u5934\u7684\u503c\u4e0e\u5199\u78c1\u5934\u7684\u503c\u4e92\u6362\uff0c\u5e76\u4e14\u4e24\u4e2a\u78c1\u5934\u90fd\u524d\u8fdb\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5f53\u8bfb\u78c1\u5934\u5b8c\u6210\u65f6\uff0c\u5199\u78c1\u5934\u7684\u4f4d\u7f6e\u5b9a\u4e49\u5206\u533a\u3002\u8bf7\u53c2\u8003\u4e0b\u9762\u7684\u52a8\u753b(\u6765\u81ea\u7ef4\u57fa\u767e\u79d1\u7528\u6237Mastremo\uff0c\u5728CC-by-SA3.0\u8bb8\u53ef\u4e0b\u672a\u7ecf\u4fee\u6539\u4f7f\u7528)\u3002\nLomuto\u5206\u533a\u7684\u95ee\u9898\u5728\u4e8e\u5b83\u53ef\u80fd\u4f1a\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684\u4ea4\u6362\u3002\u8003\u8651\u53ea\u6709\u6700\u5de6\u8fb9\u7684\u5143\u7d20\u5927\u4e8e\u8f74\u5fc3\u7684\u6570\u7ec4\u7684\u6781\u7aef\u60c5\u51b5\u3002\u8be5\u5143\u7d20\u5c06\u5728\u6bcf\u4e2a\u8fed\u4ee3\u6b65\u9aa4\u4e2d\u7b28\u62d9\u5730\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5176\u65b9\u5f0f\u4e0e\uff0c\u55ef\uff0c\u6c14\u6ce1\u6392\u5e8f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\nHoare\u7684\u5206\u533a\u65b9\u6848\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4f7f\u7528\u4e24\u4e2a\u201c\u8bfb/\u5199\u5934\u201d\u4ece\u9635\u5217\u7684\u4e24\u7aef\u540c\u65f6\u8fed\u4ee3\u3002\u5b83\u4eec\u8df3\u8fc7\u5df2\u7ecf\u9002\u5f53\u653e\u7f6e\u7684\u5143\u7d20(\u5c0f\u4e8e\u5de6\u4fa7\u7684\u8f74\u5fc3\uff0c\u5927\u4e8e\u53f3\u4fa7\u7684\u8f74\u5fc3)\uff0c\u5e76\u4e14\u4ec5\u5c06\u5de6\u4fa7\u7684\u4e00\u4e2a\u8f83\u5c0f\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u53f3\u4fa7\u7684\u4e00\u4e2a\u8f83\u5927\u7684\u5143\u7d20\u3002\u5f53\u4e24\u4e2a\u78c1\u5934\u76f8\u9047\u65f6\uff0c\u9635\u5217\u56f4\u7ed5\u4f1a\u5408\u70b9\u8fdb\u884c\u5206\u533a\u3002\u4e0a\u9762\u63cf\u8ff0\u7684\u6781\u7aef\u60c5\u51b5\u662f\u901a\u8fc7\u5355\u4e2a\u4ea4\u6362\u6765\u5904\u7406\u7684\u3002\u5927\u591a\u6570\u5f53\u524d\u7684\u5feb\u901f\u6392\u5e8f\u5b9e\u73b0\u90fd\u4f7f\u7528Hoare\u5206\u533a\uff0c\u539f\u56e0\u5f88\u660e\u663e\uff1a\u5b83\u8fdb\u884c\u7684\u6bd4\u8f83\u6b21\u6570\u4e0eLomuto\u5206\u533a\u4e00\u6837\u591a\uff0c\u4ea4\u6362\u66f4\u5c11\u3002\n\u8003\u8651\u5230Hoare\u5206\u533a\u663e\u7136\u6bd4Lomuto\u5206\u533a\u505a\u7684\u5de5\u4f5c\u5c11\uff0c\u95ee\u9898\u662f\u4e3a\u4ec0\u4e48\u8981\u6559\u6388\u6216\u4f7f\u7528\u540e\u8005\u3002STL\u7684\u521b\u5efa\u8005Alexander Stepanov\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5212\u5206\u7684\u5f88\u597d\u7684\u8ba8\u8bba\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e00\u822c\u6027\u7684\u8bba\u70b9\uff1aLomuto\u5206\u533a\u53ea\u9700\u8981\u524d\u5411\u8fed\u4ee3\u5668\uff0c\u800cHoare\u5206\u533a\u9700\u8981\u53cc\u5411\u8fed\u4ee3\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u89c1\u89e3\uff0c\u5c3d\u7ba1\u5b9e\u7528\u4ef7\u503c\u6709\u9650\uff1a\u662f\u7684\uff0c\u60a8\u53ef\u4ee5\u5728\u5355\u94fe\u8868\u4e0a\u4f7f\u7528Lomuto\u7684\u5206\u533a\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u662f\u4e3a\u4e86\u5feb\u901f\u6392\u5e8f\u800c\u5206\u533a\uff0c\u5e76\u4e14\u60a8\u4e0d\u60f3\u5bf9\u5355\u94fe\u8868\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff1bMergesort\u5c06\u662f\u9009\u62e9\u7684\u7b97\u6cd5\u3002\n\u7136\u800c\uff0c\u786e\u5b9e\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528(\u4e5f\u975e\u5e38\u4ee4\u4eba\u60ca\u8bb6)\u7684\u8bba\u70b9\uff0c\u8fd9\u4e5f\u662f\u672c\u6587\u7684\u7b11\u70b9\uff1a\u4ee5\u65e0\u5206\u652f\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684Lomuto\u5206\u533a\u5728\u968f\u673a\u6570\u636e\u4e0a\u6bd4Hoare\u5206\u533a\u5feb\u5f97\u591a\u3002\u8003\u8651\u5230\u5feb\u901f\u6392\u5e8f\u5c06\u5176\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u5206\u533a\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u770b\u5230\u5feb\u901f\u6392\u5e8f\u7684\u5de8\u5927\u6539\u8fdb(\u662f\u7684\uff0c\u6211\u8bf4\u7684\u662fC++\u548cD\u7684\u5de5\u4e1a\u5f3a\u5ea6\u5b9e\u73b0)\uff0c\u5c06\u5176\u5206\u533a\u7b97\u6cd5\u66ff\u6362\u4e3a\u771f\u6b63\u505a\u66f4\u591a\u5de5\u4f5c\u7684\u7b97\u6cd5\u3002\n\u8981\u4e86\u89e3cookie\u662f\u5982\u4f55\u5d29\u6e83\u7684\uff0c\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770bHoare\u5206\u533a\u7684\u5b9e\u73b0\u3002\u4e3a\u4e86\u6d88\u9664\u6240\u6709\u65e0\u5173\u7d27\u8981\u7684\u7ec6\u8282\uff0c\u672c\u6587\u4e2d\u7684\u4ee3\u7801\u4f5c\u4e3a\u5143\u7d20\u7c7b\u578b\u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u5b83\u7684\u7f16\u8bd1\u548c\u8fd0\u884c\u65b9\u5f0f\u4e0eC++\u6216D\u7f16\u8bd1\u5668\u76f8\u540c\u3002\u672c\u6587\u5c06\u7528\u4e24\u79cd\u8bed\u8a00\u8fdb\u884c\u6240\u6709\u4f8b\u7a0b\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5f88\u591a\u7814\u7a76\u6587\u732e\u90fd\u4f7f\u7528C++\u7684std\uff1a\uff1aSort\u4f5c\u4e3a\u91cd\u8981\u7684\u57fa\u7ebf\u6765\u8861\u91cf\u7b97\u6cd5\u6027\u80fd\u3002\n/**\u4ee5\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u900f\u89c6\u7684\u5206\u533a\u3002\u8fd4\u56de\uff1a\u6307\u5411\u8f74\u5fc3\u6700\u7ec8\u4f4d\u7f6e\u7684\u6307\u9488\u3002*/long*HOARE_PARTITION(long*first\uff0clong*last){assert(first&lt\uff1b=last)\uff1bif(last-first&lt\uff1b2)\u5148\u8fd4\u56de\uff1b//\u6ca1\u6709\u4ec0\u4e48\u6709\u8da3\u7684\u4e8b\u60c5\u8981\u505a--last\uff1bif(*first&gt\uff1b*last)\u4ea4\u6362(*first\uff0c*last)\uff1bAUTO PIVOT_POS=FIRST\uff1bAUTO PIVOT=*PIVOT_POS\uff1bFOR(\uff1b){++FIRST\uff1bAUTO f=*FIRST\uff1bWHILE(f&lt\uff1bPIVOT)f=*++FIRST\uff1bAUTO l=*LAST\uff1bWHILE(PIVOT&lt\uff1bl)l=*--LAST\uff1bIF(FIRST&&gt;\uff1b=LAST)Break\uff1b*First=l\uff1b*Last=f\uff1b--LAST\uff1b}--First\uff1bSWAP(*First\uff0c*Pivot_pos)\uff1bReturn First\uff1b}\u3002\n(\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u9009\u62e9\u67a2\u8f74\u6709\u70b9\u5947\u602a\uff0c\u4f46\u4e0d\u7528\u62c5\u5fc3\uff1a\u901a\u5e38\u5b83\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u65b9\u6848-\u6bd4\u59823\u7684\u4e2d\u503c-\u4f46\u5bf9\u6838\u5fc3\u5faa\u73af\u6765\u8bf4\u91cd\u8981\u7684\u662f\uff0c\u67a2\u8f74\u4e0d\u662f\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u5143\u7d20\u3002\u8fd9\u5141\u8bb8\u6838\u5fc3\u5faa\u73af\u7701\u7565\u8bb8\u591a\u9650\u5236\u6761\u4ef6\uff0c\u800c\u4e0d\u4f1a\u8d85\u51fa\u6570\u7ec4\u754c\u9650\u3002)\n\u5173\u4e8e\u6b64\u5b9e\u73b0\u7684\u6548\u7387\u6709\u5f88\u591a\u597d\u7684\u65b9\u9762(\u60a8\u53ef\u80fd\u4f1a\u5728C++\u6216D\u6807\u51c6\u5e93\u7684\u5b9e\u73b0\u4e2d\u53d1\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u7ec6\u8282\u7a0d\u6709\u66f4\u6539)\u3002\u60a8\u53ef\u4ee5\u770b\u51fa\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u7531\u8fc7\u7740\u7b80\u6734\u751f\u6d3b\u7684\u4eba\u7f16\u5199\u7684\u3002\u90a3\u4e9b\u4fdd\u6301\u6307\u7532\u6e05\u6d01\u7684\u4eba\uff0c\u5f53\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u4f1a\u51fa\u73b0\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\uff0c\u5e76\u5b9a\u671f\u7ed9\u5988\u5988\u6253\u7535\u8bdd\u3002\u4ed6\u4eec\u6bcf\u5929\u65e9\u4e0a\u90fd\u8981\u7ec3\u6b66\u672f\uff0c\u4e0d\u8ba9\u7535\u8111\u5468\u671f\u6d6a\u8d39\u6389\u3002\u8be5\u4ee3\u7801\u6beb\u65e0\u677e\u61c8\u4e4b\u5904\u3002\u751f\u6210\u7684\u82f1\u7279\u5c14\u7a0b\u5e8f\u96c6\u975e\u5e38\u7d27\u51d1\uff0c\u5bf9\u4e8eC++\u548cD\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u5b83\u53ea\u5728\u540e\u7aef\u4e4b\u95f4\u6709\u6240\u4e0d\u540c\uff0c\u4e0eGCC(\u53c2\u89c1g++\u548cgdc)\u76f8\u6bd4\uff0cllvm\u7684\u4ee3\u7801\u5927\u5c0f\u7565\u6709\u4f18\u52bf(\u53c2\u89c1clang\u548cldc)\u3002\n\u4e0b\u9762\u6240\u793a\u7684Lomuto\u5206\u533a\u7684\u521d\u59cb\u5b9e\u73b0\u5bf9\u4e8e\u5c55\u793a\u6765\u8bf4\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4f46\u662f\u4ece\u6548\u7387\u7684\u89d2\u5ea6\u770b\u662f\u8349\u7387\u7684\uff1a\n/**\u9009\u62e9\u900f\u89c6\u8868\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5206\u533a\u3002\u8fd4\u56de\uff1a\u6307\u5411\u8f74\u5fc3\u6700\u7ec8\u4f4d\u7f6e\u7684\u6307\u9488\u3002*/long*lomuto_PARTITION_NAIVE(long*first\uff0clong*last){assert(first&lt\uff1b=last)\uff1bif(last-first&lt\uff1b2)\u5148\u8fd4\u56de\uff1b//\u6ca1\u6709\u4efb\u4f55\u6709\u8da3\u7684\u4e8b\u60c5\u8981\u505a\uff0cauto Pivot_pos=first\uff1bauto Pivot=*first\uff1b++first\uff1bfor(auto read=first\uff1bread&lt\uff1blast\uff1b++read){if(*read&lt\uff1bvot){exchange(*read\uff0c*first)\uff1b++first\uff1bfor(auto read=first\uff1bread&lt\uff1blast\uff1b++read){if(*read&lt\uff1bPivot){exchange(*read\uff0c*first)\uff1b++first\uff1b\u4ea4\u6362(*First\uff0c*Pivot_pos)\uff1b\u8fd4\u56de\u7b2c\u4e00\u4e2a\uff1b}\u3002\n\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5982\u679c\u6570\u7ec4\u5de6\u4fa7\u7684\u4e00\u4e32\u5143\u7d20\u5927\u4e8e\u8f74\u5fc3\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u6267\u884c\u5927\u91cf\u611a\u8822\u7684\u65e0\u64cd\u4f5c\u4ea4\u6362(\u6570\u7ec4\u5143\u7d20\u672c\u8eab)\u3002\u6240\u6709\u65f6\u95f4FIRST==WRITE\uff0c\u6240\u4ee5\u5c06*FIRST\u4e0e*WRITE\u4e92\u6362\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e5f\u662f\u6d6a\u8d39\u7684\u3002\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a\u9884\u5904\u7406\u5faa\u73af\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u5faa\u73af\u8df3\u8fc7\u4e0d\u611f\u5174\u8da3\u7684\u521d\u59cb\u90e8\u5206\uff1a\n/**\u4ee5\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u900f\u89c6\u7684\u5206\u533a\u3002\u8fd4\u56de\uff1a\u6307\u5411\u8f74\u5fc3\u6700\u7ec8\u4f4d\u7f6e\u7684\u6307\u9488\u3002*/long*lomuto_PARTITION(long*first\uff0clong*last){assert(first&lt\uff1b=last)\uff1bif(last-first&lt\uff1b2)\u5148\u8fd4\u56de\uff1b//\u6ca1\u6709\u4ec0\u4e48\u6709\u8da3\u7684\u4e8b\u60c5\u8981\u505a--last\uff1bif(*first&&gt;\uff1b*last)exchange(*first\uff0c*last)\uff1bAUTO PIVOT_POS=FIRST\uff1bAUTO PIVOT=*FIRST\uff1b//Prelude\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0a\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e(\u5199\u5934)\u6bd4\u67a2\u8f74\u5927//\u6267\u884c{++First\uff1b}While(*First&lt\uff1bPivot)\uff1bAssert(First&lt\uff1b=Last)\uff1b//\u4e3b\u83dc\u3002FOR(AUTO READ=FIRST+1\uff1bREAD&lt\uff1bLAST\uff1b++READ){AUTO x=*READ\uff1bIF(x&lt\uff1bPIVOT){*READ=*FIRST\uff1b*FIRST=x\uff1b++FIRST\uff1b}//\u5c06\u67a2\u8f74\u653e\u5728\u5b83\u6240\u5c5e\u7684\u4f4d\u7f6e\u3002ASSERT(*FIRST&&gt;\uff1b=PIVOT)\uff1b--FIRST\uff1b*PIVOT_POS=*FIRST\uff1b*FIRST=PIVOT\uff1bRETURN FIRST\uff1b}\u3002\n\u8be5\u51fd\u6570\u73b0\u5728\u9009\u62e9\u8f74\u5fc3\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5c31\u50cfHOARE_PARTITION\u4e00\u6837\u3002\u6211\u8fd8\u505a\u4e86\u53e6\u4e00\u4e2a\u5c0f\u66f4\u6539-\u4e0d\u4f7f\u7528\u4ea4\u6362\u4f8b\u7a0b\uff0c\u800c\u662f\u4f7f\u7528\u663e\u5f0f\u8d4b\u503c\u3002\u4f18\u5316\u5668\u4f1a\u81ea\u52a8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898(\u6ce8\u518c\u52a0\u4e0aWIN\u7684\u5bc4\u5b58\u5668\u5206\u914d)\uff0c\u4f46\u662f\u7528\u6e90\u4ee3\u7801\u8868\u793a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u770b\u5230\u76f8\u5bf9\u6602\u8d35\u7684\u6570\u7ec4\u8bfb\u53d6\u548c\u6570\u7ec4\u5199\u5165\u3002\u73b0\u5728\u662f\u6709\u8da3\u7684\u90e8\u5206\u3002\u8ba9\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u6838\u5fc3\u5faa\u73af\u4e0a\uff1a\nFOR(AUTO READ=FIRST+1\uff1bREAD&lt\uff1bLAST\uff1b++READ){AUTO x=*READ\uff1bIF(x&lt\uff1bPIVOT){*READ=*FIRST\uff1b*FIRST=x\uff1b++FIRST\uff1b}}\u3002\n\u8ba9\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u7edf\u8ba1\u6570\u636e\u3002\u6b64\u5faa\u73af\u4e2d\u6709\u4e24\u4e2a\u6761\u4ef6\uff1aread&lt\uff1blast\u548cx&lt\uff1bvot\u3002\u5b83\u4eec\u7684\u53ef\u9884\u6d4b\u6027\u5982\u4f55\uff1f\u7b2c\u4e00\u4e2a\u662f\u975e\u5e38\u53ef\u9884\u6d4b\u7684--\u4f60\u53ef\u4ee5\u53ef\u9760\u5730\u9884\u6d4b\u5b83\u6c38\u8fdc\u662f\u771f\u7684\uff0c\u800c\u4e14\u4e0d\u7ba1\u6570\u7ec4\u6709\u591a\u5927\uff0c\u4f60\u53ea\u4f1a\u9519\u4e00\u6b21\u3002\u7f16\u8bd1\u5668\u7f16\u5199\u4eba\u5458\u548c\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u90fd\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u5e76\u5728\u5047\u8bbe\u5faa\u73af\u5c06\u7ee7\u7eed\u7684\u60c5\u51b5\u4e0b\u8bbe\u8ba1\u6700\u5feb\u8def\u5f84\u3002(\u9001\u7ed9\u4f60\u7684\u82f1\u7279\u5c14\u5de5\u7a0b\u5e08\u670b\u53cb\u7684\u793c\u7269\u70b9\u5b50\uff1a\u4e00\u5f20\u5199\u7740\u201c\u5411\u540e\u7684\u5206\u652f\u603b\u662f\u88ab\u62ff\u8d70\u201d\u7684\u53d7\u6c14\u57ab\u3002)\u3002\u751a\u81f3\u5728\u51b3\u5b9a\u5faa\u73af\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u4e4b\u524d\uff0cCPU\u5c31\u4f1a\u63a8\u6d4b\u6027\u5730\u5f00\u59cb\u6267\u884c\u5faa\u73af\u7684\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002\u8be5\u5de5\u4f5c\u53ea\u4f1a\u5728\u5faa\u73af\u7ed3\u675f\u65f6\u88ab\u4e22\u5f03\u4e00\u6b21\u3002\u8fd9\u5c31\u662f\u6295\u673a\u6027\u884c\u5211\u7684\u9b54\u529b\u3002\n\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5x&lt\uff1bPivot\u7684\u60c5\u51b5\u5c31\u4e0d\u90a3\u4e48\u4ee4\u4eba\u6109\u5feb\u4e86\u3002\u5982\u679c\u4f60\u5047\u8bbe\u968f\u673a\u6570\u636e\u548c\u968f\u673a\u9009\u62e9\u7684\u8f74\u5fc3\uff0c\u5b83\u53ef\u80fd\u4ee5\u76f8\u7b49\u7684\u6982\u7387\u8d70\u5411\u4efb\u4f55\u4e00\u4e2a\u65b9\u5411\u3002\u8fd9\u610f\u5473\u7740\u6295\u673a\u6027\u6267\u884c\u6839\u672c\u6ca1\u6709\u6548\u679c\uff0c\u8fd9\u5bf9\u6548\u7387\u975e\u5e38\u4e0d\u5229\u3002\u6709\u591a\u7cdf\uff1f\u5728\u6df1\u5ea6\u7ba1\u9053\u67b6\u6784\u4e2d(\u5c31\u50cf\u4eca\u5929\u4e00\u6837)\uff0c\u5931\u8d25\u7684\u6295\u673a\u610f\u5473\u7740\u9700\u8981\u4e22\u5f03\u51e0\u4e2a\u7ba1\u9053\u9636\u6bb5\u6240\u505a\u7684\u5de5\u4f5c\uff0c\u8fd9\u53cd\u8fc7\u6765\u4f1a\u5728\u7ba1\u9053\u4e2d\u4f20\u64ad\u4e00\u4e2a\u65e0\u7528\u7684\u6ce1\u6cab(\u6bd4\u5982\u82b1\u56ed\u8f6f\u7ba1\u4e2d\u7684\u6c14\u6ce1)\u3002\u5982\u679c\u8fd9\u4e9b\u6c14\u6ce1\u51fa\u73b0\u5f97\u592a\u9891\u7e41\uff0c\u5faa\u73af\u53ea\u4f1a\u4ee5\u53ef\u83b7\u5f97\u5e26\u5bbd\u7684\u4e00\u5c0f\u90e8\u5206\u4ea7\u751f\u7ed3\u679c\u3002\u6b63\u5982\u6d4b\u91cf\u90e8\u5206\u5c06\u663e\u793a\u7684\u90a3\u6837\uff0c\u4e00\u6b21\u6d6a\u8d39\u7684\u6295\u673a\u4f1a\u964d\u4f4e\u5927\u7ea630%\u7684\u6f5c\u5728\u901f\u5ea6\u3002\n\u5982\u4f55\u6539\u8fdb\u8fd9\u4e2a\u95ee\u9898\uff1f\u8fd9\u91cc\u6709\u4e00\u4e2a\u60f3\u6cd5\uff1a\u6211\u4eec\u4e0d\u662f\u505a\u51fa\u63a7\u5236\u6267\u884c\u6d41\u7684\u51b3\u7b56\uff0c\u800c\u662f\u4ee5\u76f4\u7ebf\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u5c06\u51b3\u7b56\u5408\u5e76\u4e3a\u6574\u6570\uff0c\u901a\u8fc7\u7cbe\u5fc3\u9009\u62e9\u7684\u6570\u7ec4\u7d22\u5f15\u6765\u6307\u5bfc\u6570\u636e\u6d41\u3002\u505a\u597d\u51c6\u5907--\u8fd9\u4f1a\u8feb\u4f7f\u6211\u4eec\u505a\u50bb\u4e8b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\u6267\u884c\u4e24\u6b21\u6761\u4ef6\u5199\u5165\uff0c\u800c\u662f\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\u6267\u884c\u4e24\u6b21\u5199\u5165\u3002\u5982\u679c\u4e0d\u9700\u8981\u5199\u5165\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u4eec\u81ea\u5df1\u7684\u503c\u8986\u76d6\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\u3002(\u6211\u63d0\u5230\u201c\u50bb\u4e8b\u201d\u4e86\u5417\uff1f)\u3002\u8981\u4e3a\u6240\u6709\u8fd9\u4e9b\u505a\u597d\u4ee3\u7801\u51c6\u5907\uff0c\u8ba9\u6211\u4eec\u6309\u5982\u4e0b\u65b9\u5f0f\u91cd\u5199\u5b83\uff1a\nFOR(AUTO READ=First+1\uff1bRead&lt\uff1bLast\uff1b++Read){auto x=*Read\uff1bIf(x&lt\uff1bPivot){*Read=*First\uff1b*First=x\uff1bFirst+=1\uff1b}Else{*Read=x\uff1b*First=*First\uff1bFirst+=0\uff1b}}\u3002\n\u73b0\u5728\uff0c\u9664\u4e86\u6570\u636e\u4e4b\u5916\uff0c\u5faa\u73af\u7684\u4e24\u4e2a\u5206\u652f\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u3002\u4ee3\u7801\u4ecd\u7136\u662f\u6b63\u786e\u7684(\u5c3d\u7ba1\u5f88\u5947\u602a)\uff0c\u56e0\u4e3a\u5728Else\u5206\u652f\u4e0a\uff0c\u5b83\u4e0d\u5fc5\u8981\u5730\u5199*\u3001\u8bfb\u81ea\u5df1\u548c*\u9996\u5148\u5199\u81ea\u5df1\u3002\u6211\u4eec\u73b0\u5728\u600e\u4e48\u628a\u8fd9\u4e24\u4e2a\u5206\u652f\u7edf\u4e00\u8d77\u6765\u5462\uff1f\u8981\u4ee5\u6709\u6548\u7684\u65b9\u5f0f\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u601d\u8003\u548c\u8bd5\u9a8c\u3002\u6709\u6761\u4ef6\u5730\u9012\u589eFirst\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u5148\u5199+=x&lt\uff1bPivot\u3002\u5c0f\u83dc\u4e00\u789f\u3002\u8fd9\u4e24\u4e2a\u5185\u5b58\u5199\u5165\u6bd4\u8f83\u56f0\u96be\uff0c\u4f46\u57fa\u672c\u601d\u60f3\u662f\u53d6\u6307\u9488\u4e4b\u95f4\u7684\u5dee\u5f02\u5e76\u4f7f\u7528\u7d22\u5f15\u3002\u8fd9\u662f\u5bc6\u7801\u3002\u82b1\u70b9\u65f6\u95f4\u60f3\u4e00\u60f3\uff1a\nfor(\uff1bread&lt\uff1blast\uff1b++read){auto x=*read\uff1bauto size=-int(x&lt\uff1bPivot)\uff1bauto Delta=Small&amp\uff1b(\u5148\u8bfb)\uff1bFirst[Delta]=*First\uff1bRead[-Delta]=x\uff1bFirst-=Smaller\uff1b}\u3002\n\u5957\u7528\u4e00\u53e5\u8457\u540d\u7684\u62c9\u4e01\u8bed\u683c\u8a00\uff0c\u201cCODEX BREVIS EST\u201d\uff0c\u201cCODEX BREVIS EST\u201d\u3002\u77ed\u662f\u6697\u53f7\uff0c\u957f\u662f\u201c\u5e73\u5730\u201d\u3002\u5e26\u6709-int(x&lt\uff1bPivot)\u7684\u8f83\u5c0f\u63a9\u7801\u7684\u521d\u59cb\u5316\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u4f46\u5374\u6709\u5f88\u597d\u7684\u7406\u7531\uff1a\u8f83\u5c0f\u65e2\u53ef\u4ee5\u7528\u4f5c\u901a\u5e38\u7b97\u672f\u4e2d\u4f7f\u7528\u7684\u6574\u6570(0\u6216-1)\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u4f4d\u8fd0\u7b97\u4e2d\u4f7f\u7528\u7684\u63a9\u78010\u62160xFFFFFFFFF(\u5373\uff0c\u5c06\u6240\u6709\u4f4d\u8bbe\u7f6e\u4e3a0\u6216\u5168\u90e8\u8bbe\u7f6e\u4e3a1)\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u63a9\u7801\u6765\u5141\u8bb8\u6216\u6e05\u9664\u8ba1\u7b97\u0394\u7684\u4e0b\u4e00\u884c\u4e2d\u7684\u53e6\u4e00\u4e2a\u79ef\u5206\u3002\u5982\u679cx&lt\uff1bPivot\uff0c\u5219\u8f83\u5c0f\u7684\u4e3a\u5168\u4e00\uff0c\u5e76\u4e14\u589e\u91cf\u88ab\u521d\u59cb\u5316\u4e3a\u8bfb\u53d6\u4f18\u5148\u3002\u968f\u540e\uff0c\u5728First[Delta]\u548cRead[-Delta]\u4e2d\u4f7f\u7528Delta\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u5206\u522b\u662f*(First+Delta)\u548c*(Read-Delta)\u7684\u8bed\u6cd5\u7cd6\u3002\u5982\u679c\u6211\u4eec\u5728\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u4e2d\u66ff\u6362Delta\uff0c\u6211\u4eec\u5c06\u5206\u522b\u83b7\u5f97*(first+(read-first))\u548c*(read-(read-first))\u3002\n\u6700\u540e\u4e00\u884cfirst-=size\u5f88\u666e\u901a\uff1a\u5982\u679cx&lt\uff1b\u8f74\u5fc3\uff0c\u5219\u4ecefirst\u4e2d\u51cf\u53bb-1\uff0c\u8fd9\u7b49\u540c\u4e8e\u5148\u9012\u589e\u3002\u5426\u5219\uff0c\u4ece\u7b2c\u4e00\u4e2a\u51cf\u53bb0\uff0c\u5b9e\u9645\u4e0a\u53ea\u7559\u4e0b\u7b2c\u4e00\u4e2a\u3002\u5e72\u5f97\u6f02\u4eae\u3002\n\u5c06x&lt\uff1bPivot\u66ff\u6362\u4e3a1\u540e\uff0c\u5728\u5faa\u73af\u4f53\u4e2d\u5b8c\u6210\u7684\u8ba1\u7b97\u5c06\u53d8\u4e3a\uff1a\nAUTO x=*READ\uff1bINT SIMLEER=-1\uff1bAUTO DELTA=-1&A\uff1b(\u5148\u8bfb)\uff1b*(FIRST+(\u5148\u8bfb))=*FIRST\uff1b*(READ-(READ-FIRST))=x\uff1bFIRST-=-1\uff1b\n\u4e24\u4e2a\u6307\u9488\u8868\u8fbe\u5f0f\u9b54\u672f\u822c\u5730\u7b80\u5316\u4e3a*read\u548c*first\uff0c\u56e0\u6b64\u4e24\u4e2a\u8d4b\u503c\u5b9e\u73b0\u4e86\u4ea4\u6362(\u56de\u60f3\u4e00\u4e0b\uff0cx\u521a\u521a\u7528*read\u521d\u59cb\u5316)\u3002\u6211\u4eec\u5728\u6700\u521d\u7248\u672c\u7684\u6d4b\u8bd5\u7684True\u5206\u652f\u4e2d\u6240\u505a\u7684\u5b8c\u5168\u4e00\u6837\uff01\n\u5982\u679cx&lt\uff1bPivot\u4e3aFALSE\uff0c\u5219\u589e\u91cf\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u5faa\u73af\u4f53\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a\nAUTO x=*READ\uff1bINT SIMLEER=0\uff1bAUTO DELTA=0&AMP\uff1b(FIRST-FIRST)\uff1b*(FIRST+0)=*FIRST\uff1b*(READ-0)=x\uff1bFIRST-=0\uff1b\n\u8fd9\u4e00\u6b21\u4e8b\u60c5\u66f4\u7b80\u5355\u4e86\uff1a*\u5148\u6539\u5199*Read\u672c\u8eab\uff0c*Read\u4e5f\u6539\u5199\u81ea\u5df1\uff0c\u800c\u5148\u4e0d\u53bb\u7ba1\u7b2c\u4e00\u4e2a\u3002\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\nlong*lomuto_\u5206\u533a_\u5206\u652f\u81ea\u7531(long*first\uff0clong*last){assert(first&lt\uff1b=last)\uff1bif(last-first&lt\uff1b2)\u5148\u8fd4\u56de\uff1b//\u6ca1\u6709\u4ec0\u4e48\u6709\u8da3\u7684\u4e8b\u60c5\u8981\u505a--last\uff1bif(*first&&gt;\uff1b*last)exchange(*first\uff0c*last)\uff1bauto vot_pos=first\uff1bauto vot=*first\uff1bdo{+first\uff1bassert(first&lt\uff1b=last)\uff1b}while(*first&lt\uff1b=lastFOR(AUTO READ=FIRST+1\uff1b\u8bfb\u53d6\u6700\u540e\u4e00\u4e2a\uff1b++\u8bfb\u53d6){AUTO x=*READ\uff1bAUTO SIZER=-INT(x&lt\uff1bPIVOT)\uff1bAUTO\u589e\u91cf=SIMPLE&A\uff1b(\u5148\u8bfb)\uff1bFirst[\u589e\u91cf]=*First\uff1bRead[-Delta]=x\uff1bFirst-=Smaller\uff1b}Assert(*First&gt\uff1b=Pivot)\uff1b--First\uff1b*Pivot_pos=*First\uff1b*First=Pivot\uff1bReturn First\uff1b}\u3002\n\u5979\u5f88\u6f02\u4eae\uff0c\u4e0d\u662f\u5417\uff1f\u66f4\u6f02\u4eae\u7684\u662f\u751f\u6210\u7684\u4ee3\u7801-\u770b\u770bclang/ldc\u548cg++/gdc\u3002\u540c\u6837\uff0c\u540e\u7aef\u4e4b\u95f4\u4e5f\u6709\u4e00\u4e9b\u5dee\u5f02\u3002\n\u4e3a\u4e86\u6bd4\u8f83\u8fd9\u4e24\u79cd\u5206\u533a\u65b9\u6848\uff0c\u6211\u7ec4\u5408\u4e86\u4e00\u4e2a\u5feb\u901f\u6392\u5e8f\u5b9e\u73b0\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5728\u5feb\u901f\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u4f1a\u4f7f\u7528\u5206\u533a\u3002\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6d4b\u8bd5\u5b9e\u73b0\u7701\u7565\u4e86\u5de5\u4e1a\u5feb\u901f\u6392\u5e8f\u5b9e\u73b0\u4e2d\u5b58\u5728\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u5b83\u4eec\u9700\u8981\u62c5\u5fc3\u5404\u79cd\u6570\u636e\u5f62\u72b6(\u90e8\u5206\u9884\u5148\u6392\u5e8f\u7684\u5347\u5e8f\u6216\u964d\u5e8f\u3001\u5e26\u6709\u672c\u5730\u6a21\u5f0f\u3001\u5177\u6709\u8bb8\u591a\u91cd\u590d\u9879\u7b49)\u3002\u5e93\u5b9e\u73b0\u4ece\u901a\u5e38\u75313-9\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u6837\u672c\u4e2d\u8c28\u614e\u5730\u9009\u62e9\u67a2\u8f74\uff0c\u53ef\u80fd\u662f\u968f\u673a\u5316\u7684\uff0c\u5e76\u4e14\u5177\u6709\u68c0\u6d4b\u548c\u907f\u514d\u75c5\u7406\u6027\u8f93\u5165\u7684\u65b9\u6cd5\uff0c\u6700\u5e38\u89c1\u7684\u662f\u4f7f\u7528Introsorte\u3002\n\u5728\u6211\u4eec\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u9488\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u4e14\u9009\u62e9\u7684\u8f74\u5fc3\u5f88\u7b80\u5355\u3002\n..", "note_en": "\u201cThank you for your kind invitation, Mr. Lomuto. I will soon return to England so this is quite timely.\u201d\n \u201cAnd thanks for agreeing to meeting me, Mister\u2026 Sir\u2026 Charles\u2026 A.R\u2026 Hoare. It\u2019s a great honor. I don\u2019t even know how to address you. Were you knighted?\u201d\n \u201cCall me Tony, and if it\u2019s not too much imposition please allow me to call you Nico.\u201d\n On the surface, a banal scene\u2014two men enjoying a whiskey. However, a closer look revealed a number of intriguing details. For starters, a tension you could cut with a knife.\n Dressed in a perfectly tailored four-piece suit worn with the nonchalance only an Englishman could pull off, Tony Hoare was as British as a cup of tea. His resigned grimaces as he was sipping from his glass spoke volumes about his opinion of Bourbon versus Scotch. On the other side of the small table, Nico Lomuto couldn\u2019t have been more different: a casually dressed coder enjoying his whiskey with Coca-Cola (a matter so outrageous that Tony had decided early on to studiously pretend not to notice, as he would when confronted with ripe body odor or an offensive tattoo), in a sort of relaxed awe at the sight of the Computer Science giant he had just met.\n \u201cListen, Tony,\u201d Nico said as the chit chat petered off, \u201cabout that partitioning algorithm. I never meant to publish or\u2014\u201d\n \u201cOh? Yes, yes, the partitioning algorithm.\u201d Tony\u2019s eyebrows rose with feigned surprise, as if it had escaped his mind that every paper and book on quicksort in the past five years mentioned their names together. It was obviously the one thing connecting the two men and the motivation of the meeting, but Tony, the perfect gentleman, could talk about the weather for hours with a pink elephant in the room if his conversation partner didn\u2019t bring it up.\n \u201cYeah, that partitioning algorithm that keeps on getting mentioned together with yours,\u201d Nico continued. \u201cI\u2019m not much of an algorithms theorist. I\u2019m working on Ada, and this entire thing about my partition scheme is a distraction. The bothersome part about it\u201d\u2014Nico was speaking in the forthcoming tone of a man with nothing to hide\u2014\u201dis that it\u2019s not even a better algorithm.  My partitioning scheme will always do the same number of comparisons and at least as many swaps  as yours. In the worst case, mine does  n additional swaps\u2014 n! I can\u2019t understand why they keep on mentioning the blessed thing. It\u2019s out of my hands now. I can\u2019t tell them what algorithms to teach and publish. It\u2019s like bubblesort. Whenever anyone mentions quicksort, there\u2019s some chowderhead\u2014or should I say bubblehead\u2014in the audience going, yes, I also heard of the bubblesort algorithm. Makes my blood curdle.\u201d\n Nico sighed. Tony nodded. Mutual values. Rapport filled the air in between as suddenly, quietly, and pleasantly as the smell of cookies out of the oven. A few seconds went by. Jack and Coke sip. On the other side of the table, Bourbon sip, resigned grimace.\n Tony spoke with the carefully chosen words of a scientist who wants to leave no hypothesis unexplored. \u201cI understand, Nico. Yet please consider the following. Your algorithm is simple and regular, moves in only one direction, and does at most one swap per step. That may be appropriate for some future machines that\u2026\u201d\n \u201cNo matter the machine, more swaps can\u2019t be better than fewer swaps. It\u2019s common sense,\u201d Nico said, peremptorily.\n \u201cI would not be so sure. Computers do not have common sense. Computers are surprising. It stands to reason they\u2019ll continue to be. Well, how about we enjoy this evening. Nothing like a good conversation in a quiet club.\u201d\n \u201cYeah. Cheers. This is a fun place. I hear they\u2019ll have live country music soon.\u201d\n   I\u2019ve carried an unconfessed addiction to the sorting problem for many years. Wasn\u2019t that difficult to hide\u2014to a good extent, an obsessive inclination to studying sorting is a socially tolerated  d\u00e9formation professionnelle; no doubt many a programmer has spent a few late nights trying yet another sorting idea that\u2019s going to be so much better than the others. So nobody raised an eyebrow when I wrote about sorting all the way back in 2002 (ever heard about \u201cfit pivot?\u201d  Of course you didn\u2019t). There was no intervention organized when I wrote  D\u2019s  std.sort, which  turned out to be sometimes quadratic (and has been thankfully fixed since). No scorn even when I wrote an academic  paper on the selection problem (sort\u2019s cousin) as an unaffiliated outsider, which even the conference organizers said was quite a trick. And no public outrage when I  spoke about sorting at CppCon 2019. Coders understand.\n So, I manage. You know what they say\u2014one day at a time. Yet I did feel a tinge of excitement when I saw the title of a recent paper:  \u201cBranch Mispredictions Don\u2019t Affect Mergesort.\u201d Such an intriguing title. To start with, are branch mispredictions expected to affect mergesort? I don\u2019t have much of an idea, mainly because everybody and their cat is using quicksort, not mergesort, so the latter hasn\u2019t really been at the center of my focus. But hey, I don\u2019t even need to worry about it because the title resolutely asserts that that problem I didn\u2019t know I was supposed to worry about, I don\u2019t need to worry about after all. So in a way the title cancels itself out. Yet I did read the paper (and recommend you do the same) and among many interesting insights, there was one that caught my attention: Lomuto\u2019s partitioning scheme was discussed as a serious contender (against the universally-used Hoare partition) from an efficiency perspective. Efficiency!\n   Let\u2019s first recap the two partitioning schemes. Given an array and a pivot element, to partition the array means to arrange elements of the array such that all elements smaller than or equal to the pivot are on the left, and elements greater than or equal to the pivot are on the right. The final position of the pivot would be at the border. (If there are several equivalent pivot values that final pivot position may vary, with important practical consequences; for this discussion, however, we can assume that all array values are distinct.)\n Lomuto\u2019s partitioning scheme walks the array left to right maintaining a \u201cread\u201d position and a \u201cwrite\u201d position, both initially at 0. For each element read, if the value seen by the \u201cread head\u201d is greater than the pivot, it gets skipped (with the read head moving to the next position). Otherwise, the value at the read head is swapped with that at the write head, and both heads advance by one position. When the read head is done, the position of the write head defines the partition. Refer to the nice animation below (from Wikipedia user Mastremo, used unmodified under  the CC-BY-SA 3.0 license).\n  The problem with Lomuto\u2019s partition is that it may do unnecessary swaps. Consider the extreme case of an array with only the leftmost element greater than the pivot. That element will be awkwardly moved to the right one position per iteration step, in a manner not unlike, um, bubblesort.\n Hoare\u2019s partitioning scheme elegantly solves that issue by iterating concomitantly from both ends of the array with two \u201cread/write heads\u201d. They skip elements that are already appropriately placed (less than the pivot on the left, greater than the pivot on the right), and swap only one smaller element from the left with one greater element from the right. When the two heads meet, the array is partitioned around the meet point. The extreme case described above is handled with a single swap. Most contemporary implementations of quicksort use Hoare partition, for obvious reasons: it does as many comparisons as the Lomuto partition and fewer swaps.\n Given that Hoare partition clearly does less work than Lomuto partition, the question would be why ever teach or use the latter at all. Alexander Stepanov, the creator of the STL, authored  a great discussion about partitioning and makes a genericity argument: Lomuto partition only needs forward iterators, whereas Hoare partition requires bidirectional iterators. That\u2019s a valuable insight, albeit of limited practical utility: yes, you could use Lomuto\u2019s partition on singly-linked lists, but most of the time you partition for quicksort\u2019s sake, and you don\u2019t want to quicksort singly-linked lists; mergesort would be the algorithm of choice.\n Yet a very practical\u2014and very surprising\u2014argument does exist, and is the punchline of this article: implemented in a branch-free manner, Lomuto partition is a lot faster than Hoare partition on random data. Given that quicksort spends most of its time partitioning, it follows that we are looking at a hefty improvement of quicksort (yes, I am talking about industrial strength implementations for C++ and D) by replacing its partitioning algorithm with one that literally does more work.\n   To see how the cookie crumbles, let\u2019s take a look at a careful implementation of Hoare partition. To eliminate all extraneous details, the code in this article is written for  long as the element type and uses raw pointers. It compiles and runs the same with a C++ or D compiler. This article will carry along implementations of all routines in both languages because much research literature measures algorithm performance using C++\u2019s  std::sort as an important baseline.\n /**\rPartition using the minimum of the first and last element as pivot.\rReturns: a pointer to the final position of the pivot.\r*/\rlong* hoare_partition(long* first, long* last) {\r assert(first &lt;= last);\r if (last - first &lt; 2)\r return first; // nothing interesting to do\r --last;\r if (*first &gt; *last)\r swap(*first, *last);\r auto pivot_pos = first;\r auto pivot = *pivot_pos;\r for (;;) {\r ++first;\r auto f = *first;\r while (f &lt; pivot)\r f = *++first;\r auto l = *last;\r while (pivot &lt; l)\r l = *--last;\r if (first &gt;= last)\r break;\r *first = l;\r *last = f;\r --last;\r }\r --first;\r swap(*first, *pivot_pos);\r return first;\r}\n (You may find the choice of pivot a bit odd, but not to worry: usually it\u2019s a more sophisticated scheme\u2014such as median-of-3\u2014but what\u2019s important to the core loop is that the pivot is not the largest element of the array. That allows the core loop to omit a number of limit conditions without running off array bounds.)\n There are a lot of good things to say about the efficiency of this implementation (which you\u2019re likely to find, with minor details changed, in implementations  of the C++ or  D standard library). You could tell the code above was written by people who live trim lives. People who keep their nails clean, show up when they say they\u2019ll show up, and call Mom regularly. They do a  wushu routine every morning and don\u2019t let computer cycles go to waste. That code has no slack in it. The generated Intel assembly is remarkably tight and virtually identical for C++ and D. It only varies across backends, with LLVM at a slight code size advantage (see  clang and  ldc) over gcc (see  g++ and  gdc).\n The initial implementation of Lomuto\u2019s partition shown below works well for exposition, but is sloppy from an efficiency perspective:\n /**\rChoose the pivot as the first element, then partition.\rReturns: a pointer to the final position of the pivot. \r*/\rlong* lomuto_partition_naive(long* first, long* last) {\r assert(first &lt;= last);\r if (last - first &lt; 2)\r return first; // nothing interesting to do\r auto pivot_pos = first;\r auto pivot = *first;\r ++first;\r for (auto read = first; read &lt; last; ++read) {\r if (*read &lt; pivot) {\r swap(*read, *first);\r ++first;\r }\r }\r --first;\r swap(*first, *pivot_pos);\r return first;\r}\n For starters, the code above will do a lot of silly no-op swaps (array element with itself) if a bunch of elements on the left of the array are greater than the pivot. All that time  first==write, so swapping  *first with  *write is unnecessary and wasteful. Let\u2019s fix that with a pre-processing loop that skips the uninteresting initial portion:\n /**\rPartition using the minimum of the first and last element as pivot. \rReturns: a pointer to the final position of the pivot.\r*/\rlong* lomuto_partition(long* first, long* last) {\r assert(first &lt;= last);\r if (last - first &lt; 2)\r return first; // nothing interesting to do\r --last;\r if (*first &gt; *last)\r swap(*first, *last);\r auto pivot_pos = first;\r auto pivot = *first;\r // Prelude: position first (the write head) on the first element\r // larger than the pivot.\r do {\r ++first;\r } while (*first &lt; pivot);\r assert(first &lt;= last);\r // Main course.\r for (auto read = first + 1; read &lt; last; ++read) {\r auto x = *read;\r if (x &lt; pivot) {\r *read = *first;\r *first = x;\r ++first;\r }\r }\r // Put the pivot where it belongs.\r assert(*first &gt;= pivot);\r --first;\r *pivot_pos = *first;\r *first = pivot;\r return first;\r}\n The function now chooses the pivot as the smallest of first and last element, just like  hoare_partition. I also made another small change\u2014instead of using the  swap routine, let\u2019s use explicit assignments. The optimizer takes care of that automatically (enregistering plus register allocation for the win), but expressing it in source helps us see the relatively expensive array reads and array writes. Now for the interesting part. Let\u2019s focus on the core loop:\n for (auto read = first + 1; read &lt; last; ++read) {\r auto x = *read;\r if (x &lt; pivot) {\r *read = *first;\r *first = x;\r ++first;\r }\r}\n Let\u2019s think statistics. There are two conditionals in this loop:  read &lt; last and  x &lt; pivot. How predictable are they? Well, the first one is eminently predictable\u2014you can reliably predict it will always be true, and you\u2019ll only be wrong once no matter how large the array is. Compiler writers and hardware designers know this, and design the fastest path under the assumption loops will continue. (Gift idea for your Intel engineer friend: a doormat that reads \u201cThe Backward Branch Is Always Taken.\u201d) The CPU will speculatively start executing the next iteration of the loop even before having decided whether the loop should continue. That work will be thrown away only once, at the end of the loop. That\u2019s the magic of speculative execution.\n Things are quite a bit less pleasant with the second test,  x &lt; pivot. If you assume random data and a randomly-chosen pivot, it could go either way with equal probability. That means speculative execution is not effective at all, which is very bad for efficiency. How bad? In a deeply pipelined architecture (as all are today), failed speculation means the work done by several pipeline stages needs to be thrown away, which in turn propagates a bubble of uselessness through the pipeline (think air bubbles in a garden hose). If these bubbles occur too frequently, the loop produces results at only a fraction of the attainable bandwidth. As the measurements section will show, that one wasted speculation takes away about 30% of the potential speed.\n How to improve on this problem? Here\u2019s an idea: instead of making decisions that control the flow of execution, we write the code in a straight-line manner and we incorporate the decisions as integers that guide the  data flow by means of carefully chosen array indexing. Be prepared\u2014this will force us to do silly things. For example, instead of doing two conditional writes per iteration, we\u2019ll do exactly two writes per iteration no matter what. If the writes were not needed, we\u2019ll overwrite words in memory with their own value. (Did I mention \u201csilly things\u201d?) To prepare the code for all that, let\u2019s rewrite it as follows:\n for (auto read = first + 1; read &lt; last; ++read) {\r auto x = *read;\r if (x &lt; pivot) {\r *read = *first;\r *first = x;\r first += 1; \r } else {\r *read = x;\r *first = *first;\r first += 0; \r }\r}\n Now the two branches of the loop are almost identical save for the data. The code is still correct (albeit odd) because on the  else branch it needlessly writes  *read over itself and  *first over itself. How do we now unify the two branches? Doing so in an efficient manner takes a bit of pondering and experimentation. Conditionally incrementing  first is easy because we can always write  first += x &lt; pivot. Piece of cake. The two memory writes are more difficult, but the basic idea is to take the difference between pointers and use indexing. Here\u2019s the code. Take a minute to think it over:\n for (; read &lt; last; ++read) {\r auto x = *read;\r auto smaller = -int(x &lt; pivot);\r auto delta = smaller &amp; (read - first);\r first[delta] = *first;\r read[-delta] = x;\r first -= smaller;\r}\n To paraphrase a famous Latin aphorism,  explanatio longa, codex brevis est. Short is the code, long is the \u2018splanation. The initialization of  smaller\u00a0with  -int(x &lt; pivot) looks odd but has a good reason:  smaller can serve as both an integral ( 0 or  -1) used with the usual arithmetic and also as a mask that is  0 or  0xFFFFFFFF (i.e. bits set all to 0 or all to 1) used with bitwise operations. We will use that mask to allow or obliterate another integral in the next line that computes\u00a0 delta. If  x &lt; pivot,\u00a0 smaller is all ones and  delta gets initialized to  read - first. Subsequently,  delta is used in  first[delta] and  read[-delta], which really are syntactic sugar for  *(first + delta) and  *(read - delta), respectively. If we substitute  delta in those expressions, we obtain  *(first + (read - first)) and  *(read - (read - first)), respectively.\n The last line,  first -= smaller, is trivial: if  x &lt; pivot, subtract  -1 from  first, which is the same as incrementing  first. Otherwise, subtract  0 from  first, effectively leaving  first alone. Nicely done.\n With  x &lt; pivot substituted to 1, the calculation done in the body of the loop becomes:\n auto x = *read;\rint smaller = -1;\rauto delta = -1 &amp; (read - first);\r*(first + (read - first)) = *first;\r*(read - (read - first)) = x;\rfirst -= -1;\n Kind of magically the two pointer expressions simplify down to  *read and  *first, so the two assignments effect a swap (recall that  x had been just initialized with  *read). Exactly what we did in the true branch of the test in the initial version!\n If  x &lt; pivot is  false,  delta gets initialized to zero and the loop body works as follows:\n auto x = *read;\rint smaller = 0;\rauto delta = 0 &amp; (read - first);\r*(first + 0) = *first;\r*(read - 0) = x;\rfirst -= 0;\n This time things are simpler:\u00a0 *first gets written over itself,  *read also gets written over itself, and  first is left alone. The code has no effect whatsoever, which is exactly what we wanted.\n  long* lomuto_partition_branchfree(long* first, long* last) {\r assert(first &lt;= last);\r if (last - first &lt; 2)\r return first; // nothing interesting to do\r --last;\r if (*first &gt; *last)\r swap(*first, *last);\r auto pivot_pos = first;\r auto pivot = *first;\r do {\r ++first;\r assert(first &lt;= last);\r } while (*first &lt; pivot);\r for (auto read = first + 1; read &lt; last; ++read) {\r auto x = *read;\r auto smaller = -int(x &lt; pivot);\r auto delta = smaller &amp; (read - first);\r first[delta] = *first;\r read[-delta] = x;\r first -= smaller;\r }\r assert(*first &gt;= pivot);\r --first;\r *pivot_pos = *first;\r *first = pivot;\r return first;\r}\n A beaut, isn\u2019t she? Even more beautiful is the generated code\u2014take a look at  clang/ ldc and  g++/ gdc. Again, there is a bit of variation across backends.\n   To draw a fair comparison between the two partitioning schemes, I\u2019ve put together a quicksort implementation. This is because most often a partition would be used during quicksort. For the sake of simplification, the test implementation omits a few details present in industrial quicksort implementations, which need to worry about a variety of data shapes (partially presorted ascending or descending, with local patterns, with many duplicates, etc). Library implementations choose the pivot carefully from a sample of usually 3-9 elements, possibly with randomization, and have means to detect and avoid  pathological inputs, most often by using  Introsort.\n In our benchmark, for simplicity, we only test against random data, and the choice of pivot is simply\n......", "posttime": "2020-05-19 15:43:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d1b\u7a46\u6258,lomuto,\u5206\u533a", "title": "\u6d1b\u7a46\u6258\u7684\u590d\u51fa", "title_en": "Lomuto's Comeback", "transed": 1, "url": "https://dlang.org/blog/2020/05/14/lomutos-comeback/", "via": "", "real_tags": ["\u6d1b\u7a46\u6258", "lomuto", "\u5206\u533a"]}]