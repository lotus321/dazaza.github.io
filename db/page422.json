[{"category": "", "categoryclass": "", "imagename": "e54030404192b574214a1df62b21ad13.png", "infoid": 1000470, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u4e0a\u7b2c\u4e00\u6b21\u91cd\u5927\u8ba1\u7b97\u673a\u75c5\u6bd2\u7206\u53d1\u7684\u5e55\u540e\u9ed1\u624b\u627f\u8ba4\u4e86\u81ea\u5df1\u7684\u7f6a\u884c\uff0c20\u5e74\u524d\uff0c\u4ed6\u7684\u8f6f\u4ef6\u611f\u67d3\u4e86\u5168\u7403\u6570\u767e\u4e07\u53f0\u673a\u5668\u3002\n\u73b0\u5e7444\u5c81\u7684\u83f2\u5f8b\u5bbe\u4eba\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Onel De Guzman)\u8868\u793a\uff0c\u4ed6\u91ca\u653e\u4e86\u7231\u866b\u7535\u8111\u8815\u866b\u75c5\u6bd2\u6765\u7a83\u53d6\u5bc6\u7801\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u514d\u8d39\u8bbf\u95ee\u4e92\u8054\u7f51\u3002\n\u6211\u6ca1\u60f3\u5230\u5b83\u4f1a\u4f20\u5230\u7f8e\u56fd\u548c\u6b27\u6d32\u3002\u6211\u5f88\u60ca\u8bb6\uff0c\u4ed6\u5728\u4e00\u672c\u5373\u5c06\u51fa\u7248\u7684\u5173\u4e8e\u7f51\u7edc\u72af\u7f6a\u7684\u4e66\u201c\u72af\u7f6a\u70b9\u901a\u8baf\u201d\u7684\u91c7\u8bbf\u4e2d\u8bf4\u3002\n\u53d7\u5bb3\u8005\u6536\u5230\u4e86\u4e00\u5c01\u540d\u4e3a\u201c\u7ed9\u4f60\u7684\u60c5\u4e66\u201d\u7684\u7535\u5b50\u90ae\u4ef6\u9644\u4ef6\u3002\u5b83\u5305\u542b\u6076\u610f\u4ee3\u7801\uff0c\u53ef\u4ee5\u8986\u76d6\u6587\u4ef6\u3001\u7a83\u53d6\u5bc6\u7801\uff0c\u5e76\u81ea\u52a8\u5411\u53d7\u5bb3\u8005\u7684Microsoft Outlook\u5730\u5740\u7c3f\u4e2d\u7684\u6240\u6709\u8054\u7cfb\u4eba\u53d1\u9001\u81ea\u8eab\u7684\u526f\u672c\u3002\n\u572824\u5c0f\u65f6\u5185\uff0c\u5b83\u5728\u5168\u7403\u8303\u56f4\u5185\u9020\u6210\u4e86\u91cd\u5927\u95ee\u9898\uff0c\u636e\u62a5\u9053\u611f\u67d3\u4e864500\u4e07\u53f0\u673a\u5668\u3002\u5b83\u8fd8\u4f7f\u7ec4\u7ec7\u7684\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\u4e0d\u582a\u91cd\u8d1f\uff0c\u4e00\u4e9bIT\u7ecf\u7406\u65ad\u5f00\u4e86\u90e8\u5206\u57fa\u7840\u8bbe\u65bd\u7684\u8fde\u63a5\uff0c\u4ee5\u9632\u6b62\u611f\u67d3\u3002\n\u5728\u82f1\u56fd\uff0c\u8bae\u4f1a\u5173\u95ed\u7535\u5b50\u90ae\u4ef6\u7f51\u7edc\u51e0\u4e2a\u5c0f\u65f6\u4ee5\u4fdd\u62a4\u81ea\u5df1\uff0c\u636e\u62a5\u9053\uff0c\u5c31\u8fde\u4e94\u89d2\u5927\u697c\u4e5f\u53d7\u5230\u4e86\u5f71\u54cd\u3002\n\u524d\u4e00\u5e74\uff0c\u6885\u4e3d\u838e\u6f0f\u6d1e\u636e\u4fe1\u5df2\u7ecf\u4f7f\u7528\u7c7b\u4f3c\u7684\u7b56\u7565\u611f\u67d3\u4e86100\u4e07\u53f0\u673a\u5668\u3002\u7136\u800c\uff0c\u7231\u866b\u4f7f\u4e4b\u524d\u7684\u75ab\u60c5\u76f8\u5f62\u89c1\u7ecc\uff0c\u66b4\u9732\u4e86\u4e16\u754c\u65e5\u76ca\u589e\u957f\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u662f\u591a\u4e48\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3002\n\u8c03\u67e5\u4eba\u5458\u5c06\u75c5\u6bd2\u8ffd\u8e2a\u5230\u4e00\u4e2a\u6ce8\u518c\u5728\u83f2\u5f8b\u5bbe\u9996\u90fd\u9a6c\u5c3c\u62c9\u4e00\u5957\u516c\u5bd3\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\n\u5c45\u4f4f\u8005\u7684\u5f1f\u5f1f\u662f\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc\uff0c\u4ed6\u662f\u8be5\u5e02AMA\u8ba1\u7b97\u673a\u5b66\u9662\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\u7684\u5b66\u751f\u3002\u4ed6\u662f\u4e00\u4e2a\u540d\u4e3aGrammersoft\u7684\u5730\u4e0b\u9ed1\u5ba2\u7ec4\u7ec7\u7684\u6210\u5458\uff0c\u5e76\u5f88\u5feb\u6210\u4e3a\u8b66\u65b9\u8c03\u67e5\u7684\u5934\u53f7\u5acc\u7591\u4eba\u3002\n\u5fb7\u53e4\u5179\u66fc\u7684\u5f8b\u5e08\u57285\u670811\u65e5\u7ec4\u7ec7\u4e86\u4e00\u573a\u65b0\u95fb\u53d1\u5e03\u4f1a\uff0c\u4f1a\u4e0a\u5fb7\u53e4\u5179\u66fc\u4f3c\u4e4e\u51e0\u4e4e\u4e0d\u4f1a\u8bf4\u82f1\u8bed\u3002\n\u5f53\u88ab\u95ee\u53ca\u4ed6\u662f\u5426\u53ef\u80fd\u4e0d\u5c0f\u5fc3\u91ca\u653e\u4e86\u75c5\u6bd2\u65f6\uff0c\u5fb7\u53e4\u5179\u66fc\u8bf4\uff1a&#34\uff1b\u6709\u53ef\u80fd\u3002&#34\uff1b\n\u5f53\u65f6\uff0c\u83f2\u5f8b\u5bbe\u6ca1\u6709\u6db5\u76d6\u7535\u8111\u9ed1\u5ba2\u7684\u6cd5\u5f8b\uff0c\u5fb7\u53e4\u5179\u66fc\u548c\u5176\u4ed6\u4efb\u4f55\u4eba\u90fd\u6ca1\u6709\u88ab\u8d77\u8bc9\u3002\n\u5fb7\u53e4\u5179\u66fc\u7684\u540c\u5b66\u8fc8\u514b\u5c14\u00b7\u5e03\u6069(Michael Buen)\u4e5f\u53d7\u5230\u4e86\u6000\u7591\uff0c\u4ed6\u5728\u7f51\u4e0a\u88ab\u79f0\u4e3a\u201c\u7231\u866b\u201d(The Love Bug)\u7684\u5408\u8457\u8005\u3002\n\u6211\u5f00\u59cb\u8ffd\u67e5\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc\uff0c\u89e3\u5f00\u7231\u866b20\u5e74\u6765\u7684\u8d77\u6e90\u4e4b\u8c1c\u3002\n\u7f51\u4e0a\u6709\u4f20\u8a00\u79f0\uff0c\u5fb7\u53e4\u5179\u66fc\u5df2\u7ecf\u642c\u5230\u4e86\u5fb7\u56fd\u3001\u5965\u5730\u5229\u6216\u7f8e\u56fd\u3002\u4e00\u4e9b\u4eba\u58f0\u79f0\uff0c\u4ed6\u662f\u5728\u75ab\u60c5\u7206\u53d1\u540e\u88ab\u5fae\u8f6f\u62db\u52df\u7684\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u504f\u79bb\u4e86\u76ee\u6807\u3002\n\u5728\u4e00\u4e2a\u4e13\u95e8\u8ba8\u8bba\u83f2\u5f8b\u5bbe\u9ed1\u793e\u4f1a\u7684\u8bba\u575b\u4e0a\uff0c\u4e00\u540d\u7528\u6237\u57282016\u5e74\u58f0\u79f0\uff0c\u5fb7\u53e4\u5179\u66fc\u5728\u9a6c\u5c3c\u62c9\u7684\u57fa\u4e9a\u6ce2\u533a\u7ecf\u8425\u7740\u4e00\u5bb6\u624b\u673a\u7ef4\u4fee\u5e97\u30022019\u5e744\u6708\uff0c\u6211\u524d\u5f80\u8be5\u5730\u533a\uff0c\u5e0c\u671b\u80fd\u89c1\u5230\u5acc\u7591\u4eba\uff0c\u4e0d\u6599\u53d1\u73b0\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u5e02\u573a\uff0c\u91cc\u9762\u6709\u6570\u5341\u5bb6\u624b\u673a\u4fee\u7406\u5e97\u3002\n\u6211\u628a\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc\u7684\u540d\u5b57\u5199\u5728\u4e00\u5f20\u7eb8\u4e0a\uff0c\u968f\u673a\u62ff\u7ed9\u5546\u5e97\u5de5\u4eba\u770b\uff0c\u5e0c\u671b\u6709\u4eba\u80fd\u8ba4\u51fa\u5b83\u3002\u6700\u540e\uff0c\u4e00\u540d\u5458\u5de5\u8bf4\uff0c\u4ed6\u77e5\u9053\u5fb7\u53e4\u5179\u66fc\uff0c\u5e76\u76f8\u4fe1\u4ed6\u73b0\u5728\u9a6c\u5c3c\u62c9\u5176\u4ed6\u5730\u65b9\u4e00\u5bb6\u8d2d\u7269\u4e2d\u5fc3\u7684\u53e6\u4e00\u4e2a\u7535\u8bdd\u7ef4\u4fee\u4ead\u5de5\u4f5c\u3002\n\u5728\u5546\u573a\u91cc\u95f2\u901b\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u7ed9\u6211\u770b\u4e86\u5fb7\u00b7\u53e4\u5179\u66fc\u7684\u540d\u5b57\uff0c\u6211\u88ab\u5e26\u5230\u4e86\u5927\u697c\u6700\u540e\u9762\u4e00\u4e2a\u72ed\u5c0f\u3001\u51cc\u4e71\u7684\u644a\u4f4d\uff0c\u7b49\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Onel De Guzman)\u6765\u5230\u4e86\u3002\n\u4ed6\u627f\u8ba4\u521b\u9020\u4e86Love Bug\uff0c\u4ed6\u8bf4\u8fd9\u662f\u4ed6\u4e3a\u4e86\u7a83\u53d6\u4e92\u8054\u7f51\u8bbf\u95ee\u5bc6\u7801\u800c\u7f16\u7801\u7684\u65e9\u671f\u75c5\u6bd2\u7684\u6539\u826f\u7248\u3002\n\u5728\u62e8\u53f7\u4e0a\u7f51\u7684\u65f6\u4ee3\uff0c\u4e0a\u7f51\u9700\u8981\u8fd9\u6837\u7684\u5bc6\u7801\uff0c\u5fb7\u53e4\u5179\u66fc\u8bf4\u4ed6\u4ed8\u4e0d\u8d77\u8fd9\u6837\u7684\u5bc6\u7801\u3002\n\u4ed6\u58f0\u79f0\uff0c\u4ed6\u6700\u521d\u53ea\u5c06\u75c5\u6bd2\u53d1\u9001\u7ed9\u83f2\u5f8b\u5bbe\u53d7\u5bb3\u8005\uff0c\u5e76\u5728\u804a\u5929\u5ba4\u4e0e\u4ed6\u4eec\u4ea4\u6d41\uff0c\u56e0\u4e3a\u4ed6\u53ea\u60f3\u7a83\u53d6\u5728\u5f53\u5730\u6709\u6548\u7684\u4e92\u8054\u7f51\u8bbf\u95ee\u5bc6\u7801\u3002\n\u7136\u800c\uff0c\u57282000\u5e74\u6625\u5929\uff0c\u4ed6\u8c03\u6574\u4e86\u4ee3\u7801\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u81ea\u52a8\u4f20\u64ad\u529f\u80fd\uff0c\u5229\u7528\u5fae\u8f6fWindows95\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u5c06\u75c5\u6bd2\u526f\u672c\u53d1\u9001\u7ed9\u53d7\u5bb3\u8005\u7684Outlook\u8054\u7cfb\u4eba\u3002\u4ed6\u8fd8\u4e3a\u7535\u5b50\u90ae\u4ef6\u9644\u4ef6\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u5168\u7403\u5438\u5f15\u529b\u7684\u6807\u9898\uff0c\u5438\u5f15\u4e86\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u6253\u5f00\u5b83\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u53d1\u73b0\u5f88\u591a\u4eba\u90fd\u60f3\u8981\u4e00\u4e2a\u7537\u670b\u53cb\uff0c\u4ed6\u4eec\u60f3\u8981\u5f7c\u6b64\uff0c\u4ed6\u4eec\u60f3\u8981\u7231\u60c5\uff0c\u6240\u4ee5\u6211\u5c31\u8fd9\u4e48\u53eb\u5b83\u3002\u201d\n\u5fb7\u53e4\u5179\u66fc\u58f0\u79f0\uff0c\u4ed6\u6700\u521d\u628a\u75c5\u6bd2\u4f20\u67d3\u7ed9\u4e86\u65b0\u52a0\u5761\u7684\u67d0\u4e2a\u4eba\uff0c\u7136\u540e\u548c\u4e00\u4f4d\u670b\u53cb\u51fa\u53bb\u559d\u9152\u3002\u4ed6\u7b2c\u4e00\u6b21\u77e5\u9053\u81ea\u5df1\u5f15\u53d1\u7684\u5168\u7403\u6df7\u4e71\u662f\u5728\u4ed6\u6bcd\u4eb2\u544a\u8bc9\u4ed6\u8b66\u65b9\u6b63\u5728\u9a6c\u5c3c\u62c9\u8ffd\u6355\u4e00\u540d\u9ed1\u5ba2\u65f6\u3002\n\u4ed6\u89e3\u91ca\u8bf4\uff0c\u4ed6\u6bcd\u4eb2\u628a\u4ed6\u7684\u7535\u8111\u8bbe\u5907\u85cf\u4e86\u8d77\u6765\u3002\u5fb7\u53e4\u5179\u66fc\u575a\u79f0\u5e03\u6069\u4e0e\u7231\u866b\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u4ed6\u662f\u552f\u4e00\u7684\u521b\u9020\u8005\u3002\n\u5728\u4f4e\u8c03\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5fb7\u00b7\u53e4\u5179\u66fc\u91cd\u8fd4\u8ba1\u7b97\u673a\u5de5\u4f5c\uff0c\u4f46\u6ca1\u6709\u56de\u5230\u5927\u5b66\u3002\u4ed6\u73b0\u5728\u548c\u53e6\u4e00\u540d\u5458\u5de5\u4e00\u8d77\u7ecf\u8425\u8fd9\u4e2a\u5c0f\u644a\u4f4d\u3002", "note_en": "The man behind the world&#39;s first major computer virus outbreak has admitted his guilt, 20 years after his software infected millions of machines worldwide.\n Filipino Onel de Guzman, now 44, says he unleashed the Love Bug computer worm to steal passwords so he could access the internet without paying.\n   &#34;I didn&#39;t expect it would get to the US and Europe. I was surprised,&#34; he said in an interview for Crime Dot Com, a forthcoming book on cyber-crime.\n   Victims received an email attachment entitled LOVE-LETTER-FOR-YOU. It contained malicious code that would overwrite files, steal passwords, and automatically send copies of itself to all contacts in the victim&#39;s Microsoft Outlook address book.\n Within 24 hours, it was causing major problems across the globe, reportedly infecting 45 million machines. It also overwhelmed organisations&#39; email systems, and some IT managers disconnected parts of their infrastructure to prevent infection.\n  In the UK, Parliament shut down its email network for several hours to protect itself, and even the Pentagon was reportedly affected.\n The previous year, the Melissa bug is believed to have infected a million machines using similar tactics. However, Love Bug dwarfed previous outbreaks and exposed how vulnerable the world&#39;s increasing internet connectivity was to attack.\n Investigators traced the virus to an email address registered to an apartment in Manila, capital of the Philippines.\n The occupant&#39;s brother was Onel de Guzman, a computer science student at the city&#39;s AMA Computer College. He was a member of an underground hacking group called Grammersoft and quickly became the lead suspect in a police investigation.\n De Guzman&#39;s lawyer organised a press conference on 11 May, at which de Guzman appeared to speak little English.\n When asked whether he may have released the virus accidentally, de Guzman said: &#34;It is possible.&#34;\n  At the time, the Philippines had no law covering computer hacking, and neither de Guzman nor anyone else was ever prosecuted.\n Suspicion also fell on de Guzman&#39;s fellow student Michael Buen, who has been cited online as the co-author of the Love Bug.\n I set out to track down Onel de Guzman and resolve the 20-year mystery of Love Bug&#39;s origin.\n Online rumours claimed de Guzman had moved to Germany, Austria or the US. Some claimed he had been recruited by Microsoft following the outbreak. All proved to be wide of the mark.\n On a forum dedicated to the Philippine underworld, a user claimed in 2016 that de Guzman ran a mobile phone repair shop in the Quiapo district of Manila. In April 2019, I visited the area hoping to encounter the suspect, only to find a sprawling market containing dozens of mobile phone repair shops.\n I wrote Onel de Guzman&#39;s name on a piece of paper and showed it to shop workers at random in the hope that someone would recognise it. Finally an employee said he knew of de Guzman and believed he now worked in another phone repair booth at a shopping mall elsewhere in Manila.\n After several hours wandering around the mall and showing de Guzman&#39;s name, I was directed to a cramped, messy stall at the very back of the building, and after waiting several hours for him to turn up, Onel de Guzman arrived.\n He admitted having created Love Bug, which he said was a revamped version of an earlier virus he had coded in order to steal internet access passwords.\n In the era of dial-up internet, such passwords were needed to get online, and de Guzman says he could not afford to pay for one.\n He claims he initially sent the virus only to Philippine victims, with whom he communicated in chat rooms, because he only wanted to steal internet access passwords that worked in his local area.\n However, in spring 2000 he tweaked the code, adding an auto-spreading feature that would send copies of the virus to victims&#39; Outlook contacts, using a flaw in Microsoft&#39;s Windows 95 operating system. He also created a title for the email attachment that would have global appeal, tempting people across the world to open it.\n &#34;I figured out that many people want a boyfriend, they want each other, they want love, so I called it that,&#34; he said.\n  De Guzman claims he sent the virus initially to someone in Singapore, and then went out drinking with a friend. The first he knew of the global chaos he had unleashed was when his mother told him police were hunting a hacker in Manila.\n He explained that his mother hid his computer equipment. De Guzman insists Buen had nothing to do with Love Bug and that he was its sole creator.\n After a period of lying low, de Guzman returned to computer work but did not go back to college. He now runs the small booth with another member of staff.", "posttime": "2020-05-03 18:12:46", "tags": "\u521b\u9020\u8005,bug,\u75c5\u6bd2,computer", "title": "\u7231\u866b\u7684\u521b\u9020\u8005\u88ab\u8ffd\u8e2a\u5230\u9a6c\u5c3c\u62c9\u7684\u7ef4\u4fee\u5e97", "title_en": "Love Bug's creator tracked down to repair shop in Manila", "transed": 1, "url": "https://www.bbc.com/news/technology-52458765", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u521b\u9020\u8005", "bug", "\u75c5\u6bd2", "computer"]}, {"category": "", "categoryclass": "", "imagename": "63ed6ae600ba8ae7edbec08bd0efeb97.png", "infoid": 1000469, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ea7\u54c1\u730e\u4eba\u7535\u53f0\u7cbe\u5f69\u7684\u4e00\u96c6\uff0c\u4e54\u4ec0\u00b7\u8c6a\u6c83\u65af\u521b\u5efa\u4e86\u7206\u70b8\u6027\u8bdd\u9898\uff0c\u8fd9\u662f\u4e00\u6b3e\u53ef\u4ee5\u8ba9\u4f60\u627e\u5230\u70ed\u95e8\u8bdd\u9898\u6765\u56f4\u7ed5\u5176\u6253\u9020\u4ea7\u54c1\u6216\u5185\u5bb9\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e2a\u6545\u4e8b\u6709\u4e00\u4e2a\u719f\u6089\u7684\u7ed3\u6784\u3002\u5236\u9020\u4ea7\u54c1\u53ea\u662f\u4e3a\u4e86\u8d5a\u94b1\uff0c\u5fd8\u8bb0\u4e86\u8003\u8651\u8425\u9500\uff0c\u83b7\u5f97\u4e86\u4e00\u4e9b\u5ba2\u6237\u5374\u78b0\u58c1\u4e86\uff0c\u5931\u53bb\u4e86\u5174\u8da3\uff0c\u521b\u9020\u4e86\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\u6765\u89e3\u51b3\u81ea\u5df1\u7684\u95ee\u9898\uff0c\u5176\u4ed6\u4eba\u4e5f\u559c\u6b22\u5b83\uff0c\u4e5f\u60f3\u8981\u5b83\uff0c\u6210\u957f\uff0c\u88ab\u6536\u8d2d\u3002", "note_en": "Great episode from Product Hunt Radio with Josh Howarth who founded Exploding Topics, an app that lets you find trending topics to build products or content around. This story has a familiar structure... builds product just to make money, forgets to think about marketing, gets some customers but hits a wall and loses interest, builds something new to solve own problem, other people like it and want it too, grows, gets acquired.", "posttime": "2020-05-03 18:12:35", "tags": "\u64ad\u5ba2,entrepreneurs,\u4ea7\u54c1,topics", "title": "\u4f01\u4e1a\u5bb6\u64ad\u5ba2-\u5267\u96c6\u76ee\u5f55", "title_en": "Podcasts for Entrepreneurs \u2013 Episode Directory", "transed": 1, "url": "https://podboxer.com/explore-episodes", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u64ad\u5ba2", "\u4ea7\u54c1", "topics"]}, {"category": "", "categoryclass": "", "imagename": "659e9daa7b785687fdfb264fccd82cbc.jpg", "infoid": 1000468, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "VT-x\u662f\u82f1\u7279\u5c14CPU\u865a\u62df\u5316\u6280\u672f\u7684\u540d\u79f0\u3002KVM\u662f\u4f7f\u7528VT-x\u7684Linux\u5185\u6838\u7684\u7ec4\u6210\u90e8\u5206\u3002QEMU\u662f\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u865a\u62df\u673a\u3002QEMU\u5229\u7528KVM\u5b9e\u73b0\u9ad8\u6548\u7684\u865a\u62df\u5316\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u8fd9\u4e09\u79cd\u6280\u672f\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u3002\u4e0d\u8981\u671f\u671b\u5728\u8fd9\u91cc\u5bf9\u6240\u6709\u65b9\u9762\u90fd\u8fdb\u884c\u6df1\u5165\u7684\u9610\u8ff0\uff0c\u5c3d\u7ba1\u5728\u672a\u6765\uff0c\u6211\u53ef\u80fd\u4f1a\u5728\u540e\u9762\u53d1\u5e03\u4e00\u4e9b\u5173\u4e8e\u67d0\u4e9b\u7279\u5b9a\u90e8\u5206\u7684\u66f4\u6709\u9488\u5bf9\u6027\u7684\u5e16\u5b50\u3002\n\u5728\u8fdb\u5165\u4e3b\u8981\u8ba8\u8bba\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u8c08\u8c08\u4e00\u4e9b\u7406\u8bba\u3002\u4e0e\u865a\u62df\u5316\u76f8\u5173\u7684\u662f\u4eff\u771f\u6982\u5ff5-\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u4f2a\u9020\u786c\u4ef6\u3002\u5f53\u60a8\u4f7f\u7528QEMU\u6216VMWare\u521b\u5efa\u5177\u6709ARM\u5904\u7406\u5668\u7684\u865a\u62df\u673a\uff0c\u4f46\u60a8\u7684\u4e3b\u673a\u5177\u6709x86\u5904\u7406\u5668\u65f6\uff0cQEMU\u6216VMWare\u5c06\u6a21\u62df\u6216\u4f2a\u9020ARM\u5904\u7406\u5668\u3002\u5f53\u6211\u4eec\u8c08\u8bba\u865a\u62df\u5316\u65f6\uff0c\u6211\u4eec\u6307\u7684\u662f\u5176\u4e2dVM\u7684\u5904\u7406\u5668\u4e0e\u4e3b\u8ba1\u7b97\u673a\u7684\u5904\u7406\u5668\u76f8\u5339\u914d\u7684\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316\u3002\u7ecf\u5e38\u4e0e\u2026\u2026\u6df7\u4e3a\u4e00\u8c08\u3002\n\u6700\u5e95\u5c42\u662f\u652f\u6301\u865a\u62df\u5316\u7684\u786c\u4ef6\u3002\u5176\u4e0a\u65b9\u662f\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u6216\u865a\u62df\u673a\u76d1\u89c6\u5668(VMM)\u3002\u5bf9\u4e8eKVM\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u52a0\u8f7d\u4e86KVM\u6a21\u5757\u7684Linux\u5185\u6838\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cKVM\u662f\u4e00\u7ec4\u5185\u6838\u6a21\u5757\uff0c\u5f53\u52a0\u8f7d\u5230Linux\u5185\u6838\u4e2d\u65f6\uff0c\u5b83\u4eec\u4f1a\u5c06\u5185\u6838\u8f6c\u53d8\u4e3a\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u3002\u5728\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u4e0a\u65b9\u548c\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u4f4d\u4e8e\u6700\u7ec8\u7528\u6237\u76f4\u63a5\u4ea4\u4e92\u7684\u865a\u62df\u5316\u5e94\u7528\u7a0b\u5e8f-QEMU\u3001VMWare\u7b49\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7136\u540e\u521b\u5efa\u865a\u62df\u673a\uff0c\u8fd9\u4e9b\u865a\u62df\u673a.\u3002\n\u6700\u540e\uff0c\u5b58\u5728\u201c\u5b8c\u5168\u201d\u548c\u201c\u90e8\u5206\u201d\u865a\u62df\u5316\u7684\u4e8c\u5206\u6cd5\u3002\u5b8c\u5168\u865a\u62df\u5316\u662f\u6307\u5728\u865a\u62df\u673a\u5185\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u5728\u771f\u5b9e\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u5168\u76f8\u540c\u3002\u534a\u865a\u62df\u5316\u662f\u6307VM\u5185\u7684\u64cd\u4f5c\u7cfb\u7edf\u610f\u8bc6\u5230\u5b83\u6b63\u5728\u88ab\u865a\u62df\u5316\uff0c\u56e0\u6b64\u8fd0\u884c\u65b9\u5f0f\u6bd4\u5728\u771f\u5b9e\u786c\u4ef6\u4e0a\u7a0d\u6709\u4fee\u6539\u3002\nVT-x\u662f\u9488\u5bf9Intel 64\u548cIA-32\u4f53\u7cfb\u7ed3\u6784\u7684CPU\u865a\u62df\u5316\u3002\u82f1\u7279\u5c14\u7684\u5b89\u817e\u6709VT-I\u3002\u5bf9\u4e8eI/O\u865a\u62df\u5316\uff0c\u6709VT-d\u3002AMD\u8fd8\u62e5\u6709\u540d\u4e3aAMD-V\u7684\u865a\u62df\u5316\u6280\u672f\u3002\u6211\u4eec\u53ea\u5173\u5fc3VT-x\u3002\n\u5728VT-x\u4e0b\uff0cCPU\u4ee5\u4e24\u79cd\u6a21\u5f0f\u4e4b\u4e00\u8fd0\u884c\uff1a\u6839\u6a21\u5f0f\u548c\u975e\u6839\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4e0e\u5b9e\u6570\u3001\u4fdd\u62a4\u3001\u957f\u6574\u578b\u7b49\u6b63\u4ea4\uff0c\u4e5f\u4e0e\u7279\u6743\u73af(0-3)\u6b63\u4ea4\u3002\u53ef\u4ee5\u8bf4\uff0c\u5b83\u4eec\u7ec4\u6210\u4e86\u4e00\u67b6\u65b0\u7684\u201c\u98de\u673a\u201d\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5728\u6839\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u800c\u865a\u62df\u673a\u5728\u975e\u6839\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\u5728\u975e\u6839\u6a21\u5f0f\u4e0b\uff0cCPU\u53d7\u9650\u4ee3\u7801\u7684\u6267\u884c\u65b9\u5f0f\u5927\u591a\u4e0e\u5728\u6839\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\u76f8\u540c\uff0c\u8fd9\u610f\u5473\u7740VM\u7684CPU\u53d7\u9650\u64cd\u4f5c\u4e3b\u8981\u4ee5\u672c\u673a\u901f\u5ea6\u8fd0\u884c\u3002\u7136\u800c\uff0c\u5b83\u5e76\u4e0d\u62e5\u6709\u5b8c\u5168\u7684\u81ea\u7531\u3002\n\u7279\u6743\u6307\u4ee4\u6784\u6210CPU\u4e0a\u6240\u6709\u53ef\u7528\u6307\u4ee4\u7684\u5b50\u96c6\u3002\u8fd9\u4e9b\u6307\u4ee4\u4ec5\u5728CPU\u5904\u4e8e\u8f83\u9ad8\u7279\u6743\u72b6\u6001\u65f6\u624d\u80fd\u6267\u884c\uff0c\u4f8b\u5982\u5f53\u524d\u7279\u6743\u7ea7\u522b(CPL)0(\u5176\u4e2dCPL 3\u662f\u6700\u4f4e\u7279\u6743)\u3002\u8fd9\u4e9b\u7279\u6743\u6307\u4ee4\u7684\u4e00\u4e2a\u5b50\u96c6\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u5168\u5c40\u72b6\u6001\u6539\u53d8\u201d\u6307\u4ee4--\u90a3\u4e9b\u5f71\u54cdCPU\u6574\u4f53\u72b6\u6001\u7684\u6307\u4ee4\u3002\u4f8b\u5982\uff0c\u90a3\u4e9b\u4fee\u6539\u65f6\u949f\u6216\u4e2d\u65ad\u5bc4\u5b58\u5668\u6216\u5199\u5165\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u2026\u2026\u3002\n\u865a\u62df\u673a\u6269\u5c55(VMx)\u662f\u4e3a\u4fc3\u8fdbVT-x\u800c\u6dfb\u52a0\u7684\u6307\u4ee4\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5176\u4e2d\u7684\u4e00\u4e9b\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3VT-x\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\nVMXON\uff1a\u5728\u6267\u884c\u6b64\u6307\u4ee4\u4e4b\u524d\uff0c\u6ca1\u6709\u6839\u6a21\u5f0f\u4e0e\u975e\u6839\u6a21\u5f0f\u7684\u6982\u5ff5\u3002CPU\u7684\u8fd0\u884c\u65b9\u5f0f\u5c31\u50cf\u6ca1\u6709\u865a\u62df\u5316\u4e00\u6837\u3002\u5fc5\u987b\u6267\u884cVMXON\u624d\u80fd\u8fdb\u5165\u865a\u62df\u5316\u3002\u7d27\u63a5VMXON\u4e4b\u540e\uff0cCPU\u5904\u4e8e\u6839\u6a21\u5f0f\u3002\nVMLAuncH\uff1a\u521b\u5efaVM\u7684\u5b9e\u4f8b\u5e76\u8fdb\u5165\u975e\u6839\u6a21\u5f0f\u3002\u6211\u4eec\u5c06\u5728\u7a0d\u540e\u4ecb\u7ecdVMCS\u65f6\u89e3\u91ca\u6211\u4eec\u6240\u8bf4\u7684\u201cVM\u5b9e\u4f8b\u201d\u662f\u4ec0\u4e48\u610f\u601d\u3002\u73b0\u5728\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5728QEMU\u6216VMWare\u4e2d\u521b\u5efa\u7684\u7279\u5b9aVM\u3002\n\u5f53VM\u5c1d\u8bd5\u6267\u884c\u5728\u975e\u6839\u6a21\u5f0f\u4e0b\u88ab\u7981\u6b62\u7684\u6307\u4ee4\u65f6\uff0cCPU\u4f1a\u7acb\u5373\u4ee5\u7c7b\u4f3c\u9677\u9631\u7684\u65b9\u5f0f\u5207\u6362\u5230\u6839\u6a21\u5f0f\u3002\u8fd9\u79f0\u4e3aVM\u9000\u51fa\u3002\n\u8ba9\u6211\u4eec\u628a\u4e0a\u9762\u7684\u4fe1\u606f\u7efc\u5408\u8d77\u6765\u3002CPU\u5728\u6b63\u5e38\u6a21\u5f0f\u4e0b\u542f\u52a8\uff0c\u6267\u884cVMXON\u4ee5\u6839\u6a21\u5f0f\u542f\u52a8\u865a\u62df\u5316\uff0c\u6267\u884cVMLAuncH\u4ee5\u521b\u5efa\u5e76\u8fdb\u5165VM\u5b9e\u4f8b\u7684\u975e\u6839\u6a21\u5f0f\uff0cVM\u5b9e\u4f8b\u8fd0\u884c\u5176\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u5c31\u50cf\u5728\u672c\u5730\u8fd0\u884c\u4e00\u6837\uff0c\u76f4\u5230\u5b83\u5c1d\u8bd5\u67d0\u4e9b\u88ab\u7981\u6b62\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u5bfc\u81f4VM\u9000\u51fa\u5e76\u5207\u6362\u5230\u6839\u6a21\u5f0f\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u5728\u6839\u6a21\u5f0f\u4e0b\u8fd0\u884c\u7684\u8f6f\u4ef6\u662f\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u91c7\u53d6\u884c\u52a8\u5904\u7406VM\u9000\u51fa\u7684\u539f\u56e0\uff0c\u7136\u540e\u6267\u884cVMRESUME.\u3002\n\u5f53\u7136\uff0c\u4e0a\u9762\u7684\u63cf\u8ff0\u7559\u4e0b\u4e86\u4e00\u4e9b\u7a7a\u767d\u3002\u4f8b\u5982\uff0c\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5982\u4f55\u77e5\u9053\u53d1\u751fVM\u9000\u51fa\u7684\u539f\u56e0\uff1f\u4e00\u4e2aVM\u5b9e\u4f8b\u4e0e\u53e6\u4e00\u4e2aVM\u5b9e\u4f8b\u6709\u4ec0\u4e48\u4e0d\u540c\u4e4b\u5904\uff1f\u8fd9\u5c31\u662fVMCS\u7684\u7528\u6b66\u4e4b\u5730\u3002VMCS\u4ee3\u8868\u865a\u62df\u673a\u63a7\u5236\u7ed3\u6784\u3002\u5b83\u57fa\u672c\u4e0a\u662f\u7269\u7406\u5185\u5b58\u76844KiB\u90e8\u5206\uff0c\u5176\u4e2d\u5305\u542b\u4e0a\u8ff0\u8fdb\u7a0b\u5de5\u4f5c\u6240\u9700\u7684\u4fe1\u606f\u3002\u6b64\u4fe1\u606f\u5305\u62ecVM\u9000\u51fa\u7684\u539f\u56e0\u4ee5\u53ca\u6bcf\u4e2aVM\u5b9e\u4f8b\u7684\u552f\u4e00\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5728CPU\u5904\u4e8e\u975e\u6839\u6a21\u5f0f\u65f6.\u3002\n\u6b63\u5982\u60a8\u53ef\u80fd\u77e5\u9053\u7684\uff0c\u5728QEMU\u6216VMWare\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u51b3\u5b9a\u7279\u5b9a\u865a\u62df\u673a\u5c06\u62e5\u6709\u591a\u5c11\u4e2aCPU\u3002\u6bcf\u4e2a\u8fd9\u6837\u7684CPU\u90fd\u79f0\u4e3a\u865a\u62dfCPU\u6216VCP", "note_en": "VT-x is name of CPU virtualisation technology by Intel. KVM is component of Linux kernel which makes use of VT-x. And QEMU is a user-space application which allows users to create virtual machines. QEMU makes use of KVM to achieve efficient virtualisation. In this article we will talk about how these three technologies work together. Don\u2019t expect an in-depth exposition about all aspects here, although in future, I might follow this up with more focused posts about some specific parts.\n  Let\u2019s first touch upon some theory before going into main discussion. Related to virtualisation is concept of  emulation \u2013\u00a0in simple words, faking the hardware. When you use QEMU or VMWare to create a virtual machine that has ARM processor, but your host machine has an x86 processor, then QEMU or VMWare would emulate or fake ARM processor. When we talk about virtualisation we mean hardware assisted virtualisation where the VM \u2019s processor matches host computer \u2019s processor. Often conflated with  ...\n    At the lowest level is hardware which supports virtualisation. Above it, hypervisor or virtual machine monitor (VMM). In case of KVM, this is actually Linux kernel which has KVM modules loaded into it. In other words, KVM is a set of kernel modules that when loaded into Linux kernel turn the kernel into hypervisor. Above the hypervisor, and in user space, sit virtualisation applications that end users directly interact with \u2013QEMU, VMWare etc. These applications then create virtual machines which  ...\n Finally, there is \u201cfull\u201d vs. \u201cpara\u201d virtualisation dichotomy.  Full virtualisation is when OS that is running inside a VM is exactly the same as would be running on real hardware.  Paravirtualisation is when OS inside VM is aware that it is being virtualised and thus runs in a slightly modified way than it would on real hardware.\n  VT-x is CPU virtualisation for Intel 64 and IA-32 architecture. For Intel\u2019s Itanium, there is VT-I. For I/O virtualisation there is VT-d. AMD also has its virtualisation technology called AMD-V. We will only concern ourselves with VT-x.\n Under VT-x a CPU operates in one of two modes:  root and  non-root. These modes are orthogonal to real, protected, long etc, and also orthogonal to privilege rings (0-3). They form a new \u201cplane\u201d so to speak. Hypervisor runs in root mode and VMs run in non-root mode. When in non-root mode, CPU-bound code mostly executes in the same way as it would if running in root mode, which means that VM\u2019s CPU-bound operations run mostly at native speed. However, it doesn\u2019t have full freedom.\n Privileged instructions form a subset of all available instructions on a CPU. These are instructions that can only be executed if the CPU is in higher privileged state, e.g. current privilege level (CPL) 0 (where CPL 3 is least privileged). A subset of these privileged instructions are what we can call \u201cglobal state-changing \u201dinstructions \u2013those which affect the overall state of CPU. Examples are those instructions which modify clock or interrupt registers, or write to control registers  ...\n  Virtual Machine Extensions (VMX) are instructions that were added to facilitate VT-x. Let\u2019s look at some of them to gain a better understanding of how VT-x works.\n VMXON: Before this instruction is executed, there is no concept of root vs non-root modes. The CPU operates as if there was no virtualisation. VMXON must be executed in order to enter virtualisation. Immediately after VMXON, the CPU is in root mode.\n  VMLAUNCH: Creates an instance of a VM and enters non-root mode. We will explain what we mean by \u201cinstance of VM\u201d in a short while, when covering VMCS. For now think of it as a particular VM created inside QEMU or VMWare.\n  When a VM attempts to execute an instruction that is prohibited in non-root mode, CPU immediately switches to root mode in a trap-like way. This is called a VM exit.\n Let \u2019s synthesise the above information. CPU starts in a normal mode, executes VMXON to start virtualisation in root mode, executes VMLAUNCH to create and enter non-root mode for a VM instance, VM instance runs its own code as if running natively until it attempts something that is prohibited, that causes a VM exit and a switch to root mode. Recall that the software running in root mode is hypervisor. Hypervisor takes action to deal with the reason for VM exit and then executes VMRESUME  ...\n Of course the above description leaves some gaps. For example, how does hypervisor know why VM exit happened? And what makes one VM instance different from another? This is where VMCS comes in. VMCS stands for Virtual Machine Control Structure. It is basically a 4KiB part of physical memory which contains information needed for the above process to work. This information includes reasons for VM exit as well as information unique to each VM instance so that when CPU is in non-root mode,  ...\n As you may know, in QEMU or VMWare, we can decide how many CPUs a particular VM will have. Each such CPU is called a virtual CPU or vCPU. For each vCPU there is one VMCS. This means that VMCS stores information on CPU-level granularity and not VM level. To read and write a particular VMCS, VMREAD and VMWRITE instructions are used. They effectively require root mode so only hypervisor can modify VMCS. Non-root VM can perform VMWRITE but not to the actual VMCS, but a \u201cshadow \u201dVMCS \u2013 ...\n There are also instructions that operate on whole VMCS instances rather than individual VMCSs. These are used when switching between vCPUs, where a vCPU could belong to any VM instance. VMPTRLD is used to load the address of a VMCS and VMPTRST is used to store this address to a specified memory address. There can be many VMCS instances but only one is marked as current and active at any point. VMPTRLD marks a particular VMCS as active. Then, when VMRESUME is executed, the non-root  ...\n Here it\u2019s worth noting that all the VMX instructions above require CPL level 0, so they can only be executed from inside the Linux kernel (or other OS kernel).\n  Context info which contains things like CPU register values to save and restore during transitions between root and non-root.\n  Guest-state stores vCPU state on VM exit. On VMRESUME, vCPU state is restored from here.\n Host-state stores host CPU state on VMLAUNCH and VMRESUME. On VM exit, host CPU state is restored from here.\n VM execution control fields determine the behaviour of VM in non-root mode. For example hypervisor can set a bit in a VM execution control field such that whenever VM attempts to execute RDTSC instruction to read timestamp counter, the VM exits back to hypervisor.\n VM exit control fields determine the behaviour of VM exits. For example, when a bit in VM exit control part is set then debug register DR7 is saved whenever there is a VM exit.\n VM entry control fields determine the behaviour of VM entries. This is counterpart of VM exit control fields. A symmetric example is that setting a bit inside this field will cause the VM to always load DR7 debug register on VM entry.\n There are other aspects of hardware virtualisation support that we will conveniently gloss over in this post. Virtual to physical address conversion inside VM is done using a VT-x feature called Extended Page Tables (EPT). Translation Lookaside Buffer (TLB) is used to cache virtual to physical mappings in order to save page table lookups. TLB semantics also change to accommodate virtual machines. Advanced Programmable Interrupt Controller (APIC) on a real machine is responsible  ...\n  Kernel-based Virtual Machine (KVM) is a set of Linux kernel modules that when loaded, turn Linux kernel into hypervisor. Linux continues its normal operations as OS but also provides hypervisor facilities to user space. KVM modules can be grouped into two types: core module and machine specific modules. kvm.ko is the core module which is always needed. Depending on the host machine CPU, a machine specific module, like kvm-intel.ko or kvm-amd.ko will be needed. As you can guess,  ...\n KVM interacts with user space \u2013 in our case QEMU \u2013 in two ways: through device file `/dev/kvm` and through memory mapped pages. Memory mapped pages are used for bulk transfer of data between QEMU and KVM. More specifically, there are two memory mapped pages per vCPU and they are used for high volume data transfer between QEMU and the VM in kernel.\n `/dev/kvm` is the main API exposed by KVM. It supports a set of `ioctl`s which allow QEMU to manage VMs and interact with them. The lowest unit of virtualisation in KVM is a vCPU. Everything builds on top of it. The `/dev/kvm` API is a three-level hierarchy.\n System Level: Calls this API manipulate the global state of the whole KVM subsystem. This, among other things, is used to create VMs.\n VM Level: Calls to this API deal with a specific VM. vCPUs are created through calls to this API.\n vCPU Level: This is lowest granularity API and deals with a specific vCPU. Since QEMU dedicates one thread to each vCPU (see QEMU section below), calls to this API are done in the same thread that was used to create the vCPU.\n After creating vCPU QEMU continues interacting with it using the ioctls and memory mapped pages.\n  Quick Emulator (QEMU) is the only user space component we are considering in our VT-x/KVM/QEMU stack. With QEMU one can run a virtual machine with ARM or MIPS core but run on an Intel host. How is this possible? Basically QEMU has two modes:  emulator and  virtualiser. As an emulator, it can fake the hardware. So it can make itself look like a MIPS machine to the software running inside its VM. It does that through  binary translation. QEMU comes with  Tiny Code Generator (TCG)  ...\n The other mode of QEMU \u2013 as a virtualiser \u2013 is what achieves the type of virtualisation that we are discussing here. As virtualiser it gets help from KVM. It talks to KVM using ioctl\u2019s as described above.\n QEMU creates one process for every VM. For each vCPU, QEMU creates a thread. These are regular threads and they get scheduled by the OS like any other thread. As these threads get run time, QEMU creates impression of multiple CPUs for the software running inside its VM. Given QEMU \u2019s roots in emulation, it can emulate I/O which is something that KVM may not fully support \u2013take example of a VM with particular serial port on a host that doesn \u2019t have it. Now, when software  ...", "posttime": "2020-05-03 17:50:34", "tags": "\u865a\u62df\u5316,\u82f1\u7279\u5c14,virtualisation,vm", "title": "\u82f1\u7279\u5c14\u865a\u62df\u5316\uff1aVT-X\u3001KVM\u548cQEMU\u5982\u4f55\u534f\u540c\u5de5\u4f5c", "title_en": "Intel Virtualisation: How VT-X, KVM and QEMU Work Together", "transed": 1, "url": "https://binarydebt.wordpress.com/2018/10/14/intel-virtualisation-how-vt-x-kvm-and-qemu-work-together/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u865a\u62df\u5316", "\u82f1\u7279\u5c14", "vm"]}, {"category": "", "categoryclass": "", "imagename": "98c47678a86188bb0b5cfc0d3670f39e.jpg", "infoid": 1000467, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5468\u4e94\u53d1\u7ed9\u6770\u592b\u00b7\u8d1d\u4f50\u65af(Jeff Bezos)\u7684\u4e00\u5c01\u4e24\u515a\u8054\u7f72\u7684\u4fe1\u4e2d\uff0c\u4f17\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u8981\u6c42\u8fd9\u4f4d\u4e9a\u9a6c\u900a\u9996\u5e2d\u6267\u884c\u5b98\u89e3\u91ca\u4ed6\u4e4b\u524d\u7684\u58f0\u660e\u4e0e\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u6700\u8fd1\u7684\u62a5\u9053\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8fd9\u5c01\u4fe1\u63d0\u5230\u4e86\u4e9a\u9a6c\u900a\u660e\u663e\u7684\u505a\u6cd5\uff0c\u5373\u6f5c\u5165\u5176\u4ea7\u54c1\u548c\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u6570\u636e\u5b9d\u5e93\u4e2d\uff0c\u63d0\u51fa\u81ea\u5df1\u7684\u4e9a\u9a6c\u900a\u54c1\u724c\u7ade\u4e89\u4ea7\u54c1\u3002\n\u6b63\u5982\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u6307\u51fa\u7684\u90a3\u6837\uff0c\u4e9a\u9a6c\u900a\u201c\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u65ad\u8a00(\u5305\u62ec\u5411\u56fd\u4f1a)\uff0c\u5f53\u5b83\u5236\u9020\u548c\u9500\u552e\u81ea\u5df1\u7684\u4ea7\u54c1\u65f6\uff0c\u5b83\u4e0d\u4f1a\u4f7f\u7528\u4ece\u7f51\u7ad9\u7684\u4e2a\u4eba\u7b2c\u4e09\u65b9\u5356\u5bb6\u90a3\u91cc\u6536\u96c6\u7684\u4fe1\u606f-\u8fd9\u4e9b\u5356\u5bb6\u8ba4\u4e3a\u8fd9\u4e9b\u6570\u636e\u662f\u4e13\u6709\u7684\u3002\u201d\n\u5728\u5bf9\u8bb8\u591a\u524d\u5458\u5de5\u7684\u6587\u4ef6\u548c\u91c7\u8bbf\u4e2d\uff0c\u534e\u5c14\u8857\u65e5\u62a5\u53d1\u73b0\uff0c\u4e9a\u9a6c\u900a\u5728\u505a\u51fa\u5173\u4e8e\u5b9a\u4ef7\u3001\u4ea7\u54c1\u529f\u80fd\u548c\u6700\u6709\u53ef\u80fd\u8ba9\u516c\u53f8\u8d5a\u94b1\u7684\u4ea7\u54c1\u79cd\u7c7b\u7684\u51b3\u7b56\u65f6\uff0c\u786e\u5b9e\u4f1a\u53c2\u8003\u8fd9\u4e9b\u4fe1\u606f\u3002\n\u5728\u8fd9\u5c01\u4fe1\u4e2d\uff0c\u4f17\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u6307\u8d23\u8d1d\u4f50\u65af\u5728\u88ab\u95ee\u53ca\u8fc7\u53bb\u7684\u505a\u6cd5\u65f6\uff0c\u5411\u59d4\u5458\u4f1a\u505a\u51fa\u4e86\u201c\u8bef\u5bfc\u6027\u7684\uff0c\u53ef\u80fd\u662f\u5211\u4e8b\u4e0a\u865a\u5047\u6216\u6076\u610f\u7684\u201d\u9648\u8ff0\u3002\n\u8be5\u59d4\u5458\u4f1a\u5199\u9053\uff1a\u201c\u4f5c\u4e3a\u8c03\u67e5\u548c\u7406\u89e3\u6570\u5b57\u5e02\u573a\u7ade\u4e89\u95ee\u9898\u7684\u5173\u952e\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u4e9a\u9a6c\u900a\u56de\u5e94\u8fd9\u4e9b\u548c\u5176\u4ed6\u4e0e\u6570\u5b57\u5e02\u573a\u7ade\u4e89\u95ee\u9898\u6709\u5173\u7684\u5173\u952e\u95ee\u9898\uff0c\u8fd9\u5bf9\u59d4\u5458\u4f1a\u6765\u8bf4\u81f3\u5173\u91cd\u8981\u3002\u201d\u59d4\u5458\u4f1a\u8865\u5145\u8bf4\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u5b83\u5c06\u4f20\u5524\u79d1\u6280\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u3002\n\u867d\u7136\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u7f8e\u56fd\u79d1\u6280\u4e1a\u65e5\u76ca\u52a0\u5267\u7684\u76d1\u7ba1\u62c5\u5fe7\uff0c\u4f46\u8be5\u59d4\u5458\u4f1a\u7684\u884c\u52a8\u6e05\u695a\u5730\u8868\u660e\uff0c\u5c3d\u7ba1\u751f\u6d3b\u7684\u8bb8\u591a\u65b9\u9762\u4ecd\u60ac\u800c\u672a\u51b3\uff0c\u4f46\u8bb8\u591a\u8bae\u5458\u4ecd\u6709\u5174\u8da3\u6307\u8d23\u79d1\u6280\u516c\u53f8\u3002", "note_en": "In a  bipartisan letter sent Friday to Jeff Bezos, the House Judiciary committee demanded that the Amazon CEO explain discrepancies between his own prior statements and  recent reporting from The Wall Street Journal. Specifically, the letter addressed Amazon\u2019s apparent practice of diving into its trove of data on products and third-party sellers to come up with its own Amazon-branded competing products.\n As the Journal notes, Amazon \u201chas long asserted, including to Congress, that when it makes and sells its own products, it doesn\u2019t use information it collects from the site\u2019s individual third-party sellers\u2014data those sellers view as proprietary.\u201d\n   In documents and interviews with many former employees, the Journal found that Amazon does indeed consult that information when making decisions about pricing, product features and the kinds of products with the most potential to make the company money.\n In the letter, the House Judiciary Committee accuses Bezos of making \u201cmisleading, and possibly criminally false or perjurious\u201d statements to the committee when asked about the practice in the past.\n \u201cIt is vital to the Committee, as part of its critical work investigating and understanding competition issues in the digital market, that Amazon respond to these and other critical questions concerning competition issues in digital markets,\u201d the committee wrote, adding that it would subpoena the tech CEO if necessary.\n While the coronavirus crisis has taken some of the heat off of tech\u2019s mounting regulatory worries in the U.S., the committee\u2019s actions make it clear that plenty of lawmakers are still interested in taking tech companies to task, even with so many aspects of life still up in the air.", "posttime": "2020-05-03 17:28:26", "tags": "\u8d1d\u4f50\u65af,\u59d4\u5458\u4f1a,house,amazon", "title": "\u5f3a\u5927\u7684\u4f17\u8bae\u9662\u59d4\u5458\u4f1a\u8981\u6c42\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u5728\u201c\u8bef\u5bfc\u201d\u540e\u4f5c\u8bc1", "title_en": "Powerful House committee demands Jeff Bezos testify after \u2018misleading\u2019", "transed": 1, "url": "https://techcrunch.com/2020/05/01/powerful-house-committee-demands-jeff-bezos-testify-after-misleading-statements-on-how-amazon-develops-its-own-products/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8d1d\u4f50\u65af", "\u59d4\u5458\u4f1a", "house", "amazon"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000466, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6807\u7b7e\uff1aRust Use std\uff1a\uff1aOS\uff1a\uff1aRAW\uff1a\uff1a{c_int\uff0cc_void}\uff1b\u4f7f\u7528std\uff1a\uff1async\uff1a\uff1aatom\uff1a\uff1a{AtomicU64\uff0cOrding\uff1a\uff1aSeqCst}\uff1b\u4f7f\u7528std\uff1a\uff1atime\uff1a\uff1aInstant\uff1b#[repr(C)]struct timespec{TV_sec\uff1aU64\uff0cTV_Nsec\uff1aU64\uff0c}Static Time_Counter\uff1aAtomicU64=AtomicU64\uff1a\uff1aNew(0)\uff1b#[no_mangle]struct timespec{TV_sec\uff1au64\uff0ctv_nsec\uff1au64\uff0c}static time_Counter\uff1aAtomicU64=AtomicU64\uff1a\uff1aNew(0)\uff1b#[no_manger\u3002fn lock_gettime(clk_id\uff1a*mut c_void\uff0ctp\uff1a*mut timespec)-&gt\uff1bc_int{\u4e0d\u5b89\u5168{let next_tick=time_counter\u3002FETCH_ADD(1\uff0cSeqCst)\uff1b(*tp).tv_sec=Next_tick\uff1b(*tp).tv_nsec=0\uff1b0}}fn main(){let a=Instant\uff1a\uff1aNow()\uff1blet b=Instant\uff1a\uff1aNow()\uff1b\u8ba9.\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4ece\u4e00\u6bb5\u503c\u5f97\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u7684\u4ee3\u7801\u4e2d\u5b66\u5230\u8fd9\u4e00\u70b9\uff0c\u8ba9\u5b83\u5728MacOS\u4e0a\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u66f4\u5177\u751f\u4ea7\u6027\uff0c\u5e76\u652f\u6301\u8de8\u5e73\u53f0\u3002\u8ba9\u6211\u4eec\u6dfb\u52a0\u5bf9\u5b83\u7684\u652f\u6301\uff1a\n#[cfg(all(unix\uff0cnot(target_os=&#34\uff1bmacOS&#34\uff1b))]use std\uff1a\uff1aOS\uff1a\uff1araw\uff1a\uff1a{c_int\uff0cc_void}\uff1buse std\uff1a\uff1async\uff1a\uff1aatom\uff1a\uff1a{AtomicU64\uff0corder\uff1a\uff1aSeqCst}\uff1buse std\uff1a\uff1atime\uff1a\uff1aInstant\uff1b#[cfg(all(unix\uff0cnot(target_os=&#34\uff1bMacOS&#34\uff1b))]]#[repr(C)]struct timespec{TV_sec\uff1aU64\uff0cTV_nsec\uff1aU64\uff0c}static time_counter\uff1aAtomicU64=AtomicU64\uff1a\uff1anew(0)\uff1b#[cfg(all(unix\uff0cnot(target_os=&#34\uff1bmacOS&#34\uff1b)]#[no_mangle]extern&#34\uff1bC&#34\uff1bfn lock_gettime(_clk_id\uff1a*mut\u3002C_INT{\u4e0d\u5b89\u5168{\u8ba9NEXT_TICK.\u3002\n\u8ba1\u7b97\u673a\u63d0\u4f9b\u7684\u65f6\u949f\u6e90\u5141\u8bb8\u7a0b\u5e8f\u5bf9\u7ecf\u8fc7\u7684\u65f6\u95f4\u8fdb\u884c\u5047\u8bbe\u3002\u5982\u679c\u60a8\u6240\u9700\u8981\u7684\u53ea\u662f\u6d4b\u91cf\u67d0\u4e2a\u65f6\u523ba\u548cb\u4e4b\u95f4\u7ecf\u8fc7\u7684\u65f6\u95f4\uff0c\u5219Rust libstd\u4e3a\u60a8\u63d0\u4f9b\u4e86Instant\uff0c\u8fd9\u662f\u5bf9\u5355\u8c03\u4e0d\u9012\u51cf\u65f6\u949f\u7684\u6d4b\u91cf(\u5f88\u62b1\u6b49\u5730\u901a\u77e5\u60a8\uff0c\u7f3a\u5c11\u5355\u8c03\u9012\u589e\u65f6\u949f\u7684\u4fdd\u8bc1)\u3002\u77ac\u95f4\u662f\u4e00\u79cd\u4e0d\u900f\u660e\u7684\u4e1c\u897f\uff0c\u53ea\u4f1a\u8ba9\u4f60\u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u6bb5\u65f6\u95f4\u3002\u5f88\u597d\u2026\u2026\u3002\nInstant\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u8fd9\u53d6\u51b3\u4e8e\u60a8\u8fd0\u884c\u4ee3\u7801\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6587\u6863\u5217\u51fa\u4e86(\u5f53\u524d)\u7528\u4e8e\u83b7\u53d6\u65f6\u95f4\u4fe1\u606f\u7684\u7cfb\u7edf\u8c03\u7528\u3002\n\u4f46\u662f\u6211\u4eec\u5982\u4f55\u66ff\u6362\u64cd\u4f5c\u7cfb\u7edf\u7684\u529f\u80fd\u5462\uff1f\u539f\u6765\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u540d\u79f0\uff0c\u94fe\u63a5\u5668\u8bd5\u56fe\u627e\u51fa\u5b83\u4eec\u80cc\u540e\u7684\u4ee3\u7801\u5728\u54ea\u91cc\uff0c\u7136\u540e\u6307\u5411\u5b83\u3002\n\u5982\u679c\u6211\u4eec\u67e5\u770b\u6ca1\u6709\u4efb\u4f55#[NO_MANGLE]extern&#34\uff1bC&34\uff1b\u51fd\u6570\u7684\u4ee3\u7801\u7684\u66f4\u7b80\u5355\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u51fd\u6570\u6765\u81ea\u54ea\u91cc\uff1a\n(MacOS)\u276fnm-a./Instant|rg mach_Absolute_Time U_Mach_Absolute_Time(LINUX)\u276fnm-a\u5373\u65f6|rg Clock_Gettime U Clock_GetTime@@GLIBC_2.17.\u3002\nNM\u5217\u51fa\u4e86\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u3002U\u5728\u90a3\u91cc\u4ee3\u8868\u672a\u5b9a\u4e49\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u77e5\u9053\u5b83\u6765\u81ea\u54ea\u91cc(\u5c3d\u7ba1\u5728Linux\u4e2d\uff0c\u5b83\u7ed9\u4e86\u5b83\u4e00\u4e2a\u7565\u5fae\u4e0d\u540c\u7684\u540d\u79f0\uff0c\u8ba9\u6211\u4eec\u731c\u6d4b\u4f1a\u53d1\u751f\u4ec0\u4e48)\u3002\u6709\u5173\u6b64\u7b26\u53f7\u7684\u8be6\u7ec6\u4fe1\u606f\u5c06\u5728\u7a0d\u540e\u586b\u5199\uff0c\u4e00\u65e6\u60a8\u7684\u7a0b\u5e8f\u52a0\u8f7d\u5e76\u5c06\u7b26\u53f7\u89e3\u6790\u4e3a\u52a8\u6001\u5e93(\u6211\u76f8\u4fe1@fasterthan lime\u7684Making Our Executable Packer\u7cfb\u5217\u5c06\u63d0\u4f9b\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6211\u3002\n\u6240\u4ee5\u73b0\u5728\u8ba9\u6211\u4eec\u8bd5\u7740\u4ece\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u516c\u5f00\u4e00\u4e2a\u540c\u540d\u7684\u51fd\u6570\u3002\u6ce8\u610f\uff1a\u6211\u5728\u8fd9\u91cc\u53ea\u505aMacOS\u90e8\u5206\uff0c\u5b83\u5728Linux\u4e0a\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\u3002\n\u5b83\u6839\u672c\u4e0d\u4f1a\u51fa\u73b0\u5728\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0cRustc Right\u5b8c\u5168\u62b1\u6028\u9053\uff1a\n\u5373\u4f7f\u8bbe\u7f6e\u4e3apub\u4e5f\u4e0d\u8d77\u4f5c\u7528\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u540d\u79f0\u7b49\u7b26\u53f7\u4f1a\u635f\u574f\uff1b\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u4e5f\u4f1a\u7f16\u7801\u5230\u540d\u79f0\u4e2d\uff0c\u540c\u65f6\u8fd9\u4f1a\u786e\u4fdd\u540d\u79f0\u7684\u552f\u4e00\u6027(\u53e6\u8bf7\u53c2\u9605\u540d\u79f0\u635f\u574f)\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528#[no_mangle]\u5c5e\u6027\u5728Rust\u4e2d\u7981\u7528\u6b64\u529f\u80fd\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u7528\u4e86\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u6b63\u5728\u5c1d\u8bd5\u8986\u76d6\u6839\u636eC.C\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u8c03\u7528\u7ea6\u5b9a\u4e0eRust\u7565\u6709\u4e0d\u540c\u3002\u8fd9\u662f\u5b83\u4eec\u5404\u81ea\u7684ABI\u7684\u4e00\u90e8\u5206\uff1a\u5982\u4f55\u5c06\u6570\u636e\u4f20\u5165\u548c\u4f20\u51fa\u51fd\u6570\u3002\u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528extern\uff1bname\u6807\u8bb0\u6765\u5b9a\u4e49\u4f7f\u7528\u7684ABI\u3002\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e86\u8fd9\u4e00\u70b9\u3002\n(MacOS)\u276fnm-a./\u5373\u65f6|rg mach_Absolute_time0000000100000c20 T_mach_Absolute_Time(Linux)\u276fnm-a\u5373\u65f6|rg CLOCK_Gettime0000000000005250 T CLOCK_GETTIME\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u7b26\u53f7\u662f\u5728\u4e8c\u8fdb\u5236(&#34\uff1bT-\u7b26\u53f7\u5728\u6587\u672c(\u4ee3\u7801)\u90e8\u5206\u3002&#34\uff1b)\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u5b9a\u4e49\u7684\uff0c\u4e5f\u662f\u5728\u4f4d\u7f6e(0000000100000c20/0000000000005250)\u4e2d\u5b9a\u4e49\u7684\u3002\n\u5982\u679c\u6b64\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\uff0c\u5b83\u4ecd\u9700\u8981\u89e3\u6790\u672a\u5b9a\u4e49\u7684\u7b26\u53f7.\u3002\u4f46\u8fd9\u4e00\u6b21\u6211\u4eec\u7684\u51fd\u6570\u4e0d\u518d\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3astdlib\u53ea\u8c03\u7528\u5404\u81ea\u540d\u79f0\u540e\u9762\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u6240\u4ee5\u5b83\u73b0\u5728\u8c03\u7528\u6211\u4eec\u7684\u4ee3\u7801\uff01\n\u662f\u7684\uff0c\u8fd9\u51e0\u4e4e\u9002\u7528\u4e8e\u5176\u4ed6\u5e93\u6216libc\u5b9a\u4e49\u7684\u51e0\u4e4e\u6240\u6709\u51fd\u6570\uff1a\n\u4f7f\u7528std\uff1a\uff1afs\uff1a\uff1afile\uff1b\u4f7f\u7528std\uff1a\uff1aOS\uff1a\uff1araw\uff1a\uff1a{c_char\uff0cc_int}\uff1b#[no_mangle]extern&#34\uff1bC&#34\uff1bfn open(_path\uff1a*mut c_char\uff0c_flag\uff1ac_int)-&gt\uff1bc_int{-1}fn main(){File\uff1a\uff1aopen(&#34\uff1b/etc/passwd&#34\uff1b)\u3002UnWrap()\uff1b}\u3002\n\u276frustc file.rs\u276f./filethread&#39\uff1bmain&#39\uff1b\u5728`Err`\u503c\uff1aOS{CODE\uff1a0\uff0cKIND\uff1aOTHER\uff0cMESSAGE\uff1a&#34\uff1bUNDEFINED ERROR\uff1a0&#34\uff1b}&#39\uff1b\uff0cfile.rs\uff1a10\uff1a5\u6ce8\u610f\uff1a\u4f7f\u7528`RUST_BACKTRACE=1`\u73af\u5883\u53d8\u91cf\u8fd0\u884c\u4ee5\u663e\u793a\u56de\u6eaf\u3002\n", "note_en": "Tags: rust      use  std::os::raw::{ c_int ,  c_void }; use  std::sync::atomic::{AtomicU64, Ordering::SeqCst}; use  std::time::Instant;#[ repr (C)] struct  timespec {  tv_sec :  u64 ,  tv_nsec :  u64 ,} static  TIME_COUNTER : AtomicU64 = AtomicU64::new( 0 );#[ no_mangle ] extern  &#34; C &#34;  fn  clock_gettime ( clk_id : * mut  c_void,  tp : * mut  timespec) -&gt; c_int {  unsafe  {  let  next_tick =  TIME_COUNTER . fetch_add ( 1 , SeqCst); (*tp).tv_sec = next_tick; (*tp).tv_nsec =  0 ;  0  }} fn  main () {  let  a = Instant::now();  let b = Instant::now();  let  ...\n      First let&#39;s take this from a tweet-worthy piece of code to be more production ready with cross-platform support.I&#39;m on macOS most of the day. Let&#39;s add support for it:\n #[ cfg ( all (unix,  not (target_os = &#34; macos &#34;)))] use  std::os::raw::{ c_int ,  c_void }; use  std::sync::atomic::{AtomicU64, Ordering::SeqCst}; use  std::time::Instant;#[ cfg ( all (unix,  not (target_os = &#34; macos &#34;)))]#[ repr (C)] struct  timespec {  tv_sec :  u64 ,  tv_nsec :  u64 ,} static  TIME_COUNTER : AtomicU64 = AtomicU64::new( 0 );#[ cfg ( all (unix,  not (target_os = &#34; macos &#34;)))]#[ no_mangle ] extern  &#34; C &#34;  fn  clock_gettime ( _clk_id : * mut  c_void,  tp : * mut  timespec) -&gt; c_int {  unsafe  {  let next_tick  ...\n       Computers provide clock sources that allow a program to make assumptions about time passed.If all you need is measure the time passed between some instant  a and instant  b the Rust libstd provides you with  Instant, a measurement of a monotonically nondecreasing clock(I&#39;m sorry to inform you that guarantees about  monotonically increasing clocks are lacking). Instants are an opaque thing and only good for getting you the difference between two of them, resulting in a  Duration.Good  ...\n How is  Instant implemented?That depends on the operating system your running your code on.Luckily the documentation lists the (currently) used system calls to get time information.\n     But how do we replace operating system functionality?Turns out functions are merely a name and the linker tries to figure out where the code behind them is and then points to that.\n If we look at a simpler version of our code without any  #[no_mangle] extern &#34;C&#34; functions we can see where these come from:\n (macOS) \u276f nm -a ./instant | rg mach_absolute_time U _mach_absolute_time(linux) \u276f nm -a instant | rg clock_gettime U clock_gettime@@GLIBC_2.17\n nm lists symbols from object files.That  U right there stands for  undefined: The binary doesn&#39;t have knowledge where it comes from(though in the case of Linux it gave it a slightly different name letting us guess what to expect).Details about this symbol are later filled in, once your program is loaded and symbols to dynamic libaries are resolved(and I&#39;m sure the  &#34;Making our own executable packer&#34; series by  @fasterthanlimewill have lots more details on it, I should  ...\n   So now let&#39;s try to expose a function under the same name from our code.  Note: I&#39;m only doing the macOS part here, it works the same for Linux.\n   it will not turn up in the final binary at all and  rustc right fully complains:\n  Even making it  pub won&#39;t work.By default symbols such as function names get  mangled; some additional information is encoded into the name as well and at the same time this ensures uniqueness of names(see also  Name Mangling).One can disable that in Rust using the  #[no_mangle] attribute. So we apply that.\n We&#39;re trying to override a function that is defined in terms of C.C has slightly different calling conventions than Rust.It&#39;s part of their respective ABIs: how data is passed in and out of functions.In Rust one can define the used ABI with the  extern &#34;name&#34; tag.So we add that.\n    (macOS) \u276f nm -a ./instant | rg mach_absolute_time0000000100000c20 T _mach_absolute_time(linux) \u276f nm -a instant | rg clock_gettime0000000000005250 T clock_gettime\n Now we know that the symbol is defined somewhere in the binary (&#34;T - The symbol is in the text (code) section.&#34;)and also the location ( 0000000100000c20 /  0000000000005250).\n If this program is run it will still need to resolve undefined symbols ... but this time our functions are not undefined anymore.As the stdlib just calls whatever is behind that respective name it now calls our code instead!\n And yes, this works for pretty much all the functions defined by other libraries or libc:\n use  std::fs::File; use  std::os::raw::{ c_char ,  c_int };#[ no_mangle ] extern  &#34; C &#34;  fn  open ( _path : * mut  c_char,  _flag : c_int) -&gt; c_int { - 1 } fn  main () { File::open(&#34; /etc/passwd &#34;). unwrap ();}\n \u276f rustc file.rs\u276f ./filethread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 0, kind: Other, message: &#34;Undefined error: 0&#34; }&#39;, file.rs:10:5note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n  If you liked this you might also like  STDSHOUT!!!1!, I even  gave a talk about it.", "posttime": "2020-05-03 17:05:34", "tags": "rust,\u77ac\u95f4,\u4ee3\u7801", "title": "\u77ac\u95f4\u751f\u9508", "title_en": "Rust in an Instant", "transed": 1, "url": "https://fnordig.de/2020/05/02/rust-in-an-instant/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["rust", "\u77ac\u95f4", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "2e59d4c14f91c0a26ec71e14d8beae09.jpg", "infoid": 1000465, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u5230\u641c\u7d22\u514b\u91cc\u65af\u6258\u5f17\u00b7\u6c83\u5c14\u592b\u5188\u00b7\u4e9a\u5386\u5c71\u5927(Christopher Wolfgang Alexander\uff0c1936\u5e7410\u67084\u65e5\u51fa\u751f\u4e8e\u5965\u5730\u5229\u7ef4\u4e5f\u7eb3)[1][2]\u662f\u4e00\u4f4d\u6709\u5e7f\u6cdb\u5f71\u54cd\u529b\u7684\u82f1\u88d4\u7f8e\u56fd\u5efa\u7b51\u5e08\u548c\u8bbe\u8ba1\u7406\u8bba\u5bb6\uff0c\u76ee\u524d\u662f\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(University of California\uff0cBerkeley)\u540d\u8a89\u6559\u6388\u3002\u4ed6\u5173\u4e8e\u4ee5\u4eba\u4e3a\u4e2d\u5fc3\u7684\u8bbe\u8ba1\u672c\u8d28\u7684\u7406\u8bba\u5df2\u7ecf\u5f71\u54cd\u5230\u5efa\u7b51\u4ee5\u5916\u7684\u9886\u57df\uff0c\u5305\u62ec\u57ce\u5e02\u8bbe\u8ba1\u3001\u8f6f\u4ef6\u3001\u793e\u4f1a\u5b66\u7b49\u3002[3]\u4e9a\u5386\u5c71\u5927\u5df2\u7ecf\u8bbe\u8ba1\u5e76\u4eb2\u81ea\u5efa\u9020\u4e86100\u591a\u5ea7\u5efa\u7b51\uff0c\u8fd9\u4e24\u5ea7\u5efa\u7b51\u90fd\u662f\u4f5c\u4e3a.\u3002\n\u5728\u8f6f\u4ef6\u9886\u57df\uff0c\u4e9a\u5386\u5c71\u5927\u88ab\u8ba4\u4e3a\u662f\u6a21\u5f0f\u8bed\u8a00\u8fd0\u52a8\u4e4b\u7236\u3002\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u521b\u5efa\u8005\u6c83\u5fb7\u00b7\u574e\u5b81\u5b89(Ward Cunningham)\u8bf4\uff0c\u7b2c\u4e00\u4e2a\u7ef4\u57fa--\u7ef4\u57fa\u767e\u79d1\u80cc\u540e\u7684\u6280\u672f--\u76f4\u63a5\u6e90\u81ea\u4e9a\u5386\u5c71\u5927\u7684\u4f5c\u54c1\u3002[6][7][8]Alexander\u7684\u5de5\u4f5c\u4e5f\u5f71\u54cd\u4e86\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u7684\u53d1\u5c55\u3002[8]\u3002\n\u5728\u5efa\u7b51\u65b9\u9762\uff0c\u4e9a\u5386\u5c71\u5927\u7684\u4f5c\u54c1\u88ab\u8bb8\u591a\u4e0d\u540c\u7684\u5f53\u4ee3\u5efa\u7b51\u5b9e\u8df5\u793e\u533a\u4f7f\u7528\uff0c\u5305\u62ec\u65b0\u57ce\u5e02\u4e3b\u4e49\u8fd0\u52a8\uff0c\u4ee5\u5e2e\u52a9\u4eba\u4eec\u6536\u56de\u5bf9\u81ea\u5df1\u5efa\u7b51\u73af\u5883\u7684\u63a7\u5236\u6743\u3002[9]\u7136\u800c\uff0c\u4e9a\u5386\u5c71\u5927\u5728\u4e00\u4e9b\u4e3b\u6d41\u5efa\u7b51\u5e08\u548c\u8bc4\u8bba\u5bb6\u4e2d\u5b58\u5728\u4e89\u8bae\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4ed6\u7684\u4f5c\u54c1\u7ecf\u5e38\u4e25\u5389\u6279\u8bc4\u8bb8\u591a\u5f53\u4ee3\u5efa\u7b51\u7406\u8bba\u548c\u5b9e\u8df5\u3002[10]\u3002\n\u4e9a\u5386\u5c71\u5927\u56e0\u8bb8\u591a\u5173\u4e8e\u8bbe\u8ba1\u548c\u5efa\u7b51\u8fc7\u7a0b\u7684\u4e66\u7c4d\u800c\u95fb\u540d\uff0c\u5305\u62ec\u201c\u5f62\u6001\u5408\u6210\u7b14\u8bb0\u201d\u3001\u201c\u57ce\u5e02\u4e0d\u662f\u4e00\u68f5\u6811\u201d(2015\u5e74\u9996\u6b21\u4ee5\u8bba\u6587\u5f62\u5f0f\u51fa\u7248\uff0c\u5e76\u4ee5\u4e66\u7c4d\u5f62\u5f0f\u91cd\u65b0\u51fa\u7248)\u3001\u201c\u6c38\u6052\u7684\u5efa\u7b51\u65b9\u5f0f\u201d\u3001\u201c\u57ce\u5e02\u8bbe\u8ba1\u65b0\u7406\u8bba\u201d\u548c\u201c\u4fc4\u52d2\u5188\u5dde\u5b9e\u9a8c\u201d\u3002\u6700\u8fd1\uff0c\u4ed6\u51fa\u7248\u4e86\u56db\u5377\u672c\u7684\u201c\u79e9\u5e8f\u7684\u672c\u8d28\uff1a\u4e00\u7bc7\u5173\u4e8e\u5efa\u7b51\u827a\u672f\u548c\u5b87\u5b99\u672c\u8d28\u7684\u6563\u6587\u201d\uff0c\u8bb2\u8ff0\u4e86\u4ed6\u5173\u4e8e\u5f62\u6001\u53d1\u751f\u5b66\u7684\u8f83\u65b0\u7406\u8bba\u3002\n\u4e9a\u5386\u5c71\u5927\u6700\u51fa\u540d\u7684\u53ef\u80fd\u662f\u4ed61977\u5e74\u51fa\u7248\u7684\u4e66A Pattern Language\uff0c\u8fd9\u672c\u4e66\u5728\u51fa\u7248\u5927\u7ea640\u5e74\u540e\u6210\u4e3a\u5e38\u5e74\u7545\u9500\u4e66\u3002[11]\u8003\u8651\u5230\u7528\u6237\u5bf9\u4ed6\u4eec\u7684\u9700\u6c42\u6bd4\u4efb\u4f55\u67b6\u6784\u5e08\u90fd\u66f4\u654f\u611f\uff0c[12][13][14]\u4ed6(\u4e0e\u4ed6\u7684\u5b66\u751fSara Ishikawa\u3001Murray Silverstein\u3001Max Jacobson\u3001Ingrid King\u548cShlomo Angel\u5408\u4f5c)\u8bbe\u8ba1\u5e76\u9a8c\u8bc1\u4e86\u4e00\u79cd\u6a21\u5f0f\u8bed\u8a00\uff0c\u4f7f\u4efb\u4f55\u4eba\u90fd\u80fd\u591f\u8fdb\u884c\u4efb\u4f55\u89c4\u6a21\u7684\u8bbe\u8ba1\u548c\u6784\u5efa\u3002\n1938\u5e74\u79cb\u5929\uff0c\u5e74\u5e7c\u7684\u4e9a\u5386\u5c71\u5927\u968f\u7236\u6bcd\u4ece\u5965\u5730\u5229\u79fb\u6c11\u5230\u82f1\u56fd\uff0c\u5f53\u65f6\u4ed6\u7684\u7236\u6bcd\u88ab\u8feb\u9003\u79bb\u7eb3\u7cb9\u653f\u6743\u3002\u4ed6\u7ae5\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u662f\u5728\u82f1\u56fd\u7684\u5947\u5207\u65af\u7279\u548c\u725b\u6d25\u5ea6\u8fc7\u7684\uff0c\u5728\u90a3\u91cc\u4ed6\u5f00\u59cb\u4e86\u4ed6\u7684\u7406\u79d1\u6559\u80b2\u30021958\u5e74\uff0c\u4ed6\u4ece\u82f1\u56fd\u79fb\u5c45\u7f8e\u56fd\uff0c\u5c31\u8bfb\u4e8e\u54c8\u4f5b\u5927\u5b66\u548c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u3002\u4ed6\u4e8e1963\u5e74\u642c\u5230\u52a0\u5dde\u4f2f\u514b\u5229\u63a5\u53d7\u4e00\u9879\u4efb\u547d\u3002\n\u4e9a\u5386\u5c71\u5927\u5c31\u8bfb\u4e8e\u82f1\u56fd\u5965\u5fb7\u5c14\u5b66\u6821\u30021954\u5e74\uff0c\u4ed6\u83b7\u5f97\u5251\u6865\u5927\u5b66\u4e09\u4e00\u5b66\u9662\u5316\u5b66\u548c\u7269\u7406\u4e13\u4e1a\u7684\u6700\u9ad8\u5f00\u653e\u5f0f\u5956\u5b66\u91d1\uff0c\u5e76\u7ee7\u7eed\u653b\u8bfb\u6570\u5b66\u3002\u4ed6\u83b7\u5f97\u4e86\u5efa\u7b51\u5b66\u5b66\u58eb\u5b66\u4f4d\u548c\u6570\u5b66\u7855\u58eb\u5b66\u4f4d\u3002\u4ed6\u5728\u54c8\u4f5b\u5927\u5b66\u83b7\u5f97\u535a\u58eb\u5b66\u4f4d(\u54c8\u4f5b\u5927\u5b66\u6388\u4e88\u7684\u7b2c\u4e00\u4e2a\u5efa\u7b51\u5b66\u535a\u58eb\u5b66\u4f4d)\uff0c\u5e76\u5f53\u9009\u4e3a\u54c8\u4f5b\u5927\u5b66\u7814\u7a76\u5458\u3002\u5728\u540c\u4e00\u65f6\u671f\u4ed6\u5de5\u4f5c..\u3002\n\u4e9a\u5386\u5c71\u5927\u4e8e1961-64\u5e74\u5f53\u9009\u4e3a\u54c8\u4f5b\u5927\u5b66\u7814\u7a76\u5458\u534f\u4f1a\u4f1a\u5458\uff1b1972\u5e74\u88ab\u7f8e\u56fd\u5efa\u7b51\u5e08\u5b66\u4f1a\u6388\u4e88\u7b2c\u4e00\u679a\u7814\u7a76\u5956\u7ae0\uff1b[16]1980\u5e74\u5f53\u9009\u4e3a\u745e\u5178\u7687\u5bb6\u79d1\u5b66\u9662\u9662\u58eb\uff1b1985\u5e74\u83b7\u5f97\u65e5\u672c\u6700\u4f73\u5efa\u7b51\u5956\uff1b1986\u5e74\u548c1987\u5e74\u83b7\u5f97ACSA(\u5927\u5b66\u5efa\u7b51\u5b66\u9662\u534f\u4f1a)\u6770\u51fa\u6559\u6388\u5956\uff1b[17]\u53d7\u9080\u4e8e1992\u5e74\u9881\u53d1\u8def\u6613\u65af\u00b7\u5361\u6069\u7eaa\u5ff5\u8bb2\u5ea7\uff1b\u88ab\u6388\u4e88\u2026\u2026\u3002\n\u201c\u6c38\u6052\u7684\u5efa\u7b51\u65b9\u5f0f\u201d(1979)\u63cf\u8ff0\u4e86\u5efa\u7b51\u7269\u53ef\u4ee5\u8ffd\u6c42\u7684\u5b8c\u7f8e\u4f7f\u7528\uff1a\n\u6709\u4e00\u79cd\u6c38\u6052\u7684\u5efa\u9020\u65b9\u5f0f\u3002\u5b83\u5df2\u7ecf\u6709\u4e00\u5343\u5e74\u7684\u5386\u53f2\u4e86\uff0c\u4eca\u5929\u548c\u4ee5\u524d\u4e00\u6837\u3002\u8fc7\u53bb\u4f1f\u5927\u7684\u4f20\u7edf\u5efa\u7b51\uff0c\u6751\u5e84\u3001\u5e10\u7bf7\u548c\u5bfa\u5e99\uff0c\u8ba9\u4eba\u6709\u5bb6\u7684\u611f\u89c9\uff0c\u603b\u662f\u7531\u79bb\u8fd9\u6761\u8def\u4e2d\u5fc3\u5f88\u8fd1\u7684\u4eba\u5efa\u9020\u7684\u3002\u4e0d\u53ef\u80fd\u5efa\u9020\u4f1f\u5927\u7684\u5efa\u7b51\uff0c\u4f1f\u5927\u7684\u57ce\u9547\uff0c\u7f8e\u4e3d\u7684\u5730\u65b9\uff0c\u4f60\u611f\u89c9\u81ea\u5df1\u7684\u5730\u65b9\uff0c\u4f60\u89c9\u5f97\u81ea\u5df1\u6d3b\u7740\u7684\u5730\u65b9\uff0c\u9664\u975e\u4f60\u9075\u5faa\u8fd9\u4e9b\u539f\u5219\uff0c\u5426\u5219\u5c31\u4e0d\u53ef\u80fd\u5efa\u9020\u51fa\u4f1f\u5927\u7684\u5efa\u7b51\u3001\u4f1f\u5927\u7684\u57ce\u9547\u3001\u7f8e\u4e3d\u7684\u5730\u65b9\u3002\n\u201c\u6a21\u5f0f\u8bed\u8a00\uff1a\u57ce\u9547\u3001\u5efa\u7b51\u3001\u5efa\u7b51\u201d(1977)\u4ee5\u4e00\u79cd\u7406\u8bba\u6570\u5b66\u5bb6\u6216\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u53ef\u80fd\u79f0\u4e4b\u4e3a\u751f\u6210\u8bed\u6cd5\u7684\u5f62\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b9e\u7528\u7684\u5efa\u7b51\u7cfb\u7edf\u3002\n\u8fd9\u5e45\u4f5c\u54c1\u6e90\u4e8e\u4e00\u9879\u89c2\u5bdf\uff0c\u5373\u8bb8\u591a\u4e2d\u4e16\u7eaa\u57ce\u5e02\u90fd\u5f88\u6709\u5438\u5f15\u529b\uff0c\u5f88\u548c\u8c10\u3002\u4f5c\u8005\u8bf4\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u6839\u636e\u5f53\u5730\u6cd5\u89c4\u5efa\u9020\u7684\uff0c\u8fd9\u4e9b\u6cd5\u89c4\u8981\u6c42\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f46\u5374\u89e3\u653e\u4e86\u5efa\u7b51\u5e08\uff0c\u4f7f\u5176\u80fd\u591f\u9002\u5e94\u7279\u5b9a\u7684\u60c5\u51b5\u3002\n\u8fd9\u672c\u4e66\u63d0\u4f9b\u4e86\u89c4\u5219\u548c\u56fe\u7247\uff0c\u5e76\u7559\u4e0b\u4e86\u4ece\u9879\u76ee\u7684\u7cbe\u786e\u73af\u5883\u4e2d\u505a\u51fa\u7684\u51b3\u5b9a\u3002\u5b83\u63cf\u8ff0\u4e86\u5728\u6bcf\u4e2a\u5c3a\u5ea6\u4e0a\u6784\u5efa\u5b9e\u7528\u3001\u5b89\u5168\u548c\u6709\u5438\u5f15\u529b\u7684\u8bbe\u8ba1\u7684\u786e\u5207\u65b9\u6cd5\uff0c\u4ece\u6574\u4e2a\u533a\u57df\uff0c\u5230\u57ce\u5e02\u3001\u793e\u533a\u3001\u82b1\u56ed\u3001\u5efa\u7b51\u7269\u3001\u623f\u95f4\u3001\u5185\u7f6e\u5bb6\u5177\u548c\u56fa\u5b9a\u88c5\u7f6e\uff0c\u4e00\u76f4\u5230", "note_en": "Jump to navigation  Jump to search  Christopher Wolfgang Alexander (born 4 October 1936 in  Vienna, Austria)  [1]  [2] is a widely influential British-American  architect and design theorist, and currently  emeritus professor at the  University of California, Berkeley. His theories about the nature of human-centered  design have affected fields beyond architecture, including  urban design,  software,  sociology and others.  [3]Alexander has designed and personally built over 100 buildings, both as an  ...\n In software, Alexander is regarded as the father of the  pattern language movement. The first  wiki\u2014the technology behind  Wikipedia\u2014led directly from Alexander&#39;s work, according to its creator,  Ward Cunningham.  [6]  [7]  [8] Alexander&#39;s work has also influenced the development of  agile software development.  [8]\n In architecture, Alexander&#39;s work is used by a number of different contemporary architectural communities of practice, including the  New Urbanist movement, to help people to reclaim control over their own built environment.  [9] However, Alexander is controversial among some mainstream architects and critics, in part because his work is often harshly critical of much of contemporary architectural theory and practice.  [10]\n Alexander is known for many books on the design and building process, including   Notes on the Synthesis of Form,  A City is Not a Tree (first published as a paper and re-published in book form in 2015),   The Timeless Way of Building, A New Theory of Urban Design, and   The Oregon Experiment. More recently he published the four-volume   The Nature of Order: An Essay on the Art of Building and the Nature of the Universe,about his newer theories of &#34;morphogenetic&#34;  ...\n Alexander is perhaps best known for his 1977 book   A Pattern Language, a perennial seller some four decades after publication.  [11] Reasoning that users are more sensitive to their needs than any architect could be,  [12]  [13]  [14] he produced and validated (in collaboration with his students Sara Ishikawa,  Murray Silverstein, Max Jacobson, Ingrid King, and Shlomo Angel) a &#34; pattern language&#34; to empower anyone to design and build at any scale.\n   As a young child Alexander emigrated in fall 1938  [15] with his parents from Austria to England, when his parents were forced to flee the Nazi regime. He spent much of his childhood in  Chichester and  Oxford, England, where he began his education in the sciences. He moved from England to the United States in 1958 to study at  Harvard University and  Massachusetts Institute of Technology. He moved to  Berkeley, Californiain 1963 to accept an appointment  ...\n  Alexander attended  Oundle School, England. In 1954, he was awarded the top open scholarship to  Trinity College,  Cambridge University in chemistry and physics, and went on to read mathematics. He earned a  Bachelor&#39;s degree in Architecture and a  Master&#39;s degree in Mathematics. He took his doctorate at Harvard (the first  PhD in Architecture ever awarded at  Harvard University), and was elected fellow at Harvard. During the same period he worked  ...\n  Alexander was elected to the  Society of Fellows, Harvard University 1961-64; awarded the First Medal for Research by the American Institute of Architects, 1972;  [16] elected member of the Swedish Royal Academy, 1980; winner of the Best Building in Japan award, 1985; winner of the ACSA (Association of Collegiate Schools of Architecture) Distinguished Professor Award, 1986 and 1987;  [17]invited to present the Louis Kahn Memorial Lecture, 1992; awarded  ...\n   The Timeless Way of Building (1979) described the perfection of use to which buildings could aspire:\n There is one timeless way of building. It is a thousand years old, and the same today as it has ever been. The great traditional buildings of the past, the villages and tents and temples in which man feels at home, have always been made by people who were very close to the center of this way. It is not possible to make great buildings, or great towns, beautiful places, places where you feel yourself, places where you feel alive, except by following  ...\n A Pattern Language: Towns, Buildings, Construction (1977) described a practical architectural system in a form that a theoretical mathematician or computer scientist might call a  generative grammar.\n The work originated from an observation that many medieval cities are attractive and harmonious. The authors said that this occurs because they were built to local regulations that required specific features, but freed the architect to adapt them to particular situations.\n The book provides rules and pictures, and leaves decisions to be taken from the precise environment of the project. It describes exact methods for constructing practical, safe and attractive designs at every scale, from entire regions, through cities, neighborhoods, gardens, buildings, rooms, built-in furniture, and fixtures down to the level of doorknobs.\n A notable value is that the architectural system consists only of classic patterns tested in the real world and reviewed by multiple architects for beauty and practicality.\n The book includes all needed surveying and structural calculations, and a novel simplified building system that copes with regional shortages of wood and steel, uses easily stored inexpensive materials, and produces long-lasting classic buildings with small amounts of materials, design and labor. It first has users prototype a structure on-site in temporary materials. Once accepted, these are finished by filling them with very-low-density concrete.  ...\n This book&#39;s method was adopted by the University of Oregon, as described in   The Oregon Experiment (1975), and remains the official planning instrument. It has also been adopted in part by some cities as a building code.\n The idea of a  pattern language appears to apply to any complex engineering task, and has been applied to some of them. It has been especially influential in  software engineering where  patterns have been used to document collective knowledge in the field.\n A New Theory of Urban Design (1987) coincided with a renewal of interest in  urbanism among architects, but stood apart from most other expressions of this by assuming a distinctly anti-masterplanning stance. An account of a design studio conducted with Berkeley students on a site in  San Francisco, it shows how convincing urban networks can be generated by requiring individual actors to respect only  localrules, in relation to neighbours.  ...\n The Nature of Order: An Essay on the Art of Building and the Nature of the Universe (2003\u201304), which includes The  Phenomenon of Life,  The Process of Creating Life,  A Vision of a Living World and  The Luminous Ground, is Alexander&#39;s most comprehensive and elaborate work. In it, he puts forth a new theory about the nature of space and describes how this theory influences thinking about architecture, building, planning, and the way in  ...\n The online publication  Katarxis 3 (September 2004) includes several essays by Christopher Alexander, as well as the legendary debate between Alexander and  Peter Eisenman from 1982.  [23]\n Alexander&#39;s latest book,  The Battle for the Life and Beauty of the Earth: A Struggle Between Two World-Systems(2012), is the story of the largest project he and his colleagues had ever tackled, the construction of a new High School/College campus in Japan. He also uses the project to connect with themes in his four-volume series. He contrasts his approach, (System A) with the construction processes endemic in the US and Japanese economies  ...\n  Among Alexander&#39;s most notable built works are the Eishin Campus near  Tokyo (the building process of which is outlined in his 2012 book  The Battle for the Life and Beauty of the Earth); the West Dean Visitors Centre  [24] in West Sussex, England; the Julian Street Inn (a homeless shelter) in  San Jose, California (both described in  Nature of Order); the  Sala Houseand the Martinez House (experimental houses in Albany and Martinez, California  ...\n His former student and colleague  Michael Mehaffy wrote an introductory essay on Alexander&#39;s built work in the online publication  Katarxis 3, which includes a gallery of Alexander&#39;s major built projects through September 2004.  [25]\n  In addition to his lengthy teaching career as a Professor at  UC Berkeley (during which a number of international students began to appreciate and apply his methods), Alexander was a key faculty member at both The Prince of Wales&#39;s Summer Schools in Civil Architecture (1990\u20131994) and  The Prince&#39;s Foundation for the Built Environment.  [26] He also initiated the process which led to the international  Building Beautypost-graduate  ...\n   Alexander&#39;s work has widely influenced architects; among those who acknowledge his influence are  Sarah Susanka,  [29]  Andres Duany,  [30] and  Witold Rybczynski.  [31]  Robert Campbell, the Pulitzer Prize-winning architecture critic for the  Boston Globe, stated that Alexander &#34;has had an enormous critical influence on my life and work, and I think that&#39;s true of a whole generation of people.&#34;  [31]\n Architecture critic  Peter Buchanan, in an essay for   The Architectural Review &#39;s 2012 campaign  The Big Rethink, argues that Alexander&#39;s work as reflected in  A Pattern Language is &#34;thoroughly subversive and forward looking rather than regressive, as so many misunderstand it to be.&#34; He continues:\n  Even architects not immune to the charms of the places depicted, are loath to pursue the folksy aesthetic they see as implied and do not want to engage with such primitive construction \u2014although the systemic collapse now unfolding may force that upon them. The daunting challenge for architects then, if such a thing is even possible to realise, would be to recreate in a more contemporary idiom both the richness and quality of experience  ...\n Many urban development projects continue to incorporate Alexander&#39;s ideas. For example, in the UK the developers  Living Villages have been highly influenced by Alexander&#39;s work and used  A Pattern Language as the basis for the design of The Wintles in Bishops Castle, Shropshire.  [33]  Sarah Susanka&#39;s &#34;Not So Big House&#34; movement adapts and popularizes Alexander&#39;s patterns and outlook.\n  Alexander&#39;s   Notes on the Synthesis of Form was said to be required reading for researchers in computer science throughout the 1960s. It had an influence  [34] in the 1960s and 1970s on  programming language design, modular programming,  object-oriented programming,  software engineering and other design methodologies. Alexander&#39;s mathematical concepts and orientation were similar to  Edsger Dijkstra&#39;s influential  A Discipline  ...\n The greatest influence of   A Pattern Language in computer science is the  design patterns movement.  [36] Alexander&#39;s philosophy of incremental, organic, coherent design also influenced the  extreme programming movement.  [37] The  Wiki was invented  [6]  [7] to allow the Hillside Group to work on programming  design patterns. More recently the &#34;deep geometrical structures&#34; as discussed in   The Nature of Orderhave been cited  ...\n Will Wright wrote that Alexander&#39;s work was influential in the origin of the   SimCity computer games, and in his later game   Spore.  [39]\n Alexander has often led his own software research, such as the 1996 Gatemaker project with  Greg Bryant.  [40]  [41]\n Alexander discovered and conceived a recursive structure, so called wholeness, which is defined mathematically, exists in space and matter physically, and reflects in our minds and cognition psychologically. He had his idea of wholeness back to early 1980s when he finished his very first version of  The Nature of Order. In fact, his idea of wholeness or degree of wholeness relying a recursive structure of centers resemble in  ...\n  The fourth volume of   The Nature of Order approaches religious questions from a scientific and philosophical rather than mystical direction. In it, Alexander describes deep ties between the nature of matter,  human perception of the universe, and the geometries people construct in buildings, cities, and artifacts. He suggests a crucial link between traditional practices and  beliefs, and recent scientific advances.  [43]Despite  ...\n  The life&#39;s work of Alexander is dedicated to turn design from unselfconscious behavior to selfconscious behavior, so called design science. In his very first book  Notes on the Synthesis of Forms, he has set what he wanted to do. He was inspired by traditional buildings, and tried to derive some 253 patterns for architectural design. Later on, he further distills 15 geometric properties to characterize living structure  ...\n  In his classic  A City is Not a Tree, he already had some primary ideas of complex networks, although he used semilattice rather than complex networks. In his first book  Notes on the synthesis of forms on page 65, he illustrated something that is in fact community or community structure in complex networks, a recent topic emerged around 2004:  community structure.\n   The  Center for Environmental Structure Series, made up of Foreshadowing of 21st Century Art: The Color and Geometry of Very Early Turkish Carpets (1993)\n     The Battle for the Life and Beauty of the Earth: A Struggle between Two World-Systems, with HansJoachim Neis and Maggie More Alexander (2012)\n      ^     a     b    &#34;Book of Members, 1780-2010: Chapter A&#34;  (PDF). American Academy of Arts and Sciences .\n     ^     a     b    Cunningham, Ward;  Mehaffy, Michael W. (2013).  &#34;Wiki as pattern language&#34;.  Proceedings of the 20th Conference on Pattern Languages of Programs, October 23\u201326, 2013, Monticello, Illinois. PLoP &#39;13. Corryton, TN:  The Hillside Group. pp.\u00a032:1\u201332:14.  ISBN\u00a0  9781941652008.\n   ^   results, search; results, search; results, search; results, search; Fiksdahl-King, Ingrid; Angel, Shlomo (7 June 1977).   A Pattern Language: Towns, Buildings, Construction. Oxford University Press.  ISBN\u00a0  978-0195019193.\n ^   Alexander, Christopher; Alexander, Professor in the Department of Architecture Christopher; Silverstein, Murray; Angel, Shlomo; Ishikawa, Sara; Abrams, Danny (7 June 1975).    The Oregon Experiment. Oxford University Press. p.\u00a0 42.  ISBN\u00a0  9780195018240 \u2013 via Internet Archive.  Christopher Alexander users of a building know more.\n ^   Gehl, Jan; Svarre, Birgitte (1 October 2013).   How to Study Public Life. Island Press.  ISBN\u00a0  9781610915250 \u2013 via Google Books.\n        ^  See Brian Hanson &amp; Samir Youn\u00e9s, &#34;Reuniting Urban Form and Urban Process: The Prince of Wales&#39;s Urban Design Task Force&#34;,  Journal of Urban Design, v.6, no.2 (June 2001), pp.185-209; Charles, Prince of Wales, speech at the &#34;Traditional Urbanism in Contemporary Practice&#34; conference at The Prince&#39;s Foundation, London, 20 November 2003.\n          ^     a     b    &#34;Archived copy&#34;. Archived from  the original on 16 February 2016 .  CS1 maint: archived copy as title ( link)\n ^   The Big Rethink: Transcend And include The Past, 24 April 2012 (accessed 5 January 2012)\n  ^   Kilov, H. &#34;Using RM-ODP to bridge communication gaps between stakeholders&#34;.  Communications H Kilov. Workshop on ODP for Enterprise Computing 2004.  CiteSeerX\u00a0  10.1.1.161.553.  Peter Naur proposed in 1968 to use Christopher Alexander&#39;s work\u2026\n ^   Dijkstra, E. (28 October 1976).   A Discipline of Programming (Facsimile ed.). Prentice Hall, Inc. pp.\u00a0 217.  ISBN\u00a0  978-0-13-215871-8.\n       ^   Jiang, Bin (27 March 2015). &#34;Wholeness as a Hierarchical Graph to Capture the Nature of Space&#34;.  International Journal of Geographical Information Science.  29 (9): 1632\u20131648.  arXiv:  1502.03554.  doi: 10.1080/13658816.2015.1038542.\n  Grabow, Stephen:  Christopher Alexander: The Search for a New Paradigm in Architecture, Routledge &amp; Kegan Paul, London and Boston, 1983.\n Leitner, Helmut:  Pattern Theory: Introduction and Perspectives on the Tracks of Christopher Alexander, Graz, 2015,   ISBN\u00a0 1505637430.\n Mehaffy, Michael:  Cities Alive: Jane Jacobs, Christopher Alexander, and the Roots of the New Urban Renaissance, Sustasis Press, 2017,   ISBN\u00a0 0989346994.", "posttime": "2020-05-03 16:42:50", "tags": "\u6a21\u5f0f\u8bed\u8a00,alexander,\u5efa\u7b51", "title": "\u514b\u91cc\u65af\u6258\u5f17\u00b7\u4e9a\u5386\u5c71\u5927\uff0c\u6a21\u5f0f\u8bed\u8a00\u8fd0\u52a8\u4e4b\u7236", "title_en": "Christopher Alexander, the father of the pattern language movement", "transed": 1, "url": "https://en.wikipedia.org/wiki/Christopher_Alexander", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6a21\u5f0f\u8bed\u8a00", "alexander", "\u5efa\u7b51"]}, {"category": "", "categoryclass": "", "imagename": "8c573f49f2dea1224a5557ebe508c918.jpg", "infoid": 1000464, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Didier Raoult\u6559\u6388\u8bf4\uff0c\u6709\u5173\u75c5\u6bd2\u4f20\u64ad\u7684\u6570\u636e\u8868\u660e\uff0c\u5b83\u5df2\u7ecf\u8fbe\u5230\u4e86\u201c\u949f\u5f62\u66f2\u7ebf\u201d\uff0c\u4ed6\u58f0\u79f0\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u6d41\u884c\u75c5\u5468\u671f\uff0c\u5e94\u8be5\u4f1a\u6392\u9664\u53cd\u5f39\u7684\u53ef\u80fd\u6027\u3002\n\u62c9\u4e4c\u5c14\u7279\u6559\u6388\u8bf4\uff1a\u7b2c\u4e8c\u6ce2\u7684\u6545\u4e8b\u662f\u4ece\u897f\u73ed\u7259\u6d41\u611f\u4e2d\u53d1\u660e\u51fa\u6765\u7684\u5947\u5e7b\u6545\u4e8b\uff0c\u59cb\u4e8e\u4eca\u5e74\u590f\u5929\uff0c\u4e0e\u4e4b\u65e0\u5173\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6d41\u884c\u75c5\u53d1\u751f\u5728\u4e00\u6761\u66f2\u7ebf\u4e0a\u3002\u6211\u4e0d\u60f3\u505a\u9884\u6d4b\uff0c\u4f46\u8fd9\u79cd\u6784\u5efa\u65b9\u5f0f\u5bf9\u4e8e\u6d41\u884c\u75c5\u6765\u8bf4\u662f\u76f8\u5f53\u666e\u904d\u7684\u3002\n\u201c\u5728\u8fc7\u53bb\uff0c\u6d41\u884c\u75c5\u5728\u6211\u4eec\u6709\u529e\u6cd5\u63a7\u5236\u5b83\u4eec\u4e4b\u524d\u5f88\u4e45\u5c31\u6d88\u5931\u4e86\u3002\u4ed6\u4eec\u8fd8\u662f\u6d88\u5931\u4e86\u3002\n\u4eba\u7c7b\u5e76\u6ca1\u6709\u6b7b\u4e8e\u6d41\u884c\u75c5\uff0c\u4e8b\u5b9e\u5c31\u662f\u5982\u6b64\u3002\u6d41\u884c\u75c5\u5f00\u59cb\u3001\u52a0\u901f\u3001\u8fbe\u5230\u9876\u5cf0\u3001\u6d88\u5931\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\u201c\u3002\n\u62c9\u4e4c\u5c14\u7279\u6559\u6388\u8868\u793a\uff0c\u6cd5\u56fd\u653f\u5e9c\u8ba1\u5212\u4ece5\u670811\u65e5\u5f00\u59cb\u653e\u677e\u5c01\u9501\u63aa\u65bd\uff0c\u8fd9\u662f\u5408\u7406\u7684\u3002\n\u4ed6\u8fd8\u652f\u6301\u65b0\u52a0\u5761\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u8be5\u7814\u7a76\u9884\u6d4b\u6cd5\u56fd97%\u7684\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u5c06\u57285\u67087\u65e5\u5de6\u53f3\u53d1\u751f\u3002\n\u62c9\u4e4c\u5c14\u7279\u6559\u6388\u8868\u793a\uff1a\u603b\u7edf\u63d0\u4f9b\u7684\u6570\u636e\u5e76\u4e0d\u5938\u5f20\u300297%\u7684\u75c5\u4f8b\u5c06\u53d1\u751f\u57285\u67087\u65e5\u5de6\u53f3\uff0c99%\u7684\u75c5\u4f8b\u53d1\u751f\u57285\u670819\u65e5\u5de6\u53f3\u3002\n\u8fd9\u662f\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u9650\u5236\u548c\u9694\u79bb\u53d7\u611f\u67d3\u7684\u4eba\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5230\u90a3\u65f6\u75c5\u6bd2\u7684\u4f20\u64ad\u7387\u5c06\u4f1a\u53d8\u5f97\u4f4e\u5f97\u591a\u3002\n\u6cd5\u56fd\u603b\u7406\u7231\u5fb7\u534e\u00b7\u83f2\u5229\u666e(Edouard Philippe)\u8868\u793a\uff0c\u6cd5\u56fd\u5c06\u4ece5\u670811\u65e5\u8d77\u91c7\u53d6\u79ef\u6781\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u8ba1\u5212\uff0c\u5e76\u8b66\u544a\u516c\u6c11\u5fc5\u987b\u9075\u5b88\u7eaa\u5f8b\uff0c\u4ee5\u907f\u514d\u65b0\u7684\u75ab\u60c5\u7206\u53d1\u3002\n\u83f2\u5229\u666e\u8868\u793a\uff0c\u5c01\u9501\u62ef\u6551\u4e86\u6570\u4e07\u4eba\u7684\u751f\u547d\uff0c\u4f46\u73b0\u5728\u662f\u653e\u677e\u548c\u5e73\u65f6\u671f\u524d\u6240\u672a\u6709\u7684\u9650\u5236\u3001\u62ef\u6551\u81ea\u7531\u843d\u4f53\u7ecf\u6d4e\u7684\u65f6\u5019\u4e86\u3002\n\u4f46\u4ed6\u8b66\u544a\u8bf4\uff0c\u5982\u679c\u6cd5\u56fd\u884c\u52a8\u592a\u5feb\uff0c\u4eba\u4eec\u53d8\u5f97\u81ea\u6ee1\uff0c\u611f\u67d3\u7387\u5c06\u4f1a\u87ba\u65cb\u5f0f\u4e0a\u5347\u3002\n\u4ed6\u8bf4\uff1a\u6211\u4eec\u6b63\u5904\u5728\u5200\u5203\u4e0a\u3002\u6211\u4e0d\u5f97\u4e0d\u5728\u7cdf\u7cd5\u7684\u51b3\u5b9a\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\n\u6211\u4eec\u5fc5\u987b\u4fdd\u62a4\u6cd5\u56fd\u4eba\u6c11\uff0c\u800c\u4e0d\u80fd\u4f7f\u6cd5\u56fd\u762b\u75ea\u5230\u5d29\u6e83\u7684\u5730\u6b65\u3002\n\u7a0d\u6709\u4e0d\u614e\uff0c\u75ab\u60c5\u5c31\u4f1a\u518d\u6b21\u8513\u5ef6\u3002\u592a\u8fc7\u8c28\u614e\uff0c\u6574\u4e2a\u56fd\u5bb6\u90fd\u4f1a\u5d29\u6e83\u3002\n\u4ece5\u670811\u65e5\u5f00\u59cb\uff0c\u5b66\u6821\u5c06\u9010\u6b65\u91cd\u65b0\u5f00\u5b66\uff0c\u4f01\u4e1a\u5c06\u81ea\u7531\u6062\u590d\u8fd0\u8425\u3002\n\u4e0d\u8fc7\uff0c\u9910\u9986\u3001\u5496\u5561\u9986\u548c\u6d77\u6ee9\u5c06\u81f3\u5c11\u5173\u95ed\u52306\u6708\uff0c\u800c\u804c\u4e1a\u4f53\u80b2\u6d3b\u52a8\u5c06\u6682\u505c\u52309\u6708\u3002\n\u8ba1\u5212\u7684\u65f6\u95f4\u8868\u53d6\u51b3\u4e8e\u6bcf\u5929\u65b0\u611f\u67d3\u51a0\u72b6\u75c5\u6bd2\u7684\u4eba\u6570\u4fdd\u6301\u57283000\u4eba\u4ee5\u4e0b\u3002\n\u83f2\u5229\u666e\u8868\u793a\uff0c\u5982\u679c\u611f\u67d3\u7387\u660e\u663e\u4e0a\u5347\uff0c\u884c\u653f\u90e8\u95e8\u88ab\u5212\u5206\u4e3a\u7ea2\u8272\u548c\u7eff\u8272\u533a\u57df\uff0c\u653f\u5e9c\u5c06\u51cf\u7f13\u6216\u63a8\u8fdf\u89e3\u9664\u5c01\u9501\u3002\n\u4ed6\u8bf4\uff1a\u5982\u679c\u6307\u6807\u4e0d\u591f\u597d\uff0c\u6211\u4eec\u4e0d\u4f1a\u57285\u670811\u65e5\u89e3\u9664\u5c01\u9501\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u505a\u5f97\u66f4\u4e25\u683c\u3002", "note_en": "Professor Didier Raoult said data on the spread of the virus suggested it had reached a \u201cbell curve\u201d which he claimed was a typical epidemic cycle which should rule out the prospect of a rebound.\n   Prof Raoult said: &#34;The second wave story is a fantasy that was invented from the Spanish flu, which started in the summer and has nothing to do with it.\n &#34;Usually an epidemic happens in one curve. I hate to make predictions, but this way of constructing it is fairly common for epidemics.\n \u201cIn the past, epidemics disappeared long before we had the means to contain them. They disappeared anyway.\n &#34;Humanity didn&#39;t die from an epidemic, that&#39;s the way it is. Epidemics start, accelerate, peak, disappear, and we don&#39;t know why.\u201d\n  Prof Raoult said the French government&#39;s plans to start easing lockdown measures on May 11 was justified.\n He also backed the results of a study carried out by Singaporean researchers who predicted 97 percent of COVID-19 cases in France would have happened by around May 7.\n Prof Raoult said: &#34;The data provided by the president is not extravagant. 97 percent of the cases will have occurred around 7th May and 99 percent around 19th May.\n &#34;This is the time when we should be able to confine and isolate infected people, knowing that by then the virus transmission will have become much lower.&#34;\n   Prime Minister Edouard Philippe said France would adopt an aggressive programme of COVID-19 testing from May 11 and warned citizens had to be disciplined to avoid a new outbreak.\n Mr Philippe said the lockdown had saved tens of thousands of lives but that the time had come to ease the unprecedented peacetime restrictions and rescue an economy in free-fall.\n But he warned that the infection rate would spiral if France moved too swiftly and people became complacent.\n  He said: &#34;We are on a knife&#39;s edge. I am having to choose between bad decisions.\n &#34;We must protect the French people without paralysing France to the point that it collapses.\n &#34;A little too much carefreeness and the epidemic takes off again. Too much prudence and the whole country buckles.&#34;\n    From May 11, schools will gradually reopen and businesses will be free to resume operations.\n Restaurants, cafes and beaches, though, will remain closed until at least June, while professional sports are suspended until September.\n  The planned timeline hinges on the number of new coronavirus infections remaining below 3,000 per day.\n Mr Philippe said the government would slow or delay the unwinding of the lockdown if the infection rate spiked markedly higher with administrative departments divided into red and green zones.\n He said: &#34;If the indicators are not good enough, we won&#39;t unwind the lockdown on May 11, or we will do it more strictly.&#34;", "posttime": "2020-05-03 16:42:31", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u4e13\u5bb6,\u6d41\u884c\u75c5", "title": "\u6cd5\u56fd\u51a0\u72b6\u75c5\u6bd2\u4e13\u5bb6\u9a73\u65a5\u7b2c\u4e8c\u6ce2\u6050\u60e7\u5c06\u8b66\u544a\u5b9a\u6027\u4e3a\u5e7b\u60f3", "title_en": "French coronavirus expert REJECTS second wave fears branding warnings a fantasy", "transed": 1, "url": "https://www.express.co.uk/news/world/1275573/france-coronavirus-latest-news-second-wave-covid19-lockdown-updates", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u4e13\u5bb6", "\u6d41\u884c\u75c5"]}, {"category": "", "categoryclass": "", "imagename": "0523d9e23a4f0a6427f23cbd05bf57f2.jpg", "infoid": 1000463, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ebf\u4e07\u5bcc\u7fc1\u6295\u8d44\u8005\u6c83\u4f26\u00b7\u5df4\u83f2\u7279\u8868\u793a\uff0c\u4ed6\u7684\u516c\u53f8\u4f2f\u514b\u5e0c\u5c14\u00b7\u54c8\u6492\u97e6\u5df2\u7ecf\u51fa\u552e\u4e86\u7f8e\u56fd\u56db\u5927\u822a\u7a7a\u516c\u53f8\u7684\u6240\u6709\u80a1\u4efd\u3002\n\u5df4\u83f2\u7279\u5728\u5e74\u5ea6\u80a1\u4e1c\u5927\u4f1a\u4e0a\u53d1\u8868\u8bb2\u8bdd\u65f6\u8868\u793a\uff0c\u51a0\u72b6\u75c5\u6bd2\u6539\u53d8\u4e86\u4e16\u754c\u3002\n\u636e\u8def\u900f\u793e\u62a5\u9053\uff0c\u5c31\u5728\u5df4\u83f2\u7279\u53d1\u8868\u8bc4\u8bba\u7684\u51e0\u4e2a\u5c0f\u65f6\u524d\uff0c\u4f2f\u514b\u5e0c\u5c14\u54c8\u6492\u97e6\u516c\u53f8\u5ba3\u5e03\u7b2c\u4e00\u5b63\u5ea6\u51c0\u4e8f\u635f\u8fbe\u5230\u521b\u7eaa\u5f55\u7684500\u4ebf\u7f8e\u5143(400\u4ebf\u82f1\u9551)\u3002\n\u6839\u636e\u5176\u5e74\u62a5\u548c\u516c\u53f8\u5907\u6848\u6587\u4ef6\uff0c\u8be5\u96c6\u56e2\u6301\u6709\u8fbe\u7f8e\u822a\u7a7a\u516c\u53f811%\u7684\u80a1\u4efd\uff0c\u7f8e\u56fd\u822a\u7a7a\u516c\u53f810%\u7684\u80a1\u4efd\uff0c\u897f\u5357\u822a\u7a7a\u516c\u53f810%\u7684\u80a1\u4efd\uff0c\u8054\u5408\u822a\u7a7a\u516c\u53f89%\u7684\u80a1\u4efd\u3002\n\u8be5\u516c\u53f8\u5728\u907f\u5f00\u822a\u7a7a\u4e1a\u591a\u5e74\u540e\uff0c\u4e8e2016\u5e74\u5f00\u59cb\u6295\u8d44\u8fd9\u56db\u5bb6\u822a\u7a7a\u516c\u53f8\u3002\n\u5df4\u83f2\u7279\u5728\u5b9e\u9645\u4e0a\u4e3e\u884c\u7684\u4f1a\u8bae\u4e0a\u8868\u793a\uff1a\u6211\u4eec\u662f\u5728\u822a\u7a7a\u516c\u53f8\u4e1a\u52a1\u65b9\u9762\u505a\u51fa\u8fd9\u4e00\u51b3\u5b9a\u7684\u3002\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5728\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u628a\u94b1\u4ece\u4f01\u4e1a\u91cc\u62ff\u51fa\u6765\u7684\u3002\n\u6211\u4eec\u4e0d\u4f1a\u8d44\u52a9\u4e00\u5bb6\u2026\u2026\u7684\u516c\u53f8\u3002\u6211\u4eec\u8ba4\u4e3a\u5b83\u5728\u672a\u6765\u4f1a\u5403\u6389\u94b1\u7684\u5730\u65b9\u3002&#34\uff1b\n\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\uff0c\u7f8e\u56fd\u65c5\u6e38\u4e1a\u51e0\u4e4e\u5d29\u6e83\uff0c\u822a\u7a7a\u516c\u53f8\u53d6\u6d88\u4e86\u6570\u5341\u4e07\u4e2a\u822a\u73ed\uff0c\u6570\u5343\u67b6\u98de\u673a\u505c\u6b62\u670d\u52a1\u3002\n\u5df4\u83f2\u7279\u8868\u793a\uff0c\u5728\u75ab\u60c5\u6765\u88ad\u4e4b\u524d\uff0c\u4ed6\u4e00\u76f4\u5728\u8003\u8651\u6295\u8d44\u66f4\u591a\u7684\u822a\u7a7a\u516c\u53f8\u3002\n\u4ed6\u8bf4\uff0c\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u4f60\u7684\u9700\u6c42\u67af\u7aed\u662f\u4e00\u4e2a\u6253\u51fb\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u56fd\u5bb6\u7981\u6b62\u822a\u7a7a\u65c5\u884c\u3002\n\u8fbe\u7f8e\u822a\u7a7a\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u5b83\u77e5\u9053\u8fd9\u7b14\u4ea4\u6613\uff0c\u5e76\u5bf9\u5df4\u83f2\u7279\u548c\u4f2f\u514b\u5e0c\u5c14\u56e2\u961f\u6000\u6709\u6781\u5927\u7684\u656c\u610f\u3002", "note_en": "Billionaire investor Warren Buffett says his company Berkshire Hathaway has sold all of its shares in the four largest US airlines.\n Speaking at the annual shareholders&#39; meeting, Mr Buffett said &#34;the world has changed&#34; because of the coronavirus.\n  Mr Buffett&#39;s comments came just hours after Berkshire Hathaway announced a record $50bn (\u00a340bn) net first quarter loss, Reuters news agency reports.\n The conglomerate had an 11% stake in Delta Air Lines, 10% of American Airlines, 10% of Southwest Airlines, and 9% of United Airlines, according to its annual report and company filings.\n  The firm began investing in the four airlines in 2016, after avoiding the aviation industry for years.\n  Mr Buffett told the meeting, which was held virtually: &#34;We made that decision in terms of the airline business. We took money out of the business basically even at a substantial loss.\n &#34;We will not fund a company that... where we think that it is going to chew up money in the future.&#34;\n  The US travel industry has almost collapsed as a result of the coronavirus pandemic, with airlines cutting hundreds of thousands of flights and taking thousands of planes out of service.\n Mr Buffett said he had been considering investing in additional airlines before the pandemic hit.\n &#34;It is a blow to have, essentially, your demand dry up,&#34; he said. &#34;It is basically that we shut off air travel in this country.&#34;\n  In a statement, Delta said it was aware of the sale and has &#34;tremendous respect for Mr Buffett and the Berkshire team&#34;.", "posttime": "2020-05-03 15:54:59", "tags": "\u5df4\u83f2\u7279,\u4f2f\u514b\u5e0c\u5c14,\u51fa\u552e,buffett,airlines", "title": "\u6c83\u4f26\u00b7\u5df4\u83f2\u7279\u7684\u516c\u53f8\u4f2f\u514b\u5e0c\u5c14\u00b7\u54c8\u6492\u97e6\u51fa\u552e\u5176\u6301\u6709\u7684\u6240\u6709\u7f8e\u56fd\u822a\u7a7a\u516c\u53f8\u80a1\u7968", "title_en": "Warren Buffett's company Berkshire Hathaway sells all of its US airline shares", "transed": 1, "url": "https://www.bbc.co.uk/news/world-us-canada-52518186", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5df4\u83f2\u7279", "\u4f2f\u514b\u5e0c\u5c14", "\u51fa\u552e", "buffett", "airlines"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000462, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee3\u7801\u5c31\u662f\u6570\u636e\uff0c\u8fd9\u4e00\u516c\u7406\u5728\u4eba\u4eec\u4e0d\u5f97\u4e0d\u5e8f\u5217\u5316\u67d0\u4e9b\u51fd\u6570\u4e4b\u524d\u662f\u6210\u7acb\u7684\u3002\u4f7f\u95ee\u9898\u8fdb\u4e00\u6b65\u590d\u6742\u5316\u7684\u662f\uff0c\u6709\u65f6\u6570\u636e\u662f\u53d8\u76f8\u7684\u51fd\u6570\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5e8f\u5217\u5b9e\u9645\u4e0a\u662f\u903b\u8f91\u5217\u8868\u3002\u5982\u4f55\u5c06\u65e0\u9650\u5e8f\u5217\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u6216\u8005\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u95ed\u5305\uff1f\n\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u662f\u4e00\u4e2a\u4e0d\u80fd\u6253\u5f00\u5e76\u968f\u65f6\u5171\u4eab\u7684\u9ed1\u76d2\uff0c\u90a3\u4e48\u4eba\u4eec\u81f3\u5c11\u53ef\u4ee5\u63cf\u8ff0\u8fd9\u4e2a\u9ed1\u76d2\u505a\u4e86\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u4e0d\u6210\u529f\u5730\u5173\u6ce8\u5b83\u662f\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\n(\u8981\u6c42&#39\uff1b[dvlopt.fdat\uff1aas FDAT\uff1arefer[\uff1f]]&#39\uff1b[dvlopt.fdat.plugins.nippy\uff1aas fdat.plugins.nippy])&#39\uff1b[taoensso.nippy\uff1aas nippy])(fdat.plugins.nippy/init)(\uff1f(defn hello[x](str&#34\uff1bHello&#34\uff1bx)(FDAT/\u5bc4\u5b58\u5668[hello])(def ba(nippy/Freeze hello))(def hello-2(nippy/thaw ba))(println(hello&#34\uff1bworld&#34\uff1b))\u3002\n\u8fd9\u6bb5\u7b80\u77ed\u7684\u6458\u5f55\u4ecb\u7ecd\u4e86\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a\u901a\u8fc7\u4f7f\u7528\uff1f\u8c28\u614e\u5730\u8ddf\u8e2a&#34\uff1b\u51fd\u6570\u662f\u4ec0\u4e48\uff1f\u5b8f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u662f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5e8f\u5217\u5316\u7684\u6570\u636e\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u6ce8\u518c\u8868\uff0c\u4ee5\u4fbf\u77e5\u9053\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u77e5\u8bc6\u3002\n\u60a8\u53ef\u4ee5\u968f\u610f\u514b\u9686\u6b64Repo\u5e76\u542f\u52a8REPL\uff0c\u6240\u6709\u793a\u4f8b\u90fd\u5728./dev/user.clj\u4e2d\uff1a\n\u51fd\u6570\u662fIMeta\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u4fdd\u5b58\u5143\u6570\u636e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u4e00\u5207\u90fd\u9002\u7528\u4e8e\u6240\u6709\u7684IMETA\u3002\u5e8f\u5217\u662f\u53e6\u4e00\u4e2a\u6709\u7528\u7684\u4f8b\u5b50\uff0c\u7a0d\u540e\u6211\u4eec\u751a\u81f3\u4f1a\u770b\u5230\u6240\u6709\u8fd9\u4e9b\u5bf9\u4e8e\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u90fd\u662f\u5982\u4f55\u6709\u7528\u7684\u3002\n\u90a3\u4e2a\uff1f\u5b8f\u80fd\u591f\u5206\u6790\u751f\u6210IMeta\u7684\u8868\u5355\uff0c\u5e76\u5728\u5176\u5143\u6570\u636e\u4e2d\u5bf9\u5176\u8fdb\u884c\u6ce8\u91ca\u3002\n\u4e3a\u4e86\u4ece\u6211\u4eec\u7684\u8ba1\u5212\u4e2d\u83b7\u76ca\uff0cIMETA\u5fc5\u987b\u6709\u4e00\u4e2a\u5bc6\u94a5\uff0c\u8be5\u5bc6\u94a5\u5728\u6211\u4eec\u8ba8\u8bba\u6ce8\u518c\u65f6\u5177\u6709\u7279\u6b8a\u7684\u610f\u4e49\u3002\u5b8f\u4eceDefn\u4e2d\u7684\u540d\u79f0\u6d3e\u751f\u5bc6\u94a5\u3002\u5bc6\u94a5\u5fc5\u987b\u59cb\u7ec8\u662f\u5408\u683c\u7684\u3002\u81ea\u52a8\u63d0\u53d6\u7279\u522b\u65b9\u4fbf\u3002\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\u663e\u5f0f\u63d0\u4f9b\u5bc6\u94a5\u5f88\u6709\u7528\uff1a", "note_en": "Code is data, this axiom holds true until one has to serialize some functions.To further complicate the issue, sometimes data is a function in disguise.Notoriously, sequences are indeed &#34;logical lists&#34;. How could one save aninfinite sequence to a file, or send a closure over the wire?\n If a function is a black box one cannot open and readily share, them one can atleast describe &#34;what&#34; this black box do instead of unsuccessfully focusing on&#34;how&#34; it does it.\n  ( require &#39;[dvlopt.fdat  :as fdat  :refer [?]] &#39;[dvlopt.fdat.plugins.nippy  :as fdat.plugins.nippy]) &#39;[taoensso.nippy  :as nippy])( fdat.plugins.nippy/init)( ? ( defn  hello [x] ( str   &#34;Hello  &#34; x)))( fdat/register [hello])( def  ba ( nippy/freeze hello))( def  hello-2 ( nippy/thaw ba))( println ( hello   &#34;world &#34;))\n This small excerpt introduces two important notions: discreetly keeping track of&#34;what&#34; a function is by using the  ? macro, this information being data that wecan easily serialize, and maintaining a  registry that we use in order to knowwhat to do with that knowledge at deserialization.\n  Feel free to clone this repo and start a REPL, all examples are in ./dev/user.clj :\n           Functions are  IMetas, meaning they can hold metadata. Actually, everything wewill discuss applies to all  IMetas. Sequences are one other useful example.Later, we will even see how all of this is useful for any data structure.\n The  ? macro is capable of analyzing a form producing an  IMeta and annotatingit in its metadata.\n   In order to benefit from our scheme, an  IMeta must have a  key which willhold a special meaning when we will discuss  registries. The macro derives thekey from the name in  defn. A key must be always qualified. The automaticextraction is particularly convenient. In rare cases, we may find it useful toexplicitly provide a key:", "posttime": "2020-05-03 15:31:26", "tags": "\u5e8f\u5217\u5316,functions,\u6570\u636e,data", "title": "Clojure\u4e2d\u7684\u53ef\u5e8f\u5217\u5316\u51fd\u6570", "title_en": "Serializable Functions in Clojure", "transed": 1, "url": "https://github.com/dvlopt/fdat.cljc", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5e8f\u5217\u5316", "functions", "\u6570\u636e", "data"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000461, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8fc7\u53bb\u8bfb\u8fc7\u4e00\u4e9b\u5173\u4e8e\u4eba\u4eec\u88ab\u8c37\u6b4c\u8d26\u6237\u62d2\u4e4b\u95e8\u5916\u7684\u6050\u6016\u6545\u4e8b\u3002\u5982\u679c\u4f60\u548c\u6211\u6709\u4ec0\u4e48\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f60\u4e00\u534a\u7684\u6570\u5b57\u751f\u6d3b\u90fd\u5b58\u50a8\u5728\u8c37\u6b4c\u91cc\u3002\u5931\u53bb\u5bf9\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u7684\u8bbf\u95ee\u5145\u5176\u91cf\u4e5f\u662f\u4e00\u79cd\u521b\u4f24\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u6b63\u5728\u7814\u7a76\u5f53\u60a8\u5fd8\u8bb0\u5bc6\u7801\u6216\u4e22\u5931\u624b\u673a\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u8c37\u6b4c\u60f3\u77e5\u9053\u5173\u4e8e\u4f60\u7684\u54ea\u4e9b\u4fe1\u606f\uff0c\u4f60\u5982\u4f55\u624d\u80fd\u6700\u597d\u5730\u4e3a\u8fd9\u79cd\u60c5\u51b5\u505a\u597d\u51c6\u5907\uff0c\u8fd9\u6837\u4f60\u5c31\u4e0d\u4f1a\u5b8c\u5168\u5931\u53bb\u5bf9\u4f60\u8d26\u6237\u7684\u8bbf\u95ee\u6743\u9650\u3002\n\u5728\u8fc7\u53bb\u768412\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u4f7f\u7528\u540c\u4e00\u4e2a\u8c37\u6b4c\u8d26\u62371\u3002\u8001\u5b9e\u8bf4\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u66f4\u6539\u8fc7\u5bc6\u7801\uff0c\u4e5f\u4ece\u6765\u6ca1\u6709\u6253\u5f00\u8fc72\u6b65\u9a8c\u8bc12\uff0c\u56e0\u4e3a\u6211\u62c5\u5fc3\u6211\u7684\u624b\u673a\u4f1a\u4e22\u5931\uff0c\u6216\u8005\u5fd8\u8bb0\u4e86\u5bc6\u7801\uff0c\u6211\u5c31\u518d\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u6211\u7684\u8d26\u6237\u4e86\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u53ef\u6301\u7eed\u7684\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5f53\u4f60\u5fd8\u8bb0\u5bc6\u7801\u6216\u624b\u673a\u4e22\u5931\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u7b2c\u4e00\u6b65-\u5bc6\u7801(\u5fc5\u586b)-\u8981\u8bc1\u660e\u771f\u7684\u662f\u60a8\uff0c\u60a8\u9700\u8981\u5411Google\u63d0\u4f9b\u6587\u672c\u5bc6\u7801\u3002\n\u7b2c\u4e8c\u6b65-\u4f60\u7684\u624b\u673a(\u53ef\u9009)-\u8c37\u6b4c\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5f0f(\u77ed\u4fe1\uff0c\u901a\u77e5\uff0c\u8ba4\u8bc1\u5e94\u7528\u7a0b\u5e8f)\u6765\u8ba9\u4f60\u7684\u624b\u673a\u552f\u4e00\u5730\u8bc6\u522b\u4f60\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b89\u5168\u5bc6\u94a5\u6216\u5bc6\u7801\u7ba1\u7406\u5668\u751f\u6210\u7684\u5bc6\u94a5\uff0c\u4f46\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7535\u8bdd\u793a\u4f8b\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u5c06\u4f60\u77e5\u9053\u7684\u4e1c\u897f(\u5bc6\u7801)\u548c\u4f60\u62e5\u6709\u7684\u4e1c\u897f(\u624b\u673a)\u7ed3\u5408\u8d77\u6765\uff0c\u4f7f\u522b\u4eba\u66f4\u96be\u5192\u5145\u4f60(\u4f8b\u5982\uff0c\u901a\u8fc7\u6b3a\u9a97\u4f60\u5728\u5047\u767b\u5f55\u5bf9\u8bdd\u4e2d\u8f93\u5165\u5bc6\u7801)\u3002\n\u5f53\u60a8\u6309\u7167Google\u6307\u5357\u4e2d\u7684\u6b65\u9aa4\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u4f1a\u8be2\u95ee\u60a8\u5e0c\u671b\u4f7f\u7528\u4ee5\u4e0b\u54ea\u4e2a\u9009\u9879\uff1a\n\u7136\u540e\u8c37\u6b4c\u4f1a\u95ee\u6211\u662f\u5426\u613f\u610f\u4f7f\u7528\u5907\u7528\u53f7\u7801\uff0c\u4ee5\u9632\u4f60\u5f04\u4e22\u6211\u7684\u624b\u673a\u3002\u4f46\u662f\u5982\u679c\u6211\u7684\u624b\u673a\u4e22\u4e86\uff0c\u6211\u7684\u53f7\u7801\u4e5f\u5c31\u6ca1\u4e86\uff0c\u56e0\u4e3a\u6211\u603b\u662f\u7528\u9884\u4ed8\u8d39\u7684\u3002\u6211\u9009\u62e9\u4e86\u5907\u4efd\u4ee3\u7801\u3002\u5b83\u4eec\u662f\u4e00\u6b21\u6027\u4ee3\u7801\uff0c\u6bd4\u7535\u8bdd\u53f7\u7801\u66f4\u901a\u7528\u3002\n\u63d0\u793a1\uff1a\u5c06\u5907\u4efd\u5bc6\u94a5\u5b58\u50a8\u5728\u5bc6\u7801\u7ba1\u7406\u5668\u4e2d\uff0c\u8fd9\u6837\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u5e26\u624b\u673a\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u767b\u5f55\u3002\n\u4f60\u7684\u624b\u673a\u4e22\u4e86\uff0c\u4f60\u7684\u72d7\u5403\u4e86\u4f60\u7684\u5907\u4efd\u4ee3\u7801\u3002\u6216\u8005\u4f60\u6709\u80a5\u7682\u5267\u7ea7\u522b\u7684\u5065\u5fd8\u75c7\uff0c\u4f60\u4e0d\u8bb0\u5f97\u4f60\u7684\u5bc6\u7801\u3002\u60a8\u5982\u4f55\u8bbf\u95ee\u60a8\u7684Google\u5e10\u6237\uff1f\n\u8c37\u6b4c\u7528\u6765\u8bc4\u4f30\u4f60\u8eab\u4efd\u7684\u7b97\u6cd5\u5e76\u4e0d\u662f\u516c\u5f00\u7684\u3002\u4ee5\u4e0b\u662f\u8c37\u6b4c\u60f3\u4ece\u4f60\u90a3\u91cc\u77e5\u9053\u7684\u4e8b\u60c5\uff1a\n\u8981\u6c42\u4ee5\u4e66\u9762\u5f62\u5f0f\u63d0\u4f9b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f(\u4f8b\u5982\u60a8\u521b\u5efa\u5e10\u6237\u7684\u65f6\u95f4\uff0c\u5982\u679c\u60a8\u6b63\u5728\u65c5\u884c)\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u60a8\u5145\u5206\u56de\u7b54\u4e86\u6240\u6709\u8fd9\u4e9b\u95ee\u9898(\u6700\u597d\u662f\u4ece\u60a8\u901a\u5e38\u4f7f\u7528\u7684\u76f8\u540c\u6d4f\u89c8\u5668\u548cIP\u5730\u5740)\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u91cd\u7f6e\u5bc6\u7801\u7684\u9875\u9762\u7684\u94fe\u63a5\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u5f88\u597d\u5730\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u8c37\u6b4c\u5c06\u4e0d\u4f1a\u6388\u4e88\u4f60\u8bbf\u95ee\u4f60\u7684\u8d26\u6237\u7684\u6743\u9650\uff0c\u5b83\u5efa\u8bae\u4f60\u5fd8\u4e86\u5b83\uff0c\u5f00\u59cb\u4e00\u4e2a\u65b0\u76844\u3002\n\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u4f60\u5c31\u662f\u623f\u4e3b\u3002\u4e3a\u4e86\u4fdd\u62a4\u5e10\u6237\u7684\u5b89\u5168\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u786e\u8ba4\u6240\u6709\u8005\u662f\u8c01\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8fd9\u4e9b\u5e10\u6237\u3002\n\u4e3a\u4ed6\u7684\u60c5\u51b5\u505a\u597d\u51c6\u5907\u7684\u6700\u597d\u65b9\u6cd5\u662f\u8ba9\u4f60\u6240\u6709\u7684\u6062\u590d\u4fe1\u606f\u90fd\u662f\u6700\u65b0\u7684\u3002\u6211\u4e0d\u786e\u5b9a\u6240\u6709\u8fd9\u4e9b\u6062\u590d\u9009\u9879\u5bf9\u5b89\u5168\u6027\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u5728\u6211\u770b\u6765\uff0c\u5982\u679c\u4f60\u63d0\u4f9b\u4e86\u592a\u591a\u7684\u65b9\u6cd5\u6765\u91cd\u7f6e\u4f60\u7684\u8d26\u6237\u5bc6\u7801\uff0c\u5176\u4ed6\u4eba\u4e5f\u4f1a\u66f4\u5bb9\u6613\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u4ee5\u6211\u7684\u7406\u89e3\uff0c\u5982\u679c\u4f60\u5230\u4e86\u201c\u8d26\u6237\u6062\u590d\u201d\u9636\u6bb5\uff0c\u4f60\u5c31\u4e0d\u80fd\u786e\u5b9a\u4f60\u80fd\u4e0d\u80fd\u62ff\u56de\u4f60\u7684\u8d26\u6237\u3002\u6700\u6709\u53ef\u80fd\u7684\u662f\uff0c\u6709\u6700\u65b0\u7684\u6062\u590d\u7535\u5b50\u90ae\u4ef6\u548c\u7535\u8bdd\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u5982\u679c\u4f60\u7684IP\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u770b\u8d77\u6765\u771f\u7684\u5f88\u53ef\u7591(\u4e5f\u8bb8\u662f\u53bb\u6cf0\u56fd\u65c5\u884c)\u5462\uff1f\u6211\u7684\u53e6\u4e00\u4e2a\u8c37\u6b4c\u8d26\u6237\u5b9e\u9645\u4e0a\u5df2\u7ecf\u505c\u7528\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4ee5\u81f3\u4e8e\u5f53\u6211\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u8c37\u6b4c\u4e0d\u4fe1\u4efb\u6211\uff0c\u800c\u4e14\u6ca1\u6709\u529e\u6cd5\u6062\u590d\u3002\n\u5bf9\u4e8e\u8d85\u7ea7\u504f\u6267\u72c2\u6765\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u9009\u62e9\u3002\u5907\u4efd\u60a8\u7684\u6240\u6709\u6570\u636e\u3002\u5c3d\u7ba1\u6211\u4e0d\u559c\u6b22\u8c37\u6b4c\u7684\u6240\u6709\u4e8b\u60c5\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u7ed9\u4e86\u4f60\u5b8c\u5168\u8bbf\u95ee\u4f60\u7684\u6570\u636e\u7684\u6743\u9650\u3002\u8bbf\u95eeGoogle\u5916\u5356\uff0c\u5728\u672c\u5730\u5907\u4efd\u6240\u6709\u6570\u636e(\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u611f\u5174\u8da3\u7684\u662f2.8 GB\u7684\u7535\u5b50\u90ae\u4ef6)\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u6709\u5176\u81ea\u8eab\u7684\u98ce\u9669\u3002\u6211\u5f3a\u70c8\u5efa\u8bae\u5bf9\u5907\u4efd\u8fdb\u884c\u52a0\u5bc6\uff0c\u5426\u5219\u60a8\u7684\u5728\u7ebf\u751f\u6d3b\u7684\u5f88\u5927\u4e00\u90e8\u5206\u5185\u5bb9\u5c06\u4ee5\u660e\u6587\u5f62\u5f0f\u5b58\u50a8\u5728\u60a8\u7684\u786c\u76d8\u4e0a\u3002\n\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e2e\u52a9\u60a8\u7406\u89e3\u5982\u679c\u5fd8\u8bb0/\u4e22\u5931\u51ed\u636e/\u624b\u673a\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6211\u5bf9\u6211\u7684\u8d26\u6237\u7684\u5b89\u5168\u548c\u5982\u4f55\u5728\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u65f6\u5982\u4f55\u6062\u590d\u90fd\u66f4\u6709\u4fe1\u5fc3\u3002\n\u5982\u679c\u4f60\u6709\u4ec0\u4e48\u60f3\u6cd5\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u6d17\u8033\u606d\u542c\u3002\u70b9\u51fb\u8be5\u6309\u94ae\u5c06\u5728Google Docs\u4e2d\u6253\u5f00\u8fd9\u7bc7\u6587\u7ae0\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u7559\u4e0b\u60a8\u7684\u8bc4\u8bba\u3002", "note_en": "I was reading horror stories in the past about people getting locked out of their Google accounts. If you are anything like me, half of your digital life is stored in Google. Losing access to all this data would be traumatic at best.\n In this article I\u2019m researching what happens when you forget your password or lose your phone. What information will Google want to know about you and how can you best prepare for this situation so you don\u2019t lose access to your account completely.\n I\u2019ve been using the same Google account for the last 12 years  1. And to be honest, I\u2019ve never changed the password and never turned on the 2-Step Verification  2 because I was afraid that I\u2019ll lose my phone or forget my password and I won\u2019t be able to access my account any more. I think this is not sustainable, so let\u2019s have a look at what happens when you forget your password or you lose your phone.\n  1st step -  Password (mandatory) - To prove that it is really you, you need to provide Google with a text password\n 2nd step -  You phone (optional) - Google uses different means (SMS, notifications, authenticator app) to enable your phone to uniquely identify you. On top of that it\u2019s possible to use Security keys or keys generated by your password manager, but for simplicity we\u2019ll use the phone example.\n This approach combines something you know (password) with something you have (phone) to make it much harder for someone to impersonate you (e.g. by tricking you to enter a password into a fake log-in dialogue).\n   When you follow the steps in  Google\u2019s guide, you get asked which of the following options would you\u2019d like to use:\n   Then Google asks whether I\u2019d like to use a backup number in case you lose my phone. But if I lose my phone my number is gone too since I always use prepaid. I chose to get  backup codes instead. They are single-use codes that are more versatile than a phone number.\n Tip 1: Store your backup keys in your password manager so if you don\u2019t have your phone on you, you can still log in.\n  You lost your phone and your dog ate your backup codes. Or you are having soap opera level amnesia and you don\u2019t remember your password. How do you access your Google account?\n  The algorithm used by google to evaluate your identity is not openly known. Here are the things Google will want to know from you:\n Request for providing additional details in writing (e.g. when you created your account, if you are travelling)\n Now if you answer all of these sufficiently (and ideally from the same browser and IP address that you usually use), you are going to get a link to a page where you reset your password.\n If you don\u2019t answer these questions well enough, Google won\u2019t grant you access to your account and it recommends that you forget about it and start a new one  4.\n We couldn\u2019t be sure that you\u2019re the owner. To keep accounts safe, we can\u2019t give access to them if we can\u2019t confirm who the owner is.\n  The best way to prepare for his situation is to have all your recovery information up to date. I\u2019m not sure how all these recovery options affect the security. It seems to me that if you provide too many ways how to reset your account\u2019s password, it makes it easier for someone else to do it as well.\n  The way I understand it, if you get to the \u201cAccount recovery\u201d phase, you can\u2019t be certain that you are going to get your account back. Most likely having your recovery email and phone up to date is going to be enough, but what if your IP looks really suspicious for some reason (trip to Thailand maybe)? One of my other Google accounts actually have been inactive for so long that Google doesn\u2019t trust me when I enter the password and there\u2019s no way to recover.\n There is one more option for super paranoid people. Backup all your data. For all things I dislike about Google, they do give you full access to your data. Visit  Google Takeout to back up all your data locally (for me it is 2.8GB of email that I\u2019m interested in). This approach brings its own risks. I\u2019d strongly recommend encrypting the backup otherwise you have a big portion of your online life lying in a plaintext on your hard drive.\n  I hope this article helped you to understand what might happen if you forget/lose your credentials/phone. I feel much more confident about both the security of my account and how to recover it should the situation arise.\n   Please, if you&#39;d like to share any thoughts, I&#39;m all ears. Clicking the button will open this article in Google Docs where you can leave your comments.", "posttime": "2020-05-03 15:31:20", "tags": "google,\u8c37\u6b4c,\u5bc6\u7801", "title": "\u5982\u679c\u4f60\u4e22\u4e86\u4f60\u7684\u8c37\u6b4c\u8d26\u6237\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f", "title_en": "What would you do if you lost your Google account?", "transed": 1, "url": "https://blog.viktomas.com/posts/losing-google-account/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["google", "\u8c37\u6b4c", "\u5bc6\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000460, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fbe\u5230\u9884\u8d2d\u76ee\u6807\u4e00\u4e2a\u6708\u540e\u5f00\u59cb\u53d1\u8d27\u3002\u73b0\u5728\u5c31\u9884\u8ba2\u60a8\u7684Librem Mini\uff0c\u4ee5\u4fbf\u6392\u5728\u961f\u5217\u7684\u524d\u9762\u3002\n\u9884\u8d2dLibrem Mini\u3002\n\n\u82f1\u7279\u5c14\u9177\u777fi7-8565U(\u5a01\u58eb\u5fcc\u6e56)\uff0c\u4e3b\u52a8(\u98ce\u6247)\u51b7\u53744\u6838\uff0c8\u4e2a\u7ebf\u7a0b\uff0c\u6700\u9ad84.6 GHz", "note_en": "Shipping starts one month after reaching the pre-order goal. Pre-order your Librem Mini now to be earlier in the queue.\n  Pre-Order Librem Mini\n   \n Intel Core i7-8565U (Whiskey Lake), Active (fan) Cooling  4 Cores, 8 Threads, up to 4.6GHz", "posttime": "2020-05-03 15:31:10", "tags": "librem,mini,\u9884\u8d2d,order", "title": "Librem Mini\uff1a\u4e00\u6b3e\u5c06\u81ea\u7531\u3001\u9690\u79c1\u548c\u5b89\u5168\u653e\u5728\u9996\u4f4d\u7684\u8ff7\u4f60PC", "title_en": "Librem Mini: A mini-PC that puts freedom, privacy and security first", "transed": 1, "url": "https://puri.sm/products/librem-mini/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["librem", "mini", "\u9884\u8d2d", "order"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000459, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "4\u5468\u5185\u53ef\u65e0\u9650\u5236\u4eab\u53d7\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u503c\u5f97\u4fe1\u8d56\u3001\u5c61\u83b7\u6b8a\u8363\u7684\u5546\u4e1a\u65b0\u95fb\u7684\u65e0\u9650\u91cf\u9ad8\u7ea7\u6570\u5b57\u8bbf\u95ee\u3002\n\u793c\u54c1-\u6bcf\u6708\u4e0e\u5bb6\u4eba\u3001\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u591a\u8fbe10\u7bc7\u6587\u7ae0\u3002\n\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u5468\u4e00\u81f3\u5468\u516d\u9001\u5230\u4f60\u5bb6\u6216\u529e\u516c\u5ba4\uff0c\u5305\u62ec\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u5468\u672b\u62a5\u7eb8\u548c\u526f\u520a", "note_en": "For 4 weeks receive unlimited Premium digital access to the FT&#39;s trusted, award-winning business news\n  Gift Article \u2013 share up to 10 articles a month with family, friends and colleagues\n  The FT delivered to your home or office Monday to Saturday, including the FT Weekend paper and supplements", "posttime": "2020-05-03 15:30:58", "tags": "\u632a\u5a01,saved,\u91d1\u878d\u65f6\u62a5,ft", "title": "\u628a\u632a\u5a01\u4ece\u77f3\u6cb9\u4e2d\u62ef\u6551\u51fa\u6765\u7684\u4f0a\u62c9\u514b\u4eba", "title_en": "The Iraqi who saved Norway from oil", "transed": 1, "url": "https://www.ft.com/content/99680a04-92a0-11de-b63b-00144feabdc0", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u632a\u5a01", "saved", "\u91d1\u878d\u65f6\u62a5", "ft"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000458, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8f91\u6b64\u9875\u9762--\u8fd4\u56de\u5230\u4e0a\u4e00\u4e2a\u7d22\u5f15\u662f\uff01git\u5b58\u50a8\u5e93\u663e\u793a\u4e86\u6211\u4eec\u5f53\u524d\u6b63\u5728\u505a\u7684\u6240\u6709\u5de5\u4f5c\u3002Libreboot\u76f8\u5f53\u6d3b\u8dc3\u3002\n\u7b80\u77ed\u7684\u56de\u7b54\u662f\uff1a\u5f53\u5b83\u51fa\u6765\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u51fa\u6765\u4e86\u3002\u5982\u679c\u60a8\u60f3\u5e2e\u52a9\u89e3\u51b3\u5e76\u63d0\u4ea4\u8865\u4e01\u7a0b\u5e8f\uff0c\u8bf7\u53c2\u9605Git\u9875\u9762\u3002\n\u81ea\u4e0a\u4e00\u7248\u672c\u4ee5\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u6574\u4e2aLibreboot\u6784\u5efa\u7cfb\u7edf\u3002\u8fd9\u82b1\u8d39\u7684\u65f6\u95f4\u6bd4\u6211\u4eec\u9884\u671f\u7684\u8981\u957f\uff0c\u4f46\u662f\u65b0\u7684\u6784\u5efa\u7cfb\u7edf\u6b63\u5728\u8d70\u5411\u6210\u719f\u3002\u6211\u4eec\u6b63\u5728\u64e6\u4eae\u5b83\u3002\n\u4e00\u65e6\u65b0\u7684\u6784\u5efa\u7cfb\u7edf\u7a33\u5b9a\u4e0b\u6765\uff0c\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u4f18\u5148\u4e8b\u9879\u5c31\u662f\u786e\u4fdd\u5f53\u524d\u652f\u6301\u7684\u6240\u6709\u6784\u5efa\u76ee\u6807\u90fd\u80fd\u5728Libreboot\u4e2d\u6b63\u786e\u6784\u5efa\u3002\n\u5728\u6b64\u4e4b\u540e\uff0c\u9996\u8981\u4efb\u52a1\u662f\u786e\u4fddLibreboot\u4e2d\u7684\u6240\u6709\u5f53\u524d\u4e3b\u677f\u90fd\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684coreboot\uff0c\u4ee5\u53ca\u6240\u6709\u6700\u65b0\u7684\u4fee\u590d\u548c\u6539\u8fdb\u3002\u7136\u540e\uff0c\u6d4b\u8bd5\u8fd9\u4e9b\u677f\u5c06\u662f\u4e00\u4e2a\u540c\u884c\u8bc4\u5ba1\u7684\u95ee\u9898\uff0c\u901a\u8fc7alpha/beta/RC\u7248\u672c\u63a5\u89e6\u5230\u6574\u4e2a\u793e\u533a\u3002\n\u901a\u5e38\uff0c\u5728\u53d1\u5e03\u65b0\u7248\u672c\u4e4b\u524d\uff0c\u5fc5\u987b\u89e3\u51b3\u6240\u6709\u4e3b\u8981\u7684\u7248\u672c\u963b\u6b62\u95ee\u9898\u3002\u53c2\u89c1\uff1ahttps://notabug.org/libreboot/libreboot/issues\u3002\n\u5f53\u6784\u5efa\u7cfb\u7edf\u7a33\u5b9a\u65f6\uff0c\u5728\u4e3a\u6240\u6709\u4e3b\u677f\u6784\u5efaROM\u4e4b\u540e\uff0c\u8fdb\u884c\u65b0\u7684\u6539\u8fdb\u5e76\u5e2e\u52a9\u6d4b\u8bd5\u3002\n\u7279\u522b\u662f\uff0c\u6b63\u5982Libreboot bug\u8ddf\u8e2a\u5668\u4e2d\u8bb0\u5f55\u7684\u90a3\u6837\uff0ccoreboot\u4e2d\u6709\u51e0\u4e2a\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u5230Libreboot\u4e2d\u7684\u65b0\u4e3b\u677f\u3002\u8fd9\u4e9b\u8fd8\u5fc5\u987b\u6dfb\u52a0\uff0c\u5e76\u8fdb\u884c\u5168\u9762\u6d4b\u8bd5\u3002\u6709\u5173\u8bbe\u7f6e\u57fa\u4e8e\u786c\u4ef6\u7684\u5237\u65b0\u5de5\u5177\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605Libreboot\u5b89\u88c5\u6307\u5357\u3002\n\u4e00\u4e9b\u65b0\u7684\u4e3b\u677f\u7aef\u53e3\u4e5f\u5c06\u6d3e\u4e0a\u7528\u573a\uff1b)\u5982\u679c\u60a8\u6709\u6280\u80fd\uff0c\u6211\u4eec\u5c06\u975e\u5e38\u611f\u6fc0\u3002\u5148\u5c06\u5b83\u4eec\u79fb\u690d\u5230\u6838\u5fc3\u91cd\u65b0\u5f15\u5bfc\uff0c\u6216\u8005\u4f7f\u73b0\u6709\u6838\u5fc3\u91cd\u65b0\u5f15\u5bfc\u76ee\u6807\u5728\u6ca1\u6709\u4e8c\u8fdb\u5236BLOB\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\u3002\n\u5982\u679c\u60a8\u6709\u6539\u8fdb\u6587\u6863\u7684\u65b9\u6cd5\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u6709\u5173\u5411\u6587\u6863\u63d0\u4ea4\u8865\u4e01\u7a0b\u5e8f\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605Git\u9875\u9762\u3002\n\u5982\u679c\u8fd0\u884cflashrom-p Internal\u8fdb\u884c\u57fa\u4e8e\u8f6f\u4ef6\u7684\u5237\u65b0\uff0c\u5e76\u4e14\u60a8\u6536\u5230\u4e0e/dev/mem\u8bbf\u95ee\u76f8\u5173\u7684\u9519\u8bef\uff0c\u5219\u5e94\u5728\u8fd0\u884cflashrom\u4e4b\u524d\u4f7f\u7528iomem=RELAXED\u5185\u6838\u53c2\u6570\u91cd\u65b0\u542f\u52a8\uff0c\u6216\u8005\u4f7f\u7528\u672a\u542f\u7528CONFIG_STRICT_DEVMEM\u548cCONFIG_IO_STRICT_DEVMEM\u7684\u5185\u6838\u3002\nFlashrom v0.9.9-r1955\u57fa\u4e8eLinux4.11.9-1-ARCH(X86_64)Flashrom\u662f\u81ea\u7531\u8f6f\u4ef6\uff0c\u83b7\u53d6https://flashrom.orgCalibrating\u5ef6\u8fdf\u5faa\u73af\u7684\u6e90\u4ee3\u7801.\u3002OK\u3002\u8bbf\u95ee\u9ad8\u8868\u65f6\u51fa\u9519\uff0c0x000000007fb5d000/dev/mem mmap\u5904\u76840x100000\u5b57\u8282\u5931\u8d25\uff1a\u4e0d\u5141\u8bb8\u64cd\u4f5c\u8bbf\u95ee\u6838\u5fc3\u542f\u52a8\u9ad8\u8868\u5931\u8d25\u3002\u8bbf\u95eeDMI\u8868\u65f6\u51fa\u9519\uff0c0x000000007fb27000\u5904\u76840x1000\u5b57\u8282/dev/mem mmap\u5931\u8d25\uff1a\u4e0d\u5141\u8bb8\u64cd\u4f5c\u3002\n\u964d\u4f4eX200/T400/T500/R400\u7684\u4eae\u5ea6\u65f6\uff0c\u5c4f\u5e55\u5de6\u4fa7\u7684\u80cc\u5149\u8f83\u6697\u3002\n[\u94fe\u63a5]\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u5728coreboot-libre\u4e2d\u68c0\u6d4b\u6b63\u786e\u7684PWM\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5728coreboot\u4e2d\u4f7f\u7528\u9ed8\u8ba4\u7684\u503c\uff0c\u5b83\u5728\u4e00\u4e9bCCFL\u9762\u677f\u4e0a\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5728LED\u9762\u677f\u4e0a\u6ca1\u6709\u3002\n\u60a8\u53ef\u4ee5\u6309\u7167docs\uff1aBacklight control\u4e0a\u7684\u8bf4\u660e\u5728\u60a8\u7684\u53d1\u884c\u7248\u4e2d\u89e3\u51b3\u6b64\u95ee\u9898\u3002\n\u5728\u4f7f\u7528\u7f51\u7edc\u7ba1\u7406\u5668\u7684\u4e00\u4e9b\u7cfb\u7edf\u4e0a\u89c2\u5bdf\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u8fd9\u5728\u539f\u59cbBIOS\u548clibreboot\u4e2d\u90fd\u4f1a\u53d1\u751f\u3002\u8fd9\u662f\u786c\u4ef6\u4e0a\u7684\u4e00\u4e2a\u602a\u7656\u3002\u5728Debian\u7cfb\u7edf\u4e0a\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u8fde\u63a5\u4ee5\u592a\u7f51\u7535\u7f06\u65f6\u91cd\u65b0\u542f\u52a8\u7f51\u7edc\u670d\u52a1\uff1a\nlibreboot 20160818\u300120160902\u548c20160907\u90fd\u6709\u4e00\u4e2a\u7f3a\u9677\uff1a\u5728seaBIOS\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cpci options ROM\u5728\u53ef\u7528\u65f6\u52a0\u8f7d\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u53ef\u9009ROM\u53ef\u4ee5\u662f\u514d\u8d39\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u514d\u8d39\u7684\u3002\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u4eec\u901a\u5e38\u4e0d\u662f\u514d\u8d39\u7684\u3002\n\u4eceASUS KCMA-D8\u6216KGPE-D16\u4e0a\u7684PIKE2008\u6a21\u5757\u52a0\u8f7d\u9009\u4ef6ROM\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u5728\u5f15\u5bfc\u65f6\u6302\u8d77\u3002\u53ef\u4ee5\u5728\u6709\u6548\u8d1f\u8f7d\u4e2d\u4f7f\u7528\u5b83(\u5982\u679c\u60a8\u4f7f\u7528Linux\u5185\u6838\u6709\u6548\u8d1f\u8f7d\uff0c\u6216\u8005postboot)\uff0c\u6216\u8005\u4ece\u5e38\u89c4SATA\u5f15\u5bfc(\u4f7f\u7528SeaGRUB\u548c/\u6216SeaBIOS)\uff0c\u7136\u540e\u5728GNU+Linux\u4e2d\u4f7f\u7528\u5b83\u3002Linux\u5185\u6838\u65e0\u9700\u52a0\u8f7d\u9009\u4ef6ROM\u5373\u53ef\u4f7f\u7528PIKE2008\u6a21\u5757\u3002\nLibreboot-\u4e0d\u7a33\u5b9a(\u6216GIT)\u73b0\u5728\u7981\u6b62\u52a0\u8f7dPCI option ROM\uff0c\u4f46SeaGRUB(20160818-20160907)\u4e4b\u524d\u7684\u7248\u672c\u4e0d\u4f1a\u8fd9\u6837\u505a\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a\n\u60a8\u53ef\u4ee5\u5728\u60a8\u6b63\u5728\u4f7f\u7528\u7684libreboot\u53d1\u884c\u7248\u7684_util\u5f52\u6863\u4e2d\u627e\u5230cbfstool\u3002\n\u60a8\u53ef\u4ee5\u5b89\u5168\u5730\u5ffd\u7565\u8fd9\u4e9b\u9519\u8bef\uff0c\u5b83\u4eec\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u505c\u6b62libreboot\u7684grub.cfg\u4e2dfor\u5faa\u73af\u4e2d\u7684cryptomount\u547d\u4ee4\u3002\u5b83\u53ef\u4ee5\u5728\u4e0a\u6e38GRUB\u4e2d\u901a\u8fc7\u63d0\u4f9b\u8865\u4e01\u6765\u4fee\u590d\uff0c\u8be5\u8865\u4e01\u5c06\u4e3a\u5176\u6dfb\u52a0\u9759\u9ed8\u6807\u5fd7\u3002\n\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5185\u6838\u7684netconsole\u5e76\u91cd\u73b0\u6b7b\u673a\u3002NetConsole\u9700\u8981\u4e24\u53f0\u673a\u5668\uff0c\u4e00\u53f0\u662f\u6b7b\u673a(\u6e90)\uff0c\u53e6\u4e00\u53f0\u5c06\u63a5\u6536\u5d29\u6e83\u65e5\u5fd7(\u76ee\u6807)\u3002\u6e90\u5fc5\u987b\u7528\u4ee5\u592a\u7f51\u7535\u7f06\u8fde\u63a5\uff0c\u76ee\u6807\u5fc5\u987b\u5728\u6050\u614c\u65f6\u53ef\u4ee5\u5230\u8fbe\u3002\u8981\u8bbe\u7f6e\u6b64\u7cfb\u7edf\uff0c\u8bf7\u5728\u6e90\u7cfb\u7edf(source#)\u4e0a\u4ee5root\u7528\u6237\u8eab\u4efd\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u4ee5\u666e\u901a\u7528\u6237\u8eab\u4efd\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4.\u3002\n\u6302\u8f7dconfigfs(\u6bcf\u6b21\u5f15\u5bfc\u4ec5\u4e00\u6b21\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528mount|grep/sys/kernel/config\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u6302\u8f7d\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u5c06\u4e0d\u8fd4\u56de\u4efb\u4f55\u8f93\u51fa)\u3002\n\u67e5\u627e\u6e90\u7684\u4ee5\u592a\u7f51\u63a5\u53e3\u540d\u79f0\uff0c\u5e94\u4e3a", "note_en": "Edit this page --  Back to previous index    Yes! The  git repository shows all of the work that we\u2019re currently doing. Libreboot is quite active.\n  Short answer: It\u2019s out when it\u2019s out. If you want to help out and submit patches, refer to  the Git page.\n   We\u2019ve been re-writing the entire Libreboot build system from scratch, since the previous release. This has taken longer than we expected, but the new build system is reaching maturity. We are polishing it.\n Once the new build system is stable, our next priority is ensuring that all currently supported build targets build properly in Libreboot.\n After that, the priority is to make sure that all current boards in Libreboot use the most up to date revision of coreboot, with all of the most recent fixes and improvements. Testing those boards will then be a matter of peer review, reaching out to the entire community via alpha/beta/RC releases.\n Generally, all major release-blocking issues must be addressed before a new release can be issued. See:  https://notabug.org/libreboot/libreboot/issues\n  Work on new improvements and help with testing once ROMs build for all boards, when the build system is stable.\n In particular, there are several new boards in coreboot that we can add to Libreboot, as documented on the Libreboot bug tracker. These will also have to be added, and fully tested. Instructions for setting up hardware-based flashing tools can be found in  the Libreboot installation guides\n  A few new board ports will also come in handy ;) If you\u2019ve got the skills, we\u2019d really appreciate that. Port them to coreboot first, or make existing coreboot targets work without binary blobs.\n  If you have ways to improve the documentation, you can do that too. Refer to  the Git page for instructions on submitting patches to the documentation.\n    If running  flashrom -p internal for software based flashing, and you get an error related to /dev/mem access, you should reboot with  iomem=relaxed kernel parameter before running flashrom, or use a kernel that has  CONFIG_STRICT_DEVMEM and  CONFIG_IO_STRICT_DEVMEM not enabled.\n  flashrom v0.9.9-r1955 on Linux 4.11.9-1-ARCH (x86_64)flashrom is free software, get the source code at https://flashrom.orgCalibrating delay loop... OK.Error accessing high tables, 0x100000 bytes at 0x000000007fb5d000/dev/mem mmap failed: Operation not permittedFailed getting access to coreboot high tables.Error accessing DMI Table, 0x1000 bytes at 0x000000007fb27000/dev/mem mmap failed: Operation not permitted\n The backlight is darker on the left side of the screen when lowering the brightness on my X200/T400/T500/R400\n [link]\n We don\u2019t know how to detect the correct PWM value to use in coreboot-libre, so we just use the default one in coreboot which has this issue on some CCFL panels, but not LED panels.\n You can work around this in your distribution, by following the notes at  docs: backlight control.\n  This was observed on some systems using network-manager. This happens both on the original BIOS and in libreboot. It\u2019s a quirk in the hardware. On debian systems, a workaround is to restart the networking service when you connect the ethernet cable:\n      Libreboot 20160818, 20160902 and 20160907 all have a bug: in SeaBIOS, PCI options ROMs are loaded when available, by default. This is not technically a problem, because an option ROM can be free or non-free. In practise, though, they are usually non-free.\n Loading the option ROM from the PIKE2008 module on either ASUS KCMA-D8 or KGPE-D16 causes the system to hang at boot. It\u2019s possible to use this in the payload (if you use a linux kernel payload, or petitboot), or to boot (with SeaGRUB and/or SeaBIOS) from regular SATA and then use it in GNU+Linux. The Linux kernel is capable of using the PIKE2008 module without loading the option ROM.\n Libreboot-unstable (or git) now disables loading PCI option ROMs, but previous releases with SeaGRUB (20160818-20160907) do not. You can work around this by running the following command:\n  You can find  cbfstool in the _util archive with the libreboot release that you are using.\n  You can safely ignore those errors, they exist because we can\u2019t quiet down cryptomount command from  for loop in libreboot\u2019s  grub.cfg. It could be fixed in upstream grub by contributing patch that would add quiet flag to it.\n  The easiest method of doing so is by using the kernel\u2019s netconsole and reproducing the panic. Netconsole requires two machines, the one that is panicky (source) and the one that will receive crash logs (target). The source has to be connected with an ethernet cable and the target has to be reachable at the time of the panic. To set this system up, execute the following commands as root on the source ( source#) and normal user on the target  ...\n Mount configfs (only once per boot, you can check if it is already mounted with  mount | grep /sys/kernel/config. This will return no output if it is not).\n find source\u2019s ethernet interface name, it should be of the form  enp* or  eth*, see  ip address or  ifconfig output.\n   Test if the logging works by e.g.\u00a0inserting or removing an USB device on the source. There should be a few lines appearing in the terminal, in which you started netcat (nc), on the target host.\n  Some GM45 laptops have been freezing or experiencing a kernel panic (blinking caps lock LED and totaly unresponsive machine, sometimes followed by an automatic reboot within 30 seconds). We do not know what the problem(s) is(are), but a CPU microcode update in some cases prevents this from happening again. See the following bug reports for more info:\n       There are severe privacy, security and freedom issues with these laptops, due to the Intel chipsets that they use. See:\n  Most notably, these laptops also use the Intel FSP binary blob, for the entire hardware initialization. Coreboot does support a particular revision of one of their laptops, but most are either unsupported or rely on binary blobs for most of the hardware initialization.\n In particular, the Intel Management Engine is a severe threat to privacy and security, not to mention freedom, since it is a remote backdoor that provides Intel remote access to a computer where it is present.\n    It is unlikely that any post-2008 Intel hardware will ever be supported in libreboot, due to severe security and freedom issues; so severe, that  the libreboot project recommends avoiding all modern Intel hardware. If you have an Intel based system affected by the problems described below, then you should get rid of it as soon as possible. The main issues are as follows:\n  Introduced in June 2006 in Intel \u2019s 965 Express Chipset Family of (Graphics and) Memory Controller Hubs, or (G)MCHs, and the ICH8 I/O Controller Family, the Intel Management Engine (ME) is a separate computing environment physically located in the (G)MCH chip. In Q3 2009, the first generation of Intel Core i3/i5/i7 (Nehalem) CPUs and the 5 Series Chipset family of Platform Controller Hubs, or PCHs, brought a more tightly integrated  ...\n The ME consists of an ARC processor core (replaced with other processor cores in later generations of the ME), code and data caches, a timer, and a secure internal bus to which additional devices are connected, including a cryptography engine, internal ROM and RAM, memory controllers, and a   direct memory access (DMA) engineto access the host operating system \u2019s memory as well as to reserve a region of protected external memory to  ...\n The ME firmware is compressed and consists of modules that are listed in the manifest along with secure cryptographic hashes of their contents. One module is the operating system kernel, which is based on a   proprietary real-time operating system (RTOS) kernelcalled \u201cThreadX \u201d. The developer, Express Logic, sells licenses and source code for ThreadX. Customers such as Intel are forbidden from disclosing or sublicensing the ThreadX  ...\n The Active Management Technology (AMT) application, part of the Intel \u201cvPro\u201d brand, is a Web server and application code that enables remote users to power on, power off, view information about, and otherwise manage the PC. It can be   used remotely even while the PC is powered off(via Wake-on-Lan). Traffic is encrypted using SSL/TLS libraries, but recall that all of the major SSL/TLS implementations have had highly publicized vulnerabilities.  ...\n Intel Boot Guard is an ME application introduced in Q2 2013 with ME firmware version 9.0 on 4th Generation Intel Core i3/i5/i7 (Haswell) CPUs. It allows a PC OEM to generate an asymmetric cryptographic keypair, install the public key in the CPU, and prevent the CPU from executing boot firmware that isn\u2019t signed with their private key. This means that   coreboot and libreboot are impossible to portto such PCs, without the OEM \u2019s  ...\n ME firmware versions 4.0 and later (Intel 4 Series and later chipsets) include an ME application for   audio and video  DRMcalled \u201cProtected Audio Video Path \u201d(PAVP). The ME receives from the host operating system an encrypted media stream and encrypted key, decrypts the key, and sends the encrypted media decrypted key to the GPU, which then decrypts the media. PAVP is also used by another ME application to draw an authentication  ...\n The Intel Management Engine with its proprietary firmware has complete access to and control over the PC: it can power on or shut down the PC, read all open files, examine all running applications, track all keys pressed and mouse movements, and even capture or display images on the screen. And it has a network interface that is demonstrably insecure, which can allow an attacker on the network to inject rootkits that completely  ...\n Before version 6.0 (that is, on systems from 2008/2009 and earlier), the ME can be disabled by setting a couple of values in the SPI flash memory. The ME firmware can then be removed entirely from the flash memory space. libreboot  does this on the Intel 4 Series systems that it supports, such as the  Libreboot X200 and  Libreboot T400. ME firmware versions 6.0 and later, which are found on all systems with an Intel Core i3/i5/i7  ...\n Due to the signature verification, developing free replacement firmware for the ME is basically impossible. The only entity capable of replacing the ME firmware is Intel. As previously stated, the ME firmware includes proprietary code licensed from third parties, so Intel couldn \u2019t release the source code even if they wanted to. And even if they developed completely new ME firmware without third-party proprietary code and  ...\n In summary, the Intel Management Engine and its applications are a backdoor with total access to and control over the rest of the PC. The ME is a threat to freedom, security, and privacy, and the libreboot project strongly recommends avoiding it entirely. Since recent versions of it can\u2019t be removed, this means avoiding all recent generations of Intel hardware.\n More information about the Management Engine can be found on various Web sites, including  me.bios.io,  unhuffme,  coreboot wiki, and  Wikipedia. The book    Platform Embedded Security Technology Revealed describes in great detail the ME\u2019s hardware architecture and firmware application modules.\n If you\u2019re stuck with the ME (non-libreboot system), you might find this interesting:  http://hardenedlinux.org/firmware/2016/11/17/neutralize_ME_firmware_on_sandybridge_and_ivybridge.html\n   On all recent Intel systems, coreboot support has revolved around integrating a blob (for each system) called the  FSP(firmware support package), which handles all of the hardware initialization, including memory and CPU initialization. Reverse engineering and replacing this blob is almost impossible, due to how complex it is. Even for the most skilled developer, it would take years to replace. Intel distributes this blob  ...\n Since the FSP is responsible for the early hardware initialization, that means it also handles SMM (System Management Mode). This is a special mode that operates below the operating system level.  It\u2019s possible that rootkits could be implemented there, which could perform a number of attacks on the user (the list is endless). Any Intel system that has the proprietary FSP blob cannot be trusted at all.In fact, several SMM  ...\n  All modern x86 CPUs (from Intel and AMD) use what is called  microcode. CPUs are extremely complex, and difficult to get right, so the circuitry is designed in a very generic way, where only basic instructions are handled in hardware. Most of the instruction set is implemented using microcode, which is low-level software running inside the CPU that can specify how the circuitry is to be used, for each instruction. The  ...\n Microcode  updatesare proprietary blobs, uploaded to the CPU at boot time, which patches the built-in microcode and disables buggy parts of the CPU to improve reliability. In the past, these updates were handled by the operating system kernel, but on all recent systems it is the boot firmware that must perform this task. Coreboot does distribute microcode updates for Intel and AMD CPUs, but libreboot cannot, because  ...\n On some older Intel CPUs, it is possible to exclude the microcode updates and not have any reliability issues in practise. All current libreboot systems work without microcode updates (otherwise, they wouldn\u2019t be supported in libreboot). However, all modern Intel CPUs require the microcode updates, otherwise the system will not boot at all, or it will be extremely unstable (memory corruption, for example).\n Intel CPU microcode updates are  signed, which means that you could not even run a modified version, even if you had the source code. If you try to upload your own modified updates, the CPU will reject them.\n The microcode updates alter the way instructions behave on the CPU. That means they affect the way the CPU works, in a very fundamental way. That makes it software. The updates are proprietary, and are software, so we exclude them from libreboot. The microcode built into the CPU already is not so much of an issue, since we can\u2019t change it anyway (it\u2019s read-only).\n  For years, coreboot has been struggling against Intel. Intel has been shown to be extremely uncooperative in general. Many coreboot developers, and companies, have tried to get Intel to cooperate; namely, releasing source code for the firmware components. Even Google, which sells millions of  chromebooks (coreboot preinstalled) have been unable to persuade them.\n Even when Intel does cooperate, they still don\u2019t provide source code. They might provide limited information (datasheets) under strict corporate NDA (non-disclosure agreement), but even that is not guaranteed. Even ODMs and IBVs can\u2019t get source code from Intel, in most cases (they will just integrate the blobs that Intel provides).\n  Intel is  only going to get worse when it comes to user freedom. Libreboot has no support recent Intel platforms, precisely because of the problems described above. The only way to solve this is to get Intel to change their policies and to be more friendly to the  free softwarecommunity. Reverse engineering won \u2019t solve anything long-term, unfortunately, but we need to keep doing it anyway. Moving forward, Intel  ...\n Basically, all Intel hardware from year 2010 and beyond will never be supported by libreboot. The libreboot project is actively ignoring all modern Intel hardware at this point, and focusing on alternative platforms.\n  It is extremely unlikely that any post-2013 AMD hardware will ever be supported in libreboot, due to severe security and freedom issues; so severe, that  the libreboot project recommends avoiding all modern AMD hardware. If you have an AMD based system affected by the problems described below, then you should get rid of it as soon as possible. The main issues are as follows:\n   This is basically AMD\u2019s own version of the  Intel Management Engine. It has all of the same basic security and freedom issues, although the implementation is wildly different.\n The Platform Security Processor (PSP) is built in on all Family 16h + systems (basically anything post-2013), and controls the main x86 core startup. PSP firmware is cryptographically signed with a strong key similar to the Intel ME. If the PSP firmware is not present, or if the AMD signing key is not present, the x86 cores will not be released from reset, rendering the system inoperable.\n The PSP is an ARM core with TrustZone technology, built onto the main CPU die. As such, it has the ability to hide its own program code, scratch RAM, and any data it may have taken and stored from the lesser-privileged x86 system RAM (kernel encryption keys, login data, browsing history, keystrokes, who knows!). To make matters worse, the PSP theoretically has access to the entire system memory space (AMD  ...\n In theory any malicious entity with access to the AMD signing key would be able to install persistent malware that could not be eradicated without an external flasher and a known good PSP image. Furthermore, multiple security vulnerabilities have been demonstrated in AMD firmware in the past, and there is every reason to assume one or more zero day vulnerabilities are lurking in the PSP firmware. Given the  ...\n Much like with the Intel Boot Guard (an application of the Intel Management Engine), AMD \u2019s PSP can also act as a tyrant by checking signatures on any boot firmware that you flash, making replacement boot firmware (e.g. libreboot, coreboot) impossible on some boards. Early anecdotal reports indicate that AMD \u2019s boot guard counterpart will be used on most OEM hardware, disabled only on so-called \u201centhusiast  ...\n    Handles some power management for PCIe devices (without this, your laptop will not work properly) and several other power management related features.\n The firmware is signed, although on older AMD hardware it is a symmetric key, which means that with access to the key (if leaked) you could sign your own modified version and run it. Rudolf Marek (coreboot hacker) found out how to extract this key  in this video demonstration, and based on this work, Damien Zammit (another coreboot hacker)  partially replaced itwith free firmware, but on the relevant system  ...\n  This is responsible for virtually all core hardware initialization on modern AMD systems. In 2011, AMD started cooperating with the coreboot project, releasing this as source code under a free license. In 2014, they stopped releasing source code and started releasing AGESA as binary blobs instead. This makes AGESA now equivalent to  Intel FSP.\n  Read the Intel section practically the same, though it was found with much later hardware in AMD that you could run without microcode updates. It\u2019s unknown whether the updates are needed on all AMD boards (depends on CPU).\n  AMD seemed like it was on the right track in 2011 when it started cooperating with and releasing source code for several critical components to the coreboot project. It was not to be. For so-called economic reasons, they decided that it was not worth the time to invest in the coreboot project anymore.\n For a company to go from being so good, to so bad, in just 3 years, shows that something is seriously wrong with AMD. Like Intel, they do not deserve your money.\n Given the current state of Intel hardware with the Management Engine, it is our opinion that all performant x86 hardware newer than the AMD Family 15h CPUs (on AMD \u2019s side) or anything post-2009 on Intel \u2019s side is defective by design and cannot safely be used to store, transmit, or process sensitive data. Sensitive data is any data in which a data breach would cause significant economic harm to  ...\n  Libreboot has support for fam15h AMD hardware (~2012 gen) and some older Intel platforms like Napa, Montevina, Eagle Lake, Lakeport (2004-2006). We also have support for some ARM chipsets (rk3288). On the Intel side, we\u2019re also interested in some of the chipsets that use Atom CPUs (rebranded from older chipsets, mostly using ich7-based southbridges).\n  Short answer: yes. These laptops also have an Intel GPU inside, which libreboot uses. The ATI GPU is ignored by libreboot.\n These laptops use what is called  switchable graphics, where it will have both an Intel and ATI GPU. Coreboot will allow you to set (using nvramtool) a parameter, specifying whether you would like to use Intel or ATI. The ATI GPU lacks free native graphics initialization in coreboot, unlike the Intel GPU.\n Libreboot modifies coreboot, in such a way where this nvramtool setting is ignored. Libreboot will just assume that you want to use the Intel GPU. Therefore, the ATI GPU is completely disabled on these laptops. Intel is used instead, with the free native graphics initialization (VBIOS replacement) that exists in coreboot.\n   A common issue with desktop hardware is the Video BIOS, when no onboard video is present, since every video card has a different Video BIOS. Onboard GPUs also require one, so those still have to be replaced with free software (non-trivial task). Libreboot has to initialize the graphics chipset, but most graphics cards lack a free Video BIOS for this purpose. Some desktop motherboards supported  ...\n  Most likely not. First, you must consult coreboot\u2019s own hardware compatibility list at  http://www.coreboot.org/Supported_Motherboardsand, if it is supported, check whether it can run without any proprietary blobs in the ROM image. If it can: wonderful! Libreboot can support it, and you can add support for it. If not, then you will need to figure out how to reverse engineer and replace (or remove)  ...\n For those systems where no coreboot support exists, you must first port it to coreboot and, if it can then run without any blobs in the ROM image, it can be added to libreboot. See:  Motherboard Porting Guide (this is just the tip of the iceberg!)\n Please note that board development should be done upstream (in coreboot) and merged downstream (into libreboot). This is the correct way to do it, and it is how the libreboot project is coordinated so as to avoid too much forking of the coreboot source code.\n  Libreboot has support for some ARM based laptops, using the  Rockchip RK3288 SoC. Check the libreboot  hardware compatibility list, for more information.\n      It\u2019s possible to use a 16-pin SOIC test clip on an 8-pin SOIC chip, if you align the pins properly. The connection is generally more sturdy.\n  If you are using the GRUB payload, you can add a username and password (salted, hashed) to your GRUB configuration that resides inside the flash chip. The following guides (which also cover full disk encryption, including the /boot/ directory) show how to set a boot password in GRUB:  (Installing Debian or Devuan with FDE) and  (Installing Parabola or Arch GNU+Linux-Libre, with FDE)\n  By default, there is no write-protection on a libreboot system. This is for usability reasons, because most people do not have easy access to an external programmer for re-flashing their firmware, or they find it inconvenient to use an external programmer.\n On some systems, it is possible to write-protect the firmware, such that it is rendered read-only at the OS level (external flashing is still possible, using dedicated hardware). For example, on current GM45 laptops (e.g.\u00a0ThinkPad X200, T400), you can write-protect (see  ICH9 gen utility).\n It\u2019s possible to write-protect on all libreboot systems, but the instructions need to be written. The documentation is in the main git repository, so you are welcome to submit patches adding these instructions.\n  Libreboot actually uses the  GRUB payload. More information about payloads can be found at  coreboot.org/Payloads.\n Libreboot inherits the modular payload concept from coreboot, which means that pre-OS bare-metal  BIOS setup programs are not very practical. Coreboot (and libreboot) does include a utility called  nvramtool, which can be used to change some settings. You can find nvramtool under  coreboot/util/nvramtool/, in the libreboot source archives.\n The  -a option in nvramtool will list the available options, and  -w can be used to change them. Consult the nvramtool documentation on the coreboot wiki for more information.\n In practise, you don\u2019t need to change any of those settings, in most cases.\n Libreboot locks the CMOS table, to ensure consistent functionality for all users. You can use:\n  This will change the default inside that ROM image, and then you can re-flash it.\n  Libreboot integrates the GRUB bootloader already, as a   payload. This means that the GRUB bootloader is actually  flashed, as part of the boot firmware (libreboot). This means that you do not have to install a boot loader on the HDD or SSD, when installing a new distribution. You\u2019ll be able to boot just fine, using the bootloader (GRUB) that is in the flash chip.\n This also means that even if you remove the HDD or SSD, you\u2019ll still have a functioning bootloader installed which could be used to boot a live distribution installer from a USB flash drive. See  How to install GNU+Linux on a libreboot system\n  Not anymore. Recent versions of libreboot (using the GRUB payload) will automatically switch to a GRUB configuration on the HDD or SSD, if it exists. You can also load a different GRUB configuration, from any kind of device that is supported in GRUB (such as a USB flash drive). For more information, see  Modifying the GRUB Configuration in Libreboot Systems\n           The main freedom issue on any system, is the boot firmware (usually referred to as a BIOS or UEFI). Libreboot replaces the boot firmware with fully free code, but even with libreboot, there may still be other hardware components in the system (e.g. laptop) that run their own dedicated firmware, sometimes proprietary. These are on secondary processors, where the firmware is  ...\n Note that these issues are not unique to libreboot systems. They apply universally, to most systems. The issues described below are the most common (or otherwise critical).\n   The Video BIOS is present on most video cards. For integrated graphics, the VBIOS (special kind of OptionROM) is usually embedded in the main boot firmware. For external graphics, the VBIOS is usually on the graphics card itself. This is usually proprietary; the only difference is that SeaBIOS can execute it (alternatively, you embed it in a coreboot ROM image and have coreboot  ...\n On current libreboot systems, instead of VBIOS, coreboot native GPU init is used, which is currently only implemented for Intel GPUs. Other cards with proper KMS drivers can be initialized once Linux boots, but copy of VBIOS may be still needed to fetch proper VRAM frequency and other similar parameters (without executing VBIOS code).\n In configurations where SeaBIOS and native GPU init are used together, a special shim VBIOS is added that uses coreboot linear framebuffer.\n  Most (all?) laptops have this. The EC (embedded controller) is a small, separate processor that basically processes inputs/outputs that are specific to laptops. For example:\n When you flick the radio on/off switch, the EC will enable/disable the wireless devices (wifi, bluetooth, etc) and enable/disable an LED that indicates whether it\u2019s turned on or not\n Listen to another chip that produces temperature readings, adjusting fan speeds accordingly (or turning the fan(s) on/off).\n Alexander Couzens from coreboot (lynxis on coreboot IRC) is working on a free EC firmware replacement for the ThinkPads that are supported in libreboot. See:  https://github.com/lynxis/h8s-ec (not ready yet).\n Most (all?) chromebooks have free EC firmware. Libreboot is currently looking into supporting a few ARM-based chromebooks.\n EC is present on nearly all laptops. Other devices use, depending on complexity, either EC or variant with firmware in Mask ROM - SuperIO.\n  HDDs and SSDs have firmware in them, intended to handle the internal workings of the device while exposing a simple, standard interface (such as AHCI/SATA) that the OS software can use, generically. This firmware is transparent to the user of the drive.\n HDDs and SSDs are quite complex, and these days contain quite complex hardware which is even capable of running an entire operating system (by this, we mean that the drive itself is capable of running its own embedded OS), even GNU+Linux or BusyBox/Linux.\n SSDs and HDDs are a special case, since they are persistent storage devices as well as computers.\n Example attack that malicious firmware could do: substitute your SSH keys, allowing unauthorized remote access by an unknown adversary. Or maybe substitute your GPG keys. SATA drives can also have DMA (through the controller), which means that they could read from system memory; the drive can have its own hidden storage, theoretically, where it could read your  ...\n With proper IOMMU and use of USB instead of SATA, it might be possible to mitigate any DMA-related issues that could arise.\n  Viable free replacement firmware is currently unknown to exist. For SSDs, the  OpenSSD project may be interesting.\n Apparently, SATA drives themselves don\u2019t have DMA but can make use of it through the controller. This  http://www.lttconn.com/res/lttconn/pdres/201005/20100521170123066.pdf (pages 388-414, 420-421, 427, 446-465, 492-522, 631-638) and this  http://www.intel.co.uk/content/dam/www/public/us/en/documents/technical-specifications/serial-ata-ahci-spec-rev1_3.pdf(pages  ...\n The following is based on discussion with Peter Stuge (CareBear\\) in the coreboot IRC channel on Friday, 18 September 2015, when investigating whether the SATA drive itself can make use of DMA. The following is based on the datasheets linked above:\n According to those linked documents, FIS type 39h is  \u201cDMA Activate FIS - Device to Host\u201d. It mentions  \u201ctransfer of data from the host to the device, and goes on to say: Upon receiving a DMA Activate, if the host adapter \u2019s DMA controller has been programmed and armed, the host adapter shall initiate the transmission of a Data FIS and shall transmit in this  ...\n Based on this, it\u2019s safe to say that use of USB instead of SATA is advisable if security is a concern. USB 2.0 has plenty of bandwidth for many HDDs (a few high-end ones can use more bandwidth than USB 2.0 is capable of), but for SSDs it might be problematic (unless you\u2019re using USB 3.0, which is not yet usable in freedom. See\n Use of USB is also not an absolute guarantee of safety, so do beware. The attack surface becomes much smaller, but a malicious drive could still attempt a \u201cfuzzing \u201dattack (e.g. sending malformed USB descriptors, which is how the tyrant DRM on the Playstation 3 was broken, so that users could run their own operating system and run unsigned code). (you \u2019 ...\n   It is recommended that you use full disk encryption, on HDDs connected via USB. There are several adapters available online, that allow you to connect SATA HDDs via USB. Libreboot documents how to install several distributions with full disk encryption. You can adapt these for use with USB drives:\n  The current theory (unproven) is that this will at least prevent malicious drives from wrongly manipulating data being read from or written to the drive, since it can \u2019t access your LUKS key if it \u2019s only ever in RAM, provided that the HDD doesn \u2019t have DMA (USB devices don \u2019t have DMA). The worst that it could do in this case is destroy your data. Of  ...\n  Ethernet NICs will typically run firmware inside, which is responsible for initializing the device internally. Theoretically, it could be configured to drop packets, or even modify them.\n With proper IOMMU, it might be possible to mitigate the DMA-related issues. A USB NIC can also be used, which does not have DMA.\n  Implements an instruction set. See description. Here we mean microcode built in to the CPU. We are not talking about the updates supplied by the boot firmware (libreboot does not include microcode updates, and only supports systems that will work without it) Microcode can be very powerful. No proof that it\u2019s malicious, but it could theoretically\n There isn\u2019t really a way to solve this, unless you use a CPU which does not have microcode. (ARM CPUs don\u2019t, but most ARM systems require blobs for the graphics hardware at present, and typically have other things like soldered wifi which might require blobs)\n CPUs often on modern systems have a processor inside it for things like power management. ARM for example, has lots of these.\n  Sound hardware (integrated or discrete) typically has firmware on it (DSP) for processing input/output. Again, a USB DAC is a good workaround.\n  Webcams have firmware integrated into them that process the image input into the camera; adjusting focus, white balancing and so on. Can use USB webcam hardware, to work around potential DMA issues; integrated webcams (on laptops, for instance) are discouraged by the libreboot project.\n  Doesn\u2019t really apply to current libreboot systems (none of them have USB 3.0 at the moment), but USB 3.0 host controllers typically rely on firmware to implement the XHCI specification. Some newer coreboot ports also require this blob, if you want to use USB 3.0.\n This doesn\u2019t affect libreboot at the moment, because all current systems that are supported only have older versions of USB available. USB devices also don\u2019t have DMA (but the USB host controller itself does).\n With proper IOMMU, it might be possible to mitigate the DMA-related issues (with the host controller).\n  Some laptops might have a simcard reader in them, with a card for handling WWAN, connecting to a 3g/4g (e.g.\u00a0GSM) network. This is the same technology used in mobile phones, for remote network access (e.g.\u00a0internet).\n NOTE: not to be confused with wifi. Wifi is a different technology, and entirely unrelated.\n The baseband processor inside the WWAN chip will have its own embedded operating system, most likely proprietary. Use of this technology also implies the same privacy issues as with mobile phones (remote tracking by the GSM network, by triangulating the signal).\n On some laptops, these cards use USB (internally), so won \u2019t have DMA, but it \u2019s still a massive freedom and privacy issue. If you have an internal WWAN chip/card, the libreboot project recommends that you disable and (ideally, if possible) physically remove the hardware. If you absolutely must use this technology, an external USB dongle  ...\n Use of ethernet or wifi is recommended, as opposed to mobile networks, as these are generally much safer.\n On all current libreboot laptops, it is possible to remove the WWAN card and sim card if it exists. The WWAN card is next to the wifi card, and the sim card (if installed) will be in a slot underneath the battery, or next to the RAM.\n   Absolutely! It is well-tested in libreboot, and highly recommended. See  installing GNU+Linux and  booting GNU+Linux.\n Any recent distribution should work, as long as it uses KMS (kernel mode setting) for the graphics.\n  On Fedora, by default the grub.cfg tries to boot linux in 16-bit mode. You just have to modify Fedora\u2019s GRUB configuration. Refer to  the GNU+Linux page.\n       Libreboot on all devices only provides host hardware init firmware images, that can be written 25XX SPI NOR Flash. But on many systems there are a lot more computers running blob firmware. Some of them are not practicable to replace due to being located on Mask ROM. Some devices have EC firmware being build as well. Additionally, besides  ...\n Notable proprietary blobs (not a complete list): * All devices * SATA/PATA Hard Drive/Optical Disc Drive Firmware ( often contain powerful ARM based computer) * Pendrives and any USB peripherals - they contain a computer with code running to at the very least handle the USB protocol * ThinkPads: * EC Firmware (H8S until including Sandy  ...\n  Basics of soldering and rework by PACE Both series of videos are mandatory regardless of your soldering skill.\n edX course on basics of electronics In most countries contents of this course is covered during middle and high school. It will also serve well to refresh your memory if you haven\u2019t used that knowledge ever since.\n Impedance intro Stubs: Polar Instruments article on stubs With external SPI flashing we only care about unintended PCB stubs\n  Lastly the most important message to everybody gaining this wonderful new hobby -  Secret to Learning Electronics", "posttime": "2020-05-03 15:07:15", "tags": "\u786c\u4ef6,\u82f1\u7279\u5c14,intel,libreboot", "title": "\u4e3a\u4ec0\u4e48libreboot\u4e0d\u652f\u6301\u6700\u65b0\u7684\u82f1\u7279\u5c14\u786c\u4ef6\uff1f", "title_en": "Why is the latest Intel hardware unsupported in libreboot?", "transed": 1, "url": "https://libreboot.org/faq.html#intel", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u786c\u4ef6", "\u82f1\u7279\u5c14", "intel", "libreboot"]}, {"category": "", "categoryclass": "", "imagename": "41745f5ceaa5f81909a54a3e876ad44a.png", "infoid": 1000457, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u505a\u4e8610\u5e74\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002\u6211\u4e00\u5f00\u59cb\u662f\u4e00\u540d\u5408\u540c\u524d\u7aef\u5de5\u7a0b\u5e08\uff0c\u6ca1\u6709\u4efb\u4f55\u798f\u5229\u3002\n\u6709\u4e00\u5929\uff0c\u6211\u7238\u7238\u544a\u8bc9\u6211\u8981\u627e\u4e00\u4efd\u201c\u771f\u6b63\u7684\u201d\u5de5\u4f5c\u3002\u81f3\u5c11\u627e\u4e2a\u4eba\u804a\u804a\u5427\u3002\n\u6211\u6162\u6162\u5730\u8d70\u5230\u9886\u961f\u7684\u4f4d\u7f6e\u3002\u6211\u5f00\u59cb\u4e86\u540e\u7aef\u5f00\u53d1\uff0c\u5e76\u5728\u6b64\u8fc7\u7a0b\u4e2d\u505a\u4e86\u9762\u5411\u5ba2\u6237\u7684\u5de5\u4f5c\u3002\n\u4e8b\u60c5\u8fdb\u5c55\u8fc5\u901f\uff0c\u884c\u52a8\u7075\u6d3b\u3002\u5f53\u4f60\u5728\u7ade\u4e89\u6fc0\u70c8\u7684\u54a8\u8be2\u884c\u4e1a\u5de5\u4f5c\u65f6\uff0c\u4f60\u80af\u5b9a\u4f1a\u8fd9\u4e48\u505a\u3002\u6211\u9047\u5230\u4e86\u4e00\u7fa4\u806a\u660e\u4eba\uff0c\u5438\u6536\u4e86\u5927\u91cf\u7684\u4ef7\u503c\u89c2\u3002\n\u8fd9\u5bb6\u516c\u53f8\u5728\u8f85\u52a9\u9879\u76ee\u65b9\u9762\u975e\u5e38\u7075\u6d3b\u3002\u6211\u5efa\u9020\u4e86\u591a\u4e2a\u9879\u76ee\uff0c\u53c8\u653e\u5f03\u4e86\u591a\u4e2a\u9879\u76ee\u3002\u552f\u4e00\u5e78\u5b58\u7684\u662f\uff1a\n\u5728\u54a8\u8be2\u516c\u53f8\u5de5\u4f5c\u7684\u6700\u540e\u51e0\u5e74\uff0c\u6211\u5f00\u59cb\u7cbe\u75b2\u529b\u7aed\u3002\u6211\u5bf9\u5de5\u4f5c\u7684\u5185\u5728\u52a8\u529b\u6b63\u5728\u75af\u72c2\u5730\u4e0b\u964d\u3002\n\u6211\u4f11\u4e86\u4e2a\u957f\u5047(\u5927\u7ea61-2\u4e2a\u6708)\uff0c\u8bd5\u7740\u7406\u6e05\u5934\u7eea\u3002\u6bcf\u5e74\uff0c\u6211\u90fd\u544a\u8bc9\u81ea\u5df1\uff0c\u4f11\u5047\u7ed3\u675f\u540e\uff0c\u6211\u4f1a\u627e\u5230\u65b0\u7684\u529b\u91cf\u3002\n\u51e0\u5929\u540e\uff0c\u6211\u9012\u4ea4\u4e86\u8f9e\u804c\u4fe1\u3002\u4e00\u4f4d\u62db\u8058\u4eba\u5458\u6253\u7535\u8bdd\u7ed9\u6211\uff0c\u95ee\u6211\u662f\u5426\u6709\u5174\u8da3\u52a0\u5165\u4e00\u5bb6\u540d\u4e3aZendesk\u7684\u79d1\u6280\u516c\u53f8\u3002\n\u8fd9\u7b14\u94b1\u5f88\u4e0d\u9519\uff0c\u6211\u4ece\u4e00\u5bb6\u5728\u7ebd\u7ea6\u8bc1\u5238\u4ea4\u6613\u6240\u4e0a\u5e02\u7684\u516c\u53f8\u83b7\u5f97\u4e86\u65e2\u5f97\u5229\u76ca\u7684\u80a1\u7968\u3002\n\u5728\u68ee\u5fb7\u65af\u514b\u7684\u7b2c\u4e00\u5e74\u5f88\u5feb\u5c31\u8fc7\u53bb\u4e86\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u6211\u5728\u77ed\u65f6\u95f4\u5185\u53d6\u5f97\u4e86\u7a81\u98de\u731b\u8fdb\u7684\u8fdb\u6b65\u3002\n\u6211\u5728\u60f3\uff0c\u5982\u679c\u6211\u6709\u673a\u4f1a\u5728\u66f4\u5e74\u8f7b\u7684\u65f6\u5019\u52a0\u5165\u4e00\u5bb6\u5feb\u901f\u589e\u957f\u7684\u79d1\u6280\u516c\u53f8\uff0c\u60c5\u51b5\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\n\u4f46\u662f\u5509\uff0c\u90a3\u79cd\u719f\u6089\u7684\u8017\u5c3d\u7684\u611f\u89c9\u6162\u6162\u5730\u53c8\u56de\u6765\u4e86\u3002\u6211\u7684\u5185\u5728\u52a8\u529b\u518d\u6b21\u4e0b\u964d\u3002\n\u6211\u6ca1\u6709\u56e0\u4e3a\u5728\u79d1\u6280\u884c\u4e1a\u5de5\u4f5c\u800c\u7b4b\u75b2\u529b\u5c3d\u3002\u6211\u4e3a\u522b\u4eba\u5de5\u4f5c\u5df2\u7ecf\u7b4b\u75b2\u529b\u5c3d\u4e86\u3002\n\u538c\u5026\u4e86\u7528\u6211\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u6765\u6362\u53d6\u6709\u9650\u7684\u56de\u62a5\uff0c\u8fd9\u6837\u9ad8\u5c42\u7684\u4eba\u5c31\u53ef\u4ee5\u65e0\u9650\u53d7\u76ca\u3002\n\u5728Zendesk\u5de5\u4f5c\u671f\u95f4\uff0c\u6211\u4e5f\u5728\u8bd5\u9a8c\u526f\u4e1a\u9879\u76ee\u3002\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u9879\u76ee(\u8ba9\u6211\u4eec\u79f0\u5b83\u4e3aH\u9879\u76ee)\u5f00\u59cb\u4ea7\u751f\u6536\u5165\u3002\n\u6536\u5165\u5f00\u59cb\u589e\u957f\u3002\u589e\u957f\u901f\u5ea6\u6709\u6240\u52a0\u5feb\u3002(\u540e\u89c1\u4e4b\u660e101\uff1a\u5f53\u60a8\u7684\u6570\u636e\u70b9\u5f88\u5c11\u65f6\uff0c\u6bcf\u4e2a\u66f4\u6539\u90fd\u4f1a\u88ab\u653e\u5927)\u3002\n\u5728\u8bc4\u4f30\u7684\u65f6\u5019\uff0c\u6536\u5165\u5927\u7ea6\u662f\u6211\u5de5\u8d44\u768425%(\u4e0d\u5305\u62ec\u80a1\u7968\u7684\u4ef7\u503c)\u3002\n\u6839\u636e\u6211\u7684\u79ef\u84c4\uff0c\u6211\u8fd8\u6709\u4e00\u5e74\u7684\u5f00\u9500\u3002(\u5728\u6211\u6210\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6211\u90fd\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u50a8\u84c4\u8005)\u3002\n\u6700\u540e\uff0c\u6839\u636e\u76ee\u524d\u7684\u589e\u957f\u60c5\u51b5\uff0c\u6211\u5bf9H\u9879\u76ee\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6536\u5165\u9884\u6d4b\u3002\n\u6211\u5929\u771f\u5730\u51b3\u5b9a\uff0c\u6211\u5df2\u7ecf\u505a\u597d\u4e86\u4e00\u5207\u51c6\u5907\uff0c\u8981\u81ea\u5df1\u521b\u4e1a\uff0c\u5b8c\u5168\u4e13\u6ce8\u4e8eH\u9879\u76ee\u3002\n\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e00\u5e74\u524d\uff0c\u6211\u6b63\u5f0f\u79bb\u5f00\u4e86\u79d1\u6280\u4e1a\uff0c\u5f00\u59cb\u4e86\u6211\u7684\u4e2a\u4eba\u521b\u4e1a\u4e4b\u65c5\u3002\n\u6211\u662f\u4e0d\u662f\u53d8\u5f97\u66f4\u6709\u6210\u5c31\u611f\u4e86\uff1f\u662f\u4e5f\u4e0d\u662f\u3002(\u8fd9\u662f\u53e6\u4e00\u4e2a\u65f6\u95f4\u7684\u6545\u4e8b)\u3002\n\u9879\u76eeH\u5df2\u7ecf\u53d1\u5c55\u5230\u53ef\u4ee5\u8ba9\u6211\u7ef4\u6301\u4ee5\u524d\u7684\u751f\u6d3b\u65b9\u5f0f\u7684\u5730\u6b65\u3002\n\u6211\u5728\u5b66\u4e60\u76c8\u5229\u7684\u8fc7\u7a0b\u4e2d\u72af\u4e86\u5f88\u591a\u9519\u8bef\u3002\u591a\u770b\u4e66\uff0c\u4e5f\u8981\u8c03\u6574\u6211\u7684\u5fc3\u6001\u548c\u81ea\u6211\u3002\n\u6211\u5c06\u66f4\u9891\u7e41\u5730\u5199\u4f5c(\u65e0\u8bba\u662f\u5728\u5a92\u4f53\u4e0a\u8fd8\u662f\u5728\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\u4e0a)\u6765\u8bb0\u5f55\u6211\u7684\u65c5\u7a0b\u3002\n\u6211\u8fd8\u4f1a\u5728Twitter\u4e0a\u53d1\u5e03\u5bf9\u6211\u65c5\u9014\u7684\u77ed\u6682\u60f3\u6cd5\u3002\u4f60\u53ef\u4ee5\u8ddf\u7740\u6211\u53bb\u90a3\u91cc\u770b\u770b\u6211\u5947\u602a\u7684\u5927\u8111\u662f\u600e\u4e48\u8fd0\u4f5c\u7684\u3002", "note_en": "I had been working as a software engineer for 10 years. I started out working as a contract front-end engineer with no benefits.\n  One day, my Dad told me to get an \u201cactual\u201d job. At least talk to somebody.\n    I slowly work my way to the position of Team Lead. I picked up back-end development and did client-facing work along the way.\n  Things were fast-moving and nimble. It had to be when you are in the cut-throat consultancy industry. I met a bunch of smart people and absorbed tons of values.\n The firm was very flexible in terms of side projects. I built and ditched multiple projects. The only surviving ones are:\n   Towards the last few years at the consultancy firm, I started to burn out. My intrinsic motivation towards work was dropping like crazy.\n I took sabbatical leave (roughly 1\u20132 months) to try to clear my head. Every year, I told myself I would find new-found strength after my sabbatical.\n    A few days, I handed in my resignation letter. A recruiter called me, asking me if I was interested in joining a tech firm \u2014 Zendesk.\n  The money was good and I got vested stocks from a company that is listed on NYSE.\n    The first year at Zendesk went past quickly. Technically, I improved leaps and bounds in a short period of time.\n I wondered if I had the opportunity to join a fast-growing tech company at a younger age, things might have turned out differently.\n But alas, the familiar feeling of burn out slowly crept back. My intrinsic motivation was dropping again.\n   I\u2019m not burned out from working in tech. I\u2019m burned out from  working for someone else.\n Tired of using my time and energy in exchange for finite rewards so that someone at the top can benefit infinitely.\n   While working at Zendesk, I was experimenting with side projects too. One particular project (let\u2019s call it Project H) started to generate revenue.\n And the revenue started to grow. The growth was picking some speed. (Hindsight 101: When your data points are few, every change is amplified)\n At the point of evaluation, the revenue was around 25% of my salary (excluding the value of the stocks).\n Based on my savings, I also had 1-year runway of expenses. (I was not a good saver for the majority of my adulthood)\n Lastly, I did a stupidly simple revenue projection of Project H based on the current growth.\n Naively, I decided I\u2019m all set to strike out on my own and fully focus on Project H.\n   I\u2019m writing this article one year after I officially left tech and started my journey of solo-preneurship.\n Have I become more fulfilled? Yes and no. (That\u2019s a story for another time)\n Project H has grown to a point where it allows me to sustain my former lifestyle.\n I made tons of mistakes while learning to be profitable. Read lots of books and also adapt my mindset and my own ego.\n  I will be writing more often(either on Medium or my personal blog) to document my journey.\n I will also be posting transient thoughts about my journey on Twitter. You can  follow me there to find out how my weird brain works.", "posttime": "2020-05-03 15:06:53", "tags": "\u7406\u5de5\u5b66\u9662,decent,\u9879\u76ee,started", "title": "\u6211\u4ece\u7406\u5de5\u5b66\u9662\u6bd5\u4e1a\u540e\u4ecd\u7136\u8fc7\u7740\u4f53\u9762\u7684\u751f\u6d3b", "title_en": "I Got Out of Tech and Still Make a Decent Living", "transed": 1, "url": "https://medium.com/@p0larboy/how-i-got-out-of-tech-and-still-make-a-decent-living-e76a6059c7fc", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7406\u5de5\u5b66\u9662", "decent", "\u9879\u76ee", "started"]}, {"category": "", "categoryclass": "", "imagename": "452bace7fdd952d33c039c093d045182.png", "infoid": 1000456, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u8ba9\u4f60\u81ea\u5df1\u3001\u516c\u53f8\u548c\u4f60\u5468\u56f4\u7684\u4e16\u754c\u53d8\u5f97\u5f3a\u5927\u7684\u5730\u65b9\u3002\u6211\u4eec\u4e0d\u4ec5\u5728\u9020\u4ea7\u54c1\uff0c\u4e5f\u5728\u9020\u4eba\u3002", "note_en": "A place to empower yourself, the company, and the world around you. We\u2019re not only building a product, but people too.", "posttime": "2020-05-03 14:22:53", "tags": "\u8f6f\u4ef6,\u4eba\u5de5\u667a\u80fd,\u8679\u819c,iris,\u4ea7\u54c1", "title": "\u5bfb\u627e\u8679\u819c\u81ea\u52a8\u5316\u7684BDR-\u65e0\u4eba\u673a\u7684\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6", "title_en": "Looking for a BDR for Iris Automation \u2013 AI Software for Drones", "transed": 1, "url": "http://www.irisonboard.com/careers/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8f6f\u4ef6", "\u4eba\u5de5\u667a\u80fd", "\u8679\u819c", "iris", "\u4ea7\u54c1"]}]