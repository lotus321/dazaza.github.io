[{"category": "", "categoryclass": "", "imagename": "3cd67f8c773c5df13d60d9d2e7f8918c.png", "infoid": 1001961, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u7684\u610f\u601d\u662f\u4e0e\u4e0a\u4e00\u7bc7KVM\u6587\u7ae0\u76f8\u5bf9\u5e94\uff0c\u4f46\u5b83\u662f\u5173\u4e8e\u5bb9\u5668\u7684\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u901a\u8fc7\u5728\u6211\u4eec\u81ea\u5df1\u7684\u5c0f\u578b\u5bb9\u5668\u8fd0\u884c\u5668\u4e2d\u8fd0\u884cBusybox Docker\u6620\u50cf\u6765\u663e\u793a\u5bb9\u5668\u7684\u786e\u5207\u5de5\u4f5c\u65b9\u5f0f\u3002\n\u4e0eVM\u4e0d\u540c\uff0c\u5bb9\u5668\u662f\u4e00\u4e2a\u975e\u5e38\u6a21\u7cca\u7684\u672f\u8bed\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5c06\u5bb9\u5668\u79f0\u4e3a\u72ec\u7acb\u7684\u4ee3\u7801\u5305\u53ca\u5176\u4f9d\u8d56\u9879\uff0c\u5b83\u4eec\u53ef\u4ee5\u4e00\u8d77\u53d1\u5e03\uff0c\u5e76\u5728\u67d0\u4e2a\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u5185\u7684\u9694\u79bb\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u5982\u679c\u5b83\u542c\u8d77\u6765\u4ecd\u7136\u7c7b\u4f3c\u4e8eVM\uff0c\u90a3\u4e48\u8ba9\u6211\u4eec\u6df1\u5165\u7814\u7a76\u4e00\u4e0b\uff0c\u770b\u770b\u5bb9\u5668\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\n\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8fd0\u884c\u4e00\u4e2a\u666e\u901a\u7684Busybox Docker\u6620\u50cf\uff0c\u4f46\u6ca1\u6709docker\u3002Docker\u4f7f\u7528btrfs\u4f5c\u4e3a\u5176\u6620\u50cf\u7684\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u62c9\u53d6\u56fe\u50cf\u5e76\u5c06\u5176\u89e3\u538b\u5230\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff1a\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06busybox\u6620\u50cf\u6587\u4ef6\u7cfb\u7edf\u89e3\u538b\u5230rootfs\u6587\u4ef6\u5939\u4e2d\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c./rootfs/bin/sh\u5e76\u83b7\u5f97\u4e00\u4e2a\u5de5\u4f5c\u7684shell\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u67e5\u770b\u90a3\u91cc\u7684\u8fdb\u7a0b\u3001\u6587\u4ef6\u6216\u7f51\u7edc\u63a5\u53e3\u7684\u5217\u8868\uff0c\u6211\u4eec\u5c06\u770b\u5230\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u63a7\u5236\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u770b\u5230\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4f7f\u7528\u514b\u9686(2)\u800c\u4e0d\u662f\u5206\u53c9(2)\u3002Clone\u7684\u529f\u80fd\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u5141\u8bb8\u60a8\u4f20\u9012\u6807\u5fd7\uff0c\u5b9a\u4e49\u60a8\u60f3\u8981\u5171\u4eab\u7684\u8d44\u6e90\u3002\n\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u5c1d\u8bd5\u9694\u79bb\u8fdb\u7a0b\u3001IPC\u3001\u7f51\u7edc\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u56e0\u6b64\u6211\u4eec\u5f00\u59cb\uff1a\n\u9759\u6001\u5b57\u7b26CHILD_STACK[1024*1024]\uff1bINT CHILD_MAIN(void*arg){printf(&#34\uff1bHello from Child\uff01PID=%d\\n&#34\uff1b\uff0cgetPID()\uff1breturn 0\uff1b}int main(int argc\uff0cchar*argv[]){int flag=CLONE_NENS|CLONE_NEWUTS|CLONE_NEWPID|CLONE_NEWIPC|CLONE_NENet\uff1bINT PID=CLONE(CHILD_Main\uff0cCHILD_STACK+sizeof(CHILD_STACK)\uff0cFLAGS|SIGCHLD\uff0cargv+1)\uff1bif(PID&lt\uff1b0){fprintf\u3002}waitpid(PID\uff0cNULL\uff0c0)\uff1b\u8fd4\u56de0\uff1b}\u3002\n\u8fd9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5df2\u7ecf\u5f88\u6709\u8da3\u7684\u7ed3\u679c\uff1a\u5b50\u8fdb\u7a0bPID\u662f1\u3002\u6211\u4eec\u90fd\u77e5\u9053PID 1\u901a\u5e38\u662finit\uff0c\u4f46\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u8fdb\u7a0b\u5217\u8868\uff0c\u5176\u4e2d\u5b83\u5df2\u6210\u4e3a\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u3002\n\u4e3a\u4e86\u66f4\u5bb9\u6613\u5730\u719f\u6089\u65b0\u73af\u5883\uff0c\u8ba9\u6211\u4eec\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u4e00\u4e2ashell\u3002\u5b9e\u9645\u4e0a\uff0c\u8ba9\u6211\u4eec\u8fd0\u884c\u4efb\u610f\u547d\u4ee4\uff0c\u5f88\u50cfdocker run\uff1a\n\u73b0\u5728\uff0c\u4f7f\u7528\u201c/bin/sh\u201d\u53c2\u6570\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u6253\u5f00\u4e00\u4e2a\u771f\u6b63\u7684shell\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u952e\u5165\u547d\u4ee4\u3002\u8fd9\u8868\u660e\u6211\u4eec\u5173\u4e8e\u5b64\u7acb\u7684\u770b\u6cd5\u662f\u591a\u4e48\u9519\u8bef\uff1a\n#ECHO$$1#ps PID TTY\u65f6\u95f4CMD 5998\u5206/31 00\uff1a00\uff1a00\uff1a00 sudo 5999\u5206/31 00\uff1a00\uff1a00\uff1a00 Main 6001\u5206/31 00\uff1a00\uff1a00 sh 6004\u5206/31 00\uff1a00\uff1a00\uff1a00 ps\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0cshell\u8fdb\u7a0b\u672c\u8eab\u7684PID\u4e3a1\uff0c\u4f46\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4ece\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u67e5\u770b\u548c\u8bbf\u95ee\u6240\u6709\u5176\u4ed6\u8fdb\u7a0b\u3002\u539f\u56e0\u662f\u8fdb\u7a0b\u5217\u8868\u662f\u4eceprocfs\u8bfb\u53d6\u7684\uff0c\u5b83\u4ecd\u7136\u662f\u7ee7\u627f\u7684\u3002\n\u73b0\u5728\uff0c\u8fd0\u884cshell\u4f1a\u4e2d\u65adps\u3001mount\u548c\u5176\u4ed6\u547d\u4ee4\uff0c\u56e0\u4e3a\u6ca1\u6709\u6302\u8f7dprocfs\u3002\u8fd8\u662f\u6bd4\u6cc4\u9732\u7236\u6bcd\u7684\u901a\u884c\u8bc1\u8981\u597d\u3002\n\u5728\u8fc7\u53bb\uff0cchroot\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\u6765\u8bf4\u662f\u4e00\u4e2a\u201c\u8db3\u591f\u597d\u201d\u7684\u9694\u79bb\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6539\u7528PIVOT_ROOT\u3002\u6b64\u7cfb\u7edf\u8c03\u7528\u5c06\u73b0\u6709\u7684rootfs\u79fb\u5230\u67d0\u4e2a\u5b50\u76ee\u5f55\u4e2d\uff0c\u5e76\u4f7f\u53e6\u4e00\u4e2a\u76ee\u5f55\u6210\u4e3a\u65b0\u7684\u6839\u76ee\u5f55\uff1a\nint Child_main(void*arg){/*unmount procfs*/umount2(&#34\uff1b/proc&#34\uff1b\uff0cmnt_disach)\uff1b/*\u900f\u89c6\u6839*/mount(&#34\uff1b./rootfs&#34\uff1b\uff0c&#34\uff1b./rootfs&#34\uff1b\uff0c&#34\uff1b\uff1bbind&#34\uff1b\uff0cMS_bind|MS_REC\uff0c&#34\uff1b)\uff1bmkdir(&#34\uff1b\u3002./rootfs&#34\uff1b\uff0c&#34\uff1b./rootfs/oldrootfs&#34\uff1b)\uff1bchdir(&#34\uff1b/&#34\uff1b)\uff1bumount2(&#34\uff1b/oldrootfs&#34\uff1b\uff0cmnt_disach)\uff1brmdir(&#34\uff1b/oldrootfs&#34\uff1b)\uff1b/*\u91cd\u65b0\u6302\u8f7dprocfs*/mount(&#34\uff1bproc&#34\uff1b\uff0c&#34\uff1b/proc\u3002/*\u8fd0\u884c\u8fdb\u7a0b*/char**argv=(char**)arg\uff1bexecvp(argv[0]\uff0cargv)\uff1b\u8fd4\u56de0\uff1b}\u3002\n\u5c06tmpfs\u6302\u8f7d\u5230/tmp\u4e2d\uff0c\u5c06sysfs\u6302\u8f7d\u5230/sys\u4e2d\u5e76\u521b\u5efa\u4e00\u4e2a\u6709\u6548\u7684/dev\u6587\u4ef6\u7cfb\u7edf\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u4e3a\u4e86\u7b80\u77ed\u8d77\u89c1\uff0c\u6211\u5c06\u8df3\u8fc7\u5b83\u3002\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u73b0\u5728\u6211\u4eec\u53ea\u770b\u5230busybox\u56fe\u50cfrootfs\u4e2d\u7684\u6587\u4ef6\uff0c\u5c31\u597d\u50cf\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u4e86chroot\uff1a\n/#lsbin dev etc home proc root sys tmp usr var/#mount/dev/sda2 on/type ext4(rw\uff0crelatime\uff0cdata=order)proc on/proc type proc(rw\uff0crelatime)/#psPID\u7528\u6237\u65f6\u95f4\u547d\u4ee41 root 0\uff1a00/bin/sh 4 root 0\uff1a00 ps/#ps axPID\u7528\u6237\u65f6\u95f4\u547d\u4ee41 root 0\uff1a00/bin/sh 5 root 0\uff1a00 ps ax\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b83\u770b\u8d77\u6765\u6216\u591a\u6216\u5c11\u662f\u5b64\u7acb\u7684\uff0c\u4e5f\u8bb8\u592a\u5b64\u7acb\u4e86-\u6211\u4eec\u65e0\u6cd5ping\u901a\u4efb\u4f55\u4e1c\u897f\uff0c\u7f51\u7edc\u4f3c\u4e4e\u6839\u672c\u65e0\u6cd5\u5de5\u4f5c\u3002\n\u521b\u5efa\u65b0\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u53ea\u662f\u4e2a\u5f00\u59cb\u3002\u6211\u4eec\u9700\u8981\u4e3a\u5176\u5206\u914d\u7f51\u7edc\u63a5\u53e3\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u8bbe\u7f6e\u4ee5\u6267\u884c\u6b63\u786e\u7684\u6570\u636e\u5305\u8f6c\u53d1\u3002\n\u5982\u679c\u60a8\u6ca1\u6709br0\u63a5\u53e3\uff0c\u8ba9\u6211\u4eec\u624b\u52a8\u521b\u5efa(brctl\u662fUbuntu\u4e0abridge-utils\u5305\u7684\u4e00\u90e8\u5206)\uff1a\nbrctl addbr br0ip addr add dev br0 172.16.0.100/24ip\u94fe\u8def\u96c6br0 upsudo iptables-A FORWARD-I wlp3s0-o br0-j ACCEPTsudo iptables-A ward-o wlp3s0-I br0-j ACCEPTsudo iptables-t nat-A POSTROUTING-s 172.16.0.0/16-j\u4f2a\u88c5\u3002\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0cwlp3s0\u662f\u6211\u7684\u4e3b\u8981WiFi\u7f51\u7edc\u63a5\u53e3\uff0c172.16.x.x\u662f\u5bb9\u5668\u7684\u7f51\u7edc\u3002\n\u6211\u4eec\u7684\u5bb9\u5668\u542f\u52a8\u5668\u5e94\u8be5\u505a\u7684\u662f\u521b\u5efa\u4e00\u5bf9\u5bf9\u7b49\u63a5\u53e3veth0\u548cveth1\uff0c\u5c06\u5b83\u4eec\u94fe\u63a5\u5230br0\uff0c\u5e76\u5728\u5bb9\u5668\u5185\u8bbe\u7f6e\u8def\u7531\u3002\nsystem(&#34\uff1bIP link add veth0 type Veth Peer Name veth1&#34\uff1b)\uff1bsystem(&#34\uff1bIP link set veth0 up&#34\uff1b)\uff1bsystem(&#34\uff1bbrctl add f br0 veth0&#34\uff1b)\uff1b\n\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u5728\u5bb9\u5668\u5916\u58f3\u4e2d\u8fd0\u884c\u201cip link\u201d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u4e00\u4e2a\u73af\u56de\u63a5\u53e3\u548c\u4e00\u4e9bveth1@xxxx\u63a5\u53e3\u3002\u4f46\u662f\u7f51\u7edc\u4ecd\u7136\u4e0d\u8d77\u4f5c\u7528\u3002\u8ba9\u6211\u4eec\u5728\u5bb9\u5668\u4e2d\u8bbe\u7f6e\u552f\u4e00\u7684\u4e3b\u673a\u540d\uff0c\u5e76\u914d\u7f6e\u8def\u7531\uff1a\nint Child_main(void*arg){.\u3002sethostname(&#34\uff1bExample&#34\uff1b\uff0c7)\uff1bSystem(&#34\uff1bIP link set veth1 up&#34\uff1b)\uff1bchar IP_addr_add[4096]\uff1bsnprintf(IP_addr_add\uff0csizeof(IP_Addr_Add)\uff0c&#34\uff1bIP addr add 172.16.0.101/24 dev th1&#34\uff1b)\uff1bsystem(Ip_Addr_Add)\uff1bsystem(&#34\uff1broute add default\u3002execvp(argv[0]\uff0cargv)\uff1b\u8fd4\u56de0\uff1b}\u3002\n/#IP link1\uff1aLO\uff1a&lt\uff1bloopback&gt\uff1bmtu 65536 qdisk noop qlen 1 link/loopback 00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a0047\uff1aveth1@if48\uff1a&lt\uff1bBroadcast\uff0cMulticast\uff0cUp\uff0cLow_Up\uff0cM-Down&gt\uff1bMTU 1500 qdisk noqueue qlen 1000\u94fe\u8def/\u4ee5\u592a72\uff1a0A\uff1af0\uff1a91\uff1ad5\uff1a11 brd ff\uff1aff/#hostname\u793a\u4f8b/#ping 1.1.1.1 PING 1.1.1.1(1.1.1.1)\uff1a56\u6570\u636e\u5b57\u82821.1.1.1\uff1aSEQ=0 ttl=57 time=27.161 ms 64\u5b57\u8282from 1.1.1.1\uff1aseq=1 ttl=57 time=26.048 ms 64 bytes from 1.1.1.1\uff1aseq=2 ttl=57 time from 1.1.1.1\uff1aseq=2 ttl=57 time\uff1aseq=1 ttl=57 time=26.048 ms64 byte from 1.1.1.1\uff1aseq=2 ttl=57 time\u3002\n\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728https://gist.github.com/zserge/4ce3c1ca837b96d58cc5bdcf8befb80e.\u4e0a\u627e\u5230\u3002\u5982\u679c\u60a8\u53d1\u73b0\u9519\u8bef\u6216\u6709\u4ec0\u4e48\u5efa\u8bae\uff0c\u8bf7\u5728\u6b64\u7559\u8a00\uff01\n\u663e\u7136\uff0cDocker\u505a\u7684\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\u3002\u4f46\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0cLinux\u5185\u6838\u62e5\u6709\u8fd9\u4e48\u591a\u65b9\u4fbf\u7684API\uff0c\u800c\u4e14\u4f7f\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u865a\u62df\u5316\u975e\u5e38\u5bb9\u6613\u3002", "note_en": "This post is meant to be a counterpart to the previous  KVM post, but about containers instead. The idea is to show how exactly containers work by running a busybox Docker image in our own small container runner.\n Unlike a VM, container is very vague term. Normally, we call containers a self-contained bundle of code and its dependencies, that can be shipped together and run in an isolated environment inside some host operating system. If it still sounds similar to a VM, let\u2019s dive deeper and see how containers are implemented.\n  Our end goal would be to run a common busybox Docker image, but without docker. Docker uses btrfs as a filesystem format for its images. Let\u2019s try pulling the image and unpack it into a directory:\n  Now we got busybox image filesystem unpacked into the  rootfs folder. Surely, we can run  ./rootfs/bin/sh and get a working shell, but if we look at the list of the processes there, or files, or network interfaces - we will see that we have access to our whole OS.\n   Since we want to control what a child process can see, we will be using clone(2) instead of fork(2). Clone does pretty much the same, but allows you to pass flags, defining which resources you would want to share.\n   In our experiment we will try to isolate processes, IPC, network and file systems, so here we go:\n static char child_stack[1024 * 1024];int child_main(void *arg) { printf(&#34;Hello from child! PID=%d\\n&#34;, getpid()); return 0;}int main(int argc, char *argv[]) { int flags = CLONE_NEWNS | CLONE_NEWUTS | CLONE_NEWPID | CLONE_NEWIPC | CLONE_NEWNET; int pid = clone(child_main, child_stack + sizeof(child_stack), flags | SIGCHLD, argv + 1); if (pid &lt; 0) { fprintf(stderr, &#34;clone failed: %d\\n&#34;, errno); return 1; } waitpid(pid, NULL, 0); return 0;}\n  This gives an already interesting result: child PID is 1. We all know that PID 1 is normally  init, but in this case we see that child process got its own isolated list of processes, where it has become the first process.\n  To easier play around the new environment, let\u2019s run a shell in the child process. Actually, let\u2019s run arbitrary commands, much like  docker run:\n  Now, running our app with \u201c/bin/sh\u201d argument opens a real shell, where we can type commands. This shows how wrong we were about the isolation:\n # echo $$1# ps PID TTY TIME CMD 5998 pts/31 00:00:00 sudo 5999 pts/31 00:00:00 main 6001 pts/31 00:00:00 sh 6004 pts/31 00:00:00 ps\n As we see, the shell process itself has a PID of 1, but actually can see and access all the other processes from the host OS. The reason is that the list of processes is read from procfs, which is still inherited.\n   Now, running the shell breaks ps, mount, and other command, because no procfs is mounted. Still better than leaking the parent\u2019s procfs.\n  In the old days chroot was a \u201cgood enough\u201d isolation for most use cases, but here let\u2019s use a  pivot_root instead. This system call moves and existing rootfs into some subdirectory, and make a another directory a new root:\n int child_main(void *arg) { /* Unmount procfs */ umount2(&#34;/proc&#34;, MNT_DETACH); /* Pivot root */ mount(&#34;./rootfs&#34;, &#34;./rootfs&#34;, &#34;bind&#34;, MS_BIND | MS_REC, &#34;&#34;); mkdir(&#34;./rootfs/oldrootfs&#34;, 0755); syscall(SYS_pivot_root, &#34;./rootfs&#34;, &#34;./rootfs/oldrootfs&#34;); chdir(&#34;/&#34;); umount2(&#34;/oldrootfs&#34;, MNT_DETACH); rmdir(&#34;/oldrootfs&#34;); /* Re-mount procfs */ mount(&#34;proc&#34;, &#34;/proc&#34;, &#34;proc&#34;, 0, NULL); /* Run the process */ char **argv = (char **)arg; execvp(argv[0], argv); return 0;}\n It would make sense to mount tmpfs into /tmp, sysfs into /sys and create a valid /dev filesystem, but to keep things short I\u2019ll skip it.\n Anyway, now we only see the files from busybox image rootfs, as if we chrooted into it:\n / # lsbin dev etc home proc root sys tmp usr var/ # mount/dev/sda2 on / type ext4 (rw,relatime,data=ordered)proc on /proc type proc (rw,relatime)/ # psPID USER TIME COMMAND 1 root 0:00 /bin/sh 4 root 0:00 ps/ # ps axPID USER TIME COMMAND 1 root 0:00 /bin/sh 5 root 0:00 ps ax\n At this point it looks more or less isolated, perhaps, too isolated - we can not ping anything and the network does not seem to work at all.\n  Creating a new network namespace was only the start. We need to assign network interfaces to it and set them up to do proper packet forwarding.\n If you don\u2019t have a br0 interface, let\u2019s create it manually (brctl is part of bridge-utils package on Ubuntu):\n brctl addbr br0ip addr add dev br0 172.16.0.100/24ip link set br0 upsudo iptables -A FORWARD -i wlp3s0 -o br0 -j ACCEPTsudo iptables -A FORWARD -o wlp3s0 -i br0 -j ACCEPTsudo iptables -t nat -A POSTROUTING -s 172.16.0.0/16 -j MASQUERADE\n In my case, wlp3s0 was my primary WiFi network interface and 172.16.x.x was a network for the container.\n What our container launcher should do is to create a pair of peer interfaces, veth0 and veth1, link them to the br0 and set up routing within the container.\n  system(&#34;ip link add veth0 type veth peer name veth1&#34;);system(&#34;ip link set veth0 up&#34;);system(&#34;brctl addif br0 veth0&#34;);\n   Now if we run \u201cip link\u201d in the container shell we will see a loopback interface, and some veth1@xxxx interface. But the network still doesn\u2019t work. Let\u2019s set a unique hostname in the container and configure the routes:\n int child_main(void *arg) { .... sethostname(&#34;example&#34;, 7); system(&#34;ip link set veth1 up&#34;); char ip_addr_add[4096]; snprintf(ip_addr_add, sizeof(ip_addr_add), &#34;ip addr add 172.16.0.101/24 dev veth1&#34;); system(ip_addr_add); system(&#34;route add default gw 172.16.0.100 veth1&#34;); char **argv = (char **)arg; execvp(argv[0], argv); return 0;}\n  / # ip link1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:0047: veth1@if48: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue qlen 1000 link/ether 72:0a:f0:91:d5:11 brd ff:ff:ff:ff:ff:ff/ # hostnameexample/ # ping 1.1.1.1PING 1.1.1.1 (1.1.1.1): 56 data bytes64 bytes from 1.1.1.1: seq=0 ttl=57 time=27.161 ms64 bytes from 1.1.1.1: seq=1 ttl=57 time=26.048 ms64 bytes from 1.1.1.1: seq=2 ttl=57 time=26.980 ms...\n   The full source code is available at  https://gist.github.com/zserge/4ce3c1ca837b96d58cc5bdcf8befb80e. If you found a mistake or got a suggestion - please leave a comment there!\n Obviously, Docker does much more than this. But it\u2019s amazing how many convenient APIs Linux kernel has and easy it is to use them to achieve OS-level virtualization.", "posttime": "2020-05-13 19:02:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,linux,containers,\u5bb9\u5668", "title": "\u51e0\u884c\u4ee3\u7801\u4e2d\u7684Linux\u5bb9\u5668", "title_en": "Linux containers in a few lines of code", "transed": 1, "url": "https://zserge.com/posts/containers/", "via": "", "real_tags": ["\u4ee3\u7801", "linux", "\u5bb9\u5668"]}, {"category": "", "categoryclass": "", "imagename": "088418436f78df1518b98acc4030270a.png", "infoid": 1001960, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5df2\u7ecf\u53cd\u6c47\u7f16\u548c/\u6216\u641c\u7d22BIOS\u548cVGA-ROM\u4e2d\u7684\u5b57\u4f53\uff0c\u5e76\u5c06\u5176\u89e3\u538b\u3002\u6211\u8fd8\u7f16\u5199\u4e86\u4e00\u4e9b\u5de5\u5177\u6765\u652f\u6301\u8fd9\u9879\u5de5\u4f5c\u3002\u6240\u6709\u89e3\u538b\u7684\u5b57\u4f53\u548c\u5c4f\u5e55\u622a\u56fe\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\u6211\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4e2a\u5927\u8868\u6765\u663e\u793a\u6240\u6db5\u76d6\u7684\u5185\u5bb9\u3002\u6211\u4e5f\u770b\u4e86\u4e00\u4e0b\uff0c\u5e76\u5199\u4e86\u5173\u4e8e\u5f00\u6e90BIOS/\u6e90\u4ee3\u7801\u7684\u5b57\u4f53\u3002\n\u5982\u679c\u4f60\u6709\u5947\u7279\u7684ROM\u6216\u8005\u5176\u4ed6\u5f00\u6e90BIOS\u7684\u94fe\u63a5\uff0c\u8bf7\u8ba9\u6211\u77e5\u9053\u3002\u6d4b\u8bd5\u4e00\u4e2aROM\u7684\u5df2\u77e5\u5b57\u4f53\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u8fd9\u4e2a\u5217\u8868\u53ea\u9700\u8981\u51e0\u5206\u949f\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5b57\u4f53\u8fd8\u4e0d\u77e5\u9053\uff0c\u6211\u5f88\u4e50\u610f\u63d0\u53d6\u5e76\u8bb0\u5f55\u5b83\uff1a)\u6211\u771f\u7684\u5bf9\u5177\u6709\u5947\u602a\u7684LCD\u5b57\u4f53\u548c\u5d4c\u5165\u5f0f\u8bbe\u5907(\u5982POS\u7cfb\u7edf\u3001\u6536\u94f6\u673a\u3001\u81ea\u52a8\u53d6\u6b3e\u673a\u7b49)\u7684\u65e7\u7b14\u8bb0\u672c\u7535\u8111\u7684ROM\u611f\u5174\u8da3\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u6709\u672c\u5730\u5316\u7684\u663e\u5361\uff0c\u5b83\u4f1a\u5e26\u6765\u4e00\u4e2a\u672c\u5730\u5b57\u7b26\u96c6(\u4f8b\u5982\u3002\u5e0c\u814a\u8bed)\uff0c\u6211\u5f88\u9ad8\u5174\u63d0\u53d6\u4ed6\u4eec\u7684\u5b57\u4f53\u3002\n\u6211\u5df2\u7ecf\u63d0\u53d6\u4e86240\u591a\u4e2aROM\u5b57\u4f53\u3002\u5f88\u53ef\u80fd\u6211\u4e0d\u4f1a\u4e3a\u6bcf\u79cd\u5b57\u4f53\u66f4\u65b0\u8fd9\u4e2a\u8ba1\u6570\u5668\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4ec0\u4e48\u65b0\u7684\u5185\u5bb9\u4e0e\u60a8\u76f8\u5173\uff0c\u8bf7\u68c0\u67e5font-bin\u548cfont-images\u6587\u4ef6\u5939\u3002\n\u6211\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4e2a\u5de5\u5177\u6765\u6d4f\u89c8ROM\u6620\u50cf\u5e76\u641c\u7d228x8\u30018x14\u30018x16\u5b57\u7b26\u96c6\u548c\u5bfc\u51fa\u3002\u5b83\u53ef\u4ee5\u5728GitHub\u4e0a\u7684\u53e6\u4e00\u4e2arepo\u4e2d\u627e\u5230\uff0c\u540d\u4e3a&#34\uff1bromfont-Extractor&#34\uff1b\u3002\n\u56fe\u4f8b\uff1a&#34\uff1bOK&#34\uff1b-font\u5df2\u89e3\u538b&#34\uff1bXX&34\uff1b-ROM\u4e2d\u672a\u5305\u542bfont(\u8f83\u65b0\u7684\u5361\u901a\u5e38\u4e0d\u53d1\u8d278x14)&#34\uff1b&#34\uff1b-\u5c1a\u672a\u5b8c\u6210&#34\uff1b\uff1f\uff1f&#34\uff1b-\u6709\u4e9b\u5947\u602a\u7684&#34\uff1bLO&#34\uff1b-\u53ea\u6709\u8f83\u4f4e\u7684128\u4e2a\u5b57\u7b26\u53ef\u7528ROM\u7684\u6587\u4ef6\u540d8x8 8x14 8x16\u603b\u7ebf\u5185\u5b58\u65e5\u671f\u5907\u6ce8(BIOS\u624b\u518c\u3001\u5e74\u4efd\u3001\u7248\u672c\u3001\u3002.)-+\u3002--ATI.X550.128.040512.rom|ok|xx|ok|Asus.6200.16.050106.rom|\uff1f\uff1f|\uff1f\uff1f|NV44\uff0c2004 NVIDIA\uff0c\u7248\u672c5.44.02.11.00/AS05CLGD5442.ROM|ok|CL-GD540x/542x VGA BIOS\u7248\u672c1.20,1992-1993 Cirrus Logic\uff0c1987-1990 Quadtelavga1-a11.bin|\uff1f\uff1f|\uff1f||AVGA2.ROM|ok|Commodore386SX-25_AVGA2.bin|ok|ISA|512k|03/19/92\u30021984\u5e74\u81f31991\u5e74PhoenixConnect3D.9500NP.128.Infineon30.021212.rom|ok|xx|ok|agp||2002\u5e7412\u670812\u65e5|R300\uff0c\u82f1\u98de\u51cc\u5185\u5b58BIOS-P/N113-94232-101,1988\u5e74\u81f32002\u5e74ATI BK-ATI VER008.004.008.004\u94bb\u77f3\u9690\u5f6264\u89c6\u9891vRAM PCI 3.00.bin|ok|PCI||07/05/95|\u9690\u5f6264\u89c6\u9891vRAM\u7248\u672c\u30023.00\uff0c\u94bb\u77f3\u591a\u5a92\u4f53\u7cfb\u7edfELSAVIC2.ROM|ok|agp||11/23/98|ELSA VIENCE II 4.03.00\uff0c98-98 ELSA\uff0c90-98 ELPIN\u7cfb\u7edfElsa.FireGLV3200.128.040910.rom|ok|xx|ok|PCIE|128MB|2004/09/10|RV380,1988\u5e74-2003\u5e74\uff0cATI BK-ATI VER008.015.121.000FujitsuSiemens.QuadroFX1700.512.080123.rom|\uff1f|\uff1f\uff1f|\uff1f\uff1f||512MB|\u3002\u538b\u7f29\u5b57\u4f53\uff1f\u7b2c\u4e00\u773c\u627e\u4e0d\u5230\u5b57\u4f53FujitsuSiemens.X300Mobility.32.050608.rom|ok|xx|ok|32MB||G400.ROM|ok|xx|ok|MatroxGENOA.ROM|ok|TsengGigabyte.6200.16.050711.rom|\uff1f\uff1f|\uff1f\uff1f|\uff1f|\uff1f\uff1f\u538b\u7f29\u5b57\u4f53\uff1f\u7b2c\u4e00\u773c\u627e\u4e0d\u5230\u5b57\u4f53Leadtek.6200.16.050128.rom|\uff1f\uff1f|\uff1f\uff1f|\uff1f\u538b\u7f29\u5b57\u4f53\uff1f\u7b2c\u4e00\u773c\u627e\u4e0d\u5230\u5b57\u4f53M32.ROM|ok|PCI|ATIM64GX.ROM|ok|MGAMIL2.ROM|ok|xx|ok|MIROV968.ROM|ok|\u4e0eV7MERCMORSE KP800 VGA CL-GD520A-32PC-B.bin|ok|CL AwardNCR VLB VGA CL-GD5428-80QC-A.bin\u76f8\u540c|\u3002xx|ok|STBS3T64V2.ROM|ok|PCI||S3S3VIRGX2.ROM|ok|PCI|S3Sapphire.9600NP.256.unnown.031028.rom|ok|xx|ok||256MB||Sapphire.9600PRO.128.Samsung28.030829.rom|ok|xx|ok|128MB||TNT2M6\u3002OK|ok|ISA|V7MERC.ROM|ok|V7_Vega|ok|\u4f7f\u75283dfx\u5b57\u4f53\u96c6\uff0c\u4e0eV7MERCvideo_seven_vega_vga_62L1989V5_435-0016-47.bin|ok|VANTA.ROM|ok|ok|\uff1f\uff1f|8x16\u5728ROMVANTAGE.ROM|xx|ok|ok|\u6ca1\u67098x8\u5b57\u4f53VDOO3PCI.ROM|ok|3dfx ElpinWIN1KXHR.ROM|ok|ESLAWONDER16.ROM|ok|XGA.ROM|ok|\u3002|ok|xx|ok|et4000w32isa.BIN|ok|et4000_weirdlowerL.bin|ok|ISA|512k/1M||\u6709\u4e00\u4e2a\u5947\u602a\u76848x14\u548c8x16\u5b57\u7b26\u96c6\u7684\u5c0fL\u3002\u5178\u578b\u7684\u7535\u8111\u5b57\u4f53\u66f4\u6539\u3002OakTechnolgy-UNKNOWN-1.bin|ok|OakTechnolgyVGA-KO77.bin|ok|QuadtelS3_86C801_86C805EnhancedVGABIOS2.13.01|ok|QuadtelVGABIOSVersion1.21.00.bin|ok|SVGA141.ROM|ok|S3_764.bin|ok|TridentTVGA8900C_S27C256.bin|\uff1f|\uff1f|ok|ok|tvga-c4.3.rom|ok|tvga-d3\nIBM\u5728\u7b2c\u4e00\u4e2aPC BIOS\u4e2d\u4f7f\u7528\u4e86\u4e00\u79cd\u5b57\u4f53\uff0c\u8fd9\u79cd\u5b57\u4f53\u5728BIOS\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e2d\u6709\u6240\u6539\u53d8\u3002\u5728\u6b64\u7248\u672c\u4e4b\u540e\uff0c\u8fd9\u4e9b\u673a\u5668\u4e0a\u7684\u5b57\u4f53\u4fdd\u6301\u4e0d\u53d8\uff1aIBM AT v1\u3001v2\u3001v3\u4ece\u7b2c\u4e00\u4e2a\u7248\u672c\u5230\u7b2c\u4e8c\u4e2a\u7248\u672c\u7684\u552f\u4e00\u66f4\u6539\u662f1\u4f4d\uff0c\u8fd9\u5728\u67e5\u770b\u65f6\u4f1a\u4ea7\u751f\u5de8\u5927\u7684\u5dee\u5f02(ASCII 0x04\uff0c\u5e95\u884c0x00\u66f4\u6539\u4e3a0x08)\u3002\u8be5\u5b57\u4f53\u53ea\u6709\u8f83\u4f4e\u7684128\u4e2a\u5b57\u7b26\u3002\nQEMU hiios 8x8\u548c8x14\u4e0eIBM\u7684VGA\u548cXGA\u5b57\u4f53\u5b8c\u5168\u5339\u914d\u3002\u8fd9\u4e9b\u6587\u4ef6\u4f4d\u4e8eSIMTEL\u7684fntcol16.zip\u4e2d\u3002VGA-ROM.F08\u548cVGA-ROM.F14.qemu\u6765\u6e90\u8bc4\u8bba\u58f0\u79f0\u8fd9\u662f\u516c\u5171\u9886\u57df\u3002\u6211\u6000\u7591IBM\u662f\u5426\u4f1a\u5c06\u5b57\u4f53\u53d1\u5e03\u5230\u516c\u5171\u9886\u57df\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\uff0cQEMU\u4f9d\u8d56\u4e8ePackagCreator\u7684\u58f0\u660e\uff0c\u800c\u73b0\u5728\u4ed6\u4eec\u4f7f\u7528\u7684\u662f\u975e\u6cd5\u62f7\u8d1d\uff1f\nBochs bios 8x8\u53ea\u63d0\u4f9b\u4e86128\u4e2a\u5b57\u7b26\uff0c\u4e0eIBM\u7684\u7b2c\u4e8c\u79cd\u5b57\u4f53\u5b8c\u5168\u5339\u914d\uff0c\u4e0ehiios 8x8\u5b57\u4f53(\u8bb8\u53ef)\u76f8\u540c\u3002\nAVGA2\u6709\u5b8c\u5168\u72ec\u7279\u7684\u5b57\u4f53-TODO-\u9010\u4f4d\u6bd4\u8f83-\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\n\u770b\u4e00\u4e0bMD5SUMS\u6587\u4ef6\uff0c\u5b83\u662f\u6309\u603b\u548c\u6392\u5e8f\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u60a8\u5c06\u770b\u5230\u54ea\u4e9b\u5361\u7247\u5177\u6709\u76f8\u540c\u7684\u5b57\u4f53\u3002\u5982\u679c\u60a8\u60f3\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fe\u50cf\u67e5\u770b\u5668\u5e76\u67e5\u770b\u6240\u9700\u5b57\u4f53\u7684\u7f29\u653e\u56fe\u50cf\u3002\n\u6587\u4ef6\u5939lowercharset\u5305\u542b\u8981\u67e5\u770b\u7684\u6240\u67098x8\u5b57\u4f53\u7684\u4f4e128\u4e2a\u5b57\u7b26\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u7684IBM PC\u6216\u8be5\u5b57\u4f53\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u3002", "note_en": "I have diassembled and/or searched BIOS and VGA-ROMs for fonts and extracted these.Also I have written a few tools to support this job.All extracted fonts and screenshots are available here. I have written a bigtable to show what is covered. Also had a look and wrote about fonts of opensource BIOSes/source available.\n If you have exotic ROMs or links to other open source BIOSes please let me know.Testing a ROM for known fonts and add it to this list only takes a few minutes andif there is one with a yet unknown font, I am happy to extract and document it :) I am really intersted in ROMs of old laptops with weird LCD-fonts and embeddeddevices (like POS systems, cash registers, money machines and other stuff).Also if you have localized graphic cards, that bring a local charset (ex. greek),I am happy to extract their&#39; fonts.\n I already extracted more than 240 ROM-fonts. Most likely I am not updating thiscounter for every font, so check the font-bin and font-images folder, if thereis something new relevant to you.\n  I have written a tool to browse a ROM image and search for 8x8, 8x14, 8x16 charsetsand export.It can be found here on github in another repo, called &#34;romfont-extractor&#34;.\n   LEGEND: &#34;ok&#34; - font already extracted &#34;XX&#34; - font not included in ROM (newer cards dont ship 8x14 usually) &#34; &#34; - not yet done &#34;??&#34; - something strange &#34;LO&#34; - only lower 128 characters availableFilename of ROM 8x8 8x14 8x16 Bus Memory Date Comments (BIOS manuf., year, version, ...)------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------ATI.X550.128.040512.rom | ok | xx | ok | | | |Asus.6200.16.050106.rom | ?? | ?? | ?? | | | | NV44, 2004 Nvidia, Version 5.44.02.11.00 / AS05CLGD5442.ROM | ok | ok | ok | | | | CL-GD540x/542x VGA BIOS Version 1.20, 1992-1993 Cirrus Logic, 1987-1990 Quadtelavga1-a11.bin | ?? | ?? | ?? | | | |AVGA2.ROM | ok | ok | ok | | | |Commodore386SX-25_AVGA2.bin | ok | ok | ok | ISA | 512k | 03/19/92 | Acumos AVGA2, DeskTop VGA BIOS (340-000-11-Rev1.00), 1984-1991 PhoenixConnect3D.9500NP.128.Infineon30.021212.rom | ok | xx | ok | AGP | | 2002/12/12 | R300, Infineon Memory BIOS - P/N 113-94232-101, 1988-2002 ATI BK-ATI VER008.004.008.004Diamond Stealth 64 Video VRAM PCI 3.00.bin | ok | ok | ok | PCI | | 07/05/95 | Stealth 64 Video VRAM Vers. 3.00, Diamond MultiMedia SystemsELSAVIC2.ROM | ok | ok | ok | AGP | | 11/23/98 | ELSA VICTORY II 4.03.00, 98-98 ELSA, 90-98 Elpin SystemsElsa.FireGLV3200.128.040910.rom | ok | xx | ok | PCIE | 128MB | 2004/09/10 | RV380, 1988-2003, ATI BK-ATI VER008.015.121.000FujitsuSiemens.QuadroFX1700.512.080123.rom | ?? | ?? | ?? | | 512MB | | ??? compressed font ??? cant find font on first lookFujitsuSiemens.X300Mobility.32.050608.rom | ok | xx | ok | | 32MB | |G400.ROM | ok | xx | ok | | | | MatroxGENOA.ROM | ok | ok | ok | | | | TsengGigabyte.6200.16.050711.rom | ?? | ?? | ?? | | | | ??? compressed font ??? cant find font on first lookLeadtek.6200.16.050128.rom | ?? | ?? | ?? | | | | ??? compressed font ??? cant find font on first lookM32.ROM | ok | ok | ok | PCI | | | ATIM64GX.ROM | ok | ok | ok | | | |MGAMIL2.ROM | ok | xx | ok | | | |MIROV968.ROM | ok | ok | ok | | | | Same like V7MERCMORSE KP800 VGA CL-GD520A-32PC-B.bin | ok | ok | ok | | | | CL AwardNCR VLB VGA CL-GD5428-80QC-A.bin | ok | ok | ok | | | |R128GL.ROM | ok | xx | ok | | | |RIVA128A.ROM | ok | xx | ok | | | | STBS3T64V2.ROM | ok | ok | ok | PCI | | | S3S3VIRGX2.ROM | ok | ok | ok | PCI | | | S3Sapphire.9600NP.256.unknown.031028.rom | ok | xx | ok | | 256MB | |Sapphire.9600PRO.128.Samsung28.030829.rom | ok | xx | ok | | 128MB | |TNT2M64.ROM | ok | ok | ok | | | |TSVGA 9020-12 ET4000 ISA VGA.bin | ok | ok | ok | ISA | | |Tseng ET3000AX ISA VGA-VGA ULTRA.bin | ok | ok | ok | ISA | | |V7MERC.ROM | ok | ok | ok | | | |V7_Vega | ok | ok | ok | | | | uses 3dfx font set, different fonts than V7MERCvideo_seven_vega_vga_62L1989V5_435-0016-47.bin | ok | ok | ok | | | |VANTA.ROM | ok | ok | ?? | | | | 8x16 not complete in ROMVANTAGE.ROM | xx | ok | ok | | | | has no 8x8 fontVDOO3PCI.ROM | ok | ok | ok | | | | 3dfx ElpinWIN1KXHR.ROM | ok | ok | ok | | | | ESLAWONDER16.ROM | ok | ok | ok | | | |XGA.ROM | ok | ok | ok | | | | Phoenixet4000_stb.vbi | ok | xx | ok | | | |et4000w32isa.BIN | ok | ok | ok | | | |et4000_weirdlowerL.bin | ok | ok | ok | ISA |512k/1M | | Has a weird lower L in 8x14 and 8x16 charsets. Typical TSENG change to a PC font.OakTechnolgy-unknown-1.bin | ok | ok | ok | | | |OakTechnolgyVGA-KO77.bin | ok | ok | ok | | | |QuadtelS3_86C801_86C805EnhancedVGABIOS2.13.01 | ok | ok | ok | | | |QuadtelVGABIOSVersion1.21.00.bin | ok | ok | ok | | | |SVGA141.ROM | ok | ok | ok | | | |s3_764.bin | ok | ok | ok | | | |TridentTVGA8900C_S27C256.bin | ?? | ?? | ?? | | | |tgui9400cxi.vbi | ok | ok | ok | | | |tvga-c4.3.rom | ok | ok | ok | | | |tvga-d3.0.rom | ok | ok | ok | | | |tvga9000i-d4.01e | ?? | ?? | ?? | | | |tvga9000i-v2.vbi | ok | ok | ok | | | |tvga9000a_d211.bin | ok | ok | ok | | | |tvga9000a_d301.bin | ok | ok | ok | | | |tvga8800cs | ok | ok | ok | | | |tvga8800cs_2 | ok | ok | ok | | | |BLADEXP.vbi | ok | ok | ok | | | |BLADE3D_AGP.vbi | ok | ok | ok | | | |BLADE3D_AGP_HIS.vbi | ok | ok | ok | | | |BLADE3D_PCI.vbi | ok | ok | ok | | | |vgaedge.bin | ok | ok | ok | | | |TsengLabsVGA-4000BIOSV1.1.bin | ok | ok | ok | | | |------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------ATIEgaWonder800p.bin | ok | ok | ok | | | |ami-ega.rom | ok | ok | xx | | | | VERY SPECIAL FONTS, 2 different 8x8 (1 is mirrored) and one 8x14genoa-ega-2.41.rom | ok | ok | xx | | | |ibm-ega.rom | ok | ok | xx | | | |NSILogic-SmartEGAPlus-04-086-01Rev1.45-U21.bin | ok | ok | xx | | | |wd-pega.rom | ok | ok | xx | | | |------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------IBM VGA | ok | ok | ok | | | | has a full 8x8 charset in 8x8, 8x14 and 8x16IBM_PC_BIOS_1981-04-24_HALF_8x8.bin | LO | XX | XX | --- | ------ | | IBM PC BIOS, only lower 128 characters, no &#34;graphical&#34; chars.------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------=&gt; IN THIS SECTION: LOCALIZED VIDEO ROMS (greek, ...)CGA_PRAVETZ.ROM | ok | xx | xx | | | | 4 different kyrillic fontsacer500-II_cga_rom.bin | ok | xx | ?? | | | | 2 different greek 8x8, somewhat strange 8x16 TBDati_small_wonder_rev1_GR-ROM.bin | ok | xx | ?? | | | | 4 different greek 8x8clone2_cga_rom.bin | xx | ?? | ?? | | | |clone_cga_rom.bin | xx | ?? | ?? | | | |hyundai_mono-graphics-board_e40080004 | xx | ?? | ?? | | | |ibm5155_cga_rom_memotek_greek | ok | xx | xx | | | | 10 different greek fonts?tvga9000a_japan.vbi | ok | ok | ok | | | |------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------mda.rom | ?? | ?? | ?? | | | | 8k ROM only font data, what is this? not extracted yet, some problems50146chareuro.rom | ok | xx | ok | | | | Tandy 1000, 8x8 and 8x14 in both a 8x16 array with padding zero bytes------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------=&gt; IN THIS SECTION: SYSTEM BIOSali1429g.amw (AMI WINBIOS) | LO | xx | xx | | | |amic206.bin | xx | xx | xx | | | | NO FONT at allami386.bin | LO | xx | xx | | | |amxtv132.rom | LO | xx | xx | | | |award-2.05.rom | LO | xx | xx | | | |DTK.PII-151B-BIOS.version.1.06B.bin | xx | xx | xx | | | | NO FONT at alldtk_erso_2.42_2764.bin | LO | xx | xx | | | |genxt.bin | LO | xx | xx | | | |JukoD16X-BIOSversion1.2.bin | xx | xx | xx | | | | NO FONT at allLongshineLCS-6821N-BIOSversion1.04.bin | xx | xx | xx | | | | NO FONT at allolivetti-m24-1.21.rom | LO | xx | xx | | | |opt495sx.ami | LO | xx | xx | | | |phoenix-2.51.rom | LO | xx | xx | | | |ToshibaT1000-BIOSROM-V4.10.bin | ?? | xx | xx | | | | lo and hi in different placestoshibaT5200cbiosv3.bin | ok | xx | ok | | | | VERY SPECIAL contains each 2 different fonts, 8x8 and 8x16VTech-LaserTurboXT-BIOS-V1.11-27C64D.bin | LO | xx | xx | | | | VERY SPECIALVTech-LaserXT3-BIOS-V1.26-27C64.bin | LO | xx | xx | | | | VERY SPECIALwang3050_bios_rom | ok | ok | ok | | | |------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------ibmjap.rom | ok | ok | ok | | | | Japanese PS/2 BIOS------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------=&gt; IN THIS SECTION: FONTS THAT ARE AVAILABLE IN SOURCEseabios | ok | ok | ok | --- | ------ | | from official sourcebochs | LO | XX | XX | --- | ------ | | from official source3dfx | ok | ok | ok | | | | from leaked sourceIBM PC BIOS V1 | LO | XX | XX | | | 1981 | from IBM&#39;s sourceIBM PC BIOS V2,V3 | LO | XX | XX | | | 1981 | from IBM&#39;s sourceIBM AT BIOS V1,V2,V3 | LO | XX | XX | | | 1981 | from IBM&#39;s sourceIBM XT BIOS V1,V2,V3 | LO | XX | XX | | | 1981 | from IBM&#39;s sourceIBM XT286 BIOS V1 | LO | XX | XX | | | 1981 | from IBM&#39;s source------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------\n  The folder &#39;other_sources&#39; contains subfolders, which each holds a set of files for a ROM-font.They were not extracted from ROMs, they are already available as source. Thesesources were adapted and simple bin-generators were added to create the binaryfont files.These are available:\n ibm_pc - original IBM PC, V1/V2/V3ibm_xt - IBM XT, V1/V2/V3ibm_xt286 - IBM XT 286, only one BIOS availableibm_at - IBM AT, V1/V2/V3seabios - qemu seabios, 8x8, 8x14, 8x163dfx_leadked_bios - original source code, 8x8, 8x14, 8x16, 9x14, 9x16bochs_bios - bochs bios, 8x8, only lower half of charset implemented\n Not all are yet converted to C (most of them in ASM) and bins are generated.The original sources are provided already.\n  IBM has used a font for the very first PC BIOS, that has changed in secondversion of BIOS. After this release the font remained the same on these machines: IBM AT v1, v2, v3The only change from first to second version is 1 single bit, that makes a hugedifference when looking at it (ASCII 0x04, bottom line 0x00 changes to 0x08).This font only has the lower 128 characters.\n  qemu seabios 8x8 and 8x14 are exact matches to IBM&#39;s VGA and XGA fonts.These files are in fntcol16.zip from simtel. VGA-ROM.F08 and VGA-ROM.F14.qemu source comment claims this is public domain. I doubt IBM would releasea font to public domain. Does this mean, qemu relied on claims by packagecreator and now they use a illegal copy?\n bochs bios 8x8 only brings lower 128 chars that are exactly matching IBM&#39;s second font.Same as with seabios 8x8 font (licensing).\n   The AVGA2 has totally unique fonts - TODO - bit by bit compare - what are the differences?\n Have a look at  MD5SUMs file, it is sorted by sum. This means, you will se whichcards share same font.If you want to compare you may use a image viewer and view the zoomed imagesof the desired fonts.\n The folder  lowercharset holds the lower 128 characters of all 8x8 fonts tosee, which one uses the original IBM PC&#39;s or the second version of this font.", "posttime": "2020-05-13 18:19:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,\u5b57\u4f53,extracted", "title": "\u63d0\u53d6\u7684\u5b57\u4f53BIOS\u548cVGA ROM", "title_en": "Fonts Extracted BIOSes and VGA ROMs", "transed": 1, "url": "https://github.com/spacerace/romfont", "via": "", "real_tags": ["ios", "\u5b57\u4f53", "extracted"]}, {"category": "", "categoryclass": "", "imagename": "5772de296f329c050aa31a19da8742cd.jpeg", "infoid": 1001959, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u57fa\u672c\u4e0a\uff0c\u6211\u60f3\u4e70\u4ec0\u4e48\u5c31\u4e70\u4ec0\u4e48\uff0c\u4f46\u6211\u4e70\u4e0d\u5230\u65f6\u95f4\u3002\u201d\n\u6c83\u4f26\u00b7\u5df4\u83f2\u7279(Warren Buffett)\u7684\u65e5\u7a0b\u8868\u4e0a\u51e0\u4e4e\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\u4ed6\u6bcf\u665a\u77618\u4e2a\u5c0f\u65f6\uff0c\u767d\u592980%\u7684\u65f6\u95f4\u7528\u6765\u770b\u4e66\uff0c\u4e0b\u73ed\u540e\u6253\u6865\u724c\u653e\u677e\u3002\n\u6280\u672f\u7684\u8fdb\u6b65\u4f7f\u5f97\u5728\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u6210\u4e3a\u53ef\u80fd\uff0c\u4f46\u6709\u5927\u91cf\u7684\u4e8b\u60c5\u8981\u505a\u5e76\u4e0d\u662f\u667a\u8005\u7684\u65b9\u5f0f\u3002\u5fd9\u788c\u53ea\u4f1a\u7ed9\u6211\u4eec\u5e26\u6765\u8fdb\u6b65\u7684\u9519\u89c9\u3002\n\u5728\u6211\u4eec\u8ffd\u6c42\u6210\u957f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5bfb\u6c42\u77e5\u8bc6\u3002\u4eca\u5929\u7684\u6280\u672f\u53ef\u4ee5\u5728\u77ac\u95f4\u63d0\u4f9b\u5176\u4e2d\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u4f46\u4fe1\u606f\u53ea\u6709\u5728\u6295\u5165\u4f7f\u7528\u65f6\u624d\u80fd\u5e26\u6765\u597d\u5904\u3002\u56e0\u4e3a\u6211\u4eec\u5fd9\u4e8e\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u505c\u4e0b\u6765\u5904\u7406\u6211\u4eec\u6240\u5b66\u5230\u7684\u4e1c\u897f\u3002\n\u901a\u5e38\u4f1a\u53d1\u751f\u4ec0\u4e48\u2026\u30021.\u8bfb\u4e00\u672c\u4e66\uff0c\u83b7\u5f97\u7075\u611f\u3002\u2192\u548c\u5176\u4ed6\u4eba\u8c08\u8bba\u8fd9\u4ef6\u4e8b\uff0c\u2192\u4ec0\u4e48\u4e5f\u6ca1\u505a\u30022.\u53c2\u52a0\u4e00\u4e2a\u4f1a\u8bae\uff0c\u5f97\u5230\u5947\u5999\u7684\u60f3\u6cd5\uff0c\u2192\u5728\u56de\u5bb6\u7684\u8def\u4e0a\u601d\u8003\u8fd9\u4e9b\u60f3\u6cd5\u3002\u7b2c\u4e8c\u5929\uff0c\u2192\u9192\u6765\uff0c\u88ab\u5de5\u4f5c\u4e2d\u7684\u65cb\u98ce\u5f04\u5f97\u4e0d\u77e5\u6240\u63aa\uff0c\u628a\u4ed6\u4eec\u5fd8\u5f97\u4e00\u5e72\u4e8c\u51c0\u30023.\u81ea\u53d1\u7684\u8c08\u8bdd\u4f1a\u4ea7\u751f\u6f5c\u5728\u7684\u534f\u540c\u4f19\u4f34\u5173\u7cfb\u3002\u2192\u592a\u5fd9\u4e86\uff0c\u6ca1\u6709\u65f6\u95f4\u8ddf\u8fdb\u3002\n\u5728\u8fd9\u4e2a\u4fe1\u606f\u65f6\u4ee3\uff0c\u6211\u4eec\u88ab\u63a8\u5165\u601d\u60f3\u7684\u5f00\u653e\u6d77\u6d0b\uff0c\u6211\u4eec\u4efb\u7531\u81ea\u5df1\u88ab\u5b83\u7684\u6ce2\u6d9b\u98a0\u7c38\u3002\u8111\u6d77\u4e2d\u4e00\u4e2a\u558b\u558b\u4e0d\u4f11\u7684\u58f0\u97f3\u56de\u907f\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u7ecf\u8fc7\u51e0\u5341\u672c\u4e66\uff0c\u4e00\u767e\u6b21\u8c08\u8bdd\uff0c\u4e94\u6b21\u4f1a\u8bae\uff0c\u4e09\u6b21\u65c5\u884c\uff0c\u51e0\u5341\u7bc7\u6587\u7ae0\uff0c\u4f60\u5230\u5e95\u5b8c\u6210\u4e86\u4ec0\u4e48\uff1f\n\u60f3\u60f3\u8fc7\u53bb\u7684\u4e00\u5e74\u3002\u6709\u591a\u5c11\u6bb5\u611f\u60c5\u892a\u8272\u4e86\uff1f\u6709\u591a\u5c11\u4e2a\u865a\u5047\u7684\u627f\u8bfa\uff1f\u6709\u591a\u5c11\u5145\u6ee1\u6fc0\u60c5\u7684\u9879\u76ee\u5f00\u59cb\u4e86\uff0c\u4f46\u6ca1\u6709\u7ed3\u675f\uff1f\n\u8bf4\u4f60\u592a\u5fd9\u4e0d\u80fd\u505a\u67d0\u4e8b\u4ec5\u4ec5\u610f\u5473\u7740\u67d0\u4e8b\u4e0d\u662f\u4f60\u7684\u9996\u8981\u4efb\u52a1\u3002\u7136\u800c\uff0c\u5f53\u88ab\u95ee\u53ca\u6211\u4eec\u4f18\u5148\u8003\u8651\u7684\u662f\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u8bf4\u76f8\u53cd\u7684\u8bdd\u3002\n\u53cd\u601d\u3002\u79ef\u6781\u5730\u901a\u8fc7\u5199\u4f5c\u6216\u4e0e\u67d0\u4eba\u8ba8\u8bba\u4e00\u4e2a\u60f3\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u88ab\u52a8\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u7528\u7cbe\u795e\u7a7a\u95f2\u7684\u65f6\u95f4\u6765\u89e3\u653e\u4f60\u7684\u5927\u8111\uff0c\u6bd4\u5982\u505a\u996d\u3001\u8dd1\u6b65\u3001\u4fee\u7406\u8863\u67dc\uff0c\u6216\u8005\u5f00\u8f66\u542c\u53e4\u5178\u97f3\u4e50\u3002\u5728\u4f60\u5904\u7406\u5b8c\u4e00\u4e9b\u4e8b\u60c5\u4e4b\u540e\uff0c\u8981\u786e\u4fdd\u4f60\u7684\u884c\u52a8\u8981\u70b9(\u5982\u679c\u4f60\u6709\u7684\u8bdd)\u7acb\u5373\u5f97\u5230\u5b9e\u65bd\uff0c\u4ee5\u4fdd\u6301\u52bf\u5934\u3002\n\u5728\u7247\u523b\u4e2d\u73b0\u8eab\u3002\u5728\u7ee7\u7eed\u9605\u8bfb\u4e4b\u524d\uff0c\u82b1\u70b9\u65f6\u95f4\u5f7b\u5e95\u7406\u89e3\u4e00\u4e2a\u65b0\u6982\u5ff5\u3002\u5411\u8f66\u7a97\u5916\u770b\u65f6\uff0c\u751f\u52a8\u5730\u8bb2\u8ff0\u4f60\u6240\u770b\u5230\u7684\u3002\u6bcf\u6b21\u4e0e\u4eba\u4ea4\u8c08\u65f6\u90fd\u8981\u628a\u624b\u673a\u6536\u8d77\u6765\u3002\u514b\u5236\u4f4f\u8bb0\u5f55\u4e00\u5929\u4e2d\u6bcf\u4e00\u4e2a\u5c0f\u7ec6\u8282\u7684\u51b2\u52a8\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u8ba9\u4f60\u4ece\u4f53\u9a8c\u7684\u672c\u8d28\u4e0a\u5206\u5fc3\u3002\n\u610f\u60f3\u4e0d\u5230\u7684\u632b\u6298\u3002\u7a81\u7136\u7684\u804c\u8d23\u53ec\u5524\u3002\u4e0d\u8bf7\u81ea\u6765\u7684\u6307\u8d23\u3002\u60c5\u7eea\u5d29\u6e83\u3002\u6211\u4eec\u9047\u5230\u4e00\u4e9b\u63d0\u9192\u6211\u4eec\u81ea\u5df1\u662f\u591a\u4e48\u6709\u9650\u7684\u4e1c\u897f\uff0c\u8fd9\u53ea\u662f\u4e2a\u65f6\u95f4\u95ee\u9898\u3002\u5f53\u90a3\u4ef6\u4e8b\u5230\u6765\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5f20\u5f00\u53cc\u81c2\u62e5\u62b1\u5b83\uff0c\u56e0\u4e3a\u5b83\u8ba9\u6211\u4eec\u5728\u771f\u6b63\u91cd\u8981\u7684\u4e8b\u60c5\u4e0a\u7ad9\u7a33\u811a\u8ddf\u3002\u7136\u540e\u6211\u4eec\u518d\u4ece\u90a3\u4e2a\u53c2\u8003\u70b9\u5f00\u59cb\u5192\u9669\u3002\n\u4e16\u754c\u4e0a\u6210\u529f\u7684\u6807\u5fd7-\u51c0\u8d44\u4ea7\u3001\u58f0\u671b\uff0c\u751a\u81f3\u662f\u5bf9\u6fc0\u60c5\u7684\u8ffd\u6c42\uff0c\u90fd\u8ba9\u6211\u4eec\u770b\u4e0d\u5230\u771f\u6b63\u91cd\u8981\u7684\u4e1c\u897f\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u6211\u4eec\u6e34\u671b\u7684\u662f\u5173\u7cfb\u3002\u6211\u4eec\u4e0d\u80fd\uff0c\u4e0d\u7ba1\u8868\u9762\u4e0a\u770b\u8d77\u6765\u5982\u4f55\uff0c\u751f\u6d3b\u4e2d\u6ca1\u6709\u7231\u548c\u88ab\u7231\u3002\n\u4eca\u5929\uff0c\u5728\u5de5\u4f5c\u4e2d\u3001\u4eba\u9645\u5173\u7cfb\u4e2d\u3001\u4e2a\u4eba\u6210\u957f\u4e2d\uff0c\u6539\u53d8\u73b0\u72b6\u7684\u65b9\u6cd5\u5c31\u662f\u62b5\u5236\u7a7a\u6d1e\u7684\u884c\u52a8\u3002\u6211\u4eec\u5fc5\u987b\u6709\u610f\u8bc6\u5730\u53bb\u601d\u8003\u3001\u53bb\u505a\u3001\u53bb\u5b58\u5728\u3002\n\u5728\u601d\u8003\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u62b5\u5236\u628a\u5177\u6709\u6311\u6218\u6027\u7684\u8ba4\u77e5\u6d3b\u52a8\u653e\u5728\u4e00\u8fb9\u7684\u8bf1\u60d1\u3002\u6211\u4eec\u6709\u8ba1\u5212\u3002\u6211\u4eec\u8fdb\u884c\u5206\u6790\u548c\u7efc\u5408\u3002\u6211\u4eec\u53cd\u601d\u3002\n\u5728\u505a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u52e4\u594b\u5730\u6267\u884c\u6211\u4eec\u7684\u8ba1\u5212\u3002\u6211\u4eec\u575a\u5b88\u6211\u4eec\u7684\u627f\u8bfa\u3002\u6211\u4eec\u5728\u56f0\u96be\u4e2d\u575a\u6301\u4e0d\u61c8\uff0c\u77e5\u9053\u968f\u4e4b\u800c\u6765\u7684\u662f\u589e\u957f\u7684\u9ad8\u5cf0\u3002\n\u5728\u5b58\u5728\u4e2d\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684\u601d\u60f3\u548c\u884c\u4e3a\u4e0e\u6211\u4eec\u7684\u539f\u5219\u76f8\u4e00\u81f4\uff0c\u8fd9\u6837\u6211\u4eec\u751f\u6d3b\u7684\u4e0d\u540c\u65b9\u9762\u5c31\u4f53\u73b0\u4e86\u6211\u4eec\u6240\u76f8\u4fe1\u7684\u6211\u4eec\u4eca\u751f\u7684\u76ee\u6807\u3002\n\u5728\u771f\u4eba\u5927\u5c0f\u7684\u5c3a\u5ea6\u4e0a\uff0c\u540c\u65f6\u6210\u4e3a\u4e00\u4e2a\u88ab\u8d4b\u4e88\u6743\u529b\u7684\u6574\u4f53\uff0c\u800c\u4e0d\u662f\u4e09\u4e2a\u9065\u8fdc\u7684\u788e\u7247\uff0c\u4e0d\u662f\u7279\u522b\u4ee4\u4eba\u6ee1\u8db3\u5417\uff1f", "note_en": "\u201cI buy anything I want, basically, but I can\u2019t buy time.\u201d\n Warren Buffett has practically nothing on his calendar. He gets eight hours of sleep each night, spends 80% of his day reading, and plays bridge after work to unwind.\n  Technological advancements have enabled the possibility of doing more things in a shorter amount of time, but having a great deal to do is not the way of the wise. Being busy only gives us the  illusion of progress.\n  In our pursuit of growth, we seek knowledge. Today\u2019s technology can deliver a heavy chunk of that in an instant, but information can only be beneficial when put into use. Because we are too busy acquiring more information, we do not stop to process what we learn.\n What usually happens\u2026 1. Reads a book, gets inspired. \u2192 Talks about it with other people \u2192  Does nothing. 2. Attends a conference, gets fantastic ideas \u2192 Thinks about them on the way home. \u2192  Wakes up the following day, gets overwhelmed by the whirlwind at work and forgets about them.  3. A spontaneous conversation results in a potentially synergistic partnership. \u2192  Gets too busy to make time to follow up.\n  In this age of information, we are thrust into an open sea of ideas, and we allow ourselves to get tossed by its waves. A nagging voice in our head begs the question, after tens of books, a hundred conversations, five conferences, three trips, and dozens of articles, what have you  really accomplished?\n  Think about the year that has passed. How many relationships faded? How many false promises were made? How many passion projects were started and never finished?\n Saying you\u2019re too busy for something simply means that something is not your priority. Yet, we often say the opposite when asked what we prioritize over all else.\n    Reflect. Actively do this by writing or discussing an idea with somebody. Passively do this by freeing up your mind with mentally-idle time, like cooking, running, fixing your closet, or driving to classical music. After you have processed something, see to it that your action points (if you have any) are implemented immediately in order to keep the momentum.\n Be present in moments. Take the time to understand a new concept thoroughly before reading on. While looking outside the car window, vividly narrate what you see. Put your phone away each time you\u2019re conversing with someone. Resist the urge to document every little piece of your day, because it distracts you from the very essence of an experience.\n  An unexpected setback. A sudden call of duty. An unsolicited rebuke. An emotional breakdown. It\u2019s only a matter of time before we come across something that reminds us how finite we are. When that something comes, we must embrace it with open arms, because it grounds us in the things that truly matter. We then venture again from that reference point.\n The world\u2019s signs of success \u2014 net worth, prestige, even the pursuit of a passion, have blinded us from what truly matters. At the very core, we desire relationships. We cannot, no matter it seems like at the surface, live without loving and being loved.\n   The way to make a difference today, in work, in relationships, in one\u2019s personal growth, is to resist hollow actions. We must be intentional in thinking, doing, and being.\n In thinking, we must resist the temptation to set aside challenging cognitive activities. We plan. We analyze and synthesize. We reflect.\n In doing, we execute our plans diligently. We stick to our commitments. We persevere through hardship, knowing that what follows is a spike in growth.\n  In being, we align our thoughts and deeds to our principles, such that different aspects of our lives manifest what we believe is our purpose in this life.\n In a life-sized scale, isn\u2019t it exceptionally fulfilling to be one empowered whole, instead of three distant pieces, at once?", "posttime": "2020-05-13 18:19:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65b0\u4e00\u4ee3,busy,\u65f6\u95f4", "title": "\u4e3a\u4ec0\u4e48\u65b0\u4e00\u4ee3\u5982\u6b64\u5fd9\u788c\u611a\u8822\uff0c\u6211\u4eec\u53c8\u80fd\u505a\u4e9b\u4ec0\u4e48\u5462\uff1f", "title_en": "Why Busy Is the New Stupid, and What We Can Do About It", "transed": 1, "url": "https://medium.com/@hgdt/why-busy-is-the-new-stupid-and-what-we-can-do-about-it-489d4dcf8d08", "via": "", "real_tags": ["\u65b0\u4e00\u4ee3", "busy", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001957, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u9047\u5230\u706b\u72d0\u9488\u5bf9\u65e7TLS\u7248\u672c\u7684\u95f4\u9699\u8b66\u544a\u65f6\uff0c\u5b83\u5e76\u4e0d\u662f\u6211\u60f3\u8981\u7684\uff0c\u5b83\u7684\u9644\u52a0\u4f4d\u7f6e\u7ed9\u4e86\u6211\u4e00\u4e9b\u9519\u7efc\u590d\u6742\u7684\u611f\u89c9\u3002\u6211\u672c\u4ee5\u4e3a\u4f1a\u5728\u4e00\u4e9b\u53e4\u8001\u7684\u8bbe\u5907\u6216IPMI\u7f51\u7edc\u754c\u9762(\u8fd9\u4e24\u79cd\u4ea7\u54c1\u90fd\u4ee5\u8fd9\u7c7b\u4e1c\u897f\u95fb\u540d)\u4e0a\u7b2c\u4e00\u6b21\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u5728\u4e00\u4e2a\u6d3b\u8dc3\u7684\u4eba\u7684\u7f51\u7ad9\u4e0a\uff0c\u8fd9\u662f\u5728\u6700\u8fd1\u4e00\u7bc7\u5173\u4e8e\u6d41\u6d6a\u60f3\u6cd5\u7684\u8bc4\u8bba\u4e2d\u63d0\u5230\u7684\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u79cd\u4ed6\u4eec\u672c\u53ef\u4ee5\u4f7f\u4ed6\u4eec\u7684Web\u670d\u52a1\u5668\u4fdd\u6301\u6700\u65b0\u7684\u60c5\u51b5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8fd9\u8868\u660e(\u5e76\u5e26\u51fa)\u73b0\u4ee3HTTPS\u7f51\u7ad9\u79ef\u6781\u8981\u6c42\u4f60\u4ee5HTTP\u7f51\u7ad9\u505a\u4e0d\u5230\u7684\u65b9\u5f0f\u8ba9\u4f60\u7684\u7f51\u7edc\u670d\u52a1\u5668\u4fdd\u6301\u6700\u65b0\u3002\u5728HTTP\u65f6\u4ee3\uff0c\u4f60\u53ef\u4ee5\u57282000\u5e74\u8bbe\u7f6e\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668\uff0c\u5b83\u4eca\u5929\u4ecd\u7136\u53ef\u4ee5\u8fd0\u884c\uff0c\u5de5\u4f5c\u5f97\u975e\u5e38\u597d(\u5373\u4f7f\u5b83\u4e0d\u652f\u6301\u6700\u65b0\u7684\u95ea\u4eae\u4e8b\u7269)\u3002\u8fd9\u5bf9HTTPS\u4e0d\u8d77\u4f5c\u7528\uff0c\u73b0\u5728\u4e0d\u8d77\u4f5c\u7528\uff0c\u5c06\u6765\u4e5f\u4e0d\u8d77\u4f5c\u7528\u3002\n\u5b9e\u9645\u4e0a\uff0cHTTPS\u670d\u52a1\u5668\u4e0a\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u7ef4\u62a4\u3002\u9996\u5148\uff0c\u60a8\u5fc5\u987b\u7eed\u8ba2TLS\u8bc1\u4e66\uff0c\u6216\u8005\u5c06\u5176\u81ea\u52a8\u5316(\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u80fd\u4e0d\u5f97\u4e0d\u591a\u6b21\u66f4\u6539\u83b7\u53d6TLS\u8bc1\u4e66\u7684\u65b9\u5f0f)\u3002\u5373\u4f7f\u662f\u81ea\u52a8\u7eed\u8d39\uff0clet\u2018s Encrypt\u5df2\u7ecf\u66f4\u6539\u8fc7\u4ed6\u4eec\u7684\u534f\u8bae\u4e00\u6b21\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u65e7\u7684\u5ba2\u6237\u7aef\u548c\u65e7\u7684\u914d\u7f6e\uff0c\u6709\u4e00\u5929\u5f88\u53ef\u80fd\u8fd8\u4f1a\u8fd9\u6837\u505a\u3002\u73b0\u5728\uff0c\u4f60\u5fc5\u987b\u4e0d\u65ad\u66f4\u65b0Web\u670d\u52a1\u5668\u8f6f\u4ef6\u3001TLS\u5e93\u548cTLS\u914d\u7f6e\uff0c\u56e0\u4e3a\u6211\u6000\u7591TLS1.2\u4e4b\u524d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u4e0d\u4f1a\u662f\u6700\u540e\u4e00\u6b21\u8fd9\u6837\u7684\u4e0d\u63a8\u8350\u4e86\u3002\n\u6211\u60c5\u4e0d\u81ea\u7981\u5730\u89c9\u5f97\u8fd9\u4ef6\u4e8b\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u4f8b\u5982\uff0cHTTPS Web\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u53ef\u4ee5\u50cfHTTP Web\u90a3\u6837\u4fdd\u7559\u65e7Web\u670d\u52a1\u5668\u7684\u5730\u65b9\u3002\u4eca\u5929\uff0c\u5982\u679c\u4f60\u6709\u64cd\u4f5c\u786c\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4ece\u4e00\u53f0\u65e7\u7684SGIIrix\u5de5\u4f5c\u7ad9\uff0c\u751a\u81f3\u662f\u4e00\u53f0DEC Ultrix\u673a\u5668\u4e0a\u8fd0\u884c\u4e00\u53f0HTTP Web\u670d\u52a1\u5668\uff0c\u6bcf\u4e2a\u6d4f\u89c8\u5668\u90fd\u53ef\u80fd\u5f88\u4e50\u610f\u5bf9\u5b83\u8bf4HTTP 1.0\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u5373\u4f7f\u670d\u52a1\u5668\u8f6f\u4ef6\u53ef\u80fd\u81ea20\u4e16\u7eaa90\u5e74\u4ee3\u4ee5\u6765\u5c31\u6ca1\u6709\u66f4\u65b0\u8fc7\u3002\u8fd9\u5728HTTPS\u7f51\u7ad9\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4e0d\u7ba1\u4f60\u5982\u4f55\u7cbe\u5fc3\u7ef4\u62a4\u65e7\u7684\u73af\u5883\u3002\n\u53e6\u4e00\u4e2a\u66f4\u76f8\u5173\u7684\u65b9\u9762\u662f\uff0c\u62e5\u6709\u7f51\u7edc\u670d\u52a1\u5668\u7684\u4eba\u4e0d\u53ef\u80fd\u5c31\u8fd9\u4e48\u8ba9\u4ed6\u4eec\u5750\u7740\u3002HTTPS\u4e16\u754c\u6539\u53d8\u5f97\u8d8a\u591a\uff0c\u4f60\u9700\u8981\u6539\u53d8\u7684\u5730\u65b9\u5c31\u8d8a\u591a\uff0c\u4f60\u7684HTTPS Web\u670d\u52a1\u5668\u5c31\u9700\u8981\u66f4\u591a\u7684\u6301\u7eed\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u5ffd\u7565\u5b83\uff0c\u8df3\u8fc7\u8fd9\u9879\u5de5\u4f5c\uff0c\u4f60\u7684\u7f51\u7ad9\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u5c31\u662f\u6211\u7ecf\u5386\u8fc7\u7684\u95f4\u9699\u8b66\u544a\uff0c\u6700\u7ec8\u5b83\u5c06\u5b8c\u5168\u4e0d\u88ab\u6d4f\u89c8\u5668\u63a5\u53d7\u3002\u6211\u9884\u8ba1\uff0c\u8fd9\u5c06\u4fc3\u4f7f\u66f4\u591a\u7684\u4eba\u6295\u5165\u5927\u578b\u8fd0\u8425\u516c\u53f8(\u5982Github Pages\u6216Cloudflare)\u7684\u6000\u62b1\uff0c\u4e3a\u4ed6\u4eec\u6253\u7406\u6240\u6709\u8fd9\u4e9b\u4e1a\u52a1\uff0c\u800c\u4efb\u4f55\u4eba\u90fd\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u72ec\u7acb\u65e7\u7f51\u7edc\u7cbe\u795e\u5c06\u4f1a\u6d88\u9000\u3002\n(\u540c\u65f6\uff0c\u8fd9\u5bf9\u4e8e\u4fdd\u8bc1HTTPS\u7684\u5b89\u5168\u662f\u5fc5\u8981\u7684\uff0c\u51fa\u4e8e\u901a\u5e38\u7684\u539f\u56e0\uff0cHTTPS\u672c\u8eab\u4e5f\u662f\u5fc5\u8981\u7684\u3002\u4f46\u662f\uff0c\u8ba9\u6211\u4eec\u7684\u9f3b\u6d95\u5047\u88c5\u5728\u8fd9\u6b21\u8f6e\u73ed\u4e2d\u4ec0\u4e48\u90fd\u6ca1\u6709\u4e22\u5931\u3002)", "note_en": "When I ran into  Firefox&#39;s interstitial warning for old TLS versions, it wasn&#39;t where I expected, and where ithappened gave me some tangled feelings. I had expected to first runinto this on some ancient appliance or IPMI web interface (both ofwhich are famous for this sort of thing). Instead, it was on thewebsite of an active person that had been mentioned in a recentcomment here on  Wandering Thoughts. On the one hand, thisis a situation where they could have kept their web server up todate. On the other hand, this demonstrates (and brings home) thatthe modern HTTPS web actively requires you to keep your web serverup to date in a way that the HTTP web didn&#39;t. In the era of HTTP,you could have set up a web server in 2000 and it could still berunning today, working perfectly well (even if it didn&#39;t supportthe very latest shiny thing). This doesn&#39;t work for HTTPS, not todayand not in the future.\n In practice there are a lot of things that have to be maintained on aHTTPS server. First, you have to renew TLS certificates, or automate it(in practice you&#39;ve probably had to change how you get TLS certificatesseveral times). Even with automated renewals, Let&#39;s Encrypt has changedtheir protocol once already, deprecating old clients and thus oldconfigurations, and will probably do that again someday. And now youhave to keep reasonably up to date with web server software, TLSlibraries, and TLS configurations on an ongoing basis, because I doubtthat the deprecation of everything before TLS 1.2 will be the last suchdeprecation.\n I can&#39;t help but feel that there is something lost with this. TheHTTPS web probably won&#39;t be a place where you can preserve old webservers, for example, the way the HTTP web is. Today if you haveoperating hardware you could run a HTTP web server from an old SGIIrix workstation or even a DEC Ultrix machine, and every browserwould probably be happy to speak HTTP 1.0 or the like to it, eventhough the server software probably hasn&#39;t been updated since the1990s. That&#39;s not going to be possible on the HTTPS web, no matterhow meticulously you maintain old environments.\n Another, more relevant side of this is that it&#39;s not going to bepossible for people with web servers to just let them sit. The morethe HTTPS world changes and requires you to change, the more yourHTTPS web server requires ongoing work. If you ignore it and skipthat work, what happens to your website is the interstitial warningthat I experienced and eventually it will stop being accepted bybrowsers at all. I expect that this is going to drive more peopleinto the arms of large operations (like Github Pages or Cloudflare)that will look after all of that for them, and a little bit moreof the indie &#39;anyone can do this&#39; spirit of the old web will fadeaway.\n (At the same time this is necessary to keep HTTPS secure, and HTTPSitself is necessary for  the usual reasons. But let&#39;snot pretend that nothing is being lost in this shift.)", "posttime": "2020-05-13 17:35:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "https", "title": "\u73b0\u4ee3\u7684HTTPS\u4e16\u754c\u5df2\u7ecf\u6ca1\u6709\u8001\u5f0fWeb\u670d\u52a1\u5668\u7684\u4f4d\u7f6e\u4e86", "title_en": "The modern HTTPS world has no place for old web servers", "transed": 1, "url": "https://utcc.utoronto.ca/~cks/space/blog/web/HTTPSNoOldServers", "via": "", "real_tags": ["https"]}, {"category": "", "categoryclass": "", "imagename": "c13b491290d5fd8c7fc1fc2d60b2bf6e.jpeg", "infoid": 1001956, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Cluegen\u662f\u4e00\u4e2a\u5141\u8bb8\u60a8\u4f7f\u7528Python\u7c7b\u578b\u7ebf\u7d22\u5b9a\u4e49\u6570\u636e\u7c7b\u7684\u5e93\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u793a\u4f8b\uff1a\n\u751f\u6210\u7684\u7c7b\u4ee5\u826f\u597d\u7684\u6587\u660e\u65b9\u5f0f\u5de5\u4f5c\uff0c\u63d0\u4f9b\u901a\u5e38\u60a8\u5fc5\u987b\u624b\u52a8\u952e\u5165\u7684__init__()\u548c__repr__()\u65b9\u6cd5\uff1a\n\u7ee7\u627f\u4e5f\u540c\u6837\u6709\u6548--\u5982\u679c\u60a8\u5728\u5b50\u7c7b\u4e2d\u6dfb\u52a0\u65b0\u5c5e\u6027\uff0c\u5b83\u4eec\u5c06\u6dfb\u52a0\u5230\u73b0\u6709\u5c5e\u6027\u4e2d\u3002\u4f8b\u5982\uff1a\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u53cd\u5bf9\u8005\u5f88\u5feb\u5c31\u4f1a\u6307\u51fa\uff0c\u597d\u5427\uff0c\u5b9e\u9645\u4e0a\u60a8\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5e93\u4e2d\u7684@dataclass\u3002&#34\uff1bOthe.rs migh.t help.Fully suggest.est usag.e of the attr.s library.ary.\u4ed6\u4eec\u53ef\u80fd\u662f\u6709\u9053\u7406\u7684\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u4f60\u7684\u7c7b\uff1a\n\u662f\u3002\u662f\u7684\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u4f60\u7684\u7c7b\u5bfc\u5165\u7f13\u6162\uff0c\u88ab1000\u591a\u884c\u9519\u7efc\u590d\u6742\u7684\u88c5\u9970\u7269\u9b54\u6cd5\u6240\u5305\u88f9\uff0c\u5e76\u4e14\u4e0d\u7075\u6d3b\uff0c\u4f60\u53ef\u4ee5\u8fd9\u4e48\u505a\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u7528\u7ebf\u7d22\uff01Cluegen\u5f88\u5c0f\uff0c\u53ef\u6269\u5c55\uff0c\u63d0\u4f9b\u4e86\u540c\u6837\u7684\u8bb0\u53f7\u4fbf\u5229\uff0c\u5e76\u4e14\u4ea7\u751f\u7684\u7c7b\u7684\u79fb\u690d\u901f\u5ea6\u5927\u7ea6\u5feb\u4e8620\u500d(\u6709\u5173\u57fa\u51c6\uff0c\u8bf7\u53c2\u9605Perf.py\u6587\u4ef6)\u3002\n\u5728\u5e55\u540e\uff0cCluegen\u901a\u8fc7\u4e3a__init__()\u548c__repr__()\u7b49\u65b9\u6cd5\u52a8\u6001\u521b\u5efa\u4ee3\u7801\u6765\u5de5\u4f5c\u3002\u6b64\u4ee3\u7801\u770b\u8d77\u6765\u4e0e\u60a8\u901a\u5e38\u624b\u5199\u7684\u4ee3\u7801\u5b8c\u5168\u76f8\u540c\u3002\u5b83\u4e0e@DataClass\u88c5\u9970\u5668\u521b\u5efa\u7684\u4ee3\u7801\u7c7b\u578b\u76f8\u540c\u3002\u4e0d\u8fc7\uff0cCluegen\u7684\u4e00\u4e2a\u663e\u8457\u7279\u5f81\u662f\uff0c\u5b83\u7684\u6240\u6709\u4ee3\u7801\u751f\u6210\u90fd\u662f\u60f0\u6027\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u771f\u6b63\u9700\u8981\u65b9\u6cd5\u4e4b\u524d\uff0c\u4e0d\u4f1a\u751f\u6210\u4efb\u4f55\u65b9\u6cd5\u3002\u5bf9\u4e8e\u7a0b\u5e8f\u53ef\u80fd\u53ea\u4f7f\u7528\u5df2\u5b9a\u4e49\u6570\u636e\u7c7b\u7684\u5b50\u96c6\u7684\u60c5\u51b5\uff0c\u8fd9\u5927\u5927\u51cf\u5c11\u4e86\u5bfc\u5165\u548c\u542f\u52a8\u65f6\u95f4\u3002\u60a8\u4e5f\u4e0d\u4f1a\u56e0\u4e3a\u60a8\u4e0d\u4f7f\u7528\u7684\u529f\u80fd\u800c\u53d7\u5230\u60e9\u7f5a\u3002\u5373\u4f7f\u786e\u5b9e\u4f7f\u7528\u4e86\u6240\u6709\u529f\u80fd\uff0c\u5b83\u4ecd\u7136\u6bd4\u6570\u636e\u7c7b\u5feb\u3002\u54c8\u54c8\uff01\n\u7ebf\u7d22\u53ef\u4ee5\u901a\u8fc7\u6709\u8da3\u7684\u65b9\u5f0f\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u8981\u5c06\u60a8\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u4ee3\u7801\u751f\u6210\u65b9\u6cd5\u6dfb\u52a0\u5230Datum\u7c7b\u4e2d\u3002\u4e0b\u9762\u662f\u4f60\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\nFrom Cluegen import Datum\uff0cCluegen\uff0cAll_Cluesclass Mytum(Datum)\uff1a@cluegen def as_dict(Cls)\uff1aClues=all_Clues(Cls)return(&#39\uff1bdef as_dict(Self)\uff1a\\n&#39\uff1b+&#39\uff1b\\n&#39\uff1b\\n&#39\uff1b\\n&#39\uff1b.join(f&#39\uff1b{key\uff01r})\uff1asel.{key}\uff0c\\n&#\u3002)\u7c7b\u70b9(Mytum)\uff1ax\uff1aint y\uff1aint\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u4fee\u9970\u540e\u7684as_dict()\u65b9\u6cd5\u3002\u5728\u672c\u4f8b\u4e2d\uff0cCLS\u5c06\u4e3aPoint\u3002\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff1a\u4ece\u7c7b\u4e2d\u6536\u96c6\u6240\u6709\u7c7b\u578b\u7ebf\u7d22\uff0c\u5305\u62ec\u57fa\u7c7b\u4e2d\u7684\u7ebf\u7d22\u3002\u5bf9\u4e8e\u672c\u4f8b\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178{&#39\uff1bx&#39\uff1b\uff1aint\uff0c&#39\uff1by&#39\uff1b\uff1aint}\u3002as_dict()\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u5b9e\u9645\u7684as_dict()\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5c31\u50cf\u60a8\u624b\u5de5\u7f16\u5199\u5b83\u4e00\u6837\u3002\u6b64\u6587\u672c\u5b57\u7b26\u4e32\u6267\u884c\u4e00\u6b21\uff0c\u4ee5\u521b\u5efa\u66ff\u6362\u4fee\u9970\u7248\u672c\u7684\u65b9\u6cd5\u3002\u4ece\u8fd9\u4e00\u70b9\u5f00\u59cb\uff0c\u7c7b\u6539\u7528\u751f\u6210\u7684\u4ee3\u7801\u3002\nCluegen\u6ca1\u6709\u592a\u591a\u5176\u4ed6\u82b1\u54e8\u7684\u4e1c\u897f--\u6574\u4e2a\u5b9e\u73b0\u5927\u7ea6\u6709100\u884c\u4ee3\u7801\u3002\u5b83\u662f\u4f60\u53ef\u4ee5\u7406\u89e3\u3001\u4fee\u6539\u548c\u73a9\u5f04\u7684\u4e1c\u897f\u3002\n\u66fe\u7ecf\uff0c\u6709\u4e00\u4e2a\u5f00\u53d1\u5546\u3002\u4e3a\u4e86\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8ba9\u6211\u4eec\u79f0\u4ed6\u4e3a\u6234\u592b\u3002\u6b63\u5982\u6234\u592b\u60f3\u505a\u7684\u90a3\u6837\uff0c\u4ed6\u559c\u6b22\u7f16\u5199\u7f16\u8bd1\u5668\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5947\u7279\u7684\u4e1c\u897f\uff0c\u6bd4\u5982adataclass--\u7279\u522b\u662f\u5bf9\u4e8e\u6240\u6709\u7684\u6811\u7ed3\u6784\u3002\u6240\u4ee5\uff0c\u6234\u592b\u5c31\u8fd9\u4e48\u505a\u4e86\uff1a\n\u4ece\u6570\u636e\u7c7b\u5bfc\u5165dataclass@dataclassclass\u8282\u70b9\uff1apass@dataclassclass\u8868\u8fbe\u5f0f(\u8282\u70b9)\uff1apass@dataclassclass\u8bed\u53e5(\u8282\u70b9)\uff1apass@dataclassclass\u6574\u6570(\u8868\u8fbe\u5f0f)\uff1avalue\uff1aint@dataclassclass BinOp(\u8868\u8fbe\u5f0f)\uff1aop\uff1astr\u5de6\u4fa7\uff1a\u8868\u8fbe\u5f0f\u53f3\u4fa7\uff1aexpression@dataclassclass UnaryOp(\u8868\u8fbe\u5f0f)\uff1aop\uff1astr\u64cd\u4f5c\u6570\uff1aexpression@dataclassclass PrintStatement(\u8bed\u53e5\u3002\n\u8fd9\u4e00\u5207\u90fd\u5f88\u6709\u6548--\u5b9e\u9645\u4e0a\u6bd4\u9884\u671f\u7684\u8981\u597d\u3002\u7136\u800c\uff0c\u6709\u4e00\u5929\uff0cDave\u8ba4\u4e3a\u7ed9\u6240\u6709\u8282\u70b9\u6dfb\u52a0\u4e00\u4e2a\u53ef\u9009\u7684\u884c\u53f7\u5c5e\u6027\u4f1a\u5f88\u6709\u7528\u3002\u81ea\u7136\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u53ef\u4ee5\u5728\u57fa\u7c7b\u4e0a\u8f7b\u677e\u5b8c\u6210\u7684\u4e8b\u60c5\uff1a\n\u6234\u592b\u60f3\u9519\u4e86\uff01\u5982\u679c\u8fd9\u6837\u505a\uff0c\u6570\u636e\u7c7b\u5c31\u4f1a\u50cf\u706b\u7403\u4e00\u6837\u7206\u70b8\u3002\u4e0d\uff0c\u4e0d\u662f\u53ef\u9009\u5c5e\u6027\u3002\u4e0d\u662f\uff0c\u662f\u57fa\u7c7b\u3002\u5509\uff0c\u552f\u4e00\u7684\u89e3\u51b3\u65b9\u6848\u4f3c\u4e4e\u6d89\u53ca\u590d\u5236\u4e00\u4e2alineno\u5c5e\u6027\u6765\u7ed3\u675f\u6bcf\u4e2a\u7c7b\u3002\u5982\u679cDave\u6709\u4e00\u70b9\u5173\u4e8e\u7ebf\u7d22\u7684\u7ebf\u7d22\uff0c\u4ed6\u53ea\u9700\u5728__init__()\u7684\u4ee3\u7801\u751f\u6210\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u8c03\u6574\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\u4ece\u7ebf\u7d22\u5bfc\u5165\u6570\u636e\uff0cALL_CLOES\uff0cCLOLEGEN\u7c7b\u8282\u70b9(DATUM)\uff1alineno=None@cluegen def__init__(Cls)\uff1aClaes=all_Claes(CLS)args=&#39\uff1b\uff0c&#39\uff1b.join(f&#39\uff1b{name}={getattr(cls\uff0cname)\uff01r}&#39\uff1bif hasattr(cls\uff0cname)\uff0c\u800c\u4e0d\u662fisinstance(getattr(CLS\uff0cname).Join(f&#39\uff1b{name}={getattr(cls\uff0cname)\uff01r}&#39\uff1bif hasattr(cls\uff0cname)and not isinstance(getattr(CLS\uff0cname)\u3002sel.{name}={name}&#39\uff1b\u8868\u793a\u7ebf\u7d22\u4e2d\u7684\u540d\u79f0)Body+=&#39\uff1b\\n self.lineno=lineno&#39\uff1breturn f&#39\uff1bdef__init__(self\uff0c{args}\uff0c*\uff0clineno=None)\uff1a\\n{body}\\n&#39\uff1bclass expression(Nodum)\uff1apassclass\u8bed\u53e5(Nodump)\uff1apassclass Integer(Expression)\uff1avalue\uff1aintclass BinOp(Expression)\uff1a\n\u8fd9\u4e2a\u6545\u4e8b\u7684\u5bd3\u610f\u662f\uff0c\u7ebf\u7d22\u4ee3\u8868\u4e86\u4e00\u79cd\u4e0d\u540c\u7684\u529b\u91cf--\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u7684\u6743\u529b\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u5141\u8bb8\u7684\u6743\u529b\u3002\u8fd9\u4e00\u5207\u90fd\u4e0e\u4f60\u6709\u5173\uff01\n\u63d0\u4f9b\u7684Datum\u7c7b\u4e3a\u4e00\u7ec4\u5e38\u89c1\u7684defaultmethod\u751f\u6210\u4ee3\u7801\u3002\u5982\u679c\u4f60\u60f3\u53bb\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u5411\uff0c\u4f60\u771f\u7684\u4e0d\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u5e0c\u671b\u653e\u5f03\u7c7b\u578b\u63d0\u793a\uff0c\u8f6c\u800c\u57fa\u4e8e__\u69fd__\u751f\u6210\u4ee3\u7801\u3002\u4e0b\u9762\u662f\u4f60\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\u4ececluegen import DatumBase\u4e2d\uff0ccluegendef all_slot(CLS)\uff1aCLS\u4e2dCLS\u7684\u63d2\u69fd=[]\u3002__mro__\uff1aslot[0\uff1a0]=getattr(cls\uff0c&#39\uff1b__slot_&#39\uff1b\uff0c[])\u8fd4\u56deslotsclass Slotum(DatumBase)\uff1a__slot__=()@cluegen def__init_(Cls)\uff1aslot=all_slot\u3002.join(\u63d2\u69fd)+&#39\uff1b)\uff1a\\n&#39\uff1b+&#39\uff1b\\n&#39\uff1b.join(f&#39\uff1bsel.{name}={name}&#39\uff1bfor name in slot))@cluegen def__repr__(Cls)\uff1aslot=all_slot(Cls)return(&#39\uff1bdef_repr__(Self)\uff1a\\n&#39\uff1b+f&#39\uff1breturn f&#\u3002\uff0c&#39\uff1b.join(&#39\uff1b%s={sel.%s\uff01r}&#39\uff1b%(name\uff0cname)\u8868\u793a\u63d2\u69fd\u4e2d\u7684\u540d\u79f0)+&#39\uff1b)&#34\uff1b&#39\uff1b)\u3002\n\u4e00\u4e9b\u5b57\u7b26\u4e32\u683c\u5f0f\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u8003\u8651\u3002\u4e0d\u8fc7\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u60a8\u5982\u4f55\u4f7f\u7528Slotum\u7684\u793a\u4f8b\uff1a\n&gt\uff1b&gt\uff1b&gt\uff1b\u7c7b\u79ef\u5206(SLOTUM)\uff1a.__\u63d2\u69fd__=(&#39\uff1bx&#39\uff1b\uff0c&#39\uff1by&#39\uff1b).\u3002&gt\uff1b&gt\uff1b&gt\uff1bp=Point(2\uff0c3)&gt\uff1b&gt\uff1b&gt\uff1bpPoint(x=2\uff0cy=3)&gt\uff1b&gt\uff1b&gt\uff1b\u7c7bPoint3(\u70b9)\uff1a.__\u63d2\u69fd__=(&#39\uff1bz&#39\uff1b\uff0c).\u3002&gt\uff1b&gt\uff1b&gt\uff1bp3=Point3(2\uff0c3\uff0c4)&gt\uff1b&gt\uff1b&gt\uff1bp3Point3(x=2\uff0cy=3\uff0cz=4)&gt\uff1b&gt\uff1b\nCluegen\u57fa\u4e8ePython\u7684\u63cf\u8ff0\u7b26\u534f\u8bae\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6bcf\u5f53\u60a8\u8bbf\u95ee\u7c7b\u7684\u5c5e\u6027\u65f6\uff0cPython\u90fd\u4f1a\u67e5\u627e\u5b9e\u73b0\u9b54\u672f__get__()\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002\u5982\u679c\u627e\u5230\uff0c\u5b83\u5c06\u4f7f\u7528\u5173\u8054\u7684\u5b9e\u4f8b\u548c\u7c7b\u8c03\u7528__get__()\u3002Cluegen\u4f7f\u7528\u5b83\u5728\u9996\u6b21\u8bbf\u95ee\u7279\u6b8a\u65b9\u6cd5(\u5982__init__())\u65f6\u751f\u6210\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u673a\u5668\u5728\u8fd0\u8f6c\u7684\u4f8b\u5b50\u3002\n\u73b0\u5728\uff0c\u770b\u770b\u7c7b\u5b57\u5178\u4e2d\u7684__init__()\u65b9\u6cd5\u3002\u60a8\u5c06\u770b\u5230\u8fd9\u662f\u67d0\u79cd\u5947\u602a\u7684ClueGen\u5b9e\u4f8b\uff1a\n\u6b64\u5bf9\u8c61\u8868\u793a&#34\uff1b\u672a\u751f\u6210\u7684&#34\uff1b\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u4ee5\u4efb\u4f55\u65b9\u5f0f\u89e6\u6478\u7c7b\u4e0a\u7684__init__\u5c5e\u6027\uff0c\u60a8\u5c06\u770b\u5230Cluegenobject\u6d88\u5931\uff0c\u5e76\u7531\u9002\u5f53\u7684\u51fd\u6570\u66ff\u6362\uff1a\n\u8fd9\u662f\u57fa\u672c\u601d\u60f3--\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5c5e\u6027\u65f6\u751f\u6210\u4ee3\u7801\u3002\u7ee7\u627f\u7ed9\u65b9\u7a0b\u5f0f\u589e\u52a0\u4e86\u989d\u5916\u7684\u8936\u76b1\u3002\u5047\u8bbe\u60a8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b50\u7c7b\uff1a\n\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u770b\u5230ClueGen\uff1b\u5bf9\u8c61\u8fd4\u56de\u5230\u7c7b\u5b57\u5178\u3002\u6b64\u5916\uff0c\u5f53\u5b83\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\uff0c\u5b83\u4f1a\u88ab\u66ff\u6362\u3002\u4e0b\u9762\u662f\u521b\u5efa\u5b9e\u4f8b\u65f6\u5728\u8f83\u4f4e\u7ea7\u522b\u4e0a\u53d1\u751f\u7684\u60c5\u51b5\uff1a\n&gt\uff1b&gt\uff1b&gt\uff1bi=Point3.__dict__[&#39\uff1b__init__&#39\uff1b]&gt\uff1b&gt\uff1b&gt\uff1bi.__Get__(None\uff0cPoint3)&lt\uff1b\u51fd\u6570__init_\u4f4d\u4e8e0x102e20950&gt\uff1b&gt\uff1bPoint3.__init__&lt\uff1b\u51fd\u6570__init__\u57280x102e20950&gt\uff1b&gt\uff1bp=Point3(1\uff0c2\uff0c3)&gt\uff1b&gt\uff1bpPoint3(x=1\uff0cy=2\uff0cz=3)&gt\uff1b&gt\uff1b&gt\uff1b\n\u8981\u83b7\u5f97\u66f4\u591a\u9605\u8bfb\uff0c\u8bf7\u67e5\u627e\u6709\u5173Python\u63cf\u8ff0\u7b26\u534f\u8bae\u7684\u4fe1\u606f\u3002\u8fd9\u4e0e\u4f7f\u5bf9\u8c61\u7cfb\u7edf\u7684\u5c5e\u6027\u3001\u7c7b\u65b9\u6cd5\u548c\u5176\u4ed6\u529f\u80fd\u5de5\u4f5c\u7684\u673a\u5236\u76f8\u540c\u3002\n\u7b54\uff1a\u6ca1\u6709\u3002\u7c7b\u578b\u4ec5\u4ec5\u662f\u5173\u4e8e\u503c\u53ef\u80fd\u662f\u4ec0\u4e48\u7684\u7ebf\u7d22\uff0cPython\u8bed\u8a00\u672c\u8eab\u4e0d\u63d0\u4f9b\u4efb\u4f55\u5f3a\u5236\u3002\u8fd9\u4e9b\u7c7b\u578b\u5728\u6267\u884c\u7c7b\u578b\u68c0\u67e5\u6216linting\u7684IDE\u6216\u7b2c\u4e09\u65b9\u5de5\u5177\u4e2d\u53ef\u80fd\u5f88\u6709\u7528\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u60a8\u53ef\u4ee5\u6269\u5c55\u63d0\u793a\u6765\u5f3a\u5236\u6267\u884c\u7c7b\u578b\u3002\n\u7b54\uff1a\u6ca1\u6709\u3002Datum\u57fa\u7c7b\u662f\u4e00\u4e2a\u666e\u901a\u7684Python\u7c7b\u3002\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a__init_subclass__()\u65b9\u6cd5\u6765\u534f\u52a9\u5b50\u7c7b\u7684\u7ba1\u7406\uff0c\u4f46\u662f\u9664\u4e86__init__()\u3001__repr_()\u3001__iter_()\u548c__eq__()\u7b49\u6807\u51c6\u7684\u7279\u6b8a\u65b9\u6cd5\u5916\uff0c\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u5176\u4ed6\u65b9\u6cd5\u3002Python\u7684\u63cf\u8ff0\u7b26\u534f\u8bae\u7528\u4e8e\u9a71\u52a8\u4ee3\u7801\u751f\u6210\u3002\n\u7b54\uff1a\u6ca1\u6709setup.py\u6587\u4ef6\u3001\u5b89\u88c5\u7a0b\u5e8f\u6216\u5b98\u65b9\u7248\u672c\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u4ee3\u7801\u590d\u5236\u5230\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u6765\u5b89\u88c5\u5b83\u3002cluegen.py\u5f88\u5c0f\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u6839\u636e\u81ea\u5df1\u7684\u76ee\u7684\u5bf9\u5176\u8fdb\u884c\u590d\u5236\u548c\u4fee\u6539\u3002\n\u7b54\uff1a\u4f60\u5e94\u8be5\u628a\u5b83\u8bfb\u6210\u201ckuludg-in\u201d\uff0c\u5c31\u50cf\u201crunnin\u201d\u6216\u8005\u201ctrippin\u201d\u4e00\u6837\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6709\u4eba\u95ee\u4f60\u5728\u505a\u4ec0\u4e48\uff0c\u4f60\u4e0d\u80fd\u8bf4\u201cm usingcluegen\u201d\u3002\u4e0d\uff0c\u4f60\u4f1a\u8bf4\u201c\u6211\u4e0a\u4e86\u4e00\u4e9b\u8bfe\u201d\u3002\u771f\u7684\u5728\u505a\u3002\u51c6\u786e\u6027\u5f88\u91cd\u8981\u3002", "note_en": "Cluegen is a library that allows you to define data classes usingPython type clues. Here&#39;s an example of how you use it:\n  The resulting class works in a well civilised way, providing theusual  __init__() and  __repr__() methods that you&#39;d normally haveto type out by hand:\n  Inheritance works as well--if you add new attributes in a subclass theyget added to the already existing attributes. For example:\n    At this point, naysayers will be quick to point out that &#34;well,actually you could just use  @dataclass from the standard library.&#34;Othe.rs migh.t help.fully sugg.est usag.e of the attr.s libr.ary.And they might have a point. I mean, sure, you could write your classlike this:\n  Yes. Yes, you could do that if you wanted your class to be slow toimport, wrapped up by more than 1000 lines of tangled decorator magic,and inflexible. Or you could use cluegen! Cluegen is tiny, extensible,provides the same notational convenience, and results in classes thatimport about 20x faster (see the file  perf.py for a benchmark).\n Under the hood,  cluegen works by dynamically creating code formethods such as  __init__() and  __repr__(). This code looksexactly the same as code you would normally write by hand. It&#39;s thesame kind of code that the  @dataclass decorator creates. A notablefeature of  cluegen however, is that all of its code generation is&#34;lazy.&#34; That is, no methods are generated until they&#39;re actuallyneeded during the execution of your program. This substantiallyreduces import and startup time for situations where a program mightonly be using a subset of the defined data classes. You also don&#39;t paya penalty for features you aren&#39;t using. And even if do use all thefeatures, it&#39;s still faster than dataclasses. Phfft!\n  cluegen is customizable in interesting ways. For example, supposeyou wanted to add your own custom code generation method to the Datum class. Here&#39;s an example of how you could do that:\n from cluegen import Datum, cluegen, all_cluesclass Mytum(Datum): @cluegen def as_dict(cls): clues = all_clues(cls) return (&#39;def as_dict(self):\\n&#39; + &#39; return {\\n&#39; + &#39;\\n&#39;.join(f&#39; {key!r}: self.{key},\\n&#39; for key in clues) + &#39;}\\n&#39;)class Point(Mytum): x: int y: int\n   In the above example, the decorated  as_dict() method is presentedthe class. In this case,  cls would be  Point. The  all_clues()function is a utility function that collects all type-clues from aclass including those from base classes. For this example, it returnsa dictionary  {&#39;x&#39;: int, &#39;y&#39;: int}. The value returned by as_dict() is a text-string containing the implementation of theactual  as_dict() method as it would be if you had written it byhand. This text string is executed once to create a method thatreplaces the decorated version. From that point forward, the classuses the generated code instead.\n cluegen doesn&#39;t have too many other bells and whistles--the entireimplementation is about 100 lines of code. It&#39;s something that youcan understand, modify, and play around with.\n  Once, there was this developer. For the sake of this story, let&#39;s callhim &#34;Dave.&#34; As Dave was want to do, he liked to write compilers. Acompiler is a natural place to use something fancy like adataclass--especially for all of the tree structures. So, Dave did just that:\n from dataclasses import dataclass@dataclassclass Node: pass@dataclassclass Expression(Node): pass@dataclassclass Statement(Node): pass@dataclassclass Integer(Expression): value: int@dataclassclass BinOp(Expression): op: str left: Expression right: Expression@dataclassclass UnaryOp(Expression): op: str operand: Expression@dataclassclass PrintStatement(Statement): value: Expression# Examplenode = PrintStatement(BinOp(&#39;+&#39;, Integer(3), BinOp(&#39;*&#39;, Integer(4), Integer(5))))\n This all worked great--better than expected in fact. However, one day, Dave thought it wouldbe useful to add an optional line number attribute to all of the nodes. Naturally, thisseemed like something that could be easily done on the base class:\n  Dave thought wrong! Dataclasses explode in a fireball if you do this.No, not optional attributes. Not, base classes. Alas, the onlysolution seemed to involve copying a  lineno attribute to end ofevery class. If Dave had had a clue about cluegen, he could have easilysolved this problem by just adding a minor tweak to the code generation for  __init__():\n from cluegen import Datum, all_clues, cluegenclass Nodum(Datum): lineno = None @cluegen def __init__(cls): clues = all_clues(cls) args = &#39;, &#39;.join(f&#39;{name}={getattr(cls,name)!r}&#39; if hasattr(cls, name) and not isinstance(getattr(cls, name), types.MemberDescriptorType) else name for name in clues) body = &#39;\\n&#39;.join(f&#39; self.{name} = {name}&#39; for name in clues) body += &#39;\\n self.lineno = lineno&#39; return f&#39;def __init__(self, {args}, *, lineno=None):\\n{body}\\n&#39;class Expression(Nodum): passclass Statement(Nodum): passclass Integer(Expression): value: intclass BinOp(Expression): op: str left: Expression right: Expressionclass UnaryOp(Expression): op: str operand: Expressionclass PrintStatement(Statement): value: Expression\n   The moral of this story is that cluegen represents a different kind apower--the power to do what YOU want as opposed what THEY allow. It&#39;sall about YOU!\n  The provided  Datum class generates code for a common set of defaultmethods. You really don&#39;t need to use this if you want to go in acompletely different direction. For example, suppose that youwanted to abandon type hints and generate code based on  __slots__instead. Here&#39;s an example of how you could do it:\n from cluegen import DatumBase, cluegendef all_slots(cls): slots = [] for cls in cls.__mro__: slots[0:0] = getattr(cls, &#39;__slots__&#39;, []) return slotsclass Slotum(DatumBase): __slots__ = () @cluegen def __init__(cls): slots = all_slots(cls) return (&#39;def __init__(self, &#39; + &#39;,&#39;.join(slots) + &#39;):\\n&#39; + &#39;\\n&#39;.join(f&#39; self.{name} = {name}&#39; for name in slots) ) @cluegen def __repr__(cls): slots = all_slots(cls) return (&#39;def __repr__(self):\\n&#39; + f&#39; return f&#34;{cls.__name__}(&#39; + &#39;,&#39;.join(&#39;%s={self.%s!r}&#39; % (name, name) for name in slots) + &#39;)&#34;&#39; )\n Some of the string formatting might take a bit of pondering. However, here is anexample of how you&#39;d use  Slotum:\n &gt;&gt;&gt; class Point(Slotum):... __slots__ = (&#39;x&#39;, &#39;y&#39;)... &gt;&gt;&gt; p = Point(2,3)&gt;&gt;&gt; pPoint(x=2,y=3)&gt;&gt;&gt; class Point3(Point):... __slots__ = (&#39;z&#39;,)... &gt;&gt;&gt; p3 = Point3(2,3,4)&gt;&gt;&gt; p3Point3(x=2,y=3,z=4)&gt;&gt;&gt;\n  Cluegen is based on Python&#39;s descriptor protocol. In a nutshell, wheneveryou access an attribute of a class, Python looks for an object thatimplements a magic  __get__() method. If found, it invokes  __get__()with the associated instance and class. Cluegen uses this to generatecode on first-access to special methods such as  __init__(). Hereis an example of the machinery at work.\n   Now, look at the  __init__() method in the class dictionary. You&#39;llsee that&#39;s some kind of strange &#34;ClueGen&#34; instance:\n  This object represents the &#34;ungenerated&#34; method. If you touch the __init__ attribute on the class in any way, you&#39;ll see the Cluegenobject disappear and be replaced by a proper function:\n  This is the basic idea--code generation on first access to anattribute. Inheritance adds an extra wrinkle into the equation.Suppose you define a subclass:\n  Here, you&#39;ll see the &#34;ClueGen&#34; object make a return to the class dictionary.Again, it gets replaced when it&#39;s first accessed. Here&#39;s what happensat a low level when you make an instance:\n &gt;&gt;&gt; i = Point3.__dict__[&#39;__init__&#39;]&gt;&gt;&gt; i.__get__(None, Point3)&lt;function __init__ at 0x102e20950&gt;&gt;&gt;&gt; Point3.__init__&lt;function __init__ at 0x102e20950&gt;&gt;&gt;&gt; p = Point3(1,2,3)&gt;&gt;&gt; pPoint3(x=1, y=2, z=3)&gt;&gt;&gt;\n For more reading, look for information on Python&#39;s &#34;Descriptor Protocol.&#34;This is the same machinery that makes properties, classmethods, and otherfeatures of the object system work.\n     A: No. The types are merely clues about what the value might be andthe Python language does not provide any enforcement on its own. Thetypes might be useful in an IDE or third-party tools that performtype-checking or linting. You could probably extend  cluegen toenforce types if you wanted though.\n  A: No. The  Datum base class is a plain Python class. It defines an __init_subclass__() method to assist with the management ofsubclasses, but nothing other than the standard special methodssuch as  __init__(),  __repr__(),  __iter__(), and  __eq__() aredefined. Python&#39;s descriptor protocol is used to drive code generation.\n  A: There is no  setup.py file, installer, or an official release. Youinstall it by copying the code into your own project.  cluegen.py issmall. You are encouraged to copy and modify it to your own purposes.\n    A: You should pronounce it as &#34;kludg-in&#34; as in &#34;runnin&#34; or &#34;trippin&#34;.So, if someone asks &#34;what are you doing?&#34;, you don&#39;t say &#34;I&#39;m usingcluegen.&#34; No, you&#39;d say &#34;I&#39;m kludgin up some classes.&#34; The latter ismore accurate as it describes both the tool and the thing that you&#39;reactually doing. Accuracy matters.", "posttime": "2020-05-13 17:21:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u60f0\u6027,lazy,\u65b9\u6cd5", "title": "Python\u60f0\u6027\u6570\u636e\u7c7b\uff0c\u5bfc\u5165\u901f\u5ea6\u63d0\u9ad820\u500d", "title_en": "Python lazy dataclasses, import 20x faster", "transed": 1, "url": "https://github.com/dabeaz/cluegen", "via": "", "real_tags": ["python", "\u60f0\u6027", "lazy", "\u65b9\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001954, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u4eec\u603b\u662f\u6ee5\u7528\u6392\u961f\u3002\u6700\u4ee4\u4eba\u9707\u60ca\u7684\u6848\u4f8b\u662f\u4fee\u590d\u901f\u5ea6\u8f83\u6162\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u95ee\u9898\uff0c\u4ece\u800c\u5bfc\u81f4\u8fc7\u8f7d\u3002\u4f46\u8981\u8bf4\u660e\u539f\u56e0\uff0c\u6211\u9700\u8981\u5e26\u4e0a\u4e00\u4e9b\u6211\u5728\u8fd9\u4e2a\u5730\u65b9\u7684\u6f14\u8bb2\u548c\u6587\u672c\uff0c\u4ee5\u53ca\u6211\u5728\u6124\u6012\u4e2d\u7528Erlang\u5199\u7684\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u3002\n\u4e3a\u4e86\u5c06\u4e8b\u60c5\u8fc7\u4e8e\u7b80\u5355\u5316\uff0c\u6211\u6700\u7ec8\u4ece\u4e8b\u7684\u5927\u591a\u6570\u9879\u76ee\u90fd\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6d74\u5ba4\u6d17\u624b\u6c60\u3002\u7528\u6237\u548c\u6570\u636e\u8f93\u5165\u4ece\u6c34\u9f99\u5934\u5411\u4e0b\u6d41\u52a8\uff0c\u76f4\u5230\u7cfb\u7edf\u8f93\u51fa\uff1a\n\u56e0\u6b64\uff0c\u5728\u6b63\u5e38\u64cd\u4f5c\u4e0b\uff0c\u60a8\u7684\u7cfb\u7edf\u53ef\u4ee5\u5904\u7406\u4f20\u5165\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u5f88\u597d\u5730\u6267\u884c\u8fd9\u4e9b\u6570\u636e\uff1a\n\u6c34\u8fdb\u4e86\uff0c\u6c34\u51fa\u4e86\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5f88\u5f00\u5fc3\u3002\u4f46\u662f\uff0c\u6709\u65f6\u60a8\u4f1a\u770b\u5230\u7cfb\u7edf\u4e0a\u51fa\u73b0\u4e34\u65f6\u8fc7\u8f7d\u3002\u5982\u679c\u4f60\u53d1\u4fe1\u606f\uff0c\u8fd9\u5c06\u56f4\u7ed5\u7740\u4f53\u80b2\u8d5b\u4e8b\u6216\u65b0\u5e74\u524d\u5915\u8fd9\u6837\u7684\u4e8b\u4ef6\u5c55\u5f00\u3002\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u65b0\u95fb\u7f51\u7ad9\uff0c\u90a3\u5c31\u662f\u5f53\u4e00\u4ef6\u5927\u4e8b\u53d1\u751f\u7684\u65f6\u5019(\u7f8e\u56fd\u7684\u9009\u4e3e\uff0c\u82f1\u56fd\u7684\u738b\u5ba4\u5b9d\u5b9d\uff0c\u6709\u4eba\u8bf4\u4ed6\u4eec\u4e0d\u559c\u6b22\u628a\u6cd5\u8bed\u4f5c\u4e3a\u9b41\u5317\u514b\u7684\u4e00\u79cd\u8bed\u8a00)\u3002\n\u7cfb\u7edf\u8f93\u51fa\u7684\u6570\u636e\u4ecd\u7136\u6709\u9650\uff0c\u8f93\u5165\u7684\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cWeb\u7528\u6237\u5c06\u4f7f\u7528\u8bf8\u5982\u7f13\u5b58\u4e4b\u7c7b\u7684\u4e1c\u897f\u6765\u5b9e\u73b0\u5b83\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c11\u6240\u9700\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5176\u4ed6\u7cfb\u7edf\u5c06\u4f7f\u7528\u5de8\u5927\u7684\u7f13\u51b2\u533a(\u961f\u5217\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a\u63a5\u6536\u5668)\u6765\u4fdd\u5b58\u4e34\u65f6\u6570\u636e\u3002\n\u5f53\u4f60\u4e0d\u53ef\u907f\u514d\u5730\u9047\u5230\u957f\u671f\u8d85\u8f7d\u65f6\uff0c\u95ee\u9898\u5c31\u6765\u4e86\u3002\u8fd9\u662f\u5f53\u4f60\u770b\u7740\u4f60\u7684\u7cfb\u7edf\u8d1f\u8f7d\uff0c\u54e6\uff0c\u5929\u54ea\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u6389\u4e0b\u6765\u3002\u7ed3\u679c\u53d1\u73b0\u5965\u5df4\u9a6c\u4e0d\u60f3\u4ea4\u51fa\u4ed6\u7684\u51fa\u751f\u8bc1\u660e\uff0c\u738b\u5ba4\u5b9d\u5b9d\u770b\u8d77\u6765\u4e0d\u50cf\u4ed6\u7684\u7236\u4eb2\uff0c\u6709\u4eba\u8bf4\u9b41\u5317\u514b\u5e94\u8be5\u66f4\u597d\u5730\u4f7f\u7528\u5df4\u9ece\u6cd5\u8bed\uff0c\u800c\u4e14\u8c23\u8a00\u4e00\u6b21\u4f20\u4e86\u597d\u51e0\u5929\u751a\u81f3\u51e0\u5468\uff1a\n\u7a81\u7136\u4e4b\u95f4\uff0c\u7f13\u51b2\u533a\u3001\u961f\u5217\u4e4b\u7c7b\u7684\u4e1c\u897f\u518d\u4e5f\u5904\u7406\u4e0d\u4e0b\u53bb\u4e86\u3002\u60a8\u6b63\u5904\u4e8e\u5371\u6025\u72b6\u6001\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u670d\u52a1\u5668\u5192\u70df\uff0c\u6216\u8005\u5982\u679c\u5728\u4e91\u4e2d\uff0c\u60c5\u51b5\u548c\u5f80\u5e38\u4e00\u6837\u7cdf\u7cd5\uff0c\u4f46\u60c5\u51b5\u4f1a\u66f4\u7cdf\uff01\n\u54ce\u5440\uff0c\u5927\u5bb6\u90fd\u6b7b\u4e86\uff0c\u4f60\u51cc\u66683\u70b9\u5c31\u5728\u529e\u516c\u5ba4\u91cc(\u4ed6\u5728\u7f8e\u56fd\u8ba4\u8bc6\u8fd9\u4e48\u591a\u4eba\uff0c\u538c\u6076\u4ed6\u4eec\u7684\u80af\u5c3c\u4e9a\u603b\u7edf\uff0c\u73b0\u5728\u60f3\u77e5\u9053\u5173\u4e8e\u738b\u5ba4\u5b9d\u5b9d\u7684\u6d88\u606f\uff0c\u800c\u9b41\u5317\u514b\u4eba\u5374\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u62ac\u5934\u770b\u7740\u5e26\u5976\u916a\u5b9d\u5b9d\u7684\u7687\u5bb6\u9e21\u5c3e\u9152)\u3002\n\u60a8\u53ef\u4ee5\u67e5\u770b\u5806\u6808\u8ddf\u8e2a\u3001\u961f\u5217\u3001DB\u6162\u67e5\u8be2\u548c\u60a8\u8c03\u7528\u7684API\u3002\u4f60\u4e00\u6b21\u8981\u82b1\u51e0\u5468\u7684\u65f6\u95f4\u6765\u4f18\u5316\u6bcf\u4e2a\u7ec4\u4ef6\uff0c\u786e\u4fdd\u5b83\u59cb\u7ec8\u662f\u597d\u7684\u548c\u575a\u5b9e\u7684\u3002\u4e8b\u60c5\u4e00\u76f4\u5728\u5d29\u6e83\uff0c\u4f46\u4f60\u6bcf\u6b21\u90fd\u8981\u591a\u82b12-3\u5929\u7684\u65f6\u95f4\u3002\n\u6700\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u95ee\u9898\u5806\u79ef\u5982\u5c71\uff0c\u4f46\u6bcf\u4e00\u6b21\u5931\u8d25\u4e4b\u95f4\u76f8\u9694\u4e00\u5468\uff0c\u8fd9\u4f1a\u6781\u5927\u5730\u51cf\u6162\u4f60\u7684\u4f18\u5316\u901f\u5ea6\uff0c\u56e0\u4e3a\u5f53\u4e8b\u60c5\u9700\u8981\u51e0\u5468\u7684\u65f6\u95f4\u624d\u4f1a\u53d8\u574f\u7684\u65f6\u5019\uff0c\u8861\u91cf\u5b83\u4eec\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002\n\u4f60\u53bb\u5427\uff0c\u597d\u5427\uff0c\u6211\u5df2\u7ecf\u6ca1\u6709\u4e3b\u610f\u4e86\uff0c\u8ba9\u6211\u4eec\u4e70\u4e00\u53f0\u66f4\u5927\u7684\u670d\u52a1\u5668\u5427\u3002\u7cfb\u7edf\u6700\u7ec8\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u5b83\u8fd8\u662f\u51fa\u4e86\u6545\u969c\uff1a\u3002\n\u9664\u4e86\u73b0\u5728\uff0c\u5b83\u662f\u4e00\u5757\u65e0\u6cd5\u7ef4\u62a4\u7684\u5783\u573e\uff0c\u91cc\u9762\u88c5\u6ee1\u4e86\u80ae\u810f\u7684\u9ed1\u5ba2\uff0c\u4f7f\u5b83\u5de5\u4f5c\u8d77\u6765\u7684\u6210\u672c\u662f\u4ee5\u524d\u76845\u500d\uff0c\u800c\u4e14\u4f60\u5df2\u7ecf\u62ff\u4e86\u51e0\u4e2a\u6708\u7684\u94b1\u6765\u4f18\u5316\u5b83\uff0c\u6ca1\u6709\u4efb\u4f55\u8be5\u6b7b\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u5b83\u5728\u8d85\u8f7d\u65f6\u4ecd\u7136\u4f1a\u6b7b\u4ea1\u3002\n\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u90a3\u8fb9\u7684\u90a3\u4e2a\u7ea2\u8272\u7bad\u5934\u3002\u4f60\u8fbe\u5230\u4e86\u4e00\u4e9b\u786c\u9650\u5236\uff0c\u5373\u4f7f\u5728\u4f60\u6240\u6709\u7684\u5206\u6790\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4e5f\u6ca1\u6709\u6b63\u786e\u5730\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u53ef\u4ee5\u662f\u6570\u636e\u5e93\u3001\u5916\u90e8\u670d\u52a1\u7684API\u3001\u78c1\u76d8\u901f\u5ea6\u3001\u5e26\u5bbd\u6216\u5e38\u89c4I/O\u9650\u5236\u3001\u5206\u9875\u901f\u5ea6\u3001CPU\u9650\u5236\u7b49\u7b49\u3002\n\u4f60\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u4f18\u5316\u4f60\u7684\u8d85\u7ea7\u670d\u52a1\uff0c\u7ed3\u679c\u5374\u5728\u67d0\u4e2a\u65f6\u5019\u53d1\u73b0\uff0c\u4f60\u6ca1\u6709\u66f4\u5927\u7684\u53d8\u5316\u5c31\u8d85\u8fc7\u4e86\u5b83\u7684\u6700\u4f73\u901f\u5ea6\uff0c\u5f53\u4f60\u7684\u7cfb\u7edf\u8fd0\u884c\u901f\u5ea6\u8d85\u8fc7\u8fd9\u4e2a\u786c\u9650\u5236\u7684\u90a3\u4e00\u5929\uff0c\u4f60\u6ce8\u5b9a\u8981\u8ba9\u81ea\u5df1\u9677\u5165\u4e00\u7cfb\u5217\u6c38\u6052\u7684\u7cfb\u7edf\u6545\u969c\u3002\n\u4ee4\u4eba\u6cae\u4e27\u7684\u662f\uff0c\u60a8\u53d1\u73b0\u4e00\u65e6\u60a8\u7684\u7cfb\u7edf\u6d41\u884c\u8d77\u6765\uff0c\u5c31\u4f1a\u6709\u4eba\u4f7f\u7528\u5b83\u548c\u5b83\u7684API\uff0c\u800c\u8981\u5c06\u5176\u66f4\u6539\u4e3a\u66f4\u597d\u7684\u7cfb\u7edf\u662f\u975e\u5e38\u6602\u8d35\u548c\u56f0\u96be\u7684\u3002\u7279\u522b\u662f\u56e0\u4e3a\u4f60\u53ef\u80fd\u4e0d\u5f97\u4e0d\u91cd\u65b0\u5ba1\u89c6\u4f60\u5728\u5176\u6838\u5fc3\u8bbe\u8ba1\u4e2d\u6240\u505a\u7684\u5047\u8bbe\u3002\u54ce\u5440\u3002\n\u90a3\u4f60\u9700\u8981\u4ec0\u4e48\uff1f\u5f53\u4e8b\u60c5\u53d8\u574f\u65f6\uff0c\u4f60\u9700\u8981\u6311\u9009\u5fc5\u987b\u7ed9\u4e88\u7684\u4e1c\u897f\u3002\u4f60\u5c06\u4e0d\u5f97\u4e0d\u5728\u963b\u585e\u8f93\u5165(\u80cc\u538b)\u6216\u5c06\u6570\u636e\u4e22\u5230\u5730\u677f\u4e0a(\u51cf\u8d1f)\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u65f6\u6709\u53d1\u751f\uff0c\u6211\u4eec\u53ea\u662f\u4e0d\u60f3\u4ee5\u5f00\u53d1\u4eba\u5458\u7684\u8eab\u4efd\u8fd9\u4e48\u505a\uff0c\u597d\u50cf\u8fd9\u662f\u5728\u627f\u8ba4\u5931\u8d25\u3002\n\u4ff1\u4e50\u90e8\u524d\u7684\u4fdd\u9556\uff0c\u7ed5\u8fc7\u6c34\u575d\u7684\u6ea2\u6c34\u9053\uff0c\u9632\u6b62\u4f60\u5728\u6ee1\u6cb9\u7bb1\u91cc\u52a0\u66f4\u591a\u6c7d\u6cb9\u7684\u538b\u529b\u673a\u5236\uff0c\u7b49\u7b49\u3002\u4ed6\u4eec\u90fd\u5728\u90a3\u91cc\u5b9e\u65bd\u7cfb\u7edf\u8303\u56f4\u7684\u6d41\u91cf\u63a7\u5236\uff0c\u4ee5\u786e\u4fdd\u64cd\u4f5c\u5b89\u5168\u3002\n\u5728[\u975e\u5173\u952e]\u8f6f\u4ef6\u4e2d\uff1f\u7ba1\u4ed6\u5462\uff01\u6211\u4eec\u4ece\u4e0d\u5378\u8d27\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u6fc0\u6012\u5229\u76ca\u76f8\u5173\u8005\uff0c\u6211\u4eec\u4e5f\u4ece\u4e0d\u8003\u8651\u80cc\u538b\u3002\u901a\u5e38\uff0c\u7cfb\u7edf\u4e2d\u7684\u80cc\u538b\u662f\u9690\u542b\u7684\uff1a\u5f88\u6162\u3002\n\u5bf9\u67d0\u4e8b\u7269\u7684\u51fd\u6570/\u65b9\u6cd5\u8c03\u7528\u6700\u7ec8\u4f1a\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\u5417\uff1f\u5b83\u5f88\u6162\u3002\u6ca1\u6709\u8db3\u591f\u591a\u7684\u4eba\u8ba4\u4e3a\u8fd9\u662f\u901a\u8fc7\u4f60\u7684\u8eab\u4f53\u7cfb\u7edf\u7684\u80cc\u538b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4f4e\u901f\u5206\u5e03\u5f0f\u7cfb\u7edf\u5f80\u5f80\u662f\u8d85\u8f7d\u7164\u77ff\u7684\u8b66\u6212\u7ebf\u3002\u95ee\u9898\u662f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ea\u662f\u7ad9\u5728\u90a3\u91cc\u8d70\u7740\uff0c\u4e3a\u4ec0\u4e48\u4e00\u5207\u90fd\u8fd9\u4e48\u6162\uff1f\uff1f&34\uff1b\u800c\u5f00\u53d1\u4eba\u5458\u8d70\u4e86\uff0c\u6211\u4e0d\u77e5\u9053\uff01\u3002\u5c31\u662f\u8fd9\u6837\uff01\u8fd9\u5f88\u96be\uff0c\u597d\u5417\uff01&34\uff1b\n\u8fd9\u901a\u5e38\u662f\u56e0\u4e3a\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9(\u53ef\u80fd\u662f\u7f51\u7edc\uff0c\u6216\u8005\u5728\u6ca1\u6709\u9002\u5f53\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\u51e0\u4e4e\u4e0d\u53ef\u80fd\u89c2\u5bdf\u5230\u7684\u4e1c\u897f\uff0c\u5982TCP incast)\uff0c\u6709\u4e9b\u4e1c\u897f\u88ab\u963b\u585e\u4e86\uff0c\u5176\u4ed6\u6240\u6709\u4e1c\u897f\u90fd\u4f1a\u5c06\u5176\u63a8\u56de\u5230\u7cfb\u7edf\u7684\u8fb9\u7f18\uff0c\u7ed9\u7528\u6237\u3002\n\u80cc\u538b\u4f1a\u8ba9\u7cfb\u7edf\u53d8\u6162\u5417\uff1f\u5b83\u964d\u4f4e\u4e86\u7528\u6237\u8f93\u5165\u6570\u636e\u7684\u901f\u5ea6\u3002\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u7684\u6574\u4e2a\u5806\u6808\u4fdd\u6301\u6d3b\u529b\u3002\u4f60\u77e5\u9053\u4eba\u4eec\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u4f7f\u7528\u6392\u961f\u5417\uff1f\u5c31\u5728\u90a3\u513f\u3002\u5f53\u64cd\u4f5c\u65f6\u95f4\u592a\u957f\u5e76\u963b\u585e\u4e86\u4e1c\u897f\u65f6\uff0c\u4eba\u4eec\u5c31\u4f1a\u5728\u7cfb\u7edf\u4e2d\u5f15\u5165\u4e00\u4e2a\u602a\u5f02\u7684\u961f\u5217\u3002\n\u800c\u4e14\u6548\u679c\u7acb\u7aff\u89c1\u5f71\u3002\u66fe\u7ecf\u8fd0\u884c\u7f13\u6162\u7684\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u53c8\u6062\u590d\u4e86\u901f\u5ea6\u3002\u5f53\u7136\uff0c\u60a8\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u6574\u4e2a\u754c\u9762\u4ee5\u53ca\u4ea4\u4e92\u548c\u62a5\u544a\u673a\u5236\uff0c\u4ee5\u4f7f\u5176\u6210\u4e3a\u5f02\u6b65\u7684\uff0c\u4f46\u8fd9\u771f\u662f\u592a\u5feb\u4e86\uff01\n\u9664\u975e\u5728\u67d0\u4e2a\u65f6\u5019\u961f\u5217\u6ea2\u51fa\uff0c\u60a8\u4f1a\u4e22\u5931\u6240\u6709\u6570\u636e\u3002\u8fd9\u662f\u4e00\u4e2a\u4e25\u8083\u7684\u4f1a\u8bae\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u5728\u4f1a\u4e0a\u8ba8\u8bba\u8fd9\u662f\u600e\u4e48\u53ef\u80fd\u53d1\u751f\u7684\u3002Dev#3\u5efa\u8bae\u6dfb\u52a0\u66f4\u591a\u7684Worker\uff0cDev#6\u5efa\u8bae\u961f\u5217\u83b7\u5f97\u6301\u4e45\u6027\uff0c\u8fd9\u6837\u5f53\u5b83\u5d29\u6e83\u65f6\uff0c\u4e0d\u4f1a\u4e22\u5931\u8bf7\u6c42\u3002\n\u5927\u5bb6\u90fd\u8bf4\u5f88\u9177\u3002\u53bb\u4e0a\u73ed\u4e86\u3002\u9664\u975e\u5230\u4e86\u67d0\u4e2a\u65f6\u5019\uff0c\u7cfb\u7edf\u53c8\u6b7b\u4e86\u3002\u961f\u4f0d\u53c8\u56de\u5230\u4e86\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u5df2\u7ecf\u6324\u6ee1\u4e86\u4eba\u3002Dev#5\u8d70\u8fdb\u53bb\u60f3\uff0c\u54e6\uff0c\u5bf9\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u66f4\u591a\u7684\u961f\u5217(\u6211\u53d1\u8a93\uff0c\u6211\u5728\u4e0d\u592a\u4e86\u89e3\u7684\u65f6\u5019\u5c31\u770b\u5230\u8fc7\u8fd9\u4e00\u5e55\u7684\u51fa\u73b0)\u3002\u4eba\u4eec\u8bf4\uff0c\u54e6\uff0c\u662f\u7684\uff0c\u8fd9\u4f1a\u589e\u52a0\u8fd0\u529b\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u51fa\u53d1\u4e86\u3002\n\u7136\u540e\u5b83\u53c8\u6b7b\u4e86\u3002\u6ca1\u6709\u4eba\u60f3\u5230\u90a3\u91cc\u90a3\u4e2a\u72e1\u733e\u7684\u7ea2\u8272\u7bad\u5934\uff1a\n\u4e5f\u8bb8\u4ed6\u4eec\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u51b3\u5b9a\u4f7f\u7528MongoDB\uff0c\u56e0\u4e3aMongoDB\u6bd4Postgres(\u5475\u5475)\u5feb\u3002\u8c01\u77e5\u9053\u5462\u3002\n\u771f\u6b63\u7684\u95ee\u9898\u662f\u6d89\u53ca\u5230\u7684\u6bcf\u4e2a\u4eba\u90fd\u4f7f\u7528\u961f\u5217\u4f5c\u4e3a\u4f18\u5316\u673a\u5236\u3002\u6709\u4e86\u4ed6\u4eec\uff0c\u65b0\u7684\u95ee\u9898\u73b0\u5728\u6210\u4e86\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u662f\u4e00\u4e2a\u96be\u4ee5\u7ef4\u6301\u7684\u5669\u68a6\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u4ee5\u7834\u574f\u7aef\u5230\u7aef\u539f\u5219\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u56e0\u4e3a\u4f7f\u7528\u6301\u4e45\u961f\u5217\u4f5c\u4e3a\u4e00\u79cd\u5373\u53d1\u5373\u5fd8\u673a\u5236\uff0c\u6216\u8005\u5047\u8bbe\u4efb\u52a1\u4e0d\u80fd\u91cd\u653e\u6216\u4e22\u5931\u3002\u60a8\u6709\u66f4\u591a\u7684\u5730\u65b9\u53ef\u4ee5\u8d85\u65f6\uff0c\u9700\u8981\u65b0\u7684\u65b9\u6cd5\u6765\u68c0\u6d4b\u6545\u969c\u5e76\u5c06\u5176\u4f20\u56de\u7ed9\u7528\u6237\uff0c\u7b49\u7b49\u3002\n\u8fd9\u4e9b\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u522b\u8bef\u4f1a\u6211\u7684\u610f\u601d\u3002\u95ee\u9898\u662f\uff0c\u5b83\u4eec\u662f\u4f5c\u4e3a\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u90e8\u5206\u5f15\u5165\u7684\uff0c\u800c\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u5e76\u4e0d\u9002\u5408\u5b83\u6240\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u53ea\u662f\u8fc7\u65e9\u7684\u4f18\u5316\u3002\u5373\u4f7f\u6bcf\u4e2a\u53c2\u4e0e\u7684\u4eba\u90fd\u91c7\u53d6\u4e86\u63aa\u65bd\uff0c\u5bf9\u771f\u6b63\u75db\u70b9\u7684\u771f\u6b63\u5931\u8d25\u505a\u51fa\u4e86\u53cd\u5e94\uff0c\u7b49\u7b49\u3002\u95ee\u9898\u662f\uff0c\u6ca1\u6709\u4eba\u8003\u8651\u5230\u4e8b\u60c5\u7684\u771f\u6b63\u3001\u6838\u5fc3\u4e1a\u52a1\u7ed3\u675f\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u7684\u9650\u5236\u662f\u4ec0\u4e48\u3002\u4eba\u4eec\u6216\u591a\u6216\u5c11\u5730\u5728\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u4e2d\u5c40\u90e8\u5730\u8003\u8651\u4e86\u8fd9\u4e9b\u9650\u5236\uff0c\u4f46\u5e76\u4e0d\u603b\u662f\u8fd9\u6837\u3002\n\u4f46\u5e94\u8be5\u6709\u4eba\u505a\u51fa\u5fc5\u987b\u505a\u51fa\u7684\u9009\u62e9\uff1a\u4f60\u662f\u963b\u6b62\u4eba\u4eec\u5728\u7cfb\u7edf\u4e2d\u8f93\u5165\u4e1c\u897f\uff0c\u8fd8\u662f\u51cf\u8f7b\u8d1f\u62c5\u3002\u8fd9\u4e9b\u90fd\u662f\u4e0d\u53ef\u907f\u514d\u7684\u9009\u62e9\uff0c\u4e0d\u91c7\u53d6\u884c\u52a8\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u6545\u969c\u3002\n\u4f60\u77e5\u9053\u4ec0\u4e48\u5f88\u9177\u5417\uff1f\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684\u7cfb\u7edf\u4e2d\u786e\u5b9e\u5b58\u5728\u8fd9\u4e9b\u74f6\u9888\uff0c\u5e76\u628a\u5b83\u4eec\u653e\u5728\u9002\u5f53\u7684\u80cc\u538b\u673a\u5236\u540e\u9762\uff0c\u4f60\u7684\u7cfb\u7edf\u751a\u81f3\u6ca1\u6709\u6743\u5229\u53d8\u6162\u3002\n\u6b65\u9aa41.\u786e\u5b9a\u74f6\u9888\u3002\u6b65\u9aa42\uff1a\u5411\u74f6\u9888\u8bf7\u6c42\u5806\u79ef\u66f4\u591a\u6570\u636e\u7684\u6743\u9650\uff1a\n\u6839\u636e\u60a8\u653e\u7f6e\u63a2\u5934\u7684\u4f4d\u7f6e\uff0c\u60a8\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7ea7\u522b\u7684\u5ef6\u8fdf\u548c\u541e\u5410\u91cf\u8fdb\u884c\u4f18\u5316\uff0c\u4f46\u60a8\u8981\u505a\u7684\u662f\u5b9a\u4e49\u7cfb\u7edf\u7684\u9002\u5f53\u64cd\u4f5c\u9650\u5236\u3002\n\u5f53\u4eba\u4eec\u76f2\u76ee\u5730\u5e94\u7528\u961f\u5217\u4f5c\u4e3a\u7f13\u51b2\u533a\u65f6\uff0c\u4ed6\u4eec\u6240\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u66f4\u5927\u7684\u7f13\u51b2\u533a\u6765\u79ef\u7d2f\u4f20\u8f93\u4e2d\u7684\u6570\u636e\uff0c\u7ed3\u679c\u8fdf\u65e9\u4f1a\u4e22\u5931\u3002\u4f60\u8ba9\u5931\u8d25\u53d8\u5f97\u66f4\u52a0\u7f55\u89c1\uff0c\u4f46\u4f60\u5374\u8ba9\u5931\u8d25\u53d8\u5f97\u66f4\u4e25\u91cd\u3002\n\u5f53\u60a8\u5378\u8f7d\u5e76\u4e3a\u60a8\u7684\u7cfb\u7edf\u5b9a\u4e49\u9002\u5f53\u7684\u64cd\u4f5c\u9650\u5236\u65f6\uff0c\u60a8\u5c31\u6ca1\u6709\u8fd9\u4e9b\u4e86\u3002\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u540c\u6837\u4e0d\u6ee1\u7684\u5ba2\u6237(\u56e0\u4e3a\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u90fd\u4e0d\u80fd\u6b63\u786e\u5c65\u884c\u60a8\u7684\u7cfb\u7edf\u627f\u8bfa)\uff0c\u4f46\u901a\u8fc7\u9002\u5f53\u7684\u80cc\u538b\u6216\u51cf\u8d1f\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\uff1a\n\u4e00\u4e2aAPI\u5728\u8bbe\u8ba1\u65f6\u4f1a\u8003\u8651\u5230\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00(\u80cc\u538b\u4f1a\u8ba9\u60a8\u77e5\u9053\u4f55\u65f6\u5904\u4e8e\u8d85\u8f7d\u72b6\u6001\uff0c\u4ee5\u53ca\u4f55\u65f6\u91cd\u8bd5\u7b49\u7b49\uff0c\u800c\u5378\u8f7d\u4f1a\u8ba9\u7528\u6237\u77e5\u9053\u6709\u4e9b\u6570\u636e\u4e22\u5931\u4e86\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898)\u3002\n\u4e3a\u4e86\u4f7f\u5185\u5bb9\u53ef\u7528\uff0c\u8003\u8651\u5230\u7aef\u5230\u7aef\u539f\u5219\u7684\u9002\u5f53\u7684\u5e42\u7b49API\u5c06\u4f7f\u5176\u6210\u4e3a\u95ee\u9898\uff0c\u56e0\u6b64\u8fd9\u4e9b\u80cc\u538b\u548c\u51cf\u8d1f\u7684\u5b9e\u4f8b\u5bf9\u60a8\u7684\u8c03\u7528\u8005\u6765\u8bf4\u4e0d\u5e94\u8be5\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u5b89\u5168\u5730\u91cd\u8bd5\u8bf7\u6c42\u5e76\u77e5\u9053\u5b83\u4eec\u662f\u5426\u8d77\u4f5c\u7528\u3002\n\u56e0\u6b64\uff0c\u5f53\u6211\u62b1\u6028/\u53cd\u5bf9\u961f\u5217\u65f6\uff0c\u90a3\u662f\u56e0\u4e3a\u961f\u5217\u7684\u5e94\u7528\u65b9\u5f0f\u901a\u5e38(\u4f46\u4e0d\u603b\u662f)\u4f1a\u6beb\u65e0\u7406\u7531\u5730\u5b8c\u5168\u6270\u4e71\u7aef\u5230\u7aef\u539f\u5219\u3002\u8fd9\u662f\u56e0\u4e3a\u7cdf\u7cd5\u7684\u7cfb\u7edf\u5de5\u7a0b\uff0c\u4eba\u4eec\u8bd5\u56fe\u8ba9\u4e00\u8f8618\u8f6e\u7684\u5361\u8f66\u901a\u8fc7\u5438\u7ba1\uff0c\u5e76\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5730\u72f1\u7684\u4e8b\u60c5\u4f1a\u53d8\u5f97\u7cdf\u7cd5\u3002\u6700\u540e\uff0c\u6392\u961f\u53ea\u4f1a\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7cdf\u3002\u5f53\u60c5\u51b5\u6076\u5316\u65f6\uff0c\u60c5\u51b5\u4f1a\u53d8\u5f97\u975e\u5e38\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u8bd5\u56fe\u95ed\u4e0a\u773c\u775b\uff0c\u5ffd\u89c6\u4ed6\u4eec\u4e3a\u4e86\u89e3\u51b3\u5927\u575d\u4e0a\u6e38\u7684\u6d2a\u6c34\u95ee\u9898\u800c\u4fee\u5efa\u4e86\u4e00\u5ea7\u5927\u575d\u7684\u4e8b\u5b9e\u3002\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u7528\u4f8b\u4f7f\u7528\u961f\u5217\u4f5c\u4e3a\u524d\u7aef\u7ebf\u7a0b/\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236(\u60f3\u4e00\u60f3PHP\u3001Ruby\u3001CGI\u5e94\u7528\u7a0b\u5e8f\uff0c\u7b49\u7b49)\uff0c\u56e0\u4e3a\u60a8\u7684\u8bed\u8a00\u4e0d\u652f\u6301\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u5b83\u7565\u597d\u4e8e\u4f7f\u7528MySQL\u8868(\u6211\u89c1\u8fc7\u51e0\u6b21\uff0c\u751a\u81f3\u53c2\u4e0e\u8fc7)\uff0c\u4f46\u6bd4\u9009\u62e9\u4e00\u4e2a\u652f\u6301\u6b63\u786e\u5b9e\u73b0\u89e3\u51b3\u65b9\u6848\u6240\u9700\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236\u7684\u5de5\u5177\u8981\u5dee\u5f97\u591a\u3002", "note_en": "People misuse queues all the time. The most egregious case being to fix issues with slow apps, and consequently, with overload. But to say why, I&#39;ll need to take bits of talks and texts I have around the place, and content that I have written in more details about in  Erlang in Anger.\n To oversimplify things, most of the projects I end up working on can be visualized as a very large bathroom sink. User and data input are flowing from the faucet, down &#39;till the output of the system:\n  So under normal operations, your system can handle all the data that comes in, and carry it out fine:\n  Water goes in, water goes out, everyone&#39;s happy. However, from time to time, you&#39;ll see temporary overload on your system. If you do messaging, this is going to be around sporting events or events like New Year&#39;s Eve. If you&#39;re a news site, it&#39;s gonna be when a big thing happens (Elections in the US, Royal baby in the UK, someone says they dislike French as a language in Quebec).\n   The data that comes out of the system is still limited, and input comes in faster and faster. Web people will use stuff like caches at that point to make it so the input and output required gets to be reduced. Other systems will use a huge buffer (a queue, or in this case, a sink) to hold the temporary data.\n The problem comes when you inevitably encounter prolonged overload. It&#39;s when you look at your system load and go &#34;oh crap&#34;, and it&#39;s not coming down ever. Turns out Obama doesn&#39;t want to turn in his birth certificate, the royal baby doesn&#39;t look like the father, and someone says Quebec should be better off with Parisian French, and the rumor mill is going for days and weeks at a time:\n  All of a sudden, the buffers, queues, whatever, can&#39;t deal with it anymore. You&#39;re in a critical state where you can see smoke rising from your servers, or if in the cloud, things are as bad as usual, but more!\n   Woops, everyone is dead, you&#39;re in the office at 3am (who knew so many people in the US, disgusted with their &#34;Kenyan&#34; president, now want news on the royal baby, while Quebec people look up &#39;royale with cheese baby&#39; for some reason) trying to keep things up.\n You look at your stack traces, at your queue, at your DB slow queries, at the APIs you call. You spend weeks at a time optimizing every component, making sure it&#39;s always going to be good and solid. Things keeps crashing, but you hit the point where every time, it takes 2-3 days more.\n At the end of it, you see a crapload of problems still happening, but they&#39;re a week apart between each failure, which slows down your optimizing in immense ways because it&#39;s incredibly hard to measure things when they take weeks to go bad.\n You go &#34;okay I&#39;m all out of ideas, let&#39;s buy a bigger server.&#34; The system in the end looks like this, and it&#39;s still failing:\n  Except now it&#39;s an unmaintainable piece of garbage full of dirty hacks to make it work that cost 5 times what it used to, and you&#39;ve been paid for months optimizing it for no god damn reason because it still dies when overloaded.\n The problem? That red arrow there. You&#39;re hitting some hard limit that even through all of your profiling, you didn&#39;t consider properly. This can be a database, an API to an external service, disk speed, bandwidth or general I/O limits, paging speed, CPU limits, whatever.\n You&#39;ve spent months optimizing your super service only to find out at some point in time, you went past its optimal speed without larger changes, and the day your system got to have an operational speed greater than this hard limit, you&#39;ve doomed yourself to an everlasting series of system failures.\n The disheartening part about it is that you discover that once your system is popular, has people using it and its APIs, and changing it to be better is very expensive and hard. Especially since you&#39;ll probably have to revisit assumptions you&#39;ve made in its core design. Woops.\n So what do you need? You&#39;ll need to pick  what has to give whenever stuff goes bad. You&#39;ll have to pick between blocking on input (back-pressure), or dropping data on the floor (load-shedding). And that happens all the time in the real world, we just don&#39;t want to do it as developers, as if it were an admission of failure.\n Bouncers in front of a club, water spillways to go around dams, the pressure mechanism that keeps you from putting more gas in a full tank, and so on. They&#39;re all there to impose a system-wide flow control to keep operations safe.\n In [non-critical] software? Who cares! We never shed load because that makes stakeholders angry, and we never think about back-pressure. Usually the back-pressure in the system is implicit: &#39;tis slow.\n A function/method call to something ends up taking longer? It&#39;s slow. Not enough people think of it as back-pressure making its way through your system. In fact, slow distributed systems are often the canary in the overload coal mine. The problem is that everyone just stands around and goes &#34;durr why is everything so slow??&#34; and devs go &#34;I don&#39;t know! It just is! It&#39;s hard, okay!&#34;\n That&#39;s usually because somewhere in the system (possibly the network, or something that is nearly impossible to observe without proper tooling, such as  TCP incast), something is clogged and everything else is pushing it back to the edge of your system, to the user.\n And that back-pressure making the system slower? It slows down the rate at which users can input data. It&#39;s what is likely keeping your whole stack alive. And you know when people start using queues? Right there. When operations take too long and block stuff up, people introduce a freaking queue in the system.\n And the effects are instant. The application that was sluggish is now fast again. Of course you need to redesign the whole interface and interactions and reporting mechanisms to become asynchronous, but man is it fast!\n Except at some point the queue spills over, and you lose all of the data. There&#39;s a serious meeting that then takes place where everyone discusses how this could possibly have happened. Dev #3 suggests more workers are added, Dev #6 recommends the queue gets persistency so that when it crashes, no requests are lost.\n &#34;Cool,&#34; says everyone. Off to work. Except at some point, the system dies again. And the queue comes back up, but it&#39;s already full and uuugh. Dev #5 goes in and thinks &#34;oh yeah, we could add more queues&#34; (I swear I&#39;ve seen this unfold back when I didn&#39;t know better). People say &#34;oh yeah, that increases capacity&#34; and off they go.\n And then it dies again. And nobody ever thought of that sneaky red arrow there:\n  Maybe they do it without knowing, and decide to go with MongoDB because it&#39;s &#34;faster than Postgres&#34; (heh). Who knows.\n The real problem is that everyone involved used queues as an optimization mechanism. With them, new problems are now part of the system, which is a nightmare to maintain. Usually, these problems will come in the form of ruining the  end-to-end principle by using a persistent queue as a fire-and-forget mechanisms or assuming tasks can&#39;t be replayed or lost. You have more places that can time out, require new ways to detect failures and communicate them back to users, and so on.\n Those can be worked around, don&#39;t get me wrong. The issue is that they&#39;re being introduced as part of a solution that&#39;s not appropriate for the problem it&#39;s built to solve. All of this was just premature optimization. Even when everyone involved took measures, reacted to real failures in real pain points, etc. The issue is that nobody considered what the true, central business end of things is, and what its limits are. People considered these limits locally in each sub-component, more or less, and not always.\n But someone should have picked what had to give: do you stop people from inputting stuff in the system, or do you shed load. Those are inescapable choices, where inaction leads to system failure.\n And you know what&#39;s cool? If you identify these bottlenecks you have for real in your system, and you put them behind proper back-pressure mechanisms, your system won&#39;t even have the right to become slow.\n Step 1. Identify the bottleneck. Step 2: ask the bottleneck for permission to pile more data in:\n    Depending on where you put your probe, you can optimize for different levels of latency and throughput, but what you&#39;re going to do is define proper operational limits of your system.\n When people blindly apply a queue as a buffer, all they&#39;re doing is creating a bigger buffer to accumulate data that is in-flight, only to lose it sooner or later. You&#39;re making failures more rare, but you&#39;re making their magnitude worse.\n When you shed load and define proper operational limits to your system, you don&#39;t have these. What you may have is customers that are as unhappy (because in either case, they can&#39;t do what your system promises right), but with proper back-pressure or load-shedding, you gain:\n An API that will be designed with either in mind (back-pressure lets you know when you&#39;re in an overload situation, and when to retry or whatever, and load-shedding lets the user know that some data was lost so they can work around that)\n To make stuff usable, a proper idempotent API with end-to-end principles in mind will make it so these instances of back-pressure and load shedding should rarely be a problem for your callers, because they can safely retry requests and know if they worked.\n So when I rant about/against queues, it&#39;s because queues will often be (but not always) applied in ways that totally mess up end-to-end principles for no good reason. It&#39;s because of bad system engineering, where people are trying to make an 18-wheeler go through a straw and wondering why the hell things go bad. In the end the queue just makes things worse. And when it goes bad, it goes really bad, because everyone tried to close their eyes shut and ignore the fact they built a dam to solve flooding problems upstream of the dam.\n And then of course, there&#39;s the use case where you use the queue as a messaging mechanism between front-end threads/processes (think PHP, Ruby, CGI apps in general, and so on) because your language doesn&#39;t support inter-process communications. It&#39;s marginally better than using a MySQL table (which I&#39;ve seen done a few times and even took part in), but infinitely worse than picking a tool that supports the messaging mechanisms you need to implement your solution right.", "posttime": "2020-05-13 17:19:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e0\u6cd5,don,\u7cfb\u7edf", "title": "\u961f\u5217\u65e0\u6cd5\u4fee\u590d\u8fc7\u8f7d(2014)", "title_en": "Queues don't fix overload (2014)", "transed": 1, "url": "https://ferd.ca/queues-don-t-fix-overload.html", "via": "", "real_tags": ["\u65e0\u6cd5", "don", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "41327772d1dcb0da1bd3f165e0caa78a.png", "infoid": 1001952, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u5df2\u7ecf\u6784\u5efa\u4e86\u5f88\u591aAPI\u5e76\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u60a8\u8fd8\u53ef\u80fd\u4f7f\u7528Postman\u4e4b\u7c7b\u7684\u5de5\u5177\u6216\u501f\u52a9\u524d\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684API\u5b9e\u73b0\u6765\u624b\u52a8\u6d4b\u8bd5\u60a8\u7684API\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u8fd0\u884c\u5f97\u5f88\u597d\u3002\n\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u5df2\u7ecf\u63a5\u8fd1\u7ec8\u70b9\u7ebf\u4e86\uff0c\u60f3\u8981\u5411\u5927\u4f17\u53d1\u5e03\u4f60\u7684\u4e0b\u4e00\u6b3e\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u3002\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u4e0d\u8212\u670d\uff0c\u56e0\u4e3a\u4f60\u4e0d\u786e\u5b9a\u4f60\u53ef\u80fd\u4f1a\u9762\u4e34\u4ec0\u4e48\u6837\u7684\u610f\u60f3\u4e0d\u5230\u7684\u95ee\u9898\u3002\u7531\u4e8e\u8d1f\u8f7d\u8fc7\u91cd\uff0c\u60a8\u7684\u670d\u52a1\u5668\u751a\u81f3\u53ef\u80fd\u53d8\u5f97\u65e0\u6cd5\u8bbf\u95ee\u3002\n\u6d4b\u8bd5\u5c3d\u53ef\u80fd\u53ef\u9760\u7684API\u662f\u4e00\u9879\u9700\u8981\u638c\u63e1\u7684\u6311\u6218\u3002\u6ca1\u6709\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u7684\u4e2a\u4eba\u5de5\u4f5c\u6d41\u7a0b\u548c\u559c\u597d\u3002\n\u4f46\u662f\uff0c\u60a8\u5e94\u8be5\u8003\u8651\u5bf9\u4efb\u4f55Web\u9879\u76ee\u4f7f\u7528\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u4ee5\u9632\u4e07\u4e00\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u9876\u7ea7\u7684\u5f00\u6e90\u548c\u5546\u4e1a\u5de5\u5177\uff0c\u5b83\u4eec\u5c06\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u52a0\u8f7d\u6d4b\u8bd5\u60a8\u7684\u4e0b\u4e00\u4e2a\u9879\u76ee\u3002\n\u4ee5\u4e0b\u5de5\u5177\u6ca1\u6709\u7279\u5b9a\u7684\u987a\u5e8f\uff0c\u53ea\u662f\u6211\u6216\u6211\u7684\u540c\u4e8b\u5076\u7136\u53d1\u73b0\u7684\u4e00\u4e9b\u5de5\u5177\u7684\u6982\u8ff0\u3002\nApache JMeter\u53ef\u7528\u4e8e\u6d4b\u8bd5\u9759\u6001\u548c\u52a8\u6001\u8d44\u6e90(Web\u52a8\u6001\u5e94\u7528\u7a0b\u5e8f)\u7684\u6027\u80fd\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u670d\u52a1\u5668\u3001\u670d\u52a1\u5668\u7ec4\u3001\u7f51\u7edc\u6216\u5bf9\u8c61\u4e0a\u7684\u91cd\u8f7d\uff0c\u4ee5\u6d4b\u8bd5\u5176\u5f3a\u5ea6\u6216\u5206\u6790\u4e0d\u540c\u8d1f\u8f7d\u7c7b\u578b\u4e0b\u7684\u6574\u4f53\u6027\u80fd\u3002\n\u554a\uff0c\u662f\u7684\uff0c\u8fd9\u662f\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u81f3\u5c11\u9047\u5230\u8fc7\u4e00\u6b21\u7684\u540d\u5b57\u4e4b\u4e00\u3002\nJMeter\u662f\u4e00\u6b3e\u57fa\u4e8eJava\u7684\u5f00\u6e90\u8d1f\u8f7d\u6d4b\u8bd5\u5de5\u5177\uff0c\u7531Apache Foundation\u6784\u5efa\uff0c\u81ea1998\u5e74\u4ee5\u6765\u4e00\u76f4\u6709\u5f88\u591a\u66f4\u65b0\u3002\n\u5b83\u6d41\u884c\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u5b83\u57fa\u4e8e\u63d2\u4ef6\u7684\u67b6\u6784\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u6d4b\u8bd5HTTP\uff0c\u8fd8\u53ef\u4ee5\u6d4b\u8bd5\u5176\u4ed6\u534f\u8bae\u3002\n\u5e9e\u5927\u7684\u793e\u533a\u3002\u7531\u4e8e\u5176\u53d7\u6b22\u8fce\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u5728Web\u4e0a\u627e\u5230\u5404\u79cd\u63d2\u4ef6\u548c\u8d44\u6e90\u3002\n\u5982\u679c\u60a8\u662f\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u65b0\u624b\uff0c\u7531\u4e8e\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u53ef\u80fd\u6027\u5f88\u591a\uff0c\u53ef\u80fd\u4f1a\u8ba9\u60a8\u5e94\u63a5\u4e0d\u6687\u3002\n\u5bf9\u4e8e\u5927\u91cf\u4f7f\u7528CLI\u5de5\u5177\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u80fd\u4e0d\u9002\u5408\u6bcf\u4e2a\u4eba\u7684\u5de5\u4f5c\u8d1f\u8377\u3002\nLoadMill\u901a\u8fc7\u91cd\u653e\u771f\u5b9e\u7684\u7528\u6237\u884c\u4e3a\u81ea\u52a8\u6267\u884c\u540e\u7aef\u56de\u5f52\u6d4b\u8bd5\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u7684\u7528\u6237\u6d41\u521b\u5efa\u548c\u91cd\u653e\u8bb8\u591aAPI\u6d4b\u8bd5\u3002\nLoadMill\u662f\u4e00\u9879\u5546\u4e1aWeb\u670d\u52a1\uff0c\u53ef\u5e2e\u52a9\u60a8\u81ea\u52a8\u6267\u884cAPI\u6d4b\u8bd5\uff0c\u5e76\u57fa\u4e8e\u5f55\u5236\u6216\u624b\u52a8\u8f93\u5165\u542f\u52a8\u8d1f\u8f7d\u6d4b\u8bd5\u3002\n\u706b\u70ae\u662f\u4e00\u6b3e\u73b0\u4ee3\u5316\u3001\u529f\u80fd\u5f3a\u5927\u3001\u6613\u4e8e\u4f7f\u7528\u7684\u8d1f\u8f7d\u6d4b\u8bd5\u548c\u529f\u80fd\u6d4b\u8bd5\u89e3\u51b3\u65b9\u6848\u3002\u53d1\u8d27\u53ef\u6269\u5c55\u7684\u540e\u7aef\u3001API\u548c\u670d\u52a1\uff0c\u53ef\u5728\u9ad8\u8d1f\u8f7d\u4e0b\u4fdd\u6301\u9ad8\u6027\u80fd\u548c\u5f39\u6027\u3002\nGunning\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7684CLI\u5de5\u5177\uff0c\u53ef\u4ee5\u57fa\u4e8eYAML\u6587\u4ef6\u8fd0\u884c\u8d1f\u8f7d\u6d4b\u8bd5\u3002\u5b83\u57fa\u4e8eNode.js\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u3002\u5b83\u6700\u51fa\u540d\u7684\u662f\u5b83\u7684\u7b80\u5355\u6027\uff0c\u4f46\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u53ef\u80fd\u6027\u4e5f\u5f88\u591a\u3002\nGatling\u662f\u4e00\u6b3e\u9488\u5bf9Web\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u6e90\u8d1f\u8f7d\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e13\u4e3aDevOps\u548c\u6301\u7eed\u96c6\u6210\u800c\u8bbe\u8ba1\u3002\u5b83\u7684\u8bbe\u8ba1\u8003\u8651\u5230\u4e86\u6613\u7528\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u9ad8\u6027\u80fd\u3002\u52a0\u7279\u6797\u5305\u62ec\u4e00\u4e2a\u7f51\u7edc\u8bb0\u5f55\u5668\u548c\u4e94\u989c\u516d\u8272\u7684\u62a5\u544a\u3002\nGatling\u662f\u4e00\u4e2a\u7528\u4e8e\u8d1f\u8f7d\u6d4b\u8bd5Web\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u6e90\u5de5\u5177\uff0c\u4e5f\u63d0\u4f9b\u4f01\u4e1a\u7248\u3002\u4e0eArtillery\u7c7b\u4f3c\uff0c\u5b83\u57fa\u4e8e\u7528Scala\u7f16\u5199\u7684\u6a21\u62df\u811a\u672c\u8fd0\u884c\u6d4b\u8bd5\u8ba1\u5212\u3002\nBlazemeter\u662f\u4e00\u4e2a\u4e0eJMeter\u517c\u5bb9\u7684\u5546\u4e1a\u8d1f\u8f7d\u6d4b\u8bd5PaaS\u3002\u5b83\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u5de5\u5177\u4e00\u6837\u8fd0\u884c\u529f\u80fd\u548c\u6027\u80fd\u6d4b\u8bd5\uff0c\u4f46\u8fd8\u63d0\u4f9b\u53ef\u4ee5\u7ec4\u5408\u5230\u6d4b\u8bd5\u4e2d\u7684\u8d44\u6e90\u76d1\u63a7\u3002\nTelerik\u7684Test Studio\u662f\u7528\u4e8eUI\u3001rest API\u548c\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u72ec\u7acb\u6d4b\u8bd5\u5de5\u5177\u3002\u5b83\u4e3b\u8981\u5173\u6ce8\u521b\u5efa\u6d4b\u8bd5\u5e76\u5c06\u5176\u4e0e\u73b0\u6709\u5de5\u4f5c\u8d1f\u8f7d(\u5982CI/CD\u3001\u9519\u8bef\u8ddf\u8e2a\u7b49)\u96c6\u6210\u3002\n\u8fd8\u6709\u8bb8\u8bb8\u591a\u591a\u5176\u4ed6\u5de5\u5177\u4e13\u95e8\u7528\u4e8eAPI\u548c\u8d1f\u8f7d\u6d4b\u8bd5\u3002\u8fd9\u4e9b\u5de5\u5177\u4e4b\u6240\u4ee5\u4ee4\u4eba\u4fe1\u670d\uff0c\u662f\u56e0\u4e3a\u5b83\u7684\u900f\u660e\u548c\u516c\u5e73(\u5c31\u514d\u8d39\u7ea7\u522b\u800c\u8a00)\u5b9a\u4ef7\u6a21\u578b(\u5982\u679c\u662f\u5546\u4e1a\u7684\u8bdd)\u548c\u53ef\u4ee5\u96c6\u6210\u5230\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u5177\u96c6\u4e2d\u7684\u529f\u80fd\u3002\n\u5e0c\u671b\u8fd9\u4efd\u5217\u8868\u542f\u53d1\u4e86\u60a8\uff0c\u5e76\u8ba9\u60a8\u5927\u81f4\u4e86\u89e3\u4e86\u73b0\u6709\u7684\u6d4b\u8bd5\u5de5\u5177\u7c7b\u578b\u4ee5\u53ca\u5b83\u4eec\u5177\u6709\u7684\u529f\u80fd\u3002\u4eab\u53d7\u6d4b\u8bd5\u548c\u67e5\u627e\u66f4\u591a\u5de5\u5177\u7684\u4e50\u8da3\u3002\n\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u2026\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u6709\u5173\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u4ee5\u4e0b\u94fe\u63a5\uff1a", "note_en": "You have built a lot of APIs and went through testing. You also probably test your APIs manually with tools like Postman or with the help of your API implementation in your frontend app. This works fine so far.\n Now imagine you are close to the finish line and want to release your next web app to the masses. You might feel uncomfortable because you are not sure what kind of unexpected issues you might face. Your servers even might become inaccessible due to heavy load.\n Testing APIs as reliable as possible is a challenge that needs to be mastered. There is no best way of doing it, it all depends on your personal workflow and preferences.\n You should, however, consider making use of  load tests for any web project just in case. This post will go through some top open-source and commercial tools that will help you to load test your next project with ease.\n The following tools are in no particular order and just serve as an overview of some tools that I or my colleagues have stumbled upon.\n  Apache JMeter may be used to test performance both on static and dynamic resources, Web dynamic applications. It can be used to simulate a heavy load on a server, group of servers, network or object to test its strength or to analyze overall performance under different load types.\n Ah yes, this is one of the names that every developer came across at least once.\n JMeter is an open-source load test tool based on Java built by the Apache Foundation that\u2019s around since 1998 and still receives many updates.\n One of the reasons for its popularity is its architecture based on plugins. It can not only test HTTP but also other protocols.\n   Large community. A variety of plugins and resources can be found on the web due to its popularity\n  Can be overwhelming if you are new to load tests due to its many possibilities\n Might not fit into everybody\u2019s workload for people who are heavily used to CLI tools\n  Loadmill automates backend regression testing by replaying real user behavior. It can create and replay many API tests based on actual user flows.\n Loadmill is a commercial web service that helps you to automate API tests and start load tests based on recordings or manual input.\n        Artillery is a modern, powerful &amp; easy-to-use solution for   load testing  and   functional testing . Ship   scalable  backends, APIs &amp; services that stay   performant  &amp;   resilient  under high load.\n Artillery is an open-source CLI tool that can run load tests based on YAML files. It is based on Node.js and can run almost anywhere as well. It is best known for its simplicity yet many possibilities for load tests.\n       Gatling is an open-source load testing tool for web applications, designed for DevOps and Continuous Integration. It is designed for ease of use, maintainability and high performance. Gatling includes a web recorder and colorful reports.\n Gatling is an open-source tool for load testing web applications that also offers an enterprise version. Similar to Artillery, it runs test plans based on simulation scripts written in Scala.\n       Blazemeter is a commercial load testing PaaS that is compatible with JMeter. It can run functional and performance test just like any other tool but also offers resource monitoring that can be combined into tests.\n       Telerik\u2019s Test Studio is a standalone testing tool for UI, REST API, and load tests. It focuses a lot on creating tests and integrating them with existing workloads such as CI/CD, bug tracking, etc.\n      There are many, many other tools dedicated to API and load tests. These tools convince due to its transparent and fair (in terms of free tier) pricing model (in case it\u2019s commercial) and functionality that can be integrated into most developers\u2019 toolset.\n Hopefully, this list inspired you and gave you an overview of what type of test tools exist and what kind of capabilities they have. Have fun with testing and finding more tools.\n By the way\u2026 if you want to learn more about load testing, check out these links:", "posttime": "2020-05-13 17:17:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d1f\u8f7d,tools,\u6d4b\u8bd5", "title": "API\u548c\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u70ed\u95e8\u5de5\u5177", "title_en": "Top Tools for API and Load Testing", "transed": 1, "url": "https://medium.com/@Dickson_Mwendia/top-6-tools-for-api-load-testing-7ff51d1ac1e8", "via": "", "real_tags": ["\u8d1f\u8f7d", "tools", "\u6d4b\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "4831a56fd6e2a893dfca72c3085fc4f1.jpg", "infoid": 1001951, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4f5c\u4e3a\u6df1\u5165\u7406\u89e3\u5e7f\u4e49\u76f8\u5bf9\u8bba\u6216\u91cf\u5b50\u573a\u8bba\u57fa\u7840\u6240\u9700\u7684\u6570\u5b66\u77e5\u8bc6\u7684\u89e3\u91ca\u3002\n\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u89e3\u91ca\u4ee5\u53ca\u7ecf\u5178\u529b\u5b66\u7684\u7ed3\u6784\u548c\u89e3\u91ca\u7684\u4f20\u7edf\u4e2d\u7684\u53e6\u4e00\u4e2a\u7470\u5b9d\uff0c\u63d0\u4f9b\u4e86\u5e94\u7528\u6570\u5b66\uff0c\u5c31\u50cf\u524d\u4e24\u672c\u4e66\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u7269\u7406\u6240\u505a\u7684\u90a3\u6837\u3002\n\u5bf9\u4f5c\u4e3a\u6df1\u5165\u7406\u89e3\u5e7f\u4e49\u76f8\u5bf9\u8bba\u6216\u91cf\u5b50\u573a\u8bba\u57fa\u7840\u6240\u9700\u7684\u6570\u5b66\u77e5\u8bc6\u7684\u89e3\u91ca\u3002\n\u7269\u7406\u5b66\u81ea\u7136\u662f\u7528\u6570\u5b66\u8bed\u8a00\u6765\u8868\u8fbe\u7684\u3002\u521a\u63a5\u89e6\u8fd9\u95e8\u5b66\u79d1\u7684\u5b66\u751f\u5fc5\u987b\u540c\u65f6\u5b66\u4e60\u4e00\u95e8\u5730\u9053\u7684\u6570\u5b66\u8bed\u8a00\u548c\u7528\u8fd9\u79cd\u8bed\u8a00\u8868\u8fbe\u7684\u5185\u5bb9\u3002\u8fd9\u5c31\u597d\u50cf\u4ed6\u4eec\u88ab\u8981\u6c42\u4e00\u8fb9\u8bfb\u201c\u60b2\u60e8\u4e16\u754c\u201d\uff0c\u4e00\u8fb9\u52aa\u529b\u5b66\u4e60\u6cd5\u8bed\u8bed\u6cd5\u3002\u8fd9\u672c\u4e66\u63d0\u4f9b\u4e86\u4e00\u79cd\u521b\u65b0\u7684\u65b9\u5f0f\u6765\u5b66\u4e60\u5fae\u5206\u51e0\u4f55\uff0c\u4f5c\u4e3a\u6df1\u5165\u7406\u89e3\u5e7f\u4e49\u76f8\u5bf9\u8bba\u6216\u5927\u5b66\u6c34\u5e73\u4e0a\u6559\u6388\u7684\u91cf\u5b50\u573a\u8bba\u7684\u57fa\u7840\u3002\n\u4f5c\u8005\u91c7\u53d6\u7684\u65b9\u6cd5(\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bfe\u5802\u4e0a\u4f7f\u7528\u4e86\u591a\u5e74)\u5728\u51e0\u4e2a\u65b9\u9762\u4e0e\u4f20\u7edf\u7684\u65b9\u6cd5\u4e0d\u540c\uff0c\u5305\u62ec\u5f3a\u8c03\u534f\u53d8\u5bfc\u6570\u7684\u5f00\u53d1\uff0c\u4ee5\u53ca\u907f\u514d\u4f7f\u7528\u4f20\u7edf\u7684\u5f20\u91cf\u7d22\u5f15\u8bb0\u6570\u6cd5\uff0c\u8f6c\u800c\u4f7f\u7528\u8bed\u4e49\u66f4\u4e30\u5bcc\u7684\u77e2\u91cf\u573a\u548c\u5fae\u5206\u5f62\u5f0f\u8bed\u8a00\u3002\u4f46\u6700\u5927\u7684\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f5c\u8005\u5c06\u8ba1\u7b97\u673a\u7f16\u7a0b\u878d\u5165\u5230\u4ed6\u4eec\u7684\u89e3\u91ca\u4e2d\u3002\u901a\u8fc7\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6765\u89e3\u91ca\u516c\u5f0f\uff0c\u5b66\u751f\u5f88\u5feb\u5c31\u80fd\u77e5\u9053\u516c\u5f0f\u662f\u5426\u6b63\u786e\u3002\u5f15\u5bfc\u5b66\u751f\u6539\u8fdb\u4ed6\u4eec\u7684\u7a0b\u5e8f\uff0c\u4ece\u800c\u63d0\u9ad8\u4ed6\u4eec\u7684\u7406\u89e3\u3002\n$55.00X|GB 45.00ISBN\uff1a9780262019347 248\u9875\u3002|6\u82f1\u5bf8x 9\u82f1\u5bf88\u82f1\u5bf8(&A\uff1bW)\u3002", "note_en": "An explanation of the mathematics needed as a foundation for a deep understanding of general relativity or quantum field theory.\n    Another gem in the tradition of  Structure and Interpretation of Computer Programs and  Structure and Interpretation of Classical Mechanics, providing for applied mathematics what the previous two books did for computer science and physics.\n  An explanation of the mathematics needed as a foundation for a deep understanding of general relativity or quantum field theory.\n Physics is naturally expressed in mathematical language. Students new to the subject must simultaneously learn an idiomatic mathematical language and the content that is expressed in that language. It is as if they were asked to read  Les Mis\u00e9rables while struggling with French grammar. This book offers an innovative way to learn the differential geometry needed as a foundation for a deep understanding of general relativity or quantum field theory as taught at the college level.\n The approach taken by the authors (and used in their classes at MIT for many years) differs from the conventional one in several ways, including an emphasis on the development of the covariant derivative and an avoidance of the use of traditional index notation for tensors in favor of a semantically richer language of vector fields and differential forms. But the biggest single difference is the authors&#39; integration of computer programming into their explanations. By programming a computer to interpret a formula, the student soon learns whether or not a formula is correct. Students are led to improve their program, and as a result improve their understanding.\n  $55.00   X  |   \u00a345.00      ISBN:  9780262019347   248 pp. | 6 in x 9 in  8 b&amp;w illus.", "posttime": "2020-05-13 17:17:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fae\u5206,differential,\u89e3\u91ca", "title": "\u6cdb\u51fd\u5fae\u5206\u51e0\u4f55", "title_en": "Functional Differential Geometry", "transed": 1, "url": "https://mitpress.mit.edu/books/functional-differential-geometry", "via": "", "real_tags": ["\u5fae\u5206", "\u89e3\u91ca"]}, {"category": "", "categoryclass": "", "imagename": "d9e68ebfe7718bafe7868ceda171d9f7.jpg", "infoid": 1001950, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ea\u9700\u51e0\u884c\u989d\u5916\u4ee3\u7801\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6d1e\u5bdfPython Web\u670d\u52a1\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u8fd9\u5c31\u662f\u771f\u6b63\u7684\u5f00\u59cb\uff01\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u5bfc\u5165\u548c\u4e00\u884c\u6765\u521d\u59cb\u5316PrometheusMetrics\uff0c\u60a8\u5c06\u83b7\u5f97\u5728\u5176\u6ce8\u518c\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u7684/metrics\u7aef\u70b9\u4e0a\u516c\u5f00\u7684\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u5ea6\u91cf\u548c\u8bf7\u6c42\u8ba1\u6570\u5668\uff0c\u4ee5\u53ca\u4ece\u5e95\u5c42Prometheus\u5ba2\u6237\u7aef\u5e93\u83b7\u5f97\u7684\u6240\u6709\u9ed8\u8ba4\u5ea6\u91cf\u3002\n\u60a8\u53ef\u4ee5\u5728GitHub\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u4e00\u4e2a\u6613\u4e8e\u8fd0\u884c\u7684\u793a\u4f8b\uff0c\u8be5\u793a\u4f8b\u751f\u6210\u4e00\u4e2aPrometheus\u548cGrafana\u5b9e\u4f8b\u4ee5\u53ca\u4e00\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u6765\u751f\u6210\u4e00\u4e9b\u6307\u6807\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u60a8\u8fd8\u53ef\u4ee5\u5728\u793a\u4f8b\u7684\u81ea\u8ff0\u6587\u4ef6\u4e2d\u627e\u5230\u4eea\u8868\u677f\u4e0a\u663e\u793a\u7684\u6307\u6807\u5217\u8868\uff0c\u4ee5\u53ca\u586b\u5145\u9762\u677f\u7684Prometheus\u67e5\u8be2\u3002\n\u8be5\u5e93\u6709\u5f88\u591a\u914d\u7f6e\u9009\u9879\uff0c\u8bf7\u67e5\u770b\u9879\u76ee\u81ea\u8ff0\u6587\u4ef6\u4e2d\u7684\u793a\u4f8b\u5e76\u8fdb\u884c\u7b80\u8981\u8bf4\u660e\u3002\n\u57fa\u672c\u914d\u7f6e\u5982\u9876\u90e8\u6240\u793a\u3002\u53ea\u9700\u521b\u5efa\u4e00\u4e2aPrometheusMetrics\u5b9e\u4f8b\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3aMetrics\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u6765\u5b9a\u4e49\u60a8\u5e0c\u671b\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u88c5\u9970\u51fd\u6570\u6765\u6536\u96c6\u7684\u5176\u4ed6\u6307\u6807\uff1a\n\u8ba1\u6570\u5668\u5bf9\u8c03\u7528\u8fdb\u884c\u8ba1\u6570\uff0c\u800c\u5176\u4f59\u8ba1\u6570\u5668\u6839\u636e\u8fd9\u4e9b\u8c03\u7528\u7684\u6301\u7eed\u65f6\u95f4\u6536\u96c6\u5ea6\u91cf\u3002\u60a8\u53ef\u4ee5\u4e3a\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9a\u4e49\u6807\u7b7e\uff0c\u53ef\u80fd\u4f7f\u7528\u8bf7\u6c42\u6216\u54cd\u5e94\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff1a\n\u4ece\u70e7\u74f6\u5bfc\u5165\u70e7\u74f6\uff0c\u4eceprometheus_flask_exporter\u5bfc\u5165prometheusMetricsapp=flask(__Name__)#\u6309\u7aef\u70b9\u5206\u7ec4\uff0c\u800c\u4e0d\u662f\u6309\u8def\u5f84\u5ea6\u91cf=prometheusMetrics(app\uff0cgroup_by=&#39\uff1bendpoint&#39\uff1b)@app.route(&#39\uff1b/collection/:collection_id/item/:item_id&#39\uff1b)@metrics.counter(&#39\uff1bcnt_Collection&#39\uff1b\uff0c&#39\uff1b\u6bcf\u4e2a\u96c6\u5408\u7684\u8c03\u7528\u6b21\u6570&#39\uff1b\uff0cLabels={&#39\uff1b\u96c6\u5408&#39\uff1b\uff1alambda\uff1arequest.view_args[&#39\uff1bCollection_id&#39\uff1b]\uff0c&#39\uff1bstatus&#39\uff1b\uff1alambda resp\uff1ares.status_code})def get_item_from_Collection(Collection_id\uff0citem_id)\uff1apass\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u70b9\u51fb\u7aef\u70b9/Collection/10002/Item/76\u5c06\u589e\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5982cnt_Collection{Collect=&#34\uff1b10002&#34\uff1b}\uff0c\u53e6\u5916\u60a8\u5c06\u4ece\u5e93\u4e2d\u83b7\u53d6\u9ed8\u8ba4\u6307\u6807(\u5728\u672c\u4f8b\u4e2d\u4e3a\u6bcf\u4e2a\u7aef\u70b9)\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff1a\nflask_http_Request_Duration_Second-\u6309\u65b9\u6cd5\u3001\u8def\u5f84\u548c\u72b6\u6001\u5217\u51fa\u7684\u6240\u6709Flask\u8bf7\u6c42\u7684HTTP\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4(\u4ee5\u79d2\u4e3a\u5355\u4f4d\u3002\n\u53ef\u4ee5\u9009\u62e9\u8df3\u8fc7\u8ddf\u8e2a\u67d0\u4e9b\u7aef\u70b9\u3001\u6ce8\u518c\u66f4\u591a\u9ed8\u8ba4\u6307\u6807\u3001\u8df3\u8fc7\u4e0a\u8ff0\u6307\u6807\u6216\u5c06\u76f8\u540c\u7684\u81ea\u5b9a\u4e49\u6307\u6807\u5e94\u7528\u4e8e\u591a\u4e2a\u7aef\u70b9\u3002\u8bf7\u67e5\u770b\u9879\u76ee\u81ea\u8ff0\u6587\u4ef6\uff0c\u4e86\u89e3\u53ef\u7528\u7684\u5185\u5bb9\u3002\nAPP=Flask(__NAME__)\u6307\u6807=PrometheusMetrics(app)@app.route(&#39\uff1b/&#39\uff1b)def Main()\uff1adefault@app.route(&#39\uff1b/skip&#39\uff1b)@metrics.do_not_track()def SKIP()\u8ddf\u8e2a\u7684PASS#\u8bf7\u6c42\u6570\uff1aPASS#\u4e0d\u6536\u96c6\u9ed8\u8ba4\u6307\u6807#\u8981\u5e94\u7528\u4e8e\u591a\u4e2a\u7aef\u70b9\u7684\u81ea\u5b9a\u4e49\u6307\u6807COMMON_COUNTER=metrics.count(&#39\uff1bBY_ENDPOINT_COUNTER&#39\uff1b\uff0c&#39\uff1b\u8bf7\u6c42\u8ba1\u6570(&#39\uff1b\u6309\u7aef\u70b9&#39\uff1b\uff0c\u6807\u7b7e={&#39\uff1bEndpoint&#39\uff1b\uff1alambda\uff1arequest.endpoint})@app.route(&#39\uff1b/common/one&#39\uff1b)@common_counterdef Endpoint_One()\uff1a\u81ea\u5b9a\u4e49\u8ddf\u8e2a\u7684\u8def\u5f84#\u548c\u9ed8\u8ba4\u7684metrics@app.route(&#39\uff1b/common/two&#39\uff1b)@common_counterdef Endpoint_Two()\uff1a\u8def\u5f84#\u4e5f\u7531\u81ea\u5b9a\u4e49\u548c\u9ed8\u8ba4\u5ea6\u91cf\u8ddf\u8e2a#\u6ce8\u518c\u5176\u4ed6\u9ed8\u8ba4\u5ea6\u91cf\u3002register_Default(metrics.count(&#39\uff1bby_path_count&#39\uff1b\uff0c&#39\uff1b\u6309\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42\u8ba1\u6570&#39\uff1b\uff0c\u6807\u7b7e={&#39\uff1bpath&#39\uff1b\uff1alambda\uff1arequest.path})\u3002\n\u8be5\u5e93\u4e3a\u6d41\u884c\u7684\u591a\u5904\u7406\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u6269\u5c55\uff0c\u5982uWSGI\u548cGunicorn\u3002\u60a8\u8fd8\u53ef\u4ee5\u627e\u5230\u76ee\u6807\u7528\u4f8b\u7684\u5c0f\u793a\u4f8b\uff0c\u5305\u62ec\u8fd9\u4e9b\u591a\u5904\u7406\u7528\u4f8b\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5e93\u5728Flask\u5e94\u7528\u7a0b\u5e8f\u4e0a\u516c\u5f00\u4e00\u4e2a/metrics\u7aef\u70b9\uff0c\u8be5\u7aef\u70b9\u53ef\u4ee5\u4f5c\u4e3a\u666e\u7f57\u7c73\u4fee\u65af\u6293\u53d6\u7684\u76ee\u6807\u3002\n\u4ece\u4e0a\u9762\u4eea\u8868\u677f\u7684\u793a\u4f8b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u666e\u7f57\u7c73\u4fee\u65af\u6307\u5411\u5177\u6709\u9ed8\u8ba4\u8bbe\u7f6e\u7684Flask\u5e94\u7528\u7a0b\u5e8f\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a\n\u8bf7\u53c2\u9605GitHub\u5b58\u50a8\u5e93\u4e2d\u7684\u5b8c\u6574\u793a\u4f8b\u3002\u8fd9\u91cc\u5047\u8bbe\uff0cPrometheus\u53ef\u4ee5\u5c06\u60a8\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\u5b9a\u4f4d\u5728http://app:5000/metrics\uff0c\u4e0a\uff0c\u5728\u90a3\u91cc\uff0c\u5e94\u7528\u7a0b\u5e8f\u57df\u540d\u53ef\u4ee5\u6f5c\u5728\u5730\u89e3\u6790\u4e3a\u591a\u4e2aIP\u5730\u5740\uff0c\u6bd4\u5982\u5728Kubernetes\u6216Docker Sarm\u4e2d\u8fd0\u884c\u65f6\u3002\n\u5982\u679c\u8fd9\u6837\u516c\u5f00Metrics\u7aef\u70b9\u4e0d\u9002\u5408\u60a8\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u60a8\u4e0d\u60f3\u5141\u8bb8\u5916\u90e8\u8bbf\u95ee\u5b83\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u521b\u5efaPrometheusMetrics\u5b9e\u4f8b\u65f6\u901a\u8fc7\u4f20\u9012path=None\u8f7b\u677e\u5730\u7981\u7528\u5b83\u3002\n\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528start_http_server(Port)\u5728\u4e0d\u540c\u7684HTTP\u7aef\u53e3(\u5728\u4e0a\u4f8b\u4e2d\u4e3a5099)\u4e0a\u516c\u5f00\u6b64\u7aef\u70b9\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u5bf9\u7aef\u70b9\u4f4d\u4e8e\u76f8\u540c\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u611f\u5230\u6ee1\u610f\uff0c\u4f46\u9700\u8981\u66f4\u6539\u5176\u8def\u5f84\uff0c\u800c\u4e0d\u662f/metrics\uff0c\u5219\u53ef\u4ee5\u4f20\u5165\u4e0d\u540c\u7684URI\u4f5c\u4e3apath\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528register_end(..)\u3002\u4ee5\u540e\u518d\u5b89\u6392\u3002\n\u5982\u679c\u4f60\u8bd5\u8bd5\u770b\uff0c\u6253\u5f00\u4e00\u4e2aGitHub\u95ee\u9898\u6216\u8005\u5728\u8fd9\u91cc\u7559\u4e0b\u4f60\u7684\u53cd\u9988\u548c\u5efa\u8bae\u7684\u8bc4\u8bba\uff01\u8c22\u8c22!", "note_en": "Getting insights into how your Python web services are doing can be easily done with a few lines of extra code.\n   That\u2019s really it to get started! By adding an import and a line to initialize  PrometheusMetrics you\u2019ll get  request duration metrics and  request counters exposed on the  /metrics endpoint of the Flask application it\u2019s registered on, along with all the default metrics you get from the underlying  Prometheus client library.\n You can find an  easy-to-run example in the GitHub repo that spins up a  Prometheus and a  Grafana instance along with a demo app to generate some metrics, which will look something like this:\n  You\u2019ll also find the list of metrics in the  README of the example that are displayed on the dashboard, along with the Prometheus queries which populate the panels.\n  The library has lots of configuration options, have a look at the  project README for examples of them with a brief explanation.\n The basic configuration is as shown at the top. Simply create a  PrometheusMetrics instance, let\u2019s call it  metrics, then use it do define additional metrics you want collected by decorating functions with:\n  The counters count invocations, while the rest of them collect metrics based on the duration of those invocations. You can define labels for each of these, potentially using properties of the request or the response. For example:\n from flask import Flask, requestfrom prometheus_flask_exporter import PrometheusMetricsapp = Flask(__name__)# group by endpoint rather than pathmetrics = PrometheusMetrics(app, group_by=&#39;endpoint&#39;)@app.route(&#39;/collection/:collection_id/item/:item_id&#39;)@metrics.counter( &#39;cnt_collection&#39;, &#39;Number of invocations per collection&#39;, labels={ &#39;collection&#39;: lambda: request.view_args[&#39;collection_id&#39;], &#39;status&#39;: lambda resp: resp.status_code })def get_item_from_collection(collection_id, item_id): pass\n In the example above, hitting the endpoint  /collection/10002/item/76 would increment a counter like  cnt_collection{ collection=&#34;10002&#34;, status=&#34;200&#34; }, plus you would get the default metrics (per-endpoint in this example) from the library, by default:\n flask_http_request_duration_seconds - HTTP request duration in seconds for all Flask requests by  method, path and status\n There are options to skip tracking certain endpoints, registering more default metrics, or skipping the ones above, or applying the same custom metric to multiple endpoints. Check out the  project README to see what\u2019s available.\n app = Flask(__name__)metrics = PrometheusMetrics(app)@app.route(&#39;/&#39;)def main(): pass # requests tracked by default@app.route(&#39;/skip&#39;)@metrics.do_not_track()def skip(): pass # default metrics are not collected# custom metric to be applied to multiple endpointscommon_counter = metrics.counter( &#39;by_endpoint_counter&#39;, &#39;Request count by endpoints&#39;, labels={&#39;endpoint&#39;: lambda: request.endpoint})@app.route(&#39;/common/one&#39;)@common_counterdef endpoint_one(): pass # tracked by the custom and the default metrics@app.route(&#39;/common/two&#39;)@common_counterdef endpoint_two(): pass # also tracked by the custom and the default metrics# register additional default metricsmetrics.register_default( metrics.counter( &#39;by_path_counter&#39;, &#39;Request count by request paths&#39;, labels={&#39;path&#39;: lambda: request.path} ))\n The library has some  handy extensions for popular multiprocessing libraries, like  uWSGI and  Gunicorn. You can also find  small examples for targeted use-cases, including these multiprocessing ones.\n  As mentioned above, the library exposes a  /metrics endpoint on the Flask application by default, which can serve as a target for  Prometheus scraping.\n From the example with the dashboard above, you can point your Prometheus to a Flask app with the default settings with configuration like this:\n  See the full example  in the GitHub repository. This assumes, that Prometheus can target your Flask application instances on  http://app:5000/metrics, where the  app domain name can potentially resolve to multiple IP addresses, like when running in Kubernetes or  Docker Swarm.\n If exposing the metrics endpoint like this is not suitable for you, perhaps because you don\u2019t want to allow external access to it, you can easily disable it by passing  path=None when creating the  PrometheusMetrics instance.\n  You can then use  start_http_server(port) to expose this endpoint on a different HTTP port,  5099 in the example above. Alternatively, if you\u2019re happy with the endpoint being on the same Flask app, but need to change its path away from  /metrics, you can either pass in a different URI as the  path parameter, or use  register_endpoint(..) to set it up later.\n   If you give it a go, open a  GitHub issue or leave a comment here with your feedback and suggestions! Thanks!", "posttime": "2020-05-13 17:16:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u535a\u5ba2,\u76d1\u63a7,\u6307\u6807", "title": "\u7528\u666e\u7f57\u7c73\u4fee\u65af\u00b7\u7ef4\u514b\u591a\u00b7\u4e9a\u5f53\u7684\u535a\u5ba2\u76d1\u63a7Python\u70e7\u74f6\u5fae\u670d\u52a1", "title_en": "Monitoring Python Flask Microservices with Prometheus \u00b7 Viktor Adam's Blog", "transed": 1, "url": "https://blog.viktoradam.net/2020/05/11/prometheus-flask-exporter/", "via": "", "real_tags": ["python", "\u535a\u5ba2", "\u76d1\u63a7", "\u6307\u6807"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001949, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JY1\u662f\u4e00\u4e2a\u8c1c\u300220\u4e16\u7eaa70\u5e74\u4ee3\u521d\uff0c\u5f53\u6765\u81ea\u8bfa\u4e01\u6c49\u7684\u4e00\u540d\u7535\u53f0\u706b\u817f\u5728\u4e00\u4e2a\u5e7f\u64ad\u8282\u4e0a\u53d1\u51fa\u4e00\u822c\u547c\u53eb\u65f6\uff0c\u4e00\u540d\u81ea\u79f0\u4faf\u8d5b\u56e0\u3001\u547c\u53f7\u4e3aJY1\u7684\u7537\u5b50\u505a\u51fa\u4e86\u56de\u5e94\u3002\u4ed6\u58f0\u79f0\u81ea\u5df1\u662f\u7ea6\u65e6\u4eba\uff0c\u8fd9\u4e00\u70b9\u4ece\u524d\u4e24\u5c01\u4fe1\u4e2d\u5c31\u5f88\u6e05\u695a\u4e86\u3002\u4f46\u662f\uff0c\u4ece\u4e00\u4e2a\u4f7f\u7528\u4e24\u4e09\u4f4d\u6570\u5b57\u4f5c\u4e3a\u547c\u53f7\u7684\u56fd\u5bb6\u6765\u8bf4\uff0c\u8c01\u4f1a\u80c6\u5927\u5984\u4e3a\u628a\u81ea\u5df1\u5217\u4e3a\u7b2c\u4e00\u5462\uff1f\u65e0\u7ebf\u7535\u706b\u817f\u88ab\u641e\u7cca\u6d82\u4e86\u3002\u4ed6\u8ba4\u4e3a\u6ca1\u6709\u4eba\u7684\u547c\u53f7\u53ea\u6709\u4e00\u4f4d\u6570\uff0c\u6240\u4ee5\u4ed6\u8ba4\u4e3a\u90a3\u662f\u6d77\u76d7\uff0c\u8bfa\u4e01\u6c49\u90e1\u6bd4\u65af\u987f\u7684\u4ea8\u5229\u00b7\u5df4\u4f26\u89e3\u91ca\u8bf4\uff0c\u4ed6\u7684\u670b\u53cb(\u73b0\u5df2\u53bb\u4e16)\u5df2\u7ecf\u62e8\u6253\u4e86\u7535\u8bdd\u3002\u4ed6\u544a\u8bc9\u4efb\u4f55\u81ea\u79f0JY1\u7684\u4eba\u505c\u6b62\u5e7f\u64ad\uff0c\u7528\u6211\u65e0\u6cd5\u91cd\u590d\u7684\u8bed\u8a00\u3002\u4f46\u662f\uff0c\u8fd9\u4f4d\u88ab\u5df4\u4f26\u7684\u670b\u53cb\u7528\u5982\u6b64\u4eb5\u6e0e\u7684\u8bed\u8a00\u8d76\u8d70\u7684\u4e1a\u4f59\u65e0\u7ebf\u7535\u72c2\u70ed\u5206\u5b50\uff0c\u6b63\u662f\u7ea6\u65e6\u56fd\u738b\u4faf\u8d5b\u56e0\u00b7\u672c\u00b7\u5854\u62c9\u52d2\u965b\u4e0b\uff0c\u4ed6\u662f\u4e16\u754c\u4e0a\u6700\u8457\u540d\u7684\u4e1a\u4f59\u65e0\u7ebf\u7535\u7231\u597d\u8005\u3002\u4faf\u8d5b\u56e0\u56fd\u738b\u662f\u4e00\u4f4d\u771f\u6b63\u7684\u7ec5\u58eb\uff0c\u4ed6\u5411\u4ed6\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4ed6\u7684\u547c\u53f7\u53ea\u662f\u7b2c\u4e00\u3002\u56e0\u4e3a\uff0c\u4f5c\u4e3a\u56fd\u738b\uff0c\u4ed6\u662f\u4ed6\u7684\u56fd\u5bb6\u7684\u5934\u53f7\u4eba\u7269\uff0c\u8fd9\u4f4d\u7ec5\u58eb\u611f\u5230\u975e\u5e38\u5c34\u5c2c\u3002\u5f53\u4ed6\u51e0\u4e4e\u534a\u4e2a\u4e16\u7eaa\u6ca1\u6709\u53d1\u52a8\u6218\u4e89\u3001\u4fc3\u6210\u548c\u5e73\u6216\u6cbb\u7406\u81ea\u5df1\u7684\u56fd\u5bb6\u65f6\uff0c\u5df2\u6545\u7684\u4faf\u8d5b\u56e0\u56fd\u738b\u7ecf\u5e38\u5728\u5e7f\u64ad\u4e2d\u5bfb\u627e\u670b\u53cb\uff0c\u5c31\u50cf\u4ed6\u5728\u5e7f\u64ad\u5f0f\u7684\u65e9\u671f\u7248\u672c\u7684\u4e92\u8054\u7f51\u804a\u5929\u5ba4\u4e2d\u4e00\u6837\u3002\n\u4faf\u8d5b\u56e0\u56fd\u738b\u4e0e\u58f0\u671b\u5f88\u9ad8\u7684\u540c\u4f34\u5728\u4e00\u8d77\u3002\u5728\u4ed6\u6709\u751f\u4e4b\u5e74\uff0c\u4ed6\u672c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7231\u597d\u8005KY2(\u4ed6\u7684\u59bb\u5b50\uff0c\u52aa\u5c14\u738b\u540e)\uff0cEA0JC(\u897f\u73ed\u7259\u56fd\u738b\u80e1\u5b89\u00b7\u5361\u6d1b\u65af)\u548cLU1SM(\u963f\u6839\u5ef7\u603b\u7edf\u5361\u6d1b\u65af\u00b7\u6885\u5185\u59c6)\u52fe\u642d\u5728\u4e00\u8d77\u3002\u666e\u91cc\u897f\u62c9\u00b7\u666e\u96f7\u65af\u5229(Priscilla Presley)\u662f\u5176\u4ed6\u4e0d\u592a\u53ef\u80fd\u7684\u540d\u4eba\u4e4b\u4e00\uff0c\u5c3d\u7ba1\u4e0d\u90a3\u4e48\u5e84\u4e25\uff0c\u4f46\u5979\u559c\u6b22\u7528\u8fd9\u79cd\u65b9\u5f0f\u4e0e\u4e16\u754c\u6c9f\u901a\u3002\u5728\u6b7b\u540e\uff0c\u56fd\u738b\u52a0\u5165\u4e86\u5df2\u6545\u7684VU2RG(\u62c9\u5409\u592b\u00b7\u7518\u5730\u9970)\u548cK7UGA(\u53c2\u8bae\u5458\u5df4\u91cc\u00b7\u6208\u5fb7\u6c83\u7279\u9970)\u7684\u884c\u5217\u3002\n\u4f46\u5728\u8fd9\u4e9b\u4eba\u4e2d\uff0c\u4faf\u8d5b\u56e0\u662f\u81f3\u9ad8\u65e0\u4e0a\u7684\u30021970\u5e74\uff0c\u82f1\u56fd\u65e0\u7ebf\u7535\u534f\u4f1a\u6388\u4e88\u4ed6\u8363\u8a89\u4f1a\u5458\u8d44\u683c\u3002\u5f53\u4ed61993\u5e74\u6765\u5230\u82f1\u56fd\u65f6\uff0c\u4ed6\u62bd\u51fa\u65f6\u95f4\u63a5\u53d7\u4e86\u8be5\u534f\u4f1a\u7684\u5b98\u65b9\u6742\u5fd7\u201c\u65e0\u7ebf\u7535\u901a\u8baf\u201d(Radio Com)\u7684\u91c7\u8bbf\u3002\n\u56fd\u738b\u4e0e\u592a\u7a7a\u4e2d\u7684\u7b2c\u4e00\u4f4d\u4e1a\u4f59\u65e0\u7ebf\u7535\u7231\u597d\u8005W5LFL(\u6b27\u6587\u00b7\u52a0\u91cc\u5965\u7279\u5728\u54e5\u4f26\u6bd4\u4e9a\u53f7\u822a\u5929\u98de\u673a\u4e0a)\u53d6\u5f97\u4e86\u8054\u7cfb\uff1a\u636e\u62a5\u9053\uff0c\u6211\u4eec\u8bbe\u6cd5\u5728\u4ed6\u7684\u7b2c92\u5708\u4e0e\u4ed6\u5b89\u6392\u4e86\u65e5\u7a0b\u3002\u8fd9\u662f\u4e00\u6b21\u6781\u597d\u7684\u63a5\u89e6\uff0c\u8ddd\u79bb\u5730\u5e73\u7ebf\u5927\u7ea6\u6709\u4e09\u56db\u5206\u949f\u7684\u8ddd\u79bb\u3002\u56fd\u738b\u5728\u65c5\u9014\u4e2d\u4e0d\u4ec5\u4ece\u7ea6\u65e6\u800c\u4e14\u4ece\u7f8e\u56fd\u3001\u897f\u73ed\u7259\u3001\u5965\u5730\u5229\u548c\u52a0\u62ff\u5927\u8fdb\u884c\u64cd\u4f5c\u3002\u4ed6\u5728\u82f1\u56fd\u6709\u81ea\u5df1\u7684\u7a7a\u95f4\u7ad9\uff0c\u5c3d\u7ba1\u7531\u4e8e\u5929\u7ebf\u635f\u574f\uff0c\u8fd9\u4e2a\u7a7a\u95f4\u7ad9\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u5de5\u4f5c\u3002\n\u5728\u6628\u5929\u5199\u7ed9\u201c\u6bcf\u65e5\u7535\u8baf\u62a5\u201d\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0c\u4e00\u4f4d\u8bfb\u8005\u56de\u5fc6\u8d771964\u5e74\u4e0e28\u5c81\u7684JY1\u63a5\u89e6\u7684\u60c5\u666f\u3002\u963f\u62c9\u65af\u52a0\u53d1\u751f\u5730\u9707\u540e\uff0c\u963f\u7559\u7533\u7fa4\u5c9b\u4e0a\u7684\u4e00\u5c0f\u7fa4\u7f8e\u56fd\u6d77\u519b\u4eba\u5458\u96be\u4ee5\u4e0e\u5916\u754c\u8054\u7cfb\u3002\u5f53\u4ed6\u4eec\u5728\u65e0\u7ebf\u7535\u6ce2\u4e2d\u641c\u7d22\u53ef\u4ee5\u4e0e\u5bb6\u4eba\u5efa\u7acb\u8054\u7cfb\u7684\u8fd0\u8425\u5546\u65f6\uff0c\u4ed6\u4eec\u5728\u5b89\u66fc\u9047\u5230\u4e86JY1\u3002\n\u6211\u4eec\u5411JY1\u4f20\u9012\u4e86\u51e0\u6761\u4fe1\u606f\uff0c\u9a6c\u8482\u00b7\u8d1d\u514b\u5199\u4fe1\u7ed9JY1\uff0c\u4ed6\u901a\u8fc7\u6b63\u5e38\u7684\u8054\u7cfb\u7ed9\u76f8\u5173\u5bb6\u5ead\u6253\u4e86\u7535\u8bdd\u3002\u4ed6\u80af\u5b9a\u56e0\u6b64\u800c\u635f\u5931\u60e8\u91cd\u3002\u56fd\u738b\u771f\u662f\u4e2a\u4e86\u4e0d\u8d77\u7684\u56fd\u738b\uff01\u4ed6\u81ea\u5df1\u4e5f\u627f\u8ba4\uff0c\u56fd\u738b\u6709\u70b9\u50cf\u4e2a\u6536\u97f3\u673a\u8ff7\u3002\n\u4ed6\u544a\u8bc9Radcom\uff0c\u6211\u5c3d\u91cf\u968f\u65f6\u968f\u5730\u5f00\u5c55\u4e1a\u52a1\u3002\u6211\u66fe\u5efa\u9020\u8fc7\u8bbe\u5907\uff0c\u4f46\u6ca1\u6709\u6211\u60f3\u8981\u7684\u90a3\u4e48\u591a\u3002\u8fd9\u4f4d\u54c8\u7f57\u5927\u5b66\u7684\u524d\u5b66\u751f\uff0c\u5728\u5f97\u5230\u4e00\u53f0\u54c8\u5229\u514b\u62c9\u592b\u7279\u6536\u97f3\u673a\u540e\uff0c\u6210\u4e3a\u4e86\u5b66\u6821\u65e0\u7ebf\u7535\u534f\u4f1a\u7684\u6210\u5458\uff0c\u5373\u4f7f\u5728\u4ed6\u665a\u5e74\u4e5f\u662f\u5e7f\u64ad\u8282\u76ee\u7684\u5e38\u5ba2\u3002\n\u4ed6\u8bf4\uff0c\u5728\u5371\u673a\u548c\u56f0\u96be\u65f6\u671f\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0e\u4e16\u754c\u5404\u5730\u7684\u670b\u53cb\u4fdd\u6301\u8054\u7cfb\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e9b\u670b\u53cb\u80fd\u591f\u5e2e\u52a9\u4f20\u9012\u4fe1\u606f\uff0c\u5e76\u83b7\u5f97\u4eba\u9053\u4e3b\u4e49\u63f4\u52a9\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u7231\u5c14\u5170\u4e00\u540d\u9000\u4f11\u6559\u5e08\u8868\u793a\uff0c\u4ed6\u4e0e\u4faf\u8d5b\u56e0\u56fd\u738b\u4fdd\u6301\u5b9a\u671f\u8054\u7cfb\u3002\u4f2f\u5c3c\u00b7\u5965\u6c99\u5229\u6587(Bernie O&#39\uff1bSullivan)\u6765\u81ea\u7231\u5c14\u5170\u897f\u6d77\u5cb8\u897f\u79d1\u514b(West Cork)\u7684\u4e00\u4e2a\u504f\u8fdc\u5730\u533a\u6bd4\u62c9(Beara)\uff0c\u4ed6\u4f1a\u5750\u5728\u7ea2\u6d77\u4e0a\u7684\u6e38\u8247\u4e0a\u4e0e\u56fd\u738b\u4ea4\u8c08\u3002\n\u6211\u4eec\u662f\u597d\u670b\u53cb\u3002\u4ed6\u66fe\u7ecf\u627e\u8fc7\u6211\uff0c\u6211\u4e5f\u627e\u8fc7\u4ed6\uff0c\u6c99\u5229\u6587\u8bf4\u3002\u6709\u65f6\u6211\u4eec\u4f1a\u8054\u7cfb\u4e09\u56db\u6b21\uff0c\u6709\u65f6\u53ef\u80fd\u53ea\u8054\u7cfb\u4e00\u6b21\u3002\u8fd9\u79cd\u8054\u7cfb\u6301\u7eed\u4e86\u5927\u7ea6\u4e94\u5e74\uff0c\u7136\u540e\u6709\u70b9\u6ce1\u6c64\u4e86\u3002\u6211\u6700\u540e\u4e00\u6b21\u548c\u4ed6\u8bf4\u8bdd\u662f\u572810\u5e74\u524d\u3002\u6211\u60f3\u4ed6\u6700\u7ec8\u53d8\u5f97\u592a\u5fd9\u4e86\uff0c\u6ca1\u6709\u65f6\u95f4\u542c\u6536\u97f3\u673a\u3002\u5316\u7597\u540e\u89c1\u5230\u4ed6\u6211\u5f88\u96be\u8fc7--\u4ed6\u662f\u4e2a\u4f24\u5fc3\u6b32\u7edd\u7684\u4eba\u3002\u4f2f\u5c3c\u4e00\u751f\u4e2d\u7684\u4e24\u5927\u7231\u597d\u662f\u4e1a\u4f59\u65e0\u7ebf\u7535\u548c\u98de\u884c\u30021970\u5e744\u6708\uff0c\u4f2f\u5c3c\u5728\u5207\u6362\u65e0\u7ebf\u7535\u9891\u6bb5\u65f6\u5076\u7136\u9047\u5230\u4e86\u56fd\u738b\u3002\n\u6c99\u5229\u6587\u8bf4\uff0c\u6709\u4e00\u5929\uff0c\u6211\u542c\u5230\u4ed6\u5728\u5176\u4e2d\u4e00\u652f\u4e50\u961f\u4e0a\u5bf9\u7f8e\u56fd\u4eba\u8bb2\u8bdd\u3002\u4ed6\u7684\u547c\u53f7\u8ba9\u6211\u7740\u8ff7\uff0c\u56e0\u4e3a\u5b83\u5f88\u77ed\uff0c\u53ea\u6709JY1\u3002\u8fd9\u5c01\u4fe1\u4ee3\u8868\u4e54\u4e39\uff0c\u6570\u5b571\u4ee3\u8868\u4ed6\u81ea\u5df1\u3002\u542c\u5b8c\u5e7f\u64ad\u540e\uff0c\u6211\u548c\u5176\u4ed6\u4e00\u5927\u6279\u6b27\u6d32\u7535\u89c6\u53f0\u7ed9\u4ed6\u6253\u4e86\u7535\u8bdd\u3002\n\u4ed6\u8981\u6c42\u548c\u7231\u5c14\u5170\u7535\u53f0\u8bf4\u51e0\u53e5\u8bdd\u3002\u4ed6\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u7684\u547c\u53f7\u4e00\u5f00\u59cb\u5c31\u662fEI\u3002\u4ed6\u8fc7\u53bb\u53ea\u662f\u81ea\u79f0\u4faf\u8d5b\u56e0\u3002\u6ca1\u6709\u5e26\u6709\u7535\u53f0\u706b\u817f\u7684\u6807\u9898\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u6536\u97f3\u673a\u4e4b\u7f8e--\u6ca1\u6709\u9636\u7ea7\u4e4b\u5206\u3002\u53ea\u6709\u4faf\u8d5b\u56e0\u548c\u4f2f\u5c3c\u3002", "note_en": "JY1 was an enigma. When a radio ham from Nottingham put out a general call during a radio festival in the early 1970s, a man calling himself Hussein, with the call sign JY1, responded. That he claimed to be Jordanian was clear enough from the first two letters. But who, from a nation that used two or three digits as its call signs, would be audacious enough to list themselves as number one? The radio ham was confused. &#39;He thought that nobody has a call sign of just one digit, so he thought it was a pirate,&#39; explains Henry Balen, of Beeston in Nottinghamshire, whose friend (who has since died) had put out the call. &#39;He told whoever it was claiming to be JY1 to get off the air in language that I couldn&#39;t repeat.&#39; But the amateur radio fanatic, whom Balen&#39;s friend had sent off with such profanity, was none other than his majesty King Hussein bin Talal of Jordan, the most famous amateur radio enthusiast in the world. &#39;King Hussein was a proper gentleman and explained to him why his call sign was just number one. Because, as the King, he was number one in his country, and the gentleman was very embarrassed.&#39; When he wasn&#39;t making war, brokering peace or running his own country for almost half a century, the late King Hussein was often scanning the airwaves for friends, as if he were in broad- casting&#39;s earlier version of an Internet chat room.\n King Hussein was in prestigious company. During his lifetime he could have hooked up with fellow enthusiasts KY2 (his wife, Queen Noor), EA0JC (King Juan Carlos of Spain) and LU1SM (Argentinian president Carlos Menem). And Priscilla Presley is among the other unlikely, though less stately, celebrities who enjoy communic-ating with the world this way. While in death, the King joins the late VU2RG (Rajiv Ghandi) and K7UGA (Senator Barry Goldwater).\n But among them Hussein reigned supreme. In 1970, the radio society of Great Britain made him an honorary member. When he came to Britain in 1993 he found time to give an interview to the society&#39;s official magazine, Radiocom.\n The King made contact with the first radio amateur in space - W5LFL (Owen Garriott aboard the space shuttle Columbia): &#39;We managed to arrange a schedule with him on his 92nd orbit,&#39; Hussein was reported as saying. &#39;It was an excellent contact, something like three or four minutes horizon to horizon.&#39; The King operated not only from Jordan but from the United States, Spain, Austria and Canada when he was on the road. He had his own station in Britain, although it was put out of action for some time when the antennae was damaged.\n In a letter to the Daily Telegraph yesterday, one reader recalled making contact with a 28-year-old JY1 in 1964. A small group of US Navy personnel on the Aleutian islands were having trouble getting through to the outside world following an earthquake in Alaska. As they searched the radio waves for operators who could establish a link with their families, they came across JY1 in Amman.\n &#39;We passed on several messages to JY1,&#39; wrote Marty Baker, &#39;who duly phoned the families concerned through the normal links. He must have been considerably out of pocket as a result. What a King!&#39; By his own admission, the King was something of a radio addict.\n &#39;I try to operate whenever and wherever I can,&#39; he told Radcom. &#39;I have constructed equipment, but not as much as I would like to.&#39; The former Harrow student, who became a member of the the school&#39;s radio society after he was given a Hallicrafters radio, was a regular on the airwaves even in his later years.\n &#39;In times of crisis and difficulty, it was a way to keep in touch with friends throughout the world who were able to help relay messages and to secure humanitarian help as well,&#39; he said.\n Earlier this week, one retired teacher in Ireland said he was in regular contact with King Hussein. From Beara, a remote area in West Cork on the west coast of Ireland, Bernie O&#39;Sullivan would talk to the King as he sat on his yacht in the Red Sea.\n &#39;We were good friends. He used to look for me and I looked for him,&#39; says Sullivan. &#39;Sometimes we would make contact three or four times, other times it might be once. The contact lasted for about five years, then it sort of fizzled out. The last time I spoke to him was 10 years ago. I think he eventually became too busy for the radio. I was very sad to see him after the chemotherapy - he was a broken man. The two great loves in his life were amateur radio and flying.&#39; Bernie came across the King by accident when he was switching through radio bands in April 1970.\n &#39;I heard him speaking to Americans one day on the one of the bands,&#39; Sullivan said. &#39;His call sign fascinated me because it was very short, just JY1. The letter stood for Jordan and the number one stood for himself. After hearing the broadcast, myself and a load of other European stations called him up.\n &#39;He asked to have a word with the Irish station. He knew that because my call sign started as EI. He used to just give his name as Hussein. There are no titles with radio hams. That&#39;s the beauty of our radio - there is no class distinction. It was just Hussein and Bernie.&#39;", "posttime": "2020-05-13 17:02:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u965b\u4e0b,call,\u56fd\u738b", "title": "\u4e0e\u965b\u4e0b\u7684\u4e00\u5bf9\u4e00\u901a\u8bdd(1999)", "title_en": "A one-to-one call with his majesty (1999)", "transed": 1, "url": "https://www.theguardian.com/theguardian/1999/feb/11/features11.g22", "via": "", "real_tags": ["\u965b\u4e0b", "call", "\u56fd\u738b"]}, {"category": "", "categoryclass": "", "imagename": "5b6cd0a3acd4d190e126eb0cde665ef8.png", "infoid": 1001948, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c3c\u5c14\u00b7\u57c3\u4e9a\u5c14\u8ba4\u4e3a\u6211\u4eec\u82b1\u4e86\u592a\u591a\u65f6\u95f4\u8bd5\u56fe\u8ba9\u5de5\u4f5c\u53d8\u5f97\u8f7b\u677e\u3002\n\u4ed6\u662f\u4e00\u4f4d\u884c\u4e3a\u8bbe\u8ba1\u4e13\u5bb6\uff0c\u66fe\u5728\u65af\u5766\u798f\u5927\u5b66\u4efb\u6559\uff0c\u5e76\u5199\u8fc7\u4e24\u672c\u7545\u9500\u4e66\u3002\n\u4f46\u4ed6\u8ba4\u4e3a\uff0c\u6211\u4eec\u4e3a\u4e86\u5b8c\u6210\u5de5\u4f5c\u800c\u6c42\u52a9\u7684\u5927\u591a\u6570\u751f\u4ea7\u529b\u7075\u4e39\u5999\u836f\uff0c\u6bd4\u5982\u517b\u6210\u4e60\u60ef\u6216\u52aa\u529b\u8fdb\u5165\u6d41\u7a0b\uff0c\u5e76\u4e0d\u603b\u662f\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u6709\u7528\uff1a\n\u201c\u5f53\u5927\u591a\u6570\u4eba\u8c08\u8bba\u4e60\u60ef\u65f6\uff0c\u4ed6\u4eec\u8bf4\u7684\u662f\uff0c\u2018\u6211\u60f3\u8981\u4e00\u4e9b\u5f88\u96be\u53d8\u5f97\u6beb\u4e0d\u8d39\u529b\u7684\u4e1c\u897f\u3002\u6211\u60f3\u8981\u597d\u5904\uff0c\u4f46\u6211\u4e0d\u60f3\u8ba9\u5b83\u53d8\u5f97\u56f0\u96be\u3002\u201c\u5c3c\u5c14\u5728\u51e0\u5468\u524d\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\u5bf9\u6211\u8bf4\u3002\u201c\u597d\u5427\uff0c\u6211\u6709\u4e2a\u6d88\u606f\u544a\u8bc9\u4f60\uff1a\u6709\u4e9b\u4e8b\u60c5\u5c31\u662f\u5f88\u96be\u3002\u6ca1\u6709\u529e\u6cd5\u7ed5\u8fc7\u5b83\u3002\u201c\u3002\n\u95ee\u9898\u662f\uff0c\u5f53\u6211\u4eec\u671f\u671b\u5de5\u4f5c\u662f\u6beb\u4e0d\u8d39\u529b\u7684\uff0c\u7ed3\u679c\u5374\u662f\u56f0\u96be\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7ecf\u5e38\u8d23\u602a\u81ea\u5df1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7528\u6765\u8ba9\u5de5\u4f5c\u53d8\u5f97\u66f4\u5bb9\u6613\u7684\u5de5\u5177\uff0c\u53cd\u800c\u4f1a\u8ba9\u6211\u4eec\u66f4\u5bb9\u6613\u653e\u5f03\u3002\nNir\u63a8\u8350\u4e86\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u4ed6\u8ba4\u4e3a\u5b8c\u6210\u5de5\u4f5c\u7684\u5934\u53f7\u969c\u788d\u662f\u5206\u5fc3\u3002\u5b83\u65e0\u5904\u4e0d\u5728\uff1a\u4ece\u6211\u4eec\u7684\u793e\u4ea4\u5a92\u4f53\u9988\u9001\uff0c\u5230\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\uff0c\u518d\u5230\u6211\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\u6216\u5f85\u529e\u4e8b\u9879\u5217\u8868\u7b49\u5047\u7684\u5de5\u4f5c\u5206\u5fc3\u4e8b\u3002\n\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u5206\u5fc3\u662f\u7531\u79d1\u6280\u5f15\u8d77\u7684\uff0c\u6216\u8005\u5206\u5fc3\u610f\u5473\u7740\u4ed6\u4eec\u6709\u95ee\u9898\u3002\n\u4f46\u5c3c\u5c14\u8ba4\u4e3a\uff0c\u5f53\u6211\u4eec\u5750\u4e0b\u6765\u5de5\u4f5c\u65f6\uff0c\u5206\u5fc3\u7684\u65f6\u523b\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u4eba\u7c7b\u5bf9\u4e0d\u9002\u7684\u53cd\u5e94\u3002\u201c\u5b83\u4eec\u4e0d\u662f\u6027\u683c\u7f3a\u9677\uff0c\u800c\u662f\u60c5\u7eea\u8c03\u8282\u95ee\u9898\uff0c\u201d\u4ed6\u8bf4\u3002\n\u5c3c\u5c14\u8ba4\u4e3a\uff0c\u6211\u4eec\u5e94\u8be5\u5f00\u53d1\u5de5\u5177\u6765\u5e94\u5bf9\u5185\u5fc3\u7684\u4e0d\u9002\uff0c\u800c\u4e0d\u662f\u8ba9\u81ea\u5df1\u9677\u5165\u5206\u5fc3\u4e4b\u4e2d\u3002\u4e00\u65e6\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\uff0c\u6211\u4eec\u5c31\u4f1a\u51c6\u5907\u597d\u505a\u597d\u6211\u4eec\u6700\u597d\u7684\u5de5\u4f5c\u3002\n\u5728\u8fd9\u6b21\u91c7\u8bbf\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5c3c\u5c14\u5bf9\u5206\u5fc3\u7684\u975e\u6b63\u7edf\u5b9a\u4e49\uff0c\u7ecf\u5386\u4e86\u4ed6\u53d8\u5f97\u5bb9\u6613\u7406\u89e3\u7684\u56db\u4e2a\u6b65\u9aa4\uff0c\u5e76\u63a2\u7d22\u4e86\u4ed6\u5982\u4f55\u5728\u81ea\u5df1\u7684\u751f\u6d3b\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\u55e8\uff0c\u6211\u662f\u5c3c\u5c14\u00b7\u57c3\u4e9a\u5c14\u3002\u6211\u662f\u4e00\u540d\u884c\u4e3a\u8bbe\u8ba1\u5e08\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4f7f\u7528\u6d88\u8d39\u8005\u5fc3\u7406\u5b66\u548c\u884c\u4e3a\u8bbe\u8ba1\u6765\u5e2e\u52a9\u516c\u53f8\u6253\u9020\u5728\u6211\u4eec\u751f\u6d3b\u4e2d\u517b\u6210\u826f\u597d\u4e60\u60ef\u7684\u4ea7\u54c1\u3002\n\u6211\u5df2\u7ecf\u5199\u4e86\u4e24\u672c\u4e66\uff0c\u4e00\u672c\u662f\u4e0a\u763e\u7684\uff0c\u53e6\u4e00\u672c\u662f\u72ec\u7acb\u7684\u3002\u201c\u4e0a\u94a9\u201d\u662f\u5173\u4e8e\u5982\u4f55\u6253\u9020\u517b\u6210\u4e60\u60ef\u7684\u4ea7\u54c1\u3002\u201c\u72ec\u7acb\u751f\u6d3b\u201d\u662f\u5173\u4e8e\u5982\u4f55\u6539\u6389\u574f\u4e60\u60ef\u7684\u3002\n\u6211\u5728\u65af\u5766\u798f\u5927\u5b66\u5546\u5b66\u9662(Graduate School Of Business)\u4efb\u6559\u591a\u5e74\uff0c\u540e\u6765\u53c8\u5728\u54c8\u7d22\u00b7\u666e\u62c9\u7279\u7eb3\u8bbe\u8ba1\u5b66\u9662(Hasso Plattner Institute Of Design)\u4efb\u6559\u3002\u4eca\u5929\uff0c\u6211\u4e3b\u8981\u8bb2\u6388\u548c\u5199\u4f5c\u5982\u4f55\u517b\u6210\u597d\u4e60\u60ef\u548c\u6539\u6389\u574f\u4e60\u60ef\u3002\n\u5927\u591a\u6570\u4eba\u8bf4\uff0c\u5206\u5fc3\u7684\u53cd\u4e49\u8bcd\u662f\u4e13\u6ce8\u3002\u4f46\u6211\u4e0d\u8ba4\u4e3a\u90a3\u662f\u771f\u7684\u3002\u6211\u8ba4\u4e3a\u5206\u5fc3\u7684\u5bf9\u7acb\u9762\u4e0d\u662f\u4e13\u6ce8\uff0c\u800c\u662f\u7275\u5f15\u529b\u3002\n\u201c\u7275\u5f15\u201d\u548c\u201c\u5206\u5fc3\u201d\u5b9e\u9645\u4e0a\u90fd\u6765\u81ea\u540c\u4e00\u4e2a\u62c9\u4e01\u8bcd\u6839\uff0ctrahere\uff0c\u610f\u601d\u662f\u62c9\u3002\n\u7275\u5f15\u529b\u662f\u4efb\u4f55\u80fd\u628a\u4f60\u62c9\u5411\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u7684\u52a8\u4f5c\u3002\u76f8\u53cd\uff0c\u5206\u5fc3\u662f\u6307\u4efb\u4f55\u4f1a\u8ba9\u4f60\u504f\u79bb\u8ba1\u5212\u7684\u884c\u52a8\u3002\n\u8fd9\u662f\u975e\u5e38\u975e\u5e38\u91cd\u8981\u7684\u4e00\u70b9\u3002\u56e0\u4e3a\u5728\u751f\u4ea7\u529b\u9886\u57df\u7684\u5f88\u591a\u4eba\u5e76\u4e0d\u533a\u5206\u7275\u5f15\u548c\u5206\u5fc3\u3002\n\u8fd9\u4e00\u70b9\u4f60\u53ef\u4ee5\u5728\u505a\u5927\u91cf\u5047\u5de5\u4f5c\u7684\u4eba\u8eab\u4e0a\u770b\u5f97\u6700\u6e05\u695a\u3002\u6211\u4ee5\u524d\u4e5f\u662f\u8fd9\u6837\u505a\u7684\uff1a\u6211\u4f1a\u5750\u5728\u529e\u516c\u684c\u524d\u8bf4\uff0c\u201c\u597d\u4e86\uff0c\u73b0\u5728\u6211\u8981\u628a\u5de5\u4f5c\u505a\u5b8c\u4e86\uff0c\u6211\u4e0d\u4f1a\u518d\u62d6\u62c9\u4e86\u3002\u4f46\u9996\u5148\u8ba9\u6211\u5feb\u901f\u67e5\u770b\u4e00\u4e0b\u7535\u5b50\u90ae\u4ef6\u3002\u8ba9\u6211\u6765\u505a\u6211\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u4e0a\u7684\u90a3\u4e00\u4ef6\u5bb6\u52a1\u4e8b\u5427\u3002\u201c\u3002\n\u4eba\u4eec\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u5982\u679c\u4f60\u57cb\u5934\u4e8e\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\uff0c\u800c\u4e0d\u662f\u505a\u4f60\u6700\u91cd\u8981\u7684\u5de5\u4f5c\uff0c\u4f60\u5c31\u4f1a\u5206\u5fc3\uff0c\u5c31\u50cf\u4f60\u5728Facebook\u6216Instagram\u6216\u5176\u4ed6\u4ec0\u4e48\u7f51\u7ad9\u4e0a\u4e00\u6837\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u4efb\u4f55\u4e0d\u662f\u4f60\u8ba1\u5212\u505a\u7684\u4e8b\u60c5\u90fd\u4f1a\u8ba9\u4f60\u5206\u5fc3\u3002\n\u6211\u8ba4\u4e3a\u50cf\u7535\u5b50\u90ae\u4ef6\u6216\u5c0f\u7684\u5f85\u529e\u4e8b\u9879\u8fd9\u6837\u7684\u4e8b\u60c5\u5b9e\u9645\u4e0a\u662f\u6700\u6709\u5bb3\u7684\u5e72\u6270\uff0c\u56e0\u4e3a\u5b83\u4eec\u8ba9\u4eba\u611f\u89c9\u6548\u7387\u5f88\u9ad8\u3002\u5982\u679c\u6211\u5728\u6211\u7684\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u4e0a\u52fe\u9009\u4e00\u4e9b\u8ba9\u6211\u89c9\u5f97\u6709\u6210\u6548\u7684\u4e8b\u60c5\u3002\n\u6211\u4eec\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5206\u5fc3\u6b3a\u9a97\u4e86\u6211\u4eec\uff0c\u8ba9\u6211\u4eec\u4f18\u5148\u8003\u8651\u611f\u89c9\u7d27\u6025\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u771f\u6b63\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u5bf9\u4f60\u7684\u751f\u4ea7\u529b\u3001\u4f60\u7684\u798f\u7949\u548c\u4f60\u7684\u5e78\u798f\u90fd\u662f\u6709\u5bb3\u7684\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u67e5\u770bTwitter\u6216Facebook\u3002\u5982\u679c\u4f60\u60f3\u6d4f\u89c8Twitter\u6216Facebook\uff0c\u90a3\u5c31\u53bb\u505a\u5427\uff01\u53ea\u8981\u4f60\u7528\u5fc3\u53bb\u505a\uff0c\u4f60\u8ba1\u5212\u6d6a\u8d39\u7684\u65f6\u95f4\u5c31\u4e0d\u662f\u6d6a\u8d39\u7684\u65f6\u95f4\u3002\n\u6240\u4ee5\uff1a\u53ea\u8981\u4e0d\u662f\u4f60\u8ba1\u5212\u505a\u7684\u4e8b\u60c5\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u4f1a\u8ba9\u4f60\u5206\u5fc3\u3002\u540c\u6837\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u662f\u7275\u5f15\u529b\u3002\n\u5728\u6211\u7684\u4e66\u4e2d\uff0c\u6211\u63cf\u8ff0\u4e86\u6211\u6d88\u9664\u5206\u5fc3\u7684\u7b56\u7565\u3002\u6218\u7565\u8fd9\u4e2a\u8bcd\u975e\u5e38\u91cd\u8981\u3002\u6218\u7565\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u6218\u672f\u662f\u4e00\u6bdb\u94b1\u4e00\u6253\u7684\u3002\n\u4e0d\u4f1a\u6709\u4e00\u79cd\u7b56\u7565\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u6548\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u7b56\u7565\u6765\u5c1d\u8bd5\u5355\u72ec\u7684\u7b56\u7565\uff0c\u76f4\u5230\u627e\u5230\u9002\u5408\u60a8\u7684\u516c\u5f0f\u3002\n\u5c31\u8fd9\u6837\u3002\u6211\u4eec\u5c06\u6df1\u5165\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u5e76\u8ba8\u8bba\u5b83\u4eec\u662f\u4ec0\u4e48\u3002\n\u5916\u90e8\u8bf1\u56e0\u662f\u6211\u4eec\u5df2\u7ecf\u60f3\u4e86\u5f88\u591a\u7684\u6240\u6709\u4e8b\u60c5\u3002\u662fping\u3001ping\u548c\u6211\u4eec\u5916\u90e8\u73af\u5883\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u5c06\u6211\u4eec\u7684\u6ce8\u610f\u529b\u4ece\u6211\u4eec\u8ba1\u5212\u82b1\u8d39\u65f6\u95f4\u7684\u4e8b\u60c5\u4e0a\u8f6c\u79fb\u5f00\u4e86\u3002\n\u8fd9\u4e9b\u90fd\u5f88\u91cd\u8981\uff0c\u4f46\u5982\u679c\u4f60\u771f\u7684\u89c2\u5bdf\u4eba\u4eec\u662f\u5982\u4f55\u5ea6\u8fc7\u65f6\u95f4\u7684\uff0c\u66f4\u6709\u53ef\u80fd\u5077\u8d70\u6211\u4eec\u6ce8\u610f\u529b\u7684\u662f\u5185\u5728\u7684\u89e6\u53d1\u56e0\u7d20\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5206\u5fc3\u548c\u62d6\u62c9\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u5bf9\u4e0d\u8212\u670d\u611f\u89c9\u7684\u9ed8\u8ba4\u53cd\u5e94\u3002\u5b83\u4eec\u4e0d\u662f\u6027\u683c\u7f3a\u9677\uff0c\u800c\u662f\u60c5\u7eea\u8c03\u8282\u95ee\u9898\u3002\n\u5f53\u6211\u4eec\u62d6\u5ef6\u6216\u5206\u6563\u6ce8\u610f\u529b\u65f6\uff0c\u90a3\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u6446\u8131\u4e0d\u8212\u670d\u7684\u611f\u89c9\uff1a\u65e0\u804a\u3001\u5b64\u72ec\u3001\u75b2\u52b3\u3001\u4e0d\u786e\u5b9a\u3002\u6709\u65f6\u6211\u4eec\u901a\u8fc7\u65b0\u95fb\u3001\u9157\u9152\u3001\u8db3\u7403\u6216\u8138\u8c31\u7f51\u6765\u9003\u907f\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u9009\u62e9\u7684\u836f\u7269\u3002\u4f46\u6211\u4eec\u90fd\u8bd5\u56fe\u5bf9\u8fd9\u4e9b\u5206\u5fc3\u7684\u4e8b\u60c5\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff1a\u8bd5\u56fe\u7f13\u89e3\u60c5\u7eea\u4e0a\u7684\u4e0d\u9002\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u60f3\u5904\u7406\u5206\u5fc3\u95ee\u9898\uff0c\u4f60\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u5904\u7406\u5bfc\u81f4\u5206\u5fc3\u7684\u8d1f\u9762\u60c5\u7eea\u56e0\u7d20\u3002\n\u4e0d\u7ba1\u751f\u4ea7\u529b\u5927\u5e08\u8bf4\u4ec0\u4e48\uff0c\u5176\u4ed6\u7684\u72d7\u5c4e\u90fd\u4e0d\u7ba1\u7528\u3002\u9996\u5148\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\uff0c\u4f60\u5fc5\u987b\u4ece\u5185\u90e8\u89e6\u53d1\u56e0\u7d20\u5f00\u59cb\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u5de5\u5177\u6765\u5904\u7406\u60c5\u7eea\u4e0a\u7684\u4e0d\u9002\uff0c\u90a3\u4e48\u6240\u6709\u7684\u751f\u6d3b\u5c0f\u7a8d\u95e8\u90fd\u4e0d\u4f1a\u594f\u6548\u3002\n\u5728\u6211\u7684\u751f\u6d3b\u4e2d\uff0c\u6211\u5fc5\u987b\u5904\u7406\u8bb8\u591a\u5185\u90e8\u89e6\u53d1\u56e0\u7d20\u7684\u5730\u65b9\u4e4b\u4e00\u662f\u5728\u6211\u7684\u5199\u4f5c\u4f8b\u884c\u516c\u4e8b\u4e2d\u3002\n\u6211\u6bcf\u5929\u65e9\u4e0a\u5199\u4f5c2\u5c0f\u65f6\uff0c\u4e00\u54685\u5929\u3002\u6ca1\u6709\u4f8b\u5916\u3002\n\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6211\u53ea\u6709\u4e00\u4e2a\u76ee\u6807\uff1a\u65e0\u8bba\u6211\u8bf4\u4ec0\u4e48\uff0c\u53ea\u8981\u6211\u8bf4\u6211\u8981\u505a\uff0c\u6211\u5c31\u4f1a\u4e00\u76f4\u505a\u4e0b\u53bb\u3002\u5c31\u8fd9\u6837\u3002\n\u60a8\u8fd8\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u6ca1\u6709\u8bbe\u7f6e\u5b57\u6570\u3002\u5b57\u6570\u7edf\u8ba1\u592a\u7cdf\u7cd5\u4e86\u3002\u50cf\u5b57\u6570\u8fd9\u6837\u7684\u4e1c\u897f\u771f\u7684\u5f88\u96be\u7528\uff0c\u56e0\u4e3a\u4e00\u9879\u53c8\u4e00\u9879\u7684\u7814\u7a76\u8868\u660e\uff0c\u4eba\u4eec\u5f88\u96be\u9884\u6d4b\u505a\u4e00\u4ef6\u4e8b\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u6211\u4eec\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u5f88\u7cdf\u7cd5\u3002\n\u6240\u4ee5\u603b\u6709\u4e00\u5929\u6211\u4f1a\u5199\u51fa300\u5b57\u3002\u6709\u65f6\u5019\u662f1000\u7f8e\u5143\u3002\u6709\u65f6\u5019\u662f3\u4e2a\u3002\u4f46\u6ca1\u5173\u7cfb\u3002\u6211\u53ea\u662f\u5750\u5728\u529e\u516c\u684c\u524d\uff0c\u8bd5\u7740\u5728\u6211\u7684\u65e5\u7a0b\u8868\u4e0a\u5199\u4e0a2\u4e2a\u5c0f\u65f6\u3002\u8fd9\u662f\u6700\u91cd\u8981\u7684\u3002\n\u73b0\u5728\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u56e0\u4e3a\u6211\u6bcf\u5929\u90fd\u5728\u5199\u4f5c\uff0c\u6240\u4ee5\u8fd9\u5f88\u5bb9\u6613\u3002\n\u5f53\u6211\u5750\u4e0b\u6765\u5199\u7684\u65f6\u5019\uff0c\u6709\u51e0\u4ef6\u4e8b\u7ecf\u5e38\u4f1a\u51fa\u73b0\u3002\u65e0\u804a\u3002\u75b2\u52b3\u3002\u7126\u8651\u3002\u4e0d\u786e\u5b9a\u6027\u3002\n\u5199\u4f5c\u4e2d\u6709\u5f88\u591a\u4e0d\u786e\u5b9a\u6027\u3002\u6211\u4ece\u6765\u4e0d\u77e5\u9053\u67d0\u4e00\u7279\u5b9a\u7684\u7814\u7a76\u65b9\u5411\u662f\u5426\u4f1a\u6d6a\u8d39\u65f6\u95f4\u3002\u6211\u5199\u7684\u5927\u90e8\u5206\u4e1c\u897f\u90fd\u6ca1\u6709\u53d1\u8868\u3002\n\u6211\u5236\u4f5c\u7684\u5927\u90e8\u5206\u4f5c\u54c1\u90fd\u6ca1\u6709\u542f\u53d1\u6027\u3002\u8fd9\u5e76\u4e0d\u4ee4\u4eba\u5174\u594b\u3002\u5b83\u4f1a\u88ab\u6254\u8fdb\u5783\u573e\u6876\u3002\n\u6240\u4ee5\u7ecf\u5e38\u4f1a\u6709\u8fd9\u6837\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u201c\u8fd9\u4f1a\u6709\u4ec0\u4e48\u597d\u5904\u5417\uff1f\u201d\u6211\u8bf4\u7684\u5bf9\u5417\uff1f\u4eba\u4eec\u4f1a\u89c9\u5f97\u5b83\u6709\u7528\u5417\uff1f\u201c\u3002\n\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5411\u5b83\u503e\u659c\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u6446\u8131\u5b83\u3002\u5982\u679c\u4f60\u5411\u4e0d\u786e\u5b9a\u6027\u503e\u659c\uff0c\u4f60\u5c31\u80fd\u5f00\u59cb\u5728\u672a\u77e5\u4e2d\u53d1\u73b0\u7f8e\u3002\n\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5bfb\u627e\u5de5\u4f5c\u4e2d\u7684\u53ef\u53d8\u6027-\u6bd4\u5982\u4f60\u5bf9\u5b83\u7684\u611f\u89c9\uff0c\u90a3\u79cd\u4e0d\u786e\u5b9a\u7684\u611f\u89c9\uff0c\u662f\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5316\u7684\u3002\u4f60\u4e5f\u53ef\u4ee5\u66f4\u4e13\u6ce8\u4e8e\u4f5c\u54c1\u7684\u7ec6\u8282--\u4f7f\u4f5c\u54c1\u4fdd\u6301\u539f\u6837\u7684\u5fae\u5c0f\u7ec6\u8282\u3002\u8fd9\u5c31\u662f\u4eba\u4eec\u5b66\u4f1a\u70ed\u7231\u5404\u79cd\u4e1c\u897f\u7684\u65b9\u5f0f\u3002\n\u56e0\u6b64\uff0c\u4e00\u9879\u7814\u7a76\u4e0d\u518d\u662f\u9ed1\u6697\u53ef\u6015\u7684\u4e1c\u897f\uff0c\u5b83\u5f00\u59cb\u50cf\u4e00\u6735\u82b1\u4e00\u6837\u7efd\u653e\u3002\u4f60\u5f00\u59cb\u770b\u5230\u8fd9\u9879\u4efb\u52a1\u7684\u7f8e\u5999\u4e4b\u5904\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u4e0d\u786e\u5b9a\u6027\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u9a71\u4f7f\u6211\u73b0\u5728\u56de\u5230\u7814\u7a76\u4e2d\u7684\u539f\u56e0\uff0c\u800c\u4e0d\u662f\u8ba9\u6211\u5206\u5fc3-\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u8fd9\u5f88\u4ee4\u4eba\u5174\u594b\u3002\n\u4f46\u4e5f\u6709\u5176\u4ed6\u65b9\u6cd5\u6765\u5904\u7406\u51fa\u73b0\u7684\u89e6\u53d1\u56e0\u7d20\u3002\u4f8b\u5982\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u53e6\u4e00\u4e2a\u89e6\u53d1\u56e0\u7d20\u662f\u60f3\u8981\u67e5\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4f1a\u5199\u4f5c\uff0c\u6211\u4f1a\u8ba9\u8fd9\u79cd\u75af\u72c2\u7684\u6e34\u671b\u53bb\u8c37\u6b4c\u4e00\u4e9b\u4e1c\u897f-\u6211\u77e5\u9053\u8fd9\u4f1a\u628a\u6211\u9001\u8fdb\u4e00\u4e2a\u8ba9\u6211\u5206\u5fc3\u7684\u5154\u5b50\u6d1e\u3002\n\u6211\u4e0d\u4f1a\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\uff0c\u6211\u901a\u5e38\u4f1a\u505a\u7684\u662f\u5728\u4e00\u5f20\u7eb8\u4e0a\u5199\u4e0b\u6211\u8ba4\u4e3a\u6211\u9700\u8981\u67e5\u627e\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u7136\u540e\u6211\u4f1a\u7ed9\u81ea\u5df110\u5206\u949f\u7684\u65f6\u95f4\u3002\u5982\u679c\u5341\u5206\u949f\u540e\u8fd9\u4ef6\u4e8b\u771f\u7684\u90a3\u4e48\u91cd\u8981\uff0c\u90a3\u4e48\u4e5f\u8bb8\u6211\u4f1a\u53bb\u67e5\u4e00\u67e5\u3002\u901a\u5e38\u8fd9\u5f88\u7ba1\u7528\uff0c\u6211\u5c31\u53ef\u4ee5\u56de\u53bb\u5de5\u4f5c\u4e86\u3002\n\u5f5310\u5206\u949f\u8fc7\u53bb\u7684\u65f6\u5019\uff0c\u6211\u89c9\u5f97\u8c37\u6b4c\u9700\u8981\u4ec0\u4e48\u4f3c\u4e4e\u4e0d\u518d\u90a3\u4e48\u91cd\u8981\u4e86\u3002\n\u7136\u800c\uff0c\u6709\u65f6\u8fd9\u79cd\u51b2\u52a8\u5e76\u4e0d\u4f1a\u6d88\u5931\u3002\u5f53\u4f60\u60f3\u5403\u4e00\u5757\u5de7\u514b\u529b\u86cb\u7cd5\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u540c\u6837\u7684\u51b2\u52a8\u3002\n\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u6211\u4f1a\u505a\u6211\u6240\u8c13\u7684\u201c\u51b2\u6d6a\u51b2\u52a8\u201d\u3002\u4f60\u57fa\u672c\u4e0a\u662f\u5e26\u7740\u611f\u89c9\u5750\u7740\uff0c\u68c0\u67e5\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u4f60\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u4e0d\u4f1a\u6c38\u8fdc\u6301\u7eed\u4e0b\u53bb--\u5c3d\u7ba1\u5b83\u770b\u8d77\u6765\u4f1a\u6301\u7eed\u4e0b\u53bb\u3002\n\u4f46\u8fd9\u91cc\u7684\u5173\u952e\uff0c\u4e5f\u662f\u6211\u771f\u6b63\u60f3\u8981\u56de\u5bb6\u7684\u4e00\u70b9\u662f\uff0c\u6709\u65f6\u5019\u8fd9\u79cd\u4e8b\u60c5\u5e76\u4e0d\u5bb9\u6613\u3002\n\u5f53\u4eba\u4eec\u8bf4\u201c\u6211\u60f3\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\u201d\u65f6\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u8bf4\uff1a\u201c\u6211\u60f3\u8981\u4e00\u4e9b\u5f88\u96be\u6beb\u4e0d\u8d39\u529b\u5730\u517b\u6210\u7684\u4e1c\u897f\u3002\u201d\u4ed6\u4eec\u8bf4\uff1a\u201c\u6211\u60f3\u8981\u597d\u5904\uff0c\u4f46\u6211\u4e0d\u60f3\u8ba9\u4e8b\u60c5\u53d8\u5f97\u8270\u96be\u3002\u201d\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e60\u60ef\u7684\u795e\u8bdd\uff0c\u56e0\u4e3a\u4eba\u4eec\u77e5\u9053\u4e60\u60ef\u7684\u5b9a\u4e49\u662f\u5f88\u5c11\u6216\u6839\u672c\u6ca1\u6709\u610f\u8bc6\u7684\u884c\u4e3a\u3002\u4f46\u6211\u6709\u4e2a\u6d88\u606f\u8981\u544a\u8bc9\u4f60\u4eec\uff1a\u5199\u4f5c\uff0c\u5c31\u50cf\u8bb8\u591a\u5176\u4ed6\u884c\u4e3a\u4e00\u6837\uff0c\u662f\u5f88\u96be\u7684\uff0c\u5b83\u9700\u8981\u5f88\u591a\u6709\u610f\u8bc6\u7684\u601d\u8003\uff0c\u81f3\u5c11\u5bf9\u6211\u6765\u8bf4\u662f\u8fd9\u6837\u3002\n\u8fd9\u548c\u5fc3\u6d41\u662f\u4e00\u6837\u7684\u3002\u4f60\u5df2\u7ecf\u542c\u8bf4\u4e86\uff0c\u6211\u76f8\u4fe1\u6240\u6709\u5173\u4e8e\u5fc3\u6d41\u7684\u7814\u7a76\uff0c\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u5efa\u8bae\u3002\u56e0\u4e3a\u518d\u4e00\u6b21\uff0c\u5b83\u8ba9\u4f60\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u4f60\u77e5\u9053\uff0c\u804c\u4e1a\u7bee\u7403\u8fd0\u52a8\u5458\u5f88\u6d3b\u8dc3\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u5728\u7eb3\u7a0e\u7684\u65f6\u5019\uff0c\u4f60\u662f\u5982\u4f55\u8fdb\u5165\u6d41\u7a0b\u7684\u5462\uff1f\n\u5199\u4f5c\u4e5f\u662f\u5982\u6b64\u3002\u6211\u5df2\u7ecf\u5199\u4e86\u4e24\u672c\u4e66\u548c\u6570\u767e\u7bc7\u6587\u7ae0\u3002\u5199\u4f5c\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u3002\u8fd9\u5f88\u65e0\u804a\u3002\u8fd9\u662f\u4ee4\u4eba\u6cae\u4e27\u7684\u3002\u8fd9\u5f88\u96be\u3002\u5b83\u6b63\u5728\u4ea7\u751f\u7126\u8651\u3002\n\u5f53\u6211\u5199\u4f5c\u65f6\uff0c\u6709\u6240\u6709\u8fd9\u4e9b\u5185\u90e8\u89e6\u53d1\u56e0\u7d20\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u6ca1\u6709\u89e3\u9664\u8fd9\u79cd\u4e0d\u9002\u7684\u6280\u5de7\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u7ee7\u7eed\u505a\u4efb\u52a1\u4e86\uff0c\u6211\u4f1a\u5206\u5fc3\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u5e94\u8be5\u5d07\u62dc\u8fd9\u4e2a\u4e60\u60ef\u6216\u6d41\u52a8\u7684\u796d\u575b\u3002\n\u4e00\u65e6\u4f60\u5f00\u59cb\u8d70\u4e0a\u638c\u63e1\u5185\u5728\u89e6\u53d1\u56e0\u7d20\u7684\u9053\u8def\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u8ba1\u5212\u5982\u4f55\u5ea6\u8fc7\u4f60\u7684\u65f6\u95f4\u3002\u6211\u628a\u8fd9\u53eb\u505a\u505a\u7275\u5f15\u7684\u65f6\u95f4\u3002\n\u60a8\u7684\u65e5\u7a0b\u5b89\u6392\u9700\u8981\u7531\u60a8\u7684\u503c\u6765\u5b9a\u4e49\u3002\u503c\u662f\u4f60\u60f3\u6210\u4e3a\u7684\u4eba\u7684\u5c5e\u6027\u3002\u4e00\u65e6\u6211\u4eec\u4e86\u89e3\u4e86\u6211\u4eec\u60f3\u8981\u6210\u4e3a\u4ec0\u4e48\u6837\u7684\u4eba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5236\u5b9a\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u65e5\u7a0b\u8868\u3002\n\u8fd9\u611f\u89c9\u5f88\u590d\u6742\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u6211\u4e0d\u60f3\u8ba9\u4f60\u505a\u5e7b\u60f3\u677f\u3002\u6211\u4e0d\u60f3\u8ba9\u4f60\u505a\u4e00\u4e2a\u4e94\u5e74\u8ba1\u5212\u3002\u6211\u8981\u4f60\u505a\u7684\u5c31\u662f\u5236\u5b9a\u660e\u5929\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u5c31\u8fd9\u6837\u3002\u53ea\u8981\u505a\u4e2a\u65f6\u95f4\u8868\u5c31\u884c\u4e86\u3002\n\u6709\u4e09\u4e2a\u91cd\u8981\u7684\u751f\u6d3b\u9886\u57df\u9700\u8981\u8003\u8651\uff1a\u4f60\uff0c\u4f60\u7684\u4eba\u9645\u5173\u7cfb\uff0c\u4f60\u7684\u5de5\u4f5c\u3002\n\u6211\u5e0c\u671b\u4f60\u660e\u5929\u5728\u4f60\u7684\u65e5\u7a0b\u8868\u4e0a\u4e3a\u8fd9\u4e09\u4e2a\u751f\u547d\u9886\u57df\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7559\u51fa\u65f6\u95f4\u3002\u8fd9\u4e2a\u9879\u76ee\u662f\u8981\u5f04\u6e05\u695a\u5982\u4f55\u5c06\u4f60\u7684\u4ef7\u503c\u8f6c\u5316\u4e3a\u65f6\u95f4\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u4ef7\u503c\u89c2\u4e4b\u4e00\u662f\u4f60\u7684\u7cbe\u795e\u5065\u5eb7\uff0c\u90a3\u4e48\u95ee\u9898\u662f\uff1a\u4f60\u6253\u7b97\u5728\u4f60\u7684\u65e5\u7a0b\u8868\u4e0a\u5b89\u6392\u591a\u5c11\u65f6\u95f4\u8fdb\u884c\u51a5\u60f3\uff0c\u6216\u8005\u6cbb\u7597\uff0c\u6216\u8005\u4efb\u4f55\u5176\u4ed6\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u652f\u6301\u4f60\u7684\u65f6\u95f4\uff1f\u4f60\u6253\u7b97\u4ec0\u4e48\u65f6\u5019\u505a\u8fd9\u4ef6\u4e8b\uff1f\n\u4f60\u5de5\u4f5c\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5de5\u4f5c\uff1a\u53cd\u5e94\u6027\u5de5\u4f5c(\u56de\u590d\u7535\u5b50\u90ae\u4ef6\u3001\u677e\u61c8\u7b49)\u3002\u548c\u53cd\u601d\u6027\u7684\u4f5c\u54c1\u3002\u628a\u5b83\u653e\u8fdb\u4f60\u7684\u65e5\u5386\u91cc\u3002\n\u4f60\u4e0d\u80fd\u628a\u67d0\u4ef6\u4e8b\u53eb\u505a\u5206\u5fc3\uff0c\u9664\u975e\u4f60\u77e5\u9053\u5b83\u8ba9\u4f60\u5206\u5fc3\u7684\u662f\u4ec0\u4e48\u3002\u77e5\u9053\u4f60\u662f\u5426\u5206\u5fc3\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f60\u662f\u5426\u8ba1\u5212\u628a\u65f6\u95f4\u82b1\u5728\u4e00\u4ef6\u4e8b\u4e0a\uff0c\u800c\u4e0d\u662f\u628a\u65f6\u95f4\u82b1\u5728\u5176\u4ed6\u4e8b\u60c5\u4e0a\u3002\n\u4e00\u65e6\u4f60\u638c\u63e1\u4e86\u4f60\u7684\u5185\u90e8\u89e6\u53d1\u56e0\u7d20\uff0c\u5e76\u8ba1\u5212\u597d\u4e86\u4f60\u7684\u65f6\u95f4\uff0c\u4f60\u5c31\u51c6\u5907\u597d\u4e86\u7b2c\u4e09\u6b65\uff1a\u780d\u6389\u5916\u90e8\u89e6\u53d1\u56e0\u7d20\u3002\n\u4e00\u65e6\u6211\u5750\u5230\u6211\u7684\u529e\u516c\u684c\u524d\uff0c\u6211\u5c31\u8bd5\u7740\u6d88\u9664\u6211\u7684\u5916\u90e8\u89e6\u53d1\u56e0\u7d20\u3002\u8fd9\u662f\u5e7c\u513f\u56ed\u7684\u4e1c\u897f\u3002\n\u6211\u5173\u95ed\u4e86\u6240\u6709\u7684\u901a\u77e5\uff0c\u5e76\u786e\u4fdd\u6211\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e0d\u53d7\u5e72\u6270\u3002\u4f8b\u5982\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u6211\u7684\u684c\u9762\u5b8c\u5168\u662f\u7a7a\u7684\u3002\u8fd9\u53ef\u662f\u4ef6\u5927\u4e8b\uff0c\u5bf9\u5427\uff1f\n\u60a8\u4e0d\u5e0c\u671b\u5728\u60a8\u7684\u5de5\u4f5c\u533a\u4e2d\u6709\u4efb\u4f55\u5916\u90e8\u89e6\u53d1\u5668\u3002\u8bf7\u52ff\u6253\u6270\u59cb\u7ec8\u5904\u4e8e\u542f\u7528\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6211\u7684\u684c\u9762\u4e0a\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u70e6\u4eba\u7684\u901a\u77e5\u3002\u8fd9\u4e00\u76f4\u90fd\u662f\u8fd9\u6837\u3002\u6211\u8ba4\u4e3a\u5728\u4f60\u7684\u684c\u9762\u4e0a\u53d1\u5e03\u901a\u77e5\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5982\u679c\u6709\u4eba\u771f\u7684\u9700\u8981\u8054\u7cfb\u6211\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7528\u6211\u7684\u7535\u8bdd\u3002\n\u4e00\u4e2a\u91cd\u8981\u7684\u5916\u90e8\u8bf1\u56e0\uff0c\u7279\u522b\u662f\u73b0\u5728\uff0c\u662f\u5b69\u5b50\u4eec\u3002\u73b0\u5728\u6211\u4eec\u5728\u5bb6\u5de5\u4f5c\uff0c\u8fd9\u5bf9\u6211\u4eec\u6765\u8bf4\u5c24\u5176\u56f0\u96be\u3002\n\u8981\u548c\u5b69\u5b50\u6253\u4ea4\u9053\uff0c\u4f60\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5f53\u7136\u662f\u548c\u4f60\u7684\u4f34\u4fa3\u5efa\u7acb\u771f\u6b63\u7262\u56fa\u7684\u5173\u7cfb\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4f60\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u5206\u62c5\u7167\u987e\u4ed6\u4eec\u7684\u8d1f\u62c5\uff0c\u8fd9\u6837\u4f60\u4eec\u6bcf\u4e2a\u4eba\u90fd\u80fd\u628a\u4e8b\u60c5\u505a\u597d\u3002\u4f60\u8bbe\u5b9a\u4e00\u4e2a\u65f6\u95f4\u8868\uff0c\u4e00\u4e2a\u4f19\u4f34\u628a\u5b69\u5b50\u4eceW\u5c0f\u65f6\u5e26\u5230X\u5c0f\u65f6\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4f19\u4f34\u628a\u4ed6\u4eec\u4eceY\u5e26\u5230Z\u3002\n\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u8fd8\u6709\u4e00\u9879\u6280\u672f\uff0c\u5b83\u786e\u5b9e\u6709\u6548\u5730\u51cf\u5c11\u4e86\u6211\u7684\u5b69\u5b50\u4eec\u6253\u65ad\u6211\u7684\u6b21\u6570\u3002\u8fd9\u662f\u6211\u5de5\u4f5c\u65f6\u6234\u7684\u5e3d\u5b50\u3002\u6211\u4eec\u79f0\u5b83\u4e3a\u96c6\u4e2d\u738b\u51a0\u3002\n\u5f53\u6211\u6234\u4e0a\u4e13\u6ce8\u529b\u738b\u51a0\u65f6\uff0c\u5b83\u5411\u6211\u5973\u513f\u53d1\u51fa\u4e86\u4e00\u4e2a\u4fe1\u53f7\uff0c\u90a3\u5c31\u662f\u6211\u4e0d\u80fd\u88ab\u6253\u6270\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4e5f\u9002\u7528\u4e8e\u540c\u4e8b\u3002\u4f60\u4e0d\u4e00\u5b9a\u9700\u8981\u4e00\u9876\u611a\u8822\u7684\u5e3d\u5b50-\u4f60\u53ea\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u8ba9\u4eba\u4eec\u77e5\u9053\u4f60\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u88ab\u6253\u6270\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u88ab\u6253\u6270\u3002\n\u4ed6\u7528\u5951\u7ea6\u6765\u5904\u7406\u4ed6\u6700\u9ebb\u70e6\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u953b\u70bc\u3002\n\u8fd9\u5bf9\u6211\u7684\u5199\u4f5c\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u60f3\u8c08\u7684\u662f\u8fd9\u4e2a\u4f53\u7cfb\u7684\u7b2c\u56db\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a\u5951\u7ea6\u3002\n\u6211\u4e0d\u4f1a\u7528\u5b83\u4eec\u6765\u5199\u4f5c\uff0c\u4f46\u6211\u786e\u5b9e\u4f1a\u628a\u5b83\u4eec\u7528\u5728\u6211\u5fc5\u987b\u5b8c\u6210\u7684\u4efb\u52a1\u4e0a\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u6211\u6700\u6709\u53ef\u80fd\u4f1a\u8df3\u8fc7\u3002\n\u4f8b\u5982\uff0c\u6211\u4e00\u76f4\u8ba8\u538c\u953b\u70bc\uff0c\u5b9e\u9645\u4e0a\u6211\u66fe\u7ecf\u4e34\u5e8a\u4e0a\u60a3\u6709\u80a5\u80d6\u75c7\u3002\u6211\u771f\u7684\u4e00\u76f4\u8ba8\u538c\u953b\u70bc\u3002\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u6bcf\u5929\u65e9\u4e0a\u90fd\u8981\u953b\u70bc--\u6240\u4ee5\u95ee\u9898\u662f\uff0c\u5982\u4f55\u953b\u70bc\u5462\uff1f\n\u9996\u5148\uff0c\u6211\u5df2\u7ecf\u5b8c\u6210\u4e86\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u4e09\u4e2a\u6b65\u9aa4\u3002\u6211\u5df2\u7ecf\u638c\u63e1\u4e86\u953b\u70bc\u7684\u5185\u5728\u89e6\u53d1\u56e0\u7d20\u3002\u8fd9\u662f\u6211\u6bcf\u5929\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u6211\u5df2\u7ecf\u6392\u9664\u4e86\u53ef\u80fd\u4f1a\u963b\u6b62\u5b83\u7684\u5916\u90e8\u89e6\u53d1\u56e0\u7d20\u3002\n\u534f\u8bae\u6709\u51e0\u79cd\u7c7b\u578b\uff0c\u4f46\u5f53\u6d89\u53ca\u5230\u953b\u70bc\u65f6\uff0c\u6211\u4f7f\u7528\u4ef7\u683c\u534f\u8bae\u3002\u57fa\u672c\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u6211\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u79cd\u91d1\u94b1\u4e0a\u7684\u6291\u5236\uff0c\u8ba9\u6211\u4e0d\u53bb\u953b\u70bc\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u8fd9\u6837\u7684\uff1a\n\u6211\u8863\u67dc\u91cc\u6709\u4e00\u672c\u65e5\u5386\uff0c\u65e5\u5386\u4e0a\u522b\u7740\u4e00\u5f20100\u7f8e\u5143\u7684\u949e\u7968\u3002\u65e5\u5386\u4e0a\u7684\u6bcf\u4e00\u5929\uff0c\u6211\u53ef\u4ee5\u901a\u8fc7\u53bb\u5065\u8eab\u623f\u6765\u71c3\u70e7\u5361\u8def\u91cc\uff0c\u6216\u8005\u6211\u5fc5\u987b\u71c3\u70e7100\u7f8e\u5143\u7684\u949e\u7968\u3002\u6bcf\u5929\u6211\u90fd\u4f1a\u628a\u8d26\u5355\u79fb\u5230\u65e5\u5386\u4e0a\u7684\u4e0b\u4e00\u5929\uff0c\u7136\u540e\u518d\u505a\u4e00\u6b21\u9009\u62e9\u3002\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u4f60\u5fc5\u987b\u70e7\u6389\u5b83\u3002\u8fd9\u53eb\u505a\u201c\u70e7\u201d\u6216\u201c\u70e7\u201d\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u9001\u4eba\u611f\u89c9\u5f88\u597d\uff0c\u4f60\u5fc5\u987b\u4e3a\u6b64\u611f\u5230\u96be\u8fc7\uff0c\u624d\u80fd\u8ba9\u8fd9\u4ef6\u4e8b\u594f\u6548\u3002\n\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u70e7\u8fc7\u94b1\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u53ea\u505a\u4ed6\u5988\u768420\u4e2a\u4fef\u5367\u6491\u3002\n\u5b83\u7684\u540d\u5b57\u53eb\u201c\u706b\u82b1\u201d\uff0c\u662f\u4e13\u95e8\u4e3a\u8d85\u7ea7\u7ec4\u7ec7\u8005\u9ad8\u7ea7\u4f1a\u5458\u5236\u4f5c\u7684\u3002\n\u5b83\u7684\u7075\u611f\u6765\u81ea\u8482\u4e9a\u6208\u00b7\u798f\u7279(Tiago Forte)\u7684Para\u65b9\u6cd5\u8bba-\u6587\u4ef6\u5e94\u8be5\u6309\u53ef\u64cd\u4f5c\u6027\u6392\u5e8f\u7684\u60f3\u6cd5\u3002\n\u6700\u8fd1\u662f\u6307\u5728\u8fc7\u53bb3\u5929\u5185\u521b\u5efa\u6216\u4fee\u6539\u7684\u4efb\u4f55\u6587\u4ef6\u3002\n\u5b83\u7b80\u5355\u3001\u5e72\u51c0\uff0c\u65e8\u5728\u786e\u4fdd\u60a8\u7684\u684c\u9762\u4e0d\u53d7\u5916\u90e8\u89e6\u53d1\u5668\u7684\u5f71\u54cd\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5b8c\u6210\u6700\u91cd\u8981\u7684\u5de5\u4f5c\u3002", "note_en": "Nir Eyal thinks we\u2019re spending too much time trying to make work easy.\n He\u2019s a behavioral design expert who taught at Stanford and has written two best-selling books.\n But he thinks most of the productivity panaceas, like forming habits or trying to get into flow, that we all turn to in order to get our work done aren\u2019t always as useful as we might hope:\n \u201cWhen most people talk about habits, what they\u2019re saying is, \u2018I want something that\u2019s difficult to become effortless. I want the benefits but I don\u2019t want it to be hard,\u201d Nir said to me in an interview a few weeks ago. \u201cWell, I have news for you: some things are just hard. There\u2019s no way of getting around it.\u201d\n The problem is, when we expect work to be effortless and it ends up being difficult, we often blame ourselves. So the very tools we\u2019re using to make work easier, can instead make it easier for us to give up.\n Nir recommends a different approach. He thinks the number one barrier to getting our work done is distraction. It\u2019s all around us: from our social media feeds, to our app notifications, to pseudo work distractions like our email inbox or our todo lists.\n Most people think distraction is caused by technology, or that being distracted means there\u2019s something wrong with them.\n But Nir thinks that moments of distraction are actually our own human reaction to the discomfort we feel when we sit down to do our work. \u201cThey\u2019re not character flaws, they\u2019re emotional regulation problems,\u201d he says\n Nir thinks that we should develop tools to deal with internal discomfort instead of burying ourselves in distraction. And that once we\u2019re indistractable, we\u2019ll be ready to do our best work.\n In this interview we talk about Nir\u2019s unorthodox definition of distraction, go through his four-step process to becoming indistractible, and explore how he uses this process in his own life.\n   Hi, I\u2019m Nir Eyal. I&#39;m a behavioral designer which means I use consumer psychology and behavioral design to help companies build the kind of products that build good habits in our lives.\n I\u2019ve written two books,  Hooked and  Indistractable. Hooked was about how to build habit-forming products. Indistractable is about how to break bad habits.\n I taught for many years at Stanford at the Graduate School of Business, and then later at the Hasso Plattner Institute of Design. And today, I mostly teach and write about how to build good habits and break bad ones.\n    Most people say that the opposite of distraction is focus. But I don\u2019t think that\u2019s true. I think that the opposite of distraction is not focus, it is  traction.\n Both \u201ctraction\u201d and \u201cdistraction\u201d actually come from the same Latin root,  trahere, which means to pull.\n Traction is any action that pulls you toward what you want to do. By contrast, distraction is any action that pulls you away from what you planned to do.\n This is a really, really important point. Because a lot of people in the productivity space don\u2019t differentiate between traction and distraction.\n You can see this most clearly in people that do a lot of pseudo-work. I used to do it too: I would sit down at my desk and I would say, \u201cOkay, now I\u2019m going to get my work done, I\u2019m going to stop procrastinating.  But first let me just check email real quick. Let me just do that one chore on my todo list.\u201d\n What people don\u2019t realize is that if you\u2019re buried in your email inbox instead of doing your most important work, you are just as distracted as if you went on Facebook or Instagram or whatever. Anything that is not what you planned to do is by definition a distraction.\n And I think that things like email, or small todo list items are actually the most pernicious distractions because they  feel productive. If I\u2019m checking something off of my todo list that feels productive.\n What we don\u2019t realize is that in those instances, distraction has tricked us into prioritizing what feels urgent as opposed to what we really need to be doing. And that is toxic for your productivity, for your well-being, and for your happiness.\n And by the way, this doesn\u2019t mean that you should  never check Twitter or Facebook. If you want to scroll through Twitter or Facebook, do it! As long as you do it with intent, the time you  plan to waste is not wasted time.\n So: anything is a distraction as long as it\u2019s not what you planned to do. In the same way, anything can be traction, too.\n   In my book I describe my strategy for eliminating distraction. That word, strategy, is very important. The strategy is critical, because tactics are a dime a dozen.\n There isn\u2019t going to be one tactic that works for everyone. You use the strategy to try individual tactics until you find the right formula for you.\n   That\u2019s it. We\u2019ll go into each of these and talk about what they are.\n   External triggers are all of the things that we already think a lot about. It\u2019s the pings, and the dings, and all the things in our external environment that are pulling our attention away from the thing we had planned to spend our time on.\n These are important to pay attention to, but if you actually observe how people spend their time, the thing that is more likely to steal our attention is the internal triggers.\n  It turns out that distraction and procrastination are actually our default responses to uncomfortable feelings. They\u2019re not character flaws, they\u2019re emotional regulation problems.\n When we procrastinate or distract ourselves it\u2019s because we want to escape from uncomfortable sensations: boredom, loneliness, fatigue, uncertainty. Sometimes we escape through news, booze, football, or Facebook. Everyone has their drug of choice. But we\u2019re all trying to do the same thing with these distractions: attempting to relieve emotional discomfort.\n So if you want to deal with distraction the first thing you have to do is deal with the negative emotional triggers that lead to it.\n None of the other shit works, whatever any productivity guru says. You first and foremost have to start with the internal triggers.\n If you don\u2019t have the tools to deal with emotional discomfort, none of the life hacks work.\n  One of the places in my life where I have to deal with a lot of internal triggers is in my writing routine.\n I write every day in the morning for 2 hours, 5 days a week. No exceptions.\n In this system I only have one goal: to work on whatever it is I say I\u2019m going to work on for as long as I say I\u2019m going to work on it. That\u2019s it.\n What you\u2019ll also notice is that I don\u2019t set a word count. Word counts are terrible. It\u2019s really hard to use things like word counts because study after study has shown that people are terrible at predicting how long it will take to do something. We\u2019re awful at it.\n So some days I\u2019ll produce 300 words. Sometimes it\u2019s 1,000. Sometimes it\u2019s 3. But it doesn\u2019t matter. I just stay at my desk and try to write for the 2 hours on my schedule. And that\u2019s the most important thing.\n Now, people might think that because I write every day that it\u2019s easy.\n  When I sit down to write a few things come up regularly. Boredom. Fatigue. Anxiety. Uncertainty.\n There\u2019s a lot of uncertainty in writing. I never know if a particular line of research is going to be a waste of time. Most of the stuff I write about doesn\u2019t get published.\n Most of what I produce isn\u2019t illuminating. It\u2019s not exciting. It gets trashed.\n So there\u2019s constantly this uncertainty of, \u201cIs this going to be any good? Am I right? Are people going to find it useful?\u201d\n One way to deal with that is to lean into it instead of trying to get away from it. If you lean into the uncertainty, you can start to find beauty in the unknown.\n For example, you can look for the variability in the work \u2014\u00a0on how the way you feel about it, that feeling of uncertainty, is changing over time. You can also focus more intently on the details of the work \u2014 the minute details that make it the way it is. That\u2019s how people learn to love all kinds of things.\n So a piece of research isn\u2019t this dark scary thing anymore, it starts to unfold like a flower. You start to see the beauty in the task. For me, that\u2019s what uncertainty is. It\u2019s actually what drives me back to research now rather than causing me to be distracted \u2014\u00a0because I don\u2019t know what\u2019s going to happen. And that\u2019s exciting.\n But there are other ways to deal with the triggers that come up too. For example, another trigger for me is the desire to look something up. I\u2019ll be writing and I\u2019ll get this insane itch to go Google something \u2014\u00a0which I know will send me down a rabbit hole of distraction.\n  Rather than Google it, what I&#39;ll often do is write down on a piece of paper whatever it is I think I need to look up. And then I&#39;ll give myself 10 minutes. And if it&#39;s so important after ten minutes then maybe I\u2019ll look it up. Usually that works, and I can just get back to work.\n By the time the ten minutes are up what I felt like I needed to Google doesn\u2019t seem that important anymore.\n Sometimes, though, the urge doesn\u2019t go away. It\u2019s the same type of urge that you might feel when you want to eat a piece of chocolate cake.\n If that happens, then I do what I call \u201csurfing the urge.\u201d You basically sit with the sensation, and examine it. You\u2019ll find that if you can do that, it doesn\u2019t last forever \u2014 even though it feels like it will.\n  But the key here, the point I really want to drive home, is that sometimes this stuff just isn\u2019t easy.\n When people say, \u201cI want to start a habit,\u201d what they\u2019re really saying is: \u201cI want something that&#39;s difficult to become effortless.\u201d They\u2019re saying: \u201cI want the benefits, but I don&#39;t want it to be hard.\u201d\n That&#39;s why there&#39;s this myth of habits, because people know the definition of a habit is a behavior done with little or no conscious thought. But I have news for you folks: writing, like many other behaviors, is hard, it requires a lot of conscious thought, at least it is for me.\n It\u2019s the same deal with flow. You\u2019ve heard, I\u2019m sure all of the research on flow, and it\u2019s actually not very good advice for most people. Because again, it makes you think you can make anything effortless. You know, professional basketball players are in flow. But how do you get into flow when you\u2019re doing your taxes?\n Same with writing. I&#39;ve written two books, and hundreds of articles. Writing is never easy. It&#39;s boring. It&#39;s frustrating. It&#39;s difficult. It&#39;s anxiety producing.\n There&#39;s all these internal triggers when I write. And so if I don&#39;t have the techniques to disarm that discomfort so that I can stay on task I&#39;ll get distracted. And that&#39;s why we shouldn&#39;t worship at this altar of habits or flow.\n   Once you\u2019ve started down the path of mastering your internal triggers, the next step is to plan how you spend your time. I call this making time for traction.\n Your schedule needs to be defined by your values. Values are the attributes of the person that you want to become. Once we understand the kind of people we want to become, we can create a schedule that maps to that.\n This feels complicated but it\u2019s not. I don\u2019t want you to do a vision board. I don\u2019t want you to do a 5 year plan. All I want you to do is make a schedule for tomorrow. That\u2019s it. Just make a schedule.\n There are three life domains that are important to consider: You, Your Relationships, Your Work.\n   I want you to block time on your schedule tomorrow for each of those three life domains. The project is to figure out how to turn your values into time. So, if one of your values is your mental well-being the question is: how much time are you going to put on your schedule for meditation, or therapy, or whatever else supports you in that way? When are you going to do it?\n  How much time do you need for work? And keep in mind there are two types of work: reactive work (responding to emails, Slacks, etc.) and reflective work. Put that in your calendar.\n  You can\u2019t call something a distraction unless you know what it distracted you from. The only way to know if you were distracted is if you planned to spend your time on one thing, and instead you spent your time on something else.\n Once you\u2019ve mastered your internal triggers, and planned your time you\u2019re ready for the 3rd step: hacking back external triggers.\n  Once I sit down at my desk, I try to eliminate my external triggers. This is the kindergarten stuff.\n I turn off all of the notifications, and make sure my workspace is free from distraction. For example, you\u2019ll notice my desktop is totally empty. That&#39;s a big deal, right?\n    You don&#39;t want any external triggers in your workspace. Do Not Disturb is always turned on. So I don&#39;t get any bothersome notifications on my desktop. That&#39;s all the time. I think notifications on your desktop are a bad idea. If someone really needs to get in touch with me they can use my phone.\n One big external trigger, especially right now, is kids. This is especially difficult for us now that we\u2019re working from home.\n To deal with kids, the first thing you need to have, of course, is a really strong relationship with your partner. Ideally you can share the load of taking care of them at different times, so that each of you can get things done. You set a schedule where one partner takes the kids from W hour to X hour, and then the other partner takes them from Y to Z\n But aside from that, I have a technique that\u2019s been really effective for reducing the number of interruptions I get from my kids. It\u2019s a hat that I put on when I\u2019m working. We call it the concentration crown.\n    When I\u2019m wearing the concentration crown it sends a signal to my daughter that I can\u2019t be interrupted. By the way, this also works for co-workers too. You don\u2019t necessarily need a silly hat \u2014 you just need a way of letting people know when you can and can\u2019t be interrupted.\n  He uses pacts to deal with the tasks he has the most trouble with like exercise\n   And that\u2019s enough for me for writing. But there\u2019s actually a fourth component of the system that I want to talk about: pacts.\n I don\u2019t use them for writing, but I do use them for the tasks that I have to do that I\u2019m most likely to skip out on.\n For example, I always hated working out, and I actually used to be clinically obese. I really always hated exercise. But I work out every morning anyway \u2014 so the question is, how?\n Well first, I\u2019ve done the three other steps in the system. I\u2019ve mastered my internal triggers around exercise. It\u2019s on my schedule every day. And I\u2019ve eliminated external triggers that might prevent from doing it.\n  There are a few types of pacts, but when it comes to exercise I use a price pact. Basically, what that means is I\u2019ve established a monetary disincentive for me to skip my workout. It works like this:\n In my closet I have a calendar, and pinned to the calendar is a $100 bill. For each day on the calendar I can either burn the calories by going to the gym, or I have to burn the $100 bill. Each day I move the bill to the next day on the calendar and make the choice over again.\n    The answer is yes. You have to burn it. It&#39;s called burn or burn. Why? Because giving it away feels good, you have to feel bad about it in order for this to work.\n By the way, I&#39;ve never burned the money. Why? Because I just do the 20 fucking pushups.\n        It\u2019s called  Sparkle and it\u2019s made exclusively for Superorganizers Premium members.\n       It\u2019s inspired by\u00a0 Tiago Forte\u2019s PARA methodology\u00a0\u2014 the idea that files should be sorted by actionability.\n  Recents\u00a0is any file that has been created or modified in the last 3 days\n  It\u2019s simple, and clean, and designed to make sure that your desktop is free from external triggers, so that you can do your most important work.", "posttime": "2020-05-13 16:32:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "hard,\u5206\u5fc3", "title": "\u4e0d\u8981\u8bd5\u56fe\u8ba9\u8f9b\u82e6\u7684\u5de5\u4f5c\u53d8\u5f97\u5bb9\u6613", "title_en": "Stop trying to make hard work easy", "transed": 1, "url": "https://superorganizers.substack.com/p/stop-trying-to-make-hard-work-easy", "via": "", "real_tags": ["hard", "\u5206\u5fc3"]}, {"category": "", "categoryclass": "", "imagename": "eef5b6821e968095240be0857045ac36.png", "infoid": 1001947, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Janet\u662f\u4e00\u79cd\u51fd\u6570\u5f0f\u548c\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u53ef\u4ee5\u5728Windows\u3001Linux\u3001MacOS\u3001BSD\u4e0a\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u79fb\u690d\u5728\u5176\u4ed6\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u6574\u4e2a\u8bed\u8a00(\u6838\u5fc3\u5e93\u3001\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\u3001\u6c47\u7f16\u5668\u3001PEG)\u5c0f\u4e8e1Mb\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5165\u5355\u4e2aC\u6587\u4ef6\u548c\u4e24\u4e2a\u5934\u6587\u4ef6\u5c06Janet\u811a\u672c\u6dfb\u52a0\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\nJanet\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7cfb\u7edf\u811a\u672c\u8bed\u8a00\uff0c\u6216\u8005\u662f\u4e00\u79cd\u53ef\u4ee5\u5d4c\u5165\u5230\u5176\u4ed6\u7a0b\u5e8f\u4e2d\u7684\u8bed\u8a00\u3002\u60f3\u60f3Lua\u6216\u8005Guile\u5427\u3002Janet\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5feb\u901f\u539f\u578b\u3001\u52a8\u6001\u7cfb\u7edf\u4ee5\u53caLisp\u95ea\u8000\u7684\u5176\u4ed6\u9886\u57df\u3002Janet\u4e3b\u8981\u662f\u7528\u6807\u51c6C99\u5b9e\u73b0\u7684\uff0c\u53ef\u4ee5\u5728Windows\u3001Linux\u548cMacOS\u4e0a\u8fd0\u884c\u3002\u5c11\u6570\u975e\u6807\u51c6C\u7684\u7279\u6027(\u52a8\u6001\u5e93\u52a0\u8f7d\u3001\u7f16\u8bd1\u5668\u7279\u5b9a\u4f18\u5316)\u76f8\u5f53\u7b80\u5355\u3002\u73cd\u59ae\u7279\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u79fb\u690d\u5230\u65b0\u7684\u5e73\u53f0\u4e0a\u3002\n\u5f53\u5728\u6ca1\u6709\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c\u5c06\u542f\u52a8REPL\u3002\u4f20\u9012-h\u6807\u5fd7\u4ee5\u663e\u793a\u4f7f\u7528\u4fe1\u606f\u3002\u53ef\u4ee5\u4f7f\u7528Janet myscript.janet\u8fd0\u884c\u5404\u4e2a\u811a\u672c\u3002\n\u5982\u679c\u60a8\u8981\u6d4f\u89c8\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728REPL\u4e2d\u8f93\u5165all-bindings\u547d\u4ee4\u6765\u6253\u5370\u6240\u6709\u53ef\u7528\u5b8f\u3001\u51fd\u6570\u548c\u5e38\u91cf\u7684\u5217\u8868\u3002\n$janetJanet 1.0.0-dev-cc1ff91\u7248\u6743\u6240\u6709(C)2017-2019Calvin Rosejanet\uff1a0\uff1a&gt\uff1b(+1 2 3)6janet\uff1a10\uff1a&gt\uff1b(print&#34\uff1bHello\uff0cworld\uff01&#34\uff1b)\u60a8\u597d\uff0cworld\uff01niljanet\uff1a34\uff1a&gt\uff1b(OS/EXIT)$Janet-HUSAGE\uff1aJanet[Options]\u811a\u672c\u53c2\u6570.\u9009\u9879\u6709\uff1a-h\uff1a\u663e\u793a\u6b64\u5e2e\u52a9-v\uff1a\u6253\u5370\u7248\u672c\u5b57\u7b26\u4e32-s\uff1a\u4f7f\u7528\u539f\u59cbstdin\u800c\u4e0d\u662fgetline\u4e4b\u7c7b\u7684\u529f\u80fd-e code\uff1a\u6267\u884cjanet\u5b57\u7b26\u4e32-r\uff1a\u5728\u8fd0\u884c\u6240\u6709\u811a\u672c\u540e\u8f93\u5165repl-p\uff1a\u5982\u679c\u51fa\u73b0\u9876\u7ea7\u9519\u8bef\u5219\u7ee7\u7eed\u6267\u884c(\u6301\u4e45)-q\uff1a\u9690\u85cf\u63d0\u793a\u3001\u5fbd\u6807\u3001\u3002\u548crepl\u8f93\u51fa(\u5b89\u9759)-k\uff1a\u7f16\u8bd1\u811a\u672c\u4f46\u4e0d\u6267\u884c-m syspath\uff1a\u8bbe\u7f6e\u52a0\u8f7d\u5168\u5c40\u6a21\u5757\u7684\u7cfb\u7edf\u8def\u5f84-c\u6e90\u4ee3\u7801\u8f93\u51fa\uff1a\u5c06Janet\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u56fe\u50cf-n\uff1a\u7981\u7528repl-l\u8def\u5f84\u4e2d\u7684ANSI\u989c\u8272\u8f93\u51fa\uff1a\u5728\u8fd0\u884c\u4e3b\u811a\u672c\u4e4b\u524d\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801--\uff1a\u505c\u6b62\u5904\u7406\u9009\u9879\u3002\n\u67e5\u770bGitHub\u4e0a\u7684\u4e00\u4e9b\u8f85\u52a9\u9879\u76ee\u3002\u8fd9\u662f\u73cd\u59ae\u7279\u7684\u4e00\u4efd\u7b80\u77ed\u7684\u56fe\u4e66\u9986\u6e05\u5355\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5f00\u59cb\u5b66\u4e60\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\u3002\u6709\u5173\u66f4\u5b8c\u6574\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605Janet\u5305\u6e05\u5355\u3002\u6e05\u5355\u4e2d\u7684\u5305\u53ef\u4ee5\u901a\u8fc7JPM install pkg-name\u5b89\u88c5\u3002\n\u6b22\u8fce\u5728\u73cd\u59ae\u7279\u00b7\u5409\u7279\u9891\u9053\u4e0a\u63d0\u95ee\u548c\u53c2\u4e0e\u8ba8\u8bba\u3002\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5728Freenode\u4e0a\u67e5\u770b#Janet\u9891\u9053\u3002", "note_en": "Janet is a functional and imperative programming language. It runs on Windows, Linux, macOS, BSDs, and should run on other systems with some porting. The entire language (core library, interpreter, compiler, assembler, PEG) is less than 1Mb. You can also add Janet scripting to an application by embedding a single C file and two headers.\n    Janet makes a good system scripting language, or a language to embed in other programs. Think Lua or Guile. Janet also can be used for rapid prototyping, dynamic systems, and other domainswhere Lisp shines. Implemented mostly in standard C99, Janet runs on Windows, Linux and macOS.The few features that are not standard C (dynamic library loading, compiler specific optimizations),are fairly straightforward. Janet can be easily ported to new platforms.\n      A REPL is launched when the binary is invoked with no arguments. Pass the -h flagto display the usage information. Individual scripts can be run with  janet myscript.janet\n If you are looking to explore, you can print a list of all available macros, functions, and constantsby entering the command  all-bindings into the REPL.\n $ janetJanet 1.0.0-dev-cc1ff91 Copyright (C) 2017-2019 Calvin Rosejanet:0:&gt; (+ 1 2 3)6janet:10:&gt; (print &#34;Hello, world!&#34;)Hello, world!niljanet:34:&gt; (os/exit)$ janet -husage: janet [options] script args...Options are: -h : Show this help -v : Print the version string -s : Use raw stdin instead of getline like functionality -e code : Execute a string of janet -r : Enter the repl after running all scripts -p : Keep on executing if there is a top level error (persistent) -q : Hide prompt, logo, and repl output (quiet) -k : Compile scripts but do not execute -m syspath : Set system path for loading global modules -c source output : Compile janet source code into an image -n : Disable ANSI color output in the repl -l path : Execute code in a file before running the main script -- : Stop handling options\n    See some auxiliary projects on  GitHub. Here is a short list of librariesfor Janet to help you get started with some interesting stuff. See  the Janet Package Listingfor a more complete list. Packages in the listing can be installed via  jpm install pkg-name.\n     Feel free to ask questions and join discussion on the  Janet Gitter Channel.Alternatively, check out  the #janet channel on Freenode.", "posttime": "2020-05-13 16:18:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u73b0\u529b,lightweight,janet", "title": "\u73cd\u59ae\u7279\uff1a\u8f7b\u91cf\u7ea7\u3001\u5bcc\u4e8e\u8868\u73b0\u529b\u548c\u73b0\u4ee3\u611f\u7684Lisp", "title_en": "Janet: a lightweight, expressive and modern Lisp", "transed": 1, "url": "https://janet-lang.org", "via": "", "real_tags": ["\u8868\u73b0\u529b", "janet"]}, {"category": "", "categoryclass": "", "imagename": "54dbcf0bdd363782b953743faf770a04.jpeg", "infoid": 1001946, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8131\u673aPDF\u7f16\u8f91\u5668\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u5c06\u56fe\u50cf\u3001\u7ed8\u56fe\u548c\u6587\u672c\u6dfb\u52a0\u5230PDF\u3002\ud83d\ude80-\u5e02\u6c60\u9759\u4e45/pdf-\u7f16\u8f91", "note_en": "Offline PDF editor. Add images, drawing, text to PDF in your browser. \ud83d\ude80 - ShizukuIchi/pdf-editor", "posttime": "2020-05-13 16:03:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pdf", "title": "\u6d4f\u89c8\u5668\u4e2d\u7684\u8131\u673aPDF\u7f16\u8f91\u5668", "title_en": "Offline PDF Editor in the Browser", "transed": 1, "url": "https://github.com/ShizukuIchi/pdf-editor", "via": "", "real_tags": ["pdf"]}, {"category": "", "categoryclass": "", "imagename": "c70ae0990be25e7fd1171c771c2703e5.jpeg", "infoid": 1001944, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51(CNN)\u4e00\u4e2a\u8bef\u5bfc\u6027\u7684\u6807\u9898\u5f15\u53d1\u4e86\u793e\u4ea4\u5a92\u4f53\u98ce\u66b4\u3002\u4ee5\u4e0b\u662f\u6570\u636e\u5b9e\u9645\u663e\u793a\u7684\u60c5\u51b5\u3002\n5\u670811\u65e5\uff0c\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51(CNN)\u5728\u5176\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86\u4e00\u7bc7\u6807\u9898\u4e3a\u201c\u4e00\u9879\u65b0\u7684\u8c03\u67e5\u53d1\u73b0\uff0c68%\u7684\u7f8e\u56fd\u4eba\u8868\u793a\u5728\u6062\u590d\u6b63\u5e38\u751f\u6d3b\u4e4b\u524d\u9700\u8981\u63a5\u79cd\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u201d\u7684\u62a5\u9053\u3002CNN\u5b98\u65b9\u8d26\u53f7\u968f\u540e\u53d1\u5e03\u7684\u4e00\u6761\u63a8\u6587\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u63aa\u8f9e\u3002\u8bb8\u591a\u8bc4\u8bba\u5458\u90fd\u505a\u51fa\u4e86\u8d1f\u9762\u53cd\u5e94\uff0c\u79f0\u8fd9\u8868\u660e\u7f8e\u56fd\u4eba\u201c\u88ab\u5ba0\u574f\u4e86\u201d\uff0c\u79f0\u8fd9\u662f\u201c\u4e00\u79cd\u5e7b\u60f3\u201d\uff0c\u589e\u52a0\u4e86\u201c\u672a\u6765\u53d1\u751f\u51b2\u7a81\u548c\u51b2\u7a81\u7684\u53ef\u80fd\u6027\u201d\uff0c\u5e76\u6307\u51fa\u201c\u63a5\u79cd\u75ab\u82d7\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4e2a\u5b8c\u5168\u53ef\u80fd\u7684\u65f6\u95f4\u8868\u201d\u3002\n\u201c\u6b63\u5e38\u751f\u6d3b\u201d\u8fd9\u4e2a\u8bcd\u662f\u6a21\u68f1\u4e24\u53ef\u7684\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\u56de\u5230\u51a0\u72b6\u75c5\u6bd2\u4e4b\u524d\u7684\u6b63\u5e38\u72b6\u6001\uff0c\u5728\u516c\u5171\u573a\u5408\u4e0d\u6234\u53e3\u7f69\uff0c\u9910\u5385\u4eba\u6ee1\u4e3a\u60a3\uff0c\u4e0d\u7528\u62c5\u5fc3\u5927\u578b\u5ba4\u5185\u805a\u4f1a\uff0c\u5982\u97f3\u4e50\u4f1a\u3001\u7bee\u7403\u6bd4\u8d5b\u548c\u4f1a\u8bae\uff1f\u8fd9\u662f\u5426\u610f\u5473\u7740\u8bb8\u591a\u5dde\u5df2\u7ecf\u653e\u677e\u7684\u653f\u5e9c\u5f3a\u5236\u5c01\u9501\u7684\u7ed3\u675f\uff1f\u4e5f\u8bb8\u5b83\u610f\u5473\u7740\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u67d0\u79cd\u4e1c\u897f\u3002CNN\u7684\u6587\u7ae0\u6ca1\u6709\u8bf4\u3002\n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u4e0eCNN\u7684\u5934\u6761\u6216\u63a8\u6587\u4e0d\u7b26\uff0c\u8fd9\u662f\u8bb8\u591a\u4eba\u5728\u793e\u4ea4\u5a92\u4f53\u65f6\u4ee3\u5c06\u770b\u5230\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u6ca1\u6709\u94fe\u63a5\u5230\u4efb\u4f55\u6c11\u610f\u8c03\u67e5-\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4e2a\u597d\u5146\u5934-\u4f46\u63d0\u5230\u4e86\u201c\u4e24\u6b21\u76d6\u6d1b\u666e\u8c03\u67e5\u201d\u3002\u6211\u641c\u7d22\u4e86\u76d6\u6d1b\u666e\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u6c11\u610f\u8c03\u67e5\uff0c\u5173\u4e8e\u201c\u6b63\u5e38\u751f\u6d3b\u201d\u7684\u8c03\u67e5\u95ee\u9898\u6ca1\u6709\u90a3\u4e48\u6a21\u68f1\u4e24\u53ef\uff0c\u7ed3\u679c\u4e0eCNN\u7684\u8bf4\u6cd5\u6709\u5f88\u5927\u4e0d\u540c\u3002\n\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u201c\u6ca1\u6709\u653f\u5e9c\u9650\u5236\u201d\uff0c\u201c\u4f60\u4f1a\u5728\u591a\u957f\u65f6\u95f4\u5185\u6062\u590d\u6b63\u5e38\u7684\u65e5\u5e38\u6d3b\u52a8\u201d\uff0c\u7ed9\u51fa\u4e86\u56db\u4e2a\u9009\u62e9\u3002\u6700\u53d7\u6b22\u8fce\u7684\u7b54\u6848\u662f\u201c\u5728\u65b0\u75c5\u4f8b\u6570\u91cf\u5927\u5e45\u4e0b\u964d\u540e\u201d\uff0c\u5728\u6700\u8fd1\u7684\u8c03\u67e5\u4e2d\u83b7\u5f97\u4e8640%\u7684\u652f\u6301\u7387\u3002\u6700\u4e0d\u53d7\u6b22\u8fce\u7684\u7b54\u6848\u662f\u201c\u5728\u7814\u5236\u51fa\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u4e4b\u540e\u201d\u3002\u53ea\u67099%\u7684\u4eba\u8d5e\u6210\u8fd9\u6837\u505a\u3002\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u63d0\u5230\u75ab\u82d7\u7684\u95ee\u9898\uff0c\u8fd9\u53ef\u80fd\u5c31\u662fCNN\u5f97\u51fa68%\u7684\u6570\u5b57\u7684\u539f\u56e0\uff1a\u201c\u5f53\u4f60\u8003\u8651\u5230\u81ea\u5df1\u662f\u5426\u613f\u610f\u6062\u590d\u6b63\u5e38\u6d3b\u52a8\u65f6\uff0c\u4ee5\u4e0b\u6bcf\u4e00\u4e2a\u56e0\u7d20\u5bf9\u4f60\u6709\u591a\u91cd\u8981\uff1f\u201d\n\u5bf9\u4e8e\u201c\u63d0\u4f9b\u9884\u9632\u51a0\u72b6\u75c5\u6bd2\u7684\u75ab\u82d7\u201d\uff0c68%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u975e\u5e38\u91cd\u8981\u3002\u53e6\u670917%\u7684\u4eba\u8bf4\u6709\u4e9b\u91cd\u8981\uff0c8%\u7684\u4eba\u8bf4\u4e0d\u592a\u91cd\u8981\uff0c\u53ea\u67097%\u7684\u4eba\u8bf4\u6839\u672c\u4e0d\u91cd\u8981\u3002\n\u5f53\u7136\u53ef\u4ee5\u3002\u5982\u679c\u6709COVID\u75ab\u82d7\uff0c\u8c01\u4e0d\u4f1a\u6062\u590d\u6b63\u5e38\u6d3b\u52a8\u5462\uff1f\u4f46\u4e0eCNN\u7684\u6587\u7ae0\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u95ee\u9898\u5e76\u6ca1\u6709\u8bf4\u660e\u4ec0\u4e48\u662f\u201c\u9700\u8981\u7684\u201d\u3002\n\u201c\u8003\u8651\u4f60\u7684\u610f\u613f\u201d\u6bd4\u201c\u9700\u8981\u201d\u8981\u5c11\u5f97\u591a\u3002\u4eba\u4eec\u5f53\u7136\u5728\u8003\u8651\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u4eec\u4e0d\u613f\u610f\u5728\u6ca1\u6709\u5b83\u7684\u60c5\u51b5\u4e0b\u6062\u590d\u6b63\u5e38\u7684\u6d3b\u52a8\u3002\n\u76d6\u6d1b\u666e\u7528\u8fd9\u4e2a\u95ee\u9898\u95ee\u4e8611\u4ef6\u4e8b\u3002\u4ec5\u4ece\u201c\u975e\u5e38\u91cd\u8981\u201d\u7684\u767e\u5206\u6bd4\u6765\u770b\uff0c\u6709\u4e09\u4e2a\u8d85\u8fc7\u4e86\u75ab\u82d7\u768468%\uff1a\u201c\u5bf9\u4efb\u4f55\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\u7684\u4eba\u8fdb\u884c\u5f3a\u5236\u9694\u79bb\u201d(80%)\uff0c\u201c\u6539\u8fdb\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u7684\u533b\u7597\u65b9\u6cd5\u201d(77%)\uff0c\u4ee5\u53ca\u201c\u65b0\u75c5\u4f8b\u6216\u6b7b\u4ea1\u4eba\u6570\u7684\u663e\u8457\u51cf\u5c11\u201d(73%)\u3002\n\u53d7\u8bbf\u8005\u4e0d\u9700\u8981\u53ea\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u56e0\u7d20\uff0c\u663e\u7136\u4e5f\u6ca1\u6709\u3002\u8d85\u8fc750%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u5176\u4e2d\u4e03\u4e2a\u56e0\u7d20\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u4e9b\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u6240\u670911\u4e2a\u56e0\u7d20\u90fd\u8d85\u8fc7\u4e8660%\u3002\n\u6b64\u5916\uff0c\u867d\u7136\u201c\u533b\u7597\u5f53\u5c40\u4fdd\u8bc1\u5f53\u5730\u533b\u9662\u6709\u80fd\u529b\u63a5\u6536\u75c5\u4eba\u201d\u7684\u5f97\u5206\u6bd4\u75ab\u82d7\u4f4e(59%\u6bd468%)\uff0c\u4f46\u5f53\u52a0\u4e0a\u4e00\u4e9b\u91cd\u8981\u7684\u56e0\u7d20\u65f6\uff0c\u5b83\u7684\u5f97\u5206\u66f4\u9ad8(89%\u6bd485%)\u3002\u800c\u4e14\u201c\u8bc6\u522b\u548c\u76d1\u6d4b\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u7684\u5e7f\u6cdb\u6d4b\u8bd5\u201d\u4e5f\u5f88\u63a5\u8fd1(61%\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u52a0\u4e0a\u4e00\u4e9b\u91cd\u8981\u7684\u8bdd\uff0c82%)\u3002\n\u58f0\u79f0\u8fd9\u9879\u8c03\u67e5\u663e\u793a\u201c68%\u7684\u7f8e\u56fd\u4eba\u8ba4\u4e3a\u6062\u590d\u6b63\u5e38\u751f\u6d3b\u524d\u9700\u8981\u63a5\u79cd\u75ab\u82d7\u201d\u662f\u5bf9\u6570\u636e\u7684\u4e25\u91cd\u8bef\u89e3\u3002\u770b\u770b\u76d6\u6d1b\u666e\u63d0\u5230\u75ab\u82d7\u7684\u4e24\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u663e\u793a\uff0c\u7f8e\u56fd\u4eba\u6b63\u5728\u8003\u8651\u5f88\u591a\u4e8b\u60c5\uff0c\u4e3b\u8981\u662f\u62c5\u5fc3\u65b0\u75c5\u4f8b\u7684\u4e0b\u964d\u3002\nCNN\u5e94\u8be5\u5220\u9664\u8fd9\u6761\u63a8\u6587\uff0c\u4fee\u590d\u8fd9\u7bc7\u6587\u7ae0\uff0c\u53d1\u5e03\u66f4\u6b63\uff0c\u5e76\u5728\u672a\u6765\u66f4\u52a0\u8c28\u614e\u5730\u51c6\u786e\u8868\u8fbe\u8c03\u67e5\u6570\u636e\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u5f15\u8d77\u4e86\u5f88\u591a\u5173\u6ce8\uff0c\u5927\u7ea6\u5728\u4e1c\u90e8\u65f6\u95f4\u4e0b\u53484\u70b9\u5de6\u53f3\uff0cCNN\u66f4\u65b0\u4e86\u5b83\u7684\u6587\u7ae0\u3002\n\u65b0\u7684\u8c03\u67e5\u53d1\u73b0\uff0c\u73b0\u5728\u7684\u6807\u9898\u662f\u201c68%\u7684\u7f8e\u56fd\u4eba\u8868\u793a\uff0c\u5728\u6062\u590d\u6b63\u5e38\u751f\u6d3b\u4e4b\u524d\uff0c\u53ef\u7528\u7684\u75ab\u82d7\u975e\u5e38\u91cd\u8981\u3002\u201d\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u6700\u597d\u7684\u6846\u67b6-\u56e0\u4e3a\uff0c\u6b63\u5982\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u6709\u66f4\u53d7\u6b22\u8fce\u7684\u7b54\u6848-\u4f46\u8fd9\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u6539\u8fdb\u3002\u4e0e\u539f\u6765\u7684\u6807\u9898\u4e0d\u540c\uff0c\u65b0\u6807\u9898\u51c6\u786e\u5730\u4f20\u8fbe\u4e86\u76d6\u6d1b\u666e\u8c03\u67e5\u4e2d\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n\u6b64\u5916\uff0cCNN\u7684\u8fd9\u7bc7\u6587\u7ae0\u73b0\u5728\u5e95\u90e8\u589e\u52a0\u4e86\u4e00\u6761\u6ce8\u91ca\uff0c\u79f0\u201c\u6f84\u6e05\u662f\u4e3a\u4e86\u5f3a\u8c03\u53d7\u8bbf\u8005\u5bf9\u6bcf\u4e2a\u57fa\u51c6\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u4ed6\u4eec\u91cd\u8fd4\u6b63\u5e38\u6d3b\u52a8\u7684\u610f\u613f\u201d-\u8fd9\u662f\u53e6\u4e00\u4e2a\u56de\u5e94\u6211\u6279\u8bc4\u7684\u6539\u8fdb\u3002\n\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0cCNN\u5220\u9664\u4e86\u8fd9\u6761\u63a8\u6587\uff0c\u6807\u9898\u662f\u6b6a\u66f2\u76d6\u6d1b\u666e\u7684\u6570\u636e\u3002\u90d1\u91cd\u58f0\u660e\uff0c\u4ee5\u4e0b\u662f\u539f\u7248\u7684\u622a\u56fe\uff1a", "note_en": "A misleading CNN headline set off a social media storm. Here\u2019s what the data actually says.\n  On May 11, CNN posted a  story to its website headlined \u201c68% of Americans say a coronavirus vaccine is needed before returning to normal life, a new survey finds.\u201d A subsequent  tweet from the official CNN account used identical phrasing. Various commentators reacted negatively, saying it showed  Americans are \u201cspoiled,\u201d calling it \u201c a fantasy,\u201d raising  the possibility of \u201cstrife and conflict down the road,\u201d and  noting that \u201cNever is a perfectly likely timeline for a vaccine.\u201d\n The term \u201cnormal life\u201d is ambiguous. Does it mean a return to pre-coronavirus normal, with no masks in public, packed restaurants, and no worries about large indoor gatherings such as concerts, basketball games, and conferences? Does it mean the end of government-mandated lockdowns, which many states are easing already? Maybe it means something in between. The CNN article doesn\u2019t say.\n Even worse, the data doesn\u2019t match CNN\u2019s headline or tweet, which is all many people will see in the age of social media.\n The article doesn\u2019t link to any polls\u2014 never a good sign \u2014 but mentions \u201ctwo Gallup surveys.\u201d I searched  Gallup\u2019s polling on coronavirus, and the survey questions are less ambiguous regarding \u201cnormal life,\u201d with results that differ substantially from CNN\u2019s claim.\n One question asks \u201chow soon would you return to your normal day-to-day activities\u201d if \u201cthere were no government restrictions,\u201d giving four options. The most popular answer is \u201cafter the number of new cases declines significantly,\u201d getting 40 percent in the most recent survey. The least popular answer is \u201cafter a coronavirus vaccine is developed.\u201d Only 9 percent went with that.\n   There\u2019s another question that mentions vaccines, which is probably where CNN got the 68 percent figure: \u201cHow important are each of the following factors to you when thinking about your willingness to return to your normal activities?\u201d\n For \u201cthe availability of a vaccine to prevent COVID-19,\u201d 68 percent of respondents said very important. Another 17 percent said somewhat important, while 8 percent said not too important, and just 7 percent said not important at all.\n Well, sure. If there was a COVID vaccine, who wouldn\u2019t return to their normal activities? But the question, unlike CNN\u2019s article, doesn\u2019t say anything about what\u2019s \u201cneeded.\u201d\n \u201cThinking about your willingness\u201d is much less restrictive than \u201cneeded.\u201d Of course people are thinking about it. That doesn\u2019t mean they\u2019re unwilling to resume normal activities without it.\n Gallup uses this question to ask about eleven things. Looking only at the percentage saying \u201cvery important,\u201d three beat the vaccine\u2019s 68 percent: \u201cMandatory quarantine for anyone testing positive with COVID-19\u201d (80 percent), \u201cimproved medical therapies to treat COVID-19\u201d (77 percent), and \u201ca significant reduction in the number of new cases or deaths\u201d (73 percent).\n  Respondents don\u2019t have to pick just one of these factors, and clearly didn\u2019t. More than 50 percent said that seven of the factors are very important, and if we add in somewhat important, all eleven factors clear 60 percent.\n Additionally, while \u201cassurances from medical authorities that local hospitals have capacity to accept patients\u201d has a lower very important score than a vaccine (59 percent v. 68 percent), it has a higher score when adding in somewhat important (89 percent v. 85 percent). And \u201cwidespread testing to identify and monitor coronavirus infections\u201d is close (61 percent very important, 82 percent when adding in somewhat important).\n Claiming that this survey shows that \u201c68% of Americans say a vaccine is needed before returning to normal life\u201d is an egregious misreading of the data. Looking at the two Gallup questions that mention vaccines, the data shows that Americans are thinking about a lot of things, and primarily concerned about a decline in new cases.\n CNN should delete the tweet, fix the article, issue a correction, and be a lot more careful to accurately represent survey data in the future.\n   This post got a  lot of  attention, and around 4:00 pm eastern,  CNN updated its article.\n The headline now says \u201c68% of Americans say an available vaccine is very important before returning to normal life, new survey finds.\u201d I don\u2019t think that\u2019s the best framing \u2014 because, as noted above, there were more popular answers \u2014 but it\u2019s a significant improvement. Unlike the original headline, the new one accurately conveys something in the Gallup survey.\n Additionally, the CNN article now includes a note at the bottom saying it was \u201cclarified to emphasize that respondents were rating the importance of each benchmark to their willingness to return to regular activities\u201d \u2014 another improvement that addresses my criticism.\n A couple of hours later, CNN deleted the tweet with the headline that misrepresented the Gallup data. For the record, here\u2019s a screenshot of the original:", "posttime": "2020-05-13 16:01:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a5\u79cd,vaccine,cnn", "title": "\u4e0d\uff0c68%\u7684\u7f8e\u56fd\u4eba\u8ba4\u4e3a\u5728\u6062\u590d\u6b63\u5e38\u4e4b\u524d\u4e0d\u9700\u8981\u63a5\u79cd\u75ab\u82d7", "title_en": "No, 68% of Americans Do Not Think a Vaccine Is Needed Before Returning to Normal", "transed": 1, "url": "https://arcdigital.media/no-68-of-americans-do-not-think-a-vaccine-is-needed-before-returning-to-normal-life-b0762e1223dc", "via": "", "real_tags": ["\u63a5\u79cd", "vaccine", "cnn"]}, {"category": "", "categoryclass": "", "imagename": "8dab88a9b6d0d9f7039e7e379efb4b55.jpg", "infoid": 1001943, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u4eec\u5ba3\u5e03\uff0cEclipse\u57fa\u91d1\u4f1a\u6b63\u5728\u8f6c\u578b\uff0c\u6210\u4e3a\u4e00\u4e2a\u603b\u90e8\u8bbe\u5728\u6b27\u6d32\u7684\u7ec4\u7ec7\uff0c\u7279\u522b\u662f\u6bd4\u5229\u65f6\u7684\u56fd\u9645\u975e\u8425\u5229\u7ec4\u7ec7\u3002\u6211\u60f3\u501f\u6b64\u673a\u4f1a\u4e0e\u5927\u5bb6\u5206\u4eab\u6211\u4eec\u7684\u8fc7\u6e21\u8ba1\u5212\uff0c\u4ee5\u53ca\u8fd9\u9879\u5ba3\u5e03\u5bf9\u6211\u4eec\u793e\u4f1a\u7684\u610f\u4e49\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e9b\u80cc\u666f\u5f00\u59cb\u30022020\u5e74\u7b2c\u4e00\u5b63\u5ea6\u662f\u6211\u4eec\u7ec4\u7ec7\u5386\u53f2\u4e0a\u6700\u6210\u529f\u7684\u5b63\u5ea6\uff0c\u589e\u52a0\u4e8640\u5bb6\u65b0\u6210\u5458\u516c\u53f8\u30015\u4e2a\u65b0\u5de5\u4f5c\u7ec4\u548c11\u4e2a\u65b0\u9879\u76ee\u63d0\u6848\u3002\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\uff0c\u6211\u4eec\u7684\u793e\u533a\u5df2\u7ecf\u6269\u5c55\u5230\u5728\u4e91\u548c\u8fb9\u7f18\u5e94\u7528\u3001\u7269\u8054\u7f51\u3001\u4eba\u5de5\u667a\u80fd\u3001\u6570\u5b57\u5206\u7c7b\u5e10\u6280\u672f\u3001\u5f00\u653e\u5f0f\u5904\u7406\u5668\u8bbe\u8ba1\u7b49\u8bb8\u591a\u6280\u672f\u9886\u57df\u521b\u5efa\u65b0\u9879\u76ee\u3002\u518d\u52a0\u4e0a\u6211\u4eec\u5728Java\u3001\u5de5\u5177\u548c\u5bcc\u5ba2\u6237\u7aef\u5e73\u53f0\u4ee5\u53ca\u5efa\u6a21\u65b9\u9762\u7684\u6839\u57fa\uff0c\u8fd9\u4f7f\u5f97Eclipse Foundation\u6210\u4e3a\u5404\u79cd\u4ee4\u4eba\u5174\u594b\u7684\u3001\u4ee5\u5546\u4e1a\u4e3a\u91cd\u70b9\u7684\u5f00\u6e90\u6280\u672f\u7684\u53d1\u6e90\u5730\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u7ee7\u7eed\u8fd9\u79cd\u589e\u957f\u548c\u591a\u6837\u5316\uff0c\u5e76\u7ee7\u7eed\u5efa\u7acbEclipse\u57fa\u91d1\u4f1a\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u652f\u6301\u5168\u7403\u5f00\u653e\u534f\u4f5c\u548c\u521b\u65b0\u7684\u673a\u6784\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u8fd9\u4e00\u6218\u7565\u5c06\u4f7f\u57fa\u91d1\u4f1a\u4ee5\u53ca\u60a8\u5bf9\u6211\u4eec\u5f00\u6e90\u9879\u76ee\u7684\u6295\u8d44\u66f4\u52a0\u5b89\u5168\u548c\u53ef\u6301\u7eed\u3002\n\u6211\u4eec\u76f8\u4fe1\uff0c\u8fd9\u6b21\u201c\u8fc1\u5f80\u6b27\u6d32\u201d\u662f\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u6700\u6709\u6548\u9014\u5f84\u3002\u539f\u56e0\u5f88\u7b80\u5355-\u867d\u7136\u6211\u4eec\u652f\u6301\u4e00\u4e2a\u591a\u6837\u5316\u7684\u56fd\u9645\u751f\u6001\u7cfb\u7edf\uff0c\u4f46\u6211\u4eec\u7684\u5927\u90e8\u5206\u589e\u957f\u5df2\u7ecf\u53d1\u751f\u5728\u6b27\u6d32\u3002Eclipse\u57fa\u91d1\u4f1a\u62e5\u6709170\u4e2a\u6211\u4eec\u7684\u6210\u5458\u7ec4\u7ec7\u548c900\u591a\u4e2a\u603b\u90e8\u8bbe\u5728\u6b27\u6d32\u7684\u63d0\u4ea4\u8005\uff0c\u6309\u7167\u8fd9\u4e9b\u6807\u51c6\u548c\u5176\u4ed6\u6807\u51c6\uff0c\u5b83\u5df2\u7ecf\u662f\u6b27\u6d32\u6700\u5927\u7684\u5f00\u6e90\u7ec4\u7ec7\u3002\n\u8fd9\u5c31\u628a\u6211\u5e26\u5230\u4e86\u4eca\u5929\u7684\u516c\u544a\u3002\u901a\u8fc7\u521b\u5efaEclipse Foundation Aisbl\uff0c\u8fd9\u662f\u4e00\u4e2a\u603b\u90e8\u8bbe\u5728\u5e03\u9c81\u585e\u5c14\u7684\u56fd\u9645\u975e\u8425\u5229\u6027\u534f\u4f1a\uff0c\u6211\u4eec\u6b63\u5728\u63a8\u52a8Eclipse\u57fa\u91d1\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5168\u7403\u6027\u673a\u6784\u7684\u613f\u666f\uff0c\u8be5\u673a\u6784\u5efa\u7acb\u5728\u6211\u4eec\u73b0\u6709\u7684\u4f1a\u5458\u57fa\u7840\u3001\u6d3b\u8dc3\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\u548c\u7262\u56fa\u7684\u673a\u6784\u5173\u7cfb\u57fa\u7840\u4e0a\uff0c\u4ee5\u5b9e\u73b0\u5f00\u653e\u8f6f\u4ef6\u521b\u65b0\u7684\u81ea\u7531\u6d41\u52a8\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u6211\u4eec\u5411\u6b27\u6d32\u7684\u8fc7\u6e21\u5c06\u6709\u52a9\u4e8e\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u4f7f\u4e16\u754c\u5404\u5730\u7684\u884c\u4e1a\u548c\u5f00\u53d1\u4eba\u5458\u793e\u533a\u53d7\u76ca\u3002\n\u540c\u65f6\uff0c\u6211\u4eec\u5c06\u5efa\u7acb\u4e00\u4e2a\u57fa\u4e8eGitLab\u7684\u73b0\u4ee3\u5f00\u6e90\u9879\u76ee\u5f00\u53d1\u7194\u7089\uff0c\u5e76\u5b9e\u9645\u6258\u7ba1\u5728\u6b27\u6d32\u3002\u6211\u4eec\u9884\u8ba1\u953b\u9020\u5382\u5c06\u4e8e\u4eca\u5e74\u590f\u5929\u6295\u5165\u8fd0\u8425\u3002\u8fd9\u5c06\u4e3a\u6211\u4eec\u7684\u9879\u76ee\u548c\u63d0\u4ea4\u8005\u63d0\u4f9b\u7b2c\u4e09\u79cd\u9009\u62e9\uff0c\u7528\u4e8e\u4ed6\u4eec\u7684\u5f00\u53d1\u953b\u9020\u3002\nEclipse\u548cEclipse Foundation\u7684\u540d\u79f0\u3001\u5546\u6807\u548c\u54c1\u724c\u5c06\u7531\u65b0\u7684\u6bd4\u5229\u65f6\u5b9e\u4f53\u63a7\u5236\uff0c\u53cd\u5784\u65ad\u548c\u77e5\u8bc6\u4ea7\u6743\u7b49\u6838\u5fc3\u653f\u7b56\u4e5f\u5c06\u53d7\u5230\u63a7\u5236\u3002\u5c55\u671b\u672a\u6765\uff0c\u6211\u4eec\u7684\u4f1a\u8d39\u5c06\u4ee5\u6b27\u5143\u8ba1\u4ef7\u3002\nEclipse\u57fa\u91d1\u4f1a\uff0c\u867d\u7136\u76ee\u524d\u662f\u7f8e\u56fd\u6ce8\u518c\u7684\u975e\u76c8\u5229\u7ec4\u7ec7\uff0c\u4f46\u5df2\u7ecf\u5728\u52a0\u62ff\u5927\u548c\u6b27\u6d32\u7ba1\u7406\u5176\u4e1a\u52a1\uff0c\u56e0\u6b64\u5bf9\u57fa\u91d1\u4f1a\u7684\u4e1a\u52a1\u5f71\u54cd\u5f88\u5c0f\uff0c\u751a\u81f3\u6ca1\u6709\u5f71\u54cd\u3002\n\u90a3\u4e48\uff0c\u8fd9\u4e00\u4e3e\u52a8\u5bf9\u6211\u4eec\u7684\u4f1a\u5458\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\u5bf9\u4e8e\u6211\u4eec\u7684\u4f01\u4e1a\u6210\u5458\u6765\u8bf4\uff0c\u4e0d\u4f1a\u7acb\u5373\u53d1\u751f\u53d8\u5316\u3002\u6211\u4eec\u7684\u9879\u76ee\u548c\u5de5\u4f5c\u7ec4\u5c06\u7ee7\u7eed\u6309\u539f\u6837\u8fd0\u8425\u3002*\u4e00\u65e6\u6211\u4eec\u7684\u6bd4\u5229\u65f6\u5b9e\u4f53\u542f\u52a8\u5e76\u8fd0\u8425\uff0c\u6211\u4eec\u5c06\u4e0e\u60a8\u8054\u7cfb\uff0c\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282\uff0c\u4f46\u5e0c\u671b\u60a8\u4e0e\u57fa\u91d1\u4f1a\u7684\u5408\u4f5c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4fdd\u6301\u4e0d\u53d8\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7684\u59d4\u5458\u4f1a\u6210\u5458\uff0c\u4ee5\u53ca\u6211\u4eec\u7684\u9879\u76ee\u63d0\u4ea4\u4eba\u548c\u8d21\u732e\u8005\uff0c\u8fd9\u4e00\u4fe1\u606f\u662f\u53cc\u91cd\u7684\u3002\u9996\u5148\uff0c\u611f\u8c22\u4f60\u4eec\u7684\u627f\u8bfa\u548c\u53c2\u4e0e\u3002\u7b2c\u4e8c\uff0c\u7ee7\u7eed\u505a\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u5728\u77ed\u671f\u5185\uff0cEclipse\u9879\u76ee\u7684\u63d0\u4ea4\u8005\u548c\u8d21\u732e\u8005\u5c06\u201c\u4e00\u5207\u7167\u65e7\u201d\u3002\u4ece\u4e2d\u671f\u6765\u770b\uff0c\u6211\u4eec\u5c06\u5728\u6b27\u6d32\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u57fa\u4e8eGitLab\u7684\u953b\u9020\u5382\uff0c\u5b83\u5c06\u4f5c\u4e3a\u4efb\u4f55\u60f3\u8981\u4f7f\u7528\u5b83\u7684\u9879\u76ee\u7684\u9009\u62e9\u3002\n\u800c\u4e14\uff0c\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u7531\u4e8e\u8fd9\u662f\u8fd9\u4e00\u4e3e\u63aa\u7684\u4e3b\u8981\u9a71\u52a8\u529b\uff0c\u968f\u7740\u6211\u4eec\u6269\u5927\u5728\u6b27\u6d32\u7684\u5b58\u5728\uff0c\u6211\u4eec\u9884\u8ba1\u6211\u4eec\u7684\u5168\u7403\u793e\u533a\u6210\u5458\u5c06\u6709\u65b0\u7684\u673a\u4f1a\u53c2\u4e0e\u521b\u65b0\u7684\u65b0\u5f00\u6e90\u9879\u76ee\u3002\n\u70b9\u51fb\u6b64\u5904\u9605\u8bfb\u516c\u544a\u5168\u6587\u3002\u6709\u5173Eclipse\u57fa\u91d1\u4f1a\u7684\u8ba1\u5212\u4ee5\u53ca\u611f\u5174\u8da3\u7684\u5404\u65b9\u5982\u4f55\u53c2\u4e0e\u7684\u5176\u4ed6\u8d44\u6e90\u548c\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eeeclipse.org/Europe\u3002\u8d44\u6e90\u5305\u62ec\uff1a\n\u4e00\u4efd\u9610\u8ff0Eclipse\u57fa\u91d1\u4f1a\u5728\u6b27\u6d32\u5f00\u6e90\u521b\u65b0\u4e2d\u5fc3\u7684\u89d2\u8272\uff1a\u901a\u8fc7\u5168\u7403\u5f00\u6e90\u534f\u4f5c\u5728\u6b27\u6d32\u5b9e\u73b0\u6570\u5b57\u5316\u8f6c\u578b\u7684\u767d\u76ae\u4e66\u3002\n\u6211\u5e0c\u671b\u8fd9\u6709\u52a9\u6f84\u6e05\u6211\u4eec\u7684\u52a8\u673a\uff0c\u4ee5\u53ca\u4e0b\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u793e\u533a\u6269\u5c55\u9636\u6bb5\u7684\u672a\u6765\u8def\u5411\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u91cc\uff0c\u968f\u7740\u6211\u4eec\u8fc5\u901f\u6267\u884c\u8fd9\u4e9b\u8ba1\u5212\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u5c06\u968f\u4e4b\u800c\u6765\uff0c\u4f46\u5982\u679c\u60a8\u5728\u6b64\u671f\u95f4\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u8054\u7cfb\u6211\uff0c\u6216\u901a\u8fc7eclipse-Europe@eclipse.org\u8054\u7cfb\u6211\u4eec\u7684\u56e2\u961f\u3002\n\u6211\u671f\u5f85\u7740\u8fd9\u6fc0\u52a8\u4eba\u5fc3\u7684\u65b0\u7bc7\u7ae0\u7684\u5230\u6765-\u8c22\u8c22\u60a8\u7684\u6301\u7eed\u652f\u6301\uff01", "note_en": "Today we are announcing that the Eclipse Foundation is transitioning itself to become a European-based organization, specifically a Belgian international nonprofit association. I wanted to take this opportunity to share with you our plans for the transition and what the announcement means to our community.\n Let\u2019s begin with some context. The first quarter of 2020 was the most successful in our organization\u2019s history, as measured by the addition of 40 new member companies, five new working groups, and 11 new project proposals. Over the last few years, our community has expanded to create new projects in technology areas such as cloud and edge applications, IoT, artificial intelligence, digital ledger technologies, open processor designs, and many others. Combined with our roots in Java, tooling and rich client platforms, and modeling, this has made Eclipse Foundation the home of an incredibly diverse range of exciting, commercially-focused open source technologies.\n Our goal is to continue this growth and diversification, and to continue to establish the Eclipse Foundation as an institution enabling global open collaboration and innovation. We believe that this strategy makes the Foundation, and by extension your investments in our open source projects, more secure and sustainable.\n We believe this \u201cmove to Europe\u201d is the most effective way for us to achieve this goal. \u00a0 The reason is straightforward \u2013 while we support a diverse, international ecosystem, most of our growth has already been happening in Europe. With 170 of our member organizations and more than 900 of our committers based in Europe, the Eclipse Foundation is, by those measures and others, already the largest open source organization in Europe.\n Which brings me to today\u2019s announcement. By creating the Eclipse Foundation AISBL, an international non-profit association based in Brussels, we are furthering our vision of the Eclipse Foundation as a global institution that builds on our existing membership base, active developer community, and strong institutional relationships to enable the free flow of open software innovation. We believe that our transition to Europe will help to advance toward this goal, for the benefit of industries and developer communities worldwide.\n  In parallel, we will establish a modern open source project development forge based on GitLab and physically hosted in Europe. We expect the forge to be operational this summer. This will provide our projects and committers a third option for their development forge.\n The Eclipse and Eclipse Foundation names, trademarks, and brands will be controlled by the new Belgian entity, as will the core policies such as antitrust and intellectual property. Going forward our membership dues will be stated in euros.\n The Eclipse Foundation, while currently a USA incorporated not-for-profit organization, already manages its operations split between Canada and Europe, so there will be minimal to no impact to the Foundation\u2019s operations.\n So, what does this move mean for our members? For our corporate members, there is no immediate change.\u00a0 Our projects and working groups will continue operating exactly as they are.\u00a0 Once we have the Belgian entity up and operating, we will reach out to you with more details, but do expect your engagement with the Foundation to remain largely unchanged.\n To our Committer members, as well as our project committers and contributors, the message is two-fold. First, thank you for your commitment and participation. Second, keep doing what you\u2019re doing. In the near-term, it will be \u201cbusiness as usual\u201d for committers and contributors of Eclipse projects. In the medium term, we are standing up a new GitLab-based forge physically hosted in Europe that will be available as a choice for any projects that would like to use it.\n And, critically important as it is the main driver for the move, as we expand our presence in Europe, we anticipate new opportunities for our global community members to participate in innovative new open source projects.\n Read the full text of the announcement  here. Additional resources and information on the Eclipse Foundation\u2019s plans and how interested parties can get involved at  eclipse.org/europe. Resources include:\n A white paper elaborating on the Eclipse Foundation\u2019s role at the center of European open source innovation:  Enabling Digital Transformation in Europe Through Global Open Source Collaboration\n I hope that this has helped clarify our motivations and the way forward for the next exciting phase of our community\u2019s expansion. More details will follow over the coming weeks as we quickly execute on these plans, but if you have questions in the interim, feel free to reach out to me, or to our team at  eclipse-europe@eclipse.org.\n I look forward to this exciting next chapter together \u2013 thank you for your continued support!", "posttime": "2020-05-13 15:47:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "eclipse,foundation,\u6b27\u6d32", "title": "Eclipse\u57fa\u91d1\u4f1a\u5373\u5c06\u8fc1\u5f80\u6b27\u6d32", "title_en": "The Eclipse Foundation Is Moving to Europe", "transed": 1, "url": "https://eclipse-foundation.blog/2020/05/12/moving-to-europe/", "via": "", "real_tags": ["eclipse", "\u6b27\u6d32"]}]