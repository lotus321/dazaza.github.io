[{"category": "", "categoryclass": "", "imagename": "f8e2dd5d8d9f4bc16662f67c25cd5fae.jpg", "infoid": 1002462, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e95\u7279\u5f8b-\u5e95\u7279\u5f8b\u6469\u5c14\u5e2e\u62d2\u7edd\u8ba9\u5c0f\u9884\u7b97\u548c\u5b98\u50da\u4f5c\u98ce\u963b\u788d\u4f1f\u5927\u7684\u6e38\u4e50\u573a\u3002\n\u5468\u516d\uff0c25\u540d\u5fd7\u613f\u5272\u8349\u673a\u79bb\u5f00\u9694\u79bb\u533a\uff0c\u4e89\u593a\u51a0\u519b\u8170\u5e26\uff0c\u6388\u4e88\u572812\u5c0f\u65f6\u7684Motown Mowdown\u4e2d\u5272\u8349\u6700\u591a\u7684\u4eba\u3002\n\u5e95\u7279\u5f8b\u6469\u5c14\u5e2e\u521b\u59cb\u4eba\u6c64\u59c6\u00b7\u7eb3\u5c14\u591a(Tom Nardo)\u5c55\u793a\u4e86\u5728\u5e95\u7279\u5f8b\u6c49\u9ed8\u4f2f\u683c\u6e38\u4e50\u573a(Hammerberg Playfield)\u4e8e2020\u5e745\u670816\u65e5(\u661f\u671f\u516d)\u5f00\u59cb\u768412\u5c0f\u65f6Motown Mowdown\u6d3b\u52a8\u4e2d\uff0c\u5272\u8349\u6700\u591a\u7684\u6210\u5458\u83b7\u5f97\u7684\u51a0\u519b\u8170\u5e26\u3002(\u6444\u5f71\uff1a\u9a6c\u514b\u65af\u00b7\u5965\u5c14\u8482\u65af\uff0c\u300a\u5e95\u7279\u5f8b\u65b0\u95fb\u300b)\u3002\n\u4ed6\u4eec\u5728\u5e95\u7279\u5f8b\u897f\u4fa7\u7684\u975e\u56fd\u6709\u516c\u56edHammerberg Playfield\u5f00\u59cb\u884c\u52a8\uff0c\u5904\u7406\u6742\u8349\u4e1b\u751f\u7684\u8349\u576a\uff0c\u4fee\u590d\u5df4\u987f-\u9ea6\u514b\u6cd5\u5170(Barton-McFarland)\u793e\u533a\u7684\u79cb\u5343\u5957\u88c5\uff0c\u7136\u540e\u5206\u5934\u6e05\u7406\u57ce\u5e02\u4e2d\u5176\u4ed610\u4e2a\u5e9f\u5f03\u7684\u6e38\u4e50\u573a\u3002\n50\u5c81\u7684\u6c64\u59c6\u00b7\u7eb3\u5c14\u591a(Tom Nardo)\u6765\u81ea\u4f2f\u660e\u7ff0\uff0c2009\u5e74\u5f00\u59cb\u5728\u5e95\u7279\u5f8b\u6469\u5c14\u5e2e\u6d3e\u5de5\u4f5c\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u516c\u56ed\u6ca1\u6709\u4eba\u62e5\u6709\uff0c\u5b83\u53ea\u662f\u4ece\u88c2\u7f1d\u4e2d\u6389\u4e86\u51fa\u6765\u3002\u6211\u4eec\u53ea\u662f\u8bd5\u7740\u8ba9\u5b83\u6d3b\u7740\u3002\u5982\u679c\u6ca1\u6709\u56e2\u961f\uff0c\u4f60\u4e0d\u53ef\u80fd\u5728\u51e0\u5929\u5185\u7528\u5272\u8349\u673a\u4fee\u526a\u8fd9\u4e2a\u516c\u56ed\u7684\u8349\u576a.\u3002\n\u7a7a\u6c14\u4e2d\u5145\u6ee1\u4e86\u82b1\u7c89\uff0c\u56e0\u4e3a\u8fd9\u7fa4\u4eba\u586b\u6ee1\u4e86\u51e0\u5341\u4e2a\u5783\u573e\u888b\uff0c\u53ea\u7559\u4e0b\u4e86\u4fee\u526a\u5f97\u5b8c\u7f8e\u65e0\u7f3a\u7684\u7530\u91ce\u3002\u53c2\u4e0e\u8005\u8868\u793a\uff0c\u5728\u793e\u4ea4\u8ddd\u79bb\u7684\u540c\u65f6\uff0c\u8fd9\u662f\u4e00\u9879\u4ee4\u4eba\u6ee1\u8db3\u7684\u6d3b\u52a8\u3002\n\u6b65\u5c65\u8e52\u8dda\u5730\u5750\u8fdb\u5979\u7684Dixie Chopper\uff0c\u6c49\u5a1c\u00b7\u8303\u57c3\u5e93\u7279(Hannah VanEckoute)\u51c6\u5907\u593a\u56de\u5979\u7684\u7fbd\u7ed2\u51a0\u519b\u5934\u8854\u3002\u5979\u548c\u5979\u6765\u81ea\u8d1d\u5c14\u7ef4\u5c14\u7684\u4e08\u592b\u76d6\u5947(Gage)\u628a\u4ed6\u4eec\u7684\u4e24\u53f0\u5272\u8349\u673a\u548c\u9664\u8349\u673a\u5e26\u5230\u4e86\u52a0\u5165\u8fd9\u4e2a\u56e2\u4f19\u7684\u7b2c\u56db\u4e2a\u5e74\u5934\u3002\n28\u5c81\u7684VanEckoute\u8bf4\uff0c\u5f53\u4eba\u4eec\u770b\u5230\u6211\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u65f6\uff0c\u4ed6\u4eec\u7684\u53cd\u5e94\u603b\u662f\u5982\u6b64\u7279\u522b\u3002\u6709\u65f6\u5019\u8349\u592a\u9ad8\u4e86\uff0c\u5b69\u5b50\u4eec\u751a\u81f3\u8fdb\u4e0d\u53bb\uff0c\u7136\u540e\u6211\u4eec\u79bb\u5f00\u65f6\u4ed6\u4eec\u8138\u4e0a\u7684\u7b11\u5bb9\u5c31\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u5c31\u3002\n5\u670816\u65e5\uff0c\u661f\u671f\u516d\uff0c\u5e95\u7279\u5f8b\uff0c\u6bd4\u5c14\u00b7\u5362\u5361\u65af\u5728Hammerberg Playfield\u6361\u5783\u573e\u3002(\u6444\u5f71\uff1a\u5e95\u7279\u5f8b\u65b0\u95fb\u62a5Max Ortiz)\u3002\n\u5341\u5e74\u524d\uff0c\u7eb3\u5c14\u591a\u4eceCraigslist\u4e70\u4e86\u4e00\u8f86\u8349\u576a\u62d6\u62c9\u673a\uff0c\u6765\u523075\u53f7\u5dde\u9645\u516c\u8def\u548c8\u82f1\u91cc\u8def\u4e0a\u7684\u4e00\u4e2a\u516c\u56ed\u3002\u4ed6\u8bf4\uff0c\u4ed6\u5728Facebook\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2a\u7fa4\uff0c\u5bfb\u627e\u5176\u4ed6\u53ef\u4ee5\u52a0\u5165\u8fd9\u4e2a\u9879\u76ee\u7684\u4eba\uff0c\u6700\u7ec8\uff0c\u8fd9\u4e2a\u7fa4\u53d8\u6210\u4e86\u4e00\u4e2a\u5272\u8349\u673a\u56e2\u4f19\u3002\n\u7eb3\u5c14\u591a\u8bf4\uff0c\u5f53\u5e95\u7279\u5f8b\u5373\u5c06\u7533\u8bf7\u7834\u4ea7\u65f6\uff0c\u5e95\u7279\u5f8b\u6709300\u591a\u4e2a\u516c\u56ed\uff0c\u8be5\u5e02\u8868\u793a\u53ea\u80fd\u7167\u987e\u5927\u7ea672\u4e2a\u516c\u56ed\u3002\n\u8d2d\u4e70\u7167\u7247\u5e95\u7279\u5f8b\u6469\u5c14\u5e2e\u6d3e\u7684\u67e5\u7406\u00b7\u65af\u76ae\u65af\u5728\u4ed6\u4eec2020\u5e74\u7684\u6469\u57ce\u964d\u843d\u8d5b\u4e2d\u4fee\u7406\u79cb\u5343\u3002(\u6444\u5f71\uff1a\u9a6c\u514b\u65af\u00b7\u5965\u5c14\u8482\u65af\uff0c\u300a\u5e95\u7279\u5f8b\u65b0\u95fb\u300b)\u3002\n\u53bb\u5e74\uff0c\u521b\u59cb\u4eba\u6210\u7acb\u4e86\u4e00\u4e2a\u540d\u4e3a\u788e\u7247\u4e4b\u654c\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u8fd8\u4e3b\u529e\u4e86\u5783\u573e\u6355\u9c7c\u6d3b\u52a8\uff0c\u540c\u4e00\u4e2a\u7ec4\u7ec7\u4ece\u5e95\u7279\u5f8b\u6cb3\u4e2d\u62c9\u51fa\u5783\u573e\u3002\n\u8be5\u7ec4\u7ec7\u8868\u793a\uff0c\u7531\u4e8e\u57ce\u5e02\u6b63\u5728\u8ffd\u8d76\u4ed6\u4eec\uff0c\u6bcf\u5e74\u88ab\u4fa6\u5bdf\u7684\u5730\u5757\u8d8a\u6765\u8d8a\u5c11\u3002\n\u7eb3\u5c14\u591a\u7b11\u7740\u8bf4\uff1a\u201c\u6211\u4eec\u5e0c\u671b\u4ed6\u4eec\u80fd\u8ba9\u6211\u4eec\u5012\u95ed\u3002\u201d\u6211\u4eec\u53ef\u4ee5\u6210\u7acb\u4e00\u4e2a\u4fdd\u9f84\u7403\u8054\u76df\u4ec0\u4e48\u7684\u3002", "note_en": "Detroit\u00a0\u2014 The Detroit Mower Gang refuses to let small budgets and bureaucracy stand in the way of great playgrounds.\n Twenty-five volunteer lawnmowers\u00a0left quarantine Saturday to compete\u00a0for a championship belt awarded to the person who\u00a0cuts the most grass during their 12-hour Motown Mowdown.\n Buy Photo Tom Nardone, founder of the Detroit Mower Gang, shows off the championship belt given to the member who mows the most grass in their 12- hour Motown Mowdown which started at Hammerberg Playfield in Detroit on Saturday, May 16, 2020. \u00a0 (Photo: Max Ortiz, The Detroit News)\n They kicked off at Hammerberg Playfield, an un-owned park on Detroit&#39;s west side, tackling the overgrown lawn, repairing swingsets for the Barton-McFarland neighborhood before splitting up to cleanup 10 other abandoned playgrounds in the city.\n &#34;No one owns this particular park, it just fell through the cracks,&#34; said Tom Nardone, 50, of Birmingham, who started\u00a0the Detroit Mower Gang in 2009. &#34;We just try to keep it alive. ...\u00a0Without a group, you couldn&#39;t mow this park with a mower in a couple of days.&#34;\n  The air was filled with pollen as the group filled dozens of trash bags and only leaving behind perfectly trimmed fields. Participants said it was a fulfilling activity to do while social distancing.\n Staddled into her Dixie Chopper, Hannah VanEckoute was ready to reclaim her title as the Mowdown champion. She and her\u00a0husband, Gage, from Belleville, brought their two lawnmowers and weed whackers to their fourth year with the gang.\n &#34;The reaction from people when they see what we&#39;ve done is always so special,&#34; said VanEckoute, 28. &#34;Sometimes the grass is so tall kids can&#39;t even get into it and then the smile on their faces as we leave is such a great accomplishment.&#34;\n Buy Photo Bill Lucas picks up trash at Hammerberg Playfield in Detroit on Saturday, May 16. \u00a0 (Photo: Max Ortiz, The Detroit News)\n A decade ago, Nardone bought a lawn tractor off Craigslist and took to a park on Interstate 75 and Eight Mile Road. He started a  Facebook group to find others who could join the project and eventually, it turned into a mower gang, he said.\n &#34;When the city was getting close to filing for bankruptcy there were more than 300 parks in Detroit and the city said it could only care for like 72,&#34; said Nardone.\n Buy Photo Charlie Spiess, of the Detroit Mower Gang, repairs a swing during their 2020 Motown Mowdown. \u00a0 (Photo: Max Ortiz, The Detroit News)\n Last year, the founders formed a nonprofit called Enemies of Debris and also host trash fishing, where the same group pulls trash out of the Detroit River.\n The group said there have been fewer lots scouted each year because the city is catching up to them.\n &#34;We hope they put us out of business,&#34; Nardone said laughing. &#34;We could start a bowling league or something.&#34;", "posttime": "2020-05-17 06:56:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e89\u593a\u6218,playground,\u5e95\u7279\u5f8b", "title": "\u5730\u76d8\u4e89\u593a\u6218\uff1a\u5e95\u7279\u5f8b\u6469\u5c14\u5e2e\u7ade\u4e8912\u5c0f\u65f6\u7684\u64cd\u573a\u6e05\u7406", "title_en": "Turf war: Detroit Mower Gang competes in 12-hour playground cleanup", "transed": 1, "url": "https://www.detroitnews.com/story/news/local/detroit-city/2020/05/16/turf-war-detroit-mower-gang-competes-playground-cleanup/5201499002/", "via": "", "real_tags": ["\u4e89\u593a\u6218", "\u5e95\u7279\u5f8b"]}, {"category": "", "categoryclass": "", "imagename": "778c846a152e2049675e63a0807af38e.png", "infoid": 1002461, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c24\u5176\u662f\u73b0\u5728\uff0c\u6709\u4e1c\u897f\u53ef\u8bfb\u662f\u4ef6\u597d\u4e8b\u3002\u65b0\u4e8b\u7269\uff0c\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u548c\u4e0d\u540c\u58f0\u97f3\u7684\u4e1c\u897f\uff0c\u4e0d\u540c\u7684\u5934\u8111\u8c08\u8bba\u4ed6\u4eec\u7684\u60f3\u6cd5\u548c\u7ecf\u5386\uff0c\u8bb2\u8ff0\u4ed6\u4eec\u7684\u6545\u4e8b\uff0c\u53d1\u5e03\u4e0e\u4ed6\u4eec\u76f8\u5173\u7684\u56fe\u7247\u548c\u4e8b\u60c5\u3002\u51e0\u5e74\u524d\uff0c\u53ef\u80fd\u662f8\u5e74\u621610\u5e74\u524d\uff0c\u4e92\u8054\u7f51\u4e0a\u6709\u535a\u5ba2\uff0c\u65f6\u95f4\u53ef\u80fd\u6bd4\u5f88\u591a\u4eba\u8bb0\u5fc6\u4e2d\u7684\u90fd\u8981\u957f\u3002\u4f60\u53ef\u4ee5\u56db\u5904\u641c\u7d22\uff0c\u4ed6\u4eec\u751a\u81f3\u5728\u7f51\u7edc\u641c\u7d22\u4e2d\u4e5f\u4f1a\u51fa\u73b0\uff0c\u4f60\u4f1a\u53d1\u73b0\u81ea\u5df1\u6b63\u5728\u9605\u8bfb\u67d0\u4eba\u7684\u535a\u5ba2\u3002\u4e5f\u8bb8\u8fd9\u662f\u4ed6\u4eec\u5728\u65e5\u672c\u627e\u5230\u4e00\u4efd\u6559\u5b66\u5de5\u4f5c\u65f6\u7684\u751f\u6d3b\u7f16\u5e74\u53f2\uff0c\u8bb0\u5f55\u4e86\u4ed6\u4eec\u7b2c\u4e00\u6b21\u5982\u4f55\u79bb\u5f00\u7f8e\u56fd\uff0c\u90a3\u91cc\u7684\u6240\u6709\u65b0\u4e8b\u7269\uff0c\u6ed1\u677f\uff0c\u7ed3\u8bc6\u4eba\u4eec\uff0c\u8bd5\u56fe\u7ed3\u8bc6\u5973\u5b69\uff0c\u6216\u8005\u662f\u4e00\u540d\u6444\u5f71\u5e08\u5728\u7c73\u8bfa\u5361\u5c9b\u6216\u897f\u73ed\u7259\u7684\u67d0\u4e2a\u5c9b\u5c7f\u5de5\u4f5c\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u5f53\u65f6\u97f3\u4e50\u6572\u54cd\u4e86\u6447\u6eda\u573a\u9762\uff0c\u6240\u6709\u7684\u5e74\u8f7b\u4eba\u90fd\u7a7f\u7740\u76ae\u8863\u548c\u7d27\u8eab\u725b\u4ed4\u88e4\uff0c\u968f\u7740\u6447\u6eda\u8df3\u821e\uff0c\u5199\u4e0b\u4e86\u4ed6\u5bf9\u81ea\u5df1\u5728\u54ea\u91cc\u9002\u5408\u8fd9\u4e2a\u573a\u666f\u7684\u60f3\u6cd5\uff0c\u56e0\u4e3a\u4ed6\u6709\u70b9\u8001\u4e86\uff0c\u4f46\u5e76\u4e0d\u8001\uff0c\u6216\u8005\u662f\u4e00\u672c\u5947\u602a\u548c\u4e0d\u8001\u7684\u6c47\u7f16\u3002\u6216\u8005\u662f\u4e00\u4e9b\u7537\u4eba\u5728\u4ed6\u7684\u8f66\u5e93\u91cc\u7528\u6728\u5934\u6216\u7535\u5b50\u4ea7\u54c1\u505a\u7684\u4e1c\u897f\uff0c\u6216\u8005\u4e00\u4e9b\u65e5\u672c\u5973\u5b69\u4e0a\u4f20\u4e86\u81ea\u5df1\u770b\u8d77\u6765\u975e\u5e38\u7c89\u7ea2\u8272\u548c\u5145\u6c14\u7684\u7167\u7247\uff0c\u5e76\u7528\u5b83\u4eec\u5199\u4e86\u4e00\u4e9b\u5c0f\u4e1c\u897f\u3002\n\u5982\u4eca\uff0c\u5f53\u6bcf\u4e2a\u4eba\u90fd\u88ab\u5c01\u9501\uff0c\u767d\u5929\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u53ea\u6709\u65f6\u95f4\u53ef\u4ee5\u6d88\u78e8\uff0c\u591c\u665a\u4e5f\u662f\u5982\u6b64\uff0c\u4f60\u53ef\u4ee5\u6ce1\u4e00\u676f\u70ed\u8336\u6216\u4e00\u676f\u5496\u5561\uff0c\u7136\u540e\u5750\u4e0b\u6765\uff0c\u4f46\u5f53\u4f60\u770b\u90a3\u91cc\u7684\u65f6\u5019\uff0c\u6839\u672c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bfb\u7684\u3002\u4f60\u4e0d\u80fd\u8fdb\u5165\u90a3\u4e9b\u72ec\u7279\u7684\u58f0\u97f3\uff0c\u5199\u4e0b\u4ed6\u4eec\u5173\u5fc3\u7684\u4e8b\u60c5\uff0c\u53d1\u751f\u5728\u4ed6\u4eec\u8eab\u4e0a\u7684\u4e8b\u60c5\u3002\n\u524d\u51e0\u5929\u6211\u627e\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u4e00\u4e2a\u4e5f\u6ca1\u627e\u5230\u3002\u5b83\u4eec\u66fe\u7ecf\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u3002\u4f60\u53ea\u9700\u70b9\u51fb\u4f60\u5728Blogger\u4e0a\u8ba4\u8bc6\u7684\u4e00\u4e2a\u535a\u5ba2\uff0c\u7136\u540e\u70b9\u51fbBlogger\u7684\u968f\u673a\u535a\u5ba2\u6309\u94ae\uff0c\u6216\u8005\u8fdb\u5165\u4f60\u77e5\u9053\u7684\u535a\u5ba2\u7684\u4fa7\u680f\uff0c\u90a3\u91cc\u603b\u662f\u6709\u4ed6\u4eec\u559c\u6b22\u7684\u535a\u5ba2\u5217\u8868\uff0c\u6709\u65f6\u662f\u56db\u4e94\u4e2a\uff0c\u6709\u65f6\u662f20\u4e2a\u5176\u4ed6\u535a\u5ba2\u3002Tumbler\u4e5f\u662f\u5982\u6b64\u3002\n\u535a\u5ba2\u8fc7\u53bb\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u662f\u56e0\u4e3a\u6709\u4e86\u535a\u5ba2\u5e73\u53f0\u3002\u4f46\u662fBlogger\u5728\u51e0\u5e74\u524d\u5c31\u88ab\u8c37\u6b4c\u5173\u95ed\u4e86\uff0c\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u90a3\u91cc\u7684\u535a\u5ba2\u4e00\u76f4\u5728\u6d88\u5931\uff0c\u4f60\u5c31\u662f\u627e\u4e0d\u5230\u771f\u6b63\u7684\u535a\u5ba2\uff0c\u800c\u4e14\u5b83\u4eec\u4e0d\u518d\u5728\u641c\u7d22\u4e2d\u88ab\u7d22\u5f15\u3002Tumbler\u4e5f\u88ab\u4eba\u4eec\u7528\u6765\u8bb0\u5f55\u4ed6\u4eec\u7684\u751f\u6d3b\u548c\u5174\u8da3\uff0c\u867d\u7136\u4e5f\u6709\u5f88\u591a\u53ea\u662f\u56fe\u7247\u7684\u535a\u5ba2\uff0c\u4f46\u5b83\u6700\u8fd1\u6539\u53d8\u4e86\u653f\u7b56\uff0c\u73b0\u5728\u4e0d\u5141\u8bb8NSFW\u5185\u5bb9\uff0c\u8fd9\u57fa\u672c\u4e0a\u635f\u5bb3\u4e86\u6240\u6709\u63d0\u5230\u4e0d\u5b8c\u5168PG\u7684\u535a\u5ba2\u3002\u6240\u6709\u6211\u6709\u4e66\u7b7e\u7684\u65e7Tumbler\u535a\u5ba2\u6211\u90fd\u4e0d\u80fd\u518d\u8bbf\u95ee\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u88abTumbler\u8ba4\u4e3a\u6709NSFW\u5185\u5bb9\u3002\u6211\u60f3\u90a3\u4e9b\u4eba\u5728\u628a\u6240\u6709\u7684\u7cbe\u529b\u90fd\u6295\u5165\u5230\u5236\u4f5c\u8fd9\u6837\u4e00\u4e2a\u7279\u522b\u7684\u4e1c\u897f\u4e4b\u540e\u4f1a\u6709\u4ec0\u4e48\u611f\u89c9\uff0c\u7136\u540eTumbler\u5c31\u628a\u5b83\u6bc1\u4e86\u3002\u8fd9\u5c31\u662f\u7ed3\u675f\u4e86\u3002\u6ca1\u6709\u529e\u6cd5\u627e\u5230\u535a\u5ba2\uff0c\u4e5f\u6ca1\u6709\u4eba\u5728\u5199\u535a\u5ba2\uff0c\u56e0\u4e3a\u6ca1\u6709\u5e73\u53f0\u53ef\u4f9b\u4ed6\u4eec\u4f7f\u7528\u3002\n\u4f46\u5982\u679c\u6211\u80fd\u5e26\u56de\u4e00\u6837\u4e1c\u897f\uff0c\u6211\u4f1a\u628a\u5b83\u4eec\u5e26\u56de\u4e92\u8054\u7f51\u3002\u5b83\u4eec\u662f\u6211\u6700\u6000\u5ff5\u4e5f\u662f\u6700\u7ecf\u5e38\u6000\u5ff5\u7684\u4e1c\u897f\u3002\u4ed6\u4eec\u662f\u8fd9\u91cc\u6700\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u9664\u4e86\u53ef\u4ee5\u66f4\u81ea\u7531\u5730\u83b7\u5f97\u65b0\u95fb\uff0cYouTube\u4e0a\u514d\u8d39\u4f46\u8d28\u91cf\u4e0d\u9ad8\u7684\u89c6\u9891\u5185\u5bb9\uff0c\u6211\u60f3\u8fd8\u6709\u4e00\u4e9b\u793e\u4ea4\u5a92\u4f53\u3002\u4f46\u535a\u5ba2\u662f\u4f60\u53ef\u4ee5\u5750\u4e0b\u6765\u9605\u8bfb\u7684\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u771f\u6b63\u8fdb\u5165\u535a\u5ba2\uff0c\u4ee5\u81f3\u4e8e\u4f60\u751a\u81f3\u5fd8\u4e86\u81ea\u5df1\u5728\u54ea\u91cc\uff0c\u60f3\u60f3\u4f60\u60f3\u5982\u4f55\u5728\u751f\u6d3b\u4e2d\u5c1d\u8bd5\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u6216\u8005\u53ea\u662f\u4eab\u53d7\u5b83\u4eec\u7684\u5199\u4f5c\uff0c\u4f60\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u9605\u8bfb\u8fc7\u53bb\u7684\u535a\u5ba2\u5e16\u5b50\uff0c\u7a0d\u540e\u518d\u8c03\u56de\uff0c\u770b\u770b\u81ea\u4ece\u4f60\u8bfb\u5230\u5173\u4e8e\u5b83\u4eec\u7684\u6700\u540e\u4e00\u7bc7\u6587\u7ae0\u4ee5\u6765\uff0c\u5b83\u4eec\u90fd\u53d1\u5e03\u4e86\u4ec0\u4e48\u3002\n\u5f53\u4f60\u641c\u7d22\u73b0\u5728\u7684\u535a\u5ba2\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\u524d100\u4e2a\u535a\u5ba2\u3002\u5982\u4f55\u5236\u4f5c\u4e00\u4e2a\u6210\u529f\u7684\u535a\u5ba2\u3002\u6700\u5f3a\u5927\u768450\u4e2a\u535a\u5ba2\u3002\u4f46\u4f60\u771f\u6b63\u60f3\u8981\u7684\u662f1\u4e07\u4e2a\u4e0d\u6210\u529f\u7684\u535a\u5ba2\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u5f53\u4f60\u5728\u641c\u7d22\u535a\u5ba2\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\u5982\u4f55\u505a\u4e00\u4e2a\u6210\u529f\u7684\u535a\u5ba2\u3002\u6700\u5f3a\u5927\u768450\u4e2a\u535a\u5ba2\u3002\u4f46\u4f60\u771f\u6b63\u60f3\u8981\u7684\u662f1\u4e07\u4e2a\u4e0d\u6210\u529f\u7684\u535a\u5ba2\u3002\u201d\u7f51\u7edc\u641c\u7d22\u73b0\u5728\u4e3a\u4f60\u7684\u535a\u5ba2\u63d0\u4f9b\u70b9\u5b50\u5efa\u8bae\uff0c\u4ee5\u83b7\u5f97\u6d4f\u89c8\u91cf\u3001\u5206\u4eab\u548c\u7d22\u5f15\uff0c\u4f46\u4f60\u771f\u6b63\u60f3\u8981\u7684\u662f\u6ca1\u6709\u70b9\u5b50\u3002\u73b0\u5728\u51e0\u4e4e\u4e0d\u53ef\u80fd\u627e\u5230\u4e00\u4e2a\u4e3b\u9898\u4e0d\u96c6\u4e2d\u7684\u535a\u5ba2\uff0c\u56e0\u4e3a\u8fd9\u662f\u641c\u7d22\u5f15\u64ce\u5173\u6ce8\u7684\u91cd\u70b9\uff0c\u4e5f\u662f\u7f51\u7ad9\u5982\u4f55\u83b7\u5229\u7684\u3002\u4f46\u4f60\u60f3\u8981\u7684\u6070\u6070\u76f8\u53cd\uff0c\u4e00\u4e2a\u4ece\u6765\u6ca1\u6709\u8bd5\u56fe\u96c6\u4e2d\u7cbe\u529b\uff0c\u751a\u81f3\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8fd9\u4e00\u70b9\u7684\u535a\u5ba2\u3002\u8fc7\u53bb\u4f3c\u4e4e\u6709\u65e0\u7a77\u65e0\u5c3d\u7684\u641c\u7d22\u7ed3\u679c\u88ab\u8c37\u6b4c\u548c\u5176\u4ed6\u88ab\u8c37\u6b4c\u627c\u6740\u7684\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u3002\u4e5f\u8bb8\u4f60\u4f1a\u770b\u52304\u4e07\u4e2a\u641c\u7d22\u7ed3\u679c\u3002\u73b0\u5728\u5b83\u8bf4\u670940,000\u4e2a\uff0c\u4f46\u4f60\u53ea\u80fd\u5f97\u523010\u523020\u9875\u7684\u7ed3\u679c\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u516c\u53f8\u7684\uff0c\u800c\u4e14\u5f88\u5dee\u52b2\u3002\u4f60\u518d\u4e5f\u770b\u4e0d\u5230\u7b2c100\u9875\u4e86\u3002\u5373\u4f7f\u6709\u4eba\u5efa\u7acb\u4e86\u4e00\u4e2a\u722c\u866b\u7d22\u5f15\u5668\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u641c\u7d22\u6240\u6709\u4e1c\u897f\uff0c\u5305\u62ec\u4e0d\u53d7\u6b22\u8fce\u6216\u88ab\u7b97\u6cd5\u5224\u5b9a\u4e3a\u76f8\u5173\u7684\u4e1c\u897f\uff0c\u90a3\u4e5f\u662f\u4ef6\u597d\u4e8b\u3002DuckDuckGo\u7b49\u66ff\u4ee3\u5f15\u64ce\u7684\u95ee\u9898\u662f\uff0c\u5b83\u4eec\u53ea\u4f7f\u7528\u8c37\u6b4c\u641c\u7d22\uff0c\u800c\u4e0d\u662f\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u722c\u884c\u548c\u7d22\u5f15\u4e1c\u897f\u3002\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\u4e86\uff0c\u4ed6\u4eec\u5c06\u662f\u6709\u8da3\u548c\u6709\u7528\u7684\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u51fa\u4e8e\u4fdd\u62a4\u9690\u79c1\u7684\u539f\u56e0\u3002\u867d\u7136\u6709\u4eba\u8bf4\u8c37\u6b4c\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\n\u9690\u79c1\u4fdd\u62a4\u548c\u4e0d\u80fd\u5c06\u5176\u66f4\u6539\u4e3a\u6076\u610f\u4f7f\u7528\uff0c\u5fc5\u987b\u5728\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u6000\u7591\u62c9\u91cc\u548c\u8c22\u5c14\u76d6\uff0c\u751a\u81f3\u76d6\u8328\uff0c\u5982\u679c\u4ed6\u4eec\u77e5\u9053\u5b83\u5c06\u88ab\u7528\u6765\u505a\u4ec0\u4e48\uff0c\u4ed6\u4eec\u4f1a\u4ee5\u4ed6\u4eec\u6240\u505a\u7684\u65b9\u5f0f\u521b\u9020\u51fa\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u8fd9\u4e9b\u4eba\u73b0\u5728\u53ef\u4ee5\u5c1d\u8bd5\u5728\u4ed6\u4eec\u7684\u751f\u6d3b\u4e2d\u5bfb\u627e\u5176\u4ed6\u4e8b\u60c5\u505a\uff0c\u6216\u8005\u7528\u6148\u5584\u6765\u5f25\u8865\uff0c\u4f46\u4ed6\u4eec\u7684\u53d1\u660e\u662f\u5728\u5982\u6b64\u6781\u7aef\u7684\u6c34\u5e73\u4e0a\u7528\u6765\u5bf9\u4ed8\u4eba\u7684\u53ef\u6015\u7684\u5de5\u5177\u3002\u4efb\u4f55\u4ed6\u4eec\u8ba4\u4e3a\u6709\u4e00\u5929\u53ef\u80fd\u4f1a\u53d8\u5927\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u4eba\u90fd\u5e94\u8be5\u5728\u4e00\u5f00\u59cb\u5c31\u53c2\u4e0e\u8fdb\u6765\uff0c\u9632\u6b62\u5f53\u5b83\u5bf9\u5f3a\u5927\u7684\u5b9e\u4f53\u6709\u7528\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u8d1f\u9762\u5229\u7528\u3002\u6211\u4e0d\u786e\u5b9a\u6258\u7ba1\u670d\u52a1\u5668\u662f\u5426\u53ef\u4ee5\u8bbe\u5728\u7f8e\u56fd\uff0c\u56e0\u4e3a\u7f8e\u56fd\u4e0d\u4fdd\u62a4\u9690\u79c1\u6216\u4e92\u8054\u7f51\u4f7f\u7528\u3002\u6211\u4e0d\u77e5\u9053\u54ea\u91cc\u6709\u3002\u6211\u8bfb\u5230\u963f\u6839\u5ef7\u6709\u5baa\u6cd5\u4fdd\u62a4Insernet\u8a00\u8bba\uff0c\u5c3d\u7ba1\u8fd9\u79cd\u81ea\u7531\u53d7\u5230\u7981\u6b62\u64b0\u5199\u5173\u4e8e\u672c\u56fd\u653f\u5e9c\u7684\u6587\u7ae0\u7684\u9650\u5236\u3002\u618e\u6068\u963f\u6839\u5ef7\u62e5\u6709\u53d7\u4fdd\u62a4\u7684\u8a00\u8bba\u81ea\u7531\u7684\u4e92\u8054\u7f51\uff0c\u800c\u7f8e\u56fd\u3001\u52a0\u62ff\u5927\u548c\u6b27\u6d32\u5374\u4e0d\u4fdd\u62a4\u4e92\u8054\u7f51\u4e0a\u7684\u4eba\u6743\u7684\u5b9e\u4f53\u4f1a\u8bf4\uff0c\u5f88\u597d\uff0c\u56e0\u4e3a\u963f\u6839\u5ef7\u4e3a\u6050\u6016\u4e3b\u4e49\u548c\u4f24\u5bb3\u513f\u7ae5\u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u8fd9\u662f\u90a3\u4e9b\u60f3\u8981\u653b\u51fb\u4e2a\u4eba\u6216\u7cfb\u7edf\u7684\u4eba\u6700\u559c\u6b22\u7684\u4e24\u4e2a\u8bf4\u6cd5\uff0c\u800c\u8fd9\u4e9b\u4eba\u6216\u7cfb\u7edf\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u505a\u9519\u4ec0\u4e48\uff0c\u4ed6\u4eec\u9700\u8981\u5f15\u8d77\u652f\u6301\u8005\u7684\u8b66\u89c9\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u884c\u4e3a\u5728\u963f\u6839\u5ef7\u662f\u88ab\u7981\u6b62\u7684\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u4ed6\u4eec\u4e92\u8054\u7f51\u4e0a\u7684\u8a00\u8bba\u548c\u8868\u8fbe\u662f\u7981\u6b62\u7684\uff0c\u5305\u62ec\u90a3\u4e9b\u4e1c\u897f\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u4ec5\u4ec5\u662f\u8fd9\u4e2a\u60f3\u6cd5\uff1a\u975e\u6cd5\u4fe1\u606f\u3002\u975e\u6cd5\u8a00\u8bba\u3002\n\u6211\u4e0d\u786e\u5b9a\u5982\u4f55\u4fdd\u62a4\u5e73\u53f0\u3002\u6216\u8bb8\u53ef\u4ee5\u53ca\u65e9\u4e0eEFF\u8fd9\u6837\u503c\u5f97\u4fe1\u8d56\u7684\u900f\u660e\u7ec4\u7ec7\u5408\u4f5c\uff0c\u8ba9\u4ed6\u4eec\u5b9a\u671f\u516c\u5f00\u5ba1\u8ba1\u5e73\u53f0\uff0c\u5e76\u8868\u793a\uff0c\u5982\u679c\u8fd9\u4e00\u70b9\u53d1\u751f\u53d8\u5316\uff0c\u5bf9\u5e73\u53f0\u7684\u516c\u5f00\u900f\u660e\u5b9a\u671f\u5ba1\u8ba1\u5e94\u8be5\u7acb\u5373\u963b\u6b62\u5b83\uff0c\u7528\u6237\u5e94\u8be5\u7acb\u5373\u8ba4\u4e3a\u5b83\u53d7\u5230\u4e86\u635f\u5bb3\uff0c\u5e76\u505c\u6b62\u4f7f\u7528\u5b83\u3002\n\u6b64\u5916\uff0c\u4f60\u5fc5\u987b\u5c06\u5185\u5bb9\u6c38\u8fdc\u4fdd\u5b58\u5728\u5907\u4efd\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u5426\u5219\uff0c\u5982\u679c\u6709\u4e00\u5929\u5e73\u53f0\u4f1a\u50cfBloger\u548cTumbler\u90a3\u6837\u5220\u9664\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u89c9\u5f97\u81ea\u5df1\u591a\u5e74\u6765\u5728\u535a\u5ba2\u4e0a\u7684\u52aa\u529b\u662f\u503c\u5f97\u7684\u3002\u4e5f\u8bb8\u5e73\u53f0\u6ca1\u6709\u592a\u591a\u94b1\uff0c\u6240\u4ee5\u4e0d\u80fd\u4fdd\u5b58\u56fe\u7247\u6216\u89c6\u9891\uff0c\u4f46\u81f3\u5c11\u5e94\u8be5\u4fdd\u7559\u6587\u672c\u3002\n\u6b64\u5916\uff0c\u5e73\u53f0\u5fc5\u987b\u76c8\u5229\u6216\u627f\u8bfa\u5728\u4e0d\u6ee5\u7528\u7528\u6237\u6216\u5ba2\u4eba\u7684\u60c5\u51b5\u4e0b\u672a\u6765\u76c8\u5229\u3002\u8fd9\u53ef\u4ee5\u662f\u67d0\u5bb6\u5927\u578b\u4e92\u8054\u7f51\u5e7f\u544a\u516c\u53f8\u63d0\u4f9b\u7684\u5e7f\u544a\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f5c\u4e3a\u5e73\u53f0\u4e00\u90e8\u5206\u7684\u5e7f\u544a\u516c\u53f8\u63d0\u4f9b\u7684\u5e7f\u544a\u3002\u6ca1\u6709\u592a\u591a\u7684\u5e7f\u544a\uff0c\u6240\u4ee5\u535a\u5ba2\u88ab\u6bc1\u4e86\uff0c\u4f46\u53ef\u80fd\u5728\u5e95\u90e8\u6216\u9876\u90e8\u548c\u5e95\u90e8\u90fd\u6709\u5e7f\u544a\uff0c\u4fdd\u7559\u4e86\u5c5e\u4e8e\u535a\u5ba2\u4f5c\u8005\u7684\u7a7a\u95f4\u3002\u6b64\u5916\uff0c\u8be5\u516c\u53f8\u53ef\u80fd\u6c38\u8fdc\u4e0d\u5e94\u8be5\u4e0a\u5e02\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u51e0\u5bb6\u5927\u516c\u53f8\u6216\u653f\u5e9c\u7684\u53c2\u4e0e\u5982\u4f55\u8ba9\u4e92\u8054\u7f51(\u4ee5\u53ca\u8fc7\u53bb\u7684\u8868\u8fbe\u5f62\u5f0f)\u53d8\u5f97\u66f4\u7cdf\uff0c\u8fd9\u4e24\u4ef6\u4e8b\u4e2d\u4efb\u4f55\u4e00\u4ef6\u4e8b\u7684\u53c2\u4e0e\u7a0b\u5ea6\u90fd\u4f1a\u4fb5\u8680\u6216\u5b8c\u5168\u6467\u6bc1\u5b83\u3002\n\u5373\u4eba\u4eec\u53ef\u4ee5\u5b89\u5168\u5730\u79c1\u4e0b\u5199\u535a\u5ba2\u7684\u5e73\u53f0\uff0c\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\uff0c\u535a\u5ba2\u4e0d\u80fd\u88ab\u8f6c\u5316\u4e3a\u8fb1\u9a82\u4ed6\u4eba\u7684\u5de5\u5177\uff0c\u9690\u79c1\u3001\u601d\u60f3\u3001\u8868\u8fbe\u548c\u8ba8\u8bba\u7684\u81ea\u7531\u5f97\u5230\u7ef4\u62a4\uff0c\u8a00\u8bba\u4e0d\u4f1a\u53d7\u5230\u5bd2\u8749\u6548\u5e94\u3002", "note_en": "Nowadays especially it&#39;s nice to have things to read. New things, things from various sources and various voices, various minds talking about their thoughts and experiences, telling their stories, posting pictures and things that are relevant to them. A couple of years ago, maybe 8 or 10 so maybe longer than a lot of people will be able to remember, there were blogs on the internet. You could search around and they&#39;d come up even in websearch, and you&#39;d find yourself reading someone&#39;s blogs. Maybe it was chronicles of their life as they got a job teaching in Japan and how it was leaving American for the first time and all the new things there and skateboarding and meeting people and trying to meet girls, or a photographer working for a while in Minorca or some island off Spain when music hit a rock scene period and all the young people were dressing up in leather and tight jeans and going out dancing to dance rock and writing about his thoughts on where he fit into the scene as he was kind of older but not old, or a compilation of weird and unexplained science and gnostic wisdom, or the things some guy was making out of wood or electronics in his garage, or some Japanese girl who posted pictures of herself looking extremely pink and pneumatic and writing little things with them.\n Nowadays when everyone is on lockdown and there are days with nothing but spaces of time to pass, nights too, and you can make a hot tea or a coffee and sit down but when you look there&#39;s nothing to read. You can&#39;t access those unique voices writing about the things they care about, that are happening to them.\n The other day I searched for an hour and couldn&#39;t find even one. They used to be endless. You&#39;d just click on one you knew on Blogger and either click Blogger&#39;s random blog button, or go to the sidebar of the blog you knew where they always had a list of blogs they liked, sometimes four or 5, sometimes 20 other blogs. And the same with Tumbler.\n Blogs used to exist because there were blogging platforms. But Blogger was shut down by Google years ago, and the blogs on there have been disappearing until now you just can&#39;t find really any, and they&#39;re not indexed in search anymore. Tumbler also was used by people to blog about their lives and interests, although there were also a lot of just pictures blogs, but it recently changed its policy and now permits no NSFW content, which compromised basically every blog that mentioned something not completely PG. All the old Tumbler blogs I had bookmarks for I can&#39;t even access anymore because they were deemed by Tumbler to have NSFW content. I think about how those people must feel after putting all that work into making such a special thing and then Tumbler just destroys it. And that&#39;s the end. There&#39;s no way to find blogs, and no one is writing them because there&#39;s no platform for them.\n But they would be the one thing I&#39;d bring back to the internet if I could bring one thing back. They&#39;re the thing I miss the most and the most often. They were the most valuable thing on here, besides freer availability of news, free although low quality video content on YouTube, and I guess some kinds of social media. But blogs are something you can sit down and read and get really into to the point you forget where you even are, and think about how you want to try those things maybe in your life, or just enjoy their writing, and you can read deeper into them into past blog posts, and tune back in later and see what they&#39;ve posted since the last things you read about them.\n When you search for blogs now on you see things like &#39;Top 100 Blogs.&#39; &#39;How to Make a Successful Blog.&#39; &#39;Most Powerful 50 Blogs.&#39; But what you really want is 10,000 unsuccessful blogs. Web search now suggests ideas for your blogs to get views, shares, indexed, but what you really want is no ideas. It&#39;s almost impossible now to find a blog that&#39;s not on a focused theme because that&#39;s what search engines focus on and how websites profit. But you want the opposite, a blog that never tried to focus or even thought about it. There used to seem to be endless search results indexed by Google and the other search engines that were killed by Google. Maybe you&#39;d see 40,000 results for your search. Now it says there are 40,000 but you only get 10 or 20 pages of results you can get to, all basically corporate and lame. You can&#39;t get to the 100th page anymore. It&#39;d be nice even if someone built a crawler-indexer that you could use to search for everything including things that weren&#39;t popular or judged by algorithms to be &#39;relevant.&#39; The problem with alternative engines like DuckDuckGo is they just use Google Search and don&#39;t crawl and index things in their own way. If they did they&#39;d be fun and useful to use for reasons other than protection of privacy. Although some people say Google is becoming more and more useless to the point it won&#39;t be revived and may collapse for this reason although even if that were true we&#39;d still have to suffer with it for years.\n  A couple of notes, in case anyone is thinking of starting a new blogging platform:\n There&#39;s no point if you&#39;re not going to protect people, and that means their privacy. Nowadays people won&#39;t share content simply because they don&#39;t trust the internet to share content to it. You have to provide for them to be anonymous and protected forever, which means letting people create accounts easily with just an email or something similar, and log into them or recover their password throught the email if they lose their password, and never any locking them out because you noticed suspicious activity or anything bogus like that and making them provide personal details. That is abuse of trust and abuse of people. They have to be able to blog without thinking someone is going to bring it up and file it away forever and maybe they won&#39;t get a job because of it, or their tyrannical government will think they&#39;re an agitator and attack them or an adversary will use it for selective characger defamation sometime. They have to be able to abandon a blog, start a new one, blog there, abandon it, etc. Otherwise they won&#39;t feel free to write, so you may as well not say you&#39;re going to provide a blogging platform for people if you won&#39;t protect them.\n Privacy protection and the inability of this to be changed to be used maliciously must be baked in at the start. I doubt Larry and Sergei or even Gates would have created what they did the way they did if they knew what it would be used for. Those guys now can try to find other things to do with their lives now, or make up for it with charity, but their inventions are tools terribly used against people on such an extreme level. Anybody creating anything they think might someday become big should bake in at the start prevention against the possibility it could be used negatively when it becomes useful to powerful entities. I&#39;m not sure the hosting servers could be based in the US because the US doesn&#39;t protect privacy or internet usage. I&#39;m not sure where does. I read that Argentina has constitutional law that protect insternet expression, although that freedom is tempered by the prohibition of writing about their own government. Entitites that hate that Argentina has a protected free speech internet while the US and Canada and Europe don&#39;t protect human rights on the internet will say &#39;Well because of that Argentina is providing for terrorism and harming children, the two favorite claims of people who want to attack people or systems when those people or systems haven&#39;t done anything actually wrong and they need to raise alarm in their supporters. Of course, those acts are prohibited in Argentina, but speech and expression on their internet is not, including of those things, as far as I know. I mean, just the idea: &#39;illegal information.&#39; &#39;Illegal speech.&#39;\n I&#39;m not sure how a platform could be protected. Perhaps by partnering early with a trusted, transparent organization like the EFF and having them publicly audit the platform on a regular basis and saying that if this is ever altered and public transparent regular audits of the platform stop it&#39;s users should immediately consider it compromised and stop using it.\n Also, you have to keep the content on the server of backed up forever, otherwise they won&#39;t feel their effort in blogging for years will be worthwhile if the platform will someday just erase it like Blogger and Tumbler did. Maybe the platform doesn&#39;t have a ton of money so it has to not save the images or videos, but at least the text should be maintained.\n Also, the platform must be profitable or promise future profit without abusing users or guests. This can simply be ads provided by one of the big internet ads companies or an ads company that&#39;s part of the platform. Not too many ads so the blogs are ruined, but maybe an ad at the bottom or perhaps the top and bottom, preserving the space that belongs to the blogger. Also the company probably should not ever go public, as we have seen how the involvement of a couple of big corporations or governments made the internet (and past forms of expression) worse, and that any degree of involvement of either of these two things will eat away or completely destroy it.\n Ie, a platform where people can securely and privately blog, where it can&#39;t be converted into a tool for abuse of people, and where freedom of privacy, thought, expression and discussion is maintained and there is no &#39;chilling effect on speech.&#39;", "posttime": "2020-05-17 06:56:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u535a\u5ba2,\u5e26\u56de,internet", "title": "\u5982\u679c\u6211\u80fd\u628a\u4e00\u4ef6\u4e8b\u5e26\u56de\u4e92\u8054\u7f51\uff0c\u90a3\u5c31\u662f\u535a\u5ba2", "title_en": "If I could bring one thing back to the internet it would be blogs", "transed": 1, "url": "http://tttthis.com/blog/if-i-could-bring-one-thing-back-to-the-internet-it-would-be-blogs", "via": "", "real_tags": ["\u535a\u5ba2", "\u5e26\u56de", "internet"]}, {"category": "", "categoryclass": "", "imagename": "d62a9b5d51e0ee62bb8afa7d858937d4.png", "infoid": 1002460, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90e8\u7f72API\u7aef\u70b9\u7684\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u4f8b\u5982\u672c\u4f8b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5728Amazon EC2\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u6f14\u793a\u5982\u4f55\u5c06Amazon ElastiCache\u4e0eAmazon DocumentDB(\u5177\u6709MongoDB\u529f\u80fd)\u96c6\u6210\u3002\u867d\u7136\u672c\u4f8b\u4e2d\u7684\u65b9\u6cd5\u901a\u8fc7\u5f39\u6027\u548c\u6269\u5c55\u6216\u7f29\u5c0fEC2\u5b9e\u4f8b\u6570\u91cf\u4ee5\u9002\u5e94\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u7684\u80fd\u529b\uff0c\u5e2e\u52a9\u5b9e\u73b0\u4e86\u51fa\u8272\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\uff0c\u4f46\u662f\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u81ea\u5df1\u7ba1\u7406EC2\u5b9e\u4f8b\uff0c\u8fd9\u4ecd\u7136\u4f1a\u5e26\u6765\u4e00\u4e9b\u8fd0\u8425\u5f00\u9500\u3002\u89e3\u51b3\u8fd0\u8425\u5f00\u9500\u95ee\u9898\u548c\u76f8\u5173\u6210\u672c\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u5e94\u7528\u7a0b\u5e8f\u8f6c\u53d8\u4e3a\u65e0\u670d\u52a1\u5668\u67b6\u6784\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u7684\u793a\u4f8b\u4f7f\u7528\u4e86\u4e00\u4e2a\u63d0\u4f9b\u7c7b\u4f3c\u7528\u4f8b\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u67b6\u6784\uff0c\u8be5\u67b6\u6784\u5c55\u793a\u4e86\u4e00\u4e9b\u5ba2\u6237\u6b63\u5728\u5229\u7528\u7684\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u662f\u7531\u5ba2\u6237\u4ece\u63d0\u5347\u548c\u8f6c\u79fb\u8fc7\u6e21\u5230\u6784\u5efa\u4e91\u539f\u751f\u5e94\u7528\u7a0b\u5e8f\u7684\u3002\u5b83\u4f7f\u7528Amazon API Gateway\u63d0\u4f9b\u8fde\u63a5\u5230AWS Lambda\u51fd\u6570\u7684rest API\u7aef\u70b9\uff0c\u4ee5\u63d0\u4f9b\u4eceAmazon Aurora Serverless\u6570\u636e\u5e93\u8bfb\u53d6\u548c\u5199\u5165\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u5b83\u8fd8\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528AWS\u4e91\u5f00\u53d1\u5de5\u5177\u5305(\u79f0\u4e3aCDK)\u90e8\u7f72\u5927\u591a\u6570\u57fa\u7840\u8bbe\u65bd\u3002\u901a\u8fc7\u5c06\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230\u4e91\u672c\u5730\u67b6\u6784(\u5982\u672c\u6587\u4e2d\u5c55\u793a\u7684\u793a\u4f8b)\uff0c\u60a8\u5c06\u80fd\u591f\u5b9e\u73b0\u8bb8\u591a\u597d\u5904\uff0c\u5305\u62ec\uff1a\n\u5728\u672c\u535a\u5ba2\u7684\u672b\u5c3e\uff0c\u60a8\u6709\u4e00\u4e2a\u5305\u542bCDK\u9879\u76ee\u7684AWS Cloud9\u5b9e\u4f8b\u73af\u5883\uff0c\u8be5\u9879\u76ee\u90e8\u7f72\u4e86API\u7f51\u5173\u548cLambda\u51fd\u6570\u3002\u6b64Lambda\u51fd\u6570\u5229\u7528\u5b58\u50a8\u5728\u60a8\u7684AWS Secrets Manager\u4e2d\u7684\u5bc6\u7801\uff0c\u901a\u8fc7Data API\u4ece\u60a8\u7684Aurora Serverless\u6570\u636e\u5e93\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\u521d\u59cb\u5316\u548c\u914d\u7f6eAWS\u4e91\u5f00\u53d1\u5de5\u5177\u5305\u9879\u76ee\uff0c\u5305\u62ecAmazon API Gateway\u7aef\u70b9\u548cAWS Lambda\u51fd\u6570\u7684\u5b9a\u4e49\u3002\n\u8981\u90e8\u7f72CDK\u5e94\u7528\u7a0b\u5e8f\uff0c\u9700\u8981\u6ee1\u8db3\u51e0\u4e2a\u524d\u63d0\u6761\u4ef6\uff1a\n\u5c55\u5f00Additional Connectivity\u90e8\u5206\u5e76\u9009\u62e9Data API\u9009\u9879\u3002\u6b64\u529f\u80fd\u4f7f\u60a8\u80fd\u591f\u901a\u8fc7\u57fa\u4e8eWeb\u670d\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95eeAurora Serverless\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u4f7f\u7528Aurora Serverless\u7684\u67e5\u8be2\u7f16\u8f91\u5668\u529f\u80fd\uff0c\u4ee5\u4fbf\u5bf9\u6570\u636e\u5e93\u5b9e\u4f8b\u8fd0\u884cSQL\u67e5\u8be2\u3002\n\u60a8\u7684\u6570\u636e\u5e93\u5b9e\u4f8b\u662f\u5728\u5355\u4e2a\u53ef\u7528\u533a(AZ)\u4e2d\u521b\u5efa\u7684\uff0c\u4f46Aurora Serverless\u6570\u636e\u5e93\u7fa4\u96c6\u5177\u6709\u4e00\u79cd\u79f0\u4e3a\u81ea\u52a8\u591aAZ\u6545\u969c\u8f6c\u79fb\u7684\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u4f7fAurora\u80fd\u591f\u5728\u5f53\u524d\u6570\u636e\u5e93\u5b9e\u4f8b\u6216AZ\u53d8\u5f97\u4e0d\u53ef\u7528\u65f6\u5728\u4e0d\u540c\u7684AZ\u4e2d\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\u5b9e\u4f8b\u3002\u7531\u4e8eAurora\u5c06\u8ba1\u7b97\u5bb9\u91cf\u548c\u5b58\u50a8\u5206\u5f00\uff0c\u56e0\u6b64\u7fa4\u96c6\u7684\u5b58\u50a8\u5377\u5206\u5e03\u5728\u591a\u4e2aAZ\u4e2d\u3002\u8fd9\u6837\uff0c\u5373\u4f7f\u6570\u636e\u5e93\u5b9e\u4f8b\u6216\u5173\u8054\u7684AZ\u53d7\u5230\u505c\u673a\u7684\u5f71\u54cd\uff0c\u6570\u636e\u4e5f\u53ef\u4ee5\u4fdd\u6301\u53ef\u7528\u3002\n\u521b\u5efa\u6570\u636e\u5e93\u5b9e\u4f8b\u540e\uff0c\u4e0b\u4e00\u6b65\u662f\u5c06\u6570\u636e\u5e93\u7684\u673a\u5bc6\u5b58\u50a8\u5728AWS Secrets Manager\u4e2d\u3002\n\u4fdd\u7559\u5bc6\u7801\u7c7b\u578b\u7684\u9ed8\u8ba4\u9009\u62e9(RDS\u6570\u636e\u5e93\u7684\u51ed\u636e)\u3002\u8f93\u5165\u60a8\u7684\u6570\u636e\u5e93\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7136\u540e\u9009\u62e9\u60a8\u5728\u4e0a\u4e00\u6b65\u4e2d\u521b\u5efa\u7684\u6570\u636e\u5e93\u7684\u5355\u9009\u6309\u94ae(\u5728\u672c\u4f8b\u4e2d\u4e3adb-blog)\uff0c\u5982\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002\n\u8f93\u5165\u540d\u79f0\u548c\u8bf4\u660e(\u53ef\u9009)\u3002\u5bf9\u4e8e\u540d\u79f0\uff0c\u8bf7\u786e\u4fdd\u6dfb\u52a0\u524d\u7f00rds-db-credentials/\uff0c\u5982\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002\n\u67e5\u770b\u6700\u540e\u4e00\u9875\u4e0a\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u9009\u62e9\u5b58\u50a8\u4ee5\u5728AWS Secrets Manager\u4e2d\u521b\u5efa\u548c\u5b58\u50a8\u60a8\u7684\u673a\u5bc6\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u8be5\u7ba1\u7406\u5668\u8fde\u63a5\u5230\u60a8\u7684\u6570\u636e\u5e93\u3002\n\u521b\u5efaDB\u96c6\u7fa4\u540e\uff0c\u521b\u5efa\u6570\u636e\u5e93\u5b9e\u4f8b\uff1b\u521b\u5efa\u8868\u5e76\u586b\u5145\u8868\uff1b\u6700\u540e\uff0c\u6d4b\u8bd5\u8fde\u63a5\u4ee5\u786e\u4fdd\u53ef\u4ee5\u67e5\u8be2\u6570\u636e\u5e93\u3002\n\u4eceAWS\u63a7\u5236\u53f0\u5bfc\u822a\u5230Amazon RDS\u670d\u52a1\uff0c\u7136\u540e\u9009\u62e9\u60a8\u7684db-blog\u6570\u636e\u5e93\u96c6\u7fa4\u3002\n\u9009\u62e9Actions\u4e0b\u7684Query\u4ee5\u6253\u5f00Connect to database\u7a97\u53e3\uff0c\u5982\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u3002\u8f93\u5165\u60a8\u7684\u6570\u636e\u5e93\u8fde\u63a5\u8be6\u7ec6\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u4eceSecrets Manager\u670d\u52a1\u590d\u5236\u5bc6\u7801\u7ba1\u7406\u5668ARN\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u6570\u636e\u5e93\u8fde\u63a5\u7a97\u53e3\u7684\u76f8\u5e94\u5b57\u6bb5\u4e2d\u3002\n\u8981\u521b\u5efaDB\u5b9e\u4f8b\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0bSQL\u67e5\u8be2\uff1a\u4ece\u4e0b\u9762\u5c4f\u5e55\u622a\u56fe\u6240\u793a\u7684\u67e5\u8be2\u7f16\u8f91\u5668\u4e2d\u521b\u5efa\u6570\u636e\u5e93\u8bb0\u5f55\u5b58\u50a8\uff1a\n\u5728\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f\u521a\u521a\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u521b\u5efa\u7684Recordstore\u6570\u636e\u5e93\uff1a\nCREATE TABLE IF NOT EXISTS\u8bb0\u5f55(RECORDID INT PRIMARY KEY\uff0cTITLE VARCHAR(255)NOT NULL\uff0cRELEASE", "note_en": "There are multiple ways to deploy API endpoints, such as this example, in which you could use an application running on Amazon EC2 to demonstrate how to integrate Amazon ElastiCache with Amazon DocumentDB (with MongoDB capability). While the approach in this example helps achieve great performance, and reliability through the elasticity and the ability to scale up or down the number of EC2 instances in order to accommodate the load on the application, there is still however some operational overhead you still have to manage the EC2 instances yourself. One way of addressing the operational overhead issue and related costs could be to transform the application into a serverless architecture.\n The example in this blog post uses an application that provides a similar use case, using a serverless architecture showcasing some of the tools that are being leveraged by customers transitioning from lift-and-shift to building cloud-native applications. It uses Amazon API Gateway to provide the REST API endpoint connected to an AWS Lambda function to provide the business logic to read and write from an Amazon Aurora Serverless database. It also showcases the deployment of most of the infrastructure with the AWS Cloud Development Kit, known as the CDK. By moving your applications to cloud native architecture like the example showcased in this blog post, you will be able to realize a number of benefits including:\n   At the end of this blog, you have an AWS Cloud9 instance environment containing a CDK project which deploys an API Gateway and Lambda function. This Lambda function leverages a secret stored in your AWS Secrets Manager to read and write from your Aurora Serverless database through the data API, as shown in the following diagram.\n     Initialize and configure an AWS Cloud Development Kit project including the definition of your Amazon API Gateway endpoint and AWS Lambda function\n  In order to deploy the CDK application, there are a few prerequisites that need to be met:\n    Expand the Additional Connectivity section and select the Data API option. This functionality enables you to access Aurora Serverless with web services-based applications. It also allows you to use the query editor feature for Aurora Serverless in order to run SQL queries against your database instance.\n Your database instance is created in a single availability zone (AZ), but\u00a0an Aurora Serverless database cluster has a capability known as automatic multi-AZ failover, which enables\u00a0Aurora to recreate the database instance in a different AZ should the current database instance or the AZ become unavailable. The storage volume for the cluster is spread across multiple AZs, since Aurora separates computation capacity and storage. This allows for data to remain available even if the database instance or the associated AZ is affected by an outage.\n  After creating the database instance, the next step is to store your secrets for your database in AWS Secrets Manager.\n Leave the default selection (Credentials for RDS database) for the secret type. Enter your database username and password and then select the radio button for the database you created in the previous step (in this example, db-blog), as shown in the following screenshot.\n  Enter a name and optionally a description. For the name, make sure to add the prefix rds-db-credentials/ as shown in the following screenshot.\n  Review your settings on the last page and choose Store to have your secrets created and stored in AWS Secrets Manager, which you can now use to connect to your database.\n  After creating the DB cluster, create the database instance; create your tables and populate them; and finally, test a connection to ensure that you can query your database.\n Navigate to the Amazon RDS service from the AWS console, and select your db-blog database cluster.\n Select Query under Actions to open the Connect to database window as shown in the screenshot below . Enter your database connection details. You can copy your secret manager ARN from the Secrets Manager service and paste it into the corresponding field in the database connection window.\n  To create the DB instance run the following SQL query:  CREATE DATABASE recordstore;from the Query editor shown in the screenshot below:\n   Before you can run the following commands, make sure you are using the Recordstore database you just created by running the command:\n  CREATE TABLE IF NOT EXISTS records (recordid INT PRIMARY KEY, title VARCHAR(255) NOT NULL, release_date DATE);", "posttime": "2020-05-17 06:55:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u7a0b\u5e8f,aws,serverless,\u6570\u636e\u5e93", "title": "\u4f7f\u7528AWS CDK\u90e8\u7f72\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f", "title_en": "Deploying a serverless application using AWS CDK", "transed": 1, "url": "https://idk.dev/deploying-a-serverless-application-using-aws-cdk/", "via": "", "real_tags": ["app", "\u7a0b\u5e8f", "aws", "\u6570\u636e\u5e93"]}, {"category": "", "categoryclass": "", "imagename": "263831df4d0fe82baabe5a5a1eb51d0e.jpg", "infoid": 1002459, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5dde\u6d77\u5cb8\u7684\u7ea2\u6749(Sequoia Sempervirens)\u662f\u4e00\u79cd\u592a\u5927\u800c\u65e0\u6cd5\u73af\u62b1\u7684\u6811\uff0c\u4ee4\u4eba\u60ca\u8bb6\u5730\u96be\u4ee5\u6349\u6478\u3002\u4ed6\u4eec\u7684\u57fa\u5730\u53ef\u80fd\u50cf\u5927\u8c61\u4e00\u6837\uff0c\u4f46\u5728\u4e0a\u6e38\uff0c\u4ed6\u4eec\u662f\u9ad8\u9ad8\u7684\uff0c\u4ee4\u4eba\u8d39\u89e3\u7684\u3002\u8fd9\u5c31\u662f\u6211\u51c6\u5907\u8fdb\u5165\u7684\u8fd9\u4e2a\u533a\u57df\uff0c\u52a0\u5dde\u5317\u90e8\u6d77\u5cb8\u7684\u4e00\u4e2a\u96fe\u6c14\u7b3c\u7f69\u7684\u7687\u51a0\u3002\u5bfc\u6e38\u628a\u6211\u7ed1\u5728\u9a6c\u5177\u4e0a\uff0c\u4e0d\u77e5\u4e0d\u89c9\u95f4\uff0c\u6211\u5df2\u7ecf\u5347\u5230140\u82f1\u5c3a\u9ad8\uff0c\u7136\u540e\u662f150\u82f1\u5c3a\uff0c160\u82f1\u5c3a\u3002\u6211\u51dd\u89c6\u7740\u90a3\u68f5\u6811\u9ed1\u6697\u800c\u591a\u8282\u7684\u6811\u76ae\uff0c\u4ee5\u5e73\u606f\u592a\u9633\u7a74\u91cc\u5347\u8d77\u7684\u7729\u6655\u3002\n\u5f53\u6211\u79bb\u5f00\u5730\u9762\u5927\u7ea620\u5c42\u697c\u7684\u65f6\u5019\uff0c\u90a3\u4e9b\u76ef\u7740\u6211\u770b\u7684\u5706\u70b9\u5927\u5c0f\u7684\u4eba\u5df2\u7ecf\u8d70\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\u6811\u679d\u548c\u9488\u5934\uff0c\u5b83\u4eec\u50cf\u7f51\u4e00\u6837\u7d27\u7d27\u5730\u56f4\u7ed5\u7740\u6211\u3002\u4e00\u4e1b\u4e1b\u9f20\u5c3e\u8349\u8272\u7684\u82d4\u85d3\u6447\u66f3\u7740\uff0c\u4e00\u79cd\u83ab\u540d\u7684\u5e73\u9759\u843d\u4e86\u4e0b\u6765\u3002\u5728\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u7684\u5934\u8111\u50cf\u677e\u9f20\u4e00\u6837\u4e71\u7a9c\uff0c\u610f\u8bc6\u5230\u6211\u6b63\u60ac\u6302\u5728\u79bb\u5730\u9762200\u82f1\u5c3a\u7684\u5730\u65b9\uff0c\u4f46\u8fd9\u68f5\u6811\u575a\u5982\u78d0\u77f3\u7684\u575a\u56fa-\u6bd5\u7adf\u5b83\u5728\u5927\u5baa\u7ae0\u4e4b\u524d\u5c31\u5df2\u7ecf\u5728\u8fd9\u91cc\u4e86-\u6b63\u5728\u4ea7\u751f\u5f71\u54cd\u3002\u8fd9\u91cc\u6709\u4e00\u79cd\u5bc2\u9759\u901a\u8fc7\u4e86\u7406\u89e3\u3002\n\u6211\u5e94\u8be5\u9884\u89c1\u5230\u8fd9\u4e00\u5207\u7684\u3002\u5927\u536b\u00b7\u7c73\u62c9\u5947\u5c31\u662f\u8fd9\u4e48\u5f62\u5bb9\u7684\u3002\u7c73\u62c9\u5947\u4e00\u751f\u4e2d\u552f\u4e00\u7684\u76ee\u6807\u5c31\u662f\u628a\u8fd9\u4e9b\u539f\u59cb\u68ee\u6797\u4ece\u60ac\u5d16\u8fb9\u62c9\u56de\u6765\uff0c\u4ed6\u77e5\u9053\u5982\u4f55\u628a\u4eba\u4eec\u4e89\u53d6\u5230\u4ed6\u7684\u4e8b\u4e1a\u4e2d\u6765\u3002\u6700\u597d\u7684\u6d17\u793c\u5c31\u662f\u4f53\u9a8c\u3002\u6211\u5728\u5176\u4ed6\u4eba\u4ece\u7687\u51a0\u4e4b\u65c5\u56de\u6765\u540e\u7684\u8138\u4e0a\u770b\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a\u7ea2\u6da6\u7684\u8138\u988a\uff0c\u661f\u5149\u707f\u70c2\u7684\u773c\u775b\uff0c\u6df1\u6df1\u7684\u53f9\u606f\u3002\u4ed6\u4eec\u4fe1\u5949\u5927\u6811\u5b97\u6559\u3002\n\u7c73\u62c9\u5947\u6b63\u6307\u671b\u7740\u8fd9\u79cd\u8f6c\u53d8\uff0c\u4ed6\u6000\u7740\u4e00\u79cd\u5b97\u6559\u70ed\u60c5\u5bf9\u5f85\u4ed6\u6bd5\u751f\u7684\u5de5\u4f5c\u3002\u4ed6\u662f\u4e00\u5bb6\u540d\u4e3a\u5927\u5929\u4f7f\u53e4\u6811\u6863\u6848\u9986\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u7684\u521b\u59cb\u4eba\uff0c\u4ed6\u8981\u4f20\u64ad\u52a0\u5dde\u6d77\u5cb8\u7ea2\u6749\u7684\u798f\u97f3\u3002\u591a\u5e74\u7684\u5e72\u65f1\u548c\u53d8\u5316\u65e0\u5e38\u7684\u6c14\u6e29\u5df2\u7ecf\u5c06\u8fd9\u4e9b\u5e38\u7eff\u5de8\u4eba\u8d76\u51fa\u4e86\u5b83\u4eec\u66fe\u7ecf\u5c45\u4f4f\u7684\u4e00\u4e9b\u6cbf\u6d77\u5730\u533a\u3002\u8fd9\u4e9b\u6811\u7684\u5bff\u547d\u53ef\u4ee5\u957f\u8fbe2000\u52303000\u5e74\uff0c\u4f46\u4e00\u4e9b\u79d1\u5b66\u5bb6\u8ba4\u4e3a\uff0c\u6309\u7167\u76ee\u524d\u7684\u60c5\u51b5\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5728\u8fd9\u6bb5\u65f6\u95f4\u7684\u4e00\u5c0f\u90e8\u5206\u65f6\u95f4\u5185\u4ece\u52a0\u5dde\u6d88\u5931\u3002\n\u7c73\u62c9\u5947\u6bcf\u5929\u90fd\u5728\u5bfb\u627e\u4ed6\u80fd\u627e\u5230\u7684\u6700\u4e30\u76db\u7684\u6d77\u5cb8\u7ea2\u6728\u6807\u672c\uff0c\u5728\u4ed6\u81ea\u5df1\u7684\u5b9e\u9a8c\u5ba4\u91cc\u514b\u9686\u5b83\u4eec\uff0c\u7136\u540e\u628a\u5b83\u4eec\u79cd\u690d\u5728\u7cbe\u5fc3\u6311\u9009\u7684\u5730\u5757\u4e0a\uff0c\u5728\u90a3\u91cc\u5b83\u4eec\u53ef\u4ee5\u8301\u58ee\u6210\u957f\uff0c\u5e0c\u671b\u80fd\u6301\u7eed\u6570\u5343\u5e74\u3002\u5176\u4e2d\u4e00\u4e2a\u5730\u70b9\u662f\u65e7\u91d1\u5c71\u666e\u96f7\u897f\u8fea\u5965\u7684\u4e00\u4e2a\u65b0\u5b9e\u9a8c\u5e8a\uff0c\u8fd9\u662f\u7f8e\u56fd\u56fd\u5bb6\u516c\u56ed\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u7c73\u62c9\u5947\u7684\u76ee\u6807\u65e2\u662f\u7528\u6700\u5f3a\u58ee\u7684\u4e2a\u4f53\u7684\u514b\u9686\u6765\u52a0\u5f3a\u6d77\u5cb8\u7ea2\u6749\u57fa\u56e0\u5e93\uff0c\u4e5f\u662f\u4e3a\u4e86\u50a8\u5b58\u5927\u91cf\u5bfc\u81f4\u6c14\u5019\u53d8\u5316\u7684\u78b3-\u6bcf\u82f1\u4ea9\u7ea2\u6749\u8d85\u8fc71000\u5428\uff0c\u6bd4\u4e16\u754c\u4e0a\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u68ee\u6797\u90fd\u591a\u3002\u8fd9\u662f\u4e00\u9879\u590d\u6742\u7684\u4efb\u52a1\uff0c\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u7406\u5ff5\uff1a\u62ef\u6551\u5927\u6811\uff0c\u5b83\u4eec\u5c31\u4f1a\u62ef\u6551\u6211\u4eec\u3002\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u9700\u8981\u7684\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u4f46\u7c73\u62c9\u5947\u72ec\u7279\u7684\u5949\u732e\u7cbe\u795e\u81f3\u5c11\u53cd\u6620\u4e86\u6211\u4eec\u6240\u9700\u8981\u7684\u90a3\u79cd\u70ed\u60c5\u3002\n\u51e0\u5343\u5e74\u6765\uff0c\u52a0\u5dde\u6d77\u5cb8\u7ea2\u6749\u4f3c\u4e4e\u662f\u6700\u540e\u4e00\u4e2a\u9700\u8981\u62ef\u6551\u7684\u6811\u79cd\u3002\u5b83\u4eec\u662f\u8010\u529b\u51a0\u519b\uff0c\u80fd\u5728\u51e0\u5343\u5e74\u7684\u81ea\u7136\u6d2a\u6c34\u3001\u5e72\u65f1\u3001\u6d77\u5578\u3001\u706b\u707e\u548c\u5267\u70c8\u7684\u6e29\u5ea6\u6ce2\u52a8\u4e2d\u5e78\u5b58\u4e0b\u6765\u3002\u53ea\u8981\u5b83\u4eec\u4f9d\u9760\u6bcf\u5929\u65e9\u4e0a\u6eda\u6eda\u800c\u6765\u7684\u96e8\u6c34\u548c\u6cbf\u6d77\u96fe\u5cb8\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u8301\u58ee\u6210\u957f\uff0c\u5e76\u4ece\u7834\u574f\u4e2d\u6062\u590d\u8fc7\u6765\u3002\u968f\u7740\u6c14\u6e29\u7684\u5347\u9ad8\uff0c\u8fd9\u4e9b\u5173\u952e\u7684\u6c34\u6e90\u6b63\u5728\u6d88\u6563\u3002\u6811\u6728\u559c\u6b22\u7684\u6f6e\u6e7f\u6761\u4ef6-\u4e3b\u8981\u662f\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u548c\u4fc4\u52d2\u5188\u5dde\u8c4c\u8c46\u6c64\u7684\u53e3\u888b\u91cc-\u6bd4\u8fc7\u53bb\u66f4\u52a0\u7f55\u89c1\u3002\u6d77\u5cb8\u7ea2\u6749\u73b0\u5728\u5360\u636e\u7684\u9762\u79ef\u4e0d\u5230\u5b83\u4eec\u539f\u6765\u6d3b\u52a8\u8303\u56f4\u768410%\u3002\u5b83\u4eec\u7684\u635f\u5931\u5c06\u4ea7\u751f\u8fde\u9501\u53cd\u5e94-\u7ecf\u6d4e\u3001\u751f\u6001\u3001\u60c5\u611f-\u7279\u522b\u662f\u5728\u5b83\u4eec\u53ef\u4ee5\u50a8\u5b58\u7684\u5927\u91cf\u78b3\u65b9\u9762\u3002\n\u5728\u4fdd\u7559\u7740\u6d77\u5cb8\u7ea2\u6749\u7684\u5730\u65b9\uff0c\u5b83\u4eec\u65e0\u58f0\u7684\u58ee\u4e3d\u7b80\u76f4\u4ee4\u4eba\u65e0\u6cd5\u6297\u62d2\u3002\u56e0\u6b64\uff0c\u81f3\u5c11\u6709\u4e00\u70b9\u8bbd\u523a\u7684\u662f\uff0c\u4ed6\u4eec\u6700\u4f1f\u5927\u7684\u5021\u5bfc\u8005\u4e4b\u4e00\u662f\u8fd9\u6837\u4e00\u4f4d\u5065\u8c08\u7684\u4eba\u3002\u5982\u679c\u4f60\u548c\u7c73\u62c9\u5947\u5f00\u59cb\u5bf9\u8bdd\uff0c\u4f60\u4f1a\u572810\u5206\u949f\u5185\u4e86\u89e3\u5230\u4ed6\u7684\u4eba\u751f\u6545\u4e8b-\u4ece\u4ed6\u5728\u5e95\u7279\u5f8b\u7684\u6469\u6258\u8f66\u5e2e\u6d3e\u65e5\u5b50\uff0c\u5230\u8ba9\u4ed6\u8d70\u4e0a\u73b0\u5728\u7684\u9053\u8def\u7684\u542f\u793a\uff0c\u6d89\u53ca\u5230\u4e00\u6b21\u6fd2\u6b7b\u4f53\u9a8c\uff0c\u5929\u4f7f\uff0c\u4ee5\u53ca\u4e00\u4e2a\u975e\u5b9e\u4f53\u7684\u58f0\u97f3\uff0c\u53e3\u8ff0\u4e86\u4ed6\u5728\u51cc\u6668\u5199\u4e0b\u7684\u4e00\u4e2a\u8ba1\u5212\u3002\u7b2c\u4e8c\u5929\uff0c\u5f53\u4ed6\u5b8c\u5168\u9192\u6765\u65f6\uff0c\u4ed6\u8bf4\uff0c\u201c\u90a3\u672c\u6cd5\u5f8b\u4fbf\u7b7e\u7c3f\u4e0a\u6709\u4e00\u4efd8\u9875\u7684\u63d0\u7eb2\u3002\u8fd9\u662f\u8fd9\u4e2a\u9879\u76ee\u7684\u5927\u7eb2\u3002\u201c\u3002\n\u9009\u62e9\u7c73\u62c9\u5947\u6765\u6267\u884c\u8fd9\u9879\u4efb\u52a1\u7684\u5929\u4f7f\u4f3c\u4e4e\u9009\u5bf9\u4e86\u4eba--\u4ed6\u4e0d\u4ec5\u662f\u4e00\u4f4d\u80fd\u5e72\u7684\u6811\u6728\u4f20\u9053\u8005\uff0c\u800c\u4e14\u8fd8\u662f\u7b2c\u4e09\u4ee3\u836b\u51c9\u6811\u6728\u79cd\u690d\u8005\u3002\u4ed6\u7684\u513f\u5b50\u6770\u514b\u548c\u8d3e\u91cc\u5fb7\u90fd\u4e3a\u5927\u5929\u4f7f\u5de5\u4f5c\uff0c\u662f\u7b2c\u56db\u4e2a\u3002\u56e0\u6b64\uff0c\u4ed6\u77e5\u9053\u901a\u8fc7\u5bfb\u627e\u6700\u5065\u5eb7\u7684\u6807\u672c\u3001\u4fee\u526a\u548c\u7e41\u6b96\u5b83\u4eec\uff0c\u7136\u540e\u57f9\u80b2\u7cbe\u81f4\u7684\u65b0\u6811\uff0c\u8ba9\u7b28\u62d9\u7684\u4e54\u6728\u7269\u79cd\u53d1\u6325\u5176\u6f5c\u529b\u7684\u6240\u6709\u79d8\u8bc0\u3002\n\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5317\u90e8\u6d77\u5cb8\u7684\u539f\u59cb\u68ee\u6797\u4e2d\uff0c\u7c73\u62c9\u514b\u77e5\u9053\u4ed6\u5728\u5bfb\u627e\u4ec0\u4e48\uff1a\u901a\u8fc7\u4e00\u5343\u5e74\u6216\u66f4\u957f\u65f6\u95f4\u7684\u751f\u5b58\u8bc1\u660e\u4e86\u81ea\u5df1\u52c7\u6c14\u7684\u7ea2\u6749\u3002\u5176\u4e2d\u4e00\u4e9b\u5e76\u4e0d\u662f\u5b8c\u5168\u957f\u6210\u7684\u5e9e\u7136\u5927\u7269\uff0c\u800c\u53ea\u662f\u6811\u6869\u6216\u201c\u4ed9\u5973\u73af\u201d\uff0c\u8fd9\u4e2a\u672f\u8bed\u6307\u7684\u662f\u4e00\u5708\u53d1\u82bd\uff0c\u5b8c\u5168\u662f\u5012\u4e0b\u7684\u6bcd\u6811\u7684\u514b\u9686\uff0c\u9760\u8150\u70c2\u7684\u6b8b\u4f59\u7269\u8301\u58ee\u6210\u957f\u3002\u201c\u7ea2\u6749\uff0c\u5c31\u5728\u4ed6\u4eec\u6b7b\u4e4b\u524d\uff0c\u4ed6\u4eec\u77e5\u9053\u81ea\u5df1\u6b63\u5728\u6b7b\u53bb\uff0c\u201d\u7c73\u62c9\u5947\u8bf4\u3002\u201c\u5b83\u4eec\u4f1a\u81ea\u6211\u514b\u9686\u3002\u6709\u5341\u51e0\u68f5\u6811(\u53d1\u82bd)\u6765\u81ea\u6839\u7cfb\uff0c\u6240\u4ee5\u5f53\u5979\u7ecf\u8fc7\u7684\u65f6\u5019\uff0c\u5979\u5c31\u6d3b\u4e86\u4e0b\u6765\u3002\u201c\u3002\n\u4e00\u65e6\u7c73\u62c9\u5947\u548c\u4ed6\u7684\u56e2\u961f\u627e\u5230\u4e86\u5408\u9002\u7684\u6811-\u5982\u679c\u5b83\u8fd8\u4e0d\u662f\u6811\u6869-\u4ed6\u4eec\u5c31\u7a7f\u7740\u9a6c\u5177\u722c\u5230\u6811\u51a0\u4e0a\uff0c\u6536\u83b7\u6570\u767e\u4e2a\u6de1\u7eff\u8272\u7684\u6811\u679d\u5c16\u7aef\uff0c\u6bcf\u4e2a\u5927\u7ea6\u4e00\u4e2a\u6307\u5c16\u5927\u5c0f\u3002\u8fd9\u4e9b\u4e1c\u897f\u88ab\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u5077\u5077\u5e26\u56de\u4e86\u4f4d\u4e8e\u5bc6\u6b47\u6839\u5dde\u79d1\u6f58\u7c73\u4ec0\u7684\u5927\u5929\u4f7f\u5b9e\u9a8c\u5ba4\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u6b63\u786e\u7684\u65f6\u95f4\u62cd\u6444\u8fd9\u4e9b\u526a\u679d\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u6770\u514b\u00b7\u7c73\u62c9\u5947\u89e3\u91ca\u8bf4\uff1a\u201c\u5f53\u6811\u6728\u538b\u529b\u8fc7\u5927\u65f6\uff0c\u6211\u4eec\u4f1a\u8fdc\u79bb\u6536\u96c6\u6750\u6599\u3002\u201d\u201c\u5b83\u5fc5\u987b\u8fbe\u5230\u4e00\u5b9a\u7684\u786c\u5316\u7a0b\u5ea6\u3002\u201d\u592a\u7eff\u5c31\u4f1a\u67af\u840e\uff0c\u592a\u6210\u719f\u5c31\u4e0d\u4f1a\u6b63\u5e38\u751f\u6839\u3002\n\u4e0b\u4e00\u6b65\u662f\u8ba9\u63d2\u7a57\u751f\u6839\u3002\u6770\u514b\u8bf4\uff0c\u4e00\u4e9b\u5728\u80a5\u6c83\u7684\u571f\u58e4\u4e2d\u901a\u8fc7\u4e00\u5b9a\u5242\u91cf\u7684\u751f\u6839\u57f9\u517b\u57fa\u8301\u58ee\u6210\u957f\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u9700\u8981\u66f4\u591a\u7684\u5e2e\u52a9-\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u5fae\u7e41\u6b96\u3002\u201c\u6211\u4eec\u6b63\u5728\u63d0\u53d6\u5fae\u5c0f\u7684\u5c16\u7aef\uff0c\u5e76\u57fa\u672c\u4e0a\u5728\u4f53\u5916\u7e41\u6b96\u5b83\u4eec\u3002\u4e0d\u662f\u6df1\u5165\u5230\u7ec6\u80de\uff0c\u800c\u662f\u6df1\u5165\u5230\u8fd9\u4e2a\u5927\u5c0f\u7684\u830e-\u201c\u4ed6\u6307\u7740\u5c55\u5f00\u5730\u56fe\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u8fd9\u4e9b\u7247\u6bb5\u5728\u65e0\u83cc\u5bb9\u5668\u4e2d\u5f97\u5230\u62a4\u7406\uff0c\u4ee5\u9632\u6b62\u7ec6\u83cc\u5e72\u6270\u53d1\u80b2\u7684\u5173\u952e\u9636\u6bb5\u3002\u4f46\u4ecd\u7136\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8bd5\u9a8c\u548c\u72af\u9519\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ea\u67093%\u52304%\u7684\u6700\u5c0f\u7684\u6d77\u5cb8\u7ea2\u6749\u679d\u6761\u5b58\u6d3b\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u8db3\u4ee5\u8fdb\u5165\u5730\u4e0b\u3002\n\u5728\u65e7\u91d1\u5c71\u7684\u666e\u96f7\u897f\u8fea\u5965(Presidio)\u6df1\u5904\uff0c\u5728\u91d1\u95e8\u5927\u6865(Golden Gate Bridge)\u7684\u5357\u4fa7\u5165\u53e3\u4e0b\uff0c\u5728\u4e00\u9053\u94c1\u4e1d\u7f51\u56f4\u680f\u540e\u9762\uff0c\u6709\u4e00\u7247\u9633\u5149\u6591\u9a73\u7684\u7a7a\u5730\uff0c\u51e0\u5341\u6839\u6728\u6869\u6574\u9f50\u5730\u6392\u6210\u4e00\u6392\u6392\u3002\u6bcf\u68f5\u6811\u4e0a\u7cfb\u7740\u4e00\u68f5\u7ec6\u957f\u7684\u67e5\u7406\u00b7\u5e03\u6717\u6811\uff0c\u5927\u7ea6\u4e00\u82f1\u5c3a\u9ad8\u3002\u5f53\u666e\u96f7\u897f\u8fea\u5965\u7684\u68ee\u6797\u7ba1\u7406\u5458\u60f3\u8981\u7528\u6d77\u5cb8\u7ea2\u6749\u79cd\u690d\u4e00\u7247\u5f00\u9614\u7684\u533a\u57df\uff0c\u5e76\u542c\u8bf4\u4e86\u7c73\u62c9\u514b\u7684\u514b\u9686\u8ba1\u5212\u65f6\uff0c\u4ed6\u4eec\u8054\u7cfb\u4e86\u4ed6\uff0c\u5e0c\u671b\u4ed6\u80fd\u5065\u5eb7\u5730\u5f00\u59cb\u79cd\u690d\u6811\u6728\u3002\n2018\u5e74\u672b\uff0c\u5f53Presidio\u7684\u5de5\u4f5c\u4eba\u5458\u79cd\u690d\u4e86\u8fd975\u682a\u514b\u9686\u7ea2\u6749\u65f6\uff0c\u56fd\u5bb6\u516c\u56ed\u4fdd\u62a4\u534f\u4f1a\u53d1\u5e03\u4e86\u4e00\u4efd\u65b0\u95fb\u7a3f-\u4f46\u8fd9\u8fd8\u4e0d\u662f\u4e00\u4e2a\u5438\u5f15\u6e38\u5ba2\u7684\u6d3b\u52a8\u3002\u201c\u5b83\u6709\u70b9\u88ab\u85cf\u8d77\u6765\u4e86\uff0c\u201d\u666e\u96f7\u897f\u8fea\u5965\u9996\u5e2d\u68ee\u6797\u7ba1\u7406\u5458\u5e03\u83b1\u514b\u00b7\u7279\u7f57\u514b\u585e\u5c14(Blake Troxel)\u8bf4\u3002\u201c\u9664\u4e86\u6211\u4eec\u548c\u571f\u72fc\uff0c\u6ca1\u4eba\u4f1a\u6765\u8fd9\u91cc\u3002\u201d\n\u8fd9\u7247\u5c0f\u6811\u6797\u7684\u80cc\u666f\u662f\u53c2\u5dee\u4e0d\u9f50\u7684\u8001\u6811\u836b\u6811\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u6d77\u5cb8\u7ea2\u6749\uff0c\u8fd9\u4e9b\u7ea2\u6749\u662f\u516c\u56ed\u572819\u4e16\u7eaa\u66fe\u7ecf\u7684\u519b\u4e8b\u7ba1\u7406\u90e8\u95e8\u79cd\u690d\u7684\uff0c\u73b0\u5728\u6bcf\u68f5\u90fd\u6709100\u591a\u82f1\u5c3a\u9ad8\u3002\u8fd9\u4e9b\u8f83\u5c0f\u7684\u6811\u6728\u90fd\u662f\u5728\u7c73\u62c9\u5947\u7684\u5bc6\u6b47\u6839\u5b9e\u9a8c\u5ba4\u57f9\u80b2\u7684\uff0c\u5b83\u4eec\u6765\u81ea\u7f57\u9a6c\u5e1d\u56fd\u4e4b\u524d\u7684\u6d77\u5cb8\u7ea2\u6728\u6811\u6869\u3002\u51e0\u4e4e\u6bcf\u5929\u665a\u4e0a\u51cc\u6668\u65f6\u5206\u7ffb\u6eda\u7684\u94f6\u7070\u8272\u96fe\u5cb8\u6784\u6210\u4e86\u8fd9\u7247\u7406\u60f3\u7684\u6d77\u5cb8\u7ea2\u6749\u533a\uff0c\u5c3d\u7ba1\u5b83\u6216\u591a\u6216\u5c11\u4f4d\u4e8e\u57ce\u5e02\u7684\u4e2d\u5fc3\u3002\u7279\u7f57\u514b\u585e\u5c14\u8bf4\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u65b0\u6811\u5728\u5c0f\u6811\u6797\u91cc\u7684\u6210\u529f\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u3002Presidio\u56e2\u961f\u5bf9\u7f51\u7ad9\u8fdb\u884c\u4e86\u79ef\u6781\u7684\u7ba1\u7406\uff0c\u4ee5\u786e\u4fdd\u7ea2\u6749\u542f\u52a8\u4e0d\u4f1a\u88ab\u589e\u957f\u66f4\u5feb\u7684\u7ade\u4e89\u5bf9\u624b\u9eef\u7136\u5931\u8272\u3002\u201c\u8349\u662f\u8ba9\u5b83\u53d8\u5f97\u56f0\u96be\u7684\u539f\u56e0\uff0c\u201d\u7279\u7f57\u514b\u585e\u5c14\u8bf4\u3002\u201c\u6211\u4eec\u8d70\u4e86\u8fc7\u6765\uff0c\u8fdb\u884c\u4e86\u526a\u88c1\u3002\u201d\u5e7c\u5c0f\u7684\u7ea2\u6749\u6bcf\u5468\u8fd8\u4f1a\u5728\u4e0d\u4e0b\u96e8\u7684\u65f6\u5019\u63a5\u53d7\u51e0\u4e2a\u5c0f\u65f6\u7684\u6ef4\u704c\uff0c\u8fd8\u4f1a\u4ece\u516c\u56ed\u7684\u5176\u4ed6\u5730\u65b9\u6ce8\u5165\u5806\u80a5\u3002\u4e3a\u4e86\u5e2e\u52a9\u514b\u9686\u4eba\u66f4\u6709\u5bbe\u81f3\u5982\u5f52\u7684\u611f\u89c9\uff0c\u7279\u7f57\u514b\u585e\u5c14\u548c\u4ed6\u7684\u56e2\u961f\u6700\u7ec8\u5c06\u79cd\u690d\u5929\u7136\u7ea2\u6749\u6797\u4e2d\u51fa\u73b0\u7684\u843d\u53f6\u4e0b\u7269\u79cd\uff0c\u5982\u6d77\u5cb8\u6d3b\u6a61\u6811\u3001\u52a0\u5dde\u4e03\u53f6\u6811\u548c\u63a5\u9aa8\u6728\u3002\n\u7c73\u62c9\u5947\u5e0c\u671bPresidio\u7f51\u7ad9\u80fd\u5c55\u793a\u5982\u4f55\u5728\u66f4\u5927\u8303\u56f4\u5185\u79cd\u690d\u7ea2\u6749\u65e0\u6027\u7cfb\uff0c\u800cTroxel\u7684\u53cd\u9988\u5c06\u662f\u4e00\u4e2a\u5b9d\u8d35\u7684\u4fe1\u606f\u6765\u6e90\u3002\u5982\u679c\u7ea2\u6749\u7684\u67d0\u4e2a\u4e9a\u79cd\u5728\u90a3\u91cc\u751f\u957f\u5f97\u7279\u522b\u597d\uff0c\u52a0\u5dde\u7684\u79cd\u690d\u8005\u5c31\u4f1a\u77e5\u9053\uff0c\u8be5\u54c1\u79cd\u53ef\u80fd\u4f1a\u5728\u5168\u5dde\u7c7b\u4f3c\u7684\u79cd\u690d\u5730\u70b9\u8868\u73b0\u826f\u597d\u3002\n\u5f53\u7136\uff0c\u4e0d\u662f\u6240\u6709\u768475\u68f5\u6811\u90fd\u6709\u4e00\u5929\u4f1a\u5728\u8fd9\u91cc\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u968f\u7740\u7ea2\u6749\u7684\u6210\u719f\uff0c\u5b83\u4eec\u7684\u9876\u7aef\u6811\u679d\u5468\u56f4\u9700\u8981\u8d8a\u6765\u8d8a\u591a\u7684\u7a7a\u95f4\uff0c\u8fd9\u6837\u5b83\u4eec\u624d\u80fd\u83b7\u5f97\u6240\u9700\u7684\u9633\u5149\u3002\u201c\u4e94\u5e74\u540e\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4ed6\u4eec\u7684\u738b\u51a0\u5c06\u4f1a\u89e6\u52a8\u4eba\u5fc3\u3002\u201d\u5728\u8fd9\u4e9b\u6811\u628a\u5b83\u4eec\u7684\u516c\u56ed\u817f\u653e\u5728\u5b83\u4eec\u4e0b\u9762\u4e4b\u540e\uff0c\u7279\u7f57\u514b\u585e\u5c14\u8ba1\u5212\u6709\u9009\u62e9\u5730\u5c06\u5b83\u4eec\u53d8\u8584\uff0c\u4ee5\u4fbf\u8ba9\u6700\u5f3a\u58ee\u7684\u6811\u6709\u6700\u597d\u7684\u673a\u4f1a\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5f53\u7c73\u62c9\u5947\u542f\u52a8\u5927\u5929\u4f7f\u9879\u76ee\u65f6\uff0c\u4ed6\u60f3\u8c61\u7740\u50cf\u8fd9\u6837\u7684\u6811\u82d7\u6811\u6797\uff0c\u4f46\u968f\u7740\u79d1\u5b66\u5bb6\u548c\u6d3b\u52a8\u5bb6\u5bf9\u6e29\u5ba4\u6c14\u4f53\u6392\u653e\u53d1\u51fa\u8b66\u544a\uff0c\u4ed6\u7684\u89c6\u91ce\u5f00\u59cb\u5f00\u9614\u3002\u8fd9\u4e9b\u5929\u6765\uff0c\u4ed6\u8d8a\u6765\u8d8a\u591a\u5730\u8c08\u5230\u8feb\u4f7f\u6d77\u5cb8\u7ea2\u6749\u6295\u5165\u670d\u52a1\uff0c\u4ee5\u6355\u83b7\u5927\u6c14\u4e2d\u7684\u78b3\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u884c\u7684\u3001\u53ef\u8861\u91cf\u7684\u89e3\u51b3\u65b9\u6848\u6765\u626d\u8f6c\u5bfc\u81f4\u9ad8\u3001\u4f4e\u3001\u66b4\u98ce\u96e8\u548c\u5e72\u65f1\u7684\u8fc7\u91cf\u78b3\u6392\u653e\u3002\u201d\u201c\u8fd9\u662f\u5173\u4e8e\u6211\u4eec\u7684\u5b50\u5b59\u540e\u4ee3\u6709\u673a\u4f1a\u751f\u6d3b\u7684\u4e8b\u60c5\u3002\u201d\u4ed6\u7535\u5b50\u90ae\u4ef6\u4e0a\u7684\u7b7e\u540d\u884c\u662f\u8fd9\u6837\u5199\u7684\uff1a\u201c\u51a0\u519b\u6811\u5c31\u662f\u7b54\u6848\u3002\u201d\n\u4e00\u4e9b\u79d1\u5b66\u652f\u6301\u4e86\u7c73\u62c9\u5947\u5bf9\u8fd9\u4e9b\u6811\u7684\u8fc7\u5ea6\u4fe1\u4efb\u3002\u57282019\u5e747\u6708\u53d1\u8868\u7684\u4e00\u7bc7\u300a\u79d1\u5b66\u300b\u6742\u5fd7(Science)\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u745e\u58eb\u7814\u7a76\u4eba\u5458\u4f30\u8ba1\uff0c9\u4ebf\u516c\u9877\u7684\u65b0\u68ee\u6797-\u76f8\u5f53\u4e8e\u7f8e\u56fd\u5927\u9646\u7684\u5927\u5c0f-\u53ef\u4ee5\u6355\u83b7\u8db3\u591f\u7684\u78b3\uff0c\u5c06\u5927\u6c14\u4e2d\u7684\u4e8c\u6c27\u5316\u78b3\u6c34\u5e73\u964d\u4f4e\u7ea625%\u3002\u65b0\u7684\u7ea2\u6749\u6797\u53ef\u80fd\u662f\u4e00\u4e2a\u5f00\u59cb\uff0c\u56e0\u4e3a\u5b83\u4eec\u6bcf\u82f1\u4ea9\u50a8\u5b58\u4e86\u5927\u91cf\u7684\u78b3\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u80fd\u8301\u58ee\u6210\u957f\uff0c\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u751f\u957f\u3002\nTroxel\u4e0d\u613f\u5728\u690d\u6811\u7684\u78b3\u5bb9\u91cf\u4e0a\u6295\u5165\u592a\u591a\u3002\u201c\u4f5c\u4e3a\u7075\u4e39\u5999\u836f\uff0c\u6211\u4e0d\u662f\u5f88\u786e\u5b9a\uff0c\u201d\u4ed6\u8bf4\u3002\u4ed6\u5f3a\u8c03\u4e86\u6062\u590d\u5305\u62ec\u5927\u6811\u5728\u5185\u7684\u6574\u4e2a\u81ea\u7136\u751f\u6001\u7cfb\u7edf\u7684\u91cd\u8981\u6027\u3002\u6b63\u5982\u4f26\u6566\u5927\u5b66\u5b66\u9662\u5730\u7403\u79d1\u5b66\u5bb6\u9a6c\u514b\u00b7\u9a6c\u65af\u6797(Mark Maslin)\u548c\u897f\u8499\u00b7\u5218\u6613\u65af(Simon Lewis)\u5728\u5bf9\u8bdd\u4e2d\u6307\u51fa\u7684\u90a3\u6837\uff0c\u91cd\u65b0\u9020\u6797\u5f88\u96be\u8bf4\u662f\u5bf9\u6297\u6c14\u5019\u53d8\u5316\u7684\u7075\u4e39\u5999\u836f\u3002\u5b83\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u4e16\u7eaa\uff0c\u751a\u81f3\u51e0\u5343\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u4ea7\u751f\u6548\u679c\uff0c\u800c\u8fd9\u662f\u6c14\u5019\u95ee\u9898\u6ca1\u6709\u7684\u65f6\u95f4\u3002\u79d1\u5b66\u7814\u7a76\u4e2d\u6307\u5b9a\u7528\u4e8e\u91cd\u65b0\u9020\u6797\u7684\u4e00\u4e9b\u571f\u5730\u5730\u533a\uff0c\u5f53\u4eba\u4eec\u62bd\u51fa\u65f6\u95f4\u79cd\u690d\u68ee\u6797\u65f6\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u53d8\u5f97\u592a\u70ed\uff0c\u4e0d\u9002\u5408\u68ee\u6797\u79cd\u690d\u3002\u201c\u91cd\u65b0\u9020\u6797\uff0c\u201d\u9a6c\u65af\u6797\u548c\u5218\u6613\u65af\u5199\u9053\uff0c\u201c\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u4f17\u591a\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u3002\u201d\n\u5373\u4f7f\u51a0\u519b\u6811\u672c\u8eab\u4e0d\u662f\u7b54\u6848\uff0c\u7c73\u62c9\u514b\u4e5f\u51b3\u5fc3\u770b\u5230\u5b83\u4eec\u81f3\u5c11\u6210\u4e3a\u7b54\u6848\u7684\u4e00\u90e8\u5206\u3002\u4ed6\u8ba4\u4e3a\uff0c\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e1c\u897f\u503c\u5f97\u5f7b\u5934\u5f7b\u5c3e\u5730\u5145\u5f53\u6551\u4e16\u4e3b\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u521b\u9020\u4e86\u5343\u767e\u5e74\u6765\u81ea\u6211\u590d\u5236\u7684\u5de8\u4eba\u7684\u6c38\u6052\u5c0f\u6811\u6797\uff0c\u8fd9\u53ef\u80fd\u4f1a\u9020\u798f\u5168\u4eba\u7c7b\u3002\u201c\u6211\u4eec\u6709\u4e00\u4efd100\u68f5\u6700\u91cd\u8981\u7684\u6811\u7684\u514b\u9686\u540d\u5355\u3002\u6211\u4eec\u6709\u884c\u519b\u547d\u4ee4\u3002\u6211\u4eec\u77e5\u9053\u6211\u4eec\u9700\u8981\u53bb\u54ea\u91cc\uff0c\u201c\u7c73\u62c9\u5947\u8bf4\u3002\u201c\u6211\u6bcf\u5929\u65e9\u4e0a\u90fd\u4f1a\u4e3e\u624b\u8bf4\uff0c\u2018\u7528\u6211\u5427\u3002\u2019\u201d", "note_en": "For a tree too big to wrap your arms around, the California coast redwood,  Sequoia sempervirens, is surprisingly elusive. Their bases might be elephantine, but the upper reaches, they\u2019re lofty, inscrutable. It\u2019s this zone that I\u2019m preparing to enter, a fog-shrouded crown on the northern California coast. A guide cinches me into a harness, and before I know it, I\u2019m 140 feet up, then 150, 160. I stare at the tree\u2019s dark, gnarled bark to quell the vertigo rising in my temples.\n By the time I\u2019m about 20 stories off the ground, the dot-sized people staring up at me are gone, replaced by intertwined branches and needles that close around me like a net. Clumps of sage-colored moss dangle and an inexplicable calm descends. Somewhere, my mind is scrambling like a squirrel, aware that I\u2019m dangling 200 feet off the ground, but the tree\u2019s unrelenting solidity\u2014it\u2019s been here since before the Magna Carta, after all\u2014is having an effect. There\u2019s a stillness up here that passes understanding.\n I should have seen this coming. It\u2019s just the way David Milarch described it. Milarch\u2019s singular goal in life is to bring these primeval forests back from the brink, and he knows just how to win people to his cause. The best baptism is the experience. I see it in the faces of others after they return from a crown visit: blooming cheeks, starry eyes, deep sighs. They\u2019ve gotten big tree religion.\n  Milarch is counting on this kind of conversion, and he approaches his life\u2019s work with a religious zeal. He is the founder of a nonprofit called the Archangel Ancient Tree Archive, and he\u2019s out to spread the gospel of California\u2019s coast redwoods. Years of droughts and shifting temperatures have already driven these evergreen giants out of some coastal zones they once inhabited. The trees can live for as long as 2,000 to 3,000 years, but some scientists think, the way things are going, that they could disappear from California in a fraction of that time.\n Milarch spends his days tracking down the heartiest coast redwood specimens he can find, cloning them in his own lab, and then planting them in carefully chosen plots where they can thrive, hopefully for millennia. One site is a new experimental bed in San Francisco\u2019s Presidio, part of the U.S. National Park system. Milarch\u2019s goal is both to strengthen the coast redwood gene pool with clones of the strongest individuals, and to store loads of climate-change-causing carbon\u2014more than 1,000 tons per acre of redwoods, more than any other kind of forest in the world. It\u2019s a complicated mission with a simple philosophy: Save the big trees, and they\u2019ll save us. Reckoning with climate change will take much more than that, but Milarch\u2019s singular devotion is at least a reflection of the kind of zeal we\u2019ll need.\n  For millennia, California coast redwoods seemed like the last tree species that would need to be saved. They are endurance champions that survive through thousands of years of natural floods, droughts, tsunamis, fires, and wild temperature swings. They can thrive and recover from damage so long as they can count on rainwater and coastal fog banks that roll in every morning. And it is those critical water sources that are dissipating as temperatures rise. The damp conditions the trees like\u2014mostly in pea-soupy pockets of California and Oregon\u2014are rarer than they used to be. Coast redwoods now occupy less than 10 percent of their original range. Their loss will have ripples\u2014economic, ecological, emotional\u2014particularly in the vast amount of carbon they can store.\n  In places where coast redwoods remain, their silent grandeur is simply overwhelming. So it\u2019s at least a little ironic that one of their greatest advocates is such a talker. If you strike up a conversation with Milarch, you\u2019ll get his life story inside of 10 minutes\u2014from his motorcycle gang days in Detroit to the revelation that set him on his current path, involving a near-death experience, angels, and a disembodied voice that dictated a plan he wrote down in the wee hours of the morning. When he woke up fully the next day, he says, \u201cThere was an eight-page outline on that legal pad. It was the outline for this project.\u201d\n The angel who tapped Milarch for this mission seems to have picked the right person\u2014not only is he an able tree-vangelist, but he is a third-generation shade-tree grower. His sons Jake and Jared, both of whom work for Archangel, make up the fourth. So he knows all the secrets of getting balky arborial species to reach their potential by locating the healthiest specimens, clipping and propagating them, and then nurturing delicate new trees.\n In the primeval forests of California\u2019s northern coast, Milarch knows what he is looking for: redwoods that have proven their mettle by surviving for a millennium or more. Some of these aren\u2019t the fully grown behemoths, but just stumps or \u201cfairy rings,\u201d the term for a circle of sprouts that are exact clones of a fallen parent tree, thriving on its decaying remnants. \u201cRedwoods, just before they die, they know they\u2019re dying,\u201d Milarch says. \u201cThey self-clone. There are a dozen trees [sprouting] from the root system, so that when she passes, she lives on.\u201d\n Once Milarch and his team find the right tree\u2014if it\u2019s not a stump already\u2014they zip up to the canopy in harnesses and harvest hundreds of pale green branch tips, each about the size of a fingertip. These are spirited carefully back to Archangel\u2019s lab facility in Copemish, Michigan. Taking these cuttings at just the right time is critical, it turns out. \u201cWe stay away from collecting material when the tree is stressed out,\u201d Jake Milarch explains. \u201cIt has to be at a certain point of hardening off.\u201d Too green and it will wilt, too mature and it won\u2019t root properly.\n  The next step is getting the cuttings to take root. Some thrive in rich soil with a dose of rooting medium, while others, Jake says, need more help\u2014a process called micropropagation. \u201cWe\u2019re taking tiny tips and basically multiplying them in vitro. Not down to the cell, but down to a stem the size of this\u2014\u201d he points to a dot on a spread-out map. These bits get nursed along in sterile vessels to prevent bacteria from interfering with a critical stage in development. But there\u2019s still a lot of trial and error involved. Typically, only 3 to 4 percent of the tiniest coast redwood cuttings survive long enough to make it into the ground.\n  Deep in San Francisco\u2019s Presidio, which sprawls under the southern approach to the Golden Gate Bridge, behind a chain-link fence, there is a sun-dappled clearing where dozens of wooden stakes are lined up in neat rows. Tethered to each is a spindly little Charlie Brown tree about a foot tall. When Presidio foresters wanted to plant an open area with coast redwoods and heard about Milarch\u2019s cloning project, they reached out to him for healthy tree starts.\n When Presidio staff planted these 75 cloned redwoods in late 2018, the National Parks Conservancy issued a press release\u2014but it\u2019s not a tourist draw, not yet. \u201cIt\u2019s kind of tucked away,\u201d says Presidio head forester Blake Troxel. \u201cNo one comes up here except us and the coyotes.\u201d\n The grove features a backdrop of gnarled old shade trees, including a few coast redwoods the park\u2019s one-time military management planted back in the 1800s, each now more than a hundred feet tall. The smaller trees, all reared in Milarch\u2019s Michigan lab, came from coast redwood stumps that predate the Roman Empire. The silver-gray fog bank that rolls over the site in the wee hours just about every night makes this ideal coast redwood territory, despite being more or less in the middle of a city. Even so, Troxel says, the new trees\u2019 success in the grove isn\u2019t guaranteed. The Presidio team tends the site aggressively to make sure the redwood starts aren\u2019t eclipsed by faster-growing competitors. \u201cThe grasses are what make it difficult,\u201d Troxel says. \u201cWe come through and brush-cut.\u201d The baby redwoods also get drip irrigation a couple hours a week when it\u2019s not raining, as well as infusions of compost from elsewhere in the park. To help the clones feel more at home, eventually, Troxel and his team will plant understory species that appear in natural redwood forests, such as coast live oak, California buckeye, and elderberry.\n  Milarch is hoping that the Presidio site will demonstrate how redwood clones can be planted on a larger scale, and Troxel\u2019s feedback will be an invaluable source of information. If a certain sub-species of redwood does particularly well there, California planters will know that variety might do well at similar planting sites around the state.\n Of course, not all 75 of these trees will one day dominate here. As redwoods mature, they need progressively more space around their top branches so they can get the sunlight they need. \u201cIn five years,\u201d he says, \u201ctheir crowns will be touching.\u201d After the trees get their park legs under them, Troxel plans to thin them selectively to give the strongest ones the best chance to make it.\n  When Milarch launched the Archangel project, he imagined groves of saplings like this, but as scientists and activists raised the alarm about greenhouse gas emissions, his vision began to broaden. These days, he talks more and more about pressing coast redwoods into service to capture atmospheric carbon. \u201cWe need a viable, measurable solution to reverse excess carbon, which is causing highs and lows and storms and droughts,\u201d he says. \u201cIt\u2019s about our children and grandchildren having a shot at life.\u201d The signature line on his e-mail reads, \u201cChampion Trees Are the Answer.\u201d\n Some science supports Milarch\u2019s outsized faith in these trees. In a   Science article published in July 2019, Swiss researchers estimate that 900 million new hectares of forest\u2014a swath about the size of the continental United States\u2014could capture enough carbon to reduce atmospheric carbon dioxide levels by about 25 percent. New redwood groves could be a start, as they store a lot of carbon per acre, but they don\u2019t thrive just anywhere and take a long time to grow.\n  Troxel hesitates to put too much stock in the carbon capacity of tree-planting. \u201cAs a cure-all, I\u2019m not so sure,\u201d he says. He stresses the importance of restoring entire natural ecosystems that include the big trees. As University College London earth scientists Mark Maslin and Simon Lewis  point out in  The Conversation, reforestation is hardly a magic bullet against climate change. It can take centuries, even millennia, to have its effect, and that\u2019s time the climate problem does not have. Some of the land areas earmarked for reforestation in the  Science study may end up too hot for forests by the time people get around to planting them. \u201cReforestation,\u201d Maslin and Lewis write, \u201cshould be thought of as one solution to climate change among many.\u201d\n Even if champion trees aren\u2019t an answer by themselves, Milarch is determined to see them at least become part of the answer. If there\u2019s anything worth being downright messianic about, he figures, it\u2019s creating eternal groves of thousand-year-old, self-replicating giants that could benefit all humankind. \u201cWe have a list of the 100 most important trees to clone. We have our marching orders. We know where we need to go,\u201d Milarch says. \u201cI raise my hand every morning and I say, \u2018Use me.\u2019\u201d", "posttime": "2020-05-17 06:54:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62ef\u6551,save,\u7ea2\u6749", "title": "\u7ea2\u6749\u80fd\u62ef\u6551\u4e16\u754c\u5417\uff1f", "title_en": "Can Redwoods Save the World?", "transed": 1, "url": "https://www.atlasobscura.com/articles/redwood-reforestation", "via": "", "real_tags": ["\u62ef\u6551", "save", "\u7ea2\u6749"]}, {"category": "", "categoryclass": "", "imagename": "4b163a2ca111fb882271c47f395287ab.jpg", "infoid": 1002458, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6240\u6709\u5173\u4e8e\u5728\u5168\u7403\u5927\u6d41\u884c\u671f\u95f4\u8fdb\u884c\u70ae\u5f39\u5954\u8dd1\u9053\u5fb7\u7684\u73cd\u73e0\u6293\u6355\u4f3c\u4e4e\u90fd\u662f\u5f92\u52b3\u7684\uff0c\u57c3\u5fb7\u00b7\u535a\u5229\u5b89(Ed Bolian)\u62a5\u544a\u79f0\uff0c\u5728\u77ed\u77ed\u4e94\u5468\u5185\uff0c\u7f8e\u56fd\u6700\u975e\u6cd5\u7684\u8bb0\u5f55\u5df2\u7ecf\u88ab\u6253\u7834\u4e86\u4e03\u6b21\u3002\n\u636e\u4e00\u76f4\u4e0e\u65b0\u7eaa\u5f55\u4fdd\u6301\u8005\u63a5\u89e6\u7684\u535a\u5229\u5b89\u8bf4\uff0c\u73b0\u5728\u6253\u7834\u7684\u65f6\u95f4\u4e0d\u523026\u4e2a\u5c0f\u65f6\u3002\u4f4e\u4e8e28\u5c0f\u65f6\u7684\u70ae\u5f39\u8dd1\u66fe\u7ecf\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u3002\n\u867d\u7136\u4ed6\u6ca1\u6709\u900f\u9732\u786e\u5207\u7684\u65f6\u95f4\uff0c\u4f46\u8fd9\u4e2a\u53c2\u7167\u7cfb\u610f\u5473\u7740\uff0c\u57284507\u516c\u91cc\u7684\u65c5\u7a0b\u4e2d\uff0c\u53f8\u673a\u4eec\u5fc5\u987b\u8fbe\u5230\u81f3\u5c11173\u516c\u91cc/\u5c0f\u65f6\u7684\u5e73\u5747\u901f\u5ea6\u3002\n\u8003\u8651\u5230\u52a0\u6cb9\u7ad9\uff0c\u8f66\u961f\u7684\u5cf0\u503c\u548c\u5de1\u822a\u901f\u5ea6\u53ef\u80fd\u8fdc\u8fdc\u8d85\u8fc7\u8fd9\u4e2a\u6570\u5b57\u3002\n\u535a\u5229\u5b89\u8bf4\uff0c\u65b0\u7684\u8bb0\u5f55\u4fdd\u6301\u8005\u5728\u7a7f\u8d8a\u201c\u51e0\u4e2a\u201d\u5dde\u65f6\u7684\u5e73\u5747\u65f6\u901f\u4e3a193\u516c\u91cc\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u65b0\u7684\u8bb0\u5f55\u4fdd\u6301\u8005\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u8f66\u3002\n\u76ee\u524d\u6240\u77e5\u7684\u662f\uff0c\u4ed6\u4eec\u505a\u597d\u4e86\u5145\u5206\u7684\u51c6\u5907\uff0c30\u591a\u540d\u89c2\u5bdf\u5458\u6563\u5e03\u5728\u5168\u56fd\u5404\u5730\uff0c\u8fd8\u6709\u4e00\u8f86\u7ecf\u8fc7\u5927\u91cf\u6539\u88c5\u7684\u8f66\u8f86\u3002\n\u6839\u636e\u535a\u5229\u5b89\u7684\u8bf4\u6cd5\uff0c\u88ab\u6253\u7834\u7684\u4e0d\u4ec5\u4ec5\u662f\u5f7b\u5e95\u7684\u7eaa\u5f55\uff0c\u5355\u4eba\u9a7e\u9a76\u3001\u67f4\u6cb9\u52a8\u529b\u548c\u4ece\u4e1c\u6d77\u5cb8\u5230\u897f\u6d77\u5cb8\u7684\u70ae\u5f39\u8bb0\u5f55\u90fd\u88ab\u6253\u7834\u4e86-\u6700\u540e\u4e00\u4e2a\u8bb0\u5f55\u6bd4\u4e4b\u524d\u7684\u7eaa\u5f55\u7f29\u77ed\u4e86\u8fd120\u4e2a\u5c0f\u65f6\u3002\n\u5728\u8fd9\u4e00\u65b0\u7684\u521b\u7eaa\u5f55\u7684\u5c1d\u8bd5\u4e4b\u524d\uff0c\u4e00\u7ec4\u53f8\u673a\u5229\u7528\u51a0\u72b6\u75c5\u6bd2\u5c01\u9501\u9020\u6210\u7684\u7a7a\u65f7\u9053\u8def\uff0c\u521b\u9020\u4e8626\u5c0f\u65f638\u5206\u949f\u7684\u8d8a\u91ce\u65f6\u95f4\u3002\n\u8fd9\u652f\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u8f66\u961f\u4f7f\u7528\u4e86\u4e00\u8f86\u5965\u8feaA8\u4f5c\u4e3a\u8bb0\u5f55\uff0c\u540e\u5907\u7bb1\u91cc\u7ed1\u7740\u5de8\u5927\u7684\u8239\u7528\u71c3\u6599\u7bb1\u3002\n\u70ae\u5f39\u8dd1\u662f\u4e00\u9879\u7b80\u5355\u7684\u3001\u9ad8\u5ea6\u975e\u6cd5\u7684\u8bb0\u5f55\uff0c\u5c3d\u7ba1\u6ca1\u6709\u7ba1\u7406\u673a\u6784\uff0c\u4f46\u5728\u6c7d\u8f66\u6587\u5316\u4e2d\u662f\u81ed\u540d\u662d\u8457\u7684\u3002\n\u535a\u5229\u5b89\u4ee5\u524d\u662f\u4e00\u540d\u53c2\u8d5b\u8005\uff0c\u7eaa\u5f55\u4fdd\u6301\u8005\uff0c\u73b0\u5728\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u8bb0\u5f55\u4e0a\u7684\u4e8b\u5b9e\u4e0a\u7684\u88c1\u5224\u5458\u3002\n\u8981\u521b\u9020\u70ae\u5f39\u8dd1\u7eaa\u5f55\uff0c\u4f20\u7edf\u4e0a\u4f60\u5fc5\u987b\u4ece\u66fc\u54c8\u987f\u7684\u7ea2\u7403\u8f66\u5e93\u51fa\u53d1\uff0c\u7136\u540e\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u7a7f\u8d8a\u6574\u4e2a\u7f8e\u5229\u575a\u5408\u4f17\u56fd\uff0c\u6700\u540e\u5230\u8fbe\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u96f7\u4e1c\u591a\u6d77\u6ee9\u7684\u6ce2\u6258\u83f2\u5c3c\u9152\u5e97\uff0c\n\u73b0\u4ee3\u6280\u672f\u548c\u8d85\u524d\u51c6\u5907\u7684\u8f66\u961f\uff0c\u5bfc\u81f4\u8fd1\u5e74\u6765\u7684\u8bb0\u5f55\u964d\u81f3\u4e0d\u53ef\u60f3\u8c61\u7684\u6c34\u5e73\uff0c\u8f66\u961f\u5728\u516c\u5171\u9053\u8def\u4e0a\u4fdd\u6301\u75af\u72c2\u7684\u901f\u5ea6\uff0c\u4ee5\u786e\u4fdd\u81ea\u5df1\u5728\u8d5b\u8f66\u6076\u540d\u4e2d\u7684\u5730\u4f4d\u3002\n\u636e\u62a5\u9053\uff0c\u65b0\u7684\u8bb0\u5f55\u4fdd\u6301\u8005\u6b63\u5728\u51c6\u5907\u4e00\u90e8\u7eaa\u5f55\u7247\uff0c\u4e0e\u4ed6\u4eec\u7684\u5b98\u65b9\u8bb0\u5f55\u516c\u544a\u4e00\u8d77\u53d1\u5e03\u3002", "note_en": "All the pearl-clutching about the morality of performing a Cannonball Run during a global pandemic seems to have been for nothing, with Ed Bolian reporting America\u2019s most illegal record has been beaten seven times in the span of just five weeks.\n According to Bolian, who has been in contact with the new record holders, the time to beat is now less than 26 hours. A sub 28-hour Cannonball Run was once unthinkable.\n While he has not disclosed the exact time, that frame of reference means the drivers would have had to achieve an average speed of  at least 173km/h for the 4507km journe y.\n  Accommodating for fuel stops, the team\u2019s peak and cruising speeds are probably far in excess of that figure.\n Bolian states that the new record holders averaged 193km/h when crossing \u201cseveral\u201d States. It is unknown what car the new record holders used.\n What is known is that they were well prepared, with over 30 spotters littered across the country, along with a heavily modified vehicle.\n   According to Bolian, its not just the outright record that has been broken, with the solo-driver, diesel-powered, and coast-to-coast-to-coast Cannonball records all tumbling \u2013 the last of which having almost 20 hours shaved off the previous record time.\n This new flurry of record attempts follows a  team of drivers who took advantage of empty roads that had been created by the coronavirus lockdown to set a cross-country time of 26 hours and 38 minutes.\n This unknown team used an Audi A8 for the record, with large marine fuel tanks strapped into the boot.\n   The Cannonball Run is a simple, and highly illegal, record that despite having no governing body, is infamous within car culture.\n Bolian is a former competitor, record holder, and now somewhat of a defacto adjudicator on the record.\n To set a Cannonball Run record, you must traditionally start at the Red Ball Garage in Manhattan, then traverse the entire United States of America as fast as possible to finish at the Portofini Inn in Redondo Beach, California,\n  Modern technology, and ultra-prepared teams, have resulted in the record falling to unthinkable levels in recent years, with teams maintaining crazy speeds on public roads to secure their place in motoring infamy.\n The new record holders are reported to be preparing a documentary to accompany their official record announcement.", "posttime": "2020-05-17 06:54:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7eaa\u5f55,run,\u8bb0\u5f55", "title": "\u70ae\u5f39\u8dd1\u7eaa\u5f55\u5728\u4e94\u5468\u5185\u88ab\u6253\u7834\u4e86\u4e03\u6b21", "title_en": "The Cannonball Run record has been broken seven times in five weeks", "transed": 1, "url": "https://www.whichcar.com.au/news/the-cannonball-run-record-has-been-obliterated", "via": "", "real_tags": ["\u7eaa\u5f55", "run", "\u8bb0\u5f55"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002457, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u8fd8\u8bb0\u5f97\u5b89\u683c\u65af\u00b7\u9ea6\u51ef\u5f17(Angus&34\uff1bMac&34\uff1bMacGyver)\u5417\uff1f\u8fd9\u4f4d80\u5e74\u4ee3/90\u5e74\u4ee3\u9887\u53d7\u6b22\u8fce\u7684\u7535\u89c6\u5267\u7684\u4e3b\u4eba\u516c\u5b89\u683c\u65af\u00b7\u9ea6\u76d6\u5f17(Angus&34\uff1bMac&34\uff1bMacGyver)\u603b\u662f\u5bcc\u6709\u521b\u9020\u529b\uff0c\u4ed6\u53ea\u9700\u4e00\u628a\u745e\u58eb\u519b\u5200\u3001\u80f6\u5e26\u3001\u978b\u5e26\u548c\u56de\u5f62\u9488\u5c31\u80fd\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\nKafka Connect\u7684\u5355\u6d88\u606f\u8f6c\u6362(SMT)\u51e0\u4e4e\u548cMacGyver\u7684\u745e\u58eb\u519b\u5200\u4e00\u6837\u591a\u624d\u591a\u827a\uff1a\nSMT\u53ef\u4ee5\u662fKafka Connection\u4e0a\u4e0b\u6587\u4e2d\u51fa\u73b0\u7684\u8fd9\u4e9b\u548c\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u7528\u4e8e\u6e90\u8fde\u63a5\u5668\u6216\u5bbf\u8fde\u63a5\u5668\uff0cSMT\u5141\u8bb8\u5206\u522b\u5728\u5c06Kafka\u8bb0\u5f55\u53d1\u9001\u5230Kafka\u4e4b\u524d\u6216\u5728\u4ece\u4e3b\u9898\u4e2d\u4f7f\u7528\u5b83\u4eec\u4e4b\u540e\u4fee\u6539Kafka\u8bb0\u5f55\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0bSMT\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u7528\u6cd5(\u5e0c\u671b\u4e0d\u7ba1\u600e\u6837)\u3002\u8fd9\u4e9b\u7528\u4f8b\u5927\u591a\u57fa\u4e8e\u6211\u4f7f\u7528Kafka Connect\u548cDebezium\u7684\u7ecf\u9a8c\uff0cDebezium\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53d8\u66f4\u6570\u636e\u6355\u83b7(CDC)\u5e73\u53f0\u3002\u4e0d\u4e45\u524d\uff0c\u5f53\u6211\u5728Twitter\u4e0a\u8be2\u95ee\u793e\u533a\u6709\u5173\u8fd9\u65b9\u9762\u7684\u95ee\u9898\u65f6\uff0c\u6211\u4e5f\u5f97\u5230\u4e86\u4e00\u4e9b\u5173\u4e8eSMT\u7528\u6cd5\u7684\u5f88\u597d\u7684\u5efa\u8bae\uff1a\n\u6211\u7edd\u5bf9\u63a8\u8350\u53bb\u770b\u770b\u8fd9\u4e2a\u5e16\u5b50\uff1b\u975e\u5e38\u611f\u8c22\u6240\u6709\u56de\u590d\u7684\u4eba\uff01\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSMT\u7684\u4e00\u822c\u77e5\u8bc6\uff0c\u5982\u4f55\u914d\u7f6e\u5b83\u4eec\u7b49\uff0c\u8bf7\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\u6700\u540e\u7ed9\u51fa\u7684\u8d44\u6e90\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u7528\u4f8b\uff0c\u6211\u8fd8\u8be2\u95ee\u4e86\u6211\u4eec\u5bcc\u6709\u540c\u60c5\u5fc3\u7684\u7535\u89c6\u82f1\u96c4\u5bf9SMT\u5bf9HAND\u4efb\u52a1\u7684\u6709\u7528\u6027\u7684\u770b\u6cd5\u3002\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e2a\u90e8\u5206\u7684\u672b\u5c3e\u627e\u5230\u4ed6\u7684\u8bc4\u7ea7\uff0c\u4ece\ud83d\udcce(\u4e0d\u9002\u5408)\u5230\ud83d\udcce(\u975e\u5e38\u9002\u5408)\u3002\nSMTS\u6700\u5e38\u89c1\u7684\u5e94\u7528\u53ef\u80fd\u662f\u683c\u5f0f\u8f6c\u6362\uff0c\u5373\u8c03\u6574\u6570\u636e\u7684\u7c7b\u578b\u3001\u683c\u5f0f\u548c\u8868\u793a\u5f62\u5f0f\u3002\u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u6574\u4e2a\u6d88\u606f\uff0c\u4e5f\u53ef\u80fd\u9002\u7528\u4e8e\u7279\u5b9a\u7684\u6d88\u606f\u5c5e\u6027\u3002\u8ba9\u6211\u4eec\u9996\u5148\u770b\u51e0\u4e2a\u8f6c\u6362\u5355\u4e2a\u6d88\u606f\u5c5e\u6027\u683c\u5f0f\u7684\u793a\u4f8b\uff1a\n\u65f6\u95f4\u6233\uff1a\u4e0d\u540c\u7684\u7cfb\u7edf\u5f80\u5f80\u5bf9\u5982\u4f55\u952e\u5165\u548c\u683c\u5f0f\u5316\u65f6\u95f4\u6233\u6709\u4e0d\u540c\u7684\u5047\u8bbe\u3002\u4f8b\u5982\uff0cDebezium\u5c06\u5927\u591a\u6570\u65f6\u95f4\u5217\u7c7b\u578b\u8868\u793a\u4e3a\u81ea\u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u3002\u53e6\u4e00\u65b9\u9762\uff0cChange\u4e8b\u4ef6\u4f7f\u7528\u8005\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528Kafka Connect\u7684Date\u7c7b\u578b\u6216ISO-8601\u683c\u5f0f\u7684\u5b57\u7b26\u4e32(\u53ef\u80fd\u4f7f\u7528\u7279\u5b9a\u65f6\u533a)\u83b7\u5f97\u8fd9\u6837\u7684\u65e5\u671f\u548c\u65f6\u95f4\u503c\n\u503c\u5c4f\u853d\uff1a\u654f\u611f\u6570\u636e\u53ef\u80fd\u9700\u8981\u5c4f\u853d\u6216\u622a\u65ad\uff0c\u6216\u8005\u751a\u81f3\u5e94\u8be5\u5b8c\u5168\u5220\u9664\u7279\u5b9a\u5b57\u6bb5\uff1b\u968fKafka Connect\u4e00\u8d77\u63d0\u4f9b\u7684org.apache.kafka.connect.transs.MaskField\u548cReplaceField SMT\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u6709\u7528\u3002\n\u6570\u5b57\u7c7b\u578b\uff1a\u4e0e\u65f6\u95f4\u6233\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7cfb\u7edf\u5bf9(\u5c0f\u6570)\u6570\u5b57\u8868\u793a\u7684\u8981\u6c42\u53ef\u80fd\u4e0d\u540c\uff1b\u4f8b\u5982\uff0cKafka Connect\u7684Decimal\u7c7b\u578b\u5141\u8bb8\u4f20\u9012\u4efb\u610f\u7cbe\u5ea6\u7684\u5c0f\u6570\uff0c\u4f46\u5176\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ef\u80fd\u4e0d\u53d7\u6240\u6709\u63a5\u6536\u5668\u8fde\u63a5\u5668\u548c\u6d88\u8d39\u8005\u7684\u652f\u6301\u3002\n\u540d\u79f0\u8c03\u6574\uff1a\u6839\u636e\u6240\u9009\u7684\u5e8f\u5217\u5316\u683c\u5f0f\uff0c\u53ef\u80fd\u4e0d\u652f\u6301\u7279\u5b9a\u7684\u5b57\u6bb5\u540d\u79f0\uff1b\u4f8b\u5982\uff0c\u5728\u4f7f\u7528Apache Avro\u65f6\uff0c\u5b57\u6bb5\u540d\u79f0\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002\n\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u73b0\u6210SMT\u6216\u5b9a\u5236\u5b9e\u73b0\u6765\u5e94\u7528\u6240\u9700\u7684\u5c5e\u6027\u7c7b\u578b\u548c/\u6216\u683c\u5f0f\u8f6c\u6362\u3002\n\u5f53\u4f7f\u7528Kafka Connect\u5c06\u9057\u7559\u670d\u52a1\u548c\u6570\u636e\u5e93\u4e0e\u65b0\u5efa\u7684\u5fae\u670d\u52a1\u96c6\u6210\u65f6\uff0c\u8fd9\u6837\u7684\u683c\u5f0f\u8f6c\u6362\u53ef\u4ee5\u5728\u521b\u5efa\u53cd\u8150\u8d25\u5c42\u65b9\u9762\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff1a\u901a\u8fc7\u4f7f\u7528\u66f4\u597d\u7684\u5b57\u6bb5\u540d\u79f0\u3001\u9009\u62e9\u66f4\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\u6216\u5220\u9664\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\uff0cSMT\u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u65b0\u670d\u52a1\u7684\u6a21\u578b\u4e0d\u53d7\u9057\u7559\u4e16\u754c\u7684\u53e4\u602a\u548c\u602a\u7656\u7684\u5f71\u54cd\u3002\n\u4f46\u662fSMT\u4e0d\u80fd\u53ea\u4fee\u6539\u5355\u4e2a\u5b57\u6bb5\u7684\u8868\u793a\uff0c\u8fd8\u53ef\u4ee5\u8c03\u6574\u6574\u4e2a\u6d88\u606f\u7684\u683c\u5f0f\u548c\u7ed3\u6784\u3002Kafka Connect\u7684ExtractField\u8f6c\u6362\u5141\u8bb8\u4ece\u6d88\u606f\u4e2d\u63d0\u53d6\u5355\u4e2a\u5b57\u6bb5\u5e76\u4f20\u64ad\u8be5\u5b57\u6bb5\u3002\u4e00\u4e2a\u76f8\u5173\u7684SMT\u662fDebezium\u7528\u4e8e\u66f4\u6539\u4e8b\u4ef6\u6241\u5e73\u5316\u7684SMT\u3002\u5b83\u53ef\u7528\u4e8e\u5c06\u590d\u6742\u7684Debezium\u66f4\u6539\u4e8b\u4ef6\u7ed3\u6784(\u5177\u6709\u65b0\u65e7\u884c\u72b6\u6001\u3001\u5143\u6570\u636e\u7b49)\u8f6c\u6362\u4e3a\u53ef\u7531\u8bb8\u591a\u73b0\u6709\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4f7f\u7528\u7684\u5e73\u9762\u884c\u8868\u793a\u5f62\u5f0f\u3002\nSMT\u8fd8\u5141\u8bb8\u5fae\u8c03\u6a21\u5f0f\u547d\u540d\u7a7a\u95f4\uff1b\u5f53\u4f7f\u7528\u6a21\u5f0f\u6ce8\u518c\u8868\u6765\u7ba1\u7406\u6a21\u5f0f\u53ca\u5176\u7248\u672c\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f88\u6709\u610f\u4e49\uff0c\u5e76\u4e14\u5e94\u8be5\u4e3a\u7ed9\u5b9a\u4e3b\u9898\u7684\u6d88\u606f\u5f3a\u5236\u4f7f\u7528\u7279\u5b9a\u7684\u6a21\u5f0f\u547d\u540d\u7a7a\u95f4\u3002\u8fd9\u4e00\u7c7b\u522b\u4e2d\u7684\u53e6\u5916\u4e24\u4e2a\u975e\u5e38\u6709\u7528\u7684SMT\u793a\u4f8b\u662fJeremy Cutenborde\u7684Kafka-connect-Transform-xml\u548ckafka-connect-json-schema\uff0c\u5b83\u5c06\u83b7\u53d6XML\u6216\u6587\u672c\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684XML\u6a21\u5f0f\u6216JSON\u751f\u6210\u7c7b\u578b\u5316\u7684Kafka Connect Struct\u3002\n\u6700\u540e\uff0c\u4f5c\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u683c\u5f0f\u8f6c\u6362\uff0cSMT\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u6216\u8bbe\u7f6eKafka\u8bb0\u5f55\u7684\u952e\u3002\u5982\u679c\u6e90\u8fde\u63a5\u5668\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u6709\u610f\u4e49\u7684\u952e\uff0c\u4f46\u53ef\u4ee5\u4ece\u8bb0\u5f55\u503c\u4e2d\u63d0\u53d6\u4e00\u4e2a\u952e\uff0c\u8fd9\u53ef\u80fd\u662f\u7406\u60f3\u7684\u3002\u6b64\u5916\uff0c\u5728\u8003\u8651\u540e\u7eed\u6d41\u5904\u7406\u65f6\uff0c\u66f4\u6539\u6d88\u606f\u952e\u4e5f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5728\u6e90\u7aef\u9009\u62e9\u5339\u914d\u7684\u952e\u5141\u8bb8\u901a\u8fc7Kafka\u6d41\u8fde\u63a5\u591a\u4e2a\u4e3b\u9898\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u8bb0\u5f55\u7684\u952e\u3002\nMac\u8bc4\u7ea7\uff1a*\ud83d\udcce+SMT\u662f\u8fdb\u884c\u5361\u592b\u5361\u8fde\u63a5\u8bb0\u5f55\u683c\u5f0f\u8f6c\u6362\u7684\u5b8c\u7f8e\u5de5\u5177\u3002\n\u5bf9Kafka\u8bb0\u5f55\u6a21\u5f0f\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u5bf9\u6d88\u8d39\u8005\u9020\u6210\u6f5c\u5728\u7684\u7834\u574f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bb0\u5f55\u5b57\u6bb5\u88ab\u91cd\u547d\u540d\uff0c\u6d88\u8d39\u8005\u5fc5\u987b\u76f8\u5e94\u5730\u8fdb\u884c\u8c03\u6574\uff0c\u4f7f\u7528\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u8bfb\u53d6\u503c\u3002\u5982\u679c\u5b57\u6bb5\u88ab\u5b8c\u5168\u5220\u9664\uff0c\u6d88\u8d39\u8005\u4e0d\u80fd\u518d\u671f\u5f85\u6b64\u5b57\u6bb5\u3002\n\u6d88\u606f\u8f6c\u6362\u53ef\u4ee5\u5e2e\u52a9\u5b9e\u73b0\u4ece\u4e00\u4e2a\u6a21\u5f0f\u7248\u672c\u5230\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u7248\u672c\u7684\u8fd9\u79cd\u8f6c\u6362\uff0c\u4ece\u800c\u51cf\u5c11\u6d88\u606f\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u751f\u547d\u5468\u671f\u7684\u8026\u5408\u3002\u5728\u91cd\u547d\u540d\u5b57\u6bb5\u7684\u60c5\u51b5\u4e0b\uff0cSMT\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u540d\u79f0\u518d\u6b21\u6dfb\u52a0\u8be5\u5b57\u6bb5\u3002\u8fd9\u5c06\u5141\u8bb8\u6d88\u8d39\u8005\u7ee7\u7eed\u4f7f\u7528\u65e7\u540d\u79f0\u8bfb\u53d6\u8be5\u5b57\u6bb5\uff0c\u5e76\u4e14\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u901f\u5ea6\u5347\u7ea7\u4e3a\u4f7f\u7528\u65b0\u540d\u79f0\u3002\u5728\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u4e00\u65e6\u6240\u6709\u6d88\u8d39\u8005\u90fd\u5df2\u88ab\u8c03\u6574\uff0c\u5219SMT\u53ef\u4ee5\u518d\u6b21\u88ab\u79fb\u9664\uff0c\u53ea\u66b4\u9732\u51fa\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u5f53\u6240\u6709\u6d88\u8d39\u8005\u90fd\u88ab\u8c03\u6574\u4e4b\u540e\uff0cSMT\u53ef\u4ee5\u518d\u6b21\u88ab\u79fb\u9664\uff0c\u53ea\u66b4\u9732\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u7c7b\u4f3c\u5730\uff0c\u4e00\u4e2a\u3002\u4f8b\u5982\u4f7f\u7528\u67d0\u79cd\u6052\u5b9a\u7684\u5360\u4f4d\u7b26\u503c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4ece\u5176\u4ed6\u4ecd\u7136\u5b58\u5728\u7684\u5b57\u6bb5\u5bfc\u51fa\u8be5\u5b57\u6bb5\u503c\u3002\u7136\u540e\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u81ea\u5df1\u7684\u901f\u5ea6\u88ab\u66f4\u65b0\u4ee5\u4e0d\u518d\u671f\u671b\u548c\u8bbf\u95ee\u8be5\u5b57\u6bb5\u3002\n\u4f46\u662f\u5e94\u8be5\u8bf4\uff0c\u8fd9\u79cd\u4f7f\u7528\u662f\u6709\u9650\u5236\u7684\uff1a\u4f8b\u5982\uff0c\u5f53\u6539\u53d8\u5b57\u6bb5\u7684\u7c7b\u578b\u65f6\uff0c\u4e8b\u60c5\u5f88\u5feb\u53d8\u5f97\u68d8\u624b\u3002\u4e00\u79cd\u9009\u62e9\u53ef\u4ee5\u662f\u591a\u6b65\u9aa4\u65b9\u6cd5\uff0c\u5176\u4e2d\u9996\u5148\u6dfb\u52a0\u5177\u6709\u65b0\u7c7b\u578b\u7684\u5355\u72ec\u5b57\u6bb5\uff0c\u7136\u540e\u5982\u4e0a\u6240\u8ff0\u518d\u6b21\u91cd\u547d\u540d\u5b83\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0cSMT\u4e3b\u8981\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u56f4\u7ed5\u6a21\u5f0f\u6f14\u53d8\u7684\u57fa\u672c\u517c\u5bb9\u6027\u95ee\u9898\u3002\n\u5728\u6e90\u7aef\u5e94\u7528\u65f6\uff0cSMT\u5141\u8bb8\u8fc7\u6ee4\u51fa\u8fde\u63a5\u5668\u751f\u6210\u7684\u7279\u5b9a\u8bb0\u5f55\u3002\u5b83\u4eec\u8fd8\u53ef\u7528\u4e8e\u63a7\u5236\u8bb0\u5f55\u53d1\u9001\u5230\u7684Kafka\u4e3b\u9898\u3002\u5f53\u8fc7\u6ee4\u548c\u8def\u7531\u57fa\u4e8e\u5b9e\u9645\u8bb0\u5f55\u5185\u5bb9\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u8da3\u3002\u4f8b\u5982\uff0c\u5728\u4f7f\u7528Kafka Connect\u4ece\u67d0\u79cd\u4f20\u611f\u5668\u83b7\u53d6\u6570\u636e\u7684\u7269\u8054\u7f51\u65b9\u6848\u4e2d\uff0cSMT\u53ef\u7528\u4e8e\u8fc7\u6ee4\u6389\u4f4e\u4e8e\u7279\u5b9a\u9608\u503c\u7684\u6240\u6709\u4f20\u611f\u5668\u6d4b\u91cf\u7ed3\u679c\uff0c\u6216\u5c06\u9ad8\u4e8e\u9608\u503c\u7684\u6d4b\u91cf\u4e8b\u4ef6\u8def\u7531\u5230\u7279\u5b9a\u4e3b\u9898\u3002\n\u903b\u8f91\u4e3b\u9898Routing SMT\u5141\u8bb8\u5c06\u6e90\u81ea\u591a\u4e2a\u8868\u7684\u66f4\u6539\u4e8b\u4ef6\u53d1\u9001\u5230\u540c\u4e00Kafka\u4e3b\u9898\uff0c\u8fd9\u5728\u5904\u7406Postgres\u4e2d\u7684\u5206\u533a\u8868\u6216\u5904\u7406\u5206\u7247\u5230\u591a\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\u975e\u5e38\u6709\u7528\u3002\nFilter\u548cContentBasedRouter SMT\u5141\u8bb8\u60a8\u4f7f\u7528Groovy\u6216JavaScript\u7b49\u8bed\u8a00\u4e2d\u7684\u811a\u672c\u8868\u8fbe\u5f0f\uff0c\u6839\u636e\u66f4\u6539\u4e8b\u4ef6\u7684\u5185\u5bb9\u8fc7\u6ee4\u548c\u8def\u7531\u66f4\u6539\u4e8b\u4ef6\uff1b\u8fd9\u79cd\u57fa\u4e8e\u811a\u672c\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u6613\u7528\u6027(\u6ca1\u6709Java\u4ee3\u7801\u5fc5\u987b\u7f16\u8bd1\u548c\u90e8\u7f72\u5230Kafka Connect)\u548c\u8868\u73b0\u529b\u4e4b\u95f4\u6709\u8da3\u7684\u4e2d\u95f4\u5730\u5e26\uff1b\u4f8b\u5982\uff0c\u8def\u7531SMT\u5982\u4f55\u4e0eGraalVM\u7684JavaScript\u5f15\u64ce\u4e00\u8d77\u4f7f\u7528\uff0c\u6839\u636e\u8ba2\u5355\u7c7b\u578b\u5c06\u66f4\u6539\u4e8b\u4ef6\u4ece\u5305\u542b\u91c7\u8d2d\u8ba2\u5355\u7684\u8868\u8def\u7531\u5230Kafka\u4e2d\u7684\u4e0d\u540c\u4e3b\u9898\uff1a\n\u53d1\u4ef6\u7bb1\u4e8b\u4ef6\u8def\u7531\u5668\u5728\u5b9e\u73b0\u5fae\u670d\u52a1\u4e4b\u95f4\u6570\u636e\u4f20\u64ad\u7684\u4e8b\u52a1\u53d1\u4ef6\u7bb1\u6a21\u5f0f\u65f6\u975e\u5e38\u65b9\u4fbf\uff1a\u5b83\u53ef\u4ee5\u7528\u4e8e\u5c06\u6e90\u81ea\u5355\u4e2a\u53d1\u4ef6\u7bb1\u8868\u7684\u4e8b\u4ef6\u53d1\u9001\u5230\u6bcf\u4e2a\u805a\u5408(\u5f53\u8003\u8651\u57df\u9a71\u52a8\u8bbe\u8ba1\u65f6)\u6216\u4e8b\u4ef6\u7c7b\u578b\u7684\u7279\u5b9aKafka\u4e3b\u9898\u3002\n\u5728Kafka Connect\u672c\u8eab\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7528\u4e8e\u8def\u7531\u7684SMT\uff1aRegexRouter\uff0c\u5b83\u5141\u8bb8\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u91cd\u65b0\u8def\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u4e3b\u9898\uff1b\u4ee5\u53caTimestampRouter\uff0c\u7528\u4e8e\u6839\u636e\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\u786e\u5b9a\u4e3b\u9898\u540d\u79f0\u3002\n\u867d\u7136\u8def\u7531SMT\u901a\u5e38\u5e94\u7528\u4e8e\u6e90\u8fde\u63a5\u5668(\u5b9a\u4e49\u8bb0\u5f55\u53d1\u9001\u5230\u7684Kafka\u4e3b\u9898)\uff0c\u4f46\u5c06\u5b83\u4eec\u4e0e\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4e00\u8d77\u4f7f\u7528\u4e5f\u662f\u6709\u610f\u4e49\u7684\u3002\u5f53\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4ece\u4e3b\u9898\u540d\u79f0\u6d3e\u751f\u4e0b\u6e38\u8868\u540d\u3001\u7d22\u5f15\u540d\u6216\u7c7b\u4f3c\u540d\u79f0\u65f6\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0c\u6d88\u606f\u8fc7\u6ee4\u548c\u4e3b\u9898\u8def\u7531\u2009-\u2009\u5bf9SMT\u6ca1\u6709\u95ee\u9898\u3002\n\u5893\u7891\u8bb0\u5f55\u662f\u7a7a\u503c\u7684Kafka\u8bb0\u5f55\uff0c\u5b83\u4eec\u5728\u5904\u7406\u538b\u7f29\u4e3b\u9898\u65f6\u5177\u6709\u7279\u6b8a\u7684\u8bed\u4e49\uff1a\u5728\u65e5\u5fd7\u538b\u7f29\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u4e0e\u5893\u7891\u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5173\u952e\u5b57\u7684\u8bb0\u5f55\u90fd\u5c06\u4ece\u4e3b\u9898\u4e2d\u79fb\u9664\u3002\n\u5728\u538b\u7f29\u53d1\u751f\u4e4b\u524d\uff0c\u5893\u7891\u5c06\u5728\u4e3b\u9898\u4e0a\u4fdd\u7559\u4e00\u6bb5\u53ef\u914d\u7f6e\u7684\u65f6\u95f4(\u901a\u8fc7delete.retention.ms\u4e3b\u9898\u8bbe\u7f6e\u8fdb\u884c\u63a7\u5236)\uff0c\u8fd9\u610f\u5473\u7740Kafka Connect\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4e5f\u9700\u8981\u5904\u7406\u5b83\u4eec\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8fde\u63a5\u5668\u90fd\u4e3anull\u503c\u7684\u8bb0\u5f55\u505a\u597d\u4e86\u51c6\u5907\uff0c\u901a\u5e38\u4f1a\u5bfc\u81f4NullPointerException\u548c\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u8fc7\u6ee4SMT\u6765\u5220\u9664\u5893\u7891\u8bb0\u5f55\u3002\n\u73b0\u5728\uff0c\u5f53\u4f7f\u7528\u50cfDebezium\u8fd9\u6837\u7684\u2009-\u2009\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6(\u5373\uff0c\u4e0d\u7269\u7406\u5730\u5220\u9664\u8bb0\u5f55\uff0c\u4f46\u662f\u5728\u5220\u9664\u8bb0\u5f55\u65f6\u5c06\u903b\u8f91\u5220\u9664\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u771f)\uff0c\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684)\u3002\u73b0\u5728\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982Debezium\u7684\u2009-\u2009\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6\uff0c\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684)\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982Debezium\u8fd9\u6837\u7684CDC\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6(\u5373\uff0c\u6ca1\u6709\u7269\u7406\u5220\u9664\u8bb0\u5f55\uff0c\u4f46\u662f\u5728\u5220\u9664\u8bb0\u5f55\u65f6\u5c06\u903b\u8f91\u5220\u9664\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u771f)\uff0c\u5219\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0cSMT\u5728\u4e22\u5f03\u5893\u7891\u6216\u5c06\u8f6f\u5220\u9664\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u5893\u7891\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4e0d\u8fc7\uff0c\u4e0d\u53ef\u80fd\u5728\u4fdd\u7559\u539f\u59cb\u4e8b\u4ef6\u7684\u540c\u65f6\u751f\u6210\u989d\u5916\u7684\u5893\u7891\u8bb0\u5f55\n\u751a\u81f3\u4e00\u4e9b\u9ad8\u7ea7\u7684\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u5728SMT\u7684\u5e2e\u52a9\u4e0b\u5b9e\u73b0\uff0c\u7d22\u8d54\u68c0\u67e5\u6a21\u5f0f\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u6b64\u6a21\u5f0f\u5728\u5982\u4e0b\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\uff1a\n\u6d88\u606f\u53ef\u80fd\u5305\u542b\u6d88\u606f\u6d41\u7a0d\u540e\u53ef\u80fd\u9700\u8981\u7684\u4e00\u7ec4\u6570\u636e\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u4e2d\u95f4\u5904\u7406\u6b65\u9aa4\u90fd\u9700\u8981\u8fd9\u4e9b\u6570\u636e\u9879\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u60f3\u5728\u6bcf\u4e2a\u5904\u7406\u6b65\u9aa4\u4e2d\u643a\u5e26\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u5e76\u4e14\u56e0\u4e3a\u6211\u4eec\u643a\u5e26\u4e86\u5982\u6b64\u591a\u7684\u989d\u5916\u6570\u636e\u800c\u4f7f\u8c03\u8bd5\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u662f\u4ece\u6570\u636e\u5e93\u8868USERS\u6355\u83b7\u66f4\u6539\u7684CDC\u8fde\u63a5\u5668\uff0c\u5b83\u5177\u6709\u4e00\u4e2a\u5305\u542b\u7528\u6237\u4e2a\u4eba\u8d44\u6599\u56fe\u7247\u7684BLOB\u5217(\u5f53\u7136\u4e0d\u662f\u6700\u4f73\u5b9e\u8df5\uff0c\u5728\u73b0\u5b9e\u2026\u4e2d\u4ecd\u7136\u4e0d\u662f\u90a3\u4e48\u5c11\u89c1\u3002\u200b)\u3002\nApache Kafka\u4e0d\u9002\u7528\u4e8e\u5927\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u6d88\u606f\u5927\u5c0f\u4e3a1 MB\uff0c\u867d\u7136\u8fd9\u4e2a\u5927\u5c0f\u53ef\u4ee5\u589e\u52a0\uff0c\u4f46\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\uff0c\u5c0f\u5f97\u591a\u7684\u6d88\u606f\u5177\u6709\u6700\u4f73\u541e\u5410\u91cf\u3002\u56e0\u6b64\uff0c\u5206\u5757\u548c\u5916\u90e8\u5316\u5927\u6709\u6548\u8d1f\u8f7d\u7b49\u7b56\u7565\u5bf9\u4e8e\u786e\u4fdd\u4ee4\u4eba\u6ee1\u610f\u7684\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\n\u5c06\u66f4\u6539\u6570\u636e\u4e8b\u4ef6\u4ece\u8be5\u8868\u4f20\u64ad\u5230Apache Kafka\u65f6\uff0c\u5c06\u56fe\u7247\u6570\u636e\u6dfb\u52a0\u5230\u6bcf\u4e2a\u4e8b\u4ef6\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u5f00\u9500\uff0c\u7279\u522b\u662f\u5982\u679c\u56fe\u7247blob\u5728\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u6839\u672c\u6ca1\u6709\u66f4\u6539\u3002\n\u4f7f\u7528SMT\uff0cBLOB\u6570\u636e\u53ef\u4ee5\u5916\u90e8\u5316\u5230\u5176\u4ed6\u5b58\u50a8\u3002\u5728\u6e90\u7aef\uff0cSMT\u53ef\u4ee5\u4ece\u539f\u59cb\u8bb0\u5f55\u63d0\u53d6\u56fe\u50cf\u6570\u636e\uff0c\u4f8b\u5982\u5c06\u5176\u5199\u5165\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u6216Amazon S3\u5b58\u50a8\u6876\u3002\u8bb0\u5f55\u4e2d\u7684\u76f8\u5e94\u5b57\u6bb5\u5c06\u66f4\u65b0\uff0c\u4ee5\u4fbf\u4ec5\u5305\u542b\u5916\u90e8\u5316\u6709\u6548\u8d1f\u8f7d\u7684\u552f\u4e00\u5730\u5740\uff0c\u5982S3\u5b58\u50a8\u6876\u540d\u79f0\u548c\u6587\u4ef6\u8def\u5f84\uff1a\n\u4f5c\u4e3a\u4f18\u5316\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u5916\u90e8\u5316\u6587\u4ef6\u7684\u65e9\u671f\u6563\u5217\u548c\u5f53\u524d\u6563\u5217\u6765\u907f\u514d\u518d\u6b21\u91cd\u65b0\u4e0a\u4f20\u672a\u6539\u53d8\u7684\u6587\u4ef6\u5185\u5bb9\u3002\n\u5e94\u7528\u4e8e\u63a5\u6536\u5668\u8fde\u63a5\u5668\u7684\u76f8\u5e94SMT\u5b9e\u4f8b\u5c06\u4ece\u4f20\u5165\u8bb0\u5f55\u4e2d\u68c0\u7d22\u5916\u90e8\u5316\u6587\u4ef6\u7684\u6807\u8bc6\u7b26\uff0c\u4ece\u5916\u90e8\u5b58\u50a8\u5668\u83b7\u53d6\u5185\u5bb9\uff0c\u5e76\u5728\u5c06\u5176\u4f20\u9012\u5230\u8fde\u63a5\u5668\u4e4b\u524d\u5c06\u5176\u653e\u56de\u8bb0\u5f55\u4e2d\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8ba4\u4e3aSMT\u53ef\u4ee5\u5e2e\u52a9\u5c06\u6709\u6548\u8f7d\u8377\u5916\u90e8\u5316\uff0c\u907f\u514d\u5927\u91cf\u7684\u5361\u592b\u5361\u8bb0\u5f55\u3002\u4e0d\u8fc7\uff0c\u4f9d\u8d56\u53e6\u4e00\u9879\u670d\u52a1\u4f1a\u589e\u52a0\u6574\u4f53\u590d\u6742\u6027\u3002\n\u6b63\u5982\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u7684\uff0c\u5355\u4e00\u6d88\u606f\u8f6c\u6362\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3Kafka Connection\u7528\u6237\u901a\u5e38\u63d0\u51fa\u7684\u76f8\u5f53\u591a\u7684\u8981\u6c42\u3002\u4f46\u4e5f\u6709\u5c40\u9650\u6027\uff1b\u5c31\u50cfMacGyver\u4e00\u6837\uff0c\u9664\u4e86\u4ed6\u5fc3\u7231\u7684\u745e\u58eb\u519b\u5200\u4e4b\u5916\uff0c\u6709\u65f6\u8fd8\u5fc5\u987b\u4f7f\u7528\u5176\u4ed6\u5de5\u5177\uff0c\u60a8\u4e0d\u5e94\u8be5\u4e00\u76f4\u8ba4\u4e3aSMT\u662f\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6700\u5927\u7684\u7f3a\u70b9\u5df2\u7ecf\u5728\u5b83\u4eec\u7684\u540d\u5b57\u4e2d\u88ab\u6697\u793a\u4e86\uff1aSMT\u53ea\u80fd\u7528\u6765\u5904\u7406\u5355\u4e2a\u8bb0\u5f55\uff0c\u4e00\u6b21\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u8bb0\u5f55\u3002\u60a8\u4e0d\u80fd\u4f7f\u7528SMT\u5c06\u4e00\u6761\u8bb0\u5f55\u5206\u5272\u4e3a\u591a\u6761\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5b83\u4eec\u6700\u591a\u53ea\u80fd\u8fd4\u56de\u4e00\u6761\u8bb0\u5f55\u3002\u6b64\u5916\uff0c\u4efb\u4f55\u7c7b\u578b\u7684\u72b6\u6001\u5904\u7406(\u5982\u805a\u5408\u591a\u6761\u8bb0\u5f55\u4e2d\u7684\u6570\u636e\u6216\u5173\u8054\u591a\u4e2a\u4e3b\u9898\u4e2d\u7684\u8bb0\u5f55)\u90fd\u662fSMT\u7684\u7981\u533a\u3002\u5bf9\u4e8e\u6b64\u7c7b\u7528\u4f8b\uff0c\u60a8\u5e94\u8be5\u8003\u8651Kafka Streams\u548cApache Flink\u7b49\u6d41\u5904\u7406\u6280\u672f\uff1b\u6b64\u5916\uff0cApache Camel\u7b49\u96c6\u6210\u6280\u672f\u5728\u6b64\u4e5f\u975e\u5e38\u6709\u7528\u3002\n\u5728\u4f7f\u7528SMT\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\u914d\u7f6e\u7684\u590d\u6742\u6027\uff1b\u5f53\u4f7f\u7528\u901a\u7528\u7684\u3001\u9ad8\u5ea6\u53ef\u914d\u7f6e\u7684SMT\u65f6\uff0c\u60a8\u53ef\u80fd\u6700\u7ec8\u4f1a\u5f97\u5230\u5f88\u96be\u638c\u63e1\u548c\u8c03\u8bd5\u7684\u5197\u957f\u914d\u7f6e\u3002\u60a8\u6700\u597d\u5b9e\u73b0\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u4e00\u4e2a\u7279\u5b9a\u4efb\u52a1\u7684\u5b9a\u5236SMT\uff0c\u5145\u5206\u5229\u7528Java\u7f16\u7a0b\u8bed\u8a00\u7684\u5168\u90e8\u529f\u80fd\u3002\n\u65e0\u8bba\u60a8\u662f\u901a\u8fc7\u914d\u7f6e\u4f7f\u7528\u73b0\u6210\u7684SMT\uff0c\u8fd8\u662f\u5728Java\u4e2d\u5b9e\u73b0\u81ea\u5b9a\u4e49SMT\uff0c\u6d4b\u8bd5\u60a8\u7684\u5de5\u4f5c\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u867d\u7136\u5355\u5143\u6d4b\u8bd5\u662f\u5b9a\u5236SMT\u5b9e\u73b0\u7684\u57fa\u672c\u6d4b\u8bd5\u7684\u53ef\u884c\u9009\u62e9\uff0c\u4f46\u662f\u5efa\u8bae\u4f7f\u7528\u9488\u5bf9Kafka Connect\u8fde\u63a5\u5668\u8fd0\u884c\u7684\u96c6\u6210\u6d4b\u8bd5\u6765\u6d4b\u8bd5SMT\u914d\u7f6e\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u786e\u4fddSMT\u53ef\u4ee5\u5904\u7406\u5b9e\u9645\u6d88\u606f\uff0c\u5e76\u4e14\u5df2\u7ecf\u6309\u7167\u60a8\u60f3\u8981\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u914d\u7f6e\u3002\nTestContainers\u548c\u5bf9TestContainers\u7684Debezium\u652f\u6301\u662f\u8bbe\u7f6e\u6240\u6709\u5fc5\u9700\u7ec4\u4ef6(\u5982Apache Kafka\u3001Kafka Connect\u3001\u8fde\u63a5\u5668\u548c\u8981\u6d4b\u8bd5\u7684SMT)\u7684\u91cd\u8981\u57fa\u7840\u3002\n\u6211\u65f6\u4e0d\u65f6\u5e0c\u671b\u7684\u4e00\u4e2a\u7279\u5b9a\u529f\u80fd\u662f\uff0c\u80fd\u591f\u5c06SMT\u4ec5\u5e94\u7528\u4e8e\u8fde\u63a5\u5668\u521b\u5efa\u6216\u4f7f\u7528\u7684\u4e3b\u9898\u7684\u7279\u5b9a\u5b50\u96c6\u3002\u5c24\u5176\u662f\uff0c\u5982\u679c\u8fde\u63a5\u5668\u521b\u5efa\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u9898(\u5982\u5b9e\u9645\u7684\u6570\u636e\u4e3b\u9898\u548c\u53e6\u4e00\u4e2a\u5177\u6709\u5143\u6570\u636e\u7684\u4e3b\u9898)\uff0c\u5219\u53ef\u80fd\u5e0c\u671b\u53ea\u5c06SMT\u5e94\u7528\u4e8e\u4e00\u4e2a\u7ec4\u7684\u4e3b\u9898\uff0c\u800c\u4e0d\u5e94\u7528\u4e8e\u53e6\u4e00\u4e2a\u7ec4\u7684\u4e3b\u9898\u3002KIP-585(\u7b5b\u9009\u548c\u6761\u4ef6SMT)\u4e2d\u5305\u542b\u4e86\u8fd9\u4e00\u8981\u6c42\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u8981\uff0c\u8bf7\u52a0\u5165\u5230\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\u4e2d\u3002\u5982\u679c\u60a8\u6709\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5230\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\u4e2d\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\n\u6709\u51e0\u4e2a\u5f88\u68d2\u7684\u6f14\u793a\u6587\u7a3f\u548c\u535a\u5ba2\u6587\u7ae0\u6df1\u5165\u63cf\u8ff0\u4e86\u4ec0\u4e48\u662fSMT\uff0c\u60a8\u53ef\u4ee5\u5982\u4f55\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684SMT\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u914d\u7f6e\u7684\uff0c\u7b49\u7b49\u3002\n\u5355\u4e00\u6d88\u606f\u8f6c\u6362\u4e0d\u662f\u60a8\u6b63\u5728\u5bfb\u627e\u7684\u8f6c\u6362\uff1a\u5173\u4e8eSMT\u3001\u5b83\u4eec\u7684\u529f\u80fd\u4ee5\u53ca\u9650\u5236\u7684\u5f88\u597d\u7684\u6982\u8ff0\uff0cEwen Cheslake-Postava\u8457\u3002\nKafka Connect SMT\u7684\u5b9e\u8df5\u4f53\u9a8c\uff1a\u5173\u4e8eSMT\u4f7f\u7528\u6848\u4f8b\u3001\u6ce8\u610f\u4e8b\u9879\u7b49\u7684\u6df1\u5165\u535a\u5ba2\u6587\u7ae0\uff0c\u4f5c\u8005\uff1aGian D\u2018Uia\u3002\n\u73b0\u5728\uff0c\u8003\u8651\u5230SMT\u7684\u5e7f\u6cdb\u4f7f\u7528\u6848\u4f8b\uff0cMacGyver\u4f1a\u559c\u6b22\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u5b9e\u65bdKafka Connect\u5468\u56f4\u7684\u5404\u79cd\u4efb\u52a1\u5417\uff1f\u6211\u5f53\u7136\u4f1a\u8fd9\u6837\u8ba4\u4e3a\u3002\u4f46\u4e00\u5982\u65e2\u5f80\uff0c\u5fc5\u987b\u9009\u62e9\u9002\u5408\u8fd9\u9879\u5de5\u4f5c\u7684\u6b63\u786e\u5de5\u5177\uff1a\u6709\u65f6SMT\u53ef\u80fd\u975e\u5e38\u5408\u9002\uff0c\u800c\u6709\u65f6\u66f4\u7075\u6d3b(\u66f4\u590d\u6742)\u7684\u6d41\u5904\u7406\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u66f4\u53ef\u53d6\u3002\n\u5c31\u50cfMacGyver\u4e00\u6837\uff0c\u5f53\u4f60\u4f7f\u7528\u745e\u58eb\u519b\u5200\u3001\u7ba1\u9053\u80f6\u5e26\u6216\u56de\u5f62\u9488\u65f6\uff0c\u4f60\u5fc5\u987b\u6253\u4e2a\u7535\u8bdd\u3002\n\u7531Disqus\u63d0\u4f9b\u652f\u6301\u7684\u8bc4\u8bba", "note_en": "Do you remember Angus &#34;Mac&#34; MacGyver?The always creative protagonist of the popular 80ies/90ies TV show, who could solve about any problem with nothing more than a Swiss Army knife, duct tape, shoe strings and a paper clip?\n The single message transformations (SMTs) of Kafka Connect are almost as versatile as MacGyver\u2019s Swiss Army knife:\n  SMTs can be the answer to these and many other questions that come up in the context of Kafka Connect.Applied to source or sink connectors,SMTs allow to modify Kafka records before they are sent to Kafka, or after they are consumed from a topic, respectively.\n In this post I\u2019d like to focus on some interesting (hopefully anyways) usages of SMTs.Those use cases are mostly based on my experiences from using Kafka Connect with  Debezium, an open-source platform for change data capture (CDC).I also got some great pointers on interesting SMT usages when  asking the community about this on Twitter some time ago:\n  I definitely recommend to check out the thread; thanks a lot to all who replied!In order to learn more about SMTs in general, how to configure them etc., refer to the resources given towards the end of this post.\n For each category of use cases, I\u2019ve also asked our sympathetic TV hero for his opinion on the usefulness of SMTs for the task at hand.You can find his rating at the end of each section,ranging from \ud83d\udcce (poor fit) to \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce (perfect fit).\n Probably the most common application of SMTs is format conversion,i.e. adjustments to type, format and representation of data.This may apply to entire messages, or to specific message attributes.Let\u2019s first look at a few examples for converting individual message attribute formats:\n Timestamps: Different systems tend to have different assumptions of how timestamps should be typed and formatted.Debezium for instance represents most temporal column types as milli-seconds since epoch.Change event consumers on the other hand might expect such date and time values using Kafka Connect\u2019s  Date type, or as an ISO-8601 formatted string, potentially using a specific timezone\n Value masking: Sensitive data might have be to masked or truncated, or specific fields should even be removed altogether; the  org.apache.kafka.connect.transforms.MaskField and  ReplaceField SMTs  shipping with Kafka Connect out of the box come in handy for that\n Numeric types: Similar to timestamps, requirements around the representation of (decimal) numbers may differ between systems; e.g. Kafka Connect\u2019s  Decimal type allows to convey arbitrary-precision decimals, but its binary representation of numbers might not be supported by all sink connectors and consumers\n Name adjustments: Depending on the chosen serialization formats, specific field names might be unsupported; when working with  Apache Avro for instance, field names must not start with a number\n In all these cases, either existing, ready-made SMTs or bespoke implementations can be used to apply the required attribute type and/or format conversions.\n When using Kafka Connect for integrating legacy services and databases with newly built microservices, such format conversions can play an important role for creating an  anti-corruption layer: by using better field names, choosing more suitable data types or by removing unneeded fields, SMTs can help to shield a new service\u2019s model from the oddities and quirks of the legacy world.\n But SMTs cannot only modify the representation of single fields, also the format and structure of entire messages can be adjusted.E.g. Kafka Connect\u2019s  ExtractField transformation allows to extract a single field from a message and propagate that one.A related SMT is Debezium\u2019s SMT for  change event flattening.It can be used to convert the complex Debezium change event structure with old and new row state, metadata and more, into a flat row representation, which can be consumed by many existing sink connectors.\n SMTs also allow to fine-tune schema namespaces; that can be of interest when working with a schema registry for managing schemas and their versions, and specific schema namespaces should be enforced for the messages on given topics.Two more, very useful examples of SMTs in this category are  kafka-connect-transform-xml and  kafka-connect-json-schema by Jeremy Custenborder, which will take XML or text and produce a typed Kafka Connect  Struct,based on a given XML schema or JSON schema, respectively.\n Lastly, as a special kind of format conversion, SMTs can be used to modify or set the key of Kafka records.This may be desirable if a source connector doesn\u2019t produce any meaningful key, but one can be extracted from the record value.Also  changing the message key can be useful, when considering subsequent stream processing.Choosing matching keys right at the source side e.g. allows for joining multiple topics via Kafka Streams, without the need for re-keying records.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs are the perfect tool for format conversions of Kafka Connect records\n Changes to the schema of Kafka records can potentially be disruptive for consumers.If for instance a record field gets renamed, a consumer must be adapted accordingly,reading the value using the new field name.In case a field gets dropped altogether, consumers must not expect this field any longer.\n Message transformations can help with such transition from one schema version to the next,thus reducing the coupling of the lifecycles of message producers and consumers.In case of a renamed field, an SMT could add the field another time, using the original name.That\u2019ll allow consumers to continue reading the field using the old name and to be upgraded to use the new name at their own pace.After some time, once all consumers have been adjusted, the SMT can be removed again,only exposing the new field name going forward.Similarly, a field that got removed from a message schema could be re-added,e.g. using some sort of constant placeholder value.In other cases it might be possible to derive the field value from other, still existing fields.Again consumers could then be updated at their own pace to not expect and access that field any longer.\n It should be said though that there are limits for this usage: e.g. when changing the type of a field, things quickly become tricky.One option could be a multi-step approach where at first a separate field with the new type is added, before renaming it again as described above.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs can primarily help to address basic compatibility concerns around schema evolution\n When applied on the source side,SMTs allow to filter out specific records produced by the connector.They also can be used for controlling the Kafka topic a record gets sent to.That\u2019s in particular interesting when filtering and routing is based on the actual record contents.In an IoT scenario for instance where Kafka Connect is used to ingest data from some kind of sensors,an SMT might be used to filter out all sensor measurements  below a certain threshold, or route measurement events  above a threshold to a special topic.\n  The  logical topic routing SMT allows to send change events originating from multiple tables to the same Kafka topic,which can be useful when working with partition tables in Postgres, or with data that is sharded into multiple tables\n The   Filter and   ContentBasedRouter SMTs let you use script expressions in languages such as Groovy or JavaScript for filtering and routing change events based on their contents;such script-based approach can be an interesting middleground between ease-of-use (no Java code must be compiled and deployed to Kafka Connect) and expressiveness; e.g. here is how the routing SMT could be used with  GraalVM\u2019s JavaScript engine for routing change events from a table with purchase orders to different topics in Kafka, based on the order type:\n The  outbox event router comes in handy when implementing the  transactional outbox pattern for data propagation between microservices: it can be used to send events originating from a single outbox table to a specific Kafka topic per aggregate (when thinking of domain driven design) or event type\n There are also two SMTs for routing purposes in Kafka Connect  itself:  RegexRouter which allows to re-route records two different topics based on regular expressions, and  TimestampRouter for determining topic names based on the record\u2019s timestamp.\n While routing SMTs usually are applied to source connectors(defining the Kafka topic a record gets sent to),it can also make sense to use them with sink connectors.That\u2019s the case when a sink connector derives the name of downstream table names, index names or similar from the topic name.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  Message filtering and topic routing\u2009\u2014\u2009no problem for SMTs\n Tombstone records are Kafka records with a  null value.They carry special semantics when working with  compacted topics:during log compaction, all records with the same key as a tombstone record will be removed from the topic.\n Tombstones will be retained on a topic for a configurable time before compaction happens (controlled via   delete.retention.ms topic setting),which means that also Kafka Connect sink connectors need to handle them.Unfortunately though, not all connectors are prepared for records with a  null value,typically resulting in  NullPointerExceptions and similar.A filtering SMT such as the one above can be used to drop tombstone records in such case.\n But also the exact opposite\u2009\u2014\u2009producing tombstone records\u2009\u2014\u2009can be useful:some sink connectors use tombstone records as the indicator to delete corresponding rows from a downstream datastore.Now when using a CDC connector like Debezium to capture changes from a database where &#34;soft deletes&#34; are used (i.e. records are not physically deleted, but a logically deleted flag is set to  true when deleting a record), those change events will be exported as update events (which they technically are).A bespoke SMT can be used to translate these update events into tombstone records, triggering the deletion of corresponding records in downstream datastores.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs work well to discard tombstones or convert soft delete events into tombstones. What\u2019s not possible though is to keep the original event and produce an additional tombstone record at the same time\n Even some advanced  enterprise application patterns can be implemented with the help of SMTs, one example being the  claim check pattern.This pattern comes in handy in situations like this:\n A message may contain a set of data items that may be needed later in the message flow, but that are not necessary for all intermediate processing steps. We may not want to carry all this information through each processing step because it may cause performance degradation and makes debugging harder because we carry so much extra data.\n A specific example could again be a CDC connector that captures changes from a database table  Users, with a BLOB column that contains the user\u2019s profile picture(surely not a best practice, still not that uncommon in reality\u2026\u200b).\n Apache Kafka isn\u2019t meant for large messages.The maximum message size is 1 MB by default, and while this can be increased,benchmarks are showing best throughput for much smaller messages.Strategies like  chunking and externalizing large payloads can thus be vital in order to ensure a satisfying performance.\n When propagating change data events from that table to Apache Kafka,adding the picture data to each event poses a significant overhead.In particular, if the picture BLOB hasn\u2019t changed between two events at all.\n Using an SMT, the BLOB data could be externalized to some other storage.On the source side, the SMT could extract the image data from the original record and e.g. write it to a network file system or an Amazon S3 bucket.The corresponding field in the record would be updated so it just contains the unique address of the externalised payload, such as the S3 bucket name and file path:\n  As an optimization, it could be avoided to re-upload unchanged file contents another time by comparing earlier and current hash of the externalized file.\n A corresponding SMT instance applied to sink connectors would retrieve the identifier of the externalized files from the incoming record, obtain the contents from the external storage and put it back into the record before passing it on to the connector.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs can help to externalize payloads, avoiding large Kafka records. Relying on another service increases overall complexity, though\n As we\u2019ve seen, single message transformations can help to address quite a few requirements that commonly come up for users of Kafka Connect.But there are limitations, too;Like MacGyver, who sometimes has to reach for some other tool than his beloved Swiss Army knife, you shouldn\u2019t think of SMTs as the perfect solution all the time.\n The biggest shortcoming is already hinted at in their name:SMTs only can be used to process  single records, one at a time.E.g. you cannot split up a record into multiple ones using an SMT, as they only can return (at most) one record.Also any kind of stateful processing, like aggregating data from multiple records, or correlating records from several topics is off limits for SMTs.For such use cases, you should be looking at stream processing technologies like  Kafka Streams and  Apache Flink; also integration technologies like  Apache Camel can be of great use here.\n One thing to be aware of when working with SMTs is configuration complexity;when using generic, highly configurable SMTs, you might end up with lengthy configuration that\u2019s hard to grasp and debug.You might be better off implementing a bespoke SMT which is focussing on one particular task, leveraging the full capabilities of the Java programming language.\n Whether you use ready-made SMTs by means of configuration, or you implement custom SMTs in Java,testing your work is essential.\n While unit tests are a viable option for basic testing of bespoke SMT implementations,integration tests running against Kafka Connect connectors are recommended for testing SMT configurations.That way you\u2019ll be sure that the SMT can process actual messages and it has been configured the way you intended to.\n Testcontainers and the Debezium  support for Testcontainers are a great foundation for setting up all the required components such as Apache Kafka, Kafka Connect, connectors and the SMTs to test.\n A specific feature I wished for every now and then is the ability to apply SMTs only to a specific sub-set of the topics created or consumed by a connector.In particular if connectors create different kinds of topics (like an actual data topic and another one with with metadata),it can be desirable to apply SMTs only to the topics of one group but not the other.This requirement is captured in  KIP-585 (&#34;Filter and Conditional SMTs&#34;),please join the discussion on that one if you got requirements or feedback related to that.\n There are several great presentations and blog posts out there which describe in depth what SMTs are,how you can implement your own one,how they are configured etc.\n  Singe Message Transforms are not the Transformations You\u2019re Looking For: A great overview on SMTs, their capabilities as well as limitations, by Ewen Cheslack-Postava\n A hands-on experience with Kafka Connect SMTs: In-depth blog post on SMT use cases, things to be aware of and more, by Gian D\u2019Uia\n Now, considering this wide range of use cases for SMTs, would MacGyver like and use them for implementing various tasks around Kafka Connect?I would certainly think so.But as always, the right tool for the job must be chosen: sometimes an SMT may be a great fit, another time a more flexible (and complex) stream processing solution might be preferable.\n Just as MacGyver, you got to make a call when to use your Swiss Army knife, duct tape or a paper clip.\n    comments powered by  Disqus", "posttime": "2020-05-17 06:53:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6c\u6362,message,smt", "title": "\u5355\u4e00\u4fe1\u606f\u8f6c\u6362-\u5361\u592b\u5361\u8fde\u63a5\u7684\u745e\u58eb\u519b\u5200", "title_en": "Single Message Transformations \u2013 The Swiss Army Knife of Kafka Connect", "transed": 1, "url": "https://www.morling.dev/blog/single-message-transforms-swiss-army-knife-of-kafka-connect/", "via": "", "real_tags": ["\u8f6c\u6362", "message", "smt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002456, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Design Studio\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u60a8\u4ee5\u56fe\u5f62\u65b9\u5f0f\u89c4\u5212\u590d\u6742\u7684vPC\u8bbe\u8ba1\u3001\u8ba1\u7b97\u5b50\u7f51\u7684\u6700\u4f73CIDR\u8303\u56f4\u5e76\u52a8\u6001\u751f\u6210Terraform/Pulumi\u4ee3\u7801\u3002", "note_en": "Design studio tool to help you graphically plan complex VPC design, calculate the optimal CIDR range for subnets and generate Terraform/Pulumi code on the fly.", "posttime": "2020-05-17 06:53:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aws,vpc,\u8bbe\u8ba1", "title": "\u9ed8\u8ba4\u5177\u6709\u6700\u4f73\u5b9e\u8df5\u7684AWS vPC Design Studio", "title_en": "AWS VPC design studio with best practices default", "transed": 1, "url": "https://houqp.github.io/vpcstudio/", "via": "", "real_tags": ["aws", "vpc", "\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "9eee82cd44609f8fe1a1cb4cc57ca40c.jpg", "infoid": 1002455, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7cfb\u5217\u9762\u5411\u7684\u662f\u65b0\u63a5\u89e6Kubernetes\u548cGKE\u7684\u5de5\u7a0b\u5e08\u3002\u5b83\u63d0\u4f9b\u4e86Kubernetes\u7684\u57fa\u672c\u6982\u8ff0\u3001\u5b9a\u4e49\u548c\u5728GKE\u4e2d\u6784\u5efaKubernetes\u96c6\u7fa4\u7684\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u53ca\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u591a\u5c42WebApp\u7684\u7814\u8ba8\u4f1a\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u66f4\u6df1\u5165\u7684Kubernetes\u6700\u4f73\u5b9e\u8df5\u548c\u5e2e\u52a9\uff0c\u8bf7\u8054\u7cfb\u3002\n\u5728\u6211\u4eec\u5f00\u59cb\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2aGKE\u96c6\u7fa4\u4e4b\u524d\uff0c\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8eKubernetes\u7684\u4e8b\u60c5\u662f\u5f88\u91cd\u8981\u7684\u3002\nKubernetes(K8S)\u662f\u4e00\u4e2a\u5f00\u6e90\u7cfb\u7edf\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u3002\u6d88\u606f\u6765\u6e90\uff1aKubernetes.io\u3002\n2005\u5e74\uff0c\u8c37\u6b4c\u63a8\u51fa\u4e86\u535a\u683c\u7cfb\u7edf\u3002\u5b83\u4e00\u5f00\u59cb\u53ea\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e09\u4e2a\u4eba\u53c2\u4e0e\u7684\u5c0f\u9879\u76ee\u3002\u8fd9\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u7684\u96c6\u7fa4\u7ba1\u7406\u548c\u8d44\u6e90\u8c03\u5ea6\u7cfb\u7edf\uff0c\u5b83\u5f15\u5165\u4e86\uff1a\n\u8fc7\u5ea6\u627f\u8bfa\u7684\u88c5\u7bb1-\u5982\u4f55\u8ba9\u591a\u4e2a\u7cfb\u7edf\u548c\u8fdb\u7a0b\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u4e0d\u53d7\u5e72\u6270\u5730\u8fd0\u884c\u3002\n\u8fdb\u7a0b\u7ea7\u8d44\u6e90\u9694\u79bb-\u5982\u679c\u60a8\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u8c03\u5ea6\u5bb9\u5668\uff0c\u5982\u4f55\u786e\u4fdd\u8fdb\u7a0b\u9700\u6c42\u4e0d\u4f1a\u5e72\u6270\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u8fdb\u7a0b\u9700\u6c42\u3002\n\u5e93\u4f2f\u5185\u65af\u628a\u8fd9\u4e00\u5207\u90fd\u53d8\u6210\u4e86\u9648\u8ff0\u6027\u7684\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u83b7\u53d6\u60a8\u9700\u8981\u8c03\u5ea6\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5728YAML\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5b83\u4eec\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u63d0\u4ea4\u7ed9API\uff0cAPI\u4f1a\u544a\u8bc9\u60a8\u5b83\u662f\u5426\u80fd\u591f\u8c03\u5ea6\u5de5\u4f5c\u3002\n2014\u5e74\uff0c\u8c37\u6b4c\u5f15\u5165Kubernetes\u4f5c\u4e3aBorg\u7cfb\u7edf\u7684\u5f00\u6e90\u7248\u672c\u30022015\u5e74\uff0c\u8c37\u6b4c\u4e0eLinux\u57fa\u91d1\u4f1a\u8054\u5408\u6210\u7acb\u4e86\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a(CNCF)\u3002\u540c\u5e74\uff0c\u7b2c\u4e00\u6b21KubeCon\u6d3b\u52a8\u4e3e\u884c\uff0cCNCF\u5f00\u59cb\u4e86Kubernetes\u7684\u5b63\u5ea6\u53d1\u5e03\u5468\u671f\u3002\n\u5f53\u60a8\u4f7f\u7528Kubernetes\u8fd9\u6837\u7684\u5bb9\u5668\u7f16\u6392\u7a0b\u5e8f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5728\u8bb8\u591a\u4e0d\u540c\u7684\u65f6\u95f4\u8de8\u591a\u53f0\u673a\u5668\u8c03\u5ea6\u8282\u70b9\u6216\u8fdb\u7a0b\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u4e22\u5931\u4e00\u4e2a\u8282\u70b9\u6216\u8fdb\u7a0b\uff0c\u800c\u4e0d\u4f1a\u770b\u5230\u670d\u52a1\u7684\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u4e2d\u65ad\u3002\n\u5982\u679c\u60a8\u662f\u7cfb\u7edf\u64cd\u4f5c\u5458\uff0c\u5f00\u53d1\u4eba\u5458\u5e0c\u671b\u60a8\u7ed9\u4ed6\u4eec\u4e00\u5929\u591a\u6b21\u90e8\u7f72\u4ee3\u7801\u7684\u673a\u4f1a\u3002Kubernetes\u5141\u8bb8\u60a8\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u6eda\u52a8\u66f4\u65b0\u7684\u667a\u80fd\u6d41\u7a0b\u548c\u65b9\u6848\u3002\n\u60a8\u53ef\u4ee5\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u8c03\u5ea6\u591a\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u8ba9\u60a8\u5168\u5929\u5019\u4ed8\u8d39\u5728\u5355\u4e2a\u4e91\u8282\u70b9\u4e0a\u8fd0\u884c\u5355\u4e2a\u8fdb\u7a0b\u3002\u60a8\u7684\u4e91\u8282\u70b9\u8fd8\u53ef\u4ee5\u8bc6\u522b\u4f55\u65f6\u65e0\u6cd5\u8c03\u5ea6\u65b0\u8fdb\u7a0b\u4ece\u800c\u9700\u8981\u65b0\u8d44\u6e90\uff0c\u6216\u8005\u4f55\u65f6\u8d44\u6e90\u7a7a\u95f2\u5e76\u9700\u8981\u964d\u901f\u3002\u5e93\u4f2f\u5185\u65af\u63d0\u4f9b\u4e86\u5207\u6362\u8fd9\u79cd\u5f39\u6027\u7684\u7b80\u5355\u65b9\u6cd5\u3002\nKubernetes\u63d0\u4f9b\u4e86\u53ef\u9760\u6027\u3002\u5982\u679c\u5bb9\u5668\u6216\u6574\u4e2a\u8282\u70b9\u5b95\u673a\uff0c\u8d44\u6e90\u6216\u5355\u4e2a\u8fdb\u7a0b\u5c06\u7531Kubernetes\u5728\u5065\u5eb7\u8282\u70b9\u4e0a\u91cd\u65b0\u8c03\u5ea6\u3002\nKubernetes\u5141\u8bb8\u60a8\u542f\u52a8\u65b0\u8282\u70b9\u5e76\u81ea\u52a8\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u96c6\u7fa4\u4e2d\u3002\u5982\u679c\u5355\u4e2a\u670d\u52a1\u662f\u8d44\u6e90\u53d7\u9650\u7684\uff0cKubernetes\u4f1a\u68c0\u6d4b\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u5e26\u6765\u65b0\u7684\u5b9e\u4f8b\u6765\u5904\u7406\u989d\u5916\u7684\u8d1f\u8f7d\u3002", "note_en": "This series is intended for engineers new to Kubernetes and GKE. It provides a basic overview of Kubernetes,  definitions \u00a0and  a quick start for building a Kubernetes cluster in GKE \u00a0and a workshop for building your first multi-tier webapp. If you are looking for more in-depth Kubernetes best practices and help,  get in touch.\n Before we get into building your first GKE cluster, it\u2019s important to understand a few things about Kubernetes.\n  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications. Source:  Kubernetes.io\n  In 2005, Google introduced the Borg System. It started as a small project with two or three people working on it. It was a large scale cluster management and resource scheduling system that introduced:\n Bin packing with over-commitment - how do we get many systems and processes running on a single node without interference\n Process level resource isolation - if you schedule a container on a single node, how do you ensure the process requirements doesn\u2019t interfere with the process requirements of another\n Kubernetes made all of this declarative. That means you can take your workloads you need to schedule, define them in a YAML file, submit them to an API and the API tells you if it was able to schedule the work.\n  In 2014, Google introduced Kubernetes as an open source version of the Borg system. In 2015, Google joined with the Linux Foundation to form the  Cloud Native Computing Foundation (CNCF). That same year the first KubeCon event was held and the CNCF started quarterly release cycles for Kubernetes.\n   When you work with a container orchestrator like Kubernetes, you can schedule nodes or processes across many machines, many different times. This allows you to lose a node or process without seeing a disruption in uptime of your service.\n  If you are a systems operator, developers want you to give them the opportunity to deploy code multiple times a day. Kubernetes allows you to implement smart processes and schemes for rolling updates without downtime.\n  Rather than having a single process running on a single cloud node that you pay for 24/7, you can schedule many processes on a single node. Your cloud nodes can also recognize when new processes cannot be scheduled and thus require new resources, or alternatively, when resources are idle and need to be spun down. Kubernetes offers easy ways to toggle this elasticity.\n  Kubernetes provides reliability. If a container or entire node goes down, resources or a single process will be rescheduled by Kubernetes on a healthy node.\n  Kubernetes allows you to bring up new nodes and automatically add them to your cluster. If a single service is resource constrained, Kubernetes will detect this and bring up new instances to handle the additional load.", "posttime": "2020-05-17 06:52:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u65af,kubernetes", "title": "\u5e93\u4f2f\u5185\u65af\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\uff1f", "title_en": "What Problems Does Kubernetes Solve?", "transed": 1, "url": "https://www.fairwinds.com/blog/what-problems-does-kubernetes-solve", "via": "", "real_tags": ["\u5185\u65af"]}, {"category": "", "categoryclass": "", "imagename": "f3bf8287c7a47b84a51a73a9a3560e72.png", "infoid": 1002454, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5206\u4eab\u4e86ELK\u6808\u53ef\u4ee5\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5e26\u6765\u591a\u5c11\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u4e3a\u60a8\u63d0\u4f9b\u4e86\u76d1\u63a7\u529f\u80fd\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5e26\u60a8\u4e86\u89e3\u5982\u4f55\u5c06Go\u5e94\u7528\u7a0b\u5e8f\u4e0eelk\u96c6\u6210\uff0celk\u6709\u54ea\u4e9b\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u4e3a\u5b83\u4eec\u521b\u5efa\u57fa\u672c\u914d\u7f6e\u3002\n\u5bf9\u4e8e\u575e\u7ad9\uff0c\u8bf7\u6309\u7167\u6b64\u5904\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\u5bf9\u4e8e\u575e\u7ad9\u7ec4\u5408\uff0c\u8bf7\u6309\u7167\u6b64\u5904\u7684\u5b89\u88c5\u8bf4\u660e\u64cd\u4f5c\u3002\n\u76ee\u524d\uff0crepo\u53ea\u6709\u4e00\u4e2amain.go\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4ee5\u4e00\u5b9a\u7684\u95f4\u9694\u8bb0\u5f55\u968f\u673a\u65e5\u5fd7\u884c\u3002\u6709\u65f6\uff0c\u5b83\u4f1a\u4f20\u64ad\u9519\u8bef\u65e5\u5fd7\u884c\u3002\n\u8fd9\u662f\u4e09\u79cd\u4e0d\u540c\u7684\u5de5\u5177\uff0c\u7531Elastic\u516c\u53f8\u521b\u5efa\uff0c\u901a\u5e38\u4e00\u8d77\u4f7f\u7528\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u80fd\u591f\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u6216\u7cfb\u7edf\u65e5\u5fd7\u76d1\u63a7\u751f\u4ea7\u7cfb\u7edf\u3002\nBeats\u662f\u4e00\u7ec4\u7ecf\u8fc7\u5fae\u8c03\u7684\u5c0f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6536\u96c6\u4e0d\u540c\u7c7b\u578b\u7684\u65e5\u5fd7\u6570\u636e-\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u3001\u4ece\u64cd\u4f5c\u7cfb\u7edf\u65e5\u5fd7\u3001\u4eceWindows\u4e8b\u4ef6\u65e5\u5fd7\u7b49\u3002\n\u7531\u4e8eELBK\u542c\u8d77\u6765\u6ca1\u6709ELK\u90a3\u4e48\u82b1\u54e8\uff0c\u6211\u4eec\u4ecd\u7136\u5c06\u8be5\u5806\u6808\u79f0\u4e3aELK\u5806\u6808\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5206\u522b\u7814\u7a76\u8fd9\u4e9b\u7ec4\u4ef6\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u5e76\u76f8\u5e94\u5730\u5b89\u88c5\u5b83\u4eec(amp\uff1bInstall)\u3002\n\u8fd9\u53ef\u4ee5\u662f\u4efb\u4f55JSON\u5e8f\u5217\u5316\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u8fd9\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521b\u5efa\u9762\u5411\u7528\u6237\u7684\u641c\u7d22\u680f\u3002\n\u60a8\u53ef\u4ee5\u5c06\u8fd9\u9879\u5de5\u4f5c\u5916\u5305\u7ed9ElasticSearch\uff0c\u8fd9\u5c06\u6bd4\u6211\u4eec\u4e24\u4e2a\u90fd\u505a\u5f97\u597d\u5f97\u591a\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u5904\u7406\u7cdf\u7cd5\u7684\u5b57\u7b26\u4e32\u3002\n\u4f46\u662f\uff0c\u5728\u6211\u4eec\u7684\u7528\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Elasticsearch\u6765\u5b58\u50a8\u7ed3\u6784\u5316\u65e5\u5fd7\u3002\u7ed3\u6784\u5316\u65e5\u5fd7\u662f\u5c06\u5176\u5185\u5bb9\u7ec4\u7ec7\u5230JSON\u5bf9\u8c61\u4e2d\u7684\u65e5\u5fd7\u3002\n\u4f7f\u7528\u7ed3\u6784\u5316\u65e5\u5fd7\uff0c\u60a8\u53ef\u4ee5\u7a0d\u540e\u7d22\u5f15\u8fd9\u4e9b\u952e\uff0c\u5e76\u5feb\u901f\u65e0\u7f1d\u5730\u5206\u6790\u5927\u91cf\u65e5\u5fd7\u3002\u8fd9\u6b63\u662f\u9e8b\u9e7f\u5806\u6808\u63d0\u4f9b\u7684\u529f\u80fd\u3002\n\u7279\u522b\u662f\uff0cElasticSearch\u5c06\u4ee5\u4f18\u5316\u7684\u65b9\u5f0f\u5b58\u50a8\u6b64\u65e5\u5fd7\u884c\uff0c\u4ee5\u4fbf\u7a0d\u540e\u8fdb\u884c\u641c\u7d22\u548c\u5206\u6790\u3002\n\u8981\u5b89\u88c5ElasticSearch\uff0c\u9996\u5148\u5728repo\u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2adocker-compose.yml\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u521d\u59cbYAML\uff1a\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u8c03\u51fa\u4e00\u4e2a\u540d\u4e3aElasticSearch\u7684\u670d\u52a1\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u540d\u79f0\uff0c\u4f46\u8003\u8651\u5230\u5b83\u7684\u4f5c\u7528\uff0c\u8fd9\u4e2a\u540d\u79f0\u6700\u5177\u63cf\u8ff0\u6027\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7ed9\u5b9a\u7684\u7248\u672c\u62c9\u53d6\u4e00\u4e2a\u5df2\u7ecf\u8bbe\u7f6e\u597d\u7684\u575e\u7ad9\u6620\u50cf\u3002\n\u8fd9\u4f7f\u6211\u4eec\u4e0d\u5fc5\u8d39\u5fc3\u4ece\u5934\u5f00\u59cb\u8bbe\u7f6e\u56fe\u50cf\u3002\u5df2\u7ecf\u6709\u4eba\u63d0\u4f9b\u4e86\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u6b63\u5728\u91cd\u7528\u5b83\u3002\n\u5426\u5219\uff0c\u60a8\u5c06\u4e0d\u5f97\u4e0d\u8d39\u5fc3\u5730\u8bbe\u7f6e\u73af\u5883\u3001\u5b89\u88c5\u4f9d\u8d56\u9879\u3001\u914d\u7f6e\u5b83\u4eec\u3001\u624b\u52a8\u5b89\u88c5ElasticSearch\u7b49\u3002\n\u901a\u8fc7\u6b64\u884c\uff0c\u6211\u4eec\u8868\u793a\u672c\u5730\u76ee\u5f55./config/elasticsearch.yml\u5c06\u6302\u8f7d\u5728/usr/Share/Elasticsearch/\u2026\u4e0a\u3002\u5e76\u4e14\u5b83\u5c06\u662f\u53ea\u8bfb\u7684(\u7531ro\u6807\u5fd7\u6307\u793a)\u3002\n\u6b64\u90e8\u5206\u6307\u5b9a\u6211\u4eec\u5c06\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5bf9\u5bb9\u5668\u8fdb\u884c\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\uff1a\n\u6211\u4eec\u603b\u5171\u5c06\u8fdb\u884c10\u6b21\u91cd\u8bd5\uff0c\u5982\u679c\u6240\u6709\u91cd\u8bd5\u90fd\u5931\u8d25\uff0cdocker\u4f1a\u5c06\u6b64\u5bb9\u5668\u6807\u8bb0\u4e3a\u4e0d\u5065\u5eb7\uff0c\u5e76\u901a\u77e5\u4f9d\u8d56\u7684\u5bb9\u5668\u3002\n\u914d\u7f6e\u7684\u6700\u540e\u4e00\u90e8\u5206\u5c06\u5bb9\u5668\u7684\u5185\u90e89200\u7aef\u53e3\u6620\u5c04\u5230\u5b9e\u9645\u76849200\u7aef\u53e3\uff1a\n\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u4e3aElasticSearch\u6dfb\u52a0\u5230docker-compose.yml\u7684\u5168\u90e8\u5185\u5bb9\u3002\u6700\u540e\uff0c\u5c06\u6b64\u914d\u7f6e\u6dfb\u52a0\u5230./config/astic ticsearch.yml\u4e2d\uff1a\n\u901a\u5e38\uff0cElasticSearch\u5728\u8282\u70b9\u7fa4\u96c6\u4e2d\u8fd0\u884c\uff0c\u5176\u4e2d\u5305\u542b\u5fc5\u987b\u914d\u7f6e\u7684\u4e3b\u548c\u4ece\u8282\u70b9\u3002\n\u4e3a\u4e86\u4f7f\u672c\u7ec3\u4e60\u7b80\u5355\u6613\u61c2\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5355\u4e2aElasticSearch\u8282\u70b9\u3002\n\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u60a8\u5e94\u8be5\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5f00\u59cb\u770b\u5230ElasticSearch\u65e5\u5fd7\uff0c\u5e76\u4e14\u5bb9\u5668\u5e94\u8be5\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u9519\u8bef\u884c\u6216\u4efb\u4f55\u6307\u5411\u95ee\u9898\u7684\u5185\u5bb9\uff1a\n\u6b64\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u53ef\u80fd\u4f1a\u5f39\u51fa\u4e00\u4e9b\u95ee\u9898\u3002\n\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u5806\u6808\u4e2d\u7684\u4e0b\u4e00\u4e2a\u7ec4\u4ef6-logstash\u3002\n\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4e0eElasticSearch\u4ea4\u4e92\uff0c\u4f46\u662flogstash\u901a\u5e38\u7528\u4f5c\u4e00\u4e2a\u6709\u7528\u7684\u4e2d\u4ecb\uff0c\u4ee5\u8282\u7701\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u7aef\u7684\u4e00\u4e9b\u5de5\u4f5c\u3002\n\u4e0e\u524d\u9762\u4e00\u6837\uff0c\u6211\u4eec\u5c06./config/logstash.conf\u6587\u4ef6\u6302\u8f7d\u5230logstash\u7684\u9ed8\u8ba4\u914d\u7f6e\u4f4d\u7f6e\u3002\n\u6700\u540e\uff0cDependers_on\u90e8\u5206\u6307\u51fa\uff0c\u53ea\u6709\u5f53ElasticSearch\u670d\u52a1\u542f\u52a8\u5e76\u4e14\u8fd0\u884c\u6b63\u5e38\u65f6\uff0c\u8be5\u670d\u52a1\u624d\u5e94\u8be5\u542f\u52a8\u3002\n\u8f93\u5165\u90e8\u5206\u6307\u5b9alogstash\u4ece\u4f55\u5904\u63a5\u53d7\u6570\u636e\u3002\u5b83\u6709\u4e00\u4e2a\u540d\u4e3abeats\u7684\u5185\u7f6e\u63d2\u4ef6\uff0c\u53ef\u4ee5\u81ea\u52a8\u4e0e\u6211\u4eec\u7a0d\u540e\u4f7f\u7528\u7684\u6587\u4ef6\u8282\u62cd\u7b49beats\u5e94\u7528\u7a0b\u5e8f\u96c6\u6210\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8868\u793a\u5c06\u5728\u7aef\u53e35044\u4e0a\u63a5\u53d7\u6765\u81eaBEATS\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u3002\n\u5728\u7b5b\u9009\u5668\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4efb\u4f55\u81ea\u5b9a\u4e49\u7b5b\u9009\u5668\u6216\u6620\u5c04(\u4f8b\u5982\uff0c\u4ee5\u81ea\u5b9a\u4e49\u683c\u5f0f\u5c06\u4e00\u4e2a\u8f93\u5165\u5b57\u6bb5\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a)\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u6307\u5b9a\u6e90\u7ed3\u6784\u5316\u65e5\u5fd7\u5c06\u6765\u81eaMessage\u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u662ffilebeat\u5b58\u50a8\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u7684\u7f3a\u7701\u952e\u3002\n\u8fd9\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u7d22\u5f15\u65e5\u5fd7\u4e2d\u7684\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u901a\u8fc7fileBeat\u548c/\u6216logstash\u63d2\u5165\u7684\u5bc6\u94a5\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230ElasticSearch(\u5c31\u50cf\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u90a3\u6837)\uff0c\u5e76\u901a\u8fc7\u5176\u9ed8\u8ba4\u7aef\u53e39200\u4e0e\u5176\u96c6\u6210\u3002\n\u5982\u679c\u5c06ElasticSearch\u7684\u9ed8\u8ba4\u7aef\u53e3\u66f4\u6539\u4e3a\u5176\u4ed6\u7aef\u53e3\uff0c\u5219\u8fd8\u5fc5\u987b\u4fee\u6539\u6b64\u90e8\u5206\u3002\n\u73b0\u5728\u540c\u65f6\u8fd0\u884cElasticSearch\u548clogstash\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u90fd\u542f\u52a8\u65f6\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff1a\nFileBeat\u662f\u4e00\u4e2aBEATS\u5e94\u7528\u7a0b\u5e8f(\u8fd8\u6709\u66f4\u591a)\uff0c\u5b83\u8d1f\u8d23\u76d1\u89c6\u65e5\u5fd7\u6587\u4ef6\u4e2d\u7684\u66f4\u6539\u5e76\u5c06\u5176\u8f6c\u53d1\u5230logstash\u3002\n\u5982\u679c\u6ca1\u6709fileBeat\uff0c\u60a8\u5c06\u4e0d\u5f97\u4e0d\u81ea\u5df1\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u4e0elogstash\u7684\u96c6\u6210\u3002\n\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f-\u60a8\u6307\u5b9a\u5b83\u5e94\u8be5\u76d1\u89c6\u7684\u65e5\u5fd7\u7684\u8def\u5f84&\u5b83\u5c06\u5b9a\u671f\u5904\u7406\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u4f20\u64ad\u5230logstash\u3002\n\u5927\u90e8\u5206\u65b0\u7684\u90e8\u5206\u4e0e\u6211\u4eec\u4e3a\u5176\u4f59\u670d\u52a1\u6240\u505a\u7684\u5de5\u4f5c\u975e\u5e38\u76f8\u4f3c\u3002\n\u8fd9\u4e24\u9879\u65b0\u670d\u52a1\u90fd\u4f9d\u8d56\u4e8eElasticSearch\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u90fd\u4f9d\u8d56\u4e8e\u5404\u81ea\u7684\u57fa\u7ebf\u6269\u5c55\u5e95\u5ea7\u56fe\u50cf\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7684Go\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u5f53\u524d\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u7684GOPATH\u7684\u5b50\u76ee\u5f55\u4e2d\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5728\u5bb9\u5668\u7684\u6807\u51c6config\u76ee\u5f55\u4e2d\u6302\u8f7d\u4e86\u6587\u4ef6\u8282\u62cd\u914d\u7f6e\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7684Go\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u8fd8\u6307\u5b9a\u5bb9\u5668\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\n\u6b64\u914d\u7f6e\u6307\u5b9a\u670d\u52a1\u5c06\u4fa6\u542c/logs\u4e2d\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u7684\u66f4\u6539\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5c06\u901a\u8fc7\u7aef\u53e35044\u5c06\u6240\u6709\u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u4fe1\u606f\u8f93\u51fa\u5230logstash\u3002\n\u5bf9\u4e8e\u6765\u81eaBEATS\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u6211\u4eec\u8fd8\u5728logstash\u670d\u52a1\u914d\u7f6e\u4e2d\u5c06\u8be5\u7aef\u53e3\u5217\u5165\u767d\u540d\u5355\u3002\n\u8bbe\u7f6e\u7684\u6700\u540e\u4e00\u5757\u662fKibana\u3002\u5b83\u662f\u7528\u4e8e\u5206\u6790\u5b58\u50a8\u5728Elasticsearch\u4e2d\u7684\u6570\u636e\u7684\u524d\u7aef\u3002\n\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u3001\u997c\u56fe\u3001\u6570\u636e\u8868\u7b49\u53ef\u89c6\u5316\u5927\u91cf\u7684\u6570\u636e\uff0c\u4ee5\u4fbf\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u5fd7\u76d1\u89c6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u5b83\u5b89\u88c5\u57fa\u7ebf\u6269\u5c55\u575e\u955c\u50cf\uff0c\u4f9d\u8d56\u4e8eElasticSearch\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\uff0c\u5e76\u5c06\u5176\u5185\u90e8\u7aef\u53e35601\u6620\u5c04\u5230\u673a\u5668\u7684\u5b9e\u9645\u7aef\u53e35601\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u6dfb\u52a0\u60a8\u7684golang\u5e94\u7528\u7a0b\u5e8f\u5bf9kibana\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u6574\u4e2a\u5bb9\u5668\u5806\u6808\u53ea\u6709\u5728kibana\u7684\u670d\u52a1\u5668\u51c6\u5907\u597d\u4e4b\u540e\u624d\u4f1a\u542f\u52a8\uff1a\n\u73b0\u5728\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u8f6c\u5230http://localhost:5601/app/kibana\u5e76\u770b\u5230Kibana\u7684\u4e3b\u9875\u52a0\u8f7d\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u6267\u884c\u6700\u540e\u4e00\u4e2a\u53ef\u9009\u6b65\u9aa4\uff0c\u5219\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u542f\u52a8Kibana\uff1a\n\u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7Kibana\u641c\u7d22\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u6765\u6d4b\u8bd5\u4e00\u5207\u662f\u5426\u6b63\u786e\u96c6\u6210\u3002\n\u73b0\u5728\uff0c\u60a8\u5e94\u8be5\u5df2\u7ecf\u5f88\u597d\u5730\u7406\u89e3\u4e86ELK\u5806\u6808\u662f\u5982\u4f55\u5de5\u4f5c\u7684&\u4ee5\u53ca\u5b83\u7684\u6bcf\u4e2a\u4e0d\u540c\u7ec4\u4ef6\u3002\u6b64\u5916\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u5f88\u597d\u5730\u638c\u63e1\u4e86\u5982\u4f55\u6b63\u786e\u914d\u7f6eELK\u8bbe\u7f6e&\u5c06\u5176\u8fde\u63a5\u5230GO\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u6570\u636e\u8bbe\u7f6e\u6709\u7528\u7684\u4eea\u8868\u677f\uff0c\u5f00\u59cb\u4f7f\u7528Kibana\u3002", "note_en": "In my  last post, I shared how much value the ELK stack could bring for your application in terms of the monitoring capabilities it gives you.\n In this post, I will walk you through how to integrate your Go application with ELK, what are the different parts of ELK, how they work and how to create a basic configuration for them.\n     For  docker, follow the installation instructions for your platform  here. For  docker-compose, follow the installation instructions  here.\n Currently, the repo simply has a  main.go file which logs random log lines on certain intervals. Occasionally, it propagates error log lines.\n    These are three different tools, created by the  elastic company, which are typically used together to enable developers &amp; sys admins to monitor production systems based on application or system logs.\n  Beats is a collection of small programs which are fine-tuned to gather different kinds of logging data \u2013 e.g. from files, from OS system logs, from Windows event logs, etc.\n Since ELBK doesn\u2019t sound as fancy as ELK, we still refer to the stack as the ELK stack.\n In the following sections, we will explore each of these components separately &amp; install them accordingly.\n     This can be any JSON-serialized object. This can be used, for example, to create a user-facing search bar in your application.\n Instead of doing manual &amp; lame string processing of search terms, you can outsource this to elasticsearch which will do a much better job than both of us.\n However, in our use-case, we will use Elasticsearch for storing  structured logs. A structured log is one, which organizes its contents into a JSON object.\n   Using a structured log, you can later index into these keys and analyse bulks of your logs fast &amp; seamlessly. This is exactly what the ELK stack provides.\n Elasticsearch, in particular, will store this log line in a way optimized for search &amp; analysis later.\n  To install elasticsearch, first create a  docker-compose.yml file in the root of the repo and add this initial yaml:\n   In this case, we only bring up a single service which is called  elasticsearch. You can choose any name you like, but this one is the most descriptive, given what it does.\n  This means that we are pulling an already setup docker image with the given version.\n This enables us to not bother with setting up an image from scratch. Someone has already provided that out of the box, so we are reusing it.\n Otherwise, you will have to bother with setting up the environment, installing dependencies, configuring them, installing elasticsearch manually, etc.\n  With this line, we are indicating that the local directory  ./config/elasticsearch.yml will be mounted on  /usr/share/elasticsearch/\u2026 in the container and it will be read-only (indicated by the  ro flag).\n   This part designates that we will make health checks on the container by running the command:\n  We will do 10 retries in total and if all fail, docker marks this container as  unhealthy and notifies dependent containers.\n The final part of the configuration maps the container\u2019s internal  9200 port to our real  9200 port:\n This is all we need to add to  docker-compose.yml for elasticsearch. Finally, add this configuration in  ./config/elasticsearch.yml:\n  Typically, elasticsearch runs in a cluster of nodes with masters &amp; slaves in them which have to be configured.\n To keep things simple &amp; digestible for this exercise, we will use a single elasticsearch node.\n    If all went well, you should start seeing the elasticsearch logs after a while and the container should not show any error lines or anything pointing to an issue:\n  At this point, have in mind that there might be some issues which might pop-up.\n   If all went went, you can continue with the next component in our stack \u2013  logstash.\n    In reality, you can interact with elasticsearch directly, but logstash is typically used as a helpful intermediary to save yourself some work on the application side.\n     As before, we are mounting the  ./config/logstash.conf file into  logstash\u2019s default config location.\n Finally, the  depends_on section indicates that this service should only boot up when the elasticsearch service is up and healthy.\n    The  input section specifies where logstash accepts data from. It has a built-in plugin called  beats, which automatically integrates with beats applications, such as filebeat, which we\u2019ll use later.\n Here, we indicate that we\u2019ll accept input from beats applications on  port 5044.\n In the  filter section, you can add any custom filters or mappings (e.g. transforming one input field to another in a custom format).\n Here, we only specify that the source structured log will come from the  message field, which is the default key where  filebeat stores the actual application log.\n This will enable us to index the custom application keys in our log, not only the ones plugged in by  filebeat and/or  logstash.\n  It can by default connect to  elasticsearch (as we\u2019ve done here) and integrate with it via its  default port 9200.\n If you change  elasticsearch\u2019s default port to something else, you will have to modify this section as well.\n Now run both elasticsearch and logstash and make sure they both boot up without any issues:\n    Filebeat is a beats application (there are more), which is responsible for monitoring changes in log files and forwarding them to logstash.\n Without filebeat, you would have to manage your application\u2019s integration with  logstash yourself.\n The way it works is \u2013 you specify a path to your logs which it should monitor &amp; it will handle propagating those logs on regular intervals to logstash.\n    The bulk of the new sections are pretty similar to what we already did for the rest of our services.\n Both new services depend on  elasticsearch being healthy, both depend on their respective baseline docker images.\n  For our go app, we\u2019ve mounted the current directory in a subdirectory of the container\u2019s  GOPATH.\n    In addition to that, we\u2019ve mounted the  filebeat configuration in the standard config directory on the container.\n For our Go app, we\u2019ve also specified that once the container is setup, we\u2019ll run our application via the command:\n  This configuration specifies that the service will listen for changes to all log files in  /logs. Additionally, It will output any new logging info to logstash via  port 5044.\n We also whitelisted that port in our  logstash service config for inputs from beats applications.\n  The final piece of the setup is  Kibana. It is a front-end for analysing the data stored in Elasticsearch.\n With it, you can visualize a huge array of data via graphs, pie charts, data tables, etc, in order to monitor what\u2019s happening in your application via its logs.\n     It installs the baseline docker image, depends on  elasticsearch, has a health check of its own and maps its internal  port 5601 to the machine\u2019s real  port 5601.\n In addition to this, you can, optionally, add a dependency of your golang application on  kibana to make sure your entire container stack boots up only after  Kibana\u2019s server is ready:\n  Now, you should be able to go to  http://localhost:5601/app/kibana and see Kibana\u2019s home page load.\n If you didn\u2019t do that last optional step, you might have to wait awhile before Kibana boots up:\n       In the final section, we will test that everything is integrated correctly by searching through our application logs via Kibana.\n              You should now have a good understanding of how the ELK stack works &amp; each of its different components. Additionally, you should now have a good grasp of how to configure your ELK setup correctly &amp; wire it to your Go application.\n From here, you can start playing with Kibana by setting up useful dashboards based on your data.", "posttime": "2020-05-17 06:51:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1,service,elasticsearch", "title": "\u5982\u4f55\u5c06\u60a8\u7684\u56f4\u68cb\u670d\u52a1\u4e0e\u9e8b\u9e7f\u96c6\u6210", "title_en": "How to integrate your Go service with ELK", "transed": 1, "url": "https://pmihaylov.com/go-service-with-elk/", "via": "", "real_tags": ["\u670d\u52a1", "service"]}, {"category": "", "categoryclass": "", "imagename": "cc85999531769ba61b75a7050d6d663b.png", "infoid": 1002453, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u521b\u5efaWeb\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u8981\u6c42\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff1a\u65e0\u8bba\u662f\u7528\u6237\u5728\u6211\u4eec\u7684\u5e73\u53f0\u6ce8\u518c\u65f6\u5fc5\u987b\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd8\u662f\u5fd8\u8bb0\u5bc6\u7801\uff0c\u6216\u8005\u8d2d\u4e70\u540e\u5fc5\u987b\u53d1\u9001\u4ed8\u6b3e\u786e\u8ba4\u3002\u7535\u5b50\u90ae\u4ef6\u9700\u6c42\u5b9e\u9645\u4e0a\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u4ece\u4e00\u5f00\u59cb\u5c31\u6784\u5efa\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u4e0d\u4ec5\u662f\u5e2e\u52a9\u4f60\u4ece\u5934\u5f00\u59cb\u5b9a\u4e49\u4e00\u4e2a\u7075\u6d3b\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u8ba9\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u6539\u53d8\u7535\u5b50\u90ae\u4ef6\u4ea4\u4ed8\u5e73\u53f0\uff0c\u800c\u4e14\u5728\u5b9e\u9645\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\u65b9\u9762\u4e5f\u662f\u7075\u6d3b\u7684\u3002\n\u8fd9\u4e00\u6b21\u6211\u5c06\u4f7f\u7528Django\u5c55\u793a\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f46\u6211\u5e0c\u671b\u5176\u4e3b\u8981\u601d\u60f3\u53ef\u4ee5\u4f20\u64ad\u5230\u60a8\u53ef\u80fd\u6b63\u5728\u4f7f\u7528\u7684\u5176\u4ed6\u6846\u67b6\u548c\u7f16\u7a0b\u8bed\u8a00\u3002\n\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5728\u7528\u6237\u6ce8\u518c\u6211\u4eec\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4e4b\u540e\u5411\u4ed6\u6216\u5979\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u5728\u8fd0\u884c\u6240\u6709\u9a8c\u8bc1\u5e76\u521b\u5efa\u7528\u6237\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Django\u7684\u6587\u6863\u5728\u89c6\u56fe\u4e2d\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u4eec\u4f1a\u60f3\u51fa\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n\u5f53\u7136\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u7f6e\uff0c\u5982EMAIL_HOST\u548cEMAIL_PORT\uff0c\u6b63\u5982\u6587\u6863\u6240\u8ff0\u3002\n\u6b63\u5982\u6211\u524d\u9762\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u51e0\u4e2a\u90e8\u5206\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u6216\u90ae\u4ef6\u53d1\u9001\u7a0b\u5e8f\u6765\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u8bf7\u6c42\uff0c\u8fd9\u4f1a\u5f88\u597d\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u6dfb\u52a0\u4fee\u590d\u6216\u66f4\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5fc5\u641c\u7d22\u6574\u4e2a\u4ee3\u7801\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u201c\u7535\u5b50\u90ae\u4ef6\u4ee3\u7801\u201d\u79fb\u5230\u4e86\u4e00\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u4e86\uff01\u521b\u5efa\u77e5\u9053\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u9001\u4ec0\u4e48\u5185\u5bb9\u7684\u7279\u5b9a\u90ae\u4ef6\u7a0b\u5e8f\u600e\u4e48\u6837\uff1f\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u5c06\u5728\u6bcf\u6b21\u65b0\u7528\u6237\u6ce8\u518c\u65f6\u751f\u6548\u7684\u90ae\u4ef6\u7a0b\u5e8f\u548c\u53e6\u4e00\u4e2a\u53d1\u9001\u8ba2\u5355\u786e\u8ba4\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff01\n\u8fd9\u8868\u660e\uff0c\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u5408\u5e76\u66f4\u591a\u7684\u90ae\u4ef6\u7a0b\u5e8f\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\u60a8\u53ea\u9700\u8ba9\u57fa\u672c\u90ae\u4ef6\u7a0b\u5e8f\u5904\u7406\u5b9e\u73b0\uff0c\u7136\u540e\u7531\u5b50\u7c7b\u8bbe\u7f6e\u5185\u5bb9\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6ce8\u518c\u89c6\u56fe\u5c06\u770b\u8d77\u6765\u5e72\u51c0\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5fc5\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff1a\n\u5047\u8bbe\u6211\u4eec\u5fc5\u987b\u4f7f\u7528SendGrid\u7684\u5b98\u65b9python\u5e93\u5c06\u7535\u5b50\u90ae\u4ef6\u540e\u7aef\u79fb\u52a8\u5230SendGrid(\u4e00\u4e2a\u7528\u4e8e\u4ea4\u6613\u548c\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u7684\u5ba2\u6237\u901a\u4fe1\u5e73\u53f0)\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528Django\u7684Send_Email\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u65b0\u5e93\u7684\u8bed\u6cd5\u3002\u4e95\u2026\u3002\u6211\u4eec\u5f88\u5e78\u8fd0\uff01\u6211\u4eec\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u7ba1\u7406\u76f8\u5173\u7684\u4ee3\u7801\u90fd\u653e\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u91cd\u6784\ud83d\ude09\u3002\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eSendGrid\u7684API\u5bc6\u94a5\uff0c\u8fd8\u8bf7\u6ce8\u610f\uff0chtml\u6a21\u677f\u5c06\u76f4\u63a5\u4eceSendRID\u7684\u7f51\u9875\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u62e5\u6709\u6a21\u677f\u7684ID\u6765\u6307\u5b9a\u5e94\u8be5\u4f7f\u7528\u54ea\u4e2a\u6a21\u677f\u3002\n\u592a\u68d2\u4e86\uff01\u8fd9\u5e76\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4fee\u6539\u6211\u4eec\u60f3\u8981\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u6bcf\u4e00\u884c\u4ee3\u7801\uff01\n\u5f53\u7136\uff0c\u5f53\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u5f88\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e00\u4e9b\u57df\u6570\u636e\u6765\u586b\u5199\u7535\u5b50\u90ae\u4ef6\u7684\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7684\u6b22\u8fce\u7535\u5b50\u90ae\u4ef6\u4e2d\u5305\u542b\u65b0\u7528\u6237\u540d\uff0c\u4f1a\u66f4\u53cb\u597d\u3002SendGrid\u5141\u8bb8\u60a8\u5728\u6a21\u677f\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u88ab\u4ece\u6211\u4eec\u90a3\u91cc\u63a5\u6536\u5230\u7684\u5b9e\u9645\u4fe1\u606f\u66ff\u6362\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e2a\u6570\u636e\u5427\uff01\n\u6211\u5728\u8fd9\u91cc\u770b\u5230\u7684\u552f\u4e00\u95ee\u9898\u662f\u8fd9\u4e2a\u66ff\u6362\u65b9\u6848\u4e0d\u592a\u7075\u6d3b\u3002\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5fc5\u987b\u6839\u636e\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u7684\u4e0a\u4e0b\u6587\u4f20\u9012\u5176\u4ed6\u6570\u636e\uff0c\u4f8b\u5982\uff1a\u65b0\u8ba2\u5355\u7f16\u53f7\u3001\u91cd\u7f6e\u5bc6\u7801\u94fe\u63a5\u7b49\u3002\u53ef\u80fd\u6709\u76f8\u5f53\u591a\u7684\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u53d8\u5f97\u66f4\u6df7\u4e71\u3001\u66f4\u80ae\u810f\u3002(=\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5173\u952e\u5b57\u53ef\u53d8\u957f\u5ea6\u7684\u53c2\u6570\u5217\u8868\uff0c\u901a\u5e38\u79f0\u4e3a**kwargs\uff0c\u4f46\u4e3a\u4e86\u4f7f\u5176\u66f4\u5177\u8868\u73b0\u529b\uff0c\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a**\u66ff\u6362\uff1a\n\u5982\u679c\u60a8\u5fc5\u987b\u5411\u90ae\u4ef6\u7a0b\u5e8f\u4f20\u9012\u989d\u5916\u7684\u4fe1\u606f\uff0c\u60a8\u5c06\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u7075\u6d3b\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u76f8\u5173\u7684\u4ee3\u7801\u5c01\u88c5\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u7ef4\u62a4\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u63a5\u6536\u53ef\u53d8\u7684\u4e0a\u4e0b\u6587\u53c2\u6570\u6765\u586b\u5145\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff01\u4e00\u6b21\u8003\u8651\u6574\u4e2a\u65b9\u6cd5\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u4f46\u9010\u6b65\u5b9e\u73b0\u4f1a\u66f4\u7b80\u5355\uff0c\u597d\u5904\u4e5f\u5f88\u591a\u3002\u6211\u9f13\u52b1\u60a8\u4f7f\u7528\u6b64\u8bbe\u8ba1\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u6dfb\u52a0\u9644\u52a0\u6587\u4ef6\u7684\u529f\u80fd\uff01\n\u975e\u5e38\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u5e0c\u671b\u5b83\u80fd\u5bf9\u60a8\u7684\u9879\u76ee\u6709\u6240\u5e2e\u52a9\u3002\u8bf7\u5173\u6ce8\u6211\u5373\u5c06\u53d1\u5e03\u7684\u5e16\u5b50\uff0c\u6211\u795d\u60a8\u597d\u8fd0\uff0c\u5e76\u795d\u60a8\u7f16\u7801\u6109\u5feb\uff01", "note_en": "When creating a web application, it is frequently requested to send emails: no matter if it has to be done when users sign up in our platform, or if they forget their password, or if a payment confirmation has to be sent after a purchase. The email requirement is actually very important and it can be messy if we don\u2019t structure an email service from the beginning.\n This post aims not only to help you define a flexible email service from scratch that allows you to change the email delivery platform easily, but also to be supple in terms of the content of the actual email.\n I will be using  Django to show an example this time, but I hope the main idea can be spread to other frameworks and programming languages you might be using.\n   Suppose we want to send an email to a user after he or she signs up to our web application. We can use  Django\u2019s documentation to send that email in the view after all validations were run and the user was created. We will come up with something like this:\n  Of course you must set up some important configurations in your settings like EMAIL_HOST and EMAIL_PORT, as the documentation says.\n   As I said before, we will probably need to send emails in several parts of our application, so it would be nice to have an email service or mailer who handles all the email requests, making it easier to add fixes or changes, because we won\u2019t have to search through the whole code.\n     Now that we have moved all the \u201cemail code\u201d to a single place, we can take advantage of that! How about creating specific mailers that know what content to send when they are called? Let\u2019s add a mailer that will get into action everytime new users sign up and another one that sends orders\u2019 confirmations!\n  This shows that it is very easy to incorporate more mailers for different situations. You just have to let the basic mailer handle the implementation, and the subclasses set the content.\n Now our register view will look much cleaner, because it doesn\u2019t have to handle all the email stuff:\n   Suppose that we have to move our email backend to  Sendgrid (a customer communication platform for transactional and marketing email) using its official  python library. We won\u2019t be using Django\u2019s  send_email any longer. Instead we will have to use the new library\u2019s syntax. Well\u2026 We are lucky! We have all the code related to email management in just one place and it will be easier for us to do this refactor \ud83d\ude09\n  Be aware that you must set Sendgrid\u2019s api key in your settings and also note that html templates will be managed directly from Sendrid\u2019s web page, and you will need to have the templates\u2019 ids to specify which one should be used.\n Great! It was not so difficult and we don\u2019t have to modify each line of code where we want to send an email!\n   Of course when we send emails, it is likely to use some domain data to fill in the email\u2019s template. For example, it would be friendlier if our welcome email had the new user\u2019s name in it. Sendgrid allows you to define variables in the template that will be replaced with the actual information that receives from us. So let\u2019s add this data!\n  The only problem I see here is that this substitutions scheme isn\u2019t very flexible. It is likely to happen that we have to pass other data depending on the context that cannot be accessed via the user, for instance: new order\u2019s number, reset password link, etc. There can be quite a lot of these variables and passing them as named parameters could make the code messier and dirtier. We want a keyworded, variable-length argument list, usually called  **kwargs, but let\u2019s name them  **substitutions to make it more expressive:\n  In case you have to pass extra information to the mailer, you will do something like this:\n   We have created a flexible mailer which encapsulates all the code related to emails in one place, making it easier to maintain, and that also receives variable context parameters to fill in the email content! Thinking of the whole approach at once could be difficult, but making it step by step is simpler and the benefits are a lot.  I encourage you to add the feature of attaching files to an email using this design!\n Thank you very much for reading this post and I hope it helps you for your projects. Follow me for upcoming posts, and I wish you good luck and happy coding!", "posttime": "2020-05-17 06:50:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "django,simple,\u7535\u5b50\u90ae\u4ef6", "title": "\u4f7f\u7528Django\u6784\u5efa\u7b80\u5355\u7684\u90ae\u4ef6\u670d\u52a1", "title_en": "Build a Simple Mailing Service with Django", "transed": 1, "url": "https://medium.com/python-in-plain-english/simple-mailer-with-django-2a7e2ad34b34", "via": "", "real_tags": ["django", "simple", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002452, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u9875\u662f\u5bf9GCC 10\u4e2d\u5927\u91cf\u6539\u8fdb\u4e2d\u7684\u4e00\u4e9b\u6539\u8fdb\u7684\u7b80\u8981\u603b\u7ed3\u3002\u60a8\u53ef\u80fd\u8fd8\u60f3\u67e5\u770b\u6211\u4eec\u7684\u201c\u79fb\u690d\u5230GCC 10\u201d\u9875\u548c\u5b8c\u6574\u7684GCC\u6587\u6863\u3002\n\u4fee\u590d\u4e86C++14\u548cC++17\u4e4b\u95f4\u7684ABI\u4e0d\u517c\u5bb9\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u76ee\u6807\u4e0a\uff0c\u5e26\u6709\u96f6\u5b50\u5bf9\u8c61\u7684\u7c7b\u5728\u7f16\u8bd1\u4e3aC++17\u6216C++20\u65f6\u4f1a\u88ab\u9519\u8bef\u4f20\u9012\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684C++\u6ce8\u91ca\u3002\n\u975e\u6807\u51c6std\uff1a\uff1a__is_nullptr_t\u7c7b\u578b\u7279\u5f81\u5df2\u5f03\u7528\uff0c\u5c06\u5728\u672a\u6765\u7248\u672c\u4e2d\u4ecelibstdc++\u4e2d\u5220\u9664\u3002\u6807\u51c6\u7279\u5f81STD\uff1a\uff1aIS_NULL_POINTER\u5e94\u8be5\u6539\u4e3a\u3002\n\u6784\u5efaGCC\u6240\u9700\u7684mpfr\u5e93\u7684\u6700\u4f4e\u7248\u672c\u5df2\u7ecf\u589e\u52a0\u52303.1.0\u7248(\u53d1\u5e03\u4e8e2011\u5e7410\u670803\u65e5)\u3002\n\u5220\u9664\u4e86--param allow-store-data-races\u5185\u90e8\u53c2\u6570\uff0c\u800c\u91c7\u7528\u4e86\u65b0\u7684\u5b98\u65b9\u9009\u9879-falow-store-data-races\u3002\u867d\u7136\u9ed8\u8ba4\u884c\u4e3a\u6ca1\u6709\u6539\u53d8\uff0c\u5e76\u4e14\u65b0\u7684\u9009\u9879\u5141\u8bb8\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u671f\u95f4\u6b63\u786e\u5730\u7ef4\u62a4\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u7684\u8bbe\u7f6e\uff0c\u4f46\u662f\u73b0\u5728\u5c06\u8bca\u65ad\u9ed8\u8ba4\u7684via--param allow-store-data-race\u7684\u66f4\u6539\uff0c\u5e76\u4e14\u5fc5\u987b\u76f8\u5e94\u5730\u8c03\u6574\u6784\u5efa\u7cfb\u7edf\u3002\n\u5378\u8f7d\u5230\u5f02\u6784\u7cfb\u7edf\u67b6\u6784\u4e2d\u95f4\u8bed\u8a00(HSAIL)\u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u65b0\u589e\u5185\u7f6e\u51fd\u6570\uff1a\u53ef\u4ee5\u4f7f\u7528__HAS_BUTHIN\u5185\u7f6e\u9884\u5904\u7406\u5668\u8fd0\u7b97\u7b26\u67e5\u8be2\u5bf9GCC\u7b49\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u5185\u7f6e\u51fd\u6570\u7684\u652f\u6301\u60c5\u51b5\u3002\n\u65b0\u7684\u547d\u4ee4\u884c\u9009\u9879\uff1a-fprofile-Partial-Training\u73b0\u5728\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u7f16\u8bd1\u5668\uff0c\u57f9\u8bad\u8fd0\u884c\u672a\u8986\u76d6\u7684\u4ee3\u7801\u8def\u5f84\u4e0d\u5e94\u9488\u5bf9\u5927\u5c0f\u8fdb\u884c\u4f18\u5316\u3002\n-fprofile-reducable\u63a7\u5236\u7531-fprofile-GENERATE\u6536\u96c6\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u53ef\u91cd\u73b0\u6027\u7ea7\u522b\u3002\u8fd9\u4f7f\u5f97\u91cd\u5efa\u5177\u6709\u76f8\u540c\u7ed3\u679c\u7684\u7a0b\u5e8f\u6210\u4e3a\u53ef\u80fd\uff0c\u4f8b\u5982\uff0c\u8fd9\u5bf9\u4e8e\u5206\u53d1\u5305\u662f\u6709\u7528\u7684\u3002\n-fprofile-prefix-path\u53ef\u4ee5\u4e0e-fprofile-Generate=profile_dir\u548c-fprofile-use=profile_dir\u7ec4\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u901a\u77e5GCC\u6784\u5efa\u6e90\u6811\u7684\u57fa\u76ee\u5f55\u5728\u54ea\u91cc\uff0c\u4ee5\u9632\u68c0\u6d4b\u548c\u4f18\u5316\u6784\u5efa\u6709\u6240\u4e0d\u540c\u3002\n-fAnalyzer\u542f\u7528\u65b0\u7684\u9759\u6001\u5206\u6790\u8fc7\u7a0b\u548c\u76f8\u5173\u8b66\u544a\u3002\u6b64\u904d\u5bf9\u4ee3\u7801\u4e2d\u7684\u8def\u5f84\u6267\u884c\u8017\u65f6\u7684\u63a2\u7d22\uff0c\u5e0c\u671b\u68c0\u6d4b\u5404\u79cd\u5e38\u89c1\u9519\u8bef\uff0c\u5982\u53cc\u91cd\u91ca\u653e\u7684\u9519\u8bef\u3002\u6b64\u9009\u9879\u5728\u6b64\u7248\u672c\u4e2d\u5e94\u89c6\u4e3a\u8bd5\u9a8c\u6027\u9009\u9879\u3002\u7279\u522b\u662f\uff0c\u5bf9\u975eC\u4ee3\u7801\u7684\u5206\u6790\u4e0d\u592a\u53ef\u80fd\u8d77\u4f5c\u7528\u3002\n\u8fc7\u7a0b\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u91cd\u65b0\u5b9e\u73b0\u4e86\u805a\u5408\u7684\u8fc7\u7a0b\u95f4\u6807\u91cf\u66ff\u6362(IPA-SRA)\u4f20\u9012\uff0c\u4ee5\u4fbf\u5728\u94fe\u63a5\u65f6\u5de5\u4f5c\uff0c\u73b0\u5728\u8fd8\u53ef\u4ee5\u5220\u9664\u8ba1\u7b97\u548c\u8fd4\u56de\u672a\u4f7f\u7528\u7684\u8fd4\u56de\u503c\u3002\n-finline-Functions\u73b0\u5728\u5728-O2\u5904\u542f\u7528\uff0c\u5e76\u91cd\u65b0\u4f18\u5316\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4ee3\u7801\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u6027\u80fd\u6743\u8861\u3002\u5185\u8054\u542f\u53d1\u5f0f\u4e5f\u5927\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\uff0c\u907f\u514d\u4e86\u5bf9-flto-O2\u7f16\u8bd1\u65f6\u95f4\u7684\u8d1f\u9762\u5f71\u54cd\u3002\n\u5185\u8054\u542f\u53d1\u5f0f\u548c\u51fd\u6570\u514b\u9686\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u503c\u8303\u56f4\u4fe1\u606f\u6765\u9884\u6d4b\u5355\u4e2a\u8f6c\u6362\u7684\u6709\u6548\u6027\u3002\n\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528C++One Definition Rule\u6765\u63d0\u9ad8\u57fa\u4e8e\u7c7b\u578b\u7684\u522b\u540d\u5206\u6790\u7684\u7cbe\u5ea6\u3002\n\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u6dfb\u52a0\u4e86\u65b0\u7684\u4e8c\u8fdb\u5236LTO-DUMP\u3002\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u8f6c\u50a8\u6709\u5173LTO\u5b57\u8282\u7801\u76ee\u6807\u6587\u4ef6\u7684\u5404\u79cd\u4fe1\u606f\u3002\nLTO\u7684\u5e76\u884c\u9636\u6bb5\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u6b63\u5728\u8fd0\u884c\u7684make&#39\uff1b\u7684jviewer\uff0c\u6216\u8005\u53ef\u4ee5\u56de\u9000\u5230\u53ef\u7528\u6838\u5fc3\u7684\u6570\u91cf\u3002\nLTO\u5b57\u8282\u7801\u53ef\u4ee5\u7528ZSTD\u7b97\u6cd5\u8fdb\u884c\u538b\u7f29\u3002\u914d\u7f6e\u811a\u672c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4bzstd\u652f\u6301\u3002\nMOST--\u53c2\u6570\u503c\u73b0\u5728\u53ef\u4ee5\u6309\u8f6c\u6362\u5355\u5143\u7c92\u5ea6\u6307\u5b9a\u3002\u8fd9\u5305\u62ec\u63a7\u5236\u5185\u8054\u548c\u5176\u4ed6\u8fc7\u7a0b\u95f4\u4f18\u5316\u7684\u6240\u6709\u53c2\u6570\u3002\u4e0e\u65e9\u671f\u7248\u672c\u4e0d\u540c\uff0cGCC 10\u5c06\u5ffd\u7565\u63a7\u5236\u5728\u94fe\u63a5\u65f6\u6307\u5b9a\u7684\u4f18\u5316\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u4e0e\u4f18\u5316\u6807\u5fd7\u76f8\u540c\u7684\u65b9\u5f0f\u5e94\u7528\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684\u53c2\u6570\u3002\n\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u7684\u4f18\u5316\u6539\u8fdb\uff1a\u4f7f\u7528-fprofile-value\uff0c\u63d2\u5165\u6307\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u8ddf\u8e2a\u95f4\u63a5\u8c03\u7528\u7684\u591a\u4e2a\u503c(\u6700\u591a4\u4e2a)\uff0c\u5e76\u63d0\u4f9b\u66f4\u7cbe\u786e\u7684\u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\u3002\nC\u3001C++\u548cFortran\u7f16\u8bd1\u5668\u73b0\u5728\u652f\u6301openacc\u89c4\u8303\u76842.6\u7248\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605openacc wiki\u9875\u9762\u4e0a\u7684\u5b9e\u73b0\u72b6\u6001\u90e8\u5206\u548c\u8fd0\u884c\u65f6\u5e93\u6587\u6863\u3002\nGCC 10\u5728GCC 9\u7248\u672c\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u591a\u4e2a\u65b0\u5b9e\u73b0\u7684OpenMP5.0\u529f\u80fd\uff0c\u5982\u6761\u4ef6lastprivate\u5b50\u53e5\u3001\u626b\u63cf\u548c\u5faa\u73af\u6307\u4ee4\u3001ORDER(\u5e76\u53d1)\u548cUSE_DEVICE_ADDR\u5b50\u53e5\u652f\u6301\u3001SIMD\u6784\u9020\u4e0a\u7684IF\u5b50\u53e5\u6216\u5bf9DECLARE_DEVANT VARIANT\u6307\u4ee4\u7684\u90e8\u5206\u652f\u6301\uff0c\u66f4\u52a0\u63a5\u8fd1\u5bf9OpenMP 5.0\u6807\u51c6\u7684\u5168\u9762\u652f\u6301\u3002\nOpenMP\u548copenacc\u73b0\u5728\u652f\u6301\u5378\u8f7d\u5230AMD Radeon(GCN)GPU\uff1b\u652f\u6301\u7684\u662f\u7b2c\u4e09\u4ee3\u6590\u6d4e(\u6590\u6d4e)\u548c\u7b2c\u4e94\u4ee3Vega 10/Vega 20(gfx900\u6216gfx906)\u3002\n\u65b0\u5c5e\u6027\uff1a\u6dfb\u52a0\u4e86access\u51fd\u6570\u548ctype\u5c5e\u6027\uff0c\u4ee5\u63cf\u8ff0\u51fd\u6570\u5982\u4f55\u8bbf\u95ee\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u4f20\u9012\u7ed9\u5b83\u7684\u5bf9\u8c61\uff0c\u5e76\u5c06\u6b64\u7c7b\u53c2\u6570\u4e0e\u8868\u793a\u5bf9\u8c61\u5927\u5c0f\u7684\u6574\u6570\u53c2\u6570\u76f8\u5173\u8054\u3002\u8be5\u5c5e\u6027\u7528\u4e8e\u68c0\u6d4b\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u65e0\u6548\u8bbf\u95ee\uff0c\u4f8b\u5982\u7531-Wstringop-overflow\u8bca\u65ad\u7684\u51fd\u6570\u3002\nsymver\u5c5e\u6027\u53ef\u7528\u4e8e\u5c06\u7b26\u53f7\u7ed1\u5b9a\u5230ELF\u5e73\u53f0\u4e0a\u7684\u7279\u5b9a\u7248\u672c\u8282\u70b9\u3002\u8fd9\u6bd4\u5c06GNU\u4f5c\u4e3asymver\u6307\u4ee4\u4f7f\u7528\u5185\u8054\u6c47\u7f16\u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u540e\u8005\u4e0e\u94fe\u63a5\u65f6\u4f18\u5316\u4e0d\u517c\u5bb9\u3002\n\u65b0\u8b66\u544a\uff1a-Wstring-Compare\uff0c\u7531-WExtra\u542f\u7528\uff0c\u8b66\u544a\u96f6\u4e0e\u8c03\u7528strcmp\u548cstrncmp\u7684\u7ed3\u679c\u4e4b\u95f4\u7684\u76f8\u7b49\u548c\u4e0d\u7b49\u8868\u8fbe\u5f0f\uff0c\u8fd9\u662f\u7531\u4e8e\u4e00\u4e2a\u53c2\u6570\u7684\u957f\u5ea6\u5927\u4e8e\u53e6\u4e00\u4e2a\u53c2\u6570\u6240\u6307\u5411\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u800c\u5bfc\u81f4\u7684\u5e38\u91cf\u3002\n-WzerLength-Bound\u7531-Warray-Bound\u542f\u7528\uff0c\u8b66\u544a\u5bf9\u53ef\u80fd\u4e0e\u540c\u4e00\u5bf9\u8c61\u7684\u5176\u4ed6\u6210\u5458\u91cd\u53e0\u7684\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n\u5bf9\u73b0\u6709\u8b66\u544a\u7684\u589e\u5f3a\uff1a-Warray-bound\u68c0\u6d4b\u5230\u66f4\u591a\u5bf9\u6210\u5458\u6570\u7ec4\u7684\u8d8a\u754c\u8bbf\u95ee\u4ee5\u53ca\u5bf9\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n-Wstringop-overflow\u68c0\u6d4b\u5230\u6210\u5458\u6570\u7ec4\u7684\u66f4\u591a\u8d8a\u754c\u5b58\u50a8\uff0c\u5305\u62ec\u96f6\u957f\u5ea6\u6570\u7ec4\u3001\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u548c\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\uff0c\u4ee5\u53ca\u5b57\u7b26\u4e32\u5185\u7f6e\u51fd\u6570\u8bfb\u53d6\u672a\u7ec8\u6b62\u5b57\u7b26\u6570\u7ec4\u7684\u66f4\u591a\u5b9e\u4f8b\u3002\u8be5\u8b66\u544a\u8fd8\u68c0\u6d4b\u5230\u901a\u8fc7\u8c03\u7528\u4f7f\u7528\u65b0\u5c5e\u6027\u8bbf\u95ee\u58f0\u660e\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u7684\u8d8a\u754c\u8bbf\u95ee\u3002\n\u9664\u4e86\u5df2\u7ecf\u652f\u6301\u7684UCN\u8bed\u6cd5(\\uNNNN\u6216\\UNNNNNNN)\u4e4b\u5916\uff0c\u73b0\u5728\u53ef\u4ee5\u5728\u8f93\u5165\u7f16\u7801(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3aUTF-8)\u4e2d\u76f4\u63a5\u6307\u5b9a\u6807\u8bc6\u7b26\u4e2d\u7684\u6269\u5c55\u5b57\u7b26\uff1a\n\u4f7f\u7528-std=c2x\u548c-std=gnu2x\u652f\u6301\u5373\u5c06\u53d1\u5e03\u7684ISO C\u6807\u51c6C2X\u4fee\u8ba2\u7248\u4e2d\u7684\u51e0\u4e2a\u65b0\u529f\u80fd\u3002\u5728\u7f16\u8bd1\u65e7\u8bed\u8a00\u7248\u672c\u65f6\uff0c\u8fd8\u652f\u6301\u5c06\u5176\u4e2d\u4e00\u4e9b\u529f\u80fd\u4f5c\u4e3a\u6269\u5c55\u3002\u9664\u4e86\u5217\u51fa\u7684\u529f\u80fd\u5916\uff0c\u5728C2X\u6a21\u5f0f\u4e0b\u9ed8\u8ba4\u542f\u7528\u4e86\u4e00\u4e9b\u4ee5\u524d\u652f\u6301\u4f5c\u4e3a\u6269\u5c55\u5e76\u73b0\u5728\u6dfb\u52a0\u5230C\u6807\u51c6\u4e2d\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u6ca1\u6709\u4f7f\u7528-std=c2x-Wpedtic\u8fdb\u884c\u8bca\u65ad\u3002\u4e0e\u5728C++\u4e2d\u4e00\u6837\uff0c\u652f\u6301[[]]\u5c5e\u6027\u8bed\u6cd5\u3002\u73b0\u6709\u5c5e\u6027\u53ef\u4ee5\u4e0e\u6b64\u8bed\u6cd5\u4e00\u8d77\u4f7f\u7528\uff0c\u683c\u5f0f\u5982[[gnu\uff1a\uff1aconst]]\u3002\u652f\u6301\u6807\u51c6\u5c5e\u6027[[Deproated]]\u3001[[Fall Through]]\u548c[[Mayse_Unussed]]\u3002\n\u652f\u6301\u5341\u8fdb\u5236\u6d6e\u70b9\u7b97\u672f\u65f6\uff0c\u9664\u4ee5\u524d\u4ec5\u5728\u5305\u542b&lt\uff1bfloat.h&gt\uff1b\u4e4b\u524d\u5b9a\u4e49\u4e86__STDC_WANT_DEC_FP__\u65f6\u624d\u5b9a\u4e49\u7684\u5b8f\u5916\uff0c&lt\uff1bfloat.h&gt\uff1b\u8fd8\u5b9a\u4e49\u4e86\u5b8fDEC32_TRUE_MIN\u3001DEC64_TRUE_MIN\u548cDEC128_TRUE_MIN\u3002\n\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u7a7a\u62ec\u53f7\u4e3a\u8be5\u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5177\u6709\u539f\u578b\u7684\u7c7b\u578b\uff0c\u4ee5\u4f9b\u540e\u7eed\u8c03\u7528\uff1b\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8bca\u65ad\u5176\u4ed6\u65e7\u5f0f\u51fd\u6570\u5b9a\u4e49\u3002\nGCC\u73b0\u5728\u9ed8\u8ba4\u4e3a-fno-common\u3002\u56e0\u6b64\uff0c\u5bf9\u5404\u79cd\u76ee\u6807\u7684\u5168\u5c40\u53d8\u91cf\u8bbf\u95ee\u6548\u7387\u66f4\u9ad8\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5177\u6709\u591a\u4e2a\u8bd5\u63a2\u6027\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u73b0\u5728\u4f1a\u5bfc\u81f4\u94fe\u63a5\u5668\u9519\u8bef\u3002\u4f7f\u7528-fcommon\uff0c\u8fd9\u6837\u7684\u5b9a\u4e49\u5728\u94fe\u63a5\u671f\u95f4\u4ee5\u9759\u9ed8\u65b9\u5f0f\u5408\u5e76\u3002\n\u65b0\u8b66\u544a\uff1a-Wmismatted-Tags\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\uff0c\u8b66\u544a\u6709\u5173\u7ed3\u6784\u3001\u7c7b\u548c\u7c7b\u6a21\u677f\u7684\u58f0\u660e\u53ca\u5176\u4e13\u95e8\u5316\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u5b9a\u4e49\uff0c\u5219\u7c7b\u952e\u4e0e\u5b9a\u4e49\u6216\u7b2c\u4e00\u4e2a\u58f0\u660e\u90fd\u4e0d\u5339\u914d\u3002\u63d0\u4f9b\u8be5\u9009\u9879\u662f\u4e3a\u4e86\u7b80\u5316\u5bf9\u57fa\u4e8eWindows\u7684\u7f16\u8bd1\u5668\u7684\u53ef\u79fb\u690d\u6027\u3002\n-wredundant-tag\u9ed8\u8ba4\u7981\u7528\uff0c\u5728\u53ef\u4ee5\u6d88\u9664\u952e\u800c\u4e0d\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u6b67\u4e49\u7684\u4e0a\u4e0b\u6587\u4e2d\u8b66\u544a\u5197\u4f59\u7684class-key\u548cenum-key\u3002\nGCC 10\u4e2d\u7684\u51e0\u4e2a\u76ee\u6807(\u5305\u62ecAArch64\u3001ARM\u3001PowerPC ELFv2\u3001S/390\u548cItanium)\u6539\u53d8\u4e86\u6309\u503c\u4f20\u9012\u548c\u8fd4\u56de\u67d0\u4e9bC++\u7c7b\u7684ABI\u3002\u8fd9\u4e9b\u66f4\u6539\u5f71\u54cd\u5177\u6709\u96f6\u5927\u5c0f\u7684\u5b50\u5bf9\u8c61(\u7a7a\u57fa\u7c7b\uff0c\u6216\u5177\u6709[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u6570\u636e\u6210\u5458)\u7684\u7c7b\uff0c\u800c\u6240\u6709\u5176\u4ed6\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b(\u5728\u67d0\u4e9bABI\u89c4\u8303\u4e2d\u79f0\u4e3a\u540c\u6784\u805a\u5408\uff0c\u6216\u8005\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6210\u5458\uff0c\u5373\u5355\u4e2a\u5143\u7d20)\u3002\u5728-std=c++17\u548c-std=c++20\u6a21\u5f0f\u4e2d\uff0c\u57fa\u7c7b\u4e3a\u7a7a\u7684\u7c7b\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u5177\u6709\u5355\u4e2a\u5143\u7d20\u6216\u540c\u6784\u805a\u5408\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u65b9\u5f0f\u4f20\u9012(\u5728\u9519\u8bef\u7684\u5bc4\u5b58\u5668\u6216\u5728\u9519\u8bef\u7684\u5806\u6808\u5730\u5740)\u3002\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u4f7f\u7528-std=c++17\u548c-std=c++14ABI\u7f16\u8bd1\u7684\u4ee3\u7801\u4e0d\u517c\u5bb9\u3002\u6b64\u95ee\u9898\u5df2\u66f4\u6b63\uff0c\u5e76\u4e14\u5728\u90a3\u4e9bABI\u51b3\u7b56\u4e2d\u5ffd\u7565\u4e86\u7a7a\u57fa\uff0c\u56e0\u6b64\u4f7f\u7528-std=c++14\u548c-std=c++17\u7f16\u8bd1\u7684\u51fd\u6570\u73b0\u5728\u518d\u6b21\u4e0eABI\u517c\u5bb9\u3002\u793a\u4f8b\uff1astruct Empty{}\uff1bstruct S\uff1aEmpty{Float f\uff1b}\uff1bvoid f(S)\uff1b\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u5305\u542b\u4f7f\u7528C++20[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u7c7b\u7c7b\u578b\u4e3a\u7a7a\u7684\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u7c7b\u4e2d\uff0c\u8fd9\u4e9b\u6210\u5458\u5728\u4f20\u9012\u51b3\u7b56\u7684ABI\u53c2\u6570\u4e2d\u6ca1\u6709\u88ab\u5ffd\u7565\u3002\u8fd9\u4e24\u79cdABI\u53d8\u5316\u73b0\u5728\u90fd\u88ab\u8bca\u65ad\u4e3a-Wpsabi\u3002\n\u73b0\u5728\u53ef\u4ee5\u4ece\u4efb\u4f55\u8fd4\u56de\u7b26\u53f7\u6216\u5143\u7ec4\u7684__\u7279\u5f81\u76f4\u63a5\u521b\u5efa\u522b\u540d\u3002\u4ee5\u524d\uff0c\u9700\u8981\u4f7f\u7528AliasSeq\u6765\u4e3a\u5b83\u4eec\u7684\u8fd4\u56de\u8bbe\u7f6e\u522b\u540d\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528__\u7279\u5f81(getLinkage\uff0c.)\u68c0\u6d4b\u4e3a\u7ed3\u6784\u3001\u7c7b\u6216\u63a5\u53e3\u6307\u5b9a\u7684ABI\u8bed\u8a00\u3002\u6dfb\u52a0\u4e86\u5bf9core.math.toPrec\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u3002\u8fd9\u4e9b\u5185\u90e8\u51fd\u6570\u4fdd\u8bc1\u5728\u4ee3\u7801\u4e2d\u7684\u6307\u5b9a\u70b9\u56db\u820d\u4e94\u5165\u5230\u7279\u5b9a\u7684\u6d6e\u70b9\u7cbe\u5ea6\u3002\n\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5bf9\u6742\u6ce8(\u5185\u8054)\u7684\u652f\u6301\u3002\u4ee5\u524d\uff0c\u6742\u6ce8\u53ef\u4ee5\u8bc6\u522b\uff0c\u4f46\u5bf9\u7f16\u8bd1\u6ca1\u6709\u5f71\u54cd\u3002\nASM\u64cd\u4f5c\u6570\u4e2d\u7684\u53ef\u9009\u62ec\u53f7\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u73b0\u5728\uff0c\u4f7f\u7528-M\u7f16\u8bd1\u65f6\uff0c\u6240\u6709\u5185\u5bb9\u5bfc\u5165\u7684\u6587\u4ef6\u90fd\u5305\u542b\u5728Make Dependency\u5217\u8868\u4e2d\u3002\n\u7531gcc.attribute\u6a21\u5757\u63d0\u4f9b\u7684\u7f16\u8bd1\u5668\u8bc6\u522b\u7684\u5c5e\u6027\u73b0\u5728\u5c06\u5728\u5e94\u7528\u4e8e\u51fd\u6570\u539f\u578b\u4ee5\u53ca\u5e94\u7528\u4e8e\u5b8c\u6574\u51fd\u6570\u58f0\u660e\u65f6\u751f\u6548\u3002\n\u6dfb\u52a0\u4e86--enable-libphobos-check\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u63a7\u5236\u662f\u5426\u5c06\u8fd0\u884c\u65f6\u68c0\u67e5\u7f16\u8bd1\u5230D\u8fd0\u884c\u65f6\u5e93\u4e2d\u3002\n\u6dfb\u52a0\u4e86--with-libphobos-druntime-only\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u6307\u793a\u662f\u53ea\u5c06\u6838\u5fc3D\u8fd0\u884c\u65f6\u5e93\u6784\u5efa\u5230libphobos\u4e2d\uff0c\u8fd8\u662f\u5c06\u6838\u5fc3\u5e93\u548c\u6807\u51c6\u5e93\u90fd\u6784\u5efa\u5230libphobos\u4e2d\u3002\n\u73b0\u5728\u652f\u6301OpenMP\u89c4\u83035.0\u7248\u7684use_device_addr\u3002\u8bf7\u6ce8\u610f\uff0c\u9664\u6b64\u4e4b\u5916\uff0cFortran\u7f16\u8bd1\u5668\u8fd8\u90e8\u5206\u652f\u6301OpenMP 4.5\uff1b\u7f3a\u5c11\u7684\u6700\u5927\u9879\u662f\u7ed3\u6784\u5143\u7d20\u6620\u5c04\u3002\n\u4f7f\u7528\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684I/O\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u5927\u5c0f\u5df2\u589e\u52a0\u52301048576\u3002\u73b0\u5728\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u683c\u5f0f\u5316\u6587\u4ef6\u548c\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cfGFORTRAN_FORMACTED_BUFFER_SIZE\u548cGFORTRAN_UNFORMACTED_BUFFER_SIZE\u5206\u522b\u8bbe\u7f6e\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002\n\u5355\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u4f2a\u53c2\u6570\u5217\u8868\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u73b0\u5728\u4f1a\u88ab\u62d2\u7edd\uff0c\u5e76\u8fd4\u56de\u9519\u8bef\u3002\u4f7f\u7528\u65b0\u9009\u9879-fallow-argument-mismatch\u5c06\u8fd9\u4e9b\u9519\u8bef\u8f6c\u6362\u4e3a\u8b66\u544a\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-std=Legacy\u4e2d\u3002-Wargument-\u5df2\u5220\u9664\u4e0d\u5339\u914d\u3002\n\u5bf9BOZ\u6587\u5b57\u5e38\u91cf\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u66f4\u597d\u5730\u7b26\u5408Fortran 2008\u548c2018\u6807\u51c6\u3002\u5728\u8fd9\u4e9bFortran\u6807\u51c6\u4e2d\uff0cBOZ\u6587\u5b57\u5e38\u91cf\u662f\u65e0\u7c7b\u578b\u548c\u65e0\u7c7b\u578b\u7684\u5b9e\u4f53\u3002\u4f5c\u4e3a\u8fd4\u5de5\u7684\u4e00\u90e8\u5206\uff0cFortran\u6807\u51c6\u7684\u6709\u6587\u6863\u548c\u65e0\u6587\u6863\u7684\u6269\u5c55\u73b0\u5728\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u53d1\u51fa\u9519\u8bef\u3002\u5176\u4e2d\u4e00\u4e9b\u6269\u5c55\u53ef\u4ee5\u4e0e-fallow-invalid-boz\u4e00\u8d77\u4f7f\u7528\uff0c\u5176\u4e2d\u9519\u8bef\u4f1a\u964d\u7ea7\u4e3a\u8b66\u544a\uff0c\u5e76\u4e14\u4ee3\u7801\u4f1a\u50cf\u4ee5\u524d\u7684gfortran\u4e00\u6837\u8fdb\u884c\u7f16\u8bd1\u3002\n\u5728\u9664-Os\u4e4b\u5916\u7684\u4efb\u4f55\u4f18\u5316\u7ea7\u522b\uff0cgfortran\u73b0\u5728\u5bf9\u53c2\u6570\u4f7f\u7528\u5185\u8054\u6253\u5305\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u5e93\u4f8b\u7a0b\u3002\u5982\u679c\u6e90\u4ee3\u7801\u5305\u542b\u5927\u91cf\u9700\u8981\u91cd\u65b0\u6253\u5305\u7684\u53c2\u6570\uff0c\u5219\u4ee3\u7801\u5927\u5c0f\u6216\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u53d8\u5f97\u8fc7\u5927\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528-fno-inline-arg-pack\u6765\u7981\u7528\u5185\u8054\u53c2\u6570\u6253\u5305\u3002\n\u4f20\u7edf\u6269\u5c55\uff1a\u5bf9\u4e8e\u683c\u5f0f\u5316\u7684\u8f93\u5165/\u8f93\u51fa\uff0c\u5982\u679c\u7701\u7565\u4e86\u6570\u636e\u7f16\u8f91\u63cf\u8ff0\u7b26I\u3001F\u548cG\u4e4b\u540e\u7684\u663e\u5f0f\u5bbd\u5ea6\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5bbd\u5ea6\u3002\n\u683c\u5f0f\u89c4\u8303\u672b\u5c3e\u7684\u683c\u5f0f\u9879\u76ee\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u540e\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u5185\u5bb9\u3002\u4f7f\u7528\u9009\u9879-FDEC-BLACK-FORMAT-ITEM\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-FDEC\u4e2d\u3002\n\u5df2\u6269\u5c55\u5bf9\u81ea\u52a8\u548c\u9759\u6001\u5c5e\u6027\u7684\u73b0\u6709\u652f\u6301\uff0c\u4ee5\u5141\u8bb8\u5728\u7b49\u4ef7\u8bed\u53e5\u4e2d\u4f7f\u7528\u5177\u6709\u81ea\u52a8\u5c5e\u6027\u7684\u53d8\u91cf\u3002\u4f7f\u7528-FDEC-STATIC\uff1b\u6b64\u9009\u9879\u7531-FDEC\u9690\u542b\u3002\n\u5141\u8bb8\u5728\u6570\u503c(\u6574\u6570\u3001\u5b9e\u6570\u6216\u590d\u6570)\u6216\u903b\u8f91\u53d8\u91cf\u7684\u8d4b\u503c\u548c\u6570\u636e\u8bed\u53e5\u4e2d\u4f7f\u7528\u5b57\u7b26\u6587\u5b57\u3002\u4f7f\u7528\u9009\u9879-fdec-char-Conversions\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-fdec\u4e2d\u3002\n\u5341\u8fdb\u5236\u6bd4\u8f83\uff0c\u5373\u5141\u8bb8\u4f7f\u7528\u970d\u5c14\u745e\u65af\u5e38\u91cf\u4e0e\u6574\u6570\u3001\u5b9e\u6570\u3001\u590d\u6570\u548c\u5b57\u7b26\u8868\u8fbe\u5f0f\u8fdb\u884c\u6bd4\u8f83\u3002\u4f7f\u7528\u9009\u9879-FDEC\u3002\n\u9519\u8bef\u548c\u8b66\u544a\u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u540d\u79f0\u73b0\u5728\u9664\u4e86\u79cd\u7c7b\u4e4b\u5916\u8fd8\u5305\u62eclen\uff1b*\u7528\u4e8e\u5047\u5b9a\u957f\u5ea6\u3002\u5982\u679c\u662f\u9ed8\u8ba4\u7c7b\u578b\uff0c\u5219\u7701\u7565\u8be5\u7c7b\u578b\u3002\u4f8b\u5982\uff1aCharacter(12)\u3001Character(6\uff0c4)\u3002\nCo_Broadcast\u73b0\u5728\u652f\u6301\u6d3e\u751f\u7c7b\u578b\u53d8\u91cf\uff0c\u5305\u62ec\u5177\u6709\u53ef\u5206\u914d\u7ec4\u4ef6\u7684\u5bf9\u8c61\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ef\u9009\u53c2\u6570STAT=\u548cERRMSG=\u5f53\u524d\u88ab\u5ffd\u7565\u3002\n\u5bf9\u6a21\u5757\u548c\u5b50\u6a21\u5757\u540d\u79f0\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u5141\u8bb8\u6807\u51c6\u8981\u6c42\u768463\u4e2a\u5b57\u7b26\u7684\u5b8c\u6574\u957f\u5ea6\u3002\u4ee5\u524d\uff0c\u5982\u679c\u6a21\u5757\u3001\u5b50\u6a21\u5757\u548c\u51fd\u6570\u540d\u79f0\u7684\u603b\u957f\u5ea6\u8d85\u8fc7126\u4e2a\u5b57\u7b26\uff0c\u5219\u7b26\u53f7\u540d\u79f0\u4f1a\u88ab\u622a\u65ad\u3002\u56e0\u6b64\uff0c\u6b64\u66f4\u6539\u8fdd\u53cd\u4e86ABI\uff0c\u4f46\u4ec5\u9002\u7528\u4e8e\u8d85\u8fc7126\u4e2a\u5b57\u7b26\u9650\u5236\u7684\u60c5\u51b5\u3002\nAArch64\u548cARM\u7aef\u53e3\u73b0\u5728\u652f\u6301\u4e32\u8054\u7ec4\u4ef6\u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u8f93\u51fa\u7ea6\u675f\uff0c\u5982__GCC_ASM_FLAG_OUTPUTS__\u6240\u793a\u3002\u5728ARM\u4e0a\uff0c\u6b64\u529f\u80fd\u4ec5\u9002\u7528\u4e8eA32\u548cT32\u76ee\u6807\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u4e0e\u53ef\u4f38\u7f29\u5411\u91cf\u6269\u5c55(Scalable Vector Extension\uff0cSVE)\u76f8\u5173\u7684\u6539\u8fdb\u6709\u51e0\u4e2a\uff1a\u73b0\u5728\u652f\u6301SVE Acle\u7c7b\u578b\u548c\u5185\u90e8\u51fd\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u5934\u6587\u4ef6arm_sve.h\u8bbf\u95ee\u5b83\u4eec\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528ARM_SVE_VECTOR_BITS\u5c5e\u6027\u521b\u5efa\u56fa\u5b9a\u957f\u5ea6\u7684SVE\u7c7b\u578b\u3002\u4f8b\u5982\uff1a\n-MSVE-VECTOR-BITS=128\u73b0\u5728\u4e3a\u5c0f\u7aef\u76ee\u6807\u751f\u6210\u7279\u5b9a\u4e8e\u5411\u91cf\u957f\u5ea6\u7684\u4ee3\u7801\u3002\u5b83\u7ee7\u7eed\u4e3a\u5927\u7aef\u76ee\u6807\u751f\u6210\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5\u7684\u4ee3\u7801\uff0c\u5c31\u50cf\u4ee5\u524d\u7684\u7248\u672c\u5bf9\u6240\u6709\u76ee\u6807\u6240\u505a\u7684\u90a3\u6837\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u52a0\u8f7d\u548c\u622a\u65ad\u5b58\u50a8\uff0c\u5305\u62ec\u805a\u96c6\u52a0\u8f7d\u548c\u5206\u6563\u5b58\u50a8\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u6bd4\u8f83\u4f7f\u7528SVE\u548cAdvanced SIMD\u8fdb\u884c\u77e2\u91cf\u5316\u7684\u6210\u672c\uff0c\u5e76\u5c1d\u8bd5\u9009\u62e9\u6700\u597d\u7684\u3002\u4ee5\u524d\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5b83\u603b\u662f\u4f7f\u7528SVE\u3002\n\u5982\u679c\u5411\u91cf\u5faa\u73af\u4f7f\u7528Advanced SIMD\u800c\u4e0d\u662fSVE\uff0c\u90a3\u4e48\u5411\u91cf\u5316\u5668\u73b0\u5728\u4f1a\u8003\u8651\u4f7f\u7528SVE\u6765\u5411\u91cf\u5316\u5269\u4f59\u5143\u7d20(\u201c\u6807\u91cf\u5c3e\u201d\u6216\u201c\u5c3e\u90e8\u201d)\u3002\n\u9664\u4e86\u8fd9\u4e9b\u7279\u5b9a\u70b9\u4e4b\u5916\uff0c\u5411\u91cf\u5316\u5668\u4f7f\u7528SVE\u7684\u65b9\u5f0f\u8fd8\u6709\u8bb8\u591a\u4e00\u822c\u6027\u7684\u6539\u8fdb\u3002\nmBranch-Protection=pac-ret\u9009\u9879\u73b0\u5728\u63a5\u53d7\u53ef\u9009\u7684\u53c2\u6570+b-key\u6269\u5c55\uff0c\u4ee5\u4f7f\u7528B-key\u800c\u4e0d\u662fA-key\u6267\u884c\u8fd4\u56de\u5730\u5740\u7b7e\u540d\u3002\n\u6dfb\u52a0\u4e86\u9009\u9879-mOutline-Atomics\uff0c\u4ee5\u5e2e\u52a9\u5728GNU/Linux\u7cfb\u7edf\u4e0a\u90e8\u7f72\u5927\u578b\u7cfb\u7edf\u6269\u5c55(LSE)\uff0c\u8be5\u7cfb\u7edf\u4ee5\u9762\u5411ARMv8-A\u7684\u57fa\u51c6\u67b6\u6784\u6784\u5efa\u3002\u5f53\u6307\u5b9a\u8be5\u9009\u9879\u65f6\uff0c\u5c06\u53d1\u51fa\u4ee3\u7801\u4ee5\u5728\u8fd0\u884c\u65f6\u68c0\u6d4bLSE\u6307\u4ee4\u7684\u5b58\u5728\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u6807\u51c6\u539f\u5b50\u64cd\u4f5c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u73b0\u5728\u901a\u8fc7ALE\u5185\u90e8\u529f\u80fd\u652f\u6301\u4e8b\u52a1\u6027\u5185\u5b58\u6269\u5c55\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+tme\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+tme)\u3002\nArmv8.5-A\u4e2d\u7684\u8bb8\u591a\u529f\u80fd\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\u3002\u5176\u4e2d\u5305\u62ec\uff1a\u53ef\u901a\u8fc7(GCC 9.1\u4e2d\u5df2\u6709)+RNG\u9009\u9879\u6269\u5c55\u542f\u7528\u7684\u968f\u673a\u6570\u6307\u4ee4\u3002\n\u7c7b\u4f3c\u5730\uff0c\u4e0b\u9762\u7684Armv8.6-A\u7279\u6027\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\uff1abfloat16\u6269\u5c55\u3002\u5f53\u9009\u62e9Armv8.6-A\u65f6\uff0c\u8be5\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528(\u4f8b\u5982by-march=armv8.6-a)\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528+bf16\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u53ca\u66f4\u9ad8\u7248\u672c\u542f\u7528\u5b83\u3002\n\u77e9\u9635\u4e58\u6cd5\u6269\u5c55\u3002\u6b64\u6269\u5c55\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5bf9\u5e94\u4e8e\u6bcf\u79cd\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\uff1a\u652f\u63018\u4f4d\u6574\u6570\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u9009\u62e9Armv8.6-A\u65f6\uff0c\u6b64\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528+i8 mm\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u548c\u66f4\u9ad8\u7248\u672c\u542f\u7528\u3002\n\u652f\u630132\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f32 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u4e5f\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\n\u652f\u630164\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f64 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u540c\u6837\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\nSVE2\u73b0\u5728\u901a\u8fc7ACLE\u5185\u90e8\u529f\u80fd\u548c(\u5728\u6709\u9650\u8303\u56f4\u5185)\u81ea\u52a8\u77e2\u91cf\u5316\u6765\u652f\u6301\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+sve2\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+sve2)\u3002\u53ef\u4ee5\u901a\u8fc7+sve2-sm4\u3001+sve2-aes\u3001+sve2-sha3\u548c+sve2-bitperm\u542f\u7528\u5176\u4ed6\u6269\u5c55\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-a65ae\u6216\u7528\u4f5c\u7b49\u6548\u76ee\u6807\u5c5e\u6027\u548c\u7f16\u8bd1\u6307\u793a\u7684\u53c2\u6570\u3002\n\u6dfb\u52a0\u4e86\u5bf9FDPIC ABI\u7684\u652f\u6301\u3002\u5b83\u4f7f\u752864\u4f4d\u51fd\u6570\u63cf\u8ff0\u7b26\u6765\u8868\u793a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u5e76\u5728\u65e0MMU\u7684\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u4ee3\u7801\u5171\u4eab\u3002\u5bf9\u5e94\u7684\u76ee\u6807\u4e09\u5143\u7ec4\u662farm-uclinuxfdpiceabi\uff0cC\u5e93\u662fuclibc-ng\u3002\n\u5728\u4f7f\u752864\u4f4d\u6574\u6570\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5bf964\u4f4d\u6574\u6570\u64cd\u4f5c\u7684\u5904\u7406\u8fdb\u884c\u4e86\u663e\u7740\u7684\u4fee\u6539\u548c\u6539\u8fdb\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u5e76\u51cf\u5c11\u4e86\u5806\u6808\u4f7f\u7528\u91cf\u3002\u9009\u9879-mneon-for-64\u4f4d\u73b0\u5728\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-m35p\u3002\n\u5bf9ALE\u6570\u636e\u5904\u7406\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u5df2\u7ecf\u6269\u5c55\u5230\u5305\u62ec32\u4f4dSIMD\u3001\u9971\u548c\u7b97\u672f\u300116\u4f4d\u4e58\u6cd5\u548c\u5176\u4ed6\u65e8\u5728\u4f18\u5316DSP\u7b97\u6cd5\u7684\u76f8\u5173\u5185\u90e8\u529f\u80fd\u3002\n\u5728Thumb-1(V6m)\u4e2d\u6dfb\u52a0\u4e86\u5bf9-mpury-code\u7684\u652f\u6301\uff1a\u6b64M-profile\u529f\u80fd\u4e0d\u518d\u5c40\u9650\u4e8e\u5177\u6709movt\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0c-mcpu=corcorp-m0\u73b0\u5728\u652f\u6301\u6b64\u9009\u9879\u3002\n\u6dfb\u52a0\u4e86\u5bf9MVE\u6d4b\u8bd5\u7248Acle\u5185\u90e8\u7279\u6027\u7684\u652f\u6301\u3002\u53ef\u4ee5\u901a\u8fc7\u5305\u62ecarm_mve.h\u5934\u6587\u4ef6\u5e76\u4f20\u9012+mve\u6216+mve.fp\u9009\u9879\u6269\u5c55\u540d\u6765\u542f\u7528\u8fd9\u4e9b\u5185\u90e8\u529f\u80fd(\u4f8b\u5982\uff1a-march=armv8.1-m.main+mve)\u3002\n\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u529f\u80fd\u4fdd\u5b58\u6240\u6709\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\uff0c\u5305\u62ec\u96f6\u5f00\u9500\u73af\u8def\u4f7f\u7528\u7684\u6269\u5c55\u5bc4\u5b58\u5668\u548c\u8f85\u52a9\u5bc4\u5b58\u5668\u3002\n\u901a\u8fc7\u4f7f\u7528\u591a\u6761\u77ed\u6307\u4ee4\u63d0\u9ad8\u4ee3\u7801\u5927\u5c0f\u3002\n..", "note_en": "This page is a &#34;brief&#34; summary of some of the huge number of improvementsin GCC 10.You may also want to check out our Porting to GCC 10 page and the full GCC documentation.\n  An ABI incompatibility between C++14 and C++17 has been fixed. On some targets a class with a zero-sized subobject would be passed incorrectly when compiled as C++17 or C++20. See the  C++ notes below for more details.\n    The non-standard  std::__is_nullptr_t type trait is deprecated and will be removed from libstdc++ in a future release. The standard trait  std::is_null_pointer should be instead.\n  The minimum version of the  MPFR library required for building GCC has been increased to version 3.1.0 (released 2011-10-03).\n    The  --param allow-store-data-races internal parameter has been removed in favor of a new official option  -fallow-store-data-races. While default behavior is unchanged and the new option allows to correctly maintain a per compilation unit setting across link-time optimization, alteration of the default via  --param allow-store-data-races will now be diagnosed and build systems have to be adjusted accordingly.\n  Offloading to Heterogeneous System Architecture Intermediate Language (HSAIL) has been deprecated and will likely be removed in a future release.\n  New built-in functions:  The\t  __has_builtin\tbuilt-in preprocessor operator can be used to query support\tfor built-in functions provided by GCC and other compilers\tthat support it.\n  New command-line options:  -fprofile-partial-training\t can now be used to inform the compiler that code paths not covered by the\t training run should not be optimized for size.\n  -fprofile-reproducible\t controls level of reproducibility of profile gathered by\t   -fprofile-generate.\t This makes it possible to rebuild program\t with same outcome which is useful, for example, for distribution packages.\n  -fprofile-prefix-path\t can be used in combination with  -fprofile-generate=profile_dir and\t  -fprofile-use=profile_dir to inform GCC where the base\t directory of build source tree is in case it differs between instrumentation\t and optimized builds.\n  -fanalyzer\tenables a new static analysis pass and associated warnings.\tThis pass performs a time-consuming exploration of paths through\tthe code in the hope of detecting various common errors, such as\tdouble-free bugs. This option should be regarded as\t experimental in this release. In particular, analysis of non-C\tcode is unlikely to work.\n  Inter-procedural optimization improvements:  The inter-procedural scalar replacement of aggregates (IPA-SRA) pass\t was re-implemented to work at link-time and can now also remove\t computing and returning unused return values.\n  -finline-functions\t is now enabled at  -O2 and was retuned for better code\t size versus runtime performance trade-offs. Inliner heuristics was\t also significantly sped up to avoid negative impact to  -flto\t -O2 compile times.\n  Inliner heuristics and function cloning can now use value-range\t information to predict effectivity of individual transformations.\n  During link-time optimization the C++ One Definition Rule is used to\t increase precision of type based alias analysis.\n  Link-time optimization improvements:  A new binary   lto-dump has been added. The program can dump various information about a LTO bytecode object file.\n  Parallel phase of the LTO can automatically detect a running make&#39;s\tjobserver or can fall back to number of available cores.\n  The LTO bytecode can be compressed with   zstd algorithm. Configure script can automatically detect the  zstd support.\n  Most  --param values can now be specified at\t translation unit granularity. This includes all parameters controlling\t the inliner and other inter-procedural optimizations. Unlike earlier\t releases, GCC 10 will ignore parameters controlling optimizations\t specified at link-time and apply parameters specified at compile-time\t in the same manner as done for optimization flags.\n  Profile driven optimization improvements:  Using   -fprofile-values, an instrumented binary can track multiple\tvalues (up to 4) for e.g. indirect calls and provide more precise\tprofile information.\n  Version 2.6 of the  OpenACC specification is now supported in the C, C++ and Fortran compilers. See the  implementation status section on the OpenACC wiki page and the   run-time library documentation for further information.\n  GCC 10 adds a number of newly implemented  OpenMP 5.0 features on top of the GCC 9 release such as  conditional  lastprivate clause,  scan and  loop directives,  order(concurrent) and  use_device_addr clauses support,  if clause on  simd construct or partial support for the  declare\u00a0variant directive, getting closer to full support of the OpenMP 5.0 standard.\n  OpenMP and OpenACC now support  offloading to AMD Radeon (GCN) GPUs; supported are the third-generation Fiji ( fiji) and the fifth-generation VEGA 10/VEGA 20 ( gfx900 or  gfx906).\n  New attributes:  The  access function and type attribute has been added to describe how a function accesses objects passed to it by pointer or reference, and to associate such arguments with integer arguments denoting the objects&#39; sizes. The attribute is used to enable the detection of invalid accesses by user-defined functions, such as those diagnosed by  -Wstringop-overflow.\n  The  symver attribute can be used to bind symbols to specific version nodes on ELF platforms. This is preferred to using inline assembly with GNU as  symver directive because the latter is not compatible with link-time optimizations.\n  New warnings:  -Wstring-compare, enabled\tby  -Wextra, warns about equality and inequality\texpressions between zero and the result of a call to either\t strcmp and  strncmp that evaluate to\ta constant as a result of the length of one argument being greater\tthan the size of the array pointed to by the other.\n  -Wzero-length-bounds,\tenabled by  -Warray-bounds, warns about accesses to\telements of zero-length arrays that might overlap other members\tof the same object.\n  Enhancements to existing warnings:  -Warray-bounds\tdetects more out-of-bounds accesses to member arrays as well as\taccesses to elements of zero-length arrays.\n        -Wstringop-overflow\tdetects more out-of-bounds stores to member arrays including\tzero-length arrays, dynamically allocated objects and variable length\tarrays, as well as more instances of reads of unterminated character\tarrays by string built-in functions. The warning also detects\tout-of-bounds accesses by calls to user-defined functions declared\twith the new attribute  access.\n  Extended characters in identifiers may now be specified directly in the input encoding (UTF-8, by default), in addition to the UCN syntax ( \\uNNNN or  \\UNNNNNNNN) that is already supported:\n  Several new features from the upcoming C2X revision of the ISO C standard are supported with  -std=c2x and  -std=gnu2x. Some of these features are also supported as extensions when compiling for older language versions. In addition to the features listed, some features previously supported as extensions and now added to the C standard are enabled by default in C2X mode and not diagnosed with  -std=c2x -Wpedantic.  The  [[]] attribute syntax is supported, as in C++. Existing attributes can be used with this syntax in forms such as  [[gnu::const]]. The standard attributes  [[deprecated]],  [[fallthrough]] and  [[maybe_unused]] are supported.\n      When decimal floating-point arithmetic is supported,  &lt;float.h&gt; defines macros  DEC32_TRUE_MIN,  DEC64_TRUE_MIN and  DEC128_TRUE_MIN, in addition to the macros that were previously only defined if  __STDC_WANT_DEC_FP__ was defined before including  &lt;float.h&gt;.\n  In C2X mode, empty parentheses in a function definition give that function a type with a prototype for subsequent calls; other old-style function definitions are diagnosed by default in C2X mode.\n  GCC now defaults to  -fno-common. As a result, global variable accesses are more efficient on various targets. In C, global variables with multiple tentative definitions now result in linker errors. With  -fcommon such definitions are silently merged during linking.\n  New warnings:  -Wmismatched-tags,\tdisabled by default, warns about declarations of structs, classes,\tand class templates and their specializations with a class-key that\tdoes not match either the definition or the first declaration if no\tdefinition is provided. The option is provided to ease portability\tto Windows-based compilers.\n  -Wredundant-tags,\tdisabled by default, warns about redundant  class-key and\t enum-key in contexts where the key can be eliminated without\tcausing an syntactic ambiguity.\n              The ABI of passing and returning certain C++ classes by value changed on several targets in GCC 10, including  AArch64,  ARM,  PowerPC ELFv2,  S/390 and  Itanium. These changes affect classes with a zero-sized subobject (an empty base class, or data member with the  [[no_unique_address]] attribute) where all other non-static data members have the same type (this is called a &#34;homogeneous aggregate&#34; in some ABI specifications, or if there is only one such member, a &#34;single element&#34;). In  -std=c++17 and  -std=c++20 modes, classes with an empty base class were not considered to have a single element or to be a homogeneous aggregate, and so could be passed differently (in the wrong registers or at the wrong stack address). This could make code compiled with  -std=c++17 and  -std=c++14 ABI incompatible. This has been corrected and the empty bases are ignored in those ABI decisions, so functions compiled with  -std=c++14 and  -std=c++17 are now ABI compatible again. Example:  struct empty {}; struct S : empty { float f; }; void f(S);. Similarly, in classes containing non-static data members with empty class types using the C++20  [[no_unique_address]] attribute, those members weren&#39;t ignored in the ABI argument passing decisions as they should be. Both of these ABI changes are now diagnosed with  -Wpsabi.\n    Aliases can now be created directly from any  __traits that return symbols or tuples. Previously, an  AliasSeq was necessary in order to alias their return.\n  It is now possible to detect the language ABI specified for a struct, class, or interface using  __traits(getLinkage, ...).  Support for  core.math.toPrec intrinsics has been added. These intrinsics guarantee the rounding to specific floating-point precisions at specified points in the code.\n  Support for  pragma(inline) has been implemented. Previously the pragma was recognized, but had no effect on the compilation.\n  Optional parentheses in  asm operands are deprecated and will be removed in a future release.\n  All content imported files are now included in the make dependency list when compiling with  -M.\n  Compiler recognized attributes provided by the  gcc.attribute module will now take effect when applied to function prototypes as well as when applied to full function declarations.\n  Added a  --enable-libphobos-checking configure option to control whether run-time checks are compiled into the D runtime library.\n  Added a  --with-libphobos-druntime-only configure option to indicate whether to build only the core D runtime library, or both the core and standard libraries into libphobos.\n  use_device_addr of version 5.0 of the  OpenMP specification is now supported. Note that otherwise OpenMP 4.5 is partially supported in the Fortran compiler; the largest missing item is structure element mapping.\n  The default buffer size for I/O using unformatted files has been increased to 1048576. The buffer size for can now be set at runtime via the environment variables  GFORTRAN_FORMATTED_BUFFER_SIZE and  GFORTRAN_UNFORMATTED_BUFFER_SIZE for formatted and unformatted files, respectively.\n  Mismatches between actual and dummy argument lists in a single file are now rejected with an error. Use the new option  -fallow-argument-mismatch to turn these errors into warnings; this option is implied with  -std=legacy.  -Wargument-mismatch has been removed.\n  The handling of a BOZ literal constant has been reworked to provide better conformance to the Fortran 2008 and 2018 standards. In these Fortran standards, a BOZ literal constant is a typeless and kindless entity. As a part of the rework, documented and undocumented extensions to the Fortran standard now emit errors during compilation. Some of these extensions are permitted with the  -fallow-invalid-boz, where the error is degraded to a warning and the code is compiled as with older gfortran.\n  At any optimization level except -Os, gfortran now uses inline packing for arguments instead of calling a library routine. If the source contains a large number of arguments that need to be repacked, code size or time for compilation can become excessive. If that is the case,  -fno-inline-arg-packing can be used to disable inline argument packing.\n  Legacy extensions:  For formatted input/output, if the explicit widths after the data-edit descriptors  I,  F and  G have been omitted, default widths are used.\n  A blank format item at the end of a format specification, i.e. nothing following the final comma, is allowed. Use the option  -fdec-blank-format-item; this option is implied with  -fdec.\n  The existing support for  AUTOMATIC and  STATIC attributes has been extended to allow variables with the  AUTOMATIC attribute to be used in  EQUIVALENCE statements. Use  -fdec-static; this option is implied by  -fdec.\n  Allow character literals in assignments and  DATA statements for numeric ( INTEGER,  REAL, or  COMPLEX) or  LOGICAL variables. Use the option  -fdec-char-conversions; this option is implied with  -fdec.\n  DEC comparisons, i.e. allow Hollerith constants to be used in comparisons with  INTEGER,  REAL,  COMPLEX and  CHARACTER expressions. Use the option  -fdec.\n  Character type names in errors and warnings now include  len in addition to  kind;  * is used for assumed length. The kind is omitted if it is the default kind. Examples:  CHARACTER(12),  CHARACTER(6,4).\n  CO_BROADCAST now supports derived type variables including objects with allocatable components. In this case, the optional arguments  STAT= and  ERRMSG= are currently ignored.\n  The handling of module and submodule names has been reworked to allow the full 63-character length mandated by the standard. Previously symbol names were truncated if the combined length of module, submodule, and function name exceeded 126 characters. This change therefore breaks the ABI, but only for cases where this 126 character limit was exceeded.\n   The AArch64 and arm ports now support condition flag output constraints in inline assembly, as indicated by the  __GCC_ASM_FLAG_OUTPUTS__. On arm this feature is only available for A32 and T32 targets. Please refer to the documentation for more details.\n  There have been several improvements related to the Scalable Vector Extension (SVE):  The SVE ACLE types and intrinsics are now supported. They can be accessed using the header file  arm_sve.h.\n  It is now possible to create fixed-length SVE types using the  arm_sve_vector_bits attribute. For example:\n    -msve-vector-bits=128 now generates vector-length-specific code for little-endian targets. It continues to generate vector-length-agnostic code for big-endian targets, just as previous releases did for all targets.\n  The vectorizer is now able to use extending loads and truncating stores, including gather loads and scatter stores.\n  The vectorizer now compares the cost of vectorizing with SVE and vectorizing with Advanced SIMD and tries to pick the best one. Previously it would always use SVE if possible.\n  If a vector loop uses Advanced SIMD rather than SVE, the vectorizer now considers using SVE to vectorize the left-over elements (the \u201cscalar tail\u201d or \u201cepilog\u201d).\n  Besides these specific points, there have been many general improvements to the way that the vectorizer uses SVE.\n  The  -mbranch-protection=pac-ret option now accepts the optional argument  +b-key extension to perform return address signing with the B-key instead of the A-key.\n  The option  -moutline-atomics has been added to aid deployment of the Large System Extensions (LSE) on GNU/Linux systems built with a baseline architecture targeting Armv8-A. When the option is specified code is emitted to detect the presence of LSE instructions at runtime and use them for standard atomic operations. For more information please refer to the documentation.\n  The Transactional Memory Extension is now supported through ACLE intrinsics. It can be enabled through the  +tme option extension (for example,  -march=armv8.5-a+tme).\n  A number of features from Armv8.5-A are now supported through ACLE intrinsics. These include:  The random number instructions that can be enabled\tthrough the (already present in GCC 9.1)  +rng option\textension.\n  Similarly, the following Armv8.6-A features are now supported through ACLE intrinsics:  The bfloat16 extension. This extension is enabled automatically when Armv8.6-A is selected (such as by  -march=armv8.6-a). It can also be enabled for Armv8.2-A and later using the  +bf16 option extension.\n  The Matrix Multiply extension. This extension is split into three parts, one for each supported data type:\t Support for 8-bit integer matrix multiply instructions.\t This extension is enabled automatically when Armv8.6-A is\t selected. It can also be enabled for Armv8.2-A and later using\t the  +i8mm option extension.\n  Support for 32-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f32mm\t option extension, which also has the effect of enabling SVE.\n  Support for 64-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f64mm\t option extension, which likewise has the effect of enabling SVE.\n  SVE2 is now supported through ACLE intrinsics and (to a limited extent) through autovectorization. It can be enabled through the  +sve2 option extension (for example,  -march=armv8.5-a+sve2). Additional extensions can be enabled through  +sve2-sm4,  +sve2-aes,  +sve2-sha3 and  +sve2-bitperm.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-a65ae or as arguments to the equivalent target attributes and pragmas.\n  Support for the FDPIC ABI has been added. It uses 64-bit function descriptors to represent pointers to functions, and enables code sharing on MMU-less systems. The corresponding target triple is  arm-uclinuxfdpiceabi, and the C library is uclibc-ng.\n    The handling of 64-bit integer operations has been significantly reworked and improved leading to improved performance and reduced stack usage when using 64-bit integral data types. The option  -mneon-for-64bits is now deprecated and will be removed in a future release.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-m35p.\n  Support has been extended for the ACLE   data-processing intrinsics to include 32-bit SIMD, saturating arithmetic, 16-bit multiplication and other related intrinsics aimed at DSP algorithm optimization.\n  Support for  -mpure-code in Thumb-1 (v6m) has been added: this M-profile feature is no longer restricted to targets with  MOVT. For example,  -mcpu=cortex-m0 now supports this option.\n      Support for the   MVE beta ACLE intrinsics has been added. These intrinsics can be enabled by including the arm_mve.h header file and passing the  +mve  or  +mve.fp  option extensions (for example:  -march=armv8.1-m.main+mve ).\n    The interrupt service routine functions save all used registers, including extension registers and auxiliary registers used by Zero Overhead Loops.\n  Improve code size by using multiple short instructi\n......", "posttime": "2020-05-17 06:49:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6dd8\u6c70,gcc", "title": "GCC\u88ab\u6dd8\u6c70\u51fa\u5c40", "title_en": "GCC 10.1 Is Out", "transed": 1, "url": "https://gcc.gnu.org/gcc-10/changes.html", "via": "", "real_tags": ["\u6dd8\u6c70", "gcc"]}, {"category": "", "categoryclass": "", "imagename": "a437c9bce657fa83fcd2aaae9537d6b3.jpeg", "infoid": 1002451, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u8bf4\uff0c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u7684\u4e00\u4f4d\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u5df2\u7ecf\u89e3\u51b3\u4e86\u5047\u8bbe\u66f2\u901f\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2a\u6096\u8bba\u3002\nAlcubierre\u9a71\u52a8\u5668\u4f7f\u7528\u5de8\u5927\u7684\u80fd\u91cf\u6765\u5236\u9020\u4e00\u79cd\u6298\u53e0\u5f0f\u7684\u53e3\u888b\u5c3a\u5bf8\u3002\n\u7f8e\u56fd\u5b87\u822a\u5c40\u771f\u7684\u5728\u7814\u7a76\u3002\u3002\u3002\u66f2\u901f\u9a71\u52a8\u5668\uff1f\u4e00\u4efd\u5185\u90e8\u53ef\u884c\u6027\u62a5\u544a\u8868\u660e\uff0c\u8be5\u673a\u6784\u53ef\u80fd\u662f\uff0c\u6216\u8005\u81f3\u5c11\u5728\u6298\u53e0\u7a7a\u95f4\u65c5\u884c\u7684\u60f3\u6cd5\u662fNASA\u661f\u9645\u592a\u7a7a\u98de\u884c\u83dc\u5355\u7684\u4e00\u90e8\u5206\u3002\n\u5728\u8fd9\u4efd\u62a5\u544a\u4e2d\uff0c\u9ad8\u7ea7\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u54c8\u7f57\u5fb7\u00b7\u201c\u6851\u5c3c\u201d\u00b7\u6000\u7279\u89e3\u91ca\u4e86\u7406\u8bba\u7269\u7406\u5b66\u5bb6(\u548c\u540c\u884c)\u7c73\u683c\u5c14\u00b7\u963f\u5c14\u5e93\u6bd4\u5c14\u7684\u89c2\u70b9\u3002\u7136\u540e\uff0c\u4ed6\u63cf\u8ff0\u4e86\u963f\u5c14\u5e93\u6bd4\u57c3\u5c14\u5de5\u4f5c\u4e2d\u7684\u4e00\u4e2a\u201c\u6096\u8bba\u201d\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u6096\u8bba\u6765\u5efa\u7acb\u4e00\u4e2a\u5de5\u4f5c\u6a21\u578b\u3002\n\u53e3\u8bed\u5316\u7684\u672f\u8bed\u201c\u66f2\u901f\u9a71\u52a8\u201d\u6765\u81ea\u79d1\u5e7b\u5c0f\u8bf4\uff0c\u5b83\u6307\u7684\u662f\u7b26\u5408\u7231\u56e0\u65af\u5766\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u4e9a\u5149\u901f(\u4f4e\u4e8e\u5149\u901f)\u65c5\u884c\u7684\u6982\u5ff5\uff0c\u4f46\u4ecd\u7136\u5c06\u901f\u5ea6\u63a8\u5230\u7406\u8bba\u4e0a\u53ef\u80fd\u7684\u7edd\u5bf9\u6700\u5927\u503c\u3002\u5728\u201c\u661f\u9645\u8ff7\u822a\u201d\u7684\u7ecf\u5178\u4e2d\uff0c\u6e10\u8fdb\u5f0f\u7684\u8bbe\u8ba1\u8d8a\u6765\u8d8a\u63a5\u8fd1\u4e00\u4e2a\u5047\u8bbe\u7684\u969c\u788d--\u8fd9\u5c31\u662f\u771f\u6b63\u7684\u79d1\u5b66\u5bb6\u4eec\u4e0d\u65ad\u5411\u7edd\u5bf9\u96f6\u5ea6\u5f00\u51ff\u7684\u65b9\u5f0f\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5149\u901f\u662f\u969c\u788d\u3002\nAlcubierre\u9a71\u52a8\u5668\u7684\u5de5\u4f5c\u539f\u7406\u5c31\u50cf\u662f\u7ecf\u5178\u6d3e\u5bf9\u628a\u620f\u7684\u7269\u7406\u7248\u672c\u3002\u5b87\u5b99\u98de\u8239\u5750\u5728\u65f6\u7a7a\u4e2d\uff0c\u800c\u79d1\u5b66\u5c06\u9762\u6599\u4ece\u5b83\u524d\u9762\u62c9\u5230\u5b83\u540e\u9762\uff0c\u5c31\u50cf\u4e00\u5757\u684c\u5e03\u4ece\u94fa\u5f00\u7684\u76d8\u5b50\u4e0b\u9762\u62c9\u51fa\u6765\u4e00\u6837\u3002\u6000\u7279\u89e3\u91ca\u8bf4\uff1a\n\u201cAlcubierre\u6240\u63cf\u8ff0\u7684\u64cd\u4f5c\u6982\u5ff5\u662f\uff0c\u822a\u5929\u5668\u5c06\u4f7f\u7528\u4e00\u4e9b\u4f20\u7edf\u7684\u63a8\u8fdb\u7cfb\u7edf\u79bb\u5f00\u8d77\u59cb\u70b9(\u4f8b\u5982\u5730\u7403)\uff0c\u5e76\u884c\u9a76\u4e00\u6bb5\u8ddd\u79bbd\uff0c\u7136\u540e\u4f7f\u98de\u8239\u76f8\u5bf9\u4e8e\u51fa\u53d1\u70b9\u505c\u4e0b\u6765\u3002\u201d\u78c1\u573a\u4f1a\u6253\u5f00\uff0c\u98de\u8239\u5c31\u4f1a\u8fc5\u901f\u98de\u5411\u5b83\u7684\u6052\u661f\u76ee\u7684\u5730\uff0c\u4e0d\u4f1a\u5728\u5c40\u90e8\u7a81\u7834\u5149\u901f\uff0c\u4f46\u4f1a\u5728\u4efb\u610f\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6574\u4e2a\u8ddd\u79bb\u3002\u201c\u3002\nAlcubierre\u7684\u7406\u8bba\u53ef\u4ee5\u8ffd\u6eaf\u52301994\u5e74\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u7269\u7406\u5b66\u5bb6\u4eec\u5c31\u4e00\u76f4\u628a\u5b83\u4f5c\u4e3a\u8fdb\u4e00\u6b65\u8ba8\u8bba\u7684\u8d77\u70b9\u3002\u901a\u8fc7\u521b\u9020\u4e00\u79cd\u8896\u73cd\u4e16\u754c\uff0c\u5b87\u5b99\u98de\u8239\u4f3c\u4e4e\u53ef\u4ee5\u5728\u7269\u7406\u4e4b\u5916\u8fd0\u884c\uff0c\u7269\u7406\u5b9a\u5f8b\u53ef\u4ee5\u88ab\u56de\u907f-\u81f3\u5c11\u7406\u8bba\u662f\u8fd9\u6837\u7684\u3002\n\u8fd9\u5176\u4e2d\u6709\u4ec0\u4e48\u77db\u76fe\u4e4b\u5904\u5462\uff1f\u6000\u7279\u662f\u8fd9\u6837\u63cf\u8ff0\u7684\uff1a\u201c\u80fd\u91cf\u5bc6\u5ea6\u542f\u52a8\u65f6\uff0c+x\u8f74\u65b9\u5411\u7684\u9009\u62e9\u5728\u6570\u5b66\u4e0a\u662f\u4efb\u610f\u7684\uff0c\u90a3\u4e48\u822a\u5929\u5668\u600e\u4e48\u2018\u77e5\u9053\u2019\u8be5\u5f80\u54ea\u4e2a\u65b9\u5411\u8d70\u5462\uff1f\u201d\u79d1\u5e7b\u5c0f\u8bf4\u901a\u8fc7\u53d1\u660e\u4e00\u4e2a\u201c\u7a33\u5b9a\u7684\u866b\u6d1e\u201d\u89e3\u51b3\u4e86\u8fd9\u4e2a\u6096\u8bba\uff0c\u4f46\u662f\u6000\u7279\u4e0d\u80fd\u9a7e\u9a76\u4e00\u67b6\u5929\u795e(Deus Ex Machina)\u53bb\u534a\u4eba\u9a6c\u5ea7\u963f\u5c14\u6cd5\u661f(Alpha Centauri)\u3002\n\u76f8\u53cd\uff0c\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7565\u6709\u4e0d\u540c\u7684\u8303\u4f8b\uff1a\u201c\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u64cd\u4f5c\u6982\u5ff5\u4e2d\uff0c\u822a\u5929\u5668\u79bb\u5f00\u5730\u7403\uff0c\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u7684\u4e9a\u5149\u901f\uff0c\u7136\u540e\u542f\u52a8\u78c1\u573a\u3002\u5f53\u6fc0\u6d3b\u65f6\uff0c\u78c1\u573a\u7684\u52a9\u63a8\u4f5c\u7528\u4e8e\u521d\u59cb\u901f\u5ea6\uff0c\u4f5c\u4e3a\u6807\u91cf\u4e58\u6570\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u9ad8\u7684\u8868\u89c2\u901f\u5ea6\uff0c\u201c\u6000\u7279\u89e3\u91ca\u8bf4\u3002\n\u8fd9\u8258\u8239\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u7136\u540e\u542f\u52a8\u66f2\u901f\u9a71\u52a8\u5668\uff0c\u800c\u662f\u4f7f\u7528\u6447\u6446\u542f\u52a8\u4f5c\u4e3a\u65b9\u5411\u63d0\u793a\u3002\n\u6211\u4eec\u8ba4\u4e3a\u66f2\u901f\u662f\u5b9e\u73b0\u9065\u8fdc\u661f\u9645\u65c5\u884c\u7684\u552f\u4e00\u9014\u5f84\u3002\u6000\u7279\u5c06\u91cd\u70b9\u653e\u5728\u4e86\u4f5c\u54c1\u4e2d\u7684\u4e00\u4e2a\u6570\u5b66\u6096\u8bba\u4e0a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u969c\u788d\u3002\n\u4ed6\u8ba4\u4e3a\uff0c\u66f2\u901f\u7684\u8bd5\u9a8c\u573a\u53ef\u80fd\u79bb\u6211\u4eec\u5bb6\u66f4\u8fd1\u3002\u4ed6\u89e3\u91ca\u8bf4\uff1a\u201c\u66f2\u901f\u63a8\u8fdb\u5668\u7684\u60f3\u6cd5\u53ef\u80fd\u4f1a\u5728\u56fd\u5185\u2018\u6f5c\u610f\u8bc6\u2019\u6709\u4e00\u4e9b\u5353\u6709\u6210\u6548\u7684\u5e94\u7528\uff0c\u8ba9\u5b83\u5728\u6210\u4e3a\u771f\u6b63\u7684\u661f\u9645\u63a8\u8fdb\u5668\u7cfb\u7edf\u4e4b\u524d\u6210\u719f\u8d77\u6765\u3002\u201d\n\u5982\u679c\u79d1\u5b66\u5bb6\u80fd\u591f\u5236\u9020\u51fa\u963f\u5c14\u5e93\u6bd4\u5c14\u63a8\u8fdb\u5668\u6240\u9700\u7684\u6240\u8c13\u201c\u8d1f\u8d28\u91cf\u201d\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u90e8\u7f72\u5728\u5730\u7403\u7684\u5927\u6c14\u5c42\u4e2d\u3002\n\u6b64\u5185\u5bb9\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u4ee5\u5e2e\u52a9\u7528\u6237\u63d0\u4f9b\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728piano.io\u4e0a\u627e\u5230\u6709\u5173\u6b64\u5185\u5bb9\u548c\u7c7b\u4f3c\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "A NASA propulsion physicist has, he says,  resolved a paradox in a hypothetical warp drive.\n The Alcubierre drive  uses a huge amount of energy to make a sort of fold-like pocket dimension.\n   Is NASA really working on . . . a  warp drive? An  internal feasibility report suggests the agency might be, or at least that the idea of traveling through folded space is part of the NASA interstellar spaceflight menu.\n  In the report, advanced propulsion physicist Harold \u201cSonny\u201d White explains the ideas of theoretical physicist (and peer) Miguel Alcubierre. He then describes a \u201cparadox\u201d in Alcubierre\u2019s work, and how that paradox might be resolved to make a working model.\n   The colloquial term \u201cwarp drive\u201d has come from science fiction, and it refers to the idea of sub-luminal (less than the speed of light) travel that conforms to Einstein\u2019s theory of general relativity, but still pushes speed to absolute maximum that\u2019s theoretically possible. In the  Star Trek canon, progressive designs come closer and closer to a hypothetical barrier\u2014the way real scientists continue to hew closer and closer to absolute zero. In real life, light speed is the barrier.\n The Alcubierre drive works like a physics version of a classic party trick. The spaceship sits in spacetime while science pulls the fabric from in front of it to behind it, like a tablecloth pulled out from under a full spread of dishes. White explains:\n \u201cThe concept of operations as described by Alcubierre is that the spacecraft would depart the point of origin (e.g. earth) using some conventional propulsion system and travel a distance  d, then bring the craft to a stop relative to the departure point. The field would be turned on and the craft would zip off to its stellar destination, never locally breaking the speed of light, but covering the distance in an arbitrarily short period of time just the same.\u201d\n Alcubierre\u2019s theory dates to 1994, and physicists have used it as a jumping-off point for further discussion ever since. By creating a kind of pocket world where a spaceship can operate seemingly outside of physics, the  laws of physics can be sidestepped\u2014or so the theory goes.\n What\u2019s the paradox? White describes it this way: \u201cWhen the energy density is initiated, the choice in direction of the +x-axis is mathematically arbitrary, so how does the spacecraft \u2018know\u2019 which direction to go?\u201d Sci-fi has solved this paradox by inventing a \u201cstable wormhole,\u201d but White can\u2019t fly a  deus ex machina to Alpha Centauri.\n  Instead, he suggests a slightly different paradigm: \u201cIn this modified concept of operations, the spacecraft departs earth and establishes an initial sub-luminal velocity, then initiates the field. When active, the field\u2019s boost acts on the initial velocity as a scalar multiplier resulting in a much higher apparent speed,\u201d White explains.\n Instead of coming to a stop and then engaging the warp drive, the ship would use a rolling start as a directional cue.\n   We think of warp speed as, well, the only way faraway interstellar travel will ever be feasible. And White has focused on one mathematical paradox within the work, but that\u2019s not the only such obstacle.\n He suggests the proving ground for warp speed could be, well, closer to home. \u201c[T]he idea of a warp drive may have some fruitful domestic applications \u2018subliminally,\u2019 allowing it to be matured before it is engaged as a true interstellar drive system,\u201d he explains.\n If scientists can make the so-called \u201cnegative mass\u201d required for an Alcubierre drive, even a tiny example could be deployed within Earth\u2019s atmosphere.\n   This content is created and maintained by a third party, and imported onto this page to help users provide their email addresses. You may be able to find more information about this and similar content at piano.io", "posttime": "2020-05-17 06:35:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "nasa,\u66f2\u901f,working", "title": "\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u771f\u7684\u5728\u7814\u7a76\u66f2\u901f\u9a71\u52a8\u5668\u5417\uff1f", "title_en": "Is NASA Actually Working On a Warp Drive?", "transed": 1, "url": "https://www.popularmechanics.com/science/a32449240/nasa-warp-drive-space-time/", "via": "", "real_tags": ["nasa", "\u66f2\u901f", "working"]}, {"category": "", "categoryclass": "", "imagename": "37516a74d518642ad21ef3f8455decb3.png", "infoid": 1002450, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0cApache Kafka\u00ae\u4f7f\u7528Apache zooKeeper\u2122\u6765\u5b58\u50a8\u5176\u5143\u6570\u636e\u3002\u5206\u533a\u4f4d\u7f6e\u548c\u4e3b\u9898\u914d\u7f6e\u7b49\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e4b\u5916\uff0c\u5b58\u50a8\u5728\u5355\u72ec\u7684ZooKeeper\u96c6\u7fa4\u4e2d\u3002\u57282019\u5e74\uff0c\u6211\u4eec\u6982\u8ff0\u4e86\u4e00\u4e2a\u8ba1\u5212\uff0c\u6253\u7834\u8fd9\u79cd\u4f9d\u8d56\uff0c\u5c06\u5143\u6570\u636e\u7ba1\u7406\u5f15\u5165\u5361\u592b\u5361\u672c\u8eab\u3002\n\u90a3\u4e48\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u6709\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u95ee\u9898\u4e0d\u5728\u4e8e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u672c\u8eab\uff0c\u800c\u5728\u4e8e\u5916\u90e8\u5143\u6570\u636e\u7ba1\u7406\u7684\u6982\u5ff5\u3002\n\u6709\u4e24\u4e2a\u7cfb\u7edf\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u91cd\u590d\u3002\u6bd5\u7adf\uff0cKafka\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u53d1\u5e03/\u8ba2\u9605API\u3002ZooKeeper\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edfAPI\u3002\u6bcf\u79cd\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u901a\u4fe1\u3001\u5b89\u5168\u3001\u76d1\u63a7\u548c\u914d\u7f6e\u65b9\u5f0f\u3002\u5bf9\u4e8e\u64cd\u4f5c\u5458\u6765\u8bf4\uff0c\u62e5\u6709\u4e24\u4e2a\u7cfb\u7edf\u5927\u81f4\u4f1a\u4f7f\u7ed3\u679c\u7684\u603b\u590d\u6742\u6027\u589e\u52a0\u4e00\u500d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u9661\u5ced\u5b66\u4e60\u66f2\u7ebf\uff0c\u5e76\u589e\u52a0\u67d0\u4e9b\u9519\u8bef\u914d\u7f6e\u5bfc\u81f4\u5b89\u5168\u6f0f\u6d1e\u7684\u98ce\u9669\u3002\n\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u6548\u7387\u4e0d\u9ad8\u3002\u6211\u4eec\u81f3\u5c11\u8fd0\u884c\u4e09\u4e2a\u989d\u5916\u7684Java\u8fdb\u7a0b\uff0c\u6709\u65f6\u751a\u81f3\u66f4\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230Kafka\u96c6\u7fa4\u7684ZooKeeper\u8282\u70b9\u548cKafka\u8282\u70b9\u4e00\u6837\u591a\uff01\u53e6\u5916\uff0cZooKeeper\u4e2d\u7684\u6570\u636e\u8fd8\u9700\u8981\u53cd\u6620\u5728Kafka\u63a7\u5236\u5668\u4e0a\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53cc\u91cd\u7f13\u5b58\u3002\n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u9650\u5236\u4e86Kafka\u7684\u53ef\u4f38\u7f29\u6027\u3002\u5f53Kafka\u96c6\u7fa4\u6b63\u5728\u542f\u52a8\uff0c\u6216\u8005\u6b63\u5728\u9009\u62e9\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u52a0\u8f7d\u96c6\u7fa4\u7684\u5b8c\u6574\u72b6\u6001\u3002\u968f\u7740\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u52a0\uff0c\u6b64\u52a0\u8f7d\u8fc7\u7a0b\u7684\u957f\u5ea6\u4e5f\u4f1a\u589e\u52a0\u3002\u8fd9\u9650\u5236\u4e86Kafka\u53ef\u4ee5\u5b58\u50a8\u7684\u5206\u533a\u6570\u91cf\u3002\n\u6700\u540e\uff0c\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u53ef\u80fd\u4f1a\u4f7f\u63a7\u5236\u5668\u7684\u5185\u5b58\u5185\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u4e0d\u540c\u6b65\u3002\u63a7\u5236\u5668\u7684\u6d3b\u5ea6\u89c6\u56fe(\u5728\u96c6\u7fa4\u4e2d)\u4e5f\u53ef\u80fd\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u89c6\u56fe\u4e0d\u540c\u3002\nKIP-500\u6982\u8ff0\u4e86\u5728\u5361\u592b\u5361\u4e2d\u5904\u7406\u5143\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u201cKafka on Kafka\u201d\uff0c\u56e0\u4e3a\u5b83\u6d89\u53ca\u5230\u5c06Kafka\u7684\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e2d\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728ZooKeeper\u7b49\u5916\u90e8\u7cfb\u7edf\u4e2d\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0c\u5143\u6570\u636e\u5c06\u5b58\u50a8\u5728Kafka\u5185\u90e8\u7684\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u63a7\u5236\u5668\u5c06\u662f\u6b64\u5206\u533a\u7684\u9886\u5bfc\u8005\u3002\u5c06\u4e0d\u4f1a\u6709\u5916\u90e8\u5143\u6570\u636e\u7cfb\u7edf\u9700\u8981\u914d\u7f6e\u548c\u7ba1\u7406\uff0c\u53ea\u6709\u5361\u592b\u5361\u672c\u8eab\u3002\n\u6211\u4eec\u5c06\u5143\u6570\u636e\u89c6\u4e3a\u65e5\u5fd7\u3002\u9700\u8981\u6700\u65b0\u66f4\u65b0\u7684\u4ee3\u7406\u53ea\u80fd\u8bfb\u53d6\u65e5\u5fd7\u7684\u5c3e\u90e8\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u9700\u8981\u6700\u65b0\u65e5\u5fd7\u6761\u76ee\u7684\u4f7f\u7528\u8005\u53ea\u9700\u8981\u8bfb\u53d6\u65e5\u5fd7\u7684\u6700\u672b\u5c3e\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u65e5\u5fd7\u3002\u4ee3\u7406\u8fd8\u5c06\u80fd\u591f\u5728\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u65f6\u6301\u4e45\u4fdd\u5b58\u5b83\u4eec\u7684\u5143\u6570\u636e\u7f13\u5b58\u3002\nKafka\u96c6\u7fa4\u9009\u4e3e\u63a7\u5236\u5668\u8282\u70b9\u6765\u7ba1\u7406\u5206\u533a\u9886\u5bfc\u8005\u548c\u7fa4\u96c6\u5143\u6570\u636e\u3002\u6211\u4eec\u62e5\u6709\u7684\u5206\u533a\u548c\u5143\u6570\u636e\u8d8a\u591a\uff0c\u63a7\u5236\u5668\u53ef\u4f38\u7f29\u6027\u5c31\u53d8\u5f97\u8d8a\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u4e0e\u4e3b\u9898\u6216\u5206\u533a\u7684\u6570\u91cf\u6210\u7ebf\u6027\u6bd4\u4f8b\u7684\u65f6\u95f4\u7684\u64cd\u4f5c\u6570\u91cf\u3002\n\u4e00\u79cd\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u63a7\u5236\u5668\u6545\u969c\u8f6c\u79fb\u3002\u76ee\u524d\uff0c\u5f53Kafka\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u5b83\u9700\u8981\u52a0\u8f7d\u5b8c\u6574\u7684\u96c6\u7fa4\u72b6\u6001\u624d\u80fd\u7ee7\u7eed\u3002\u968f\u7740\u7fa4\u96c6\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u957f\uff0c\u6b64\u8fc7\u7a0b\u9700\u8981\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728KIP-500\u4e4b\u540e\u7684\u4e16\u754c\u4e2d\uff0c\u5c06\u6709\u51e0\u4e2a\u5907\u7528\u63a7\u5236\u5668\uff0c\u5b83\u4eec\u968f\u65f6\u51c6\u5907\u5728\u6d3b\u52a8\u63a7\u5236\u5668\u79bb\u5f00\u65f6\u63a5\u624b\u3002\u8fd9\u4e9b\u5907\u7528\u63a7\u5236\u5668\u53ea\u662f\u5143\u6570\u636e\u5206\u533a\u7684RAFT Quorum\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u5728\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7ecf\u5386\u6f2b\u957f\u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002\nKIP-500\u5c06\u52a0\u5feb\u4e3b\u9898\u7684\u521b\u5efa\u548c\u5220\u9664\u3002\u76ee\u524d\uff0c\u5728\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u91cd\u65b0\u52a0\u8f7d\u96c6\u7fa4\u4e2d\u6240\u6709\u4e3b\u9898\u540d\u79f0\u7684\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5f53\u96c6\u7fa4\u4e2d\u7684\u4e3b\u9898\u96c6\u53d1\u751f\u66f4\u6539\u65f6\uff0cZooKeeper\u4f1a\u901a\u77e5\u6211\u4eec\uff0c\u4f46\u5b83\u5e76\u4e0d\u786e\u5207\u5730\u544a\u8bc9\u6211\u4eec\u6dfb\u52a0\u6216\u5220\u9664\u4e86\u54ea\u4e9b\u4e3b\u9898\u3002\u76f8\u53cd\uff0c\u5728\u540eKIP-500\u4e16\u754c\u4e2d\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u53ea\u6d89\u53ca\u5728\u5143\u6570\u636e\u5206\u533a\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u6761\u76ee\uff0c\u8fd9\u662f\u4e00\u4e2aO(1)\u64cd\u4f5c\u3002\n\u5143\u6570\u636e\u53ef\u4f38\u7f29\u6027\u662f\u672a\u6765\u6269\u5c55Kafka\u7684\u5173\u952e\u3002\u6211\u4eec\u9884\u8ba1\u5355\u4e2aKafka\u96c6\u7fa4\u6700\u7ec8\u80fd\u591f\u652f\u6301100\u4e07\u4e2a\u6216\u66f4\u591a\u5206\u533a\u3002\n\u4f5c\u4e3aKafka\u7248\u672c\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u7684\u51e0\u4e2a\u7ba1\u7406\u5de5\u5177\u4ecd\u7136\u5141\u8bb8\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u901a\u4fe1\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4ecd\u7136\u6709\u4e00\u4e24\u4e2a\u64cd\u4f5c\u4e0d\u80fd\u5b8c\u6210\uff0c\u9664\u975e\u901a\u8fc7\u8fd9\u79cd\u76f4\u63a5\u7684\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u901a\u4fe1\u3002\n\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u7f29\u5c0f\u8fd9\u4e9b\u5dee\u8ddd\u3002\u5f88\u5feb\uff0c\u5bf9\u4e8e\u4ee5\u524d\u9700\u8981\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u8bbf\u95ee\u7684\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u90fd\u5c06\u6709\u4e00\u4e2a\u516c\u5171\u7684Kafka API\u3002\u5728Kafka\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u7981\u7528\u6216\u5220\u9664\u4e0d\u5fc5\u8981\u7684--zooKeeper\u6807\u5fd7\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0cKafka\u63a7\u5236\u5668\u5c06\u5176\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u63a7\u5236\u5668\u4f9d\u8d56\u4e8e\u6b64\u5206\u533a\uff0c\u6240\u4ee5\u5206\u533a\u672c\u8eab\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u63a7\u5236\u5668\u6765\u8fdb\u884c\u9886\u5bfc\u8005\u9009\u4e3e\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\u76f8\u53cd\uff0c\u7ba1\u7406\u6b64\u5206\u533a\u7684\u8282\u70b9\u5fc5\u987b\u5b9e\u73b0\u81ea\u6211\u7ba1\u7406\u7684RAFT\u4ef2\u88c1\u3002\nKIP-595\uff1a\u5143\u6570\u636e\u4ef2\u88c1\u7684RAFT\u534f\u8bae\u6982\u8ff0\u4e86\u6211\u4eec\u5c06\u5982\u4f55\u4f7fRAFT\u534f\u8bae\u9002\u5e94Kafka\uff0c\u4ece\u800c\u4f7f\u5176\u771f\u6b63\u611f\u89c9\u50cf\u662f\u7cfb\u7edf\u7684\u672c\u673a\u90e8\u5206\u3002\u8fd9\u5c06\u6d89\u53ca\u5c06RAFT\u8bba\u6587\u4e2d\u63cf\u8ff0\u7684\u57fa\u4e8e\u63a8\u9001\u7684\u6a21\u5f0f\u66f4\u6539\u4e3a\u57fa\u4e8ePull\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e0e\u4f20\u7edf\u7684\u5361\u592b\u5361\u590d\u5236\u662f\u4e00\u81f4\u7684\u3002\u5176\u4ed6\u8282\u70b9\u5c06\u8fde\u63a5\u5230\u8fd9\u4e9b\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5c06\u6570\u636e\u63a8\u9001\u5230\u5176\u4ed6\u8282\u70b9\u3002\u540c\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0e\u5361\u592b\u5361\u4e00\u81f4\u7684\u672f\u8bed\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u7b4f\u7eb8--\u201c\u7eaa\u5143\u201d\u800c\u4e0d\u662f\u201c\u672f\u8bed\u201d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u6700\u521d\u7684\u5b9e\u65bd\u5c06\u4fa7\u91cd\u4e8e\u652f\u6301\u5143\u6570\u636e\u5206\u533a\u3002\u5b83\u4e0d\u652f\u6301\u5c06\u5e38\u89c4\u5206\u533a\u8f6c\u6362\u4e3aRAFT\u6240\u9700\u7684\u5168\u90e8\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u8fd9\u662f\u6211\u4eec\u672a\u6765\u53ef\u80fd\u4f1a\u56de\u5230\u7684\u4e00\u4e2a\u8bdd\u9898\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u9879\u76ee\u6700\u4ee4\u4eba\u5174\u594b\u7684\u90e8\u5206\u662f\u80fd\u591f\u5728\u6ca1\u6709\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u60c5\u51b5\u4e0b\u5728\u201cKIP-500\u6a21\u5f0f\u201d\u4e0b\u8fd0\u884c\u3002\u5f53Kafka\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528RAFT Quorum\u6765\u5b58\u50a8\u6211\u4eec\u7684\u5143\u6570\u636e\uff0c\u800c\u4e0d\u662fZooKeeper\u3002\n\u6700\u521d\uff0cKIP-500\u6a21\u5f0f\u5c06\u662f\u8bd5\u9a8c\u6027\u7684\u3002\u5927\u591a\u6570\u7528\u6237\u5c06\u7ee7\u7eed\u4f7f\u7528\u201c\u4f20\u7edf\u6a21\u5f0f\u201d\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cZooKeeper\u4ecd\u5728\u4f7f\u7528\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3aKIP-500\u6a21\u5f0f\u4e00\u5f00\u59cb\u5e76\u4e0d\u652f\u6301\u6240\u6709\u53ef\u80fd\u7684\u529f\u80fd\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5c06KIP-500\u6a21\u5f0f\u8bbe\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u4e4b\u524d\u83b7\u5f97\u4fe1\u5fc3\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u65f6\u95f4\u6765\u5b8c\u5584\u4ece\u4f20\u7edf\u6a21\u5f0f\u5230KIP-500\u6a21\u5f0f\u7684\u5347\u7ea7\u8fc7\u7a0b\u3002\n\u542f\u7528KIP-500\u6a21\u5f0f\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u5c06\u5728\u63a7\u5236\u5668\u4e2d\u5b8c\u6210\u3002\u6211\u4eec\u5fc5\u987b\u5c06\u4e0eZooKeeper\u4ea4\u4e92\u7684\u63a7\u5236\u5668\u90e8\u5206\u4e0e\u5b9e\u73b0\u66f4\u591a\u901a\u7528\u903b\u8f91(\u5982\u526f\u672c\u96c6\u7ba1\u7406)\u7684\u90e8\u5206\u5206\u5f00\u3002\n\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u548c\u5b9e\u73b0\u66f4\u591a\u7684\u63a7\u5236\u5668API\u6765\u53d6\u4ee3\u76ee\u524d\u6d89\u53caZooKeeper\u7684\u901a\u4fe1\u673a\u5236\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u65b0\u7684AlterIsr API\u3002\u6b64API\u5141\u8bb8\u526f\u672c\u5728\u4e0d\u4f7f\u7528ZooKeeper\u7684\u60c5\u51b5\u4e0b\u901a\u77e5\u63a7\u5236\u5668\u540c\u6b65\u526f\u672c\u96c6\u4e2d\u7684\u66f4\u6539\u3002\nKIP-500\u5f15\u5165\u4e86\u6865\u5f0f\u7248\u672c\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0eKIP-500\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u5361\u592b\u5361\u7248\u672c\u5171\u5b58\u3002\u6865\u63a5\u7248\u672c\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u540e\u52a8\u7269\u56ed\u9972\u517b\u5458\u4e16\u754c\u7684\u96f6\u505c\u673a\u5347\u7ea7\u3002\u4f7f\u7528\u65e7\u7248\u672c\u5361\u592b\u5361\u7684\u7528\u6237\u53ea\u9700\u5347\u7ea7\u5230\u6865\u5f0f\u7248\u672c\u5373\u53ef\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5bf9\u7f3a\u5c11ZooKeeper\u7684\u7248\u672c\u6267\u884c\u7b2c\u4e8c\u6b21\u5347\u7ea7\u3002\u987e\u540d\u601d\u4e49\uff0c\u6865\u6881\u91ca\u653e\u5c31\u50cf\u4e00\u5ea7\u901a\u5f80\u65b0\u4e16\u754c\u7684\u6865\u6881\u3002\n\u90a3\u4e48\u8fd9\u662f\u600e\u4e48\u8fd0\u4f5c\u7684\u5462\uff1f\u5047\u8bbe\u4e00\u4e2a\u96c6\u7fa4\u5904\u4e8e\u90e8\u5206\u5347\u7ea7\u72b6\u6001\uff0c\u6865\u63a5\u7248\u672c\u4e0a\u6709\u51e0\u4e2a\u4ee3\u7406\uff0cKIP-500\u53d1\u5e03\u540e\u6709\u51e0\u4e2a\u4ee3\u7406\u3002\u7ba1\u5236\u5458\u5c06\u59cb\u7ec8\u662fKIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u3002\u5728\u8fd9\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u4ee3\u7406\u4e0d\u80fd\u4f9d\u8d56\u76f4\u63a5\u4fee\u6539ZooKeeper\u6765\u5ba3\u5e03\u4ed6\u4eec\u6b63\u5728\u8fdb\u884c\u7684\u66f4\u6539(\u4f8b\u5982\u914d\u7f6e\u66f4\u6539\u6216ACL\u66f4\u6539)\u3002KIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u4e0d\u4f1a\u6536\u5230\u8fd9\u6837\u7684\u901a\u77e5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u76d1\u542c\u52a8\u7269\u56ed\u9972\u517b\u5458\u3002\u53ea\u6709\u63a7\u5236\u5668\u4ecd\u5728\u4e0eZooKeeper\u4ea4\u4e92\uff0c\u5c06\u5176\u66f4\u6539\u955c\u50cf\u5230ZooKeeper\u3002\n\u56e0\u6b64\uff0c\u5728\u6865\u53d1\u5e03\u4e2d\uff0c\u9664\u63a7\u5236\u5668\u4e4b\u5916\u7684\u6240\u6709\u4ee3\u7406\u90fd\u5fc5\u987b\u5c06ZooKeeper\u89c6\u4e3a\u53ea\u8bfb(\u9664\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u9650\u7684\u4f8b\u5916)\u3002\n\u5bf9\u4e8e\u50cfIncrementalAlterConfigs\u8fd9\u6837\u7684RPC\uff0c\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd\u8c03\u7528\u7531\u6d3b\u52a8\u63a7\u5236\u5668\u5904\u7406\u3002\u5bf9\u4e8e\u65b0\u5ba2\u6237\u6765\u8bf4\uff0c\u8fd9\u5f88\u5bb9\u6613-\u4ed6\u4eec\u53ea\u9700\u5c06\u547c\u53eb\u76f4\u63a5\u53d1\u9001\u5230\u90a3\u91cc\u5373\u53ef\u3002\u5bf9\u4e8e\u8f83\u8001\u7684\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5c06RPC\u53d1\u9001\u5230\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u4ee3\u7406\u4e0a\u8fd0\u884c\u7684\u91cd\u5b9a\u5411\u7cfb\u7edf\uff0c\u65e0\u8bba\u5b83\u4eec\u6700\u521d\u4f4d\u4e8e\u54ea\u4e2a\u4ee3\u7406\u4e0a\u3002\n\u5bf9\u4e8e\u6d89\u53ca\u4ee3\u7406\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u590d\u6742\u4ea4\u4e92\u7684RPC\uff0c\u6211\u4eec\u5c06\u9700\u8981\u521b\u5efa\u65b0\u7684\u63a7\u5236\u5668API\u3002\u4e00\u4e2a\u4f8b\u5b50\u662fKIP-497\uff0c\u5b83\u6307\u5b9a\u4e86\u4e00\u4e2a\u65b0\u7684AlterIsrRequest API\uff0c\u5141\u8bb8\u4ee3\u7406\u8bf7\u6c42\u66f4\u6539\u5206\u533a\u540c\u6b65\u526f\u672c(ISR)\u3002\n\u5c06\u5373\u5e2dZooKeeper API\u66ff\u6362\u4e3a\u6587\u6863\u9f50\u5168\u4e14\u53d7\u652f\u6301\u7684RPC\u4e0e\u5220\u9664\u5ba2\u6237\u7aefZooKeeper\u8bbf\u95ee\u5177\u6709\u8bb8\u591a\u76f8\u540c\u7684\u597d\u5904\u3002\u7ef4\u62a4\u8de8\u7248\u672c\u517c\u5bb9\u6027\u5c06\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u5bf9\u4e8eAlterIsrRequest\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u51cf\u5c11\u5411ZooKeeper\u5199\u5165\u666e\u901a\u64cd\u4f5c\u6240\u9700\u7684\u6b21\u6570\u4e5f\u4f1a\u5e26\u6765\u597d\u5904\u3002\nKafka\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u770b\u5230\u5b83\u7684\u67b6\u6784\u7684\u6f14\u53d8\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\u3002\u6b63\u5982KIP-500\u8fd9\u6837\u7684\u9879\u76ee\u6240\u8868\u660e\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u6f14\u53d8\u8fd8\u6ca1\u6709\u5b8c\u6210\u3002\u6211\u6700\u559c\u6b22KIP-500\u7684\u5730\u65b9\u662f\u5b83\u7b80\u5316\u4e86\u6574\u4e2a\u67b6\u6784-\u65e0\u8bba\u662f\u7ba1\u7406\u5458\u8fd8\u662f\u5f00\u53d1\u4eba\u5458\u3002\u5b83\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e8b\u4ef6\u65e5\u5fd7\u7684\u5f3a\u5927\u62bd\u8c61\u6765\u5904\u7406\u5143\u6570\u636e\u3002\u5b83\u5c06\u6700\u7ec8\u8bc1\u660e\u2026\u3002\u5361\u592b\u5361\u4e0d\u9700\u8981\u770b\u95e8\u4eba\u3002\n\u5982\u679c\u60a8\u5bf9Apache Kafka\u4e2d\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u79fb\u9664\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u57285\u670821\u65e5\u4e0a\u534810\uff1a00\u52a0\u5165\u6211\u4eec\u5728Confluent Community Slake#\u666e\u901a\u9891\u9053\u7684\u73b0\u573a\u95ee\u7b54\u3002PDT\u3002\u8981\u4e86\u89e3\u5176\u4ed6\u6b63\u5728\u8fdb\u884c\u7684\u4f7fKafka\u5177\u6709\u5f39\u6027\u53ef\u4f38\u7f29\u6027\u7684\u5de5\u4f5c\uff0c\u8bf7\u67e5\u770b\u8fd9\u7bc7\u5173\u4e8e\u201c\u53d8\u5f62\u5de5\u7a0b\u201d\u7684\u535a\u5ba2\u6587\u7ae0\u3002\nColin McCabe\u76ee\u524d\u5728Confluent\u5de5\u4f5c\uff0c\u4ee5\u63d0\u9ad8Apache Kafka\u7684\u6027\u80fd\u3001\u53ef\u4f38\u7f29\u6027\u548c\u901a\u7528\u6027\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u7814\u7a76\u8fc7ApacheHadoop\u00ae\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf(\u2122)\u3002\u79d1\u6797\u5728\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon University)\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u8ba1\u7b97\u673a\u5de5\u7a0b\uff0c\u4ed6\u559c\u6b22\u81ea\u5236\u5564\u9152\u548c\u6f5c\u6c34\u3002", "note_en": "Currently, Apache Kafka \u00ae uses Apache ZooKeeper\u2122 to store its metadata. Data such as the location of partitions and the configuration of topics are stored outside of Kafka itself, in a separate ZooKeeper cluster. In 2019, we outlined a  plan to break this dependency and bring metadata management into Kafka itself.\n So what is the problem with ZooKeeper? Actually, the problem is not with ZooKeeper itself but with the concept of external metadata management.\n Having two systems leads to a lot of duplication. Kafka, after all, is a replicated distributed log with a pub/sub API on top. ZooKeeper is a replicated distributed log with a filesystem API on top. Each has its own way of doing network communication, security, monitoring, and configuration. Having two systems roughly doubles the total complexity of the result for the operator. This leads to an unnecessarily steep learning curve and increases the risk of some misconfiguration causing a security breach.\n Storing metadata externally is not very efficient. We run at least three additional Java processes, and sometimes more. In fact, we often see Kafka clusters with just as many ZooKeeper nodes as Kafka nodes! Additionally, the data in ZooKeeper also needs to be reflected on the Kafka controller, which leads to double caching.\n Worse still, storing metadata externally limits Kafka\u2019s scalability. When a Kafka cluster is starting up, or a new controller is being elected, the controller must load the full state of the cluster from ZooKeeper. As the amount of metadata grows, so does the length of this loading process. This limits the number of partitions that Kafka can store.\n Finally, storing metadata externally opens up the possibility of the controller\u2019s in-memory state becoming de-synchronized from the external state. The controller\u2019s view of liveness\u2014which is in the cluster\u2014can also diverge from ZooKeeper\u2019s view.\n   KIP-500 outlines a better way of handling metadata in Kafka. You can think of this as \u201cKafka on Kafka,\u201d since it involves storing Kafka\u2019s metadata in Kafka itself rather than in an external system such as ZooKeeper.\n In the post-KIP-500 world, metadata will be stored in a partition inside Kafka rather than in ZooKeeper. The controller will be the leader of this partition. There will be no external metadata system to configure and manage, just Kafka itself.\n We will treat metadata as a log. Brokers that need the latest updates can read only the tail of the log. This is similar to how consumers that need the latest log entries only need to read the very end of the log, not the entire log. Brokers will also be able to persist their metadata caches across process restarts.\n  A Kafka cluster elects a controller node to manage partition leaders and cluster metadata. The more partitions and metadata we have, the more important controller scalability becomes. We would like to minimize the number of operations that require a time linearly proportional to the number of topics or partitions.\n One such operation is controller failover. Currently, when Kafka elects a new controller, it needs to load the full cluster state before proceeding. As the amount of cluster metadata grows, this process takes longer and longer.\n In contrast, in the post-KIP-500 world, there will be several standby controllers that are ready to take over whenever the active controller goes away. These standby controllers are simply the other nodes in the Raft quorum of the metadata partition. This design ensures that we never need to go through a lengthy loading process when a new controller is elected.\n KIP-500 will speed up topic creation and deletion. Currently, when a topic is created or deleted, the controller must reload the full list of all topic names in the cluster from ZooKeeper. This is necessary because while ZooKeeper notifies us when the set of topics in the cluster has changed, it doesn\u2019t tell us exactly which topics were added or removed. In contrast, creating or deleting a topic in the post-KIP-500 world will simply involve creating a new entry in the metadata partition, which is an O(1) operation.\n Metadata scalability is a key part of scaling Kafka in the future. We expect that a single Kafka cluster will eventually be able to support a million partitions or more.\n    Several administrative tools shipped as part of the Kafka release still allow direct communication with ZooKeeper. Worse still, there are still one or two operations that can\u2019t be done except through this direct ZooKeeper communication.\n We have been working hard to close these gaps. Soon, there will be a public Kafka API for every operation that previously required direct ZooKeeper access. We will also disable or remove the unnecessary  --zookeeper flags in the next major release of Kafka.\n  In the post-KIP-500 world, the Kafka controller will store its metadata in a Kafka partition rather than in ZooKeeper. However, because the controller depends on this partition, the partition itself cannot depend on the controller for things like leader election. Instead, the nodes that manage this partition must implement a self-managed Raft quorum.\n KIP-595: A Raft Protocol for the Metadata Quorum outlines how we will adapt the Raft protocol to Kafka so that it really feels like a native part of the system. This will involve changing the push-based model described in the  Raft paper to a pull-based model, which is consistent with traditional Kafka replication. Rather than pushing out data to other nodes, the other nodes will connect to them. Similarly, we will use terminology consistent with Kafka rather than the original Raft paper\u2014\u201depochs\u201d instead of \u201cterms,\u201d and so forth.\n The initial implementation will be focused on supporting the metadata partition. It will not support the full range of operations that would be needed to convert regular partitions over to Raft. However, this is a topic we may return to in the future.\n  The most exciting part of this project, of course, is the ability to run without ZooKeeper, in \u201cKIP-500 mode.\u201d When Kafka is run in this mode, we will use a Raft quorum to store our metadata rather than ZooKeeper.\n Initially, KIP-500 mode will be experimental. Most users will continue to use \u201clegacy mode,\u201d in which ZooKeeper is still in use. Partly, this is because KIP-500 mode will not support all possible features at first. Another reason is because we want to gain confidence in KIP-500 mode before making it the default. Finally, we will need time to perfect the upgrade process from legacy mode to KIP-500 mode.\n Much of the work to enable KIP-500 mode will be in the controller. We must separate out the part of the controller that interacts with ZooKeeper from the part that implements more general-purpose logic such as replica set management.\n We need to define and implement more controller APIs to replace the communication mechanisms that currently involve ZooKeeper. One example of this is the new  AlterIsr API. This API allows a replica to notify the controller of a change in the in-sync replica set without using ZooKeeper.\n  KIP-500 introduced the concept of a  bridge release that can coexist with both pre- and post-KIP-500 versions of Kafka. Bridge releases are important because they enable zero-downtime upgrades to the post-ZooKeeper world. Users on an older version of Kafka simply upgrade to a bridge release. Then, they can perform a second upgrade to a release that lacks ZooKeeper. As its name suggests, the bridge release acts as a bridge into the new world.\n So how does this work? Consider a cluster that is in a partially upgraded state, with several brokers on the bridge release and several brokers on a post-KIP-500 release. The controller will always be a post-KIP-500 broker. In this cluster, brokers cannot rely on directly modifying ZooKeeper to announce changes they are making (such as a configuration change or an ACL change). The post-KIP-500 brokers would not receive such notifications because they are not listening on ZooKeeper. Only the controller is still interacting with ZooKeeper, by mirroring its changes to ZooKeeper.\n Therefore, in the bridge release, all the brokers except the controller must treat ZooKeeper as read only (with some very limited exceptions).\n For RPCs like  IncrementalAlterConfigs, we simply need to ensure that the call is processed by the active controller. This is easy for new clients\u2014they can simply send the calls there directly. For older clients, we need a redirection system that will run on the brokers that send the RPCs to the active controller, no matter which broker they initially end up on.\n For RPCs that involve a complex interaction between the broker and the controller, we will need to create new controller APIs. One example is  KIP-497, which specifies a new  AlterIsrRequest API that allows brokers to request changes to partition in-sync replicas (ISRs).\n Replacing ad hoc ZooKeeper APIs with well-documented and supported RPCs has many of the same benefits as removing client-side ZooKeeper access did. Maintaining cross-version compatibility will be easier. For the special case of  AlterIsrRequest, there will also be benefits to reducing the number of writes to ZooKeeper that a common operation requires.\n  Kafka is one of the most active Apache projects. It has been amazing to see the evolution in its architecture over the last few years. That evolution is not done yet, as projects like KIP-500 show. What I like most about KIP-500 is that it\u2019s a simplification to the overall architecture\u2014for administrators and developers alike. It will let us use the powerful abstraction of the event log for metadata handling. And it will finally prove that\u2026Kafka needs no keeper.\n If you have any questions about ZooKeeper removal in Apache Kafka,  join our live Q&amp;A in the Confluent Community Slack #general channel on May 21st at 10:00 a.m. PDT. To learn about other work that is happening to make Kafka  elastically scalable, check out this  blog post on Project Metamorphosis.\n Colin McCabe currently works for Confluent to improve the performance, scalability, and general awesomeness of Apache Kafka. Previously, he worked on the Apache\u2122 Hadoop\u00ae Distributed Filesystem. Colin studied computer science and computer engineering at Carnegie Mellon University, and he enjoys homebrewing and scuba diving.", "posttime": "2020-05-17 06:33:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u9664,removing,zookeeper", "title": "\u5361\u592b\u5361\u6d88\u9664\u5bf9ZooKeeper\u7684\u4f9d\u8d56", "title_en": "Kafka Removing Zookeeper Dependency", "transed": 1, "url": "https://www.confluent.io/blog/removing-zookeeper-dependency-in-kafka/", "via": "", "real_tags": ["\u6d88\u9664", "removing", "zookeeper"]}, {"category": "", "categoryclass": "", "imagename": "9dc781bbef801118e96c6cbf0331c472.jpeg", "infoid": 1002448, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Chrome Galvanizer\u662f\u4e00\u6b3e\u751f\u6210Chrome\u4f01\u4e1a\u7b56\u7565\u7684\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u7528\u6237\u52a0\u5f3a\u6d4f\u89c8\u5668\u5b89\u5168\u6027\u3002\u76ee\u524d\uff0c\u4e3b\u8981\u652f\u6301\u751f\u6210\u7b56\u7565\uff0c\u4ee5\u9650\u5236\u6765\u81ea\u660e\u786e\u6807\u8bb0\u4e3a\u654f\u611f\u7684\u7ad9\u70b9(\u4f8b\u5982\uff0c\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u3001\u94f6\u884c\u3001\u52a0\u5bc6\u6743\u9650\u548c\u5176\u4ed6\u7ad9\u70b9)\u7684\u6269\u5c55\u8bbf\u95ee\u3002\u8fd9\u5141\u8bb8\u60a8\u963b\u6b62\u6269\u5c55\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5b9a\u7684\u7ad9\u70b9\uff0c\u5373\u4f7f\u60a8\u5728\u7b2c\u4e00\u6b21\u5b89\u88c5\u5b83\u4eec\u65f6\u5df2\u7ecf\u6388\u4e88\u4e86\u8bbf\u95ee\u5b83\u4eec\u7684\u6743\u9650\u3002\n\u8fd9\u53ef\u4ee5\u9632\u6b62\u901a\u8fc7\u53cd\u5411\u66f4\u65b0\u52ab\u6301\u7684\u6269\u5c55\uff0c\u4ee5\u53ca\u7531\u4e8e\u5176\u4ee3\u7801\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\u800c\u88ab\u5229\u7528\u7684\u6269\u5c55\u3002\n\u524d\u4e00\u7c7b\u653b\u51fb\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662fmega Chrome\u6269\u5c55\u88ab\u9ed1\u5ba2\u653b\u51fb\u3002\u57fa\u672c\u4e0a\uff0c\u53d1\u5e03\u5de8\u578b\u6269\u5c55\u7684\u8d26\u53f7\u5f88\u53ef\u80fd\u662f\u88ab\u7f51\u7edc\u9493\u9c7c\u7684\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5012\u9000\u7684\u6269\u5c55\u66f4\u65b0\u88ab\u63a8\u7ed9\u4e86\u6240\u6709\u6269\u5c55\u7528\u6237(\u6570\u767e\u4e07)\u3002\u6839\u636eMega&#39\uff1b\u7684\u58f0\u660e\uff0c\u8be5\u6269\u5c55\u540d\u8bb0\u5f55\u5e76\u7a83\u53d6\u4e86\u201c\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com(\u7528\u4e8e\u7f51\u5e97\u767b\u5f55)\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7b49\u7f51\u7ad9\u7684\u51ed\u8bc1\u3002\u201d\n\u4f7f\u7528Chrome Galvanizer\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u6216\u6240\u6709\u6269\u5c55\u65e0\u6cd5\u518d\u8bbf\u95ee\u7684\u7279\u5b9a\u7ad9\u70b9\u6765\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u6b64\u7c7b\u653b\u51fb\u3002\u5bf9\u4e8e\u8d85\u7ea7\u7528\u6237\u6765\u8bf4\uff0c\u5982\u679c\u7528\u6237\u521b\u5efa\u4e86\u4e00\u4e2a\u9650\u5236\u8d85\u7ea7\u6269\u5c55\u8bbf\u95ee\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u514d\u53d7\u653b\u51fb\u3002\n\u60a8\u751a\u81f3\u53ef\u4ee5\u914d\u7f6e\u53ea\u5141\u8bb8\u6269\u5c55\u8bbf\u95ee\u7279\u5b9a\u7ad9\u70b9\u767d\u540d\u5355\u7684\u7b56\u7565\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5c06\u654f\u611f\u7ad9\u70b9\u5217\u5165\u9ed1\u540d\u5355\u3002\u5982\u679c\u60a8\u60f3\u8981\u5c06\u6269\u5c55\u7528\u4e8e\u4e00\u7ec4\u7ad9\u70b9\uff0c\u800c\u4e0d\u662fWeb\u7684\u5176\u4f59\u90e8\u5206\uff0c\u5219\u6b64\u529f\u80fd\u975e\u5e38\u6709\u7528\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5206\u5c42\u8fd9\u4e9b\u653f\u7b56\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002", "note_en": "Chrome Galvanizer is a tool to generate Chrome enterprise policies to help users harden their browser security. Currently, the main support is for generating policies to restrict extension access from sites explicitly marked as sensitive (e.g. your email, bank, cryptocurency, and other sites). This allows you to prevent extensions from accessing these specific sites even if you&#39;ve already granted them permission to do so when first installing them.\n  This protects from hijacked extensions with backdoored updates and against extensions that have been  exploited due to a security vulnerability in their code.\n One good example of the former type of attack this protects against is the case of the  MEGA Chrome extension getting hacked. Basically, the account which publishes the MEGA extension likely was phished, the result being that a backdoored extension update was pushed out to all extension users (millions). Per MEGA&#39;s statement the extension keylogged and stole  \u201ccredentials for sites including amazon.com, live.com, github.com, google.com (for webstore login), myetherwallet.com, mymonero.com, [and] idex.market.\u201d\n Using Chrome Galvanizer, you can protect yourself from attacks like this by specifying specific sites that one or all of your extensions can no longer access. For the MEGA case, if users had created a policy restricting access for the MEGA extension to access  amazon.com,  live.com,  github.com,  google.com,  myetherwallet.com,  mymonero.com, and  idex.market then they&#39;d be protected from the attack.\n You can even configure policies that only allow an extension to access a specific whitelist of sites instead of just blacklisting sensitive ones. This is useful if you have an extension you want to use for a set of sites but not the rest of the web. Of course, you can also layer these policies to get even better results.", "posttime": "2020-05-17 06:17:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "chrome,\u6f0f\u6d1e,\u540e\u95e8,harden,\u6269\u5c55", "title": "ChromeGalvanizer-\u9488\u5bf9\u6269\u5c55\u540e\u95e8\u548c\u6f0f\u6d1e\u5f3a\u5316\u60a8\u7684\u6d4f\u89c8\u5668", "title_en": "ChromeGalvanizer \u2013 Harden your browser against extension backdoors and exploits", "transed": 1, "url": "https://github.com/mandatoryprogrammer/ChromeGalvanizer", "via": "", "real_tags": ["chrome", "\u6f0f\u6d1e", "\u540e\u95e8", "harden", "\u6269\u5c55"]}, {"category": "", "categoryclass": "", "imagename": "2cae259de697d9f6b726d4240e81162b.jpg", "infoid": 1002447, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6bc1\u706d\u6c38\u6052\u201d\u6210\u4e3a\u6700\u65b0\u4e00\u6b3e\u4f7f\u7528\u5185\u6838\u7ea7\u9a71\u52a8\u7a0b\u5e8f\u6765\u5e2e\u52a9\u68c0\u6d4b\u591a\u4eba\u6bd4\u8d5b\u4e2d\u7684\u4f5c\u5f0a\u8005\u7684\u6e38\u620f\u3002\n\u8fd9\u6b3e\u6e38\u620f\u7684\u65b0\u9a71\u52a8\u7a0b\u5e8f\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u6765\u81ea\u5fb7\u52aa\u6c83\u7684\u6bcd\u516c\u53f8\u7231\u8fea\u5fb7(Irdeto)\uff0c\u8be5\u516c\u53f8\u66fe\u4ee5\u8fd1\u4e4e\u65e0\u4e0e\u4f26\u6bd4\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\uff0c\u73b0\u5728\u5219\u4ee5\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6709\u6548\u4f46\u7ecf\u5e38\u88ab\u7834\u89e3\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\u3002\u4f46\u65b0\u7684Denuvo\u53cd\u4f5c\u5f0a\u4fdd\u62a4\u4e0e\u8be5\u516c\u53f8\u7684Denuvo\u9632\u7be1\u6539\u6280\u672f\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u540e\u8005\u4f7f\u7528\u4ee3\u7801\u6df7\u6dc6\u6765\u963b\u6b62\u7834\u89e3\u7a0b\u5e8f(\u8fd9\u9879\u6280\u672f\u5728\u63a8\u51fa\u540e\u4e0d\u4e45\u5c31\u5df2\u7ecf\u5728Doom Etal\u4e0a\u8ba8\u8bba\u8fc7\u4e86)\u3002\nIrdeto\u5728\u4e00\u7bc7\u5ba3\u5e03\u63a8\u51fa\u8be5\u5de5\u5177\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u5728\u4e3a\u671f\u4e24\u5e74\u7684\u63d0\u524d\u8bbf\u95ee\u8ba1\u5212\u4e2d\uff0c\u65b0\u7684Denuvo\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u5728\u65e0\u6570\u4e2a\u5c0f\u65f6\u548c\u6570\u767e\u4e07\u6b21\u6e38\u620f\u4f1a\u8bdd\u4e4b\u540e\uff0c\u9762\u5411\u672b\u65e5\u6c38\u6052\u7684\u73a9\u5bb6\u63a8\u51fa\u3002\u4f46\u4e0eValorant\u7684\u7c7b\u4f3cVanguard\u7cfb\u7edf\u4e0d\u540c\u7684\u662f\uff0cDenuvo Anti-cheat Driver\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\uff0c\u8ba9\u73a9\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7cfb\u7edf\u4e0a\u76d1\u63a7\u5b83\u7684\u4f7f\u7528\u60c5\u51b5\u3002\n\u4e3a\u4e86\u6d88\u9664\u4efb\u4f55\u6f5c\u5728\u7684\u6050\u60e7\uff0c\u7231\u8fea\u5fb7\u5199\u9053\uff0cDenuvo Anti-cheat\u53ea\u5728\u6e38\u620f\u6d3b\u8dc3\u65f6\u8fd0\u884c\uff0c\u8d1d\u585e\u65af\u8fbe\u7684\u8865\u4e01\u7b14\u8bb0\u4e2d\u4e5f\u540c\u6837\u5199\u7740\uff0c\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f7f\u7528\u5728\u6e38\u620f\u542f\u52a8\u65f6\u5f00\u59cb\uff0c\u5f53\u6e38\u620f\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u505c\u6b62\u65f6\u505c\u6b62\u3002\u8fd9\u4e0eValorant\u7684\u5148\u950b\u7cfb\u7edf\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u540e\u8005\u9700\u8981\u4ece\u7cfb\u7edf\u542f\u52a8\u65f6\u52a0\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u76d1\u63a7\u7cfb\u7edf\u72b6\u6001\u7684\u5b8c\u6574\u6027\u3002\n\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u4ea7\u54c1\u8d1f\u8d23\u4ebaMichail Greshishchev\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u544a\u8bc9Ars\uff0c\u5728\u591a\u4eba\u6bd4\u8d5b\u4e4b\u5916\u4e0d\u4f1a\u8fdb\u884c\u76d1\u63a7\u6216\u6570\u636e\u6536\u96c6\u3002\u5fb7\u52aa\u6c83\u4e0d\u4f1a\u8bd5\u56fe\u7ef4\u62a4\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002\u5b83\u4e0d\u4f1a\u963b\u6b62\u4f5c\u5f0a\u3001\u6e38\u620fmod\u6216\u5f00\u53d1\u5de5\u5177\u3002\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u53ea\u68c0\u6d4b\u4f5c\u5f0a\u3002&#34\uff1b\nGreshishchev\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u7684\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u83b7\u5f97\u4e86\u77e5\u540d\u5185\u6838\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7684\u8ba4\u8bc1\uff0c\u5b8c\u6210\u4e86\u5b9a\u671f\u7684\u767d\u76d2\u548c\u9ed1\u76d2\u5ba1\u8ba1\uff0c\u5e76\u63a5\u53d7\u4e86\u72ec\u7acb\u4f5c\u5f0a\u5f00\u53d1\u8005\u7684\u6e17\u900f\u6d4b\u8bd5\u3002\u4ed6\u8bf4\uff0c\u7231\u8fea\u751f\u8fd8\u8bbe\u7acb\u4e86\u4e00\u4e2a\u6f0f\u6d1e\u8d4f\u91d1\u8ba1\u5212\uff0c\u4ee5\u53d1\u73b0\u4ed6\u4eec\u53ef\u80fd\u9057\u6f0f\u7684\u4efb\u4f55\u6f0f\u6d1e\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u7531\u4e8eDenuvo Anti-cheat\u7684\u8bbe\u8ba1\uff0c\u53f8\u673a\u6bd4\u5176\u4ed6\u53ef\u80fd\u66f4\u5bb9\u6613\u63a5\u89e6\u4e92\u8054\u7f51\u7684\u53f8\u673a\u66f4\u5b89\u5168\u3002\u4e0e\u73b0\u6709\u7684\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\u4e0d\u540c\uff0cDenuvo Anti-cheat\u4e0d\u4f1a\u4ece\u7f51\u7edc\u4e0a\u6d41\u5f0f\u4f20\u8f93\u5916\u58f3\u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u53d7\u5230\u653b\u51fb\uff0c\u653b\u51fb\u8005\u4e0d\u80fd\u5411\u6e38\u620f\u8005\u7684\u673a\u5668\u53d1\u9001\u4efb\u610f\u6076\u610f\u8f6f\u4ef6\u3002\n\u4ed6\u7ee7\u7eed\u8bf4\uff0c\u8fd9\u4e9b\u6e38\u620f\u673a\u5df2\u7ecf\u6709\u4e86\u4e00\u5927\u5806\u4e0d\u5408\u683c\u7684(\u5b89\u5168\u65b9\u9762\u7684)\u7ba1\u7406\u670d\u52a1\uff0c\u800c\u4e14\u6709\u6d3b\u8dc3\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002\u6765\u81ea\u9f20\u6807\u548c\u952e\u76d8\u4f9b\u5e94\u5546\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001\u7167\u660e\u548c\u8d85\u9891\u670d\u52a1\u7b49\u3002\u5982\u679c\u653b\u51fb\u8005\u771f\u7684\u60f3\u5371\u5bb3\u6e38\u620f\u8005\u7684\u5b89\u5168\uff0c\u4ed6\u4eec\u4f1a\u901a\u8fc7\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u7684\u9632\u7be1\u6539\u8f6f\u4ef6\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u5982\u679c\u5728\u91ce\u5916\u53d1\u73b0\u4e86\u9a71\u52a8\u7a0b\u5e8f\u6f0f\u6d1e\uff0c\u53ef\u64a4\u9500\u7684\u8bc1\u4e66\u548c\u81ea\u52a8\u8fc7\u671f\u7684\u7f51\u7edc\u5bc6\u94a5\u53ef\u4ee5\u7528\u4f5c\u627c\u6740\u5f00\u5173\u6765\u5207\u65ad\u5b83\u4eec\u3002\u6ca1\u6709\u5b89\u5168\u4e13\u5bb6\u53ef\u4ee5\u58f0\u79f0\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e07\u65e0\u4e00\u5931\u7684\uff0c\u4f46\u6211\u4eec\u7684\u6e17\u900f\u6d4b\u8bd5\u3001\u8ba4\u8bc1\u548c\u5b89\u5168\u5ba1\u8ba1\u8fdc\u8fdc\u9ad8\u4e8e\u4efb\u4f55\u5408\u7406\u7684\u6807\u51c6\uff0c\u4ed6\u8bf4\u3002\n\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u5728\u591a\u4eba\u6e38\u620f\u53cd\u4f5c\u5f0a\u5de5\u5177\u4e2d\u7684\u4f7f\u7528\u5b9e\u9645\u4e0a\u76f8\u5f53\u666e\u904d\uff0c\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u53ef\u4ee5\u68c0\u6d4b\u5e76\u963b\u6b62\u8bd5\u56fe\u4fee\u6539\u6e38\u620f\u4ee3\u7801\u7684\u4f4e\u6743\u9650\u7528\u6237\u6a21\u5f0f\u5de5\u5177\u3002\u867d\u7136\u4f5c\u5f0a\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ee3\u7801\u7b7e\u540d\u6f0f\u6d1e\u6765\u5b89\u88c5\u4ed6\u4eec\u81ea\u5df1\u7684\u5185\u6838\u7ea7\u4f5c\u5f0a\u5de5\u5177\u6765\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u66f4\u52a0\u56f0\u96be\u3002\n\u4ec5\u5728\u6e38\u620f\u8fd0\u884c\u65f6\u52a0\u8f7d\u5185\u6838\u6a21\u5f0f\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5c31\u50cfDenuvo\u6240\u505a\u7684\u90a3\u6837\uff0c\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u4e5f\u4e0e\u4ece\u542f\u52a8\u65f6\u8fd0\u884crootkit\u98ce\u683c\u7684\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6b63\u5982\u72ec\u7acb\u5b89\u5168\u7814\u7a76\u5458\u8428\u5229\u59c6\u00b7\u62c9\u5e0c\u5fb7(Saleem Rashid)\u5728\u8c08\u5230Valorant\u7684\u5148\u950b\u5b89\u5168\u9a71\u52a8\u7a0b\u5e8f\u65f6\u544a\u8bc9Ars\u7684\u90a3\u6837\uff0c\u540e\u8005\u4e3a\u5728\u7528\u6237\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7684\u7cfb\u7edf\u7ea7\u6f0f\u6d1e\u5e26\u6765\u4e86\u66f4\u5927\u7684\u98ce\u9669\uff0c\u521b\u9020\u4e86\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u597d\u5904\u7684\u5927\u653b\u51fb\u9762\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u672b\u65e5\u6c38\u6052\u793e\u533a\u7684\u4e00\u4e9b\u6210\u5458\u5bf9Denuvo\u53cd\u4f5c\u5f0a\u5de5\u5177\u7684\u63a8\u51fa\u65b9\u5f0f\uff0c\u6216\u8005\u4ed6\u4eec\u8ba4\u4e3a\u5b83\u7ed9\u4ed6\u4eec\u7684\u7cfb\u7edf\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\u611f\u5230\u4e0d\u6ee1\u3002\nReddit\u7528\u6237extant_dinero\u5728Doom subreddit\u4e0a\u7684\u70ed\u95e8\u5e16\u5b50\u4e2d\u5199\u9053\uff0c\u4efb\u4f55\u8f6f\u4ef6\uff0c\u7279\u522b\u662f\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\uff0c\u90fd\u4e0d\u5e94\u8be5\u62e5\u6709\u5bf9\u4f60\u7684\u7cfb\u7edf\u7684\u5185\u6838\u7ea7\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u679c\u662f\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u8d2d\u4e70\u4e4b\u524d\u5f97\u5230\u901a\u77e5\u3002\u5982\u679c\u6211\u77e5\u9053\u5b83\u4f1a\u88ab\u6dfb\u52a0\uff0c\u6211\u5c31\u4e0d\u4f1a\u4e70\u5b83\u4e86\u3002\u4ec5\u4ec5\u56e0\u4e3a\u5176\u4ed6\u8f6f\u4ef6\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u5c31\u662f\u6b63\u786e\u7684\u3002\n\u4f46\u662fGreshishchev\u544a\u8bc9Ars\uff0c\u8fd9\u6837\u7684\u6050\u60e7\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u4ed6\u8bf4\uff0cDenuvo Anti-cheat\u88ab\u8bbe\u8ba1\u6210\u4e0eNVIDIA\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u6216Steam\u7684\u5ba2\u6237\u670d\u52a1\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e0e\u8fc7\u53bb\u7684\u53cd\u4f5c\u5f0a\u4e0d\u540c\uff0c\u73b0\u5728\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\u6302\u94a9\uff0c\u4e0d\u9700\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5f00\u59cb\uff0c\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\u3002\n\u5bb3\u6015\u672a\u77e5\u662f\u4eba\u7c7b\u7684\u672c\u6027\uff0c\u6211\u4eec\u518d\u591a\u7684\u6280\u672f\u4e3b\u5f20\u4e5f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u4fe1\u4efb\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u5efa\u7acb\u8d77\u6765\u7684\uff0c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5f53\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u516c\u53f8\u5728\u60a8\u6700\u559c\u6b22\u7684\u6e38\u620f\u4e2d\u7981\u8d5b\u4e00\u540d\u73a9\u5bb6\u65f6\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u60a8\u7684\u4fe1\u4efb\u3002", "note_en": "Doom Eternal has become the latest game to use a kernel-level driver to aid in detecting cheaters in multiplayer matches.\n The game&#39;s new driver and anti-cheat tool come courtesy of  Denuvo\u00a0parent Irdeto, a company  once known for nearly unbeatable piracy protection and now known for  somewhat effective but often cracked piracy protection. But the new Denuvo Anti-Cheat protection is completely separate from the company&#39;s Denuvo Anti-Tamper technology, which uses code obfuscation to hinder crackers (and which was  already mooted for  Doom Eternal anyway shortly after launch).\n The new Denuvo\u00a0Anti-Cheat tool rolls out to  Doom Eternal players after &#34;countless hours and millions of gameplay sessions&#34; during a two-year early access program, Irdeto  said in a blog post announcing its introduction. But unlike   Valorant&#39;s similar Vanguard system, the Denuvo Anti-Cheat driver &#34;doesn\u2019t have annoying tray icons or splash screens&#34; letting players monitor its use on their system.\n   To assuage any potential fears, Irdeto writes that Denuvo Anti-Cheat only runs when the game is active, and  Bethesda&#39;s patch notes similarly say that &#34;use of the kernel-mode driver starts when the game launches and stops when the game stops for any reason.&#34; That&#39;s a major difference from  Valorant&#39;s Vanguard system, which  requires the driver to be loaded from system startup in order to &#34;monitor system state for integrity.&#34;\n &#34;No monitoring or data collection happens outside of multiplayer matches,&#34; Denuvo Anti-Cheat Product Owner Michail Greshishchev told Ars via email. &#34;Denuvo does not attempt to maintain the integrity of the system. It does not block cheats, game mods, or developer tools. Denuvo Anti-Cheat only detects cheats.&#34;\n  Greshishchev added that the company&#39;s driver has received &#34;certification from renown[ed] kernel security researchers, completed regular whitebox and blackbox audits, and was penetration-tested by independent cheat developers.&#34; He said\u00a0Irdeto is also setting up a bug bounty program to discover any flaws they might have missed.\n And because of Denuvo Anti-Cheat&#39;s design, Greshishchev says the driver is more secure than others that might have more exposure to the Internet.\u00a0&#34;Unlike existing anti-cheats, Denuvo Anti-Cheat does not stream shell code from the Web,&#34; Greshishchev told Ars. &#34;This means that, if compromised, attackers can&#39;t send down arbitrary malware to gamers&#39; machines.\n &#34;These same gaming machines already have a sea of subpar (security-wise) administrative services with active Internet connections,&#34; he continued. &#34;Drivers from mouse and keyboard vendors, lighting and overclocking services, etc. If attackers really wanted to compromise gamers&#39; machines, they would go through them\u2014not through the world&#39;s strongest anti-tamper software.&#34;\n If a driver exploit is discovered in the wild, Greshishchev told Ars that revocable certificates and self-expiring network keys can be used as &#34;kill switches&#34; to cut them off.\u00a0&#34;No security expert can claim their solution is infallible, but our penetration testing, certification, and security auditing is significantly higher than any reasonable standard,&#34; he said.\n  The use of kernel-mode drivers is actually pretty common in multiplayer game anti-cheat tools, helping to ensure that lower-privileged &#34;user-mode&#34; tools that try to modify the game code can be detected and stopped. While cheaters can still get around this by using code-signing exploits to install their own kernel-level cheat tools, the process is more difficult.\n Loading a kernel-mode anti-cheat driver only when a game is running, as Denuvo does, is also very different from running a  rootkit-style\u00a0anti-cheat driver from startup, from a security perspective. The latter introduces much more exposure for system-level exploits that can run without the user&#39;s knowledge, creating &#34;a large attack surface for little benefit,&#34; as independent security researcher Saleem Rashid told Ars  regarding  Valorant&#39;s Vanguard security driver.\n Still, some members of the  Doom Eternal community are not happy about the way the Denuvo Anti-Cheat tool was rolled out, or with the security risks they feel it creates on their systems.\n &#34;No piece of software, especially an anti-cheat, should have kernel-level access to your system and if it is we should have been informed before purchasing it,&#34; Reddit user extant_dinero wrote in  a popular thread on the  Doom subreddit urging people to delete the game. &#34;I would not have purchased it had I known it would be added. Just because other pieces of software do it doesn&#39;t make it right.&#34;\n But Greshishchev tells Ars such fear is misplaced. Denuvo Anti-Cheat is &#34;designed to be no different than Nvidia&#39;s graphic drivers or Steam&#39;s Client Service,&#34; he said. &#34;Unlike anti-cheats of the past, there are no filesystem hooks, no requirement to start with the OS, no annoying tray icons or splash screens.&#34;\n &#34;It&#39;s human nature to have a fear of the unknown, and no amount of technical claims by us could address that. Trust is built up over time, and we think that when Denuvo Anti-Cheat bans a player in your favorite game, we will gain your trust.&#34;", "posttime": "2020-05-17 05:47:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,denuvo,eternal,\u6e38\u620f", "title": "\u201c\u672b\u65e5\u6c38\u6052\u201d\u4f7f\u7528\u7684\u662fDenuvo\u7684\u65b0\u5185\u6838\u7ea7\u53cd\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f", "title_en": "'Doom Eternal' Is Using Denuvo's New Kernel-Level Anti-Cheat Driver", "transed": 1, "url": "https://arstechnica.com/gaming/2020/05/doom-eternal-anti-cheat-kernel-driver-is-safer-than-others-denuvo-says/", "via": "", "real_tags": ["\u7a0b\u5e8f", "denuvo", "eternal", "\u6e38\u620f"]}]