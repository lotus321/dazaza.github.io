[{"category": "", "categoryclass": "", "imagename": "97f94e3fad2838f563ba48ec50ae45ed.jpg", "infoid": 1005928, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u83b7\u53d6\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u6240\u6709\u6700\u65b0\u65b0\u95fb\uff0c\u5e76\u6bcf\u5929\u5c06\u66f4\u591a\u4fe1\u606f\u53d1\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u6ce8\u518c\u3002\n\u636e\u5f53\u5730\u642c\u5bb6\u516c\u53f8\u79f0\uff0c\u53d7\u56fd\u5185\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u5f71\u54cd\u6700\u4e25\u91cd\u7684\u5927\u90fd\u5e02\u7ebd\u7ea6\u5e02\uff0c\u6b63\u5728\u4ee5\u524d\u6240\u672a\u6709\u7684\u901f\u5ea6\u5931\u53bb\u5c45\u6c11\u3002\n\u4f8b\u5982\uff0cRoadway Moving\u603b\u88c1\u7f57\u65af\u00b7\u8428\u76ae\u5c14(Ross Sapir)\u544a\u8bc9\u798f\u514b\u65af\u5546\u4e1a\u9891\u9053(Fox Business)\uff0c\u968f\u7740\u4ed6\u7684\u516c\u53f8\u5e94\u5bf9\u81ea2008\u5e74\u6210\u7acb\u4ee5\u6765\u6700\u7e41\u5fd9\u7684\u5b63\u8282\uff0c\u4eba\u4eec\u6b63\u5728\u642c\u79bb\u66fc\u54c8\u987f\uff0c\u6570\u91cf\u4e4b\u591a\u4ed6\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u3002\n\u201c\u8fd9\u592a\u75af\u72c2\u4e86\uff0c\u2026\u3002\u6211\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u8fd9\u6837\u7684\u589e\u957f\u3002\u201c\u8428\u76ae\u5c14\u8bf4\u3002\u201c\u5c31\u642c\u79bb\u8fd9\u5ea7\u57ce\u5e02\u800c\u8a00\uff0c(\u4e1a\u52a1\u91cf)\u662f\u5176\u4ed6\u4efb\u4f55\u5b63\u8282\u7684\u4e24\u500d\u6216\u4e09\u500d\u3002\u201d\n\u5728\u67d0\u4e9b\u65e5\u5b50\u91cc\uff0cRoadway\u7559\u4e0b\u7684\u67e5\u8be2\u589e\u52a0\u4e86200%\u3002\u5b83\u7684\u5ba2\u6237\u4e3b\u8981\u662f\u9ad8\u51c0\u503c\u4e2a\u4eba\uff0c\u901a\u5e38\u662f\u66fc\u54c8\u987f\u5bcc\u88d5\u5730\u533a25\u5c81\u81f345\u5c81\u7684\u4e13\u4e1a\u4eba\u58eb\u3002\nUnited Van Lines\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u00b7\u7f57\u6770\u65af(Marc Rogers)\u544a\u8bc9\u798f\u514b\u65af\u5546\u4e1a(Fox Business)\uff0c\u5927\u591a\u6570\u642c\u51fa\u66fc\u54c8\u987f\u7684\u5c45\u6c11(61%)\u7684\u6536\u5165\u8d85\u8fc710\u4e07\u7f8e\u5143\u3002\u90a3\u4e9b\u642c\u51fa\u53bb\u7684\u4eba\u4e5f\u5f80\u5f80\u5e74\u9f84\u66f4\u5927-64%\u7684\u4eba\u5e74\u9f84\u572855\u5c81\u6216\u4ee5\u4e0a-\u6216\u8005\u572825\u5c81\u523040\u5c81\u4e4b\u95f4(25%)\u3002\n\u201c\u5728\u2026\uff0c\u7ebd\u7ea6\u5e025\u6708\u4efd\u7684\u623f\u4ef7\u4e0a\u6da8\u5e45\u5ea6\u975e\u5e38\u5927\u3002\u8fd9\u4e9b\u90fd\u662f\u4eba\u4eec\u5bf9\u642c\u5bb6\u611f\u5174\u8da3\u7684\u7ebf\u7d22\u3002\u201c\u7f57\u6770\u65af\u8bf4\u3002\n\u6839\u636eUnited Van Lines\u5411\u798f\u514b\u65af\u5546\u4e1a\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u4e0e\u53bb\u5e74\u76f8\u6bd4\uff0c\u7ebd\u7ea6\u5e02\u573a\u5bf9\u642c\u5bb6\u7684\u5174\u8da3\u4e0a\u5347\u4e8640%\u3002\u8fd9\u4e9b\u6570\u5b57\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u540c\u671f\u5e73\u5747\u589e\u957f8%\u7684\u5168\u56fd\u8d8b\u52bf\u3002\n\u7ebd\u7ea6\u5e02\u642c\u5bb6\u516c\u53f8Oz Moving\u544a\u8bc9\u798f\u514b\u65af\u5546\u4e1a\u9891\u9053\uff0c\u867d\u7136\u5176\u603b\u5de5\u4f5c\u91cf\u4ece3\u6708\u52304\u6708\u4e0b\u964d\u4e8646%\uff0c\u4f46\u4ece3\u6708\u52305\u6708\uff0c\u642c\u79bb\u7ebd\u7ea6\u5e02\u7684\u4eba\u6570\u589e\u52a0\u4e8612%\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e0e\u53bb\u5e74\u76f8\u6bd4\uff0c4\u6708\u4efd\u7ebd\u7ea6\u5e02\u5185\u90e8\u7684\u642c\u5bb6\u4eba\u6570\u4e0b\u964d\u4e8647%\u3002\n\u4e0e\u5168\u56fd\u6570\u636e\u4e00\u81f4\uff0cSapir\u8868\u793a\uff0c\u4ed6\u5728\u4ed6\u7684\u516c\u53f8\u5728\u5168\u56fd\u5404\u5730\u670d\u52a1\u7684\u4efb\u4f55\u5176\u4ed6\u5e02\u573a\u90fd\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u63a5\u8fd1\u7ebd\u7ea6\u5e02\u6c34\u5e73\u7684\u6d3b\u52a8\u3002\n\u5bf9\u7ebd\u7ea6\u6765\u8bf4\uff0c\u574f\u6d88\u606f\u662f2020\u5e74\u6700\u7e41\u5fd9\u7684\u5b63\u8282\u53ef\u80fd\u8fd8\u6ca1\u6709\u5230\u6765\u3002\n\u6700\u521d\uff0c\u968f\u7740\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u6fc0\u589e\uff0c\u6050\u614c\u8feb\u4f7f\u4eba\u4eec\u79bb\u5f00\u66fc\u54c8\u987f\u3002\u8428\u76ae\u5c14\u8bf4\uff0c\u4ed6\u63a5\u5230\u4e86\u8981\u6c42\u7b2c\u4e8c\u5929\u670d\u52a1\u7684\u4eba\u6253\u6765\u7684\u75af\u72c2\u7535\u8bdd\u3002\u7136\u800c\uff0c\u73b0\u5728\u4ed6\u6b63\u5728\u4e0e\u90a3\u4e9b\u6709\u66f4\u6df1\u601d\u719f\u8651\u7684\u8ba1\u5212\u7684\u5ba2\u6237\u5408\u4f5c-\u4ed6\u8ba4\u4e3a\u8fd9\u4e9b\u5ba2\u6237\u4e0d\u4f1a\u56de\u5230\u57ce\u5e02\uff0c\u7279\u522b\u662f\u5982\u679c\u5b66\u6821\u4e0d\u91cd\u65b0\u5f00\u5b66\u7684\u8bdd\u3002\n\u7f8e\u56fd\u8054\u5408\u822a\u7a7a\u516c\u53f8(United Van Lines)\u8868\u793a\uff0c\u5927\u578b\u642c\u5bb6\u516c\u53f8\u6b63\u5728\u7b49\u5f85\u6570\u5343\u9879\u8ba1\u5212\uff0c\u9884\u8ba1\u4eca\u5e74\u7684\u201c\u65fa\u5b63\u201d\u5c06\u53d1\u751f\u57287\u6708\u81f39\u6708\u4e4b\u95f4\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u76845\u6708\u81f37\u6708\u3002\u7f57\u6770\u65af\u8bf4\uff0c\u6709\u5f88\u591a\u201c\u88ab\u538b\u6291\u7684\u9700\u6c42\u201d\u3002\nRoadway\u7684\u5f88\u5927\u4e00\u90e8\u5206\u5ba2\u6237\u6b63\u5728\u79bb\u5f00\u66fc\u54c8\u987f\u524d\u5f80\u4f5b\u7f57\u91cc\u8fbe\u6216\u5357\u65b9\u7684\u5176\u4ed6\u5730\u533a\u3002\n\u6765\u81ea\u8054\u5408\u9762\u5305\u8f66\u516c\u53f8\u7684\u6570\u636e\u8bc1\u5b9e\u4e86\u8fd9\u4e9b\u8d8b\u52bf\u3002\u7ebd\u7ea6\u5e02\u5c45\u6c11\u5bf9\u8fc8\u963f\u5bc6\u8868\u73b0\u51fa\u642c\u5bb6\u5174\u8da3\u7684\u9996\u9009\u76ee\u7684\u5730\u662f\u8fc8\u963f\u5bc6\uff0c\u5766\u5e15\u548c\u5965\u5170\u591a\u4e5f\u8fdb\u5165\u4e86\u524d\u5341\u540d-\u4e9a\u7279\u5170\u5927\u3001\u590f\u6d1b\u7279\u548c\u7f57\u5229-\u8fbe\u52d2\u59c6\u4e5f\u662f\u5982\u6b64\u3002\n\u8428\u76ae\u5c14\u8bf4\uff0c\u7ebd\u7ea6\u5e02\u9003\u4ea1\u8005\u4e2d\u5176\u4ed6\u53d7\u6b22\u8fce\u7684\u76ee\u7684\u5730\u5305\u62ec\u65b0\u6cfd\u897f\u5dde\u3001\u5eb7\u6d85\u72c4\u683c\u5dde\u548c\u5a01\u5f7b\u65af\u7279\u7684\u5468\u8fb9\u90ca\u533a\u3002\n\u7136\u800c\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u6b21\u6027\u7684\u4e3e\u52a8\u3002\u5728\u516c\u8def\u65b9\u9762\uff0c\u4e0e\u53bb\u5e74\u540c\u671f\u76f8\u6bd4\uff0c\u5e93\u5b58\u589e\u52a0\u4e86900%\u3002\u8428\u76ae\u5c14\u8bf4\uff0c\u8fd9\u4e9b\u4eba\u4f3c\u4e4e\u5bf9\u81ea\u5df1\u7684\u957f\u671f\u8ba1\u5212\u4e0d\u786e\u5b9a\uff0c\u53ef\u80fd\u6b63\u5728\u5c1d\u8bd5\u4e00\u4e2a\u65b0\u7684\u5730\u70b9\uff0c\u770b\u770b\u660e\u5e74\u5de6\u53f3\u66fc\u54c8\u987f\u7684\u60c5\u51b5\u4f1a\u5982\u4f55\u3002\n\u4e0a\u5468\uff0c\u5f53\u88ab\u95ee\u53ca\u5728\u7a0e\u6536\u66b4\u8dcc\u4e4b\u9645\uff0c\u7531\u4e8e\u62c5\u5fc3\u5c06\u5bcc\u4eba\u8d76\u51fa\u7ebd\u7ea6\u5e02\uff0c\u4ed6\u662f\u5426\u63d0\u51fa\u4e86\u5bf9\u5bcc\u4eba\u589e\u7a0e\u7684\u8ba1\u5212\u65f6\uff0c\u7ebd\u7ea6\u5e02\u5e02\u957f\u767d\u601d\u8c6a(Bill De Blasio)\u8868\u793a\uff0c\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u5dee\u5f02\uff0c\u5305\u62ec\u9636\u5c42\u5dee\u5f02\u3002\n\u767d\u601d\u8c6a\u8bf4\uff1a\u201c\u5373\u4f7f\u5728\u8fd9\u573a\u5371\u673a\u4e2d\uff0c\u5bcc\u4eba\u4e5f\u5728\u4e0d\u65ad\u53d8\u5f97\u66f4\u52a0\u5bcc\u6709\u3002\u201d\u201c\u6240\u4ee5\uff0c\u6211\u7edd\u5bf9\u76f8\u4fe1\u73b0\u5728\u662f\u8ba8\u8bba\u5bf9\u5bcc\u4eba\u589e\u7a0e\u7684\u516c\u5e73\u65f6\u673a\u3002\u201d\n\u7ebd\u7ea6\u5dde\u5dde\u957f\u5b89\u5fb7\u9c81\u00b7\u79d1\u83ab(Andrew Cuomo)\u8981\u6c42\u7acb\u6cd5\u8005\u53d6\u6d88\u5dde\u548c\u5730\u65b9\u7a0e\u6536\u51cf\u514d\u76841\u4e07\u7f8e\u5143\u4e0a\u9650\uff0c\u4ee5\u5e2e\u52a9\u5c45\u6c11\uff0c\u5e76\u53ef\u80fd\u9632\u6b62\u9ad8\u51c0\u503c\u4e2a\u4eba\u524d\u5f80\u7a0e\u6536\u8f83\u4f4e\u7684\u5dde\u3002", "note_en": "Get all the latest news on coronavirus and more delivered daily to your inbox.\u00a0\u00a0 Sign up here.\n  New York City, the metropolitan area hardest hit by the domestic  coronavirus outbreak, is losing residents at an unprecedented clip, according to local moving companies.\n Roadway Moving\u00a0President Ross Sapir, for example, told FOX Business that people are moving out of Manhattan in numbers he has \u201cnever seen before,\u201d as his company deals with its busiest season since its 2008 inception.\n \u201cIt\u2019s insane \u2026 I\u2019ve never seen such growth,\u201d Sapir said. \u201c[Business is] double or triple compared to any other season as far as moving out of the city.\u201d\n  On some days, Roadway experiences a 200 percent increase in leaving inquiries. Its clientele consists largely of higher net-worth individuals, typically 25-year-old to 45-year-old professionals in well-to-do parts of Manhattan.\n    United Van Lines CEO Marc Rogers told FOX Business that the majority of residents moving out of Manhattan, 61 percent, are earning over $100,000. And those moving out also tend to be older \u2013 64 percent are aged 55 or over \u2013 or in the 25 to 40 age range (25 percent).\n \u201cNew York City is up very dramatically for May in \u2026 these leads for interest in moving,\u201d Rogers said.\n The New York market has seen a 40 percent uptick in interest for move-outs when compared with last year, according to data provided to FOX Business by\u00a0 United Van Lines. Those numbers far outpace national trends, which show an average increase of 8 percent during the same time period.\n New York City moving company  Oz Moving told FOX Business that while its overall workload decreased by 46 percent from March to April, moves out of New York City rose 12 percent between March and May. Meanwhile, moves within New York City were down 47 percent in April when compared with last year.\n Consistent with the national data, Sapir said he has not seen activity anywhere near New York City levels in any of the other markets that his company serves across the country.\n The bad news for the Big Apple is that 2020\u2019s busiest season has likely not even arrived yet.\n Initially, panic drove people out of Manhattan, as coronavirus cases surged. Sapir said he fielded frantic calls from people who were requesting next-day service. However, now he is working with clients who have a more thought-through plan \u2013 whom he doesn\u2019t see returning to the city, especially if schools do not reopen.\n United Van Lines says large moving companies are sitting on thousands of initiatives in queue, predicting the \u201cbusy season\u201d this year will occur between July and September, rather than the traditional May through July. Rogers said there is a lot of \u201cpent-up demand.\u201d\n   A large proportion of Roadway\u2019s clients are leaving Manhattan for Florida, or other areas in the South.\n Data from United Van Lines corroborated those trends. The top destination that New York City residents were showing moving interest in was Miami, while Tampa and Orlando also made the top 10 \u2013 as did Atlanta, Charlotte and Raleigh-Durham.\n The other popular destinations among New York City escapees include surrounding suburban areas in New Jersey, Connecticut and Westchester, Sapir said.\n It\u2019s not only one-off moves, however. At Roadway, storage is up 900 percent when compared with the same period last year. Sapir said these people seem to be unsure of their long-term plans and might be trying out a new location to see how the situation plays out in Manhattan over the next year or so.\n   When asked last week whether he had tabled plans to raise taxes on the wealthy over fears of driving them from the city at a time when tax revenues have plummeted, New York City Mayor Bill de Blasio said the coronavirus pandemic has brought up a number of disparities, including class disparities.\n \u201cThe rich keep getting richer even in the midst of this crisis,\u201d de Blasio said. \u201cSo, I absolutely believe this is a fair time to talk about higher taxes on the wealthy.\u201d\n New York Gov. Andrew Cuomo is asking lawmakers to lift a $10,000 cap on state and local tax deductions, as a means to help residents and potentially prevent high-net-worth individuals from leaving for lower-tax states.", "posttime": "2020-06-10 07:42:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5458,evacuation,\u7ebd\u7ea6\u5e02", "title": "\u642c\u5bb6\u4eba\u5458\u8bf4\uff0c\u968f\u7740\u5c45\u6c11\u5411\u5357\u8fc1\u79fb\uff0c\u4ece\u7ebd\u7ea6\u5e02\u758f\u6563\u662f\u201c\u75af\u72c2\u7684\u201d", "title_en": "\u201cinsane\u201d evacuation from NYC, movers say, as residents head south", "transed": 1, "url": "https://www.foxbusiness.com/features/coronavirus-insane-exodus-nyc", "via": "", "real_tags": ["\u4eba\u5458", "\u7ebd\u7ea6\u5e02"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005926, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "IBM\u4e91\u72b6\u6001\u9875\u9762", "note_en": "IBM Cloud Status page", "posttime": "2020-06-10 07:09:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "cloud,\u72b6\u6001", "title": "IBM Cloud\u5173\u95ed\u4ee5\u53ca\u4ed6\u4eec\u7684\u72b6\u6001\u9875\u9762(\u770b\u8d77\u6765\u6258\u7ba1\u5728\u90a3\u91cc", "title_en": "IBM Cloud down as well as their status page which looks to be hosted there", "transed": 1, "url": "https://cloud.ibm.com/status", "via": "", "real_tags": ["cloud", "\u72b6\u6001"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005925, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u65b0\uff1a\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6346\u7ed1\u5305\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u66f4\u591a\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4ea4\u4e86\u4ed6\u4eec\u7684\u9879\u76ee\u3002\u6211\u4eec\u589e\u52a0\u4e86\u65b0\u4e00\u8f6e\u7684\u6e38\u620f&\u8fd8\u6709\u66f4\u591a\u3002\u6240\u6709\u4ee5\u524d\u548c\u5c06\u6765\u7684\u4e70\u5bb6\u90fd\u53ef\u4ee5\u5373\u65f6\u8bbf\u95ee\u3002\u73b0\u5728\u5305\u62ec\u4e861000\u4e2a\u9879\u76ee\u3002\n\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u79cd\u65cf\u4e0d\u516c\u6b63\u3001\u4e0d\u5e73\u7b49\u548c\u8b66\u5bdf\u5bf9\u9ed1\u4eba\u65bd\u66b4\u7684\u65f6\u4ee3\u3002\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u4eba\u90fd\u5c3d\u5176\u6240\u80fd\u8868\u660e\u7acb\u573a\u3002\u6211\u4eec\u5df2\u7ecf\u4e0e\u6765\u81ea\u6211\u4eec\u5e73\u53f0\u7684\u6240\u6709\u521b\u5efa\u8005\u5408\u4f5c\uff0c\u4ee5\u652f\u6301\u90a3\u4e9b\u76f4\u63a5\u4e0e\u53d7\u5f71\u54cd\u7684\u4eba\u5408\u4f5c\u7684\u7ec4\u7ec7\u3002\n\u6211\u4eec\u8054\u7cfb\u4e86\u6211\u4eec\u7684\u793e\u533a\uff0c\u53f2\u65e0\u524d\u4f8b\u7684\u521b\u4f5c\u8005\u6350\u8d60\u4e86740\u591a\u4e2a\u9879\u76ee\uff0c\u6210\u4e3a\u6211\u4eec\u8ba4\u4e3a\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u6346\u7ed1\u5305\u7684\u4e00\u90e8\u5206\u3002\u8d85\u8fc73\uff0c400\u7f8e\u5143\u7684\u6709\u507f\u4f5c\u54c1\u53ef\u4f9b\u9009\u62e9\uff0c\u6700\u4f4e\u6350\u6b3e\u91d1\u989d\u4e3a5\u7f8e\u5143\u3002\n\u6240\u6709\u6536\u76ca\u5c06\u6350\u8d60\u7ed9NAACP\u6cd5\u5f8b\u8fa9\u62a4\u548c\u6559\u80b2\u57fa\u91d1\u548c\u793e\u533a\u4fdd\u91ca\u57fa\u91d1\uff0c\u5404\u5360\u4e00\u534a\u3002\n\u8bf7\u6ce8\u610f\uff1a\u6346\u7ed1\u8d2d\u4e70\u4e0d\u4f1a\u8d60\u9001Steam(\u6216\u5176\u4ed6\u5916\u7f6e\u94a5\u5319)\u3002itch.io\u9875\u9762\u4e0a\u53ea\u63d0\u4f9b\u76f4\u63a5\u4e0b\u8f7d\u3002\n\u4ec0\u4e48\u662fitch.io\uff1fitch.io\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u5e02\u573a\uff0c\u9762\u5411\u4e13\u6ce8\u4e8e\u72ec\u7acb\u89c6\u9891\u6e38\u620f\u7684\u72ec\u7acb\u6570\u5b57\u521b\u4f5c\u8005\u3002\u4e86\u89e3\u66f4\u591a\u3002\n\u5982\u679c\u60a8\u662f\u6709\u5174\u8da3\u5c06\u4ed6\u4eec\u7684\u9879\u76ee\u6dfb\u52a0\u5230\u6346\u7ed1\u5305\u4e2d\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u8bf7\u56de\u590d\u6b64\u5e16\u5b50\u4e2d\u7684\u9876\u7ea7\u5e16\u5b50\u3002", "note_en": "Update: The bundle has been a huge success so far and many more developers have submitted their projects. We&#39;ve added a new round of games &amp; more. All previous and future buyers get instant access. There are now 1,000 projects included.\n    We live in a time of racial injustice, inequality, and police brutality against black people. We hope that everyone takes a stand in any way that they can. We\u2019ve partnered with creators from all across our platform to support organizations that are working directly with those affected.\n  We reached out to our community and an\u00a0unprecedented number of creators donated\u00a0over 740 projects to be part of what we believe is the largest bundle ever. Over $3,400 of paid works are available Pay-what-you-want with a minimum donation amount of $5.\n  All proceeds will be donated to the  NAACP Legal Defense and Educational Fund and  Community Bail Fund\u00a0split 50/50.\n  Please note: No Steam (or other external keys)\u00a0will be given for bundle purchases. Only direct downloads will be available on the itch.io page.\n        What is itch.io?\u00a0itch.io is an open marketplace for independent digital creators with a focus on independent video games.  Learn more\n    If you\u2019re a developer who is interested in adding their project to the bundle please reply to the top-level post  in this thread.", "posttime": "2020-06-10 07:07:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9a\u671f,items,\u6346\u7ed1", "title": "\u5b9a\u671f\u8d2d\u4e701,427\u4ef6\u5546\u54c1\uff0c\u4ef7\u683c\u4e3a5\u7f8e\u5143--7890\u7f8e\u5143", "title_en": "Buy 1,427 items for $5 Regularly \u2013$7,890", "transed": 1, "url": "https://itch.io/b/520/bundle-for-racial-justice-and-equality", "via": "", "real_tags": ["\u5b9a\u671f", "items", "\u6346\u7ed1"]}, {"category": "", "categoryclass": "", "imagename": "56250ea599c451bef9fa72944ecd134d.png", "infoid": 1005924, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0cDeepMind\u5728\u53e4\u8001\u7684\u56f4\u68cb\u6e38\u620f\u4e2d\u51fb\u8d25\u4e86\u7279\u7ea7\u56f4\u68cb\u5927\u5e08\uff0c\u4ee4\u7814\u7a76\u754c\u60ca\u53f9\u4e0d\u5df2\u3002\u6700\u8fd1\uff0cDeepMind\u770b\u5230\u5176\u81ea\u5b66\u6210\u624d\u7684\u4ee3\u7406\u4eba\u5728\u89c6\u9891\u6e38\u620f\u201c\u661f\u9645\u4e89\u9738II\u201d(StarCraft II)\u4e2d\u51fb\u8d25\u4e86\u4e13\u4e1a\u4eba\u58eb\u3002\u73b0\u5728\uff0c\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u82f1\u56fd\u7684\u4eba\u5de5\u667a\u80fd\u516c\u53f8\u53c8\u63a8\u51fa\u4e86\u53e6\u4e00\u9879\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u521b\u65b0\uff0c\u8fd9\u4e00\u6b21\u662f\u5728\u6587\u672c\u5230\u8bed\u97f3(TTS)\u9886\u57df\u3002\u6587\u8bed\u8f6c\u6362(TTS)\u7cfb\u7edf\u4ee5\u81ea\u7136\u8bed\u8a00\u6587\u672c\u4e3a\u8f93\u5165\uff0c\u4ee5\u5408\u6210\u7684\u7c7b\u4eba\u8bed\u97f3\u4e3a\u8f93\u51fa\u3002\u6587\u672c\u5230\u8bed\u97f3\u5408\u6210\u6d41\u6c34\u7ebf\u662f\u590d\u6742\u7684\uff0c\u5305\u62ec\u6587\u672c\u5f52\u4e00\u5316\u3001\u5bf9\u9f50\u8bed\u8a00\u7279\u5f81\u3001MEL\u8c31\u56fe\u5408\u6210\u3001\u539f\u59cb\u97f3\u9891\u6ce2\u5f62\u5408\u6210\u7b49\u591a\u4e2a\u5904\u7406\u9636\u6bb5\u3002\u5c3d\u7ba1\u50cfSiri\u8fd9\u6837\u7684\u6570\u5b57\u52a9\u7406\u4e2d\u4f7f\u7528\u7684\u73b0\u4ee3TTS\u7cfb\u7edf\u62e5\u6709\u9ad8\u4fdd\u771f\u7684\u8bed\u97f3\u5408\u6210\u548c\u5e7f\u6cdb\u7684\u73b0\u5b9e\u90e8\u7f72\uff0c\u4f46\u5373\u4f7f\u662f\u6700\u597d\u7684TTS\u7cfb\u7edf\u4e5f\u6709\u7f3a\u70b9\u3002\u6bcf\u4e00\u9636\u6bb5\u90fd\u9700\u8981\u6602\u8d35\u7684\u201c\u5730\u9762\u771f\u5b9e\u201d\u6ce8\u91ca\u6765\u76d1\u7763\u8f93\u51fa\uff0c\u800c\u4e14\u7cfb\u7edf\u4e0d\u80fd\u76f4\u63a5\u4ece\u5b57\u7b26\u6216\u97f3\u7d20\u4f5c\u4e3a\u8f93\u5165\u8fdb\u884c\u8bad\u7ec3\uff0c\u4ee5\u7aef\u5230\u7aef\u7684\u65b9\u5f0f\u5408\u6210\u8bed\u97f3\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u9886\u57df\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0cDeepMind\u7814\u7a76\u4eba\u5458\u5f00\u53d1\u4e86EATS\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee5\u7aef\u5230\u7aef\u65b9\u5f0f\u8fdb\u884c\u5bf9\u6297\u6027\u8bad\u7ec3\u7684\u751f\u6210\u6027\u6a21\u578b\uff0c\u5176\u6027\u80fd\u53ef\u4e0e\u4f9d\u8d56\u591a\u9636\u6bb5\u57f9\u8bad\u548c\u989d\u5916\u76d1\u7763\u7684SOTA\u6a21\u578b\u76f8\u5ab2\u7f8e\u3002\nEATS(\u7aef\u5230\u7aef\u5bf9\u6297\u6027TTS)\u7684\u4efb\u52a1\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u6216\u97f3\u7d20\u5e8f\u5217\u6620\u5c04\u523024 kHz\u7684\u539f\u59cb\u97f3\u9891\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6311\u6218\u662f\uff0c\u8f93\u5165\u6587\u672c\u548c\u8f93\u51fa\u8bed\u97f3\u4fe1\u53f7\u901a\u5e38\u5177\u6709\u975e\u5e38\u4e0d\u540c\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u4e0d\u5bf9\u9f50\u3002EATS\u901a\u8fc7\u4e24\u4e2a\u9ad8\u7ea7\u5b50\u6a21\u5757\u6765\u5904\u7406\u8fd9\u4e00\u95ee\u9898\uff1a\u6821\u51c6\u5668\u9884\u6d4b\u6bcf\u4e2a\u8f93\u5165\u4ee4\u724c\u7684\u6301\u7eed\u65f6\u95f4\u5e76\u4ea7\u751f\u97f3\u9891\u5bf9\u51c6\u8868\u793a\uff0c\u4ee5\u53ca\u89e3\u7801\u5668\u5c06\u6821\u51c6\u5668\u7684\u8f93\u51fa\u4e0a\u91c7\u6837\u5230\u5168\u97f3\u9891\u3002\n\u5b83\u662f\u4e00\u79cd\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u9002\u5408\u4e8e\u8981\u6c42\u5feb\u901f\u6279\u5904\u7406\u63a8\u7406\u7684\u5e94\u7528\u3002\n\u5bf9\u6297\u6027\u65b9\u6cd5\u4f7f\u751f\u6210\u5668\u80fd\u591f\u4ece\u76f8\u5bf9\u8f83\u5f31\u7684\u76d1\u7763\u4fe1\u53f7\u4e2d\u5b66\u4e60\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u4e86\u6ce8\u91ca\u7684\u6210\u672c\u3002\n\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u81ea\u56de\u5f52\u62bd\u6837\u6216\u6559\u5e08\u5f3a\u8feb\uff0c\u907f\u514d\u4e86\u8bf8\u5982\u66b4\u9732\u504f\u5dee\u548c\u51cf\u5c11\u63a8\u7406\u65f6\u7684\u5e76\u884c\u6027\u7b49\u95ee\u9898\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u8bad\u7ec3\u548c\u63a8\u7406\u65b9\u9762\u90fd\u5f88\u6709\u6548\u3002\n\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u5e73\u5747\u610f\u89c1\u5f97\u5206(MOS)\u6765\u8861\u91cf\u8bed\u97f3\u8d28\u91cf\u6765\u8bc4\u4f30EATS\u3002\u5728\u6d4b\u8bd5\u4e2d\uff0c\u6240\u6709\u6a21\u578b\u90fd\u5728\u7531\u4e13\u4e1a\u914d\u97f3\u4eba\u5458\u8868\u6f14\u7684\u4eba\u7c7b\u8bed\u97f3\u6570\u636e\u96c6\u53ca\u5176\u5bf9\u5e94\u7684\u6587\u672c\u4e0a\u8fdb\u884c\u4e86\u8bad\u7ec3\u3002\u8bed\u97f3\u6c60\u753169\u540d\u8bf4\u5317\u7f8e\u82f1\u8bed\u7684\u4eba\u7ec4\u6210\u3002\n\u4e0e\u4ee5\u524d\u7684\u6a21\u578b\u76f8\u6bd4\uff0cEATS\u9700\u8981\u7684\u76d1\u7763\u8981\u5c11\u5f97\u591a\uff0c\u4f46\u4ecd\u80fd\u8fbe\u52304.083\u7684MOS\uff0c\u63a5\u8fd1GaN-TTS\u548cWaveNet\u7b49SOTA\u65b9\u6cd5\u7684\u6c34\u5e73\uff0c\u800c\u4e14\u6bd4No RWDS\u3001No MelD\u548cNo Differdicator\u7b49\u6a21\u578b\u8981\u597d\u5f97\u591a\u3002\u8fd9\u7bc7\u8bba\u6587\u7aef\u5230\u7aef\u7684\u5bf9\u6297\u6027\u6587\u672c\u5230\u8bed\u97f3\u662f\u5728arxiv\u4e0a\u7684\u3002", "note_en": "DeepMind wowed the research community several years ago by defeating grandmasters in the ancient game of Go, and more recently saw its self-taught agents thrash pros in the video game StarCraft II. Now, the UK-based AI company has delivered another impressive innovation, this time in text-to-speech (TTS).  Text-to-speech (TTS) systems take natural language text as input and produce synthetic human-like speech as their output. The text-to-speech synthesis pipelines are complex, comprising multiple processing stages such as text normalisation, aligned linguistic featurisation, mel-spectrogram synthesis, raw audio waveform synthesis and so on.  Although contemporary TTS systems like those used in digital assistants like Siri boast high-fidelity speech synthesis and wide real-world deployment, even the best of them still have drawbacks. Each stage requires expensive \u201cground truth\u201d annotations to supervise the outputs, and the systems cannot train directly from characters or phonemes as input to synthesize speech in the end-to-end manner increasingly favoured in other machine learning domains.  To address these issues, DeepMind researchers have developed EATS, a generative model trained adversarially in an end-to-end manner that achieves performance comparable to SOTA models that rely on multi-stage training and additional supervision.\n  EATS (End-to-end Adversarial TTS) is tasked with mapping an input sequence of characters or phonemes to raw audio at 24 kHz. A critical real-world challenge is that the input text and output speech signals will generally have very different lengths and are not aligned. EATS deals with this via two high-level submodules: An aligner which predicts the duration of each input token and produces an audio-aligned representation, and a decoder which upsamples the aligner\u2019s output to the full audio frequency.\n   It is a feed-forward convolutional neural network, which makes it suitable for applications where fast batched inference is important.\n The adversarial approach enables the generator to learn from a relatively weak supervisory signal, significantly reducing the cost of annotations.\n It does not rely on autoregressive sampling or teacher forcing, avoiding issues like exposure bias and reduced parallelism at inference time, which makes it efficient in both training and inference.\n Researchers evaluated EATS using Mean Opinion Score (MOS) to measure speech quality. In the tests, all models were trained on datasets of human speech performed by professional voice actors and their corresponding text. The voice pool comprised 69 North American English speakers.\n  Compared to previous models, EATS requires substantially less supervision but still achieves an MOS of 4.083, approaching the level of SOTA methods like GAN-TTS and WaveNet, and substantially better than models like No RWDs, No MelSpecD, and No Discriminators.  The paper  End-to-End Adversarial Text-to-Speech is on  arXiv.", "posttime": "2020-06-10 07:07:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u63a8\u51fa,introduces,\u8bed\u97f3", "title": "DeepMind\u63a8\u51fa\u201cEats\u201d--\u4e00\u79cd\u5bf9\u6297\u6027\u7684\u3001\u7aef\u5230\u7aef\u7684TTS\u65b9\u6cd5", "title_en": "DeepMind Introduces \u2018Eats\u2019 \u2013 An Adversarial, End-to-End Approach to TTS", "transed": 1, "url": "https://syncedreview.com/2020/06/09/deepmind-introduces-eats-an-adversarial-end-to-end-approach-to-tts/", "via": "", "real_tags": ["app", "\u63a8\u51fa", "\u8bed\u97f3"]}, {"category": "", "categoryclass": "", "imagename": "4e3b6c35db38bd9cb301e2634eb23889.png", "infoid": 1005923, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4e5f\u662f\u7a0b\u5e8f\u5458\u548c\u7f51\u7edc\u5de5\u7a0b\u5e08\u7684\u8349\u6839\u793e\u533a\uff0c\u4ed6\u4eec\u5728\u6784\u5efa\u548c\u90e8\u7f72\u65b0\u7684\u7f51\u7edc\u5143\u7d20\u65b9\u9762\u76f8\u4e92\u5e2e\u52a9\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u5b9e\u9645\u5e94\u7528\u548c\u5bfb\u627e\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u505a\u4e8b\u60c5\u3002\n\u6b22\u8fce\u60a8\u52a0\u5165\u6211\u4eec\u7684\u793e\u533a\uff01\u5411\u4e0b\u6eda\u52a8\u5230\u5e95\u90e8\u7684ForTips\uff0c\u4e86\u89e3\u5982\u4f55\u53c2\u4e0e\u5176\u4e2d\u3002\nSnabb\u7f16\u8bd1\u4e3a\u540d\u4e3asnabb\u7684\u72ec\u7acb\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u4e2a\u5355\u4e00\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5305\u62ec\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u73b0\u4ee3Linux/x86-64\u53d1\u884c\u7248\u4e0a\u8fd0\u884c\u3002(\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u7f51\u7edc\u7684\u5fd9\u788c\u76d2\u5b50\u3002)\u3002\nSnabb NFV\u4f7fQEMU/KVM\u7f51\u7edc\u6027\u80fd\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6570\u636e\u5305\u901f\u7387\u7684\u5e94\u7528\uff0c\u5982ISP\u6838\u5fc3\u8def\u7531\u5668\u3002\u8fd9\u662f\u4e3a\u90a3\u4e9b\u60f3\u8981\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u5904\u7406\u9ad8\u8fbe100 Gbps\u621650 Mpps\u7684Virtio-Net\u7f51\u7edc\u6d41\u91cf\u7684\u4eba\u800c\u8bbe\u8ba1\u7684\u3002\u6211\u4eec\u6700\u521d\u5f00\u53d1Snabb NFV\u662f\u4e3a\u4e86\u652f\u6301\u5fb7\u56fd\u7535\u4fe1\u7684TeraStreamNetwork\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528QEMU\u72ec\u7acb\u90e8\u7f72Snabb NFV\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u4e0eOpenStack\u7b49\u4e91\u8ba1\u7b97\u5e73\u53f0\u96c6\u6210\u3002\nSnabb lwAFTR\u662fIPv6\u8fc7\u6e21\u6280\u672f\u8f7b\u91cf\u7ea74-over-6(Lw4o6)\u9762\u5411\u4e92\u8054\u7f51\u7684\u7ec4\u4ef6\u3002ISP\u53ef\u4ee5\u4f7f\u7528lwAFTR\u529f\u80fd\u4e3a\u5176\u7528\u6237\u63d0\u4f9b\u5bf9IPv4\u4e92\u8054\u7f51\u7684\u8bbf\u95ee\uff0c\u540c\u65f6\u7ef4\u62a4\u7b80\u5355\u7684\u4ec5\u652f\u6301IPv6\u7684\u5185\u90e8\u7f51\u7edc\u3002\u90e8\u7f72Snabb lwAFTR\u7684ISP\u8fd8\u53ef\u4ee5\u914d\u7f6elw4o6\u5728\u591a\u4e2a\u4e0d\u540c\u5ba2\u6237\u4e4b\u95f4\u5171\u4eabIPv4\u5730\u5740\uff0c\u4ece\u800c\u6539\u5584IPv4\u5730\u5740\u7a7a\u95f4\u8017\u5c3d\u95ee\u9898\u5e76\u964d\u4f4e\u6210\u672c\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605lwAFTR\u6587\u6863\u3002\nVPWS(Virtual Private Wire Service\uff0c\u865a\u62df\u4e13\u7528\u7ebf\u670d\u52a1)\u662fAlexander Gall at Switch\u516c\u53f8\u5f00\u53d1\u7684\u7b2c\u4e8c\u5c42VPN\u5e94\u7528\u3002\u4ed6\u7684Github VPN\u5206\u652f\u673a\u6784\u662f\u53d1\u5c55\u7684\u4e3b\u7ebf\u3002\nPacetBlaster\u901a\u8fc7\u91cd\u653ePCAP\u683c\u5f0f\u7684\u8ddf\u8e2a\u6587\u4ef6\u6216\u5c06\u53ef\u5b9a\u5236\u7684\u6570\u636e\u5305\u5408\u6210\u5230\u4efb\u610f\u6570\u91cf\u7684\u82f1\u7279\u5c1482599\u4e07\u5146\u7f51\u7edc\u63a5\u53e3\u4e0a\u6765\u751f\u6210\u52a0\u8f7d\u3002\u8fd9\u662f\u975e\u5e38\u9ad8\u6548\u7684\uff1a\u5373\u4f7f\u5bf9\u4e8e\u6570\u767eGbps\u7684\u6d41\u91cf\uff0c\u4e5f\u53ea\u9700\u8981\u6bcf\u4e2aCPU\u4e00\u4e2a\u6838\u5fc3\u7684\u5f88\u5c0f\u7684%\u3002\u56e0\u4e3a\u53ea\u9700\u8981\u5f88\u5c11\u7684CPU\u8d44\u6e90\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u5728\u5c0f\u578b\u670d\u52a1\u5668\u4e0a\u8fd0\u884cPacketBlaaster\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5728\u88ab\u6d4b\u8bbe\u5907\u4e0a\u8fd0\u884cPacketBlaaster\u3002\nSNSH(Snabb Shell)\u662f\u4e00\u4e2a\u7528\u4e8e\u4ea4\u4e92\u8bd5\u9a8cSnabb\u7684\u5de5\u5177\u3002\u5b83\u4f7f\u7528Lua shell\u63d0\u4f9b\u5bf9\u6240\u6709API\u7684\u76f4\u63a5\u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u4ece\u811a\u672c\u6587\u4ef6\u6216\u4ea4\u4e92\u5f0fshell\u64cd\u4f5csnsh\u3002\nsnabb\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u72ec\u7acb\u7684\uff0c\u5305\u62ec\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e4b\u95f4\u590d\u5236\u3002\n\u6216\u8005\u7b80\u5355\u5730\u8fd0\u884csnabb\uff0c\u5c31\u50cf\u5728Linux\u4e0b\u4e00\u6837\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528\u5305\u88c5\u5668\u5916\u58f3\u811a\u672c\u5b9e\u73b0\u7684\uff0c\u8be5\u811a\u672c\u4f5c\u4e3a&#39\uff1bmake docker&#39\uff1b\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u94fe\u63a5\uff1a", "note_en": "We are also a grassroots community of programmers and networkengineers who help each other to build and deploy new networkelements. We care about practical applications and finding simplerways to do things.\n  You are welcome to join our community! Scroll down to the bottom fortips on how you can get involved.\n      Snabb compiles into a stand-alone executable called snabb. This single binary includes multiple applications and runs onany modern  Linux/x86-64 distribution. (You couldthink of it as a busybox fornetworking.)\n    Snabb NFV makes QEMU/KVM networkingperformance practical for applications that require high packet rates,such as ISP core routers. This is intended for people who want toprocess up to 100 Gbps or 50 Mpps of Virtio-net network traffic perserver. We originally developed Snabb NFV to support DeutscheTelekom&#39;s  TeraStreamnetwork.\n You can deploy Snabb NFV stand-alone with QEMU or you can integrate itwith a cloud computing platform such as OpenStack.\n  Snabb lwAFTR is the internet-facing component of&#34;lightweight 4-over-6&#34; (lw4o6), an IPv6 transition technology. An ISPcan use lwAFTR functions to provide its users with access to the IPv4internet while maintaining a simple IPv6-only internal network. An ISPdeploying Snabb lwAFTR can also configure lw4o6 to share IPv4 addressesbetween multiple different customers, ameliorating the IPv4 addressspace exhaustion problem and lowering costs. See the  lwAFTRdocumentation for more details.\n  VPWS (Virtual Private Wire Service) is a Layer-2 VPN application beingdeveloped by Alexander Gall at  SWITCH. His Github  vpn branchis the master line of development.\n  packetblaster generates load byreplaying a  pcap format tracefile or synthesizing customizable packets onto any number of Intel 82599 10-Gigabit networkinterfaces. This is very efficient: only a small % of one core per CPUis required even for hundreds of Gbps of traffic. Because so littleCPU resources are required you can run packetblaster on a small serveror even directly on a Device Under Test.\n  snsh (Snabb Shell) is a tool for interactivelyexperimenting with Snabb. It provides direct access to all APIsusing a Lua shell. You can operate snsh either from script files orfrom an interactive shell.\n    The  snabb binary is stand-alone, includes all of the applications,and can be copied between machines.\n        Or simply run snabb, as you would under linux. This is made possible by using a wrapper shell script thatgets linked to as part of &#39;make docker&#39;:", "posttime": "2020-06-10 07:06:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,pure,snabb", "title": "Snabb\uff1a\u4f7f\u7528Lua\u7684100 Gbit/s\u7eaf\u8f6f\u4ef6\u4ea4\u6362", "title_en": "Snabb: 100 Gbit/s pure software switching using Lua", "transed": 1, "url": "https://github.com/snabbco/snabb", "via": "", "real_tags": ["\u8f6f\u4ef6", "pure", "snabb"]}, {"category": "", "categoryclass": "", "imagename": "fa23edad7b64ba208ea1786d069058cf.jpg", "infoid": 1005921, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e2a\u6708\uff0c\u7279\u65af\u62c9\u9996\u5e2d\u6267\u884c\u5b98\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u5728\u5f53\u5730\u536b\u751f\u5b98\u5458\u7684\u5efa\u8bae\u4e0b\uff0c\u5f3a\u884c\u8ba9\u4ed6\u5728\u52a0\u5dde\u7684\u7535\u52a8\u6c7d\u8f66\u5de5\u5382\u91cd\u65b0\u5f00\u5f20\u3002\u73b0\u5728\u6709\u62a5\u9053\u7684\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u53ef\u80fd\u6e90\u4e8e\u4ed3\u4fc3\u7684\u91cd\u65b0\u5f00\u653e\u3002\n\u6b63\u5982\u534e\u76db\u987f\u90ae\u62a5\u5468\u4e8c\u62a5\u9053\u7684\u90a3\u6837\uff0c\u636e\u62a5\u9053\uff0c\u7279\u65af\u62c9\u5728\u5f17\u91cc\u8499\u7279\u5de5\u5382\u7684\u51e0\u540d\u5de5\u4eba\u56e0\u51a0\u72b6\u75c5\u6bd2\u800c\u4e0b\u5c97\u3002\u4e24\u4f8b\u786e\u8bca\u75c5\u4f8b\u6765\u81ea\u9644\u8fd1\u4e00\u5bb6\u5355\u72ec\u7684\u5236\u9020\u5ea7\u6905\u7684\u5de5\u5382\u3002\n\u7279\u65af\u62c9\u548c\u5f17\u91cc\u8499\u7279\u5de5\u5382\u6240\u5728\u7684\u963f\u62c9\u7c73\u8fbe\u53bf\u65e9\u57285\u6708\u4efd\u5c31\u8fbe\u6210\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u5c06\u5728\u8be5\u53bf\u5173\u95ed\u65f6\u95f4\u8868\u4e4b\u524d\u91cd\u65b0\u5f00\u5de5\u3002\u8be5\u5dde\u52a0\u5feb\u4e86\u5236\u9020\u4e1a\u7684\u91cd\u65b0\u5f00\u653e\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u751a\u81f3\u9f13\u52b1\u9a6c\u65af\u514b\u91cd\u542f\uff0c\u56e0\u6b64\u9a6c\u65af\u514b\u7ee7\u7eed\u4e3a\u5f17\u91cc\u8499\u7279\u5de5\u5382\u5236\u5b9a\u4e86\u4ed6\u7248\u672c\u7684\u4e0e\u793e\u4f1a\u758f\u8fdc\u3001\u4ea7\u80fd\u51cf\u5c11\u548c\u7b26\u5408\u9762\u5177\u7684\u8ba1\u5212\u3002\n\u90a3\u662f\u5728\u4e0e\u53bf\u5b98\u5458\u6572\u5b9a\u6b63\u5f0f\u91cd\u65b0\u5f00\u653e\u8ba1\u5212\u7684\u4e00\u5468\u524d\u3002\u53bf\u536b\u751f\u5b98\u5458\u544a\u8bc9\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\uff0c\u5728\u6b64\u4e4b\u524d\uff0c\u9a6c\u65af\u514b\u5c06\u5de5\u4eba\u9001\u56de\u4e86\u5de5\u5382\uff0c\u8fd9\u610f\u5473\u7740\u68c0\u6d4b\u8fd8\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u8ba9\u751f\u75c5\u7684\u5de5\u4eba\u5728\u5de5\u4f5c\u65f6\u4f20\u64ad\u4f20\u67d3\u75c5\u3002\u7279\u65af\u62c9\u6ca1\u6709\u56de\u590d\u8bb0\u8005\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u963f\u62c9\u7c73\u8fbe\u53bf\u8fc7\u53bb\u4e00\u4e2a\u6708\u7684\u75c5\u4f8b\u6709\u6240\u589e\u52a0\uff0c\u622a\u81f3\u5468\u65e5\uff0c\u7d2f\u8ba1\u75c5\u4f8b\u8fd14000\u4f8b\u3002\u5f53\u7279\u65af\u62c9\u5de5\u5382\u6b63\u5f0f\u91cd\u65b0\u5f00\u5de5\u65f6\uff0c\u53ea\u67092200\u591a\u7bb1\u3002", "note_en": "Last month Tesla CEO Elon Musk  bullied his way to reopening his electric car factory in California ahead of local health officials&#39; recommendations. Now there are reported coronavirus cases that likely stemmed from the rushed reopening.\n As the   Washington Post reported Tuesday, several workers at Tesla facilities in Fremont were reportedly away from work because of coronavirus. Two confirmed cases were based out of a separate, nearby factory that makes seats.\n Tesla and Alameda County, where the Fremont factory is based,  reached an agreement back in May to reopen ahead of the county&#39;s shutdown schedule. The state had accelerated manufacturing reopening and  President Donald Trump even encouraged Musk to restart, so Musk went ahead with his version of a social-distancing, reduced-capacity, and mask-compliant plan for the Fremont factory.\n  That was a week before settling on an  official reopening plan with county officials. Before that, Musk sent workers back to the factory, which meant testing wasn&#39;t required yet and could have allowed sick workers to spread the infectious disease while at work, as county health officials told the  Washington Post. Tesla didn&#39;t respond to a request for comment.\n Alameda County has seen an  increase in cases in the past month, with nearly 4,000 cumulative cases as of Sunday. When the Tesla factory officially reopened, there were just over 2,200 cases.", "posttime": "2020-06-10 07:05:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u8feb\u4f7f,factory,\u9a6c\u65af\u514b", "title": "\u9a6c\u65af\u514b\u8feb\u4f7f\u5de5\u5382\u91cd\u65b0\u5f00\u5de5\u540e\uff0c\u7279\u65af\u62c9\u5de5\u4eba\u5bf9\u65b0\u51a0\u80ba\u708e\u7684\u68c0\u6d4b\u5448\u9633\u6027", "title_en": "Tesla workers test positive for Covid-19 after Musk forced factory reopening", "transed": 1, "url": "https://mashable.com/article/tesla-fremont-factory-coronavirus/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u8feb\u4f7f", "factory", "\u9a6c\u65af\u514b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005920, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f9d\u8d56\u60a8\u7684\u652f\u6301\uff1a\u60a8\u542c\u8bf4\u8fc7Phoronix Premium\u5417\uff1f\u8fd9\u662f\u4ec0\u4e48\u8865\u5145\u672c\u7f51\u7ad9\u4e0a\u7684\u5e7f\u544a\uff0c\u4e3a\u6211\u4eec\u7684\u4f18\u8d28\u65e0\u5e7f\u544a\u670d\u52a1\u3002\u6bcf\u6708\u53ea\u97003\u7f8e\u5143\uff0c\u60a8\u5c31\u53ef\u4ee5\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u7684\u7f51\u7ad9\uff0c\u540c\u65f6\u4ea7\u751f\u7684\u8d44\u91d1\u5141\u8bb8\u6211\u4eec\u7ee7\u7eed\u8fdb\u884cLinux\u786c\u4ef6\u5ba1\u67e5\u3001\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u3001\u7ef4\u62a4\u6211\u4eec\u7684\u793e\u533a\u8bba\u575b\u7b49\u7b49\u3002\u4f60\u4e5f\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u8d1d\u5b9d\u652f\u4ed8\u5c0f\u8d39\u3002\u4eca\u5929\u65e9\u4e0a\uff0c\u6211\u6ce8\u610f\u5230\u4e32\u6270/SRBDS\u662f\u7ee7\u82f1\u7279\u5c14\u53d1\u5e03\u6708\u5ea6\u5b89\u5168\u5efa\u8bae\u4e4b\u540e\u6700\u65b0\u7684\u4fa7\u901a\u9053\u6f0f\u6d1e\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u82f1\u7279\u5c14\u8fdd\u53cd\u4e86\u4ed6\u4eec\u81ea\u5df1\u5bf9\u8fd9\u4e00\u62ab\u9732\u7684\u7981\u4ee4\uff0c\u5728\u4ed6\u4eec\u6536\u56de\u4e4b\u524d\uff0c\u6211\u78b0\u5de7\u5f88\u5feb\u5c31\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\u5728\u90a3\u4e4b\u540e\u7684\u51e0\u4e2a\u5c0f\u65f6\u91cc\uff0c\u8fd9\u4e2a\u4e32\u97f3\u6f0f\u6d1e\u80cc\u540e\u7684\u5927\u5b66\u7814\u7a76\u4eba\u5458\u4f38\u51fa\u63f4\u624b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4efd\u88ab\u7981\u8fd0\u7684\u767d\u76ae\u4e66\u526f\u672c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6b63\u5f0f\u62ab\u9732\u65f6\u95f4\u5df2\u8fc7\uff0c\u56e0\u6b64\u6709\u5173\u6b64\u65b0\u7684\u4fa7\u901a\u9053\u82f1\u7279\u5c14CPU\u6f0f\u6d1e\u7684\u4fe1\u606f\u662f\u516c\u5f00\u7684\uff0c\u5b83\u9996\u6b21\u8868\u660e\u6295\u673a\u6027\u6267\u884c\u53ef\u4f7f\u653b\u51fb\u8005\u8de8\u82f1\u7279\u5c14CPU\u4e0a\u7684\u7269\u7406\u5185\u6838\u6cc4\u6f0f\u654f\u611f\u4fe1\u606f\u3002\n\u5927\u5b66\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6700\u65b0\u7684\u6f0f\u6d1e\u53ef\u4ee5\u7ed5\u8fc7\u8bf8\u5982Spectre\u548cMeltdown\u4e4b\u7c7b\u7684\u73b0\u6709\u5185\u6838\u5185\u7f13\u89e3\uff0c\u800c\u4e0d\u4f9d\u8d56\u4e8e\u653b\u51fb\u8005/\u53d7\u5bb3\u8005\u5728\u540c\u4e00\u4e2aCPU\u5185\u6838\u4e0a\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u7981\u7528\u4e86\u8d85\u7ebf\u7a0b\u5e76\u91c7\u53d6\u4e86\u5148\u524d\u7684\u7f13\u89e3\u63aa\u65bd\uff0c\u5728\u83b7\u5f97\u65b0\u7684CPU\u5fae\u7801\u4e4b\u524d\uff0c\u82f1\u7279\u5c14CPU\u4ecd\u4f1a\u53d7\u5230\u4e32\u6270\u7684\u5f71\u54cd\u3002SRBDS\u5728\u672c\u8d28\u4e0a\u7c7b\u4f3c\u4e8eMDS(\u5fae\u4f53\u7cfb\u7ed3\u6784\u6570\u636e\u91c7\u6837)\uff0c\u4f46\u6709\u8fd9\u4e00\u91cd\u8981\u533a\u522b\u3002\u8377\u5170\u963f\u59c6\u65af\u7279\u4e39Vrije\u5927\u5b66\u548c\u745e\u58eb\u82cf\u9ece\u4e16\u7406\u5de5\u5b66\u9662\u7684\u7814\u7a76\u4eba\u5458\u505a\u51fa\u4e86\u8fd9\u4e00\u53d1\u73b0\u3002\n\u6b64\u65b0\u7684\u4e34\u65f6\u6267\u884c\u6f0f\u6d1e\u79f0\u4e3a\u7279\u6b8a\u5bc4\u5b58\u5668\u7f13\u51b2\u533a\u6570\u636e\u91c7\u6837(SRBDS)\u3002\u6b64\u6f0f\u6d1e\u4e0e\u6267\u884c\u5bf9\u5171\u4eab\u7f13\u51b2\u533a\u7684\u6838\u5916\u8bbf\u95ee\u7684\u6307\u4ee4\u6709\u5173\u3002\u5728\u6613\u53d7SRBDS\u653b\u51fb\u7684\u6307\u4ee4\u4e2d\u6709RDRAND\u548cRDSEED\uff0c\u7531\u4e8e\u9700\u8981\u5b89\u5168\u968f\u673a\u6570\u751f\u6210\u8fd9\u4e00\u7279\u6027\u901a\u5e38\u975e\u5e38\u654f\u611f\uff0c\u56e0\u6b64RDRAND\u548cRDSEED\u5c24\u5176\u6709\u95ee\u9898\u3002\u5927\u5b66\u7814\u7a76\u4eba\u5458\u786e\u5b9e\u6709\u6982\u5ff5\u5b9e\u73b0\u7684\u8bc1\u636e\u8868\u660e\uff0cRDRAND/RDSEED\u7684\u8f93\u51fa\u751a\u81f3\u53ef\u4ee5\u4ece\u72ec\u7acbCPU\u4e0a\u7684Intel SGX Enclaves\u5185\u90e8\u6cc4\u9732\u3002\n\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u7684\u53d7\u5f71\u54cd\u7684CPU\u8303\u56f4\u4ece\u82f1\u7279\u5c14\u5929\u7a7a\u6e56\u5230\u81f3\u5c11\u5496\u5561\u6e56\u3002\u82f1\u7279\u5c14Cascade Lake\u4f3c\u4e4e\u662f\u7b2c\u4e00\u4ee3\u4e0d\u5bb9\u6613\u53d7\u5230\u8de8\u6838\u653b\u51fb\u7684\u4ea7\u54c1\u3002\n\u51cf\u8f7b\u4e32\u6270\u6d89\u53ca\u5728\u66f4\u65b0\u5206\u7ea7\u7f13\u51b2\u5668\u4e4b\u524d\u9501\u5b9a\u6574\u4e2a\u5b58\u50a8\u5668\u603b\u7ebf\uff0c\u5e76\u5728\u5185\u5bb9\u5df2\u88ab\u6e05\u9664\u4e4b\u540e\u89e3\u9501\u3002\u4f46\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6027\u80fd\u635f\u5931\uff0c\u5f53\u524d\u7684\u82f1\u7279\u5c14CPU\u5fae\u7801\u7f13\u89e3\u4ec5\u5728\u5b89\u5168\u5173\u952e\u6307\u4ee4(\u5982RDRAND/RDSEEED/EGETKEY)\u9644\u8fd1\u5f3a\u52a0\u4e86\u8fd9\u79cd\u884c\u4e3a\uff0c\u800c\u53d1\u51fa\u6838\u5916\u8bf7\u6c42\u7684\u5176\u4ed6\u6307\u4ee4\u53ef\u80fd\u6700\u7ec8\u4ecd\u4f1a\u8de8CPU\u5185\u6838\u6cc4\u6f0f\u3002\u867d\u7136\u6709\u6982\u5ff5\u4ee3\u7801\u7684\u8bc1\u636e\uff0c\u4f46\u82f1\u7279\u5c14\u8ba4\u4e3aSRBDS\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5f88\u96be\u5229\u7528\u3002\n2018\u5e749\u6708\u5bf9\u6b64\u5206\u9636\u6bb5\u7f13\u51b2\u533a\u5185\u5bb9\u6cc4\u6f0f\u8fdb\u884c\u4e86\u521d\u6b65\u6982\u5ff5\u9a8c\u8bc1\u5b9e\u65bd\uff0c\u5e76\u4e8e2019\u5e747\u6708\u8fdb\u4e00\u6b65\u8bc1\u660e\u4e86RDRAND/RDSEED\u6cc4\u6f0f\u3002\u76f4\u5230\u73b0\u5728\uff0c\u82f1\u7279\u5c14\u624d\u5c06\u8fd9\u4e00\u62ab\u9732\u516c\u4e4b\u4e8e\u4f17\uff0c\u540c\u65f6\u901a\u8fc7\u6f0f\u6d1e\u8d4f\u91d1\u8ba1\u5212\u5956\u52b1\u7814\u7a76\u4eba\u5458\u3002\u636e\u7814\u7a76\u4eba\u5458\u79f0\uff0c\u8fd9\u6bb5\u5f88\u957f\u7684\u516c\u5f00\u671f\u636e\u8bf4\u662f\u7531\u4e8e\u5b9e\u65bd\u8de8\u6838\u5fc3\u6f0f\u6d1e\u4fee\u590d\u7684\u56f0\u96be\u9020\u6210\u7684\u3002\n\u7531\u4e8e\u7981\u8fd0\u5df2\u7ecf\u89e3\u9664\uff0c\u8fd9\u7bc7\u8bba\u6587\u548c\u66f4\u591a\u7ec6\u8282\u5c06\u53d1\u5e03\u5728\u76f8\u58f0\u6f0f\u6d1e\u7f51\u7ad9\u4e0a\u3002\u6211\u5df2\u7ecf\u5728\u5185\u90e8\u5bf9\u7f13\u89e3\u540e\u7684\u5fae\u7801\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5e76\u5c06\u542f\u52a8\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4f46\u8003\u8651\u5230\u82f1\u7279\u5c14\u4ec5\u9488\u5bf9\u9009\u5b9a\u6307\u4ee4\u8fdb\u884c\u7f13\u89e3\u7684\u8303\u56f4\u8f83\u4e3a\u6709\u9650\uff0c\u56e0\u6b64\u9664RdRand\u6027\u80fd\u7b49\u65b9\u9762\u5916\uff0c\u603b\u4f53\u5f71\u54cd\u53ef\u80fd\u5f88\u5c0f\u3002\u8bf7\u7a0d\u540e\u5173\u6ce8Phoronix\u4e0a\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u6700\u65b0\u6d88\u606f\uff1a\u82f1\u7279\u5c14\u4eca\u5929\u53d1\u5e03\u4e86\u9002\u7528\u4e8e\u4ece\u54c8\u65af\u97e6\u5c14\u5230\u5496\u5561\u6e56\u7684Linux\u64cd\u4f5c\u7cfb\u7edf\u7684\u6700\u65b0CPU\u5fae\u7801\u3002", "note_en": "We Rely On Your Support: Have you heard of  Phoronix Premium? It&#39;s what complements advertisements on this site for our premium ad-free service. For as little as $3 USD per month, you can help support our site while the funds generated allow us to keep doing Linux hardware reviews, performance benchmarking, maintain our community forums, and much more. You can also consider  a tip via PayPal.   This morning I noted  CrossTalk / SRBDS as the newest side-channel vulnerability following Intel&#39;s monthly security advisories being sent out. It turns out Intel broke their own embargo on the disclosure and I happened to spot it quickly before they retracted it. In the hours since, the university researchers behind this CrossTalk vulnerability reached out and have provided an embargoed copy of the whitepaper. As of now, the formal disclosure time has passed so information on this new side-channel Intel CPU vulnerability is public and it shows for the first time that speculative execution can enable attackers to leak sensitive information across physical cores on Intel CPUs.\n    The university researchers discovered this newest vulnerability can bypass existing intra-core mitigations from the likes of Spectre and Meltdown while not being contingent upon the attacker/victim being on the same CPU core. So even if Hyper Threading is disabled and with prior mitigations, Intel CPUs can still be exposed to CrossTalk until obtaining new CPU microcode. SRBDS is similar in nature to MDS (Microarchitectural Data Sampling) but with this important difference. Making this discovery were researchers at Vrije Universiteit Amsterdam, The Netherlands and ETH Zurich, Switzerland.\n  This new transient execution vulnerability is referred to as Special Register Buffer Data Sampling (SRBDS). This vulnerability is about instructions that perform off-core accesses to shared buffers. Among the instructions vulnerable to SRBDS is RDRAND and RDSEED, which is particularly problematic due to the often sensitive nature of needing secure random number generation. The university researchers do have a proof of concept implementation showing that the output of RDRAND/RDSEED can even be leaked from within Intel SGX enclaves on separate CPUs.\n  The affected CPUs found by researchers span from Intel Skylake through at least Coffee Lake. Intel Cascade Lake appears to be the first generation not vulnerable to cross-core attacks.\n  Mitigating CrossTalk involves locking the entire memory bus before updating the staging buffer and unlocking it after the contents have been cleared. But as that is a huge performance penalty, the current Intel CPU microcode mitigation is only imposing this behavior around &#34;security critical&#34; instructions like RDRAND / RDSEEED / EGETKEY while other instructions that issue off-core requests may still end up being leaked across CPU cores. While there is proof of concept code, Intel for their part believes SRBDS is difficult to exploit in the real world.\n  An initial proof-of-concept implementation of this staging buffer contents leakage was made in September 2018 and further RDRAND/RDSEED leakage proved in July 2019. Only now is Intel making this disclosure public while rewarding the researchers via the bug bounty program. This very long disclosure period was reportedly done due to &#34;the difficulty of implementing a fix for the cross-core vulnerabilities&#34;, according to the researchers.\n  The paper and more details will be published on  the CrossTalk vulnerability site now that the embargo has lifted. I am already running benchmarks internally on the mitigated microcode and will have those up, but given the more limited scope that Intel is mitigating it for just select instructions, the overall impact is likely to be small except for areas like RdRand performance. Stay tuned for benchmarks on Phoronix shortly.\n  UPDATE: Intel has now  released updated CPU microcode for Linux spanning from Haswell to Coffee Lake for today&#39;s disclosure.", "posttime": "2020-06-10 07:04:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u663e\u793a,shows,\u82f1\u7279\u5c14", "title": "\u4e32\u6270\u663e\u793a\u8de8\u7269\u7406CPU\u6838\u5fc3\u6cc4\u6f0f\u4fe1\u606f\u7684\u53ef\u80fd\u6027", "title_en": "CrossTalk Shows Possibility of Leaking Information Across Physical CPU Cores", "transed": 1, "url": "https://www.phoronix.com/scan.php?page=article&item=crosstalk-srbds-vulnerability&num=1", "via": "", "real_tags": ["\u663e\u793a", "shows", "\u82f1\u7279\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "9512a824683caaf77735664c4b79196b.jpg", "infoid": 1005919, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5df4\u6bd4\u4f26\u5065\u5eb7\u5df2\u7ecf\u627f\u8ba4\u5176GP\u89c6\u9891\u9884\u7ea6\u5e94\u7528\u7a0b\u5e8f\u906d\u9047\u4e86\u6570\u636e\u6cc4\u9732\u3002\n\u5728\u8be5\u516c\u53f8\u7684\u4e00\u540d\u7528\u6237\u53d1\u73b0\u4ed6\u88ab\u5141\u8bb8\u8bbf\u95ee\u6570\u5341\u4e2a\u5176\u4ed6\u60a3\u8005\u7684\u4f1a\u8bca\u89c6\u9891\u540e\uff0c\u8be5\u516c\u53f8\u5c31\u88ab\u63d0\u9192\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5df4\u6bd4\u4f26\u7684\u4e00\u9879\u540e\u7eed\u68c0\u67e5\u663e\u793a\uff0c\u8fd8\u6709\u5c11\u91cf\u82f1\u56fd\u7528\u6237\u4e5f\u53ef\u4ee5\u770b\u5230\u5176\u4ed6\u4f1a\u8bdd\u3002\n\u5df4\u6bd4\u4f26\u5141\u8bb8\u5176\u6210\u5458\u901a\u8fc7\u667a\u80fd\u624b\u673a\u89c6\u9891\u901a\u8bdd\u4e0e\u533b\u751f\u3001\u6cbb\u7597\u5e08\u6216\u5176\u4ed6\u5065\u5eb7\u4e13\u5bb6\u4ea4\u8c08\uff0c\u5e76\u5728\u9002\u5f53\u7684\u65f6\u5019\u5411\u9644\u8fd1\u7684\u836f\u5e97\u53d1\u9001\u7535\u5b50\u5904\u65b9\u3002\u5b83\u5728\u82f1\u56fd\u62e5\u6709\u8d85\u8fc7230\u4e07\u6ce8\u518c\u7528\u6237\u3002\n\u603b\u90e8\u8bbe\u5728\u5229\u5179\u7684\u7f57\u91cc\u00b7\u683c\u6d1b\u5f17\u901a\u8fc7\u4e0e\u5df4\u6bd4\u4f26\u5408\u4f5c\u4f19\u4f34\u4e4b\u4e00\u5b9d\u5e15(Bupa)\u7684\u79c1\u4eba\u5065\u5eb7\u4fdd\u9669\u8ba1\u5212\u4f1a\u5458\u8d44\u683c\u83b7\u5f97\u4e86\u8fd9\u9879\u670d\u52a1\u3002\n\u5468\u4e8c\u4e0a\u5348\uff0c\u5f53\u4ed6\u53bb\u68c0\u67e5\u5904\u65b9\u65f6\uff0c\u4ed6\u6ce8\u610f\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u54a8\u8be2\u56de\u653e\u90e8\u5206\u6709\u5927\u7ea650\u4e2a\u89c6\u9891\u4e0d\u5c5e\u4e8e\u4ed6\u3002\n\u5f53\u4f60\u4f7f\u7528\u4e00\u4e2a\u53ef\u4fe1\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4f60\u4e0d\u4f1a\u671f\u671b\u770b\u5230\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u770b\u5230\u72af\u4e0b\u5982\u6b64\u91cd\u5927\u7684\u9519\u8bef\uff0c\u4ee4\u4eba\u9707\u60ca\u3002\n\u683c\u6d1b\u5f17\u8bf4\uff0c\u4ed6\u63d0\u9192\u4e86\u4e00\u4f4d\u66fe\u4e3a\u5df4\u6bd4\u4f26\u5de5\u4f5c\u7684\u540c\u4e8b\u6ce8\u610f\u8fd9\u4e00\u4e8b\u5b9e\u3002\u4ed6\u8f6c\u800c\u5411\u8be5\u516c\u53f8\u7684\u5408\u89c4\u90e8\u95e8\u6307\u51fa\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\n\u5b83\u5728\u58f0\u660e\u4e2d\u8bf4\uff0c6\u67089\u65e5\u661f\u671f\u4e8c\u4e0b\u5348\uff0c\u6211\u4eec\u53d1\u73b0\u5e76\u89e3\u51b3\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u4e24\u4e2a\u5c0f\u65f6\u5185\uff0c\u4e00\u540d\u60a3\u8005\u8bbf\u95ee\u4e86\u53e6\u4e00\u540d\u60a3\u8005\u7684\u4f1a\u8bca\u8bb0\u5f55\u4ecb\u7ecd\u3002\n\u6211\u4eec\u7684\u8c03\u67e5\u663e\u793a\uff0c\u4eca\u5929\u9884\u7ea6\u9884\u7ea6\u7684\u4e09\u540d\u60a3\u8005\u901a\u8fc7\u5df4\u6bd4\u4f26\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7528\u6237\u4e2a\u4eba\u8d44\u6599\u7684\u4e00\u4e2a\u90e8\u5206\u9519\u8bef\u5730\u663e\u793a\u4e86\u5176\u4ed6\u60a3\u8005\u7684\u4f1a\u8bca\u8bb0\u5f55\uff0c\u4f46\u6ca1\u6709\u67e5\u770b\u3002\n&#34\uff1b\u8fd9\u662f\u8f6f\u4ef6\u9519\u8bef\u800c\u4e0d\u662f\u6076\u610f\u653b\u51fb\u7684\u7ed3\u679c\u3002\u95ee\u9898\u5f88\u5feb\u5c31\u88ab\u53d1\u73b0\u548c\u89e3\u51b3\u4e86\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u975e\u5e38\u8ba4\u771f\u5730\u5bf9\u5f85\u4efb\u4f55\u5b89\u5168\u95ee\u9898\uff0c\u65e0\u8bba\u591a\u4e48\u5fae\u5c0f\uff0c\u6211\u4eec\u90fd\u4f1a\u8054\u7cfb\u53d7\u5f71\u54cd\u7684\u60a3\u8005\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u66f4\u65b0\u60c5\u51b5\uff0c\u5411\u4ed6\u4eec\u9053\u6b49\uff0c\u5e76\u63d0\u4f9b\u652f\u6301\u3002\n\u4e00\u4f4d\u53d1\u8a00\u4eba\u8bf4\uff0c\u5728\u683c\u6d1b\u5f17\u7684\u540c\u4e8b\u8054\u7cfb\u4e4b\u524d\uff0c\u5df4\u6bd4\u4f26\u7684\u5de5\u7a0b\u56e2\u961f\u5c31\u5df2\u7ecf\u610f\u8bc6\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u901a\u8fc7\u4e00\u9879\u65b0\u529f\u80fd\u610f\u5916\u5f15\u5165\u7684\uff0c\u8be5\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5728\u901a\u8bdd\u8fc7\u7a0b\u4e2d\u5c06\u57fa\u4e8e\u97f3\u9891\u7684\u54a8\u8be2\u5207\u6362\u5230\u57fa\u4e8e\u89c6\u9891\u7684\u54a8\u8be2\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u53d7\u5f71\u54cd\u7684\u7528\u6237\u4ec5\u5728\u82f1\u56fd\uff0c\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u56fd\u9645\u4e1a\u52a1\u3002\n\u4e0d\u8fc7\uff0c\u683c\u6d1b\u5f17\u8868\u793a\uff0c\u4ed6\u4ecd\u6709\u987e\u8651\uff0c\u4e0d\u6253\u7b97\u518d\u6b21\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u3002\n\u4f60\u5e0c\u671b\u4f60\u8bf4\u7684\u4efb\u4f55\u8bdd\u90fd\u662f\u79c1\u4eba\u7684\uff0c\u800c\u4e0d\u662f\u4e0e\u964c\u751f\u4eba\u5206\u4eab\u3002", "note_en": "Babylon Health has acknowledged that its GP video appointment app has suffered a data breach.\n The firm was alerted to the problem after one of its users discovered he had been given access to dozens of video recordings of other patients&#39; consultations.\n A follow-up check by Babylon revealed a small number of further UK users could also see others&#39; sessions.\n  Babylon allows its members to speak to a doctor, therapist or other health specialist via a smartphone video call and, when appropriate, sends an electronic prescription to a nearby pharmacy. It has more than 2.3 million registered users in the UK.\n  Leeds-based Rory Glover had access to the service via his membership of a private health insurance plan with Bupa, one of Babylon&#39;s partners.\n On Tuesday morning, when he went to check a prescription, he noticed he had about 50 videos in the Consultation Replays section of the app that did not belong to him.\n   &#34;You don&#39;t expect to see anything like that when you&#39;re using a trusted app. It&#39;s shocking to see such a monumental error has been made.&#34;\n Mr Glover said he alerted a work colleague to the fact, who used to work for Babylon. He in turn flagged the issue to the company&#39;s compliance department.\n    &#34;On the afternoon of Tuesday 9 June we identified and resolved an issue within two hours whereby one patient accessed the introduction of another patient&#39;s consultation recording,&#34; it said in statement.\n &#34;Our investigation showed that three patients, who had booked and had appointments today, were incorrectly presented with, but did not view, recordings of other patients&#39; consultations through a subsection of the user&#39;s profile within the Babylon app.\n &#34;This was the result of a software error rather than a malicious attack. The problem was identified and resolved quickly.\n &#34;Of course we take any security issue, however small, very seriously and have contacted the patients affected to update, apologise to and support where required.&#34;\n A spokesman said that Babylon&#39;s engineering team was already aware of the issue before it was contacted by Mr Glover&#39;s workmate.\n He said the problem had been accidentally introduced via a new feature that lets users switch from audio to video-based consultations part way through a call.\n  &#34;Affected users were in the UK only and this did not impact our international operations,&#34; he added.\n However, Mr Glover said he still had concerns and did not intend to use the service again.\n  &#34;You expect anything you say to be private, not for it to be shared with a stranger.&#34;", "posttime": "2020-06-10 06:48:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,gp,health", "title": "\u5df4\u6bd4\u4f26\u5065\u5eb7\u627f\u8ba4GP\u5e94\u7528\u7a0b\u5e8f\u906d\u9047\u6570\u636e\u6cc4\u9732", "title_en": "Babylon Health admits GP app suffered a data breach", "transed": 1, "url": "https://www.bbc.co.uk/news/technology-52986629", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "gp", "health"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005918, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53Go\u9879\u76ee\u5f00\u59cb\u65f6\uff0c\u201c\u4e00\u4e2a\u603b\u4f53\u76ee\u6807\u662fGo\u901a\u8fc7\u542f\u7528\u5de5\u5177\u3001\u81ea\u52a8\u5316\u8bf8\u5982\u4ee3\u7801\u683c\u5f0f\u5316\u4e4b\u7c7b\u7684\u5e73\u51e1\u4efb\u52a1\u4ee5\u53ca\u6d88\u9664\u5904\u7406\u5927\u578b\u4ee3\u7801\u5e93\u7684\u969c\u788d\u6765\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u6765\u5e2e\u52a9\u6b63\u5728\u5de5\u4f5c\u7684\u7a0b\u5e8f\u5458\u201d(Go FAQ)\u3002\u5341\u591a\u5e74\u540e\u7684\u4eca\u5929\uff0c\u6211\u4eec\u7ee7\u7eed\u9075\u5faa\u540c\u6837\u7684\u76ee\u6807\uff0c\u7279\u522b\u662f\u5f53\u5b83\u4e0e\u7a0b\u5e8f\u5458\u6700\u5173\u952e\u7684\u5de5\u5177\uff1a\u4ed6\u4eec\u7684\u7f16\u8f91\u5668\u6709\u5173\u65f6\u3002\n\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u56f4\u68cb\u5f00\u53d1\u4eba\u5458\u4f9d\u8d56\u4e8e\u5404\u79cd\u7f16\u8f91\u5668\u548c\u51e0\u5341\u4e2a\u72ec\u7acb\u521b\u4f5c\u7684\u5de5\u5177\u548c\u63d2\u4ef6\u3002Go\u65e9\u671f\u7684\u6210\u529f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8eGoCommunity\u521b\u5efa\u7684\u5947\u5999\u7684\u5f00\u53d1\u5de5\u5177\u3002\u56f4\u68cb\u7684VS\u4ee3\u7801\u6269\u5c55\u4f7f\u7528\u4e86\u5f88\u591a\u8fd9\u6837\u7684\u5de5\u5177\uff0c\u73b0\u5728\u670941%\u7684\u56f4\u68cb\u5f00\u53d1\u8005\u5728\u4f7f\u7528(\u56f4\u68cb\u5f00\u53d1\u8005\u8c03\u67e5)\u3002\n\u968f\u7740VS Code Go\u6269\u5c55\u7684\u6d41\u884c\u548c\u751f\u6001\u7cfb\u7edf\u7684\u6269\u5c55\uff0c\u5b83\u9700\u8981\u66f4\u591a\u7684\u7ef4\u62a4\u548c\u652f\u6301\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u4e2d\uff0cGo\u56e2\u961f\u4e0eVS Code\u56e2\u961f\u5408\u4f5c\u6765\u5e2e\u52a9Go\u6269\u5c55\u7ef4\u62a4\u4eba\u5458\u3002Go\u56e2\u961f\u8fd8\u5f00\u59cb\u4e86\u4e00\u9879\u65b0\u7684\u8ba1\u5212\uff0c\u4ee5\u6539\u8fdb\u652f\u6301\u6240\u6709Go\u7f16\u8f91\u5668\u6269\u5c55\u7684\u5de5\u5177\uff0c\u91cd\u70b9\u662f\u652f\u6301\u5e26GOPLS\u7684\u8bed\u8a00\u670d\u52a1\u5668\u534f\u8bae\u548c\u5e26Delve\u7684\u8c03\u8bd5\u9002\u914d\u5668\u534f\u8bae\u3002\n\u901a\u8fc7VS Code\u548cGo\u56e2\u961f\u4e4b\u95f4\u7684\u8fd9\u79cd\u534f\u4f5c\u5de5\u4f5c\uff0c\u6211\u4eec\u610f\u8bc6\u5230Go\u56e2\u961f\u5728\u53d1\u5c55\u56f4\u68cb\u8bed\u8a00\u4e4b\u5916\u7684\u56f4\u68cb\u5f00\u53d1\u4f53\u9a8c\u65b9\u9762\u5904\u4e8e\u72ec\u7279\u7684\u5730\u4f4d\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\u56f4\u68cb\u56e2\u961f\u4e0eVS\u4ee3\u7801\u56e2\u961f\u5408\u4f5c\u7684\u4e0b\u4e00\u9636\u6bb5\uff1a\u56f4\u68cb\u7684VS\u4ee3\u7801\u6269\u5c55\u6b63\u5f0f\u52a0\u5165\u56f4\u68cb\u9879\u76ee\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e24\u4e2a\u5173\u952e\u53d8\u5316\uff1a\n\u8be5\u9879\u76ee\u7684\u5b58\u50a8\u5e93\u6b63\u5728\u79fb\u52a8\uff0c\u4ee5\u52a0\u5165https://github.com/golang/vscode-go.\u4e0aGo\u9879\u76ee\u7684\u5176\u4f59\u90e8\u5206\u3002\n\u6211\u4eec\u5bf9\u90a3\u4e9b\u5e2e\u52a9\u5efa\u7acb\u548c\u7ef4\u6301\u8fd9\u4e00\u5fc3\u7231\u7684\u5ef6\u4f38\u7684\u4eba\u7684\u611f\u6fc0\u4e4b\u60c5\u600e\u4e48\u8bf4\u90fd\u4e0d\u4e3a\u8fc7\u3002\u6211\u4eec\u77e5\u9053\u521b\u65b0\u7684\u60f3\u6cd5\u548c\u529f\u80fd\u6765\u81ea\u60a8\uff0c\u6211\u4eec\u7684\u7528\u6237\u3002\u4f5c\u4e3a\u6269\u5c55\u7684\u6240\u6709\u8005\uff0cGo\u56e2\u961f\u7684\u4e3b\u8981\u76ee\u6807\u662f\u51cf\u8f7bGo\u793e\u533a\u7684\u7ef4\u62a4\u5de5\u4f5c\u8d1f\u62c5\u3002\u6211\u4eec\u5c06\u786e\u4fdd\u6784\u5efa\u4fdd\u6301\u7eff\u8272\uff0c\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u66f4\u65b0\u6587\u6863\u3002\u56f4\u68cb\u56e2\u961f\u6210\u5458\u5c06\u4f7f\u8d21\u732e\u8005\u4e86\u89e3\u76f8\u5173\u7684\u8bed\u8a00\u53d8\u5316\uff0c\u6211\u4eec\u5c06\u6d88\u9664\u6269\u5c55\u7684\u4e0d\u540c\u4f9d\u8d56\u5173\u7cfb\u4e4b\u95f4\u7684\u77db\u76fe\u3002\n\u8bf7\u7ee7\u7eed\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u60f3\u6cd5\uff0c\u63d0\u4ea4\u95ee\u9898\u5e76\u4e3a\u8be5\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002\u8d21\u732e\u7684\u6d41\u7a0b\u73b0\u5728\u5c06\u4e0eGo\u9879\u76ee\u7684\u5176\u4f59\u90e8\u5206\u76f8\u540c\u3002\u56f4\u68cb\u56e2\u961f\u6210\u5458\u5c06\u5728\u5730\u9f20\u677e\u5f1b\u7684#vscode\u9891\u9053\u63d0\u4f9b\u4e00\u822c\u5e2e\u52a9\uff0c\u6211\u4eec\u8fd8\u521b\u5efa\u4e86#vscode-dev\u9891\u9053\uff0c\u4e0e\u8d21\u732e\u8005\u8ba8\u8bba\u95ee\u9898\u548c\u96c6\u601d\u5e7f\u76ca\u3002\n\u6211\u4eec\u5bf9\u8fd9\u4e00\u65b0\u7684\u8fdb\u6b65\u611f\u5230\u5174\u594b\uff0c\u5e0c\u671b\u60a8\u4e5f\u662f\u5982\u6b64\u3002\u901a\u8fc7\u7ef4\u62a4\u4e3b\u8981\u7684\u56f4\u68cb\u7f16\u8f91\u5668\u6269\u5c55\uff0c\u4ee5\u53ca\u56f4\u68cb\u5de5\u5177\u548c\u8bed\u8a00\uff0c\u56f4\u68cb\u56e2\u961f\u5c06\u80fd\u591f\u4e3a\u6240\u6709\u56f4\u68cb\u7528\u6237\u63d0\u4f9b\u66f4\u6709\u51dd\u805a\u529b\u548c\u66f4\u7cbe\u81f4\u7684\u5f00\u53d1\u4f53\u9a8c\uff0c\u800c\u65e0\u8bba\u4ed6\u4eec\u7684\u7f16\u8f91\u662f\u8c01\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4e0d\u53d8\u7684\uff1a\u6bcf\u4e2a\u7528\u6237\u90fd\u5e94\u8be5\u62e5\u6709\u7f16\u5199Go\u4ee3\u7801\u7684\u51fa\u8272\u4f53\u9a8c\u3002", "note_en": "When the Go project began, \u201can overarching goal was that Go do more to help theworking programmer by enabling tooling, automating mundane tasks such as codeformatting, and removing obstacles to working on large code bases\u201d( Go FAQ).Today, more than a decade later, we continue to be guided by that same goal,especially as it pertains to the programmer\u2019s most critical tool: their editor.\n Throughout the past decade, Go developers have relied on a variety of editorsand dozens of independently authored tools and plugins. Much of Go\u2019s earlysuccess can be attributed to the fantastic development tools created by the Gocommunity. The VS Code extension for Go, built usingmany of these tools, is now used by 41 percent of Go developers( Go developer survey).\n As the VS Code Go extension grows in popularity and as the ecosystem expands, itrequires more maintenance and support.Over the past few years, the Go team has collaborated with the VS Code team tohelp the Go extension maintainers. The Go team also began a new initiative toimprove the tools powering all Go editor extensions, with a focus on supportingthe Language Server Protocolwith   gopls and the Debug Adapter Protocol with Delve.\n Through this collaborative work between the VS Code and Go teams, we realizedthat the Go team is uniquely positioned to evolve the Go development experiencealongside the Go language.\n As a result, we\u2019re happy to announce the next phase in the Go team\u2019spartnership with the VS Code team:  The VS Code extension for Go is officiallyjoining the Go project. With this come two critical changes:\n The project\u2019s repository is moving to join the rest of the Go project at  https://github.com/golang/vscode-go.\n We cannot overstate our gratitude to those who have helpedbuild and maintain this beloved extension. We know that innovative ideas andfeatures come from you, our users. The Go team\u2019s primary aim as owners of theextension is to reduce the burden of maintenance work on the Go community.We\u2019ll make sure the builds stay green, the issues get triaged, and the docs getupdated. Go team members will keep contributors abreast of relevant languagechanges, and we\u2019ll smooth the rough edges between the extension\u2019s differentdependencies.\n Please continue to share your thoughts with us by filing issues and making contributionsto the project. The process for contributing will now be the same as for the rest of the Go project. Go teammembers will offer general help in the #vscode channel on Gophers Slack, and we\u2019ve also createda #vscode-dev channel to discuss issues and brainstorm ideas with contributors.\n We\u2019re excited about this new step forward, and we hope you are too.By maintaining a major Go editor extension, as well as the Go tooling andlanguage, the Go team will be able to provide all Go users, regardless of theireditor, a more cohesive and refined development experience.\n As always, our goal remains the same: Every user should have an excellentexperience writing Go code.", "posttime": "2020-06-10 06:47:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6269\u5c55,extension,\u56f4\u68cb", "title": "VS Code Go\u6269\u5c55\u52a0\u5165\u4e86Go\u9879\u76ee", "title_en": "The VS Code Go extension joins the Go project", "transed": 1, "url": "https://blog.golang.org/vscode-go", "via": "", "real_tags": ["\u6269\u5c55", "extension", "\u56f4\u68cb"]}, {"category": "", "categoryclass": "", "imagename": "dc13a89db3acad775563ccc40902218e.jpg", "infoid": 1005917, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u7684\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5f00\u53d1\u51fa\u6240\u8c13\u7684\u795e\u7ecf\u8f6c\u8bd1\u5668\uff0c\u8fd9\u662f\u4e00\u79cd\u5c06\u4ee3\u7801\u4ece\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00(\u5982C++\u3001Java\u548cPython)\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7684\u7cfb\u7edf\u3002\u5b83\u662f\u65e0\u4eba\u76d1\u7763\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5728\u6ca1\u6709\u6807\u7b7e\u7684\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u4ee5\u524d\u6ca1\u6709\u68c0\u6d4b\u5230\u7684\u6a21\u5f0f\uff0c\u5e76\u4e14\u53ea\u9700\u6700\u5c11\u7684\u4eba\u5de5\u76d1\u7763\uff0c\u636e\u62a5\u9053\uff0c\u5b83\u7684\u8868\u73b0\u6bd4\u57fa\u4e8e\u89c4\u5219\u7684\u57fa\u7ebf\u201c\u663e\u8457\u201d\u9ad8\u51fa\u4e00\u5927\u622a\u3002\n\u5c06\u73b0\u6709\u4ee3\u7801\u5e93\u8fc1\u79fb\u5230\u73b0\u4ee3\u6216\u66f4\u9ad8\u6548\u7684\u8bed\u8a00(\u5982Java\u6216C++)\u9700\u8981\u6e90\u8bed\u8a00\u548c\u76ee\u6807\u8bed\u8a00\u7684\u4e13\u4e1a\u77e5\u8bc6\uff0c\u800c\u4e14\u6210\u672c\u901a\u5e38\u5f88\u9ad8\u3002\u4f8b\u5982\uff0c\u6fb3\u5927\u5229\u4e9a\u8054\u90a6\u94f6\u884c\u5728\u4e94\u5e74\u7684\u65f6\u95f4\u91cc\u82b1\u8d39\u4e86\u5927\u7ea67.5\u4ebf\u7f8e\u5143\u5c06\u5176\u5e73\u53f0\u4eceCOBOL\u8f6c\u6362\u5230Java\u3002\u8f6c\u8bd1\u5668\u5728\u7406\u8bba\u4e0a\u53ef\u80fd\u6709\u5e2e\u52a9-\u5b83\u4eec\u6d88\u9664\u4e86\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u4ee3\u7801\u7684\u9700\u8981-\u4f46\u5728\u5b9e\u8df5\u4e2d\u5f88\u96be\u6784\u5efa\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u8bed\u8a00\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u8bed\u6cd5\uff0c\u5e76\u4f9d\u8d56\u4e8e\u72ec\u7279\u7684\u5e73\u53f0API\u3001\u6807\u51c6\u5e93\u51fd\u6570\u548c\u53d8\u91cf\u7c7b\u578b\u3002\nFacebook\u7684\u7cfb\u7edf-\u4ee3\u7801\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u5728C++\u3001Java\u548cPython\u4e4b\u95f4\u8f6c\u6362-\u901a\u8fc7\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u5b66\u4e60\u65b9\u6cd5\u89e3\u51b3\u4e86\u8fd9\u4e00\u6311\u6218\u3002\u4ee3\u7801\u8f6c\u6362\u5668\u9996\u5148\u4f7f\u7528\u8de8\u8bed\u8a00\u8bed\u8a00\u6a21\u578b\u9884\u8bad\u7ec3\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5b83\u5c06\u8868\u793a\u76f8\u540c\u6307\u4ee4\u7684\u4ee3\u7801\u7247\u65ad\u6620\u5c04\u5230\u76f8\u540c\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u800c\u4e0e\u7f16\u7a0b\u8bed\u8a00\u65e0\u5173\u3002(\u6e90\u4ee3\u7801\u5e8f\u5217\u7684\u8f93\u5165\u6d41\u662f\u968f\u673a\u5c4f\u853d\u7684\uff0c\u4ee3\u7801\u8f6c\u6362\u5668\u7684\u4efb\u52a1\u662f\u6839\u636e\u4e0a\u4e0b\u6587\u9884\u6d4b\u5c4f\u853d\u7684\u90e8\u5206\u3002)\u3002\u4e00\u79cd\u79f0\u4e3a\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u7684\u8fc7\u7a0b\u8bad\u7ec3\u7cfb\u7edf\u751f\u6210\u6709\u6548\u5e8f\u5217\uff0c\u5373\u4f7f\u5728\u8f93\u5165\u6709\u566a\u58f0\u7684\u8f93\u5165\u6570\u636e\u65f6\u4e5f\u662f\u5982\u6b64\uff0c\u800c\u53cd\u5411\u8f6c\u6362\u5141\u8bb8\u4ee3\u7801\u8f6c\u6362\u5668\u751f\u6210\u53ef\u7528\u4e8e\u8bad\u7ec3\u7684\u5e76\u884c\u6570\u636e\u3002\n\u4ee3\u7801\u8f6c\u6362\u5668\u7684\u8de8\u8bed\u8a00\u7279\u6027\u6e90\u4e8e\u8de8\u7f16\u7a0b\u8bed\u8a00\u5b58\u5728\u7684\u516c\u5171\u6807\u8bb0(\u951a\u70b9)\u7684\u6570\u91cf\uff0c\u8fd9\u4e9b\u6807\u8bb0\u6765\u81ea\u8bf8\u5982\u201cfor\u201d\u3001\u201cWhile\u201d\u3001\u201cif\u201d\u548c\u201ctry\u201d\u7b49\u5e38\u89c1\u5173\u952e\u5b57\uff0c\u4ee5\u53ca\u6e90\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u6570\u5b57\u3001\u6570\u5b66\u8fd0\u7b97\u7b26\u548c\u82f1\u8bed\u5b57\u7b26\u4e32\u3002\u53cd\u5411\u7ffb\u8bd1\u901a\u8fc7\u5c06\u6e90\u5230\u76ee\u6807\u6a21\u578b\u4e0e\u5e76\u884c\u8bad\u7ec3\u7684\u201c\u540e\u5411\u201d\u76ee\u6807\u5230\u6e90\u6a21\u578b\u76f8\u8026\u5408\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u7ffb\u8bd1\u8d28\u91cf\u3002\u76ee\u6807\u5230\u6e90\u6a21\u578b\u7528\u4e8e\u5c06\u76ee\u6807\u5e8f\u5217\u7ffb\u8bd1\u6210\u6e90\u8bed\u8a00\uff0c\u4ea7\u751f\u6709\u566a\u6e90\u5e8f\u5217\uff0c\u800c\u6e90\u5230\u76ee\u6807\u6a21\u578b\u5e2e\u52a9\u4ece\u566a\u58f0\u6e90\u91cd\u6784\u76ee\u6807\u5e8f\u5217\uff0c\u76f4\u5230\u4e24\u4e2a\u6a21\u578b\u6536\u655b\u3002\nVB Transform 2020 Online-7\u670815-17\u65e5\u3002\u52a0\u5165\u9886\u5148\u7684\u4eba\u5de5\u667a\u80fd\u9ad8\u7ba1\uff1a\u6ce8\u518c\u514d\u8d39\u76f4\u64ad\u3002\nFacebook\u7684\u7814\u7a76\u4eba\u5458\u5728\u4e00\u4e2a\u516c\u5171\u7684GitHub\u8bed\u6599\u5e93\u4e0a\u5bf9\u4ee3\u7801\u8f6c\u6362\u5668\u8fdb\u884c\u4e86\u57f9\u8bad\uff0c\u8bed\u6599\u5e93\u5305\u542b\u8d85\u8fc7280\u4e07\u4e2a\u5f00\u6e90\u5b58\u50a8\u5e93\uff0c\u76ee\u6807\u662f\u5728\u529f\u80fd\u5c42\u9762\u8fdb\u884c\u7ffb\u8bd1\u3002(\u5728\u7f16\u7a0b\u4e2d\uff0c\u51fd\u6570\u662f\u7528\u4e8e\u6267\u884c\u5355\u4e2a\u76f8\u5173\u64cd\u4f5c\u7684\u53ef\u91cd\u7528\u4ee3\u7801\u5757\u3002)\u3002\u5728\u5bf9\u6240\u6709\u53ef\u7528\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u8f6c\u6362\u5668\u9884\u57f9\u8bad\u4e4b\u540e\uff0c\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u548c\u53cd\u5411\u7ffb\u8bd1\u7ec4\u4ef6\u4ec5\u5728\u529f\u80fd\u4e0a\u8fdb\u884c\u57f9\u8bad\uff0c\u5728\u5177\u6709\u5927\u7ea66,000\u4e2a\u4ee4\u724c\u7684\u6279\u6b21\u7ec4\u4ef6\u4e4b\u95f4\u4ea4\u66ff\u3002\n\u4e3a\u4e86\u8bc4\u4f30\u4ee3\u7801\u8f6c\u6362\u5668\u7684\u6027\u80fd\uff0c\u7814\u7a76\u4eba\u5458\u4eceGeeksforGeek\u63d0\u53d6\u4e86852\u4e2a\u7528C++\u3001Java\u548cPython\u7f16\u5199\u7684\u5e76\u884c\u51fd\u6570\uff0cGeeksforGeek\u662f\u4e00\u4e2a\u6536\u96c6\u7f16\u7801\u95ee\u9898\u5e76\u7528\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848\u7684\u5728\u7ebf\u5e73\u53f0\u3002\u5229\u7528\u8fd9\u4e9b\uff0c\u4ed6\u4eec\u5f00\u53d1\u4e86\u4e00\u79cd\u65b0\u7684\u8861\u91cf\u6807\u51c6-\u8ba1\u7b97\u7cbe\u5ea6-\u6d4b\u8bd5\u5047\u8bbe\u51fd\u6570\u5728\u7ed9\u5b9a\u76f8\u540c\u8f93\u5165\u65f6\u662f\u5426\u4f1a\u4ea7\u751f\u4e0e\u53c2\u8003\u76f8\u540c\u7684\u8f93\u51fa\u3002\nFacebook\u6307\u51fa\uff0c\u867d\u7136\u6027\u80fd\u6700\u597d\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u7248\u672c\u5e76\u6ca1\u6709\u751f\u6210\u8bb8\u591a\u4e0e\u53c2\u8003\u8d44\u6599\u4e25\u683c\u76f8\u540c\u7684\u51fd\u6570\uff0c\u4f46\u5176\u7ffb\u8bd1\u7684\u8ba1\u7b97\u7cbe\u5ea6\u5f88\u9ad8\u3002\u4ed6\u4eec\u5c06\u6b64\u5f52\u56e0\u4e8e\u6ce2\u675f\u641c\u7d22\u7684\u7ed3\u5408\uff0c\u8fd9\u662f\u4e00\u79cd\u7ef4\u62a4\u4e00\u7ec4\u90e8\u5206\u89e3\u7801\u7684\u5e8f\u5217\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u5e8f\u5217\u88ab\u9644\u52a0\u5230\u5f62\u6210\u7684\u5e8f\u5217\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u8bc4\u5206\uff0c\u8fd9\u6837\u6700\u597d\u7684\u5e8f\u5217\u5c31\u4f1a\u5192\u6ce1\u5230\u9876\u90e8\uff1a\n\u5f53\u4eceC++\u8f6c\u6362\u5230Java\u65f6\uff0c74.8%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u5f53\u4eceC++\u8f6c\u6362\u5230Python\u65f6\uff0c67.2%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u5f53\u4eceJava\u8f6c\u6362\u5230C++\u65f6\uff0c91.6%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u5f53\u4ecePython\u8f6c\u6362\u5230Java\u65f6\uff0c56.1%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u5f53\u4ecePython\u8f6c\u6362\u5230C++\u65f6\uff0c57.8%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u5f53\u4eceJava\u8f6c\u6362\u5230Python\u65f6\uff0c68.7%\u7684\u4ee3\u7801\u8f6c\u6362\u5668\u4ee3\u8fd4\u56de\u4e86\u9884\u671f\u7684\u8f93\u51fa\u3002\n\u6839\u636e\u7814\u7a76\u4eba\u5458\u7684\u8bf4\u6cd5\uff0c\u4ee3\u7801\u8f6c\u6362\u5668\u5728\u5b9e\u9a8c\u4e2d\u5c55\u793a\u4e86\u5bf9\u6bcf\u79cd\u8bed\u8a00\u7279\u5b9a\u7684\u8bed\u6cd5\u4ee5\u53ca\u8bed\u8a00\u7684\u6570\u636e\u7ed3\u6784\u548c\u65b9\u6cd5\u7684\u7406\u89e3\uff0c\u5e76\u4e14\u5b83\u5728\u9002\u5e94\u5c0f\u7684\u4fee\u6539(\u5982\u5f53\u8f93\u5165\u4e2d\u7684\u53d8\u91cf\u88ab\u91cd\u547d\u540d\u65f6)\u7684\u540c\u65f6\uff0c\u5728\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u6b63\u786e\u5730\u5bf9\u9f50\u5e93\u3002\u867d\u7136\u5b83\u5e76\u4e0d\u5b8c\u7f8e-\u4f8b\u5982\uff0c\u4ee3\u7801\u8f6c\u6362\u5668\u5728\u751f\u6210\u8fc7\u7a0b\u4e2d\u672a\u80fd\u8003\u8651\u5230\u67d0\u4e9b\u53d8\u91cf\u7c7b\u578b-\u4f46\u5b83\u7684\u8868\u73b0\u4f18\u4e8e\u4f7f\u7528\u4e13\u5bb6\u77e5\u8bc6\u624b\u52a8\u91cd\u5199\u89c4\u5219\u7684\u6846\u67b6\u3002\n\u201c\u4ee3\u7801\u8f6c\u6362\u5668\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a8\u5e7f\u5230\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u4e13\u4e1a\u77e5\u8bc6\uff0c\u800c\u4e14\u6027\u80fd\u8fdc\u8fdc\u8d85\u8fc7\u5546\u4e1a\u89e3\u51b3\u65b9\u6848\uff0c\u201d\u5408\u8457\u8005\u5199\u9053\u3002\u201c\u6211\u4eec\u7684\u7ed3\u679c\u8868\u660e\uff0c\u901a\u8fc7\u5411\u89e3\u7801\u5668\u6dfb\u52a0\u7b80\u5355\u7684\u7ea6\u675f\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u51fd\u6570\u5728\u8bed\u6cd5\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u6216\u8005\u901a\u8fc7\u4f7f\u7528\u4e13\u7528\u67b6\u6784\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4fee\u590d\u6a21\u578b\u4e2d\u7684\u8bb8\u591a\u9519\u8bef\u3002\u201d\nFacebook\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u5f00\u53d1\u4ee3\u7801\u751f\u6210\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\u7684\u7ec4\u7ec7\u3002\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u5fae\u8f6f\u6784\u5efa\u5927\u4f1a\u4e0a\uff0cOpenAI\u6f14\u793a\u4e86\u4e00\u4e2a\u57fa\u4e8eGitHub\u5b58\u50a8\u5e93\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u82f1\u8bed\u6ce8\u91ca\u6765\u751f\u6210\u6574\u4e2a\u51fd\u6570\u3002\u4e24\u5e74\u524d\uff0c\u83b1\u65af\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aBayou\u7684\u7cfb\u7edf\uff0c\u5b83\u80fd\u591f\u901a\u8fc7\u5c06\u201c\u610f\u56fe\u201d\u5173\u8054\u5230\u516c\u5f00\u53ef\u7528\u7684\u4ee3\u7801\u540e\u9762\u6765\u7f16\u5199\u81ea\u5df1\u7684\u8f6f\u4ef6\u7a0b\u5e8f\u3002\n\u82f1\u7279\u5c14\u5b9e\u9a8c\u5ba4\u9996\u5e2d\u79d1\u5b66\u5bb6\u517c\u4e3b\u4efb\u8d3e\u65af\u6c40\u00b7\u6208\u7279\u65bd\u5229\u5e0c(Justin Gottschlich)\u5728\u6700\u8fd1\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\u544a\u8bc9VentureBeat\uff1a\u201c(\u50cf\u8fd9\u6837\u7684\u7a0b\u5e8f)\u771f\u7684\u53ea\u662f\u8bd5\u56fe\u6d88\u9664\u521b\u5efa\u8f6f\u4ef6\u7684\u7ec6\u679d\u672b\u8282\u3002\u201d\u201c(\u4ed6\u4eec)\u53ef\u4ee5\u5e2e\u52a9\u52a0\u5feb\u2026\u7684\u751f\u4ea7\u6548\u7387\u3002(\u901a\u8fc7\u5904\u7406)\u7a83\u542c\u3002(\u4ed6\u4eec\u53ef\u4ee5)\u589e\u52a0(\u79d1\u6280\u884c\u4e1a)\u7684\u5de5\u4f5c\u5c97\u4f4d\u6570\u91cf\uff0c\u56e0\u4e3a\u6ca1\u6709\u7f16\u7a0b\u80cc\u666f\u7684\u4eba\u5c06\u80fd\u591f\u5229\u7528\u4ed6\u4eec\u7684\u521b\u9020\u6027\u76f4\u89c9\uff0c\u901a\u8fc7\u8fd9\u4e9b\u610f\u5411\u6027\u754c\u9762\u901a\u8fc7\u673a\u5668\u6355\u6349\u5230\u8fd9\u4e00\u70b9\u3002", "note_en": "Facebook researchers say they\u2019ve developed what they call a neural transcompiler, a system that converts code from one high-level programming language like C++, Java, and Python into another. It\u2019s unsupervised, meaning it looks for previously undetected patterns in data sets without labels and with a minimal amount of human supervision, and it reportedly outperforms rule-based baselines by a \u201csignificant\u201d margin.\n Migrating an existing codebase to a modern or more efficient language like Java or C++ requires expertise in both the source and target languages, and it\u2019s often costly. For example, the Commonwealth Bank of Australia  spent around $750 million over the course of five years to convert its platform from COBOL to Java. Transcompilers could help in theory \u2014 they eliminate the need to rewrite code from scratch \u2014 but they\u2019re difficult to build in practice because different languages can have a different syntax and rely on distinctive platform APIs, standard-library functions, and variable types.\n  Facebook\u2019s system \u2014  TransCoder, which can translate between C++, Java, and Python \u2014 tackles the challenge with an unsupervised learning approach. TransCoder is first initialized with cross-lingual language model pretraining, which maps pieces of code expressing the same instructions to identical representations regardless of programming language. (Input streams of source code sequences are randomly masked out, and TransCoder is tasked with predicting the masked-out portions based on context.) A process called denoising auto-encoding trains the system to generate valid sequences even when fed with noisy input data, and back-translation allows TransCoder to generate parallel data that can be used for training.\n The cross-lingual nature of TransCoder arises from the number of common tokens \u2014 anchor points \u2014 existing across programming languages, which come from common keywords like \u201cfor,\u201d \u201cwhile,\u201d \u201cif,\u201d and \u201ctry\u201d and also digits, mathematical operators, and English strings that appear in the source code. Back-translation serves to improve the system\u2019s translation quality by coupling a source-to-target model with a \u201cbackward\u201d target-to-source model trained in parallel. The target-to-source model is used to translate target sequences into the source language, producing noisy source sequences, while the source-to-target model helps to reconstruct the target sequences from the noisy sources until the two models converge.\n  VB Transform 2020 Online - July 15-17. Join leading AI executives:  Register for the free livestream.\n The Facebook researchers trained TransCoder on a public GitHub corpus containing over 2.8 million open source repositories, targeting translation at the function level. (In programming, functions are blocks of reusable code that are used to perform a single, related action.) After pretraining TransCoder on all source code available, the denoising auto-encoding and back-translation components were trained on functions only, alternating between the components with batches of around 6,000 tokens.\n To evaluate TransCoder\u2019s performance, the researchers extracted 852 parallel functions in C++, Java, and Python from GeeksforGeeks, an online platform that gathers coding problems and presents solutions in several programming languages. Using these, they developed a new metric \u2014 computational accuracy \u2014 that tests whether hypothesis functions generate the same outputs as a reference when given the same inputs.\n Facebook notes that while the best-performing version of TransCoder didn\u2019t generate many functions  strictly identical to the references, its translations had high computational accuracy. They attribute this to the incorporation of beam search, a method that maintains a set of partially decoded sequences that are appended to form sequences and then scored so the best sequences bubble to the top:\n When translating from C++ to Java, 74.8% of TransCoder\u2019s generations returned the expected outputs.\n When translating from C++ to Python, 67.2% of TransCoder\u2019s generations returned the expected outputs.\n When translating from Java to C++, 91.6% of TransCoder\u2019s generations returned the expected outputs.\n When translating from Python to Java, 56.1% of TransCoder\u2019s generations returned the expected outputs.\n When translating from Python to C++, 57.8% of TransCoder\u2019s generations returned the expected outputs.\n When translating from Java to Python, 68.7% of TransCoder\u2019s generations returned the expected outputs.\n According to the researchers, TransCoder demonstrated an understanding of the syntax specific to each language as well as the languages\u2019 data structures and their methods during experiments, and it correctly aligned libraries across programming languages while adapting to small modifications (like when a variable in the input was renamed). And while it wasn\u2019t perfect \u2014 TransCoder failed to account for certain variable types during generation, for example \u2014 it outperformed frameworks that rewrite rules manually built using expert knowledge.\n \u201cTransCoder can easily be generalized to any programming language, does not require any expert knowledge, and outperforms commercial solutions by a large margin,\u201d the coauthors wrote. \u201cOur results suggest that a lot of mistakes made by the model could easily be fixed by adding simple constraints to the decoder to ensure that the generated functions are syntactically correct, or by using dedicated architectures.\u201d\n Facebook isn\u2019t the only organization developing code-generating AI systems. During  Microsoft\u2019s Build conference earlier this year, OpenAI  demoed a model trained on GitHub repositories that uses English-language comments to generate entire functions. And two years ago, researchers at Rice University created a system \u2014  Bayou \u2014 that\u2019s able to write its own software programs by associating \u201cintents\u201d behind publicly available code.\n \u201c[Programs like these are] really just trying to eliminate the minutiae of creating software,\u201d principal scientist and director at Intel Labs Justin Gottschlich told VentureBeat in a recent interview. \u201c[They] could help accelerate productivity \u2026 [by taking care of] bugging. [And they could] increase the number of jobs [in tech] because people who don\u2019t have a programming background will be able to take their creative intuition and capture that via machine by these intentionality interfaces.\u201d", "posttime": "2020-06-10 06:46:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,\u4ee3\u7801,programming,facebook,transcoder", "title": "Facebook\u7684\u4ee3\u7801\u8f6c\u6362\u5668AI\u53ef\u4ee5\u5728\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u8f6c\u6362", "title_en": "Facebook\u2019s TransCoder AI Translates Between Programming Languages", "transed": 1, "url": "https://venturebeat.com/2020/06/08/facebooks-transcoder-ai-converts-code-from-one-programming-language-into-another/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u4ee3\u7801", "facebook"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005916, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\uff0c\u60a8\u9700\u8981\u5b9a\u671f\u5411\u67d0\u4e9b\u7528\u6237\u53d1\u9001\u7535\u5b50\u90ae\u4ef6(\u4f8b\u5982\uff0c\u65f6\u4e8b\u901a\u8baf)\u3002\n\u4ee5MongoDB\u4e3a\u4f8b\uff0c\u5f53\u7136\u6301\u4e45\u6027\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u559c\u597d\u8fdb\u884c\u66f4\u6539\u3002\n\u4e3a\u60a8\u7684\u5185\u90e8\u6a21\u5757\u548c\u529f\u80fd\u5236\u5b9a\u660e\u786e\u7684\u5408\u4f5c\u8005\u548c\u804c\u8d23\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u5982\u679c\u60a8\u901a\u8fc7\u4f7f\u7528TDD\u6d4b\u8bd5\u9a71\u52a8\u5e94\u7528\u7a0b\u5e8f\u6765\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u51e0\u4e4e\u662f\u514d\u8d39\u7684\u3002\nTEST(\u5411\u5c1a\u672a\u6536\u5230\u65b0\u95fb\u7a3f\u7684\u7528\u6237\u53d1\u9001\u65b0\u95fb\u7a3f&#39\uff1b\uff0c\u5f02\u6b65t=&gt\uff1b{\u7b49\u5f85UserRepository.insert({name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#39\uff1b\uff0clastEmailSentAt\uff1anull})\u7b49\u5f85\u65b0\u95fb\u7a3f\u3002run()//\u6211\u5e94\u8be5\u5728\u6b64\u58f0\u660e\u4ec0\u4e48\uff1f//\u6211\u4eec\u9700\u8981\u65b0\u95fb\u7a3f\u7684\u534f\u4f5c\u8005.})\u3002\n\u4e3a\u4e86\u5b9a\u4e49\u5408\u4f5c\u8005\uff0c\u6211\u5c1d\u8bd5\u9075\u5faa\u5355\u4e00\u8d23\u4efb\u539f\u5219(\u6765\u81ea\u53ef\u9760\u539f\u5219\u5bb6\u65cf)\u3002\n\u60a8\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\uff0c\u4ece\u4e1a\u52a1\u89d2\u5ea6\u6765\u770b\u5f85\u5b83\uff1a\n\u8c01\u662f\u4e0e\u7279\u5b9a\u8f6f\u4ef6\u7ec4\u4ef6\u6216\u6a21\u5757\u76f8\u5173\u8054\u7684&#34\uff1b\u89d2\u8272(\u5982\u4e2a\u4eba\u6216\u4e1a\u52a1\u90e8\u95e8)\uff1f\n\u5b83\u65ad\u8a00\u5728\u8c03\u7528findNotYetReceivedNewsletter\u65b9\u6cd5\u65f6\uff0c\u8fd4\u56de\u4e86\u6b63\u786e\u7684\u7528\u6237\u6570\u3002\n\u6d4b\u8bd5(&#39\uff1b\u67e5\u627e\u5c1a\u672a\u6536\u5230\u65f6\u4e8b\u901a\u8baf\u7684\u7528\u6237&#39\uff1b\uff0c\u5f02\u6b65t=&gt\uff1b{\u7b49\u5f85UsersCollection.insert({name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#39\uff1b\uff0clastEmailSentAt\uff1aNew Date()})\u7b49\u5f85UsersCollection.insert({name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4\u3002)const Users=await userRepository.findNotYetReceivedNewsletter()t.true(Array.isArray(Users))t.is(users.length\uff0c1)t.true(UsersCollection.find.calledOnce)t.true(UsersCollection.find.calledWith({lastEmailSentAt\uff1anull}))})\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u5b9e\u9645\u53d1\u9001\u662f\u5df2\u6e05\u9664\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5b9e\u9645\u53d1\u9001\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6\u3002\ntest(\u5c06\u65f6\u4e8b\u901a\u8baf\u53d1\u9001\u7ed9\u7528\u6237&#39\uff1b\uff0c\u5f02\u6b65t=&gt\uff1b{const user={name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#39\uff1b\uff0clastEmailSentAt\uff1anull}const emailStub=sinon.stub(email\uff0c&#39\uff1bsend&#39\uff1b)\u7b49\u5f85emailService.sendTo(User)t.is(emailStub.callCount\uff0c\n\u4eba\u4eec\u53ef\u80fd\u503e\u5411\u4e8e\u5c06\u6240\u6709\u903b\u8f91\u653e\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u7136\u540e\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\n\u5b83\u53ef\u80fd\u4f1a\u594f\u6548\uff0c\u4f46\u80fd\u6301\u7eed\u591a\u4e45\u5462\uff1f\u6216\u8005\u66f4\u597d\u7684\u662f\uff1a\u5982\u4f55\u6709\u6548\u5730\u6d4b\u8bd5\u5b83\uff1f\n\u5728\u7b2c\u4e00\u4e2aUAT\u4e2d\uff0c\u6211\u8ba4\u4e3a\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u65f6\u4e8b\u901a\u8baf\u6a21\u5757\uff0c\u81f3\u5c11\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u6765\u68c0\u7d22\u7528\u6237\u3002\n\u8ba9\u6211\u4eec\u5728UserRepository\u4e2d\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u5e76\u65ad\u8a00\u5df2\u67e5\u8be2Users\u96c6\u5408\u4ee5\u67e5\u627e\u5c1a\u672a\u6536\u5230\u65f6\u4e8b\u901a\u8baf\u7684\u7528\u6237\uff1a\ntest(&#39\uff1b\u5411\u5c1a\u672a\u6536\u5230\u7684\u7528\u6237\u53d1\u9001\u65f6\u4e8b\u901a\u8baf&#39\uff1b\uff0c\u5f02\u6b65t=&gt\uff1b{\u7b49\u5f85db.get(&#39\uff1b\u7528\u6237&#39\uff1b).insert({name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#39\uff1b\uff0clastEmailSentAt\uff1anull})sinon.spy(userRepository\uff0c&#39\uff1bfindNotYetReceivedNewsLetter&)\u3002)\u7b49\u5f85\u65f6\u4e8b\u901a\u8baf\u3002\u8fd0\u884c(\u7528\u6237\u5b58\u50a8\u5e93)t.is(userRepository.findNotYetReceivedNewsletter.callCount\uff0c1)//\u6211\u4eec\u4ecd\u9700\u8981\u534f\u4f5c\u8005\u6765\u53d1\u9001\u65f6\u4e8b\u901a\u8baf.})\u3002\n\u4f7f\u7528.spy\uff0c\u56e0\u4e3a\u6211\u5e0c\u671b\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5e76\u5728\u7a0d\u540e\u65ad\u8a00\u51fd\u6570\u5df2\u88ab\u8c03\u7528\u3002\n\u5bf9\u4e8e\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4e0d\u5e0c\u671b\u8c03\u7528\u771f\u6b63\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u4f7f\u7528.stub\u3002\n\u6211\u5728\u6d4b\u8bd5\u4e2d\u4f20\u5165\u4e86\u5408\u4f5c\u8005\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u4f7f\u7528\u771f\u6b63\u7684\u5b9e\u73b0\u3002\n\u5f02\u6b65\u51fd\u6570\u8fd0\u884c(userRepository\uff0cemailService){const Users=await userRepository.findNotYetReceivedNewster()for(\u7528\u6237\u7684const\u7528\u6237){await emailService.sendTo(User)}}\u3002\ntest(&#39\uff1b\u5411\u5c1a\u672a\u6536\u5230\u7684\u7528\u6237\u53d1\u9001\u65f6\u4e8b\u901a\u8baf&#39\uff1b\uff0c\u5f02\u6b65t=&gt\uff1b{\u7b49\u5f85db.get(&#39\uff1b\u7528\u6237&#39\uff1b).insert({name\uff1a&#39\uff1btest&#39\uff1b\uff0cemail\uff1a&#39\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#39\uff1b\uff0clastEmailSentAt\uff1anull})sinon.spy(userRepository\uff0c&#39\uff1bfindNotYetReceivedNewsLetter&)\u3002)\u7b49\u5f85\u65f6\u4e8b\u901a\u8baf.run(userRepository\uff0cemailService)t.is(userRepository.findNotYetReceivedNewsletter.callCount\uff0c1)t.is(emailService.sendTo.callCount\uff0c1)//\u5b9e\u73b0\u60a8\u5173\u4e8e\u53c2\u6570\u7684\u65ad\u8a00\uff0c\u5982\u7535\u5b50\u90ae\u4ef6\u7684&#34\uff1b\u6536\u4ef6\u4eba&#34\uff1b\uff0c&#34\uff1b\u4e3b\u9898&#34\uff1b\uff0c&#34\uff1b\u5185\u5bb9\u7b49})\u3002\n\u251c\u2500\u2500index.js\u251c\u2500\u2500index.test.js\u251c\u2500\u2500lib\u2502\u251c\u2500\u2500db.js\u2502\u251c\u2500\u2500Email-Service.js\u2502\u251c\u2500\u2500Email-Service.test.js\u2502\u251c\u2500\u2500email.js\u2502\u251c\u2500\u2500email.test.js\u2502\u251c\u2500\u2500User-Repository.js\u2502\u2514\u2500\u2500User-Repository.test.js\u251c\u2500\u2500Package.lock.json\u2514\u2500\u2500Package.json\u3002\n\u5176\u4ed6\u8f6f\u4ef6\u7ec4\u4ef6\u90fd\u7ecf\u8fc7\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770bGitHub\u4e0a\u7684\u9879\u76ee\n\u6bcf\u4e2a\u5408\u4f5c\u8005\u90fd\u6709\u81ea\u5df1\u7684\u6d4b\u8bd5(\u9664\u4e86lib/db.js\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u56f4\u7ed5monk\u7684\u7b80\u5355\u5305\u88c5\u5668\uff0c\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u5f88\u597d\u7684\u6d4b\u8bd5)\u3002\njs\u662f\u9009\u62e9\u7528\u6765\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684API\u7684\u5305\u88c5\u5668\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u516c\u5f00\u7684\u51fd\u6570.Send\u3002", "note_en": "You need to send a recurring email to some users (a newsletter for example), based on some business logic.\n          MongoDB as an example, but of course the persistence can be changed at your liking\n   It&#39;s important to come up with clear collaborators and responsibilities for your internal modules and functions.\n This comes almost for free if you start your application by test-driving it using TDD.\n     test(&#39;sends a newsletter to users that did not yet receive it&#39;, async t =&gt; { await UserRepository.insert({ name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: null }) await newsletter.run() // what should I assert here?? // we need a collaborator for the newsletter...})\n   To define the collaborators I try to follow the Single Responsibility Principle (from the SOLID principles family).\n  You can take it a step further and see it from the business point of view:\n Who is the &#34;actor&#34; (like a person or business sector) associated to a specific software component or module?\n       It asserts that when calling the method  findNotYetReceivedNewsletter, the correct number of users are returned.\n  test(&#39;find users that did not yet receive the newsletter&#39;, async t =&gt; { await UsersCollection.insert({ name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: new Date() }) await UsersCollection.insert({ name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: null }) sinon.spy(UsersCollection, &#39;find&#39;) const users = await userRepository.findNotYetReceivedNewsletter() t.true(Array.isArray(users)) t.is(users.length, 1) t.true(UsersCollection.find.calledOnce) t.true(UsersCollection.find.calledWith({ lastEmailSentAt: null }))})\n  In this case, the actual sending of the emails is &#34;stubbed&#34; out, so no emails are actually sent.\n  test(&#39;sends newsletter to user&#39;, async t =&gt; { const user = { name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: null } const emailStub = sinon.stub(email, &#39;send&#39;) await emailService.sendTo(user) t.is(emailStub.callCount, 1)})\n  One could be inclined to put all the logic inside a function and call it a day.\n It could work, but for how long? Or better: how do you effectively test it?\n    In the first UAT I think it&#39;s apparent that we need to provide the newsletter module at least a way to  retrieve the users.\n Let&#39;s try it with a  UserRepository, and assert that the Users collection has been queried for users that did not receive a newsletter yet:\n test(&#39;sends a newsletter to users that did not yet receive it&#39;, async t =&gt; { await db.get(&#39;users&#39;).insert({ name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: null }) sinon.spy(userRepository, &#39;findNotYetReceivedNewsletter&#39;) await newsletter.run(userRepository) t.is(userRepository.findNotYetReceivedNewsletter.callCount, 1) // we still need a collaborator for sending the newsletter...})\n Using  .spy since I want the DB to be queried, and later assert that the function has been called.\n For the email, I don&#39;t want the real function to be called, hence using  .stub.\n I am passing in the collaborators in the tests, and use the real implementations in the application code.\n  async function run (userRepository, emailService) { const users = await userRepository.findNotYetReceivedNewsletter() for (const user of users) { await emailService.sendTo(user) }}\n  test(&#39;sends a newsletter to users that did not yet receive it&#39;, async t =&gt; { await db.get(&#39;users&#39;).insert({ name: &#39;test&#39;, email: &#39; [email\u00a0protected]&#39;, lastEmailSentAt: null }) sinon.spy(userRepository, &#39;findNotYetReceivedNewsletter&#39;) sinon.stub(emailService, &#39;sendTo&#39;) await newsletter.run(userRepository, emailService) t.is(userRepository.findNotYetReceivedNewsletter.callCount, 1) t.is(emailService.sendTo.callCount, 1) // implement your assertions about arguments, like &#34;recipient&#34;, &#34;subject&#34;, &#34;content&#34; of the email etc.})\n    \u251c\u2500\u2500 index.js\u251c\u2500\u2500 index.test.js\u251c\u2500\u2500 lib\u2502 \u251c\u2500\u2500 db.js\u2502 \u251c\u2500\u2500 email-service.js\u2502 \u251c\u2500\u2500 email-service.test.js\u2502 \u251c\u2500\u2500 email.js\u2502 \u251c\u2500\u2500 email.test.js\u2502 \u251c\u2500\u2500 user-repository.js\u2502 \u2514\u2500\u2500 user-repository.test.js\u251c\u2500\u2500 package-lock.json\u2514\u2500\u2500 package.json\n The other software components are Unit tested, for further details check out  the project on GitHub\n Every collaborator has their own tests (except  lib/db.js since it&#39;s a simple wrapper around  monk that is already well tested).\n email.js is the wrapper around your API of choice to send emails and has a single exposed function  .send.", "posttime": "2020-06-10 06:30:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u539f\u7406,solid", "title": "\u4f7f\u7528Solid\u539f\u7406\u5728Node.js\u4e2d\u8fdb\u884c\u793a\u4f8b\u6d4b\u8bd5", "title_en": "Testing in Node.js by example using the SOLID principles", "transed": 1, "url": "https://cri.dev/posts/2020-05-20-Testing-in-Nodejs-by-example-using-the-SOLID-principles/", "via": "", "real_tags": ["\u539f\u7406", "solid"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005915, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eb2\u7231\u7684FreeBSD\u793e\u533a\uff0cFreeBSD\u9879\u76ee\u91c7\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u6e90\u81eaLLVM\u7684\u884c\u4e3a\u51c6\u5219\u3002\u65b0\u7684\u884c\u4e3a\u51c6\u5219\u53ef\u5728\u3002\n2018\u5e74\u8fdb\u884c\u7684\u7b2c\u4e00\u6b21\u8c03\u67e5\u544a\u8bc9\u6211\u4eec\uff1a-94%\u7684\u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a\u9879\u76ee\u4e2d\u7684\u5c0a\u91cd\u6c9f\u901a\u5f88\u91cd\u8981\uff1b1%\u4e0d\u540c\u610f-89%\u8ba4\u4e3a\u514d\u8d39BSD\u5e94\u8be5\u6b22\u8fce\u6240\u6709\u80cc\u666f\u7684\u4eba\uff1b2%\u4e0d\u540c\u610f-73%\u8868\u793a\u5e94\u8be5\u5c06\u6709\u6bd2\u4eba\u5458\u4ece\u9879\u76ee\u4e2d\u79fb\u9664\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u6280\u672f\u8d21\u732e\u662f\u4ec0\u4e48\uff1b-https://www.freebsd.org/internal/code-of-conduct.htmlBACKGROUNDActive FreeBSD\u5f00\u53d1\u4eba\u5458\u88ab\u9080\u8bf7\u5b8c\u6210\u4e24\u9879\u4e0e\u6211\u4eec\u7684\u6307\u5bfc\u51c6\u5219\u76f8\u5173\u7684\u8c03\u67e5\u3002\u7b2c\u4e00\u6b21\u8c03\u67e5\u4e8e2018\u5e74\u8fdb\u884c\uff0c\u7b2c\u4e00\u6b21\u8c03\u67e5\u544a\u8bc9\u6211\u4eec\uff1a-94%\u7684\u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a\u5728\u9879\u76ee\u4e2d\u5c0a\u91cd\u6c9f\u901a\u5f88\u91cd\u8981\uff1b1%\u7684\u4eba\u4e0d\u540c\u610f-89%\u7684\u4eba\u8ba4\u4e3aFreeBSD\u5e94\u8be5\u6b22\u8fce\u6240\u6709\u80cc\u666f\u7684\u4eba\uff1b9%\u7684\u4eba\u4e0d\u540c\u610f-35%\u7684\u4eba\u4e0d\u6ee1\u610f2018\u5e74\u901a\u8fc7\u7684\u884c\u4e3a\u51c6\u5219\uff0c34%\u7684\u4eba\u6301\u4e2d\u7acb\u6001\u5ea6\uff0c30%\u7684\u4eba\u611f\u5230\u6ee1\u610f\u3002\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u73b0\u884c\u884c\u4e3a\u51c6\u5219\u7684\u4e0d\u6ee1\u7a0b\u5ea6\u8db3\u4ee5\u503c\u5f97\u8c03\u67e5\u3002\u5728\u56de\u987e\u4e86\u5176\u4ed6\u5f00\u6e90\u884c\u4e3a\u51c6\u5219\u4e4b\u540e\uff0cFreeBSD\u6838\u5fc3\u56e2\u961f\u8c03\u67e5\u4e86\u91c7\u7528LLVM\u6d3e\u751f\u6216GO\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219\u30026\u6708\u521d\u8fdb\u884c\u4e86\u7b2c\u4e8c\u6b21\u8c03\u67e5\uff0c\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\uff1aFreeBSD\u5e94\u8be5\u91c7\u7528\u54ea\u79cd\u884c\u4e3a\u51c6\u5219\uff1f-LLVM\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219\uff1ahttps://github.com/freebsd/core.10-public-docs/blob/master/CoC/llvm-based.md-GO\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219\uff1ahttps://github.com/freebsd/core.10-public-docs/blob/master/CoC/golang-based\u3002.MD-\u4fdd\u7559\u5f53\u524d\u7684\u884c\u4e3a\u51c6\u5219\uff1ahttps://web.archive.org/web/20200108075747/https://www.freebsd.org/internal/code-of-conduct.htmlRESULTS-4%\u7684\u4eba\u8d5e\u6210\u4fdd\u7559\u5f53\u524d\u7684\u884c\u4e3a\u51c6\u5219-33%\u7684\u4eba\u8d5e\u6210\u4eceGO\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219-63%\u7684\u4eba\u8d5e\u6210\u4eceLLVM\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219\u3002\u56e0\u6b64\uff0c\u6838\u5fc3\u56e2\u961f\u9075\u5faa\u4e86\u5927\u591a\u6570\u6d3b\u8dc3\u7684FreeBSD\u5f00\u53d1\u4eba\u5458\u7684\u504f\u597d\uff0c\u91c7\u7528\u4e86LLVM\u6d3e\u751f\u7684\u884c\u4e3a\u51c6\u5219\u3002\u8c22\u8c22\u60a8\u611f\u8c22LLVM\u548cGO\u793e\u533a\uff0c\u4ee5\u53ca\u6211\u4eec\u70ed\u60c5\u7684\u6210\u5458\uff0c\u4ed6\u4eec\u5e2e\u52a9\u652f\u6301\u4e86\u8fd9\u4e00\u6f14\u53d8\u3002--FreeBSD\u6838\u5fc3\u56e2\u961f", "note_en": "Dear FreeBSD community,The FreeBSD Project has adopted a new LLVM-derived code of conduct. Thenew code of conduct can be found at\n https://www.freebsd.org/internal/code-of-conduct.htmlBACKGROUNDActive FreeBSD developers were invited to complete two surveys relatedto our Code of Conduct.The first survey, conducted in 2018, told us that: - 94% of developers believe respectful communication in the project is important; 1% disagreed - 89% believe FreeBSD should be welcoming to people of all backgrounds; 2% disagreed - 73% say toxic people should be removed from the Project regardless of their technical contribution; 9% disagreed - 35% were dissatisfied with the code of conduct adopted in 2018, 34% were neutral, and 30% were satisfied.These results indicated that there was sufficient dissatisfaction withthe current code of conduct to warrant investigation. After reviewingother open source codes of conduct, the FreeBSD Core Team investigatedadopting either an LLVM-derived or a Go-derived code of conduct.A second survey was held at the start of June and had only one question: Which code of conduct should FreeBSD adopt? - An LLVM-derived code of conduct:  https://github.com/freebsd/core.10-public-docs/blob/master/CoC/llvm-based.md - A Go-Derived code of conduct:  https://github.com/freebsd/core.10-public-docs/blob/master/CoC/golang-based.md - Retain the current code of conduct:  https://web.archive.org/web/20200108075747/https://www.freebsd.org/internal/code-of-conduct.htmlRESULTS - 4% favoured keeping the current code of conduct - 33% favoured the Go-derived code of conduct - 63% favoured the LLVM-derived code of conduct.Thus, the Core Team, following the preference of a majority of activeFreeBSD developers, adopted the LLVM-derived code of conduct.THANK YOUThank you to the LLVM and Go communities, and our impassioned memberswho helped champion this evolution.-- FreeBSD Core Team", "posttime": "2020-06-10 06:29:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "freebsd,code", "title": "\u65b0\u7684FreeBSD\u884c\u4e3a\u51c6\u5219", "title_en": "New FreeBSD Code of Conduct", "transed": 1, "url": "https://www.mail-archive.com/freebsd-announce@freebsd.org/msg00965.html", "via": "", "real_tags": ["freebsd", "code"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005914, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u516c\u53f8\u8ba1\u5212\u5728\u53d1\u5e03\u9519\u8bef\u7684\u97f3\u4e50\u5bb6\u5f62\u8c61\u540e\u7528\u4eba\u5de5\u667a\u80fd\u53d6\u4ee3\u7f16\u8f91\u7684\u8ba1\u5212\u9002\u5f97\u5176\u53cd\u3002\n\u5fae\u8f6f(Microsoft)\u7528\u673a\u5668\u4eba\u53d6\u4ee3\u4eba\u7c7b\u8bb0\u8005\u7684\u51b3\u5b9a\u9002\u5f97\u5176\u53cd\uff0c\u6b64\u524d\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u7684\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u7528\u4e00\u5f20\u9519\u8bef\u7684\u6df7\u8840\u4e50\u961fLittle Mix\u6210\u5458\u7684\u7167\u7247\u5c55\u793a\u4e86\u4e00\u4e2a\u5173\u4e8e\u79cd\u65cf\u4e3b\u4e49\u7684\u65b0\u95fb\u6545\u4e8b\u3002\n\u5728\u201c\u536b\u62a5\u201d\u62ab\u9732\u8ba1\u5212\u89e3\u96c7MSN.com\u7684\u4eba\u7c7b\u7f16\u8f91\uff0c\u5e76\u7528\u5fae\u8f6f\u7684\u4eba\u5de5\u667a\u80fd\u4ee3\u7801\u53d6\u800c\u4ee3\u4e4b\u4e00\u5468\u540e\uff0c\u8be5\u8f6f\u4ef6\u7684\u65e9\u671f\u63a8\u51fa\u5bfc\u81f4\u4e86\u4e00\u7bc7\u5173\u4e8e\u6b4c\u624b\u6770\u5fb7\u00b7\u745f\u6c83\u5c14(Jade Thirlwall)\u4e2a\u4eba\u5bf9\u79cd\u65cf\u4e3b\u4e49\u7684\u53cd\u601d\u7684\u6545\u4e8b\uff0c\u5e76\u914d\u4e0a\u4e86\u5979\u7684\u4e50\u961f\u6210\u5458\u5229-\u5b89\u59ae\u00b7\u5e73\u8bfa\u514b(Leigh-Anne Pinock)\u7684\u7167\u7247\u3002\n\u745f\u6c83\u5c14\u53c2\u52a0\u4e86\u6700\u8fd1\u5728\u4f26\u6566\u4e3e\u884c\u7684\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d(Black Lives Matter)\u6297\u8bae\u6d3b\u52a8\uff0c\u5979\u5728\u5468\u4e94\u6279\u8bc4MSN\uff0c\u8bf4\u5979\u538c\u5026\u4e86\u201c\u65e0\u77e5\u201d\u7684\u5a92\u4f53\u72af\u4e0b\u8fd9\u6837\u7684\u9519\u8bef\u3002\u5979\u5728Instagram\u4e0a\u53d1\u5e16\u79f0\uff1a\u201c@MSN\u5982\u679c\u4f60\u6253\u7b97\u4ece\u5176\u4ed6\u51c6\u786e\u7684\u5a92\u4f53\u673a\u6784\u590d\u5236\u548c\u7c98\u8d34\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u8981\u786e\u4fdd\u4f60\u4f7f\u7528\u7684\u662f\u7fa4\u91cc\u6b63\u786e\u7684\u6df7\u5408\u79cd\u65cf\u6210\u5458\u7684\u56fe\u7247\u3002\u201d\n\u5979\u8bf4\uff1a\u201c\u8fd9\u4e9b\u72d7\u5c4e\u603b\u662f\u53d1\u751f\u5728@leighannpInnock\u548c\u6211\u8eab\u4e0a\uff0c\u8fd9\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u4e2a\u6d41\u4f20\u7684\u7b11\u8bdd\u3002\u201d\u201c\u4f60\u4e0d\u80fd\u4ece\u4e00\u4e2a\u56e2\u4f53\u2026\u7684\u56db\u4e2a\u6210\u5458\u4e2d\u533a\u5206\u51fa\u4e24\u4e2a\u6709\u8272\u4eba\u79cd\u5973\u4eba\uff0c\u8fd9\u8ba9\u6211\u5f88\u751f\u6c14\u3002\u505a\u5f97\u66f4\u597d\uff01\u201c\u3002\n\u636eThirlwall\u516c\u53f8\u7684\u6d88\u606f\u4eba\u58eb\u79f0\uff0cThirlwall\u4e0d\u53ef\u80fd\u77e5\u9053\u7684\u662f\uff0c\u8fd9\u5f20\u56fe\u7247\u662f\u7531\u5fae\u8f6f\u7684\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u9009\u62e9\u7684\uff0c\u8be5\u8f6f\u4ef6\u5df2\u7ecf\u8d1f\u8d23\u7f16\u8f91\u65b0\u95fb\u7f51\u7ad9\u7684\u90e8\u5206\u5185\u5bb9\uff0c\u8be5\u7f51\u7ad9\u5438\u5f15\u4e86\u5168\u7403\u6570\u4ebf\u8bfb\u8005\u3002\n\u5fae\u8f6f\u4e0d\u8fdb\u884c\u539f\u521b\u62a5\u9053\uff0c\u800c\u662f\u96c7\u4f63\u4eba\u7c7b\u7f16\u8f91\u6765\u9009\u62e9\u3001\u7f16\u8f91\u548c\u91cd\u65b0\u8c03\u6574\u65b0\u95fb\u673a\u6784(\u5305\u62ec\u300a\u536b\u62a5\u300b)\u7684\u6587\u7ae0\u7684\u7528\u9014\u3002\u7136\u540e\uff0c\u6587\u7ae0\u88ab\u6258\u7ba1\u5728\u5fae\u8f6f\u7684\u7f51\u7ad9\u4e0a\uff0c\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u4e0e\u539f\u59cb\u51fa\u7248\u5546\u5206\u4eab\u5e7f\u544a\u6536\u5165\u3002\u4e0a\u6708\u5e95\uff0c\u5fae\u8f6f\u51b3\u5b9a\u5728\u6d41\u611f\u5927\u6d41\u884c\u671f\u95f4\u89e3\u96c7\u6570\u767e\u540d\u8bb0\u8005\uff0c\u5e76\u7528\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u5b8c\u5168\u53d6\u800c\u4ee3\u4e4b\u3002\n\u5f53\u88ab\u95ee\u53ca\u5fae\u8f6f\u4e3a\u4ec0\u4e48\u90e8\u7f72\u4e0d\u80fd\u533a\u5206\u6df7\u8840\u4e2a\u4f53\u7684\u8f6f\u4ef6\uff0c\u9886\u5148\u4f01\u4e1a\u5728\u90e8\u7f72\u8be5\u516c\u53f8\u7684\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u65f6\u662f\u5426\u4f1a\u6e17\u900f\u660e\u663e\u7684\u79cd\u65cf\u4e3b\u4e49\u504f\u89c1\uff0c\u4ee5\u53ca\u8be5\u516c\u53f8\u662f\u5426\u4f1a\u91cd\u65b0\u8003\u8651\u7528\u673a\u5668\u4eba\u53d6\u4ee3\u4eba\u5de5\u7f16\u8f91\u7684\u8ba1\u5212\u65f6\uff0c\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u7684\u4e00\u540d\u53d1\u8a00\u4eba\u8868\u793a\uff1a\u201c\u6211\u4eec\u4e00\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u89e3\u51b3\u5b83\uff0c\u5e76\u66f4\u6362\u4e86\u4e0d\u6b63\u786e\u7684\u5f62\u8c61\u3002\u201d\u5728\u88ab\u95ee\u53ca\u8fd9\u4e00\u95ee\u9898\u65f6\uff0c\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u7684\u4e00\u540d\u53d1\u8a00\u4eba\u8868\u793a\uff1a\u201c\u6211\u4eec\u4e00\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u89e3\u51b3\u5b83\uff0c\u5e76\u66f4\u6362\u4e86\u4e0d\u6b63\u786e\u7684\u5f62\u8c61\u3002\u201d\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u4e4b\u524d\uff0cMSN\u7684\u5de5\u4f5c\u4eba\u5458\u88ab\u544a\u77e5\uff0c\u201c\u536b\u62a5\u201d\u5c06\u520a\u767b\u4e00\u7bc7\u8d1f\u9762\u6587\u7ae0\uff0c\u5185\u5bb9\u6d89\u53ca\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u4e2d\u6240\u8c13\u7684\u79cd\u65cf\u4e3b\u4e49\u504f\u89c1\uff0c\u8fd9\u6b3e\u8f6f\u4ef6\u5f88\u5feb\u5c31\u4f1a\u62a2\u8d70\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002\n\u7531\u4e8e\u65e0\u6cd5\u963b\u6b62\u65b0\u7684\u673a\u5668\u4eba\u7f16\u8f91\u4ece\u300a\u536b\u62a5\u300b\u7b49\u5916\u90e8\u65b0\u95fb\u7f51\u7ad9\u6311\u9009\u6545\u4e8b\uff0c\u5269\u4e0b\u7684\u4eba\u7c7b\u5de5\u4f5c\u4eba\u5458\u88ab\u544a\u77e5\u4fdd\u6301\u8b66\u60d5\uff0c\u5982\u679c\u673a\u5668\u4eba\u8ba4\u4e3a\u611f\u5174\u8da3\u5e76\u81ea\u52a8\u5c06\u5176\u53d1\u5e03\u5728MSN.com\u4e0a\uff0c\u8bf7\u5220\u9664\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e00\u4e2a\u7248\u672c\u3002\u4ed6\u4eec\u8fd8\u88ab\u8b66\u544a\u8bf4\uff0c\u5373\u4f7f\u4ed6\u4eec\u5220\u9664\u4e86\u5b83\uff0c\u673a\u5668\u4eba\u7f16\u8f91\u4e5f\u53ef\u80fd\u4f1a\u5426\u51b3\u4ed6\u4eec\u7684\u610f\u89c1\uff0c\u5e76\u8bd5\u56fe\u518d\u6b21\u53d1\u5e03\u3002\n\u5728\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u51b3\u5b9a\u6709\u5173\u8fd9\u8d77\u4e8b\u4ef6\u7684\u62a5\u9053\u4f1a\u5f15\u8d77MSN\u8bfb\u8005\u7684\u5174\u8da3\u540e\uff0c\u5de5\u4f5c\u4eba\u5458\u5df2\u7ecf\u4e0d\u5f97\u4e0d\u5220\u9664\u6279\u8bc4MSN\u8fd0\u884c\u5173\u4e8eLittle Mix With the error image\u7684\u62a5\u9053\u7684\u62a5\u9053\u3002\n\u4e00\u540d\u5de5\u4f5c\u4eba\u5458\u8868\u793a\uff0c\u5fae\u8f6f\u5bf9\u5176\u4eba\u5de5\u667a\u80fd\u4ea7\u54c1\u7684\u58f0\u8a89\u635f\u5bb3\u6df1\u8868\u62c5\u5fe7\uff1a\u201c\u9274\u4e8e\u76ee\u524d\u6240\u6709\u7684\u53cd\u79cd\u65cf\u4e3b\u4e49\u6297\u8bae\u6d3b\u52a8\uff0c\u73b0\u5728\u4e0d\u662f\u72af\u9519\u7684\u65f6\u5019\u3002\u201d", "note_en": "Firm\u2019s plan to replace editors with AI backfires after wrong image of musician is published\n    Microsoft\u2019s decision to replace human journalists with robots has backfired, after the tech company\u2019s artificial intelligence software illustrated a news story about racism with a photo of the wrong mixed-race member of the  band Little Mix.\n A week after the Guardian revealed plans to fire the human editors who run MSN.com and replace them with Microsoft\u2019s artificial intelligence code, an early rollout of the software resulted in a story about the  singer  Jade Thirlwall\u2019s  personal reflections on racism being illustrated with a picture of her fellow band member Leigh-Anne Pinnock.\n Thirlwall, who attended a recent Black Lives Matter protest in London, criticised MSN on Friday, saying she was sick of \u201cignorant\u201d media making such mistakes. She posted on Instagram: \u201c@MSN If you\u2019re going to copy and paste articles from other accurate media outlets, you might want to make sure you\u2019re using an image of the correct mixed race member of the group.\u201d\n \u201cThis shit happens to @leighannepinnock and I ALL THE TIME that it\u2019s become a running joke,\u201d she said. \u201cIt offends me that you couldn\u2019t differentiate the two women of colour out of four members of a group \u2026 DO BETTER!\u201d\n What Thirlwall could not have known, according to sources at the company, is that the image was selected by Microsoft\u2019s artificial intelligence software, which is already responsible for editing parts of the news site, which attracts hundreds of millions of readers worldwide.\n  Microsoft does not carry out original reporting but employs human editors to select, edit and repurpose articles from news outlets, including the Guardian. Articles are then hosted on Microsoft\u2019s website and the tech company shares advertising revenue with the original publishers. At the end of last month, Microsoft decided to fire hundreds of journalists in the middle of a pandemic and fully replace them with the artificial intelligence software.\n Asked why Microsoft was deploying software that cannot tell mixed-race individuals apart, whether apparent racist bias could seep into deployments of the company\u2019s artificial intelligence software by leading corporations, and whether the company would reconsider plans to replace the human editors with robots, a spokesman for the tech company said: \u201cAs soon as we became aware of this issue, we immediately took action to resolve it and have replaced the incorrect image.\u201d\n In advance of the publication of this article, staff at MSN were told to expect a negative article in the Guardian about alleged racist bias in the artificial intelligence software that will soon take their jobs.\n  Because they are unable to stop the new robot editor selecting stories from external news sites such as the Guardian, the remaining human staff have been told to stay alert and delete a version of this article if the robot decides it is of interest and automatically publishes it on MSN.com. They have also been warned that even if they delete it, the robot editor may overrule them and attempt to publish it again.\n Staff have already had to delete coverage criticising MSN for running the story about Little Mix with the wrong image after the AI software decided stories about the incident would interest MSN readers.\n One staff member said Microsoft was deeply concerned about reputational damage to its AI product: \u201cWith all the anti-racism protests at the moment, now is not the time to be making mistakes.\u201d", "posttime": "2020-06-10 06:29:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668\u4eba,\u5fae\u8f6f,microsoft,\u7f16\u8f91,robot", "title": "\u5fae\u8f6f\u673a\u5668\u4eba\u7f16\u8f91\u8ff7\u60d1\u6df7\u8840\u5c0f\u6df7\u8840\u6b4c\u624b", "title_en": "Microsoft's robot editor confuses mixed-race Little Mix singers", "transed": 1, "url": "https://www.theguardian.com/technology/2020/jun/09/microsofts-robot-journalist-confused-by-mixed-race-little-mix-singers", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u5fae\u8f6f", "microsoft", "\u7f16\u8f91", "robot"]}, {"category": "", "categoryclass": "", "imagename": "3694f0f4436b36faddc48a26a0ef4778.jpg", "infoid": 1005913, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8377\u5170\u4e00\u6240\u5927\u5b66\u7684\u5b66\u8005\u4eca\u5929\u516c\u5e03\u4e86\u5173\u4e8e\u82f1\u7279\u5c14\u5904\u7406\u5668\u65b0\u6f0f\u6d1e\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\u8fd9\u4e2a\u5b89\u5168\u6f0f\u6d1e\u88ab\u4ed6\u4eec\u547d\u540d\u4e3a\u4e32\u6270\uff0c\u5b83\u4f7f\u5728\u4e00\u4e2aCPU\u5185\u6838\u4e0a\u6267\u884c\u7684\u653b\u51fb\u8005\u63a7\u5236\u7684\u4ee3\u7801\u80fd\u591f\u6cc4\u9732\u8fd0\u884c\u5728\u4e0d\u540c\u5185\u6838\u4e0a\u7684\u5176\u4ed6\u8f6f\u4ef6\u7684\u654f\u611f\u6570\u636e\u3002\nVrije\u5927\u5b66\u7684\u7cfb\u7edf\u548c\u7f51\u7edc\u5b89\u5168\u7ec4\u7ec7(VUSec)\u8868\u793a\uff0c\u4e32\u6270\u6f0f\u6d1e\u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684MDS(\u5fae\u4f53\u7cfb\u7ed3\u6784\u6570\u636e\u91c7\u6837)\u653b\u51fb\u3002\nMDS\u653b\u51fb\u7684\u76ee\u6807\u662f\u5904\u4e8e\u4e34\u65f6\u72b6\u6001\u7684\u7528\u6237\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u6b63\u5728CPU\u53ca\u5176\u8bb8\u591a\u6570\u636e\u7f13\u5b58\u7cfb\u7edf\u4e2d\u8fdb\u884c\u5904\u7406\u3002\n\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u4e32\u6270\u4f1a\u5728\u6570\u636e\u88abCPU\u7684\u884c\u586b\u5145\u7f13\u51b2\u533a(LBF)\u5904\u7406\u65f6\u653b\u51fb\u6570\u636e\uff0cLBF\u662f\u4e0a\u8ff0CPU\u7f13\u5b58\u7cfb\u7edf\u4e4b\u4e00\u3002\n\u6839\u636eVUSec\u56e2\u961f\u7684\u8bf4\u6cd5\uff0cLBF\u7f13\u5b58\u5b9e\u9645\u4e0a\u4f7f\u7528\u7684\u662f\u6240\u6709CPU\u5185\u6838\u5171\u4eab\u7684\u4ee5\u524d\u672a\u8bb0\u5f55\u5728\u6848\u7684\u4e34\u65f6\u7f13\u51b2\u533a\u3002\n\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u6bb5\u6f14\u793a\u89c6\u9891\u4e2d\uff0cVUSec\u7814\u7a76\u56e2\u961f\u5c55\u793a\u4e86\u4ed6\u4eec\u5982\u4f55\u5229\u7528\u4e32\u6270\u653b\u51fb\uff0c\u901a\u8fc7LBF\u7f13\u5b58\u653b\u51fb\u8fd9\u79cd\u672a\u8bb0\u5f55\u7684\u6682\u5b58\u7f13\u51b2\u533a\uff0c\u5e76\u6cc4\u9732\u5176\u4ed6\u5185\u6838(\u4e0b\u4f8b\u4e2d\u4e3aIntel SGX\u5bc6\u94a5)\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u7684\u6570\u636e\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8868\u793a\uff0c\u81ea2018\u5e749\u6708\u4ee5\u6765\uff0c\u5728\u8fc7\u53bb\u768421\u4e2a\u6708\u91cc\uff0c\u4ed6\u4eec\u4e00\u76f4\u5728\u4e0e\u82f1\u7279\u5c14\u5408\u4f5c\u4fee\u8865\u76f8\u58f0\u653b\u51fb\u3002\nVUSec\u56e2\u961f\u8868\u793a\uff0c\u4fee\u8865\u8fd9\u4e2a\u6f0f\u6d1e\u82b1\u8d39\u4e86\u8d85\u8fc7\u6807\u51c6\u768490\u5929\uff0c\u539f\u56e0\u662f\u95ee\u9898\u7684\u590d\u6742\u6027\uff0c\u4ee5\u53ca\u4ed6\u4eec\u6700\u521d\u6ca1\u6709\u5f7b\u5e95\u8c03\u67e5\u8de8\u6838\u6cc4\u6f0f\u7684\u53ef\u80fd\u6027\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u82f1\u7279\u5c14\u5df2\u7ecf\u5bf9\u5176CPU\u7684\u786c\u4ef6\u8bbe\u8ba1\u8fdb\u884c\u4e86\u91cd\u5927\u6539\u53d8\uff0c\u5176\u6700\u8fd1\u7684\u5927\u90e8\u5206\u4ea7\u54c1\u90fd\u4e0d\u5bb9\u6613\u53d7\u5230\u8fd9\u79cd\u653b\u51fb\u3002\n\u5bf9\u4e8e\u6240\u6709\u8f83\u8001\u7684\u82f1\u7279\u5c14\u4e2d\u592e\u5904\u7406\u5668\u7cfb\u5217\uff0c\u82af\u7247\u5236\u9020\u5546\u4eca\u5929\u53d1\u5e03\u4e86\u5fae\u7801(\u4e2d\u592e\u5904\u7406\u5668\u56fa\u4ef6)\u66f4\u65b0\uff0c\u4ee5\u4fee\u8865\u4e32\u6270\u6f0f\u6d1e--\u82f1\u7279\u5c14\u5c06\u5176\u79f0\u4e3a\u7279\u6b8a\u5bc4\u5b58\u5668\u7f13\u51b2\u533a\u6570\u636e\u91c7\u6837\u6216SRBDS(CVE2020-0543\uff0c\u82f1\u7279\u5c14-SA-00320)\u3002\n\u82f1\u7279\u5c14\u5728\u4e00\u7bc7\u5206\u6790\u51766\u6708\u4efd\u5b89\u5168\u66f4\u65b0\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u4e0e\u8fc4\u4eca\u4e3a\u6b62\u62a5\u544a\u7684\u6240\u6709\u4fa7\u901a\u9053\u95ee\u9898\u4e00\u6837\uff0c\u82f1\u7279\u5c14\u4e0d\u77e5\u9053\u5728\u5b9e\u9a8c\u5ba4\u73af\u5883\u4e4b\u5916\u6709\u4efb\u4f55\u771f\u5b9e\u7684SRBDS\u6f0f\u6d1e\u5229\u7528\u3002\n\u6b64\u9875\u4e0a\u5217\u51fa\u4e86\u6613\u53d7\u653b\u51fb\u7684\u82f1\u7279\u5c14CPU\u5217\u8868(\u8bf7\u67e5\u770b\u8868\u4e2d\u7684SRBDS\u5217)\u3002\u8be5\u5217\u8868\u5305\u62ec\u5d4c\u5165\u5f0f\u3001\u79fb\u52a8\u3001\u53f0\u5f0f\u673a\u548c\u670d\u52a1\u5668\u4ea7\u54c1\u7684CPU\u7cfb\u5217\u3002\nVUSec\u56e2\u961f\u8fd8\u53d1\u5e03\u4e86\u6982\u5ff5\u9a8c\u8bc1\u4ee3\u7801\u548c\u5173\u4e8e\u76f8\u58f0\u653b\u51fb\u7684\u6280\u672f\u8bba\u6587\u548c\u7f51\u7ad9\u3002\u82f1\u7279\u5c14\u5728\u8fd9\u91cc\u6709\u81ea\u5df1\u7684\u6280\u672f\u62a5\u544a\u3002", "note_en": "Academics from a university in the Netherlands have published details today about a new vulnerability in Intel processors.\n The security bug, which they named CrossTalk, enables attacker-controlled code executing on one CPU core to leak sensitive data from other software running on a different core.\n The Vrije University&#39;s Systems and Network Security Group (VUSec) says the CrossTalk vulnerability is another type of MDS (microarchitectural data sampling) attack.\n MDS attacks target user data while in a &#34;transient&#34; state, as it&#39;s being processed inside the CPU and its many data-caching systems.\n More specifically, CrossTalk attacks data while it&#39;s being processed by the CPU&#39;s Line Fill Buffer (LBF), one of these aforementioned CPU cache systems.\n   According to the VUSec team, the LBF cache actually works with a previously undocumented memory &#34;staging buffer&#34; that is shared by all CPU cores.\n  In a demo video published today, the VUSec research team showed how they employed a CrossTalk attack to attack this undocumented staging buffer via the LBF cache, and leak data processed by apps on other cores (an Intel SGX key, in the example below).\n    The research team said they&#39;ve been working with Intel on having the CrossTalk attack patched for the past 21 months, since September 2018.\n The VUSec team said that patching this bug took more than the standard 90 days because of the complexity of the issue and because they initially didn&#39;t thoroughly investigate the possibility of a cross-core leak.\n In the meantime, Intel has already made significant changes to the hardware design of its CPUs, and most of its recent products are not vulnerable to this attack.\n For all the older Intel CPU lines, the chipmaker has released today microcode (CPU firmware) updates to patch the CrossTalk vulnerability -- which Intel refers to as &#34;Special Register Buffer Data Sampling&#34; or SRBDS (CVE-2020-0543, Intel-SA-00320).\n &#34;As with all side-channel issues reported to date, Intel is not aware of any real-world exploits of SRBDS outside of a lab environment,&#34;  Intel said in a blog post analyzing its June security updates.\n A list of vulnerable Intel CPUs are listed  on this page (check the SRBDS column in the table). The list includes CPU lines for embedded, mobile, desktop, and server products.\n The VUSec team has also published  proof-of-concept code and a  technical paper and  website on the CrossTalk attack. Intel has its own technical write-up,  here.", "posttime": "2020-06-10 06:13:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u82f1\u7279\u5c14,\u653b\u51fb,attack", "title": "\u65b0\u7684\u4e32\u6270\u653b\u51fb\u5f71\u54cd\u82f1\u7279\u5c14\u7684\u79fb\u52a8\u3001\u53f0\u5f0f\u673a\u548c\u670d\u52a1\u5668CPU", "title_en": "New CrossTalk Attack Impacts Intel's Mobile, Desktop, and Server CPUs", "transed": 1, "url": "https://www.zdnet.com/article/new-crosstalk-attack-impacts-intels-mobile-desktop-and-server-cpus/", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u653b\u51fb", "attack"]}, {"category": "", "categoryclass": "", "imagename": "e97676c00e8f0cc09f0f8140b493263a.jpeg", "infoid": 1005912, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u56db\uff0c\u6211\u5728LinkedIn\u4e0a\u53d1\u4e86\u4e00\u7bc7\u5e16\u5b50\u3002\u6ca1\u6709\u9644\u52a0\u6587\u7ae0\uff0c\u6ca1\u6709\u4fc3\u9500\uff0c\u6ca1\u6709\u6bd4\u8d5b\uff0c\u6ca1\u6709\u6211\u7684\u53cc\u80de\u80ce\u5973\u513f\u7684\u53ef\u7231\u7167\u7247(\u90a3\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u5e16\u5b50)-\u53ea\u662fLinkedIn\u4e0a\u5173\u4e8e\u6211\u4e0e\u6211\u6b63\u5728\u5de5\u4f5c\u7684\u4e00\u4e2a\u7279\u5b9a\u4ea7\u54c1\u8425\u9500\u9879\u76ee\u7684\u604b\u60c5\u7684\u5e38\u89c4\u3001\u7eaf\u6587\u672c\u3001\u5feb\u901f\u548c\u80ae\u810f\u7684\u5e16\u5b50\u3002\n\u4f46\u5728\u6211\u544a\u8bc9\u4f60\u5177\u4f53\u662f\u600e\u4e48\u5f00\u59cb\u7684\u4e4b\u524d\uff0c\u6211\u60f3\u6f84\u6e05\u4e00\u4e0b\uff1a\u6211\u8fdc\u4e0d\u662fLinkedIn\u4e0a\u7684\u4efb\u4f55\u4e00\u4f4d\u4e13\u5bb6\u3002\u6211\u627f\u8ba4\u5728Instagram\u4e0a\u628a\u81ea\u5df1\u653e\u5728\u4e86\u5730\u72f1\u91cc\uff0c\u4f46\u5728Good\u2018ol Li\u4e0a\uff0c\u6211\u901a\u5e38\u53ea\u662f\u4e3a\u4e86\u6b22\u7b11\u3001\u7075\u611f\u548c\u8054\u7cfb\u800c\u6765\u3002\u5982\u679c\u5e78\u8fd0\u7684\u8bdd\uff0c\u6211\u53ef\u80fd\u4f1a\u5f974\u52305\u4e2a\u5927\u62c7\u6307\u3002\n\u4f46\u4e0a\u5468\u56db\uff0c\u60c5\u51b5\u53d1\u751f\u4e86\u4e0d\u540c\u7684\u53d8\u5316\u3002\u5f53\u6211\u70b9\u51fb\u201c\u8d34\u5b50\u201d\u7684\u65f6\u5019\uff0c\u2026\u4e0a\u7684\u53cd\u5e94\u548c\u8bc4\u8bba\u5c31\u5f00\u59cb\u8702\u62e5\u800c\u81f3\u3002\u7136\u540e\u662f\u7559\u8a00\u3002\u7136\u540e\u662f\u66f4\u591a\u6d88\u606f\u2026\u3002\u8fd8\u6709\u66f4\u591a\u3002\u6211\u603b\u5171\u6536\u5230\u4e86\u8d85\u8fc775\u6761\u4fe1\u606f(\u800c\u4e14\u8fd8\u5728\u4e0d\u65ad\u589e\u52a0)\uff0c\u5176\u4e2d\u5927\u591a\u6570\u90fd\u8981\u6c42\u5411\u6211\u8bf7\u6559\uff0c\u5e76\u8981\u6c42\u67d0\u79cd\u5f62\u5f0f\u7684\u6307\u5bfc\u3002\u795e\u5723\u7684\u3002\u80e1\u8bf4\u516b\u9053\u3002\n\u563f\uff0c\u6211\u5c06\u62e5\u6709\u6211\u7684\u72d7\u5c4e\uff1a\u5e16\u5b50\u786e\u5b9e\u5efa\u8bae\u5982\u679c\u4f60\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ea7\u54c1\u8425\u9500\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u7cfb\u4e00\u4e0b\u3002\u4f46\u6211\u60f3\uff0c\u5145\u5176\u91cf\u6211\u53ef\u80fd\u4f1a\u6709\u4e00\u4e24\u4e2a\u524d\u540c\u4e8b\u5e26\u7740\u201c\u4ed6\u5988\u7684Covid\u201d\u6e9c\u8fdb\u6211\u7684DMS\u3002\u6211\u88ab\u89e3\u96c7\u4e86\u3002\u6211\u4eec\u53bb\u62ff\u70b9\u559d\u7684\uff0c\u5feb\u6b65\u8d70\u5427\u3002\u201c\u3002\u6211\u5f88\u4e50\u610f\u63a5\u53d7\uff0c\u6211\u4eec\u4f1a\u53d8\u5f97\u6709\u70b9\u653e\u8086\uff0c\u54af\u54af\u5730\u7b11\u4e00\u7b11\uff0c\u4e5f\u8bb8\u6211\u4f1a\u5e2e\u4e00\u4e2a\u670b\u53cb\u627e\u5230\u4ed6\u4eec\u7684\u8def-\u6216\u8005\u81f3\u5c11\u4ed6\u4eec\u7684\u4fe1\u5fc3\u3002\n\u4f46\u6211\u5374\u627e\u4e0d\u5230\u8ba4\u8bc6\u7684\u4eba\u3002\u771f\u7684\u6ca1\u4eba\u3002\u7ed9\u6211\u53d1\u4fe1\u606f\u7684\u6bcf\u4e00\u4e2a\u4eba\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u3001\u6709\u8da3\u7684\u3001\u9965\u997f\u7684\u3001\u5174\u594b\u7684\u4eba\uff0c\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ea7\u54c1\u8425\u9500\u7684\u77e5\u8bc6\uff1a\u89c1\u9b3c\u7684\u662f\u4ec0\u4e48\uff0c\u6211\u662f\u5982\u4f55\u8fdb\u5165\u7684\uff0c\u5982\u679c\u6211\u8ba4\u4e3a\u8fd9\u4f1a\u5f88\u9002\u5408\u4ed6\u4eec\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u5efa\u8bae\u4ed6\u4eec\u4e5f\u5982\u4f55\u5230\u8fbe\u90a3\u91cc\u3002\n\u4f19\u8ba1\u4eec\uff0c\u6211\u662f\u4e00\u4e2a\u8111\u7b4b\u6025\u8f6c\u5f2f3\u7ffc2\u3002\u6211\u7684\u4e3b\u8981\u7c7b\u578b\u662f\u8868\u6f14\u8005\uff0c\u6240\u4ee5\u6211\u751a\u81f3\u4e0d\u4f1a\u8868\u73b0\u5f97\u50cf75\u4e2a\u4eba\u5411\u6211\u5bfb\u6c42\u5e2e\u52a9\uff0c\u8fd9\u4e0d\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u81ea\u6211\u6253\u51fb\u3002\u6211\u7684\u6b21\u8981\u7c7b\u578b\u662f\u5e2e\u624b\uff0c\u6240\u4ee5\u6211\u4e0d\u4ec5\u5bf9\u81ea\u5df1\u611f\u5230\u5f88\u6ee1\u610f\uff0c\u800c\u4e14\u5f88\u60f3\u5f00\u59cb\u5de5\u4f5c\uff01\u662f\u65f6\u5019\u9884\u8ba2\u8fd9\u4e9b\u53d8\u7126\u5e76\u6539\u53d8\u4e16\u754c\u4e86\uff01\n\u4f46\u662f\u7b49\u7b49\u3002\u64cd\u3002\u8fd8\u8bb0\u5f97\u5173\u4e8e\u53cc\u80de\u80ce\u5a74\u513f\u7684\u90a3\u90e8\u5206\u5417\uff1f\u55ef\u3002\u4ed6\u4eec\u5df2\u7ecf6\u4e2a\u6708\u5927\u4e86\u3002\u4ed6\u4eec\u53c8\u7b28\u53c8\u53ef\u7231\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4e8b\u60c5\u90fd\u4f9d\u8d56\u4e8e\u6211\u3002\n\u5443\uff0c\u8fd8\u8bb0\u5f97\u5173\u4e8e\u79d1\u7ef4\u5fb7\u7684\u90a3\u90e8\u5206\u5417\uff0c\u8fd8\u6709\u6574\u4e2a\uff0c\u6ca1\u6709\u5b69\u5b50\u7684\u4e8b\uff1f\u8fd8\u8bb0\u5f97\u5173\u4e8e\u6211\u5df2\u7ecf\u5728\u505a\u7684\u4ea7\u54c1\u8425\u9500\u9879\u76ee\u7684\u90a3\u90e8\u5206\u5417\uff0c\u5728\u6211\u5df2\u7ecf\u505a\u8fc7\u7684\u4ea7\u54c1\u8425\u9500\u5de5\u4f5c\u4e2d\uff1f\n\u55ef\u3002\u6211\u73b0\u5728\u6709\u51e0\u4ef6\u4e8b\u8981\u505a\u3002\u6240\u4ee5\u6211\u82b1\u4e86\u51e0\u5929\u65f6\u95f4\u624d\u5f04\u6e05\u695a\u8be5\u600e\u4e48\u529e\u3002\u56e0\u4e3a\u6211\u89c9\u5f97\u81ea\u5df1\u50cf\u4e2a\u7b28\u86cb\uff0c\u4e3b\u52a8\u63d0\u4f9b\u5e2e\u52a9\uff0c\u7136\u540e\u53c8\u53d6\u6d88\u4e86\u3002\u4f46\u6211\u4e5f\u77e5\u9053\uff0c\u5982\u679c\u6211\u627f\u8bfa\u6307\u5bfc75\u4e2a\u4eba\uff0c\u544a\u8bc9\u6211\u7684\u5b69\u5b50\u3001\u4e08\u592b\u548c\u5168\u804c\u5de5\u4f5c\u53bb\u8e22\u77f3\u5934\uff0c\u6211\u5c31\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u50bb\u74dc\u3002\n\u4e00\u4e2a\u6211\u53ef\u4ee5\u627f\u8bfa\u7684\u535a\u5ba2\u7cfb\u5217\u3002\u662f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4eca\u665a\u7684\u5bb6\u5ead\u6e38\u620f\u4e4b\u591c\u8981\u5750\u5728\u5916\u9762\uff0c\u628a\u81ea\u5df1\u9501\u5728\u5367\u5ba4\u91cc\uff0c\u767d\u566a\u97f3\u673a\u5668\u53d1\u51fa\u523a\u8033\u7684\u58f0\u97f3\uff0c\u5e0c\u671b\u6ca1\u6709\u5a74\u513f\u7684\u54ed\u58f0\u6216\u65e0\u610f\u4e2d\u542c\u5230\u7684\u7b11\u58f0\u4f1a\u5206\u6563\u6211\u7684\u6ce8\u610f\u529b\u3002\u4f46\u6211\u4f1a\u8fd9\u4e48\u505a\u7684\uff0c\u5e0c\u671b\u81f3\u5c11\u80fd\u5e2e\u52a9\u4f60\u4eec75\u4eba\u4e2d\u7684\u4e00\u4e9b\u4eba\uff0c\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u5f81\u5146\u6216\u63a8\u52a8\u529b\uff0c\u6216\u8005\u6709\u4eba\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u7684\u4e0b\u4e00\u6b65\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u4e0d\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\n\u5982\u679c\u4f60\u662f\u8fd975\u4e2a\u4eba\u4e2d\u7684\u4e00\u4e2a\uff0c\u6216\u8005\u4f60\u662f\u6211\u7684LinkedIn\u9875\u9762\u4e0a\u7684\u65b0\u4eba\uff0c\u6216\u8005\u4f60\u662f\u6709\u673a\u5730\u627e\u5230\u4e86\u6211\uff0c\u90a3\u4e48\u55e8\u3002\u6211\u662f\u5965\u5bbe\uff0c\u6211\u662f\u4e00\u540d\u4ea7\u54c1\u8425\u9500\u5458\uff0c\u5979\u5199\u51fa\u4e86\u4ee4\u4eba\u4fe1\u670d\u7684\u4fe1\u606f\uff0c\u4fc3\u8fdb\u4e86\u9500\u552e\uff0c\u5b9a\u4f4d\u4e86\u4ea7\u54c1\uff0c\u5e76\u63a8\u51fa\u4e86\u89e3\u51b3\u65b9\u6848\u3002\u6211\u613f\u610f\u4ee5\u4efb\u4f55\u6211\u80fd\u505a\u5230\u7684\u65b9\u5f0f\uff0c\u4ee5\u201c\u53ef\u6269\u5c55\u7684\u201d\u65b9\u5f0f\u5206\u4eab\u6211\u7684\u77e5\u8bc6\u548c\u7ecf\u9a8c\uff0c\u5e2e\u52a9\u4f60\u627e\u5230\u3001\u8c03\u6574\u6216\u7ee7\u7eed\u4f60\u5bfb\u627e\u804c\u4e1a\u5e78\u798f\u7684\u65c5\u7a0b\u3002\n\u8981\u6d4f\u89c8\u6211\u7684\u535a\u5ba2\u7cfb\u5217\u7684\u7b2c1\u90e8\u5206\uff0c\u201c\u4ea7\u54c1\u8425\u9500\uff1a\u4f60\u5c06\u62e5\u6709\u7684\u6700\u597d\u7684\u5de5\u4f5c\u201d\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\u3002", "note_en": "Last Thursday, I made  a post on LinkedIn. No article attached, no promotion, no contest, no cute picture of my twin girls (that was  a different post) \u2014 just a regular, text only, quick and dirty post on LinkedIn about the love affair I was having with a particular product marketing project I was working on.\n   But before I tell you exactly  what began, I want to make it clear: I am far from any kind of LinkedIn expert. I admit to putting myself way the hell out there  on instagram, but on good \u2018ol LI I\u2019m usually just here for the laughs, the inspos, and the connects. I might score 4 or 5 thumbs if I\u2019m lucky.\n But last Thursday, things played out differently. The second I clicked \u201cpost\u201d, the reactions and comments started pouring in\u2026And then the messages. And then more messages\u2026and then more. In total I received over 75 messages (and counting) \u2014 the majority of them asking to pick my brain, and for some version of mentorship. Holy. Crap.\n  And hey, I\u2019ll own my shit: the post  did suggest we connect if you\u2019re interested in learning more about product marketing. But I figured at BEST I might get 1 or 2 former colleagues slide into my dms with a \u201cFuck Covid. I got laid off. Let\u2019s grab drinks and Zoom about it.\u201d I\u2019d gladly entertain it, we\u2019d get a little saucy, have a giggle, and maybe I\u2019d help a friend find their path \u2014 or at least their confidence.\n But instead I got  nobody I knew. LITERALLY nobody. Every single person who messaged me was someone new, and interesting, and hungry, and excited to learn more about product marketing: What the hell it is, how I got into it, if I thought it would be a good fit for them, and if so, how they I suggest they get there too.\n You guys I\u2019m an enneagram 3 wing 2. My primary type is THE PERFORMER, so I won\u2019t even act like 75 people asking me for help wasn\u2019t the biggest ego stroke in the WORLD. And my secondary type is THE HELPER, so not only was I feeling pretty pleased with myself, but STOKED to start getting to work! Time to book these zooms and change the world!\n But wait. FUCK. Remember that part about twin infants? Yeah. They\u2019re 6 months. They\u2019re  stupid cute, and KIND of depend on me for literally everything.\n  And uh, remember that part about Covid, and the whole, not having childcare thing? And remember that part about the product marketing project I was already working on, at the product marketing job I already have?\n Yeah. I\u2019ve got a few things on my plate right now. So it took me a few days to figure out what the hell to do. Because I feel like a jackass, offering help, and then rescinding it. But I also know I\u2019m an even bigger jackass if I commit to mentor 75 people and tell my kids, husband, and full-time job to go kick rocks.\n  A blog series I can commit to. Yes it means sitting out for tonight\u2019s family game night, and locking myself in the bedroom with the white noise machine blaring, hoping no baby cry or overheard laughter will break my concentration. But I\u2019m going to do it, in hopes of helping at least some of the 75 of you who are looking for a sign, or a push, or someone to tell them wtf their next step should or shouldn\u2019t be.\n If you\u2019re one of the 75, or you\u2019re someone new coming across my LinkedIn page, or you found me organically, then hi. I\u2019m Aubyn, and I\u2019m a product marketer who totally gets her rocks off writing compelling messaging, enabling sales, positioning products, and launching solutions. I\u2019d love to *scalably* share my knowledge and experience in any way I can to help you find, realign, or continue on in your journey to find career happiness.\n To scope part 1 of my blog series,  Product Marketing: The Best Job You\u2019ll Ever Have,  click here.", "posttime": "2020-06-10 06:11:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "request", "title": "\u4e3a\u4ec0\u4e48\u6211\u8981\u5bf9\u4f60\u201c\u8bf7\u6559\u6211\u201d\u7684\u8981\u6c42\u8bf4\u201c\u4e0d\u201d", "title_en": "Why I\u2019m Answering \u201cNo\u201d to Your Request to \u201cPick My Brain\u201d", "transed": 1, "url": "https://medium.com/@aubynbethcasady/why-im-answering-no-to-your-request-to-pick-my-brain-296621d1a3ab", "via": "", "real_tags": ["request"]}]