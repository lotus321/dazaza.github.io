[{"category": "", "categoryclass": "", "imagename": "520d3ffe5b7c75d998418496cf1c8ec2.png", "infoid": 1006831, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u4eca\u5929\u62ab\u9732\u4e86\u4e00\u4e2a90\u5e74\u4ee3\u8bbe\u8ba1\u7684\u5c0f\u578b\u5e93\u4e2d\u768419\u4e2a\u6f0f\u6d1e\uff0c\u5728\u8fc7\u53bb\u768420\u591a\u5e74\u91cc\uff0c\u8be5\u5e93\u5df2\u88ab\u5e7f\u6cdb\u4f7f\u7528\u5e76\u96c6\u6210\u5230\u65e0\u6570\u7684\u4f01\u4e1a\u7ea7\u548c\u6d88\u8d39\u7ea7\u4ea7\u54c1\u4e2d\u3002\n\u53d7\u5f71\u54cd\u7684\u4ea7\u54c1\u5305\u62ec\u667a\u80fd\u5bb6\u5c45\u8bbe\u5907\u3001\u7535\u7f51\u8bbe\u5907\u3001\u533b\u7597\u4fdd\u5065\u7cfb\u7edf\u3001\u5de5\u4e1a\u8bbe\u5907\u3001\u8fd0\u8f93\u7cfb\u7edf\u3001\u6253\u5370\u673a\u3001\u8def\u7531\u5668\u3001\u79fb\u52a8/\u536b\u661f\u901a\u4fe1\u8bbe\u5907\u3001\u6570\u636e\u4e2d\u5fc3\u8bbe\u5907\u3001\u5546\u7528\u98de\u673a\u8bbe\u5907\u3001\u5404\u79cd\u4f01\u4e1a\u89e3\u51b3\u65b9\u6848\u7b49\u3002\n\u4e13\u5bb6\u4eec\u73b0\u5728\u62c5\u5fc3\uff0c\u7531\u4e8e\u590d\u6742\u6216\u672a\u8ddf\u8e2a\u7684\u8f6f\u4ef6\u4f9b\u5e94\u94fe\uff0c\u4f7f\u7528\u8be5\u5e93\u7684\u6240\u6709\u4ea7\u54c1\u5f88\u53ef\u80fd\u90fd\u5c06\u4fdd\u6301\u672a\u6253\u8865\u4e01\u3002\n\u51fa\u73b0\u95ee\u9898\u7684\u539f\u56e0\u662f\uff0c\u8be5\u5e93\u4e0d\u4ec5\u88ab\u8bbe\u5907\u4f9b\u5e94\u5546\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e14\u8fd8\u96c6\u6210\u5230\u5176\u4ed6\u8f6f\u4ef6\u5957\u4ef6\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u8bb8\u591a\u516c\u53f8\u751a\u81f3\u6ca1\u6709\u610f\u8bc6\u5230\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u8fd9\u6bb5\u7279\u5b9a\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u6613\u53d7\u653b\u51fb\u7684\u5e93\u7684\u540d\u79f0\u6ca1\u6709\u51fa\u73b0\u5728\u4ed6\u4eec\u7684\u4ee3\u7801\u6e05\u5355\u4e2d\u3002\n\u8fd9\u4e9b\u6f0f\u6d1e--\u7edf\u79f0\u4e3aRipple20--\u5f71\u54cd\u4e86\u8f9b\u8f9b\u90a3\u63d0\u8f6f\u4ef6\u516c\u53f8Treck\u5f00\u53d1\u7684\u4e00\u4e2a\u5c0f\u578b\u5e93\u3002\n\u636e\u4fe1\u8be5\u5e93\u4e8e1997\u5e74\u9996\u6b21\u53d1\u5e03\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7TCP/IP\u5806\u6808\u3002\u51e0\u5341\u5e74\u6765\uff0c\u516c\u53f8\u4e00\u76f4\u5728\u4f7f\u7528\u8fd9\u4e2a\u5e93\u6765\u5141\u8bb8\u4ed6\u4eec\u7684\u8bbe\u5907\u6216\u8f6f\u4ef6\u901a\u8fc7TCP/IP\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u3002\n\u81ea2019\u5e749\u6708\u4ee5\u6765\uff0c\u4f4d\u4e8e\u4ee5\u8272\u5217\u8036\u8def\u6492\u51b7\u7684\u5c0f\u578b\u7cbe\u54c1\u7f51\u7edc\u54a8\u8be2\u516c\u53f8JSOF\u7684\u7814\u7a76\u4eba\u5458\u4e00\u76f4\u5728\u7814\u7a76Treck\u7684TCP/IP\u534f\u8bae\u6808\uff0c\u56e0\u4e3a\u5b83\u8986\u76d6\u4e86\u5de5\u4e1a\u3001\u533b\u7597\u548c\u667a\u80fd\u8bbe\u5907\u5e02\u573a\u3002\n\u4ed6\u4eec\u7684\u5de5\u4f5c\u53d1\u73b0\u4e86\u4e25\u91cd\u7684\u6f0f\u6d1e\uff0cJSOF\u56e2\u961f\u4e00\u76f4\u5728\u4e0e\u4e0d\u540c\u56fd\u5bb6\u7684CERT(\u8ba1\u7b97\u673a\u5e94\u6025\u54cd\u5e94\u56e2\u961f)\u5408\u4f5c\uff0c\u534f\u8c03\u6f0f\u6d1e\u62ab\u9732\u548c\u4fee\u8865\u8fc7\u7a0b\u3002\n\u5728\u4e0a\u5468\u63a5\u53d7ZDNet\u91c7\u8bbf\u65f6\uff0cJSOF\u8868\u793a\uff0c\u8fd9\u6b21\u884c\u52a8\u6d89\u53ca\u5927\u91cf\u5de5\u4f5c\u548c\u4e0d\u540c\u7684\u6b65\u9aa4\uff0c\u6bd4\u5982\u8ba9Treck\u52a0\u5165\uff0c\u786e\u4fddTreck\u6309\u65f6\u6253\u8865\u4e01\uff0c\u7136\u540e\u627e\u5230\u6240\u6709\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\uff0c\u5e76\u8054\u7cfb\u6bcf\u4e2a\u53d7\u5f71\u54cd\u7684\u4f9b\u5e94\u5546\u3002\nJSOF\u9996\u5e2d\u6267\u884c\u5b98\u4ec0\u6d1b\u7c73\u00b7\u5965\u4f2f\u66fc(Shlomi Oberman)\u544a\u8bc9ZDNet\uff0c\u52aa\u529b\u53d6\u5f97\u4e86\u6210\u529f\u3002\u5965\u4f2f\u66fc\u79f0\u8d5eCERT/CC\u5728\u534f\u8c03\u6240\u6709\u53d7\u5f71\u54cd\u4f9b\u5e94\u5546\u7684\u6f0f\u6d1e\u62ab\u9732\u8fc7\u7a0b\u4e2d\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002\n\u5965\u4f2f\u66fc\u8bf4\uff0c\u867d\u7136Treck\u4e00\u5f00\u59cb\u4fdd\u6301\u6c89\u9ed8\uff0c\u8ba4\u4e3a\u5b83\u662f\u6572\u8bc8\u52d2\u7d22\u4f01\u56fe\u7684\u5bf9\u8c61\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u5b8c\u5168\u52a0\u5165\u3002\n\u5728\u5468\u4e00\u53d1\u7ed9ZDNet\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0cTreck\u786e\u8ba4\u73b0\u5728\u5df2\u7ecf\u4e3a\u6240\u6709Ripple20\u6f0f\u6d1e\u63d0\u4f9b\u4e86\u8865\u4e01\u3002\n\u4f46JSOF\u8868\u793a\uff0c\u8bc6\u522b\u6240\u6709\u6613\u53d7\u653b\u51fb\u8bbe\u5907\u7684\u5de5\u4f5c\u5c1a\u672a\u5b8c\u6210\u3002\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u5c06\u8fd919\u4e2a\u6f0f\u6d1e\u547d\u540d\u4e3aRipple20\uff0c\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u6700\u521d\u662f20\u4e2a\u6f0f\u6d1e\uff0c\u800c\u662f\u56e0\u4e3a\u5b83\u4eec\u5c06\u57282020\u5e74\u548c\u672a\u6765\u51e0\u5e74\u7ed9\u7269\u8054\u7f51\u9886\u57df\u5e26\u6765\u7684\u8fde\u9501\u53cd\u5e94\u3002\n\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u5f53\u6d89\u53ca\u5230\u53d1\u73b0\u6240\u6709\u5b9e\u73b0\u4e86Treck\u7684TCP/IP\u5e93\u7684\u8bbe\u5907\u65f6\uff0c\u4ed6\u4eec\u53ea\u662f\u89e6\u53ca\u4e86\u76ae\u6bdb\uff0c\u8bb8\u591a\u8bbe\u5907\u4f9b\u5e94\u5546\u672a\u6765\u5c06\u9700\u8981\u9a8c\u8bc1\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\u3002\n\u5965\u4f2f\u66fc\u8bf4\uff0c\u867d\u7136\u4e0d\u662f\u6240\u6709\u7684Ripple20\u6f0f\u6d1e\u90fd\u5f88\u4e25\u91cd\uff0c\u4f46\u6709\u51e0\u4e2a\u662f\u6781\u5176\u5371\u9669\u7684\uff0c\u5141\u8bb8\u653b\u51fb\u8005\u4ece\u8fdc\u7a0b\u60c5\u51b5\u4e0b\u63a5\u7ba1\u6613\u53d7\u653b\u51fb\u7684\u7cfb\u7edf\u3002\n\u5728\u4e00\u4efd\u5c06\u4e8e\u4eca\u5929\u4e0a\u7ebf\u5e76\u7531ZDNet\u5728\u7981\u8fd0\u4e0b\u8fdb\u884c\u5ba1\u67e5\u7684\u5b89\u5168\u54a8\u8be2\u4e2d\uff0c\u7f8e\u56fd\u56fd\u571f\u5b89\u5168\u90e8(US Department Of Homeland Security)\u5c06CVSSv3\u6f0f\u6d1e\u4e25\u91cd\u7a0b\u5ea6\u91cf\u8868(\u4ece1\u523010)\u4e0a\u768410\u548c9.8\u8bc4\u7ea7\u5f52\u56e0\u4e8eRipple 20\u6f0f\u6d1e\u4e2d\u76844\u4e2a\u3002\u5b83\u4eec\u662f\uff1a\nCVE-2020-11896-CVSSv3\u5206\u6570\uff1a10-\u5904\u7406\u672a\u7ecf\u6388\u6743\u7684\u7f51\u7edc\u653b\u51fb\u8005\u53d1\u9001\u7684\u6570\u636e\u5305\u65f6\uff0cipv4/udp\u7ec4\u4ef6\u4e2d\u7684\u957f\u5ea6\u53c2\u6570\u4e0d\u4e00\u81f4\u5904\u7406\u4e0d\u5f53\u3002\u6b64\u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3002\nCVE-2020-11897-CVSSv3\u5206\u6570\uff1a10-\u5904\u7406\u672a\u7ecf\u6388\u6743\u7684\u7f51\u7edc\u653b\u51fb\u8005\u53d1\u9001\u7684\u6570\u636e\u5305\u65f6\uff0cipv6\u7ec4\u4ef6\u4e2d\u7684\u957f\u5ea6\u53c2\u6570\u4e0d\u4e00\u81f4\u5904\u7406\u4e0d\u5f53\u3002\u6b64\u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u53ef\u80fd\u7684\u8d8a\u754c\u5199\u5165\u3002\nCVE-2020-11898-CVSSv3\u5f97\u5206\uff1a9.8-\u5904\u7406\u672a\u7ecf\u6388\u6743\u7684\u7f51\u7edc\u653b\u51fb\u8005\u53d1\u9001\u7684\u6570\u636e\u5305\u65f6\uff0cipv4/icmpv4\u7ec4\u4ef6\u4e2d\u7684\u957f\u5ea6\u53c2\u6570\u4e0d\u4e00\u81f4\u5904\u7406\u4e0d\u5f53\u3002\u6b64\u6f0f\u6d1e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u3002\nCVE-2020-11899-CVSSv3\u5206\u6570\uff1a9.8-\u5904\u7406\u672a\u7ecf\u6388\u6743\u7684\u7f51\u7edc\u653b\u51fb\u8005\u53d1\u9001\u7684\u6570\u636e\u5305\u65f6\uff0cipv6\u7ec4\u4ef6\u4e2d\u7684\u8f93\u5165\u9a8c\u8bc1\u4e0d\u6b63\u786e\u3002\u6b64\u6f0f\u6d1e\u53ef\u80fd\u5141\u8bb8\u66b4\u9732\u654f\u611f\u4fe1\u606f\u3002\n\u8fd9\u56db\u4e2a\u6f0f\u6d1e\u5728\u6b66\u5668\u5316\u540e\uff0c\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u8f7b\u677e\u63a5\u7ba1\u667a\u80fd\u8bbe\u5907\u6216\u4efb\u4f55\u5de5\u4e1a\u6216\u533b\u7597\u8bbe\u5907\u3002\u5982\u679c\u8bbe\u5907\u5728\u7ebf\u8fde\u63a5\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u4e92\u8054\u7f51\u8fdb\u884c\u653b\u51fb\uff1b\u5982\u679c\u653b\u51fb\u8005\u5728\u5185\u90e8\u7f51\u7edc\u4e0a\u83b7\u5f97\u7acb\u8db3\u70b9(\u4f8b\u5982\uff0c\u901a\u8fc7\u53d7\u635f\u7684\u8def\u7531\u5668)\uff0c\u5219\u53ef\u4ee5\u4ece\u672c\u5730\u7f51\u7edc\u8fdb\u884c\u653b\u51fb\u3002\n\u8fd9\u56db\u4e2a\u6f0f\u6d1e\u65e2\u662f\u50f5\u5c38\u7f51\u7edc\u8fd0\u8425\u5546\u7684\u7406\u60f3\u9009\u62e9\uff0c\u4e5f\u662f\u5b9a\u5411\u653b\u51fb\u7684\u7406\u60f3\u9009\u62e9\u3002\u6d4b\u8bd5\u6240\u6709\u7cfb\u7edf\u7684Ripple20\u6f0f\u6d1e\u5e76\u5bf9\u8fd9\u56db\u4e2a\u95ee\u9898\u6253\u8865\u4e01\u5c24\u5176\u5e94\u8be5\u662f\u6240\u6709\u516c\u53f8\u7684\u4f18\u5148\u4e8b\u9879\uff0c\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3aTreck\u5728\u6574\u4e2a\u8f6f\u4ef6\u9886\u57df\u7684\u8db3\u8ff9\u5f88\u5927\u3002\n\u76ee\u524d\u9884\u8ba1Ripple20\u6f0f\u6d1e\u7684\u5f71\u54cd\u4e0e2019\u5e747\u6708\u62ab\u9732\u7684\u7d27\u6025/11\u6f0f\u6d1e\u76f8\u540c\uff0c\u81f3\u4eca\u4ecd\u5728\u8c03\u67e5\u4e2d\uff0c\u5e76\u5b9a\u671f\u53d1\u73b0\u548c\u6253\u8865\u4e01\u65b0\u7684\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\u3002\u8fd9\u79cd\u6bd4\u8f83\u4e0d\u662f\u5076\u7136\u7684\uff0c\u56e0\u4e3a\u7d27\u6025/11\u6f0f\u6d1e\u5f71\u54cd\u4e86VxWorks\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u7684TCP/IP(IPnet)\u7f51\u7edc\u5806\u6808\uff0cVxWorks\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u662f\u7269\u8054\u7f51\u548c\u5de5\u4e1a\u9886\u57df\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u53e6\u4e00\u79cd\u4ea7\u54c1\u3002\n\u5c31\u50cf\u7d27\u6025/11\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u4e00\u4e9b\u4ea7\u54c1\u5c06\u4fdd\u6301\u672a\u6253\u8865\u4e01\uff0c\u56e0\u4e3a\u4e00\u4e9b\u4ea7\u54c1\u5df2\u7ecf\u505c\u4ea7\uff0c\u6216\u8005\u4f9b\u5e94\u5546\u5728\u6b64\u671f\u95f4\u5173\u95ed\u4e86\u8fd0\u8425\u3002\nJSOF\u5df2\u88ab\u9080\u8bf7\u5728\u7f8e\u56fd\u9ed1\u5e3d2020\u5b89\u5168\u4f1a\u8bae\u4e0a\u5c31\u8fd9\u4e9b\u6f0f\u6d1e\u53d1\u8868\u6f14\u8bb2\u3002", "note_en": "Cyber-security experts have revealed today 19 vulnerabilities in a small library designed in the 90s that has been widely used and integrated into countless of enterprise and consumer-grade products over the last 20+ years.\n    Affected products include smart home devices, power grid equipment, healthcare systems, industrial gear, transportation systems, printers, routers, mobile/satellite communications equipment, data center devices, commercial aircraft devices, various enterprise solutions, and many others.\n Experts now fear that all products using this library will most likely remain unpatched due to complex or untracked software supply chains.\n Problems arise from the fact that the library was not only used by equipment vendors directly but also integrated into other software suites, which means that many companies aren&#39;t even aware that they&#39;re using this particular piece of code, and the name of the vulnerable library doesn&#39;t appear in their code manifests.\n  These vulnerabilities -- collectively referred to as   Ripple20  -- impact a small library developed by Cincinnati-based software company  Treck.\n   The library, believed to have been first released in 1997, implements a lightweight TCP/IP stack. Companies have been using this library for decades to allow their devices or software to connect to the internet via TCP/IP connections.\n Since September 2019, researchers from  JSOF, a small boutique cyber consultancy firm located in Jerusalem, Israel, have been looking at Treck&#39;s TCP/IP stack, due to its broad footprint across the industrial, healthcare, and smart device market.\n   Their work unearthed serious vulnerabilities, and the JSOF team has been working with CERT (computer emergency response teams) in different countries to coordinate the vulnerability disclosure and patching process.\n In an interview with  ZDNet last week, JSOF said this operation involved a lot of work and different steps, such as getting Treck on board, making sure Treck has patches on time, and then finding all the vulnerable equipment and reaching out to each of the impacted vendors.\n Efforts have been successful, Shlomi Oberman, chief executive officer at JSOF, has told  ZDNet. Oberman credited CERT/CC for playing a major role in coordinating the vulnerability disclosure process with all impacted vendors.\n Treck, while reticent in the beginning and thinking it was the subject of an extortion attempt, is now fully on board, Oberman said.\n In an email to  ZDNet on Monday, Treck has confirmed that patches are now available for all the Ripple20 vulnerabilities.\n  But JSOF said the work on identifying all the vulnerable devices is not yet done. The researchers said they named the 19 vulnerabilities as Ripple20 not because they were 20 vulnerabilities in the beginning, but because of the ripple effect they&#39;ll cause in the IoT landscape in 2020, and the years to come.\n Researchers say they only scratched the surface when it comes to discovering all the devices that have implemented Treck&#39;s TCP/IP library, and that many equipment vendors will need to verify their own code going forward.\n Oberman said that while not all of the Ripple20 vulnerabilities are severe, there are a few that are extremely dangerous, allowing attackers to take over vulnerable systems from a &#34;remote&#34; scenario.\n In a security advisory that will go live today and reviewed by ZDNet under embargo, the US Department of Homeland Security has attributed ratings of 10 and 9.8 on the CVSSv3 vulnerability severity scale (scale goes from 1 to 10) to four of the Ripple 20 vulnerabilities. These are:\n CVE-2020-11896 - CVSSv3 score: 10 - Improper handling of length parameter inconsistency in IPv4/UDP component when handling a packet sent by an unauthorized network attacker. This vulnerability may result in remote code execution.\n CVE-2020-11897 - CVSSv3 score: 10 - Improper handling of length parameter inconsistency in IPv6 component when handling a packet sent by an unauthorized network attacker. This vulnerability may result in possible out-of-bounds write.\n CVE-2020-11898 - CVSSv3 score: 9.8 - Improper handling of length parameter inconsistency in IPv4/ICMPv4 component when handling a packet sent by an unauthorized network attacker. This vulnerability may result in exposure of sensitive information.\n CVE-2020-11899 - CVSSv3 score: 9.8 - Improper input validation in IPv6 component when handling a packet sent by an unauthorized network attacker. This vulnerability may allow exposure of sensitive information.\n These four vulnerabilities, when weaponized, could allow attackers to easily take over smart devices or any industrial or healthcare equipment. Attacks are possible via the internet if the devices are connected online, or from local networks if the attacker gains a foothold on an internal network (for example, via a compromised router).\n These four vulnerabilities are ideal for both botnet operators, but also for targeted attacks. Testing all systems for the Ripple20 vulnerabilities and patching these four issues, in particular, should be a priority for all companies, primarily due to Treck&#39;s large footprint across the software landscape.\n  The impact of the Ripple20 vulnerabilities is currently expected to be the same as  the Urgent/11 vulnerabilities that were disclosed in July 2019, and which are still being investigated to this day, and new vulnerable devices are being found and patched on a regular basis. The comparison is not accidental, as the Urgent/11 vulnerabilities impacted the the TCP/IP (IPnet) networking stack of the VxWorks real-time operating system, another product widely used in the IoT and industrial landscape.\n Just like in the case of Urgent/11, some products will remained unpatched, as some have gone end-of-life, or the vendors have shut down operations in the meantime.\n JSOF has been invited to speak about these vulnerabilities at the  Black Hat USA 2020 security conference.", "posttime": "2020-06-17 01:16:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7269\u8054\u7f51,\u6f0f\u6d1e,vulnerabilities,\u8bbe\u5907", "title": "Ripple20\u6f0f\u6d1e\u5c06\u5728\u672a\u6765\u51e0\u5e74\u56f0\u6270\u7269\u8054\u7f51\u73af\u5883", "title_en": "Ripple20 Vulnerabilities Will Haunt the IoT Landscape For Years To Come", "transed": 1, "url": "https://www.zdnet.com/article/ripple20-vulnerabilities-will-haunt-the-iot-landscape-for-years-to-come/", "via": "", "real_tags": ["\u7269\u8054\u7f51", "\u6f0f\u6d1e", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "f978812514a8e52a3a7c908e6e852999.png", "infoid": 1006830, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6bd4\u52d2\uff0c\u6211\u4eec\u662f\u4e00\u4e2a\u901a\u6653\u591a\u79cd\u8bed\u8a00\u7684\u5de5\u7a0b\u56e2\u961f\u3002\u65e0\u8bba\u662f\u53e3\u5934\u8bed\u8a00\u8fd8\u662f\u7f16\u7a0b\u8bed\u8a00\u3002\u9664\u4e86\u4ee3\u7406\u5e93\u652f\u6301\u7684\u6240\u6709\u8bed\u8a00\u4e4b\u5916\uff0c\u6211\u4eec\u7684\u5806\u6808\u8fd8\u7531\u7528Node.js\u3001Ruby\u3001Elixir\u548c\u5176\u4ed6\u51e0\u79cd\u8bed\u8a00\u7f16\u5199\u7684\u670d\u52a1\u7ec4\u6210\u3002\u50cf\u5927\u591a\u6570\u56e2\u961f\u4e00\u6837\uff0c\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\u4e0e\u5728\u65f6\u95f4\u4e0a\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u7684\u4e00\u9879\u670d\u52a1\u8fbe\u5230\u4e86\u9650\u5236\uff0c\u5bfc\u81f4\u6211\u4eec\u5c06\u8be5\u670d\u52a1\u4eceNode.js\u8fc1\u79fb\u5230Rust\u3002\u8fd9\u7bc7\u6587\u7ae0\u63a2\u8ba8\u4e86\u5bfc\u81f4\u9700\u8981\u66f4\u6539\u8bed\u8a00\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u4ee5\u53ca\u6211\u4eec\u5728\u6b64\u8fc7\u7a0b\u4e2d\u505a\u51fa\u7684\u4e00\u4e9b\u51b3\u5b9a\u3002\n\u6211\u4eec\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u6765\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u76d1\u63a7\u4ed6\u4eec\u7684API\u3002\u6bcf\u6b21\u5ba2\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528API\u65f6\uff0c\u90fd\u4f1a\u5411\u6211\u4eec\u53d1\u9001\u4e00\u4e2a\u65e5\u5fd7\uff0c\u6211\u4eec\u5728\u90a3\u91cc\u5bf9\u5176\u8fdb\u884c\u76d1\u63a7\u548c\u5206\u6790\u3002\n\u5728\u95ee\u9898\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u5e73\u5747\u6bcf\u5206\u949f\u5904\u740630K\u4e2aAPI\u8c03\u7528\u3002\u8fd9\u662f\u6211\u4eec\u6240\u6709\u5ba2\u6237\u8fdb\u884c\u7684\u5927\u91cfAPI\u8c03\u7528\u3002\u6211\u4eec\u5c06\u8be5\u8fc7\u7a0b\u5206\u4e3a\u4e24\u4e2a\u5173\u952e\u90e8\u5206\uff1a\u65e5\u5fd7\u63a5\u6536\u548c\u65e5\u5fd7\u5904\u7406\u3002\n\u6211\u4eec\u6700\u521d\u5728Node.js\u4e2d\u6784\u5efa\u4e86\u6444\u53d6\u670d\u52a1\u3002\u5b83\u5c06\u63a5\u6536\u65e5\u5fd7\uff0c\u4e0e\u7075\u4e39\u5999\u836f\u670d\u52a1\u901a\u4fe1\u4ee5\u68c0\u67e5\u5ba2\u6237\u8bbf\u95ee\u6743\u9650\uff0c\u4f7f\u7528Redis\u68c0\u67e5\u901f\u7387\u9650\u5236\uff0c\u7136\u540e\u5c06\u65e5\u5fd7\u53d1\u9001\u5230CloudWatch\u3002\u5728\u90a3\u91cc\uff0c\u5b83\u5c06\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u901a\u77e5\u6211\u4eec\u7684\u5904\u7406\u5de5\u4eba\u63a5\u7ba1\u3002\n\u6211\u4eec\u6355\u83b7\u6709\u5173API\u8c03\u7528\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4ece\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u7684\u6bcf\u4e2a\u8c03\u7528\u7684\u6709\u6548\u8d1f\u8f7d(\u8bf7\u6c42\u548c\u54cd\u5e94)\u3002\u8fd9\u4e9b\u5f53\u524d\u88ab\u9650\u5236\u4e3a1MB\uff0c\u4f46\u8fd9\u4ecd\u7136\u662f\u8981\u5904\u7406\u7684\u5927\u91cf\u6570\u636e\u3002\u6211\u4eec\u4ee5\u5f02\u6b65\u65b9\u5f0f\u53d1\u9001\u548c\u5904\u7406\u6240\u6709\u5185\u5bb9\uff0c\u76ee\u6807\u662f\u4f7f\u4fe1\u606f\u5c3d\u53ef\u80fd\u5feb\u5730\u63d0\u4f9b\u7ed9\u6700\u7ec8\u7528\u6237\u3002\n\u6211\u4eec\u5728AWS Fargate(\u5f39\u6027\u5bb9\u5668\u670d\u52a1(ECS)\u7684\u65e0\u670d\u52a1\u5668\u7ba1\u7406\u89e3\u51b3\u65b9\u6848)\u4e0a\u6258\u7ba1\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u5e76\u57284000\u8bf7\u6c42/\u5206\u949f\u540e\u5c06\u5176\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u7f29\u653e\u3002\u4e00\u5207\u90fd\u5f88\u68d2\uff01\u7136\u540e\uff0c\u53d1\u7968\u6765\u4e86\ud83d\ude31\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528Kinesis Firehose\uff0c\u800c\u4e0d\u662f\u5c06\u65e5\u5fd7\u53d1\u9001\u5230CloudWatch\u3002Kinesis Firehose\u57fa\u672c\u4e0a\u662fAWS\u63d0\u4f9b\u7684Kafka\u7b49\u4ef7\u7269\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u4ee5\u53ef\u9760\u7684\u65b9\u5f0f\u5c06\u6570\u636e\u6d41\u4f20\u9001\u5230\u591a\u4e2a\u76ee\u7684\u5730\u3002\u7531\u4e8e\u6211\u4eec\u7684\u65e5\u5fd7\u5904\u7406\u5de5\u4f5c\u5668\u51e0\u4e4e\u6ca1\u6709\u66f4\u65b0\uff0c\u56e0\u6b64\u6211\u4eec\u80fd\u591f\u4eceCloudWatch\u548cKinesis Firehose\u83b7\u53d6\u65e5\u5fd7\u3002\u968f\u7740\u8fd9\u4e00\u53d8\u5316\uff0c\u6bcf\u5929\u7684\u6210\u672c\u5c06\u964d\u81f3\u4ee5\u524d\u76840.6%\u5de6\u53f3\u3002\n\u66f4\u65b0\u7684\u670d\u52a1\u73b0\u5728\u901a\u8fc7Kinesis\u5c06\u65e5\u5fd7\u6570\u636e\u4f20\u9012\u5230S3\uff0c\u4ece\u800c\u89e6\u53d1\u5de5\u4f5c\u4eba\u5458\u63a5\u7ba1\u5904\u7406\u4efb\u52a1\u3002\u6211\u4eec\u628a\u96f6\u94b1\u62ff\u51fa\u6765\uff0c\u4e00\u5207\u90fd\u6062\u590d\u6b63\u5e38\u4e86.\u3002\u6216\u8005\u6211\u4eec\u8ba4\u4e3a\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u6ce8\u610f\u5230\u6211\u4eec\u7684\u76d1\u63a7\u4eea\u8868\u677f\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e9b\u5f02\u5e38\u60c5\u51b5\u3002\n\u6211\u4eec\u5728\u6536\u96c6\u5783\u573e\uff0c\u5f88\u591a\u65f6\u5019\u3002\u5783\u573e\u56de\u6536(GC)\u662f\u67d0\u4e9b\u8bed\u8a00\u81ea\u52a8\u91ca\u653e\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u6682\u505c\u3002\u8fd9\u79f0\u4e3aGC\u6682\u505c\u3002\u60a8\u5bf9\u5185\u5b58\u8fdb\u884c\u7684\u5199\u5165\u8d8a\u591a\uff0c\u9700\u8981\u8fdb\u884c\u7684\u5783\u573e\u6536\u96c6\u5c31\u8d8a\u591a\uff0c\u56e0\u6b64\uff0c\u6682\u505c\u65f6\u95f4\u4f1a\u589e\u52a0\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u670d\u52a1\uff0c\u8fd9\u4e9b\u6682\u505c\u53d8\u5f97\u8db3\u591f\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u5bfc\u81f4\u670d\u52a1\u5668\u91cd\u65b0\u542f\u52a8\uff0c\u5e76\u7ed9CPU\u5e26\u6765\u538b\u529b\u3002\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u53ef\u80fd\u770b\u8d77\u6765\u670d\u52a1\u5668\u5df2\u5173\u95ed-\u56e0\u4e3a\u5b83\u662f\u6682\u65f6\u7684-\u6211\u4eec\u7684\u5ba2\u6237\u5f00\u59cb\u770b\u5230\u6211\u4eec\u7684\u4ee3\u7406\u8bd5\u56fe\u63a5\u6536\u7684\u5927\u7ea66%\u7684\u65e5\u5fd7\u51fa\u73b05xx\u9519\u8bef\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6682\u505c\u65f6\u95f4\u8d85\u8fc74\u79d2(\u5982\u5de6\u4fa7\u6240\u793a)\uff0c\u6211\u4eec\u7684\u5b9e\u4f8b\u6bcf\u5206\u949f\u6700\u591a\u6709400\u6b21\u6682\u505c(\u5982\u53f3\u4fa7\u6240\u793a)\u3002\n\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u6211\u4eec\u4f3c\u4e4e\u662fAWS Javascript SDK\u4e2d\u5185\u5b58\u6cc4\u6f0f\u7684\u53e6\u4e00\u4e2a\u53d7\u5bb3\u8005\u3002\u6211\u4eec\u5c1d\u8bd5\u5c06\u8d44\u6e90\u5206\u914d\u589e\u52a0\u5230\u6781\u503c\uff0c\u6bd4\u5982\u57281000\u8bf7\u6c42/\u5206\u949f\u540e\u81ea\u52a8\u7f29\u653e\uff0c\u4f46\u90fd\u4e0d\u8d77\u4f5c\u7528\u3002\n\u7531\u4e8e\u6211\u4eec\u7684\u5907\u4efd\u8ba1\u5212\u4e0d\u518d\u662f\u4e00\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u8f6c\u5411\u4e86\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u9996\u5148\uff0c\u6211\u4eec\u770b\u4e86\u90a3\u4e9b\u8fc7\u6e21\u8def\u5f84\u6700\u7b80\u5355\u7684\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528Elixir\u670d\u52a1\u68c0\u67e5\u5ba2\u6237\u8bbf\u95ee\u6743\u9650\u3002\u6b64\u670d\u52a1\u662f\u79c1\u6709\u670d\u52a1\uff0c\u53ea\u80fd\u4ece\u6211\u4eec\u7684\u79c1\u6709\u7f51\u7edc(VPC)\u5185\u8bbf\u95ee\u3002\u6211\u4eec\u4ece\u672a\u9047\u5230\u8fc7\u8be5\u670d\u52a1\u7684\u4efb\u4f55\u53ef\u4f38\u7f29\u6027\u95ee\u9898\uff0c\u5e76\u4e14\u5927\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u5b58\u5728\u3002\u6211\u4eec\u53ea\u9700\u4ece\u8be5\u670d\u52a1\u4e2d\u5c06\u65e5\u5fd7\u53d1\u9001\u5230Kinesis\uff0c\u5e76\u8df3\u8fc7Node.js\u670d\u52a1\u5c42\u5373\u53ef\u3002\u6211\u4eec\u8ba4\u4e3a\u503c\u5f97\u4e00\u8bd5\u3002\n\u6211\u4eec\u5f00\u53d1\u4e86\u7f3a\u5931\u7684\u90e8\u4ef6\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u597d\u591a\u4e86\uff0c\u4f46\u8fd8\u662f\u4e0d\u592a\u597d\u3002\u6211\u4eec\u7684\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\uff0c\u5783\u573e\u6536\u96c6\u7684\u6c34\u5e73\u4ecd\u7136\u5f88\u9ad8\uff0c\u5728\u4f7f\u7528\u65e5\u5fd7\u65f6\uff0c\u6211\u4eec\u4ecd\u7136\u5411\u7528\u6237\u8fd4\u56de5xx\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6c89\u91cd\u7684\u8d1f\u8f7d\u89e6\u53d1\u4e86\u6211\u4eec\u7684\u4e00\u4e2a\u957f\u751f\u4e0d\u8001\u836f\u4f9d\u8d56\u9879\u7684\u95ee\u9898(\u73b0\u5728\u5df2\u7ecf\u89e3\u51b3)\u3002\n\u6211\u4eec\u4e5f\u8003\u8651\u4e86\u6208\u6717\u3002\u5b83\u672c\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u8bed\u8a00\uff0c\u4f46\u6700\u7ec8\uff0c\u5b83\u662f\u53e6\u4e00\u79cd\u5783\u573e\u6536\u96c6\u8bed\u8a00\u3002\u867d\u7136\u53ef\u80fd\u6bd4\u6211\u4eec\u4ee5\u524d\u7684\u5b9e\u73b0\u66f4\u6709\u6548\uff0c\u4f46\u968f\u7740\u89c4\u6a21\u7684\u6269\u5927\uff0c\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u4f1a\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u9650\u5236\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u3002\n\u5728\u6211\u4eec\u7684\u539f\u59cb\u5b9e\u73b0\u548c\u5907\u4efd\u4e2d\uff0c\u6838\u5fc3\u95ee\u9898\u90fd\u4fdd\u6301\u4e0d\u53d8\uff1a\u5783\u573e\u56de\u6536\u3002\u89e3\u51b3\u65b9\u6848\u662f\u8fc1\u79fb\u5230\u5185\u5b58\u7ba1\u7406\u66f4\u597d\u3001\u6ca1\u6709\u5783\u573e\u56de\u6536\u7684\u8bed\u8a00\u3002\u8fdb\u5165\u94c1\u9508\u3002\n\u6240\u6709\u6743\u662fRust\u6700\u72ec\u7279\u7684\u7279\u6027\uff0c\u5b83\u4f7fRust\u80fd\u591f\u5728\u4e0d\u9700\u8981\u5783\u573e\u6536\u96c6\u5668\u7684\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u5185\u5b58\u5b89\u5168\u3002-\u201c\u94c1\u9508\u4e4b\u4e66\u201d\n\u6240\u6709\u6743\u7684\u6982\u5ff5\u7ecf\u5e38\u4f7fRust\u96be\u4ee5\u5b66\u4e60\u548c\u7f16\u5199\uff0c\u4f46\u4e5f\u662f\u5b83\u975e\u5e38\u9002\u5408\u6211\u4eec\u8fd9\u6837\u7684\u60c5\u51b5\u7684\u539f\u56e0\u3002Rust\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u6709\u4e00\u4e2a\u6240\u6709\u8005\u53d8\u91cf\uff0c\u56e0\u6b64\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4e2a\u5206\u914d\u70b9\u3002\u4e00\u65e6\u8be5\u53d8\u91cf\u8d85\u51fa\u4f5c\u7528\u57df\uff0c\u5c31\u4f1a\u7acb\u5373\u8fd4\u56de\u5185\u5b58\u3002\n\u7531\u4e8e\u6444\u53d6\u65e5\u5fd7\u6240\u9700\u7684\u4ee3\u7801\u975e\u5e38\u5c0f\uff0c\u6211\u4eec\u51b3\u5b9a\u8bd5\u4e00\u8bd5\u3002\u4e3a\u4e86\u6d4b\u8bd5\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u89e3\u51b3\u4e86\u6211\u4eec\u9047\u5230\u7684\u95ee\u9898-\u5411Kinesis\u53d1\u9001\u5927\u91cf\u6570\u636e\u3002\n\u4ece\u8fd9\u4e00\u70b9\u4e0a\u8bf4\uff0c\u6211\u4eec\u975e\u5e38\u6709\u4fe1\u5fc3Rust\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\uff0c\u6211\u4eec\u51b3\u5b9a\u5c06\u539f\u578b\u5145\u5b9e\u4e3a\u751f\u4ea7\u5c31\u7eea\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5728\u8fd9\u4e9b\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u76f4\u63a5\u7528Rust\u66ff\u6362\u539f\u59cb\u7684Node.js\u670d\u52a1\uff0c\u800c\u662f\u91cd\u65b0\u6784\u5efa\u4e86\u5927\u90e8\u5206\u56f4\u7ed5\u65e5\u5fd7\u6444\u53d6\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u65b0\u670d\u52a1\u7684\u6838\u5fc3\u662f\u7279\u4f7f\u4ee3\u7406\uff0c\u4f7f\u7528Rust\u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3a\u4fa7\u8f66\u3002\n\u73b0\u5728\uff0c\u5f53\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u627f\u8f7d\u4ee3\u7406\u5411\u627f\u8f7d\u53d1\u9001\u65e5\u5fd7\u6570\u636e\u65f6\uff0c\u5b83\u5c06\u8fdb\u5165\u7279\u4f7f\u4ee3\u7406\u3002\u7279\u4f7f\u67e5\u770b\u8bf7\u6c42\u5e76\u4e0eRedis\u901a\u4fe1\uff0c\u4ee5\u68c0\u67e5\u901f\u7387\u9650\u5236\u3001\u6388\u6743\u8be6\u7ec6\u4fe1\u606f\u548c\u4f7f\u7528\u914d\u989d\u7b49\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\uff0c\u4e0e\u7279\u4f7f\u4e00\u8d77\u8fd0\u884c\u7684Rust\u5e94\u7528\u7a0b\u5e8f\u51c6\u5907\u65e5\u5fd7\u6570\u636e\uff0c\u5e76\u901a\u8fc7Kinesis\u5c06\u5176\u4f20\u9012\u5230S3\u5b58\u50a8\u6876\u4e2d\u8fdb\u884c\u5b58\u50a8\u3002\u7136\u540e\uff0cS3\u89e6\u53d1\u6211\u4eec\u7684\u5de5\u4f5c\u4eba\u5458\u83b7\u53d6\u5e76\u5904\u7406\u6570\u636e\uff0c\u4ee5\u4fbfElastic Search\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u7d22\u5f15\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u7684\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u4eea\u8868\u677f\u4e2d\u7684\u6570\u636e\u3002\n\u6211\u4eec\u53d1\u73b0\uff0c\u4f7f\u7528\u66f4\u5c11-\u66f4\u5c0f\u7684-\u670d\u52a1\u5668\uff0c\u6211\u4eec\u80fd\u591f\u5904\u7406\u66f4\u591a\u7684\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u65e9\u671f\u7684\u95ee\u9898\u3002\n\u5982\u679c\u6211\u4eec\u67e5\u770bNode.js\u670d\u52a1\u7684\u5ef6\u8fdf\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u63a5\u8fd11700ms\u7684\u5cf0\u503c\u3002\n\u4f7f\u7528Rust\u670d\u52a1\u5b9e\u73b0\uff0c\u5ef6\u8fdf\u964d\u4f4e\u523090ms\u4ee5\u4e0b\uff0c\u5373\u4f7f\u5728\u6700\u9ad8\u5cf0\u503c\u65f6\u4e5f\u662f\u5982\u6b64\uff0c\u4f7f\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u4fdd\u6301\u572840ms\u4ee5\u4e0b\u3002\n\u539f\u59cb\u7684Node.js\u5e94\u7528\u7a0b\u5e8f\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u90fd\u4f7f\u7528\u4e86\u5927\u7ea61.5 GB\u7684\u5185\u5b58\uff0c\u800cCPU\u5728150%\u7684\u8d1f\u8f7d\u4e0b\u8fd0\u884c\u3002\u65b0\u7684Rust\u670d\u52a1\u4f7f\u7528\u4e86\u5927\u7ea6100MB\u7684\u5185\u5b58\u548c\u4ec52.5%\u7684CPU\u8d1f\u8f7d\u3002\n\u4e0e\u5927\u591a\u6570\u521d\u521b\u516c\u53f8\u4e00\u6837\uff0c\u6211\u4eec\u884c\u52a8\u8fc5\u901f\u3002\u6709\u65f6\uff0c\u5f53\u65f6\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5e76\u4e0d\u662f\u6c38\u8fdc\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002Node.js\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u5b83\u8ba9\u6211\u4eec\u5411\u524d\u8fc8\u8fdb\uff0c\u4f46\u968f\u7740\u6211\u4eec\u7684\u6210\u957f\uff0c\u6211\u4eec\u4e5f\u8d85\u8d8a\u4e86\u5b83\u3002\u968f\u7740\u6211\u4eec\u5f00\u59cb\u5904\u7406\u8d8a\u6765\u8d8a\u591a\u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u4e0d\u65ad\u53d1\u5c55\u4ee5\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u3002\u867d\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u5f00\u59cb\u4e8e\u4e00\u4e2a\u4fee\u590d\uff0c\u53ea\u662f\u7528Rust\u66ff\u6362\u4e86Node.js\uff0c\u4f46\u5b83\u5bfc\u81f4\u4e86\u5bf9\u6211\u4eec\u7684\u65e5\u5fd7\u6444\u53d6\u670d\u52a1\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u7684\u91cd\u65b0\u601d\u8003\u3002\n\u6211\u4eec\u5728\u6574\u4e2a\u5806\u6808\u4e2d\u4ecd\u7136\u4f7f\u7528\u5404\u79cd\u8bed\u8a00\uff0c\u5305\u62ecNode.js\uff0c\u4f46\u73b0\u5728\u5c06\u8003\u8651\u5c06Rust\u7528\u4e8e\u6709\u610f\u4e49\u7684\u65b0\u670d\u52a1\u3002", "note_en": "At Bearer, we are a polyglot engineering team. Both in spoken languages and programming languages. Our stack is made up of services written in Node.js, Ruby, Elixir, and a handful of others in addition to all the languages our agent library supports. Like most teams, we balance using the right tool for the job with using the right tool for the time. Recently, we reached a limitation in one of our services that led us to transition that service from Node.js to Rust. This post goes into some of the details that caused the need to change languages, as well as some of the decisions we made along the way.\n  We are building a solution to help developers monitor their APIs. Every time a customer\u2019s application calls an API, a log gets sent to us where we monitor and analyze it.\n At the time of the issue, we were processing an average of 30k API calls per minute. That&#39;s a lot of API calls made across all our customers. We split the process into two key parts: Log ingestion and log processing.\n  We originally built the ingestion service in Node.js. It would receive the logs, communicate with an elixir service to check customer access rights, check rate limits using Redis, and then send the log to CloudWatch. There, it would trigger an event to tell our processing worker to take over.\n We capture information about the API call, including the payloads (both the request and response) of every call sent from a user&#39;s application. These are currently limited to 1MB, but that is still a large amount of data to process. We send and process everything asynchronously and the goal is to make the information available to the end-user as fast as possible.\n We hosted everything on AWS Fargate, a serverless management solution for Elastic Container Service (ECS), and set it to autoscale after 4000 req/min. Everything was great! Then, the invoice came \ud83d\ude31.\n    Instead of sending the logs to CloudWatch, we would use  Kinesis Firehose. Kinesis Firehose is basically a Kafka equivalent provided by AWS. It allows us to deliver a data stream in a reliable way to several destinations. With very few updates to our log processing worker, we were able to ingest logs from both CloudWatch and Kinesis Firehose. With this change, daily costs would drop to about 0.6% of what they were before.\n  The updated service now passed the log data through Kinesis and into s3 which triggers the worker to take over with the processing task. We rolled the change out and everything was back to normal... or we thought. Soon after, we started to notice some anomalies on our monitoring dashboard.\n We were Garbage Collecting, a lot. Garbage collection (GC) is a way for some languages to automatically free up memory that is no longer in use. When that happens, the program pauses. This is known as a  GC pause. The more writes you make to memory, the more garbage collection needs to happen and as a result, the pause time increases. For our service, these pauses were growing high enough that they caused the servers to restart and put stress on the CPU. When this happens, it can look like the server is down\u2014because it temporarily is\u2014and our customers started to see 5xx errors for roughly 6% of the logs our agent was trying to ingest.\n   In some instances, the pause time breached  4 seconds (as shown on the left), with up to  400 pauses per minute (as shown on the right) across our instances.\n After some more research, we appeared to be another victim of a  memory leak in the AWS Javascript SDK. We tried increasing the resource allocations to extreme amounts, like autoscaling after 1000 req/min, but nothing worked.\n  With our backup plan no longer an option, we moved on to new solutions. First, we looked at those with the easiest transition path.\n  As mentioned earlier, we are checking the customer access rights using an Elixir service. This service is private and only accessible from within our Virtual Private Cloud (VPC). We have never experienced any scalability issues with this service and most of the logic was already there. We could simply send the logs to Kinesis from within this service and skip over the Node.js service layer. We decided it was worth a try.\n We developed the missing parts and tested it. It was better, but still not great. Our benchmarks showed that there were still high levels of Garbage Collecting, and we were still returning 5xx to our users when consuming the logs. At this point, the heavy load triggered a  (now resolved) issue with one of our elixir dependencies.\n  We considered Golang as well. It would have been a good candidate, but in the end, it is another Garbage Collected Language. While likely more efficient than our previous implementation, as we scale there is a high chance we&#39;d run into similar problems. With these limitations in mind, we needed a better option.\n  In both our original implementation and our backup, the core issue remained the same: garbage collection. The solution was to move to a language with better memory management and no garbage collection. Enter Rust.\n  Ownership is Rust\u2019s most unique feature, and it enables Rust to make memory safety guarantees without needing a garbage collector.  \u2014  The Rust Book\n Ownership is the concept that often makes Rust difficult to learn and write, but also what makes it so well suited for situations like ours. Each value in Rust has a single owner variable and as a result a single point of allocation in memory. Once that variable goes out of scope the memory is immediately returned.\n Since the code required to ingest the logs is quite small, we decided to give it a try. To test this we addressed the very thing that we had issues with\u2014sending large amounts of data to Kinesis.\n  From that point, we were pretty confident that Rust could be the answer and we decided to flesh out the prototype into a production-ready application.\n Over the course of these experiments, rather than directly replacing the original Node.js service with Rust, we restructured much of the architecture surrounding log ingestion. The core of the new service is an  Envoy proxy with the Rust application as a sidecar.\n Now, when the Bearer Agent in a user&#39;s application sends log data to Bearer, it goes into the Envoy proxy. Envoy looks at the request and communicates with Redis to check things like rate limits, authorization details, and usage quotas. Next, the Rust application running alongside Envoy prepares the log data and passes it through Kinesis into an s3 bucket for storage. S3 then triggers our worker to fetch and process the data so Elastic Search can index it. At this point, our users can access the data in our dashboard.\n  What we found was that with fewer\u2014and smaller\u2014servers, we are able to process even more data without any of the earlier issues.\n If we look at the latency numbers for the Node.js service, we can see peaks with an average response time nearing 1700ms.\n  With the Rust service implementation, the latency dropped to below 90ms, even at its highest peak, keeping the average response time below 40ms.\n  The original Node.js application used about 1.5GB of memory at any given time, while the CPUs ran at around 150% load. The new Rust service used about 100MB of memory and only 2.5% of CPU load.\n  As with most startups, we move fast. Sometimes the best solution at the time isn&#39;t the best solution forever. This was the case with Node.js. It allowed us to move forward, but as we grew we also outgrew it. As we started to handle more and more requests, we needed to make our infrastructure evolve to address the new requirements. While this process started with a fix that merely replaced Node.js with Rust, it led to a rethinking of our log ingestion service as a whole.\n We still use a variety of languages throughout our stack, including Node.js, but will now consider Rust for new services where it makes sense.", "posttime": "2020-06-17 01:14:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,lets,\u670d\u52a1", "title": "Rust\u5982\u4f55\u8ba9\u6211\u4eec\u76d1\u63a730k API\u8c03\u7528/\u5206\u949f", "title_en": "How Rust Lets Us Monitor 30k API calls/min", "transed": 1, "url": "https://blog.bearer.sh/how-rust-lets-us-monitor-30k-api-calls-min/#.XujqagRRU9Q.hackernews", "via": "", "real_tags": ["rust", "lets", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "fedc1e2ddba3943cadae5309c1f64442.jpeg", "infoid": 1006829, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728T-Mobile\u906d\u9047\u505c\u7535\u540e\uff0c\u4e00\u4e2a\u636e\u79f0\u96b6\u5c5e\u4e8e\u533f\u540d\u9ed1\u5ba2\u7ec4\u7ec7\u7684\u8d26\u6237\u5e2e\u52a9\u4f20\u64ad\u4e86\u6050\u614c\u548c\u9519\u8bef\u4fe1\u606f\u3002", "note_en": "An account allegedly affiliated with the Anonymous hacking collective helped spread panic and misinformation after T-Mobile suffered an outage. ", "posttime": "2020-06-17 01:13:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u4e2d\u65ad,outage,\u906d\u9047", "title": "T-Mobile\u4e2d\u65ad\u5bfc\u81f4\u5bf9\u672a\u53d1\u751f\u7684DDoS\u653b\u51fb\u7684\u6beb\u65e0\u6839\u636e\u7684\u6050\u614c", "title_en": "T-Mobile Outage Causes Unfounded Panic About a DDoS Attack That Didn\u2019t Happen", "transed": 1, "url": "https://www.vice.com/en_us/article/pkyg5v/t-mobile-outage-ddos-attack-anonymous", "via": "", "real_tags": ["app", "\u4e2d\u65ad", "outage", "\u906d\u9047"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006828, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "FreeBSD\u53d1\u5e03\u5de5\u7a0b\u56e2\u961f\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03FreeBSD11.4-Release\u53d1\u5e03\u3002\u8fd9\u662fSTRATE/11\u5206\u652f\u7684\u7b2c\u4e94\u6b21\u4e5f\u662f\u6700\u540e\u4e00\u6b21\u53d1\u5e03\u3002\nclang\u3001llvm\u3001lld\u3001lldb\u548c\u7f16\u8bd1\u5668-RT\u5b9e\u7528\u7a0b\u5e8f\u4ee5\u53calibc++\u5df2\u7ecf\u66f4\u65b0\u5230\u4e0a\u6e38\u7248\u672c10.0.0\u3002\n\u6240\u6709FreeBSD\u7248\u672c\u73b0\u5728\u90fd\u5c06\u6253\u5370\u672a\u6765\u7248\u672c\u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u529f\u80fd\u7684\u8b66\u544a\u3002\n\u5df2\u4e3aRFC 6649\u548c8429\u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528\u7684Kerberos GSS API\u7b97\u6cd5\u6dfb\u52a0\u8b66\u544a\u3002\n\u6709\u5173\u65b0\u529f\u80fd\u548c\u5df2\u77e5\u95ee\u9898\u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u5728\u7ebf\u53d1\u884c\u8bf4\u660e\u548c\u52d8\u8bef\u8868\u5217\u8868\uff0c\u7f51\u5740\u4e3a\uff1a\nFreeBSD11.4-Release\u73b0\u5728\u53ef\u7528\u4e8eAMD64\u3001i386\u3001PowerPC\u3001powerpc64\u3001SPARC64\u3001ARMv6\u548caarch64\u67b6\u6784\u3002\nFreeBSD11.4-Release\u53ef\u4ee5\u4ece\u53ef\u5f15\u5bfc\u7684ISO\u6620\u50cf\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u5b89\u88c5\u3002\u67d0\u4e9b\u67b6\u6784\u8fd8\u652f\u6301\u4eceUSB\u8bb0\u5fc6\u68d2\u5b89\u88c5\u3002\u6240\u9700\u6587\u4ef6\u53ef\u4ee5\u4e0b\u8f7d\uff0c\u5982\u4e0b\u8282\u6240\u8ff0\u3002\n\u6b64\u6d88\u606f\u5e95\u90e8\u5305\u542b\u7248\u672cISO\u3001\u8bb0\u5fc6\u68d2\u548cSD\u5361\u6620\u50cf\u7684SHA512\u548cSHA256\u6563\u5217\u3002\n\u5176\u4e2d\u5305\u542b\u5b89\u88c5\u57fa\u672cFreeBSD\u64cd\u4f5c\u7cfb\u7edf\u6240\u9700\u7684\u4e00\u5207\u3001\u6587\u6863\u3001\u8c03\u8bd5\u5206\u53d1\u96c6\u548c\u4e00\u5c0f\u90e8\u5206\u65e8\u5728\u542f\u52a8\u548c\u8fd0\u884c\u56fe\u5f62\u5de5\u4f5c\u7ad9\u7684\u9884\u6784\u5efa\u8f6f\u4ef6\u5305\u3002\u5b83\u8fd8\u652f\u6301\u5f15\u5bfc\u8fdb\u5165\u57fa\u4e8eLivefs&34\uff1b\u7684\u6551\u63f4\u6a21\u5f0f\u3002\u5982\u679c\u60a8\u53ef\u4ee5\u523b\u5f55\u548c\u4f7f\u7528DVD\u5927\u5c0f\u7684\u4ecb\u8d28\uff0c\u8fd9\u5e94\u8be5\u5c31\u662f\u60a8\u9700\u8981\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u5b83\u5305\u542b\u57fa\u672c\u7684FreeBSD\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u8fd8\u652f\u6301\u5f15\u5bfc\u8fdb\u5165\u57fa\u4e8eLivefs&34\uff1b\u7684\u6551\u63f4\u6a21\u5f0f\u3002\u6ca1\u6709\u9884\u7f6e\u7684\u8f6f\u4ef6\u5305\u3002\n\u5b83\u652f\u6301\u4f7f\u7528CDROM\u9a71\u52a8\u5668\u5f15\u5bfc\u8ba1\u7b97\u673a\uff0c\u4f46\u4e0d\u5305\u542b\u7528\u4e8e\u4eceCD\u672c\u8eab\u5b89\u88c5FreeBSD\u7684\u5b89\u88c5\u5206\u53d1\u96c6\u3002\u4eceCD\u5f15\u5bfc\u540e\uff0c\u60a8\u9700\u8981\u6267\u884c\u57fa\u4e8e\u7f51\u7edc\u7684\u5b89\u88c5(\u4f8b\u5982\uff0c\u4eceHTTP\u6216FTP\u670d\u52a1\u5668)\u3002\n\u53ef\u4ee5\u5c06\u5176\u5199\u5165USB\u8bb0\u5fc6\u68d2(\u95ea\u5b58\u9a71\u52a8\u5668)\uff0c\u5e76\u7528\u4e8e\u5728\u80fd\u591f\u4eceUSB\u9a71\u52a8\u5668\u5f15\u5bfc\u7684\u673a\u5668\u4e0a\u8fdb\u884c\u5b89\u88c5\u3002\u5b83\u8fd8\u652f\u6301\u5f15\u5bfc\u8fdb\u5165\u57fa\u4e8eLivefs&34\uff1b\u7684\u6551\u63f4\u6a21\u5f0f\u3002\u6ca1\u6709\u9884\u7f6e\u7684\u8f6f\u4ef6\u5305\u3002\n\u4f5c\u4e3a\u5982\u4f55\u4f7f\u7528\u8bb0\u5fc6\u68d2\u56fe\u50cf\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u5047\u8bbeUSB\u9a71\u52a8\u5668\u5728\u60a8\u7684\u673a\u5668\u4e0a\u663e\u793a\u4e3a/dev/da0\uff0c\u5219\u5e94\u8be5\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8fd9\u53ef\u4ee5\u5199\u5165USB\u8bb0\u5fc6\u68d2(\u95ea\u5b58\u9a71\u52a8\u5668)\u5e76\u7528\u4e8e\u542f\u52a8\u673a\u5668\uff0c\u4f46\u4e0d\u5305\u542b\u4ecb\u8d28\u672c\u8eab\u4e0a\u7684\u5b89\u88c5\u5206\u53d1\u96c6\uff0c\u8fd9\u4e0e\u4ec5\u5f15\u5bfc\u6620\u50cf\u7c7b\u4f3c\u3002\u5b83\u8fd8\u652f\u6301\u5f15\u5bfc\u8fdb\u5165\u57fa\u4e8eLivefs&34\uff1b\u7684\u6551\u63f4\u6a21\u5f0f\u3002\u6ca1\u6709\u9884\u7f6e\u7684\u8f6f\u4ef6\u5305\u3002\n\u4f5c\u4e3a\u5982\u4f55\u4f7f\u7528\u8ff7\u4f60\u5185\u5b58\u6761\u56fe\u50cf\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u5047\u8bbeUSB\u9a71\u52a8\u5668\u5728\u60a8\u7684\u673a\u5668\u4e0a\u663e\u793a\u4e3a/dev/da0\uff0c\u5219\u5e94\u8be5\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8fd9\u4e9b\u53ef\u4ee5\u5199\u5165SD\u5361\uff0c\u5e76\u7528\u4e8e\u5f15\u5bfc\u53d7\u652f\u6301\u7684ARM\u7cfb\u7edf\u3002SD\u5361\u6620\u50cf\u5305\u542b\u5b8c\u6574\u7684FreeBSD\u5b89\u88c5\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b89\u88c5\u5230\u6700\u5c0f\u4e3a512MB\u7684SD\u5361\u4e0a\u3002\n\u4e3a\u4e86\u65b9\u4fbf\u90a3\u4e9b\u65e0\u6cd5\u901a\u8fc7\u63a7\u5236\u53f0\u8bbf\u95ee\u7cfb\u7edf\u7684\u7528\u6237\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u5bc6\u7801\u4e3aFreeBSD\u7684FreeBSD\u7528\u6237\u8bbf\u95eessh(1)\u3002\u6b64\u5916\uff0croot\u7528\u6237\u5bc6\u7801\u8bbe\u7f6e\u4e3aroot\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u5728\u83b7\u5f97\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\u540e\u66f4\u6539\u8fd9\u4e24\u4e2a\u7528\u6237\u7684\u5bc6\u7801\u3002\n\u8981\u5c06FreeBSD/ARM\u6620\u50cf\u5199\u5165SD\u5361\uff0c\u8bf7\u4f7f\u7528dd(1)\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5c06kernel\u66ff\u6362\u4e3a\u7cfb\u7edf\u7684\u9002\u5f53\u5185\u6838\u914d\u7f6e\u540d\u79f0\u3002\nFreeBSD11.4-Release\u4e5f\u53ef\u4ee5\u901a\u8fc7CD-ROM\u6216DVD\u4ece\u591a\u5bb6\u4f9b\u5e94\u5546\u8d2d\u4e70\u3002\u5c06\u63d0\u4f9b\u57fa\u4e8eFreeBSD11.4\u7684\u4ea7\u54c1\u7684\u4f9b\u5e94\u5546\u4e4b\u4e00\u662f\uff1a\n\u9884\u5b89\u88c5\u7684\u865a\u62df\u673a\u6620\u50cf\u8fd8\u53ef\u7528\u4e8eQCOW2\u3001VHD\u548cVMDK\u78c1\u76d8\u6620\u50cf\u683c\u5f0f\u7684AMD64(X86_64)\u3001i386(X86_32)\u548cAArch64(Arm64)\u4f53\u7cfb\u7ed3\u6784\uff0c\u4ee5\u53ca\u539f\u59cb(\u672a\u683c\u5f0f\u5316)\u6620\u50cf\u3002\nEU-North-1\u533a\u57df\uff1aAMI-0423a41bfde7000c9 ap-South-1\u533a\u57df\uff1aAMI-040d7e3c5045b1dc8 EU-West-3\u533a\u57df\uff1aAMI-079764f404d0f0135 EU-West-2\u533a\u57df\uff1aAMI-08b5c1b428efd6acc EU-West-1\u533a\u57df\uff1aAMI-010453360ad13bdbc ap-\u4e1c\u5317-2\u533a\u57df\uff1a\u7f8e\u56fd-\u4e1c\u90e8-1\u5730\u533a\uff1aAMI-01599ad2c214322ae\u7f8e\u56fd-\u4e1c\u90e8\u3002\u533a\u57df\uff1a-2\\f25 AMI-01ea9c04961787c29-2\\f25 US-West-2\\f6\u533a\u57df\uff1a-2\\f25 AMI-03eb1febfd346acb8-2\\f25 US-West-2\\f6\u533a\u57df\uff1a-2\\f25 AMI-04b8ff0baafd96cad-2\\f6\u3002\n%gCloud\u8ba1\u7b97\u5b9e\u4f8b\u521b\u5efa\u5b9e\u4f8b\\--image FreeBSD-11-4-release-amd64\\--image-project=Freebsd-org-cloud-dev%gcloud\u8ba1\u7b97ssh\u5b9e\u4f8b\u3002\n\u4e00\u65e6GoogleComputeEngine https://console.cloud.google.com/launcher/browse?filter=category:os&amp\uff1bfilter=price:free\u5b8c\u6210\u4e86\u7b2c\u4e09\u65b9\u7279\u5b9a\u7684\u9a8c\u8bc1\uff0cFreeBSD11.4-Release\u4e5f\u6709\u671b\u5728GoogleComputeEngine\u2122Marketplace\u4e0a\u63d0\u4f9b\u3002\n\u57fa\u4e8e\u65b0\u7684FreeBSD\u652f\u6301\u6a21\u5f0f\uff0cFreeBSD11\u7248\u672c\u7cfb\u5217\u5c06\u81f3\u5c11\u652f\u6301\u52302021\u5e749\u670830\u65e5\u3002\n\u8bf7\u6ce8\u610f\uff0c11.3\u5c06\u53d7\u652f\u6301\uff0c\u76f4\u523011.4\u53d1\u5e03\u4e4b\u65e5\u8d77\u4e09\u4e2a\u6708\uff0c\u76ee\u524d\u8ba1\u5212\u57282020\u5e749\u670830\u65e5\u53d1\u5e03\u3002\n\u8bb8\u591a\u516c\u53f8\u6350\u8d60\u8bbe\u5907\u3001\u7f51\u7edc\u63a5\u5165\u6216\u4eba\u529b\u6765\u652f\u6301FreeBSD11.4\u7684\u53d1\u5e03\u5de5\u7a0b\u6d3b\u52a8\uff0c\u5305\u62ec\uff1a\nSHA512(FreeBSD11.4-Release-amd64-bootonly.iso)=eb235bdd9472a607de3ccbaefddc268c086d99bdb6fe962a4f4d5de9d70ae9935dc34a9f15eb381d950396edd02fb88c44d70d8eb724007b00840c0ebb58dc38 SHA512(FreeBSD11.4-Release-amd64-bootonly.iso.xz)=9152f66cc07813e67092f5b8d7ce0aa718e0dc1c0797f02bc88261992d1659f8504ae44aa9439ef75b7b64b0204d79882a8eb7d9ccfbceb8331dc7e9aefa5c86 SHA512(FreeBSD11.4-Release-amd64-dis1.iso)=473b35bf7835de4adf57603fdfee90f87742c57f885de2b282952b121fc84404432c77c804028b42576482e3c76183f224985b0292b9f69302186f03fdad919d SHA512(FreeBSD11.4-Release-amd64-dis1.iso.xz)=9a5a0cb9c07ec04e095a7375acd48842643de80938b1cba10652399eeb49ef7f55b7b2495e014e531040b929728ac3da7f38310e153d4b335b932490c69fa578 SHA512(FreeBSD-11.11\u30024-Release-amd64-memtick.img)=4e88b3c2bcd49519f1416b586c61a9e090a2b6783d0a4845c8aba6c9a78203ea60541e9760a7ea8a78a5ce5fdba931df91a0f21a5584d95e1d309aaf19f5dab8 SHA512(FreeBSD11.4-Release-amd64-memtick.img.xz)=ee8340ea4d441acecffaaa802e0f7b653ecd90ce005f760286c112f86dd2ddc105f813d46a52de658763a1f6e5189ca57050f44a3971f59b72cc1b986a2674aa SHA512(FreeBSD-11.4-RELEASE-amd64-mini-memstick.img)=09ce747555046f8baa271960166d74cf47526727f77a4a9fdbb8f57684b719723f4f7eb3c10a128783439c475811bc6bcfe9e98319379878ca3e069534f7bc8b SHA512(FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz)=6137690cacf217753ccbc6d6940a15c3c54f0b0f1a3aa26a88728b9df11640ed0c65d88401c29da50b6c49f0a7204a2ca890d1436a312f6d0ae05eb65941d8bc SHA256(FreeBSD-11.4-Release-amd64-bootonly.iso)=cafc5a8d95a639d426d72f897690d8f54ba723fba299e44d39f424674092ee51 SHA256(FreeBSD-11.4-Release-amd64-bootonly.iso.xz)=65327683bf4e6b85f6537c8d67c990414af9a0f2da7bd2ece6ed9db2ec8bc082 SHA256\u3002Release-amd64-dis1.iso)=d76c1ded99b2c1005b1ff94cc0c811fbcd8a2d04196432009ab5f203c2146914 SHA256(FreeBSD11.4-Release-amd64-dis1.iso.xz)=ec3e34826452368e53ea86c3a48b7af749c8787af3798ea246fa18d12bc04130 SHA256(FreeBSD-11.4-Release-amd64-dvd1.iso)=a9c552ea01a751a092cdf75b28f67959277d025dbd24d6f62adc6ac37468c13d SHA256(FreeBSD-11.4-Release-amd64-dvd1.iso.xz)=1d6cd4e525ec4e5883904d184c483cf0a0dafcda4906655c9cded617e6971115 SHA256(FreeBSD11.4-Release-amd64-memtick.img)=45412df7ef29c5ef27b5747203502975f202612a98c3fd71deb9aa38c4f818b3 SHA256\u3002memtick.img)=870359fc7c61af157ea63a0b08c3bb02861caa37b847313a3c484dd878147afc SHA256(FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz)=c2480d775ddb42223f3af90452f2b116cc4f1e22dcaa4af2f6f4842ec22e7c61\u3002\nSHA512(FreeBSD-11.4-Release-i386-bootonly.iso)=66649cab6d536d3a93bde59083e4d1ae6cbf8c53c4d48c212c1bcb30ba404922173c1704a6be4afaa8a1839abdd8c05c8577209b939e05c0f01d359a7146b7b3 SHA512(FreeBSD-11.4-Release-i386-bootonly.iso.xz)=f8e72e1ecd0d3aabe8e37eaebfb986955412b19813936373462542379adceabfe1be1b6e5cafbbc2e95ab93667bcc8c215944cc13bce507cd4b5ae16a0b1bf59 SHA512(FreeBSD-11.4-Release-i386-dis1.iso)=a806e91c2b79efc01e2ca4e1691b6cf90e242688c92cbb1ea25e73df1c11fd7d0d765f844975bab27338597cc08ea44f35166ef360d9675d18c356145aaa8be7 SHA512(FreeBSD-11.4-Release-i386-dis1.iso.xz)=dec27fa196b526c7b498417a20301a9e435b48ba9054c05d4df5268bad3d7bc1d5b6b4f889ad11518f461d88c1aea44fe8f62403d01ba3535e0667f8ec877fa7 SHA512(FreeBSD-11.11\u30024-Release-i386-memtick.img)=211487dce03636851b0d962f6ddacaa94dd068741a51088899c9aea8b05615e54c3a5f382fa260ce9940eb0c14343527a31716874b113cccfa304a32c38e43ac SHA512(FreeBSD-11.4-Release-i386-memtick.img.xz)=65abed1a8093ebfdfacd32de9d721ff93530abc0b2661e5b030a2e5ec0536d9167aff707506a526eb3e085350f12289fc52212063c994f4ac2e936d07e49fb30 SHA512(FreeBSD-11.4-Release-i386-mini-memtick.img)=2dbf59ad34e8c227fb6b0b9d6b9e83d6702186974cb1930d04ab9ebf98b20715519cd787e089ef0210cc4380544d84a47de0e548ebe6d413b10ec27d089e47db SHA512(FreeBSD-11.4-RELEASE-i386-mini-memstick.img.xz)=b1983a46427d9b4050ae8d5f44432a7eb374dac660008a8244\n..", "note_en": "The FreeBSD Release Engineering Team is pleased to announce the availability of FreeBSD11.4-RELEASE. This is the fifth and final release of the stable/11 branch.\n    The  clang,  llvm,  lld,\t  lldb, and  compiler-rt utilities as well as\t  libc++ have been updated to upstream version\t 10.0.0.\n                  Warnings for features deprecated in future releases will\t now be printed on all FreeBSD versions.\n  Warnings have been added for Kerberos GSS API algorithms\t deprecated in RFCs 6649 and 8429.\n  For a complete list of new features and known problems, please see the online release notes and errata list, available at:\n              FreeBSD11.4-RELEASE is now available for the amd64, i386, powerpc, powerpc64, sparc64, armv6, and aarch64 architectures.\n  FreeBSD11.4-RELEASE can be installed from bootable ISO images or over the network. Some architectures also support installing from a USB memory stick. The required files can be downloaded as described in the section below.\n  SHA512 and SHA256 hashes for the release ISO, memory stick, and SD card images are included at the bottom of this message.\n            This contains everything necessary to install the base FreeBSD\t operating system, the documentation, debugging distribution\t sets, and a small set of pre-built packages aimed at getting\t a graphical workstation up and running. It also supports\t booting into a &#34;livefs&#34; based rescue mode. This should be\t all you need if you can burn and use DVD-sized media.\n    This contains the base FreeBSD operating system. It also\t supports booting into a &#34;livefs&#34; based rescue mode. There\t are no pre-built packages.\n    This supports booting a machine using the CDROM drive but\t does not contain the installation distribution sets for\t installing FreeBSD from the CD itself. You would need to\t perform a network based install (e.g., from an HTTP or FTP\t server) after booting from the CD.\n    This can be written to a USB memory stick (flash drive)\t and used to do an install on machines capable of booting off\t USB drives. It also supports booting into a &#34;livefs&#34; based\t rescue mode. There are no pre-built packages.\n  As one example of how to use the memstick image, assuming\t the USB drive appears as /dev/da0 on your machine something\t like this should work:\n    This can be written to a USB memory stick (flash drive)\t and used to boot a machine, but does not contain the\t installation distribution sets on the medium itself, similar\t to the bootonly image. It also supports booting into\t a &#34;livefs&#34; based rescue mode. There are no pre-built\t packages.\n  As one example of how to use the mini-memstick image,\t assuming the USB drive appears as /dev/da0 on your machine\t something like this should work:\n    These can be written to an SD card and used to boot the\t supported arm system. The SD card image contains the full\t FreeBSD installation, and can be installed onto SD cards as\t small as 512Mb.\n  For convenience for those without console access to the\t system, a  freebsd user with a password of\t  freebsd is available by default for  ssh(1)\t access. Additionally, the  root user password is\t set to  root, which it is strongly recommended to\t change the password for both users after gaining access to\t the system.\n  To write the FreeBSD/arm image to an SD card, use the\t  dd(1) utility, replacing  KERNEL with the\t appropriate kernel configuration name for the system.\n  FreeBSD11.4-RELEASE can also be purchased on CD-ROM or DVD from several vendors. One of the vendors that will be offering FreeBSD11.4-based products is:\n    Pre-installed virtual machine images are also available for the amd64 (x86_64), i386 (x86_32), and AArch64 (arm64) architectures in  QCOW2,  VHD, and  VMDK disk image formats, as well as raw (unformatted) images.\n    eu-north-1 region: ami-0423a41bfde7000c9\tap-south-1 region: ami-040d7e3c5045b1dc8\teu-west-3 region: ami-079764f404d0f0135\teu-west-2 region: ami-08b5c1b428efd6acc\teu-west-1 region: ami-010453360ad13bdbc\tap-northeast-2 region: ami-09b7e1c3e361260e1\tap-northeast-1 region: ami-06a2ecfa39652b8ff\tsa-east-1 region: ami-08b649133aa9f8f35\tca-central-1 region: ami-0124b7468bd38bfdf\tap-southeast-1 region: ami-0703c8c6acfb41206\tap-southeast-2 region: ami-0933856ea67133b1a\teu-central-1 region: ami-01bd88d4f25033055\tus-east-1 region: ami-01599ad2c214322ae\tus-east-2 region: ami-01ea9c04961787c29\tus-west-1 region: ami-03eb1febfd346acb8\tus-west-2 region: ami-04b8ff0baafd96cad\n  % gcloud compute instances create  INSTANCE \\\t --image freebsd-11-4-release-amd64 \\\t --image-project=freebsd-org-cloud-dev\t % gcloud compute ssh  INSTANCE\n    FreeBSD11.4-RELEASE is also expected to be\t available in the GoogleComputeEngine\u2122\t Marketplace once they have completed third-party specific\t validation at:  https://console.cloud.google.com/launcher/browse?filter=category:os&amp;filter=price:free\n                  Based on the new FreeBSD support model, the FreeBSD11 release series will be supported until at least September 30, 2021.\n    Please note that 11.3 will be supported until three months from the 11.4 release date, currently scheduled for September 30, 2020.\n    Many companies donated equipment, network access, or human time to support the release engineering activities for FreeBSD11.4 including:\n                SHA512 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso) = eb235bdd9472a607de3ccbaefddc268c086d99bdb6fe962a4f4d5de9d70ae9935dc34a9f15eb381d950396edd02fb88c44d70d8eb724007b00840c0ebb58dc38 SHA512 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso.xz) = 9152f66cc07813e67092f5b8d7ce0aa718e0dc1c0797f02bc88261992d1659f8504ae44aa9439ef75b7b64b0204d79882a8eb7d9ccfbceb8331dc7e9aefa5c86 SHA512 (FreeBSD-11.4-RELEASE-amd64-disc1.iso) = 473b35bf7835de4adf57603fdfee90f87742c57f885de2b282952b121fc84404432c77c804028b42576482e3c76183f224985b0292b9f69302186f03fdad919d SHA512 (FreeBSD-11.4-RELEASE-amd64-disc1.iso.xz) = 9a5a0cb9c07ec04e095a7375acd48842643de80938b1cba10652399eeb49ef7f55b7b2495e014e531040b929728ac3da7f38310e153d4b335b932490c69fa578 SHA512 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso) = da9f68ca92e9b12e261c3668693acf125090052bec6a7f961cb8862dbebe2c9cc047d65f93fb55c0f328daaaa8fc888cdef506927f2a1edeae6d11ff21ca89c6 SHA512 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso.xz) = 4ec0379e2d44f7571ac7932d80740a8952e8b5274ecfd1a47770e5b9a2dfed9975b5a368c70e8e905814feeb865a865db13751b9527466e04ba8f7711f6962bc SHA512 (FreeBSD-11.4-RELEASE-amd64-memstick.img) = 4e88b3c2bcd49519f1416b586c61a9e090a2b6783d0a4845c8aba6c9a78203ea60541e9760a7ea8a78a5ce5fdba931df91a0f21a5584d95e1d309aaf19f5dab8 SHA512 (FreeBSD-11.4-RELEASE-amd64-memstick.img.xz) = ee8340ea4d441acecffaaa802e0f7b653ecd90ce005f760286c112f86dd2ddc105f813d46a52de658763a1f6e5189ca57050f44a3971f59b72cc1b986a2674aa SHA512 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img) = 09ce747555046f8baa271960166d74cf47526727f77a4a9fdbb8f57684b719723f4f7eb3c10a128783439c475811bc6bcfe9e98319379878ca3e069534f7bc8b SHA512 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz) = 6137690cacf217753ccbc6d6940a15c3c54f0b0f1a3aa26a88728b9df11640ed0c65d88401c29da50b6c49f0a7204a2ca890d1436a312f6d0ae05eb65941d8bc SHA256 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso) = cafc5a8d95a639d426d72f897690d8f54ba723fba299e44d39f424674092ee51 SHA256 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso.xz) = 65327683bf4e6b85f6537c8d67c990414af9a0f2da7bd2ece6ed9db2ec8bc082 SHA256 (FreeBSD-11.4-RELEASE-amd64-disc1.iso) = d76c1ded99b2c1005b1ff94cc0c811fbcd8a2d04196432009ab5f203c2146914 SHA256 (FreeBSD-11.4-RELEASE-amd64-disc1.iso.xz) = ec3e34826452368e53ea86c3a48b7af749c8787af3798ea246fa18d12bc04130 SHA256 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso) = a9c552ea01a751a092cdf75b28f67959277d025dbd24d6f62adc6ac37468c13d SHA256 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso.xz) = 1d6cd4e525ec4e5883904d184c483cf0a0dafcda4906655c9cded617e6971115 SHA256 (FreeBSD-11.4-RELEASE-amd64-memstick.img) = 45412df7ef29c5ef27b5747203502975f202612a98c3fd71deb9aa38c4f818b3 SHA256 (FreeBSD-11.4-RELEASE-amd64-memstick.img.xz) = aa38e0f03aba4cce31872da25e9d3cf0aba9b31cb4e39816e176660aa33f93bc SHA256 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img) = 870359fc7c61af157ea63a0b08c3bb02861caa37b847313a3c484dd878147afc SHA256 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz) = c2480d775ddb42223f3af90452f2b116cc4f1e22dcaa4af2f6f4842ec22e7c61\n    SHA512 (FreeBSD-11.4-RELEASE-i386-bootonly.iso) = 66649cab6d536d3a93bde59083e4d1ae6cbf8c53c4d48c212c1bcb30ba404922173c1704a6be4afaa8a1839abdd8c05c8577209b939e05c0f01d359a7146b7b3 SHA512 (FreeBSD-11.4-RELEASE-i386-bootonly.iso.xz) = f8e72e1ecd0d3aabe8e37eaebfb986955412b19813936373462542379adceabfe1be1b6e5cafbbc2e95ab93667bcc8c215944cc13bce507cd4b5ae16a0b1bf59 SHA512 (FreeBSD-11.4-RELEASE-i386-disc1.iso) = a806e91c2b79efc01e2ca4e1691b6cf90e242688c92cbb1ea25e73df1c11fd7d0d765f844975bab27338597cc08ea44f35166ef360d9675d18c356145aaa8be7 SHA512 (FreeBSD-11.4-RELEASE-i386-disc1.iso.xz) = dec27fa196b526c7b498417a20301a9e435b48ba9054c05d4df5268bad3d7bc1d5b6b4f889ad11518f461d88c1aea44fe8f62403d01ba3535e0667f8ec877fa7 SHA512 (FreeBSD-11.4-RELEASE-i386-dvd1.iso) = 303f3c512cda1aa27f0a4a124864bae5fc1d23d31cfd6f3b02ef1d759a9fa6e5b08f2a6a0d8f4d0d4da7e966b3739c59012b6672828e526e2f816d3c7650df9d SHA512 (FreeBSD-11.4-RELEASE-i386-dvd1.iso.xz) = bbc3b56dfd4b69566a4f73527a0568d39b3bca6923e6f054dba4efe27affc0835f0c524031269ce646a81de28cf1be1a321cdcb5640a78fe781b7b261a1820f2 SHA512 (FreeBSD-11.4-RELEASE-i386-memstick.img) = 211487dce03636851b0d962f6ddacaa94dd068741a51088899c9aea8b05615e54c3a5f382fa260ce9940eb0c14343527a31716874b113cccfa304a32c38e43ac SHA512 (FreeBSD-11.4-RELEASE-i386-memstick.img.xz) = 65abed1a8093ebfdfacd32de9d721ff93530abc0b2661e5b030a2e5ec0536d9167aff707506a526eb3e085350f12289fc52212063c994f4ac2e936d07e49fb30 SHA512 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img) = 2dbf59ad34e8c227fb6b0b9d6b9e83d6702186974cb1930d04ab9ebf98b20715519cd787e089ef0210cc4380544d84a47de0e548ebe6d413b10ec27d089e47db SHA512 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img.xz) = b1983a46427d9b4050ae8d5f44432a7eb374dac660008a824480b686af5650087eadc953e54c3ec62b264dee8591a7ef406f28faf040918930b0d510cd0a5c37 SHA256 (FreeBSD-11.4-RELEASE-i386-bootonly.iso) = dc26a4e8e7596052af9d167a06c57fb9ea7b7b51f6179dc19f071703c6165de9 SHA256 (FreeBSD-11.4-RELEASE-i386-bootonly.iso.xz) = 07817b1551b9fd188e251e59c8517a4fa0b233e77542c13ae6ce471f22f827fd SHA256 (FreeBSD-11.4-RELEASE-i386-disc1.iso) = cab3c03fc45b84bffcf818d11147af491eb0226be4bf8e4092b1ecafdc096d33 SHA256 (FreeBSD-11.4-RELEASE-i386-disc1.iso.xz) = 6f9e64792b0fbd999321c8657c1122674253f5678cb6442ec6c54c76c2d11573 SHA256 (FreeBSD-11.4-RELEASE-i386-dvd1.iso) = 54d2b553d212ed53b0c3ce989646907fe50814c66194adf0c8ec2c75242f7fd0 SHA256 (FreeBSD-11.4-RELEASE-i386-dvd1.iso.xz) = 17cf920ca4167ba44e96a2bff21994e17990b99464d7d9dbd8c95e1caf98969d SHA256 (FreeBSD-11.4-RELEASE-i386-memstick.img) = 6414eaebc92cde06a1c5b9fb888586dbd28820b75abceef4283e622908759d19 SHA256 (FreeBSD-11.4-RELEASE-i386-memstick.img.xz) = 9e9b1f24e3e809d5ecdd3f41a7eacc884ee02d50662eec7f70074d9820242031 SHA256 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img) = 0e4158ef35bf166caf57248e438e1fc5ad4bd1c20620127e5916cd79004b5ad3 SHA256 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img.xz) = a7b3b6fc27630aeb32ac10c4533bb3976c3a83e4bab4dcb285101065a2c0501e\n    SHA512 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso) = 47ffaa0d5e719ffa1dfab905a59b7e1446af99e8bf84bd847a18000ab37f4804a0a6b02b0213ef7d1d3b037b3b5a7eb060e7aea2d75fa4e87436928e7735b8c5 SHA512 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso.xz) = 16f562b09e304ed545f197259d654d194e95140b61c93f8de44c1a4d05d4da9003cc809d1118627fcfbdbccfaf92e9cf133d91c9c184d010727f8c394c8f6a4f SHA512 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso) = 39bfc5eb77fc9f4298ad3b36c65667fe1a28743c128e943cf8a6523e0dc0b26c7bcc3afce9b6db0165d1ab1ec7dde7398dbd5fc8465d9a374461c349a6750a04 SHA512 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso.xz) = e4004fd181a7c898964468b2a67e7f223ad512bca318e20c8c2a55475f425da543a5c46853a1c0f6ad7f890d5d0253e93c99470e982d421b262f50efb7bf7305 SHA512 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso) = 4081eac6919335418995b1d9354f45dd674b852de83e442ec721fc2ee8e08b9fd32567581799750ff635ab0ecd3a5f04f724db66411f1817521ac7dabc56c48b SHA512 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso.xz) = bdaa0f684ea88bd9bac0fad67a8538b7777ac89b8345e76a0804bc6216a1eddae2d5ec4747ca76764a58ec2cc15309b3e3028d4d778911fc8fb3ade6360a8d0c SHA512 (FreeBSD-11.4-RELEASE-powerpc-memstick.img) = 04effb804c1d62fe0670a0aef94850ee5aae7bb6bff29eb99923d7e2288869616b74ce823c09cf975097b0d44e7dfcc7fc0b94f904d6c05bc49fa7ad460d28ea SHA512 (FreeBSD-11.4-RELEASE-powerpc-memstick.img.xz) = 1688092d59b4bb630bf5f45c3969357c43fcf73dd2fac6546722b62f9e8ad1ccaf81c0d50970ab53b7584b8c9d8240a72fe15460e9e2ee3c285e98486e0e3e05 SHA512 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img) = 079f74a6f636d3df57639c0932797a17531b6629924ba4dc5d3c2032553dd70fcabbebbd41f4e3dd42a18da883a74311e90afe02e4a26654ba69955ceccc3c57 SHA512 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img.xz) = 5c402f54bbf22fd0b60fd2050d4c1f1af56b11b7af8d2493cf8bf63c37478e4ec98a160e98ad88d7267636bb8788f7433e342d9ca31888e90f62ee7ce3b73789 SHA256 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso) = 8d40ef27accb7d7bdfedc529d7b94df48c8cb34abeb3599559c3830e68216301 SHA256 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso.xz) = 35bc3e9b24af37b897b803b4fd1c39d12bdc824e6e3ca35b83f54079b04704c6 SHA256 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso) = 87356f93d21263c087320eba28ca78891097220c9e22fd391d8e56998a899310 SHA256 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso.xz) = 3895c88e0128c33c5bb18f929698a90859def5dacb06533cf21e5bbf7237b04b SHA256 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso) = db3543011035e682de1378ac73632f716ae1e9ae33a5fd16e31ce4fcdc10ad39 SHA256 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso.xz) = 2ebc365f8d14ab7e074d797725dfc33c46bd8681d7f49d969c724deb5e7ab1cc SHA256 (FreeBSD-11.4-RELEASE-powerpc-memstick.img) = ef997b548303735887f6c697ab77905bd922fe7e3059a5d97f903efb97dd49f8 SHA256 (FreeBSD-11.4-RELEASE-powerpc-memstick.img.xz) = 261588f59fb68c1c630dd7599b366a9916af8c58f89914231707125cc36f1fe4 SHA256 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img) = 6591db97732cdd6b413d447879f538dc16ea19fd0a0aaec2570f0380dfb72b9d SHA256 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img.xz) = 6cebbc2e08c96962b0517a4f7a328742fb128f7ebacbf72e9d53ef766eb76958\n    SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso) = 5162392afcb435aaeb8d8fe690133f83948b7851fe9e343a98d9c82e7b57ea040e3eb276a7a8bca136493ab66ab35acf91488fd03e773a9bf8611bc8f4a8bc77 SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = 887e0a5bc24cc1d6d9a3930c944447e4912842f578117c32ad9a9f5133edaad4c4d6a3a68c9a231f5c3736d059ccfe5e72faf8c958b72547cd9afcb636e4d25c SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso) = d10ac40a4f129e9b97f1343c566e9cfa27eac29c21890c757c4cc6700a7ad2367973743b9acac01cab85eba9dbca4d8a77d02162f7c4c906d9b5090a00a6e6da SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso.xz) = cda60a69cd3f31098ce42840709a19f50afae0f0da1a1d2c363146ca88e38bbcc721f57210e0a1b7d72d041ba8f27dba1072e27521bbff967630b0016490eee3 SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso) = 35d82711053282dceac2d48a264d4883e1a0731eb48e73af9e498a60f344f826caef6a2b19120bcbec01843c01b8afe0d7b2c25f8cac9344f4d014dc73622acf SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 6825921ddcaef8ef4824b5f1d67b63a29cb2c048b88ab92ec87f6576c3a051ea8b923a6e0c7793961b234ff21c22454bd689c3461db0ed34e5a5a857b9782d75 SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img) = 9babb52f97258febb9c9eb3035d594e33063afb49982ec3a4894fef69814b2fb1ca1ca3395cc8fc41d8be3b2121311d852713cecde240ad864be7efac902475b SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img.xz) = 177161654718a2bdd2240c2a72b5523ce77f3837d362f1e2223175e7cd09aa6bce54ae50da80fd886fa67fb5e42fd164b98e1a159b45d41a29bdf86813b9a639 SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img) = 9794d59a459b32bfe4cdb1fca2ceeed2bf322e8ce9dd86fc5f8cceaf5081f81755cb6427883663342e14d1aba2ed5a188d76b81dcde1186c6d066247611a8040 SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = 33a3701d99a1a5b94de0df32ea1e1ae06083ca734c1d20d7809091fbb3cfc8b638e411782d479d12a173a6979d2d4355804cbacb6c60760e96098d0485466d6e SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso) = 24543ae8eb78121d75a5ee403c02594372a25db27abb80e9e6e4de77d5536c15 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = 63a3eee3018a162b49f560ec796fa66570fcf244e55d79783c0b861448ed7185 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso) = 81e22fc4fac1958cfe226ee04179a3fb0fbc4e1ab3013b981ef7fa4c758c17a7 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso.xz) = b064e8cb0e2cbde9d98198c6d9f42e0d6158e3898f380afbf8b63788a2600ce1 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso) = 3d4ebbe27b143c825074a9add89448cd37a19b0c42e8789cd63bd0069e07f54b SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 113ad821f07d7e09948ff4d6448512ecad21cda3a4cab341b7c124caf23908a2 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img) = 8f3cae59ff70bec49f491a50c5e94dc518c30b243530b77cb3f6d943ceb3213d SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img.xz) = 088c2718eeedd88862a1d878f3b218c5451f06a6d078d283cb6ff3c98744ed63 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img) = 24ae08bae930022afe792535657adb23d39c935f0e0837e86262b1180ba1e9a6 SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = 6130aed94da4b35021ab35448a43ba678d4a9e6c9dfc53f86e45d280a118d88f\n    SHA512 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso) = 6aaf0ba38b72db8a8c2f5ae4dfae76dde0991f41a3439739b5149ba9b6e51c8d360116a42de7fb5011e1dd5d6fc5f6e16ba36d003f045ca584e8438eec329f93 SHA512 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso.xz) = 4e8587df377ffed8b76e2ae998db4079de039be1892227e23fb0c6c88aab1c96df76082619c661ceabfaa1a752330977bae433963c129104c247e05390e46a52 SHA512 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso) = 84cd6a668f01b3ab07dd316e194fbe4a3ecbb59a50c345fb17d119497773be2a2acda38e88bb1f1ceb55b604b1cf1c4f4f8ce7dc05514ef0eb8153649eaf3dfd SHA512 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso.xz) = 5fc5549cb312775998e2a29b36f038148f37bce09d51e58e5bf7d269a5aac806058e0094fd33026fd2c2949d4be6c7fef278b9e76f73de7ce50521842a978bba SHA512 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso) = 62a597fc9b4c66c462d27ab85a6920acb5bba908e4bc2d18f6d02351533927d12138abd8e9af6708357c7b36f3c298f9fea5e440b7b11980b594f95e0d2ba8d1 SHA512 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso.xz) = 844bbfe15dd9cde0eeec6f772308c78bfbcfd4925935f2062701e7fecdd67747d6a6a7bc5082e00729fbae03aa96178ed1fd747177323b21434ce5e7377a6621 SHA256 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso) = 44c0beaebc78d0244abba43a1f495bd73706f5df172b96e94af3a5ea8491fdc7 SHA256 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso.xz) = f847f0d4b80deeb96e487457f8b07d72c76547423eb4a7bbfc25f5e8e6189dd1 SHA256 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso) = 2062cf882728d34c5c1435522b6dbe4cb8985b3100d191e528f197d8579c1e2a SHA256 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso.xz) = 7bc088e70712ee395ad541a915d7ad11cc8a270052f86706ab739a104b234c96 SHA256 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso) = 61f6118f59bc10f1038f2bf0ab02d77eaf5c2eec97195c55475a152c10317d5b SHA256 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso.xz) = 14fb660e5d8eeb42a47f409dbd11036d1f5f676670138011693eaacc2852bbda\n    SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img) = e843d8e40387fbe78e3e828e35e1d6173d8642a6013bb30649dd0b5fadd96eec0a60cd902f9edece217f4fc140a6267bad44cb67784c15754b84704c7b87a9ef SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img.xz) = cb620fcddb130a098425ba7e43ce3f858a092cbfd9538271734c88a55c58cec28cbd30fb924138abf53ff0954805088b8df45cc5cd12f374d1587e55f5f00aaa SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img) = 7592cf554bf715ffbaae1b8faefd68b4d56d7bdd0491251f856e8e245e20f37d4a1decf168a2f0eca989d8eef02332d84705c181f0e2ee2d26ef97fa7ef3fa2b SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img.xz) = 8b1fb0db7c96b96612cf7d9335fac26142bf82ab664e24e5c\n......", "posttime": "2020-06-17 00:54:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "freebsd,sha512", "title": "FreeBSD 11.4", "title_en": "FreeBSD 11.4", "transed": 1, "url": "https://www.freebsd.org/releases/11.4R/announce.html", "via": "", "real_tags": ["freebsd", "sha512"]}, {"category": "", "categoryclass": "", "imagename": "66521bfb5a46663879a224545641b9ec.png", "infoid": 1006827, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5bf9\u6258\u7eb3\u91cc\u7684\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u901a\u5f80\u53e6\u4e00\u4e2a\u7a7a\u95f4\u7684\u865a\u62df\u901a\u9053\uff0c\u5141\u8bb8\u771f\u6b63\u81ea\u7136\u7684\u4eba\u7c7b\u4e92\u52a8\u3002\u7ecf\u8fc7\u8fd1\u4e24\u5e74\u7684\u5f00\u53d1\uff0c\u636e\u6211\u4eec\u6240\u77e5\uff0cTonari\u662f\u76ee\u524d\u53ef\u7528\u7684\u6700\u4f4e\u5ef6\u8fdf\u3001\u9ad8\u5206\u8fa8\u7387\u3001\u968f\u65f6\u53ef\u4ee5\u751f\u4ea7\u7684\u7535\u8bdd\u4f1a\u8bae\u4ea7\u54c1(\u6211\u4eec\u771f\u7684\u4e0d\u559c\u6b22\u8fd9\u4e2a\u8bcd)\u3002\n\u73bb\u7483\u5230\u73bb\u7483\u7684\u5ef6\u8fdf130ms(\u4ece\u5149\u7ebf\u7167\u5c04\u5230\u6444\u50cf\u5934\u51fa\u73b0\u5728\u53e6\u4e00\u8fb9\u5c4f\u5e55\u4e0a\u7684\u65f6\u95f4)\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0cZoom\u548cWebRTC\u7684\u5178\u578b\u5ef6\u8fdf\u4e3a315-500ms\uff0c\u5728\u6211\u4eec\u529e\u516c\u5ba4\u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u4e24\u53f0\u7b14\u8bb0\u672c\u7535\u8111(X1 Carbon\u548cMacBook Pro)\u4e4b\u95f4\u8fdb\u884c\u4e86\u6d4b\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u8fd9\u5c31\u662f\u4e0d\u65ad\u6253\u65ad\u5bf9\u65b9\u548c\u81ea\u7136\u4ea4\u8c08\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u5b83\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6444\u50cf\u5934\u62cd\u6444\u7684\u6a21\u7cca\u9762\u5b54\u4f3c\u4e4e\u6307\u5411\u67d0\u4eba\u7684\u9f3b\u5b50\uff0c\u800c\u5e7f\u57df\u7684\u9ad8\u4fdd\u771f\u56fe\u50cf\u5219\u80fd\u6d41\u7545\u5730\u4f20\u9012\u9762\u5bf9\u9762\u4ea4\u8c08\u4e2d\u6240\u6709\u5fae\u5999\u7684\u80a2\u4f53\u8bed\u8a00\u3002\n\u81ea\u4ece2\u6708\u4efd\u542f\u52a8\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u8bd5\u70b9\u4ee5\u6765\uff0c\u6211\u4eec\u6ca1\u6709\u7ecf\u5386\u8fc7\u4e0e\u8f6f\u4ef6\u76f8\u5173\u7684\u505c\u673a(\u88ab\u4ee5\u592a\u7f51\u7535\u7f06\u7eca\u5012\u5219\u662f\u53e6\u4e00\u56de\u4e8b)\u3002\u5c3d\u7ba1\u6211\u4eec\u5f88\u4e50\u610f\u8ba4\u4e3a\u6211\u4eec\u662f\u7edd\u5bf9\u53ef\u9760\u7684\u5de5\u7a0b\u5e08\uff0c\u4f46\u6211\u4eec\u771f\u7684\u4e0d\u76f8\u4fe1\uff0c\u5982\u679c\u6ca1\u6709\u94c1\u9508\uff0c\u6211\u4eec\u80fd\u591f\u8fbe\u5230\u8fd9\u6837\u7684\u7a33\u5b9a\u6c34\u5e73\u662f\u4e0d\u53ef\u80fd\u5b9e\u73b0\u8fd9\u4e9b\u6570\u5b57\u7684\u3002(\u5de5\u4e1a\u548c\u4fe1\u606f\u5316\u90e8\u7535\u5b50\u79d1\u5b66\u6280\u672f\u60c5\u62a5\u7814\u7a76\u6240\u9648\u7693)\u3002\n\u7b2c\u4e00\u4e2a\u6258\u7eb3\u5229\u6982\u5ff5\u9a8c\u8bc1\u4f7f\u7528\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u6295\u5f71\u4eea\u3001\u84dd\u7259\u626c\u58f0\u5668\u548c\u4e00\u4e2a\u8fd0\u884c\u5728\u666e\u901aWebRTC(JavaScript)\u4e4b\u4e0a\u7684\u7f51\u7ad9\u3002\u81ea\u4ece\u90a3\u4e9b\u65e5\u5b50\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u8d70\u8fc7\u4e86\u5f88\u957f\u4e00\u6bb5\u8def\u3002\n\u867d\u7136\u8fd9\u4e2a\u539f\u578b(\u4ee5\u53ca\u6211\u4eec\u5bf9\u672a\u6765\u7684\u56fa\u6267\u5df1\u89c1\u7684\u613f\u666f)\u4e3a\u6211\u4eec\u8d62\u5f97\u4e86\u62e8\u6b3e\uff0c\u4f46\u6211\u4eec\u77e5\u9053\uff0c\u9664\u975e\u6211\u4eec\u80fd\u5b9e\u73b0\u6bd4WebRTC\u4f4e\u5f97\u591a\u7684\u5ef6\u8fdf\u548c\u66f4\u9ad8\u7684\u4fdd\u771f\u5ea6--\u8fd9\u4e24\u4ef6\u4e8b\u76ee\u524d\u4e0e2020\u5e74\u7684\u89c6\u9891\u804a\u5929\u6ca1\u6709\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u5426\u5219Tonari\u5c06\u5728\u5230\u8fbe\u65f6\u5c31\u5b8c\u86cb\u4e86\u3002\n\u6211\u4eec\u60f3\uff0c\u201c\u597d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539WebRTC\uff0c\u5e76\u7528C++\u7528\u4e00\u4e2a\u5706\u6ed1\u7684UI\u6765\u5305\u88c5\u5b83\uff0c\u7136\u540e\u7acb\u5373\u542f\u52a8\u5b83\u3002\u201d\n\u4e0eWebRTC\u8fd175\u4e07\u4e2aLoC\u5e9e\u5927\u7684\u4ee3\u7801\u5e93\u8fdb\u884c\u4e86\u4e00\u5468\u7684\u6597\u4e89\uff0c\u63ed\u793a\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u6709\u591a\u4e48\u75db\u82e6-\u4f7f\u7528\u60a8\u6b63\u5728\u5904\u7406\u7684\u4ee3\u7801\u6d4b\u8bd5\u5e76\u611f\u5230\u771f\u6b63\u5b89\u5168\u662f\u591a\u4e48\u56f0\u96be\u3002\n\u56e0\u6b64\uff0c\u5728\u6124\u6012\u7684(\u9605\u8bfb\uff1a\u5e73\u9759\u548c\u5f7b\u5e95\u8ba8\u8bba)\u9000\u51fa\u4e4b\u540e\uff0c\u6211\u4eec\u51b3\u5b9a\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u5b9e\u73b0\u6574\u4e2a\u5806\u6808\u66f4\u5bb9\u6613\u3002\u6211\u4eec\u60f3\u77e5\u9053\u548c\u7406\u89e3\u5728\u6211\u4eec\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\u6bcf\u4e00\u884c\u4ee3\u7801\uff0c\u5e76\u4e14\u5b83\u5e94\u8be5\u662f\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u786e\u5207\u786c\u4ef6\u800c\u8bbe\u8ba1\u7684\u3002\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f00\u59cb\u4e86\u8d85\u8d8a\u9ad8\u7ea7\u754c\u9762(\u5982\u6d4f\u89c8\u5668\u6216\u73b0\u6709RTC\u9879\u76ee)\u7684\u6df1\u5ea6\u4e4b\u65c5\uff0c\u5e76\u4ece\u5934\u5f00\u59cb\u8fdb\u5165\u4f4e\u7ea7\u7cfb\u7edf\u548c\u786c\u4ef6\u4ea4\u4e92\u7684\u4e16\u754c\u3002\n\u6211\u4eec\u9700\u8981\u5b83\u672c\u8d28\u4e0a\u662f\u5b89\u5168\u7684\uff0c\u4ee5\u4fdd\u62a4\u90a3\u4e9b\u4f7f\u7528Tonari\u7684\u4eba\u7684\u9690\u79c1\u3002\u6211\u4eec\u9700\u8981\u5b83\u7684\u8868\u73b0\u529b\uff0c\u8ba9\u5b83\u770b\u8d77\u6765\u5c3d\u53ef\u80fd\u4eba\u6027\u5316\u548c\u5b9e\u65f6\u6027\u3002\u968f\u7740\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u6210\u719f\uff0c\u968f\u7740\u65b0\u5927\u8111\u7684\u51fa\u73b0\uff0c\u6211\u4eec\u9700\u8981\u5b83\u5177\u6709\u53ef\u7ef4\u62a4\u6027\uff0c\u5e76\u4e14\u5fc5\u987b\u5b66\u4e60\u6211\u4eec\u7684\u5de5\u4f5c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u6269\u5c55\u3002\n\u5b89\u5168\u6027\uff1aC\u548cC++\u662f\u5185\u5b58\u548c\u5e76\u53d1\u4e0d\u5b89\u5168\u7684\uff0c\u5b83\u4eec\u7684\u4e0d\u540c\u4e14\u770b\u4f3c\u65e0\u9650\u7684\u6784\u5efa\u7cfb\u7edf\u4f7f\u5f97\u83b7\u5f97\u4e00\u81f4\u800c\u7b80\u5355\u7684\u5f00\u53d1\u4f53\u9a8c\u53d8\u5f97\u56f0\u96be\u3002\n\u6027\u80fd\uff1aJava\u3001C#\u548cGo\u7684\u5185\u5b58\u7ba1\u7406\u662f\u4e0d\u900f\u660e\u7684\uff0c\u5728\u60a8\u5e0c\u671b\u5b8c\u5168\u63a7\u5236\u5185\u5b58\u7684\u5ef6\u8fdf\u654f\u611f\u578b\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u5f88\u96be\u4f7f\u7528\u3002\n\u53ef\u7ef4\u62a4\u6027\uff1aHaskell\u3001Nim\u3001D\u548c\u5176\u4ed6\u51e0\u79cd\u66f4\u5b9a\u5236\u7684\u8bed\u8a00\u5f80\u5f80\u5728\u5de5\u5177\u3001\u793e\u533a\u548c\u53ef\u96c7\u4f63\u80fd\u529b\u65b9\u9762\u53d7\u5230\u66f4\u591a\u9650\u5236\u3002\n\u94c1\u9508\u7684\u7f8e\u4e3d\u4e4b\u5904\u5728\u4e8e\u5f00\u53d1\u793e\u533a\u505a\u51fa\u7684\u65e0\u6570\u51b3\u5b9a\uff0c\u8fd9\u4e9b\u51b3\u5b9a\u4e0d\u65ad\u5730\u8ba9\u4f60\u611f\u89c9\u81ea\u5df1\u53ef\u4ee5\u5403\u4e0a\u5341\u4e2a\u86cb\u7cd5\uff0c\u4e5f\u53ef\u4ee5\u5403\u6389\u6240\u6709\u7684\u86cb\u7cd5\u3002\n\u5b83\u7684\u6784\u5efa\u7cfb\u7edf\u662f\u56fa\u6267\u5df1\u89c1\u7684\uff0c\u8bbe\u8ba1\u5f97\u5f88\u5e72\u51c0\u3002\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4f7f\u5411\u60a8\u7684\u9879\u76ee\u5f15\u5165\u65b0\u5de5\u7a0b\u5e08\u548c\u8bbe\u7f6e\u5f00\u53d1\u73af\u5883\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\n\u5185\u5b58\u548c\u5e76\u53d1\u5b89\u5168\u4fdd\u8bc1\u600e\u4e48\u8bc4\u4ef7\u90fd\u4e0d\u4e3a\u8fc7\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u5982\u679c\u6211\u4eec\u5728C++\u4e2d\u7ee7\u7eed\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u8fd8\u4e0d\u4f1a\u5b8c\u6210\u7b2c\u4e00\u6b21\u90e8\u7f72-\u6211\u4eec\u53ef\u80fd\u4ecd\u7136\u4f1a\u9677\u5165\u5fae\u5999\u7684\u969c\u788d\u3002\n\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u50cfCUDA\u8fd9\u6837\u7684API\u5728\u6700\u4f4e\u7ea7\u522b\u4e0e\u786c\u4ef6\u4ea4\u4e92\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u73b0\u6709\u7684\u673a\u7bb1(Rust\u5bf9\u4ee3\u7801\u5e93\u7684\u672f\u8bed)\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u5bf9\u6211\u4eec\u60f3\u8981\u7684\u7b2c\u4e00\u4e2a\u751f\u4ea7\u7248\u672c\u7684\u5ef6\u8fdf\u6709\u66f4\u9ad8\u7684\u6807\u51c6\u3002\n\u968f\u7740tonari\u53d8\u5f97\u8d8a\u6765\u8d8a\u5148\u8fdb\uff0c\u6211\u4eec\u73b0\u5728\u6b63\u5728\u9009\u62e9\u5d4c\u5165\u5f0f\u5fae\u63a7\u5236\u5668\uff0c\u5b83\u4eec\u7684\u56fa\u4ef6\u53ef\u4ee5\u7528\u94c1\u9508\u7f16\u5199\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u5fc5\u79bb\u5f00\u6211\u4eec\u7530\u56ed\u8bd7\u822c\u7684\u4e4c\u6258\u90a6\uff0c\u8fdb\u5165\u4e0d\u5b89\u5168\u7684\u7cfb\u7edf\u7f16\u7a0b\u7684\u65e7\u4e16\u754c\u3002\n\u6211\u4eec\u4e0d\u6253\u7b97\u5728\u8fd9\u91cc\u6279\u8bc4\u8d27\u67b6\uff0c\u800c\u662f\u96c6\u4e2d\u5728\u4e00\u4e9b\u7cbe\u9009\u7684\u677f\u6761\u7bb1\u4e0a\uff0c\u8fd9\u4e9b\u677f\u6761\u7bb1\u83b7\u5f97\u4e86\u7ec8\u8eab\u9080\u8bf7\u53c2\u52a0\u6211\u4eec\u6bcf\u4e2a\u751f\u65e5\u6d3e\u5bf9\u7684\u58f0\u671b\u5f88\u9ad8\u7684\u5956\u9879\u3002\n\u5728\u51e0\u4e4e\u6240\u6709\u65b9\u9762\uff0cCrossBeam\u90fd\u6bd4std\uff1a\uff1async\uff1a\uff1ampsc\u66f4\u9002\u5408\u7ebf\u7a0b\u95f4\u901a\u4fe1\uff0c\u5e76\u4e14\u6700\u7ec8\u53ef\u80fd\u4f1a\u5408\u5e76\u5230std\uff1a\uff1async\uff1a\uff1ampsc\u4e2d\u3002\nparking_lot\u5728\u51e0\u4e4e\u6240\u6709\u65b9\u9762\u90fd\u6bd4std\uff1a\uff1async\uff1a\uff1amutex\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u4e92\u65a5\u4f53\u5b9e\u73b0\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5408\u5e76\u5230\u6807\u51c6\u5e93\u4e2d(\u6709\u671d\u4e00\u65e5)\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u6709\u7528\u7684\u540c\u6b65\u539f\u8bed\u3002\n\u4e0eVec&lt\uff1bU8&&gt;\u76f8\u6bd4\uff0cBytes\u662f\u4e00\u79cd\u66f4\u5065\u58ee\u3001\u6027\u80fd\u66f4\u597d\u7684\u5b57\u8282\u5904\u7406\u65b9\u5f0f\u3002\n\u5982\u679c\u60a8\u66fe\u7ecf\u8fdb\u884c\u8fc7\u8f83\u4f4e\u7ea7\u522b\u7684\u7f51\u7edc\u4f18\u5316\uff0c\u90a3\u4e48Socket2\u5c06\u662f\u60a8\u6700\u7ec8\u7684\u76ee\u6807\u3002\nFERN\u662f\u5b9a\u5236\u548c\u7f8e\u5316\u60a8\u7684\u65e5\u5fd7\u8bb0\u5f55\u8f93\u51fa\u7684\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u4fdd\u6301\u65e5\u5fd7\u7684\u53ef\u8bfb\u6027\u548c\u5185\u90e8\u6807\u51c6\u5316\u3002\nstructopt\u662f\u60a8\u4e00\u76f4\u68a6\u60f3\u7684CLI\u53c2\u6570\u7684\u5904\u7406\u65b9\u5f0f\u3002\u6ca1\u6709\u7406\u7531\u4e0d\u4f7f\u7528\u5b83\uff0c\u9664\u975e\u60a8\u8981\u8ffd\u6c42\u6700\u4f4e\u9650\u5ea6\u7684\u4f9d\u8d56\u3002\n\u8d27\u6811(\u6700\u8fd1\u96c6\u6210\u5230\u8d27\u6811\u4e2d)\u663e\u793a\u4e86\u4e00\u4e2a\u4f9d\u8d56\u6811\uff0c\u5b83\u5728\u8bb8\u591a\u65b9\u9762\u90fd\u5f88\u6709\u7528\uff0c\u4f46\u4e5f\u5c31\u662f\u8bc6\u522b\u6700\u5c0f\u5316\u4f9d\u8d56\u5173\u7cfb\u7684\u65b9\u6cd5\u3002\n\u6258\u7eb3\u5229\u4ee3\u7801\u5e93\u662f\u4e00\u79cd\u5355\u4e00\u4ee3\u7801\u5e93\u3002\u5728\u5b83\u7684\u6839\u90e8\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u8d27\u7269\u5de5\u4f5c\u533a\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7bb1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u652f\u6301\u5e93\u7684\u7bb1\u5b50\u3002\n\u5c06\u6211\u4eec\u7684\u677f\u6761\u7bb1\u653e\u5728\u4e00\u4e2arepo\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u6211\u4eec\u7684\u4e8c\u8fdb\u5236\u677f\u6761\u7bb1\u4e2d\u5f15\u7528\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u53d1\u5e03\u5230crates.io\uff0c\u4e5f\u4e0d\u9700\u8981\u5728Cargo.toml\u4e2d\u6307\u5b9agit\u4f9d\u8d56\u9879\u3002\u5f53\u5c06\u8fd9\u4e9b\u5e93\u4f5c\u4e3a\u5f00\u653e\u6e90\u7801\u53d1\u5e03\u65f6\uff0c\u5c06\u5176\u62c6\u5206\u6210\u81ea\u5df1\u7684repo\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u6211\u4eec\u6709\u4e00\u4e2a\u4e3b\u5e93\u673a\u7bb1\uff0c\u5176\u4e2d\u5305\u542b\u7528\u4e8e\u4e0e\u786c\u4ef6\u3001\u5a92\u4f53\u7f16\u89e3\u7801\u5668\u3001\u7f51\u7edc\u534f\u8bae\u7b49\u5bf9\u8bdd\u7684\u7edf\u4e00API\u3002\u5728\u8be5\u79c1\u6709API\u4e4b\u5916\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u533a\u4e2d\u4e5f\u6709\u72ec\u7acb\u7684\u673a\u7bb1\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b83\u4eec\u662f\u5f00\u6e90\u7684\u5019\u9009\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7f16\u5199\u4e86\u9002\u5408\u957f\u671f\u8fd0\u884c\u7684\u9ad8\u541e\u5410\u91cf\u53c2\u4e0e\u8005\u7684\u53c2\u4e0e\u8005\u6846\u67b6\uff0c\u4ee5\u53ca\u7528\u4e8e\u53ef\u9760\u3001\u9ad8\u5e26\u5bbd\u3001\u4f4e\u5ef6\u8fdf\u5a92\u4f53\u6d41\u7684\u7f51\u7edc\u534f\u8bae\u3002\u6211\u4eec\u5bf9tonari\u7cfb\u7edf\u7684\u4e0d\u540c\u90e8\u5206\u4f7f\u7528\u5355\u72ec\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u4f4d\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5373\u7ec4\u5408\u5e93/\u4e8c\u8fdb\u5236\u7bb1\u3002\u5b83\u7684\u5e93\u6a21\u5757\u5305\u542b\u4e00\u7ec4\u53ef\u91cd\u7528\u7684\u53c2\u4e0e\u8005\uff0c\u8fd9\u4e9b\u53c2\u4e0e\u8005\u5c06\u6211\u4eec\u7684\u79c1\u6709API\u4e0e\u53c2\u4e0e\u8005\u7cfb\u7edf\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u7136\u540e\u662f\u4f7f\u7528\u8fd9\u4e9b\u53c2\u4e0e\u8005\u5e76\u5b9a\u4e49\u5b83\u4eec\u4e4b\u95f4\u7ba1\u9053\u7684\u4e00\u7ec4\u5355\u72ec\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\n\u6211\u4eec\u5e7f\u6cdb\u4f7f\u7528\u529f\u80fd\u6807\u5fd7\uff0c\u4ee5\u5141\u8bb8\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf(\u5982Brian&39\uff1b1970\u5e74\u4ee3\u7684MacBook Pro)\u6216\u4e0d\u540c\u7684\u786c\u4ef6\u914d\u7f6e\u4e0a\u5f00\u53d1\u6211\u4eec\u7684\u9879\u76ee\u3002\u4f8b\u5982\uff0cLinux\u4f7f\u7528V4L2(Video for Linux.2)\u6765\u8bbf\u95ee\u5927\u591a\u6570\u7f51\u7edc\u6444\u50cf\u5934\uff0c\u4f46\u5176\u4ed6\u7f51\u7edc\u6444\u50cf\u5934\u53ef\u80fd\u6709\u81ea\u5df1\u7684SDK\u3002\u8981\u4e3a\u4e0d\u4f7f\u7528V4L2\u7684\u5e73\u53f0\u8fdb\u884c\u7f16\u8bd1\uff0c\u6216\u8005\u5f53SDK\u4e0d\u9002\u7528\u4e8e\u7279\u5b9a\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9bSDK\u653e\u5728\u529f\u80fd\u6807\u5fd7\u540e\u9762\u5e76\u5bfc\u51fa\u901a\u7528\u63a5\u53e3\u3002\u4f5c\u4e3a\u4e00\u4e2a(\u7b80\u5316\u7684)\u5177\u4f53\u793a\u4f8b\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5b9a\u4e49\u4e3a\u7279\u5f81\u7684\u901a\u7528\u76f8\u673a\u63a5\u53e3\uff1a(#*_)\u3002\npub\u7279\u5f81\u6355\u83b7{/\u4ece\u6444\u50cf\u5934\u6355\u83b7\u4e00\u5e27\uff0c\u8fd4\u56de\u4e00\u4e2aRGB\u56fe\u50cf\u5b57\u8282\u7684VEC\u3002FN\u6355\u83b7(&amp\uff1bmut self)-&gt\uff1bVec&lt\uff1bU8&gt\uff1b\uff1b}\n\u8ba9\u6211\u4eec\u4e5f\u5047\u8bbe\u6211\u4eec\u6709\u4e09\u4e2a\u4e0d\u540c\u7684\u76f8\u673a\u63a5\u53e3-V4L2\uff0c\u6838\u5fc3\u89c6\u9891\u548c\u5b9d\u4e3d\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ea\u4f7f\u7528\u8fd9\u4e00\u7279\u6027\u6765\u7075\u6d3b\u5de5\u4f5c\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u529f\u80fd\u6807\u5fd7\u4ea4\u6362\u4e0d\u540c\u7684\u6355\u83b7\u5b9e\u73b0\u3002\nMod V4L2{pub struct V4l2Capture{.}\u9488\u5bf9V4l2Capture\u7684\u5b9e\u65bd\u6355\u83b7{fn Capture(&amp\uff1bmut self)-&gt\uff1bVec&lt\uff1bU8&gt\uff1b{.}\u6a21\u5757\u6838\u5fc3\u89c6\u9891{pub struct CoreVideoCapture{.}\u9488\u5bf9CoreVideoCapture\u7684\u5b9e\u65bd\u6355\u83b7{FN Capture(&amp\uff1bmut self)-&gt\uff1bVec&lt\uff1bU8&Gt\u3002{.}mod\u5b9d\u4e3d\u6765{pub struct PolaroidCapture{.}\u9488\u5bf9PolaroidCapture\u6267\u884c\u6355\u83b7{fn Capture(&amp\uff1bmut self)-&gt\uff1bvec&lt\uff1bu8&gt\uff1b{.}pub type VideoCapture=V4L2\uff1a\uff1aV4l2Capture\uff1bpub type VideoCapture=corevideo\uff1a\uff1aCoreVideoCapture\uff1bpub type VideoCapture=Polaroid\u3002\n\u5982\u679c\u6211\u4eec\u8ba9\u6211\u4eec\u7684\u4ee3\u7801\u4f7f\u7528\u5b9e\u73b0\u6355\u83b7\u7279\u5f81\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u5207\u6362\u529f\u80fd\u6807\u5fd7\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u7f16\u8bd1\u5e76\u7784\u51c6\u4e0d\u540c\u7684\u5e73\u53f0\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u5177\u6709field-video_Capture\uff1abox&lt\uff1bdyn Capture&gt\uff1b\u7684\u7ed3\u6784\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5b58\u50a8\u53ef\u4ee5\u4ece\u6444\u50cf\u673a\u6355\u83b7\u7684\u4efb\u4f55\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u7528\u4e8e\u652f\u6301\u6211\u4eec\u4e0a\u9762\u7f16\u5199\u7684\u6355\u83b7\u5b9e\u73b0\u7684Cargo.toml\u6587\u4ef6\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n[\u8f6f\u4ef6\u5305]\u540d\u79f0=&#34\uff1btonari&#34\uff1b\u7248\u672c=&#34\uff1b1.0.0&#34\uff1b\u7248\u672c=&#34\uff1b2018&#34\uff1b[\u529f\u80fd]\u9ed8\u8ba4=[&#34\uff1bV4L2&#34\uff1b]MacOS=[&#34\uff1b\u6838\u5fc3\u89c6\u9891&#34\uff1b]\u7ecf\u5178=[&#34\uff1b\u5b9d\u4e3d\u6765&#34\uff1b]V4L2=[&#34\uff1brscam&#34\uff1b][\u4f9d\u8d56\u9879]rscam={\u7248\u672c=&#34\u30020.5&#34\uff1b\uff0cOptional=true}#V4L2 Linux\u6444\u50cf\u5934\u5e93corevideo={Version=&#34\uff1b0.1&#34\uff1b\uff0cOptional=true}#MacOS\u6444\u50cf\u5934\u5e93polaroid={version=&#34\uff1b0.1&#34\uff1b\uff0cOptional=true}#\u5b9d\u4e3d\u6765\u76f8\u673a\u5e93(\u975e\u5e38\u6162\u7684FPS)\u3002\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u6784\u5efa\u548c\u94fe\u63a5\u5230\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u5e93(\u5982V4L2)\uff0c\u8fd9\u4e9b\u5e93\u5e76\u4e0d\u662f\u968f\u5904\u53ef\u7528\u7684\u3002\n\u5728\u8f6c\u5230\u94c1\u9508\u516c\u53f8\u4e00\u5e74\u540e\uff0c\u6211\u4eec\u8ba9\u6211\u4eec\u7684\u7b2c\u56db\u4f4d\u5de5\u7a0b\u5e08\u52a0\u5165\u4e86\u56e2\u961f\uff0c\u4ed6\u4e4b\u524d\u5728\u94c1\u9508\u516c\u53f8\u6216\u7cfb\u7edf\u5de5\u7a0b\u65b9\u9762\u90fd\u6ca1\u6709\u592a\u591a\u7ecf\u9a8c\u3002\u867d\u7136\u5b66\u4e60\u66f2\u7ebf\u662f\u4e0d\u53ef\u5426\u8ba4\u7684(\u501f\u7528\u68c0\u67e5\u5668\uff0c\u6211\u7684\u8001\u670b\u53cb)\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4ece\u65b0\u624b\u5230\u4f4e\u7ea7\u7f16\u7a0b\u7684\u4eba\u6765\u8bf4\uff0cRust\u662f\u4e00\u79cd\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6388\u6743\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u5185\u7f6e\u4e8e\u8bed\u8a00\u4e2d\u7684\u5185\u5b58\u548c\u5e76\u53d1\u5b89\u5168\u610f\u5473\u7740\u4e00\u6574\u7c7b\u95ee\u9898\u4e0d\u4ec5\u65e0\u6cd5\u7f16\u8bd1\uff0c\u800c\u4e14\u7f16\u8bd1\u5668\u672c\u8eab\u901a\u5e38\u662f\u60a8\u552f\u4e00\u9700\u8981\u7684\u8001\u5e08\uff0c\u56e0\u4e3a\u5b83\u7684\u8b66\u544a\u975e\u5e38\u5177\u6709\u63cf\u8ff0\u6027\u3002\u5173\u4e8eRust\u4f1f\u5927\u7684\u7f16\u8bd1\u5668\u4fe1\u606f\uff0c\u4ee5\u53ca\u4f18\u79c0\u7684\u6587\u6863(\u4f8b\u5982\uff0c\u8bf7\u770b\u4e00\u4e0b\u8fd9\u7bc7\u5173\u4e8e\u5b57\u7b26\u4e32\u7684\u5197\u957f\u8ba8\u8bba)\uff0c\u5df2\u7ecf\u5199\u4e86\u5f88\u591a\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e9b\u4e5f\u662f\u975e\u5e38\u6709\u7528\u7684\u8d44\u6e90\u3002\n\u4e0e\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u5728Rust\u4e2d\u901a\u5e38\u6709\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684\u6b63\u786e\u65b9\u6cd5\u3002\u4e0d\u662f\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u7f16\u5199\u7684\u4ee3\u7801\u5f80\u5f80\u4f1a\u8131\u9896\u800c\u51fa\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5728\u5ba1\u67e5\u4e2d\u6311\u51fa\u6765\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u8d27\u7269\u526a\u8f91\u81ea\u52a8\u6311\u9009\u51fa\u6765\u7684\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u65b0\u7684\u5de5\u7a0b\u5e08\u53ef\u4ee5\u8fc5\u901f\u5f00\u59cb\u8d21\u732e\u53ef\u6295\u5165\u751f\u4ea7\u7684\u4ee3\u7801\u3002\u4ee3\u7801\u5ba1\u67e5\u53ef\u4ee5\u5c06\u91cd\u70b9\u653e\u5728\u5b9e\u73b0\u4e0a\uff0c\u800c\u4e0d\u662f\u82b1\u8d39\u7cbe\u529b\u8fdb\u884c\u624b\u52a8\u6b63\u786e\u6027\u68c0\u67e5\u3002\n\u5728IDE\u90e8\u95e8\uff0c\u4e0e\u4e00\u4e9b\u524d\u8f88\u76f8\u6bd4\uff0cRust\u4ecd\u7136\u663e\u793a\u51fa\u76f8\u5bf9\u7684\u4e0d\u6210\u719f\u3002\u7279\u522b\u662f\u4eca\u5e74\uff0c\u867d\u7136\u6709\u4e86\u5f88\u5927\u7684\u8fdb\u6b65\uff0c\u6211\u4eec\u6bcf\u4e2a\u4eba\u5728\u8fd9\u4e00\u70b9\u4e0a\u90fd\u627e\u5230\u4e86\u4e00\u4e2a\u76f8\u5f53\u8212\u9002\u7684\u53d1\u5c55\u73af\u5883\u3002\u00b7\u6211\u4eec\u4e2d\u67091\u4eba\u4f7f\u7528MacOS\uff0c3\u4eba\u4f7f\u7528Linux(Arch\u3001Ubuntu\u548cPop\uff01_OS\uff0c\u66b4\u9732\u51fa\u6211\u4eec\u5404\u81ea\u7684\u53d7\u8650\u72c2\u7a0b\u5ea6)\u00b7\u6211\u4eec\u4e2d\u67092\u4eba\u5c06VS Code\u4e0e\u9508\u8680\u5206\u6790\u4eea\u63d2\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c2\u4eba\u5c06Sublime Text\u4e0eRustEnhanced\u4e00\u8d77\u4f7f\u7528\u3002\u6211\u4eec\u7ecf\u5e38\u5171\u4eab\u8bbe\u7f6e\u5e76\u5c1d\u8bd5\u5f7c\u6b64\u7684\u89e3\u51b3\u65b9\u6848(\u9664\u4e86\u5e03\u83b1\u6069\uff0c\u4ed6\u572829\u5c81\u65f6\u6b65\u5c65\u7ef4\u8270)\uff0c\u6211\u4eec\u8fd8\u5728\u4e0d\u65ad\u5173\u6ce8\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7684\u65b0\u5f00\u53d1\u5de5\u5177\u3002\n\u4f60\u77e5\u9053\u4ec0\u4e48\u53eb\u72c2\u91ce\u5417\uff1f\u5728\u63d0\u4ea4\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u6ca1\u6709\u60a8\u5fc5\u987b\u9605\u8bfb\u7684\u4ee3\u7801\u6837\u5f0f\u6307\u5357\u6587\u6863\u3002\u6211\u4eec\u4e0d\u9700\u8981\u3002\u6211\u4eec\u53ea\u662f\u5f3a\u5236\u6267\u884c\u201c\u94c1\u9508\u6cd5\u201d(Rustfmt)\u3002\u8ba9\u6211\u544a\u8bc9\u60a8\uff1a\u8fd9\u771f\u7684\u964d\u4f4e\u4e86\u4ee3\u7801\u5ba1\u67e5\u7684\u4f18\u52bf\u3002\n\u6211\u4eec\u7684\u4ee3\u7801\u5ba1\u67e5\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u53ea\u6709\u56db\u4e2a\u4eba\uff0c\u800c\u4e14\u6211\u4eec\u5f88\u5e78\u8fd0\uff0c\u6211\u4eec\u4e4b\u95f4\u6709\u5f88\u591a\u4fe1\u4efb\u3002\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5728\u6bcf\u4e00\u884c\u4ee3\u7801\u4e0a\u81f3\u5c11\u6709\u4e24\u53cc\u773c\u775b\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4e92\u76f8\u963b\u6321\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u6301\u52bf\u5934\u3002\n\u6211\u4eec\u4f7f\u7528Google\u7684Cloud Builder\u6765\u8fd0\u884c\u6211\u4eec\u7684CI\u6784\u5efa\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u57fa\u7840\u67b6\u6784\u5806\u6808\u4e3b\u8981\u6784\u5efa\u5728GCP\u4e4b\u4e0a\uff0c\u5e76\u4e14\u5b83\u5141\u8bb8\u8f7b\u677e\u5730\u8c03\u6574\u6784\u5efa\u673a\u5668\u89c4\u683c\u548c\u81ea\u5b9a\u4e49\u6784\u5efa\u6620\u50cf\u3002\u5b83\u662f\u89e6\u53d1\u7684\u6bcf\u4e00\u6b21\u63d0\u4ea4\uff0c\u5e76\u8fd0\u884c\u8d27\u7269\u526a\u8f91\u548c\u8d27\u7269\u5efa\u9020\u3002\u6211\u4eec\u5c06-D\u8b66\u544a\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u4ee5\u5c06\u8b66\u544a\u5347\u7ea7\u4e3a\u9519\u8bef\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u66f4\u6539\u4e0d\u4f1a\u4f7f\u6211\u4eec\u53ef\u601c\u7684\u540c\u4e8b\u5728\u4e0b\u6b21\u62c9\u51fa\u66f4\u6539\u65f6\u53d1\u51fa\u751f\u9508\u8b66\u544a\u3002\u4e3a\u4e86\u7f29\u77edCI\u6784\u5efa\u65f6\u95f4\uff0c\u6211\u4eec\u5728\u4e91\u5b58\u50a8\u4e2d\u7f13\u5b58\u76ee\u6807\u548c.Cargo\u76ee\u5f55\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5728\u4e0b\u6b21\u8fdb\u884c\u589e\u91cf\u6784\u5efa\u65f6\u4e0b\u8f7d\u5b83\u3002\n\u5bf9\u4e8e$(ls*/Cargo.toml|xargs dirname)\u4e2d\u7684crate\uff1b\u6267\u884cPUSH$crate#Lint\u3002Cargo+$Nightly_Toolchain clippy--no-default-Feature-D Warning#Build\u3002\u65f6\u95f4RUSTFLAGS=&#34\uff1b-D\u8b66\u544a&#34\uff1b\u8d27\u7269\u6784\u5efa--\u65e0\u9ed8\u8ba4-\u529f\u80fd#\u6d4b\u8bd5\u3002Time Cargo--\u65e0\u9ed8\u8ba4\u8bbe\u7f6e-\u5df2\u5b8c\u6210Popd\u529f\u80fd\u3002\n\u94c1\u9508\u751f\u6001\u7cfb\u7edf\u5f88\u68d2\uff0c\u4f46\u662f\u6709\u5f88\u591a\u5de8\u5927\u7684\u73b0\u6709\u9879\u76ee\u5728\u6ca1\u6709\u5de8\u5927\u7684\u65f6\u95f4\u6295\u5165\u7684\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u79fb\u690d\u5230\u94c1\u9508\u4e0a\u3002WebRTC-Audio-Processing\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5b83\u63d0\u4f9b\u7684\u597d\u5904(\u6e05\u6670\u7684\u97f3\u9891\uff0c\u6ca1\u6709\u58f0\u97f3\u56de\u58f0\u6216\u53cd\u9988)\u662f\u5de8\u5927\u7684\uff0c\u5728\u77ed\u671f\u5185\u5c06\u5176\u79fb\u690d\u5230Rust\u662f\u4e0d\u592a\u53ef\u80fd\u7684(\u5b83\u5927\u7ea6\u9700\u898180k\u884cC\u548cC++\u4ee3\u7801)\u3002\n\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0cRust\u4f7f\u5f97\u4f7f\u7528\u73b0\u6709\u7684C\u548cC++\u5e93\u53d8\u5f97\u76f8\u5f53\u5bb9\u6613\u3002Bindgen\u677f\u6761\u7bb1\u627f\u62c5\u4e86\u5927\u90e8\u5206\u7684\u642c\u8fd0\u4efb\u52a1\u3002\u7ed9\u5b83\u4e00\u4e2a\u7528C\u6216C++\u7f16\u5199\u7684\u5934\u6587\u4ef6\uff0c\u5b83\u5c06\u81ea\u52a8\u751f\u6210(\u4e0d\u5b89\u5168\u7684)Rust\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u53ef\u4ee5\u8c03\u7528\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b83\u662f\u7531\u60a8\u521b\u5efa\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u522b\u7684\u9508\u7bb1\uff0c\u66b4\u9732\u4e00\u4e2a\u5b89\u5168\u7684API\u3002\n\u5bf9\u4e8e\u5177\u6709\u7b80\u5355\u6216\u5e38\u7528\u6784\u5efa\u8fc7\u7a0b\u7684\u5e93\u6765\u8bf4\uff0c\u6b64\u8fc7\u7a0b\u4e2d\u7684\u5f88\u591a\u90fd\u662f\u76f8\u5f53\u81ea\u52a8\u5316\u7684\u3002\u4e0d\u8fc7\uff0c\u521b\u5efa\u66f4\u9ad8\u7ea7\u522b\u7684\u5b89\u5168API\u5f88\u91cd\u8981--bindgen\u63d0\u4f9b\u7684Rust API\u76f4\u63a5\u4f7f\u7528\u5e76\u4e0d\u662f\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5b89\u5168\uff0c\u800c\u4e14\u901a\u5e38\u4e0d\u592a\u4e60\u60ef\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u65e6\u60a8\u62e5\u6709\u4e86\u66f4\u9ad8\u7ea7\u522b\u7684API\uff0c\u60a8\u6700\u7ec8\u53ef\u4ee5\u5c06C\u5e93\u6362\u6210\u60a8\u81ea\u5df1\u7684Rust\u7248\u672c\uff0c\u800c\u673a\u7bb1\u7684\u4f7f\u7528\u8005\u5e76\u4e0d\u4f1a\u66f4\u660e\u667a\u3002\n\u8fd9\u4e9b\u7279\u6027\u8ba9\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528API\u548c\u786c\u4ef6\uff0c\u800c\u8fd9\u4e9bAPI\u548c\u786c\u4ef6\u8981\u4e48\u6c38\u8fdc\u6ca1\u6709\u539f\u751f\u7684Rust API\uff0c\u8981\u4e48\u9700\u8981\u51e0\u4e2a\u6708\u6216\u51e0\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u91cd\u65b0\u5b9e\u73b0\u3002\u4f4e\u7ea7\u64cd\u4f5c\u7cfb\u7edf\u5e93\u3001\u5927\u578b\u4ee3\u7801\u5e93(\u5982WebRTC-Audio-Processing)\u548c\u5236\u9020\u5546\u63d0\u4f9b\u7684Camera SDK\u90fd\u53ef\u4ee5\u5728\u6211\u4eec\u7684Rust\u4ee3\u7801\u5e93\u4e2d\u4f7f\u7528\uff0c\u800c\u4e0d\u5fc5\u5c06\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8bed\u8a00\u8fc1\u79fb\u5230C++\uff0c\u540c\u65f6\u4ecd\u80fd\u50cf\u6211\u4eec\u90a3\u6837\u8fd0\u884c\u3002\n\u4e00\u4e9bC++\u5e93\u5f88\u96be\u76f4\u63a5\u4eceRust\u63a5\u53e3\u3002\u60a8\u5fc5\u987b\u5c06\u7c7b\u578b\u5217\u5165\u767d\u540d\u5355\uff0c\u56e0\u4e3abindgen\u4e0d\u80fd\u5904\u7406\u6240\u6709\u5f15\u5165\u7684std\uff1a\uff1a*\u7c7b\u578b\uff0c\u5b83\u4e0d\u80fd\u5f88\u597d\u5730\u5904\u7406\u6a21\u677f\u5316\u51fd\u6570\u548c\u590d\u5236/\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u53ca\u8fd9\u91cc\u8bb0\u5f55\u7684\u5927\u91cf\u5176\u4ed6\u95ee\u9898\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u521b\u5efa\u4e00\u4e2a\u7b80\u5316\u7684C++\u5934\u548c\u6e90\u4ee3\u7801\u5305\u88c5\u5668\uff0c\u7528\u4e8e\u5bfc\u51fa\u7ed1\u5b9a\u53cb\u597d\u51fd\u6570\u3002\u8fd9\u6bd4\u5c06\u6574\u4e2a\u5e93\u79fb\u690d\u5230Rust\u8981\u591a\u4e00\u70b9\uff0c\u4f46\u5de5\u4f5c\u91cf\u8981\u5c0f\u5f97\u591a\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u6b64\u5305\u88c5\u5668\u521b\u5efa\u7684\u793a\u4f8b\u3002\n\u6709\u4e86Rust\u7684\u6240\u6709\u751f\u6001\u7cfb\u7edf\uff0c\u800c\u4e14C/C++\u9879\u76ee\u53ea\u9700\u4e00\u6b21\u7ed1\u5b9a\u8c03\u7528\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u73b0\u6709\u7684\u4e00\u4e9b\u6700\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u5305\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u9700\u8981\u727a\u7272\u6267\u884c\u901f\u5ea6\u3002\n\u751f\u9508\u5e76\u4e0d\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u5b83\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u65b0\u7684\u8bed\u8a00\uff0c\u6b63\u5728\u4e0d\u65ad\u53d1\u5c55\uff0c\u5728\u8bc4\u4f30\u8fc1\u79fb\u5230Rust\u65f6\uff0c\u60a8\u5e94\u8be5\u8003\u8651\u4e00\u4e9b\u7f3a\u70b9\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u975e\u8be6\u5c3d\u5217\u8868\uff1a\n\u5f88\u957f\u7684\u7f16\u8bd1\u65f6\u95f4\uff1b\u6d41\u884c\u7684xkcd\u6f2b\u753b\uff0c\u5728\u7b49\u5f85Rust\u4ee3\u7801\u7f16\u8bd1\u65f6\u7684\u5496\u5561\u4f11\u606f\u662f\u975e\u5e38\u771f\u5b9e\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u5728\u4e00\u53f0\u4e2d\u7b49\u7ed3\u5b9e\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fdb\u884c\u975e\u589e\u91cf\u7f16\u8bd1\u5927\u7ea6\u9700\u89818\u5206\u949f\uff0c\u4f46\u53ef\u80fd\u4f1a\u66f4\u7cdf\u3002Rust\u7f16\u8bd1\u5668\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u4ee5\u52a0\u5f3a\u5f3a\u5927\u7684\u8bed\u8a00\u4fdd\u8bc1\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u6574\u4e2a\u4f9d\u8d56\u5173\u7cfb\u6811\u3002\u589e\u91cf\u6784\u5efa\u66f4\u597d\uff0c\u4f46\u662f\u4e00\u4e9b\u673a\u7bb1\u9644\u5e26\u4e86\u62c9\u53d6\u548c\u7f16\u8bd1\u975eRust\u4f9d\u8d56\u9879\u4ee3\u7801\u7684\u6784\u5efa\u811a\u672c\uff0c\u5e76\u4e14\u5728\u5347\u7ea7\u7248\u672c\u548c\u5207\u6362\u5206\u652f\u65f6\u53ef\u80fd\u9700\u8981\u6e05\u9664\u6784\u5efa\u7f13\u5b58\u3002\n\u56fe\u4e66\u9986\u590d\u76d6\u7387\uff1a\u56fe\u4e66\u9986\u751f\u6001\u7cfb\u7edf\u76f8\u5f53\u6210\u719f\uff0c\u4f46\u4e0eC/C++\u76f8\u6bd4\u590d\u76d6\u7387\u6709\u9650\u3002\u6211\u4eec\u6700\u7ec8\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u6296\u52a8\u7f13\u51b2\u533a\uff0c\u5e76\u4e14\u6211\u4eec\u8fd8\u7528Rust\u7684bindgen\u5305\u88c5\u4e86\u51e0\u4e2aC/C++\u5e93\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684Rust\u4ee3\u7801\u4e2d\u6709\u4e0d\u5b89\u5168\u7684\u533a\u57df\u3002\u975e\u5e73\u51e1\u7684\u9879\u76ee\u5f80\u5f80\u6709\u4e00\u4e9b\u6700\u5c11\u91cf\u7684\u4e0d\u5b89\u5168\u7f16\u7801\uff0c\u8fd9\u589e\u52a0\u4e86\u5b66\u4e60\u66f2\u7ebf\u548c\u5185\u5b58\u9519\u8bef\u7684\u53ef\u80fd\u6027\u3002\nRuust\u8981\u6c42\u60a8\u9884\u5148\u7f16\u5199\u6b63\u786e\u800c\u660e\u786e\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5f04\u9519\u4e86\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u8ba9\u5b83\u6e9c\u8d70\u3002\u5982\u679c\u60a8\u4e0d\u592a\u5173\u5fc3\u5e76\u53d1\u6027\u548c\u5185\u5b58\u4fdd\u8bc1\uff0c\u5f00\u53d1\u53ef\u80fd\u4f1a\u611f\u5230\u4e0d\u5fc5\u8981\u7684\u7f13\u6162\u3002\u4e0d\u8fc7\uff0cRust\u5f00\u53d1\u4eba\u5458\u4e00\u76f4\u5728\u52aa\u529b\u6539\u8fdb\u9519\u8bef\u6d88\u606f\u3002\u4ed6\u4eec\u5f88\u53cb\u597d\uff0c\u800c\u4e14\u53ef\u4ee5\u884c\u52a8\uff0c\u901a\u5e38\u8fd8\u4f1a\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5efa\u8bae\u3002\u4e00\u4e2a\u597d\u7684\u5185\u5b58\u548c\u5e76\u53d1\u57fa\u7840\u6a21\u578b\u4e5f\u6709\u52a9\u4e8e\u66f4\u5feb\u5730\u514b\u670d\u6700\u521d\u7684\u969c\u788d\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u82b1\u65f6\u95f4\u771f\u6b63\u7406\u89e3\u8bed\u8a00\u53ca\u5176\u4fdd\u8bc1\u3002\nRust\u7684\u7c7b\u578b\u63a8\u7406\u5668\u662f\u5982\u6b64\u5f3a\u5927\uff0c\u6709\u65f6\u4f1a\u8ba9\u60a8\u611f\u89c9\u81ea\u5df1\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u603b\u4f1a\u6709\u8fd9\u6837\u7684\u65f6\u523b\uff0c\u5b83\u5e76\u4e0d\u5b8c\u5168\u6309\u7167\u60a8\u60f3\u8981\u7684\u65b9\u5f0f\u5de5\u4f5c\uff0c\u7279\u522b\u662f\u5f53\u6d89\u53ca\u5230\u6cdb\u578b\u548cdeef\u5f3a\u5236\u65f6\uff0c\u60a8\u6700\u7ec8\u4e0d\u5f97\u4e0d\u6478\u7d22\u4ee5\u53d6\u60a6\u63a8\u7406\u8005\u3002\u8fd9\u53ef\u80fd\u4f1a\u4f34\u968f\u7740\u632b\u6298\u800c\u6765\uff0c\u800c\u56e2\u961f\u4e2d\u6709\u4e00\u4e2a\u5df2\u7ecf\u7ecf\u5386\u8fc7\u8fd9\u4e2a\u5b66\u4e60\u9636\u6bb5\u7684\u4eba\u771f\u7684\u5f88\u6709\u5e2e\u52a9\u3002\u5982\u679c\u6709\u8db3\u591f\u7684\u8010\u5fc3\uff0c\u8fd9\u79cd\u632b\u8d25\u611f\u901a\u5e38\u4f1a\u53d8\u6210\u4ee4\u4eba\u60ca\u53f9\u7684\u65f6\u523b\uff0c\u5bf9\u8bed\u8a00\u8bbe\u8ba1\u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u505a\uff0c\u4ee5\u53ca\u53ef\u80fd\u4f1a\u5f15\u5165\u7684\u9519\u8bef\u3002\n\u8bed\u8a00\u8fdb\u5316\uff1b\u94c1\u9508\u8bed\u8a00\u5728\u4e0d\u65ad\u8fdb\u5316\u3002\u6709\u4e9b\u8bed\u8a00\u7ed3\u6784(\u5982\u5f02\u6b65)\u4ecd\u7136\u662f\u6613\u5931\u6027\u7684\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5c3d\u53ef\u80fd\u5730\u575a\u6301\u4f7f\u7528\u7ebf\u7a0b\u548c\u6807\u51c6\u5e93\u662f\u6700\u597d\u7684\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6ca1\u6709\u7ecf\u5386\u8fc7\u4e0e\u8f6f\u4ef6\u76f8\u5173\u7684\u505c\u673a\u65f6\u95f4\uff0c\u8fd9\u65e2\u662f\u4e00\u4e2a\u60ca\u559c\uff0c\u4e5f\u662f\u5bf9\u94c1\u9508\u516c\u53f8\u63d0\u4f9b\u7684\u5b89\u5168\u4fdd\u8bc1\u7684\u8bc1\u660e\u3002Ruust\u8fd8\u4f7f\u5f97\u7f16\u5199\u9ad8\u6548\u8d44\u6e90\u4f7f\u7528\u7684\u9ad8\u6027\u80fd\u4ee3\u7801\u53d8\u5f97\u5bb9\u6613-\u6211\u4eec\u7684CPU\u548c\u5185\u5b58\u4f7f\u7528\u90fd\u662f\u53ef\u9884\u6d4b\u548c\u4e00\u81f4\u7684\u3002\u6ca1\u6709\u5783\u573e\u6536\u96c6\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u81f4\u7684\u5ef6\u8fdf\u548c\u5e27\u901f\u7387\u3002\n\u6211\u4eec\u7ef4\u62a4\u94c1\u9508\u4ee3\u7801\u5e93\u7684\u7ecf\u9a8c\u4e5f\u5f88\u4e30\u5bcc\u3002\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u6709\u4fe1\u5fc3\u5730\u901a\u8fc7\u5bf9\u4ee3\u7801\u5e93\u8fdb\u884c\u8f83\u5927\u89c4\u6a21\u7684\u66f4\u6539\u6765\u663e\u8457\u6539\u5584\u6211\u4eec\u7684\u5ef6\u8fdf\u3002\u5e72\u51c0\u7684\u7f16\u8bd1\u5e76\u4e0d\u603b\u662f\u610f\u5473\u7740\u4e00\u5207\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u8001\u5b9e\u8bf4\uff0c\u60c5\u51b5\u5f80\u5f80\u5982\u6b64\u3002\n\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u53ef\u9760\u7684\u4ea7\u54c1\uff0c\u5b83\u4e0d\u4f1a\u6210\u4e3a\u7ef4\u62a4\u7684\u5669\u68a6(\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u5f3a\u8bcd\u593a\u7406)\uff0c\u5e76\u4e14\u5728\u6211\u4eec\u8981\u6c42\u7684\u5e27\u7387\u3001\u5ef6\u8fdf\u548c\u8d44\u6e90\u6548\u7387\u7684\u9ad8\u89c4\u683c\u4e0b\u5feb\u901f\u6267\u884c\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u5f88\u96be\u60f3\u8c61\u5982\u679c\u6ca1\u6709\u751f\u9508\u6211\u4eec\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff01\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u6e90\u4e86\u4e00\u4e2aFFI\u677f\u6761\u7bb1\uff0cWebRTC-Audio-Processing\u3002\u8fd9\u662f\u8fc7\u53bb\u751f\u6d3b\u5728\u6211\u4eec\u56de\u8d2d\u7684\u9876\u5c42\u7684\u677f\u6761\u7bb1\u4e4b\u4e00\uff0c\u8fd8\u6709\u66f4\u591a\u7c7b\u4f3c\u7684\u677f\u6761\u7bb1\u6b63\u5728\u8d70\u5411\u5f00\u6e90\u3002\n\u968f\u7740\u6211\u4eec\u53d1\u5e03\u66f4\u591a\u7684\u4ee3\u7801\uff0c\u7a0d\u540e\u4f1a\u6709\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u5185\u5bb9\uff0c\u4f46\u6709\u4e00\u4ef6\u4e8b\u8ba9\u4eba\u611f\u89c9\u662f\u6b63\u786e\u7684\uff1a\u5373\u4f7f\u5728\u6211\u4eec\u7684\u677f\u6761\u7bb1\u5f00\u6e90\u4e4b\u524d\uff0c\u5047\u8bbe\u6211\u4eec\u79c1\u4eba\u88c5\u5165\u7684\u6bcf\u4e2a\u677f\u6761\u7bb1\u90fd\u5c06\u662f\u5f00\u6e90\u7684\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u4ee3\u7801\u6e05\u6670\u5ea6\u6765\u8bf4\u662f\u975e\u5e38\u5065\u5eb7\u7684\u3002\u8fd9\u79cd\u54f2\u5b66\u4f7f\u6211\u4eec\u7684\u7bb1\u5b50\u4e4b\u95f4\u7684\u8fb9\u754c\u66f4\u52a0\u6e05\u6670\uff0c\u5e76\u9f13\u52b1\u6211\u4eec\u66f4\u5feb\u5730\u505a\u51fa\u51b3\u5b9a\uff0c\u4ee5\u6700\u5c0f\u9650\u5ea6\u5730\u5927\u60ca\u5c0f\u602a\u5730\u5f00\u653e\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u7684\u67d0\u4e9b\u90e8\u5206\u3002\n\u611f\u8c22\u4f60\u8d70\u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u7bc7\u8111\u7b4b\u6025\u8f6c\u5f2f\u80fd\u63d0\u4f9b\u4e00\u4e24\u4e2a\u6709\u7528\u7684\u60f3\u6cd5\u3002\n..", "note_en": "Our goal for tonari is to build a virtual doorway to another space that allows for truly natural human interactions. Nearly two years in development, tonari is, to the best of our knowledge, the lowest-latency high resolution production-ready &#34;teleconferencing&#34; (we are truly not fond of that word) product available.\n 130ms glass-to-glass latency (the time from light hitting the camera to when it appears on-screen on the other side)\n Compare this to the typical  315-500ms latency for Zoom and  WebRTC, as measured between two laptops (X1 Carbon and MacBook Pro) on the same network at our office. It&#39;s a huge difference. It&#39;s the difference between constantly interrupting each other versus having a natural flow of conversation. It&#39;s the difference between a blurry face from a camera seemingly pointed up someone&#39;s nose versus a wide-view high fidelity image that smoothly transfers all the subtle body language of an in-person conversation.\n  Since launching  our first pilot in February, we&#39;ve experienced no software-related downtime (tripping over ethernet cables is a different story). A nd as much as we would love to think we&#39;re infallible engineers, we truly don&#39;t believe we could have achieved these numbers with this level of stability without Rust.\n   The  very first tonari proof-of-concept used a basic projector, bluetooth speakers, and a website running on top of vanilla WebRTC (JavaScript). We&#39;ve come a long way since those days.\n While that prototype (and our opinionated vision of the future) got us grant funding, we knew that tonari would be dead on arrival unless we could  achieve  significantly lower latency and higher fidelity than  WebRTC\u2014two things that aren&#39;t currently associated with video chat in 2020.\n We figured, \u201cOkay , so we can just   modify  WebRTC directly and wrap it up with a slick UI in C++ and launch it in no time.\u201d\n A week of struggling with WebRTC\u2019s nearly 750,000 LoC  behemoth of a codebase revealed just how painful a single small change could be \u2014 how hard it was to test, and feel truly  safe, with the code you were dealing with.\n   So in a furious (read: calm and thoroughly-discussed) rage quit we decided it was easier to re-implement the whole stack from scratch. We wanted to  know and understand every line of code being run on our hardware, and it should be designed for the  exact hardware we wanted.\n Thus began our journey to the depths beyond high-level interfaces like a browser or existing RTC project, and into the world of low-level systems and hardware interaction from scratch.\n We needed it to  be inherently    secure  to protect the privacy of those who use tonari. We needed it to be   performant to make it feel as human and real-time as possible. And we needed it to be   maintainable as the code becomes more mature, as new brains show up and have to learn our work and expand on it.\n  Security: C and C++ are memory- and concurrency-unsafe, and their disparate and seemingly infinite build systems make it hard to have a consistent and simple development experience.\n Performance: Java,  C#, and Go&#39;s memory management is opaque and can be difficult to work with in latency-sensitive applications where you want full control over your memory.\n Maintainability: Haskell, Nim, D, and a handful of other more bespoke languages tend to be more limited in tooling, community, and hire-ability.\n    Rust&#39;s beauty lies in the countless decisions made by the development community that constantly make you feel like you have can ten cakes and eat all of them too.\n Its build system is opinionated, and cleanly designed. It is itself a complete ecosystem that makes introducing new engineers to your project and setting up dev environments remarkably simple.\n The memory and concurrency safety guarantees cannot be over-appreciated. We&#39;re confident that we wouldn&#39;t have done our first deployment yet if we had continued this in C++ - we&#39;d still probably be stuck on subtle snags.\n Our ability to interact at the lowest level with hardware via APIs like CUDA, oftentimes through existing   crates (Rust&#39;s term for a code library), has allowed us to have higher standards about the latency we want from our first production release.\n As tonari is getting more advanced, we&#39;re now choosing embedded microcontrollers whose firmware can be written in Rust so we don&#39;t have to leave our idyllic utopia into the old world of unsafe system programming.\n   We&#39;re not going to  cat Cargo.toml here, instead focusing on some select crates that have earned the prestigious award of a lifetime invitation to each of our birthday parties forever.\n   crossbeam is better for inter-thread communication than  std::sync::mpsc in almost every way, and may be merged into  std eventually.\n parking_lot has a mutex implementation better than  std::sync::Mutex in almost every way, and may be merged into the standard library (one day). It also provides many other useful synchronization primitives.\n bytes is a more robust, and often more performant, way to play with bytes compared to  Vec&lt;u8&gt;.\n socket2 is what you will end up at if you are ever doing lower-level networking optimizations.\n   fern is a dead-simple way to customize and prettify your logging output. We use it to keep our logs readable and internally standardized.\n structopt is how you always dreamed CLI arguments would be handled. There&#39;s no reason not to use it unless you&#39;re going for bare-minimum dependencies.\n   cargo tree (recently integrated in cargo) shows a dependency tree that&#39;s useful in many ways, but namely in identifying ways to minimize dependencies.\n   The tonari codebase is a monorepo. At its root we have a Cargo workspace with a  binaries crate, and a number of supporting library crates.\n Having our crates in one repo makes them easy to reference in our  binaries crate without needing to publish to  crates.io or get too fancy with specifying git dependencies in our  Cargo.toml. When the time comes to publish these libraries as open source, it&#39;s trivial to break it out into its own repo.\n   We have one main library crate that contains a unified API for talking to hardware, media codecs, network protocols, etc. Outside of that private API, we also have standalone crates in our workspace that we consider candidates for open-sourcing. For example, we\u2019ve written our own actor framework fit for long-running high-throughput actors, as well as our own network protocol for reliable, high-bandwidth, low-latency media streaming.We use separate binaries for different parts of the tonari system and each of these lives in  binaries, a combination library/binary crate. Its library modules contains a set of reusable actors that combine our private API with our actor system, and then a collection of individual binaries that consume these actors and define the plumbing between them.\n   We make extensive use of feature flags to allow development of our project on different OSes (like Brian&#39;s 1970s-era MacBook Pro) or different hardware configurations. This allows us to easily swap out camera hardware without extra runtime checks or using awful  sed hacks.For example, Linux uses  v4l2 (Video For Linux...2) to access most webcams, but other webcams might have their own SDK. To compile for platforms that don&#39;t use  v4l2 or when an SDK isn&#39;t available for a particular OS, we can put those SDKs behind feature flags and export a common interface.As a (simplified) concrete example, let&#39;s say we have a common camera interface defined as a trait:\n pub  trait Capture  {  /// Capture a frame from a camera, returning a Vec of RGB image bytes.  fn  capture ( &amp; mut  self )  -&gt; Vec &lt;u8 &gt; ; }\n Let&#39;s also say we have three different camera interfaces -  v4l2,  corevideo, and  polaroid. We can make our binaries work exclusively with this trait to be flexible, and we can swap in different implementations of  Capture with feature flags.\n mod v4l2  {  pub  struct V4l2Capture  {  ...  }  impl Capture  for V4l2Capture  {  fn  capture ( &amp; mut  self )  -&gt; Vec &lt;u8 &gt;  {  ...  }  } }  mod corevideo  {  pub  struct CoreVideoCapture  {  ...  }  impl Capture  for CoreVideoCapture  {  fn  capture ( &amp; mut  self )  -&gt; Vec &lt;u8 &gt;  {  ...  }  } }  mod polaroid  {  pub  struct PolaroidCapture  {  ...  }  impl Capture  for PolaroidCapture  {  fn  capture ( &amp; mut  self )  -&gt; Vec &lt;u8 &gt;  {  ...  }  } }  pub  type VideoCapture  = v4l2 ::V4l2Capture ;  pub  type VideoCapture  = corevideo ::CoreVideoCapture ;  pub  type VideoCapture  = polaroid ::PolaroidCapture ;\n If we make our code work with things which implement the  Capture trait instead of concrete types, we can now compile on and target various platforms by simply toggling feature flags. For example, we can have a struct which has a field -  video_capture: Box&lt;dyn Capture&gt; which will let us store any type which can  Capture from a camera.An example  Cargo.toml file to support the capture implementations we wrote above might look something like this:\n [ package ]name  =  &#34;tonari&#34;version  =  &#34;1.0.0&#34;edition  =  &#34;2018&#34; [features ] default  =  [ &#34;v4l2&#34; ]macos  =  [ &#34;corevideo&#34; ]classic  =  [ &#34;polaroid&#34; ]v4l2  =  [ &#34;rscam&#34; ] [dependencies ]rscam  =  { version  =  &#34;0.5&#34; , optional  =  true  } # v4l2 linux camera librarycorevideo  =  { version  =  &#34;0.1&#34; , optional  =  true  } # MacOS camera librarypolaroid  =  { version  =  &#34;0.1&#34; , optional  =  true  } # Polaroid camera  library  (very slow  FPS )\n This way we can avoid building and linking to platform-specific libraries like  v4l2 which aren&#39;t available everywhere.\n   A year after switching over to Rust, we onboarded our fourth engineer to the team, who didn&#39;t have much prior experience in either Rust or systems engineering. While the learning curve is undeniable (    borrow checker   , my old friend), we&#39;ve found that Rust is incredibly empowering for those new to lower-level programming.\n As mentioned, memory and concurrency safety built into the language means that an  entire class of problems not only fail to compile,   but  the compiler itself is often the only teacher you need since its warnings are so descriptive. Much has already been written about Rust&#39;s  great compiler messages, as well as  excellent docs (for example, take a look at this  lengthy discussion on strings), and in our case as well these have been incredibly helpful resources.\n There is usually one obvious &#34;right way&#34; to do a thing in Rust, unlike many other languages. Code that isn&#39;t written the &#34;right way&#34; tends to stand out, and is easy to pick out in reviews, often times automatically by  cargo clippy.\n In practice, this has meant that new engineers can quickly start contributing production-ready code. Code reviews can remain focused on the implementation, as opposed to expending energy doing manual correctness checks.\n     In the IDE department, Rust still shows its relative immaturity compared to some of its predecessors. This year especially, though, there have been huge strides, and each of us has found a pretty comfortable development environment at this point. \u2022 1 of us use macOS, and 3 of us use Linux (Arch, Ubuntu, and Pop!_OS, revealing our respective levels of masochism) \u2022 2 of us use VS Code with the  rust-analyzer plugin, and 2 of us use Sublime Text with  RustEnhanced.We\u2019re often sharing setups and trying each other\u2019s out (except Brian, who is stuck in his ways at the ripe old age of 29), and we\u2019re constantly keeping an eye on new development tools that can help us work better together.\n   You know what&#39;s  wild? We don&#39;t have a code style guideline document that you have to read before submitting code. We don&#39;t need one. We just enforce  rustfmt.  Let me tell you: it really takes the edge off of code reviews.\n   Our code reviews are straightforward since there&#39;s only four of us so far, and we are lucky to have a lot of trust amongst us. Our main goal is to have   at least two pairs of eyes on every line of code, and to not block each other so we can maintain momentum.\n   We use Google\u2019s Cloud Builder for running our CI build, as our infrastructure stack is mostly built on GCP and it allows for easy-ish tweaking of build machine specs and custom build images. It&#39;s triggered for every commit and runs  cargo clippy and  cargo build. We pass  -D warnings to the compiler to promote warnings into errors to ensure our changes don\u2019t make our poor fellow coworker\u2019s  rustc  rain warnings on them the next time they pull changes.To improve the CI build time, we cache the  target and  .cargo directories in Cloud Storage, so it can be download next time for incremental build.\n for  crate  in   $( ls */Cargo.toml  |  xargs  dirname ) ;  do  pushd  $crate  # Lint. cargo + $NIGHTLY_TOOLCHAIN clippy --no-default-features -- -D warnings  # Build.  time  RUSTFLAGS = &#34;-D warnings&#34; cargo build --no-default-features  # Test.  time cargo   --no-default-features  popd done\n    The Rust ecosystem is great, but there are huge existing projects out there which just aren&#39;t feasible to port to Rust yet without a huge time investment.  webrtc-audio-processing is a good example. The benefits it provides (clear audio with no vocal echoes or feedback) are huge and porting it to Rust in the near-term is not likely (it&#39;s around 80k lines of C and C++ code).\n Thankfully, Rust makes it quite easy to use existing C and C++ libraries.  The   bindgen  crate does most of the heavy-lifting. Give it a header file in C or C++ and it will automatically generate (unsafe) Rust code which can call the functions defined in the header. At that point, it&#39;s up to you to create a higher level Rust crate which exposes a safe API.\n A lot of this process is fairly automatic for libraries with straightforward or commonly-used build processes. Creating the higher level safe API is important though - the Rust API that bindgen provides is not very fun to use directly as it&#39;s unsafe and typically not very idiomatic. Fortunately, once you have a higher level API you can eventually swap the C library out with your own Rust version and consumers of the crate are none the wiser.\n These features let us work with APIs and hardware which would either never have a native Rust API or take months or years to re-implement. Low-level OS libraries, large codebases such as  webrtc-audio-processing, and manufacturer-supplied camera SDKs all become available for use in our Rust codebase without having to move our entire application language over to C++, while still performing as if we had.\n   Some C++ libraries are difficult to interface with directly from Rust. You have to whitelist types because  bindgen can&#39;t handle all the  std::* types that get pulled in, it doesn&#39;t play well with templated functions and copy/move constructors, and a whole host of other issues documented  here.\n To get around these issues, we&#39;ll typically create a simplified C++ header and source wrapper which exports  bindgen-friendly functions. It&#39;s a bit more work, but far less work than porting the entire library to Rust. You can see an example of this wrapper creation  here.\n With all of Rust&#39;s ecosystem, and C/C++ projects being only a  bindgen invocation away, we have easy access to some of the highest quality software packages in existence, all without having to sacrifice execution speed.\n   Rust is not problem-free. It&#39;s a relatively new language that is constantly evolving, and there are shortcomings that you should consider when evaluating a move to Rust.  Here is our non-exhaustive list:\n Long compile times;  the popular xkcd comic, the coffee break while waiting for Rust code to compile is very real. Our codebase for example takes about 8 mins to compile non-incrementally on a moderately beefy laptop, but it can be a lot  worse.The Rust compiler has a lot of work to do enforcing strong language guarantees, and it must compile your entire dependency tree from source. Incremental builds are better, but some crates come with build scripts that pull and compile non-Rust dependency code, and the build cache may need to be cleared when upgrading their versions and switching branches.\n Library coverage; The library ecosystem is quite mature but the coverage is limited compared to C / C++. We ended up implementing our own jitter buffer, and we also wrap several C / C++ libraries with Rust&#39;s  bindgen, which means we have  unsafe regions in our Rust code. Non-trivial projects tend to have some minimal amount of  unsafe coding, which adds to the learning curve and chance of memory bugs.\n Rust demands you to write  correct and explicit code up-front. If you get it wrong, the compiler won&#39;t let it slide. If you care less about concurrency and memory guarantees, development can feel needlessly slow. Rust developers are constantly working on improving the error messages, though. They are friendly and actionable, often with an included fix suggestion. A good foundational model on memory &amp; concurrency also helps getting over the initial hump quicker, so we suggest taking time to truly understand the language and its guarantees.\n Rust&#39;s type inferencer is so strong it makes you feel sometimes like you&#39;re using a dynamically-typed language. That said, there comes the moment where it does not quite work the way you want, especially when generics and  deref coercion are involved, and you end up having to fumble around to make the inferencer happy. It can come with frustration, and it&#39;s really helpful to have someone in the team who already has gone through that stage of learning. With enough patience, that frustration often turns into a wow moment, with a deeper understanding of the language design and why it&#39;s done that way, as well as a possible bug that you would have otherwise introduced.\n Language evolution; The Rust language is constantly evolving. Some of the language constructs like  async are still volatile, and you may find it&#39;s best to stick with threads and the standard library when you can.\n   Experiencing no software-related downtime so far is both a pleasant surprise, and a testament to the safety provided by Rust&#39;s guarantees. Rust has also made it easy to write performant code with efficient resource usage - both our CPU and memory usage has been predictable and consistent. Without a garbage collector, we can guarantee consistent latency and frame rates.\n Our experience maintaining a Rust codebase has also been great. We&#39;ve been able to introduce significant improvements to our latency through sizable changes to our codebase with confidence. A clean compile doesn&#39;t always imply everything will work, but honestly, that&#39;s been the case more often than not.\n The end result is a reliable product which hasn&#39;t been a nightmare to maintain (strong words, we know), and performs quickly at the high specs we demand for frame rate, latency, and resource efficiency. Again, it&#39;s hard to imagine where we might be without Rust!\n   We&#39;ve open sourced one   FFI  crate so far,   webrtc-audio-processing. This is one of the crates that used to live in the top level of our repo, and there are many more like it on their way to open-source.\n There will be more on this subject later as we release more code, but one thing feels true: even before open-sourcing our crates, it\u2019s felt very healthy to our code&#39;s clarity to  assume each crate we crate privately  will be open-sourced. This philosophy keeps our boundaries between crates more clean, and encourages us to make quicker decisions about opening up parts of our codebase with minimal fuss.\n   Thanks for making it this far, we hope this brain-dump might have offered a useful thought or two f\n......", "posttime": "2020-06-17 00:53:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u94c1\u9508,achieving,\u4ee3\u7801", "title": "3k\u300160fps\u3001130ms\uff1a\u7528\u94c1\u9508\u5b9e\u73b0", "title_en": "3K, 60fps, 130ms: achieving it with Rust", "transed": 1, "url": "https://blog.tonari.no/why-we-love-rust", "via": "", "real_tags": ["rust", "\u94c1\u9508", "achieving", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "9fb183b60a9bcce784f74de73541c1d8.jpg", "infoid": 1006826, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u6708\u524d\uff0c\u4e00\u4f4d\u670b\u53cb\u63a8\u8350\u4e86\u514b\u91cc\u65af\u6258\u5f17\u00b7\u4e9a\u5386\u5c71\u5927(Christopher Alexander)\u7684\u201c\u6a21\u5f0f\u8bed\u8a00\u201d(A Pattern Language)\u3002\u6211\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u542c\u8bf4\u8fc7\u5b83\uff0c\u5f53\u6211\u5f00\u59cb\u56db\u5904\u95f2\u901b\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u662f\u4e09\u672c\u7cfb\u5217\u4e66\u4e2d\u7684\u7b2c\u4e8c\u672c\uff0c\u800c\u63a8\u8350\u901a\u5e38\u4f1a\u8ba9\u6211\u4ece\u201c\u5efa\u7b51\u7684\u6c38\u6052\u4e4b\u9053\u201d\u5f00\u59cb\u3002\n\u66f4\u6df1\u5165\u5730\u7814\u7a76\u8fd9\u4e9b\u4e66\u7684\u80cc\u666f\uff0c\u6211\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u793e\u533a\u7684\u8d77\u6e90\u9664\u4e86\u662f\u4e00\u90e8\u6709\u5f71\u54cd\u529b\u7684\u67b6\u6784\u4f5c\u54c1\u5916\uff0c\u8fd8\u6765\u81ea\u4e9a\u5386\u5c71\u5927\u7684\u4f5c\u54c1\u3002\n\u5728\u98ce\u683c\u4e0a\uff0c\u8fd9\u672c\u4e66\u5bf9\u795e\u79d8\u4e3b\u4e49\u548c\u8bfa\u65af\u66ff\u667a\u6167\u7684\u5192\u9669\u6709\u70b9\u8fc7\u5934\u4e86\uff0c\u6211\u7684\u53e3\u5473-\u51e0\u4e4e\u6709\u65f6\u8ba9\u4eba\u60f3\u8d77\u8bfb\u300a\u9053\u5fb7\u7ecf\u300b-\u4f46\u8fd9\u662f\u4e00\u672c\u6709\u8da3\u7684\u4e66\uff0c\u7279\u522b\u662f\u5728\u5b83\u4f5c\u4e3a\u57fa\u7840\u6587\u672c\u7684\u80cc\u666f\u4e0b\u3002\n\u6211\u4ece\u6211\u7684\u9605\u8bfb\u4e2d\u5b66\u5230\u7684\u662f\u91cd\u65b0\u5173\u6ce8\u5c06\u4eba\u4eec\u7684\u9700\u6c42\u548c\u4e60\u60ef\u66f4\u7d27\u5bc6\u5730\u4e0e\u6211\u4eec\u521b\u9020\u7684\u4e1c\u897f\u7ed3\u5408\u8d77\u6765\uff0c\u5e76\u63d0\u9192\u4eba\u4eec\uff0c\u6211\u4eec\u5236\u9020\u7684\u5de5\u5177\u4ee5\u771f\u5b9e\u800c\u6df1\u523b\u7684\u65b9\u5f0f\u5851\u9020\u4eba\u4eec\u7684\u751f\u6d3b\u3002\n\u5efa\u7b51\u548c\u57ce\u9547\u6700\u597d\u7684\u5b9a\u4e49\u4e0d\u662f\u5efa\u7b51\u6750\u6599\uff0c\u4e5f\u4e0d\u662f\u89c4\u8303\u5b83\u4eec\u7684\u5efa\u7b51\u89c4\u8303\uff0c\u800c\u662f\u91cc\u9762\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u8fd9\u8fdb\u4e00\u6b65\u53d1\u5c55\u6210\u7a7a\u95f4\u4e0d\u662f\u6d3b\u7740\u5c31\u662f\u6b7b\u4e86\u7684\u6982\u5ff5\u3002\u751f\u6d3b\u7a7a\u95f4\u4e0e\u5b83\u4eec\u7684\u5b9a\u4e49\u4e8b\u4ef6\u81ea\u7136\u5951\u5408\uff0c\u800c\u6b7b\u4ea1\u7a7a\u95f4\u5219\u4e0d\u81ea\u7136\u5730\u8feb\u4f7f\u4e8b\u4ef6\u53d1\u751f\u3002\n\u751f\u6d3b\u7a7a\u95f4\u53ef\u80fd\u662f\u8857\u9053\u548c\u524d\u95e8\u4e4b\u95f4\u7684\u4e00\u4e2a\u5ead\u9662\uff0c\u4e00\u4e2a\u4f60\u4f1a\u5728\u7ed9\u5b9a\u7684\u4e00\u5929\u91cc\u81ea\u7136\u7a7f\u8fc7\u5f88\u591a\u6b21\u7684\u7a7a\u95f4\uff0c\u8ba9\u5b83\u611f\u89c9\u81ea\u5df1\u662f\u751f\u6d3b\u7684\u548c\u719f\u6089\u7684\uff1a\u4e00\u4e2a\u4f60\u878d\u5165\u5230\u751f\u6d3b\u4e2d\u7684\u7a7a\u95f4\u3002\u4e00\u4e2a\u6b7b\u80e1\u540c\u53ef\u80fd\u662f\u4e00\u4e2a\u534e\u4e3d\u7684\u6b7b\u80e1\u540c\uff0c\u4e00\u4e2a\u4f60\u5076\u5c14\u4f1a\u8bb0\u5f97\u4f60\u6709\u8fc7\u7684\u623f\u95f4\u6216\u533a\u57df\uff0c\u4f46\u53ea\u6709\u5728\u5236\u9020\u4e86\u4e00\u4e2a\u539f\u56e0\u540e\u624d\u4f1a\u53bb\u53c2\u89c2\uff1a\u4e00\u4e2a\u81ea\u7136\u8870\u8d25\u5230\u5e9f\u5f03\u7684\u7a7a\u95f4\u3002\n\u8bfb\u5230\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u6700\u80fd\u8ba9\u6211\u4ea7\u751f\u5171\u9e23\u7684\u662f\uff0c\u751f\u6d3b\u7a7a\u95f4\u901a\u5e38\u662f\u7531\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u4ef6\u5b9a\u4e49\u7684\uff0c\u800c\u6b7b\u4ea1\u7a7a\u95f4\u662f\u4e3a\u4eba\u4eec\u5e0c\u671b\u6216\u5bb3\u6015\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u5f88\u5c11\u4f1a\u53d1\u751f\u3002\u5728\u540e\u4e00\u7c7b\u4e2d\uff0c\u5b83\u8ba9\u6211\u60f3\u8d77\u4e86\u7f8e\u56fd\u4e00\u76f4\u5b58\u5728\u7684\u67aa\u652f\u66b4\u529b\u5a01\u80c1\u662f\u5982\u4f55\u65e5\u76ca\u4f7f\u6211\u4eec\u7684\u6559\u5802\u548c\u5b66\u6821\u53d8\u5f97\u6b7b\u6c14\u6c89\u6c89\u7684\uff0c\u6050\u60e7\u9010\u6e10\u8feb\u4f7f\u5b83\u4eec\u6210\u4e3a\u5821\u5792\u30029\u00b711\u88ad\u51fb\u540e\uff0c\u7c7b\u4f3c\u7684\u6050\u60e7\u5bfc\u81f4\u6211\u4eec\u7684\u673a\u573a\u6b7b\u4ea1\u3002\u7a7a\u95f4\u80fd\u5728\u6050\u60e7\u7684\u6c1b\u56f4\u4e2d\u5b9c\u5c45\u5417\uff1f\n\u5c0f\u5b66\u751f\u7ec3\u4e60\u5b9e\u5f39\u8bad\u7ec3\u548c\u8106\u5f31\u7684\u8f6f\u4ef6\u5f00\u53d1\u8bbe\u8ba1\u4e4b\u95f4\u6ca1\u6709\u7b49\u540c\u4e4b\u5904\uff0c\u4f46\u6211\u4e5f\u53d1\u73b0\uff0c\u51fa\u4e8e\u6050\u60e7\u5bf9\u7f55\u89c1\u4e8b\u4ef6\u7684\u9884\u9632\u5f80\u5f80\u4f1a\u5bfc\u81f4\u66f4\u4e13\u6ce8\u4e8e\u9650\u5236\u7528\u6237\u800c\u4e0d\u662f\u542f\u7528\u7528\u6237\u7684\u5e73\u53f0\u3001\u5e93\u548c\u5de5\u5177\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u6df1\u601d\u719f\u8651\u7684\u754c\u9762\u8bbe\u8ba1\u548c\u5206\u5c42\u7b56\u7565\u7b49\u65b9\u6cd5\u6765\u907f\u514d\u786c\u7f16\u7801\u9650\u5236\uff0c\u4ece\u800c\u5b9e\u73b0\u6d3b\u8f6f\u4ef6\u3002\n\u5728\u6211\u77ed\u6682\u7684\u4e00\u751f\u4e2d\uff0c\u8bb8\u591a\u6a21\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff1a\u56fa\u5b9a\u7535\u8bdd\u7684\u4f5c\u7528\u51cf\u5f31\uff0c\u5916\u56fd\u65c5\u6e38\u901a\u8fc7\u4e92\u8054\u7f51\u5b9e\u73b0\u5bfc\u822a\u800c\u4e0d\u662f\u6807\u724c\u6216\u5370\u5237\u4e66\u7c4d\uff0c\u6559\u5802\u4f5c\u4e3a\u4e2d\u5fc3\u793e\u533a\u7684\u4f5c\u7528\u51cf\u5f31\uff0c\u706b\u7089\u4e0a\u7684\u7535\u4f9b\u6696\uff0c\u7a7a\u8c03\u8bf1\u4f7f\u4eba\u4eec\u79bb\u5f00\u524d\u5eca\u3002(\u8fd9\u8ba9\u6211\u60f3\u8d77\u4e86\u4e00\u70b9\u5355\u72ec\u6253\u4fdd\u9f84\u7403\u7684\u7ecf\u5386\u3002)\u3002\n\u5982\u679c\u5efa\u7b51\u7269\u662f\u7531\u5185\u90e8\u53d1\u751f\u7684\u4e8b\u4ef6\u6765\u5b9a\u4e49\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u89e3\u91ca\u6280\u672f\u53d1\u5c55\u5e26\u6765\u7684\u5feb\u901f\u53d8\u5316\u7684\u6a21\u5f0f\u5462\uff1f\u968f\u7740\u6211\u4eec\u4e60\u60ef\u7684\u6539\u53d8\uff0c\u5efa\u7b51\u7269\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6ce8\u5b9a\u4f1a\u8fc5\u901f\u6b7b\u4ea1\u5417\uff1f\n\u6211\u4e0d\u592a\u7406\u89e3\u8fd9\u672c\u4e66\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u53cd\u5e94\uff0c\u6216\u8005\u5373\u4f7f\u5b83\u771f\u7684\u89e3\u51b3\u4e86\u5b9a\u4e49\u6a21\u5f0f\u7684\u77ac\u606f\u4e07\u53d8\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u8bb8\u591a\u4e8b\u60c5\uff0c\u5982\u679c\u4e0d\u5339\u914d\u8db3\u591f\u5c0f\uff0c\u4eba\u4eec\u4f1a\u6709\u673a\u5730\u4fee\u590d\u5b83\u4eec\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u6d3b\u7740\u7684\u5efa\u7b51\u4f1a\u81ea\u6211\u7ea0\u6b63\u4e00\u4e9b\u5c0f\u4e8b\u60c5\u3002\n\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u6211\u4e00\u76f4\u5728\u601d\u8003\u8fd9\u4e2a\u5df2\u77e5\u672a\u77e5\u7684\u4e3b\u9898\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u56fd\u9645\u7f51\u4e0a\u4ea4\u6613\u7684\u53d8\u5316\u901f\u5ea6\u6b63\u5728\u52a0\u901f\uff0c\u800c\u4e0d\u662f\u653e\u7f13\u3002GDPR\u8981\u6c42\u662f\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u4f46\u5168\u7403\u5404\u56fd\u90fd\u5728\u8003\u8651\u5176\u4ed6\u8bb8\u591a\u6570\u636e\u5c40\u90e8\u6027\u6cd5\u89c4\u3002\u8fd9\u79cd\u52a0\u901f\u5c06\u8d8a\u6765\u8d8a\u610f\u5473\u7740\uff0c\u5e0c\u671b\u5728\u56fd\u9645\u4e0a\u6216\u8bda\u5b9e\u5730\u751a\u81f3\u5728\u56fd\u5185\u5f00\u5c55\u4e1a\u52a1\u7684\u516c\u53f8\u5c06\u4e0d\u5f97\u4e0d\u4e3a\u4e0d\u65ad\u6f14\u53d8\u7684\u67b6\u6784\u548c\u653f\u7b56\u8fdb\u884c\u8bbe\u8ba1\uff0c\u8fd9\u4e9b\u67b6\u6784\u548c\u653f\u7b56\u53ef\u4ee5\u968f\u7740\u6cd5\u89c4\u4ee5\u4e0d\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u6bcf6\u523012\u4e2a\u6708\u6539\u53d8\u4e00\u6b21\u800c\u8fdb\u884c\u8c03\u6574\u3002\n\u597d\u6d88\u606f\u662f\uff0c\u8f6f\u4ef6\u67b6\u6784\u6bd4\u7269\u7406\u67b6\u6784\u591a\u53d8\u5f97\u591a\uff0c\u4f46\u574f\u6d88\u606f\u662f\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u975e\u5e38\u64c5\u957f\u8f6f\u4ef6\u67b6\u6784\uff0c\u800c\u4e14\u66f4\u6539\u7387\u8981\u9ad8\u5f97\u591a\u3002\n\u5373\u4f7f\u662f\u6700\u590d\u6742\u3001\u6700\u590d\u6742\u7684\u4e1c\u897f\u4e5f\u662f\u7531\u4e00\u5c0f\u90e8\u5206\u53ef\u7ec4\u5408\u7684\u6a21\u5f0f\u5b9a\u4e49\u7684\u3002\u57ce\u5e02\u662f\u7531\u4ea4\u901a\u6765\u5b9a\u4e49\u7684\uff0c\u623f\u4ea7\u4ef7\u503c\u662f\u7531\u5b66\u533a\u6765\u5b9a\u4e49\u7684\uff0c\u57ce\u9547\u662f\u7531\u4e3b\u8981\u8857\u9053\u6765\u5b9a\u4e49\u7684\u3002\u5927\u57ce\u5e02\u7684\u5de8\u5927\u590d\u6742\u6027\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u89c4\u5219\u6765\u9884\u6d4b\uff0c\u8fd9\u4e9b\u89c4\u5219\u53ef\u4ee5\u4ea7\u751f\u65e0\u9650\u79cd\u7c7b\u7684\u53ef\u8bc6\u522b\u57ce\u5e02\u3002\n\u5728\u6280\u672f\u53d8\u9769\u5bfc\u81f4\u8010\u4e45\u6027\u964d\u4f4e\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4e0d\u592a\u6e05\u695a\u53ef\u7ec4\u5408\u6027\u8fd9\u4e2a\u6982\u5ff5\u662f\u5426\u91cd\u8981\u3002\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4ea7\u751f\u6211\u4eec\u7684\u4e16\u754c\u7684\u57fa\u672c\u89c4\u5219\uff0c\u4f46\u8fa8\u522b\u5b83\u4eec\u9700\u8981\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u800c\u4e14\u89c4\u5219\u672c\u8eab\u6b63\u5728\u8fc5\u901f\u6f14\u53d8\u3002\u66f4\u5177\u6311\u6218\u6027\u7684\u662f\uff0c\u76ee\u524d\u7684\u73b0\u72b6\u4e0d\u662f\u5f53\u524d\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u800c\u662f\u4e00\u5806\u6b63\u5728\u8fc5\u901f\u53d8\u5316\u7684\u89c4\u5219\u3002\n\u8ba9\u6211\u53cd\u611f\u7684\u662f\u8fd9\u672c\u4e66\u5f3a\u8c03\u8d28\u91cf\u662f\u4e00\u79cd\u9700\u8981\u79d8\u5bc6\u77e5\u8bc6\u624d\u80fd\u7406\u89e3\u7684\u795e\u79d8\u7279\u5f81\u3002\u5f53\u63d0\u5230\u6ca1\u6709\u540d\u5b57\u7684\u54c1\u8d28\u65f6\uff0c\u6211\u60f3\u77e5\u9053\u6211\u662f\u4e0d\u662f\u4e0d\u5c0f\u5fc3\u8f6c\u800c\u8bfb\u4e86\u201c\u9053\u5fb7\u7ecf\u201d\u3002\n\u8fd9\u79cd\u5bf9\u795e\u79d8\u667a\u6167\u7684\u5438\u5f15\u529b\u5728\u5e74\u8f7b\u7684\u6211\u8eab\u4e0a\u5f15\u8d77\u4e86\u5f88\u5927\u7684\u5171\u9e23\uff0c\u6211\u613f\u610f\u5c06\u81ea\u5df1\u5f52\u7c7b\u4e3a\u62e5\u6709\u795e\u79d8\u667a\u6167\u7684\u4eba\uff0c\u8fd9\u8ba9\u6211\u5f88\u6709\u529b\u91cf\uff0c\u4f46\u6211\u5bf9\u8fd9\u7c7b\u4e8b\u60c5\u53d8\u5f97\u8d8a\u6765\u8d8a\u8c28\u614e\u4e86\u3002\u6700\u8fd1\uff0c\u6211\u5c06\u8fd9\u79cd\u6a21\u5f0f\u89c6\u4e3a\u4e00\u79cd\u7279\u522b\u6709\u5bb3\u7684\u884c\u4e1a\u628a\u5173\u65b9\u5f0f\uff1a\u9009\u62e9\u50b2\u6162\u800c\u4e0d\u662f\u610f\u8bc6\uff0c\u9009\u62e9\u81ea\u4fe1\u800c\u4e0d\u662f\u80fd\u529b\u3002\n\u6211\u8ba4\u4e3a\uff0c\u4f5c\u4e3a\u4ece\u4e1a\u8005\uff0c\u6211\u4eec\u6709\u4e49\u52a1\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u8fdb\u5165\u6211\u4eec\u7684\u9886\u57df\uff0c\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u80fd\u591f\u8fdb\u5165\u6211\u4eec\u7684\u9886\u57df\uff0c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u9886\u57df\u7f29\u5c0f\u5230\u4e00\u4e2a\u8d2b\u7a77\u7684\u9886\u57df\uff0c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u9886\u57df\u7f29\u5c0f\u5230\u90a3\u4e9b\u6709\u8db3\u591f\u7684\u81ea\u6211\u548c\u8d44\u6e90\u6765\u81ea\u6211\u63d0\u540d\u7684\u4eba\uff0c\u4ee5\u62b5\u5fa1\u666e\u904d\u5b58\u5728\u7684\u9009\u62e9\u9000\u51fa\u81ea\u6211\u6000\u7591\u7684\u538b\u529b\uff0c\u6211\u4eec\u5c31\u4f1a\u8bc5\u5492\u81ea\u5df1\u8fdb\u5165\u4e00\u4e2a\u8d2b\u7a77\u7684\u9886\u57df\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u8fd9\u672c\u4e66\u7684\u4e3b\u8981\u5931\u8d25\uff0c\u6211\u5e0c\u671b\u6211\u80fd\u907f\u514d\u91cd\u8e48\u8986\u8f99\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u975e\u5e38\u9ad8\u5174\u6211\u8bfb\u4e86\u201c\u6c38\u6052\u7684\u6784\u5efa\u65b9\u5f0f\u201d\uff0c\u8fd9\u672c\u4e66\u5c06\u5851\u9020\u6211\u672a\u6765\u7684\u601d\u7ef4\uff0c\u4f46\u4ecd\u7136\u5f88\u5bb9\u6613\u88ab\u201c\u8f6f\u4ef6\u8bbe\u8ba1\u54f2\u5b66\u201d\u53d6\u4ee3\uff0c\u6210\u4e3a\u6211\u4eca\u5e74\u8bfb\u8fc7\u7684\u6700\u6709\u8da3(\u548c\u76f8\u5f53\u53ef\u8bfb\u6027)\u7684\u4e66\u3002", "note_en": "Some months ago, a friend recommended Christopher Alexander&#39;s  A Pattern Language. I hadn&#39;t heard of it before, and as I started poking around I realized that this was the second of a series of three books, and recommendations generally pointed me to start instead with  The Timeless Way of Building.\n Delving a bit further into the context surrounding these books, I was surprised to learn that in addition to being an influential work on architecture, the genesis of the software design patterns community was from Alexander&#39;s works as well.\n Stylistically the book ventured a bit too far into mysticism and gnostic wisdom for my taste\u2014almost reminiscent of reading the Tao Te Ching at times\u2014but it was an interesting read, particularly in its context as a foundational text.\n What I took away from my read is a renewed focus on incorporating folks&#39; needs andhabits more tightly to what we create to enable them, and a reminder that the tools we build shape folks lives in real, profound ways.\n  Building and towns are defined best not by the materials they are constructed from, or the building codes that regulate them, but rather by the events that occur within. This is further developed into the idea of spaces which are either alive or dead. Living spaces fit naturally with their defining events and dead spaces force events unnaturally.\n A living space might be a courtyard between the street and the front door, a space that you would cross naturally many times over a given day, making it feel lived in and familiar: a space you incorporate into living. A dead space might be a gorgeous dead end, a room or area you occasionally remember you have, but only visit after manufacturing a reason: a space that naturally decays into disuse.\n Reading this idea, what resonated with me most is that living spaces are typically defined by events that actually happen, and dead spaces are designed for events that folks hope or fear may take place, but rarely do. In the later category, it reminded me of how the ever present threat of gun violence in the United States has increasingly deadened our churches and our schools, with fear gradually coercing them into fortresses. A similar fear after the September 11th attacks rendered our airports dead. Can spaces be livable in an atmosphere of fear?\n There is no equivalency between elementary school students practicing live shooter drills and brittle software development design, but there too I find that fear-driven prevention of rarely occurring events often leads to platforms, libraries and tools that are more focused on limiting their users than enabling them. We&#39;ll get to living software through thoughtful interface design and approaches like  layering policy to avoid hard coding constraints.\n  So many patterns have shifted in my short life: the reduced role of &#34;land line&#34; telephones, tourism in foreign countries occurring through internet enabled navigation instead of signage or printed books, the reduced role of churches as a central community, electric heating over fire places, air conditioning coaxing folks off the front porch. (This reminding me a bit of  Bowling Alone.)\n If buildings are defined by the events that happen within, how do we account for the rapidly changing patterns created by the evolution of technology? Are buildings sort-of doomed to rapidly become dead as our habits shift?\n I didn&#39;t quite understand the book&#39;s response to this issue, or even if it really addressed the transience of defining patterns. For many things, folks will organically fix them if the mismatch is small enough, so generally living buildings will self-correct minor things.\n  More generally, I&#39;ve been thinking about this theme of known unknowns, with the rate of change for doing business online internationally accelerating rather than slowing over time. GDPR requirements are one good example from earlier this year, but there are many other data locality regulations being considered across the globe&#39;s countries. This acceleration will increasingly mean that companies that want to work internationally, or honestly even nationally, will have to design for evolutionary architectures and policies that can adapt as the regulations shifts around them every six to twelve months in unpredictable ways.\n The good news is that software architecture is much more changeable than physical architecture, but the bad news is that generally we&#39;re not terribly good at it, and the rate of change is much, much higher.\n  Even the most complicated, sophisticated things are defined by a small number of composable patterns. Cities are defined by transit, property values by school districts, and towns by main streets. The immense complexity of large cities can be predicted by these rules, and these rules can generate an infinite variety of recognizable cities.\n In the context of reduced durability due to technological change, it&#39;s less clear to me whether this concept of composability matters. Yes, we can define the fundamental rules that generate our worlds, but discerning them requires careful observation and the rules themselves are evolving rapidly. More challenging still, the current status quo is not the result of the current rules, but a shifting morass of rules that are rapidly changing underneath.\n   Something that turned me off was this book&#39;s emphasis on quality being a mystical characteristic that requires secret knowledge to understand. As the references to &#34;the quality without a name&#34; built, I wondered if I had accidentally switched to reading the Tao Te Ching.\n This kind of appeal to mystic wisdom resonated a great deal to a younger me, where my willingness to self-categorize as someone who &#34;got it&#34; was empowering, but I&#39;ve grown warier of such things. Lately, I look at this pattern as industry gatekeeping of a particularly damaging sort: selecting for arrogance over awareness, and for confidence over competence.\n I think that we, as practitioners, have an obligation to make entry into our fields accessible and attainable to as many folks as possible, and that we curse ourselves to an impoverished and impoverishing field if we narrow it to folks with enough ego and resources to self-nominate against a pervasive pressure to opt-out in self-doubt. This is, in my opinion, the book&#39;s chief failure, and one I hope I can avoid repeating.\n  Altogether, quite glad that I read The Timeless Way Of Building, and it&#39;s a book that will shape my thinking going forward, but still easily displaced by  A Philosophy of Software Design as the most interesting (and quite readable) book I read this year.", "posttime": "2020-06-17 00:34:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5efa\u7b51,\u65b9\u5f0f,timeless,\u4eba\u4eec", "title": "\u201c\u6c38\u6052\u7684\u5efa\u7b51\u65b9\u5f0f\u201d\u672d\u8bb0(2018)", "title_en": "Notes on The Timeless Way of Building (2018)", "transed": 1, "url": "https://lethain.com/timeless-way-of-building/", "via": "", "real_tags": ["\u5efa\u7b51", "\u65b9\u5f0f", "timeless", "\u4eba\u4eec"]}, {"category": "", "categoryclass": "", "imagename": "354e4c8360d52dad1ac1de12623e9efc.jpg", "infoid": 1006825, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e16\u7eaa\u521d\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u4e00\u79cd\u8840\u7ea2\u8272\u3001\u575a\u786c\u7684\u3001\u5e26\u6709\u4e30\u5bcc\u6cb9\u6027\u7ec6\u83cc\u7684\u7389\u7c73\u4ece\u963f\u5df4\u62c9\u5951\u4e9a\u6765\u5230\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u67e5\u5c14\u65af\u987f\u7fa4\u5c9b\u3002\u8fd9\u79cd\u7389\u7c73\u662f\u5f53\u5730\u519c\u6c11\u548c\u8d70\u79c1\u8d29\u5b50\u79cd\u690d\u51fa\u6765\u7684\uff0c\u4ed6\u4eec\u53d1\u73b0\u5b83\u53ef\u4ee5\u917f\u9020\u58ee\u89c2\u7684\u70c8\u6027\u9152\u6216\u6708\u5149\u5a01\u58eb\u5fcc\u3002\n\u4f20\u5bb6\u5b9d\u79cd\u5b50\u4f9b\u5e94\u5546\u5b89\u68ee\u00b7\u7c73\u5c14\u65af(Anson Mills)\u7684\u521b\u59cb\u4eba\u683c\u4f26\u00b7\u7f57\u4f2f\u8328(Glenn Roberts)\u56de\u5fc6\u9053\uff0c\u572820\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u4f60\u66fe\u7ecf\u53ef\u4ee5\u53bb\u8a79\u59c6\u65af\u5c9b(James Island)\u3002\u800c\u4e14\uff0c\u5982\u679c\u4f60\u8ba4\u8bc6\u5408\u9002\u7684\u4eba\uff0c\u4ed6\u4eec\u4f1a\u628a\u4ed6\u4eec\u540e\u95e8\u53a8\u623f\u91cc\u7684\u7f8e\u5473\u98df\u7269\u5356\u7ed9\u4f60\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u4e00\u7f50\u5409\u7c73\u7ea2\u9152\u3002\u4f46\u662f\uff0c\u867d\u7136\u6211\u77e5\u9053\u70c8\u9152\uff0c\u4f46\u6211\u4ece\u6765\u4e0d\u77e5\u9053\u7389\u7c73\u3002\n\u6ca1\u6709\u4eba\u771f\u6b63\u4e86\u89e3\u7389\u7c73-\u76f4\u523021\u4e16\u7eaa\u521d\uff0c\u6700\u540e\u4e00\u4e2a\u5df2\u77e5\u7684\u79cd\u690d\u7389\u7c73\u7684\u8d70\u79c1\u8d29\u5b50\u53bb\u4e16\u4e86\uff0c\u7389\u7c73\u51e0\u4e4e\u548c\u4ed6\u4e00\u8d77\u6b7b\u53bb\u3002\u4ece\u4ed6\u7684\u5730\u91cc\u6551\u51fa\u4e86\u4e24\u53ea\u8033\u6735\uff0c\u9001\u7ed9\u4e86\u5f53\u5730\u8457\u540d\u7684\u519c\u6c11\u517c\u79cd\u5b50\u4fdd\u62a4\u8005\u6cf0\u5fb7\u00b7\u4e18\u5b81\uff0c\u5e76\u5efa\u8bae\u4ed6\u628a\u5b83\u79cd\u51fa\u6765\u7ed9\u4ed6\u7684\u732a\u3002\n\u4e18\u5b81\u559c\u6b22\u4fdd\u5b58\u79cd\u5b50-\u4ed6\u590d\u6d3b\u4e86\u51e0\u4e4e\u706d\u7edd\u7684\u7389\u7c73\u3001\u8c46\u7c7b\u3001\u4f20\u5bb6\u5b9d\u841d\u535c\u3001\u897f\u74dc\u548c\u5927\u7530\u8c4c\u8c46\u3002\u4ed6\u4e5f\u62ef\u6551\u4e86\u5409\u7c73\u00b7\u745e\u5fb7\uff0c\u6bcf\u5e74\u79cd\u690d\u5b83\uff0c\u4fdd\u5b58\u7c7d\u7c92\uff0c\u589e\u52a0\u79cd\u5b50\u50a8\u5907\u3002\u4ed6\u4e0d\u77e5\u9053\uff0c\u5f88\u5feb\u5b83\u5c31\u4f1a\u4f5c\u4e3a\u4e00\u79cd\u73cd\u8d35\u7684\u4f20\u5bb6\u5b9d\u54c1\u79cd\u7a81\u7136\u51fa\u73b0\u5728\u9910\u5385\u573a\u666f\u4e2d\uff0c\u8fd9\u79cd\u54c1\u79cd\u53ef\u4ee5\u5236\u4f5c\u51fa\u4ee4\u4eba\u96be\u5fd8\u7684\u7ea2\u8272\u6591\u70b9\u7c97\u7cae\u548c\u5e26\u6709\u8702\u871c\u575a\u679c\u5473\u9053\u7684\u6d53\u90c1\u3001\u67d4\u6ed1\u7684\u5a01\u58eb\u5fcc\u3002\n\u67e5\u5c14\u65af\u987f\u5386\u53f2\u60a0\u4e45\u7684\u6cd5\u56fd\u533a\u6587\u675c\u9152\u5e97\u5ba2\u5385\u7684\u53a8\u5e08\u957f\u798f\u96f7\u65af\u7279\u00b7\u5e15\u514b(Forrest Parker)\u8bf4\uff0c\u8fd9\u4e00\u5b9a\u662f\u4e00\u767e\u5e74\u524d\u7c97\u9ea6\u9762\u5305\u7684\u5473\u9053\u3002\n\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u67e5\u5c14\u65af\u987fHigh Wire Distilling\u7684\u8054\u5408\u521b\u59cb\u4eba\u65af\u79d1\u7279\u00b7\u5e03\u83b1\u514b\u97e6\u5c14(Scott Blackwell)\u8bf4\uff0c\u5b83\u7684\u8868\u73b0\u4e0e\u6211\u84b8\u998f\u8fc7\u7684\u4efb\u4f55\u5176\u4ed6\u7389\u7c73\u90fd\u4e0d\u540c\uff0c\u90a3\u5c31\u662f\u84b8\u998f\u51fa\u7684\u674f\u4ec1\u5e72\u916a\u548c\u6de1\u6a31\u6843\u7684\u5473\u9053\u4e0a\u7684\u6cb9\u73e0--\u800c\u4e0d\u662f\u7389\u7c73\u3002\nChewning\u628a\u79cd\u5b50\u7ed9\u4e86\u6709\u673a\u79cd\u690d\u8005\u548c\u519c\u6c11\uff0c\u751a\u81f3\u7ed9\u4e86\u98df\u54c1\u5386\u53f2\u5b66\u5bb6\u5927\u536b\u00b7\u5e0c\u5c14\u5179(David Shields)\uff0c\u4ed6\u662f\u201c\u7cbe\u81f4\u9910\u996e\u7b2c\u4e00\u65f6\u4ee3\u7684\u751f\u6d3b\u548c\u804c\u4e1a\u201d(The culinators\uff1aLives and Careers from the First Age of Fine Dining)\u4e00\u4e66\u7684\u4f5c\u8005\uff0c\u4ed6\u628a\u79cd\u5b50\u767b\u4e0a\u4e86\u6162\u98df\u54c1\u5c1d\u65b9\u821f(Slow Food Ark Of Taste)\uff0c\u8fd9\u662f\u4e00\u4efd\u6fd2\u5371\u4f20\u7edf\u98df\u54c1\u7684\u76ee\u5f55\u3002\n\u4ed6\u628a\u5b83\u7ed9\u4e86\u53a8\u5e08\u8096\u6069\u00b7\u5e03\u7f57\u514b(Sean Brock)\uff0c\u540e\u8005\u81ea\u5df1\u79cd\u690d\u4e86\u5b83\uff0c\u5e76\u5f00\u59cb\u5728\u4ed6\u8457\u540d\u7684\u67e5\u5c14\u65af\u987f\u9910\u5385McCradys\u548cHusk\u4f9b\u5e94\u5409\u7c73\u7ea2\u8272\u7c97\u7c89\u3001\u7389\u7c73\u9762\u5305\u548c\u714e\u997c\u3002\u5e03\u7f57\u514b\u975e\u5e38\u559c\u6b22\u8fd9\u79cd\u53ef\u53e3\u7684\u7389\u7c73\uff0c\u4ed6\u628a\u5b83\u7eb9\u8eab\u5728\u624b\u81c2\u4e0a\u3002\n\u50cf\u67e5\u5c14\u65af\u987f\u7684\u65e0\u82b1\u679c(\u5176\u884c\u653f\u4e3b\u53a8\u6770\u68ee\u00b7\u65af\u5766\u970d\u666e\u662f\u8a79\u59c6\u65af\u00b7\u6bd4\u5c14\u5fb7\u5956\u83b7\u5f97\u8005)\u8fd9\u6837\u7684\u573a\u6240\uff0c\u7b2c\u4e00\u6b21\u628a\u7c97\u7cae\u653e\u5728\u4e86\u83dc\u5355\u4e0a\u3002\u5409\u7c73\u7ea2\u8272\u7c97\u7cae\u662f\u7531\u4f11\u65af\u6566Coltivare\u7684\u4e3b\u53a8\u745e\u5b89\u00b7\u4f69\u62c9\u79cd\u690d\u5e76\u63d0\u4f9b\u7684\u3002\u5b83\u4eec\u4e5f\u51fa\u73b0\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u52a0\u6587\u00b7\u51ef\u68ee\u7684\u52fa\u5b50\u548c\u9a6c\u53a9\u7684\u83dc\u5355\u4e0a\u3002\u5b83\u4eec\u7531\u57c3\u8fea\u65af\u591a\u5c9bGeechie Boy Mill\u7684\u683c\u96f7\u683c\u00b7\u7ea6\u7ff0\u65af\u66fc(Greg Johnsman)\u79cd\u690d\u3001\u78be\u78e8\uff0c\u751a\u81f3\u5728\u7f51\u4e0a\u51fa\u552e\u3002\n\u5e15\u514b\u5927\u53a8\u8bf4\uff0c\u5f53\u4f60\u6253\u5f00\u888b\u5b50\u5012\u9152\u65f6\uff0c\u8fd9\u80a1\u7f8e\u5999\u7684\u575a\u679c\u9999\u5473\u98d8\u4e86\u51fa\u6765\u3002\u665a\u9910\u65f6\uff0c\u8fd9\u5bf9\u7c97\u9ea6\u7c89\u4e0e\u68d5\u8272\u9ec4\u6cb9\u9171\u642d\u914d\u771f\u7684\u5f88\u68d2\u3002\n\u5982\u679c\u79d1\u6069\u6709\u4e2a\u6027\uff0c\u5409\u7c73\u00b7\u745e\u5fb7\u53ef\u80fd\u4f1a\u88ab\u5f62\u5bb9\u4e3a\u8981\u6c42\u82db\u523b\uff0c\u4f46\u51fa\u4eba\u610f\u6599\u7684\u6177\u6168\u3002\n\u50cf\u8bb8\u591a\u4f20\u7edf\u7389\u7c73\u4e00\u6837\uff0c\u5b83\u662f\u4e00\u79cd\u5f00\u653e\u6388\u7c89\u8005-\u690d\u7269\u7248\u7684\u6df7\u4ea4\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u4ece\u5176\u4ed6\u7389\u7c73\u5439\u6765\u7684\u82b1\u7c89\u6388\u7c89\u3002Anson Mills\u7684\u683c\u4f26\u00b7\u7f57\u4f2f\u8328(Glenn Roberts)\u8bf4\uff0c\u4e3a\u4e86\u786e\u4fdd\u7eaf\u5ea6\uff0c\u7389\u7c73\u9700\u8981\u624b\u5de5\u6388\u7c89\u3002\u4ed6\u73b0\u5728\u5411\u53a8\u5e08\u51fa\u552e\u5409\u7c73\u7ea2\u7c89\uff0c\u5e76\u5728\u4e09\u4e2a\u4e0d\u540c\u7684\u5730\u7406\u533a\u57df\u79cd\u690d\u7389\u7c73\uff0c\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u53d1\u751f\u81ea\u7136\u707e\u5bb3\u3002\u6d82\u8721\u7684\u888b\u5b50\u88ab\u653e\u5728\u690d\u7269\u7684\u6d41\u82cf(\u96c4\u82b1)\u548c\u4e1d\u7ef8(\u96cc\u82b1\u7684\u4e00\u90e8\u5206)\u4e0a\u3002\u82b1\u7c89\u805a\u96c6\u5728\u888b\u5b50\u91cc\uff0c\u540e\u6765\u88ab\u6536\u96c6\u8d77\u6765\uff0c\u5e76\u7528\u624b\u5c06\u5176\u6492\u5728\u4e1d\u7ef8\u4e0a\u3002\n\u50cf\u6240\u6709\u7684\u7530\u95f4\u7389\u7c73\u4e00\u6837\uff0c\u6210\u719f\u540e\u5fc5\u987b\u6536\u83b7\uff0c\u9664\u975e\u7ecf\u8fc7\u52a0\u5de5\uff0c\u5426\u5219\u4e0d\u80fd\u98df\u7528\u3002(\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u751c\u7389\u7c73\u662f\u5728\u4e73\u719f\u671f\u91c7\u6458\u7684\uff0c\u53ef\u4ee5\u751f\u5403\uff0c\u4e5f\u53ef\u4ee5\u716e\u719f\u3002)\u3002\u4f46\u7389\u7c73\u6700\u660e\u663e\u7684\u7279\u5f81\u662f\u5b83\u5f02\u5e38\u5927\u7684\u80da\u82bd--\u7c7d\u7c92\u7684\u67d4\u8f6f\u4e2d\u5fc3\uff0c\u4e5f\u5c31\u662f\u5473\u9053\u6240\u5728\u7684\u5730\u65b9\u3002\u5b83\u662f\u5982\u6b64\u4e4b\u5927\uff0c\u4ee5\u81f3\u4e8e\u5f53\u7814\u78e8\u65f6\uff0c\u78e8\u7c92\u4f1a\u5e26\u8d70\u5927\u90e8\u5206\u5473\u9053\u6d53\u90c1\u7684\u7ec6\u83cc\u6591\u70b9\u3002\u5f53\u88ab\u84b8\u998f\u65f6\uff0c\u8fd9\u79cd\u7ec6\u83cc\u4f1a\u91ca\u653e\u51fa\u5e03\u83b1\u514b\u97e6\u5c14\u60ca\u53f9\u7684\u82b3\u9999\u6cb9\u3002\n\u5b83\u9c9c\u8273\u7684\u7ea2\u8272\u8033\u6735\u91cc\u8fd8\u643a\u5e26\u7740\u4e00\u6bb5\u770b\u4e0d\u89c1\u7684\u5f02\u82b1\u6388\u7c89\u548c\u6742\u4ea4\u5386\u53f2\u3002\u7f57\u4f2f\u8328\u89e3\u91ca\u8bf4\uff0c\u5982\u679c\u4f60\u628a\u5b83\u79cd\u5728\u8db3\u591f\u5927\u7684\u5730\u91cc\uff0c\u5b83\u5c31\u4f1a\u5f00\u59cb\u4ea7\u751f\u65b0\u7684\u54c1\u79cd\u3002\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u4e94\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u65b0\u54c1\u79cd\uff0c\u5e76\u4fdd\u7559\u4e86\u4e24\u4e2a\u3002\n\u7f57\u4f2f\u8328\u89c1\u8fc7\u5e26\u6709\u6a59\u8272\u6216\u767d\u8272\u80da\u4e73\u7684\u8033\u6735\uff0c\u4e5f\u5c31\u662f\u84dd\u8272\u6216\u767d\u8272\u7684\u7c7d\u7c92\u3002\u4ed6\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u7389\u7c73\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u4e0e\u88c5\u9970\u6027\u7684\u7f8e\u56fd\u539f\u4f4f\u6c11\u611f\u6069\u8282\u7389\u7c73\u6742\u4ea4\u7684\u3002\n\u7f8e\u5473\u7684\u7ec6\u83cc\u4e3a\u70f9\u996a\u63d0\u4f9b\u4e86\u65e0\u7a77\u65e0\u5c3d\u7684\u521b\u610f\u3002\u7f57\u4f2f\u8328\u8bf4\uff0c\u5982\u679c\u4f60\u60f3\u8981\u7c89\u7ea2\u8272\u7684\u7c97\u7cae\uff0c\u5c31\u7528\u50cfOgeechee\u9178\u6a59\u6c41\u8fd9\u6837\u7684\u9178\u6765\u716e\u3002\u5982\u679c\u4f60\u60f3\u8981\u7d2b\u8272\u751a\u81f3\u9ed1\u8272\u7684\u7c97\u7c89\uff0c\u53ef\u4ee5\u653e\u4e00\u4e9b\u5c0f\u82cf\u6253\u4f7f\u5176\u5448\u78b1\u6027\u3002\n\u5982\u679c\u8bf4\u7c97\u7cae\u662f\u6545\u4e8b\u7684\u4e00\u90e8\u5206\uff0c\u90a3\u4e48\u5a01\u58eb\u5fcc\u5c31\u662f\u53e6\u4e00\u90e8\u5206-\u4e5f\u8bb8\u8fd9\u662f\u4e00\u4e2a\u53e4\u8001\u7684\u70c8\u6027\u9152\u7389\u7c73\u7684\u6700\u7ec8\u547d\u8fd0\u3002\u65af\u79d1\u7279\u00b7\u5e03\u83b1\u514b\u97e6\u5c14\u8bf4\uff0c\u81ea\u4ece2014\u5e74\u7f57\u4f2f\u8328\u628a50\u79cd\u4e0d\u540c\u7684\u4f20\u5bb6\u5b9d\u7389\u7c73\u6446\u5728\u684c\u5b50\u4e0a\u4f9b\u4ed6\u770b\u4ee5\u6765\uff0c\u6211\u591a\u5e74\u6765\u4e00\u76f4\u5728\u8003\u8651\u8fd9\u79cd\u7389\u7c73\u3002\n\u514b\u83b1\u59c6\u68ee\u5927\u5b66(Clemson University)\u7814\u7a76\u79d1\u5b66\u5bb6\u5e03\u83b1\u6069\u00b7\u6c83\u5fb7(Brian Ward)\u5f53\u5e74\u79cd\u690d\u4e862.5\u82f1\u4ea9\u571f\u5730\uff0c\u4ed6\u4e13\u95e8\u5c06\u53e4\u8001\u7684\u79cd\u5b50\u7ebf\u4ece\u6fd2\u4e34\u706d\u7edd\u7684\u72b6\u6001\u4e2d\u6062\u590d\u8fc7\u6765\u3002\n\u7f57\u4f2f\u8328\u628a\u6536\u83b7\u7684\u5e84\u7a3c\u5e26\u5230\u4ed6\u7684\u79cd\u5b50\u623f\uff0c\u6e05\u6d17\u548c\u78be\u78e8\uff0c\u7136\u540e\u628a\u5b83\u9001\u56de\u9ad8\u7ebf\u84b8\u998f\u516c\u53f8(High Wire Distilling)\u3002\u5e03\u83b1\u514b\u97e6\u5c14\u8bf4\uff1a\u6211\u9a6c\u4e0a\u5c31\u80fd\u770b\u51fa\u6765\u975e\u5e38\u4e0d\u540c\u3002\u8d85\u51e1\u8131\u4fd7\u7684\u8d28\u611f\u3002\u8d85\u7ea7\u751c\u871c\u3002\u50cf\u9999\u8549\u4e00\u6837\u677e\u5f1b\u7684\u592a\u5983\u7cd6\u3002\u4ed6\u7cbe\u5fc3\u917f\u9020\u4e86\u4e24\u6876100%\u7684\u7389\u7c73\u6ce2\u65c1\u5a01\u58eb\u5fcc(\u5b58\u653e\u5728\u539f\u59cb\u70e7\u7126\u7684\u6876\u4e2d)\u3002\u5a01\u58eb\u5fcc\u4e0d\u9700\u8981\u5c0f\u9ea6\u6216\u9ed1\u9ea6\u6765\u8c03\u5473\u3002\u5409\u7c73\u00b7\u745e\u5fb7\u672c\u8eab\u5c31\u6709\u8db3\u591f\u7684\u5473\u9053\u3002\n\u6839\u636e\u5e03\u83b1\u514b\u97e6\u5c14\u7684\u59bb\u5b50\u517c\u5546\u4e1a\u4f19\u4f34\u5b89\u00b7\u9a6c\u6b47\u5c14(Ann Marshall)\u7684\u8bf4\u6cd5\uff0c\u8fd9\u5bb6\u917f\u9152\u5382\u7528\u8fd9\u4e24\u4e2a\u6876\u7cbe\u5fc3\u917f\u9020\u4e86570\u74f6\u6ce2\u65c1\u5a01\u58eb\u5fcc\uff0c\u572811\u5206\u949f\u5185\u5c31\u9500\u552e\u4e00\u7a7a\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u5269\u4e0b1/3\u7684\u54c1\u5c1d\u74f6\u5e26\u56de\u5bb6\u7ed9\u81ea\u5df1\u3002\n2015\u5e74\uff0c\u5e03\u83b1\u514b\u97e6\u5c14\u79cd\u690d\u4e8614\u82f1\u4ea9\u7684\u5409\u7c73\u00b7\u7ea2\u8272(Jimmy Red)\u30022016\u5e74\uff0c\u4ed6\u79cd\u690d\u4e8665\u82f1\u4ea9\uff0c2017\u5e74\uff0c\u4ed6\u4e30\u539a\u5730\u79cd\u690d\u4e8685\u82f1\u4ea9\u30022015\u5e74\u5ea6\u7684\u6ce2\u65c1\u5a01\u58eb\u5fcc\u73b0\u5df2\u51fa\u7089\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5b58\u653e\u4e86\u4e24\u5e74\u3002\u5e03\u83b1\u514b\u97e6\u5c14\u5df2\u7ecf\u5728\u4e0d\u540c\u7684\u519c\u573a\u8fdb\u884c\u4e86\u8bd5\u9a8c\uff0c\u5e76\u6839\u636e\u74f6\u5b50\u751f\u957f\u7684\u519c\u573a\u7ed9\u74f6\u5b50\u8d34\u4e0a\u6807\u7b7e\u3002\n\u5e03\u83b1\u514b\u97e6\u5c14\u8bf4\uff0c\u519c\u573a\u7684\u571f\u58e4\u5b8c\u5168\u6539\u53d8\u4e86\u53e3\u5473\uff0c10\u6708\u4e0b\u65ec\u7684\u4e00\u4e2a\u661f\u671f\u516d\uff0c\u4ed6\u4e0e\u8fd9\u4f4d\u4f5c\u5bb6\u5206\u4eab\u4e86\u65b0\u9c9c\u7684\u3001\u672a\u9648\u5e74\u7684\u6ce2\u65c1\u5a01\u58eb\u5fcc\uff0c\u8fd9\u5c31\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u6765\u81ea\u62c9\u6587\u987f(Lavington)\u519c\u573a(\u6ce5\u70ad\u9ed1\u571f)\u7684\u5a01\u58eb\u5fcc\u6709\u751c\u871c\u7684\u82b1\u9999\uff0c\u800c\u6765\u81ea\u76ae\u8fea\u6cb3\u6d41\u57df(\u6c99\u8d28\u58e4\u571f)\u7684\u5a01\u58eb\u5fcc\u5c1d\u8d77\u6765\u50cf\u6ce5\u571f\u822c\u7684\u7eff\u9999\u8549\u548c\u5976\u6cb9\u7cd6\u679c\u3002\u9648\u5e74\u540e\uff0c\u8fd9\u4e9b\u72ec\u7279\u7684\u5473\u9053\u4f1a\u878d\u5165\u6ce2\u65c1\u5a01\u58eb\u5fcc\u7684\u70df\u718f\u5355\u5b81\u4e2d\u3002\n\u7f57\u4f2f\u8328\u8bf4\uff0c\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u793e\u533a\u6545\u4e8b\u3002\u6574\u4e2a\u5357\u65b9\u4eba\u793e\u533a\u62ef\u6551\u4e86\u8fd9\u9897\u7389\u7c73\u3002&#34\uff1b\u4ed6\u505c\u987f\u4e86\u4e00\u4e0b\uff0c\u53cd\u7701\u4e86\u4e00\u4e0b\u3002\u6211\u5973\u513f\u7684\u7b2c\u4e00\u4e2a\u7389\u7c73\u5a03\u5a03--18\u5e74\u524d\u59798\u5c81\u65f6\u505a\u7684--\u662f\u7528\u5409\u7c73\u00b7\u745e\u5fb7\u5236\u4f5c\u7684\u3002\u5979\u7528\u5e26\u58f3\u7684\u8033\u6735\u505a\u5a03\u5a03\uff0c\u7528\u5916\u58f3\u548c\u4e1d\u7ef8\u505a\u8863\u670d\u548c\u5934\u53d1\uff0c\u7528\u4e00\u4e2a\u7ea2\u8272\u7684\u679c\u4ec1\u505a\u5fc3\u810f\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u50cf\u5409\u7c73\u00b7\u7ea2\u8272(Jimmy Red)\u8fd9\u6837\u7684\u4f20\u5bb6\u5b9d\u54c1\u79cd\u662f\u5357\u65b9\u4f20\u7edf\u98df\u54c1\u590d\u5174\u7684\u6838\u5fc3\uff0c\u5c06\u79cd\u5b50\u548c\u98df\u8c31\u5e26\u56de\u56fd\u5185-\u5c06\u5473\u9053\u548c\u5386\u53f2\u7f16\u7ec7\u5728\u4e00\u8d77\uff0c\u7f16\u7ec7\u6210\u9910\u996e\uff0c\u8ba9\u4eba\u54c1\u5c1d\u548c\u8bb0\u4f4f\u3002\n\u5409\u5c14\u00b7\u5185\u9a6c\u514b(Jill Neimark)\u662f\u4e9a\u7279\u5170\u5927\u7684\u4e00\u4f4d\u4f5c\u5bb6\uff0c\u4ed6\u7684\u4f5c\u54c1\u66fe\u5728\u201c\u53d1\u73b0\u201d(Discover)\u3001\u201c\u79d1\u5b66\u7f8e\u56fd\u4eba\u201d(Science American)\u3001\u201c\u79d1\u5b66\u201d(Science)\u3001\u201c\u9e66\u9e49\u87ba\u201d\u3001\u201c\u6c38\u65fa\u201d\u3001\u201c\u4eca\u65e5\u5fc3\u7406\u5b66\u201d\u548c\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u4e0a\u53d1\u8868\u3002", "note_en": "Sometime around the turn of the last century, a blood-red, flint-hard &#34;dent&#34; corn with a rich and oily germ made its way from Appalachia to the islands of Charleston, S.C. The corn was grown out by local farmers and bootleggers, who found that it made spectacular hooch, or moonshine whiskey.\n  &#34;In the 1980s, you used to be able to go to James Island,&#34; recalls Glenn Roberts, founder of heirloom seed purveyor  Anson Mills. &#34;And, if you knew the right people, they&#39;d sell you delicious food out their backdoor kitchen and you&#39;d get a jar of Jimmy Red hooch with it. But though I knew the hooch, I never knew the corn.&#34;\n     Nobody really knew the corn \u2013 not until the early 2000s, when the last known bootlegger growing the corn died, and the corn almost died with him. Two ears were rescued from his plot and gifted to celebrated local farmer and seed saver Ted Chewning, with the suggestion that he grow it out for his hogs.\n  Chewning loves to save seeds \u2014 he has revived nearly extinct corns, beans, heirloom radishes, watermelons and field peas. He rescued Jimmy Red as well, growing it and saving kernels each year, increasing the seed stock. Little did he know that soon it would burst on the restaurant scene as a prized heirloom cultivar that makes unforgettable red-flecked grits and a rich, smooth whiskey with honey-nut undertones.\n  &#34;This is what grits must have tasted like a hundred years ago,&#34; says Forrest Parker, chef de cuisine at  The Drawing Room, at the Vendue Hotel in Charleston&#39;s historic French Quarter.\n    &#34;It behaves like no other corn I&#39;ve distilled,&#34; says Scott Blackwell, co-founder of High Wire Distilling in Charleston, S.C. &#34;The pearls of oil on the distillate taste of marzipan and light cherry \u2014 not corn.&#34;\n    Chewning gave seeds to organic growers and farmers and even to food historian David Shields, author of  The Culinarians: Lives and Careers from the First Age of Fine Dining, who boarded it onto the  Slow Food Ark of Taste, a catalogue of endangered heritage foods.\n  He gave it to chef Sean Brock, who grew it himself and started serving Jimmy Red grits, cornbread and flapjacks at his storied Charleston restaurants,  McCradys and  Husk. Brock loved the flavorful corn so much he had it tattooed on his arm.\n    Venues like Charleston&#39;s Fig, whose executive chef, Jason Stanhope, is a James Beard award winner, put grits on their menu for the first time. Jimmy Red grits have been grown and served by Chef  Ryan Pera at Coltivare in Houston. They have also been on the menu at Gavin Kaysen&#39;s  Spoon and Stable in Minneapolis. They are grown, milled and even sold online by Greg Johnsman of  Geechie Boy Mill, of Edisto Island.\n  &#34;When you open the bag to decant them, this wonderful nutty aroma wafts out,&#34; says Chef Parker. &#34;The grits pair really well with brown butter sauces at dinner.&#34;\n  If corn had a personality, Jimmy Red might be described as demanding but inordinately generous.\n    Like many heritage corns, it is an open pollinator \u2014 the plant version of promiscuous, easily fertilized by pollens blown its way from other corns. To ensure purity,  the corn requires  hand pollinating, says Glenn Roberts of Anson Mills, who now sells Jimmy Red grits to chefs and also grows the corn in three different geographic regions to ensure that no natural disaster wipes it out. Wax-coated bags are placed over the plant&#39;s tassels (the male flowers) and silks (part of the female flowers).  The pollen accumulates in the bags, and is later collected and dusted by hand onto the silks.\n     Like all field corns, it must be harvested when mature and is inedible unless processed. (In contrast, sweet corn is picked at the milk stage and can be eaten raw or cooked.) But the most pronounced  feature of the corn is its unusually large germ \u2014 the soft center of the kernel, where the flavor resides. It&#39;s so large that when ground, the grits take most of the intensely flavorful flecks of the germ with them. And when distilled, that germ gives off the fragrant oil Blackwell marvels over.\n  It also carries within its brilliant red ears an invisible history of cross pollinating and cross-breeding. &#34;If you grow it out in large enough plots,&#34; explains Roberts, &#34;it will begin to throw off new varieties. I&#39;ve seen five new distinct varieties, and kept two.&#34;\n     Roberts has seen ears with an orange or white endosperm, kernels that are blue or white. He believes the corn was crossbred with decorative Native American thanksgiving corns at some point.\n  The flavorful germ offers endlessly creative outtakes on cooking. &#34;If you want your grits pink,&#34; says Roberts, &#34;cook it with an acid like Ogeechee lime juice. If you want purple or even black grits, put some baking soda in to render it alkaline.&#34;\n  If grits are one part of the story, whiskey is the other \u2014 and perhaps the ultimate fate for an old hooch corn. &#34;I&#39;ve been thinking about this corn for years,&#34; says Scott Blackwell \u2014 ever since 2014, when Roberts laid 50 different heirloom corns out on a table for him to view.\n        Clemson University research scientist  Brian Ward, who specializes in bringing old seed lines back from near extinction, grew 2.5 acres that year.\n    Roberts took the harvest up to his seed house, cleaned and milled it, and sent it back to High Wire Distilling. &#34;Right away I could tell it was very different,&#34; Blackwell says. &#34;Super earthy. Super sweet. Like banana laffy taffy.&#34; He crafted two barrels of 100 percent corn-based bourbon (aged in virgin charred barrels). The whiskey didn&#39;t need wheat or rye  for  flavor. Jimmy Red had enough flavor on its own.\n  From those two barrels, the distillery crafted 570 bottles of bourbon that, according to Ann Marshall, Blackwell&#39;s wife and business partner, sold out in 11 minutes. &#34;Luckily we had \u00be of a tasting bottle left that we took home for ourselves.&#34;\n  In 2015, Blackwell grew 14 acres of Jimmy Red. In 2016, he grew 65 acres, and in 2017, he grew a generous 85 acres. The bourbon from the 2015 crop is being released now, as it&#39;s aged for two years. Blackwell has experimented with different farms, and is labeling bottles by the farms they were grown on.\n  &#34;The soil of the farm totally changes the taste,&#34; says Blackwell \u2014 as proven when he shared fresh, unaged bourbon with this author on a Saturday in late October. The whiskey from a farm called Lavington (with peaty black soil) had sweet floral notes, while the same whiskey from the Pee Dee River valley (with sandy loamy soil) tasted like earthy green banana and butterscotch. After being aged, those distinctive flavors will merge into the smoky tannins of bourbon.\n  &#34;This is really a community story,&#34; says Roberts. &#34;This entire community of Southerners saved this corn.&#34; He pauses and reflects back. &#34;My daughter&#39;s first corn doll \u2014 made 18 years ago when she was 8 \u2014 was crafted from Jimmy Red. She used the shucked ear to make the doll, the husk and silk for the clothing and hair, and one red kernel for the heart.&#34;\n  Indeed, heirloom cultivars like Jimmy Red are the heart of a Southern renaissance in traditional foodways, the repatriation of seeds as well as recipes \u2014 weaving together flavor and history into meals and drinks to relish and remember.\n  Jill Neimark is an Atlanta-based writer whose work has been featured in Discover, Scientific American, Science, Nautilus, Aeon, Psychology Today  and The New York Times.", "posttime": "2020-06-17 00:33:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d70\u79c1,bootlegger,\u7389\u7c73", "title": "\u6fd2\u4e34\u706d\u7edd\u7684\u8d70\u79c1\u7389\u7c73\u83b7\u5f97\u7b2c\u4e8c\u6b21\u673a\u4f1a(2018\u5e74)", "title_en": "A Nearly Extinct Bootlegger's Corn Gets a Second Shot (2018)", "transed": 1, "url": "https://www.npr.org/sections/thesalt/2018/01/02/574367086/from-hooch-to-haute-cuisine-a-nearly-extinct-bootleggers-corn-gets-a-second-shot", "via": "", "real_tags": ["\u8d70\u79c1", "\u7389\u7c73"]}, {"category": "", "categoryclass": "", "imagename": "bd1049abe25878f41a305e44b84c63d8.jpg", "infoid": 1006824, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u7684\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u7684\u4e00\u9879\u65b0\u7814\u7a76\u8868\u660e\uff0c\u901a\u8fc7\u7a00\u91ca\u8001\u5e74\u5c0f\u9f20\u7684\u8840\u6d46\u6210\u5206\u53ef\u4ee5\u83b7\u5f97\u9006\u8f6c\u5e74\u9f84\u7684\u6548\u679c\u3002\u901a\u8fc7\u7528\u751f\u7406\u76d0\u6c34\u548c\u767d\u86cb\u767d\u7684\u6df7\u5408\u7269\u53d6\u4ee3\u4e00\u534a\u7684\u8840\u6d46\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5bf9\u5927\u8111\u3001\u809d\u810f\u548c\u808c\u8089\u7b49\u91cd\u8981\u5668\u5b98\u7684\u6062\u590d\u6709\u663e\u8457\u6548\u679c\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u6df7\u5408\u7269\u4e2d\u7684\u767d\u86cb\u767d\u53d6\u4ee3\u4e86\u53d6\u51fa\u539f\u59cb\u8840\u6d46\u65f6\u4e22\u5931\u7684\u86cb\u767d\u8d28\uff0c\u5176\u590d\u82cf\u6548\u679c\u4e0e\u914d\u5bf9\u5e7c\u9f20\u8840\u6db2\u4ea4\u6362\u7684\u6548\u679c\u76f8\u540c\uff0c\u751a\u81f3\u66f4\u5f3a\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u89e3\u91ca\u8bf4\uff0c\u5728\u5e7c\u9f20\u8eab\u4e0a\u505a\u8fd9\u4e00\u7a0b\u5e8f\u5bf9\u5b83\u4eec\u7684\u5065\u5eb7\u4e5f\u6ca1\u6709\u6709\u5bb3\u5f71\u54cd\u3002\n\u540c\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u6b64\u524d\u53d6\u5f97\u4e86\u4e00\u9879\u7a81\u7834\u6027\u53d1\u73b0\uff0c\u5373\u5f53\u5c0f\u9f20\u548c\u8001\u5e74\u5c0f\u9f20\u7684\u8840\u6db2\u7ed3\u5408\u65f6\uff0c\u80fd\u591f\u4f7f\u7ec4\u7ec7\u4e2d\u7684\u7ec6\u80de\u6062\u590d\u6d3b\u529b\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u7684\u65b0\u7814\u7a76\u6539\u53d8\u4e86\u6d41\u884c\u7684\u590d\u5174\u7406\u60f3\uff0c\u4e0d\u518d\u662f\u5e74\u8f7b\u7684\u8840\u6db2\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u7814\u7a76\u8001\u5e74\u8840\u6db2\u672c\u8eab\u3002\n\u6839\u636e\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u751f\u7269\u5de5\u7a0b\u6559\u6388\u4f0a\u7433\u5a1c\u00b7\u5eb7\u535a\u4f0a\u7684\u8bf4\u6cd5\uff0c\u4ed6\u4eec\u7684\u65b0\u7814\u7a76\u7ed3\u679c\u6307\u51fa\uff0c\u7a00\u91ca\u9648\u65e7\u7684\u8840\u6db2\u5c31\u8db3\u591f\u4e86\uff0c\u5e74\u8f7b\u7684\u8840\u6db2\u6216\u5176\u56e0\u7d20\u5e76\u4e0d\u662f\u5efa\u7acb\u6062\u590d\u6d3b\u529b\u7684\u6548\u679c\u6240\u5fc5\u9700\u7684\u3002\u8be5\u7814\u7a76\u7684\u5168\u90e8\u7ed3\u679c\u53d1\u8868\u57282020\u5e745\u670830\u65e5\u7684\u300a\u8001\u9f84\u5316\u300b\u6742\u5fd7\u4e0a\u3002\n2005\u5e74\uff0c\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u7684\u540c\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5171\u4eab\u5c0f\u9f20\u548c\u8001\u5e74\u9f20\u7684\u8840\u6db2\u548c\u5668\u5b98\u53ef\u4ee5\u518d\u751f\u7ec4\u7ec7\uff0c\u9006\u8f6c\u5c0f\u9f20\u8870\u8001\u7684\u8ff9\u8c61\u3002\u8fd9\u4e00\u53d1\u73b0\u5f15\u53d1\u4e86\u4e00\u79cd\u7406\u8bba\uff0c\u5373\u4e00\u53ea\u5e74\u8f7b\u8001\u9f20\u7684\u8840\u6db2\u53ef\u80fd\u542b\u6709\u72ec\u7279\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u8001\u9f20\u548c\u4eba\u7c7b\u7684\u9752\u6625\u4e4b\u6cc9\u3002\n\u5728\u4ed6\u4eec\u7684\u65b0\u7814\u7a76\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u4e0e\u6dfb\u52a0\u5e74\u8f7b\u8840\u6db2\u4e2d\u7684\u86cb\u767d\u8d28\u4e0d\u540c\uff0c\u4ec5\u7a00\u91ca\u968f\u5e74\u9f84\u589e\u957f\u7684\u86cb\u767d\u8d28\u5c31\u53ef\u80fd\u5df2\u7ecf\u5177\u6709\u6cbb\u7597\u4f5c\u7528\u3002\n\u6b64\u5916\uff0c\u4ed6\u4eec\u8bf4\uff0c\u589e\u52a0\u5e7c\u9f20\u7684\u8840\u6db2\u4e5f\u53ef\u80fd\u5bf9\u60a3\u8005\u9020\u6210\u6f5c\u5728\u4f24\u5bb3\u3002\u4ed6\u4eec\u8bf4\uff0c\u8fd9\u79cd\u65b0\u7684\u65b9\u6cd5\u5c06\u901a\u8fc7\u6d88\u9664\u53ef\u80fd\u5207\u65ad\u5e74\u8f7b\u86cb\u767d\u8d28\u7684\u56e0\u7d20\u6765\u589e\u52a0\u5e74\u8f7b\u86cb\u767d\u8d28\u7684\u6570\u91cf\u3002\nApheresis Care Group\u7684\u533b\u5b66\u603b\u76d1\u3001\u8fd9\u7bc7\u8bba\u6587\u7684\u5408\u8457\u8005\u591a\u5e03\u91cc\u00b7\u57fa\u666e\u7f57\u592b(Dobri Kiprov)\u8868\u793a\uff0c\u4eba\u4eec\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u653e\u5f03\u5e74\u8f7b\u8840\u6db2\u5bf9\u4e8e\u6062\u590d\u6d3b\u529b\u548c\u963b\u6b62\u8870\u8001\u8fc7\u7a0b\u81f3\u5173\u91cd\u8981\u7684\u60f3\u6cd5\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u8be5\u56e2\u961f\u5e0c\u671b\u4ed6\u4eec\u7684\u53d1\u73b0\u4e3a\u66f4\u591a\u5173\u4e8e\u8840\u6d46\u4ea4\u6362\u7684\u7814\u7a76\u5f00\u8f9f\u4e86\u9053\u8def\uff0c\u4e0d\u4ec5\u662f\u4e3a\u4e86\u5c0f\u9f20\u548c\u4eba\u7c7b\u7684\u8870\u8001\uff0c\u4e5f\u662f\u4e3a\u4e86\u514d\u75ab\u8c03\u8282\u3002\n\u5728\u53d1\u73b0\u4e2d\u6027\u8840\u6db2\u4ea4\u6362\u672c\u8d28\u4e0a\u6539\u5584\u4e86\u8001\u5e74\u5c0f\u9f20\u7684\u5065\u5eb7\u540e\uff0c\u7814\u7a76\u5c0f\u7ec4\u5bf9\u8fd9\u4e9b\u52a8\u7269\u7684\u8840\u6d46\u8fdb\u884c\u4e86\u86cb\u767d\u8d28\u7ec4\u5b66\u7814\u7a76\uff0c\u4ee5\u53d1\u73b0\u5b83\u4eec\u8840\u6db2\u4e2d\u7684\u86cb\u767d\u8d28\u5728\u624b\u672f\u540e\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u5bf9\u63a5\u53d7\u6cbb\u7597\u6027\u8840\u6d46\u4ea4\u6362\u7684\u4eba\u7c7b\u7684\u8840\u6d46\u8fdb\u884c\u4e86\u7c7b\u4f3c\u7684\u5206\u6790\u3002\n\u5728\u5206\u6790\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u8840\u6d46\u4ea4\u6362\u8fc7\u7a0b\u7684\u884c\u4e3a\u51e0\u4e4e\u5c31\u50cf\u4e00\u4e2a\u5206\u5b50\u590d\u4f4d\u6309\u94ae\u3002\u7814\u7a76\u53d1\u73b0\uff0c\u8fd9\u79cd\u673a\u5236\u53ef\u4ee5\u964d\u4f4e\u8bb8\u591a\u968f\u5e74\u9f84\u589e\u957f\u7684\u4fc3\u708e\u86cb\u767d\u7684\u6d53\u5ea6\uff0c\u540c\u65f6\u63d0\u4f9b\u66f4\u591a\u6709\u76ca\u7684\u86cb\u767d\uff0c\u6bd4\u5982\u90a3\u4e9b\u652f\u6301\u8840\u7ba1\u5f62\u6210\u7684\u86cb\u767d\u5927\u91cf\u53cd\u5f39\u3002\n\u867d\u7136\u4e00\u4e9b\u86cb\u767d\u8d28\u53ef\u80fd\u88ab\u89c6\u4e3a\u989d\u5916\u7684\u6cbb\u7597\u6216\u836f\u7269\u5019\u9009\uff0c\u4f46\u5eb7\u535a\u4f0a\u8b66\u544a\u8bf4\uff0c\u4efb\u4f55\u5355\u4e00\u86cb\u767d\u8d28\u7684\u6539\u53d8\u90fd\u4e0d\u592a\u53ef\u80fd\u6539\u53d8\u5c0f\u9f20\u7684\u8870\u8001\u3002\u4f5c\u4e3a\u4e0b\u4e00\u6b65\uff0c\u7814\u7a76\u5c0f\u7ec4\u5373\u5c06\u8fdb\u884c\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u5982\u4f55\u6700\u597d\u5730\u4f7f\u7528\u6cbb\u7597\u6027\u8840\u6db2\u4ea4\u6362\u6765\u6cbb\u7597\u4eba\u7c7b\u8870\u8001\u72b6\u51b5\u3002\n\u00a92017 Science Times.com\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002\u672a\u7ecf\u8bb8\u53ef\uff0c\u8bf7\u52ff\u590d\u5236\u3002\u79d1\u5b66\u65f6\u4ee3\u901a\u5411\u4e16\u754c\u7684\u7a97\u53e3\u3002", "note_en": "A new study by a team of researchers from the University of California Berkeley shows that age-reversing effects can be obtained by diluting the  blood plasma \u00a0of old mice. By replacing half of the plasma with a combination of saline and albumin, the researchers found significant effects on the rejuvenation of vital organs such as the brain, liver, and muscle.\n  The researchers said that the albumin in the mixture replaced proteins lost when the original plasma was taken out, and it had the same or even stronger resurgence effects than pairing with young mice blood exchange. Furthermore, they explained that doing the procedure on young mice showed no harmful effects on their health as well.\n  The same team of researchers previously made a breakthrough discovery of being able to rejuvenate cells in tissue when blood from both young and old mice was conjoined. However, their new study shifts the prevailing ideal of rejuvenation away from young blood and focusing on working on old blood in itself.\n  According to Irina Conboy, a professor of bioengineering at UC Berkeley, the findings of their new study point out that dilution of old blood is sufficient and that young blood or its factors are not necessary to establish a rejuvenating effect. The full findings of the study were published in the journal  Aging on May 30, 2020.\n        In 2005, the same team of researchers from UC Berkeley discovered that sharing blood and organs of young and old mice can regenerate tissues and reverse the signs of aging in mice. The finding sparked theories that a young mouse&#39;s blood might contain unique properties that could act as a &#34;fountain of youth&#34; for both mice and humans.\n  In their new study, the researchers found that instead of adding proteins from young blood, the dilution of age-elevated proteins alone could already be therapeutic.\n  Additionally, they say adding blood from young mice could also potentially harm a patient. They say that this new approach would increase the number of young proteins by eliminating factors that could cut them off.\n  According to Dobri Kiprov, a medical director of Apheresis Care Group and a co-author of the paper, it might take some time before people give up the idea that young blood is essential for rejuvenation and for stopping the aging process. He adds that the team hopes their findings open pathways to more research on plasma exchange, not just for aging in mice and humans but also for  immunomodulation.\n    After the discovery that the neutral blood exchange essentially improved the health of old mice, the team conducted a proteomic investigation of the blood plasma of the animals to discover how the proteins in their blood altered after the procedure. The researchers also did a similar analysis of blood plasma from humans who underwent therapeutic plasma exchange.\n  In the analysis, the researchers found that the plasma exchange process behaves almost like a molecular reset button. The mechanism was found to lower the concentrations of many pro-inflammatory proteins that increase with age, while granting more beneficial proteins, like those that bolster vascularization to rebound in huge numbers.\n  Although some of the proteins may be looked at as additional therapeutic or drug candidates, Conboy warns that it is unlikely that alterations in any single protein could transpose aging in mice. As a next step, the research team is about to handle clinical trials to comprehend better how therapeutic blood exchange might best be used to treat human conditions of aging.\n           \u00a92017 ScienceTimes.com All rights reserved. Do not reproduce without permission. The window to the world of  science times.", "posttime": "2020-06-17 00:32:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8840\u6d46,blood,\u8840\u6db2", "title": "\u7a00\u91ca\u8840\u6d46\u53ef\u4ee5\u518d\u751f\u7ec4\u7ec7\uff0c\u5ef6\u7f13\u8870\u8001", "title_en": "Diluting Blood Plasma Could Regenerate Tissue and Reverse Aging", "transed": 1, "url": "https://www.sciencetimes.com/articles/26069/20200616/diluting-blood-plasma-albumin-saline-regenerate-tissue-reverse-aging-study.htm", "via": "", "real_tags": ["\u8840\u6d46", "blood", "\u8840\u6db2"]}, {"category": "", "categoryclass": "", "imagename": "98670454797a2c3e8533501fb2569cfc.jpeg", "infoid": 1006823, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b27\u76df\u6267\u884c\u673a\u6784\u6b27\u76df\u59d4\u5458\u4f1a(European Commission)\u8868\u793a\uff0c\u5b83\u5c06\u8bc4\u4f30\u82f9\u679c\u9488\u5bf9\u5e94\u7528\u5f00\u53d1\u5546\u901a\u8fc7App Store\u5206\u53d1\u5e94\u7528\u7684\u89c4\u5b9a\u662f\u5426\u8fdd\u53cd\u4e86\u6b27\u76df\u7684\u7ade\u4e89\u89c4\u5b9a\u3002\n\u81f3\u4e8eApple Pay\uff0c\u6b27\u76df\u59d4\u5458\u4f1a\u8868\u793a\uff0c\u5b83\u5c06\u8c03\u67e5\u82f9\u679c\u5c06Apple Pay\u96c6\u6210\u5230\u5546\u5bb6\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u7684\u6761\u6b3e\u548c\u6761\u4ef6\uff0c\u82f9\u679c\u5bf9\u4f7f\u7528NFC\u6280\u672f\u7684\u9650\u5236\uff0c\u4ee5\u53ca\u6d89\u5acc\u62d2\u7edd\u8bbf\u95eeApple Pay\u3002\n\u6b27\u76df\u59d4\u5458\u4f1a\u5468\u4e8c\u5ba3\u5e03\uff0c\u5c06\u5bf9\u82f9\u679c\u7684App Store\u89c4\u5219\u548cApple Pay\u5e73\u53f0\u53d1\u8d77\u4e24\u9879\u53cd\u5784\u65ad\u8c03\u67e5\u3002\n\u6b27\u76df\u6267\u884c\u673a\u6784\u6b27\u76df\u59d4\u5458\u4f1a(European Commission)\u8868\u793a\uff0c\u5b83\u5c06\u8bc4\u4f30\u82f9\u679c\u9488\u5bf9\u5e94\u7528\u5f00\u53d1\u5546\u901a\u8fc7App Store\u5206\u53d1\u5e94\u7528\u7684\u89c4\u5b9a\u662f\u5426\u8fdd\u53cd\u4e86\u6b27\u76df\u7684\u7ade\u4e89\u89c4\u5b9a\u3002\n\u867d\u7136\u516c\u53f8\u53ef\u4ee5\u514d\u8d39\u5c06\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u653e\u5728App Store\u4e0a\uff0c\u4f46\u82f9\u679c\u516c\u53f8\u4ece\u5e94\u7528\u7a0b\u5e8f\u5185\u8d2d\u4e70\u4e2d\u6536\u53d630%\u7684\u8d39\u7528\uff0c\u7b2c\u4e00\u5e74\u6536\u53d630%\u7684\u8ba2\u9605\u8d39\uff0c\u4e4b\u540e\u6536\u53d615%\u3002\n\u4e0eApple Music\u76f4\u63a5\u7ade\u4e89\u7684Spotify\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u516c\u5e73\u7684\uff0c\u5e76\u4e8e2019\u5e743\u6708\u6b63\u5f0f\u63d0\u51fa\u6295\u8bc9\u3002\u4e0e\u82f9\u679c\u56fe\u4e66\u7ade\u4e89\u7684\u7535\u5b50\u9605\u8bfb\u5668\u516c\u53f8Kobo\u4e5f\u63d0\u51fa\u4e86\u7533\u8bc9\u3002\n\u8d1f\u8d23\u7ade\u4e89\u653f\u7b56\u7684\u6267\u884c\u526f\u603b\u88c1\u739b\u683c\u4e3d\u7279\u00b7\u7ef4\u65af\u7279\u683c(Margrethe Vestager)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u6211\u4eec\u83b7\u53d6\u5185\u5bb9\u7684\u65b9\u5f0f\u3002\u82f9\u679c\u5236\u5b9a\u4e86\u5411iPhone\u548ciPad\u7528\u6237\u5206\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u89c4\u5219\u3002\n\u5728\u5411\u82f9\u679c\u6d41\u884c\u8bbe\u5907\u7684\u7528\u6237\u5206\u53d1\u5e94\u7528\u7a0b\u5e8f\u548c\u5185\u5bb9\u65b9\u9762\uff0c\u82f9\u679c\u4f3c\u4e4e\u83b7\u5f97\u4e86\u770b\u95e8\u4eba\u7684\u89d2\u8272\u3002\u6211\u4eec\u9700\u8981\u786e\u4fdd\uff0c\u5728\u82f9\u679c\u4e0e\u5176\u4ed6\u5e94\u7528\u5f00\u53d1\u5546\u7ade\u4e89\u7684\u5e02\u573a\u4e0a\uff0c\u82f9\u679c\u7684\u89c4\u5219\u4e0d\u4f1a\u626d\u66f2\u7ade\u4e89\uff0c\u4f8b\u5982\u4e0e\u5176\u97f3\u4e50\u6d41\u5a92\u4f53\u670d\u52a1Apple Music\u6216Apple Books\u7ade\u4e89\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u5bc6\u5207\u5173\u6ce8\u82f9\u679c\u7684App Store\u89c4\u5219\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5426\u7b26\u5408\u6b27\u76df\u7684\u7ade\u4e89\u89c4\u5219\u3002\n\u5173\u4e8eApple Pay\uff0c\u6b27\u76df\u59d4\u5458\u4f1a\u8868\u793a\uff0c\u5b83\u5c06\u8c03\u67e5\u82f9\u679c\u5c06Apple Pay\u96c6\u6210\u5230\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u7684\u6761\u6b3e\u548c\u6761\u4ef6\uff0c\u82f9\u679c\u5bf9\u4f7f\u7528NFC\u6280\u672f\u7684\u9650\u5236\uff0c\u4ee5\u53ca\u6d89\u5acc\u62d2\u7edd\u8bbf\u95eeApple Pay\u3002\n\u7ef4\u65af\u7279\u683c\u8bf4\uff0c\u82f9\u679c\u4f3c\u4e4e\u5bf9Apple Pay\u5728\u5546\u5bb6\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\u8bbe\u5b9a\u4e86\u6761\u4ef6\u3002\n\u5b83\u8fd8\u5c06iPhone\u7684\u5373\u70b9\u5373\u7528\u529f\u80fd\u4fdd\u7559\u5230Apple Pay\u4e0a\u3002\u91cd\u8981\u7684\u662f\uff0c\u82f9\u679c\u7684\u63aa\u65bd\u4e0d\u4f1a\u5265\u593a\u6d88\u8d39\u8005\u4ece\u65b0\u652f\u4ed8\u6280\u672f\u4e2d\u83b7\u5f97\u7684\u597d\u5904\uff0c\u5305\u62ec\u66f4\u597d\u7684\u9009\u62e9\u3001\u8d28\u91cf\u3001\u521b\u65b0\u548c\u6709\u7ade\u4e89\u529b\u7684\u4ef7\u683c\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u82f9\u679c\u5728Apple Pay\u65b9\u9762\u7684\u505a\u6cd5\u53ca\u5176\u5bf9\u7ade\u4e89\u7684\u5f71\u54cd\u3002\n\u6b27\u76df\u59d4\u5458\u4f1a\u6709\u6743\u5173\u95ed\u79d1\u6280\u670d\u52a1\uff0c\u5e76\u5411\u7f8e\u56fd\u79d1\u6280\u516c\u53f8\u6536\u53d6\u5176\u5e74\u6536\u5165\u768410%\u3002\u82f9\u679c\u516c\u53f8\u8868\u793a\uff0c\u6b27\u76df\u59d4\u5458\u4f1a\u542c\u53d6\u4e86\u5c11\u6570\u4f01\u4e1a\u7684\u65e0\u7aef\u6295\u8bc9\uff0c\u8fd9\u4ee4\u4eba\u5931\u671b\u3002\n\u82f9\u679c\u516c\u53f8\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u7eb5\u89c2\u6211\u4eec\u7684\u5386\u53f2\uff0c\u82f9\u679c\u5728\u4e16\u754c\u4e0a\u7ade\u4e89\u6700\u6fc0\u70c8\u7684\u4e00\u4e9b\u5e02\u573a\u521b\u9020\u4e86\u7a81\u7834\u6027\u7684\u65b0\u4ea7\u54c1\u548c\u670d\u52a1\u3002\u201c\u6211\u4eec\u505a\u4efb\u4f55\u4e8b\u60c5\u90fd\u9075\u5faa\u6cd5\u5f8b\uff0c\u6211\u4eec\u5728\u6bcf\u4e2a\u9636\u6bb5\u90fd\u62e5\u62b1\u7ade\u4e89\uff0c\u56e0\u4e3a\u6211\u4eec\u76f8\u4fe1\u7ade\u4e89\u4f1a\u63a8\u52a8\u6211\u4eec\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\u3002\u201d\u6211\u4eec\u5f00\u53d1App Store\u6709\u4e24\u4e2a\u76ee\u6807\uff1a\u8ba9\u6d88\u8d39\u8005\u5b89\u5168\u53ef\u9760\u5730\u53d1\u73b0\u548c\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u4e3a\u4f01\u4e1a\u5bb6\u548c\u5f00\u53d1\u8005\u63d0\u4f9b\u5de8\u5927\u7684\u5546\u673a\u3002\u6211\u4eec\u4e3a\u65e0\u6570\u901a\u8fc7\u6211\u4eec\u7684\u5e73\u53f0\u8fdb\u884c\u521b\u65b0\u5e76\u53d6\u5f97\u6210\u529f\u7684\u5f00\u53d1\u4eba\u5458\u6df1\u611f\u81ea\u8c6a\u3002\u968f\u7740\u6211\u4eec\u7684\u5171\u540c\u6210\u957f\uff0c\u6211\u4eec\u7ee7\u7eed\u63d0\u4f9b\u521b\u65b0\u7684\u65b0\u670d\u52a1\uff0c\u5982Apple Pay\uff0c\u8fd9\u4e9b\u670d\u52a1\u5728\u6ee1\u8db3\u884c\u4e1a\u9886\u5148\u7684\u9690\u79c1\u548c\u5b89\u5168\u6807\u51c6\u7684\u540c\u65f6\uff0c\u63d0\u4f9b\u6700\u597d\u7684\u5ba2\u6237\u4f53\u9a8c\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5f88\u7b80\u5355\uff1a\u8ba9\u6211\u4eec\u7684\u5ba2\u6237\u5728\u5b89\u5168\u53ef\u9760\u7684\u73af\u5883\u4e2d\u83b7\u5f97\u4ed6\u4eec\u9009\u62e9\u7684\u6700\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u670d\u52a1\u3002\u6211\u4eec\u6b22\u8fce\u6709\u673a\u4f1a\u5411\u6b27\u76df\u59d4\u5458\u4f1a\u5c55\u793a\u6211\u4eec\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u6240\u505a\u7684\u4e00\u5207\u3002\n\u8fd1\u51e0\u4e2a\u6708\u6765\uff0c\u6b27\u76df\u5bf9\u8c37\u6b4c\u3001\u4e9a\u9a6c\u900a\u548cFacebook\u53d1\u8d77\u4e86\u5176\u4ed6\u53cd\u5784\u65ad\u8c03\u67e5\u3002", "note_en": "The Commission, the executive arm of the EU, said it will assess whether Apple&#39;s rules for app developers on the distribution of apps via the App Store breach EU competition rules.\n With regards to Apple Pay, the Commission said it will look at Apple&#39;s terms and conditions for integrating Apple Pay in merchant&#39;s apps and websites, Apple&#39;s limitation of access to NFC technology, and alleged refusals of access to Apple Pay.\n The European Commission announced Tuesday that it&#39;s launching two antitrust investigations into  Apple&#39;s App Store rules and the Apple Pay platform.\n The Commission, the executive arm of the EU, said it will assess whether Apple&#39;s rules for app developers on the distribution of apps via the App Store breach EU competition rules.\n  While companies can place their apps on the App Store at no cost, Apple charges companies 30% from in-app purchases and 30% on subscriptions for the first year, then 15% thereafter.\n Spotify, which competes directly with Apple Music, feels this is unfair and filed a formal complaint in March 2019. Kobo, an e-reader company that competes with Apple Books, has also filed a complaint.\n Executive Vice-President Margrethe Vestager, in charge of competition policy, said in a statement:\u00a0 &#34;Mobile applications have fundamentally changed the way we access content. Apple sets the rules for the distribution of apps to users of iPhones and iPads.&#34;\n &#34;It appears that Apple obtained a &#39;gatekeeper&#39; role when it comes to the distribution of apps and content to users of Apple&#39;s popular devices. We need to ensure that Apple&#39;s rules do not distort competition in markets where Apple is competing with other app developers, for example with its music streaming service Apple Music or with Apple Books. I have therefore decided to take a close look at Apple&#39;s App Store rules and their compliance with EU competition rules.&#34;\n  With regards to Apple Pay, the Commission said it will look at Apple&#39;s terms and conditions for integrating Apple Pay in apps and websites, Apple&#39;s limitation of access to NFC technology, and alleged refusals of access to Apple Pay.\n  &#34;It appears that Apple sets the conditions on how Apple Pay should be used in merchants&#39; apps and websites,&#34; Vestager said.\n &#34;It also reserves the &#39;tap and go&#39; functionality of iPhones to Apple Pay. It is important that Apple&#39;s measures do not deny consumers the benefits of new payment technologies, including better choice, quality, innovation and competitive prices. I have therefore decided to take a close look at Apple&#39;s practices regarding Apple Pay and their impact on competition.&#34;\n The European Commission has the power to shut down tech services and charge U.S. tech firms 10% of their annual revenues.\u00a0Apple said it was &#34;disappointing&#34; that the Commission is listening to &#34;baseless complaints&#34; from a small number of businesses.\n &#34;Throughout our history, Apple has created groundbreaking new products and services in\u00a0some of the most fiercely competitive markets in the world.\u00a0We follow the law in everything\u00a0we do and\u00a0we embrace competition at every stage because we believe it pushes us to deliver\u00a0even better results,&#34; the company said in a statement.\u00a0  &#34;We developed the App Store with two goals in mind: that it be a safe and trusted place for\u00a0customers to discover and download apps, and a great business opportunity for entrepreneurs and developers. We&#39;re deeply proud of the countless developers who&#39;ve innovated and found success through our platform. And as we&#39;ve grown together, we&#39;ve continued to deliver innovative new services \u2014 like Apple Pay \u2014 that provide the very best\u00a0customer experience while meeting industry-leading standards for privacy and security.&#34;\u00a0  &#34;At the end of the day, our goal is simple: for our customers to have access to the best app or\u00a0service of their choice, in a safe and secure environment. We welcome the opportunity to\u00a0show the European Commission all we&#39;ve done to make that goal a reality.&#34;\n The EU has launched other anti-trust investigations into  Google,  Amazon, and  Facebook in recent months.", "posttime": "2020-06-17 00:16:10", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u82f9\u679c,app,apple,rust,\u7ade\u4e89", "title": "\u6b27\u76df\u5bf9\u82f9\u679cApp Store\u548cApple Pay\u5c55\u5f00\u53cd\u5784\u65ad\u8c03\u67e5", "title_en": "EU Launches Antitrust Probes Into Apple's App Store and Apple Pay", "transed": 1, "url": "https://www.cnbc.com/2020/06/16/apple-eu-antitrust.html", "via": "", "real_tags": ["\u82f9\u679c", "app", "apple", "rust", "\u7ade\u4e89"]}, {"category": "", "categoryclass": "", "imagename": "8f8c5b1332820c7c0c8de312535c9593.png", "infoid": 1006822, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136Jupyter\u5728Python\u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u4e2d\u5e7f\u4e3a\u4eba\u77e5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u8bed\u8a00\u4e0d\u53ef\u77e5\u7684\u5f00\u53d1\u73af\u5883\u3002\u6570\u636e\u79d1\u5b66\u7684\u4e3b\u8981\u8bed\u8a00\uff0c\u5982Python\u3001C++\u3001R\u6216Julia\uff0c\u90fd\u6709\u9ad8\u8d28\u91cf\u7684\u8bed\u8a00\u5185\u6838\u3002\u4f46\u662f\uff0c\u6570\u636e\u79d1\u5b66\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5de5\u5177\u662fSQL\u7f16\u7a0b\u8bed\u8a00\u7cfb\u5217\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5ba3\u5e03\u53d1\u5e03SQLite\u7684Jupyter\u5185\u6838\u3002\n\u8fd9\u4e2a\u65b0\u5185\u6838\u5141\u8bb8\u7528\u6237\u4f7f\u7528\u5b8c\u6574\u7684SQLite\u8bed\u6cd5\u4ee5\u53ca\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u6253\u5f00\u6216\u5173\u95ed\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u6216\u8005\u4f7f\u7528Jupyter Magics\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u53ef\u89c6\u5316\u6570\u636e\u3002\n\u4e3a\u4e86\u4f7f\u4e3aJupyter\u5b9e\u73b0\u65b0\u5185\u6838\u7684\u4efb\u52a1\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u6211\u4eec\u5229\u7528\u4e86Xeus\uff0c\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9bJupyter\u5185\u6838\u534f\u8bae\u7684\u53ef\u9760\u5b9e\u73b0\u7684\u5e93\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u5185\u6838\u4e2d\u7279\u5b9a\u4e8e\u8bed\u8a00\u7684\u90e8\u5206\u3002\n\u4f5c\u4e3aSQLite\u7684\u539f\u751fC\u5b9e\u73b0\u548cC++\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u6211\u4eec\u4f7f\u7528SRombauts\u7684\u5e93SQLiteCpp\u3002\nXEUS-SQLite\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684SQLite\u63a5\u53e3\u548cMagics\u6765\u6267\u884cSQL\u8bed\u6cd5\u8303\u56f4\u4e4b\u5916\u7684\u9ad8\u7ea7\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u3001\u6253\u5f00\u6216\u5173\u95edSQLite\u6570\u636e\u5e93\u3002\u53ef\u4ee5\u4f7f\u7528Xeus-SQLite\u6267\u884c\u7684\u4e00\u4e9b\u64cd\u4f5c\u5305\u62ec\u521b\u5efa\u3001\u52a0\u8f7d\u3001\u5907\u4efd\u6216\u5220\u9664\u65b0\u6570\u636e\u5e93\u3002\u60a8\u8fd8\u53ef\u4ee5\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728\uff0c\u8bbe\u7f6e\u548c\u91cd\u7f6e\u6570\u636e\u5e93\u7684\u952e\uff0c\u5e76\u83b7\u53d6\u6709\u5173\u8be5\u8868\u7684\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728SQLite\u7684\u6587\u6863\u4e2d\u627e\u5230\u6709\u5173\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u3002\nXeus-SQLite\u4e3aJupyter Notebook\u548cJupyter Lab\u4e2d\u7684\u8868\u683c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684HTML\u663e\u793a\u3002\u5bf9\u4e8eJupyter\u63a7\u5236\u53f0\uff0c\u6211\u4eec\u4f7f\u7528\u8868\u683c\u5e93\u8fdb\u884c\u6587\u672c\u663e\u793a\u3002\n\u5bf9\u4e8eXeus-SQLite\u7684\u672a\u6765\uff0c\u6211\u4eec\u5e0c\u671b\u521b\u5efa\u4e00\u79cd\u76f4\u89c2\u7684\u53ef\u89c6\u5316\u6570\u636e\u5f62\u5f0f\uff1a\u4eceSQLite\u67e5\u8be2\u7ed3\u679c\u521b\u5efa\u66f2\u7ebf\u56fe\u3001\u56fe\u5f62\u3001\u56fe\u8868\u3001\u5730\u56fe\u548c\u66f4\u591a\u5185\u5bb9\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u540c\u4e00\u4e2a\u7b14\u8bb0\u672c\u4e2d\u3002\u76ee\u524d\uff0c\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u5728Xeus-SQLite\u4e2d\u4f7f\u7528Vega\uff0cXeus-SQLite\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u8bbe\u8ba1\u7684\u58f0\u660e\u6027\u8bed\u8a00\uff0c\u53ef\u4ee5\u4f7f\u7528jupyter Magics\u7ed8\u5236\u6761\u5f62\u56fe\uff1a\n\u6211\u4eec\u8fd8\u8ba1\u5212\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7248\u672c\u7684Xeus-SQLite\uff0c\u5c06Xeus\u548cSQLite\u5e93\u6346\u7ed1\u5230\u4e00\u4e2a\u6613\u4e8e\u5206\u53d1\u7684\u5355\u4e00\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\n\u60a8\u53ea\u9700\u5355\u51fb\u4e0b\u56fe\u5373\u53ef\u8bd5\u7528\u7a33\u5b9a\u7248\uff0c\u800c\u65e0\u9700\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\uff1a\n\u8fd9\u4e0d\u4f1a\u6388\u4e88\u60a8\u8bbf\u95ee\u6211\u4eec\u6b63\u5728\u6d4b\u8bd5\u7684\u5b9e\u9a8c\u5206\u652f\u7684\u6743\u9650\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\u5c1d\u8bd5\uff0c\u8bf7\u67e5\u770b\u5b89\u88c5\u6307\u5357\uff0c\u5e76\u786e\u4fdd\u60a8\u9009\u62e9\u4e86\u6b63\u786e\u7684\u5206\u652f\u3002\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u9996\u5148\u9700\u8981\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Jupyter\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528manba\u5b89\u88c5xeus-sqlite\uff1a\n\u6211\u7684\u540d\u5b57\u662fMariana Meireles\uff0c\u6211\u662fQuantStack\u7684\u4e00\u540d\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u3002\u6211\u975e\u5e38\u5173\u5fc3\u6280\u672f\u5bf9\u4e16\u754c\u7684\u5f71\u54cd\uff0c\u5e76\u5c3d\u6700\u5927\u52aa\u529b\u6210\u4e3a\u6211\u5e0c\u671b\u770b\u5230\u7684\u53d8\u5316\uff0c\u4e3a\u57fa\u4e8e\u81ea\u7531\u548c\u591a\u6837\u5316\u6807\u51c6\u7684\u5f00\u653e\u6e90\u7801\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002\n\u5728\u52a0\u5165QuantStack\u4e4b\u524d\uff0c\u6211\u5728Qt\u516c\u53f8\u7684PySide\u56e2\u961f\u62c5\u4efb\u5f00\u53d1\u4eba\u5458\uff0c\u5728Mozilla\u62c5\u4efbWeb\u6027\u80fd\u5f00\u53d1\u4eba\u5458\u3002", "note_en": "While it is well known in the Python scientific computing community, Jupyter is in fact a language-agnostic development environment. High-quality language kernels exist for the main languages of data sciences, such as  Python,  C++,  R or  Julia. But another important tool for data science is the SQL family of programming languages. Today, we announce the release of a Jupyter kernel for SQLite.\n  This new kernel allows the user to use the complete SQLite syntax as well as some extra operations such as opening or closing a database file, or visualizing the data in different ways using Jupyter magics.\n  To make the task of implementing a new Kernel for Jupyter easier, we make use of   Xeus , a library providing a solid implementation ofthe Jupyter kernel protocol, so that we can focus on implementing the language-specific parts of the kernel.\n As a connection between SQLite\u2019s native C implementation and C++ we\u2019re using SRombauts\u2019 library   SQLiteCpp .\n  xeus-SQLite is still under active development but it offers a fully functional SQLite interface and magics to perform higher-level operations that are outside of the scope of the SQL syntax, such as creating, opening, or closing SQLite databases. Some of the things you can do with xeus-SQLite are creating a new database, loading it, backing it up or deleting it. You can also check if a table exists, set and reset keys of a database and get information about it. You can find more about the use of these methods in SQLite\u2019s  documentation.\n xeus-SQLite provides rich HTML display of tables in the Jupyter Notebook and Jupyter Lab. For the Jupyter Console we make use of the   tabulate library for textual display.\n   For the future of xeus-SQLite we want to create an intuitive form of visualizing data: creating plots, graphs, charts, maps and much more from your SQLite query results, all in the same notebook. Currently we\u2019re exploring the use of   Vega  in xeus-SQLite, a declarative language for creating interactive visualization designs and can do bar plots using jupyter magics:\n   We also plan on producing a static build of xeus-SQLite bundling xeus and the SQLite library into a single executable that can be easily distributed.\n  You can try the stable version without the need of installing anything on your computer just by clicking on the image below:\n  This won\u2019t grant you access to the experimental branch where we\u2019re testing, if you\u2019re interested in trying it please check the  installation guide and make sure you\u2019re in the right  branch.\n  Note that you first need to have Jupyter installed on your computer. You can install  xeus-sqlite using mamba:\n      My name is  Mariana Meireles and I\u2019m a software developer working for  QuantStack. I care deeply about the impacts that technology has in the world and try my best to be the change I want to see by contributing to open source projects that stand upon libre and diverse standards.\n Prior to QuantStack I worked as a developer on the PySide team at the Qt Company and as a web performance developer at Mozilla.", "posttime": "2020-06-17 00:14:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sqlite,kernel", "title": "\u4e00\u79cd\u9762\u5411SQLite\u7684Jupyter\u5185\u6838", "title_en": "A Jupyter Kernel for SQLite", "transed": 1, "url": "https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551", "via": "", "real_tags": ["sqlite", "kernel"]}, {"category": "", "categoryclass": "", "imagename": "b0fe96952a39dff08352adfd54bd2beb.jpg", "infoid": 1006821, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0c\u4e00\u9053\u84dd\u5149\u5212\u8fc7\u5929\u7a7a\uff0c\u8ba9\u897f\u6fb3\u5927\u5229\u4e9a\u7684\u591c\u732b\u5b50\u4eec\u5927\u5403\u4e00\u60ca\uff0c\u4e5f\u8ba9\u5929\u6587\u5b66\u5708\u8ff7\u60d1\u4e0d\u89e3\u3002\n\u8fd9\u4e2a\u84dd\u8272\u7684\u706b\u7403\u662f\u5728\u51cc\u66681\u70b9\u88ab\u770b\u5230\u7684\u3002\u636eABC\u65b0\u95fb\u76ae\u5c14\u5df4\u62c9\u62a5\u9053\uff0c\u5f53\u5730\u65f6\u95f46\u670815\u65e5\u3002\u582a\u57f9\u62c9CSIRO-NASA\u8ddf\u8e2a\u7ad9\u7684\u6559\u80b2\u548c\u63a8\u5e7f\u7ecf\u7406\u683c\u4f26\u00b7\u7eb3\u683c\u5c14(Glen Nagle)\u544a\u8bc9\u901a\u8baf\u793e\uff0c\u8fd9\u771f\u662f\u4e00\u6b21\u58ee\u89c2\u7684\u89c2\u5bdf\u3002Nagle\u8bf4\uff0c\u636e\u62a5\u9053\uff0c\u5728\u504f\u8fdc\u7684\u76ae\u5c14\u5df4\u62c9\u5730\u533a\u4ee5\u53ca\u8be5\u56fd\u7684\u5317\u9886\u5730\u548c\u5357\u6fb3\u5927\u5229\u4e9a\u90fd\u6709\u76ee\u51fb\u4e8b\u4ef6\u3002\n\u8bb8\u591a\u89c2\u5bdf\u5bb6\u7528\u89c6\u9891\u6355\u6349\u5230\u4e86\u8fd9\u4e00\u73b0\u8c61\u3002\u706b\u7403\u7a33\u5b9a\u5730\u5212\u8fc7\u5929\u7a7a\u3002\u8d77\u521d\uff0c\u5b83\u770b\u8d77\u6765\u662f\u6a59\u8272\u6216\u9ec4\u8272\u7684\uff0c\u540e\u9762\u6709\u4e00\u6761\u77ed\u5c3e\u5df4\u3002\u51e0\u79d2\u949f\u540e\uff0c\u706b\u7403\u7684\u5927\u90e8\u5206\u4eae\u8d77\u84dd\u8272\u3002\n\u636e\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\u65b0\u95fb\u7f51\u62a5\u9053\uff0c\u79d1\u5b66\u5bb6\u4eec\u5e76\u4e0d\u5341\u5206\u786e\u5b9a\u662f\u4ec0\u4e48\u7269\u4f53\u5728\u5927\u6c14\u5c42\u4e2d\u71c3\u70e7\uff0c\u624d\u80fd\u521b\u9020\u51fa\u5982\u6b64\u707f\u70c2\u7684\u706f\u5149\u79c0\u3002\u4e00\u4e9b\u4e1a\u4f59\u5929\u6587\u5b66\u5bb6\u63a8\u6d4b\uff0c\u8be5\u7269\u4f53\u53ef\u80fd\u662f\u4eba\u9020\u6b8b\u9ab8\uff0c\u53ef\u80fd\u6765\u81ea\u6700\u8fd1\u7684\u4e00\u6b21\u706b\u7bad\u53d1\u5c04\u3002\u4f46\u8fd9\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\uff0c\u79d1\u5ef7\u5927\u5b66\u592a\u7a7a\u79d1\u6280\u4e2d\u5fc3\u7684\u7814\u7a76\u5927\u4f7fRenae Sayers\u544a\u8bc9\u901a\u8baf\u793e\u3002\n2020\u5e746\u670816\u65e5\uff0c\u5728\u897f\u6fb3\u5927\u5229\u4e9a\u504f\u8fdc\u7684\u76ae\u5c14\u5df4\u62c9pic.twitter.com/UF9JqNIRiR\uff0c\u4e00\u4e2a\u706b\u7403\u5212\u8fc7\u591c\u7a7a\u3002\n\u585e\u8036\u65af\u8bf4\uff0c\u5f53\u592a\u7a7a\u5783\u573e\u91cd\u65b0\u8fdb\u5165\u5927\u6c14\u5c42\u65f6\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u770b\u5230\u4e00\u4e9b\u7206\u88c2\u548c\u706b\u82b1\u3002\u8fd9\u662f\u56e0\u4e3a\u6709\u4e1c\u897f\u5728\u71c3\u70e7--\u6240\u4ee5\u4f60\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\u5230\u5904\u90fd\u662f\uff0c\u4f60\u7684\u91d1\u5c5e\u5757\u5230\u5904\u90fd\u5728\u79fb\u52a8\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u76ae\u5c14\u5df4\u62c9\u4e0a\u7a7a\u7684\u706b\u7403\u5728\u5929\u7a7a\u4e2d\u5e73\u7a33\u5730\u6ed1\u884c\u3002\u8fd9\u4f7f\u5f97\u5b83\u66f4\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u81ea\u7136\u7a7a\u95f4\u7269\u4f53\u3002\u6839\u636eNagle\u7684\u8bf4\u6cd5\uff0c\u84dd\u8272\u8868\u793a\u94c1\u542b\u91cf\u5f88\u9ad8\u3002\u8bb8\u591a\u9668\u77f3--\u5728\u7a7f\u8d8a\u5730\u7403\u5927\u6c14\u5c42\u7684\u706b\u70ed\u65c5\u7a0b\u4e2d\u5e78\u5b58\u4e0b\u6765\u7684\u592a\u7a7a\u5ca9\u77f3--\u542b\u94c1\u91cf\u5f88\u9ad8\u3002\u6839\u636e\u82f1\u56fd\u81ea\u7136\u5386\u53f2\u535a\u7269\u9986\u7684\u8bf4\u6cd5\uff0c\u5176\u4e2d\u4e00\u4e9b\u53ef\u80fd\u662f\u53e4\u4ee3\u5c0f\u884c\u661f\u7684\u6838\u5fc3\u3002\n\u585e\u8036\u65af\u8bf4\uff0c\u8fd9\u4e2a\u706b\u7403\u770b\u8d77\u6765\u4e0e2017\u5e74\u5728\u6fb3\u5927\u5229\u4e9a\u53d1\u73b0\u7684\u53e6\u4e00\u9897\u58ee\u89c2\u7684\u6d41\u661f\u76f8\u4f3c\u30022017\u5e74\u7684\u706b\u7403\u547c\u5578\u7740\u5212\u8fc7\u5929\u7a7a\uff0c\u4f46\u5b83\u6ca1\u6709\u51fb\u4e2d\u5730\u9762\u6216\u5728\u5927\u6c14\u4e2d\u71c3\u70e7\uff0c\u800c\u662f\u53cd\u5f39\u56de\u592a\u7a7a\u3002\u5979\u544a\u8bc9ABC\u65b0\u95fb\uff0c6\u670815\u65e5\u7684\u706b\u7403\u53ef\u80fd\u662f\u53e6\u4e00\u6b21\u5403\u8349\u7684\u906d\u9047\u3002\n\u660e\u4eae\u5230\u53ef\u4ee5\u5f52\u7c7b\u4e3a\u706b\u7403\u7684\u6d41\u661f\u5f88\u5c11\u89c1\uff0c\u4f46\u4e0e\u592a\u7a7a\u5ca9\u77f3\u76f8\u9047\u5374\u5f88\u5e38\u89c1\u3002\u6839\u636e\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u7684\u6570\u636e\uff0c\u6bcf\u5929\u5927\u7ea6\u670948.5\u5428(44000\u516c\u65a4)\u7684\u6d41\u661f\u7269\u8d28\u843d\u5728\u5730\u7403\u4e0a\u3002\u5927\u591a\u6570\u592a\u7a7a\u5ca9\u77f3\u5728\u7a7f\u8fc7\u5730\u7403\u5927\u6c14\u5c42\u65f6\u4f1a\u5b8c\u5168\u89e3\u4f53\u6216\u53d8\u6210\u9e45\u5375\u77f3\u5927\u5c0f\u3002\u5076\u5c14\u4e5f\u4f1a\u6709\u771f\u6b63\u58ee\u89c2\u7684\u5165\u573a\uff1a2013\u5e742\u6708\uff0c\u4e00\u9897\u540e\u6765\u88ab\u79f0\u4e3a\u8f66\u91cc\u96c5\u5bbe\u65af\u514b\u6d41\u661f\u7684\u6d41\u661f\u8fdb\u5165\u4fc4\u7f57\u65af\u4e0a\u7a7a\u7684\u5927\u6c14\u5c42\uff0c\u5e76\u57281908\u5e74\u901a\u53e4\u65af\u5361\u7206\u70b8\u4ee5\u6765\u6700\u5927\u7684\u592a\u7a7a\u7206\u70b8\u4e2d\u7206\u70b8\u3002\u7206\u70b8\u70b8\u6bc1\u4e86\u516d\u4e2a\u4e0d\u540c\u57ce\u5e02\u5efa\u7b51\u7269\u7684\u7a97\u6237\u3002\n\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\uff0c\u60a8\u53ef\u4ee5\u8ba2\u9605\u6211\u4eec\u4efb\u4f55\u7545\u9500\u7684\u79d1\u5b66\u6742\u5fd7\uff0c\u6bcf\u6708\u53ea\u97002.38\u7f8e\u5143\uff0c\u5373\u524d\u4e09\u4e2a\u6708\u7684\u6807\u51c6\u4ef7\u683c\u670945%\u7684\u6298\u6263\u3002\u89c6\u56fe\u4ea4\u6613", "note_en": "A streak of blue light that flashed across the sky on Monday surprised western Australia&#39;s night owls and befuddled the astronomy community.\n The blue fireball was seen at 1 a.m. local time on June 15, according to   ABC News Pilbara. &#34;It was really a spectacular observation,&#34; Glen Nagle, the education and outreach manager at the CSIRO-NASA tracking station in Canberra, told the news agency. Sightings were reported across the remote Pilbara region as well as in the country&#39;s Northern Territory and in South Australia, Nagle said.\n  Many observers caught the phenomenon on video. The fireball streaks steadily across the sky. At first, it appears orange or yellow, with a short tail streaming behind it. After a few seconds, the bulk of the fireball lights up blue.\n  Scientists aren&#39;t quite sure what object was burning up in the atmosphere to create the brilliant light show, according to ABC News. Some amateur astronomers speculated that the object could be human-made debris, perhaps from a recent rocket launch. But that seems unlikely, Renae Sayers, a research ambassador at Curtin University&#39;s Space Science and Technology Centre, told the news agency.\n  A fireball flashes across the night sky in Western Australia\u2019s remote Pilbara pic.twitter.com/UF9JqNIRiR June 16, 2020\n When space junk reenters the atmosphere, &#34;what we tend to see is sort of like crackles and sparks,&#34; Sayers said. &#34;This is due to the fact that there is stuff burning up \u2014 so you&#39;ve got solar panels going all over the place, you&#39;ve got hunks of metal moving around.&#34;\n The fireball over Pilbara, on the other hand, glided smoothly through the sky. That makes it more likely to be a natural space object. The blue color, according to Nagle, indicates a high   iron content. Many   meteorites \u2014 space rocks that survive their fiery trip through Earth&#39;s atmosphere \u2014 are high in iron. Some may be the cores of ancient asteroids,   according to the Natural History Museum in the U.K.\n Sayers said that the fireball looked similar to another spectacular meteor sighted in Australia in 2017. That 2017 fireball whooshed across the sky, but instead of hitting the ground or burning up in the atmosphere, it   bounced back into space. The June 15 fireball may have been another grazing encounter, she told ABC News.\n Meteors bright enough to be classified as fireballs are rare, but encounters with space rocks are common.   According to NASA, about 48.5 tons (44,000 kilograms) of meteor material falls on   Earth every day. Most space rocks disintegrate entirely or are the size of a pebble by the time they make it through Earth&#39;s atmosphere. Occasionally, one makes a truly spectacular entrance: In February 2013, a meteor that would become known as the Chelyabinsk meteor entered the atmosphere over Russia and exploded in the   biggest space blast since the 1908 Tunguska explosion. The explosion blew out windows in buildings in six different cities.\n   For a limited time, you can take out a digital subscription to any of  our best-selling science magazines for just $2.38 per month, or 45% off the standard price for the first three months. View Deal", "posttime": "2020-06-17 00:14:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0a\u7a7a,fireball,\u706b\u7403", "title": "\u897f\u6fb3\u5927\u5229\u4e9a\u4e0a\u7a7a\u84dd\u8272\u706b\u7403\u6761\u7eb9", "title_en": "Blue fireball streaks above Western Australia", "transed": 1, "url": "https://www.livescience.com/mysterious-fireball-pilbara.html", "via": "", "real_tags": ["\u4e0a\u7a7a", "fireball", "\u706b\u7403"]}, {"category": "", "categoryclass": "", "imagename": "b87188d93e88c4f4373ce4327a85a111.jpeg", "infoid": 1006820, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u82f1\u683c\u5170\u7684\u5e03\u91cc\u65af\u6258\u5c14\u5230\u963f\u62c9\u5df4\u9a6c\u5dde\u7684\u4f2f\u660e\u7ff0\uff0c\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u5e94\u5bf9\u79cd\u65cf\u4e3b\u4e49\u7684\u9057\u4ea7\uff0c\u5728\u95ee\u9898\u53e4\u8ff9\u7684\u5934\u4e0a\u629b\u51fa\u4ed6\u4eec\u7684\u683c\u6597\u94a9\u5b50\u3002\n\u5982\u679c\u4f60\u78b0\u5de7\u53d1\u73b0\u81ea\u5df1\u9760\u8fd1\u4e00\u5ea7\u4f60\u51b3\u5b9a\u4e0d\u518d\u559c\u6b22\u7684\u96d5\u50cf\uff0c\u6211\u4eec\u5411\u79d1\u5b66\u5bb6\u8bf7\u6559\u4e86\u6700\u597d\u3001\u6700\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u8ba9\u5b83\u843d\u5730\u800c\u4e0d\u4f1a\u6709\u4eba\u53d7\u4f24-\u5f53\u7136\uff0c\u9664\u4e86\u5df2\u7ecf\u6b7b\u4e86\u4e00\u4e2a\u4e16\u7eaa\u7684\u6b7b\u6c14\u6c89\u6c89\u7684\u79cd\u65cf\u4e3b\u4e49\u8005\u3002\n\u673a\u68b0\u5de5\u7a0b\u5e08\u65af\u79d1\u7279\u00b7\u970d\u5170\u5fb7(Scott Holland)\u8868\u793a\uff0c\u63a8\u5012\u96d5\u50cf\u6240\u9700\u7684\u529b\u6ca1\u6709\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u5927\u3002\u5927\u591a\u6570\u96d5\u50cf\u90fd\u662f\u9752\u94dc\u7684\uff0c\u4f7f\u752890%\u7684\u94dc\u548c10%\u7684\u9521\u7684\u5408\u91d1\uff0c\u6700\u5927\u539a\u5ea6\u4e3a3/16\u82f1\u5bf8\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u81ea\u7531\u5973\u795e\u50cf\u7684\u94dc\u677f\u539a\u5ea6\u53ea\u67093/32\u82f1\u5bf8\u3002\n\u970d\u5170\u5fb7\u8bf4\uff0c\u4e00\u4e2a\u4eba\u7684\u5e73\u5747\u96d5\u50cf\u6700\u9ad8\u53ef\u8fbe3500\u78c5\u5de6\u53f3\u3002(\u4ec5\u4f9b\u53c2\u8003\uff1a\u4e00\u5c0a\u9a6c\u96d5\u50cf\u7ea6\u91cd7000\u78c5\u3002)\u3002\u4e0e\u6b64\u540c\u65f6\uff0cOSHA\u89c4\u5b9a\u7684\u6bcf\u4eba\u6c34\u5e73\u62c9\u529b\u7684\u4e0a\u9650\u662f50\u78c5-\u201c\u4f46\u8fd9\u662f\u4e3a\u4e86\u6bcf\u5929\u5de5\u4f5c\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6240\u4ee5\u4f60\u53ef\u80fd\u4f1a\u505a\u4e24\u500d\u3002\u201d\n\u970d\u5170\u5fb7\u8bf4\uff0c\u5728100\u78c5\u7684\u529b\u91cf\u4e0b\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u4e00\u987935\u4eba\u7684\u5de5\u4f5c\u6765\u62d6\u62fd\u96d5\u50cf\u3002\u4f46\u8981\u628a\u5b83\u62c9\u4e0b\u6765\uff0c\u201c\u8ba9\u6211\u4eec\u5047\u8bbe\u529b\u91cf\u662f\u539f\u6765\u7684\u4e24\u500d--\u6240\u4ee5\u4f60\u9700\u8981\u4e24\u500d\u7684\u4eba\u3002\u201d\u6240\u4ee5\u5728\u4f60\u5f00\u59cb\u5012\u53f0\u4e4b\u524d\uff0c\u4f60\u6700\u597d\u62db\u52df70\u4e2a\u6709\u70b9\u808c\u8089\u7684\u670b\u53cb\u3002\n\u65e2\u7136\u4f60\u6709\u8239\u5458\u4e86\uff0c\u4f60\u5c31\u9700\u8981\u5408\u9002\u7684\u5de5\u5177\u3002\u970d\u5170\u5fb7\u5efa\u8bae\u6293\u8d77\u51e0\u67614x4\u6062\u590d\u5e26\uff0c\u8fd9\u79cd\u5e26\u7684\u989d\u5b9a\u91cd\u91cf\u53ef\u4ee5\u8d85\u8fc73.2\u4e07\u78c5\uff0c\u8fdc\u6ca1\u6709\u94fe\u5b50\u90a3\u4e48\u7b28\u91cd\u3002\u970d\u5170\u5fb7\u8bf4\uff0c\u4e00\u65e6\u4f60\u88c5\u5907\u5f97\u5f53\uff0c\u4f60\u5c31\u60f3\u8981\u5f97\u5230\u6760\u6746\u4f5c\u7528\uff0c\u201c\u6240\u4ee5\u4f60\u9700\u8981\u628a\u5e26\u5b50\u7ed1\u5728(\u96d5\u50cf\u7684)\u5934\u6216\u8116\u5b50\u4e0a\u3002\u201d\n\u8981\u5c06\u96d5\u50cf\u4ece\u5e95\u5ea7\u4e0a\u6253\u7834\uff0c\u8bf7\u5728\u4e24\u8fb9\u5206\u6210\u4e24\u4e2a\u5c0f\u7ec4\uff0c\u6765\u56de\u5de5\u4f5c\u3002\u970d\u5170\u5fb7\u8bf4\uff0c\u5927\u591a\u6570\u96d5\u50cf\u90fd\u9644\u7740\u5728\u5e95\u5ea7\u4e0a2\u52303\u82f1\u5c3a\u957f\u7684\u94a2\u7b4b\u4e0a\uff0c\u6240\u4ee5\u4f60\u5b9e\u9645\u4e0a\u662f\u5728\u94a2\u7b4b\u4e0a\u65b9\u7684\u9752\u94dc\u5904\u6298\u65ad\u5b83\uff0c\u800c\u4e0d\u662f\u94a2\u7b4b\u672c\u8eab\u3002(\u90a3\u662f\u94a2\u6750\u3002)\u3002\u4ed6\u8bf4\uff1a\u201c\u5f53\u7f8e\u56fd\u62c6\u9664\u8428\u8fbe\u59c6\u00b7\u4faf\u8d5b\u56e0\u7684\u96d5\u50cf\u65f6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u5728\u5e95\u90e8\u94a2\u7b4b\u5904\u6298\u53e0\u3002\u201d\n\u6bd4\u65b9\u8bf4\u4f60\u627e\u4e0d\u523070\u4e2a\u670b\u53cb\u3002\u5982\u679c\u4f60\u8fd8\u60f3\u7528\u4e00\u652f\u89c4\u6a21\u8f83\u5c0f\u7684\u6e05\u9664\u5c0f\u5206\u961f\u6765\u5c1d\u8bd5\u8fd9\u4e00\u70b9\uff0c\u4f60\u5fc5\u987b\u524a\u5f31\u7eaa\u5ff5\u7891\u672c\u8eab\u7684\u529b\u91cf\u3002\u8fd9\u5c31\u662f\u6e29\u5ea6\u7684\u7528\u6b66\u4e4b\u5730\u3002\n\u5c48\u670d\u5f3a\u5ea6\u968f\u6e29\u5ea6\u53d8\u5316\u5f88\u5927\u3002\u4f8b\u5982\uff0c\u4e00\u5ea790%\u7684\u94dc/10%\u7684\u9521\u96d5\u50cf\u5728\u5ba4\u6e29\u4e0b\u7684\u5c48\u670d\u5f3a\u5ea6\u4e3a31.4\u5146\u5e15\u65af\u5361-\u76f8\u6bd4\u4e4b\u4e0b\uff0c6061\u94dd\u7684\u5c48\u670d\u5f3a\u5ea6\u4e3a275\u5146\u5e15-\u201c\u6240\u4ee5\u4ece\u7ed3\u6784\u4e0a\u8bb2\uff0c\u201d\u970d\u5170\u5fb7\u8bf4\uff0c\u201c\u5b83\u4e0d\u96be\u6253\u7834\u3002\u201d\n35\u4eba\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u5c06\u96d5\u50cf\u7684\u5c48\u670d\u5f3a\u5ea6\u901a\u8fc7\u52a0\u70ed\u5c06\u5176\u51cf\u534a\u3002\u4f60\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u5bf9\u4e8e\u4e00\u5c0a\u9752\u94dc\u96d5\u50cf\uff0c\u4f60\u7684\u76ee\u6807\u6e29\u5ea6\u662f450\u6444\u6c0f\u5ea6\u5de6\u53f3\uff0c\u6216842\u534e\u6c0f\u5ea6\u3002\u201c\u4f60\u53ef\u4ee5\u7528\u4e01\u70f7\u706b\u70ac\uff0c\u201d\u970d\u5170\u5fb7\u8bf4\uff0c\u201c\u4f46\u7528\u4e19\u70f7\u706b\u70ac\u4f1a\u5feb\u5f97\u591a\u3002\u90a3\u4e9b\u66f4\u70eb\u3002\u4f60\u4f1a\u5728\u90a3\u91cc\u5f85\u4e0a15\u523020\u5206\u949f\uff0c\u4f46\u8fd9\u8981\u5bb9\u6613\u5f97\u591a\u3002\u201c\u3002\n\u53ea\u8981\u786e\u4fdd\u4f60\u4f7f\u7528\u4e86\u9002\u5f53\u7684\u9632\u62a4\u88c5\u5907\uff0c\u5e76\u786e\u4fdd\u96d5\u50cf\u5760\u843d\u65f6\u6ca1\u6709\u4eba\u5728\u4e0b\u9762\u5c31\u884c\u4e86\u3002\u8fd9\u610f\u5473\u7740\u8981\u4f7f\u7528\u4e00\u6839\u957f\u7ef3\u5b50\uff0c\u4ee5\u786e\u4fdd\u7ef3\u5b50\u4e0a\u7684\u7b2c\u4e00\u4e2a\u4eba\u79bb\u96d5\u50cf\u7684\u8ddd\u79bb\u6bd4\u96d5\u50cf\u7684\u9ad8\u5ea6\u66f4\u8fdc\u3002\u4f7f\u7528\u8fd9\u4e2a\u65b9\u4fbf\u7684\u6bd5\u8fbe\u54e5\u62c9\u65af\u4e09\u89d2\u5f62\u8ba1\u7b97\u5668\u6765\u5e2e\u52a9\u4f60\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e5f\u8bb8\u4f60\u662f\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u56e2\u961f\u4e2d\u8fd0\u4f5c-\u6216\u8005\uff0c\u4fdd\u4f51\u4f60\u7684\u7075\u9b42\uff0c\u4f60\u81ea\u5df1\u4e00\u4e2a\u4eba\u63a8\u5012\u96d5\u50cf\u3002\u90a3\u6837\u7684\u8bdd\uff0c\u4f60\u6700\u597d\u7684\u9009\u62e9\u5c31\u662f\u878d\u5316\u8fd9\u8be5\u6b7b\u7684\u4e1c\u897f\u3002\u6211\u4eec\u6765\u505a\u4e2a\u94dd\u70ed\u5242\u53cd\u5e94\u3002\n\u201c\u516c\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u201d\u5723\u5730\u4e9a\u54e5\u5dde\u7acb\u5927\u5b66\u5316\u5b66\u6559\u6388\u514b\u91cc\u65af\u00b7\u54c8\u91cc\u68ee(Chris Harrison)\u8bf4\u3002\u201c\u94c1\u9508\u548c\u94dd\u7c89\u7684\u8d28\u91cf\u6bd4\u662f3\uff1a1\u3002\u4f60\u628a\u5b83\u4eec\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u7528\u4e00\u5757\u9541\u4f5c\u4e3a\u9ad8\u6e29\u4fdd\u9669\u4e1d\u3002\u5982\u679c\u4f60\u6ca1\u6709\uff0c\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u6c7d\u6c34\u3002\u201c\u3002\n\u5047\u8bbe\u7684\u9752\u94dc\u96d5\u50cf\u7684\u7194\u70b9\u662f1,742\u534e\u6c0f\u5ea6\uff0c\u4f46\u5373\u4f7f\u4f60\u9047\u5230\u79cd\u65cf\u4e3b\u4e49\u7684\u94dc\u94f8\u4ef6(\u7194\u70b9\uff1a1,984\u5ea6)\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u94dd\u70ed\u5242\u7194\u5316\u4e24\u8005\uff0c\u56e0\u4e3a\u5b83\u7684\u71c3\u70e7\u6e29\u5ea6\u4e3a2500\u534e\u6c0f\u5ea6\u3002\n\u867d\u7136\u94dd\u70ed\u5242\u53ef\u80fd\u71c3\u70e7\u7684\u70ed\u91cf\u51e0\u4e4e\u662f\u592a\u9633\u7684\u4e00\u534a\uff0c\u4f46\u5b83\u4e0d\u662f\u7206\u70b8\u6027\u7684\u3002\u201c\u4f60\u53ef\u4ee5\u7528\u5851\u6599\u6216\u91d1\u5c5e\u6876\u628a\u94dd\u70ed\u5242\u5305\u5728(\u96d5\u50cf\u7684)\u811a\u8e1d\u4e0a\uff0c\u53bb\u6389\u5e95\u5ea7\uff0c\u201d\u54c8\u91cc\u68ee\u8bf4\u3002\u201c\u4f60\u53ef\u4ee5\u628a\u6c34\u6876\u7684\u4e24\u534a\u5012\u8fc7\u6765\uff0c\u653e\u5728\u811a\u7684\u4e24\u8fb9\uff0c\u7136\u540e\u628a\u94dd\u70ed\u5242\u5012\u8fdb\u53bb\uff0c\u5c3d\u53ef\u80fd\u5730\u628a\u5b83\u538b\u5f97\u4e25\u4e25\u5b9e\u5b9e\u3002\u201d\u5f00\u653e\u7684\u7a7a\u95f4\u8d8a\u5927\uff0c\u53cd\u5e94\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\u3002\u201c\u3002\n\u54c8\u91cc\u68ee\u8bf4\uff0c\u4e00\u65e6\u4f60\u7194\u5316\u4e86\u96d5\u50cf\u7684\u811a\u8e1d\uff0c\u5b83\u5c31\u4f1a\u5012\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u79cd\u91d1\u5c5e\u53ef\u80fd\u4f1a\u652f\u6491\u5b83\u4e0a\u9762\u7684\u4e00\u5207\u3002\n\u5982\u679c\u4f60\u7684\u6c7d\u6c34\u7528\u5b8c\u4e86\uff0c\u53ef\u4ee5\u4eceAirgas\u6216Praxair\u8fd9\u6837\u7684\u5206\u9500\u5546\u90a3\u91cc\u4e70\u4e00\u4e9b\u6db2\u6c2e\u3002\u7136\u540e\uff0c\u5728\u96d5\u50cf\u4e0a\u94bb\u4e00\u4e2a\u6d1e\uff0c\u628a\u6c2e\u6c14\u5012\u5728\u91cc\u9762\uff0c\u7c89\u788e\u811a\u8e1d\u3002\n\u6216\u8005\u4f60\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u54c8\u91cc\u68ee\u8bf4\u3002\u201c\u5982\u679c\u6db2\u6c2e\u9ad8\u4e8e\u94dd\u70ed\u5242\u7684\u9ad8\u5ea6\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u975e\u5e38\u51b7\u7684\u91d1\u5c5e\uff0c\u5c31\u5728\u4e00\u4e9b\u91d1\u5c5e\u53d8\u5f97\u975e\u5e38\u70ed\u7684\u65c1\u8fb9\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u5e94\u8be5\u4f1a\u5f15\u8d77\u5f88\u5927\u7684\u70ed\u5e94\u53d8\uff0c\u5f88\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91d1\u5c5e\u5728\u8be5\u533a\u57df\u5f00\u88c2\u3002\u201d\n\u53ea\u8981\u628a\u90a3\u4e2a\u6d1e\u4fdd\u6301\u5728\u4f60\u7684\u94dd\u70ed\u5242\u4e0a\u65b9\uff0c\u5426\u5219\u4f60\u4f1a\u628a\u70ed\u5f97\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u7194\u878d\u91d1\u5c5e\u55b7\u5230\u7a7a\u6c14\u4e2d\u3002\n\u54c8\u91cc\u68ee\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u597d\u5904\uff1a\u6db2\u6c2e\u4f1a\u5f88\u5feb\u53d8\u6210\u6c14\u4f53\uff0c\u4ece\u4f60\u94bb\u7684\u90a3\u4e2a\u6d1e\u91cc\u55b7\u51fa\u6765\uff0c\u8fd9\u51e0\u4e4e\u80af\u5b9a\u4f1a\u5f15\u8d77\u9ad8\u97f3\u5c16\u53eb\u3002\u201c\u4eba\u4eec\u53ef\u4ee5\u60f3\u8c61\uff0c\u8fd9\u58f0\u97f3\u542c\u8d77\u6765\u6709\u70b9\u50cf\u90a6\u8054\u5c06\u519b\u7684\u811a\u7740\u706b\u65f6\u53d1\u51fa\u7684\u58f0\u97f3\u3002\u201d\n\u6b64\u5185\u5bb9\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u4ee5\u5e2e\u52a9\u7528\u6237\u63d0\u4f9b\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728piano.io\u4e0a\u627e\u5230\u6709\u5173\u6b64\u5185\u5bb9\u548c\u7c7b\u4f3c\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u6b64\u8bc4\u8bba\u533a\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u3002\u4f60\u53ef\u4ee5\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u627e\u5230\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "From  Bristol, England to  Birmingham, Alabama, people all over the world have been grappling with the  legacy of racism by tossing their grappling hooks around the heads of  problematic monuments.\n Should you happen to find yourself near a statue that you decide you no longer like, we asked scientists for the best, safest ways to bring it to the ground without anyone getting hurt\u2014except, of course, for the inanimate racist who\u2019s been dead for a century anyway.\n   The force required to pull down a statue isn\u2019t as great as you think, says mechanical engineer Scott Holland. Most statues are bronze, using an alloy of 90 percent copper and 10 percent tin and a maximum thickness of 3/16 of an inch. The   Statue of Liberty\u2019s copper sheeting is only 3/32 of an inch thick, for comparison.\n Holland says your average statue of a person tops out at around 3,500 pounds. (FYI: A horse statue is approximately 7,000 pounds.) Meanwhile, the   OSHA-mandated upper force limit for horizontal pulling per person is 50 pounds of force\u2014\u201cbut that\u2019s for working every day,\u201d he says, \u201cso you could probably do twice that.\u201d\n At 100 pounds of force, then, we\u2019re talking about a 35-person job to drag the statue, Holland says. But to pull it down, \u201clet\u2019s assume twice the force\u2014so you\u2019ll need twice as many people.\u201d So before you start toppling, you\u2019d better recruit 70 buddies with a bit of muscle.\n Now that you have your crew, you\u2019ll need the right tools. Holland suggests grabbing a few   4x4 recovery straps, which can be rated to over 32,000 pounds and are far less cumbersome than a chain. Once you\u2019re properly equipped, you want to get leverage, Holland says, \u201cso you need to get the straps around the head or the neck [of the statue].\u201d\n To break the statue from its base, split into two teams on either side and work in a back-and-forth motion. Most statues are attached to the base by 2 to 3 feet of rebar, so you\u2019ll actually be breaking it at the bronze above the rebar\u2014 not the rebar itself, says Holland. (That\u2019s steel.) \u201cWhen the U.S.   took down that statue of Saddam Hussein, you can see it folds at that spot where the rebar is in the base of it,\u201d he says.\n  Let\u2019s say you can\u2019t find 70 friends. If you still want to attempt this with a smaller removal squad, you have to weaken the monument itself. That\u2019s where temperature comes in.\n Yield strength changes a lot with temperature. A 90 percent copper/10 percent tin statue, for example, will have a yield strength at room temperature of 31.4 megapascals\u2014that\u2019s compared to 275 MPa for 6061 aluminum\u2014\u201cso structurally,\u201d Holland says, \u201cit\u2019s not hard to break.\u201d\n  With 35 people, you need to cut the statue\u2019s yield strength in half by heating it up. And how do you do that? For a bronze statue,  your target temperature is around 450 degrees Celsius, or 842 degrees Fahrenheit. \u201cYou could use a butane torch,\u201d says Holland, \u201cbut it would be much quicker with a propane torch. Those burn hotter. You\u2019ll be there for 15 to 20 minutes, but it\u2019s a lot easier.\u201d\n Just make sure you use the proper protective equipment and look to see that nobody is underneath the statue when it falls. That means using a long rope to make sure the first person on the rope is farther away from the statue than the statue is tall. Use this handy   Pythagorean triangle calculator to help figure that out.\n   Maybe you\u2019re operating with an even smaller team\u2014or, bless your soul, toppling the statue all by yourself. In that case, your best bet is melting the damn thing. So let\u2019s make a thermite reaction.\n \u201cThe formula is very simple,\u201d says Chris Harrison, a chemistry professor at San Diego State University. \u201cIt\u2019s 3:1 by mass of rust and aluminum powder. You mix those together and use a piece of magnesium to use as a high temperature fuse. And if you don\u2019t have one, you could use a sparkler.\u201d\n  The melting point of the hypothetical bronze statue is 1,742 degrees Fahrenheit, but even if you come across a racist cast in copper (melting point: 1,984 degrees), you can still easily melt both with thermite, as it burns at 2,500 degrees.\n While thermite might burn nearly half as hot as the sun, it isn\u2019t explosive. \u201cYou could pack the thermite around [the statue\u2019s] ankles using a plastic or metal bucket with the base removed,\u201d Harrison says. \u201cYou could invert the halves of the bucket and place them on either side of the feet, and then pour in the thermite, packing it down as best as possible. The more open space there is, the less efficient the reaction will be.\u201d\n  Once you melt the statue\u2019s ankles, it should just fall over, Harrison says, as that metal likely supports everything above it.\n  If you\u2019re out of sparklers, snag some liquid nitrogen from a distributor like Airgas or Praxair. Then, drill a hole in the statue and pour the nitrogen inside to shatter the ankles.\n Or you could combine the two, says Harrison. \u201cIf the liquid nitrogen is above the height of the thermite, you\u2019ll have some very cold metal, right next to some metal getting very hot,\u201d he says. \u201cThis should induce a lot of thermal strain, likely causing the metal to crack in that region.\u201d\n Just keep that hole way above your thermite, or you\u2019ll be spraying incredibly hot molten metal into the air.\n  And here\u2019s a fun bonus: The liquid nitrogen will quickly turn to a gas and come shooting out of that hole you drilled, says Harrison, which will almost certainly cause a high-pitched squeal. \u201cOne could imagine it sounding something like the sound a confederate general would make if their feet were on fire.\u201d\n   This content is created and maintained by a third party, and imported onto this page to help users provide their email addresses. You may be able to find more information about this and similar content at piano.io\n   This commenting section is created and maintained by a third party, and imported onto this page. You may be able to find more information on their web site.", "posttime": "2020-06-16 23:55:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u5012,statue,\u96d5\u50cf", "title": "\u5982\u4f55\u7528\u79d1\u5b66\u63a8\u5012\u96d5\u50cf", "title_en": "How to Topple a Statue Using Science", "transed": 1, "url": "https://www.popularmechanics.com/science/a32870657/remove-statue-science/", "via": "", "real_tags": ["\u63a8\u5012", "statue", "\u96d5\u50cf"]}, {"category": "", "categoryclass": "", "imagename": "64f792b778acfccbf5f64e6ca4044b24.png", "infoid": 1006819, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u70b9\u4e0d\u53d7\u6b22\u8fce\u7684\u89c2\u70b9\uff0c\u6240\u4ee5\u70b9\u51fb\u8bf1\u9975\u6807\u9898\u5e94\u8be5\u662f\u5408\u9002\u7684\uff01\u4ece1.6\u7248\u5f00\u59cb\uff0c\u6211\u5df2\u7ecf\u5b66\u4e60\u548c\u4f7f\u7528Rust\u5c06\u8fd1\u56db\u5e74\u534a\u4e86\u3002\u5bf9\u4e8e\u719f\u6089\u8bed\u8a00\u3001\u5de5\u5177\u548c\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u4e9b\u95ee\u9898\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u6bb5\u5f88\u957f\u7684\u65f6\u95f4\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u7565\u6709\u4e0d\u540c\u7684\u6545\u4e8b\uff0c\u8fd9\u662f\u5bf9\u7f16\u8bd1\u5668\u901f\u5ea6\u6162\u7684\u5e38\u89c1\u6279\u8bc4\u7684\u5f02\u8bae\u3002\u5728\u8fd9\u6b21\u8ba8\u8bba\u4e2d\uff0c\u6211\u5c06\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u4e9b\u8bf4\u6cd5\u5145\u5176\u91cf\u53ea\u662f\u8bef\u5bfc\u3002\u6709\u5927\u91cf\u8bc1\u636e\u8868\u660e\uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u76f8\u6bd4\uff0cRustc\u901f\u5ea6\u8f83\u6162\uff1bGo\u53ef\u4ee5\u5728\u4e94\u5206\u4e4b\u4e00\u7684\u65f6\u95f4\u5185\u7f16\u8bd1\u5177\u6709\u7c7b\u4f3c\u590d\u6742\u6027\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cClang\u6216GCC\u53ef\u4ee5\u4e3aC\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u53ef\u4ee5\u63a5\u53d7\u7684\u662f\uff0c\u53ef\u4ee5\u8bc1\u660eRUST\u5b8f\u548c\u7c7b\u578b\u7cfb\u7edf\u6bd4\u901a\u5e38\u7528GO\u6216C\u7f16\u5199\u7684\u8981\u590d\u6742\u5f97\u591a\uff0c\u8fd9\u9700\u8981RUST\u7f16\u8bd1\u5668\u627f\u62c5\u66f4\u5927\u7684\u8d1f\u62c5\u3002\u867d\u7136\u8fd9\u79cd\u60c5\u7eea\u6709\u4e00\u5b9a\u7684\u9053\u7406\uff0c\u4f46\u6211\u76f8\u4fe1\u8fd8\u6709\u66f4\u591a\u7684\u539f\u56e0\u3002\u6211\u8ba4\u4e3a\uff0c\u4e0e\u5176\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7b97\u6cd5\u95ee\u9898\uff0c\u4e0d\u5982\u8bf4\u662f\u4e00\u4e2a\u4eba\u7c7b\u95ee\u9898\u3002\n\u6211\u7ecf\u5e38\u5149\u987eURLO\uff0c\u65f6\u4e0d\u65f6\u5730\u5e2e\u52a9\u56de\u7b54\u95ee\u9898\u3002\u6211\u4e3b\u8981\u7528\u5b83\u6765\u5438\u6536\u4fe1\u606f\uff0c\u5b66\u4e60\u8fd9\u79cd\u8bed\u8a00\u548c\u56f4\u7ed5\u5b83\u7684\u66f4\u5927\u7684\u751f\u6001\u7cfb\u7edf\u3002\u6211\u6709\u65f6\u4e5f\u516c\u5f00\u53cd\u5bf9\u80a5\u80d6\uff0c\u6211\u60f3\u901a\u8fc7\u8fd9\u7bc7\u6587\u7ae0\u7ee7\u7eed\u63d0\u9ad8\u4eba\u4eec\u7684\u610f\u8bc6\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u7b80\u77ed\u5730\u7ed5\u9053\u6765\u8003\u5bdf\u4e00\u4e0b\u5386\u53f2\u80cc\u666f\u4e0b\u7684\u8f6f\u4ef6\u81a8\u80c0\u3002\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u6c83\u65af\u5b9a\u5f8b\uff0c\u5b83\u5b9e\u8d28\u4e0a\u8bf4\uff0c\u8f6f\u4ef6[\u5f00\u53d1\u8005]\u901a\u8fc7\u586b\u8865\u7a7a\u767d\u6765\u62b5\u6d88\u786c\u4ef6\u6027\u80fd\u4e0a\u7684\u6240\u6709\u8fdb\u6b65\u3002\u8bf7\u9605\u8bfbNiklaus Wirth\u7684\u8bba\u6587\u201c\u7cbe\u76ca\u8f6f\u4ef6\u7684\u6073\u6c42\u201d\uff0c\u8fd9\u662f\u975e\u5e38\u503c\u5f97\u7684\u3002\u8fd9\u7edd\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u6216\u72ec\u7279\u7684\u89c2\u5bdf\u7ed3\u679c\u3002\u7ee7\u7eed\u63a2\u7d22\u8fd9\u6761\u81c3\u80bf\u7684\u9053\u8def\uff0c\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u63a2\u7d22\u90fd\u4f1a\u5bf9\u8bfb\u8005\u9020\u6210\u4f24\u5bb3\uff0c\u56e0\u4e3a\u5b83\u504f\u79bb\u4e86\u6211\u7684\u4e3b\u8981\u89c2\u70b9\u3002\u4f46\u8fd9\u662f\u53e6\u4e00\u4e2a\u57fa\u672c\u95ee\u9898\u7684\u4f8b\u5b50\uff0c\u90a3\u5c31\u662f\u4eba\u7c7b\u662f\u795e\u79d8\u7684\uff0c\u4eba\u7c7b\u7684\u884c\u4e3a\u751a\u81f3\u66f4\u4e0d\u6e05\u695a\u3002\n\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u5728\u7f16\u5199\u8f6f\u4ef6\u65f6\u90fd\u4f1a\u6743\u8861\u65f6\u95f4\u3002\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u552f\u4e00\u771f\u6b63\u7684\u76ee\u6807\u662f\u89e3\u51b3\u7279\u5b9a\u7684\u95ee\u9898\u3002\u6bd4\u65b9\u8bf4\u739b\u4e3d\u5728\u505a\u4e00\u4e2a\u6e38\u620f\uff0c\u5979\u6ca1\u6709\u65e0\u9650\u7684\u65f6\u95f4\u6765\u5b8c\u5584\u8fd9\u4e2a\u6e38\u620f\uff0c\u4f46\u5979\u53ef\u4ee5\u5728\u5408\u7406\u7684\u65f6\u95f4\u6846\u67b6\u5185\u5b8c\u6210\u4e00\u4e9b\u5408\u7406\u7684\u4e8b\u60c5\u3002\u739b\u4e3d\u77e5\u9053\u5979\u5269\u4e0b\u7684\u5fc3\u8df3\u662f\u6709\u9650\u7684\uff0c\u8fd9\u662f\u6fc0\u52b1\u751f\u6d3b\u672c\u8eab\u7684\u8d27\u5e01\uff0c\u6240\u4ee5\u5979\u4f1a\u660e\u667a\u5730\u5229\u7528\u8fd9\u4e9b\u5fc3\u8df3\uff0c\u5ffd\u7565\u7ec6\u8282\uff0c\u4e13\u6ce8\u4e8e\u624b\u5934\u7684\u95ee\u9898\u3002\u8fd9\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\uff01\u4e00\u6b3e\u6e38\u620f\u5236\u4f5c\u5b8c\u6210\uff0c\u5979\u5c31\u53ef\u4ee5\u7ee7\u7eed\u521b\u4f5c\u5979\u7684\u4e0b\u4e00\u4e2a\u5927\u70ed\u95e8\u4e86\u3002\n\u4f46\u5b83\u5bf9\u4ea7\u54c1\u7684\u5185\u90e8\u7ed3\u6784\u8bf4\u4e86\u4e9b\u4ec0\u4e48\u5462\uff1f\u5b83\u505a\u4e86\u4ec0\u4e48\u6d6a\u8d39\u7684\u4e8b\u5417\uff1f\u80fd\u4e0d\u80fd\u628a\u5b83\u505a\u5f97\u66f4\u6709\u6548\u7387\u4e00\u70b9\uff1f\u4f7f\u7528\u66f4\u5c11\u7684\u80fd\u6e90(\u7279\u522b\u662f\u7535\u6c60\u7535\u6e90)\uff1f\u5f53\u7136\u53ef\u4ee5\uff01\u739b\u4e3d\u6ca1\u6709\u65f6\u95f4\u628a\u5b83\u505a\u5f97\u5c3d\u5584\u5c3d\u7f8e\u3002\u8fd9\u5c31\u662f\u6211\u8981\u8bb2\u7684\u6545\u4e8b\u3002\n\u6211\u4e4b\u6240\u4ee5\u63cf\u8ff0\u8fd9\u4e2a\u5047\u60f3\u7684\u6e38\u620f\u5f00\u53d1\u8005\u548c\u5979\u7684\u8f6f\u4ef6\uff0c\u662f\u56e0\u4e3a\u6211\u81ea\u5df1\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u6b21\u4e86\u3002\u6211\u5199\u4ee3\u7801\uff0c\u5f53\u6211\u5bf9\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u611f\u5230\u6ee1\u610f\u65f6\uff0c\u6211\u5c31\u4f1a\u8f6c\u79fb\u5230\u5176\u4ed6\u4e8b\u60c5\u4e0a\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7559\u4e0b\u5927\u91cf\u7684\u9762\u5305\u5c51\u3002\u4efb\u4f55\u4eba\u770b\u5230\u8fd9\u79cd\u60c5\u51b5\u90fd\u4f1a\u60ca\u547c\uff0c\u54ce\u5440\uff0c\u771f\u662f\u4e00\u56e2\u7cdf\uff01\u8c01\u4f1a\u8fd9\u4e48\u505a\uff1f\uff01&#34\uff1b\n\u6211\u5f53\u524d\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u5927\u91cf\u4ee3\u7801\u662fPython\u3002\u6bcf\u5929\u6709\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u4eba\u4f9d\u8d56\u5b83\uff0c\u800c\u4e14\u5b83\u7684\u8fd0\u8425\u8d39\u7528\u975e\u5e38\u6602\u8d35\u3002\u5b66\u5230\u7684\u6559\u8bad\u662f\uff0c\u5c3d\u7ba1\u8bed\u8a00\u7684\u9009\u62e9\u53ef\u80fd\u8ba9\u6211\u5feb\u901f\u5730\u5c06\u4e00\u4e2a\u9879\u76ee\u4ece\u6784\u601d\u53d1\u5c55\u5230\u751f\u4ea7\uff0c\u4f46\u957f\u671f\u7684\u8d64\u5b57\u6839\u672c\u4e0d\u503c\u5f97\u65e9\u671f\u5fae\u4e0d\u8db3\u9053\u7684\u6536\u83b7\u3002\u5982\u679c\u591a\u4e2a\u9879\u76ee\u7528\u5ba2\u89c2\u4e0a\u5f88\u6162\u7684\u8bed\u8a00\u7f16\u5199\uff0c\u4f7f\u7528\u5ba2\u89c2\u4e0a\u4e0d\u597d\u7684\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u60a8\u4f1a\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u9879\u76ee\uff1f\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5728JIT\u7f16\u8bd1\u5668\u4e0b\u8fd0\u884c\u5b83\u4eec\uff01\u5982\u679c\u5b83\u5fc5\u987b\u5ba2\u89c2\u4e0a\u5f88\u6162\uff0c\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u901a\u8fc7\u4e00\u70b9\u79ef\u6781\u7684\u7f16\u8bd1\u5668\u4f18\u5316\u6765\u5f25\u8865\u4e00\u4e9b\u4e25\u91cd\u7684\u6548\u7387\u635f\u5931\u3002\n\u8fd9\u7ec8\u4e8e\u5f15\u51fa\u4e86\u6211\u7684\u89c2\u70b9\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5e76\u4e0d\u5b8c\u7f8e\uff0c\u5728\u5982\u4f55\u5229\u7528\u4ed6\u4eec\u7684\u5fc3\u8df3\u65b9\u9762\u505a\u51fa\u660e\u667a\u7684\u51b3\u5b9a\uff0c\u4ed6\u4eec\u901a\u8fc7\u5229\u7528\u524d\u4eba\u7f16\u5199\u7684\u8f6f\u4ef6\u6765\u6784\u5efa\u8f6f\u4ef6\u3002\u5728\u8fd9\u91cc\u9009\u62e9\u4e00\u79cd\u8bed\u8a00\u548c\u7f16\u8bd1\u5668\uff0c\u5728\u90a3\u91cc\u6dfb\u52a0\u5c11\u91cf\u7684\u5e93\u548c\u4f9d\u8d56\u9879\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u60a8\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u4f46\u5f53\u7136\uff0c\u5728\u4f60\u5236\u9020\u81f3\u5c11\u4e00\u4e2a\uff0c\u4e5f\u8bb8\u662f\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\u4e4b\u524d\uff0c\u4f60\u662f\u4e0d\u4f1a\u8fd9\u6837\u505a\u7684\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u51b3\u5b9a\u4e0d\u662f\u51fa\u4e8e\u61d2\u60f0\uff0c\u800c\u662f\u51fa\u4e8e\u5fc5\u8981\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u5728\u4f18\u5316\u4ee3\u7801\u4e0a\u6295\u5165\u4e86\u5927\u91cf\u7cbe\u529b\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u518d\u600e\u4e48\u8d5e\u626c\u4e5f\u4e0d\u4e3a\u8fc7\u3002\u4e25\u683c\u7684\u57fa\u51c6\u6d4b\u8bd5\u548c\u6027\u80fd\u5206\u6790\uff0c\u5bc6\u5207\u5173\u6ce8CPU\u5468\u671f\u548c\u5806\u5757\u7684\u53bb\u5411\uff0c\u5e76\u63a7\u5236\u8fc7\u9ad8\u7684\u4ee3\u7801\u8def\u5f84\u3002\u6211\u4eec\u5728\u5f88\u591a\u5730\u65b9\u90fd\u53ef\u4ee5\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u4eceregex\u673a\u7bb1\u5230Actix\u6846\u67b6\uff0c\u4e00\u76f4\u5230\u7f16\u8bd1\u5668\u672c\u8eab\u3002\u5982\u6b64\u591a\u7684\u79ef\u6781\u548c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u58ee\u4e3e\uff0c\u603b\u662f\u9f13\u821e\u4eba\u5fc3\u7684\u3002\n\u6240\u4ee5\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u5df2\u7ecf\u76f8\u5f53\u597d\u4e86\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u56e2\u961f\u81f4\u529b\u4e8e\u63d0\u9ad8\u5b83\u7684\u901f\u5ea6\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u8fd9\u4e48\u591aRust\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5b83\u770b\u8d77\u6765\u8fd9\u4e48\u6162\u5462\uff1f\u6211\u6000\u7591\u8fd9\u4e2a\u6982\u5ff5\u4e3b\u8981\u662f\u7531\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u5f3a\u52a0\u7684\uff0c\u4ed6\u4eec\u5f88\u5feb\u5c31\u5229\u7528\u4e86\u5f15\u5165\u4f9d\u8d56\u9879\u7684\u8f7b\u800c\u6613\u4e3e\u7684\u4f18\u52bf\u3002\u51e0\u4e4e\u6ca1\u6709\u4eba\u62b5\u5236\u4f9d\u8d56\u4e8e\u53c2\u6570\u89e3\u6790\u673a\u7bb1\u4ee3\u7801--\u8fd9\u5c31\u662f\u4e8b\u60c5\u53ef\u80fd\u4f1a\u5f15\u8d77\u4e00\u4e9b\u4e89\u8bae\u7684\u5730\u65b9--\u5b83\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u5360\u636e\u4e86400 KiB(\u5728\u5265\u79bb\u8c03\u8bd5\u7b26\u53f7\u4e4b\u540e)\u3002\u60a8\u7684\u4e8c\u8fdb\u5236\u5927\u5c0f\u7684400 KiB\u5c06\u7528\u4e8e\u53c2\u6570\u89e3\u6790\u5417\uff1f\u54e6\uff0c\u597d\u5427\uff0c\u6211\u53ef\u4ee5\u7b97\u4e86\uff0c400\u57fa\u5e03\u73b0\u5728\u4e0d\u5356\u4e86\u3002\n\u4f46\u662f\u7f16\u8bd1\u65f6\u95f4\u5462\uff1f\u90a3\u8981\u591a\u5c11\u94b1\uff1f\u5982\u679c\u4f60\u770b\u91cd\u4f60\u7684\u5fc3\u8df3\uff0c\u4f60\u53ef\u80fd\u4e0d\u559c\u6b22clap\u82b1\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u7f16\u8bd1\u3002\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\uff0c\u7f16\u8bd120subCommands\u793a\u4f8b\u82b1\u8d39\u4e861\u520614\u79d2\u3002\u800c\u4e14\u8fd9\u4e2a\u4f8b\u5b50\u6839\u672c\u6ca1\u6709\u4efb\u4f55\u4e1a\u52a1\u903b\u8f91\u3002\u5b83\u5b8c\u5168\u53ea\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u89e3\u6790\u5668\u3002\u4f46\u662f\uff0c\u7f16\u8bd1\u65f6\u95f4\u5728\u5b9e\u8df5\u4e2d\u662f\u5426\u76f8\u5f53\u53ef\u89c2\u5462\uff1f\u5f53\u7136\uff0cclap\u5c06\u5728\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\uff0c\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53c2\u6570\u89e3\u6790\u4ec5\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u7684\u6700\u521d\u51e0\u5341\u6beb\u79d2\u5185\u5b8c\u6210\u3002\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u7684\u6210\u672c\u4f1a\u9ad8\u5f97\u591a\uff0c\u5bf9\u5417\uff1f\u5bf9\u5417\uff1f\n\u6211\u7684\u4e00\u4e2a\u526f\u4e1a\u662f\u7528\u4e00\u5757\u4fbf\u5b9c\u7684FPGA\u677f\u5b66\u4e60\u6570\u5b57\u903b\u8f91\u3002\u6d4b\u8bd5\u6570\u5b57\u903b\u8f91\u7684\u4e00\u4e2a\u65b9\u4fbf\u5de5\u5177\u662f\u6ce2\u5f62\u67e5\u770b\u5668\uff0c\u51e0\u5468\u524d\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5de5\u5177\uff1adwfv\u3002\u5b83\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\uff0c\u5448\u73b0TUI\uff0c\u5177\u6709\u7f16\u8f91\u652f\u6301\u548cVim\u952e\u7ed1\u5b9a\u3002\u5e72\u51c0\u5229\u843d\uff01\u6211\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7f16\u8bd1\u53d1\u5e03\u7248\u672c\u51e0\u4e4e\u82b1\u4e86\u4e24\u5206\u534a\u949f\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u7406\u60f3\u7684\u7b2c\u4e00\u5370\u8c61\uff0c\u4f46\u4e8b\u5b9e\u5c31\u662f\u5982\u6b64\u3002\n\u5f53\u6211\u73a9\u5b83\u7684\u65f6\u5019\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6211\u4f1a\u653e\u5728\u540e\u9762\u53e3\u888b\u91cc\u7684\u5de5\u5177\u3002\u6240\u4ee5\u8fd9\u662f\u503c\u5f97\u5e2e\u52a9\u7684\uff0c\u4e3a\u5f00\u653e\u6e90\u7801\u7b49\u505a\u8d21\u732e\u3002\u6211\u7684\u7b2c\u4e00\u4e2a\u516c\u5173\u662f(\u60ca\u559c\uff01)\u3002\u7528\u53e3\u9999\u7cd6\u4ee3\u66ff\u9f13\u638c\u3002\u73b0\u5728\uff0c\u6211\u8fc7\u53bb\u5728\u53e3\u9999\u7cd6\u4e0a\u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u529f\uff0c\u6240\u4ee5\u6211\u77e5\u9053\u6211\u8981\u505a\u7684\u662f\u4ec0\u4e48\u3002\u5e76\u4e0d\u603b\u662f\u80fd\u591f\u63d0\u4f9b\u4e0eCLAP\u63d0\u4f9b\u7684CLI\u5b8c\u5168\u76f8\u540c\u7684CLI\uff0c\u8fd9\u4e5f\u4e0d\u4f8b\u5916\u3002\u4f4d\u7f6e\u6587\u4ef6\u540d\u5fc5\u987b\u66f4\u6539\u4e3a\u53ef\u9009\u53c2\u6570\uff0c\u4ee5\u4fbf\u5b50\u547d\u4ee4\u8bed\u6cd5\u53ef\u4ee5\u4f7f\u7528\u81ea\u7531\u53c2\u6570\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5408\u7406\u7684\u6743\u8861\uff0c\u53ef\u4ee5\u5c06\u7f16\u8bd1\u65f6\u95f4\u51cf\u5c1130\u79d2\u3002\u989d\u5916\u7684\u597d\u5904\uff1b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u4e5f\u51cf\u5c11\u4e86500 KiB\u3002\n\u597d\u7684\uff0c\u6211\u5f88\u62b1\u6b49\u627e\u4e86\u514b\u62c9\u666e\u7684\u9ebb\u70e6\u3002\u6211\u77e5\u9053\u5b83\u6bd4\u66f4\u7b80\u5355\u7684\u53c2\u6570\u89e3\u6790\u677f\u6761\u7bb1\u6709\u5b83\u7684\u597d\u5904\u3002\u5982\u679c\u6211\u6709\u81ea\u5df1\u7684\u9009\u62e9\uff0c\u6211\u4f1a\u76f4\u63a5\u4f7f\u7528\u73af\u5883\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u53c2\u6570\u89e3\u6790\u3002\u5b9e\u8bdd\u5b9e\u8bf4\uff0c\u8bba\u636e\u89e3\u6790\u66f4\u4eba\u6027\u5316\uff0c\u800c\u4e1412\u4e2a\u56e0\u7d20\u7684\u5e94\u7528\u7a0b\u5e8f\u6307\u5357\u5927\u591a\u662f\u9488\u5bf9\u5fae\u670d\u52a1\u7684\u3002\u53e6\u5916\uff0c\u62cd\u624b\u786e\u5b9e\u6709\u5f88\u5f3a\u7684\u8868\u73b0\u529b\uff0c\u6211\u4e0d\u80fd\u6253\u6298\u6263\u3002\n\u6211\u66ff\u6362\u7684\u4e0b\u4e00\u4e2a\u4e1c\u897f\u662f\u89e3\u6790\u5668\u751f\u6210\u5668\uff0c\u7528Nom\u66ff\u6362\u4e86lalrop\u3002\u5728\u8bd5\u56fe\u51b3\u5b9a\u5982\u4f55\u4e3a\u6211\u8ba1\u5212\u8fdb\u884cRIIR\u7684\u6c47\u7f16\u9879\u76ee\u7f16\u5199\u89e3\u6790\u5668\u65f6\uff0c\u6211\u5bf9\u8fd9\u4e24\u4e2a\u95ee\u9898\u90fd\u8fdb\u884c\u4e86\u7b80\u8981\u7684\u7814\u7a76\u3002\u6211\u4e3a\u90a3\u4e2a\u9879\u76ee\u9009\u62e9\u4e86NOM\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u6b21\u975e\u5e38\u597d\u7684\u7ecf\u5386\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5bf9dwfv\u6765\u8bf4\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6539\u53d8\uff0c\u5b83\u4fdd\u7559\u4e86\u5b8c\u5168\u7684\u8bed\u6cd5\u517c\u5bb9\u6027\uff0c\u5e76\u5c06\u6784\u5efa\u65f6\u95f4\u51cf\u5c11\u5230\u4e86\u5927\u7ea640\u79d2\u3002\u8fd9\u6b21\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u4ec5\u51cf\u5c11\u4e8632 KiB\u3002\n\u6700\u540e\uff0c\u6211\u80fd\u591f\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u57fa\u4e8e\u8fed\u4ee3\u5668\u7684\u89e3\u6790\u5668\u66ff\u6362regex\uff0c\u5c06\u6784\u5efa\u65f6\u95f4\u51cf\u5c11\u523026\u79d2\uff0c\u5e76\u60ca\u4eba\u5730\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u51cf\u5c11\u4e861.14MB\u3002\u524d\u540e\u7684\u6574\u4f53\u60c5\u51b5\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u4ee3\u8868\u4e86\u7f16\u8bd1\u65f6\u95f4\u7684\u663e\u8457\u6539\u8fdb\uff0c\u6700\u65b0\u7684PR\u6bd4\u6211\u7b2c\u4e00\u6b21\u53d1\u73b0\u8be5\u5e94\u7528\u7a0b\u5e8f\u65f6\u5feb\u4e86\u4e94\u500d\u591a\u3002\u66f4\u5c11\u7684\u4f9d\u8d56\u9879\u548c\u66f4\u5c0f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u597d\u5904\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u529f\u80fd\uff0c\u5e76\u4e14\u53ea\u9700\u5bf9CLI\u53c2\u6570\u9009\u9879\u8fdb\u884c\u975e\u5e38\u5fae\u5c0f\u7684\u66f4\u6539\u3002\n\u4ece\u5f88\u591a\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u90fd\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u9879\u76ee\uff0c\u6211\u5f88\u9ad8\u5174\u6709\u673a\u4f1a\u5206\u4eab\u6211\u7684\u53d1\u73b0\u3002\u6211\u5728\u8fd9\u91cc\u8bd5\u56fe\u8bf4\u660e\u7684\u662f\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u8ba4\u4e3a\u662f\u6162\u7f16\u8bd1\u5668\u7684\u5f88\u591a\u4e1c\u897f\u90fd\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5f00\u53d1\u4eba\u5458\u6ca1\u6709\u52e4\u594b\u5730\u8fdb\u884c\u4f9d\u8d56\u9879\u7ba1\u7406\uff0c\u6216\u8005\u6bd4\u7f16\u8bd1\u65f6\u66f4\u559c\u6b22\u8fd0\u884c\u65f6\u6027\u80fd\uff0c\u751a\u81f3\u6bd4\u7f16\u8bd1\u65f6\u66f4\u559c\u6b22\u5f00\u53d1\u901f\u5ea6(\u65e0\u8bba\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff01)\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u8bd5\u56fe\u8bf4\u660e\u7684\u662f\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u8ba4\u4e3a\u7f16\u8bd1\u5668\u901f\u5ea6\u5f88\u6162\uff0c\u8fd9\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5f00\u53d1\u4eba\u5458\u4e0d\u52e4\u594b\u5730\u8fdb\u884c\u4f9d\u8d56\u9879\u7ba1\u7406\uff0c\u6216\u8005\u6bd4\u7f16\u8bd1\u65f6\u66f4\u559c\u6b22\u8fd0\u884c\u65f6\u6027\u80fd\uff0c\u751a\u81f3\u6bd4\u7f16\u8bd1\u65f6\u66f4\u559c\u6b22\u5f00\u53d1\u4eba\u5458\u901f\u5ea6(\u65e0\u8bba\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff01)\u3002\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7\u7684\u5173\u4e8ePython\u53ca\u5176\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u6784\u5efa\u4e1c\u897f\u7684\u80fd\u529b\u5417\uff1f\u6709\u65f6\u6b63\u5219\u8868\u8fbe\u5f0f\u4f1a\u6709\u8fd9\u79cd\u611f\u89c9\u3002\u9690\u6027\u6210\u672c\u603b\u662f\u8ba9\u4eba\u5927\u5403\u4e00\u60ca\u3002\n\u7136\u800c\uff0c\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u5982\u6b64\u3002\u6709\u65f6\u60a8\u5fc5\u987b\u727a\u7272\u7f16\u8bd1\u901f\u5ea6\u6765\u6362\u53d6\u8fd0\u884c\u65f6\u6027\u80fd\u3002\u8fd9\u4e9b\u5e94\u8be5\u662f\u4f8b\u5916\uff0c\u800c\u4e0d\u662f\u89c4\u5219\u3002\u5927\u591a\u6570Rust\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u7a0d\u5fae\u63a8\u52a8\u4e00\u4e0b\uff0c\u7f16\u8bd1\u66f4\u5c11\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\u3002\n\u6b64\u5206\u6790\u4f7f\u7528\u7684\u5de5\u5177\u662f\u8d27\u6811\u6811(\u5305\u542b\u5728\u8d27\u6811\u4e2d\uff0c\u4ece\u94c1\u95081.44\u5f00\u59cb\uff01)\u3002\u548c\u8d27\u7269\u81a8\u80c0\u3002\u5bfb\u627e\u66ff\u4ee3\u677f\u6761\u7bb1\u5e76\u4e0d\u603b\u662f\u5bb9\u6613\u7684\uff0c\u6211\u6ca1\u6709\u4efb\u4f55\u4e00\u822c\u6027\u7684\u5efa\u8bae\uff0c\u4efb\u4f55\u4eba\u5e0c\u671b\u5c1d\u8bd5\u4efb\u4f55\u7c7b\u4f3c\u7684\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u77e5\u9053\u60a8\u7684\u9009\u62e9\u5e76\u4e14\u53ea\u9700\u8981\u6743\u8861\u5b83\u4eec\uff0c\u90a3\u4e48lib.rs\u4e0a\u663e\u793a\u7684\u6709\u5173\u677f\u6761\u7bb1\u7684\u4f9d\u8d56\u5173\u7cfb\u7edf\u8ba1\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u60a8\u63d0\u4f9b\u6bd4\u8f83\u7684\u57fa\u7840\u3002", "note_en": "This might be a bit of an unpopular opinion, so the clickbait title should be appropriate!  I&#39;ve been learning and using Rust for nearly four and a half years, since version 1.6. That&#39;s a good amount of time to become familiar with some of the troubles of the language, the tooling, and the ecosystem. But this is a slightly different story, this is a dissent to a common criticism that the compiler is slow. In this discussion, I will argue that these claims are misleading at best.    There is plenty of evidence that suggests rustc is slow relative to compilers for other languages; Go can compile applications with similar complexity in 1/5 the time, and clang or gcc can do the same for applications written in C. It might be acceptable to justify that the Rust macro and type systems are significantly more complex than what is usually written in either Go or C, and that it warrants much heavier lifting by the Rust compiler. While there is some truth in that sentiment, I believe there is more to it than that. I believe it&#39;s more of a human problem than an algorithmic one.\n     I frequent  URLO, helping answer questions from time to time. I mostly use it to absorb information, learning about the language and the greater ecosystem around it. I have also spoken out  against bloat on occasion, and I would like to continue raising awareness through this article.\n  First, let&#39;s take a brief detour to examine software bloat in a historical context. The first thing that comes to my mind is  Wirth&#39;s Law, which says in essence that software [developers] cancel out all advances in hardware performance by filling in the gaps. Read Niklaus Wirth&#39;s paper,  A Plea for Lean Software, it is well worth the time investment. This is by no means a new or unique observation. Continuing to explore this path of &#34;bloatware&#34; any further would be a disservice to the reader as it strays from my primary point. But it stands as another example of the fundamental problem, that humans are enigmatic and human behavior is even less clear.\n  Most developers make a time tradeoff while writing software. The only real goal for a developer is to solve a particular problem. Say Mary is making a game; she doesn&#39;t have infinite time to spend on perfecting the game, but she can get something reasonable completed within a reasonable timeframe. Mary knows she has a finite number of remaining heartbeats, the currency that motivates life itself, so she will wisely spend those heartbeats by ignoring minutiae to focus on the problem at hand. This isn&#39;t a bad thing! A game is produced, and she can go on to work on her next big hit.\n  But what does it say of the internals of the product? Does it do anything wasteful? Could it be made a little more efficient? Use a little less energy (especially battery power)? Surely it can! Mary doesn&#39;t have time to make it perfect. And that&#39;s really the story I want to tell.\n    The reason I&#39;m describing this hypothetical game developer and her software is because I&#39;ve done this myself many times. I write code and when I&#39;m satisfied with how it works, I move on to something else\u00a0 leaving a large number of breadcrumbs along the way. Anyone could look at the situation and exclaim, &#34;Gee, what a mess! Who would do this?!&#34;\n  A surprising amount of my code that is currently running in a production environment is Python. It is relied upon by millions of people every day, and it is extraordinarily expensive to operate. Lesson learned is that though the language choice may have allowed me to rapidly evolve a project from conception to production, the long term deficits are not at all worth what little was gained early on. What do you do with multiple projects that are written in an objectively slow language, using objectively bad dynamic type transformations? You run them under a JIT compiler, of course! If it has to be objectively slow, we can at least regain some of the gross efficiency loss with a little aggressive compiler optimization.\n  And this leads to my point, at long last. Software developers, being imperfect and making wise decisions about how to spend their heartbeats, build software by leveraging software written by those who came before them. Pick a language and compiler here, add a smidge of libraries and dependencies there, mix it all together and you got yourself one deliciously solved problem. But of course, not before you create at least one, perhaps many other problems. Importantly, these decisions are not made out of laziness, but of necessity.\n  Enough praise cannot be given to the developers who put heroic amounts of effort into optimizing their code. Rigorously benchmarking and profiling, paying keen attention to where CPU cycles and heap blocks are going, and reigning in overly expensive code paths. We see this in many places from the   regex crate to the   actix framework, all the way down into  the compiler itself. So many positive and impressive feats, it&#39;s always inspiring.\n  So if the compiler is actually quite good already and has a team dedicated to making it faster, why does it seem so slow to so many Rust developers? My suspicion is that this conception is mostly self-imposed by developers who are quick to take advantage of just how effortless it is to bring in dependencies. There is almost no resistance to depending on  an argument parsing crate\u00a0-- and this is where things might get a little controversial -- which with all of  its dependencies takes up 400 KiB in the executable (after stripping debug symbols). 400 KiB of your binary size goes to argument parsing? Oh well, I can let that slide; 400 KiB costs nothing these days.\n  But what about compile time? What does that cost? If you value your heartbeats, you probably dislike that  clap takes so long to compile. On my laptop, the  20_subcommands example took 1 minute and 14 seconds to compile. And the example doesn&#39;t have any business logic at all. It&#39;s entirely  just a command line parser. But is the compile time substantial in practice? Surely  clap will be used in a real-world application where argument parsing is only done within the first few dozen milliseconds or so when the program is started. The majority of the application logic is going to be far more costly, right? Right?\n    One of my side projects is learning digital logic with an inexpensive FPGA board. A handy tool for testing digital logic is a waveform viewer, and I was able to find a very simple one a few weeks back:   dwfv. It runs in the terminal, presents a TUI, has editing support, and vim key bindings. Neat! The first thing I noticed about it is that compiling the release build took almost two and a half minutes. Not an ideal first impression, but there it is.\n  As I played with it, I realized this is probably a tool I will be keeping in my back pocket. So it&#39;s worth helping out, contributing to open source and all that.  My first PR was (surprise!) replacing  clap with   gumdrop. Now, I&#39;ve had some success with  gumdrop in the past, so I knew what I was getting into. It isn&#39;t always possible to provide exactly the same CLI that  clap will provide, and this was no exception. The position filename had to change into an optional argument so that free args could be used for the subcommand syntax. A very reasonable tradeoff, in my opinion, for reducing the compile time by 30 seconds. Bonus; the executable size was also reduced by 500 KiB.\n  Alright, I&#39;m sorry for picking on  clap. I know it has its benefits over simpler argument parsing crates. If I had my druthers, I would  just use the environment instead of argument parsing at all. Real talk, argument parsing is more human friendly, and the 12-factor app guidelines are mostly targeted to microservices anyway. Also\u00a0 clap does have a lot of expressive power, I can&#39;t discount that.\n  The  next thing I replaced was the parser generator,   lalrpop with   nom. I had looked at both of these briefly while trying to decide on how to write a parser for an assembler project that I planned to RIIR. I settled on  nom for that project, and it was overall a very good experience. It also turned out to be a good change for  dwfv, which retained full syntax compatibility and reduced the build time to about 40 seconds. The executable size was only reduced by 32 KiB this time.\n  Finally, I was able to  replace  regex with some simple iterator-based parsers, reducing the build time to 26 seconds, and astonishingly reducing the executable size by a whopping 1.14 MB. The overall before-and-after looks like this:\n     This represents a significant improvement in compile time, with the latest PR being more than five times faster than when I first discovered the application. Non-trivial benefits are also seen in fewer number of dependencies and a smaller executable size. All without losing  any features, and with only a very minor change to the CLI argument options.\n    This was a very interesting project from many perspectives, and I&#39;m happy to get the chance to share my findings. What I&#39;ve tried to show here is that a lot of what some might consider to be a &#34;slow compiler&#34; can be traced back to a developer not being diligent with dependency management, or preferring runtime performance over compile time, or even &#34;developer velocity&#34; over compile time (whatever that means!) Remember what I said about Python and its ability to allow developers to rapidly build things? Sometimes a regular expression feels that way. Hidden costs are always a surprise.\n  This is not always the case, however. There will be times that you must trade compile speed for runtime performance. Those should be the exception, not the rule. Most Rust developers can reduce their compile times with just a little nudge to compile less code.\n  The tools used for this analysis were  cargo tree\u00a0(included in  cargo\u00a0starting with Rust 1.44!) and   cargo-bloat. Finding alternative crates is not always easy, and I don&#39;t have any general recommendations for anyone wishing to attempt any similar work. The &#34;dependencies&#34; statistics shown for crates on  lib.rs can help provide a basis for comparison if you know your options and just need to weigh them.", "posttime": "2020-06-16 23:36:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,rust,\u94c1\u9508,compiler", "title": "\u94c1\u9508\u7f16\u8bd1\u5668\u4e0d\u6162\uff0c\u6211\u4eec\u6162", "title_en": "The Rust compiler isn't slow; we are", "transed": 1, "url": "https://blog.kodewerx.org/2020/06/the-rust-compiler-isnt-slow-we-are.html", "via": "", "real_tags": ["\u7f16\u8bd1", "rust", "\u94c1\u9508", "compiler"]}, {"category": "", "categoryclass": "", "imagename": "f340ca23f7fc541eca1d85d0fe475825.jpeg", "infoid": 1006818, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee3\u7801\u5f88\u7cdf\u7cd5\uff0c\u5bc6\u7801\u8bbe\u8ba1\u4e5f\u6709\u7f3a\u9677\uff0c\u4f46\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u535a\u5ba2\u4e2d\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u8ba9\u6211\u4eec\u5ffd\u7565\u4ee5\u4e0b\u4e8b\u5b9e\uff1a\u5b83\u4f7f\u7528\u7684\u662fMCRYPT_RIJNDAEL_256(Rijndael\u7684256\u4f4d\u5757\u7248\u672c\uff0c\u800c\u4e0d\u662fAES)\uff0c\u800c\u4e0d\u662fMCRYPT_RIJNDAEL_128(\u771f\u6b63\u7684AES)\uff1b\u5b83\u4e0d\u68c0\u67e5substr()\u7684\u8fd4\u56de\u503c\uff1b\u5b83\u5c06\u5341\u516d\u8fdb\u5236\u7f16\u7801\u7684\u5bc6\u94a5\u4f20\u9012\u7ed9\u9700\u8981\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u3002\u6211\u4ee5\u524d\u5df2\u7ecf\u5728\u8fd9\u4e2a\u535a\u5ba2\u4e0a\u62a5\u9053\u8fc7\u6240\u6709\u8fd9\u4e9b\u5931\u8d25\u7684\u5730\u65b9\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u518d\u89e6\u53ca\u5b83\u4eec\u4e86\u3002\n\u76f8\u53cd\uff0c\u8ba9\u6211\u4eec\u5173\u6ce8\u4e24\u4e2a\u4e8b\u5b9e\u3002\u9996\u5148\uff0c\u5b83\u6b63\u5728\u8fdb\u884c\u201cMAC\u7136\u540e\u52a0\u5bc6\u201d(MTA)\uff0c\u8fd9\u610f\u5473\u7740\u5728\u52a0\u5bc6\u4e4b\u524d\u5c06\u6d88\u606f\u8ba4\u8bc1\u7801(MAC)\u5e94\u7528\u4e8e\u660e\u6587\u6d88\u606f-\u8fd9\u4e0e\u73b0\u4ee3\u5bc6\u7801\u667a\u6167\u76f8\u53cd\u3002\u5176\u6b21\uff0c\u901a\u8fc7\u975e\u65f6\u5e8f\u5b89\u5168\u6bd4\u8f83\u6765\u68c0\u67e5MAC\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u653b\u51fb\u8005\u80fd\u591f\u83b7\u5f97\u5931\u8d25\u89e3\u5bc6\u7684\u771f\u6b63\u7cbe\u786e\u7684\u65f6\u5e8f\u6d4b\u91cf\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u627e\u51fa\u6709\u591a\u5c11MAC\u5339\u914d\u3002\u5728\u201cEncrypt Then MAC\u201d(ETM)\u8bbe\u8ba1\u4e2d\uff0cMAC\u5728\u52a0\u5bc6\u540e\u5e94\u7528\u4e8e\u5bc6\u6587\uff0c\u8fd9\u79cd\u5b9a\u65f6\u6cc4\u6f0f\u901a\u5e38\u4f1a\u8ba9\u60a8\u4f2a\u9020\u6d88\u606f\u3002\u4f46\u8fd9\u4e00\u6b21\uff0cMAC\u662f\u5728\u5bc6\u6587\u4e2d\u52a0\u5bc6\u7684\uff0c\u6240\u4ee5\u4e4d\u4e00\u770b\uff0c\u5229\u7528\u5b83\u4f3c\u4e4e\u66f4\u56f0\u96be\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u5728\u8be5\u9875\u9762\u7684\u8bc4\u8bba\u90e8\u5206\u63d0\u51fa\u7684\u3002\u4ee3\u7801\u7684\u4f5c\u8005\u56de\u5e94\u5982\u4e0b\uff1a\n\u6211\u66fe\u7f16\u5199\u4ee3\u7801\u5bf9MAC\u8fdb\u884c\u6052\u5b9a\u65f6\u95f4\u7684\u6587\u672c\u6bd4\u8f83\uff0c\u4f46\u540e\u6765\u610f\u8bc6\u5230\u5728\u4f7f\u7528MAC-Then-Encrypt\u65b9\u6cd5\u65f6\u8fd9\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u89e3\u5bc6\u4e4b\u540e\u624d\u4f1a\u6bd4\u8f83MAC\uff0c\u4ee5\u9a8c\u8bc1\u6570\u636e\u662f\u5426\u5b8c\u6574\u4e14\u4e0e\u52a0\u5bc6\u65f6\u76f8\u540c\u3002\u56e0\u4e3a\u53ea\u6709\u5728\u4f7f\u7528\u6b63\u786e\u7684\u52a0\u5bc6\u5bc6\u94a5\u65f6\u624d\u4f1a\u66b4\u9732\u6b63\u786e\u7684MAC\uff0c\u6240\u4ee5\u6587\u672c\u6bd4\u8f83\u662f\u5426\u4ee5\u56fa\u5b9a\u65f6\u95f4\u8fdb\u884c\u5e76\u4e0d\u91cd\u8981\u3002\u66f4\u6539\u4e3aEncrypt-Then-MAC\u65b9\u6cd5(\u9700\u8981\u6052\u5b9a\u65f6\u95f4MAC\u6bd4\u8f83)\u4e0d\u4f1a\u5411\u540e\u517c\u5bb9\u5f53\u524d\u7248\u672c\u3002\n\u8ba9\u6211\u4eec\u9075\u5faa\u8fd9\u53e5\u8bdd\u7684\u903b\u8f91\u3002\u5728\u5e7f\u6cdb\u7684\u5c42\u9762\u4e0a\uff0c\u4ed6\u4eec\u58f0\u79f0\u65f6\u95f4\u653b\u51fb\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3aMAC\u5728\u52a0\u5bc6\u5185\u90e8\u3002\u4ed6\u4eec\u63d0\u51fa\u8fd9\u4e00\u8981\u6c42\u7684\u7406\u7531\u662f\u4ec0\u4e48\uff1f\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u89e3\u91ca\u6240\u5199\u7684\u5185\u5bb9\uff0c\u8fd9\u53d6\u51b3\u4e8e\u60a8\u5c06\u201c\u6b63\u786e\u7684MAC\u201d\u7406\u89e3\u4e3a\u4ec0\u4e48\u610f\u601d\u3002\n\u5728\u4e00\u79cd\u89e3\u91ca\u4e2d\uff0c\u201c\u6b63\u786e\u7684MAC\u201d\u6307\u7684\u662f\u5b58\u50a8\u5728\u6d88\u606f\u4e2d\u7684MAC\uff0c\u4ed6\u4eec\u8bf4\u60a8\u9700\u8981\u5bc6\u94a5\u624d\u80fd\u8bbf\u95ee\u5b83\uff0c\u56e0\u6b64\u5373\u4f7f\u60a8\u53ef\u4ee5\u4f7f\u7528\u8ba1\u65f6\u901a\u9053\u901a\u8fc7\u65cb\u8f6c\u201c\u6b63\u786e\u7684MAC\u201d\u6765\u5339\u914d\u8ba1\u7b97\u51fa\u7684MAC\uff0c\u60a8\u4e5f\u65e0\u6cd5\u5b9e\u9645\u4e86\u89e3\u5b83\u662f\u4ec0\u4e48\u3002\u8fd9\u4e00\u63a8\u7406\u662f\u6709\u7f3a\u9677\u7684\uff0c\u56e0\u4e3a\u8981\u521b\u5efa\u4f2a\u9020\uff0c\u60a8\u5e76\u4e0d\u603b\u662f\u9700\u8981\u77e5\u9053MAC\u503c\uff0c\u60a8\u53ea\u9700\u8981\u751f\u6210\u4e00\u4e9b\u89e3\u5bc6\u673a\u5668\u53ef\u4ee5\u63a5\u53d7\u7684\u65b0\u5bc6\u6587\u3002\u6216\u8005\uff0c\u5b83\u4eec\u53ef\u80fd\u610f\u5473\u7740\u5373\u4f7f\u60a8\u77e5\u9053\u8ba1\u7b97\u51fa\u7684MAC\u503c\uff0c\u4e5f\u4e0d\u80fd\u5728\u4e0d\u77e5\u9053\u52a0\u5bc6\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u5c06\u5176\u653e\u5165\u660e\u6587\u6d88\u606f\u4e2d\u3002\u8fd9\u5047\u8bbe\u52a0\u5bc6\u672c\u8eab\u63d0\u4f9b\u4e86\u67d0\u79cd\u5b8c\u6574\u6027\u4fdd\u62a4\u3002\u5f88\u53ef\u80fd\u662f\u8fd9\u6837\uff0c\u4f46\u9700\u8981\u66f4\u4e25\u683c\u7684\u8bba\u636e\u6765\u8bc1\u660e\u5b83\u7684\u5408\u7406\u6027\u3002\n\u5728\u53e6\u4e00\u79cd\u89e3\u91ca\u4e2d\uff0c\u201c\u6b63\u786e\u7684MAC\u201d\u6307\u7684\u662f\u4ece\u89e3\u5bc6\u540e\u7684\u660e\u6587\u6d88\u606f\u8ba1\u7b97\u51fa\u7684MAC\u3002\u8fd9\u79cd\u89e3\u8bfb\u5f88\u96be\u6b63\u9762\u89e3\u8bfb\u3002\u786e\u5b9e\uff0c\u5b83\u53ea\u6709\u5728\u4f7f\u7528\u6b63\u786e\u7684\u5bc6\u94a5\u89e3\u5bc6\u540e\u624d\u4f1a\u516c\u5f00\uff0c\u4f46\u662f\u4ee3\u7801\u4e2d\u7684\u4fa7\u901a\u9053\u5728\u89e3\u5bc6\u4e4b\u540e\u5c31\u4f1a\u7acb\u5373\u6cc4\u9732\u6709\u5173\u5b83\u7684\u4fe1\u606f\uff01\n\u8fd9\u4e24\u79cd\u8bfb\u7269\u53ef\u80fd\u90fd\u4e0d\u662f\u4f5c\u8005\u7684\u771f\u6b63\u610f\u601d\uff0c\u4f46\u6211\u6b63\u8bd5\u56fe\u7528\u6700\u597d\u7684\u65b9\u5f0f\u6765\u89e3\u91ca\u4ed6\u4eec\u7684\u8bdd\u3002\n\u7a0d\u540e\u6211\u5c06\u544a\u8bc9\u60a8\u5982\u4f55\u653b\u51fb\u6b64\u4ee3\u7801\uff0c\u5b58\u5728\u653b\u51fb\u7684\u4e8b\u5b9e\u8868\u660e\u4f5c\u8005\u7684\u63a8\u7406\u80af\u5b9a\u662f\u4e0d\u53ef\u9760\u7684\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8981\u82b1\u8fd9\u4e48\u591a\u8bdd\u6765\u5206\u6790\u8fd9\u4e2a\u8bba\u70b9\u5462\uff1f\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u9519\u8bef\u7684\u4f8b\u5b50\uff0c\u6211\u79f0\u4e4b\u4e3a\u4e50\u9ad8\u63a8\u7406\u3002\n\u5f53\u8bbe\u8ba1\u5e08\u6216\u5f00\u53d1\u4eba\u5458\u5c06\u5bc6\u7801\u5b66\u7406\u89e3\u4e3a\u5806\u53e0\u5728\u4e00\u8d77\u7684\u4e50\u9ad8\u79ef\u6728\u65f6\uff0c\u4e50\u9ad8\u63a8\u7406\u5c31\u4f1a\u53d1\u751f\u3002\u84dd\u8272\u5757(MAC)\u4f4d\u4e8e\u7ea2\u8272\u5757(\u52a0\u5bc6)\u4e4b\u4e0a\uff0c\u56e0\u6b64\u84dd\u8272\u5757\u4e0d\u4f1a\u5012\u4e0b\u3002\u6559\u79d1\u4e66\u4ee5\u7535\u8def\u56fe\u7684\u5f62\u5f0f\u5c55\u793a\u5bc6\u7801\u5b66\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7535\u8def\u56fe\u5c06\u5bc6\u7801\u548c\u6563\u5217\u7b49\u57fa\u5143\u4e0e\u5bc6\u94a5\u548c\u660e\u6587\u7b49\u6570\u636e\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u8fd9\u5bfc\u81f4\u4e86\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u5bc6\u7801\u7b97\u6cd5\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u7b80\u5355\u7ec4\u4ef6\u3002\n\u4e50\u9ad8\u7684\u89c2\u70b9\u6ca1\u6709\u9519\u3002\u8fd9\u662f\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u8003\u8651\u5bc6\u7801\u7b97\u6cd5\u7684\u4e00\u79cd\u76f4\u89c2\u65b9\u5f0f\u3002\u4f46\u8fd9\u662f\u5bf9\u5bc6\u7801\u5b89\u5168\u6027\u7684\u9519\u8bef\u601d\u8003\u3002\u8981\u8c08\u8bba\u7b97\u6cd5\u7684\u5b89\u5168\u6027\uff0c\u60a8\u9700\u8981\u5c06\u6574\u4e2a\u7cfb\u7edf\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8003\u8651\u3002\u5728\u4f60\u7684\u5bb6\u91cc\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u628a\u4e00\u4e2a\u65e7\u7684\u767d\u70bd\u706f\u6ce1\u6362\u6210\u4e00\u4e2a\u66f4\u8282\u80fd\u7684\u7d27\u51d1\u578b\u8367\u5149\u706f\uff0c\u800c\u4e0d\u7528\u62c5\u5fc3\u5b83\u4f1a\u5bfc\u81f4\u4f60\u7684\u5fae\u6ce2\u7089\u7206\u70b8\u3002\u5bc6\u7801\u5b66\u5219\u4e0d\u540c\u3002\u5bf9\u7b97\u6cd5\u7684\u4e00\u90e8\u5206\u505a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u66f4\u6539\u5c31\u53ef\u4ee5\u5b8c\u5168\u7834\u574f\u5176\u4ed6\u770b\u4f3c\u65e0\u5173\u7684\u90e8\u5206\u3002\u4ec5\u4ec5\u56e0\u4e3a\u7535\u8def\u56fe\u4e2d\u7684\u90e8\u4ef6\u5728\u7a7a\u95f4\u4e0a\u662f\u5206\u5f00\u7684\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\u4f60\u9700\u8981\u7740\u773c\u4e8e\u5927\u5c40\u3002\n\u4e13\u4e1a\u7684\u5bc6\u7801\u5b66\u5bb6\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002\u800c\u4e0d\u662f\u81ea\u4e0b\u800c\u4e0a\u7684\u63a8\u7406\uff0c\u50cf\u8fd9\u6837\u8bf4\uff1a\u201c\u7eff\u8272\u7684\u4e50\u9ad8\u79ef\u6728\u548c\u7ea2\u8272\u7684\u4e50\u9ad8\u79ef\u6728\u662f\u8fd9\u6837\u8fde\u63a5\u7684\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u84dd\u8272\u4e50\u9ad8\u79ef\u6728\u4e0d\u4f1a\u5012\u4e0b\u3002\u201d\u4ed6\u4eec\u91c7\u53d6\u4e86\u81ea\u4e0a\u800c\u4e0b\u7684\u65b9\u6cd5\uff0c\u66f4\u63a5\u8fd1\u4e8e\uff0c\u201c\u8ba9\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u4e50\u9ad8\u7ed3\u6784\u4ee5\u4efb\u4f55\u65b9\u5f0f\u7834\u88c2\u3002\u552f\u4e00\u53ef\u80fd\u7684\u65b9\u6cd5(\u7701\u7565\u4e86\u4e25\u683c\u7684\u8bc1\u660e\u7ec6\u8282)\u662f\u5982\u679c\u7eff\u8272\u7684\u4e50\u9ad8\u79ef\u6728\u4e00\u5206\u4e3a\u4e8c\u3002\u6211\u4eec\u5047\u8bbe\u4e2a\u522b\u4e50\u9ad8\u79ef\u6728\u4e0d\u4f1a\u7834\u88c2\uff0c\u90a3\u4e48\u6574\u4e2a\u7ed3\u6784\u5c31\u4e0d\u4f1a\u7834\u88c2\u3002\u201c\u3002\n\u5728\u5bc6\u7801\u5b66\u672f\u8bed\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5047\u8bbe\u7cfb\u7edf\u5bb9\u6613\u53d7\u5230\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u624b\u7684\u653b\u51fb\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u7ed9\u5bf9\u624b\u5c3d\u53ef\u80fd\u591a\u7684\u6743\u529b\u3002\u6211\u4eec\u8ba9\u4ed6\u4eec\u52a0\u5bc6\u9009\u5b9a\u7684\u660e\u6587\uff0c\u751a\u81f3\u89e3\u5bc6\u9009\u5b9a\u7684\u5bc6\u6587\u3002\u7136\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u8fd9\u6837\u4e00\u79cd\u8bf4\u6cd5\uff1a\u201c\u5982\u679c\u8be5\u5bf9\u624b\u53ef\u4ee5\u7834\u574f\u6574\u4e2a\u7cfb\u7edf(\u6574\u4e2a\u4e50\u9ad8\u7ed3\u6784)\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u6563\u5217\u51fd\u6570(\u4e0d\u53ef\u6467\u6bc1\u7684\u4e50\u9ad8\u79ef\u6728\u5757)\u4e2d\u627e\u5230\u51b2\u7a81\u3002\u201d\u8fd9\u79cd\u63a8\u7406\u8ba9\u6211\u4eec\u6b63\u5f0f\u5730\u8bc1\u660e\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u5bc6\u7801\u539f\u8bed(\u5bc6\u7801\u3001\u6563\u5217\u51fd\u6570\u3001MAC)\u662f\u5b89\u5168\u7684\uff0c\u90a3\u4e48\u6574\u4e2a\u7cfb\u7edf\u5c31\u662f\u5b89\u5168\u7684\u3002\u8fd9\u662f\u5bf9\u5bc6\u7801\u5b66\u4e2d\u7684\u5b89\u5168\u6027\u8fdb\u884c\u63a8\u7406\u7684\u6b63\u786e\u65b9\u5f0f\u3002\n\u6211\u4e2a\u4eba\u53d1\u73b0\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u601d\u7ef4\u6a21\u5f0f\u4e5f\u662f\u7834\u89e3\u7cdf\u7cd5\u5bc6\u7801\u7684\u597d\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u60f3\u7834\u89e3\u67d0\u4e9b\u5bc6\u7801\uff0c\u9996\u5148\u6839\u636e\u4e25\u683c\u7684\u5b89\u5168\u6b63\u5f0f\u5b9a\u4e49(IND-CPA\u3001IND-CCA2\u7b49)\u627e\u51fa\u8868\u660e\u5b83\u4e0d\u5b89\u5168\u7684\u653b\u51fb\u3002\u5b89\u5168\u7684\u6b63\u5f0f\u5b9a\u4e49\u662f\u5982\u6b64\u4e25\u683c\uff0c\u4ee5\u81f3\u4e8e\u60a8\u53d1\u73b0\u7684\u653b\u51fb\u53ef\u80fd\u6839\u672c\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u610f\u4e49\u3002\u63a5\u4e0b\u6765\uff0c\u6293\u4f4f\u8fd9\u4e2a\u5f31\u70b9\uff0c\u60f3\u529e\u6cd5\u628a\u5b83\u53d8\u6210\u5b9e\u9645\u76f8\u5173\u7684\u653b\u51fb\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u51e0\u4e4e\u6bcf\u6b21\u90fd\u6709\u6548\u3002\n\u597d\u7684\uff0c\u6211\u4e4b\u524d\u5411\u60a8\u627f\u8bfa\u8fc7\uff0c\u6211\u5bf9\u6b64PHP\u52a0\u5bc6\u4ee3\u7801\u8fdb\u884c\u4e86\u5b9e\u9645\u653b\u51fb\uff0c\u73b0\u5728\u662f\u4ea4\u4ed8\u7684\u65f6\u5019\u4e86\u3002\n\u6211\u559c\u6b22\u8fd9\u6b21\u653b\u51fb\uff0c\u56e0\u4e3a\u5b83\u5c55\u793a\u4e86\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u76f4\u5728\u8bf4\u7684\u4e00\u5207\u3002\u5728Lego\u5757\u89c6\u56fe\u4e2d\uff0c\u4ee3\u7801\u4e2d\u7684\u8ba1\u65f6\u4fa7\u901a\u9053\u4f3c\u4e4e\u53ea\u4e0e\u6d88\u606f\u5b8c\u6574\u6027\u76f8\u5173\u3002\u6211\u4eec\u88ab\u8bda\u4fe1\u641e\u5f97\u5fc3\u70e6\u610f\u4e71\uff0c\u5fd8\u4e86\u8003\u8651\u5b83\u5bf9\u4fdd\u5bc6\u7684\u5f71\u54cd\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4f1a\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd\u3002\u6211\u53d1\u73b0\u7684\u653b\u51fb\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u89e3\u5bc6\u5bc6\u6587\u4e2d\u6bcf\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u3002\u552f\u4e00\u7684\u524d\u63d0\u6761\u4ef6\u662f\uff1a(1)\u653b\u51fb\u8005\u9700\u8981\u4e00\u4e9b(\u5c0f\u4e8e2000)\u7684\u5df2\u77e5\u660e\u6587\u5757\uff0c\u4ee5\u53ca(2)\u653b\u51fb\u8005\u9700\u8981\u80fd\u591f\u5411\u89e3\u5bc6\u51fd\u6570\u63d0\u4f9b\u5bc6\u6587\u5e76\u83b7\u5f97\u51c6\u786e\u7684\u8fd0\u884c\u65f6\u95f4\u6d4b\u91cf(\u5373\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5229\u7528\u4fa7\u4fe1\u9053)\u3002\n\u6211\u4e0d\u6253\u7b97\u5728\u8fd9\u91cc\u89e3\u91ca\u8fd9\u6b21\u88ad\u51fb\u3002\u6211\u89c9\u5f97\u8fd9\u6837\u505a\u4f1a\u5206\u6563\u4eba\u4eec\u5bf9\u8fd9\u7bc7\u5e16\u5b50\u6240\u4f20\u8fbe\u7684\u4fe1\u606f\u7684\u6ce8\u610f\u529b\u3002\u5982\u679c\u60a8\u611f\u5174\u8da3\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u653b\u51fb\u7684\u6a21\u62df\u6982\u5ff5\u5b9e\u73b0\u8bc1\u660e\u3002\u4ee3\u7801\u6709\u5f88\u597d\u7684\u6ce8\u91ca\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u60f3\u77e5\u9053\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u9605\u8bfb(\u5e76\u8fd0\u884c)\u8be5\u4ee3\u7801\u6765\u7406\u89e3\u5b83\u3002\n\u5728\u6982\u5ff5\u9a8c\u8bc1\u4e2d\uff0c\u6211\u5220\u9664\u4e86Serialize()\u548cUnSerialize()\u8c03\u7528\uff0c\u4ee5\u53ca\u5bf9Trim()\u7684\u8c03\u7528\u3002\u6211\u8fd8\u4fee\u6539\u4e86\u89e3\u5bc6\u51fd\u6570\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684MAC\u6bd4\u8f83\u5931\u8d25\uff0c\u5219\u8fd4\u56de0\uff1b\u5982\u679cMAC\u6bd4\u8f83\u8d85\u8fc7\u7b2c\u4e00\u4e2a\u5b57\u8282\uff0c\u5219\u8fd4\u56de1\uff0c\u6a21\u62df\u5177\u6709\u4e00\u4e2a\u5b57\u8282\u7c92\u5ea6\u7684\u65c1\u8def\u3002\n\u6211\u8fdb\u884c\u4e86\u8fd9\u4e9b\u66f4\u6539\uff0c\u4ee5\u4f7f\u653b\u51fb\u66f4\u5bb9\u6613\u3001\u66f4\u53ef\u9760\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u53d8\u5316\uff0c\u653b\u51fb\u5728\u7406\u8bba\u4e0a\u4ecd\u7136\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u8981\u8bc1\u660e\u8d77\u6765\u8981\u56f0\u96be\u5f97\u591a\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5b57\u7b26\u4e32\u6bd4\u8f83\u8ba1\u65f6\u6cc4\u6f0f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5177\u6709\u4e00\u4e2a\u5b57\u8282\u7684\u7c92\u5ea6\u3002\u76f8\u53cd\uff0c\u901a\u5e38\u9010\u5b57\u6bd4\u8f83\u5b57\u7b26\u4e32(\u4e00\u6b214\u62168\u4e2a\u5b57\u8282)\uff0c\u8fd9\u4f1a\u589e\u52a0\u6267\u884c\u653b\u51fb\u6240\u9700\u7684\u89e3\u5bc6\u67e5\u8be2\u6570\u3002\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u8ba9\u653b\u51fb\u5728\u73b0\u5b9e\u73af\u5883\u4e2d\u5de5\u4f5c\u3002\n\u5f53\u6211\u4eec\u7528\u4e50\u9ad8\u8fdb\u884c\u63a8\u7406\u65f6\uff0c\u6211\u4eec\u4e3a\u4e86\u62ef\u6551\u4e00\u68f5\u6811\u800c\u7834\u574f\u4e86\u73af\u5883\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5206\u5fc3\u601d\u8003Mac\u548c\u4f2a\u9020\uff0c\u5fd8\u8bb0\u68c0\u67e5\u5176\u4ed6\u5b89\u5168\u5c5e\u6027\u3002\u662f\u7684\uff0c\u90a3\u5757\u84dd\u8272\u7684\u4e50\u9ad8\u79ef\u6728\u88ab\u7ea2\u8272\u7684\u79ef\u6728\u6321\u4f4f\u4e86\uff0c\u4f46\u76f4\u5230\u6211\u4eec\u540e\u9000\u4e00\u6b65\uff0c\u6211\u4eec\u624d\u80fd\u770b\u5230\u7ea2\u8272\u7684\u79ef\u6728\u6302\u5728\u8fb9\u4e0a\uff0c\u5373\u5c06\u5012\u4e0b\uff0c\u628a\u84dd\u8272\u7684\u79ef\u6728\u4e5f\u5e26\u6765\u4e86\u3002\n\u628a\u5bc6\u7801\u5b66\u60f3\u6210\u4e50\u9ad8\u79ef\u6728\u4f1a\u8ba9\u4f60\u8bef\u5165\u6b67\u9014\u3002\u5982\u679c\u60a8\u60f3\u8981\u6784\u5efa\u5b89\u5168\u7684\u5bc6\u7801\u5b66\uff0c\u8bf7\u575a\u6301\u5728\u5177\u6709\u5f3a\u5927\u5bf9\u624b\u7684\u4e25\u683c\u6a21\u578b\u4e2d\u63d0\u4f9b\u5b89\u5168\u8bc1\u660e\u3002\u5982\u679c\u60a8\u60f3\u7834\u89e3\u5bc6\u7801\u5b66\uff0c\u9996\u5148\u8981\u8bc1\u660e\u5b83\u5728\u4e25\u683c\u7684\u6a21\u578b\u4e2d\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u7136\u540e\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u5c06\u8fd9\u4e9b\u5f31\u70b9\u8f6c\u5316\u4e3a\u5b9e\u9645\u7684\u653b\u51fb\u3002\n\u5982\u679c\u4f60\u60f3\u96c7\u4f63\u6211\u6765\u627e\u51fa\u4f60\u7684\u5bc6\u7801\u8bbe\u8ba1\u7684\u95ee\u9898\u6216\u4f60\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u66f4\u591a\u5173\u4e8e\u6211\u7684\u54a8\u8be2\u670d\u52a1\u7684\u4fe1\u606f\u3002", "note_en": "The code is bad and the crypto design is flawed, but as usual for this blog, we can learn something from it. Let\u2019s ignore the fact that it\u2019s using  MCRYPT_RIJNDAEL_256 (the 256-bit  block version of Rijndael, not AES) instead of  MCRYPT_RIJNDAEL_128 (real AES), the fact that it\u2019s not checking the return value of  substr(), and the fact that it\u2019s passing a hexadecimal-encoded key to a function that expects a binary string. I\u2019ve covered all of these failings on this blog before, so I won\u2019t touch on them again.\n Instead, let\u2019s focus on two facts. First, it is doing \u201cMAC then Encrypt\u201d (MtA), which means the Message Authentication Code (MAC) is being applied to the plaintext message  before encryption \u2013 contrary to modern crypto wisdom. Second, that the MAC is checked with a  non-timing-safe comparison, which means that if an attacker can get really precise timing measurements of a failed decryption, they can find out how much of the MAC matches. In the \u201cEncrypt then MAC\u201d (EtM) design, where the MAC is applied to the ciphertext after encryption, this kind of a timing leak usually lets you forge a message. But this time, the MAC is inside the ciphertext, encrypted, so at a first glance, exploiting it seems more difficult.\n Indeed, the issue was brought up in the comment section of the page. The author of the code responded as follows:\n I had written code for a constant-time text comparison of the MAC but then realized that this is not an issue when using the MAC-then-encrypt method because the MAC is only compared after decryption to verify that the data is intact and the same as when it was encrypted. Since the correct MAC is only exposed when the correct encryption key is used it doesn\u2019t matter whether the text comparison is done in constant-time or not. Changing to an encrypt-then-MAC method (requiring a constant-time MAC comparison) would not be backwards compatible with the current version.\n Let\u2019s follow the logic of this statement. On a broad level, they are claiming that the timing attack does not matter because the MAC is inside the encryption. What is their reasoning for this claim? There are two ways to interpret what was written, depending on what you take \u201ccorrect MAC\u201d to mean.\n In one interpretation, \u201ccorrect MAC\u201d means the MAC that\u2019s stored within the message, and they are saying you need the key to access it, so even if you could use the timing channel to match the calculated MAC by twiddling the \u201ccorrect MAC\u201d you couldn\u2019t actually learn what it is. This reasoning is flawed because to create a forgery you do not always need to know the MAC value, you just need to produce some new ciphertext that the decryption machinery will accept. Or perhaps they mean that even if you did know the calculated MAC value, you still couldn\u2019t place it inside the plaintext message without knowing the encryption key. This assumes the encryption itself is providing some sort of integrity protection. That may well be so, but a more rigorous argument is necessary to justify it.\n In the other interpretation, \u201ccorrect MAC\u201d means the MAC that\u2019s computed from the plaintext message after decryption. This reading is hard to interpret in a positive light. It\u2019s true that it\u2019s only exposed after decryption with the correct key, but the side-channel in the code leaks information about it right after it is!\n Neither of these readings may be what the author really meant, but I am trying to interpret their words in the  best way possible.\n I\u2019m going to tell you how to attack against this code in just a moment, and the fact that an attack exists demonstrates that the author\u2019s reasoning must be unsound. So why spend so many words analysing the argument? Because it is an example of an extremely common mistake, which I\u2019ll call  reasoning by Lego.\n Reasoning by Lego happens when a designer or developer understands cryptography as Lego blocks stacked together. The blue block (the MAC) is sitting on top of the red block (the encryption), therefore the blue block won\u2019t fall down. Textbooks put cryptography algorithms on display as circuit diagrams with primitives like ciphers and hashes wired up to data like keys and plaintexts. This leads to the view that crypto algorithms should be thought of as simple components wired together.\n The Lego view is not wrong. It\u2019s an intuitive way to think of crypto algorithms when you\u2019re writing the code. But it\u2019s the wrong way to think about cryptographic security. To talk about an algorithm\u2019s security, you need to consider the entire system as a whole. In your house, you can safely replace an old incandescent lightbulb with a more energy-efficient compact fluorescent without worrying that it will cause your microwave to explode. Cryptography is different. Making a small change to one part of your algorithm can completely break the other seemingly-unrelated parts. Just because the parts are spatially separated in the circuit diagram doesn\u2019t mean they don\u2019t influence each other. You need to look at the bigger picture.\n Professional cryptographers do just that. Instead of reasoning from the bottom up, as by saying, \u201cThe green Lego block is connected to the red Lego block in this way, therefore the blue Lego block on top won\u2019t fall over.\u201d they take a top-down approach, closer to, \u201cLet\u2019s suppose this Lego structure breaks in  any way. The only way that\u2019s possible [rigorous proof details omitted] is if the green Lego block splits in two. We are assuming individual Lego blocks do not break, so the whole structure will not break.\u201d\n In cryptographic terms, we start by assuming the system is vulnerable to a specific kind of adversary. Usually, we give the adversary as much power as possible. We let them encrypt chosen plaintexts and even decrypt chosen ciphertexts. Then we prove a claim along the lines of, \u201cIf that adversary can break the system as a whole (the entire Lego structure), then they can find a collision in the hash function (the indestructible Lego block).\u201d This sort of reasoning lets us prove, formally, that if the crypto primitives we\u2019re using (ciphers, hash functions, MACs) are secure, then the system as a whole is secure. That is the right way to reason about security in cryptography.\n I\u2019ve personally found that the top-down mindset is a good way to  break bad cryptography, too. If you want to break some crypto, first find an attack that shows it isn\u2019t secure according to the strict formal definitions of security (IND-CPA, IND-CCA2, etc.). The formal definitions of security are so strict that the attack you find might not have any practical relevance at all. Next, take that weakness and find a way to turn it into into a practically-relevant attack. For me, this works nearly every time.\n  Okay, I promised you earlier that I had an actual attack against this PHP encryption code, and now it\u2019s time to deliver.\n I like this attack because it demonstrates everything I\u2019ve been saying up until now. On the Lego block view, the timing side-channel in the code only seems relevant to message integrity. We were so distracted by integrity that we forgot to consider its effect on confidentiality. It turns out to have a big effect. The attack I found lets an attacker decrypt the first byte of every block in a ciphertext. The only preconditions are: (1) The attacker needs some (less than 2000) known plaintext blocks, and (2) the attacker needs to be able to provide ciphertexts to the decryption function and get an accurate measure of the running time (i.e. they can exploit the side-channel).\n I\u2019m not going to explain the attack here. I feel like doing so would distract away from the message of this post. If you are interested, you can find a simulated proof of concept implementation of the attack  here. The code is well-commented, so if you want to know how it works, you should be able to understand it by reading (and running) that code.\n In the proof of concept, I\u2019ve removed the  serialize() and  unserialize() calls, as well as the call to  trim(). I\u2019ve also modified the decryption function to return  0 if the MAC comparison fails on the first byte or  1 if the MAC comparison makes it past the first byte, simulating a side-channel with one-byte granularity.\n I made these changes to make the attack easier and more reliable. Without the changes, the attack is still possible  in theory, but much harder to demonstrate. In particular, string-comparison timing leaks do not have one-byte granularity in practice. Instead, strings are usually compared word-by-word (4 or 8 bytes at a time), which increases the number of decryption queries required to carry out the attack. If the reader is interested, they might try to get the attack working in a realistic setting.\n  When we reason by Lego, we destroy the environment in favor of saving a single tree. In this case, we got distracted into thinking about MACs and forgeries and forgot to check the other security properties. Yes, that blue Lego block is held up by the red block, but until we took a step back, we couldn\u2019t see that the red block was hanging off the edge, about to fall, bringing the blue block with it.\n Thinking of cryptography as Lego blocks put together will lead you astray. If you want to build secure cryptography, insist on a security proof in a strict model with powerful adversaries. If you want to break cryptography, start by showing that it isn\u2019t secure in a strict model, and then find a way to turn those weaknesses into practical attacks.\n  If you would like to hire me to find the problems with your crypto design or some bugs in your code, you can find more information about my consulting services  here.", "posttime": "2020-06-16 23:18:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,\u601d\u8003,lego,mac", "title": "\u4e50\u9ad8\u7684\u63a8\u7406\uff1a\u601d\u8003\u5bc6\u7801\u5b66\u7684\u9519\u8bef\u65b9\u5f0f", "title_en": "Reasoning by Lego: The wrong way to think about cryptography", "transed": 1, "url": "https://www.cryptofails.com/post/121201011592/reasoning-by-lego-the-wrong-way-to-think-about", "via": "", "real_tags": ["\u5bc6\u7801", "\u601d\u8003", "lego", "mac"]}, {"category": "", "categoryclass": "", "imagename": "30d702a91a267003776a4e8a05f55a6a.png", "infoid": 1006817, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0c\u7279\u65af\u62c9\u5ba3\u5e03\u5176Model S\u7535\u52a8\u8f7f\u8f66\u73b0\u5728\u4e00\u6b21\u5145\u7535\u53ef\u4ee5\u884c\u9a76402\u82f1\u91cc(647\u516c\u91cc)\u3002\u636e\u7f8e\u56fd\u73af\u5883\u4fdd\u62a4\u5c40(Environmental Protection Agency)\u79f0\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6700\u957f\u817f\u7684Model S-\u7ef0\u53f7Long Range Plus-\u53ea\u80fd\u6ee1\u8db3\u4e8e\u53ea\u6709373\u82f1\u91cc(600\u516c\u91cc)\u3002\u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\uff0c\u7279\u65af\u62c9\u5728\u7535\u52a8\u603b\u6210\u65b9\u9762\u8fdc\u8fdc\u9886\u5148\u4e8e\u5176\u4ed6\u4efb\u4f55\u6c7d\u8f66\u5236\u9020\u5546\uff0c\u4f46\u901a\u8fc7\u8fd9\u91cc\u548c\u90a3\u91cc\u8fdb\u884c\u7684\u4e00\u7cfb\u5217\u5c0f\u8c03\u6574\uff0c\u5b83\u8ba9\u8fd9\u6b3e\u6700\u8001\u7684\u7535\u52a8\u6c7d\u8f66\u5728\u540c\u6837\u7684\u5343\u74e6\u65f6\u6570\u4e0a\u8d70\u5f97\u66f4\u8fdc\u3002\n\u9996\u5148\uff0c\u7279\u65af\u62c9\u5df2\u7ecf\u4ece\u8f66\u8f86\u4e2d\u5265\u79bb\u4e86\u66f4\u591a\u7684\u8d28\u91cf\u3002\u8be5\u516c\u53f8\u6ca1\u6709\u8bf4\u660e\u5177\u4f53\u4ef7\u683c\uff0c\u4f46\u6539\u8fdb\u6765\u81ea\u4e8e\u4f7f\u7528\u8be5\u54c1\u724c\u7684\u5185\u90e8\u5ea7\u6905\uff0c\u4ee5\u53ca\u7535\u52a8\u9a6c\u8fbe\u548c\u7535\u6c60\u7ec4\u7684\u91cd\u91cf\u51cf\u8f7b\u3002\u6709\u4e00\u79cd\u65b0\u768418\u82f1\u5bf8\u8f66\u8f6e\uff0c\u5e26\u6709\u8f83\u4f4e\u7684\u6eda\u52a8\u963b\u529b\u8f6e\u80ce\uff0c\u8d21\u732e\u4e86\u5927\u7ea62%\u7684\u6539\u5584\u3002\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6548\u7387\u63d0\u5347\u6765\u81ea\u524d\u7f6e\u7535\u673a\u7684\u53d8\u901f\u7bb1\u3002\n\u73b0\u5728\uff0c\u4e00\u6b3e\u65b0\u7684S\u578bLong Range Plus\u5c06\u628a\u518d\u751f\u5236\u52a8\u4e0e\u6469\u64e6\u5236\u52a8\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u5c11\u80fd\u91cf\u635f\u5931\u3002\u7279\u65af\u62c9\u8fd8\u5728Model S\u4e0a\u589e\u52a0\u4e86\u5239\u8f66\u67b6\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u628a\u811a\u653e\u5728\u5de6\u4fa7\u8e0f\u677f\u4e0a\u6765\u4fdd\u6301\u6c7d\u8f66\u9759\u6b62\u4e0d\u52a8\u3002(\u4e0d\u662f\u5f00\u73a9\u7b11\uff0c\u8fd9\u662f\u6211\u5728\u4efb\u4f55\u65b0\u8f66\u4e0a\u7edd\u5bf9\u6700\u559c\u6b22\u7684\u4fbf\u5229\u529f\u80fd\uff0c\u6240\u4ee5\u628a\u5b83\u6dfb\u52a0\u5230S\u578b\u8f66\u548c\u7279\u65af\u62c9\u4e0a\u505a\u5f97\u5f88\u597d\u3002)\u3002\n\u5982\u679c\u7eed\u822a\u91cc\u7a0b\u7684\u63d0\u5347\u4e0d\u8db3\u4ee5\u5438\u5f15\u65b0\u4e70\u5bb6\uff0c\u7279\u65af\u62c9\u4e5f\u518d\u6b21\u964d\u4f4e\u4e86Model S\u7684\u4ef7\u683c\u3002\u73b0\u5728Long Range Plus\u7684\u4ef7\u683c\u662f74990\u7f8e\u5143\uff0c\u6bd4\u4ee5\u524d\u5c11\u4e865000\u7f8e\u5143\u3002(\u7279\u65af\u62c9\u6700\u8fd1\u8fd8\u5c06Model 3\u7684\u4ef7\u683c\u4e0b\u8c03\u4e862000\u7f8e\u5143\uff0c\u5c06Model X\u7684\u4ef7\u683c\u4e0b\u8c03\u4e865000\u7f8e\u5143\u3002)\u3002\u6b63\u5982\u6211\u4eec\u5728\u8be5\u516c\u53f8\u5b63\u5ea6\u6536\u76ca\u62a5\u544a\u4e2d\u4e86\u89e3\u5230\u7684\u90a3\u6837\uff0c8\u5e74\u524d\u9996\u6b21\u63a8\u51fa\u7684Model S\u8f7f\u8f66\u7684\u9500\u91cf\u5df2\u7ecf\u8fde\u7eed\u51e0\u4e2a\u5b63\u5ea6\u4e0b\u964d\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u7f8e\u56fd\u56fd\u7a0e\u5c40(IRS)\u7684\u7a0e\u6536\u62b5\u514d\u5230\u671f\u4ee5\u53ca\u8f83\u4fbf\u5b9c\u3001\u8f83\u65b0\u7684Model 3\u8f7f\u8f66\u7684\u8695\u98df\u3002", "note_en": "On Monday, Tesla announced that its Model S electric sedan can now go 402 miles (647km) between charges. Until now, the longest-legged Model S\u2014with the straightforward moniker Long Range Plus\u2014had to be satisfied with a mere 373 miles (600km)  according to the Environmental Protection Agency. Tesla is widely acknowledged to be far ahead of any other automaker when it comes to electric powertrains, but through a series of small tweaks here and there, it has made its oldest electric vehicle go even further on the same amount of kilowatt-hours.\n To start with, Tesla has stripped some more mass out of the vehicle. It&#39;s not saying exactly how much, but the improvements come from using the brand&#39;s in-house seats, as well as weight savings in the electric motors and battery pack. There are new 18-inch wheels with a lower-rolling-resistance tire that contribute about a two-percent improvement. A similar efficiency boost comes from the front motor&#39;s gearbox.\n And now a new Model S Long Range Plus will blend regenerative braking with friction braking to decrease energy losses. Tesla has also added a &#34;brake hold&#34; to the Model S, so you needn&#39;t keep your foot on the left pedal to keep the car stationary. (No joke, this is my absolute favorite convenience feature on any new car, so well done for adding it to the Model S, Tesla.)\n If the range bump isn&#39;t enough to tempt new buyers, Tesla has also dropped the price of the Model S again. Now a Long Range Plus will cost you $74,990, $5,000 less than before. (Tesla  also recently cut $2,000 from the price of the Model 3 and $5,000 from the Model X.) As we have learned during the company&#39;s  quarterly earnings reports, sales of the Model S sedan\u2014 first introduced eight years ago\u2014 have been falling for  several quarters thanks to the expiration of the IRS tax credit and cannibalization from the cheaper, newer Model 3 sedan.", "posttime": "2020-06-16 22:59:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u91cc\u7a0b,cuts,model", "title": "\u7279\u65af\u62c9\u5c06Model S\u964d\u4ef75000\u7f8e\u5143\uff0c\u5c06\u7eed\u822a\u91cc\u7a0b\u63d0\u9ad8\u81f3402\u82f1\u91cc", "title_en": "Tesla cuts Model S price by $5k, bumps range to 402 miles", "transed": 1, "url": "https://arstechnica.com/cars/2020/06/tesla-cuts-model-s-price-by-5000-bumps-range-to-402-miles/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u91cc\u7a0b", "cuts", "model"]}]