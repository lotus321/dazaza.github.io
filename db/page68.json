[{"category": "", "categoryclass": "", "imagename": "c64ac819a8507ada551d81a296d36e1a.jpg", "infoid": 1006368, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f--\u7279\u6717\u666e\u653f\u5e9c\u5468\u4e94\u6572\u5b9a\u4e86\u4e00\u9879\u89c4\u5b9a\uff0c\u8be5\u89c4\u5b9a\u5c06\u53d6\u6d88\u5bf9\u8de8\u6027\u522b\u8005\u60a3\u8005\u7684\u4fdd\u62a4\uff0c\u4f7f\u5176\u514d\u53d7\u533b\u751f\u3001\u533b\u9662\u548c\u533b\u7597\u4fdd\u9669\u516c\u53f8\u7684\u6b67\u89c6\u3002\u8fd9\u4e00\u4e3e\u63aa\u662f\u5728\u5965\u5170\u591a\u4e00\u5bb6\u540c\u6027\u604b\u591c\u603b\u4f1a\u53d1\u751f\u5927\u5c60\u6740\u56db\u5468\u5e74\u4e4b\u9645\u548c\u9a84\u50b2\u6708\u4e2d\u65ec\u5ba3\u5e03\u7684\u3002\n\u8fd9\u9879\u89c4\u5b9a\u4e0e\u53bb\u5e74\u53d1\u5e03\u7684\u62df\u8bae\u7248\u672c\u6ca1\u6709\u592a\u5927\u533a\u522b\uff0c\u662f\u7279\u6717\u666e\u653f\u5e9c\u5728\u591a\u4e2a\u653f\u7b56\u9886\u57df-\u5305\u62ec\u6559\u80b2\u3001\u4f4f\u623f\u3001\u5c31\u4e1a\u4ee5\u53ca\u533b\u7597-\u7684\u5e7f\u6cdb\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u76ee\u7684\u662f\u7f29\u5c0f\u6027\u522b\u6b67\u89c6\u7684\u6cd5\u5f8b\u5b9a\u4e49\uff0c\u4f7f\u5176\u4e0d\u5305\u62ec\u5bf9\u53d8\u6027\u4eba\u7684\u4fdd\u62a4\u3002\n2010\u5e74\u7684\u201c\u5e73\u4ef7\u533b\u7597\u6cd5\u6848\u201d(Affordable Care Act)\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u5965\u5df4\u9a6c\u533b\u6539\u201d(Obamacare)\uff0c\u5b83\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u5efa\u7acb\u4e86\u5e7f\u6cdb\u7684\u6c11\u6743\u4fdd\u62a4\uff0c\u7981\u6b62\u5728\u63a5\u53d7\u8054\u90a6\u8d22\u653f\u63f4\u52a9\u7684\u201c\u4efb\u4f55\u5065\u5eb7\u8ba1\u5212\u6216\u6d3b\u52a8\u201d\u4e2d\u5b58\u5728\u57fa\u4e8e\u79cd\u65cf\u3001\u80a4\u8272\u3001\u56fd\u7c4d\u3001\u6027\u522b\u3001\u5e74\u9f84\u6216\u6b8b\u75be\u7684\u6b67\u89c6\u3002\n\u5965\u5df4\u9a6c\u653f\u5e9c\u5c06\u6709\u5173\u6027\u522b\u6b67\u89c6\u7684\u6761\u6b3e\u89e3\u91ca\u4e3a\u5305\u62ec\u57fa\u4e8e\u201c\u6027\u522b\u8ba4\u540c\u201d\u7684\u6b67\u89c6\u3002\u6839\u636e\u6700\u521d\u76842016\u5e74\u89c4\u5b9a\uff0c\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u548c\u4fdd\u9669\u516c\u53f8\u5c06\u88ab\u8981\u6c42\u4e3a\u53d8\u6027\u4eba\u60a3\u8005\u63d0\u4f9b\u5e76\u8986\u76d6\u533b\u7597\u4e0a\u9002\u5f53\u7684\u6cbb\u7597\u3002\n\u8d1f\u8d23\u8fd9\u9879\u89c4\u5b9a\u7684\u536b\u751f\u4e0e\u516c\u4f17\u670d\u52a1\u90e8(Department Of Health And Human Services Department)\u6c11\u6743\u529e\u516c\u5ba4\u4e3b\u4efb\u7f57\u6770\u00b7\u585e\u7ef4\u91cc\u8bfa(Roger Severino)\u5468\u4e94\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u6b64\u4e3e\u201c\u76f8\u5f53\u4e8e\u5185\u52a1\u201d\uff0c\u8054\u90a6\u653f\u5e9c\u6b63\u5728\u201c\u66f4\u65b0\u6211\u4eec\u7684\u8d26\u7c3f\uff0c\u4ee5\u53cd\u6620\u6cd5\u5f8b\u73b0\u5b9e\u201d\uff0c\u5373\u6027\u522b\u6b67\u89c6\u8bed\u8a00\u6ca1\u6709\u660e\u786e\u63d0\u5230\u8de8\u6027\u522b\u8005\u7684\u6cd5\u5f8b\u5730\u4f4d\u3002\n\u5965\u5df4\u9a6c\u7684\u89c4\u5b9a\u51e0\u5e74\u6765\u4e00\u76f4\u88ab\u8bc9\u8bbc\u7f20\u8eab\uff0c\u7279\u6717\u666e\u653f\u5e9c\u63f4\u5f15\u6c83\u65af\u5821\u4e00\u540d\u6cd5\u5b98\u7684\u6cd5\u9662\u88c1\u51b3\uff0c\u62d2\u7edd\u6267\u884c\u8be5\u89c4\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u6700\u7ec8\u89c4\u5219\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u7acb\u7aff\u89c1\u5f71\u7684\u5b9e\u9645\u6548\u679c\u3002\u5176\u4ed6\u6cd5\u9662\u8003\u8651\u4e86\u76f8\u540c\u7684\u6cd5\u5f8b\u95ee\u9898\uff0c\u53d1\u73b0\u6709\u5229\u4e8e\u5965\u5df4\u9a6c\u653f\u5e9c\u7684\u89e3\u91ca\u3002\n\u585e\u7ef4\u91cc\u8bfa\u5728\u52a0\u5165\u7279\u6717\u666e\u653f\u5e9c\u4e4b\u524d\u4ee5\u793e\u4f1a\u4fdd\u5b88\u6d3e\u7684\u8eab\u4efd\u58f0\u540d\u9e4a\u8d77\uff0c\u4ed6\u8bf4\uff0c\u533b\u7597\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u533b\u7597\u4fdd\u9669\u516c\u53f8\u4e00\u6837\uff0c\u4ecd\u7136\u53ef\u4ee5\u81ea\u7531\u91c7\u7528\u81ea\u5df1\u7684\u6027\u522b\u8ba4\u540c\u653f\u7b56\u3002\n\u4ed6\u8bf4\uff1a\u201c\u5c06\u81ea\u5df1\u7684\u610f\u601d\u5f3a\u52a0\u7ed9\u4ed6\u4eec\u7684\u4ee3\u8868\u5199\u5165\u6cd5\u5f8b\u7684\u8bcd\u8bed\uff0c\u5e76\u4e0d\u662f\u8054\u90a6\u5b98\u50da\u7684\u804c\u8d23\u3002\u201d\n\u585e\u7ef4\u91cc\u8bfa\u4e3a\u8be5\u89c4\u5b9a\u5728\u9a84\u50b2\u6708\u548cPulse\u5927\u5c60\u6740\u5468\u5e74\u7eaa\u5ff5\u65e5\u53d1\u5e03\u7684\u65f6\u673a\u8fdb\u884c\u4e86\u8fa9\u62a4\uff0c\u79f0\u8fd9\u201c\u7eaf\u5c5e\u5de7\u5408\u201d\u3002\n\u5168\u56fd\u53d8\u6027\u4eba\u5e73\u7b49\u4e2d\u5fc3\u526f\u6267\u884c\u4e3b\u4efb\u7f57\u5fb7\u91cc\u6208\u00b7\u4ea8-\u83b1\u8482\u5b81(Rodrigo Heng-Lehtinen)\u8bf4\uff0c\u201c\u4e0d\u4ec5\u7834\u574f\u975e\u6b67\u89c6\u4fdd\u62a4\u63aa\u65bd\uff0c\u800c\u4e14\u5728\u5927\u6d41\u884c\u671f\u95f4\u7834\u574f\u975e\u6b67\u89c6\u4fdd\u62a4\u63aa\u65bd\uff0c\u8fd9\u771f\u7684\u3001\u771f\u7684\u5f88\u53ef\u6015\u3002\u201d\u201c\u8fd9\u9879\u89c4\u5b9a\u4e3a\u533b\u7597\u63d0\u4f9b\u8005\u62d2\u7edd\u63a5\u53d7\u65b0\u51a0\u80ba\u708e\u68c0\u67e5\u7684\u4eba\u6253\u5f00\u4e86\u4e00\u6247\u95e8\uff0c\u56e0\u4e3a\u4ed6\u4eec\u78b0\u5de7\u662f\u53d8\u6027\u4eba\u3002\u201d\n\u8fd9\u4e00\u58f0\u660e\u8fd8\u5f15\u53d1\u4e86\u4eba\u6743\u8fd0\u52a8(Human Rights Campaign)\u7684\u5f3a\u70c8\u6297\u8bae\uff0c\u8be5\u8fd0\u52a8\u662f\u4e00\u4e2a\u8457\u540d\u7684\u5973\u540c\u6027\u604b\u8005\u3001\u7537\u540c\u6027\u604b\u8005\u3001\u53cc\u6027\u604b\u8005\u3001\u53d8\u6027\u4eba\u548c\u540c\u6027\u604b\u5021\u5bfc\u56e2\u4f53\uff0c\u8be5\u7ec4\u7ec7\u8868\u793a\u8ba1\u5212\u8d77\u8bc9\u7279\u6717\u666e\u653f\u5e9c\u3002\n\u201c\u6211\u4eec\u4e0d\u4f1a\u8ba9\u8fd9\u79cd\u5bf9\u6211\u4eec\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u4e0d\u53d7\u6b67\u89c6\u7684\u57fa\u672c\u6743\u5229\u7684\u653b\u51fb\u4e0d\u53d7\u6311\u6218\u3002\u6211\u4eec\u5c06\u5728\u6cd5\u5ead\u4e0a\u770b\u5230\u4ed6\u4eec\uff0c\u5e76\u7ee7\u7eed\u6311\u6218\u6211\u4eec\u6240\u6709\u6c11\u9009\u5b98\u5458\u7ad9\u51fa\u6765\u53cd\u5bf9\u8fd9\u79cd\u516c\u7136\u7834\u574f\u4eba\u4eec\u9700\u8981\u7684\u5173\u952e\u4fdd\u62a4\u548c\u5236\u88c1\u6b67\u89c6\u7684\u4f01\u56fe\uff0c\u201c\u8be5\u7ec4\u7ec7\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002\n\u585e\u7ef4\u91cc\u8bfa\u66fe\u5728\u53f8\u6cd5\u90e8\u7684\u6c11\u6743\u6267\u6cd5\u90e8\u95e8\u5de5\u4f5c\u4e86\u4e03\u5e74\uff0c\u8fd8\u66fe\u5728\u4f20\u7edf\u57fa\u91d1\u4f1a(Heritage Foundation)\u8d1f\u8d23\u5fb7\u6c83\u65af\u5b97\u6559\u548c\u516c\u6c11\u793e\u4f1a\u4e2d\u5fc3(DeVos Center For Religion And Civil Society)\u3002\u4ed6\u8868\u793a\uff0c\u7279\u6717\u666e\u653f\u5e9c\u5c06\u5728\u6cd5\u5ead\u4e0a\u4e3a\u8fd9\u4e00\u51b3\u5b9a\u8fa9\u62a4\u3002\n\u585e\u7ef4\u91cc\u8bfa\u5148\u751f\u6709\u4e30\u5bcc\u7684\u5b97\u6559\u81ea\u7531\u6848\u4ef6\u8bc9\u8bbc\u7ecf\u9a8c\u3002\u4ed6\u76ee\u524d\u7684\u529e\u516c\u5ba4\u8d1f\u8d23\u8c03\u67e5\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u6b67\u89c6\u6027\u8fdd\u89c4\u884c\u4e3a\u3002\n\u51ef\u8482\u00b7M\u00b7\u57fa\u601d(Katie M.Keith)\u5728\u4e54\u6cbb\u57ce\u5927\u5b66(Georgetown University)\u6559\u6388\u533b\u4fdd\u6cd5\uff0c\u4e00\u76f4\u5bc6\u5207\u5173\u6ce8\u6c11\u6743\u6cd5\u5f8b\u9886\u57df\u7684\u60c5\u51b5\u3002\u5979\u8bf4\uff0c\u5468\u4e94\u6572\u5b9a\u7684\u8fd9\u9879\u89c4\u5b9a\u9700\u8981\u88ab\u89c6\u4e3a\u76d1\u7ba1\u6539\u9769\u7684\u5e7f\u6cdb\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u6539\u9769\u53d6\u6d88\u4e86\u5bf9\u8de8\u6027\u522b\u8005\u7684\u6c11\u6743\u4fdd\u62a4\uff0c\u5e76\u5efa\u7acb\u4e86\u6027\u522b\u7684\u5b9a\u4e49\uff0c\u5373\u51fa\u751f\u65f6\u5c31\u662f\u751f\u7269\u51b3\u5b9a\u7684\u3002\u5979\u8bf4\uff0c\u8fd9\u4e00\u60f3\u6cd5\u201c\u662f\u4ed6\u4eec\u5728\u4e0d\u540c\u673a\u6784\u4ece\u4e0d\u540c\u7684\u653f\u7b56\u89d2\u5ea6\u63a8\u52a8\u7684\u3002\u201d\n\u81ea\u533b\u4fdd\u89c4\u5b9a\u5b9e\u65bd\u4ee5\u6765\uff0c\u53d6\u6d88\u8be5\u89c4\u5b9a\u4e00\u76f4\u662f\u793e\u4f1a\u4fdd\u5b88\u6d3e\u7684\u4e00\u9879\u4e8b\u4e1a\uff0c\u5176\u4e2d\u5305\u62ec\u585e\u7ef4\u91cc\u8bfa\uff0c\u4ed6\u5728\u4f20\u7edf\u57fa\u91d1\u4f1a(Heritage Foundation)\u65f6\u66fe\u5bf9\u8be5\u89c4\u5b9a\u63d0\u51fa\u6279\u8bc4\u3002\u4ed6\u4eec\u6307\u8d23\u5965\u5df4\u9a6c\u653f\u5e9c\u5f3a\u8feb\u533b\u751f\u8fdb\u884c\u53d8\u6027\u624b\u672f\uff0c\u8fd9\u4e9b\u624b\u672f\u901a\u5e38\u7531\u4e13\u5bb6\u5904\u7406\u3002\u585e\u7ef4\u91cc\u8bfa\u7684\u529e\u516c\u5ba4\u53bb\u5e74\u53d1\u5e03\u7684\u53e6\u4e00\u9879\u89c4\u5b9a\u5c06\u4e3a\u5bf9\u67d0\u4e9b\u7c7b\u578b\u7684\u62a4\u7406\u6709\u5b97\u6559\u6216\u9053\u5fb7\u5f02\u8bae\u7684\u533b\u62a4\u4eba\u5458\u63d0\u4f9b\u989d\u5916\u7684\u201c\u826f\u77e5\u201d\u4fdd\u62a4\u3002\u8fd9\u9879\u89c4\u5b9a\u5df2\u7ecf\u88ab\u51e0\u4e2a\u8054\u90a6\u6cd5\u9662\u5ba3\u5e03\u65e0\u6548\u3002\n\u8be5\u89c4\u5b9a\u8fd8\u63a8\u7ffb\u4e86\u5965\u5df4\u9a6c\u653f\u5e9c\u5bf9\u8be5\u6cd5\u89c4\u6700\u521d\u89e3\u91ca\u7684\u5176\u4ed6\u6761\u6b3e\u3002\u5b83\u53d6\u6d88\u4e86\u5bf9\u6709\u7ec8\u6b62\u598a\u5a20\u53f2\u7684\u60a3\u8005\u7684\u53cd\u6b67\u89c6\u4fdd\u62a4\u3002\u5b83\u8fd8\u53d6\u6d88\u4e86\u63d0\u4f9b\u8005\u548c\u4fdd\u9669\u516c\u53f8\u5fc5\u987b\u5b9a\u671f\u901a\u77e5\u60a3\u8005\u91cd\u8981\u6587\u4ef6\u7684\u5916\u8bed\u7ffb\u8bd1\u7684\u53ef\u83b7\u5f97\u6027\u7684\u8981\u6c42\u3002", "note_en": "WASHINGTON \u2014 The Trump administration on Friday finalized  a regulation that will erase protections for transgender patients against discrimination by doctors, hospitals and health insurance companies, a move announced on the  four-year anniversary of the massacre at a gay nightclub in Orlando and in the middle of Pride Month.\n The rule, which does not differ much from a proposed version  released last year, is part of a broad Trump administration effort across multiple areas of policy \u2014 including  education,  housing, and  employment, as well as health care \u2014 to narrow the legal definition of sex discrimination so that it does not include protections for transgender people.\n The Affordable Care Act, the 2010 law often known as Obamacare, established broad civil rights protections in health care, barring discrimination based on race, color, national origin, sex, age or disability in \u201cany health program or activity\u201d that receives federal financial assistance.\n The Obama administration interpreted the provision about sex discrimination to include discrimination on the basis of \u201cgender identity.\u201d Under the original 2016 rule, health care providers and insurers  would have been required to provide and cover medically appropriate treatment for transgender patients.\n Roger Severino, the director of the Office for Civil Rights at the Department of Health and Human Services Department, the unit responsible for the rule, said in an interview Friday that the move was \u201cequivalent to housekeeping,\u201d and that the federal government was \u201cupdating our books to reflect the legal reality\u201d that sex discrimination language does not explicitly refer to the legal status of transgender people.\n The Obama rule has been tied up in litigation for several years, and the Trump administration has declined to enforce it, citing a court ruling from a judge in Fort Worth. That means that the final rule does not have any immediate practical effects. Other courts that considered identical legal questions found in favor of the Obama administration\u2019s interpretation.\n Mr. Severino, who attained prominence as a social conservative before joining the Trump administration, said that health providers were still free to adopt their own gender identity policies, as were health insurers.\n \u201cIt\u2019s not the role of the federal bureaucrat to impose their own meanings on the words that their representatives have enshrined into law,\u201d he said.\n Mr. Severino defended the timing of the rule\u2019s release during Pride Month and on the Pulse massacre anniversary, saying it was \u201cpurely coincidental.\u201d\n \u201cIt\u2019s really, really horrendous to not only gut nondiscrimination protections, but to gut nondiscrimination protections in the middle of a pandemic,\u201d said Rodrigo Heng-Lehtinen, the deputy executive director of the National Center for Transgender Equality. \u201cThis rule opens a door for a medical provider to turn someone away for a Covid-19 test just because they happen to be transgender.\u201d\n The announcement also prompted an outcry from the Human Rights Campaign, a prominent lesbian, gay, bisexual, transgender and queer advocacy group, which said it plans to sue the Trump administration.\n \u201cWe will not let this attack on our basic right to be free from discrimination in health care go unchallenged. We will see them in court, and continue to challenge all of our elected officials to rise up against this blatant attempt to erode critical protections people need and sanction discrimination,\u201d the organization said in a statement.\n Mr. Severino, who spent seven years in civil-rights enforcement at the Justice Department and once oversaw the DeVos Center for Religion and Civil Society at the Heritage Foundation, said that the Trump administration would defend the decision in court.\n Mr. Severino has  extensive experience litigating religious liberty cases. His current office is responsible for investigating discriminatory violations in health care.\n Katie M. Keith, who teaches health law at Georgetown University and has closely tracked this area of civil rights law, said the rule finalized Friday needed to be seen as part of a broad pattern of regulatory changes that eliminate civil rights protections for transgender people and establishes a definition of sex as being biologically determined at birth. That idea \u201cis what they are pushing forward on all of these different policy angles across different agencies,\u201d she said.\n Rolling back the health care rule has been a cause for social conservatives since its implementation, including Mr. Severino, who  criticized it while at the Heritage Foundation. They have accused the Obama administration of  coercing doctors into sexual reassignment operations, procedures that are typically handled by specialists. Another rule issued by Mr. Severino\u2019s office last year would  provide additional \u201cconscience\u201d protections for health care workers with religious or moral objections to certain types of care. That rule has been  voided by several federal courts.\n The rule also reverses other provisions of the original Obama-administration interpretation of the statute. It eliminates anti-discrimination protections for patients with a history of pregnancy termination. And it rolls back requirements that providers and insurers must routinely notify patients about the availability of foreign language translations of important documents.", "posttime": "2020-06-13 10:17:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u6c11,administration,\u89c4\u5b9a", "title": "\u7279\u6717\u666e\u653f\u5e9c\u62b9\u53bb\u533b\u7597\u4fdd\u5065\u4e2d\u5bf9\u53d8\u6027\u4eba\u6c11\u6743\u7684\u4fdd\u62a4", "title_en": "Trump Administration Erases Transgender Civil Rights Protections in Health Care", "transed": 1, "url": "https://www.nytimes.com/2020/06/12/us/politics/trump-transgender-rights.html", "via": "", "real_tags": ["\u4eba\u6c11", "\u89c4\u5b9a"]}, {"category": "", "categoryclass": "", "imagename": "30af85b8d3993fde532a8acb9d746fe3.jpeg", "infoid": 1006367, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6b27\u6d32\u6838\u5b50\u7814\u7a76\u4e2d\u5fc3(CERN)\u8bbe\u8ba1\u7535\u5b50\u4ea7\u54c1\uff0c\u5c31\u50cf\u5b83\u662f70&39\uff1b", "note_en": "Design electronics like it is 70&#39;s at CERN", "posttime": "2020-06-13 10:00:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u8bbe\u8ba1,cern", "title": "\u5728\u6b27\u6d32\u6838\u5b50\u7814\u7a76\u4e2d\u5fc3(CERN)\u8bbe\u8ba1\u7535\u5b50\u4ea7\u54c1\uff0c\u5c31\u50cf70\u5e74\u4ee3\u4e00\u6837-\u8c37\u6b4c\u7167\u7247(Google Photos)", "title_en": "Design electronics like it is 70s at CERN \u2013 Google Photos", "transed": 1, "url": "https://photos.google.com/share/AF1QipNjVlcaYM4Fre6F_AGtX6Jw0K1BIylWILAPAXds9WwPalniCJwPFOX5v8h1T-CtoQ?key=OVBmbGlwa2dXUXg1a2JBUnpvYWotNVB6cUdyTkVR", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u8bbe\u8ba1", "cern"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006366, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "464f 524d 0000 0072 5054 4348 4341 5420 0000 0004 5245 4653 4445 5343 0000 0023 bc01 0300 00ff 0000 0002 3137 0000 0013 5363 7265 616d 2034 2044 6973 746f 7274 696f 6e00 5041 524d 0000 0025 bc01 0000 000f 0101 023e 0300 043e 051e 0600 0700 0900 0a00 0\u3002\n\u8fd9\u4e9b\u4ee3\u7801\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6211\u4eec\u5982\u4f55\u624d\u80fd\u5c06\u8fd9\u4e9b\u5b57\u8282\u8f6c\u6362\u56de\u6211\u4eec\u5f00\u59cb\u65f6\u7684Screen4\u7684\u4fdd\u5b58\u72b6\u6001\uff1f\nfilenameLength=2 filename=17 464f 524d 0000 0072 5054 4348 4341 5420 0000 0004 5245 4653 4445 5343 0000 0023 bc01 0300 00ff 0000 0002 0000 0013 5363 7265 616d 2034 2044 6973 746f 7274 696f 6e00 5041 524d 0000 0025 bc01 0000 000f 0101 023e 0300 043e 051e 0", "note_en": "464f 524d 0000 0072 5054 4348 4341 5420 0000 0004 5245 4653 4445 5343 0000 0023 bc01 0300 00ff 0000 0002 3137 0000 0013 5363 7265 616d 2034 2044 6973 746f 7274 696f 6e00 5041 524d 0000 0025 bc01 0000 000f 0101 023e 0300 043e 051e 0600 0700 0800 0900 0a00 0b69 0c28 0d00 0e00 0f55 0000 424f 4459 0000 0000\n What do these codes mean? How can we translate these bytes back into the saved state of the Scream 4 that we started with?\n      filenameLength = 2 filename = 17     464f 524d 0000  0072  5054 4348 4341 5420 0000 0004 5245 4653 4445 5343 0000  0023  bc01 0300 00ff 0000    0002     0000 0013 5363 7265 616d 2034 2044 6973 746f 7274 696f 6e00 5041 524d 0000 0025 bc01 0000 000f   0101  023e  0300  043e  051e  0600  0700    0800  0900  0a00  0b69  0c28  0d00  0e00  0f55    0000 424f 4459 0000 0000", "posttime": "2020-06-13 10:00:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u7801,decode,\u4fdd\u5b58", "title": "\u8ba9\u6211\u4eec\u89e3\u7801\u4e00\u4e2aVST", "title_en": "Let's Decode a VST", "transed": 1, "url": "http://adamkulidjian.com/decode-scream4.html", "via": "", "real_tags": ["\u89e3\u7801", "decode", "\u4fdd\u5b58"]}, {"category": "", "categoryclass": "", "imagename": "59078dcecfe6bf27a93a8db66d9c5125.jpg", "infoid": 1006365, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u51a0\u72b6\u75c5\u6bd2\u5728\u7ebd\u7ea6\u7684\u4f20\u64ad\uff0c\u4f4d\u4e8e\u5e03\u9c81\u514b\u6797\u7684\u4e00\u5bb6\u5927\u578b\u4e9a\u9a6c\u900a\u65f6\u5c1a\u7167\u76f8\u9986\u5173\u95ed\u4e86\u4e24\u4e2a\u591a\u6708\uff0c\u90a3\u91cc\u7684\u6a21\u7279\u4eec\u7a7f\u7740\u516c\u53f8\u7f51\u7ad9\u4e0a\u51fa\u552e\u7684\u8863\u670d\u6446\u59ff\u52bf\u3002\n\u7136\u540e\uff0c\u57285\u670818\u65e5\uff0c\u4e9a\u9a6c\u900a\u91cd\u65b0\u5f00\u653e\u4e86\u5de5\u4f5c\u5ba4\uff0c\u540e\u6765\u5f00\u59cb\u4e0e\u6a21\u7279\u5408\u5f71\u3002\u8be5\u516c\u53f8\u5728\u7535\u8bdd\u4f1a\u8bae\u4e0a\u544a\u8bc9\u5458\u5de5\uff0c\u8fd9\u5bb6\u4f4d\u4e8e\u5a01\u5ec9\u65af\u5821\u793e\u533a\u7684\u5de5\u4f5c\u5ba4\u53ef\u4ee5\u6839\u636e\u5dde\u89c4\u5b9a\u5f00\u4e1a\uff0c\u8fd9\u4e9b\u89c4\u5b9a\u5141\u8bb8\u4ed3\u5e93\u548c\u5c65\u884c\u4e1a\u52a1\u4f5c\u4e3a\u57fa\u672c\u4e1a\u52a1\u8fd0\u8425\u3002\n\u201c\u6211\u4eec\u662f\u4f9b\u5e94\u94fe\u7684\u5173\u952e\u90e8\u5206\uff0c\u201d\u6839\u636e\u7ebd\u7ea6\u65f6\u62a5\u83b7\u5f97\u7684\u51e0\u6bb5\u901a\u8bdd\u5f55\u97f3\u4e2d\u7684\u4e00\u6bb5\uff0c\u4e00\u4f4d\u9ad8\u7ea7\u7ecf\u7406\u8bf4\u3002\n\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4e9a\u9a6c\u900a\u4f3c\u4e4e\u5728\u73a9\u5f04\u89c4\u5219\u3002\n\u5728\u65f6\u62a5\u8be2\u95ee\u8be5\u5dde\u6709\u5173\u5f00\u653e\u5de5\u4f5c\u5ba4\u7684\u60c5\u51b5\u51e0\u5929\u540e\uff0c\u4e9a\u9a6c\u900a\u5173\u95ed\u4e86\u5b83\u3002\u4e00\u4f4d\u7ecf\u7406\u544a\u8bc9\u5458\u5de5\uff0c\u5dde\u653f\u5e9c\u7684\u67d0\u4e2a\u4eba\u5df2\u7ecf\u63d0\u9192\u516c\u53f8\uff0c\u5b83\u53ef\u80fd\u9700\u8981\u9075\u5b88\u4e00\u9879\u672a\u6307\u660e\u7684\u65b0\u653f\u7b56\u3002\u5de5\u4f5c\u5ba4\u4ecd\u7136\u5173\u95ed\u3002\n\u8be5\u5dde\u53d1\u8a00\u4eba\u6770\u514b\u00b7\u65af\u7279\u6069(Jack Sterne)\u8868\u793a\uff0c\u7167\u76f8\u9986\uff0c\u5373\u4f7f\u662f\u4e0e\u7535\u5b50\u5546\u52a1\u76f8\u5173\u7684\u7167\u76f8\u9986\uff0c\u4e5f\u4e0d\u88ab\u8ba4\u4e3a\u662f\u5fc5\u8981\u7684\uff0c\u4e0d\u5e94\u8be5\u5728\u7ebd\u7ea6\u5e02\u5f00\u4e1a\u3002\n\u5730\u65b9\u653f\u5e9c\u53ef\u4ee5\u5bf9\u8fdd\u53cd\u5dde\u884c\u653f\u547d\u4ee4\u7684\u4f01\u4e1a\u5904\u4ee5\u6700\u9ad81\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002\n\u4e9a\u9a6c\u900a\u53d1\u8a00\u4eba\u857e\u5207\u5c14\u00b7\u83b1\u7279(Rachael Light)\u8868\u793a\uff0c\u5065\u5eb7\u548c\u5b89\u5168\u662f\u201c\u6211\u4eec\u6700\u5173\u5fc3\u7684\u95ee\u9898\u201d\u3002\u5979\u8bf4\uff0c\u8be5\u516c\u53f8\u7ee7\u7eed\u201c\u4e0e\u5f53\u5730\u536b\u751f\u5f53\u5c40\u4ee5\u53ca\u7ebd\u7ea6\u5e02\u548c\u5dde\u5bc6\u5207\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u6240\u6709\u4e1a\u52a1\u90fd\u5728\u5dde\u6cd5\u89c4\u548c\u536b\u751f\u6307\u5bfc\u65b9\u9488\u4e0b\u8fd0\u8425\u3002\u201d\n\u4f46\u5f53\u88ab\u8ffd\u95ee\u65f6\uff0c\u5979\u6ca1\u6709\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282\uff0c\u8bf4\u660e\u4e9a\u9a6c\u900a\u5177\u4f53\u54a8\u8be2\u4e86\u8c01\uff0c\u8be2\u95ee\u5b83\u662f\u5426\u53ef\u4ee5\u5f00\u653e\u3002", "note_en": "A large Amazon fashion photo studio in Brooklyn, where models pose in clothing sold on the company\u2019s site, sat shuttered for more than two months as the coronavirus spread in New York.\n Then, on May 18, Amazon reopened the studio and later began taking photos with models. It told employees on conference calls that the studio, in the Williamsburg neighborhood, could open under state rules that allowed warehouses and fulfillment operations to operate as essential businesses.\n \u201cWe are a key part of the supply chain,\u201d a senior manager said, according to one of several recordings of the calls obtained by The New York Times.\n There was just one problem: It appears that Amazon was playing fast and loose with the rules.\n A few days after The Times asked the state about the open studio, Amazon closed it. A manager told employees that someone in state government had given the company a heads-up that it may need to comply with an unspecified new policy. The studio remains closed.\n Photo studios, even those related to e-commerce, were not considered essential and should not be open for business in New York City, said Jack Sterne, a spokesman for the state.\n Local governments can fine businesses up to $10,000 for violating the state\u2019s executive order.\n An Amazon spokeswoman, Rachael Lighty, said that health and safety were \u201cour top concern.\u201d She said the company continued \u201cto work closely with local health authorities and the city and state of New York to ensure that all of our businesses are operating under state regulations and health guidelines.\u201d\n But when pressed, she did not provide more details on whom specifically Amazon had consulted about whether it could open.", "posttime": "2020-06-13 09:44:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e9a\u9a6c\u900a,amazon,\u65f6\u5c1a,pushing", "title": "\u4e9a\u9a6c\u900a\u63a8\u51fa\u65f6\u5c1a\uff0c\u5f00\u8bbe\u7167\u76f8\u9986\u4f5c\u4e3a\u201c\u4ed3\u5e93\u201d\u8c41\u514d", "title_en": "Amazon, Pushing Fashion, Opened Photo Studio As a 'Warehouse' Exemption", "transed": 1, "url": "https://www.nytimes.com/2020/06/12/technology/amazon-brooklyn-studio.html", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "\u65f6\u5c1a", "pushing"]}, {"category": "", "categoryclass": "", "imagename": "09568b4cc648f6b5eb61b92d032481e7.jpg", "infoid": 1006364, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u4e00\u4ee3\u6e38\u620f\u673a\u5c06\u4e8e\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u6295\u653e\u5e02\u573a\uff0cXbox Series X\u548cPlayStation5\u7684\u7092\u4f5c\u5468\u671f\u5df2\u7ecf\u8fdb\u884c\u4e86\u4e00\u5e74\u591a\u3002\u624e\u5b9e\u7684\u6280\u672f\u7ec6\u8282(\u800c\u4e0d\u662f\u7eaf\u7cb9\u7684\u8c23\u8a00)\u6765\u5f97\u66f4\u6162\uff0c\u800c\u4e14\u6211\u4eec\u5bf9\u6e38\u620f\u673a\u7684\u4e86\u89e3\u4ecd\u7136\u6bd4\u6211\u4eec\u5728\u53d1\u5e03\u540e\u3001\u4e0a\u5e02\u524d\u9636\u6bb5\u5bf9PC\u5e73\u53f0\u548c\u7ec4\u4ef6\u7684\u901a\u5e38\u4e86\u89e3\u8981\u5c11\u5f97\u591a\u3002\u6211\u4eec\u6709\u4e00\u4e9b\u6765\u81ea\u5fae\u8f6f\u548c\u7d22\u5c3c\u7684\u9876\u7ea7\u6027\u80fd\u6570\u636e\u548c\u4e00\u822c\u67b6\u6784\u4fe1\u606f\uff0c\u4f46\u8fd8\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u89c4\u683c\u8868\u3002\n\u65b0\u4e00\u4ee3\u6e38\u620f\u673a\u5c06\u5e26\u6765CPU\u548cGPU\u80fd\u529b\u7684\u5927\u5e45\u63d0\u5347\uff0c\u4f46\u6211\u4eec\u5728\u6bcf\u4e00\u4ee3\u6e38\u620f\u673a\u4e0a\u90fd\u4f1a\u5f97\u5230\u8fd9\u4e00\u70b9\uff0c\u5f53\u6e38\u620f\u673a\u82af\u7247\u83b7\u5f97\u4e0eAMD CPU\u548cGPU\u76f8\u540c\u7684\u5fae\u4f53\u7cfb\u7ed3\u6784\u66f4\u65b0\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u8fd9\u4e00\u4ee3\u6e38\u620f\u673a\u66f4\u7279\u522b\u7684\u662f\u5bf9\u5b58\u50a8\u7684\u6539\u53d8\uff1a\u6e38\u620f\u673a\u6b63\u5728\u8ffd\u968f\u4e2a\u4eba\u7535\u8111\u5e02\u573a\u7684\u811a\u6b65\uff0c\u4ece\u673a\u68b0\u786c\u76d8\u8f6c\u5411\u56fa\u6001\u5b58\u50a8\uff0c\u4f46\u4e5f\u8d85\u8d8a\u4e86\u4e2a\u4eba\u7535\u8111\u5e02\u573a\uff0c\u4ece\u56fa\u6001\u5b58\u50a8\u4e2d\u83b7\u5f97\u6700\u5927\u597d\u5904\u3002\n\u56fa\u6001\u786c\u76d8\u662fPC\u5e02\u573a\u7684\u9769\u547d\u6027\u4ea7\u54c1\uff0c\u6781\u5927\u5730\u6539\u5584\u4e86\u6574\u4f53\u7cfb\u7edf\u54cd\u5e94\u80fd\u529b\u3002\u6e38\u620f\u4e3b\u8981\u53d7\u76ca\u4e8e\u66f4\u5feb\u7684\u5b89\u88c5\u548c\u5173\u5361\u52a0\u8f7d\u65f6\u95f4\uff0c\u4f46\u5f53\u6e38\u620f\u9700\u8981\u52a8\u6001\u52a0\u8f7d\u6570\u636e\u65f6\uff0c\u5feb\u901f\u5b58\u50a8\u4e5f\u6709\u52a9\u4e8e\u51cf\u5c11\u505c\u987f\u548c\u5361\u987f\u3002\u8fd1\u5e74\u6765\uff0cNVMe\u56fa\u6001\u786c\u76d8\u63d0\u4f9b\u7684\u901f\u5ea6\u5728\u7eb8\u9762\u4e0a\u6bd4SATA\u56fa\u6001\u786c\u76d8\u5feb\u4e86\u597d\u51e0\u500d\uff0c\u4f46\u5bf9\u4e8e\u6e38\u620f\u73a9\u5bb6\u6765\u8bf4\uff0c\u8fd9\u79cd\u597d\u5904\u5145\u5176\u91cf\u662f\u9759\u97f3\u7684\u3002\u4f20\u7edf\u89c2\u70b9\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u5931\u671b\u4e3b\u8981\u6709\u4e24\u4e2a\u539f\u56e0\u503c\u5f97\u6000\u7591\uff1a\u7b2c\u4e00\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u6e38\u620f\u548c\u6e38\u620f\u5f15\u64ce\u4ecd\u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4ee5\u5728\u786c\u76d8\u4e0a\u64ad\u653e\uff0c\u56e0\u4e3a\u76ee\u524d\u7684\u6e38\u620f\u673a\u548c\u8bb8\u591a\u4f4e\u7aefPC\u90fd\u6ca1\u6709\u56fa\u6001\u786c\u76d8\u3002\u6e38\u620f\u7a0b\u5e8f\u5458\u65e0\u6cd5\u5145\u5206\u5229\u7528NVMe\u56fa\u6001\u786c\u76d8\u7684\u6027\u80fd\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u7684\u6e38\u620f\u5728\u786c\u76d8\u4e0a\u53d8\u5f97\u65e0\u6cd5\u64ad\u653e\u3002\u5176\u6b21\uff0cSATA\u56fa\u6001\u786c\u76d8\u7684\u901f\u5ea6\u5df2\u7ecf\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u5c06\u74f6\u9888\u8f6c\u79fb\u5230\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u5730\u65b9\uff0c\u901a\u5e38\u662f\u4ee5\u6570\u636e\u89e3\u538b\u7f29\u7684\u5f62\u5f0f\u3002\u5728\u6e38\u620f\u80fd\u591f\u4eceNVMe\u7684\u6027\u80fd\u4e2d\u771f\u6b63\u83b7\u76ca\u4e4b\u524d\uff0c\u9664\u4e86\u56fa\u6001\u786c\u76d8\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e1c\u897f\u9700\u8981\u52a0\u901f\u3002\n\u5fae\u8f6f\u548c\u7d22\u5c3c\u6b63\u5728\u7528\u4ed6\u4eec\u5373\u5c06\u63a8\u51fa\u7684\u6e38\u620f\u673a\u6765\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002\u6e38\u620f\u5f00\u53d1\u5546\u5f88\u5feb\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u5047\u8bbe\u7528\u6237\u5c06\u62e5\u6709\u5feb\u901f\u5b58\u50a8\uff0c\u65e0\u8bba\u662f\u5728\u6e38\u620f\u673a\u4e0a\u8fd8\u662f\u5728\u4e2a\u4eba\u7535\u8111\u4e0a\u3002\u6b64\u5916\uff0c\u65b0\u4e00\u4ee3\u6e38\u620f\u673a\u5c06\u589e\u52a0\u989d\u5916\u7684\u786c\u4ef6\u529f\u80fd\uff0c\u4ee5\u89e3\u51b3\u5982\u679c\u5b83\u4eec\u4ec5\u4ec5\u662f\u914d\u5907\u4e86\u5c16\u7aefSSD\u7684\u4e2d\u7aef\u6e38\u620fPC\u65f6\u4f1a\u51fa\u73b0\u7684\u74f6\u9888\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u5904\u7406\u5f3a\u5927\u7684\u7092\u4f5c\u64cd\u4f5c\uff0c\u4ee5\u4fc3\u8fdb\u8fd9\u4e9b\u5373\u5c06\u5230\u6765\u7684\u8bbe\u5907\u3002\u8fd9\u4e24\u5bb6\u516c\u53f8\u90fd\u6709\u5938\u5927\u6216\u8fc7\u4e8e\u7b80\u5355\u5316\u7684\u884c\u4e3a\uff0c\u8bd5\u56fe\u5938\u5927\u4ed6\u4eec\u4e0b\u4e00\u4ee3\u6e38\u620f\u673a\u7684\u65b0\u529f\u80fd\uff0c\u7279\u522b\u662f\u5173\u4e8e\u65b0\u7684SSD\u3002\u7531\u4e8e\u8fd9\u4e9b\u6e38\u620f\u673a\u4ecd\u7136\u662f\u5c01\u95ed\u7684\u5e73\u53f0\uff0c\u751a\u81f3\u8fd8\u6ca1\u6709\u4e0a\u5e02\uff0c\u4e00\u4e9b\u6700\u6709\u8da3\u7684\u6280\u672f\u7ec6\u8282\u4ecd\u7136\u662f\u4fdd\u5bc6\u7684\u3002\n\u6709\u5173PS5(\u7279\u522b\u662f\u5176\u56fa\u6001\u786c\u76d8)\u7684\u5b98\u65b9\u6280\u672f\u4fe1\u606f\u7684\u4e3b\u8981\u6765\u6e90\u662f\u9996\u5e2d\u8bbe\u8ba1\u5e08Mark Cerny\u3002\u4eca\u5e743\u6708\uff0c\u4ed6\u5c31PS5\u8fdb\u884c\u4e86\u957f\u8fbe\u4e00\u5c0f\u65f6\u7684\u6280\u672f\u6f14\u793a\uff0c\u5176\u4e2d\u4e09\u5206\u4e4b\u4e00\u4ee5\u4e0a\u7684\u65f6\u95f4\u90fd\u96c6\u4e2d\u5728\u5b58\u50a8\u4e0a\u3002\u5728\u4e0d\u592a\u6b63\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u7d22\u5c3c\u5df2\u7ecf\u7533\u8bf7\u4e86\u51e0\u9879\u660e\u663e\u4e0ePS5\u76f8\u5173\u7684\u4e13\u5229\uff0c\u5176\u4e2d\u4e00\u9879\u4e13\u5229\u4e0ePS5\u5b58\u50a8\u6280\u672f\u5df2\u5f97\u5230\u786e\u8ba4\u7684\u4e13\u5229\u975e\u5e38\u543b\u5408\u3002\u8fd9\u9879\u4e13\u5229\u63ed\u793a\u4e86\u7d22\u5c3c\u5728PS5\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u63a2\u7d22\u7684\u8bb8\u591a\u60f3\u6cd5\uff0c\u5176\u4e2d\u8bb8\u591a\u53ef\u80fd\u4f1a\u5728\u6700\u7ec8\u8bbe\u8ba1\u4e2d\u5b9e\u73b0\u3002\n\u5fae\u8f6f\u5df2\u7ecf\u91c7\u53d6\u4e86\u6216\u591a\u6216\u5c11\u901a\u8fc7\u96f6\u661f\u7684\u535a\u5ba2\u5e16\u5b50\u548c\u91c7\u8bbf\u900f\u9732\u6280\u672f\u7ec6\u8282\u7684\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5bf9DigitalFoundry(\u4ed6\u4eec\u5bf9PS5\u4e5f\u6709\u5f88\u597d\u7684\u62a5\u9053)\u3002\u4ed6\u4eec\u5df2\u7ecf\u4e3a\u5176\u8bb8\u591a\u4e0e\u5b58\u50a8\u76f8\u5173\u7684\u6280\u672f\u5f15\u5165\u4e86\u54c1\u724c\u540d\u79f0(\u4f8b\u5982\uff0cXbox Velocity Architecture)\uff0c\u4f46\u5728\u592a\u591a\u60c5\u51b5\u4e0b\uff0c\u9664\u4e86\u540d\u79f0\u4e4b\u5916\uff0c\u6211\u4eec\u5bf9\u67d0\u4e2a\u529f\u80fd\u4e00\u65e0\u6240\u77e5\u3002\n\u9664\u4e86\u5b98\u65b9\u6d88\u606f\u6765\u6e90\u5916\uff0c\u6211\u4eec\u8fd8\u6536\u5230\u4e86\u6765\u81ea\u5408\u4f5c\u4f19\u4f34\u548c\u5176\u4ed6\u884c\u4e1a\u6765\u6e90\u7684\u4e0d\u540c\u8d28\u91cf\u7684\u6cc4\u5bc6\u3001\u8bc4\u8bba\u548c\u8c23\u8a00\u3002\u8fd9\u4e9b\u65e0\u7591\u52a9\u957f\u4e86\u7092\u4f5c\uff0c\u4f46\u7279\u522b\u662f\u5173\u4e8e\u63a7\u5236\u53f0SSD\uff0c\u8fd9\u4e9b\u975e\u5b98\u65b9\u6765\u6e90\u51e0\u4e4e\u6ca1\u6709\u63d0\u4f9b\u771f\u6b63\u7684\u6280\u672f\u7ec6\u8282\u3002\u8fd9\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u5f88\u591a\u7a7a\u767d\uff0c\u9700\u8981\u5206\u6790\u5373\u5c06\u63a8\u51fa\u7684\u6e38\u620f\u673a\u53ef\u80fd\u5305\u542b\u548c\u53ef\u80fd\u5305\u542b\u7684\u5185\u5bb9\u3002\n\u5fae\u8f6f\u548c\u7d22\u5c3c\u90fd\u5728\u4e3a\u4ed6\u4eec\u7684\u6e38\u620f\u673a\u4f7f\u7528\u5b9a\u5236\u7684NVMe\u56fa\u6001\u786c\u76d8\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5bf9\u5b9a\u5236\u7684\u5b9a\u4e49\u4e0d\u540c\u3002\u7d22\u5c3c\u7684\u89e3\u51b3\u65b9\u6848\u7684\u76ee\u6807\u662f\u6027\u80fd\u662f\u5fae\u8f6f\u89e3\u51b3\u65b9\u6848\u7684\u4e24\u500d\u4ee5\u4e0a\uff0c\u800c\u4e14\u80af\u5b9a\u66f4\u6602\u8d35\uff0c\u5c3d\u7ba1\u5b83\u7684\u5bb9\u91cf\u4f1a\u66f4\u4f4e\u3002\u4e00\u822c\u800c\u8a00\uff0c\u7d22\u5c3c\u7684\u56fa\u6001\u786c\u76d8\u6027\u80fd\u5c06\u4e0e\u6211\u4eec\u9884\u8ba1\u4eca\u5e74\u5e74\u5e95\u5c06\u5728\u96f6\u552e\u5e02\u573a\u4e0a\u770b\u5230\u7684\u9ad8\u7aefPCIe 4.0 NVMe\u56fa\u6001\u786c\u76d8\u76f8\u5f53\uff0c\u800c\u5fae\u8f6f\u7684\u56fa\u6001\u786c\u76d8\u5219\u66f4\u63a5\u8fd1\u4e8e\u5165\u95e8\u7ea7NVMe\u786c\u76d8\u3002\u4e24\u8005\u90fd\u662f\u4e00\u4e2ah\n\u63a7\u5236\u53f0\u56fa\u6001\u786c\u76d8\u6700\u91cd\u8981\u3001\u6700\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6027\u80fd\u6307\u6807\u662f\u5b83\u4eec\u7684\u987a\u5e8f\u8bfb\u53d6\u901f\u5ea6\u3002SSD\u5199\u5165\u901f\u5ea6\u51e0\u4e4e\u4e0e\u89c6\u9891\u6e38\u620f\u6027\u80fd\u5b8c\u5168\u65e0\u5173\uff0c\u5373\u4f7f\u6e38\u620f\u6267\u884c\u968f\u673a\u8bfb\u53d6\uff0c\u901a\u5e38\u4e5f\u4f1a\u6bd4SSD\u968f\u673aIO\u6027\u80fd\u8bc4\u7ea7\u901a\u5e38\u6240\u57fa\u4e8e\u76844kB\u5757\u66f4\u5927\u7684\u6570\u636e\u5757\u3002\u5fae\u8f6f2.4 Gb/s\u7684\u8bfb\u53d6\u901f\u5ea6\u6bd4\u673a\u68b0\u786c\u76d8\u5feb10-20\u500d\uff0c\u4f46\u8fdc\u4f4e\u4e8e\u5f53\u524d\u9ad8\u7aef\u6d88\u8d39\u7c7bSSD\u7684\u6807\u51c6\uff0c\u9ad8\u7aef\u6d88\u8d39SSD\u7684\u8bfb\u53d6\u901f\u5ea6\u81f3\u5c11\u4e3a3.5 Gb/s\uff0c\u53ef\u80fd\u4f1a\u4f7fPCIe 3.0 x4\u63a5\u53e3\u9971\u548c\u3002\u7d22\u5c3c5.5 GB/\u79d2\u7684\u8bfb\u53d6\u901f\u5ea6\u7565\u5feb\u4e8e\u76ee\u524d\u5e02\u9762\u4e0a\u57fa\u4e8ePhison E16\u63a7\u5236\u5668\u7684PCIe 4.0\u56fa\u6001\u786c\u76d8\uff0c\u4f46\u5728\u9ad8\u7aef\u6d88\u8d39\u56fa\u6001\u786c\u76d8\u5e02\u573a\u4e0a\u7ade\u4e89\u7684\u6bcf\u4e2a\u4eba\u90fd\u5373\u5c06\u63a8\u51fa\u66f4\u5148\u8fdb\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5230\u53d1\u8d27\u65f6\uff0cPS5\u56fa\u6001\u786c\u76d8\u7684\u8bfb\u53d6\u6027\u80fd\u5c06\u4f1a\u5e73\u6de1\u65e0\u5947--\u4e0e\u5176\u4ed6\u9ad8\u7aef\u56fa\u6001\u786c\u76d8\u4ea7\u54c1\u76f8\u5339\u654c--\u9664\u4e86\u6e38\u620f\u673a\u548c\u4f4e\u6210\u672c\u6e38\u620f\u673a\uff0c\u5b83\u4eec\u7684\u9884\u7b97\u901a\u5e38\u6ca1\u6709\u9ad8\u7aef\u5b58\u50a8\u7684\u7a7a\u95f4\u3002(\u6ce8\uff1aPS5\u56fa\u6001\u786c\u76d8\u7684\u8bfb\u53d6\u6027\u80fd\u5c06\u4e0e\u5176\u4ed6\u9ad8\u7aef\u56fa\u6001\u786c\u76d8\u4ea7\u54c1\u76f8\u5339\u654c)\uff0c\u4f46\u5728\u6e38\u620f\u673a\u548c\u4f4e\u6210\u672c\u6e38\u620f\u673a\u7684\u80cc\u666f\u4e0b\uff0c\u5b83\u4eec\u901a\u5e38\u6ca1\u6709\u9884\u7b97\u4e2d\u7684\u9ad8\u7aef\u5b58\u50a8\u7a7a\u95f4\u3002\n\u7d22\u5c3c\u900f\u9732\uff0c\u4ed6\u4eec\u7684\u56fa\u6001\u786c\u76d8\u4f7f\u7528\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\uff0c\u5e26\u6709\u4e00\u4e2a12\u901a\u9053\u63a5\u53e3\u8fde\u63a5\u5230NAND\u95ea\u5b58\u3002\u8fd9\u4f3c\u4e4e\u662f\u4ed6\u4eec\u7684\u8bbe\u8ba1\u4e0e\u5178\u578b\u7684\u6d88\u8d39\u7c7bSSD\u6700\u91cd\u8981\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u9ad8\u7aef\u6d88\u8d39\u7c7b\u56fa\u6001\u786c\u76d8\u901a\u5e38\u4f7f\u75288\u901a\u9053\u63a7\u5236\u5668\uff0c\u800c\u4f4e\u7aef\u9a71\u52a8\u5668\u901a\u5e38\u4f7f\u75284\u901a\u9053\u3002\u66f4\u9ad8\u7684\u901a\u9053\u6570\u66f4\u5e38\u89c1\u4e8e\u670d\u52a1\u5668SSD\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u9700\u8981\u652f\u6301\u6781\u7aef\u5bb9\u91cf\u7684SSD\uff1b16\u901a\u9053\u63a7\u5236\u5668\u5f88\u5e38\u89c1\uff0c12\u621618\u901a\u9053\u8bbe\u8ba1\u4e5f\u5e76\u975e\u95fb\u6240\u672a\u95fb\u3002\u7d22\u5c3c\u91c7\u7528\u4e86\u6bd4\u6700\u8fd1\u4efb\u4f55\u4e00\u6b3e\u6d88\u8d39\u7ea7\u56fa\u6001\u786c\u76d8\u90fd\u8981\u9ad8\u7684\u901a\u9053\u6570\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u7684\u56fa\u6001\u786c\u76d8\u63a7\u5236\u5668\u5c06\u5f02\u5e38\u5e9e\u5927\u548c\u6602\u8d35\uff0c\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u90a3\u4e48\u9ad8\u7684\u6027\u80fd\u6765\u8fbe\u52305.5 Gb/s\u7684\u76ee\u6807\u3002\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f5564\u5c42\u6216\u66f4\u65b0\u7684TLC NAND\uff0c\u5e76\u5177\u6709\u8db3\u591f\u7684\u6027\u80fd\uff0c\u800c\u5e0c\u671b\u901a\u8fc78\u901a\u9053\u63a7\u5236\u5668\u63d0\u4f9b\u6b64\u7ea7\u522b\u6216\u66f4\u9ad8\u6027\u80fd\u7684\u6d88\u8d39\u7c7b\u56fa\u6001\u786c\u76d8\u9700\u8981\u4e0e\u66f4\u65b0\u3001\u66f4\u5feb\u7684NAND\u95ea\u5b58\u914d\u5408\u4f7f\u7528\u3002\n12\u901a\u9053\u63a7\u5236\u5668\u8fd8\u5bfc\u81f4\u4e86\u4e0d\u540c\u5bfb\u5e38\u7684\u603b\u5bb9\u91cf\u3002\u63a7\u5236\u53f0\u56fa\u6001\u786c\u76d8\u4e0d\u9700\u8981\u6bd4\u5178\u578b\u7684\u6d88\u8d39\u7ea7\u56fa\u6001\u786c\u76d8\u66f4\u591a\u7684\u8fc7\u5ea6\u914d\u7f6e\uff0c\u56e0\u6b64\u591a50%\u7684\u901a\u9053\u5e94\u8be5\u4f1a\u8f6c\u5316\u4e3a\u591a50%\u7684\u53ef\u7528\u5bb9\u91cf\u3002PS5\u5c06\u914d\u5907#34\uff1b825 GB&34\uff1b\u4e2a\u56fa\u6001\u786c\u76d8\u7a7a\u95f4\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u770b\u523012\u4e2a\u901a\u9053\u4e2d\u7684\u6bcf\u4e2a\u901a\u9053\u90fd\u914d\u5907\u4e8664GiB\u7684\u539f\u59cbNAND\uff0c\u6bcf\u4e2a\u901a\u9053\u7ec4\u7ec7\u4e3a\u4e00\u4e2a512Gbit(64 GB)\u88f8\u7247\u6216\u4e24\u4e2a256Gbit(32 GB)\u88f8\u7247\u3002\u8fd9\u610f\u5473\u7740NAND\u7684\u6807\u79f0\u539f\u59cb\u5bb9\u91cf\u4e3a768GiB\u6216\u7ea6824.6(\u5341\u8fdb\u5236)GB\u3002\u5728\u8ba1\u5165\u786c\u76d8\u9884\u7559\u7684\u5fc5\u8981\u5907\u7528\u533a\u540e\uff0c\u53ef\u7528\u5bb9\u91cf\u53ef\u80fd\u4f1a\u66f4\u7b26\u5408\u786c\u76d8\u5236\u9020\u5546\u6240\u79f0\u7684750 GB\uff0c\u56e0\u6b64\u7d22\u5c3c\u7684825 GB\u6bd4\u5b58\u50a8\u884c\u4e1a\u7684\u6b63\u5e38\u6c34\u5e73\u5938\u5927\u4e86\u7ea610%\u3002\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e9b\u5f8b\u5e08\u5782\u6d8e\u4e09\u5c3a\u3002\n\u8fd9\u91cc\u53ef\u80fd\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7d22\u5c3c\u81ea\u5df1\u8bbe\u8ba1\u9ad8\u6027\u80fd\u7684NVMe\u56fa\u6001\u786c\u76d8\u63a7\u5236\u5668\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u5c31\u50cf\u4ed6\u4eec\u81ea\u5df1\u65e0\u6cd5\u8bbe\u8ba1CPU\u6216GPU\u4e00\u6837\u3002\u7d22\u5c3c\u4e0d\u5f97\u4e0d\u4e0e\u73b0\u6709\u7684SSD\u63a7\u5236\u5668\u4f9b\u5e94\u5546\u5408\u4f5c\uff0c\u5e76\u59d4\u6258\u5b9a\u5236\u63a7\u5236\u5668\uff0c\u5f88\u53ef\u80fd\u4e3b\u8981\u662f\u7531\u9884\u5148\u5b58\u5728\u7684\u548c\u7ecf\u8fc7\u9a8c\u8bc1\u7684IP\u7ec4\u88c5\u800c\u6210\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u90a3\u4e2a\u5408\u4f5c\u4f19\u4f34\u662f\u8c01\u3002\n\u65e2\u7136\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u5df2\u7ecf\u8d85\u8d8a\u4e86SATA\u56fa\u6001\u786c\u76d8\uff0c\u5fae\u8f6f\u7684\u56fa\u6001\u786c\u76d8\u6839\u672c\u4e0d\u4f1a\u5c06\u6027\u80fd\u63d0\u5347\u5230\u6b63\u5e38\u7684\u65b0PC\u6c34\u5e73\uff0c\u4f46\u5bf9\u4e8e\u6d88\u8d39\u8005\u6765\u8bf4\uff0c\u5728\u4ef7\u683c\u4e0e\u6e38\u620f\u673a\u76f8\u5f53\u7684PC\u4e0a\u5b9e\u73b01TB\u7684\u5bb9\u91cf\u4ecd\u5c06\u662f\u4e00\u5927\u80dc\u5229\u3002\u591a\u4e2a\u6d88\u606f\u6765\u6e90\u8868\u660e\uff0c\u5fae\u8f6f\u6b63\u5728\u4f7f\u7528\u4e00\u4e2a\u5e38\u89c1\u7684\u53ef\u7591\u4ea7\u54c1(\u53ef\u80fd\u662fPhison E19T\u63a7\u5236\u5668)\u63d0\u4f9b\u7684\u73b0\u6210SSD\u63a7\u5236\u5668\uff0c\u800c\u9a71\u52a8\u5668\u672c\u8eab\u662f\u7531\u4e00\u5bb6\u4e3b\u8981\u7684SSD OEM\u5236\u9020\u7684\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u4ecd\u7136\u53ef\u4ee5\u58f0\u79f0\u4f7f\u7528\u81ea\u5b9a\u4e49\u5916\u5f62\u89c4\u683c\uff0c\u53ef\u80fd\u8fd8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fa\u4ef6\u3002\n\u9664\u4e86\u7d22\u5c3c\u768412\u58f0\u9053\u89c4\u683c\u5916\uff0c\u8fd9\u4e24\u5bb6\u6e38\u620f\u673a\u5382\u5546\u90fd\u6ca1\u6709\u5206\u4eab\u5173\u4e8e\u5176\u56fa\u6001\u786c\u76d8\u5185\u90e8\u7ed3\u6784\u7684\u5b98\u65b9\u4fe1\u606f\uff0c\u4f46\u5bb9\u91cf\u548c\u6027\u80fd\u6570\u636e\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u53ef\u4ee5\u671f\u5f85\u7684\u7ebf\u7d22\u3002\u7d22\u5c3c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u81f4\u529b\u4e8e\u4f7f\u7528TLC NAND\uff0c\u4f46\u5fae\u8f6f\u8f83\u4f4e\u7684\u6027\u80fd\u76ee\u6807\u662f\u5728QLC NAND\u53ef\u9009\u7684\u9886\u57df\uff1a2.4 Gb/s\u6bd4\u6211\u4eec\u76ee\u524d\u770b\u5230\u7684\u82f1\u7279\u5c14665P(\u7ea62 Gb/s)\u7b494\u901a\u9053QLC\u9a71\u52a8\u5668\u7565\u9ad8\uff0c\u4f46\u8fdc\u4f4e\u4e8eSabrent Rocket Q\u7b498\u901a\u9053QLC\u9a71\u52a8\u5668(1TB\u578b\u53f7\u7684\u989d\u5b9a\u901f\u7387\u4e3a3.2 GB/s)\u3002\u5728\u76ee\u524d\u7684\u56fa\u6001\u786c\u76d8\u8bbe\u8ba1\u4e2d\uff0c\u6700\u7b26\u5408\u5fae\u8f6f\u9884\u671f\u6027\u80fd\u7684\u5c06\u662f\u5e26\u6709TLC NAND\u76844\u901a\u9053\u9a71\u52a8\u5668\uff0c\u4f46\u50cfPhison E19T\u8fd9\u6837\u7684\u65b0\u578b4\u901a\u9053\u63a7\u5236\u5668\u5e94\u8be5\u80fd\u591f\u7528\u6b63\u786e\u7684QLC NAND\u8fbe\u5230\u8fd9\u4e9b\u901f\u5ea6\u3002\u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u672a\u6765\uff0c\u4efb\u4f55\u4e00\u53f0\u4e3b\u673a\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u53cc\u5bb9\u91cf\u7248\u672c\uff0c\u5b83\u4f7f\u7528QLC NAND\u6765\u8fbe\u5230\u4e0e\u539f\u59cb\u578b\u53f7\u76f8\u540c\u7684\u8bfb\u53d6\u6027\u80fd\u3002\n\u5982\u679c\u6ca1\u6709\u5199\u5165\u6216\u968f\u673a\u8bfb\u53d6\u7684\u6027\u80fd\u89c4\u683c\uff0c\u6211\u4eec\u4e0d\u80fd\u6392\u9664\u63a7\u5236\u53f0\u56fa\u6001\u786c\u76d8\u4f7f\u7528\u65e0DRAM\u63a7\u5236\u5668\u7684\u53ef\u80fd\u6027\u3002\u5305\u62ec\u7528\u4e8eFLAS\u7684\u5168\u5c3a\u5bf8DRAM\u7f13\u5b58\n\u7b80\u800c\u8a00\u4e4b\uff0c\u867d\u7136\u7d22\u5c3c\u56fa\u6001\u786c\u76d8\u7684\u901f\u5ea6\u5e94\u8be5\u975e\u5e38\u5feb\uff0c\u4f46\u6211\u6562\u6253\u8d4c\uff0c\u4f60\u771f\u7684\u4e0d\u4f1a\u60f3\u8ba9\u5b83\u51fa\u73b0\u5728\u4f60\u7684Windows PC\u4e0a\u3002\u5fae\u8f6f\u7684\u56fa\u6001\u786c\u76d8\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u80fd\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4ed6\u4eec\u7684\u56fa\u4ef6\u8c03\u6574\u51b3\u5b9a\u3002\n\u5fae\u8f6f\u548c\u7d22\u5c3c\u90fd\u5728\u4e3a\u4ed6\u4eec\u5373\u5c06\u63a8\u51fa\u7684\u6e38\u620f\u673a\u7684NVMe\u5b58\u50a8\u63d0\u4f9b\u53ef\u6269\u5c55\u6027\u3002\u5fae\u8f6f\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u5176\u5185\u90e8\u56fa\u6001\u786c\u76d8\u91cd\u65b0\u6253\u5305\u6210\u5b9a\u5236\u7684\u53ef\u79fb\u52a8\u5916\u5f62\u89c4\u683c\uff0c\u8fd9\u8ba9\u4eba\u60f3\u8d77\u5f53\u5e74\u5b58\u50a8\u5361\u4ee5MB(\u800c\u4e0d\u662fTB)\u4e3a\u5355\u4f4d\u3001USB\u95ea\u5b58\u9a71\u52a8\u5668\u666e\u53ca\u4e4b\u524d\u6240\u4f7f\u7528\u7684\u63a7\u5236\u53f0\u3002\u7531\u4e8e\u5b83\u4f7f\u7528\u6240\u6709\u76f8\u540c\u7684\u7ec4\u4ef6\uff0c\u56e0\u6b64\u6b64\u6269\u5c55\u5361\u5728\u529f\u80fd\u4e0a\u5c06\u4e0e\u5185\u90e8\u5b58\u50a8\u76f8\u540c\u3002\u4e0d\u5229\u7684\u4e00\u9762\u662f\uff0c\u5fae\u8f6f\u5c06\u63a7\u5236\u5361\u7684\u4f9b\u5e94\u548c\u53ef\u80fd\u7684\u5b9a\u4ef7\uff1b\u76ee\u524d\uff0c\u5e0c\u6377\u662f\u9500\u552e\u8fd9\u4e9b\u4e13\u6709\u6269\u5c55\u5361\u7684\u552f\u4e00\u786e\u8ba4\u5408\u4f5c\u4f19\u4f34\u3002\n\u7d22\u5c3c\u91c7\u53d6\u4e86\u76f8\u53cd\u7684\u505a\u6cd5\uff0c\u5141\u8bb8\u7528\u6237\u4f7f\u7528\u6807\u51c6\u7684M.2 PCIe4.0\u63d2\u69fd\uff0c\u8be5\u63d2\u69fd\u53ef\u4ee5\u63a5\u53d7\u552e\u540e\u5347\u7ea7\u3002\u8981\u6c42\u5e76\u4e0d\u5b8c\u5168\u660e\u786e\uff1a\u7d22\u5c3c\u5c06\u4e0e\u7b2c\u4e09\u65b9\u9a71\u52a8\u5668\u8fdb\u884c\u517c\u5bb9\u6027\u6d4b\u8bd5\uff0c\u4ee5\u4fbf\u53d1\u5e03\u517c\u5bb9\u6027\u5217\u8868\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u8bf4\u660ePS5\u63a7\u5236\u53f0\u662f\u5426\u4f1a\u62d2\u7edd\u672a\u5728\u5176\u6279\u51c6\u540d\u5355\u4e0a\u7684\u9a71\u52a8\u5668\u3002\u8981\u4f7f\u5176\u8fdb\u5165\u7d22\u5c3c\u7684\u517c\u5bb9\u6027\u5217\u8868\uff0c\u9a71\u52a8\u5668\u5c06\u9700\u8981\u673a\u68b0\u5b89\u88c5(\u5373\u3002\u6ca1\u6709\u8fc7\u5927\u7684\u6563\u70ed\u5668)\uff0c\u5e76\u63d0\u4f9b\u81f3\u5c11\u4e0e\u7d22\u5c3c\u7684\u5b9a\u5236\u5185\u7f6e\u56fa\u6001\u786c\u76d8\u4e00\u6837\u7684\u6027\u80fd\u3002\u6027\u80fd\u8981\u6c42\u610f\u5473\u7740\uff0c\u76ee\u524d\u96f6\u552e\u5e02\u573a\u4e0a\u6ca1\u6709\u53ef\u7528\u7684\u9a71\u52a8\u5668\u5c06\u7b26\u5408\u6761\u4ef6\uff0c\u4f46\u660e\u5e74\u7684\u60c5\u51b5\u5c06\u975e\u5e38\u4e0d\u540c\u3002\n\u5e16\u5b50A\u8bc4\u8bba\u8ba9\u6e38\u620f\u673a\u6210\u4e3a\u4e00\u4ef6\u597d\u786c\u4ef6\u7684\u662f\uff0c\u6211\u751a\u81f3\u4e0d\u9700\u8981\u5173\u5fc3\u8fd0\u884c\u6e38\u620f\u7684\u76d2\u5b50\u91cc\u662f\u4ec0\u4e48\uff0c\u56e0\u4e3a\u6211\u4e3a\u6e38\u620f\u673a\u8d2d\u4e70\u7684\u6e38\u620f\u5c31\u4f1a\u6309\u9884\u671f\u5de5\u4f5c\u3002\u6bcf\u4e00\u4ee3\u4eba\u90fd\u5bf9\u786c\u4ef6\u4ee5\u53ca\u54c1\u724c\u4e4b\u95f4\u5e38\u7528\u7684\u6bd4\u8f83\u548c\u9634\u830e\u6d4b\u91cf\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u8ba8\u8bba\u3002\u5f53\u4f60\u62ff\u8d77\u4e00\u4e2a\u63a7\u5236\u5668\u73a9\u6e38\u620f\u65f6\uff0c\u4e00\u5207\u90fd\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u5c31\u8bbe\u5907\u51b7\u6f20\u800c\u8a00\uff0c\u8fd9\u8fdc\u8fdc\u8d85\u8fc7\u4e86PC\u6e38\u620f\u7684\u9ebb\u70e6\u3002\u7b80\u800c\u8a00\u4e4b\uff0cIDGAF\u77e5\u9053\u5b83\u91cc\u9762\u6709\u4ec0\u4e48\u9a71\u52a8\u529b\u3002\u63d2\u5165\u5149\u76d8(\u6216\u4e0b\u8f7d\u6570\u5b57\u526f\u672c)\uff0c\u6e38\u620f\u5f00\u59cb\uff01\u56de\u8986\u3002\n\u6e38\u620f\u4f1a\u50cf\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\u5417\uff1f\u4f60\u662f\u8bf4\u6e38\u620f\u673a\u6e38\u620f\u4ece\u6765\u4e0d\u4f1a\u6709\u4f4e\u4e8e30fps\u7684fps\uff0c\u6216\u8005\u6709\u66f4\u4f4e\u8d28\u91cf\u7684\u56fe\u5f62\u8fbe\u523030fps\uff1f\u56de\u8986\u3002\n\u5982\u679c\u4f60\u540c\u65f6\u5728\u6e38\u620f\u673a\u548cPC\u4e0a\u73a9\uff0c\u90a3\u4e48\u4f60\u77e5\u9053\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\u6211\u8fd9\u6837\u505a\u4e86\uff0c\u662f\u7684\uff0c\u5728\u6e38\u620f\u673a\u4e0a\uff0c\u5b83\u8981\u8f7b\u677e\u5f97\u591a\u3002\u6bcf\u4e2a\u6e38\u620f\u90fd\u9488\u5bf9*\u90a3\u4e2a*\u914d\u7f6e\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4e5f\u8bb8\u57282-3\u4e2a\u5468\u671f\u5237\u65b0\u4e4b\u95f4\u4f1a\u6709\u4e00\u4e9b\u5fae\u5c0f\u7684\u53d8\u5316\u3002\u4e0d\u7528\u62c5\u5fc3&#34\uff1b\u5b83\u5728RADEON\u4e0a\u5de5\u4f5c\u5f97\u66f4\u597d\u5417\uff1f\u6211\u5e94\u8be5\u7528\u8001\u4e00\u70b9\u7684\u53f8\u673a\u5417\uff1f\u8c03\u6574\u56fe\u5f62\u8bbe\u7f6e\u4ee5\u786e\u5b9a\u54ea\u4e00\u4e2a\u7684\u56fe\u5f62\u6548\u679c\u6700\u9002\u5408*\u60a8\u7684*PC\u3002\u7b49\u3002\u5b83\u6700\u5927\u9650\u5ea6\u5730\u53d1\u6325\u4e86\u786c\u4ef6\u7684\u4f5c\u7528\u3002\u5728\u6211\u7684\u4e2a\u4eba\u7535\u8111\u4e0a(\u914d\u7f6e\u6bd4\u4efb\u4f55\u6e38\u620f\u673a\u90fd\u8981\u597d\u5f97\u591a)\uff0c\u523a\u5ba2\u7684Creed\u5965\u5fb7\u8d5b\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5c31\u4f1a\u6b7b\u673a(\u4e0d\u662f\u6253\u4e2a\u6bd4\u65b9)\uff0c\u5373\u4f7f\u5b83\u5728\u5176\u4ed6\u65b9\u9762\u8fd0\u884c\u5f97\u5929\u8863\u65e0\u7f1d\u3002\u5728Xbox\u4e0a\uff0c\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u5728PC\u4e0a\uff0c\u6211\u4e0d\u5f97\u4e0d\u8c03\u6574\u56fe\u5f62\uff0c\u56e0\u4e3a\u6700\u9ad8\u7ea7\u522b\u7684\u56fe\u50cf\u7a0d\u5fae\u591a\u4e86\u4e00\u70b9\uff0c\u800c\u4e0b\u4e00\u4e2a\u7ea7\u522b\u7684\u56fe\u50cf\u6027\u80fd\u592a\u9ad8\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u6574\u5c4f\u8c03\u6574(\u62162\u4e2a)\u5173\u4e8e\u9634\u5f71\u3001\u952f\u9f7f\u548c\u4e0d\u80fd\u83b7\u5f97\u4ec0\u4e48\u7684\u8bbe\u7f6e\uff0c\u8fd9\u5bf9\u6211\u7684\u8bbe\u7f6e\u6765\u8bf4\u662f\u6700\u597d\u7684\u3002\u4e5f\u8bb8\u5427\u3002\u6211\u4e0d\u77e5\u9053\uff0c\u6211\u61d2\u5f97\u82b1\u534a\u5929\u65f6\u95f4\u505a\u5b9e\u9a8c\u3002\u73b0\u5728\u4ece\u4e3b\u89c2\u4e0a\u770b\uff0c\u5b83\u57284K\u5c4f\u5e55\u7684Xbox\u4e0a\u6bd4\u57281440P\u5c4f\u5e55\u7684PC\u4e0a\u770b\u8d77\u6765\u66f4\u597d\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8fd9\u4e5f\u610f\u5473\u77405\u5e74\u540e\u4f60\u5c06\u62e5\u6709\u4e00\u4e2a\u4f60\u4e0d\u80fd\u6362\u6389\u7684\u65e7GPU\u3002\u4f46\u5bf9\u4e8e\u6e38\u620f\u673a\u73a9\u5bb6\u6765\u8bf4\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4ee3\u4ef7\u3002\u56de\u8986\u3002\n\u6e38\u620f\u673a\u7edd\u5bf9\u66f4\u5bb9\u6613\u5165\u95e8\uff0c\u4f46\u4e2a\u4eba\u7535\u8111\u5df2\u7ecf\u53d6\u5f97\u4e86\u957f\u8db3\u7684\u8fdb\u6b65\uff0c\u4ecd\u7136\u62e5\u6709\u4e2a\u4eba\u7535\u8111\u7684\u4f18\u52bf\u3002\u4f60\u53ef\u4ee5\u8d2d\u4e70\u4efb\u4f55\u4e00\u53f0\u4e2d\u6863\u6e38\u620f\u7535\u8111\uff0c\u4e5f\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\uff0c\u7528\u4e2d\u6863Nvidia\u663e\u5361\u3001\u4e2d\u6863CPU\u7b49\u6253\u9020\u4e00\u53f0(\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u6837\u7684\u4e1c\u897f)\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u53ea\u9700\u5b89\u88c5Steam\u548c\u6e38\u620f\u5c31\u884c\u4e86\u3002NVIDIA\u63d0\u4f9b\u81ea\u52a8\u8c03\u6574\u786c\u4ef6\u6e38\u620f\u8bbe\u7f6e\u7684\u8f6f\u4ef6\u3002\u52a0\u8f7d\u65f6\u95f4\u3001\u56fe\u5f62\u8d28\u91cf\u548c\u63a7\u5236\u5668\u8d28\u91cf\u90fd\u4f18\u4e8ePC\uff0c\u5c3d\u7ba1\u65b0\u6e38\u620f\u673a\u901a\u5e38\u5728PC\u8ffd\u8d76\u548c\u8d85\u8fc7\u5b83\u4eec\u7684\u591a\u5e74\u671f\u95f4\u4e4b\u524d\u77ed\u6682\u9886\u5148\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\uff0c\u5149\u662f\u9f20\u6807\u548c\u952e\u76d8\u5c31\u80fd\u8ba9\u6211\u7ee7\u7eed\u4f7f\u7528PC\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cPC\u7684\u6e38\u620f\u8d28\u91cf\u4f18\u52bf\u6b63\u5728\u51cf\u5f31\uff0c\u4f46\u6211\u7684\u6e38\u620f\u7c7b\u578b(\u6709\u60c5\u8282\u548c\u4eba\u7269\u7684RPG\u3001Warframe\u548c\u5176\u4ed6\u4e00\u4e9b\u6e38\u620f)\u4ecd\u7136\u662f\u4ee5PC\u4e3a\u4e2d\u5fc3\u7684\u3002\u56de\u8986\u3002\n\u4f60\u7684\u201c\u9634\u830e\u6d4b\u91cf\u201d\u6807\u8bb0\u8ba9\u6211\u89c9\u5f97\u4f60\u6ca1\u6293\u4f4f\u91cd\u70b9\u3002\u8fd9\u662f\u771f\u7684\uff0c\u6709\u4e00\u7fa4\u6beb\u65e0\u610f\u4e49\u7684\u7c89\u4e1d\u5728\u6bcf\u4e2a\u65b0\u4e00\u4ee3\u7684\u54c1\u724c\u7c89\u4e1d\u4e4b\u95f4\u4e89\u8bba\u8c01\u662f\u6700\u597d\u7684\u3002\u4f46\u8fd9\u662fAnandTech\uff0c\u4eba\u4eec\u6765\u8fd9\u91cc\u9605\u8bfb\u5173\u4e8e\u786c\u4ef6\u7684\u6587\u7ae0\uff0c\u4ee5\u53ca\u6e38\u620f\u673a\u4e0a\u7684\u6e38\u620f\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u80fd\u591f\u901a\u8fc7\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6df1\u601d\u719f\u8651\u7684\u4f18\u5316\uff0c\u4e0d\u4ec5\u80fd\u591f\u201c\u6309\u9884\u671f\u5de5\u4f5c\u201d\uff0c\u800c\u4e14\u80fd\u591f\u63d0\u4f9b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6027\u80fd\u3002WH\n\u8bf7\u544a\u8bc9\u6211\uff0c\u5b58\u50a8API\u7684\u6f14\u53d8\u610f\u5473\u7740NTFS\u6700\u7ec8\u4f1a\u88ab\u53d6\u4ee3\u5417\uff1f\u56e0\u4e3a\u4e0e*nix\u6587\u4ef6\u7cfb\u7edf\u76f8\u6bd4\uff0cNTFS\u7684\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u8fd9\u4e5f\u662f\u5fae\u8f6f\u5f00\u53d1\u4eba\u5458\u8fc5\u901f\u6d41\u5931\u5230Mac&amp\uff1bLinux\u8bbe\u5907\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\u3002\u56de\u8986\u3002\n\u6211\u7684\u7406\u89e3\u662f\uff0cWindows\u4e0a\u7684\u95ee\u9898\u4e0e\u5176\u8bf4\u662fNTFS\uff0c\u4e0d\u5982\u8bf4\u662fVFS\u5c42\u5728\u5176\u4e2d\u6302\u63a5\u4e86\u9632\u75c5\u6bd2\u7a0b\u5e8f\u548c\u5176\u4ed6\u4e1c\u897f\u6765\u68c0\u67e5/\u8fc7\u6ee4\u4efb\u4f55IO\u3002\u5982\u679c\u4f60\u628a\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u4ece\u5feb\u8f66\u9053\u4e0a\u62ff\u51fa\u6765\uff0c\u5e94\u8be5\u4e0d\u4f1a\u6709\u8fd9\u4e48\u5927\u7684\u6027\u80fd\u8d64\u5b57\u3002\u56de\u8986\u3002\n\u5443\uff0c\u4f60\u8fd9\u5341\u5e74\u80af\u5b9a\u4ece\u6765\u6ca1\u6709\u5728\u7535\u8111\u4e0a\u73a9\u8fc7\u6e38\u620f\u3002\u4f60\u771f\u7684\u4e0d\u518d\u6709\u90a3\u4e2a\u95ee\u9898\u4e86\u3002\u53e6\u5916\uff0c\u5728\u9065\u63a7\u5668\u4e0a\u73a9\u6e38\u620f\u5bf9\u4f60\u53ef\u4ee5\u73a9\u7684\u6e38\u620f\u7c7b\u578b\u6709\u5f88\u5927\u7684\u9650\u5236\u3002\u56de\u8986", "note_en": "A new generation of gaming consoles is due to hit the market later this year, and the hype cycle for the Xbox Series X and Playstation 5 has been underway for  more than a year. Solid technical details (as opposed to mere rumors) have been slower to arrive, and we still know much less about the consoles than we typically know about PC platforms and components during the post-announcement, pre-availability phase. We have some top-line performance numbers and general architectural information from Microsoft and Sony, but not quite a full spec sheet.\n The new generation of consoles will bring big increases in CPU and GPU capabilities, but we get that with every new generation and it&#39;s no surprise when console chips get the same microarchitecture updates as the AMD CPUs and GPUs they&#39;re derived from. What&#39;s more special with this generation is the change to storage: the consoles are following in the footsteps of the PC market by switching from mechanical hard drives to solid state storage, but also going a step beyond the PC market to get the most benefit out of solid state storage.\n  Solid State Drives were revolutionary for the PC market, providing immense improvements to overall system responsiveness. Games benefited mostly in the form of faster installation and level load times, but fast storage also helped reduce stalls and stuttering when a game needs to load data on the fly. In recent years, NVMe SSDs have provided speeds that are on paper several times faster than what is possible with SATA SSDs, but for gamers the benefits have been muted at best. Conventional wisdom holds that there are two main causes to suspect for this disappointment: First, almost all games and game engines are still designed to be playable off hard drives because current consoles and many low-end PCs lack SSDs. Game programmers cannot take full advantage of NVMe SSD performance without making their games unplayably slow on hard drives. Second, SATA SSDs are already fast enough to shift the bottleneck elsewhere in the system, often in the form of data decompression. Something aside from the SSD needs to be sped up before games can properly benefit from NVMe performance.\n Microsoft and Sony are addressing both of those issues with their upcoming consoles. Game developers will soon be free to assume that users will have fast storage, both on consoles and on PCs. In addition, the new generation of consoles will add extra hardware features to address bottlenecks that would be present if they were merely mid-range gaming PCs equipped with cutting-edge SSDs. However, we&#39;re still dealing with powerful hype operations promoting these upcoming devices. Both companies are guilty of exaggerating or oversimplifying in their attempts to extol the new capabilities of their next consoles, especially with regards to the new SSDs. And since these consoles are still closed platforms that aren&#39;t even on the market yet, some of the most interesting technical details are still being kept secret.\n  The main source of official technical information about the PS5 (and especially its SSD) is lead designer Mark Cerny. In March, he gave an hour-long technical presentation about the PS5 and spent over a third of it focusing on storage. Less officially, Sony has filed several patents that apparently pertain to the PS5, including one that lines up well with what&#39;s been confirmed about the PS5&#39;s storage technology. That patent discloses numerous ideas Sony explored in the development of the PS5, and many of them are likely implemented in the final design.\n Microsoft has taken the approach of more or less dribbling out technical details through sporadic blog posts and interviews, especially with DigitalFoundry (who also have good coverage of the PS5). They&#39;ve introduced brand names for many of their storage-related technologies (eg. &#34;Xbox Velocity Architecture&#34;), but in too many cases we don&#39;t really know anything about a feature other than its name.\n Aside from official sources, we also have leaks, comments and rumors of varying quality, from partners and other industry sources. These have definitely helped fuel the hype, but with regards to the console SSDs in particular, these non-official sources have produced very little in the way of real technical details. That leaves us with a lot of gaps that require analysis of what&#39;s possible and probable for the upcoming consoles to include.\n  Microsoft and Sony are each using custom NVMe SSDs for their consoles, albeit with different definitions of &#34;custom&#34;. Sony&#39;s solution aims for more than twice the performance of Microsoft&#39;s solution and is definitely more costly even though it will have the lower capacity. Broadly speaking, Sony&#39;s SSD will offer similar performance to the high-end PCIe 4.0 NVMe SSDs we expect to see on the retail market by the end of the year, while Microsoft&#39;s SSD is more comparable to entry-level NVMe drives. Both are a huge step forward from mechanical hard drives or even SATA SSDs.\n  The most important and impressive performance metric for the console SSDs is their sequential read speed. SSD write speed is almost completely irrelevant to video game performance, and even when games perform random reads it will usually be for larger chunks of data than the 4kB blocks that SSD random IO performance ratings are normally based upon. Microsoft&#39;s 2.4GB/s read speed is 10\u201320 times faster than what a mechanical hard drive can deliver, but falls well short of the current standards for high-end consumer SSDs which can saturate a PCIe 3.0 x4 interface with at least 3.5GB/s read speeds. Sony&#39;s 5.5GB/s read speed is slightly faster than currently-available PCIe 4.0 SSDs based on the Phison E16 controller, but everyone competing in the high-end consumer SSD market has more advanced solutions on the way. By the time it ships, the PS5 SSD&#39;s read performance will be unremarkable\u00a0\u2013 matched by other high-end SSDs\u00a0\u2013 except in the context of consoles and low-cost gaming PCs that usually don&#39;t have room in the budget for high-end storage.\n Sony has disclosed that their SSD uses a custom controller with a 12-channel interface to the NAND flash memory. This seems to be the most important way in which their design differs from typical consumer SSDs. High-end consumer SSDs generally use 8-channel controllers and low-end drives often use 4 channels. Higher channel counts are more common for server SSDs, especially those that need to support extreme capacities; 16-channel controllers are common and 12 or 18 channel designs are not unheard of. Sony&#39;s use of a higher channel count than any recent consumer SSD means their SSD controller will be uncommonly large and expensive, but on the other hand they don&#39;t need as much performance from each channel in order to reach their 5.5GB/s goal. They could use any 64-layer or newer TLC NAND and have adequate performance, while consumer SSDs hoping to offer this level of performance or more with 8-channel controllers need to be paired with newer, faster NAND flash.\n  The 12-channel controller also leads to unusual total capacities. A console SSD doesn&#39;t need any more overprovisioning than typical consumer SSDs, so 50% more channels should translate to about 50% more usable capacity. The PS5 will ship with &#34;825 GB&#34; of SSD space, which means we should see each of the 12 channels equipped with 64GiB of raw NAND, organized as either one 512Gbit (64GB) die or two 256Gbit (32GB) dies per channel. That means the nominal raw capacity of the NAND is 768GiB or about 824.6 (decimal) GB. The  usable capacity after accounting for the requisite spare area reserved by the drive is probably going to be more in line with what would be branded as 750 GB by a drive manufacturer, so Sony&#39;s 825GB is overstating things by about 10% more than normal for the storage industry. It&#39;s something that may make a few lawyers salivate.\n It&#39;s probably worth mentioning here that it is unrealistic for Sony to have designed their own high-performance NVMe SSD controller, just like they can&#39;t do a CPU or GPU design on their own. Sony had to partner with an existing SSD controller vendor and commission a custom controller, probably assembled largely from pre-existing and proven IP, but we don&#39;t know who that partner is.\n Microsoft&#39;s SSD won&#39;t be pushing performance at all beyond normal new PC levels now that OEMs have moved beyond SATA SSDs, but a full 1TB in a PC priced similarly to consoles would still be a big win for consumers. Multiple sources indicate that Microsoft is using an off-the-shelf SSD controller from one of the usual suspects (probably the Phison E19T controller), and the drive itself is built by a major SSD OEM. However, they can still lay claim to using a custom form factor and probably custom firmware.\n Neither console vendor has shared official information about the internals of their SSD aside from Sony&#39;s 12-channel specification, but the capacities and performance numbers give us a clue about what to expect. Sony&#39;s pretty much committed to using TLC NAND, but Microsoft&#39;s lower performance target is down in the territory where QLC NAND is an option: 2.4GB/s is a bit more than we see from current 4-channel QLC drives like the Intel 665p (about 2GB/s) but much less than 8-channel QLC drives like the Sabrent Rocket Q (rated 3.2GB/s for the 1TB model). The best fit for Microsoft&#39;s expected performance among current SSD designs would be a 4-channel drive with TLC NAND, but newer 4-channel controllers like the Phison E19T should be able to hit those speeds with the right QLC NAND. Either console could conceivably in the future get a double-capacity version that uses QLC NAND to reach the same read performance of the original models.\n  Without performance specs for writes or random reads, we cannot rule out the possibility of either console SSD using a DRAMless controller. Including a full-sized DRAM cache for the flash translation layer (FTL) tables on a SSD primarily helps performance in two ways: better sustained write speeds when the drive&#39;s full enough to require a lot of background work shuffling data around, and better random access speed when reading data across the full range of the drive. Neither of those really fits the console use case: very heavily read-oriented, and only accessing one game&#39;s dataset at a time. Even if game install sizes end up being in the 100-200GB range, at any given moment the amount of data used by a game won&#39;t be more than low tens of GB, and that is easily handled by DRAMless SSDs with a decent amount of SRAM on the controller itself. Going DRAMless seems very likely for Microsoft&#39;s SSD, and while it would be very strange in any other context to see a 12-channel DRAMless controller, that option does seem to be viable for Sony (and would offset the cost of the high channel count).\n The Sony patent mentioned earlier goes in depth on how to make a DRAMless controller even more suitable for console use cases. Rather than caching a portion of the FTL&#39;s logical-to-physical address mapping table in on-controller SRAM, Sony proposes making the table itself small enough to fit in a small SRAM buffer. Mainstream SSDs have a ratio of 1 GB of DRAM for each 1 TB of flash memory. That ratio is a direct consequence of the FTL managing flash in 4kB chunks. Having the FTL manage flash in larger chunks directly reduces the memory requirements for the mapping table. The downside is that small writes will cause much more write amplification and be much slower. Western Digital sells a  specialized enterprise SSD that uses 32kB chunks for its FTL rather than 4kB, and as a result it only needs an eighth the amount of DRAM. That drive&#39;s random write performance is poor, but the read performance is still competitive. Sony&#39;s patent proposes going way beyond 32kB chunks to using 128MB chunks for the FTL, shrinking the mapping table to mere kilobytes. That requires the host system to be very careful about when and where it writes data, but the read performance that gaming relies upon is not compromised.\n In short, while the Sony SSD should be very fast for its intended purpose, I&#39;m going to wager that you  really wouldn&#39;t want it in your Windows PC. The same is probably true to some extent of Microsoft&#39;s SSD, depending on their firmware tuning decisions.\n  Both Microsoft and Sony are providing expandability for the NVMe storage of their upcoming consoles. Microsoft&#39;s solution is to re-package their internal SSD into a custom removable form factor reminiscent of what consoles used back when memory cards were measured in MB instead of TB and before USB flash drives were ubiquitous. Since it uses all the same components, this expansion card will be functionally identical to the internal storage. The downside is that Microsoft will control the supply and probably pricing of the cards; currently Seagate is the only confirmed partner for selling these proprietary expansion cards.\n  Sony is taking the opposite approach, by giving users access to a standard M.2 PCIe 4.0 slot that can accept aftermarket upgrades. The requirements aren&#39;t entirely clear: Sony will be doing compatibility testing with third-party drives in order to publish a compatibility list, but they haven&#39;t said whether drives not on their approved list will be rejected by the PS5 console. To make it onto Sony&#39;s compatibility list, a drive will need to mechanically fit (ie. no excessively large heatsink) and offer at least as much performance as Sony&#39;s custom internal SSD. The performance requirements mean no drive currently available at retail will qualify, but the situation will be very different next year.\n  POST A COMMENT      What makes a console a good piece of hardware is that I do not have to even care what is inside the box that runs the games since the games that I buy for said console will just work as intended. Every generation has extensive discussion about hardware and the usual comparing and penis measuring between brands. It all ends up being meaningless when you pick up a controller and play a game on it which is far and above the hassle of PC gaming in terms of equipment apathy. In short, IDGAF what drive is inside the thing. Insert disc (or download digital copy) and game on!  Reply\n  Games will work just as intended? Are you suggesting console games never suffer from fps dips below 30fps or have lower quality graphics to hit 30fps?  Reply\n  If you played on both console and PC then you know what that means. I do that and yes, on the console it&#39;s a lot more hassle-free. Every game is optimized for *that* configuration, perhaps with minor variations between the 2-3 cycle refreshes. No need to worry about &#34;does it work better on the Radeon? Should I use the older driver? Adjust graphics settings to determine which one has the best graphics for *your* PC. Etc. It extracts the most out of that hardware.  On my PC (with a far better config than any console) Assassin&#39;s Creed Odyssey freezes for a second (not a figure of speech) every once in a while even if it runs flawlessly otherwise. On the Xbox it works just fine. On the PC I had to adjust graphics because the highest level was just a tad too much but the next lower level left too much performance on the table, so I had to tweak a full screen (or 2) of settings about shadows, aliasing, and whatnot to get &#34;the best for my setup&#34;. Maybe. I don&#39;t know, I can&#39;t be bothered to spend half a day experimenting. Now subjectively it looks better on the Xbox with a 4K screen than on the PC with a 1440p screen.  On the other hand it also means 5 years from now you have an old GPU that you can&#39;t swap out. But for console gamers that&#39;s a small price to pay.  Reply\n  Consoles are definitely easier to start with, but PCs have come a long way and still have &#34;the PC advantages&#34;. You can buy any mid-range gaming PC or build one (if you like that kind of thing, as I do) with a mid-range nVidia card, mid-range CPU, etc. and install Steam and games generally &#34;just work&#34;. nVidia provides software to automatically adjust game settings for your hardware. Load times, graphics quality, and controller quality are all superior on the PC, though new consoles generally take a brief lead before the multi-year period where PCs catch up and surpass them. For me, the mouse and keyboard alone will keep me on PC for the foreseeable future. The PC&#39;s game quality advantage is diminishing over time, but my types of games (RPGs with plots and characters, Warframe, and a few others) are still PC-centric.  Reply\n  Your \u201cpenis measuring\u201d mark makes me think you\u2019re missing the point here. It\u2019s true, there is a bunch of pointless fanboy-arguing between brand fans on each new generation about which is best. But this is AnandTech, and people come here to read articles about hardware, and HOW and WHY games on consoles are able to not only \u201cjust work as intended\u201d but deliver impressive performance through incredibly thoughtful optimizations. What makes a GOOD console is that the final product \u201cjust works\u201d but it\u2019s still worth reading (for a lot of people) about the technology console makers are using to try to make that happen.  This is especially true for the Xbox, where features being developed may influence PC gaming or Windows generally. The new Xbox storage API is going to make its way to Windows, and will be a much-needed improvement that could help more than just games.  If you DGAF what\u2019s inside a box, why are you on this site?  Reply\n  Please please please tell me that storage api evolution is going to mean that NTFS gets replaced at long last? Because NTFS is slow as a dog compared to *nix filesystems and is one of the key reasons MS is very rapidly losing developers to mac &amp; linux devices.  Reply\n  My understanding is that the problem on Windows isn&#39;t so much NTFS as the fact that the VFS layer has hooks in it for antivirus programs and other stuff to inspect/filter any IO. If you get third-party software out of the fast path there shouldn&#39;t be such a big performance deficit.  Reply\n  Eh, you must never have gamed on a PC in the last 10 years. You don&#39;t really have that problem anymore. Plus playing on a controller is SO limiting on the types of games you can play.  Reply", "posttime": "2020-06-13 09:43:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,playstation,matters,\u6e38\u620f\u673a", "title": "\u5b58\u50a8\u5f88\u91cd\u8981\uff1a\u4e3a\u4ec0\u4e48Xbox\u548cPlaystation SSD\u5728\u6e38\u620f\u65b0\u65f6\u4ee3\u53d8\u5f97\u66f4\u52a0\u91cd\u8981", "title_en": "Storage Matters: Why Xbox and Playstation SSDs Usher in a New Era of Gaming", "transed": 1, "url": "https://www.anandtech.com/show/15848/storage-matters-xbox-ps5-new-era-of-gaming/", "via": "", "real_tags": ["\u6e38\u620f", "matters", "\u6e38\u620f\u673a"]}, {"category": "", "categoryclass": "", "imagename": "ac8695242d898b3189205955829e24c8.jpeg", "infoid": 1006363, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u90fd\u5fc5\u987b\u5904\u7406\u6570\u636e\uff0c\u6211\u4eec\u8bd5\u56fe\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u5e76\u5c06\u5176\u5e94\u7528\u5230\u6211\u4eec\u7684\u9879\u76ee\u4e2d\u3002\u4f46\u6bcf\u4e2a\u4eba\u4f3c\u4e4e\u90fd\u5fd8\u8bb0\u4e86\u4e00\u4ef6\u4e8b\u2026\u2026\u3002\u8fd9\u8fdc\u4e0d\u662f\u5b8c\u7f8e\u7684\uff0c\u8fd8\u6709\u5f88\u591a\u4e8b\u60c5\u8981\u505a\uff01\u522b\u62c5\u5fc3\uff0c\u6211\u4eec\u4f1a\u4ece\u5934\u5230\u5c3e\u8ba8\u8bba\ud83d\udc40\u7684\u6bcf\u4e00\u4e2a\u5c0f\u6b65\u9aa4\u3002\n\u6211\u4eec\u90fd\u662f\u4ece\u8111\u6d77\u4e2d\u7684\u6570\u636e\u96c6\u6216\u76ee\u6807\u5f00\u59cb\u7684\u3002\u4e00\u65e6\u6211\u4eec\u53d1\u73b0\u3001\u6536\u96c6\u6216\u641c\u96c6\u4e86\u6211\u4eec\u7684\u6570\u636e\uff0c\u6211\u4eec\u5c31\u4f1a\u628a\u5b83\u62c9\u51fa\u6765\uff0c\u7136\u540e\u76ee\u7779\u65e0\u60c5\u7684\u6570\u5b57\u7ec6\u80de\u3001\u66f4\u591a\u7684\u6570\u5b57\u3001\u7c7b\u522b\uff0c\u4e5f\u8bb8\u8fd8\u6709\u4e00\u4e9b\u5355\u8bcd\ud83d\ude28\uff01\u4e00\u4e2a\u5929\u771f\u7684\u60f3\u6cd5\u63a0\u8fc7\u6211\u4eec\u7684\u8111\u6d77\uff0c\u7528\u6211\u4eec\u7684\u673a\u5668\u5b66\u4e60\u80fd\u529b\u6765\u5904\u7406\u8fd9\u79cd\u9519\u7efc\u590d\u6742\u7684\u6df7\u4e71\u2026\u2026\u3002\u4f46\u662f\uff0c\u5feb\u901f\u641c\u7d22\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\uff0c\u5728\u57f9\u8bad\ud83d\ude31\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u4efb\u52a1\u6709\u5f88\u591a\u3002\n\u4e00\u65e6\u6211\u4eec\u514b\u670d\u4e86\u4e0d\u5b88\u89c4\u77e9\u7684\u6570\u636e\u5e26\u6765\u7684\u51b2\u51fb\uff0c\u6211\u4eec\u5c31\u4f1a\u60f3\u65b9\u8bbe\u6cd5\u4e0e\u6211\u4eec\u5f3a\u5927\u7684\u514b\u661f\ud83e\udd14\u4f5c\u6218\u3002\u6211\u4eec\u9996\u5148\u8bd5\u56fe\u5c06\u6211\u4eec\u7684\u6570\u636e\u8f93\u5165Python\u3002\u7eb8\u9762\u4e0a\u76f8\u5bf9\u7b80\u5355\uff0c\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u7a0d\u5fae\u6709\u70b9\u2026\u2026\u3002\u5168\u529b\u4ee5\u8d74\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u53ea\u9700\u8981\u4e00\u70b9\u70b9\u52aa\u529b(\u6211\u4eec\u5f88\u5e78\u8fd0)\u3002\n\u6211\u4eec\u6ca1\u6709\u6d6a\u8d39\u4efb\u4f55\u65f6\u95f4\u5c31\u5f00\u59cb\u6e05\u7406\u6570\u636e\uff0c\u4ee5\u53bb\u9664\u865a\u5047\u7684\u4e1c\u897f\uff0c\u63ed\u9732\u7f8e\u4e3d\u7684\u4e1c\u897f\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5f00\u59cb\u5f88\u7b80\u5355-\u89c2\u5bdf\u548c\u5220\u9664\u3002\u5b83\u8d77\u4e86\u51e0\u6b21\u4f5c\u7528\uff0c\u4f46\u540e\u6765\u6211\u4eec\u610f\u8bc6\u5230\u3002\u5b83\u771f\u7684\u6ca1\u6709\u516c\u5e73\u5bf9\u5f85\u6211\u4eec\uff01\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u5904\u7406\u6df7\u4e71\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u6765\u589e\u52a0\u6211\u4eec\u7684\u6b66\u5668\u5e93\uff1a\u56fe\u8868\uff01\u901a\u8fc7\u6211\u4eec\u7684\u56fe\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u611f\u89c9\u5230\u6211\u4eec\u7684\u6570\u636e\uff0c\u5176\u4e2d\u7684\u6a21\u5f0f\u548c\u7f3a\u5931\u7684\u5730\u65b9\u3002\u6211\u4eec\u53ef\u4ee5\u63d2\u5165(\u586b\u5145)\u6216\u5220\u9664\u4e22\u5931\u7684\u6570\u636e\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u5c06\u9762\u5bf9\u5907\u53d7\u671f\u5f85\u7684\ud83d\ude0e\u6311\u6218--\u6570\u636e\u5efa\u6a21\uff01\u901a\u8fc7\u4e00\u70b9\u7814\u7a76\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u54ea\u4e9b\u7b56\u7565\u548c\u6a21\u578b\u662f\u6700\u5e38\u7528\u7684\u3002\u8981\u7834\u8bd1\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u7b56\u7565\u548c\u6a21\u578b\u6709\u70b9\u56f0\u96be\uff0c\u4f46\u6211\u4eec\u8fd8\u662f\u8bbe\u6cd5\u5ea6\u8fc7\u4e86\u8fd9\u4e00\u5173\uff0c\u5e76\u5f04\u6e05\u695a\u4e86\u4e00\u5207\uff01\n\u5982\u679c\u4e0d\u505a\u4e00\u4e9b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u5b8c\u6210\u4e00\u4e2a\u9879\u76ee\u3002\u6240\u4ee5\uff0c\u6700\u7ec8\u7684\u4ea7\u54c1\u3001\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u751a\u81f3\u662f\u4e00\u4efd\u62a5\u544a\u90fd\u4f1a\u5e26\u6211\u4eec\u8d70\u5f97\u66f4\u8fdc\uff01\u6211\u4eec\u77e5\u9053\u7b2c\u4e00\u5370\u8c61\u5f88\u91cd\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u4fee\u590d\u4e86gihub\u5b58\u50a8\u5e93\uff0c\u5e76\u786e\u4fdd\u6bcf\u4ef6\u4e8b\u90fd\u5f97\u5230\u4e86\u5f88\u597d\u7684\u8bb0\u5f55\u548c\u89e3\u91ca\u3002\u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5411\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u70ab\u8000\u6211\u4eec\u7684\u8f9b\u52e4\u5de5\u4f5c\u4e86\uff01\ud83d\ude0e\uff01\n\u6570\u636e\u6709\u5404\u79cd\u5f62\u72b6\u548c\u5927\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u7528\u6765\u5c06\u6240\u6709\u5185\u5bb9\u653e\u5165\u4ee3\u7801\u4e2d\u7684\u8fc7\u7a0b\u5f80\u5f80\u5404\u4e0d\u76f8\u540c\u3002\n\u6570\u636e\u6e05\u7406\u6700\u96be\u7684\u90e8\u5206\u4e0d\u662f\u7f16\u7801\u6216\u7406\u8bba\uff0c\u800c\u662f\u6211\u4eec\u7684\u51c6\u5907\u5de5\u4f5c\uff01\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee\u5e76\u4e0b\u8f7d\u6211\u4eec\u7684\u6570\u636e\u96c6\u65f6\uff0c\u6253\u5f00\u4ee3\u7801\u7f16\u8f91\u5668\u5e76\u5f00\u59cb\u952e\u5165\u2026\u2026\u662f\u5f88\u8bf1\u4eba\u7684\u3002\u4f46\u8fd9\u5bf9\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u597d\u5904\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u62a2\u5360\u5148\u673a\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6570\u636e\u4e2d\u6700\u597d\u548c\u6700\u574f\u7684\u90e8\u5206\u505a\u597d\u51c6\u5907\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4eceBASIC\u5f00\u59cb\uff0c\u901a\u8fc7\u624b\u52a8\u68c0\u67e5\u7535\u5b50\u8868\u683c\u3002\u4e00\u65e6\u6211\u4eec\u4e86\u89e3\u4e86\u6570\u636e\u7684\u57fa\u672c\u683c\u5f0f(\u6587\u4ef6\u7c7b\u578b\u4ee5\u53ca\u4efb\u4f55\u7ec6\u8282)\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5c06\u5176\u5168\u90e8\u5bfc\u5165Python\u3002\n\u5f53\u6211\u4eec\u5e78\u8fd0\u5730\u53ea\u6709\u4e00\u4e2a\u7535\u5b50\u8868\u683c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Pandas Read_CSV\u51fd\u6570(\u8ba9\u5b83\u77e5\u9053\u6211\u4eec\u7684\u6570\u636e\u653e\u5728\u54ea\u91cc)\uff1a\n\u867d\u7136\u6211\u4eec\u6b63\u5728\u8ba8\u8bba\u4e00\u7cfb\u5217\u7684\u573a\u666f\uff0c\u4f46\u6211\u4eec\u901a\u5e38\u4e00\u6b21\u53ea\u5904\u7406\u51e0\u4e2a\u573a\u666f\u3002\n\u6211\u4eec\u7684\u524d\u51e0\u4e2a\u95ee\u9898(\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206/\u91cd\u547d\u540d\u5217)\u5f88\u5bb9\u6613\u4f7f\u7528\u51e0\u4e2a\u53c2\u6570\u6765\u5904\u7406\uff0c\u6bd4\u5982\u8981\u8df3\u8fc7\u7684\u884c\u6570\u3001\u8981\u5bfc\u5165\u7684\u7279\u5b9a\u5217\u548c\u6211\u4eec\u7684\u5217\u540d\uff1a\n\u6bcf\u5f53\u6211\u4eec\u7684\u6570\u636e\u5206\u5e03\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u65f6\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4f7f\u7528Pandas Concat\u51fd\u6570\u5c06\u5b83\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\u3002Concat\u51fd\u6570\u5c06DataFrame\u5217\u8868\u7ec4\u5408\u5728\u4e00\u8d77\uff1a\n\u6211\u4eec\u89e3\u6790\u4ee5\u8fde\u63a5\u7535\u5b50\u8868\u683c\u5217\u8868(\u6211\u4eec\u50cf\u4ee5\u524d\u4e00\u6837\u5bfc\u5165)\u3002\u5f53\u7136\uff0c\u5217\u8868\u53ef\u4ee5\u4ee5\u4efb\u4f55\u65b9\u5f0f\u83b7\u5f97(\u56e0\u6b64\uff0c\u82b1\u54e8\u7684\u5217\u8868\u7406\u89e3\u6216\u6bcf\u4e2a\u6587\u4ef6\u7684\u968f\u610f\u5217\u8868\u90fd\u540c\u6837\u6709\u6548)\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u6570\u636e\u5e27\uff0c\u800c\u4e0d\u662f\u6587\u4ef6\u540d/\u8def\u5f84\uff01\n\u5982\u679c\u6211\u4eec\u6ca1\u6709CSV\u6587\u4ef6\uff0cPandas\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\uff01\u6211\u4eec\u53ef\u4ee5\u53ea\u7528READ_CSV\u66ff\u6362READ_EXCEL\u3001READ_SQL\u6216\u5176\u4ed6\u9009\u9879\u3002\n\u5728\u6240\u6709\u6570\u636e\u90fd\u5728Pandas\u6570\u636e\u6846\u4e2d\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u68c0\u67e5\u6211\u4eec\u7684\u6570\u636e\u683c\u5f0f\u662f\u5426\u6b63\u786e\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u68c0\u67e5\u6bcf\u4e2a\u7cfb\u5217\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u4e0d\u662f\u6cdb\u578b\u5bf9\u8c61\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u5229\u7528Pandas\u5185\u7f6e\u7684\u6570\u5b57\u3001\u7c7b\u522b\u548c\u65e5\u671f/\u65f6\u95f4\u503c\u529f\u80fd\u3002\u8981\u67e5\u770b\u8fd9\u4e00\u70b9\uff0c\u53ea\u9700\u8fd0\u884cDataFrame.dtype\u3002\u5982\u679c\u8f93\u51fa\u770b\u8d77\u6765\u5408\u7406(\u5373\u6570\u5b57\u662f\u6570\u5b57\uff0c\u7c7b\u522b\u662f\u7c7b\u522b\u7b49)\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u79fb\u52a8\u3002\u5f53\u6211\u4eec\u9700\u8981\u66f4\u6539\u6211\u4eec\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff01\u8fd9\u53ef\u4ee5\u4f7f\u7528Pandas DataFrame.astype.\u5982\u679c\u8fd9\u4e0d\u662f\u8fd9\u6837\u7684\u8bdd&#39\uff1b\u5982\u679c\u4e0d\u5de5\u4f5c\uff0c\u5219\u5e94\u8be5\u6709\u53e6\u4e00\u4e2a\u66f4\u591aPandas\u51fd\u6570\u7528\u4e8e\u7279\u5b9a\u8f6c\u6362\uff1a\n\u5982\u679c\u6211\u4eec\u9700\u8981\u5206\u6790\u5355\u72ec\u7684\u6570\u636e\u7ec4(\u5373\uff0c\u6211\u4eec\u7684\u6570\u636e\u53ef\u80fd\u6309\u56fd\u5bb6/\u5730\u533a\u5212\u5206)\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Pandas GROUPBY\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GROUPBY\u9009\u62e9\u7279\u5b9a\u6570\u636e\uff0c\u5e76\u5206\u522b\u5bf9\u6bcf\u4e2a\u7ec4\u8fd0\u884c\u51fd\u6570\uff1a\n\u5176\u4ed6\u66f4\u5c0f\u4f17\u7684\u6280\u5de7\uff0c\u5982\u591a\u5c42\u6b21\u7d22\u5f15\uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u4e5f\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0c\u4f46\u662f\uff0c\u7406\u89e3\u548c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u68d8\u624b\u3002\n\u6570\u636e\u662f\u6709\u7528\u7684\uff0c\u6570\u636e\u662f\u5fc5\u8981\u7684\uff0c\u7136\u800c\uff0c\u5b83\u9700\u8981\u5e72\u51c0\u548c\u5207\u4e2d\u8981\u5bb3\uff01\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u65e0\u5904\u4e0d\u5728\uff0c\u5b83\u5bf9\u6211\u4eec\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6839\u672c\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u88ab\u4e22\u5931\u7684\u6570\u636e\u5f04\u5f97\u53d1\u75af\uff0c\u4f46\u96a7\u9053\u7684\u5c3d\u5934\u603b\u662f\u6709\u4e00\u9053\u4eae\u5149\u3002\n\u6211\u4eec\u6240\u8bf4\u7684\u6700\u7ec8\u76ee\u6807\uff0c\u662f\u6307\u6211\u4eec\u81f4\u529b\u4e8e\u9884\u6d4b\u3001\u5206\u7c7b\u6216\u5206\u6790\u7684\u4efb\u4f55\u53d8\u91cf\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u7f29\u5c0f\u6211\u4eec\u7684\u8303\u56f4\uff0c\u800c\u4e0d\u662f\u9677\u5165\u65e0\u7528\u7684\u4fe1\u606f\u4e4b\u4e2d\u3002\n\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u4e3b\u8981\u5ba2\u89c2\u7279\u5f81\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u627e\u5230\u6a21\u5f0f\u3001\u5173\u7cfb\u3001\u4e22\u5931\u7684\u6570\u636e\u7b49\u7b49\u3002\u4e00\u4e2a\u7b80\u5355\u800c\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u7ed8\u5236\u56fe\u8868\uff01\u5feb\u901f\u4f7f\u7528\u718a\u732b\u7ed8\u5236\u51fa\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\uff0c\u5e76\u5c1d\u8bd5\u67e5\u770b\u6bcf\u4e2a\u53d8\u91cf\u7684\u4f4d\u7f6e\u3002\n\u4e00\u65e6\u6211\u4eec\u786e\u5b9a\u4e86\u6570\u636e\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\u6216\u8d8b\u52bf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u590d\u5b83\u4eec\u3002\u901a\u5e38\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u9009\u9879\uff1a\n\u8981\u4ece\u8bc6\u522b\u4e22\u5931\u7684\u6570\u636e\u5230\u9009\u62e9\u5982\u4f55\u5904\u7406\u5b83\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5b83\u5982\u4f55\u5f71\u54cd\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u6807\u3002\u5bf9\u4e8e\u4e22\u5931\u7684\u6570\u636e\uff0c\u6211\u4eec\u5220\u9664\u4efb\u4f55\u4f3c\u4e4e\u5bf9\u6700\u7ec8\u7ed3\u679c\u6ca1\u6709\u91cd\u5927\u5f71\u54cd\u7684\u4e1c\u897f(\u5373\uff0c\u6211\u4eec\u627e\u4e0d\u5230\u6709\u610f\u4e49\u7684\u6a21\u5f0f)\uff0c\u6216\u8005\u7f3a\u5c11\u592a\u591a\u6570\u636e\u800c\u65e0\u6cd5\u5f97\u51fa\u4ef7\u503c\u7684\u5730\u65b9\u3002\u6709\u65f6\uff0c\u6211\u4eec\u8fd8\u51b3\u5b9a\u5220\u9664\u975e\u5e38\u5c11\u91cf\u7684\u4e22\u5931\u6570\u636e(\u56e0\u4e3a\u8fd9\u6bd4\u586b\u5145\u5b83\u66f4\u5bb9\u6613)\u3002\n\u5982\u679c\u6211\u4eec\u5df2\u51b3\u5b9a\u5220\u9664\u4fe1\u606f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528Pandas DataFrame.drop\u3002\u5b83\u53ef\u4ee5\u4ece\u6570\u636e\u5e27\u4e2d\u5220\u9664\u5217\u6216\u884c\u3002\u5b83\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPandas\u4e0d\u4f1a\u4fee\u6539/\u5220\u9664\u6e90\u6570\u636e\u5e27\u4e2d\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5fc5\u987b\u6307\u5b9ainplace=True\u3002\u6ce8\u610f\uff0cAxis\u53c2\u6570\u6307\u5b9a\u662f\u5426\u8981\u5220\u9664\u884c\u6216\u5217\uff0c\u8fd9\u53ef\u80fd\u5f88\u6709\u7528\u3002\n\u5f53\u4e0d\u5220\u9664\u5b8c\u6574\u7684\u5217\uff0c\u6216\u8005\u7279\u522b\u9488\u5bf9\u4e22\u5931\u7684\u6570\u636e\u65f6\uff0c\u4f9d\u8d56\u51e0\u4e2a\u6f02\u4eae\u7684Pandas\u51fd\u6570\u901a\u5e38\u5f88\u6709\u7528\u3002\u8981\u5220\u9664\u7a7a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528DataFrame.dropna\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cdropna\u4f1a\u5b8c\u5168\u5220\u9664\u6240\u6709\u7f3a\u5c11\u7684\u503c\u3002\u4f46\u662f\uff0c\u8bbe\u7f6e\u53c2\u6570HOW TO ALL\u6216\u8bbe\u7f6e\u9608\u503c(\u9608\u503c\uff0c\u8868\u793a\u9700\u8981\u591a\u5c11\u7a7a\u503c\u624d\u80fd\u5220\u9664)\u53ef\u4ee5\u5f25\u8865\u8fd9\u4e00\u70b9\u3002\n\u5982\u679c\u6211\u4eec\u6709\u5c11\u91cf\u4e0d\u89c4\u5219\u7684\u7f3a\u5931\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u51e0\u79cd\u65b9\u6cd5\u6765\u586b\u5145\u5b83\u4eec\u3002\u6700\u7b80\u5355\u7684\u662fDataFrame.fulna\uff0c\u5b83\u5c06\u7f3a\u5931\u503c\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u9884\u8bbe\u503c\u3002\u66f4\u590d\u6742\u4f46\u7075\u6d3b\u7684\u9009\u9879\u662f\u4f7f\u7528DataFrame.interpolate\u8fdb\u884c\u63d2\u503c\u3002\u63d2\u503c\u57fa\u672c\u4e0a\u5141\u8bb8\u4efb\u4f55\u4eba\u7b80\u5355\u5730\u8bbe\u7f6e\u4ed6\u4eec\u60f3\u8981\u7528\u6765\u66ff\u6362\u6bcf\u4e2a\u7a7a\u503c\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5305\u62ec\u4e0a\u4e00\u4e2a/\u4e0b\u4e00\u4e2a\u503c\u3001\u7ebf\u6027\u548c\u65f6\u95f4(\u6700\u540e\u4e24\u4e2a\u662f\u6839\u636e\u6570\u636e\u63a8\u65ad\u7684)\u3002\u5f53\u4f7f\u7528\u65f6\u95f4\u65f6\uff0c\u65f6\u95f4\u662f\u4e00\u4e2a\u81ea\u7136\u7684\u9009\u62e9\uff0c\u5e76\u4e14\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0cInterpolate\u9700\u8981\u4f20\u9012\u5230\u7eaf\u7cb9\u5305\u542b\u7f3a\u5c11\u6570\u636e\u7684\u5217\u7684DataFrame\u4e2d(\u5426\u5219\u5c06\u629b\u51fa\u9519\u8bef)\u3002\n\u6bcf\u5f53\u6211\u4eec\u770b\u5230\u7ecf\u5e38\u4e22\u5931\u7684\u6570\u636e\u6216\u5177\u6709\u4f7f\u7528\u4e0d\u540c\u65f6\u95f4\u5c3a\u5ea6\u7684\u591a\u4e2a\u6570\u636e\u6e90\u65f6\uff0c\u91cd\u91c7\u6837\u90fd\u5f88\u6709\u7528(\u4f8b\u5982\uff0c\u786e\u4fdd\u4ee5\u5206\u949f\u548c\u5c0f\u65f6\u4e3a\u5355\u4f4d\u7684\u5ea6\u91cf\u53ef\u4ee5\u5408\u5e76)\u3002\u76f4\u89c2\u5730\u7406\u89e3\u91cd\u91c7\u6837\u53ef\u80fd\u6709\u4e9b\u56f0\u96be\uff0c\u4f46\u5f53\u60a8\u5bf9\u7279\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6d4b\u91cf\u503c\u8fdb\u884c\u5e73\u5747\u65f6\uff0c\u91cd\u91c7\u6837\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u83b7\u53d6\u6bcf\u4e2a\u6708\u7684\u5e73\u5747\u503c\u6765\u83b7\u5f97\u6708\u503c\uff1a\n#34\uff1bM&34\uff1b\u4ee3\u8868\u6708\u4efd\uff0c\u53ef\u4ee5\u66ff\u6362\u4e3a\u8868\u793a\u5e74\u4efd\u548c\u5176\u4ed6\u9009\u9879\u7684&#34\uff1bY&34\uff1b\u3002\n\u5c3d\u7ba1\u6570\u636e\u6e05\u7406\u8fc7\u7a0b\u53ef\u80fd\u76f8\u5f53\u5177\u6709\u6311\u6218\u6027\uff0c\u4f46\u5982\u679c\u6211\u4eec\u8bb0\u5f97\u6700\u521d\u7684\u610f\u56fe\uff0c\u5b83\u5c06\u6210\u4e3a\u4e00\u9879\u66f4\u7b26\u5408\u903b\u8f91\u3001\u66f4\u76f4\u63a5\u7684\u4efb\u52a1\uff01\u5982\u679c\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u6240\u9700\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u56de\u5230\u7b2c\u4e00\u9636\u6bb5\u5e76\u6536\u96c6\u66f4\u591a\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u4e22\u5931\u6570\u636e\u8868\u660e\u6570\u636e\u6536\u96c6\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u4ed4\u7ec6\u8003\u8651\u5e76\u8bb0\u4e0b\u53d1\u751f\u7684\u4f4d\u7f6e\u662f\u5f88\u6709\u7528\u7684\u3002\n\u5b8c\u6210\u65f6\uff0cPandas Unique\u548cVALUE_COUNTS\u51fd\u6570\u5bf9\u4e8e\u51b3\u5b9a\u76f4\u63a5\u5220\u9664\u54ea\u4e9b\u7279\u6027\u4ee5\u53ca\u7ed8\u5236/\u7814\u7a76\u54ea\u4e9b\u7279\u6027\u975e\u5e38\u6709\u7528\u3002\n\u89c6\u89c9\u5316\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u4f46\u5f88\u96be\u2026\u2026\u3002\u4e0d\u662f\u592a\u590d\u6742\u3002\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\uff0c\u628a\u60c5\u8282\u770b\u4f5c\u662f\u4e00\u4ef6\u7410\u788e\u7684\u4e8b\u60c5\u592a\u5bb9\u6613\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u574f\u5bb6\u4f19\u505a\u4e86\u4e00\u4ef6\u975e\u5e38\u975e\u5e38\u597d\u7684\u4e8b\u60c5-\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6211\u4eec\u6570\u636e\u7684\u5185\u90e8\u8fd0\u4f5c\uff01\u53ea\u9700\u8bb0\u4f4f\uff1a\n\u56e0\u6b64\uff0c\u5f53\u88ab\u56f0\u5728\u60f3\u6cd5\u4e2d\uff0c\u6216\u8005\u4e0d\u592a\u786e\u5b9a\u8981\u505a\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u7684\u57fa\u7840\u77e5\u8bc6\u603b\u662f\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u8bc6\u522b\u6709\u7528\u7684\u6a21\u5f0f\u548c\u6709\u610f\u4e49\u7684\u5173\u7cfb\u3002\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u6709\u70b9\ud83e\udd76\uff0c\u4f46\u5b83\u786e\u5b9e\u5f88\u6709\u7528\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u753b\u82b1\u54e8\u7684\u516d\u8fb9\u5f62\u56fe\uff0c\u800c\u662f\u63cf\u7ed8\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u7b80\u5355\u5730\u89e3\u91ca\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\uff01\n\u8981\u5f00\u59cb\u7ed8\u56fe\uff0c\u53ea\u9700\u5728\u4efb\u4f55\u7cfb\u5217\u6216\u6570\u636e\u5e27\u4e0a\u4f7f\u7528Pandas.lot()\uff01\u5f53\u6211\u4eec\u9700\u8981\u66f4\u591a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6df1\u5165\u7814\u7a76MatPlotLib\u3001Seborn\u6216\u4ea4\u4e92\u5f0f\u7ed8\u56fe\u5e93\u3002\ndata.lot(x=&#34\uff1bColumn 1 Name&#34\uff1b\uff0cy=&#34\uff1bColumn 2 Name&#34\uff1b\uff0cKind=&#34\uff1bbar&#34\uff1b\uff0cfigsize=(10\uff0c10))data.lot(x=&#34\uff1bColumn 1 Name&#34\uff1b\uff0cy=&&#34\uff1bColumn 3 Name&#34\uff1b\uff0cSub_y=True)data.hist()data.groupby(&#34\uff1bgroup&#34\uff1b).boxlot()\u3002\n\u572890%\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u57fa\u672c\u529f\u80fd\u5c31\u8db3\u591f\u4e86(\u66f4\u591a\u4fe1\u606f\u8bf7\u70b9\u51fb\u8fd9\u91cc)\uff0c\u641c\u7d22\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u5982\u4f55\u7ed8\u5236\u7279\u522b\u6709\u5f02\u56fd\u60c5\u8c03\u7684\u56fe\u5f62\ud83d\ude0f\u3002\n\u73b0\u5728\u7ec8\u4e8e\u5230\u4e86\u6709\u8da3\u7684\u4e1c\u897f\u6d3e\u751f\u7684\u7ed3\u679c\u4e86\u3002\u8bad\u7ec3\u4e00\u4e2a\u79d1\u5b66\u5de5\u5177\u5305\u5b66\u4e60\u6a21\u578b\u4f3c\u4e4e\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4f46\u6ca1\u6709\u4eba\u6df1\u5165\u5230\u7ec6\u8282\uff01\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\u8bda\u5b9e\u5730\u8bf4\uff0c\u4e0d\u662f\u6bcf\u4e2a\u6570\u636e\u96c6\uff0c\u4e5f\u4e0d\u662f\u6bcf\u4e2a\u6a21\u578b\u90fd\u662f\u76f8\u7b49\u7684\u3002\n\u6839\u636e\u6211\u4eec\u7684\u6570\u636e\uff0c\u6211\u4eec\u7684\u5efa\u6a21\u65b9\u6cd5\u4f1a\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u6709\u4e09\u4e2a\u7279\u522b\u91cd\u8981\u7684\u56e0\u7d20\uff1a\n\u6211\u4eec\u7684\u95ee\u9898\u7c7b\u578b\u5f52\u7ed3\u4e3a\uff0c\u6211\u4eec\u662f\u8bd5\u56fe\u9884\u6d4b\u4e00\u4e2a\u7c7b\u522b/\u6807\u7b7e(\u79f0\u4e3a\u5206\u7c7b)\u3001\u4e00\u4e2a\u503c(\u79f0\u4e3a\u56de\u5f52)\uff0c\u8fd8\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4(\u79f0\u4e3a\u805a\u7c7b)\u3002\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u5728\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u5176\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6211\u4eec\u6b63\u5728\u5c1d\u8bd5\u9884\u6d4b\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u79f0\u6211\u4eec\u7684\u6a21\u578b\u662f\u6709\u76d1\u7763\u7684\uff0c\u5982\u679c\u6ca1\u6709\u76d1\u7763\u7684\u8bdd\u3002\u53ef\u7528\u7684\u6570\u636e\u91cf\u4ee5\u53ca\u5b83\u7684\u590d\u6742\u7a0b\u5ea6\u9884\u793a\u7740\u4e00\u4e2a\u6a21\u578b\u5c06\u4f1a\u591a\u4e48\u7b80\u5355\u3002\u5177\u6709\u66f4\u591a\u7279\u5f81(\u5373\u5217)\u7684\u6570\u636e\u5f80\u5f80\u66f4\u590d\u6742\u3002\n\u89e3\u91ca\u590d\u6742\u6027\u7684\u610f\u4e49\u5728\u4e8e\u4e86\u89e3\u54ea\u4e9b\u6a21\u578b\u5bf9\u6211\u4eec\u7684\u6570\u636e\u6765\u8bf4\u592a\u597d\u6216\u592a\u5dee\u3002\n\u6a21\u578b\u7684\u62df\u5408\u4f18\u52a3\u544a\u8bc9\u6211\u4eec\u8fd9\u4e00\u70b9\uff01\u5982\u679c\u4e00\u4e2a\u6a21\u578b\u5f88\u96be\u89e3\u91ca\u6211\u4eec\u7684\u6570\u636e(\u592a\u7b80\u5355)\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u5b83\u4e0d\u7b26\u5408\uff0c\u5982\u679c\u5b83\u5b8c\u5168\u8fc7\u5ea6(\u592a\u590d\u6742)\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u5b83\u8fc7\u5ea6\u62df\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u4ece\u4ec0\u4e48\u90fd\u4e0d\u5b66\u5230\u8bb0\u4f4f\u6240\u6709\u4e1c\u897f\u7684\u4e00\u4e2a\u5149\u8c31\u3002\u6211\u4eec\u9700\u8981\u53d6\u5f97\u5e73\u8861\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u6a21\u578b\u80fd\u591f\u5c06\u6211\u4eec\u7684\u7ed3\u8bba\u6982\u62ec\u4e3a\u65b0\u7684\u4fe1\u606f\u3002\u8fd9\u901a\u5e38\u88ab\u79f0\u4e3a\u504f\u5dee-\u65b9\u5dee\u6743\u8861\u3002\u8bf7\u6ce8\u610f\uff0c\u590d\u6742\u6027\u4e5f\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u53ef\u89e3\u91ca\u6027\u3002\n\u590d\u6742\u7684\u6a21\u578b\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8bad\u7ec3\uff0c\u7279\u522b\u662f\u5728\u5927\u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\u3002\u6240\u4ee5\uff0c\u5347\u7ea7\u8ba1\u7b97\u673a\uff0c\u901a\u5bb5\u8fd0\u884c\u6a21\u578b\uff0c\u7136\u540e\u6682\u505c\u4e00\u6bb5\u65f6\u95f4\ud83d\ude01\uff01\n\u5728\u8bad\u7ec3\u6a21\u578b\u4e4b\u524d\uff0c\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\u6211\u4eec\u5c06\u9700\u8981\u4e00\u4e9b\u6570\u636e\u96c6\u6765\u6d4b\u8bd5\u5b83(\u8fd9\u6837\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u7684\u8868\u73b0\u6709\u591a\u597d)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7ecf\u5e38\u5c06\u6211\u4eec\u7684\u6570\u636e\u96c6\u5212\u5206\u4e3a\u5355\u72ec\u7684\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u6d4b\u8bd5\u6211\u4eec\u7684\u6a21\u578b\u5bf9\u65b0\u7684\u672a\u77e5\u6570\u636e\u7684\u6cdb\u5316\u80fd\u529b\u6709\u591a\u597d\u3002\u8fd9\u901a\u5e38\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u6570\u636e\u5f88\u597d\u5730\u4ee3\u8868\u4e86\u73b0\u5b9e\u4e16\u754c\u3002\n\u5b9e\u9645\u7684\u6d4b\u8bd5\u6570\u636e\u91cf\u5e76\u4e0d\u592a\u91cd\u8981\uff0c\u4f46\u662f\u7ecf\u5e38\u4f7f\u752880%\u7684\u8bad\u7ec3\u548c20%\u7684\u6d4b\u8bd5\u3002\n\u4ea4\u53c9\u9a8c\u8bc1\u662f\u6307\u5c06\u6570\u636e\u96c6\u62c6\u5206\u6210\u51e0\u4e2a\u6587\u4ef6\u5939(\u5373\u539f\u59cb\u6570\u636e\u96c6\u7684\u5b50\u96c6\u6216\u90e8\u5206)\u3002\u8fd9\u5f80\u5f80\u6bd4\u4f7f\u7528\u5355\u4e2a\u6d4b\u8bd5/\u9a8c\u8bc1\u96c6\u66f4\u5065\u58ee\uff0c\u6297\u8fc7\u5ea6\u62df\u5408\uff01\u51e0\u4e2aSkLearning\u51fd\u6570\u6709\u52a9\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u4f46\u901a\u5e38\u76f4\u63a5\u901a\u8fc7\u7f51\u683c\u6216\u968f\u673a\u641c\u7d22(\u4e0b\u9762\u8ba8\u8bba)\u6765\u5b8c\u6210\u3002\n\u6709\u4e9b\u56e0\u7d20\u6211\u4eec\u7684\u6a21\u578b\u65e0\u6cd5\u89e3\u91ca\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e86\u67d0\u4e9b\u8d85\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u56e0\u6a21\u578b\u800c\u5f02\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8bd5\u9519\u6216\u7f51\u683c\u6216\u968f\u673a\u641c\u7d22\u7b49\u7b80\u5355\u7b97\u6cd5\u627e\u5230\u6700\u4f73\u503c\u3002\u5bf9\u4e8e\u7f51\u683c\u641c\u7d22\uff0c\u6211\u4eec\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u503c(\u86ee\u529b\ud83d\ude07)\uff0c\u5e76\u4ece\u67d0\u4e9b\u5206\u5e03/\u9009\u62e9\u4e2d\u968f\u673a\u641c\u7d22\u968f\u673a\u503c\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u901a\u5e38\u90fd\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u3002\nSkLearning\u4e2d\u7684\u7f51\u683c\u641c\u7d22\u901a\u8fc7\u53c2\u6570\u5b57\u5178\u5de5\u4f5c\u3002\u6bcf\u4e2a\u6761\u76ee\u952e\u4ee3\u8868\u8981\u8c03\u4f18\u7684\u8d85\u53c2\u6570\uff0c\u503c(\u5217\u8868\u6216\u5143\u7ec4)\u662f\u8981\u4ece\u4e2d\u9009\u62e9\u7684\u503c\uff1a\n\u521b\u5efa\u7f51\u683c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u63d0\u53d6\u5206\u6570\uff1a\n\u8fd9\u91cc\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u8bad\u7ec3\u6570\u636e\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u6570\u636e\u3002\u5373\u4f7f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6d4b\u8bd5\u6a21\u578b\uff0c\u6211\u4eec\u6700\u7ec8\u4e5f\u4f1a\u5c1d\u8bd5\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u83b7\u5f97\u6700\u4f73\u5339\u914d\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7ee7\u7eed\u6d4b\u8bd5\u6bcf\u4e2a\u6a21\u578b\uff1a\nSkLearning\u4e2d\u7684\u968f\u673a\u641c\u7d22\u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4f46\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u8d85\u53c2\u6570\u6240\u5904\u7684\u5206\u5e03\u7c7b\u578b\u3002\u867d\u7136\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5b83\u53ef\u4ee5\u66f4\u5feb\u5730\u4ea7\u751f\u76f8\u540c\u6216\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u4f46\u60c5\u51b5\u4e0d\u540c\uff0c\u60c5\u51b5\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6700\u597d\u575a\u6301\u7f51\u683c\u641c\u7d22\u3002\n\u4f7f\u7528SkLearning\uff0c\u5b83\u5c31\u50cf\u627e\u5230\u6211\u4eec\u60f3\u8981\u7684\u578b\u53f7\u540d\u79f0\uff0c\u7136\u540e\u53ea\u9700\u4e3a\u5b83\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u4e00\u6837\u7b80\u5355\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6587\u6863\u94fe\u63a5\uff01\u4f8b\u5982\u3002\n\u7ebf\u6027\u56de\u5f52\u662f\u7528\u76f4\u7ebf\u6765\u62df\u5408\u6211\u4eec\u7684\u6570\u636e\uff0c\u5b83\u662f\u6700\u57fa\u672c\u3001\u6700\u57fa\u672c\u7684\u6a21\u578b\u3002\u7ebf\u6027\u56de\u5f52\u6709\u51e0\u79cd\u53d8\u79cd\uff0c\u5982\u5957\u7d22\u548c\u5cad\u56de\u5f52(\u8fd9\u662f\u9632\u6b62\u8fc7\u62df\u5408\u7684\u6b63\u5219\u5316\u65b9\u6cd5)\u3002\u591a\u9879\u5f0f\u56de\u5f52\u53ef\u4ee5\u7528\u6765\u62df\u5408\u9ad8\u6b21\u66f2\u7ebf(\u5982\u629b\u7269\u7ebf\u548c\u5176\u4ed6\u66f2\u7ebf)\u3002Logistic\u56de\u5f52\u662f\u53e6\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\u7684\u53d8\u79cd\u3002\n\u5c31\u50cf\u7ebf\u6027/\u903b\u8f91\u56de\u5f52\u4e00\u6837\uff0c\u652f\u6301\u5411\u91cf\u673a(SVM)\u8bd5\u56fe\u5c06\u76f4\u7ebf\u6216\u66f2\u7ebf\u62df\u5408\u5230\u6570\u636e\u70b9\u3002\u7136\u800c\uff0cSVM\u7684\u76ee\u6807\u662f\u6700\u5927\u5316\u8fb9\u754c\u4e0e\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb(\u800c\u4e0d\u662f\u8ba9\u76f4\u7ebf/\u66f2\u7ebf\u7a7f\u8fc7\u6bcf\u4e2a\u70b9)\u3002\n\u652f\u6301\u5411\u91cf\u673a\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u80fd\u591f\u4f7f\u7528\u4e0d\u540c\u7684\u6838\u3002\u6838\u662f\u4e00\u4e2a\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u6838\u5141\u8bb8\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u6570\u636e\uff0c\u540c\u65f6\u4fdd\u6301\u826f\u597d\u7684\u6548\u7387\u3002\u6838\u5c06\u8f93\u5165\u6620\u5c04\u5230\u66f4\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u4ece\u800c\u5f62\u6210\u8fb9\u754c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5bf9\u4e8e\u5927\u91cf\u7684\u7279\u5f81\u901a\u5e38\u662f\u4e0d\u53ef\u884c\u7684\u3002\u90a3\u4e48\u795e\u7ecf\u7f51\u7edc\u6216\u53e6\u4e00\u4e2a\u6a21\u578b\u53ef\u80fd\u4f1a\u662f\u66f4\u597d\u7684\u9009\u62e9\uff01\n\u6240\u6709\u7684\u8bdd\u9898\u90fd\u662f\u5173\u4e8e\u6df1\u5ea6\u5b66\u4e60\u548c\u795e\u7ecf\u7f51\u7edc\u7684\uff0c\u5b83\u4eec\u662f\u590d\u6742\u7684\u3001\u7f13\u6162\u7684\u548c\u8d44\u6e90\u5bc6\u96c6\u578b\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u7528\u4e8e\u590d\u6742\u7684\u6570\u636e\uff0c\u4f46\u662f\u5f53\u9047\u5230\u5927\u578b\u7684\u975e\u7ed3\u6784\u5316\u6570\u636e\u96c6\u65f6\uff0c\u5b83\u4eec\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\n\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u8fc7\u5ea6\u62df\u5408\uff0c\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8ddf\u8e2a\u8bef\u5dee\u968f\u65f6\u95f4\u7684\u53d8\u5316(\u79f0\u4e3a\u5b66\u4e60\u66f2\u7ebf)\u3002\n\u6df1\u5ea6\u5b66\u4e60\u662f\u4e00\u4e2a\u975e\u5e38\u4e30\u5bcc\u7684\u9886\u57df\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u8ba8\u8bba\u7684\u5185\u5bb9\u5b9e\u5728\u592a\u591a\u4e86\u3002\u5b9e\u9645\u4e0a\uff0cScikit Learning\u662f\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u5e93\uff0c\u51e0\u4e4e\u6ca1\u6709\u6df1\u5ea6\u5b66\u4e60\u80fd\u529b(\u4e0ePyTorch\u6216TensorFlow\u76f8\u6bd4)\u3002\n\u51b3\u7b56\u6811\u662f\u4e00\u79cd\u7b80\u5355\u5feb\u6377\u7684\u5173\u7cfb\u5efa\u6a21\u65b9\u6cd5\u3002\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u4e00\u68f5\u51b3\u7b56\u6811\uff0c\u5e2e\u52a9\u786e\u5b9a\u6570\u636e\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u6216\u6807\u7b7e\u3002\u51b3\u7b56\u6811\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898\u3002\u867d\u7136\u7b80\u5355\uff0c\u4f46\u4e3a\u4e86\u907f\u514d\u8fc7\u5ea6\u62df\u5408\uff0c\u5fc5\u987b\u9009\u62e9\u51e0\u4e2a\u8d85\u53c2\u6570\u3002\u6240\u6709\u8fd9\u4e9b\u901a\u5e38\u90fd\u4e0e\u6811\u7684\u6df1\u5ea6\u548c\u8981\u505a\u51fa\u7684\u51b3\u7b56\u6709\u5173\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528k-\u5747\u503c\u5c06\u672a\u6807\u8bb0\u7684\u6570\u636e\u5206\u7ec4\u5230\u51e0\u4e2a\u7c07\u4e2d\uff0c\u901a\u5e38\uff0c\u5b58\u5728\u7684\u7c07\u7684\u6570\u91cf\u662f\u4e00\u4e2a\u9009\u62e9\u7684\u8d85\u53c2\u6570\u3002\nK-Means\u7684\u5de5\u4f5c\u539f\u7406\u662f\u8bd5\u56fe\u4f18\u5316(\u51cf\u5c11)\u4e00\u4e9b\u79f0\u4e3a\u60ef\u6027\u7684\u51c6\u5219(\u5373\u51fd\u6570)\uff0c\u5b83\u53ef\u4ee5\u770b\u4f5c\u662f\u8bd5\u56fe\u6700\u5c0f\u5316\u4ece\u4e00\u7ec4\u8d28\u5fc3\u5230\u6bcf\u4e2a\u6570\u636e\u70b9\u7684\u8ddd\u79bb\u3002\n\u968f\u673a\u68ee\u6797\u662f\u5728\u6570\u636e\u7684\u968f\u673a\u5b50\u96c6(\u81ea\u4e3e)\u4e0a\u8bad\u7ec3\u7684\u591a\u4e2a\u51b3\u7b56\u6811\u7684\u7ec4\u5408\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u88c5\u888b\uff0c\u5141\u8bb8\u968f\u673a\u68ee\u6797\u4e0e\u590d\u6742\u6570\u636e\u83b7\u5f97\u826f\u597d\u7684\u62df\u5408(\u4f4e\u504f\u5dee\u548c\u4f4e\u65b9\u5dee)\u3002\n\u4e00\u540d\u9009\u6c11\u53ef\u80fd\u4f1a\u6295\u7968\u7ed9\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5019\u9009\u4eba\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u5927\u591a\u6570\u9009\u6c11\u5728\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u505a\u51fa\u79ef\u6781\u7684\u51b3\u5b9a\u3002\n\u5bf9\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u6211\u4eec\u5e73\u5747\u6bcf\u4e2a\u51b3\u7b56\u6811\u7684\u8f93\u51fa\uff0c\u800c\u5bf9\u4e8e\u5206\u7c7b\uff0c\u6211\u4eec\u9009\u62e9\u6700\u53d7\u6b22\u8fce\u7684\u4e00\u4e2a\u3002\u8fd9\u53ef\u80fd\u4e0d\u603b\u662f\u6709\u6548\u7684\uff0c\u4f46\u6211\u4eec\u5047\u8bbe\u5b83\u901a\u5e38\u4f1a\u6709\u6548(\u7279\u522b\u662f\u5bf9\u4e8e\u5177\u6709\u591a\u5217\u7684\u5927\u578b\u6570\u636e\u96c6)\u3002\n\u968f\u673a\u68ee\u6797\u7684\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\uff0c\u4e0d\u91cd\u8981\u7684\u529f\u80fd\u4e0d\u5e94\u8be5\u56e0\u4e3a\u6c11\u4e3b-ESC\u81ea\u4e3e\u8fc7\u7a0b\u800c\u5bf9\u6027\u80fd\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\uff01\n\u8d85\u53c2\u6570\u9009\u62e9\u4e0e\u51b3\u7b56\u6811\u76f8\u540c\uff0c\u4f46\u4e5f\u4e0e\u51b3\u7b56\u6811\u7684\u6570\u91cf\u76f8\u540c\u3002\u57fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u6811\u8d8a\u591a\uff0c\u8fc7\u5ea6\u62df\u5408\u5c31\u8d8a\u5c11\uff01\n\u50cfAdaBoost\u6216XGBoost\u8fd9\u6837\u7684\u96c6\u6210\u6a21\u578b\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u6a21\u578b\u53e0\u52a0\u5230\u53e6\u4e00\u4e2a\u6a21\u578b\u4e0a\u6765\u5de5\u4f5c\u7684\u3002\u8fd9\u91cc\u7684\u5047\u8bbe\u662f\uff0c\u6bcf\u4e2a\u540e\u7eed\u7684\u5f31\u5b66\u4e60\u8005\u90fd\u4f1a\u7ea0\u6b63\u524d\u4e00\u4e2a\u6a21\u578b\u7684\u7f3a\u9677(\u56e0\u6b64\u79f0\u4e3aBoosting)\u3002\u56e0\u6b64\uff0c\u6a21\u578b\u7684\u7ec4\u5408\u5e94\u8be5\u63d0\u4f9b\u6bcf\u4e2a\u6a21\u578b\u7684\u4f18\u52bf\u800c\u4e0d\u5b58\u5728\u6f5c\u5728\u7684\u9677\u9631\u3002\n\u8fed\u4ee3\u65b9\u6cd5\u610f\u5473\u7740\u4ee5\u524d\u7684\u6a21\u578b\u6027\u80fd\u5f71\u54cd\u5f53\u524d\u6a21\u578b\uff0c\u8f83\u597d\u7684\u6a21\u578b\u4f18\u5148\u8003\u8651\uff1bBoosted\u6a21\u578b\u7684\u6027\u80fd\u7565\u597d\u4e8e\u888b\u88c5\u6a21\u578b(\u4e5f\u79f0\u4e3a\u968f\u673a\u68ee\u6797)\uff0c\u4f46\u4e5f\u7565\u6709\u53ef\u80fd\u8fc7\u5ea6\u62df\u5408\uff1bSkLearning\u63d0\u4f9bAdaBoost\u8fdb\u884c\u5206\u7c7b\u548c\u56de\u5f52\u3002\n\u8fd9\u662f\u6d41\u7a0b\ud83e\uddd0\u7684\u6700\u540e\u4f46\u53ef\u80fd\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u6211\u4eec\u5df2\u7ecf\u6295\u5165\u4e86\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e0d\u9057\u4f59\u529b\u5730\u521b\u9020\u4e00\u4e9b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4e1c\u897f\uff01\n\u6709\u591a\u79cd\u9009\u62e9\u3002Streamlight\u5bf9\u4e8e\u9762\u5411\u6570\u636e\u7684\u7f51\u7ad9\u6765\u8bf4\u662f\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u9009\u62e9\uff0cKotlin\u3001Swift\u548cDART\u7b49\u5de5\u5177\u53ef\u7528\u4e8eAndroid/iOS\u5f00\u53d1\u3002\u5e26\u6709VueJS\u7b49\u6846\u67b6\u7684JavaScript\u4e5f\u53ef\u7528\u4e8e\u989d\u5916\u7684\u7075\u6d3b\u6027\u3002\n\u5728\u5c1d\u8bd5\u4e86\u5176\u4e2d\u7684\u5927\u90e8\u5206\u4e4b\u540e\uff0c\u8001\u5b9e\u8bf4\uff0c\u6211\u4f1a\u63a8\u8350\u575a\u6301\u4f7f\u7528Streamlight\uff0c\u56e0\u4e3a\u5b83\u6bd4\u5176\u4ed6\u7684\u5bb9\u6613\u5f97\u591a\uff01\n\u5728\u8fd9\u91cc\uff0c\u91cd\u8981\u7684\u662f\u4ece\u4e00\u4e2a\u613f\u666f(\u8d8a\u7b80\u5355\u8d8a\u597d)\u5f00\u59cb\uff0c\u8bd5\u7740\u627e\u51fa\u54ea\u4e9b\u90e8\u5206\u662f\u6700\u91cd\u8981\u7684\u3002\u7136\u540e\u5c1d\u8bd5\u5177\u4f53\u5730\u5de5\u4f5c\u3002\u7ee7\u7eed\u5230\u5b8c\u6210\uff01\u5bf9\u4e8e\u7f51\u7ad9\uff0c\u5c06\u9700\u8981\u50cfHeroku\u8fd9\u6837\u7684\u4e3b\u673a\u670d\u52a1\uff0c\u8fd9\u6837\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6240\u6709\u8f9b\u52e4\u5de5\u4f5c\u7684\ud83e\udd2f\ud83d\ude31\u4ee4\u4eba\u60ca\u53f9\u7684\u6700\u7ec8\u4ea7\u54c1\u3002\n\u5373\u4f7f\u4e0a\u9762\u7684\u9009\u9879\u90fd\u4e0d\u9002\u5408\u8fd9\u4e2a\u573a\u666f\uff0c\u4e00\u4efd\u5305\u542b\u6211\u4eec\u6240\u505a\u7684\u5de5\u4f5c\u3001\u6211\u4eec\u6240\u5b66\u5230\u7684\u77e5\u8bc6\u4ee5\u53ca\u4efb\u4f55\u5efa\u8bae/\u7ecf\u9a8c\u6559\u8bad\u7684\u62a5\u544a\u6216\u6587\u7ae0\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6587\u6863\u9f50\u5168\u7684GitHub\u5b58\u50a8\u5e93\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff01\u786e\u4fdd\u81ea\u8ff0\u6587\u4ef6\u662f\u6700\u65b0\u7684\u3002\n\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u672c\u4e66\uff0c\u60a8\u53ef\u80fd\u8fd8\u4f1a\u559c\u6b22\u201c\u5b8c\u6574\u7684\u7f16\u7801\u5b9e\u8df5\u8005\u624b\u518c\u201d\uff0c\u5b83\u4ecb\u7ecd\u4e86\u60a8\u9700\u8981\u4e86\u89e3\u7684\u6bcf\u4e00\u4e2a\u5b9e\u7528\u7684\u7f16\u7801\u5de5\u5177\u3002\u5982\u679c\u60a8\u5728\u8003\u8651\u8981\u627f\u62c5\u54ea\u4e2a\u9879\u76ee\u65f6\u8ff7\u5931\u4e86\u65b9\u5411\uff0c\u8bf7\u8003\u8651\u67e5\u770b\u6211\u7684\u201c\u4ece\u96f6\u5230\u82f1\u96c4\u201d\u7684\u6307\u5357\uff0c\u8be5\u6307\u5357\u4ecb\u7ecd\u4e86\u5982\u4f55\u901a\u8fc7\u7f51\u7edc\u6293\u53d6\u6765\u9009\u62e9\u9879\u76ee\u548c\u6536\u96c6\u60a8\u81ea\u5df1\u7684\u6570\u636e\u96c6\u3002\n\u56fd\u5bb6\u764c\u75c7\u7814\u7a76\u6240\uff0cDane Deaner\uff0cThisisEngineering RAEng\uff0cAdam Nowakowski\u548cGuilherme Caetano\u5728Unspash\u4e0a\u7684\u7167\u7247\u3002\u62df\u5408\u4f18\u5ea6\u56fe\u8868\u662fSkLearning\u6587\u6863\u7684\u4fee\u6539\u7248\u672c", "note_en": "We all have to deal with data, and we try to learn about and implement machine learning into our projects.But everyone seems to forget one thing... it&#39;s far from perfect, and there is  so much to go through!Don&#39;t worry, we&#39;ll discuss every little step, from start to finish \ud83d\udc40.\n   We all start with either a dataset or a goal in mind.Once  we&#39;ve found, collected or scraped our data, we pull it up, and witness the overwhelming sight of merciless cells of numbers, more numbers, categories, and maybe some words \ud83d\ude28!A naive thought crosses our mind, to use our machine learning prowess to deal with this tangled mess... but a quick search reveals the host of tasks we&#39;ll need to consider before  training a model \ud83d\ude31!\n Once we overcome the shock of our unruly data we look for ways to battle our formidable nemesis \ud83e\udd14.We start with trying to get our data into Python.It is relatively simple on paper, but the process can be slightly...  involved.Nonetheless, a little effort was all that was needed (lucky us).\n Without wasting any time we begin  data cleaning to get rid of the bogus and expose the beautiful.Our methods start simple - observe and remove.It works a few times, but then we realise... it really doesn&#39;t do us justice!To deal with the mess though, we find a powerful tool to add to our arsenal: charts!With our graphs, we can get a feel for our data, the patterns within it and where things are missing.We can  interpolating (fill in) or removing missing data.\n Finally, we approach our highly anticipated \ud83d\ude0e challenge, data modelling!With a little research, we find out which tactics and models are commonly used.It is a little difficult to decipher which one we should use, but we still manage to get through it and figure it all out!\n We can&#39;t finish a project without doing something impressive though.So, a final product, website, app or even a report will take us far!We know first impressions are important so we fix up the GitHub repository and make sure everything&#39;s well documented and explained.Now we are  finally able to show off our hard work to the rest of the world \ud83d\ude0e!\n   Data comes in all kinds of shapes and sizes and so the process we use to get everything into code often varies.\n  The hard part about data cleaning isn&#39;t the coding or theory, but instead our preparation!When we first start a new project and download our dataset, it can be tempting to open up a code editor and start typing... but this won&#39;t do us any good.If we want to get a head start we need to prepare ourselves for the best and worst parts of our data.To do this we&#39;ll need to start basic, by manually inspecting our spreadsheet/s.Once we understand the basic format of the data (filetype along with any particularities) we can move onto getting it all into Python.\n When we&#39;re lucky and just have one spreadsheet we can use the Pandas   read_csv function (letting it know where our data lies):\n    Although we&#39;re discussing a range of scenarios, we normally only deal with a few at a time.\n Our first few problems (importing specific parts of our data/renaming columns) are easy enough to deal with using a few parameters, like the number of rows to skip, the specific columns to import and our column names:\n  Whenever our data is spread across multiple files, we can combine them using Pandas   concat function.The   concat function combines a list of   DataFrame&#39;s together:\n  We parse to   concat a list of spreadsheets (which we import just like before).The list can, of course, be attained in any way (so a fancy list comprehension or a casual list of every file both work just as well), but just remember that  we need dataframes, not filenames/paths!\n If we don&#39;t have a CSV file Pandas still works!We can just  swap out   read_csv for   read_excel,   read_sql or another  option.\n After all the data is inside a Pandas dataframe, we need to double-check that our data is  formatted correctly.In practice, this means checking each series datatype, and making sure they are not generic objects.We do this to ensure that we can utilize Pandas inbuilt functionality for numeric, categorical and date/time values.To look at this just run  DataFrame.dtypes.If the output seems reasonable (i.e. numbers are numeric, categories are categorical, ect), then we should be fine to move on.However, this normally is not the case, and as we need to change our datatypes!This can be done with Pandas   DataFrame.astype.If this doesn&#39;t work, there should be another more Pandas function for that specific conversion:\n  If we need to analyse separate groups of data (i.e. maybe our data is divided by country), we can use Pandas  groupby.We can use  groupby to select particular data, and to run functions on each group separately:\n  Other more niche tricks like multi/hierarchical indices can also be helpful in specific scenarios, however, are more tricky to understand and use.\n  Data is useful, data is necessary, however, it  needs to be clean and to the point!If our data is everywhere, it simply won&#39;t be of any use to our machine learning model.\n Everyone is driven insane by missing data, but there&#39;s always a light at the end of the tunnel.\n   By end-goal, we mean whatever variable we are working towards predicting, categorising or analysing.The point of this is to narrow our scope and not get bogged down in useless information.\n  Once we know what our primary objective features are, we can try to find patterns, relations, missing data and more.An easy and intuitive way to do this is graphing!Quickly use Pandas to sketch out each variable in the dataset, and try to see where everything fits into place.\n Once we have identified potential problems, or trends in the data we can try and fix them.In general, we have the following options:\n  To go from identifying missing data to choosing what to do with it we need to consider how it affects our end-goal.With missing data we remove anything which doesn&#39;t seem to have a major influence on the end result (i.e. we couldn&#39;t find a meaningful pattern), or where there just seems  too much missing to derive value.Sometimes we also decide to remove very small amounts of missing data (since it&#39;s easier than filling it in).\n If we&#39;ve decided to get rid of information, Pandas   DataFrame.drop can be used.It removes columns or rows from a dataframe.It is quite easy to use, but remember that  Pandas does not modify/remove data from the source dataframe by default, so  inplace=True must be specified.It may be useful to note that the  axis parameter specifies whether rows or columns are being removed.\n When not removing a full column, or particularly targeting missing data, it can often be useful to rely on a few nifty Pandas functions.For removing null values,  DataFrame.dropna can be utilized.Do keep in mind though that by default,  dropna completely removes all missing values.However, setting either the parameter  how to  all or setting a threshold ( thresh, representing how many null values are required for it to delete) can compensate for this.\n If we&#39;ve got small amounts of irregular missing values, we can fill them in several ways.The simplest is  DataFrame.fillna which sets the missing values to some preset value.The more complex, but flexible option is interpolation using  DataFrame.interpolate.Interpolation essentially allows anyone to simply set the  method they would like to replace each null value with.These include the previous/next value, linear and time (the last two deduce based on the data).Whenever working with time, time is a natural choice, and otherwise make a reasonable choice based on how much data is being interpolated and how complex it is.\n  As seen above, interpolate needs to be passed in a dataframe purely containing the columns with missing data (otherwise an error will be thrown).\n Resampling is useful can whenever we see regularly missing data or have multiple sources of data using different timescales (like ensuring measurements in minutes and hours can be combined).It can be slightly difficult to intuitively understand resampling, but it is essential when you average measurements over a certain timeframe.For example, we can get monthly values by specifying that we want to get the mean of each month&#39;s values:\n  The  &#34;M&#34; stands for month and can be replaced with  &#34;Y&#34; for year and other options.\n Although the data cleaning process can be quite challenging, if we remember our initial intent, it becomes a far more logical and straight forward task!If we still don&#39;t have the needed data, we may need to go back to phase one and collect some more. Note that missing data indicates a problem with data collection, so it&#39;s useful to carefully consider, and note down where occurs.\n For completion, the Pandas   unique and   value_counts functions are useful to decide which features to straight-up remove and which to graph/research.\n  Visualisation sounds simple and it is, but it&#39;s hard to...  not overcomplicate.It&#39;s far too easy for us to consider plots as a chore to create.Yet, these bad boys do one thing very, very well - intuitively demonstrate the inner workings of our data!Just remember:\n  Hence, when stuck for ideas, or not quite sure what to do, we basics can always fall back on  identifying useful patterns and meaningful relationships.It may seem iffy \ud83e\udd76, but it is really useful.\n Our goal isn&#39;t to draw fancy hexagon plots, but instead to picture what is going on, so  absolutely anyone can simply interpret a complex system!\n   To get started graphing, simply use Pandas  .plot() on any series or dataframe!When we need more, we can delve into MatPlotLib, Seaborn or an interactive plotting library.\n data.plot(x= &#34;column 1 name&#34;, y= &#34;column 2 name&#34;, kind= &#34;bar&#34;, figsize=( 10,  10)) data.plot(x= &#34;column 1 name&#34;, y= &#34;column 3 name&#34;, secondary_y=True) data.hist() data.groupby( &#34;group&#34;).boxplot()\n 90% of the time, this basic functionality will suffice ( more info here), and where it doesn&#39;t a search should reveal how to  draw particularly exotic graphs \ud83d\ude0f.\n    Now finally for the fun stuff - deriving results.It seems  so simple to train a scikit learn model, but no one goes into the details!So, let&#39;s be honest here, not every dataset, nor model are equal.\n Our approach to modelling will vary widely based on our data.There are three especially important factors:\n  Our type of problem comes down to whether we are trying to predict a class/label (called  classification), a value (called  regression), or to group data (called  clustering).If we are trying to train a model on a dataset where we already have examples of what we&#39;re trying to predict we call our model  supervised, if not,  unsupervised.The amount of available data, and how complex it is foreshadows how simple a model will suffice. Data with more features (i.e. columns) tends to be more complex.\n The point of interpreting complexity is to understand which models are  too good or too bad for our data\n Models  goodness of fit informs us on this!If a model struggles to interpret our data (too simple) we can say it  underfits, and if it is completely overkill (too complex) we say it  overfits.We can think of it as a spectrum from learning nothing to memorising everything.We need to  strike balance, to ensure our model is  able to  generalise our conclusions to new information.This is typically known as the bias-variance tradeoff. Note that complexity also affects model interpretability.\n  Complex models take a substantially greater time to train, especially with large datasets.So, upgrade that computer, run the model overnight, and chill for a while \ud83d\ude01!\n   Before training a model it is important to note that we will need some dataset to test it on (so we know how well it performs).Hence, we often divide our dataset into  separate training and testing sets.This allows us to test  how well our model can generalise to new unseen data.This normally works because we know our data is decently representative of the real world.\n The actual amount of test data doesn&#39;t matter too much, but 80% train and 20% test is often used.\n   Cross-validation is where a dataset is split into several folds (i.e. subsets or portions of the original dataset).This tends to be more robust and  resistant to overfitting than using a single test/validation set!Several Sklearn functions help with  cross-validation, however, it&#39;s normally done straight through a grid or random search (discussed below).\n   There are some factors our model cannot account for, and so we  set certain hyperparameters.These vary model to model, but we can either find optimal values through manual trial and error or a simple algorithm like grid or random search.With grid search, we try all possible values (brute force \ud83d\ude07) and with random search random values from within some distribution/selection.Both approaches typically use cross-validation.\n Grid search in Sklearn works through a  parameters dictionary.Each entries key represents the hyperparameter to tune, and the value (a list or tuple) is the selection of values to chose from:\n  After we&#39;ve created the grid, we can use it to train the models, and extract the scores:\n  The important thing here is to remember that we need to  train on the training and not testing data.Even though cross-validation is used to test the models, we&#39;re ultimately trying to get the best fit on the training data and will proceed to test each model on the testing set afterwards:\n  Random search in Sklearn works similarly but is slightly more complex as we need to know what type of distribution each hyperparameter takes in.Although it, in theory,  can yield the same or better results faster, that changes from situation to situation. For simplicity it is likely best to stick to a grid search.\n   With Sklearn, it&#39;s as simple as finding our desired model name and then just creating a variable for it.Check the links to the documentation for further details!For example\n    Linear regression is trying to  fit a straight line to our data.It is the most basic and fundamental model.There are several variants of linear regression, like lasso and ridge regression (which are regularisation methods to prevent overfitting).Polynomial regression can be used to fit curves of higher degrees (like parabolas and other curves).Logistic regression is another variant which can be used for classification.\n  Just like with linear/logistic regression,  support vector machines (SVM&#39;s) try to fit a line or curve to data points.However, with SVM&#39;s the aim is to maximise the distance between a boundary and each point (instead of getting the line/curve to go through each point).\n The main advantage of support vector machines is their ability to  use different kernels.A kernel is a function which calculates similarity.These kernels allow for both linear and non-linear data, whilst staying decently efficient.The kernels map the input into a higher dimensional space so a boundary becomes present.This process is typically not feasible for large numbers of features.A neural network or another model will then likely be a better choice!\n  All the buzz is always about deep learning and  neural networks.They are complex, slow and resource-intensive models which can be used for complex data.Yet, they are extremely useful when encountering large unstructured datasets.\n When using a neural net, make sure to watch out for overfitting.An easy way is through tracking changes in error with time (known as learning curves).\n Deep learning is an extremely rich field, so there is far too much to discuss here.In fact, Scikit learn is a machine learning library, with little deep learning abilities (compared to  PyTorch or  TensorFlow).\n  Decision trees are simple and quick ways to model relationships.They are basically a  tree of decisions which help to decide on what class or label a datapoint belongs too.Decision trees can be used for regression problems too.Although simple, to avoid overfitting, several hyperparameters must be chosen.These all, in general, relate to how deep the tree is and how many decisions are to be made.\n  We can group unlabeled data into several  clusters using  k-means.Normally the number of clusters present is a chosen hyperparameter.\n K-means works by trying to optimize (reduce) some criterion (i.e. function) called inertia.It can be thought of like trying to minimize the distance from a set of  centroids to each data point.\n   Random forests are combinations of multiple decision trees trained on random subsets of the data (bootstrapping).This process is called bagging and allows random forests to obtain a good fit (low bias and low variance) with complex data.\n  One voter may vote for a bad candidate, but we&#39;d hope that the majority of voters make informed, positive decisions\n For  regression problems, we average each decision tree&#39;s outputs, and for  classification, we choose the most popular one.This  might not always work, but we assume it in general will (especially with large datasets with multiple columns).\n Another advantage with random forests is that insignificant features shouldn&#39;t negatively impact performance because of the democratic-esc bootstrapping process!\n Hyperparameter choices are the same as those for decision trees but with the number of decision trees as well.For the aforementioned reasons, more trees equal less overfitting!\n    Ensemble models like AdaBoost or  XGBoost work by stacking one model on top of another.The assumption here is that each successive weak learner will correct for the flaws of the previous one (hence called boosting).Hence, the combination of models should provide the advantages of each model without its potential pitfalls.\n The iterative approach means previous models performances effects current models, and better models are given a higher priority.Boosted models perform slightly better than bagging models (a.k.a random forests), but are also slightly more likely to overfit.Sklearn provides AdaBoost for  classification and  regression.\n  This is the last but potentially most important part of the process \ud83e\uddd0.We&#39;ve put in all this work, and so we need to go the distance and  create something impressive!\n There are a variety of options. Streamlit is an exciting option for data-oriented websites, and tools like Kotlin, Swift and Dart can be used for Android/IOS development.JavaScript with frameworks like VueJS can also be used for extra flexibility.\n After trying most of these I honestly would recommend sticking to  Streamlit, since it is so much easier than the others!\n Here it is important to start with a vision (simpler the better) and try to find out which parts are most important.Then try and specifically work on those.Continue till completion!For websites, a hosting service like  Heroku will be needed, so the rest of the world can see the amazing end-product of all our hard work \ud83e\udd2f\ud83d\ude31.\n Even if none of the above options above suite the scenario, a report or article covering what we&#39;ve done, what we&#39;ve learnt and any suggestions/lessons learnt along with a well documented GitHub repository are indispensable! Make sure that readme file is up to date.\n    If you enjoyed this, you may also like  The Complete Coding Practitioners Handbook which goes through each and every practical coding tool you&#39;ll need to know.If you&#39;re lost considering what project to take on, consider checkout out my zero-to-hero guide on  choosing a project and  collecting your own dataset through webscraping.\n Photos by  National Cancer Institute,  Dane Deaner,  ThisisEngineering RAEng,  Adam Nowakowski and  Guilherme Caetano on Unsplash.The goodness of fit graph is a modified version of the  Sklearn documentation", "posttime": "2020-06-13 09:42:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learning,\u6570\u636e", "title": "\u673a\u5668\u5b66\u4e60\u73b0\u573a\u6307\u5357", "title_en": "Machine Learning Field Guide", "transed": 1, "url": "https://www.kamwithk.com/machine-learning-field-guide-ckbbqt0iv025u5ks1a7kgjckx", "via": "", "real_tags": ["\u5b66\u4e60", "learning", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "dbf80d5d9869331fefafde7a78932e3d.jpg", "infoid": 1006362, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7136\u540e\uff0c\u5929\u6587\u5b66\u5bb6\u8f6c\u5411\u4e86\u4e4b\u524d\u5df2\u77e5\u7684\u6765\u6e90\uff1a\u4e00\u79cd\u88ab\u79f0\u4e3a\u78c1\u661f\u7684\u8d85\u9ad8\u5bc6\u5ea6\u3001\u5feb\u901f\u65cb\u8f6c\u548c\u9ad8\u5ea6\u78c1\u5316\u7684\u6052\u661f\u6838\u5fc3\u7070\u70ec\u3002\u51ed\u501f\u4e00\u9879\u5e78\u8fd0\u7684\u53d1\u73b0\uff0c\u5feb\u901f\u5c04\u7535\u7206\u53d1\u6765\u81ea\u4f55\u5904\u7684\u8c1c\u56e2\u4f3c\u4e4e\u5df2\u7ecf\u89e3\u5f00\u3002\u8377\u5170\u5c04\u7535\u5929\u6587\u7814\u7a76\u6240\u548c\u963f\u59c6\u65af\u7279\u4e39\u5927\u5b66\u7684\u6770\u68ee\u00b7\u8d6b\u585e\u5c14\u65af\u8bf4\uff1a\u201c\u4f60\u5f88\u5c11\u4f1a\u5f97\u5230\u4e00\u4e2a\u5982\u6b64\u60ca\u4eba\u7684\u7ebf\u7d22\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4f3c\u4e4e\u7a81\u7136\u89e3\u5f00\u4e86\u5f88\u5927\u4e00\u90e8\u5206\u8c1c\u56e2\u3002\u201d\u201c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u5728\u9010\u6b65\u89e3\u51b3\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u505a\u51fa\u5982\u6b64\u5de8\u5927\u7684\u98de\u8dc3\u3002\u201d\n\u6709\u4e86\u7f6a\u9b41\u7978\u9996\uff0c\u5929\u6587\u5b66\u5bb6\u73b0\u5728\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u67e5\u660e\u6b63\u5728\u53d1\u6325\u4f5c\u7528\u7684\u5177\u4f53\u7269\u7406\u95ee\u9898\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u968f\u7740\u7406\u8bba\u5bb6\u4eec\u731c\u6d4b\u78c1\u661f\u5982\u4f55\u53d1\u5c04\u5982\u6b64\u8000\u773c\u7684\u65e0\u7ebf\u7535\u6ce2\uff0c\u6d8c\u73b0\u51fa\u5927\u91cf\u7684\u8bba\u6587\u3002\u78c1\u661f\u5f88\u53ef\u80fd\u662f\u901a\u8fc7\u5728\u5f3a\u5927\u7684\u8000\u6591\u4e2d\u7206\u70b8\u5e26\u7535\u7c92\u5b50\u800c\u5f00\u59cb\u8fd9\u4e00\u8fc7\u7a0b\u7684\u3002\u4f46\u662f\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u4eec\u6b63\u5728\u4e89\u8bba\u8fd9\u79cd\u8000\u6591\u7a76\u7adf\u662f\u5982\u4f55\u4ea7\u751f\u65e0\u7ebf\u7535\u6ce2\u7206\u53d1\u7684\u3002Hessels\u8bf4\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u8fa8\u8ba4\u4e00\u4e2a\u9b54\u672f\u5e08\uff0c\u7136\u540e\u8bd5\u56fe\u7834\u8bd1\u4ed6\u4eec\u620f\u6cd5\u80cc\u540e\u7684\u79d8\u5bc6\u3002\n\u5929\u6587\u5b66\u5bb6\u5df2\u7ecf\u6536\u96c6\u4e86\u5927\u7ea650\u79cd\u4e0d\u540c\u7684\u7406\u8bba\u6765\u89e3\u91ca\u5feb\u901f\u5c04\u7535\u7206\u53d1-\u76f4\u5230\u6700\u8fd1\uff0c\u8fd9\u4e2a\u6570\u5b57\u8fd8\u8d85\u8fc7\u4e86\u4e8b\u4ef6\u7684\u6570\u91cf\u3002\u8fd9\u4e9b\u60f3\u6cd5\u5305\u62ec\u5404\u79cd\u72c2\u91ce\u7684\u573a\u666f\uff0c\u5305\u62ec\u84b8\u53d1\u9ed1\u6d1e\u3001\u6298\u65ad\u5b87\u5b99\u5f26\uff0c\u751a\u81f3\u662f\u5916\u661f\u6587\u660e\u7684\u63a8\u8fdb\u7cfb\u7edf\u3002\n\u4f46\u968f\u7740\u63a2\u6d4b\u6570\u91cf\u7684\u589e\u52a0\uff0c\u79d1\u5b66\u5bb6\u4eec\u5f00\u59cb\u503e\u5411\u4e8e\u4e00\u79cd\u89e3\u91ca\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u89e3\u91ca\uff1a\u78c1\u661f\u3002\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u5e03\u83b1\u6069\u00b7\u6885\u8328\u683c(Brian Metzger)\u8bf4\uff1a\u201c\u5b83\u4eec\u7684\u4e00\u4e9b\u6027\u8d28\u786e\u5b9e\u8868\u660e\u5b83\u4eec\u6765\u81ea\u67d0\u79cd\u78c1\u5316\u7684\u4e2d\u5b50\u661f\u3002\u201d\u4f8b\u5982\uff0c\u5feb\u901f\u5c04\u7535\u7206\u53d1\u7684\u7535\u6ce2\u662f\u9ad8\u5ea6\u6781\u5316\u7684\uff0c\u8fd9\u8868\u660e\u5b83\u4eec\u6765\u81ea\u5f3a\u78c1\u573a\u3002\u5b83\u4eec\u7684\u6301\u7eed\u65f6\u95f4\u77ed\u610f\u5473\u7740\u5b83\u4eec\u6765\u81ea\u4e00\u4e2a\u76f8\u5bf9\u8f83\u5c0f\u7684\u5929\u4f53\u3002\u5b83\u4eec\u5fc5\u987b\u7531\u4e00\u4e2a\u5de8\u5927\u7684\u80fd\u91cf\u50a8\u5907\u5e93\u63d0\u4f9b\u52a8\u529b\u3002\n\u7136\u800c\uff0c\u6301\u6000\u7591\u6001\u5ea6\u7684\u4eba\u4e89\u8fa9\u8bf4\uff0c\u5982\u679c\u78c1\u661f\u662f\u6e90\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6211\u4eec\u81ea\u5df1\u7684\u661f\u7cfb\u5185\u770b\u5230\u5feb\u901f\u7684\u5c04\u7535\u7206\u53d1\u3002\u6709\u4e86\u8fd9\u6b21\u7206\u53d1\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u3002\u201c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u89e3\u8131\uff0c\u201d\u6885\u8328\u683c\u8bf4\uff0c\u4ed6\u4e00\u76f4\u81f4\u529b\u4e8e\u78c1\u661f\u6a21\u578b\u7684\u7814\u7a76\u3002\u201c\u8fd9\u610f\u5473\u7740\u6211\u6ca1\u6709\u6254\u6389\u51e0\u5e74\u7684\u5de5\u4f5c\u3002\u201d\n\u73b0\u5728\u7684\u4efb\u52a1\u662f\u7cbe\u786e\u5b9a\u4f4d\u78c1\u661f\u662f\u5982\u4f55\u4ea7\u751f\u77ed\u6682\u7684\u65e0\u7ebf\u7535\u6ce2\u7206\u53d1\u7684\u3002\u8bb8\u591a\u60f3\u6cd5\u90fd\u662f\u4ece\u78c1\u661f\u7206\u53d1\u51fa\u80fd\u91cf\u8000\u6591\u5f00\u59cb\u7684\uff0c\u901a\u5e38\u662f\u4ee5\u7535\u5b50\u548c\u6b63\u7535\u5b50\u5bf9\u7684\u5f62\u5f0f\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u8000\u6591\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u5e7f\u6cdb\u7684\u673a\u5236\u4e4b\u4e00\u4ea7\u751f\u65e0\u7ebf\u7535\u6ce2-\u4e00\u79cd\u53d1\u751f\u5728\u78c1\u5c42(\u56f4\u7ed5\u78c1\u661f\u7684\u5f3a\u78c1\u573a)\u5185\uff0c\u53e6\u4e00\u79cd\u53d1\u751f\u5728\u9065\u8fdc\u7684\u5730\u65b9\u3002\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u80fd\u91cf\u8000\u6591\u4ecd\u7136\u901a\u8fc7\u78c1\u529b\u7ebf\u951a\u5b9a\u5728\u6052\u661f\u7684\u5916\u58f3\u4e0a\u3002\u5f53\u5730\u58f3\u4e0d\u65ad\u5730\u78b0\u649e\u65f6\uff0c\u8fd9\u4e9b\u78c1\u573a\u5c31\u4f1a\u626d\u66f2\u548c\u8f6c\u52a8\uff0c\u76f4\u5230\u5b83\u4eec\u7a81\u7136\u53d8\u6210\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u72b6\u6001\uff0c\u7acb\u5373\u91ca\u653e\u51fa\u6fc0\u5149\u822c\u7684\u65e0\u7ebf\u7535\u6ce2\u3002\n\u5728\u6885\u8328\u683c\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u53bb\u5e74\u53d1\u8868\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u80fd\u91cf\u8000\u6591\u9003\u79bb\u78c1\u5c42\uff0c\u4f20\u64ad\u4e86\u5f88\u957f\u4e00\u6bb5\u8ddd\u79bb-\u6700\u9ad8\u53ef\u8fbe\u78c1\u661f\u534a\u5f84\u7684100\u4e07\u500d\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u649e\u4e0a\u4e86\u56f4\u7ed5\u78c1\u661f\u7684\u8f83\u8001\u7684\u788e\u7247\uff0c\u5e76\u4ea7\u751f\u4e86\u51b2\u51fb\u6ce2\u3002\u8fd9\u4e2a\u51b2\u51fb\u6ce2\u5411\u5916\u79fb\u52a8\uff0c\u538b\u7f29\u5b83\u524d\u9762\u7684\u78c1\u5316\u7b49\u79bb\u5b50\u4f53\uff0c\u5e76\u5728\u5b83\u540e\u9762\u5efa\u7acb\u4e00\u4e2a\u78c1\u573a\u3002\u7136\u540e\uff0c\u5f53\u7535\u5b50\u88ab\u6fc0\u6ce2\u950b\u9762\u5377\u8d77\u65f6\uff0c\u5b83\u4eec\u5f00\u59cb\u7ed5\u7740\u78c1\u573a\u65cb\u8f6c--\u8fd9\u79cd\u821e\u8e48\u4f1a\u53d1\u51fa\u53e6\u4e00\u675f\u6fc0\u5149\u822c\u7684\u65e0\u7ebf\u7535\u6ce2\u3002\u8fd9\u4e2a\u6a21\u578b\u505a\u51fa\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u9884\u6d4b\u3002\u4ea7\u751f\u65e0\u7ebf\u7535\u53d1\u5c04\u7684\u540c\u6837\u7684\u51b2\u51fb\u6ce2\u4e5f\u5e94\u8be5\u52a0\u70ed\u7535\u5b50\uff0c\u4f7f\u5b83\u4eec\u53d1\u5c04X\u5c04\u7ebf\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6b21\u7206\u53d1\u91ca\u653e\u7684X\u5c04\u7ebf\u80fd\u91cf\u5e94\u8be5\u662f\u65e0\u7ebf\u7535\u6ce2\u7684100,000\u500d\u3002\n\u4f46\u662f\uff0c\u5f53\u552f\u4e00\u5feb\u901f\u7684\u5c04\u7535\u7206\u53d1\u6765\u81ea\u9065\u8fdc\u7684\u661f\u7cfb\u65f6\uff0c\u5c31\u4e0d\u53ef\u80fd\u9a8c\u8bc1\u8fd9\u4e00\u9884\u6d4b\u3002\u539f\u56e0\u5f88\u7b80\u5355\u5417\uff1fX\u5c04\u7ebf\u671b\u8fdc\u955c\u6ca1\u6709\u5c04\u7535\u671b\u8fdc\u955c\u90a3\u4e48\u7075\u654f\u3002\u5373\u4f7f\u6240\u6709\u7684X\u5c04\u7ebf\u80fd\u91cf\u5bf9\u6211\u4eec\u6765\u8bf4\u4e5f\u662f\u770b\u4e0d\u89c1\u7684\u3002\n\u5f53\u7206\u70b8\u53d1\u751f\u5728\u6211\u4eec\u5b87\u5b99\u7684\u540e\u9662\u65f6\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u3002\u5bf9\u8fd9\u4e00\u65b0\u7206\u53d1\u7684\u5168\u9762X\u5c04\u7ebf\u5206\u6790\u53d1\u73b0\uff0c\u5b83\u91ca\u653e\u4e86\u5927\u91cf\u7684X\u5c04\u7ebf\u8f90\u5c04--\u4e0e\u6885\u6cfd\u5c14\u7684\u9884\u6d4b\u5b8c\u5168\u76f8\u7b26\u3002\u6885\u8328\u683c\u8bf4\uff1a\u201c\u6211\u5f88\u60ca\u8bb6\u8fd9\u4e2a\u6a21\u578b\u7684\u6548\u679c\u5982\u6b64\u4e4b\u597d\u3002\u201d\u201c\u5b83\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6253\u51fb\uff0c\u5e76\u8bf4\uff0c\u2018\u4e5f\u8bb8\u8fd9\u503c\u5f97\u6211\u82b1\u65f6\u95f4\u3002\u2019\u201d\n\u867d\u7136\u5355\u4e2a\u4e8b\u4ef6\u4e0d\u80fd\u8bc1\u660e\u6240\u6709\u5feb\u901f\u5c04\u7535\u7206\u53d1\u90fd\u6765\u81ea\u78c1\u661f\uff0c\u4f46\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u7684\u5929\u6587\u5b66\u5bb6\u7ef4\u514b\u62c9\u59c6\u00b7\u62c9\u7ef4(Vikram Ravi)\u8ba4\u4e3a\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u63f4\u5f15\u5176\u4ed6\u7269\u4f53\u6765\u89e3\u91ca\u5404\u79cd\u53ef\u80fd\u7684\u7206\u53d1\u884c\u4e3a\u3002\u6885\u8328\u683c\u6307\u51fa\uff0c\u8003\u8651\u5230\u65e9\u5728\u8fd9\u4e00\u53d1\u73b0\u4e4b\u524d\u5c31\u6709\u5927\u91cf\u8bc1\u636e\u6307\u5411\u78c1\u661f\uff0c\u6211\u4eec\u6709\u7406\u7531\u8ba4\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u78c1\u661f\u53ef\u4ee5\u89e3\u91ca\u6211\u4eec\u6240\u770b\u5230\u7684\u591a\u79cd\u7c7b\u578b\u7684\u5feb\u901f\u5c04\u7535\u7206\u53d1\u3002\u4f8b\u5982\uff0c\u91cd\u590d\u51fa\u73b0\u7684\u5feb\u901f\u5c04\u7535\u7206\u53d1\u53ef\u80fd\u6765\u81ea\u5e74\u8f7b\u7684\u3001\u6d3b\u8dc3\u7684\u78c1\u661f\uff0c\u5b83\u4eec\u7684\u78c1\u573a\u6bd4\u6211\u4eec\u94f6\u6cb3\u7cfb\u4e2d\u7684\u78c1\u573a\u5f3a\u5f97\u591a\u3002\n\u8fd9\u79cd\u8054\u7cfb\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u7684\u5c04\u7535\u7206\u53d1\u6765\u8bc6\u522b\u9065\u8fdc\u5b87\u5b99\u4e2d\u7684\u78c1\u661f\uff0c\u4f7f\u79d1\u5b66\u5bb6\u80fd\u591f\u5bf9\u8fd9\u4e9b\u6781\u7aef\u7269\u4f53\u8fdb\u884c\u666e\u67e5\uff0c\u5e76\u66f4\u597d\u5730\u89e3\u91ca\u5b83\u4eec\u7684\u8d77\u6e90\u3002\u5728\u6211\u4eec\u7684\u661f\u7cfb\u4e2d\uff0c\u6211\u4eec\u6000\u7591\u78c1\u661f\u662f\u5728\u660e\u4eae\u7684\u8d85\u65b0\u661f\u7206\u70b8\u4e2d\u5f62\u6210\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5f00\u59cb\u5728\u6ca1\u6709\u5927\u8d28\u91cf\u6052\u661f\u7684\u661f\u7cfb\u4e2d\u770b\u5230\u5b83\u4eec\uff0c\u90a3\u53ef\u80fd\u4f1a\u6307\u5411\u66f4\u5947\u5f02\u7684\u65b9\u5f0f\u6765\u521b\u9020\u78c1\u661f\uff0c\u6bd4\u5982\u4e24\u9897\u4e2d\u5b50\u661f\u7684\u78b0\u649e\u3002\n\u4f46\u9996\u5148\uff0c\u79d1\u5b66\u5bb6\u4eec\u5c06\u5bc6\u5207\u5173\u6ce8\u9644\u8fd1\u7684\u78c1\u661f\uff0c\u5e0c\u671b\u770b\u5230\u53e6\u4e00\u6b21\u4ee4\u4eba\u9707\u60ca\u7684\u8fd1\u8ddd\u79bb\u7206\u53d1\u3002\u867d\u7136\u78c1\u661f\u8054\u7cfb\u5e76\u4e0d\u5b8c\u5168\u4ee4\u4eba\u60ca\u8bb6\uff0c\u4f46\u4ed6\u4eec\u5e0c\u671b\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u6765\u8bc1\u5b9e\u8fd9\u4e00\u70b9\u3002\u201c\u4ece\u2018\u54e6\uff0c\u5929\u54ea\uff0c\u8fd9\u771f\u7684\u662f\u771f\u7684\u2019\u7684\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u8fd9\u4ecd\u7136\u4ee4\u4eba\u9707\u60ca\uff0c\u201d\u6d77\u745f\u65af\u8bf4\u3002\u201c\u5728\u4e00\u5f20\u7eb8\u4e0a\u5199\u4e0b\u4e00\u4e9b\u65b9\u7a0b\u5f0f\uff0c\u7136\u540e\u9762\u5bf9\u5b83\u5b9e\u9645\u4e0a\u662f\u771f\u5b9e\u7684\uff0c\u6211\u4eec\u521a\u521a\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u5b58\u5728\u5de8\u5927\u7684\u5dee\u5f02\u3002\u201d", "note_en": "The astronomers then turned toward the  previously known source: an ultra-dense, rapidly spinning and highly magnetized cinder of a stellar core called a magnetar. With a  single lucky discovery, the mystery of where fast radio bursts come from appeared to have been solved. \u201cIt\u2019s not so often that you get a clue that is so striking that it seems to suddenly solve a big chunk of the puzzle,\u201d said  Jason Hessels of the Netherlands Institute for Radio Astronomy and the University of Amsterdam. \u201cNormally we\u2019re kind of chipping away at the problem as opposed to making such a giant leap forward.\u201d\n With the culprit in hand, astronomers can now focus on pinpointing the nitty-gritty physics at play. Over the past month, a  flood of papers has appeared as theorists have speculated how magnetars might launch such brilliant flashes of radio waves. It\u2019s likely that the magnetar starts the process by blasting charged particles in a powerful flare. But astrophysicists are debating exactly how that flare produces the burst of radio waves. It\u2019s similar to identifying a magician, Hessels said, and then trying to decipher the secrets behind their trick.\n  Astronomers have racked up roughly  50 separate theories to explain fast radio bursts \u2014 a tally that until recently outnumbered the events. The ideas include a variety of wild scenarios involving evaporating black holes, snapping cosmic strings, and even the propulsion systems of alien civilizations.\n But as the number of detections increased, scientists began to favor one explanation above the rest: magnetars. \u201cThere were just a number of their properties that really screamed out that they were coming from some kind of magnetized neutron star,\u201d said  Brian Metzger, an astrophysicist at Columbia University. For example, a fast radio burst\u2019s waves are highly polarized, which suggests that they come from an intense magnetic field. Their short duration implies that they come from a relatively small astrophysical object. And they must be powered by a substantial reservoir of energy.\n  Skeptics, however, have argued that if magnetars were the source, we should see fast radio bursts within our own galaxy. With this burst, we have. \u201cIn some ways, it\u2019s a great relief,\u201d said Metzger, who has worked on magnetar models. \u201cIt means I haven\u2019t thrown away several years of work.\u201d\n The task now is to pinpoint exactly how a magnetar creates the brief burst of radio waves. Many ideas begin with a magnetar blasting out a flare of energy, often in the form of electron and positron pairs. These flares can then produce radio waves via one of two broad mechanisms \u2014 one that occurs within the magnetosphere (the intense magnetic field that surrounds the magnetar) and one that occurs well beyond. In the first scenario, the flare of energy remains anchored to the crust of the star via magnetic field lines. As the crust continuously jostles about, these magnetic fields twist and turn until they snap to a simpler state, immediately releasing a laserlike flash of radio waves.\n In the second scenario, which Metzger and his colleagues  published last year, the flare of energy escapes the magnetosphere and travels a large distance \u2014 up to 1 million times the radius of the magnetar. Here it plows into the older debris surrounding the magnetar and generates a shock wave. That shock moves outward, compressing the magnetized plasma ahead of it and building a magnetic field behind it. Then, as electrons are swept up by the shock front, they begin to gyrate around the magnetic field \u2014 a dance that emits another laserlike flash of radio waves. This model makes a crucial prediction. The same shock that generates the radio emission should also heat the electrons, causing them to emit X-rays. In fact, the burst should release 100,000 times more energy in X-rays than in radio waves.\n  But when the only fast radio bursts have come from distant galaxies, it\u2019s impossible to check this prediction. The simple reason? X-ray telescopes aren\u2019t as sensitive as radio telescopes. Even all that X-ray energy would still be invisible to us.\n Not so when the burst is in our cosmic backyard. A  full X-ray analysis of this new burst found that it released a colossal amount of X-ray radiation \u2014 perfectly matching Metzger\u2019s prediction. \u201cI\u2019m amazed how well the model works,\u201d Metzger said. \u201cIt gives you a little kick and says, \u2018Maybe this is worth my time.\u2019\u201d\n  While a single event can\u2019t prove that all fast radio bursts come from magnetars,  Vikram Ravi, an astronomer at Caltech, doesn\u2019t see any reason to invoke other objects to explain the variety of possible burst behavior. And given the amount of evidence that pointed to magnetars even before this discovery, Metzger notes that it\u2019s plausible to assume that different types of magnetars can explain the many types of fast radio bursts we see. For example,  fast radio bursts that repeat could come from young, active magnetars whose magnetic fields are much stronger than the ones in our galaxy.\n  The link means that we can use fast radio bursts to identify magnetars in the distant universe, allowing scientists to build a census of these extreme objects and better explain their origins. In our galaxy, we suspect that magnetars form in brilliant supernova explosions. But if we begin to see them in galaxies without massive stars, that might point toward more exotic ways to create a magnetar, such as the collision of two neutron stars.\n But first, scientists will keep an eye on nearby magnetars in the hope of seeing another shockingly close burst. Though the magnetar connection wasn\u2019t a total surprise, they\u2019d like to see it confirmed by many more examples. \u201cIt still comes as a shock in the sense of \u2018oh my God, it\u2019s really true,\u2019\u201d Hessels said. \u201cThere\u2019s a huge difference between some equations on a piece of paper and then being confronted that it\u2019s actually real, that we just proved it.\u201d", "posttime": "2020-06-13 09:41:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7206\u53d1,discovery,\u78c1\u661f", "title": "\u4e00\u9879\u4ee4\u4eba\u60ca\u8bb6\u7684\u53d1\u73b0\u6307\u51fa\u4e86\u5feb\u901f\u5c04\u7535\u7206\u53d1\u7684\u6839\u6e90", "title_en": "A Surprise Discovery Points to the Source of Fast Radio Bursts", "transed": 1, "url": "https://www.quantamagazine.org/a-surprise-discovery-shows-magnetars-create-fast-radio-bursts-20200611/", "via": "", "real_tags": ["\u7206\u53d1", "discovery", "\u78c1\u661f"]}, {"category": "", "categoryclass": "", "imagename": "78a97967654669288a08ce3bd275365e.jpg", "infoid": 1006361, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Dobsonian\u671b\u8fdc\u955c\u7684\u4e00\u6b65\u4e00\u6b65\u5236\u4f5c\u3002", "note_en": "Step-by-step making of A Dobsonian telescope.", "posttime": "2020-06-13 09:41:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u671b\u8fdc\u955c,building,dobsonian", "title": "\u7ea6\u7ff0\u00b7\u591a\u5e03\u68ee\u7684\u671b\u8fdc\u955c\u5927\u697c[\u89c6\u9891]", "title_en": "Telescope Building with John Dobson [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=snz7JJlSZvw", "via": "", "real_tags": ["\u671b\u8fdc\u955c", "building", "dobsonian"]}, {"category": "", "categoryclass": "", "imagename": "24849c1a9435ffa46fefb79ad22bdedb.jpg", "infoid": 1006360, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5165\u6211\u4eec\u7684\u884c\u5217\uff0c\u53c2\u52a0\u9996\u4e2a\u5168\u7403\u6027\u7684\u5168\u5728\u7ebfWWDC20\u3002\u5373\u5c06\u4e8e6\u670822\u65e5\u3002", "note_en": "Join us for the first global, all-online WWDC20. Coming June 22.", "posttime": "2020-06-13 09:24:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,app,apple,\u884c\u5217", "title": "\u82f9\u679cWWDC20", "title_en": "Apple WWDC20", "transed": 1, "url": "https://developer.apple.com/wwdc20/", "via": "", "real_tags": ["\u82f9\u679c", "app", "apple", "\u884c\u5217"]}, {"category": "", "categoryclass": "", "imagename": "453a23172fdd867f4f3807dfc17fd548.jpg", "infoid": 1006359, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "HBO Max\u63a8\u51fa\u4ec5\u51e0\u5468\u540e\uff0c\u5c31\u589e\u52a0\u4e86HBO\u3001HBO Go\u548cHBO Now\u672c\u5df2\u4ee4\u4eba\u56f0\u60d1\u7684HBO\u4ea7\u54c1\u9635\u5bb9\uff0cWarnerMedia\u6b63\u5728\u505a\u51fa\u4e00\u4e9b\u6539\u53d8\uff0c\u8bd5\u56fe\u51cf\u5c11\u5bf9\u54ea\u6b3e\u5e94\u7528\u7a0b\u5e8f\u7528\u9014\u7684\u4e00\u4e9b\u56f0\u60d1\u3002\n\u5728\u6211\u8fdb\u4e00\u6b65\u4ecb\u7ecdHBO Max\u4e4b\u524d\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1aHBO Max\u662fAT&amp\uff1bT\u7684\u65b0\u6d41\u5a92\u4f53\u670d\u52a1\uff0c\u53ef\u4ee5\u8ba9\u4f60\u8bbf\u95ee\u6574\u4e2aHBO\u8d44\u6599\u5e93\uff0c\u4ee5\u53ca\u5361\u901a\u7535\u89c6\u7f51\u8282\u76ee\u548c\u5409\u535c\u529b\u5de5\u4f5c\u5ba4(Studio Ghibli)\u7535\u5f71\u7b49\u9644\u52a0\u5185\u5bb9\u3002\u4f60\u53ef\u4ee5\u6bcf\u670814.99\u7f8e\u5143\u7684\u8d39\u7528\u76f4\u63a5\u8ba2\u9605HBO Max\uff0c\u4f46\u5982\u679c\u4f60\u8ba2\u9605HBO\uff0c\u8bb8\u591a\u6709\u7ebf\u7535\u89c6\u63d0\u4f9b\u5546\u4e5f\u4f1a\u514d\u8d39\u63d0\u4f9b\uff0c\u800c\u4e14\u4f5c\u4e3aAT&amp\uff1bT\u7684\u4e00\u4e9b\u65e0\u7ebf\u3001\u4e92\u8054\u7f51\u6216\u7535\u89c6\u5957\u9910\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4e5f\u662f\u514d\u8d39\u7684\u3002\u6211\u4eec\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4efd\u6307\u5357\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8ba2\u9605\u8bbf\u95ee\u6b64\u5904\u3002\n\u9700\u8981\u77e5\u9053\u7684\u4e00\u4ef6\u5173\u952e\u4e8b\u60c5\u662f\uff0cHBO Max\u5b9e\u9645\u4e0a\u662fHBO Now\u7684\u6269\u5c55\u548c\u66f4\u540d\u7248\u672c\uff0cHBO Now\u662f\u8be5\u516c\u53f8\u4e4b\u524d\u4ec5\u63d0\u4f9b\u6d41\u5a92\u4f53\u670d\u52a1\u7684\u7248\u672c\u3002\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\uff0c\u5982\u82f9\u679c\u7535\u89c6\uff0cHBO Now\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u66f4\u65b0\u4e3aHBO Max\u3002\n\u5728HBO Max\u51fa\u73b0\u4e4b\u524d\uff0c\u6709\u7ebf\u7535\u89c6\u8ba2\u6237\u53ef\u4ee5\u4f7f\u7528\u4e00\u6b3e\u540d\u4e3aHBO Go\u7684\u5e94\u7528\u7a0b\u5e8f\u6d41\u5f0f\u64ad\u653eHBO\u8282\u76ee\u3002\u4ece7\u670831\u65e5\u8d77\uff0cWarnerMedia\u5c06\u4ece\u201c\u4e3b\u8981\u5e73\u53f0\u201d\u4e2d\u53bb\u6389\u8fd9\u6b3e\u5e94\u7528(\u7528WarnerMedia\u7684\u8bdd\u8bf4\u5c31\u662f\u201c\u65e5\u843d\u201d)\u3002\u5982\u679c\u4f60\u4e4b\u524d\u4f9d\u8d56HBO Go\uff0c\u5f88\u591a\u6709\u7ebf\u7535\u89c6\u63d0\u4f9b\u5546\u5df2\u7ecf\u8ba9\u4f60\u767b\u5f55HBO MAX\u4e86\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u5b8c\u6574\u7684\u540d\u5355\u3002\n\u8fd9\u79cd\u201c\u4e3b\u8981\u5e73\u53f0\u201d\u7684\u8bed\u8a00\u5f88\u91cd\u8981\uff0c\u56e0\u4e3aWarnerMedia\u8fd8\u6ca1\u6709\u8fbe\u6210\u534f\u8bae\uff0c\u5c06HBO Max\u5e26\u5230Roku\u6216\u4e9a\u9a6c\u900a\u7684\u6d41\u5a92\u4f53\u8bbe\u5907\u4e0a\u3002\u5728\u8fd9\u4e9b\u5e73\u53f0\u4e0a\uff0cWarnerMedia\u4e0d\u4f1a\u5c06HBO Now\u5e94\u7528\u7a0b\u5e8f\u5347\u7ea7\u4e3aHBO Max\u3002\u76f8\u53cd\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u66f4\u540d\u4e3a\u201cHBO\u201d\uff0c\u4ef7\u683c\u4ecd\u4e3a14.99\u7f8e\u5143\uff0c\u5c3d\u7ba1\u4f60\u53ea\u80fd\u5728\u4e0a\u9762\u89c2\u770bHBO\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u6269\u5c55\u540e\u7684HBO Max\u76ee\u5f55\u3002\u6839\u636eWarnerMedia\u7684\u8bf4\u6cd5\uff0c\u8fd9\u79cd\u54c1\u724c\u8f6c\u53d8\u5c06\u5728\u672a\u6765\u51e0\u4e2a\u6708\u53d1\u751f\u3002\n\u8fd9\u4e00\u5207\u90fd\u662fHBO Max\u9996\u5e2d\u6267\u884c\u5b98\u6258\u5c3c\u00b7\u5188\u5361\u5c14\u7ef4\u65af\u4e0a\u5468\u5728Vergecast\u4e0a\u544a\u8bc9\u6211\u4eec\u7684\u620f\u5267\u6027\u52a0\u901f\uff0c\u5f53\u65f6\u4ed6\u8868\u793a\uff0c\u6709\u7ebf\u7535\u89c6\u8ba2\u6237\u53ef\u4ee5\u5728\u201c\u4e00\u6bb5\u65f6\u95f4\u5185\u201d\u7ee7\u7eed\u4f7f\u7528HBO Go\uff0c\u4e8b\u60c5\u5c06\u5728\u201c\u4e09\u5230\u516d\u4e2a\u6708\u201d\u540e\u53d8\u5f97\u66f4\u52a0\u660e\u6717\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u82b1\u4e8610\u5929\u7684\u65f6\u95f4\u3002\u4f46\u4ece\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u5168\u9762\u63a8\u51faHBO Max\u6765\u770b\uff0c\u8fd9\u79cd\u4ed3\u4fc3\u662f\u7406\u6240\u5f53\u7136\u7684\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u6700\u7ec8\u53ea\u6709\u4e24\u4e2a\u9009\u62e9\uff1aRoku\u548c\u4e9a\u9a6c\u900a\u7684\u7528\u6237\u53ef\u4ee5\u83b7\u5f97HBO\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53ea\u5141\u8bb8\u4f60\u89c2\u770bHBO\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u73b0\u6709\u7684\u6709\u7ebf\u7535\u89c6\u8ba2\u9605\u8bbf\u95ee\uff0c\u6216\u8005\u53ea\u9700\u652f\u4ed814.99\u7f8e\u5143\u7684\u6708\u8d39\u5373\u53ef\u3002\u8fd9\u662fHBO\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898-Roku\u63a7\u5236\u7740\u8fd145%\u7684\u8054\u7f51\u8bbe\u5907\u89c6\u9891\u6d41\u5a92\u4f53\u5206\u949f\u6570\u3002\u4f46\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u505a\u7684\u3002\n\u5176\u4ed6\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97HBO Max\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u73b0\u6709\u7684\u6709\u7ebf\u7535\u89c6\u8ba2\u9605\u6216\u652f\u4ed814.99\u7f8e\u5143\u7684\u6708\u8d39\u6765\u89c2\u770bHBO\u5185\u5bb9\u548c\u66f4\u591a\u5185\u5bb9\u3002\n\u6240\u4ee5\u8fd9\u5c31\u66f4\u6e05\u695a\u4e86\u3002\u4f46\u8fd9\u4e00\u5207\u4ecd\u7136\u8ba9\u4eba\u76f8\u5f53\u56f0\u60d1\u3002", "note_en": "Just weeks after the launch of HBO Max, which added to the already confusing HBO product lineup of HBO, HBO Go, and HBO Now, WarnerMedia is making some changes in an attempt to reduce some of the confusion about which app is for which purpose.\n A short primer on HBO Max, before I go further: HBO Max is AT&amp;T\u2019s new streaming service that lets you access the entire HBO library plus additional content like Cartoon Network shows and the Studio Ghibli movies. You can subscribe to HBO Max directly for a $14.99 monthly fee, but it\u2019s also offered for free from many cable providers if you subscribe to HBO, and it\u2019s free as part of some AT&amp;T wireless, internet, or TV plans. We\u2019ve compiled a guide for which subscriptions give you access  here.\n  A key thing to know is that HBO Max is really an expanded and rebranded version of HBO Now, the company\u2019s previous streaming-only service. On most platforms, like Apple TV, the HBO Now app was directly updated to become HBO Max.\n Before HBO Max existed, cable subscribers could stream HBO shows using an app called HBO Go. WarnerMedia will be getting rid of that app (or \u201csunsetting\u201d it, in WarnerMedia\u2019s language) from \u201cprimary platforms\u201d as of July 31st. If you previously relied on HBO Go, many cable providers will already let you log in to HBO Max. You can see that  full list here.\n That \u201cprimary platforms\u201d language is important, because WarnerMedia still hasn\u2019t struck deals to bring HBO Max to Roku or Amazon streaming devices. On those platforms, WarnerMedia is  not upgrading the HBO Now app to become HBO Max. Instead, it\u2019s rebranding to simply be \u201cHBO,\u201d where it will still cost $14.99, even though you\u2019ll only be able to watch HBO content on it and  not the expanded HBO Max catalog. This branding switch will be happening over the coming months, according to WarnerMedia.\n This all is a dramatic acceleration of what HBO Max chief Tony Goncalves told us on   The Vergecast just last week, when he said cable subscribers could continue to use HBO Go for a \u201cperiod of time,\u201d and that things would be clearer in \u201cthree to six months.\u201d In reality, it took 10 days. But based on AT&amp;T\u2019s general rollout of HBO Max, the rush is par for the course.\n In summary, there will eventually just be two options: Roku and Amazon users get the HBO app, which only lets you watch HBO content, that\u2019s accessible with an existing cable subscription or by paying a $14.99 monthly fee. This is  a problem that HBO needs to resolve \u2014 Roku controls nearly 45 percent of connected device video streaming minutes. But for now, this is what\u2019s there.\n Everyone else gets HBO Max, which lets you watch HBO content and a lot more with some existing cable subscriptions or by paying a $14.99 monthly fee.\n So it\u2019s a little clearer. But it\u2019s all still pretty confusing.", "posttime": "2020-06-13 08:51:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,app,rid,hbo", "title": "WarnerMedia\u6b63\u5728\u6dd8\u6c70HBO Go\u5e94\u7528\u7a0b\u5e8f", "title_en": "WarnerMedia Is Getting Rid of the HBO Go App", "transed": 1, "url": "https://www.theverge.com/2020/6/12/21289536/hbo-go-app-now-max-warnermedia-att", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "rid", "hbo"]}, {"category": "", "categoryclass": "", "imagename": "0b005ce1ea9b6c0b5d2d824b56b88e47.jpeg", "infoid": 1006357, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Travis CI\u4f7f\u7528PostgreSQL 13\u300112\u300111\u548c10\u7684\u5b98\u65b9\u6269\u5c55\u575e\u56fe\u50cf\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u9700\u8981libNa&gt\uff1b=1.0.18\u3002\u9664\u4e86libNa\u5e93\u548c\u5b83\u7684\u5f00\u53d1\u5934\u6587\u4ef6\u4e4b\u5916\uff0c\u60a8\u53ef\u80fd\u8fd8\u9700\u8981PostgreSQL\u5934\u6587\u4ef6(\u901a\u5e38\u4f4d\u4e8e&#39\uff1b-dev\uff1b\u5305\u4e2d)\u6765\u6784\u5efa\u6269\u5c55\u3002\npgTAP\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528&#39\uff1bsudo-u postgres pg_proven test.sql&39\uff1b\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u72ec\u7acb\u7684Docker\u6620\u50cf\u4e2d\u8fd0\u884c\u3002\u5982\u679c\u60a8\u5b89\u88c5\u4e86docker\u6765\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\uff0c\u5219\u8fd0\u884c./test.sh\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u9488\u5bf9\u56db\u4e2a\u4e0d\u540c\u4e3b\u8981\u7248\u672c\u7684PostgreSQL\u8fd0\u884c\u6d4b\u8bd5\u548c\u4e0b\u8f7ddocker\u6620\u50cf\uff0c\u56e0\u6b64\u5b83\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u5e76\u4e14\u5728\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884c\u5b83\u65f6\u9700\u8981\u5927\u91cf\u7684\u7f51\u7edc\u5e26\u5bbd\u3002\npgNa\u53c2\u6570\u4ee5\u53ca\u5185\u5bb9\u548c\u952e\u7684\u8fd4\u56de\u503c\u90fd\u662fbyteA\u7c7b\u578b\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5bf9\u4e00\u822c\u5185\u5bb9\u4f7f\u7528\u6587\u672c\u6216varchar\u503c\uff0c\u5219\u5fc5\u987b\u786e\u4fdd\u5b83\u4eec\u7684\u7f16\u7801\u6b63\u786e\u3002ENCODE()\u548cDECODE()\u548cCONVERT_TO()/CONVERT_FROM()\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u51fd\u6570\u53ef\u4ee5\u4ece\u6587\u672c\u8f6c\u6362\u4e3a\u5b57\u8282\u3002\u6ca1\u6709\u8f6c\u4e49\u6216Unicode\u5b57\u7b26\u7684\u7b80\u5355\u7684\u6587\u672c\u5b57\u7b26\u4e32\u5c06\u7531\u6570\u636e\u5e93\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u5c31\u662f\u6d4b\u8bd5\u4e2d\u5982\u4f55\u5b8c\u6210\u7684\uff0c\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u4f46\u662f\u5982\u679c\u60a8\u5e0c\u671b\u4f7f\u7528pgNa\u800c\u4e0d\u51fa\u73b0\u8f6c\u6362\u9519\u8bef\uff0c\u90a3\u4e48\u60a8\u786e\u5b9e\u5e94\u8be5\u663e\u5f0f\u8f6c\u6362\u60a8\u7684\u6587\u672c\u5185\u5bb9\u3002\n\u5927\u591a\u6570libnataAPI\u90fd\u53ef\u4ee5\u4f5c\u4e3aSQL\u51fd\u6570\u4f7f\u7528\u3002\u6210\u5bf9\u751f\u6210\u7684\u5bc6\u94a5\u4f5c\u4e3a\u8bb0\u5f55\u7c7b\u578b\u8fd4\u56de\uff0c\u4f8b\u5982\uff1a\npgNa\u5c0f\u5fc3\u5730\u4f7f\u7528\u5185\u5b58\u6e05\u7406\u56de\u8c03\u5c06\u91ca\u653e\u65f6\u4f7f\u7528\u7684\u6240\u6709\u5df2\u5206\u914d\u5185\u5b58\u6e05\u96f6\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u5c06\u673a\u5bc6\u5b58\u50a8\u5728\u6570\u636e\u5e93\u672c\u8eab\u662f\u4e00\u4e2a\u574f\u4e3b\u610f\uff0c\u867d\u7136\u8fd9\u6837\u505a\u53ef\u4ee5\u5c0f\u5fc3\uff0c\u4f46\u98ce\u9669\u66f4\u9ad8\u3002\u4e3a\u4e86\u5e2e\u52a9\u89e3\u51b3\u6b64\u95ee\u9898\uff0cpgsodium\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u670d\u52a1\u5668\u5bc6\u94a5\u7ba1\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u5f15\u5bfc\u65f6\u52a0\u8f7d\u670d\u52a1\u5668\u5bc6\u94a5\u3002\n\u5982\u679c\u60a8\u5c06pgNa\u6dfb\u52a0\u5230\u60a8\u7684shared_preload_library\u914d\u7f6e\u4e2d\uff0c\u5e76\u5728\u60a8\u7684postgres\u5171\u4eab\u6269\u5c55\u76ee\u5f55\u4e2d\u653e\u7f6e\u4e00\u4e2a\u7279\u6b8a\u7684\u811a\u672c\uff0c\u5219\u670d\u52a1\u5668\u53ef\u4ee5\u5728serverstart\u4e0a\u9884\u52a0\u8f7d\u4e00\u4e2alibNa\u5bc6\u94a5\u3002\u65e0\u6cd5\u4eceSQL\u8bbf\u95ee\u5bc6\u94a5\u3002\u4f7f\u7528\u670d\u52a1\u5668\u79d8\u5bc6\u5bc6\u94a5\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u4e0b\u4e00\u8282\u4e2d\u6240\u793a\u7684pgnatrave()\u4ece\u5b83\u6d3e\u751f\u5176\u4ed6\u5bc6\u94a5\u3002\n\u670d\u52a1\u5668\u7ba1\u7406\u7684\u5bc6\u94a5\u662f\u5b8c\u5168\u53ef\u9009\u7684\uff0cpgNa\u4ecd\u7136\u53ef\u4ee5\u5728\u4e0d\u5c06\u5176\u653e\u5165Shared_PRELOAD_LIBRARY\u4e2d\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u60a8\u53ea\u9700\u63d0\u4f9b\u60a8\u81ea\u5df1\u7684\u5bc6\u94a5\u7ba1\u7406\u5373\u53ef\u3002\u5982\u679c\u9009\u62e9\u4e0d\u4f7f\u7528\u670d\u52a1\u5668\u7ba1\u7406\u7684\u5bc6\u94a5\uff0c\u8bf7\u8df3\u5230API\u7528\u6cd5\u90e8\u5206\u3002\n\u6709\u5173\u8fd4\u56delibNa\u5bc6\u94a5\u7684\u793a\u4f8b\u811a\u672c\uff0c\u8bf7\u53c2\u89c1\u6587\u4ef6pgnatagetkey.sample\u3002\u811a\u672c\u5fc5\u987b\u5728\u4e00\u884c\u4e0a\u53d1\u51fa\u5341\u516d\u8fdb\u5236\u7f16\u7801\u768432\u5b57\u8282(64\u4e2a\u5b57\u7b26)\u5b57\u7b26\u4e32\u3002\u8bf7\u52ff\u5728\u4e0d\u66ff\u6362\u60a8\u81ea\u5df1\u7684\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u6b64\u6587\u4ef6\u3002\u7f16\u8f91\u6587\u4ef6\u4ee5\u6dfb\u52a0\u60a8\u81ea\u5df1\u7684\u5bc6\u94a5\uff0c\u5220\u9664\u9000\u51fa\u884c\uff0c\u5220\u9664.sample\u540e\u7f00\uff0c\u5e76\u4f7f\u6587\u4ef6\u6210\u4e3a\u53ef\u6267\u884c\u6587\u4ef6(\u5728unixen chmod+x pgnatagetkey\u4e0a)\u3002\n\u63a5\u4e0b\u6765\uff0c\u5c06pgNa\u653e\u5728\u60a8\u7684\u5171\u4eab\u9884\u52a0\u8f7d\u5e93\u4e2d\u3002\u5bf9\u4e8edockertainers\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd0\u884c\u4e4b\u540e\u9644\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u7f16\u8f91\u811a\u672c\u4ee5\u83b7\u53d6\u6216\u751f\u6210\u5bc6\u94a5\u3002pgNa\u53ef\u7528\u4e8e\u751f\u6210\u5177\u6709SELECT\u7f16\u7801\u7684\u65b0\u968f\u673a\u5bc6\u94a5(\u968f\u673a\u5b57\u8282_buf(32)\uff0c#39\uff1b\u5341\u516d\u8fdb\u5236)\u3002\u5176\u4ed6\u5e38\u89c1\u6a21\u5f0f\u5305\u62ec\u5728\u5f15\u5bfc\u65f6\u63d0\u793a\u8f93\u5165\u5bc6\u94a5\uff0c\u4ecesshserver\u6216\u6258\u7ba1\u4e91\u79d8\u5bc6\u7cfb\u7edf\u83b7\u53d6\u5bc6\u94a5\uff0c\u6216\u8005\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177\u4ece\u786c\u4ef6\u5b89\u5168\u6a21\u5757\u83b7\u53d6\u5bc6\u94a5\u3002\n\u4f7f\u7528libNa key DerivationFunctions\u901a\u8fc7id\u548c\u53ef\u9009\u4e0a\u4e0b\u6587\u4ece\u4e3b\u670d\u52a1\u5668\u79d8\u5bc6\u5bc6\u94a5\u5bfc\u51fa\u65b0\u5bc6\u94a5\u3002\u5bc6\u94a5ID\u53ea\u662f\u5927\u6574\u6570\u3002\u5982\u679c\u60a8\u77e5\u9053\u5bc6\u94a5ID\u3001\u5bc6\u94a5\u957f\u5ea6(\u9ed8\u8ba4\u4e3a32\u5b57\u8282)\u548c\u4e0a\u4e0b\u6587(\u9ed8\u8ba4\u4e3apgNa&39\uff1b)\uff0c\u60a8\u5c31\u53ef\u4ee5\u786e\u5b9a\u5730\u751f\u6210\u6d3e\u751f\u5bc6\u94a5\u3002\n\u6d3e\u751f\u5bc6\u94a5\u53ef\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\u6216\u7528\u4f5c\u79cd\u5b50\uff0c\u4ee5\u4fbf\u4f7f\u7528crypto_sign_Seed_keypair()\u6216crypto_box_Seed_keypair()\u786e\u5b9a\u5730\u751f\u6210\u5bc6\u94a5\u5bf9\u3002\u660e\u667a\u7684\u505a\u6cd5\u662f\u4e0d\u5b58\u50a8\u8fd9\u4e9b\u79d8\u5bc6\uff0c\u800c\u53ea\u5b58\u50a8\u6216\u63a8\u65ad\u5bc6\u94a5ID\u3001\u957f\u5ea6\u548c\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u653b\u51fb\u8005\u7a83\u53d6\u4e86\u60a8\u7684\u6570\u636e\u5e93\u6620\u50cf\uff0c\u5373\u4f7f\u4ed6\u4eec\u77e5\u9053\u5bc6\u94a5ID\u3001\u957f\u5ea6\u548c\u4e0a\u4e0b\u6587\uff0c\u4e5f\u65e0\u6cd5\u751f\u6210\u5bc6\u94a5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u670d\u52a1\u5668\u5bc6\u94a5\u3002\n\u5bc6\u94a5ID\u3001\u5bc6\u94a5\u957f\u5ea6\u548c\u4e0a\u4e0b\u6587\u53ef\u4ee5\u662f\u79d8\u5bc6\u7684\uff0c\u5982\u679c\u60a8\u5b58\u50a8\u4e86\u5b83\u4eec\uff0c\u90a3\u4e48\u5982\u679c\u767b\u5f55\u7684\u6570\u636e\u5e93\u7528\u6237\u6709\u6743\u8c03\u7528pgNa_Derate()\u51fd\u6570\uff0c\u90a3\u4e48\u4ed6\u4eec\u53ef\u80fd\u4f1a\u751f\u6210\u5bc6\u94a5\u3002\u5411\u5ba2\u6237\u7aef\u4fdd\u5bc6\u5bc6\u94a5ID\u548c/\u6216\u957f\u5ea6\u4e0a\u4e0b\u6587\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u53ef\u80fd\u6027\uff0c\u5e76\u786e\u4fdd\u6b63\u786e\u8bbe\u7f6e\u6570\u636e\u5e93\u5b89\u5168\u6a21\u578b\uff0c\u4ee5\u4fbf\u53ea\u5411\u4e0e\u52a0\u5bc6API\u4ea4\u4e92\u7684\u7528\u6237\u63d0\u4f9b\u53ef\u80fd\u7684\u6700\u4f4e\u6743\u9650\u3002\n\u5bc6\u94a5\u8f6e\u6362\u7531\u60a8\u51b3\u5b9a\uff0c\u65e0\u8bba\u60a8\u60f3\u8981\u4ece\u4e00\u4e2a\u5bc6\u94a5\u8f6c\u5230\u4e0b\u4e00\u4e2a\u5bc6\u94a5\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\u662f\u9012\u589e\u5bc6\u94a5ID\u5e76\u91cd\u65b0\u52a0\u5bc6\uff0c\u4eceN\u5230N+1\u3002\u8f83\u65b0\u7684\u5bc6\u94a5\u5c06\u5177\u6709\u9012\u589e\u7684ID\uff0c\u60a8\u603b\u662f\u53ef\u4ee5\u77e5\u9053\u5bc6\u94a5\u88ab\u53d6\u4ee3\u7684\u987a\u5e8f\u3002\n\u6d3e\u751f\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a8\u5b57\u8282\u7684\u5b57\u8282\u3002\u76f8\u540c\u7684\u5bc6\u94a5ID\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u751f\u6210\u4e0d\u540c\u7684\u5bc6\u94a5\u3002\u7f3a\u7701\u4e0a\u4e0b\u6587\u662fASCII\u7f16\u7801\u5b57\u8282PGNa\u3002\u60a8\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u4efb\u4f558\u5b57\u8282\u4e0a\u4e0b\u6587\u6765\u786e\u5b9a\u952e\u7684\u8303\u56f4\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u5b83\u5fc5\u987b\u662f\u6709\u6548\u76848\u5b57\u8282\u5b57\u8282\uff0c\u53ef\u4ee5\u81ea\u52a8\u6b63\u786e\u8f6c\u6362\u4e3a\u7b80\u5355\u7684ASCII\u5b57\u7b26\u4e32\u3002\u6709\u5173\u5176\u4ed6\u5b57\u7b26\u7684\u7f16\u7801\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605encode()\u548cdecode()\u4ee5\u53caConvert_to()/Convert_from()\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u51fd\u6570\u3002\u7ed9\u5b9a\u6bcf\u4e2a\u4e0a\u4e0b\u6587\u4e00\u4e2a\u5927\u6574\u6570\u952e\u7a7a\u95f4\u548c2^64\u4e2a\u4e0a\u4e0b\u6587\uff0c\u53ef\u6d3e\u751f\u7684\u952e\u7a7a\u95f4\u975e\u5e38\u5927\u3002\n#SELECT PgNa_Derate(1)\uff1bpgsodium_derive--\\x84fa0487750d27386ad6235fc0c4bf3a9aa2c3ccb0e32b405b66e69d5021247b#SELECT PgNa_Derate(1\uff0c64)\uff1bpgsodium_derive--\u3002-\\xc58cbe0522ac4875707722251e53c0f0cfd8e8b76b133f399e2c64c9999f01cb1216d2ccfe9448ed8c225c8ba5db9b093ff5c1beb2d1fd612a38f40e362073fb#SELECT PGNa_DRIVE(1\uff0c32\uff0c&#39\uff1b__auth__&#39\uff1b)\uff1bpgsodium_derive--\\xa9aadb2331324f399fb58576c69f51727901c651c970f3ef6cff47066ea92e95\n\u6d3e\u751f\u5bc6\u94a5\u53ef\u4ee5\u5728\u7528\u4e8e\u5bf9\u79f0\u52a0\u5bc6\u7684crypto_Secretbox_*\u51fd\u6570\u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u6216\u8005\u7528\u4f5c\u4f7f\u7528\u4f8b\u5982crypto_box_Seed_new_keypair()\u548ccrypto_sign_Seed_new_keypair()\u751f\u6210\u5176\u4ed6\u5bc6\u94a5\u5bf9\u7684\u79cd\u5b50\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\uff0c\u5b83\u52a0\u5bc6\u8868\u4e2d\u7684\u4e00\u5217\uff0c\u5e76\u63d0\u4f9b\u6267\u884c\u52a8\u6001\u89e3\u5bc6\u7684\u89c6\u56fe\u3002\u6bcf\u884c\u5b58\u50a8\u7528\u4e8e\u6d3e\u751f\u52a0\u5bc6\u5bc6\u94a5\u7684\u968f\u673a\u6570\u548c\u5bc6\u94a5ID\u3002\nCREATE SCHEMA pgNa\uff1b\u4f7f\u7528SCHEMA pgNa\u521b\u5efa\u6269\u5c55pgNa\uff1bCREATE TABLE TEST(id bigSerial\u4e3b\u952e\uff0ckey_id bigint NOT NULL DEFAULT 1\uff0cNONCE BYTEA NOT NULL\uff0cDATA BYTEA)\uff1bCREATE VIEW TEST_VIEW AS SELECT ID\uff0cCONVERT_FROM(pgsodium.crypto_secubox_open(data\uff0cnonce\uff0cpgsodium.pgNa_Derate(Key_Id))\uff0c&#39\uff1butf8&39\uff1b)\u4f5c\u4e3atest\u4e2d\u7684\u6570\u636e\uff1bCREATE OR REPLACE\u3002BEGIN INSERT INSERT INTO TEST(NONCE)VALUES(New_Nonce)\u5c06id\u8fd4\u56detest_id\uff1b\u66f4\u65b0\u6d4b\u8bd5\u96c6data=pgsodium.crypto_Secretbox(CONVERT_TO(new.data\uff0c&#39\uff1butf8&#39\uff1b)\uff0cnew_nonce\uff0cpgsodium.pgNa_\u6d3e\u751f(Key_Id))WHERE id=test_id\uff1breturn new\uff1bend\uff1b$$\uff1bCREATE TRIGGER TEST_ENCRYPT_TRIGGER INSTEAD OF INSERT ON TEST_VIEW\u6267\u884c\u51fd\u6570test_\u3002\n\u5c06\u89c6\u56fe\u5f53\u4f5c\u666e\u901a\u8868\u4f7f\u7528\uff0c\u4f46\u662f\u4e0b\u9762\u7684\u8868\u662f\u52a0\u5bc6\u7684\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6ca1\u6709\u5b58\u50a8\u7684\u3001\u5411SQL\u516c\u5f00\u7684\u6216\u80fd\u591f\u8bb0\u5f55\u7684\u5bc6\u94a5\uff0c\u53ea\u4f7f\u7528\u4e86\u57fa\u4e8e\u5bc6\u94a5ID\u7684\u6d3e\u751f\u5bc6\u94a5\u3002\n\u89e6\u53d1TEST_ENCRYPT_TRIGGER\u4ee3\u66ff\u5305\u88c5\u5668TEST_VIEW\u4e0a\u7684INSERT\uff0c\u65b0\u63d2\u5165\u7684\u884c\u7528\u4ece\u5b58\u50a8\u7684KEY_ID\u6d3e\u751f\u7684\u5bc6\u94a5\u52a0\u5bc6\uff0c\u8be5\u5bc6\u94a5\u9ed8\u8ba4\u4e3a1\u3002\n#INSERT INSERT INTO TEST_VIEW(DATA)\u503c(&#39\uff1b\u8fd9\u662f\u4e00\u4e2a&#39\uff1b)\uff0c(&#39\uff1b\u8fd9\u662f\u4e24\u4e2a&#39\uff1b)\uff1b#SELECT*FROM TEST\uff1bid|Key_id|Nonce|data-+-+--+\u3002-3|1|\\xa6b9c4bfbfe194541faa21f2d31565babff1a250a010fa79|\\xb1d0432b173eb7fbef315ba5dd961454a4e2eef1332f9847eaef68 4|1|\\x0ad82e537d5422966c110ed65f60c6bada57c0be73476950|\\x8c29b12778b6bb5873c9f7fa123c4f105d6eb16e0c54dfae93da10#SELECT*FROM TEST_VIEW\uff1bID|DATA-+-3|\u8fd9\u662f1\u4e2a4|\u8fd9\u662f2\u4e2a\u3002\n\u53ef\u4ee5\u4f7f\u7528\u8f6e\u6362\u51fd\u6570\u6765\u5b8c\u6210\u5bc6\u94a5\u8f6e\u6362\uff0c\u8be5\u8f6e\u6362\u51fd\u6570\u5c06\u4f7f\u7528\u65b0\u7684\u5bc6\u94a5ID\u91cd\u65b0\u52a0\u5bc6\u884c\uff1a\nCREATE OR REPLACE\u51fd\u6570Rotate_Key(test_id bigint\uff0cnew_key bigint)\u8fd4\u56de\u7a7a\u8bed\u8a00plpgsql\u4e3a$$DECLARE NEW_Nonce BYTEA\uff1bBEGIN NEW_Nonce=pgsodium.crypto_Secretbox_Noncegen()\uff1b\u66f4\u65b0\u6d4b\u8bd5\u96c6NONCE=new_nonce\uff0ckey_id=new_key\uff0cdata=pgsodium.crypto_secbox(pgsodium.crypto_Secretbox_open(test.data\uff0ctest.nonce\uff0c\n\u901a\u8fc7\u4f20\u9012\u884cID\u548c\u65b0\u7684\u5bc6\u94a5ID\u6765\u8c03\u7528\u65cb\u8f6c\u51fd\u6570\u3002\u65e7\u7684\u884c\u5c06\u7528\u65e7\u7684\u6d3e\u751f\u5bc6\u94a5\u89e3\u5bc6\uff0c\u7136\u540e\u7528\u65b0\u7684\u6d3e\u751f\u5bc6\u94a5\u52a0\u5bc6\u3002\n#SELECT ROTATE_KEY(3\uff0c2)\uff1bROTATE_KEY-#SELECT*FROM TEST\uff1bid|Key_id|Nonce|data-+-+--+\u3002-4|1|\\x0ad82e537d5422966c110ed65f60c6bada57c0be73476950|\\x8c29b12778b6bb5873c9f7fa123c4f105d6eb16e0c54dfae93da10 3|2|\\x775f6b2fb01195f8646656d7588e581856ea44353332068e|\\x27da7b96f4eb611a0c8ad8e4cee0988714d14e830a9aaf8f282c2a#SELECT*FROM TEST_VIEW\uff1bID|\u6570\u636e-+-4|\u8fd9\u662f2|\u8fd9\u662f1\u3002\n\u5982\u679c\u653b\u51fb\u8005\u83b7\u53d6\u8868\u6216\u6570\u636e\u5e93\u7684\u8f6c\u50a8\uff0c\u4ed6\u4eec\u5c06\u65e0\u6cd5\u6d3e\u751f\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\u7684\u5bc6\u94a5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5c06\u6ca1\u6709\u6839\u670d\u52a1\u5668\u7ba1\u7406\u7684\u5bc6\u94a5\uff0c\u8be5\u5bc6\u94a5\u6c38\u8fdc\u4e0d\u4f1a\u6cc4\u9732\u7ed9SQL\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u793a\u4f8b\u6587\u4ef6\u3002\n\u4e0b\u9762\u662ftest.sql\u4e2d\u7684\u4e00\u4e2a\u7528\u6cd5\u793a\u4f8b\uff0c\u5b83\u4f7f\u7528\u547d\u4ee4\u884cpsql\u5ba2\u6237\u7aef\u547d\u4ee4(\u4ee5\u53cd\u659c\u6760\u5f00\u5934)\u521b\u5efa\u4eceAlice\u5230Bob\u7684\u5bc6\u94a5\u5bf9\u548c\u52a0\u5bc6\u6d88\u606f\u3002\n--\u4e3abob\u548calice\u751f\u6210\u516c\u94a5\u548c\u79c1\u94a5\u5bf9--\\gset[\u524d\u7f00]\u662f\u4e00\u4e2apsql\u547d\u4ee4\uff0c\u5b83\u5c06\u521b\u5efa\u672c\u5730\u811a\u672c\u53d8\u91cfSELECT public\uff0csecrefrom crypto_box_new_keypair()\\gset bob_select public\uff0csecret from crypto_box_new_keypair()\\gset alice_--\u521b\u5efaboxnonceSELECT crypto_box_noncegen()boxnonce\\gset--alice\u52a0\u5bc6\u3002\uff0c\uff1a&#39\uff1bbob_public&#39\uff1b\uff0c\uff1a\uff1a&#39\uff1b)box\\gset--Bob\u4f7f\u7528\u4ed6\u7684\u5bc6\u94a5\u3001\u968f\u673a\u6570\u548cAlice&#39\uff1b\u7684\u516c\u94a5SELECT CRYPTO_BOX_OPEN(\uff1a&#39\uff1bbox&#39\uff1b\uff0c\uff1a&#39\uff1bboxnonce&#39\uff1b\uff0c\uff1a&#39\uff1balice_public&#39\uff1b\uff0c\uff1a&#39\uff1bbob_ret&#39\uff1b)\u3002\n\u6ce8\u610f\uff1a\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5b58\u50a8\u4efb\u4f55\u673a\u5bc6\uff0c\u4f46\u662f\u5b83\u4eec\u662f\u7531\u53d1\u9001\u5230\u670d\u52a1\u5668\u7684psql\u5ba2\u6237\u7aef\u63d2\u5165\u5230SQL\u4e2d\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u4f1a\u663e\u793a\u5728\u6570\u636e\u5e93\u65e5\u5fd7\u4e2d\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6d3e\u751f\u5bc6\u94a5\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\n\u5982\u679c\u60a8\u9009\u62e9\u4f7f\u7528\u81ea\u5df1\u7684\u5bc6\u94a5\uff0c\u4e00\u79cd\u66f4\u504f\u6267\u7684\u65b9\u6cd5\u662f\u5c06\u5bc6\u94a5\u4fdd\u5b58\u5728\u5916\u90e8\u5b58\u50a8\u4e2d\uff0c\u5e76\u7981\u7528\u65e5\u5fd7\u8bb0\u5f55\uff0c\u540c\u65f6\u4f7f\u7528set local\u5c06\u5bc6\u94a5\u6ce8\u5165\u5c40\u90e8\u53d8\u91cf\u3002\u5982\u679c\u6570\u636e\u5e93\u7684\u56fe\u50cf\u88ab\u9ed1\u5ba2\u653b\u51fb\u6216\u7a83\u53d6\uff0c\u653b\u51fb\u8005\u5c06\u65e0\u6cd5\u83b7\u5f97\u5bc6\u94a5\u3002\n\u8981\u7981\u7528\u952e\u6ce8\u5165\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528set local\u7981\u7528LOG_STATEMENT\uff0c\u7136\u540e\u91cd\u65b0\u542f\u7528\u6b63\u5e38\u65e5\u5fd7\u8bb0\u5f55\u3002\u5982\u4e0b\u6240\u793a\u3002\u8bbe\u7f6eLOG_STATEMENT\u9700\u8981\u8d85\u7ea7\u7528\u6237\u6743\u9650\uff1a\n--\u5fc5\u987b\u5728\u4e8b\u52a1\u5757BEGIN\u4e2d\u8bbe\u7f6eLOCAL\uff1b--\u4e3aBob\u548cAlice\u751f\u6210boxnonce\u4ee5\u53ca\u516c\u94a5\u548c\u79c1\u94a5\u5bf9--\u8fd9\u5c06\u521b\u5efa\u53d1\u9001\u56de\u5ba2\u6237\u7aef\u4f46\u4e0d\u5b58\u50a8\u7684\u79d8\u5bc6--\u6216\u8bb0\u5f55\u79d8\u5bc6\u3002\u8bf7\u786e\u4fdd\u60a8\u6b63\u5728\u4f7f\u7528\u52a0\u5bc6\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff01SELECT CRYPTO_BOX_NONCEGEN()boxnonce\\gsetSELECT public\uff0cSecret from crypto_box_new_keypair()\\gset bob_select public\uff0csecret from crypto_box_new_keypair()\\gset Alice_--\u5173\u95ed\u65e5\u5fd7\u8bb0\u5f55\u5e76\u5c06\u5bc6\u7801\u6ce8\u5165SET LOCAL\u4f1a\u8bdd\uff0c\u7136\u540e\u7ee7\u7eed\u8bb0\u5f55\u3002Set local log_Statement=&#39\uff1bNone&#39\uff1b\uff1bALICE_SECRET&#39\uff1b\uff1bRESET LOG_STATEMENT\uff1b--\u73b0\u5728\u8c03\u7528`Current_Setting()`\u51fd\u6570\u6765\u83b7\u53d6\u5bc6\u94a5\uff0c\u8fd9\u4e9b\u5bc6\u94a5\u4e0d\u4f1a--\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u800c\u53ea\u5b58\u50a8\u5728\u4f1a\u8bdd\u5185\u5b58\u4e2d\uff0c\u5f53\u4f1a\u8bdd\u5173\u95ed\u65f6\uff0c\u5b83\u4eec\u5c06\u4e0d\u518d\u53ef\u8bbf\u95ee\u3002--Alice\u4f7f\u7528\u5979\u7684\u5bc6\u94a5\u548c\u4ed6\u7684\u516c\u94a5\u4e3aBob\u52a0\u5bc6\u76d2SELECT CRYPTO_BOX(&#39\uff1bBob\u662f\u60a8\u7684\u53d4\u53d4&39\uff1b\uff1a&#39\uff1bboxnonce&39\uff1b\uff0c\uff1a&#39\uff1bbob\u3002app.alice_secret&39\uff1b)\uff1a\uff1abytea)BOX\\gset--Bob\u4f7f\u7528\u4ed6\u7684\u5bc6\u94a5\u548c\u7231\u4e3d\u4e1d\u7684\u516c\u94a5\u89e3\u5bc6BOX\u3002SELECT CRYPTO_BOX_OPEN(\uff1a&#39\uff1bBOX&#39\uff1b\uff0c\uff1a&#39\uff1bBOXNONCE&#39\uff1b\uff0c\uff1a&#39\uff1bALICE_PUBLIC&39\uff1b\uff0ccurrent_setting(&#39\uff1bapp.bob_secret&#39\uff1b)\uff1a\uff1abytea)\uff1bCOMMIT\uff1b\n\u5bf9\u4e8e\u989d\u5916\u7684\u504f\u6267\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u67e5\u6b63\u5728\u4f7f\u7528\u7684\u8fde\u63a5\u662f\u5b89\u5168\u7684\u8fd8\u662fUnix\u57df\u5957\u63a5\u5b57\u3002\nCREATE Function IS_SSL_OR_DOMAIN_SOCKET()\u5c06boolLANGUAGE plpgsql\u8fd4\u56de\u4e3a$$DECLARE ADDR TEXT\uff1bSSL TEXT\uff1bBEGIN SELECT inet_CLIENT_ADDR()INTO ADDR\uff1bSELECT CURRENT_SETTING(&#39\uff1bSSL&#39\uff1b\uff0cTRUE)INTO SSL\uff1b\u5982\u679c\u627e\u4e0d\u5230OR((SSL IS NULL\u6216SSL\uff01=&#39\uff1bON&#39\uff1b)AND(addr IS NOT NULL OR Length(Addr)\uff01=0))\uff0c\u5219\u8fd4\u56deFALSE\uff1bEND IF\uff1bRETURN\u3002\n\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u79d8\u5bc6\u4e0d\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6cc4\u9732\u51fa\u53bb\uff0c\u4f46\u5982\u679c\u60a8\u4ece\u4e0d\u5b58\u50a8\u79d8\u5bc6\uff0c\u800c\u53ea\u901a\u8fc7\u5b89\u5168\u901a\u9053\u5c06\u5176\u53d1\u9001\u56de\u5ba2\u6237\u7aef\uff0c\u4f8b\u5982\u4f7f\u7528\u4e0a\u9762\u6240\u793a\u7684psql client\\gset\u547d\u4ee4\uff0c\u6216\u8005\u53ea\u5b58\u50a8\u6dfb\u52a0\u7684\u5bc6\u94a5ID\u548c\u4e0a\u4e0b\u6587\uff0c\u5219\u5b83\u4f1a\u5f88\u6709\u7528\u3002\n\u4e0b\u9762\u7684\u53c2\u8003\u6587\u732e\u6539\u7f16\u81ea\u5e76\u4f7f\u7528\u4e86\u4e00\u4e9b\u4e0elibNa C APIDocumentation\u76f8\u540c\u7684\u8bed\u8a00\u3002\u6709\u5173\u7b97\u6cd5\u548c\u5176\u4ed6LibNa\u7279\u5b9a\u7ec6\u8282\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd9\u4e9b\u6587\u6863\u3002\n\u8be5\u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u6765\u751f\u6210\u4e0d\u53ef\u9884\u6d4b\u7684\u6570\u636e\uff0c\u9002\u7528\u4e8e\u521b\u5efa\u5bc6\u94a5\u3002\n\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff1a\u8fd4\u56de\u4e00\u4e2a\u4ecb\u4e8e0\u548c\u4e0a\u9650(\u4e0d\u5305\u62ec\u5728\u5185)\u4e4b\u95f4\u7684\u4e0d\u53ef\u9884\u77e5\u7684\u503c\u3002\u4e0e\u968f\u673a\u5b57\u8282_\u968f\u673a()%UPPER_BIND\u4e0d\u540c\uff0c\u5b83\u4fdd\u8bc1\u53ef\u80fd\u8f93\u51fa\u503c\u7684\u5747\u5300\u5206\u5e03\uff0c\u5373\u4f7f\u5f53UPPER_BIND\u4e0d\u662f2\u7684\u5e42\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u8bf7\u6ce8\u610f\uff0cUPERBIND&lt\uff1b2\u53ea\u7559\u4e0b\u4e00\u4e2a\u5143\u7d20\u53ef\u4f9b\u9009\u62e9\uff0c\u53730\u3002\n\u968f\u673a\u5b57\u8282_buf_defiristic()\u8fd4\u56de\u4e00\u4e2a\u5927\u5c0f\u5b57\u8282\uff0c\u8be5\u5b57\u8282\u5305\u542b\u5728\u4e0d\u77e5\u9053\u79cd\u5b50\u7684\u60c5\u51b5\u4e0b\u4e0e\u968f\u673a\u5b57\u8282\u65e0\u6cd5\u533a\u5206\u7684\u5b57\u8282\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u79cd\u5b50\uff0c\u6b64\u51fd\u6570\u5c06\u59cb\u7ec8\u8f93\u51fa\u76f8\u540c\u7684\u5e8f\u5217\u3002\u5927\u5c0f\u6700\u5927\u53ef\u8fbe2^38(256 GB)\u3002\ncrypto_Secretbox_keygen()--&gt\uff1bbyta crypto_Secretbox_Noncegen()-&gt\uff1bbytecrypto_secto box(message byteA\uff0cnonce bytea\uff0ckey bytea)-&gt\uff1bbytecrypto_Secretbox_open(\u5bc6\u6587byteA\uff0cnonce bytea\uff0ckey bytea)-&gt\uff1bbyteA\u3002\ncrypto_Secretbox_noncegen()\u751f\u6210\u4e00\u4e2a\u968f\u673a\u968f\u673a\u6570\uff0c\u8be5\u968f\u673a\u6570\u5c06\u5728\u52a0\u5bc6\u6d88\u606f\u65f6\u4f7f\u7528\u3002\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u6bcf\u4e2a\u968f\u673a\u6570\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u662f\u79d8\u5bc6\u3002\u968f\u673a\u6570\u7684\u76ee\u7684\u662f\u589e\u52a0\u6d88\u606f\u7684\u968f\u673a\u6027\uff0c\u4ee5\u4fbf\u7528\u76f8\u540c\u5bc6\u94a5\u591a\u6b21\u52a0\u5bc6\u7684\u540c\u4e00\u6d88\u606f\u5c06\u4ea7\u751f\u4e0d\u540c\u7684\u5bc6\u6587\u3002\ncrypto_Secretbox()\u4f7f\u7528\u5148\u524d\u751f\u6210\u7684\u968f\u673a\u6570\u548c\u5bc6\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002\u53ef\u4ee5\u4f7f\u7528crypto_Secretbox_open()\u5bf9\u52a0\u5bc6\u7684\u6d88\u606f\u8fdb\u884c\u89e3\u5bc6\u3002\u8bf7\u6ce8\u610f\uff0c\u8981\u89e3\u5bc6\u6d88\u606f\uff0c\u9700\u8981\u539f\u59cb\u7684\u968f\u673a\u6570\u3002\ncrypto_auth_keygen()-&gt\uff1bbyta crypto_auth(message byteA\uff0ckey byteA)-&gt\uff1bbyTea crypto_auth_ify(mac byteA\uff0cmessage byteA\uff0ckey bytea)-&gt\uff1b\u5e03\u5c14\u503c\u3002\ncrypto_auth()\u751f\u6210\u7528\u4e8e\u7ec4\u5408\u6d88\u606f\u548c\u5bc6\u94a5\u7684\u8eab\u4efd\u9a8c\u8bc1\u6807\u8bb0(Mac)\u3002\u8fd9\u4e0d\u4f1a\u52a0\u5bc6\u6d88\u606f\uff1b\u5b83\u53ea\u662f\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bc1\u660e\u6d88\u606f\u6ca1\u6709\u88ab\u7be1\u6539\u7684\u65b9\u6cd5\u3002\u8981\u9a8c\u8bc1\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6807\u8bb0\u7684\u6d88\u606f\uff0c\u8bf7\u4f7f\u7528crypto_auth_ify()\u3002\u6b64\u51fd\u6570\u662f\u786e\u5b9a\u6027\u7684\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6d88\u606f\u548c\u5bc6\u94a5\uff0c\u751f\u6210\u7684MAC\u5c06\u59cb\u7ec8\u76f8\u540c\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u9700\u8981\u8bbf\u95ee\u5bc6\u94a5\uff0c\u8fd9\u901a\u5e38\u4e0d\u5e94\u8be5\u5171\u4eab\u3002\u5982\u679c\u8bb8\u591a\u7528\u6237\u9700\u8981\u9a8c\u8bc1\u6d88\u606f\uff0c\u4f7f\u7528\u516c\u94a5\u7b7e\u540d\u901a\u5e38\u6bd4\u5171\u4eab\u79c1\u94a5\u8981\u597d\u3002\ncrypto_auth_ify()\u9a8c\u8bc1\u7ed9\u5b9a\u7684mac(Authationtag)\u662f\u5426\u4e0e\u63d0\u4f9b\u7684\u6d88\u606f\u548c\u5bc6\u94a5\u5339\u914d\u3002\u8fd9\u544a\u8bc9\u6211\u4eec\u539f\u59cb\u6d88\u606f\u6ca1\u6709\u88ab\u7be1\u6539\u3002\ncrypto_box_new_keypair()--&gt\uff1bcrypto_box_keypair crypto_box_Noncegen()-&gt\uff1bbytecrypto_box(message bytea\uff0cnonce byTea\uff0cpublic bytee\uff0csecrebytee)-&gt\uff1bbytecrypto_box_open(\u5bc6\u6587byteA\uff0cnonce byTea\uff0cpublic bytea\uff0csecreybytee)-&gt\uff1bbyTea\ncrypto_box_new_keypair()\u8fd4\u56de\u7528\u4e8e\u516c\u94a5\u52a0\u5bc6\u7684\u65b0\u7684\u3001\u968f\u673a\u751f\u6210\u7684\u5bc6\u94a5\u5bf9\u3002\u516c\u94a5\u53ef\u4ee5\u4e0e\u4efb\u4f55\u4eba\u5171\u4eab\u3002\u7edd\u5bf9\u4e0d\u80fd\u5171\u4eab\u5bc6\u94a5\u3002\ncrypto_box_noncegen()\u751f\u6210\u5c06\u5728\u52a0\u5bc6\u6d88\u606f\u65f6\u4f7f\u7528\u7684\u968f\u673a\u968f\u673a\u6570\u3002\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u6bcf\u4e2a\u968f\u673a\u6570\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u79d8\u5bc6\u3002\u968f\u673a\u6570\u7684\u76ee\u7684\u662f\u589e\u52a0\u6d88\u606f\u7684\u968f\u673a\u6027\uff0c\u4f7f\u5f97\u7528\u76f8\u540c\u5bc6\u94a5\u591a\u6b21\u52a0\u5bc6\u7684\u540c\u4e00\u6d88\u606f\u5c06\u4ea7\u751f\u4e0d\u540c\u7684\u5bc6\u6587\u3002\ncrypto_box()\u4f7f\u7528\u968f\u673a\u6570\u3001\u610f\u5411\u63a5\u6536\u65b9\u7684\u516c\u94a5\u548c\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002\u6240\u5f97\u5230\u7684\u5bc6\u6587\u53ea\u80fd\u7531\u9884\u671f\u7684\u63a5\u6536\u8005\u4f7f\u7528\u4ed6\u4eec\u7684\u5bc6\u94a5\u6765\u89e3\u5bc6\u3002\u73b0\u65f6\u503c\u5fc5\u987b\u4e0e\u5bc6\u6587\u4e00\u8d77\u53d1\u9001\u3002\ncrypto_box_open()\u89e3\u5bc6\u4f7f\u7528crypto_box()\u52a0\u5bc6\u7684\u5bc6\u6587\u3002\u5b83\u4ee5\u5bc6\u6587\u3001\u968f\u673a\u6570\u3001\u53d1\u9001\u8005\u7684\u516c\u94a5\u548c\u63a5\u6536\u8005\u7684\u79d8\u5bc6\u5bc6\u94a5\u4e3a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u539f\u59cb\u6d88\u606f\u3002\u8bf7\u6ce8\u610f\uff0c\u63a5\u6536\u65b9\u5e94\u786e\u4fdd\u516c\u94a5\u5c5e\u4e8e\u53d1\u9001\u65b9\u3002\ncrypto_sign_new_keypair()-&gt\uff1bcrypto_sign_keypair\u7ec4\u5408\u6a21\u5f0f\u51fd\u6570\uff1acrypto_sign(message byteA\uff0ckey byteA)-&gt\uff1bbyta crypto_sign_open(sign_message byteA\uff0ckey byteA)-&gt\uff1bbyta\u5206\u79bb\u6a21\u5f0f\u51fd\u6570\uff1acrypto_sign_disached(message byteA\uff0ckey byteA)-&gt\uff1bbyta crypto_sign_ify_disached(sig byteA\uff0cmessage byteA\uff0cBYTEA CRYPTO_SIGN_UPDATE(\u72b6\u6001BYTEA\uff0c\u6d88\u606fBYTEA)-&gt\uff1bBYTEA CRYPTO_SIGN_FINAL_CREATE(\u72b6\u6001BYTEA\uff0c\u5bc6\u94a5BYTEA)-&gt\uff1bBYTEA CRYPTO_SIGN_FINAL_VERIFY(\u72b6\u6001BYTEA\uff0c\u7b7e\u540dBYTEA\uff0c\u5bc6\u94a5BYTEA)-&gt\uff1b\u5e03\u5c14\u3002\n\u8fd9\u4e9b\u51fd\u6570\u7528\u4e8e\u9a8c\u8bc1\u6d88\u606f\u6765\u81ea\u7279\u5b9a\u7684\u53d1\u8d77\u8005(\u60a8\u62e5\u6709\u5176\u516c\u94a5\u7684\u79d8\u5bc6\u5bc6\u94a5\u7684\u6301\u6709\u8005)\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u7be1\u6539\u3002\ncrypto_sign_new_keypair()\u8fd4\u56de\u65b0\u7684\u3001\u968f\u673a\u751f\u6210\u7684\u516c\u94a5\u7b7e\u540d\u5bc6\u94a5\u5bf9\u3002\u516c\u94a5\u53ef\u4ee5\u4e0e\u4efb\u4f55\u4eba\u5171\u4eab\u3002\u7edd\u5bf9\u4e0d\u80fd\u5171\u4eab\u5bc6\u94a5\u3002\nCRYPTO_SIGN()\u548cCRYTO_SIGN_VERIFY()\u5728\u7ec4\u5408\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u6b63\u5728\u7b7e\u540d\u7684\u6d88\u606f\u4e0e\u5176\u7b7e\u540d\u5408\u5e76\u4e3a\u4e00\u4e2a\u5355\u5143\u3002\ncrypto_sign()\u4f7f\u7528\u7b7e\u540d\u8005\u7684\u5bc6\u94a5\u521b\u5efa\u7b7e\u540d\uff0c\u5e76\u5c06\u8be5\u5bc6\u94a5\u6dfb\u52a0\u5230\u6d88\u606f\u524d\u9762\u3002\u53ef\u4ee5\u4f7f\u7528crypto_sign_open()\u5bf9\u7ed3\u679c\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\ncrypto_sign_open()\u63a5\u53d7\u7531crypto_sign()\u521b\u5efa\u7684\u7b7e\u540d\u6d88\u606f\uff0c\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u68c0\u67e5\u5176\u6709\u6548\u6027\uff0c\u5982\u679c\u6709\u6548\u5219\u8fd4\u56de\u539f\u59cb\u6d88\u606f\uff0c\u5426\u5219\u5f15\u53d1\u6570\u636e\u5f02\u5e38\u3002\nCRYPTO_SIGN_DETACHED()\u548cCRYPTO_SIGN_VERIFY_DETACHED()\u5728\u5206\u79bb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u6d88\u606f\u4e0e\u7b7e\u540d\u4fdd\u6301\u72ec\u7acb\u3002\u5f53\u5e0c\u671b\u5bf9\u5df2\u5b58\u50a8\u7684\u5bf9\u8c61\u8fdb\u884c\u7b7e\u540d\u65f6\uff0c\u6216\u8005\u5728\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u591a\u4e2a\u7b7e\u540d\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4f1a\u5f88\u6709\u7528\u3002\ncrypto_sign_disached()\u4f7f\u7528\u7b7e\u540d\u8005\u7684\u5bc6\u94a5\u4e3a\u6d88\u606f\u751f\u6210\u7b7e\u540d\u3002\u7ed3\u679c\u662f\u72ec\u7acb\u4e8e\u6d88\u606f\u800c\u5b58\u5728\u7684\u7b7e\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528crypto_sign_Verify_Detached()\u8fdb\u884c\u9a8c\u8bc1\u3002\nCRYPTO_SIGN_VERIFY_DETACHED()\u7528\u4e8e\u9a8c\u8bc1\u7531CRYPTO_SIGN_DETACHED()\u91cd\u65b0\u751f\u6210\u7684\u7b7e\u540d\u3002\u5b83\u91c7\u7528\u751f\u6210\u7684\u7b7e\u540d\u3001\u539f\u59cb\u6d88\u606f\u548c\u7b7e\u540d\u8005\u7684\u516c\u94a5\uff0c\u5982\u679c\u7b7e\u540d\u4e0e\u6d88\u606f\u548c\u5bc6\u94a5\u5339\u914d\uff0c\u5219\u8fd4\u56deTRUE\uff0c\u5426\u5219\u8fd4\u56deFALSE\u3002\nCRYPTO_SIGN_INIT()\u3001CRYPTO_SIGN_UPDATE()\u3001CRYPTO_SIGN_FINAL_CREATE()\u3001CRYPTO_SIGN_FINAL_VERIFY()\u548c\u805a\u5408CRYPTO_SIGN_UPDATE_AGG()\u591a\u90e8\u5206\u6d88\u606f\u7684\u53e5\u67c4\u7b7e\u540d\u3002\u8981\u521b\u5efa\u6216\u9a8c\u8bc1\u591a\u65b9\u6d88\u606f\u7684\u7b7e\u540d\uff0c\u8bf7\u4f7f\u7528crypto_sign_init()\u6765\u542f\u52a8\u8be5\u8fc7\u7a0b\uff0c\u7136\u540e\u6bcf\u6761\u6d88\u606f\u3002\n..", "note_en": "Travis CI tested withthe  official docker images forPostgreSQL 13, 12, 11, and 10. Requires libsodium &gt;= 1.0.18. Inaddition to the libsodium library and it&#39;s development headers, youmay also need the PostgreSQL header files typically in the &#39;-dev&#39;packages to build the extension.\n  pgTAP tests can be run with &#39;sudo -u postgres pg_prove test.sql&#39; orthey can be run in a self-contained Docker image. Run  ./test.sh ifyou have docker installed to run all tests. Note that this will runthe tests against and download docker images for four different majorversions of PostgreSQL, so it takes a while and requires a lot ofnetwork bandwidth the first time you run it.\n  pgsodium arguments and return values for content and keys are of type bytea. If you wish to use  text or  varchar values for generalcontent, you must make sure they are encoded correctly. The  encode() and decode() and convert_to()/convert_from()binary string functions can convert from  text to  bytea.Simpleascii  text strings without escape or unicode characters will be castby the database implicitly, and this is how it is done in the tests tosave time, but you should really be explicitly converting your  textcontent if you wish to use pgsodium without conversion errors.\n Most of the libsodium API is available as SQL functions. Keys thatare generated in pairs are returned as a record type, for example:\n  pgsodium is careful to use memory cleanup callbacks to zero out allallocated memory used by the when freed. In general it is a bad ideato store secrets in the database itself, although this can be donecarefully it has a higher risk. To help with this problem, pgsodiumhas an optional Server Key Management function that can load a serverkey at boot.\n  If you add pgsodium to your  shared_preload_librariesconfiguration and place a special script in your postgres sharedextension directory, the server can preload a libsodium key on serverstart.  The secret key cannot be accessed from SQL. The only wayto use the server secret key is to  derive other keys from it using pgsodium_derive() shown in the next section.\n Server managed keys are completely optional, pgsodium can still beused without putting it in  shared_preload_libraries, you will simplyneed to provide your own key management. Skip ahead to the API usagesection if you choose not to use server managed keys.\n See the file   pgsodium_getkey.sample foran example script that returns a libsodium key. The script must emita hex encoded 32 byte (64 character) string on a single line. DO NOTUSE THIS FILE WITHOUT SUBSTITUTING YOUR OWN KEY. Edit the file to addyour own key and remove the  exit line, remove the  .sample suffixand make the file executable (on unixen  chmod +x pgsodium_getkey).\n Next place  pgsodium in your  shared_preload_libraries. For dockercontainers, you can append this after the run:\n    It is up to you to edit the script to get or generate the key howeveryou want. pgsodium can be used to generate a new random key with select encode(randombytes_buf(32), &#39;hex&#39;). Other common patternsincluding prompting for the key on boot, fetching it from an sshserver or managed cloud secret system, or using a command line tool toget it from a hardware security module.\n  New keys are derived from the master server secret key by id and anoptional context using the  libsodium Key DerivationFunctions. Key id are just bigint integers. If you know the key id, key length (default 32bytes) and the context (default &#39;pgsodium&#39;), you can deterministiclygenerate a derived key.\n Derived keys can be used to encrypt data or as a seed fordeterministicly generating keypairs using  crypto_sign_seed_keypair()or  crypto_box_seed_keypair(). It is wise not to store these secretsbut only store or infer the key id, length and context. If anattacker steals your database image, they cannot generate the key evenif they know the key id, length and context because they will not havethe server secret key.\n The key id, key length and context can be secret or not, if you storethem then possibly logged in database users can generate the key ifthey have permission to call the  pgsodium_derive() function.Keeping the key id and/or length context secret to a client avoid thispossibility and make sure to set your  database securitymodel correctly sothat only the minimum permission possible is given to users thatinteract with the encryption API.\n Key rotation is up to you, whatever strategy you want to go from onekey to the next. A simple strategy is incrementing the key id andre-encrypting from N to N+1. Newer keys will have increasing ids, youcan always tell the order in which keys are superceded.\n A derivation context is an 8 byte  bytea. The same key id indifferent contexts generate different keys. The default context isthe ascii encoded bytes  pgsodium. You are free to use any 8 bytecontext to scope your keys, but remember it must be a valid 8 byte bytea which automatically cast correctly for simple ascii string.For encoding other characters, see the   encode() and decode() and convert_to()/convert_from()binary string functions. The derivable keyspace is huge given one bigint keyspace per context and 2^64 contexts.\n  # select pgsodium_derive(1); pgsodium_derive-------------------------------------------------------------------- \\x84fa0487750d27386ad6235fc0c4bf3a9aa2c3ccb0e32b405b66e69d5021247b# select pgsodium_derive(1, 64); pgsodium_derive------------------------------------------------------------------------------------------------------------------------------------ \\xc58cbe0522ac4875707722251e53c0f0cfd8e8b76b133f399e2c64c9999f01cb1216d2ccfe9448ed8c225c8ba5db9b093ff5c1beb2d1fd612a38f40e362073fb# select pgsodium_derive(1, 32, &#39;__auth__&#39;); pgsodium_derive-------------------------------------------------------------------- \\xa9aadb2331324f399fb58576c69f51727901c651c970f3ef6cff47066ea92e95\n  Derived keys can be used either directy in  crypto_secretbox_*functions for &#34;symmetric&#34; encryption or as seeds for generating otherkeypairs using for example  crypto_box_seed_new_keypair() and crypto_sign_seed_new_keypair().\n   Here&#39;s an example script that encrypts a column in a table andprovides a view that does on the fly decryption. Each row&#39;s storesthe nonce and key id used to derive the encryption key.\n CREATE SCHEMA pgsodium;CREATE EXTENSION pgsodium WITH SCHEMA pgsodium;CREATE TABLE test ( id bigserial primary key, key_id bigint not null default 1, nonce bytea not null, data bytea );CREATE VIEW test_view AS SELECT id, convert_from(pgsodium.crypto_secretbox_open( data, nonce, pgsodium.pgsodium_derive(key_id)), &#39;utf8&#39;) AS data FROM test;CREATE OR REPLACE FUNCTION test_encrypt() RETURNS trigger language plpgsql AS$$DECLARE new_nonce bytea = pgsodium.crypto_secretbox_noncegen(); test_id bigint;BEGIN insert into test (nonce) values (new_nonce) returning id into test_id; update test set data = pgsodium.crypto_secretbox( convert_to(new.data, &#39;utf8&#39;), new_nonce, pgsodium.pgsodium_derive(key_id)) where id = test_id; RETURN new;END;$$;CREATE TRIGGER test_encrypt_trigger INSTEAD OF INSERT ON test_view FOR EACH ROW EXECUTE FUNCTION test_encrypt();\n Use the view as if it were a normal table, but the underying table isencrypted. Note how in the following example, there are  no keysstored, exposed to SQL or able to be logged, only  derivedkeys based on a key id are used.\n The trigger  test_encrypt_trigger is fired  INSTEAD OF INSERT ON thewrapper  test_view, newly inserted rows are encrypted with a keyderived from the stored key_id which defaults to 1.\n # insert into test_view (data) values (&#39;this is one&#39;), (&#39;this is two&#39;);# select * from test; id | key_id | nonce | data----+--------+----------------------------------------------------+---------------------------------------------------------- 3 | 1 | \\xa6b9c4bfbfe194541faa21f2d31565babff1a250a010fa79 | \\xb1d0432b173eb7fbef315ba5dd961454a4e2eef1332f9847eaef68 4 | 1 | \\x0ad82e537d5422966c110ed65f60c6bada57c0be73476950 | \\x8c29b12778b6bb5873c9f7fa123c4f105d6eb16e0c54dfae93da10# select * from test_view; id | data----+------------- 3 | this is one 4 | this is two\n Key rotation can be done with a rotation function that will re-encrypta row with a new key id:\n CREATE OR REPLACE FUNCTION rotate_key(test_id bigint, new_key bigint) RETURNS void LANGUAGE plpgsql AS $$DECLARE new_nonce bytea;BEGIN new_nonce = pgsodium.crypto_secretbox_noncegen(); UPDATE test SET nonce = new_nonce, key_id = new_key, data = pgsodium.crypto_secretbox( pgsodium.crypto_secretbox_open( test.data, test.nonce, pgsodium.pgsodium_derive(test.key_id)), new_nonce, pgsodium.pgsodium_derive(new_key)) WHERE test.id = test_id; RETURN;END;$$;\n Call the rotation function by passing a row id and a new key id. Theold row will be decrypted with the old derived key, then encryptedwith the new derived key.\n # select rotate_key(3, 2); rotate_key------------# select * from test; id | key_id | nonce | data----+--------+----------------------------------------------------+---------------------------------------------------------- 4 | 1 | \\x0ad82e537d5422966c110ed65f60c6bada57c0be73476950 | \\x8c29b12778b6bb5873c9f7fa123c4f105d6eb16e0c54dfae93da10 3 | 2 | \\x775f6b2fb01195f8646656d7588e581856ea44353332068e | \\x27da7b96f4eb611a0c8ad8e4cee0988714d14e830a9aaf8f282c2a# select * from test_view; id | data----+------------- 4 | this is two 3 | this is one\n If an attacker acquires a dump of the table or database, they will notbe able to derive the keys used encrypt the data since they will nothave the root server managed key, which is never revealed to SQL Seethe  example file for more details.\n  Here&#39;s an example usage from the test.sql that uses command-line  psql clientcommands (which begin with a backslash) to create keypairs and encrypta message from Alice to Bob.\n -- Generate public and secret keypairs for bob and alice-- \\gset [prefix] is a psql command that will create local-- script variablesSELECT public, secret FROM crypto_box_new_keypair() \\gset bob_SELECT public, secret FROM crypto_box_new_keypair() \\gset alice_-- Create a boxnonceSELECT crypto_box_noncegen() boxnonce \\gset-- Alice encrypts the box for bob using her secret key, the nonce and his public keySELECT crypto_box(&#39;bob is your uncle&#39;, :&#39;boxnonce&#39;, :&#39;bob_public&#39;, :&#39;alice_secret&#39;) box \\gset-- Bob decrypts the box using his secret key, the nonce, and Alice&#39;s public keySELECT crypto_box_open(:&#39;box&#39;, :&#39;boxnonce&#39;, :&#39;alice_public&#39;, :&#39;bob_secret&#39;);\n Note in the above example, no secrets are  stored in the db, but theyare  interpolated into the sql by the psql client that is sent to theserver, so it&#39;s possible they can show up in the database logs. Youcan avoid this by using derived keys.\n  If you choose to work with your own keys a more paranoid approach isto keep keys in an external storage and disables logging whileinjecting the keys into local variables with   SET LOCAL. If theimages of database are hacked or stolen, the keys will not beavailable to the attacker.\n To disable logging of the key injections,  SET LOCAL is also used todisable  log_statementsand then re-enable normal logging afterwards. as shown below. Setting log_statement requires superuser privledges:\n -- SET LOCAL must be done in a transaction blockBEGIN;-- Generate a boxnonce, and public and secret keypairs for bob and alice-- This creates secrets that are sent back to the client but not stored-- or logged. Make sure you&#39;re using an encrypted database connection!SELECT crypto_box_noncegen() boxnonce \\gsetSELECT public, secret FROM crypto_box_new_keypair() \\gset bob_SELECT public, secret FROM crypto_box_new_keypair() \\gset alice_-- Turn off logging and inject secrets-- into session with set local, then resume logging.SET LOCAL log_statement = &#39;none&#39;;SET LOCAL app.bob_secret = :&#39;bob_secret&#39;;SET LOCAL app.alice_secret = :&#39;alice_secret&#39;;RESET log_statement;-- Now call the `current_setting()` function to get the secrets, these are not-- stored in the db but only in session memory, when the session is closed they are no longer-- accessible.-- Alice encrypts the box for bob using her secret key and his public keySELECT crypto_box(&#39;bob is your uncle&#39;, :&#39;boxnonce&#39;, :&#39;bob_public&#39;, current_setting(&#39;app.alice_secret&#39;)::bytea) box \\gset-- Bob decrypts the box using his secret key and Alice&#39;s public key.SELECT crypto_box_open(:&#39;box&#39;, :&#39;boxnonce&#39;, :&#39;alice_public&#39;, current_setting(&#39;app.bob_secret&#39;)::bytea);COMMIT;\n For additional paranoia you can use a function to check that theconnection being used is secure or a unix domain socket.\n CREATE FUNCTION is_ssl_or_domain_socket() RETURNS boolLANGUAGE plpgsql AS $$DECLARE addr text; ssl text;BEGIN SELECT inet_client_addr() INTO addr; SELECT current_setting(&#39;ssl&#39;, true) INTO ssl; IF NOT FOUND OR ((ssl IS NULL OR ssl != &#39;on&#39;) AND (addr IS NOT NULL OR length(addr) != 0)) THEN RETURN false; END IF; RETURN true;END;$$;\n This doesn&#39;t guarantee the secret won&#39;t leak out in some way ofcourse, but it can useful if you never store secrets and send themonly through secure channels back to the client, for example using the psql client  \\gset command shown above, or by only storing aderived key id and context.\n  The reference below is adapted from and uses some of the same languagefound at the  libsodium C APIDocumentation. Refer to those documentsfor details on algorithms and other libsodium specific details.\n     The library provides a set of functions to generate unpredictabledata, suitable for creating secret keys.\n    The  randombytes_uniform() function returns an unpredictable valuebetween  0 and  upper_bound (excluded). Unlike  randombytes_random() % upper_bound, it guarantees a uniform distribution of the possibleoutput values even when  upper_bound is not a power of 2. Note that an upper_bound &lt; 2 leaves only a single element to be chosen, namely 0.\n    The  randombytes_buf_deterministic() returns a  size byteacontaining bytes indistinguishable from random bytes without knowingthe seed. For a given seed, this function will always output the samesequence. size can be up to 2^38 (256 GB).\n      crypto_secretbox_keygen() -&gt; bytea crypto_secretbox_noncegen() -&gt; bytea crypto_secretbox(message bytea, nonce bytea, key bytea) -&gt; bytea crypto_secretbox_open(ciphertext bytea, nonce bytea, key bytea) -&gt; bytea\n  crypto_secretbox_noncegen() generates a random nonce which will beused when encrypting messages. For security, each nonce must be usedonly once, though it is not a secret. The purpose of the nonce is toadd randomness to the message so that the same message encryptedmultiple times with the same key will produce different ciphertexts.\n crypto_secretbox() encrypts a message using a previously generatednonce and secret key. The encrypted message can be decrypted using crypto_secretbox_open() Note that in order to decrypt the message,the original nonce will be needed.\n     crypto_auth_keygen() -&gt; bytea crypto_auth(message bytea, key bytea) -&gt; bytea crypto_auth_verify(mac bytea, message bytea, key bytea) -&gt; boolean\n  crypto_auth() generates an authentication tag (mac) for acombination of message and secret key. This does not encrypt themessage; it simply provides a means to prove that the message has notbeen tampered with. To verify a message tagged in this way, use crypto_auth_verify(). This function is deterministic: for a givenmessage and key, the generated mac will always be the same.\n Note that this requires access to the secretkey, which is not something that should normally be shared. Ifmany users need to verify message it is usually better to use Public Key Signatures ratherthan sharing secret keys.\n crypto_auth_verify() verifies that the given mac (authenticationtag) matches the supplied message and key. This tells us that theoriginal message has not been tampered with.\n      crypto_box_new_keypair() -&gt; crypto_box_keypair crypto_box_noncegen() -&gt; bytea crypto_box(message bytea, nonce bytea, public bytea, secret bytea) -&gt; bytea crypto_box_open(ciphertext bytea, nonce bytea, public bytea, secret bytea) -&gt; bytea\n crypto_box_new_keypair() returns a new, randomly generated, pair ofkeys for public key encryption. The public key can be shared withanyone. The secret key must never be shared.\n crypto_box_noncegen() generates a random nonce which will be usedwhen encrypting messages. For security, each nonce must be used onlyonce, though it is not a secret. The purpose of the nonce is to addrandomness to the message so that the same message encrypted multipletimes with the same key will produce different ciphertexts.\n crypto_box() encrypts a message using a nonce, the intendedrecipient&#39;s public key and the sender&#39;s secret key. The resultingciphertext can only be decrypted by the intended recipient using theirsecret key. The nonce must be sent along with the ciphertext.\n crypto_box_open() descrypts a ciphertext encrypted using crypto_box(). It takes the ciphertext, nonce, the sender&#39;s publickey and the recipeient&#39;s secret key as parameters, and returns theoriginal message. Note that the recipient should ensure that thepublic key belongs to the sender.\n    crypto_sign_new_keypair() -&gt; crypto_sign_keypair combined mode functions: crypto_sign(message bytea, key bytea) -&gt; bytea crypto_sign_open(signed_message bytea, key bytea) -&gt; bytea detached mode functions: crypto_sign_detached(message bytea, key bytea) -&gt; bytea crypto_sign_verify_detached(sig bytea, message bytea, key bytea) -&gt; boolean multi-part message functions: crypto_sign_init() -&gt; bytea crypto_sign_update(state bytea, message bytea) -&gt; bytea crypto_sign_final_create(state bytea, key bytea) -&gt; bytea crypto_sign_final_verify(state bytea, signature bytea, key bytea) -&gt; boolean\n   These functions are used to authenticate that messages have have comefrom a specific originator (the holder of the secret key for which youhave the public key), and have not been tampered with.\n crypto_sign_new_keypair() returns a new, randomly generated, pair ofkeys for public key signatures. The public key can be shared withanyone. The secret key must never be shared.\n crypto_sign() and  crypto_sign_verify() operate in combined mode.In this mode the message that is being signed is combined with itssignature as a single unit.\n crypto_sign() creates a signature, using the signer&#39;s secret key,which it prepends to the message. The result can be authenticatedusing  crypto_sign_open().\n crypto_sign_open() takes a signed message created by crypto_sign(), checks its validity using the sender&#39;s public key andreturns the original message if it is valid, otherwise raises a dataexception.\n crypto_sign_detached() and  crypto_sign_verify_detached() operatein detached mode. In this mode the message is kept independent fromits signature. This can be useful when wishing to sign objects thathave already been stored, or where multiple signatures are desired foran object.\n crypto_sign_detached() generates a signature for message using thesigner&#39;s secret key. The result is a signature which existsindependently of the message, which can be verified using crypto_sign_verify_detached().\n crypto_sign_verify_detached() is used to verify a signaturegenerated by  crypto_sign_detached(). It takes the generatedsignature, the original message, and the signer&#39;s public key andreturns true if the signature matches the message and key, and falseotherwise.\n crypto_sign_init(),  crypto_sign_update(), crypto_sign_final_create(),  crypto_sign_final_verify(), and theaggregates  crypto_sign_update_agg() handle signatures formulti-part messages. To create or verify a signature for a multi-partmessage  crypto_sign_init() is used to start the process, and then eachmessage\n......", "posttime": "2020-06-13 08:50:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u5bc6\u7801,modern,\u5bc6\u94a5", "title": "PgNa\uff1a\u4f7f\u7528LibNa\u5b9e\u73b0PostgreSQL\u7684\u73b0\u4ee3\u5bc6\u7801\u5b66", "title_en": "Pgsodium: Modern cryptography for PostgreSQL using libsodium", "transed": 1, "url": "https://github.com/michelp/pgsodium", "via": "", "real_tags": ["\u5bc6\u7801", "modern", "\u5bc6\u94a5"]}, {"category": "", "categoryclass": "", "imagename": "d4923d230d10a14be6c66b3c3d6d7000.png", "infoid": 1006355, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u987e\u5ba2\u7684\u75f4\u8ff7\u662f\u6211\u4eec\u6587\u5316\u7684\u57fa\u7840\u3002\u53ea\u6709\u5f53\u6211\u4eec\u7684\u6240\u6709\u5ba2\u6237\u90fd\u4e00\u81f4\u548c\u53ef\u6301\u7eed\u5730\u53d6\u80dc\u65f6\uff0c\u6211\u4eec\u624d\u662f\u6210\u529f\u7684\u3002\n\u6211\u4eec\u52a0\u5f3a\u4e86\u6211\u4eec\u81ea\u5df1\u3001\u6211\u4eec\u7684\u56e2\u961f\u548c\u5916\u90e8\u4e16\u754c\u4e4b\u95f4\u7684\u53cd\u9988\u5faa\u73af\u3002\u6211\u4eec\u5bfb\u6c42\u4e86\u89e3\u771f\u76f8\uff0c\u5e76\u8bda\u5b9e\u5730\u8fdb\u884c\u4ea4\u6d41\u3002\n\u4ece\u4e00\u7aef\u5230\u53e6\u4e00\u7aef\u7684\u601d\u8003\u653e\u5927\u4e86\u6211\u4eec\u7684\u5f71\u54cd\u529b\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u5927\u5c40\u548c\u66f4\u5e7f\u6cdb\u7684\u76ee\u6807\uff0c\u540c\u65f6\u53c8\u4e0d\u5931\u8fdc\u89c1\u3002\n\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u79ef\u6781\u5b66\u4e60\u3001\u8bb0\u5f55\u548c\u5206\u4eab\u77e5\u8bc6\u3002\u6211\u4eec\u662f\u65e5\u5e38\u5de5\u4f5c\u4ee5\u53ca\u5982\u4f55\u8fde\u63a5Flexport\u66f4\u5927\u7cfb\u7edf\u7684\u4e13\u5bb6\u3002\n\u6211\u4eec\u89c2\u5bdf\u4e16\u754c\uff0c\u5728\u9002\u5f53\u7684\u80cc\u666f\u4e0b\u5f15\u5bfc\u4fe1\u606f\uff0c\u505a\u51fa\u6b63\u786e\u7684\u51b3\u5b9a\uff0c\u5e76\u5bf9\u81ea\u5df1\u7684\u679c\u65ad\u884c\u52a8\u8d1f\u8d23\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5982\u4f55\u4ee5\u6bd4\u6211\u4eec\u7684\u7ade\u4e89\u5bf9\u624b\u66f4\u5feb\u7684\u901f\u5ea6--\u671d\u7740\u6b63\u786e\u7684\u65b9\u5411--\u524d\u8fdb\u3002\n\u6ca1\u6709\u6377\u5f84\u53ef\u8d70\u3002\u6211\u4eec\u5bfb\u6c42\u901a\u8fc7\u505a\u6700\u8270\u96be\u7684\u4e8b\u60c5\u6765\u521b\u9020\u6700\u5927\u7684\u4ef7\u503c\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6700\u597d\u5730\u670d\u52a1\u4e8e\u6bcf\u4e2a\u5229\u76ca\u76f8\u5173\u8005\u3002", "note_en": "Customer obsession is the foundation of our culture. We are successful only when all of our customers are winning, consistently and sustainably.\n We strengthen feedback loops between ourselves, our teams, and the world beyond. We seek to understand the truth and communicate it honestly.\n Thinking from end to end amplifies our impact. We specialize without losing perspective on the big picture and broader goals.\n We dive deep to understand every detail, actively learning, documenting, and sharing knowledge. We are experts in our daily work and how it connects to Flexport\u2019s larger systems.\n We observe the world, orient that information in proper context, make good decisions, and hold ourselves accountable for decisive action. This is how we move with more velocity\u2014speed in the right direction\u2014than our competitors.\n There are no shortcuts. We seek to create the most value by doing the hardest things that best serve every stakeholder over the long term.", "posttime": "2020-06-13 08:32:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u56fd,hiring,\u53d6\u80dc", "title": "Flexport\u6b63\u5728\u62db\u8058\u5e0c\u671b\u5e2e\u52a9\u516c\u53f8\u5728\u4f26\u6566\u987a\u5229\u5ea6\u8fc7\u82f1\u56fd\u9000\u6b27\u7684\u4eba", "title_en": "Flexport is hiring people who want to help companies navigate Brexit in London", "transed": 1, "url": "https://www.flexport.com/careers", "via": "", "real_tags": ["\u82f1\u56fd", "hiring", "\u53d6\u80dc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006354, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u7684\u793e\u533a\u5728\u65b0\u51a0\u80ba\u708e\u671f\u95f4\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u6211\u4eec\u5c06\u57282020\u5e746\u670830\u65e5\u4e4b\u524d\u514d\u8d39\u63d0\u4f9bACM\u5728\u6211\u4eec\u6570\u5b57\u56fe\u4e66\u9986\u4e2d\u53d1\u5e03\u7684\u6240\u6709\u4f5c\u54c1\u3002\u4e86\u89e3\u66f4\u591a\u3002\n\u6211\u4eec\u4f7f\u7528\u997c\u5e72\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7ed9\u4f60\u6700\u597d\u7684\u7ecf\u9a8c\uff0c\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u3002\n\u60a8\u7684\u6d4f\u89c8\u5668\u4f3c\u4e4e\u4e0d\u652f\u6301\u5b83\u4eec\uff0c\u8fd9\u4f1a\u5f71\u54cd\u7f51\u7ad9\u529f\u80fd\u3002", "note_en": "To help support our community working remotely during COVID-19, we are making all work published by ACM in our Digital Library freely accessible through June 30, 2020.  Learn more\n   We use cookies to ensure that we give you the best experience on our website.\n  It seems your browser doesn&#39;t support them and this affects the site functionality.", "posttime": "2020-06-13 08:32:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5386\u53f2,history,\u7f51\u7ad9", "title": "F#\u7684\u65e9\u671f\u5386\u53f2[pdf]", "title_en": "The Early History of F# [pdf]", "transed": 1, "url": "https://dl.acm.org/doi/pdf/10.1145/3386325", "via": "", "real_tags": ["\u5386\u53f2", "history", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "972e2b55fb034abdf257282e82a6eec8.jpg", "infoid": 1006353, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u514b\u91cc\u65af\uff0c\u6211\u540c\u610f\uff0c\u6211\u4ecd\u7136\u5f88\u60ca\u8bb6\u52a9\u7194\u5242\u6ca1\u6709\u88ab\u51b2\u8d70\u3002\u7535\u8def\u677f\u88ab\u62cd\u6444\u4e0b\u6765\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5b89\u88c5\u5e76\u8fd0\u884c\u4e8640\u5e74\u3002\u8fd9\u7bc7\u5e16\u5b50\u66f4\u591a\u7684\u662f\u6b23\u8d4f\u4eba\u4eec\u5728\u90a3\u4e2a\u65f6\u4ee3\u662f\u5982\u4f55\u8bbe\u8ba1\u7535\u8def\u548c\u5370\u5236\u677f\u7684\u3002\u5370\u5237\u7535\u8def\u677f\u7684\u827a\u672f\u54c1\u7b80\u76f4\u662f\u5b8c\u7f8e\u65e0\u7455\uff0c\u5236\u4f5c\u8fd9\u4e9b\u4e1c\u897f\u6240\u4ed8\u51fa\u7684\u52aa\u529b\u4e4b\u5927\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002", "note_en": "Chris, I agree, I was still very surprised the flux was not washed off. The board is photographed, as it was installed and running for 4 decades. The post is more about appreciation how people designed circuits and printed boards during that era. The PCB artwork is simply perfect, the amount of effort which went into making these things is mind boggling.", "posttime": "2020-06-13 08:31:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5236\u9020,high,\u7535\u8def\u677f", "title": "\u6b27\u6d32\u6838\u5b50\u7814\u7a76\u4e2d\u5fc3\u5982\u4f55\u572820\u4e16\u7eaa70\u5e74\u4ee3\u5236\u9020\u9ad8\u8d28\u91cf\u7684\u7535\u5b50\u4ea7\u54c1", "title_en": "How CERN Made High Quality Electronics in the 1970s", "transed": 1, "url": "https://hackaday.com/2020/06/12/how-cern-made-high-quality-electronics-in-the-1970s/", "via": "", "real_tags": ["\u5236\u9020", "high", "\u7535\u8def\u677f"]}, {"category": "", "categoryclass": "", "imagename": "e6d32a0fbf5f47feda8d01e6f5cd8cb6.jpg", "infoid": 1006352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5e74\u6765\uff0c\u5c16\u7aef\u7a83\u542c\u6280\u672f\u7684\u6e05\u5355\u7a33\u6b65\u589e\u957f\uff1a\u7a83\u542c\u3001\u7a83\u542c\u7535\u8bdd\u3001\u5899\u4e0a\u7684\u7a83\u542c\u5668-\u751a\u81f3\u4ece\u5efa\u7b51\u7269\u7684\u73bb\u7483\u4e0a\u5f39\u5c04\u6fc0\u5149\u6765\u7a83\u542c\u91cc\u9762\u7684\u5bf9\u8bdd\u3002\u73b0\u5728\u6dfb\u52a0\u53e6\u4e00\u4e2a\u7528\u4e8e\u97f3\u9891\u95f4\u8c0d\u7684\u5de5\u5177\uff1a\u623f\u95f4\u91cc\u4ece\u7a97\u6237\u53ef\u4ee5\u770b\u5230\u7684\u4efb\u4f55\u706f\u6ce1\u3002\n\u4ee5\u8272\u5217\u5185\u76d6\u592b\u672c\u53e4\u91cc\u5b89\u5927\u5b66\u548c\u9b4f\u8328\u66fc\u79d1\u5b66\u7814\u7a76\u6240\u7684\u7814\u7a76\u4eba\u5458\u4eca\u5929\u516c\u5e03\u4e86\u4e00\u9879\u65b0\u7684\u8fdc\u7a0b\u7a83\u542c\u6280\u672f\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u5587\u53ed\u3002\u4ed6\u4eec\u8bf4\uff0c\u53ea\u8981\u6709\u4e00\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u548c\u4e0d\u52301000\u7f8e\u5143\u7684\u8bbe\u5907--\u53ea\u9700\u4e00\u53f0\u671b\u8fdc\u955c\u548c\u4e00\u4e2a400\u7f8e\u5143\u7684\u5149\u7535\u4f20\u611f\u5668--\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u8fd9\u4e9b\u5fae\u5c0f\u7684\u632f\u52a8\uff0c\u5b9e\u65f6\u76d1\u542c\u6570\u767e\u82f1\u5c3a\u5916\u7684\u623f\u95f4\u91cc\u7684\u4efb\u4f55\u58f0\u97f3\u3002\u901a\u8fc7\u6d4b\u91cf\u8fd9\u4e9b\u632f\u52a8\u5f15\u8d77\u7684\u706f\u6ce1\u5149\u8f93\u51fa\u7684\u5fae\u5c0f\u53d8\u5316\uff0c\u7814\u7a76\u4eba\u5458\u8868\u660e\uff0c\u95f4\u8c0d\u53ef\u4ee5\u83b7\u5f97\u8db3\u591f\u6e05\u6670\u7684\u58f0\u97f3\uff0c\u8db3\u4ee5\u8fa8\u522b\u5bf9\u8bdd\u7684\u5185\u5bb9\uff0c\u751a\u81f3\u53ef\u4ee5\u8bc6\u522b\u4e00\u6bb5\u97f3\u4e50\u3002\n\u672c\u00b7\u7eb3\u897f(Ben Nassi)\u8bf4\uff0c\u623f\u95f4\u91cc\u7684\u4efb\u4f55\u58f0\u97f3\u90fd\u53ef\u4ee5\u4ece\u623f\u95f4\u91cc\u6062\u590d\u51fa\u6765\uff0c\u4e0d\u9700\u8981\u4fb5\u5165\u623f\u95f4\u91cc\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4e5f\u4e0d\u9700\u8981\u4fb5\u5165\u623f\u95f4\u91cc\u7684\u4efb\u4f55\u8bbe\u5907\u3002\u672c\u00b7\u7eb3\u897f\u662f\u672c-\u53e4\u91cc\u5b89\u516c\u53f8\u7684\u5b89\u5168\u7814\u7a76\u5458\uff0c\u4ed6\u4e0e\u540c\u4e8b\u96c5\u4f26\u00b7\u76ae\u9c81\u5ef7(Yaron Pirutin)\u548c\u9c8d\u91cc\u65af\u00b7\u624e\u591a\u592b(Boris Zadov)\u5171\u540c\u5f00\u53d1\u4e86\u8fd9\u9879\u6280\u672f\uff0c\u5e76\u8ba1\u5212\u57288\u6708\u4efd\u7684\u9ed1\u5e3d\u5b89\u5168\u4f1a\u8bae\u4e0a\u516c\u5e03\u4ed6\u4eec\u7684\u53d1\u73b0\u3002\u4f60\u53ea\u9700\u8981\u628a\u4e00\u4e2a\u60ac\u6302\u7684\u706f\u6ce1\u5bf9\u51c6\u89c6\u7ebf\uff0c\u5c31\u662f\u8fd9\u4e2a\u3002\n\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u5728\u8ddd\u79bb\u76ee\u6807\u529e\u516c\u5ba4\u706f\u6ce1\u7ea680\u82f1\u5c3a\u7684\u5730\u65b9\u653e\u7f6e\u4e86\u4e00\u7cfb\u5217\u671b\u8fdc\u955c\uff0c\u5e76\u5c06\u6bcf\u4e2a\u671b\u8fdc\u955c\u7684\u76ee\u955c\u653e\u5728Thorlabs PDA100A2\u5149\u7535\u4f20\u611f\u5668\u7684\u524d\u9762\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f7f\u7528\u6a21\u6570\u8f6c\u6362\u5668\u5c06\u6765\u81ea\u8be5\u4f20\u611f\u5668\u7684\u7535\u4fe1\u53f7\u8f6c\u6362\u4e3a\u6570\u5b57\u4fe1\u606f\u3002\u5f53\u4ed6\u4eec\u5728\u9065\u8fdc\u7684\u623f\u95f4\u91cc\u64ad\u653e\u97f3\u4e50\u548c\u8bed\u97f3\u5f55\u97f3\u65f6\uff0c\u4ed6\u4eec\u5c06\u4ed6\u4eec\u7684\u8bbe\u7f6e\u6536\u96c6\u7684\u4fe1\u606f\u8f93\u5165\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u5206\u6790\u8bfb\u6570\u3002\n\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u706f\u6ce1\u5bf9\u58f0\u97f3\u7684\u5fae\u5c0f\u632f\u52a8-\u4ed6\u4eec\u6d4b\u91cf\u5230\u7684\u79fb\u52a8\u5e45\u5ea6\u53ea\u6709\u51e0\u767e\u5fae\u7c73-\u767b\u8bb0\u4e3a\u4ed6\u4eec\u7684\u4f20\u611f\u5668\u901a\u8fc7\u6bcf\u4e2a\u671b\u8fdc\u955c\u63a5\u6536\u5230\u7684\u5149\u7684\u53ef\u6d4b\u91cf\u53d8\u5316\u3002\u5728\u901a\u8fc7\u8f6f\u4ef6\u5904\u7406\u4fe1\u53f7\u4ee5\u6ee4\u9664\u566a\u97f3\u540e\uff0c\u4ed6\u4eec\u80fd\u591f\u4ee5\u60ca\u4eba\u7684\u4fdd\u771f\u5ea6\u91cd\u5efa\u623f\u95f4\u5185\u7684\u58f0\u97f3\u5f55\u97f3\uff1a\u4f8b\u5982\uff0c\u4ed6\u4eec\u5c55\u793a\u4e86\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8db3\u591f\u597d\u5730\u518d\u73b0\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u7684\u4e00\u6bb5\u6f14\u8bb2\u7684\u53ef\u542c\u7247\u6bb5\uff0c\u8db3\u4ee5\u88ab\u8c37\u6b4c\u7684\u4e91\u8bed\u97f3API(Cloud Speech API)\u8f6c\u5f55\u3002\u4ed6\u4eec\u8fd8\u5236\u4f5c\u4e86\u4e00\u5f20\u7532\u58f3\u866b\u4e50\u961f\u7684\u5f55\u97f3\uff0c\u8ba9\u5b83\u8db3\u591f\u6e05\u6670\uff0c\u4ee5\u81f3\u4e8e\u540d\u5b57\u8c03\u5b50\u5e94\u7528Shazam\u53ef\u4ee5\u7acb\u5373\u8bc6\u522b\u51fa\u6765\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u9879\u6280\u672f\u8fd8\u662f\u6709\u4e00\u4e9b\u5c40\u9650\u6027\u3002\u5728\u4ed6\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u4e86\u4e00\u4e2a\u60ac\u6302\u7684\u706f\u6ce1\uff0c\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u5b89\u88c5\u5728\u56fa\u5b9a\u706f\u6216\u5929\u82b1\u677f\u706f\u5177\u4e0a\u7684\u706f\u6ce1\u662f\u5426\u4f1a\u632f\u52a8\u5230\u8db3\u4ee5\u4ea7\u751f\u76f8\u540c\u7c7b\u578b\u7684\u97f3\u9891\u4fe1\u53f7\u3002\u4ed6\u4eec\u5728\u6f14\u793a\u4e2d\u4f7f\u7528\u7684\u8bed\u97f3\u548c\u97f3\u4e50\u5f55\u97f3\u4e5f\u6bd4\u666e\u901a\u4eba\u7c7b\u5bf9\u8bdd\u7684\u58f0\u97f3\u66f4\u5927\uff0c\u6f14\u8bb2\u8005\u5c06\u97f3\u91cf\u8c03\u5230\u4e86\u6700\u5927\u3002\u4f46\u7814\u7a76\u5c0f\u7ec4\u6307\u51fa\uff0c\u4ed6\u4eec\u4e5f\u4f7f\u7528\u4e86\u76f8\u5bf9\u4fbf\u5b9c\u7684\u5149\u7535\u4f20\u611f\u5668\u548c\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u672c\u6765\u53ef\u4ee5\u5347\u7ea7\u5230\u66f4\u6602\u8d35\u7684\uff0c\u4ee5\u83b7\u5f97\u66f4\u5b89\u9759\u7684\u5bf9\u8bdd\u3002LED\u706f\u6ce1\u7684\u4fe1\u566a\u6bd4\u5927\u7ea6\u662f\u767d\u70bd\u706f\u6ce1\u76846.3\u500d\uff0c\u662f\u8367\u5149\u706f\u768470\u500d\u3002\n\u5c3d\u7ba1\u6709\u8fd9\u4e9b\u8b66\u544a\uff0c\u65af\u5766\u798f\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u548c\u5bc6\u7801\u5b66\u5bb6\u4e39\u00b7\u535a\u5185\u8d6b(Dan Boneh)\u8ba4\u4e3a\uff0c\u7814\u7a76\u4eba\u5458\u7684\u6280\u672f\u4ecd\u7136\u4ee3\u8868\u7740\u4e00\u79cd\u91cd\u8981\u7684\u3001\u5177\u6709\u6f5c\u5728\u5b9e\u7528\u4ef7\u503c\u7684\u65b0\u5f62\u5f0f\uff0c\u4ed6\u79f0\u4e4b\u4e3a\u65c1\u8def\u653b\u51fb--\u4e00\u79cd\u5229\u7528\u65e0\u610f\u4e2d\u7684\u4fe1\u606f\u6cc4\u9732\u6765\u7a83\u53d6\u673a\u5bc6\u7684\u653b\u51fb\u3002Boneh\u8bf4\uff0c\u8fd9\u662f\u4fa7\u5411\u901a\u9053\u7684\u4e00\u79cd\u5f88\u597d\u7684\u5e94\u7528\u3002\u5373\u4f7f\u8fd9\u9700\u8981\u4e00\u4e2a\u60ac\u6302\u7684\u706f\u6ce1\u548c\u9ad8\u5206\u8d1d\uff0c\u5b83\u4ecd\u7136\u662f\u8d85\u7ea7\u6709\u8da3\u7684\u3002\u8fd9\u4ecd\u7136\u662f\u7b2c\u4e00\u6b21\u8bc1\u660e\u8fd9\u662f\u53ef\u80fd\u7684\u3002\u653b\u51fb\u53ea\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u672a\u6765\u7684\u7814\u7a76\u53ea\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6539\u8fdb\u8fd9\u4e00\u70b9\u3002\n\u5728\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7acb\u5927\u5b66\u7684\u5c24\u74e6\u5c14\u00b7\u57c3\u6d1b\u7ef4\u5947(Yuval Elovici)\u548c\u65e0\u5904\u4e0d\u5728\u7684RSA\u52a0\u5bc6\u7cfb\u7edf\u7684\u5171\u540c\u53d1\u660e\u4eba\u963f\u8fea\u00b7\u6c99\u7c73\u5c14(Adi Shamir)\u7684\u5efa\u8bae\u4e0b\uff0c\u8be5\u7814\u7a76\u5c0f\u7ec4\u5e76\u4e0d\u662f\u7b2c\u4e00\u4e2a\u8bc1\u660e\u610f\u5916\u7684\u58f0\u6ce2\u73b0\u8c61\u53ef\u4ee5\u5bfc\u81f4\u7a83\u542c\u7684\u4eba\u3002\u7814\u7a76\u4eba\u5458\u591a\u5e74\u6765\u4e00\u76f4\u77e5\u9053\uff0c\u6fc0\u5149\u4ece\u76ee\u6807\u7684\u7a97\u6237\u4e0a\u53cd\u5f39\u53ef\u4ee5\u8ba9\u95f4\u8c0d\u63a5\u6536\u5230\u91cc\u9762\u7684\u58f0\u97f3\u30022014\u5e74\uff0c\u53e6\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u8868\u660e\uff0c\u5373\u4f7f\u6076\u610f\u8f6f\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u667a\u80fd\u624b\u673a\u7684\u9ea6\u514b\u98ce\uff0c\u53d7\u653b\u51fb\u667a\u80fd\u624b\u673a\u7684\u9640\u87ba\u4eea\u4e5f\u53ef\u4ee5\u63a5\u6536\u5230\u58f0\u97f3\u3002\u4e4b\u524d\u6700\u63a5\u8fd1Lamphone\u7684\u6280\u672f\u662f\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u3001\u5fae\u8f6f\u548cAdobe\u7684\u7814\u7a76\u4eba\u5458\u57282014\u5e74\u6240\u8bf4\u7684\u89c6\u89c9\u9ea6\u514b\u98ce\uff1a\u901a\u8fc7\u5206\u6790\u901a\u8fc7\u671b\u8fdc\u955c\u62cd\u6444\u7684\u89c6\u9891\uff0c\u623f\u95f4\u91cc\u7684\u4e00\u4e2a\u7269\u4f53\u4f1a\u4ea7\u751f\u632f\u52a8\uff0c\u6bd4\u5982\u4e00\u888b\u85af\u7247\u6216\u4e00\u682a\u5ba4\u5185\u690d\u7269\uff0c\u8fd9\u4e9b\u7814\u7a76\u4eba\u5458\u80fd\u591f\u91cd\u5efa\u8bed\u97f3\u548c\u97f3\u4e50\u3002\u8fd9\u9879\u6280\u672f\u57282014\u5e74\u88ab\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u3001\u5fae\u8f6f(Microsoft)\u548cAdobe\u7684\u7814\u7a76\u4eba\u5458\u79f0\u4e3a\u89c6\u89c9\u9ea6\u514b\u98ce\uff1a\u901a\u8fc7\u5206\u6790\u901a\u8fc7\u671b\u8fdc\u955c\u62cd\u6444\u7684\u89c6\u9891\uff0c\u623f\u95f4\u91cc\u7684\u7269\u4f53\u4f1a\u4ea7\u751f\u632f\u52a8\uff0c\u6bd4\u5982\u4e00\u888b\u85af\u7247\u6216\u4e00\u682a\u5ba4\u5185\u690d\u7269\u3002\n\u4f46\u7eb3\u897f\u6307\u51fa\uff0c\u8fd9\u9879\u57fa\u4e8e\u89c6\u9891\u7684\u6280\u672f\u867d\u7136\u7528\u9014\u66f4\u5e7f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u5728\u623f\u95f4\u91cc\u770b\u5230\u706f\u6ce1\uff0c\u4f46\u5b83\u9700\u8981\u5728\u5f55\u5236\u89c6\u9891\u540e\u4f7f\u7528\u8f6f\u4ef6\u5bf9\u5176\u8fdb\u884c\u5206\u6790\uff0c\u4ee5\u4fbf\u5c06\u5728\u7269\u4f53\u4e0a\u89c2\u5bdf\u5230\u7684\u5fae\u5999\u632f\u52a8\u8f6c\u6362\u4e3a\u5b83\u6240\u62fe\u53d6\u7684\u58f0\u97f3\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cLamphone\u53ef\u4ee5\u5b9e\u73b0\u5b9e\u65f6\u95f4\u8c0d\u6d3b\u52a8\u3002\u7531\u4e8e\u632f\u52a8\u7269\u4f53\u672c\u8eab\u5c31\u662f\u5149\u6e90\uff0c\u5149\u7535\u4f20\u611f\u5668\u53ef\u4ee5\u7528\u7b80\u5355\u5f97\u591a\u7684\u89c6\u89c9\u6570\u636e\u6765\u6355\u6349\u632f\u52a8\u3002\n\u7eb3\u897f\u8ba4\u4e3a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u5587\u53ed\u5728\u95f4\u8c0d\u6d3b\u52a8\u4e2d\u7684\u4f7f\u7528\u6bd4\u4ee5\u524d\u7684\u6280\u672f\u66f4\u5b9e\u7528\u3002\u4ed6\u8bf4\uff0c\u5f53\u4f60\u771f\u6b63\u5b9e\u65f6\u4f7f\u7528\u5b83\u65f6\uff0c\u4f60\u53ef\u4ee5\u5b9e\u65f6\u56de\u5e94\uff0c\u800c\u4e0d\u662f\u5931\u53bb\u673a\u4f1a\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u7eb3\u897f\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u516c\u5e03\u4ed6\u4eec\u7684\u53d1\u73b0\u5e76\u4e0d\u662f\u4e3a\u4e86\u8ba9\u95f4\u8c0d\u6216\u6267\u6cd5\u90e8\u95e8\u53d7\u76ca\uff0c\u800c\u662f\u4e3a\u4e86\u8ba9\u76d1\u89c6\u53cc\u65b9\u90fd\u6e05\u695a\u5730\u77e5\u9053\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u3002\u4ed6\u8868\u793a\uff1a\u6211\u4eec\u5e0c\u671b\u63d0\u9ad8\u4eba\u4eec\u5bf9\u8fd9\u79cd\u653b\u51fb\u5a92\u4ecb\u7684\u8ba4\u8bc6\u3002\u6211\u4eec\u4e0d\u662f\u5728\u73a9\u63d0\u4f9b\u5de5\u5177\u7684\u6e38\u620f\u3002\n\u867d\u7136\u4e0d\u592a\u53ef\u80fd\u6210\u4e3a\u8fd9\u9879\u6280\u672f\u7684\u76ee\u6807\uff0c\u4f46\u5b83\u4e5f\u5f88\u5bb9\u6613\u9884\u9632\u3002\u53ea\u9700\u76d6\u4e0a\u4efb\u4f55\u60ac\u6302\u7684\u706f\u6ce1\uff0c\u6216\u8005\u66f4\u597d\u7684\u505a\u6cd5\u662f\uff0c\u62c9\u4e0a\u7a97\u5e18\u3002\u5982\u679c\u4f60\u7591\u795e\u7591\u9b3c\u5730\u62c5\u5fc3\u8fd9\u7c7b\u95f4\u8c0d\u6e38\u620f\uff0c\u5e0c\u671b\u4f60\u5df2\u7ecf\u5728\u90a3\u4e9b\u7a97\u6237\u4e0a\u5b89\u88c5\u4e86\u9632\u9707\u88c5\u7f6e\uff0c\u4ee5\u9632\u6b62\u7528\u6fc0\u5149\u9ea6\u514b\u98ce\u7a83\u542c\u3002\u5e76\u6e05\u626b\u4e86\u4f60\u7684\u623f\u5b50\u5bfb\u627e\u7a83\u542c\u5668\u3002\u5e76\u4ece\u4f60\u7684\u624b\u673a\u548c\u7535\u8111\u4e0a\u53d6\u4e0b\u4e86\u9ea6\u514b\u98ce\u3002\u6bd5\u7adf\uff0c\u5728\u4e00\u4e2a\u8fde\u706f\u6ce1\u90fd\u6709\u8033\u6735\u7684\u65f6\u4ee3\uff0c\u504f\u6267\u72c2\u7684\u5de5\u4f5c\u6c38\u8fdc\u4e0d\u4f1a\u5b8c\u6210\u3002\n\u4e0d\u80fd\u51fa\u53bb\u6297\u8bae\u5417\uff1f\u4ee5\u4e0b\u662f\u5982\u4f55\u5728\u5bb6\u4e2d\u63d0\u4f9b\u5e2e\u52a9\u7684\u65b9\u6cd5\u3002\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfa7\u4e8b\u60c5\u542c\u8d77\u6765\u4e0d\u592a\u5bf9\u52b2\uff1f\u67e5\u770b\u6211\u4eec\u6700\u559c\u6b22\u7684\u65e0\u7ebf\u8033\u673a\u3001\u97f3\u68d2\u548c\u84dd\u7259\u626c\u58f0\u5668", "note_en": "The list of sophisticated eavesdropping techniques has grown steadily over years: wiretaps, hacked phones, bugs in the wall\u2014even  bouncing lasers off of a building&#39;s glass to pick up conversations inside. Now add another tool for audio spies: Any light bulb in a room that might be visible from a window.\n Researchers from Israeli&#39;s Ben-Gurion University of the Negev and the Weizmann Institute of Science today revealed a new technique for long-distance eavesdropping they call &#34; lamphone.&#34; They say it allows anyone with a laptop and less than a thousand dollars of equipment\u2014just a telescope and a $400 electro-optical sensor\u2014to listen in on any sounds in a room that&#39;s hundreds of feet away in real-time, simply by observing the minuscule vibrations those sounds create on the glass surface of a light bulb inside. By measuring the tiny changes in light output from the bulb that those vibrations cause, the researchers show that a spy can pick up sound clearly enough to discern the contents of conversations or even recognize a piece of music.\n &#34;Any sound in the room can be recovered from the room with no requirement to hack anything and no device in the room,&#34; says Ben Nassi, a security researcher at Ben-Gurion who developed the technique with fellow researchers Yaron Pirutin and Boris Zadov, and who plans to present their findings at the Black Hat security conference in August. &#34;You just need line of sight to a hanging bulb, and this is it.&#34;\n  In their experiments, the researchers placed a series of telescopes around 80 feet away from a target office&#39;s light bulb, and put each telescope&#39;s eyepiece in front of a Thorlabs PDA100A2 electro-optical sensor. They then used an analog-to-digital converter to convert the electrical signals from that sensor to digital information. While they played music and speech recordings in the faraway room, they fed the information picked up by their set-up to a laptop, which analyzed the readings.\n   The researchers found that the tiny vibrations of the light bulb in response to sound\u2014movements that they measured at as little as a few hundred microns\u2014registered as a measurable changes in the light their sensor picked up through each telescope. After processing the signal through software to filter out noise, they were able to reconstruct recordings of the sounds inside the room with remarkable fidelity: They showed, for instance, that they could reproduce an audible snippet of a speech from President Donald Trump well enough for it to be transcribed by Google&#39;s Cloud Speech API. They also generated a recording of the Beatles&#39; &#34;Let It Be&#34; clear enough that the name-that-tune app Shazam could instantly recognize it.\n  The technique nonetheless has some limitations. In their tests, the researchers used a hanging bulb, and it&#39;s not clear if a bulb mounted in a fixed lamp or a ceiling fixture would vibrate enough to derive the same sort of audio signal. The voice and music recordings they used in their demonstrations were also louder than the average human conversation, with speakers turned to their maximum volume. But the team points out that they also used a relatively cheap electro-optical sensor and analog-to-digital converter, and could have upgraded to a more expensive one to pick up quieter conversations. LED bulbs also offer a signal-to-noise ratio that&#39;s about 6.3 times that of an incandescent bulb and 70 times a fluorescent one.\n  Regardless of those caveats, Stanford computer scientist and cryptographer Dan Boneh argues that the researchers&#39; technique still represents a significant and potentially practical new form of what he calls a &#34;side channel&#34; attack\u2014one that takes advantage of unintended leakage of information to steal secrets. &#34;It&#39;s a beautiful application of side channels,&#34; Boneh says. &#34;Even if this requires a hanging bulb and high decibels, it\u2019s still super interesting. And it\u2019s still just the first time this has been shown to be possible. Attacks only get better, and future research will only improve this over time.&#34;\n  The research team, which was advised by BGU&#39;s Yuval Elovici and Adi Shamir, the coinventor of the ubiquitous RSA encryption system, isn&#39;t the first to show that unexpected sonic phenomena can enable eavesdropping. Researchers have known for years that a laser bounced off a target&#39;s window can allow spies to pick up the sounds inside. Another group of researchers showed in 2014 that the  gyroscope of a compromised smartphone can pick up sounds even if the malware can&#39;t access its microphone. The closest previous technique to lamphone is what MIT, Microsoft, and Adobe researchers in 2014 called a  &#34;visual microphone&#34;: By analyzing video recorded via telescope of an object in a room that picks up vibrations\u2014a bag of potato chips or a houseplant, for instance\u2014those researchers were able to reconstruct speech and music.\n  But Nassi points out that the video-based technique, while far more versatile since it doesn&#39;t require a bulb to be visible in the room, requires analysis of the video with software after it&#39;s recorded to convert the subtle vibrations observed in an object into the sounds it picked up. Lamphone, by contrast, enables real-time spying. Since the vibrating object is itself a light source, the electro-optical sensor can pick up vibrations in far simpler visual data.\n That could make lamphone significantly more practical for use in espionage than previous techniques, Nassi argues. &#34;When you actually use it in real time you can respond in real time rather than losing the opportunity,&#34; he says.\n  Still, Nassi says the researchers are publishing their findings not to enable spies or law enforcement, but to make clear to those on both sides of surveillance what&#39;s possible. &#34;We want to raise the awareness of this kind of attack vector,&#34; he says. &#34;We\u2019re not in the game of providing tools.&#34;\n As unlikely as being targeted by this technique is, it&#39;s also easy to forestall. Just cover any hanging bulbs, or better yet, close the curtains. And if you&#39;re paranoid enough to be concerned about this sort of spy game, hopefully you&#39;ve already used  anti-vibration devices on those windows to prevent eavesdropping with a laser microphone. And  swept your house for bugs. And  removed the microphones from your phone and computer. After all, in an era when even the light bulbs have ears, a paranoiac&#39;s work is never done.\n   Can\u2019t go out and protest?  Here\u2019s how to help from home\n    \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfa7 Things not sounding right? Check out our favorite  wireless headphones,  soundbars, and  Bluetooth speakers", "posttime": "2020-06-13 08:15:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u901a\u8fc7\u89c2\u5bdf,eavesdrop,\u706f\u6ce1", "title": "\u95f4\u8c0d\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u706f\u6ce1\u7684\u632f\u52a8\u6765\u7a83\u542c", "title_en": "Spies Can Eavesdrop By Watching a Light Bulb's Vibrations", "transed": 1, "url": "https://www.wired.com/story/lamphone-light-bulb-vibration-spying/", "via": "", "real_tags": ["\u901a\u8fc7\u89c2\u5bdf", "eavesdrop", "\u706f\u6ce1"]}]