[{"category": "", "categoryclass": "", "imagename": "b2b7f9ff33d8c2fc6684eef849372587.jpeg", "infoid": 1005542, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5bf9printf\u7684\u5355\u4e2a\u8c03\u7528\u4e2d\u5b9e\u73b0tic-tac-toe\u3002\u4e3aIOCCC 2020\u64b0\u5199\u3002\n#include&lt\uff1bstdio.h&gt\uff1b#\u5b9a\u4e49N(A)&#34\uff1b%&#34\uff1b#a&#34\uff1b$hhn&#34\uff1b#\u5b9a\u4e49O(a\uff0cb)&#34\uff1b%10$&#34\uff1bd&#34\uff1bN(B)#\u5b9a\u4e49U&#34\uff1b%10$.*37$d&#34\uff1b#\u5b9a\u4e49G(A)&#34\uff1b%&#34\uff1b#a&#34\uff1b$s\u3002#\u5b9a\u4e49H(a\uff0cb)G(A)G(B)#\u5b9a\u4e49T(A)a#\u5b9a\u4e49s(A)T(A)T(A)#\u5b9a\u4e49A(A)s(A)T(A)a#\u5b9a\u4e49n(A)A(A)a#\u5b9a\u4e49D(A)n(A)A(A)#\u5b9a\u4e49C(A)D(A)a#\u5b9a\u4e49RC(C(N(12)G(12)#\u5b9a\u4e49o(a\uff0cb\uff0cc)C(H(\u3002a)D(G(A))C(H(b\uff0cb)G(B))n(G(B))O(32\uff0cc)R#\u5b9a\u4e49SS O(78\uff0c55)R&#34\uff1b\\n\\033[2J\\n%26$s&#34\uff1b\uff1b#\u5b9a\u4e49E(a\uff0cb\uff0cc\uff0cd)H(a\uff0cb)G(C)O(253\uff0c11)R G(11)O(255\uff0c11)R H(11\uff0cd)N(D)O(253\uff0c35)R#\u5b9a\u4e49S(a\uff0cb)O(254\uff0c11)H(a\uff0cb)N(68)R G(68)O(255\uff0c68)N(12)H(12)H(12\uff0c68)G(67)N(67)char*fmt=O(\u300239)N(40)N(41)N(42)N(43)N(66)N(69)N(24)O(22\uff0c65)O(5\uff0c70)O(8\uff0c44)N(45)N(46)N(47)N(48)N(49)N(50)N(51)N(52)N(53)O(28\uff0c54)O(5\uff0c55)O(2\uff0c56)O(3\uff0c57)O(4\uff0c58)O(13\uff0c73)O(4\uff0c71)N(72)O(20\uff0c59)N(60)N(61)N(62)N(63)N(64)R R E(1\uff0c2\uff0c3\uff0c13)E(4\uff0c5\uff0c6\uff0c13)E(7\uff0c8\uff0c9\uff0c13)E(1\uff0c4\uff0c7\uff0c13)E(2\uff0c5\uff0c8\uff0c13)E(3\uff0c6\uff0c9\uff0c13)E(1\uff0c5\uff0c9\uff0c13)E(3\uff0c5\uff0c7\uff0c13)E(14\uff0c15\uff0c16\uff0c23)E(17\uff0c18\uff0c19\uff0c23)E(20\uff0c21\uff0c22\uff0c23)E(14\uff0c17\uff0c20\uff0c23)E(15\uff0c18\uff0c21\uff0c23)E(16\uff0c19\uff0c22\uff0c23)E(14\uff0c18\uff0c22\uff0c23)E(16\uff0c18\uff0c20\uff0c23)R U O(255\uff0c38)R G(38)O(255\uff0c36)R H(13\uff0c23)O(255\uff0c11)R H(11\uff0c36)O(254\uff0c36)R G(36)O(255\uff0c36)R S(1\uff0c14)S(2\uff0c15)S(3\uff0c16)S(4\uff0c17)S(5\uff0c18)S(6\uff0c19)S(7\uff0c20)S(8\uff0c21)S(9\uff0c22)H(13\uff0c23)H(36\uff0c67)N(11)R G(11)&#34\uff1b&#34\uff1bO(255\uff0c25)R s(C(G(11)n(G(11))G(11)N(54)R C(&#34\uff1bAA&#34\uff1b)s(A(G(25)T(G(25))N(69)Ro(14\uff0c1\uff0c26)o(15\uff0c2\uff0c27)o(16\uff0c3\uff0c28)o(17\uff0c4\uff0c29)o(18\uff0c5\uff0c30)o(19\uff0c6\uff0c31)o(20\uff0c7\uff0c32)o(21\uff0c8\uff0c33)o(22\uff0c9\uff0c34)n(C(U))N(68)R H(36)\uff0c13)G(23)N(11)R C(D(G(11)D(G(11))G(68)N(68)R G(68)O(49\uff0c35)R H(13\uff0c23)G(67)N(11)R C(H(11\uff0c11)G(11))A(G(11))C(H(36\uff0c36)G(36))s(G(36))O(32\uff0c58)R C(D(G(36)A(G(36))SS#\u5b9a\u4e49\u53c2\u6570d+6\uff0cd+8\uff0cd+10\uff0cd+12\uff0cd+14\uff0cd+16\uff0cd+18\uff0cd+20\uff0cd+22\uff0c0\uff0cd+46\uff0cd+52\uff0cd+48\uff0cd+24\uff0cd 26\uff0cd+28\uff0cd+30\uff0cd+32\uff0cd+34\uff0cd+36\uff0cd+38\uff0cd+40\uff0cd+50\uff0c(scanf\u3002d+(6\\2)+18*(1-d[2]%2)+d[4]*2)\uff0cd\uff0cd+66\uff0cd+68\uff0cd+70\uff0cd+78\uff0cd+80\uff0cd+82\uff0cd+90\uff0cd+92\uff0cd+94\uff0cd+97\uff0cd+54\uff0cd[2]\uff0cd+2\uff0cd+71\uff0cd+77\uff0cd+83\uff0cd+89\uff0cd+95\uff0cd+72\uff0cd+73\uff0cd+74\\\uff0cd[2]\uff0cd+2\uff0cd+71\uff0cd+77\uff0cd+83\uff0cd+89\uff0cd+95\uff0cd+72\uff0cd+73\uff0cd+74\\\uff0cd[2]\u3002d+102\uff0cd+99\uff0cd+67\uff0cd+69\uff0cd+79\uff0cd+81\uff0cd+91\uff0cd+93\uff0cd+98\uff0cd+103\uff0cd+58\uff0cd+60\uff0cd+98\uff0cd+126\uff0cd+127\uff0c\\d+128\uff0cd+129\u5b57\u7b26d[538]={1\uff0c0\uff0c10\uff0c0\uff0c10}\uff1bint main(){while(*d)printf(fmt\uff0carg)\uff1b}\u3002\n\u5982\u679c\u8fd9\u662f\u60a8\u559c\u6b22\u7684\u7c7b\u578b\uff0c\u60a8\u53ef\u80fd\u4e5f\u4f1a\u559c\u6b22printbf\u3002\n\u8fd9\u91cc\uff0cfmt\u662f\u5355\u4e2a\u5b57\u7b26\u4e32\uff0carg\u662fprintf\u7684\u4e00\u7cfb\u5217\u53c2\u6570\u3002\n\u867d\u7136\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5145\u5f53\u4e00\u4e2a\u771f\u6b63\u7684\u8c03\u8bd5\u5668\uff0c\u4f46\u662fprintf\u4e5f\u6070\u597d\u662f\u56fe\u7075\u5b8c\u6210\u7684\u3002(\u53c2\u89c1\u201c\u63a7\u5236\u6d41\u5f2f\u66f2\uff1a\u8bba\u63a7\u5236\u6d41\u5b8c\u6574\u6027\u7684\u6709\u6548\u6027\u201d)\uff0c\u6211\u4eec\u5728\u4e00\u7bc7\u5b9e\u9645\u51fa\u7248\u7684\u5b66\u672f\u8bba\u6587\u4e2d\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u70b9\u3002\u6709\u65f6\u4f60\u53ef\u4ee5\u9003\u8131\u60e9\u7f5a\u7684\u4e8b\u60c5\u3002)\u3002\n\u6211\u4eec\u5229\u7528\u8fd9\u4e00\u4e8b\u5b9e\u5728\u8fd9\u4e2aprintf\u8c03\u7528(\u4ee5\u53ca\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684scanf()\u8c03\u7528)\u4e2d\u5b8c\u5168\u5b9e\u73b0tic-tac-toe\u903b\u8f91\u3002\n\u56e0\u4e3a\u5b83\u5c06\u6253\u5370\u51fa0000000005(\u5927\u5c0f\u4e3a10\u76845\u4e2a\u586b\u5145)\uff0c\u7136\u540e\u5199\u5165\u5199\u5165x\u7684\u5b57\u8282\u6570\u3002\n\u6211\u4eec\u4f7f\u7528printf\u6267\u884c\u4efb\u610f\u8ba1\u7b97\uff0c\u5c06\u5185\u5b58\u89c6\u4e3a\u4e8c\u8fdb\u5236\u6570\u7ec4-\u6bcf\u5bf9\u5b57\u8282\u4e00\u4f4d\uff1a\n\u4e00\u4f4d\u7531\u5e8f\u5217xx00\u8868\u793a\uff0c\u5176\u4e2dxx\u662f\u4efb\u4f55\u975e\u96f6\u5b57\u8282\u3002\n\u4f46\u662f\u5047\u8bbe1\u4f4d\u7684strlen(X)\u662f1\uff0c0\u4f4d\u7684strlen(X)\u662f0\uff0c\u6211\u4eec\u6709\u3002\n\u6e38\u620f\u672c\u8eab\u88ab\u8868\u793a\u4e3a\u4e00\u4e2a18\u4f4d\u7684\u68cb\u76d8\uff0c\u6bcf\u4e2a\u73a9\u5bb69\u4f4d\uff0c\u8fd8\u6709\u4e00\u4e2a\u5728\u73a9\u5bb61\u548c\u73a9\u5bb62\u4e4b\u95f4\u4ea4\u66ff\u7684\u56de\u5408\u8ba1\u6570\u5668\u3002\n\u4e3a\u4e86\u68c0\u6d4b\u8c01\u8d62\u4e86\uff0c\u6211\u4eec\u5b9e\u73b0\u4ee5\u4e0b\u903b\u8f91\u3002\u8ba9A\u3001B\u548cC\u6307\u9488\u6307\u5411\u8fde\u7eed\u4e09\u4e2a\u8981\u6d4b\u8bd5\u7684\u65b9\u5757\uff0cD\u662f\u5728\u662f\u5426\u6709AWIN\u7684\u60c5\u51b5\u4e0b\u8981\u4fdd\u5b58\u7684\u4f4d\u7f6e\u3002\n&#34\uff1b%A$s%B$s%C$s%1$253d%11$HHN&#34\uff1b//r11=\uff01(*A&amp\uff1b*B&amp\uff1b*C)\u96f6&#34\uff1b%11$s%1$255d%11hhn&#34\uff1b//r11=\uff01r11ZERO&#34\uff1b%11$s%D$s%D$HN&#34\uff1b//*D=*D|r11\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u884c\u4e2d\u6709\u4e09\u4e2a\uff0c\u6211\u4eec\u5c06*D\u8bbe\u7f6e\u4e3a1\u3002\u5bf9\u4e8e\u4e24\u4e2a\u73a9\u5bb6\uff0c\u6211\u4eec\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u4e09\u5408\u4e00\u914d\u7f6e\u91cd\u590d\u8fd9\u4e00\u70b9\u3002\nZERO\u5b8f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u786e\u4fdd\u5199\u51fa\u7684\u5b57\u8282\u6570\u4e3a0/256\u3002\n\u5176\u4e2d\uff0c\u53c2\u65701\u662f\u6307\u5411\u540e\u8ddf\u7a7a\u5b57\u8282\u7684\u4e34\u65f6\u53d8\u91cf\u7684\u6307\u9488\u3002\n\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u8ba1\u6570\u662f0 mod 256\uff0c\u5219&#34\uff1b%1$HHN&#34\uff1b\u5c06\u5411\u53c2\u65701\u5199\u5165\u96f6\uff0c\u7136\u540e&#34\uff1b%1$s&#34\uff1b\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u51fa\u4efb\u4f55\u6587\u672c\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u8ba1\u6570\u4e0d\u662f0\u6a21256\uff0c\u5219\u4f1a\u5c06\u4e00\u4e2a-1\u957f\u5ea6\u5b57\u7b26\u4e32\u5199\u5165\u53c2\u65701\uff0c\u7136\u540e&#34\uff1b%1$s&#34\uff1b\u4f1a\u5c06\u8ba1\u6570\u52a01\u3002\u901a\u8fc7\u91cd\u590d\u8fd9\u4e2a256\u6b21\uff0c\u6211\u4eec\u6700\u7ec8\u5c06\u8fbe\u52300-256\u3002\n\u4e3a\u4e86\u51b3\u5b9a\u6253\u5370\u4ec0\u4e48\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5185\u5b58\u4e2d\u7684\u4f4d\u6570\u7ec4\u8f6c\u6362\u4e3aX\u548cO\u6765\u6253\u5370\u3002\u8fd9\u5b9e\u9645\u4e0a\u76f8\u5f53\u7b80\u5355\u3002\u7ed9\u51fa1$\u6307\u5411\u535a\u5f08\u80051\u7684\u6b63\u65b9\u5f62\u7684\u6307\u9488\uff0c2$\u6307\u5411\u535a\u5f08\u80052\u7684\u6307\u9488\uff0c\u4ee5\u53ca3$\u6307\u5411\u68cb\u76d8\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u3002\n\u5982\u679c\u4e24\u8005\u90fd\u4e0d\u4e3a\u771f\uff0c\u5219\u8f93\u51fa&#39\uff1b&#39\uff1b\uff1b\u5982\u679cR1\u4e3a\uff0c\u5219\u8f93\u51fa&#39\uff1bX&#39\uff1b\uff1b\u5982\u679cR2\u4e3a\uff0c\u5219\u8f93\u51fa&#39\uff1bO&#39\uff1b\u3002\n\u4e3a\u4e86\u80fd\u591f\u6700\u7ec8\u663e\u793a\u9762\u677f\uff0c\u540c\u65f6\u4ecd\u7136\u53ea\u4f7f\u7528\u4e00\u6761printf\u8bed\u53e5\uff0c\u6211\u4eec\u7528\u4ee5\u4e0b\u8bed\u53e5\u7ed3\u675f\u8be5\u8bed\u53e5\u3002\n\u5b83\u662f\u6e05\u9664\u5c4f\u5e55\u7684\u8f6c\u4e49\u5e8f\u5217\uff0c\u7136\u540e\u6253\u5370\u53c2\u657026\u3002\u53c2\u657026\u662f\u6307\u5411\u5185\u5b58\u4e2d\u7684char*\u7684\u6307\u9488\uff0c\u6700\u521d\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u4f46\u5728printf\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u9020\u8be5\u5b57\u7b26\u4e32\uff0c\u4f7f\u5176\u770b\u8d77\u6765\u50cfatic-tac-toe\u677f\u3002\n\u53d6\u51b3\u4e8e\u662f\u5426\u8f6e\u5230P1\u6216P2\u79fb\u52a8\uff0c\u6e38\u620f\u7ed3\u675f\u5e76\u7b49\u5f85\u67d0\u4e2a\u65b0\u7684\u5f00\u59cb\uff0c\u6216\u8005\u6e38\u620f\u7ed3\u675f\u5e76\u6253\u6210\u5e73\u5c40\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5e76\u4e0d\u50cf\u770b\u8d77\u6765\u90a3\u4e48\u96be\u3002\u4f7f\u7528\u4e0e\u524d\u9762\u76f8\u540c\u7684\u6280\u5de7\uff0c\u6211\u4eec\u5c06BYTE FOR\u8bbe\u7f6e\u4e3a\u3002\n\u5b57\u8282&#39\uff1bI&39\uff1b\u548c&#39\uff1bS&39\uff1b\u53ef\u4ee5\u59cb\u7ec8\u76f8\u540c\uff0c\u6211\u4eec\u5bf9&#39\uff1bE&39\uff1b/&#39\uff1bN&39\uff1b\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\n\u6211\u4eec\u5bf9scanf()\u683c\u5f0f\u5b57\u7b26\u4e32\u8fdb\u884c\u540c\u6837\u7684\u52a8\u6001\u521b\u5efa\uff0c\u4f46\u539f\u56e0\u4e0d\u540c\u3002\u6211\u4eec\u9996\u5148\u8981\u8fd0\u884cprintf()\u6765\u663e\u793a\u7b2c\u4e00\u5757\u68cb\u76d8\uff0c\u7136\u540e\u8f6e\u6d41\u8fd0\u884cscanf()\u548cprintf()\u8bfb\u53d6\uff0c\u7136\u540e\u663e\u793a\u79fb\u52a8\u3002\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u60f3\u5728\u6e38\u620f\u7ed3\u675f\u65f6\u8fdb\u884c\u6700\u7ec8\u626b\u63cf\u3002\u5b83\u5e94\u8be5\u76f4\u63a5\u9000\u51fa\u3002\n\u4f46\u8fd9\u5c06\u4f7f\u6211\u4eec\u9700\u8981\u7684\u5bf9printf\u7684\u8c03\u7528\u6570\u91cf\u589e\u52a0\u4e00\u500d\u3002\u6240\u4ee5\u6211\u4eec\u6539\u4e3a\u8fd9\u6837\u5b9e\u73b0\u5b83\u3002\n(\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c06scanf()\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4ee5\u907f\u514d\u5916\u90e8\u9648\u8ff0\uff0c\u4f46\u5b83\u5177\u6709\u76f8\u540c\u7684\u6548\u679c\u3002)\u3002\n\u8bf7\u6ce8\u610f\uff0c\u73b0\u5728\u6ca1\u6709\u521d\u59cbprintf()\u3002\u4e3a\u4e86\u786e\u4fdd\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u7b2c\u4e00\u4e2aprintf()\u4e4b\u524d\u963b\u585e\uff0c\u4f46\u6211\u4eec\u5c06scanf()\u683c\u5f0f\u521d\u59cb\u5316\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u4ee5\u4fbf\u5b83\u7acb\u5373\u8fd4\u56de\u800c\u4e0d\u4f1a\u963b\u585e\u3002printf()\u8c03\u7528\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u5b83\u5199\u51fa&#34\uff1b%hhd&#34\uff1b\u4ee5\u521b\u5efa\u521b\u5efascanf()\u683c\u5f0f\u5b57\u7b26\u4e32\u3002\n\u8fd9\u4e2a\u9879\u76ee\u663e\u7136\u662f\u4e00\u4e9b\u5f00\u521b\u6027\u7684\u6210\u5c31\uff0c\u50cf\u8fd9\u6837\u7684\u6210\u5c31\u662f\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u90fd\u662f\u6309\u7167GPL v3\u6388\u6743\u7684\u3002\n\u6b64\u7a0b\u5e8f\u662f\u81ea\u7531\u8f6f\u4ef6\uff1a\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7b2c3\u7248\u53d1\u5e03\u7684GNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u6761\u6b3e\u5bf9\u5176\u8fdb\u884c\u91cd\u65b0\u5206\u53d1\u548c/\u6216\u4fee\u6539\u3002\n\u5206\u53d1\u672c\u7a0b\u5e8f\u7684\u76ee\u7684\u662f\u5e0c\u671b\u5b83\u6709\u7528\uff0c\u4f46\u4e0d\u63d0\u4f9b\u4efb\u4f55\u62c5\u4fdd\uff1b\u751a\u81f3\u4e0d\u63d0\u4f9b\u9002\u9500\u6027\u6216\u662f\u5426\u9002\u7528\u4e8e\u7279\u5b9a\u76ee\u7684\u7684\u9ed8\u793a\u62c5\u4fdd\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605GNUGeneral Public License\u3002\n\u60a8\u5e94\u8be5\u5df2\u7ecf\u6536\u5230\u4e86GNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u7684\u526f\u672c\u4ee5\u53ca\u6b64\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u53c2\u9605http://www.gnu.org/licenses/.", "note_en": "A c implementation of tic-tac-toe in a single call to printf. Written for IOCCC 2020.\n # include   &lt;stdio.h &gt; # define  N( a)   &#34;% &#34;#a  &#34;$hhn &#34;# define  O( a,b)   &#34;%10$ &#34;#a  &#34;d &#34;N(b)# define  U   &#34; %10$.*37$d &#34;# define  G( a)   &#34;% &#34;#a  &#34;$s &#34;# define  H( a,b) G(a)G(b)# define  T( a) a a # define  s( a) T(a)T(a)# define  A( a) s(a)T(a)a# define  n( a) A(a)a# define  D( a) n(a)A(a)# define  C( a) D(a)a# define  R  C(C(N( 12)G( 12)))# define  o( a,b,c) C(H(a,a))D(G(a))C(H(b,b)G(b))n(G(b))O( 32,c)R# define  SS  O( 78, 55)R &#34;\\n\\033[2J\\n%26$s&#34;;# define  E( a,b,c,d) H(a,b)G(c)O( 253, 11)R  G( 11)O( 255, 11)R H( 11,d)N(d)O( 253, 35)R# define  S( a,b) O( 254, 11)H(a,b)N( 68)R  G( 68)O( 255, 68)N( 12)H( 12, 68)G( 67)N( 67)char* fmt = O( 10, 39)N( 40)N( 41)N( 42)N( 43)N( 66)N( 69)N( 24)O( 22, 65)O( 5, 70)O( 8, 44)N(  45)N( 46)N ( 47)N( 48)N(  49)N(  50)N(  51)N( 52)N( 53 )O(  28,  54)O( 5,  55) O( 2,  56)O( 3, 57)O(  4, 58 )O( 13,  73)O( 4,  71 )N(  72)O ( 20, 59 )N( 60)N( 61)N(  62)N ( 63)N ( 64)R R E( 1, 2,  3, 13 )E( 4,  5, 6, 13)E( 7, 8, 9 , 13)E( 1, 4 , 7, 13)E ( 2, 5, 8,  13)E(  3, 6, 9, 13)E( 1, 5,  9, 13)E( 3 , 5, 7, 13 )E( 14, 15,  16, 23) E( 17, 18, 19, 23)E(  20,  21,  22, 23)E ( 14, 17, 20, 23)E( 15,  18, 21, 23)E( 16, 19,  22 , 23)E(  14,  18,  22, 23)E( 16, 18, 20,  23)R U O( 255 , 38)R G (  38)O(  255, 36) R H( 13, 23)O( 255,  11)R H( 11, 36) O( 254 , 36) R G(  36 ) O(  255, 36)R S( 1, 14 )S( 2, 15)S( 3,  16)S( 4,  17 )S ( 5,  18)S( 6,  19)S( 7, 20)S( 8,  21)S( 9 , 22)H( 13, 23 )H( 36,  67 )N( 11)R G( 11)&#34;&#34;O( 255,  25 )R s(C(G( 11) ))n (G(  11) )G(  11)N( 54)R C(   &#34;aa &#34;) s(A( G( 25)))T (G( 25))N ( 69)R o ( 14, 1, 26)o(  15,  2,  27)o ( 16, 3, 28 )o(  17, 4,  29)o( 18 , 5, 30)o( 19 , 6, 31)o(  20, 7, 32)o ( 21, 8, 33)o ( 22 , 9,  34)n(C(U) )N(  68)R H(  36, 13)G( 23) N( 11)R C(D( G( 11))) D(G( 11))G( 68)N( 68)R G( 68)O( 49, 35)R H( 13, 23)G( 67)N( 11)R C(H( 11, 11)G(  11))A(G( 11))C(H( 36, 36)G( 36))s(G( 36))O( 32, 58)R C(D(G( 36)))A(G( 36))SS# define  arg d+ 6,d+ 8,d+ 10,d+ 12,d+ 14,d+ 16,d+ 18,d+ 20,d+ 22, 0,d+ 46,d+ 52,d+ 48,d+ 24,d\\ + 26,d+ 28,d+ 30,d+ 32,d+ 34,d+ 36,d+ 38,d+ 40,d+ 50,(scanf(d+ 126,d+ 4),d+( 6\\ - 2)+ 18*( 1-d[ 2]% 2)+d[ 4]* 2),d,d+ 66,d+ 68,d+ 70, d+ 78,d+ 80,d+ 82,d+ 90,d+\\  92,d+ 94,d+ 97,d+ 54,d[ 2],d+ 2,d+ 71,d+ 77,d+ 83,d+ 89,d+ 95,d+ 72,d+ 73,d+ 74\\ ,d+ 75,d+ 76,d+ 84,d+ 85,d+ 86,d+ 87,d+ 88,d+ 100,d+ 101,d+ 96,d+ 102,d+ 99,d+\\  67,d+ 69,d+ 79,d+ 81,d+ 91,d+ 93,d+ 98,d+ 103,d+ 58,d+ 60,d+ 98,d+ 126,d+ 127,\\ d+ 128,d+ 129 char d[ 538] = { 1, 0, 10, 0, 10}; int  main() {  while(*d)  printf(fmt, arg);}\n If this is the kind of thing that you enjoy, you might also like  printbf.\n            Here,  fmt is a single string, and  arg is a series of arguments to printf.\n While its primary purpose is to serve as The One True Debugger, printf also happensto be Turing complete. (See &#34;Control-Flow Bending: On the Effectiveness of Control-FlowIntegrity&#34; where we introduced this in an actual, published, academic paper. Thethings you can get away with sometimes.)\n We ab^H^Huse this fact to implement a the logic of tic-tac-toe entirely withinthis one printf call (and a call to scanf() to read user input).\n            because it will print out  0000000005 (5 padded to size 10) and then write thenumber of bytes written to x.\n   We perform arbitrary computation with printf treating memory as a binaryarray---one bit per pair of bytes:\n The one-bit is represented by the sequence  xx 00 where  xx is any non-zero byte.\n      but given that strlen(x) is 1 for a 1-bit and 0 for a 0-bit, we have\n          The game itself is represented as a board of 18 bits, 9 bits per player, alongwith a turn counter that alternates between player 1 and player 2.\n To detect who has won, we implement the following logic. Let A, B, and C bepointers to three squares in a row to test, and D be where to save if there is awin or not.\n &#34;%A$s%B$s%C$s%1$253d%11$hhn&#34; // r11 = !(*A &amp; *B &amp; *C)ZERO&#34;%11$s%1$255d%11hhn&#34; // r11 = !r11ZERO&#34;%11$s%D$s%D$hhn&#34; // *D = *D | r11\n That is, we set  *D to  1 if there is a three-in-a-row. We repeat this for allpossible three-in-a-row configurations, for both players.\n The ZERO macro ensures that the number of bytes written out is 0 mod 256 withthe following expression\n  where argument 1 is a pointer to a temporary variable followed by a null byte.\n This works because if the current count is 0 mod 256, then &#34;%1$hhn&#34; will writezero to argument 1 and then &#34;%1$s&#34; will never emit any text. If, on the otherhand, the count is not 0 mod 256, a length-1 string will be written to argument1, and then &#34;%1$s&#34; will increment the count by one. By repeating this 256times we&#39;re eventually going to reach 0 mod 256.\n  In order to decide what to print out, we have to cast the &#34;in-memory&#34; array ofbits to Xs and Os to print out. This is actually rather straightforward. Givenin 1$ the pointer to player 1&#39;s square, and 2$ the pointer to player 2&#39;s, andin 3$ the pointer to the board string, we can compute\n    which will output &#39; &#39; if neither are true, &#39;X&#39; if r1 is, or &#39;O&#39; if r2 is.\n  In order to be able to finally display the board, while still only using oneprintf statement, we finish the statement with\n  which is the escape sequence to clear the screen, and then prints argument 26.Argument 26 is a pointer to a char* in memory, that initially is undefined,but within the printf statement we will construct this string to look like atic-tac-toe board.\n   Depending on if it&#39;s P1 or P2&#39;s turn to move, the game is over and someonewon, or the game is over and it is a draw.\n This turns out not to be as hard as it might look. Using the same trick asbefore, we set byte for to be\n  The byte  &#39;I&#39; and  &#39;S&#39; can always be the same, and we do the same for  &#39;E&#39;/ &#39;N&#39;.\n We do this same on-the-fly creation of the  scanf() format string, but for adifferent reason. We first want to run  printf() to show the first board, andthen alternate between runs to  scanf() and  printf() reading and then displayingmoves. importantly, we  do not want a final scanf when the game ends. It shouldjust exit.\n   but this would DOUBLE the number of calls to printf we require. So instead weimplement it like this\n  (In reality we actually pass  scanf() as an argument to avoid the extrastatement, but it has the same effect.)\n Notice there is now no initial  printf(). In order make sure the program doesn&#39;tblock before the first  printf(), but we initialize the  scanf() format to the nullstring so that it returns right away without blocking. The first time the  printf()call runs, it writes out  &#34;%hhd&#34; to create the create the  scanf() format string.\n  This program is clearly some groundbreaking achievement the likes of which havenever been seen before. Therefore, if you would like to use this program inanything, it&#39;s licensed under the GPL v3.\n This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3.\n This program is distributed in the hope that it will be useful, butWITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNUGeneral Public License for more details.\n You should have received a copy of the GNU General Public Licensealong with this program. If not, see  http://www.gnu.org/licenses/.", "posttime": "2020-06-07 16:26:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tic,printf", "title": "\u5728\u4e00\u6b21\u5bf9printf\u7684\u8c03\u7528\u4e2d\u5b9e\u73b0Tic-Tac-Toe", "title_en": "C implementation of Tic-Tac-Toe in a single call to printf", "transed": 1, "url": "https://github.com/carlini/printf-tac-toe", "via": "", "real_tags": ["tic", "printf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005541, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u63d0\u4f9b\u7684\u53cd\u9988\u5c06\u5e2e\u52a9\u6211\u4eec\u663e\u793a\u66f4\u591a\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u5728\u672a\u6765\u3002\n\u64a4\u9500\u3002\n\u4f60\u975e\u5e38\u4ed4\u7ec6\u5730\u628a\u7a0b\u5e8f\u5199\u5728\u7eb8\u4e0a\u3002\u4f60\u8d70\u8fdb\u4e00\u95f4\u6709\u51e0\u5341\u53f0\u6253\u5b54\u673a\u7684\u623f\u95f4\uff0c\u7b49\u5f85\u5176\u4e2d\u4e00\u53f0\u6253\u5361\u673a\u6253\u5f00\uff0c\u7136\u540e\u975e\u5e38\u4ed4\u7ec6\u5730\u5728\u5361\u7247\u4e0a\u6253\u51fa\u4f60\u7684\u7a0b\u5e8f\u3002\u4f60\u628a\u4f60\u7684\u7eb8\u724c\u62ff\u5230\u8bfb\u5361\u673a\u524d\uff0c\u8fd9\u662f\u4e00\u9879\u4ee4\u4eba\u60ca\u53f9\u7684\u673a\u68b0\u5de5\u7a0b\uff0c\u5b83\u628a\u7a7a\u6c14\u5439\u8fdb\u4f60\u7684\u4e00\u526f\u7eb8\u724c\uff0c\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u628a\u5b83\u4eec\u5e26\u8d70\uff0c\u628a\u8fd9\u526f\u7eb8\u724c\u5168\u90e8\u8bfb\u5b8c\u540e\u8fd8\u7ed9\u4f60\u3002\u8fd9\u4e9b\u5361\u73b0\u5728\u88ab\u5b58\u50a8\u5728\u4e3b\u673a\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u7a0b\u5e8f\u5728\u90a3\u91cc\u6392\u961f\u7b49\u5f85\u6267\u884c\u3002\n\u52a0\u8f7d\u2026", "note_en": "The feedback you provide will help us show you more relevant content in the future.\n Undo\n  You wrote the program on paper very carefully. You go to a room with dozens of punch card machines and wait for one to open, then you typed your program onto cards very carefully. You took your cards to a card reading machine, an amazing piece of mechanical engineering which blew air into your deck of cards and wisked them away one by one, returning the deck to you having read them all. The cards were now stored in a file in the main frame, where the program waited in a queue to be executed.\n     Loading\u2026", "posttime": "2020-06-07 16:25:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u4e92\u8054\u7f51,\u7a0b\u5e8f", "title": "\u5728\u4e92\u8054\u7f51\u51fa\u73b0\u4e4b\u524d\uff0c\u7f16\u7a0b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f", "title_en": "What was programming like before the internet?", "transed": 1, "url": "https://www.quora.com/What-was-programming-like-before-the-internet?ch=99&share=1b8a73bb&srid=uQDqk", "via": "", "real_tags": ["\u7f16\u7a0b", "\u4e92\u8054\u7f51", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "8205689895f9badde6b9a5d5490f065c.jpeg", "infoid": 1005540, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "5\u670826\u65e5\uff0c\u5728\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u5728\u4e00\u540d\u8b66\u5bdf\u819d\u76d6\u4e0b\u6700\u540e\u4e00\u6b21\u5598\u606f\u7684\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u5bdf\u5c40\u5199\u9053\uff0c\u4ed6\u201c\u8eab\u4f53\u62b5\u6297\u201d\u4e86\u8b66\u5bdf\uff0c\u8b66\u5bdf\u6307\u51fa\u5f17\u6d1b\u4f0a\u5fb7\u201c\u4f3c\u4e4e\u6b63\u5728\u906d\u53d7\u533b\u7597\u75db\u82e6\u201d\u3002\n\u8fd9\u5219\u65b0\u95fb\u7a3f\u5728\u89c6\u9891\u53d1\u5e03\u524d\u51e0\u4e2a\u5c0f\u65f6\u5728\u7f51\u4e0a\u53d1\u5e03\uff0c\u89c6\u9891\u63ed\u793a\u4e86\u516c\u4f17\u53ef\u80fd\u4ece\u672a\u4e86\u89e3\u5230\u7684\u4e24\u4ef6\u4e8b\uff1a\u4ed6\u75db\u82e6\u7684\u6765\u6e90\u662f\u5fb7\u91cc\u514b\u00b7\u8096\u6587(Derek Chauvin)\u7684\u817f\u5361\u5728\u5f17\u6d1b\u4f0a\u5fb7\u8116\u5b50\u4e0a\u7684\u8fd1\u4e5d\u5206\u949f\uff0c\u800c\u4e14\u51e0\u4e4e\u6ca1\u6709\u8bc1\u636e(\u5982\u679c\u6709\u7684\u8bdd)\u8868\u660e\u5f17\u6d1b\u4f0a\u5fb7\u62b5\u6297\u4e86\u8b66\u5bdf\u3002\n\u8fd9\u79cd\u6a21\u5f0f-\u66b4\u529b\u8b66\u5bdf\u906d\u9047\u7684\u89c6\u9891\u4e0e\u5404\u90e8\u95e8\u6216\u5176\u5de5\u4f1a\u7684\u63cf\u8ff0\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4-\u5728\u5f17\u6d1b\u4f0a\u5fb7\u53bb\u4e16\u540e\u7684\u51e0\u5929\u91cc\uff0c\u4ee5\u4e25\u9177\u7684\u5bf9\u79f0\u6027\u91cd\u590d\u51fa\u73b0\u3002\u8bb8\u591a\u4e8b\u4ef6\u90fd\u6293\u4f4f\u4e86\u516c\u4f17\u7684\u6124\u6012\uff0c\u4ed6\u4eec\u6307\u51fa\uff0c\u5bf9\u773c\u524d\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u63cf\u8ff0\u4e0d\u51c6\u786e\u6216\u5b8c\u5168\u5177\u6709\u8bef\u5bfc\u6027\u3002\n\u7167\u7247\u670d\u52a1\u7684\u5e7b\u706f\u7247\u653e\u5728\u4e00\u8d77\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u663e\u793a\u4e86\u5bf9\u8b66\u65b9\u8d26\u6237\u7684\u5373\u65f6\u6838\u5b9e\u662f\u5982\u4f55\u6539\u53d8\u4e86\u95ee\u8d23\u7684\u683c\u5c40\u3002\n\u5de5\u4f1a\u5168\u56fd\u8b66\u5bdf\u5144\u5f1f\u4f1a\u7684\u6267\u884c\u8463\u4e8b\u5409\u59c6\u00b7\u5e15\u65af\u79d1(Jim Pasco)\u544a\u8bc9\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d(The Washington Post)\uff1a\u201c\u4f5c\u4e3a\u4e00\u4e2a\u804c\u4e1a\uff0c\u8fc7\u53bb\u51e0\u5468\u5728\u89c6\u9891\u4e2d\u76ee\u7779\u7684\u4e8b\u4ef6\uff0c\u80af\u5b9a\u524a\u5f31\u4e86\u6211\u4eec\u7684\u5730\u4f4d\u3002\u201d(\u7f8e\u56fd\u56fd\u5bb6\u8b66\u5bdf\u5144\u5f1f\u4f1a)\u7684\u6267\u884c\u8463\u4e8b\u5409\u59c6\u00b7\u5e15\u65af\u79d1(Jim Pasco)\u544a\u8bc9\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d(The Washington Post)\u3002\n\u5468\u56db\uff0c\u4e00\u540d75\u5c81\u7684\u6297\u8bae\u8005\u5728\u5e03\u6cd5\u7f57\u88ab\u8b66\u5bdf\u63a8\u6421\uff0c\u5bfc\u81f4\u8be5\u7537\u5b50\u5411\u540e\u7eca\u5012\uff0c\u5934\u90e8\u649e\u5411\u4eba\u884c\u9053\u3002\u5728\u5f53\u5730NPR\u5b50\u516c\u53f8WBFO\u62cd\u6444\u7684\u4ee4\u4eba\u4e0d\u5b89\u7684\u89c6\u9891\u4e2d\uff0c\u9c9c\u8840\u4ece\u4ed6\u7684\u8033\u6735\u91cc\u6d41\u51fa\u6765\u3002\n\u5e03\u6cd5\u7f57\u8b66\u5bdf\u5c40\u6700\u521d\u53d1\u5e03\u7684\u65b0\u95fb\u7a3f\u79f0\uff0c\u8fd9\u540d\u7537\u5b50\u540e\u6765\u88ab\u786e\u8ba4\u4e3a\u9a6c\u4e01\u00b7\u53e4\u5409\u8bfa(Martin Gugino)\uff0c\u4ed6\u5728\u201c\u4e00\u573a\u6d89\u53ca\u6297\u8bae\u8005\u7684\u5c0f\u89c4\u6a21\u51b2\u7a81\u4e2d\u201d\u201c\u7eca\u5012\u201d-\u8868\u9762\u4e0a\u662f\u7531\u8fd9\u540d\u7537\u5b50\u81ea\u5df1\u627f\u62c5\u540e\u679c\u3002\n\u201c\u4ed6\u7684\u8033\u6735\u5728\u6d41\u8840\uff01\u201dWBFO\u89c6\u9891\u4e2d\u7684\u4e00\u4eba\u558a\u9053\uff0c\u8b66\u5bdf\u62d6\u7740\u811a\u6b65\u8d70\u8fc7\u8eba\u5728\u5730\u4e0a\u4e00\u52a8\u4e0d\u52a8\u7684\u7537\u5b50\uff0c\u8f6c\u8eab\u902e\u6355\u53e6\u4e00\u540d\u6297\u8bae\u8005\u3002\n\u8fd9\u4e00\u8bf4\u6cd5\u4e0e\u75c5\u6bd2\u5f0f\u89c6\u9891\u4e4b\u95f4\u7684\u5dee\u5f02\u6fc0\u8d77\u4e86\u4eba\u4eec\u5bf9\u8fd9\u8d77\u4e8b\u4ef6\u7684\u6124\u6012\u3002\u8be5\u90e8\u95e8\u5728\u5ba1\u67e5\u4e86\u89c6\u9891\u5e76\u5c06\u76f8\u5173\u5b98\u5458\u505c\u804c\u540e\u6536\u56de\u4e86\u63cf\u8ff0\u3002\n\u5f53\u5c40\u544a\u8bc9\u4ed6\u7684\u5f8b\u5e08\uff0c21\u5c81\u7684\u8d39\u57ce\u6297\u8bae\u8005\u57c3\u6587\u00b7\u6208\u5c14\u65af\u57fa(Evan Gorski)\u56e0\u88ab\u6307\u63a7\u5468\u4e00\u5c06\u8b66\u5bdf\u63a8\u4e0b\u81ea\u884c\u8f66\u800c\u88ab\u6355\u3002\n\u4f46\u793e\u4ea4\u5a92\u4f53\u4e0a\u6d41\u4f20\u7684\u89c6\u9891\u63cf\u7ed8\u4e86\u5766\u666e\u5c14\u5927\u5b66(Temple University)\u5b66\u751f\u6208\u5c14\u65af\u57fa(Gorski)\u5982\u4f55\u4e0e\u8b66\u65b9\u7ea0\u7f20\u5728\u4e00\u8d77\u7684\u622a\u7136\u4e0d\u540c\u7684\u753b\u9762\u3002\u5728\u5176\u4ed6\u4eba\u6355\u6349\u5230\u7684\u90a3\u4e00\u523b\uff0c\u6208\u5c14\u65af\u57fa\u4f38\u624b\u5230\u53e6\u4e00\u540d\u793a\u5a01\u8005\u548c\u4e00\u540d\u8b66\u5bdf\u4e4b\u95f4\uff0c\u5c06\u4ed6\u4eec\u5206\u5f00\u3002\n\u7247\u523b\u4e4b\u540e\uff0c\u8d39\u57ce\u8b66\u5b98\u5c0f\u7ea6\u745f\u592b\u00b7\u535a\u6d1b\u5c3c\u4e9a(Joseph Bologna Jr.)\u3002\u7528\u8b66\u68cd\u51fb\u6253\u6208\u5c14\u65af\u57fa\uff0c\u8ffd\u8d76\u4ed6\uff0c\u8de8\u5728\u4ed6\u8eab\u4e0a\uff0c\u53e6\u4e00\u540d\u8b66\u5bdf\u5c06\u4ed6\u7684\u8138\u538b\u5728\u6ca5\u9752\u4e0a\u3002\u5176\u4ed6\u8b66\u5bdf\u5411\u805a\u96c6\u5728\u5468\u56f4\u7684\u5176\u4ed6\u4eba\u6325\u821e\u8b66\u68cd\u3002\n\u6208\u5c14\u65af\u57fa\u7684\u5f8b\u5e08R\u00b7\u57c3\u7c73\u7279\u00b7\u9a6c\u767b(R.Emmett Madden)\u544a\u8bc9\u201c\u8d39\u57ce\u95ee\u8be2\u62a5\u201d(Philadelphia Inquirer)\uff0c\u68c0\u5bdf\u5b98\u5728\u67e5\u770b\u4e86\u73b0\u573a\u89c6\u9891\u540e\uff0c\u4e8e\u5468\u4e09\u64a4\u9500\u4e86\u6307\u63a7\uff0c\u5e76\u91ca\u653e\u4e86\u6208\u5c14\u65af\u57fa\u3002\n\u201c\u8b66\u5bdf\u5728\u6492\u8c0e\uff0c\u201d\u9a6c\u767b\u8bf4\u3002\u201c\u6211\u4eec\u53d1\u751f\u4e86\u6297\u8bae\u8b66\u5bdf\u7684\u66b4\u884c\uff0c\u7136\u540e\u8b66\u5bdf\u7c97\u66b4\u5bf9\u5f85\u6211\u7684\u5f53\u4e8b\u4eba\uff0c\u5e76\u8bd5\u56fe\u9677\u5bb3\u4ed6\u72af\u4e0b\u4ed6\u6ca1\u6709\u72af\u4e0b\u7684\u7f6a\u884c\u3002\u201d\n\u5468\u4e00\uff0c\u5f53\u5c40\u5bf9\u534e\u76db\u987f\u62c9\u6590\u7279\u5e7f\u573a(Lafayette Square)\u6297\u8bae\u8005\u7684\u6307\u63a7\u5df2\u6210\u4e3a\u6297\u8bae\u6d3b\u52a8\u4e2d\u6700\u53d7\u5173\u6ce8\u7684\u4e8b\u4ef6\u4e4b\u4e00\uff0c\u5b98\u5458\u4eec\u89e3\u6790\u4e86\u50ac\u6cea\u74e6\u65af\u7684\u5b9a\u4e49\uff0c\u4ee5\u6de1\u5316\u66b4\u529b\u53cd\u5e94\u3002\n\u4f46\u5728\u4e00\u4e2a\u53d7\u5230\u5e7f\u6cdb\u8c34\u8d23\u7684\u65f6\u523b\uff0c\u7f8e\u56fd\u516c\u56ed\u8b66\u5bdf\u88ab\u62cd\u5230\u7528\u76fe\u724c\u88ad\u51fb\u4e00\u540d\u6fb3\u5927\u5229\u4e9a\u65b0\u95fb\u6444\u5f71\u5e08\uff0c\u6233\u4ed6\u7684\u76f8\u673a\uff0c\u5e76\u5411\u4e3b\u64ad\u6325\u821e\u8b66\u68cd\u3002\n\u6fb3\u5927\u5229\u4e9a7News\u76f4\u64ad\u4e86\u8fd9\u4e00\u65f6\u523b\uff0c\u5f15\u53d1\u4e86\u4e00\u573a\u56fd\u9645\u4e8b\u4ef6\uff0c\u6fb3\u5927\u5229\u4e9a\u603b\u7406\u65af\u79d1\u7279\u00b7\u83ab\u91cc\u68ee(Scott Morrison)\u547c\u5401\u4ed6\u5728\u534e\u76db\u987f\u7684\u5916\u4ea4\u5b98\u8fdb\u884c\u8c03\u67e5\u3002\n\u8be5\u673a\u6784\u7684\u5de5\u4f1a\u53d1\u8868\u58f0\u660e\u56de\u5e94\uff0c\u4e3a\u8fd9\u4e9b\u5b98\u5458\u7684\u884c\u4e3a\u8fa9\u62a4\uff0c\u6697\u793a\u4ed6\u4eec\u201c\u53ef\u80fd\u5df2\u7ecf\u5012\u4e0b\u201d\u3002\u5468\u56db\uff0c\u7f8e\u56fd\u516c\u56ed\u8b66\u5bdf\u5144\u5f1f\u4f1a\u8b66\u5bdf\u52b3\u5de5\u59d4\u5458\u4f1a\u4e3b\u5e2d\u80af\u5c3c\u601d\u00b7\u65af\u5bbe\u585e(Kenneth Spencer)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u53d1\u751f\u8fd9\u8d77\u4e8b\u4ef6\u7684\u539f\u56e0\u662f\u516c\u56ed\u5185\u54cd\u4eae\u7684\u6df7\u4e71\u573a\u9762\uff0c\u4ee5\u53ca\u201c\u7f3a\u4e4f\u5bb9\u6613\u8bc6\u522b\u7684\u8bb0\u8005\u6807\u8bb0\u201d\u3002\n\u5728\u534e\u76db\u987f\u90ae\u62a5\u83b7\u5f97\u58f0\u660e\u540e\uff0c\u5de5\u4f1a\u4f3c\u4e4e\u5df2\u7ecf\u4ece\u4ed6\u4eec\u7684\u4e3b\u9875\u4e0a\u5220\u9664\u4e86\u4ed6\u4eec\u7684\u58f0\u660e\u3002\u4ed6\u4eec\u9875\u9762\u7684\u5b58\u6863\u7248\u672c\u663e\u793a\u4e86\u4ed6\u4eec\u7684\u521d\u59cb\u58f0\u660e\u3002\u5de5\u4f1a\u53d1\u8a00\u4eba\u6ca1\u6709\u8054\u7cfb\u5230\u65af\u5bbe\u585e\u7f6e\u8bc4\u3002\n\u516c\u56ed\u8b66\u65b9\u5468\u4e09\u8868\u793a\uff0c\u968f\u7740\u8c03\u67e5\u7684\u7ee7\u7eed\uff0c\u8fd9\u4e24\u540d\u6d89\u6848\u8b66\u5bdf\u5df2\u88ab\u884c\u653f\u4f11\u5047\u3002\n\u5728\u5de5\u4f1a\u5bf9\u4e8b\u4ef6\u7684\u603b\u7ed3\u4e2d\uff0c\u4e0d\u592a\u6e05\u695a\u7684\u662f\u673a\u7ec4\u4eba\u5458\u53ef\u80fd\u5760\u843d\u5728\u54ea\u91cc\uff0c\u4ee5\u53ca\u662f\u5426\u6709\u4e00\u7cfb\u5217\u76fe\u724c\u548c\u8b66\u68cd\u5bfc\u81f4\u4e86\u5760\u843d-\u5982\u679c\u4ed6\u4eec\u771f\u7684\u5760\u843d\u4e86\u7684\u8bdd\u3002", "note_en": "On May 26, the morning after George Floyd\u2019s last gasps underneath a policeman\u2019s knee, the Minneapolis Police Department wrote he had \u201cphysically resisted\u201d officers, who noted Floyd \u201cappeared to be suffering medical distress.\u201d\n   That  news release went online hours before video revealed two things the public may have never learned otherwise: the source of his distress was nearly nine minutes of Derek Chauvin\u2019s leg pressed into Floyd\u2019s neck, and there is  little evidence, if any, that Floyd resisted officers.\n  The pattern \u2014 video of violent police encounters that contrast sharply with accounts by the departments or their unions \u2014 has repeated with grim symmetry in the days since Floyd\u2019s death. Numerous incidents have captured the rage of the public who point to inaccurate or outright misleading descriptions of what has occurred before their eyes.\n Slideshow by photo services\u00a0 Taken together, the incidents show how instant verification of police accounts have altered the landscape of accountability.\n \u201cWe certainly, as a profession, have been diminished by events that have been witnessed on video over the course of the last couple of weeks,\u201d Jim Pasco, executive director of the national Fraternal Order of Police, a labor union,  told The Washington Post.\n  A 75-year-old protester was  shoved  by police officers in Buffalo on Thursday, causing the man to stumble backward and slam his head on the sidewalk. Blood streamed from his ear in the disturbing video  shot by local NPR affiliate WBFO.\n The initial news release from the Buffalo Police Department said the man, later identified as Martin Gugino, \u201ctripped and fell\u201d during \u201ca skirmish involving protesters\u201d \u2014 ostensibly placing the consequences on the man himself.\n \u201cHe\u2019s bleeding out of his ear!\u201d shouted one person in WBFO\u2019s video, as the officers shuffle past the man laying motionless on the ground, turning instead to arrest another protester.\n The disparity between that account and the viral video fueled outrage over the incident. The department walked back its description after it reviewed the video and suspended the involved officers without pay.\n  Evan Gorski, 21, a protester in Philadelphia, was arrested on an allegation he pushed officer off a bike on Monday, authorities told his attorney.\n But video circulated on social media painted a much different picture of how Gorski, a Temple University student, tangled with police. In the moment captured by others, Gorski reached between another demonstrator and an officer to separate them.\n A moment later, Philadelphia Police officer Joseph Bologna Jr. struck Gorski with a baton, chased him down and straddled him as another officer pressed his face on the asphalt. Other officers swung their batons at others gathered around.\n Gorski\u2019s attorney, R. Emmett Madden,  told the Philadelphia Inquirer that prosecutors dropped charges and released him Wednesday after reviewing video from the scene.\n \u201cThe police were lying,\u201d Madden said. \u201cWe had a protest police brutality, and then police brutalize my client and try to frame him for a crime he didn\u2019t commit.\u201d\n   The charge of authorities against protesters in Lafayette Square in Washington on Monday has become one of the most scrutinized incidents among the protests, complete with  officials parsing the definition of tear gas to downplay the violent response.\n But in one widely condemned moment, U.S. Park Police were shown striking an Australian news cameraman with a shield, jabbing at his camera and swinging his baton at the anchor.\n The moment, broadcast live on 7 News in Australia, triggered an international incident, with Prime Minister Scott Morrison calling on his diplomats in Washington to investigate.\n The agency\u2019s union responded with a statement defending the actions of the officers, suggesting they \u201cmay have fallen.\u201d It occurred because of the loud chaos in the park and the \u201clack of readily identifiable journalist markings,\u201d Kenneth Spencer, chairman of the U.S. Parks Police Fraternal Order of Police Labor Committee, said in a statement on Thursday.\n The union appeared to have deleted their statement from their homepage after it was obtained by The Washington Post. An archived version of their page  shows their initial statement. A spokesman for the union did not make Spencer available for comment.\n The two officers involved were placed on administrative leave as an investigation continues, the Park Police said Wednesday.\n What is less clear in the union\u2019s summary of events is where the crew may have fallen, and if a flurry of shields and batons may have led to it \u2014 if they even fell at all.", "posttime": "2020-06-07 15:38:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u62cd\u6444,filmed,\u8b66\u5bdf", "title": "\u5f53\u8b66\u5bdf\u88ab\u62cd\u6444\u65f6\uff0c\u4f1a\u4e0d\u4f1a\u6709\u66f4\u591a\u7684\u95ee\u8d23\uff1f", "title_en": "When the Police Get Filmed, Is There More Accountability?", "transed": 1, "url": "https://www.msn.com/en-us/news/us/in-violent-protest-incidents-a-theme-emerges-videos-contradict-police-accounts/ar-BB157DAW?li=BBnb7Kz", "via": "", "real_tags": ["\u62cd\u6444", "filmed", "\u8b66\u5bdf"]}, {"category": "", "categoryclass": "", "imagename": "da9d5ed7acae945b4a67a9dc0b7bada3.png", "infoid": 1005539, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SQLancer(\u5408\u6210\u67e5\u8be2Lenger)\u662f\u4e00\u4e2a\u81ea\u52a8\u6d4b\u8bd5\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(DBMS)\u4ee5\u67e5\u627e\u5176\u5b9e\u73b0\u4e2d\u7684\u903b\u8f91\u9519\u8bef\u7684\u5de5\u5177\u3002\u6211\u4eec\u5c06\u903b\u8f91\u9519\u8bef\u79f0\u4e3a\u90a3\u4e9b\u5bfc\u81f4DBMS\u83b7\u53d6\u9519\u8bef\u7ed3\u679c\u96c6(\u4f8b\u5982\uff0c\u901a\u8fc7\u7701\u7565\u8bb0\u5f55)\u7684\u9519\u8bef\u3002\n\u6570\u636e\u5e93\u751f\u6210\uff1a\u6b64\u9636\u6bb5\u7684\u76ee\u6807\u662f\u521b\u5efa\u5df2\u586b\u5145\u7684\u6570\u636e\u5e93\uff0c\u5e76\u5411DBMS\u65bd\u52a0\u538b\u529b\uff0c\u4ee5\u589e\u52a0\u5bfc\u81f4\u53ef\u968f\u540e\u68c0\u6d4b\u5230\u7684\u4e0d\u4e00\u81f4\u6570\u636e\u5e93\u72b6\u6001\u7684\u53ef\u80fd\u6027\u3002\u9996\u5148\uff0c\u521b\u5efa\u968f\u673a\u8868\u3002\u7136\u540e\uff0c\u968f\u673a\u9009\u62e9SQL\u8bed\u53e5\u6765\u751f\u6210\u3001\u4fee\u6539\u548c\u5220\u9664\u6570\u636e\u3002\u5176\u4ed6\u8bed\u53e5\uff0c\u4f8b\u5982\u7528\u4e8e\u521b\u5efa\u7d22\u5f15\u548c\u89c6\u56fe\u4ee5\u53ca\u8bbe\u7f6e\u7279\u5b9a\u4e8eDBMS\u7684\u9009\u9879\u7684\u8bed\u53e5\uff0c\u4e5f\u4f1a\u53d1\u9001\u5230DBMS\u3002\n\u6d4b\u8bd5\uff1a\u6b64\u9636\u6bb5\u7684\u76ee\u6807\u662f\u57fa\u4e8e\u751f\u6210\u7684\u6570\u636e\u5e93\u68c0\u6d4b\u903b\u8f91\u9519\u8bef\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002\n\u8981\u6d4b\u8bd5\u7684DBMS(SQLite\u662f\u5d4c\u5165\u5f0fDBMS\uff0c\u5305\u542b\u5728\u5185)\u3002\n\u4ee5\u4e0b\u547d\u4ee4\u514b\u9686SQLizer\uff0c\u521b\u5efa\u4e00\u4e2aJAR\uff0c\u5e76\u542f\u52a8SQLancer\u4ee5\u4f7f\u7528\u4e09\u5143\u903b\u8f91\u67e5\u8be2\u5206\u533a(TLP)\u5bf9SQLite\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff1a\nGit\u514b\u9686https://github.com/sqlancer/sqlancercd sqlancermvn\u5305\u76ee\u6807java-jar SQLancer-0.0.1-SNAPSHOT.jar--num_threads16--num_tries 5--max_expression_\u6df1\u5ea63--num_query 100000--max_num_insert 30 sqlite3--oracle\u67e5\u8be2\u5206\u533a\u3002\n\u5982\u679c\u6267\u884c\u6bcf\u4e94\u79d2\u6253\u5370\u4e00\u6b21\u8fdb\u5ea6\u4fe1\u606f\uff0c\u5219\u8be5\u5de5\u5177\u5c06\u6309\u9884\u671f\u5de5\u4f5c\u3002\u8bf7\u6ce8\u610f\uff0cSQLancer\u53ef\u80fd\u4f1a\u5728SQLite\u4e2d\u53d1\u73b0\u9519\u8bef\u3002\u5728\u62a5\u544a\u8fd9\u4e9b\u5185\u5bb9\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5728\u4f7f\u7528\u6700\u65b0\u5f00\u53d1\u7248\u672c\u65f6\u4ecd\u7136\u53ef\u4ee5\u590d\u5236\u5b83\u4eec\u3002\n\u7531\u4e8e\u6211\u4eec\u6536\u5230\u4e86\u6781\u5927\u7684\u5174\u8da3\uff0c\u6211\u4eec\u6b63\u5728\u8003\u8651\u5c06\u6211\u4eec\u7684\u7f3a\u9677\u67e5\u627e\u5de5\u4f5c\u5546\u4e1a\u5316\u3002\u5982\u679c\u60a8\u4ee3\u8868\u4e00\u5bb6\u516c\u53f8\u5e76\u5bf9\u6f0f\u6d1e\u67e5\u627e\u670d\u52a1\u611f\u5174\u8da3\uff0c\u8bf7\u4e0e\u6211\u4eec(Manuel Rigger\u548c\u82cf\u632f\u4e1c)\u8054\u7cfb\uff0c\u544a\u77e5\u60a8\u5bf9\u6b64\u7c7b\u670d\u52a1\u7684\u671f\u671b\u548c\u8981\u6c42\u3002\n\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u8fd9\u4e2a\u9879\u76ee\u4ecd\u7136\u5e94\u8be5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u7814\u7a76\u539f\u578b\u3002\u6211\u4eec\u8ba4\u4e3a\u8be5\u5de5\u5177\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u6295\u5165\u4f7f\u7528\u3002\u7136\u800c\uff0c\u6211\u4eec\u6536\u5230\u4e86\u516c\u53f8\u3001\u7ec4\u7ec7\u548c\u4e2a\u4eba\u5f00\u53d1\u4eba\u5458\u7684\u8bb8\u591a\u8bf7\u6c42\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u51b3\u5b9a\u8fc7\u65e9\u53d1\u5e03\u8be5\u5de5\u5177\u7684\u539f\u56e0\u3002\u9884\u8ba1\u4f1a\u51fa\u73b0\u9519\u8bef\u3001\u4e0d\u517c\u5bb9\u3001\u7f3a\u5c11\u6587\u6863\u548c\u4ee3\u7801\u8d28\u91cf\u4e0d\u8db3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u5c06SQLancer\u63d0\u5347\u4e3a\u751f\u4ea7\u8d28\u91cf\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u6b22\u8fce\u4efb\u4f55\u95ee\u9898\u62a5\u544a\u3001\u6269\u5c55\u8bf7\u6c42\u548c\u4ee3\u7801\u8d21\u732e\u3002\nPQS\u662f\u6211\u4eec\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7684\u7b2c\u4e00\u4e2a\u6280\u672f\u3002\u5b83\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u79f0\u4e3a\u900f\u89c6\u8868\u884c\u7684\u884c\uff0c\u4e3a\u8be5\u884c\u751f\u6210\u4e00\u4e2a\u4fdd\u8bc1\u63d0\u53d6\u8be5\u884c\u7684\u67e5\u8be2\u3002\u5982\u679c\u8be5\u884c\u672a\u5305\u542b\u5728\u7ed3\u679c\u96c6\u4e2d\uff0c\u5219\u5df2\u68c0\u6d4b\u5230\u9519\u8bef\u3002\u8fd9\u91cc\u6709\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002PQS\u662f\u6700\u5f3a\u5927\u7684\u6280\u672f\uff0c\u4f46\u4e5f\u6bd4\u5176\u4ed6\u4e24\u79cd\u6280\u672f\u9700\u8981\u66f4\u591a\u7684\u5b9e\u73b0\u5de5\u4f5c\u3002\u5b83\u76ee\u524d\u6ca1\u6709\u5f97\u5230\u7ef4\u62a4\u3002\nNoREC\u7684\u76ee\u6807\u662f\u627e\u5230\u4f18\u5316\u9519\u8bef\u3002\u8fd9\u91cc\u6709\u63cf\u8ff0\u3002\u5b83\u5c06DBMS\u53ef\u80fd\u4f18\u5316\u7684\u67e5\u8be2\u8f6c\u6362\u4e3a\u51e0\u4e4e\u4e0d\u9002\u7528\u4efb\u4f55\u4f18\u5316\u7684\u67e5\u8be2\uff0c\u5e76\u6bd4\u8f83\u4e24\u4e2a\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u8868\u793aDBMS\u4e2d\u5b58\u5728\u9519\u8bef\u3002\nTLP\u5c06\u4e00\u4e2a\u67e5\u8be2\u5212\u5206\u4e3a\u4e09\u4e2a\u5206\u533a\u67e5\u8be2\uff0c\u5b83\u4eec\u7684\u7ed3\u679c\u88ab\u7ec4\u5408\u8d77\u6765\uff0c\u5e76\u4e0e\u539f\u59cb\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u8fdb\u884c\u6bd4\u8f83\u3002\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0d\u5339\u914d\u8868\u793aDBMS\u4e2d\u5b58\u5728\u9519\u8bef\u3002\u4e0eNoREC\u548cPQS\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u68c0\u6d4b\u805a\u5408\u51fd\u6570\u7b49\u9ad8\u7ea7\u529f\u80fd\u4e2d\u7684\u9519\u8bef\u3002\n\u6b64\u5b9e\u73b0\u76ee\u524d\u53d7\u5230\u4ecd\u9700\u8c03\u67e5\u7684\u91cd\u5927\u6027\u80fd\u56de\u5f52\u7684\u5f71\u54cd\u3002\n\u8fd9\u4e2aDBMS\u7684\u5b9e\u73b0\u662f\u975e\u5e38\u521d\u6b65\u7684\uff0c\u56e0\u4e3a\u9664\u4e86\u6211\u4eec\u7684\u4e00\u4e2a\u9519\u8bef\u62a5\u544a\u4e4b\u5916\uff0c\u6211\u4eec\u5728\u6240\u6709\u7684\u9519\u8bef\u62a5\u544a\u90fd\u88ab\u89e3\u51b3\u4e4b\u540e\u505c\u6b62\u4e86\u6269\u5c55\u3002\u8fd0\u884c\u5b83\u53ef\u80fd\u4f1a\u53d1\u73b0\u66f4\u591a\u672a\u62a5\u544a\u7684\u9519\u8bef\u3002\n\u5b9e\u73b0\u4e0d\u540c\u7684\u8868\u5f15\u64ce\u5e76\u4e0d\u65b9\u4fbf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u53ea\u6709\u975e\u5e38\u521d\u6b65\u7684\u5b9e\u73b0\u5b58\u5728\u7684\u539f\u56e0\u3002\n\u6211\u4eec\u5220\u9664\u4e86TDEngine\u5b9e\u73b0\uff0c\u56e0\u4e3a\u9664\u4e86\u4e00\u4e2a\u9519\u8bef\u62a5\u544a\u4e4b\u5916\uff0c\u6240\u6709\u7684\u9519\u8bef\u62a5\u544a\u5728\u6211\u4eec\u62a5\u544a\u4e94\u4e2a\u6708\u540e\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u89e3\u51b3\u3002\nEclipse\u4ee3\u7801\u683c\u5f0f\u5316\u7a0b\u5e8f\uff0c\u4ee5\u786e\u4fdd\u4e00\u81f4\u7684\u683c\u5f0f\u5316(\u8fd0\u884cMVN Formatter\uff1aFormat\u4ee5\u683c\u5f0f\u5316\u6240\u6709\u6587\u4ef6)\u3002\n\u6211\u4eec\u8ba1\u5212\u5f88\u5feb\u6dfb\u52a0\u914d\u7f6e\u9879\u4ee5\u81ea\u52a8\u68c0\u67e5PR\u3002\u968f\u540e\uff0c\u6211\u4eec\u8fd8\u8ba1\u5212\u4e3a\u6bcf\u4e2aDBMS\u6dfb\u52a0\u5192\u70df\u6d4b\u8bd5\uff0c\u4ee5\u6d4b\u8bd5\u5404\u81ea\u7684\u6d4b\u8bd5\u5b9e\u73b0\u6ca1\u6709\u660e\u663e\u635f\u574f\uff0c\u8bf7\u53c2\u89c1\u6b64\u5904\u3002\nSQLancer\u76ee\u524d\u6ca1\u6709\u6d4b\u8bd5\u5957\u4ef6\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6d4b\u8bd5DBMS\u65f6\uff0cSQLancer\u4e2d\u7684\u9519\u8bef\u53ef\u4ee5\u5feb\u901f\u53d1\u73b0\uff0c\u5e76\u4e14\u6613\u4e8e\u8c03\u8bd5\u3002PQS\u5b9e\u73b0\u6709\u4e00\u4e2a\u6d4b\u8bd5\u5957\u4ef6\uff0c\u8be5\u6d4b\u8bd5\u5957\u4ef6\u5728\u63d0\u4ea436ede0c0c68b3856e03ef5ba802a7c2575bb3f12\u4e2d\u88ab\u5220\u9664\u3002\nSQLancer\u5c06\u65e5\u5fd7\u5b58\u50a8\u5728target/logs\u5b50\u76ee\u5f55\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9009\u9879--log-each-select\u5904\u4e8e\u542f\u7528\u72b6\u6001\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u8bb0\u5f55\u53d1\u9001\u5230DBMS\u7684\u6bcf\u6761SQL\u8bed\u53e5\u3002\u76f8\u5e94\u7684\u6587\u4ef6\u540d\u4ee5-cur.log\u4f5c\u4e3a\u540e\u7f00\u3002\u6b64\u5916\uff0c\u5982\u679cSQLancer\u68c0\u6d4b\u5230\u903b\u8f91\u9519\u8bef\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u6269\u5c55\u540d\u4e3a.log\u7684\u6587\u4ef6\uff0c\u5176\u4e2d\u8bb0\u5f55\u4e86\u518d\u73b0\u9519\u8bef\u7684\u8bed\u53e5\u3002\n\u5728\u53d1\u73b0\u9519\u8bef\u4e4b\u540e\uff0c\u5728\u62a5\u544a\u9519\u8bef\u4e4b\u524d\u751f\u6210\u4e00\u4e2a\u6700\u5c0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u662f\u5f88\u6709\u7528\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701DBMS\u5f00\u53d1\u4eba\u5458\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5bf9\u4e8e\u8bb8\u591a\u6d4b\u8bd5\u7528\u4f8b\uff0cC-Reduce\u505a\u5f97\u5f88\u597d\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5f00\u53d1\u4e00\u4e2a\u7279\u5b9a\u4e8eSQL\u7684\u7f29\u51cf\u5668\uff0c\u6211\u4eec\u8ba1\u5212\u5f88\u5feb\u53d1\u5e03\u8be5\u7f29\u51cf\u5668\u3002\n\u5982\u679c\u60a8\u5728\u62a5\u544aSQLancer\u53d1\u73b0\u7684\u9519\u8bef\u65f6\u63d0\u5230\u5b83\uff0c\u6211\u4eec\u5c06\u4e0d\u80dc\u611f\u6fc0\u3002\u6211\u4eec\u4e5f\u5f88\u60f3\u77e5\u9053\u60a8\u662f\u5426\u6b63\u5728\u4f7f\u7528SQLancer\u6765\u67e5\u627ebug\uff0c\u6216\u8005\u60a8\u662f\u5426\u5df2\u7ecf\u5c06\u5176\u6269\u5c55\u5230\u6d4b\u8bd5\u53e6\u4e00\u4e2aDBMS(\u5982\u679c\u60a8\u4e0d\u6253\u7b97\u5c06\u5176\u8d21\u732e\u7ed9\u8fd9\u4e2a\u9879\u76ee)\u3002SQLancer\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684DBMS\u4e2d\u53d1\u73b0\u4e86400\u591a\u4e2a\u9519\u8bef\uff0c\u6b64\u5904\u5217\u51fa\u4e86\u8fd9\u4e9b\u9519\u8bef\u3002\nDuckDB\u5b9e\u73b0\u4e3a\u65b0\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6a21\u677f\u3002DuckDBProvider\u7c7b\u662f\u7ba1\u7406\u6570\u636e\u5e93\u521b\u5efa\u548c\u6267\u884c\u6240\u9009\u6d4b\u8bd5Oracle\u7684\u4e2d\u5fc3\u7c7b\u3002\u5c1d\u8bd5\u4e3a\u60a8\u60f3\u8981\u5b9e\u73b0\u7684\u65b0DBMS\u590d\u5236\u5b83\u7684\u7ed3\u6784\uff0c\u5e76\u4ece\u751f\u6210\u6570\u636e\u5e93\u5f00\u59cb(\u4e0d\u5b9e\u73b0\u6d4b\u8bd5Oracle)\u3002\u4f5c\u4e3a\u8fd9\u9879\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u60a8\u8fd8\u9700\u8981\u5b9e\u73b0\u7b49\u6548\u7684DuckDBSchema\uff0c\u5b83\u8868\u793a\u751f\u6210\u7684\u6570\u636e\u5e93\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u3002\u6210\u529f\u751f\u6210\u6570\u636e\u5e93\u540e\uff0c\u4e0b\u4e00\u6b65\u662f\u751f\u6210\u5176\u4e2d\u4e00\u4e2a\u6d4b\u8bd5Oracle\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5b9e\u73b0NoREC(\u8bf7\u53c2\u89c1DuckDBNoRECOracle\u6216DuckDBQueryPartitioningWhere Tester for TLP)\u3002\u4f5c\u4e3a\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u60a8\u8fd8\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a\u968f\u673a\u8868\u8fbe\u5f0f\u751f\u6210\u5668(\u53c2\u89c1DuckDBExpressionGenerator)\u548c\u4e00\u4e2a\u8bbf\u95ee\u5668\u6765\u6d3e\u751f\u8868\u8fbe\u5f0f\u7684\u6587\u672c\u8868\u793a(\u53c2\u89c1DuckDBToStringVisitor)\u3002\n\u4f7f\u7528Eclipse\u5f00\u53d1SQLancer\u9884\u8ba1\u4f1a\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u60a8\u53ea\u9700\u4e00\u6b65\u5373\u53ef\u5bfc\u5165SQLancer\uff1a\nFile-&gt\uff1bImport-&gt\uff1bExisting Maven Projects-&gt\uff1b\u9009\u62e9SQLizer\u76ee\u5f55\u4f5c\u4e3a\u6839\u76ee\u5f55-&gt\uff1bFinish\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u627e\u5230\u5bfc\u5165Maven\u9879\u76ee\u7684\u9009\u9879\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5b89\u88c5M2Eclipse\u63d2\u4ef6\u3002\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u677e\u5f1b\u5de5\u4f5c\u533a\u6765\u8ba8\u8bbaSQLancer\u548c\u4e00\u822c\u7684DBMS\u6d4b\u8bd5\u3002SQLancer\u7684\u5b98\u65b9Twitter\u8d26\u53f7\u662f@sqlancer_dbms\u3002\n\u6709\u5173\u6211\u4eec\u7684DBMS\u6d4b\u8bd5\u5de5\u4f5c\u548c\u6211\u4eec\u53d1\u73b0\u7684\u9519\u8bef\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\u3002", "note_en": "SQLancer (Synthesized Query Lancer) is a tool to automatically test Database Management Systems (DBMS) in order to find logic bugs in their implementation. We refer to logic bugs as those bugs that cause the DBMS to fetch an incorrect result set (e.g., by omitting a record).\n  Database generation: The goal of this phase is to create a populated database, and stress the DBMS to increase the probability of causing an inconsistent database state that could be detected subsequently. First, random tables are created. Then, randomly SQL statements are chosen to generate, modify, and delete data. Also other statements, such as those to create indexes as well as views and to set DBMS-specific options are sent to the DBMS.\n Testing: The goal of this phase is to detect the logic bugs based on the generated database. See Testing Approaches below.\n   The DBMS that you want to test (SQLite is an embedded DBMS and is included)\n The following commands clone SQLancer, create a JAR, and start SQLancer to fuzz SQLite using Ternary Logic Query Partitioning (TLP):\n git clone https://github.com/sqlancer/sqlancercd sqlancermvn packagecd targetjava -jar SQLancer-0.0.1-SNAPSHOT.jar --num_threads 16 --num_tries 5 --max_expression_depth 3 --num_queries 100000 --max_num_inserts 30 sqlite3 --oracle query_partitioning\n If the execution prints progress information every five seconds, then the tool works as expected. Note that SQLancer might find bugs in SQLite. Before reporting these, be sure to check that they can still be reproduced when using the latest development version.\n   Due to the significant interest that we have received, we are considering to commercialize our bug-finding efforts. If you represent a company and would be interested in a bug-finding service, please approach us ( Manuel Rigger and  Zhendong Su) with your expectations and requirements for such a service.\n  This project should at this stage still be seen as a research prototype. We believe that the tool is not ready to be used. However, we have received many requests by companies, organizations, and individual developers, which is why we decided to prematurely release the tool. Expect errors, incompatibilities, lack of documentation, and insufficient code quality. That being said, we are working hard to address these issues and enhance SQLancer to become a production-quality piece of software. We welcome any issue reports, extension requests, and code contributions.\n  PQS is the first technique that we designed and implemented. It randomly selects a row, called a pivot row, for which a query is generated that is guaranteed to fetch the row. If the row is not contained in the result set, a bug has been detected. It is fully described  here. PQS is the most powerful technique, but also requires more implementation effort than the other two techniques. It is currently unmaintained.\n NoREC aims to find optimization bugs. It is described  here. It translates a query that is potentially optimized by the DBMS to one for which hardly any optimizations are applicable, and compares the two result sets. A mismatch between the result sets indicates a bug in the DBMS.\n TLP partitions a query into three partitioning queries, whose results are composed and compare to the original query&#39;s result set. A mismatch in the result sets indicates a bug in the DBMS. In contrast to NoREC and PQS, it can detect bugs in advanced features such as aggregate functions.\n   This implementation is currently affected by a significant performance regression that still needs to be investigated\n   The implementation of this DBMS is very preliminary, since we stopped extending it after all but one of our bug reports were addressed. Running it likely uncovers additional, unreported bugs.\n    Implementing the different table engines was not convenient, which is why only a very preliminary implementation exists.\n We removed the TDEngine implementation since all but one of our bug reports were still unaddressed five months after we reported them.\n   The  Eclipse code formatter, to ensure a consistent formatting (Run  mvn formatter:format to format all files).\n   We plan to soon add a  CI to automatically check PRs. Subsequently, we also plan to add smoke testing for each DBMS to test that the respective testing implementation is not obviously broken, see  here.\n SQLancer does currently not have a test suite. We found that bugs in SQLancer are quickly found and easy to debug when testing the DBMS. The PQS implementation had a test suite, which was removed in commit 36ede0c0c68b3856e03ef5ba802a7c2575bb3f12.\n   SQLancer stores logs in the  target/logs subdirectory. By default, the option  --log-each-select is enabled, which results in every SQL statement that is sent to the DBMS being logged. The corresponding file names are postfixed with  -cur.log. In addition, if SQLancer detects a logic bug, it creates a file with the extension  .log, in which the statements to reproduce the bug are logged.\n  After finding a bug, it is useful to produce a minimal test case before reporting the bug, to save the DBMS developers&#39; time and effort. For many test cases,  C-Reduce does a great job. In addition, we have been working on a SQL-specific reducer, which we plan to release soon.\n  We would appreciate it if you mention SQLancer when you report bugs found by it. We would also be excited to know if you are using SQLancer to find bugs, or if you have extended it to test another DBMS (also if you do not plan to contribute it to this project). SQLancer has found over 400 bugs in widely-used DBMS, which are listed  here.\n   The DuckDB implementation provides a good template for a new implementation. The  DuckDBProvider class is the central class that manages the creation of the databases and executes the selected test oracles. Try to copy its structure for the new DBMS that you want to implement, and start by generate databases (without implementing a test oracle). As part of this, you will also need to implement the equivalent of  DuckDBSchema, which represents the database schema of the generated database. After you can successfully generate databases, the next step is to generate one of the test oracles. For example, you might want to implement NoREC (see  DuckDBNoRECOracle or  DuckDBQueryPartitioningWhereTester for TLP). As part of this, you must also implement a random expression generator (see  DuckDBExpressionGenerator) and a visitor to derive the textual representation of an expression (see  DuckDBToStringVisitor).\n  Developing SQLancer using Eclipse is expected to work well. You can import SQLancer with a single step:\n File -&gt; Import -&gt; Existing Maven Projects -&gt; Select the SQLancer directory as root directory -&gt; Finish\n If you do not find an option to import Maven projects, you might need to install the  M2Eclipse plugin.\n  We have created a  Slack workspace to discuss SQLancer, and DBMS testing in general. SQLancer&#39;s official Twitter handle is  @sqlancer_dbms.\n  More information on our DBMS testing efforts and the bugs we found is available  here.", "posttime": "2020-06-07 15:21:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7528\u4e8e,tool,sqlancer", "title": "SQLancer\uff0c\u7528\u4e8e\u81ea\u52a8\u6d4b\u8bd5DBMS\u4ee5\u67e5\u627e\u903b\u8f91\u9519\u8bef\u7684\u5de5\u5177", "title_en": "SQLancer, a tool to automatically test DBMSs to find logic bugs", "transed": 1, "url": "https://github.com/sqlancer/sqlancer", "via": "", "real_tags": ["\u7528\u4e8e", "tool", "sqlancer"]}, {"category": "", "categoryclass": "", "imagename": "b0641ae1f83e518276ba8d70c3384be6.jpg", "infoid": 1005538, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Helvetica\u662f\u5bf9\u5927\u57ce\u5e02\u57ce\u5e02\u7a7a\u95f4\u548c\u5c45\u4f4f\u7c7b\u578b\u7684\u7535\u5f71\u63a2\u7d22\uff0c\u4e0e\u77e5\u540d\u8bbe\u8ba1\u5e08\u5c31\u4ed6\u4eec\u7684\u5de5\u4f5c\u3001\u521b\u4f5c\u8fc7\u7a0b\u4ee5\u53ca\u4ed6\u4eec\u4f7f\u7528\u5b57\u4f53\u80cc\u540e\u7684\u9009\u62e9\u548c\u7f8e\u5b66\u8fdb\u884c\u4e86\u6d41\u7545\u7684\u8ba8\u8bba\u3002Helvetica\u6db5\u76d6\u4e86\u8bbe\u8ba1\u3001\u5e7f\u544a\u3001\u5fc3\u7406\u548c\u6c9f\u901a\u7684\u4e16\u754c\uff0c\u5e76\u9080\u8bf7\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u6211\u4eec\u6bcf\u5929\u770b\u5230\u7684\u6570\u5343\u4e2a\u5355\u8bcd\u3002\n\u5728Helvetica\u63a5\u53d7\u91c7\u8bbf\u7684\u4eba\u5305\u62ec\u4e00\u4e9b\u8bbe\u8ba1\u754c\u6700\u6770\u51fa\u548c\u6700\u5177\u521b\u65b0\u6027\u7684\u540d\u5b57\uff0c\u5305\u62ecErik Spiekermann\u3001Matthew Carter\u3001Massimo Vignelli\u3001Wim Crouwel\u3001Hermann Zapf\u3001Neville Brody\u3001Stefan Sagmeister\u3001Michael Bierut\u3001David Carson\u3001Paula Scher\u3001Jonathan Hoefler\u3001Tobias Frere-Jones\u3001\u5b9e\u9a8c\u55b7\u6c14\u673a\u3001Michael C.Place\u3001Norm\u3001Alfred Hoffmann\u3002\n\u201c\u8fd9\u90e8\u7535\u5f71\u7684\u771f\u6b63\u6210\u5c31\u5728\u4e8e\u5b83\u603b\u4f53\u4e0a\u63d0\u9ad8\u4e86\u4f60\u7684\u773c\u529b\uff0c\u5728\u5f62\u5f0f\u4e0e\u5185\u5bb9\u3001\u827a\u672f\u4e0e\u751f\u6d3b\u4e4b\u95f4\u5efa\u7acb\u4e86\u8054\u7cfb\u3002\u201d--\u201c\u829d\u52a0\u54e5\u8bba\u575b\u62a5\u201d\nHelvetica\u4e8e2007\u5e743\u6708\u5728\u897f\u5357\u504f\u5357\u7535\u5f71\u8282\u4e0a\u4e3e\u884c\u4e86\u4e16\u754c\u9996\u6620\u5f0f\u3002\u8fd9\u90e8\u7535\u5f71\u968f\u540e\u5728\u4e16\u754c\u5404\u5730\u7684\u7535\u5f71\u8282\u3001\u7279\u522b\u6d3b\u52a8\u548c\u827a\u672f\u4e4b\u5bb6\u7535\u5f71\u9662\u5de1\u56de\u6f14\u51fa\uff0c\u572840\u4e2a\u56fd\u5bb6\u7684300\u591a\u4e2a\u57ce\u5e02\u4e0a\u6620\u3002\u8be5\u7247\u4e8e2007\u5e7411\u6708\u5728\u82f1\u56fdBBC1\u7535\u89c6\u53f0\u9996\u64ad\uff0c\u5e76\u4e8e2008\u5e74\u79cb\u5b63\u5728\u7f8e\u56fd\u516c\u5171\u5e7f\u64ad\u516c\u53f8(PBS)\u64ad\u51fa\uff0c\u4f5c\u4e3a\u827e\u7f8e\u5956\u83b7\u5956\u7cfb\u5217\u5267\u201c\u72ec\u7acb\u955c\u5934\u201d(Independent Lens)\u7684\u4e00\u90e8\u5206\u3002\u968f\u540e\uff0c\u5b83\u5728\u5176\u4ed615\u4e2a\u56fd\u5bb6\u7684\u7f51\u7edc\u4e0a\u64ad\u51fa\u3002Helvetica\u83b7\u5f97\u4e862008\u5e74\u72ec\u7acb\u7cbe\u795e\u5956\u7684\u63d0\u540d\uff0c\u5e76\u5165\u56f4\u4e86\u4f26\u6566\u8bbe\u8ba1\u535a\u7269\u9986\u7684\u201c\u5e74\u5ea6\u8bbe\u8ba1\u201d\u5956\u3002\u8fd9\u90e8\u7535\u5f71\u7684\u8282\u9009\u5728\u7ebd\u7ea6\u7684\u73b0\u4ee3\u827a\u672f\u535a\u7269\u9986\u5c55\u51fa\u3002\nHelvetica\u7531Max Miedinger\u548cEd\u00fcard Hoffmann\u4e8e1957\u5e74\u4e3a\u745e\u58eb\u660e\u7434\u65af\u5766\u7684\u54c8\u65af\u578b\u94f8\u9020\u5382\u5f00\u53d1\u3002\u572820\u4e16\u7eaa50\u5e74\u4ee3\u672b\uff0c\u6b27\u6d32\u8bbe\u8ba1\u754c\u770b\u5230\u4e86\u8001\u5f0f\u65e0\u886c\u7ebf\u5b57\u4f53\u7684\u590d\u5174\uff0c\u6bd4\u5982\u5fb7\u56fd\u9762\u5b54\u963f\u514b\u5179\u767b\u5179\u00b7\u683c\u6d1b\u7279\u65af\u514b(Akzdenz Grotesk)\u3002\u54c8\u65af\u7684\u8463\u4e8b\u970d\u592b\u66fc\u59d4\u6258\u7c73\u4e01\u683c(Miedinger)\u753b\u4e86\u4e00\u79cd\u66f4\u65b0\u7684\u65e0\u886c\u7ebf\u5b57\u4f53\uff0c\u4ee5\u589e\u52a0\u4ed6\u4eec\u7684\u4ea7\u54c1\u7ebf\u3002\u8fc8\u4e01\u683c\u66fe\u662f\u54c8\u65af\u7684\u4e00\u540d\u5458\u5de5\uff0c\u4e5f\u662f\u4e00\u540d\u81ea\u7531\u8bbe\u8ba1\u5e08\u3002\u7ed3\u679c\u88ab\u79f0\u4e3aNeue Haas Grotesk\uff0c\u4f46\u5b83\u7684\u540d\u5b57\u540e\u6765\u66f4\u540d\u4e3aHelvetica\uff0c\u6e90\u4e8eHelvetia\uff0c\u8fd9\u662f\u745e\u58eb\u7684\u62c9\u4e01\u540d\uff0c\u5f53\u65f6Haas\u7684\u5fb7\u56fd\u6bcd\u516c\u53f8Stempel\u548cLintype\u4e8e1961\u5e74\u5f00\u59cb\u5728\u56fd\u9645\u4e0a\u8425\u9500\u8fd9\u79cd\u5b57\u4f53\u3002\nHelvetica\u5728\u745e\u58eb\u8bbe\u8ba1\u7684\u6d41\u884c\u6d6a\u6f6e\u4e2d\u63a8\u51fa\uff0c\u5e76\u5728\u5e7f\u544a\u516c\u53f8\u5411\u5ba2\u6237\u9500\u552e\u8fd9\u79cd\u65b0\u8bbe\u8ba1\u98ce\u683c\u7684\u63a8\u52a8\u4e0b\uff0c\u8fc5\u901f\u51fa\u73b0\u5728\u5168\u7403\u8303\u56f4\u5185\u7684\u516c\u53f8\u6807\u5fd7\u3001\u4ea4\u901a\u7cfb\u7edf\u6807\u724c\u3001\u7f8e\u672f\u5370\u5237\u54c1\u548c\u65e0\u6570\u5176\u4ed6\u7528\u9014\u4e2d\u30021984\u5e74\uff0c\u82f9\u679c\u9ea6\u91d1\u5854(Apple Macintosh)\u7b49\u5bb6\u7528\u8ba1\u7b97\u673a\u7cfb\u7edf\u5305\u542b\u4e86\u8fd9\u79cd\u5b57\u4f53\uff0c\u8fd9\u53ea\u4f1a\u8fdb\u4e00\u6b65\u5de9\u56fa\u5b83\u7684\u666e\u904d\u6027\u3002", "note_en": "Helvetica is a cinematic exploration of urban spaces in major cities and the type that inhabits them, and a fluid discussion with renowned designers about their work, the creative process, and the choices and aesthetics behind their use of type.\u00a0 Helvetica\u00a0encompasses the worlds of design, advertising, psychology, and communication, and invites us to take a second look at the thousands of words we see every day.\n Interviewees in  Helvetica\u00a0include some of the most illustrious and innovative names in the design world, including Erik Spiekermann, Matthew Carter, Massimo Vignelli, Wim Crouwel, Hermann Zapf, Neville Brody, Stefan Sagmeister, Michael Bierut, David Carson, Paula Scher, Jonathan Hoefler, Tobias Frere-Jones, Experimental Jetset, Michael C. Place, Norm, Alfred Hoffmann, Mike Parker, Bruno Steinert, Otmar Hoefer, Leslie Savan, Rick Poynor, and Lars M\u00fcller.\n \u201cThe real achievement of the film is the way it sharpens your eye in general and makes connections between form and content, and between art and life.\u201d \u2013  Chicago Tribune\n Helvetica\u00a0had its World Premiere at the South by Southwest Film Festival in March 2007. The film subsequently toured film festivals, special events, and art house cinemas worldwide, playing in over 300 cities in 40 countries. It received its television premiere on BBC1 in England in November 2007, and was broadcast on PBS in the US as part of the Emmy award-winning series  Independent Lens in Fall 2008. It was subsequently broadcast on networks in 15 other countries.  Helvetica was nominated for a 2008 Independent Spirit Award, and was shortlisted for the Design Museum London\u2019s \u201cDesigns of the Year\u201d Award. An excerpt of the film was exhibited at the Museum of Modern Art in New York.\n  Helvetica was developed by Max Miedinger with Ed\u00fcard Hoffmann in 1957 for the Haas Type Foundry in M\u00fcnchenstein, Switzerland. In the late 1950s, the European design world saw a revival of older sans-serif typefaces such as the German face Akzidenz Grotesk. Haas\u2019 director Hoffmann commissioned Miedinger, a former employee and freelance designer, to draw an updated sans-serif typeface to add to their line. The result was called Neue Haas Grotesk, but its name was later changed to Helvetica, derived from  Helvetia,\u00a0the Latin name for Switzerland, when Haas\u2019 German parent companies Stempel and Linotype began marketing the font internationally in 1961.\n Introduced amidst a wave of popularity of Swiss design, and fueled by advertising agencies selling this new design style to their clients, Helvetica quickly appeared in corporate logos, signage for transportation systems, fine art prints, and myriad other uses worldwide. Inclusion of the font in home computer systems such as the Apple Macintosh in 1984 only further cemented its ubiquity.", "posttime": "2020-06-07 15:04:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u5e73\u9762\u8bbe\u8ba1,documentary", "title": "Helvetica\uff0c\u4e00\u90e8\u5173\u4e8e\u6392\u7248\u3001\u5e73\u9762\u8bbe\u8ba1\u548c\u5168\u7403\u89c6\u89c9\u6587\u5316\u7684\u7eaa\u5f55\u7247", "title_en": "Helvetica, a documentary on typography, graphic design and global visual culture", "transed": 1, "url": "https://www.hustwit.com/helvetica", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u5e73\u9762\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "de852ed0d093c4d0c747a30da3e78423.jpeg", "infoid": 1005537, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u53cd\u79cd\u65cf\u4e3b\u4e49\u6297\u8bae\u6d3b\u52a8\u5728\u7f8e\u56fd\u5404\u5730\u8086\u8650\uff0c\u9999\u6e2f\u6d3b\u52a8\u4eba\u58eb\u6b63\u7ad9\u5728\u4e00\u65c1\u63d0\u4f9b\u8fdc\u65b9\u7684\u6307\u5bfc\u3002", "note_en": "As anti-racism protests rage across the U.S., Hong Kong activists are standing by to offer guidance from afar.", "posttime": "2020-06-07 14:48:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91c7\u53d6,cones,\u6d3b\u52a8", "title": "\u4ea4\u901a\u9525\u3001\u5439\u53f6\u673a\u548c\u5176\u4ed6\u7f8e\u56fd\u6297\u8bae\u8005\u4ece\u9999\u6e2f\u91c7\u53d6\u7684\u7b56\u7565", "title_en": "Traffic Cones, Leaf Blowers, & Other Tactics US Protesters Take from Hong Kong", "transed": 1, "url": "https://www.vice.com/en_us/article/g5pq5j/traffic-cones-leaf-blowers-and-other-brilliant-tactics-us-protesters-are-taking-from-hong-kongs-playbook", "via": "", "real_tags": ["\u91c7\u53d6", "cones", "\u6d3b\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\u6211\u77e5\u9053\uff0c\u6709\u5f88\u591a\u4ea7\u54c1\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\uff0c\u4ece\u7cdf\u7cd5\u7684\u5f00\u6e90\u5230\u4e0d\u90a3\u4e48\u7cdf\u7cd5\u7684\u5f00\u6e90(\u9700\u8981Linux)\uff0c\u5230\u7cdf\u7cd5\u7684\u5c01\u95ed\u6e90\u4ee3\u7801\uff0c\u518d\u5230\u6781\u5176\u6602\u8d35\u7684\u786c\u4ef6\u52a0\u5bc6\u72d7\u5c01\u95ed\u6e90\u4ee3\u7801\u3002\u90a3\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5199\u53e6\u4e00\u4e2a\u7f16\u8f91\u5462\uff1f\u56e0\u4e3a\u6211\u505a\u7684\u4e1c\u897f\u6b63\u597d\u7b26\u5408\u6211\u60f3\u8981\u4f7f\u7528\u7684\u7c7b\u522b\u3002\u5b83\u5f88\u50cf\u62c9\u65af\u7ef4\u52a0\u65af(\u6ca1\u6709\u89c6\u9891\u529f\u80fd)\uff0c\u4f46\u6709\u6211\u4e00\u76f4\u5e0c\u671b\u62c9\u65af\u7ef4\u52a0\u65af\u6709\u7684\u529f\u80fd\u3002\u6211\u5f88\u5feb\u5c31\u4f1a\u53d1\u5e03\u4e00\u4e9bAlpha\u7248\u672c\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u8fd8\u6ca1\u6709\u51b3\u5b9a\u5982\u4f55\u53d1\u5e03\u5b83\u3002\u6211\u771f\u7684\u5f88\u60f3\u518d\u505a\u4e00\u4e9b\u6ca1\u6709\u7ea0\u7f20\u7684\u5171\u4eab\u8f6f\u4ef6\u3002\u81f3\u5c11\u5b83\u4f1a\u6709\u975e\u5e38\u5408\u7406\u7684\u516c\u5171\u63d2\u4ef6API\uff0c\u4f7f\u5f97\u5b83\u5f88\u5bb9\u6613\u6269\u5c55\uff0c\u4e5f\u8bb8\u5b83\u4e5f\u4f1a\u5f00\u6e90\uff0c\u6211\u4e0d\u77e5\u9053\u3002\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u3002\u73b0\u5728\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f62\u8c61\uff1a\u6709\u5f88\u591a\u4e8b\u60c5\u8981\u505a\uff0c\u8fd9\u8ba9\u6211\u5f88\u5174\u594b\uff0c\u4f46\u5b83\u5df2\u7ecf\u5f88\u6709\u7528\u4e86\uff0c\u800c\u4e14\u5df2\u7ecf\u505a\u5f97\u5f88\u597d\u4e86\uff0c\u800c\u6211\u7528\u8fc7\u7684\u5176\u4ed6\u8f6f\u4ef6\u505a\u5f97\u4e0d\u597d\u3002\u4f46\u73b0\u5728\uff0c\u6211\u8981\u53bb\u505a\u5176\u4ed6\u7684\u4e8b\u3002\u597d\u73a9\uff0c\u597d\u73a9\uff0c\u597d\u73a9\u3002\u656c\u8bf7\u5173\u6ce8\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u53d1\u5e03Alpha\uff0c\u5e76\u6709\u671b\u5728\u5723\u8bde\u8282\u524d\u53d1\u5e03V0.9\u6d4b\u8bd5\u7248\u3002\u6211\u9762\u4e34\u7684\u6700\u5927\u969c\u788d\u662f\u5bf9DirectX\u548cVST\u63d2\u4ef6\u7684\u652f\u6301\uff0c\u56e0\u4e3a\u6258\u7ba1\u5b83\u4eec\u7684API\u4f3c\u4e4e\u5f88\u9ebb\u70e6(\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0cDirectX\uff0c\u6211\u8fd8\u6ca1\u6709\u7814\u7a76\u8fc7VST\u6258\u7ba1API)\u3002\u76ee\u524d\u6211\u53ea\u662f\u96c6\u6210\u4e86Jesusonic\uff0c\u8fd9\u975e\u5e38\u7b80\u5355(\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u5408\u7406\u7684API\uff0c\u4e0d\u9700\u8981\u6076\u5fc3\u7684\u602a\u7269DirectShow)\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u8bf7\u7559\u610f\u8fd9\u7bc7\u6587\u7ae0\u7684\u8bc4\u8bba\uff0c\u6211\u5f88\u53ef\u80fd\u53ea\u4f1a\u5728\u90a3\u91cc\u8d34\u4e0a\u94fe\u63a5\u2026\u3002\u6700\u540e\uff0cNINJAM\u7684\u7528\u6237\u4eec\uff0c\u671f\u5f85\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u53d1\u5e03\u65b0\u7684Windows\u5ba2\u6237\u7aef\uff0c\u5e76\u5bf9\u97f3\u9891\u7cfb\u7edf\u8fdb\u884c\u4e00\u4e9b\u6539\u8fdb\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u63d0\u9ad8\u8bb0\u5f55\u5faa\u73af\u8ba1\u65f6\u7684\u7cbe\u786e\u5ea6(\u76ee\u524d\u5b83\u4e0d\u4f1a\u592a\u8fdc\uff0c\u4f46\u53ef\u80fd\u4f1a\u597d\u5f97\u591a)\u3002", "note_en": "Now I know, there are many products that fall into this category, ranging from crappy open sourceto not so crappy open source (requiring linux) to crappy closed source to super insanely expensive hardware-dongled closed source. So why am I writing yet another editor? Because I&#39;m making something that fits the category of being exactly what I want to use. It&#39;s mostly like Vegas (without the video capability), butwith features that I always wish Vegas had.  I will be posting some alpha builds soon, but in general I haven&#39;t decided on how to release it.I&#39;m really tempted to do some nag-free shareware again. At the very least it will have verysensible public plug-in APIs that make it easy to extend, and maybe it&#39;ll go open source too, Idon&#39;t know. We&#39;ll see. For now, here&#39;s an image: There&#39;s a lot to do, which I&#39;m excited about, but it&#39;s already quite usable, and alreadydoes things well that other software I&#39;ve used does poorly. But now, I need to go do everything else. Fun fun fun. Stay tuned, I&#39;ll be posting the alphas in here, and hopefullya v0.9 beta type release by Christmas. The biggest obstacle I face is DirectX and VST plug-insupport, since the APIs for hosting them seem to be a pain (well, DirectX, anyway, I haven&#39;tlooked at the VST hosting API yet) . At the moment I just have Jesusonic integrated, which is super easy (since it has a reasonableAPI that doesn&#39;t require the disgusting monster that is DirectShow). Keep an eye on the comments of this article if you are interested, I&#39;ll likely just post links in there... Finally, NINJAM users, expect a new release of the Windows client in the not too distant future,with some of the improvements to the audio system I&#39;ve been making for this. Specifically, increasing the accuracy of the timing of the recorded loops (currently it&#39;s not too far off butit could be a lot better).", "posttime": "2020-06-07 14:31:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9879\u76ee,multi,\u53d1\u5e03", "title": "\u4e00\u4e2a\u65b0\u9879\u76ee\uff1a\u591a\u8f68\u97f3\u9891\u7f16\u8f91(2005)", "title_en": "A new project: multi-track audio editing (2005)", "transed": 1, "url": "http://www.1014.org/index.php?article=283", "via": "", "real_tags": ["\u9879\u76ee", "multi", "\u53d1\u5e03"]}, {"category": "", "categoryclass": "", "imagename": "5cd7dc3756cfa8173e0f22284a5bda35.jpg", "infoid": 1005534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5bfc\u822a\u8df3\u8f6c\u641c\u7d22555\u5b9a\u65f6\u5668IC\u662f\u4e00\u6b3e\u96c6\u6210\u7535\u8def(\u82af\u7247)\uff0c\u7528\u4e8e\u5404\u79cd\u5b9a\u65f6\u5668\u3001\u5ef6\u8fdf\u3001\u8109\u51b2\u4ea7\u751f\u548c\u632f\u8361\u5668\u5e94\u7528\u3002\u884d\u751f\u54c1\u5728\u4e00\u4e2a\u5c01\u88c5\u4e2d\u63d0\u4f9b\u4e24(556)\u6216\u56db(558)\u4e2a\u5b9a\u65f6\u7535\u8def\u3002[2]Signetics\u4e8e1972\u5e74\u63a8\u51fa\u4e86555\uff0c[4]\u7531\u4e8e\u5176\u4ef7\u683c\u4f4e\u5ec9\u3001\u6613\u4e8e\u4f7f\u7528\u548c\u7a33\u5b9a\u6027\uff0c555\u81f3\u4eca\u4ecd\u5728\u5e7f\u6cdb\u4f7f\u7528\u3002\u8bb8\u591a\u516c\u53f8\u4e5f\u5236\u9020\u4e86\u539f\u59cb\u7684\u53cc\u6781\u5b9a\u65f6\u5668\u548c\u7c7b\u4f3c\u7684\u4f4e\u529f\u8017CMOS\u5b9a\u65f6\u5668\u3002\u622a\u81f32003\u5e74\uff0c\u4f30\u8ba1\u6bcf\u5e74\u751f\u4ea710\u4ebf\u53f0\u3002[5]555\u662f\u6709\u53f2\u4ee5\u6765\u6700\u53d7\u6b22\u8fce\u7684\u96c6\u6210\u7535\u8def\u3002[6][7]\u3002\n\u5b9a\u65f6\u5668IC\u662f\u6c49\u65af\u00b7\u5361\u95e8\u8f9b\u5fb7\u4e8e1971\u5e74\u6839\u636e\u4e0eSignetics\u7684\u5408\u540c\u8bbe\u8ba1\u7684\u30021968\u5e74\uff0c\u4ed6\u53d7\u96c7\u4e8eSignetics\u5f00\u53d1\u9501\u76f8\u73af(PLL)IC\u3002\u4ed6\u4e3a\u9501\u76f8\u73af\u8bbe\u8ba1\u4e86\u4e00\u79cd\u632f\u8361\u5668\uff0c\u4f7f\u9891\u7387\u4e0d\u4f9d\u8d56\u4e8e\u7535\u6e90\u7535\u538b\u6216\u6e29\u5ea6\u3002\u7531\u4e8e1970\u5e74\u7684\u7ecf\u6d4e\u8870\u9000\uff0cSignetics\u968f\u540e\u89e3\u96c7\u4e86\u4e00\u534a\u7684\u5458\u5de5\uff0cPLL\u7684\u53d1\u5c55\u56e0\u6b64\u51bb\u7ed3\u3002[8]\u5361\u95e8\u8f9b\u5fb7\u63d0\u8bae\u5f00\u53d1\u4e00\u79cd\u57fa\u4e8ePLL\u632f\u8361\u5668\u7684\u901a\u7528\u7535\u8def\uff0c\u5e76\u8981\u6c42\u4ed6\u5411Signetics\u501f\u7528\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u8ba9\u4ed6\u7684\u5de5\u8d44\u51cf\u534a\uff0c\u5355\u72ec\u5f00\u53d1\u8fd9\u4e00\u7535\u8def\u3002\u5176\u4ed6\u5de5\u7a0b\u5e08\u4e89\u8fa9\u8bf4\uff0c\u8be5\u4ea7\u54c1\u53ef\u4ee5\u7528\u73b0\u6709\u7684\u90e8\u4ef6\u5236\u9020\uff1b\u7136\u800c\uff0c\u8425\u9500\u7ecf\u7406\u6279\u51c6\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u3002\n555\u7684\u7b2c\u4e00\u4e2a\u8bbe\u8ba1\u662f\u57281971\u5e74\u590f\u5929\u5ba1\u67e5\u7684\u3002\u7ecf\u8bc4\u5b9a\u65e0\u8bef\u540e\uff0c\u8fdb\u884c\u7248\u56fe\u8bbe\u8ba1\u3002\u51e0\u5929\u540e\uff0c\u5361\u95e8\u8f9b\u5fb7\u840c\u751f\u4e86\u7528\u76f4\u6d41\u7535\u963b\u6e90\u4ee3\u66ff\u6052\u6d41\u6e90\u7684\u60f3\u6cd5\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u662f\u53ef\u884c\u7684\u3002\u8fd9\u4e00\u6539\u53d8\u5c06\u6240\u9700\u76849\u9488\u51cf\u5c11\u52308\u9488\uff0c\u56e0\u6b64IC\u53ef\u4ee5\u5b89\u88c5\u57288\u9488\u5c01\u88c5\u4e2d\uff0c\u800c\u4e0d\u662f14\u9488\u5c01\u88c5\u4e2d\u3002\u8fd9\u4e00\u4fee\u8ba2\u8bbe\u8ba1\u901a\u8fc7\u4e86\u7b2c\u4e8c\u6b21\u8bbe\u8ba1\u5ba1\u67e5\uff0c\u539f\u578b\u4e8e1971\u5e7410\u6708\u5b8c\u6210\uff0c\u5206\u522b\u4e3aNE555V(\u5851\u6599\u6d78\u6e0d)\u548cSE555T(\u91d1\u5c5eTO-5)\u3002[5]9\u9488\u7684\u590d\u5236\u54c1\u5df2\u7ecf\u7531\u53e6\u4e00\u5bb6\u516c\u53f8\u53d1\u5e03\uff0c\u8be5\u516c\u53f8\u7684\u521b\u59cb\u4eba\u662f\u4e00\u540d\u53c2\u52a0\u4e86\u7b2c\u4e00\u6b21\u5ba1\u67e5\u5e76\u4eceSignetics\u9000\u4f11\u7684\u5de5\u7a0b\u5e08\uff1b\u8be5\u516c\u53f8\u5728555\u53d1\u5e03\u540e\u4e0d\u4e45\u5c31\u64a4\u56de\u4e86\u7248\u672c\u3002[8]555\u5b9a\u65f6\u5668\u4e8e1972\u5e74\u753112\u5bb6\u516c\u53f8\u751f\u4ea7\uff0c\u5e76\u6210\u4e3a\u6700\u7545\u9500\u7684\u4ea7\u54c1\u3002[8]\u3002\n\u540e\u6765\uff0c\u6c49\u65af\u00b7\u5361\u95e8\u8f9b\u5fb7\u4e3aZetex\u534a\u5bfc\u4f53\u8bbe\u8ba1\u4e86ZSCT1555\u5b9a\u65f6\u5668\uff0c\u8be5\u5b9a\u65f6\u5668\u5df2\u4e0d\u518d\u751f\u4ea7\u3002\n\u6709\u4eba\u9519\u8bef\u5730\u5047\u8bbe\uff0c555\u578b\u7684\u540d\u5b57\u6765\u81ea\u4e8e\u53cc\u6781IC\u5185\u7684\u4e09\u4e2a5kK\u7684\u03a9\u7535\u963b\u5668\u3002[9]\u6c49\u65af\u00b7\u5361\u95e8\u8f9b\u5fb7\u66fe\u8868\u793a\uff0c\u96f6\u4ef6\u7f16\u53f7\u662f\u4efb\u610f\u7684\uff0c\u56e0\u6b64\u4ed6\u4eec\u5339\u914d\u53ea\u662f\u4e00\u4e2a\u5de7\u5408\u3002[5][8]\u539f\u897f\u683c\u78c1\u96f6\u4ef6\u53f7NE555\u548cSE555\u7684\u524d\u7f00\u5b57\u6bcd&#34\uff1bNE&#34\uff1b\u548c&#34\uff1bSE&#34\uff1b\u662f\u6a21\u62df\u82af\u7247\u7684\u6e29\u5ea6\u4ee3\u53f7\uff0c\u5176\u4e2d&#34\uff1bNE&34\uff1b\u662f\u5546\u7528\u6e29\u5ea6\u7cfb\u5217\uff0c&#34\uff1bSE&#34\uff1b\u662f\u519b\u7528\u6e29\u5ea6\u7cfb\u5217\u3002\n\u6839\u636e\u5236\u9020\u5546\u7684\u4e0d\u540c\uff0c\u6807\u51c6555\u5c01\u88c5\u5728\u4e00\u4e2a\u7845\u82af\u7247\u4e0a\u5305\u62ec25\u4e2a\u6676\u4f53\u7ba1\u30012\u4e2a\u4e8c\u6781\u7ba1\u548c15\u4e2a\u7535\u963b\u5668\uff0c\u5b83\u4eec\u5b89\u88c5\u57288\u5f15\u811a\u53cc\u5217\u76f4\u63d2\u5f0f\u5c01\u88c5(DIP-8)\u4e2d\u3002[10]\u53ef\u7528\u7684\u53d8\u4f53\u5305\u62ec556(\u5c06\u4e24\u4e2a\u5b8c\u6574\u7684555\u7ec4\u5408\u5728\u4e00\u4e2a\u82af\u7247\u4e0a\u7684DIP-14)\u3001[11]\u548c558/559(\u4e24\u8005\u90fd\u662f\u5728\u4e00\u4e2a\u82af\u7247\u4e0a\u7ec4\u5408\u56db\u4e2a\u529f\u80fd\u964d\u4f4e\u7684\u5b9a\u65f6\u5668\u7684DIP-16)\u3002[2]\u3002\nNE555\u90e8\u4ef6\u7684\u5546\u7528\u6e29\u5ea6\u8303\u56f4\u4e3a0\u00b0C\u81f3+70\u00b0C\uff0cSE555\u90e8\u4ef6\u53f7\u6307\u5b9a\u7684\u519b\u7528\u6e29\u5ea6\u8303\u56f4\u4e3a\u221255\u00b0C\u81f3+125C\u3002\u8fd9\u4e9b\u90e8\u4ef6\u63d0\u4f9b\u9ad8\u53ef\u9760\u6027\u91d1\u5c5e\u7f50(T\u5c01\u88c5)\u548c\u5ec9\u4ef7\u7684\u73af\u6c27\u5851\u6599(V\u5c01\u88c5)\u5c01\u88c5\u3002\u56e0\u6b64\uff0c\u5b8c\u6574\u7684\u90e8\u4ef6\u53f7\u4e3aNE555V\u3001NE555T\u3001SE555V\u548cSE555T\u3002\n\u8fd8\u63d0\u4f9b555\u7684\u4f4e\u529f\u8017CMOS\u7248\u672c\uff0c\u4f8b\u5982Intersil ICM7555\u548cTexas Instruments LMC555\u3001TLC555\u548cTLC551\u3002[12][13][14][15]CMOS\u5b9a\u65f6\u5668\u6bd4\u53cc\u6781\u5b9a\u65f6\u5668\u529f\u8017\u4f4e\u5f97\u591a\uff1b\u5f53\u8f93\u51fa\u5f00\u5173\u5904\u4e8e\u72b6\u6001\u65f6\uff0cCMOS\u5b9a\u65f6\u5668\u4e5f\u6bd4\u53cc\u6781\u5b9a\u65f6\u5668\u4ea7\u751f\u66f4\u4f4e\u7684\u7535\u6e90\u566a\u58f0\u3002[\u9700\u8981\u5f15\u7528]\n555\u5b9a\u65f6\u5668\u7684\u5185\u90e8\u6846\u56fe\u548c\u539f\u7406\u56fe\u5728\u6240\u6709\u4e09\u5f20\u56fe\u4e2d\u90fd\u7528\u76f8\u540c\u7684\u989c\u8272\u7a81\u51fa\u663e\u793a\uff0c\u4ee5\u9610\u660e\u82af\u7247\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1a[2]\u3002\n\u7eff\u8272\uff1a\u5728\u6b63\u7535\u6e90\u7535\u538bV CC\u548c\u5730\u63a5\u5730\u4e4b\u95f4\u662f\u7531\u4e09\u4e2a\u76f8\u540c\u7535\u963b\u5668\u7ec4\u6210\u7684\u5206\u538b\u5668\uff0c\u5728\u200b1\u20443 V CC\u548c\u200b2\u20443 V CC\u5904\u4ea7\u751f\u4e24\u4e2a\u53c2\u8003\u7535\u538b\u3002\u540e\u8005\u8fde\u63a5\u5230\u63a7\u5236\u7535\u538b\u5f15\u811a\u3002\u8fd9\u4e09\u4e2a\u7535\u963b\u5668\u5177\u6709\u76f8\u540c\u7684\u7535\u963b\uff0c\u53cc\u6781\u6027\u5b9a\u65f6\u5668\u4e3a5k\u03a9\uff0cCMOS\u5b9a\u65f6\u5668\u4e3a100k\u03a9(\u6216\u66f4\u9ad8)\u3002555IC\u5f97\u540d\u4e8e\u8fd9\u4e09\u4e2a5\u82f1\u5c3a\u03a9\u7535\u963b\u5668\u7684\u8bf4\u6cd5\u7eaf\u5c5e\u865a\u6784\u3002[5]\u3002\n\u9ec4\u8272\uff1a\u6bd4\u8f83\u5668\u8d1f\u8f93\u5165\u8fde\u63a5\u5230\u200b2\u20443V CC\u7684\u8f83\u9ad8\u53c2\u8003\u5206\u538b\u5668(\u548c\u63a7\u5236\u5f15\u811a)\uff0c\u6bd4\u8f83\u5668\u6b63\u8f93\u5165\u8fde\u63a5\u5230\u9608\u503c\u5f15\u811a\u3002\n\u7ea2\u8272\uff1a\u6bd4\u8f83\u5668\u6b63\u8f93\u5165\u8fde\u63a5\u5230\u200b1\u20443V CC\u7684\u4f4e\u53c2\u8003\u5206\u538b\u5668\uff0c\u6bd4\u8f83\u5668\u8d1f\u8f93\u5165\u8fde\u63a5\u5230\u89e6\u53d1\u5668\u5f15\u811a\u3002\n\u7d2b\u8272\uff1aSR\u89e6\u53d1\u5668\u5b58\u50a8\u5b9a\u65f6\u5668\u7684\u72b6\u6001\uff0c\u5e76\u7531\u4e24\u4e2a\u6bd4\u8f83\u5668\u63a7\u5236\u3002\u590d\u4f4d\u5f15\u811a\u8986\u76d6\u5176\u4ed6\u4e24\u4e2a\u8f93\u5165\uff0c\u56e0\u6b64\u89e6\u53d1\u5668(\u4ee5\u53ca\u6574\u4e2a\u5b9a\u65f6\u5668)\u53ef\u4ee5\u968f\u65f6\u590d\u4f4d\u3002\n\u7c89\u8272\uff1a\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4e4b\u540e\u662f\u5e26\u63a8\u633d\u7684\u8f93\u51fa\u7ea7(P.P.)\u3002\u8f93\u51fa\u9a71\u52a8\u5668\u53ef\u52a0\u8f7d\u8f93\u51fa\u5f15\u811a\uff0c\u53cc\u6781\u6027\u5b9a\u65f6\u5668\u6700\u9ad8\u53ef\u52a0\u8f7d200 mA\uff0cCMOS\u5b9a\u65f6\u5668\u6700\u9ad8\u53ef\u52a0\u8f7d200 mA\u3002\n\u9752\u8272\uff1a\u8fd8\u6709\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u63a5\u901a\u4e00\u4e2a\u6676\u4f53\u7ba1\uff0c\u8be5\u6676\u4f53\u7ba1\u5c06\u653e\u7535\u5f15\u811a\u8fde\u63a5\u5230\u5730\u3002\n\u4e0b\u8868\u663e\u793a\u4e868\u9488555\u5b9a\u65f6\u5668\u548c14\u9488556\u53cc\u5b9a\u65f6\u5668\u7684\u5f15\u811a\u3002556\u5185\u90e8\u7684\u4e24\u4e2a\u5b9a\u65f6\u5668\u5206\u6210\u4e24\u5217\u3002[2][1][16]\n\u89e6\u53d1\uff1a\u5f53\u6b64\u5f15\u811a\u4e0a\u7684\u7535\u538b\u4f4e\u4e8eCONT\u5f15\u811a\u7535\u538b\u7684\u200b1\u20442(\u200b1\u20443 V CC\uff0c\u9664\u975eCONT\u7531\u5916\u90e8\u4fe1\u53f7\u9a71\u52a8\u65f6)\uff0cOUT\u5f15\u811a\u53d8\u4e3a\u9ad8\u7535\u5e73\uff0c\u5e76\u5f00\u59cb\u8ba1\u65f6\u95f4\u9694\u3002\u53ea\u8981\u8be5\u5f15\u811a\u7ee7\u7eed\u4fdd\u6301\u4f4e\u7535\u538b\uff0cOUT\u5f15\u811a\u5c31\u4f1a\u4fdd\u6301\u9ad8\u7535\u5e73\u3002\n\u8f93\u51fa\uff1a\u6b64\u5f15\u811a\u4e3a\u63a8\u633d(P.P.)\u3002\u88ab\u9a71\u52a8\u5230\u4f4e\u72b6\u6001(GND\u5f15\u811a)\u6216\u9ad8\u72b6\u6001(\u5bf9\u4e8e\u53cc\u6781\u5b9a\u65f6\u5668\uff0cV CC\u5f15\u811a\u51cf\u53bb\u5927\u7ea61.7\u4f0f)(\u5bf9\u4e8eCMOS\u5b9a\u65f6\u5668\uff0cV CC\u5f15\u811a)\u7684\u8f93\u51fa\u3002\u5bf9\u4e8e\u53cc\u6781\u5b9a\u65f6\u5668\uff0c\u8be5\u5f15\u811a\u53ef\u4ee5\u9a71\u52a8\u9ad8\u8fbe200 mA\uff0c\u4f46CMOS\u5b9a\u65f6\u5668\u80fd\u591f\u9a71\u52a8\u8f83\u5c11(\u56e0\u82af\u7247\u800c\u5f02)\u3002\u5bf9\u4e8e\u53cc\u6781\u5b9a\u65f6\u5668\uff0c\u5982\u679c\u6b64\u5f15\u811a\u9a71\u52a8\u6570\u5b57\u903b\u8f91\u82af\u7247\u7684\u8fb9\u7f18\u654f\u611f\u8f93\u5165\uff0c\u5219\u53ef\u80fd\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a100\u81f31000 pF\u7684\u53bb\u8026\u7535\u5bb9\u5668(\u5728\u6b64\u5f15\u811a\u548cGND\u4e4b\u95f4)\uff0c\u4ee5\u9632\u6b62\u53cc\u91cd\u89e6\u53d1\u3002[2]\u3002\n\u590d\u4f4d\uff1a\u53ef\u901a\u8fc7\u5c06\u6b64\u5f15\u811a\u9a71\u52a8\u5230GND\u6765\u91cd\u7f6e\u8ba1\u65f6\u95f4\u9694\uff0c\u4f46\u5728\u6b64\u5f15\u811a\u4e0a\u5347\u5230\u7ea60.7\u4f0f\u4ee5\u4e0a\u4e4b\u524d\uff0c\u8ba1\u65f6\u4e0d\u4f1a\u518d\u6b21\u5f00\u59cb\u3002\u6b64\u5f15\u811a\u8986\u76d6\u89e6\u53d1\u5668\uff0c\u800c\u89e6\u53d1\u5668\u53c8\u8986\u76d6\u9608\u503c\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u6b64\u5f15\u811a\uff0c\u5219\u5e94\u5c06\u5176\u8fde\u63a5\u5230V cc\uff0c\u4ee5\u9632\u6b62\u7535\u6c14\u566a\u58f0\u5bfc\u81f4\u590d\u4f4d\u3002\n\u63a7\u5236(\u6216\u63a7\u5236\u7535\u538b)\uff1a\u6b64\u5f15\u811a\u63d0\u4f9b\u5bf9\u5185\u90e8\u5206\u538b\u5668(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u200b2\u20443 V CC)\u7684\u8bbf\u95ee\u3002\u901a\u8fc7\u5411\u8be5\u5f15\u811a\u65bd\u52a0\u7535\u538b\uff0c\u53ef\u4ee5\u6539\u53d8\u5b9a\u65f6\u7279\u6027\u3002\u5728\u4e0d\u7a33\u5b9a\u6a21\u5f0f\u4e0b\uff0c\u8be5\u5f15\u811a\u53ef\u7528\u4e8e\u5bf9\u8f93\u51fa\u8fdb\u884c\u8c03\u9891\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u6b64\u5f15\u811a\uff0c\u5e94\u5c06\u5176\u8fde\u63a5\u523010 nF\u53bb\u8026\u7535\u5bb9\u5668(\u6b64\u5f15\u811a\u548c\u63a5\u5730\u4e4b\u95f4)\uff0c\u4ee5\u786e\u4fdd\u7535\u6c14\u566a\u58f0\u4e0d\u4f1a\u5f71\u54cd\u5185\u90e8\u5206\u538b\u5668\u3002[2]\u3002\n\u9608\u503c\uff1a\u5f53\u6b64\u5f15\u811a\u4e0a\u7684\u7535\u538b\u5927\u4e8eCONT\u5f15\u811a\u4e0a\u7684\u7535\u538b\u65f6(\u200b2\u20443 V CC\uff0c\u9664\u975eCONT\u7531\u5916\u90e8\u4fe1\u53f7\u9a71\u52a8)\uff0c\u5219OUT\u9ad8\u7535\u5e73\u8ba1\u65f6\u95f4\u9694\u7ed3\u675f\uff0c\u5bfc\u81f4\u8f93\u51fa\u53d8\u4f4e\u3002\n\u653e\u7535\uff1a\u5bf9\u4e8e\u53cc\u6781\u65f6\u4ee3\uff0c\u6b64\u5f15\u811a\u662f\u5f00\u8def\u96c6\u7535\u6781(O.C.)\u3002\u5728\u8f93\u51fa\u7aef\uff0cCMOS\u5b9a\u65f6\u5668\u4e3a\u5f00\u6f0fO.D\u3002\u6b64\u5f15\u811a\u53ef\u7528\u4e8e\u5728\u95f4\u9694\u4e4b\u95f4\u4e0e\u8f93\u51fa\u540c\u76f8\u5730\u5bf9\u7535\u5bb9\u5668\u8fdb\u884c\u653e\u7535\u3002\u5728\u53cc\u7a33\u6001\u6a21\u5f0f\u548c\u65bd\u5bc6\u7279\u89e6\u53d1\u6a21\u5f0f\u4e0b\uff0c\u8be5\u5f15\u811a\u672a\u4f7f\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4f5c\u5907\u7528\u8f93\u51fa\u3002\n\u6b63\u7535\u6e90\uff1a\u5bf9\u4e8e\u53cc\u6781\u5b9a\u65f6\u5668\uff0c\u7535\u538b\u8303\u56f4\u901a\u5e38\u4e3a4.5\u81f316\u4f0f\uff0c\u6709\u4e9b\u89c4\u683c\u9ad8\u8fbe18\u4f0f\uff0c\u5c3d\u7ba1\u5927\u591a\u6570\u5c06\u4f4e\u81f33\u4f0f\u3002\u5bf9\u4e8eCMOS\u5b9a\u65f6\u5668\uff0c\u7535\u538b\u8303\u56f4\u901a\u5e38\u4e3a2\u81f315\u4f0f\uff0c\u6709\u4e9b\u89c4\u683c\u9ad8\u8fbe18\u4f0f\uff0c\u6709\u4e9b\u89c4\u683c\u4f4e\u81f31\u4f0f\u3002\u8bf7\u53c2\u9605\u672c\u6587\u884d\u751f\u54c1\u8868\u683c\u4e2d\u7684Supply Min\u548cMax\u5217\u3002\u5bf9\u4e8e\u53cc\u6781\u5b9a\u65f6\u5668\uff0c\u7531\u4e8e\u8f93\u51fa\u5207\u6362\u671f\u95f4\u7684\u7535\u6d41\u6d6a\u6d8c\uff0c\u9700\u8981\u4e00\u4e2a\u6216\u591a\u4e2a\u53bb\u8026\u7535\u5bb9\u5668(\u5728\u6b64\u5f15\u811a\u548cGND\u4e4b\u95f4)\u3002[2]\u3002\n\u7a33\u5b9a(\u81ea\u7531\u8fd0\u884c)\u6a21\u5f0f-555\u53ef\u4ee5\u4f5c\u4e3a\u7535\u5b50\u632f\u8361\u5668\u8fd0\u884c\u3002\u7528\u9014\u5305\u62ecLED\u548c\u706f\u95ea\u5149\u5668\u3001\u8109\u51b2\u4ea7\u751f\u3001\u903b\u8f91\u65f6\u949f\u3001\u97f3\u8c03\u4ea7\u751f\u3001\u5b89\u5168\u62a5\u8b66\u3001\u8109\u51b2\u4f4d\u7f6e\u8c03\u5236\u7b49\u3002555\u53ef\u4ee5\u7528\u4f5c\u7b80\u5355\u7684ADC\uff0c\u5c06\u6a21\u62df\u503c\u8f6c\u6362\u4e3a\u8109\u51b2\u957f\u5ea6(\u4f8b\u5982\uff0c\u9009\u62e9\u70ed\u654f\u7535\u963b\u4f5c\u4e3a\u5b9a\u65f6\u7535\u963b\u5668\u5141\u8bb8\u5728\u6e29\u5ea6\u4f20\u611f\u5668\u4e2d\u4f7f\u7528555\uff0c\u5e76\u4e14\u8f93\u51fa\u8109\u51b2\u7684\u5468\u671f\u7531\u6e29\u5ea6\u786e\u5b9a)\u3002\u7136\u540e\uff0c\u4f7f\u7528\u57fa\u4e8e\u5fae\u5904\u7406\u5668\u7684\u7535\u8def\u53ef\u4ee5\u5c06\u8109\u51b2\u5468\u671f\u8f6c\u6362\u4e3a\u6e29\u5ea6\uff0c\u4f7f\u5176\u7ebf\u6027\u5316\uff0c\u751a\u81f3\u63d0\u4f9b\u6821\u51c6\u624b\u6bb5\u3002\n\u5355\u7a33\u6001(\u5355\u89e6\u53d1)\u6a21\u5f0f-\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c555\u7528\u4f5c\u5355\u89e6\u53d1\u8109\u51b2\u53d1\u751f\u5668\u3002\u5e94\u7528\u5305\u62ec\u5b9a\u65f6\u5668\u3001\u4e22\u5931\u8109\u51b2\u68c0\u6d4b\u3001\u65e0\u8df3\u5f00\u5173\u3001\u89e6\u6478\u5f00\u5173\u3001\u5206\u9891\u5668\u3001\u7535\u5bb9\u6d4b\u91cf\u3001\u8109\u5bbd\u8c03\u5236(PWM)\u7b49\u3002\n\u53cc\u7a33\u6001(\u89e6\u53d1\u5668)\u6a21\u5f0f-555\u7528\u4f5cSR\u89e6\u53d1\u5668\u3002\u7528\u9014\u5305\u62ec\u65e0\u5f39\u9501\u5f00\u5173\u3002\n\u65bd\u5bc6\u7279\u89e6\u53d1\u5668(\u9006\u53d8\u5668)\u6a21\u5f0f-555\u7528\u4f5c\u65bd\u5bc6\u7279\u89e6\u53d1\u5668\u9006\u53d8\u95e8\uff0c\u5c06\u566a\u58f0\u8f93\u5165\u8f6c\u6362\u4e3a\u5e72\u51c0\u7684\u6570\u5b57\u8f93\u51fa\u3002\n\u5728\u4e0d\u7a33\u5b9a\u914d\u7f6e\u4e2d\uff0c555\u5b9a\u65f6\u5668\u53d1\u51fa\u5177\u6709\u7279\u5b9a\u9891\u7387\u7684\u8fde\u7eed\u77e9\u5f62\u8109\u51b2\u6d41\u3002\u4f7f\u7528\u4e24\u4e2a\u7535\u963b\u5668R1{\\DisplayStyle R_{1}}\u548cR2{\\DisplayStyle R_{2}}\u548c\u4e00\u4e2a\u7535\u5bb9\u5668C{\\DisplayStyle C}\u5b9e\u73b0\u4e0d\u7a33\u5b9a\u914d\u7f6e\u3002\u5728\u6b64\u914d\u7f6e\u4e2d\uff0c\u4e0d\u4f7f\u7528\u63a7\u5236\u5f15\u811a\uff0c\u56e0\u6b64\u5b83\u901a\u8fc710 nF\u53bb\u8026\u7535\u5bb9\u5668\u8fde\u63a5\u5230\u5730\uff0c\u4ee5\u5206\u6d41\u7535\u6c14\u566a\u58f0\u3002\u9608\u503c\u548c\u89e6\u53d1\u5f15\u811a\u8fde\u63a5\u5230\u7535\u5bb9\u5668C{\\DisplayStyle C}\uff0c\u56e0\u6b64\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u7535\u538b\u3002\u6700\u521d\uff0c\u7535\u5bb9\u5668C{\\DisplayStyle C}\u4e0d\u5145\u7535\uff0c\u56e0\u6b64\u89e6\u53d1\u5f15\u811a\u63a5\u6536\u7684\u96f6\u7535\u538b\u5c0f\u4e8e\u7535\u6e90\u7535\u538b\u7684\u4e09\u5206\u4e4b\u4e00\u3002\u56e0\u6b64\uff0c\u89e6\u53d1\u5f15\u811a\u4f7f\u8f93\u51fa\u53d8\u4e3a\u9ad8\u7535\u5e73\uff0c\u5e76\u4e14\u5185\u90e8\u653e\u7535\u6676\u4f53\u7ba1\u8fdb\u5165\u622a\u6b62\u6a21\u5f0f\u3002\u7531\u4e8e\u653e\u7535\u5f15\u811a\u4e0d\u518d\u77ed\u8def\u5230\u5730\uff0c\u7535\u6d41\u901a\u8fc7\u4e24\u4e2a\u7535\u963b\u5668R1{\\Displaystyle R_{1}}\u548cR2{\\Displaystyle R_{2}}\u6d41\u5411\u4e3a\u5176\u5145\u7535\u7684\u7535\u5bb9\u5668\u3002\u7535\u5bb9\u5668C{\\displaystyle C}\u5f00\u59cb\u5145\u7535\uff0c\u76f4\u5230\u7535\u538b\u53d8\u4e3a\u7535\u6e90\u7535\u538b\u7684\u4e09\u5206\u4e4b\u4e8c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9608\u503c\u5f15\u811a\u5bfc\u81f4\u8f93\u51fa\u53d8\u4f4e\uff0c\u5185\u90e8\u653e\u7535\u6676\u4f53\u7ba1\u8fdb\u5165\u9971\u548c\u6a21\u5f0f\u3002\u56e0\u6b64\uff0c\u7535\u5bb9\u5668\u901a\u8fc7R2{\\DisplayStyle R_{2}}\u5f00\u59cb\u653e\u7535\uff0c\u76f4\u5230\u5b83\u53d8\u5f97\u5c0f\u4e8e\u7535\u6e90\u7535\u538b\u7684\u4e09\u5206\u4e4b\u4e00\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u89e6\u53d1\u5f15\u811a\u4f7f\u8f93\u51fa\u53d8\u9ad8\uff0c\u5e76\u4e14\u5185\u90e8\u653e\u7535\u6676\u4f53\u7ba1\u518d\u6b21\u8fdb\u5165\u622a\u6b62\u6a21\u5f0f\u3002\u8fd9\u6837\u7684\u5faa\u73af\u5c31\u4f1a\u91cd\u590d\u3002\n\u5728\u7b2c\u4e00\u4e2a\u8109\u51b2\u4e2d\uff0c\u7535\u5bb9\u5668\u4ece\u96f6\u5145\u7535\u5230\u7535\u6e90\u7535\u538b\u7684\u4e09\u5206\u4e4b\u4e8c\uff0c\u7136\u800c\u5728\u540e\u9762\u7684\u8109\u51b2\u4e2d\uff0c\u5b83\u53ea\u5145\u7535\u7535\u6e90\u7535\u538b\u7684\u4e09\u5206\u4e4b\u4e00\u5230\u4e09\u5206\u4e4b\u4e8c\u3002\u56e0\u6b64\uff0c\u4e0e\u540e\u9762\u7684\u8109\u51b2\u76f8\u6bd4\uff0c\u7b2c\u4e00\u4e2a\u8109\u51b2\u5177\u6709\u66f4\u957f\u7684\u9ad8\u65f6\u95f4\u95f4\u9694\u3002\u6b64\u5916\uff0c\u7535\u5bb9\u5668\u901a\u8fc7\u4e24\u4e2a\u7535\u963b\u5668\u5145\u7535\uff0c\u4f46\u53ea\u901a\u8fc7R2{\\DisplayStyle R2}}\u653e\u7535\uff0c\u56e0\u6b64\u9ad8\u95f4\u9694\u6bd4\u4f4e\u95f4\u9694\u957f\u3002\u8fd9\u5728\u4e0b\u9762\u7684\u65b9\u7a0b\u5f0f\u4e2d\u663e\u793a\u51fa\u6765\u3002\nt h i g h=ln\u2061(2)\u22c5(R1+R2)\u22c5C{\\DisplayStyle t_{\u9ad8}=\\ln(2)\\cot(R_{1}+R_{2})\\cdot C}\u3002\nt l o w=ln\u2061(2)\u22c5R 2\u22c5C{\\DisplayStyle t_{\u4f4e}=\\ln(2)\\cot R_{2}\\cdot C}\u3002\nF=1 t h i g h+t l o w=1 ln\u2061(2)\u22c5(R1+2 R2)\u22c5C{\\DisplayStyle f={\\frac{1}{t_{\u9ad8}+t_{\u4f4e}={\\frac{1}{\\ln(2)\\cot(R_{1}+2R_{2})\\cdot C}[17]\nD u t y=t h i g h t h i g h+t l o w\u22c5100{\\DisplayStyle Duty={\\frac{t_{\u9ad8}}{t_{\u9ad8}+t_{\u4f4e}\\CDOT100}\u3002\n\u5176\u4e2dt{\\DisplayStyle t}\u662f\u79d2(\u65f6\u95f4)\uff0cR{\\DisplayStyle R}\u662f\u6b27\u59c6(\u7535\u963b)\uff0cC{\\DisplayStyle C}\u662f\u6cd5\u62c9(\u7535\u5bb9)\uff0cln\u2061(2){\\DisplayStyle\\ln(2)}\u662f2\u5e38\u6570\u7684\u81ea\u7136\u5bf9\u6570\uff0c\u5b83\u662f0.693147181(\u56db\u820d\u4e94\u5165\u52309\u4e2a\u5c3e\u968f\u6570\u5b57)\uff0c\u4f46\u5728555\u65f6\u5e8f\u7c3f\u548c\u6570\u636e\u624b\u518c\u4e2d\u901a\u5e38\u56db\u820d\u4e94\u5165\u5230\u66f4\u5c11\u7684\u6570\u5b57\uff0c\u59820.7\u30010.69\u62160.693\u3002\n\u6839\u636e\u6b27\u59c6\u5b9a\u5f8b\uff0cR1{\\DisplayStyle R_{1}}\u7684W{\\DisplayStyle W}\u529f\u7387\u5bb9\u91cf\u5fc5\u987b\u5927\u4e8eV c c\u22c5V c c R 1{\\DisplayStyle{\\frac{V_{cc}\\cotV_{cc}}{R_{1}\u3002\n\u7279\u522b\u662f\u5bf9\u4e8e\u53cc\u6781555\uff0c\u5fc5\u987b\u907f\u514dR1{\\DisplayStyle R_{1}}\u7684\u4f4e\u503c\uff0c\u4ee5\u4f7f\u8f93\u51fa\u5728\u653e\u7535\u671f\u95f4\u4fdd\u6301\u5728\u63a5\u8fd1\u96f6\u7535\u538b\u7684\u9971\u548c\u72b6\u6001\uff0c\u6b63\u5982\u4e0a\u9762\u7684\u516c\u5f0f\u6240\u5047\u5b9a\u7684\u90a3\u6837\u3002\u5426\u5219\uff0c\u8f93\u51fa\u4f4e\u7535\u5e73\u65f6\u95f4\u5c06\u5927\u4e8e\u4e0a\u9762\u8ba1\u7b97\u7684\u65f6\u95f4\u3002\n\u7b2c\u4e00\u4e2a\u5faa\u73af\u82b1\u8d39\u7684\u65f6\u95f4\u5c06\u6bd4\u8ba1\u7b97\u7684\u65f6\u95f4\u957f\u5f97\u591a\uff0c\u56e0\u4e3a\u7535\u5bb9\u5668\u5fc5\u987b\u4ece\u901a\u7535\u65f6\u4ece0V\u5145\u7535\u5230V cc\u7684\u200b2\u20443\uff0c\u4f46\u5728\u968f\u540e\u7684\u5faa\u73af\u4e2d\u53ea\u80fd\u4eceV cc\u7684\u200b1\u20443\u5145\u7535\u5230V cc\u7684\u200b2\u20443\u3002\n\u4e3a\u4e86\u4f7f\u8f93\u51fa\u9ad8\u65f6\u95f4\u77ed\u4e8e\u4f4e\u65f6\u95f4(\u5373\u5360\u7a7a\u6bd4\u5c0f\u4e8e50%)\uff0c\u53ef\u4ee5\u5c06\u5feb\u901f\u4e8c\u6781\u7ba1(\u53731N4148\u4fe1\u53f7\u4e8c\u6781\u7ba1)\u4e0eR2\u5e76\u8054\u653e\u7f6e\uff0c\u9634\u6781\u4f4d\u4e8e\u7535\u5bb9\u5668\u4fa7\u3002\u8fd9\u5728\u5468\u671f\u7684\u9ad8\u4f4d\u90e8\u5206\u7ed5\u8fc7R2\uff0c\u56e0\u6b64\u9ad8\u4f4d\u95f4\u9694\u4ec5\u53d6\u51b3\u4e8eR1\u548cC\uff0c\u5e76\u57fa\u4e8e\u4e8c\u6781\u7ba1\u4e0a\u7684\u7535\u538b\u964d\u8fdb\u884c\u8c03\u6574\u3002\u4e8c\u6781\u7ba1\u4e24\u7aef\u7684\u7535\u538b\u964d\u51cf\u6162\u4e86\u7535\u5bb9\u5668\u7684\u5145\u7535\u901f\u5ea6\uff0c\u56e0\u6b64\u9ad8\u7535\u538b\u65f6\u95f4\u6bd4\u9884\u671f\u548c\u7ecf\u5e38\u5f15\u7528\u7684ln(2)*R1C=0.693 R1C\u8981\u957f\u3002\u4f4e\u65f6\u95f4\u5c06\u4e0e\u4e0a\u8ff0\u76f8\u540c\uff0c\u4e3a0.693 R 2C\u3002\u4f7f\u7528\u65c1\u8def\u4e8c\u6781\u7ba1\uff0c\u6700\u9ad8\u65f6\u95f4\u662f\u3002\nt h i g h=ln\u2061(2 V cc\u22123 V\u4e8c\u6781\u7ba1V cc\u22123 V\u4e8c\u6781\u7ba1)\u22c5R 1\u22c5C{\\DisplayStyle t_{\u9ad8}=\\ln\\Left({\\FRAC{2V_{\\tExtrm{cc}}-3V_{\\tExtrm{\u4e8c\u6781\u7ba1}{V_{\\texm{cc}}\u3002-3V_{\\tExtrm{\u4e8c\u6781\u7ba1}\\\u53f3)\\CDOT R_{1}\\CDOT C}\u3002\n\u5176\u4e2d\uff0cV\u4e8c\u6781\u7ba1\u662f\u6307\u4e8c\u6781\u7ba1\u5bfc\u901a\u7535\u6d41\u4e3aV cc/R 1\u7684\u200b1\u20442\uff0c\u8fd9\u53ef\u4ee5\u4ece\u5176\u6570\u636e\u624b\u518c\u6216\u6d4b\u8bd5\u4e2d\u786e\u5b9a\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u5f53V cc=5\uff0cV\u4e8c\u6781\u7ba1=0.7\u65f6\uff0c\u9ad8\u65f6\u95f4=1.00R 1C\uff0c\u6bd4\u9884\u671f\u76840.693 R 1C\u957f45%.\u3002\u5728\u53e6\u4e00\u4e2a\u6781\u7aef\uff0c\u5f53V cc=15\uff0cV\u4e8c\u6781\u7ba1=0.3\u65f6\uff0c\u9ad8\u65f6\u95f4=0.725 R 1C\uff0c\u66f4\u63a5\u8fd1\u9884\u671f\u76840.693 R 1C\u3002\u5982\u679cV\u4e8c\u6781\u7ba1=0.693\uff0c\u5219\u65b9\u7a0b\u51cf\u5c0f\u5230\u9884\u671f\u76840.693 R 1C\u3002\n\u6b64\u6a21\u5f0f\u4e0b\u7684\u91cd\u7f6e\u64cd\u4f5c\u5b9a\u4e49\u4e0d\u660e\u786e\u3002\u4e00\u4e9b\u5236\u9020\u5546\u7684\u90e8\u4ef6\u4f1a\u5c06\u8f93\u51fa\u72b6\u6001\u4fdd\u6301\u5230\u91cd\u7f6e\u4e3a\u4f4e\u65f6\u7684\u72b6\u6001\uff0c\u5176\u4ed6\u5236\u9020\u5546\u5219\u4f1a\u5c06\u8f93\u51fa\u53d1\u9001\u5230\u9ad8\u6216\u4f4e\u3002\n\u5728\u5355\u7a33\u6001\u6a21\u5f0f\u4e0b\uff0c\u5f53\u7535\u5bb9\u5668\u4e0a\u7684\u7535\u538b\u7b49\u4e8e\u7535\u6e90\u7535\u538b\u7684\u200b2\u20443\u65f6\uff0c\u8f93\u51fa\u8109\u51b2\u7ed3\u675f\u3002\u901a\u8fc7\u8c03\u6574R\u548cC\u7684\u503c\uff0c\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u5e94\u7528\u7684\u9700\u8981\u5ef6\u957f\u6216\u7f29\u77ed\u8f93\u51fa\u8109\u51b2\u5bbd\u5ea6\u3002[18]\u3002\n\u9996\u5148\u5047\u5b9a\u5355\u7a33\u6001\u7684\u8f93\u51fa\u4e3a\u96f6\uff0c\u89e6\u53d1\u5668(Qbar)\u7684\u8f93\u51fa\u4e3a1\uff0c\u8fd9\u6837\u653e\u7535\u6676\u4f53\u7ba1\u5bfc\u901a\uff0c\u7535\u5bb9\u5668\u4e24\u7aef\u7684\u7535\u538b\u4e3a\u96f6\u3002\u4e0a\u4f4d\u6bd4\u8f83\u5668\u7684\u4e00\u4e2a\u8f93\u5165\u7aef\u4e3a\u7535\u6e90\u7535\u538b\u76842/3\uff0c\u53e6\u4e00\u4e2a\u8f93\u5165\u7aef\u8fde\u63a5\u5230\u7535\u5bb9\u5668\u3002\u5bf9\u4e8e\u4e0b\u4f4d\u6bd4\u8f83\u5668\uff0c\u4e00\u4e2a\u8f93\u5165\u4e3a\u89e6\u53d1\u8109\u51b2\uff0c\u53e6\u4e00\u4e2a\u8fde\u63a5\u5728\u7535\u6e90\u7535\u538b\u76841/3\u3002\u73b0\u5728\u7535\u5bb9\u5668\u5411\u7535\u6e90\u7535\u538b(Vcc)\u5145\u7535\u3002\u5f53\u89e6\u53d1\u5668\u8f93\u5165\u65bd\u52a0\u5728\u89e6\u53d1\u5668\u5f15\u811a\u4e0a\u65f6\uff0c\u4e0b\u4f4d\u6bd4\u8f83\u5668\u7684\u8f93\u51fa\u4e3a0\uff0c\u4e0a\u4f4d\u6bd4\u8f83\u5668\u7684\u8f93\u51fa\u4e3a0\u3002\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u6b64\u8f93\u51fa\u4e3a0\u3002\u5f53\u7535\u5bb9\u5668\u4e24\u7aef\u7684\u7535\u538b\u8de8\u8fc7Vcc\u76841/3\u65f6\uff0c\u4e0b\u6bd4\u8f83\u5668\u7684\u8f93\u51fa\u4ece0\u53d8\u4e3a1\u3002\u56e0\u6b64\uff0c\u5355\u7a33\u6001\u7684\u8f93\u51fa\u662f1\uff0c\u653e\u7535\u6676\u4f53\u7ba1\u4ecd\u7136\u662f\u5173\u65ad\u7684\uff0c\u5e76\u4e14\u7535\u5bb9\u5668\u4e24\u7aef\u7684\u7535\u538b\u4eceVcc\u76841/3\u5411Vcc\u5145\u7535\u3002\n\u5f53\u7535\u5bb9\u4e24\u7aef\u7684\u7535\u538b\u8d85\u8fc7Vcc\u76842/3\u65f6\uff0c\u4e0a\u6bd4\u8f83\u5668\u7684\u8f93\u51fa\u4ece0\u53d8\u4e3a1\uff0c\u56e0\u6b64\u5355\u7a33\u6001\u7684\u8f93\u51fa\u4e3a0\uff0c\u653e\u7535\u6676\u4f53\u7ba1\u5bfc\u901a\uff0c\u7535\u5bb9\u901a\u8fc7\u8be5\u6676\u4f53\u7ba1\u653e\u7535\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4f4e\u963b\u8def\u5f84\u3002\u5faa\u73af\u4e0d\u65ad\uff0c\u7535\u5bb9\u5668\u7684\u5145\u653e\u7535\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5e38\u6570Rc\u3002\n\u5728t=T\u65f6\uff0c\u7535\u5bb9\u5668\u4e24\u7aef\u7684\u7535\u538b\u7531vc=Vcc(1-e^(-t/rc))\u7ed9\u51fa\uff0c\u7531\u4e8evc=(2/3)vcc\uff0c\u56e0\u6b642/3Vcc=vcc(1-e^(-T/rc))\uff0c\u4ece\u800c\u51cf\u5c11\u5230T=rc ln(3)\u79d2\u3002\n\u65f6\u95f4t\u7684\u8f93\u51fa\u8109\u51b2\u5bbd\u5ea6(\u5176\u662f\u5c06C\u5145\u7535\u5230\u7535\u6e90\u7535\u538b\u7684\u200b2\u20443\u6240\u82b1\u8d39\u7684\u65f6\u95f4)\u7531\u4e0b\u5f0f\u7ed9\u51fa\u3002\nt=ln\u2061(3)\u22c5R\u22c5C{\\DisplayStyle t=\\ln(3)\\cot R\\cdot C}\u3002\n\u5176\u4e2dt{\\DisplayStyle t}\u662f\u79d2(\u65f6\u95f4)\uff0cR{\\DisplayStyle R}\u662f\u6b27\u59c6(\u7535\u963b)\uff0cC{\\DisplayStyle C}\u662f\u6cd5\u62c9(\u7535\u5bb9)\uff0cln\u2061(3){\\DisplayStyle\\ln(3)}\u662f3\u5e38\u6570\u7684\u81ea\u7136\u5bf9\u6570\uff0c\u5b83\u662f1.098612289(\u56db\u820d\u4e94\u5165\u52309\u4e2a\u5c3e\u968f\u6570\u5b57)\uff0c\u4f46\u5728555\u65f6\u5e8f\u7c3f\u548c\u6570\u636e\u624b\u518c\u4e2d\u901a\u5e38\u56db\u820d\u4e94\u5165\u5230\u66f4\u5c11\u7684\u6570\u5b57\uff0c\u59821.1\u62161.099\u3002\n\u5728\u5355\u7a33\u6001\u6a21\u5f0f\u4e0b\u4f7f\u7528\u5b9a\u65f6\u5668IC\u65f6\uff0c\u4e3b\u8981\u7f3a\u70b9\u662f\u4efb\u610f\u4e24\u4e2a\u89e6\u53d1\u8109\u51b2\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\u5fc5\u987b\u5927\u4e8eRC\u65f6\u95f4\u5e38\u6570\u3002[19]\u76f8\u53cd\uff0c\u901a\u8fc7\u5c06RC\u65f6\u95f4\u5e38\u6570\u8bbe\u7f6e\u4e3a\u5927\u4e8e\u5bc4\u751f\u89e6\u53d1\u4e4b\u95f4\u7684\u8de8\u5ea6\uff0c\u53ef\u4ee5\u5ffd\u7565\u7d27\u5bc6\u95f4\u9694\u7684\u8109\u51b2\u3002(\u793a\u4f8b\uff1a\u5ffd\u7565\u5f00\u5173\u89e6\u70b9\u53cd\u5f39\u3002)\u3002\n\u5728\u53cc\u7a33\u6001\u6a21\u5f0f\u4e0b\uff0c555\u5b9a\u65f6\u5668\u5145\u5f53SR\u89e6\u53d1\u5668\u3002\u5f53\u9608\u503c\u8f93\u5165(\u5f15\u811a6)\u63a5\u5730\u65f6\uff0c\u89e6\u53d1\u548c\u590d\u4f4d\u8f93\u5165(\u5206\u522b\u4f4d\u4e8e555\u4e0a\u7684\u5f15\u811a2\u548c4)\u901a\u8fc7\u4e0a\u62c9\u7535\u963b\u4fdd\u6301\u9ad8\u7535\u5e73\u3002\u5982\u6b64\u914d\u7f6e\uff0c\u77ac\u95f4\u5c06\u89e6\u53d1\u5668\u62c9\u5230\u5730\u8d77\u5230\u7f6e\u4f4d\u7684\u4f5c\u7528\uff0c\u5e76\u5c06\u8f93\u51fa\u5f15\u811a(\u5f15\u811a3)\u8f6c\u6362\u5230V cc(\u9ad8\u72b6\u6001)\u3002\u5c06\u590d\u4f4d\u8f93\u5165\u62c9\u5230\u5730\u8d77\u5230\u590d\u4f4d\u7684\u4f5c\u7528\uff0c\u5e76\u5c06\u8f93\u51fa\u5f15\u811a\u8f6c\u6362\u5230\u5730(\u4f4e\u72b6\u6001)\u3002\u5728\u53cc\u7a33\u6001\u914d\u7f6e\u4e2d\u4e0d\u9700\u8981\u5b9a\u65f6\u7535\u5bb9\u5668\u3002\u5f15\u811a7(\u653e\u7535)\u672a\u8fde\u63a5\uff0c\u6216\u53ef\u7528\u4f5c\u96c6\u7535\u6781\u5f00\u8def\u8f93\u51fa\u3002[20]\u3002\n555\u5b9a\u65f6\u5668\u53ef\u7528\u4e8e\u521b\u5efa\u65bd\u5bc6\u7279\u89e6\u53d1\u5668\u53cd\u76f8\u95e8\uff0c\u5c06\u566a\u58f0\u8f93\u5165\u8f6c\u6362\u4e3a\u5e72\u51c0\u7684\u6570\u5b57\u8f93\u51fa\u3002\u8f93\u5165\u4fe1\u53f7\u5e94\u8be5\u901a\u8fc7\u4e32\u8054\u7535\u5bb9\u5668\u8fde\u63a5\uff0c\u7136\u540e\u4e32\u8054\u7535\u5bb9\u5668\u8fde\u63a5\u5230\u89e6\u53d1\u5668\u548c\u9608\u503c\u5f15\u811a\u3002\u7535\u963b\u5206\u538b\u5668\uff0c\u4eceVCC\u5230GND\uff0c\u8fde\u63a5\u5230\u4e4b\u524d\u7684\u6346\u624e\u5f15\u811a\u3002\u590d\u4f4d\u5f15\u811a\u7cfb\u5728V cc\u4e0a\u3002\n1972\u5e74\uff0cSignetics\u6700\u521d\u53d1\u5e03\u4e86DIP-8\u548cTO5-8\u91d1\u5c5e\u7f50\u5c01\u88c5\u7684555\u5b9a\u65f6\u5668\uff0c\u800c556\u5b9a\u65f6\u5668\u5219\u4ee5DIP-14\u5c01\u88c5\u53d1\u5e03\u3002[4]\u3002\n2020\u5e74\uff0c555\u4ee5\u901a\u5b54\u5c01\u88c5DIP-8(\u95f4\u8ddd2.54 mm)\u3001[21]\u548c\u8868\u9762\u8d34\u88c5\u5c01\u88c5SO-8(\u95f4\u8ddd1.27 mm)\u3001SSOP-8/TSSOP-8/VSSOP-8(\u95f4\u8ddd0.65 mm)\u3001BGA(\u95f4\u8ddd0.5 mm)\u63d0\u4f9b\u3002[1]\u3002\n2020\u5e74\uff0c\u53cc556\u5b9a\u65f6\u5668\u63d0\u4f9bDIP-14(2.54 mm\u95f4\u8ddd)\u3001[16]\u901a\u5b54\u5c01\u88c5\u548cSO-14(1.27 mm\u95f4\u8ddd)\u548cSSOP-14(0.65 mm\u95f4\u8ddd)\u8868\u9762\u8d34\u88c5\u5c01\u88c5\u3002\nMIC1555\u662f\u4e00\u6b3eCMOS 555\u578b\u5b9a\u65f6\u5668\uff0c\u5728SOT23-5(\u95f4\u8ddd0.95 mm)\u8868\u9762\u8d34\u88c5\u5c01\u88c5\u4e2d\u5177\u6709\u8f83\u5c11\u76843\u4e2a\u5f15\u811a\u3002[22]\u3002\n\u8fd9\u4e9b\u89c4\u683c\u9002\u7528\u4e8e\u53cc\u6781NE555\u3002\u5176\u4ed6555\u5b9a\u65f6\u5668\u53ef\u4ee5\u6839\u636e\u7b49\u7ea7(\u5de5\u4e1a\u3001\u519b\u4e8b\u3001\u533b\u7597\u7b49)\u6709\u4e0d\u540c\u7684\u89c4\u683c\u3002\u5e94\u8be5\u8003\u8651\u8fd9\u4e9b\u6570\u503c\uff1b\u5e94\u8be5\u53c2\u8003\u6bcf\u4e2a\u82af\u7247\u786e\u5207\u5236\u9020\u5546\u7684\u5f53\u524d\u5b98\u65b9\u6570\u636e\u8868\uff0c\u4ee5\u83b7\u5f97\u53c2\u6570\u9650\u5236\u5efa\u8bae\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u8bb8\u591a\u516c\u53f8\u751f\u4ea7\u4e86555,556,558\u5b9a\u65f6\u5668\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u79cd\uff0c\u4ee5\u53ca\u8bb8\u591a\u4e0d\u540c\u7684\u96f6\u4ef6\u53f7\u3002\u4ee5\u4e0b\u662f\u90e8\u5206\u6e05\u5355\uff1a\n\u4e00\u4e2a\u3002\n..", "note_en": "Jump to navigation  Jump to search  The  555 timer IC is an  integrated circuit (chip) used in a variety of  timer, delay, pulse generation, and  oscillator applications. Derivatives provide two ( 556) or four ( 558) timing circuits in one package.  [2] Introduced in 1972  by  Signetics,  [4] the 555 is still in widespread use due to its low price, ease of use, and stability. Numerous companies have made the original  bipolar timers and similar low-power  CMOS timers too. As of 2003 , it was estimated that 1 billion units were manufactured every year.  [5] The 555 is the most popular integrated circuit ever manufactured.  [6]  [7]\n    The timer IC was designed in 1971 by  Hans Camenzind under contract to  Signetics.  In 1968, he was hired by Signetics to develop a  phase-locked loop (PLL) IC. He designed an oscillator for PLLs such that the frequency did not depend on the power supply voltage or temperature. Signetics subsequently laid off half of its employees due to the  1970 recession, and development on the PLL was thus frozen.  [8] Camenzind proposed the development of a universal circuit based on the oscillator for PLLs and asked that he develop it alone, borrowing equipment from Signetics instead of having his pay cut in half. Other engineers argued the product could be built from existing parts; however, the marketing manager approved the idea.\n The first design for the 555 was reviewed in the summer of 1971. Assessed to be without error, it proceeded to layout design. A few days later, Camenzind got the idea of using a direct resistance instead of a constant current source finding later that it worked. The change decreased the required 9 pins to 8 so the IC could be fit in an 8-pin package instead of a 14-pin package. This revised design passed a second design review with the prototypes completed in October 1971 as the NE555V (plastic  DIP) and SE555T (metal  TO-5).  [5] The 9-pin copy had been already released by another company founded by an engineer who attended the first review and retired from Signetics; that firm withdrew its version soon after the 555 was released.  [8] The 555 timer was manufactured by 12 companies in 1972 and it became a best selling product.  [8]\n Later, Hans Camenzind designed the ZSCT1555 timer for  Zetex Semiconductors, which is no longer manufactured.\n  It has been falsely hypothesized that the 555 got its name from the three 5\u00a0 k\u03a9  resistors within the bipolar IC.  [9] Hans Camenzind has stated that the part number was arbitrary, thus it was simply a coincidence they matched.  [5]  [8] The &#34;NE&#34; and &#34;SE&#34; prefix letters of the original Signetic parts numbers, NE555 and SE555, were temperature designations for analog chips, where &#34;NE&#34; was commercial temperature family and &#34;SE&#34; was military temperature family.\n  Depending on the manufacturer, the standard 555 package includes 25  transistors, 2  diodes and 15  resistors on a  silicon chip installed in an 8-pin  dual in-line package (DIP-8).  [10] Variants available include the 556 (a DIP-14 combining two complete 555s on one chip),  [11] and 558 / 559 (both a DIP-16 combining four reduced-functionality timers on one chip).  [2]\n The  NE555 parts were commercial temperature range, 0 \u00b0C to +70 \u00b0C, and the  SE555 part number designated the military temperature range, \u221255 \u00b0C to +125 \u00b0C. These were available in both high-reliability metal can (T package) and inexpensive epoxy plastic (V package) packages. Thus the full part numbers were NE555V, NE555T, SE555V, and SE555T.\n Low-power CMOS versions of the 555 are also available, such as the Intersil ICM7555 and Texas Instruments LMC555, TLC555, TLC551.  [12]  [13]   [14]  [15] CMOS timers use significantly less power than bipolar timers; CMOS timers also cause less supply noise than bipolar version when the output switches states. [   citation needed]\n  The internal  block diagram and  schematic of the 555 timer are highlighted with the same color across all three drawings to clarify how the chip is implemented:  [2]\n Green: Between the positive supply voltage V CC and the ground GND is a  voltage divider consisting of three identical  resistors, which create two reference voltages at \u200b  1\u2044 3 V CC and \u200b  2\u2044 3 V CC. The latter is connected to the &#34;Control Voltage&#34; pin. All three resistors have the same resistance, 5  k\u03a9 for bipolar timers, 100 k\u03a9 (or higher) for CMOS timers. It is a false myth that the 555 IC got its name from these three 5\u00a0k\u03a9 resistors.  [5]\n Yellow: The  comparator negative input is connected to the higher-reference voltage divider of \u200b  2\u2044 3 V CC (and &#34;Control&#34; pin), and comparator positive input is connected to the &#34;Threshold&#34; pin.\n Red: The comparator positive input is connected to the lower-reference voltage divider of \u200b  1\u2044 3 V CC, and comparator negative input is connected to the &#34;Trigger&#34; pin.\n Purple: An  SR flip-flop stores the state of the timer and is controlled by the two comparators. The &#34;Reset&#34; pin overrides the other two inputs, thus the flip-flop (and therefore the entire timer) can be reset at any time.\n Pink: The output of the flip-flop is followed by an output stage with  push-pull (P.P.) output drivers that can load the &#34;Output&#34; pin with up to 200 mA for bipolar timers, lower for CMOS timers.\n Cyan: Also, the output of the flip-flop turns on a  transistor that connects the &#34;Discharge&#34; pin to ground.\n   The pinout of the 8-pin 555 timer and 14-pin 556 dual timer are shown in the following table. The two timers inside the 556 are split across two columns.   [2]  [1]  [16]\n Trigger: when the voltage at this pin falls below \u200b  1\u2044 2 of CONT pin voltage (\u200b  1\u2044 3  V CC except when CONT is driven by an external signal), the OUT pin goes high and a timing interval starts. As long as this pin continues to be kept at a low voltage, the OUT pin will remain high.\n Output: this pin is a  push-pull (P.P.) output that is driven to either a low state (GND pin) or a high state (for bipolar timers,  V CC pin minus approximately 1.7 Volts) (for CMOS timers,  V CC pin). For bipolar timers, this pin can drive up to 200mA, but CMOS timers are able to drive less (varies by chip). For bipolar timers, if this pin drives an edge-sensitive input of a digital logic chip, a 100 to 1000  pF  decoupling capacitor (between this pin and GND) may need to be added to prevent double triggering.  [2]\n Reset: a timing interval may be reset by driving this pin to GND, but the timing does not begin again until this pin rises above approximately 0.7 Volts. This pin overrides the trigger, which in turn overrides the threshold. If this pin is not used, it should be connected to  V CC to prevent electrical noise causing a reset.\n Control (or Control Voltage): this pin provides access to the internal  voltage divider (\u200b  2\u2044 3  V CC by default). By applying a voltage to this pin, the timing characteristics can be changed. In astable mode, this pin can be used to frequency-modulate the output. If this pin is not used, it should be connected to a 10  nF  decoupling capacitor (between this pin and GND) to ensure electrical noise doesn&#39;t affect the internal voltage divider.  [2]\n Threshold: when the voltage at this pin is greater than the voltage at CONT pin (\u200b  2\u2044 3  V CC except when CONT is driven by an external signal), then the &#34;OUT high&#34; timing interval ends, causing the output to go low.\n Discharge: For bipolar times, this pin is an  open-collector (O.C.) output, CMOS timers are open-drain O.D. This pin can be used to discharge a  capacitor between intervals, in phase with output. In bistable mode and schmitt trigger mode, this pin is unused, which allows it to be used as an alternate output.\n Positive supply: For bipolar timers, the voltage range is typically 4.5 to 16 Volts, some are spec&#39;ed for up to 18 Volts, though most will operate as low as 3 Volts. For CMOS timers, the voltage range is typically 2 to 15 Volts, some are spec&#39;ed for up to 18 Volts, and some are spec&#39;ed as low as 1 Volt. See the supply min and max columns in the  derivatives table in this article. For bipolar timers, one or more  decoupling capacitor(s) (between this pin and GND) are required because of current surges during output switching.  [2]\n    Astable (free-running) mode \u2013 the 555 can operate as an  electronic oscillator. Uses include  LED and lamp flashers, pulse generation, logic clocks, tone generation, security alarms,  pulse position modulation and so on. The 555 can be used as a simple  ADC, converting an analog value to a pulse length (e.g., selecting a  thermistor as timing resistor allows the use of the 555 in a temperature sensor and the period of the output pulse is determined by the temperature). The use of a microprocessor-based circuit can then convert the pulse period to temperature, linearize it and even provide calibration means.\n Monostable (one-shot) mode \u2013 in this mode, the 555 functions as a &#34;one-shot&#34; pulse generator. Applications include timers, missing pulse detection, bounce-free switches, touch switches, frequency divider, capacitance measurement,  pulse-width modulation (PWM) and so on.\n Bistable (flip-flop) mode \u2013 the 555 operates as a  SR flip-flop. Uses include bounce-free latched switches.\n Schmitt Trigger (inverter) mode - the 555 operates as a schmitt trigger  inverter gate which converts a noisy input into a clean digital output.\n       In astable configuration, the 555 timer puts out a continuous stream of rectangular pulses having a specific frequency. The astable configuration is implemented using two resistors,              R    1      {\\displaystyle R_{1}}   and              R    2      {\\displaystyle R_{2}}  , and one capacitor            C    {\\displaystyle C}  . In this configuration, the control pin is not used, thus it is connected to ground through a 10  nF  decoupling capacitor to shunt electrical noise. The threshold and trigger pins are connected to the capacitor            C    {\\displaystyle C}  , thus they have the same voltage. Initially, the capacitor            C    {\\displaystyle C}   is not charged, thus the trigger pin receives zero voltage which is less than third of the supply voltage. Consequently, the trigger pin causes the output to go high and the internal discharge transistor to go to cut-off mode. Since the discharge pin is no longer short circuited to ground, the current flows through the two resistors,              R    1      {\\displaystyle R_{1}}   and              R    2      {\\displaystyle R_{2}}  , to the capacitor charging it. The capacitor            C    {\\displaystyle C}   starts charging until the voltage becomes two-thirds of the supply voltage. At this instance, the threshold pin causes the output to go low and the internal discharge transistor to go into saturation mode. Consequently, the capacitor starts discharging through              R    2      {\\displaystyle R_{2}}   till it becomes less than third of the supply voltage, in which case, the trigger pin causes the output to go high and the internal discharge transistor to go to cut-off mode once again. And the cycle repeats.\n In the first pulse, the capacitor charges from zero to two-thirds of the supply voltage, however, in later pulses, it only charges from one-third to two-thirds of the supply voltage. Consequently, the first pulse have a longer high time interval compared to later pulses. Moreover, the capacitor charges through both resistors but only discharges through              R    2      {\\displaystyle R_{2}}  , thus the high interval is longer than the low interval. This is shown in the following equations.\n  t    h  i  g  h    =  ln  \u2061  (  2  )  \u22c5  (    R    1    +    R    2    )  \u22c5  C    {\\displaystyle t_{high}=\\ln(2)\\cdot (R_{1}+R_{2})\\cdot C}\n  t    l  o  w    =  ln  \u2061  (  2  )  \u22c5    R    2    \u22c5  C    {\\displaystyle t_{low}=\\ln(2)\\cdot R_{2}\\cdot C}\n  f  =      1      t    h  i  g  h    +    t    l  o  w       =      1    ln  \u2061  (  2  )  \u22c5  (    R    1    +  2    R    2    )  \u22c5  C       {\\displaystyle f={\\frac {1}{t_{high}+t_{low}}}={\\frac {1}{\\ln(2)\\cdot (R_{1}+2R_{2})\\cdot C}}}    [17]\n  d  u  t  y  =        t    h  i  g  h        t    h  i  g  h    +    t    l  o  w       \u22c5  100    {\\displaystyle duty={\\frac {t_{high}}{t_{high}+t_{low}}}\\cdot 100}\n where            t    {\\displaystyle t}   is in  seconds (time),            R    {\\displaystyle R}   is in  ohms (resistance),            C    {\\displaystyle C}   is in  farads (capacitance),            ln  \u2061  (  2  )    {\\displaystyle \\ln(2)}   is the  natural log of 2 constant, which is 0.693147181 (rounded to 9 trailing digits) but commonly is rounded to fewer digits in 555 timer books and datasheets as 0.7 or 0.69 or 0.693.\n  W    {\\displaystyle W}   power capability of              R    1      {\\displaystyle R_{1}}   must be greater than                    V    c  c    \u22c5    V    c  c       R    1        {\\displaystyle {\\frac {V_{cc}\\cdot V_{cc}}{R_{1}}}}  , per  Ohm&#39;s law.\n Particularly with bipolar 555s, low values of              R    1      {\\displaystyle R_{1}}   must be avoided so that the output stays saturated near zero volts during discharge, as assumed by the above equation. Otherwise the output low time will be greater than calculated above.\n The first cycle will take appreciably longer than the calculated time, as the capacitor must charge from 0V to \u200b  2\u2044 3 of V CC from power-up, but only from \u200b  1\u2044 3 of V CC to \u200b  2\u2044 3 of V CC on subsequent cycles.\n To have an output high time shorter than the low time (i.e., a  duty cycle less than 50%) a fast diode (i.e.  1N4148 signal diode) can be placed in parallel with R 2, with the cathode on the capacitor side. This bypasses R 2 during the high part of the cycle so that the high interval depends only on R 1 and C, with an adjustment based the voltage drop across the diode. The voltage drop across the diode slows charging on the capacitor so that the high time is a longer than the expected and often-cited ln(2)*R 1C = 0.693 R 1C. The low time will be the same as above, 0.693 R 2C. With the bypass diode, the high time is\n t    h  i  g  h    =  ln  \u2061    (        2    V      cc     \u2212  3    V      diode          V      cc     \u2212  3    V      diode        )   \u22c5    R    1    \u22c5  C    {\\displaystyle t_{high}=\\ln \\left({\\frac {2V_{\\textrm {cc}}-3V_{\\textrm {diode}}}{V_{\\textrm {cc}}-3V_{\\textrm {diode}}}}\\right)\\cdot R_{1}\\cdot C}\n where V diode is when the diode&#39;s &#34;on&#34; current is \u200b  1\u2044 2 of V cc/R 1 which can be determined from its datasheet or by testing. As an extreme example, when V cc= 5 and V diode= 0.7, high time = 1.00 R 1C which is 45% longer than the &#34;expected&#34; 0.693 R 1C. At the other extreme, when V cc= 15 and V diode= 0.3, the high time = 0.725 R 1C which is closer to the expected 0.693 R 1C. The equation reduces to the expected 0.693 R 1C if V diode= 0.\n The operation of RESET in this mode is not well-defined. Some manufacturers&#39; parts will hold the output state to what it was when RESET is taken low, others will send the output either high or low.\n        In monostable mode, the output pulse ends when the voltage on the capacitor equals \u200b  2\u2044 3 of the supply voltage. The output pulse width can be lengthened or shortened to the need of the specific application by adjusting the values of R and C.  [18]\n Assume initially the output of the monostable is zero, the output of flip-flop(Q bar) is 1 so that the discharging transistor is on and voltage across capacitor is zero. One of the input of upper comparator is at 2/3 of supply voltage and other is connected to capacitor. For lower comparator, one of the input is trigger pulse and other is connected at 1/3 of supply voltage. Now the capacitor charges towards supply voltage(Vcc). When the trigger input is applied at trigger pin the output of lower comparator is 0 and upper comparator is 0. The output of flip-flop remains unchanged therefore the output is 0. when the voltage across capacitor crosses the 1/3 of the vcc the output of lower comparator changes from 0 to 1. Therefore, the output of monostable is one and the discharging transistor is still off and voltage across capacitor charges towards vcc from 1/3 of vcc,\n When the voltage across capacitor crosses 2/3 of VCC, the output of upper comparator changes from 0 to 1, therefore the output of monostable is 0 and the discharging transistor is on and capacitor discharges through this transistor as it offers low resistance path. The cycle repeats continuously.The charging and discharging of capacitor depends on the time constant RC.\n The voltage across capacitor is given by vc = Vcc(1-e^(-t/RC)) at t=T. Since vc =(2/3)Vcc, therefore 2/3Vcc = Vcc(1-e^(-T/RC)), thus reduced to T = RC ln(3) seconds.\n The output pulse width of time  t, which is the time it takes to charge C to \u200b  2\u2044 3 of the supply voltage, is given by\n t  =  ln  \u2061  (  3  )  \u22c5  R  \u22c5  C    {\\displaystyle t=\\ln(3)\\cdot R\\cdot C}\n where            t    {\\displaystyle t}   is in  seconds (time),            R    {\\displaystyle R}   is in  ohms (resistance),            C    {\\displaystyle C}   is in  farads (capacitance),            ln  \u2061  (  3  )    {\\displaystyle \\ln(3)}   is the  natural log of 3 constant, which is 1.098612289 (rounded to 9 trailing digits) but commonly is rounded to fewer digits in 555 timer books and datasheets as 1.1 or 1.099.\n While using the timer IC in monostable mode, the main disadvantage is that the time span between any two triggering pulses must be greater than the RC time constant.  [19] Conversely, ignoring closely spaced pulses is done by setting the RC time constant to be larger than the span between spurious triggers. (Example: ignoring switch contact bouncing.)\n        In bistable mode, the 555 timer acts as a SR flip-flop. The trigger and reset inputs (pins 2 and 4 respectively on a 555) are held high via  pull-up resistors while the threshold input (pin 6) is grounded. Thus configured, pulling the trigger momentarily to ground acts as a &#39;set&#39; and transitions the output pin (pin 3) to V CC (high state). Pulling the reset input to ground acts as a &#39;reset&#39; and transitions the output pin to ground (low state). No timing capacitors are required in a bistable configuration. Pin 7 (discharge) is left unconnected, or may be used as an  open-collector output.  [20]\n        A 555 timer can be used to create a schmitt trigger  inverter gate which converts a noisy input into a clean digital output. The input signal should be connected through a series capacitor which then connects to the trigger and threshold pins. A  resistor divider, from V CC to GND, is connected to the previous tied pins. The reset pin is tied to V CC.\n    In 1972,  Signetics originally released the 555 timer in  DIP-8 and  TO5-8 metal can packages, and the 556 timer was released in DIP-14 package.  [4]\n In 2020, the 555 was available in through-hole packages as DIP-8 (2.54mm pitch),  [21] and surface-mount packages as SO-8 (1.27mm pitch), SSOP-8 /  TSSOP-8 / VSSOP-8 (0.65mm pitch),  BGA (0.5mm pitch).  [1]\n In 2020, the dual 556 timer was available in through-hole packages as DIP-14 (2.54mm pitch),  [16] and surface-mount packages as SO-14 (1.27mm pitch) and SSOP-14 (0.65mm pitch).\n The MIC1555 is a  CMOS 555-type timer with 3 fewer pins available in  SOT23-5 (0.95mm pitch) surface-mount package.  [22]\n   These specifications apply to the bipolar NE555. Other 555 timers can have different specifications depending on the grade (industrial, military, medical, etc.). These values should be considered &#34;ball park&#34; values; the current official datasheet from the exact manufacturer of each chip should be consulted instead for parameter limitation recommendations.\n   Numerous companies have manufactured one or more variants of the 555, 556, 558 timers over the past decades as many different part numbers. The following is a partial list:\n   A\n......", "posttime": "2020-06-07 14:30:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ic,\u5f15\u811a", "title": "555\u5b9a\u65f6\u5668IC\u96c6\u6210\u7535\u8def", "title_en": "555 Timer IC Integrated Circuit", "transed": 1, "url": "https://en.wikipedia.org/wiki/555_timer_IC", "via": "", "real_tags": ["ic", "\u5f15\u811a"]}, {"category": "", "categoryclass": "", "imagename": "c236976738aee6268aaf57ba90516c7f.jpeg", "infoid": 1005533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f7f\u7528C&amp\uff1bC++\u5f00\u53d1\u98de\u884c\u8f6f\u4ef6\uff0c\u4f7f\u7528HTML\u3001JavaScript\u548cCSS\u8fdb\u884c\u663e\u793a\uff0c\u4f7f\u7528Python\u8fdb\u884c\u6d4b\u8bd5\u3002--\u7d22\u975e\u4e9a\u3002\n\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6bcf\u4e00\u79cd\u65b9\u6cd5\uff01\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u88c5\u7bb1\u5316\u96c6\u6210\u6d4b\u8bd5(\u60a8\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u8fdb\u884c\u5b8c\u6574\u7684\u7269\u7406\u6a21\u62df)\uff0c\u4ee5\u53ca\u5728\u771f\u5b9e\u98de\u884c\u786c\u4ef6\u4e0a\u7684\u5b8c\u5168\u542f\u52a8(\u786c\u4ef6\u5728\u73af)\u6d4b\u8bd5-\u540c\u6837\uff0c\u4f7f\u7528\u5b8c\u6574\u7684\u6a21\u62df\u3002\u5c06\u98de\u884c\u8f6f\u4ef6\u4e0e\u6a21\u62df\u5668\u914d\u5bf9\u662f\u6211\u4eec\u62e5\u6709\u7684\u6700\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u7279\u522b\u662f\u5f53\u5b83\u5728\u771f\u5b9e\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\u65f6\u3002\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u6574\u4e2a\u4efb\u52a1\uff0c\u751a\u81f3\u53ef\u4ee5\u6a21\u62df\u8bb8\u591a\u8be6\u7ec6\u7684\u6545\u969c\u573a\u666f\uff0c\u8f66\u8f86\u786c\u4ef6\u53ea\u9700\u653e\u5728\u5b9e\u9a8c\u5ba4\u7684\u684c\u5b50\u4e0a\u3002--\u8fea\u7279\u91cc\u514b\u3002\n\u5728\u6c7d\u8f66\u4e0a(\u5bf9\u4e8e\u9c8d\u52c3\u548c\u9053\u683c\u7684\u663e\u793a\u5668)\uff0c\u8fd9\u662f\u76f8\u5f53\u5bb9\u6613\u7684\u3002\u4e3a\u4e86\u8ba9\u5b83\u843d\u5230\u5730\u9762\u4e0a\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u901a\u4fe1\u94fe\u8def\u548c\u5730\u9762\u7f51\u7edc\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u975e\u5e38\u8fc5\u901f\u5730\u4ece\u8f66\u8f86\u4e0a\u83b7\u5f97\u5927\u91cf\u6570\u636e\u3002--\u8fea\u7279\u91cc\u514b\u3002\nDragon\u548cFalcon\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55ML\u6280\u672f\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u8bf4\u8fd9\u6837\u7684\u4e1c\u897f\u4e0d\u4f1a\u51fa\u73b0\u5728SpaceX\u7684\u672a\u6765\uff01--\u8fea\u7279\u91cc\u514b\u3002\n\u5728Dragon\u4e0a\uff0c\u6211\u4eec\u5b9a\u671f\u524a\u51cf\u7248\u672c\uff0c\u4ee5\u4fbf\u5728\u8f66\u8f86\u96c6\u6210\u548c\u6d4b\u8bd5\u65f6\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7\u4e00\u7cfb\u5217\u6d4b\u8bd5\u548c\u6570\u636e\u5ba1\u67e5\u8fd0\u884c\u8be5\u7248\u672c\u3002\u540c\u6837\uff0c\u5f53\u6211\u4eec\u91cd\u65b0\u9605\u8bfb\u98de\u884c\u65f6\uff0c\u6211\u4eec\u524a\u51cf\u4e86\u4e00\u4e2a\u7248\u672c\uff0c\u5e76\u9488\u5bf9\u6211\u4eec\u4ee3\u7801\u7684\u7279\u5b9a\u4fee\u8ba2\u8fd0\u884c\u6574\u5957\u6848\u4f8b\u3002-\u6e29\u8fea\u3002\n9A\u3002\u5728Dragon\u4e0a\uff0c\u6211\u4eec\u5728\u786c\u4ef6\u65b9\u9762\u6709\u5f88\u591a\u5197\u4f59(\u591a\u53f0\u8ba1\u7b97\u673a\u3001\u4f20\u611f\u5668\u3001\u6267\u884c\u5668\u7b49)\uff0c\u4f46\u4e5f\u4f7f\u7528\u8f6f\u4ef6\u6765\u5904\u7406\u5bf9\u6545\u969c\u7684\u54cd\u5e94\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u8981\u6c42\u662f\uff0c\u6211\u4eec\u7684\u98de\u884c\u5668\u5fc5\u987b\u5177\u67092\u7ea7\u5bb9\u9519\u80fd\u529b(\u5373\u80fd\u591f\u5b89\u5168\u5730\u4ece\u7a7a\u95f4\u7ad9\u64a4\u9000\u548c/\u6216\u8f7d\u4eba\u98de\u8239\u5b89\u5168\u8fd4\u56de)\uff0c\u56e0\u6b64\u6211\u4eec\u540c\u65f6\u8fdb\u884c\u5206\u6790\u548c\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u6ee1\u8db3\u8fd9\u79cd\u5bb9\u9519\u80fd\u529b\u3002-\u6e29\u8fea\u3002\n9B\u3002\u5728Starlink\u4e0a\uff0c\u6211\u4eec\u8bbe\u8ba1\u7684\u7cfb\u7edf\u53ef\u4ee5\u8ba9\u536b\u661f\u5728\u53d1\u751f\u6545\u969c\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u5927\u6c14\u963b\u529b\u800c\u8fc5\u901f\u88ab\u52a8\u8131\u8f68(\u5c3d\u7ba1\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u4f1a\u52aa\u529b\u4e3b\u52a8\u8131\u8f68)\u3002\u6211\u4eec\u5728\u8f66\u5185\u4ecd\u7136\u6709\u4e00\u4e9b\u5197\u4f59\uff0c\u8fd9\u5f88\u5bb9\u6613\uff0c\u4e5f\u5f88\u6709\u610f\u4e49\uff0c\u4f46\u6211\u4eec\u4e3b\u8981\u76f8\u4fe1\u6709\u7cfb\u7edf\u7ea7\u7684\u5bb9\u9519\u80fd\u529b\uff1a\u8003\u8651\u5230\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u7684\u591a\u9897\u536b\u661f\u3002\u53d1\u5c04\u66f4\u591a\u7684\u536b\u661f\u662f\u6211\u4eec\u7684\u6838\u5fc3\u80fd\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f1a\u5728\u4efb\u4f55\u53ef\u80fd\u7684\u5730\u65b9\u4f7f\u7528\u8fd9\u79cd\u5bb9\u9519\u80fd\u529b\uff0c\u800c\u4e14\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u63d0\u4f9b\u66f4\u597d\u7684\u670d\u52a1\uff0c\u5f53\u51fa\u73b0\u95ee\u9898\u7684\u65f6\u5019\u3002-\u54d1\u5149", "note_en": "We use C &amp; C++ for flight software, HTML, JavaScript &amp; CSS for displays and python for testing. \u2013 Sofian\n   Every way we can think of! Unit tests, containerized integrated tests (you can run these on your own machine with a full physics simulation), and full-up &#34;HITL&#34; (hardware-in-the-loop) tests on real flight hardware \u2013 again, with full simulation. Mating the flight software up against the simulator is the most powerful tool we have, especially when it&#39;s run on the real hardware. We can simulate an entire mission, and even many detailed fault scenarios, with the vehicle hardware just sitting on a table in the lab. - Dietrick\n On the vehicle (for Bob and Doug&#39;s displays), this is pretty easy. For getting it down to ground, we have some great communications links and ground-side networking that allows us to get a lot of data back from the vehicle, very quickly. - Dietrick\n Dragon and Falcon do not use any ML tech, but that&#39;s not to say things like this aren&#39;t in SpaceX&#39;s future! -Dietrick\n  On Dragon, we cut releases periodically for use when the vehicle is being integrated and tested and run that release through a series of tests and data review. Similarly, we cut a release when we&#39;re reading for flight and run the full suite of cases against specific revisions of our code. - Wendy\n 9a. On Dragon, we have a lot of redundancy on the hardware side (multiple computers, sensors, actuators, etc) but also employ software to handle responses to faults. NASA requirements are such that our vehicle must be 2 fault tolerant (ie, capable of being safely retreating from the space station and/or returning home safely for crewed vehicles) so we do both analysis and testing to ensure we meet this fault tolerance. \u2013 Wendy\n 9b. On Starlink, we&#39;ve designed the system so that satellites will quickly passively deorbit due to atmospheric drag in the case of failure (though we fight hard to actively deorbit them if possible). We still have some redundancy inside the vehicle, where it is easy and makes sense, but we primarily trust in having system-level fault tolerance: multiple satellites in view that can serve a user. Launching more satellites is our core competency, so we generally use that kind of fault tolerance wherever we can, and it allows us to provide even better service most of the time when there aren&#39;t problems. \u2013 Matt", "posttime": "2020-06-07 13:27:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,software", "title": "SpaceX\u8f6f\u4ef6\u56e2\u961fAMA", "title_en": "SpaceX Software Team AMA", "transed": 1, "url": "https://old.reddit.com/r/spacex/comments/gxb7j1/we_are_the_spacex_software_team_ask_us_anything", "via": "", "real_tags": ["\u8f6f\u4ef6", "software"]}, {"category": "", "categoryclass": "", "imagename": "f021ba77c6ed830417add1051d05055c.png", "infoid": 1005532, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672a\u641c\u7d22-\u94ec\u5c3d\u53ef\u80fd\u4fdd\u7559\u9ed8\u8ba4\u7684\u94ec\u4f53\u9a8c\u3002\u4e0e\u5176\u4ed6\u5bf9\u7f51\u7edc\u6d4f\u89c8\u5668\u6709\u81ea\u5df1\u8bbe\u60f3\u7684Chromium\u5206\u652f\u4e0d\u540c\uff0c\u672a\u7ecf\u8c37\u6b4c\u641c\u7d22\u7684\u94ec\u5b9e\u8d28\u4e0a\u662fChromium\u7684\u4e34\u65f6\u66ff\u4ee3\u54c1\u3002\n\u672a\u8c37\u6b4c-\u94ec\u529f\u80fd\u8c03\u6574\uff0c\u4ee5\u589e\u5f3a\u9690\u79c1\uff0c\u63a7\u5236\u548c\u900f\u660e\u5ea6\u3002\u4f46\u662f\uff0c\u51e0\u4e4e\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\u90fd\u5fc5\u987b\u624b\u52a8\u6fc0\u6d3b\u6216\u542f\u7528\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u529f\u80fd\u6982\u8ff0\u3002\n\u5728\u6ca1\u6709\u767b\u5f55\u8c37\u6b4c\u8d26\u6237\u7684\u60c5\u51b5\u4e0b\uff0cChromium\u5728\u5b89\u5168\u548c\u9690\u79c1\u65b9\u9762\u505a\u5f97\u76f8\u5f53\u597d\u3002\u7136\u800c\uff0cChromium\u4ecd\u7136\u5bf9Google Web\u670d\u52a1\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u6709\u4e00\u5b9a\u7684\u4f9d\u8d56\u6027\u3002\u6b64\u5916\uff0c\u8c37\u6b4c\u5c06Chromium\u8bbe\u8ba1\u4e3a\u5bf9\u7528\u6237\u6765\u8bf4\u7b80\u5355\u76f4\u89c2\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u5728\u900f\u660e\u5ea6\u548c\u5185\u90e8\u64cd\u4f5c\u63a7\u5236\u65b9\u9762\u505a\u51fa\u4e86\u59a5\u534f\u3002\n\u5728\u6784\u5efa\u548c\u8fd0\u884c\u6d4f\u89c8\u5668\u65f6\uff0c\u79fb\u9664\u5bf9\u4efb\u4f55Web\u670d\u52a1\u7684\u6240\u6709\u5269\u4f59\u540e\u53f0\u8bf7\u6c42\u3002\n\u4ece\u6e90\u4ee3\u7801\u4e2d\u5220\u9664\u6240\u6709\u9884\u5236\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4f7f\u7528\uff0c\u5e76\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u5c06\u5176\u66ff\u6362\u4e3a\u7528\u6237\u63d0\u4f9b\u7684\u66ff\u4ee3\u6587\u4ef6\u3002\n\u7981\u7528\u6291\u5236\u63a7\u5236\u548c\u900f\u660e\u5ea6\u7684\u529f\u80fd\uff0c\u5e76\u6dfb\u52a0\u6216\u4fee\u6539\u63d0\u5347\u5b83\u4eec\u7684\u529f\u80fd(\u8fd9\u4e9b\u66f4\u6539\u51e0\u4e4e\u603b\u662f\u9700\u8981\u624b\u52a8\u6fc0\u6d3b\u6216\u542f\u7528)\u3002\n\u8fd9\u4e9b\u529f\u80fd\u4ee5\u914d\u7f6e\u6807\u5fd7\u3001\u8865\u4e01\u548c\u81ea\u5b9a\u4e49\u811a\u672c\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8bbe\u8ba1\u6587\u6863\u3002\n\u672c\u90e8\u5206\u6982\u8ff0\u4e86\u672a\u7ecf\u8c37\u6b4c\u641c\u7d22\u7684\u94ec\u7684\u7279\u70b9\u3002\u6709\u5173\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u6700\u597d\u53c2\u8003\u6e90\u4ee3\u7801\u3002\n\u7528\u4ee5qjz9zk\u7ed3\u5c3e\u7684\u4e0d\u5b58\u5728\u7684\u5907\u9009\u65b9\u6848\u66ff\u6362\u6e90\u4ee3\u7801\u4e2d\u7684\u8bb8\u591aweb\u57df(\u79f0\u4e3a\u57df\u66ff\u6362\uff1b\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605docs/sign.md)\u3002\n\u7981\u7528\u7279\u5b9a\u4e8eGoogle\u57df\u7684\u529f\u80fd(\u4f8b\u5982Google Host Detector\u3001Google URL Tracker\u3001Google Cloud Messaging\u3001Google Hotword\u7b49)\u3002\n\u6dfb\u52a0\u8bb8\u591a\u65b0\u7684\u547d\u4ee4\u884c\u5f00\u5173\u548cChrome\uff1a//\u6807\u5fd7\u6761\u76ee\u4ee5\u914d\u7f6e\u9ed8\u8ba4\u7981\u7528\u7684\u529f\u80fd\u3002\u6709\u5173\u8be6\u7ec6\u5217\u8868\uff0c\u8bf7\u53c2\u9605docs/flag s.md\u3002\n\u5f53\u672a\u63d0\u4f9bURL\u65b9\u6848(\u4f8b\u5982\uff0cOmnibox\u3001\u4e66\u7b7e\u3001\u547d\u4ee4\u884c)\u65f6\uff0c\u9ed8\u8ba4\u4f7f\u7528HTTPS\u3002\n\u5728\u641c\u7d22\u5f15\u64ce\u7f16\u8f91\u5668(chrome\uff1a//settings/searchEngines)\u4e2d\u6dfb\u52a0\u5efa\u8baeURL\u6587\u672c\u5b57\u6bb5\uff0c\u4ee5\u81ea\u5b9a\u4e49\u641c\u7d22\u5f15\u64ce\u5efa\u8bae\u3002\n\u4e3aChromium\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8de8\u5e73\u53f0\u6784\u5efa\u914d\u7f6e\u548c\u6253\u5305\u5305\u88c5\u3002\u5b83\u76ee\u524d\u652f\u6301\u8bb8\u591aLinux\u53d1\u884c\u7248\u3001MacOS\u548cWindows\u3002(\u6709\u5173\u7cfb\u7edf\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605docs/sign.md\u3002)\u3002\n(Irdium\u6d4f\u89c8\u5668\u529f\u80fd\u66f4\u6539)\u963b\u6b62\u5177\u6709trk\uff1a\u65b9\u6848\u7684URL\u8fde\u63a5\u5230Internet\u4e5f\u963b\u6b62\u5177\u6709\u9876\u7ea7\u57dfqjz9zk(\u5982\u57df\u66ff\u6362\u4e2d\u4f7f\u7528\u7684)\u7684\u4efb\u4f55URL\u5c1d\u8bd5\u8fde\u63a5\u3002\n(Iridium\u548cInox\u529f\u80fd\u66f4\u6539)\u5728\u68c0\u6d4bIPv6\u53ef\u7528\u6027\u65f6\u9632\u6b62\u5bf9IPv6\u5730\u5740\u6267\u884cping\u64cd\u4f5c\u3002\u8bf7\u53c2\u9605\u4e0a\u9762\u7684--set-ipv6-probe-false\u6807\u5fd7\u6765\u8c03\u6574\u884c\u4e3a\u3002\n\u9664\u4e86\u672a\u641c\u7d22\u5230\u7684\u94ec\u4ecb\u7ecd\u7684\u529f\u80fd\u4e4b\u5916\uff0c\u672a\u641c\u7d22\u5230\u7684\u94ec\u8fd8\u9009\u62e9\u6027\u5730\u501f\u7528\u4e86\u4ee5\u4e0b\u9879\u76ee\u7684\u8bb8\u591a\u529f\u80fd(\u6309\u7167\u5927\u81f4\u7684\u91cd\u8981\u6027\u987a\u5e8f)\uff1a\n\u5728\u6b64\u5b58\u50a8\u5e93\u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u4e2d\u8ba8\u8bba\u548c\u8ddf\u8e2a\u5176\u4ed6\u5e73\u53f0\u3002\u5728\u8d21\u732e\u3001\u62a5\u544a\u3001\u8054\u7cfb\u90e8\u5206\u4e86\u89e3\u6709\u5173\u4f7f\u7528\u95ee\u9898\u8ddf\u8e2a\u5668\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u6ce8\u610f\uff1a\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u7531\u4efb\u4f55\u613f\u610f\u6784\u5efa\u548c\u63d0\u4ea4\u5b83\u4eec\u7684\u4eba\u63d0\u4f9b\u7684\u3002\u56e0\u4e3a\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u4e00\u5b9a\u662f\u53ef\u590d\u5236\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u4fdd\u8bc1\u771f\u5b9e\u6027\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\u88ab\u7be1\u6539\u7684\u53ef\u80fd\u6027\u59cb\u7ec8\u4e0d\u4e3a\u96f6\u3002\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\u5728\u4f60\u8eab\u4e0a\uff0c\u8bf7\u5728\u65b0\u7684\u4e00\u671f\u4e2d\u62a5\u544a\u3002\nMacOS\uff1a\u4ee5eloston-Cr\u7684\u5f62\u5f0f\u5728\u81ea\u5236\u8f6f\u4ef6\u4e2d\u63d0\u4f9b\u3002\u53ea\u9700\u8fd0\u884cBREW\u6876\uff0c\u83b7\u53d6eloston-Cr\uff0c\u7136\u540eBREW\u6876\u5b89\u88c5eloston-Cr\u5373\u53ef\u3002\u94ec\u5c06\u51fa\u73b0\u5728\u60a8\u7684/Applications\u76ee\u5f55\u4e2d\u3002\n\u8be5\u5b58\u50a8\u5e93\u53ea\u5305\u542b\u6240\u6709\u5e73\u53f0\u7684\u516c\u5171\u4ee3\u7801\uff1b\u5b83\u4e0d\u5305\u542b\u6784\u5efa\u672a\u641c\u7d22\u7684\u94ec\u6240\u9700\u7684\u6240\u6709\u914d\u7f6e\u548c\u811a\u672c\u3002\u5927\u591a\u6570\u7528\u6237\u5c06\u5e0c\u671b\u4f7f\u7528\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684repos\uff0c\u5176\u4e2d\u6240\u6709\u5269\u4f59\u7684\u914d\u7f6e\u548c\u811a\u672c\u90fd\u662f\u9488\u5bf9\u7279\u5b9a\u5e73\u53f0\u63d0\u4f9b\u7684\uff1a\n\u5982\u679c\u60a8\u5e0c\u671b\u5728\u81ea\u5df1\u7684\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5305\u542b\u672a\u641c\u7d22\u5230\u7684\u94ec\u4ee3\u7801\uff0c\u8bf7\u8003\u8651\u4f7f\u7528\u6b64repo\u4e2d\u7684\u6807\u8bb0\u3002\u8fd9\u4e9b\u6807\u7b7e\u9075\u5faa\u683c\u5f0f{Cr_Version}-{Revision}\uff0c\u5176\u4e2d\u3002\n\u7528\u6237\u7528\u4e8e\u6d4b\u8bd5\u548c\u8c03\u8bd5\u3001\u8d21\u732e\u4ee3\u7801\u3001\u63d0\u4f9b\u53cd\u9988\uff0c\u6216\u8005\u53ea\u662f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f7f\u7528\u672a\u641c\u7d22\u5230\u7684\u94ec\u3002", "note_en": "ungoogled-chromium retains the default Chromium experience as closely as possible. Unlike other Chromium forks that have their own visions of a web browser, ungoogled-chromium is essentially a drop-in replacement for Chromium.\n ungoogled-chromium features tweaks to enhance privacy, control, and transparency. However, almost all of these features must be manually activated or enabled. For more details, see  Feature Overview.\n     Without signing in to a Google Account, Chromium does pretty well in terms of security and privacy. However, Chromium still has some dependency on Google web services and binaries. In addition, Google designed Chromium to be easy and intuitive for users, which means they compromise on transparency and control of internal operations.\n  Remove all remaining background requests to any web services while building and running the browser\n  Remove all uses of pre-made binaries from the source code, and replace them with user-provided alternatives when possible.\n Disable features that inhibit control and transparency, and add or modify features that promote them (these changes will almost always require manual activation or enabling).\n These features are implemented as configuration flags, patches, and custom scripts. For more details, consult the  Design Documentation.\n  This section overviews the features of ungoogled-chromium. For more detailed information, it is best to consult the source code.\n     Replace many web domains in the source code with non-existent alternatives ending in  qjz9zk (known as domain substitution;  see docs/design.md for details)\n  Disable functionality specific to Google domains (e.g. Google Host Detector, Google URL Tracker, Google Cloud Messaging, Google Hotwording, etc.)\n Add many new command-line switches and  chrome://flags entries to configure disabled-by-default features. See  docs/flags.md for the exhaustive list.\n   Use HTTPS by default when a URL scheme is not provided (e.g. Omnibox, bookmarks, command-line)\n Add  Suggestions URL text field in the search engine editor ( chrome://settings/searchEngines) for customizing search engine suggestions.\n   Add a custom cross-platform build configuration and packaging wrapper for Chromium. It currently supports many Linux distributions, macOS, and Windows. (See  docs/design.md for details on the system.)\n    (Iridium Browser feature change) Prevent URLs with the  trk: scheme from connecting to the Internet Also prevents any URLs with the top-level domain  qjz9zk (as used in domain substitution) from attempting a connection.\n (Iridium and Inox feature change) Prevent pinging of IPv6 address when detecting the availability of IPv6. See the  --set-ipv6-probe-false flag above to adjust the behavior instead.\n  In addition to the features introduced by ungoogled-chromium, ungoogled-chromium selectively borrows many features from the following projects (in approximate order of significance):\n    Other platforms are discussed and tracked in this repository&#39;s Issue Tracker. Learn more about using the Issue Tracker under the section  Contributing, Reporting, Contacting.\n   NOTE: These binaries are provided by anyone who are willing to build and submit them. Because these binaries are not necessarily  reproducible, authenticity cannot be guaranteed; In other words, there is always a non-zero probability that these binaries may have been tampered with. In the unlikely event that this has happened to you, please  report it in a new issue.\n   macOS: Available in  Homebrew as   eloston-chromium. Just run  brew cask fetch eloston-chromium and  brew cask install eloston-chromium. Chromium will appear in your  /Applications directory.\n  This repository only contains the common code for all platforms; it does not contain all the configuration and scripts necessary to build ungoogled-chromium. Most users will want to use platform-specific repos, where all the remaining configuration and scripts are provided for specific platforms:\n  If you wish to include ungoogled-chromium code in your own build process, consider using  the tags in this repo. These tags follow the format  {chromium_version}-{revision} where\n                The users for testing and debugging,  contributing code, providing feedback, or simply using ungoogled-chromium in some capacity.", "posttime": "2020-06-07 13:26:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u529f\u80fd", "title": "\u8c37\u6b4cChromium\uff0c\u4e0d\u4e0e\u8c37\u6b4c\u96c6\u6210", "title_en": "Google Chromium, sans integration with Google", "transed": 1, "url": "https://github.com/Eloston/ungoogled-chromium", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u529f\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "cb9751d028428bfd1662a3c5a57cf8c5.png", "infoid": 1005530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3b\u8981\u7684\u53d8\u5316\u662f\u62c7\u6307\u7fa4\u96c6\u6539\u7f16\u81eaManuForm\u952e\u76d8(Geekhack)\u3002\u5899\u58c1\u88ab\u6539\u6210\u53ea\u843d\u5230\u5730\u677f\u4e0a\u3002\u952e\u76d8\u88ab\u53c2\u6570\u5316\u4ee5\u5141\u8bb8\u8c03\u6574\u4ee5\u4e0b\u5404\u9879\uff1a\n\u6211\u4e3a\u81ea\u5df1\u505a\u4e86\u4e00\u4e2a4x5\u7248\u672c(40%\u5927\u5c0f)\u3002\u9ed8\u8ba4\u7684\u5e10\u7bf7\u6bd4Dactyl\u591a\u4e00\u70b9\u3002\u6709\u5173\u6700\u5e38\u89c1\u7684\u914d\u7f6e\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6a21\u578b\u6587\u4ef6\uff1a\n\u9884\u518d\u751f\u7684STL\u6587\u4ef6\u4f4d\u4e8eThings/\u76ee\u5f55\u4e2d\u3002\u751f\u6210\u6a21\u578b\u65f6\uff0c\u5b83\u8fd8\u4f1a\u4e3a\u5e95\u677f\u751f\u6210.scad\u6a21\u578b\u3002\u8be5\u6a21\u578b\u53ef\u4ee5\u5bfc\u51fa\u5230OpenSCAD\u4e2d\u7684DXF\u6587\u4ef6\u3002Things/\u76ee\u5f55\u4e2d\u4e5f\u6709\u7528\u4e8e\u5e95\u677f\u7684DXF\u6587\u4ef6\u3002\u6fc0\u5149\u5207\u5272\u65f6\uff0c\u9700\u8981\u79fb\u9664\u4e00\u4e9b\u5185\u90e8\u5207\u5272\u3002\n\u8fd9\u4e2a\u578b\u53f7\u53ef\u80fd\u5f88\u96be\u6253\u5370\u3002\u5b83\u5f88\u5bbd\uff0c\u6240\u4ee5\u6211\u548cPLA\u5728Makerbot\u4e0a\u9047\u5230\u8fc7\u8fb9\u7f18\u7fd8\u66f2\u7684\u95ee\u9898\u3002\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u6253\u5370\u673a\u8ba4\u4e3a\u5b83\u7684\u5934\u5361\u4f4f\u4e86\u3002\u5373\u4f7f\u6210\u529f\u6253\u5370\uff0c\u7fd8\u66f2\u4e5f\u4f1a\u9020\u6210\u95ee\u9898\u3002\u5728\u4e00\u5f20\u6253\u5370\u4e0a\uff0cRJ-9\u652f\u67b6\u88ab\u538b\u6241\u4e86\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u526a\u4e0b\u8fde\u63a5\u5668\u6765\u9002\u5e94\u3002\nThingiverse\u4e2d\u76844x5 STL\u5de6/\u53f3\u5bf9\u4f4d\u4e8eThingiverse\u4e2d\uff0c\u7528\u4e8e\u516c\u5171\u6253\u5370\u3002\n\u6211\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u5e03\u7ebf\uff0c\u5373\u7528\u4e8c\u6781\u7ba1\u7684\u652f\u811a\u5f62\u6210\u6392\u7ebf\u8fde\u63a5\u3002(\u6211\u4e0d\u64c5\u957f\u710a\u63a5\uff0c\u6240\u4ee5\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u6709\u6311\u6218\u6027\u3002)\u5bf9\u4e8e\u8fd9\u4e00\u9762\uff0c\u6211\u7528\u78c1\u7ebf\u628a\u67f1\u5b50\u63a5\u4e0a\u7ebf\u3002(\u6211\u4e0d\u64c5\u957f\u710a\u63a5\uff0c\u6240\u4ee5\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u6709\u6311\u6218\u6027\u3002)\u3002\u90a3\u8fd8\u884c\u3002\u78c1\u7ebf\u591f\u7ec6\u4e86\uff0c\u5b83\u60f3\u56db\u5904\u8d70\u52a8\uff0c\u800c\u4e14\u5f88\u96be\u5224\u65ad\u4f60\u7684\u8fde\u63a5\u662f\u5426\u826f\u597d\u3002\n\u53e6\u4e00\u534a\uff0c\u6211\u7528\u8131\u8863\u677f\u505a\u6392\u7ebf\u8fde\u63a5\u3002\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u9884\u552e\u6240\u6709\u7684\u4e8c\u6781\u7ba1\u3002\u7136\u540e\uff0c\u6211\u628a\u5b83\u70ed\u7c98\u5230\u4f4d\uff0c\u5b8c\u6210\u4e86\u5176\u4ed6\u4e8c\u6781\u7ba1\u7aef\u5b50\u7684\u710a\u63a5\u3002\u6211\u5f88\u559c\u6b22\u8fd9\u79cd\u65b9\u6cd5\u3002\u4e8c\u6781\u7ba1\u7684\u8fde\u63a5\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u53ea\u9700\u56fa\u5b9a\u4e00\u7aef\u3002\u5728\u8fd9\u4e00\u534a\uff0c\u6211\u4e5f\u7528\u94dc\u5e26\u8fde\u63a5\u67f1\u5b50\u3002\u8fd9\u6bd4\u6211\u7528\u7684\u78c1\u7ebf\u597d\u4e00\u70b9\u3002\u5c06\u6765\uff0c\u6211\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u7528\u88f8\u7684\u9540\u9521\u94dc\u7ebf\u505a\u67f1\u5b50(\u4ec0\u4e48\u7684)\u3002\u6211\u7684\u5de5\u4f5c\u6bd4\u78c1\u7ebf\u597d\u4e00\u70b9\u3002\u5982\u679c\u662f\u5c06\u6765\u7684\u7248\u672c\uff0c\u6211\u53ef\u80fd\u4f1a\u8bd5\u7740\u53ea\u7528\u88f8\u7684\u9540\u9521\u94dc\u7ebf\u505a\u67f1\u5b50(\u4ec0\u4e48\u7684)\u3002\u5728\u8fd9\u4e00\u534a\u4e0a\uff0c\u6211\u53ef\u4ee5\u7528\u5265\u677f\u6765\u8fde\u63a5\u6240\u6709\u7684\u4e8c\u6781\u7ba1\u3002\u7136\u540e\uff0c\u6211\u628a\u5b83\u70ed\u7c98\u5230\u4f4d\uff0c\u5b8c\u6210\u5176\u4ed6\u4e8c\u6781\u7ba1\u7aef\u5b50\u7684\u710a\u63a5\u3002\u6211\u5f88\u559c\u6b22\u8fd9\u4e2a\u65b9\u6cd5\u3002\n\u8bf7\u6ce8\u610f\uff0c\u7535\u8bdd\u542c\u7b52\u7535\u7f06\u7684\u5bfc\u7ebf\u662f\u53cd\u5411\u7684\uff0c\u56e0\u6b64\u5728\u5c06\u8fd9\u4e9b\u5bfc\u7ebf\u8fde\u63a5\u5230\u63a7\u5236\u5668\u65f6\u8981\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\n3D\u6253\u5370\u90e8\u5206\u662f\u4e3b\u952e\u76d8\u3002\u4f60\u53ef\u4ee5\u5728\u5e95\u677f\u4e0a\u88c5\u4e0a\u87ba\u4e1d\u3002\u5e95\u677f\u4e0a\u6709\u4e13\u95e8\u7528\u6765\u88c53\u52306\u6beb\u7c73\u957fM3\u87ba\u4e1d\u7684\u70ed\u56fa\u63d2\u5165\u5b54\u3002\u7136\u540e\uff0c\u6211\u7528\u5706\u5934\u87ba\u4e1d\u8fde\u63a5\u5e95\u677f\u3002\u5982\u679c\u7535\u7ebf\u6ca1\u6709\u6643\u52a8\uff0c\u53ef\u80fd\u4e0d\u9700\u8981\u5e95\u677f\u3002\u4f60\u9700\u8981\u5728\u5e95\u90e8\u653e\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ee5\u9632\u6b62\u952e\u76d8\u6ed1\u52a8\u3002\u6ca1\u6709\u5e95\u677f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a61\u76ae\u57ab\uff0c\u4e5f\u53ef\u4ee5\u628a\u5e95\u90e8\u6d78\u6ce1\u4e00\u4e0b\u3002(\u5982\u679c\u6ca1\u6709\u5e95\u677f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a61\u76ae\u57ab\uff0c\u4e5f\u53ef\u4ee5\u628a\u5e95\u677f\u6d78\u6ce1\u5728\u4e00\u8d77)\uff0c\u5982\u679c\u6ca1\u6709\u5e95\u677f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a61\u76ae\u57ab\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5e95\u677f\u6d78\u6ce1\u5728\u5e95\u677f\u4e0a\u3002\u4f60\u9700\u8981\u5728\u5e95\u677f\u4e0a\u5b89\u88c5\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ee5\u9632\u6b62\u952e\u76d8\u6ed1\u52a8\u3002\u5982\u679c\u6ca1\u6709\u5e95\u677f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6a61\u76ae\u57ab\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5e95\u677f\u6d78\u6ce1\u5728\u5e95\u677f\u4e0a\u3002\n\u6ce8\uff1a\u60a8\u8fd8\u5e94\u786e\u4fdd\u56fa\u4ef6\u8bbe\u7f6e\u6b63\u786e(\u4f8b\u5982\uff1a\u7528\u5217\u9488\u66f4\u6362\u884c\u9488)\u3002\n\u56fa\u4ef6\u4e0e\u60a8\u8fde\u63a5\u7535\u8def\u7684\u65b9\u5f0f\u5bc6\u5207\u76f8\u5173\u3002\u6211\u5728\u8fd9\u91cc\u6539\u7f16\u4e86QMK\u56fa\u4ef6\u3002\u8fd9\u6837\uff0c\u6bcf\u4e00\u7aef\u90fd\u53ef\u4ee5\u5355\u72ec\u6216\u534f\u540c\u5de5\u4f5c\u3002\u8be5\u7f51\u7ad9\u8fd8\u663e\u793a\u4e86Arduino Pro Micro\u63a7\u5236\u5668\u7684\u8fde\u63a5\u3002\n\u751f\u6210\u6a21\u578b\u7684\u6e90\u4ee3\u7801(\u9664Things/\u548cResources/\u76ee\u5f55\u4ee5\u5916\u7684\u6240\u6709\u5185\u5bb9\u5747\u6839\u636eGNU AFFERO\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u7248\u672c3\u5206\u53d1\u3002\u751f\u6210\u7684\u6a21\u578b\u548cPCB\u8bbe\u8ba1\u5728\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u975e\u5546\u4e1a-\u7c7b\u4f3cShareAlike\u8bb8\u53ef\u8bc1\u7248\u672c3.0\u4e0b\u5206\u53d1\u3002", "note_en": "The main change is that the thumb cluster was adapted from the  ManuForm keyboard ( geekhack). The walls were changed to just drop to the floor. The keyboard is paramaterized to allow adjusting the following:\n  I built a 4x5 version (40% size) for myself. The default has a bit more tenting than the Dactyl. See the following model files for configurations that may be most common:\n           Pregenerated STL files are available in the  things/ directory.When a model is generated, it also generates a  .scad model for a bottom plate.This can be exported to a DXF file in OpenSCAD.The  things/ directory also has DXF files for the bottom plate.When laser cut, some of the inside cuts will need to be removed.\n This model can be tricky to print.It&#39;s wide, so I&#39;ve had problems with PLA on a Makerbot with edges warping.This can cause the printer to think its head is jammed.Even if it successfully prints, warping can cause problems.On one print, the RJ-9 holder was squished, so I had to cut down my connector to fit.\n   The 4x5 STL left/right pair from the  things/ directory is in the thingiverse for public printing\n    I wired one half using the traditional approach of using the legs of a diode to form the row connections.(I&#39;m not great at soldering, so this was challenging for me.)For this side, I used magnet wire to wire columns. That worked okay.The magnet wire is small enough, it wants to move around, and it&#39;s hard to tell if you have a good connection.\n  For another half, I used stripboard for the row connections.This allowed me to presolder all of the diodes.Then, I hot-glued this in place and finished the soldering of the other diode ends.I like this approach quite a lot.Connections for the diodes were much easier with one end fixed down.On this half, I also used copper tape to connect columns.This worked a bit better than the magnet wire for me.For a future version, I may try just bare tinned copper wire for columns (something like #20).With the stripboard, it&#39;s pretty easy keeping row and column connections separate.\n  Note that a telephone handset cable has leads that are reversed, so take this into account when connecting these leads to the controller.\n The 3D printed part is the main keyboard.You can attach a bottom plate with screws.The case has holes for heat-set inserts designed to hold 3- to 6-mm long M3 screws.Then, I used wafer-head screws to connect a bottom plate.If wires aren&#39;t dangling, a bottom plate may not be needed.You need something on the bottom to keep the keyboard from sliding around.Without a plate, you could use a rubber pad, or you could dip the bottom of the keyboard in PlastiDip.\n    NOTE: you also make sure the firmware is set up correctly (ex: change row pins with col pins)\n    Firmware goes hand in hand with how you wire the circuit.I adapted the QMK firmware  here.This allows each side to work separately or together.This site also shows connections for the Arduino Pro Micro controllers.\n   The source code for generating the models (everything excluding the  things/ and  resources/ directories is distributed under the  GNU AFFERO GENERAL PUBLIC LICENSE Version 3. The generated models and PCB designs are distributed under the  Creative Commons Attribution-NonCommercial-ShareAlike License Version 3.0.", "posttime": "2020-06-07 13:09:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u952e\u76d8,manuform,\u8fde\u63a5", "title": "Dactyl-ManuForm\u952e\u76d8", "title_en": "The Dactyl-ManuForm Keyboard", "transed": 1, "url": "https://github.com/abstracthat/dactyl-manuform", "via": "", "real_tags": ["\u952e\u76d8", "manuform", "\u8fde\u63a5"]}, {"category": "", "categoryclass": "", "imagename": "252685630d2099b84cb1de51742e0417.jpg", "infoid": 1005529, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e5f\u8bb8\u6211\u804c\u4e1a\u751f\u6daf\u4e2d\u53d1\u751f\u7684\u6700\u597d\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u8ba9\u51ef\u5170\u6765\u8d1f\u8d23\u6211\u3002\u6211\u9017\u7559\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u770b\u5230\u51ef\u5170\u7684\u6280\u672f\u51b3\u7b56\u5f00\u59cb\u7ed3\u51fa\u7855\u679c\u3002\u6211\u4ece\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u4f46\u4e5f\u56e0\u6b64\u5b66\u5230\u4e86\u5f88\u591a\u3002\u6211\u73b0\u5728\u5c31\u4e0d\u4f1a\u81ea\u7531\u5730\u6210\u4e3a\u7f16\u5199\u6570\u636e\u9a71\u52a8\u4ea7\u54c1\u7684\u5de5\u7a0b\u5e08\u4e86\uff01\u5982\u679c\u51ef\u5170\u6ca1\u6709\u5728\u90a3\u91cc\u5982\u6b64\u5f7b\u5e95\u5730\u5c06\u7740\u9646\u70b9\u653e\u5728\u6280\u672f\u9009\u62e9\u4e0a\u3002\n\u5728\u79bb\u5f00Etsy\u7684\u8fd9\u4e00\u5e74\u91cc\uff0c\u6211\u91cd\u65b0\u5524\u8d77\u4e86\u6211\u5173\u5fc3\u6280\u672f\u7684\u80fd\u529b\u3002\u6211\u7684\u601d\u60f3\u5df2\u7ecf\u6e05\u6670\u5230\u53ef\u4ee5\u8fde\u8d2f\u5730\u5199\u4e0b\u6765\u7684\u5730\u6b65\u3002\u63a5\u4e0b\u6765\u7684\u662f\u51ef\u5170\u683c\u5f0f\u5854\u7684\u5347\u534e\uff0c\u5e0c\u671b\u8fd9\u53ea\u4f1a\u8ba9\u4ed6\u7565\u611f\u9707\u60ca\u3002\n\u5047\u8bbe\u6bcf\u5bb6\u516c\u53f8\u83b7\u5f97\u5927\u7ea6\u4e09\u4e2a\u521b\u65b0\u4ee3\u91d1\u5238\u3002\u4f60\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u82b1\u8fd9\u4e9b\u94b1\uff0c\u4f46\u662f\u4f9b\u5e94\u662f\u56fa\u5b9a\u7684\uff0c\u9700\u8981\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u3002\u5728\u4f60\u8fbe\u5230\u4e00\u5b9a\u7684\u7a33\u5b9a\u6027\u548c\u6210\u719f\u5ea6\u4e4b\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u591a\uff0c\u4f46\u603b\u4f53\u8d8b\u52bf\u662f\u9ad8\u4f30\u4e86\u4f60\u94b1\u5305\u7684\u5185\u5bb9\u3002\u663e\u7136\uff0c\u8fd9\u4e2a\u6a21\u578b\u662f\u8fd1\u4f3c\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u662f\u6709\u5e2e\u52a9\u7684\u3002\n\u5982\u679c\u60a8\u9009\u62e9\u7528NodeJS\u7f16\u5199\u60a8\u7684\u7f51\u7ad9\uff0c\u90a3\u4e48\u60a8\u521a\u521a\u82b1\u8d39\u4e86\u60a8\u7684\u4e00\u4e2a\u521b\u65b0\u4ee4\u724c\u3002\u5982\u679c\u60a8\u9009\u62e9\u4f7f\u7528MongoDB\uff0c\u90a3\u4e48\u60a8\u53ea\u82b1\u4e86\u4e00\u4e2a\u521b\u65b0\u4ee4\u724c\u3002\u5982\u679c\u60a8\u9009\u62e9\u4f7f\u7528\u5df2\u5b58\u5728\u4e00\u5e74\u6216\u4e0d\u5230\u4e00\u5e74\u7684\u670d\u52a1\u53d1\u73b0\u6280\u672f\uff0c\u60a8\u53ea\u9700\u82b1\u6389\u60a8\u7684\u4e00\u4e2a\u521b\u65b0\u4ee4\u724c\u3002\u5982\u679c\u60a8\u9009\u62e9\u7f16\u5199\u81ea\u5df1\u7684\u6570\u636e\u5e93\uff0c\u5929\u54ea\uff0c\u60a8\u5c31\u6709\u9ebb\u70e6\u4e86\u3002\n\u5982\u679c\u4f60\u662f\u4e00\u5bb6javascript\u54a8\u8be2\u516c\u53f8\u6216\u4e00\u5bb6\u6570\u636e\u5e93\u516c\u53f8\uff0c\u8fd9\u4e9b\u9009\u62e9\u4e2d\u7684\u4efb\u4f55\u4e00\u9879\u90fd\u53ef\u80fd\u662f\u660e\u667a\u7684\u3002\u4f46\u4f60\u53ef\u80fd\u4e0d\u662f\u3002\u4f60\u53ef\u80fd\u5728\u4e3a\u4e00\u5bb6\u516c\u53f8\u5de5\u4f5c\uff0c\u8fd9\u5bb6\u516c\u53f8\u81f3\u5c11\u5728\u8868\u9762\u4e0a\u6b63\u5728\u91cd\u65b0\u601d\u8003\u5168\u7403\u5546\u4e1a\uff0c\u6216\u8005\u91cd\u65b0\u53d1\u660e\u7f51\u7edc\u652f\u4ed8\uff0c\u6216\u8005\u8ffd\u6c42\u5176\u4ed6\u4e00\u4e9b\u5408\u9002\u7684\u53f2\u8bd7\u822c\u7684\u4f7f\u547d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u6709\u9650\u7684\u6ce8\u610f\u529b\u6295\u5165\u5230\u521b\u65b0ssh\u4e0a\u662f\u5931\u8d25\u7684\u7edd\u4f73\u65b9\u5f0f\u3002\u6216\u8005\u5145\u5176\u91cf\u53ea\u80fd\u63a8\u8fdf\u6210\u529f[1]\u3002\n\u4ec0\u4e48\u7b97\u65e0\u804a\uff1f\u8fd9\u6709\u70b9\u68d8\u624b\u3002\u201c\u65e0\u804a\u201d\u4e0d\u5e94\u8be5\u548c\u201c\u7cdf\u7cd5\u201d\u6df7\u4e3a\u4e00\u8c08\u3002\u6709\u4e00\u4e9b\u6280\u672f\u65e2\u65e0\u804a\u53c8\u7cdf\u7cd5[2]\u3002\u4f60\u4e0d\u5e94\u8be5\u7528\u8fd9\u4e9b\u4e1c\u897f\u3002\u4f46\u6709\u8bb8\u591a\u6280\u672f\u9009\u62e9\u662f\u65e0\u804a\u548c\u597d\u7684\uff0c\u6216\u8005\u81f3\u5c11\u662f\u8db3\u591f\u597d\u7684\u3002MySQL\u5f88\u65e0\u804a\u3002\u6ce2\u65af\u683c\u96f7\u65af\u5f88\u65e0\u804a\u3002PHP\u5f88\u65e0\u804a\u3002Python\u5f88\u65e0\u804a\u3002memcached\u5f88\u65e0\u804a\u3002\u9c7f\u9c7c\u5f88\u65e0\u804a\u3002\u514b\u4f26\u5f88\u65e0\u804a\u3002\n\u65e0\u804a(\u5982\u6b64\u53d7\u9650)\u7684\u597d\u5904\u662f\uff0c\u8fd9\u4e9b\u4e1c\u897f\u7684\u80fd\u529b\u88ab\u5f88\u597d\u5730\u7406\u89e3\u4e86\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u7684\u5931\u8d25\u6a21\u5f0f\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\u4efb\u4f55\u4e86\u89e3\u6211\u7684\u4eba\u90fd\u4f1a\u660e\u767d\uff0c\u6211\u73b0\u5728\u53ea\u662f\u6000\u7740\u4e00\u79cd\u65e0\u6cd5\u6297\u62d2\u7684\u4e0d\u9002\u611f\u6765\u53ec\u5524\u5510\u00b7\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7(Don Rumsfeld)\u7684\u5e7d\u7075\uff0c\u4f46\u6211\u5fc5\u987b\u8fd9\u6837\u505a\u3002\n\u5df2\u77e5\u7684\u672a\u77e5\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u6b64\u6570\u636e\u5e93\u8fbe\u5230100%CPU\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u672a\u77e5\u662f\u8fd9\u6837\u7684\uff1a\u5929\u54ea\uff0c\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u60f3\u5230\u5199\u5165\u7edf\u8ba1\u6570\u636e\u4f1a\u5bfc\u81f4GC\u6682\u505c\u3002\n\u8fd9\u4e24\u4e2a\u96c6\u5408\u901a\u5e38\u90fd\u4e0d\u662f\u7a7a\u7684\uff0c\u5373\u4f7f\u5bf9\u4e8e\u5b58\u5728\u4e86\u51e0\u5341\u5e74\u7684\u6280\u672f\u4e5f\u662f\u5982\u6b64\u3002\u4f46\u5bf9\u4e8e\u95ea\u4eae\u7684\u65b0\u6280\u672f\u6765\u8bf4\uff0c\u672a\u77e5\u7684\u672a\u77e5\u56e0\u7d20\u8981\u5927\u5f97\u591a\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\n\u6211\u6beb\u65e0\u6b49\u610f\u5730\u8ba4\u4e3a\u504f\u7231\u67af\u71e5\u7684\u6280\u672f\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u9700\u8981\u8003\u8651\u7684\u552f\u4e00\u56e0\u7d20\u3002\u6280\u672f\u9009\u62e9\u4e0d\u662f\u5b64\u7acb\u7684\u3002\u5b83\u4eec\u7684\u8303\u56f4\u6d89\u53ca\u5230\u60a8\u7684\u6574\u4e2a\u56e2\u961f\u3001\u7ec4\u7ec7\u548c\u4ece\u60a8\u7684\u9009\u62e9\u603b\u6570\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u7cfb\u7edf\u3002\n\u5411\u60a8\u7684\u516c\u53f8\u6dfb\u52a0\u6280\u672f\u662f\u6709\u6210\u672c\u7684\u3002\u4f5c\u4e3a\u4e00\u4e2a\u62bd\u8c61\u7684\u9648\u8ff0\uff0c\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u5728\u4f7f\u7528Ruby\uff0c\u90a3\u4e48\u5c06Python\u6dfb\u52a0\u5230\u6df7\u5408\u4e2d\u611f\u89c9\u5e76\u4e0d\u660e\u667a\uff0c\u56e0\u4e3a\u7531\u6b64\u4ea7\u751f\u7684\u590d\u6742\u6027\u5c06\u8d85\u8fc7Python\u7684\u8fb9\u9645\u6548\u7528\u3002\u4f46\u4e0d\u77e5\u4f55\u6545\uff0c\u5f53\u6211\u4eec\u8c08\u8bbaPython\u548cScala\uff0c\u6216\u8005MySQL\u548cRedis\u65f6\uff0c\u4eba\u4eec\u5931\u53bb\u4e86\u7406\u667a\uff0c\u629b\u5f03\u4e86\u6240\u6709\u7684\u9650\u5236\uff0c\u5f00\u59cb\u72c2\u70ed\u5730\u9f13\u5439\u4f7f\u7528\u6700\u597d\u7684\u5de5\u5177\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u7684\u529f\u80fd\u662f\u5c06\u4e1a\u52a1\u95ee\u9898\u6620\u5c04\u5230\u6d89\u53ca\u8f6f\u4ef6\u9009\u62e9\u7684\u89e3\u51b3\u65b9\u6848\u7a7a\u95f4\u3002\u5982\u679c\u8f6f\u4ef6\u7684\u9009\u62e9\u771f\u7684\u6ca1\u6709\u5305\u88b1\uff0c\u60a8\u786e\u5b9e\u53ef\u4ee5\u9009\u62e9\u4e00\u5927\u5806\u672c\u5730\u6700\u597d\u7684\u5de5\u5177\u6765\u89e3\u51b3\u60a8\u7684\u5404\u79cd\u95ee\u9898\u3002\n\u4f46\u5f53\u7136\uff0c\u884c\u674e\u662f\u5b58\u5728\u7684\u3002\u6211\u4eec\u79f0\u8fd9\u4e9b\u5305\u88b1\u4e3a\u201c\u64cd\u4f5c\u201d\uff0c\u5728\u8f83\u5c0f\u7a0b\u5ea6\u4e0a\u79f0\u4e3a\u201c\u8ba4\u77e5\u5f00\u9500\u201d\u3002\u4f60\u5f97\u76d1\u89c6\u8fd9\u4e1c\u897f\u3002\u60a8\u5fc5\u987b\u5f04\u6e05\u695a\u5355\u5143\u6d4b\u8bd5\u3002\u4f60\u9700\u8981\u77e5\u9053\u5b83\u7684\u7b2c\u4e00\u4ef6\u4e8b\u624d\u80fd\u7834\u89e3\u5b83\u3002\u60a8\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u5316\u811a\u672c\u3002\u6211\u53ef\u4ee5\u5728\u8fd9\u91cc\u5446\u4e0a\u51e0\u5929\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4f1a\u5f88\u5feb\u79ef\u7d2f\u8d77\u6765\u3002\n\u201c\u6700\u9002\u5408\u5de5\u4f5c\u7684\u5de5\u5177\u201d\u601d\u7ef4\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5b83\u5bf9\u201c\u6700\u597d\u201d\u548c\u201c\u5de5\u4f5c\u201d\u8fd9\u4e24\u4e2a\u8bcd\u7684\u770b\u6cd5\u8fc7\u4e8e\u77ed\u89c6\u3002\u4f60\u7684\u5de5\u4f5c\u5c31\u662f\u8ba9\u516c\u53f8\u7ee7\u7eed\u7ecf\u8425\uff0c\u8be5\u6b7b\u7684\u3002\u800c\u201c\u6700\u597d\u7684\u201d\u5de5\u5177\u662f\u5bf9\u5c3d\u53ef\u80fd\u591a\u7684\u95ee\u9898\u5360\u636e\u201c\u6700\u4e0d\u7cdf\u7cd5\u201d\u4f4d\u7f6e\u7684\u5de5\u5177\u3002\n\u57fa\u672c\u4e0a\u603b\u662f\u8fd9\u6837\u7684\uff0c\u4fdd\u6301\u7cfb\u7edf\u53ef\u9760\u5de5\u4f5c\u7684\u957f\u671f\u6210\u672c\u8fdc\u8fdc\u8d85\u8fc7\u60a8\u5728\u6784\u5efa\u5b83\u65f6\u9047\u5230\u7684\u4efb\u4f55\u4e0d\u4fbf\u3002\u6210\u719f\u800c\u9ad8\u6548\u7684\u5f00\u53d1\u4eba\u5458\u660e\u767d\u8fd9\u4e00\u70b9\u3002\n\u5c06\u8fd9\u4e00\u63a8\u7406\u63a8\u8bba\u5230\u8352\u8c2c\u7684\u7a0b\u5ea6\u5c06\u610f\u5473\u7740\u9009\u62e9Java\uff0c\u7136\u540e\u5c1d\u8bd5\u5728\u6839\u672c\u4e0d\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e00\u4e2a\u7f51\u7ad9\u3002\u90a3\u5c31\u592a\u75af\u72c2\u4e86\u3002\u4f60\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u628a\u4e1c\u897f\u6dfb\u52a0\u5230\u4f60\u7684\u5de5\u5177\u7bb1\u91cc\u3002\n\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u662f\u627f\u8ba4\u8fd9\u662f\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u4e00\u4e2a\u5bf9\u8bdd\u3002\u65b0\u6280\u672f\u6700\u7ec8\u4f1a\u5728\u5168\u516c\u53f8\u8303\u56f4\u5185\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u6b64\u589e\u52a0\u6280\u672f\u662f\u4e00\u4e2a\u9700\u8981\u5168\u516c\u53f8\u53ef\u89c1\u5ea6\u7684\u51b3\u5b9a\u3002\u60a8\u7684\u7ec4\u7ec7\u7ec6\u8282\u53ef\u80fd\u4f1a\u8feb\u4f7f\u5bf9\u8bdd\uff0c\u6216\u8005\u5b83\u4eec\u53ef\u80fd\u4f1a\u65b9\u4fbf\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u4e0e\u4efb\u4f55\u4eba\u4ea4\u8c08\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u65b0\u7684\u6570\u636e\u5e93\u548c\u961f\u5217\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u5fc5\u987b\u8bbe\u5b9a\u6587\u5316\u671f\u671b\uff0c\u8fd9\u662f\u6211\u4eec\u90fd\u5728\u8c08\u8bba\u7684\u4e1c\u897f\u3002\n\u6211\u5728\u8fd9\u91cc\u63a8\u8350\u7684\u6700\u6709\u4ef7\u503c\u7684\u7ec3\u4e60\u4e4b\u4e00\u662f\u8003\u8651\u5982\u4f55\u5728\u4e0d\u589e\u52a0\u4efb\u4f55\u65b0\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u773c\u524d\u7684\u95ee\u9898\u3002\u9996\u5148\uff0c\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u68c0\u6d4b\u5230\u201c\u95ee\u9898\u201d\u662f\u67d0\u4eba\u771f\u7684\u60f3\u8981\u4f7f\u7528\u6280\u672f\u7684\u60c5\u51b5\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u60a8\u5e94\u8be5\u7acb\u5373\u4e2d\u6b62\u3002\n\u4e00\u5c0f\u5957\u6280\u672f\u9009\u62e9\u53ef\u4ee5\u8d70\u591a\u8fdc\uff0c\u8fd9\u53ef\u80fd\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u51e0\u4e4e\u4ece\u6765\u90fd\u4e0d\u662f\u201c\u6211\u4eec\u505a\u4e0d\u5230\u201d\uff0c\u5b83\u901a\u5e38\u53ea\u662f\u5728\u201c\u55ef\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\uff0c\u4f46\u592a\u96be\u4e86\u201d[4]\u4e4b\u95f4\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u73b0\u5728\u62e5\u6709\u7684\u4e1c\u897f\u4e0d\u80fd\u5b9e\u73b0\u4f60\u7684\u76ee\u6807\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u5c31\u662f\u60f3\u5f97\u4e0d\u591f\u521b\u9020\u6027\u3002\n\u51c6\u786e\u5730\u5199\u4e0b\u5f53\u524d\u5806\u6808\u662f\u4ec0\u4e48\u4f7f\u89e3\u51b3\u95ee\u9898\u7684\u6210\u672c\u548c\u96be\u5ea6\u9ad8\u5f97\u4ee4\u4eba\u671b\u800c\u5374\u6b65\uff0c\u8fd9\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u8fd9\u4e0e\u524d\u9762\u7684\u7ec3\u4e60\u6709\u5173\uff0c\u4f46\u7565\u6709\u4e0d\u540c\u3002\n\u65b0\u7684\u6280\u672f\u9009\u62e9\u53ef\u80fd\u7eaf\u7cb9\u662f\u76f8\u52a0\u7684(\u4f8b\u5982\uff1a\u201c\u6211\u4eec\u8fd8\u6ca1\u6709\u7f13\u5b58\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6dfb\u52a0memcached\u201d)\u3002\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u4f1a\u91cd\u53e0\u6216\u53d6\u4ee3\u4f60\u5df2\u7ecf\u5728\u4f7f\u7528\u7684\u4e1c\u897f\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u60a8\u5e94\u8be5\u5bf9\u5c06\u65e7\u529f\u80fd\u8fc1\u79fb\u5230\u65b0\u7cfb\u7edf\u8bbe\u5b9a\u660e\u786e\u7684\u671f\u671b\u3002\u653f\u7b56\u901a\u5e38\u5e94\u8be5\u662f\u201c\u6211\u4eec\u81f4\u529b\u4e8e\u8fc1\u79fb\u201d\uff0c\u5e76\u6709\u4e00\u4e2a\u5efa\u8bae\u7684\u65f6\u95f4\u8868\u3002\u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u5c06\u6b8b\u9ab8\u4fdd\u6301\u5728\u53ef\u7ba1\u7406\u7684\u6c34\u5e73\uff0c\u5e76\u907f\u514d\u6269\u6563\u5c40\u90e8\u6700\u4f18\u89e3\u51b3\u65b9\u6848\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u5e76\u4e0d\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff0c\u4e5f\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u9ebb\u70e6\u3002\u8fd9\u662f\u51e0\u4e2a\u8981\u4f5c\u4e3a\u5bb6\u5ead\u4f5c\u4e1a\u586b\u5199\u7684\u95ee\u9898\uff0c\u7136\u540e\u53ec\u5f00\u4f1a\u8bae\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u8ba4\u4e3a\uff0c\u5982\u679c\u4e00\u9879\u65b0\u6280\u672f(\u6216\u8981\u5728\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u521b\u5efa\u7684\u65b0\u670d\u52a1)\u80fd\u591f\u6beb\u53d1\u65e0\u635f\u5730\u901a\u8fc7\u8fd9\u4e00\u6311\u6218\uff0c\u90a3\u5c31\u5f88\u597d\u4e86\u3002\n\u591a\u8bed\u79cd\u7f16\u7a0b\u7684\u9500\u552e\u627f\u8bfa\u662f\u8ba9\u5f00\u53d1\u4eba\u5458\u5b8c\u5168\u81ea\u7531\u5730\u9009\u62e9\u4ed6\u4eec\u81ea\u5df1\u7684\u5de5\u5177\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u5728\u89e3\u51b3\u95ee\u9898\u65f6\u66f4\u52a0\u6709\u6548\u3002\u5f80\u597d\u4e86\u8bf4\uff0c\u8fd9\u662f\u5bf9\u95ee\u9898\u7684\u5929\u771f\u5b9a\u4e49\uff0c\u5f80\u574f\u4e86\u8bf4\uff0c\u662f\u6709\u52a8\u673a\u7684\u63a8\u7406\u3002\u8fd9\u9020\u6210\u7684\u65e5\u5e38\u64cd\u4f5c\u52b3\u4f5c\u7684\u91cd\u91cf\u4f1a\u628a\u4f60\u538b\u6b7b\u3002\n\u5bf9\u6280\u672f\u7684\u614e\u91cd\u9009\u62e9\u7ed9\u4e86\u5de5\u7a0b\u5b66\u5934\u8111\u771f\u6b63\u7684\u81ea\u7531\uff1a\u601d\u8003\u66f4\u5927\u95ee\u9898\u7684\u81ea\u7531\u3002\u6280\u672f\u672c\u8eab\u5c31\u662f\u86c7\u6cb9\u3002\n\u66f4\u65b0\uff0c2015\u5e747\u670827\u65e5\uff1a\u6211\u6839\u636e\u8fd9\u7bc7\u6587\u7ae0\u5199\u4e86\u4e00\u7bc7\u6f14\u8bb2\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u5b83\u3002\nEtsy\u65e9\u5e74\u66fe\u6df1\u53d7\u5176\u5bb3\u3002\u6211\u4eec\u96c7\u4f63\u4e86\u4e00\u7fa4Python\u7a0b\u5e8f\u5458\uff0c\u5e76\u51b3\u5b9a\u6211\u4eec\u9700\u8981\u4e3a\u4ed6\u4eec\u627e\u5230\u5728Python\u4e2d\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u8111\u6d77\u4e2d\u552f\u4e00\u6d6e\u73b0\u7684\u4e8b\u60c5\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6beb\u65e0\u610f\u4e49\u7684\u4e2d\u95f4\u5c42\uff0c\u8fd9\u9700\u8981\u591a\u5e74\u7684\u52aa\u529b\u624d\u80fd\u622a\u65ad\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7b2c90\u4e2a\u767e\u5206\u4f4d\u6570\u7684\u641c\u7d22\u5ef6\u8fdf\u7ea6\u4e3a2\u5206\u949f\u3002Etsy\u5e76\u6ca1\u6709\u5931\u8d25\uff0c\u4f46\u5b83\u5df2\u7ecf\u597d\u51e0\u5e74\u6ca1\u6709\u53d1\u8d27\u4e86\u3002\u56e0\u6b64\uff0c\u5b83\u82b1\u4e86\u6bd4\u9700\u8981\u7684\u66f4\u957f\u7684\u65f6\u95f4\u624d\u53d6\u5f97\u6210\u529f\u3002\n\u6211\u4eec\u7ecf\u5e38\u4e0d\u7ecf\u610f\u5730\u5c06\u5384\u8fd0\u7684\u65e0\u804a/\u7cdf\u7cd5\u4ea4\u96c6\u79f0\u4e3a\u201c\u4f01\u4e1a\u8f6f\u4ef6\u201d\uff0c\u4f46\u8fd9\u4e2a\u672f\u8bed\u53ef\u80fd\u5e76\u4e0d\u51c6\u786e\u3002\n\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7\u8fd9\u6837\u8bf4\uff0c\u6709\u610f\u65e0\u610f\u5730\u6697\u793a\u4e86\u82cf\u683c\u62c9\u5e95\u6096\u8bba\u3002\u6240\u6709\u4eba\u90fd\u8bf4\uff0c\u82cf\u683c\u62c9\u5e95\u5728\u5f88\u591a\u65b9\u9762\u90fd\u662f\u4e00\u4e2a\u6df1\u601d\u719f\u8651\u7684\u4eba\uff0c\u800c\u62c9\u59c6\u65af\u83f2\u5c14\u5fb7\u4e0d\u662f\u3002\n\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0cEtsy\u7684\u6d3b\u52a8\u63d0\u8981\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5f53\u6211\u4eec\u6784\u5efa\u6b64\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u975e\u5e38\u52aa\u529b\u5730\u5c06Etsy\u7684\u5927\u90e8\u5206\u6574\u5408\u5230PHP\u3001MySQL\u3001memcached\u548cGearman(PHP\u4f5c\u4e1a\u670d\u52a1\u5668)\u4e0a\u3002\u5728\u8be5\u5806\u6808\u4e0a\u5b9e\u73b0\u8be5\u529f\u80fd\u8981\u6bd4\u4f7f\u7528Redis(\u4e5f\u53ef\u80fd\u4e0d\u662f)\u8981\u590d\u6742\u5f97\u591a\u3002\u4f46\u662f\u5728\u8be5\u5806\u6808\u4e0a\u6784\u5efa\u6d3b\u52a8\u63d0\u8981\u662f\u5b8c\u5168\u53ef\u80fd\u7684\u3002\n\u8fd9\u4e2a\u9879\u76ee\u53d1\u751f\u4e86\u4e00\u4ef6\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u60c5\uff1a\u6211\u4eec\u7684\u6ce8\u610f\u529b\u5728\u51e0\u5e74\u5185\u8f6c\u79fb\u5230\u4e86\u5176\u4ed6\u5730\u65b9\u3002\u5728\u6b64\u671f\u95f4\uff0c\u5728\u6839\u672c\u6ca1\u6709\u4eba\u89c2\u770b\u7684\u60c5\u51b5\u4e0b\uff0c\u6d3b\u52a8\u9988\u9001\u7684\u89c4\u6a21\u6269\u5927\u4e8620\u500d\u3002\u6211\u4eec\u6ca1\u6709\u4e13\u95e8\u9488\u5bf9\u6d3b\u52a8\u63d0\u8981\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5171\u4eab\u5e73\u53f0\uff0c\u6240\u4ee5\u968f\u7740\u4f7f\u7528\u91cf\u7684\u7206\u70b8\u6027\u589e\u957f\uff0c\u4e00\u5207\u90fd\u8fdb\u884c\u5f97\u5f88\u597d\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u662f\u9650\u5236\u6280\u672f\u9009\u62e9\u7684\u957f\u671f\u597d\u5904\u3002\n\u8fd9\u4e0d\u662f\u4e00\u4e2a\u7edd\u5bf9\u4e3b\u4e49\u7acb\u573a--\u867d\u7136\u5b58\u50a8\u5728memcached\u4e2d\u7684\u6d3b\u52a8\u63d0\u8981\u88ab\u8ba4\u4e3a\u662f\u5b9e\u7528\u7684\uff0c\u4f46\u5728\u539f\u59cbPHP\u4e2d\u4f7f\u7528\u5206\u9762\u5b9e\u73b0\u5168\u6587\u641c\u7d22\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6240\u4ee5Etsy\u4f7f\u7528\u4e86Solr\u3002", "note_en": "Probably the single best thing to happen to me in my career was having had  Kellan placed in charge of me. I stuck around long enough to see Kellan\u2019s technical decisionmaking start to bear fruit. I learned a great deal  from this, but I also learned a great deal as a  result of this. I would not have been free to become the engineer that wrote  Data Driven Products Now! if Kellan had not been there to so thoroughly stick the landing on technology choices.\n  In the year since leaving Etsy, I\u2019ve resurrected my ability to care about technology. And my thoughts have crystallized to the point where I can write them down coherently. What follows is a distillation of the Kellan gestalt, which will hopefully serve to horrify him only slightly.\n  Let\u2019s say every company gets about three innovation tokens. You can spend these however you want, but the supply is fixed for a long while. You might get a few more  after you achieve a  certain level of stability and maturity, but the general tendency is to overestimate the contents of your wallet. Clearly this model is approximate, but I think it helps.\n If you choose to write your website in NodeJS, you just spent one of your innovation tokens. If you choose to use  MongoDB, you just spent one of your innovation tokens. If you choose to use  service discovery tech that\u2019s existed for a year or less, you just spent one of your innovation tokens. If you choose to write your own database, oh god, you\u2019re in trouble.\n Any of those choices might be sensible if you\u2019re a javascript consultancy, or a database company. But you\u2019re probably not. You\u2019re probably working for a company that is at least ostensibly  rethinking global commerce or  reinventing payments on the web or pursuing some other suitably epic mission. In that context, devoting any of your limited attention to innovating ssh is an excellent way to fail. Or at best, delay success  [1].\n What counts as boring? That\u2019s a little tricky. \u201cBoring\u201d should not be conflated with \u201cbad.\u201d There is technology out there that is both boring and bad  [2]. You should not use any of that. But there are many choices of technology that are boring and good, or at least good enough. MySQL is boring. Postgres is boring. PHP is boring. Python is boring. Memcached is boring. Squid is boring. Cron is boring.\n The nice thing about boringness (so constrained) is that the capabilities of these things are well understood. But more importantly, their failure modes are well understood. Anyone who knows me well will understand that it\u2019s only with a overwhelming sense of malaise that I now invoke the spectre of Don Rumsfeld, but I must.\n   A known unknown is something like:  we don\u2019t know what happens when this database hits 100% CPU.\n  An unknown unknown is something like:  geez it didn\u2019t even occur to us that  writing stats would cause GC pauses.\n Both sets are typically non-empty, even for tech that\u2019s existed for decades. But for shiny new technology the magnitude of unknown unknowns is significantly larger, and this is important.\n  I unapologetically think a bias in favor of boring technology is a good thing, but it\u2019s not the only factor that needs to be considered. Technology choices don\u2019t happen in isolation. They have a scope that touches your entire team, organization, and the system that emerges from the sum total of your choices.\n Adding technology to your company comes with a cost. As an abstract statement this is obvious: if we\u2019re already using Ruby, adding Python to the mix doesn\u2019t feel sensible because the resulting complexity would outweigh Python\u2019s marginal utility. But somehow when we\u2019re talking about Python and Scala or MySQL and Redis people  lose their minds, discard all constraints, and start raving about using the best tool for the job.\n Your function in a nutshell is to map business problems onto a solution space that involves choices of software. If the choices of software were truly without baggage, you could indeed pick a whole mess of locally-the-best tools for your assortment of problems.\n  But of course, the baggage exists. We call the baggage \u201coperations\u201d and to a lesser extent \u201ccognitive overhead.\u201d You have to monitor the thing. You have to figure out unit tests. You need to know the first thing about it to hack on it. You need an init script. I could go on for days here, and all of this adds up fast.\n  The problem with \u201cbest tool for the job\u201d thinking is that it takes a myopic view of the words \u201cbest\u201d and \u201cjob.\u201d Your job is keeping the company in business, god damn it. And the \u201cbest\u201d tool is the one that occupies the \u201cleast worst\u201d position for as many of your problems as possible.\n It is basically always the case that the long-term costs of keeping a system working reliably vastly exceed any inconveniences you encounter while building it. Mature and productive developers understand this.\n  Taking this reasoning to its  reductio ad absurdum would mean picking Java, and then trying to implement a website without using anything else at all. And that would be crazy. You need some means to add things to your toolbox.\n An important first step is to acknowledge that this is a process, and a conversation. New tech eventually has company-wide effects, so adding tech is a decision that requires company-wide visibility. Your organizational specifics may force the conversation, or  they may facilitate developers adding new databases and queues without talking to anyone. One way or another you have to set cultural expectations that  this is something we all talk about.\n One of the most worthwhile exercises I recommend here is to  consider how you would solve your immediate problem without adding anything new. First, posing this question should detect the situation where the \u201cproblem\u201d is that someone really wants to use the technology. If that is the case, you should immediately abort.\n  It can be amazing how far a small set of technology choices can go. The answer to this question in practice is almost never \u201cwe can\u2019t do it,\u201d it\u2019s usually just somewhere on the spectrum of \u201cwell, we could do it, but it would be too hard\u201d  [4]. If you think you can\u2019t accomplish your goals with what you\u2019ve got now, you are probably just not thinking creatively enough.\n It\u2019s helpful to  write down exactly what it is about the current stack that makes solving the problem prohibitively expensive and difficult. This is related to the previous exercise, but it\u2019s subtly different.\n New technology choices might be purely additive (for example: \u201cwe don\u2019t have caching yet, so let\u2019s add memcached\u201d). But they might also overlap or replace things you are already using. If that\u2019s the case, you should  set clear expectations about migrating old functionality to the new system. The policy should typically be \u201cwe\u2019re committed to migrating,\u201d with a proposed timeline. The intention of this step is to keep wreckage at manageable levels, and to avoid proliferating locally-optimal solutions.\n This process is not daunting, and it\u2019s not much of a hassle. It\u2019s a handful of questions to fill out as homework, followed by a meeting to talk about it. I think that if a new technology (or a new service to be created on your infrastructure) can pass through this gauntlet unscathed, adding it is fine.\n  Polyglot programming is sold with the promise that letting developers choose their own tools with complete freedom will make them more effective at solving problems. This is a naive definition of the problems at best, and motivated reasoning at worst. The weight of day-to-day operational  toil this creates crushes you to death.\n Mindful choice of technology gives engineering minds real freedom: the freedom to  contemplate bigger questions. Technology for its own sake is snake oil.\n Update, July 27th 2015: I wrote a talk based on this article. You can see it  here.\n  Etsy in its early years suffered from this pretty badly. We hired a bunch of Python programmers and decided that we needed to find something for them to do in Python, and the only thing that came to mind was creating a pointless middle layer that  required years of effort to amputate. Meanwhile, the 90th percentile search latency was about two minutes.  Etsy didn&#39;t fail, but it went several years without shipping anything at all. So it took longer to succeed than it needed to.\n  We often casually refer to the boring/bad intersection of doom as \u201centerprise software,\u201d but that terminology may be imprecise.\n  In saying this Rumsfeld was either intentionally or unintentionally alluding to  the Socratic Paradox. Socrates was by all accounts a thoughtful individual in a number of ways that Rumsfeld is not.\n  A good example of this from my experience is  Etsy\u2019s activity feeds. When we built this feature, we were working pretty hard to consolidate most of Etsy onto PHP, MySQL, Memcached, and Gearman (a PHP job server). It was much more complicated to implement the feature on that stack than it might have been with something like Redis (or  maybe not). But it is absolutely possible to build activity feeds on that stack.\n  An amazing thing happened with that project: our attention turned elsewhere for several years. During that time, activity feeds scaled up 20x while  nobody was watching it at all. We made no changes whatsoever specifically targeted at activity feeds, but everything worked out fine as usage exploded because we were using a shared platform. This is the long-term benefit of restraint in technology choices in a nutshell.\n  This isn\u2019t an absolutist position--while activity feeds stored in memcached was judged to be practical, implementing full text search with faceting in raw PHP wasn&#39;t. So Etsy used Solr.", "posttime": "2020-06-07 12:53:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u94bb\u524a,boring,\u95ee\u9898", "title": "\u9009\u62e9\u94bb\u524a\u5de5\u827a", "title_en": "Choose Boring Technology", "transed": 1, "url": "https://mcfunley.com/choose-boring-technology", "via": "", "real_tags": ["\u94bb\u524a", "boring", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005528, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e9b\u4e1c\u897f\u662f\u5426\u53ef\u4ee5\u5728\u6ca1\u6709JavaScript(JS)\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\uff0c\u8fd9\u662f\u9ed1\u5ba2\u65b0\u95fb\u8bc4\u8bba\u4e2d\u65f6\u4e0d\u65f6\u4f1a\u51fa\u73b0\u7684\u95ee\u9898--\u5927\u591a\u6570\u65f6\u5019\u662f\u4e0d\u80fd\u7684\u3002\n\u8fd9\u4e9b\u6709JS\u6b8b\u75be\u7684\u4eba\u662f\u8c01\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5b83\u4e8b\u60c5\u5c31\u4e0d\u80fd\u6b63\u5e38\u8fd0\u4f5c\uff1f\u524d\u8005\u5f53\u7136\u662f\u5c11\u6570\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u968f\u7740NoScript\u6210\u4e3a\u4e0b\u8f7d\u91cf\u6392\u540d\u7b2c\u4e03\u7684Firefox\u63d2\u4ef6\u548c\u5176\u4ed6\u6d4f\u89c8\u5668\uff0c\u4ee5\u53ca\u73b0\u6709\u7684\u7981\u7528JS\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e9b\u7528\u6237\u4e5f\u4e0d\u5bb9\u5ffd\u89c6\u3002\u5bf9\u4e8e\u540e\u8005-\u6211\u4e0d\u77e5\u9053\u3002\u4e5f\u8bb8\u73b0\u4ee3\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u5f88\u61d2\u3002\u4e5f\u8bb8\u4ed6\u4eec\u5de5\u4f5c\u8fc7\u5ea6\u4e86\uff0c\u9884\u7b97\u592a\u4f4e\uff0c\u65f6\u95f4\u7d27\u8feb\u3002\u4e5f\u8bb8\u652f\u6301noscript\u592a\u96be\u4e86\u3002\u4e5f\u8bb8\u4ed6\u4eec\u751a\u81f3\u4e0d\u77e5\u9053JS\u53ef\u4ee5\u88ab\u7981\u7528\uff0c\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u4eba\u4f1a\u8fd9\u6837\u505a\u3002\n\u6211\u5e76\u4e0d\u58f0\u79f0\u6709\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\uff0c\u4f46\u662f\u6709\u4e00\u6bb5\u65f6\u95f4\u6211\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u90a3\u5c31\u662f\u5982\u4f55\u4ee5\u4e00\u79cd\u4e0d\u4f1a\u7ed9\u5f00\u53d1\u4eba\u5458\u5e26\u6765\u592a\u5927\u8d1f\u62c5\u7684\u65b9\u5f0f\u5bb9\u7eb3\u8fd9\u4e9b\u7528\u6237\u3002\u4ee5\u4e0b\u662f\u5b9e\u73b0\u6b64\u76ee\u7684\u7684\u4e00\u79cd\u65b9\u6cd5\u7684\u7b80\u77ed\u63a2\u7d22\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5c55\u793a\u8be5\u65b9\u6cd5\u7684\u6f14\u793a\u3002\u8fd9\u662f\u6211\u5e0c\u671b\u5728\u5c06\u6765\u7684\u67d0\u4e2a\u65f6\u5019\u5b9e\u73b0\u6211\u7684\u613f\u671b\u793c\u7269\uff0c\u6211\u7684\u526f\u4e1a\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u5e0c\u671b\u6709\u4eba\u80fd\u60f3\u51fa\u66f4\u597d\u7684\u4e1c\u897f\u3002\n\u8bf4JS\u88ab\u5927\u91cf\u4f7f\u7528\u662f\u6e29\u548c\u7684\u8bf4\u6cd5\uff0c\u6240\u6709\u7f51\u7ad9\u4e2d\u670995.8%\u7684\u7f51\u7ad9\u5728\u5ba2\u6237\u7aef\u4f7f\u7528\u5b83\u3002\u6211\u76f8\u4fe1\u5f88\u591a\u8fd9\u6837\u7684\u7f51\u7ad9\u5728\u6ca1\u6709JS\u7684\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u8fd9\u5f88\u68d2\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u80af\u5b9a\u6709\u4e00\u4e9b\u6ca1\u6709JavaScript\u5c31\u4e0d\u80fd\u5de5\u4f5c\u7684Web\u5e94\u7528\uff0c\u6bd4\u5982WebGL/Canvas\u4f53\u9a8c\u3001\u97f3\u9891\u7f16\u8f91\u5668\u3001\u6e38\u620f\u9762\u677f\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u4e25\u91cd\u4f9d\u8d56\u6d4f\u89c8\u5668\u4e2d\u7684JSAPI\u7684\u5176\u4ed6Web\u5e94\u7528\u3002\u4ecb\u4e8e\u8fd9\u4e24\u4e2a\u4e4b\u95f4\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u60a8\u4f1a\u53d1\u73b0CRUD\u5e94\u7528\u7a0b\u5e8f(\u590d\u6742\u7a0b\u5ea6\u5404\u4e0d\u76f8\u540c)\u5728\u6ca1\u6709JS\u7684\u60c5\u51b5\u4e0b\u4e0d\u80fd\u5de5\u4f5c\uff0c\u6216\u8005\u53ea\u80fd\u90e8\u5206\u5de5\u4f5c\u3002\n\u6bcf\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u4e2a\u57fa\u672c\u7ec4\u4ef6\u662f\u5448\u73b0HTML\uff0c\u8fd9\u901a\u5e38\u4f1a\u53cd\u6620\u4e00\u4e9b\u72b6\u6001\u3002\u50cfReaction\u8fd9\u6837\u7684\u6846\u67b6\u5728\u73b0\u4ee3Web\u5f00\u53d1\u4e2d\u7ecf\u5e38\u88ab\u7528\u6765\u5e2e\u52a9\u6e32\u67d3\u548c\u4ea4\u4e92\u6027\u3002\u8fd9\u4e9b\u6846\u67b6\u4e2d\u7684\u8bb8\u591a\u90fd\u6709\u5904\u7406\u72b6\u6001\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u8bb8\u591a\u6846\u67b6\u8fd8\u5141\u8bb8\u5c06\u72b6\u6001\u5b58\u50a8\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u6bd4\u5982Redux-\u201c\u7528\u4e8eJS\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u9884\u6d4b\u72b6\u6001\u5bb9\u5668\u201d\uff0c\u5b83\u91c7\u7528\u4e86\u4e8b\u4ef6\u6e90\u6a21\u5f0f\u3002\n\u50cfRedux\u8fd9\u6837\u7684\u57fa\u4e8e\u4e8b\u4ef6\u7684\u72b6\u6001\u5bb9\u5668\u975e\u5e38\u9002\u5408\u6211\u4eec\u7684\u76ee\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0e\u4e00\u79cd\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528\u548c\u4e0d\u4f7f\u7528JS\u8868\u5355\u63d0\u4ea4\u7684\u4ea4\u4e92\u5b8c\u7f8e\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff01\u653e\u5230redux\u5b58\u50a8\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u90fd\u5e94\u8be5\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u6211\u4eec\u5728\u8868\u5355\u4e2d\u63d0\u4ea4\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u5e94\u8be5\u662f\u53ef\u5e8f\u5217\u5316\u7684-\u81f3\u5c11\u5bf9\u4e8eenctype=&#34\uff1bapplication/x-www-form-urlencoded&#34\uff1b.\u662f\u8fd9\u6837\u7684\u3002\u867d\u7136\u5bf9\u4e8e\u662f\u5426\u5e94\u8be5\u5c06\u6240\u6709\u7684\u72b6\u6001\u90fd\u653e\u5230Redux\u4e2d\u6ca1\u6709\u201c\u6b63\u786e\u201d\u7684\u7b54\u6848\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\u4e86-\u5f53\u7136\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u5de5\u4f5c-\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u7684\u96c6\u4e2d\u5f0f\u5b58\u50a8\u3002\n\u7136\u540e\uff0c\u8be5\u5b58\u50a8\u53ef\u4ee5\u5145\u5f53\u5448\u73b0\u7684HTML\u6240\u53cd\u6620\u7684\u72b6\u6001\u7684\u57fa\u51c6\u6216\u5355\u4e00\u771f\u503c\u6765\u6e90\u3002\u8003\u8651\u5230Reaction(\u548c\u5176\u4ed6)\u6846\u67b6\u652f\u6301\u670d\u52a1\u5668\u7aef\u5448\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e9b\u806a\u660e\u3001\u6709\u8fdc\u89c1\u548c\u8c28\u614e\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u4f7f\u7528\u548c\u4e0d\u4f7f\u7528JS\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528(\u4f7f\u7528\u5927\u91cf\u52a0\u8f7d)\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u5e2e\u52a9\u5668\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5c06\u62bd\u8c61\u51fa\u62e5\u6709\u548c\u4e0d\u62e5\u6709JS\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u3002\u8981\u5b9e\u73b0\u7ecf\u5178\u7684TodoMVC\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u53ea\u9700\u8981Button\u548cForm\u7ec4\u4ef6\uff0c\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u662f\u201cDo this on click\u201d\u7684\u5305\u88c5\u5668\uff0c\u540e\u8005\u662f\u4f9d\u8d56\u4e8e\u7528\u6237\u66f4\u591a\u8f93\u5165\u7684\u66f4\u901a\u7528\u7684\u64cd\u4f5c\u5305\u88c5\u5668\u3002\u8fd9\u4e24\u4e2a\u5e2e\u52a9\u5668\u7684\u5de5\u4f5c\u539f\u7406\u76f8\u540c\uff0c\u5373\u5c06\u5305\u542b\u6574\u4e2a\u64cd\u4f5c(\u7c7b\u578b\u548c\u6709\u6548\u8d1f\u8f7d)\u7684\u8868\u5355\u5448\u73b0\u4e3a\u8868\u5355\u5143\u7d20\u3002\u5f53Reaction\u5e94\u7528\u7a0b\u5e8f\u5728\u5ba2\u6237\u7aef\u8fd0\u884c\u65f6\uff0c\u5c06\u963b\u6b62\u63d0\u4ea4\u4e8b\u4ef6\uff0c\u5e76\u5c06\u64cd\u4f5c\u5206\u6d3e\u5230\u5ba2\u6237\u7aef\u3002\u5982\u679c\u6ca1\u6709JS\uff0c\u5219\u4e0d\u4f1a\u963b\u6b62\u4e8b\u4ef6\uff0c\u5e76\u4e14\u4f1a\u5728\u6211\u4eec\u5f53\u524d\u6240\u5904\u7684\u4efb\u4f55\u8def\u7531\u4e0a\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u3002\n\u5728\u670d\u52a1\u5668\u7aef\uff0c\u9664\u4e86\u76d1\u542c\u89c6\u56fe\u8def\u7531\u4e0a\u7684GET\u8bf7\u6c42\u5916\uff0c\u6211\u4eec\u8fd8\u76d1\u542cPOST\u8bf7\u6c42\u3002\u5bf9\u4e8e\u6240\u6709GET\u8bf7\u6c42\uff0c\u6211\u4eec\u5c06\u8fd4\u56de\u521d\u59cb\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e3a\u4efb\u4f55\u4f7f\u7528JS\u7684\u7528\u6237\u6062\u590d\u6d88\u91cd\u6570\u636e\u3002\u6211\u4eec\u5bf9\u4efb\u4f55POST\u8bf7\u6c42\u90fd\u662f\u8fd9\u6837\u505a\u7684\uff0c\u4f46\u6211\u4eec\u4e5f\u5047\u8bbe\uff0c\u4efb\u4f55\u4eba\u5411\u8fd9\u4e9b\u8def\u7531\u53d1\u51faPOST\u8bf7\u6c42\u7684\u552f\u4e00\u539f\u56e0\u662f\u56e0\u4e3a\u4ed6\u4eec\u63d0\u4ea4\u4e86\u4e00\u4e2a\u8868\u5355\u3002\u6709\u4e86\u8fd9\u4e2a\u5047\u8bbe\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u8bf7\u6c42\u4e2d\u662f\u5426\u786e\u5b9e\u5b58\u5728\u5305\u542b\u7c7b\u578b\u7684\u4e3b\u4f53\uff0c\u5e76\u4e14\u53ef\u80fd\u8fd8\u5305\u542b\u6709\u6548\u8d1f\u8f7d\u548c\u6709\u6548\u8d1f\u8f7d\u7c7b\u578b\u3002\u5982\u679c\u6211\u4eec\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u5f53\u524d\u4f1a\u8bdd\u4e0a\u662f\u5426\u6709\u67d0\u79cd\u72b6\u6001\uff0c\u5e76\u4f7f\u7528\u8be5\u72b6\u6001\u521d\u59cb\u5316Redux\u5b58\u50a8\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u63d0\u4ea4\u7684\u64cd\u4f5c\u5206\u6d3e\u5230\u5b58\u50a8\u533a\uff0c\u83b7\u53d6\u7ed3\u679c\u72b6\u6001\uff0c\u66f4\u65b0\u4f1a\u8bdd\u72b6\u6001\uff0c\u5e76\u4f7f\u7528\u5b58\u50a8\u533a\u5448\u73b0\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5b9e\u73b0\u6240\u6709\u8fd9\u4e9b\u7684\u6f14\u793a\uff0c\u5e76\u5728\u8fd9\u91cc\u67e5\u770b\u6e90\u4ee3\u7801\u3002\n\u6211\u4eec\u4e0d\u80fd\u8bbf\u95ee\u6b63\u5728\u63d0\u4ea4\u7684\u4efb\u4f55\u4ec5\u9650JS\u4e8b\u4ef6\u7684\u8868\u5355\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u4efb\u4f55\u5fc5\u8981\u7684\u4ea4\u4e92\uff0c\u6bd4\u5982\u62d6\u52a8\u3001\u53cc\u51fb\u3001\u957f\u65f6\u95f4\u5355\u51fb\u7b49\u3002\n\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6807\u8bb0\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u6837\u5f0f\u65f6\u5fc5\u987b\u8003\u8651\u8fd9\u4e9b\u6807\u8bb0\uff0c\u56e0\u4e3a\u6240\u6709\u4e1c\u897f\u90fd\u5fc5\u987b\u5305\u88c5\u5728\u8868\u5355\u4e2d-\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5e26\u6709onclick\u5904\u7406\u7a0b\u5e8f\u7684\u72ec\u7acb\u6309\u94ae\u3002\n\u670d\u52a1\u5668\u7aef\u4f1a\u8bdd\u7ba1\u7406\u53ef\u80fd\u4f1a\u4ee5\u6bd4\u6f14\u793a\u4e2d\u66f4\u597d\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\uff0c\u800c\u5728\u751f\u4ea7\u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5bf9\u63d0\u4ea4\u7684\u64cd\u4f5c\u8fdb\u884c\u66f4\u591a\u7684\u6e05\u7406\u548c\u9a8c\u8bc1\u3002\n\u5982\u679c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u73b0Web\u5e94\u7528\uff0c\u6ca1\u6709JS\u7684\u7528\u6237\u5c06\u4f1a\u6709\u6e90\u6e90\u4e0d\u65ad\u7684\u66f4\u65b0\uff0c\u4f46\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u6839\u672c\u6ca1\u6709Web\u5e94\u7528\u3002\n\u8fd9\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528Reaction\u548cRedux\u4e4b\u5916\u7684\u5176\u4ed6\u6846\u67b6\u6765\u5b9e\u73b0\u3002\u4e5f\u8bb8\u8fd9\u751a\u81f3\u53ef\u80fd\u662fSapper\u6216Next.js\u4e2d\u53ef\u4ee5\u627e\u5230\u51fa\u8def\u7684\u4e1c\u897f\u5462\uff1f\n\u7b80\u800c\u8a00\u4e4b\uff0c\u901a\u8fc7\u5229\u7528\u8868\u5355\u4e8b\u4ef6\u548cRedux\u7b49\u57fa\u4e8e\u4e8b\u4ef6\u7684\u72b6\u6001\u5bb9\u5668\u7684\u76f8\u4f3c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u6240\u6709\u64cd\u4f5c\u90fd\u901a\u8fc7\u8868\u5355\u6765\u4e3a\u672a\u542f\u7528JS\u7684\u7528\u6237\u5206\u6d3e\u548c\u66f4\u65b0\u670d\u52a1\u5668\u7aef\u7684\u72b6\u6001\u3002\u901a\u8fc7\u4f7f\u7528\u4e00\u4e9b\u5e2e\u52a9\u5668\u7ec4\u4ef6\u6765\u6355\u83b7\u3001\u963b\u6b62\u548c\u5206\u6d3e\u5ba2\u6237\u7aef\u7684\u4e8b\u4ef6\uff0c\u8fd9\u4f1a\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u91cd\u590d\u7684\u5de5\u4f5c\u5c31\u80fd\u83b7\u5f97\u597d\u5904\u3002\u5bf9\u4e8e\u6700\u57fa\u672c\u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u4ea4\u4e92\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4e0d\u5f97\u4e0d\u5728\u6837\u5f0f\u3001\u5b89\u5168\u6027\u548c\u670d\u52a1\u5668\u6210\u672c\u65b9\u9762\u91c7\u53d6\u4e00\u4e9b\u989d\u5916\u7684\u9884\u9632\u63aa\u65bd\uff0c\u4f46\u8fd9\u53ef\u80fd\u6bd4\u6ca1\u6709JS\u7684\u7528\u6237\u6839\u672c\u4e0d\u80fd\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u66f4\u597d\u3002\n\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff01\u6211\u4e5f\u5f88\u60f3\u542c\u542c\u4f60\u7684\u60f3\u6cd5\u548c\u60f3\u6cd5\u3002\u52a0\u5165\u9ed1\u5ba2\u65b0\u95fb\u7684\u8ba8\u8bba\uff0c\u6216\u8005\u968f\u65f6\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u7ed9\u6211\uff0c\u5730\u5740\u662f\u8fd9\u4e2a\u535a\u5ba2\u6240\u5728\u7684\u57df\u7684Daniel\u3002", "note_en": "Whether or not something works  without JavaScript (JS) is something that pops up in Hacker News comments from time to time - mostly when they  don\u2019t.\n Who are these people with JS disabled, and why aren\u2019t things working without it? The former are surely a minority, but even so, with  NoScript being the 7th most downloaded Firefox Add-on and other browsers and ways of disabling JS existing, these users aren\u2019t negligible. For the latter - I don\u2019t know. Maybe modern web developers are lazy. Maybe they\u2019re overworked, and pressed on time with too low budgets. Maybe supporting noscript is too hard. Maybe they don\u2019t even know JS can be disabled or why anyone would do it.\n I don\u2019t claim to have the answer to these questions, but for some time I\u2019ve had an idea on how to accommodate these users in a way that isn\u2019t  too much of a burden on the developer. The following is a short exploration of a method to do that, along with a demo showing it off. It\u2019s something I hope to implement for my  Wishy.gift, my side-project, at some point in the future, but more importantly, I hope someone can come up with something better.\n    Saying that JS is used heavily is putting it mildly,  with 95.8% of all websites using it client-side. I\u2019m sure many of these websites work without JS, which is great. On the flip side, there are definitively web apps that  can\u2019t work without JavaScript, like  WebGL/canvas experiences,  audio editors,  gamepad testing, and other web apps that rely heavily on JS APIs in the browser. Somewhere in between these 2, you have  CRUD apps (of varying complexity) that don\u2019t, or only partially work without JS.\n A basic component of every single one of these web apps, is to render HTML, which usually reflects some state. Frameworks like  React are often used in modern web development to help with the rendering and interactivity. Many of these frameworks have ways of handling the state, and many also allows the state to be stored elsewhere, like in  Redux - \u201cA Predictable State Container for JS Apps\u201d that employs the  event sourcing pattern.\n An event-based state container like Redux is very well suited for our purposes because it aligns perfectly with a kind of interaction that works in the browser both with and without JS - Form submissions! Everything put into the redux store  should be serializable, and anything we submit in a form is also so - at least with  enctype=&#34;application/x-www-form-urlencoded&#34;. Although there is no \u201cright\u201d answer to whether or not you should  put all your state into Redux, if we do - and it might certainly be more work - we get a centralised store that can run both client- and server-side.\n This store can then act as the baseline or single source of truth for the state that our rendered HTML reflects. Given that React (and other) frameworks support server-side rendering, we can - with some cleverness, foresight, and care - create a single React app that works both with and without JS (with a whole lotta loadin\u2019).\n  First we create helper components that will abstract away the main difference between having and not having JS. For implementing the classic  TodoMVC app, I only needed the  Button and  Form components, the first one being a wrapper around \u201cdo this on click\u201d, and the latter being a more general wrapper for actions relying on more input from the user. Both of these helpers work on the same principle of rendering a form containing the entirety of the action - type and payload - as form elements. When the React app is running client side, the submit events will be prevented, and the actions dispatched client side. Without JS, nothing prevents the event, and a request is made towards the server on whatever route we\u2019re currently at.\n Server side, in addition to listening on  GET requests on view routes, we also listen to  POST requests. For all  GET requests we return the initial React app that will be rehydrated for any user with JS. We do the same for any  POST request, but we also make the assumption that the only reason anyone would make a  POST request towards any of these routes, is because they\u2019ve submitted a form. With that assumption, we check if there was indeed a body in the request containing a  type, and potentially a  payload and  payloadType too. If we find this, we check if we have some state on the current session, and use that to initialize a Redux store. Then we  dispatch the submitted action to the store, fetch the resulting state, update the session state, and use the store to render our app.\n You can check the demo that implements all this  here, and check out the source code  here.\n  We don\u2019t have access to any JS-events - only forms being submitted, which means that no essential interaction should require things like dragging, double clicking, long clicking, etc.\n We get some extra markup that we have to take into consideration when styling, as everything must be wrapped in a  form - we can\u2019t have standalone buttons with  onClick handlers.\n The server-side session management can probably be done in a more performant way than how it is in the demo, and in production you might want some more sanitization and validation of the submitted actions.\n There will be an endless stream of refreshes for users without JS if a web app is implemented using this method, but in many cases the alternative is no web app at all.\n  This can surely be implemented using other frameworks than React and Redux. Perhaps this might even be something that could find its way into  Sapper or  Next.js ?\n  In short, by leveraging the similarities of form events and an event based state container like Redux, we can dispatch and update state on the server side for users without JS enabled, by making all actions go through forms. This is made easier by making use of some helper components to catch, prevent and dispatch the events client side, and makes it so that there\u2019s little - if any - double work that has to be done to reap the benefits. We are limited in terms of what kind of interactions we can make use of for the most essential functions, and have to take some extra precautions with regards to both styling, security and server cost, but that might be preferred over the app not working at all for users without JS.\n  Thank you for reading this! I would love to hear your thoughts and ideas too. Join the discussion on  Hacker News, or feel free to email me at  daniel at the domain this blog is on.", "posttime": "2020-06-07 12:21:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,react,redux,js", "title": "\u4f7f\u7528REACT\u3001REDUX\u548cSSR\u5728\u6ca1\u6709JavaScript\u7684\u60c5\u51b5\u4e0b\u63a7\u5236\u7528\u6237", "title_en": "Using React, Redux and SSR to acommodate users without JavaScript", "transed": 1, "url": "https://blog.klungo.no/2020/05/28/using-react-and-redux-to-acommodate-users-without-javascript/", "via": "", "real_tags": ["java", "react", "redux", "js"]}, {"category": "", "categoryclass": "", "imagename": "466ec853fb03d671bc170daff21be0f8.jpeg", "infoid": 1005527, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e92\u8054\u7f51\u6709\u4e30\u5bcc\u7684\u6982\u5ff5\u57fa\u7840\uff0c\u6709\u8bb8\u591a\u4ee4\u4eba\u5174\u594b\u7684\u60f3\u6cd5\uff0c\u4f7f\u5b83\u80fd\u591f\u50cf\u6211\u4eec\u6240\u77e5\u7684\u90a3\u6837\u53d1\u6325\u4f5c\u7528\u3002\u5176\u4e2d\u4e00\u4e2a\u975e\u5e38\u9177\u7684\u662fDNS\u3002\u5728\u53d1\u660e\u4e4b\u524d\uff0c\u4e92\u8054\u7f51\u4e0a\u7684\u6bcf\u4e2a\u4eba\u90fd\u4f9d\u8d56\u4e8e\u65af\u5766\u798f\u7814\u7a76\u6240(StanfordResearch Institute)\u7ef4\u62a4\u7684\u540d\u4e3aHOSTS.TXT\u7684\u5171\u4eab\u6587\u4ef6--\u8bda\u7136\uff0c\u5728\u90a3\u4e2a\u9636\u6bb5\uff0c\u4e92\u8054\u7f51\u4e0a\u7684\u8bb8\u591a\u4eba\u5e76\u4e0d\u662f\u90a3\u4e48\u591a\u4eba\u3002\u6b64\u6587\u4ef6\u662f\u901a\u8fc7FTP\u624b\u52a8\u540c\u6b65\u7684\uff0c\u968f\u7740\u4e3b\u673a\u6570\u91cf\u7684\u589e\u52a0\uff0c\u66f4\u6539\u7684\u901f\u5ea6\u4e5f\u968f\u4e4b\u589e\u52a0\uff0c\u7cfb\u7edf\u4e5f\u53d8\u5f97\u4e0d\u53ef\u884c\u30021983\u5e74\uff0cPaul Mockapetris\u7740\u624b\u5bfb\u627e\u95ee\u9898\u7684\u957f\u671f\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u7ee7\u7eed\u8bbe\u8ba1\u548c\u5b9e\u73b0DNS\u3002\u6b63\u5982\u6211\u4eec\u4eca\u5929\u6240\u77e5\uff0c\u4ed6\u7684\u53d1\u660e\u5df2\u7ecf\u80fd\u591f\u4ece\u51e0\u5343\u53f0\u8ba1\u7b97\u673a\u6269\u5c55\u5230\u4e92\u8054\u7f51\uff0c\u8fd9\u8bc1\u660e\u4e86\u4ed6\u7684\u5929\u624d\u3002\n\u51fa\u4e8e\u5bf9DNS\u7684\u6df1\u5165\u7406\u89e3\u3001\u5bf9Rust\u505a\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u4ee5\u53ca\u6ee1\u8db3\u6211\u81ea\u5df1\u7684\u4e00\u4e9b\u95ee\u9898\u7684\u7efc\u5408\u76ee\u6807\uff0c\u6211\u6700\u521d\u5f00\u59cb\u5b9e\u73b0\u6211\u81ea\u5df1\u7684DNS\u670d\u52a1\u5668\u3002\u8fd9\u4efd\u6587\u4ef6\u4e0d\u662f\u5bf9\u90a3\u6bb5\u65c5\u7a0b\u7684\u771f\u5b9e\u7f16\u5e74\u53f2\uff0c\u800c\u662f\u5b83\u7684\u7406\u60f3\u5316\u7248\u672c\uff0c\u6ca1\u6709\u6211\u6700\u7ec8\u8d70\u7684\u6240\u6709\u5f2f\u8def\u3002\u6211\u4eec\u5c06\u4ece\u57fa\u672c\u539f\u5219\u5f00\u59cb\uff0c\u9010\u6b65\u5b9e\u73b0\u5b8c\u6574\u7684DNS\u670d\u52a1\u5668\u3002", "note_en": "The internet has a rich conceptual foundation, with many exciting ideas thatenable it to function as we know it. One of the really cool ones is DNS. Beforeit was invented, everyone on the internet - which admittedly wasn&#39;t that many atthat stage - relied on a shared file called HOSTS.TXT, maintained by the StanfordResearch Institute. This file was synchronized manually through FTP, and as thenumber of hosts grew, so did the rate of change and the unfeasibility of thesystem. In 1983, Paul Mockapetris set out to find a long term solution to theproblem and went on to design and implement DNS. It&#39;s a testament to hisgenius that his creation has been able to scale from a few thousandcomputers to the Internet as we know it today.\n With the combined goal of gaining a deep understanding of DNS, of doingsomething interesting with Rust, and of scratching some of my own itches,I originally set out to implement my own DNS server. This document is nota truthful chronicle of that journey, but rather an idealized version of it,without all the detours I ended up taking. We&#39;ll gradually implement a fullDNS server, starting from first principles.", "posttime": "2020-06-07 12:21:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u670d\u52a1\u5668,writing,dns", "title": "Rust\u4e2d\u4ece\u5934\u5f00\u59cb\u7f16\u5199DNS\u670d\u52a1\u5668\u7684\u6307\u5357", "title_en": "A guide to writing a DNS Server from scratch in Rust", "transed": 1, "url": "https://github.com/EmilHernvall/dnsguide", "via": "", "real_tags": ["rust", "\u670d\u52a1\u5668", "writing", "dns"]}, {"category": "", "categoryclass": "", "imagename": "65fe3bfe576b3a740c0b938e6e48f325.gif", "infoid": 1005525, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0c\u7f3a\u4e4f\u5bf9\u95ee\u9898\u6e38\u620f\u5982\u4f55\u5f71\u54cd\u6e38\u620f\u73a9\u5bb6\u65e5\u5e38\u751f\u6d3b\u7684\u5145\u5206\u8ba4\u8bc6\u3002\u672c\u7814\u7a76\u65e8\u5728\u66f4\u5168\u9762\u5730\u4e86\u89e3\u95ee\u9898\u6e38\u620f\u73a9\u5bb6\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u6d3b\u52a8\uff0c\u7279\u522b\u662f\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4ec0\u4e48\u662f\u91cd\u8981\u7684\uff0c\u6e38\u620f\u7684\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u652f\u6301/\u5236\u7ea6\u4ed6\u4eec\u53c2\u4e0e\u5176\u4ed6\u751f\u6d3b\u6d3b\u52a8\u7684\u56e0\u7d20\u662f\u4ec0\u4e48\u3002\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u548c\u4e3a\u671f\u4e00\u5468\u7684\u6d3b\u52a8\u8bb0\u5f55\u88ab\u7528\u6765\u6536\u96c6\u6765\u81ea\u4e94\u4e2a\u56fd\u5bb6\u768416\u540d\u95ee\u9898\u6e38\u620f\u73a9\u5bb6\u7684\u6570\u636e\u3002\u5bf9\u5b9a\u6027\u6570\u636e\u8fdb\u884c\u4e3b\u9898\u5206\u6790\u3002\u51fa\u73b0\u4e86\u4e24\u4e2a\u4e3b\u8981\u4e3b\u9898\u3002\u9996\u5148\uff0c\u6e38\u620f\u88ab\u53d1\u73b0\u662f\u4e00\u79cd\u6709\u610f\u4e49\u548c\u6709\u76ee\u7684\u7684\u6d3b\u52a8\u3002\u8fd9\u9879\u7814\u7a76\u7684\u53c2\u4e0e\u8005\u4e86\u89e3\u4e86\u54ea\u4e9b\u6d3b\u52a8\u7ed9\u4ed6\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u610f\u4e49\u548c\u4e2a\u4eba\u6210\u957f\u7684\u611f\u89c9\u3002\u7535\u5b50\u6e38\u620f\u5728\u73a9\u5bb6\u7684\u751f\u6d3b\u4e2d\u65e2\u63d0\u4f9b\u4e86\u79ef\u6781\u7684\u4f53\u9a8c\uff0c\u4e5f\u63d0\u4f9b\u4e86\u8d1f\u9762\u7684\u4f53\u9a8c\u3002\u6d88\u6781\u4f53\u9a8c\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4f7f\u7528\u7535\u5b50\u6e38\u620f\u4f5c\u4e3a\u5e94\u5bf9\u5176\u4ed6\u751f\u6d3b\u538b\u529b\u6e90\u7684\u4e00\u79cd\u7b56\u7565\u3002\u5176\u6b21\uff0c\u4e2a\u4eba\u3001\u4eba\u9645\u548c\u73af\u5883\u7684\u5f71\u54cd\u540c\u65f6\u63a8\u52a8\u548c\u62c9\u52a8\u4e86\u6e38\u620f\u91cf\u3002\u5bf9\u6e38\u620f\u91cf\u7684\u63a8\u9001\u548c\u62c9\u52a8\u5f71\u54cd\u53ef\u4ee5\u53d1\u751f\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u53d1\u751f\u5728\u865a\u62df\u751f\u6d3b\u4e2d\u3002\u5bf9\u95ee\u9898\u6e38\u620f\u73a9\u5bb6\u7684\u5e2e\u52a9\u53ef\u4ee5\u5305\u62ec\u6700\u5c0f\u5316/\u6d88\u9664\u62c9\u529b\u548c\u83b7\u5f97\u8db3\u591f\u7684\u63a8\u529b\uff0c\u4ee5\u4f7f\u4ed6\u4eec\u80fd\u591f\u53c2\u4e0e\u65e5\u5e38\u6d3b\u52a8\u3002", "note_en": "Currently, a full appreciation of how problem gaming impacts the daily lives of gamers is lacking. This study aims to gain a more holistic understanding of the activities in the daily lives of problem gamers; particularly, what is important to them, what motivates gaming, and what supports/constraints engagement in other life activities. Semi-structured interviews and week-long activity logs were used to collect data from the 16 problem gamers in five countries. Qualitative data were analyzed thematically. Two main themes emerged. First, gaming was found to be a meaningful and purposeful activity. Participants in this study understood what activities offered them a sense of meaning and personal growth. Video gaming offered both positive and negative experiences in gamers\u2019 lives. The negative experiences mainly resulted from using video games as a coping strategy for other life stressors. Second, individual, interpersonal, and environmental influences acted simultaneously to push and pull on the amount of gaming. The push and pull influences on the amount of gaming can occur in real-life or virtually. Assistance for problem gamers could include minimizing/removing the pull forces and obtaining adequate push forces to enable their desired participation in daily activities.", "posttime": "2020-06-07 11:33:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u7535\u5b50\u6e38\u620f,games", "title": "\u7535\u5b50\u6e38\u620f\u4e0e\u865a\u5047\u7684\u6210\u5c31\u611f", "title_en": "Video Games and the False Sense of Achievement", "transed": 1, "url": "https://www.sciencedirect.com/science/article/pii/S0747563219301153", "via": "", "real_tags": ["\u6e38\u620f", "\u7535\u5b50\u6e38\u620f", "games"]}]