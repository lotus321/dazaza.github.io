[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1006679, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u7c7b\u65b0\u7684\u65e0\u53cd\u5411\u4f20\u64ad\u7684\u795e\u7ecf\u7ed3\u6784\uff0c\u5373\u95e8\u63a7\u7ebf\u6027\u7f51\u7edc(GLNS)\u3002GLN\u4e0e\u5f53\u4ee3\u795e\u7ecf\u7f51\u7edc\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5176\u4fe1\u7528\u5206\u914d\u673a\u5236\u7684\u5206\u5e03\u6027\u548c\u5c40\u90e8\u6027\uff1b\u6bcf\u4e2a\u795e\u7ecf\u5143\u76f4\u63a5\u9884\u6d4b\u76ee\u6807\uff0c\u653e\u5f03\u5b66\u4e60\u7279\u5f81\u8868\u793a\u7684\u80fd\u529b\uff0c\u6709\u5229\u4e8e\u5feb\u901f\u5728\u7ebf\u5b66\u4e60\uff1b\u5355\u4e2a\u795e\u7ecf\u5143\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u4f9d\u8d56\u7ed3\u5408\u5728\u7ebf\u51f8\u4f18\u5316\u6765\u5efa\u6a21\u975e\u7ebf\u6027\u51fd\u6570\u3002\u6211\u4eec\u8868\u660e\uff0c\u8fd9\u79cd\u7ed3\u6784\u5728\u6709\u9650\u7684\u8303\u56f4\u5185\u4ea7\u751f\u4e86\u666e\u904d\u7684\u5b66\u4e60\u80fd\u529b\uff0c\u6709\u6548\u7684\u6a21\u578b\u5bb9\u91cf\u968f\u7740\u7f51\u7edc\u89c4\u6a21\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u5176\u65b9\u5f0f\u53ef\u4e0e\u6df1\u5ea6RELU\u7f51\u7edc\u76f8\u5ab2\u7f8e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8bc1\u660e\u4e86GLN\u5b66\u4e60\u673a\u5236\u5bf9\u707e\u96be\u9057\u5fd8\u5177\u6709\u8d85\u5f3a\u7684\u6297\u707e\u96be\u9057\u5fd8\u80fd\u529b\uff0c\u5728\u6807\u51c6\u57fa\u51c6\u4e0a\u7684\u8868\u73b0\u4e0e\u5177\u6709\u8f8d\u5b66\u548c\u5f39\u6027\u6743\u503c\u5de9\u56fa\u7684MLP\u76f8\u5f53\u3002\u8fd9\u4e9b\u7406\u60f3\u7684\u7406\u8bba\u548c\u7ecf\u9a8c\u7279\u6027\u5c06GLNS\u5b9a\u4f4d\u4e3a\u5f53\u4ee3\u79bb\u7ebf\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u8865\u5145\u6280\u672f\u3002", "note_en": "Download PDF  Abstract: This paper presents a new family of backpropagation-free neuralarchitectures, Gated Linear Networks (GLNs). What distinguishes GLNs fromcontemporary neural networks is the distributed and local nature of theircredit assignment mechanism; each neuron directly predicts the target, forgoingthe ability to learn feature representations in favor of rapid online learning.Individual neurons can model nonlinear functions via the use of data-dependentgating in conjunction with online convex optimization. We show that thisarchitecture gives rise to universal learning capabilities in the limit, witheffective model capacity increasing as a function of network size in a mannercomparable with deep ReLU networks. Furthermore, we demonstrate that the GLNlearning mechanism possesses extraordinary resilience to catastrophicforgetting, performing comparably to a MLP with dropout and Elastic WeightConsolidation on standard benchmarks. These desirable theoretical and empiricalproperties position GLNs as a complementary technique to contemporary offlinedeep learning methods.", "posttime": "2020-06-16 00:07:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u95e8\u63a7,linear,\u5b66\u4e60", "title": "\u95e8\u63a7\u7ebf\u6027\u7f51\u7edc", "title_en": "Gated Linear Networks", "transed": 1, "url": "https://arxiv.org/abs/1910.01526", "via": "", "real_tags": ["\u95e8\u63a7", "linear", "\u5b66\u4e60"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u6700\u8fd1\u7684Piet-GPU\u66f4\u65b0\u4e2d\uff0c\u6211\u5199\u9053\u6211\u5bf9\u6027\u80fd\u4e0d\u6ee1\u610f\uff0c\u5e76\u8c03\u4f83\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u3002\u6211\u6b63\u5728\u5bfb\u6c42\u7cfb\u7edf\u5730\u627e\u51fa\u5982\u4f55\u83b7\u5f97\u4e00\u6d41\u6027\u80fd\u7684\u65b9\u6cd5\uff0c\u8fd9\u662f\u6211\u7ecf\u8fc7\u7684\u4e00\u4e2a\u7535\u53f0\u7684\u62a5\u544a\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0cPiet-GPU\u662f\u4e00\u79cd\u65b0\u7684\u9ad8\u6027\u80fd2D\u6e32\u67d3\u5f15\u64ce\uff0c\u76ee\u524d\u6b63\u5904\u4e8e\u7814\u7a76\u539f\u578b\u9636\u6bb5\u3002\u867d\u7136\u5927\u591a\u65702D\u6e32\u67d3\u5668\u5c06\u77e2\u91cf\u56fe\u5143\u653e\u5165GPU\u7684\u5149\u6805\u5316\u6d41\u6c34\u7ebf\u4e2d\uff0c\u4f46Piet-GPU\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5145\u5206\u5229\u7528\u73b0\u4ee3GPU\u7684\u8ba1\u7b97\u80fd\u529b\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u662f\u4e00\u4e2a\u8f6f\u4ef6\u6e32\u67d3\u5668\uff0c\u53ef\u4ee5\u5728\u9ad8\u5ea6\u5e76\u884c\u7684\u8ba1\u7b97\u673a\u4e0a\u9ad8\u6548\u8fd0\u884c\u3002\u5373\u4f7f\u5bf9\u4e8e\u590d\u6742\u76843D\u573a\u666f\uff0c\u8f6f\u4ef6\u6e32\u67d3\u4e5f\u5f97\u5230\u4e86\u66f4\u591a\u7684\u5173\u6ce8\uff0c\u56e0\u4e3a\u4f20\u7edf\u7684\u4ee5\u4e09\u89d2\u5f62\u4e3a\u4e2d\u5fc3\u7684\u7ba1\u9053\u8d8a\u6765\u8d8a\u4e0d\u9002\u5408\u9ad8\u7aef\u6e32\u67d3\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5f15\u4eba\u6ce8\u76ee\u7684\u4f8b\u5b50\uff0c\u65b0\u7684\u865a\u5e7b5\u5f15\u64ce\u4e25\u91cd\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u7740\u8272\u5668\u8fdb\u884c\u8f6f\u4ef6\u5149\u6805\u5316\u3002\nPiet-GPU\u7684\u65b0\u67b6\u6784\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u501f\u9274\u4e86Laine\u548cKarras\u57282011\u5e74\u53d1\u8868\u7684\u8bba\u6587\u201cGPU\u4e0a\u7684\u9ad8\u6027\u80fd\u8f6f\u4ef6\u6805\u683c\u5316\u201d(High Performance Software Rasterization On GPU)\u3002\u8be5\u6587\u63cf\u8ff0\u4e86\u4e00\u79cd\u9002\u7528\u4e8e\u4f20\u7edf3D\u4e09\u89d2\u5f62\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5168\u8ba1\u7b97\u673a\u6e32\u67d3\u6d41\u6c34\u7ebf\u3002\u8be5\u4f53\u7cfb\u7ed3\u6784\u8981\u6c42\u5728\u6d41\u6c34\u7ebf\u4e2d\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u4fbf\u5728\u6d41\u6c34\u7ebf\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u5904\u7406\u4e09\u89d2\u5f62\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u5e76\u884c\u6027\uff0c\u4f46\u8f93\u51fa\u6e32\u67d3\u5668\u4ecd\u4f1a\u6309\u987a\u5e8f\u6b63\u786e\u5730\u5e94\u7528\u4e09\u89d2\u5f62\u3002\u57283D\u6e32\u67d3\u4e2d\uff0c\u60a8\u51e0\u4e4e\u53ef\u4ee5\u4f7f\u7528\u672a\u6392\u5e8f\u7684\u6e32\u67d3\uff0c\u4f9d\u9760Z\u7f13\u51b2\u6765\u51b3\u5b9a\u83b7\u80dc\u7684\u7247\u6bb5\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u201cZ-Fighting\u201d\u7455\u75b5\uff0c\u8fd8\u4f1a\u7ed9\u534a\u900f\u660e\u7684\u7247\u6bb5\u5e26\u6765\u95ee\u9898\u3002\n\u6700\u521d\u7684Piet-Metal\u4f53\u7cfb\u7ed3\u6784\u8bd5\u56fe\u907f\u514d\u663e\u5f0f\u6392\u5e8f\u6b65\u9aa4\uff0c\u6bcf\u6b21\u90fd\u662f\u4ece\u6839\u5f00\u59cb\u904d\u5386\u573a\u666f\u56fe\u3002\u7b80\u5355\u6027\u5f88\u5438\u5f15\u4eba\uff0c\u4f46\u5b83\u4e5f\u9700\u8981\u91cd\u590d\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u9650\u5236\u4e86\u53ef\u4ee5\u5229\u7528\u7684\u5e76\u884c\u6027\u3002\u65b0\u7684\u67b6\u6784\u91c7\u7528\u4e86\u4e0eLaine\u548cKarras\u7eb8\u7c7b\u4f3c\u7684\u7ba1\u9053\u7ed3\u6784\uff0c\u4f46\u75282D\u56fe\u5f62\u201c\u5143\u7d20\u201d\u4ee3\u66ff\u4e86\u4e09\u89d2\u5f62\u3002\n\u4f5c\u4e3a\u65b0Piet-GPU\u67b6\u6784\u7684\u6838\u5fc3\uff0c\u573a\u666f\u88ab\u8868\u793a\u4e3a\u8fd9\u4e9b\u5143\u7d20\u7684\u8fde\u7eed\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u8868\u793a\u3002\u5f53\u524d\u5143\u7d20\u662f\u201c\u62fc\u63a5\u4eff\u5c04\u53d8\u6362\u201d\u3001\u201c\u8bbe\u7f6e\u7ebf\u5bbd\u201d\u3001\u201c\u7528\u4e8e\u7b14\u5212\u7684\u7ebf\u6bb5\u201d\u3001\u201c\u63cf\u8fb9\u5148\u524d\u7684\u7ebf\u6bb5\u201d\u3001\u201c\u7528\u4e8e\u586b\u5145\u7684\u7ebf\u6bb5\u201d\u548c\u201c\u586b\u5145\u5148\u524d\u7684\u7ebf\u6bb5\u201d\uff0c\u5f53\u7136\uff0c\u968f\u7740\u6e32\u67d3\u5668\u80fd\u529b\u7684\u589e\u957f\uff0c\u8ba1\u5212\u6709\u66f4\u591a\u7684\u5143\u7d20\u3002\n\u867d\u7136\u9664\u4e86\u6df7\u5408\u5149\u6805\u5316\u7247\u6bb5\u7684\u987a\u5e8f\u4e4b\u5916\uff0c\u4e09\u89d2\u5f62\u6216\u591a\u6216\u5c11\u5f7c\u6b64\u72ec\u7acb\uff0c\u4f46\u8fd9\u4e9b2D\u56fe\u5f62\u5143\u7d20\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u91ce\u517d\uff1a\u5b83\u4eec\u5f71\u54cd\u56fe\u5f62\u72b6\u6001\uff0c\u800c\u56fe\u5f62\u72b6\u6001\u4f20\u7edf\u4e0a\u662f\u5e76\u884c\u6027\u7684\u654c\u4eba\u3002\u586b\u5145\u8f6e\u5ed3\u662f\u53e6\u4e00\u4e2a\u6311\u6218\uff1a\u6548\u679c\u662f\u975e\u5c40\u90e8\u7684\uff0c\u56e0\u4e3a\u586b\u5145\u5f62\u72b6\u7684\u5185\u90e8\u53d6\u51b3\u4e8e\u7f20\u7ed5\u6570\uff0c\u800c\u7f20\u7ed5\u6570\u53d7\u53ef\u80fd\u975e\u5e38\u8fdc\u7684\u8f6e\u5ed3\u5206\u6bb5\u7684\u5f71\u54cd\u3002\u4e3a\u6216\u591a\u6216\u5c11\u72ec\u7acb\u7684\u4e09\u89d2\u5f62\u8bbe\u8ba1\u7684\u7ba1\u9053\u5982\u4f55\u9002\u5e94\u8fd9\u6837\u7684\u6709\u72b6\u6001\u6a21\u578b\u5e76\u4e0d\u660e\u663e\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c06\u89e3\u91ca\u5b83\u662f\u5982\u4f55\u505a\u5230\u7684\u3002\n\u901a\u5e38\uff0c\u5fc5\u987b\u6309\u987a\u5e8f\u8ba1\u7b97\u64cd\u4f5c\u5e8f\u5217\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u5e8f\u5217\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u64cd\u4f5c\u72b6\u6001\u3002\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\u662f\u52a0\u5bc6\u6563\u5217\uff0c\u4f8b\u5982SHA-256\u3002\u7528\u5e76\u884c\u7684\u65b9\u6cd5\u8ba1\u7b97\u8fd9\u6837\u7684\u51fd\u6570\u4f1a\u98a0\u8986\u6211\u4eec\u5bf9\u8ba1\u7b97\u7684\u7406\u89e3\u3002\n\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5e76\u884c\u8ba1\u7b97\u975e\u5e38\u5b9e\u7528\uff0c\u7279\u522b\u662f\u5f53\u72b6\u6001\u66f4\u6539\u53ef\u4ee5\u5efa\u6a21\u4e3a\u5173\u8054\u64cd\u4f5c\u65f6\u3002\u6700\u7b80\u5355\u3001\u6700\u91cd\u8981\u7684\u793a\u4f8b\u662f\u8ba1\u6570\uff1b\u53ea\u9700\u5c06\u8f93\u5165\u5212\u5206\u4e3a\u591a\u4e2a\u5206\u533a\uff0c\u5bf9\u6bcf\u4e2a\u5206\u533a\u8fdb\u884c\u8ba1\u6570\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u5206\u533a\u6c42\u548c\u5373\u53ef\u3002\n\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5173\u8054\u64cd\u4f5c\u6765\u5bf9\u573a\u666f\u8868\u793a\u7684\u5143\u7d20\u6240\u505a\u7684\u72b6\u6001\u66f4\u6539\u8fdb\u884c\u5efa\u6a21\uff1f\u5dee\u4e0d\u591a\u4e86\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u5b83\u5df2\u7ecf\u8db3\u591f\u8fd1\u4e86\u3002\n\u5728\u7ba1\u9053\u7684\u8fd9\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u7684\u72b6\u6001\u6709\u4e09\u4e2a\u7ec4\u4ef6\uff1a\u7b14\u5212\u5bbd\u5ea6\u3001\u5f53\u524d\u4eff\u5c04\u53d8\u6362\u548c\u8fb9\u754c\u6846\u3002\u7f16\u5199\u4e3a\u987a\u5e8f\u4f2a\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u6240\u9700\u7684\u72b6\u6001\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\uff1a\n\u8f93\u5165\u5143\u7d20\u3002\u5982\u679c\u4e0a\u4e00\u4e2a\u5143\u7d20\u662f&#34\uff1b\u586b\u5145&#34\uff1b\u6216&#34\uff1b\u7b14\u5212&#34\uff1b\uff0c\u8bf7\u91cd\u7f6e\u8fb9\u754c\u6846\u3002\u5982\u679c\u5143\u7d20\u662f\uff1a&#34\uff1b\u8bbe\u7f6e\u7ebf\u5bbd&#34\uff1b\uff0c\u8bf7\u5c06\u7ebf\u5bbd\u8bbe\u7f6e\u4e3a\u8be5\u503c\u3002&#34\uff1b\u5408\u5e76\u53d8\u6362&#34\uff1b\uff0c\u5c06\u53d8\u6362\u8bbe\u7f6e\u4e3a\u5f53\u524d\u53d8\u6362\u7684\u65f6\u95f4\u3002&#34\uff1b\u7528\u4e8e\u586b\u5145\u7684\u7ebf\u6bb5\uff0c\u8ba1\u7b97\u8fb9\u754c\u6846\u5e76\u7d2f\u8ba1\u3002\u7b14\u5212\u7684\u7ebf\u6bb5\uff0c\u8ba1\u7b97\u8fb9\u754c\u6846\uff0c\u6309\u7ebf\u5bbd\u5c55\u5f00\uff0c\u7136\u540e\u7d2f\u52a0\u3002&#34\uff1b\u586b\u5145&#34\uff1b\uff0c\u8f93\u51fa\u7d2f\u8ba1\u8fb9\u754c\u6846&#34\uff1b\u7b14\u5212&#34\uff1b\uff0c\u8f93\u51fa\u7d2f\u8ba1\u8fb9\u754c\u6846\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5927\u591a\u6570\u56fe\u5f62API\u90fd\u6709\u4e00\u4e2a\u201c\u4fdd\u5b58\u201d\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u5c06\u72b6\u6001\u63a8\u9001\u5230\u5806\u6808\u4e0a\uff0c\u800c\u201c\u6062\u590d\u201d\u64cd\u4f5c\u5219\u5c06\u5176\u5f39\u51fa\u3002\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u5dde\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u907f\u514d\u8fd9\u4e9b\u3002\u76f8\u53cd\uff0c\u4e3a\u4e86\u6a21\u62df\u201c\u6062\u590d\u201d\u64cd\u4f5c\uff0c\u5982\u679c\u8f6c\u6362\u5728\u524d\u4e00\u6b21\u201c\u4fdd\u5b58\u201d\u540e\u53d1\u751f\u4e86\u66f4\u6539\uff0c\u5219CPU\u4f1a\u5bf9\u9006\u8f6c\u6362\u8fdb\u884c\u7f16\u7801(\u8fd9\u8981\u6c42\u8f6c\u6362\u662f\u975e\u9000\u5316\u7684\uff0c\u4f46\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9650\u5236)\u3002\n\u4f5c\u4e3a\u8fd9\u79cd\u5904\u7406\u7684\u7ed3\u679c\uff0c\u8f93\u5165\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u7528\u8fb9\u754c\u6846\u8fdb\u884c\u6ce8\u91ca\uff0c\u8be5\u8fb9\u754c\u6846\u5c06\u5728\u7a0d\u540e\u7684\u6d41\u6c34\u7ebf\u9636\u6bb5\u7528\u4e8e\u88c5\u7bb1\u3002\u7ebf\u6bb5\u7684\u8fb9\u754c\u6846\u5c31\u662f\u8be5\u7ebf\u6bb5(\u5982\u679c\u662f\u7b14\u89e6\uff0c\u5219\u6269\u5c55\u7ebf\u5bbd)\uff0c\u4f46\u5bf9\u4e8e\u7b14\u89e6\u6216\u586b\u5145\uff0c\u5b83\u662f\u5176\u524d\u9762\u7684\u7ebf\u6bb5\u7684\u5e76\u96c6\u3002\n\u8003\u8651\u5230\u72b6\u6001\u4fee\u6539\u7684\u76f8\u5bf9\u7b80\u5355\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5177\u6709\u51e0\u4e4e\u7ed3\u5408\u7684\u4e8c\u5143\u7b97\u5b50\u7684\u201c\u51e0\u4e4e\u4e48\u534a\u7fa4\u201d\u3002\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u7ed9\u51fa\u6574\u4e2a\u7ed3\u6784(\u5b83\u5728\u4ee3\u7801\u4e2d\u4f5c\u4e3a[element.comp])\uff0c\u4f46\u5c06\u6982\u8ff0\u91cd\u70b9\u3002\n\u5728\u5bf9\u8fd9\u6837\u7684\u72b6\u6001\u64cd\u4f5c\u8fdb\u884c\u5efa\u6a21\u65f6\uff0c\u8003\u8651\u7531\u8f93\u5165\u7684\u67d0\u4e2a\u8fde\u7eed\u5207\u7247\u6267\u884c\u7684\u72b6\u6001\u66f4\u6539\uff0c\u7136\u540e\u8003\u8651\u4e24\u4e2a\u8fde\u7eed\u5207\u7247\u7684\u6548\u679c\u7684\u7ec4\u5408\uff0c\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u4efb\u610f\u4e00\u4e2a\u5207\u7247\u6216\u4e24\u4e2a\u5207\u7247\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u7ebf\u5bbd\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u5207\u7247\u662f\u8fd9\u6837\uff0c\u5219\u65e0\u8bba\u7b2c\u4e00\u4e2a\u5207\u7247\u505a\u4ec0\u4e48\uff0c\u6700\u540e\u7684\u7ebf\u5bbd\u90fd\u662f\u8be5\u503c\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u603b\u4f53\u6548\u679c\u4e0e\u7b2c\u4e00\u4e2a\u5207\u7247\u76f8\u540c\u3002\n\u53d8\u6362\u4e0a\u7684\u6548\u679c\u751a\u81f3\u66f4\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4eff\u5c04\u53d8\u6362\u7684\u4e58\u6cd5\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u4eff\u5c04\u53d8\u6362\u662f\u53ef\u7ed3\u5408\u7684(\u4f46\u4e0d\u662f\u53ef\u4ea4\u6362\u7684)\u3002\n\u4e8b\u60c5\u53d8\u5f97\u7a0d\u5fae\u68d8\u624b\u7684\u662f\u8fb9\u754c\u6846\u7684\u79ef\u7d2f\u3002\u8fb9\u754c\u6846\u7684\u5e76\u96c6\u662f\u4e00\u4e2a\u5173\u8054(\u548c\u4ea4\u6362)\u8fd0\u7b97\u7b26\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u51e0\u4e2a\u6807\u5fd7\u6765\u8ddf\u8e2a\u8fb9\u754c\u6846\u662f\u5426\u91cd\u7f6e\u3002\u4f46\u662f\uff0c\u4e00\u822c\u800c\u8a00\uff0c\u4eff\u5c04\u53d8\u6362\u548c\u8fb9\u754c\u6846\u4e0d\u4f1a\u5b8c\u5168\u5206\u5e03\uff1b\u7531\u8fb9\u754c\u6846\u7684\u4eff\u5c04\u53d8\u6362\u4ea7\u751f\u7684\u8fb9\u754c\u6846\u53ef\u80fd\u6bd4\u53d8\u6362\u5355\u4e2a\u5143\u7d20\u7684\u8fb9\u754c\u6846\u5927\u3002\n\u51fa\u4e8e\u6211\u4eec\u7684\u76ee\u7684\uff0c\u8fb9\u754c\u6846\u53ef\u4ee5\u4fdd\u5b88\uff0c\u56e0\u4e3a\u5b83\u53ea\u7528\u4e8e\u88c5\u7bb1\u3002\u5982\u679c\u6211\u4eec\u5c06\u53d8\u6362\u9650\u5236\u5230\u8f74\u5bf9\u9f50\uff0c\u6216\u8005\u5982\u679c\u6211\u4eec\u4f7f\u7528\u51f8\u58f3\u800c\u4e0d\u662f\u8fb9\u754c\u77e9\u5f62\uff0c\u90a3\u4e48\u53d8\u6362\u5c06\u5b8c\u5168\u5206\u5e03\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u771f\u6b63\u7684\u4e48\u534a\u7fa4\u3002\u4f46\u662f\u8db3\u591f\u63a5\u8fd1\u4e86\u3002\n\u5f53\u6211\u5199\u6211\u7684\u524d\u7f00\u548c\u535a\u5ba2\u6587\u7ae0\u65f6\uff0c\u6211\u6709\u4e00\u4e9b\u60f3\u6cd5\uff0c\u5b83\u57282D\u4e2d\u53ef\u80fd\u4f1a\u6709\u7528\uff0c\u4f46\u5f53\u65f6\u4e0d\u77e5\u9053\u5b83\u4f1a\u6709\u591a\u91cd\u8981\u3002\u4ee4\u4eba\u9ad8\u5174\u7684\u662f\uff0c\u8be5\u5b9e\u73b0\u53ef\u4ee5\u8c03\u6574\u4e3a\u5904\u7406\u8f6c\u6362\u548c\u8fb9\u754c\u6846\u8ba1\u7b97\uff0c\u53ea\u9700\u7a0d\u4f5c\u66f4\u6539\uff0c\u800c\u4e14\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u7684\u6027\u80fd\u8ba8\u8bba\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4ee5\u524d\u7248\u672c\u7684Piet-GPU(\u4ee5\u53ca\u4e4b\u524d\u7684Piet-Metal)\u9700\u8981CPU\u8ba1\u7b97\u6bcf\u4e2a\u201c\u9879\u201d\u7684\u8fb9\u754c\u6846\u3002\u65b0\u5de5\u4f5c\u7684\u90e8\u5206\u4e3b\u9898\u662f\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u8d1f\u8f7d\u5378\u8f7d\u5230GPU\uff0c\u5305\u62ec\u8fb9\u754c\u6846\u3002\n\u867d\u7136\u5728Laine\u548cKarras\u7eb8\u4e2d\uff0c\u5143\u7d20\u5904\u7406\u4e0e\u4e09\u89d2\u5f62\u5904\u7406\u5b8c\u5168\u4e0d\u540c\uff0c\u4f46\u88c5\u7bb1\u57fa\u672c\u4e0a\u662f\u76f8\u540c\u7684\u3002\u5165\u5e93\u7684\u76ee\u7684\u76f8\u5f53\u7b80\u5355\uff1a\u57fa\u4e8e\u4e0a\u9762\u786e\u5b9a\u7684\u8fb9\u754c\u6846\uff0c\u5c06\u5448\u73b0\u76ee\u6807\u8868\u9762\u533a\u57df\u5212\u5206\u4e3a\u201c\u7bb1\u201d(\u5728\u8be5\u5b9e\u73b0\u4e2d\u4e3a256\u00d7256\u50cf\u7d20)\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u7bb1\u8f93\u51fa\u63a5\u89e6\u5230\u7bb1\u7684\u5143\u7d20\u7684\u5217\u8868\u3002\n\u5982\u679c\u60a8\u67e5\u770b\u4ee3\u7801\uff0c\u60a8\u4f1a\u53d1\u73b0\u5f88\u591a\u5173\u4e8eright_edge\u7684\u95ee\u9898\uff0c\u5b83\u7528\u4e8e\u80cc\u666f\u8ba1\u7b97\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u3002\n\u88c5\u4ed3\u9636\u6bb5\u4e00\u822c\u4e0ecudaraster\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u6211\u786e\u5b9e\u5bf9\u5176\u8fdb\u884c\u4e86\u6539\u8fdb\u3002\u5728cudaraster\u542f\u52a8\u56fa\u5b9a\u6570\u91cf\u7684\u5de5\u4f5c\u7ec4(\u65e8\u5728\u5339\u914d\u786c\u4ef6\u4e2d\u7684\u6d41\u5f0f\u591a\u5904\u7406\u5668\u6570\u91cf)\u5e76\u8f93\u51fa\u6bb5\u7684\u94fe\u63a5\u5217\u8868(\u6bcf\u4e2a\u5de5\u4f5c\u7ec4\u548c\u5206\u533a\u4e00\u4e2a\u6bb5)\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u53d1\u73b0\u8fd9\u5728\u540e\u7eed\u7684\u5408\u5e76\u6b65\u9aa4\u4e2d\u4ea7\u751f\u4e86\u76f8\u5f53\u5927\u7684\u5f00\u9500\u3002\u56e0\u6b64\uff0c\u6211\u7684\u8bbe\u8ba1\u4e3a\u6bcf\u4e2abin\u548c\u5206\u533a\u8f93\u51fa\u4e00\u4e2a\u8fde\u7eed\u7684\u6bb5\uff0c\u8fd9\u5141\u8bb8\u5728\u5408\u5e76\u6b65\u9aa4\u4e2d\u8fdb\u884c\u66f4\u591a\u7684\u5e76\u884c\u8bfb\u53d6\uff0c\u5c3d\u7ba1\u5b83\u6f5c\u5728\u5730\u8f93\u51fa\u7a7a\u6bb5\u7684\u5f00\u9500\u5f88\u5c0f(\u6211\u6000\u7591\u8fd9\u5c31\u662fLaine\u548cKarras\u6ca1\u6709\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u539f\u56e0)\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5de5\u4f5c\u7ec4\u4e0d\u9700\u8981\u5f7c\u6b64\u540c\u6b65\uff0c\u5e76\u4e14\u8f93\u51fa\u6bb5\u4e2d\u7684\u5143\u7d20\u4fdd\u6301\u6392\u5e8f\uff0c\u8fd9\u51cf\u8f7b\u4e86\u540e\u7eed\u5408\u5e76\u6b65\u9aa4\u4e2d\u7684\u8d1f\u62c5\u3002\n\u88c5\u7bb1\u9636\u6bb5\u4e5f\u76f8\u5f53\u5feb\uff0c\u5bf9\u603b\u6e32\u67d3\u65f6\u95f4\u6ca1\u6709\u592a\u5927\u5f71\u54cd\u3002\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e48\u5927\u7684\u5783\u573e\u6876\uff0c\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5c11\u5462\uff1f\u5982\u679c\u5165\u5e93\u901f\u5ea6\u5982\u6b64\u4e4b\u5feb\uff0c\u90a3\u4e48\u5411\u4e0b\u4e00\u76f4\u5230\u5355\u4e2a\u74f7\u7816\u7684\u5165\u5e93\u53ef\u80fd\u4f1a\u5f88\u5438\u5f15\u4eba\u3002\u4f46\u662f\u8bbe\u8ba1\u8981\u6c42\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2abin\uff0c\u56e0\u6b64\u8fd9\u5c06\u8d85\u8fc7\u5de5\u4f5c\u7ec4\u7684\u5927\u5c0f(\u5de5\u4f5c\u7ec4\u5927\u5c0f\u901a\u5e38\u9650\u5236\u57281024\u4e2a\u7ebf\u7a0b\u5de6\u53f3\uff0c\u975e\u5e38\u5927\u7684\u5de5\u4f5c\u7ec4\u53ef\u80fd\u4f1a\u6709\u5176\u4ed6\u6027\u80fd\u95ee\u9898)\u3002\u5f53\u7136\uff0c\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8c03\u4f18\u8fd9\u4e9b\u56e0\u7d20\u6765\u63d0\u9ad8\u6027\u80fd\uff1b\u901a\u5e38\u6211\u4f7f\u7528\u7684\u662f\u6574\u6570\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u9636\u6bb5\u7684\u5b9e\u73b0\u662f\u6700\u5177\u6311\u6218\u6027\u7684\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u4ee4\u4eba\u7cbe\u75b2\u529b\u7aed\u7684\u6027\u80fd\u8981\u6c42\uff0c\u4e5f\u662f\u56e0\u4e3a\u5b83\u9700\u8981\u7ed3\u5408\u592a\u591a\u7684\u903b\u8f91\u3002\n\u7c97\u5149\u6805\u5316\u5668\u7684\u6838\u5fc3\u4e0ecudaraster\u975e\u5e38\u76f8\u4f3c\u3002\u5728\u5185\u90e8\uff0c\u5b83\u5206\u9636\u6bb5\u5de5\u4f5c\uff0c\u6bcf\u4e2a\u5468\u671f\u6d88\u8017\u5b58\u50a8\u7bb1\u4e2d\u7684256\u4e2a\u5143\u7d20\uff0c\u76f4\u5230\u5904\u7406\u5b8c\u5b58\u50a8\u7bb1\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\n\u7b2c\u4e00\u9636\u6bb5\u5408\u5e76\u7bb1\u8f93\u51fa\uff0c\u5c06\u5143\u7d20\u6062\u590d\u5230\u6392\u5e8f\u7684\u987a\u5e8f\u3002\u6b64\u9636\u6bb5\u91cd\u590d\u8bfb\u53d6\u5728\u5165\u5e93\u9636\u6bb5\u4e2d\u751f\u6210\u7684\u5757\uff0c\u76f4\u5230\u8bfb\u53d6\u4e86256\u4e2a\u5143\u7d20(\u6216\u5230\u8fbe\u8f93\u5165\u672b\u5c3e)\u3002\n\u63a5\u4e0b\u6765\u662f\u8f93\u5165\u9636\u6bb5\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8bfb\u53d6\u4e00\u4e2a\u5143\u7d20\u3002\u5b83\u8fd8\u8ba1\u7b97\u8be5\u5143\u7d20\u7684\u8986\u76d6\u7387\uff0c\u4ece\u800c\u6709\u6548\u5730\u7ed8\u523616x16\u4f4d\u56fe\u3002\u8fd8\u6709\u7279\u6b8a\u7684\u80cc\u666f\u5904\u7406\uff0c\u89c1\u4e0b\u6587\u3002\n\u8ba1\u7b97\u7ebf\u6bb5\u7684\u603b\u6570\uff0c\u5e76\u4f7f\u7528\u539f\u5b50\u52a0\u6cd5\u5206\u914d\u8f93\u51fa\u4e2d\u7684\u7a7a\u95f4\u3002\n\u4e0e\u5728cudaraster\u4e2d\u4e00\u6837\uff0c\u6bb5\u4ee5\u9ad8\u5ea6\u5e76\u884c\u7684\u65b9\u6848\u8f93\u51fa\uff0c\u6240\u6709\u8f93\u51fa\u6bb5\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5e73\u5747\u5206\u914d\uff0c\u56e0\u6b64\u6bcf\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u6267\u884c\u4e00\u4e2a\u8f83\u5c0f\u7684\u9636\u6bb5\u624d\u80fd\u627e\u5230\u5b83\u7684\u5de5\u4f5c\u9879\u3002\n\u7136\u540e\u6309\u987a\u5e8f\u5199\u5165\u5e73\u94fa\u547d\u4ee4\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4e00\u4e2a\u5e73\u94fa\u3002\u8fd9\u4f7f\u6211\u4eec\u53ef\u4ee5\u8ddf\u8e2a\u6bcf\u4e2a\u5e73\u94fa\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u547d\u4ee4\u7684\u6570\u91cf\u5f80\u5f80\u6bd4\u5206\u6bb5\u5c11\u5f97\u591a\u3002\n\u8fd9\u88ab\u79f0\u4e3a\u201c\u7c97\u5149\u6805\u5316\u201d\uff0c\u56e0\u4e3a\u5b83\u5bf9\u8def\u5f84\u6bb5\u7684\u51e0\u4f55\u5f62\u72b6\u5f88\u654f\u611f\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u7ebf\u6bb5\u7684\u5e73\u94fa\u8986\u76d6\u662f\u4f7f\u7528\u201c\u7c97\u7ebf\u6761\u5149\u6805\u5316\u201d\u7b97\u6cd5\u6765\u5b8c\u6210\u7684\uff1a\n2D\u77e2\u91cf\u56fe\u5f62\u7684\u7c97\u6805\u683c\u5316\u7684\u4e00\u4e2a\u7279\u6b8a\u529f\u80fd\u662f\u586b\u5145\u5f62\u72b6\u7684\u5185\u90e8\u3002\u5e38\u89c4\u65b9\u6cd5\u7c7b\u4f3c\u4e8eRAVG\uff1b\u5f53\u8fb9\u7f18\u7a7f\u8fc7\u74f7\u7816\u7684\u4e0a\u8fb9\u7f18\u65f6\uff0c\u201c\u80cc\u666f\u201d\u5c06\u4f20\u64ad\u5230\u53f3\u4fa7\u7684\u6240\u6709\u74f7\u7816\uff0c\u76f4\u5230\u586b\u5145\u8fb9\u754c\u6846\u7684\u53f3\u8fb9\u7f18\u3002\n\u867d\u7136\u5728\u6982\u5ff5\u4e0a\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u6709\u6548\u5b9e\u73b0\u6b64\u529f\u80fd\u7684\u4ee3\u7801\u6db5\u76d6\u4e86\u7ba1\u9053\u4e2d\u7684\u591a\u4e2a\u9636\u6bb5\u3002\u4f8b\u5982\uff0c\u586b\u5145\u7684\u53f3\u8fb9\u7f18\u5fc5\u987b\u4f20\u64ad\u56de\u586b\u5145\u5185\u7684\u7ebf\u6bb5\uff0c\u5373\u4f7f\u5728\u65e9\u671f\u9636\u6bb5(\u5982\u88c5\u7bb1)\u4e5f\u662f\u5982\u6b64\u3002\n\u5728\u5143\u7d20\u5904\u7406\u4e2d\uff0c\u6bcf\u4e2a\u5206\u533a\u7684\u7b2c\u4e00\u53f3\u8fb9\u7f18\u88ab\u8bb0\u5f55\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u96c6\u5408\u4e2d\u3002\n\u5c06\u4e3a\u5165\u5e93\u4e2d\u7684\u6bcf\u4e2a\u6bb5\u8ba1\u7b97\u53f3\u8fb9\u7f18\uff0c\u5e76\u5c06\u5176\u8bb0\u5f55\u5728\u5165\u5e93\u8f93\u51fa\u4e2d\u3002\u5f53\u7ebf\u6bb5\u7a7f\u8fc7\u5e73\u94fa\u7684\u9876\u8fb9\u65f6\uff0c\u6b64\u903b\u8f91\u8fd8\u4f1a\u5c06\u7ebf\u6bb5\u6dfb\u52a0\u5230\u6761\u67f1\u4e2d\u3002\n\u5728\u7c97\u7565\u5149\u6805\u5316\u7684\u8f93\u5165\u9636\u6bb5\uff0c\u6a2a\u8de8\u74f7\u7816\u4e0a\u8fb9\u7f18\u7684\u7ebf\u6bb5\u4f1a\u5c061\u201c\u7ed8\u5236\u201d\u5230\u6240\u6709\u74f7\u7816\u53f3\u4fa7\u7684\u4f4d\u56fe\u4e2d\uff0c\u4e5f\u5c31\u662f\u76f4\u5230\u586b\u5145\u7684\u53f3\u8fb9\u7f18\u3002\u4ea4\u53c9\u70b9\u7684\u7b26\u53f7\u4e5f\u5728\u5355\u72ec\u7684\u4f4d\u56fe\u4e2d\u6ce8\u660e\uff0c\u4f46\u8fd9\u4e0d\u9700\u8981\u540c\u65f6\u9488\u5bf9\u6bcf\u4e2a\u5143\u7d20\u548c\u6bcf\u4e2a\u5e73\u94fa\uff0c\u56e0\u4e3a\u5b83\u5bf9\u6240\u6709\u5e73\u94fa\u90fd\u662f\u4e00\u81f4\u7684\u3002\n\u5728\u7c97\u5149\u6805\u5316\u7684\u8f93\u51fa\u9636\u6bb5\uff0c\u4f7f\u7528\u4f4d\u8ba1\u6570\u64cd\u4f5c\u5bf9\u80cc\u666f\u8fdb\u884c\u6c42\u548c\u3002\u7136\u540e\uff0c\u5982\u679c\u62fc\u8d34\u4e2d\u6709\u4efb\u4f55\u8def\u5f84\u6bb5\uff0c\u5219\u5728PATH\u547d\u4ee4\u4e2d\u8bb0\u5f55\u80cc\u666f\u3002\u5426\u5219\uff0c\u5982\u679c\u80cc\u666f\u975e\u96f6\uff0c\u5219\u8f93\u51fa\u7eaf\u8272\u547d\u4ee4\u3002\n\u57fa\u672c\u4e0a\uff0c\u6b63\u786e\u7684\u7f20\u7ed5\u6570\u662f\u4e09\u6761\u89c4\u5219\u7684\u7ec4\u5408\u3002\u5728\u5e73\u94fa\u5185\uff0c\u7ebf\u6bb5\u4f1a\u5bfc\u81f4\u7ebf\u53f3\u4fa7\u533a\u57df\u7684\u7f20\u7ed5\u7f16\u53f7\u66f4\u6539\u4e3a+1(\u7ffb\u8f6c\u65b9\u5411\u65f6\u7ffb\u8f6c\u7b26\u53f7)\u3002\u5982\u679c\u8be5\u7ebf\u4e0e\u5782\u76f4\u5e73\u94fa\u8fb9\u7f18\u76f8\u4ea4\uff0c\u5219\u4f1a\u5411\u4ea4\u53c9\u70b9\u4e0b\u65b9\u7684\u534a\u5e73\u94fa\u4e2d\u6dfb\u52a0\u989d\u5916\u7684-1\u3002\u5982\u679c\u7ebf\u6761\u4e0e\u6c34\u5e73\u5e73\u94fa\u8fb9\u7f18\u76f8\u4ea4\uff0c\u5219\u53f3\u4fa7\u7684\u6240\u6709\u5e73\u94fa\u90fd\u4f1a\u6dfb\u52a0+1\uff1b\u8fd9\u79f0\u4e3a\u201c\u80cc\u666f\u201d\uff0c\u4e5f\u662f\u5b8c\u5168\u4f4d\u4e8e\u5f62\u72b6\u5185\u90e8\u7684\u5e73\u94fa\u53ef\u4ee5\u88ab\u586b\u5145\u7684\u65b9\u5f0f\u3002\u51e0\u4e4e\u5c31\u50cf\u53d8\u9b54\u672f\u4e00\u6837\uff0c\u8fd9\u4e09\u4e2a\u89c4\u5219\u7684\u7ec4\u5408\u4ea7\u751f\u4e86\u6b63\u786e\u7684\u7f20\u7ed5\u6570\uff0c\u74f7\u7816\u8fb9\u754c\u88ab\u64e6\u9664\u3002RAVG\u7684\u8bba\u6587\u4e2d\u7ed9\u51fa\u4e86\u8fd9\u4e00\u89c2\u70b9\u7684\u53e6\u4e00\u79cd\u8868\u8ff0\u3002\n\u7cbe\u7ec6\u5149\u6805\u5316\u9636\u6bb5\u51e0\u4e4e\u6ca1\u6709\u53d7\u5230\u4e4b\u524dPiet-GPU\u8fed\u4ee3\u7684\u5f71\u54cd\u3002\u6211\u5bf9\u5b83\u7684\u8868\u73b0\u975e\u5e38\u6ee1\u610f\uff1b\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4e3a\u7c97\u7565\u7684\u5149\u6805\u5316\u6709\u6548\u5730\u51c6\u5907\u74f7\u7816\u3002\nPiet-GPU(\u548cPiet-Metal)\u6700\u521d\u7684\u68a6\u60f3\u662f\u7f16\u7801\u8fc7\u7a0b\u5c3d\u53ef\u80fd\u8f7b\uff0cCPU\u5b9e\u9645\u4e0a\u53ea\u662f\u4e0a\u4f20\u573a\u666f\u7684\u8868\u793a\uff0c\u7136\u540eGPU\u5c06\u5176\u5904\u7406\u6210\u6e32\u67d3\u7684\u7eb9\u7406\u3002\u65b0\u7684\u8bbe\u8ba1\u79bb\u8fd9\u4e2a\u68a6\u60f3\u66f4\u8fd1\u4e86\u4e00\u6b65\uff1b\u5728\u6700\u521d\u7684\u8bbe\u8ba1\u4e2d\uff0cCPU\u8d1f\u8d23\u8ba1\u7b97\u8fb9\u754c\u6846\uff0c\u4f46\u73b0\u5728GPU\u8d1f\u8d23\u8fd9\u4e00\u70b9\u3002\n\u66f4\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u4e0e\u539f\u59cbPiet-Metal\u4f53\u7cfb\u7ed3\u6784\u76f8\u6bd4\uff0c\u5b57\u7b26\u4e32\u8868\u793a\u5f00\u8f9f\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u5c42\u65b9\u6cd5\uff1a\u53ea\u9700\u4fdd\u7559\u5b57\u8282\u8868\u793a\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\u5373\u53ef\u3002\u5728\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u4e2d\uff0c\u8fd9\u53ea\u662f\u4e0a\u4f20\u573a\u666f\u7f13\u51b2\u533a\u4e4b\u524d\u7684memcpy CPU\u7aef\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u7528\u4e8e\u975e\u8fde\u7eed\u5b57\u7b26\u4e32\u8868\u793a\u7684\u5168\u90e8\u6280\u672f\u3002\u4ee5\u524d\u7684\u60f3\u6cd5\u662f\u5c06\u573a\u666f\u5b58\u50a8\u4e3a\u56fe\u5f62\uff0c\u8fd9\u9700\u8981\u590d\u6742\u7684\u5185\u5b58\u7ba1\u7406\u3002\n\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u4f8b\u662f\u5b57\u4f53\u5448\u73b0\u3002\u5b57\u5f62\u7684\u8f6e\u5ed3\u53ef\u4ee5\u88ab\u7f16\u7801\u6210\u5b57\u8282\u5e8f\u5217\u4e00\u6b21(\u901a\u5e38\u5728\u51e0\u767e\u5b57\u8282\u5de6\u53f3)\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u4fdd\u7559\u7684\u7f16\u7801\u4e0e\u53d8\u6362\u547d\u4ee4\u4ea4\u7ec7\u6765\u7ec4\u88c5\u6587\u672c\u4e32\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u5373\u4f7f\u662f\u8fd9\u79cd\u53c2\u8003\u5206\u8fa8\u7387\u4e5f\u53ef\u80fd\u60f3\u8981\u8fc1\u79fb\u5230GPU\u4e0a\uff0c\u7279\u522b\u662f\u4e3a\u4e86\u542f\u7528\u7eb9\u7406\u7f13\u5b58\uff0c\u4f46\u8fd9\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u4e5f\u5e94\u8be5\u662f\u53ef\u884c\u7684\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u5f53\u524d\u7684\u4ee3\u7801\u68c0\u67e5\u70b9\uff0c\u8fd9\u4e00\u613f\u666f\u8fd8\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6241\u5e73\u5316\u4ecd\u7136\u662fCPU\u7aef\u7684\u3002\u56e0\u6b64\uff0c\u4fdd\u7559\u7684\u5b50\u56fe(\u7279\u522b\u662f\u5b57\u4f53\u5b57\u5f62)\u4e0d\u80fd\u5728\u5927\u8303\u56f4\u7684\u7f29\u653e\u4e2d\u91cd\u590d\u4f7f\u7528\u3002\u4f46\u6211\u6709\u4fe1\u5fc3\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\n\u6700\u521d\u7684\u8bbe\u8ba1\u5bf9\u4e8e\u67d0\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u975e\u5e38\u6709\u6548\uff0c\u4f46\u603b\u4f53\u6027\u80fd(\u5bf9\u6211\u800c\u8a00)\u4ee4\u4eba\u5931\u671b\u3002\u73b0\u5728\u662f\u6df1\u5165\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u7684\u597d\u65f6\u673a\u3002\n\u7b80\u5355\u5730\u8bf4\uff0c\u6700\u521d\u7684\u8bbe\u8ba1\u662f\u4e00\u7cfb\u5217\u7684\u56db\u4e2a\u5185\u6838\uff1a\u56fe\u5f62\u904d\u5386(\u548c\u7ed1\u5b9a\u5230512x32\u7684\u201ctileggroup\u201d)\uff0c\u6211\u73b0\u5728\u79f0\u4e4b\u4e3a\u8def\u5f84\u6bb5\u7684\u7c97\u7565\u5149\u6805\u5316\uff0c\u6bcf\u5e73\u94fa\u547d\u4ee4\u5217\u8868\u7684\u751f\u6210(\u7c97\u7565\u5149\u6805\u5316\u7684\u5176\u4f59\u90e8\u5206)\uff0c\u4ee5\u53ca\u7cbe\u7ec6\u5149\u6805\u5316\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u573a\u666f\u8868\u793a\uff1b\u5426\u5219\u821e\u53f0\u4f1a\u6709\u76f8\u5f53\u7a0b\u5ea6\u7684\u91cd\u53e0\u3002\u5728\u65e7\u7684\u8bbe\u8ba1\u4e2d\uff0cCPU\u8d1f\u8d23\u7f16\u7801\u56fe\u5f62\u7ed3\u6784\uff0c\u586b\u5145/\u63cf\u8fb9\u8def\u5f84\u4e2d\u7684\u4e24\u4e2a\u8def\u5f84\u6bb5\uff0c\u4ee5\u53ca\u5c06\u9879\u76ee\u5206\u7ec4\u5728\u4e00\u8d77\u7684\u80fd\u529b\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u5f53\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\u65e2\u4e0d\u5927\u4e5f\u4e0d\u5c0f\u65f6\uff0c\u8f83\u65e7\u7684\u8bbe\u8ba1\u662f\u6709\u6548\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u8d85\u51fa\u4e86\u8fd9\u4e00\u4ee4\u4eba\u6ee1\u610f\u7684\u4e2d\u95f4\u503c\uff0c\u6027\u80fd\u5c06\u4f1a\u4e0b\u964d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u5176\u4e2d\u7684\u539f\u56e0\u3002\u524d\u4e09\u4e2a\u5185\u6838\u90fd\u6709\u6f5c\u5728\u7684\u6027\u80fd\u95ee\u9898\u3002\n\u4ece\u5185\u68381(\u56fe\u5f62\u904d\u5386)\u5f00\u59cb\uff0c\u57fa\u672c\u95ee\u9898\u662f\u8be5\u5185\u6838\u7684\u6bcf\u4e2a\u5de5\u4f5c\u7ec4(\u8d1f\u8d23512x512\u533a\u57df)\u90fd\u6267\u884c\u81ea\u5df1\u7684\u8f93\u5165\u56fe\u904d\u5386\u3002\u5bf9\u4e8e2048x1536\u76ee\u6807\uff0c\u8fd9\u610f\u5473\u774012\u4e2a\u5de5\u4f5c\u7ec4\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u7a81\u51fa\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff1b\u8fd9\u4e00\u9636\u6bb5\u53ef\u80fd\u4f1a\u7f3a\u4e4f\u5e76\u884c\u6027\uff0c\u8fd9\u5728\u79bb\u6563\u56fe\u5f62\u4e0a\u662f\u4e00\u4e2a\u6bd4\u96c6\u6210\u56fe\u5f62\u66f4\u5927\u7684\u76f8\u5bf9\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u8bfb\u53d6\u8f93\u5165\u573a\u666f\u7684\u6210\u672c\u4e58\u4ee512\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1b\u5982\u679c\u8fd9\u4e9b\u8282\u70b9\u6709\u5f88\u591a\u5b50\u8282\u70b9(\u4f8b\u5982\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5177\u6709\u5f88\u591a\u8def\u5f84\u6bb5\u7684\u8def\u5f84)\uff0c\u5219\u53ea\u63a5\u89e6\u7236\u8282\u70b9\u3002\u66f4\u597d\u7684\u662f\uff0c\u5982\u679c\u8282\u70b9\u4ee5\u826f\u597d\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\u8fdb\u884c\u5206\u7ec4(\u8fd9\u5bf9\u4e8eUI\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u80fd\u662f\u73b0\u5b9e\u7684)\uff0c\u5219\u901a\u8fc7\u8fb9\u754c\u6846\u5254\u9664\u53ef\u4ee5\u6d88\u9664\u5927\u91cf\u91cd\u590d\u5de5\u4f5c\u3002\u4f46\u662f\u5bf9\u4e8e\u5927\u91cf\u5c0f\u5bf9\u8c61\u7684\u7279\u5b9a\u60c5\u51b5(\u4f8b\u5982\uff0c\u5728\u6563\u70b9\u56fe\u53ef\u89c6\u5316\u4e2d\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5)\uff0c\u529f\u7cfb\u6570\u4e0d\u662f\u5f88\u597d\u3002\n\u7b2c\u4e8c\u4e2a\u5185\u6838\u6709\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5b50\u4ee3\u7684\u6570\u91cf\u662f\u5c0f\u8fd8\u662f\u5927\u3002\u5728\u524d\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u5de5\u4f5c\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8bfb\u53d6\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u5229\u7528\u7387\u5f88\u4f4e\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5de5\u4f5c\u8ba9\u7ebf\u7a0b\u4fdd\u6301\u5fd9\u788c(\u6211\u6709\u4e00\u4e2a\u201c\u5947\u7279\u7684K2\u201d\u5206\u652f\uff0c\u5b83\u8bd5\u56fe\u5c06\u591a\u4e2a\u8282\u70b9\u6253\u5305\u5728\u4e00\u8d77\uff0c\u4f46\u7531\u4e8e\u5206\u6b67\u8f83\u5927\uff0c\u8fd9\u662f\u4e00\u79cd\u56de\u5f52)\u3002\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u95ee\u9898\u662f\u6bcf\u4e2a\u5de5\u4f5c\u7ec4(\u8d1f\u8d23512x32\u7ec4)\u5fc5\u987b\u8bfb\u53d6\u4e0e\u8be5\u7ec4\u76f8\u4ea4\u7684\u6bcf\u6761\u8def\u5f84\u4e2d\u7684\u6240\u6709\u8def\u5f84\u6bb5\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u6761\u6d89\u53ca\u8bb8\u591a\u62a5\u9053\u7ec4\u7684\u5927\u578b\u590d\u6742\u8def\u5f84\uff0c\u5b58\u5728\u5927\u91cf\u91cd\u590d\u7684\u4f5c\u4e1a\u9605\u8bfb\u8def\u5f84\u7247\u6bb5\uff0c\u7136\u540e\u8fd9\u4e9b\u7247\u6bb5\u5c06\u88ab\u4e22\u5f03\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u7531\u4e8e\u96be\u4ee5\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\uff0c\u5229\u7528\u7387\u5f88\u4f4e\uff1b\u5e73\u94fa\u7684\u590d\u6742\u6027\u5dee\u5f02\u5f88\u5927\uff0c\u56e0\u6b64\u4e00\u4e9b\u7ebf\u7a0b\u4f1a\u95f2\u7f6e\uff0c\u7b49\u5f85tileggroup\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\u3002\n\u7b2c\u4e09\u4e2a\u5185\u6838\u4e5f\u9700\u8981\u76f8\u5f53\u591a\u7684\u65f6\u95f4\uff0c\u901a\u5e38\u4e0e\u7cbe\u7ec6\u5149\u6805\u5316\u5927\u81f4\u76f8\u540c\u3002\u540c\u6837\uff0c\u6700\u5927\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u5229\u7528\u7387\u4f4e\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u56e0\u4e3a\u6240\u6709\u7ebf\u7a0b\u90fd\u4f1a\u8003\u8651\u4e0etileggroup\u76f8\u4ea4\u7684\u6240\u6709\u9879\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u53ea\u89e6\u53caTILEGROUP\u5185\u7684\u4e00\u5c0f\u90e8\u5206\u74f7\u7816\uff0c\u8fd9\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u5de5\u4f5c\u3002\n\u65b0\u7684\u8bbe\u8ba1\u907f\u514d\u4e86\u8bb8\u591a\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5728\u65e9\u671f\u9636\u6bb5\u5927\u5e45\u589e\u52a0\u4e86\u5e76\u884c\u6027\uff0c\u5728\u4e2d\u95f4\u9636\u6bb5\u91c7\u7528\u4e86\u66f4\u591a\u7684\u5e76\u884c\u3001\u8d1f\u8f7d\u5e73\u8861\u7684\u9636\u6bb5\u3002\u7136\u800c\uff0c\u5b83\u66f4\u590d\u6742\uff0c\u901a\u5e38\u4e5f\u66f4\u91cd\u91cf\u7ea7\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u907f\u514d\u4e86\u4e0a\u9762\u6982\u8ff0\u7684\u6027\u80fd\u9677\u9631\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u65e7\u7684\u8bbe\u8ba1\u4ecd\u7136\u53ef\u4ee5\u51fb\u8d25\u5b83\u3002\n\u4e0e\u524d\u4e00\u7248\u672c\u76f8\u6bd4\uff0c\u6027\u80fd\u597d\u574f\u53c2\u534a\u3002\u8fd9\u5728\u67d0\u4e9b\u65b9\u9762\u662f\u4ee4\u4eba\u9f13\u821e\u7684\uff0c\u4f46\u4e0d\u662f\u4e00\u5200\u5207\u7684\uff0c\u5176\u4e2d\u4e00\u9879\u6d4b\u8bd5\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u5012\u9000\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0bGTX 1060\uff1a\n\u8fd9\u91cc\u7684\u8ba1\u65f6\u662f\u6210\u5bf9\u7ed9\u51fa\u7684\uff0c\u65e7\u7684\u8bbe\u8ba1\u5728\u5de6\u8fb9\uff0c\u4e2d\u95f4\u6392\u5e8f\u5728\u53f3\u8fb9\u3002\u8fd9\u4e9b\u7ed3\u679c\u4ee4\u4eba\u9f13\u821e\uff0c\u5176\u4e2d\u5305\u62ec\u5df4\u9ece30k\u6d4b\u8bd5\u975e\u5e38\u5438\u5f15\u4eba\u7684\u52a0\u901f\u3002(\u540c\u6837\uff0c\u6211\u5e94\u8be5\u6307\u51fa\uff0c\u6b64\u6d4b\u8bd5\u4e0d\u662f\u5b8c\u5168\u51c6\u786e\u7684\u5448\u73b0\uff0c\u56e0\u4e3a\u672a\u5e94\u7528\u7b14\u5212\u6837\u5f0f\u3002\u7136\u800c\uff0c\u4f5c\u4e3a\u5bf9\u65e7\u67b6\u6784\u548c\u65b0\u67b6\u6784\u7684\u6d4b\u8bd5\uff0c\u8fd9\u662f\u4e00\u4e2a\u516c\u5e73\u7684\u6d4b\u8bd5)\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6ca1\u6709\u3002\u52a0\u901f\u6bd4\u8981\u5c0f\u5f97\u591a\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8eParis-30k\u7684\u4f8b\u5b50\uff0c\u5b83\u5df2\u7ecf\u5012\u9000\u4e86\u3002\u4e0d\u540c\u7684GPU\u5177\u6709\u4e0d\u540c\u7684\u6027\u80fd\u7279\u5f81\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u662f\u7f16\u5199GPU\u4ee3\u7801\u7684\u96be\u70b9\u4e4b\u4e00\u3002\u6211\u6ca1\u6709\u6df1\u5165\u5206\u6790\u6027\u80fd(\u6211\u53d1\u73b0\u5f88\u96be\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u7ecf\u5e38\u5e0c\u671b\u6709\u66f4\u597d\u7684\u5de5\u5177)\uff0c\u4f46\u6211\u6000\u7591\u8fd9\u53ef\u80fd\u4e0eIntel\u4e0a\u7ebf\u7a0b\u7ec4\u5171\u4eab\u5185\u5b58\u7684\u76f8\u5bf9\u8f83\u6162\u7684\u6027\u80fd\u6709\u5173\u3002\n\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u7c97\u6805\u683c\u5316\u7684\u6210\u672c\u90fd\u5f88\u9ad8\uff0c\u800c\u5143\u7d20\u5904\u7406\u548c\u5165\u5e93\u90fd\u76f8\u5f53\u5feb\u3002\n\u6027\u80fd\u603b\u4f53\u4e0a\u6bd4\u4e0a\u4e00\u7248\u672c\u7684Piet-GPU\u6709\u6240\u63d0\u9ad8\uff0c\u4f46\u4e0d\u5982\u6211\u6240\u5e0c\u671b\u7684\u90a3\u4e48\u591a\u3002\u4e3a\u4ec0\u4e48\uff1f\n\u6211\u7684\u5206\u6790\u662f\uff0c\u8fd9\u662f\u6982\u5ff5\u7684\u53ef\u9760\u5b9e\u73b0\uff0c\u4f46\u5728\u7ba1\u9053\u4e2d\u5b8c\u5168\u6309\u5b8c\u5168\u6392\u5e8f\u7684\u987a\u5e8f\u8fd0\u8f93\u5143\u7d20\u9700\u8981\u4ed8\u51fa\u4e0d\u5c0f\u7684\u6210\u672c\u3002\u4e00\u79cd\u89c2\u5bdf\u7ed3\u679c\u662f\uff0c\u8def\u5f84\u5185\u7684\u6bb5\u6839\u672c\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u7b80\u5355\u5730\u5f52\u56e0\u4e8e\u6b63\u786e\u7684(\u8def\u5f84\u3001\u5e73\u94fa\u4f4d\u7f6e)\u5143\u7ec4\u3002\u6211\u5c06\u5728\u5373\u5c06\u53d1\u5e03\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u63a2\u8ba8\u8fd9\u4e00\u70b9\u3002\n\u53e6\u4e00\u4ef6\u91cd\u8981\u7684\u4e1c\u897f\u4ece\u6d41\u901a\u9886\u57df\u9057\u5931\u4e86\u3002\n..", "note_en": "In my recent  piet-gpu update, I wrote that I was not satisfied with performance and teased a new approach. I\u2019m on a quest to systematically figure out how to get top-notch performance, and this is a report of one station I\u2019m passing through.\n To recap, piet-gpu is a new high performance 2D rendering engine, currently a research protoype. While most 2D renderers fit the vector primitives into a GPU\u2019s rasterization pipeline, the brief for piet-gpu is to fully explore what\u2019s possible using the compute capabilities of modern GPUs. In short, it\u2019s a software renderer that is written to run efficiently on a highly parallel computer. Software rendering has been gaining more attention even for complex 3D scenes, as the traditional triangle-centric pipeline is less and less of a fit for high-end rendering. As a striking example, the new  Unreal 5 engine relies heavily on compute shaders for software rasterization.\n The new architecture for piet-gpu draws heavily from the 2011 paper  High-Performance Software Rasterization on GPUs by Laine and Karras. That paper describes an all-compute rendering pipeline for the traditional 3D triangle workload. The architecture calls for sorting in the middle of the pipeline, so that in the early stage of the pipeline, triangles can be processed in arbitrary order to maximally exploit parallelism, but the output render still correctly applies the triangles in order. In 3D rendering, you can  almost get away with unsorted rendering, relying on Z-buffering to decide a winning fragment, but that would result in \u201cZ-fighting\u201d artifacts and also cause problems for semitransparent fragments.\n The original piet-metal architecture tried to avoid an explicit sorting step by traversing the scene graph from the root, each time. The simplicity is appealing, but it also required redundant work and limited the parallelism that could be exploited. The new architecture adopts a similar pipeline structure as the Laine and Karras paper, but with 2D graphics \u201celements\u201d in place of triangles.\n Central to the new piet-gpu architecture, the scene is represented as a contiguous sequence of these elements, each of which has a fixed-size representation. The current elements are \u201cconcatenate affine transform\u201d, \u201cset line width\u201d, \u201cline segment for stroke\u201d, \u201cstroke previous line segments\u201d, \u201cline segment for fill\u201d, and \u201cfill previous line segments\u201d, with of course many more elements planned as the capability of the renderer grows.\n While triangles are more or less independent of each other aside from the order of blending the rasterized fragments, these 2D graphics elements are a different beast: they affect graphics  state, which is traditionally the enemy of parallelism. Filled outlines present another challenge: the effects are non-local, as the interior of a filled shape depends on the winding number as influenced by segments of the outline that may be very far away. It is not obvious how a pipeline designed for more or less independent triangles can be adapted to such a stateful model. This post will explain how it\u2019s done.\n  In general, a sequence of operations, each of which manipulates state in some way, must be evaluated sequentially. An extreme example is a cryptographic hash such as SHA-256. A parallel approach to evaluating such a function would upend our understanding of computation.\n However, in certain cases parallel evaluation is quite practical, in particular when the change to state can be modeled as an associative operation. The simplest nontrivial example is counting; just divide up the input into  partitions, count each partition, then sum those.\n Can we design an associative operation to model the state changes made by the elements of our scene representation? Almost, and as we\u2019ll see, it\u2019s close enough.\n At this stage in the pipeline, there are three components to our state: the stroke width, the current affine transform, and the bounding box. Written as sequential pseudocode, our desired state manipulation looks like this:\n Input an element.If the previous element was &#34;fill&#34; or &#34;stroke&#34;, reset the bounding box.If the element is: &#34;set line width&#34;, set the line width to that value. &#34;concatenate transform&#34;, set the transform to the current transform times that. &#34;line segment for fill,&#34; compute bounding box, and accumulate. &#34;line segment for stroke,&#34; compute bounding box, expand by line width, and accumulate. &#34;fill&#34;, output accumulated bounding box &#34;stroke&#34;, output accumulated bounding box\n Note that most graphics APIs have a \u201csave\u201d operation that pushes a state onto a stack, and \u201crestore\u201d to pop it. Because we desire our state to be fixed-size, we\u2019ll avoid those. Instead, to simulate a \u201crestore\u201d operation, if the transform was changed since the previous \u201csave,\u201d the CPU encodes the inverse transform (this requires that transforms be non-degenerate, but this seems like a reasonable restriction).\n As the result of such processing, each element in the input is annotated with a bounding box, which will be used in later pipeline stages for binning. The bounding box of a line segment is just that segment (expanded by line width in the case of strokes), but for a stroke or fill it is the union of the segments preceding it.\n Given the relatively simple nature of the state modifications, we can design an \u201calmost monoid\u201d with an almost associative binary operator. I won\u2019t give the whole structure here (it\u2019s in the code as [ element.comp]), but will sketch the highlights.\n When modeling such state manipulations, it helps to think of the state changes performed by some contiguous slice of the input, then the combination of the effects of two contiguous slices. For example, either or both slices can set the line width. If the second slice does, then at the end the line width is that value, no matter what the first slice did. If it doesn\u2019t, then the overall effect is the same as the first slice.\n The effect on the transform is even simpler, it\u2019s just multiplication of the affine transforms, already well known to be associative (but not commutative).\n Where things get slightly trickier is the accumulation of the bounding boxes. The union of bounding boxes is an associative (and commutative) operator, but we also need a couple of flags to track whether the bounding box is reset. However, in general, affine transformations and bounding boxes don\u2019t distribute perfectly; the bounding box resulting from that affine transformation of a bounding box might be larger than the bounding box of transforming the individual elements.\n  For our purposes, it\u2019s ok for the bounding box to be conservative, as it\u2019s used only for binning. If we restricted transforms to axis-aligned, or if we used a convex hull rather than bounding rectangle, then transforms would distribute perfectly and we\u2019d have a true monoid. But close enough.\n When I wrote my  prefix sum blog post, I had some idea it might be useful in 2D, but did not know at that time how central it would be. Happily, that implementation could be adapted to handle the transform and bounding box calculation with only minor changes, and it\u2019s lightning fast, as we\u2019ll see below in the performance discussion.\n Note that the previous version of piet-gpu (and piet-metal before it) required the CPU to compute the bounding box for each \u201citem.\u201d Part of the theme of the new work is to offload as much as possible to the GPU, including bounding box\n  While element processing is totally different than triangle processing in the Laine and Karras paper, binning is basically the same. The purpose of binning is fairly straightforward: divide the render target surface area into \u201cbins\u201d (256x256 pixels in this implementation), and for each bin output a list of elements that touch the bin, based on the bounding boxes as determined above.\n If you look at the code, you\u2019ll see a bunch of concern about  right_edge, which is in service of the backdrop calculation, which we\u2019ll cover in more detail below.\n The binning stage is generally similar to cudaraster, though I did refine it. Where cudaraster launches a fixed number of workgroups (designed to match the number of Streaming Multiprocessors in the hardware) and outputs a linked list of segments, one per workgroup and partition, I found that this created a significant overhead in the subsequent merge step. Thus, my design outputs a contiguous segment per  bin and partition, which allows for more parallel reading in the merge step, though it has a small overhead of potentially outputting empty segments (I suspect this is the reason Laine and Karras did not pursue the approach). In both cases, the workgroups do not need to synchronize with each other, and the elements  within an output segment are kept sorted, which reduces the burden in the subsequent merge step.\n The binning stage is also quite fast, not contributing significantly to the total render time.\n Why such large bins, or, in other words, so few of them? If binning is so fast, it might be appealing to bin all the way down to individual tiles. But the design calls for one bin per thread, so that would exceed the size of a workgroup (workgroup size is generally bounded around 1024 threads, and very large workgroups can have other performance issues). Of course, it may well still be possible to improve performance by tuning such factors; in general I used round numbers.\n  This pipeline stage was by far the most challenging to implement, both because of the grueling performance requirements and because of how much logic it needed to incorporate.\n The core of the coarse rasterizer is very similar to cudaraster. Internally it works in stages, each cycle consuming 256 elements from the bin until all elements in the bin have been processed.\n The first stage merges the bin outputs, restoring the elements to sorted order. This stage repeatedly reads chunks generated in the binning stage until 256 elements are read (or the end of the input is reached).\n  Next is the input stage, with each thread reading one element. It also compute the coverage of that element, effectively painting a 16x16 bitmap. There\u2019s special handling of backdrops as well, see below.\n  The total number of line segments is counted, and space in the output is allocated using an atomic add.\n  As in cudaraster, segments are output in a highly parallel scheme, with all output segments evenly divided between threads, so each thread has to do a small stage to find its work item.\n  The commands for a tile are then written sequentially, one tile per thread. This lets us keep track of per-tile state, and there tend to be many fewer commands than segments.\n This is called \u201ccoarse rasterization\u201d because it is sensitive to the geometry of path segments. In particular, coverage of tiles by line segments is done with a \u201cfat line rasterization\u201d algorithm:\n   A special feature of coarse rasterization for 2D vector graphics is the filling of the interior of shapes. The general approach is similar to  RAVG; when an edge crosses the top edge of a tile, a \u201cbackdrop\u201d is propagated to all tiles to the right, up to the right edge of the fill\u2019s bounding box.\n While conceptually fairly straightforward, the code to implement this efficiently covers a number of stages in the pipeline. For one, the right edge of fills must be propagated back to segments within the fill, even in early stages such as binning.\n The first right edge of each partition is recorded in the aggregate for each partition in element processing.\n  The right edge is computed for each segment in binning, and recorded in the binning output. This logic also adds segments to the bin, when they cross the top edge of a tile.\n  In the input stage of coarse rasterization, segments that cross the top edge of a tile \u201cdraw\u201d 1\u2019s into the bitmap for all tiles to the right, again up to the right edge of the fill. The sign of the crossing is also noted in a separate bitmap, but that doesn\u2019t need to be both per-element and per-tile, as it is consistent for all tiles.\n  In the output stage of coarse rasterization, bit counting operations are used to sum up the backdrop. Then, if there are any path segments in the tile, the backdrop is recorded in the path command. Otherwise, if the backdrop is nonzero, a solid color command is output.\n Basically, the correct winding number is a combination of three rules. Within a tile, a line segment causes a +1 winding number change in the region to the right of the line (sign flipped when direction is flipped). If the line crosses a vertical tile edge, an additional -1 is added to the half-tile below the crossing point. And if the line crosses a horizontal tile edge, +1 is added to all tiles to the right; this is known as \u201cbackdrop\u201d and is how tiles completely on the interior of a shape can get filled. Almost as if by magic, the combination of these three rules results in the correct winding number, the tile boundaries erased. Another presentation of this idea is given in the  RAVG paper.\n   The fine rasterization stage was almost untouched from the previous piet-gpu iteration. I was very happy with the performance of that; the problem we\u2019re trying to solve is efficient preparation of tiles for coarse rasterization.\n  The original dream for piet-gpu (and piet-metal) is that the encoding process is as light as possible, that the CPU really just uploads a representation of the scene, and the GPU processes it into a rendered texture. The new design moves even closer to this dream; in the original, the CPU was responsible for computing bounding boxes, but now the GPU takes care of that.\n Even more exciting, the string-like representation opens up a simpler approach to layers than the original piet-metal architecture: just retain the byte representation, and assemble them. In the simplest implementation, this is just memcpy CPU-side before uploading the scene buffer, but the full range of techniques for noncontiguous string representation is available. Previously, the idea was that the scene would be stored as a graph, requiring tricky memory management.\n An important special case is font rendering. The outline for a glyph can be encoded once to a byte sequence (generally on the order of a few hundred bytes), then a string of text can be assembled by interleaving these retained encodings with transform commands. In a longer term evolution, even this reference resolution might want to move to GPU as well, especially to enable texture caching, but this simpler approach should be viable as well.\n Note that at the current code checkpoint, this vision is not fully realized, as flattening is still CPU-side. Thus, a retained subgraph (particularly a font glyph) cannot be reused across a wide range of zooms. But I am confident this can be done.\n  The original design worked pretty well for some workloads, but overall had disappointing (to me) performance. Now is a good time to go into some more detail.\n To recap, the original design was a series of four kernels: graph traversal (and binning to 512x32 \u201ctilegroups\u201d), what I would now call coarse rasterization of path segments, generation of per-tile command lists (which is the rest of coarse rasterization), and fine rasterization. The main difference is the scene representation; otherwise the stages overlap a fair amount. In the older design, the CPU was responsible for encoding the graph structure, both path segments within a fill/stroke path, and also the ability to group items together.\n Overall, the older design was efficient when the number of children of a node was neither large nor small. But outside that happy medium, performance would degrade, and we\u2019ll examine why. Each of the first three kernels has a potential performance problem.\n Starting at kernel 1 (graph traversal), the fundamental problem is that each workgroup of this kernel (responsible for a 512x512 region) did its own traversal of the input graph. For a 2048x1536 target, this means 12 workgroups. Actually, that highlights another problem; this phase can become starved for parallelism, a bigger relative problem on discrete graphics than integrated. Thus, the cost of reading the input scene is multiplied by 12. In some cases, that is not in fact a serious problem; if these nodes have a lot of children (for example, are paths with a lot of path segments each), only the parent node is touched. Even better, if nodes are grouped with good spatial locality (which is likely realistic for UI workloads), culling by bounding box can eliminate much of the duplicate work. But for the specific case of lots of small objects (as might happen in a scatterplot visualization, for example), the work factor is not good.\n The second kernel has different problems depending on whether the number of children is small or large. In the former case, since each thread in a workgroup reads one child, there is poor utilization because there isn\u2019t enough work to keep the threads busy (I had a \u201cfancy k2\u201d branch which tried to pack multiple nodes together, but because of higher divergence it was a regression). In the latter case, the problem is that each workgroup (responsible for a 512x32 tilegroup) has to read  all the path segments in each path intersecting that tilegroup. So for a large complex path which touches many tilegroups, there\u2019s a lot of duplicated work reading path segments which are then discarded. On top of that, utilization was poor because of difficulty doing load balancing; the complexity of tiles varies widely, so some threads would sit idle waiting for the others in the tilegroup to complete.\n The third kernel also took a significant amount of time, generally about the same as fine rasterization. Again one of the biggest problems is poor utilization, in this case because all threads consider all items that intersect the tilegroup. In the common case where an item only touches a small fraction of the tiles within the tilegroup, lots of wasted work.\n The new design avoids many of these problems, increasing parallelism dramatically in early stages, and employing more parallel, load balanced stages in the middle. However, it is more complex and generally more heavyweight. So for workloads that avoid the performance pitfalls outlined above, the older design can still beat it.\n  Compared to the previous version, performance is mixed. It is encouraging in some ways, but not across the board, and one test is in fact a regression. Let\u2019s look at GTX 1060 first:\n  Here the timing is given in pairs, old design on the left, sort-middle on the right. These results  are encouraging, including a very appealing speedup on the paris-30k test. (Again, I should point out that this test is not a fully accurate render, as stroke styles are not applied. However, as a test of the old architecture vs the new, it is a fair test).\n   In short, no. There is much less speedup, and indeed for the paris-30k example, it has regressed. It is one of the difficult aspects of writing GPU code that different GPUs have different performance characteristics, in some cases quite significant. I haven\u2019t deeply analyzed the performance (I find it quite difficult to do so, and often wish for better tools), but suspect it might have something to do with the relatively slow performance of threadgroup shared memory on Intel.\n In all cases, the cost of coarse rasterization is significant, while element processing and binning are quite speedy.\n  Performance is generally somewhat improved over the previous version of piet-gpu, but not as much as I was hoping. Why?\n My analysis is that it\u2019s a solid implementation of the concept, but that there is a nontrivial cost to carrying an element through the pipeline fully in fully sorted order. One observation is that segments within a path need not be sorted at all, simply ascribed to the correct (path, tile position) tuple. I will be exploring that in a forthcoming blog post.\n Another important piece is missing from the curren\n......", "posttime": "2020-06-16 00:06:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fe\u5f62,middle,\u8fb9\u754c", "title": "\u4e00\u79cd\u9762\u5411\u4e8c\u7ef4\u56fe\u5f62\u7684\u6392\u5e8f\u4e2d\u95f4\u4f53\u7cfb\u7ed3\u6784", "title_en": "A sort-middle architecture for 2D graphics", "transed": 1, "url": "https://raphlinus.github.io/rust/graphics/gpu/2020/06/12/sort-middle.html", "via": "", "real_tags": ["\u56fe\u5f62", "middle", "\u8fb9\u754c"]}, {"category": "", "categoryclass": "", "imagename": "69519f440687c474080a8965432ac56d.jpeg", "infoid": 1006675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1943\u5e743\u6708\uff0cKaye Kimura\u79bb\u5f00\u4e86\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u201cManzanar\u6218\u4e89\u642c\u8fc1\u4e2d\u5fc3\u201d\uff0c\u767b\u4e0a\u4e861942\u5e74\u628a\u5979\u5e26\u5230\u90a3\u91cc\u7684\u540c\u4e00\u5217\u706b\u8f66\uff0c\u5f53\u65f6\u5bcc\u5170\u514b\u6797\u00b7D\u00b7\u7f57\u65af\u798f(Franklin D.Roosevelt)\u603b\u7edf\u628a12\u4e07\u540d\u65e5\u88d4\u7f8e\u56fd\u4eba\u9001\u8fdb\u4e86\u6218\u65f6\u76d1\u72f1\u3002\n\u5728\u5979\u7b2c\u4e00\u6b21\u4e58\u5750\u706b\u8f66\u65f6\uff0c\u6728\u6751\u6309\u7167\u519b\u65b9\u7684\u547d\u4ee4\uff0c\u5173\u4e0a\u7a97\u6237\uff0c\u653e\u4e0b\u7a97\u5e18\u3002\u8fd9\u4e00\u6b21\uff0c\u4f5c\u4e3a\u5047\u91ca\u72af\u800c\u4e0d\u662f\u56da\u72af\uff0c\u5979\u88ab\u5141\u8bb8\u51dd\u89c6\u7740\u5916\u9762\u7684\u4e16\u754c\u3002\n\u5e74\u4ec528\u5c81\u7684\u6728\u6751\u5e26\u7740\u6025\u4e8b\u524d\u5f80\u829d\u52a0\u54e5\u3002\u5979\u7684\u653f\u5e9c\u72f1\u5352\uff0c\u6218\u4e89\u642c\u8fc1\u7ba1\u7406\u5c40(WRA)\uff0c\u521a\u521a\u53d1\u5e03\u4e86\u4e00\u9879\u201c\u5de5\u4f5c\u5047\u671f\u201d\u653f\u7b56\uff0c\u8fd9\u662f\u4e00\u5f20\u5b98\u65b9\u7684\u8bb8\u53ef\u5355\uff0c\u8ba9\u5979\u5728\u5916\u9762\u201c\u6b63\u5e38\u201d\u751f\u6d3b\uff0c\u4f46\u524d\u63d0\u662f\u5979\u5fc5\u987b\u627e\u5230-\u5e76\u6301\u6709-\u5168\u804c\u5de5\u4f5c\u3002\u5979\u9700\u8981\u4e00\u4efd\u5de5\u4f5c\u6765\u4fdd\u6301\u81ea\u7531\uff0c\u800c\u5979\u5904\u5883\u7684\u964c\u751f\u611f\u8ba9\u5979\u611f\u5230\u538b\u529b\u5f88\u5927\u3002\n\u5728\u540e\u6765\u7684\u751f\u6d3b\u4e2d\uff0c\u6728\u6751(\u5316\u540d)\u63cf\u8ff0\u8bf4\uff0c\u5f53\u5979\u4e58\u5750\u706b\u8f66\u65f6\uff0c\u6709\u4e00\u79cd\u201c\u660e\u663e\u7684\u81ea\u6211\u610f\u8bc6\u201d\uff0c\u706b\u8f66\u4e0a\u6324\u6ee1\u4e86\u5f80\u8fd4\u519b\u4e8b\u57fa\u5730\u7684\u7f8e\u56fd\u5927\u5175\u3002\u58eb\u5175\u4eec\u88ab\u8bc1\u660e\u662f\u5f00\u653e\u548c\u53cb\u597d\u7684\uff0c\u4f46\u8fd9\u6bb5\u7ecf\u5386\u4ecd\u7136\u4e0d\u548c\u8c10\u3002\u201c\u6211\u4ee5\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u5728\u770b\u6211\uff0c\u201d\u6728\u6751\u544a\u8bc9\u4e00\u4f4d\u91c7\u8bbf\u8005\u3002\u5979\u4e3a\u201c\u67d0\u79cd\u4e0d\u6109\u5feb\u201d\u505a\u597d\u4e86\u51c6\u5907\u3002\u90a3\u6b21\u5750\u706b\u8f66\u662f\u5979\u51fa\u72f1\u7684\u9014\u5f84\uff0c\u4f46\u6728\u6751\u7684\u6218\u4e89\u5e76\u6ca1\u6709\u7ed3\u675f\uff0c\u800c\u4e14\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u4e5f\u4e0d\u4f1a\u7ed3\u675f\u3002\n\u65e5\u672c\u8840\u7edf\u7684\u4eba\u88ab\u76d1\u7981\u7684\u6545\u4e8b\u662f\u8033\u719f\u80fd\u8be6\u7684\u30021941\u5e74\u73cd\u73e0\u6e2f\u7206\u70b8\u4e8b\u4ef6\u540e\uff0c\u7f8e\u56fd\u5b98\u5458\u717d\u52a8\u4e86\u4e00\u79cd\u79cd\u65cf\u6b47\u65af\u5e95\u91cc\uff0c\u8ba4\u4e3a\u65e5\u88d4\u7f8e\u56fd\u4eba\u88ab\u5b9a\u4e49\u4e3a\u5fe0\u4e8e\u65e5\u672c\u7684\u5185\u654c\uff0c\u56e0\u6b64\u662f\u6218\u65f6\u7684\u56fd\u5bb6\u5b89\u5168\u98ce\u9669\u3002\u653f\u5e9c\u7279\u5de5\u56f4\u6355\u65e5\u88d4\u7f8e\u56fd\u4eba\uff0c\u5e76\u5c06\u4ed6\u4eec\u9001\u5f80\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3001\u7231\u8fbe\u8377\u5dde\u3001\u72b9\u4ed6\u5dde\u3001\u6000\u4fc4\u660e\u5dde\u3001\u79d1\u7f57\u62c9\u591a\u5dde\u3001\u4e9a\u5229\u6851\u90a3\u5dde\u548c\u963f\u80af\u8272\u5dde\u7684\u76d1\u72f1\uff0c\u5982\u679c\u6211\u4eec\u628a\u90a3\u4e9b\u88ab\u62d8\u7559\u7684\u4eba\u7b97\u4f5c\u201c\u9886\u5bfc\u4eba\u201d\uff0c\u90a3\u4e48\u56da\u7981\u7684\u5730\u7406\u8303\u56f4\u5c31\u4f1a\u5ef6\u4f38\u5230\u66f4\u591a\u7684\u5dde\u3002\u65e5\u88d4\u7f8e\u56fd\u5bb6\u5ead\u4f4f\u5728\u62e5\u6324\u3001\u7b80\u964b\u7684\u4e34\u65f6\u5bbf\u820d\u91cc\uff0c\u6709\u65f6\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u81ea\u5df1\u5b8c\u6210\u5efa\u8bbe\uff0c\u6240\u4ee5\u5f3a\u884c\u758f\u6563\u662f\u5982\u6b64\u4ed3\u4fc3\u548c\u8ba1\u5212\u4e0d\u5468\u3002\u6218\u4e89\u7684\u5927\u90e8\u5206\u65f6\u95f4\u4ed6\u4eec\u90fd\u662f\u4f5c\u4e3a\u4fd8\u864f\u5ea6\u8fc7\u7684\u3002\n\u4f46\u63a5\u4e0b\u6765\u53d1\u751f\u5728\u56da\u72af\u8eab\u4e0a\u7684\u4e8b\u60c5-\u5f53\u50cf\u6728\u6751\u8fd9\u6837\u7684\u4eba\u4e0d\u5f97\u4e0d\u5728\u8fd9\u4e2a\u56fd\u5bb6\u770b\u4e0d\u89c1\u7684\u504f\u8fdc\u89d2\u843d\u953b\u9020\u65b0\u751f\u6d3b-\u4e5f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7f8e\u56fd\u6218\u4e89\u6545\u4e8b\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u6ca1\u6709\u542c\u8bf4\u8fc7\u3002\u8fd9\u4e9b\u8f83\u5c0f\u7684\u6545\u4e8b-\u4e58\u5750\u706b\u8f66\u3001\u627e\u5de5\u4f5c\u548c\u5728\u65b0\u57ce\u5e02\u627e\u516c\u5bd3-\u4f7f\u6218\u4e89\u548c\u56fd\u5bb6\u8ba4\u540c\u7684\u53d9\u8ff0\u53d8\u5f97\u590d\u6742\u3002\nWRA\u79f0\u6728\u6751\u4e3a\u201c\u5b89\u7f6e\u8005\u201d\uff0c\u4f46\u5979\u5b9e\u9645\u4e0a\u662f\u96be\u6c11\u30021942\u5e742\u6708\u7b7e\u7f72\u7684\u7f57\u65af\u798f\u603b\u7edf\u76849066\u53f7\u884c\u653f\u547d\u4ee4\u6388\u6743\u519b\u65b9\u5c06\u65e5\u88d4\u7f8e\u56fd\u4eba\u4ece\u897f\u6d77\u5cb8\u7684\u5927\u90e8\u5206\u5730\u533a\u751a\u81f3\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u90e8\u5206\u5730\u533a\u9a71\u9010\u51fa\u53bb\u3002\u5b83\u4e00\u76f4\u6709\u6548\u5230\u6218\u4e89\u7ed3\u675f-\u6240\u4ee5\u6839\u636e\u6cd5\u5f8b\uff0c\u50cf\u6728\u6751\u8fd9\u6837\u7684\u5de5\u4f5c\u5047\u7533\u8bf7\u8005\u4e0d\u80fd\u56de\u5bb6\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u53bb\u4e1c\u90e8\uff0c\u6240\u4ee5WRA\u5b98\u5458\u5c06\u6c42\u804c\u8005\u5f15\u5411\u829d\u52a0\u54e5-\u4e00\u4e2a\u5c31\u4e1a\u673a\u4f1a\u4e30\u5bcc\u7684\u5730\u65b9\uff0c\u6b63\u5982WRA\u7684\u4e00\u9879\u7814\u7a76\u6240\u8bf4\uff0c\u65e5\u88d4\u7f8e\u56fd\u4eba\u53ef\u80fd\u4f1a\u5728\u57ce\u5e02\u533f\u540d\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u201c\u6f20\u4e0d\u5173\u5fc3\u7684\u6597\u7bf7\u201d\u4e0b\u5b89\u7136\u5ea6\u8fc7\u8fd9\u573a\u6218\u4e89\u3002\n1943\u5e741\u6708\uff0cWRA\u5728\u829d\u52a0\u54e5\u5f00\u8bbe\u4e86\u7b2c\u4e00\u4e2a\u201c\u5916\u5730\u529e\u4e8b\u5904\u201d\u30021943\u5e74\u81f31950\u5e74\u95f4\uff0c\u81f3\u5c11\u67092\u4e07\u540d\u65e5\u88d4\u7f8e\u56fd\u4eba\u79fb\u6c11\u5230\u90a3\u91cc\u3002\u6728\u6751\u662fNisei\u5148\u950b\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u662f\u4e00\u6ce2\u5e74\u8f7b\u7684\u5355\u8eab\u79fb\u6c11\u6d6a\u6f6e\uff0c\u4ed6\u4eec\u9996\u5148\u662f\u7537\u6027\uff0c\u6700\u540e\u662f\u5e74\u8f7b\u5973\u6027\uff0c\u4ed6\u4eec\u5c06\u8bd5\u6c34\uff0c\u5e76\u4e3a\u5e26\u4e0a\u7236\u6bcd\u3001\u7956\u7236\u6bcd\u548c\u5f1f\u5f1f\u59b9\u59b9\u5960\u5b9a\u8d22\u52a1\u57fa\u7840\u3002\n\u6728\u6751\u548c\u5176\u4ed6\u5341\u51e0\u4e2a\u4eba\u540c\u65f6\u79bb\u5f00\u4e86\u66fc\u624e\u7eb3\u5c14\uff0c\u5979\u7684\u5fc3\u60c5\u590d\u6742\uff1a\u5979\u5bf9\u79bb\u5f00\u5bb6\u4eba\u611f\u5230\u5bb3\u6015\u548c\u62c5\u5fe7\uff0c\u4f46\u5979\u6e34\u671b\uff0c\u751a\u81f3\u5174\u594b\uff0c\u60f3\u770b\u770b\u4e00\u4e2a\u5927\u57ce\u5e02\u80fd\u63d0\u4f9b\u4ec0\u4e48\u3002\u6765\u81ea\u897f\u96c5\u56fe\u7684\u65e5\u88d4\u7f8e\u56fd\u4eba\u5bab\u672c\u6b63\u592a\u90ce(Shotaro Frank Miyamoto)\u8bf4\uff0c\u6bcf\u4e2a\u8425\u5730\u90fd\u6d41\u4f20\u7740\u53cd\u65e5\u66b4\u529b\u7684\u6545\u4e8b\uff0c\u867d\u7136\u6ca1\u6709\u4eba\u4f1a\u8bf4\u7f8e\u56fd\u57ce\u5e02\u662f\u201c\u5b89\u5168\u7684\u201d\uff0c\u4f46\u829d\u52a0\u54e5\u81f3\u5c11\u662f\u4e00\u4e2a\u201c\u66f4\u5b89\u5168\u7684\u8d4c\u6ce8\u201d\u3002\u4ed6\u88ab\u5f3a\u884c\u5b89\u7f6e\u5230\u666e\u4e9a\u5362\u666e\u8425\u5730\uff0c\u540e\u6765\u6210\u4e3a\u7814\u7a76\u829d\u52a0\u54e5\u91cd\u65b0\u5b89\u7f6e\u95ee\u9898\u7684\u5b66\u8005\u3002\n\u4e00\u65e6\u4ed6\u4eec\u4ece\u706b\u8f66\u65c5\u884c\u4e2d\u5e78\u5b58\u4e0b\u6765\uff0c\u65e5\u88d4\u7f8e\u56fd\u4eba\u5c31\u4e0d\u5f97\u4e0d\u5728\u8fd9\u5ea7\u57ce\u5e02\u91cc\u5bfc\u822a\u3002\u4ed6\u4eec\u5fc5\u987b\u76f4\u63a5\u5411WRA\u7684\u829d\u52a0\u54e5\u529e\u4e8b\u5904\u62a5\u544a\uff0c\u767b\u8bb0\uff0c\u5e76\u5f00\u59cb\u5bfb\u627e\u5de5\u4f5c\u548c\u5c45\u4f4f\u7684\u5730\u65b9\u3002\u5f53\u4ed6\u4eec\u53d1\u73b0\u4e24\u8005\u90fd\u6709\u65f6\uff0c\u4ed6\u4eec\u5fc5\u987b\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4f20\u9012\u56de\u529e\u516c\u5ba4\uff1b\u5982\u679c\u4ed6\u4eec\u6362\u4e86\u5de5\u4f5c\u6216\u4f4f\u6240\uff0c\u4ed6\u4eec\u4e5f\u5fc5\u987b\u62a5\u544a\u8fd9\u4e00\u70b9\u3002WRA\u6709\u6743\u5728\u4efb\u4f55\u65f6\u5019\u4ee5\u5b83\u8ba4\u4e3a\u7684\u201c\u5145\u5206\u7406\u7531\u201d\u5c06\u4efb\u4f55\u4eba\u53ec\u56de\u8425\u5730\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0e\u76d1\u7981\u7684\u7406\u7531\u4e00\u6837\u6a21\u7cca\u548c\u6b66\u65ad\u7684\u5b89\u5168\u63aa\u8f9e\u3002\u829d\u52a0\u54e5\u65b0\u7684\u65e5\u88d4\u7f8e\u56fd\u5c45\u6c11\u6ca1\u6709\u88ab\u56da\u7981\uff0c\u4f46\u4ed6\u4eec\u4ecd\u7136\u88ab\u62d8\u7559\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u91cd\u5efa\u793e\u533a\u5e76\u4e0d\u5bb9\u6613\uff0c\u5c3d\u7ba1WRA\u5bf9\u829d\u52a0\u54e5\u7684\u53cb\u597d\u6001\u5ea6\u505a\u51fa\u4e86\u4fdd\u8bc1\uff0c\u4f46\u65e5\u88d4\u7f8e\u56fd\u4eba\u63cf\u8ff0\u4e86\u4e00\u79cd\u559c\u5fe7\u53c2\u534a\u7684\u6001\u5ea6\u3002\u4ed6\u4eec\u53ef\u4ee5\u4f9d\u9760\u65e5\u7f8e\u4e92\u52a9\u7ec4\u7ec7\u548c\u4e00\u4e9b\u767d\u4eba\u76df\u53cb\uff0c\u4f46\u642c\u8fc1\u5f80\u5f80\u4ee4\u4eba\u6050\u60e7\u548c\u6cae\u4e27\u3002\n\u829d\u52a0\u54e5\u662f\u4e00\u4e2a\u53c8\u5927\u53c8\u5435\u7684\u5730\u65b9\uff0c\u6218\u4e89\u7684\u55a7\u56a3\u4f7f\u5b83\u53d8\u5f97\u66f4\u5927\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u96be\u56de\u5bb6\u7684\u5730\u65b9\uff0c\u7279\u522b\u662f\u56e0\u4e3aWRA\u6307\u793a\u65e5\u88d4\u7f8e\u56fd\u96be\u6c11\u5728\u4ed6\u4eec\u4e0b\u706b\u8f66\u540e\u7acb\u5373\u9a71\u6563\u3002WRA\u4e3b\u4efbDillon S.Myer\u8b66\u544a\u8bf4\uff0c\u4e0d\u8981\u5728\u8fd9\u5ea7\u57ce\u5e02\u5236\u9020\u201c\u5c0f\u4e1c\u4eac\u201d\u3002\u4ed6\u8bbe\u60f3\u4e86\u4e00\u4e2a\u6218\u540e\u7684\u591a\u5143\u6587\u5316\u4e3b\u4e49\uff0c\u5728\u90a3\u91cc\uff0c\u79cd\u65cf\u5728\u5de5\u4f5c\u548c\u5a31\u4e50\u4e2d\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u4f46\u4ed6\u7684\u79cd\u65cf\u81ea\u7531\u4e3b\u4e49\u662f\u77ed\u89c6\u7684\uff0c\u5bf9\u88ab\u8feb\u9a71\u9010\u7684\u521b\u4f24\u4e00\u65e0\u6240\u77e5\u3002\n\u897f\u6d77\u5cb8\u7684\u65e5\u88d4\u7f8e\u56fd\u4eba\u4e0d\u5f97\u4e0d\u81ea\u5df1\u627e\u51fa\u8fd9\u4e2a\u4e2d\u897f\u90e8\u57ce\u5e02\u7684\u79cd\u65cf\u5730\u56fe\u3001\u975e\u6b63\u5f0f\u8fb9\u754c\u548c\u4e0d\u6210\u6587\u7684\u89c4\u5219\u3002\u5f53\u4ed6\u4eec\u6572\u6709\u201c\u62db\u79df\u201d\u62db\u724c\u7684\u5927\u697c\u7684\u95e8\u65f6\uff0c\u4e00\u4e9b\u4eba\u906d\u5230\u4e86\u65ad\u7136\u62d2\u7edd--\u201c\u4e0d\u51c6\u65e5\u672c\u9b3c\u5b50\uff01\u201d--\u800c\u53e6\u4e00\u4e9b\u4eba\u5219\u7b28\u624b\u7b28\u811a\u5730\u8eb2\u907f\uff1a\u516c\u5bd3\u5df2\u7ecf\u88ab\u79df\u8d70\u4e86\uff0c\u623f\u4e1c\u53ea\u662f\u5fd8\u4e86\u79fb\u8d70\u62db\u724c\u3002\u6709\u65f6\uff0c\u96be\u6c11\u57fa\u4e8e\u79cd\u65cf\u523b\u677f\u5370\u8c61\u800c\u88ab\u63a5\u53d7\uff0c\u5373\u4ed6\u4eec\u4f1a\u987a\u4ece\u3001\u5b89\u9759\u548c\u5e72\u51c0\u7684\u79df\u6237\u3002\u6709\u4e00\u4e9b\u8bc1\u636e\u8868\u660e\uff0c\u5fb7\u56fd\u8840\u7edf\u7684\u829d\u52a0\u54e5\u767d\u4eba-\u5e26\u7740\u4ed6\u4eec\u5728\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u88ab\u8bcb\u6bc1\u7684\u8bb0\u5fc6-\u613f\u610f\u79df\u7ed9\u96be\u6c11\uff0c\u5373\u4f7f\u53ea\u662f\u4f5c\u4e3a\u623f\u4e1c\u548c\u623f\u5ba2\uff0c\u4e5f\u613f\u610f\u64ae\u5408\u4e00\u4efd\u6218\u65f6\u7684\u79cd\u65cf\u534f\u8bae\u3002", "note_en": "In March 1943, Kaye Kimura left the \u201cManzanar War Relocation Center\u201d in California and boarded the same train that had brought her there in 1942, when President Franklin D. Roosevelt had sent 120,000 Japanese Americans to wartime prisons.\n During her first trip on the train, Kimura had ridden with the windows closed and the shades down, by order of the military. This time, as a parolee and not a prisoner, she was allowed to gaze at the world beyond.\n Kimura, just 28 years old, was headed to Chicago with urgent matters on her mind. Her government jailors, the War Relocation Authority (WRA), had just issued a \u201cwork leave\u201d policy, an official permission slip for her to live \u201cnormally\u201d on the outside, but only if she could find\u2014and hold\u2014full-time employment. She needed a job to remain free, and the strangeness of her predicament weighed on her.\n Later in life, Kimura (not her real name) described having a \u201cmarked feeling of self-consciousness\u201d as she rode the train, which was packed with American G.I.s riding to and from military bases. The soldiers turned out to be open and friendly, but the experience still jarred. \u201cI thought everybody was looking at me,\u201d Kimura told an interviewer. She braced herself for \u201csome sort of unpleasantness.\u201d That train ride was her route out of formal wartime imprisonment, but Kimura\u2019s war wasn\u2019t over\u2014and wouldn\u2019t end for some time.\n The story of the incarceration of people of Japanese heritage is a familiar one. After the Pearl Harbor bombing in 1941,  U.S. officials stoked a racial hysteria in which Japanese Americans were defined as an internal enemy loyal to Japan, and thus a wartime national security risk. Government agents rounded up Japanese Americans and shipped them to prisons in California, Idaho, Utah, Wyoming, Colorado, Arizona, and Arkansas, and if we include those detained as \u201cleaders,\u201d then the captivity geography extends to even more states.  Japanese American families lived in crowded, spartan, temporary quarters that they sometimes had to finish building themselves, so hastily and poorly planned was the forced evacuation. They spent much of the war as captives.\n But what happened to the prisoners next\u2014when people like Kimura had to forge new lives in unseen, far-flung corners of the country\u2014is also an important American war story, and one many of us haven\u2019t heard. These smaller stories\u2014of train rides, job searches, and apartment hunting in new cities\u2014complicate narratives of war and national identity.\n The WRA called Kimura a \u201cresettler,\u201d but she was a refugee, really. President Roosevelt\u2019s Executive Order 9066, signed in February 1942, had empowered the military to remove Japanese Americans from much of the West Coast and even part of Arizona. It remained in effect until the end of the war\u2014so by law, work leave applicants like Kimura could not go home. They could go East, though, so WRA officials pointed work-seekers to Chicago\u2014a place where jobs were plentiful, and Japanese Americans might ride out the war in urban anonymity, under \u201ca cloak of indifference,\u201d as a WRA study put it.\n  In January 1943, the WRA opened its first \u201cfield office\u201d in Chicago. At least 20,000 Japanese Americans migrated there between 1943 and 1950. Kimura was part of a Nisei vanguard, a wave of young, single migrants, first men and eventually young women, who would test the waters and lay the financial groundwork to bring parents, grandparents, and younger siblings along.\n Kimura left Manzanar at the same time as about a dozen others, and she had mixed feelings: She was scared and worried about leaving her family, but she was eager, even excited, to see what a big city could offer. Stories of anti-Japanese violence circulated in every camp, and while no one would have called an American city \u201csafe,\u201d Chicago was at least \u201ca safer bet,\u201d according to Shotaro Frank Miyamoto, a Japanese American from Seattle who was forcibly relocated to the Puyallup camp, and later became a scholar of the Chicago resettlement.\n Once they survived the train trip, Japanese Americans had to navigate the city. They had to report directly to the WRA\u2019s Chicago office, register, and start searching for a job and a place to live. When they found both, they had to relay that information back to the office; if they ever changed jobs or residences, they had to report that, too. The WRA had the right to call anyone back to camp, at any point, for what it deemed \u201csufficient reason,\u201d a security phrase just as nebulous and arbitrary as the rationale for incarceration. Chicago\u2019s new Japanese American residents were not in captivity but they were still in custody.\n It was not easy to rebuild community in such circumstances, and despite WRA assurances about Chicago\u2019s friendliness, Japanese Americans described a mixed reception. They could rely on Japanese American mutual aid groups and some white allies, but relocating was often frightening and frustrating.\n Chicago was a big, noisy place, made even bigger by the bustle of war. It was a hard place to make home, especially because the WRA directed Japanese American refugees to disperse once they got off the train. WRA director Dillon S. Myer warned against the creation of a \u201cLittle Tokyo\u201d in the city. He envisioned a postwar multiculturalism where races mingled at work and at play, but his racial liberalism was myopic, and ignorant of the trauma of forced removal.\n West Coast Japanese Americans had to figure out the Midwestern city\u2019s racial maps, informal borders, and unwritten rules on their own. When they knocked on a door of a building with a \u201cfor rent\u201d sign, some got flat-out refusals\u2014\u201cno Japs!\u201d\u2014while others encountered clumsy dodges: the apartment was already taken, and the landlord had merely forgotten to remove the sign. Sometimes refugees found acceptance, based on a racial stereotype that they would be compliant, quiet, and clean tenants. There is some evidence that white Chicagoans of German origin\u2014with memories of their own vilification during World War I\u2014were willing to rent to refugees, to broker a wartime racial accord even if only as landlord and tenant.", "posttime": "2020-06-16 00:04:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,americans,\u6728\u6751", "title": "\u65e5\u88d4\u7f8e\u56fd\u4eba\u662f\u5982\u4f55\u572820\u4e16\u7eaa40\u5e74\u4ee3\u829d\u52a0\u54e5\u5efa\u7acb\u201c\u6709\u7528\u7684\u7f8e\u56fd\u751f\u6d3b\u201d\u7684", "title_en": "How Japanese Americans Built a \u2018Useful American Life\u2019 in 1940s Chicago", "transed": 1, "url": "https://www.zocalopublicsquare.org/2020/06/03/japanese-americans-world-war-ii-manzanar-incarceration-wartime-prisons-relocation-chicago-community/ideas/essay/", "via": "", "real_tags": ["\u7f8e\u56fd", "americans", "\u6728\u6751"]}, {"category": "", "categoryclass": "", "imagename": "31aea93dc9cda9bb4a5d4a1eaba92b16.jpg", "infoid": 1006674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bc1\u4e66\u9489\u4f4f(\u7b80\u79f0\u201c\u8bc1\u4e66\u9489\u4f4f\u201d)\u662f\u4e00\u79cd\u7528\u4e8e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u6280\u672f\uff0c\u7528\u4e8e\u6dfb\u52a0\u989d\u5916\u7684\u4fdd\u62a4\u5c42\u6765\u4fdd\u62a4\u901a\u4fe1\u5b89\u5168\u3002\u4e00\u4e9b\u4eba\u8fd8\u4f7f\u7528\u8be5\u6280\u672f\u901a\u8fc7\u62e6\u622a\u4ee3\u7406\u6765\u9632\u6b62\u4eba\u4eec\u5bf9API\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\uff0c\u7136\u800c\uff0c\u540e\u4e00\u4e2a\u76ee\u6807\u5f88\u96be\u5728\u6709\u51b3\u5fc3\u7684\u9ed1\u5ba2\u9762\u524d\u5b9e\u73b0\u3002\n\u8bc1\u4e66\u56fa\u5b9a\u63d0\u4f9b\u4e86\u975e\u5e38\u9ad8\u7684\u5b89\u5168\u6027\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u9700\u8981\u4f01\u4e1a\u8003\u8651\u7684\u7f3a\u70b9\u3002\u672c\u535a\u5ba2\u89e3\u91ca\u4e86\u8bc1\u4e66\u56fa\u5b9a\u7684\u5b89\u5168\u548c\u4e1a\u52a1\u6ce8\u610f\u4e8b\u9879\uff0c\u5e76\u663e\u793a\u4e86\u6839\u636e\u5b9e\u65bd\u5b83\u7684\u7ec4\u7ec7\u7684\u9700\u8981\u53ef\u4ee5\u8fdb\u884c\u7684\u6743\u8861\u3002\n\u8bc1\u4e66\u56fa\u5b9a\u901a\u5e38\u662f\u4ee5\u5f3a\u5236\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u5347\u7ea7\u4e3a\u4ee3\u4ef7\u7684\uff0c\u5bf9\u4e8e\u77ed\u671f\u8bc1\u4e66(\u5982We\u2018s Encrypt\u63d0\u4f9b\u7684\u8bc1\u4e66)\u800c\u8a00\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u79cd\u7279\u522b\u75db\u82e6\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\u53d7\u8bc1\u4e66\u56fa\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e0e\u8f6e\u6362\u8bc1\u4e66\u7684\u8fd0\u8425\u56e2\u961f\u534f\u4f5c\u63a8\u51fa\u65b0\u7248\u672c\uff0c\u56e0\u4e3a\u5347\u7ea7\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u65f6\u95f4(\u5305\u62ecAppStore\u5ba1\u6838)-\u5426\u5219\u5c06\u51fa\u73b0\u505c\u673a\u3002\n\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u56fa\u5b9a\u7684\u9009\u9879\u4e0d\u5982\u5b8c\u5168\u8bc1\u4e66\u56fa\u5b9a\u4e25\u683c\u3002\u5b83\u9700\u8981\u7684\u7ef4\u62a4\u8f83\u5c11\uff0c\u540c\u65f6\u63d0\u4f9b\u7684\u5b89\u5168\u6027\u7565\u4f4e\uff0c\u4f46\u4ecd\u5177\u6709\u5f88\u5f3a\u7684\u5b89\u5168\u6027\u3002\n\u8981\u4e86\u89e3\u8bc1\u4e66\u9501\u5b9a\uff0c\u5fc5\u987b\u4e86\u89e3PKI\u3002\u8fd9\u65b9\u9762\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u535a\u5ba2\u662f\u7531\u6280\u672f\u7231\u597d\u8005\u63d0\u4f9b\u7684\uff1a\u9002\u7528\u4e8e\u54d1\u5df4\u7684SSL/TLS\uff0c\u7b2c3\u90e8\u5206-\u4e86\u89e3\u8bc1\u4e66\u9881\u53d1\u673a\u6784-\u4ee4\u4eba\u5c34\u5c2c\u7684\u662f\uff0c\u4ed6\u4eec\u7684\u8bc1\u4e66\u5728\u64b0\u5199\u672c\u6587\u65f6\u5df2\u7ecf\u8fc7\u671f\uff0c\u6240\u4ee5\u53ea\u9700\u9605\u8bfb\u4e0b\u9762\u7684\u5185\u5bb9\u5373\u53ef\u3002\n\u7b80\u5355\u5730\u8bf4\uff0c\u4e92\u8054\u7f51\u4e0a\u7684\u5b89\u5168\u901a\u4fe1\u662f\u901a\u8fc7TLS\u5b8c\u6210\u7684(\u4eba\u4eec\u7ecf\u5e38\u9519\u8bef\u5730\u8bf4\u6210\u201cSSL\u201d\uff0c\u5b83\u662fTLS\u7684\u524d\u8eab\uff0c\u7531\u4e8e\u5b89\u5168\u6f0f\u6d1e\u800c\u88ab\u5f03\u7528)\u3002TLS\u7684\u5b89\u5168\u4f9d\u8d56\u4e8e\u4e00\u5c0f\u90e8\u5206\u79f0\u4e3a\u8bc1\u4e66\u9881\u53d1\u673a\u6784(CA)\u7684\u7ec4\u7ec7\uff0c\u5b83\u4eec\u7684\u89d2\u8272\u662f\u9a8c\u8bc1\u8eab\u4efd\uff0c\u7136\u540e\u5411\u7f51\u7ad9\u9881\u53d1\u8bc1\u4e66\uff0c\u4ece\u800c\u5141\u8bb8\u5b83\u4eec\u4f7f\u7528TLS\u5b89\u5168\u3002\u8981\u4f7f\u8fd9\u4e00\u5207\u6b63\u5e38\u5de5\u4f5c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u548c\u53ef\u80fd\u7684\u5176\u4ed6\u8f6f\u4ef6\u63d0\u4f9b\u5546\u9700\u8981\u4ece\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u83b7\u5f97\u4e00\u5c0f\u90e8\u5206\u8bc1\u4e66-\u8fd9\u4e9b\u8bc1\u4e66\u662fTLS\u4e2d\u5176\u4ed6\u4e00\u5207\u90fd\u4f9d\u8d56\u7684\u201c\u6839\u7ea7\u201d\u8bc1\u4e66\u3002\u5f53\u60a8\u901a\u8fc7TLS\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u8be5\u7f51\u7ad9\u63d0\u4f9b\u7684\u8bc1\u4e66\u9700\u8981\u6839\u636e\u5176\u4e2d\u4e00\u4e2a\u6839\u7ea7CA\u68c0\u67e5\u5176\u7b7e\u540d\u4ee5\u9a8c\u8bc1\u5176\u6709\u6548\u6027-\u8fd9\u4f1a\u65ad\u8a00\u60a8\u6b63\u5728\u8bbf\u95ee\u60a8\u8ba4\u4e3a\u6b63\u5728\u8bbf\u95ee\u7684\u7f51\u7ad9\uff0c\u5e76\u4e14\u5047\u5b9aCA\u672a\u88ab\u653b\u7834\u3001\u64cd\u4f5c\u7cfb\u7edf/\u8f6f\u4ef6\u4f9b\u5e94\u5546\u672a\u88ab\u653b\u7834\u3001\u60a8\u6ca1\u6709\u5b89\u88c5\u5047CA\u5e76\u4e14\u60a8\u6b63\u5728\u8bbf\u95ee\u7684\u7f51\u7ad9\u5df2\u5145\u5206\u4fdd\u62a4\u5176\u79c1\u94a5\uff0c\u5219\u8be5\u7f51\u7ad9\u7684\u901a\u4fe1\u662f\u5b89\u5168\u7684\u3002\u5982\u679c\u8fd9\u4e9b\u5047\u8bbe\u4e2d\u6709\u4efb\u4f55\u4e00\u4e2a\u662f\u9519\u8bef\u7684\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8d4c\u6ce8\u90fd\u5c06\u843d\u7a7a\u3002\n\u5982\u524d\u6240\u8ff0\uff0cTLS\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u7834\u574f\uff0c\u4f46\u6700\u4e25\u91cd\u7684\u662f\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u88ab\u7834\u574f\uff0c\u56e0\u4e3a\u5b83\u5f71\u54cd\u5230\u6bcf\u4e2a\u4eba\u3002\u8fd9\u6837\u7684\u5b89\u5168\u4e8b\u4ef6\u5df2\u7ecf\u53d1\u751f\u8fc7\uff0c\u6700\u7a81\u51fa\u7684\u4f8b\u5b50\u662fDigiNotar\uff0c\u9664\u4e86CA\u88ab\u653b\u7834\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9bPKI\u5b89\u5168\u7f3a\u9677\u5f71\u54cd\u4e86\u5927\u91cf\u4eba\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u8054\u60f3SuPerfish\u4e8b\u4ef6\u3002\n\u5fc5\u987b\u5f3a\u8c03\u7684\u662f\uff0c\u5982\u679c\u4efb\u4f55\u4e00\u4e2aCA\u88ab\u653b\u7834\uff0c\u90a3\u4e48\u6240\u6709\u7684TLS\u90fd\u4f1a\u88ab\u7834\u574f\u3002\u4f60\u4e3a\u4f60\u7684\u7f51\u7ad9\u4f7f\u7528\u4e86\u4ec0\u4e48CA\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u4f60\u7684\u653b\u51fb\u8005\u4f7f\u7528\u4e86\u4ec0\u4e48CA\u3002\u6211\u89c1\u8fc7\u4e00\u4e9b\u88ab\u8ba4\u4e3a\u662f\u7cbe\u901a\u5b89\u5168\u7684\u5927\u7ec4\u7ec7\uff0c\u4ed6\u4eec\u7684\u653f\u7b56\u662f\u53ea\u4ece\u4ed6\u4eec\u6700\u4fe1\u4efb\u7684CA\u5b50\u96c6\u83b7\u5f97\u8bc1\u4e66-\u4ed6\u4eec\u5b8c\u5168\u5ffd\u7565\u4e86\u4e00\u70b9\uff0c\u5373\u4ed6\u4eec\u4fe1\u4efb\u7684CA\u5e76\u4e0d\u91cd\u8981\uff1aPKI\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u6211\u4eec\u90fd\u4f9d\u8d56\u4e8e\u6bcf\u4e2aCA\u90fd\u4e0d\u4f1a\u88ab\u653b\u7834\u3002\u5728\u672c\u535a\u5ba2\u7684\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u8fd9\u6837\u7684\u653f\u7b56\u6709\u610f\u4e49\u7684\u4e00\u4e2a\u573a\u666f\uff1a\u7136\u800c\uff0c\u6211\u8fd8\u6ca1\u6709\u770b\u5230\u5b83\u5728\u5b9e\u8df5\u4e2d\u5f97\u5230\u5b9e\u65bd\u3002(\u6ce8\uff1a\u516c\u94a5\u57fa\u7840\u8bbe\u65bd\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u6211\u4eec\u90fd\u4f9d\u8d56\u4e8e\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u4e0d\u4f1a\u88ab\u653b\u7834\u3002)\u5728\u672c\u535a\u5ba2\u7684\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u8fd9\u6837\u7684\u653f\u7b56\u6709\u610f\u4e49\u7684\u4e00\u4e2a\u573a\u666f\uff1a\u7136\u800c\uff0c\u6211\u8fd8\u6ca1\u6709\u770b\u5230\u5b83\u5728\u5b9e\u8df5\u4e2d\u5f97\u5230\u5b9e\u65bd\u3002\n\u6bcf\u4e2aCA\u90fd\u9700\u8981\u5b8c\u5168\u5b89\u5168\u624d\u80fd\u4f7fPKI\u5de5\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e9b\u4eba\u4e0d\u4fe1\u4efbPKI\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u7136\u800c\uff0c\u8fd9\u5c31\u662f\u8bc1\u4e66\u9489\u4f4f\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u5730\u65b9\uff1a\u4f7f\u7528\u5b83\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4e3a\u4e86\u5f25\u8865PKI\u7684\u7f3a\u70b9\u3002\u8bc1\u4e66\u56fa\u5b9a\u7684\u6982\u5ff5\u662f\u4f7f\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u53ea\u4fe1\u4efb\u4e0e\u5176\u901a\u4fe1\u7684\u7f51\u7ad9\u4e0a\u4f7f\u7528\u7684\u786e\u5207\u8bc1\u4e66\uff0c\u4ece\u800c\u4e0d\u518d\u4f9d\u8d56CA\u7684\u5b89\u5168\u6027\u3002\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5(\u7a0d\u540e\u5c06\u63d0\u5230\u5176\u4ed6\u66f4\u5b9e\u7528\u7684\u65b9\u6cd5)\u662f\u5728\u5f00\u53d1\u671f\u95f4\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6e90\u6587\u4ef6\u4e2d\u63d0\u4f9b\u786e\u5207\u7684\u8bc1\u4e66(\u6216\u5176\u52a0\u5bc6\u6563\u5217)\uff0c\u5e76\u7f16\u5199\u4ee3\u7801\u6765\u9a8c\u8bc1\u6b64\u8bc1\u4e66\u4e0e\u7f51\u7ad9\u5728TLS\u901a\u4fe1\u7684\u521d\u59cb\u9636\u6bb5\u53d1\u9001\u7684\u5185\u5bb9\u662f\u5426\u5339\u914d\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5b8c\u5168\u5339\u914d\uff0c\u5219\u62d2\u7edd\u901a\u4fe1\u5e76\u4e0d\u7ee7\u7eed\u3002\u8fd9\u63d0\u4f9b\u4e86\u975e\u5e38\u5f3a\u5927\u7684\u5b89\u5168\u6027\uff0c\u4f46\u5b83\u786e\u5b9e\u4f34\u968f\u7740\u4e00\u4e9b\u6f5c\u5728\u7684\u9677\u9631\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u5bf9\u6b64\u8fdb\u884c\u89e3\u91ca\u3002\n\u6709\u4e9b\u4eba\u4f7f\u7528\u8bc1\u4e66\u9489\u4f4f\u8fd8\u6709\u7b2c\u4e8c\u4e2a\u539f\u56e0\uff0c\u90a3\u5c31\u662f\u9632\u6b62\u4eba\u4eec\u901a\u8fc7\u62e6\u622a\u4ee3\u7406\u5bf9\u4f60\u7684\u79fb\u52a8\u5e94\u7528\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3002\u6ca1\u6709\u8bc1\u4e66\u56fa\u5b9a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u4f17\u6240\u5468\u77e5\u7684\u6280\u672f\u67e5\u770b\u4ed6\u4eec\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1(\u53c2\u89c1\u6b64\u5904\u548c\u6b64\u5904)\u3002\u8fd9\u5e76\u4e0d\u662f\u7834\u574fTLS-\u5176\u4ed6\u4eba\u65e0\u6cd5\u68c0\u67e5\u60a8\u7684\u901a\u4fe1\uff0c\u53ea\u6709\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u60a8\u7684\u79fb\u52a8\u8bbe\u5907\u4e0a\u5b89\u88c5\u62e6\u622a\u4ee3\u7406\u8bc1\u4e66\u6765\u68c0\u67e5\u60a8\u81ea\u5df1\u7684\u901a\u4fe1\u3002\u901a\u8fc7\u6dfb\u52a0\u64cd\u4f5c\u7cfb\u7edf\u4fe1\u4efb\u4e14\u60a8\u77e5\u9053\u79c1\u94a5\u800c\u5176\u4ed6\u4eba\u90fd\u4e0d\u77e5\u9053\u7684\u65b0\u8bc1\u4e66\uff0c\u60a8\u5c31\u53ef\u4ee5\u7aa5\u63a2TLS\u901a\u4fe1\uff0c\u4f46\u5176\u4ed6\u4eba\u90fd\u4e0d\u80fd\u3002\u5982\u679c\u7531\u4e8e\u5e94\u7528\u7a0b\u5e8f\u505c\u6b62\u62e6\u622a\u800c\u56fa\u5b9a\u4e86\u8bc1\u4e66\uff0c\u5219\u8fd9\u4e0d\u4f1a\u76f4\u63a5\u8d77\u4f5c\u7528-\u5b83\u4e0d\u4fe1\u4efb\u65b0\u5b89\u88c5\u7684\u8bc1\u4e66\uff0c\u800c\u662f\u53ea\u4fe1\u4efb\u56fa\u5b9a\u7684\u786e\u5207\u8bc1\u4e66\u3002\n\u7136\u800c\uff0c\u8fd9\u79cd\u9632\u5fa1\u7684\u6548\u679c\u6709\u9650\uff0c\u56e0\u4e3a\u53ef\u4ee5\u4f7f\u7528\u4f17\u6240\u5468\u77e5\u7684\u6280\u672f\u7ed5\u8fc7\u8bc1\u4e66\u56fa\u5b9a(\u8bf7\u53c2\u89c1\u6b64\u5904\u548c\u6b64\u5904)\uff0c\u800c\u4e14\u7406\u89e3API\u5de5\u4f5c\u539f\u7406\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8001\u5f0f\u7684\u4e8c\u8fdb\u5236\u9006\u5411\u5de5\u7a0b\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u9632\u6b62\u653b\u51fb\u8005\u7406\u89e3\u60a8\u7684API\uff0c\u60a8\u8fd8\u9700\u8981\u6df7\u6dc6\u548c\u8d8a\u72f1/\u6839\u68c0\u6d4b\u3002\u8fd9\u6837\u7684\u9632\u5fa1\u53ef\u4ee5\u963b\u6b62\u8bb8\u591a\u9ed1\u5ba2\uff0c\u4f46\u4e00\u4e2a\u6280\u672f\u5a34\u719f\u3001\u610f\u5fd7\u575a\u5b9a\u3001\u62e5\u6709\u5927\u91cf\u7a7a\u95f2\u65f6\u95f4\u7684\u9ed1\u5ba2\u6700\u7ec8\u53ef\u4ee5\u6210\u529f\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u8fdb\u884c\u8bc1\u4e66\u56fa\u5b9a\u4ee5\u9632\u6b62\u6f5c\u5728\u7684PKI\u4e0d\u5b89\u5168\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u8bc1\u4e66\u56fa\u5b9a\u5e76\u4e0d\u80fd\u963b\u6b62\u4eba\u4eec\u7406\u89e3\u60a8\u7684API-\u5b83\u53ea\u4f1a\u51cf\u6162\u4f18\u79c0\u7684\u9ed1\u5ba2\u7684\u901f\u5ea6\u3002\u5728\u672c\u535a\u5ba2\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u4f7f\u7528\u8bc1\u4e66\u9501\u5b9a\u6765\u5904\u7406\u6f5c\u5728\u7684PKI\u95ee\u9898\u3002\u964d\u4f4e\u53cd\u5411\u5de5\u7a0b\u901f\u5ea6\u7684\u8bc1\u4e66\u9501\u5b9a\u4e0d\u5728\u672c\u535a\u5ba2\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002\n\u64cd\u4f5c\u7cfb\u7edf\u4f9b\u5e94\u5546/\u79fb\u52a8\u8bbe\u5907\u5236\u9020\u5546\u5bf9\u786e\u4fdd\u5b89\u5168\u6709\u7740\u6d53\u539a\u7684\u5174\u8da3\uff1a\u4eba\u4eec\u4fe1\u4efb\u4ed6\u4eec\u7684\u4ea7\u54c1\u5bf9\u4ed6\u4eec\u7684\u4e1a\u52a1\u6210\u529f\u975e\u5e38\u91cd\u8981\u3002\u56e0\u6b64\uff0c\u5f53CA\u4e0d\u518d\u53d7\u4fe1\u4efb\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5411\u5ba2\u6237\u63a8\u9001\u5b89\u5168\u66f4\u65b0\u3002\u4f8b\u5982\uff0c\u5f53DigiNotar\u53d7\u5230\u653b\u51fb\u65f6\uff0c\u82f9\u679c\u53d1\u5e03\u4e86\u66f4\u65b0\u3002\u6d4f\u89c8\u5668\u5236\u9020\u5546\u4e5f\u8fdb\u884c\u4e86\u7c7b\u4f3c\u7684\u66f4\u65b0\uff0c\u6b63\u5982\u8fd9\u91cc\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\n\u56e0\u6b64\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e9b\u4fdd\u8bc1\uff0c\u5373\u4f7f\u6ca1\u6709\u8bc1\u4e66\u56fa\u5b9a\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u62e5\u6709\u826f\u597d\u7684\u5b89\u5168\u6027\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u9677\u9631\uff1a\n\u7528\u6237\u5e76\u4e0d\u603b\u662f\u53ca\u65f6\u5b89\u88c5\u4ed6\u4eec\u7684\u5b89\u5168\u66f4\u65b0\uff0c\u56e0\u6b64\u5728\u53ef\u80fd\u5229\u7528\u6f0f\u6d1e\u65f6\u5b58\u5728\u5dee\u8ddd\u3002\n\u8fd9\u53ea\u9002\u7528\u4e8e\u5df2\u77e5\u7684\u5371\u5bb3\uff0c\u800c\u8bc1\u4e66\u9501\u5b9a\u5c06\u9632\u6b62\u672a\u77e5\u7684\u5371\u5bb3\u3002\nAndroid\u7684\u60c5\u51b5\u5c31\u4e0d\u90a3\u4e48\u4ee4\u4eba\u653e\u5fc3\u4e86\uff0c\u56e0\u4e3a\u5b89\u5168\u66f4\u65b0\u662f\u7531\u8c37\u6b4c\u901a\u8fc7\u79fb\u52a8\u8bbe\u5907\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\uff0c\u800c\u4f9b\u5e94\u5546\u5728\u5411\u7528\u6237\u63a8\u9001\u5b89\u5168\u66f4\u65b0\u65f6\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u8fc5\u901f\u3002\n\u4e0e(3)\u76f8\u5173\u7684\u662f\uff0c\u8c37\u6b4c\u786e\u5b9e\u4e3a\u5e94\u7528\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u901a\u8fc7\u4f7f\u7528API installIfNeededAsync()\u6216installIfNeededAsync()\u6765\u4fdd\u62a4\u5ba2\u6237\u7aef\u514d\u53d7\u53d1\u73b0\u7684TLS\u6f0f\u6d1e\u7684\u653b\u51fb\uff0c\u800c\u65e0\u9700\u4f9d\u8d56\u4f9b\u5e94\u5546\u7684\u5b89\u5168\u66f4\u65b0\u3002*\u4ece\u6587\u6863\u4e2d\u6211\u4e0d\u6e05\u695a\u8fd9\u662f\u53ea\u4fee\u590d\u4e86TLS\u5b9e\u73b0\u9519\u8bef\uff0c\u8fd8\u662f\u8fd8\u66f4\u65b0\u4e86\u8bbe\u5907\u4e0a\u7684\u6839\u8bc1\u4e66\u3002\n\u56e0\u6b64\uff0c\u867d\u7136\u5b58\u5728\u4e00\u4e9b\u540e\u5907\u95ee\u9898\uff0c\u4f46\u4f7f\u7528\u8bc1\u4e66\u56fa\u5b9a\u7b49\u6280\u672f\u7edd\u5bf9\u6709\u63d0\u9ad8\u5b89\u5168\u6027\u7684\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bc1\u4e66\u56fa\u5b9a\u6709\u4e00\u4e2a\u5b9e\u9645\u7684\u7f3a\u70b9-\u5f53\u8bc1\u4e66\u66f4\u6539\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u4e2d\u65ad\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u66f4\u591a\u5730\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u5bf9\u79fb\u52a8\u5b89\u5168\u7684\u8981\u6c42\u5982\u6b64\u4e4b\u9ad8\uff0c\u4f46\u76f8\u5e94\u7684Web\u6d4f\u89c8\u5668\u5b89\u5168\u53c8\u5982\u4f55\u5462\uff1f\u6211\u4eec\u62e5\u6709\u7c7b\u4f3c\u63a7\u4ef6\u7684\u80fd\u529b\u53d7\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u9650\u5236\uff0c\u6240\u4ee5\u4eba\u4eec\u53ef\u80fd\u4f1a\u89c9\u5f97\u6211\u4eec\u5bf9\u5f85\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6bd4\u5bf9\u5f85\u6d4f\u89c8\u5668\u66f4\u795e\u5723\u3002\n2015\u5e74\uff0c\u5b89\u5168\u754c\u8bd5\u56fe\u901a\u8fc7\u5411\u7f51\u7edc\u6d4f\u89c8\u5668\u5f15\u5165\u7c7b\u4f3c\u7684\u6982\u5ff5\u6765\u5f25\u8865\u79fb\u52a8\u5b89\u5168\u6307\u5bfc\u548c\u7f51\u7edc\u6d4f\u89c8\u5668\u5b89\u5168\u80fd\u529b\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6dfb\u52a0\u4e86\u65b0\u7684HTTP\u62a5\u5934\uff0c\u8be5\u62a5\u5934\u5141\u8bb8\u7f51\u7ad9\u6307\u793a\u6d4f\u89c8\u5668\u56fa\u5b9a\u5176\u8bc1\u4e66\uff0c\u56e0\u6b64\u6d4f\u89c8\u5668\u5c06\u4e0d\u63a5\u53d7\u6765\u81ea\u8be5\u7279\u5b9a\u7f51\u7ad9\u7684\u4efb\u4f55\u5176\u4ed6\u8bc1\u4e66(\u5728\u62a5\u5934\u4e2d\u6307\u5b9a\u7684\u6709\u6548\u671f\u5185)\u3002\u8fd9\u79f0\u4e3aHTTP\u516c\u94a5\u9501\u5b9a(HPKP)\u3002\n\u6ca1\u8fc7\u591a\u4e45\uff0c\u5b89\u5168\u754c\u5c31\u53d1\u73b0\u4e86\u8fd9\u9879\u63d0\u8bae\u7684\u95ee\u9898\u3002\u5728\u4e24\u5e74\u5185\uff0cHPKP\u7684\u4e00\u4f4d\u4f5c\u8005\u5ba3\u5e03\u7531\u4e8e\u4e00\u4e9b\u4ee5\u524d\u6ca1\u6709\u9884\u6599\u5230\u7684\u95ee\u9898\u800c\u6253\u7b97\u5f03\u7528\u5b83\u3002\u5f03\u7528\u7684\u539f\u56e0\u5305\u62ec\u96be\u4ee5\u9009\u62e9\u4e00\u5957\u4fdd\u8bc1\u6709\u6548\u7684\u5bc6\u7801\u3001\u5982\u679c\u5bc6\u7801\u9519\u8bef\u4f1a\u628a\u7528\u6237\u9501\u5728\u95e8\u5916\u7684\u98ce\u9669\uff0c\u4ee5\u53ca\u653b\u51fb\u8005\u82e5\u80fd\u53d6\u5f97\u9519\u8bef\u7684\u8bc1\u4e66\u4fbf\u4f1a\u6ee5\u7528HKPK\u7684\u98ce\u9669\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u9501\u5b9a\u7528\u6237\u7684\u771f\u5b9e\u793a\u4f8b\u3002\u4f7f\u7528\u5f03\u7528\u65f6\uff0c\u5efa\u8bae\u66ff\u6362\u4e3a\uff1aExpect-CT\u6807\u5934\u3002Expect-CT\u6807\u9898\u5728\u6b64\u6b63\u5f0f\u8bb0\u5f55\u3002\nExpect-CT\u4e0d\u5982\u8bc1\u4e66\u9489\u4f4f\u5f3a\u5927\uff0c\u4f46\u4f7f\u7528\u8d77\u6765\u66f4\u5b89\u5168(\u5c3d\u7ba1\u5982\u6b64\uff0c\u4f5c\u8005\u5efa\u8bae\u8c28\u614e\u4f7f\u7528)\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u662f\u7528\u6765\u6307\u793a\u6d4f\u89c8\u5668\u7f51\u7ad9\u5fc5\u987b\u62e5\u6709\u5df2\u53d1\u5e03\u7684\u8bc1\u4e66\uff0c\u4ee5\u7b26\u5408\u8c37\u6b4c\u7684\u8bc1\u4e66\u900f\u660e\u5ea6\u52aa\u529b\u3002\u901a\u8fc7\u67d0\u4e9b\u914d\u7f6e\uff0c\u53ef\u4ee5\u6307\u793a\u6d4f\u89c8\u5668\u5728\u7ad9\u70b9\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\u963b\u6b62\u8fde\u63a5\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6076\u610f\u884c\u4e3a\u8005\u79d8\u5bc6\u83b7\u5f97\u4e86\u4e00\u4e2a\u7f51\u7ad9\u7684\u672a\u53d1\u5e03\u7684\u3001\u672a\u88ab\u8d77\u8bc9\u7684\u8bc1\u4e66\uff0c\u4ed6\u5c06\u4e0d\u80fd\u5728\u8be5\u7f51\u7ad9\u4e0a\u6ee5\u7528\u8be5\u8bc1\u4e66\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6076\u610f\u884c\u4e3a\u8005\u6ee5\u7528\u5931\u8d25\u7684\u8bc1\u4e66\uff0c\u5b83\u9700\u8981\u662f\u4e00\u4e2a\u5df2\u53d1\u5e03\u7684\u8bc1\u4e66\uff01\u4f46\u5e0c\u671b\u8fd9\u4e9b\u6ee5\u7528\u53ef\u4ee5\u901a\u8fc7\u8bc1\u4e66\u540a\u9500\u6765\u6355\u83b7(\u4e5f\u53ef\u80fd\u4e0d\u4f1a)\u3002\n\u5728\u64b0\u5199\u672c\u535a\u5ba2\u65f6\uff0c\u8bb8\u591a\u6d4f\u89c8\u5668(\u5305\u62ecFirefox)\u90fd\u4e0d\u652f\u6301Expect-CT\u3002\u8fd9\u662f\u671d\u7740\u4fee\u590dPKI\u7f3a\u70b9\u8fc8\u51fa\u7684\u4e00\u5927\u6b65\uff0c\u4f46\u7565\u843d\u540e\u4e8e\u79fb\u52a8\u8bc1\u4e66\u7ed1\u5b9a\u6240\u83b7\u5f97\u7684\u5b89\u5168\u6027\u3002\nInfinium\u516c\u53f8\u5df2\u7ecf\u4e3a\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e86\u5173\u4e8e\u5982\u4f55\u5b9e\u73b0\u8bc1\u4e66\u56fa\u5b9a\u7684\u4f18\u79c0\u535a\u5ba2\u3002\u8fd9\u4e9b\u6307\u5357\u53ef\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230\uff1a\n\u9700\u8981\u5f3a\u8c03\u7684\u8bc1\u4e66\u56fa\u5b9a\u7684\u4e00\u4e2a\u5173\u952e\u7f3a\u70b9\u662f\uff0c\u66f4\u6539\u8bc1\u4e66\u610f\u5473\u7740\u60a8\u9700\u8981\u53d1\u5e03\u65b0\u7248\u672c\u7684\u5e94\u7528\u7a0b\u5e8f(\u4e0b\u9762\u5c06\u8ba8\u8bba\u4e00\u4e2a\u4f8b\u5916)\uff0c\u5e76\u5f3a\u5236\u5c06\u7528\u6237\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u3002\u8fd9\u662f\u56e0\u4e3a\u5e94\u7528\u7a0b\u5e8f\u53ea\u4f7f\u7528\u56fa\u5b9a\u7684\u786e\u5207\u8bc1\u4e66-\u5982\u679c\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u8bc1\u4e66\uff0c\u901a\u4fe1\u4e2d\u65ad\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u77ed\u671f\u8bc1\u4e66\uff0c\u6bd4\u5982\u201c\u8ba9\u6211\u4eec\u52a0\u5bc6\u201d\u4e2d\u7684\u8bc1\u4e66\uff0c\u90a3\u4e48\u8fd9\u9700\u8981\u9891\u7e41\u7684\u7ef4\u62a4\uff0c\u5e76\u4e14\u4e0d\u4f1a\u7ed9\u60a8\u5e26\u6765\u4ee4\u4eba\u6109\u5feb\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\u53e6\u4e00\u70b9\u662f\uff0c\u8bc1\u4e66\u7684\u8f6e\u6362\u5c06\u9700\u8981\u4e0e\u66f4\u65b0\u540e\u7684APP\u7684\u53d1\u5e03\u8fdb\u884c\u534f\u8c03\uff0c\u4ee5\u907f\u514d\u505c\u673a\u3002\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u56e2\u961f\u9700\u8981\u8db3\u591f\u7684\u63d0\u524d\u901a\u77e5\uff0c\u624d\u80fd\u7528\u65b0\u8bc1\u4e66\u66f4\u65b0APP\uff0c\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u548c\u5ba1\u6838\uff0c\u5e76\u8ba9\u5176\u901a\u8fc7App Store\u5ba1\u6838\uff0c\u5426\u5219\u7528\u6237\u53ef\u80fd\u4f1a\u88ab\u9501\u5b9a\u4e00\u6bb5\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\uff1a\u6211\u4eb2\u773c\u76ee\u7779\u4e86\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\uff0c\u800c\u4f01\u4e1a\u5e76\u4e0d\u9ad8\u5174\u3002\n\u4e0a\u9762\u63d0\u5230\u7684\u4f8b\u5916\u662f\uff0c\u5982\u679c\u53ea\u56fa\u5b9a\u4e86\u516c\u94a5(\u4e0e\u5b8c\u6574\u8bc1\u4e66\u76f8\u53cd)\uff0c\u90a3\u4e48\u53ea\u8981\u5728\u65b0\u8bc1\u4e66\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u516c\u94a5\uff0c\u5c31\u53ef\u4ee5\u5728\u4e0d\u53d1\u5e03\u65b0\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\u8f6e\u6362\u8bc1\u4e66\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u60a8\u5728\u8bc1\u4e66\u8fc7\u671f\u65f6\u66f4\u6539\u8bc1\u4e66\uff0c\u4f46\u4f7f\u7528\u4e0e\u4ee5\u524d\u76f8\u540c\u7684\u52a0\u5bc6\u5bc6\u94a5\u3002\u8fd9\u4f1a\u5e26\u6765\u66f4\u53cb\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4f46\u5b83\u8981\u6c42\u7ba1\u7406\u8bc1\u4e66\u7684\u4eba\u5458(\u901a\u5e38\u662f\u64cd\u4f5c\u56e2\u961f)\u9075\u5faa\u5f00\u53d1\u56e2\u961f\u7684\u8981\u6c42\u3002\u5f53\u7136\uff0c\u5982\u679c\u6709\u4efb\u4f55\u5173\u952e\u7684\u53d8\u5316\uff0c\u9700\u8981\u53d1\u5e03\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u5347\u7ea7\u3002\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u9009\u9879\u63d0\u4f9b\u7684\u5b89\u5168\u6027\u7565\u4f4e\u4e8e\u5b8c\u6574\u8bc1\u4e66\u56fa\u5b9a\uff0c\u4f46\u66f4\u6709\u53ef\u80fd\u907f\u514d\u9700\u8981\u53d1\u5e03\u65b0\u5e94\u7528\u7a0b\u5e8f\u5e76\u5f3a\u5236\u5347\u7ea7\u7528\u6237\u2026\u7684\u95ee\u9898\u3002\n\u4e3a\u4e86\u6d88\u9664\u5728\u53d1\u5e03\u65b0\u8bc1\u4e66\u65f6\u5347\u7ea7\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\uff0c\u4f46\u4ecd\u7136\u5e0c\u671b\u83b7\u5f97\u6bd4TLS\u66f4\u597d\u7684\u5b89\u5168\u6027\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u80fd\u56fa\u5b9a\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u7684\u516c\u94a5\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9664\u4e86\u5b89\u5168\u6240\u9700\u7684\u6240\u6709\u5e38\u89c4\u8bc1\u4e66\u68c0\u67e5\u4e4b\u5916\uff0c\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u5c06\u53ea\u63a5\u53d7\u7531\u60a8\u5141\u8bb8\u7684\u7279\u5b9aCA(\u6216\u591a\u4e2aCA)\u7b7e\u540d\u7684\u8bc1\u4e66\uff0c\u800c\u4e0d\u63a5\u53d7\u5176\u4ed6CA\u7b7e\u540d\u7684\u8bc1\u4e66\u3002\n\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u4e0a\u9762\u5173\u4e8ePKI\u95ee\u9898\u7684\u8ba8\u8bba\uff1a\u5982\u679c\u4efb\u4f55CA\u88ab\u653b\u7834\uff0c\u90a3\u4e48\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u53d8\u5f97\u6613\u53d7\u653b\u51fb\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u56fa\u5b9a\u6211\u4eec\u4fe1\u4efb\u7684\u4e00\u4e2a\u6216\u591a\u4e2aCA\u7684\u8bc1\u4e66\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u6709\u8fd9\u79cd\u98ce\u9669\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u4fe1\u4efb\u7684\u786e\u5207CA\u9700\u8981\u53d7\u5230\u635f\u5bb3\uff0c\u624d\u80fd\u4f7f\u6211\u4eec\u53d8\u5f97\u8106\u5f31\u3002\n\u8fd9\u4e0d\u50cf\u5b8c\u5168\u8bc1\u4e66\u9501\u5b9a\u90a3\u6837\u5f3a\u5927\uff0c\u56e0\u4e3a\u5982\u679c\u4fe1\u4efb\u94fe\u4e2d\u7684\u4e2d\u95f4\u5bc6\u94a5\u53d7\u635f\uff0c\u90a3\u4e48\u60a8\u4ecd\u7136\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3002\u4f46\u662f\uff0c\u5b83\u6bd4\u4ec5\u4f7f\u7528TLS\u8981\u597d\uff0c\u56e0\u4e3a\u73b0\u5728\u60a8\u4e0d\u4f9d\u8d56\u4e8e\u6240\u6709CA\u90fd\u662f\u5b89\u5168\u7684\uff1a\u76f8\u53cd\uff0c\u60a8\u53ea\u4f9d\u8d56\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u4e00\u4e2a\u6216\u591a\u4e2aCA\u662f\u5b89\u5168\u7684\u3002\n\u4f7f\u7528\u6b64\u65b9\u6cd5\u65f6\uff0c\u4ec5\u5f53\u60a8\u66f4\u6539CA\u6216CA\u66f4\u6539\u5176\u516c\u94a5\u65f6\uff0c\u624d\u9700\u8981\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u7684\u516c\u53f8\u6709\u9650\u5236CA\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u9501\u5b9a\u8fd9\u4e9bCA\u7684\u516c\u94a5\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u5728\u5f88\u957f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u90fd\u4e0d\u9700\u8981\u62c5\u5fc3\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u6216\u5f3a\u5236\u5347\u7ea7\u3002\u8fd9\u5bf9\u90a3\u4e9b\u4f7f\u7528\u77ed\u671f\u8bc1\u4e66\u7684\u4eba\u7279\u522b\u6709\u5438\u5f15\u529b\u3002", "note_en": "Certificate pinning (\u201ccert pinning\u201d for short) is a technique used for mobile applications to add an extra layer of protection to secure communications. Some people additionally use the technique to prevent people from reverse engineering APIs via intercepting proxies, however this latter objective is hard to achieve against a determined hacker.\n Certificate pinning offers very high security, but it does come with some downsides that need to be considered by the business. This blog explains the security and business considerations for certificate pinning, and shows the trade-offs that can be made according to the need of the organisation implementing it.\n  Certificate pinning typically comes at the cost of forced mobile app upgrades, which can be a particularly painful user experience for short-live certificates such as those provided by  Let\u2019s Encrypt\n Apps that are cert pinned need to roll out new versions in coordination with operations teams that rotate certificates because upgrading an app requires time (including AppStore review) \u2014 otherwise there will be downtime\n The option of Certificate Authority Pinning is less strict than full Certificate Pinning. It requires less maintenance while offering slightly less but still strong security\n  In order to understand certificate pinning, one must understand PKI. An excellent blog on this is provided by Technophile:  SSL/TLS for dummies part 3 \u2013 Understanding Certificate Authority \u2014 embarrassingly, their certificate is expired at the time of writing, so just read below.\n The short summary is that secure communication over the internet is done via TLS (often people wrongly say \u201cSSL\u201d, which was a predecessor of TLS that was deprecated due to security weaknesses). The security of TLS depends upon a small set of organisations called certificate authorities (CAs), whose role is to verify the identity and then issue certificates to websites, which allow them to use TLS security. To make this all work, operating systems and potentially other software providers need to be supplied with a small set of certificates from the certificate authorities \u2014 these certificates are the \u201croot level\u201d certificates that the everything else in TLS depends upon. When you visit a website via TLS, the certificate provided by that website needs its signature checked against one of the root level CAs to verify its validity \u2014 this asserts that you are visiting the website that you think you are visiting and communication is secure to that website, assuming the CAs have not been breached and the OS/software vendor has not been breached and you do not have a bogus CA installed and the website you are visiting has adequately protected its private cryptographic keys. If any of those assumptions are wrong, all bets are off.\n As mentioned, there are many ways that TLS can break, but the most severe would be if a certificate authority is breached since it affects everybody. Such security incidents have happened, the most prominent example being  DigiNotar.\u00a0 Less than having a CA breach, there are other examples where PKI security shortcomings have affected a large number of people, such as the  Lenovo Superfish incident.\n It must be emphasised that if any single CA is breached, then all of TLS breaks. It doesn\u2019t matter what CA you used for your website, it only matters what CA your attacker uses. I\u2019ve seen major organisations that are supposed to be security savvy having polices of only getting certificates from a subset of CAs that they trust the most \u2014 they entirely miss the point that the CAs they trust don\u2019t matter: the design of PKI means we all depend upon every single one of them not being breached.\u00a0 At the end of this blog, we will show there is one scenario that can such policies meaningful: however I have yet to see it implemented in practice.\n The fact that every CA needs to be completely secure for PKI to work is one reason that some people do not trust PKI. However, this is where certificate pinning comes to the rescue for mobile apps: the main reason to use it is to make up for the shortcoming of PKI. The concept of certificate pinning is to make the mobile app only trust the exact certificate that is used on the website that it is communicating with, and thus no longer depend upon the security of CAs. One way to implement this (other, more practical ways will be mentioned later) is to either provide the exact certificate (or else the cryptographic hash of it) in the mobile app source files during development and write code that will verify that this certificate matches what the website is sending during the initial stages of the TLS communication. If there is not an exact match, then reject the communications and do not proceed. This provides very strong security, but it does come with some potential gotchas that we will explain later.\n There is a second reason why  some people use certificate pinning, which is to prevent people from reverse engineering your mobile app via an intercepting proxy. Without certificate pinning, anybody can view the communications between their mobile app and the server using well known techniques (see  here and  here). \u00a0 This is not breaking TLS \u2014 other people cannot inspect your communications, only you can inspect your own communications by installing an intercepting proxy certificate on your mobile device. By adding a new certificate that the OS trusts and for which you know the private key and nobody else does, you have made it so you can snoop on the TLS communications but nobody else can. This does not directly work if the certificate is pinned because the application stops the interception \u2014 it does not trust the newly installed certificate, but instead only trusts the exact certificate that is pinned.\n However, this defence has limited efficacy because it is possible to bypass certificate pinning using well known techniques (see  here and  here), and because another approach to understanding how APIs work is the old-fashioned reverse engineering of the binary. As a consequence, to prevent adversaries from understanding your API, you also need obfuscation and jailbreak/root detection. Such defences will stop many hackers, but a skilled and determined hacker with a lot of free time can ultimately succeed.\n Concluding, it makes sense to do certificate pinning to prevent potential PKI insecurities, but cert pinning does not stop people from understanding your APIs \u2014 it merely slows down the good hackers. For the rest of this blog, our primary focus is on the use of cert pinning to deal with potential PKI problems. Cert pinning to slow down reverse engineering is outside the scope of this blog.\n  OS vendors / mobile device manufacturers have a strong interest in ensuring security: people trusting in their products is important to their business success. As a consequence, they usually push security updates to their customers when a CA becomes no longer trusted. For example, Apple released an  update when DigiNotar was compromised. Similar updates were done by browser manufacturers as well as described  here.\n So this gives us some assurance that even without certificate pinning, we can still have decent security.\u00a0 However there are some catches:\n Users don\u2019t always install their security updates promptly, so there is gap when exploitation is possible.\n This only works for known compromises \u2014 whereas certificate pinning will protect against the unknown compromises.\n The situation for Android is less assuring because the security updates come from Google via the mobile device vendor, and the vendors have not always been so prompt in pushing security updates to their users.\n Related to (3), Google does provide a solution for app developers to protect clients against discovered TLS vulnerabilities without relying on security updates from the vendor by using API  installIfNeeded() or installIfNeededAsync().\u00a0 It\u2019s not clear to me from the documentation whether this fixes only TLS implementation bugs, or if it also updates root certificates on the device.\n So, while there is some fallback, there is definitely room for improving security with a technique such as certificate pinning. However there is a practical downside to certificate pinning that one needs to be aware of \u2014 the app breaks when the certificate changes. We will discuss that more later.\n  It\u2019s interesting that we mandate such a high standard for mobile security, but what about the corresponding web browser security? Our ability to have similar controls is somewhat restricted, so one might feel that we are treating the mobile app more holy than the browser.\n In 2015, the security community tried to compensate for the discrepancy between mobile security guidance and the web browser security capabilities by introducing a similar concept to the web browser. A  new http header was added that allowed websites to instruct browsers to pin their certificates, so the browser would not accept any other certificate that it was presented from that particular website (for the duration of the validity specified in the header). This was known as HTTP Public Key Pinning (HPKP).\n It didn\u2019t take long before the security community discovered problems with this proposal. Within 2 years, one of the authors of HPKP  announced the intent to deprecate it due to a number of problems that were not previously anticipated. The reasons for deprecation include the difficulty in choosing a set of pins that is guaranteed to work, the risk of locking users out if an error was made in pinning, and the risk of an attacker abusing HKPK if he could obtain a misissued certificate. A real example of locking out users is  here. With the deprecation, A replacement was recommended : Expect-CT header. Expect-CT header is formally documented  here.\n Expect-CT is not as strong as certificate pinning, but is safer to use (still, the authors suggest using it with caution). In a nutshell, it is used to instruct browsers that the website must have a published certificate, in compliance with  Google\u2019s Certificate Transparency effort. With some configuration, the browser can be instructed to block connections if the site does not comply. Thus if a malicious actor secretly got an unpublished, misissued certificate for a website he would not be able to abuse it with this website. In other words, for the malicious actor to abuse a misissued certificate, it needs to be one that is published! But hopefully those abuses can be caught by certificate revocation (or  maybe not).\n Expect-CT is not supported by a number of browsers (including Firefox) at the time of writing this blog. It is a big step towards fixing PKI shortcomings, but falls slightly behind the security one gets from mobile certificate pinning.\n  The company Infinium has written excellent blogs for developers on how to implement certificate pinning. These guides can be found here:\n  A key downside of certificate pinning, which needs emphasis, is that changing certificates implies that you need to release a new version of the app (with an exception, to be discussed below) and force upgrade your users to the latest version. This is because the app only works with the exact certificate that was pinned \u2014 communication breaks if any other certificate is used. If you are using short-lived certificates,  such as those from Let\u2019s Encrypt, then this requires frequent maintenance and is an unpleasant user experience.\n Another points is that the rotation of the certificate will need to be coordinated with the release of the updated app to avoid downtime. This means that the development team will need sufficient advanced notice to update the app with the new certificate, test it and review it, and get it through App Store review, or else users may be locked out for some period of time. This is a very real concern: I\u2019ve seen it happen, and the business was not happy.\n The exception mentioned above is that if only the public keys (as opposed to the full certificate) are pinned then one can rotate a certificate without releasing a new app provided that the same public keys are used in the new certificate. That is, you change the certificate when it expires but use the same cryptographic keys as before. This results in a more friendly user experience, but it requires those that manage certificates (typically an operations team) to follow the requirement from the development team. Of course, if any key changes, a new app needs to be released and a forced upgrade needs to happen.\n There is another option that offers slightly less security than full certificate pinning but is much more likely to avoid the problem of needing to release a new app and force upgrade the users\u2026\n  With the goal of eliminating the need to upgrade the app when a new certificate is released but still wanting better-than-TLS security, developers can pin the certificate authority public key only. In other words, the app will now only accept certificates that are signed by the specific CA (or CAs) that you allow and no others, in addition to all the normal certificate checks that are required for security.\n Recall our discussion above about the problems with PKI: if  any CA is breached, then everybody becomes vulnerable. However, by pinning the certificate of the CA or CAs that we trust, we no longer have that risk. Instead, the exact CAs that we trust need to be compromised for us to be vulnerable.\n This is not as strong as full certificate pinning because if an intermediate key within your chain of trust becomes compromised, then you are still vulnerable. However, it is better than TLS-only because now you do not depend upon all CAs being secure: instead you only depend upon the CA or CAs that you are using being secure.\n With this approach, the app only needs to be updated if you change CAs or if the CA changes its public key. If your company has a policy on which CAs they will restrict to, then you can pin the public keys of those exact CAs and quite likely you will not need to worry about updating the app or forced upgrades for a long, long time. This is especially appealing for those using short-lived certificates.", "posttime": "2020-06-16 00:03:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e86\u89e3,certificate,\u8bc1\u4e66", "title": "\u4e86\u89e3\u8bc1\u4e66\u56fa\u5b9a", "title_en": "Understanding Certificate Pinning", "transed": 1, "url": "https://littlemaninmyhead.wordpress.com/2020/06/08/understanding-certificate-pinning/", "via": "", "real_tags": ["\u4e86\u89e3", "\u8bc1\u4e66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006673, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u70e6\u607c\uff1a\u5bf9\u5f6d\u4f69\u5c14\u798f\u514b\u65af\u6765\u8bf4\uff0c\u8fd9\u662f\u53f2\u57fa\u6d66\u673a\u573a\uff0c\u5bf9\u5b89\u5fb7\u70c8\u4e9a\u65af\u00b7\u65af\u8482\u52d2\u6765\u8bf4\uff0c\u8fd9\u662f\u81ed\u540d\u662d\u8457\u7684A20\u767b\u673a\u53e3\u3002\u4e0e\u90a3\u4e9b\u5149\u8363\u7684\u5931\u8d25\u76f8\u6bd4\uff0c\u6211\u6700\u559c\u6b22\u7684\u6280\u672f\u9519\u8bef\u662f\u4e00\u4e2a\u76f8\u5f53\u5fae\u4e0d\u8db3\u9053\u7684\u9519\u8bef\uff0c\u800c\u4e14\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u4e0e\u8bb8\u591a\u7528\u6237\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\u7136\u800c\uff0c\u4e0e\u5176\u8bf4\u5b83\u7684\u91cd\u8981\u6027\uff0c\u4e0d\u5982\u8bf4\u5b83\u662f\u5982\u4f55\u53d1\u751f\u7684\u5b8c\u5168\u7684\u8c1c\u56e2\u3002\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\u3002", "note_en": "Everyone\u2019s got their pet peeves: For  Poempelfox it\u2019s  Schiphol Airport, for Andreas Stiller it\u2019s the infamous  A20 gate. Compared to those glorious fails, my favorite tech blunder is a rather measly one, and it may not be relevant to many users in practice. However, it\u2019s not so much the importance of it but the total mystery of how it came to happen. So here\u2019s the thing.", "posttime": "2020-06-16 00:03:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,\u7aef\u53e3,port,\u9519\u8bef", "title": "\u82f1\u7279\u5c14\u7aef\u53e37 AGU\u9519\u8bef(2019\u5e74)", "title_en": "Intel\u2019s port 7 AGU blunder (2019)", "transed": 1, "url": "https://blogs.fau.de/hager/archives/8683", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u7aef\u53e3", "port", "\u9519\u8bef"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006672, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7528\u4e8e\u751f\u6210\u6d41\u7a0b\u56fe\u3001\u5e8f\u5217\u56fe\u3001\u7c7b\u56fe\u3001\u7518\u7279\u56fe\u548cGIT\u56fe\u7684Markdownish\u8bed\u6cd5\u3002", "note_en": "Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.", "posttime": "2020-06-15 23:47:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7c7b\u4f3c,diagrams,\u751f\u6210", "title": "\u4ee5\u4e0e\u964d\u4ef7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4ece\u6587\u672c\u751f\u6210\u56fe\u8868\u548c\u6d41\u7a0b\u56fe", "title_en": "Generation of diagrams and flowcharts from text in a similar manner as markdown", "transed": 1, "url": "https://mermaid-js.github.io/mermaid/", "via": "", "real_tags": ["\u7c7b\u4f3c", "diagrams", "\u751f\u6210"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006671, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u592a\u9633\u7a7f\u8fc7\u5730\u7403\u7684\u56fe\u50cf\uff0c\u5728\u201c\u4e2d\u5fae\u5b50\u5149\u201d\u4e0b\uff0c\u5728\u8d85\u7ea7\u795e\u5188\u63a2\u6d4b\u5668(\u65e5\u672c)\u62cd\u6444\u3002\u8fd9\u5f20\u56fe\u50cf\u662f\u5728503\u5929\u7684\u66dd\u5149\u65f6\u95f4\u5185\u83b7\u5f97\u7684\uff0c\u901a\u8fc7\u8bb0\u5f55\u4ece\u592a\u9633\u6838\u5fc3\u53d1\u5c04\u7684\u4e2d\u5fae\u5b50\uff0c\u5e76\u5728\u4f4d\u4e8e\u5730\u4e0b1\u516c\u91cc\u5904\u76845\u4e07\u5428\u91cd\u7684\u6c34\u6c60\u4e2d\u63a2\u6d4b\u5230\u7684\u4e2d\u5fae\u5b50\u3002\u5728\u591c\u95f4\uff0c\u4e2d\u5fae\u5b50\u900f\u660e\u5730\u7a7f\u8d8a\u6574\u4e2a\u5730\u7403\uff0c\u7136\u540e\u624d\u88ab\u8bb0\u5f55\u5728\u8fd9\u5f20\u56fe\u50cf\u4e2d\u3002\n\u4e2d\u5fae\u5b50\u662f\u4e00\u79cd\u8d28\u91cf\u51e0\u4e4e\u4e3a\u96f6\u7684\u57fa\u672c\u8d28\u7c92\u5b50\uff0c\u53ea\u6709\u901a\u8fc7\u5fae\u5f31\u7684\u6838\u529b\u548c\u5f15\u529b\u624d\u80fd\u76f8\u4e92\u4f5c\u7528\uff0c\u4ece\u800c\u4f7f\u5176\u4ee5\u51e0\u4e4e\u5149\u901f\u7684\u901f\u5ea6\u7545\u901a\u65e0\u963b\u5730\u901a\u8fc7\u666e\u901a\u56fa\u4f53\u7269\u8d28\u3002\u5728\u6c34\u4e2d\u4e2d\u5fae\u5b50\u548c\u7535\u5b50\u4e4b\u95f4\u7f55\u89c1\u7684\u76f8\u4e92\u4f5c\u7528\u4e2d\uff0c\u7535\u5b50\u4ee5\u9ad8\u4e8e\u6c34\u4e2d\u5149\u901f\u7684\u901f\u5ea6\u52a0\u901f\uff0c\u4ea7\u751f\u4e00\u79cd\u540d\u4e3a\u5207\u4f26\u79d1\u592b\u8f90\u5c04\u7684\u5149\u8109\u51b2\uff0c\u7c7b\u4f3c\u4e8e\u8d85\u97f3\u901f\u7206\u70b8\u3002\u8fd9\u4e9b\u8109\u51b2\u88ab\u653e\u7f6e\u5728\u6cf3\u6c60\u8868\u9762\u5404\u5904\u7684\u6570\u5343\u4e2a\u5149\u653e\u5927\u5668\u68c0\u6d4b\u5230\u3002\n\u00a9\u4e1c\u4eac\u5927\u5b66\u5b87\u5b99\u7ebf\u7814\u7a76\u6240\u795e\u5188\u5929\u6587\u53f0[\u21a9]", "note_en": "Image of the Sun taken through the Earth, in \u201cneutrino light\u201d, at the Super-Kamiokande detector (Japan). The image has been obtained with a 503 days exposure, by registering neutrinos emitted from the solar core and detected in a 50 000-ton water pool located 1 km underground. At night, neutrinos were transparently traversing the whole earth before being registered in this image.\n  A neutrino is an elementary matter particle of almost zero mass, only interacting through weak nuclear forces and gravity, leading to its unimpeded traveling through ordinary solid matter at almost the speed of light. During a rare interaction between a neutrino and an electron in the water, the electron is accelerated at a speed greater than the speed of light in water, producing a pulse of light -called Cherenkov radiation- similar to a supersonic boom. These pulses are detected by thousands of light amplifiers disposed everywhere on the pool surface.\n   \u00a9  Kamioka Observatory, ICRR (Institute for Cosmic Ray Research), The University of Tokyo [ \u21a9]", "posttime": "2020-06-15 23:46:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e2d\u5fae\u5b50,earth", "title": "\u592a\u9633\u5728\u201c\u4e2d\u5fae\u5b50\u5149\u201d\u4e2d\u7a7f\u900f\u5730\u7403", "title_en": "The Sun seen through the Earth in \u201cneutrino light\u201d", "transed": 1, "url": "http://strangepaths.com/the-sun-seen-through-the-earth-in-neutrino-light/2007/01/06/en/", "via": "", "real_tags": ["\u4e2d\u5fae\u5b50", "earth"]}, {"category": "", "categoryclass": "", "imagename": "06bbf2c3dad76e121365b1324ef1c56f.jpeg", "infoid": 1006670, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f(\u8def\u900f\u793e)-\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u5468\u4e00\u5ba3\u5e03\u4e86LGBT\u6743\u5229\u7684\u5206\u6c34\u5cad\u80dc\u5229\uff0c\u88c1\u5b9a\u4e00\u9879\u91cc\u7a0b\u7891\u5f0f\u7684\u8054\u90a6\u6cd5\u5f8b\u7981\u6b62\u5de5\u4f5c\u573a\u6240\u6b67\u89c6\uff0c\u4fdd\u62a4\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5458\u5de5\u3002\n\u8fd9\u98796\u6bd43\u7684\u88c1\u51b3\u662f\u81ea2015\u5e74\u6700\u9ad8\u6cd5\u9662\u5728\u5168\u56fd\u8303\u56f4\u5185\u5c06\u540c\u6027\u5a5a\u59fb\u5408\u6cd5\u5316\u4ee5\u6765\uff0c\u7f8e\u56fdLGBT\u6743\u5229\u7684\u6700\u91cd\u8981\u65f6\u523b\u3002\u5728\u65b0\u7684\u88c1\u51b3\u4e2d\uff0c\u6cd5\u5b98\u4eec\u51b3\u5b9a\uff0c\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u53d7\u52301964\u5e74\u6c11\u6743\u6cd5\u6848\u7b2c\u4e03\u7ae0\u7684\u4fdd\u62a4\uff0c\u8be5\u6cd5\u6848\u7981\u6b62\u96c7\u4e3b\u57fa\u4e8e\u6027\u522b\u3001\u79cd\u65cf\u3001\u80a4\u8272\u3001\u56fd\u7c4d\u548c\u5b97\u6559\u6b67\u89c6\u5458\u5de5\u3002\n\u5728\u7f8e\u56fd\u5927\u90e8\u5206\u5730\u533a\uff0c\u5de5\u4f5c\u573a\u6240\u5bf9\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5458\u5de5\u7684\u504f\u89c1\u4ecd\u7136\u662f\u5408\u6cd5\u7684\uff0c\u7f8e\u56fd\u670928\u4e2a\u5dde\u7f3a\u4e4f\u5168\u9762\u7684\u53cd\u5c31\u4e1a\u6b67\u89c6\u63aa\u65bd\u3002\u8fd9\u4e9b\u88c1\u51b3-\u5728\u4f50\u6cbb\u4e9a\u5dde\u548c\u7ebd\u7ea6\u5dde\u7684\u4e24\u8d77\u540c\u6027\u604b\u6743\u5229\u6848\u4ef6\u4ee5\u53ca\u5bc6\u6b47\u6839\u5dde\u7684\u4e00\u8d77\u53d8\u6027\u4eba\u6743\u5229\u6848\u4ef6\u4e2d-\u627f\u8ba4\u4e86\u8054\u90a6\u6cd5\u5f8b\u4e2d\u65b0\u7684\u5de5\u4eba\u4fdd\u62a4\u63aa\u65bd\u3002\n\u8fd9\u9879\u88c1\u51b3\u662f\u7531\u4fdd\u5b88\u6d3e\u5927\u6cd5\u5b98\u5c3c\u5c14\u00b7\u6208\u5c14\u8428\u5947\u64b0\u5199\u7684\uff0c\u4ed6\u662f\u7531\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u4e8e2017\u5e74\u4efb\u547d\u7684\u3002\u53e6\u4e00\u4f4d\u4fdd\u5b88\u6d3e\u9996\u5e2d\u5927\u6cd5\u5b98\u7ea6\u7ff0\u00b7\u7f57\u4f2f\u8328(John Roberts)\u548c\u6700\u9ad8\u6cd5\u9662\u7684\u56db\u540d\u81ea\u7531\u6d3e\u5927\u6cd5\u5b98\u4e5f\u52a0\u5165\u4e86\u6208\u5c14\u8428\u5947\u7684\u89c2\u70b9\u3002\u4fdd\u5b88\u6d3e\u6cd5\u5b98\u585e\u7f2a\u5c14\u00b7\u963f\u5229\u6258\u3001\u514b\u62c9\u4f26\u65af\u00b7\u6258\u9a6c\u65af\u548c\u5e03\u96f7\u7279\u00b7\u5361\u74e6\u8bfa\u5bf9\u88c1\u51b3\u6301\u4e0d\u540c\u610f\u89c1\u3002\n\u8fd9\u573a\u6cd5\u5f8b\u6597\u4e89\u7684\u7126\u70b9\u662f\u7b2c\u4e03\u7ae0\u4e2d\u201c\u6027\u201d\u7684\u5b9a\u4e49\u3002\u539f\u544a\u4ee5\u53ca\u6c11\u6743\u7ec4\u7ec7\u548c\u8bb8\u591a\u5927\u516c\u53f8\u8fa9\u79f0\uff0c\u6b67\u89c6\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5de5\u4eba\u672c\u8d28\u4e0a\u662f\u57fa\u4e8e\u4ed6\u4eec\u7684\u6027\u522b\uff0c\u56e0\u6b64\u662f\u975e\u6cd5\u7684\u3002\n\u7279\u6717\u666e\u653f\u5e9c\u548c\u88ab\u63a7\u5728\u8fd9\u4e9b\u6848\u4ef6\u4e2d\u5b58\u5728\u6b67\u89c6\u7684\u96c7\u4e3b\u8fa9\u79f0\uff0c\u56fd\u4f1a\u901a\u8fc7\u8fd9\u9879\u6cd5\u5f8b\u65f6\uff0c\u5e76\u4e0d\u6253\u7b97\u8ba9\u7b2c\u4e03\u6761\u4fdd\u62a4\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u3002\n\u6208\u5c14\u8428\u5947\u5728\u88c1\u51b3\u4e2d\u5199\u9053\uff1a\u201c\u96c7\u4e3b\u89e3\u96c7\u540c\u6027\u604b\u6216\u53d8\u6027\u4eba\u7684\u539f\u56e0\u662f\uff0c\u96c7\u4e3b\u89e3\u96c7\u4e86\u8fd9\u4e2a\u4eba\uff0c\u56e0\u4e3a\u4ed6\u7684\u6027\u683c\u6216\u884c\u4e3a\u5728\u5f02\u6027\u6210\u5458\u8eab\u4e0a\u662f\u4e0d\u4f1a\u53d7\u5230\u8d28\u7591\u7684\u3002\u201d\u201c\u6027\u5728\u51b3\u5b9a\u4e2d\u626e\u6f14\u7740\u5fc5\u8981\u7684\u3001\u6beb\u4e0d\u63a9\u9970\u7684\u89d2\u8272\uff0c\u8fd9\u6b63\u662f\u7b2c\u4e03\u7ae0\u6240\u7981\u6b62\u7684\u3002\u201d\n\u6cd5\u9662\u5728\u4e24\u8d77\u5173\u4e8e\u540c\u6027\u604b\u8005\u7684\u5408\u5e76\u6848\u4ef6\u4e2d\u505a\u51fa\u4e86\u88c1\u51b3\uff0c\u8fd9\u4e9b\u540c\u6027\u604b\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u662f\u56e0\u4e3a\u6027\u53d6\u5411\u800c\u88ab\u89e3\u96c7\u7684\u3002\u5176\u4e2d\u4e00\u8d77\u6d89\u53ca\u6765\u81ea\u4f50\u6cbb\u4e9a\u5dde\u7684\u524d\u53bf\u513f\u7ae5\u798f\u5229\u670d\u52a1\u534f\u8c03\u5458\u6770\u62c9\u5c14\u5fb7\u00b7\u535a\u65af\u6258\u514b(Gerald Bostock)\u3002\u53e6\u4e00\u8d77\u6d89\u53ca\u7ebd\u7ea6\u8df3\u4f1e\u6559\u7ec3\u5510\u7eb3\u5fb7\u00b7\u624e\u5c14\u8fbe(Donald Zarda)\uff0c\u4ed6\u5728\u8bc9\u8bbc\u5f00\u59cb\u540e\u6b7b\u4ea1\uff0c\u968f\u540e\u7531\u4ed6\u7684\u9057\u4ea7\u8ffd\u67e5\u6b64\u4e8b\u3002\n\u6cd5\u9662\u8fd8\u5bf9\u4e00\u8d77\u6d89\u53ca\u53d8\u6027\u4eba\u846c\u793c\u6307\u5bfc\u827e\u7c73\u00b7\u65af\u8482\u82ac\u65af(Aimee Stephens)\u7684\u6848\u4ef6\u505a\u51fa\u4e86\u88c1\u51b3\uff0c\u8be5\u6848\u6d89\u53ca\u5e95\u7279\u5f8b\u4e00\u5bb6\u6ba1\u4eea\u9986\u5728\u900f\u9732\u4ece\u7537\u6027\u8f6c\u53d8\u4e3a\u5973\u6027\u7684\u8ba1\u5212\u540e\u88ab\u89e3\u96c7\u3002\u65af\u8482\u82ac\u65af\u4e8e5\u6708\u4efd\u53bb\u4e16\u3002\u65af\u8482\u82ac\u65af\u7684\u59bb\u5b50\u5510\u5a1c\u73b0\u5728\u4ee3\u8868\u9057\u4ea7\u3002\n\u7279\u6717\u666e\u7684\u53f8\u6cd5\u90e8\u63a8\u7ffb\u4e86\u6c11\u4e3b\u515a\u524d\u603b\u7edf\u5df4\u62c9\u514b\u00b7\u5965\u5df4\u9a6c(Barack Obama)\u9886\u5bfc\u4e0b\u7684\u653f\u5e9c\u7684\u7acb\u573a\uff0c\u5373\u7b2c\u4e03\u7ae0\u6db5\u76d6\u4e86\u6027\u53d6\u5411\u548c\u6027\u522b\u8ba4\u540c\u3002\n\u7279\u6717\u666e\u53d7\u5230\u798f\u97f3\u6d3e\u57fa\u7763\u6559\u9009\u6c11\u7684\u5927\u529b\u652f\u6301\uff0c\u81ea2017\u5e74\u4e0a\u4efb\u4ee5\u6765\u91c7\u53d6\u4e86\u635f\u5bb3\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u6743\u5229\u7684\u884c\u52a8\u3002\n\u7279\u6717\u666e\u653f\u5e9c\u4e0a\u5468\u53d1\u5e03\u4e86\u4e00\u9879\u89c4\u5b9a\uff0c\u5c06\u53d6\u6d88\u5bf9\u53d8\u6027\u4eba\u5728\u533b\u7597\u4fdd\u5065\u9886\u57df\u7684\u53cd\u6b67\u89c6\u4fdd\u62a4\u3002\n\u4ed6\u7684\u653f\u5e9c\u8fd8\u652f\u6301\u67d0\u4e9b\u4f01\u4e1a\u57fa\u4e8e\u5b97\u6559\u5bf9\u540c\u6027\u5a5a\u59fb\u7684\u53cd\u5bf9\u800c\u62d2\u7edd\u4e3a\u540c\u6027\u604b\u8005\u670d\u52a1\u7684\u6743\u5229\uff0c\u7981\u6b62\u5927\u591a\u6570\u53d8\u6027\u4eba\u670d\u5f79\uff0c\u5e76\u53d6\u6d88\u4e86\u5bf9\u516c\u7acb\u5b66\u6821\u53d8\u6027\u4eba\u5b66\u751f\u4f7f\u7528\u536b\u751f\u95f4\u7684\u4fdd\u62a4\u3002", "note_en": "WASHINGTON (Reuters) - The U.S. Supreme Court on Monday delivered a watershed victory for LGBT rights, ruling that a landmark federal law forbidding workplace discrimination protects gay and transgender employees.\n  The 6-3 ruling represented the biggest moment for LGBT rights in the United States since the Supreme Court legalized same-sex marriage nationwide in 2015. In the new ruling, the justices decided that gay and transgender people are protected under Title VII of the Civil Rights Act of 1964, which bars employers from discriminating against employees on the basis of sex as well as race, color, national origin and religion.\n Workplace bias against gay and transgender employees has remained legal in much of the country, with 28 U.S. states lacking comprehensive measures against employment discrimination. The rulings - in two gay rights cases from Georgia and New York and a transgender rights case from Michigan - recognize new worker protections in federal law.\n The ruling was authored by conservative Justice Neil Gorsuch, who was appointed by President Donald Trump in 2017. Chief Justice John Roberts, another conservative, along with the court\u2019s four liberal justices, joined Gorsuch\u2019s opinion. Conservative Justices Samuel Alito, Clarence Thomas and Brett Kavanaugh dissented from the ruling.\n  The legal fight focused on the definition of \u201csex\u201d in Title VII. The plaintiffs, along with civil rights groups and many large companies, had argued that discriminating against gay and transgender workers was inherently based on their sex and consequently was illegal.\n Trump\u2019s administration and employers accused of discrimination in the cases argued that Congress did not intend for Title VII to protect gay and transgender people when it passed the law.\n \u201cAn employer who fires an individual for being homosexual or transgender fires that person for traits or actions it would not have questioned in members of a different sex,\u201d Gorsuch wrote in the ruling. \u201cSex plays a necessary and undisguisable role in the decision, exactly what Title VII forbids.\u201d\n The court ruled in two consolidated cases about gay people who have said they were fired due to their sexual orientation. One involved a former county child welfare services coordinator from Georgia named Gerald Bostock. The other involved a New York skydiving instructor named Donald Zarda who died after the litigation began, with the matter then pursued by his estate.\n The court also ruled in a case that involved a transgender funeral director named Aimee Stephens fired by a Detroit funeral home after revealing plans to transition from male to female. Stephens died in May. Stephens\u2019 wife Donna is now representing the estate.\n Trump\u2019s Justice Department reversed the government\u2019s position taken under Democratic former President Barack Obama that Title VII covered sexual orientation and gender identity.\n Strongly supported by evangelical Christian voters, Trump has taken actions that have undermined gay and transgender rights since taking office in 2017.\n Trump\u2019s administration last week issued a rule that would lift anti-discrimination protections for transgender people in healthcare.\n His administration also has backed the right of certain businesses to refuse to serve gay people on the basis of religious objections to gay marriage, banned most transgender service members from the military and rescinded protections on bathroom access for transgender students in public schools.", "posttime": "2020-06-15 23:29:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6279\u51c6,court,\u53d8\u6027\u4eba", "title": "\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u6279\u51c6\u5bf9\u540c\u6027\u604b\u3001\u53d8\u6027\u4eba\u5de5\u4eba\u7684\u4fdd\u62a4", "title_en": "U.S. Supreme Court endorses gay, transgender worker protections", "transed": 1, "url": "https://www.reuters.com/article/us-usa-court-lgbt-idUSKBN23M20N", "via": "", "real_tags": ["\u6279\u51c6", "court", "\u53d8\u6027\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "ffda187c8a3400f564fa0a2e28abc6ff.jpg", "infoid": 1006669, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0c\u6700\u9ad8\u6cd5\u9662\u88c1\u5b9a\uff0c\u4e00\u9879\u5177\u6709\u91cc\u7a0b\u7891\u610f\u4e49\u7684\u6c11\u6743\u6cd5\u5f8b\u4fdd\u62a4\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5de5\u4eba\u514d\u53d7\u5de5\u4f5c\u573a\u6240\u6b67\u89c6\uff0c\u8fd9\u8ba9\u4e89\u53d6LGBT\u5e73\u7b49\u7684\u8fd0\u52a8\u53d6\u5f97\u4e86\u60ca\u4eba\u7684\u80dc\u5229\u3002\n\u6295\u7968\u7ed3\u679c\u662f6\u6bd43\uff0c\u5927\u6cd5\u5b98\u5c3c\u5c14\u00b7M\u00b7\u6208\u5c14\u8428\u5947\u64b0\u5199\u4e86\u591a\u6570\u610f\u89c1\u3002\u9996\u5e2d\u5927\u6cd5\u5b98\u5c0f\u7ea6\u7ff0\u00b7G\u00b7\u7f57\u4f2f\u8328(John G.Roberts Jr.)\u4e5f\u4e0e\u4ed6\u4e00\u8d77\u3002\u5927\u6cd5\u5b98\u9732\u4e1d\u00b7\u5df4\u5fb7\u00b7\u91d1\u65af\u4f2f\u683c\u3001\u65af\u8482\u82ac\u00b7G\u00b7\u5e03\u96f7\u8036\u3001\u7d22\u5c3c\u5a05\u00b7\u7d22\u6258\u9a6c\u7ea6\u5c14\u548c\u57c3\u7433\u5a1c\u00b7\u5361\u6839\u3002\n\u6b64\u6848\u6d89\u53ca1964\u5e74\u6c11\u6743\u6cd5\u6848\u7b2c\u4e03\u7ae0\uff0c\u8be5\u6cd5\u6848\u7981\u6b62\u57fa\u4e8e\u79cd\u65cf\u3001\u5b97\u6559\u3001\u56fd\u7c4d\u548c\u6027\u522b\u7684\u5c31\u4e1a\u6b67\u89c6\u3002\u6cd5\u5b98\u4eec\u9762\u4e34\u7684\u95ee\u9898\u662f\uff0c\u6700\u540e\u90a3\u6761\u7981\u4ee4--\u201c\u57fa\u4e8e\u6027\u522b\u201d\u7684\u6b67\u89c6--\u662f\u5426\u9002\u7528\u4e8e\u6570\u767e\u4e07\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5de5\u4f5c\u8005\u3002\n\u8fd9\u9879\u88c1\u51b3\u6db5\u76d6\u4e24\u8d77\u6848\u4ef6\uff0c\u662f\u81ea2018\u5e74\u5927\u6cd5\u5b98\u5b89\u4e1c\u5c3c\u00b7M\u00b7\u80af\u5c3c\u8fea(Anthony M.Kennedy)\u9000\u4f11\u4ee5\u6765\uff0c\u6700\u9ad8\u6cd5\u9662\u9996\u6b21\u5c31LGBT\u6743\u5229\u505a\u51fa\u88c1\u51b3\u3002\u5728\u6700\u9ad8\u6cd5\u9662\u7684\u6240\u6709\u56db\u9879\u4e3b\u8981\u540c\u6027\u604b\u6743\u5229\u88c1\u51b3\u4e2d\uff0c\u591a\u6570\u610f\u89c1\u90fd\u662f\u7531\u80af\u5c3c\u8fea\u64b0\u5199\u7684\u3002\n\u8fd9\u4e9b\u51b3\u5b9a\u662f\u4ee5\u5baa\u6cd5\u6cd5\u5f8b\u4e3a\u57fa\u7840\u7684\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u65b0\u7684\u6848\u4f8b\u6d89\u53ca\u6cd5\u5f8b\u89e3\u91ca\u3002\n\u96c7\u4e3b\u548c\u7279\u6717\u666e\u653f\u5e9c\u7684\u5f8b\u5e08\u8fa9\u79f0\uff0c1964\u5e74\u5bf9\u6027\u522b\u6b67\u89c6\u7684\u666e\u904d\u7406\u89e3\u662f\u5bf9\u5973\u6027\u6216\u7537\u6027\u7684\u504f\u89c1\uff0c\u4e0d\u5305\u62ec\u57fa\u4e8e\u6027\u53d6\u5411\u548c\u6027\u522b\u8ba4\u540c\u7684\u6b67\u89c6\u3002\u4ed6\u4eec\u8bf4\uff0c\u5982\u679c\u56fd\u4f1a\u60f3\u8981\u4fdd\u62a4\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5de5\u4f5c\u8005\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u9879\u65b0\u7684\u6cd5\u5f8b\u3002\n\u5de5\u4eba\u7684\u5f8b\u5e08\u56de\u5e94\u8bf4\uff0c\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u57fa\u4e8e\u6027\u53d6\u5411\u6216\u53d8\u6027\u4eba\u8eab\u4efd\u5bf9\u96c7\u5458\u7684\u6b67\u89c6\u5fc5\u987b\u8003\u8651\u5230\u6027\u522b\u3002\n\u6cd5\u9662\u5ba1\u7406\u4e86\u4e24\u7ec4\u6848\u4ef6\u3002\u7b2c\u4e00\u8d77\u6d89\u53ca\u540c\u6027\u604b\u7537\u5b50\u63d0\u8d77\u7684\u4e24\u8d77\u8bc9\u8bbc\uff0c\u4ed6\u4eec\u8bf4\u81ea\u5df1\u88ab\u89e3\u96c7\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u6027\u53d6\u5411\u3002\u7b2c\u4e8c\u4ef6\u662f\u53d8\u6027\u5973\u6027\u827e\u7c73\u00b7\u65af\u8482\u82ac\u65af(Aimee Stephens)\u7684\u4e00\u4ef6\u897f\u88c5\uff0c\u5979\u8bf4\uff0c\u5f53\u5979\u5ba3\u5e03\u5c06\u5728\u5de5\u4f5c\u4e2d\u63a5\u53d7\u81ea\u5df1\u7684\u6027\u522b\u8ba4\u540c\u65f6\uff0c\u5979\u7684\u96c7\u4e3b\u89e3\u96c7\u4e86\u5979\u3002\n\u4e0e\u540c\u6027\u604b\u6743\u5229\u6709\u5173\u7684\u6848\u4ef6\u662f\u535a\u65af\u6258\u514b\u8bc9\u4f50\u6cbb\u4e9a\u5dde\u514b\u83b1\u987f\u53bf\u6848\uff0c\u7f16\u53f717-1618\uff0c\u4ee5\u53ca\u6d77\u62d4\u5feb\u9012\u516c\u53f8\u3002\u8bc9\u624e\u5c14\u8fbe\uff0c\u7b2c17-1623\u53f7\u3002\n\u7b2c\u4e00\u8d77\u6848\u4ef6\u662f\u7531\u6770\u62c9\u5c14\u5fb7\u00b7\u535a\u65af\u6258\u514b(Gerald Bostock)\u63d0\u8d77\u7684\uff0c\u4ed6\u662f\u4e00\u540d\u540c\u6027\u604b\u7537\u5b50\uff0c\u5728\u52a0\u5165\u540c\u6027\u604b\u5792\u7403\u8054\u76df\u540e\uff0c\u88ab\u4e00\u4e2a\u653f\u5e9c\u9879\u76ee\u89e3\u96c7\uff0c\u8be5\u9879\u76ee\u5e2e\u52a9\u4e9a\u7279\u5170\u5927\u4ee5\u5357\u7684\u514b\u83b1\u987f\u53bf(Clayton County)\u88ab\u5ffd\u89c6\u548c\u8650\u5f85\u513f\u7ae5\u3002\n\u7b2c\u4e8c\u4e2a\u662f\u8df3\u4f1e\u6559\u7ec3\u5510\u7eb3\u5fb7\u00b7\u624e\u5c14\u8fbe(Donald Zarda)\u5e26\u6765\u7684\uff0c\u4ed6\u4e5f\u8bf4\u81ea\u5df1\u88ab\u89e3\u96c7\u662f\u56e0\u4e3a\u4ed6\u662f\u540c\u6027\u604b\u3002\u5728\u4ed6\u88ab\u89e3\u96c7\u4e4b\u524d\uff0c\u4e00\u540d\u5973\u987e\u5ba2\u6295\u8bc9\u8bf4\uff0c\u5979\u62c5\u5fc3\u5728\u53cc\u4eba\u6f5c\u6c34\u65f6\u88ab\u7ed1\u5728\u624e\u5c14\u8fbe\u8eab\u4e0a\u3002\u4e3a\u4e86\u8ba9\u987e\u5ba2\u653e\u5fc3\uff0c\u624e\u5c14\u8fbe\u5148\u751f\u544a\u8bc9\u5979\u4ed6\u662f\u201c\u767e\u5206\u4e4b\u767e\u7684\u540c\u6027\u604b\u201d\u3002\n\u5927\u591a\u6570\u8054\u90a6\u4e0a\u8bc9\u6cd5\u9662\u90fd\u5bf9\u7b2c\u4e03\u6761\u8fdb\u884c\u4e86\u89e3\u91ca\uff0c\u4ee5\u6392\u9664\u6027\u53d6\u5411\u6b67\u89c6\u3002\u4f46\u5176\u4e2d\u4e24\u4e2a\u5dde\uff0c\u7ebd\u7ea6\u548c\u829d\u52a0\u54e5\uff0c\u5df2\u7ecf\u88c1\u5b9a\u5bf9\u7537\u5973\u540c\u6027\u604b\u8005\u7684\u6b67\u89c6\u662f\u4e00\u79cd\u6027\u522b\u6b67\u89c6\u3002\n2018\u5e74\uff0c\u4f4d\u4e8e\u7ebd\u7ea6\u7684\u7f8e\u56fd\u7b2c\u4e8c\u5de1\u56de\u4e0a\u8bc9\u6cd5\u9662(United States Court Of Appeals For The Second Circuit)\u7684\u4e00\u4e2a\u753113\u540d\u6cd5\u5b98\u7ec4\u6210\u7684\u610f\u89c1\u5206\u6b67\u7684\u966a\u5ba1\u56e2\u5141\u8bb8\u624e\u5c14\u8fbe\u7684\u8bc9\u8bbc\u7ee7\u7eed\u8fdb\u884c\u3002\u9996\u5e2d\u6cd5\u5b98\u7f57\u4f2f\u7279\u00b7A\u00b7\u5361\u5179\u66fc(Robert A.Katzmann)\u4ee3\u8868\u591a\u6570\u4eba\u64b0\u6587\u5f97\u51fa\u7ed3\u8bba\uff0c\u201c\u6027\u53d6\u5411\u6b67\u89c6\u81f3\u5c11\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u6027\u522b\u9a71\u52a8\u7684\uff0c\u56e0\u6b64\u662f\u6027\u522b\u6b67\u89c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u201d\n\u5728\u5f02\u8bae\u4e2d\uff0c\u6cd5\u5b98\u6770\u62c9\u5fb7\u00b7E\u00b7\u6797\u5947(Gerard E.Lynch)\u5199\u9053\uff0c\u7b2c\u4e03\u7ae0\u7684\u6587\u5b57\u4e0d\u652f\u6301\u591a\u6570\u4eba\u7684\u89e3\u91ca\u3002\n\u201c\u4ec5\u4ee5\u516c\u6c11\u8eab\u4efd\u53d1\u8a00\uff0c\u201d\u4ed6\u5199\u9053\uff0c\u201c\u5982\u679c\u6709\u4e00\u5929\u65e9\u4e0a\u9192\u6765\uff0c\u5f97\u77e5\u56fd\u4f1a\u521a\u521a\u901a\u8fc7\u7acb\u6cd5\uff0c\u5c06\u6027\u53d6\u5411\u6dfb\u52a0\u52301964\u5e74\u6c11\u6743\u6cd5\u6848\u7b2c\u4e03\u7ae0\u7981\u6b62\u7684\u5c31\u4e1a\u6b67\u89c6\u7406\u7531\u540d\u5355\u4e2d\uff0c\u6211\u4f1a\u5f88\u9ad8\u5174\u3002\u201d\u6211\u76f8\u4fe1\u6709\u4e00\u5929--\u6211\u5e0c\u671b\u90a3\u4e00\u5929\u5f88\u5feb\u5230\u6765--\u6211\u4f1a\u611f\u5230\u9ad8\u5174\u3002\u201c\u3002\n\u6797\u5947\u6cd5\u5b98\u5199\u9053\uff0c\u201c\u5982\u679c\u6211\u9192\u6765\u65f6\u5f97\u77e5\u56fd\u4f1a\u5728\u534a\u4e2a\u591a\u4e16\u7eaa\u524d\u79d8\u5bc6\u901a\u8fc7\u4e86\u8fd9\u6837\u7684\u7acb\u6cd5\uff0c\u6211\u4e5f\u4f1a\u540c\u6837\u9ad8\u5174--\u76f4\u5230\u6211\u771f\u6b63\u9192\u6765\uff0c\u610f\u8bc6\u5230\u6211\u80af\u5b9a\u8fd8\u5728\u7761\u89c9\u505a\u68a6\u3002\u201d\u201c\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\u56fd\u4f1a\u6ca1\u6709\u505a\u8fc7\u8fd9\u6837\u7684\u4e8b.\u201d\n\u53d8\u6027\u4eba\u6743\u5229\u7684\u6848\u4f8b\u662fR.G.&G.R.Harris\u6ba1\u4eea\u9986\u516c\u53f8\u3002\u4e94\u3001\u5e73\u7b49\u5c31\u4e1a\u673a\u4f1a\u59d4\u5458\u4f1a\uff0c\u7b2c18-107\u53f7\u3002\u5b83\u6d89\u53ca\u827e\u7c73\u00b7\u65af\u8482\u82ac\u65af(Aimee Stephens)\uff0c\u5979\u57282013\u5e74\u5ba3\u5e03\u81ea\u5df1\u662f\u4e00\u540d\u53d8\u6027\u4eba\uff0c\u5c06\u5f00\u59cb\u7a7f\u5973\u88c5\u5de5\u4f5c\u540e\uff0c\u88ab\u5bc6\u6b47\u6839\u5dde\u4e00\u5bb6\u6ba1\u4eea\u9986\u89e3\u96c7\u3002\u65af\u8482\u82ac\u65af\u4e8e5\u670812\u65e5\u53bb\u4e16\u3002\n2013\u5e74\uff0c\u5979\u5728\u5199\u7ed9\u540c\u4e8b\u7684\u4fe1\u4e2d\u5199\u9053\uff1a\u201c\u6211\u5fc5\u987b\u544a\u8bc9\u4f60\u7684\u4e8b\u60c5\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u56f0\u96be\uff0c\u6211\u6b63\u5728\u9f13\u8d77\u6240\u6709\u7684\u52c7\u6c14\u3002\u201d\u201c\u6211\u611f\u89c9\u81ea\u5df1\u88ab\u56da\u7981\u5728\u4e00\u4e2a\u4e0e\u6211\u7684\u5fc3\u667a\u4e0d\u5339\u914d\u7684\u8eab\u4f53\u91cc\uff0c\u8fd9\u7ed9\u6211\u5e26\u6765\u4e86\u6781\u5927\u7684\u7edd\u671b\u548c\u5b64\u72ec\u3002\u201d\n\u65af\u8482\u82ac\u65af\u5973\u58eb\u5728\u6ba1\u4eea\u9986\u5de5\u4f5c\u4e86\u516d\u5e74\u3002\u5979\u7684\u540c\u4e8b\u4f5c\u8bc1\u8bf4\uff0c\u5979\u6709\u80fd\u529b\uff0c\u6709\u540c\u60c5\u5fc3\u3002\n\u6536\u5230\u8fd9\u5c01\u4fe1\u4e24\u5468\u540e\uff0c\u623f\u5b50\u7684\u4e3b\u4eba\u6258\u9a6c\u65af\u00b7\u7f57\u65af\u7279(Thomas Rost)\u89e3\u96c7\u4e86\u65af\u8482\u82ac\u65af\u3002\u5f53\u88ab\u95ee\u53ca\u201c\u4f60\u89e3\u96c7\u65af\u8482\u82ac\u65af\u7684\u5177\u4f53\u539f\u56e0\u201d\u65f6\uff0c\u7f57\u65af\u7279\u8bf4\uff1a\u201c\u55ef\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u518d\u628a\u81ea\u5df1\u63cf\u7ed8\u6210\u4e00\u4e2a\u7537\u4eba\u3002\u201d\u4ed6\u60f3\u6253\u626e\u6210\u4e00\u4e2a\u5973\u4eba\u3002\u201c\u3002\n\u4f4d\u4e8e\u8f9b\u8f9b\u90a3\u63d0\u7684\u7f8e\u56fd\u7b2c\u516d\u5de1\u56de\u4e0a\u8bc9\u6cd5\u9662\u505a\u51fa\u4e86\u6709\u5229\u4e8e\u65af\u8482\u82ac\u65af\u7684\u88c1\u51b3\u3002\u6cd5\u9662\u8868\u793a\uff0c\u5bf9\u53d8\u6027\u4eba\u7684\u6b67\u89c6\u662f\u7b2c\u4e03\u6761\u7981\u6b62\u7684\u3002\n\u201c\u4ece\u5206\u6790\u4e0a\u8bb2\uff0c\u5728\u6ca1\u6709\u5458\u5de5\u6027\u522b\u52a8\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e\u8be5\u5458\u5de5\u7684\u53d8\u6027\u4eba\u8eab\u4efd\u89e3\u96c7\u8be5\u5458\u5de5\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u201d\u6cd5\u9662\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u201c\u2018\u6027\u522b\u6b67\u89c6\u2019\u672c\u8d28\u4e0a\u5305\u62ec\u5458\u5de5\u56e0\u6027\u522b\u6539\u53d8\u800c\u53d7\u5230\u7684\u6b67\u89c6\u3002\u201d", "note_en": "The Supreme Court  ruled Monday that a landmark civil rights law protects gay and transgender workers from workplace discrimination, handing the movement for L.G.B.T. equality a stunning victory.\n The vote was 6 to 3, with Justice Neil M. Gorsuch writing the majority opinion. He was joined by Chief Justice John G. Roberts Jr. and Justices Ruth Bader Ginsburg, Stephen G. Breyer, Sonia Sotomayor and Elena Kagan.\n The case concerned Title VII of the Civil Rights Act of 1964, which bars employment discrimination based on race, religion, national origin and sex. The question for the justices was whether that last prohibition \u2014 discrimination \u201cbecause of sex\u201d\u2014 applies to many millions of gay and transgender workers.\n The decision, covering two cases, was the court\u2019s first on L.G.B.T. rights since the  retirement in 2018 of Justice Anthony M. Kennedy, who wrote the majority opinions in all four of the court\u2019s major gay rights decisions.\n Those decisions were grounded in constitutional law. The new cases, by contrast, concerned statutory interpretation.\n Lawyers for employers and the Trump administration argued that the common understanding of sex discrimination in 1964 was bias against women or men and did not encompass discrimination based on sexual orientation and gender identity. If Congress wanted to protect gay and transgender workers, they said, it could pass a new law.\n Lawyers for the workers responded that discrimination against employees based on sexual orientation or transgender status must as a matter of logic take account of sex.\n  The court considered two sets of cases.  The first concerned a pair of lawsuits from gay men who said they were fired because of their sexual orientation.  The second was about a suit from a transgender woman,  Aimee Stephens, who said her employer fired her when she announced that she would embrace her gender identity at work.\n The cases concerning gay rights are  Bostock v. Clayton County, Ga., No. 17-1618, and  Altitude Express Inc. v. Zarda, No. 17-1623.\n The first case was filed by Gerald Bostock, a gay man who was fired from a government program that helped neglected and abused children in Clayton County, Ga., just south of Atlanta, after he joined a gay softball league.\n The second was brought by a skydiving instructor, Donald Zarda, who also said he was fired because he was gay. His dismissal followed a complaint from a female customer who had expressed concerns about being strapped to Mr. Zarda during a tandem dive. Mr. Zarda, hoping to reassure the customer, told her that he was \u201c100 percent gay.\u201d\n  Most federal appeals courts have interpreted Title VII to exclude sexual orientation discrimination. But two of them, in New York and Chicago, have ruled that discrimination against gay men and lesbians is a form of sex discrimination.\n In 2018, a divided 13-judge panel of the United States Court of Appeals for the Second Circuit, in New York, allowed Mr. Zarda\u2019s lawsuit to proceed. Writing for the majority, Chief Judge Robert A. Katzmann  concluded that \u201csexual orientation discrimination is motivated, at least in part, by sex and is thus a subset of sex discrimination.\u201d\n In dissent, Judge Gerard E. Lynch wrote that the words of Title VII did not support the majority\u2019s interpretation.\n \u201cSpeaking solely as a citizen,\u201d he wrote, \u201cI would be delighted to awake one morning and learn that Congress had just passed legislation adding sexual orientation to the list of grounds of employment discrimination prohibited under Title VII of the Civil Rights Act of 1964. I am confident that one day \u2014 and I hope that day comes soon \u2014 I will have that pleasure.\u201d\n \u201cI would be equally pleased to awake to learn that Congress had secretly passed such legislation more than a half-century ago \u2014 until I actually woke up and realized that I must have been still asleep and dreaming,\u201d Judge Lynch wrote. \u201cBecause we all know that Congress did no such thing.\u201d\n The case on transgender rights is  R.G. &amp; G.R. Harris Funeral Homes Inc. v. Equal Employment Opportunity Commission, No. 18-107. It concerns Aimee Stephens, who was fired from a Michigan funeral home after she announced in 2013 that she was a transgender woman and would start working in women\u2019s clothing.  Ms. Stephens died on May 12.\n \u201cWhat I must tell you is very difficult for me and is taking all the courage I can muster,\u201d she wrote to her colleagues in 2013. \u201cI have felt imprisoned in a body that does not match my mind, and this has caused me great despair and loneliness.\u201d\n Ms. Stephens had worked at the funeral home for six years. Her colleagues testified that she was able and compassionate.\n Two weeks after receiving the letter, the home\u2019s owner, Thomas Rost, fired Ms. Stephens. Asked for the \u201cspecific reason that you terminated Stephens,\u201d Mr. Rost said: \u201cWell, because he was no longer going to represent himself as a man. He wanted to dress as a woman.\u201d\n The United States Court of Appeals for the Sixth Circuit, in Cincinnati, ruled for Ms. Stephens. Discrimination against transgender people,  the court said, was barred by Title VII.\n \u201cIt is analytically impossible to fire an employee based on that employee\u2019s status as a transgender person without being motivated, at least in part, by the employee\u2019s sex,\u201d the court said, adding, \u201cDiscrimination \u2018because of sex\u2019 inherently includes discrimination against employees because of a change in their sex.\u201d", "posttime": "2020-06-15 23:28:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6700\u9ad8\u6cd5\u9662,rights,\u6027\u522b", "title": "\u6c11\u6743\u6cd5\u4fdd\u62a4\u540c\u6027\u604b\u548c\u53d8\u6027\u4eba\u5de5\u4eba\uff0c\u6700\u9ad8\u6cd5\u9662\u88c1\u51b3", "title_en": "Civil Rights Law Protects Gay and Transgender Workers, Supreme Court Rules", "transed": 1, "url": "https://www.nytimes.com/2020/06/15/us/gay-transgender-workers-supreme-court.html", "via": "", "real_tags": ["\u6700\u9ad8\u6cd5\u9662", "rights", "\u6027\u522b"]}, {"category": "", "categoryclass": "", "imagename": "b8c6dee7c6df43121bec2d187f02ab58.jpg", "infoid": 1006668, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u65b0\u5174\u7684Starlink\u7528\u6237\u7ec8\u7aef\u6280\u672f-\u5c06\u628a\u5ba2\u6237\u8fde\u63a5\u5230\u4e00\u4e2a\u5e9e\u5927\u7684\u5929\u57fa\u4e92\u8054\u7f51\u661f\u5ea7\u7684\u6d88\u8d39\u786c\u4ef6-\u6b63\u5728\u4e0e\u5458\u5de5\u3001\u8463\u4e8b\u4f1a\u6210\u5458\u548c\u6295\u8d44\u8005\u8fdb\u884c\u4e00\u7cfb\u5217\u95ed\u95e8\u6d4b\u8bd5\u3002\n\u8fd9\u4e00\u6d88\u606f\u53d1\u5e03\u7684\u540c\u65f6\uff0cSpaceX\u671d\u7740Starlink\u4e92\u8054\u7f51\u670d\u52a1\u7684\u6d4b\u8bd5\u7248\u9996\u6b21\u4eae\u76f8\u8fc8\u51fa\u4e86\u91cd\u8981\u7684\u4e24\u6b65\uff0c\u5b8c\u6210\u4e86Starlink v1.0\u536b\u661f\u7684\u7b2c\u516b\u6b21\u6210\u529f\u53d1\u5c04\uff0c\u5e76\u5f00\u8bbe\u4e86\u4e00\u4e2a\u65b0\u7684\u95e8\u6237\u7f51\u7ad9\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u8fd9\u4e2a\u95e8\u6237\u7f51\u7ad9\u4e0a\u6ce8\u518c\uff0c\u83b7\u5f97\u4ed6\u4eec\u6240\u5728\u5730\u533a\u670d\u52a1\u53ef\u7528\u6027\u7684\u66f4\u65b0\u3002\u636e\u9996\u5e2d\u8fd0\u8425\u5b98\u548c\u603b\u88c1\u683c\u6e29\u00b7\u8096\u7279\u7ef4\u5c14(Gwynne Shotwell)\u8868\u793a\uff0cSpaceX\u610f\u5473\u7740\u4e00\u65e6\u5b8c\u621014\u6b21\u53d1\u5c04\uff0c\u7ea6840\u9897\u536b\u661f\u8fdb\u5165\u8f68\u9053\uff0c\u5c31\u4f1a\u5f00\u59cb\u63a8\u51faStarlink\u4e92\u8054\u7f51\u670d\u52a1\u3002\u65e0\u8bba\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u5305\u62ecSpaceX\u57282019\u5e745\u6708\u9996\u6b21\u53d1\u5c0460\u9897\u201cv0.9\u201dStarlink\u536b\u661f\uff0c\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u5982\u679c\u8be5\u516c\u53f8\u80fd\u591f\u7ef4\u6301\u5e73\u5747\u6bcf\u6708\u4e24\u5230\u4e09\u6b21\u53d1\u5c04\uff0c\u90a3\u4e4814\u6b21\u53d1\u5c04\u7684\u91cc\u7a0b\u7891\u53ea\u6709\u4e24\u4e09\u4e2a\u6708\u4e86\u3002\n\u4e0d\u7ba1SpaceX\u7684Starlink\u4e92\u8054\u7f51\u536b\u661f\u661f\u5ea7\u7684\u53d1\u5c04\u7ec4\u4ef6\u662f\u58ee\u89c2\u7684\u3001\u5e7f\u4e3a\u4eba\u77e5\u7684\uff0c\u8868\u9762\u4e0a\u7684\u7528\u6237\u7ec8\u7aef\u6d4b\u8bd5\u6709\u52a9\u4e8e\u63ed\u793a\u8be5\u5408\u8d44\u4f01\u4e1a\u9762\u5411\u5ba2\u6237\u7684\u4e00\u9762\u3002\u867d\u7136\u76ee\u524d\u7528\u6237\u7ec8\u7aef\u51e0\u4e4e\u770b\u4e0d\u89c1\uff0c\u4f46\u7528\u6237\u7ec8\u7aef\u81f3\u5c11\u4e0eStarlink\u536b\u661f\u7684\u751f\u4ea7\u548c\u53d1\u5c04\u4e00\u6837\u56f0\u96be\u548c\u91cd\u8981-\u5982\u679c\u4e0d\u662f\u66f4\u91cd\u8981\u548c\u66f4\u5177\u6311\u6218\u6027\u7684\u8bdd\u3002\n\u4e8b\u60c5\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u3002Starlink\u53ea\u6709\u4e24\u4e2a\u8bf4\u660e\uff1a\u63d2\u5165\u5e76\u6307\u5411\u5929\u7a7a\u3002\u53ef\u4ee5\u6309\u4efb\u4e00\u987a\u5e8f\u5b8c\u6210\u3002\n-\u57c3\u9686\u00b7\u9a6c\u65af\u514b(@elonmusk)2020\u5e746\u670814\u65e5\u3002\n\u6b63\u5982\u4e4b\u524d\u5728Teslarati\u4e0a\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u65e0\u8bba\u51e0\u5341\u6b21\u6210\u529f\u53d1\u5c04\u6216\u536b\u661f\u3001\u5730\u9762\u7ad9\u6216\u6574\u4e2a\u7f51\u7edc\u7684\u8d28\u91cf\u5982\u4f55\uff0c\u7528\u6237\u7ec8\u7aef\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5efa\u7acb\u6216\u4e2d\u65adStarlink\u3002\n\u201c\u9664\u4e86\u7f51\u7edc\u672c\u8eab\u7684\u8d28\u91cf\u3001\u53ef\u9760\u6027\u548c\u53ef\u7528\u6027(\u5b83\u53ef\u4ee5\u6d41\u5f0f\u64ad\u653eYouTube/Netflix\u89c6\u9891\u5417\uff1f\u6e38\u620f\uff1f\u7535\u8bdd\u4f1a\u8bae\uff1f)\uff0c\u5ba2\u6237\u8bbf\u95ee\u6240\u8ff0\u7f51\u7edc\u6240\u9700\u7684\u7528\u6237\u7ec8\u7aef\u4e5f\u5c06\u5904\u4e8e\u663e\u5fae\u955c\u4e0b\u3002\u5982\u679cSpaceX\u65e0\u6cd5\u6279\u91cf\u751f\u4ea7\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u9ad8\u8d28\u91cf\u3001\u53ef\u9760\u7684\u7528\u6237\u7ec8\u7aef\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u6613\u4e8e\u4f7f\u7528\u548c\u76f4\u89c2\uff0c\u90a3\u4e48Starlink\u536b\u661f\u7f51\u7edc\u672c\u8eab\u7684\u8d28\u91cf\u5b9e\u9645\u4e0a\u5c31\u65e0\u5173\u7d27\u8981\u4e86\u3002ISP\u7684\u7528\u6237(\u5373\u5927\u591a\u6570\u4eba)\u5bf9\u8fd9\u4e2a\u95ee\u9898\u5f88\u719f\u6089\uff1a\u4f60\u7684WiFi\u8def\u7531\u5668\u548c\u8c03\u5236\u89e3\u8c03\u5668\u53ef\u80fd\u662f\u6700\u597d\u7684\uff0c\u4f46\u7cdf\u7cd5\u7684\u4e92\u8054\u7f51\u670d\u52a1\u4f1a\u8ba9\u4f60\u7684\u5bb6\u5ead\u7f51\u7edc\u8d28\u91cf\u53d8\u5f97\u65e0\u5173\u7d27\u8981\u3002\u53cd\u4e4b\u4ea6\u7136\uff0c\u574f\u7684\u8def\u7531\u5668\u6216\u8c03\u5236\u89e3\u8c03\u5668\u4e5f\u4f1a\u4f7f\u9ad8\u8d28\u91cf\u7684\u4e92\u8054\u7f51\u670d\u52a1\u5b9e\u9645\u4e0a\u65e0\u5173\u7d27\u8981\u3002\u6362\u8a00\u4e4b\uff0cSpaceX\u4ece\u6839\u672c\u4e0a\u9700\u8981\u786e\u4fdd\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u90fd\u4e0d\u4f1a\u5a01\u80c1\u5230\u7528\u6237\u4f53\u9a8c\u3002\u201c\u3002Teslarati.com-2020\u5e744\u670823\u65e5\u3002\n\u6362\u8a00\u4e4b\uff0c\u96be\u4ee5\u8bbe\u7f6e\u6216\u9700\u8981\u9891\u7e41\u7167\u770b\u4ee5\u786e\u4fdd\u7a33\u5b9a\u8fde\u63a5\u7684\u4f4e\u8d28\u91cf\u3001\u6709\u7f3a\u9677\u7684\u7528\u6237\u7ec8\u7aef\u5c06\u4f7fSpaceX\u53d1\u5c04\u7684\u536b\u661f\u53ca\u5176\u5b89\u88c5\u7684\u5730\u9762\u57fa\u7840\u8bbe\u65bd\u7684\u8d28\u91cf\u53d8\u5f97\u65e0\u5173\u7d27\u8981\u3002\u56e0\u6b64\uff0c\u6295\u8d44\u8005\u53f2\u8482\u592b\u00b7\u5c24\u5c14\u97e6\u68ee(Steve Jurvetson)\u5982\u4e0a\u6240\u8ff0\u7684\u5c01\u95ed\u5f0f\u7126\u70b9\u5c0f\u7ec4\u5f0f\u6d4b\u8bd5\u3002\n\u730e\u9e709\u53f7\u5728\u9ece\u660e\u65f6\u5206\u70b9\u4eaeSLC-40\uff0c\u5f00\u59cb\u53e6\u4e00\u6b21\u6210\u529f\u7684\u4efb\u52a1\uff0c\u4e3a#Starlink\u661f\u5ea7\u589e\u52a0\u4e86#Starlink\u661f\u5ea7\uff0c\u5e76\u4e3a@planetlabs\u589e\u52a0\u4e863\u9897\u65b0\u536b\u661f\uff01#SpaceX pic.twitter.com/2sgUZaMKzL\u3002\n-\u7406\u67e5\u5fb7\u00b7\u5b89\u683c\u5c14(@RDAnglePhoto)2020\u5e746\u670814\u65e5\u3002\n\u636eJurvetson\u8bf4\uff0c\u8463\u4e8b\u4f1a\u6210\u5458(\u5305\u62ec\u4ed6\u5728\u5185)\u88ab\u9080\u8bf7\u57286\u670811\u65e5\u621612\u65e5\u524d\u5f80SpaceX\uff0c\u8bd5\u7528\u8be5\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u7684Starlink\u7528\u6237\u7ec8\u7aef\u539f\u578b\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6bcf\u4e2a\u8463\u4e8b\u4f1a\u6210\u5458\u90fd\u5f97\u5230\u4e86\u4e00\u4e2a\u7ec8\u7aef\uff0c\u5e76\u8981\u6c42\u4ed6\u4eec\u81ea\u5df1\u8bbe\u7f6e\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8fdb\u884c\u4e00\u573a\u53cb\u597d\u7684\u7ec8\u70b9\u8d5b\u8dd1(\u5efa\u7acb\u4e92\u8054\u7f51\u8fde\u63a5)\u3002\u53f2\u8482\u592b\u6700\u7ec8\u8868\u793a\uff0c\u4ed6\u5efa\u7acb\u7684\u539f\u578b\u63d0\u4f9b\u4e86\u201c\u53ef\u4ee5\u60f3\u8c61\u5230\u7684\u6700\u7b80\u5355\u7684\u5f00\u7bb1\u5373\u7528\u4f53\u9a8c\u201d\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u6570\u636e\u516c\u53f8\u78c1\u5e26\u65b9\u821f(Tape Ark)\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u4e3b\u529e\u7684\u4e00\u4e2a\u865a\u62df\u7814\u8ba8\u4f1a\uff0cSpaceX\u5df2\u7ecf\u8fdb\u884c\u4e86\u51e0\u4e2a\u6708\u7684\u7c7b\u4f3c\u6d4b\u8bd5\uff0c\u6267\u884c\u7684\u662f\u7c7b\u4f3c\u7684\u8bbe\u7f6e\u6d4b\u8bd5\uff0c\u4f46\u5bf9\u8c61\u662f\u6570\u5341\u540d\u5458\u5de5\u7684\u914d\u5076\uff0c\u800c\u4e0d\u662f\u8463\u4e8b\u4f1a\u6210\u5458\u3002\u867d\u7136\u4e00\u5bb6\u9ad8\u79d1\u6280\u706b\u7bad\u516c\u53f8\u7684\u8463\u4e8b\u4f1a\u6210\u5458\u53ca\u5176\u5458\u5de5\u5bb6\u5c5e\u5e76\u4e0d\u5b8c\u5168\u662f\u7f8e\u56fd(\u6216\u5168\u7403)\u6d88\u8d39\u8005\u7684\u968f\u673a\u6837\u672c\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u63a5\u53d7\u6d4b\u8bd5\u7684\u975e\u5458\u5de5\u90fd\u80fd\u591f\u987a\u5229\u8bbe\u7f6eStarlink\u7ec8\u7aef\u5e76\u5efa\u7acb\u4e92\u8054\u7f51\u8fde\u63a5\u3002\u5f53\u4eba\u4eec\u8003\u8651\u5230\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u8bbe\u7f6e\u8c03\u5236\u89e3\u8c03\u5668\u548c\u8def\u7531\u5668\uff0c\u5e76\u901a\u8fc7\u5eb7\u5361\u65af\u7279\u8fd9\u6837\u7684ISP\u6fc0\u6d3b\u4e92\u8054\u7f51\u670d\u52a1\u65f6\uff0c\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u8fd9\u9879\u4efb\u52a1\u5373\u4f7f\u662f\u7cbe\u901a\u6280\u672f\u7684\u7528\u6237\u4e5f\u5f88\u5bb9\u6613\u5931\u53bb\u7406\u667a\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u672c\u4eba\u4e00\u76f4\u660e\u786e\u8868\u793a\uff0c\u7b80\u5355\u6027\u662fStarlink\u7528\u6237\u7ec8\u7aef\u7684\u9996\u8981\u4efb\u52a1\uff0c\u6700\u8fd1\u4ed6\u8868\u793a\uff0c\u6700\u7ec8\u4ea7\u54c1\u5e94\u8be5\u6bd4\u8463\u4e8b\u4f1a\u548c\u5bb6\u65cf\u6210\u5458\u6beb\u65e0\u56f0\u96be\u5730\u5efa\u7acb\u7684\u539f\u578b\u66f4\u7b80\u5355\uff0c\u8981\u6c42\u5ba2\u6237\u53ea\u9700\u201c\u63d2\u5165\u548c\u6307\u5411\u5929\u7a7a\u201d\u5373\u53ef\u3002\u9274\u4e8eSpaceX\u53ef\u80fd\u6700\u65e9\u57288\u6708\u62169\u6708\u5c31\u51c6\u5907\u597d\u4ee5\u4e00\u5b9a\u7684\u80fd\u529b\u63a8\u51faStarlink\u4e92\u8054\u7f51\u670d\u52a1\uff0c\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u795e\u79d8\u7684\u201cUFO-on-a-Stick\u201d\u7528\u6237\u7ec8\u7aef\u4e0d\u4f1a\u518d\u662f\u4e00\u4e2a\u79d8\u5bc6\u3002\n\u5c31\u89c4\u683c\u800c\u8a00\uff0c\u540c\u6837\u7684\u865a\u62df\u7814\u8ba8\u4f1a\u63ed\u793a\u4e86\u7528\u6237\u7ec8\u7aef\u7684\u6b63\u5e38\u8fde\u63a5\u6c34\u5e73\u5c06\u662f\u5927\u7ea6100\u5146\u6bd4\u7279\u6bcf\u79d2(Mbps)\u4e0b\u964d\u548c40\u5146\u6bd4\u7279\u6bcf\u79d2(Mbps)\u4e0a\u5347\u3002\u6839\u636e\u9a6c\u65af\u514b\u7684\u8bf4\u6cd5\uff0cStarlink\u4e92\u8054\u7f51\u5ef6\u8fdf(\u901a\u5e38\u88ab\u79f0\u4e3aping)\u5b9e\u9645\u4e0a\u53ef\u80fd\u6bd4\u5149\u7ea4\u4e92\u8054\u7f51\u66f4\u597d\uff0c\u7248\u672c1\u63d0\u4f9b\u7ea620ms\uff0c\u7248\u672c2\u9996\u6b21\u4eae\u76f8\u65f6\u63d0\u4f9b\u7ea68ms(ETA\u672a\u77e5)\u3002", "note_en": "SpaceX\u2019s nascent Starlink user terminal technology \u2013 the consumer hardware that will connect customers to a vast space-based internet constellation \u2013 is being put through its paces in a series of closed tests with employees, board members, and investors.\n This news comes around the same time as SpaceX took two significant steps towards a beta debut for Starlink internet service, completing the  eighth successful launch of Starlink v1.0 satellites and opening a new web portal where anyone can  sign up for updates on service availability in their region. According to COO and President Gwynne Shotwell, SpaceX means to begin rolling out Starlink internet service once 14 launches are completed and ~840 satellites are in orbit. Whether or not that figure includes SpaceX\u2019s first launch of 60 \u2018v0.9\u2019 Starlink satellites back in May 2019, it\u2019s safe to say that that 14-launch milestone is just two or three months away if the company can sustain and average of two to three launches per month.\n Regardless of the spectacular, well-publicized launch component of SpaceX\u2019s Starlink internet satellite constellation, apparent user terminal testing helps shed light on the customer-facing side of the venture. While currently just shy of invisible, the user terminal is at least as difficult and important a problem to solve as Starlink satellite production and launch \u2013 if not more important  and more challenging.\n It will get even simpler. Just two instructions for Starlink: plug in &amp; point at sky. Can be done in either order.\n\u2014 Elon Musk (@elonmusk)  June 14, 2020\n    As previously discussed on Teslarati, user terminals could easily make or break Starlink regardless of dozens of successful launches or the quality of satellites, ground stations, or the network in general.\n \u201cAside from the quality, reliability, and usability of the network itself (can it stream YouTube/Netflix videos? Game? Teleconference?), the user terminals customers need in order to access said network will also be under the microscope. If SpaceX is unable to mass-produce millions of high-quality, reliable user terminals and ensure that they are easy and intuitive to use, the quality of the Starlink satellite network itself would be effectively irrelevant.  The problem is familiar for users of ISPs (i.e. a majority of humans): your WiFi router and modem can be top-of-the-line but bad internet service makes the quality of your home network irrelevant. Vice-versa, a bad router or modem will also make high-quality internet service effectively irrelevant. In other words, SpaceX fundamentally needs to ensure that neither component threatens the user experience.\u201d   Teslarati.com \u2013 April 23rd, 2020\n In other words, low-quality, buggy user terminals that are hard to set up or require frequent babysitting to ensure a stable connection would make the quality of the satellites SpaceX launches and the ground-based infrastructure it installs irrelevant. Hence the closed focus group-style testing like that described above by investor Steve Jurvetson.\n The  #Falcon9 lights up SLC-40 at dawn to start another successful mission adding to the  #Starlink constellation and 3 new satellites for  @planetlabs!  #SpaceX  pic.twitter.com/2sgUZaMKzL\n\u2014 Richard Angle (@RDAnglePhoto)  June 14, 2020\n  According to Jurvetson, board members (him included) were invited to SpaceX on June 11th or 12th to try out Starlink user terminal prototypes the company is in the midst of developing. Specifically, each board member was given a terminal and asked to set it up themselves in a friendly race to the finish line (establishing an internet connection). Steve ultimately said that the prototype he set up offered the \u201csimplest out-of-box experience imaginable.\u201d\n In fact, SpaceX has already been performing similar tests for several months according to a  virtual seminar hosted by data company Tape Ark earlier this month, performing a similar setup test but with dozens of employees\u2019 spouses rather than board members. While board members of a high-tech rocket company and families of its employees aren\u2019t exactly a random sample of American (or worldwide) consumers, all non-employees tested thus far have been able to set up Starlink terminals and establish an internet connection without issue. That\u2019s no mean feat when one considers that the alternative is setting up a modem and router and activating internet service through an ISP like Comcast, a task that can easily destroy the sanity of even technically-savvy users.\n   CEO Elon Musk himself has always made it clear that simplicity is a priority for Starlink user terminals, recently stating that the final product should be even simpler than the prototypes that board and family members alike had zero difficulty setting up, requiring customers to simply \u201cplug [it] in &amp; point [it] at [the] sky\u201d. Given that SpaceX could be ready to roll out Starlink internet service in  some capacity as early as August or September, it\u2019s safe to say that the mysterious \u201cUFO-on-a-stick\u201d user terminal wont remain a secret for much longer.\n Specs-wise, the same virtual seminar revealed that a normal level of connectivity for a user terminal will be around 100 megabits per second (mbps) down and 40 mbps up.  According to Musk, Starlink internet latency (often known as ping) might actually be  better than fiber internet, offering ~20 ms for Version 1 and ~8 ms when Version 2 debuts (ETA unknown).", "posttime": "2020-06-15 23:28:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6210\u5458,starlink", "title": "SpaceX Starlink\u7528\u6237\u7ec8\u7aef\u5728\u6d4b\u8bd5\u7248\u4e34\u8fd1\u65f6\u7531\u8463\u4e8b\u4f1a\u6210\u5458\u6d4b\u8bd5", "title_en": "SpaceX Starlink user terminals tested by board members as beta nears", "transed": 1, "url": "https://www.teslarati.com/spacex-starlink-user-terminal-beta-test/", "via": "", "real_tags": ["\u6210\u5458", "starlink"]}, {"category": "", "categoryclass": "", "imagename": "0ee8baee1898f6ede6516a1165ebadaa.jpg", "infoid": 1006667, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ed1\u5ba2\u7684\u5386\u53f2\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u573a\u6765\u56de\u7684\u6e38\u620f\uff0c\u653b\u51fb\u8005\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7a81\u7834\u7cfb\u7edf\u7684\u6280\u672f\uff0c\u9632\u5fa1\u8005\u6784\u5efa\u4e86\u963b\u6b62\u8be5\u6280\u672f\u7684\u5bf9\u7b56\uff0c\u9ed1\u5ba2\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7ed5\u8fc7\u7cfb\u7edf\u5b89\u5168\u7684\u65b0\u65b9\u6cd5\u3002\u5468\u4e00\uff0c\u82f1\u7279\u5c14\u5ba3\u5e03\u8ba1\u5212\u76f4\u63a5\u5728\u5176CPU\u4e2d\u8fdb\u884c\u65b0\u7684\u9632\u5fa1\uff0c\u65e8\u5728\u632b\u8d25\u5728\u6613\u53d7\u653b\u51fb\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u6076\u610f\u4ee3\u7801\u7684\u8f6f\u4ef6\u5229\u7528\u3002\n\u63a7\u5236\u6d41\u5b9e\u65bd\u6280\u672f(CET)\u4ee3\u8868\u4e86\u5904\u7406\u5668\u6267\u884c\u6765\u81eaWeb\u6d4f\u89c8\u5668\u3001\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u6216PDF\u9605\u8bfb\u5668\u7b49\u5e94\u7528\u7a0b\u5e8f\u7684\u6307\u4ee4\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u6839\u672c\u53d8\u5316\u3002\u7531\u82f1\u7279\u5c14(Intel)\u548c\u5fae\u8f6f(Microsoft)\u8054\u5408\u5f00\u53d1\u7684CET\u65e8\u5728\u632b\u8d25\u4e00\u79cd\u540d\u4e3a\u9762\u5411\u8fd4\u56de\u7684\u7f16\u7a0b\u6280\u672f\uff0c\u9ed1\u5ba2\u5229\u7528\u8fd9\u79cd\u6280\u672f\u7ed5\u8fc7\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5927\u7ea6\u5341\u5e74\u524d\u5f15\u5165\u7684\u53cd\u5229\u7528\u63aa\u65bd\u3002\u867d\u7136\u82f1\u7279\u5c14\u57282016\u5e74\u9996\u6b21\u53d1\u5e03\u4e86CET\u7684\u5b9e\u65bd\uff0c\u4f46\u8be5\u516c\u53f8\u5468\u4e00\u8868\u793a\uff0c\u5176\u864e\u6e56CPU\u5fae\u4f53\u7cfb\u7ed3\u6784\u5c06\u662f\u7b2c\u4e00\u4e2a\u5305\u62ecCET\u7684\u3002\nROP(\u901a\u5e38\u79f0\u4e3a\u9762\u5411\u8fd4\u56de\u7684\u7f16\u7a0b)\u662f\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5bf9\u8bf8\u5982\u53ef\u6267\u884c\u7a7a\u95f4\u4fdd\u62a4\u548c\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316\u7b49\u4fdd\u62a4\u7684\u54cd\u5e94\uff0c\u8fd9\u4e9b\u4fdd\u62a4\u5728\u4e0d\u523020\u5e74\u524d\u8fdb\u5165\u4e86Windows\u3001MacOS\u548cLinux\u3002\u8fd9\u4e9b\u9632\u5fa1\u63aa\u65bd\u65e8\u5728\u901a\u8fc7\u5bf9\u7cfb\u7edf\u5185\u5b58\u8fdb\u884c\u66f4\u6539\u6765\u963b\u6b62\u6076\u610f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u8f6f\u4ef6\u653b\u51fb\u53ef\u80fd\u9020\u6210\u7684\u635f\u5bb3\u3002\u5373\u4f7f\u6210\u529f\u9501\u5b9a\u7f13\u51b2\u533a\u6ea2\u51fa\u6216\u5176\u4ed6\u6f0f\u6d1e\uff0c\u5229\u7528\u6f0f\u6d1e\u4e5f\u53ea\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\uff0c\u800c\u4e0d\u662f\u81f4\u547d\u7684\u7cfb\u7edf\u5371\u5bb3\u3002\nROP\u4f7f\u653b\u51fb\u8005\u5f97\u4ee5\u593a\u56de\u5236\u9ad8\u70b9\u3002ROP\u653b\u51fb\u4e0d\u662f\u4f7f\u7528\u653b\u51fb\u8005\u7f16\u5199\u7684\u6076\u610f\u4ee3\u7801\uff0c\u800c\u662f\u91cd\u65b0\u8c03\u6574\u826f\u6027\u5e94\u7528\u7a0b\u5e8f\u6216\u64cd\u4f5c\u7cfb\u7edf\u4f8b\u7a0b\u5df2\u7ecf\u653e\u5165\u79f0\u4e3a\u5806\u6808\u7684\u5185\u5b58\u533a\u57df\u7684\u529f\u80fd\u7684\u7528\u9014\u3002ROP\u4e2d\u7684\u201c\u8fd4\u56de\u201d\u6307\u7684\u662f\u5bf9\u4ee3\u7801\u6d41\u91cd\u65b0\u6392\u5e8f\u81f3\u5173\u91cd\u8981\u7684RET\u6307\u4ee4\u7684\u4f7f\u7528\u3002\n\u8d44\u6df1Windows\u5b89\u5168\u4e13\u5bb6\u3001\u5b89\u5168\u516c\u53f8CrowdStrike\u5de5\u7a0b\u526f\u603b\u88c1\u4e9a\u5386\u514b\u65af\u00b7\u7ea6\u5185\u65af\u5e93(Alex Ionescu)\u559c\u6b22\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u826f\u6027\u7684\u7a0b\u5e8f\u5c31\u50cf\u4e00\u5ea7\u6309\u7279\u5b9a\u987a\u5e8f\u5efa\u9020\u7684\u4e50\u9ad8\u79ef\u6728\u5efa\u7b51\uff0c\u90a3\u4e48ROP\u5c31\u4f1a\u4f7f\u7528\u76f8\u540c\u7684\u4e50\u9ad8\u79ef\u6728\uff0c\u4f46\u987a\u5e8f\u4e0d\u540c\u3002\u5728\u8fd9\u6837\u505a\u7684\u8fc7\u7a0b\u4e2d\uff0cROP\u5c06\u8fd9\u5ea7\u5efa\u7b51\u6539\u9020\u6210\u4e86\u4e00\u8258\u5b87\u5b99\u98de\u8239\u3002\u8be5\u6280\u672f\u80fd\u591f\u7ed5\u8fc7\u53cd\u6076\u610f\u8f6f\u4ef6\u9632\u5fa1\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u5185\u5b58\u9a7b\u7559\u4ee3\u7801\u5df2\u7ecf\u88ab\u5141\u8bb8\u6267\u884c\u3002\nCET\u5728CPU\u4e2d\u5f15\u5165\u4e86\u66f4\u6539\uff0c\u4ece\u800c\u521b\u5efa\u4e86\u4e00\u4e2a\u79f0\u4e3a\u63a7\u5236\u5806\u6808\u7684\u65b0\u5806\u6808\u3002\u6b64\u5806\u6808\u4e0d\u80fd\u88ab\u653b\u51fb\u8005\u4fee\u6539\uff0c\u4e5f\u4e0d\u5b58\u50a8\u4efb\u4f55\u6570\u636e\u3002\u5b83\u5b58\u50a8\u5806\u6808\u4e2d\u5df2\u6709\u7684\u4e50\u9ad8\u79ef\u6728\u7684\u8fd4\u56de\u5730\u5740\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u653b\u51fb\u8005\u635f\u574f\u4e86\u6570\u636e\u5806\u6808\u4e2d\u7684\u8fd4\u56de\u5730\u5740\uff0c\u63a7\u5236\u5806\u6808\u4e5f\u4f1a\u4fdd\u7559\u6b63\u786e\u7684\u8fd4\u56de\u5730\u5740\u3002\u5904\u7406\u5668\u53ef\u4ee5\u68c0\u6d4b\u5230\u8fd9\u4e00\u70b9\u5e76\u6682\u505c\u6267\u884c\u3002\nIonescu\u544a\u8bc9\u6211\uff1a\u201c\u56e0\u4e3a\u6ca1\u6709\u9488\u5bf9ROP\u7684\u6709\u6548\u8f6f\u4ef6\u7f13\u89e3\uff0cCET\u5728\u68c0\u6d4b\u548c\u963b\u6b62\u8fd9\u7c7b\u6f0f\u6d1e\u65b9\u9762\u5c06\u975e\u5e38\u6709\u6548\u3002\u201d\u4ee5\u524d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u548c\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u731c\u6d4b\u6216\u63a8\u65adROP\u5df2\u53d1\u751f\uff0c\u6216\u6267\u884c\u53d6\u8bc1\u5206\u6790\uff0c\u6216\u68c0\u6d4b\u5229\u7528\u6f0f\u6d1e\u7684\u7b2c\u4e8c\u9636\u6bb5\u8d1f\u8f7d/\u5f71\u54cd\u3002\n\u5e76\u4e0d\u662f\u8bf4CET\u4ec5\u9650\u4e8e\u9632\u5fa1ROP\u3002CET\u63d0\u4f9b\u4e86\u8bb8\u591a\u989d\u5916\u7684\u4fdd\u62a4\uff0c\u5176\u4e2d\u4e00\u4e9b\u963b\u6b62\u4e86\u88ab\u79f0\u4e3a\u9762\u5411\u8df3\u8f6c\u7684\u7f16\u7a0b\u548c\u9762\u5411\u8c03\u7528\u7684\u7f16\u7a0b\u7684\u5229\u7528\u6280\u672f\uff0c\u4ec5\u4e3e\u4e24\u4f8b\u3002\u7136\u800c\uff0cROP\u662fCET\u6700\u6709\u8da3\u7684\u65b9\u9762\u4e4b\u4e00\u3002\n\u82f1\u7279\u5c14\u5728\u5176CPU\u4e2d\u5185\u7f6e\u4e86\u5176\u4ed6\u5b89\u5168\u529f\u80fd\uff0c\u4f46\u6548\u679c\u4e0d\u4f73\u3002\u4e00\u4e2a\u662f\u82f1\u7279\u5c14\u7684SGX\uff0c\u5373\u8f6f\u4ef6\u4fdd\u62a4\u6269\u5c55\u7684\u7f29\u5199\uff0c\u5b83\u88ab\u8ba4\u4e3a\u4e3a\u5b89\u5168\u654f\u611f\u529f\u80fd(\u5982\u521b\u5efa\u5bc6\u94a5)\u5f00\u8f9f\u4e86\u4e0d\u53ef\u7a7f\u900f\u7684\u53d7\u4fdd\u62a4\u5185\u5b58\u5757\u3002\u82f1\u7279\u5c14\u7684\u53e6\u4e00\u4e2a\u5b89\u5168\u9644\u52a0\u7ec4\u4ef6\u79f0\u4e3a\u878d\u5408\u5b89\u5168\u4e0e\u7ba1\u7406\u5f15\u64ce\uff0c\u6216\u7b80\u79f0\u4e3a\u7ba1\u7406\u5f15\u64ce\u3002\u5b83\u662fIntel CPU\u548c\u82af\u7247\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5b50\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u654f\u611f\u529f\u80fd\uff0c\u5176\u4e2d\u5305\u62ec\u57fa\u4e8e\u56fa\u4ef6\u7684\u53ef\u4fe1\u5e73\u53f0\u6a21\u5757(\u7528\u4e8e\u57fa\u4e8e\u82af\u7247\u7684\u52a0\u5bc6)\u3001UEFI BIOS\u56fa\u4ef6\u8eab\u4efd\u9a8c\u8bc1\u4ee5\u53caMicrosoft System Guard\u548cBitLocker\u3002\n\u7136\u800c\uff0c\u591a\u5e74\u6765\uff0c\u5728\u8fd9\u4e24\u4e2aCPU\u9a7b\u7559\u529f\u80fd\u4e2d\u53d1\u73b0\u7684\u6e90\u6e90\u4e0d\u65ad\u7684\u5b89\u5168\u6f0f\u6d1e\u4f7f\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u5404\u79cd\u653b\u51fb\u3002\u6700\u65b0\u7684SGX\u6f0f\u6d1e\u5c31\u5728\u4e0a\u5468\u62ab\u9732\u3002\n\u4eba\u4eec\u5f88\u5bb9\u6613\u8ba4\u4e3aCET\u540c\u6837\u5f88\u5bb9\u6613\u88ab\u51fb\u8d25\uff0c\u6216\u8005\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5b83\u4f1a\u8ba9\u7528\u6237\u9762\u4e34\u9ed1\u5ba2\u653b\u51fb\uff0c\u5982\u679c\u6ca1\u6709\u589e\u52a0\u4fdd\u62a4\uff0c\u8fd9\u4e9b\u653b\u51fb\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4f46\u786c\u4ef6\u9ed1\u5ba2\u517cSecuringHardware.com\u7814\u7a76\u5458\u7ea6\u745f\u592b\u00b7\u83f2\u8328\u5e15\u7279\u91cc\u514b(Joseph Fitzpatrick)\u8868\u793a\uff0c\u4ed6\u4e50\u89c2\u5730\u8ba4\u4e3aCET\u4f1a\u8868\u73b0\u5f97\u66f4\u597d\u3002\u4ed6\u89e3\u91ca\u8bf4\uff1a\n\u4e0eSGX\u6216ME\u4e4b\u7c7b\u7684\u7279\u6027\u76f8\u6bd4\uff0c\u8ba9\u6211\u5bf9\u8fd9\u7c7b\u7279\u6027\u4e0d\u90a3\u4e48\u6000\u7591\u7684\u4e00\u4e2a\u660e\u663e\u533a\u522b\u662f\uff0c\u8fd9\u4e24\u79cd\u7279\u6027\u90fd\u201c\u6dfb\u52a0\u201d\u4e86\u5b89\u5168\u7279\u6027\uff0c\u800c\u4e0d\u662f\u5f3a\u5316\u73b0\u6709\u7279\u6027\u3002\u6211\u57fa\u672c\u4e0a\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u5916\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7ba1\u7406\u5c42\u3002\u65b0\u4ea4\u6240\u589e\u52a0\u4e86\u7406\u8bba\u4e0a\u4e0d\u5e94\u8be5\u88ab\u6076\u610f\u6216\u53d7\u635f\u64cd\u4f5c\u7cfb\u7edf\u64cd\u7eb5\u7684\u64cd\u4f5c\u6a21\u5f0f\u3002CET\u53ea\u662f\u6dfb\u52a0\u4e86\u4e00\u4e9b\u673a\u5236\u6765\u963b\u6b62\u6b63\u5e38\u64cd\u4f5c-\u8fd4\u56de\u5230\u5806\u6808\u4e4b\u5916\u7684\u5730\u5740\u548c\u8df3\u51fa\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u4f4d\u7f6e-\u6210\u529f\u5b8c\u6210\u3002CET\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u53ea\u5141\u8bb8\u6b63\u5e38\u64cd\u4f5c\u3002\u5b83\u4e0d\u4f1a\u6388\u4e88\u653b\u51fb\u8005\u8bbf\u95ee\u66f4\u591a\u529f\u80fd\u7684\u6743\u9650\u3002\n\u4e00\u65e6\u652f\u6301CET\u7684CPU\u53ef\u7528\uff0c\u4fdd\u62a4\u5c06\u4ec5\u5728\u5904\u7406\u5668\u8fd0\u884c\u5177\u6709\u5fc5\u8981\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf\u65f6\u624d\u8d77\u4f5c\u7528\u3002\u4e0a\u4e2a\u6708\u53d1\u5e03\u7684Windows10 2004\u7248\u63d0\u4f9b\u4e86\u8fd9\u79cd\u652f\u6301\u3002\u82f1\u7279\u5c14\u4ecd\u672a\u900f\u9732\u864e\u6e56\u5904\u7406\u5668\u5c06\u4e8e\u4f55\u65f6\u53d1\u5e03\u3002\u867d\u7136\u8fd9\u79cd\u4fdd\u62a4\u53ef\u4ee5\u7ed9\u9632\u5fa1\u8005\u4e00\u4e2a\u91cd\u8981\u7684\u65b0\u5de5\u5177\uff0c\u4f46Ionescu\u548c\u4ed6\u7684\u540c\u4e8bYarden Shafir\u5df2\u7ecf\u4e3a\u5b83\u8bbe\u8ba1\u4e86\u65c1\u8def\u3002\u9884\u8ba1\u4ed6\u4eec\u5c06\u5728\u5341\u5e74\u5185\u4ee5\u73b0\u5b9e\u4e16\u754c\u7684\u653b\u51fb\u544a\u7ec8\u3002", "note_en": "The history of hacking has largely been a back-and-forth game, with attackers devising a technique to breach a system, defenders constructing a countermeasure that prevents the technique, and hackers devising a new way to bypass system security. On Monday, Intel is announcing its plans to bake a new parry directly into its CPUs that\u2019s designed to thwart software exploits that execute malicious code on vulnerable computers.\n Control-Flow Enforcement Technology, or CET, represents a fundamental change in the way processors execute instructions from applications such as Web browsers, email clients, or PDF readers. Jointly developed by Intel and Microsoft, CET is designed to thwart a technique known as  return-oriented programming, which hackers use to bypass anti-exploit measures software developers introduced about a decade ago. While Intel  first published its implementation of CET in 2016, the company on Monday is saying that its Tiger Lake CPU microarchitecture will be the first to include it.\n ROP, as return-oriented programming is usually called, was software exploiters\u2019 response to protections such as  Executable Space Protection and  address space layout randomization, which made their way into Windows, macOS, and Linux a little less than two decades ago. These defenses were designed to significantly lessen the damage software exploits could inflict by introducing changes to system memory that prevented the execution of malicious code. Even when successfully targeting a  buffer overflow or other vulnerability, the exploit resulted only in a system or application crash, rather than a fatal system compromise.\n ROP allowed attackers to regain the high ground. Rather than using malicious code written by the attacker, ROP attacks repurpose functions that benign applications or OS routines have already placed into a region of memory known as the stack. The \u201creturn\u201d in ROP refers to use of the RET instruction that\u2019s central to reordering the code flow.\n  Alex Ionescu, a veteran Windows security expert and VP of engineering at security firm CrowdStrike, likes to say that if a benign program is like a building made of Lego bricks that were built in a specific sequence, ROP uses the same Lego pieces but in a different order. In so doing, ROP converts the building into a spaceship. The technique is able to bypass the anti-malware defenses because it uses memory-resident code that\u2019s already permitted to be executed.\n CET introduces changes in the CPU that create a new stack called the control stack. This stack can\u2019t be modified by attackers and doesn\u2019t store any data. It stores the return addresses of the Lego bricks that are already in the stack. Because of this, even if an attacker has corrupted a return address in the data stack, the control stack retains the correct return address. The processor can detect this and halt execution.\n \u201cBecause there is no effective software mitigation against ROP, CET will be very effective at detecting and stopping this class of vulnerability,\u201d Ionescu told me. \u201cPreviously, operating systems and security solutions had to guess or infer that ROP had happened, or perform forensic analysis, or detect the second stage payloads/effect of the exploit.\u201d\n Not that CET is limited to defenses against ROP. CET provides a host of additional protections, some of which thwart exploitation techniques known as  jump-oriented programming and call-oriented programming, to name just two. ROP, however, is among the most interesting aspects of CET.\n  Intel has built other security functions into its CPUs with less-than-stellar results. One is Intel\u2019s SGX, short for Software Guard eXtension, which is supposed to carve out impenetrable chunks of protected memory for security-sensitive functions such as the creation of cryptographic keys. Another security add-on from Intel is known as the Converged Security and Management Engine, or simply the Management Engine. It\u2019s a subsystem inside Intel CPUs and chipsets that implements a host of sensitive functions, among them the firmware-based Trusted Platform Module used for silicon-based encryption, authentication of UEFI BIOS firmware, and the Microsoft System Guard and BitLocker.\n A  steady stream of  security flaws discovered in  both CPU-resident  features, however, has made them vulnerable to a variety of attacks over the years. The most recent SGX vulnerabilities were  disclosed just last week.\n It\u2019s tempting to think that CET will be similarly easy to defeat, or worse, will expose users to hacks that wouldn\u2019t be possible if the protection hadn\u2019t been added. But Joseph Fitzpatrick, a hardware hacker and a researcher at  SecuringHardware.com, says he\u2019s optimistic CET will perform better. He explained:\n One distinct difference that makes me less skeptical of this type of feature versus something like SGX or ME is that both of those are \u201cadding on\u201d security features, as opposed to hardening existing features. ME basically added a management layer outside the operating system. SGX adds operating modes that theoretically shouldn&#39;t be able to be manipulated by a malicious or compromised operating system. CET merely adds mechanisms to prevent normal operation\u2014returning to addresses off the stack and jumping in and out of the wrong places in code\u2014from completing successfully. Failure of CET to do its job only allows normal operation. It doesn&#39;t grant the attacker access to more capabilities.\n Once CET-capable CPUs are available, the protection will work only when the processor is running an operating system with the necessary support. Windows 10 Version 2004 released last month provides that support. Intel still isn\u2019t saying when Tiger Lake CPUs will be released. While the protection could give defenders an important new tool, Ionescu and fellow researcher Yarden Shafir have  already devised bypasses for it. Expect them to end up in real-world attacks within the decade.", "posttime": "2020-06-15 23:11:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u82f1\u7279\u5c14,\u6076\u610f\u8f6f\u4ef6,bake,cet", "title": "\u82f1\u7279\u5c14\u5c06\u5f88\u5feb\u5c06\u53cd\u6076\u610f\u8f6f\u4ef6\u9632\u5fa1\u529f\u80fd\u76f4\u63a5\u5d4c\u5165\u5176CPU", "title_en": "Intel Will Soon Bake Anti-malware Defenses Directly Into its CPUs", "transed": 1, "url": "https://arstechnica.com/information-technology/2020/06/intel-will-soon-bake-anti-malware-defenses-directly-into-its-cpus/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u82f1\u7279\u5c14", "\u6076\u610f\u8f6f\u4ef6", "bake", "cet"]}, {"category": "", "categoryclass": "", "imagename": "bef0e6b2c4d8d3346e8e8b90f113164a.png", "infoid": 1006666, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u4e2a\u65e2\u559c\u6b22\u6570\u636e\u53c8\u559c\u6b22\u8db3\u7403(\u4ece\u8fd9\u91cc\u5f00\u59cb\u79f0\u4e3a\u8db3\u7403)\u7684\u7403\u8ff7\uff0c\u6211\u89c9\u5f97\u8db3\u7403\u8ff7\u5bf9\u7edf\u8ba1\u548c\u6570\u636e\u5206\u6790\u7684\u6001\u5ea6\u4ee4\u4eba\u8d39\u89e3\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u7406\u89e3\uff0c\u56e0\u4e3a\u591a\u5e74\u6765\u7b80\u5355\u7684\u7edf\u8ba1\u6570\u636e\u662f\u5a92\u4f53\u552f\u4e00\u5173\u6ce8\u7684\u4e8b\u60c5\u3002\u8db3\u7403\u662f\u4e00\u9879\u590d\u6742\u7684\u56e2\u961f\u8fd0\u52a8\uff0c\u5177\u6709\u6df1\u5ea6\u4e92\u52a8\uff0c\u56e0\u6b64\u8ba1\u5165\u4e8b\u4ef6(\u8fdb\u7403\u3001\u52a9\u653b\u3001\u94f2\u7403\u7b49)\u3002\u8fd9\u662f\u4e0d\u591f\u7684\u3002\u672c\u7b14\u8bb0\u672c\u5411\u60a8\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u9010\u573a\u6bd4\u8d5b\u6570\u636e\u6765\u5206\u6790\u8db3\u7403\u6bd4\u8d5b\uff0c\u663e\u793a\u81ea\u5b9a\u4e49\u6d4b\u91cf\u548c\u53ef\u89c6\u5316\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u9879\u8fd0\u52a8\u3002\u514d\u8d23\u58f0\u660e\uff1a\u6211\u662f\u7403\u8ff7\uff0c\u4e0d\u662f\u4e13\u5bb6\u3002[\u5fb7\u56fd\u56fd\u5bb6\u961f](\u5fb7\u56fd\u56fd\u5bb6\u961f)\u548c[\u66fc\u57ce](\u5fb7\u56fd\u56fd\u5bb6\u961f)\u90fd\u6709\u4e13\u95e8\u4ece\u4e8b\u6570\u636e\u5206\u6790\u7684\u56e2\u961f\uff0c\u6280\u672f/\u65b0\u95fb/10959864/Germanys-World-Cup-Tateby-Shared-by-data.html(\u5fb7\u56fd\u56fd\u5bb6\u961f)\u548c[\u66fc\u57ce](2014\u5e74/01/Feature/the-Winning-Format)\u90fd\u81f4\u529b\u4e8e\u6570\u636e\u5206\u6790\uff0c\u6700\u5148\u8fdb\u7684\u6c34\u5e73\u8fdc\u8fdc\u9ad8\u4e8e\u8fd9\u91cc\u6240\u663e\u793a\u7684\u6c34\u5e73\u3002(\u6ce8\uff1a\u5fb7\u56fd\u961f\u56fd\u5bb6\u961f\u81f4\u529b\u4e8e\u6570\u636e\u5206\u6790)\u548c[\u66fc\u57ce](\u66fc\u57ce)\u90fd\u6709\u81f4\u529b\u4e8e\u6570\u636e\u5206\u6790\u7684\u6574\u4e2a\u56e2\u961f\uff0c\u800c\u4e14\u6700\u5148\u8fdb\u7684\u6c34\u5e73\u8fdc\u8fdc\u9ad8\u4e8e\u8fd9\u91cc\u6240\u663e\u793a\u7684\u6c34\u5e73\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u5206\u6790\u5f88\u5c11\u516c\u5f00\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u662f\u6709\u7528\u7684(\u6216\u8005\u81f3\u5c11\u662f\u6709\u8da3\u7684)\u3002\u6211\u5e0c\u671b\u5728\u672a\u6765\u7ee7\u7eed\u73a9\u5f04\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u5206\u4eab\u6709\u7528\u7684\u89c1\u89e3\u3002\u8bf7\u968f\u65f6\u5173\u6ce8GitHub\u5b58\u50a8\u5e93\uff0c\u6216\u8005\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff1arjtavares@gmail.com\u3002#\u6570\u636e\u5907\u6ce8\u672c\u5b9e\u51b5\u6570\u636e\u6765\u81ea\u516c\u5171\u7f51\u7ad9\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u6216\u6b63\u786e\u6027\u3002\u7528\u6765\u6536\u96c6\u7684\u8fc7\u7a0b\u5c06\u662f\u5b83\u81ea\u5df1\u5e16\u5b50\u7684\u4e3b\u9898\uff0c\u6240\u4ee5\u8bf7\u7ee7\u7eed\u5173\u6ce8\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6240\u6709\u57fa\u4e8e\u539f\u59cb\u6570\u636e\u7684\u8ba1\u7b97\u90fd\u5305\u542b\u5728\u8fd9\u4e2a\u7b14\u8bb0\u672c\u4e2d\uff0c\u5e94\u8be5\u53d7\u5230\u8d28\u7591\u3002\u6211\u5f88\u60f3\u5f97\u5230\u4e00\u4e9b\u53cd\u9988\u3002\n\u6a21\u5757\u5bfc\u5165\u548c\u6570\u636e\u51c6\u5907\u3002\u9664\u975e\u60a8\u60f3\u81ea\u5df1\u64cd\u4f5c\u6570\u636e\uff0c\u5426\u5219\u53ef\u4ee5\u5ffd\u7565\u6b64\u90e8\u5206\u3002\n\u5c06\u718a\u732b\u4f5c\u4e3aPD\u5bfc\u5165Numpy\u4f5c\u4e3aNP\u5c06matplotlib.pylot\u4f5c\u4e3aPLT\u4eceFootyscript\u5bfc\u5165.Foyviz\u5bfc\u5165DRAW_EVENTS\uff0cDRAW_PITCH\uff0cTYPE_NAMES#Ploting\u8bbe\u7f6e%matplotlib inlinepd.options.display.mpl_style=&#39\uff1bdefault&#39\uff1b\ndf=pd.read_csv(&#34\uff1b../datasets/germany-vs-argentina-731830.csv&#34\uff1b\uff0ccoding=&#39\uff1butf-8&39\uff1b\uff0cindex_col0)#\u6807\u51c6\u7ef4\u5ea6x_SIZE=105.0y_SIZE=68.0box_Height=16.5y*2+7.32box_width=16.5y_box_start=y_SIZE/2-BOX_HEIGH/2Y_BOX_END=y_SIZE/2+BOX_HEIGH/2#\u6570\u636e\u96c6\u6bd4\u4f8b\u4e3a100\u00d7100\u3002\u6807\u51c6\u5316\u6807\u51c6\u8db3\u7403\u573a\u5927\u5c0fdf[&#39\uff1bx#39\uff1b]=df[&#39\uff1bx&#39\uff1b]/100*x_size df[&#39\uff1by&#39\uff1b]=df[&#39\uff1by&#39\uff1b]/100*y_sizedf[&#39\uff1bto_x&39\uff1b]=df[&#39\uff1bto_x&39\uff1b]/100*x_sizedf[&#39\uff1bto_y\u3002]=df[&#39\uff1bto_y&#39\uff1b]/100*y_size#\u6839\u636e\u539f\u59cbdf[&#39\uff1bcount&#39\uff1b]=1df[&#39\uff1bdx&#39\uff1b]=df[&#39\uff1bto_x&#39\uff1b]-df[&#39\uff1bx&#39\uff1b]df[&#39\uff1bdy&#39\uff1b]=df[&#39\uff1bto_y&#39\uff1b]=df[&#39\uff1bcount&#39\uff1b]=1df[&#39\uff1bdx&#39\uff1b]-df[&#39\uff1bto_y&#39\uff1b]=df[&#39\uff1bto_y&#39\uff1b]-df[&#39\uff1by&#39\uff1b]df[&#39\uff1b\u8ddd\u79bb&#39\uff1b]=np.sqrt(df[&#39\uff1bdx&#39\uff1b]**2+df[&#39\uff1bdy&#39\uff1b]**2)df[&#39\uff1b\u4e94\u5206\u949f&#39\uff1b]=np.\u5730\u677f(df[&#39\uff1bmin&#39\uff1b]/5)*5df[&#39\uff1btype_name&#39\uff1b]=df[&#39\uff1b\u7c7b\u578b&#39\uff1b]\u3002map(type_names.get)df[&#39\uff1bto_box&#39\uff1b]=(df[&#39\uff1bto_x&#39\uff1b]&gt\uff1bx_size-box_width)&amp\uff1b(y_box_start&lt\uff1bdf[&#39\uff1bto_y&#39\uff1b])&amp\uff1b(df[&#39\uff1bto_y&#39\uff1b]&lt\uff1by_box_end)df[&#39\uff1bFrom_box&#39\uff1b]=(df[&#39\uff1bx&#39\uff1b]&gt\uff1bx_size-box_width)&amp\uff1b(y_box_start&lt\uff1bdf[&#39\uff1by&#39\uff1b])&amp\uff1b(df[&#39\uff1by&#39\uff1b]&lt\uff1by_box_end)df[&#39\uff1bon_offense&#39\uff1b]=df[&#39\uff1bx&#39\uff1b]=df[&#39\uff1bx&#39\uff1b]&gt\uff1bx_size/2\u3002\n#\u5c06\u4e3b\u6570\u636e\u5e27\u9884\u5206\u7247\u5728\u8f83\u5c0f\u7684DFS\u4e2d\uff0c\u8fd9\u4e9bDFS\u5c06\u6cbf\u8bb0\u4e8b\u672c\u91cd\u590d\u4f7f\u7528df\u5468\u671f1=df[df[&#39\uff1b\u53e5\u53f7&#39\uff1b]==1]dfP1Shots=dfPerod1[dfPerod1[&#39\uff1b\u7c7b\u578b&#39\uff1b].isin([13\uff0c14\uff0c15\uff0c16])]dfPerio2=df[df[&#39\uff1b\u53e5\u53f7&#39\uff1b]==2]dfP2Shots([13\uff0c14\uff0c15\uff0c16])]dfPerod2=df[df[&#39\uff1b\u53e5\u53f7&#39\uff1b]==2]dfP2Shots\u3002].isin([13\uff0c14\uff0c15\uff0c16])]dfExtraTime=df[df[&#39\uff1bPERIOD&#39\uff1b]&gt\uff1b2]dfETShots=dfExtraTime[dfExtraTime[&#39\uff1btype&#39\uff1b].isin([13\uff0c14\uff0c15\uff0c16])]\u3002\n\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u4e00\u4e0b\u4e0a\u534a\u573a\u7684\u60c5\u51b5\u3002\u4e0b\u9762\u7684\u56fe\u8868\u663e\u793a\u4e86\u8d5b\u573a\u4e0a\u53d1\u751f\u6700\u591a\u4e8b\u4ef6\u7684\u5730\u65b9(\u6b63\u6570\u5bf9\u5e94\u4e8e\u5fb7\u56fd\u961f\u7684\u8fdb\u653b\u534a\u573a\uff0c\u8d1f\u6570\u5bf9\u5e94\u4e8e\u9632\u5b88\u534a\u573a)\uff0c\u5e76\u6307\u51fa\u4e86\u6bcf\u652f\u7403\u961f\u7684\u6295\u7bee\u547d\u4e2d\u7387\u3002\nFIG=PLT.Figure(FigSize=(12\uff0c4))avg_x=(dfPerod1[dfPerod1[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b)\u3002Apply(NP.means)[&#39\uff1bx&#39\uff1b]-dfPerod1[dfPerod1[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u963f\u6839\u5ef7&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b)\u3002Apply(np.means)[&#39\uff1bx&#39\uff1b])PLT.stacklot(list(avg_x.index.values)\uff0cList([x if x&gt\uff1b0 Else 0 for x in avg_x]))PLT.stacklot(list(avg_x.index.values)\uff0clist([x if x&lt\uff1b0 Else 0 for x in avg_x]))for i\uff0c\u5728dfP1Shots.iterrow()\u4e2d\u62cd\u6444\uff1a]y=avg_x.ix[\u62cd\u6444[&#39\uff1bmin&#39\uff1b]]\u4fe1\u53f7=1\uff0c\u5982\u679c\u62cd\u6444[&#39\uff1b\u56e2\u961f\u540d\u79f0&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b\u5426\u5219-1 pl\nDRAW_PING()DRAW_EVENTS(dfPerod1[(dfPerod1[&#39\uff1btype&#39\uff1b]]==1)&amp\uff1b(dfPerod1[&#39\uff1bResult&#39\uff1b]==1)&amp\uff1b(dfPerod1[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u963f\u6839\u5ef7&#39\uff1b)]\uff0cMirror_away=True)PLT.text(x_size/4\uff0c-3\uff0c&#34\u3002\uff0ccolor=&#39\uff1bBlack&#39\uff1b\uff0cBBox=dict(facecolor=&#39\uff1bWhite&39\uff1b\uff0calpha=0.5)\uff0c\u6c34\u5e73\u5bf9\u9f50=&#39\uff1bcenter&#39\uff1b)PLT.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u56fd\u9632&34\uff1b\uff0ccolor=#39\uff1bBlack&39\uff1b\uff0cbbox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)\uff0cBBox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)Plt.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u56fd\u9632\uff0ccolor=#39\uff1bBlack&39\uff1b\uff0cBBox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)\u3002\u4e2d\u950b)PLT.title(\u963f\u6839\u5ef7\u961f\u4e0a\u534a\u573a\u4f20\u7403)\u3002\n\u963f\u6839\u5ef7\u961f\u53ea\u670928%\u7684\u4f20\u7403\u662f\u5728\u8fdb\u653b\u534a\u573a\u8fdb\u884c\u7684\uff0c\u800c\u5fb7\u56fd\u961f\u7684\u4f20\u7403\u6bd4\u4f8b\u662f61%\u3002\u5c3d\u7ba1\u5fb7\u56fd\u961f\u5728\u8fdb\u653b\u578b\u534a\u573a\u8e22\u7403\uff0c\u4f46\u4ed6\u4eec\u7684\u4f20\u7403\u51c6\u786e\u7387\u8981\u9ad8\u5f97\u591a\uff0c\u8fd9\u8bc1\u660e\u4e86\u4ed6\u4eec\u4ee4\u4eba\u60ca\u53f9\u7684\u4e2d\u573a\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4f18\u52bf\u5e76\u6ca1\u6709\u4f53\u73b0\u5728\u673a\u4f1a\u548c\u6295\u7bee\u4e0a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5fb7\u56fd\u961f\u5f88\u96be\u8fdb\u5165\u963f\u6839\u5ef7\u7684\u7981\u533a\u3002\nDRAW_PING()DRAW_EVENTS(df[(df[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(df[&#39\uff1bfrom_box&#39\uff1b]=false)&amp\uff1b(df[&#39\uff1b\u53e5\u53f7&#39\uff1b]==1)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==39\uff1b]==1)]\uff0cMIRROR_AWAY=True)Df[(DF[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(DF[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(DF[&#39\uff1bFROM_BOX&#39\uff1b]==FALSE)&amp\uff1b(DF[&#39\uff1b\u53e5\u70b9&#39\uff1b]==1)&amp\uff1b(DF[&#39\uff1b\u7ed3\u679c&#39\uff1b]==0)]\uff0cMIRROR_Away=True\uff0calpha=0.2)DRAW_EVENTS(dfP1Shots\uff0cMIRROR_Away=True\uff0cbase_color=&#39\uff1b#a93e3e&#39\uff1b)PLT.text(x_size/4\uff0c-3\uff0c&#34\uff1b\u5fb7\u56fd\u56fd\u9632&34\uff1b\uff0ccolor=&#39\uff1b\u9ed1\uff1b\uff0cbbox=dict(facecolor=&#39\uff1b\u767d\u8272&#39\uff1b)PLT.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u7684\u9632\u5b88\uff0ccolor=&#39\uff1b\u9ed1\u8272\uff1b\uff0cbbox=dict(facecolor=&#39\uff1b\u767d\u8272&39\uff1b\uff0calpha=0.5)\uff0cHorontalAlignment=&#39\uff1bcenter&#39\uff1b)\u3002\n\u572816\u6b21\u5fb7\u56fd\u961f\u4f01\u56fe\u8fdb\u5165\u7981\u533a\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u6b21\u5c04\u95e8\uff1a\u6700\u540e\u4e00\u6b21\u89d2\u7403\uff0c\u8c6a\u4f0a\u5fb7\u65af\u51fb\u4e2d\u4e86\u95e8\u67f1\u3002\n\u514b\u83b1\u9ed8\u5728\u7b2c19\u5206\u949f\u53d7\u4f24\uff0c\u4f4612\u5206\u949f\u540e\u624d\u88ab\u6362\u4e0b\u3002\u8fd9\u5305\u62ec\u5fb7\u56fd\u4e0a\u534a\u5e74\u6700\u7cdf\u7cd5\u7684\u65f6\u671f\uff0c\u6b63\u5982\u4e0a\u9762\u7684\u4e0a\u534a\u5e74\u6982\u51b5\u56fe\u6240\u793a\u3002[\u62a5\u9053\u79f0\u4ed6\u7684\u884c\u4e3a\u5f88\u6df7\u4e71](http\uff1a//www.theGuardian.com/focal/2014/jul/17/Christoph-Kramer-\u5fb7\u56fd-\u8111\u9707\u8361-\u4e16\u754c\u676f-\u51b3\u8d5b-2014)\uff0c\u6570\u636e\u663e\u793a\uff0c\u5728\u53d7\u4f24\u548c\u66ff\u8865\u671f\u95f4\uff0c\u514b\u83b1\u9ed8\u57fa\u672c\u4e0a\u7f3a\u5e2d\u4e86\uff1a\u4ed6\u552f\u4e00\u7684\u884c\u52a8\u662f\u4e00\u6b21\u6210\u529f\u7684\u63a5\u7403\u548c\u4f20\u7403\uff0c\u4ee5\u53ca\u4e00\u6b21\u5931\u53bb\u63a7\u7403\u6743\u3002\n\u5206\u6570={&#39\uff1b1-\u9635\u5bb9&#39\uff1b\uff1a0\uff0c#39\uff1b1-\u5e26\u7403\u8dd1\u52a8&#39\uff1b\uff1a0.5\uff0c&#39\uff1b1-\u63a5\u53d1\u7403&#39\uff1b\uff1a0\uff0c&#39\uff1b1-\u4f20\u7403&#39\uff1b\uff1a1\uff0c&#39\uff1b0-\u4f20\u7403&#39\uff1b\uff1a-1\uff0c&#39\uff1b0-\u94f2\u7403(\u65e0\u63a7\u5236)&#39\uff1b\uff1a0\uff0c&#39\uff1b1-\u6e05\u7403(\u7403\u573a\u5916)&#39\uff1b\uff1a0.5\uff0c&#39\uff1b0-\u5931\u53bb\u5bf9\u7403\u7684\u63a7\u5236&#39\uff1b\uff1a-1\uff0c&#39\uff1b1-\u66ff\u8865(\u5173\u95ed)&#39\uff1b\uff1a0}dfKramer[&#39\uff1b\u5f97\u5206&#39\uff1b]=dfKramer[&#39\uff1baction&#39\uff1b]\u3002map(scrip.get)\u3002\n\u4e0b\u534a\u573a\u8981\u5e73\u8861\u5f97\u591a\u3002\u6211\u4eec\u590d\u5236\u4e86\u4e0e\u4e0a\u534a\u5e74\u76f8\u540c\u7684\u56fe\u8868\uff0c\u8fd9\u8bc1\u5b9e\u4e86\u8fd9\u79cd\u770b\u6cd5\u3002\nFIG=PLT.Figure(FigSize=(12\uff0c4))avg_x=(dfPerod2[dfPerod2[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b)\u3002Apply(NP.means)[&#39\uff1bx&#39\uff1b]-dfPerio2[dfPerod2[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u963f\u6839\u5ef7&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b)\u3002Apply(NP.means)[&#39\uff1bx&#39\uff1b])PLT.stacklot(list(avg_x.inde.values)\uff0cList([x if x&gt\uff1b0 Else 0 for x for x in avg_x]))PLT.stacklot(list(avg_x.index.values)\uff0clist([x if x&lt\uff1b0 Else 0 for x in avg_x]))\uff0c\u62cd\u6444\u5728dfP2Shots.iterrow()\u4e2d\u3002]y=avg_x.ix[Shot[&#39\uff1bmin&#39\uff1b]]Signal=1 if shot[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1bElse-1 PLT.Annotate(s=(Shot[&#39\uff1btype_name&#39\uff1b]+&#39\uff1b+Shot[&#39\uff1bTeam_Name&#39\uff1b][0]+&#34\uff1b)&#34\uff1b)\uff0cxy=(x\uff0cy)\uff0cxytext=(x-5\uff0cy+30*\u4fe1\u53f7)\uff0carrowprops=dict(facecolor=&#39\uff1bBlack&#39\uff1b)PLT.gca().set_xlabel(&#39\uff1b\u5206\u949f&#39\uff1b)PLT.title(&#34\uff1b\u4e0b\u534a\u90e8\u8f6e\u5ed3&#34\uff1b)\nDRAW_PING()DRAW_EVENTS(df[(df[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(df[&#39\uff1bfrom_box&#39\uff1b]=false)&amp\uff1b(df[&#39\uff1b\u53e5\u53f7&#39\uff1b]==2)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==39\uff1b]==1)]\uff0cMIRROR_AWAY=True)Df[(DF[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(DF[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(DF[&#39\uff1bFROM_BOX&#39\uff1b]==FALSE)&amp\uff1b(DF[&#39\uff1b\u53e5\u70b9&#39\uff1b]=2)&amp\uff1b(DF[&#39\uff1b\u7ed3\u679c&#39\uff1b]==0)]\uff0cMIRROR_AWAY=True\uff0calpha=0.2)DRAW_EVENTS(dfP2Shots\uff0cMIRROR_Away=True\uff0cbase_color=&#39\uff1b#a93e3e&#39\uff1b)PLT.text(x_size/4\uff0c-3\uff0c&#34\uff1b\u5fb7\u56fd\u56fd\u9632&34\uff1b\uff0ccolor=#39\uff1b\u9ed1\u8272\uff1b\uff0cbbox=dict(facecolor=&#39\uff1b\u767d\u8272&#39\uff1b\uff0c)PLT.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u7684\u9632\u5b88\uff0ccolor=&#39\uff1b\u9ed1\u8272\uff1b\uff0cbbox=dict(facecolor=&#39\uff1b\u767d\u8272&39\uff1b\uff0calpha=0.5)\uff0cHorontalAlignment=&#39\uff1bcenter&#39\uff1b)\u3002\n\u5c3d\u7ba1\u5fb7\u56fd\u961f\u5728\u4e0b\u534a\u573a\u66f4\u6210\u529f\u5730\u8fdb\u5165\u7981\u533a\uff0c\u4f46\u53ea\u6709\u4f20\u7403\u624d\u80fd\u8ba9\u5fb7\u56fd\u961f\u5728\u7981\u533a\u5185\u5c04\u95e8\u3002\nFIG=PLT.Figure(FigSize=(12\uff0c4))avg_x=(dfExtraTime[dfExtraTime[dfExtraTime[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b))\u3002Apply(NP.means)[&#39\uff1bx&#39\uff1b]-dfExtraTime[dfExtraTime[&#39\uff1bTeam_Name&#39\uff1b]==&#39\uff1b\u963f\u6839\u5ef7&#39\uff1b].groupby(&#39\uff1bmin&#39\uff1b)\u3002Apply(NP.means)[&#39\uff1bx&#39\uff1b].reindex(dfExtraTime[&#39\uff1bmin&#39\uff1b].Unique()\uff0cFill_Value=0))PLT.stacklot(list(avg_x.index.values)\uff0clist([x if x&gt\uff1b0 Else 0 for x for x in avg_x]))PLT.stacklot(list(avg_x.index.values)\uff0clist([x if x&lt\u3002\u5bf9\u4e8ei\uff0c\u5728dfETShots\u4e2d\u62cd\u6444\u3002iterows()\uff1ax=\u62cd\u6444[&#39\uff1bmin&#39\uff1b]y=avg_x.ix[\u62cd\u6444[&#39\uff1bmin&#39\uff1b]]\u4fe1\u53f7=1\uff0c\u5982\u679c\u62cd\u6444[&#39\uff1b\u56e2\u961f\u540d\u79f0&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b\u5426\u5219-1 PLT.Annotate(s=(\u62cd\u6444[&#39\uff1btype_name&#39\uff1b])\u4fe1\u53f7=1\u5982\u679c\u62cd\u6444[&#39\uff1b\u56e2\u961f\u540d\u79f0&#39\uff1b]==&#39\uff1b\u5fb7\u56fd&#39\uff1b\u5426\u5219-1 PLT.Annotate(s=(\u62cd\u6444[&#39\uff1b\u7c7b\u578b\u540d\u79f0&#39\u3002(&#39\uff1b+Shot[&#39\uff1bTeam_Name&#39\uff1b][0]+&#34\uff1b)&#34\uff1b)\uff0cxy=(x\uff0cy)\uff0cxytext=(x-5\uff0cy+20*Signal)\uff0cArrowprops=dict(facecolor=&#39\uff1bBlack&#39\uff1b)PLT.gca().SET_xLabel(&#39\uff1b\u5206\u949f&#39\uff1b)PLT.title(&#34\uff1b\u52a0\u65f6\u914d\u7f6e\u6587\u4ef6&\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5fb7\u56fd\u961f\u7684\u7b2c\u56db\u8282\u4e0e\u6bd4\u8d5b\u7684\u5176\u4f59\u90e8\u5206\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u5fb7\u56fd\u961f\u5728\u7403\u573a\u4e0a\u6253\u5f97\u5c11\u4e86\u5f88\u591a\uff0c\u4f20\u7403\u6b21\u6570\u4e5f\u660e\u663e\u51cf\u5c11\uff1a\u663e\u793a\u51fa\u5b83\u8bd5\u56fe\u63a7\u5236\u6bd4\u8d5b\uff0c\u653e\u6162\u901f\u5ea6\uff0c\u653e\u5f03\u9632\u7ebf\u3002\u5982\u679c\u6211\u4eec\u770b\u4e00\u4e0b\u8fdb\u7403\u540e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u8fd9\u4e00\u70b9\u5c31\u66f4\u52a0\u660e\u663e\uff1a\nDRAW_PING()DRAW_EVENTS(df.ix[Goal_ix+1\uff1a][(df[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(df[&#39\uff1bfrom_box&#39\uff1b]==false)&amp\uff1b(df[&#39\uff1bto_box&#39\uff1b]==False\uff1b]==1)]\uff0cMirror_away=True)Df.ix[Goal_ix+1\uff1a][(DF[&#39\uff1bto_box&#39\uff1b]==True)&amp\uff1b(df[&#39\uff1btype&#39\uff1b]==1)&amp\uff1b(df[&#39\uff1bfrom_box&#39\uff1b]==false)&amp\uff1b(df[&#39\uff1bto_box&#39\uff1b]==39\uff1b]==0)]\uff0cMIRROR_AWAY=True\uff0calpha=0.2)DRAW_EVENTS(df.ix[Goal_ix+1\uff1a][df[&#39\uff1btype&#39\uff1b].isin([13\uff0c14\uff0c15\uff0c16])]\uff0cMIRROR_Away=True\uff0cbase_color=&#39\uff1b#a93e3e&#39\uff1b)PLT.text(x_size/4\uff0c-3\uff0c&#34\uff1b\u5fb7\u56fd&#39\uff1b\u9632\u5fa1&#34\uff1b\uff0ccolor=&#39\uff1bBlack&#39\uff1b\uff0cBBox=dict(facecolor=&#39\uff1bWhite&39\uff1b\uff0calpha=0.5)\uff0c\u6c34\u5e73\u5bf9\u9f50=&#39\uff1bcenter&#39\uff1b)PLT.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u56fd\u9632&34\uff1b\uff0ccolor=#39\uff1bBlack&39\uff1b\uff0cbbox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)\uff0cBBox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)Plt.text(x_size*3/4\uff0c-3\uff0c&#34\uff1b\u963f\u6839\u5ef7\u56fd\u9632\uff0ccolor=#39\uff1bBlack&39\uff1b\uff0cBBox=dict(facecolor=&#39\uff1bWhite&#39\uff1b)\u3002\u4e2d\u5fc3(#39\uff1b)\u3002\n\u5fb7\u56fd\u961f\u5b8c\u5168\u653e\u5f03\u4e86\u518d\u8fdb\u4e00\u7403\u7684\u5c1d\u8bd5\uff0c\u53ea\u6709\u4e00\u6b21\u4f20\u7403\u8fdb\u5165\u7981\u533a\u3002\u7136\u800c\uff0c\u5b83\u7684\u9632\u5b88\u7b56\u7565\u662f\u6210\u529f\u7684\uff0c\u963f\u6839\u5ef7\u51e0\u4e4e\u6ca1\u6709\u8fdb\u5165\u5fb7\u56fd\u7684\u7981\u533a\u3002\u8fd9\u53ea\u6709\u4e24\u6b21\u5c04\u95e8\u6765\u81ea\u7981\u533a\u5916\uff0c\u90fd\u662f\u6885\u897f\u7684\u5c04\u95e8\uff0c\u4ed6\u5728\u8fd9\u4e00\u70b9\u4e0a\u53ef\u80fd\u611f\u5230\u6709\u70b9\u7edd\u671b\u3002\n\u7b80\u800c\u8a00\u4e4b\uff1a\u514b\u9c81\u65af\u548c\u65bd\u9b4f\u56e0\u65af\u6cf0\u683c\u662f\u5fb7\u56fd\u7684\u4ee3\u8868\u3002\u514b\u9c81\u65af\u6709\u6700\u591a\u7684\u9632\u5b88\u52a8\u4f5c\uff0c\u7b2c\u4e8c\u591a\u7684\u6295\u7bee(\u4ec5\u6b21\u4e8e\u6885\u897f\uff0c\u56e0\u4e3a\u4ed6\u7edd\u671b\u7684\u6700\u540e\u65f6\u523b)\uff0c\u7b2c\u4e8c\u591a\u7684\u4f20\u7403\u3002\u4ed6\u4e5f\u4e3a\u5fb7\u56fd\u961f\u8fdb\u7403\u9886\u5148\u7684\u6bd4\u8d5b\u53d6\u5f97\u4e86\u5927\u90e8\u5206\u8fdb\u6b65\u8d1f\u8d23\u3002\u5ba2\u89c2\u4e0a\uff0c\u4ed6\u662f\u8fd9\u573a\u6bd4\u8d5b\u7684\u6700\u4f73\u4eba\u9009\u3002\u4e3a\u4ec0\u4e48\u56fd\u9645\u8db3\u8054\u51b3\u5b9a\u5c06\u8fd9\u4e2a\u5956\u9879\u9881\u53d1\u7ed9\u6208\u8328\uff0c\u6211(\u548c\u5927\u591a\u6570\u7403\u8ff7)\u90fd\u65e0\u6cd5\u7406\u89e3\u3002\n\u8db3\u7403\u662f\u4e00\u9879\u592a\u7a7a\u6e38\u620f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48[\u505c\u653e\u516c\u4ea4\u8f66\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8ba9\u4f60\u8d62\u5f97match](http://www.mirror.co.uk/sport/football/news/liverpool-vs-chelsea-jose-mourinho-3469108).]\u7684\u539f\u56e0\u3002\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4ec5\u5305\u62ec\u7403\u5458\u4e3b\u52a8\u8fdb\u653b\u548c\u9632\u5b88\u52a8\u4f5c\u7684\u4f4d\u7f6e\u3002\u9632\u5b88\u4f4d\u7f6e\u56e0\u6b64\u88ab\u5b8c\u5168\u5ffd\u89c6\uff0c\u751a\u81f3\u8fde\u8fdb\u653b\u6253\u6cd5\u90fd\u7f3a\u4e4f\u91cd\u8981\u4fe1\u606f\uff1a\u7403\u5458\u5728\u6ca1\u6709\u7403\u7684\u60c5\u51b5\u4e0b\u8dd1\u52a8\u53ef\u80fd\u6bd4\u4f20\u7403\u5f97\u5206\u8981\u91cd\u8981\u5f97\u591a\u3002", "note_en": "As a fan of both data  and soccer  -  from here on out referred to  as football  - I find the football fan &#39;s attitude toward statistics and data analysis perplexing, although understandable due to years and years of simple stats being the only thing that the media focuses on. Football is a complex team sport with deep interactions, therefore counting events (goals, assists, tackles, etc.) isn&#39;t enough .This notebook shows how you can use play -by -play data to analyse a football match , showing custom measures  and visualizations to better understand the sport .Disclaimer : I &#39;m a fan, not an expert. [Germany&#39;s National Team ] (http : //www .telegraph .co .uk /technology /news / 10959864 /Germanys -World -Cup -tactics -shaped -by -data .html )  and  [Manchester City ] (http : //www .wired .co .uk /magazine /archive / 2014 / 01 /features /the -winning -formula ) have whole teams dedicated to data analysis ,  and the state of the art  is quite above what  is being shown here . However , rarely does that analysis  is made public , so I hope this  is useful  ( or at least entertaining ) . I hope to keep playing  with the data  and share useful insights  in the future . Feel free to star the GitHub repository ,  or drop me at email at rjtavares@gmail .com . ### A note on the data usedThis play -by -play data was gathered  from a public website ,  and I have no guarantee that it  is consistent  or correct . The process used to gather will be the theme of its own post , so stay tuned . On the other hand ,  all calculations based on the raw data are included  in this notebook ,  and should be questioned . I would love to get some feedback .\n  Module imports  and data preparation . You can ignore this section unless you want to play  with the data yourself .\n import pandas  as pd import numpy  as np import matplotlib .pyplot  as plt from footyscripts .footyviz  import draw_events , draw_pitch , type_names #plotting settings %matplotlib inlinepd .options .display .mpl_style  =  &#39;default&#39;\n df  = pd .read_csv ( &#34;../datasets/germany-vs-argentina-731830.csv&#34; , encoding = &#39;utf-8&#39; , index_col = 0 ) #standard dimensionsx_size  =  105.0y_size  =  68.0box_height  =  16.5 * 2  +  7.32box_width  =  16.5y_box_start  = y_size / 2 -box_height / 2y_box_end  = y_size / 2 +box_height / 2 #scale of dataset is 100 by 100. Normalizing for a standard soccer pitch sizedf [ &#39;x&#39; ] =df [ &#39;x&#39; ] / 100 *x_size df [ &#39;y&#39; ] =df [ &#39;y&#39; ] / 100 *y_sizedf [ &#39;to_x&#39; ] =df [ &#39;to_x&#39; ] / 100 *x_sizedf [ &#39;to_y&#39; ] =df [ &#39;to_y&#39; ] / 100 *y_size #creating some measures and classifiers from the original df [ &#39;count&#39; ]  =  1df [ &#39;dx&#39; ]  = df [ &#39;to_x&#39; ]  - df [ &#39;x&#39; ]df [ &#39;dy&#39; ]  = df [ &#39;to_y&#39; ]  - df [ &#39;y&#39; ]df [ &#39;distance&#39; ]  = np .sqrt (df [ &#39;dx&#39; ] ** 2 +df [ &#39;dy&#39; ] ** 2 )df [ &#39;fivemin&#39; ]  = np .floor (df [ &#39;min&#39; ] / 5 ) * 5df [ &#39;type_name&#39; ]  = df [ &#39;type&#39; ] . map (type_names .get )df [ &#39;to_box&#39; ]  =  (df [ &#39;to_x&#39; ]  &gt; x_size  - box_width )  &amp;  (y_box_start  &lt; df [ &#39;to_y&#39; ] )  &amp;  (df [ &#39;to_y&#39; ]  &lt; y_box_end )df [ &#39;from_box&#39; ]  =  (df [ &#39;x&#39; ]  &gt; x_size  - box_width )  &amp;  (y_box_start  &lt; df [ &#39;y&#39; ] )  &amp;  (df [ &#39;y&#39; ]  &lt; y_box_end )df [ &#39;on_offense&#39; ]  = df [ &#39;x&#39; ] &gt;x_size / 2\n #preslicing of the main DataFrame in smaller DFs that will be reused along the notebookdfPeriod1  = df [df [ &#39;period&#39; ] == 1 ]dfP1Shots  = dfPeriod1 [dfPeriod1 [ &#39;type&#39; ] .isin ( [ 13 ,  14 ,  15 ,  16 ] ) ]dfPeriod2  = df [df [ &#39;period&#39; ] == 2 ]dfP2Shots  = dfPeriod2 [dfPeriod2 [ &#39;type&#39; ] .isin ( [ 13 ,  14 ,  15 ,  16 ] ) ]dfExtraTime  = df [df [ &#39;period&#39; ] &gt; 2 ]dfETShots  = dfExtraTime [dfExtraTime [ &#39;type&#39; ] .isin ( [ 13 ,  14 ,  15 ,  16 ] ) ]\n  Let &#39;s get a quick profile of the first half. The chart below shows where in the field most events took place (positive numbers correspond to Germany&#39;s offensive half , negative numbers to its defensive half ) ,  with each team&#39;s shots pointed out .\n fig  = plt .figure (figsize = ( 12 , 4 ) )avg_x  =  (dfPeriod1 [dfPeriod1 [ &#39;team_name&#39; ] == &#39;Germany&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ]  - dfPeriod1 [dfPeriod1 [ &#39;team_name&#39; ] == &#39;Argentina&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ] )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &gt; 0  else  0  for x  in avg_x ] ) )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &lt; 0  else  0  for x  in avg_x ] ) ) for i , shot  in dfP1Shots .iterrows ( ) : x  = shot [ &#39;min&#39; ] y  = avg_x .ix [shot [ &#39;min&#39; ] ] signal  =  1  if shot [ &#39;team_name&#39; ] == &#39;Germany&#39;  else  - 1 plt .annotate (s = (shot [ &#39;type_name&#39; ] + &#39; (&#39; +shot [ &#39;team_name&#39; ] [ 0 ] + &#34;)&#34; ) , xy = (x , y ) , xytext = (x - 5 ,y + 30 *signal ) , arrowprops = dict (facecolor = &#39;black&#39; ) )plt .gca ( ) .set_xlabel ( &#39;minute&#39; )plt .title ( &#34;First Half Profile&#34; )\n The first  45 &#39; of the final were incredibly interesting. Germany dominated possession and pressured high, forcing Argentina to play in its own half. That is obvious once we look at Argentina&#39;s passes during the first half :\n draw_pitch ( )draw_events (dfPeriod1 [ (dfPeriod1 [ &#39;type&#39; ] == 1 )  &amp;  (dfPeriod1 [ &#39;outcome&#39; ] == 1 )  &amp;  (dfPeriod1 [ &#39;team_name&#39; ] == &#39;Argentina&#39; ) ] , mirror_away = True )plt .text (x_size / 4 ,  - 3 ,  &#34;Germany&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )plt .text (x_size * 3 / 4 ,  - 3 ,  &#34;Argentina&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )plt .title ( &#34;Argentina&#39;s passes during the first half&#34; )\n   Only  28 % of Argentina&#39;s passes were made on its offensive half , versus  61 %  for Germany . Despite playing  in the offensive half , Germany managed to get a much higher passing accuracy , a testament to its amazing midfield .However , that superiority didn &#39;t manifest itself in chances and shots. In fact, Germany had quite a difficult time trying to get inside Argentina&#39;s penalty box .\n draw_pitch ( )draw_events (df [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;period&#39; ] == 1 )  &amp;  (df [ &#39;outcome&#39; ] == 1 ) ] , mirror_away = True )draw_events (df [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;period&#39; ] == 1 )  &amp;  (df [ &#39;outcome&#39; ] == 0 ) ] , mirror_away = True , alpha = 0.2 )draw_events (dfP1Shots , mirror_away = True , base_color = &#39;#a93e3e&#39; )plt .text (x_size / 4 ,  - 3 ,  &#34;Germany&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )plt .text (x_size * 3 / 4 ,  - 3 ,  &#34;Argentina&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )\n  Out of  16 German atempts to get  in the box , only one resulted  in a shot : a late corner ,  with Howedes hitting the post .\n  Kramer suffered an injury on the 19th minute , but was only subsituted  12 minutes later . This included Germany&#39;s worst period  in the first half ,  as the first half profile chart above shows . [Reports say that he acted confused ] (http : //www .theguardian .com /football / 2014 /jul / 17 /christoph -kramer -germany -concussion -world -cup -final - 2014 ) ,  and data shows that Kramer was largely  &#34;absent&#34;  in the period between the injury  and the subsitutions : his only actions were one succesful reception  and  pass ,  and one loss of possesion .\n   score  =  { &#39;1-LINEUP&#39; :  0 ,  &#39;1-RUN WITH BALL&#39; :  0.5 ,  &#39;1-RECEPTION&#39; :  0 ,  &#39;1-PASS&#39; :  1 ,  &#39;0-PASS&#39; :  - 1 ,  &#39;0-TACKLE (NO CONTROL)&#39; :  0 ,  &#39;1-CLEAR BALL (OUT OF PITCH)&#39; :  0.5 ,  &#39;0-LOST CONTROL OF BALL&#39; :  - 1 ,  &#39;1-SUBSTITUTION (OFF)&#39; :  0 }dfKramer [ &#39;score&#39; ]  = dfKramer [ &#39;action&#39; ] . map (score .get )\n   The second half was much more balanced . We reproduce the same charts  as the first half , which confirm this perception .\n fig  = plt .figure (figsize = ( 12 , 4 ) )avg_x  =  (dfPeriod2 [dfPeriod2 [ &#39;team_name&#39; ] == &#39;Germany&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ]  - dfPeriod2 [dfPeriod2 [ &#39;team_name&#39; ] == &#39;Argentina&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ] )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &gt; 0  else  0  for x  in avg_x ] ) )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &lt; 0  else  0  for x  in avg_x ] ) ) for i , shot  in dfP2Shots .iterrows ( ) : x  = shot [ &#39;min&#39; ] y  = avg_x .ix [shot [ &#39;min&#39; ] ] signal  =  1  if shot [ &#39;team_name&#39; ] == &#39;Germany&#39;  else  - 1 plt .annotate (s = (shot [ &#39;type_name&#39; ] + &#39; (&#39; +shot [ &#39;team_name&#39; ] [ 0 ] + &#34;)&#34; ) , xy = (x , y ) , xytext = (x - 5 ,y + 30 *signal ) , arrowprops = dict (facecolor = &#39;black&#39; ) )plt .gca ( ) .set_xlabel ( &#39;minute&#39; )plt .title ( &#34;Second Half Profile&#34; )\n   draw_pitch ( )draw_events (df [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;period&#39; ] == 2 )  &amp;  (df [ &#39;outcome&#39; ] == 1 ) ] , mirror_away = True )draw_events (df [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;period&#39; ] == 2 )  &amp;  (df [ &#39;outcome&#39; ] == 0 ) ] , mirror_away = True , alpha = 0.2 )draw_events (dfP2Shots , mirror_away = True , base_color = &#39;#a93e3e&#39; )plt .text (x_size / 4 ,  - 3 ,  &#34;Germany&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )plt .text (x_size * 3 / 4 ,  - 3 ,  &#34;Argentina&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )\n Even though Germany had much more success getting inside the box on the second half , only only  pass resulted  in a German shot  from inside the box .\n   fig  = plt .figure (figsize = ( 12 , 4 ) )avg_x  =  (dfExtraTime [dfExtraTime [ &#39;team_name&#39; ] == &#39;Germany&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ]  - dfExtraTime [dfExtraTime [ &#39;team_name&#39; ] == &#39;Argentina&#39; ] .groupby ( &#39;min&#39; ) . apply (np .mean ) [ &#39;x&#39; ] .reindex (dfExtraTime [ &#39;min&#39; ] .unique ( ) , fill_value = 0 ) )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &gt; 0  else  0  for x  in avg_x ] ) )plt .stackplot ( list (avg_x .index .values ) ,  list ( [x  if x &lt; 0  else  0  for x  in avg_x ] ) ) for i , shot  in dfETShots .iterrows ( ) : x  = shot [ &#39;min&#39; ] y  = avg_x .ix [shot [ &#39;min&#39; ] ] signal  =  1  if shot [ &#39;team_name&#39; ] == &#39;Germany&#39;  else  - 1 plt .annotate (s = (shot [ &#39;type_name&#39; ] + &#39; (&#39; +shot [ &#39;team_name&#39; ] [ 0 ] + &#34;)&#34; ) , xy = (x , y ) , xytext = (x - 5 ,y + 20 *signal ) , arrowprops = dict (facecolor = &#39;black&#39; ) )plt .gca ( ) .set_xlabel ( &#39;minute&#39; )plt .title ( &#34;Extra Time Profile&#34; )\n  We can see that Germany&#39;s 4th period was quite different  from the rest of the match . Germany played a lot less high on the field ,  and decreased the number of passes significantly : showing that it tried to control the game , slow it down , dropping the defensive line . This  is even more evident  if we look at the time interval after the goal :\n  draw_pitch ( )draw_events (df .ix [goal_ix + 1 : ] [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;outcome&#39; ] == 1 ) ] , mirror_away = True )draw_events (df .ix [goal_ix + 1 : ] [ (df [ &#39;to_box&#39; ] == True )  &amp;  (df [ &#39;type&#39; ] == 1 )  &amp;  (df [ &#39;from_box&#39; ] == False )  &amp;  (df [ &#39;outcome&#39; ] == 0 ) ] , mirror_away = True , alpha = 0.2 )draw_events (df .ix [goal_ix + 1 : ] [df [ &#39;type&#39; ] .isin ( [ 13 , 14 , 15 , 16 ] ) ] , mirror_away = True , base_color = &#39;#a93e3e&#39; )plt .text (x_size / 4 ,  - 3 ,  &#34;Germany&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )plt .text (x_size * 3 / 4 ,  - 3 ,  &#34;Argentina&#39;s defense&#34; , color = &#39;black&#39; , bbox = dict (facecolor = &#39;white&#39; , alpha = 0.5 ) , horizontalalignment = &#39;center&#39; )\n  Germany completely gave up trying to score another goal ,  with only one attempt at a  pass to the box . However , its defensive strategy was successful ,  with Argentina barely entering Germany&#39;s penalty box . Its only  2 shots came  from outside the box , both by Messi , who at this point was probably feeling somewhat desperate .\n        In short : Kroos  and Schweinsteiger were imense  in Germany &#39;s midield. Kroos had the most defensive actions, the second most shots (behind Messi only due to his desperate late atempts), and the second most passes. He was also responsible for most of the progression in Germany&#39;s goal -leading play . He was objectively the man of the match . Why FIFA decided to give that award to Goetze  is beyond me  ( and most football fans ) .\n  Football  is a game of space . That &#39;s why [parking the bus can actually allow to win a match](http://www.mirror.co.uk/sport/football/news/liverpool-vs-chelsea-jose-mourinho-3469108). The dataset used only includes positions for players active offensive and defensive actions. Defensive positioning is therefore completely ignored, and even attacking play lacks important information: a player&#39;s run without the ball can be much more important than a  pass to score a goal .", "posttime": "2020-06-15 23:10:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51b3\u8d5b,statistical,\u5fb7\u56fd\u961f", "title": "\u5bf92014\u5e74\u4e16\u754c\u676f\u51b3\u8d5b\u7684\u63a2\u7d22\u6027\u7edf\u8ba1\u5206\u6790", "title_en": "An exploratory statistical analysis of the 2014 World Cup Final", "transed": 1, "url": "https://beta.deepnote.com/article/statistical-analysis-of-2014-world-cup-final", "via": "", "real_tags": ["\u51b3\u8d5b", "\u5fb7\u56fd\u961f"]}, {"category": "", "categoryclass": "", "imagename": "aaf125c0b0d80a61a484aa44575a75af.jpg", "infoid": 1006665, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ea6\u7ff0\u00b7\u5965\u5229\u5f17(John Oliver)\u6765\u770b\u770b\u9762\u90e8\u8bc6\u522b\u6280\u672f\uff0c\u79c1\u8425\u516c\u53f8\u548c\u6267\u6cd5\u90e8\u95e8\u662f\u5982\u4f55\u4f7f\u7528\u5b83\u7684\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u6709\u5371\u9669\u3002\u8054\u7cfb\u2026\u2026", "note_en": "John Oliver takes a look at facial recognition technology, how it\u2019s used by private companies and law enforcement, and why it can be dangerous. Connect with ...", "posttime": "2020-06-15 23:09:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5965\u5229\u5f17,oliver,john", "title": "\u7ea6\u7ff0\u00b7\u5965\u5229\u5f17\u8c08\u9762\u90e8\u8bc6\u522b", "title_en": "John Oliver on Facial Recognition", "transed": 1, "url": "https://youtu.be/jZjmlJPJgug", "via": "", "real_tags": ["\u5965\u5229\u5f17", "oliver", "john"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006663, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u662f\u6211\u6765\u5965\u8fea\u7535\u8111\u516c\u53f8\u7684\u7b2c\u4e00\u5929\uff0c\u6211\u5c06\u5728\u90a3\u91cc\u505a\u5de5\u7a0b\u5de5\u4f5c\u3002\n\u5f53\u5965\u7acb\u5fb7\u628a\u81ea\u5df1\u4ecb\u7ecd\u7ed9\u8fd9\u4e2a\u4e16\u754c\u65f6\uff0c\u6211\u770b\u5230\u5f88\u591a\u4eba\u90fd\u5f88\u56f0\u60d1\u3002\u5c31\u5176\u6838\u5fc3\u800c\u8a00\uff0c\u6c27\u5316\u7269\u7684\u4f5c\u7528\u975e\u5e38\u7b80\u5355\uff1a\u4f60\u7ed9\u6c27\u5316\u7269\u94b1\uff0c\u6c27\u5316\u7269\u7ed9\u4f60\u4e00\u53f0\u7535\u8111\u3002\u8fd9\u5bb6\u516c\u53f8\u5356\u8d27\uff0c\u662f\u4e3a\u4e86\u8d5a\u94b1\u3002\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\uff0c\u4f60\u4e3a\u4ec0\u4e48\u60f3\u8981\u4e00\u53f0\uff1f\n\u572820\u4e16\u7eaa90\u5e74\u4ee3\u672b\u548c21\u4e16\u7eaa\u521d\uff0c\u5982\u679c\u4f60\u5728\u8fd0\u884c\u67d0\u79cd\u7c7b\u578b\u7684\u7f51\u7edc\u670d\u52a1\uff0c\u4f60\u4f1a\u5728\u67d0\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u67d0\u4e2a\u673a\u67b6\u4e0a\u653e\u7f6e\u4e00\u53f0\u670d\u52a1\u5668\u3002\u4ea4\u901a\u5f88\u62e5\u6324\u5417\uff1f\u4f60\u4f1a\u4e70\u4e00\u4e2a\u66f4\u5927\u66f4\u7ed3\u5b9e\u7684\u670d\u52a1\u5668\u3002\u8fd9\u662f\u5782\u76f4\u6269\u5c55\u7684\u65f6\u4ee3\u3002\u670d\u52a1\u5668\u53c8\u5927\u53c8\u8d35\uff0c\u800c\u4e14\u5f88\u96be\u7ba1\u7406\uff0c\u6240\u4ee5\u4f60\u6ca1\u6709\u8d2d\u4e70\u66f4\u591a\u7684\u670d\u52a1\u5668\uff0c\u800c\u662f\u8d2d\u4e70\u4e86\u66f4\u5927\u7684\u670d\u52a1\u5668\u3002\n\u8c37\u6b4c\u8d1f\u8d23\u8fd0\u8425\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u5468\u56db\u8868\u793a\uff0c\u8c37\u6b4c\u901a\u5e38\u5bf9\u5176\u6570\u636e\u4e2d\u5fc3\u80cc\u540e\u7684\u6280\u672f\u5b88\u53e3\u5982\u74f6\uff0c\u4e3a\u4e86\u8282\u7701\u6210\u672c\uff0c\u800c\u4e14\u56e0\u4e3a\u6807\u51c6\u4ea7\u54c1\u4e0d\u80fd\u5b8c\u5168\u6ee1\u8db3\u5176\u9700\u6c42\uff0c\u8c37\u6b4c\u5efa\u9020\u4e86\u81ea\u5df1\u7684\u670d\u52a1\u5668\u3002\n\u5728\u8fd9\u4e2a\u65f6\u4ee3\uff0c\u50cf\u8c37\u6b4c\u8fd9\u6837\u7684\u516c\u53f8\u5f00\u59cb\u62d2\u7edd\u670d\u52a1\u5668\u7ea7\u786c\u4ef6\u7684\u6982\u5ff5\uff0c\u800c\u5b8c\u5168\u4f9d\u8d56\u66f4\u4fbf\u5b9c\u7684\u6d88\u8d39\u7ea7\u786c\u4ef6\u3002\u6b63\u5982\u5f15\u8a00\u6240\u8bf4\uff0c\u8fd9\u9700\u8981\u6784\u5efa\u4e00\u7cfb\u5217\u8f6f\u4ef6\uff0c\u4f7f\u670d\u52a1\u5668\u96c6\u7fa4\u66f4\u52a0\u53ef\u9760\u3002\n\u4f46\u6700\u7ec8\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u6709\u4e0d\u5229\u7684\u4e00\u9762\u3002\u968f\u7740\u8fd9\u4e9b\u516c\u53f8\u7684\u53d1\u5c55\uff0c\u65b0\u4e00\u4ee3\u516c\u53f8\u4e5f\u5728\u5efa\u8bbe\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684\u4e91\u3002\u4e00\u65e6\u60a8\u5f00\u59cb\u7ba1\u7406\u90a3\u4e48\u591a\u7684\u8ba1\u7b97\u673a\uff0c\u5c31\u6709\u53ef\u80fd\u83b7\u5f97\u4e00\u5b9a\u7684\u6548\u7387\u5e76\u964d\u4f4e\u6210\u672c\u3002\u51e0\u5e74\u540e\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n\u5bf9\u4e8e\u4e92\u8054\u7f51\u548c\u4e92\u8054\u7f51\u8f6f\u4ef6\u5de8\u5934\u6765\u8bf4\uff0c\u8bbe\u8ba1\u751a\u81f3\u5236\u9020\u81ea\u5df1\u7684\u786c\u4ef6\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u548c\u5efa\u7acb\u7ade\u4e89\u4f18\u52bf\u5e76\u4e0d\u5c11\u89c1\u3002\u8c37\u6b4c\u5b9a\u5236\u8bbe\u8ba1\u4e86\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u4e0a\u88c5\u6ee1\u4e86\u82f1\u7279\u5c14\u7684\u6570\u767e\u4e07\u82af\u7247\uff0c\u8c37\u6b4c\u57285\u6708\u4efd\u5ba3\u5e03\uff0c\u5b83\u8fd8\u8bbe\u8ba1\u4e86\u81ea\u5df1\u7684\u4e13\u7528\u96c6\u6210\u7535\u8def(ASIC)\uff0c\u7528\u4e8e\u795e\u7ecf\u7f51\u7edc\u3002Facebook\u5728\u5176\u6570\u636e\u4e2d\u5fc3\u4f7f\u7528\u81ea\u5df1\u7684\u4ea4\u6362\u673a\u3002\u4f46\u5e02\u573a\u9886\u5148\u7684\u516c\u5171\u4e91\u516c\u53f8\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(Amazon Web Services)\u53ef\u80fd\u5728\u8fd9\u6761\u9053\u8def\u4e0a\u8d70\u5f97\u6700\u8fdc-\u4e0d\u4ec5\u8bbe\u8ba1\u4e86\u81ea\u5df1\u7684\u8def\u7531\u5668\u3001\u82af\u7247\u3001\u5b58\u50a8\u670d\u52a1\u5668\u548c\u8ba1\u7b97\u670d\u52a1\u5668\uff0c\u8fd8\u8bbe\u8ba1\u4e86\u81ea\u5df1\u7684\u9ad8\u901f\u7f51\u7edc\u3002\n\u4e91\u6b63\u5728\u5370\u949e\u7968\uff0c\u4eba\u4eec\u9047\u5230\u4e86\u53ef\u4f38\u7f29\u6027\u95ee\u9898\u3002\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff1a\u96c7\u4f63\u4e00\u4e9b\u4eba\u6765\u5efa\u9020\u4ee4\u4eba\u60ca\u53f9\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5e72\u8106\u4e70\u4e0b\u6765\u5462\uff1f\u55ef\uff0c\u5b83\u6839\u672c\u5c31\u4e0d\u662f\u4e3a\u4e86\u8d2d\u4e70\u800c\u5b58\u5728\u7684\u3002\u5f53\u524d\u7684\u8ba1\u7b97\u673a\u516c\u53f8\u771f\u7684\u662f\u5728\u5782\u76f4\u6269\u5c55\u65f6\u4ee3\u6210\u957f\u8d77\u6765\u7684\u3002\u4f46\u662f\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u4e5f\u8981\u8bb0\u4f4f\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5728\u90a3\u4e2a\u65f6\u5019\u8fd8\u633a\u65b0\u7684\u3002\u4e91\u4ecd\u7136\u662f\u6700\u524d\u6cbf\u7684\uff0c\u6240\u4ee5\u9700\u6c42\u5e76\u4e0d\u662f\u5f88\u6e05\u695a\u3002\u4e3a\u4e86\u5f04\u6e05\u695a\u54ea\u4e9b\u4e1c\u897f\u5728\u8fd9\u4e9b\u73af\u5883\u4e0b\u80fd\u771f\u6b63\u53d1\u6325\u4f5c\u7528\uff0c\u9700\u8981\u505a\u5927\u91cf\u7684\u7814\u53d1\u5de5\u4f5c\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5176\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u4e0d\u4ec5\u4ec5\u662f\u786c\u4ef6\uff0c\u8f6f\u4ef6\u4e5f\u662f\u5982\u6b64\u3002\u4eca\u5929\uff0c\u5728\u73b0\u6210\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u7684\u5404\u4e2a\u90e8\u5206\u90fd\u6709\u5927\u91cf\u7684\u5783\u573e\u548c\u5783\u573e\u3002\n\u56e0\u4e3a\u8fd9\u4e9b\u5f00\u53d1\u662f\u4e13\u6709\u7684\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5982\u679c\u4f60\u4e0d\u613f\u610f\u5efa\u9020\u81ea\u5df1\u7684\u786c\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u9879\u65b0\u6280\u672f\u7684\u552f\u4e00\u9014\u5f84\u5c31\u662f\u79df\u7528\u5b83\u3002\u516c\u6709\u4e91\u7684\u57fa\u4e8e\u4f7f\u7528\u60c5\u51b5\u7684\u8ba1\u8d39\u6a21\u5f0f\u975e\u5e38\u6807\u51c6\uff0c\u800c\u4e14\u975e\u5e38\u6709\u5229\u53ef\u56fe\u3002\u5b9a\u5236\u786c\u4ef6\u5e2e\u52a9\u4e91\u63d0\u4f9b\u5546\u6316\u51fa\u4e86\u66f4\u6df1\u7684\u62a4\u57ce\u6cb3\u3002\u5982\u679c\u4f60\u771f\u7684\u60f3\u62e5\u6709\u7535\u8111\uff0c\u4f60\u7684\u9009\u62e9\u662f\u4f7f\u7528\u4e0a\u4e00\u4ee3\u7684\u6280\u672f\uff0c\u6216\u8005\u96c7\u4f63\u4e00\u4e2a\u56e2\u961f\uff0c\u8bd5\u56fe\u8d76\u4e0a\u5927\u516c\u53f8\u3002\u56e0\u6b64\uff0c\u4e16\u754c\u4f3c\u4e4e\u4e00\u5206\u4e3a\u4e8c\uff1a\u8d85\u7ea7\u6807\u5ea6\u8005\u548c\u5176\u4ed6\u6240\u6709\u4eba\u3002\n\u8fd9\u91cc\u8fd8\u6709\u66f4\u591a\u8981\u8bf4\u7684\uff0c\u4f46\u8fd9\u5c31\u662f\u7b80\u77ed\u7684\u5185\u5bb9\uff1aOxide\u6b63\u5728\u505a\u7684\u662f\u5efa\u9020\u9002\u5408\u8d85\u7ea7\u7f29\u653e\u5668\u7684\u8ba1\u7b97\u673a\uff0c\u4f46\u5c06\u5b83\u4eec\u51fa\u552e\uff0c\u800c\u4e0d\u662f\u5efa\u9020\u53e6\u4e00\u4e2a\u516c\u5171\u4e91\u3002\u8fd9\u4e9b\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u5c06\u4e00\u8d77\u8bbe\u8ba1\uff0c\u4ee5\u521b\u5efa\u4f18\u79c0\u7684\u7cfb\u7edf\u3002\u6216\u8005\u6211\u5e94\u8be5\u8bf4\u5c06\u4f1a\u51fa\u552e\u5b83\u4eec\uff0c\u73b0\u5728\u8fd8\u4e3a\u65f6\u5c1a\u65e9\u3002\n\u6211\u6ca1\u6709\u786c\u4ef6\u80cc\u666f\u3002\u4f46\u662f\uff0c\u4e0e\u786c\u4ef6\u76f8\u6bd4\uff0c\u7cfb\u7edf\u6709\u66f4\u591a\u7684\u610f\u4e49\u3002\u6b63\u5982\u4f60\u53ef\u80fd\u4ece\u516c\u53f8\u7684\u540d\u5b57\u4e2d\u731c\u5230\u7684\u90a3\u6837\uff0cOxide\u5c06\u5728Rust\u5f00\u53d1\u5927\u91cf\u7684\u8f6f\u4ef6\u3002\u6211\u8ba4\u8bc6\u516c\u53f8\u4e09\u4f4d\u521b\u59cb\u4eba\u4e2d\u7684\u4e24\u4f4d\u4e5f\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4ed6\u4eec\u662f\u6211\u5c0a\u656c\u7684\u4eba\uff0c\u6211\u94a6\u4f69\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002\n\u6211\u4e5f\u5f88\u671f\u5f85\u518d\u6b21\u505a\u5de5\u7a0b\u5de5\u4f5c\u3002\u6211\u4ecd\u7136\u559c\u6b22\u505a\u4ea7\u54c1\u5de5\u4f5c\uff0c\u4f46\u6211\u60f3\u6211\u66f4\u559c\u6b22\u5728\u5c0f\u516c\u53f8\u5de5\u4f5c\u3002\u5728\u4e00\u5bb6\u65b0\u516c\u53f8\uff0c\u5de5\u7a0b\u5e08\u4ecd\u7136\u53ef\u4ee5\u5bf9\u4ea7\u54c1\u62e5\u6709\u5f88\u5927\u7684\u6240\u6709\u6743\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u5b8c\u5168\u653e\u5f03\u8fd9\u4e00\u70b9\u3002\u4f46\u6211\u5f88\u5174\u594b\u7ec8\u4e8e\u6709\u4e86\u4e00\u4efd\u76f4\u63a5\u8d1f\u8d23\u7f16\u5199\u94c1\u9508\u4ee3\u7801\u7684\u5de5\u4f5c\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6211\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\u6ca1\u6709\u5199\u8fc7\u201c\u9508\u201d\uff0c\u4f46\u662f\u6211\u671f\u5f85\u7740\u5199\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u4e0d\u7ba1\u600e\u6837\u3002\n\u6700\u540e\uff0c\u6211\u4e5f\u5f88\u9ad8\u5174\u80fd\u7ee7\u7eed\u5e2e\u52a9\u522b\u4eba\uff1b\u6c27\u5316\u7269\u4e0d\u80fd\u53ea\u96c7\u7528\u5df2\u7ecf\u662f\u9632\u9508\u4e13\u5bb6\u7684\u4eba\u3002\u5b83\u4eec\u7684\u6570\u91cf\u8fd8\u4e0d\u591f\u591a\uff0c\u800c\u4e14\u6709\u4e9b\u4eba\u7684\u5de5\u4f5c\u975e\u5e38\u51fa\u8272\uff0c\u4f46\u4ed6\u4eec\u8fd8\u6ca1\u6709\u5199\u51fa\u201c\u9508\u201d\u7684\u5b57\u6837\u3002\u6211\u5c06\u5e2e\u52a9\u5f25\u5408\u8fd9\u4e00\u9e3f\u6c9f\u3002", "note_en": "Today is my first day at  Oxide Computer Company, where I will be doing engineering work.\n When Oxide introduced themselves to the world, I saw a lot of folks who were pretty confused. At its core, what Oxide is doing is very straightforward: you give Oxide money, and Oxide gives you a computer. This company sells goods, for money. That raises the issue of what kind of computer, and why would you want one?\n In the late 90s and early 2000s, if you were running a web service of some kind, you&#39;d have a server sitting in a rack in a data center somewhere. Got a lot of traffic? You&#39;d buy a bigger, beefier server. This was the era of &#34;vertical scaling.&#34; Servers were big, expensive, and hard to manage, so you didn&#39;t buy more servers, you bought bigger servers.\n  Google, typically tight-lipped about the technology behind its\u00a0data centers, builds its own servers to save costs and because standard products don&#39;t exactly meet its needs, Google&#39;s senior vice president of operations said on Thursday.\n This era saw companies like Google start to reject the notion of &#34;Server grade&#34; hardware, and rely purely on cheaper, consumer-grade hardware. As the quote said, this required building a bunch of software that would make the cluster of servers more reliable.\n But eventually, there were downsides to this approach, as well. As these companies grew, so did a new generation of companies building &#34;the cloud&#34; as we know it today. And once you start managing that many computers, possibilities open up to gain certain efficiencies and cut costs. Years later, we see stuff  like this:\n It\u2019s not unusual for\u00a0internet and\u00a0software giants to design\u00a0and even make\u00a0their own hardware, to increase efficiency and build a competitive advantage. Google custom-designs its own servers, filling them with millions of chips from Intel, and\u00a0announced in May\u00a0that it has\u00a0designed its own application-specific integrated circuit (ASIC) for use on neural networks. Facebook\u00a0uses its own switches\u00a0in its data centers. But market-leading public-cloud company Amazon Web Services may have gone farthest down this path \u2014 designing not only its own routers, chips, storage servers and compute servers but also its own high-speed network.\n The cloud was printing money, and folks were running into scaling issues. The solution was pretty straightforward: hire some people to build amazing infrastructure. Why not just buy it? Well, it simply didn&#39;t exist for purchase in the first place. The current crop of computer companies really grew up in the vertical scaling era. But beyond that, you also have to remember that this stuff was pretty  new at that time. The Cloud was still cutting-edge, and so the requirements weren&#39;t really known. There was a lot of R&amp;D work to figure out what things would actually work in these environments. It turns out that a lot of it was not just hardware, but the software too. There is a ton of junk and waste in off-the-shelf server systems today, in all parts of the system.\n Because these developments were proprietary, it also meant that if you weren&#39;t willing to build your own hardware, the only way you could get access to this new tech was by renting it. The public cloud&#39;s usage-based billing model is pretty standard, and pretty lucrative. Custom hardware helped dig an even deeper moat around cloud providers. If you want to actually own computers, your options are to use previous-generation tech, or hire a team and try to catch up to the big players. So the world kind of split in two: the hyperscalers and everyone else.\n There is a  ton more to say here, but this is the short of it: what Oxide is doing is building computers that are suitable for hyperscalers, but selling them, rather than building another public cloud. These computers will have hardware and software designed together to create excellent systems. Or I should say &#34;will be selling them,&#34; it is still early days.\n I do not come from a hardware background. But there&#39;s a lot more to a system than hardware. And as you might guess from the name of the company, Oxide will be building a lot of software in Rust. I also have known two of the three founders of the company for a while, and they are folks I respect and whose work I admire.\n I am also looking forward to doing engineering work again. I still love doing product work, but I think I prefer it in a small company setting. In a new company, engineers can still have a lot of ownership over product, so I won&#39;t be giving that up completely. But I&#39;m excited to finally have a job where I get to write Rust code as a direct responsibility. It&#39;s not like I&#39;ve not written any Rust over the past few years, but I&#39;m looking forward to writing more of it, regardless.\n Finally, I&#39;m excited to continue to help others as well; Oxide cannot only hire folks who are already Rust experts. There just aren&#39;t enough of them yet, and there&#39;s folks who do fantastic work who don&#39;t yet write Rust. I&#39;ll be helping to bridge that gap.", "posttime": "2020-06-15 22:52:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u5965\u8fea,day", "title": "\u4eca\u5929\u662f\u6211\u6765\u5965\u8fea\u7535\u8111\u516c\u53f8\u7684\u7b2c\u4e00\u5929", "title_en": "Today is my first day at Oxide Computer Company", "transed": 1, "url": "https://steveklabnik.com/writing/today-is-my-first-day-at-oxide-computer-company", "via": "", "real_tags": ["\u7535\u8111", "\u5965\u8fea", "day"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006662, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u7b2c\u4e8c\u6b21\u51cf\u5c1150%\u7684Guix\u5f15\u5bfc\u4e8c\u8fdb\u5236\u6587\u4ef6\u73b0\u5728\u5df2\u7ecf\u6b63\u5f0f\u53d1\u5e03\u4e86\uff01\n\u6700\u521d\u7528\u6765\u6784\u5efa\u8f6f\u4ef6\u5305\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u96c6\u73b0\u5728\u7684\u91cd\u91cf\u7ea6\u4e3a60~MiB\uff0c\u662f\u4ee5\u524d\u7684\u56db\u5206\u4e4b\u4e00\u3002\n\u5728\u4e4b\u524d\u7684\u4e00\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u4eec\u8be6\u7ec6\u9610\u8ff0\u4e86\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u7f29\u51cf\u548c\u81ea\u4e3e\u80fd\u529b\u5728\u603b\u4f53\u4e0a\u662f\u5982\u6b64\u91cd\u8981\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u6d88\u9664-\u6216\u8005\u5927\u5927\u51cf\u5c11-\u201c\u4fe1\u4efb\u201d\u653b\u51fb\u7684\u653b\u51fb\u9762\u3002\u53bb\u5e74\u590f\u5929\uff0c\u5728\u201c\u6253\u7834\u6bd4\u7279\u5e01\u201d\u5927\u4f1a\u4e0a\uff0c\u8463\u5361\u5c14\u505a\u4e86\u4e00\u4e2a\u6709\u8da3\u800c\u975e\u5e38\u6e29\u548c\u7684\u4ecb\u7ecd\uff0c\u5728FOSDEM2020\u4e0a\u6211\u4e5f\u505a\u4e86\u4e00\u4e2a\u7b80\u77ed\u7684\u6f14\u8bb2\u3002\u5982\u679c\u60a8\u9009\u62e9\u76f8\u4fe1\u4ece\u6e90\u5f00\u59cb\u6784\u5efa\u662f\u8fdb\u884c\u8ba1\u7b97\u7684\u6b63\u786e\u65b9\u5f0f\uff0c\u90a3\u4e48\u201c\u4fe1\u4efb\u4fe1\u4efb\u201d\u653b\u51fb\u53ea\u662f\u4e0d\u5b8c\u6574\u6216\u7f3a\u5c11\u5f15\u5bfc\u6545\u4e8b\u7684\u8868\u73b0\u3002\n\u53bb\u5e74\uff0c\u7b2c\u4e00\u6b21\u51cf\u4ea7\u79fb\u9664\u4e86GCC\u3001Glibc\u548cBinutils\u4e8c\u8fdb\u5236\u79cd\u5b50\u3002\u65b0\u7684\u8fdb\u4e00\u6b65\u7b80\u5316\u7684\u4e8c\u8fdb\u5236\u79cd\u5b50\u5f15\u5bfc\u7a0b\u5e8f(Mergedin Guix Master)\u4e0a\u4e2a\u6708\u5220\u9664\u4e86\u5305\u542bGNU Awk\u3001Bash\u3001Bzip2\u3001GNU\u6838\u5fc3\u5b9e\u7528\u7a0b\u5e8f\u3001grep\u3001gzip\u3001GNU make\u3001Patch\u3001sed\u3001Tar\u548cxz\u7684\u201c\u9759\u6001\u4e8c\u8fdb\u5236\u6587\u4ef6tarball\u201d\uff0c\u5176\u4e2d\u5305\u542bGNUAwk\u3001Bash\u3001Bzip2\u3001GNU Core Utilities\u3001grep\u3001gzip\u3001GNU make\u3001Patch\u3001sed\u3001Tar\u548cxz\u3002\u5b83\u7528Gash\u548cGashCore\u5b9e\u7528\u7a0b\u5e8f\u53d6\u4ee3\u4e86\u5b83\u4eec\u3002Gash\u662f\u7528Guile Scheme\u7f16\u5199\u7684\u6700\u7b80\u7ea6\u7684POSIX shell\uff0c\u800cGash Core Utilis\u662fGNU\u548cCoreutils\u4e2d\u7684\u5927\u591a\u6570\u5de5\u5177\u4ee5\u53caAwk\u3001grep\u548csed\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u7684\u4e00\u4e2aScheme\u5b9e\u73b0\u3002\n\u7ecf\u8fc7\u4e09\u4e2a\u5e26\u6709\u5927\u91cfMES C\u5e93\u66f4\u65b0\u548c\u4fee\u590d\u7684\u65b0GNU MES\u7248\u672c\u3001Gash\u7684\u91cd\u5927\u66f4\u65b0\u548c\u7b2c\u4e00\u4e2a\u5b98\u65b9\u7684Gash Utils\u7248\u672c\uff0c\u4ee5\u53ca17\u4e2a\u65b0\u7684\u5f15\u5bfc\u6e90\u5305\u548c\u7248\u672c\u7684\u5fae\u5999\u5e73\u8861\u4e4b\u540e\uff0c\u5305\u56fe\u5f62\u7684\u5e95\u90e8\u73b0\u5728\u770b\u8d77\u6765\u5982\u4e0b\u6240\u793a(Woohoo\uff01)\uff1a\nGCC-mesboot(4.9.4)^|(.)^|binutils-mesboot(2.14)\uff0cglibc-mesboot(2.2.5)\uff0cGCC-core-mesboot(2.95.3)^|bash-mesboot(2.05)\uff0cbzip2-mesboot\uff0cgawk-mesboot(3.0.0)disutils-mesboot(2.7)\uff0cpatch-mesboot(2.5.9)\uff0csed-mesboot(1.18)^|gnu-make-mesboot(3.82)^|gzip-mesboot(1.2.4)^|tcc-boot^|me-boot^|gash-boot\uff0cgash-utils-boot^|*bootstrap-mescc-tools\uff0cbootstrap-me(~12 MiB)bootstrap-guile(~48 MiB)\u3002\n\u53ef\u91cd\u590d\u6784\u5efa\u548c\u53ef\u5f15\u5bfc\u8f6f\u4ef6\u7684\u6982\u5ff5\u5e76\u4e0d\u662f\u5f88\u65b0\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\u4e3aGNU\u5de5\u5177\u5b9e\u73b0\u7684\u3002\u73b0\u5728\u91cd\u65b0\u521b\u5efa\u5b83\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u8bb8\u591a\u5b9e\u8df5\u5df2\u7ecf\u88ab\u9057\u5fd8\u4e86\u3002\n\u719f\u6089GNU\u5de5\u5177\u94fe\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u5728\u8fd9\u4e2a\u4f1f\u5927\u7684\u65b0\u5f15\u5bfc\u4e2d\u6ce8\u610f\u5230\u4e86*-mesboot\u6e90\u5305\u7684\u7248\u672c\u53f7\uff1a\u5b83\u4eec\u5f88\u53e4\u8001\u4e86\uff01\u8fd9\u662f\u4e2a\u95ee\u9898\u3002\n\u901a\u5e38\uff0c\u5de5\u5177\u94fe\u7684\u8f83\u65b0\u7248\u672c\u4fee\u590d\u4e86\u6240\u6709\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u4f7f\u8f6f\u4ef6\u66f4\u5bb9\u6613\u6784\u5efa\uff0c\u5e76\u589e\u52a0\u4e86\u5bf9\u65b0CPU\u67b6\u6784\u7684\u652f\u6301\uff0c\u8fd9\u5f88\u68d2\u3002\u7136\u800c-\u901a\u5e38\u60c5\u51b5\u4e0b-\u540c\u65f6\u5f15\u5165\u65b0\u7279\u6027\u6216\u6dfb\u52a0\u4f9d\u8d56\u9879\uff0c\u8fd9\u4e9b\u5bf9\u4e8e\u5f15\u5bfc\u6765\u8bf4\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u589e\u52a0\u5f15\u5bfc\u969c\u788d\u3002\u6709\u65f6\uff0c\u8f83\u65b0\u7684\u5de5\u5177\u66f4\u4e3a\u4e25\u683c\uff0c\u6216\u8005\u65e7\u7684\u914d\u7f6e\u811a\u672c\u65e0\u6cd5\u8bc6\u522b\u8f83\u65b0\u7684\u5de5\u5177\u7248\u672c\u3002\nGNU sed\u5c31\u662f\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u4f8b\u5b50\u3002\u5728\u5f53\u524d\u7684\u5f15\u5bfc\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f1993\u5e74\u53d1\u5e03\u7684\u7248\u672c1.18\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u6211\u4eec\u5e0c\u671b\u5f15\u5bfc\u7684sed\u7684\u6700\u65b0\u7248\u672c\u662fsed-4.2.2(2012)\u3002Newer\u4ec5\u53d1\u5e03\u4e86XZ\u538b\u7f29\u7684tarball\u683c\u5f0f\uff0c\u800cXZ\u662f\u51fa\u4e86\u540d\u7684\u96be\u4ee5\u5f15\u5bfc(\u5b83\u9700\u8981\u4e00\u4e2a\u76f8\u5f53\u65b0\u7684GCC\uff0c\u5e76\u5c1d\u8bd5\u5728\u6ca1\u6709sed\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u5b83)\u3002\n\u5e78\u8fd0\u7684\u662f\uff0csed\u7684\u7ef4\u62a4\u8005(Jim Meyering)\u5f88\u9ad8\u5174\u7ea0\u6b63\u4e86\u8fd9\u4e2a\u9519\u8bef\uff0c\u4ecesed-4.8(2020)\u7248\u672c\u5f00\u59cb\uff0c\u4e5f\u5c06\u53d1\u5e03gzip\u538b\u7f29\u7684tarball\u3002GNU CoreUtils\u4e5f\u662f\u5982\u6b64\uff1a2011\u52302019\u5e74\u95f4\u53d1\u5e03\u7684\u7248\u672c\u5f88\u53ef\u80fd\u5bf9\u5f15\u5bfc\u6beb\u65e0\u7528\u5904\u3002\u9762\u5bf9\u8fd9\u4e2a\u4fe1\u606f\uff0creutils\u7684\u7ef4\u62a4\u8005(P\u00e1draig Brady)\u4e5f\u5f88\u9ad8\u5174\u4ece\u73b0\u5728\u5f00\u59cb\u4ee5gzip\u538b\u7f29\u7684\u5f62\u5f0f\u53d1\u5e03coreutils-8.32\u3002\n\u5373\u4f7f\u662f\u8fd9\u4e9b\u7b80\u5355\u7684\u6848\u4f8b\u4e5f\u8868\u660e\uff0c\u89e3\u51b3\u5f15\u5bfc\u95ee\u9898\u53ea\u80fd\u4e00\u8d77\u5b8c\u6210\uff1a\u5bf9\u4e8eGNU\u6765\u8bf4\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684\u9879\u76ee\u8303\u56f4\u7684\u8d23\u4efb\u3002\n\u5927\u591a\u6570\u5f15\u5bfc\u95ee\u9898\u6216\u5faa\u73af\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u89e3\u51b3\u7684\uff0c\u6709\u65f6\u6ca1\u6709\u660e\u663e\u7684\u7b54\u6848\uff0c\u4f8b\u5982\uff1a\n\u57282013\u5e74\uff0c\u4e5f\u5c31\u662fReducibleBuilds\u5f00\u59cb\u53d6\u5f97\u4e00\u4e9b\u8fdb\u5c55\u7684\u90a3\u4e00\u5e74\uff0cGNU\u7f16\u8bd1\u5668\u96c6\u5408\u53d1\u5e03\u4e86edgcc-4.8.0\uff0c\u4f7fC++\u6210\u4e3a\u6784\u5efa\u8981\u6c42\uff0c\u5e76\u4e14\u3002\n\u867d\u7136\u4ece\u81ea\u4e3e\u80fd\u529b\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u4e9b\u4f8b\u5b50\u6784\u6210\u4e86\u4e00\u4e2a\u4ee4\u4eba\u6109\u5feb\u7684\u8c1c\u56e2\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u770b\u5230GNU\u8f6f\u4ef6\u7684\u7ef4\u62a4\u8005\u8003\u8651\u81ea\u4e3e\u80fd\u529b\uff0c\u5e76\u5f00\u59cb\u4e3a\u4ed6\u4eec\u8f6f\u4ef6\u5305\u7684\u81ea\u4e3e\u6545\u4e8b\u627f\u62c5\u66f4\u591a\u7684\u8d23\u4efb\u3002\n\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u76ee\u6807\u662f\u7b2c\u4e09\u6b21\u51cf\u5c11\u7ea650%\uff1bFull-Sourcebootstrap\u5c06\u4f7f\u7528Stage0\u548cM2-Planet\u66ff\u6362MesCC-Tools\u548cGNU MES\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\nJeremy Orians\u7684Stage0\u9879\u76ee\u4ece\u5927\u7ea6512\u5b57\u8282\u5f00\u59cb\uff0c\u51e0\u4e4e\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u8fd9\u6837\u505a\uff0c\u90a3\u5c31\u6765\u770b\u770b\u8fd9\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u9879\u76ee\u5427\u3002\n\u6211\u4eec\u975e\u5e38\u611f\u8c22\u548c\u6fc0\u52a8NlnetFoundation\u518d\u6b21\u51b3\u5b9a\u8d5e\u52a9\u8fd9\u9879\u5de5\u4f5c\uff01\n\u867d\u7136\u7b80\u5316\u7684\u5f15\u5bfc\u7a0b\u5e8f\u76ee\u524d\u53ea\u9002\u7528\u4e8ei686-linux\u548cx86_64-linux\u67b6\u6784\uff0c\u4f46\u6211\u4eec\u5f88\u9ad8\u5174ARM\u5f88\u5feb\u5c31\u4f1a\u52a0\u5165\u8fdb\u6765\u3002\u53ef\u4fe1\u7684ARM\u5f15\u5bfc\u5de5\u4f5c\u8fdb\u5c55\u987a\u5229\uff0cGNU mes\u73b0\u5728\u5df2\u7ecf\u5728\u672c\u673aARMv7\u4e0a\u901a\u8fc7\u4e86\u6574\u4e2amescc\u6d4b\u8bd5\u5957\u4ef6\uff0c\u5e76\u4e14\u51e0\u4e4e\u901a\u8fc7\u4e86\u672c\u673aARMv7\u4e0a\u7684\u6574\u4e2aGCC\u6d4b\u8bd5\u5957\u4ef6\u3002\u4f7f\u7528GNU MES\u7f16\u8bd1TCC\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u4f53\u7cfb\u7ed3\u6784\u5bf9\u4e8e\u521b\u5efa\u901a\u7528\u5f15\u5bfc\u662f\u975e\u5e38\u91cd\u8981\u7684\uff01\n\u5373\u5c06\u53d1\u5e03\u7684GASH\u548cGASH-Utils\u5c06\u5141\u8bb8\u6211\u4eec\u6e05\u7406\u5305\u56fe\u7684\u5e95\u90e8\u5e76\u5220\u9664\u8bb8\u591a\u201c\u8001\u5f0f\u201d\u5305\uff0c\u7279\u522b\u662f\u4e0b\u4e00\u7248\u672c\u7684Gash-Utils\u5c06\u8db3\u591f\u590d\u6742\uff0c\u53ea\u4f7f\u7528\u65e7\u7248\u672c\u7684GNU make\u548cGzip\u5c31\u53ef\u4ee5\u6784\u5efa\u5230GCC-mesboot\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8e\u5bf9Awk\u5b9e\u73b0\u7684\u6539\u8fdb\uff0c\u5b83\u73b0\u5728\u51e0\u4e4e\u5305\u62ec\u4e86\u6240\u6709\u7684\u6807\u51c6\u529f\u80fd\u3002\n\u5c55\u671b\u66f4\u8fdc\u7684\u672a\u6765\uff0c\u6211\u4eec\u5f88\u53ef\u80fd\u4e0d\u5f97\u4e0d\u53bb\u6389GCC-2.95.3\u7684\u201c\u53e4\u8463\u201d\uff0c\u8fd9\u662f\u5b89\u5fb7\u70c8\u76f4\u63a5\u4e3aGCC-4.6.4\u505a\u7684\u4e00\u4e2a\u5f88\u6709\u5e2e\u52a9\u7684\u57ab\u811a\u77f3\u3002\u6709\u8da3\u7684\u65f6\u523b\u5728\u524d\u65b9\uff01\n\u5f53\u8f6f\u4ef6\u4e0d\u4f9d\u8d56\u4e8e\u4e0d\u80fd\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u4e8c\u8fdb\u5236\u79cd\u5b50\u65f6\uff0c\u8f6f\u4ef6\u662f\u53ef\u5f15\u5bfc\u7684\u3002\u4e0d\u53ef\u5f15\u5bfc\u7684\u8f6f\u4ef6-\u5373\u4f7f\u5b83\u662f\u81ea\u7531\u8f6f\u4ef6-\u51fa\u4e8e\u5404\u79cd\u539f\u56e0\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u98ce\u9669\u3002\u53ef\u5f15\u5bfc\u6784\u5efa\u9879\u76ee\u65e8\u5728\u5c06\u4e8c\u8fdb\u5236\u79cd\u5b50\u7684\u6570\u91cf\u548c\u5927\u5c0f\u51cf\u5c11\u5230\u6700\u4f4e\u9650\u5ea6\u3002\nGNU MES\u4e0eBootstrapable Builds\u9879\u76ee\u5bc6\u5207\u76f8\u5173\u3002MES\u7684\u76ee\u6807\u662f\u4e3aGuix\u7cfb\u7edf\u548c\u5176\u4ed6\u611f\u5174\u8da3\u7684GNU/Linux\u53d1\u884c\u7248\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u57fa\u4e8e\u6e90\u4ee3\u7801\u7684\u5f15\u5bfc\u8def\u5f84\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ece\u6700\u5c0f\u7684\u3001\u6613\u4e8e\u68c0\u67e5\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6(\u5e94\u8be5\u662f\u53ef\u8bfb\u7684\u6e90\u4ee3\u7801)\u5f00\u59cb\uff0c\u7136\u540e\u5f15\u5bfc\u5230\u63a5\u8fd1R6RS\u65b9\u6848\u7684\u5730\u65b9\u3002\n\u76ee\u524d\uff0cMES\u7531\u4e92\u52a9\u5f0f\u81ea\u6258\u7ba1\u6a21\u5f0f\u89e3\u91ca\u5668\u548cC\u7f16\u8bd1\u5668\u7ec4\u6210\u3002\u5b83\u8fd8\u5b9e\u73b0\u4e86\u4e00\u4e2aC\u5e93\u3002\u6a21\u5f0f\u89e3\u91ca\u5668MES\u662f\u7528SIMPLE C.MesCC\u7684\u5927\u7ea65000\u884c\u4ee3\u7801\u7f16\u5199\u7684\uff0cC\u7f16\u8bd1\u5668\u662f\u7528SCHEMA\u7f16\u5199\u7684\u3002MES\u548cMesCC\u53ef\u4ee5\u4e00\u8d77\u7f16\u8bd1\u4e00\u4e2a\u81ea\u6258\u7ba1\u7684\u6253\u4e86\u8f7b\u91cf\u7ea7\u8865\u4e01\u7684TinyCC\u3002\u4f7f\u7528\u6b64TinyCC\u548cMES C\u5e93\uff0c\u53ef\u4ee5\u5f15\u5bfci686-Linux\u548cx86_64-Linux\u7684\u6574\u4e2aGuix\u7cfb\u7edf\u3002\nGNU Guix\u662f\u4e00\u4e2a\u4e8b\u52a1\u6027\u7684\u5305\u7ba1\u7406\u5668\uff0c\u662fGNU\u7cfb\u7edf\u7684\u9ad8\u7ea7\u53d1\u884c\u7248\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u8fd0\u884c\u5185\u6838Linux\u7684\u7cfb\u7edf\u4e0a\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3ai686\u3001x86_64\u3001ARMv7\u548cAArch64\u673a\u5668\u7684\u72ec\u7acb\u64cd\u4f5c\u7cfb\u7edf\u53d1\u884c\u7248\u4f7f\u7528\u3002\n\u9664\u4e86\u6807\u51c6\u7684\u5305\u7ba1\u7406\u529f\u80fd\u5916\uff0cGuix\u8fd8\u652f\u6301\u4e8b\u52a1\u5347\u7ea7\u548c\u56de\u6eda\u3001\u975e\u7279\u6743\u5305\u7ba1\u7406\u3001\u6309\u7528\u6237\u914d\u7f6e\u6587\u4ef6\u548c\u5783\u573e\u6536\u96c6\u3002\u5f53\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684GNU/Linux\u53d1\u884c\u7248\u4f7f\u7528\u65f6\uff0cGuix\u63d0\u4f9b\u4e86\u4e00\u79cd\u58f0\u660e\u6027\u7684\u3001\u65e0\u72b6\u6001\u7684\u64cd\u4f5c\u7cfb\u7edf\u914d\u7f6e\u7ba1\u7406\u65b9\u6cd5\u3002\u901a\u8fc7Guile\u7f16\u7a0b\u63a5\u53e3\u548c\u5bf9Scheme\u8bed\u8a00\u7684\u6269\u5c55\uff0cGUI\u662f\u9ad8\u5ea6\u53ef\u5b9a\u5236\u548c\u53ef\u7834\u89e3\u7684\u3002", "note_en": "We are delighted to announce that the second reduction by 50% of theGuix  bootstrap binaries has now been officially released!\n The initial set of binaries from which packages are built now weighsin at approximately 60~MiB, a quarter of what it used to be.\n In  a previous blogpostwe elaborate on why this reduction and bootstrappability in general isso important. One reason is to eliminate---or greatly reduce theattack surface of---a  \u201ctrustingtrust\u201dattack. Last summer at the  Breaking Bitcoinconference, Carl Dong gave a  fun andremarkably gentleintroductionand at  FOSDEM2020 I also gave  a short talk about this. If youchoose to believe that building from source is the proper way to docomputing, then it follows that the \u201ctrusting trust\u201d attack is only asymptom of an incomplete or missing bootstrap story.\n  Last year, the first reduction removed the GCC, glibc and Binutilsbinary seeds. The new  Further Reduced Binary Seed bootstrap, mergedin Guix  master last month, removes the \u201cstatic-binaries tarball\u201dcontaining GNU Awk, Bash, Bzip2, the GNU Core Utilities, Grep, Gzip,GNU Make, Patch, sed, Tar, and Xz. It replaces them by  Gash and GashCore Utils. Gash is aminimalist POSIX shell written in Guile Scheme, while Gash Core Utilsis a Scheme implementation for most of the tools found inGNU\u00a0Coreutils, as well as the most essential bits of Awk, grep andsed.\n After three new  GNU Mes releases withnumerous Mes C Library updates and fixes, a major update of Gash andthe first official Gash Utils release, and the  delicate balancing of17 new bootstrap source packages andversions, the bottom of the package graphnow looks like this (woohoo!):\n gcc-mesboot (4.9.4) ^ | (...) ^ | binutils-mesboot (2.14), glibc-mesboot (2.2.5), gcc-core-mesboot (2.95.3) ^ | bash-mesboot (2.05), bzip2-mesboot, gawk-mesboot (3.0.0) diffutils-mesboot (2.7), patch-mesboot (2.5.9), sed-mesboot (1.18) ^ | gnu-make-mesboot (3.82) ^ | gzip-mesboot (1.2.4) ^ | tcc-boot ^ | mes-boot ^ | gash-boot, gash-utils-boot ^ | * bootstrap-mescc-tools, bootstrap-mes (~12 MiB) bootstrap-guile (~48 MiB)\n     The idea of reproducible builds and bootstrappable software  is notverynew.Much of that was implemented for the GNU tools in the early 1990s.Working to recreate it in present time shows us much of that practicewas forgotten.\n Readers who are familiar with the GNU toolchain may havenoticed the version numbers of the  *-mesboot source packages inthis great new bootstrap: They are ancient! That&#39;s a problem.\n Typically, newer versions of the tool chain fix all kinds of bugs,make the software easier to build and add support for new CPUarchitectures, which is great. However---more often than not---simultaneously new features are introduced or dependencies are addedthat are not necessary for bootstrapping and may increase thebootstrap hurdle. Sometimes, newer tools are more strict or oldconfigure scripts do not recognise newer tool versions.\n A trivial example is GNU sed. In the current bootstrap we are usingversion 1.18, which was released in 1993. Until recently the latestversion of sed we could hope to bootstrap was sed-4.2.2 (2012). Newerreleases ship as  xz-compressed tarballs only, and  xz isnotoriously difficult to bootstrap (it needs a fairly recent GCC andtry building that without sed).\n Luckily, the sed maintainers (Jim Meyering)  were happy tocorrectthis mistake and starting from release sed-4.8 (2020) also gzip-compressed tarballs will be shipped. Similar for the GNU CoreUtils: Releases made between 2011 and 2019 will probably be uselessfor bootstrapping. Confronted with this information, also thecoreutils maintainers (P\u00e1draig Brady)  were happytorelease coreutils-8.32also in  gzip compression from now on.\n Even these simple cases show that solving bootstrap problems can onlybe done together: For GNU it really is a project-wide responsibilitythat needs to be addressed.\n Most bootstrap problems or loops are not so easy to solve andsometimes there are no obvious answers, for example:\n In 2013, the year that  ReproducibleBuilds started to gain sometraction, the GNU Compiler Collection  releasedgcc-4.8.0,making C++ a build requirement, and\n and while these examples make for a delightful puzzle from abootstrappability perspective, we would love to see the maintainers ofGNU softwares to consider bootstrappability and start taking moreresponsibility for the bootstrap story of their packages.\n  Our next target will be a third reduction by ~50%; the Full-Sourcebootstrap will replace the MesCC-Tools and GNU Mes binaries by Stage0 and M2-Planet.\n The Stage0 project by Jeremiah Orians starts everything from ~512bytes; virtually nothing. Have a look at this incredible project ifyou haven\u2019t already done so.\n We are most grateful and excited that the  NlnetFoundation has  again decided to sponsor thiswork!\n While the reduced bootstrap currently only applies to the i686-linuxand x86_64-linux architectures, we are thrilled that ARM will bejoining soon. The  Trusted ARM bootstrappingwork is progressing nicely, andGNU Mes is now passing its entire mescc test suite on native ARMv7,and passing nigh its entire gcc test suite on native ARMv7. Work isunderway to compile tcc using that GNU Mes. Adding this secondarchitecture is a very important one towards the creation of auniversal bootstrap!\n Upcoming releases of Gash and Gash-Utils will allow us to clean up thebottom of the package graph and remove many of the \u201cvintage\u201d packages.In particular, the next version of Gash-Utils will be sophisticatedenough to build everything up to  gcc-mesboot using only old versionsof GNU Make and Gzip. This is largely thanks to improvements to theimplementation of Awk, which now includes nearly all of the standardfeatures.\n Looking even further into the future, we will likely have to removethe \u201cvintage\u201d GCC-2.95.3 that was such a helpful stepping stone andreach straight for GCC-4.6.4. Interesting times ahead!\n  Software is bootstrappable when it does not depend on a binary seedthat cannot be built from source. Software that is notbootstrappable---even if it is free software---is a serious securityrisk for a variety of reasons.The  Bootstrappable Builds project aimsto reduce the number and size of binary seeds to a bare minimum.\n GNU Mes is closely related to theBootstrappable Builds project. Mes aims to create an entirelysource-based bootstrapping path for the Guix System and otherinterested GNU/Linux distributions. The goal is to start from aminimal, easily inspectable binary (which should be readable assource) and bootstrap into something close to R6RS Scheme.\n Currently, Mes consists of a mutual self-hosting scheme interpreterand C compiler. It also implements a C library. Mes, the schemeinterpreter, is written in about 5,000 lines of code of simple C.MesCC, the C compiler, is written in scheme. Together, Mes and MesCCcan compile  a lightly patchedTinyCC that is self-hosting. Usingthis TinyCC and the Mes C library, it is possible to bootstrap theentire Guix System for i686-linux and x86_64-linux.\n  GNU Guix is a transactional packagemanager and an advanced distribution of the GNU system that  respectsuserfreedom.Guix can be used on top of any system running the kernel Linux, or itcan be used as a standalone operating system distribution for i686,x86_64, ARMv7, and AArch64 machines.\n In addition to standard package management features, Guix supportstransactional upgrades and roll-backs, unprivileged package management,per-user profiles, and garbage collection. When used as a standaloneGNU/Linux distribution, Guix offers a declarative, stateless approach tooperating system configuration management. Guix is highly customizableand hackable through  Guileprogramming interfaces and extensions to the Scheme language.", "posttime": "2020-06-15 22:52:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79cd\u5b50,reduces,\u5f15\u5bfc", "title": "Guix\u8fdb\u4e00\u6b65\u5c06\u5f15\u5bfc\u79cd\u5b50\u51cf\u5c11\u523025%", "title_en": "Guix Further Reduces Bootstrap Seed to 25%", "transed": 1, "url": "https://guix.gnu.org/blog/2020/guix-further-reduces-bootstrap-seed-to-25/", "via": "", "real_tags": ["\u79cd\u5b50", "reduces", "\u5f15\u5bfc"]}]