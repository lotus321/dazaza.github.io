[{"category": "", "categoryclass": "", "imagename": "2e5cb147f9a750a6b5edcba98e4b5421.jpeg", "infoid": 1005205, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8def\u900f\u6cd5\u5170\u514b\u798f8\u670823\u65e5\u7535-\u5fb7\u56fd\u8868\u793a\uff0c\u5c06\u8981\u6c42\u6240\u6709\u52a0\u6cb9\u7ad9\u63d0\u4f9b\u7535\u52a8\u6c7d\u8f66\u5145\u7535\uff0c\u4ee5\u5e2e\u52a9\u6d88\u9664\u5bf9\u52a0\u6cb9\u7684\u62c5\u5fe7\uff0c\u5e76\u63d0\u632f\u6d88\u8d39\u8005\u5bf9\u7535\u52a8\u6c7d\u8f66\u7684\u9700\u6c42\uff0c\u8fd9\u662f\u51761,300\u4ebf\u6b27\u5143(1,460\u4ebf\u7f8e\u5143)\u7ecf\u6d4e\u590d\u82cf\u8ba1\u5212\u7684\u4e00\u90e8\u5206.\u3002\n\u6b64\u4e3e\u53ef\u80fd\u4f1a\u5927\u5e45\u63d0\u632f\u7535\u52a8\u6c7d\u8f66\u9700\u6c42\uff0c\u4ee5\u53ca\u66f4\u5e7f\u6cdb\u7684\u523a\u6fc0\u8ba1\u5212\uff0c\u5176\u4e2d\u5305\u62ec\u5bf9\u6c61\u67d3\u4e25\u91cd\u7684\u5927\u578b\u5185\u71c3\u673a\u8fd0\u52a8\u578b\u591a\u529f\u80fd\u8f66(SUV)\u8f66\u4e3b\u5f81\u7a0e\uff0c\u4ee5\u53ca\u4e3a\u7535\u52a8\u6c7d\u8f66\u7684\u6210\u672c\u63d0\u4f9b6000\u6b27\u5143\u7684\u8865\u8d34\u3002\n\u5728\u5fb7\u56fd\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\u4e4b\u524d\uff0c\u6cd5\u56fd\u603b\u7edf\u9a6c\u514b\u9f99\u4e0a\u5468\u5ba3\u5e03\u4e86\u4e00\u9879\u4fc3\u8fdb\u7535\u52a8\u6c7d\u8f66\u9500\u552e\u7684\u8ba1\u5212\u3002\n\u201c\u8fd9\u662f\u5bf9\u7535\u6c60\u9a71\u52a8\u6c7d\u8f66\u7684\u975e\u5e38\u660e\u786e\u7684\u627f\u8bfa\uff0c\u5e76\u5c06\u7535\u52a8\u673a\u52a8\u6027\u786e\u7acb\u4e3a\u672a\u6765\u7684\u4e00\u9879\u6280\u672f\uff0c\u201d\u80fd\u6e90\u50a8\u5b58\u4e13\u5bb6The Mobility House\u8868\u793a\uff0c\u8be5\u516c\u53f8\u7684\u6295\u8d44\u8005\u5305\u62ec\u6234\u59c6\u52d2(Daimler)(DAIGn.DE)\u548c\u96f7\u8bfa-\u65e5\u4ea7-\u4e09\u83f1\u8054\u76df(Renault-Nissan-Mitsubishi)\u3002\n\u201c\u5728\u56fd\u9645\u4e0a\uff0c\u8fd9\u4f7f\u5fb7\u56fd\u8dfb\u8eab\u4e8e\u7535\u6c60\u7535\u52a8\u6c7d\u8f66\u652f\u6301\u7684\u9886\u5934\u7f8a\u884c\u5217\u3002\u201d\n\u4f5c\u4e3a\u653f\u5e9c\u523a\u6fc0\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c25\u4ebf\u6b27\u5143\u5c06\u7528\u4e8e\u7535\u6c60\u751f\u4ea7\u548c\u5145\u7535\u57fa\u7840\u8bbe\u65bd\uff0c\u5305\u62ec\u58f3\u724c(Shell)\u3001\u6069\u5409(ENGIE.PA)\u548c\u7279\u65af\u62c9(TSLA.O)\u5728\u5185\u7684\u77f3\u6cb9\u5de8\u5934\u3001\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u548c\u6c7d\u8f66\u5236\u9020\u5546\u90fd\u5728\u8fd9\u4e2a\u9886\u57df\u4e89\u593a\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u7531\u4e8e\u5bf9\u8f66\u8f86\u884c\u9a76\u91cc\u7a0b\u6709\u9650\u7684\u62c5\u5fe7\uff0c\u5ba2\u6237\u5bf9\u7535\u52a8\u6c7d\u8f66\u7684\u9700\u6c42\u4e00\u76f4\u53d7\u5230\u9650\u5236\u3002\u5728\u5fb7\u56fd\uff0c\u53bb\u5e74\u7535\u52a8\u6c7d\u8f66\u4ec5\u5360\u65b0\u4e58\u7528\u8f66\u6ce8\u518c\u91cf\u76841.8%\uff0c\u5176\u4e2d\u67f4\u6cb9\u8f66\u548c\u6c7d\u6cb9\u8f66\u5206\u522b\u536032%\u548c59.2%\u3002\n\u6839\u636e\u5fb7\u56fd\u6c7d\u8f66\u673a\u6784KBA\u7684\u6570\u636e\uff0c\u57285\u6708\u4efd168,148\u8f86\u65b0\u767b\u8bb0\u4e2d\uff0c\u53ea\u67095,578\u8f86(3.3%)\u662f\u7535\u52a8\u6c7d\u8f66\u3002\nQuercus Real Assets\u8463\u4e8b\u957f\u517c\u8054\u5408\u521b\u59cb\u4eba\u8fed\u6208\u00b7\u6bd4\u4e9a\u897f(Diego Biasi)\u8868\u793a\uff0c\u5fb7\u56fd\u7684\u8ba1\u5212\u5c06\u663e\u8457\u63a8\u52a8\u7535\u52a8\u6c7d\u8f66\u7684\u91c7\u7528\u3002\n\u201c\u6211\u4eec\u77e5\u9053\u4ed6\u4eec\u4e0d\u4e70\u7535\u52a8\u8f66\u768497%\u539f\u56e0\u662f\u91cc\u7a0b\u7126\u8651\u3002\u5fb7\u56fd\u7684\u4e3e\u63aa\u662f\u8bd5\u56fe\u89e3\u51b3\u8fd9\u79cd\u91cc\u7a0b\u7126\u8651\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4f60\u77e5\u9053\u52a0\u6cb9\u7ad9\u603b\u662f\u5f00\u653e\u7684\u3002\u201c\u3002\n\u6839\u636e\u5fb7\u56fd\u80fd\u6e90\u548c\u6c34\u884c\u4e1a\u534f\u4f1aBDEW\u7684\u6570\u636e\uff0c\u622a\u81f32020\u5e743\u6708\uff0c\u5fb7\u56fd\u670927,730\u4e2a\u7535\u52a8\u6c7d\u8f66\u5145\u7535\u7ad9\u3002\n\u6839\u636eBDEW\u7684\u6570\u636e\uff0c\u8981\u5b9e\u73b0\u7535\u52a8\u6c7d\u8f66\u7684\u5927\u4f17\u5e02\u573a\uff0c\u81f3\u5c11\u9700\u89817\u4e07\u4e2a\u5145\u7535\u7ad9\u548c7000\u4e2a\u5feb\u901f\u5145\u7535\u7ad9\u3002\n\u7531\u4e8e\u7535\u6c60\u7ec4\u8bbe\u8ba1\u548c\u7535\u6c60\u5316\u5b66\u7684\u6539\u8fdb\uff0c\u7535\u52a8\u6c7d\u8f66\u7684\u6027\u80fd\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u63d0\u9ad8\u4e86\u7ea640%\u3002\n\u6c7d\u6cb9\u52a8\u529b\u6c7d\u8f66\u7684\u71c3\u6cb9\u6548\u7387\u4e5f\u6709\u7c7b\u4f3c\u7684\u63d0\u9ad8\uff0c\u5bfc\u81f4\u52a0\u6cb9\u7ad9\u7684\u6570\u91cf\u51cf\u5c11\u3002\u6839\u636e\u8def\u8fb9\u63f4\u52a9\u534f\u4f1aADAC\u7684\u6570\u636e\uff0c\u52a0\u6cb9\u7ad9\u7684\u6570\u91cf\u5df2\u7ecf\u4ece1965\u5e74\u768440\uff0c640\u4e2a\u51cf\u5c11\u52302020\u5e74\u768414\uff0c118\u4e2a\u3002", "note_en": "FRANKFURT (Reuters) - Germany said it will oblige all petrol stations to offer electric car charging to help remove refuelling concerns and boost consumer demand for the vehicles as part of its 130 billion euro ($146 billion) economic recovery plan.\n  The move could provide a significant boost to electric vehicle demand along with the broader stimulus plan which included taxes to penalise ownership of large polluting combustion-engined sports utility vehicles and a 6,000 euro subsidy towards the cost of an electric vehicle.\n Germany\u2019s announcement follows a French plan to boost electric car sales announced last week by President Macron.\n \u201cIt\u2019s a very clear commitment to battery-powered vehicles and establishes electric mobility as a technology of the future,\u201d energy storage specialist The Mobility House, whose investors include Daimler (  DAIGn.DE) and the Renault-Nissan-Mitsubishi alliance, said.\n \u201cInternationally this puts Germany in the leading group of battery electric vehicle support.\u201d\n As part of the government stimulus, 2.5 billion euros will be spent on battery cell production and charging infrastructure, a field where oil majors, utilities and carmakers, including Shell (  RDSa.L), Engie (  ENGIE.PA) and Tesla (  TSLA.O), are vying for dominance.\n Customer demand for electric cars has been constrained by concerns about the limited operating range of vehicles. In Germany, electric cars made up only 1.8% of new passenger car registrations last year, with diesel and petrol cars accounting for 32% and 59.2% respectively.\n Of the 168,148 new registrations in May, only 5,578 or 3.3% were electric cars according to German vehicle agency KBA.\n Diego Biasi, chairman and co-founder in Quercus Real Assets said the German plan would provide a significant boost to electric vehicle adoption.\n \u201cWe know that 97% of the reason why they\u2019re not buying electric cars is range anxiety. The German move is a way to try and fix this range anxiety since it means you know a petrol station is always open.\u201d\n As of March 2020, Germany had 27,730 electric car charging stations according to BDEW, Germany\u2019s association for the energy and water industry.\n  To achieve a mass market for electric cars, at least 70,000 charging stations and 7,000 fast charging stations are required, according to BDEW.\n Electric vehicle performance has improved by around 40% in the past decade, thanks to improvements in battery pack design and cell chemistry.\n A similar improvement in fuel efficiency of gasoline powered cars has led to a reduction in the number of petrol stations. According to roadside assistance association ADAC, the number of petrol stations has fallen to 14,118 in 2020 from 40,640 in 1965.", "posttime": "2020-06-05 05:23:17", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u63d0\u4f9b,require,\u7535\u52a8\u6c7d\u8f66", "title": "\u5fb7\u56fd\u5c06\u8981\u6c42\u6240\u6709\u52a0\u6cb9\u7ad9\u63d0\u4f9b\u7535\u52a8\u6c7d\u8f66\u5145\u7535", "title_en": "Germany Will Require All Petrol Stations To Provide Electric Car Charging", "transed": 1, "url": "https://www.reuters.com/article/us-health-coronavirus-germany-autos-idUSKBN23B1WU", "via": "", "real_tags": ["\u63d0\u4f9b", "require", "\u7535\u52a8\u6c7d\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "9b0e421b7b86efbd66012e0b06b0d1b7.png", "infoid": 1005204, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7ad9\u4ecd\u7136\u6709\u80fd\u529b\u68c0\u6d4b\u8bbf\u95ee\u8005\u4f55\u65f6\u5728\u4f7f\u7528Chrome\u7684\u9690\u540d(\u79c1\u4eba\u6d4f\u89c8)\u6a21\u5f0f\uff0c\u5c3d\u7ba1\u8c37\u6b4c\u53bb\u5e74\u52aa\u529b\u6253\u7834\u4e86\u8fd9\u4e00\u505a\u6cd5\u3002\n\u4f8b\u5982\uff0c\u4e00\u4e9b\u7528\u6237\u4f7f\u7528\u9690\u540d\u6a21\u5f0f\u7ed5\u8fc7\u5185\u5bb9\u4ed8\u8d39\u5899\u548c\u5404\u79cd\u5185\u5bb9\u8fc7\u6ee4\u5668/\u9650\u5236\u5668\u3002\u6b64\u5916\uff0c\u76ee\u524d\u5927\u591a\u6570\u6d4f\u89c8\u5668\u4e2d\u7684\u9690\u59d3\u57cb\u540d(\u79c1\u4eba\u6d4f\u89c8)\u6a21\u5f0f\u8fd8\u5e26\u6709\u79ef\u6781\u7684\u53cd\u8ddf\u8e2a\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u963b\u6b62\u7f51\u7ad9\u8ddf\u8e2a\u5176\u6d41\u91cf\u5e76\u5c06\u5176\u5b8c\u5168\u8d27\u5e01\u5316\u3002\n\u8fd9\u4e24\u4e2a\u95ee\u9898--\u4ee5\u53ca\u79c1\u4eba\u6d4f\u89c8\u7684\u56fa\u6709\u7528\u9014--\u90fd\u7ed9\u7f51\u7ad9\u9020\u6210\u4e86\u76f4\u63a5\u7684\u7ecf\u6d4e\u635f\u5931\uff0c\u4e5f\u662f\u8fd1\u5e74\u6765\u68c0\u6d4b\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u7684\u811a\u672c\u53d8\u5f97\u6d41\u884c\u7684\u4e3b\u8981\u539f\u56e0\u3002\n2019\u5e74\u521d\uff0c\u8c37\u6b4c\u51b3\u5b9a\u5bf9\u8fd9\u7c7b\u811a\u672c\u91c7\u53d6\u7acb\u573a\u30022019\u5e747\u6708\u53d1\u5e03\u7684Chrome 76\u5305\u542b\u4e86\u4e00\u9879\u66f4\u65b0\uff0c\u53ef\u4ee5\u963b\u6b62\u7f51\u7ad9\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edfAPI\u6765\u68c0\u6d4b\u7528\u6237\u4f7f\u7528\u7684\u662fChrome\u7684\u6b63\u5e38\u6d4f\u89c8\u6a21\u5f0f\u8fd8\u662f\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u3002\n\u5728Chrome76\u4e4b\u524d\uff0c\u6587\u4ef6\u7cfb\u7edfAPI\u5728\u9690\u540d\u6a21\u5f0f\u4e0b\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u7f51\u7ad9\u64cd\u4f5c\u5458\u53ea\u9700\u67e5\u8be2\u6b64API\u5c31\u53ef\u4ee5\u627e\u51fa\u7528\u6237\u662f\u5426\u5728\u4f7f\u7528\u9690\u540d\u6a21\u5f0f\u3002\u5728Chrome76\u4e2d\uff0c\u8c37\u6b4c\u6fc0\u6d3b\u4e86\u9690\u540d\u6a21\u5f0f\u7a97\u53e3\u7684\u6587\u4ef6\u7cfb\u7edfAPI\uff0c\u4f7f\u5f97\u4e4b\u524d\u7684\u68c0\u6d4b\u811a\u672c\u53d8\u5f97\u6beb\u65e0\u7528\u5904\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u66f4\u65b0\u5e76\u4e0d\u662f\u4e07\u65e0\u4e00\u5931\u7684\u3002\u8c37\u6b4c\u5e76\u6ca1\u6709\u5b8c\u5168\u6fc0\u6d3b\u6587\u4ef6\u7cfb\u7edfAPI\uff0c\u53ea\u662f\u5c06\u533f\u540d\u6a21\u5f0f\u7a97\u53e3\u53ef\u4ee5\u8bbf\u95ee\u7684\u5b58\u50a8\u7a7a\u95f4\u786c\u6027\u9650\u5236\u4e3a120MB\u3002\n\u5728Chrome 76\u53d1\u5e03\u540e\uff0c\u7a0b\u5e8f\u5458\u82b1\u4e86\u4e0d\u5230\u4e00\u5468\u7684\u65f6\u95f4\u624d\u53d1\u73b0\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u5e76\u5f00\u53d1\u4e86\u63a2\u6d4b\u6587\u4ef6\u7cfb\u7edfAPI\u7684\u811a\u672c\uff0c\u4ee5\u786e\u5b9a\u7f51\u7ad9\u53ef\u4ee5\u8bbf\u95ee\u7684\u5b58\u50a8\u7a7a\u95f4\u91cf\uff0c\u5e76\u95f4\u63a5\u68c0\u6d4b\u7528\u6237\u662f\u5426\u6b63\u5728\u4f7f\u7528\u9690\u540d\u6a21\u5f0f\u3002\n2019\u5e748\u6708\u53d1\u5e03\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u5267\u672c[1\uff0c2]\uff0c\u5176\u4e2d\u4e00\u4e2a\u751a\u81f3\u767b\u4e0a\u4e86\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u7684\u7f51\u7ad9\uff0c\u8bc1\u5b9e\u4e86\u8fd9\u4e9b\u5267\u672c\u5728\u8bb8\u591a\u5728\u7ebf\u5185\u5bb9\u51fa\u7248\u5546\u4e2d\u662f\u591a\u4e48\u53d7\u6b22\u8fce\u3002\n\u5728\u56de\u7b54\u79d1\u6280\u65b0\u95fb\u7f51\u7ad9\u561f\u561f\u7535\u8111\u7684\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u8c37\u6b4c\u57282019\u5e748\u6708\u627f\u8bfa\u4fee\u590d\u65c1\u8def\u5e76\u963b\u6b62\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u68c0\u6d4b\u3002\n\u7136\u800c\uff0c9\u4e2a\u6708\u540e\uff0c\u5728Chrome\u548c\u6240\u6709\u5176\u4ed6\u57fa\u4e8eChromium\u7684\u6d4f\u89c8\u5668(\u5982Edge\u3001Opera\u3001Vivaldi\u548cBrave)\u4e2d\u4ecd\u7136\u53ef\u4ee5\u68c0\u6d4b\u5230\u9690\u540d\u6a21\u5f0f\uff0c\u6240\u6709\u8fd9\u4e9b\u6d4f\u89c8\u5668\u90fd\u5171\u4eabChrome\u4ee3\u7801\u5e93\u7684\u6838\u5fc3\u3002\n\u6b64\u5916\uff0c\u5f00\u53d1\u4eba\u5458\u91c7\u7528\u4e86\u53bb\u5e74\u5171\u4eab\u7684\u811a\u672c\uff0c\u5e76\u5c06\u5bf9\u975eChrome\u6d4f\u89c8\u5668\u7684\u652f\u6301\u6269\u5c55\u5230\u975eChrome\u6d4f\u89c8\u5668\uff0c\u5982Firefox\u548cSafari\uff0c\u5141\u8bb8\u7f51\u7ad9\u5168\u9762\u5c4f\u853d\u533f\u540d\u6a21\u5f0f\u7684\u7528\u6237\u3002\n\u76ee\u524d\uff0c\u65b0\u7684Chrome\u66f4\u65b0\u963b\u6b62\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u68c0\u6d4b\u6ca1\u6709\u6700\u540e\u671f\u9650\uff0c\u7136\u800c\uff0c\u4eca\u5929\uff0c\u8c37\u6b4c\u53ef\u80fd\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u6709\u5174\u8da3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5468\u4e8c\uff0c\u8be5\u516c\u53f8\u5728\u4e00\u8d77\u96c6\u4f53\u8bc9\u8bbc\u4e2d\u88ab\u70b9\u540d\uff0c\u5176\u5e7f\u544a\u90e8\u95e8\u88ab\u63a7\u79d8\u5bc6\u8ddf\u8e2a\u7528\u6237\uff0c\u5373\u4f7f\u4ed6\u4eec\u662f\u5728\u533f\u540d\u6a21\u5f0f\u4e0b\u6d4f\u89c8\u7f51\u7edc\u3002\n\u50cf\u8c37\u6b4c\u8fd9\u6837\u7684\u5e7f\u544a\u5546\u90fd\u6709\u4e00\u7cfb\u5217\u6307\u6807\u6765\u8ddf\u8e2a\u6b63\u5e38\u6a21\u5f0f\u548c\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u7684\u7528\u6237\u3002\u5c4f\u853d\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u68c0\u6d4b\u4e0d\u4f1a\u963b\u6b62\u5e7f\u544a\u5546\u5728\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u4e0b\u8ddf\u8e2a\u7528\u6237\uff0c\u56e0\u4e3a\u7f51\u7ad9\u8fd0\u8425\u5546\u548c\u5e7f\u544a\u5546\u4ecd\u5c06\u770b\u5230IP\u5730\u5740\u548c\u5176\u4ed6\u6d41\u91cf\u6570\u636e\u7b49\u4fe1\u606f\u3002\u7136\u800c\uff0c\u8fd9\u5c06\u5e2e\u52a9\u8c37\u6b4c\u8d62\u5f97\u4e00\u4e9b\u7528\u6237\u7684\u4fe1\u4efb\uff0c\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5173\u5fc3\u81ea\u5df1\u7684\u9690\u79c1\uff0c\u4e0d\u559c\u6b22\u56e0\u4e3a\u4ed6\u4eec\u5904\u4e8e\u9690\u59d3\u57cb\u540d\u6a21\u5f0f\u800c\u88ab\u7f51\u7ad9\u62d2\u7edd\u63d0\u4f9b\u670d\u52a1\u3002", "note_en": "Websites are still capable of detecting when a visitor is using Chrome&#39;s incognito (private browsing) mode, despite Google&#39;s efforts last year to disrupt the practice.\n  For example, some users employ incognito mode to bypass content paywalls and various content filters/limiters. In addition, current incognito (private browsing) modes in most browsers today also ship with aggressive anti-tracking features that block websites from tracking and fully monetizing their traffic.\n Both issues -- and the inherent use of private browsing -- result in direct financial losses to websites and the primary reasons why scripts that detect incognito modes have become popular in recent years.\n  In early 2019, Google decided to  take a stance against such scripts. Chrome 76, released in July 2019, included an update that blocked websites from using the FileSystem API to detect if a user was using Chrome&#39;s normal browsing mode or its incognito mode.\n   Before Chrome 76, the FileSystem API was simply not available in incognito mode, and website operators only had to query this API to find out if a user was using incognito mode. With Chrome 76, Google activated the FileSystem API for incognito mode windows making previous detection scripts useless. However, this update wasn&#39;t foolproof. Google didn&#39;t fully activate the FileSystem API, but merely set up a hard limit to the amount of storage space that incognito mode windows could access, at 120 MB.\n It took programmers under a week after the Chrome 76 release to discover what was happening, and develop scripts that probed the FileSystem API to determine the amount of storage space a website could access, and indirectly detect if the user was using incognito mode or not.\n   Two different scripts were released in August 2019 [ 1,  2], and one of them even  made its way into the New York Times&#39; website, confirming how popular these scripts are with many online content publishers.\n  Answering a question from tech news site  Bleeping Computer, Google promised in August 2019 to fix the bypass and block incognito mode detections.\n However, nine months later, it is still possible to detect incognito mode in Chrome, and all the other Chromium-based browsers, such as Edge, Opera, Vivaldi, and Brave, all of which share the core of Chrome&#39;s codebase.\n Furthermore, developers have taken the scripts shared last year and have  expanded support to non-Chrome browsers, such as Firefox and Safari, allowing sites to block users in incognito mode across the board.\n Currently, there is no deadline for a new Chrome update to block incognito mode detections, however, today, Google might be interested more than ever in fixing this issue.\n On Tuesday, the company has been  named in a class-action lawsuit where its ad division has been accused of secretly tracking users even if they were navigating the web in incognito mode.\n Advertisers like Google have a bevy of indicators to track users in both normal and incognito mode alike. Blocking incognito mode detection won&#39;t stop advertisers from tracking users in incognito mode, as both website operators and advertisers will still see information such as IP addresses and other traffic data. However, it will help Google earn some good faith with its users, many of which care about their privacy and don&#39;t like to be denied service by websites just because they&#39;re in incognito mode.", "posttime": "2020-06-05 05:22:58", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "chrome,\u6a21\u5f0f,mode,\u7f51\u7ad9", "title": "\u9690\u8eab\u6a21\u5f0f\u68c0\u6d4b\u5728Chrome\u4e2d\u4ecd\u7136\u6709\u6548\uff0c\u5c3d\u7ba1\u627f\u8bfa\u4fee\u590d", "title_en": "Incognito Mode Detection Still Works in Chrome Despite Promise To Fix", "transed": 1, "url": "https://www.zdnet.com/article/incognito-mode-detection-still-works-in-chrome-despite-promise-to-fix/", "via": "", "real_tags": ["chrome", "\u6a21\u5f0f", "mode", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "7c27e0a3e1ba29183af76ea17d293660.jpg", "infoid": 1005203, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "NSS\u5728\u6267\u884cDSA\u7b7e\u540d\u65f6\u663e\u793a\u51fa\u65f6\u95f4\u5dee\u5f02\uff0c\u8fd9\u662f\u53ef\u653b\u51fb\u7684\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u6cc4\u9732\u79c1\u94a5\u3002\n\u6d4f\u89c8\u6076\u610f\u9875\u9762\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751fSharedWorkerService\u4e2d\u7684\u4e89\u7528\u6761\u4ef6\uff0c\u5e76\u5bfc\u81f4\u6f5c\u5728\u7684\u53ef\u5229\u7528\u6f0f\u6d1e\u5d29\u6e83\u3002\nMozilla\u5f00\u53d1\u4eba\u5458Iain\u7231\u5c14\u5170\u5728\u79fb\u9664\u672a\u88c5\u7bb1\u7684\u5bf9\u8c61\u65f6\u53d1\u73b0\u7f3a\u5c11\u7c7b\u578b\u68c0\u67e5\uff0c\u5bfc\u81f4\u5d29\u6e83\u3002\u6211\u4eec\u5047\u8bbe\u53ea\u8981\u4ed8\u51fa\u8db3\u591f\u7684\u52aa\u529b\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u8fd0\u884c\u4efb\u610f\u4ee3\u7801\u3002\nMozilla\u5f00\u53d1\u4eba\u5458\u6c64\u59c6\u00b7\u8463\u548c\u5361\u5c14\u00b7\u6c64\u59c6\u6797\u68ee\u62a5\u544a\u4e86Firefox68.8\u4e2d\u5b58\u5728\u7684\u5185\u5b58\u5b89\u5168\u9519\u8bef\u3002\u5176\u4e2d\u4e00\u4e9b\u9519\u8bef\u663e\u793a\u4e86\u5185\u5b58\u635f\u574f\u7684\u8bc1\u636e\uff0c\u6211\u4eec\u63a8\u6d4b\uff0c\u53ea\u8981\u4ed8\u51fa\u8db3\u591f\u7684\u52aa\u529b\uff0c\u5176\u4e2d\u4e00\u4e9b\u9519\u8bef\u5c31\u53ef\u4ee5\u88ab\u5229\u7528\u6765\u8fd0\u884c\u4efb\u610f\u4ee3\u7801\u3002\n\u5982\u679cThunderbird\u914d\u7f6e\u4e3a\u5bf9IMAP\u670d\u52a1\u5668\u4f7f\u7528STARTTLS\uff0c\u5e76\u4e14\u670d\u52a1\u5668\u53d1\u9001PREAUTH\u54cd\u5e94\uff0c\u5219Thunderbird\u5c06\u7ee7\u7eed\u4f7f\u7528\u672a\u52a0\u5bc6\u7684\u8fde\u63a5\uff0c\u4ece\u800c\u5bfc\u81f4\u7535\u5b50\u90ae\u4ef6\u6570\u636e\u5728\u6ca1\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\u3002", "note_en": "NSS has shown timing differences when performing DSA signatures, which was exploitable and could eventually leak private keys.\n When browsing a malicious page, a race condition in our SharedWorkerService could occur and lead to a potentially exploitable crash.\n Mozilla developer Iain Ireland discovered a missing type check during unboxed objects removal, resulting in a crash. We presume that with enough effort that it could be exploited to run arbitrary code.\n Mozilla developers Tom Tung and Karl Tomlinson reported memory safety bugs present in Firefox 68.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.\n If Thunderbird is configured to use STARTTLS for an IMAPserver, and the server sends a PREAUTH response, thenThunderbird will continue with an unencrypted connection,causing email data to be sent without protection.", "posttime": "2020-06-05 05:21:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u4fe1\u606f,information,\u5bfc\u81f4", "title": "CVE-2020-12398\uff1aIMAP STARTTLS\u5b89\u5168\u964d\u7ea7\u5bfc\u81f4\u4fe1\u606f\u6cc4\u9732", "title_en": "CVE-2020-12398: Security downgrade with IMAP STARTTLS leads to information leaka", "transed": 1, "url": "https://www.mozilla.org/en-US/security/advisories/mfsa2020-22/#CVE-2020-12398", "via": "", "real_tags": ["2020", "\u4fe1\u606f", "\u5bfc\u81f4"]}, {"category": "", "categoryclass": "", "imagename": "9d9520022451e61a3cb2a9abdb03a924.png", "infoid": 1005202, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57282020\u5e746\u67084\u65e5\u4e0a\u5348\uff0c\u6211\u4eec\u7684\u8b66\u62a5\u7cfb\u7edf\u5f00\u59cb\u901a\u77e5\u56e2\u961f\u8bbf\u95eeGitBook\u5185\u5bb9\u65f6\u51fa\u73b0\u95ee\u9898\u3002\u6211\u4eec\u76d1\u6d4b\u5230\uff0c\u6240\u6709\u7684GitBook\u5185\u5bb9\u90fd\u9010\u6e10\u4e14\u8fc5\u901f\u5730\u53d8\u5f97\u4e0d\u53ef\u7528\u3002\u5230\u4e86\u4e2d\u5348\uff0c\u6211\u4eec\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u65e0\u6cd5\u8bbf\u95ee\uff0c\u751a\u81f3\u5230\u4e86\u65e0\u6cd5\u4f7f\u7528@gitbook.com\u90ae\u4ef6\u6536\u53d1\u7535\u5b50\u90ae\u4ef6\u7684\u5730\u6b65\u3002\n\u8fd9\u4efd\u62a5\u544a\u65e8\u5728\u89e3\u91ca\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u662f\u5982\u4f55\u884c\u52a8\u7684\uff0c\u4ee5\u53ca\u6211\u4eec\u6b63\u5728\u505a\u4e9b\u4ec0\u4e48\u6765\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u518d\u6b21\u53d1\u751f\u3002\nGoogle\u57df\u540d\u6682\u505c\u4e86\u6211\u4eec\u7684\u57df\u540d\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6682\u505c\u4e86\u4e00\u4e2a\u7f51\u7ad9\u4e0a\u7684\u9493\u9c7c\u6d3b\u52a8\u3002\n\u6211\u4eec\u51cf\u8f7b\u4e86\u81ea\u5b9a\u4e49\u57df\u7684\u5f71\u54cd\uff0c\u5e76\u4e0e\u4ed6\u4eec\u7684\u652f\u6301\u56e2\u961f\u8fdb\u884c\u4e86\u4e00\u5929\u7684\u96f6\u661f\u4ea4\u6d41\uff0c\u76f4\u5230\u4ed6\u4eec\u6700\u7ec8\u89e3\u9664\u6682\u505c\u3002\n\u5c55\u671b\u672a\u6765\uff0c\u6211\u4eec\u5c06\u63d0\u9ad8\u6076\u610f\u5185\u5bb9\u68c0\u6d4b\u548c\u6682\u505c\u8d26\u6237\u7684\u901f\u5ea6\u3002\n\u7531\u4e8e\u6211\u4eec\u7684\u670d\u52a1\u672c\u8eab\u62a5\u544a\u6b63\u5e38\uff0c\u6211\u4eec\u5f88\u5feb\u610f\u8bc6\u5230\u95ee\u9898\u8981\u4e48\u51fa\u5728\u6211\u4eec\u7684DNS\u63d0\u4f9b\u5546\uff0c\u8981\u4e48\u51fa\u5728GitBook\u57df\u3002\n\u5728\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f406\uff1a48\uff0c\u6211\u4eec\u6536\u5230\u4e86\u6765\u81eaGoogle\u57df\u540d\u56e2\u961f\u7684\u7b2c\u4e00\u6b21\u901a\u4fe1\uff0c\u901a\u77e5\u6211\u4eec\u6240\u6709\u7684GitBook\u57df\u540d\u90fd\u56e0\u4e3a\u9493\u9c7c\u6d3b\u52a8\u7684\u62a5\u544a\u800c\u88ab\u6682\u505c\u3002\nGitBook\u662f\u4e00\u4e2a\u5185\u5bb9\u521b\u4f5c\u5e73\u53f0\u3002\u6211\u4eec\u5141\u8bb8\u4efb\u4f55\u4eba\u7f16\u5199\u5185\u5bb9\u5e76\u5c06\u5176\u53d1\u5e03\u7ed9\u4ed6\u4eec\u7684\u56e2\u961f\u6216\u516c\u4f17\u3002\n\u6211\u4eec\u7684\u7edd\u5927\u591a\u6570\u7528\u6237\u90fd\u5728\u4f7f\u7528GitBook\u6765\u7f16\u5199\u66f4\u597d\u7684\u5185\u5bb9\u548c\u5206\u4eab\u77e5\u8bc6\u3002\u7136\u800c\uff0c\u5c11\u6570\u7528\u6237(\u901a\u5e38\u662f\u673a\u5668\u4eba\u7528\u6237)\u6ee5\u7528GitBook\u5e73\u53f0\u521b\u5efa\u5783\u573e\u5185\u5bb9\u6216\u8bd5\u56fe\u5192\u5145\u4ed6\u4eba\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u4ece\u8bbf\u95ee\u8005\u90a3\u91cc\u9493\u9c7c\u4fe1\u606f\u3002\n\u4ece\u7b2c\u4e00\u5929\u8d77\uff0c\u6211\u4eec\u5c31\u4e00\u76f4\u5728\u5904\u7406\u6b64\u7c7b\u6ee5\u7528\u884c\u4e3a\u3002\u6211\u4eec\u8981\u6c42\u7528\u6237\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u548c\u7535\u8bdd\u53f7\u7801\u9a8c\u8bc1\u4ed6\u4eec\u7684\u5e10\u6237\uff0c\u4ee5\u4fbf\u6211\u4eec\u77e5\u9053\u4ed6\u4eec\u662f\u771f\u5b9e\u7684\uff0c\u6211\u4eec\u6709\u80fd\u529b\u5728\u770b\u5230\u7528\u6237\u6ee5\u7528\u5e73\u53f0\u65f6\u7acb\u5373\u5220\u9664\u5185\u5bb9\u5e76\u5c06\u5176\u7981\u6b62\uff0c\u6211\u4eec\u7684\u652f\u6301\u56e2\u961f\u4f1a\u5c3d\u804c\u5c3d\u8d23\u5730\u54cd\u5e94\u8fd9\u7c7b\u8bf7\u6c42\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u4eec\u770b\u5230GitBook\u5e73\u53f0\u4e0a\u7684\u9493\u9c7c\u5185\u5bb9\u6709\u6240\u589e\u52a0\u3002\u5728\u4e00\u4e9b\u52e4\u594b\u7684\u7528\u6237\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u8bc6\u522b\u4e86\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5e76\u7981\u6b62\u4e86\u6240\u6709\u6d89\u53ca\u7684\u8d26\u6237\u3002\u8c37\u6b4c\u4e5f\u5728\u5185\u90e8\u8bc6\u522b\u4e86\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5e76\u5c06\u5176\u6807\u8bb0\u4e3a\u9488\u5bf9\u6211\u4eec\uff0c\u8fd9\u6700\u7ec8\u5bfc\u81f4\u4e86\u6211\u4eec\u6240\u6709\u57df\u540d\u7684\u5168\u9762\u7981\u6b62\u3002\n\u6211\u4eec\u79ef\u6781\u8bbe\u8ba1\u6211\u4eec\u7684\u6574\u4e2a\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u80fd\u591f\u5904\u7406\u5931\u8d25\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5c3d\u53ef\u80fd\u4f7f\u7528\u65e0\u670d\u52a1\u5668\u67b6\u6784\uff0c\u5e76\u5728\u9700\u8981\u90e8\u7f72\u6211\u4eec\u81ea\u5df1\u7684\u670d\u52a1\u5668\u65f6\u91c7\u7528\u591a\u8282\u70b9\u6545\u969c\u8f6c\u79fb\u7b56\u7565\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u57df\u540d\u6ce8\u518c\u5546\u662f\u60a8\u65e0\u6cd5\u51cf\u8f7b\u7684\u5355\u4e00\u6545\u969c\u70b9\u3002\u5982\u679c\u60a8\u7684\u6ce8\u518c\u5546\u51b3\u5b9a\u505c\u6b62\u5904\u7406gitbook.com&34\uff1b\uff0c\u60a8\u5c06\u5b8c\u5168\u53d7\u4ed6\u4eec\u7684\u6446\u5e03\u3002DNS\u548c\u57df\u5904\u7406\u662f\u5bfc\u81f4\u5927\u91cf\u4e2d\u65ad\u7684\u539f\u56e0\uff0c\u5c24\u5176\u662f\u5728\u6700\u8fd1\u51e0\u5e74\u3002\n\u6211\u4eec\u7acb\u5373\u5168\u529b\u4ee5\u8d74\uff0c\u8ba9\u4e00\u5207\u6062\u590d\u6b63\u5e38\u3002\u6211\u4eec\u6700\u521d\u7684\u53cd\u5e94\u662f\u4e0eGoogle\u57df\u540d\u652f\u6301\u56e2\u961f\u5f00\u901a\u4e00\u6761\u6c9f\u901a\u6e20\u9053\uff0c\u4e86\u89e3\u62a5\u544a\u4e86\u54ea\u4e9b\u5185\u5bb9\uff0c\u4ee5\u53ca\u6211\u4eec\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u6765\u8ba9\u4e8b\u60c5\u6062\u590d\u6b63\u5e38\u3002\n\u5728\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f408\uff1a06\uff0c\u6211\u4eec\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u901a\u77e5\u6211\u4eec\u5df2\u7ecf\u62a5\u544a\u7684\u7279\u5b9a\u57df\u540d(\u7279\u522b\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u5728GitBook\u4e0a\u7981\u7528\u4e86)\uff0c\u4ee5\u53ca\u89e3\u9501\u6211\u4eec\u7684\u57df\u540d\u6240\u9700\u7684\u6b65\u9aa4(\u8fd9\u5305\u62ec\u5bf9\u5185\u5bb9\u7684\u7b2c\u4e09\u65b9\u626b\u63cf\u548cGitBook\u6574\u4f53\u7684\u6f0f\u6d1e\u62a5\u544a-\u663e\u7136\u5728\u77ed\u671f\u5185\u65e0\u6cd5\u5b9e\u73b0)\u3002\n\u7531\u4e8e\u662f\u6211\u4eec\u7684\u6574\u4e2a\u57df\u540d\u88ab\u6682\u505c\uff0cGitBook\u57df\u540d\u9664\u4e86\u62fc\u547d\u5bfb\u627e\u8c37\u6b4c\u652f\u6301\u56e2\u961f\u7684\u4eba\u6765\u5904\u7406\u6211\u4eec\u7684\u6848\u4ef6\u4e4b\u5916\uff0c\u6ca1\u6709\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u4eec\u7684\u8bb8\u591a\u7528\u6237\u90fd\u8fde\u63a5\u4e86\u4ed6\u4eec\u7684\u81ea\u5b9a\u4e49\u57df\uff0c\u4ee5\u6307\u5411\u4ed6\u4eec\u7684GitBook\u5185\u5bb9\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u7528\u6237\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u57df\uff0c\u5e76\u8981\u6c42\u6211\u4eec\u7684\u7528\u6237\u5c06\u4ed6\u4eec\u7684CNAME\u6761\u76ee\u4fee\u6539\u4e3a\u6211\u4eec\u7684\u65b0\u57df\u3002\u6211\u4eec\u8bbe\u6cd5\u542f\u52a8\u4e86CloudFlare Worker\uff0c\u5e76\u5728UTC\u65f6\u95f409\uff1a30\u5de6\u53f3\u5f00\u59cb\u8fd0\u884c\uff0c\u5e76\u5f00\u59cb\u8ba9\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u57df\u5ba2\u6237\u7aef\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u53d8\u901a\u65b9\u6cd5\u3002\n\u5927\u7ea6\u5728\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f411\u70b9\u5de6\u53f3\uff0c\u6211\u4eec\u8bbe\u6cd5\u901a\u8fc7\u5b9e\u65f6\u804a\u5929\u4e0eGoogle\u57df\u540d\u652f\u6301\u56e2\u961f\u7684\u67d0\u4e2a\u4eba\u53d6\u5f97\u4e86\u8054\u7cfb\u3002\u4ed6\u4eec\u544a\u8bc9\u6211\u4eec\uff0c\u6b64\u6848\u5df2\u5347\u7ea7\u5230\u5408\u89c4\u56e2\u961f\uff0c\u6211\u4eec\u5c06\u572824-48\u5c0f\u65f6\u5185\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6536\u5230\u4ed6\u4eec\u7684\u56de\u590d\u2026\u2026\u3002\u53d1\u9001\u5230\u4ed6\u4eec\u521a\u6302\u8d77\u7684\u57df\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740.\u3002\n\u968f\u7740\u538b\u529b\u4e0a\u5347\u5230\u65e0\u6cd5\u514b\u670d\u7684\u7a0b\u5ea6\uff0c\u6211\u4eec\u75af\u72c2\u5730\u5c06\u65f6\u95f4\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u662f\u8bd5\u56fe\u4e0e\u4efb\u4f55\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6848\u4f8b\u7684\u4eba\u8054\u7cfb\uff0c\u4e8c\u662f\u5728Twitter\u548c\u5bf9\u8bb2\u673a\u4e0a\u5411\u6211\u4eec\u7684\u5ba2\u6237\u505a\u51fa\u56de\u5e94\uff0c\u4e8c\u662f\u8bd5\u56fe\u96c6\u601d\u5e7f\u76ca\uff0c\u5728\u4e0d\u4f9d\u8d56\u8c37\u6b4c\u56de\u5e94\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u95ee\u9898\u3002\n\u6211\u4eec\u7684\u5185\u5bb9\u7b5b\u9009\u5668\u4f1a\u68c0\u6d4b\u5230\u6076\u610fGitBook\uff0c\u5e76\u4e14\u5e10\u6237\u4f1a\u56e0\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\u800c\u88ab\u6682\u505c\u3002\n\u4e16\u754c\u6807\u51c6\u65f6\u95f406\uff1a48-\u6211\u4eec\u6536\u5230\u4e00\u5c01\u6765\u81ea\u8c37\u6b4c\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u544a\u8bc9\u6211\u4eec\u6211\u4eec\u7684\u57df\u540d\u5df2\u88ab\u6682\u505c\u3002\n\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f408\uff1a06-\u6211\u4eec\u6536\u5230\u4e00\u5c01\u6765\u81ea\u8c37\u6b4c\u7684\u540e\u7eed\u7535\u5b50\u90ae\u4ef6\uff0c\u544a\u8bc9\u6211\u4eec\u662f\u54ea\u4e9b\u5185\u5bb9\u5bfc\u81f4\u4e86\u6682\u505c\u3002\n11\uff1a00 UTC-\u6211\u4eec\u8bbe\u6cd5\u901a\u8fc7\u5b9e\u65f6\u804a\u5929\u4e0eGoogle\u57df\u540d\u652f\u6301\u4eba\u5458\u53d6\u5f97\u8054\u7cfb\u3002\n\u505c\u673a\u671f\u95f4\u6ca1\u6709\u5ba2\u6237\u6570\u636e\u4e22\u5931\u3002\u5c4f\u853d\u6211\u4eec\u7684\u57df\u540d\u610f\u5473\u7740\u6211\u4eec\u7684\u670d\u52a1\u65e0\u6cd5\u8bbf\u95ee\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u5728\u5173\u8d77\u95e8\u6765\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6211\u4eec\u627f\u62c5\u5bf9Gitbook\u4e0a\u7684\u5185\u5bb9\u8fdb\u884c\u5ba1\u6838\u7684\u5168\u90e8\u8d23\u4efb\u3002\u8fd9\u79cd\u60c5\u51b5\u7a81\u663e\u4e86\u6211\u4eec\u9700\u8981\u66f4\u597d\u5730\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\u6211\u4eec\u6700\u521d\u7684\u6b65\u9aa4\u5305\u62ec\uff1a\n\u68c0\u6d4b\u548c\u963b\u6b62\u53d1\u5e03\u7684\u6076\u610f\u5185\u5bb9\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u4eec\u68c0\u6d4b\u5783\u573e\u90ae\u4ef6\u7684\u80fd\u529b\u6709\u4e86\u5f88\u5927\u7684\u63d0\u9ad8\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u53ea\u662f\u88ab\u52a8\u5730\u505a\u8fd9\u4ef6\u4e8b\u3002\u6211\u4eec\u4f1a\u8ba9\u6240\u6709GitBook\u7f51\u7ad9\u5728\u91cd\u65b0\u53d1\u5e03\u65f6\u901a\u8fc7\u6211\u4eec\u7684\u5185\u5bb9\u8fc7\u6ee4\u5668\u3002\n\u6700\u7ec8\uff0c\u6211\u4eec\u89c9\u5f97\u539f\u6765\u662f\u9493\u9c7c\u95ee\u9898\u7684\u95ee\u9898\u53d8\u6210\u4e86\u4e00\u573a\u5f7b\u5e95\u7684\u707e\u96be\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5728\u57df\u7ea7\u4e0a\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5bf9\u4e8e\u5141\u8bb8\u7528\u6237\u751f\u6210\u5185\u5bb9\u7684\u4ea7\u54c1\u6765\u8bf4\uff0c\u6076\u610f\u5185\u5bb9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u800c\u4e14\u6c38\u8fdc\u90fd\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u57df\u540d\u63d0\u4f9b\u5546\u8c01\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u5e76\u4e0e\u6211\u4eec\u5408\u4f5c\uff0c\u800c\u4e0d\u662f\u53cd\u5bf9\u6211\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u6253\u7b97\u79bb\u5f00\u8c37\u6b4c\u57df\u540d\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u7406\u7531\uff1a\n\u6211\u4eec\u4ece\u8c37\u6b4c\u6536\u5230\u7684\u7b2c\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u662f\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4eec\u5df2\u7ecf\u6682\u505c\u4e86\u6211\u4eec\u7684\u57df\u540d\u3002\u6211\u4eec\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u5173\u4e8e\u4ed6\u4eec\u5df2\u6536\u5230\u62a5\u544a\u6216\u6b63\u5728\u8c03\u67e5\u7684\u8b66\u544a\u3002\n\u6700\u521d\u88ab\u62a5\u9053\u7684GitBook\u7f51\u7ad9\u662f\u4e00\u4e2a\u9493\u9c7c\u8d26\u6237\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u8d26\u6237\u4e00\u4e2a\u591a\u661f\u671f\u4e86\u3002\u8fd9\u4e9b\u5185\u5bb9\u5df2\u88ab\u626b\u63cf\uff0c\u88ab\u8bc6\u522b\u4e3a\u6076\u610f\u5185\u5bb9\uff0c\u5e76\u7acb\u5373\u88ab\u7981\u6b62\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u57286\u67084\u65e5\u6536\u5230\u7684\u505c\u804c\u662f\u57fa\u4e8e\u8c37\u6b4c\u81f3\u5c11\u4e00\u5468\u524d\u6536\u5230\u7684\u4fe1\u606f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u884c\u52a8\u662f\u6b63\u786e\u7684\uff0c\u5e76\u6682\u505c\u4e86\u6211\u4eec\u8fd9\u8fb9\u7684\u8d26\u6237\uff0c\u4f46\u8c37\u6b4c\u5728\u4ed6\u4eec\u53d1\u5e03\u7981\u4ee4\u7684\u90a3\u4e00\u523b\u5e76\u6ca1\u6709\u518d\u6b21\u68c0\u67e5(\u751a\u81f3\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u5df2\u7ecf\u505a\u51fa\u4e86\u62a5\u544a)\u3002\n\u8c37\u6b4c\u57df\u540d\u4e0d\u9002\u5408\u6258\u7ba1\u7528\u6237\u5185\u5bb9\u7684\u7f51\u7ad9\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u7ad9\u70b9\u4e0a\u7684\u5355\u4e2aURL\u662f\u6076\u610f\u7684\uff0c\u6574\u4e2a\u57df\u5c31\u4f1a\u88ab\u7981\u6b62\u3002\u4e0e\u8c37\u6b4c\u57df\u540d\u56e2\u961f\u6bd4\u8f83\u6709\u8da3\u7684\u4ea4\u6d41\u4e4b\u4e00(\u5c3d\u7ba1\u5f53\u65f6\u80af\u5b9a\u4e0d\u662f)\u662f\u5173\u4e8e\u8c37\u6b4c\u81ea\u5df1\u662f\u5426\u4f1a\u5c06\u4ed6\u4eec\u7684\u57df\u540d\u670d\u52a1\u7528\u4e8e\u81ea\u5df1\u7684\u4ea7\u54c1\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u7531\u4e8e\u4e00\u6761\u5783\u573e\u5185\u5bb9\uff0c\u6574\u4e2a\u535a\u5ba2\u6216YouTube\u90fd\u4f1a\u5d29\u6e83\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u4e0e\u652f\u6301\u56e2\u961f\u7684\u6c9f\u901a\u5f88\u5dee\u3002\u6211\u4eec\u4ece\u4ed6\u4eec\u90a3\u91cc\u6536\u5230\u7684\u4fe1\u606f\u5f88\u5c11\uff0c\u6211\u4eec\u6536\u5230\u7684\u4fe1\u606f\u5f88\u5c11\uff0c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\u3002\u6211\u4eec\u4e00\u5ea6\u975e\u5e38\u9700\u8981\u4e00\u4e2a\u8054\u7cfb\u70b9\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u6c42\u52a9\u4e8e\u4f7f\u7528\u6211\u4eec\u7684\u4eba\u624d\u7ecf\u7406\u6765\u5c1d\u8bd5\u5728LinkedIn\u4e0a\u5bfb\u627eGoogle\u57df\u540d\u5de5\u7a0b\u5e08\u3002\n\u4f5c\u4e3a\u4e00\u5bb6\u4ea7\u54c1\u516c\u53f8\uff0c\u6700\u4ee4\u4eba\u6cae\u4e27\u7684\u611f\u89c9\u4e4b\u4e00\u662f\uff0c\u5f53\u4f60\u77e5\u9053\u67d0\u4ef6\u4e8b\u6b63\u5728\u4f24\u5bb3\u4f60\u7684\u7528\u6237\u65f6\uff0c\u4f60\u5374\u65e0\u529b\u4fee\u590d\u5b83\u3002\u8bb8\u591aGitBook\u5ba2\u6237\u90fd\u5728\u4f7f\u7528\u6211\u4eec\u7684\u4ea7\u54c1\u5411\u4ed6\u4eec\u81ea\u5df1\u7684\u7528\u6237\u63d0\u4f9b\u5185\u5bb9\uff0c\u4eca\u5929\u6211\u4eec\u628a\u4ed6\u4eec\u653e\u5728\u548c\u6211\u4eec\u4e00\u6837\u7684\u60c5\u51b5\u4e0b\u3002\n\u6211\u4eec\u8981\u611f\u8c22\u6211\u4eec\u7684\u7528\u6237\u5728\u6211\u4eec\u5de5\u4f5c\u671f\u95f4\u7684\u8010\u5fc3\u548c\u7406\u89e3\u3002\u5c3d\u7ba1\u6bcf\u4e2a\u4eba\u90fd\u5904\u4e8e\u56f0\u96be\u7684\u5883\u5730\uff0c\u4f46\u6211\u4eec\u7684\u5927\u591a\u6570\u7528\u6237\u90fd\u666e\u904d\u8868\u793a\u652f\u6301\u3002\u8bf7\u653e\u5fc3\uff0c\u6211\u4eec\u5c06\u5c3d\u6211\u4eec\u6240\u80fd\u4ece\u9519\u8bef\u4e2d\u5438\u53d6\u6559\u8bad\uff0c\u5e76\u786e\u4fdd\u8fd9\u4e00\u7cfb\u5217\u4e8b\u4ef6\u4e0d\u4f1a\u91cd\u6f14\u3002", "note_en": "During the morning of the 4th June 2020, our alerting system started notifying the team that there were problems accessing GitBook content. We monitored that all GitBook content was gradually and rapidly becoming unavailable. By midday, the majority of our content was inaccessible even to the point where we couldn&#39;t send or receive emails using our @gitbook.com mails.\n This port-mortem aims to explain what happened, how we acted, and what we&#39;re doing to prevent it happening again.\n  Google Domains suspended our domains due to phishing activity on a site we had already suspended.\n We mitigated custom domains, and had a day of sporadic communication with their support team until they eventually lifted the suspension.\n Moving forward, we will be improving our malicious content detection &amp; the speed at which we suspend accounts.\n  With our services themselves reporting OK, we realised quite quickly that the problem was either with our DNS provider or the GitBook domains.\n At 06:48 UTC, we received our first communication from the Google Domains team    telling us that   all GitBook domains had been suspended due to reports of phishing activities.\n  GitBook is a content creation platform. We allow anyone to write content and publish it to their team or to the public.\n The vast majority of our users are using GitBook to write better content and share knowledge. However, a minority of (typically robotic) users abuse the GitBook platform to create spam content or content that attempts to impersonate others in order to phish information from visitors.\n We&#39;ve been dealing with this kind of abuse since day 1. We ask users to verify their accounts with an e-mail and a phone number so that we know they&#39;re genuine, we have the ability to remove content and ban users the moment we see they&#39;re abusing the platform, and our support team are diligent in responding to these kind of requests.\n Over the past few weeks, we&#39;ve seen an increase in phishing content on the GitBook platform. With the help of some of our diligent users, we identified the content and banned all accounts involved. Google had also identified this content internally and flagged it against us, which eventually led to a blanket ban across all our domains.\n  We actively design our entire system to be able to handle things failing. We use a serverless architecture where possible, and employ a multi-node failover strategy whenever we need to deploy our own servers.\n Unfortunately, a domain registrar is a single point-of-failure you can&#39;t mitigate against. If your registrar decides to stop handling &#34;gitbook.com&#34;, you&#39;re completely at their mercy. DNS and domain handling is the cause of a huge number of outages, particularly in recent years.\n  We were immediately all hands on deck to get things back up and running. Our initial response was to open up a line of communication with the Google Domains support team to find out what content had been reported and what we can do to get things back to normal.\n At 08:06 UTC, we received an email informing us of the specific domain that had been reported (and notably, that we had already banned from GitBook) and the steps necessary to unblock our domain (which involved a third-party scan of the content and a vulnerability report of GitBook as a whole - clearly nothing something attainable in the short-term).\n  As it was our entire domain that has been suspended, there was no solution for the GitBook domains besides trying desperately to find someone on the Google support team to handle our case.\n Many of our users have connected their custom domains to point to their GitBook content. For these users, we put in place a temporary working domain and asked our users to modify their CNAME entries to our new domain. We managed to spin up a CloudFlare worker and get things running around 09:30 UTC, and started letting our custom domain clients know how to use the workaround.\n  Around 11:00 UTC, we managed to get in touch with someone from the Google Domains support team via Live Chat. They told us that the case had been escalated to the compliance team and that we&#39;d have their response via e-mail in 24h-48h... sent to an e-mail address on a domain they had just suspended...\n With stress rising to insurmountable levels, we split our time frantically between trying to get in touch with literally anyone who could look at our case, responding on Twitter and Intercom to our customers, and trying to brainstorm ways of fixing the problem without relying on Google&#39;s response.\n     The malicious GitBook is detected by our content filter and the account suspended for phishing activity\n 06:48 UTC - we receive an e-mail from Google telling us our domains have been suspended.\n 08:06 UTC - we receive a follow-up e-mail from Google telling us which content caused the suspension.\n  11:00 UTC - we manage to get in touch with someone from Google Domains support via Live Chat.\n   No customer data was lost during the downtime. Blocking our domains meant that our services were inaccessible, but they were still working correctly behind closed doors.\n  We accept full responsibility for moderating the content on GitBook. This situation has highlighted we need to be better at dealing with this. Our initial steps include:\n Detecting &amp; blocking malicious content as it&#39;s published. Over the past few weeks our ability to detect spam has improved drastically, but we&#39;re still only doing it reactively. We&#39;ll be passing all GitBook sites through our content filter as they&#39;re published.\n  Ultimately, we feel that a problem what was originally a problem with phishing was turned into a complete disaster by how it was handled at the domain level. Malicious content is, and will always be, a problem for products that allow user-generated content. We need to find a domain provider who understands this and works with us rather than against us, so   we intend to move away from Google Domains.  Here are our reasons why:\n  The first e-mail we received from Google was to tell us that they had suspended our domains. We didn&#39;t receive a single warning that they had received a report or that they were investigating.\n  The GitBook site that was originally reported is a phishing account that&#39;s been known to us for over a week now. The content had been scanned, identified as malicious, and immediately banned.\n That means that the suspension we received on the 4th June was based on information received by Google   at least  a week earlier. In this case, we had acted correctly and suspended the account from our side, but Google didn&#39;t check again the moment they gave the ban (or even tell us that a report had been made).\n  Google Domains isn&#39;t suitable for sites hosting user content. As soon as a single URL on the site is detected as malicious, the entire domain is banned. One of the funnier (although certainly not at the time) exchanges with the Google Domains team was around whether Google themselves would use their domain service for their own products. Imagine the entirety of Blogger or YouTube going down due to a single piece of spam content.\n    Overall the communication with the support team was poor. We received very little communication from their side and what little we did receive was poor and unhelpful. At one point we were so desperate for a point of contact that we resorted to using our Talent Manager to try and source Google Domain engineers on LinkedIn.\n  As a product company, one of the most frustrating feelings is being powerless to fix something when you know it&#39;s harming your users. Many GitBook clients are using our product to provide content to their own users, and today we put them in the same situation as we were in.\n We want to thank our users for their patience and understanding whilst we worked through this. There was a general feeling of support from the majority of our users despite everyone being in a difficult situation. Rest assured we&#39;re going to do everything we can to learn from our mistakes and ensure this series of events doesn&#39;t repeat itself.", "posttime": "2020-06-05 05:20:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57df\u540d,google,domains,\u5185\u5bb9", "title": "Google\u57df\u540d\u5c4f\u853d\u6240\u6709Gitbook URL\uff1a\u4e8b\u540e\u5206\u6790", "title_en": "Google Domains blocking all Gitbook URLS: post-mortem", "transed": 1, "url": "https://blog.gitbook.com/tech/post-mortems/06-20-gitbook-domains-blocked-by-registrar", "via": "", "real_tags": ["\u57df\u540d", "google", "domains", "\u5185\u5bb9"]}, {"category": "", "categoryclass": "", "imagename": "4886d1fb90b9f0e66a09ba58e8c63fd0.jpg", "infoid": 1005201, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5e0c\u671b\u5e2e\u52a9\u4eba\u4eec\u66f4\u597d\u5730\u4e86\u89e3\u4ed6\u4eec\u5728Facebook\u4e0a\u770b\u5230\u7684\u65b0\u95fb\u80cc\u540e\u7684\u5e55\u540e\u9ed1\u624b\u3002\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u4eec\u5ba3\u5e03\u4e86\u4e3a\u5b8c\u5168\u6216\u90e8\u5206\u5904\u4e8e\u653f\u5e9c\u7f16\u8f91\u63a7\u5236\u4e0b\u7684\u5a92\u4f53\u8d34\u6807\u7b7e\u7684\u8ba1\u5212\uff0c\u4eca\u5929\u6211\u4eec\u5f00\u59cb\u7ed9\u8fd9\u4e9b\u56fd\u5bb6\u63a7\u5236\u7684\u5a92\u4f53\u8d34\u4e0a\u6807\u7b7e\u3002\u6211\u4eec\u4e3a\u8fd9\u4e9b\u51fa\u7248\u5546\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u900f\u660e\u5ea6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5c06\u5a92\u4f53\u7ec4\u7ec7\u7684\u5f71\u54cd\u529b\u4e0e\u56fd\u5bb6\u7684\u6218\u7565\u652f\u6301\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u8ba4\u4e3a\u4eba\u4eec\u5e94\u8be5\u77e5\u9053\u4ed6\u4eec\u9605\u8bfb\u7684\u65b0\u95fb\u662f\u5426\u6765\u81ea\u53ef\u80fd\u53d7\u5230\u653f\u5e9c\u5f71\u54cd\u7684\u51fa\u7248\u7269\u3002\n\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u5728\u6d89\u53ca\u8fd9\u4e9b\u51fa\u7248\u5546\u7684\u4ed8\u8d39\u5185\u5bb9\u65f6\u540c\u6837\u900f\u660e\uff0c\u6211\u4eec\u5c06\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5f00\u59cb\u4e3a\u8fd9\u4e9b\u51fa\u7248\u5546\u7684\u5e7f\u544a\u8d34\u6807\u7b7e\u3002\n\u56fd\u5bb6\u63a7\u5236\u7684\u5a92\u4f53\u5f88\u5c11\u5728\u7f8e\u56fd\u505a\u5e7f\u544a\u3002\u7136\u800c\uff0c\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\uff0c\u51fa\u4e8e\u9ad8\u5ea6\u8c28\u614e\uff0c\u6211\u4eec\u5c06\u5f00\u59cb\u5c4f\u853d\u7f8e\u56fd\u8fd9\u4e9b\u5a92\u4f53\u7684\u5e7f\u544a\uff0c\u4ee5\u57282020\u5e7411\u6708\u7f8e\u56fd\u5927\u9009\u4e4b\u524d\u7684\u516c\u5f00\u8fa9\u8bba\u4e2d\u63d0\u4f9b\u989d\u5916\u7684\u4e00\u5c42\u4fdd\u62a4\uff0c\u4ee5\u62b5\u5fa1\u5404\u79cd\u7c7b\u578b\u7684\u5916\u56fd\u5f71\u54cd\u3002\n\u6807\u7b7e\u5c06\u5168\u5c40\u663e\u793a\u5728\u5e7f\u544a\u5e93\u9875\u9762\u89c6\u56fe\u3001\u9875\u9762\u4e0a\u548c\u9875\u9762\u900f\u660e\u5ea6\u90e8\u5206\u3002\u5728\u7f8e\u56fd\uff0c\u8fd9\u4e2a\u6807\u7b7e\u4e5f\u5c06\u5728\u4e0b\u5468\u5f00\u59cb\u51fa\u73b0\u5728News Feed\u7684\u5e16\u5b50\u4e0a\u3002\n\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u5bf9\u6765\u81ea\u56fd\u5bb6\u63a7\u5236\u7684\u5a92\u4f53\u7684\u5e7f\u544a\u8d34\u4e0a\u8fd9\u4e2a\u6807\u7b7e\uff0c\u4ece\u51e0\u4e2a\u5a92\u4f53\u5f00\u59cb\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u589e\u52a0\u66f4\u591a\u7684\u5a92\u4f53\u3002\n\u4e3a\u4e86\u7ed9\u6211\u4eec\u7684\u653f\u7b56\u6807\u51c6\u63d0\u4f9b\u4fe1\u606f\uff0c\u6211\u4eec\u54a8\u8be2\u4e86\u4e16\u754c\u5404\u5730\u8d85\u8fc765\u540d\u4e13\u95e8\u4ece\u4e8b\u5a92\u4f53\u3001\u6cbb\u7406\u3001\u4eba\u6743\u548c\u53d1\u5c55\u65b9\u9762\u7684\u4e13\u5bb6\u3002\u6211\u4eec\u4ece\u8fd9\u4e9b\u7ec4\u7ec7\u5f97\u5230\u7684\u610f\u89c1\u5bf9\u4e8e\u7406\u89e3\u653f\u5e9c\u5bf9\u5a92\u4f53\u5b9e\u4f53\u65bd\u52a0\u7f16\u8f91\u63a7\u5236\u7684\u4e0d\u540c\u65b9\u5f0f\u548c\u7a0b\u5ea6\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u77e5\u9053\u5404\u56fd\u653f\u5e9c\u7ee7\u7eed\u4f7f\u7528\u8d44\u91d1\u673a\u5236\u6765\u63a7\u5236\u5a92\u4f53\uff0c\u4f46\u5355\u51ed\u8fd9\u4e00\u70b9\u5e76\u4e0d\u80fd\u8bf4\u660e\u95ee\u9898\u7684\u5168\u90e8\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5bf9\u56fd\u5bb6\u63a7\u5236\u7684\u5a92\u4f53\u7684\u5b9a\u4e49\u4e0d\u4ec5\u4ec5\u662f\u8bc4\u4f30\u8d22\u52a1\u63a7\u5236\u6216\u6240\u6709\u6743\uff0c\u8fd8\u5305\u62ec\u5bf9\u653f\u5e9c\u5b9e\u65bd\u7684\u7f16\u8f91\u63a7\u5236\u7684\u8bc4\u4f30\u3002\n\u57fa\u4e8e\u8fd9\u4e9b\u54a8\u8be2\u548c\u7814\u7a76\uff0c\u6211\u4eec\u5236\u5b9a\u4e86\u81ea\u5df1\u7684\u653f\u7b56\u6807\u51c6\uff0c\u4ee5\u786e\u5b9a\u51fa\u7248\u5546\u662f\u5b8c\u5168\u8fd8\u662f\u90e8\u5206\u5904\u4e8e\u653f\u5e9c\u7684\u7f16\u8f91\u63a7\u5236\u4e4b\u4e0b\u3002\n\u5173\u4e8e\u7ec4\u7ec7\u5982\u4f55\u5b9a\u4e49\u548c\u5b8c\u6210\u5176\u65b0\u95fb\u4f7f\u547d\u7684\u4f7f\u547d\u58f0\u660e\u3001\u4efb\u52a1\u548c/\u6216\u516c\u5f00\u62a5\u9053\n\u6240\u6709\u6743\u7ed3\u6784\uff0c\u5982\u6240\u6709\u8005\u3001\u5229\u76ca\u76f8\u5173\u8005\u3001\u8463\u4e8b\u4f1a\u6210\u5458\u3001\u7ba1\u7406\u5c42\u3001\u653f\u5e9c\u4efb\u547d\u7684\u9886\u5bfc\u804c\u4f4d\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u62c5\u4efb\u6c11\u9009\u804c\u4f4d\u7684\u5b9e\u4f53\u6216\u4e2a\u4eba\u76f4\u63a5\u6216\u95f4\u63a5\u6240\u6709\u6743\u7684\u62ab\u9732\u3002\n\u7f16\u8f91\u51c6\u5219\uff0c\u5982\u5185\u5bb9\u6765\u6e90\u7684\u900f\u660e\u5ea6\u548c\u6765\u6e90\u7684\u72ec\u7acb\u6027\u548c\u591a\u6837\u6027\u3002\n\u6cbb\u7406\u548c\u95ee\u8d23\u673a\u5236\uff0c\u5982\u60e9\u6212\u653f\u7b56\u3001\u6295\u8bc9\u7a0b\u5e8f\u3001\u5916\u90e8\u8bc4\u4f30\u548c\u76d1\u7763\u59d4\u5458\u4f1a\u3002\n\u5982\u679c\u6211\u4eec\u786e\u5b9a\u6709\u8db3\u591f\u7684\u4fdd\u62a4\u63aa\u65bd\u6765\u786e\u4fdd\u7f16\u8f91\u72ec\u7acb\u6027\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8d34\u4e0a\u6807\u7b7e\u3002\u5e0c\u671b\u8bc1\u660e\u5176\u72ec\u7acb\u6027\u7684\u51fa\u7248\u5546\u5fc5\u987b\u81f3\u5c11\u80fd\u591f\u8bc1\u660e\uff1a\n\u4e1c\u9053\u56fd\u7684\u6cd5\u89c4\uff0c\u660e\u786e\u4fdd\u62a4\u8be5\u7ec4\u7ec7\u7684\u7f16\u8f91\u72ec\u7acb\u6027\u3002\n\u7531\u72ec\u7acb\u7684\u3001\u53ef\u4fe1\u7684\u5916\u90e8\u7ec4\u7ec7\u8fdb\u884c\u7684\u8bc4\u4f30\uff0c\u53d1\u73b0\u6cd5\u89c4\u5b9e\u9645\u4e0a\u5df2\u5f97\u5230\u9075\u5b88\uff0c\u5e76\u9075\u5faa\u4e86\u65e2\u5b9a\u7684\u7a0b\u5e8f\u3002\n\u6211\u4eec\u8fd8\u8003\u8651\u5177\u4f53\u56fd\u5bb6\u7684\u56e0\u7d20\uff0c\u5305\u62ec\u65b0\u95fb\u81ea\u7531\uff0c\u5e76\u54a8\u8be2\u7531\u5b66\u8005\u548c\u9886\u5148\u4e13\u5bb6\u8fdb\u884c\u7684\u5f00\u6e90\u7814\u7a76\u3002\n\u5982\u679c\u7ec4\u7ec7\u8ba4\u4e3a\u6211\u4eec\u9519\u8bef\u5730\u8d34\u4e0a\u4e86\u6807\u7b7e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u63d0\u51fa\u4e0a\u8bc9\u3002\u901a\u8fc7\u4e0a\u8bc9\uff0c\u4ed6\u4eec\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u5c06\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u8fdb\u884c\u5ba1\u67e5\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u968f\u7740\u6211\u4eec\u5c06\u8fd9\u4e9b\u6807\u7b7e\u63a8\u51fa\u7ed9\u66f4\u591a\u7684\u51fa\u7248\u5546\uff0c\u6211\u4eec\u6b22\u8fce\u53cd\u9988\uff0c\u5e76\u5c06\u7ee7\u7eed\u54a8\u8be2\u4e13\u5bb6\u5e76\u6539\u8fdb\u6211\u4eec\u7684\u65b9\u6cd5\u3002", "note_en": "We want to help people better understand who\u2019s behind the news they see on Facebook. Several months ago,   we announced  our plan to label media outlets that are wholly or partially under the editorial control of their government, and today we\u2019re starting to apply labels to those state-controlled media outlets. We\u2019re providing greater transparency into these publishers because they combine the influence of a media organization with the strategic backing of a state, and we believe people should know if the news they read is coming from a publication that may be under the influence of a government.\n And to ensure we\u2019re equally transparent when it comes to paid content from these publishers, we will begin labeling ads from these publishers later this year.\n State-controlled media outlets rarely advertise in the US. Nevertheless, later this summer we will begin blocking ads from these outlets in the US out of an abundance of caution to provide an extra layer of protection against various types of foreign influence in the public debate ahead of the November 2020 election in the US.\n  The labels will appear globally in the Ad Library Page view, on Pages, and in the Page Transparency section. In the US, the label will also start to appear on posts in News Feed over the course of the next week.\n Later this summer, we\u2019ll apply the label to ads from state-controlled media outlets, starting with a few outlets and adding more over time.\n    To inform our policy criteria, we consulted more than 65 experts around the world specializing in media, governance, and human rights and development. The input we received from these organizations was crucial to understanding the different ways and degrees to which governments exert editorial control over media entities. We know that governments continue to use funding mechanisms to control media, but this alone doesn\u2019t tell the full story. That\u2019s why our definition of state-controlled media extends beyond just assessing financial control or ownership and includes an assessment of editorial control exerted by a government.\n Based on these consultations and research, we developed our own policy criteria to determine whether a publisher is wholly or partially under the editorial control of a government.\n  Mission statement, mandate, and/or public reporting on how the organization defines and accomplishes its journalistic mission\n Ownership structure such as information on owners, stakeholders, board members, management, government appointees in leadership positions, and disclosure of direct or indirect ownership by entities or individuals holding elected office\n Editorial guidelines such as transparency around sources of content and independence and diversity of sources\n   Governance and accountability mechanisms such as correctional policies, procedure for complaints, external assessments and oversight boards\n If we determine that there are enough protections in place to ensure editorial independence, we will not apply the label. Publishers looking to prove their independence must be able to demonstrate at least:\n A statute in the host country that clearly protects the editorial independence of the organization\n  An assessment by an independent, credible, external organization finding that the statute has in fact been complied with and established procedures have been followed\n We also consider country-specific factors, including press freedom and we consult open-source research conducted by academics and leading experts.\n If an organization believes we have applied the label in error, they can   submit an appeal.  Through the appeal, they can provide additional documentation, which we will review against our definition.\n As we roll these labels out to more publishers over time, we welcome feedback and will continue to consult with experts and refine our approach.", "posttime": "2020-06-05 05:20:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u6765\u81ea,label,\u5a92\u4f53", "title": "Facebook\u5c06\u4e3a\u6765\u81ea\u56fd\u5bb6\u63a7\u5236\u7684\u5a92\u4f53\u7684\u5185\u5bb9\u8d34\u6807\u7b7e", "title_en": "Facebook Will Label Content From State-Controlled Media", "transed": 1, "url": "https://about.fb.com/news/2020/06/labeling-state-controlled-media/", "via": "", "real_tags": ["facebook", "\u6765\u81ea", "label", "\u5a92\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "2a5621d2b0748b90e1e29aec1f053cd8.png", "infoid": 1005199, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0cEmacs\u7684\u7535\u5b50\u90ae\u4ef6\u662f\u4e00\u79cd\u6211\u4e00\u76f4\u5f88\u611f\u6fc0\u7684\u8d85\u80fd\u529b\u3002\u4e0b\u9762\u6211\u5c06\u63cf\u8ff0\u4e00\u4e2a\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u5b83\u9002\u7528\u4e8e\u6211\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u662f\u6211\u559c\u6b22\u7684\u4e1c\u897f\u3002\u8fd9\u79cd\u8bbe\u7f6e\u8ba9\u6211\u51e0\u4e4e\u60f3\u8981\u5199\u63cf\u8ff0\u6027\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u56e0\u4e3a\u5b83\u628a\u5199\u7535\u5b50\u90ae\u4ef6\u7684\u75db\u82e6\u8f6c\u79fb\u5230\u4e86\u540c\u6837\u7684\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u5c31\u50cf\u6211\u559c\u6b22\u5199\u957f\u7bc7\u6587\u7ae0\u3001\u7a0b\u5e8f\u3001\u8bbe\u8ba1\u6587\u6863\u548c\u5176\u4ed6\u6d89\u53ca\u201c\u653e\u4e0b\u6211\u7684\u60f3\u6cd5\u201d\u7684\u5de5\u4ef6\u4e00\u6837\u3002\u6bcf\u5f53\u6211\u770b\u5230\u4e00\u5c01\u7528\u5bcc\u6587\u5199\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u7c97\u7ebf\u6761\u8d85\u8fc7150\u4e2a\u5b57\u7b26\u65f6\uff0c\u6211\u90fd\u4f1a\u6bdb\u9aa8\u609a\u7136\u3002\n\u5f88\u591a\u65f6\u5019\uff0c\u8fd9\u8ba9\u6211\u89c9\u5f97\u56de\u590d\u90ae\u4ef6\u975e\u5e38\u8be6\u7ec6\u7684\u4eba\u5728\u601d\u8003\u548c\u56de\u590d\u8be6\u7ec6\u90ae\u4ef6\u4e4b\u95f4\u51e0\u4e4e\u4e0d\u4f1a\u9047\u5230\u4efb\u4f55\u963b\u529b\u3002\u8003\u8651\u4ee5\u4e0b\u95ee\u9898\uff1a\n\u55ef\uff0c\u6211\u60f3\u8fd9\u4e0d\u662f\u6700\u597d\u7684\u6f14\u793a\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u4ece\u7535\u5b50\u90ae\u4ef6\u4e2d\u6355\u6349\u4e00\u4e9b\u4e1c\u897f\u4ee5\u5907\u5c06\u6765\u53c2\u8003\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4e5f\u8bb8\uff0c\u4f60\u60f3\u4ece\u7535\u5b50\u90ae\u4ef6\u4e2d\u9690\u85cf\u4e00\u4e2a\u91cd\u8981\u7684TODO\u9879\u76ee\uff0c\u5e76\u4e3a\u81ea\u5df1\u505a\u7b14\u8bb0\u3002\u6b64\u5916\uff0c\u81ea\u52a8\u6355\u83b7\u7535\u5b50\u90ae\u4ef6\u7684\u6240\u6709\u5143\u5b57\u6bb5(\u5982From\uff1a\u3001To\uff1a\u3001Sent_Time\uff1a)\u4e0d\u662f\u5f88\u597d\u5417\uff1f\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f88\u660e\u663e\uff0c\u6211\u6b63\u5728\u7528Emacs\u64b0\u5199\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f46\u6211\u4f1a\u9605\u8bfbLKML\u5e76\u6355\u6349\u4e00\u4e9b\u91cd\u8981\u7684\u7b14\u8bb0\uff0c\u4ee5\u4fbf\u7a0d\u540e\u8bbf\u95ee\u3002\u4e3a\u4e86\u4e0d\u8ba9Emacs\u7684\u65b0\u7528\u6237\u4e0d\u77e5\u6240\u63aa\uff0c\u6211\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u6240\u4f7f\u7528\u7684\u7279\u5b9a\u8f6f\u4ef6\u5305\u53ca\u5176\u914d\u7f6e\u7b49\u3002\u8fd9\u53ea\u662f\u4e3a\u4e86\u6fc0\u52b1\u5408\u9002\u7684\u8bfb\u8005\u8003\u8651\u4f7f\u7528Emacs\u4f5c\u4e3a\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u6765\u63d0\u9ad8\u60a8\u7684\u5de5\u4f5c\u6548\u7387\uff0c\u81f3\u5c11\u53ef\u4ee5\u8fbe\u5230\u60a8\u4e0d\u8ba8\u538c\u9605\u8bfb/\u64b0\u5199\u7535\u5b50\u90ae\u4ef6\u7684\u7a0b\u5ea6\u3002\n\u5982\u679c\u4f60\u60f3\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5206\u5fc3(\u901a\u8fc7\u907f\u514d\u4e0d\u5408\u65f6\u5b9c\u7684\u7535\u5b50\u90ae\u4ef6\u5f39\u51fa)\uff0c\u90a3\u4e48\u5728\u79bb\u7ebf\u5730\u56fe\u4e0a\u4f7f\u7528mu4e\u662f\u975e\u5e38\u6709\u6548\u7684\uff0c\u4f60\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u67e5\u770b\u7535\u5b50\u90ae\u4ef6\u3002\u662f\u7684\uff0c\u4f60\u53ef\u4ee5\u5173\u95ed\u901a\u77e5\u6216\u60f3\u51fa\u51e0\u79cd\u65b9\u6cd5\u6765\u907f\u514d\u5206\u5fc3\u3002\u4f46\u7531\u6b64\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u8fd9\u4e2a\u9009\u9879\u66f4\u9002\u5408\u6211\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u56de\u590d\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u6211\u4f1a\u5c3d\u91cf\u7ed9\u4e88\u9002\u5f53\u7684\u5173\u6ce8\u3002\n\u540c\u6837\uff0c\u4e66\u7b7e\u5bf9\u4e8e\u8de8\u6587\u4ef6\u5939\u4fdd\u5b58\u67e5\u8be2\u7b5b\u9009\u5668\u7279\u522b\u6709\u7528\u3002\u5916\u6c47\uff1a\u201c\u8df3\u8f6c\u52303\u5468\u524d\u6765\u81eaXYZ\u7684\u90ae\u4ef6\u201d\n\u5982\u679c\u60a8\u5728Emacs\u4e0a\u4f7f\u7528org-mode\uff0c\u90a3\u4e48\u60a8\u5f88\u5e78\u8fd0\uff0c\u60a8\u53ea\u9700\u4eceorg-capturetemplate\u4e2d\u9009\u62e9\u6b63\u786e\u7684\u5173\u952e\u5b57\u5373\u53ef\u3002\n\u597d\u5427\uff0c\u6211\u627f\u8ba4\u8fd9\u4e9b\u5e74\u6765\u6211\u82b1\u4e86\u5f88\u591a\u4e0d\u5065\u5eb7\u7684\u65f6\u95f4\u6765\u8c03\u6574\u6211\u7684Emacsconfig\u3002\u5982\u679c\u60a8\u559c\u6b22\u6240\u770b\u5230\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u539f\u6837\u4f7f\u7528\u6211\u7684\u914d\u7f6e\uff0c\u65b9\u6cd5\u662f\u5c06\u914d\u7f6e\u7247\u6bb5\u590d\u5236\u5230\u60a8\u7684.emacs\u4e2d\u5e76\u8bd5\u4e00\u8bd5\u3002\n\u5e0c\u671b\u8fd9\u80fd\u523a\u6fc0\u60a8\u7684\u80c3\u53e3\uff0c\u8ba9\u60a8\u5f00\u59cb\u4f7f\u7528Emacs\u4f5c\u4e3a\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef(\u5728\u5176\u4ed6\u65b9\u9762)\u914d\u7f6e\u8be6\u7ec6\u4fe1\u606f\u5c06\u5728\u53e6\u4e00\u7bc7\u2026\u5e16\u5b50\u4e2d\u4ecb\u7ecd\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u6837\u7684\u8bdd\u9898\uff0c\u8bf7\u8003\u8651\u8ba2\u9605\u6211\u7684\u64ad\u5ba2\u3002\u6211\u4e0e\u4e00\u4e9b\u79d1\u6280\u754c\u7684\u94c1\u6746\u4eba\u7269\u4ea4\u8c08\uff0c\u95ee\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u7684\u6280\u5de7\u662f\u4ec0\u4e48\uff1a\n\u8bbf\u95eeiTunes Podcast\u95e8\u6237\u7f51\u7ad9\u4e0a\u7684void Star Podcast\u9875\u9762\u3002\u8bf7\u70b9\u51fb\u201c\u8ba2\u9605\u201d\uff0c\u8bf7\u7559\u8a00\u3002", "note_en": "Emailing in Emacs is a super power that I have been grateful for over the pastseveral years. Below I will describe a simple setup that works for me and moreimportantly for me, it\u2019s something I like. This setup makes me almost want towrite descriptive emails simply because it moves the pain of writing emails intothe same ecosystem that I feel comfortable writing long form articles, programs,design documents and other artifacts that involve \u201cputting my thoughts down\u201d. Icringe everytime I see an email written in rich text with broad lines going wellover 150 characters.\n A lot of the times it makes me think that people with very detailed emailresponses tend to almost face no resistance between thinking and putting theirthoughts in a detailed email response. Consider the following:\n   Well it\u2019s not the best demo I guess, but what if you want to capture somethingfrom the email for future reference? Maybe, you want to stash an important TODOitem from the email and keep notes for yourself. Furthermore, won\u2019t it nice toautomatically capture all the meta fields of the email, such as  from:,  to:, sent_time:\n Take this for example, I am composing this post, obviously, in Emacs but I willread LKML and capture some important notes that I can later access. In order tonot overwhelm an new Emacs user I won\u2019t go into the weeds with the specificpackages used and their configurations etc in this post. This is just tomotivate the right reader to think of using Emacs as their email client to boostyour productivity, well at least to get to a point where you don\u2019t hatereading/writing emails.\n   If you want to minimize distractions (by avoiding an untimely email pop-up) thenusing  mu4e on top of  offlineimap is very effective, you get to check emailsat your wish. Yes, you can turn off notifications or come up with several waysto avoid distractions. But the corollary of this is what makes this option moresuitable for me, i.e., when I respond to an email I try to give it properattention.\n     Similarly, bookmarking is particularly useful to save your query filters across folders. Forex: \u201cJump to Mails From XYZ from 3 weeks ago\u201d\n If you use  org-mode on Emacs then you arein luck, you simply select the right keyword from  org-capturetemplate.\n OK, I will admit that I have spent unhealthy amounts of time tweaking my Emacsconfig over the years. If you like what you see then you can simply start byusing my config as-is, by copying pieces of config in to your  .emacs andgiving it a whirr.\n Hope that whets your appetite to start using Emacs as an email client (amongother things) Config details coming up in a separate post\u2026\n      If you like topics such as this then please consider subscribing to mypodcast. I talk to some of the stalwarts in tech and ask them what theirfavorite productivity hacks are:\n  Visit Void Star Podcast\u2019s page on iTunes Podcast Portal. Please Click \u2018Subscribe\u2019, leave a comment.", "posttime": "2020-06-05 04:59:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "emacs,\u5ba2\u6237\u7aef,email,\u7535\u5b50\u90ae\u4ef6", "title": "\u4f5c\u4e3a\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u7684Emacs-\u7b2c\u4e00\u90e8\u5206", "title_en": "Emacs as Email Client \u2013 Part I", "transed": 1, "url": "http://www.mycpu.org/read-email-in-emacs/", "via": "", "real_tags": ["emacs", "\u5ba2\u6237\u7aef", "email", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "be0893e502534a8b306e95f7ce683919.jpeg", "infoid": 1005198, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u83b7\u5f97\u7684\u623f\u5730\u4ea7\u7814\u7a76\u516c\u53f8Datex Property Solutions\u7684\u6570\u636e\uff0c\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5173\u95ed\u5bfc\u81f4\u6536\u5165\u5927\u5e45\u4e0b\u964d\uff0c\u7f8e\u56fd\u8d85\u8fc7\u4e00\u534a\u7684\u96f6\u552e\u5546\u57284\u6708\u548c5\u6708\u6ca1\u6709\u652f\u4ed8\u79df\u91d1\u3002\n\u636e\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u7684\u5e0c\u745f\u00b7\u6717(Heather Long)\u62a5\u9053\uff0cBed Bath&amp\uff1bBeyond\u3001\u8457\u540d\u978b\u4e1a\u3001H&amp\uff1bM\u3001Gap\u3001AMC\u548cRegal\u7535\u5f71\u9662\uff0c\u4ee5\u53ca24\u5c0f\u65f6\u5065\u8eab\u623f\u90fd\u62d6\u6b20\u4e86\u6b3e\u9879\uff0c\u5371\u53ca\u5b83\u4eec\u7684\u7269\u4e1a\u7ba1\u7406\u516c\u53f8\u548c\u4f9d\u8d56\u7269\u4e1a\u7a0e\u7684\u5e02\u653f\u5e9c\u7684\u7a33\u5b9a\u3002\n\u8bb8\u591a\u96f6\u552e\u5546\u5411\u4ed6\u4eec\u7684\u623f\u4e1c\u5bfb\u6c42\u5e2e\u52a9\uff0c\u4f46\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002\u5bf9\u4e8e\u4e00\u4e9b\u4f01\u4e1a\u6765\u8bf4\uff0c\u751a\u81f3\u5f88\u96be\u786e\u5b9a\u8981\u95ee\u8c01\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5546\u4e1a\u5730\u4ea7\u5c5e\u4e8e\u623f\u5730\u4ea7\u6295\u8d44\u4fe1\u6258\u57fa\u91d1\u548c\u5546\u4e1a\u62b5\u62bc\u8d37\u6b3e\u652f\u6301\u8bc1\u5238(MBS)\u7684\u6295\u8d44\u8005\u3002\n\u7acb\u6cd5\u8005\u901a\u8fc7\u7acb\u6cd5\uff0c\u8981\u6c42\u623f\u4e1c\u540c\u610f\u4ed8\u6b3e\u8ba1\u5212\uff0c\u4f46\u623f\u4e1c\u544a\u8bc9Long\uff0c\u4ed6\u4eec\u4e5f\u5728\u82e6\u82e6\u6323\u624e\u3002", "note_en": "More than half of America&#39;s retailers didn&#39;t pay their rent in April and May as coronavirus closures decimated their revenues, according to data from real estate research firm Datex Property Solutions obtained by  The Washington Post.\n Bed Bath &amp; Beyond, Famous Footwear, H&amp;M, and the Gap, AMC and Regal movie theaters, and 24 Hour Fitness gyms have all missed payments, jeopardizing the stability of their property management companies and municipal governments that rely on property taxes,  The Post&#39;s Heather Long reported.\n Many retailers have asked for assistance from their landlords to no avail. For some businesses, even pinpointing who to ask can be difficult as the majority of commercial properties are owned by real estate investment trusts and investors in commercial mortgage-backed securities.\n Lawmakers passed legislation requiring landlords to agree to payment plans, but landlords told  Long that they are also struggling.", "posttime": "2020-06-05 04:59:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u652f\u4ed8,retailers,\u623f\u4e1c", "title": "\u8d85\u8fc7\u4e00\u534a\u7684\u7f8e\u56fd\u96f6\u552e\u5546\u57284\u6708\u548c5\u6708\u6ca1\u6709\u652f\u4ed8\u79df\u91d1", "title_en": "More than half of American retailers didn't pay their rent in April and May", "transed": 1, "url": "https://www.businessinsider.com/retailers-didnt-pay-rent-may-upset-the-entire-economy-2020-6", "via": "", "real_tags": ["\u652f\u4ed8", "retailers", "\u623f\u4e1c"]}, {"category": "", "categoryclass": "", "imagename": "ca137f8b1df814fb050b2cd4982d640e.png", "infoid": 1005196, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "..\u3002\u8fd8\u6709\u65e0\u6570\u6ca1\u6709\u5217\u5728\u8fd9\u91cc\u7684\u540d\u5b57\uff0c\u4ed6\u4eec\u7684\u751f\u547d\u662f\u88ab\u66b4\u529b\u548c\u6b8b\u66b4\u593a\u8d70\u7684\u3002\n\u6211\u4eec\u5217\u51fa\u4e86\u81ea2009\u5e74\u4ee5\u6765\u5728\u7f8e\u56fd\u88ab\u8b66\u5bdf\u66b4\u884c\u6740\u5bb3\u7684\u9ed1\u4eba\u7684\u540d\u5b57\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u7f8e\u56fd\u662f\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u8fd0\u52a8\u7684\u53d1\u6e90\u5730\uff0c\u4e5f\u662f\u76ee\u524d\u62b5\u6297\u8fd0\u52a8\u7684\u6838\u5fc3\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u4eec\u5b8c\u5168\u8ba4\u8bc6\u5230\u767d\u4eba\u81f3\u4e0a\u548c\u8b66\u5bdf\u66b4\u884c\u662f\u4e00\u4e2a\u5168\u7403\u6027\u95ee\u9898\u3002\u867d\u7136\u6211\u4eec\u6ca1\u6709\u5217\u51fa\u6240\u6709\u5728\u5168\u7403\u8303\u56f4\u5185\u6b7b\u4e8e\u8b66\u5bdf\u8c0b\u6740\u7684\u9ed1\u4eba\uff0c\u4f46\u4ed6\u4eec\u7684\u751f\u547d\u5f88\u91cd\u8981\u3002\n\u6211\u4eec\u5ffd\u89c6Node.js\u4e2d\u5b58\u5728\u7684\u4e0d\u52b3\u800c\u83b7\u7684\u7279\u6743\u662f\u9519\u8bef\u7684\uff1a\u5927\u90e8\u5206\u9879\u76ee\u9886\u5bfc\u5c42\u662f\u767d\u4eba\uff0c\u5927\u591a\u6570\u662f\u7537\u6027\u3002\u6211\u4eec\u73b0\u5728\u662f\uff0c\u800c\u4e14\u4e00\u76f4\u662f\u7cfb\u7edf\u5730\u5171\u8c0b\uff0c\u4f7f\u5bfc\u81f4\u6211\u4eec\u4eca\u5929\u6240\u5904\u4f4d\u7f6e\u7684\u95ee\u9898\u6c38\u4e45\u5316\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e0d\u80fd\u6539\u53d8\u6211\u4eec\u5efa\u7acb\u9879\u76ee\u9886\u5bfc\u529b\u7684\u65b9\u5f0f\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u6211\u4eec\u672a\u6765\u5efa\u7acb\u5b83\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u6210\u4e3a\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u90e8\u5206\uff0c\u79ef\u6781\u4ee5\u9ed1\u4eba\u793e\u533a\u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u6211\u4eec\u7684\u96c6\u4f53\u5e73\u53f0\u63d0\u5347\u9ed1\u4eba\u7684\u58f0\u97f3\uff0c\u5206\u4eab\u7531\u9ed1\u4eba\u793e\u533a\u6210\u5458\u521b\u5efa\u548c\u5efa\u8bbe\u7684\u9879\u76ee\uff0c\u5e76\u79ef\u6781\u5c65\u884c\u6211\u4eec\u7684\u627f\u8bfa\uff0c\u5e76\u6839\u636e\u9700\u8981\u505a\u51fa\u6539\u53d8\u3002\u867d\u7136\u8ffd\u7a76\u6211\u4eec\u7684\u8d23\u4efb\u662f\u6211\u4eec\u7684\u8d23\u4efb\uff0c\u800c\u4e0d\u662f\u793e\u533a\u7684\u5de5\u4f5c\uff0c\u4f46\u6211\u4eec\u6b22\u8fce\u60a8\u5206\u4eab\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6(\u53d7\u4fdd\u62a4\u7684\u7535\u5b50\u90ae\u4ef6)\u6216\u5355\u72ec\u8054\u7cfb\u6211\u4eec\u7684\u4efb\u4f55\u9879\u76ee\u8d1f\u8d23\u4eba\u6765\u505a\u5f97\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n\u6253\u7834\u767d\u4eba\u81f3\u4e0a\u5730\u4f4d\u7684\u52b3\u52a8\u4e0d\u662f\u843d\u5728\u9ed1\u4eba\u793e\u533a\u8eab\u4e0a\uff0c\u800c\u662f\u843d\u5728\u6211\u4eec\u5176\u4f59\u7684\u4eba\u8eab\u4e0a\u3002\u5982\u679c\u6709\u9ed1\u4eba\u5bfb\u6c42\u5408\u4f5c\u3001\u653e\u5927\u3001\u6307\u5bfc\u3001\u6307\u5bfc\u6216\u4efb\u4f55\u5f62\u5f0f\u7684\u652f\u6301\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u8fd9\u91cc\u4e3a\u4f60\u670d\u52a1(\u89c1\u4e0b\u6587)\u3002\n\u4ece\u6211\u4eec\u5373\u5c06\u5230\u6765\u7684\u5408\u4f5c\u8005\u5cf0\u4f1a\u6d3b\u52a8\u5f00\u59cb\uff0c\u5e76\u5ef6\u4f38\u5230\u66f4\u8fdc\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5c06\u4e3a\u793e\u533a\u4e2d\u5e0c\u671b\u6210\u4e3aNode.js\u9879\u76ee\u8d21\u732e\u8005\u7684\u9ed1\u4eba\u6210\u5458\u63d0\u4f9b\u6307\u5bfc\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u611f\u5174\u8da3\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3[\u53d7\u4fdd\u62a4\u7684\u7535\u5b50\u90ae\u4ef6]\u6216\u5728Twitter\u4e0a\u76f4\u63a5\u53d1\u9001\u6d88\u606f\u81f3@NodeJS\u3002\u6211\u4eec\u5c06\u516c\u5e03\u66f4\u591a\u5173\u4e8e\u6211\u4eec\u5c06\u5982\u4f55\u63a8\u8fdb\u8fd9\u4e00\u52aa\u529b\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u6572\u5b9a\u4e86\u5408\u4f5c\u8005\u5cf0\u4f1a\u671f\u95f4\u548c\u5355\u4e00\u6d3b\u52a8\u4e4b\u540e\u7684\u7ec6\u8282\u3002\n\u6b22\u8fce\u60a8\u901a\u8fc7\u94fe\u63a5\u4e2d\u5206\u522b\u5217\u51fa\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u8054\u7cfbNode.js TSC\u6210\u5458\u548cNode.js\u793e\u533a\u59d4\u5458\u4f1a\u6210\u5458\uff0c\u6216\u901a\u8fc7Twitter DM\u8054\u7cfb\u9879\u76ee\u4e2d\u7684\u4ee5\u4e0b\u4eba\u5458\uff1a\n\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u6587\u6863\uff0c\u5b83\u4eec\u4ecd\u7136\u53ef\u7528\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u6709\u5173\u6700\u65b0\u5b89\u5168\u7248\u672c\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5b89\u5168\u7248\u672c\u7684\u535a\u5ba2\u6587\u7ae0\u3002", "note_en": "...  and  countless  more  names not listed here whose lives were taken by violence and brutality.\n  We&#39;ve listed the names of the Black folks who have been murdered by police brutality in the U.S. dating back to 2009, both because the U.S. is the origin of the Black Lives Matter movement and currently the heart of the resistance.\n  With that said, we fully recognize that white supremacy and police brutality is a global problem. While we have not listed all of Black people who have lost their lives to police murder globally here, their lives mattered.\n    It would be wrong for us to ignore the unearned privilege that exists in Node.js: much of the project leadership is white, and a majority are men. We are and have been systematically complicit in perpetuating the issues that led to where we are now. We can&#39;t change how we&#39;ve built out the project&#39;s leadership to date, but we can change how we build it moving forward. We are dedicated to being a part of the solution by actively centering the Black community with our collective platforms to uplift Black voices, share projects founded and built by Black community members, and actively hold ourselves accountable to our promises and make changes as needed. While it is our responsibility and it is not the work of the community to hold us accountable, we welcome you to share ways that we can do better by emailing   [email\u00a0protected] or reaching out individually to any of our project leaders.\n  The labor to dismantle white supremacy does not fall on Black community; it falls on the rest of us. If there are Black folks looking for collaboration, amplification, mentorship, guidance, or any sort of support, we&#39;re here for you (see below).\n  Beginning with our upcoming Collaborator Summit event, and extending beyond, we will be offering mentorship to Black members of the community who wish to become contributors to the Node.js project. If you are interested in this, please send us an email at   [email\u00a0protected] or direct message us at  @nodejs on Twitter. We will post more information on how we will be proceeding with this effort as we finalize the details both for the period of the Collaborator summit and beyond that single event.\n  Please feel welcome to reach out to the  Node.js TSC members and  Node.js Community Committee members via our email addresses listed in the links, respectively, or via Twitter DMs to the following folks in the project:\n  If you&#39;re looking for docs, they&#39;re  still available. If you&#39;re looking for information on the most recent security release, please see  the security release blog post.", "posttime": "2020-06-05 04:56:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "js,\u9ed1\u4eba", "title": "Node.js\u4e3b\u9875", "title_en": "Node.js homepage", "transed": 1, "url": "https://nodejs.org/en/", "via": "", "real_tags": ["js", "\u9ed1\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "a44ea441862a6a13a922ab99d8dcae27.png", "infoid": 1005193, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Dropbox\u521a\u521a\u5728Play Store\u4e0a\u65e0\u793c\u5730\u4e22\u5f03\u4e86\u4e00\u6b3e\u5168\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6ca1\u6709\u5927\u5f20\u65d7\u9f13\uff0c\u4e5f\u6ca1\u6709\u6b63\u5f0f\u5ba3\u5e03\u3002\u636e\u62a5\u9053\uff0c\u65b0\u7684Dropbox\u5bc6\u7801\u5e94\u7528\u7a0b\u5e8f", "note_en": "Dropbox just unceremoniously dumped a brand new app on the Play Store with no fanfare or formal announcement. The new Dropbox Passwords app, according to", "posttime": "2020-06-05 04:05:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5bc6\u7801,\u5f00\u53d1,working,store", "title": "Dropbox\u6b63\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u5bc6\u7801\u7ba1\u7406\u5668", "title_en": "Dropbox is Working On Its Own Password Manager", "transed": 1, "url": "https://www.androidpolice.com/2020/06/04/dropbox-is-working-on-its-own-password-manager/", "via": "", "real_tags": ["\u5bc6\u7801", "\u5f00\u53d1", "working", "store"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005191, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Unix\u7406\u5ff5\u5f3a\u8c03\u6784\u5efa\u7b80\u5355\u548c\u53ef\u6269\u5c55\u7684\u8f6f\u4ef6\u3002\u6bcf\u4e2a\u8f6f\u4ef6\u5fc5\u987b\u505a\u4e00\u4ef6\u4e8b\u5e76\u4e14\u505a\u597d\u5b83\u3002\u800c\u4e14\u8be5\u8f6f\u4ef6\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u4e00\u4e2a\u516c\u5171\u754c\u9762--\u6587\u672c\u6d41--\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u534f\u540c\u5de5\u4f5c\u3002\u8fd9\u662fUnix\u7684\u6838\u5fc3\u7406\u5ff5\u4e4b\u4e00\uff0c\u5b83\u4f7fITSO\u529f\u80fd\u5f3a\u5927\u3001\u4f7f\u7528\u76f4\u89c2\u3002\n\u5c3d\u7ba1UNIX\u7cfb\u7edf\u5f15\u5165\u4e86\u8bb8\u591a\u521b\u65b0\u7684\u7a0b\u5e8f\u548c\u6280\u672f\uff0c\u4f46\u6ca1\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u7a0b\u5e8f\u6216\u60f3\u6cd5\u80fd\u8ba9\u5b83\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u76f8\u53cd\uff0c\u8ba9SIT\u53d8\u5f97\u6709\u6548\u7684\u662f\u7f16\u7a0b\u65b9\u6cd5\uff0c\u4e00\u79cd\u4f7f\u7528\u8ba1\u7b97\u673a\u7684\u54f2\u5b66\u3002\u867d\u7136\u8fd9\u4e00\u54f2\u5b66\u4e0d\u80fd\u7528\u4e00\u53e5\u8bdd\u5199\u4e0b\u6765\uff0c\u4f46\u5176\u6838\u5fc3\u662f\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u7cfb\u7edf\u7684\u529b\u91cf\u66f4\u591a\u5730\u6765\u81ea\u4e8e\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u4e0d\u662f\u6765\u81ea\u7a0b\u5e8f\u672c\u8eab\u3002\u8bb8\u591aUNIX\u7a0b\u5e8f\u5b64\u7acb\u5730\u505a\u4e00\u4e9b\u76f8\u5f53\u7410\u788e\u7684\u4e8b\u60c5\uff0c\u4f46\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5c31\u4f1a\u6210\u4e3a\u901a\u7528\u800c\u6709\u7528\u7684\u5de5\u5177\u3002\n\u6211\u60f3\u8fd9\u5f88\u597d\u5730\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\u3002\u6b64\u5916\uff0c\u8bf7\u89c2\u770bBrianKernighan\u6210\u4e3a\u4e00\u540d\u5f7b\u5934\u5f7b\u5c3e\u7684Chad\uff0c\u5e76\u89e3\u91caUNIX OS\u7684\u57fa\u672c\u539f\u7406\uff0c\u5728\u90a3\u91cc\u4ed6\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u4f7f\u7528\u7ba1\u9053\u7684\u793a\u4f8b\u3002\n\u4e0d\u8fc7\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u5c55\u793a\u4e00\u4e9b\u5b9e\u8df5\u8fd9\u4e00\u7406\u5ff5\u7684\u4f8b\u5b50--\u4eba\u4eec\u5982\u4f55\u5c06\u4e0d\u540c\u7684Unix\u5de5\u5177\u7ed3\u5408\u5728\u4e00\u8d77\u6765\u5b8c\u6210\u4e00\u4e9b\u5f3a\u5927\u7684\u5de5\u4f5c\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\u5f00\u59cb-\u6839\u636e\u63d0\u4ea4\u6b21\u6570\u663e\u793agitrepo\u7684\u4f5c\u8005/\u8d21\u732e\u8005\u5217\u8868\uff0c\u5e76\u6309\u964d\u5e8f\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f(\u5927\u591a\u6570\u63d0\u4ea4\u4f4d\u4e8e\u9876\u90e8)\u3002\u8fd9\u662f\u4e00\u9879\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u5f53\u4f60\u4ece\u7ba1\u7ebf\u7684\u89d2\u5ea6\u6765\u8003\u8651\u5b83\u7684\u65f6\u5019\u3002Git\u65e5\u5fd7\u7528\u4e8e\u663e\u793a\u63d0\u4ea4\u65e5\u5fd7\u3002\u6211\u4eec\u53ef\u4ee5\u5c06--format=&lt\uff1bformat&gt\uff1b\u9009\u9879\u4f20\u9012\u7ed9\u5b83\uff0c\u5e76\u8bf4\u660e\u6211\u4eec\u5e0c\u671b\u4ee5\u4ec0\u4e48\u683c\u5f0f\u663e\u793a\u63d0\u4ea4\u3002--format=&#39\uff1b%an&#39\uff1b\u53ea\u6253\u5370\u6bcf\u6b21\u63d0\u4ea4\u7684\u4f5c\u8005\u59d3\u540d\u3002\n$git\u65e5\u5fd7--\u683c\u5f0f=&#39\uff1b%an&#39\uff1b|\u6392\u5e8f|uniq-c 4 Alice 1 Bob 1 Candice 3 Denise\u3002\n\u56e0\u6b64\uff0cuniq\u4f1a\u6253\u5370\u51fa\u91cd\u590d\u7684\u884c\uff0c\u4f46\u53ea\u6253\u5370\u5f7c\u6b64\u76f8\u90bb\u7684\u884c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5fc5\u987b\u9996\u5148\u4f20\u9012\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\u7684\u539f\u56e0\u3002c\u6807\u5fd7\u6839\u636e\u51fa\u73b0\u7684\u6b21\u6570\u4e3a\u6bcf\u884c\u6dfb\u52a0\u524d\u7f00\u3002\n\u60a8\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u4ecd\u7136\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002\u6240\u4ee5\u73b0\u5728\u5269\u4e0b\u7684\u5c31\u662f\u6309\u6570\u5b57\u6392\u5e8f\u4e86\u3002\u5728\u6392\u5e8f\u4e2d\u6709\u4e00\u4e2a\u6807\u5fd7\uff0c-n\u6807\u5fd7\u3002\u5b83\u6839\u636e\u6570\u5b57\u7684\u6570\u503c\u6765\u8003\u8651\u6570\u5b57\u3002\n$git\u65e5\u5fd7--\u683c\u5f0f=&#39\uff1b%an&#39\uff1b|SORT|uniq-c|SORT-nr 4 Alice 3 Denise 1 Candice 1 Bob\u3002\n\u8fd8\u5305\u62ec\u4e86-r\u6807\u5fd7\uff0c\u4ee5\u4fbf\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u6253\u5370\u5217\u8868\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6309\u5347\u5e8f\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u4ed6\u4eec\u7684\u201c\u4f60\u6709\u201d--\u6839\u636e\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f\u7684\u4f5c\u8005\u5217\u8868\u3002\n\u60a8\u77e5\u9053\u5417\uff1f\u60a8\u53ea\u9700\u5c06\u201c.json\u201d\u9644\u52a0\u5230reddit url\u5373\u53ef\u83b7\u5f97jsonresponse\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684html\u3002\u8fd9\u5c31\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u80fd\u7684\u4e16\u754c\uff01\u5176\u4e2d\u4e4b\u4e00\u5c31\u662f\u76f4\u63a5\u4ece\u547d\u4ee4\u884c\u6d4f\u89c8\u8868\u60c5\u5305(\u5e76\u4e0d\u5b8c\u5168\u662f\u8fd9\u6837\uff0c\u56e0\u4e3a\u5b9e\u9645\u7684\u56fe\u50cf\u5c06\u663e\u793a\u5728GUI\u7a0b\u5e8f\u4e0a)\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5c06URL-https://reddit.com/r/memes.json\u3002\n$wget-O--Q&#39\uff1bhttps://reddit.com/r/memes.json&#39\uff1b&#39\uff1b{&#34\uff1bKind&#34\uff1b\uff1a&#34\uff1bListing&#34\uff1b\uff0c&#34\uff1bData&#34\uff1b\uff1a{&#34\uff1bmodhash&#34\uff1b\uff1a&#34\uff1bxyloiccqgm649f320569f4efb427cdcbd89e68aeceeda8fe1a&#34\uff1b\uff0c&#34\uff1bdist&#34\uff1b\uff1a27\uff0c&#34\uff1b\u5b50\u9879&#34\uff1b\uff1a[{&#34\uff1bKind&#34\uff1b\uff1a&#34\uff1bT3&#34\uff1b\uff0c&#34\uff1b\u6570\u636e&#34\uff1b\uff1a{&#34\uff1bApproved_at_UTC&#34\uff1b\uff1aNULL\uff0c&#34\uff1bsubreddit&#34\uff1b\uff1a&#34\uff1bMemes&#34\uff1b\uff0c&#34\uff1bselftext&#34\uff1b\uff1a&#34\uff1b\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee.&#39\uff1b.\u66f4\u591a\u884c.\u3002\n\u6211\u5728\u8fd9\u91cc\u4f7f\u7528wget\u662f\u56e0\u4e3a\u4f3c\u4e4eCurl\u7528\u6237\u4ee3\u7406\u5f97\u5230\u4e86\u4e0d\u540c\u7684\u5bf9\u5f85\u3002\u663e\u7136\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u66f4\u6539\u201cUser-Agent\u201d\u5934\u6765\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u6211\u53ea\u4f7f\u7528\u4e86wget\u3002Wget\u6709\u4e00\u4e2a-O\u6765\u63d0\u4f9b\u8f93\u51fa\u6587\u4ef6\u540d\u3002\u5927\u591a\u6570\u91c7\u7528\u8fd9\u79cd\u9009\u9879\u7684\u7a0b\u5e8f\u4e5f\u5141\u8bb8valueOf-\u5b83\u8868\u793a\u6807\u51c6\u8f93\u51fa\u6216\u8f93\u5165\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587\u3002-q\u9009\u9879\u53ea\u544a\u8bc9wget\u4fdd\u6301\u5b89\u9759\uff0c\u800c\u4e0d\u662f\u6253\u5370\u8bf8\u5982Progress sstatus\u4e4b\u7c7b\u7684\u5185\u5bb9\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u578b\u7684JSON\u7ed3\u6784\u3002\u73b0\u5728\uff0c\u8981\u5728\u547d\u4ee4\u884c\u4e0a\u6709\u610f\u4e49\u5730\u89e3\u6790\u548c\u4f7f\u7528\u6b64JSON\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528JQ\u3002JQ\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662fJSON\u7684sed/\u5c34\u5c2c\u3002\u5b83\u6709\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u8bed\u8a00\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003FROMIT\u7684\u624b\u518c\u9875\u3002\n{&#34\uff1bKind&#34\uff1b\uff1a&#34\uff1bListing&#34\uff1b\uff0c&#34\uff1bData&#34\uff1b\uff1a{&#34\uff1bmodhash&#34\uff1b\uff1a&#34\uff1bawe40m26lde06517c260e2071117e208f8c9b5b29e1da12bf7&#34\uff1b\uff0c&#34\uff1bdist&#34\uff1b\uff1a27\uff0c&#34\uff1b\u5b50\u9879&#34\uff1b\uff1a[]\uff0c&#34\uff1b\u4e4b\u540e&#34\uff1b\uff1a&#34\uff1bT3_gi892x&#34\uff1b\uff0c&#34\uff1b\u4e4b\u524d&#34\uff1b\uff1aNULL}}\u3002\n\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e9b\u201cListing\u201d\u7c7b\u578b\u7684\u54cd\u5e94\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6709\u4e00\u4e2a\u201cChild\u201d\u6570\u7ec4\u3002\u8be5\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5e16\u5b50\u3002\n\u8fd9\u662f\u201cChild\u201d\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff1a\n{&#34\uff1bKind&#34\uff1b\uff1a&#34\uff1bT3&#34\uff1b\uff0c&#34\uff1bData&#34\uff1b\uff1a{&#34\uff1bsubreddit&#34\uff1b\uff1a&#34\uff1bmemes&#34\uff1b\uff0c&#34\uff1bselftext&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff0c&#34\uff1b\u521b\u5efa&#34\uff1b\uff1a1589309289\uff0c&#34\uff1bAuthor_Fullname&#34\uff1b\uff1a&#34\uff1bT2_4amma5w&#34\uff1b\uff0c\uff1a0\uff0c&#34\uff1bTitle&#34\uff1b\uff1a&#34\uff1b\uff0c&#34\uff1bsubreddit_name_prefix&#34\uff1b\uff1a&#34\uff1br/memes&#34\uff1b\uff0c&#34\uff1bdown&#34\uff1b\uff1a0\uff0c&#34\uff1bHide_Score&#34\uff1b\uff1afalse\uff0c&#34\uff1bname&#34\uff1b\uff1a&#34\uff1bT3_gi8wkj&#34\uff1b\uff0c&#34\uff1b\u9694\u79bb&#\u3002\uff1aFALSE\uff0c&#34\uff1bpermalink&#34\uff1b\uff1a&#34\uff1b/r/memes/comments/gi8wkj/its_hard_to_argue_with_his_assessment/&#34\uff1b\uff0c&#34\uff1burl&#34\uff1b\uff1a&#34\uff1bhttps://i.redd.it/6vi05eobdby41.jpg&#34\uff1b\uff0c&#34\uff1bupVote_Ratio&#34\uff1b\uff1a0.9\uff0c&#34\uff1bsubreddit_type&#34\uff1b\uff1a&#34\uff1bPUBLIC&#34\uff1b\uff0c&#34\uff1b&#34\uff1bhttps://b.thumbs.redditmedia.com/QZt8_SBJDdKLVnXK8P4Wr_02ALEhGoGFEeNhpsyIfvw.jpg&#34\uff1b\uff0c&#34\uff1b\uff1a11367\uff0c&#34\uff1bTOTAL_ARMARDS_RECEIVED&#34\uff1b\uff1a0\uff0c&#34\uff1b\u5206\u6570&#34\uff1b\uff1a11367\uff0c&#34\uff1b\u4f5c\u8005_\u9ad8\u7ea7&#34\uff1b\uff1aFALSE\uff0c&#34\uff1b\u7f29\u7565\u56fe&#34\uff1b\uff1aUPS&#34\uff1b\u9540\u91d1&#34\uff1b\uff1a{}\uff0c&#34\uff1bPOST_HINT&#34\uff1b\uff1a&#34\uff1bimage&#34\uff1b\uff0c&#34\uff1b.&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b.&#34\uff1b}}\u3002\n\u6211\u5df2\u7ecf\u51cf\u5c11\u4e86\u6570\u636e\u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf\u3002\u603b\u5171\u6709105\u4e2a\u9879\u76ee\u3002\u5982\u60a8\u6240\u89c1\uff0c\u60a8\u53ef\u4ee5\u4ece\u5e16\u5b50\u4e2d\u83b7\u53d6\u8bb8\u591a\u6709\u8da3\u7684\u6570\u636e\u5c5e\u6027\u3002\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u5e16\u5b50\u7684url\u3002\u8fd9\u4e0d\u662f\u771f\u6b63\u7684reddit\u5e16\u5b50\u7684url\uff0c\u800c\u662f\u5e16\u5b50\u5185\u5bb9\u7684url\u3002\u5982\u679c\u5e16\u5b50\u7684url\u662f\u60a8\u60f3\u8981\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6c38\u4e45\u94fe\u63a5\u3002\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0curl\u5b57\u6bb5\u662fmeme\u56fe\u50cf\u7684url\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u7b80\u5355\u5730\u83b7\u53d6\u6bcf\u4e2a\u5e16\u5b50\u7684\u6240\u6709URL\u7684\u5217\u8868\uff1a\n\u5ffd\u7565\u524d\u4e24\u4e2a\u94fe\u63a5\uff0c\u5b83\u4eec\u57fa\u672c\u4e0a\u662fMODS\u53d1\u5e03\u7684\u7c98\u6027\u5e16\u5b50\uff0c\u5b83\u4eec\u7684\u2018url\u2019\u4e0e\u2018permalink\u2019\u662f\u4e00\u6837\u7684\u3002\nJQ\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\uff0c\u5e76\u63d0\u4f9b\u7ed9\u6211\u4eec\u524d\u9762\u770b\u5230\u7684JSON\u3002.data.Children\u6307\u7684\u662f\u6211\u524d\u9762\u63d0\u5230\u7684\u5e16\u5b50\u6570\u7ec4\u3002\u800c-.data.Children[]|.data.url\u7684\u610f\u601d\u662f\u201c\u904d\u5386\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u6253\u5370\u6bcf\u4e2a\u5143\u7d20\u7684\u2018data\u2019\u5b57\u6bb5\u4e2d\u7684\u2018url\u2019\u5b57\u6bb5\u201d\u3002\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86/r/memes\u201c\u70ed\u95e8\u201d\u5e16\u5b50\u7684\u6240\u6709URL\u5217\u8868\u3002\u5982\u679c\u4f60\u60f3\u83b7\u5f97\u672c\u5468\u6700\u70ed\u95e8\u7684\u5e16\u5b50\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u70b9\u51fbhttps://reddit.com/r/memes/top.json?t=week.\u3002\u53f2\u4e0a\u6700\u9ad8\u804c\u4f4d\uff1ft=\u5168\u90e8\uff0c\u5e74\u4efd\uff1fT=\u5e74\u4efd\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u6240\u6709URL\u7684\u5217\u8868\uff0c\u6211\u4eec\u73b0\u5728\u5c31\u53ef\u4ee5\u5c06\u5176\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230xarg.xargs\u662f\u4e00\u4e2a\u4ece\u6807\u51c6\u8f93\u5165\u6784\u5efa\u547d\u4ee4\u884c\u7684\u975e\u5e38\u6709\u7528\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002\u4e0b\u9762\u662fxarg\u7684\u624b\u518c\u9875\u6240\u8bf4\u7684\u5185\u5bb9\uff1a\nxargs\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u7531\u7a7a\u683c(\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u6216\u53cd\u659c\u6760\u6765\u4fdd\u62a4)\u6216\u6362\u884c\u7b26\u5206\u9694\u7684\u9879\uff0c\u5e76\u4f7f\u7528\u4efb\u4f55\u521d\u59cb\u53c2\u6570\u540e\u8ddf\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u7684\u9879\u6765\u6267\u884c\u547d\u4ee4(\u7f3a\u7701\u503c\u4e3a/bin/echo)\u4e00\u6b21\u6216\u591a\u6b21\u3002\u6807\u51c6\u8f93\u5165\u4e0a\u7684\u7a7a\u884c\u5c06\u88ab\u5ffd\u7565\n\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u5c06URL\u5217\u8868\u4f20\u9012\u7ed9\u56fe\u50cf\u67e5\u770b\u5668\uff0c\u6bd4\u5982\u63a5\u53d7URL\u4f5c\u4e3a\u6709\u6548\u53c2\u6570\u7684feh\u6216eogh\u3002\n\u73b0\u5728\uff0cfeh\u5f39\u51fa\u4e86\u8868\u60c5\u5305\uff0c\u6211\u53ef\u4ee5\u50cf\u5728\u672c\u5730\u78c1\u76d8\u4e0a\u4e00\u6837\uff0c\u7528\u7bad\u5934\u952e\u6d4f\u89c8\u5b83\u4eec\u3002\n\u6216\u8005\uff0c\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528wget\u4e0b\u8f7d\u6240\u6709\u56fe\u50cf\uff0c\u5c06feh\u66ff\u6362\u4e3a\u4e0a\u9762\u7684wget\u3002\n\u53ef\u80fd\u6027\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u3002\u6b64reddit JSON\u6570\u636e\u7684\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u7528\u9014\u662f\u5c06\u684c\u9762\u7684\u5899\u7eb8\u8bbe\u7f6e\u4e3a\u201c\u70ed\u95e8\u201d\u90e8\u5206\u4e2d/r/Earth porn\u7684\u9876\u90e8\u5411\u4e0a\u7684\u56fe\u50cf\u3002\n$wget-O--q reddit.com/r/Earth porn.json|jq&#39\uff1b.data.Children[]|.data.url&-|head-1|xargs feh--bg-ill\u3002\n\u7136\u540e\uff0c\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6bcf\u5c0f\u65f6\u8fd0\u884c\u4e00\u6b21\u7684cron-job\u3002\u6211\u5728\u8fd9\u91cc\u4f7f\u7528head\u547d\u4ee4\u53ea\u6253\u5370\u7b2c\u4e00\u884c\uff0c\u8fd9\u5c06\u662f\u9876\u90e8\u5411\u4e0a\u7684\u5e16\u5b50\u3002\u5c31\u5176\u672c\u8eab\u800c\u8a00\uff0cHead\u4f3c\u4e4e\u505a\u4e86\u4e00\u4e9b\u975e\u5e38\u7410\u788e\u548c\u65e0\u7528\u7684\u4e8b\u60c5\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u4e00\u8d77\u5de5\u4f5c\uff0c\u5b83\u5c31\u6210\u4e86\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\n\u4f60\u770b\u5230Unix\u7ba1\u9053\u7684\u5a01\u529b\u4e86\u5417\uff1f\u4ece\u83b7\u53d6JSON\u6570\u636e\uff0c\u89e3\u6790\u5e76\u4ece\u4e2d\u83b7\u53d6\u76f8\u5173\u6570\u636e\uff0c\u7136\u540e\u518d\u6b21\u4eceURL\u83b7\u53d6\u56fe\u50cf\uff0c\u6700\u540e\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5899\u7eb8\uff0c\u8fd9\u4e00\u884c\u5b8c\u6210\u4e86\u6240\u6709\u64cd\u4f5c\u3002\n\u6211\u7528\u5b83\u505a\u7684\u53e6\u4e00\u4ef6\u8822\u4e8b\u662f\u6bcf\u4e24\u4e2a\u5c0f\u65f6\u4ece/r/memes\u4e0b\u8f7dmeme\u3002\u8fd9\u5728\u6211\u7684\u673a\u5668\u4e0a\u8bbe\u7f6e\u4e3acron\u4f5c\u4e1a\u3002\u73b0\u5728\u6211\u7684\u78c1\u76d8\u4e0a\u5927\u7ea6\u670919566\u4e2a\u8868\u60c5\u5305\uff0c\u5360\u636e\u4e864.5G\u7684\u7a7a\u95f4\u3002\u6211\u4e3a\u4ec0\u4e48\u8981\u90a3\u4e48\u505a\uff1f\u522b\u95ee\u6211\u2026\n\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u7ed3\u675f\u5b83\u3002IMDb\u6709\u4e00\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5217\u51fa\u540d\u5355\u3002\u60a8\u8fd8\u53ef\u4ee5\u67e5\u627e\u5176\u4ed6\u7528\u6237\u521b\u5efa\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u5439\u7206\u4f60\u7684\u8111\u6d77\u4e2d\u7684\u7535\u5f71\u3002\u5982\u679c\u60a8\u5411URL\u8ffd\u52a0/\u5bfc\u51fa\uff0c\u60a8\u5c06\u83b7\u5f97.csv\u683c\u5f0f\u7684\u5217\u8868\u3002\n$cURL https://www.imdb.com/list/ls020046354/exportPosition\uff0cconst\uff0c\u521b\u5efa\uff0c\u4fee\u6539\uff0c\u63cf\u8ff0\uff0c\u6807\u9898\u7c7b\u578b\uff0cIMDB\u8bc4\u7ea7\uff0c\u8fd0\u884c\u65f6\u95f4(\u5206\u949f)\uff0c\u5e74\u4efd\uff0c\u6d41\u6d3e\uff0c\u7968\u6570\uff0c\u53d1\u884c\u65e5\u671f\uff0c\u5bfc\u6f141\uff0ctt0137523,2017-07-30,2017-07-30,2017-07-30\uff0c\u640f\u51fb\u4ff1\u4e50\u90e8\uff0chttps://www.imdb.com/title/tt0137523/\uff0c\u7535\u5f71\uff0c8.8,139,1999\uff0c\u620f\u5267\uff0c1780706,1999-09-10\uff0cDavid Fincher2\uff0ct0945513,2017-07-30,2017-07-30,2017-07-30,2017-07-30,2017-07-30,1780706,1999-09-10\uff0cdavid fincher2\uff0ct0945513,2017-07-30,2017-07-30,2017-07-30,2017-07-30\u7535\u5f71\uff0c7.5\uff0c93,2011\uff0c#34\uff1b\u52a8\u4f5c\uff0c\u620f\u5267\uff0c\u795e\u79d8\uff0c\u79d1\u5e7b\uff0c\u98a4\u6817#34\uff1b\uff0c471234,2011-03-11\uff0c\u9093\u80af\u00b7\u743c\u65af3\uff0ctt0482571,2017-07-30,2017-07-30\uff0cThe Prestige\uff0chttps://www.imdb.com/title/tt0482571/\uff0c\u7535\u5f71\uff0c8.5,130,2006\uff0c&34\uff1b\u620f\u5267\uff0c\u795e\u79d8\uff0c\u79d1\u5e7b\uff0c\u98a4\u6817&#34\uff1b\uff0c1133548,2006-10-17\uff0c\u514b\u91cc\u65af\u6258\u5f17\u00b7\u8bfa\u51704\uff0ct020.\u3002\u795e\u79d8\uff0c\u98a4\u6817&34\uff1b\uff0c1081848,2000-09-05\uff0c\u514b\u91cc\u65af\u6258\u5f17\u00b7\u8bfa\u51705\uff0ctt0144084,2018-01-16,2018-01-16\uff0c\u7f8e\u56fd\u7cbe\u795e\u75c5\uff0chttps://www.imdb.com/title/tt0144084/\uff0c\u7535\u5f71\uff0c7.6,101,2000\uff0c&34\uff1b\u559c\u5267\uff0c\u72af\u7f6a\uff0c\u620f\u5267&#34\uff1b\uff0c462984,2000-01-21\uff0c\u739b\u4e3d\u00b7\u54c8\u9f996\uff0ct0364569,2018-01-16,2018-01-16\uff0cOldeuboi\uff0chttps://www.imdb.com/title/tt0364569/\uff0c\uff0c491476,2003-11-21\uff0c\u8d5e\u5b87\u516c\u56ed7\uff0ctt1130884,2018-10-08\uff0c\u7981\u95ed\u5c9b\uff0chttps://www.imdb.com/title/tt1130884/\uff0c\u7535\u5f71\uff0c8.1,138,2010\uff0c&34\uff1b\u795e\u79d8\uff0c\u98a4\u6817&#34\uff1b\uff0c1075524,2010-02-13\uff0c\u9a6c\u4e01\u00b7\u65af\u79d1\u585e\u65af8\uff0ctt8772262,2019-12-27,2019\u5e74-12-27\uff0c\u7c73\u5fb7\u7d22\u739b\uff0chttps://www.imdb.com/title/tt8772262/\uff0c\u7535\u5f71\uff0c7.1,148\u3002\nd\u9009\u9879\u7528\u4e8e\u6307\u5b9a\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5206\u9694\u7b26\u3002\u7530\u91ce\u4e4b\u95f4\u7528\u4ec0\u4e48\u9694\u5f00\uff1f\u5728\u672c\u4f8b\u4e2d\u662f\u9017\u53f7(\uff0c)\u3002f\u9009\u9879\u662f\u8981\u6253\u5370\u7684\u5b57\u6bb5\u7f16\u53f7\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7b2c\u516d\u4e2a\u5b57\u6bb5\u662f\u7535\u5f71\u7684\u6807\u9898\u3002\u8fd9\u8fd8\u4f1a\u6253\u5370CSV\u5934\u201ctitle\u201d\uff0c\u56e0\u6b64\u8981\u5220\u9664\u5b83\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528sed&#39\uff1b1d&#39\uff1b\uff0c\u610f\u601d\u5c31\u662f\u4ece\u8f93\u5165\u6d41\u4e2d\u5220\u9664\u4e00\u884c\u3002\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u7535\u5f71\u5217\u8868\u901a\u8fc7\u7ba1\u9053\u4f20\u9001\u5230Shuf\u3002Shuf\u53ea\u662f\u968f\u673a\u5730\u6d17\u724c\u5b83\u7684\u8f93\u5165\u884c\uff0c\u7136\u540e\u628a\u5b83\u5410\u51fa\u6765\u3002\n$curl https://www.imdb.com/list/ls020046354/export|Cut-d&39\uff1b\uff0c&#39\uff1b-f 6|sed&#39\uff1b1 d&#39\uff1b|ShufAmerican Mental MidSomm\u6e90\u7801Oldeuboi\u98de\u884c\u4ff1\u4e50\u90e8MementoShutter\u5c9b\u7684\u5a01\u671b\u3002\n\u73b0\u5728\u53ea\u9700\u901a\u8fc7\u7ba1\u9053\u5c06\u5176\u8f93\u5165head-1\u6216sed&#39\uff1b1q&#39\uff1b\uff0c\u8fd9\u5c06\u53ea\u6253\u5370\u7b2c\u4e00\u884c\u3002\u6bcf\u6b21\u8fd0\u884c\u6b64\u547d\u4ee4\u65f6\uff0c\u60a8\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u968f\u673a\u9009\u62e9\u3002\n$cURL https://www.imdb.com/list/ls020046354/export|CUT-d&#39\uff1b\uff0c&#39\uff1b-f 6|sed&#39\uff1b1 d&#39\uff1b|Shuf|Head-1\u6e90\u4ee3\u7801\u3002\n\u73b0\u5728\u5047\u8bbe\u60a8\u8fd8\u5e0c\u671b\u5c06URL\u4e0e\u6807\u9898\u4e00\u8d77\u6253\u5370\uff0c\u65e0\u95ee\u9898\uff0c\u526a\u5207\u5141\u8bb8\u60a8\u4f7f\u7528--field=list\u6307\u5b9a\u8981\u6253\u5370\u7684\u591a\u4e2a\u5b57\u6bb5\n$cURL https://www.imdb.com/list/ls020046354/export|Cut-d&39\uff1b\uff0c&#39\uff1b--FIELD=6\uff0c7|sed&#39\uff1b1 d&#39\uff1b|Shuf|Head-1Shutter Island\uff0chttps://www.imdb.com/title/tt1130884/\u3002\n\u4f46\u662f\u8fd9\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u7535\u5f71\u6807\u9898\u4e2d\u6709\u9017\u53f7\uff0c\u90a3\u4e48\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u5b57\u6bb5\u503c\u3002\u514b\u670d\u6b64\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684python\u4e00\u884c\u7a0b\u5e8f\uff1a\n$curl-s https://www.imdb.com/list/ls020046354/export|\\python-c&#39\uff1b\u5bfc\u5165csv\uff0csys\uff1b[\u4e3acsv.DictReader(sys.stdin)\u4e2d\u7684\u6253\u5370(a[&#34\uff1b\u6807\u9898&#34\uff1b]\uff0ca[&#34\uff1burl&#34\uff1b])]&#39\uff1b|\\Shuf|Head-1Oldeuboi https://www.imdb.com/title/tt0364569/\u3002\n\u8fd9\u4e9b\u53ea\u662f\u51e0\u4e2a\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u7528\u7ba1\u9053\u5728\u5355\u884c\u7684\u5916\u58f3\u4e0a\u5b8c\u6210\u5f88\u591a\u4e8b\u60c5\u3002", "note_en": "The Unix philosophy lays emphasis on building software that is simple andextensible. Each piece of software must do one thing and do it well. And thatsoftware should be able to work with other programs through a common interface\u2013 a text stream. This is one of the core philosophies of Unix which makes itso powerful and intuitive to use.\n  Even though the UNIX system introduces a number of innovative programs andtechniques, no single program or idea makes it work well. Instead, what makesit effective is the approach to programming, a philosophy of using thecomputer. Although that philosophy can\u2019t be written down in a single sentence,at its heart is the idea that the power of a system comes more from therelationships among programs than from the programs themselves. Many UNIXprograms do quite trivial things in isolation, but, combined with otherprograms, become general and useful tools.\n I think that explains it pretty well. Also,  watch BrianKernighan being a complete chad andexplaining fundamentals of the UNIX OS where he also goes through an example ofusing pipes.\n In this post though, I would like to show some examples of thisphilosophy in action \u2013 of how one can use different unix tools together toaccomplish something powerful.\n    Let\u2019s start with a simple one \u2013 display a list of authors/contributors of a gitrepo sorted based on the number of commits and sort the list in descendingorder (most commits contributed at the top). This is a simple task when youthink of it in terms of piplines.  git log is used to display commit logs. Wecan pass the  --format=&lt;format&gt; option to it and mention what format we wantthe commits to be displayed in.  --format=&#39;%an&#39; just prints the author\u2019s namefor each commit.\n     $ git log --format = &#39;%an&#39; | sort | uniq -c  4 Alice  1 Bob  1 Candice  3 Denise\n   So  uniq prints out repeated lines, but only those that appear  adjacent toeachother. That is why we had to pass the output first to  sort. The  -c flagprefixes each line by the number of occurrences.\n You can see the output is still sorted alphabetically. So now all that isremaining is sort it numerically. There\u2019s a flag for that in  sort, the -n flag. It considers the numbers based on their numerical value.\n $ git log --format = &#39;%an&#39; | sort | uniq -c | sort -nr  4 Alice  3 Denise  1 Candice  1 Bob\n The  -r flag was also included to print the list in reverse order. By defaultit sorts it in the ascending order. And their you have it \u2013 A list of authorssorted according to number of commits.\n  Did you know that you can just append \u201c .json\u201d to a reddit url to get a jsonresponse instead of the usual html? This allows for a world of possibilities!One such is browsing memes right from the command line (well not entirely,because the actual image will be displayed on a GUI program). We can simply curlor wget the url \u2013  https://reddit.com/r/memes.json\n $ wget -O - -q  &#39;https://reddit.com/r/memes.json&#39; &#39;{&#34;kind&#34;: &#34;Listing&#34;, &#34;data&#34;: {&#34;modhash&#34;: &#34;xyloiccqgm649f320569f4efb427cdcbd89e68aeceeda8fe1a&#34;, &#34;dist&#34;: 27, &#34;children&#34;: [{&#34;kind&#34;: &#34;t3&#34;, &#34;data&#34;: {&#34;approved_at_utc&#34;: null, &#34;subreddit&#34;: &#34;memes&#34;, &#34;selftext&#34;: &#34;More info available at....&#39;......More lines......\n I use wget here because it seems like the Curl User-Agent gets treateddifferently. Obviously, you can get around this by simply changing the\u2018User-Agent\u2019 header, but I just went with  wget. Wget has a  -O to providethe output filename. Most programs that take such an option also allow a valueof  - which represents the standard output or input depending on the context.The  -q option just tells wget to be quite and not print things like progressstatus. Now we get a big JSON structure to work with. Now, to parse and use thisJSON data meaningfully on the command line, we can use  jq.  jq can be thought of as  sed/ awkfor JSON. It has a simple intuitive language of it\u2019s own you can refer fromit\u2019s man page.\n  {  &#34;kind&#34;:  &#34;Listing&#34;,  &#34;data&#34;: {  &#34;modhash&#34;:  &#34;awe40m26lde06517c260e2071117e208f8c9b5b29e1da12bf7&#34;,  &#34;dist&#34;:  27,  &#34;children&#34;: [],  &#34;after&#34;:  &#34;t3_gi892x&#34;,  &#34;before&#34;:  null }}\n So here we have some response of the type \u201cListing\u201d and we can see we have anarray of \u201cchildren\u201d. Each element of that array is a post.\n This is what one of the elements of the \u2018children\u2019 array looks like:\n {  &#34;kind&#34;:  &#34;t3&#34;,  &#34;data&#34;: {  &#34;subreddit&#34;:  &#34;memes&#34;,  &#34;selftext&#34;:  &#34;&#34;,  &#34;created&#34;:  1589309289,  &#34;author_fullname&#34;:  &#34;t2_4amm4a5w&#34;,  &#34;gilded&#34;:  0,  &#34;title&#34;:  &#34;Its hard to argue with his assessment&#34;,  &#34;subreddit_name_prefixed&#34;:  &#34;r/memes&#34;,  &#34;downs&#34;:  0,  &#34;hide_score&#34;:  false,  &#34;name&#34;:  &#34;t3_gi8wkj&#34;,  &#34;quarantine&#34;:  false,  &#34;permalink&#34;:  &#34;/r/memes/comments/gi8wkj/its_hard_to_argue_with_his_assessment/&#34;,  &#34;url&#34;:  &#34;https://i.redd.it/6vi05eobdby41.jpg&#34;,  &#34;upvote_ratio&#34;:  0.93,  &#34;subreddit_type&#34;:  &#34;public&#34;,  &#34;ups&#34;:  11367,  &#34;total_awards_received&#34;:  0,  &#34;score&#34;:  11367,  &#34;author_premium&#34;:  false,  &#34;thumbnail&#34;:  &#34;https://b.thumbs.redditmedia.com/QZt8_SBJDdKLVnXK8P4Wr_02ALEhGoGFEeNhpsyIfvw.jpg&#34;,  &#34;gildings&#34;: {},  &#34;post_hint&#34;:  &#34;image&#34;,  &#34;..................&#34;  &#34;more lines skipped&#34;  &#34;..................&#34; }}\n I have reduced the number of key value pairs in  data. In total there were 105items. As you can see there are many interesting data attributes you can fetchabout a post. The one of our interest is  url of the post. This isn\u2019t the urlof the actual reddit post but rather it\u2019s the url of the content of the post.If the post url is what you want then that\u2019s  permalink. So in this case, the url field is the url to the meme\u2019s image.\n We can simply get the list of of all the urls of of every post using:\n  Ignore the first two links, those are basically sticky posts that the mods put,whose \u2018url\u2019 is same as the \u2018permalink\u2019.\n jq reads from the standard input and it\u2019s fed the JSON we saw earlier. .data.children is referring to the array of posts I mentioned earlier. And\u2013  .data.children[] | .data.url means, \u201citerate through every element in thearray and print the \u2018url\u2019 field which is in the \u2018data\u2019 field of every element\u201d.\n So we get a list of all the urls of the \u201chot\u201d posts of /r/memes. If you wanted to get the \u201ctop\u201d posts ofthe this week then you can hit  https://reddit.com/r/memes/top.json?t=week. Fortop posts of all time?  t=all, year?  t=year and so on.\n Once we have a list of all the URLs, we can now just pipe it into  xargs.Xargs is a really useful utility to build command lines from standard input.This is what xarg\u2019s man page says:\n xargs reads items from the standard input, delimited by blanks (which can beprotected with double or single quotes or a backslash) or newlines, andexecutes the command (default is /bin/echo) one or more times with anyinitial-arguments followed by items read from standard input. Blank lines onthe standard input are ignored\n     Now, we can just pass the list of URLs to an image viewer, like  feh or  eogthat accept a URL as a valid argument.\n  Now, feh pops up with the memes and I can just browse through them using thearrow keys like they were on my local disk.\n  Or I could simply just download all of the images using wget, by replacing feh with  wget above.\n And the possibilities are endless. Another good use of this reddit JSON data is setting the wallpaper of your desktop to the top upvoted image of /r/earthporn from the \u201chot\u201d section.\n $ wget -O - -q reddit.com/r/earthporn.json | jq  &#39;.data.children[] |.data.url&#39; | head -1 | xargs feh --bg-fill\n You can then, if you want, set this up as a cron-job that runs every hour orso. I use the  head command here to just print the first line, which would bethe top upvoted post. By it\u2019s own,  head seems to do something very trivialand unuseful, but in this case, working with other programs, it becomes animportant part.\n You see the power of Unix pipelines? That one single line does everything fromfetching JSON data, parsing and getting the relevant data out of it and thenagain fetching the image from the URL and finally setting it as the wallpaper.\n Another silly thing I used this for was for just downloading memes off of/r/memes every two hours. This is set up as a cron job on my machine. Now Ihave around 19566 memes taking up 4.5G on my disk. Why did I do that? Don\u2019t askme\u2026\n  Let\u2019s end it with a simple one. IMDb has a feature where they allow you to makelists. You can also find lists made by other users. For example -  Blow YourMind Movies. If you append  /export tothe url you get the list in a  .csv format.\n $ curl https://www.imdb.com/list/ls020046354/exportPosition,Const,Created,Modified,Description,Title,URL,Title Type,IMDb Rating,Runtime  (mins ),Year,Genres,Num Votes,Release Date,Directors1,tt0137523,2017-07-30,2017-07-30,,Fight Club,https://www.imdb.com/title/tt0137523/,movie,8.8,139,1999,Drama,1780706,1999-09-10,David Fincher2,tt0945513,2017-07-30,2017-07-30,,Source Code,https://www.imdb.com/title/tt0945513/,movie,7.5,93,2011, &#34;Action, Drama, Mystery, Sci-Fi, Thriller&#34;,471234,2011-03-11,Duncan Jones3,tt0482571,2017-07-30,2017-07-30,,The Prestige,https://www.imdb.com/title/tt0482571/,movie,8.5,130,2006, &#34;Drama, Mystery, Sci-Fi, Thriller&#34;,1133548,2006-10-17,Christopher Nolan4,tt0209144,2018-01-16,2018-01-16,,Memento,https://www.imdb.com/title/tt0209144/,movie,8.4,113,2000, &#34;Mystery, Thriller&#34;,1081848,2000-09-05,Christopher Nolan5,tt0144084,2018-01-16,2018-01-16,,American Psycho,https://www.imdb.com/title/tt0144084/,movie,7.6,101,2000, &#34;Comedy, Crime, Drama&#34;,462984,2000-01-21,Mary Harron6,tt0364569,2018-01-16,2018-01-16,,Oldeuboi,https://www.imdb.com/title/tt0364569/,movie,8.4,120,2003, &#34;Action, Drama, Mystery, Thriller&#34;,491476,2003-11-21,Chan-wook Park7,tt1130884,2018-10-08,2018-10-08,,Shutter Island,https://www.imdb.com/title/tt1130884/,movie,8.1,138,2010, &#34;Mystery, Thriller&#34;,1075524,2010-02-13,Martin Scorsese8,tt8772262,2019-12-27,2019-12-27,,Midsommar,https://www.imdb.com/title/tt8772262/,movie,7.1,148,2019, &#34;Drama, Horror, Mystery, Thriller&#34;,150798,2019-06-24,Ari Aster\n   The  -d option is to specify the delimiter for each field. What are the fieldsseparated with? In this case it\u2019s a comma ( ,). The  -f option is the fieldnumber you want to print. In this case the sixth field is the Title of themovie. This also prints the csv header \u201cTitle\u201d so to remove it we can just use sed &#39;1 d&#39;, which just means,  delete  1 line from the input stream.\n We can then pipe the list of movies into  shuf. Shuf just shuffles it\u2019s inputlines randomly and spits it out.\n $ curl https://www.imdb.com/list/ls020046354/export | cut -d  &#39;,&#39; -f  6 | sed  &#39;1 d&#39; | shufAmerican PsychoMidsommarSource CodeOldeuboiFight ClubMementoShutter IslandThe Prestige\n Now just pipe it into  head -1 or  sed &#39;1 q&#39; which would print only the firstline. Every time you run this, you should get a random selection.\n $ curl https://www.imdb.com/list/ls020046354/export | cut -d  &#39;,&#39; -f  6 | sed  &#39;1 d&#39; | shuf | head -1Source Code\n Now let\u2019s say you would also like the URL to be printed along with title, noproblem,  cut allows you to specify multiple fields to print using  --field=LIST\n $ curl https://www.imdb.com/list/ls020046354/export | cut -d  &#39;,&#39; --field =6,7 | sed  &#39;1 d&#39; | shuf | head -1Shutter Island,https://www.imdb.com/title/tt1130884/\n There is a problem with this though, if the Movie title has a comma in it, thenyou would get a totally different field value. One way to overcome this is byusing a python one-liner like this:\n  $ curl -s https://www.imdb.com/list/ls020046354/export | \\  python -c  &#39;import csv,sys;[print (a[&#34;Title&#34;],a[&#34;URL&#34;]) for a in csv.DictReader(sys.stdin)]&#39;| \\  shuf | head -1Oldeuboi https://www.imdb.com/title/tt0364569/\n These were just a few examples, there are so many things you can accomplish ina single line of shell using pipes.", "posttime": "2020-06-05 04:03:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ba1\u9053,unix", "title": "Unix\u7ba1\u9053\u4e4b\u7f8e", "title_en": "The Beauty of Unix Pipelines", "transed": 1, "url": "https://prithu.xyz/posts/unix-pipeline/", "via": "", "real_tags": ["\u7ba1\u9053", "unix"]}, {"category": "", "categoryclass": "", "imagename": "8776c4dbcffb05b1efc63c1943c1c4ae.jpg", "infoid": 1005190, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba4\u8bc6\u6211\u7684\u4eba\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u662f\u7f57\u4f2f\u7279\u00b7C\u00b7\u9a6c\u4e01(\u9c8d\u52c3\u53d4\u53d4)\u5021\u5bfc\u7684\u53ef\u9760\u8bbe\u8ba1\u539f\u5219\u7684\u5fe0\u5b9e\u7c89\u4e1d\u3002\u591a\u5e74\u6765\uff0c\u6211\u5728C#\u3001PHP\u3001Node.js\u548cPython\u4e2d\u4f7f\u7528\u8fc7\u8fd9\u4e9b\u539f\u5219\u3002\u65e0\u8bba\u6211\u628a\u5b83\u4eec\u5e26\u5230\u54ea\u91cc\uff0c\u5b83\u4eec\u901a\u5e38\u90fd\u5f88\u53d7\u6b22\u8fce\u2026\u2026\u9664\u4e86\u6211\u5f00\u59cb\u7528Python\u5de5\u4f5c\u7684\u65f6\u5019\u3002\u5728\u4ee3\u7801\u5ba1\u67e5\u671f\u95f4\uff0c\u6211\u4e0d\u65ad\u6536\u5230\u8fd9\u6837\u7684\u8bc4\u8bba\uff1a\u8fd9\u4e0d\u662f\u4e00\u79cd\u975e\u5e38Python\u5f0f\u7684\u505a\u4e8b\u65b9\u5f0f\u3002\u5f53\u65f6\u6211\u8fd8\u662fPython\u7684\u65b0\u624b\uff0c\u6240\u4ee5\u6211\u771f\u7684\u4e0d\u77e5\u9053\u5982\u4f55\u56de\u5e94\u3002\u6211\u4e0d\u77e5\u9053Pythonic\u7684\u4ee3\u7801\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4e5f\u4e0d\u77e5\u9053\u5b83\u770b\u8d77\u6765\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u800c\u4e14\u6ca1\u6709\u4e00\u4e2a\u89e3\u91ca\u662f\u975e\u5e38\u4ee4\u4eba\u6ee1\u610f\u7684\u3002\u8001\u5b9e\u8bf4\uff0c\u8fd9\u8ba9\u6211\u5f88\u751f\u6c14\u3002\u6211\u611f\u89c9\u4eba\u4eec\u6b63\u5728\u4f7f\u7528Python\u7684\u65b9\u5f0f\u6765\u9003\u907f\u7f16\u5199\u66f4\u6709\u7eaa\u5f8b\u7684\u4ee3\u7801\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u5c31\u80a9\u8d1f\u8d77\u4e00\u9879\u4f7f\u547d\uff0c\u8981\u8bc1\u660e\u53ef\u9760\u7684\u4ee3\u7801\u662fPython\u5f0f\u7684\u3002\u8fd9\u5c31\u662f\u73b0\u5728\u7684\u7ed3\u5c40\uff0c\u8fd9\u5c31\u662f\u6295\u7403\u3002\n\u8fc8\u514b\u5c14\u00b7\u8d39\u745f\u65af\u57fa\u4e8e\u7f57\u4f2f\u7279\u00b7C\u00b7\u9a6c\u4e01\u7684\u8bba\u6587\u201c\u8bbe\u8ba1\u539f\u5219\u548c\u8bbe\u8ba1\u6a21\u5f0f\u201d\u4e2d\u7684\u539f\u5219\u521b\u4f5c\u4e86\u52a9\u8bb0\u7b26\u5b9e\u4f53\u3002\u539f\u5219\u662f\u3002\n\u6211\u4eec\u7a0d\u540e\u5c06\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u8fd9\u4e9b\u5185\u5bb9\u3002\u5173\u4e8e\u53ef\u9760\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u6700\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b83\u4eec\u5e94\u8be5\u662f\u6574\u4f53\u4f7f\u7528\u7684\u3002\u9009\u62e9\u4e00\u4e2a\u5e76\u4e14\u53ea\u9009\u62e9\u4e00\u4e2a\u5bf9\u4f60\u4e0d\u4f1a\u6709\u592a\u5927\u5e2e\u52a9\u3002\u53ea\u6709\u5f53\u5b83\u4eec\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u4f60\u624d\u4f1a\u5f00\u59cb\u770b\u5230\u8fd9\u4e9b\u539f\u5219\u7684\u771f\u6b63\u4ef7\u503c\u3002\n\u867d\u7136\u6ca1\u6709\u5173\u4e8ePythonic\u65b9\u5f0f\u7684\u5b98\u65b9\u5b9a\u4e49\uff0c\u4f46\u7a0d\u5fae\u7528\u8c37\u6b4c\u641c\u7d22\u4e00\u4e0b\uff0c\u5c31\u4f1a\u7ed9\u51fa\u51e0\u4e2a\u7b54\u6848\uff0c\u800c\u8fd9\u4e9b\u7b54\u6848\u901a\u5e38\u90fd\u662f\u5f92\u52b3\u7684\u3002\n\u4e0a\u9762\u7684\u6b63\u786e\u8bed\u6cd5Pythonic\u4ee3\u7801\u9075\u5faaPython\u793e\u533a\u901a\u5e38\u63a5\u53d7\u7684\u7ea6\u5b9a\uff0c\u5e76\u4ee5\u9075\u5faa\u521b\u59cb\u54f2\u5b66\u7684\u65b9\u5f0f\u4f7f\u7528\u8bed\u8a00\u3002&#34\uff1b-Derek D.\u3002\n\u8482\u59c6\u00b7\u5f7c\u5f97\u65af\u7684\u201c\u87d2\u86c7\u4e4b\u7985\u201d\uff0c\u7f8e\u4e3d\u80dc\u8fc7\u4e11\u964b\u3002\u663e\u5f0f\u6bd4\u9690\u5f0f\u597d\u3002\u7b80\u5355\u603b\u6bd4\u590d\u6742\u597d\u3002\u590d\u6742\u603b\u6bd4\u590d\u6742\u597d\u3002\u5e73\u9762\u6bd4\u5d4c\u5957\u597d\u3002\u7a00\u758f\u6bd4\u5bc6\u96c6\u597d\u3002\u53ef\u8bfb\u6027\u5f88\u91cd\u8981\u3002\u7279\u6b8a\u60c5\u51b5\u4e0d\u591f\u7279\u6b8a\uff0c\u4e0d\u8db3\u4ee5\u8fdd\u53cd\u89c4\u5219\u3002\u5c3d\u7ba1\u5b9e\u7528\u80dc\u8fc7\u7eaf\u6d01\u3002\u9519\u8bef\u6c38\u8fdc\u4e0d\u5e94\u8be5\u6084\u65e0\u58f0\u606f\u5730\u8fc7\u53bb\u3002\u9664\u975e\u660e\u786e\u6c89\u9ed8\u3002\u9762\u5bf9\u6a21\u68f1\u4e24\u53ef\u7684\u60c5\u51b5\uff0c\u62d2\u7edd\u731c\u6d4b\u7684\u8bf1\u60d1\u3002\u5e94\u8be5\u67091\u4e2a\uff0c\u6700\u597d\u53ea\u6709\u4e00\u4e2a--\u663e\u7136\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5c3d\u7ba1\u8fd9\u79cd\u65b9\u5f0f\u4e00\u5f00\u59cb\u53ef\u80fd\u5e76\u4e0d\u660e\u663e\uff0c\u9664\u975e\u4f60\u662f\u8377\u5170\u4eba\u3002\u73b0\u5728\u603b\u6bd4\u6ca1\u6709\u597d\u3002\u867d\u7136\u4ece\u6765\u6ca1\u6709\u6bd4\u73b0\u5728\u66f4\u597d\u7684\u3002\u5982\u679c\u5b9e\u73b0\u5f88\u96be\u89e3\u91ca\uff0c\u90a3\u5c31\u4e0d\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u5982\u679c\u5b9e\u73b0\u5f88\u5bb9\u6613\u89e3\u91ca\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u540d\u79f0\u7a7a\u95f4\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u4e3b\u610f--\u8ba9\u6211\u4eec\u505a\u66f4\u591a\u8fd9\u6837\u7684\u4e8b\u60c5\u5427\uff01\n\u5728\u6211\u76f4\u63a5\u8df3\u5230\u8fd9\u4e9b\u539f\u5219\u4ee5\u53ca\u5b83\u4eec\u4e0ePython\u7985\u5b97\u7684\u5173\u7cfb\u4e4b\u524d\uff0c\u6709\u4e00\u4ef6\u4e8b\u6211\u60f3\u505a\uff0c\u8fd9\u662f\u5176\u4ed6\u53ef\u9760\u7684\u6559\u7a0b\u90fd\u4e0d\u4f1a\u505a\u7684\u3002\u6211\u4eec\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u539f\u5219\u4f7f\u7528\u4e0d\u540c\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u800c\u662f\u4f7f\u7528\u5355\u4e2a\u4ee3\u7801\u5e93\uff0c\u5e76\u5728\u6db5\u76d6\u6bcf\u4e2a\u539f\u5219\u65f6\u4f7f\u5176\u66f4\u52a0\u7a33\u56fa\u3002\u8fd9\u662f\u6211\u4eec\u8981\u5f00\u59cb\u7684\u4ee3\u7801\u3002\nFTPClient\u7c7b\uff1adef__init__(self\uff0c**kwargs)\uff1aself\u3002_ftp_client=FTPDriver(kwargs[&#39\uff1bhost&39\uff1b]\uff0ckwargs[&#39\uff1bport&39\uff1b])self\u3002_sftp_client=SFTPDriver(kwargs[&#39\uff1bsftp_host&39\uff1b]\uff0ckwargs[&#39\uff1buser&39\uff1b]\uff0ckwargs[&#39\uff1bpw&39\uff1b])def Upload(self\uff0cfile\uff1abytes\uff0c**kwargs)\uff1ais_sftp=kwargs[&#39\uff1bsftp&#39\uff1b]if is_sftp\uff1awith self\u3002_sftp_client\u3002Connection()as sftp\uff1asftp\u3002PUT(\u6587\u4ef6)ELSE\uff1aSELF\u3002_ftp_client\u3002Upload(File)def download(self\uff0ctarget\uff1astr\uff0c**kwargs)-&gt\uff1b\u5b57\u8282\uff1ais_sftp=kwargs[&#39\uff1bsftp\uff1b]if is_sftp\uff1awith self\u3002_sftp_client\u3002connection()as sftp\uff1a\u8fd4\u56desftp\u3002GET(\u76ee\u6807)ELSE\uff1a\u8fd4\u56de\u81ea\u6211\u3002_ftp_client\u3002\u4e0b\u8f7d(\u76ee\u6807)\n\u5b9a\u4e49\uff1a\u6bcf\u4e2a\u6a21\u5757/\u7c7b\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u804c\u8d23\uff0c\u56e0\u6b64\u53ea\u6709\u4e00\u4e2a\u66f4\u6539\u539f\u56e0\u3002\n\u76f8\u5173\u7985\u5b97\uff1a\u5e94\u8be5\u67091\u4e2a\uff0c\u6700\u597d\u53ea\u6709\u4e00\u4e2a--\u663e\u800c\u6613\u89c1\u7684\u505a\u4e8b\u65b9\u5f0f\u3002\n\u5355\u4e00\u8d23\u4efb\u539f\u5219(SRP)\u5b8c\u5168\u662f\u5173\u4e8e\u901a\u8fc7\u56f4\u7ed5\u8d23\u4efb\u7ec4\u7ec7\u4ee3\u7801\u6765\u589e\u52a0\u5185\u805a\u529b\u548c\u51cf\u5c11\u8026\u5408\u3002\u8981\u660e\u767d\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u98de\u8dc3\u3002\u5982\u679c\u4efb\u4f55\u7ed9\u5b9a\u804c\u8d23\u7684\u6240\u6709\u4ee3\u7801\u90fd\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u5e76\u4e14\u8fd9\u4e9b\u804c\u8d23\u53ef\u80fd\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u4e0d\u4f1a\u91cd\u53e0\u3002\u8003\u8651\u8fd9\u4e2a\u975e\u4ee3\u7801\u793a\u4f8b\u3002\u5982\u679c\u626b\u5730\u662f\u4f60\u7684\u8d23\u4efb\uff0c\u800c\u6211\u662f\u62d6\u5730\u7684\u8d23\u4efb\uff0c\u90a3\u6211\u5c31\u6ca1\u6709\u7406\u7531\u8bb0\u5f55\u5730\u677f\u662f\u5426\u626b\u8fc7\u4e86\u3002\u6211\u53ea\u80fd\u95ee\u4f60\uff0c\u5730\u677f\u626b\u8fc7\u4e86\u5417\uff1f\u5e76\u6839\u636e\u4f60\u7684\u53cd\u5e94\u6765\u51b3\u5b9a\u6211\u7684\u884c\u52a8\u3002\n\u6211\u53d1\u73b0\u628a\u8d23\u4efb\u770b\u4f5c\u7528\u4f8b\u662f\u5f88\u6709\u7528\u7684\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u7985\u5b97\u53d1\u6325\u4f5c\u7528\u7684\u65b9\u5f0f\u3002\u6bcf\u4e2a\u7528\u4f8b\u90fd\u5e94\u8be5\u53ea\u5728\u4e00\u4e2a\u5730\u65b9\u5904\u7406\uff0c\u8fdb\u800c\u521b\u5efa\u4e00\u79cd\u660e\u663e\u7684\u505a\u4e8b\u65b9\u5f0f\u3002\u8fd9\u4e5f\u6ee1\u8db3\u4e86SRP\u5b9a\u4e49\u4e2d\u66f4\u6539\u90e8\u5206\u7684\u4e00\u4e2a\u539f\u56e0\u3002\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u66f4\u6539\u7684\u552f\u4e00\u539f\u56e0\u662f\u7528\u4f8b\u5df2\u7ecf\u66f4\u6539\u3002\n\u68c0\u67e5\u6211\u4eec\u7684\u539f\u59cb\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8be5\u7c7b\u6ca1\u6709\u5355\u4e00\u7684\u804c\u8d23\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u7ba1\u7406FTP\u548cSFTP\u670d\u52a1\u5668\u7684\u8fde\u63a5\u8be6\u7ec6\u4fe1\u606f\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u751a\u81f3\u6ca1\u6709\u5355\u72ec\u7684\u8d23\u4efb\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5fc5\u987b\u9009\u62e9\u8981\u4f7f\u7528\u7684\u534f\u8bae\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06FTPClient\u7c7b\u5206\u62102\u4e2a\u7c7b\u6765\u89e3\u51b3\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u6709\u4e00\u4e2a\u804c\u8d23\u3002\nFTPClient\u7c7b\uff1adef__init__(\u81ea\u8eab\u3001\u4e3b\u673a\u3001\u7aef\u53e3)\uff1a\u81ea\u8eab\u3002_CLIENT=FTPDriver(\u4e3b\u673a\uff0c\u7aef\u53e3)def Upload(\u81ea\u8eab\uff0c\u6587\u4ef6\uff1a\u5b57\u8282)\uff1a\u81ea\u8eab\u3002_\u5ba2\u6237\u7aef\u3002Upload(File)def download(self\uff0ctarget\uff1astr)-&gt\uff1b\u5b57\u8282\uff1a\u8fd4\u56de\u81ea\u8eab\u3002_\u5ba2\u6237\u7aef\u3002\u4e0b\u8f7d(\u76ee\u6807)\u7c7bSFTPClient(FTPClient)\uff1adef__init__(self\uff0chost\uff0cuser\uff0cpassword)\uff1aself\u3002_CLIENT=SFTPDriver(host\uff0cusername=user\uff0cpassword=password)def Upload(self\uff0cfile\uff1abytes)\uff1aWITH SELF\u3002_\u5ba2\u6237\u7aef\u3002Connection()as sftp\uff1asftp\u3002put(File)def download(self\uff0ctarget\uff1astr)-&gt\uff1bbytes\uff1awith self\u3002_\u5ba2\u6237\u7aef\u3002connection()as sftp\uff1a\u8fd4\u56desftp\u3002\u83b7\u53d6(\u76ee\u6807)\u3002\n\u4e00\u6b21\u5feb\u901f\u7684\u66f4\u6539\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5c31\u5df2\u7ecf\u611f\u89c9\u5230\u4e86\u66f4\u591a\u7684Python\u98ce\u683c\u3002\u4ee3\u7801\u662f\u7a00\u758f\u7684\uff0c\u4e0d\u5bc6\u96c6\u7684\uff0c\u7b80\u5355\u7684\u4e0d\u590d\u6742\u7684\uff0c\u6241\u5e73\u7684\uff0c\u4e0d\u5d4c\u5957\u7684\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u52a0\u5165\u5230SRP\u4e2d\uff0c\u90a3\u4e48\u8003\u8651\u4e00\u4e0b\u4e0eSRP\u4e4b\u540e\u7684\u4ee3\u7801\u76f8\u6bd4\uff0c\u539f\u59cb\u4ee3\u7801\u5728\u9519\u8bef\u5904\u7406\u65b9\u9762\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u5b9a\u4e49\uff1a\u8f6f\u4ef6\u5b9e\u4f53(\u7c7b\u3001\u51fd\u6570\u3001\u6a21\u5757)\u5bf9\u4e8e\u6269\u5c55\u5e94\u8be5\u662f\u5f00\u653e\u7684\uff0c\u5bf9\u66f4\u6539\u5e94\u8be5\u662f\u5c01\u95ed\u7684\u3002\n\u7531\u4e8e\u53d8\u5316\u548c\u6269\u5c55\u7684\u5b9a\u4e49\u662f\u5982\u6b64\u76f8\u4f3c\uff0c\u5f88\u5bb9\u6613\u88ab\u5f00\u95ed\u539f\u5219\u6df9\u6ca1\u3002\u6211\u5df2\u7ecf\u627e\u5230\u4e86\u6700\u76f4\u89c2\u7684\u65b9\u6cd5\u6765\u51b3\u5b9a\u6211\u662f\u5426\u8981\u8fdb\u884c\u66f4\u6539\u6216\u6269\u5c55\u662f\u8003\u8651\u51fd\u6570\u7b7e\u540d\u3002\u66f4\u6539\u662f\u5f3a\u5236\u66f4\u65b0\u8c03\u7528\u4ee3\u7801\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u53ef\u80fd\u662f\u66f4\u6539\u51fd\u6570\u540d\u79f0\u3001\u4ea4\u6362\u53c2\u6570\u987a\u5e8f\u6216\u6dfb\u52a0\u975e\u9ed8\u8ba4\u53c2\u6570\u3002\u8c03\u7528\u8be5\u51fd\u6570\u7684\u4efb\u4f55\u4ee3\u7801\u90fd\u5c06\u88ab\u5f3a\u5236\u6839\u636e\u65b0\u7b7e\u540d\u8fdb\u884c\u66f4\u6539\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6269\u5c55\u5141\u8bb8\u65b0\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u66f4\u6539\u8c03\u7528\u4ee3\u7801\u3002\u8fd9\u53ef\u4ee5\u662f\u91cd\u547d\u540d\u53c2\u6570\u3001\u6dfb\u52a0\u5177\u6709\u9ed8\u8ba4\u503c\u7684\u65b0\u53c2\u6570\uff0c\u6216\u8005\u6dfb\u52a0*arg\u6216**kwargs\u53c2\u6570\u3002\u8c03\u7528\u8be5\u51fd\u6570\u7684\u4efb\u4f55\u4ee3\u7801\u4ecd\u5c06\u6309\u6700\u521d\u7f16\u5199\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u540c\u6837\u7684\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u73ed\u7ea7\u3002\n\u60a8\u7684\u672c\u80fd\u53cd\u5e94\u53ef\u80fd\u662f\u5411FTPClient\u7c7b\u6dfb\u52a0\u4e00\u4e2aUPLOAD_BULK\u548cDOWNLOAD_BULK\u51fd\u6570\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e5f\u662f\u5904\u7406\u6b64\u7528\u4f8b\u7684\u53ef\u9760\u65b9\u6cd5\u3002\n\u7c7bFTPClient\uff1adef__init__(self\uff0chost\uff0cport)\uff1a.#\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c__init__\u5b9e\u73b0\u4e0d\u662f\u91cd\u8981\u7684def Upload(self\uff0cfile\uff1abytes)\uff1a.#\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c\u4e0a\u4f20\u5b9e\u73b0\u4e0d\u662f\u91cd\u8981\u7684def download(self\uff0ctarget\uff1astr)-&gt\uff1bbytes\uff1a.#\u5bf9\u4e8e\u6b64\u793a\u4f8b\uff0c\u4e0b\u8f7d\u5b9e\u73b0\u4e0d\u662f\u91cd\u8981\u7684def UPLOAD_BULK(SELF\uff0cFILES\uff1aLIST[STR])\uff1a\u5bf9\u4e8e\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6\uff1aSELF\u3002Upload(File)def download_Bulk(self\uff0cTargets\uff1aList[str])-&gt\uff1b\u5bf9\u4e8eTargets\uff1aFiles\u4e2d\u7684\u76ee\u6807\uff0cList[Bytes]\uff1afiles=[]\u3002\u9644\u52a0(\u81ea\u6211\u3002\u4e0b\u8f7d(\u76ee\u6807))\u8fd4\u56de\u6587\u4ef6\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u4f7f\u7528\u51fd\u6570\u6765\u6269\u5c55\u7c7b\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7ee7\u627f\u6765\u6269\u5c55\uff0c\u56e0\u4e3aBulkFTPClient\u5b50\u7c7b\u5728\u4e0b\u8f7d\u65f6\u5fc5\u987b\u66f4\u6539\u51fd\u6570\u7b7e\u540d\uff0c\u4ee5\u53cd\u6620\u5b83\u8fd4\u56de\u7684\u662f\u5b57\u8282\u5217\u8868\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b57\u8282\uff0c\u8fd9\u8fdd\u53cd\u4e86Open-Closed\u539f\u5219\u548cLiskov\u7684Substituability\u539f\u5219\u3002\n\u5b9a\u4e49\uff1a\u5982\u679cS\u662fT\u7684\u5b50\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u7528S\u7c7b\u578b\u7684\u5bf9\u8c61\u66ff\u6362T\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\n\u5229\u65af\u79d1\u592b\u7684\u66ff\u4ee3\u6027\u539f\u5219\u662f\u6211\u5b66\u5230\u7684\u7b2c\u4e00\u4e2a\u53ef\u9760\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u4e5f\u662f\u6211\u5728\u5927\u5b66\u91cc\u5b66\u5230\u7684\u552f\u4e00\u4e00\u4e2a\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u6211\u6765\u8bf4\u662f\u5982\u6b64\u76f4\u89c2\u7684\u539f\u56e0\u3002\u4e00\u79cd\u7b80\u5355\u7684\u82f1\u8bed\u8bf4\u6cd5\u662f\uff0c\u4efb\u4f55\u5b50\u7c7b\u90fd\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u66ff\u6362\u5176\u7236\u7c7b\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709FTP\u5ba2\u6237\u7aef\u7c7b\u90fd\u5177\u6709\u76f8\u540c\u7684\u51fd\u6570\u7b7e\u540d\u3002\u8fd9\u6837\u505a\u662f\u6709\u76ee\u7684\u7684\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4f1a\u9075\u5faa\u5229\u65af\u79d1\u592b\u7684\u66ff\u4ee3\u6027\u539f\u5219\u3002SFTPClient\u5bf9\u8c61\u53ef\u4ee5\u66ff\u6362FTPClient\u5bf9\u8c61\uff0c\u5e76\u4e14\u65e0\u8bba\u662f\u4ec0\u4e48\u4ee3\u7801\u8c03\u7528UPLOAD\u6216Download\uff0c\u90fd\u662f\u5e78\u798f\u7684\u4e0d\u77e5\u4e0d\u89c9\u3002\nFTP\u6587\u4ef6\u4f20\u8f93\u7684\u53e6\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\u662f\u652f\u6301FTPS(\u662f\u7684\uff0cFTPS\u548cSFTP\u662f\u4e0d\u540c\u7684)\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u5f88\u68d8\u624b\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u9009\u62e9\u3002\u5b83\u4eec\u662f\uff1a1.\u6dfb\u52a0UPLOAD_SECURE\u548cDOWNLOAD_SECURE\u51fd\u6570\u30022.\u6dfb\u52a0\u901a\u8fc7**kwargs\u7684\u5b89\u5168\u6807\u5fd7\u30023.\u65b0\u5efa\u4e00\u4e2a\u6269\u5c55FTPClient\u7684\u7c7bFTPSClient\u3002\n\u51fa\u4e8e\u6211\u4eec\u5c06\u5728\u63a5\u53e3\u9694\u79bb\u548c\u4f9d\u8d56\u5173\u7cfb\u53cd\u8f6c\u539f\u5219\u4e2d\u9047\u5230\u7684\u539f\u56e0\uff0c\u65b0\u7684FTPSClient\u7c7b\u662f\u53ef\u884c\u7684\u3002\nFTPClient\u7c7b\uff1adef__init__(\u81ea\u8eab\u3001\u4e3b\u673a\u3001\u7aef\u53e3)\uff1a.\u3002\u5b9a\u4e49\u4e0a\u4f20(\u81ea\u8eab\uff0c\u6587\u4ef6\uff1a\u5b57\u8282)\uff1a.\u3002def download(\u81ea\u8eab\uff0c\u76ee\u6807\uff1astr)-&gt\uff1b\u5b57\u8282\uff1a.\u3002\u7c7bFTPSClient(FTPClient)\uff1adef__init__(self\uff0chost\uff0cport\uff0cusername\uff0cpassword)\uff1aself\u3002_CLIENT=FTPSDriver(\u4e3b\u673a\uff0c\u7aef\u53e3\uff0c\u7528\u6237=\u7528\u6237\u540d\uff0c\u5bc6\u7801=\u5bc6\u7801)\u3002\n\u8fd9\u6b63\u662f\u8fb9\u7f18\u60c5\u51b5\u7ee7\u627f\u7684\u76ee\u7684\u6240\u5728\uff0c\u9075\u5faaLiskov\u7684\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u6709\u6548\u7684\u591a\u6001\u6027\u3002\u60a8\u5c06\u6ce8\u610f\u5230\uff0c\u73b0\u5728FTPClient\u53ef\u4ee5\u66ff\u6362\u4e3aFTPSClient\u6216SFTPClient\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6240\u67093\u4e2a\u90fd\u662f\u53ef\u4e92\u6362\u7684\uff0c\u8fd9\u5c31\u5e26\u6765\u4e86\u63a5\u53e3\u9694\u79bb\u95ee\u9898\u3002\n\u4e0e\u5229\u65af\u79d1\u592b\u4e0d\u540c\u7684\u662f\uff0c\u754c\u9762\u9694\u79bb\u539f\u5219\u662f\u6211\u7406\u89e3\u7684\u6700\u540e\u4e00\u4e2a\u4e5f\u662f\u6700\u96be\u7406\u89e3\u7684\u539f\u5219\u3002\u6211\u603b\u662f\u628a\u5b83\u7b49\u540c\u4e8e\u754c\u9762\u5173\u952e\u5b57\uff0c\u800c\u5927\u591a\u6570\u5bf9\u53ef\u9760\u8bbe\u8ba1\u7684\u89e3\u91ca\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u6d88\u9664\u8fd9\u79cd\u56f0\u60d1\u3002\u6b64\u5916\uff0c\u6211\u53d1\u73b0\u5927\u591a\u6570\u6307\u5357\u90fd\u8bd5\u56fe\u5c06\u6240\u6709\u4e1c\u897f\u62c6\u5206\u6210\u5c0f\u754c\u9762\uff0c\u901a\u5e38\u6bcf\u4e2a\u754c\u9762\u53ea\u6709\u4e00\u4e2a\u529f\u80fd\uff0c\u56e0\u4e3a\u592a\u591a\u7684\u754c\u9762\u6bd4\u592a\u5c11\u7684\u754c\u9762\u8981\u597d\u3002\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\uff0cPython\u6ca1\u6709\u63a5\u53e3\uff0c\u7b2c\u4e8c\u79cd\u8bed\u8a00\uff0c\u5982C#\u548cJava\uff0c\u6709\u63a5\u53e3\uff0c\u8fc7\u591a\u5730\u62c6\u5206\u5b83\u4eec\u603b\u662f\u4ee5\u5b9e\u73b0\u63a5\u53e3\u7684\u63a5\u53e3\u800c\u544a\u7ec8\uff0c\u8fd9\u4e9b\u63a5\u53e3\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\uff0c\u8fd9\u4e0d\u662fPython\u8bed\u8a00\u3002\n\u9996\u5148\uff0c\u6211\u60f3\u901a\u8fc7\u67e5\u770b\u4e00\u4e9bC#\u4ee3\u7801\u6765\u63a2\u7d22\u63a5\u53e3\u592a\u5c0f\u7684\u95ee\u9898\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u79cdPythonical\u7684ISP\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u540c\u610f\u6216\u8005\u53ea\u662f\u9009\u62e9\u76f8\u4fe1\u6211\uff0c\u8d85\u5c0f\u7684\u754c\u9762\u4e0d\u662f\u5206\u79bb\u60a8\u7684\u754c\u9762\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u8bf7\u968f\u610f\u8df3\u5230\u4e0b\u9762\u7684Pythonic\u89e3\u51b3\u65b9\u6848\u3002\n#WARNING HERE BE C#\u4ee3\u7801\u516c\u5171\u63a5\u53e3ICanUpload{void Upload(Byte[]file)\uff1b}\u516c\u5171\u63a5\u53e3ICanDownload{Byte[]Download()\uff1b}\u7c7bFTPClient\uff1aICanUpload\uff0cICanDownload{public void Upload(Byte[]file){.}public Byte[]Download(String Target){.}}\u3002\n\u5f53\u60a8\u9700\u8981\u6307\u5b9a\u540c\u65f6\u5b9e\u73b0ICanDownload\u548cICanUpload\u63a5\u53e3\u7684\u53c2\u6570\u7c7b\u578b\u65f6\uff0c\u95ee\u9898\u5c31\u5f00\u59cb\u4e86\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u6f14\u793a\u4e86\u8be5\u95ee\u9898\u3002\n\u7c7bReportGenerator{public Byte[]doStuff(Byte[]raw){.}public void GenerateReport(/*\u8fd9\u91cc\u5e94\u8be5\u653e\u4ec0\u4e48\u7c7b\u578b\uff1f*/client){raw_data=client\u3002\u4e0b\u8f7d(&#39\uff1bclient_rundown\u3002csv&#39\uff1b)\uff1b\u62a5\u544a=\u6b64\u3002doStuff(Raw_Data)\uff1b\u5ba2\u6237\u7aef\u3002\u4e0a\u4f20(\u62a5\u8868)\uff1b}}\u3002\n\u5728GenerateReport\u51fd\u6570\u7b7e\u540d\u4e2d\uff0c\u60a8\u8981\u4e48\u5fc5\u987b\u5c06\u5177\u4f53\u7684FTPClient\u7c7b\u6307\u5b9a\u4e3a\u53c2\u6570\u7c7b\u578b(\u8fd9\u8fdd\u53cd\u4e86\u4f9d\u8d56\u5173\u7cfb\u53cd\u8f6c\u539f\u5219)\uff0c\u8981\u4e48\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u540c\u65f6\u5b9e\u73b0ICanUpload\u548cICanDownload\u63a5\u53e3\u7684\u63a5\u53e3\u3002\u5426\u5219\uff0c\u53ea\u5b9e\u73b0ICanUpload\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u4f20\u5165\uff0c\u4f46\u4e0b\u8f7d\u8c03\u7528\u4f1a\u5931\u8d25\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u56e0\u4e3a\u5bf9\u8c61\u53ea\u5b9e\u73b0ICanDownload\u63a5\u53e3\u3002\u901a\u5e38\u7684\u7b54\u6848\u662f\u521b\u5efa\u4e00\u4e2aIFTPClient\u63a5\u53e3\uff0c\u5e76\u8ba9GenerateReport\u51fd\u6570\u4f9d\u8d56\u4e8e\u8be5\u63a5\u53e3\u3002\n\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u9664\u975e\u6211\u4eec\u4ecd\u7136\u4f9d\u8d56FTP\u5ba2\u6237\u7aef\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5f00\u59cb\u5728S3\u4e2d\u5b58\u50a8\u62a5\u544a\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u5bf9\u6211\u6765\u8bf4\uff0cISP\u5c31\u662f\u4e3a\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u4e0e\u60a8\u7684\u4ee3\u7801\u4ea4\u4e92\u505a\u51fa\u5408\u7406\u7684\u9009\u62e9\u3002\u6ca1\u9519\uff0c\u5b83\u66f4\u591a\u5730\u4e0eAPI\u548cCLI\u4e2d\u7684i\u76f8\u5173\uff0c\u800c\u4e0d\u662finterface\u5173\u952e\u5b57\u3002\u8fd9\u4e5f\u662fPython\u7985\u5b97\u7684\u53ef\u8bfb\u6027\u5f88\u91cd\u8981\u7684\u539f\u56e0\u3002\u4e00\u4e2a\u597d\u7684\u63a5\u53e3\u5c06\u9075\u5faa\u62bd\u8c61\u7684\u8bed\u4e49\uff0c\u5e76\u4e0e\u672f\u8bed\u76f8\u5339\u914d\uff0c\u4ece\u800c\u4f7f\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u6dfb\u52a0S3Client\uff0c\u56e0\u4e3a\u5b83\u4e0eFTPClient\u5177\u6709\u76f8\u540c\u7684\u4e0a\u4f20/\u4e0b\u8f7d\u8bed\u4e49\u3002\u6211\u4eec\u5e0c\u671b\u4fdd\u6301\u4e0a\u4f20\u548c\u4e0b\u8f7d\u7684S3Clients\u7b7e\u540d\u4e00\u81f4\uff0c\u4f46\u662f\u65b0\u7684S3Client\u7ee7\u627fFTPClient\u5c06\u662f\u65e0\u7a3d\u4e4b\u8c08\u3002\u6bd5\u7adf\uff0cS3\u4e0d\u662fFTP\u7684\u7279\u4f8b\u3002FTP\u548cS3\u7684\u5171\u540c\u70b9\u5728\u4e8e\u5b83\u4eec\u90fd\u662f\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff0c\u5e76\u4e14\u8fd9\u4e9b\u534f\u8bae\u901a\u5e38\u5171\u4eab\u4e00\u4e2a\u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u5982\u672c\u4f8b\u6240\u793a\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u4eceFTPClient\u7ee7\u627f\uff0c\u4e0d\u5982\u5c06\u8fd9\u4e9b\u7c7b\u4e0e\u62bd\u8c61\u57fa\u7c7b\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u62bd\u8c61\u57fa\u7c7b\u662fPython\u6700\u63a5\u8fd1\u63a5\u53e3\u7684\u4e1c\u897f\u3002\n\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aFileTransferClient\uff0c\u5b83\u6210\u4e3a\u6211\u4eec\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u6240\u6709\u7684\u73b0\u6709\u5ba2\u6237\u7aef\u73b0\u5728\u90fd\u7ee7\u627f\u81ea\u8be5\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u7ee7\u627f\u81eaFTPClient\u3002\u8fd9\u5f3a\u5236\u4f7f\u7528\u516c\u5171\u63a5\u53e3\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u5c06\u6279\u91cf\u64cd\u4f5c\u79fb\u5230\u5b83\u4eec\u81ea\u5df1\u7684\u63a5\u53e3\u4e2d\uff0c\u56e0\u4e3a\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\u90fd\u652f\u6301\u5b83\u4eec\u3002\n\u4eceABC\u5bfc\u5165ABC def\u7c7bFileTransferClient(Abc)\uff1adef Upload(self\uff0cfile\uff1abytes)\uff1apass def download(self\uff0ctarget\uff1astr)-&gt\uff1bbytes\uff1apass def cd(self\uff0ctarget_dir)\uff1apass\u7c7bBulkFileTransferClient(Abc)\uff1adef Upload_Bulk(self\uff0cfiles\uff1alist[bytes])\uff1apass def download_Bulk(self\uff0ctarget\uff1alist[str])\uff1apass\u7c7bBulkFileTransferClient(Abc)\uff1apass def download_Bulk(self\uff0ctarget\uff1alist[str])\uff1apass\u3002\n\u54e6\u4f19\u8ba1\uff01\u8fd9\u662f\u4e2a\u597d\u4ee3\u7801\u8fd8\u662f\u600e\u4e48\u7684\u3002\u6211\u4eec\u751a\u81f3\u8bbe\u6cd5\u6324\u5165SCPClient\uff0c\u5e76\u4fdd\u7559\u6279\u91cf\u64cd\u4f5c\u4f5c\u4e3a\u5b83\u4eec\u81ea\u5df1\u7684\u6df7\u5408\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0e\u4f9d\u8d56\u6ce8\u5165\u5f88\u597d\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f9d\u8d56\u6ce8\u5165\u662f\u4e00\u79cd\u7528\u4e8e\u4f9d\u8d56\u53cd\u8f6c\u539f\u5219\u7684\u6280\u672f\u3002\n\u5b9a\u4e49\uff1a\u9ad8\u7ea7\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u4f4e\u7ea7\u6a21\u5757\u3002\u5b83\u4eec\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61\uff0c\u800c\u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u7ec6\u8282\uff0c\u800c\u7ec6\u8282\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61\u3002\n\u8fd9\u5c31\u662f\u628a\u5b83\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u4e1c\u897f\u3002\u6211\u4eec\u7528\u5176\u4ed6\u53ef\u9760\u7684\u539f\u5219\u6240\u505a\u7684\u4e00\u5207\uff0c\u90fd\u662f\u4e3a\u4e86\u8fbe\u5230\u4e00\u4e2a\u6211\u4eec\u4e0d\u518d\u4f9d\u8d56\u4e8e\u7528\u6765\u79fb\u52a8\u6587\u4ef6\u7684\u7ec6\u8282(\u5e95\u5c42\u6587\u4ef6\u4f20\u8f93\u534f\u8bae)\u7684\u5730\u65b9\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u56f4\u7ed5\u4e1a\u52a1\u89c4\u5219\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u5c06\u5b83\u4eec\u7ed1\u5b9a\u5230\u7279\u5b9a\u5b9e\u73b0\u3002\u6211\u4eec\u7684\u4ee3\u7801\u540c\u65f6\u6ee1\u8db3\u4f9d\u8d56\u5012\u7f6e\u7684\u4e24\u4e2a\u8981\u6c42\u3002\n\u6211\u4eec\u7684\u9ad8\u7ea7\u6a21\u5757\u4e0d\u518d\u9700\u8981\u4f9d\u8d56\u4e8eFTPClient\u3001SFTPClient\u6216S3Client\u7b49\u4f4e\u7ea7\u6a21\u5757\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u62bd\u8c61FileTransferClient\u3002\u6211\u4eec\u4f9d\u8d56\u4e8e\u79fb\u52a8\u6587\u4ef6\u7684\u62bd\u8c61\uff0c\u800c\u4e0d\u662f\u8fd9\u4e9b\u6587\u4ef6\u5982\u4f55\u79fb\u52a8\u7684\u7ec6\u8282\u3002\n\u6211\u4eec\u7684\u62bd\u8c61FileTransferClient\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9a\u4e8e\u534f\u8bae\u7684\u7ec6\u8282\uff0c\u76f8\u53cd\uff0c\u8fd9\u4e9b\u7ec6\u8282\u53d6\u51b3\u4e8e\u5982\u4f55\u901a\u8fc7\u62bd\u8c61\u4f7f\u7528\u5b83\u4eec(\u5373\u53ef\u4ee5\u4e0a\u4f20\u6216\u4e0b\u8f7d\u6587\u4ef6)\u3002\ndef exchange(client\uff1aFileTransferClient\uff0cTo_Upload\uff1aBytes\uff0cTo_Download\uff1aStr)-&gt\uff1bBytes\uff1aExchange\u3002Upload(To_Upload)\u8fd4\u56de\u4ea4\u6362\u673a\u3002\u5982\u679c__name__==&#39\uff1b__main__&#39\uff1b\uff1aftp=FTPClient(&#39\uff1bftp.host.com&#39\uff1b)sftp=FTPSClient(&#39\uff1bsftp.host.com&#39\uff1b\uff0c22)ftps=SFTPClient(&#39\uff1bftps.host.com&#39\uff1b\uff0c990\uff0c&#39\uff1bftps_user&#39\uff1b\uff0c&#39\uff1bP@s\u3002)S3=S3Client(&#39\uff1bftp.host.com&#39\uff1b)scp=SCPClient(&#39\uff1bftp.host.com&#39\uff1b)\u7528\u4e8e[ftp\uff0csftp\uff0cftps\uff0cS3\uff0cscp]\u4e2d\u7684\u5ba2\u6237\u7aef\uff1aExchange(Client\uff0cb&#39\uff1bHello&#39\uff1b\uff0c&#39\uff1bgreeting.txt&#39\uff1b)\u3002\n\u5728\u8fd9\u91cc\uff0c\u60a8\u6709\u4e00\u4e2a\u575a\u5b9e\u7684\u5b9e\u73b0\uff0c\u4e5f\u662f\u975e\u5e38Python\u5f0f\u7684\u3002\u5982\u679c\u60a8\u4ee5\u524d\u6ca1\u6709\u5b66\u4e60\u8fc7Python\uff0c\u6211\u5e0c\u671b\u60a8\u81f3\u5c11\u5df2\u7ecf\u70ed\u8eab\u5230\u4e86Solid\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6b63\u5728\u5b66\u4e60Python\u4f46\u4e0d\u786e\u5b9a\u5982\u4f55\u7ee7\u7eed\u7f16\u5199Solid\u4ee3\u7801\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u7cbe\u5fc3\u7b56\u5212\u7684\u4f8b\u5b50\uff0c\u6211\u77e5\u9053\u5b83\u4f1a\u4e3a\u6211\u7684\u8bba\u70b9\u63d0\u4f9b\u652f\u6301\uff0c\u4f46\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4ecd\u7136\u611f\u5230\u60ca\u8bb6\uff0c\u56e0\u4e3a\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u7684\u53d8\u5316\u662f\u5982\u6b64\u4e4b\u5927\u3002\u5e76\u4e0d\u662f\u6bcf\u4e2a\u95ee\u9898\u90fd\u7b26\u5408\u8fd9\u4e2a\u7cbe\u786e\u7684\u5206\u7c7b\uff0c\u4f46\u662f\u6211\u5df2\u7ecf\u5c1d\u8bd5\u5728\u6211\u7684\u51b3\u5b9a\u4e2d\u5305\u542b\u8db3\u591f\u7684\u63a8\u7406\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u5c06\u6765\u9009\u62e9\u6700\u53ef\u9760\u7684Pythonic\u5b9e\u73b0\u3002\n\u5982\u679c\u60a8\u4e0d\u540c\u610f\u6216\u9700\u8981\u4efb\u4f55\u6f84\u6e05\uff0c\u8bf7\u5728Twitter\u4e0a\u7559\u8a00\u6216@d3r3kdrumm0nd\u3002", "note_en": "People that know me will tell you I am a big fan of the SOLID Design Principles championed by Robert C. Martin (Uncle Bob)). Over the years I&#39;ve used these principles in C#, PHP, Node.js, and Python. Everywhere I took them they were generally well-received...except when I started working in Python. I kept getting comments like &#34;It&#39;s not a very Pythonic way to do things&#34; during code review. I was new to Python at the time so I didn&#39;t really know how to respond. I didn&#39;t know what Pythonic code meant or looked like and none of the explanations offered were very satisfying. It honestly pissed me off. I felt like people were using the Pythonic way to cop-out of writing more disciplined code. Since then I&#39;ve been on a mission to prove SOLID code is Pythonic. That&#39;s the wind up now here&#39;s the pitch.\n  Michael Feathers can be credited for creating the mnemonic SOLID which is based on principles from Robert C. Martin\u2019s paper, \u201cDesign Principles and Design Patterns\u201d. The principles are\n  We will cover these in more detail shortly. The most important thing to note about the SOLID design principles is they are meant to be used holistically. Choosing one and just one is not going to do much for you. It&#39;s when used together you start to see the real value in these principles.\n  Although there is no official definition for the Pythonic way a little Googling gives you several answers along this general vain.\n &#34;Above correct syntax Pythonic code follows the normally accepted conventions of the Python community, and uses the language in a way that follows the founding philosophy.&#34; - Derek D.\n  The Zen of Python, by Tim Peters   Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren&#39;t special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you&#39;re Dutch. Now is better than never. Although never is often better than  right now. If the implementation is hard to explain, it&#39;s a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let&#39;s do more of those!\n  Before I jump right into the principles and how they relate to the Zen of Python, there&#39;s one thing I want to do that no other SOLID tutorial does. Instead of using a different code snippet for each principle, We are going to work with a single code base and make it more SOLID as we cover each principle. Here is the code we are going to start with.\n class  FTPClient :  def  __init__ ( self ,  ** kwargs ):  self . _ftp_client  =  FTPDriver ( kwargs [ &#39;host&#39; ],  kwargs [ &#39;port&#39; ])  self . _sftp_client  =  SFTPDriver ( kwargs [ &#39;sftp_host&#39; ],  kwargs [ &#39;user&#39; ],  kwargs [ &#39;pw&#39; ])  def  upload ( self ,  file : bytes ,  ** kwargs ):  is_sftp  =  kwargs [ &#39;sftp&#39; ]  if  is_sftp :  with  self . _sftp_client . Connection ()  as  sftp :  sftp . put ( file )  else :  self . _ftp_client . upload ( file )  def  download ( self ,  target : str ,  ** kwargs )  -&gt;  bytes :  is_sftp  =  kwargs [ &#39;sftp&#39; ]  if  is_sftp :  with  self . _sftp_client . Connection ()  as  sftp :  return  sftp . get ( target )  else :  return  self . _ftp_client . download ( target )\n  Definition: Every module/class should only have one responsibility and therefore only one reason to change.\n Relevant Zen: There should be one-- and preferably only one --obvious way to do things\n The Single Responsibility Principle (SRP) is all about increasing cohesion and decreasing coupling by organizing code around responsibilities. It&#39;s not a big leap to see why that happens. If all the code for any given responsibility is in a single place that&#39;s cohesive and while responsibilities may be similar they don&#39;t often overlap. Consider this non-code example. If it is your responsibility to sweep and my responsibility to mop there&#39;s no reason for me to keep track of whether or not the floor has been swept. I can just ask you, &#34;has the floor been swept&#34;? and base my action according to your response.\n I find it useful to think of responsibilities as use cases, which is how our Zen comes into play. Each use case should only be handled in one place, in turn, creating one obvious way to do things. This also satisfies the, &#34;one reason to change&#34; portion of the SRP&#39;s definition. The only reason this class should change is if the use case has changed.\n Examining our original code we can see the class does not have a single responsibility because it has to manage connection details for an FTP, and SFTP server. Furthermore, the methods don&#39;t even have a single responsibility because both have to choose which protocol they will be using. This can be fixed by splitting the  FTPClient class into 2 classes each with one of the responsibilities.\n class  FTPClient :  def  __init__ ( self ,  host ,  port ):  self . _client  =  FTPDriver ( host ,  port )  def  upload ( self ,  file : bytes ):  self . _client . upload ( file )  def  download ( self ,  target : str )  -&gt;  bytes :  return  self . _client . download ( target ) class  SFTPClient ( FTPClient ):  def  __init__ ( self ,  host ,  user ,  password ):  self . _client  =  SFTPDriver ( host ,  username = user ,  password = password )  def  upload ( self ,  file : bytes ):  with  self . _client . Connection ()  as  sftp :  sftp . put ( file )  def  download ( self ,  target : str )  -&gt;  bytes :  with  self . _client . Connection ()  as  sftp :  return  sftp . get ( target )\n One quick change and our code is already feeling much more Pythonic. The code is sparse, and not dense, simple not complex, flat and not nested. If you&#39;re not on board yet think about how the original code would look with error handling compared to the code following SRP.\n  Definition: Software Entities (classes, functions, modules) should be open for extension but closed to change.\n  Since the definition of change and extension are so similar it is easy to get overwhelmed by the Open Closed Principle. I&#39;ve found the most intuitive way to decide if I&#39;m making a change or extension is to think about function signatures. A change is anything that forces calling code to be updated. This could be changing the function name, swapping the order of parameters, or adding a non-default parameter. Any code that calls the function would be forced to change in accordance with the new signature. An extension, on the other hand, allows for new functionality, without having to change the calling code. This could be renaming a parameter, adding a new parameter with a default value, or adding the  *arg, or  **kwargs parameters. Any code that calls the function would still work as originally written. The same rules apply to classes as well.\n  Your gut reaction is probably to add a  upload_bulk and  download_bulk functions to the  FTPClient class. Fortunately, that is also a SOLID way to handle this use case.\n class  FTPClient :  def  __init__ ( self ,  host ,  port ):  ...  # For this example the __init__ implementation is not significant  def  upload ( self ,  file : bytes ):  ...  # For this example the upload implementation is not significant  def  download ( self ,  target : str )  -&gt;  bytes :  ...  # For this example the download implementation is not significant  def  upload_bulk ( self ,  files : List [ str ]):  for  file  in  files :  self . upload ( file )  def  download_bulk ( self ,  targets : List [ str ])  -&gt;  List [ bytes ]:  files  =  []  for  target  in  targets :  files . append ( self . download ( target ))  return  files\n In this case, it&#39;s better to extend the class with functions than extend through inheritance, because a BulkFTPClient child class would have to change the function signature for download reflecting it returns a list of bytes rather than just bytes, violating the Open Closed Principle as well as Liskov&#39;s Substituitability Principle.\n  Definition: If S is a subtype of T, then objects of type T may be replaced with objects of Type S.\n  Liskov&#39;s Substituitablity Principle was the first of the SOLID design principles I learned of and the only one I learned at University. Maybe that&#39;s why this one is so intuitive to me. A plain English way of saying this is, &#34;Any child class can replace its parent class without breaking functionality.&#34;\n You may have noticed all of the FTP client classes so far have the same function signatures. That was done purposefully so they would follow Liskov&#39;s Substituitability Principle. An SFTPClient object can replace an FTPClient object and whatever code is calling  upload, or  download, is blissfully unaware.\n Another specialized case of FTP file transfers is supporting FTPS (yes FTPS and SFTP are different). Solving this can be tricky because we have choices. They are:  1. Add  upload_secure, and  download_secure functions.  2. Add a secure flag through  **kwargs.  3. Create a new class,  FTPSClient, that extends  FTPClient.\n For reasons that we will get into during the Interface Segregation, and Dependency Inversion principles the new FTPSClient class is the way to go.\n class  FTPClient :  def  __init__ ( self ,  host ,  port ):  ...  def  upload ( self ,  file : bytes ):  ...  def  download ( self ,  target : str )  -&gt;  bytes :  ... class  FTPSClient ( FTPClient ):  def  __init__ ( self ,  host ,  port ,  username ,  password ):  self . _client  =  FTPSDriver ( host ,  port ,  user = username ,  password = password )\n This is exactly the kind of edge case inheritance is meant for and following Liskov&#39;s makes for effective polymorphism. You&#39;ll note than now  FTPClient&#39;s can be replaced by an  FTPSClient or  SFTPClient. In fact, all 3 are interchangeable which brings us to interface segregation.\n    Unlike Liskov&#39;s, The Interface Segregation Principle was the last and most difficult principle for me to understand. I always equated it to the interface keyword, and most explanations for SOLID design don&#39;t do much to dispel that confusion. additionally, most guides I&#39;ve found try to break everything up into tiny interfaces most often with a single function per-interface because &#34;too many interfaces are better than too few&#34;.\n There are 2 issues here, first Python doesn&#39;t have interfaces, and second languages like C# and Java that do have interfaces, breaking them up too much always ends up with interfaces implementing interfaces which can get complex and complex is not Pythonic.\n First I want to explore the too small of interfaces problem by looking at some C# code, then we&#39;ll cover a Pythonic approach to ISP. If you agree or are just choosing to trust me that super small interfaces are not the best way to segregate your interfaces feel free to skip to the Pythonic Solution below.\n #  Warning  here  be  C #  code public  interface  ICanUpload  {  void  upload ( Byte []  file ); } public  interface  ICanDownload  {  Byte []  download (); } class  FTPClient  :  ICanUpload ,  ICanDownload  {  public  void  upload ( Byte []  file )  {  ...  }  public  Byte []  download ( string  target )  {  ...  } }\n The trouble starts when you need to specify the type of a parameter that implements both the ICanDownload and ICanUpload interfaces. The code snippet below demonstrates the problem.\n class  ReportGenerator  {  public  Byte []  doStuff ( Byte []  raw )  {  ...  }  public  void  generateReport ( /*What type should go here?*/  client )  {  raw_data  =  client . download ( &#39; client_rundown . csv &#39; );  report  =  this . doStuff ( raw_data );  client . upload ( report );  } }\n In the  generateReport function signature you either have to specify the concrete  FTPClient class as the parameter type, which violates the Dependency Inversion Principle or create an interface that implements both ICanUpload, and ICanDownload interfaces. Otherwise, an object that just implements  ICanUpload could be passed in but would fail the download call and vice-versa with an object only implementing the  ICanDownload interface. The normal answer is to create an  IFTPClient interface and let the  generateReport function depend on that.\n  That works, except we are still depending on FTP clients. What if we want to start storing our reports in S3?\n  To me, ISP is about making reasonable choices for how other developers will interface with your code. That&#39;s right it&#39;s more related to the I in API and CLI than it is the interface keyword. This is also where the &#34;Readability Counts&#34; from the Zen of Python is a driving force. A good interface will follow the semantics of the abstraction and match the terminology making the code more readable.\n Let&#39;s look at how we can add an S3Client since it has the same upload/download semantics as the  FTPClients. We want to keep the  S3Clients signature for  upload and  download consistent, but it would be nonsense for the new  S3Client to inherit from  FTPClient. After all, S3 is not a special case of FTP. What FTP and S3 do have in common is that they are file transfer protocols and these protocols often share a similar interface as seen in this example. So instead of inheriting from  FTPClient it would be better to tie these classes together with an abstract base class, the closest thing Python has to an interface.\n We create a  FileTransferClient which becomes our interface and all of our existing clients now inherit from that rather than inheriting from  FTPClient. This forces a common interface and allows us to move bulk operations into their own interface since not every file transfer protocol will support them.\n from  abc  import  ABC def  class  FileTransferClient ( ABC ):  def  upload ( self ,  file : bytes ):  pass  def  download ( self ,  target : str )  -&gt;  bytes :  pass  def  cd ( self ,  target_dir ):  pass class  BulkFileTransferClient ( ABC ):  def  upload_bulk ( self ,  files : List [ bytes ]):  pass  def  download_bulk ( self ,  targets : List [ str ]):  pass\n   Oh Man! is that good code or what. We even managed to squeeze in a  SCPClient and kept bulk actions as their own mixin. All this ties together nicely with Dependency Injection, a technique used for the Dependency Inversion Principle.\n  Definition: High-level modules should not depend on low-level modules. They should depend on abstractions and abstractions should not depend on details, rather details should depend on abstractions.\n  This is what ties it all together. Everything we&#39;ve done with the other SOLID principles was to get to a place where we are no longer dependent on a detail, the underlying file transfer protocol, being used to move files around. We can now write code around our business rules without tying them to a specific implementation. Our code satisfies both requirements of dependency inversion.\n Our high-level modules no longer need to depend on a low-level module like FTPClient, SFTPClient, or S3Client, instead, they depend on an abstraction FileTransferClient. We are depending on the abstraction of moving files not the detail of how those files are moved.\n Our abstraction FileTransferClient is not dependent on protocol specific details and instead, those details depend on how they will be used through the abstraction (i.e. that files can be uploaded or downloaded).\n  def  exchange ( client : FileTransferClient ,  to_upload : bytes ,  to_download : str )  -&gt;  bytes :  exchanger . upload ( to_upload )  return  exchanger . download ( to_download ) if  __name__  ==  &#39;__main__&#39; :  ftp  =  FTPClient ( &#39;ftp.host.com&#39; )  sftp  =  FTPSClient ( &#39;sftp.host.com&#39; ,  22 )  ftps  =  SFTPClient ( &#39;ftps.host.com&#39; ,  990 ,  &#39;ftps_user&#39; ,  &#39;P@ssw0rd1!&#39; )  s3  =  S3Client ( &#39;ftp.host.com&#39; )  scp  =  SCPClient ( &#39;ftp.host.com&#39; )  for  client  in  [ ftp ,  sftp ,  ftps ,  s3 ,  scp ]:  exchange ( client ,  b &#39;Hello&#39; ,  &#39;greeting.txt&#39; )\n  There you have it a SOLID implementation that is also very Pythonic. I&#39;m hoping you&#39;ve at least warmed up to SOLID if you hadn&#39;t before, and for those of you that are learning Python and not sure how to continue writing SOLID code this has been helpful. This, of course, was a curated example that I knew would lend itself to my argument, but in writing this I was still surprised how much changed along the way. Not every problem will fit this exact breakdown, but I&#39;ve tried to include enough reasoning behind my decisions that you can choose the most SOLID &amp; Pythonic implementation in the future.\n If you disagree or need any clarification please leave a comment or  @d3r3kdrumm0nd on Twitter.", "posttime": "2020-06-05 04:03:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u8bbe\u8ba1,guide,\u4ee3\u7801", "title": "\u7acb\u4f53\u8bbe\u8ba1\u539f\u5219\u7684Pythonic\u6307\u5357-Dev", "title_en": "A Pythonic Guide to Solid Design Principles \u2013 Dev", "transed": 1, "url": "https://dev.to/ezzy1337/a-pythonic-guide-to-solid-design-principles-4c8i", "via": "", "real_tags": ["python", "\u8bbe\u8ba1", "guide", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005189, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ebf\u4e07\u5bcc\u7fc1\u62c9\u91cc\u00b7\u82ac\u514b(Larry Fink)\u7ecf\u8425\u7684\u56fd\u9645\u6295\u8d44\u7ba1\u7406\u516c\u53f8\u8d1d\u83b1\u5fb7(BlackRock)\u5728\u7f8e\u8054\u50a8(Fed)\u6551\u52a9\u534e\u5c14\u8857\u7684\u8fc7\u7a0b\u4e2d\u53d1\u6325\u4e86\u8fc7\u5927\u7684\u4f5c\u7528\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b83\u4e5f\u4e00\u76f4\u5728\u6084\u6084\u5730\u7ba1\u7406\u7740500\u591a\u4e07\u8054\u90a6\u653f\u5e9c\u96c7\u5458\u9000\u4f11\u8ba1\u5212\u4e2d\u7684\u6570\u5343\u4ebf\u7f8e\u5143\uff0c\u4e5f\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u50a8\u84c4\u8ba1\u5212(TSP)\u3002\n\u57282007\u5e74\u81f32010\u5e74\u7684\u4e0a\u4e00\u6b21\u91d1\u878d\u5371\u673a\u671f\u95f4\uff0c\u7f8e\u8054\u50a8(Federal Reserve)\u6388\u4e88\u8d1d\u83b1\u5fb7(BlackRock)\u975e\u6295\u6807\u5408\u540c\uff0c\u8ba9\u5176\u7ba1\u7406Maiden Lane\u3001Maiden Lane II\u548cMaiden Lane III\u8fd9\u4e09\u4e2a\u9879\u76ee\u4e2d\u6301\u6709\u7684\u6709\u6bd2\u8d44\u4ea7\u3002\u8fd9\u4e09\u4e2a\u9879\u76ee\u662f\u7ebd\u7ea6\u8054\u50a8\u8bbe\u7acb\u7684\u7279\u6b8a\u76ee\u7684\u5de5\u5177(Special Purpose Vehicle)\u3002\u6885\u767b\u00b7\u83b1\u6069(Maiden Lane)\u4ece\u8d1d\u5c14\u65af\u767b(Bear Stearns)\u8d2d\u4e70\u4e86300\u4ebf\u7f8e\u5143\u7684\u6709\u6bd2\u8d44\u4ea7\uff0c\u4f5c\u4e3a\u7ebd\u7ea6\u8054\u90a6\u50a8\u5907\u94f6\u884c(New York Fed)\u8ba9\u6469\u6839\u5927\u901a(JPMorgan)\u6536\u8d2d\u8d1d\u5c14\u65af\u767b(Bear Stearns)\u4f18\u8d28\u8d44\u4ea7\u7684\u8bf1\u56e0\u3002Maiden Lane II\u4ece\u5de8\u5934\u4fdd\u9669\u516c\u53f8\u7f8e\u56fd\u56fd\u9645\u96c6\u56e2(AIG)\u8d2d\u4e70\u4e86\u62b5\u62bc\u8d37\u6b3e\u652f\u6301\u8bc1\u5238\uff0c\u4f5c\u4e3a\u5176\u5411\u534e\u5c14\u8857\u94f6\u884c\u653e\u8d37\u8bc1\u5238\u7ebe\u56f0\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002Maiden Lane III\u8d2d\u4e70\u4e86\u503a\u52a1\u62b5\u62bc\u503a\u5238(CDO)\uff0cAIG Financial Products\u5728CDO\u4e0a\u627f\u9500\u7684\u4fe1\u7528\u8fdd\u7ea6\u4e92\u6362(CDO)\u65e0\u6cd5\u5411\u534e\u5c14\u8857\u548c\u6b20\u5b83\u94b1\u7684\u5916\u56fd\u5168\u7403\u94f6\u884c\u5151\u73b0\u3002(\u56e0\u6b64\uff0c\u5bf9AIG\u7684\u6551\u52a9\u5b9e\u9645\u4e0a\u662f\u5bf9\u5927\u578b\u94f6\u884c\u7684\u6551\u52a9\u3002)\u3002\n\u5728\u4e0a\u4e00\u6b21\u91d1\u878d\u5371\u673a\u671f\u95f4\uff0c\u8d1d\u83b1\u5fb7\u4e5f\u662f\u7f8e\u8054\u50a8\u62b5\u62bc\u8d37\u6b3e\u652f\u6301\u8bc1\u5238\u8d2d\u4e70\u8ba1\u5212\u7684\u6295\u8d44\u7ecf\u7406\u4e4b\u4e00\u3002\u5b83\u8fd8\u5c31\u7f8e\u8054\u50a8\u5708\u62a4\u548c\u62c5\u4fdd\u7684\u82b1\u65d7\u96c6\u56e2(Citigroup)\u8d44\u4ea7\u6c60\u5411\u7f8e\u8054\u50a8\u63d0\u4f9b\u5efa\u8bae\u3002\u6b64\u5916\uff0c\u8054\u90a6\u653f\u5e9c\u57282008\u5e74\u653f\u5e9c\u63a5\u7ba1\u623f\u5229\u7f8e(Fannie Mae)\u548c\u623f\u5730\u7f8e(Freddie Mac)\u540e\uff0c\u8f6c\u5411\u8d1d\u83b1\u5fb7(BlackRock)\u8bc4\u4f30\u8fd9\u4e24\u5bb6\u5b9e\u4f53\u7684\u6709\u6bd2\u8d44\u4ea7\u3002\n\u4eca\u5929\uff0c\u8d1d\u83b1\u5fb7\u5728\u66f4\u591a\u7684\u975e\u6295\u6807\u5408\u540c\u4e2d\u88ab\u9009\u4e2d\uff0c\u6210\u4e3a\u7f8e\u8054\u50a8\u53f2\u65e0\u524d\u4f8b\u76847,500\u4ebf\u7f8e\u5143\u516c\u53f8\u503a\u5238\u8d2d\u4e70\u8ba1\u5212\u7684\u516c\u53f8\u503a\u5238\u548c\u516c\u53f8\u503a\u5238ETF\u7684\u552f\u4e00\u4e70\u5bb6\uff0c\u8be5\u8ba1\u5212\u5c06\u5305\u62ec\u6295\u8d44\u7ea7\u548c\u5783\u573e\u7ea7\u503a\u5238\u3002(\u7f8e\u8054\u50a8\u8868\u793a\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u5728\u8be5\u8ba1\u5212\u4e2d\u589e\u52a0\u66f4\u591a\u6295\u8d44\u7ecf\u7406\u3002)\u3002\n\u8d1d\u83b1\u5fb7(BlackRock)\u88ab\u7f8e\u8054\u50a8\u5141\u8bb8\u8d2d\u4e70\u81ea\u5df1\u7684\u516c\u53f8\u503a\u5238ETF\uff0c\u8fd9\u662f\u7f8e\u8054\u50a8\u652f\u6491\u516c\u53f8\u503a\u5238\u5e02\u573a\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002ETFGI\u57285\u670830\u65e5\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\u79f0\uff0c\u6839\u636eInstitution Investor\u5468\u4e00\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u8d1d\u83b1\u5fb7\u4ee3\u8868\u7f8e\u8054\u50a8\u201c\u57285\u670812\u65e5\u81f35\u670819\u65e5\u671f\u95f4\u8d2d\u4e70\u4e8615.8\u4ebf\u7f8e\u5143\u7684\u6295\u8d44\u7ea7\u548c\u9ad8\u6536\u76caETF\uff0c\u5176\u4e2d\u8d1d\u83b1\u5fb7\u7684iShares\u57fa\u91d1\u5360\u8be5\u671f\u95f4\u672b13.07\u4ebf\u7f8e\u5143\u5e02\u503c\u768448%.\u201d\n\u6ca1\u6709\u6295\u6807\u5408\u540c\uff0c\u4e70\u81ea\u5df1\u7684\u4ea7\u54c1\uff0c\u8fd9\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u66f4\u4ee4\u4e8b\u60c5\u96ea\u4e0a\u52a0\u971c\u7684\u662f\uff0c\u540d\u4e3aCARE Act\u7684\u523a\u6fc0\u6cd5\u6848\u62e8\u51fa4,540\u4ebf\u7f8e\u5143\u7eb3\u7a0e\u4eba\u7684\u94b1\uff0c\u6765\u6d88\u5316\u7f8e\u8054\u50a8\u8bbe\u7acb\u7684\u7ebe\u56f0\u8ba1\u5212\u4e2d\u7684\u635f\u5931\u3002\u603b\u5171\u62e8\u51fa750\u4ebf\u7f8e\u5143\uff0c\u4ee5\u5f25\u8865\u8d1d\u83b1\u5fb7\u7ba1\u7406\u7684\u516c\u53f8\u503a\u5238\u8d2d\u4e70\u8ba1\u5212\u7684\u635f\u5931\u3002\u7531\u4e8e\u8d1d\u83b1\u5fb7\u88ab\u5141\u8bb8\u4e70\u65ad\u81ea\u5df1\u7684ETF\uff0c\u8fd9\u610f\u5473\u7740\u7eb3\u7a0e\u4eba\u5c06\u627f\u62c5\u5426\u5219\u53ef\u80fd\u7ed9\u4ebf\u4e07\u5bcc\u7fc1\u62c9\u91cc\u00b7\u82ac\u514b(Larry Fink)\u7684\u516c\u53f8\u548c\u6295\u8d44\u8005\u5e26\u6765\u7684\u635f\u5931\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(Federal Reserve)\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u4fe1\u4efb\u8d1d\u83b1\u5fb7(BlackRock)\u5de8\u989d\u8d44\u91d1\u7684\u5b9e\u4f53\u3002\u622a\u81f32019\u5e7412\u670831\u65e5\uff0c\u6839\u636e\u88ab\u79f0\u4e3a\u50a8\u84c4\u50a8\u84c4\u8ba1\u5212(TSP)\u7684\u8054\u90a6\u96c7\u5458\u9000\u4f11\u8ba1\u5212\u7684\u5b98\u65b9\u62a5\u544a\uff0c\u8d1d\u83b1\u5fb7\u662f\u6240\u63d0\u4f9b\u7684\u56db\u53ea\u6295\u8d44\u57fa\u91d1\u7684\u552f\u4e00\u7ba1\u7406\u4eba\uff0c\u8fd9\u56db\u53ea\u57fa\u91d1\u603b\u8ba13345\u4ebf\u7f8e\u5143\u3002\u8fd9\u4e9b\u8ba1\u5212\u5305\u62ec\u4e00\u53ea\u516c\u53f8\u503a\u5238\u57fa\u91d1\uff1b\u4e00\u53ea\u7531\u5927\u76d8\u548c\u4e2d\u578b\u516c\u53f8\u7ec4\u6210\u7684\u80a1\u7968\u57fa\u91d1\uff1b\u4ee5\u53ca\u4e00\u53ea\u5305\u62ec\u5c0f\u76d8\u548c\u4e2d\u578b\u516c\u53f8\u7684\u80a1\u7968\u57fa\u91d1\u3002\n\u50a8\u84c4\u8ba1\u5212\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u653f\u5e9c\u8bc1\u5238\u57fa\u91d1\uff0c\u7531\u7279\u522b\u53d1\u884c\u7ed9TSP\u7684\u77ed\u671f\u975e\u5e02\u573a\u7f8e\u56fd\u56fd\u503a\u7ec4\u6210\u3002\u8be5\u57fa\u91d1\u7531\u8be5\u8ba1\u5212\u672c\u8eab\u7ba1\u7406\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cTSP\u5e94\u8be5\u662f\u4e00\u4e2a\u53d7\u4fdd\u5b88\u76d1\u7763\u7684\u8054\u90a6\u96c7\u5458\u9000\u4f11\u8ba1\u5212\uff0c\u5b83\u5141\u8bb8\u8d1d\u83b1\u5fb7\u201c\u6295\u8d44\u4e8e\u671f\u8d27\u5408\u7ea6\u548c\u5176\u4ed6\u884d\u751f\u54c1\u201d\u3002\u4f5c\u4e3a\u6295\u8d44\u7b56\u7565\u7684\u4e00\u90e8\u5206\uff0c\u884d\u751f\u5de5\u5177\u53ef\u7528\u4e8e\u4e3a\u65e5\u5e38\u6295\u8d44\u63d0\u4f9b\u6d41\u52a8\u6027\uff0c\u6216\u7528\u4e8e\u7ba1\u7406\u8d27\u5e01\u3001\u5229\u606f\u548c\u5176\u4ed6\u98ce\u9669\u655e\u53e3\u3002\u201c\u3002\n\u8fd9\u5f15\u53d1\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u8d1d\u83b1\u5fb7\u5229\u7528\u8054\u90a6\u96c7\u5458\u7684\u8d44\u91d1\u8d2d\u4e70\u9053\u743c\u65af\u5de5\u4e1a\u80a1\u7968\u5e73\u5747\u4ef7\u683c\u6307\u6570(Dow Jones Industrial Average)\u6216\u6807\u51c6\u666e\u5c14500\u6307\u6570(S&P\uff1b500)\u7684\u671f\u8d27\uff0c\u53ef\u80fd\u4f1a\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u80a1\u5e02\u8d70\u52bf\u3002\n\u8d1d\u83b1\u5fb7\u7ba1\u7406\u7740\u8bb8\u591a\u5176\u4ed6\u5dde\u548c\u8054\u90a6\u9000\u4f11\u8ba1\u5212\u7684\u6295\u8d44\uff0c\u5305\u62ec\u7530\u7eb3\u897f\u5dde\u5c71\u8c37\u7ba1\u7406\u5c40\u50a8\u84c4\u548c\u5ef6\u671f\u9000\u4f11\u8ba1\u5212\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u622a\u81f32018\u5e749\u670830\u65e5\uff0c\u8be5\u8ba1\u5212\u603b\u5171\u6301\u670926\u4ebf\u7f8e\u5143\u3002\u6839\u636eTVA\u8ba1\u52122018\u5e74\u7684\u8d22\u52a1\u62a5\u8868\uff0c\u8d1d\u83b1\u5fb7\u7ba1\u7406\u7740\u5176\u6240\u6709\u7684\u76ee\u6807\u65e5\u671f\u57fa\u91d1\uff0c\u8fd9\u4e9b\u57fa\u91d1\u201c\u4f5c\u4e3a\u53c2\u4e0e\u8005\u7684\u5408\u683c\u9ed8\u8ba4\u6295\u8d44\u9009\u62e9\u201d\u3002\n\u8d1d\u83b1\u5fb7\u8fd8\u4e3a\u5916\u56fd\u653f\u5e9c\u3001\u5916\u56fd\u5730\u65b9\u653f\u5e9c\u548c\u5916\u56fd\u592e\u884c\u7ba1\u7406\u517b\u8001\u57fa\u91d1\u3002\u6839\u636e\u4ee5\u8272\u5217\u592e\u884c\u6700\u8fd1\u63d0\u4ea4\u7ed9\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(Securities And Exchange Commission)\u7684\u4e00\u4efd\u6587\u4ef6\uff0c\u8d1d\u83b1\u5fb7\u6b63\u5728\u6295\u8d44\u5176\u7f8e\u56fd\u80a1\u7968\u6295\u8d44\u7ec4\u5408\u3002\n\u201c\u5df4\u4f26\u5468\u520a\u201d(Barron\u2018s)\u4e0a\u5468\u62a5\u9053\u79f0\uff0c\u8d1d\u83b1\u5fb7\u662f\u201c\u5fae\u8f6f\u3001\u82f9\u679c\u3001\u4e9a\u9a6c\u900a\u548c\u5b9d\u6d01(Procter&amp\uff1bGamble)\u80a1\u7968\u7684\u7b2c\u4e8c\u6216\u7b2c\u4e09\u5927\u6301\u6709\u8005\uff0c\u5728\u51e0\u4e4e\u6240\u6709\u7f8e\u56fd\u5927\u516c\u53f8\u4e2d\u90fd\u8dfb\u8eab\u524d\u4e94\u540d\u3002\u201d\u7531\u4e8e\u8d1d\u83b1\u5fb7\u5bf9\u5916\u56fd\u592e\u884c\u7684\u5f71\u54cd\u529b\u5f88\u5927\uff0c\u5176\u4e2d\u4e00\u4e9b\u592e\u884c\u4e5f\u5728\u6536\u8d2d\u5fae\u8f6f\u3001\u82f9\u679c\u548c\u4e9a\u9a6c\u900a\uff0c\u56e0\u6b64\u8d1d\u83b1\u5fb7\u5728\u8fd9\u4e9b\u516c\u53f8\u79bb\u5947\u4f30\u503c\u4e2d\u626e\u6f14\u7684\u89d2\u8272\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u88ab\u7406\u89e3\u3002\n\u6839\u636e\u8d1d\u83b1\u5fb74\u6708\u4efd\u63d0\u4ea4\u7ed9\u80a1\u4e1c\u7684\u62a5\u544a\uff0c\u622a\u81f32020\u5e743\u670831\u65e5\uff0c\u8be5\u516c\u53f8\u4ee3\u8868\u5168\u7403\u6295\u8d44\u8005\u7ba1\u7406\u7740\u201c\u7ea66.47\u4e07\u4ebf\u7f8e\u5143\u7684\u8d44\u4ea7\u201d\uff0c\u8fd9\u5927\u7ea6\u662f\u4e0a\u6b21\u91d1\u878d\u5371\u673a\u524d\u7ba1\u7406\u8d44\u4ea7\u76846\u500d\u3002\n\u8d1d\u83b1\u5fb7\u662f\u5982\u4f55\u5728\u5341\u5e74\u95f4\u6210\u4e3a\u5e9e\u7136\u5927\u7269\u7684\uff1f\u975e\u8425\u5229\u76d1\u7763\u7ec4\u7ec7\u201c\u95ee\u8d23\u8fd0\u52a8\u201d(Campaign For Accounability)\u5efa\u7acb\u4e86\u4e00\u4e2a\u201c\u8d1d\u83b1\u5fb7\u900f\u660e\u5ea6\u9879\u76ee\u201d\uff0c\u5f3a\u70c8\u8868\u660e\u8d1d\u83b1\u5fb7\u4e0e\u653f\u5e9c\u548c\u7f8e\u8054\u50a8\u5b98\u5458\u4e4b\u95f4\u5b58\u5728\u4ee4\u4eba\u4e0d\u5b89\u7684\u4eb2\u5bc6\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5b83\u62a5\u544a\u8bf4\uff0c\u201c\u6839\u636e\u4f1a\u8bae\u8bb0\u5f55\uff0c\u4ece2007\u5e74\u79cb\u5b63\u91d1\u878d\u5371\u673a\u7684\u6700\u521d\u51e0\u5929\u52302018\u5e74\u521d\uff0c\u8d1d\u83b1\u5fb7\u5df2\u7ecf\u5728\u8fd1400\u4e2a\u4e0d\u540c\u7684\u573a\u5408\u8bbf\u95ee\u4e86\u7f8e\u56fd\u7684\u653f\u5e9c\u548c\u94f6\u884c\u9ad8\u7ea7\u5b98\u5458\uff0c\u6216\u4e0e\u4ed6\u4eec\u8fdb\u884c\u4e86\u7535\u8bdd\u4ea4\u8c08\u3002\n\u201c\u8d1d\u83b1\u5fb7\u6267\u884c\u957fLarry Fink\u548c\u653f\u5e9c\u9ad8\u5b98\u4e4b\u95f4\u8d85\u8fc7220\u6b21\u4f1a\u8bae\u548c\u7535\u8bdd\uff1b\u5965\u5df4\u9a6c\u767d\u5bab\u5b98\u5458\u548c\u8d1d\u83b1\u5fb7\u9ad8\u7ba1\u4e4b\u95f4\u768498\u6b21\u4f1a\u8bae\uff1b\u8de8\u8d8a\u5e03\u4ec0\u548c\u5965\u5df4\u9a6c\u653f\u5e9c\u7684\u8d1d\u83b1\u5fb7\u9ad8\u5c42\u7ba1\u7406\u4eba\u5458\u548c\u8d22\u653f\u90e8\u957f\u4e4b\u95f4\u7684185\u6b21\u4f1a\u8bae\u548c\u7535\u8bdd\uff1b\u8d1d\u83b1\u5fb7\u548c\u7f8e\u8054\u50a8\u9ad8\u7ea7\u5b98\u5458\u4e4b\u95f4\u768437\u6b21\u4f1a\u8bae\u548c\u7535\u8bdd.\u201d\n\u8054\u7cfb\u8bb0\u5f55\u663e\u793a\uff0c\u57282007\u5e748\u670817\u65e5\u81f32007\u5e7412\u670827\u65e5\u671f\u95f4(\u5728\u7f8e\u56fd\u516c\u4f17\u77e5\u9053\u91d1\u878d\u5371\u673a\u6709\u591a\u4e25\u91cd\u4e4b\u524d)\uff0c\u62c9\u91cc\u00b7\u82ac\u514b\u4e0e\u7f8e\u56fd\u8d22\u653f\u90e8\u957f\u6c49\u514b\u00b7\u4fdd\u5c14\u68ee(Hank Paulson)\u8fdb\u884c\u4e8621\u6b21\u4ea4\u8c08-\u6bcf\u5929\u4e24\u6b21\uff0c\u591a\u6b21\u4ea4\u8c08\u3002\u4fdd\u5c14\u68ee\u662f\u9ad8\u76db(Goldman Sachs)\u7684\u524d\u8463\u4e8b\u957f\u517c\u9996\u5e2d\u6267\u884c\u5b98\u3002\u5728\u91d1\u878d\u5371\u673a\u671f\u95f4\uff0c\u82ac\u514b\u8fd8\u4e0e\u7f8e\u8054\u50a8\u4e3b\u5e2d\u672c\u00b7\u4f2f\u5357\u514b(Ben Bernanke)\u8fdb\u884c\u4e86\u591a\u6b21\u7535\u8bdd\u4ea4\u8c08\u3002\n\u6839\u636e\u73b0\u4efb\u7f8e\u8054\u50a8\u4e3b\u5e2d\u6770\u7f57\u59c6\u00b7\u9c8d\u5a01\u5c14(Jerome Powell)\u7684\u65e5\u7a0b\u8868\uff0c\u4ed6\u5728\u4eca\u5e743\u670819\u65e5\u4e0e\u62c9\u91cc\u00b7\u82ac\u514b(Larry Fink)\u8fdb\u884c\u4e8630\u5206\u949f\u7684\u4ea4\u8c08\u3002\u73b0\u5728\u8d1d\u83b1\u5fb7\u662f\u7f8e\u8054\u50a8\u91d1\u878d\u6551\u52a9\u8ba1\u5212\u7684\u4e2d\u5fc3\u9f7f\u8f6e\u3002", "note_en": "BlackRock, the international investment management firm run by billionaire Larry Fink, has played an outsized role in Federal Reserve bailouts of Wall Street. As it turns out, it\u2019s also been quietly managing hundreds of billions of dollars for more than five million federal government employees in their retirement plan, known as the Thrift Savings Plan (TSP).\n During the last financial crisis of 2007 to 2010, the Federal Reserve gave BlackRock no-bid contracts to manage the toxic assets held in three programs known as Maiden Lane, Maiden Lane II and Maiden Lane III. These were Special Purpose Vehicles set up by the New York Fed. Maiden Lane purchased $30 billion of toxic assets from Bear Stearns as an inducement by the New York Fed to get JPMorgan to purchase the good parts of Bear Stearns. Maiden Lane II purchased mortgage-backed securities from the giant insurer, AIG, as part of a program to bail out its securities lending to Wall Street banks. Maiden Lane III purchased collateralized debt obligations (CDOs) on which AIG Financial Products had written credit default swaps that it couldn\u2019t make good on to the Wall Street and foreign global banks to whom it owed the money. (Thus, the AIG bailout was actually a bailout of mega banks.)\n BlackRock was also one of the investment managers for the Fed\u2019s mortgage backed securities purchase program during the last financial crisis. It also advised the Fed on the pool of assets of Citigroup that the Fed ring-fenced and guaranteed. Additionally, the Federal government turned to BlackRock to evaluate the toxic assets of Fannie Mae and Freddie Mac after the government seized the entities in 2008.\n Today, BlackRock has been selected in more no-bid contracts to be the sole buyer of corporate bonds and corporate bond ETFs for the Fed\u2019s unprecedented $750 billion corporate bond buying program which will include both investment grade and junk-rated bonds. (The Fed has said it may add more investment managers to the program eventually.)\n BlackRock is being allowed by the Fed to buy its own corporate bond ETFs as part of the Fed program to prop up the corporate bond market. According to a report in  Institutional Investor on Monday, BlackRock, on behalf of the Fed, \u201cbought $1.58 billion in investment-grade and high-yield ETFs from May 12 to May 19, with BlackRock\u2019s iShares funds representing 48 percent of the $1.307 billion market value at the end of that period, ETFGI said in a May 30  report.\u201d\n No bid contracts and buying up your own products, what could possibly be wrong with that? To make matters even more egregious, the stimulus bill known as the CARES Act set aside $454 billion of taxpayers\u2019 money to eat the losses in the bail out programs set up by the Fed. A total of $75 billion has been allocated to eat losses in the corporate bond-buying programs being managed by BlackRock. Since BlackRock is allowed to buy up its own ETFs, this means that taxpayers will be eating losses that might otherwise accrue to billionaire Larry Fink\u2019s company and investors.\n As it turns out, the Federal Reserve is not the only entity trusting BlackRock with vast sums of money. As of December 31, 2019, according to  an official report from the federal employees\u2019 retirement plan known as the Thrift Savings Plan (TSP), BlackRock is the sole manager of the four investment funds offered, which total $334.5 billion. Those plans include a corporate bond fund; a stock fund consisting of large-cap and medium size companies; and a stock fund that includes small-cap and medium size companies.\n The Thrift Savings Plan also offers a government securities fund which consists of short-term nonmarketable U.S. Treasury securities specially issued to the TSP. That fund is managed by the plan itself.\n Noteworthy for what should be a conservatively-supervised federal employee retirement plan, the TSP allows BlackRock to \u201cinvest in futures contracts and other derivatives. As part of the investment strategies, derivative instruments may be used to provide liquidity for daily investments or to manage currency, interest, and other exposures.\u201d\n This raises the question as to what extent BlackRock might be influencing stock market moves using federal employee money to buy futures on the Dow Jones Industrial Average or S&amp;P 500.\n BlackRock manages investments for numerous other state and federal retirement plans, including a significant part of the Tennessee Valley Authority Savings and Deferral Retirement Plan which held a total of $2.6 billion as of September 30, 2018. According to the TVA plan\u2019s  2018 financial statement, BlackRock manages all of its Target Date funds which \u201cserve as the qualified default investment alternative for participants.\u201d\n BlackRock also manages pension funds  for foreign governments, foreign  local governments, and foreign central banks. According to a recent filing with the Securities and Exchange Commission by the central bank of Israel, BlackRock  is investing its U.S. stock portfolio.\n Barron\u2019s reported last week that BlackRock is \u201cthe second- or third-largest owner of stock in Microsoft, Apple, Amazon, and Procter &amp; Gamble, and among the top five in nearly every large U.S. company.\u201d Because of BlackRock\u2019s heavy influence with foreign central banks, some of which are also buying Microsoft, Apple, and Amazon, its role in the outlandish valuations of these companies may not be fully understood.\n According to BlackRock\u2019s  April report to shareholders, as of March 31, 2020 the company was managing \u201capproximately $6.47  trillion in assets on behalf of investors worldwide,\u201d which is about six times what it was managing before the last financial crisis.\n How did BlackRock become a behemoth in the span of a decade? The nonprofit watchdog group, Campaign for Accountability, has established a \u201c BlackRock Transparency Project\u201d that strongly suggests BlackRock has an untoward coziness with government and Fed officials. For example, it reports that \u201cfrom the earliest days of the financial crisis in the fall of 2007 to early 2018, BlackRock has visited or spoken by phone with senior government and banking officials in the U.S. on almost 400 different occasions according to meeting logs.\n  \u201cMore than 220 meetings and phone calls between BlackRock CEO Larry Fink and senior government officials; 98 meetings between Obama White House officials and BlackRock executives; 185 meetings and phone calls between senior BlackRock executives and Treasury Secretaries spanning the Bush and Obama Administrations; 37 meetings and phone calls between BlackRock and senior officials at the Federal Reserve.\u201d\n The  contact logs reveal that between August 17, 2007 and December 27, 2007 (before the American public knew just how severe the financial crisis was) Larry Fink conversed with U.S. Treasury Secretary Hank Paulson 21 times \u2013 twice a day on multiple occasions. Paulson was the former Chairman and CEO of Goldman Sachs. Fink also had multiple phone calls with Fed Chairman Ben Bernanke during the financial crisis.\n The current Federal Reserve Chairman, Jerome Powell, spoke for 30 minutes with Larry Fink on March 19 of this year, according to  his daily calendar. Now BlackRock is a central cog in the Fed\u2019s financial bailout plans.", "posttime": "2020-06-05 04:02:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u8054\u50a8,bailing", "title": "\u8d1d\u83b1\u5fb7\u6b63\u5728\u7528\u7f8e\u8054\u50a8\u7684\u94b1\u548c\u7eb3\u7a0e\u4eba\u5403\u4e8f\u6765\u6551\u52a9\u5176ETF", "title_en": "BlackRock Is Bailing Out Its ETFs with Fed Money and Taxpayers Eating Losses", "transed": 1, "url": "https://wallstreetonparade.com/2020/06/blackrock-is-bailing-out-its-etfs-with-fed-money-and-taxpayers-eating-losses-its-also-the-sole-manager-for-335-billion-of-federal-employees-retirement-funds/", "via": "", "real_tags": ["\u7f8e\u8054\u50a8", "bailing"]}, {"category": "", "categoryclass": "", "imagename": "e113636a761397328865bd16daeb89ae.png", "infoid": 1005188, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9996\u5c14(\u8def\u900f\u793e)-\u97e9\u56fd\u672c\u5468\u6b63\u5728\u6d4b\u8bd5\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u53cd\u5e94(QR)\u7801\u7cfb\u7edf\uff0c\u4ee5\u8bb0\u5f55\u9ad8\u5371\u5a31\u4e50\u8bbe\u65bd\u3001\u9910\u9986\u548c\u6559\u5802\u7684\u6e38\u5ba2\uff0c\u4ee5\u8ffd\u8e2a\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u5e76\u9632\u6b62\u75be\u75c5\u8fdb\u4e00\u6b65\u4f20\u64ad\u3002\n\u5f3a\u5236\u4e8c\u7ef4\u7801\u767b\u8bb0\u6e38\u5ba2\u8eab\u4efd\u7684\u51b3\u5b9a\u662f\u5728\u5f53\u5c40\u52aa\u529b\u8ffd\u8e2a\u4e0a\u6708\u75c5\u6bd2\u7206\u53d1\u4e2d\u5fc3\u7684\u591a\u5bb6\u591c\u603b\u4f1a\u548c\u9152\u5427\u7684\u4eba\u4e4b\u540e\u505a\u51fa\u7684\uff0c\u56e0\u4e3a\u624b\u5199\u6e38\u5ba2\u65e5\u5fd7\u4e0a\u7684\u8bb8\u591a\u4fe1\u606f\u88ab\u53d1\u73b0\u662f\u865a\u5047\u6216\u4e0d\u5b8c\u6574\u7684\u3002\n\u4ece6\u670810\u65e5\u5f00\u59cb\uff0c\u524d\u5f80\u591c\u603b\u4f1a\u3001\u9152\u5427\u3001\u5361\u62c9OK\u4ff1\u4e50\u90e8\u3001\u65e5\u95f4\u8fea\u65af\u79d1\u821e\u5385\u3001\u4e3e\u884c\u96c6\u4f53\u953b\u70bc\u7684\u5ba4\u5185\u5065\u8eab\u623f\u548c\u5ba4\u5185\u7ad9\u7acb\u97f3\u4e50\u5385\u7684\u6e38\u5ba2\u5c06\u88ab\u8981\u6c42\u4f7f\u7528\u591a\u79cd\u5546\u4e1a\u5e94\u7528\u4e2d\u7684\u4efb\u4f55\u4e00\u6b3e\u6765\u751f\u6210\u4e00\u6b21\u6027\u7684\u4e2a\u6027\u5316\u4e8c\u7ef4\u7801\uff0c\u53ef\u4ee5\u5728\u95e8\u53e3\u626b\u63cf\u3002\n\u5730\u65b9\u653f\u5e9c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5176\u4ed6\u9ad8\u98ce\u9669\u8bbe\u65bd\uff0c\u5982\u56fe\u4e66\u9986\u3001\u533b\u9662\u3001\u9910\u9986\u6216\u6559\u5802\u3002\n\u6839\u636e\u97e9\u56fd\u4fdd\u5065\u798f\u5229\u90e8\u7684\u8bf4\u6cd5\uff0c\u8be5\u4eba\u7684\u4fe1\u606f\u5c06\u88ab\u8bb0\u5f55\u5728\u793e\u4f1a\u4fdd\u969c\u4fe1\u606f\u670d\u52a1(Social Security Information Service)\u4fdd\u5b58\u7684\u6570\u636e\u5e93\u4e2d\u56db\u5468\uff0c\u7136\u540e\u88ab\u81ea\u52a8\u5220\u9664\u3002\n\u5728\u65b0\u7cfb\u7edf\u63a8\u51fa\u4e4b\u524d\uff0c\u8be5\u90e8\u6b63\u572817\u4e2a\u8bbe\u65bd\u4e2d\u6d4b\u8bd5\u8be5\u7cfb\u7edf\uff0c\u5305\u62ec\u5a31\u4e50\u573a\u6240\u3001\u6559\u5802\u3001\u56fe\u4e66\u9986\u3001\u9910\u9986\u548c\u4e00\u5bb6\u533b\u9662\u3002\n\u5728\u591c\u603b\u4f1a\u7206\u53d1\u540e\uff0c\u4e00\u4e9b\u5730\u65b9\u653f\u5e9c\u5df2\u7ecf\u5b9e\u65bd\u4e86\u7c7b\u4f3c\u7684\u4e8c\u7ef4\u7801\u8981\u6c42\uff0c\u5bfc\u81f4\u81f3\u5c11270\u4f8b\u75c5\u4f8b\uff0c\u5e76\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u7b2c\u4e8c\u6ce2\u611f\u67d3\u7684\u62c5\u5fe7\u3002\n\u636e\u5730\u533a\u529e\u516c\u5ba4\u79f0\uff0c\u9996\u90fd\u9996\u5c14\u7684\u57ce\u4e1c\u533a\u5728172\u4e2a\u8bbe\u65bd\u4e2d\u5efa\u7acb\u4e86\u4e8c\u7ef4\u7801\u7cfb\u7edf\u3002\n\u201c\u6211\u8ba4\u4e3a\u987e\u5ba2\u611f\u89c9\u66f4\u5b89\u5168\uff0c\u56e0\u4e3a\u4e2a\u4eba\u4fe1\u606f\u662f\u5728\u653f\u5e9c\u7cfb\u7edf\u7684\u63a7\u5236\u4e0b\u7ba1\u7406\u7684\uff0c\u800c\u4e0d\u662f\u7531\u6211\u4eec\u5355\u72ec\u7ba1\u7406\uff0c\u201d\u5728\u57ce\u4e1c\u533a\u7ecf\u8425\u4e00\u5bb6\u7f51\u5427\u7684Cheon Min-woo\u8bf4\u3002\n19\u5c81\u7684\u5927\u5b66\u751f\u7533\u8bfa\u4e9a(Shin No-ah\uff0c\u97f3\u8bd1)\u6b63\u5728\u5149\u987e\u7f51\u5427\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u5f88\u65b9\u4fbf\uff0c\u503c\u5f97\u727a\u7272\u9690\u79c1\u3002\n\u201c\u81f3\u4e8e\u4fb5\u72af\u79c1\u9690\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u63d0\u4f9b\u624b\u673a\u53f7\u7801\uff0c\u6240\u4ee5\u653f\u5e9c\u8ffd\u8e2a\u51a0\u72b6\u75c5\u6bd2\u4e2a\u6848\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u201d", "note_en": "SEOUL (Reuters) - South Korea is testing a new quick response (QR) code system this week to log visitors at high-risk entertainment facilities, restaurants and churches in a bid to track coronavirus cases and prevent further spread of the disease.\n The decision to mandate QR codes to register visitors\u2019 identities came after authorities struggled to trace people who had visited a number of nightclubs and bars at the centre of a virus outbreak last month after much of the information on handwritten visitor logs was found to be false or incomplete.\n Starting June 10, visitors to nightclubs, bars, karaoke clubs, daytime discos, indoor gyms that hold group exercises, and indoor standing concert halls, will be required to use any of a number of commercially available apps to generate a one-time, personalized QR code that can be scanned at the door.\n Local governments may also designate other high-risk facilities such as libraries, hospitals, restaurants or churches.\n The person\u2019s information will be logged in a database kept by the Social Security Information Service for four weeks, before it is automatically deleted, according to South Korea\u2019s Ministry of Health and Welfare.\n Ahead of the rollout of the new system, the ministry is testing the system at 17 facilities, including entertainment spots, churches, libraries, restaurants and a hospital.\n Some local governments have already implemented similar QR requirements after the nightclub outbreak, which led to at least 270 cases and raised fears of a second wave of infections.\n Seongdong-gu, a district in the capital city of Seoul, established QR code systems at 172 facilities, according to the district office.\n \u201cI think customers feel safer as personal information is managed under the control of a government system, not individually by us,\u201d said Cheon Min-woo, who manages an internet cafe in Seongdong-gu.\n Shin No-ah, a 19-year-old university student who was visiting the internet cafe, said the system was convenient and it was worth the privacy trade-off.\n \u201cRegarding the privacy infringement issue, we just give our mobile phone number, so it is essential for government to trace coronavirus cases.\u201d", "posttime": "2020-06-05 04:02:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u591c\u603b\u4f1a,mandates", "title": "\u97e9\u56fd\u5728\u591c\u603b\u4f1a\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u540e\u5f3a\u5236\u4e8c\u7ef4\u7801\u8bb0\u5f55\u987e\u5ba2", "title_en": "S. Korea mandates QR codes to log customers after nightclub coronavirus outbreak", "transed": 1, "url": "https://www.reuters.com/article/us-health-coronavirus-southkorea-qr-code/south-korea-mandates-qr-codes-to-log-customers-after-nightclub-coronavirus-outbreak-idUSKBN23907E", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u591c\u603b\u4f1a", "mandates"]}, {"category": "", "categoryclass": "", "imagename": "c431e7944de456e2e25e83d8329d150c.jpg", "infoid": 1005187, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0c\u6211\u88ab\u9080\u8bf7\u62c5\u4efb\u67d0\u79cd\u5f62\u5f0f\u7684\u5927\u4f7f-\u4ece\u8def\u7531\u5668\u4f9b\u5e94\u5546\u548c\u786c\u4ef6\u7684\u4e16\u754c\uff0c\u5230\u534f\u8bae\u8bbe\u8ba1\u5e08\u548c\u8f6f\u4ef6\u7684\u4e16\u754c-\u81f3\u5c11\u90e8\u5206\u539f\u56e0\u662f\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u5728\u786c\u4ef6\u4e16\u754c\u505a\u4e86\u5f88\u591a\u5e74\u7684\u534f\u8bae\u4e13\u5bb6\u3002\n\u6211\u6ca1\u6709\u62ff\u51fa\u770b\u4f3c\u5408\u7406\u7684\u501f\u53e3\uff0c\u5bfc\u81f4\u5728IETF 94\u4e3e\u884c\u7684IEPG\u4f1a\u8bae\u4e0a\u8fdb\u884c\u4e86\u4e00\u6b21\u7b80\u77ed\u7684\u6f14\u8bb2\uff0c\u540e\u6765\u53c8\u53c2\u52a0\u4e86IETF 104\u7684\u4e00\u6b21\u6280\u672f\u6df1\u5ea6\u6f5c\u6c34\u3002\u6700\u8fd1\uff0c\u6211\u88ab\u8981\u6c42\u5c06\u8fd9\u4e9b\u60f3\u6cd5\u5199\u6210\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u5e76\u653e\u5927\u4e0eIPv6\u76f8\u5173\u7684\u8003\u8651\u56e0\u7d20\u3002\u8fd9\u5c31\u662f\u90a3\u4e2a\u5e16\u5b50\u3002\n\u6211\u4eec\u5c06\u4e3b\u8981\u8ba8\u8bba\u8f6c\u53d1\u786c\u4ef6\u53ca\u5176\u4e0e\u7f51\u7edc\u5c42\u7684\u5173\u7cfb\uff0c\u4f46\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u60f3\u4ece\u8def\u7531\u5668\u7684\u5361\u901a\u8349\u56fe\u5f00\u59cb\u3002\u6211\u4eec\u5c06\u8003\u8651\u4f7f\u7528\u54ea\u4e9b\u7c7b\u522b\u7684\u5904\u7406\u5668\u548c\u8bbe\u8ba1\u6765\u8f6c\u53d1\u6570\u636e\u5305\uff0c\u7136\u540e\u5c06\u91cd\u70b9\u653e\u5728\u5176\u4e2d\u4e00\u79cd\u5904\u7406\u5668\u548c\u8bbe\u8ba1\u4e0a\uff0c\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5176\u4f18\u70b9\u548c\u5c40\u9650\u6027\uff0c\u6700\u540e\u8003\u8651\u5176\u5bf9\u7f51\u7edc\u5c42\u534f\u8bae(\u5c24\u5176\u662fIPv6)\u7684\u5f71\u54cd\u3002\n\u4e00\u4e2a\u4e0d\u8a00\u800c\u55bb\u7684\u4e8b\u5b9e\u662f\uff0c\u5728\u8ba1\u7b97\u9886\u57df\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u901a\u7528\u8ba1\u7b97\u673a\uff0c\u4f46\u5f53\u60a8\u9700\u8981\u5927\u89c4\u6a21\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u65f6\uff0c\u60a8\u4f1a\u6c42\u52a9\u4e8e\u4e13\u95e8\u6784\u5efa\u7684\u786c\u4ef6\u3002\u8fd9\u53ef\u80fd\u662f\u51fa\u4e8e\u6210\u672c\u3001\u6027\u80fd\u6216\u4e24\u8005\u517c\u800c\u6709\u4e4b\u7684\u539f\u56e0\u3002\n\u4f8b\u5982\u663e\u5361\uff0c\u4e0d\u8d77\u773c\u7684\u56fe\u5f62\u5361\u5df2\u7ecf\u6210\u957f\u4e3a\u56fe\u5f62\u5904\u7406\u5668\uff0c\u6570\u636e\u4e2d\u5fc3\u670d\u52a1\u5668\uff0c\u5b83\u5265\u79bb\u4e86\u53f0\u5f0f\u673a\u6240\u9700\u7684\u4fbf\u5229\u8bbe\u65bd\uff0c\u4f46\u8fd9\u53ea\u4f1a\u7ed9\u6570\u636e\u4e2d\u5fc3\u64cd\u4f5c\u5458\u5e26\u6765\u989d\u5916\u7684\u6210\u672c\u3001\u70ed\u91cf\u3001\u4f53\u79ef\u3001\u6545\u969c\u70b9\u548c\u2026\u8d1f\u62c5\u3002\u8def\u7531\u5668\u3002\n\u5728\u901a\u7528\u548c\u4e13\u7528\u4e4b\u95f4\u7684\u6700\u4f73\u4f4d\u7f6e\u4e5f\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u8fd9\u4e00\u70b9\u4e5f\u662f\u771f\u5b9e\u7684\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8003\u8651\u4f7f\u7528\u7279\u5236\u7684\u7845\u7247\u8fdb\u884c\u8f6c\u53d1\u7684\u8def\u7531\u5668\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u901a\u7528\u5904\u7406\u5668\u3002\n\u5f53\u6211\u5f00\u59cb\u4ece\u4e8b\u8fd9\u9879\u4e1a\u52a1\u65f6\uff0c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f\u4f7f\u7528\u901a\u7528\u5904\u7406\u5668(68000\uff0c\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u751a\u81f3IBM RT PC--\u201c4MIP\uff0c\u5145\u8db3\u7684CPU\uff01\u201d)\u8f6c\u53d1\u7684\u3002\u6c38\u8fdc\u94ed\u523b\u5728\u6211\u7684\u8bb0\u5fc6\u4e2d\uff0c\u5c3d\u7ba1\u6f14\u8bb2\u8005\u7684\u540d\u5b57\u5c06\u4fdd\u6301\u4e0d\u53d8)\u3002\u7136\u800c\uff0c\u5728\u51e0\u5e74\u5185\uff0c\u6211\u4eec\u5f00\u59cb\u770b\u5230\u7b2c\u4e00\u4e2a\u5b9a\u5236\u7684\u8f6c\u53d1\u82af\u7247\uff0c\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u8f6c\u53d1\u786c\u4ef6\u751f\u6001\u7cfb\u7edf\uff0c\u5b83\u4eec\u7684\u4ef7\u4f4d\u4e0d\u540c\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u7f51\u7edc\u5229\u57fa\u5e02\u573a\uff1b\u5176\u4e2d\u4e00\u4e9b\u662f\u5b9a\u5236\u7684\uff0c\u5c3d\u7ba1\u8d8a\u6765\u8d8a\u591a\u7684\u662f\u5546\u7528\u7845\u3002\u6211\u4e0d\u6253\u7b97\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e00\u79cd\u53d8\u4f53\uff0c\u751a\u81f3\u4e0d\u6253\u7b97\u5217\u4e3e\u5b83\u4eec\uff1b\u6211\u4eec\u5728\u8fd9\u91cc\u8981\u505a\u7684\u662f\u4e00\u4e2a\u5177\u6709\u4ee3\u8868\u6027\u7684\u6982\u8ff0\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u63a7\u5236\u5e73\u9762\u548c\u8f6c\u53d1\u5e73\u9762\uff0c\u8f6c\u53d1\u5e73\u9762\u88ab\u7ec6\u5206\u4e3a\u7528\u4e8e\u5236\u5b9a\u548c\u6267\u884c\u8f6c\u53d1\u51b3\u7b56\u7684\u903b\u8f91(\u5728Juniper\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u6570\u636e\u5305\u8f6c\u53d1\u5f15\u64ce\u6216PFE)\u4ee5\u53ca\u51e0\u4e2aPFE\u4e4b\u95f4\u7684\u4e92\u8fde(\u901a\u5e38\u79f0\u4e3a\u4ea4\u6362\u77e9\u9635)\u3002\n\u8f83\u5c0f\u7684\u8def\u7531\u5668\u53ef\u80fd\u53ea\u6709\u4e00\u4e2aPFE\uff0c\u6216\u8005\u53ef\u80fd\u5b8c\u5168\u8df3\u8fc7\u7ed3\u6784\u90e8\u5206\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5361\u901a\u8def\u7531\u5668\uff0c\u6240\u4ee5\u6211\u4e0d\u62c5\u5fc3\u5982\u4f55\u5b9e\u9645\u8fde\u63a5\u5230\u7269\u7406\u4ecb\u8d28\u8fd9\u4e00\u81f3\u5173\u91cd\u8981\u7684\u56e0\u7d20\u3002\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u8fd9\u4e9b\u7b80\u5316\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728PFE\u90e8\u5206\u3002\n\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u770b\u770b\u63a7\u5236\u5e73\u9762(\u6211\u6ca1\u529e\u6cd5\uff0c\u6211\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u63a7\u5236\u5e73\u9762\u4e0a\u5de5\u4f5c)\u3002\u5b83\u901a\u5e38\u7531\u4e24\u4e2a\u901a\u7528\u5904\u7406\u5668\u7ec4\u6210\uff0c\u5982\u679c\u7cfb\u7edf\u662f\u5728\u6ca1\u6709\u5197\u4f59\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u7684\uff0c\u5219\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\u3002\u5b83\u4eec\u5728\u6211\u4eec\u7684\u6f2b\u753b\u4e2d\u88ab\u6807\u8bb0\u4e3a\u201c\u8def\u7531\u5f15\u64ce\u201d\uff0c\u6216RE(\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4e0d\u540c\u7684\u4f9b\u5e94\u5546\u5bf9\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u79f0\u547c\uff0c\u4f46\u6bcf\u4e2a\u4eba\u90fd\u6709\u67d0\u79cd\u63a7\u5236\u5e73\u9762\u5904\u7406\u5668)\u3002\u5b83\u4eec\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8fde\u63a5\u5230\u8f6c\u53d1\u786c\u4ef6\uff0c\u901a\u5e38\u901a\u8fc7\u4ee5\u592a\u7f51(\u8fd9\u662f\u6807\u6709\u201c\u80cc\u677f\u201d\u7684\u76d2\u5b50\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5b83\u4e0d\u662f\u4e92\u8fde\u7ebf\u5361\u7684\u4ea4\u6362\u77e9\u9635)\u3002\n\u5728\u8f6c\u53d1\u5e73\u9762\u4e00\u4fa7(\u6807\u8bb0\u4e3a\u2018Line Card\u2019\u7684\u76d2\u5b50\u5806\u6808)\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5d4c\u5165\u5f0f\u63a7\u5236\u5904\u7406\u5668(\u53e6\u4e00\u4e2a\u901a\u7528\u5904\u7406\u5668)\u96c6\u5408\uff0c\u7ba1\u7406\u4e00\u4e2a\u6216\u591a\u4e2aPFE\u3002\nRE\u4e0a\u7684CPU\u8fd0\u884c\u8def\u7531\u534f\u8bae\u3001\u7ba1\u7406\u534f\u8bae\u3001\u7528\u6237\u754c\u9762\u7b49\u3002\u5b83\u4eec\u662f\u8def\u7531\u5668\u4e2d\u6700\u91cd\u7684\u5904\u7406\u5668\u3002\u5b83\u4eec\u751a\u81f3\u53ef\u80fd\u548c\u4e00\u53f0\u5178\u578b\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u7684CPU\u4e00\u6837\u5f3a\u5927\uff01\u6216\u8005\u4e0d\u662f\uff0c\u51fa\u4e8e\u5404\u79cd\u539f\u56e0-\u7b14\u8bb0\u672c\u7535\u8111\u5236\u9020\u5546\u6ca1\u6709\u8def\u7531\u5668\u7684\u76f8\u540c\u8ba4\u8bc1\u8981\u6c42\uff0c\u6b64\u5916\uff0c\u8def\u7531\u5668\u7684\u5de5\u4f5c\u6700\u7ec8\u662f\u4f20\u8f93\u6570\u636e\u5305\u3002\n\u534f\u8bae\u662f\u4e8f\u635f\u7684\u9886\u5bfc\u8005\uff0c\u6ca1\u6709\u4eba\u901a\u8fc7\u8fd0\u884c\u534f\u8bae\u8d5a\u94b1\u3002\u673a\u7bb1\u4e2d\u5360\u7528\u7684\u6bcf\u7acb\u65b9\u5398\u7c73\u4f53\u79ef\u3001\u63a7\u5236\u5e73\u9762\u6d88\u8017\u7684\u529f\u7387\u548c\u6563\u70ed\u7684\u7126\u8033\u90fd\u662f\u521b\u6536\u63a5\u53e3\u2026\u65e0\u6cd5\u63d0\u4f9b\u7684\u3002\u56e0\u6b64\uff0c\u5236\u9020\u5546\u9762\u4e34\u7684\u538b\u529b\u662f\u4f9b\u5e94\u4e0d\u8d85\u8fc7\u6240\u9700\u7684\u6570\u91cf\u3002\u4f46\u6211\u79bb\u9898\u4e86\u3002\n\u5173\u4e8eRES\uff0c\u4e3b\u8981\u8981\u77e5\u9053\u7684\u662f\u5b83\u4eec\u4e0d\u4f1a\u8f6c\u53d1\u6570\u636e\u5305\uff1a\u5373\u4f7f\u662f\u4e2d\u5c0f\u578b\u8def\u7531\u5668\u7684\u63a5\u53e3\u901f\u5ea6\u4e0e\u8fdb\u51faRES\u7684\u53ef\u7528\u5e26\u5bbd\u4e4b\u95f4\u4e5f\u5b58\u5728\u6570\u91cf\u7ea7\u7684\u4e0d\u5339\u914d\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u5ffd\u7565\u4ed6\u4eec\u3002\n\u8ba9\u6211\u4eec\u8f7b\u800c\u6613\u4e3e\u5730\u8d8a\u8fc7\u7ed3\u6784\uff0c\u6211\u5c06\u65e0\u803b\u5730\u5c06\u5176\u8fc7\u5ea6\u7b80\u5316\u4e3a\u8fde\u63a5\u6240\u6709PFE\u7684\u65e0\u9650\u901f\u5ea6\u7684\u4e92\u8fde\uff0c\u5e76\u770b\u770bPFE\u505a\u4e86\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u505a\u3002\u5728\u6700\u9ad8\u7ea7\u522b\uff0c\u5b83\u4eec\u8f6c\u53d1\u6570\u636e\u5305\u3002\u8fd9\u9700\u8981\uff1a\nL2\u548cL3\u5206\u6790\u548c\u529f\u80fd-\u627e\u51fa\u5b83\u662f\u8c01\u7684\u6570\u636e\u5305\uff0c\u5e94\u8be5\u5982\u4f55\u5904\u7406\u5b83\uff0c\u5e94\u8be5\u628a\u5b83\u9001\u5230\u54ea\u91cc\u3002\n\u6570\u636e\u5305\u7f13\u51b2-\u5c06\u6570\u636e\u5305\u5b58\u50a8\u5728\u5185\u5b58\u4e2d(\u8fd9\u53ef\u4ee5\u662f\u7247\u4e0a\u6216\u7247\u5916)\uff0c\u76f4\u5230\u6709\u7a7a\u95f4\u4f20\u8f93\u5b83\u3002\n\u6392\u961f\u548c\u8c03\u5ea6-\u51b3\u5b9a\u54ea\u4e9b\u6570\u636e\u5305\u5e94\u8be5\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\u8fdb\u884c\uff0c\u4ee5\u5b9e\u73b0\u516c\u5e73\u6027\u548c\u5b9e\u65f6\u4f20\u8f93\u4fdd\u8bc1\u3002\u5f53\u961f\u5217\u7d2f\u79ef\u65f6\uff0c\u8def\u7531\u5668\u5fc5\u987b\u786e\u5b9a\u4fdd\u7559\u54ea\u4e9b\u6570\u636e\u5305\u548c\u4e22\u5f03\u54ea\u4e9b\u6570\u636e\u5305(\u6b64\u51b3\u7b56\u5e94\u4ee5\u652f\u6301\u4f18\u5148\u7ea7\u8f83\u9ad8\u7684\u6570\u636e\u5305\u7684\u65b9\u5f0f\u8fdb\u884c)\u3002\n\u786c\u4ef6\u5b9e\u73b0\u53ef\u4ee5\u662f\u5fae\u53ef\u7f16\u7a0b\u7684\u3001\u8868\u9a71\u52a8\u7684\u6216\u786c\u7f16\u7801\u7684\u3002\u5b83\u4eec\u53ef\u4ee5\u5b8c\u5168\u96c6\u6210\u5728\u5355\u4e2a\u82af\u7247\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u529f\u80fd\u5206\u79bb\u5230\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\u3002\n\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u8f6c\u53d1\u4f53\u7cfb\u7ed3\u6784\u7c7b\u578b(\u901a\u5e38\uff0c\u8fd9\u4e0d\u662f\u8be6\u5c3d\u7684)\uff1a\n\u4e00\u7aef\u662f\u8f6c\u53d1\u6570\u636e\u5305\u6700\u7075\u6d3b\u4f46\u6548\u7387\u6700\u4f4e\u7684\uff0c\u6211\u4eec\u6709\u901a\u7528\u5904\u7406\u5668\u3002\u5b83\u63d0\u4f9b\u4e86\u6700\u65b9\u4fbf\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5f88\u719f\u6089\u3002\u5728\u4f4e\u5bb9\u91cf\u548c(\u76f8\u5bf9)\u4f4e\u6027\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6216\u8005\u5728\u6570\u636e\u5305\u8f6c\u53d1\u53ea\u662f\u6b63\u5728\u5b8c\u6210\u7684\u5de5\u4f5c\u7684\u4e00\u5c0f\u90e8\u5206\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u4eec\u626e\u6f14\u7740\u4e0d\u540c\u7684\u89d2\u8272\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u8f6c\u53d1\u6570\u636e\u5305\u7684\u901f\u5ea6\u548c\u53ef\u7528\u4e8e\u6b64\u76ee\u7684\u7684\u7f16\u7a0b\u6a21\u578b\u65b9\u9762\u90fd\u6709\u4e86\u663e\u8457\u7684\u8fdb\u6b65\uff0c\u4f46\u5f53\u6027\u80fd\u53d7\u5230\u5a01\u80c1\u65f6\uff0c\u5b83\u4eec\u4e0d\u80fd\u4e0e\u4e13\u7528\u786c\u4ef6\u76f8\u63d0\u5e76\u8bba\u3002\n\u5f53\u4f60\u8003\u8651TANSTAAFL\u7684\u94c1\u5f8b\u65f6\uff0c\u5c31\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u4e00\u70b9\uff1a\u6ca1\u6709\u514d\u8d39\u5348\u9910\u8fd9\u56de\u4e8b\u3002\u8981\u4f7f\u901a\u7528\u5904\u7406\u5668\u5728\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4e2d\u90fd\u6709\u7528\uff0c\u5b83\u4eec\u5fc5\u987b\u5177\u6709\u6ee1\u8db3\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u8981\u6c42\u7684\u6307\u4ee4\u96c6\u548c\u7edf\u4e00\u5185\u5b58\u6a21\u578b\u3002\u8fd9\u4f1a\u8017\u8d39\u91d1\u94b1\u3001\u7a7a\u95f4\u548c\u7535\u529b\u3002\u4e3a\u4ec0\u4e48\u60a8\u8981\u5728\u8def\u7531\u5668\u4e2d\u82b1\u8d39\u7a7a\u95f4\u5728\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u6d6e\u70b9\u5355\u5143\u6216\u56fe\u5f62\u5904\u7406\u6307\u4ee4\u4e0a\uff0c\u800c\u8fd9\u4e9b\u6307\u4ee4\u6c38\u8fdc\u4e0d\u4f1a\u4f7f\u7528\uff1f\u4f60\u4e0d\u9700\u8981\u3002\u901a\u7528\u5904\u7406\u5668\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u5404\u884c\u5404\u4e1a\u7684\u9ad8\u624b\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u65e0\u80fd\u4e3a\u529b\u7684\u9ad8\u624b\u3002\n\u9891\u8c31\u7684\u5176\u4f59\u90e8\u5206\u727a\u7272\u4e86\u901a\u7528\u5904\u7406\u5668\u7684\u5404\u79cd\u7075\u6d3b\u6027\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6027\u80fd\u3002\u5f53\u628a\u620f\u505a\u5f97\u597d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u4f1a\u727a\u7272\u6211\u4eec\u672c\u6765\u4e0d\u9700\u8981\u7684\u7075\u6d3b\u6027\u3002\u8bf4\u201c\u4e0d\uff0c\u6211\u7684\u8def\u7531\u5668\u4e0d\u9700\u8981\u56fe\u5f62\u5904\u7406\u6307\u4ee4\u201d\u53ef\u80fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u66f4\u96be\uff0c\u9700\u8981\u4e00\u4e2a\u6c34\u6676\u7403\u6765\u9884\u6d4b\u672a\u6765\u3002\n\u4e3e\u4e2a\u952e(\u4e0d\u662f\u53cc\u5173\u8bed)\u4e3a\u4f8b\uff0c\u5185\u5b58\u6a21\u578b\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u3002\u901a\u7528\u5904\u7406\u5668\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u6574\u4e2a\u6570\u636e\u5305\u7684\u7f13\u51b2\u533a\uff1b\u5b83\u4eec\u53ef\u4ee5\u68c0\u67e5\u6240\u9700\u7684\u4efb\u4f55\u5b57\u8282\u3002\u66f4\u4e13\u4e1a\u7684\u8f6c\u53d1\u5904\u7406\u5668\u901a\u5e38\u53ef\u4ee5(\u975e\u5e38)\u5feb\u901f\u5730\u8bbf\u95ee\u524d1n\u4e2a\u5b57\u8282\uff0c\u4f46\u8981\u4e48\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u8981\u4e48\u652f\u4ed8\u7f5a\u6b3e\uff0c\u8fbe\u5230n+1\u6216\u66f4\u9ad8\u3002\u56e0\u6b64\uff0c\u5f53\u5904\u7406\u5668\u7ed3\u675f\u65f6\uff0c\u5fc5\u987b\u6709\u4eba\u56de\u7b54\u201c\u591a\u5c11\u5b57\u8282\u7684\u5173\u952e\u6570\u636e\u624d\u591f\uff1f\u201d\uff0c\u5373\u4f7f\u4ed6\u4eec\u786e\u5b9e\u611f\u89c9\u88ab\u95ee\u5230\u201c\u4e00\u6bb5\u5b57\u7b26\u4e32\u6709\u591a\u957f\uff1f\u201d\n\u5b83\u4eec\u6709\u5927\u91cf(ISH)\u5185\u6838\uff0c\u53ef\u80fd\u5e26\u6709\u4e13\u95e8\u7528\u4e8e\u6570\u636e\u5305\u5904\u7406\u7684\u6307\u4ee4\u96c6\u3002\u5b83\u4eec\u53ef\u4ee5\u63d0\u4f9b\u7c7b\u4f3c\u4e8e\u901a\u7528\u5904\u7406\u5668\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u6216\u8005\u66f4\u9002\u5408\u4e8e\u5206\u7ec4\u5904\u7406\u7684\u7f16\u7a0b\u6a21\u578b\u3002\u5b83\u4eec\u7684\u65f6\u949f\u901f\u5ea6\u53ef\u80fd\u8f83\u4f4e\uff0c\u5206\u652f\u9884\u6d4b\u548c\u7ebf\u7a0b\u5316\u7b49\u82b1\u54e8\u529f\u80fd\u4e5f\u8f83\u5c11\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e13\u95e8\u5904\u7406\u4e00\u79cd\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5373\u6570\u636e\u5305\u5904\u7406\uff0c\u6240\u4ee5\u8fd9\u6ca1\u95ee\u9898-\u7a7a\u95f4\u6700\u597d\u7528\u6765\u63d0\u4f9b\u66f4\u591a\u7684\u5185\u6838\u3002\n\u5bf9\u4e8e\u8def\u7531\u5668\u800c\u8a00\uff0c\u91cd\u8981\u7684\u6027\u80fd\u5e76\u4e0d\u5728\u4e8e\u60a8\u80fd\u591f\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u5b8c\u6210\u5355\u4e2a\u76f8\u5bf9\u8f83\u5927\u7684\u4f5c\u4e1a\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5b83\u662f\u6307\u8fd0\u884c\u8bb8\u591a\u5c0f\u4f5c\u4e1a\u7684\u901f\u5ea6\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4f5c\u4e1a\u90fd\u5728\u5904\u7406\u5355\u4e2a\u6570\u636e\u5305\u3002\n\u5bf9\u4e8e\u8fd9\u4e9b\uff0c\u5904\u7406\u6b65\u9aa4\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u56fa\u5b9a\u7684\uff1a\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u9636\u6bb5\uff1b\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u76f8\u540c\u7684\u65f6\u95f4\u5206\u914d\uff0c\u6bcf\u4e2a\u9636\u6bb5\u5c06\u5176\u5de5\u4f5c\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002\u5728\u4e00\u5b9a\u8303\u56f4\u5185\uff0c\u8fd9\u4e9b\u9636\u6bb5\u53ef\u4ee5\u662f\u53ef\u7f16\u7a0b\u7684\u3002\u4e0e\u901a\u7528\u5904\u7406\u5668\u76f8\u6bd4\uff0c\u5b83\u4eec\u53ef\u7f16\u7a0b\u7684\u8bcd\u6c47\u8868\u53ef\u80fd\u975e\u5e38\u4e13\u7528\uff0c\u540e\u8005\u9488\u5bf9\u73b0\u6709\u6570\u636e\u5305\u5934\u4e2d\u7684\u5b57\u6bb5\u548c\u7ed3\u6784\u8fdb\u884c\u5b9a\u5236\u3002\n\u6709\u4eba\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u6700\u4e0d\u7075\u6d3b\u7684\u5b9e\u73b0\u5c06\u7f3a\u4e4f\u7ade\u4e89\u529b\uff0c\u4f46\u5176\u6210\u672c\u3001\u80fd\u6e90\u548c\u6027\u80fd\u4f18\u52bf\u662f\u5982\u6b64\u5de8\u5927(\u4e0e\u901a\u7528\u5904\u7406\u5668\u76f8\u6bd4\uff0c\u9ad8\u8fbe\u6570\u91cf\u7ea7)\uff0c\u4ee5\u81f3\u4e8e\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u5728\u6574\u4e2a\u884c\u4e1a\u90fd\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\n\u5982\u679c\u4f60\u8981\u4e70\u4e00\u53f0\u8def\u7531\u5668\uff0c\u5bf9\u4e8e\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u4e3b\u8981\u95ee\u9898\u662f\uff1a\u5b83\u80fd\u6ee1\u8db3\u6211\u73b0\u5728\u7684\u9700\u6c42\u5417\uff1f\u8981\u82b1\u591a\u5c11\u94b1\uff1f\u5b83\u6709\u591a\u5927\uff1f\u5b83\u80fd\u6d88\u8017\u591a\u5c11\u80fd\u91cf\uff1f\u5b83\u6709\u591a\u53ef\u9760\uff1f\u201c\u5b83\u6709\u591a\u7ecf\u5f97\u8d77\u672a\u6765\u8003\u9a8c\u201d\u7684\u95ee\u9898\u53ef\u80fd\u6839\u672c\u4e0d\u4f1a\u6392\u5728\u699c\u5355\u7684\u9996\u4f4d\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1\u4f5c\u4e3a\u4e00\u4e2a\u8f6f\u4ef6\u4eba\uff0c\u6211\u8ba4\u4e3a\u4e00\u5207\u90fd\u5e94\u8be5\u662f\u6700\u5927\u9650\u5ea6\u5730\u53ef\u7f16\u7a0b\u7684\uff0c\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u5b9e\u7528\u4e3b\u4e49\u8005\uff0c\u6211\u8ba4\u4e3a\u5546\u4e1a\u73b0\u5b9e\u610f\u5473\u7740\u8fd9\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u662f\u8fd9\u6837\u7684\u3002\n\u53d1\u751f\u5728PFE\u4e2d\u7684\u8f6c\u53d1\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u5feb\u901f\u8def\u5f84\u201d\u3002\u5f53\u6570\u636e\u5305\u4e0d\u80fd\u901a\u8fc7\u5feb\u901f\u8def\u5f84\u8f6c\u53d1\u65f6\uff0c\u65e0\u8bba\u51fa\u4e8e\u4ec0\u4e48\u539f\u56e0\uff0c\u6211\u4eec\u90fd\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u4e22\u5f03\u5b83\uff0c\u6216\u8005\u5c06\u5176\u8f6c\u9001\u5230\u201c\u6162\u901f\u8def\u5f84\u201d\u8f6f\u4ef6\u8f6c\u53d1\uff0c\u53ef\u80fd\u662f\u5728\u5d4c\u5165\u5f0f\u63a7\u5236\u5904\u7406\u5668\u4e2d\u3002\n\u5bf9\u4e8e\u534f\u8bae\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6709\u5438\u5f15\u529b\u7684\u9009\u62e9\uff1a\u5076\u5c14\u51fa\u73b0\u7684\u5f02\u5e38\u6570\u636e\u5305\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u4f24\u5bb3\uff0c\u5bf9\u5427\uff1f\u5f53\u6211\u4eec\u8003\u8651\u89c4\u6a21\u65f6\uff0c\u95ee\u9898\u5c31\u4f1a\u51fa\u73b0\u3002\n\u5373\u4f7f\u63a7\u5236\u5904\u7406\u5668\u5b8c\u5168\u4e13\u7528\u4e8e\u8f6c\u53d1(\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64)\uff0c\u5b83\u4e5f\u4e0d\u592a\u53ef\u80fd\u7ef4\u6301\u4e0e\u5176\u914d\u5bf9\u7684\u786c\u4ef6\u8f6c\u53d1\u82af\u7247\u7684\u8f6c\u53d1\u901f\u7387\u76840.1%\u3002\u8bf7\u8bb0\u4f4f\uff0c\u63a7\u5236\u5904\u7406\u5668\u662f\u4e00\u4e2a\u201c\u4e8f\u635f\u9886\u5bfc\u8005\u201d\u3002\u5b83\u8db3\u591f\u5f3a\u5927\uff0c\u53ef\u4ee5\u5b8c\u6210\u7ba1\u7406\u8f6c\u53d1\u786c\u4ef6\u3001\u5f15\u5bfc\u5b83\u3001\u4e0b\u8f7d\u8f6c\u53d1\u8868\u7b49\u5de5\u4f5c\uff0c\u4f46\u662f\u5b83\u6ca1\u6709\u914d\u7f6e\u4e3a\u6570\u636e\u5305\u8f6c\u53d1\u91ce\u517d\u3002\u4e5f\u4e0d\u5e94\u8be5\u662f--\u8fd9\u662f\u8f6c\u53d1\u786c\u4ef6\u7684\u5de5\u4f5c\u3002(\u5f53\u6570\u636e\u5305\u88ab\u4f20\u9001\u5230RE\u65f6\uff0c\u7c7b\u4f3c\u7684\u6ce8\u610f\u4e8b\u9879\u4e5f\u9002\u7528\u3002)\u3002\n\u663e\u7136\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u534f\u8bae\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u548c\u53d1\u5c55\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\uff0c\u8fd9\u5bf9\u5b83\u6765\u8bf4\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u4f46\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\u597d\u6d88\u606f\u662f\uff0c\u5373\u4f7f\u662f\u6700\u57fa\u672c\u7684\u8f6c\u53d1\u5668\u4e5f\u662f\u76f8\u5f53\u53ef\u7f16\u7a0b\u7684-\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u3002\u8bc0\u7a8d\u662f\u8981\u7406\u89e3\u8fd9\u4e9b\u9650\u5236\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u4e0d\u8981\u610f\u5916\u5730\u8d8a\u8fc7\u5b83\u4eec\u3002\n\u6545\u610f\u8de8\u8d8a\u5b83\u4eec\u662f\u53e6\u4e00\u56de\u4e8b\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u8fd9\u6837\u505a--\u6709\u65f6\u4f60\u4e0d\u6253\u7834\u4e00\u4e9b\u9e21\u86cb\u5c31\u505a\u4e0d\u4e86\u714e\u86cb\u5377\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u7684\u534f\u8bae\u8981\u6c42\u5c06\u6570\u636e\u5305\u4f20\u9001\u5230\u6162\u901f\u8def\u5f84\uff0c\u800c\u60a8\u7684\u534f\u8bae\u53ef\u4ee5\u5b8c\u6210\u76f8\u540c\u7684\u5de5\u4f5c\uff0c\u4f46\u53ef\u4ee5\u4fdd\u6301\u5728\u5feb\u901f\u8def\u5f84\u4e0a\uff0c\u6211\u60f3\u6211\u77e5\u9053\u8c01\u7684\u534f\u8bae\u4f1a\u5728\u5e02\u573a\u4e0a\u83b7\u80dc\uff0c\u800c\u8fd9\u4e0d\u662f\u6211\u7684\u534f\u8bae\u3002\n\u5bf9\u4e8e\u534f\u8bae\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u6ca1\u6709\u4e07\u80fd\u7684\u6d41\u7a0b\u56fe\uff0c\u4f46\u4ee5\u4e0b\u662f\u534f\u8bae\u8bbe\u8ba1\u4eba\u5458\u5e94\u8be5\u7262\u8bb0\u7684\u4e00\u4e9b\u539f\u5219\u3002\n\u6211\u4eec\u63d0\u5230\u7684\u9650\u5236\u4e4b\u4e00\u662f\u5173\u952e\u6570\u636e\u5927\u5c0f\u3002\u8fd9\u662f\u8f6c\u53d1\u5904\u7406\u5668\u5728\u5feb\u901f\u5185\u5b58\u4e2d\u53ef\u7528\u7684\u6570\u636e\uff0c\u800c\u6570\u636e\u5305\u7684\u5176\u4f59\u90e8\u5206\u5219\u7f13\u5b58\u5728\u76f8\u5bf9\u8f83\u6162\u7684\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u5668\u65e0\u6cd5\u8bbf\u95ee\u8fd9\u4e9b\u5185\u5b58\uff0c\u6216\u8005\u9700\u8981\u4ed8\u51fa\u76f8\u5f53\u5927\u7684\u4ee3\u4ef7\u3002\u56e0\u6b64\uff0c\u8981\u7ef4\u6301\u541e\u5410\u91cf\uff0c\u8f6c\u53d1\u51b3\u7b56\u6240\u9700\u7684\u4e00\u5207\u90fd\u5fc5\u987b\u9002\u5408\u5173\u952e\u6570\u636e-L2\u6807\u5934\u3001L3\u6807\u5934(\u5305\u62ec\u4efb\u4f55\u6269\u5c55\u6807\u5934\u3001\u96a7\u9053\u6807\u5934\u7b49)\uff0c\u4ee5\u53ca\u8d1f\u8f7d\u5e73\u8861\u71b5\u6240\u9700\u7684\u4efb\u4f55\u8f83\u9ad8\u5c42\u6807\u5934\u3002\u5982\u679c\u7279\u5b9a\u5904\u7406\u5668\u7684\u5173\u952e\u6570\u636e\u662f256\u5b57\u8282\uff0c\u90a3\u4e48\u5728\u5934\u94fe\u547d\u4e2d\u5b57\u8282257\u4e4b\u524d\uff0c\u4e00\u5207\u90fd\u662f\u6b63\u5e38\u7684\u3002\n\u5c3d\u7ba1\u201c\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u201d\uff0c\u5b57\u6bb5\u5927\u5c0f\u662f\u5426\u4e3a2\u7684\u5e42\uff0c\u751a\u81f3\u5355\u8bcd\u662f\u5426\u5bf9\u9f50\u5e76\u4e0d\u91cd\u8981\u3002\n\u4e0d\u8fc7\uff0c\u5b57\u6bb5\u7684\u56fa\u5b9a\u4f4d\u7f6e\u5e76\u4e0d\u91cd\u8981\uff0c\u800c\u4e14\u603b\u6807\u5934\u957f\u5ea6\u4e3a32\u4f4d\u7684\u500d\u6570\u662f\u6709\u5e2e\u52a9\u7684\u3002\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u9010\u8df3\u89e3\u6790\u7684\u62a5\u5934\u4e2d\u7684TLV\u662f\u6602\u8d35\u7684\u3002\n\u5bf9\u4e8e\u534f\u8bae\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u5c06\u53ef\u9009\u7684TLV\u5b57\u6bb5\u6dfb\u52a0\u5230\u6240\u6709\u4e1c\u897f\u4e2d\u662f\u975e\u5e38\u8bf1\u4eba\u7684-\u8c01\u4e0d\u559c\u6b22\u9762\u5411\u672a\u6765\u7684\u5462\uff1f\u7b54\u6848\u662f\uff0c\u90a3\u4e9b\u5fc5\u987b\u68c0\u67e5\u5feb\u901f\u8def\u5f84\u4e0a\u662f\u5426\u5b58\u5728TLV\u7684\u4eba\uff0c\u4ee5\u53ca\u6f5c\u5728\u5730\u89e3\u6790\u6570\u91cf\u4e0d\u786e\u5b9a\u7684TLV\u7684\u4eba\uff0c\u5c31\u662f\u8fd9\u6837\u7684\u4eba\uff01\n\u534f\u8bae\u7684\u53e6\u4e00\u4e2a\u4e3b\u8981\u9519\u8bef\u662f\u62a5\u5934\u6ca1\u6709\u663e\u5f0f\u6307\u5b9a\u540e\u7eed\u62a5\u5934\u7684\u7c7b\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u901a\u5e38\u5728\u5f00\u59cb\u4efb\u4f55\u67e5\u627e\u4e4b\u524d\u89e3\u6790\u6570\u636e\u5305\uff0c\u5e76\u4e14\u63d2\u5165\u5230\u6b64\u89e3\u6790\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u9644\u52a0\u95f4\u63a5\u90fd\u53ef\u80fd\u4ee3\u4ef7\u9ad8\u6602\u3002\n\u7279\u522b\u662f\u5728\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u4e2d\uff0c\u5982\u679c\u62a5\u5934\u7684\u5904\u7406\u987a\u5e8f\u4e0e\u5b83\u4eec\u5728\u6570\u636e\u5305\u4e2d\u7684\u663e\u793a\u987a\u5e8f\u4e0d\u540c\uff0c\u6216\u8005\u5982\u679c\u5904\u7406\u7ed9\u5b9a\u7684\u62a5\u5934\u9700\u8981\u5f15\u7528\u4e0d\u540c\u7684\u62a5\u5934\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u6807\u5934\u5e94\u8be5\u662f\u72ec\u7acb\u7684\u3002\u901a\u5e38\uff0c\u6bcf\u4e2a\u62a5\u5934\u90fd\u5e94\u8be5\u63d0\u4f9b\u8def\u7531\u5f53\u524d\u6570\u636e\u5305\u6240\u9700\u7684\u4fe1\u606f\uff0c\u6216\u8005\u5b83\u5e94\u8be5\u63d0\u4f9b\u89e3\u91ca\u540e\u7eed\u62a5\u5934\u7684\u4e0a\u4e0b\u6587\u3002\n\u7531\u4e8e\u53ef\u80fd\u5b58\u5728\u5bf9\u73b0\u6709\u6807\u5934\u7684\u786c\u4ef6\u652f\u6301\uff0c\u56e0\u6b64\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u4ee5\u4e00\u79cd\u65b0\u9896\u7684\u65b9\u5f0f\u4f7f\u7528\u5df2\u5efa\u7acb\u7684\u6807\u5934\uff0c\u800c\u4e0d\u662f\u53d1\u660e\u65b0\u7684\u6807\u5934\u3002\u4e0d\u8fc7\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65b0\u9896\u6027\u5fc5\u987b\u7b26\u5408\u62a5\u5934\u7684\u8bed\u4e49\uff1b\u60a8\u4e0d\u80fd\u5c06\u4ee5\u524d\u7528\u4f5c(\u6bd4\u65b9\u8bf4)\u6821\u9a8c\u548c\u7684\u5b57\u6bb5\u8bf4\u201c\u54e6\uff0c\u8fd9\u73b0\u5728\u662f\u4e00\u4e2a\u5730\u5740\u201d\uff0c\u7136\u540e\u671f\u671b\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u53d6\u4e00\u4e2a\u73b0\u6709\u7684\u5730\u5740\uff0c\u5e76\u9009\u62e9\u4ee5\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u89e3\u91ca\u5b83\uff0c\u53ef\u80fd\u4f1a\u594f\u6548\u3002SR-MPLS(RFC 8660)\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\n\u7b49\u4ef7\u591a\u8def\u5f84(ECMP)\u548c\u94fe\u8def\u805a\u5408\u7ec4(LAG)\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff1b\u4e3a\u4e86\u5c06\u6d41\u5206\u914d\u7ed9ECMP\u6216LAG\u6210\u5458\uff0c\u8def\u7531\u5668\u5fc5\u987b\u80fd\u591f\u4f7f\u7528\u67d0\u4e9b\u71b5\u6e90\u6765\u8bc6\u522b\u6d41\u3002\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u627e\u5230\u8fd9\u4e9b\u71b5\u6e90\uff0c\u5e76\u4e14\u5b83\u4eec\u51fa\u73b0\u5728\u5173\u952e\u6570\u636e\u4e2d-\u5982\u679c\u5934\u90e8\u53d8\u5f97\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u71b5(\u4f8b\u5982\uff0c\u6765\u81ea\u4f20\u8f93\u5934\u90e8)\u88ab\u63a8\u5165\u6570\u636e\u5305\u4f53\u7f13\u51b2\u4e2d\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u4fdd\u6301\u71b5\u6e90\u9760\u8fd1\u6570\u636e\u5305\u7684\u9876\u90e8\u5e76\u4e14\u5f7c\u6b64\u9760\u8fd1(\u4ece\u5b57\u9762\u4e0a\u7684\u4f4d\u6570\u548c\u534f\u8bae\u6808\u7684\u89d2\u5ea6)\u90fd\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\n\u8003\u8651\u4e00\u4e9b\u504f\u79bb\u8fd9\u4e9b\u6307\u5bfc\u539f\u5219\u7684\u5b9e\u9645\u793a\u4f8b\uff0c\u591a\u534f\u8bae\u6807\u7b7e\u4ea4\u6362(MPLS)\u5e76\u6ca1\u6709\u6307\u5b9aMPLS\u5806\u6808\u4e4b\u5916\u7684\u62a5\u5934\u7c7b\u578b\uff0c\u5b83\u5fc5\u987b\u57fa\u4e8e\u63a7\u5236\u5e73\u9762\u968f\u6807\u7b7e\u503c\u4e00\u8d77\u63d0\u4f9b\u7684\u4fe1\u606f\u8fdb\u884c\u63a8\u65ad\u3002BER(RFC 8279)\u53ef\u4ee5\u751f\u6210\u6700\u591a524\u5b57\u8282\u7684\u62a5\u5934\u3002IPv6\u6bb5\u8def\u7531\u62a5\u5934(RFC 8754)\u643a\u5e26\u53ef\u9009\u7684TLV\uff0c\u5904\u7406\u5668\u5fc5\u987b\u51c6\u5907\u597d\u89e3\u6790\u8fd9\u4e9bTLV\uff0c\u5c3d\u7ba1\u81f3\u5c11\u5c06\u5b83\u4eec\u653e\u5728\u62a5\u5934\u7684\u672b\u5c3e\u662f\u8db3\u591f\u793c\u8c8c\u7684\u3002SRv6(RFC 8402)\u8fd8\u5728IPv6\u5730\u5740\u4e2d\u5d4c\u5165\u201c\u6307\u4ee4\u201d\uff1b\u8fd9\u4e9b\u6307\u4ee4\u7684\u89e3\u6790\u53d7\u63a7\u5236\u5e73\u9762\u4fe1\u606f\u7684\u5f71\u54cd\uff0c\u5e76\u5f71\u54cd\u540e\u7eed\u62a5\u5934\u7684\u5904\u7406\u3002\nMPLS\u63d2\u56fe\u8fd8\u5e94\u8be5\u7528\u6765\u8bc1\u660e\uff0c\u5373\u4f7f\u534f\u8bae\u8bbe\u8ba1\u5bf9\u4e8e\u7845\u6765\u8bf4\u4e0d\u662f\u7406\u60f3\u7684\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u53d6\u5f97\u5de8\u5927\u7684\u6210\u529f\uff01\n\u4e0a\u9762\u7684\u5206\u6790\u662f\u4ece\u4e00\u4e2a\u89d2\u5ea6\u51fa\u53d1\u7684\uff0c\u5373\u5728\u7f51\u7edc\u6838\u5fc3\u6216\u6838\u5fc3\u9644\u8fd1\u7684\u9ad8\u6027\u80fd\u8def\u7531\u5668\uff0c\u4e5f\u5c31\u662f\u5927\u89c4\u6a21\u5730\u4f20\u8f93\u5927\u91cf\u6570\u636e\u5305\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u6574\u4e2a\u4e16\u754c\u90fd\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u6b63\u5982\u90a3\u9996\u53e4\u8001\u7684\u5c0f\u66f2\u6240\u8bf4\u7684\u90a3\u6837\uff0c\n\u4e3b\u673a\u662f\u4ece\u4e1c\u6d77\u5cb8\u5230\u897f\u6d77\u5cb8\u7684\u4e3b\u673a\uff0c\u6ca1\u6709\u4eba\u4e0e\u9760\u8fd1\u7684\u4e3b\u673a\u4ea4\u8c08\uff0c\u9664\u975e\u4e0d\u9760\u8fd1\u7684\u4e3b\u673a\u5fd9\u3001\u6302\u8d77\u6216\u6b7b\u4e86\u3002\n\u8fd9\u91cc\u7684\u91cd\u70b9\u662f\uff0c\u9664\u975e\u6709\u67d0\u79cd\u539f\u56e0\u53ef\u4ee5\u4fdd\u8bc1\u534f\u8bae\u6216\u6269\u5c55\u53ea\u5728\u6709\u9650\u7684\u672c\u5730\u73af\u5883\u4e2d\u90e8\u7f72\uff0c\u5426\u5219\u660e\u667a\u7684\u505a\u6cd5\u662f\u5047\u8bbe\u5b83\u5c06\u5728BIG-I\u4e92\u8054\u7f51\u4e0a\u8fd0\u884c\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u5b83\u7684\u6570\u636e\u5305\u5c06\u7531\u6211\u4eec\u8c08\u8bba\u7684\u90a3\u4e9b\u9ad8\u6027\u80fd\u8def\u7531\u5668\u6765\u5904\u7406\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u5e76\u4e0d\u662f\u6bcf\u53f0\u8def\u7531\u5668\u90fd\u662f\u6838\u5fc3\u8def\u7531\u5668\uff0c\u5176\u4ed6\u89d2\u8272\u7684\u8def\u7531\u5668\u53ef\u80fd\u4f1a\u82b1\u8d39\u66f4\u591a\u8d44\u6e90\u6765\u63d0\u4f9b\u529f\u80fd(\u4f8b\u5982\uff0c\u96a7\u9053\u7ec8\u6b62\u6216\u52a0\u5bc6)\u3002\u8fd9\u5f88\u597d\uff0c\u53ea\u8981\u6709\u95ee\u9898\u7684\u7279\u6027\u7684\u67b6\u6784\u4f7f\u5f97\u5b83\u4eec\u53ea\u5728\u63d0\u4f9b\u65f6\u4ea7\u751f\u6210\u672c\u5373\u53ef\u3002\n\u5728\u67d0\u4e9b\u65b9\u9762\uff0cIPv6\u88ab\u8bbe\u8ba1\u4e3a\u6bd4IPv4\u66f4\u9002\u5408\u5904\u7406\u5668\u7684\u534f\u8bae\uff1b\u7279\u522b\u662f\uff0cIPv4\u62a5\u5934\u662f\u53ef\u53d8\u957f\u5ea6\u7684\uff0c\u800cIPv6\u62a5\u5934\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\u3002\u90a3\u5f88\u6709\u5e2e\u52a9\u3002\u5b83\u8fd8\u7ec4\u7ec7\u5176\u9009\u9879\uff0c\u4f7f\u5f97\u8f6c\u63a5\u8def\u7531\u5668\u751a\u81f3\u4e0d\u9700\u8981\u5c1d\u8bd5\u89e3\u6790\u4ec5\u4e0e\u76ee\u7684\u8282\u70b9\u76f8\u5173\u7684\u9009\u9879\u3002\n\u5728\u5176\u4ed6\u65b9\u9762\uff0cIPv6\u5e26\u6765\u4e86\u6bd4IPv4\u66f4\u5927\u7684\u6311\u6218\uff1a\u7531\u4e8e\u5176\u66f4\u5927\u7684\u53ef\u6269\u5c55\u6027\uff0cIPv6\u6709\u66f4\u591a\u7684\u9009\u62e9\u3002IPv6\u62a5\u5934\u94fe\u53ef\u80fd\u4f1a\u53d8\u5f97\u76f8\u5f53\u5927\uff0c\u53ef\u4ee5\u60f3\u8c61\uff0c\u5f53\u62a5\u5934\u8d85\u51fa\u7528\u4e8e\u8f6c\u53d1\u5f15\u64ce\u5b58\u50a8\u5b83\u4eec\u7684\u5feb\u901f\u5b58\u50a8\u5668\u7684\u5bb9\u91cf\u65f6\uff0c\u8db3\u4ee5\u89e6\u53d1\u4e0a\u8ff0\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u5bf9\u4e8e\u4e00\u4e9b\u5728\u5176\u82af\u7247\u8bbe\u8ba1\u4e2d\u6ca1\u6709\u5c06IPv6\u4f5c\u4e3a\u4e00\u7b49\u516c\u6c11\u7684\u65e7\u8bbe\u5907\uff0c\u4efb\u4f55\u7c7b\u578b\u7684\u6269\u5c55\u62a5\u5934\u90fd\u662f\u6709\u95ee\u9898\u7684\uff0c\u5b83\u4eec\u4f1a\u5c06\u6570\u636e\u5305\u79fb\u51fa\u5feb\u901f\u8def\u5f84\uff0c\u6216\u8005\u4ee5\u5176\u4ed6\u65b9\u5f0f\u964d\u4f4e\u901a\u8fc7\u8f6c\u53d1\u5668\u7684\u6570\u636e\u5305\u901f\u7387\u3002\n(\u8fc7\u53bb\u51e0\u5e74\u5236\u9020\u7684)\u8f83\u65b0\u7684\u8bbe\u5907\u6709\u53ef\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5373\u4f7f\u82af\u7247\u80fd\u591f\u5de5\u4f5c\uff0c\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u5fae\u7801\u53ef\u80fd\u4f1a\u6ede\u540e\uff1b\u56e0\u6b64\uff0c\u5177\u6709\u6269\u5c55\u62a5\u5934\u7684IPv6\u6570\u636e\u5305\u7684\u541e\u5410\u91cf\u4ecd\u7136\u5f88\u6e3a\u832b\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898--\u5047\u8bbe\u6211\u4eec\u5bf9\u534f\u8bae\u5f15\u5165\u4e00\u4e2a\u6269\u5c55\u3002\u7845\u7247\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u8d76\u4e0a\uff1f\n\u7b54\u6848\u6709\u70b9\u68d8\u624b\uff0c\u4f46\u8fc7\u4e8e\u7b80\u5355\u5316\u7684\u731c\u6d4b\u662f\u201c\u4e5f\u8bb8\u662f\u51e0\u5e74\uff1f\u201d\n\u8fd9\u662f\u8fc7\u5ea6\u7b80\u5316\u7684\u539f\u56e0\u6709\u5f88\u591a\u56e0\u7d20\uff0c\u5305\u62ec\u73b0\u6709\u7684\u7845\u7247\u53ef\u80fd\u5df2\u7ecf\u8db3\u591f\u7075\u6d3b\uff0c\u53ef\u4ee5\u7528\u65b0\u7684\u5fae\u7801\u652f\u6301\u6211\u4eec\u7684\u6269\u5c55\uff0c\u8fd8\u6709\u9e21\u548c\u86cb\u7684\u8003\u8651\uff0c\u4f60\u7684\u6269\u5c55\u53ef\u80fd\u9700\u8981\u7845\u7247\u652f\u6301\u624d\u80fd\u6d41\u884c\uff0c\u4f46\u7845\u7247\u53ef\u80fd\u4e0d\u60f3\u652f\u6301\u5b83\uff0c\u9664\u975e\u5b83\u53d8\u5f97\u6d41\u884c\u8d77\u6765\u3002\u6b63\u662f\u51fa\u4e8e\u540e\u4e00\u4e2a\u539f\u56e0\uff0c\u5e94\u8be5\u4ed4\u7ec6\u8003\u8651\u524d\u9762\u90e8\u5206\u4e2d\u7684\u6307\u5bfc\u65b9\u9488\u3002\n\u6b63\u5982\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u7684\uff0c\u4e00\u65e6\u7845\u88ab\u70d8\u7119\uff0c\u5c3d\u7ba1\u8def\u7531\u5668\u7684\u80fd\u529b\u4e0d\u4e00\u5b9a\u662f\u677f\u4e0a\u9489\u9489\u7684\uff0c\u4f46\u5b83\u4eec\u81f3\u5c11\u662f\u624e\u6839\u5728\u4e00\u4e9b\u76f8\u5f53\u575a\u56fa\u7684\u6ce5\u571f\u4e2d\uff0c\u6240\u4ee5\u5f15\u5165\u4e00\u79cd\u5168\u65b0\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u662f\u4e00\u4e2a\u4ee4\u4eba\u671b\u800c\u751f\u754f\u7684\u524d\u666f\u3002\n\u5bf9IPv6\u6765\u8bf4\uff0c\u597d\u6d88\u606f\u662f\u5b83\u7684\u8bbe\u8ba1\u662f\u5408\u7406\u7684\uff1a\u5728\u7ebf\u901f\u4e0b\u5904\u7406\u5b83\u6ca1\u6709\u6839\u672c\u7684\u969c\u788d\u3002\n\u6211\u4eec\u9762\u4e34\u7684\u6301\u7eed\u6311\u6218\u662f\u5b9e\u73b0\u548c\u90e8\u7f72\u5fae\u7801\u4ee5\u5229\u7528\u786c\u4ef6\u7684\u529f\u80fd\u3002\u6211\u5e0c\u671b\u5728\u540e\u7eed\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8fdb\u4e00\u6b65\u63a2\u8ba8\u8fd9\u4e00\u70b9\u3002\n\u611f\u8c22\u5e03\u83b1\u6069\u00b7\u5f7c\u5f97\u68ee(Brian Petersen)\uff0c\u4ed6\u7684\u65e9\u671f\u5de5\u4f5c\u5c31\u662f\u57fa\u4e8e\u4ed6\u7684\u535a\u5ba2\u3002\u8fd8\u8981\u611f\u8c22\u5f17\u5170\u514b\u00b7\u5e03\u7f57\u514b\u7eb3(Frank Brockners)\u548cToerless Eckert\uff0c\u4ed6\u4eec\u662f\u6211\u5728IETF 104\u7684\u5171\u540c\u5c0f\u7ec4\u6210\u5458\u3002\u6700\u540e\uff0c\u611f\u8c22\u6211\u7684\u675c\u677e\u540c\u4e8b\u6770\u592b\u00b7\u5229\u6bd4(Jeff Libby)\u548c\u7f57\u6069\u00b7\u535a\u5c3c\u5361(Ron Bonica)\uff0c\u4ed6\u4eec\u8ba9\u6211\u4fdd\u6301\u8bda\u5b9e\u3002\u5f53\u7136\uff0c\u6240\u6709\u7684\u9519\u8bef\u90fd\u662f\u6211\u81ea\u5df1\u7684\u3002\nJohn Scudder\u662fJuniper Networks\u7684\u6770\u51fa\u5de5\u7a0b\u5e08\uff0c\u4e13\u6ce8\u4e8e\u8def\u7531\u534f\u8bae\u8bbe\u8ba1\u548c\u6807\u51c6\u5316\u3002", "note_en": "A few years ago, I was asked to act as an ambassador of sorts \u2014 from the world of router vendors and hardware, to the world of protocol designers and software \u2014 at least, in part, because I\u2019ve been a protocol guy in a hardware world for many years now.\n My failure to come up with a plausible excuse led to a\u00a0 talk at the IEPG meeting held at IETF 94\u00a0and later\u00a0 participation in a technology deep dive at IETF 104. Recently I was asked to turn those thoughts into a blog post and zoom in on considerations related to IPv6. This is that post.\n We\u2019re going to talk mostly about forwarding hardware and its relationship with the network layer, but to get there, I want to start with a cartoon sketch of a router. We\u2019ll consider what classes of processors and designs are used for forwarding packets, then focus on one of them, walk through its advantages and limitations in more detail, and finish with considerations for what the implications are for network-layer protocols (and IPv6 in particular).\n  It\u2019s a truism that in computing, the easiest way in the door is with a general-purpose computer, but when you need serious scale for solving a particular problem, you turn to purpose-built hardware. This can be for reasons of cost, performance, or both.\n Examples include graphics, where the humble graphics card has grown into the GPU, data-centre servers, which strip away amenities that are needed on desktop machines but which only burden the data-centre operator with extra cost, heat, volume, points of failure, and\u2026 routers.\n It\u2019s also true that the sweet spot in the spectrum between general-purpose and purpose-built is constantly on the move.\n In this post, we\u2019re going to think about routers that use purpose-built silicon to do their forwarding, rather than using general-purpose processors.\n When I started in this business, everything was forwarded using general-purpose processors (68000\u2019s, believe it or not, and even IBM RT PCs \u2014 the phrase \u201c4 MIP, plenty CPU!\u201d is burned into my memory forever although the speaker shall remain nameless). Within a few years, though, we had started to see the first custom forwarding silicon, and now there\u2019s a large ecosystem of forwarding hardware at different price points and targeted toward different network niches; some of it\u2019s custom, although increasingly it\u2019s merchant silicon. I have no intention of covering each variant in detail or even trying to enumerate them; what we\u2019re going for here is a representative overview.\n  We can think of it as a control plane and a forwarding plane, with the forwarding plane broken down into the logic used to make and execute the forwarding decision (at Juniper we call these packet forwarding engines or PFEs) and the interconnect between the several PFEs (generally referred to as the fabric).\n Smaller routers might have only a single PFE or might skip the fabric part altogether, and because this is a cartoon router I\u2019m not worrying about the all-important element of how to actually connect to the physical media. As we\u2019ll see, these simplifications are OK because we\u2019re going to focus on the PFE part.\n But first, let\u2019s spend a little while looking at the control plane (I can\u2019t help it, I work on the control plane for the most part). It\u2019s generally going to consist of a couple of general-purpose processors, or just one if the system is built without redundancy. These are labelled \u2018Route Engine\u2019, or RE, in our cartoon (as usual, different vendors call them different things, but everyone has some kind of control plane processor). They\u2019re connected to the forwarding hardware somehow, commonly over Ethernet (this is the box labelled \u2018Backplane\u2019, which, by the way, is\u00a0 not\u00a0the fabric that interconnects the line cards).\n Over on the forwarding plane side (the stack of boxes labelled \u2018Line Card\u2019), we have one or more collections of an embedded control processor (another general-purpose processor) managing one or more PFEs.\n  The CPUs on the REs run the routing protocols, management protocols, user interface, and so on. They\u2019re the heftiest processors in the router. They may even be as powerful as the CPU in a typical laptop! Or not, for various reasons \u2014 laptop manufacturers don\u2019t have the same certification requirements routers do, and besides, the job of a router is ultimately to move packets.\n Protocols are a loss-leader, nobody makes money by running one. Every cubic centimetre of volume taken up in the chassis, watt of power consumed, and joule of heat dissipated by the control plane is one that\u2019s not available for revenue-generating interfaces\u2026 and so the pressure is on for the manufacturer to provision no more than is needed. But I digress.\n The main thing to know about the REs is that they aren\u2019t going to be forwarding packets: there\u2019s a mismatch of orders of magnitude between the interface speeds of even a small-to-middling router, and the bandwidth available in and out of the REs. We can disregard them for the rest of this post.\n  Let\u2019s breeze right past the fabric, which I will shamelessly oversimplify as an interconnect of infinite speed that connects all the PFEs, and look at what PFEs do and how. At the highest level, they forward packets. This entails:\n L2 and L3 analysis and features \u2014 figure out whose packet it is, what should happen to it, where it should go.\n Packet buffering \u2014 store the packet in memory (this could be either on-chip or off-chip) until there\u2019s room to transmit it.\n Queuing and scheduling \u2014 decide which packets should go in what order to achieve fairness and real-time delivery guarantees. When queues accumulate, the router must determine which packets to keep and which to drop (this decision should be done in a way that favours higher-priority packets).\n The hardware implementation can be micro-programmable, table-driven, or hard-coded. They can be fully integrated on a single chip, or different functions can be separated onto different devices.\n Let\u2019s consider some forwarding architecture types (and, as usual, this isn\u2019t exhaustive):\n   On one end, most flexible but least efficient at forwarding packets, we have the general-purpose processor. It presents the most convenient programming model and is familiar to just about everyone. In low-volume and (relatively) low-performance applications, or applications where packet forwarding is just one small part of what\u2019s being done, they have a distinct role to play. But despite remarkable advancements in both their speed at forwarding packets and the programming model available for that purpose, they can\u2019t equal dedicated hardware when performance is at stake.\n The reason for this is easy to see when you consider the iron law of\u00a0 TANSTAAFL: There Ain\u2019t No Such Thing As A Free Lunch. For general-purpose processors to be useful in all applications, they have to have an instruction set and uniform memory model that caters to all applications. That costs money, space, and power. Why do you want to spend space in your router on an amazing floating-point unit, or graphics processing instructions, that will never be used? You don\u2019t. The general-purpose processor is an amazing jack of all trades, but it\u2019s still the master of none.\n The rest of the spectrum trades away various bits of the flexibility of a general-purpose processor, in favour of performance. When the trick is done well, we trade away only flexibility we didn\u2019t need anyway. It might be obvious to say \u201cno, my router doesn\u2019t need graphics processing instructions,\u201d but mostly it\u2019s harder and requires a crystal ball to predict the future.\n To take a key (no pun intended) example, the memory model is an important difference. General-purpose processors typically are presented with a buffer that contains the entire packet; they can inspect any byte they wish. More specialized forwarding processors typically have (very) fast access to the first\u00a0 n\u00a0bytes, but either have no access or pay a penalty, to\u00a0 n+1 and beyond. And so, by the time the processor tapes out, someone has had to answer, \u201cHow many bytes of key data is enough?\u201d, even if they do feel like they\u2019re being asked \u201cHow long is a piece of string?\u201d.\n  These have a large(ish) number of cores, likely with instruction sets specialized for packet processing. They may offer a programming model like that of a general-purpose processor, or a programming model more tailored to packet processing. They may well have a lower clock speed and fewer fancy features such as branch prediction and threading. But because they\u2019re specialized to one kind of workload, packet processing, that\u2019s OK \u2014 the space is better used providing more cores.\n For a router, the performance that matters is not how fast you can run a single relatively large job to completion. Rather, it\u2019s how fast you can run lots of small jobs, where each job is processing a single packet.\n  For these the processing steps are somewhat fixed: there\u2019s a fixed number of stages; each stage has the same time allocation, and each stage passes the results of its work to the next stage. The stages may be programmable, within limits. The vocabulary with which they\u2019re programmable is likely to be very specialized, compared to a general-purpose processor, tailored to fields and constructs found within existing packet headers.\n One might think that the least flexible implementations would lack competitiveness, but the cost, energy, and performance advantages are so substantial (orders of magnitude, compared to a general-purpose processor) that in fact, they have wide application throughout the industry.\n If you\u2019re buying a router, for many applications the main questions will be: Does it do what I need now? How much does it cost? How big is it? How much power does it draw? How reliable is it? The question of \u201chow future-proof is it\u201d may not be anywhere near the top of the list. So, even though as a software guy I think everything should be maximally programmable, as a pragmatist I see that business realities mean that may never be the case.\n  The forwarding that takes place in the PFE is what\u2019s typically called the \u2018fast path\u2019. When a packet can\u2019t be forwarded by the fast path, for whatever reason, we have two options: drop it, or punt it to the \u2018slow path\u2019 software forwarding, probably in the embedded control processor.\n This seems like an attractive option for the protocol designer: the occasional exception packet can\u2019t hurt anything, right? The problem occurs when we consider scale.\n Even if it were entirely dedicated to forwarding (which it is not) the control processor is unlikely to be able to sustain even 0.1% of the forwarding rate of the hardware forwarding chips it\u2019s paired with. Remember that the control processor is a \u2018loss leader\u2019. It\u2019s powerful enough to get the job done of managing the forwarding hardware, bootstrapping it, downloading forwarding tables, and so on, but it\u2019s not provisioned as a packet forwarding beast. Nor should it be \u2014 that\u2019s the job of the forwarding hardware. (Similar considerations apply when packets are punted to the RE.)\n  Clearly, this doesn\u2019t mean \u2014 can\u2019t mean, would be unacceptable for it to mean \u2014 that protocols can never change and evolve. But what\u00a0 does\u00a0it mean?\n The good news is that even the most basic forwarders are quite programmable \u2014 within limits. The trick is to appreciate what those limits are and to not cross them accidentally.\n Crossing them on purpose, because you must, is another matter \u2014 sometimes you just can\u2019t make an omelette without breaking some eggs. But if my protocol requires punting packets to the slow path, and yours gets the same job done but can stay on the fast path, I think I know whose protocol will win in the market, and it isn\u2019t mine.\n There is no one-size-fits-all flowchart for a protocol designer, but the following are some principles that protocol designers would do well to take to heart.\n  One of the limits we spoke of is\u00a0 key data size. This is the data made available to the forwarding processor in fast memory, while the rest of the packet is buffered in relatively slow memory that\u2019s either inaccessible to the processor, or at a substantial penalty. Thus, to sustain throughput, everything necessary for the forwarding decision must fit in the key data \u2014 the L2 header(s), L3 header(s) including any extension headers, tunnel headers, and so on, and also any higher-layer headers needed for load balancing entropy. If the key data for a particular processor is, say, 256 bytes, then everything is fine until the header chain hits byte 257.\n  Despite what \u2018everyone knows\u2019, it\u2019s not crucial for fields to be sized to a power-of-two, or even to be word-aligned.\n Fixed locations for fields\u00a0 is\u00a0important though, and it\u2019s helpful for the overall header length to be a multiple of 32 bits. One implication of this is that TLVs in headers that must be parsed hop-by-hop are costly.\n It\u2019s very tempting for protocol designers to throw an optional TLV field into everything \u2014 who couldn\u2019t love future-proofing? The answer is, people who have to check for TLV presence in the fast path, and potentially parse an indeterminate number of TLVs, that\u2019s who!\n One more cardinal sin for a protocol is one in which a header doesn\u2019t\u00a0 explicitly\u00a0specify the type of the subsequent header. This is a problem because pipeline processors typically parse the packet before starting any lookup, and any additional indirection inserted into this parsing process can be costly.\n Especially in a pipeline processor, it\u2019s a problem if headers are processed in some sequence other than how they appear in the packet, or if processing a given header requires referring to a different header. Headers should be self-contained. As a rule, each header should either provide the information needed to route the current packet, or it should provide the context in which the subsequent header should be interpreted.\n  Since there\u2019s likely to be hardware support for existing headers, it\u2019s desirable when possible to use an established header in a novel way instead of inventing a new one. There\u2019s a caveat, though \u2014 the novelty must fit with the semantics of the header; you can\u2019t take a field that was previously used as (say) a checksum and say \u201coh, that\u2019s an address now\u201d and expect a happy outcome. But taking an existing address and choosing to interpret it in a new way, may well work out. SR-MPLS ( RFC 8660) is a good example of this.\n  Equal Cost Multipath (ECMP) and Link Aggregation Groups (LAG) are in wide use; in order to assign flows to an ECMP or LAG member, a router must be able to identify the flow using some source of entropy. It\u2019s important that it be possible to easily find these entropy sources, and that they occur within the key data \u2014 if the headers grow so large that the entropy (say, from the transport header) is pushed into packet body buffering, that\u2019s a problem. Keeping the sources of entropy close to the top of the packet and close together (both from a literal number of bits and in terms of the protocol stack) is helpful.\n  To consider a few real-world examples that deviate from these guidelines, Multiprotocol Label Switching (MPLS) doesn\u2019t specify what type of header lies beyond the MPLS stack, it must be inferred based on information delivered by the control plane along with the label value. BIER ( RFC 8279) can produce headers of up to 524 bytes. The IPv6 Segment Routing Header ( RFC 8754) carries optional TLVs that the processor must be prepared to parse, though at least it\u2019s polite enough to put them at the end of the header. SRv6 ( RFC 8402) also embeds \u2018instructions\u2019 in IPv6 addresses; the parsing of these instructions is affected by control plane information and affects the handling of subsequent headers.\n The MPLS illustration should also serve to demonstrate that even if a protocol design isn\u2019t ideal for the silicon, it can still be a smashing success!\n  The analysis above is from one viewpoint, that of a high-performance router in or near the core of a network, that\u2019s moving lots of packets, at scale. Of course, that\u2019s not what the whole world is, but as the old ditty goes,\n A host is a host  From coast to coast  And nobody talks to a host that\u2019s close  Unless the host  That isn\u2019t close  Is busy, hung, or dead.\n The point here being unless there\u2019s some reason a protocol or extension is\u00a0 guaranteed\u00a0to be deployed only in limited, local environments, it\u2019s wise to assume it will be run across the big-I Internet. And when that happens, its packets will be handled by those high-performance routers we\u2019re talking about.\n On the other hand, not every router is a core router, and routers in other roles may be able to spend more resources providing features (tunnel termination, for example, or encryption). This is fine, as long as the features in question are architected such that they only incur a cost at the point where they\u2019re provided.\n   In some ways, IPv6 was designed as a more processor-friendly protocol than IPv4; in particular, the IPv4 header is variable-length and the IPv6 header is fixed-length. That\u2019s very helpful. It also organizes its options such that a transit router need not even attempt to parse options of relevance only to the destination node.\n In other ways, IPv6 presents greater challenges than IPv4: because of its greater extensibility, IPv6 has more options. An IPv6 header chain can potentially grow rather large, conceivably large enough to trigger some of the problems described above when the headers exceed the capacity of fast memory to store them for the forwarding engine.\n For some older devices that didn\u2019t include IPv6 as a first-class citizen in their silicon design, extension headers of any sort are problematic, moving the packet off the fast path or otherwise reducing the packet rate through the forwarder.\n Newer devices (made in the last few years) have the potential to remedy this issue but even though the silicon is capable, the microcode that runs on it may lag; for this reason, throughput for IPv6 packets with extension headers continues to be chancy.\n This leads to another question \u2014 suppose we introduce an extension to the protocol. How long will it take for the silicon to catch up?\n The answer is a bit tricky, but the oversimplified guesstimate is \u201ca couple of years, maybe?\u201d.\n A number of factors play into why this is an oversimplification, including the fact that the existing silicon may already be flexible enough to support our extension with new microcode, and also the chicken-and-egg consideration that your extension may need silicon support to become popular, but silicon may not want to support it unless it becomes popular. It\u2019s for this latter reason that the guidelines in the earlier section ought to be considered carefully.\n  As we\u2019ve seen, once silicon is baked, although a router\u2019s abilities aren\u2019t necessarily set in stone, they\u2019re set in some pretty firm mud at least, so the introduction of a radically new network layer protocol is a daunting prospect.\n The good news for IPv6 is that the design is sound: there aren\u2019t fundamental obstacles to processing it at line speed.\n The ongoing challenges we face are implementing and deploying microcode to take advantage of the hardware\u2019s capabilities. I hope to explore this further in a follow-on blog post.\n  Thanks to Brian Petersen, on whose earlier work this blog is based. Thanks also to Frank Brockners and Toerless Eckert, my co-panellists at IETF 104. Finally, thanks to my Juniper colleagues, Jeff Libby and Ron Bonica, who kept me honest. All errors are, of course, my own.\n John Scudder is a Distinguished Engineer at Juniper Networks, where he focuses on routing protocol design and standardization.", "posttime": "2020-06-05 03:38:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8def\u7531\u5668,router,\u6570\u636e\u5305", "title": "\u73b0\u4ee3\u8def\u7531\u5668\u4f53\u7cfb\u7ed3\u6784\u4e0eIPv6", "title_en": "Modern Router Architecture and IPv6", "transed": 1, "url": "https://blog.apnic.net/2020/06/04/modern-router-architecture-and-ipv6/", "via": "", "real_tags": ["\u8def\u7531\u5668", "router", "\u6570\u636e\u5305"]}, {"category": "", "categoryclass": "", "imagename": "1d4d1de4ef1f758793e57d798d431227.jpg", "infoid": 1005186, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u641c\u7d22\u4f0a\u4e3d\u838e\u767d\u00b7\u9732\u4e1d\u00b7\u5a1c\u5965\u7c73\u00b7\u8d1d\u5c14\u7ef4\u5c14(1854\u5e743\u67085\u65e5-1943\u5e7412\u67087\u65e5)\uff0c\u4e5f\u88ab\u79f0\u4e3a\u683c\u6797\u5a01\u6cbb\u65f6\u95f4\u5973\u58eb\uff0c\u662f\u4e00\u4f4d\u6765\u81ea\u4f26\u6566\u7684\u5973\u5546\u4eba\u3002\u5979\u3001\u5979\u7684\u6bcd\u4eb2\u739b\u4e3d\u4e9a\u00b7\u4f0a\u4e3d\u838e\u767d(Maria Elizabeth)\u548c\u5979\u7684\u7236\u4eb2\u7ea6\u7ff0\u00b7\u4ea8\u5229(John Henry)\u5411\u4eba\u4eec\u515c\u552e\u65f6\u95f4\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5c31\u50cf\u683c\u6797\u5a01\u6cbb\u7684\u949f\u6240\u793a\uff0c\u6bcf\u5929\u628a\u8d1d\u5c14\u7ef4\u5c14\u7684\u624b\u8868\u8c03\u5230\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\uff0c\u7136\u540e\u5356\u7ed9\u4eba\u4eec\u65f6\u95f4\uff0c\u8ba9\u4ed6\u4eec\u770b\u4e00\u770b\u624b\u8868\uff0c\u8c03\u6574\u4e00\u4e0b\u81ea\u5df1\u7684\u65f6\u95f4\u3002[1]\u3002\n\u9732\u4e1d\u00b7\u8d1d\u5c14\u7ef4\u5c14(Ruth Belville)\u7684\u7236\u4eb2\u7ea6\u7ff0\u00b7\u4ea8\u5229\u00b7\u8d1d\u5c14\u7ef4\u5c14(John Henry Belville)\u57281836\u5e74\u4e3a200\u540d\u5ba2\u6237\u521b\u5efa\u4e86\u4e00\u9879\u670d\u52a1\u3002\u6bcf\u5929\u65e9\u4e0a\uff0c\u7ea6\u7ff0\u00b7\u4ea8\u5229\u90fd\u4f1a\u53bb\u683c\u6797\u5a01\u6cbb\u5929\u6587\u53f0\uff0c\u5728\u90a3\u91cc\u4ed6\u5de5\u4f5c\uff0c\u5e76\u628a\u4ed6\u7684\u624b\u8868\u8c03\u5230\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\u3002\u7136\u540e\uff0c\u4ed6\u4f1a\u5750\u4e0a\u9a6c\u8f66\u51fa\u53d1\uff0c\u4e3a\u8ba2\u9605\u4e86\u8fd9\u9879\u670d\u52a1\u7684\u5ba2\u6237\u8bbe\u7f6e\u6b63\u786e\u7684\u65f6\u949f\u3002[2]\u3002\n\u7ea6\u7ff0\u00b7\u4ea8\u5229\u4e00\u76f4\u670d\u52a1\u52301856\u5e74\u53bb\u4e16\u3002\u4ed6\u7684\u9057\u5b40\u739b\u4e3d\u4e9a\u88ab\u6388\u4e88\u4ece\u4e8b\u8fd9\u9879\u5de5\u4f5c\u4f5c\u4e3a\u8c0b\u751f\u624b\u6bb5\u7684\u7279\u6743\uff0c\u5e76\u7ee7\u7eed\u7ecf\u8425\u8fd9\u9879\u4e1a\u52a1\uff0c\u76f4\u52301892\u5e74\u9000\u4f11\uff0c\u5f53\u65f6\u5979\u5df2\u7ecf80\u591a\u5c81\u4e86\u3002\u9732\u4e1d\u00b7\u8d1d\u5c14\u7ef4\u5c14\u968f\u540e\u63a5\u7ba1\u4e86\u8fd9\u5bb6\u516c\u53f8\u3002[3]\u5979\u4e00\u76f4\u7ecf\u8425\u52301940\u5e74\u3002[1]\u8d1d\u5c14\u7ef4\u5c14\u9000\u4f11\u65f6\u5df2\u7ecf80\u591a\u5c81\u4e86\uff0c86\u5c81\u7684\u5979\u4ecd\u7136\u80fd\u591f\u79bb\u5bb6\u5927\u7ea612\u82f1\u91cc\uff0c\u5728\u4e0a\u53489\u70b9\u4e4b\u524d\u5230\u8fbe\u5929\u6587\u53f0\u3002\u5979\u53bb\u4e16\u65f6\u4eab\u5e7489\u5c81\u3002[3]\u3002\n\u8fd9\u5bb6\u516c\u53f8\u4f7f\u7528\u7684\u624b\u8868\u662f\u7ea6\u7ff0\u00b7\u963f\u8bfa\u5fb7(John Arnold)\u7684485/786\u53f7\u8896\u73cd\u8ba1\u65f6\u5668\uff0c\u7ef0\u53f7\u4e3a\u963f\u8bfa\u5fb7(Arnold&34\uff1b)\u3002\u5b83\u6700\u521d\u662f\u4e3a\u82cf\u585e\u514b\u65af\u516c\u7235\u5236\u4f5c\u7684\uff0c\u6709\u4e00\u4e2a\u91d1\u8272\u7684\u8868\u58f3\u3002\u5f53\u5b83\u7ed9\u7ea6\u7ff0\u00b7\u4ea8\u5229\u65f6\uff0c\u4ed6\u628a\u7bb1\u5b50\u6362\u6210\u4e86\u94f6\u7684\uff0c\u56e0\u4e3a\u4ed6\u62c5\u5fc3\u5c0f\u5077\u53ef\u80fd\u4f1a\u5077\u8d70\u4e00\u53ea\u91d1\u8868\u3002\u9732\u4e1d\u6b7b\u540e\uff0c\u8fd9\u5757\u624b\u8868\u7559\u7ed9\u4e86\u503c\u5f97\u5c0a\u656c\u7684\u949f\u8868\u5320\u516c\u53f8\u3002[3]\u3002\n\u8d1d\u5c14\u7ef4\u5c14\u7684\u4e1a\u52a1\u53d7\u5230\u4e86\u6807\u51c6\u65f6\u95f4\u516c\u53f8(Standard Time Company)\u8463\u4e8b\u5723\u7ea6\u7ff0\u00b7\u97e6\u6069(St John Wynne)\u7684\u653b\u51fb\uff0c\u8be5\u516c\u53f8\u51fa\u552e\u7535\u62a5\u65f6\u95f4\u4fe1\u53f7\u670d\u52a1\uff0c\u56e0\u6b64\u662f\u8d1d\u5c14\u7ef4\u5c14\u7684\u4e3b\u8981\u7ade\u4e89\u5bf9\u624b\u3002\u97e6\u6069\u5728\u653b\u51fb\u8d1d\u5c14\u7ef4\u5c14\u7684\u57ce\u5e02\u8054\u5408\u75c5\u623f\u4ff1\u4e50\u90e8\u53d1\u8868\u6f14\u8bb2\uff0c\u58f0\u79f0\u5979(\u8d1d\u5c14\u7ef4\u5c14)\u7684\u65b9\u6cd5\u8fc7\u65f6\u5f97\u6709\u8da3\uff0c\u4ed6\u8fd8\u6697\u793a\u5979\u53ef\u80fd\u4e00\u76f4\u5728\u5229\u7528\u81ea\u5df1\u7684\u5973\u6027\u6c14\u8d28\u6765\u8d5a\u53d6\u751f\u610f\u3002[3][3][3][3]\u3002[3][3]\u97e6\u6069\u5728\u653b\u51fb\u8d1d\u5c14\u7ef4\u5c14\u7684\u57ce\u5e02\u8054\u5408\u75c5\u623f\u4ff1\u4e50\u90e8\u53d1\u8868\u6f14\u8bb2\uff0c\u58f0\u79f0\u5979\u7684\u65b9\u6cd5\u8fc7\u65f6\u5f97\u6709\u8da3\uff0c\u4ed6\u8fd8\u6697\u793a\u5979\u53ef\u80fd\u4e00\u76f4\u5728\u5229\u7528\u81ea\u5df1\u7684\u5973\u6027\u6c14\u8d28\u6765\u8d5a\u53d6\u751f\u610f\u3002\n\u8fd9\u7bc7\u6f14\u8bb2\u53d1\u8868\u5728\u201c\u6cf0\u6664\u58eb\u62a5\u201d\u4e0a\uff0c\u4f46\u6587\u7ae0\u6ca1\u6709\u63d0\u5230\u6807\u51c6\u65f6\u95f4\u516c\u53f8\uff0c\u4e5f\u6ca1\u6709\u63d0\u5230\u4ed6\u662f\u8d1d\u5c14\u7ef4\u5c14\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u8bc4\u8bba\u53d1\u8868\u540e\uff0c\u8d1d\u5c14\u7ef4\u5c14\u88ab\u5bf9\u5979\u7684\u751f\u610f\u548c\u53ef\u80fd\u7684\u4e11\u95fb\u611f\u5174\u8da3\u7684\u8bb0\u8005\u56f4\u4f4f\u4e86\uff0c\u8fd9\u4e00\u70b9\u4ece\u97e6\u6069\u7684\u8bc4\u8bba\u4e2d\u9690\u542b\u4e86\u51fa\u6765\u3002\u7136\u800c\uff0c\u8d1d\u5c14\u7ef4\u5c14\u8bbe\u6cd5\u5e94\u4ed8\u4e86\uff0c\u7531\u6b64\u4ea7\u751f\u7684\u5ba3\u4f20\u5bfc\u81f4\u4e86\u9500\u552e\u989d\u7684\u589e\u52a0\u3002\u8d1d\u5c14\u7ef4\u5c14\u8bf4\uff0c\u97e6\u6069\u6240\u505a\u7684\u4e00\u5207\u5c31\u662f\u514d\u8d39\u7ed9\u5979\u505a\u5e7f\u544a\u3002[2][3]\u3002\n\u7eff\u8272\u7684\u3002\u9f50\u3002G.15\u5b63\u3002\u82f1\u56fd\u4f26\u6566\u30022010\u5e743\u670826\u65e5\u3002\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u3002BBC\u4e00\u53f0\u3002\n\u7ea6\u7ff0\u00b7H\u00b7H\u00b7\u83b1\u6069\u54c8\u5fb7\u8457\uff0c\u7b2c2070\u53f7\uff1a\u201c\u65f6\u4ee3\u201d\u548c\u201c\u9732\u4e1d\u00b7\u8d1d\u5c14\u7ef4\u5c14\u201d(Time&Amp\uff1bRuth Belville&34\uff1b)\u3002\u4f11\u65af\u987f\u5927\u5b66\uff1a\u6211\u4eec\u806a\u660e\u624d\u667a\u7684\u5f15\u64ce\u3002\u4e8e2017\u5e741\u67089\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n^a b c d e Mendham\uff0cTrevor\u3002\u683c\u6797\u5a01\u6cbb\u65f6\u95f4\u5973\u58eb\u3002\u949f\u8868\u5b66\u7684\u4e1c\u897f\u30022010\u5e742\u670822\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002", "note_en": "Jump to navigation  Jump to search  Elizabeth Ruth Naomi Belville (5 March 1854 \u2013 7 December 1943), also known as the  Greenwich Time Lady, was a businesswoman from London. She, her mother Maria Elizabeth, and her father John Henry, sold people the time. This was done by setting a Belvilles&#39; watch to  Greenwich Mean Time, as shown by the Greenwich clock, each day and then &#34;selling&#34; people the time by letting them look at the watch and adjust theirs.  [1]\n    Ruth Belville&#39;s father, John Henry Belville, created a service for 200 clients in 1836. Each morning, John Henry went to  Greenwich Observatory, where he worked and set his watch to Greenwich Mean Time. He would then set off in his buggy and would set the clocks correctly for clients subscribed to the service.  [2]\n John Henry continued this service up until his death in 1856. His widow, Maria, was granted the privilege of carrying on the work as a means of livelihood and continued the business until her retirement in 1892 when she was in her eighties. Ruth Belville then took over the business.  [3] She continued the business up until 1940.  [1] Belville was in her eighties when she retired and at the age of 86 she was still able to journey about twelve miles from her home and attend at the Observatory by 9\u00a0am. She died at the age of 89.  [3]\n The watch used by the business was a  John Arnold pocket chronometer No. 485/786, nicknamed &#34;Arnold&#34;. It was originally made for the  Duke of Sussex and had a gold case. When it was given to John Henry, he changed the case to silver because he was worried thieves might steal a gold watch. When Ruth died, the watch was left to the  Worshipful Company of Clockmakers.  [3]\n  Belville&#39;s business came under attack from  St John Wynne, a director of the  Standard Time Company, which sold a telegraphic time signal service and was, therefore, Belville&#39;s main competitor. Wynne made a speech at the city United Wards Club attacking Belville, claiming, &#34;that her [Belville&#39;s] methods were amusingly out of date,&#34; he also implied that she might have been using her femininity to gain business.&#34;  [3]\n The speech was published in   The Times newspaper, but the article did not mention the Standard Time Company and the fact that he was Belville&#39;s competitor. Following the publication of the comments, Belville was besieged by reporters interested in her business and also the possible scandal, which was implied by Wynne&#39;s comments. However, Belville managed to cope, and the resulting publicity resulted in an increase in sales. Belville said that all Wynne had managed to do was to give her free advertising.  [2]  [3]\n  ^     a     b   &#34;Green&#34;.   QI. Season G.15. London, England. 26 March 2010.  BBC.  BBC One.\n ^     a     b   Lienhard, John H.  &#34;No. 2070: TIME &amp; RUTH BELVILLE&#34;. University of Houston: Engines of Our Ingenuity.  Archived from the original on 9 January 2017 .\n ^     a     b     c     d     e   Mendham, Trevor.  &#34;The Greenwich Time Lady&#34;. Horology Stuff. Archived from  the original on 22 February 2010 .", "posttime": "2020-06-05 03:37:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9732\u4e1d,ruth,\u65f6\u95f4", "title": "\u9732\u4e1d\u00b7\u8d1d\u5c14\u7ef4\u5c14", "title_en": "Ruth Belville", "transed": 1, "url": "https://en.wikipedia.org/wiki/Ruth_Belville", "via": "", "real_tags": ["\u9732\u4e1d", "ruth", "\u65f6\u95f4"]}]