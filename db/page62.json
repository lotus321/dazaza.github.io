[{"category": "", "categoryclass": "", "imagename": "12d2c6f39823c288740314b6088e9ac3.jpeg", "infoid": 1006328, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "git\u514b\u9686https://github.com/ajinabraham/nodejsscan.git cd\u8282\u70b9jsscanpython3-m venv venv\u6e90venv/bin/actiatepip install-r\u8981\u6c42\u3002txtpython3 manage.py rerecate_db#\u8fd0\u884c\u4e00\u6b21\u4ee5\u521b\u5efa\u6570\u636e\u5e93\u6761\u76ee\u3002\n\u521b\u5efa\u60a8\u7684\u677e\u5f1b\u5e94\u7528\u7a0b\u5e8fSlack App\uff0c\u5e76\u5728nodejsscan/settings.py\u4e2d\u8bbe\u7f6eSLACK_WEBHOOK_URL\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf\u3002", "note_en": "git clone https://github.com/ajinabraham/nodejsscan.git cd nodejsscanpython3 -m venv venv source venv/bin/activatepip install -r requirements.txtpython3 manage.py recreate_db   # Run once to create database entries\n         Create your slack app  Slack App and set  SLACK_WEBHOOK_URL in  nodejsscan/settings.py or as environment variable.", "posttime": "2020-06-13 04:24:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u7a0b\u5e8f,app,\u9762\u5411,semantic", "title": "Node.jsScan\uff1a\u9762\u5411Node.js\u5e94\u7528\u7a0b\u5e8f\u7684\u8bed\u4e49\u611f\u77e5\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177", "title_en": "Node.jsScan: A semantic aware static code analysis tool for Node.js applications", "transed": 1, "url": "https://github.com/ajinabraham/nodejsscan", "via": "", "real_tags": ["\u4ee3\u7801", "\u7a0b\u5e8f", "app", "\u9762\u5411", "semantic"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006327, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u4f5c\u4e3a\u5bf9\u6811\u8393\u6d3e4(\u5373\u5c06\u63a8\u51fa\uff01)\u8fdb\u884c\u66f4\u5168\u9762\u8bc4\u4f30\u7684\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u51b3\u5b9a\u5168\u529b\u4ee5\u8d74\uff0c\u82b1\u4e00\u6574\u5929\u7684\u65f6\u95f4\u5b8c\u5168(\u6216\u8005\u81f3\u5c11\u5c3d\u53ef\u80fd\u591a\u5730)\u4f7f\u7528\u6811\u8393\u6d3e\u3002\n\u800c\u4e14\u4e0d\u53ea\u662f\u8fdc\u7a0b\u7f16\u7a0b\u6216\u5199\u535a\u5ba2--\u8fd9\u4e9b\u5728Chromebook\u3001\u5e73\u677f\u7535\u8111\u6216\u4efb\u4f55\u5ec9\u4ef7\u7684\u65e7\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u90fd\u5f88\u5bb9\u6613\u505a\u5230--\u800c\u662f\u5c1d\u8bd5\u505a\u6211\u6bcf\u5929\u8981\u505a\u7684\u6240\u6709\u4e8b\u60c5\uff0c\u6bd4\u5982\uff1a\n\u4f7f\u7528Slake(\u4f60\u4f1a\u7b11\uff0c\u4f46Slake\u4f7f\u7528\u7684\u5185\u5b58\u6bd4\u6211\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u8fd0\u884c\u7684\u5927\u591a\u6570\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u90fd\u8981\u591a--\u52a0\u8d77\u6765\uff01)\u3002\n\u56e0\u6b64\uff0c\u4e0e\u4efb\u4f55\u8fd9\u79cd\u89c4\u6a21\u7684\u9879\u76ee\u4e00\u6837\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2aGitHub\u5b58\u50a8\u5e93pi-dev-playbook\u6765\u8ddf\u8e2a\u6211\u7684\u5de5\u4f5c-\u5e76\u4e14\u80fd\u591f\u5728\u9700\u8981\u65f6\u7acb\u5373\u5728\u65b0\u7684PI\u4e0a\u590d\u5236\u6211\u7684\u5f00\u53d1\u73af\u5883\u3002\n\u521d\u6b65\u5267\u900f/tl\uff1b\u739b\uff1a\u4e00\u5929\u540e\u6211\u5c31\u653e\u5f03\u4e86\u3002\u6211\u672c\u6765\u5e0c\u671b\u53bb\u51e0\u5929\uff0c\u4f46\u5c0f\u7684\u75db\u70b9(\u51e0\u4e4e\u5728\u6211\u63a2\u7d22\u7684\u6bcf\u4e2a\u9886\u57df)\u52a0\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e86\u4e00\u6b21\u6bd4\u6211\u9884\u671f\u7684\u66f4\u4ee4\u4eba\u6cae\u4e27\u7684\u4f7f\u7528PI\u4f5c\u4e3a\u4e3b\u8981\u8ba1\u7b97\u673a\u66f4\u6362\u7684\u7ecf\u5386\u3002\u5b83\u5bf9\u67d0\u4e9b\u7528\u4f8b\u6765\u8bf4\u5f88\u597d\uff0c\u4f46\u5bf9\u6211\u7684\u7528\u4f8b\u5c31\u4e0d\u592a\u597d\u4e86\u3002\u7a0d\u540e\u4f1a\u6709\u66f4\u591a\u7ec6\u8282\u3002\n\u8fd9\u4e00\u5929\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\u628a\u6211\u7684MacBook Pro\u4eceCalDigit TS3 Plus Thunderbolt3\u96c6\u7ebf\u5668\u4e0a\u62d4\u4e0b\u6765\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u628a\u6211\u9700\u8981\u7684\u4e00\u5207\u90fd\u63d2\u5230\u6211\u7684PI\u91cc\u3002\n\u6211\u5c06AmazonBasics\u4f9b\u7535\u7684USB3.0\u96c6\u7ebf\u5668\u63d2\u5165PI\u3002\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u5e26\u7535\u6e90\u7684\u96c6\u7ebf\u5668\uff0c\u4ee5\u9632\u6b62PI&#39\uff1b\u7684\u5185\u90e8\u603b\u7ebf\u5fc5\u987b\u4e3a\u6211\u7684\u6240\u6709\u8bbe\u5907\u4f9b\u7535\uff0c\u8fd9\u4e9b\u8bbe\u5907\u5305\u62ec\uff1a\nInateck USB 3.0 SATA\u76d8\u67dc\u4e2d\u7684Kensington 240 GB\u56fa\u6001\u786c\u76d8\u3002\u6211\u4f7f\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u5f15\u5bfc\u5377\uff0c\u9075\u5faa\u6211\u5728\u4e0a\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u6307\u5bfc\uff0c\u6211\u6b63\u5728\u4eceUSBSSD\u5f15\u5bfc\u6211\u7684Raspberry PI 4\u3002\n\u5f53\u4f60\u66f4\u6362\u7535\u8111\u65f6\uff0c\u4f60\u4e0d\u4f1a\u771f\u6b63\u610f\u8bc6\u5230\u4f60\u6700\u7ec8\u4f1a\u7528\u5230\u591a\u5c11\u4e71\u4e03\u516b\u7cdf\u7684\u7535\u7f06--\u6216\u8005\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u8df3\u5230\u8fc5\u96f7\u6216USB-C#dongleLife\u4e2d\uff0c\u4f60\u4f1a\u610f\u8bc6\u5230\u4f60\u6709\u591a\u4e48\u597d\u7684\u7ebf\u7f06\u3002\u79fb\u52a8\u6240\u6709\u8fd9\u4e9b\u8fde\u63a5\u5bfc\u81f4\u4e86\u76f8\u5f53\u5927\u7684\u8001\u9f20\u7a9d\uff1a\n\u6211\u63d2\u4e0a\u4e86\u5b98\u65b9\u7684PI4USB-C\u7535\u6e90\u548c\u4e00\u4e2a\u5fae\u578bHDMI\u8f6cHDMI\u9002\u914d\u5668\uff0c\u5b83\u63d2\u5230\u4e86\u6211\u7684LG 4K27&34\uff1b\u663e\u793a\u5668\u4e0a\uff0c\u7136\u540e\u7b49\u5f85PI\u542f\u52a8\uff01\n\u6211\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b-\u82b1\u4e86\u8fd130\u5206\u949f-\u662f\u8bd5\u56fe\u5f04\u6e05\u695a\u5982\u4f55\u8ba94K(\u572830 Hz\u4e0b-PI\u53ef\u4ee5\u901a\u8fc7\u5176HDMI\u8fde\u63a5\u8f93\u51fa60 Hz)\u5728\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u548c\u7cfb\u7edf\u63a7\u4ef6\u4e0a\u4f7f\u7528\u4e00\u81f4\u7684\u5b57\u4f53\u5927\u5c0f\u3002\n\u5916\u89c2\u9996\u9009\u9879\u4e2d\u7684\u8bbe\u7f6e\u4f3c\u4e4e\u9002\u7528\u4e8e\u67d0\u4e9b\u7a97\u53e3\u94ec\u548c\u6309\u94ae\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5185\u90e8\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4ee54K\u5206\u8fa8\u7387\u589e\u52a0\u5b57\u4f53\u5927\u5c0f\u540e\uff0c\u6587\u4ef6\u7ba1\u7406\u5668\u7684\u4e3b\u7a97\u53e3\u6709\u53ef\u8bfb\u6587\u672c\uff0c\u4f46\u4e3a\u4e86\u4f7f\u6587\u4ef6\u540d\u548c\u5176\u4ed6\u5217\u8868\u53ef\u8bfb\uff0c\u6211\u5fc5\u987b\u8fdb\u5165\u6587\u4ef6\u7ba1\u7406\u5668\u7684\u8bbe\u7f6e\u5e76\u589e\u52a0\u90a3\u91cc\u7684\u5b57\u4f53\u5927\u5c0f\u3002\n\u56e0\u6b64\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u6253\u5f00\u4e86\u50cf\u7d20\u52a0\u500d\u529f\u80fd\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4ee54K\u7684\u901f\u5ea6\u8fd0\u884cPI\uff0c\u4f46\u662f\u5927\u591a\u6570\u4e1c\u897f\u90fd\u662f\u4ee51080p\u7684\u901f\u5ea6\u6e32\u67d3\u7684\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5728X\u548cY\u7ef4\u5ea6\u4e0a\u90fd\u662f\u7ffb\u500d\u7684\u3002\n\u5982\u679c\u4f60\u60f3\u73a9\u6e38\u620f(\u5c11\u6570\u4eba\u53ef\u80fd\u4f1a\u57284K\u4e0b\u8fd0\u884c)\u548c\u89c2\u770b4K\u5206\u8fa8\u7387\u7684\u89c6\u9891(\u57284K\u4e0b\u6709\u4e00\u4e9b\u8f7b\u5fae\u7684\u6495\u88c2)\uff0c\u540c\u65f6\u8ba9\u7535\u8111\u4e0a\u7684\u5176\u4ed6\u4e1c\u897f\u4ee5\u66f4\u8212\u9002\u3001\u66f4\u6613\u8bfb\u76841080p\u5206\u8fa8\u7387\u5448\u73b0\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\n\u6700\u540e\uff0c\u5728\u8c03\u6574\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u7684\u8bbe\u7f6e\u540e\uff0c\u6211\u51b3\u5b9a\u575a\u6301\u4f7f\u7528\u539f\u751f\u76841080p\u5206\u8fa8\u7387\uff0c\u5c3d\u7ba1\u5b83\u8ba9\u6211\u7684\u663e\u793a\u5668\u611f\u89c9\u6709\u70b9\u9648\u65e7\u548c\u8fc7\u65f6(\u4e0eMac\u4e0a\u4f7f\u7528\u7684\u6e05\u723d\u7684Retina 4K\u76f8\u6bd4)\uff0c\u56e0\u4e3a\u5b83\uff1a\n\u5b83\u5141\u8bb8PI&39\uff1b\u7684\u56fe\u5f62\u5904\u7406\u5668\u5e94\u7528\u6297\u952f\u9f7f\uff0c\u8fd9\u6bd4Pixel-Double-1080p\u7684\u5757\u72b6\u5916\u89c2\u5bf9\u6211\u7684\u773c\u775b\u66f4\u5bb9\u6613\u3002\n\u5b83\u5141\u8bb860 Hz\u7684\u5237\u65b0\u7387\uff0c\u6bcf\u5f53\u6211\u6eda\u52a8\u6216\u89c2\u770b60fps\u7684\u89c6\u9891\u65f6\uff0c\u8fd9\u8ba9\u6211\u7684\u773c\u775b\u66f4\u8212\u670d\u3002\n\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u4e5f\u4e0d\u5f97\u4e0d\u653e\u5f03\u4f7f\u7528\u6211\u7684Apple Magic\u89e6\u6478\u677f\uff0c\u56e0\u4e3a\u5373\u4f7f\u5728\u8c03\u6574\u4e86\u4e00\u4e9b\u8bbe\u7f6e(\u6bd4\u5982\u542f\u7528NaturalScrolling\u548c\u66f4\u6539\u5149\u6807\u52a0\u901f)\u4e4b\u540e\uff0c\u8ddf\u8e2a\u611f\u89c9\u4e5f\u4e0d\u662f\u5f88\u7cbe\u786e\u3002\u611f\u89c9\u89e6\u6478\u677f\u559d\u9189\u4e86\u3002\n\u6211\u76f4\u63a5\u628a\u5b83\u63d2\u5230PI\u4e0a\uff0c\u4ecd\u7136\u6709\u95ee\u9898\u3002\u6240\u4ee5\u6211\u6362\u6210\u4e86\u529e\u516c\u5ba4\u91cc\u7684\u7f57\u6280\u8001\u5f0f\u9f20\u6807\uff0c\u6548\u679c\u66f4\u597d(\u4f46\u662f\u54c7\uff0c\u5728\u4f7f\u7528\u4e86\u591a\u5e74\u7684\u89e6\u63a7\u677f\u4e4b\u540e\uff0c\u6211\u771f\u7684\u8ba8\u538c\u6eda\u8f6e\u5417\uff1f)\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5f53\u6211\u5f00\u59cb\u5bf9PI&#39\uff1b\u7684\u4e25\u9177\u7528\u6237\u754c\u9762(LXDE)\u611f\u5230\u66f4\u8212\u670d\u65f6\uff0c\u6211\u5f00\u59cb\u5c1d\u8bd5\u5b9e\u9645\u505a\u4e00\u4e9b\u5de5\u4f5c\u3002\n\u6211\u82b1\u4e86\u51e0\u5206\u949f\u8bd5\u56fe\u5f04\u660e\u767d\uff0c\u5f53\u8c37\u6b4c(Google)\u627e\u5230\u6211\u65f6\uff0c\u4e3a\u4ec0\u4e48\u5728\u6211\u7684GitHub\u95ee\u9898\u4e2d\u952e\u5165\u7834\u6298\u53f7\u8fd9\u4e48\u96be\uff1a\n\u6309\u4f4fAlt\u952e\u4e4b\u4e00\u5e76\u5728\u6570\u5b57\u952e\u76d8\u4e0a\u952e\u5165\uff1a0150\u8868\u793aen\u7834\u6298\u53f7\uff0c0151\u8868\u793aem\u7834\u6298\u53f7\u3002\n\u54e6.\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5927\u591a\u6570\u4eba\u4e0d\u77e5\u9053em\u548cen-dash\u4e4b\u95f4\u7684\u533a\u522b--\u5f88\u96be\u952e\u5165\u4e00\u4e2a\uff0c\u53ea\u9700\u5728-.\u4e2d\u52a0\u51e0\u4e2a\u7834\u6298\u53f7\u5c31\u5bb9\u6613\u591a\u4e86-\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u5728\u6211\u7684Mac\u7535\u8111\u4e0a\uff0c\u6211\u4e60\u60ef\u4e8e\u7528Shift+Option+\u7834\u6298\u53f7\u8868\u793aem\uff0c\u6216\u8005\u7528Option+\u7834\u6298\u53f7\u8868\u793aen\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u79bb\u9898\u4e86\u3002\n\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u641c\u7d22\u7684\u7ed3\u679c\u597d\u574f\u53c2\u534a\u3002Chrome\u662f\u4e00\u6b3e\u4e0d\u9519\u7684\u6d4f\u89c8\u5668\uff0c\u5b83\u4e0ePI\u4e00\u8d77\u63d0\u4f9b\u3002\u9664\u4e86\u8c37\u6b4c\u53ef\u80fd\u8fd8\u5728\u60f3\u529e\u6cd5\u8ddf\u8e2a\u6211\u7684\u4e00\u4e3e\u4e00\u52a8\u4e4b\u5916\uff0c\u6211\u5728\u8fd9\u65b9\u9762\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u4e0d\u5b89\u3002\n\u6211\u53d1\u73b0VSCodium\u662f\u4e00\u4e2a\u4e0d\u9519\u7684(\u5982\u679c\u7a0d\u5fae\u8d85\u91cd\uff0c\u662fIMO)\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u53d6\u4ee3\u6211\u9996\u9009\u7684\u7f16\u8f91\u5668Sublime Text 3\u3002\u8bf7\u6ce8\u610f\uff0cSublime Text 3\u786e\u5b9e\u6709Linux\u7248\u672c\uff0c\u53ea\u662f\u4e0d\u662f\u9488\u5bf9ARM64\u7684\u3002\u4e5f\u8bb8\u6709\u4e00\u5929\u8fd9\u79cd\u60c5\u51b5\u4f1a\u6539\u53d8\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u6211\u7ecf\u5e38\u9047\u5230\u7684\u4e00\u4e2a\u4e3b\u9898--\u6211\u7ecf\u5e38\u4f7f\u7528\u7684\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u6210\u719f\u7684Linux\u7248\u672c\uff0c\u4f46\u5f88\u5c11\u6709\u4eba\u4f1a\u5728ARM64\u4e0a\u7f16\u8bd1\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u5c1d\u8bd5(\u4f46\u5931\u8d25\u4e86)\u5728PI OS\u6d4b\u8bd5\u7248\u4e0a\u7f16\u8bd1Dropbox\uff0c\u6240\u4ee5\u6211\u5b89\u88c5\u4e86Rclone\uff0c\u6211\u73b0\u5728\u5c06\u5b83\u7528\u4e8e\u5982\u6b64\u591a\u4e0d\u540c\u7684\u76ee\u7684\uff0c\u6211\u53ef\u80fd\u5e94\u8be5\u4e3a\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u53ef\u6301\u7eed\u7684\u9879\u76ee\u800c\u6350\u6b3e-\u6240\u4ee5\u6211\u505a\u5230\u4e86\uff01\n\u5bf9\u4e8e\u7535\u5b50\u90ae\u4ef6\u6765\u8bf4\uff0cEvolution\u76f8\u5f53\u8f7b\u4fbf\uff0c\u6211\u559c\u6b22\u5b83\u66f4\u50cf\u662f\u4e00\u6b3e\u7cbe\u7b80\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c31\u50cfMacOS Mail\u4e00\u6837\uff0c\u6ca1\u6709\u5404\u79cd\u82b1\u54e8\u7684\u5c0f\u73a9\u610f\u513f\u963b\u788d\u6211\u7ba1\u7406\u7535\u5b50\u90ae\u4ef6\u3002\nPI OS\u7ec8\u7aef\u662f\u4e00\u4e2a\u8db3\u591f\u7684(\u5373\u4f7f\u529f\u80fd\u66f4\u5c11)CLI\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5c3d\u7ba1\u6211\u9519\u8fc7\u4e86\u901a\u8fc7\u7ec8\u7aef\u9996\u9009\u9879\u672c\u8eab\u8f7b\u677e\u7ba1\u7406\u914d\u7f6e\u6587\u4ef6\u548c\u73af\u5883\u7684\u80fd\u529b\u3002\nPidgin\u5728PI\u4e0a\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u6211\u603b\u662f\u5728\u5b83\u548cLimeChat\u4e4b\u95f4\u5207\u6362\u4ee5\u8fdb\u884cIRC\u901a\u4fe1\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u9664\u4e86\u65e0\u6cd5\u4e3a\u6211\u7684\u4e00\u4e9b\u9879\u76ee\u627e\u5230\u9884\u7f6e\u7684arm64Docker\u6620\u50cf\u4e4b\u5916\uff0c\u6211\u5df2\u7ecf\u53ef\u4ee5\u6beb\u65e0\u969c\u788d\u5730\u5b8c\u6210\u5927\u91cf\u7684\u5f00\u6e90\u548c\u57fa\u7840\u8bbe\u65bd\u5de5\u4f5c\u4e86\u3002\n\u6211\u610f\u8bc6\u5230\uff0c\u6211\u5728Mac\u4e0a\u505a\u7684\u5f88\u591a\u5c0f\u4e8b\u8981\u4e48\u4e0d\u80fd\u5728PI\u4e0a\u505a\uff0c\u8981\u4e48\u53ef\u4ee5\u7528\u4e00\u79cd\u4e0d\u90a3\u4e48\u4ee4\u4eba\u6109\u5feb\u7684\u65b9\u5f0f\u505a\u3002\n\u4f8b\u5982\uff0c\u6211\u4f7f\u7528Reeder\u5feb\u901f\u6d4f\u89c8\u6211\u6bcf\u5929\u65e9\u4e0a\u5173\u6ce8\u7684\u51e0\u5341\u4e2aRSS\u63d0\u8981\u2026\u2026\u3002\u4e3a\u6b64\uff0c\u4e0d\u5f97\u4e0d\u4f7f\u7528Web\u7528\u6237\u754c\u9762\u662f\u4ee4\u4eba\u4e0d\u5feb\u7684\u3002\u6211\u627e\u4e0d\u5230\u4efb\u4f55\u4e0eFeedly\u4e00\u8d77\u5de5\u4f5c\u7684Feedly\u9605\u8bfb\u5668\uff0c\u53ef\u4ee5\u5728ARM64\u4e0a\u7f16\u8bd1\uff1a(\u3002\n\u53e6\u5916\uff0c\u4e0d\u7ba1\u4f60\u559c\u6b22\u8fd8\u662f\u8ba8\u538c\uff0c\u6211\u90fd\u4f1a\u5927\u91cf\u4f7f\u7528\u63a8\u7279\u3002\u6211\u53d1\u73b0\u5e76\u5b89\u88c5\u4e86Cawbird\uff0c\u8fd9\u5e94\u8be5\u5f52\u529f\u4e8e\u7ef4\u62a4\u4eba\u5458\uff0c\u5b83\u662f\u4e00\u6b3e\u5b8c\u5168\u591f\u7528\u7684Twitter\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u6211\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\n\u6211\u4e0d\u5f97\u4e0d\u7528Snap\u5b89\u88c5\u5b83\u3002\u8fd9\u610f\u5473\u7740\u6211\u5fc5\u987b\u5b89\u88c5Snapd\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8PI\u3002\n\u6211\u4e0d\u60f3\u5728\u8fd9\u91cc\u6df1\u5165\u8ba8\u8bbaSnap\uff0c\u4f46\u6211\u60f3\u6211\u5e94\u8be5\u6307\u51fa\u7684\u4e00\u70b9\u662f\uff0c\u5bf9\u4e8e\u6211\u60f3\u8981\u4f7f\u7528\u7684\u51e0\u4e4e\u6bcf\u4e00\u6b3e\u8f6f\u4ef6\uff0c\u6211\u90fd\u5fc5\u987b\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u8bd5\u56fe\u627e\u5230\u4efb\u4f55\u53ef\u4ee5\u5728Linux\u4e0a\u8fd0\u884c\u7684\u8f6f\u4ef6-\u7136\u540e\u5c06\u8303\u56f4\u7f29\u5c0f\u5230Linux ARM64\uff1b\u4e0a\u3002\u7136\u540e\uff0c\u6211\u901a\u5e38\u8981\u82b1\u51e0\u5206\u949f\u65f6\u95f4\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u5b83\uff0c\u5728\u7cfb\u7edf\u4e0a\u653e\u7f6e\u6211\u81ea\u5df1\u7684\u5feb\u6377\u65b9\u5f0f(\u8fd9\u6837\u6211\u5c31\u4e0d\u5fc5\u6bcf\u6b21\u60f3\u67e5\u770bTwitter\u65f6\u90fd\u6253\u5f00\u7ec8\u7aef)\u7b49\u7b49\u3002\nPI\u5728ARM\u4e0a\u8fd0\u884c\u7684\u4e8b\u5b9e\u52a0\u5267\u4e86\u6240\u6709\u8fd9\u4e9b\u95ee\u9898(4K\u56f0\u96be\u3001\u5fc5\u987b\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u3001\u627e\u4e0d\u5230\u5e94\u7528\u7a0b\u5e8f)\uff0c\u4f46\u5728\u66f4\u5e7f\u6cdb\u7684Linux\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u95ee\u9898\u3002\n\u6211\u7edd\u5bf9\u4e0d\u662f\u5728\u8d2c\u4f4e\u65e0\u6570\u4e3aLinux\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u6e90\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6240\u505a\u7684\u4f1f\u5927\u5de5\u4f5c\u3002\u4ed6\u4eec\u6240\u505a\u7684\u5927\u91cf\u5de5\u4f5c\u4e0d\u4ec5\u901a\u5e38\u5f97\u4e0d\u5230\u516c\u5e73\u7684\u8865\u507f\uff0c\u800c\u4e14\u4ed6\u4eec\u4e5f\u5f97\u4e0d\u5230\u516c\u53f8\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u5927\u91cf\u5f00\u53d1\u8d44\u6e90\u3001\u53ef\u4f9b\u6d4b\u8bd5\u7684\u786c\u4ef6\u7b49\u65b9\u9762\u7684\u5e2e\u52a9\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0cGIMP\u3001Blender\u3001Cawbird\u7b49\u8f6f\u4ef6\u90fd\u62e5\u6709\u8fc7\u53bb\u5341\u5e74\u6216\u66f4\u957f\u65f6\u95f4\u4ee5\u6765\u7684\u6301\u4e45\u529b\u3002\n\u4f46\u662f\uff0c\u9664\u975e\u6211\u4eec\u80fd\u627e\u5230\u65b9\u6cd5\u6765\u5438\u5f15\u90a3\u4e9b\u6709\u65f6\u95f4\u548c\u8d44\u6e90\u5728Linux\u4e0a\u6784\u5efa\u66f4\u591a\u53ef\u7528\u7684\u548c\u53ef\u8bbf\u95ee\u7684\u8f6f\u4ef6\u7684\u4eba\u548c\u56e2\u961f\uff0c\u5426\u5219Linux\u684c\u9762\u5e74\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3a\u4f20\u8bf4\u4e2d\u7684Linux\u684c\u9762\u5e74\u3002\n\u968f\u7740\u8fd9\u4e00\u5929\u7684\u6d41\u901d\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u770b\u770b\u6211\u662f\u5426\u80fd\u505a\u4e00\u4e9b\u6211\u9700\u8981\u505a\u7684A/V\u5de5\u4f5c\uff0c\u4ee5\u5236\u4f5c\u8fd9\u7bc7\u5e16\u5b50\u65e9\u4e9b\u65f6\u5019\u5728PI\u4e0a\u94fe\u63a5\u7684\u89c6\u9891\u3002\u6709\u4e00\u4e9b\u5f00\u6e90\u7f16\u8f91\u5668\uff0c\u5982Kdenlive\u548cOpenshot\uff0c\u5f53\u7136\u4e5f\u6709\u5f00\u6e90A/V\u9886\u57df\u7684\u8001\u724c\u7f16\u8f91\u5668\uff0c\u5982VLC\u548cFFmpeg(\u90fd\u9884\u88c5\u5728PI\u4e0a)\u3002\n\u4f46\u4e0eiMovie\u4e0d\u540c\uff0c\u751a\u81f3\u4e0eFinal Cut Pro X\u6216Adobe Premiere Pro\u7b49\u66f4\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u540c\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u6295\u5165\u4f7f\u7528\u4e4b\u524d\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\u6211\u6ca1\u6709\u65f6\u95f4\u5168\u9762\u56de\u987e\u7f16\u8f91\u5957\u4ef6\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cb\u6211\u53ea\u662f\u60f3\u8ba9\u6211\u7684\u97f3\u9891\u548c\u89c6\u9891\u8bbe\u5907\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6211\u6253\u5f00Zoom\uff0c\u5b83\u5c06\u6211\u7684\u7f57\u6280C920\u7f51\u7edc\u6444\u50cf\u5934\u8bc6\u522b\u4e3a\u89c6\u9891\u6e90--\u4f46\u6211\u65e0\u6cd5\u9009\u62e9\u5b83\u7684\u9ea6\u514b\u98ce\u4f5c\u4e3a\u97f3\u9891\u6e90\u3002\u6211\u770b\u5230\u4e86Behringer USB\u97f3\u9891\u63a5\u53e3\uff0c\u4f46\u5f53\u6211\u9009\u62e9\u5b83\u65f6\uff0c\u6ca1\u6709\u58f0\u97f3\u3002\n\u6211\u8bd5\u8fc7\u84dd\u8272\u725b\u4ed4\u88e4\uff0c\u5b83\u65e2\u770b\u4e0d\u5230\u6444\u50cf\u5934\uff0c\u4e5f\u770b\u4e0d\u5230\u9ea6\u514b\u98ce\u3002\u552f\u4e00\u7684\u9009\u62e9\u662f\u901a\u8fc7\u7535\u8bdd\u52a0\u5165\u3002\u5f53\u6211\u70b9\u51fb\u7684\u65f6\u5019\uff0c\u84dd\u8272\u725b\u4ed4\u88e4\u7684\u754c\u9762\u88ab\u9501\u5b9a\u4e86\uff0c\u6211\u4e0d\u5f97\u4e0d\u5237\u65b0\u754c\u9762\uff01\n\u7136\u540e\u6211\u4f7f\u7528aplay-l\u5217\u51fa\u4e86\u6211\u7684\u97f3\u9891\u64ad\u653e\u8bbe\u5907\uff0cBehringer\u754c\u9762\u663e\u793a\u5728\u90a3\u91cc\u3002aRecord\u8fd8\u5c06\u7f51\u7edc\u6444\u50cf\u5934\u548cBehringer\u5217\u4e3a\u6709\u6548\u7684\u8f93\u5165\u8bbe\u5907\uff1a\n$aRecord--List-Devices*\u6355\u83b7\u786c\u4ef6\u8bbe\u5907\u5217\u8868*\u53612\uff1aU192k[UMC202HD 192k]\uff0c\u8bbe\u59070\uff1aUSB\u97f3\u9891[USB\u97f3\u9891]\uff1b\u5b50\u8bbe\u5907\uff1a1/1\uff1b\u5b50\u8bbe\u5907#0\uff1a\u5b50\u8bbe\u5907#0\u53613\uff1aC920[HD Pro Webcam C920]\uff1b\u8bbe\u59070\uff1aUSB\u97f3\u9891[USB\u97f3\u9891]\uff1b\u5b50\u8bbe\u5907\uff1a1/1\uff1b\u5b50\u8bbe\u5907#0\uff1a\u5b50\u8bbe\u5907#0\u3002\n\u4e8e\u662f\uff0c\u6211\u82b1\u4e86\u5927\u7ea630\u5206\u949f\u7684\u65f6\u95f4\u5c1d\u8bd5\u7528\u7f51\u7edc\u6444\u50cf\u5934\u7684\u9ea6\u514b\u98ce\u6216\u8d1d\u6797\u683c\u63a5\u53e3\u6765\u5f55\u97f3\uff0c\u7ecf\u8fc7\u591a\u6b21\u5f92\u52b3\u7684\u5c1d\u8bd5\u540e\uff0c\u6211\u60f3\u51fa\u4e86\u4ee5\u4e0b\u4e24\u6761\u6709\u6548\u7684FFmpeg\u5492\u8bed\uff1a\u201cFFmpeg\u5492\u8bed\u201d\u3001\u201cFFmpeg\u5492\u8bed\u201d\u548c\u201cFFmpeg\u5492\u8bed\u201d\u3002\n#\u4ece\u7f51\u7edc\u6444\u50cf\u5934\u83b7\u53d6\u58f0\u97f3\u548c\u89c6\u9891\uff1a$ffmpeg-ar 44100-ac 2-f alsa-i hw\uff1a3\uff0c0-f V4L2-codec\uff1avH264-Framerate 30-VIDEO_SIZE 1920x1080-itsoOffset0.5-i/dev/Video0-copy inkf-codec\uff1av copy-codec\uff1aa aac-ab 128k-g 10-f mp4test.mp4#\u6765\u81ea\u8d1d\u6797\u683c\u7684\u58f0\u97f3\u3002\u6765\u81ea\u7f51\u7edc\u6444\u50cf\u5934\u7684\u89c6\u9891\uff1affmpeg-ar 44100-ac 2-f alsa-aco dec pcm_s32le-i hw\uff1a2\uff0c0-f V4L2-codec\uff1avh264-frame 30-video_size 1920x1080-itsooffset0.5-i/dev/Video0-copy inkf-codec\uff1av copy-codec\uff1aa aac-ab 128k-g 10-f mp4test-webcam-audio.\u3002\n\u6211\u4e5f\u8bd5\u8fc7\u5728VLC\u4e2d\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u7684\u754c\u9762\u5bf9\u6211\u6765\u8bf4\u540c\u6837\u4ee4\u4eba\u8d39\u89e3\u3002\u6211\u4e0d\u60f3\u82b145\u5206\u949f\u9605\u8bfb\u4eba\u5de5\u6587\u6863\u6216\u5728\u7ebf\u6587\u6863\uff0c\u5c24\u5176\u662f\u5f53\u6211\u5df2\u7ecf\u4e60\u60ef\u4e86QuickTime\u7684\u6355\u6349\u754c\u9762\u7b49\u8d85\u7ea7\u76f4\u89c2\u7684\u4e1c\u897f\u65f6\uff0c\u6211\u5c31\u4e0d\u60f3\u8fd9\u6837\u505a\u4e86\uff0c\u56e0\u4e3a\u6211\u4e0d\u60f3\u82b145\u5206\u949f\u6765\u9605\u8bfb\u4eba\u5de5\u6587\u6863\u6216\u5728\u7ebf\u6587\u6863\uff0c\u5c24\u5176\u662f\u5f53\u6211\u4e60\u60ef\u4e86QuickTime\u7684\u6355\u6349\u754c\u9762\u8fd9\u6837\u7684\u8d85\u7ea7\u76f4\u89c2\u7684\u4e1c\u897f\u65f6\uff1a\n\u5f53\u8c08\u5230\u5f55\u5236\u89c6\u9891\u65f6\uff0c\u53e6\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\u662f\uff1aPI\u7684\u5904\u7406\u5668\u4e0d\u80fd\u4ee51080p\u7684\u901f\u5ea6\u52a8\u6001\u8f6c\u7801\u548c/\u6216\u7f16\u7801\u3002\u5e78\u8fd0\u7684\u662f\uff0cLogitech C920\u5177\u6709\u5185\u7f6e\u7684\u786c\u4ef6H.264\u7f16\u7801\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u76f4\u63a5\u4ece\u6444\u50cf\u5934\u63d0\u53d6\u6d41\u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u4ece\u800c\u7ed5\u8fc7\u4efb\u4f55\u6e32\u67d3\u3002\n\u4f46\u5982\u679c\u6211\u7528\u53e6\u4e00\u53f0\u6ca1\u6709\u5185\u7f6e\u7f16\u7801\u5668\u7684\u76f8\u673a\u8bd5\u4e00\u8bd5\uff0cPI\u53ea\u80fd\u57281080p-30fps\u4e0b\u4ee55-8fps\u7684\u901f\u5ea6\u62cd\u6444\u3002\u5982\u679c\u6211\u5c06\u5176\u8bbe\u7f6e\u4e3a480p/30fps\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u5f55\u5236\u548c\u4fdd\u5b58\u5230MP4\u3002\n\u5bf9\u4e8e\u7eaf\u97f3\u9891\u5f55\u5236\uff0c\u65f6\u95f4\u5df2\u7ecf\u5f88\u665a\u4e86\uff0c\u6240\u4ee5\u6211\u8bd5\u4e86\u8bd5GNOME-Audio-Recorder\uff0c\u53d1\u73b0\u5b83\u751a\u81f3\u65e0\u6cd5\u5f00\u59cb\u5f55\u5236\uff0c\u4e5f\u627e\u4e0d\u5230\u4efb\u4f55\u97f3\u9891\u6e90\uff0c\u5b83\u53ea\u4f1a\u7ed9\u6211\u4e00\u4e2a\u9519\u8bef\uff1a\u65e0\u6cd5\u5c06\u7ba1\u9053\u8bbe\u7f6e\u4e3a\u5f55\u5236\u72b6\u6001\u3002\n\u90a3\u4e48\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4f1a\u63a8\u8350PI 4\u4f5c\u4e3a\u4e00\u6b3e\u503c\u5f97\u63a8\u8350\u7684\u901a\u7528\u8ba1\u7b97\u673a\u7ed9\u4efb\u4f55\u4eba\u5417\uff1f\u7edd\u5bf9\u4e0d\u662f\u3002\u5bf9\u4e8e\u67d0\u4e9b\u8ba1\u7b97\u673a\u7528\u6237\uff0c\u6211\u4f1a\u63a8\u8350\u5b83\u4f5c\u4e3a\u4e00\u53f0\u6709\u4ef7\u503c\u7684\u901a\u7528\u8ba1\u7b97\u673a\u5417\uff1f\u5f53\u7136\u662f\u7684\uff01\n\u5982\u679c\u60a8\u5bf9\u8ba1\u7b97\u673a\u7684\u4f7f\u7528\u66f4\u591a\u5730\u9762\u5411\u6d4f\u89c8\u5668\u3001\u4ee3\u7801\u7f16\u8f91\u5668\u548c\u547d\u4ee4\u884c(\u4f8b\u5982\uff0c\u540e\u7aefWeb\u5f00\u53d1\u3001\u57fa\u7840\u8bbe\u65bd\u5f00\u53d1\u3001\u7f16\u5199/\u535a\u5ba2\u7b49)\uff0c\u90a3\u4e48PI\u5c31\u5b8c\u5168\u591f\u7528\u4e86\uff0c\u5e76\u4e14\u5177\u67098 GB\u7684RAM\uff0c\u5373\u4f7f\u60a8\u6253\u5f00\u4e86\u5f88\u591a\u9009\u9879\u5361\uff0cChromium\u4e5f\u8fd0\u884c\u5f97\u5f88\u597d\u3002\u5728Flirc\u7684\u6848\u4f8b\u4e2d\uff0c\u5b83\u4e5f\u662f\u6c89\u9ed8\u7684\u3002\n\u4e00\u4e2a\u50cf\u6837\u7684\u952e\u76d8\u3001\u9f20\u6807\u3001\u663e\u793a\u5668\u3001\u5916\u7f6e\u56fa\u6001\u786c\u76d8\u548c75\u7f8e\u5143\u7684PI\u7684\u603b\u6210\u672c\u63a5\u8fd1250\u7f8e\u5143\uff0c\u8fd9\u4e0e\u4f4e\u7aefChromebook\u548c\u8001\u5f0f\u4e8c\u624b\u7b14\u8bb0\u672c\u7535\u8111\u5177\u6709\u7ade\u4e89\u529b\u3002\n\u6211\u6b63\u5728\u8003\u8651PI4\u7684\u4e00\u4e2a\u7528\u4f8b\u662f\u6211\u7684\u5b69\u5b50\u4eec\u7684\u7b2c\u4e00\u53f0\u8ba1\u7b97\u673a\u3002\u5e74\u9f84\u6700\u5927\u7684\u5df2\u7ecf\u5230\u4e86\u53ef\u4ee5\u5f00\u59cb\u5728\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u5e74\u9f84\u4e86\uff0c\u5c31\u50cf\u6211\u5b66\u4e60DOS CLI\u4e00\u6837(\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d)\uff0c\u4ed6\u53ef\u4ee5\u5728Debian\u4e0a\u5b66\u4e60\uff0cDebian\u751a\u81f3\u6709\u4e00\u4e2a\u5f88\u68d2\u7684GUI\uff01\n\u4f46\u662f\uff0c\u5982\u679c\u4f60\u82b1\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u4f7f\u7528\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982TweetDeck\u6216Tweetbot\uff0c\u5a92\u4f53\u7f16\u8f91\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982Final Cut Pro\u6216iMovie\uff0c\u97f3\u9891\u5236\u4f5c\u5e94\u7528\u7a0b\u5e8f(\u5982\u64ad\u5ba2)\uff0c\u6216\u8005\u5927\u91cf\u56fe\u50cf\u7f16\u8f91\u6216\u56fe\u5f62\u63d2\u56fe\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982Adobe\u7684\u90a3\u4e9b\u5e94\u7528\u7a0b\u5e8f(\u6216\u7c7b\u4f3c\u7684Pixelmater/Acorn\uff0cSketch\u7b49)\uff0c\u90a3\u4e48\u4f60\u76ee\u524d\u53ef\u4ee5\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdc\u8fdc\u6bd4\u4e0d\u4e0a\u5b83\u4eec\u7684\u7b49\u4ef7\u7269(\u9664\u975e\u4f60\u613f\u610f\u653e\u5f03\u5f88\u591a\u53ef\u7528\u6027\u548c\u7a33\u5b9a\u6027\u65b9\u9762\u7684\u6295\u5165\n\u6211\u53ef\u80fd\u4f1a\u8d8a\u6765\u8d8a\u591a\u5730\u5c06PI\u7528\u4e8e\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6027\u4ef7\u6bd4\u548c\u80fd\u6548\u6bcf\u4e00\u4ee3\u90fd\u5728\u53d8\u5f97\u66f4\u597d\uff0c\u751a\u81f3\u5728\u67d0\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u4e0e\u66f4\u6602\u8d35\u7684\u8ba1\u7b97\u673a\u7ade\u4e89\u3002\u800cPI 4\u662f\u6700\u597d\u7684\uff0c\u4e5f\u662f\u6700\u5bb9\u6613\u8fdb\u5165\u7684\u5e73\u53f0\u4e4b\u4e00\u3002\n\u4f46\u662f\uff0c\u9057\u61be\u7684\u662f\uff0c\u6211\u4e0d\u8ba4\u4e3a\u4eca\u5e74\u662fLinux\u53f0\u5f0f\u673a\u4e4b\u5e74\u3002\u603b\u7684\u6765\u8bf4\uff0c\u6211\u8ba4\u4e3a\u4e3b\u6d41\u53d7\u4f17\u7684\u684c\u9762Linux\u6c38\u8fdc\u662f20\u5e74\u540e\u7684\u4e8b\uff0c\u5c31\u50cf\u6838\u805a\u53d8\u4e00\u6837\u3002", "note_en": "Earlier this week, as part of my work doing a more complete review of the Raspberry Pi 4 (coming soon!), I decided I&#39;d go all-in and spend one entire day working entirely (or at least as much as possible) from a Raspberry Pi.\n And not just doing some remote coding sessions or writing a blog post\u2014that&#39;s easy to do on a Chromebook, a tablet, or any cheap old laptop\u2014but trying to do all the things I do in a given day, like:\n Use Slack (you laugh, but Slack uses more memory than most of the other apps I&#39;m running at any given time\u2014combined!)\n So as with any project of this scope, I  created a GitHub repository,  pi-dev-playbook, to track my work\u2014and, to be able to immediately replicate my development environment on a new Pi, should the need arise.\n Preliminary spoiler / tl;dr: I ended up giving up after one day. I was hoping to go a few days, but the small pain points (in almost every area I explored) added up to a more frustrating experience using the Pi as a main computer replacement than I expected. It&#39;s great for some use cases, but not great for mine. More detail later.\n     The first task of the day was to unplug my MacBook Pro from my  CalDigit TS3 Plus Thunderbolt 3 hub, and then figure out how to get everything I needed plugged into my Pi.\n I plugged an AmazonBasics powered  USB 3.0 hub into the Pi. I chose a powered hub to prevent the Pi&#39;s internal bus from having to supply power to all my devices, which included:\n A Kensington 240 GB SSD, in an  Inateck USB 3.0 SATA enclosure. I used this as the boot volume following the directions I mentioned in my previous blog post,  I&#39;m booting my Raspberry Pi 4 from a USB SSD.\n You don&#39;t really realize how much of a mess of cables you end up with when switching computers\u2014or how good you have it if you&#39;ve jumped straight into the ThunderBolt or USB-C #dongleLife. Moving all these connections resulted in quite a rat&#39;s nest:\n  I plugged in the official Pi 4 USB-C power supply, and a micro HDMI to HDMI adapter, which went into my  LG 4K 27&#34; monitor, and waited for the Pi to boot!\n  The first thing I did\u2014which took almost 30 minutes\u2014was try to figure out how to get 4K (at 30 Hz\u2014the Pi can&#39;t output 60 Hz over its HDMI connection) working with a consistent font size across all the applications and system controls.\n The settings in the Appearance preferences seemed to apply to some window chrome and buttons, but not internally in applications. So, for example, the File Manager&#39;s main window had readable text after I increased the font size at 4K resolution, but in order to make filenames and other listings readable, I had to go into the  File Manager&#39;s settings and increase the font size there.\n  So, next, I turned on &#39;Pixel Doubling&#39;, which basically runs the Pi at 4K, but with most things rendered at 1080p, with every pixel doubled in both the X and Y dimension.\n This is okay if you want to play games (what few may run at 4K) and watch videos (with some slight  tearing at 4K) in glorious 4K resolution, while letting other things on the computer render at a more pleasantly-legible 1080p resolution.\n In the end, after futzing with settings for a long while, I decided to stick to native 1080p resolution, even though it made my monitor feel slightly old and outdated (compared to the crisp &#39;Retina&#39; 4K I&#39;m used to from the Mac), because it was:\n It allowed the Pi&#39;s GPU to apply anti-aliasing, which is easier on my eyes than the blocky look of Pixel-Doubled-1080p.\n It allowed a 60 Hz refresh rate, which made my eyes more comfortable whenever I was scrolling or watching 60fps video.\n Throughout this time, I also had to ditch using my Apple Magic Trackpad, because even after tweaking a number of settings (like enabling  NaturalScrolling and changing the cursor acceleration), the tracking never felt very precise. It kind of felt like the Trackpad was &#39;drunk&#39;.\n I plugged it into the Pi directly, and still had the issue. So I switched to an old Logitech mouse I had in the office, which worked better (but wow, do I hate scroll wheels after using trackpads for years!).\n  At this point, as I was starting to get more comfortable in the Pi&#39;s stark UI (LXDE), I started trying to actually do some work.\n I spent a few minutes trying to discern why it was so darn hard to type an em dash in one of my GitHub issues, when Googling found me:\n Hold down one of the Alt keys and type on the numeric keypad: 0150 for an en dash or 0151 for an em dash.\n Oh... so that&#39;s why most people don&#39;t know the difference between an em and en-dash\u2014it&#39;s so hard to type one, much easier to just put a few dashes in --- ... Anyways, on my Mac, I&#39;m used to Shift + Option + dash for em, or Option + dash for en, but we&#39;re getting off the point.\n  The search had, shall we say,  mixed results.  Chromium is a decent browser, and it comes with the Pi. I had no real qualms there, besides the fact that Google probably still finds ways to track my every move with it.\n And I found  VSCodium to be a decent (if slightly overweight, IMO) code editor to replace my preferred editor,  Sublime Text 3. Note that Sublime Text 3  does have a Linux release, just not for ARM64. Maybe that will change someday.\n In fact, that&#39;s a theme I ran into a lot\u2014many apps I use regularly have a full-fledged Linux version, but precious few would compile on ARM64.\n Anyways, I tried (and failed) to compile Dropbox on the Pi OS beta, so I instead installed  Rclone, which I use for so many different purposes now I should probably donate towards making it a sustainable project\u2014 so I did!.\n  For email,  Evolution was fairly lightweight and I liked that it was more a trimmed-down app like macOS Mail, without all kinds of fancy doodads that get in the way of me just managing email.\n The Pi OS Terminal is an adequate (if even more sparsely-featured) CLI utility, though I missed the ability to easily manage profiles and the environment via the Terminal preferences itself.\n And  Pidgin works great on the Pi and I&#39;ve always switched between it and LimeChat for IRC communications.\n At this point, I could already do a bunch of my open source and infra work without much hindrance, outside of not being able to find pre-built  arm64 Docker images for some of my projects.\n   I realized that there are a ton of little things that I do on my Mac that I either could not do on the Pi, or could do but in a much less pleasant way.\n For example, I use Reeder to quickly browse through a few dozen RSS feeds I follow each morning... and having to use a web UI for that purpose was off-putting. I couldn&#39;t find any feed reader that works with Feedly that would compile on ARM64 :(\n Also, love it or hate it, I use Twitter heavily. I found and could install  Cawbird, which\u2014credit to the maintainers\u2014is a wholly adequate Twitter app. But I had two problems with it:\n I had to install it with Snap. Which meant I had to install  snapd, then reboot the Pi.\n I won&#39;t dig into Snap here, but I guess one point I should make is that for  almost every piece of software I wanted to use, I had to spend a lot of time just trying to find any that would work on Linux\u2014then narrowing that to &#39;on Linux ARM64&#39;. And then I had to usually spend a few minutes compiling it from source, placing my own shortcuts on the system (so I wouldn&#39;t have to open a Terminal every time I wanted to check Twitter), etc.\n All of these issues (4K difficulties, having to compile apps, not  finding apps) are exacerbated by the fact that the Pi runs on ARM, but it is still a problem in the wider Linux ecosystem.\n I am definitely not denigrating the great work done by countless open source software developers who build apps for Linux. Not only are they typically not compensated fairly for the amount of great work they do, they do not have the benefit of a corporation assisting them with great development resources, hardware to test on, etc. It&#39;s amazing to me that software like GIMP, Blender, Cawbird, et all have the staying power they&#39;ve had over the past decade or more.\n But until we can find ways to entice people and teams who have the time and resources to build more usable and accessible software on Linux, it&#39;s never going to be the fabled &#39;year of the Linux Desktop&#39;.\n  As the day wore on, I thought I&#39;d see if I could do some of the A/V work I needed to do to produce the video linked earlier in this post on the Pi. There are some open source editors like  Kdenlive and  OpenShot, and of course there are venerable stalwarts in the open source A/V realm like VLC and FFmpeg (both pre-installed on the Pi).\n But unlike iMovie, or even more complex apps like Final Cut Pro X or Adobe Premiere Pro, these apps have a long way to go before they are &#39;pick up and go&#39; usable. I didn&#39;t get the time to review editing suites fully because I was hindered at the beginning just trying to get my audio and video devices working correctly.\n I opened Zoom, and it recognized my Logitech C920 webcam as a video source\u2014but I couldn&#39;t select its microphone as an audio source. I saw the Behringer USB audio interface but when I selected it, there was no sound.\n I tried BlueJeans, and it didn&#39;t see either the webcam or any microphone. The only option was to &#39;join by phone&#39;. When I clicked that, the BlueJeans interface locked up and I had to refresh the interface!\n  So then I played around with  aplay -l to list my audio playback devices, and the Behringer interface showed up there. And  arecord also listed both the webcam and the Behringer as valid input devices:\n $ arecord --list-devices **** List of CAPTURE Hardware Devices **** card 2: U192k [UMC202HD 192k], device 0: USB Audio [USB Audio] \u00a0 Subdevices: 1/1 \u00a0 Subdevice #0: subdevice #0 card 3: C920 [HD Pro Webcam C920], device 0: USB Audio [USB Audio] \u00a0 Subdevices: 1/1 \u00a0 Subdevice #0: subdevice #0\n So then I spent about 30 minutes trying to record clips from my webcam, using either the webcam&#39;s mic or the Behringer interface for sound, and after many fruitless attempts came up with the two following FFmpeg incantations that worked:\n # Gets sound and video from the webcam: $ ffmpeg -ar 44100 -ac 2 -f alsa -i hw:3,0 -f v4l2 -codec:v h264 -framerate 30 -video_size 1920x1080 -itsoffset 0.5 -i /dev/video0 -copyinkf -codec:v copy -codec:a aac -ab 128k -g 10 -f mp4 test.mp4  # Sound from Behringer, video from webcam: ffmpeg -ar 44100 -ac 2 -f alsa -acodec pcm_s32le -i hw:2,0 -f v4l2 -codec:v h264 -framerate 30 -video_size 1920x1080 -itsoffset 0.5 -i /dev/video0 -copyinkf -codec:v copy -codec:a aac -ab 128k -g 10 -f mp4 test-webcam-audio.mp4\n I also tried doing the same thing in VLC, but its interface is similarly inscrutable to me. I don&#39;t want to have to spend 45 minutes reading  man documentation or online docs, not when I&#39;m used to something supremely intuitive like QuickTime&#39;s capture interface:\n  One other note when it comes to recording video: the Pi&#39;s processor is not capable of transcoding and/or encoding at 1080p on the fly. Luckily, the Logitech C920 has built-in hardware H.264 encoding, so you can pull that stream directly from the camera and save it to disk, bypassing any rendering.\n But if I tried with another camera I had that didn&#39;t have an encoder built in, the Pi could only record at 5-8 fps at 1080p, 30 fps. It recorded and saved to mp4 just fine if I set it to 480p at 30 fps.\n For audio-only recording, it was getting late in the day, so I tried out  gnome-audio-recorder, and found that it couldn&#39;t even start a recording or find any audio source, it would just give me the error &#34;Unable to set the pipeline to the recording state.&#34;\n   So, in summary, would I recommend the Pi 4 as a worthy general computer for anyone? Definitely no. Would I recommend it as a worthy general computer for a certain subset of computer users. Definitely yes!\n If your use of the computer is more oriented towards the browser, a code editor, and the command line (e.g. backend web development, infrastructure development, writing/blogging, and the like), the Pi is perfectly adequate, and with 8GB of RAM, Chromium runs just fine, even if you have a bunch of tabs open. With a Flirc case, it&#39;s also silent.\n All-in cost would be close to $250 for a decent keyboard, mouse, monitor,  external SSD and the $75 Pi, which is competitive with low-end Chromebooks and older used laptops.\n One use case where I am considering the Pi 4 is for my kids&#39; first computer. The oldest is getting to the age where it would be good to start experimenting on the computer, and just like I learned the DOS CLI (in the early 1990s), he could learn on Debian, which even has a fancy GUI!\n But if you spend a decent amount of time using certain apps like TweetDeck or Tweetbot, a media editing app like Final Cut Pro or iMovie, audio production apps (for things like podcasting), or heavy image editing or graphics illustration apps like those from Adobe (or equivalents like Pixelmater/Acorn, Sketch, etc.), there is nothing even close to their equivalent (unless you&#39;re willing to give up a lot on the usability and stability side) that you can currently run on the Raspberry Pi, even with the 64-bit OS.\n I will likely be using Pis more and more for server applications, as their price/performance ratio and energy efficiency have gotten better with every generation, even to the point of being competitive with much more expensive computers  for certain workloads. And the Pi 4 is one of the best and easy-to-get-into platforms for that.\n But, sadly, I don&#39;t think this year is the &#39;Year of the Linux desktop&#39;. In general, I think &#39;Linux on the Desktop&#39; for a mainstream audience is always going to be 20 years away,  just like nuclear fusion.", "posttime": "2020-06-13 04:23:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "macbook,raspberry-pi,macbook-pro,pro,pi", "title": "\u6211\u628a\u6211\u7684MacBook Pro\u6362\u6210\u4e86\u6811\u8393PI 4 8 GB\uff0c\u4e00\u5929", "title_en": "I Replaced My MacBook Pro with a Raspberry Pi 4 8GB for a Day", "transed": 1, "url": "https://www.jeffgeerling.com/blog/2020/i-replaced-my-macbook-pro-raspberry-pi-4-8gb-day", "via": "", "real_tags": ["macbook", "pro", "pi"]}, {"category": "", "categoryclass": "", "imagename": "9853d03ab26fca0b0bf6352a2e0cb643.png", "infoid": 1006326, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u72ec\u7acb\u53cd\u75c5\u6bd2\u6d4b\u8bd5\u5b9e\u9a8c\u5ba4AV-Compallations\u548c\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(Electronic Frontier Foundation)\u8fdb\u884c\u4e86\u4e00\u9879\u4e3a\u671f\u4e03\u4e2a\u6708\u7684\u7814\u7a76\u9879\u76ee\uff0c\u7ed3\u679c\u663e\u793a\uff0cAndroid\u548cWindows\u8bbe\u5907\u4e0a\u7684\u8ddf\u8e2a\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u7684\u68c0\u6d4b\u7387\u6b63\u5728\u7f13\u6162\u63d0\u9ad8\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\u53d1\u8868\u7684\u8fd9\u9879\u7814\u7a76[PDF]\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u57282019\u5e7411\u6708\uff0c\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u57282020\u5e745\u6708\u3002\n\u7814\u7a76\u4eba\u5458\u89c2\u5bdf\u4e8610\u6b3eAndroid\u79fb\u52a8\u9632\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f\u548c10\u6b3eWindows\u9632\u75c5\u6bd2\u4ea7\u54c1\u662f\u5982\u4f55\u68c0\u6d4b\u5230\u5f53\u4eca\u6700\u6d41\u884c\u7684\u4e00\u4e9b\u8ddf\u8e2a\u8f6f\u4ef6\u6bd2\u682a\u7684\u3002\n\u8fd9\u4e9b\u8ddf\u8e2a\u8f6f\u4ef6\u54c1\u79cd\uff0c20\u4e2a\u5b89\u88c5\u5728Android\u7cfb\u7edf\u4e0a\uff0c10\u4e2a\u5b89\u88c5\u5728Windows\u7cfb\u7edf\u4e0a\uff0c\u6839\u636e\u5b83\u4eec\u5728\u7f8e\u56fd\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\uff0c\u7531\u53cd\u75c5\u6bd2\u6bd4\u8f83\u516c\u53f8\u548c\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(EFF)\u5171\u540c\u9009\u51fa\u3002\n\u7814\u7a76\u53d1\u73b0\uff0c\u8bb8\u591a\u9632\u75c5\u6bd2\u516c\u53f8\u57282019\u5e7411\u6708\u81f32020\u5e745\u6708\u7684\u626b\u63cf\u671f\u95f4\u63d0\u9ad8\u4e86\u68c0\u6d4b\u7387\u3002\n\u53cd\u75c5\u6bd2\u6bd4\u8f83\u516c\u53f8\u8868\u793a\uff0c11\u6708\u4efdAndroid\u4ea7\u54c1\u7684\u68c0\u6d4b\u7387\u4ece30%\u523095%\u4e0d\u7b49\uff0c\u6709\u4e24\u6b3e\u4ea7\u54c1\u68c0\u6d4b\u5230\u7684\u6d4b\u8bd5\u6848\u4f8b\u4e0d\u523050%\u3002\n\u5728Windows\u4e0a\uff0c11\u6708\u4efd\u7684\u603b\u4f53\u68c0\u6d4b\u7387\u76f8\u5bf9\u4e8eAndroid\u6765\u8bf4\u5f88\u5dee\uff0c\u6700\u9ad8\u7684\u68c0\u6d4b\u7387\u53ea\u670970%\uff0c\u53ea\u6709\u4e24\u6b3e\u4ea7\u54c1\u8fbe\u5230\u4e86\u8fd9\u4e2a\u6c34\u5e73\u3002\n\u6d4b\u8bd5\u5b9e\u9a8c\u5ba4\u8868\u793a\uff0c6\u4e2a\u6708\u540e\u76845\u6708\u4efd\uff0c\u5927\u591a\u6570\u4ea7\u54c1--\u65e0\u8bba\u662f\u5b89\u5353\u7cfb\u7edf\u8fd8\u662fWindows\u7cfb\u7edf--\u7684\u68c0\u6d4b\u7387\u90fd\u6709\u6240\u63d0\u9ad8\u3002\n\u5728Android\u4e0a\uff0c\u6bcf10\u4e2a\u4ea7\u54c1\u4e2d\u5c31\u67099\u4e2a\u572875%\u523095%\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u95f4\u88ab\u68c0\u6d4b\u5230\u3002\u5728Windows\u4e0a\uff0c\u6240\u6709\u4ea7\u54c1\u7684\u68c0\u6d4b\u7387\u90fd\u63d0\u9ad8\u5230\u4e8670%\u4ee5\u4e0a\uff0c\u67094\u4e2a\u7a0b\u5e8f\u8fbe\u5230\u4e86100%\u3002\n\u8fd9\u9879\u7814\u7a76\u7684\u53d1\u73b0\u4ee4\u4eba\u9f13\u821e\uff0c\u56e0\u4e3a\u5b83\u8868\u660e\u7f51\u7edc\u5b89\u5168\u884c\u4e1a\u7ec8\u4e8e\u8d76\u4e0a\u4e86\u4e00\u79cd\u7ecf\u5e38\u88ab\u5ffd\u89c6\u7684\u6076\u610f\u8f6f\u4ef6\u5a01\u80c1\u3002\nStalkerware\u662f\u95f4\u8c0d\u8f6f\u4ef6\u7684\u4e00\u4e2a\u7c7b\u522b\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u662f\u4e00\u79cd\u6076\u610f\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u89c6\u4eba\u4eec\u3002\n\u8ddf\u8e2a\u5668\u8f6f\u4ef6\u548c\u95f4\u8c0d\u8f6f\u4ef6\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u8ddf\u8e2a\u5668\u8f6f\u4ef6\u7ecf\u5e38\u4f5c\u4e3a\u5408\u6cd5\u8f6f\u4ef6\u5728\u7f51\u4e0a\u505a\u5e7f\u544a\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u83b7\u5f97\uff0c\u800c\u4e0d\u662f\u5728\u9ed1\u5ba2\u8bba\u575b\u548c\u9690\u79d8\u7684\u5728\u7ebf\u804a\u5929\u4e2d\u51fa\u552e\u3002\nStalkerware\u7ecf\u5e38\u4f2a\u88c5\u6210\u7236\u6bcd\u63a7\u5236\u8f6f\u4ef6\u3001\u5458\u5de5\u8ddf\u8e2a\u8f6f\u4ef6\uff0c\u751a\u81f3\u662f\u9762\u5411\u4f01\u4e1a\u90e8\u95e8\u7684\u8fdc\u7a0b\u8bbf\u95ee\u5de5\u5177\u3002\n\u7136\u800c\uff0c\u5408\u6cd5\u5e94\u7528\u7a0b\u5e8f\u548c\u8ddf\u8e2a\u8f6f\u4ef6\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u8ddf\u8e2a\u8f6f\u4ef6\u5305\u62ec\u4e00\u4e9b\u529f\u80fd\uff0c\u53ef\u4ee5\u63a9\u76d6\u5176\u5728\u5b89\u88c5\u7684\u8ba1\u7b97\u673a/\u667a\u80fd\u624b\u673a\u4e0a\u7684\u5b58\u5728\u3002\n\u867d\u7136\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u5bb6\u957f\u63a7\u5236\u8f6f\u4ef6\u548c\u8fdc\u7a0b\u8bbf\u95ee\u5de5\u5177\u7b49\u5408\u6cd5\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u4f46\u8ddf\u8e2a\u8f6f\u4ef6\u7ecf\u5e38\u4f7f\u7528\u8bef\u5bfc\u6027\u7684\u901a\u7528\u8fdb\u7a0b\u540d\u79f0\uff0c\u6216\u8005\u9690\u85cf\u5176\u5feb\u6377\u65b9\u5f0f\u548c\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807-\u8bd5\u56fe\u5728\u4e0d\u88ab\u6ce8\u610f\u7684\u60c5\u51b5\u4e0b\u8ddf\u8e2a\u7528\u6237\u3002\n\u7531\u4e8e\u8fd9\u4e9b\u7279\u70b9\uff0c\u8ddf\u8e2a\u8f6f\u4ef6\u7ecf\u5e38\u88ab\u65bd\u8650\u7684\u4f34\u4fa3\u7528\u6765\u76d1\u89c6\u4ed6\u4eec\u7684\u53e6\u4e00\u534a\uff0c\u4ece\u90a3\u91cc\u8ddf\u8e2a\u8f6f\u4ef6\u7684\u53e6\u4e00\u4e2a\u540d\u5b57\u5c31\u662fSpouware\u3002\n\u8fd1\u5e74\u6765\uff0c\u5bb6\u5ead\u66b4\u529b\u7ec4\u7ec7\u8b66\u544a\u8bf4\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u5bb6\u5ead\u66b4\u529b\u6848\u4ef6\u6d89\u53ca\u8ddf\u8e2a\u8f6f\u4ef6\u3002\n\u4ece2018\u5e74\u5e74\u4e2d\u5f00\u59cb\uff0c\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a\u4e00\u76f4\u5728\u63a8\u52a8\u7f51\u7edc\u5b89\u5168\u884c\u4e1a\u68c0\u6d4b\u8fd9\u4e9b\u5de5\u5177\u662f\u6076\u610f\u7684\uff0c\u5e76\u76f8\u5e94\u5730\u8b66\u544a\u7528\u6237\u3002\n\u81ea2018\u5e74\u4ee5\u6765\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6740\u6bd2\u516c\u53f8\u5f00\u59cb\u6dfb\u52a0\u8ddf\u8e2a\u8f6f\u4ef6\u68c0\u6d4b\u89c4\u5219\uff0c\u751a\u81f3\u6709\u5c11\u6570\u516c\u53f8\u52a0\u5165\u4e86\u65e8\u5728\u63d0\u9ad8\u4eba\u4eec\u5bf9\u8fd9\u4e00\u5a01\u80c1\u7684\u8ba4\u8bc6\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7--\u53cd\u6f5c\u4f0f\u8f6f\u4ef6\u8054\u76df(Coalition Against Stalkerware)\u3002\n\u672c\u5468\u53d1\u8868\u7684\u8fd9\u9879\u7814\u7a76\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u671d\u7740\u6b63\u786e\u65b9\u5411\u8fc8\u51fa\u7684\u4e00\u6b65\uff0c\u53cd\u75c5\u6bd2\u884c\u4e1a\u73b0\u5728\u663e\u7136\u8ba4\u4e3a\u8ddf\u8e2a\u8f6f\u4ef6\u662f\u6076\u610f\u7684--\u800c\u4e0d\u662f\u628a\u5b83\u89c6\u4e3a\u4ee5\u524d\u4e0d\u4f1a\u89e6\u53d1\u4efb\u4f55\u7c7b\u578b\u7684\u8b66\u544a\u6216\u68c0\u6d4b\u7684\u519b\u6c11\u4e24\u7528\u8f6f\u4ef6\u3002\n\u6839\u636e\u5361\u5df4\u65af\u57fa\u7684\u4e00\u4efd\u62a5\u544a\uff0c2019\u5e74\u8ddf\u8e2a\u5668\u611f\u67d3\u7684\u6570\u91cf\u6bd4\u524d\u4e00\u5e74\u589e\u957f\u4e8640%\u3002", "note_en": "Detections rates for stalkerware applications on Android and Windows devices are slowly improving, according to the findings of a seven-month research project carried out by independent antivirus testing lab AV-Comparatives and the Electronic Frontier Foundation.\n The study [ PDF], published earlier this week, took place in two phases, with the first in November 2019, and the second in May 2020.\n Researchers looked at how 10 Android mobile antivirus apps and 10 Windows antivirus products detected some of today&#39;s most prevalent stalkerware strains.\n The stalkerware strains, 20 on Android and 10 on Windows, were chosen by AV-Comparatives together with the Electronic Frontier Foundation (EFF), based on their popularity in the US.\n  The study discovered that many antivirus companies have improved their detection rates between the November 2019 scan and May 2020.\n     &#34;The detection rates for the Android products in November ranged from 30% to 95%, with two products detecting less than 50% of the testcases,&#34; AV-Comparatives said.\n &#34;On Windows, the overall detection rates in November were poor relative to Android; the highest detection rate was only 70%, and only two products reached this level.\n   &#34;Six months later in May, most products - for both Android and Windows - had improved their detection rates,&#34; the testing lab said.\n &#34;On Android, 9 out of 10 products detected between 75% and 95% of the testcases. On Windows, all products had improved their detection rates to at least 70%, with four programs reaching 100%.&#34;\n  The study&#39;s findings are encouraging, as it shows that the cyber-security industry is finally catching up with a type of malware threat that has often been ignored.\n Stalkerware is a category of spyware, which is a type of malware that -- as it name implies -- can be used to spy on people.\n The difference between stalkerware and spyware is that stalkerware is often advertised online as legitimate software and is easily accessible, rather than being sold on hacker forums and shadowy online chats.\n Stalkerware is often disguised as parental control software, employee tracking software, and even remote access tools meant for the enterprise sector.\n However, the difference between legitimate apps and stalkerware is that stalkerware includes features to disguise its presence on the computer/smartphone it is installed.\n While legitimate apps like parental control software and remote access tools are clearly visible when installed on a device, stalkerware often uses misleading generic process names or hides its shortcuts and app icons -- in an attempt to track the user unnoticed.\n As a result of these features, stalkerware is often used by abusive partners to spy on their significant others, from where stalkerware has received its alternative name of &#34;spouseware.&#34;\n In recent years, domestic abuse organizations have warned about the increasing number of domestic violence cases where stalkerware has been involved.\n Starting with mid-2018, the Electronic Frontier Foundation has been pushing the cyber-security industry to detect these tools as malicious and warn users accordingly.\n Since 2018, more and more antivirus companies have begun adding stalkerware detection rules, and  a few have even joined the  Coalition Against Stalkerware, a non-profit group aimed at raising awareness towards this threat.\n The study published this week can be considered as a step in the right direction, with the antivirus industry now clearly seeing stalkerware as malicious -- rather than seeig it as &#34;dual-use software&#34; that previously didn&#39;t trigger any type of warnings or detections.\n According to a Kaspersky report, the number of  stalkerware infections grew by 40% in 2019, compared to the previous year.", "posttime": "2020-06-13 04:07:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u75c5\u6bd2,\u4ea7\u54c1,detection,\u8f6f\u4ef6", "title": "\u5404\u4e2a\u9632\u75c5\u6bd2\u4ea7\u54c1\u7684Stalkerware\u68c0\u6d4b\u7387\u90fd\u5728\u63d0\u9ad8", "title_en": "Stalkerware Detection Rates Are Improving Across Antivirus Products", "transed": 1, "url": "https://www.zdnet.com/article/stalkerware-detection-rates-are-improving-across-antivirus-products/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u4ea7\u54c1", "detection", "\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "e6ef099aa7119d98c695b410e7e54061.png", "infoid": 1006325, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u9879\u76ee\u4e0a\u6d6a\u8d39\u4e86\u65e0\u6570\u7684\u5468\u672b\u548c\u665a\u4e0a\uff0c\u6211\u603b\u662f\u8bd5\u7740\u53d8\u5f97\u901a\u60c5\u8fbe\u7406\uff0c\u6211\u63a5\u53d7\u4e86\u8bb8\u591a\u6211\u4e0d\u9700\u8981\u6216\u4e0d\u540c\u610f\u7684\u6539\u53d8\u3002\u6211\u6700\u7ec8\u7ef4\u62a4\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u4ee3\u7801\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5bf9\u6211\u6765\u8bf4\u53ea\u662f\u4e00\u79cd\u8d1f\u62c5\u3002RuboCop\u53ea\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4e2a\u4eba\u9879\u76ee\uff0c\u7ed9\u6211\u5e26\u6765\u7684\u53ea\u662f\u5feb\u4e50\u7684\u65e5\u5b50\u5df2\u7ecf\u4e00\u53bb\u4e0d\u590d\u8fd4\u4e86\u3002\u73b0\u5728\u6bcf\u4e2a\u4eba\u90fd\u5bf9\u6211\u6709\u6240\u671f\u5f85\uff0c\u6211\u5c3d\u91cf\u4e0d\u8ba9\u4ed6\u4eec\u5931\u671b\uff0c\u56e0\u4e3a\u6211\u60f3\u4e3a\u793e\u533a\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u3002\u7136\u800c\uff0c\u6211\u89c9\u5f97\u4eba\u4eec\u603b\u662f\u8981\u6c42\u8d8a\u6765\u8d8a\u9ad8\u3002\u91cd\u547d\u540d\u4e00\u5927\u5806\u7c7b\u548c\u65b9\u6cd5\u5f88\u5bb9\u6613\uff0c\u4f46\u8fd9\u79cd\u66f4\u6539\u7684\u771f\u6b63\u5f71\u54cd\u5728\u4e8e\u4e4b\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48--\u957f\u671f\u6ca1\u6709\u4eba\u4f1a\u66f4\u65b0\u7684\u635f\u574f\u7684\u6269\u5c55\uff0c\u56f0\u60d1\u7684\u7528\u6237\uff0c\u4f1a\u56e0\u4e3a\u6211\u505a\u4e86\u4ed6\u4eec\u53cd\u5bf9\u7684\u66f4\u6539\u800c\u751f\u6211\u6c14\u7684\u4eba\u3002", "note_en": "I&#39;ve wasted countless weekends and evenings of my life working on OSS projects, I&#39;ve always tried to be reasonable and accommodating, I&#39;ve accepted many changes that I don&#39;t need or I don&#39;t agree with. I&#39;ve ended up maintaining more and more code that&#39;s just a burden for me in the long run. Gone are the days when RuboCop was just a small personal project that brought me only joy. Now everyone expects something from me and I try not to disappoint them, because I want to do right by the community. And yet - I feel people always demand more and more. Renaming a bunch of classes and methods is easy, but the real impact of such changes is what happens afterwards - the broken extensions who nobody&#39;s going to update for ages, the confused users, the people who&#39;ll be angry with me for doing a change that they are against.", "posttime": "2020-06-13 04:05:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u540d\u5b57,drama,\u9879\u76ee", "title": "RuboCop\u7684\u540d\u5b57Drama Redux", "title_en": "The RuboCop Name Drama Redux", "transed": 1, "url": "https://github.com/rubocop-hq/rubocop/issues/8091", "via": "", "real_tags": ["\u540d\u5b57", "drama", "\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "6b0826fa7b1b02b19fe89652638be73f.png", "infoid": 1006324, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u60b2\u54c0\u800c\u5947\u602a\u7684\u4e8b\u5b9e\u3002\u7279\u6717\u666e\u7684\u7f8e\u56fd\u5df2\u7ecf\u653e\u5f03\u4e86\u51a0\u72b6\u75c5\u6bd2\u3002\n\u5176\u4e2d\u4e09\u4e2a\u663e\u793a\u7684\u662f\u6240\u8c13\u7684\u201cS\u578b\u201d\u66f2\u7ebf\uff0c\u57fa\u672c\u4e0a\u662fS\u5f62\u3002\u6709\u4e9b\u4e1c\u897f\u5448\u6307\u6570\u589e\u957f--\u7136\u540e\u5b83\u5c31\u505c\u6b62\u4e86\u3002\n\u5176\u4e2d\u4e00\u5f20\u663e\u793a\u7684\u662f\u2026\u3002\u7ebf\uff0c\u7a33\u6b65\u5411\u4e0a\u5954\u8dd1\u3002\u8fd9\u5c31\u662f\u7f8e\u56fd--\u5728\u4e00\u573a\u5386\u53f2\u6027\u7684\u5927\u6d41\u884c\u4e2d\u3002\n\u51a0\u72b6\u75c5\u6bd2\u5728\u7f8e\u56fd\u4ece\u6765\u6ca1\u6709\u50cf\u5728\u5927\u591a\u6570\u5176\u4ed6\u5bcc\u88d5\u56fd\u5bb6\u90a3\u6837\u88ab\u963b\u6b62\u8fc7\u3002\u6211\u4eec\u5bf9\u75c5\u6bd2\u7684\u6210\u529f\u53cd\u5e94\u6240\u671f\u671b\u7684\u4e59\u72b6\u7ed3\u80a0\u5f62\u72b6--\u6216\u4efb\u4f55\u5176\u4ed6\u5a01\u80c1\u8981\u7ee7\u7eed\u593a\u8d70\u751f\u547d\u7684\u81f4\u547d\u707e\u96be--\u4ece\u672a\u51fa\u73b0\u8fc7\u3002\n\u7136\u800c\uff0c\u7f8e\u56fd\u5df2\u7ecf\u201c\u91cd\u65b0\u5f00\u653e\u201d\u4e86--\u6211\u5f15\u7528\u4e86\u8fd9\u53e5\u8bdd\uff0c\u56e0\u4e3a\u7f8e\u56fd\u4ece\u672a\u7ecf\u5386\u8fc7\u6b27\u6d32\u6216\u65b0\u897f\u5170\u90a3\u6837\u7684\u4e25\u91cd\u5c01\u9501\u3002\n\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f\u7f8e\u56fd\u5927\u7ea6\u4e00\u534a\u7684\u5dde\u5df2\u7ecf\u770b\u5230\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u4eba\u6570\u51fa\u73b0\u4e86\u65b0\u7684\u4e0a\u5347\u3002\u8fd9\u5c06\u5728\u5168\u56fd\u8303\u56f4\u5185\u4f20\u64ad\uff0c\u56e0\u4e3a\uff0c\u55ef\uff0c\u75c5\u6bd2\u5e76\u4e0d\u771f\u7684\u5728\u4e4e\u5dde\u754c\u3002\n\u6211\u7684\u670b\u53cb\u4eec\uff0c\u8fd9\u662f\u4e00\u573a\u6ca1\u6709\u73b0\u4ee3\u53ef\u6bd4\u7684\u707e\u96be\u3002\u4f46\u8fd9\u5c31\u662f\u4f60\u5bf9\u4e00\u4e2a\u7531\u75af\u72c2\u717d\u52a8\u8005\u9886\u5bfc\u7684\u5931\u8d25\u56fd\u5bb6\u7684\u671f\u671b\uff0c\u4ed6\u4eec\u7684\u653f\u5e9c\u548c\u673a\u6784\u5e76\u6ca1\u6709\u771f\u6b63\u53d1\u6325\u4f5c\u7528-\u9664\u4e86\u6b8b\u9177\u5730\u76d1\u7ba1\u4eba\u6c11-\u5bf9\u5417\uff1f\n\u6628\u5929\u7684\u53cd\u4eba\u7c7b\u7f6a\u4f7f\u5f97\u4eca\u5929\u7684\u7f6a\u884c\u6210\u4e3a\u53ef\u80fd\u3002\u7279\u6717\u666e\u662f\u4e00\u4e2a\u5a01\u6743\u4e3b\u4e49\u8005\uff0c\u4e00\u4e2a\u6cd5\u897f\u65af\u4e3b\u4e49\u8005\uff0c\u4ed6\u6b63\u5728\u505a\u8fd9\u4e9b\u4eba\u6240\u505a\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u4e0d\u5728\u4e4e\u963b\u6b62\u5927\u6d41\u884c\u3002\u4ed6\u4eec\u628a\u5b83\u4eec\u5f53\u4f5c\u6743\u529b\u548c\u63a7\u5236\u7684\u5de5\u5177\uff0c\u5728\u6df7\u4e71\u548c\u6050\u60e7\u4e2d\u8301\u58ee\u6210\u957f\u3002\n\u7f8e\u56fd\u76ee\u524d\u7684\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u603b\u6570\u5b98\u65b9\u6570\u636e\u7ea6\u4e3a11\u4e07\u4eba\u3002\u8fd9\u4f4e\u4f30\u4e86\u75c5\u6bd2\u5bfc\u81f4\u7684\u8d85\u989d\u6b7b\u4ea1\u7684\u771f\u5b9e\u6570\u5b57\uff0c\u53ef\u80fd\u63a5\u8fd115\u4e07\u4eba\u3002\u8fd9\u4e9b\u9884\u6d4b\u4f30\u8ba1\uff0c\u52306\u6708\u5e95\uff0c\u6b7b\u4ea1\u4eba\u6570\u7ea6\u4e3a20\u4e07\u4eba\u3002\u7f8e\u56fd\u6b63\u5904\u4e8e\u8f7b\u677e\u5b9e\u73b0\u5e76\u8d85\u8d8a\u8fd9\u4e00\u76ee\u6807\u7684\u8f68\u9053\u4e0a\u3002\n\u600e\u4e48\u56de\u4e8b\uff1f\u8fd9\u662f\u4e00\u4e2a\u60ca\u4eba\u7684\u3001\u8d85\u73b0\u5b9e\u7684\u3001\u5669\u68a6\u822c\u7684\u6b7b\u4ea1\u4eba\u6570\u3002\u4e16\u754c\u4e0a\u6700\u9ad8\u7684\u3002\n\u7f8e\u56fd\u4eba\u4f3c\u4e4e\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5ffd\u89c6\u4e86\u8fd9\u4e00\u5207\u3002\u4e3a\u4ec0\u4e48\uff1f\u55ef\uff0c\u4e8b\u5b9e\u662f\uff0c\u5927\u591a\u6570COVID\u6b7b\u4ea1\u662f\u4e0d\u6210\u6bd4\u4f8b\u7684\u7a77\u4eba\u548c\u5c11\u6570\u65cf\u88d4\uff0c\u6216\u8005\u8d2b\u7a77\u7684\u5c11\u6570\u65cf\u88d4\u3002\u8fd9\u4e9b\u751f\u547d\u5230\u5e95\u6709\u591a\u91cd\u8981\uff1f\u7136\u540e\u8fd8\u6709\u6240\u6709\u5176\u4ed6\u7684\u95ee\u9898-\u4e00\u4e2a\u638c\u7ba1\u56fd\u5bb6\u7684\u75af\u5b50\uff0c\u4ed6\u7684\u652f\u6301\u8005\u5728\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u4e0a\u547c\u5401\u5728\u8857\u4e0a\u67aa\u6740\u4eba\u4eec\uff0c\u6ca1\u6709\u4eba\u80fd\u5f88\u597d\u5730\u7ef4\u6301\u751f\u8ba1\uff0c\u7b49\u7b49\u3002\n\u7f8e\u56fd\u4eba\u5e94\u8be5\u66f4\u591a\u5730\u5173\u5fc3\u4e16\u754c\u4e0a\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u4eba\u6570\u6700\u9ad8\u7684\u95ee\u9898\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u6216\u4ed6\u4eec\u7684\u4eb2\u4eba\u4ecd\u5c06\u6b7b\u53bb\u3002\u7f8e\u56fd\u4ecd\u5728\u7ecf\u5386\u4e00\u6ce2\u6b7b\u4ea1\u6d6a\u6f6e\uff0c\u591a\u4e8f\u4e86\u201c\u91cd\u65b0\u5f00\u653e\u201d\uff0c\u6b7b\u4ea1\u6d6a\u6f6e\u5c06\u4f1a\u4e0d\u65ad\u9ad8\u6da8\u3002\u800c\u7f8e\u56fd\u4eba\u53ea\u4f1a\u6b7b\u5728\u5b83\u538b\u5012\u6027\u7684\u91cd\u538b\u4e4b\u4e0b\u3002\n\u7136\u800c\uff0c\u8fd9\u5c31\u662f\u7f8e\u56fd\u4eba\u8ba9\u4e16\u754c\u56f0\u60d1\u7684\u5730\u65b9\u3002\u4ed6\u4eec\u7684\u9057\u613f\u3002\u4ed6\u4eec\u4f3c\u4e4e\u771f\u7684\u4e0d\u5728\u4e4e\u81ea\u5df1\u4f1a\u4e0d\u4f1a\u6b7b\u3002\u5f53\u7f3a\u4e4f\u533b\u7597\u4fdd\u5065\u3001\u67aa\u652f\u6216\u6ca1\u6709\u9000\u4f11\u65f6\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u8fd9\u4e48\u505a\u3002\u4ed6\u4eec\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u4e3a\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\u6295\u7968\u3002\u90a3\u4e48\uff0c\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4f1a\u5728\u4e4e\u8fd9\u6b21\u662f\u4e0d\u662f\u75c5\u6bd2\u6740\u6b7b\u4e86\u4ed6\u4eec\u5462\uff1f\n\u6211\u77e5\u9053\u8fd9\u542c\u8d77\u6765\u5f88\u523a\u8033\u3002\u53ef\u90a3\u662f\u771f\u7684\u5440\u3002\u4e16\u754c\u88ab\u8fd9\u6837\u4e00\u4e2a\u793e\u4f1a\u6240\u8ff7\u60d1\uff0c\u8fd9\u4e2a\u793e\u4f1a\u7684\u4eba\u4eec\u4f3c\u4e4e\u5bf9\u4ee4\u4eba\u9707\u60ca\u7684\u6b8b\u5fcd\u3001\u6b8b\u66b4\u548c\u5927\u89c4\u6a21\u6b7b\u4ea1\u5b8c\u5168\u6f20\u4e0d\u5173\u5fc3\uff0c\u51a0\u72b6\u75c5\u6bd2\u4ee5\u66f4\u660e\u663e\u548c\u66f4\u53ef\u6015\u7684\u65b9\u5f0f\u518d\u6b21\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u5728\u8fd9\u4e2a\u793e\u4f1a\u91cc\uff0c\u4eba\u4eec\u4f3c\u4e4e\u5bf9\u4ee4\u4eba\u9707\u60ca\u7684\u6b8b\u5fcd\u3001\u6b8b\u66b4\u548c\u5927\u89c4\u6a21\u6b7b\u4ea1\u5b8c\u5168\u6f20\u4e0d\u5173\u5fc3\uff0c\u51a0\u72b6\u75c5\u6bd2\u4ee5\u66f4\u660e\u663e\u548c\u66f4\u53ef\u6015\u7684\u65b9\u5f0f\u518d\u6b21\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u662f\u5982\u6b64\u771f\u5b9e\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u53ef\u4ee5\u7528\u6570\u5b66\u7684\u65b9\u5f0f\u544a\u8bc9\u4f60\u4eec\u3002\u522b\u62c5\u5fc3\uff0c\u8fd9\u5c06\u662f\u7b80\u5355\u7684\u6570\u5b66\uff0c\u4efb\u4f55\u5c0f\u5b66\u751f\u90fd\u80fd\u638c\u63e1\u3002\n\u65b0\u897f\u5170\u53ea\u670922\u4eba\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\u5982\u679c\u7f8e\u56fd\u6709\u6210\u6bd4\u4f8b\u7684\u6570\u5b57\uff0c\u4f60\u77e5\u9053\u4f1a\u6709\u591a\u5c11\u4eba\u6b7b\u4ea1\u5417\uff1f\u53ea\u67091500\u4e2a\u3002\n\u7f8e\u56fd\u7684\u6b7b\u4ea1\u4eba\u6570\u5e94\u8be5\u4e0d\u4f1a\u8d85\u8fc71\u4e07\u4eba\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u62e5\u6709\u6570\u5341\u4e07\u4eba\u3002\u5b83\u5df2\u7ecf\u6709\u5927\u7ea615\u4e07\u4eba\u4e86\u3002\u7f8e\u56fd\u7684\u6b7b\u4ea1\u4eba\u6570\u5df2\u7ecf\u662f\u5b83\u5e94\u8be5\u6709\u7684\u5341\u5230\u4e00\u767e\u500d\u3002\n\u8fd9\u8ba9\u6211\u4eec\u56de\u7b54\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u751f\u6d3b\u5728\u50cf\u7f8e\u56fd\u8fd9\u6837\u4e00\u4e2a\u5931\u8d25\u7684\u56fd\u5bb6\uff0c\u800c\u4e0d\u662f\u50cf\u65b0\u897f\u5170\u8fd9\u6837\u4e00\u4e2a\u529f\u80fd\u6b63\u5e38\u7684\u56fd\u5bb6\uff0c\u98ce\u9669\u6709\u591a\u5927\uff1f\u55ef\uff0c\u9996\u5148\uff0c\u4f60\u6b7b\u4e8e\u5927\u6d41\u884c\u7684\u51e0\u7387\u8981\u9ad8\u51fa\u5341\u500d\u3002\n\u5341\u5230\u4e00\u767e\u6b21\uff01\u60f3\u60f3\u770b\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u793e\u4f1a\u4e2d\u88ab\u516c\u4ea4\u8f66\u649e\u5230\u7684\u53ef\u80fd\u6027\u662f\u5176\u4ed6\u793e\u4f1a\u7684\u5341\u500d\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u4f60\u6709\u4e00\u767e\u500d\u7684\u53ef\u80fd\u6027\u3002\u4f1a\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u7684\u3002\u4eba\u4eec\u4f1a\u547c\u5401\u516c\u4ea4\u8f66\u6539\u9769\u3002\n\u4f46\u8fd9\u53ea\u662f\u4e00\u79cd\u6210\u672c\u3002\u7f8e\u56fd\u4eba\u6b7b\u4e8e\u4ee5\u4e0b\u6240\u6709\u75be\u75c5\u7684\u53ef\u80fd\u6027\u4e5f\u8981\u9ad8\u51fa\u5341\u500d\u3002\u67aa\u3002\u4e0d\u80fd\u9000\u4f11\u3002\u6ca1\u6709\u533b\u7597\u4fdd\u5065\u3002\u8b66\u5bdf\u7684\u66b4\u884c\u3002\u7f8e\u56fd\u73b0\u5728\u6240\u9762\u4e34\u7684\u6240\u6709\u5947\u602a\u7684\u95ee\u9898\u3002\u5f88\u5feb\uff0c\u7f8e\u56fd\u4eba\u6b7b\u4e8e\u5a01\u6743\u4e3b\u4e49\u4e4b\u624b\u7684\u53ef\u80fd\u6027\u4e5f\u53ef\u80fd\u589e\u52a010\u500d\u3002\n\u751f\u6d3b\u5728\u4e00\u4e2a\u5931\u8d25\u7684\u56fd\u5bb6--\u6bd4\u5982\u7f8e\u56fd--\u8981\u4ed8\u51fa\u975e\u5e38\u771f\u5b9e\u7684\u4ee3\u4ef7\u3002\u7f8e\u56fd\u4eba\u4f3c\u4e4e\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u4ee3\u4ef7\u5c31\u662f\u6b7b\u4e8e\u5176\u4ed6\u5730\u65b9\u751a\u81f3\u4e0d\u518d\u662f\u5a01\u80c1\u7684\u4e1c\u897f\u7684\u53ef\u80fd\u6027\u8981\u9ad8\u51fa\u5341\u500d\u3002\u65e0\u8bba\u662f\u67aa\u652f\u8fd8\u662f\u6d41\u884c\u75c5\u3002\n\u7f8e\u56fd\u4eba\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u4f3c\u4e4e\u5bf9\u8fd9\u4e2a\u4ef7\u683c\u65e0\u52a8\u4e8e\u8877-\u6b7b\u4ea1\u7684\u51e0\u7387\u6bd4\u5176\u4ed6\u5730\u65b9\u9ad8\u51fa\u5341\u500d\u3002\u53ea\u662f\u770b\u8d77\u6765\u5e76\u4e0d\u9002\u5408\u4ed6\u4eec\u3002\n\u4e5f\u8bb8\uff0c\u5c31\u50cf\u4e16\u4eba\u6240\u60f3\u7684\u90a3\u6837\uff0c\u201c\u7f8e\u56fd\u767d\u75f4\u201d\u5c31\u662f\u592a\u7b28\u4e86\uff0c\u641e\u4e0d\u61c2\u3002\u4e5f\u8bb8\uff0c\u5c31\u50cf\u6211\u8ba4\u4e3a\u7684\u90a3\u6837\uff0c\u8bb8\u591a\u7f8e\u56fd\u4eba\u786e\u5b9e\u660e\u767d\u8fd9\u4e00\u70b9\uff0c\u4f46\u4ed6\u4eec\u611f\u5230\u75b2\u60eb\u548c\u65e0\u80fd\u4e3a\u529b\u3002\n\u4e0d\u7ba1\u662f\u54ea\u4e00\u79cd\u3002\u7f8e\u56fd\u73b0\u5728\u662f\u4e00\u4e2a\u5931\u8d25\u7684\u56fd\u5bb6\u3002\u5931\u8d25\u7684\u5dde\u4f1a\u505a\u4e9b\u4ec0\u4e48\uff1f\u4ed6\u4eec\u653e\u5f03\u4e86\u3002\u4ed6\u4eec\u4e0d\u80fd\u63d0\u4f9b\u3002\u4ed6\u4eec\u4e0d\u4f1a\u6267\u653f\u7684\u3002\u6ca1\u6709\u9886\u5bfc\u529b\u3002\u56e0\u6b64\uff0c\u7f8e\u56fd\u6b63\u5728\u653e\u5f03\u51a0\u72b6\u75c5\u6bd2\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u7f8e\u56fd\u4eba\uff0c\u4f60\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u53ef\u80fd\u6027\u5df2\u7ecf\u662f\u7f8e\u56fd\u4eba\u7684\u5341\u5230\u4e00\u767e\u500d\u4e86\u3002\u8fd9\u4e2a\u6570\u5b57\u8fd8\u4f1a\u4e0a\u5347\u3002\n\u73b0\u5728\u4f60\u53ef\u4ee5\u7528\u72ed\u4e49\u7684\u672f\u8bed\u6765\u601d\u8003\u8fd9\u7bc7\u6587\u7ae0\u7684\u6807\u9898\u4e86\u3002\u5728\u7f8e\u56fd\uff0c\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u53ef\u80fd\u6027\u662f\u6b63\u5e38\u793e\u4f1a\u7684100\u500d\u3002\u4f46\u4f60\u4e5f\u53ef\u4ee5\u4ece\u5e7f\u4e49\u4e0a\u6765\u8003\u8651\u5b83\u3002\u751f\u6d3b\u5728\u7f8e\u56fd\u5c31\u662f\u770b\u5230\u4f60\u7684\u4eba\u7c7b\u6f5c\u529b\u5316\u4e3a\u4e4c\u6709\uff0c\u507f\u8fd8\u65e0\u5c3d\u7684\u503a\u52a1\uff0c\u793e\u4f1a\u6d41\u52a8\u6027\u4e0b\u964d\uff0c\u6536\u5165\u4e0b\u964d\uff0c\u5e78\u798f\u611f\u76f4\u7ebf\u4e0b\u964d\uff0c\u81ea\u6740\u7387\u4e0a\u5347\u3002\u6216\u8005\uff0c\u5982\u679c\u4f60\u662f\u5c11\u6570\u65cf\u88d4\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u8b66\u5bdf\u7684\u66b4\u884c\u3002\u95ee\u9898\u662f\uff0c\u7f8e\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u5df2\u7ecf\u8fdc\u8fdc\u4f4e\u4e8e\u5176\u4ed6\u6240\u6709\u5bcc\u88d5\u56fd\u5bb6\uff0c\u800c\u4e14\u6b63\u5728\u5d29\u6e83\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u6211\u7684\u610f\u601d\u662f\uff0c\u73b0\u5728\u751f\u6d3b\u5728\u7f8e\u56fd\u7684\u4ee3\u4ef7\u5c31\u662f\u4f60\u7684\u751f\u6d3b--\u5982\u679c\u4f60\u4f4f\u5728\u52a0\u62ff\u5927\u3001\u6b27\u6d32\u6216\u65b0\u897f\u5170\uff0c\u4f60\u5c31\u4f1a\u6709\u8fd9\u6837\u7684\u751f\u6d3b\u3002\u751f\u6d3b\u8d8a\u5bcc\u88d5\u3001\u8d8a\u7406\u667a\u3001\u8d8a\u5065\u5eb7\u3001\u8d8a\u957f\u4e45\u3001\u8d8a\u81ea\u7531\u3001\u8d8a\u516c\u6b63\u3002\n\u4f60\u4f1a\u6b7b\u7684\u3002\u4f60\u7231\u7684\u4eba\u4f1a\u6b7b\u3002\u4f60\u7684\u53ef\u80fd\u6027\u5316\u4e3a\u4e4c\u6709\u3002\u7ed3\u679c\u6bcf\u4e2a\u4eba\u90fd\u53d8\u5f97\u66f4\u7a77\u4e86--\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3a\u90a3\u4e2a\u79d1\u5b66\u5bb6\u3001\u827a\u672f\u5bb6\u3001\u8bd7\u4eba\u548c\u4f5c\u5bb6\u3002\n\u5931\u8d25\u7684\u56fd\u5bb6\u662f\u60b2\u5267\u7684\u7d20\u6750\u3002\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u5bf9\u7406\u8bba\u5bb6\u6765\u8bf4\u662f\u67d0\u79cd\u62bd\u8c61\u3002\u800c\u662f\u56e0\u4e3a\u4eba\u4eec\u4f1a\u6b7b\u3002\u5728\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u540c\u65f6\uff0c\u6c11\u4e3b\u3001\u81ea\u7531\u3001\u6b63\u4e49\u3001\u771f\u7406\u3001\u4ef7\u503c\u3001\u4f18\u96c5\u3001\u610f\u4e49\u3001\u5c0a\u4e25\u548c\u76ee\u6807\u7684\u7406\u5ff5\u4e5f\u662f\u5982\u6b64\u3002", "note_en": "Here\u2019s a sad and strange truth. Trump\u2019s America has given up on Coronavirus.\n  Three of them show what\u2019s called a \u201csigmoid\u201d curve \u2014 S-shaped, basically. Something grows exponentially \u2014 and then it stops.\n  One of them shows a\u2026line, steadily racing upwards. That\u2019s America \u2014 amidst  an historic pandemic.\n Coronavirus was never stopped in America the way it was   in most of the rest of the rich world. The sigmoid shape we\u2019d expect from a successful response to a virus \u2014 or any other deadly calamity that threatened to just go on claiming lives \u2014 never emerged.\n And yet America\u2019s  already \u201dreopening\u201d \u2014 I put it in quotes because America never had the kind of serious lockdown that say Europe or  New Zealand did.\n The result? About half of American states are already seeing new rises in Coronavirus deaths. That\u2019s going to extend across the country, because, well, a virus doesn\u2019t really care about state lines.\n This, my friends, is   a disaster without modern parallel . But that\u2019s what you\u2019d expect from  a failed state led by  a lunatic demagogue, whose government and institutions don\u2019t really function \u2014  except to police people brutally \u2014 right?\n Yesterday\u2019s crime against humanity enables today\u2019s. Trump is an authoritarian, a fascist, and he is doing what such men do. They don\u2019t care about stopping pandemics. They use them as tools of power and control, thriving on the chaos and fear.\n The current total of Coronavirus deaths in America is officially about 110,000.  That underestimates the true count of excess deaths which the virus results in, which is probably closer to 150,000. The projections estimated around 200,000 deaths by the end of June. America\u2019s on track to  easily hit and exceed that.\n What the? This is a staggering, surreal, nightmarish death toll. The highest in the world.\n Americans seem to have largely tuned all this out. Why? Well, the fact is that the majority of COVID deaths are  disproportionately poor people and minorities, or poor minorities. How much do those lives really matter? Then there are all the other problems \u2014 a lunatic in charge of the country, his enablers calling for people to be shot in the street in the pages of the New York Times, nobody much able to make ends meet, and so forth.\n Americans should care much, much more about being having the world\u2019s highest Coronavirus death toll. Why? Because a lot of them or their loved ones are  still going to die. America is  still having a wave of death, which, thanks to \u201creopening,\u201d is going to surge ever upwards. And Americans are just going to perish under its crushing weight.\n This is   what baffles the world about Americans,  though. Their deathwish. They genuinely don\u2019t seem to care if they die. They didn\u2019t when it was a lack of healthcare, guns, or no retirement. They voted for all those things, over and over again. So why would they care if it was a virus killing them this time?\n I know that sounds harsh. But it\u2019s true. And the world is bewildered by a society of people who, by and large,  seem totally indifferent to shocking levels of cruelty,  brutality, and mass death, which Coronavirus proves all over again, in an even more explicit and gruesome way.\n It\u2019s so true, in fact, that I can put it to you mathematically. Don\u2019t worry, it\u2019s going to be simple math, that any grade schooler can handle.\n New Zealand had just 22 deaths from Coronavirus . If America had proportional numbers, do you know how many deaths it would have had? Just 1500.\n America should have had less than ten thousand deaths. Instead, it is going to have hundreds of thousands. It already has about 150,000. America already has  ten to a hundred times the number of deaths it should have had.\n That lets us answer a question like this: what\u2019s the risk of  living in a failed state like America, over a functional one, like New Zealand? Well, your chances of dying from a pandemic are  ten times higher, for a start.\n Ten to a hundred times! Think about that. Imagine if you were ten times as likely to be hit by a bus in one society versus others. Imagine if you were a  hundred times more likely. Something would be wrong. People would call for bus reform.\n But that\u2019s just one kind of cost. Americans are also ten times more likely to die of all the following things. Guns. No retirement. No healthcare. Police brutality. All the weird problems that America has now. Soon, Americans will be ten times as likely to die  at the hands of authoritarianism, too, probably.\n Living in a failed state \u2014 like America  \u2014 has a very real price. Americans don\u2019t seem to get it. A price like being ten times more likely to die of things that aren\u2019t even threats anymore elsewhere. Whether guns \u2014 or pandemics.\n Americans haven\u2019t quite processed that. They  seem indifferent to that price \u2014 the ten-times-higher chance of dying than elsewhere. It just doesn\u2019t seem to register for them.\n Maybe, like the world thinks,   the American Idiot  is just too dumb to get it. Maybe, like I think, many Americans do get it, but they\u2019re  weary and powerless.\n Either way. America is a failed state now. What do failed states do? They give up. They can\u2019t provide. They won\u2019t govern.  There is no leadership. And so America is giving up Coronavirus.\n  You\u2019re already ten to a hundred times more likely to die of Coronavirus as an American. That number is going to go  up.\n Now you can think of the title of this post in narrow terms. You\u2019re a hundred times more likely to die of Coronavirus in America than in a functioning society.  But you can also think of it in broad terms. To live in America is to see your human potential go up in smoke, paying off endless debt, social mobility declining, incomes cratering, happiness plummeting, suicides rising. Or you can even think of it in terms of police brutality if you\u2019re a minority. The point is that living standards in America are vastly lower than in every other rich country already, and they\u2019re cratering. It\u2019s in that sense that I mean the price of living in America now is your life \u2014 the one you  could have had if you lived in Canada, Europe, or New Zealand. The richer, saner, healthier, longer, freer, more just life.\n  You die. The people you love die. Your possibilities go up in smoke. Everyone is  poorer permanently as a result \u2014 you never became that scientist, artist, poet, writer.\n Failed states are the stuff of tragedy. Not because they are some abstraction for theoreticians. But because people die.  And as they do, so too do the ideas of democracy, freedom, justice, truth, worth, grace, meaning, dignity, and purpose.", "posttime": "2020-06-13 04:05:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,giving,\u7f8e\u56fd", "title": "\u7f8e\u56fd\u6b63\u5728\u653e\u5f03\u51a0\u72b6\u75c5\u6bd2--\u540e\u679c\u5c06\u662f\u6bc1\u706d\u6027\u7684", "title_en": "America Is Giving Up on Coronavirus \u2013 and the Consequences Will Be Devastating", "transed": 1, "url": "https://eand.co/whats-the-price-of-living-in-america-your-life-7f2e6b7b6c05", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "giving", "\u7f8e\u56fd"]}, {"category": "", "categoryclass": "", "imagename": "44d38af3d46f111120e2394493fc32d3.png", "infoid": 1006323, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba2\u9605\u6211\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u968f\u65f6\u4e86\u89e3\u6211\u7684\u6700\u65b0\u535a\u5ba2\u5e16\u5b50\u3002\u6bcf\u6b21\u6211\u53d1\u5e03\u65b0\u4e1c\u897f\u65f6\u90fd\u4f1a\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\n\u6267\u884c\u4e0a\u4e0b\u6587\u662fJavaScript\u7f16\u7a0b\u8bed\u8a00\u6700\u57fa\u672c\u7684\u90e8\u5206\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u63a2\u8ba8\u8fd9\u4e00\u6982\u5ff5\uff0c\u5b83\u4e0d\u4ec5\u662f\u57fa\u672c\u7684\uff0c\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u3002\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u4ece\u5b66\u4e60\u7684\u7406\u89e3\u548c\u590d\u6742\u6027\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u88ab\u6295\u5c04\u4e3a\u9ad8\u7ea7JavaScript\u6982\u5ff5\u3002\u662f\u7684\uff0c\u5982\u679c\u6ca1\u6709\u6309\u7167\u6b63\u786e\u7684\u987a\u5e8f\u7528\u9002\u5f53\u7684\u4f8b\u5b50\u5b66\u4e60\uff0c\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u5f88\u590d\u6742\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\uff0c\u6bcf\u4e2aJavaScript\u521d\u5b66\u8005\u90fd\u9700\u8981\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u5bf9\u8fd9\u4e2a\u57fa\u672c\u6982\u5ff5\u5145\u6ee1\u4fe1\u5fc3\u662f\u5f88\u91cd\u8981\u7684\u5462\uff1f\n\u8fd9\u662f\u540d\u4e3a\u201cJavaScript\uff1a\u7834\u89e3\u575a\u679c\u201d\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e8c\u7bc7\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u9605\u8bfb\u5173\u4e8eJavaScript\u89e3\u91ca\u6216\u7f16\u8bd1\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\uff0c\u8bf7\u5c1d\u8bd5\u4e00\u4e0b\u3002\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u672c\u4e66\u3002\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u8bfb\u8fc7\u8fd9\u4e2a\u7cfb\u5217\u7684\u524d\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u5b83\uff1aJavaScript\u89e3\u91ca\u7684\u8fd8\u662f\u7f16\u8bd1\u7684\uff1f\u8fa9\u8bba\u7ed3\u675f\u4e86\u3002\n\u4e00\u4e9b\u7814\u7a76\u8868\u660e\uff0c\u4eba\u8111\u8bb0\u5fc6\u4e2d\u7684\u4fe1\u606f\u91cf\u53ef\u80fd\u548c\u6574\u4e2a\u4e92\u8054\u7f51\u4e0a\u7684\u4fe1\u606f\u91cf\u4e00\u6837\u591a\uff01\u4f46\u662f\u6211\u4eec\u4e0d\u5e94\u8be5\u8ba4\u4e3a\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u5bf9\u5417\uff1f\u56e0\u6b64\uff0c\u4e00\u4e2a\u5408\u7406\u7684\u95ee\u9898\u53ef\u80fd\u662f\uff0c\u4e3a\u4ec0\u4e48\u5b66\u4e60\u8fd9\u4e2a\u6982\u5ff5\u5f88\u91cd\u8981\uff1f\nJavaScript\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u6b63\u786e\u7406\u89e3\u8bb8\u591a\u5176\u4ed6\u57fa\u672c\u6982\u5ff5\u7684\u57fa\u7840\u3002\u6211\u4eec\u7ecf\u5e38\u5728\u4e0b\u9762\u7684\u6bcf\u4e00\u4e2a\u6982\u5ff5\u4e2d\u53d1\u73b0\u5f88\u591a\u8bef\u89e3\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6211\u4eec\u8bef\u89e3\u4e86\u6267\u884c\u4e0a\u4e0b\u6587\u80cc\u540e\u7684\u4e8b\u5b9e\u3002\n\u4f5c\u4e3aJavaScript\u5f00\u53d1\u4eba\u5458\uff0c\u4e00\u65e6\u6211\u4eec\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u6709\u4e86\u5f88\u597d\u7684\u7406\u89e3\uff0c\u6211\u4eec\u5c31\u80fd\u591f\n\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u4f46\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u5145\u6ee1\u4e86\u6709\u65f6\u53ef\u80fd\u4f1a\u4ee4\u4eba\u6c14\u9981\u7684\u7e41\u91cd\u672f\u8bed\u3002\u8fd9\u4e9b\u7e41\u91cd\u7684\u5355\u8bcd\u80cc\u540e\u7684\u57fa\u672c\u6982\u5ff5\u5927\u591a\u66f4\u7b80\u5355\uff0c\u66f4\u5bb9\u6613\u638c\u63e1\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u6709\u7528\u7684\u51e0\u70b9\uff1a\n\u89e3\u6790\u5668\uff1a\u89e3\u6790\u5668\u6216\u8bed\u6cd5\u89e3\u6790\u5668\u662f\u4e00\u4e2a\u9010\u884c\u8bfb\u53d6\u4ee3\u7801\u5e76\u4e86\u89e3\u5b83\u5982\u4f55\u7b26\u5408\u7f16\u7a0b\u8bed\u8a00\u5b9a\u4e49\u7684\u8bed\u6cd5\u4ee5\u53ca\u5b83\u8981\u505a\u4ec0\u4e48\u7684\u7a0b\u5e8f\u3002\u6b63\u5982\u60a8\u5728\u6211\u7684\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u770b\u5230\u7684\uff0cJavaScript\u8bed\u6cd5\u89e3\u6790\u5668\u83b7\u53d6\u4ee4\u724c\u6570\u7ec4\u5e76\u521b\u5efa\u62bd\u8c61\u8bed\u6cd5\u6811(AST)\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u4ee5\u521b\u5efa\u53ef\u6267\u884c\u4ee3\u7801\u3002\n\u8bcd\u6c47\u73af\u5883\uff1a\u5355\u8bcd\u8bcd\u6c47\u7684\u610f\u601d\uff0c\u4e0e\u4e00\u79cd\u8bed\u8a00\u7684\u5355\u8bcd\u6216\u8bcd\u6c47\u6709\u5173\u3002\u8bcd\u6cd5\u73af\u5883\u610f\u5473\u7740\u4ee3\u7801\u7684\u7269\u7406\u7f16\u5199\u65b9\u5f0f\u548c\u4f4d\u7f6e\u3002\u8ba9\u6211\u4eec\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u4e3a\u4f8b\uff0c\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u53d8\u91cf\u540d\u5728\u51fd\u6570sayName\u4e2d\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u8bf7\u6ce8\u610f\uff0c\u60a8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u50cf\u5728\u8ba1\u7b97\u673a\u4e0a\u90a3\u6837\u8fd0\u884c\u3002\u5b83\u5fc5\u987b\u7531\u7f16\u8bd1\u5668\u7ffb\u8bd1\u3002\u56e0\u6b64\uff0c\u5b83\u5fc5\u987b\u6b63\u786e\u5730\u77e5\u9053\u548c\u6620\u5c04\u4ec0\u4e48\u5728\u8bcd\u6cd5\u4e0a\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u4ee5\u4fbf\u7f16\u8bd1\u540e\u7684\u8f93\u51fa\u4e5f\u662f\u6709\u610f\u4e49\u548c\u6709\u6548\u7684\u3002\n\u8bf7\u6ce8\u610f\uff0c\u901a\u5e38\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\u4f1a\u6709\u5f88\u591a\u8bcd\u6cd5\u73af\u5883\u3002\u4f46\u4e0d\u4f1a\u540c\u65f6\u6267\u884c\u6240\u6709\u73af\u5883\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u770b\u5230\u8fd9\u4e00\u70b9\u3002\n\u4e0a\u4e0b\u6587\uff1a\u5c06\u5355\u8bcd\u4e0a\u4e0b\u6587\u53ef\u89c6\u5316\u7684\u6700\u597d\u65b9\u6cd5\u662f\uff0c\u60f3\u50cf\u4e00\u4e2a\u56f4\u7ed5\u60a8\u611f\u5174\u8da3\u7684\u4e3b\u9898(\u6216\u6211\u4eec\u6b63\u5728\u8ba8\u8bba\u7684\u4e0a\u4e0b\u6587)\u7684\u5706\u5708(\u6216\u5305\u88c5\u5668)\u3002\u4e0a\u4e0b\u6587\u662f\u56f4\u7ed5\u7279\u5b9a\u4e8b\u4ef6\u3001\u60c5\u51b5\u7b49\u7684\u4e00\u7ec4\u60c5\u51b5\u6216\u4e8b\u5b9e\u3002\n\u6267\u884c\u4e0a\u4e0b\u6587\uff1a\u8fd9\u610f\u5473\u7740\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4ee3\u7801\u53ca\u5176\u5468\u56f4\u7684\u4e00\u5207\u90fd\u5728\u5e2e\u52a9\u8fd0\u884c\u5b83\u3002\u53ef\u4ee5\u6709\u5f88\u591a\u53ef\u7528\u7684\u8bcd\u6cd5\u73af\u5883\uff0c\u4f46\u662f\u5f53\u524d\u8fd0\u884c\u7684\u662f\u7531\u6267\u884c\u4e0a\u4e0b\u6587\u7ba1\u7406\u7684\u3002\n\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u559c\u6b22(\u6216\u5e0c\u671b)\u4ee5\u8fd9\u6837\u4e00\u79cd\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\uff0c\u5b83\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u590d\u6742\uff0c\u6613\u4e8e\u7ef4\u62a4\uff0c\u5e76\u9075\u5faa\u4e00\u4e9b\u5b9e\u8df5\u3001\u6807\u51c6\u7b49\u3002\u901a\u8fc7\u76f8\u540c\u7684\u7c7b\u6bd4\uff0c\u6267\u884c\u4e0a\u4e0b\u6587\u5141\u8bb8JavaScript\u5f15\u64ce\u4ee5\u66f4\u597d\u7684\u65b9\u5f0f\u7ef4\u62a4\u4ee3\u7801\u548c\u7ba1\u7406\u590d\u6742\u6027\u3002\n\u65e0\u8bba\u4f55\u65f6\u5728JavaScript\u4e2d\u8fd0\u884c\u4ee3\u7801\uff0c\u5b83\u90fd\u4f1a\u5728\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\uff0c\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u4ee3\u7801\u52a0\u4e0a\u6211\u4eec\u5728\u8fd9\u91cc\u770b\u5230\u7684\u7531JavaScript\u5f15\u64ce\u5b8c\u6210\u7684\u6240\u6709\u64cd\u4f5c(\u6807\u8bb0\u5316\u3001\u89e3\u6790\u3001\u4ee3\u7801\u751f\u6210\u7b49)\u7684\u7ec4\u5408\u3002\n\u6bcf\u5f53JavaScript\u4ee3\u7801\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u5b83\u90fd\u4f1a\u521b\u5efa\u79f0\u4e3a\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587(Global Execution Context\uff0cGEC)\u7684\u4e1c\u897f\u3002\u5373\u4f7f\u5728.js\u6587\u4ef6\u4e2d\u6ca1\u6709\u4e00\u884c\u4ee3\u7801\u5e76\u52a0\u8f7d\u5b83\uff0c\u4e5f\u4f1a\u521b\u5efa\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u3002\n\u5168\u7403\u8fd9\u4e2a\u8bcd\u5728\u8fd9\u91cc\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u51fd\u6570\u4e4b\u5916\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u5168\u5c40\u7684\u3002\n\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u4e5f\u79f0\u4e3a\u57fa\u672c\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u5b83\u4e3a\u4f60\u521b\u9020\u4e86\u4e24\u4e2a\u7279\u522b\u7684\u4e1c\u897f\uff0c\n\u79f0\u4e3a\u6d4f\u89c8\u5668\u7684\u7a97\u53e3\u5bf9\u8c61\u7684\u5168\u5c40\u5bf9\u8c61\u3002\u5982\u679c\u60a8\u5728\u670d\u52a1\u5668\u7aef\u4f7f\u7528JavaScript\uff0c\u6bd4\u5982NodeJS\uff0c\u90a3\u4e48\u5b83\u5c06\u4e0d\u662fWindow\u3002\n\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u83b7\u53d6\u4e00\u4e2a\u540d\u4e3aindex.js\u7684\u7a7aJavaScript\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u5bfc\u5165\u5230\u4e00\u4e2a\u540d\u4e3aindex.html\u7684html\u6587\u4ef6\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4e00\u65e6\u60a8\u5c06\u6b64html\u52a0\u8f7d\u5230\u6d4f\u89c8\u5668\u4e0a\uff0c\u5c06\u4e0d\u4f1a\u52a0\u8f7d\u548c\u6267\u884c\u4efb\u4f55JavaScript\uff0c\u4f46\u662f\uff0c\u5982\u679c\u60a8\u6253\u5f00\u8c03\u8bd5\u5668\u63a7\u5236\u53f0(Chrome\u4e3aF12)\u5e76\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\n\u60a8\u770b\uff0c\u5df2\u7ecf\u4e3a\u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u201c\u8fd9\u201d\u7684\u4e1c\u897f\u3002\u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u952e\u5165Window\uff0c\u8fd9\u4e00\u6b21\u60a8\u5c06\u6253\u5370Window\u5bf9\u8c61\uff0c\n\u60a8\u662f\u5426\u6ce8\u610f\u5230\uff0cWindow\u5bf9\u8c61\u548cthis\u53d8\u91cf\u5728\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d\u90fd\u662f\u76f8\u7b49\u7684\uff1f\u8bd5\u8bd5\u8fd9\u4e2a\u6765\u786e\u8ba4\u4e00\u4e0b\uff0c\n\u5f53\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u521a\u521a\u5728\u6ca1\u6709\u4efb\u4f55JavaScript\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u88ab\u521b\u5efa\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u53ef\u89c6\u5316\u4e3a\uff0c\n\u73b0\u5728\u8ba9\u6211\u4eec\u5411js\u6587\u4ef6\u6dfb\u52a0\u4e00\u4e9b\u4ee3\u7801\u3002\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3aname\u7684\u53d8\u91cf\uff0c\u5e76\u7528\u503cTom\u8fdb\u884c\u4e86\u521d\u59cb\u5316\u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3asayName()\u7684\u51fd\u6570\uff0c\u5b83\u53ea\u8bb0\u5f55\u540d\u79f0\u3002\n\u60a8\u8ba4\u4e3a\u73b0\u5728\u5168\u7403\u6267\u884c\u73af\u5883\u5c06\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u8ba9\u6211\u4eec\u5148\u5728\u4e0b\u9762\u7684\u56fe\u7247\u6f14\u793a\u4e2d\u770b\u5230\u5b83\uff0c\u7136\u540e\u518d\u8fdb\u884c\u89e3\u91ca\u3002\n\u5728\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d\u521b\u5efa\u6709\u4e24\u4e2a\u9636\u6bb5\uff0c\u5373\u521b\u5efa\u9636\u6bb5\u548c\u6267\u884c\u9636\u6bb5\u3002\n\u521b\u5efa\u9636\u6bb5\uff1a\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u521b\u5efa\u4e86\u4e24\u4e2a\u7279\u6b8a\u7684\u4e1c\u897f\uff0c\u5373\u5168\u5c40\u5bf9\u8c61\uff0c\u5982\u6d4f\u89c8\u5668\u7684Window\u548c\u4e00\u4e2a\u540d\u4e3athis\u7684\u53d8\u91cf\u3002\n\u53d8\u91cf\u540d\u7531\u4e00\u4e2a\u540d\u4e3aUNDEFINED\u7684\u7279\u6b8a\u503c\u521d\u59cb\u5316\u3002\u51fd\u6570sayName()\u76f4\u63a5\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u5173\u4e8e\u53e6\u4e00\u4e2a\u6982\u5ff5(\u63d0\u5347)\u7684\u6587\u7ae0\u4e2d\u770b\u5230\u66f4\u591a\u5173\u4e8e\u5b83\u7684\u4fe1\u606f\u3002\n\u6267\u884c\u9636\u6bb5\uff1a\u5728\u6b64\u9636\u6bb5\uff0c\u4ee3\u7801\u5b9e\u9645\u5f00\u59cb\u6267\u884c\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u793a\u4f8b\uff0c\u552f\u4e00\u8981\u53d1\u751f\u7684\u4e8b\u60c5\u662f\uff0c\u5b83\u4f1a\u5c06\u503cTom\u8d4b\u7ed9\u53d8\u91cf\u540d\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6ca1\u6709\u8c03\u7528\u51fd\u6570sayName()\uff0c\u5c3d\u7ba1\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5b83\u3002\u56e0\u6b64\uff0c\u6b64\u51fd\u6570\u5c06\u4e0d\u4f1a\u6267\u884c\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4e86\u89e3\u6709\u5173\u51fd\u6570\u6267\u884c\u7684\u5185\u5bb9\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3aname\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u88ab\u5206\u914d\u4e86\u4e00\u4e2a\u540d\u4e3aTom\u7684\u503c\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3atom()\u7684\u51fd\u6570\u6765\u8bb0\u5f55\u540d\u79f0\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528\u51fd\u6570tom()\u3002\n\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u6f14\u793a\uff0c\u4e00\u8d77\u7406\u89e3\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u548c\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u3002\n\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u9762\u770b\u5230\u7684\uff0c\u5168\u5c40\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u521b\u5efa\u9636\u6bb5\u521b\u5efa\u5168\u5c40\u5bf9\u8c61\uff0c\u6b64\u53d8\u91cf\u4e3a\u53d8\u91cf\u548c\u51fd\u6570\u521b\u5efa\u5185\u5b58\u3002\u8be5\u53d8\u91cf\u4f7f\u7528\u540d\u4e3aunfined\u7684\u7279\u6b8a\u503c\u8fdb\u884c\u521d\u59cb\u5316\u3002\n\u5728\u6267\u884c\u9636\u6bb5\uff0c\u5b83\u4e3a\u53d8\u91cf\u8d4b\u503c\u5e76\u8c03\u7528\u51fd\u6570\u3002\u56e0\u6b64\u521b\u5efa\u4e86\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u3002\n\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u7ecf\u5386\u76f8\u540c\u7684\u9636\u6bb5\uff0c\u5373\u521b\u5efa\u548c\u6267\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u540d\u4e3aArguments\u7684\u7279\u6b8a\u53d8\u91cf\uff0c\u5b83\u662f\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4e0d\u4f20\u9012\u4efb\u4f55\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u957f\u5ea6\u4e3a0\u3002\n\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u90fd\u5c06\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u6211\u4eec\u5c06\u5728\u5373\u5c06\u53d1\u5e03\u7684\u5173\u4e8e\u8303\u56f4\u7684\u5e16\u5b50\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u6982\u5ff5\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u6307\u5411\u7a97\u53e3\u5bf9\u8c61(\u8fd8\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u5e16\u5b50\u4e2d\u770b\u5230)\u3002\n\u5c06\u4efb\u4f55\u51fd\u6570\u58f0\u660e\u653e\u5165\u5185\u5b58\u65f6\uff0c\u4e3a\u53d8\u91cf\u58f0\u660e\u6307\u5b9a\u9ed8\u8ba4\u503cUNDEFINED\n\u5c06\u4efb\u4f55\u51fd\u6570\u58f0\u660e\u653e\u5165\u5185\u5b58\u65f6\uff0c\u4e3a\u53d8\u91cf\u58f0\u660e\u6307\u5b9a\u9ed8\u8ba4\u503cUNDEFINED\u3002\u6b64\u5916\uff0c\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u521b\u5efa\u5b83\u4eec\u81ea\u5df1\u7684\u6267\u884c\u5806\u6808\u3002\n\u5168\u5c40\u548c\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u4ee5\u53ca\u9636\u6bb5(\u521b\u5efa\u548c\u6267\u884c)\u662f\u9700\u8981\u719f\u6089\u7684\u91cd\u8981\u6982\u5ff5\u3002\u8fd9\u5c06\u6709\u52a9\u4e8e\u8f7b\u677e\u7406\u89e3\u4f5c\u7528\u57df\u3001\u5f02\u6b65\u51fd\u6570\u3001\u95ed\u5408\u3001\u63d0\u5347\u7b49\u3002\u6211\u4eec\u5c06\u5728\u672c\u7cfb\u5217\u5373\u5c06\u53d1\u5e03\u7684\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e2a\u6982\u5ff5\u3002\n\u5982\u679c\u60a8\u4e0d\u719f\u6089\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\uff0c\u8bf7\u5728\u5b66\u4e60\u6b64\u6982\u5ff5\u65f6\u5e76\u6392\u4f7f\u7528JavaScript Visualizer\u5de5\u5177\u3002\u7f16\u5199\u5c0f\u51fd\u6570\uff0c\u4f7f\u7528\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u6267\u884c\u51fd\u6570\uff0c\u5e76\u67e5\u770b\u8be5\u5de5\u5177\u5982\u4f55\u5c06\u5176\u5e26\u8fc7\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u5404\u4e2a\u9636\u6bb5\u3002\n\u5982\u679c\u5b83\u5bf9\u4f60\u6709\u7528\uff0c\u8bf7\u70b9\u8d5e/\u5206\u4eab\uff0c\u8fd9\u6837\u5176\u4ed6\u4eba\u4e5f\u80fd\u6536\u5230\u3002\u8981\u83b7\u5f97\u6709\u5173\u6211\u6700\u65b0\u5e16\u5b50\u7684\u7535\u5b50\u90ae\u4ef6\u901a\u77e5\uff0c\u8bf7\u70b9\u51fb\u9875\u9762\u9876\u90e8\u7684\u8ba2\u9605\u6309\u94ae\u8ba2\u9605\u6211\u7684\u535a\u5ba2\u3002\n\u5728\u672c\u7cfb\u5217\u7684\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u89e3\u91ca\u53e6\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\uff0c\u5373\u540a\u88c5\u3002\u656c\u8bf7\u5173\u6ce8\u3002", "note_en": "Subscribe to my newsletter and stay up-to-date with my latest blog posts. Get an email every time I post something new.\n Execution Context is the most fundamental part of  JavaScript programming language. In this post, we will take an in-depth dive into this concept to find out, it is not only fundamental but, extremely easy to understand.\n In many of the cases, the concept of  Execution Context has been projected as an  Advanced JavaScript Concept from the understanding and the complexity of learning perspective. Yes, this may sound complex to one if not learnt with proper examples in correct sequence. Along with it, every beginners to JavaScript need to understand, why is it important to gain confidence in this fundamental concept?\n This is the second post of the series called,  JavaScript: Cracking the Nuts. If you haven&#39;t read the first post about JavaScript Interpreted or Compiled, please give it a try. Hope you enjoy reading it.\n If you haven&#39;t read the previous post of the  series yet, you can find it here:  JavaScript Interpreted or Compiled? The Debate is Over.\n  Some study says,  The human brain may be able to hold as much information in its memory as is contained on the entire Internet! But we shouldn&#39;t take that for granted, right? Hence a valid question could be,  Why is this concept Important to Learn?\n JavaScript&#39;s Execution Context is the base to understand many other fundamental concepts correctly. Often we find lots of misunderstanding in each of the following concepts just because, we misunderstood the fact behind  Execution Context.\n  As a JavaScript Developer, once we develop good understanding with these concepts, we enable ourselves to,\n     I am not sure why, but most of the programming languages are full of heavy Jargons that could be discouraging at times. The underlying concepts behind those  Heavy Words are mostly simpler and easy to grasp. Here are few that are useful for this post:\n Parser: Parser or Syntax Parser is a program to read your code line-by-line and understand how it fits to the grammar defined by the Programming Language and what it is expecting to do. As you have seen in my  previous post, the JavaScript Syntax Parser takes the array of tokens and create an Abstract Syntax Tree(AST) so that, it can be processed further to create an executable code.\n Lexical Environment: The word  Lexical means,  relating to the words or vocabulary of a language. Lexical Environment means, how and where your code physically written. Let&#39;s take this piece of code as an example,\n  In the code above, the variable  name is lexically inside the function  sayName. Now this is important to note, your program doesn&#39;t run as is on Computer. It has to be translated by the Compiler. Hence it has to correctly know and map what is lexically siting where so that, the compiled output is also meaningful and valid.\n Please note, usually there will be many  Lexical Environment in your code. But all the environments will not be executed at once. We will see that shortly.\n Context: The best way to visualize the word  Context is, think of a circle(or Wrapper)  surrounding the topic of your interest(or the &#39;Context of&#39; what we are discussing). Context is set of circumstances or facts that surround a particular event, situation, etc.\n Execution Context: It means, the code that is currently running and everything surrounding to that is helping in running it. There can be lots of  Lexical Environment available but, the one  Currently running is managed by  Execution Context.\n  As Software Developers, we like(or wish) to write code in such a way that, it looks less complex, can be maintained easily and follows some practices, standards etc. With same analogy, the  Execution Context allows JavaScript engine to maintain the code and manage the complexities in better ways.\n Whenever a code is run in JavaScript, it runs within the  Execution Context which is a combination of your code plus, all that we have seen  here (Tokenizing, Parsing, Code Generation, etc) done by JavaScript Engine.\n  Whenever a JavaScript Code first run, it creates something called, Global Execution Context(GEC). Even when you do not have a single line of code in a  .js file and load it, you will have the Global Execution Context created.\n What does the word Global mean here? Anything and Everything Outside a Function is  Global.\n Global Execution Context is also called, base execution context. It creates two special things for you,\n A global object called,  Window object for browser. If you are using JavaScript at the  server side, say, nodeJs, it will not be Window.\n   For the sake of simplicity, takes an empty JavaScript file called,  index.js and import it in a html file called,  index.html like this,\n  Once you load this html on browser, there will not be any JavaScript loaded and executed but, if you open the debugger console(F12 for Chrome) and type  this,\n  You see there is something called  this has been created for you already. You can also try typing  Window, this time you will have the Window object printed,\n  Have you noticed, the  Window object and the  this variable both are equal in the  Global Execution Context? Try this to confirm,\n  A Global Execution Context when it is just created without any JavaScript code, can be visualized as,\n   Let us add some code to our js file now. We have added a variable called,  name and initialized with the value,  Tom. We also have a function called,  sayName() which just logs the name.\n  What do you think will happen to the  Global Execution Context now? Let us see it in the following pictorial demonstration first and then the explanation follows.\n  There are two phases created in Global Execution Context, i.e  Creation phase and  Execution phase.\n Creation Phase: In this phase, two special things get created, i.e, global object like,   Window for browser and a variable called,  this.\n  The variable   name gets initialized by a special value called,  undefined. The function   sayName() gets placed directly into the memory.We will see more about it in the upcoming post about another concept called,   hoisting.\n Execution Phase: In this phase, the code actually starts getting executed. For our example above, only thing to happen is, it will assign the value  Tom to the variable  name. Please note, we do not invoke the function  sayName() though we have defined it. Hence this function will not get executed. We will see about  Function Execution in the next section.\n   Let us see the following example to understand this concept. In this example, we have a global variable called,  name which is assigned a value called,  Tom. We have a function called  tom() which logs the name. At last we invoke the function  tom().\n  See the following demonstration to understand the  Function Execution Context and  Global Execution Context together.\n  As we have seen above,  Global Execution Context&#39;s Creation phase creates the  global object,  this variable, creates memory for the variable and the function. The variable gets initialized with a special value called,  undefined.\n In the  Execution phase, it assigns the value to the variable and invoke the function. Hence a   Function Execution Context gets created.\n The Function Execution Context goes through the same phases,  Creation and  Execution. Important point to note, the Function Execution Context has access to a special variable called,  arguments which is the arguments passed to the function while invoking. In our example, we do not pass any arguments. Hence the length is 0.\n A function can invoke another function and it can invoke another and so on. For each of the function invocations, there will be a  Function Execution Context get created. We will see this concept in details with the upcoming post on  Scope.\n  By default,  this points to  Window object(There are lots more to it, we will see in future posts).\n  Assign variable declaration a default value of  undefined while placing any function declaration in memory\n Assign variable declaration a default value of  undefined while placing any function declaration in memory. Additionally, function execution context creates their own Execution Stack.\n  The Global and Function execution Context and the phases(Create and Execute) are important concepts to get used to. This will help in understanding Scope, Asynchronous Functions, Closure, Hoisting etc with ease. We will be seeing each of the concepts in details in the upcoming post of the series.\n If you are new to the concept of execution context, use the  JavaScript Visualizer Tool side-by-side while learning this concept. Write small functions, use defined variables, execute functions and see how the tool takes it through various phases of the execution contexts.\n  If it was useful to you, please Like/Share so that, it reaches others as well. To get e-mail notification on my latest posts, please subscribe to my blog by hitting the   Subscribe button at the top of the page.\n In the next post of the series, I&#39;ll be explaining about another fundamental concept called,  Hoisting. Stay Tuned.", "posttime": "2020-06-13 03:47:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u7406\u89e3", "title": "\u524d\u6240\u672a\u6709\u5730\u7406\u89e3JavaScript\u6267\u884c\u4e0a\u4e0b\u6587", "title_en": "Understanding JavaScript Execution Context like never before", "transed": 1, "url": "https://blog.greenroots.info/understanding-javascript-execution-context-like-never-before-ckb8x246k00f56hs1nefzpysq", "via": "", "real_tags": ["java", "\u7406\u89e3"]}, {"category": "", "categoryclass": "", "imagename": "1e940bcbac539df5c01a62bcb7de5dbd.jpg", "infoid": 1006322, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5171\u548c\u515a\u8054\u90a6\u901a\u8baf\u4e13\u5458\u8fc8\u514b\u00b7\u91cc\u5229(Mike O&#39\uff1bRielly)\u8868\u793a\uff0c\u4ed6\u4e0d\u786e\u5b9a\u4ed6\u7684\u673a\u6784\u662f\u5426\u6709\u6743\u6267\u884c\u7279\u6717\u666e\u603b\u7edf\u9488\u5bf9\u79d1\u6280\u516c\u53f8\u7684\u6cd5\u5f8b\u4fdd\u62a4\u7684\u884c\u653f\u547d\u4ee4\u3002\n\u91cd\u8981\u539f\u56e0\uff1a\u7279\u6717\u666e\u7684\u547d\u4ee4\u8bd5\u56fe\u8ba9\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5236\u5b9a\u6cd5\u89c4\uff0c\u9650\u5236\u5728\u7ebf\u5e73\u53f0\u6839\u636e\u8054\u90a6\u6cd5\u5f8b\u4eab\u6709\u7684\u6cd5\u5f8b\u8c41\u514d\u6743\u8303\u56f4\u3002\u59d4\u5458\u4f1a\u7684\u4e09\u540d\u5171\u548c\u515a\u4eba\u90fd\u9700\u8981\u652f\u6301\u8fd9\u6837\u7684\u89c4\u5b9a\u624d\u80fd\u901a\u8fc7\uff0c\u56e0\u4e3aFCC\u7684\u4e24\u540d\u6c11\u4e3b\u515a\u4eba\u80af\u5b9a\u4f1a\u53cd\u5bf9\u8fd9\u4e9b\u89c4\u5b9a\u3002\n\u7ec6\u8282\uff1a\u5728\u5468\u4e09\u63a5\u53d7C-S&34\uff1bThe Communicators\u7684\u91c7\u8bbf\u65f6\uff0c\u91cc\u5229\u544a\u8bc9Axios\uff0c\u4ed6\u540c\u60c5\u603b\u7edf\u5173\u4e8e\u4fdd\u5b88\u6d3e\u5728\u7f51\u4e0a\u88ab\u4e0d\u516c\u5e73\u5730\u627c\u6740\u7684\u8bf4\u6cd5\uff0c\u4f46\u6211\u4eec\u5bf9\u6b64\u6240\u505a\u7684\u662f\u53e6\u4e00\u56de\u4e8b\u3002\nO&39\uff1bRielly\u8d28\u7591\u56fd\u4f1a\u662f\u5426\u8d4b\u4e88FCC\u57fa\u4e8e\u901a\u4fe1\u4f53\u9762\u6cd5\u6848\u7b2c230\u6761\u7684\u76d1\u7ba1\u6743\u529b\uff0c\u8be5\u6761\u6b3e\u4f7f\u5e73\u53f0\u514d\u53d7\u56e0\u7528\u6237\u53d1\u5e03\u7684\u5185\u5bb9\u548c\u5ba1\u6838\u51b3\u5b9a\u800c\u91c7\u53d6\u7684\u6cd5\u5f8b\u884c\u52a8\u3002\n\u4ed6\u4eec\u5728\u8fd9\u4ef6\u4e8b\u4e0a\u63d0\u4f9b\u4e86\u4efb\u4f55\u523b\u610f\u7684\u6388\u6743\uff0c\u6211\u5bf9\u6b64\u6df1\u8868\u4fdd\u7559\uff0c\u4f46\u6211\u60f3\u542c\u53d6\u4eba\u4eec\u7684\u610f\u89c1\uff0c\u91cc\u5229\u8bf4\uff0c\u540e\u6765\u53c8\u8865\u5145\u8bf4\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8be5\u673a\u6784\u6709\u6743\u89e3\u8bfb\u4e0d\u5b58\u5728\u7684\u6cd5\u89c4\u6743\u5a01\u3002\n\u884c\u653f\u547d\u4ee4\u6307\u793a\u5546\u52a1\u90e8\u5411FCC\u8bf7\u613f\uff0c\u8981\u6c42\u5ba1\u67e5\u8fd9\u4e00\u95ee\u9898\u3002\u5047\u8bbe\u5b83\u5230\u4e86\u90a3\u4e2a\u9636\u6bb5\uff0cO&#39\uff1bRielly\u5e0c\u671b\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5c06\u6b64\u4e8b\u516c\u4e4b\u4e8e\u4f17\uff0c\u5f81\u6c42\u610f\u89c1\u3002\n\u80cc\u666f\uff1aO&#39\uff1bRielly\u5df2\u88ab\u767d\u5bab\u63d0\u540d\u8fde\u4efb\u8be5\u59d4\u5458\u4f1a\u6210\u5458\u3002\u53c2\u8bae\u9662\u5546\u52a1\u59d4\u5458\u4f1a\u5b9a\u4e8e\u5468\u4e8c\u5c31\u4ed6\u7684\u91cd\u65b0\u63d0\u540d\u4e3e\u884c\u542c\u8bc1\u4f1a\u3002\nFCC\u4e3b\u5e2d\u963f\u5409\u7279\u00b7\u6d3e(Ajit Pai)\u5bf9\u8fd9\u9879\u884c\u653f\u547d\u4ee4\u76f8\u5bf9\u4fdd\u6301\u6c89\u9ed8\uff0c\u800c\u59d4\u5458\u4f1a\u4e2d\u7684\u7b2c\u4e09\u4f4d\u5171\u548c\u515a\u4eba\u5e03\u4f26\u4e39\u00b7\u5361\u5c14(Brendan Carr)\u4e00\u76f4\u76f4\u8a00\u4e0d\u8bb3\u5730\u8868\u793a\u652f\u6301\u3002", "note_en": "Republican Federal Communications Commissioner Mike O&#39;Rielly said he&#39;s unsure whether his agency has the authority to carry out President Trump&#39;s  executive order targeting tech firms&#39; legal protections.\n Why it matters: Trump&#39;s order seeks to have the FCC craft regulations limiting the scope of legal immunity that online platforms have under federal law. All three commission Republicans would need to support such regulations for them to pass, as the FCC&#39;s two Democrats are certain to oppose them.\n Details: In an interview Wednesday for C-SPAN&#39;s &#34;The Communicators,&#34; O&#39;Rielly told Axios he sympathizes with the president&#39;s claims that conservatives have been unfairly stifled online, but &#34;what we do about that is a different story.&#34;\n O&#39;Rielly questioned whether Congress gave the FCC the power to regulate based on Section 230 of the Communications Decency Act, which immunizes platforms from legal action over user-posted content and moderation decisions.\n &#34;I have deep reservations they provided any intentional authority for this matter, but I want to listen to people,&#34; O&#39;Rielly said, later adding, &#34;I do not believe it is the right of the agency to read into the statute authority that is not there.&#34;\n The executive order directs the Commerce Department to petition the FCC to review the issue. Assuming it gets to that stage, O&#39;Rielly wants the FCC to put the matter to the public for comment.\n Context: O&#39;Rielly has been nominated by the White House for another term on the commission. The Senate Commerce Committee has a hearing on his renomination scheduled for Tuesday.\n FCC Chairman Ajit Pai has stayed relatively quiet on the executive order, while the third Republican on the commission, Brendan Carr, has been  vocal in his support.", "posttime": "2020-06-13 03:31:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5171\u548c\u515a\u4eba,republican,\u59d4\u5458\u4f1a", "title": "FCC\u5171\u548c\u515a\u4eba\u5bf9\u7279\u6717\u666e\u7684\u884c\u653f\u547d\u4ee4\u8868\u793a\u6000\u7591", "title_en": "FCC Republican Voices Doubts About Trump's Executive Order", "transed": 1, "url": "https://www.axios.com/fcc-republican-doubts-trumps-executive-order-11335664-f932-43ed-8d2e-bb803c112246.html", "via": "", "real_tags": ["\u5171\u548c\u515a\u4eba", "\u59d4\u5458\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "97201e7f3e6c53d21b69f8e10a9dc131.jpeg", "infoid": 1006321, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-\u6839\u636e\u5468\u4e94\u516c\u5e03\u7684\u4e00\u9879\u8c03\u67e5\u7814\u7a76\uff0c\u81ea2000\u5e74\u4ee5\u6765\uff0c\u7f8e\u56fd\u5e74\u8f7b\u7537\u6027\u7684\u6027\u6d3b\u52a8\u5927\u5e45\u4e0b\u964d\uff0c\u8fd1\u4e09\u5206\u4e4b\u4e00\u7684\u4eba\u62a5\u544a\u524d\u4e00\u5e74\u6ca1\u6709\u4e0e\u4f34\u4fa3\u53d1\u751f\u6027\u5173\u7cfb\uff0c\u8fd9\u8868\u660e\u793e\u4ea4\u5a92\u4f53\u548c\u7535\u5b50\u6e38\u620f\u53ef\u80fd\u6b63\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002\n\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u8fd9\u4e00\u8d8b\u52bf\u4ee4\u4eba\u62c5\u5fe7\uff0c\u56e0\u4e3a\u6027\u5173\u7cfb\u5bf9\u5e78\u798f\u548c\u5065\u5eb7\u5f88\u91cd\u8981\u3002\n\u8c03\u67e5\u53d1\u73b0\uff0c\u4ece2000\u5e74\u52302018\u5e74\uff0c\u8fd1\u4e09\u5206\u4e4b\u4e00\u768418\u5c81\u81f324\u5c81\u7684\u7f8e\u56fd\u7537\u6027\u62a5\u544a\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\u6ca1\u6709\u6027\u884c\u4e3a\u3002JAMA Network Open\u6742\u5fd7\u4e0a\u7684\u8fd9\u4efd\u62a5\u544a\u53d1\u73b0\uff0c\u5728\u8c03\u67e5\u671f\u95f4\uff0c25\u5c81\u81f334\u5c81\u7684\u7537\u6027\u548c\u5973\u6027\u7684\u7f3a\u4e4f\u6027\u6d3b\u52a8\u6216\u6027\u4e0d\u6d3b\u8dc3\u4e5f\u5728\u4e0a\u5347\u3002\n\u6027\u751f\u6d3b\u9891\u7387\u4e0b\u964d\u7684\u53ef\u80fd\u539f\u56e0\u8fd8\u53ef\u80fd\u5305\u62ec\u6742\u800d\u5de5\u4f5c\u548c\u4eb2\u5bc6\u5173\u7cfb\u7684\u538b\u529b\uff0c\u4ee5\u53ca\u5176\u4ed6\u5f62\u5f0f\u7684\u72ec\u594f\u5a31\u4e50\u7684\u76db\u884c\u3002\n\u5723\u5730\u4e9a\u54e5\u5dde\u7acb\u5927\u5b66\u5fc3\u7406\u5b66\u7cfb\u7684\u7b80\u00b7\u7279\u6e29\u683c\u5728\u8be5\u62a5\u544a\u9644\u5e26\u7684\u4e00\u7bc7\u793e\u8bba\u4e2d\u8bf4\uff1a\u201c\u73b0\u5728\u7684\u6df1\u591c\u53ef\u4f9b\u9009\u62e9\u7684\u4e8b\u60c5\u6bd4\u4ee5\u524d\u591a\u5f97\u591a\uff0c\u800c\u5982\u679c\u4f34\u4fa3\u53cc\u65b9\u90fd\u6c89\u8ff7\u4e8e\u793e\u4ea4\u5a92\u4f53\u3001\u7535\u5b50\u6e38\u620f\u6216\u72c2\u6b22\u89c2\u770b\uff0c\u90a3\u4e48\u53d1\u8d77\u6027\u884c\u4e3a\u7684\u673a\u4f1a\u5c31\u4f1a\u51cf\u5c11\uff0c\u201d\u6765\u81ea\u5723\u5730\u4e9a\u54e5\u5dde\u7acb\u5927\u5b66\u5fc3\u7406\u7cfb\u7684\u7b80\u00b7\u7279\u6e29\u683c(Jean Twenger)\u5728\u62a5\u544a\u9644\u5e26\u7684\u4e00\u7bc7\u793e\u8bba\u4e2d\u8bf4\u3002\n\u901a\u8fc7\u5206\u67902000\u81f32018\u5e74\u95f4\u8fd11\u4e07\u540d\u5e74\u9f84\u572818\u5c81\u81f344\u5c81\u7684\u7537\u6027\u548c\u5973\u6027\u7684\u4e24\u5e74\u4e00\u5ea6\u7684\u8c03\u67e5\u6570\u636e\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c16.5%\u7684\u53d7\u8bbf\u8005\u62a5\u544a2016-2018\u5e74\u6027\u884c\u4e3a\u51cf\u5c11\uff0c\u800c2000-2002\u5e74\u4e3a9.5%\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u672a\u5a5a\u5f02\u6027\u604b\u7537\u6027\u3002\n\u7814\u7a76\u4eba\u5458\u62a5\u544a\u79f0\uff0c\u672a\u5a5a\u5973\u6027\u7684\u6027\u884c\u4e3a\u57fa\u672c\u6ca1\u6709\u53d8\u5316\uff0c\u7537\u540c\u6027\u604b\u8005\u7684\u6027\u884c\u4e3a\u4e5f\u6ca1\u6709\u660e\u663e\u4e0b\u964d\u3002\n\u5931\u4e1a\u6216\u6536\u5165\u8f83\u4f4e\u7684\u7537\u6027\u66f4\u6709\u53ef\u80fd\u6027\u751f\u6d3b\u4e0d\u6d3b\u8dc3\uff0c\u5b66\u751f\u65f6\u671f\u7684\u7537\u6027\u548c\u5973\u6027\u4e5f\u662f\u5982\u6b64\u3002\n\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u9274\u4e8e\u5bf9\u793e\u4f1a\u7ecf\u6d4e\u5730\u4f4d\u8f83\u9ad8\u7684\u7537\u6027\u7684\u504f\u597d\uff0c\u4ee5\u53ca\u53d7\u8fc7\u5927\u5b66\u6559\u80b2\u7684\u5973\u6027\u6570\u91cf\u6bd4\u7537\u6027\u591a\uff0c\u4e00\u4e9b\u5e74\u8f7b\u7537\u6027\u53ef\u80fd\u4f1a\u53d1\u73b0\u5f88\u96be\u5f62\u6210\u5f02\u6027\u5173\u7cfb\u3002\n\u745e\u5178\u5361\u7f57\u6797\u65af\u5361\u7814\u7a76\u6240\u7684\u7814\u7a76\u5408\u8457\u8005\u5f7c\u5f97\u00b7\u4e0a\u7530\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff1a\u201c\u66f4\u9ad8\u7684\u6536\u5165\u53ef\u80fd\u610f\u5473\u7740\u66f4\u591a\u7684\u8d44\u6e90\u6765\u5bfb\u627e\u4f34\u4fa3\uff0c\u8fd9\u53ef\u80fd\u4f1a\u88ab\u8fd9\u7c7b\u5408\u4f5c\u4f19\u4f34\u89c6\u4e3a\u66f4\u53ef\u53d6\u7684\u3002\u201d\n\u800c\u5728\u7814\u7a76\u671f\u95f4\u4e4b\u5916\uff0c\u5bfc\u81f4\u8bb8\u591a\u4eba\u5931\u4e1a\u5e76\u62c5\u5fc3\u611f\u67d3\u7684\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u53ef\u80fd\u4f1a\u52a0\u5267\u8fd9\u4e00\u8d8b\u52bf\u3002\u4e0a\u7530\u8bf4\uff0c\u75ab\u60c5\u5bf9\u6027\u5173\u7cfb\u7684\u5f71\u54cd\u662f\u4e00\u4e2a\u503c\u5f97\u76d1\u6d4b\u7684\u95ee\u9898\u3002", "note_en": "(Reuters) - Sexual activity among young American men has declined sharply since 2000, with nearly a third reporting no sex with a partner in the prior year, according to a survey study published on Friday that suggests social media and electronic gaming might be filling the void.\n  The trend is concerning as sexual relationships are important for well-being and health, researchers note.\n The survey found that from 2000 to 2018, nearly one in three U.S. men aged 18 to 24 reported no sexual activity in the past year. Lack of sexual activity, or sexual inactivity, was also on the rise among men and women aged 25 to 34 years during the survey period, the report in the journal JAMA Network Open found.\n Possible reasons for the decline in sexual frequency may also include stress of juggling work and intimate relationships, as well as the prevalence of other forms of solo entertainment.\n \u201cThere are now many more choices of things to do in the late evening than there once were and fewer opportunities to initiate sexual activity if both partners are engrossed in social media, electronic gaming, or binge watching,\u201d Jean Twenge, from the department of psychology in San Diego State University said in an editorial accompanying the report.\n By analyzing biennial survey data between 2000 and 2018 from nearly 10,000 men and women aged 18 to 44 years, researchers found that 16.5% of respondents reported less sexual activity in 2016-2018 versus 9.5% in 2000-2002, mostly among unmarried, heterosexual men.\n Sexual activity was largely unchanged among unmarried women, along with no notable decline among gay men, researchers reported.\n Men who were unemployed or had lower income were more likely to be sexually inactive, as were men and women who were students.\n Given a preference for men of higher socioeconomic status and the larger number of college-educated women than men, some young men may find it difficult to form heterosexual relationships, the researchers note.\n \u201cHigher income could mean more resources to search for partners and could be considered as more desirable by such partners,\u201d study co-author Peter Ueda of the Karolinska Institute in Sweden said in an email.\n While outside the study period, the COVID-19 pandemic that has left many unemployed and fearful of infection is likely to exacerbate the trend. The consequences of the outbreak on sexual relationships is an issue that warrants monitoring, Ueda said.", "posttime": "2020-06-13 03:13:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7814\u7a76,lot,\u53ef\u80fd", "title": "\u7814\u7a76\u663e\u793a\uff0c21\u4e16\u7eaa\u7f8e\u56fd\u5e74\u8f7b\u7537\u6027\u7684\u6027\u751f\u6d3b\u8981\u5c11\u5f97\u591a", "title_en": "Young U.S. men having a lot less sex in the 21st century, study shows", "transed": 1, "url": "https://www.reuters.com/article/us-usa-health-sex/young-u-s-men-having-a-lot-less-sex-in-the-21st-century-study-shows-idUSKBN23J2LI", "via": "", "real_tags": ["\u7814\u7a76", "lot", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "52b03383f830f67c707d01d620371549.png", "infoid": 1006320, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u6a21\u677f\u6587\u6863\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e", "note_en": "Extracting Structured Data from Templatic Documents", "posttime": "2020-06-13 03:12:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ed3\u6784\u5316,structured", "title": "\u4ece\u6a21\u677f\u6587\u6863\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e", "title_en": "Extracting Structured Data from Templatic Documents", "transed": 1, "url": "http://ai.googleblog.com/2020/06/extracting-structured-data-from.html", "via": "", "real_tags": ["\u7ed3\u6784\u5316"]}, {"category": "", "categoryclass": "", "imagename": "027bd98004820dd16f155cb5da40e61a.jpeg", "infoid": 1006319, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u94c1\u9508\u7684\u7279\u5f81\u7cfb\u7edf\u662f\u56fe\u7075\u5b8c\u6574\u7684\u3002\u8be5\u7bb1\u91c7\u7528\u7279\u5f81\u6c42\u503c\u7684\u539f\u5219\u6765\u5b9e\u73b0\u56db\u6b21\u8bc4\u4ef7\u7684\u5fc5\u5907\u7279\u5f81\uff0c\u5e76\u63d0\u4f9b\u4e86\u56db\u6b21\u8bc4\u4ef7\u7684\u539f\u5219\uff01\u5c06\u8bed\u6cd5\u8f6c\u6362\u4e3a\u7279\u5f81\u8868\u8fbe\u5f0f\u7684\u5b8f\u3002\n\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9636\u4e58\u5b9e\u73b0\uff0c\u8fd9\u91cc\u552f\u4e00\u7684\u975e\u6807\u51c6\u5355\u8bcd\u662fpred\uff0c\u5b83\u662f\u4e00\u4e2a\u51cf\u8fd0\u7b97\u7b26\uff0c\u76f8\u5f53\u4e8e1-\uff1a\nFourth\uff01(\uff1a\u9636\u4e58(n--n)1\u4ea4\u6362fact0\uff1b\uff1afact0(n n--n)dup 1=if drop Else DUP ROT*SWAP Pred fact0 Then\uff1b5\u9636\u4e58\u3002)\uff1b\n\u8fd9\u4e2a\u53ef\u4ee5\u6253\u5370120\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u8f7b\u677e\u5730\u5b9a\u4e49\u51fd\u6570\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u8fdb\u884c\u6761\u4ef6\u9012\u5f52\uff01\u73b0\u5728\u770b\u770b\u7f16\u8bd1\u6210\u7279\u5f81\u8868\u8fbe\u5f0f\u540e\u7684\u6837\u5b50(\u7531Cargo Expand\u63d0\u4f9b)\uff1a\n\u53d1\u5e03\u7279\u5f81\u9636\u4e58{type Result\uff1b}\u4e3a\u8282\u70b9\u5b9e\u65bd&lt\uff1bV\uff0cN&&gt;\uff1b\u9636\u4e58\uff0c\u5176\u4e2dSelf\uff1aOne\uff0c&lt\uff1bSelf As One&gt\uff1b\uff1a\uff1aResult\uff1aSWAP\uff0c&lt\uff1b&lt\uff1bSelf As&gt\uff1b\uff1a\uff1aResult AS SWAP&gt\uff1b\uff1a\uff1aResult\uff1aFact0\uff0c{type Result=&lt\uff1b&lt\uff1b\uff1a\uff1aResult As One&gt\uff1b\uff1a\uff1aResult As}\u9152\u5427\u7279\u6027\u4e8b\u5b9e0{\u7c7b\u578b\u7ed3\u679c\uff1b}\u4e3a\u8282\u70b9&lt\uff1bV\uff0cN&&gt;\uff1b\u5b9e\u65bd&lt\uff1bV\uff0cN&&gt;\uff1bfact0\uff0c\u5176\u4e2dSELF\uff1aDUP\uff0c&lt\uff1bSELF AS DUP&&gt;\uff1b\uff1a\uff1aRESULT\uff1aONE\uff0c&lt\uff1b&lt\uff1bSELF AS DUP&&gt;\uff1b\uff1a\uff1aRESULT AS ONE\uff1b\uff1a\uff1aRESULT\uff1aEQ\uff0c&lt\uff1b&lt\uff1b\uff1a\uff1aRESULT AS ONE&gT\uff1bSelf As DUP&&gt;\uff1b\uff1a\uff1aResult As EQ&&gt;\uff1b\uff1aResult As iff&&gt;\uff1b\uff1a\uff1aResult\uff1aDrop\uff0c&lt\uff1b&lt\uff1bSelf As DUP&&gt;\uff1b\uff1aResult As EQ&&gt;\uff1b\uff1a\uff1aResult As Drop&&gt;\uff1b\uff1a\uff1aResult AS DUP&&gt;\uff1b\uff1a\uff1aResult AS DUP&&gt;\uff1b&lt\uff1b&lt\uff1bSelf as DUP&gt\uff1b\uff1a\uff1aResult As Drop&&gt;\uff1b\uff1a\uff1aResult As DUP&&gt;\uff1b\uff1a\uff1aResult As DUP&&gt;\uff1b\uff1a\uff1aResult AS DUP&&gt;\uff1b&lt\uff1b&lt\uff1b\uff1a\uff1aResult as Else&&gt;\uff1b\uff1aResult as Else As DUP&&gt;\uff1b\uff1a\uff1aResult as Else As DUP&&gt;\uff1b\uff1aResult As EQ&&gt;\uff1b\uff1aResult As Iq&&gt;\uff1b\uff1aResult As Drop&&gt;\uff1b\uff1aResult As Else As DUP&&gt;\uff1b\uff1a\uff1aResult As DUP&&gt;\uff1b\uff1a\uff1aResult As Else&&gt;\uff1b\uff1aResult As Else&&gt;\uff1b\uff1aResult As DUP&&gt;\uff1b\uff1a\uff1aResult As Else&&gt;\uff1b\uff1aResult As DUP&&gt;\uff1b\uff1a\uff1aResult As DUP&&gt;\u3002&lt\uff1b&lt\uff1bSELF AS DUP&&gt;\uff1b\uff1aRESULT AS EQ&&gt;\uff1b\uff1aRESULT AS EQ&&gt;\uff1b\uff1a\uff1aRESULT AS DUP&&gt;\uff1b\uff1a\uff1aRESULT AS ELELF&&gt;\uff1b\uff1aRESULT AS ROT&&gt;\uff1b\uff1a\uff1aRESULT\uff1aMULT\uff0c&lt\uff1b&lt\uff1bSELF AS DUP&&gt;\uff1b\uff1a\uff1aRESULT AS ONE&gt\uff1b\uff1a\uff1aResult as DUP&&gt;\uff1b\uff1a\uff1aResult as One&gt\uff1b\uff1a\uff1aResult as Elf&&gt;\uff1b\uff1aResult as DUP&&gt;\uff1b\uff1aResult as DUP&&gt;\uff1b\uff1aResult as Rot&&gt;\uff1b\uff1aResult as MULT&&gt;\uff1b\uff1a\uff1aResult\uff1aSWAP\uff0c&lt\uff1b&lt\uff1b&lt\uff1bSelf AS DUP&&gt;\uff1b\uff1aResult As One&gt\uff1b\uff1aResult AS EQ&&gt;\uff1b\uff1aResult As If&gt\uff1b\uff1aResult As If&gt\uff1b\uff1aResult As Iq&gt\uff1b\uff1aResult as Elf&gt\uff1b\uff1aResult as Iq&gt\uff1b\uff1aResult as Iq&gt\uff1b\uff1a\uff1a\uff1a\uff1a\u7ed3\u679c\u4e3a\u591a\u4e2a\u4ea4\u6362&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u591a\u4e2a\u4ea4\u6362&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u591a\u4e2a\u4ea4\u6362&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u591a\u4e2a\u4ea4\u6362&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u81ea\u8eab\u4e3a\u91cd\u590d&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u4e00\u4e2a\uff1a\u7ed3\u679c\u4e3a\u7b49\u5f0f\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664&&gt;\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u4e22\u5f03(&&gt;t\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664&gt\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664&gt\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664&gt\uff1b\uff1a\uff1a\u7ed3\u679c\u4e3a\u5220\u9664\uff1b\uff1a\uff1aResult as pred&&gt;\uff1b\uff1a\uff1aResult as pred&&gt;\uff1b\uff1aResult as&lt\uff1b&lt\uff1b&&gt;\uff1b\uff1aResult As One&&gt;\uff1b\uff1aResult As Eq&&gt;\uff1b\uff1aResult As Iq&&gt;\uff1b\uff1aResult As Drop&&gt;\uff1b\uff1a\uff1aResult As Pred&&gt;\uff1b\uff1a\uff1aResult as Else&&gt;\uff1b\uff1a\uff1aResult as Pred&&gt;\uff1b\uff1a\uff1aResult as Fact0&&gt;\uff1b\uff1a\uff1aResult\uff1aThen{TYPE RESULT=&lt\uff1b&lt\uff1bSELF AS DUP&&gt;\uff1b\uff1a\uff1aRESULT AS OUT&&gt;\uff1b\uff1a\uff1aRESULT AS EQ&&gt;\uff1b\uff1aRESULT AS EQ&&gt;\uff1b\uff1a\uff1aRESULT AS DUP&&gt;\uff1b\uff1aResult AS DUP&&gt;\uff1b\uff1aResult AS ROT&&gt;\uff1b\uff1aResult AS MULT&&gt;\uff1b\uff1a\uff1aResult AS SWAP&&gt;\uff1b\uff1a\uff1aResult AS Pred&gt\uff1b\uff1a\uff1aResult AS Fact0&gt\uff1b\uff1a\uff1aResult AS Then&gt\uff1b\uff1a\uff1aResult as DUP&&gt;\uff1b}println\uff01(&#34\uff1b{}&34\uff1b\uff0c&lt\uff1b&lt\u3002\uff1a\uff1aresult\uff1a\uff1aeval())\uff1b\n\u6b63\u5982\u60a8\u5728\u4e0a\u9762\u770b\u5230\u7684\uff0c\u5b9e\u9645\u4e0a\u652f\u6301\u76f8\u5f53\u591a\u7684\u5185\u5bb9\u3002\u7279\u5f81\u8bc4\u4f30\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u4f1a\u91cd\u65b0\u5bfc\u51fa\u5230\u5806\u6808\u4e0a(\u9664\u975e\u4ee5\u4e0d\u540c\u65b9\u5f0f\u5b8c\u6210)\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u6c7d\u989d\u5916\u7684\u5806\u6808\u64cd\u4f5c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002", "note_en": "Rust&#39;s trait system is Turing complete. This crate uses the principles from trait-eval to implement necessarytraits for forth evalutaion and provides a  forth! macro that transpilesforth&#39;s syntax to trait expressions.\n  Here&#39;s a simple factorial implementation, the only non-standard word here is pred which is a decrement operator, equivalent to  1 -:\n forth!( :  factorial (n  -- n)  1 swap fact0 ; :  fact0 (n n  -- n) dup  1  =  if drop  else dup rot  * swap pred fact0 then ;  5 factorial .);\n This prints  120. As you can see not only you can define functions easily, but even conditional recursion is possible!Now check out how it looks compiled to trait expressions (courtesy of  cargo expand):\n pub  trait  factorial {  type  Result;} impl&lt;V, N&gt;  factorial  for  Node&lt;V, N&gt; where  Self:  one, &lt; Self as one&gt;:: Result:  swap, &lt;&lt; Self as one&gt;:: Result  as  swap&gt;:: Result:  fact0,{  type  Result = &lt;&lt;&lt; Self as one&gt;:: Result as swap&gt;:: Result as fact0&gt;:: Result;} pub  trait  fact0 {  type  Result;} impl &lt;V ,N&gt;  fact0  for  Node &lt;V ,N&gt; where  Self:  dup, &lt; Self as dup&gt;:: Result:  one, &lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result:  eq, &lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result:  iff, &lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result:  drop, &lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result:  elsef, &lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result:  dup, &lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result:  rot, &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result  as  rot&gt;:: Result:  mult, &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result  as  rot&gt;:: Result  as  mult&gt;:: Result:  swap, &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result  as  rot&gt;:: Result  as  mult&gt;:: Result  as  swap&gt;:: Result:  pred, &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result  as  rot&gt;:: Result  as  mult&gt;:: Result  as  swap&gt;:: Result  as  pred&gt;:: Result:  fact0, &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result  as  one&gt;:: Result  as  eq&gt;:: Result  as  iff&gt;:: Result  as  drop&gt;:: Result  as  elsef&gt;:: Result  as  dup&gt;:: Result  as  rot&gt;:: Result  as  mult&gt;:: Result  as  swap&gt;:: Result  as  pred&gt;:: Result  as  fact0&gt;:: Result:  then{  type  Result = &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Self as dup&gt;:: Result as one&gt;:: Result as eq&gt;:: Result as iff&gt;:: Result as drop&gt;:: Result as elsef&gt;:: Result as dup&gt;:: Result as rot&gt;:: Result as mult&gt;:: Result as swap&gt;:: Result as pred&gt;:: Result as fact0&gt;:: Result as then&gt;:: Result;} println!( &#34;{}&#34;,  &lt;&lt; &lt;Empty  as five &gt; :: Result  as factorial &gt; :: Result  as top &gt; :: Result :: eval());\n   Quite a bit is actually supported as you can see above. Every operation from trait-eval is re-exported to work on the stack (except  if which is donedifferently), and a faw additional stack operations are provided. See  docsfor the details.", "posttime": "2020-06-13 03:12:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u9508\u8680,\u7279\u5f81", "title": "FORH\u5728\u9508\u8680\u6027\u72b6\u7cfb\u7edf\u4e2d\u7684\u5b9e\u65bd", "title_en": "Forth implemented in Rust trait system", "transed": 1, "url": "https://github.com/Ashymad/fortraith", "via": "", "real_tags": ["rust", "\u9508\u8680", "\u7279\u5f81"]}, {"category": "", "categoryclass": "", "imagename": "8eff49b6c652169efa3904de13d8d855.jpeg", "infoid": 1006316, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u529e\u516c\u5ba4\u5df2\u7ea6\u8c08\u4e86\u6765\u81ea\u8be5\u5dde\u51e0\u5bb6\u5de5\u5382\u7684\u4e9a\u9a6c\u900a(Amazon)\u5458\u5de5\uff0c\u56e0\u4e3a\u5458\u5de5\u62a5\u590d\u6307\u63a7\u5df2\u6210\u4e3a\u5176\u5bf9\u8be5\u516c\u53f8\u52b3\u5de5\u884c\u4e3a\u8c03\u67e5\u7684\u6838\u5fc3\u7126\u70b9\u3002\n\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u5229\u8482\u590f\u00b7\u8a79\u59c6\u65af(Letitia James)\u57284\u6708\u4efd\u81f4\u4fe1\u4e9a\u9a6c\u900a\uff0c\u79f0\u6b63\u5728\u8c03\u67e5\u8be5\u516c\u53f8\u89e3\u96c7\u4e00\u540d\u5728\u65af\u5854\u6ed5\u5c9b(Staten Island)\u5de5\u5382\u7ec4\u7ec7\u7f62\u5de5\u7684\u5de5\u4eba\u65f6\uff0c\u662f\u5426\u8fdd\u53cd\u4e86\u8054\u90a6\u52b3\u52a8\u6cd5\u6216\u8be5\u5dde\u7684\u4e3e\u62a5\u4eba\u6cd5\u5f8b\u3002\u8fd9\u4f4d\u540d\u53eb\u514b\u91cc\u65af\u00b7\u65af\u83ab\u5c14\u65af(Chris Smalls)\u7684\u5de5\u4eba\u9886\u5bfc\u4e86\u4e00\u573a\u6297\u8bae\u6d3b\u52a8\uff0c\u8981\u6c42\u4e9a\u9a6c\u900a\u5173\u95ed\u4ed3\u5e93\uff0c\u5e76\u5efa\u7acb\u66f4\u591a\u7684\u5b89\u5168\u4fdd\u62a4\u63aa\u65bd\uff0c\u8fd9\u547c\u5e94\u4e86\u5168\u56fd\u5404\u5730\u4ed3\u5e93\u5de5\u4eba\u7684\u62c5\u5fe7\u3002\n\u8fd9\u5c01\u4fe1\u547c\u5401\u4e9a\u9a6c\u900a\u6062\u590dSmalls\uff0c\u5e76\u8981\u6c42\u5176\u4ea4\u51fa\u81ea2\u67081\u65e5\u4ee5\u6765\u6240\u6709\u4e0e\u5de5\u4eba\u6295\u8bc9\u3001\u6297\u8bae\u548c\u7ec4\u7ec7\u52aa\u529b\u6709\u5173\u7684\u5185\u90e8\u901a\u8baf\u3002\n3\u6708\u4e0b\u65ec\uff0c\u8a79\u59c6\u65af\u529e\u516c\u5ba4\u5f00\u59cb\u8054\u7cfb\u7ebd\u7ea6\u5730\u533a\u4ed3\u5e93\u7684\u4e9a\u9a6c\u900a\u5458\u5de5\u3002\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u516c\u53f8\u5df2\u7ecf\u4e0e\u65af\u5854\u6ed5\u5c9b\u3001\u7687\u540e\u533a\u548c\u8d1d\u65af\u4f69\u5947\u5de5\u5382\u7684\u5de5\u4eba\u8fdb\u884c\u4e86\u4ea4\u8c08\uff0c\u5e76\u5728\u6536\u5230\u6295\u8bc9\u65f6\u6b63\u5728\u589e\u52a0\u66f4\u591a\u8bbe\u65bd\u3002\n\u5bf9\u8bdd\u6d89\u53ca\u5230\u4e9a\u9a6c\u900a\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u7684\u5b89\u5168\u505a\u6cd5\uff0c\u5305\u62ec\u6267\u884c\u793e\u4ea4\u8ddd\u79bb\u89c4\u5219\uff0c\u5458\u5de5\u83b7\u5f97\u4e2a\u4eba\u9632\u62a4\u88c5\u5907\uff0c\u4ee5\u53ca\u5728\u8bbe\u65bd\u4e2d\u8bb0\u5f55\u51a0\u72b6\u75c5\u6bd2\u9633\u6027\u75c5\u4f8b\u3002\u636e\u4e00\u4e9b\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u901a\u8fc7\u6536\u96c6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u8be5\u529e\u516c\u5ba4\u6b63\u5728\u5bfb\u6c42\u7acb\u6848\uff0c\u8bc1\u660e\u4e9a\u9a6c\u900a(Amazon)\u5bf9\u516c\u5f00\u8c08\u8bba\u4ed3\u5e93\u72b6\u51b5\u7684\u5de5\u4eba\u91c7\u53d6\u4e86\u62a5\u590d\u63aa\u65bd\u3002\n\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u529e\u516c\u5ba4\u62d2\u7edd\u7f6e\u8bc4\u3002\u4e9a\u9a6c\u900a\u6ca1\u6709\u56de\u5e94\u6709\u5173\u8be5\u529e\u516c\u5ba4\u8c03\u67e5\u7684\u95ee\u9898\uff0c\u4f46\u5217\u4e3e\u4e86\u5b83\u5df2\u91c7\u53d6\u7684\u4fdd\u62a4\u5458\u5de5\u5065\u5eb7\u548c\u5b89\u5168\u7684\u63aa\u65bd\uff0c\u5305\u62ec\u4f53\u6e29\u68c0\u67e5\u3001\u6d4b\u8bd5\u3001\u624b\u5957\u3001\u53e3\u7f69\u4ee5\u53ca\u5ef6\u957f\u5de5\u8d44\u548c\u798f\u5229\u3002\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5b83\u4e00\u76f4\u9075\u5faa\u516c\u5171\u536b\u751f\u673a\u6784\u7684\u6307\u5bfc\u3002\n\u4e9a\u9a6c\u900a\u53d1\u8a00\u4eba\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u6211\u4eec\u5bf9\u65b0\u51a0\u80ba\u708e\u7ed9\u5168\u7403\u793e\u533a\u9020\u6210\u7684\u60b2\u5267\u6027\u5f71\u54cd\u611f\u5230\u60b2\u75db\uff0c\u5305\u62ec\u4e00\u4e9b\u4e9a\u9a6c\u900a\u56e2\u961f\u6210\u5458\u548c\u4ed6\u4eec\u7684\u5bb6\u4eba\u548c\u670b\u53cb\u3002\n\u4e9a\u9a6c\u900a\u89e3\u96c7\u4e86\u81f3\u5c11\u516d\u540d\u5458\u5de5\uff0c\u5e76\u5199\u4e0b\u4e86\u56db\u540d\u5458\u5de5\u7684\u540d\u5b57\uff0c\u8fd9\u4e9b\u5458\u5de5\u76f4\u8a00\u4e0d\u8bb3\u5730\u6279\u8bc4\u516c\u53f8\u7684\u52b3\u5de5\u505a\u6cd5\uff0c\u6216\u53c2\u4e0e\u4e86\u6297\u8bae\u6d3b\u52a8\u3002\u8be5\u516c\u53f8\u6b64\u524d\u66fe\u9a73\u65a5\u6709\u5173\u5176\u89e3\u96c7\u5458\u5de5\u76f4\u8a00\u4e0d\u8bb3\u7684\u8bf4\u6cd5\uff0c\u79f0\u4ed6\u4eec\u662f\u56e0\u4e3a\u8fdd\u53cd\u5185\u90e8\u653f\u7b56\u800c\u88ab\u89e3\u96c7\u3002\n\u8a79\u59c6\u65af\u529e\u516c\u5ba4\u5df2\u7ecf\u8054\u7cfb\u4e86\u4e9a\u9a6c\u900a\uff0c\u4ee5\u8bc1\u5b9e\u5b83\u4ece\u5de5\u4eba\u90a3\u91cc\u6536\u5230\u7684\u4e00\u4e9b\u6295\u8bc9\u3002\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u76f4\u5230\u6700\u8fd1\uff0c\u4e9a\u9a6c\u900a\u8fd8\u6ca1\u6709\u914d\u5408\u8be5\u529e\u516c\u5ba4\u7d22\u53d6\u4fe1\u606f\u7684\u8981\u6c42\u3002\n\u5176\u4ed6\u7ec4\u7ec7\u4e5f\u5728\u5411\u4e9a\u9a6c\u900a\u65bd\u538b\uff0c\u8981\u6c42\u5176\u516c\u5e03\u6709\u5173\u5176\u7ebd\u7ea6\u8bbe\u65bd\u7684\u4fe1\u606f\u3002\u4e0a\u5468\uff0c\u4e09\u540dJFK8\u5458\u5de5\u5bf9\u8be5\u516c\u53f8\u63d0\u8d77\u8bc9\u8bbc\uff0c\u79f0\u8be5\u516c\u53f8\u963b\u788d\u4e86\u963b\u6b62\u75c5\u6bd2\u4f20\u64ad\u7684\u52aa\u529b\uff0c\u5e76\u5c06\u751f\u4ea7\u7387\u7f6e\u4e8e\u5b89\u5168\u4e4b\u4e0a\uff0c\u4f7f\u65af\u5854\u6ed5\u5c9b\u5de5\u5382\u6210\u4e3a\u5371\u9669\u4e4b\u5730\u3002\u7ebd\u7ea6Make the Road\u5f8b\u5e08\u4e8b\u52a1\u6240(Make The Road New York)\u7684\u4e13\u804c\u5f8b\u5e08\u5f17\u5170\u514b\u00b7\u79d1\u5c14(Frank Kearl)\u8868\u793a\uff0c\u4ed6\u5bf9\u4e9a\u9a6c\u900a\u6ca1\u6709\u5168\u9762\u914d\u5408\u8be5\u529e\u516c\u5ba4\u7684\u8c03\u67e5\u5e76\u4e0d\u611f\u5230\u60ca\u8bb6\u3002Make the Road New York\u52a0\u5165\u4e86\u51e0\u4e2a\u52b3\u5de5\u6743\u76ca\u5021\u5bfc\u56e2\u4f53\uff0c\u4ee3\u8868\u5de5\u4eba\u63d0\u8d77\u8bc9\u8bbc\u3002\n\u5361\u5c14\u8bf4\uff0c\u4e9a\u9a6c\u900a\u7684\u6574\u4e2a\u7cfb\u7edf\u90fd\u5efa\u7acb\u5728\u5bf9\u4e00\u5207\u7684\u94c1\u8155\u63a7\u5236\u4e4b\u4e0a\u3002\u5f53\u6d89\u53ca\u5230\u5de5\u4eba\u65f6\uff0c\u4ed6\u4eec\u5229\u7528\u4fe1\u606f\u7684\u4e0d\u5e73\u8861\u5bf9\u4ed6\u4eec\u6709\u5229\u3002\n\u5de5\u4eba\u4eec\u8868\u793a\uff0c\u4ed6\u4eec\u56e0\u63a8\u52a8\u5728\u8bbe\u65bd\u4e2d\u5b9e\u65bd\u66f4\u597d\u7684\u5b89\u5168\u4fdd\u62a4\u63aa\u65bd\u800c\u906d\u5230\u62a5\u590d\u3002\u51e0\u540d\u5458\u5de5\u58f0\u79f0\uff0c\u4ed6\u4eec\u5728\u53c2\u52a0\u6297\u8bae\u6d3b\u52a8\u6216\u4e0e\u7ba1\u7406\u5c42\u5c31\u4ed6\u4eec\u7684\u62c5\u5fe7\u5bf9\u5cd9\u5e76\u5411\u56fd\u5bb6\u52b3\u52a8\u5173\u7cfb\u59d4\u5458\u4f1a(NLRB)\u63d0\u51fa\u6295\u8bc9\u540e\uff0c\u6536\u5230\u4e86\u4e66\u9762\u8b66\u544a\u3002\n5\u67086\u65e5\uff0c\u8a79\u59c6\u65af\u529e\u516c\u5ba4\u6b63\u5728\u8c03\u67e5\u7684\u5730\u70b9\u4e4b\u4e00\uff0c\u4e9a\u9a6c\u900a\u7687\u540e\u533a\u5de5\u5382\u7684\u5458\u5de5\u63d0\u4ea4\u4e86\u4e00\u4efd\u5168\u56fd\u52b3\u8d44\u5173\u7cfb\u59d4\u5458\u4f1a(NLRB)\u7684\u7533\u8bc9\uff0c\u79f0\u8be5\u516c\u53f8\u62a5\u590d\u4e86\u8bd5\u56fe\u7ec4\u7ec7\u7ec4\u7ec7\u7684\u5de5\u4eba\u3002\u4e9a\u9a6c\u900a\u5728\u829d\u52a0\u54e5\u3001\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u3001\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3001\u5370\u7b2c\u5b89\u7eb3\u5dde\u548c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u5de5\u4eba\u4e5f\u63d0\u4ea4\u4e86NLRB\u7684\u6295\u8bc9\uff0c\u6307\u63a7\u8be5\u516c\u53f8\u91c7\u53d6\u7c7b\u4f3c\u7684\u7b56\u7565\u3002\nJFK8\u5de5\u4eba\u65af\u83ab\u5c14\u65af(Smalls)\u4e8e3\u670821\u65e5\u5411\u7ebd\u7ea6\u5dde\u536b\u751f\u90e8(New York State Department Of Health)\u63d0\u51fa\u7533\u8bc9\uff0c\u79f0\u7531\u4e8e\u6e05\u6d01\u4e0d\u8db3\u548c\u793e\u4f1a\u758f\u8fdc\u6267\u6cd5\u677e\u61c8\u7b49\u539f\u56e0\uff0c\u5458\u5de5\u6b63\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u4ed6\u8bf4\uff0c\u4ed6\u5e0c\u671b\u8a79\u59c6\u65af\u7684\u8c03\u67e5\u80fd\u8ba9\u90a3\u4e9b\u56e0\u63d0\u51fa\u62c5\u5fe7\u800c\u88ab\u89e3\u96c7\u6216\u53d7\u5230\u7eaa\u5f8b\u5904\u5206\u7684\u5de5\u4eba\u590d\u804c\u3002\n\u65af\u83ab\u5c14\u65af\u8868\u793a\uff0c\u4e9a\u9a6c\u900a\u9700\u8981\u627f\u62c5\u8d23\u4efb\u3002\u6211\u4eec\u8bd5\u8fc7\u8fd9\u6837\u505a\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\u5728\u8fd9\u573a\u6d41\u884c\u75c5\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u6ca1\u6709\u4fdd\u62a4\u6211\u4eec\u3002", "note_en": "The New York attorney general&#39;s office has interviewed  Amazon workers from a handful of facilities in the state, as claims of employee retaliation become a central focus of its investigation into the company&#39;s labor practices, according to people familiar with the matter.\n New York Attorney General Letitia James sent a letter to Amazon in April saying it was looking into whether the company violated federal employment law or broke the state&#39;s whistleblower laws when  it fired a worker who organized a strike at its Staten Island facility. The worker, Chris Smalls, led a protest calling for Amazon to close the warehouse and put in place greater safety protections, echoing warehouse workers&#39; concerns  across the country.\n  The letter calls on Amazon to reinstate Smalls and asks it to turn over all internal communications dating back to Feb. 1 related to workers&#39; complaints, protests and efforts to organize.\n In late March, James&#39; office began contacting Amazon workers from New York area warehouses. So far, it has spoken to workers from facilities in Staten Island, Queens and Bethpage, and is adding more facilities to its roster as it receives complaints, the people said.\n The conversations have touched on Amazon&#39;s safety practices during the coronavirus pandemic, including enforcement of social distancing rules, workers&#39; access to personal protective equipment and its documentation of positive coronavirus cases at facilities. By collecting this information, the office is looking to build a case of Amazon&#39;s retaliatory practices against workers who spoke out about warehouse conditions, according to some of the people familiar with the matter.\n The New York attorney general&#39;s office declined to comment. Amazon did not respond to questions about the office&#39;s investigation, but cited  measures it has taken to protect workers&#39; health and safety, including temperature checks, testing, gloves, masks and extended pay and benefits. Amazon said it has always followed the guidance of public health agencies.\n &#34;We are saddened by the tragic impact COVID-19 has had on communities across the globe, including on some Amazon team members and their family and friends,&#34; an Amazon spokesperson said in a statement.\n  Amazon has fired at least six employees and written up four workers who were outspoken critics of the company&#39;s labor practices or participated in protests. The company has previously disputed claims that it fired workers for speaking out, saying they were fired for violating internal policies.\n James&#39; office has reached out to Amazon to substantiate some of the complaints it has received from workers. Up until recently, Amazon was not cooperating with the office&#39;s requests for information, people familiar with the investigation said.\n  Other groups are also pressuring Amazon to release information about its New York facilities. Last week, three JFK8 workers  filed a lawsuit against the company that said it made the Staten Island facility &#34;a place of danger&#34; by impeding efforts to stop the spread of the virus and prioritizing productivity over safety. Frank Kearl, a staff attorney with Make the Road New York, which joined several labor advocacy groups in filing the lawsuit on behalf of workers, said he wasn&#39;t surprised Amazon hasn&#39;t fully cooperated with the office&#39;s investigation.\n &#34;Amazon&#39;s entire system is built upon an iron fist of control over everything,&#34; Kearl said. &#34;They use that imbalance of information to their advantage when it comes to workers.&#34;\n Workers say they&#39;ve been retaliated against for pushing for better safety protections at their facilities. Several employees allege they received written warnings after they participated in protests or confronted management with their concerns and filed complaints with the National Labor Relations Board (NLRB).\n Employees at Amazon&#39;s Queens facility, one of the sites being investigated by James&#39; office, filed an NLRB complaint May 6 alleging the company retaliated against workers who attempted to organize. Amazon workers in Chicago, Pennsylvania, California, Indiana and Florida have also filed NLRB complaints accusing the company of similar tactics.\n Smalls, the JFK8 worker, filed a complaint with the New York State Department of Health on March 21 that said employees were being put in danger as a result of insufficient cleaning and lax social distancing enforcement, among other things. He said he hopes James&#39; investigation results in the reinstatement of workers who were fired or disciplined for raising concerns.\n &#34;Amazon needs to be held accountable,&#34; Smalls said. &#34;We tried to do that and it didn&#39;t happen. They didn&#39;t protect us in the beginning of this pandemic.&#34;", "posttime": "2020-06-13 02:54:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e9a\u9a6c\u900a,amazon,\u62a5\u590d,probe,\u5de5\u4eba", "title": "\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u6b63\u5728\u5c31\u4ed3\u5e93\u6761\u4ef6\u7ea6\u8c08\u4e9a\u9a6c\u900a\u5458\u5de5\uff0c\u62a5\u590d\u8c03\u67e5\u4ecd\u5728\u7ee7\u7eed", "title_en": "New York Attorney General is Interviewing Amazon Employees About Warehouse Conditions as Retaliation Probe Continues", "transed": 1, "url": "https://www.cnbc.com/2020/06/12/new-york-attorney-general-interviewing-amazon-workers-about-conditions.html", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "\u62a5\u590d", "probe", "\u5de5\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "b22e430cf35da9f192bb4dc94eeb4a7b.jpg", "infoid": 1006315, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u9002\u5e94\u6d41\u5f0f\u4f20\u8f93\u662f\u4e00\u79cd\u901a\u8fc7\u5411\u5ba2\u6237\u7aef\u63d0\u4f9b\u53ef\u53d8\u6bd4\u7279\u7387\u6d41\u6765\u63d0\u4f9b\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u7684\u6280\u672f\u3002\u4e13\u4e3a\u5728HTTP\u4e0a\u5de5\u4f5c\u800c\u8bbe\u8ba1\uff0c\u5b83\u5c06\u5a92\u4f53\u5185\u5bb9\u4f5c\u4e3a\u5177\u6709\u5a92\u4f53\u7c7b\u578b\u548c\u5404\u79cd\u6bd4\u7279\u7387\u7684\u5355\u72ec\u6d41\u63d0\u4f9b\uff0c\u5ba2\u6237\u7aef\u5c06\u80fd\u591f\u6839\u636e\u5176\u7f51\u7edc\u5e26\u5bbd\u6216CPU\u80fd\u529b\u8fdb\u884c\u9009\u62e9\u3002\nMPEG-DASH\u662f\u6700\u5b8c\u6574\u7684\u81ea\u9002\u5e94\u6d41\u5a92\u4f53\u6280\u672f\u3002\u8be5\u683c\u5f0f\u57fa\u4e8e\u79f0\u4e3aMPD(\u5a92\u4f53\u6f14\u793a\u63cf\u8ff0)\u7684XML\u63cf\u8ff0\u6587\u4ef6\u3002\u8be5\u683c\u5f0f\u63cf\u8ff0\u5177\u6709\u5a92\u4f53\u7c7b\u578b(\u97f3\u9891\u3001\u89c6\u9891\u6216\u5b57\u5e55)\u5e76\u63d0\u4f9b\u5404\u79cd\u6bd4\u7279\u7387\u6216\u5a92\u4f53\u683c\u5f0f\u7684\u4e00\u7ec4\u8868\u793a\u3002\n\u8be5\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u4e2a\u5f00\u653e\u6807\u51c6\uff0c\u53d7\u5230\u4e1a\u754c\u7684\u5e7f\u6cdb\u652f\u6301\u3002\u6709\u5173\u5b83\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95eeDASH-IF\u7f51\u7ad9\u3002\n\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0cMPD\u63cf\u8ff0\u4e86\u5177\u6709\u4e09\u79cd\u5a92\u4f53\u5185\u5bb9\u7c7b\u578b(\u9002\u914d\u96c6)\u7684\u9759\u6001\u5185\u5bb9\u3002\u6bcf\u4e2a\u8c03\u6574\u96c6\u90fd\u5305\u542b\u8868\u793a\u6cd5\u3002\u89c6\u9891\u67095\u79cd\u4e0d\u540c\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u53ef\u4ee5\u6839\u636e\u64ad\u653e\u7ea6\u675f\u5207\u6362\u52305\u79cd\u4e0d\u540c\u7684\u7801\u7387\u3002\n&lt\uff1bmpd mediaPresentationDuration=&#34\uff1bPT634.566S&#34\uff1bminBufferTime=&#34\uff1bPT2.00S&#34\uff1bprofiles=&#34\uff1burn:hbbtv:dash:profile:isoff-live:2012\uff0cURN\uff1ampeg\uff1aDASH\uff1aPROFILE\uff1aISOFF-LIVE\uff1a2011&#34\uff1bTYPE=&#34\uff1bSTATIC&#34\uff1bXMLNS=&#34\uff1bURN\uff1ampeg\uff1aDASH\uff1aSCHEMA\uff1ampd\uff1a2011&#34\uff1bxmlns:xsi=&#34\uff1bhttp://www.w3.org/2001/XMLSchema-instance&#34\uff1bxsi\uff1aschemaLocation=&#34\uff1burn\uff1ampeg\uff1adash\uff1aschema\uff1ampd\uff1a2011 dash-MPD.xsd&#34\uff1b&gt\uff1b&lt\uff1bBaseURL&gt\uff1b\u3002/&lt\uff1b/BaseURL&gt\uff1b&lt\uff1b\u53e5\u53f7&gt\uff1b&lt\uff1bAdaptationSet id=&#34\uff1b1&#34\uff1bmimeType=&#34\uff1bvideo/mp4&#34\uff1bcontentType=&#34\uff1bvideo&#34\uff1bsubSegmentAlignment=&\u3002media=&#34\uff1b$RepresentationID$/$RepresentationID$_$Number$.m4v&#34\uff1b\u5f00\u59cb\u7f16\u53f7=&#34\uff1b1&#34\uff1binitialization=&#34\uff1b$RepresentationID$/$RepresentationID$_0.m4v&#34\uff1b/&gt\uff1b&lt\uff1b\u8868\u793aid=&#34\uff1bbbb_30fps_1280x720_4000K&#34\uff1b\u7f16\u89e3\u7801\u5668=&#34\uff1bavc1.64001f&#34\uff1b\u5e26\u5bbd=&#34\uff1b4952892&#34\uff1b\u5bbd\u5ea6=&#34\uff1b1280&#34\uff1b\u9ad8\u5ea6=&#34\uff1b720&#34\uff1b\u5e27\u300230&#34\uff1bsar=&#34\uff1b1\uff1a1&#34\uff1bscanType=&#34\uff1b\u6e10\u8fdb\u5f0f&#34\uff1b/&gt\uff1b&lt\uff1b\u8868\u793aid=&#34\uff1bbbb_30fps_320x180_200k&#34\uff1b\u7f16\u89e3\u7801\u5668=&#34\uff1bavc1.64000d&#34\uff1b\u5e26\u5bbd=&#34\uff1b254320&#34\uff1b\u5bbd\u5ea6=&#34\uff1b320&#34\uff1b\u9ad8\u5ea6=&#34\uff1b180&#34\uff1b\u5e27\u7387=\u3002&lt\uff1b\u8868\u793aid=&#34\uff1bbbb_30fps_480x270_600k&#34\uff1b\u7f16\u89e3\u7801\u5668=&#34\uff1bavc1.640015&#34\uff1b\u5e26\u5bbd=&#34\uff1b759798&#34\uff1b\u5bbd\u5ea6=&#34\uff1b480&#34\uff1b\u9ad8\u5ea6=&#34\uff1b270&#34\uff1b\u5e27\u7387=&#34\uff1b30&#34\uff1bSAR=&#34\uff1b1\uff1a1&#34\uff1b\u626b\u63cf\u7c7b\u578b=&#34\uff1b\u6e10\u8fdb\u5f0f&#34\u3002\u5e26\u5bbd=&#34\uff1b1013310&#34\uff1b\u5bbd\u5ea6=&#34\uff1b640&#34\uff1b\u9ad8\u5ea6=&#34\uff1b360&#34\uff1b\u5e27\u7387=&#34\uff1b30&#34\uff1bsar=&#34\uff1b1\uff1a1&#34\uff1bscanType=&#34\uff1b\u6e10\u8fdb\u5f0f&#34\uff1b/&&gt;\uff1b&lt\uff1b\u8868\u793aid=&#34\uff1bbbb_30fps_3840x2160_12000k&34\uff1b\u7f16\u89e3\u7801\u5668=&#34\uff1bavct\uff1b\u5e27\u901f\u7387=&#34\uff1b30&#34\uff1bsar=&#34\uff1b1\uff1a1&#34\uff1bscanType=&#34\uff1b\u6e10\u8fdb\u5f0f&34\uff1b/&gt\uff1b&lt\uff1b/AdaptationSet&gt\uff1b&lt\uff1bAdaptationSet id=&#34\uff1b2&#34\uff1bmimeType=&#34\uff1b\u97f3\u9891/MP4&#34\uff1bcontentType=&#34\uff1b\u97f3\u9891&#34\uff1b\u5b50\u6bb5\u5bf9\u9f50=&#34\uff1btrue&\u3002\u503c=&#34\uff1b6&#34\uff1b/&gt\uff1b&lt\uff1b\u89d2\u8272\u67b6\u6784IdUri=&#34\uff1burn\uff1ampeg\uff1a\u7834\u6298\u53f7\uff1a\u89d2\u8272\uff1a2011\u5e74&#34\uff1b\u503c=&#34\uff1b\u4e3b&#34\uff1b/&gt\uff1b&lt\uff1b\u6bb5\u6a21\u677f\u6301\u7eed\u65f6\u95f4=&#34\uff1b192512&#34\uff1b\u65f6\u95f4\u523b\u5ea6=&#34\uff1b48000&#34\uff1bmedia=&#34\uff1b$RepresentationID$/$RepresentationID$_$Number$.m4a&#34\uff1b\u5f00\u59cb\u7f16\u53f7=&#34\uff1b1&#34\uff1binitialization=&#34\uff1b$RepresentationID$/$RepresentationID$_0.m4a&#34\uff1b/&gt\uff1b&lt\uff1b\u8868\u793aID=&#\u3002bbb_a64k&#34\uff1b\u7f16\u89e3\u7801\u5668=&#34\uff1bmp4a.40.5&#34\uff1b\u5e26\u5bbd=&#34\uff1b67071&#34\uff1b\u97f3\u9891\u91c7\u6837\u7387=&#34\uff1b48000&#34\uff1b&gt\uff1b&lt\uff1b\u97f3\u9891\u9891\u9053\u914d\u7f6eschemeIdUri=&#34\uff1burn:mpeg:dash:23003:3:audio_channel_configuration:2011&#34\uff1b\u503c=&#34\uff1b2&#34\uff1b/&lt\uff1b&lt\uff1b/\u8868\u793a&lt\uff1b&lt\uff1b/\u9002\u914d\u8bbe\u7f6e&&gt;&lt\uff1b\u9002\u914d(AdaptationSet&lt\uff1b&lt\uff1bAdaptationSet&lt\uff1bmedia=&#34\uff1b$RepresentationID$/tile_$Number$.jpg&#34\uff1b/jpeg&#34\uff1bcontentType=&#34\uff1bImage&#34\uff1b&gt\uff1b&lt\uff1b\u6bb5\u6a21\u677f\u56fe\u50cf\u6301\u7eed\u65f6\u95f4=&#34\uff1b100&#34\uff1b\u5f00\u59cb\u7f16\u53f7=&#34\uff1b1&#34\uff1b/&gt\uff1b&lt\uff1b\u8868\u793a\u5e26\u5bbd=&#34\uff1b12288&#34\uff1bid=&#34\uff1b\u7f29\u7565\u56fe_320x180&#34\uff1b\u5bbd\u5ea6=&#34\uff1b3200&#34\uff1b\u9ad8\u5ea6=&#34\uff1b180&#\u3002http://dashif.org/thumbnail_tile&#34\uff1b\u503c=&#34\uff1b10x1&#34\uff1b/&&gt;&lt\uff1b/\u8868\u793a&&gt;&lt\uff1b/\u9002\u914d\u96c6\u5408&&gt;\uff1b&lt\uff1b/\u671f\u95f4&&gt;\uff1b&lt\uff1b/mpd&gt\uff1b\n\u81ea2012\u5e74\u4ee5\u6765\uff0cGStreamer\u53ea\u5305\u542b\u4e00\u4e2a\u540d\u4e3adashdemux\u7684DASH\u5ba2\u6237\u7aef\uff0c\u800c\u5bf9\u4e8eHLS\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5143\u7d20\uff1a\u89e3\u590d\u7528\u5668\u548c\u63a5\u6536\u5668\u3002\n\u8be5\u5143\u7d20\u4e8e2012\u5e74\u767b\u9646GStreamer\u5b58\u50a8\u5e93\uff0c\u4ece\u90a3\u65f6\u8d77\u5df2\u7ecf\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\uff0c\u4ee5\u652f\u6301DASH\u5728\u5176\u89c4\u8303\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63d0\u4f9b\u7684\u5404\u79cd\u7528\u4f8b\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u80fd\u591f\u652f\u6301\u591a\u4e2a\u6d41(\u89c6\u9891/\u97f3\u9891/\u5b57\u5e55)\uff0c\u5e76\u5141\u8bb8\u7528\u6237\u4ece\u53ef\u7528\u7684\u6d41o\u4e2d\u9009\u62e9\n2014\u5e74\uff0c\u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3aSplitmuxink\u7684\u65b0\u5143\u7d20\u3002\u5b83\u5904\u7406\u521b\u5efa\u5206\u6bb5\u6d41\u7684\u6700\u590d\u6742\u90e8\u5206\uff0c\u5b83\u7528\u540c\u6b65\u7684\u97f3\u9891\u548c\u89c6\u9891\u526a\u5207\u6587\u4ef6\u3002\u57fa\u4e8e\u6b64\u5143\u7d20\uff0c2017\u5e74\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3ahlssink2\u7684\u65b0HLS\u63a5\u6536\u5668\u3002\u6211\u6700\u7ec8\u51b3\u5b9a\u57fa\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u7834\u6298\u53f7\u63a5\u6536\u5668\u6765\u586b\u8865GStreamer\u4e2d\u7684\u7a7a\u767d\u3002\n\u4e3a\u4e86\u7edf\u4e00MPD\u652f\u6301\uff0c\u9996\u8981\u4efb\u52a1\u662f\u91cd\u65b0\u5b9a\u4f4d\u548c\u91cd\u65b0\u8bbe\u8ba1\u57fa\u7c7b\uff0c\u4ee5\u8bfb\u53d6\u548c\u5199\u5165MPD\u6587\u4ef6\u3002\u57fa\u4e8eXML\uff0c\u5a92\u4f53\u5448\u73b0\u63cf\u8ff0\u65b9\u6848\u57fa\u4e8e\u5982\u4e0a\u6240\u8ff0\u62e5\u6709\u5b50\u8282\u70b9\u548c\u5c5e\u6027\u7684\u591a\u4e2a\u8282\u70b9\u3002\u7b2c\u4e00\u4e2a\u91cd\u8981\u7684\u5de5\u4f5c\u9879\u76ee\u662f\u5c06\u4ee3\u7801\u62c6\u5206\u5230\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u6807\u8bc6\u6765\u81eaMPD\u67b6\u6784\u7684\u4e00\u4e2aXML\u8282\u70b9\uff0c\u5305\u62ec\u6839\u8282\u70b9\u3001\u53e5\u70b9\u3001\u9002\u914d\u96c6\u7b49\u3002\u9009\u62e9\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u6765\u7edf\u4e00\u5173\u4e8e\u89e3\u6790\u3001\u5bf9\u8c61\u5c5e\u6027\u64cd\u4f5c\u548cXML\u683c\u5f0f\u751f\u6210\u7684\u5de5\u4f5c\u3002\n\u53d7hlssink2\u5de5\u4f5c\u7684\u542f\u53d1\uff0c\u7834\u6298\u53f7\u63a5\u6536\u5668\u662f\u4e00\u4e2a\u8d85\u7ea7\u5b58\u50a8\u7bb1\uff0c\u5e76\u5305\u62ec\u4e00\u4e2a\u62c6\u5206\u5668\u4ee5\u63d0\u4f9b\u591a\u4e2a\u5a92\u4f53\u6bb5\u3002\u5728\u8fd9\u91cc\uff0c\u6700\u5927\u7684\u6311\u6218\u662f\u7f16\u5199\u7b26\u5408DASHIF\u4e00\u81f4\u6027\u6d4b\u8bd5\u7684MPD\uff0c\u8fd9\u91cc\u6709\u53ef\u7528\u7684\u548c\u5408\u9002\u7684\u5a92\u4f53\u6bb5\u3002\nTS\u5206\u6bb5\u652f\u6301(MP4\u652f\u6301\u5c1a\u672a\u5b8c\u6210)\uff0c\u77ed\u5206\u6bb5\u65b9\u6848\u4e2d\u7684\u5206\u6bb5\u8fc7\u6e21\u9700\u8981\u989d\u5916\u5de5\u4f5c\u3002\n\u5728\u4e0b\u9762\u7684\u7ba1\u9053\u4e2d\uff0c\u5728/tmp\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u9759\u6001MPD\u6587\u4ef6\uff0c\u5e76\u572860s\u7684\u65f6\u95f4\u6bb5\u5185\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u5355\u4e2a\u89c6\u9891\u6d41\u7684\u5355\u4e2a\u6bb5\u3002\u8be5\u6bb5\u5c06\u88ab\u7f16\u7801\u4e3aH.264\u5e76\u5c01\u88c5\u5728MPEG\u4f20\u8f93\u6d41\u6587\u4ef6\u4e2d\u3002\n$gst-Launch-1-m\u4eea\u8868\u76d8\u540d\u79f0=\u4eea\u8868\u76d8mpd-\u6839\u8def\u5f84=/tmp\u76ee\u6807-\u6301\u7eed\u65f6\u95f4=60\u52a8\u6001=\u5047\u671f\u95f4-\u6301\u7eed\u65f6\u95f4=60000\u590d\u7528\u5668=ts v4l2src\uff01\u89c6\u9891/x-RAW\uff0c\u5e27\u7387=30/1\uff0c\u5bbd\u5ea6=320\uff0c\u9ad8\u5ea6=240\uff01\u89c6\u9891\u8f6c\u6362\uff01\u6392\u961f\uff01x264enc\u6bd4\u7279\u7387=400\uff01dashsink.video_0\u3002\n\u672a\u6765\u7684\u5de5\u4f5c\u5305\u62ec\u5b9e\u73b0\u5bf9\u9075\u5faaCMAF(MPEG-A Part 19)\u89c4\u8303\u521b\u5efaMP4\u7247\u6bb5\u6587\u4ef6\u7684\u652f\u6301\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4eea\u8868\u76d8\u6216GStreamer\u4efb\u4f55\u5176\u4ed6\u90e8\u5206\u7684\u4fe1\u606f\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\uff01\n\u8bf7\u52fe\u9009\u6b64\u6846\u4ee5\u786e\u8ba4\u60a8\u5df2\u9605\u8bfb\u5e76\u63a5\u53d7\u6211\u4eec\u5173\u4e8e\u6536\u96c6/\u5b58\u50a8\u548c\u4f7f\u7528\u60a8\u7684\u4e2a\u4eba\u6570\u636e\u7684\u9690\u79c1\u58f0\u660e\u6761\u6b3e\uff1a*", "note_en": "Adaptive streaming is a technique to provide flexibility and scalability by offering variable bit-rate streams to the client. Designed to work over HTTP, it provides media content as separate streams with media type and various bit-rates, the client will be able to select according to its network bandwidth or its CPU power.\n      MPEG-DASH is the most complete adaptive streaming technique. This format is based on an XML description file called an MPD (Media Presentation Description). This format describes a set of  representations which has a media type (audio, video or subtitles) and provides various bit-rate or media format.\n  This solution is an open standard and is widely supported by the industry. For more information about it, you can visit the  DASH-IF website.\n  In the example below, the MPD describes a static content with three media content type (adaptation sets). Each adaptations sets contains representations. The video has 5 different representations, which allows to switch to 5 different bit rates according to the playback constraints.\n  &lt;MPD mediaPresentationDuration=&#34;PT634.566S&#34; minBufferTime=&#34;PT2.00S&#34; profiles=&#34;urn:hbbtv:dash:profile:isoff-live:2012,urn:mpeg:dash:profile:isoff-live:2011&#34; type=&#34;static&#34; xmlns=&#34;urn:mpeg:dash:schema:mpd:2011&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xsi:schemaLocation=&#34;urn:mpeg:DASH:schema:MPD:2011 DASH-MPD.xsd&#34;&gt;\r &lt;BaseURL&gt;./&lt;/BaseURL&gt;\r &lt;Period&gt;\r &lt;AdaptationSet id=&#34;1&#34; mimeType=&#34;video/mp4&#34; contentType=&#34;video&#34; subsegmentAlignment=&#34;true&#34; subsegmentStartsWithSAP=&#34;1&#34; par=&#34;16:9&#34;&gt;\r &lt;SegmentTemplate duration=&#34;120&#34; timescale=&#34;30&#34; media=&#34;$RepresentationID$/$RepresentationID$_$Number$.m4v&#34; startNumber=&#34;1&#34; initialization=&#34;$RepresentationID$/$RepresentationID$_0.m4v&#34;/&gt;\r &lt;Representation id=&#34;bbb_30fps_1280x720_4000k&#34; codecs=&#34;avc1.64001f&#34; bandwidth=&#34;4952892&#34; width=&#34;1280&#34; height=&#34;720&#34; frameRate=&#34;30&#34; sar=&#34;1:1&#34; scanType=&#34;progressive&#34;/&gt;\r &lt;Representation id=&#34;bbb_30fps_320x180_200k&#34; codecs=&#34;avc1.64000d&#34; bandwidth=&#34;254320&#34; width=&#34;320&#34; height=&#34;180&#34; frameRate=&#34;30&#34; sar=&#34;1:1&#34; scanType=&#34;progressive&#34;/&gt;\r &lt;Representation id=&#34;bbb_30fps_480x270_600k&#34; codecs=&#34;avc1.640015&#34; bandwidth=&#34;759798&#34; width=&#34;480&#34; height=&#34;270&#34; frameRate=&#34;30&#34; sar=&#34;1:1&#34; scanType=&#34;progressive&#34;/&gt;\r &lt;Representation id=&#34;bbb_30fps_640x360_800k&#34; codecs=&#34;avc1.64001e&#34; bandwidth=&#34;1013310&#34; width=&#34;640&#34; height=&#34;360&#34; frameRate=&#34;30&#34; sar=&#34;1:1&#34; scanType=&#34;progressive&#34;/&gt;\r &lt;Representation id=&#34;bbb_30fps_3840x2160_12000k&#34; codecs=&#34;avc1.640033&#34; bandwidth=&#34;14931538&#34; width=&#34;3840&#34; height=&#34;2160&#34; frameRate=&#34;30&#34; sar=&#34;1:1&#34; scanType=&#34;progressive&#34;/&gt;\r &lt;/AdaptationSet&gt;\r\r &lt;AdaptationSet id=&#34;2&#34; mimeType=&#34;audio/mp4&#34; contentType=&#34;audio&#34; subsegmentAlignment=&#34;true&#34; subsegmentStartsWithSAP=&#34;1&#34;&gt;\r &lt;Accessibility schemeIdUri=&#34;urn:tva:metadata:cs:AudioPurposeCS:2007&#34; value=&#34;6&#34;/&gt;\r &lt;Role schemeIdUri=&#34;urn:mpeg:dash:role:2011&#34; value=&#34;main&#34;/&gt;\r &lt;SegmentTemplate duration=&#34;192512&#34; timescale=&#34;48000&#34; media=&#34;$RepresentationID$/$RepresentationID$_$Number$.m4a&#34; startNumber=&#34;1&#34; initialization=&#34;$RepresentationID$/$RepresentationID$_0.m4a&#34;/&gt;\r &lt;Representation id=&#34;bbb_a64k&#34; codecs=&#34;mp4a.40.5&#34; bandwidth=&#34;67071&#34; audioSamplingRate=&#34;48000&#34;&gt;\r &lt;AudioChannelConfiguration schemeIdUri=&#34;urn:mpeg:dash:23003:3:audio_channel_configuration:2011&#34; value=&#34;2&#34;/&gt;\r &lt;/Representation&gt;\r &lt;/AdaptationSet&gt;\r\r &lt;AdaptationSet id=&#34;3&#34; mimeType=&#34;image/jpeg&#34; contentType=&#34;image&#34;&gt;\r &lt;SegmentTemplate media=&#34;$RepresentationID$/tile_$Number$.jpg&#34; duration=&#34;100&#34; startNumber=&#34;1&#34;/&gt;\r &lt;Representation bandwidth=&#34;12288&#34; id=&#34;thumbnails_320x180&#34; width=&#34;3200&#34; height=&#34;180&#34;&gt;\r &lt;EssentialProperty schemeIdUri=&#34;http://dashif.org/thumbnail_tile&#34; value=&#34;10x1&#34;/&gt;\r &lt;/Representation&gt;\r &lt;/AdaptationSet&gt;\r\r &lt;/Period&gt;\r&lt;/MPD&gt;\n    Since 2012, GStreamer includes only a DASH client called  dashdemux whereas, for HLS, it provides the both elements, demuxer and sink.\n    This element landed in the GStreamer repository in 2012 and had evolved a lot since that time to support the various use-cases DASH offers in its specifications and its applications. Indeed it is able to support multiple streams (video/audio/subtitles) and allows the user to select from the available streams or automatically select the best representation according to the network.\n    A first attempt to propose a DASH sink was also in 2012. The design was not mature enough to be landed and the author never had the time to complete it.\n  In 2014, a new element called  splitmuxsink was introduced. It handles the most complex part of creating a fragmented stream, it cuts files with synchronized audio and video. Based on this element, a new HLS sink called  hlssink2 was created in 2017. I decided to finally create a DASH sink based on this approach to fill the gap in GStreamer.\n    In order to unify the MPD support, a first task has been to relocate and redesign the base classes to read, and write, an MPD file. Based on XML, the Media Presentation Description scheme is based on multiple nodes owning children and properties as described above. A first important work item was to split the code in &#39;objects&#39; each identifying an XML node from the MPD schema, including the root node, periods, adaptation sets, etc. An object oriented approach has been selected to unify the work regarding the parsing, object property manipulation and the XML format generation.\n    Inspired from the work on  hlssink2, the dash sink is a &#34;super bin&#34; and includes a  splitmuxsink to provide the multiple media segments. Most of the challenge, here, was to write the MPD compliant with the DASHIF conformance test  here with usable and suitable media segments.\n    TS segment supported (MP4 support is not yet complete), need additional work for the segment transition in short segment scheme.\n    In the following pipeline a static MPD file is created in  /tmp along with one single segment long for a single video stream during a period of 60s. The segment will be encoded as H.264 and encapsulated in MPEG transpor stream files.\n  $ gst-launch-1.0 -m dashsink name=dashsink mpd-root-path=/tmp target-duration=60 dynamic=false period-duration=60000 muxer=ts v4l2src ! video/x-raw,framerate=30/1,width=320,height=240 ! videoconvert ! queue ! x264enc bitrate=400 ! dashsink.video_0\n  Future work includes implementing support for creating MP4 fragment files following the CMAF (MPEG-A Part 19) specification.\n  If you would like to learn more about dashsink or any other parts of GStreamer, please  contact us!\n  Please tick this box to confirm you have read and accept the terms of our  privacy notice regarding collection/storage and usage of your personal data: *", "posttime": "2020-06-13 02:53:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u6e90\u81ea,mpeg,mpd", "title": "\u57fa\u4e8eGStreamer\u7684\u5f00\u6e90\u81ea\u9002\u5e94\u6d41\u5a92\u4f53MPEG-Dash\u6d41\u751f\u6210", "title_en": "Generating MPEG-Dash Streams for Open Source Adaptive Streaming with GStreamer", "transed": 1, "url": "https://www.collabora.com/news-and-blog/blog/2020/06/12/generating-mpeg-dash-streams-for-open-source-adaptive-streaming-with-gstreamer/", "via": "", "real_tags": ["\u5f00\u6e90", "\u6e90\u81ea", "mpeg", "mpd"]}, {"category": "", "categoryclass": "", "imagename": "4eb575976a3c62d83bd4d0666e2aa807.jpeg", "infoid": 1006314, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Expresso\u662f\u4e00\u79cd\u6700\u5c0f\u9759\u6001\u7c7b\u578b\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u8bbe\u8ba1\u65f6\u8003\u8651\u4e86\u5d4c\u5165\u5f0f\u548c/\u6216\u53ef\u6269\u5c55\u6027\u3002\u8fd9\u79cd\u6700\u5c0f\u8bed\u8a00\u7684\u53ef\u80fd\u7528\u4f8b\u5305\u62ec\u914d\u7f6e(\u5982Nix)\u3001\u6570\u636e\u4ea4\u6362(\u5982JSON)\uff0c\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u5916\u90e8DSL\u7684\u8d77\u70b9\u3002\nExpresso\u662f\u4e00\u79cd\u51fd\u6570\u5f0f\u8bed\u8a00\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528lambda\u672f\u8bed\u4f5c\u4e3a\u57fa\u672c\u7684\u62bd\u8c61\u624b\u6bb5\u3002\u8981\u521b\u5efa\u547d\u540d\u51fd\u6570\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528let\u7ed1\u5b9a\u4e00\u4e2alambda\u5373\u53ef\u3002\u6211\u66fe\u60f3\u8fc7\u4f7f\u7528Nix\u98ce\u683c\u7684lambda\u8bed\u6cd5\uff0c\u4f8b\u5982x\uff1ax\u4f5c\u4e3a\u6807\u8bc6\u51fd\u6570\uff0c\u4f46\u662f\u8bb8\u591a\u4e3b\u6d41\u8bed\u8a00\uff0c\u4e0d\u4ec5\u4ec5\u662fHaskell\uff0c\u90fd\u4f7f\u7528\u7bad\u5934\u6765\u8868\u793alambda\u672f\u8bed\u3002\u7bad\u5934\u4e5f\u4e0e\u6211\u4eec\u7528\u6765\u8868\u793a\u7c7b\u578b\u7684\u7b26\u53f7\u4e00\u81f4\u3002\u56e0\u6b64\uff0cExpresso\u4f7f\u7528\u7bad\u5934-&gt\uff1b\u6765\u8868\u793alambdas\uff0c\u8981\u7ed1\u5b9a\u7684\u53c2\u6570\u5728\u5de6\u8fb9\uff0c\u8868\u8fbe\u5f0f\u4e3b\u4f53\u5728\u53f3\u8fb9\uff0c\u4f8b\u5982x-&gt\uff1bx\u8868\u793a\u6807\u8bc6\u3002\nExpresso\u8bb0\u5f55\u5efa\u7acb\u5728\u4ee5\u884c\u6269\u5c55\u4e3a\u57fa\u672c\u57fa\u5143\u7684\u884c\u7c7b\u578b\u4e4b\u4e0a\u3002\u4e0e\u4ee5\u8fde\u63a5\u4e3a\u57fa\u5143\u6784\u5efa\u7684\u66f4\u9ad8\u7ea7\u7cfb\u7edf\u76f8\u6bd4\uff0c\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u548c\u6613\u4e8e\u4f7f\u7528\u7684\u7c7b\u578b\u7cfb\u7edf\u3002\u7136\u800c\uff0c\u5373\u4f7f\u5728\u8fd9\u4e2a\u7b80\u5355\u7684\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u5dee\u5f02\u8bb0\u5f55\u4e5f\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u5bf9\u4e32\u8054\u8fdb\u884c\u7f16\u7801\u3002\n\u5f53\u7136\uff0c\u8bb0\u5f55\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u7c7b\u578b\uff0c\u5e76\u4e14\u53ef\u4ee5\u4efb\u610f\u5d4c\u5957\u3002\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u5728\u5e73\u7b49\u65b9\u9762\u8fdb\u884c\u6bd4\u8f83\u3002\u70b9\u8fd0\u7b97\u7b26(SELECT)\u7528\u4e8e\u6295\u5f71\u503c\u3002\nExpresso REPL\u952e\u5165\uff1aHelp\u6216\uff1ah\u4ee5\u83b7\u53d6\u547d\u4ee4\u5217\u8868\u4ece/HOME/Tim/expresso/prereude.x\u03bb&gt\uff1b{x=1}.x1\u03bb&gt\uff1b{x={y=&#34\uff1bfoo&#34\uff1b}\uff0cz=[1\uff0c2\uff0c3]}.x.y&#34\uff1bfoo&#34\uff1b\u03bb&gt\uff1b{x=1\uff0cy=True}=={y=True\uff0c\n\u4f7f\u7528\u9009\u62e9\u6d88\u9664\u8bb0\u5f55\u3002\u5e76\u4f7f\u7528\u6269\u5c55\u540d|\u8fdb\u884c\u4ecb\u7ecd\u3002\u4f8b\u5982\uff0c\u8bb0\u5f55\u6587\u5b57\uff1a\n\u884c\u7c7b\u578b\u4f7f\u7528\u7f3a\u4e4f\u7ea6\u675f\u6765\u7981\u6b62\u91cd\u53e0\u5b57\u6bb5\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u7c7b\u578b\u9519\u8bef\uff1a\n{x=1\uff0cx=2}--\u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff01\u8ba9{x=&#34\uff1bbar&#34\uff1b|r}\u4e2d\u7684r={x=&#34\uff1bfoo&#34\uff1b}--\u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff01\n\u901a\u8fc7REPL\u6253\u5370\u51fa\u63a8\u65ad\u7684\u884c\u7c7b\u578b\u65f6\uff0c\u4f1a\u663e\u793a\u7f3a\u5c11\u7684\u7ea6\u675f\uff0c\u4f8b\u5982\uff1a\n\u03bb&gt\uff1b\uff1a\u4e3a\u6240\u6709r.(r\\x)=&gt\uff1b{r}-&gt\uff1b{x\uff1aint|r}\u952e\u5165r-&gt\uff1b{x=1|r}\u3002\n\u5728\u4e0a\u9762\u7684\u8f93\u51fa\u4e2d\uff0cREPL\u62a5\u544a\u8fd9\u4e2alambda\u53ef\u4ee5\u63a5\u53d7\u5e95\u5c42\u884c\u7c7b\u578b\u4e3ar\u7684\u8bb0\u5f55\uff0c\u53ea\u8981r\u6ee1\u8db3\u5b83\u6ca1\u6709\u5b57\u6bb5x\u7684\u7ea6\u675f\u3002\n\u6587\u5b57\u8bb0\u5f55\u7684\u7c7b\u578b\u662f\u5173\u95ed\u7684\uff0c\u56e0\u4e3a\u5b57\u6bb5\u96c6\u662f\u5b8c\u5168\u5df2\u77e5\u7684\uff1a\n\u4f46\u662f\uff0c\u901a\u8fc7\u63a8\u65ad\u6253\u5f00\u7684\u8bb0\u5f55\u7c7b\u578b\uff0c\u6211\u4eec\u5141\u8bb8\u5177\u6709\u5197\u4f59\u5b57\u6bb5\u7684\u8bb0\u5f55\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff1a\n\u03bb&gt\uff1b\u8bbesqmag={x\uff0cy}-&gt\uff1bx*x+y*y\u03bb&gt\uff1b\uff1a\u952e\u5165sqmagforall a r\u3002(num a\uff0cr\\x\\y)=&gt\uff1b{x\uff1aa\uff0cy\uff1aa|r}-&gt\uff1ba\u3002\n\u6253\u5f00\u7684\u8bb0\u5f55\u7c7b\u578b\u7531\u8bb0\u5f55\u5c3e\u90e8\u7684\u884c\u7c7b\u578b\u6307\u793a\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4e0a\u9762\u7684sqmag\u51fd\u6570\u5b9a\u4e49\u4f7f\u7528\u4e86\u5b57\u6bb5\u53cc\u5173\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a\n\u5728\u8bb0\u5f55\u53c2\u6570\u4e0a\u5339\u914d\u65f6\uff0c\u6709\u65f6\u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u65b0\u540d\u79f0\u4ee5\u5c06\u5b57\u6bb5\u7684\u503c\u7ed1\u5b9a\u5230\uff0c\u4f8b\u5982\uff1a\n\u03bb&gt\uff1b\u8ba9Add={x=r\uff0cy=s}{x=u\uff0cy=v}-&gt\uff1b{x=r+u\uff0cy=s+v}\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9650\u5236\u539f\u8bed\\\u5220\u9664\u5b57\u6bb5\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u5185\u5bb9\u5c06\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff1a\n\u8bb0\u5f55\u53ef\u4ee5\u7528\u4f5c\u4e00\u4e2a\u7b80\u5355\u4f46\u529f\u80fd\u5f3a\u5927\u7684\u6a21\u5757\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u8bbe\u60f3\u4e00\u4e2a\u6a21\u5757&#34\uff1bList.x&34\uff1b\u5177\u6709\u5bf9\u5217\u8868\u7684\u6d3e\u751f\u64cd\u4f5c\uff1a\n\u8bbeReverse=foldl(xs x-&gt\uff1bx\uff1a\uff1axs)[]\uff1bintercalate=xs xss-&gt\uff1bconat(\u70b9\u7f00xs xss)\uff1b.--Exportsin{Reverse\uff0cIntercalate\uff0c.}\u3002\n\u03bb&gt\uff1blet List=IMPORT&#34\uff1bList.x&34\uff1b\u03bb&gt\uff1b\uff1a\u4e3a\u6240\u6709a.[a]-&gt\uff1b[a]-&gt\uff1b[a]\u952e\u5165list.intercalateforall a.[a]-&gt\uff1b[a]\u3002\n\u5177\u6709\u591a\u6001\u51fd\u6570\u7684\u8bb0\u5f55\u53ef\u4ee5\u4f5c\u4e3alambda\u53c2\u6570\u4f20\u9012\uff0c\u5e76\u4f7f\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u591a\u6001\u4fdd\u6301\u591a\u6001\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u4e3aExpresso\u63d0\u4f9b\u5408\u9002\u7684\u53c2\u6570\u7c7b\u578b\u6ce8\u91ca\u3002\u4f8b\u5982\uff1a\n\u8bbef=(m\uff1afor all a.{Reverse\uff1a[a]-&gt\uff1b[a]|_})-&gt\uff1b{l=m.verse[True\uff0cFalse]\uff0cr=m.verse[1\uff0c2\uff0c3]}\n\u4e0a\u9762\u7684\u51fd\u6570f\u91c7\u7528\u5305\u542b\u591a\u6001\u51fd\u6570Reverse\u7684\u6a21\u5757&#34\uff1bm\u3002\u6211\u4eec\u4f7f\u7528\u5355\u4e2a\u5192\u53f7\uff1a\u540e\u8ddf\u6211\u4eec\u671f\u671b\u7684\u7c7b\u578b\u6765\u6ce8\u91cam\u3002\u6ce8\u610f\u8bb0\u5f55\u5c3e\u90e8\u7684\u4e0b\u5212\u7ebf_\u3002\u8fd9\u662f\u4e00\u4e2a\u7c7b\u578b\u901a\u914d\u7b26\uff0c\u610f\u5473\u7740\u6211\u4eec\u5df2\u7ecf\u6307\u5b9a\u4e86\u4e00\u4e2a\u5206\u90e8\u7c7b\u578b\u7b7e\u540d\u3002\u6b64\u7c7b\u578b\u901a\u914d\u7b26\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u6b64\u7b7e\u540d\u4f20\u9012\u5305\u542b\u53cd\u5411\u51fd\u6570\u7684\u4efb\u610f\u6a21\u5757\u3002\u8981\u67e5\u770bf\u7684\u5b8c\u6574\u7c7b\u578b\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Expresso REPL\uff1a\n\u03bb&gt\uff1b\uff1at fforall r.(r\\Reverse)=&gt\uff1b(for all a.{Reverse\uff1a[a]-&gt\uff1b[a]|r})-&gt\uff1b{l\uff1a[bool]\uff0cr\uff1a[int]}\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4ee3\u8868\u5176\u4f59\u6a21\u5757\u5b57\u6bb5\u7684r\u662f\u9876\u7ea7\u9650\u5b9a\u7b26\u3002\u901a\u914d\u7b26\u7c7b\u578b\u5728\u8fd9\u91cc\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u907f\u514d\u4e3a\u6574\u4e2a\u51fd\u6570\u521b\u5efa\u9876\u7ea7\u7b7e\u540d\u548c\u663e\u5f0f\u547d\u540d\u6b64\u884c\u53d8\u91cf\u3002\u66f4\u4e00\u822c\u5730\uff0c\u7c7b\u578b\u901a\u914d\u7b26\u5141\u8bb8\u6211\u4eec\u4e0d\u6307\u5b9a\u7c7b\u578b\u7b7e\u540d\u7684\u67d0\u4e9b\u90e8\u5206\u3002\n\u5f53\u7136\uff0c\u51fd\u6570f\u73b0\u5728\u53ef\u4ee5\u5e94\u7528\u4e8e\u6ee1\u8db3\u7c7b\u578b\u7b7e\u540d\u7684\u4efb\u4f55\u6a21\u5757\uff1a\n\u8981\u5bf9\u4e32\u8054\u8fdb\u884c\u7f16\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u8bb0\u5f55\u7684\u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u7b80\u5355\u7684\u51fd\u6570\u7ec4\u5408\u6765\u7ec4\u5408\u5b83\u4eec\uff1a\n\u8bbef=(r-&gt\uff1b{x=&#34\uff1bfoo&#34\uff1b\uff0cy=True|r})&gt\uff1b&gt\uff1b(r-&gt\uff1b{z=&#34\uff1bbar&#34\uff1b|r})\u3002\n\u03bb&gt\uff1b\u8ba9f={|x=&#34\uff1bfoo&#34\uff1b\uff0cy=True|}&gt\uff1b&gt\uff1b{|z=&#34\uff1bBAR&#34\uff1b|}\u03bb&gt\uff1bf{}{z=&#34\uff1bBAR&#34\uff1b\uff0cx=&#34\uff1bFOO&#34\uff1b\uff0cy=TRUE}\u3002\n{|x=&#34\uff1bfoo&#34\uff1b|}&gt\uff1b&gt\uff1b{|x\uff1a=&#34\uff1bbar&#34\uff1b|}--\u7c7b\u578b\u68c0\u67e5{|x=&#34\uff1bfoo&#34\uff1b|}&lt\uff1b&lt\uff1b{|x\uff1a=&#34\uff1bbar&#34\uff1b|}--\u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff01\n\u7c7b\u578b{}\u662f\u5355\u4f4d\u7c7b\u578b\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u5b83\u53ea\u6709\u4e00\u4e2a\u5c45\u6c11\uff0c\u7a7a\u8bb0\u5f55{}\uff1a\n\u8bb0\u5f55\u7684DUAL\u662f\u53d8\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u5e95\u5c42\u884c\u7c7b\u578b\uff0c\u6240\u4ee5\u5b83\u4eec\u4e5f\u662f\u591a\u6001\u7684\u548c\u53ef\u6269\u5c55\u7684\u3002\u53d8\u91cf\u662f\u901a\u8fc7\u6ce8\u5165(\u8bb0\u5f55\u9009\u62e9\u7684DUAL)\u5f15\u5165\u7684\uff0c\u4f8b\u5982\uff1a\n\u03bb&&gt;\uff1b\u6848\u4f8bFOO 1\uff0c\u5171{foo x-&gt\uff1bx\uff0c\u6761\u5f62{x\uff0cy}-&gt\uff1bx+y}1\u3002\n\u4e0a\u9762\u7684case\u8868\u8fbe\u5f0f\u6d88\u9664\u4e86\u95ed\u5408\u53d8\u91cf\uff0c\u8fd9\u610f\u5473\u7740\u9664foo\u6216Bar\u4ee5\u5916\u7684\u4efb\u4f55\u503c\u53ca\u5176\u9884\u671f\u6709\u6548\u8d1f\u8f7d\u90fd\u5c06\u5bfc\u81f4\u7c7b\u578b\u9519\u8bef\u3002\u4e3a\u4e86\u6d88\u9664\u5f00\u653e\u53d8\u91cf\uff0c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6269\u5c55\u7684\u8bed\u6cd5\uff1a\n\u03bb&&gt;\uff1b\u8bbef=x-&&gt;\uff1b\u6848\u4f8bx\uff0c{foo x-&gt\uff1bx\uff0c\u6761\u5f62{x\uff0cy}-&gt\uff1bx+y|\u5426\u5219-&gt\uff1b42}\u03bb&gt\uff1bf(baz{})42\u3002\n\u5728\u8fd9\u91cc\uff0c\u4e0d\u5339\u914d\u7684\u53d8\u91cf\u88ab\u4f20\u9012\u7ed9lambda(\u4ee5Altherly\u4f5c\u4e3a\u53c2\u6570)\u3002\u6761\u5f62|\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u901a\u5e38\u4f1a\u5ffd\u7565\u53d8\u91cf\u6216\u5c06\u5176\u59d4\u6258\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\n\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u521b\u5efa\u5c01\u95ed\u7684\u53d8\u4f53\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e8eHaskell\u7684\u201c\u53ef\u80fda\u201d\u7684\u7ed3\u6784\u7c7b\u578b\uff0c\u5b83\u53ea\u6709\u4e24\u4e2a\u6784\u9020\u51fd\u6570\uff1aNothing\u548cJust\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u7c7b\u578b\u6279\u6ce8\u7684\u667a\u80fd\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u3002\u5728\u524d\u8a00\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u7b49\u4ef7\u7684\u6784\u9020\u51fd\u6570Just\u548cNothing\uff0c\u4ee5\u53ca\u53ef\u80fd\u5728\u6b64\u5c01\u95ed\u96c6\u4e0a\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\uff1a\n\u7c7b\u578b\u53ef\u80fda=&lt\uff1bJust\uff1aa\uff0cNothing\uff1a{}&gt\uff1b\uff1bJust\uff1afor all A.a-&&gt\uff1b\u53ef\u80fda=x-&&gt;\uff1bJust x\uff1bNothing\uff1aFall a.\u53ef\u80fda=Nothing{}\uff1b\u53ef\u80fd=bf m-&gt\uff1b\u6848\u4f8bm{Just a-&gt\uff1bf a\uff0cNothing{}-&gt\uff1bb}\n\u6ce8\u610f\uff0c\u6211\u4eec\u58f0\u660e\u5e76\u4f7f\u7528\u7c7b\u578b\u540c\u4e49\u8bcd\u53ef\u80fd\u662fa\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u7c7b\u578b&lt\uff1b\uff0c\u53ea\u662f\uff1aa\uff0cNothing\uff1a{}&gt\uff1b\u3002\u7c7b\u578b\u540c\u4e49\u8bcd\u53ef\u4ee5\u5305\u542b\u5728\u4efb\u4f55\u6587\u4ef6\u7684\u9876\u90e8\uff0c\u5e76\u4e14\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002\n\u7b14\u5f55\u9650\u5236\u7684\u5bf9\u5076\u6027\u662f\u53d8\u79cd\u5d4c\u5165\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5229\u7528\u975e\u91cd\u53e0\u5b57\u6bb5\u7ea6\u675f\u6765\u9650\u5236CASE\u8868\u8fbe\u5f0f\u516c\u5f00\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u8981\u9632\u6b62\u4f7f\u7528\u4e0a\u8ff0\u51fd\u6570f\u7684Bar\u66ff\u4ee3\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b0\u51fd\u6570g\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u03bb&gt\uff1b\u8bbeg=x-&gt\uff1bf(&lt\uff1b|\u680f|&gt\uff1bx)\u03bb&gt\uff1b\uff1a\u7c7b\u578bgforall r.(r\\bar\\foo)=&gt\uff1bfoo\uff1aint|r&gt\uff1b-&gt\uff1bInt\uff1bInt\u3002\n\u03bb&gt\uff1b\u8bbeg=x-&gt\uff1b\u6848\u4f8bx\uff0c\u5171{Override foo x-&gt\uff1bx+1|f}\u3002\n\u03bb&gt\uff1b\u8bbeg=x-&gt\uff1b\u6848\u4f8bx\u4e3a{foo x-&gt\uff1bx+1|&lt\uff1b|foo|&gt\uff1b&gt\uff1bf}\u03bb&gt\uff1b\uff1a\u7c7b\u578b\u4e3agforall R1 R2\u3002(r1\\x\\y\uff0cr2\\Bar\\foo)=&gt\uff1b&lt\uff1bfoo\uff1aint\uff0cbar\uff1a{x\uff1aint\uff0cy\uff1aint|r1}|r2&gt\uff1b-&gt\uff1bInt\u3002\n\u5728\u5185\u90e8\uff0c\u6d88\u9664\u5c01\u95ed\u53d8\u91cf\u7684\u8bed\u6cd5\u4f7f\u7528\u7a7a\u53d8\u91cf\u7c7b\u578b&lt\uff1b&gt\uff1b\uff0c\u4e5f\u79f0\u4e3avoid\u3002void\u7c7b\u578b\u6ca1\u6709\u5c45\u6c11\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5b9a\u4e49\u4e00\u4e2a\u8352\u8c2c\u7684\u51fd\u6570\uff1a\n\u8352\u8bde\u662f\u7ecf\u5178\u903b\u8f91\u4e2dEx FAlso Quodlibet\u7684\u4e00\u4e2a\u4f8b\u5b50(\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u7528\u77db\u76fe\u4f5c\u4e3a\u524d\u63d0\u6765\u8bc1\u660e)\u3002\n{\u9152\u5427{}-&gt\uff1b2|\u8352\u8bde}}\u7684{foo{}-&gt\uff1b1|x&#39\uff1b-&gt\uff1b\u6848\u4f8bx&#39\uff1b\u7684\u6848\u4f8bx\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Expresso\u4f5c\u4e3a\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6570\u636e\u4ea4\u6362\u683c\u5f0f(\u5373\u5e26\u7c7b\u578b\u7684JSON)\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u6839\u636e\u6a21\u5f0f\u9a8c\u8bc1\u672f\u8bed\u5462\uff1f\n\u7b80\u5355\u7c7b\u578b\u6279\u6ce8&lt\uff1bTerm&gt\uff1b\uff1a&lt\uff1btype&gt\uff1b\u4e0d\u8db3\u4ee5\u8fdb\u884c&#34\uff1b\u67b6\u6784\u9a8c\u8bc1&#34\uff1b\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u9488\u5bf9\u5141\u8bb8\u6240\u6709\u5185\u5bb9\u7684\u67b6\u6784\u9a8c\u8bc1\u6574\u6570\u7684\u5c1d\u8bd5\uff1a\n\u4e0a\u9762\u7684\u7c7b\u578b\u68c0\u67e5\u5931\u8d25\uff0c\u56e0\u4e3a\u5de6\u4fa7\u88ab\u63a8\u65ad\u4e3a\u6700\u901a\u7528\u7684\u7c7b\u578b(\u8fd9\u91cc\u662f\u4e00\u4e2a\u5177\u4f53\u7684int)\uff0c\u800c\u53f3\u4fa7\u7684\u7c7b\u578b\u5fc5\u987b\u8f83\u5c11\u3002\n\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8bed\u6cd5\u751c\u5934\u662f\u7b7e\u540d\u90e8\u5206\uff0c\u5c3d\u7ba1Expresso\u4e2d\u7684\u7248\u672c\u4e0eHaskell\u63d0\u8bae\u7565\u6709\u4e0d\u540c\u3002\u6211\u4eec\u5199(\uff1at)\u8868\u793aid\uff1at-&gt\uff1bT\uff0c\u5176\u4e2d\u6240\u6709\u91cf\u8bcd\u90fd\u4fdd\u5b58\u5728\u9876\u7ea7\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\uff1a\n\u5982\u679c\u6211\u4eec\u7684\u6a21\u5f0f\u4e2d\u786e\u5b9e\u6709\u5141\u8bb8\u4efb\u610f\u6570\u636e\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u7b49\u5f0f\u7ea6\u675f\u6765\u4fdd\u8bc1\u4e0d\u5b58\u5728\u90e8\u5206\u5e94\u7528\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a\n(\uff1aforall a.eq a=&gt\uff1b{x\uff1a&lt\uff1bfoo\uff1aint\uff0cBar\uff1aA&gt\uff1b}){x=Bar id}\u3002\n\u03bb&gt\uff1b(\uff1aforall a.eqa=&gt\uff1b{x\uff1a&lt\uff1bfoo\uff1aint\uff0cbar\uff1aa&gt\uff1b}){x=bar&#34\uff1babc&#34\uff1b}{x=bar&#34\uff1babc&#34\uff1b}\u3002\nExpresso\u4f7f\u7528\u60f0\u6027\u8ba1\u7b97\uff0c\u5e0c\u671b\u5728\u5904\u7406\u5927\u578b\u5d4c\u5957\u8bb0\u5f55\u65f6\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002\n\u56fe\u7075\u7b49\u4ef7\u6027\u662f\u901a\u8fc7\u5355\u4e2aFIX\u539f\u8bed\u5f15\u5165\u7684\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5220\u9664\u6216\u7981\u7528\u8be5\u539f\u8bed\u3002FIX\u5bf9\u4e8e\u5b9e\u73b0\u5f00\u653e\u7684\u9012\u5f52\u8bb0\u5f55\u548c\u52a8\u6001\u7ed1\u5b9a(\u5982Nix)\u975e\u5e38\u6709\u7528\u3002\n\u03bb&&gt;\uff1b\u8ba9r=mkOverridable(Self-&&gt;\uff1b{x=#34\uff1bfoo&34\uff1b\uff0cy=self.x\uff1b\uff1b&gt\uff1b&#34\uff1bbar&34\uff1b})\u03bb&gt\uff1br{Override_=\uff1b\u03bb\uff1bLambda&&gt;\uff1b\uff0cx=&#34\uff1bfoo&34\uff1b\uff0cy=&#34\uff1bfoobar&34\uff1b}\u03bb&&gt;\uff1b\u8986\u76d6r{|x\uff1a=\u3002baz&34\uff1b\uff0cy=#34\uff1bbazbar&#34\uff1b}\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5220\u9664FIX\u548cTuring\u7b49\u4ef7\u6027\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u7ec8\u6b62\u3002\u5728\u6ca1\u6709\u9012\u5f52\u6216\u4fee\u590d\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u6709\u53ef\u80fd\u7f16\u5199\u5728\u5b87\u5b99\u7684\u751f\u547d\u5468\u671f\u5185\u4e0d\u4f1a\u7ec8\u6b62\u7684\u6307\u6570\u7a0b\u5e8f\u3002\n\u5728Haskell\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u5c06Expresso\u7528\u4f5c\u952e\u5165\u7684\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5907\u4efd\u7a0b\u5e8f\u7684\u5047\u8bbe\u5c0f\u914d\u7f6e\u6587\u4ef6\uff1a\n\u8ba9awsTemplate={Location=&#34\uff1bs3://s3-eu-west-1.amazonaws.com/tim-backup&#34\uff1b\uff0cInclude=[]\uff0cExclude=[]}\u4f4d\u4e8e{cachePath=Default{}\uff0c\u4efb\u52a1\u7ebf\u7a0b=\u8986\u76d62\uff0c\u914d\u7f6e\u6587\u4ef6=[{Name=&#34\uff1bPictures&#34\uff1b\uff0cSource=&#34\uff1b~/Pictures&#34\uff1b|awsTemplate}\uff0c{Name=&#34\uff1bMusic&#34\uff1b\uff0csource=&#34\uff1b~/Music&#34\uff1b\uff0c\u6392\u9664\uff1a=[&#34\uff1b**/*.m4a&#34\uff1b]|awsTemplate}]}\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u662f\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5c0f\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u4e5f\u5df2\u7ecf\u53ef\u4ee5\u5229\u7528\u53ef\u6269\u5c55\u8bb0\u5f55\u7684\u4e00\u4e9b\u62bd\u8c61\u529f\u80fd\u6765\u907f\u514d\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u91cd\u590d\u3002\n\u4e3a\u4e86\u4eceHaskell\u7a0b\u5e8f\u4f7f\u7528\u6b64\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e9b\u76f8\u5e94\u7684\u6807\u79f0\u6570\u636e\u7c7b\u578b\uff1a\n\u6570\u636e\u914d\u7f6e=Config{configCachePath\uff1a\uff1aOverridable Text\uff0cconfigTaskThread\uff1a\uff1aOverridable Integer\uff0cconfigProfiles\uff1a\uff1a[profile]}\u6d3e\u751fShowdata Overridable a=\u9ed8\u8ba4|\u8986\u76d6\u6d3e\u751fShowdata\u914d\u7f6e\u6587\u4ef6=profile{profileName\uff1a\uff1aText\uff0cprofileLocation\uff1a\uff1aText\uff0cprofileInclude\uff1a\uff1a[Text]\uff0cprofileExclude\uff1a\uff1a[Text]\uff0cprofileSource\uff1a\uff1aText}\u6d3e\u751f\u663e\u793a\n\u4f7f\u7528Expresso API\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199HasValue\u5b9e\u4f8b\u6765\u5904\u7406Haskell\u503c\u7684\u6295\u5f71\u548c\u6ce8\u5165\uff1a\n\u5bfc\u5165ExpressoInstance HasValue Config\uff0c\u5176\u4e2dproj v=Config&lt\uff1b$&gt\uff1bv.\uff1a&#34\uff1bcachePath&#34\uff1b&lt\uff1b*&gt\uff1bv.\uff1a&#34\uff1btaskThread&#34\uff1b&lt\uff1b*&gt\uff1bv.\uff1a&#34\uff1bprofile&#34\uff1binj Config{..}=mkRecord[&#34\uff1bcachePath&#34\uff1b.=inj configCache.\u3002.=inj configProfiles]Instance HasValue a=&gt\uff1bHasValue(Overridable A)\uff0c\u5176\u4e2dproj=CHOICE[(&#34\uff1bOverride&#34\uff1b\uff0cFMAP Override\u3002\u9879\u76ee)\uff0c(&#34\uff1b\u9ed8\u8ba4&#34\uff1b\uff0c\u5e38\u91cf$PURE DEFAULT)]inj(Override X)=mkVariant&#34\uff1bOverride&#34\uff1b(Inj X)inj default=mkVariant&34\uff1bDefault&#34\uff1bunitinstance HasValue Profile where proj v=profile&lt\uff1b$&gt\uff1bv.\uff1a&#34\uff1bname&#34\uff1b&lt\uff1b*&gt\uff1bv\uff1a&#34\uff1blocation&#\u3002*&gt\uff1bv.\uff1a&#34\uff1bexclude&#34\uff1b&lt\uff1b*&gt\uff1bv.\uff1a&#34\uff1bsource&#34\uff1binj profile{..}=mkRecord[&#34\uff1bname&#34\uff1b.=inj profileName\uff0c&#34\uff1blocation&#34\uff1b.=inj profileLocation\uff0c&#34\uff1binclude&#34\uff1b.=inj profileInclude\uff0c&#34\uff1bexclude&#34\uff1b.=inj\u3002\n\u5728\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6839\u636e\u5546\u5b9a\u7684\u7b7e\u540d(\u4e5f\u79f0\u4e3a\u3002\u6a21\u5f0f\u9a8c\u8bc1)\u3002Expresso API\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u677fHaskell\u51c6\u5f15\u53f7\uff0c\u4ee5\u4fbf\u4eceHaskell\u5185\u90e8\u65b9\u4fbf\u5730\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\nimport Expresso.TH.QQschema\uff1a\uff1aTypesschema=[ExpressoType|{cachePath\uff1a&lt\uff1bDefault\uff1a{}\uff0cOverride\uff1aText&gt\uff1b\uff0ctaskThread\uff1a&lt\uff1bDefault\uff1a{}\uff0cOverride\uff1aint&gt\uff1b\uff0cProfiles\uff1a[{name\uff1aText\uff0cLocation\uff1aText\uff0cInclude\uff1a[Text]\uff0cExclude\uff1a[Text]\uff0cExclude\uff1a[Text]\uff0csource\uff1aText}]}|]\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u52a0\u8f7d\u3001\u9a8c\u8bc1\u548c\u8bc4\u4f30\u4e0a\u8ff0\u914d\u7f6e\u6587\u4ef6\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b89\u88c5\u6211\u4eec\u81ea\u5df1\u7684\u5b9a\u5236\u503c/\u51fd\u6570\uff0c\u4ee5\u4f9b\u7528\u6237\u5728\u5176\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u7528\u3002\u4f8b\u5982\uff1a\nloadConfig\uff1a\uff1aFilePath-&gt\uff1bIO(\u5b57\u7b26\u4e32\u914d\u7f6e)loadConfig=valFile&#39\uff1benvs(\u4ec5\u6a21\u5f0f)\uff0c\u5176\u4e2denvs=installBinding&#34\uff1bSystem&#34\uff1bText(inj System.Info.os)\u3002installBinding&#34\uff1bTakeFileName&#34\uff1b(TFun Text Text)(Inj TakeFileName)\u3002installBinding&#34\uff1bTakeDirectory&#34\uff1b(TFun Text Text)(Inj TakeDirectory)\u3002installBinding&#34\uff1bdoPathExist&#34\uff1b(TFun\u6587\u672c\u6587\u672cTBool)(Inj Dos PathExist)--NB\uff1a\u8fd9\u6267\u884cIO\u8bfb\u53d6$initEnvironment\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u81ea\u5df1\u9650\u5236\u5728\u6307\u5b9a\u8bb0\u5f55\u503c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u5c06Expresso\u51fd\u6570\u503c\u6295\u5f71\u5230Haskell\u51fd\u6570(IO\u4e2d)\uff0c\u4ece\u800c\u5141\u8bb8\u66f4\u9ad8\u9636\u7684\u914d\u7f6e\u6587\u4ef6\uff01\u6295\u5f71\u672c\u8eab\u7531HasValue\u7c7b\u5904\u7406\uff0c\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u503c\u4e00\u6837\uff1a\nHaskell&gt\uff1bright(f\uff1a\uff1a\u6574\u6570-&gt\uff1bIO\u6574\u6570)&lt\uff1b-valString(\u4ec5$TFun tint tint)&#34\uff1bx-&gt\uff1bx+1&#34\uff1bHaskell&gt\uff1bf 1 2\u3002\n\u53ef\u6269\u5c55\u8bb0\u5f55\u548c\u53d8\u4f53\u7684\u591a\u6001\u7c7b\u578b\u7cfb\u7edf&#34\uff1bB.R.Gaster\u548cM.P.Jones\uff0c1996\u3002", "note_en": "Expresso is a minimal statically-typed functional programming language, designed with embedding and/or extensibility in mind.Possible use cases for such a minimal language include configuration (\u00e0 la Nix), data exchange (\u00e0 la JSON) or even a starting point for a custom external DSL.\n      Expresso is a functional language and so we use lambda terms as our basic means of abstraction. To create a named function, we simply bind a lambda using let. I toyed with the idea of using Nix-style lambda syntax, e.g.  x: x for the identity function, but many mainstream languages, not just Haskell, use an arrow to denote a lambda term. An arrow is also consistent with the notation we use for types.Expresso therefore uses the arrow  -&gt; to denote lambdas, with the parameters to bind on the left and the expression body on the right, for example  x -&gt; x for identity.\n       Expresso records are built upon row-types with row extension as the fundamental primitive. This gives a very simple and easy-to-use type system when compared to more advanced systems built upon concatenation as a primitive. However, even in this simple system, concatenation can be encoded quite easily using difference records.\n Records can of course contain arbitrary types and be arbitrarily nested. They can also be compared for equality. The dot operator (select) is used to project out values.\n Expresso REPLType :help or :h for a list of commandsLoaded Prelude from /home/tim/Expresso/Prelude.x\u03bb&gt; {x = 1}.x1\u03bb&gt; {x = {y = &#34;foo&#34;}, z = [1,2,3]}.x.y&#34;foo&#34;\u03bb&gt; {x = 1, y = True} == {y = True, x = 1}True\n   Records are eliminated using selection  . and introduced using extension  |. For example, the record literal:\n    The row types use lacks constraints to prohibit overlapping field names. For example, the following is ill-typed:\n {x = 1, x = 2} -- DOES NOT TYPE CHECK!let r = {x = &#34;foo&#34;} in {x = &#34;bar&#34; | r} -- DOES NOT TYPE CHECK!\n The lacks constraints are shown when printing out inferred row types via the REPL, for example:\n \u03bb&gt; :type r -&gt; {x = 1 | r}forall r. (r\\x) =&gt; {r} -&gt; {x : Int | r}\n In the above output, the REPL reports that this lambda can take a record with underlying row-type  r, providing  r satisfies the constraint that it does not have a field  x.\n The type of a literal record is  closed, in that the set of fields is fully known:\n  However, we permit records with redundant fields as arguments to functions, by inferring  open record types:\n \u03bb&gt; let sqmag = {x, y} -&gt; x*x + y*y\u03bb&gt; :type sqmagforall a r. (Num a, r\\x\\y) =&gt; {x : a, y : a | r} -&gt; a\n An open record type is indicated by a row-type in the tail of the record.\n Note that the function definition for  sqmag above makes use of field punning. We could have alternatively written:\n  When matching on record arguments, sometimes it can be necessary to supply a new name to bind the values of a field to, for example:\n \u03bb&gt; let add = {x=r, y=s} {x=u, y=v} -&gt; {x = r + u, y = s + v}\n  We can remove a field by using the restriction primitive  \\. For example, the following will type-check:\n     Records can be used as a simple but powerful module system. For example, imagine a module  &#34;List.x&#34; with derived operations on lists:\n let reverse = foldl (xs x -&gt; x :: xs) []; intercalate = xs xss -&gt; concat (intersperse xs xss); ...-- Exportsin { reverse , intercalate , ... }\n  \u03bb&gt; let list = import &#34;List.x&#34;\u03bb&gt; :type list.intercalateforall a. [a] -&gt; [[a]] -&gt; [a]\n   Records with polymorphic functions can be passed as lambda arguments and remain polymorphic using  higher-rank polymorphism. To accomplish this, we must provide Expresso with a suitable type annotation of the argument. For example:\n let f = (m : forall a. { reverse : [a] -&gt; [a] |_}) -&gt; {l = m.reverse [True, False], r = m.reverse [1,2,3] }\n The function  f above takes a &#34;module&#34;  m containing a polymorphic function  reverse. We annotate  m with a type by using a single colon  : followed by the type we are expecting.Note the underscore  _ in the tail of the record. This is a  type wildcard, meaning we have specified a  partial type signature. This type wildcard allows us to pass an arbitrary module containing a  reverse function with this signature. To see the full type signature of  f, we can use the Expresso REPL:\n \u03bb&gt; :t fforall r. (r\\reverse) =&gt; (forall a. {reverse : [a] -&gt; [a] | r}) -&gt; {l : [Bool], r : [Int]}\n Note that the  r, representing the rest of the module fields, is a top-level quantifier. The type wildcard is especially useful here, as it allows us to avoid creating a top-level signature for the entire function and explicitly naming this row variable. More generally, type wildcards allow us to leave parts of a type signature unspecified.\n Function  f can now of course be applied to any module satisfying the type signature:\n   To encode concatenation, we can use functions that extend records and compose them using straightforward function composition:\n let f = (r -&gt; { x = &#34;foo&#34;, y = True | r}) &gt;&gt; (r -&gt; { z = &#34;bar&#34; | r})\n  \u03bb&gt; let f = {| x = &#34;foo&#34;, y = True |} &gt;&gt; {| z = &#34;bar&#34; |}\u03bb&gt; f {}{z = &#34;bar&#34;, x = &#34;foo&#34;, y = True}\n  {| x = &#34;foo&#34; |} &gt;&gt; {| x := &#34;bar&#34; |} -- Type checks {| x = &#34;foo&#34; |} &lt;&lt; {| x := &#34;bar&#34; |} -- DOES NOT TYPE CHECK!\n  The type  {} is an example of a  Unit type. It has only one inhabitant, the empty record  {}:\n   The dual of records are variants, which are also polymorphic and extensible since they use the same underlying row-types.Variants are introduced via injection (the dual of record selection), for example:\n     \u03bb&gt; case Foo 1 of { Foo x -&gt; x, Bar{x,y} -&gt; x+y }1\n The above case expression eliminates a  closed variant, meaning any value other than  Foo or  Bar with their expected payloads would lead to a type error. To eliminate an  open variant, we use a syntax analogous to extension:\n \u03bb&gt; let f = x -&gt; case x of { Foo x -&gt; x, Bar{x,y} -&gt; x+y | otherwise -&gt; 42 }\u03bb&gt; f (Baz{})42\n Here the unmatched variant is passed to a lambda (with  otherwise as the parameter). The expression after the bar  | typically either ignores the variant or delegates it to another function.\n  We will often need to create closed variant types. For example, we may want to create a structural type analogous to Haskell&#39;s  Maybe a, having only two constructors:  Nothing and  Just. This can be accomplished using smart constructors with type annotations. In the Prelude, we define the equivalent constructors  just and  nothing, as well as a fold  maybe over this closed set:\n type Maybe a = &lt;Just : a, Nothing : {}&gt;;just : forall a. a -&gt; Maybe a = x -&gt; Just x;nothing : forall a. Maybe a = Nothing{};maybe = b f m -&gt; case m of { Just a -&gt; f a, Nothing{} -&gt; b }\n Note that we declare and use a type synonym  Maybe a to avoid repeating the type  &lt;Just : a, Nothing : {}&gt;. Type synonyms can be included at the top of any file and have global scope.\n  The dual of record restriction is variant embedding. This allows us to restrict the behaviour exposed by a case expression, by exploiting the non-overlapping field constraints.For example, to prevent use of the  Bar alternative of function  f above, we can define a new function  g as follows:\n \u03bb&gt; let g = x -&gt; f (&lt;|Bar|&gt; x)\u03bb&gt; :type gforall r. (r\\Bar\\Foo) =&gt; &lt;Foo : Int | r&gt; -&gt; Int\n  \u03bb&gt; let g = x -&gt; case x of { override Foo x -&gt; x + 1 | f }\n  \u03bb&gt; let g = x -&gt; case x of { Foo x -&gt; x + 1 | &lt;|Foo|&gt; &gt;&gt; f }\u03bb&gt; :type gforall r1 r2. (r1\\x\\y, r2\\Bar\\Foo) =&gt; &lt;Foo : Int, Bar : {x : Int, y : Int | r1} | r2&gt; -&gt; Int\n  Internally, the syntax to eliminate a closed variant uses the empty variant type  &lt;&gt;, also known as  Void. The Void type has no inhabitants, but we can use it to define a function  absurd:\n  Absurd is an example of  Ex Falso Quodlibet from classical logic (anything can be proven using a contradiction as a premise).\n    case x of { Foo{} -&gt; 1 | x&#39; -&gt; case x&#39; of { Bar{} -&gt; 2 | absurd } }\n  We could use Expresso as a lightweight data-exchange format (i.e. JSON with types). But how might we validate terms against a schema?\n A simple type annotation  &lt;term&gt; : &lt;type&gt; , will not suffice for &#34;schema validation&#34;. For example, consider this attempt at validating an integer against a schema that permits everything:\n  The above fails to type check since the left-hand-side is inferred as the most general type (here a concrete int) and the right-hand-side must be less so.\n   A nice syntactic sugar for this is a  signature section, although the version in Expresso is slightly different from the Haskell proposal. We write  (:T) to mean  id : T -&gt; T, where any quantifiers are kept at the top-level. We can now use:\n  If we really do have places in our schema where we want to permit arbitrary data, we should use the equality constraint to guarantee the absence of partially-applied functions. For example:\n (: forall a. Eq a =&gt; { x : &lt;Foo : Int, Bar : a&gt; }) { x = Bar id }\n  \u03bb&gt; (: forall a. Eq a =&gt; { x : &lt;Foo : Int, Bar : a&gt; }) { x = Bar &#34;abc&#34; }{x = Bar &#34;abc&#34;}\n  Expresso uses lazy evaluation in the hope that it might lead to efficiency gains when working with large nested records.\n   Turing equivalence is introduced via a single  fix primitive, which can be easily removed or disabled. fix can be useful to achieve open recursive records and dynamic binding (\u00e0 la Nix).\n \u03bb&gt; let r = mkOverridable (self -&gt; {x = &#34;foo&#34;, y = self.x &lt;&gt; &#34;bar&#34;})\u03bb&gt; r{override_ = &lt;Lambda&gt;, x = &#34;foo&#34;, y = &#34;foobar&#34;}\u03bb&gt; override r {| x := &#34;baz&#34; |}{override_ = &lt;Lambda&gt;, x = &#34;baz&#34;, y = &#34;bazbar&#34;}\n Note that removing  fix and Turing equivalence does not guarantee termination in practice. It is still possible to write exponential programs that will not terminate during the lifetime of the universe without recursion or fix.\n  Expresso can be used as a typed configuration file format from within Haskell programs. As an example, let&#39;s consider a hypothetical small config file for a backup program:\n let awsTemplate = { location =&#34;s3://s3-eu-west-1.amazonaws.com/tim-backup&#34; , include = [] , exclude = [] }in{ cachePath = Default{}, taskThreads = Override 2, profiles = [ { name = &#34;pictures&#34; , source = &#34;~/Pictures&#34; | awsTemplate } , { name = &#34;music&#34; , source = &#34;~/Music&#34; , exclude := [&#34;**/*.m4a&#34;] | awsTemplate } ]}\n Note that even for such a small example, we can already leverage some of the abstraction power of extensible records to avoid repetition in the config file.\n In order to consume this file from a Haskell program, we can define some corresponding nominal data types:\n data Config = Config { configCachePath :: Overridable Text , configTaskThreads :: Overridable Integer , configProfiles :: [Profile] } deriving Showdata Overridable a = Default | Override a deriving Showdata Profile = Profile { profileName :: Text , profileLocation :: Text , profileInclude :: [Text] , profileExclude :: [Text] , profileSource :: Text } deriving Show\n Using the Expresso API, we can write  HasValue instances to handle the projection into and injection from, Haskell values:\n import Expressoinstance HasValue Config where proj v = Config &lt;$&gt; v .: &#34;cachePath&#34; &lt;*&gt; v .: &#34;taskThreads&#34; &lt;*&gt; v .: &#34;profiles&#34; inj Config{..} = mkRecord [ &#34;cachePath&#34; .= inj configCachePath , &#34;taskThreads&#34; .= inj configTaskThreads , &#34;profiles&#34; .= inj configProfiles ]instance HasValue a =&gt; HasValue (Overridable a) where proj = choice [(&#34;Override&#34;, fmap Override . proj) ,(&#34;Default&#34;, const $ pure Default) ] inj (Override x) = mkVariant &#34;Override&#34; (inj x) inj Default = mkVariant &#34;Default&#34; unitinstance HasValue Profile where proj v = Profile &lt;$&gt; v .: &#34;name&#34; &lt;*&gt; v .: &#34;location&#34; &lt;*&gt; v .: &#34;include&#34; &lt;*&gt; v .: &#34;exclude&#34; &lt;*&gt; v .: &#34;source&#34; inj Profile{..} = mkRecord [ &#34;name&#34; .= inj profileName , &#34;location&#34; .= inj profileLocation , &#34;include&#34; .= inj profileInclude , &#34;exclude&#34; .= inj profileExclude , &#34;source&#34; .= inj profileSource ]\n Before we load the config file, we will probably want to check the inferred types against an agreed signature (a.k.a. schema validation). The Expresso API provides a Template Haskell quasi-quoter to make this convenient from within Haskell:\n import Expresso.TH.QQschema :: Typeschema = [expressoType| { cachePath : &lt;Default : {}, Override : Text&gt; , taskThreads : &lt;Default : {}, Override : Int&gt; , profiles : [ { name : Text , location : Text , include : [Text] , exclude : [Text] , source : Text } ] }|]\n We can thus load, validate and evaluate the above config file using the following code:\n  Note that we can also install our own custom values/functions for users to reference in their config files. For example:\n loadConfig :: FilePath -&gt; IO (Either String Config)loadConfig = evalFile&#39; envs (Just schema) where envs = installBinding &#34;system&#34; TText (inj System.Info.os) . installBinding &#34;takeFileName&#34; (TFun TText TText) (inj takeFileName) . installBinding &#34;takeDirectory&#34; (TFun TText TText) (inj takeDirectory) . installBinding &#34;doesPathExist&#34; (TFun TText TBool) (inj doesPathExist) -- NB: This does IO reads $ initEnvironments\n Finally, we need not limit ourselves to config files that specify record values. We can project Expresso function values into Haskell functions (in IO), allowing higher-order config files! The projection itself is handled by the  HasValue class, just like any other value:\n Haskell&gt; Right (f :: Integer -&gt; IO Integer) &lt;- evalString (Just $ TFun TInt TInt) &#34;x -&gt; x + 1&#34; Haskell&gt; f 1 2\n   &#34;A Polymorphic Type System for Extensible Records and Variants&#34; B. R. Gaster and M. P. Jones, 1996.", "posttime": "2020-06-13 02:52:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u591a\u6001,simple,\u7c7b\u578b", "title": "Expresso\uff1a\u4e00\u79cd\u5177\u6709\u591a\u6001\u53ef\u6269\u5c55\u884c\u7c7b\u578b\u7684\u7b80\u5355\u8868\u8fbe\u5f0f\u8bed\u8a00", "title_en": "Expresso: A simple expressions language with polymorphic extensible row types", "transed": 1, "url": "https://github.com/willtim/Expresso", "via": "", "real_tags": ["\u591a\u6001", "simple", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "f9a9bc4de74699e776f98f822faeee2c.png", "infoid": 1006313, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u5730\u5fb7\u52d2\u5179\u9879\u76ee\u73b0\u5728\u5df2\u7ecf\u6b63\u5f0f\u5b8c\u6210\uff0c\u6240\u4ee5\u662f\u65f6\u5019\u505a\u4e00\u4e9b\u51b3\u7b97\u4e86\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u56de\u987e\u8d22\u52a1\u72b6\u51b5\u3001\u4eba\u529b/\u65f6\u95f4\u6210\u672c\uff0c\u4ee5\u53ca\u4ece\u4e2d\u5b66\u5230\u7684\u4e3b\u8981\u7ecf\u9a8c\u6559\u8bad\u3002\n\u5fb7\u52d2\u5179\u57fa\u5730\u7684\u6784\u601d\u548c\u6267\u884c\u662f\u4e00\u6b21\u8270\u96be\u7684\u8003\u9a8c\u3002\u5728\u7814\u7a76\u8bbe\u8ba1\u4e2d\uff0c\u786c\u6d4b\u8bd5\u662f\u6307\u4e0d\u592a\u53ef\u80fd\u627e\u5230\u652f\u6301\u5047\u8bbe\u7684\u8bc1\u636e\u7684\u7814\u7a76\u3002\u5982\u679c\u4f60\u4f7f\u7528\u786c\u6d4b\u8bd5\uff0c\u4f60\u4ecd\u7136\u5f97\u5230\u4e86\u4f60\u7684\u5047\u8bbe\u6240\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u5bf9\u4f60\u7684\u5047\u8bbe\u683c\u5916\u6709\u4fe1\u5fc3\u3002\u6211\u4e00\u79bb\u5f00\u5b66\u672f\u754c\uff0c\u6211\u7684\u9996\u8981\u4efb\u52a1\u5c31\u662f\u751f\u6210\u53ef\u9760\u7684\u6570\u636e\uff0c\u8bf4\u660e\u6211\u5728\u516c\u5f00\u5e02\u573a\u4e0a\u7684\u7814\u7a76\u548c\u6559\u5b66\u53ef\u4ee5\u8d5a\u5230\u591a\u5c11\u94b1\u3002\u56e0\u6b64\uff0c\u5728\u6211\u7684\u7b2c\u4e00\u672c\u4e66\u4e2d\uff0c\u6211\u6709\u7b56\u7565\u5730\u9009\u62e9\u5c3d\u53ef\u80fd\u5feb\u5730\u505a\u4e00\u4e9b\u8fb9\u7f18/\u5947\u602a/\u6ede\u9500\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6211\u53ef\u4ee5\u5f97\u5230\u4e00\u534a\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u81ea\u4fe1\u5730\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u5236\u5b9a\u672a\u6765\u7684\u8ba1\u5212\uff0c\u56e0\u4e3a\u672a\u6765\u7684\u4e66\u5f88\u53ef\u80fd\u81f3\u5c11\u4f1a\u6709\u540c\u6837\u7684\u8868\u73b0\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u66f4\u597d\u3002\n\u4e0d\u7ba1\u6211\u6709\u591a\u5c11\u8ba1\u5212\u548c\u7b56\u7565\uff0c\u6211\u77e5\u9053\u6211\u5728\u6574\u4e2a\u4ea7\u54c1\u5468\u671f\u4e2d\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u4f1a\u5145\u6ee1\u4e0d\u5b8c\u7f8e\uff0c\u6240\u4ee5\u6211\u6545\u610f\u9009\u62e9\u505a\u4e00\u4e9b\u8ba9\u4eba\u89c9\u5f97\u6709\u8da3\u3001\u8f7b\u677e\u548c\u4f4e\u98ce\u9669\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5feb\u5730\u884c\u52a8\u8d77\u6765\u3002\n\u6211\u505a\u4e86\u8fd9\u4e48\u591a\u4e0d\u592a\u7406\u60f3\u7684\u4e8b\u60c5\uff0c\u4ee5\u81f3\u4e8e\u6211\u628a\u8fd9\u4e9b\u89c2\u5bdf\u7ed3\u679c\u4e2d\u7684\u5927\u90e8\u5206\u90fd\u653e\u5230\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u6863\u4e2d\uff0c\u7a0d\u540e\u6211\u4f1a\u628a\u5b83\u5f20\u8d34\u51fa\u6765\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u6982\u8ff0\u6211\u72af\u7684\u4e00\u4e9b\u6700\u5927\u7684\u9519\u8bef\uff0c\u5e76\u5f3a\u8c03\u6211\u505a\u5f97\u5f88\u597d\u7684\u51e0\u4ef6\u4e3b\u8981\u4e8b\u60c5\u3002\n\u8fd9\u4e00\u5207\u90fd\u59cb\u4e8e6\u670820\u65e5\uff0c\u5f53\u65f6\u6211\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u4e2a\u5199\u4e00\u672c\u77ed\u4e66\u7684\u60f3\u6cd5\u3002\u5b83\u53ea\u6536\u5230\u4e866\u6b21\u8f6c\u53d1\uff0c\u4f46\u8fd9\u8db3\u4ee5\u8ba9\u4eba\u8ba4\u771f\u5bf9\u5f85\u8fd9\u4e2a\u60f3\u6cd5\u3002\n\u6211\u5728GumRoad\u4e0a\u505a\u4e86\u4e00\u4e2a\u9884\u8d2d\u4ea7\u54c1\uff0c\u4ef7\u683c\u53ea\u67095\u7f8e\u5143\uff0c\u5728Canva\u4e0a\u8d77\u8349\u4e86\u4e00\u4e2a\u5feb\u901f\u5c01\u9762\uff0c\u7136\u540e\u6211\u771f\u7684\u628a\u94fe\u63a5\u76f4\u63a5\u94fe\u63a5\u5230\u6bcf\u4e2a\u8f6c\u53d1\u3001\u70b9\u8d5e\u6216\u56de\u590d\u6211\u7684\u63a8\u6587\u7684\u4eba\u3002\u8fd9\u5f88\u6709\u6548\uff0c\u8001\u5b9e\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u4e0d\u9519\u7684\u7b56\u7565\uff0c\u53ef\u4ee5\u786e\u4fdd\u6700\u521d\u7684\u4e00\u4e9b\u8f70\u52a8\u6548\u5e94\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\uff0c\u5982\u679c\u8fd9\u672c\u4e66\u4e0d\u80fd\u5356\u5230\u81f3\u5c1150\u672c\uff0c\u6211\u5c31\u4e0d\u505a\u4e86(\u8fd9\u4e5f\u7ed9\u4e86\u4ed6\u4eec\u5206\u4eab\u8fd9\u672c\u4e66\u7684\u7406\u7531\uff0c\u5982\u679c\u4ed6\u4eec\u771f\u7684\u60f3\u8981\u8fd9\u672c\u4e66\u7684\u8bdd)\u3002\u5b83\u7684\u9500\u91cf\u8d85\u8fc7\u4e8650\u53f0\uff0c\u6240\u4ee5\u6211\u627f\u8bfa\u8981\u505a\u8fd9\u4ef6\u4e8b\u3002\u6211\u628a\u53d1\u884c\u65e5\u671f\u5b9a\u57289\u670820\u65e5\u3002\n\u7136\u540e\u6211\u5f00\u59cb\u5199\u4f5c\uff0c\u8fd9\u662f\u6211\u4e24\u4e2a\u6708\u6765\u7684\u4e3b\u8981\u9879\u76ee\u3002\u6211\u5927\u6982\u6bcf\u5929\u5199\u4e00\u5343\u4e2a\u5b57\uff0c\u5e73\u5747\u6bcf\u54682-3\u5929\u3002\u8001\u5b9e\u8bf4\uff0c\u6211\u76f8\u5f53\u968f\u548c\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u6211\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u505a\u8fd9\u4ef6\u4e8b\u3002\u5927\u7ea6\u4e24\u4e2a\u6708\u540e\uff0c\u6211\u8d85\u8fc7\u4e8620K\u5b57\u7684\u6700\u4f4e\u76ee\u6807\u3002\u7136\u540e\uff0c\u6211\u5728\u5269\u4e0b\u7684\u65f6\u95f4\u91cc\u505a\u7f16\u8f91\u3001\u683c\u5f0f\u5316\u548c\u540e\u52e4\u5de5\u4f5c\u3002\n\u5199\u4f5c\u672c\u8eab\u53ea\u82b1\u4e86\u5927\u7ea670\u4e2a\u5c0f\u65f6(\u5b9e\u9645\u5199\u4f5c\u7684\u4e13\u6ce8\u65f6\u95f4\u662f\u7ecf\u8fc7\u6d4b\u91cf\u7684\uff0c\u800c\u4e0d\u662f\u5bf9\u6211\u5750\u5728\u529e\u516c\u684c\u524d\u7684\u65f6\u95f4\u7684\u6a21\u7cca\u4f30\u8ba1)\u3002\u8bf7\u770b\u4e0b\u9762\u6211\u7684\u8be6\u7ec6\u65f6\u95f4\u8ddf\u8e2a\u3002\n\u6211\u4ece\u4e00\u5f00\u59cb\u5c31\u5ba3\u5e03\u4e86\u53d1\u884c\u65e5\u671f\u548c\u6700\u5c0f\u5b57\u6570\uff0c\u8fd9\u5f88\u597d\u3002\u53d1\u884c\u65e5\u671f\u8feb\u4f7f\u6211\u5728\u67d0\u4e2a\u65f6\u5019\u5b8c\u6210\uff0c\u65e0\u8bba\u6211\u5bf9\u8fd9\u672c\u4e66\u6ee1\u610f\u4e0e\u5426(\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u6ee1\u610f)\u3002\u6700\u4f4e\u5b57\u6570\u7ed9\u4e86\u6211\u548c\u9884\u552e\u4e70\u5bb6\u81f3\u5c11\u67d0\u79cd\u5ba2\u89c2\u7684\u6807\u51c6\uff0c\u6765\u5224\u65ad\u4ec0\u4e48\u662f\u8db3\u591f\u7684\u3002\u8fd9\u662f\u6211\u552f\u4e00\u51b7\u9177\u800c\u575a\u5b9a\u7684\u627f\u8bfa\uff0c\u5173\u4e8e\u6211\u5c06\u57289\u670820\u65e5\u5b9e\u73b0\u4ec0\u4e48\u3002\u56e0\u6b64\uff0c\u6211\u81f3\u5c11\u6709\u4e00\u4e9b\u53ef\u8861\u91cf\u7684\u6807\u51c6\uff0c\u6765\u8861\u91cf\u6211\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5728\u4ec0\u4e48\u65f6\u5019\u5b9e\u73b0\u3002\n\u5728\u5199\u8fd9\u672c\u4e66\u7684\u540c\u65f6\uff0c\u6211\u8bd5\u56fe\u5b9a\u671f\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u5173\u4e8e\u5fb7\u52d2\u5179\u7684\u6709\u8da3\u548c\u6709\u6d1e\u5bdf\u529b\u7684\u4e1c\u897f\u3002\u6211\u8fd8\u5236\u4f5c\u4e86\u4e00\u4e9b\u5fb7\u52d2\u5179\u7684\u89c6\u9891\uff0c\u5e76\u4e0a\u4f20\u5230YouTube\u4e0a\u3002\u4e0a\u4f20\u5185\u5bb9\u65f6\uff0c\u6211\u901a\u5e38\u4f1a\u94fe\u63a5\u56deGumRoad\u4e0a\u7684\u9884\u552e\u7f51\u9875\u3002\u6211\u975e\u5e38\u80af\u5b9a\uff0c\u8fd9\u9879\u5de5\u4f5c\u5728\u63a8\u52a8\u4e00\u4e9b\u9500\u552e\u65b9\u9762\u662f\u6709\u6548\u7684\uff0c\u4f46\u6211\u6ca1\u6709\u975e\u5e38\u4ed4\u7ec6\u5730\u8861\u91cf\u4efb\u4f55\u4e00\u9879\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u201c\u5185\u5bb9\u6218\u7565\u201d\uff0c\u6211\u6ca1\u6709\u7cfb\u7edf\u7684\u8ba1\u5212\u6216\u65f6\u95f4\u8868\u3002\u6211\u53ea\u662f\u505a\u4e86\u6211\u60f3\u505a\u7684\u4e8b\u3002\n\u6211\u51b3\u5b9a\u5148\u901a\u8fc7GumRoad\u53d1\u5e03\u7535\u5b50\u4e66\uff0c\u7136\u540e\u518d\u53d1\u5e03\u5230\u4e9a\u9a6c\u900a\u3002\u6211\u4e4b\u6240\u4ee5\u505a\u51fa\u8fd9\u4e2a\u51b3\u5b9a\uff0c\u662f\u56e0\u4e3aGumRoad\u5141\u8bb8\u6211\u4e0e\u8bfb\u8005\u4fdd\u6301\u8054\u7cfb\uff0c\u800c\u4e9a\u9a6c\u900a\u4e0d\u80fd\u3002\u539f\u56e0\u663e\u800c\u6613\u89c1\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u8ba1\u5212\u5199\u66f4\u591a\u4e66\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u76f8\u5f53\u6709\u4ef7\u503c\u7684\u3002\n\u5f53\u6211\u5728GumRoad\u4e0a\u51fa\u7248\u8fd9\u672c\u7535\u5b50\u4e66\u7684\u65f6\u5019\uff0c\u6211\u8fd8\u5236\u4f5c\u5e76\u51fa\u7248\u4e86\u4e00\u672cDIY\u6709\u58f0\u8bfb\u7269\u548c\u4e00\u4e2a6\u8282\u8bfe\u7684\u89c6\u9891\u8bfe\u7a0b\u3002\u8fd9\u662f\u6211\u4ece\u5185\u68ee\u00b7\u5df4\u91cc\u7684\u56fe\u4e66\u6743\u5a01\u90a3\u91cc\u5b66\u5230\u7684\u3002\u8fd9\u672c\u4e66\u7684\u4e00\u4e2a\u542f\u793a\u662f\uff0c\u4f60\u5e94\u8be5\u603b\u662f\u6709\u51e0\u79cd\u9009\u62e9\uff0c\u5176\u4e2d\u4e00\u79cd\u5e94\u8be5\u76f8\u5bf9\u6bd4\u8f83\u8d35\u3002\u8fd9\u662f\u56e0\u4e3a\u4f60\u7684\u4e00\u5c0f\u90e8\u5206\u89c2\u4f17\u60f3\u8981\u4f60\u80fd\u63d0\u4f9b\u7684\u4e00\u5207\uff0c\u4e00\u4e9b\u4eba\u76f8\u5bf9\u5bcc\u88d5\uff0c\u8fd8\u6709\u4e00\u4e9b\u4eba\u53ea\u662f\u60f3\u7ed9\u4f60\u66f4\u591a\u7684\u94b1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u559c\u6b22\u4f60\u6240\u4ee3\u8868\u7684\u4e1c\u897f\u3002\nGumRoad\u8ba9\u60a8\u901a\u8fc7\u6240\u8c13\u7684\u4ea7\u54c1\u201c\u53d8\u4f53\u201d\u521b\u5efa\u5206\u5c42\u4ea7\u54c1\u3002\n\u6240\u4ee5\u6700\u521d\u7535\u5b50\u4e66\u7684\u4ef7\u683c\u662f5\u7f8e\u5143\uff0c\u6211\u898110\u7f8e\u5143\u7684\u7535\u5b50\u4e66+\u6709\u58f0\u8bfb\u7269\uff0c50\u7f8e\u5143\u7684\u7535\u5b50\u4e66+\u6709\u58f0\u8bfb\u7269+\u8bfe\u7a0b\u3002\u8fd9\u4e9b\u90fd\u662f\u4f4e\u4ef7\u3002\u6211\u72af\u7684\u4e00\u4e2a\u5927\u9519\u8bef\u662f\u4f4e\u4f30\u4e86\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\u7684\u4ef7\u683c(\u5728\u540e\u9762\u7684\u5e16\u5b50\u4e2d\u6709\u66f4\u591a\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u4fe1\u606f)\u3002\u6211\u53ea\u662f\u5bf9\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u7f3a\u4e4f\u4fe1\u5fc3\uff0c\u6240\u4ee5\u6211\u4f4e\u4f30\u4e86\u81ea\u5df1\u3002\u4e0d\u8fc7\uff0c\u4e5f\u8bb8\u4e00\u5f00\u59cb\u8fd9\u662f\u5fc5\u8981\u7684\u3002\u65e2\u7136\u6211\u5df2\u7ecf\u5411\u770b\u4f3c\u5feb\u4e50\u7684\u8bfb\u8005\u63d0\u4f9b\u4e86\u6211\u7684\u7b2c\u4e00\u4e2a\u4e25\u8083\u7684\u4ea7\u54c1\uff0c\u4e0b\u4e00\u6b21\u6211\u4f1a\u89c9\u5f97\u8981\u6c42\u66f4\u591a\u4e00\u70b9\u662f\u5f88\u8212\u670d\u7684\u3002\u5728Based Deleuze\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u7a0d\u540e\u4f1a\u63d0\u9ad8\u8fd9\u4e9b\u521d\u59cb\u4ef7\u683c\uff0c\u5c31\u50cf\u4f60\u73b0\u5728\u5728\u4ea7\u54c1\u9875\u9762\u4e0a\u770b\u5230\u7684\u90a3\u6837\uff0c\u4f46\u53ea\u6709\u572890%\u7684\u9500\u552e\u989d\u5df2\u7ecf\u5b8c\u6210\u4e4b\u540e\u3002\n\u53e6\u4e00\u5927\u9519\u5931\u7684\u673a\u4f1a\u4e4b\u4e00\u662f\u6ca1\u6709\u5c06\u6709\u58f0\u8bfb\u7269\u548c\u89c6\u9891\u8bfe\u7a0b\u9009\u9879\u4f5c\u4e3a\u6700\u521d\u9884\u552e\u4ea7\u54c1\u7684\u53d8\u4f53\u3002\u6211\u53ea\u662f\u5728GumRoad\u53d1\u5e03\u65e5\u671f\u524d\u53ca\u65f6\u6dfb\u52a0\u4e86\u5b83\u4eec\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u4e00\u5b9a\u4f1a\u63d0\u524d\u505a\u597d\u6240\u6709\u8fd9\u4e9b\u7684\u3002\n\u6709\u58f0\u8bfb\u7269\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u5f88\u7b80\u5355\u3002\u6211\u521a\u5f55\u4e0b\u4e86\u81ea\u5df1\u8bfb\u8fd9\u672c\u4e66\u7684\u8fc7\u7a0b\u3002\u6211\u505a\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u7f16\u8f91\uff0c\u4f46\u4e0d\u591a\u3002\u867d\u7136\u97f3\u8d28\u4e0d\u662f\u5f88\u597d\uff0c\u4f46\u6211\u89c9\u5f97\u771f\u7684\u5f88\u4e0d\u9519\u3002\u6211\u4e0b\u9762\u7684\u9500\u552e\u6570\u636e\u8868\u660e\uff0c\u8fd9\u662f\u503c\u5f97\u7684\u3002\u6709\u989d\u5916\u7684\u97f3\u9891\u5185\u5bb9\u4e5f\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4f8b\u5982\uff0c\u6211\u5c06\u6709\u58f0\u8bfb\u7269\u7684\u524d\u8a00\u4f5c\u4e3a\u64ad\u5ba2\u53d1\u5e03\uff0c\u4ee5\u5e2e\u52a9\u5ba3\u4f20\u8fd9\u672c\u4e66\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u63d0\u4f9b\u67d0\u79cd\u89c6\u9891\u8bfe\u7a0b\u662f\u4e0d\u8d39\u5439\u7070\u4e4b\u529b\u7684\uff0c\u56e0\u4e3a\u4f5c\u4e3a\u4e00\u540d\u5b66\u8005\uff0c\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u53d1\u8868\u6f14\u8bb2\u3002\u4f46\u662f\u5f53\u6211\u5728GumRoad\u4e0a\u51fa\u7248\u8fd9\u672c\u7535\u5b50\u4e66\u7684\u65f6\u5019\uff0c\u6211\u8fd8\u6ca1\u6709\u51c6\u5907\u4efb\u4f55\u8bfe\u7a0b\u5185\u5bb9\u3002\u6240\u4ee5\u6211\u53ea\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u4ea7\u54c1\u53d8\u4f53\uff0c\u53d1\u5e03\u4e86\u4e00\u4e2a\u8ba1\u5212\u4e2d\u7684\u89c6\u9891\u8bfe\u7a0b\uff0c\u7ed9\u5b83\u8d34\u4e0a\u4e8650\u7f8e\u5143\u7684\u4ef7\u683c\u6807\u7b7e\uff0c\u5728\u63cf\u8ff0\u4e2d\u6211\u8bf4\u4e70\u5bb6\u5728\u8d2d\u4e70\u540e\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u83b7\u5f97\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5728\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\u4e0a\u4f20\u4e866\u573a\u4e00\u5c0f\u65f6\u7684\u89c6\u9891\u8bb2\u5ea7\u3002\n\u6211\u6ca1\u6709\u505a\u4e00\u6b21\u975e\u5e38\u590d\u6742\u7684\u53d1\u5c04\u3002\u6211\u53ea\u662f\u4e0a\u4f20\u5230GumRoad\u4e0a\uff0c\u70b9\u51fb\u201c\u53d1\u5e03\u201d\u6216\u5176\u4ed6\u4ec0\u4e48\uff0c\u53d1\u4e86\u4e00\u70b9\u63a8\u7279\uff0c\u7136\u540e\u628a\u6211\u7684\u540d\u5355\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u51fa\u53bb\u3002\u5f53\u65f6\u6211\u67091215\u540d\u8ba2\u6237\u300252.2%\u7684\u4eba\u6253\u5f00\u4e86\u7535\u5b50\u90ae\u4ef6\u300223.3%\u7684\u4eba\u70b9\u51fb\u4e86BASE DELUZE\u7684\u94fe\u63a5\u3002\u8fd9\u662f\u6211\u53d1\u7684\u7535\u5b50\u90ae\u4ef6\u3002\n\u6b63\u5982\u4f60\u5728\u4e0b\u9762\u7684\u56fe\u8868\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u5728GumRoad\u7684\u7b2c\u4e00\u4e2a\u6708\u8d5a\u4e861243\u7f8e\u5143\u3002\u5f53\u6211\u51c6\u5907\u51fa\u7248\u7684\u65f6\u5019\uff0c\u6211\u5df2\u7ecf\u79ef\u7d2f\u4e86\u76f8\u5f53\u6570\u91cf\u7684\u9884\u8d2d\uff0c\u7136\u540e\u4e00\u4e9b\u51fa\u7248\u70ed\u6f6e\u5e26\u6765\u4e86\u4e00\u7fa4\u65b0\u7684\u4e70\u5bb6\u3002\n2020\u5e743\u6708\u7684\u7b2c\u4e8c\u6b21\u9ad8\u5cf0\u6070\u9022\u6d1b\u6749\u77f6\u7684\u5e73\u88c5\u4e66\u53d1\u5e03\u4f1a\u3002\u6709\u8da3\u7684\u662f\uff0c\u5728\u4e9a\u9a6c\u900a\u4e0a\u63a8\u51fa\u5e73\u88c5\u4e66\u4e5f\u589e\u52a0\u4e86GumRoad\u7684\u9500\u91cf\u3002\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u4ea7\u54c1\u7684\u6bcf\u4e00\u79cd\u53d8\u79cd\u7684\u9500\u552e\u91cf\u7ec6\u5206\u51fa\u6765\u3002\u6b63\u5982\u4f60\u5728\u4e0b\u9762\u770b\u5230\u7684\uff0c\u6211\u53ea\u5356\u51fa\u4e8611\u95e8\u8bfe\u7a0b\uff0c\u4f46\u8fd9\u6bd449\u672c\u6709\u58f0\u8bfb\u7269\u4ea7\u751f\u4e86\u66f4\u591a\u7684\u6536\u5165\u3002\n\u5e73\u88c5\u4e66\u7684\u63a8\u51fa\u66f4\u52a0\u968f\u610f\u3002\u53d1\u884c\u4f1a\u57282\u6708\u5e95\u4e3e\u884c\uff0c\u4f46\u76f4\u5230\u4eca\u5929\uff0c\u6211\u8fd8\u6ca1\u6709\u771f\u6b63\u4e3a\u5e73\u88c5\u4e66\u505a\u4e00\u6b21\u6b63\u5f0f\u7684\u5728\u7ebf\u53d1\u5e03\u3002\u6211\u5728\u63a8\u7279\u4e0a\u53d1\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u5e76\u5728\u6bcf\u5468\u7684\u65f6\u4e8b\u901a\u8baf\u4e2d\u63d0\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u6709\u5f88\u591a\u4e8b\u60c5\u6211\u4ece\u6765\u6ca1\u6709\u505a\u8fc7\u3002\u4f8b\u5982\uff0c\u6211\u751a\u81f3\u4ece\u6765\u6ca1\u6709\u7ed9\u7535\u5b50\u4e66\u7684\u8d2d\u4e70\u8005\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u8ba9\u4ed6\u4eec\u77e5\u9053\u5e73\u88c5\u672c\u5df2\u7ecf\u6709\u4e86\u3002\u800c\u4e14\u6211\u4ece\u6765\u6ca1\u6709\u505a\u51fa\u534f\u8c03\u4e00\u81f4\u7684\u52aa\u529b\u6765\u9f13\u52b1\u4e9a\u9a6c\u900a\u8bc4\u8bba\u3002\u540e\u6765\u6211\u4e86\u89e3\u5230\uff0c\u7531\u4e8e\u51e0\u4e2a\u4e0d\u540c\u7684\u539f\u56e0\uff0c\u590d\u4e60\u662f\u76f8\u5f53\u91cd\u8981\u7684\u3002(\u5982\u679c\u60a8\u60f3\u7559\u4e0b\u8bc4\u8bba\uff0c\u6211\u5c06\u4e0d\u80dc\u611f\u6fc0\uff01)\u3002\n\u5f53\u7136\uff0c\u9500\u552e\u989d\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0b\u964d\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u5bf9\u6de1\u5b63\u7684\u8f83\u4f4e\u6570\u5b57\u611f\u5230\u76f8\u5f53\u6ee1\u610f\u3002\u5728\u90a3\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u51e0\u4e4e\u6ca1\u6709\u505a\u8fc7\u4efb\u4f55\u664b\u5347\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u5982\u679c\u57fa\u5fb7\u52d2\u5179\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u91cc\u7ee7\u7eed\u6bcf\u6708\u8d5a100\u7f8e\u5143\uff0c\u8fd9\u672c\u4e66\u7684\u7ecf\u6d4e\u6210\u529f\u5c06\u4f1a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u5f97\u591a\u3002\u4e5f\u8bb8\u6211\u8fc7\u4f1a\u513f\u4f1a\u518d\u6765\u62a5\u5230\uff01\n\u4ece\u5934\u5230\u5c3e\uff0c\u6211\u7528\u4e86195.28\u4e2a\u5c0f\u65f6\u3002\u8fd9\u4e9b\u90fd\u662f\u96c6\u4e2d\u7cbe\u529b\u7684\u65f6\u95f4\uff0c\u6211\u5bf9\u81ea\u5df1\u5f88\u82db\u523b\uff0c\u4e0d\u80fd\u56e0\u4e3a\u5206\u5fc3\u800c\u51cf\u53bb\u3002\u6211\u4e5f\u4e0d\u4f1a\u5bf9\u6709\u65f6\u968f\u673a\u51fa\u73b0\u7684\u6240\u6709\u5c0f\u4efb\u52a1\u8fdb\u884c\u8ba1\u65f6\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f30\u8ba1\u662f\u4e00\u4e2a\u4e0b\u9650\u3002\n\u6b63\u5982\u4f60\u53ef\u4ee5\u4ece\u6211\u4e0b\u9762\u7684Toggl\u6570\u636e\u4e2d\u770b\u5230\u7684\uff0c\u5199\u4e66\u548c\u5236\u4f5c\u8bb2\u5ea7\u662f\u8fd9\u4e2a\u9879\u76ee\u6700\u8017\u65f6\u7684\u4e24\u4e2a\u90e8\u5206\u3002\u7136\u540e\uff0c\u5b66\u4e60\u5982\u4f55\u4e3aAmazon KDP\u8bbe\u7f6e\u56fe\u4e66\u683c\u5f0f\u662f\u7b2c\u4e09\u4e2a\u6700\u8017\u65f6\u7684\u4efb\u52a1\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u5b66\u5230\u4e86\u5f88\u591a\u5173\u4e8e\u5982\u4f55\u9ad8\u6548\u5730\u505a\u8fd9\u4e9b\u4e8b\u60c5\u7684\u77e5\u8bc6\uff0c\u6240\u4ee5\u672a\u6765\u7684\u9879\u76ee\u5e94\u8be5\u4f1a\u5bb9\u6613\u5f97\u591a\u3002\n\u8fd9\u91cc\u7684\u4e00\u5927\u6559\u8bad\u662f\uff0c\u6211\u5e94\u8be5\u66f4\u591a\u5730\u5916\u5305\u3002\u4e0b\u4e00\u6b21\u6211\u80af\u5b9a\u4e0d\u4f1a\u624b\u5de5\u6284\u5199\u8bb2\u8bfe\u3002\u90a3\u592a\u611a\u8822\u4e86\u3002\u6211\u7684\u5b9e\u4e60\u751f\u672c\u00b7\u5a01\u5ec9\u59c6\u68ee(Ben Williamson)\u5e2e\u52a9\u7f16\u8f91\u4e86\u89c6\u9891\uff0c\u6211\u59bb\u5b50\u5bf9\u6700\u540e\u4e00\u672c\u4e66\u7684\u62fc\u5199\u548c\u8bed\u6cd5\u9519\u8bef\u8fdb\u884c\u4e86\u68c0\u67e5\u3002\u6211\u89c9\u5f97\u8bed\u6cd5\u548c\u62fc\u5199\u90fd\u5f88\u624e\u5b9e\uff0c\u6709\u4e24\u4e09\u4e2a\u53e5\u5b50\u8ba9\u6211\u770b\u5b8c\u540e\u754f\u7f29\u4e86\uff0c\u4f46\u662f\u4f60\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\u81f3\u4e8e\u7248\u5f0f\u548c\u5c01\u9762\u8bbe\u8ba1\uff0c\u8fd9\u662f\u6211\u7684\u4e1a\u4f59\u8bbe\u8ba1\u6280\u5de7\u6240\u80fd\u8fbe\u5230\u7684\u6700\u597d\u6c34\u5e73\u3002\n\u53e6\u4e00\u4e2a\u6559\u8bad\u662f\uff0c\u6211\u7edd\u5bf9\u53ef\u4ee5\u5bf9\u4e8b\u60c5\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u6b63\u5916\u90e8\u6027\u3002\u6211\u5bf9\u6b64\u6709\u5f88\u591a\u60f3\u6cd5\u3002\u4ee5\u4e00\u79cd\u9988\u9001\u56fe\u4e66\u5185\u5bb9\u7684\u65b9\u5f0f\u53d1\u63a8\u7279\uff0c\u4ee5\u4e00\u79cd\u5145\u5f53\u8bb2\u5ea7\u6750\u6599\u7684\u65b9\u5f0f\u7f16\u5199\u56fe\u4e66\u5185\u5bb9\uff0c\u7b49\u7b49\u3002\u6211\u6ce8\u610f\u5230\uff0c\u4eba\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bb8\u591a\u5c0f\u65b9\u6cd5\u6765\u7ec4\u7ec7\u548c\u6392\u5e8f\u8fd9\u6837\u7684\u9879\u76ee\uff0c\u4ee5\u589e\u52a0\u4e00\u4e9b\u5c0f\u6548\u7387\uff0c\u8fd9\u4e9b\u6548\u7387\u53ef\u80fd\u4f1a\u975e\u5e38\u5f3a\u5927\u5730\u6210\u500d\u589e\u52a0\u3002\u6211\u4f1a\u8bd5\u7740\u5728\u6211\u7684\u4e0b\u4e00\u672c\u4e66\u4e2d\u628a\u5b83\u4eec\u4ed8\u8bf8\u5b9e\u8df5\uff0c\u6211\u4e00\u5b9a\u4f1a\u518d\u6b21\u62a5\u544a\u7684\u3002\n\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u5728\u51fa\u72488\u4e2a\u6708\u540e\uff0cBased Deleuze\u9879\u76ee\u5df2\u7ecf\u603b\u5171\u83b7\u5f97\u4e863290\u7f8e\u5143\u7684\u6536\u5165\u3002\u8fd9\u662f\u6263\u9664\u5e73\u53f0\u8d39\u7528\u540e\u7684\u51c0\u6536\u5165\uff0c\u4f46\u7a0e\u524d\u4e0d\u5305\u62ec\u6211\u6bcf\u6708\u7684\u56fa\u5b9a\u8fd0\u8425\u6210\u672c\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5728\u6211\u82b1\u4e86195\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u5b9e\u9645\u4e0a\u6bcf\u5c0f\u65f6\u8d5a\u4e86\u5927\u7ea617\u7f8e\u5143\u3002\u4f46\u5982\u679c\u603b\u90e8\u8bbe\u5728\u5fb7\u52d2\u5179\u7684\u516c\u53f8\u5728\u672a\u67653\u5e74\u5185\u7ee7\u7eed\u6bcf\u6708\u6536\u5165\u7ea6100\u7f8e\u5143\uff0c\u90a3\u5c06\u4f7f\u603b\u6536\u5165\u7ffb\u4e00\u756a\uff0c\u8fbe\u52306890\u7f8e\u5143\uff0c\u65f6\u85aa\u4e3a35\u7f8e\u5143/\u5c0f\u65f6\u3002\u867d\u7136\u4ecd\u8fdc\u672a\u8fbe\u5230\u535a\u58eb\u901a\u5e38\u7684\u8981\u6c42\uff0c\u4f46\u6b63\u5982\u6211\u5728\u5f00\u5934\u6240\u8bf4\uff0c\u8fd9\u662f\u4e00\u9879\u8270\u96be\u7684\u6d4b\u8bd5\uff1a\u5199\u4e00\u672c\u602a\u5f02\u7684\u8d85\u5229\u57fa\u54f2\u5b66\u4e66\u7c4d--\u5b83\u5411\u8bfb\u8005\u627f\u8bfa\u6ca1\u6709\u4efb\u4f55\u7ecf\u6d4e\u4ef7\u503c--\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u6700\u96be\u8d5a\u94b1\u7684\u65b9\u5f0f\u4e4b\u4e00\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u6211\u5f53\u7136\u53ef\u4ee5\u9009\u62e9\u505a\u66f4\u6709\u5229\u53ef\u56fe\u7684\u9879\u76ee\u3002\n\u8fd9\u53ea\u662f\u4e2a\u5f00\u7aef\u800c\u5df2\u3002\u5f88\u96be\u77e5\u9053\u968f\u7740\u6211\u7684\u8bfb\u8005\u7684\u589e\u52a0\uff0c\u968f\u7740\u6211\u5efa\u7acb\u4e66\u7c4d\u548c\u8bfe\u7a0b\u7684\u76ee\u5f55\uff0c\u968f\u7740\u6211\u7684\u7cfb\u7edf\u6bcf\u4e00\u6b21\u8fed\u4ee3\u90fd\u5728\u6539\u8fdb\uff0c\u8fd9\u4e9b\u6570\u5b57\u4f1a\u6709\u591a\u5927\u7684\u6539\u5584\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u5bf9\u8fd9\u4e00\u7ed3\u679c\u611f\u5230\u975e\u5e38\u9ad8\u5174\uff0c\u6211\u975e\u5e38\u6709\u4fe1\u5fc3\uff0c\u5199\u4f5c\u548c\u51fa\u7248\u4e66\u7c4d\u5c06\u7ee7\u7eed\u5728\u6211\u7684\u540e\u5b66\u672f\u77e5\u8bc6\u5546\u4e1a\u6a21\u5f0f\u4e2d\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u3002\u6211\u73b0\u5728\u6700\u5174\u594b\u7684\u662f\u89c2\u5bdf\u7b2c\u4e00\u518c\u548c\u7b2c\u4e8c\u518c\u4e4b\u95f4\u7684\u4e09\u89d2\u6d32\u2026", "note_en": "The  Based Deleuze project is now officially complete, so it\u2019s time to do some final accounting. Here I will review the financials, the labor/time costs, and the main lessons learned.\n Based Deleuze was conceived and executed as  a hard test. In research design, a hard test is a study that\u2019s unlikely to find evidence for a hypothesis. If you use a hard test and you still get the results predicted by your hypothesis, then you can be extra confident in  your hypothesis. As soon as I quit academia, my top priority was to generate reliable data about how much I could earn for my research and teaching on the open market. So for my first book, I strategically chose to do something as fringe/weird/unmarketable as possible, as quickly as possible. If I could get half-decent results, then I could confidently make future plans based on that data, because it\u2019s very likely future books will do  at least as well, and probably much better.\n No matter how much I planned and strategized, I knew that my first attempt at a whole product cycle would be riddled with imperfections, so I purposely chose to do something that felt fun, light-hearted, and low-stakes, so I could move as quickly as possible.\n I did so many things sub-optimally that I\u2019m dumping most of those observations into a separate document, which I\u2019ll post later. In this post, I\u2019ll outline some of the biggest mistakes I made and highlight a few of the main things I did well.\n  It all started on June 20th, when I tweeted an idea for a short book. It only got 6 retweets, but that was enough to take the idea seriously.\n I made a pre-order product on Gumroad priced at only 5 bucks, drafted a quick cover on Canva, and then I literally DMed the link to everyone who retweeted, liked, or replied favorably to my tweet. This worked well and honestly it was a pretty great tactic for securing some initial buzz. I told them if it doesn\u2019t get to at least 50 sales, I\u2019m not doing it (this also gave them reason to share it, if they really wanted the book to happen). It crossed 50 sales so I committed to doing it. I set the release date to September 20th.\n Then I got to work writing, which was my main project for about 2 months. I probably did about a thousand words per day, 2-3 days per week, on average. Pretty easy-going, to be honest, especially because I was free to do it however I pleased. I crossed my minimum target of 20k words after about 2 months. Then I did editing, formatting, and logistics in the time that remained.\n The writing itself only took about 70 hours (measured hours of focused time actually writing, not a vague estimate of my time at the desk). See my detailed time-tracking below.\n It was good that I announced a release date and a minimum word count from the beginning. The release date forced me to be done at a certain point, whether I was satisfied with the book or not (you never are). And the minimum word count gave me and pre-sale buyers at least some kind of objective standard for what would be enough. That was the only cold, hard promise I made about what, exactly, I would deliver on September 20. So I had at least some measurable standards for what I needed to achieve, and by when.\n While writing the book, I tried to regularly tweet interesting and insightful stuff about Deleuze. I also made some Deleuze videos and uploaded them to Youtube. When uploading content I would generally link back to the pre-sale web page on Gumroad. I am pretty sure that work was effective at driving some sales but I did not measure any of that very carefully. And I had no systematic plan or schedule for this \u201ccontent strategy.\u201d I just did what I felt like doing.\n  I decided to publish the ebook first, via Gumroad, and only much later publish to Amazon. I made this decision because Gumroad allows me to stay in touch with readers, whereas Amazon doesn\u2019t. For obvious reasons, this is quite valuable for someone who plans to write many more books.\n  When I published the ebook on Gumroad, I also created and published a DIY audiobook and a  6-lecture video course. I learned this from Nathan Barry\u2019s book  Authority. One takeaway from that book is you should always have a few options, and one should be relatively quite expensive. This is because some small fraction of your audience wants everything you can possibly offer, some fraction is relatively wealthy, and some fraction just wants to give you more money because they like what you represent.\n Gumroad let\u2019s you create tiered products through what they call product \u201cvariants.\u201d\n So initially the price for the ebook was $5, I asked $10 for the ebook+audiobook, and $50 for the ebook+audiobook+course. These were bad prices. One huge mistake I made was under-pricing all of these things (more on that in a later post). I just lacked confidence for my first attempt, so I sold myself short. Maybe that\u2019s necessary at first, though. Now that I\u2019ve delivered on my first serious offering to seemingly happy readers, next time I\u2019ll feel comfortable asking for a bit more. In the case of  Based Deleuze, I would later bump up these initial prices, as you\u2019ll see on the product page now, but only after 90% of the sales already came through.\n One of the other big missed opportunities was not including the audiobook and the video course options as variants in the initial pre-sale product. I only added them in time for the Gumroad release date. I\u2019ll definitely do all of that up front, next time.\n The audiobook took some time but it was pretty simple. I just recorded myself reading the book. I did some basic editing but not much. It\u2019s not quite Audible-quality but it\u2019s really quite good, I think. My sales data below show that this was worth the labor. It also came in handy to have extra audio content. I posted the Preface of the audiobook as  a podcast, for instance, to help promote the book.\n For me, offering some kind of video course was a no-brainer because, as an academic, I can fire off lectures quite easily. But when I published the ebook on Gumroad, I hadn\u2019t yet prepared any course content. So I just created a separate variant of the product, posted a planned curriculum of videos, slapped a $50 price tag on it, and in the description I said buyers would get the content over time after purchasing. I followed through with 6 one-hour video lectures uploaded over the course of a few months.\n   I didn\u2019t do a very sophisticated launch. I just uploaded to Gumroad, clicked \u201cpublish\u201d or whatever, tweeted a bit, and emailed my list. At the time I had 1,215 subscribers. 52.2% opened the email. And 23.3% clicked the link to  Based Deleuze.  Here is the email I sent.\n I earned $1,243 in the first month on Gumroad, as you can see in the graph below. By the time I was ready to publish, I had accumulated a healthy number of pre-orders, and then some publication buzz brought a bunch of new buyers.\n  The second spike in March 2020 coincides with the paperback release party in Los Angeles. Interestingly, launching the paperback on Amazon increased sales on Gumroad as well.\n We can break down the number of sales for each variant of the product. As you see below, I only sold 11 courses but this generated more revenue than the 49 audiobooks.\n   The launch of the paperback was even more haphazard. The release party was at the very end of February but, to this day, I never really did a proper online launch for the paperback. I tweeted some stuff and mentioned it in my weekly newsletter, but there are a lot of things I just never did. For instance, I never even emailed the buyers of the ebook to let them know the paperback is available. And I never made a concerted effort to encourage Amazon reviews. I  later learned that reviews are quite important for a few different reasons. (If you want to  leave a review, I\u2019d be grateful!)\n  Naturally, sales decrease over time, but I\u2019m actually quite pleased with the lower numbers in the quiet months. In those months, I pretty much did zero work on promotion. If  Based Deleuze continues to earn $100/month over the next several years, the financial success of this book would will be substantially more impressive. Maybe I\u2019ll report back again later!\n  From beginning to end, I clocked 195.28 hours. These are focused hours, and I am pretty hard on myself about subtracting for distractions. I also don\u2019t time all the little tasks that sometimes pop up randomly, so this estimate is a lower bound.\n As you can see from my Toggl data below, writing the book and producing the lectures were the two most time-consuming parts of the project. Then, learning how to format the book for Amazon KDP was the third most time-consuming task. Fortunately, I learned a lot about how to do these things efficiently, so future projects should be significantly easier.\n  One big lesson here is that I should have outsourced more. Next time I will definitely not transcribe the lectures manually. That was stupid. My intern  Ben Williamson helped with editing the videos, and my wife gave the final book a one-over for spelling and grammar mistakes. I think the grammar and spelling is quite solid; there are 2 or 3 sentences I cringed at after revisiting the book, but what can you do? As for the formatting and cover design, they are as good as my amateur design skills were ever going to get them.\n The other lesson is that I definitely could have sequenced things to derive more positive externalities. I have  a lot of ideas on this. Tweeting in a way that feeds the book content, writing the book content in a way that functions as lecture material, and so on. I\u2019ve noticed many little ways one can structure and sequence a project like this to increase a bunch of little efficiencies, which might multiply quite powerfully. I\u2019ll try to put them into practice for my next book and I\u2019ll be sure to report back again.\n  At the time of this writing, 8 months after publication, the  Based Deleuze project has netted a grand total of $3,290. That\u2019s net revenue after platform fees, but before taxes and excluding my monthly fixed operating costs.\n   For the 195 hours I spent, I effectively earned about $17/hour so far. But if  Based Deleuze continues to earn about $100/month for, say, another 3 years, that would roughly double the total revenue to $6,890 for an hourly wage of $35/hour. Still nowhere close to what a PhD generally commands, but as I said at the beginning, this was a hard test: Writing a weird super-niche philosophy book\u2014which promises the reader nothing economically valuable\u2014is one of the hardest possible ways to make money on the internet. I can certainly choose to do more lucrative projects, if necessary.\n This is just the beginning. It\u2019s hard to know how dramatically these numbers might improve as my audience increases, as I build up a catalogue of books and courses, and as my systems improve with every iteration. Personally, I\u2019m pleased enough with the results to feel quite confident that writing and publishing books will continue to play a major role in my post-academic intellectual business model. I\u2019m now most excited to observe the delta between book one and book two\u2026", "posttime": "2020-06-13 02:52:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5229\u57fa,niche,\u65f6\u95f4", "title": "\u6211\u662f\u5982\u4f55\u5728\u4e00\u672c\u77ed\u5c0f\u7684\u5229\u57fa\u54f2\u5b66\u4e66\u4e0a\u8d5a\u52303300\u7f8e\u5143\u7684", "title_en": "How I made $3,300 on a short niche philosophy book", "transed": 1, "url": "https://theotherlifenow.com/how-i-made-3300-on-a-short-niche-philosophy-book/", "via": "", "real_tags": ["\u5229\u57fa", "niche", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "e6b2b4ce7c6927dbcb7e18d859b8af5a.png", "infoid": 1006312, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Reaction Native\u4e8e2015\u5e74\u9996\u6b21\u5f15\u5165\uff0c\u4f5c\u4e3a\u4f7f\u7528ReactJS\u6846\u67b6\u5f00\u53d1\u5177\u6709\u672c\u673a\u529f\u80fd\u7684\u8de8\u5e73\u53f0\u5e94\u7528\u7a0b\u5e8f\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8be5\u5e73\u53f0\u7684\u6700\u521d\u8bbe\u8ba1\u5e76\u4e0d\u662f\u6ca1\u6709\u7f3a\u9677\u548c\u7f3a\u9677\uff0c\u5c3d\u7ba1\u8be5\u89e3\u51b3\u65b9\u6848\u83b7\u5f97\u4e86\u793e\u533a\u7684\u5927\u529b\u652f\u6301\uff0c\u5e76\u7531\u4e8e\u5176Web\u540c\u884c\u7684\u77e5\u540d\u5ea6\u800c\u9010\u6e10\u53d7\u5230\u6b22\u8fce\u3002\n\u6700\u521d\u4e8e2018\u5e74\u5ba3\u5e03\u7684Reaction Native\u91cd\u65b0\u67b6\u6784\u662fFacebook\u56e2\u961f\u6b63\u5728\u8fdb\u884c\u7684\u4e00\u9879\u52aa\u529b\uff0c\u76ee\u7684\u662f\u4f7f\u5e73\u53f0\u66f4\u5f3a\u5927\uff0c\u5e76\u89e3\u51b3\u5f00\u53d1\u4eba\u5458\u591a\u5e74\u6765\u5e26\u6765\u7684\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u95ee\u9898\u3002\u6211\u4eec\u5c06\u770b\u770b\u8fd9\u79cd\u91cd\u65b0\u67b6\u6784\u5c06\u5982\u4f55\u5f71\u54cd\u548c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u5f00\u53d1\u901f\u5ea6\u3002\n\u539f\u751f\u53cd\u5e94\u662f\u6240\u8c13\u7684\u5e73\u53f0\u65e0\u5173\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8fd9\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6846\u67b6\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7f16\u5199Javascript REACT\u4ee3\u7801\uff0c\u800c\u5728\u5e55\u540e\uff0cREACTION Native\u53ef\u4ee5\u90e8\u7f72\u5176\u673a\u5236\uff0c\u5c06REACTION\u534f\u8c03\u6811\u8f6c\u5f55\u6210\u4efb\u4f55\u672c\u673a\u57fa\u7840\u8bbe\u65bd\u90fd\u53ef\u4ee5\u89e3\u91ca\u7684\u5185\u5bb9\u3002\u8fd9\u610f\u5473\u7740\uff1a\n\u901a\u5e38\uff0c\u5bf9\u4e8eAndroid/iOS\u751f\u6001\u7cfb\u7edf\uff0c\u73b0\u5728\u7684\u673a\u5236\u770b\u8d77\u6765\u6709\u70b9\u50cf\u8fd9\u6837\uff1a\nJS\u7ebf\u7a0b\u662f\u8bfb\u53d6\u548c\u7f16\u8bd1\u6240\u6709JavaScript\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u4e5f\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u5927\u90e8\u5206\u4e1a\u52a1\u903b\u8f91\u53d1\u751f\u7684\u5730\u65b9\u3002Metro\u5c06\u6240\u6709Javascript\u4ee3\u7801\u7ec4\u5408\u5230\u5355\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5e76\u8f6c\u6362\u4efb\u4f55\u66ff\u4ee3\u7684Javascript\u8bed\u6cd5(\u5982JSX\u6216TS)\u3002\u7136\u540e\u5c06\u6b64\u4ee3\u7801\u53d1\u9001\u5230JavaScriptCore\u5f15\u64ce\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u8fd0\u884c\u3002\n\u672c\u673a\u7ebf\u7a0b\u662f\u8fd0\u884c\u672c\u673a\u4ee3\u7801\u7684\u4f4d\u7f6e\u3002\u6bcf\u5f53\u9700\u8981\u66f4\u65b0UI\u6216\u8bbf\u95ee\u672c\u673a\u51fd\u6570\u65f6\uff0c\u5b83\u90fd\u4f1a\u4e0eJS\u7ebf\u7a0b\u901a\u4fe1\u3002\u5b83\u53ef\u4ee5\u5206\u4e3a\u539f\u751fUI\u548c\u539f\u751f\u6a21\u5757\u3002\u672c\u5730\u6a21\u5757\u5728\u542f\u52a8\u65f6\u90fd\u662f\u6b66\u88c5\u7684\uff0c\u8fd9\u610f\u5473\u7740\u84dd\u7259\u6a21\u5757\u5728Reaction Native\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\u5c06\u59cb\u7ec8\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u3002\n\u9634\u5f71\u7ebf\u662f\u8ba1\u7b97\u5e03\u5c40\u7684\u4f4d\u7f6e\u3002\u5b83\u4f7f\u7528Facebook\u81ea\u5df1\u7684\u5e03\u5c40\u5f15\u64ceYoga\u6765\u8ba1\u7b97FlexBox\u5e03\u5c40\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u56deUI\u7ebf\u7a0b\u3002\n\u4e3a\u4e86\u5728JS\u7ebf\u7a0b\u548cNative\u7ebf\u7a0b\u4e4b\u95f4\u901a\u4fe1\uff0c\u6211\u4eec\u4f7f\u7528Bridge\u3002\u5728\u5e55\u540e\uff0c\u8fd9\u4e2aC++\u6a21\u5757\u662f\u56f4\u7ed5\u4e00\u4e2a\u5f02\u6b65\u961f\u5217\u6784\u5efa\u7684\u3002\u6bcf\u5f53\u5b83\u4ece\u4efb\u4e00\u7aef\u83b7\u5f97\u6570\u636e\u65f6\uff0c\u5b83\u90fd\u4f1a\u5c06\u6570\u636e\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u961f\u5217\uff0c\u7136\u540e\u5728\u5230\u8fbe\u65f6\u5bf9\u5176\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u3002\n\u8fd9\u610f\u5473\u7740\u6240\u6709\u7ebf\u7a0b\u90fd\u4f9d\u8d56\u4e8e\u901a\u8fc7\u7f51\u6865\u4f20\u8f93\u7684\u5f02\u6b65JSON\u6d88\u606f\uff0c\u8fd9\u4e9b\u6d88\u606f\u88ab\u53d1\u9001\u5230\u4efb\u4f55\u4e00\u7aef\uff0c\u5e76\u671f\u671b(\u4f46\u4e0d\u80fd\u4fdd\u8bc1)\u5b83\u4eec\u5c06\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u5019\u5f15\u8d77\u54cd\u5e94\u3002\u800c\u4e14\u8fd8\u6709\u62e5\u5835\u7684\u98ce\u9669\u3002\n\u8fd9\u9020\u6210\u6027\u80fd\u95ee\u9898\u7684\u4e00\u4e2a\u5e38\u89c1\u4f8b\u5b50\u662f\u6eda\u52a8\u5de8\u5927\u7684\u5217\u8868\uff1a\u6bcf\u5f53onScroll\u4e8b\u4ef6\u5728\u539f\u751f\u4e16\u754c\u53d1\u751f\u65f6\uff0c\u4fe1\u606f\u5c31\u4f1a\u5f02\u6b65\u53d1\u9001\u5230JavaScript\u9886\u57df\uff0c\u4f46\u539f\u751f\u4e16\u754c\u4e0d\u4f1a\u7b49\u5f85Javascript\u5b8c\u6210\u5b83\u7684\u5de5\u4f5c\u5e76\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u5c06\u5176\u53d1\u56de\u3002\u8fd9\u4f1a\u5728\u4fe1\u606f\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u4e4b\u524d\u51fa\u73b0\u7a7a\u683c\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u5ef6\u8fdf\u3002\n\u540c\u6837\uff0c\u8ba1\u7b97\u4e00\u4e2a\u5e03\u5c40\u9700\u8981\u7ecf\u8fc7\u5f88\u591a\u73af\u8282\u624d\u80fd\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e00\u76f4\u8d70\u5230\u745c\u4f3d\u5f15\u64ce\uff0c\u624d\u80fd\u88ab\u539f\u751f\u4e16\u754c\u8ba1\u7b97\u51fa\u6765\u3002\u5728\u8ba1\u7b97\u5e03\u5c40\u4e4b\u524d\uff0c\u5b83\u9700\u8981\u7ecf\u8fc7\u5f88\u591a\u73af\u8282\u624d\u80fd\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e00\u76f4\u8d70\u5230\u745c\u4f3d\u5f15\u64ce\u624d\u80fd\u88ab\u539f\u751f\u4e16\u754c\u8ba1\u7b97\u51fa\u6765\u3002\u5f53\u7136\uff0c\u8fd9\u610f\u5473\u7740\u4e5f\u8981\u901a\u8fc7\u8fd9\u5ea7\u6865\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u5f02\u6b65\u5e8f\u5217\u5316\u6765\u56de\u53d1\u9001JSON\u6570\u636e\u662f\u5982\u4f55\u9020\u6210\u6027\u80fd\u95ee\u9898\u7684\uff0c\u4f46\u662f\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u8ba9\u6211\u4eec\u7684JavaScript\u4e0e\u672c\u5730\u4e16\u754c\u901a\u4fe1\u5462\uff1f\u8fd9\u5c31\u662fJSI\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\u3002\nReaction Native\u91cd\u65b0\u67b6\u6784\u5c06\u9010\u6e10\u770b\u5230\u6865\u7684\u5e9f\u5f03\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u79cd\u79f0\u4e3aJavaScript Interface(JSI)\u7684\u65b0\u5143\u7d20\u3002\nJSI\u5141\u8bb8\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u6539\u8fdb\uff0c\u7b2c\u4e00\u4e2a\u662fJS\u5305\u4e0d\u518d\u4f9d\u8d56JSC\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cJSC\u5f15\u64ce\u73b0\u5728\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e0e\u5176\u4ed6\u53ef\u80fd\u66f4\u9ad8\u6027\u80fd\u7684JavaScript\u5f15\u64ce\u8fdb\u884c\u4ea4\u6362\uff0c\u6bd4\u5982V8\u3002\n\u7b2c\u4e8c\u4e2a\u6539\u8fdb\u662f\u8fd9\u4e2a\u65b0\u4f53\u7cfb\u7ed3\u6784\u7684\u57fa\u7840\uff1a&#34\uff1b\u901a\u8fc7\u4f7f\u7528JSI\uff0cJavaScript\u53ef\u4ee5\u4fdd\u5b58\u5bf9C++Host\u5bf9\u8c61\u7684\u5f15\u7528\u5e76\u8c03\u7528\u8fd9\u4e9b\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\u3002JavaScript\u548c\u539f\u751f\u9886\u57df\u5c06\u771f\u6b63\u76f8\u4e92\u4e86\u89e3\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0cJSI\u5c06\u5141\u8bb8\u6240\u6709\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5b8c\u5168\u4e92\u64cd\u4f5c\u6027\u3002\u6709\u4e86\u5171\u4eab\u6240\u6709\u6743\u7684\u6982\u5ff5\uff0cJavaScript\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u4eceJS\u7ebf\u7a0b\u8fd0\u884c\u672c\u673a\u65b9\u6cd5\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5c06\u8981\u4f20\u9012\u7684\u6d88\u606f\u5e8f\u5217\u5316\u4e3aJSON\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u6865\u4e0a\u7684\u6240\u6709\u62e5\u585e\u548c\u5f02\u6b65\u95ee\u9898\u3002\n\u9664\u4e86\u663e\u8457\u6539\u5584\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u5916\uff0c\u8fd9\u4e2a\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\u8fd8\u5141\u8bb8\u76f4\u63a5\u63a7\u5236\u6211\u4eec\u7684\u672c\u673a\u6a21\u5757\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528\u672c\u673a\u6a21\u5757\uff0c\u800c\u4e0d\u662f\u5728\u542f\u52a8\u65f6\u4e00\u6b21\u6027\u5f15\u5bfc\u6240\u6709\u6a21\u5757\u3002\u8fd9\u4f1a\u5927\u5927\u63d0\u9ad8\u542f\u52a8\u65f6\u95f4\u7684\u6027\u80fd\u3002\n\u8fd9\u4e00\u65b0\u673a\u5236\u8fd8\u53ef\u80fd\u4f7f\u8bb8\u591a\u4e0d\u540c\u7684\u7528\u4f8b\u53d7\u76ca\u3002\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u624b\u4e2d\u638c\u63e1\u4e86C++\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u770b\u5230\u5982\u4f55\u4f7f\u7528Reaction Native\u6765\u7784\u51c6\u975e\u5e38\u5927\u7684\u7cfb\u7edf\u9762\u677f\u3002\n\u591a\u5e74\u6765\uff0cReaction Native\u79ef\u7d2f\u4e86\u8bb8\u591a\u73b0\u5728\u5df2\u7ecf\u8fc7\u65f6\u3001\u672a\u4f7f\u7528\u6216\u5176\u4ed6\u9057\u7559\u4e0b\u6765\u7684\u90e8\u4ef6\u3002\u7531\u4e8e\u4e3b\u8981\u76ee\u6807\u662f\u6e05\u7406\u4e0d\u5fc5\u8981\u7684\u90e8\u5206\u4ee5\u53ca\u6539\u5584\u7ef4\u62a4\uff0cReaction Native\u6846\u67b6\u6b63\u5728\u770b\u5230\u81ea\u5df1\u7684\u4e00\u4e9b\u529f\u80fd\u88ab\u6e05\u7406\u6389\u3002\u8fd9\u610f\u5473\u7740\u50cfWebView\u6216AsyncStorage\u8fd9\u6837\u7684\u6838\u5fc3\u6a21\u5757\u6b63\u9010\u6e10\u4eceReaction Native\u6838\u5fc3\u4e2d\u79fb\u9664\uff0c\u4ee5\u5c06\u5b83\u4eec\u8f6c\u53d8\u4e3a\u793e\u533a\u7ba1\u7406\u7684\u5b58\u50a8\u5e93\u3002", "note_en": "React Native was first introduced in 2015 as a solution for developing cross-platform applications with native capabilities using the ReactJS framework. The  original design of the platform did not come without its set of flaws and drawbacks, despite the solution gaining strong community support and seeing gradual increase in popularity due to the fame of its Web counterpart.\n Originally announced in  2018, the  React Native re-architecture is an undergoing effort by the Facebook team to make the platform  more robust and  address some of the most common issues brought by developers over the years. We&#39;ll take a look on how this re-architecture will affect and improve both app  performance and development  velocity.\n  React Native is what is called a  platform-agnostic solution. To that extent, the framework&#39;s main goal is to allow developers to write Javascript React code while, under the hood, React Native can deploy its mechanisms to transcribe the React  reconciliation tree into something interpretable by whatever is the  native infrastructure. This means:\n  Typically, for the Android/iOS ecosystems, the mechanisms in place right now look a little bit like this:\n   The  JS thread is where all the JavaScript code is read and compiled, and where most of the business logic of the app happens.  Metro combines all your Javascript code into a single file, and translates any alternative Javascript syntax (like JSX or TS). This code is then sent to the  JavaScriptCore engine so it can be run.\n The  Native thread is where the native code is run. It communicates with the JS thread whenever there is a need to update the UI, or access native functions. It can be split into  Native UI and  Native Modules. Native Modules are all armed at startup, meaning that a Bluetooth module will always be active in case of use by React Native, even if it&#39;s not.\n The  Shadow thread is where the layout is calculated. It uses Facebook&#39;s own layout engine called  Yoga to calculate flexbox layouts and send them back to the UI thread.\n To communicate between the  JS thread and the  Native thread, we use the  Bridge. Under the hood, this  C++ module is built around an  asynchronous queue. Whenever it gets data from one of either side, it serializes the data as a string and pass it through the queue, and deserialize it on arrival.\n What this means is that all threads rely on  asynchronous JSON messages transmitted across the bridge, and these are sent to either side with the expectation (but  not a guarantee) that they will elicit a response some time in the future. And there&#39;s also a risk of congestion.\n A popular example of why this creates performance issues is seen with scrolling huge lists:  Whenever an  onScroll event happen on the native world, information is sent asynchronously to JavaScript land, but the native world  doesn&#39;t wait for Javascript to do its thing and send it back the other way. This creates a delay where there\u2019s a blank space before the info appears on the screen.\n Similarly, calculating a layout needs to go through many hoops before it can be displayed on the screen, as it needs to go all the way to the  Yoga engine before it can be calculated by the native world. And this implies, of course, going through the  bridge too.\n We can see how sending JSON data back and forth through async serialization creates performance issues, but  how  else can we make our JavaScript communicate with the native world? This is where  JSI comes into play.\n  The React Native re-architecture will progressively see the deprecation of the bridge in favor of a new element called the JavaScript Interface ( JSI).\n The  JSI allows for a few exciting improvements, the first one being that JS bundle does  not rely on JSC anymore. In other terms, the JSC engine can now easily be swapped with other \u2014 potentially more performant \u2014 JavaScript engines, like  V8 for example.\n The second improvement is the foundation of this new architecture: &#34;By using JSI, JavaScript can hold reference to C++  Host Objects and invoke methods on them. JavaScript and Native realms will be truly aware of each other.&#34;\n In other terms, JSI would allow for complete  interoperability between all threads. With the concept of  shared ownership, the JavaScript code could run native methods  directly from the JS thread, and there won\u2019t be any need to serialize to JSON the messages to pass across, removing all congestion and asynchronous issues on the bridge.\n  In addition to improving considerably the communication between the different threads, this new architecture also allows for direct  control over our native modules. Meaning that we can use native modules when we need them, as opposed to leading them all once at startup. This results in massive performance improvements of startup times.\n This new mechanism could potentially also benefit many different use cases. As we have now the power of C++ in our hands, it&#39;s easy to see how React Native could be used to target a very large panels of systems.\n  Over the years, React Native has accumulated a lot of parts that are now outdated, unused or otherwise legacy. With the main objective of  cleaning the non-essential parts as well as  improving maintenance, the React Native framework is seeing itself cleaned out of some its features. Meaning that core modules like  Webview or  AsyncStorage, are gradually being taken out of the React Native core to turn them into community managed repositories.", "posttime": "2020-06-13 02:51:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5efa\u7b51,\u53cd\u5e94,native,javascript", "title": "\u53cd\u5e94\u539f\u4f4f\u6c11\u57282020\u5e74\u7684\u91cd\u65b0\u5efa\u7b51", "title_en": "React Native's re-architecture in 2020", "transed": 1, "url": "https://medium.com/swlh/react-natives-re-architecture-in-2020-9bb82659792c", "via": "", "real_tags": ["2020", "\u5efa\u7b51", "\u53cd\u5e94", "native"]}]