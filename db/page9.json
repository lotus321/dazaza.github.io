[{"category": "", "categoryclass": "", "imagename": "96188c151751b7efc931f7023e1fad46.png", "infoid": 1007678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u516c\u53f8\u4eca\u5e74\u7684WWDC\u4e3b\u9898\u6f14\u8bb2\u662f\u865a\u62df\u7684\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u5b83\u53d1\u5e03\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u79fb\u52a8\u8f6f\u4ef6iOS14\u3002\n\u81ea\u63a8\u51fa14\u4e2a\u7248\u672c\u4ee5\u6765\uff0c\u82f9\u679c\u6539\u53d8\u4e86\u4e16\u754c\uff0c\u73b0\u5728\u6b63\u91cd\u65b0\u5c06\u6539\u8fdb\u5de5\u4f5c\u7684\u91cd\u70b9\u653e\u5728\u52a0\u5f3aiOS\u7684\u5e10\u7bf7\u6746\u4e0a\u3002\u8fd9\u610f\u5473\u7740\u6574\u4e2aiOS\u7cfb\u7edf\u4f1a\u6709\u66f4\u591a\u5fae\u5c0f\u7684\u6539\u53d8\u548c\u6539\u8fdb\uff0c\u800c\u4e0d\u662f\u7f8e\u89c2\u4e0a\u7684\u6539\u53d8\u3002\u5bf9\u4e8e\u5bf9iOS13\u53ca\u5176\u4f17\u591a\u540e\u7eed\u66f4\u65b0\u611f\u5230\u6cae\u4e27\u7684\u7528\u6237\u6765\u8bf4\uff0c\u6211\u4eec\u5f88\u6b23\u8d4f\u8fd9\u79cd\u5e55\u540e\u7684\u4f18\u5148\u987a\u5e8f\u3002\n\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5347\u7ea7--\u4efb\u4f55iOS\u7528\u6237\u90fd\u4f1a\u544a\u8bc9\u4f60\uff0c\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u5b9e\u73b0\u5e73\u6de1\u65e0\u5947\u3002\u5b83\u4eec\u8d77\u521d\u88ab\u87ba\u6813\u56fa\u5b9a\u5728\u901a\u77e5\u4e2d\u5fc3\u4e0a\uff0c\u540e\u6765\u5728\u4e3b\u5c4f\u5e55\u7684\u5de6\u4fa7\u83b7\u5f97\u4e86\u81ea\u5df1\u7684\u7a7a\u95f4\u3002\n\u5728iOS14\u4e2d\uff0c\u5c0f\u5de5\u5177\u73b0\u5728\u53ef\u4ee5\u5728\u4e3b\u5c4f\u5e55\u4e0a\u663e\u773c\u5730\u8bbf\u95ee\u3002\u4e3b\u5c4f\u5e55\u4e0a\u7684\u5c0f\u5de5\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u5929\u6c14\u5c0f\u90e8\u4ef6\u5927\u7ea6\u5360\u636e\u4e864\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7a7a\u95f4\u3002\u5176\u4ed6\u5c0f\u90e8\u4ef6\uff0c\u5982\u65f6\u949f\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u4e3b\u5c4f\u5e55\u7684\u6574\u4e2a\u5bbd\u5ea6\uff0c\u4ee5\u663e\u793a\u66f4\u591a\u4fe1\u606f\u3002\n\u7ec4\u7ec7\u4e3b\u5c4f\u5e55-iOS\u6700\u5927\u7684\u53d8\u5316\u4e4b\u4e00\u662fApp Library\uff0c\u5b83\u53ef\u4ee5\u81ea\u52a8\u5c06\u5e94\u7528\u7a0b\u5e8f\u5206\u7ec4\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u4f60\u5df2\u7ecf\u53ef\u4ee5\u7528\u6587\u4ef6\u5939\u8fdb\u884c\u7684\u624b\u52a8\u5206\u7ec4\u3002\n\u6b64\u5916\uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528App Library\u5728\u4e3b\u5c4f\u5e55\u4e0a\u9690\u85cf\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd8\u6709\u4e00\u79cd\u65b0\u7684\u5217\u8868\u67e5\u770b\u6a21\u5f0f\u3002\n\u6d88\u606f\u5347\u7ea7--\u53ef\u4ee5\u8bf4\u662fiOS\u6700\u91cd\u8981\u7684\u529f\u80fd\uff0c\u82f9\u679c\u5bf9\u6d88\u606f\u5e94\u7528\u8fdb\u884c\u4e86\u4e00\u4e9b\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u5347\u7ea7\uff0c\u6bd4\u5982@\u804a\u5929\u4e2d\u7684\u4e00\u4e2a\u4eba\uff0c\u5728\u7fa4\u804a\u4e2d\u4e32\u8fde\u6d88\u606f\uff0c\u4ee5\u53ca\u5c06\u91cd\u8981\u7684\u5bf9\u8bdd\u9501\u5b9a\u5728\u5e94\u7528\u7684\u9876\u90e8\u3002\n\u753b\u4e2d\u753b--\u4ee5\u9632\u4f60\u60f3\u5728\u505a\u5176\u4ed6\u4e8b\u60c5\u7684\u540c\u65f6\u5728\u89d2\u843d\u91cc\u770b\u89c6\u9891\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u4e86\u3002\n\u91cd\u65b0\u8bbe\u8ba1\u7684Siri--\u6fc0\u6d3bSiri\u4e0d\u518d\u4f1a\u8ba9\u4f60\u79bb\u5f00\u4f60\u76ee\u524d\u6240\u5728\u7684\u5c4f\u5e55\u3002\u5c4f\u5e55\u5e95\u90e8\u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684Siri\u52a8\u753b\u3002\n\u7ffb\u8bd1\u5e94\u7528-\u8bf4\u5230Siri\uff0ciOS 14\u6709\u4e00\u4e2a\u65b0\u7684\u7ffb\u8bd1\u5e94\u7528\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u82f9\u679c\u7248\u672c\u7684\u8c37\u6b4c\u7ffb\u8bd1\u3002\u9884\u88c5\u7684iOS 14\u5e94\u7528\u7a0b\u5e8f\u652f\u6301\u82f1\u8bed\u3001\u666e\u901a\u8bdd\u3001\u6cd5\u8bed\u3001\u5fb7\u8bed\u3001\u897f\u73ed\u7259\u8bed\u3001\u610f\u5927\u5229\u8bed\u3001\u65e5\u8bed\u3001\u97e9\u8bed\u3001\u963f\u62c9\u4f2f\u8bed\u3001\u8461\u8404\u7259\u8bed\u548c\u4fc4\u8bed\u3002\n\u901a\u7528\u641c\u7d22-iOS14&39\uff1b\u7684\u641c\u7d22\u73b0\u5728\u66f4\u50cfMacOS\u4e0a\u7684Spotlight\u548c\u7b2c\u4e09\u65b9\u641c\u7d22\u5e94\u7528Alfred\u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u641c\u7d22\u680f\uff0c\u53ef\u4ee5\u7edf\u6cbb\u6240\u6709\u7684\u641c\u7d22\u680f\u3002\u9664\u4e86\u80fd\u591f\u8c03\u51fa\u6587\u4ef6\u5916\uff0ciOS14\u7684\u641c\u7d22\u8fd8\u5c06\u6839\u636e\u641c\u7d22\u8bcd\u7ed9\u4f60\u66f4\u591a\u76f8\u5173\u4fe1\u606f\uff0c\u5e76\u56de\u7b54\u95ee\u9898\u3002\n\u4e0d\u592a\u663e\u773c\u7684\u6765\u7535\u901a\u77e5-\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6539\u53d8\uff0c\u4f46\u6b22\u8fce\u4f7f\u7528\u3002\u5f53\u4e00\u4e2a\u7535\u8bdd\u8fdb\u6765\u65f6\uff0c\u5b83\u4e0d\u518d\u5360\u636e\u6574\u4e2a\u5c4f\u5e55\u3002\u8036\u3002\n\u82f9\u679c\u53bb\u5e74\u62c6\u5206\u4e86iOS\uff0c\u5c06\u5176\u5206\u6210iPhone(\u548ciPod touch)\u7684iOS\u548ciPad\u7684iPadOS\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u82f9\u679c\u4e3a\u5e73\u677f\u7535\u8111\u7248\u672c\u63d0\u4f9b\u4e86\u66f4\u591a\u66f4\u9002\u5408\u5176\u66f4\u5927\u5c4f\u5e55\u7684\u5177\u4f53\u529f\u80fd(\u5e76\u6700\u7ec8\u4e3a\u9b54\u672f\u952e\u76d8\u63d0\u4f9b\u4e86\u66f4\u591a\u7c7b\u4f3c\u7b14\u8bb0\u672c\u7684\u529f\u80fd)\u3002\n\u5728iPadOS13\u4e2d\uff0c\u82f9\u679c\u589e\u52a0\u4e86\u4e00\u4e9b\u5173\u952e\u529f\u80fd\uff0c\u5982\u53f0\u5f0f\u673a\u7ea7\u522b\u7684Safari\uff0c\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u7a97\u53e3\u652f\u6301\uff0c\u6539\u8fdb\u7684Files\u5e94\u7528\u7a0b\u5e8f\uff0c\u952e\u76d8\u5feb\u6377\u952e\uff0c\u9f20\u6807\u548c\u89e6\u6478\u677f\u652f\u6301\uff0c\u7b49\u7b49\u3002\n\u5728iPadOS14\u4e2d\uff0c\u82f9\u679c\u8c03\u6574\u4e86\u51e0\u4e2a\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5b83\u4eec\u53ef\u4ee5\u5728iPad\u7684\u5927\u5c4f\u5e55\u4e0a\u4f7f\u7528\u3002\u6211\u4e0d\u662f\u5728\u9a97\u4f60\uff0c\u82f9\u679c\u82b1\u4e86\u51e0\u5206\u949f\u5439\u5618\u7167\u7247\u548c\u97f3\u4e50\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u65b0\u4fa7\u8fb9\u680f\u3002\u6211\u60f3\u8fd9\u662f\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u505a\u592a\u591a\u66f4\u6539\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u7ec4\u7ec7\u4e07\u5c81\uff01", "note_en": "Apple\u2019s WWDC keynote was virtual this year, but that didn\u2019t stop it from announcing the next version of its mobile software, iOS 14.\n Fourteen versions since its debut changed the world, Apple is refocusing its improvement efforts on strengthening iOS\u2019s tent poles. That means more little changes and improvements across iOS and less of an aesthetic change. For users frustrated by the bugginess of iOS 13 and its many subsequent updates, the under-the-hood prioritization is appreciated.\n Widgets upgrade \u2014 Any iOS users will tell you that the implementation of widgets has been underwhelming. They were bolted onto the Notification Center at first and then later given its own space to the left of the main home screen.\n In iOS 14, widgets are now prominently accessible  on the home screen. Widgets on the home screen come in different sizes. For example, the weather widget takes up approximately four app spaces. Other widgets like the clock can accommodate the full width of the home screen for displaying even more information.\n     Organizing the home screen \u2014 One of the bigger changes to iOS is App Library, which automatically groups apps together beyond the manual grouping you can already do with folders.\n Also: you can hide apps from the home screen with App Library. There\u2019s also a new list view mode as well.\n  Messages upgrade \u2014 Arguably iOS&#39;s most important feature, Apple is giving the Messages app a few very welcome upgrades like the ability to @ a person in a chat, thread messages in a group chat, and pin important conversations to the top of the app.\n   Picture-in-picture \u2014 In case you ever wanted to watch videos in the corner while doing something else. Now you can.\n  Redesigned Siri \u2014\u00a0Activating Siri no longer kicks you off the screen you&#39;re currently on. A new Siri animation appears at the bottom of the display.\n  Translate app \u2014 And speaking of Siri, iOS 14 has a new Translation app, which is basically Apple&#39;s version of Google Translate. The pre-installed iOS 14 apps supports English, Mandarin Chinese, French, German, Spanish, Italian, Japanese, Korean, Arabic, Portuguese, and Russian.\n  Universal search \u2014 iOS 14&#39;s search now works more like Spotlight on macOS and third-party search app Alfred. It&#39;s basically the one search bar to rule them all. In addition to being able to pull up files, iOS 14&#39;s search will give you more relevant information based on search terms and answer questions as well.\n  Less obtrusive call notifications \u2014 A small change, but welcome. When a call comes in, it no longer takes over the whole screen. Yay.\n   Apple split iOS last year, forking it into iOS for iPhone (and iPod touch) and iPadOS for iPads. By doing so, Apple gave the tablet version more specific features better suited for their larger screens (and eventually more laptop-like capabilities for the  Magic Keyboard).\n In iPadOS 13, Apple added key features like desktop-class Safari, multi-window support for a single app, an improved Files app, keyboard shortcuts, mouse and trackpad support, and more.\n In iPadOS 14, Apple&#39;s tweaked several of its preinstalled apps to make them usable on an iPad&#39;s larger display. I kid you not, Apple spent a few minutes bragging about the new sidebar in the Photos and Music app. I guess that&#39;s one way of updating an app without changing too much. Hurray for organization!", "posttime": "2020-06-23 01:55:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u82f9\u679c,ios,\u53d1\u5e03,apple,announces", "title": "\u82f9\u679c\u53d1\u5e03iOS14\uff0c\u5728\u4e3b\u5c4f\u5e55\u4e0a\u5b89\u88c5\u5fae\u4ef6", "title_en": "Apple Announces iOS 14 With Widgets on the Home Screen", "transed": 1, "url": "https://www.inputmag.com/tech/apple-announces-ios-14-with-widgets-on-the-home-screen", "via": "", "real_tags": ["\u82f9\u679c", "ios", "\u53d1\u5e03", "apple", "announces"]}, {"category": "", "categoryclass": "", "imagename": "8b0a5604205d2af8606f41c58a74752b.jpg", "infoid": 1007677, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u77db\u76fe\u7684\u662f\uff0c\u4eba\u4eec\u53ef\u4ee5\u6839\u636e\u9884\u6d4b\u8bef\u5dee\u7684\u76db\u884c\u7a0b\u5ea6\u8fdb\u884c\u957f\u671f\u9884\u6d4b\u3002\u4e00\u4e2a\u8fc7\u5ea6\u4f9d\u8d56\u9884\u6d4b\u7684\u4f53\u7cfb(\u901a\u8fc7\u6760\u6746\uff0c\u5c31\u50cf\u6700\u8fd1\u5371\u673a\u4e4b\u524d\u7684\u94f6\u884c\u4f53\u7cfb)\uff0c\u56e0\u6b64\u5bf9\u4e0d\u53ef\u9884\u89c1\u7684\u201c\u9ed1\u5929\u9e45\u201d\u4e8b\u4ef6\u8106\u5f31\u4e0d\u582a\uff0c\u6700\u7ec8\u5c06\u5206\u5d29\u79bb\u6790\u3002\u5c3d\u7ba1\u8106\u5f31\u7684\u6865\u6881\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5012\u584c\uff0c\u4f4621\u4e16\u7eaa\u768425\u5e74\u5e94\u8be5\u8db3\u4ee5\u4f7f\u9690\u85cf\u7684\u98ce\u9669\u53d8\u5f97\u7a81\u51fa\uff1a\u8fde\u901a\u6027\u548c\u8fd0\u8425\u6760\u6746\u6b63\u5728\u4f7f\u6587\u5316\u548c\u7ecf\u6d4e\u4e8b\u4ef6\u7011\u5e03\u5f97\u66f4\u5feb\u3001\u66f4\u6df1\u3002\u4eca\u5929\u4efb\u4f55\u6613\u788e\u7684\u4e1c\u897f\u5230\u90a3\u65f6\u90fd\u4f1a\u88ab\u6253\u788e\u3002\n\u4f1f\u5927\u7684\u81ea\u4e0a\u800c\u4e0b\u7684\u6c11\u65cf\u56fd\u5bb6\u5c06\u53ea\u662f\u8868\u9762\u4e0a\u7684\u6d3b\u751f\u751f\u7684\uff0c\u88ab\u8d64\u5b57\u3001\u653f\u5ba2\u4eec\u7684\u5229\u76ca\u9519\u4f4d\u548c\u4e2d\u592e\u96c6\u6743\u5236\u5ea6\u653e\u5927\u7684\u9519\u8bef\u6240\u524a\u5f31\u3002\u524d\u73b0\u4ee3\u4e3b\u4e49\u7684\u57ce\u90a6\u548c\u56fd\u5bb6\u5f3a\u5065\u6a21\u5f0f\u5c06\u5360\u4e0a\u98ce\uff0c\u5176\u8d22\u653f\u5ba1\u614e\u4ee4\u4eba\u7740\u8ff7\u3002\u8d27\u5e01\u53ef\u80fd\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5728\u7ecf\u5386\u4e86\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(Federal Reserve)\u7684\u707e\u96be\u6027\u7ecf\u5386\u540e\uff0c\u5b83\u4eec\u5c06\u4e0e\u4e00\u4e9b\u6ca1\u6709\u653f\u5e9c\u7684\u8d27\u5e01\u6302\u94a9\uff0c\u6bd4\u5982\u9ec4\u91d1\u3002\n\u90a3\u4e9b\u76ee\u524d\u89c4\u6a21\u5e9e\u5927\u3001\u8d1f\u503a\u7d2f\u7d2f\u3001\u5728\u4ea4\u6613\u6240\u4e0a\u5e02(\u56e0\u6b64\u662f\u201c\u9ad8\u6548\u201d\u7684)\u5e76\u652f\u4ed8\u5956\u91d1\u7684\u516c\u53f8\u5c06\u4f1a\u6d88\u5931\u3002\u90a3\u4e9b\u5c06\u5e78\u5b58\u4e0b\u6765\u7684\u5c06\u662f\u66f4\u5177\u6297\u9ed1\u5929\u9e45\u80fd\u529b\u7684\u516c\u53f8-\u89c4\u6a21\u8f83\u5c0f\u3001\u5bb6\u65cf\u6240\u6709\u3001\u672a\u5728\u4ea4\u6613\u6240\u4e0a\u5e02\u3001\u6ca1\u6709\u503a\u52a1\u3002\u5230\u90a3\u65f6\u5c06\u4f1a\u6709\u5927\u516c\u53f8\uff0c\u4f46\u8fd9\u4e9b\u90fd\u662f\u65b0\u7684-\u800c\u4e14\u662f\u77ed\u6682\u7684\u3002\n\u73b0\u5728\u5df2\u670925\u5e74\u6216\u66f4\u4e45\u5386\u53f2\u7684\u5927\u591a\u6570\u6280\u672f\u5c06\u4f1a\u5b58\u5728\uff1b\u51e0\u4e4e\u6240\u6709\u201c\u63d0\u4f9b\u6548\u7387\u201d\u7684\u5e74\u8f7b\u6280\u672f\u90fd\u5c06\u6d88\u5931\uff0c\u8981\u4e48\u88ab\u7ade\u4e89\u5bf9\u624b\u53d6\u4ee3\uff0c\u8981\u4e48\u9010\u6e10\u88ab\u66f4\u5f3a\u5927\u7684\u53e4\u8001\u6280\u672f\u6240\u53d6\u4ee3\u3002\u56e0\u6b64\uff0c\u6c7d\u8f66\u3001\u98de\u673a\u3001\u81ea\u884c\u8f66\u3001\u7eaf\u8bed\u97f3\u7535\u8bdd\u3001\u6d53\u7f29\u5496\u5561\u673a\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u5806\u6ee1\u4e66\u67b6\u7684\u4e66\u67b6\u4ecd\u5c06\u4e0e\u6211\u4eec\u5728\u4e00\u8d77\u3002\n\u5b97\u6559\u5b9e\u8df5\u5c06\u7ecf\u5386\u590d\u5174\uff0c\u88ab\u89c6\u4e3a\u5f3a\u6709\u529b\u7684\u542f\u53d1\u5f0f\u3001\u6587\u5316\u4ef7\u503c\u89c2\u548c\u4eea\u5f0f\u7684\u4f20\u9001\u8005\u3002\u79d1\u5b66\u5c06\u5728\u975e\u7ebf\u6027\u9886\u57df\u4ea7\u751f\u8d8a\u6765\u8d8a\u5c0f\u7684\u6536\u76ca\uff0c\u5c3d\u7ba1\u5b83\u5c06\u6d88\u8017\u5de8\u5927\u7684\u8d44\u6e90\uff1b\u76f8\u53cd\uff0c\u5b83\u5c06\u5f00\u59cb\u4e13\u6ce8\u4e8e\u5b83\u4e0d\u80fd\u505a\u548c\u4e0d\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u3002\u6700\u540e\uff0c\u73b0\u5728\u88ab\u79f0\u4e3a\u5b66\u672f\u7ecf\u6d4e\u5b66\u7684\u4e1c\u897f\u5c06\u88ab\u4e0d\u5c0a\u91cd\uff0c\u5c31\u50cf\u4e25\u8c28(\u548c\u5b9e\u9645)\u7684\u5934\u8111\u76ee\u524d\u5bf9\u5fb7\u91cc\u8fbe\u5f0f\u7684\u540e\u73b0\u4ee3\u4e3b\u4e49\u8a00\u8bba\u4e00\u6837\u3002\n\u7eb3\u897f\u59c6\u00b7\u5854\u52d2\u5e03(Nassim Taleb)\uff1a\u7ebd\u7ea6\u5927\u5b66(New York University)\u98ce\u9669\u5de5\u7a0b\u5b66\u6559\u6388\uff1b\u201cProcrstes\u7684\u5e8a\uff1a\u54f2\u5b66\u548c\u5b9e\u8df5\u683c\u8a00\u201d(The Bed of Procrstes\uff1a\u54f2\u7406\u548c\u5b9e\u8df5\u683c\u8a00)(\u5170\u767b\u4e66\u5c4b\u548c\u4f01\u9e45\u51fa\u7248\u793e\uff0c2011\u5e741\u6708)", "note_en": "Paradoxically, one can make long-term predictions on the basis of the prevalence of forecasting errors. A system that is over-reliant on prediction (through leverage, like the banking system before the recent crisis), hence fragile to unforeseen \u201cblack swan\u201d events, will eventually break into pieces. Although fragile bridges can take a long time to collapse, 25 years in the 21st century should be sufficient to make hidden risks salient: connectivity and operational leverage are making cultural and economic events cascade faster and deeper. Anything fragile today will be broken by then.\n  The great top-down nation-state will be only cosmetically alive, weakened by deficits, politicians&#39; misalignment of interests and the magnification of errors by centralised systems. The pre-modernist robust model of city-states and statelings will prevail, with obsessive fiscal prudence. Currencies might still exist, but, after the disastrous experience of America&#39;s Federal Reserve, they will peg to some currency without a government, such as gold.\n Companies that are currently large, debt-laden, listed on an exchange (hence \u201cefficient\u201d) and paying bonuses will be gone. Those that will survive will be the more black swan-resistant\u2014smaller, family-owned, unlisted on exchanges and free of debt. There will be large companies then, but these will be new\u2014and short-lived.\n Most of the technologies that are now 25 years old or more will be around; almost all of the younger ones \u201cproviding efficiencies\u201d will be gone, either supplanted by competing ones or progressively replaced by the more robust archaic ones. So the car, the plane, the bicycle, the voice-only telephone, the espresso machine and, luckily, the wall-to-wall bookshelf will still be with us.\n   Religious practice will experience a revival, seen as a conveyor of robust heuristics, cultural values and rituals. Science will produce smaller and smaller gains in the non-linear domain, in spite of the enormous resources it will consume; instead it will start focusing on what it cannot\u2014and should not\u2014do. Finally, what is now called academic economics will be treated with the same disrespect that rigorous (and practical) minds currently have for Derrida-style post-modernist verbiage.\n  Nassim Taleb: professor of risk engineering at New York University; author of \u201cThe Bed of Procrustes: Philosophical and Practical Aphorisms\u201d (Random House and Penguin, January 2011)", "posttime": "2020-06-23 01:54:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5d29\u6e83,taleb,\u5b9e\u8df5", "title": "2036\u5e74\u7684\u4e16\u754c\uff1a\u7eb3\u897f\u59c6\u00b7\u5854\u52d2\u5e03\u770b\u4ec0\u4e48\u4f1a\u5d29\u6e83\uff0c\u4ec0\u4e48\u4e0d\u4f1a(2010)", "title_en": "The World in 2036: Nassim Taleb looks at what will break, and what won't (2010)", "transed": 1, "url": "https://www.economist.com/news/2010/11/22/nassim-taleb-looks-at-what-will-break-and-what-wont", "via": "", "real_tags": ["\u5d29\u6e83", "taleb", "\u5b9e\u8df5"]}, {"category": "", "categoryclass": "", "imagename": "2e55d3600542abf851a7e4b2ea1f9716.jpeg", "infoid": 1007675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\uff1a\u4f5c\u4e3a\u4e9a\u9a6c\u900a\u4f1a\u5458\uff0c\u6211\u4ece\u5408\u683c\u8d2d\u4e70\u4e2d\u8d5a\u53d6\u6536\u5165\u3002\u6211\u901a\u8fc7\u8fd9\u4e2a\u5e16\u5b50\u4e2d\u7684\u94fe\u63a5\u83b7\u5f97\u8d2d\u4e70\u4f63\u91d1\u3002\u8bf7\u5355\u51fb\u6b64\u5904\u67e5\u770b\u66f4\u5b8c\u6574\u7684\u514d\u8d23\u58f0\u660e\u3002\n\u53e6\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\u672c\u7cfb\u5217\u5047\u8bbe\u60a8\u4e86\u89e3\u4e00\u4e9b\u521d\u4e2d/\u9ad8\u4e2d\u6570\u5b66(\u5b9e\u9645\u4e0a\u4ec5\u4ec5\u662f\u4ee3\u6570)\uff0c\u4ee5\u4fbf\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u8fd9\u4e9b\u90e8\u5206\u3002\n\u867d\u7136\u4e0b\u9762\u7684\u6ce8\u91ca\u662f\u6211\u5bf9\u6e10\u53d8\u4e0b\u964d\u7684\u666e\u904d\u770b\u6cd5\uff0c\u4f46\u6211\u6b63\u5728\u5173\u6ce8\u4e00\u672c\u66f4\u8be6\u7ec6\u7684\u4e66\uff0c\u56e0\u4e3a\u6211\u8bd5\u56fe\u5c55\u793a\u6211\u6240\u5b66\u5230\u7684\u66f4\u9ad8\u6c34\u5e73\u7684\u5185\u5bb9\u3002\u4f60\u53ef\u4ee5\u5728\u66fc\u5b81\u51fa\u7248\u516c\u53f8\u4e70\u5230\u8fd9\u672c\u4e66\u300a\u6478\u7d22\u6df1\u5ea6\u5b66\u4e60\u300b\uff0c\u7535\u5b50\u4e66\u7684\u4ef7\u683c\u66f4\u4fbf\u5b9c\uff0c\u6216\u8005\u4e9a\u9a6c\u900a\u7684\u7eb8\u8d28\u4e66\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e70\u5230\uff0c\u7f51\u5740\u662fhttps://amzn.to/2YVTrmz\u3002\n\u5982\u679c\u7b2c4\u7ae0\u5e0c\u671b\u5411\u60a8\u4ecb\u7ecd\u68af\u5ea6\u4e0b\u964d(GD)\uff0c\u7b2c5\u7ae0\u5c06\u4ee5\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6982\u62ec\u8be5\u6982\u5ff5\uff1a*\u5177\u6709\u4e00\u4e2a\u8f93\u51fa\u8282\u70b9\u7684\u591a\u4e2a\u8f93\u5165\u7ed3\u70b9*\u51bb\u7ed3\u4e00\u4e2a\u6743\u91cd*\u5177\u6709\u591a\u4e2a\u8f93\u51fa\u7ed3\u70b9\u7684\u4e00\u4e2a\u8f93\u5165\u7ed3\u70b9*\u591a\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\u7ed3\u70b9*\u591a\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\u7ed3\u70b9\u3002\n\u7531\u4e8e\u60a8\u6709\u591a\u4e2a\u5171\u4eab\u4e00\u4e2a\u8f93\u51fa\u8282\u70b9\u7684\u8f93\u5165\u8282\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u8ba1\u7b97\u51fa\u7684\u589e\u91cf\u5747\u5300\u5206\u5e03\u56de\u6bcf\u4e2a\u8f93\u5165\u8282\u70b9\u3002\u8fd9\u6837\u505a\u5c06\u4e3a\u6bcf\u4e2a\u8282\u70b9\u63d0\u4f9b\u9002\u5f53\u7684WEIGHT_DELTA\u3002\n\u8bf7\u8bb0\u4f4f\uff1aWeight_delta\u503c\u544a\u8bc9\u60a8\u76f8\u5bf9\u4e8e\u5404\u81ea\u7684\u8f93\u5165\u503c\uff0c\u60a8\u7684\u9884\u6d4b(\u6b63\u6216\u8d1f)\u4e0e\u5b9e\u9645\u503c\u76f8\u5dee\u6709\u591a\u8fdc\u3002\u5982\u679c\u4f7f\u7528\u6570\u5b66\u8ba1\u7b97\uff0c\u8be5\u7b49\u5f0f\u5c06\u5982\u4e0b\u6240\u793a\uff1a\u201cWeight_Delta=\u8be5\u7279\u5b9a\u8f93\u5165\u503c*\u8ba1\u7b97\u51fa\u7684\u589e\u91cf\u201d)\u3002\n\u5728\u627e\u5230\u8fd9\u4e2aweight_delta\u503c\u4e4b\u540e\uff0c\u60a8\u5c06\u4f7f\u7528weight-=alpha*\u8be5\u7279\u5b9a\u7684\u8f93\u5165\u8282\u70b9\u7684weight_delta\u503c\u6765\u8ba1\u7b97\u65b0\u7684\u6743\u91cd\u503c\u3002\u6709\u4e86\u8fd9\u4e2a\u65b0\u7684\u6743\u91cd\uff0c\u60a8\u5bf9\u6bcf\u4e2a\u8f93\u5165\u8282\u70b9\u7684\u9884\u6d4b\u5c06\u662fpred=\u8f93\u5165\u8282\u70b9\u503c*\u65b0\u6743\u91cd\u503c\u3002\u60a8\u5728x\u6b21\u8fed\u4ee3\u4e2d\u91cd\u590d\u6b64\u8fc7\u7a0b\u3002\n\u51bb\u7ed3\u4e00\u4e2a\u6743\u91cd\u57fa\u672c\u4e0a\u5141\u8bb8\u60a8\u67e5\u770b\u54ea\u4e9b\u8f93\u5165\u8282\u70b9\u5bf9\u9884\u6d4b\u503c\u5f71\u54cd\u6700\u5927\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cTrask\u5c31\u662f\u8fd9\u4e48\u8bf4\u7684\uff0ca(\u6216\u8005\u4ec5\u4ec5\u662f\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u8f93\u5165\u8282\u70b9)\u53ef\u80fd\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u8f93\u5165\uff0c\u5177\u6709\u5f88\u5f3a\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u4f46\u5982\u679c\u7f51\u7edc\u610f\u5916\u5730\u60f3\u51fa\u4e86\u5982\u4f55\u5728\u6ca1\u6709\u5b83\u7684\u60c5\u51b5\u4e0b\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u51c6\u786e\u9884\u6d4b\uff0c\u90a3\u4e48\u5b83\u6c38\u8fdc\u4e5f\u5b66\u4e0d\u4f1a\u628aa\u7eb3\u5165\u5b83\u7684\u9884\u6d4b[1]\u3002\n\u5982\u679c\u60a8\u60f3\u77e5\u9053\u5982\u4f55\u51bb\u7ed3\u4e00\u4e2a\u6743\u91cd\uff0c\u90a3\u4e48\u53ea\u9700\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5c06\u8be5\u6743\u91cd\u7684\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u5982\u679c\u4f60\u628a\u4efb\u4f55\u4e1c\u897f\u4e58\u4ee50\uff0c\u4f60\u603b\u662f\u4f1a\u5f97\u5230\u503c0\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u6743\u91cd\u503c\u5c06\u59cb\u7ec8\u4e0e\u60a8\u5728\u7279\u5b9a\u72b6\u6001\u4e0b\u201c\u51bb\u7ed3\u201d\u6743\u91cd\u76f8\u540c\u3002\n\u8fd9\u4e00\u6b21\u7684\u68af\u5ea6\u4e0b\u964d\u4e0e\u7b2c\u4e00\u4e2a\u5c0f\u4e3b\u9898\u76f8\u53cd\u3002\u60a8\u6709\u4e00\u4e2a\u8f93\u5165\u8282\u70b9\u5bf9\u4e09\u4e2a\u4e0d\u540c\u7684\u8f93\u51fa\u8282\u70b9\u4ea7\u751f\u5f71\u54cd\u3002\u7531\u4e8e\u4e09\u4e2a\u8f93\u51fa\u8282\u70b9\u5171\u4eab\u4e00\u4e2a\u8f93\u5165\u8282\u70b9\uff0c\u56e0\u6b64\u6bcf\u4e2a\u589e\u91cf\u503c\u5c06\u544a\u8bc9\u60a8\u4e0e\u9884\u6d4b\u4e2d\u7684\u539f\u59cb\u8f93\u5165\u8282\u70b9\u7684\u8ddd\u79bb\u6709\u591a\u8fdc\u3002\n\u8981\u8bb0\u4f4f\u7684\u516c\u5f0f\uff1a*pred=\u4e00\u4e2a\u8f93\u5165\u8282\u70b9\u503c*\u521d\u59cb\u6743\u91cd*\u589e\u91cf=pred-true\u3002\n\u7531\u4e8e\u6709\u4e09\u4e2a\u8f93\u51fa\u8282\u70b9\uff0cWeight_Delta\u5c06\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u62ecWeight_Delta=\u4e00\u4e2a\u8f93\u5165\u8282\u70b9\u503c*\u6765\u81ea\u6bcf\u4e2a\u8f93\u51fa\u8282\u70b9\u7684Weight_Delta\u5217\u8868\u3002\n\u6700\u540e\uff0c\u60a8\u5c06\u91cd\u590d\u7b2c\u4e00\u4e2a\u9879\u76ee\u7b26\u53f7\u4e3b\u9898\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u65b0\u7684\u6743\u91cd\u503c\uff0c\u4ee5\u6d4b\u8bd5\u65b0\u7684\u9884\u6d4b\u3002\n\u7b2c\u4e00\u4e2a\u5c0f\u4e3b\u9898\u548c\u8fd9\u4e2a\u5c0f\u4e3b\u9898\u4e4b\u95f4\u7684\u533a\u522b\u53ea\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u54ea\u4e00\u4fa7(\u8f93\u5165\u548c\u8f93\u51fa)\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u8282\u70b9\u3002\u7136\u540e\u8fdb\u884c\u5fc5\u8981\u7684\u4e58\u6cd5\u3002\n\u6700\u540e\u4e00\u4e2a\u526f\u4e3b\u9898\u662f\u5f53\u60a8\u6709\u591a\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u65f6\u3002\u5982\u679c\u4f60\u7406\u89e3\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e09\u4e2a\u5c0f\u4e3b\u9898(\u5728\u8fd9\u4e9b\u7b14\u8bb0\u548c\u4e66\u4e2d)\uff0c\u90a3\u4e48\u8fd9\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7684\u6743\u91cd\u503c\u548c\u8f93\u5165\u503c\uff0c\u60a8\u5c06\u627e\u5230\u589e\u91cf\u503c\u3002\n\u5728\u627e\u5230\u589e\u91cf\u503c\u4e4b\u540e\uff0c\u60a8\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8f93\u51fa\u8ba1\u7b97\u6bcf\u884c\u7684\u589e\u91cf_\u6743\u91cd\u503c\u3002\n\u6700\u540e\uff0c\u8ba1\u7b97\u8be5\u884c\u4e2d\u6bcf\u5217\u7684\u65b0\u6743\u91cd\u503c\uff0c\u5e76\u5c06\u5176\u6307\u5b9a\u4e3a\u8981\u5728\u9884\u6d4b\u4e2d\u4f7f\u7528\u7684\u65b0\u6743\u91cd\u503c\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u3002\n#\u6b64\u4ee3\u7801\u7247\u6bb5\u5047\u5b9a\u60a8\u5df2\u7ecf\u8ba1\u7b97\u4e86weight_deltas#\u6b64\u5d4c\u5957\u7684for\u5faa\u73af\u57fa\u672c\u4e0a\u662f\u4e3a\u4e00\u884c\u4e2d\u7684\u6bcf\u4e00\u5217(\u77e9\u9635\u4e2d\u7684\u6bcf\u884c\uff0cj-&gt;\u884c\u4e2d\u7684\u6bcf\u4e00\u5217)\u5206\u914d\u65b0\u7684\u6743\u91cd\u3002#\u60a8\u904d\u5386\u7b2c(I)\u884c\u4e2d\u7684\u6240\u6709\u5217(J)\uff0c\u7136\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u5e76\u4ece\u7b2c0\u5217\u5f00\u59cb\u8ba1\u7b97Range(len(Weight))\u4e2d\u7684i\uff1afor j in range(len(Weight[0]))\uff1aWeights[i][j]-\u3002\n\u56e0\u6b64\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u7b14\u8bb0\u672c\u548c\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u7b14\u8bb0\u672c\u4e4b\u95f4\uff0c\u6709\u5f88\u591a\u5173\u4e8e\u6df1\u5ea6\u5b66\u4e60\u4e2d\u68af\u5ea6\u4e0b\u964d\u7684\u8ba8\u8bba\u3002\u4e0d\u8fc7\uff0c\u6211\u60f3\u5c55\u793a\u6570\u5b66\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\u7684\u76f4\u89c2\u8868\u793a\u3002\u6211\u4e0d\u592a\u9002\u5408matplotlib(\u5230\u76ee\u524d\u4e3a\u6b62)\uff0c\u6240\u4ee5\u6211\u76f8\u4fe1\u4e0b\u9762\u7684gif\u5728\u663e\u793a/\u7ed8\u5236\u6570\u5b66\u4e0a\u662f\u5f88\u597d\u7684\u3002\n\u5728\u4e0b\u9762\u7684\u4e24\u5f20GIF\u56fe\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230(\u65e0\u8bba\u662f\u70b9\u8fd8\u662f\u9ed1\u7ebf)\uff0c\u5b83\u4eec\u90fd\u5728\u8bd5\u56fe\u8fbe\u5230\u629b\u7269\u7ebf\u7684\u6700\u4f4e\u70b9\u3002\u7279\u62c9\u65af\u514b\u8bf4\uff0c\u4f60\u771f\u6b63\u60f3\u8981\u7528\u795e\u7ecf\u7f51\u7edc\u505a\u7684\u662f\u627e\u51fa\u8fd9\u4e2a\u5927\u8bef\u5dee\u5e73\u9762(\u4e0b\u9762\u7684\u629b\u7269\u7ebf)\u4e0a\u7684\u6700\u4f4e\u70b9\uff0c\u5176\u4e2d\u6700\u4f4e\u70b9\u662f\u6307\u6700\u5c0f\u7684\u8bef\u5dee[2]\u3002\u8fd9\u610f\u5473\u7740\u60a8\u7684pred=input*\u6743\u91cd\u5b9e\u9645\u4e0a\u975e\u5e38\u63a5\u8fd1\u60a8\u60f3\u8981\u67e5\u770b\u7684\u503c\uff0c\u6216\u8005\u5728\u672c\u4f8b\u4e2d\u4e3atrue[2]\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5df2\u7ecf\u8fbe\u5230\u8fed\u4ee3\u4e2d\u7684\u6700\u4f4e\u9519\u8bef\u503c[2]\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5df2\u7ecf\u5230\u8fbe\u4e86\u8fed\u4ee3\u7684\u67d0\u4e2a\u70b9\uff0c\u5176\u4e2dpred=input*\u6743\u91cd\u5b9e\u9645\u4e0a\u975e\u5e38\u63a5\u8fd1\u60a8\u5e0c\u671b\u770b\u5230\u7684\u503c\uff0c\u6216\u8005\u5728\u672c\u4f8b\u4e2d\u4e3atrue\u3002\n\u4e0e\u5f80\u5e38\u4e00\u6837\uff0cjupyter\u7b14\u8bb0\u672c\u4e5f\u63d0\u4f9b\u4e86\u7b2c5\u7ae0_GeneralizingGradientDescent|Kaggle\u4f9b\u60a8\u53c2\u8003\u3002\n[1]\u201c\u4e00\u6b21\u5b66\u4e60\u591a\u4e2a\u6743\u91cd\uff1a\u63a8\u5e7f\u68af\u5ea6\u4e0b\u964d\u201d\uff0c\u5b89\u5fb7\u9c81\u00b7W\u00b7\u7279\u62c9\u65af\u514b\u8457\uff0c\u66fc\u5b81\u51fa\u7248\u793e\uff0c2019\u5e74\uff0c\u7b2c263\u9875\u3002\n[2]\u201c\u4e00\u6b21\u5b66\u4e60\u591a\u4e2a\u6743\u91cd\uff1a\u63a8\u5e7f\u68af\u5ea6\u4e0b\u964d\u201d\uff0c\u5b89\u5fb7\u9c81\u00b7W\u00b7\u7279\u62c9\u65af\u514b\u8457\uff0c\u66fc\u5b81\u51fa\u7248\u793e\uff0c2019\u5e74\uff0c\u7b2c267\u9875\u3002\n[3]\u6211\u662fNg\uff0cAndrew\u3002\u4e00\u5143\u7ebf\u6027\u56de\u5f52|\u68af\u5ea6\u4e0b\u964d-[Andrew Ng]&#34\uff1bYouTube\uff0c2020\u5e746\u670822\u65e5\u3002https://www.youtube.com/watch?v=F6GSRDoB-Cg&amp\uff1blist=PLLssT5z_DsK-h9vYZkQkYNWcItqhlRJLN&amp\uff1bindex=8", "note_en": "Note: As an Amazon Associate I earn from qualifying purchases. I get commissions for purchases made through links in this post. See a more full disclaimer  here\n Another Note: This series assumes you know some middle/high school maths (really just algebra) to get the most from the sections.\n  While the notes below are my thoughts on generalizing gradient descent, I am following a book that is in much more detail as I try to present a high-level of what I\u2019m learning. You can get that book  Grokking Deep Learning here at  Manning Publications for the ebook version which is cheaper or Amazon for the physical copy here  https://amzn.to/2YVTrmz\n  If Chapter 4 was looking to introduce you to gradient descent (GD), Chapter 5 is looking to generalize that concept in a few different ways: * Multiple input nodes with one output node * Freezing One Weight * One input node with multiple output nodes * Multiple input and output nodes\n   Since you have multiple input nodes that share one output node, the \u00a0 delta that was calculated needs to be distributed evenly back to each of the input nodes. Doing this will give you the appropriate  weight_delta for each node.\n Remember: The  weight_delta value is telling you how far your prediction (positive or negative) is from the actual value in relation to the respective input value. \u00a0Using math, the equation would look like the following: \u00a0 weight_delta = that specific input value * the delta calculated\u201d).\n After finding this  weight_delta value, you would then calculate the new  weight value with  weight -= alpha * that specific\u2019s input node\u2019s weight_delta. With this new  weight , your prediction for each of the input nodes would be the  pred = input node value * new weight value. You repeat this process over x iterations.\n  Freezing one weight basically allows you to see which of the input nodes has the biggest influence on your prediction value. Another way of saying it is how Trask puts it, &#34; a (or just an input node in your neural network) may be a powerful input with lots of predictive power, but if the network accidentally figures out how to predict accurately on the training data without it, then it will never learn to incorporate  a into its prediction&#34; [1].\n If you\u2019re wondering how you would freeze one weight, you would just make that weight\u2019s value  0 on every iteration. If you multiply anything by  0, you\u2019ll always get the value  0. Essentially, the weight value will always be the same as if you were\u201cfreezing\u201d the weight in a certain state\n   This time gradient descent is in reverse to the first subtopic. You have one input node having an influence on three different output nodes. Since three output nodes share one input node, each  delta value is going to tell you how far off you are from the original input node in the prediction.\n Equations to keep in mind: *  pred = one input node value * initial weight *  delta = pred - true\n Because of the three output nodes,  weight_delta is going to be a list of \u00a0 weight_delta = one input node value * list of weight_deltas from each output node\n Finally you would repeat the first bullet topic\u2019s approach to calculating the new  weight value to test out the new prediction\n The difference between the first subtopic and this subtopic is just which side of the neural network (input vs output) has one or more nodes. Then you do the necessary multiplication\n   This last subtopic is when you have multiple input and output nodes. If you understood the first and third subtopics (in these notes and the book), then this shouldn\u2019t be as hard to fathom.\n For each row of weight values and input values, you\u2019re going to find the  delta values.\n After you find the  delta values, you have to calculate each row\u2019s  delta_weight values for each output.\n Finally, you calculate the new weight values for each column in the row and assign those as the new weight values to use in the prediction. See code snippet below\n # this code snippet assumes that you have calculated your weight_deltas\t# this nested for loop is basically assigning new weights to each column in a row (i -&gt; each row in a matrix, j -&gt; each column in a row)\t# You go through all the columns (j) in row (i) and then you move to the next row and start at column 0\tfor i in range(len(weights)):\t\tfor j in range(len(weights[0])):\t\t\tweights[i][j] -= alpha * weight_deltas[i][j]\n    So in between this post&#39;s notebook and the previous post&#39;s notebook, there is a lot of talking about gradient descent in Deep Learning. However, I want to show a visual representation of what is actually going on with the math. I&#39;m not well suited in matplotlib (as of yet) so I believe the gifs below are good in showing/plotting what is going on mathematically.\n With both GIF&#39;s below you see that (whether it&#39;s the dots or the black line), both are trying to get to the lowest point in the parabola. Trask says, &#34;What you&#39;re really trying to do with the neural network is find the lowest point on this big error plane (the parabola&#39;s below), where the lowest point refers to the lowest  error&#34; [2]. This &#34;lowest error&#34; means you have reached a point in your iterations where your  pred = input * weights actually is very close to your values that you want to see or your  true in this case [2].\n     As always the jupyter notebook is provided  chap5_generalizingGradientDescent | Kaggle for you to follow along with.\n    [1] \u00a0\u201cLearning multiple weights at a time: Generalizing Gradient Descent\u201d Grokking Deep Learning, by Andrew W. Trask, Manning Publications, 2019, p. 263.\n [2] \u00a0\u201cLearning multiple weights at a time: Generalizing Gradient Descent\u201d Grokking Deep Learning, by Andrew W. Trask, Manning Publications, 2019, p. 267.\n [3] \u00a0Ng, Andrew. &#34;Linear Regression with One Variable | Gradient Descent - [Andrew Ng]&#34;  Youtube, 22 June 2020.  https://www.youtube.com/watch?v=F6GSRDoB-Cg&amp;list=PLLssT5z_DsK-h9vYZkQkYNWcItqhlRJLN&amp;index=8", "posttime": "2020-06-23 01:53:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u6df1\u5ea6,learning,\u8282\u70b9", "title": "\u4ece\u5934\u5f00\u59cb\u6df1\u5ea6\u5b66\u4e60\u7b2c3\u90e8\u5206\uff1a\u63a8\u5e7f\u68af\u5ea6\u4e0b\u964d", "title_en": "Deep Learning from Scratch Part 3: Generalizing Gradient Descent", "transed": 1, "url": "https://jdridgeway.com/deep-learning-from-scratch-generalizing-gradient-descent/", "via": "", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u6df1\u5ea6", "learning", "\u8282\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "894a006e9d59d13b9bd402ace348a5c3.jpg", "infoid": 1007674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u4e8e\u4f5c\u4e3a\u4e00\u540d\u5973\u6027\u521b\u59cb\u4eba\u548c\u9996\u5e2d\u6267\u884c\u5b98\u7684\u6587\u7ae0\u5e76\u4e0d\u591a\u3002\u6211\u66fe\u7ecf\u76f8\u4fe1\uff0c\u4f5c\u4e3a\u4e00\u540d\u521d\u521b\u516c\u53f8\u521b\u59cb\u4eba\uff0c\u6211\u7684\u65c5\u7a0b\u4e0e\u4efb\u4f55\u5176\u4ed6\u521b\u59cb\u4eba\u7684\u7ecf\u5386\u4e00\u6837\uff0c\u4e0d\u5206\u6027\u522b\uff0c\u56e0\u4e3a\u5b83\u662f\u5b64\u72ec\u548c\u8270\u96be\u7684\u3002\u5f53\u6211\u5728\u5efa\u7b51\u884c\u4e1a\u5de5\u4f5c\u65f6\uff0c\u6211\u4e5f\u662f\u8fd9\u6837\u8ba4\u4e3a\u7684\u3002\u5f53\u65f6\uff0c\u4efb\u4f55\u5173\u4e8e\u5b58\u5728\u5dee\u5f02\u7684\u95ee\u9898\u5bf9\u6211\u6765\u8bf4\u90fd\u662f\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\u4f8b\u5982\uff0c\u8fd9\u662f\u62112015\u5e74\u5728TechCrunch Disrupt\u7f51\u7ad9\u4e0a\u5c16\u523b\u7684\u56de\u7b54\uff1a\u201c\u5f53\u7279\u857e\u897f\u6bcf\u5929\u65e9\u4e0a\u9192\u6765\u65f6\uff0c\u5979\u4e0d\u4f1a\u60f3\u2018\u54e6\uff0c\u6211\u662f\u5973\u6027\u3002\u2019\u5f53\u6211\u65e9\u4e0a\u9192\u6765\u65f6\uff0c\u6211\u4f1a\u60f3\u2018\u54c7\uff0c\u6211\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u6211\u6700\u597d\u53bb\u6d17\u4e2a\u6fa1\uff0c\u559d\u676f\u5496\u5561\uff0c\u7136\u540e\u53bb\u5e72\u6d3b\u3002\u2018\u201c\u3002\n\u5c31\u80cc\u666f\u800c\u8a00\uff0c\u6211\u662f\u96be\u6c11\u7684\u5973\u513f\uff0c\u7b2c\u4e00\u4e2a\u51fa\u751f\u5728\u7f8e\u56fd\u3002\u6211\u5f88\u7406\u89e3\u81ea\u5df1\u8eab\u4efd\u7684\u5c11\u6570\u65cf\u88d4\u90e8\u5206\uff0c\u76ee\u7779\u4e86\u6211\u7684\u79fb\u6c11\u7236\u6bcd\u6beb\u65e0\u6028\u8a00\u5730\u62fc\u547d\u5de5\u4f5c\uff0c\u8fd9\u6837\u4ed6\u4eec\u7684\u5b69\u5b50\u624d\u80fd\u8fc7\u4e0a\u66f4\u597d\u7684\u751f\u6d3b\u3002\u6211\u4e3a\u80fd\u6210\u4e3a\u4ed6\u4eec\u7684\u5b69\u5b50\u800c\u611f\u5230\u81ea\u8c6a\u3002\u7136\u800c\uff0c\u6211\u8eab\u4efd\u4e2d\u7684\u5973\u6027\u90e8\u5206\u9690\u85cf\u5728\u6734\u7d20\u7684\u7537\u88c5\u4e4b\u4e0b\uff0c\u9690\u85cf\u5728\u575a\u5fcd\u7684\u4e3e\u6b62\u540e\u9762\u3002\u6211\u62c5\u5fc3\u6211\u4e0d\u4f1a\u88ab\u5f53\u505a\u9996\u5e2d\u6267\u884c\u5b98\u8ba4\u771f\u5bf9\u5f85\uff0c\u6211\u89c9\u5f97\u4efb\u4f55\u5bf9\u6211\u6027\u522b\u7684\u5173\u6ce8\u90fd\u662f\u4e0d\u597d\u7684\u3002\n\u7136\u540e\uff0c\u5f53\u6211\u57282017\u5e74\u6000\u5b55\u65f6\uff0c\u6211\u7684\u89c2\u70b9\u6539\u53d8\u4e86\u3002\u5973\u6027\u7684\u751f\u6d3b\u7ecf\u5386\u4e0e\u7537\u6027\u4e0d\u540c\uff0c\u4e0d\u627f\u8ba4\u8fd9\u4e00\u70b9\u5c06\u662f\u5bf9\u4eba\u7c7b\u7684\u4f24\u5bb3\u3002\n\u5c31\u5728\u6211\u5f97\u77e5\u81ea\u5df1\u6000\u5b55\u7684\u540c\u4e00\u5929\uff0c\u6211\u8fd8\u5f97\u77e5\u6211\u4eec\u7684\u4e00\u4f4d\u6280\u672f\u4e3b\u7ba1\u628a\u7b14\u8bb0\u672c\u7535\u8111\u5fd8\u5728\u529e\u516c\u684c\u4e0a\u4e86\uff0c\u4e0d\u4f1a\u518d\u56de\u6765\u5de5\u4f5c\u4e86\u3002\u6211\u8bb0\u5f97\u6211\u611f\u53d7\u5230\u7684\u6700\u9ad8\u6c34\u5e73\u7684\u5174\u594b\uff0c\u5728\u5c1d\u8bd5\u4e86\u8fd1\u4e00\u5e74\u540e\u7ec8\u4e8e\u6000\u5b55\u4e86\uff0c\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u6211\u5c31\u8fdb\u5165\u4e86\u62c5\u4efb\u9996\u5e2d\u6267\u884c\u5b98\u4ee5\u6765\u6700\u4f4e\u8c37\u7684\u65f6\u523b\u4e4b\u4e00\u3002\n\u6211\u60f3\u6211\u4e00\u5b9a\u662f\u6700\u5dee\u52b2\u7684\u9886\u5bfc\uff0c\u6709\u4eba\u5c31\u8fd9\u6837\u79bb\u5f00\u6211\u3002\u90a3\u5929\u665a\u4e0a\uff0c\u6211\u5455\u5410\u5230\u6c34\u69fd\u91cc\uff0c\u5728\u9ed1\u6697\u4e2d\u908b\u9062\u5730\u54ed\u4e86\u8d77\u6765\u3002\u6211\u4fe1\u4efb\u7684\u67d0\u4e2a\u4eba\u4ee5\u53ef\u4ee5\u60f3\u8c61\u5230\u7684\u6700\u81ea\u79c1\u7684\u65b9\u5f0f\u9003\u907f\u8d23\u4efb\uff0c\u6211\u7684\u8eab\u4f53\u4ee5\u5f3a\u70c8\u7684\u8eab\u4f53\u53cd\u5e94\u505a\u51fa\u53cd\u5e94\u3002\u6211\u60f3\u77e5\u9053\u7537\u6027CEO\u4f1a\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u53cd\u5e94\u3002\u6211\u5e0c\u671b\u6211\u77e5\u9053\u3002\u5230\u4e86\u65e9\u4e0a\uff0c\u6211\u5f00\u59cb\u5bfb\u627e\u9ad8\u7ba1\uff0c\u586b\u8865\u4e86\u90e8\u95e8\u9886\u5bfc\u7684\u7a7a\u7f3a\uff0c\u5e76\u5411\u56e2\u961f\u5ba3\u5e03\u4e86\u6211\u7684\u51b3\u5b9a\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u5b66\u5230\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u4e0d\u8981\u6d6a\u8d39\u6e4d\u6d41\u3002\u4f5c\u4e3a\u6211\u4eec\u9ad8\u7ba1\u7a81\u7136\u79bb\u804c\u8fd9\u4e00\u4ee4\u4eba\u9707\u60ca\u7684\u5ba3\u5e03\u7684\u4e00\u90e8\u5206\uff0c\u6211\u8fd8\u505a\u51fa\u4e86\u4e00\u7cfb\u5217\u6211\u4ee5\u524d\u6ca1\u6709\u52c7\u6c14\u505a\u51fa\u7684\u51b3\u5b9a\uff0c\u5e76\u7acb\u5373\u63a8\u51fa\u4e86\u6240\u6709\u4e1c\u897f\u3002\u5728\u51e0\u5468\u7684\u65f6\u95f4\u91cc\uff0c\u6709\u4e86\u91cd\u5927\u7684\u4eba\u5458\u548c\u4ea7\u54c1\u8def\u7ebf\u56fe\u7684\u53d8\u5316\uff0c\u9884\u7b97\u548c\u65e5\u7a0b\u7684\u524a\u51cf\u3002\u6211\u4eec\u7684\u56e2\u961f\u6709\u5f88\u591a\u95ee\u9898\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u5bf9\u6211\u4eec\u65b0\u7684\u7814\u53d1\u65b9\u5411\u7684\u8bb8\u591a\u60c5\u7eea\u548c\u610f\u89c1\u3002\u4e00\u4e9b\u56e2\u961f\u6210\u5458\uff0c\u5305\u62ec\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\uff0c\u8f9e\u804c\u4e86\u3002\n\u60c5\u7eea\u8fc7\u5c71\u8f66\u4f3c\u4e4e\u662f\u521d\u521b\u516c\u53f8\u7684\u89c4\u5f8b\uff0c\u6211\u76f8\u4fe1\u7ba1\u7406\u6211\u4eec\u81ea\u5df1\u7684\u60c5\u7eea\u662f\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u6211\u53d1\u73b0\uff0c\u6211\u65e0\u6cd5\u963b\u6b62\u81ea\u5df1\u6210\u4e3a\u4eba\u7c7b\uff0c\u4f46\u6211\u53ef\u4ee5\u7ec3\u4e60\u51cf\u5c11\u6124\u6012\u3001\u6050\u60e7\u548c\u60b2\u4f24\u7b49\u8d1f\u9762\u60c5\u7eea\u7684\u6301\u7eed\u65f6\u95f4\u3002\n\u5f53\u6211\u7684\u5c0f\u809a\u5b50\u5f00\u59cb\u663e\u9732\u65f6\uff0c\u6211\u544a\u8bc9\u6211\u7684\u9886\u5bfc\u56e2\u961f\u6211\u4eec\u6000\u5b55\u4e86\uff0c\u5230\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u516c\u53f8\u91cc\u7684\u5927\u591a\u6570\u4eba\u4e5f\u90fd\u77e5\u9053\u4e86\u3002\u521b\u4e1a\u516c\u53f8\u662f\u6ca1\u6709\u79d8\u5bc6\u7684\u3002\u7b2c\u4e8c\u5929\uff0c\u4e00\u4f4d\u540c\u4e8b\u544a\u8bc9\u6211\uff0c\u5979\u77e5\u9053\u6211\u6000\u5b55\u4e86\uff0c\u56e0\u4e3a\u5979\u770b\u5230\u6211\u5403\u4e86\u4e24\u4e2a\u767e\u5409\u997c\u3002\u90a3\u6b21\u8c08\u8bdd\u8ba9\u6211\u610f\u8bc6\u5230\uff0c\u56e2\u961f\u6210\u5458\u603b\u662f\u5728\u5173\u6ce8\u4ed6\u4eec\u7684\u521b\u59cb\u4eba\u548c\u9886\u5bfc\u8005\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u786e\u5b9e\u76f8\u4fe1\u6211\u7684\u540c\u4e8b\u662f\u771f\u5fc3\u5173\u5fc3\u6211\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u76f8\u4fe1\u4ed6\u4eec\u662f\u6839\u636e\u6211\u4e00\u6574\u5929\u7684\u884c\u52a8\u6765\u8bc4\u4f30\u516c\u53f8\u505a\u5f97\u6709\u591a\u597d\uff0c\u8fd9\u662f\u8003\u8651\u5230\u4ed6\u4eec\u662f\u5426\u5e94\u8be5\u63a5\u542c\u6240\u6709\u62db\u8058\u4eba\u5458\u7684\u7535\u8bdd\u3002\n\u5728\u6211\u9884\u4ea7\u671f\u7684\u4e09\u4e2a\u6708\u524d\uff0c\u6211\u4ece\u4e00\u5bb6\u5927\u578b\u7ade\u4e89\u5bf9\u624b\u7684\u9996\u5e2d\u6267\u884c\u5b98\u90a3\u91cc\u6536\u5230\u4e86\u4e00\u6761\u6d88\u606f\uff0c\u4ed6\u6709\u8db3\u591f\u7684\u73b0\u91d1\u6536\u8d2d\u6211\u4eec\u3002\u6211\u4eec\u8fd9\u4e2a\u884c\u4e1a\u6709\u5e76\u8d2d\u6d3b\u52a8\uff0c\u6211\u4e5f\u5e0c\u671b\u6211\u4eec\u7684\u521d\u521b\u4f01\u4e1a\u53ef\u4ee5\u9009\u62e9\u88ab\u6536\u8d2d\u3002\u6211\u5c06\u5411\u4ed6\u4eec\u7684\u51e0\u4f4d\u9996\u5e2d\u6267\u884c\u5b98\u505a\u62a5\u544a(\u8fd9\u662f\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u4ed6\u4eec\u4e0d\u4ec5\u4ec5\u662f\u5728\u8e22\u8f6e\u80ce)\u3002\u5728\u6211\u81ea\u5df1\u7684\u529e\u516c\u5ba4\u91cc\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u5728\u610f\u8fc7\u6211\u7684\u56e2\u961f\u5728\u8c08\u8bdd\u4e2d\u6709\u65f6\u4f1a\u8f6c\u79fb\u5230\u6211\u7bee\u7403\u5f62\u72b6\u7684\u809a\u5b50\u4e0a\uff0c\u4f46\u5728\u8fd9\u6b21\u6f14\u8bb2\u4e2d\uff0c\u5f53\u8fd9\u4e9b\u4e0e\u6211\u8c08\u5224\u7684\u964c\u751f\u4eba\u770b\u7740\u6211\u7684\u809a\u5b50\u65f6\uff0c\u6211\u786e\u5b9e\u611f\u5230\u607c\u706b\u3002\u4f46\u90a3\u4e3b\u8981\u662f\u6211\u81ea\u5df1\u7684\u4e0d\u5b89\u5168\u611f\uff0c\u6211\u4f1a\u5b66\u7740\u53bb\u5904\u7406\u3002\n\u5728\u5206\u5a29\u524d\u4e24\u4e2a\u6708\uff0c\u6211\u4eec\u6536\u5230\u4e86\u4e00\u4efd\u4ee4\u4eba\u5931\u671b\u7684\u5e76\u8d2d\u6761\u6b3e\u8bf4\u660e\u4e66\uff0c\u6240\u4ee5\u6211\u4eec\u8c22\u7edd\u4e86\u3002\u516c\u53f8\u91cc\u6709\u66f4\u591a\u6211\u4e0d\u80fd\u518d\u5ffd\u89c6\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u809a\u5b50\u91cc\u6709\u4e2a\u5b69\u5b50\uff0c\u6211\u65e0\u6cd5\u7528\u793e\u4ea4\u6bd2\u54c1\u6765\u9003\u907f\u538b\u529b\uff0c\u5728\u8fd9\u4e00\u5207\u4e2d\u6211\u90fd\u662f\u51b0\u51b7\u6e05\u9192\u7684\u3002\u6211\u9700\u8981\u518d\u6b21\u66f4\u6362\u9886\u5bfc\u5c42\u3002\u6211\u4eec\u7684\u4e00\u4e9b\u8463\u4e8b\u544a\u8bc9\u6211\uff1a\u201c\u6211\u4eec\u652f\u6301\u60a8\u7684\u51b3\u5b9a\uff0c\u4f46\u6211\u4eec\u8fd8\u662f\u7b49\u60a8\u4f11\u5b8c\u4ea7\u5047\u56de\u6765\u518d\u8bf4\u5427\u3002\u201d\u867d\u7136\u6211\u7406\u89e3\u4ed6\u4eec\u7684\u5efa\u8bae\u7684\u5408\u7406\u6027\uff0c\u4f46\u5728\u90a3\u4e00\u523b\u6ca1\u6709\u5f97\u5230\u652f\u6301\uff0c\u6211\u611f\u5230\u53d1\u6296\u7684\u6124\u6012\u3002\u6211\u4e5f\u5f00\u59cb\u8ba8\u538c\u8fd9\u53e5\u8bdd--\u201c\u53e3\u81ed\u603b\u6bd4\u6ca1\u6709\u597d\u201d\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e2a\u7cdf\u7cd5\u7684\u5efa\u8bae\u3002\u6211\u5728\u5de5\u4f5c\u4e2d\u6700\u5927\u7684\u9057\u61be\u662f\u8ba9\u9519\u8bef\u7684\u4eba\u5728\u516c\u53f8\u5446\u5f97\u592a\u4e45\u3002\u6211\u5fc3\u91cc\u77e5\u9053\uff0c\u8fd9\u5e76\u4e0d\u662f\u6bcf\u6b21\u90fd\u80fd\u594f\u6548\uff0c\u6211\u751a\u81f3\u5bb3\u6015\u4e0e\u4ed6\u4eec\u8fdb\u884c\u6beb\u65e0\u6210\u6548\u76841-1\u7ea6\u4f1a\uff0c\u4f46\u6211\u4f1a\u60f3\u51fa\u8fd9\u6837\u7684\u501f\u53e3--\u201c\u6211\u77e5\u9053\u4ed6\u4eec\u4e0d\u80fd\u7559\u4e0b\u6765\uff0c\u4f46\u6211\u73b0\u5728\u538b\u529b\u592a\u5927\u4e86\u3002\u201d\u4e8b\u5b9e\u662f\uff0c\u6211\u96c7\u9519\u4e86\u4eba\uff0c\u6211\u6ca1\u80fd\u5e2e\u52a9\u4ed6\u4eec\u6210\u957f\u4e3a\u4e00\u540d\u9886\u5bfc\u8005\uff0c\u6211\u5bf9\u6211\u7684\u56e2\u961f\u548c\u516c\u53f8\u6709\u8d23\u4efb\u7ea0\u6b63\u6211\u7684\u9519\u8bef\u3002\n\u5728\u6211\u4eec\u7b2c\u4e00\u6b21\u7528\u6237\u5927\u4f1a\u7684\u540c\u4e00\u5929\u665a\u4e0a\uff0c\u6211\u5c31\u5f00\u59cb\u5206\u5a29\u4e86\u3002\u5728\u4f1a\u8bae\u53ec\u5f00\u524d\u7684\u51e0\u5468\u91cc\uff0c\u770b\u7740\u6211\u4eec\u6574\u4e2a\u516c\u53f8\u6df1\u591c\u70b9\u71c3\u8721\u70db\uff0c\u4e3a\u6211\u4eec\u7684\u65b0\u4ea7\u54c1\u63ed\u5e55\u505a\u51c6\u5907\uff0c\u6211\u60f3\u77e5\u9053\u6709\u591a\u5c11\u7537\u6027\u9996\u5e2d\u6267\u884c\u5b98\u4f1a\u4e3a\u4e86\u5b69\u5b50\u7684\u51fa\u751f\u800c\u8df3\u8fc7\u4ed6\u4eec\u7684\u4f1a\u8bae\uff1f\u6211\u60f3\u5927\u591a\u6570\u4eba\u90fd\u4f1a\u3002\u6211\u4e0d\u65ad\u5730\u5bf9\u81ea\u5df1\u8bf4\uff0c\u5982\u679c\u6211\u6ca1\u6709\u6000\u5b55\uff0c\u6211\u4f1a\u4e0d\u4f1a\u53bb\u90a3\u91cc\u662f\u6beb\u65e0\u7591\u95ee\u7684\uff0c\u6240\u4ee5\u6211\u4e00\u5b9a\u4f1a\u53bb\u90a3\u91cc\u3002\u5f3a\u8feb\u81ea\u5df1\u70ab\u8000\u62119\u4e2a\u6708\u7684\u6000\u5b55\uff0c\u53d1\u8868\u4e3b\u9898\u6f14\u8bb2\uff0c\u652f\u6301\u6211\u4eec\u7684\u56e2\u961f\uff0c\u4f5c\u4e3a\u4e3b\u6301\u4eba\u5728\u5927\u5385\u91cc\u5de5\u4f5c\uff0c\u8fd9\u662f\u6211\u611f\u89c9\u81ea\u5df1\u50cf\u4e00\u4e2a\u5973\u8d85\u4eba\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u6469\u64e6\u6211\u81ea\u5df1\u7684\u81ea\u6211\u3002\u90a3\u5929\u665a\u4e0a8\u70b9\u5de6\u53f3\u6211\u56de\u5230\u5bb6\uff0c\u6211\u7684\u7f8a\u6c34\u7acb\u523b\u7834\u4e86\u300232\u5c0f\u65f6\u540e\uff0c\u6211\u4f1a\u542c\u5230\u513f\u5b50\u7684\u7b2c\u4e00\u58f0\u54ed\u58f0\u3002\n\u6ca1\u4eba\u544a\u8bc9\u6211\u6bcd\u4e73\u5582\u517b\u6709\u591a\u96be\u3002\u5c31\u50cf\u53d1\u6761\u4e00\u6837\uff0c\u6bcf\u96942-3\u4e2a\u5c0f\u65f6\uff0c\u4e00\u5f20\u5c0f\u5634\u5df4\u5c31\u4f1a\u5361\u5728\u6211\u8eab\u4e0a20\u5206\u949f\uff0c\u5bfc\u81f4\u4e73\u5934\u53d8\u5f97\u7c97\u7cd9\u548c\u9c9c\u8840\u6dcb\u6f13\u3002\u6bcd\u4e73\u5582\u517b\u6240\u9700\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u5e76\u4e0d\u4ec5\u9650\u4e8e\u6b64\u3002\u4f60\u8fd8\u9700\u8981\u817e\u51fa\u65f6\u95f4\uff0c\u6bcf\u5929\u591a\u6444\u5165500\u5361\u8def\u91cc\u7684\u70ed\u91cf\uff0c\u62bd\u51fa\u65f6\u95f4\uff0c\u7b49\u5f85\u4e73\u6c41\u6162\u6162\u4ece\u6bcf\u4e2a\u4e73\u623f\u6392\u51fa\uff0c\u7136\u540e\u518d\u62bd\u51fa\u65f6\u95f4\u5f7b\u5e95\u6e05\u6d01\u6bcf\u4e00\u5757\u62bd\u51fa\u7684\u4e73\u6c41\u3002\n\u5e76\u8d2d\u4ea4\u6613\u5931\u8d25\u540e\uff0c\u6211\u62c5\u5fc3\u6211\u4eec\u4e24\u4e2a\u6700\u5927\u7684\u7ade\u4e89\u5bf9\u624b\u4f1a\u8d70\u5230\u4e00\u8d77\u3002\u6211\u51b3\u5fc3\u5c3d\u5feb\u56de\u5230\u5de5\u4f5c\u5c97\u4f4d\uff0c\u5e76\u7b79\u96c6\u4e00\u7b14\u6218\u4e89\u57fa\u91d1\u8fdb\u884c\u53cd\u51fb\u3002\u7136\u800c\uff0c\u4ea7\u540e\u4ec54\u5468\uff0c\u6211\u4ecd\u5728\u5eb7\u590d\u4e2d\u3002\u6211\u6240\u8bf4\u7684\u5eb7\u590d\u662f\u6307\u6211\u8fd8\u5728\u6d41\u8840\uff0c\u56e0\u4e3a\u6211\u7684\u9634\u9053\u91cc\u6709\u51e0\u5904\u6495\u88c2\uff0c\u662f\u56e0\u4e3a\u6211\u628a\u4e00\u4e2a\u5b69\u5b50\u63a8\u51fa\u6765\u4e86\u3002\u5373\u4f7f\u662f\u50cf\u6e05\u7a7a\u6211\u7684\u8180\u80f1\u8fd9\u6837\u81ea\u7136\u7684\u4e8b\u60c5\u4e5f\u611f\u89c9\u5f88\u865a\u5f31\u3002\u5f53\u6211\u7684\u513f\u5b506\u5468\u5927\u7684\u65f6\u5019\uff0c\u6211\u628a\u4ed6\u4ea4\u7ed9\u4e86\u4ed6\u7684\u4fdd\u59c6(\u771f\u7684\u662f\u4e00\u4e2a\u7ecf\u8fc7\u5ba1\u67e5\u7684\u964c\u751f\u4eba)\uff0c\u7136\u540e\u53c8\u56de\u53bb\u5de5\u4f5c\u4e86\u3002\u5f53\u6211\u5f00\u8f66\u79bb\u5f00\u65f6\uff0c\u6211\u64e6\u53bb\u4e86\u773c\u6cea\uff0c\u786e\u4fe1\u516c\u53f8\u6bd4\u6211\u513f\u5b50\u66f4\u9700\u8981\u6211\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u518d\u7b49\u51e0\u4e2a\u661f\u671f\u7b49\u6211\u56de\u6765\u4e5f\u4e0d\u4f1a\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u76f4\u5230\u4eca\u5929\uff0c\u6211\u95ee\u81ea\u5df1\uff0c\u4e3a\u4ec0\u4e48\u6211\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u5c31\u5306\u5fd9\u56de\u53bb\u5de5\u4f5c\u3002\u6211\u60f3\u6211\u5f53\u65f6\u5f88\u5bb3\u6015\u3002\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u751f\u610f\u6709\u9ebb\u70e6\u3002\u6211\u4eec\u5728\u94f6\u884c\u5de5\u4f5c\u4e86\u4e24\u5e74\uff0c\u6211\u4eec\u7684\u4e34\u65f6\u9996\u5e2d\u6267\u884c\u5b98(\u6211\u4eec\u7684\u9996\u5e2d\u8d22\u52a1\u5b98)\u548c\u56e2\u961f\u8fd0\u8425\u5f97\u5f88\u597d\u3002\u6211\u60f3\u6211\u5bb3\u6015\u522b\u4eba\u4f1a\u8ba4\u4e3a\u6211\u662f\u4e00\u4f4d\u65b0\u7684\u6bcd\u4eb2\u548cCEO\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u81ea\u5df1\u7684\u4e0d\u5b89\u5168\u611f\uff0c\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u6839\u6df1\u8482\u56fa\u7684\u793e\u4f1a\u89c4\u8303\u3002\u6211\u5f3a\u8feb\u81ea\u5df1\u8bc1\u660e\u6211\u4e00\u5982\u65e2\u5f80\u5730\u81f4\u529b\u4e8ePlanGrid\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u4e24\u4e2a\u6708\u91cc\uff0c\u6211\u4f1a\u5f00\u8f66\u53bb\u98ce\u9669\u6295\u8d44\u7684\u529e\u516c\u5ba4\uff0c\u7136\u540e\u53bb\u6c99\u5c71\u8def\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u6218\u4e89\u8d44\u91d1\u3002\u5c3d\u7ba1\u65e5\u7a0b\u6392\u5f97\u6ee1\u6ee1\u7684\uff0c\u800c\u4e14\u7ecf\u5e38\u51fa\u5dee\uff0c\u6211\u8fd8\u662f\u9700\u8981\u6324\u5976\u3002\u4f46\u6211\u4ece\u672a\u8981\u6c42\u4f7f\u7528\u4efb\u4f55\u6295\u8d44\u8005\u7684\u6bcd\u4eb2\u4f11\u606f\u5ba4\u3002\u5728\u67d0\u4e9b\u65e5\u5b50\u91cc\uff0c\u6211\u4f1a\u628a\u8f66\u505c\u5728\u5e15\u6d1b\u963f\u5c14\u6258\u4e00\u6761\u660f\u660f\u6b32\u7761\u7684\u8857\u9053\u4e0a\uff0c\u5728\u522b\u4eba\u6f02\u4eae\u7684\u623f\u5b50\u524d\u7528\u7845\u80f6\u624b\u6cf5\u62bd\u5976\uff0c\u7528iPhone\u9605\u8bfb\u4e0b\u4e00\u6b21\u4f1a\u8bae\u4e0a\u6295\u8d44\u8005\u7684\u7b80\u4ecb\u3002\u5076\u5c14\u4f1a\u6709\u4eba\u5f00\u8f66\u8fc7\u6765\uff0c\u6216\u8005\u4e00\u4e2a\u6162\u8dd1\u8005\u4ece\u6211\u8eab\u8fb9\u8dd1\u8fc7\uff0c\u6211\u4f1a\u89c9\u5f97\u975e\u5e38\u4e22\u8138\u3002\n\u6211\u4e00\u76f4\u8ba8\u538c\u7b79\u6b3e\u3002\u8fd9\u662f\u4e3a\u4e86\u94b1\u548c\u5fae\u7b11\u7684\u964c\u751f\u4eba\u628a\u6211\u4eec\u7684\u5fc3\u548c\u7075\u9b42\u653e\u5728\u4e00\u4e2a\u76d8\u5b50\u91cc\n\u6211\u8ba4\u4e3a\u6bcf\u4e2a\u884c\u4e1a\u90fd\u6709\u574f\u4eba\uff0c\u4f46\u5728\u90a3\u4e9b\u63a7\u5236\u7740\u8fd9\u4e48\u591a\u91d1\u94b1\u548c\u6743\u529b\u7684\u884c\u4e1a\u91cc\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c24\u5176\u666e\u904d\u3002\u6211\u4eec\u8bd5\u56fe\u5c06\u6240\u6709\u7b79\u6b3e\u7684\u65f6\u95f4\u5b89\u6392\u5728\u6211\u4eec\u5904\u4e8e\u4f18\u52bf\u5730\u4f4d\u3001\u6536\u5165\u589e\u957f\u8bf1\u4eba\u3001\u94f6\u884c\u5b58\u6b3e\u8db3\u591f\u591a\u3001\u53ef\u4ee5\u9000\u51fa\u4efb\u4f55\u4ea4\u6613\u6216\u4e0d\u4ea4\u6613\u7684\u65f6\u5019\u3002\u6211\u8fd8\u4e0e\u6211\u7684\u8054\u5408\u521b\u59cb\u4eba\u4e00\u8d77\u52df\u96c6\u8d44\u91d1\uff0c\u540e\u6765\u53c8\u4e0e\u6211\u7684\u9996\u5e2d\u8d22\u52a1\u5b98(CFO)\u8fdb\u884c\u4e86\u51e0\u8f6e\u52df\u96c6\u3002\u6211\u8ba4\u4e3a\u6355\u98df\u8005\u5728\u72ec\u5904\u65f6\u66f4\u5bb9\u6613\u7784\u51c6\u730e\u7269\u3002\u6211\u4ece\u6765\u4e0d\u662f\u4e00\u4e2a\u4eba\u3002\n\u5728\u6211\u4eec\u7684C\u7cfb\u5217\u7b79\u6b3e\u6d3b\u52a8\u906d\u5230\u516d\u4e2a\u201c\u4e0d\u201d\u4e4b\u540e\uff0c\u5728\u6211\u4eec\u8ba1\u5212\u505c\u6b62\u6240\u6709\u7b79\u6b3e\u6d3b\u52a8\u7684\u524d\u51e0\u5468\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u8f6e\u878d\u8d44\u3002\u7136\u540e\uff0c\u6211\u4eec\u6536\u5230\u4e86\u4e00\u4efd\u4fee\u6539\u540e\u7684\u5e76\u8d2d\u8981\u7ea6\uff0c\u8981\u4ee5\u9ad8\u5f97\u591a\u7684\u4ef7\u683c\u6536\u8d2d\u6211\u4eec\u7684\u516c\u53f8\u3002\n\u4f5c\u4e3a\u521b\u59cb\u4eba\u548c\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u662f\u6700\u5927\u5316\u516c\u53f8\u7684\u6240\u6709\u9009\u62e9\uff0c\u5e76\u4e3a\u6211\u4eec\u7684\u56e2\u961f\u548c\u5ba2\u6237\u9009\u62e9\u6700\u4f73\u7684\u524d\u8fdb\u9053\u8def\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6211\u5e0c\u671b\u6c38\u8fdc\u62c5\u4efbPlanGrid\u7684\u9996\u5e2d\u6267\u884c\u5b98\u3002\u6211\u5728PlanGrid\u957f\u5927\u3002\u5728PlanGrid\u671f\u95f4\uff0c\u6211\u773c\u7741\u7741\u5730\u770b\u7740\u6211\u7684\u4e00\u4f4d\u8054\u5408\u521b\u59cb\u4eba\u6b7b\u4e8e\u764c\u75c7\u3002\u6211\u5ac1\u7ed9\u4e86\u6211\u7684\u53e6\u4e00\u4f4d\u8054\u5408\u521b\u59cb\u4eba\uff0c\u6211\u4eec\u4e00\u8d77\u505a\u4e86\u7236\u6bcd\u3002\u6211\u7684\u81ea\u6211\u4ef7\u503c\u5b8c\u5168\u4e0e\u516c\u53f8\u606f\u606f\u76f8\u5173\u3002PlanGrid\u7ed9\u4e86\u6211\u76ee\u6807\u548c\u6210\u5c31\u611f\u3002\u7136\u800c\uff0c\u57282018\u5e74\u79cb\u5b63\uff0c\u8003\u8651\u5230\u7ade\u4e89\u548c\u5e02\u573a\u98ce\u9669\uff0c\u4ee5\u53ca\u6211\u4eec\u81ea\u5df1\u7684\u5185\u90e8\u6311\u6218\uff0c\u5bf9\u6211\u4eec\u516c\u53f8\u6765\u8bf4\uff0c\u6700\u597d\u7684\u9009\u62e9\u662f\u4ee5\u8d85\u8fc710\u500d\u7684\u6536\u5165\u5c06\u6211\u4eec\u7684\u516c\u53f8\u51fa\u552e\u7ed9\u5177\u6709\u660e\u663e\u6280\u672f\u534f\u540c\u6548\u5e94\u7684\u73b0\u4efb\u516c\u53f8\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8fd9\u4e48\u505a\u4e86\u3002\u6211\u4eec\u5ba3\u5e03\u51fa\u552e\u7ed9\u6211\u4eec\u56e2\u961f\u7684\u90a3\u4e00\u5929\u662f\u6211\u6709\u751f\u4ee5\u6765\u6700\u5bb3\u6015\u7684\u4e00\u5929\u3002\u6211\u62c5\u5fc3\u6211\u5356\u4e1c\u897f\u8ba9\u6211\u4eec\u961f\u5931\u671b\u4e86\uff0c\u4f46\u4ed6\u4eec\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u3002\u90a3\u5929\u665a\u4e0a\uff0c\u6211\u4eec\u4e00\u8d77\u5e86\u795d\u3002\n\u6211\u4e0e\u6536\u8d2d\u65b9\u7684\u5408\u540c\u5b9a\u4e3a18\u4e2a\u6708\u3002\u8be5\u8ba1\u5212\u5305\u62ec\u5c06PlanGrid\u4f5c\u4e3a\u4e00\u5bb6\u72ec\u7acb\u7684\u516c\u53f8\u8fd0\u8425(\u6216\u5c1d\u8bd5\u8fd0\u8425)12\u4e2a\u6708\uff0c\u4ee5\u53ca\u5b8c\u5168\u6574\u5408\u5230\u6bcd\u8239\u4e2d\u76846\u4e2a\u6708\u3002\u6240\u6709\u8ba9\u6211\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u521b\u59cb\u4eba\u7684\u4e1c\u897f\uff0c\u90fd\u8ba9\u6211\u5728\u4e00\u5bb6\u4e0a\u5e02\u516c\u53f8\u6210\u4e3a\u4e00\u540d\u7cdf\u7cd5\u7684\u5458\u5de5\u3002\u6211\u4e60\u60ef\u4e86\u5728\u9886\u5bfcPlanGrid\u65b9\u9762\u62e5\u6709\u5b8c\u5168\u7684\u81ea\u4e3b\u6743\u3002\u4f5c\u4e3a\u4e00\u5bb6\u521d\u521b\u516c\u53f8\uff0c\u6211\u4eec\u4f1a\u8fc5\u901f\u505a\u51fa\u6539\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b63\u5ea6\u627f\u62c5\u51e0\u5341\u4e2a\u5c0f\u8d4c\u6ce8\u548c\u98ce\u9669\u3002\u6839\u636e\u8fd9\u4e9b\u7ed3\u679c\uff0c\u6211\u4eec\u5c06\u653e\u5f03\u6216\u5728\u6b63\u5728\u53d1\u6325\u4f5c\u7528\u7684\u65b9\u5411\u4e0a\u8fdb\u884c\u66f4\u5927\u7684\u62bc\u6ce8\u3002\u5728\u4e0a\u5e02\u516c\u53f8\uff0c\u627f\u62c5\u98ce\u9669\u8981\u6709\u9650\u5f97\u591a\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4ed6\u4eec\u5fc5\u987b\u6bcf3\u4e2a\u6708\u5411\u534e\u5c14\u8857\u62a5\u544a\u4e00\u6b21\u3002\u5728\u5927\u516c\u53f8\u4e5f\u6709\u66f4\u591a\u7684\u4f9d\u8d56\uff0c\u611f\u89c9\u5c31\u50cf\u6ca1\u6709\u5176\u4ed6\u4e94\u4e2a\u90e8\u95e8\u8d1f\u8d23\u4eba\u7684\u8bb8\u53ef\uff0c\u6211\u4e0d\u80fd\u6253\u55b7\u568f\u3002\u65b0\u7684\u9886\u5bfc\u5c42\u5f88\u597d\u5730\u7167\u987e\u4e86\u6211\u4eec\u7684\u56e2\u961f\u548c\u4ea7\u54c1\uff0c\u4eba\u4eec\u5bf9\u6211\u5f88\u597d\uff0c\u4f46\u5f88\u660e\u663e\u6211\u5728\u90a3\u91cc\u4e0d\u5f00\u5fc3\u3002\n\u6536\u8d2d\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u7b2c\u4e8c\u6b21\u6000\u5b55\u3002\u5728\u6211\u53d1\u73b0\u540e\u4e0d\u4e45\uff0c\u6211\u4e5f\u6d41\u4ea7\u4e86\u3002\u5f53\u6211\u548c\u6211\u7684\u56e2\u961f\u5728\u4e00\u8d77\u65f6\uff0c\u6211\u611f\u89c9\u5230\u5b83\u4ece\u6211\u8eab\u4e0a\u6e9c\u8d70\u4e86\u3002\u6211\u53bb\u4e86\u6d17\u624b\u95f4\uff0c\u6211\u6e05\u695a\u5730\u77e5\u9053\u90a3\u662f\u4ec0\u4e48\u3002\u6211\u8d70\u56de\u4eba\u7fa4\u4e2d\uff0c\u5047\u88c5\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u5f88\u4f24\u5fc3\uff0c\u51e0\u4e4e\u6bcf\u5c0f\u65f6\u90fd\u5f3a\u5fcd\u7740\u6cea\u6c34\u3002\n\u5973\u6027\u7684\u7ecf\u5386\u53ef\u80fd\u771f\u7684\u5f88\u8270\u96be-\u6211\u7ecf\u5386\u4e86\u4e0d\u5b55\u3001\u6000\u5b55\u3001\u5206\u5a29\u3001\u6d41\u4ea7\uff0c\u540c\u65f6\u8bd5\u56fe\u5e73\u8861\u6210\u4e3a\u4e00\u4e2a\u597d\u7684\u9886\u5bfc\u8005\u3001\u597d\u7684\u6bcd\u4eb2\u548c\u597d\u7684\u4f34\u4fa3\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u89c9\u5f97\u6211\u5fc5\u987b\u6210\u4e3a\u6211\u6240\u8ba4\u4e3a\u7684\u4f18\u79c0\u7537\u6027CEO\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u4f1a\u53d7\u5230\u4e0d\u540c\u7684\u8bc4\u5224\u6216\u5bf9\u5f85\u3002\u6211\u9700\u8981\u5f88\u591a\u5e74\u624d\u80fd\u610f\u8bc6\u5230\u6211\u6709\u591a\u4e48\u5984\u60f3\u3002\u901a\u8fc7\u8bda\u5b9e\u5730\u9762\u5bf9\u81ea\u5df1\uff0c\u6211\u6210\u4e3a\u4e86\u4e00\u540d\u66f4\u597d\u3001\u66f4\u5feb\u4e50\u7684\u9886\u5bfc\u8005\uff0c\u5373\u4f7f\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u65f6\u5019\u90fd\u4f1a\u611f\u5230\u5185\u5fc3\u8df3\u52a8\u7740\u4e0d\u9002\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u7684\u5973\u6027\u8eab\u4efd\u5bf9\u6211\u6765\u8bf4\u6bd4\u6211\u610f\u8bc6\u5230\u7684\u8981\u91cd\u8981\u5f97\u591a\u3002\n\u79d1\u6280\u884c\u4e1a\u8981\u5b9e\u73b0\u5de5\u4f5c\u573a\u6240\u7684\u6027\u522b\u5e73\u7b49\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\u6539\u53d8\u7684\u7b2c\u4e00\u6b65\u662f\u627f\u8ba4\u4e8b\u60c5\u9700\u8981\u6539\u53d8\u3002\n\u6211\u4e0d\u518d\u53d7\u96c7\u4e8e\u6536\u8d2d\u6211\u4eec\u7684\u516c\u53f8\u3002\u6211\u5728LinkedIn\u4e0a\u53d1\u5e03\u6d88\u606f\u8bf4\uff0c\u6211\u7684\u624b\u8868\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002\u6211\u6709\u66f4\u591a\u7684\u65f6\u95f4\u6765\u9605\u8bfb\u5173\u4e8e\u6211\u4eec\u751f\u6d3b\u7684\u4e16\u754c\u548c\u8c01\u5728\u63a7\u5236\u5b83\u3002\u5f53\u6211\u5ba1\u89c6\u516c\u53f8\u548c\u56fd\u5bb6\u4e4b\u95f4\u7684\u9886\u5bfc\u529b\u65f6\uff0c\u770b\u8d77\u6765\u4e3b\u8981\u662f\u7537\u6027\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u4e16\u754c\u6b63\u5728\u9519\u8fc7\u8bb8\u591a\u52e4\u594b\u3001\u81ea\u6211\u8ba4\u540c\u7684\u5973\u6027\uff0c\u5979\u4eec\u53ef\u4ee5\u6539\u5584\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u7684\u95ee\u9898\u662f\u538b\u5012\u6027\u7684\u548c\u5de8\u5927\u7684\u3002\u5728\u5927\u6d41\u884c\u548c\u592a\u591a\u5371\u673a\u4e2d\uff0c\u6211\u4eec\u7684\u5973\u6027\u9886\u5bfc\u4eba\u6b63\u5728\u8bc1\u660e\u5979\u4eec\u5728\u9886\u5bfc\u548c\u505a\u4e8b\u60c5\u65b9\u9762\u5f88\u68d2\u3002\n\u6211\u5e0c\u671b\u770b\u5230\u8fd9\u6837\u4e00\u4e2a\u4e16\u754c\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7537\u6027\u548c\u5973\u6027\u6784\u6210\u4e86\u4eba\u7c7b\u7684\u5e73\u7b49\u4e00\u534a\uff0c\u4e5f\u6784\u6210\u4e86\u5e73\u7b49\u7684\u9886\u5bfc\u529b\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u6211\u5168\u5fc3\u5168\u610f\u5730\u76f8\u4fe1\uff0c\u6574\u4e2a\u4e16\u754c\u90fd\u5c06\u53d7\u76ca\u3002\u6211\u4eec\u5e94\u8be5\u4e3a\u6211\u4eec\u7684\u513f\u5973\u52aa\u529b\u5de5\u4f5c\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u611f\u8c22\u5c3c\u5a1c\u00b7\u963f\u67e5\u5fb7\u5065\u3001\u739b\u4e3d\u4e9a\u00b7\u963f\u83b1\u683c\u96f7\u3001\u5b89\u5fb7\u91cc\u4e9a\u00b7\u5df4\u91cc\u5361\u3001\u62c9\u5c14\u592b\u00b7\u53e4\u8482\u3001\u51ef\u7279\u00b7\u9a6c\u7eb3\u62c9\u514b\u3001\u9ea6\u8fea\u900a\u00b7\u9ea6\u51ef\u3001\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u7c73\u83b2\u3001\u838e\u62c9\u00b7\u7a46\u6069\u548c\u65af\u7279\u62c9\u7279\u00b7\u8c22\u5c14\u66fc\u9605\u8bfb\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u8349\u7a3f\u3002", "note_en": "Not a lot is written about being a female founder and CEO. I used to believe that my journey as a startup founder was the same as any other founder&#39;s experience, regardless of gender, in that it is lonely and hard. I believed the same when I worked in construction. At the time, any questions about there being a difference felt deeply unnecessary to me.\n For example, here is my  snarky answer in 2015 at TechCrunch Disrupt: \u201cWhen Tracy wakes up every morning, Tracy doesn\u2019t think \u2018Oh, I am a female.\u2019 When I wake up in the morning I think \u2018Wow, I\u2019ve got a lot of work to do. I better get showered, caffeined up, and get my ass to work.\u2019\u201d\n For context, I am the daughter of refugees, first to be born in America. The minority part of my identity I understood well, having witnessed my immigrant parents grinding their nose to the stone without ever complaining, so their children could have a better life. I was proud to be their child. The female part of my identity, however, was hidden under plain masculine clothes and behind a stoic demeanor. I was afraid that I wouldn\u2019t be taken seriously as a CEO and I perceived any attention to my gender as bad.\n Then, when I became pregnant in 2017, my opinion changed. Women have different lived experiences than men, and not acknowledging this would be a disservice to humanity.\n On the same day I learned I was pregnant, I also learned that one of our tech executives left his laptop on his desk, and would not be coming back to work. I remember the highest level of excitement I have ever felt, finally pregnant after trying for almost a year, and within a few hours, I swung to one of my lowest moments as a CEO.\n I thought that I must be the worst leader for someone to just leave me like this. That night, I vomited into my sink and cried sloppily in the dark. Someone I trusted had snuck out of responsibility in the most selfish way imaginable, and my body responded with intense physical reactions. I wondered if male CEOs would have reacted this way. I wish I knew. By morning, I kicked off an executive search, filled in as leader for the department, and announced my decision to the team. One thing I learned during this time was to not waste turbulence. As part of the shocking announcement of our executive\u2019s sudden departure, I also made a bunch of decisions that I previously lacked the courage to make and rolled everything out at once. There were major people and product roadmap changes, budget and schedule cuts all in the span of a few weeks. Our team had many questions, followed by many emotions and opinions about our new R&amp;D direction. Some team members, including great engineers, quit.\n Emotional roller coasters seem to be law in startups, and I believe managing our own emotions is a big part of the job. What I have found is that I cannot stop myself from being human, but I can practice dialing down the duration of negative feelings like anger, fear, and sadness.\n When my baby belly began to show, I told my leadership team we were expecting, and by the end of day most at the company knew too. There are no secrets in a startup. One colleague told me the next day that she knew I was pregnant because she saw me eat two bagels. That conversation made me realize that team members are always keeping an eye on their founders and leaders. In some cases, I do believe my coworkers genuinely cared for me. In most cases, I believe they were evaluating how well the company was doing based on my actions throughout the day and that factored into whether or not they should answer all the recruiters\u2019 calls.\n Three months before I was due to give birth, I got a message from the CEO of a large competitor who had enough cash to acquire us. There was M&amp;A activity in our industry, and, I too, wanted the option for our startup to become acquired. I was to give a presentation to several of their CxOs (a strong indicator that they were not just kicking the tires). In my own office, it never bothered me that my team\u2019s eyes would sometimes wander to my basketball shaped belly during conversation, but it did get under my skin when these strangers, who I was negotiating with, looked at my stomach during this presentation. But that was mostly my own insecurities, something I would learn to deal with.\n Two months prior to giving birth, we received a disappointing M&amp;A term sheet, so we declined. There were more problems in the company that I could no longer ignore, and because there was a baby in my belly, I could not use social drugs to escape from my stress, and was stone cold sober through all of it. I needed to make another leadership change. Some of our board directors told me: \u201cWe support your decision, but let\u2019s wait until you come back from maternity leave\u201d, to which I obliged. Although I understood the rationality of their advice, I felt trembling anger for not being supported in that moment. I\u2019ve also come to hate the phrase- \u201cbad breath is better than no breath\u201d, because it is terrible advice. My biggest regrets in business involve keeping the wrong person in the company for too long. I knew in my stomach that it was not going to work every time, I would even dread having unproductive 1-1s with them, but I would come up with excuses like- \u201cI know they can\u2019t stay, but I\u2019m so stressed out right now.\u201d The fact is, I hired the wrong person, I failed to help them grow as a leader and I owed it to my team and company to fix my mistakes.\n I went into labor the same night of our first user conference. The weeks leading up to the conference, watching our whole company burn late night candles in preparation for our new product unveiling, I wondered how many male CEOs would skip their conference for the birth of their child? I assume most would. I kept reasoning with myself that if I wasn\u2019t pregnant, there would be no question whether I\u2019d be there or not, so I must be there. Forcing myself to parade my 9-month pregnancy, deliver the keynote, support our team, and work the halls as the host, was my way of feeling like a superwoman, which was mostly about rubbing my own ego. I arrived home around 8pm that evening, and my water broke immediately. I would hear my son\u2019s first cry 32-hours later.\n No one told me how hard breastfeeding would be. Like clockwork, every 2-3 hours a tiny mouth latched onto me for 20 minutes, resulting in raw and bloody nipples. The amount of time and effort it requires to breastfeed doesn&#39;t stop there. You&#39;ll also need to make time to eat an extra 500 calories each day, time to pump and wait for milk to slowly drain out of each breast, and then time to clean each pumping piece thoroughly.\n After the M&amp;A deal fell through, I was concerned that two of our largest competitors were coming together. I was determined to get back to work as soon as possible and fundraise a war chest to fight back. However, being only 4 weeks postpartum, I was still healing. And by healing I mean I was still bleeding from several tears in my vagina from pushing out a baby. Even something as natural as emptying my bladder felt debilitating. When my son was 6 weeks old, I handed him over to his nanny (a vetted stranger, really) and went back to work. I wiped tears from my eyes as I drove away, convincing myself that the company needed me more than my son. In reality, waiting a few more weeks for my return would not have made a difference.\n To this day, I ask myself why I rushed back to work when I wasn\u2019t ready. And I think I was scared. Not because our business was in trouble. We had two years of runway in the bank and our interim CEO (our CFO) and the team were running the business just fine. I think I was scared of what others might think of me as a new mother and CEO, maybe because of my own insecurities, maybe because of the societal norms ingrained in me. I pressured myself into proving that I was as dedicated to PlanGrid as I always have been.\n I would spend the next two months driving to VC\u2019s offices, and down to Sand Hill Road, to secure our war chest. Despite this full schedule and constant traveling, I needed to pump milk. But I never asked to use any investor\u2019s Mother\u2019s Room. On some days, I would park my car on a sleepy street in Palo Alto and pump milk with a silicone hand pump in front of someone\u2019s nice house, reading profiles of the investors in my next meeting from my iPhone. Occasionally someone would drive up, or a jogger would run by, and I would feel completely humiliated.\n I\u2019ve always hated fundraising. It&#39;s putting our hearts and souls on a platter for money and for smiling strangers to poke holes in us. However, PlanGrid could not have fueled growth the way we did without selling pieces of it to investors who took a chance on us. I often get asked about how it was to fundraise as a woman. I\u2019ve heard awful stories firsthand from friends. Horrific stories like being offered a term sheet if sex was involved. Thankfully, that was not my experience. I believe I am in the minority.\n I think there are bad apples in every industry, but it is especially prevalent in those that control so much money and power. We tried to time all of our fundraising for when we were in a position of strength with attractive revenue growth and enough money in the bank to walk away from any or no deal. I also fundraised with my co-founders, and in later rounds with my CFO. I think it is easier for predators to target their prey when they are alone. I was never alone.\n After half a dozen no\u2019s to our Series-C fundraising, and a few weeks before we planned on stopping fundraising all together, we secured a round. We then received a revised M&amp;A offer to purchase our company at a much higher price.\n Our job as founders and CEOs is to maximize all options for the company and choose the best path forward for our team and customers. A part of me wanted to stay CEO of PlanGrid forever. I grew up at PlanGrid. I watched one of my co-founders die of cancer during PlanGrid. I married another one of my co-founders and we became parents together. My self worth was completely tied to the company. PlanGrid gave me purpose and fulfillment. However, in fall of 2018, the best option for our company given the competitive and market risks, and our own internal challenges, was to sell our company to an incumbent with obvious technical synergies, for over 10x multiple on revenue.  So we did. The day we announced the sale to our team was the most frightened I have ever felt in my life. I was afraid that I had let our team down by selling, but they didn\u2019t see it that way. That night, we celebrated together.\n My contract with our acquirers was set to last 18 months. The plan included 12 months to run PlanGrid as a standalone company (or try to), and 6 months to fully integrate into the mothership. Everything that made me a good founder, made me a terrible employee at a public company. I was used to having complete autonomy in leading PlanGrid. As a startup, we would make changes quickly. We could take dozens of small bets and risks every quarter. Depending on those results, we would abandon or make larger bets in the direction that was working. Risk taking is much more limited at a public company, in part because they must report to Wall Street every 3 months. At a larger company there are also more dependencies, it felt like I couldn\u2019t sneeze without asking permission from the heads of five other departments. New leadership took good care of our team and products, and people were nice to me, but it was obvious I was unhappy there.\n A few months after the acquisition, I became pregnant for the second time. And shortly after I found out, I also had a miscarriage. While with my team, I felt it slip out of me. I went to the bathroom and I knew exactly what it was. I walked back out to the group pretending as if nothing happened. For the next few months, I grieved, fighting back tears almost every hour.\n The women&#39;s experience can be really hard - I went through infertility, pregnancy, birth, miscarriage all the while trying to balance being a good leader, good mother and good partner. To top it all off, I felt I had to be a version of what I thought a good male CEO was, so that I wouldn\u2019t be judged or treated differently. It would take me years before I realized how delusional I was. I became a better and happier leader by being honest in who I was, even if it meant feeling raw heart pounding discomfort most days. And it turns out, my female identity was much more important to me than I realized going in.\n The tech industry has a long way to go toward gender equality in the workplace. The first step to change is acknowledging that things need to change.\n I am no longer employed by the company that acquired us. I posted on LinkedIn that my watch has ended. I have much more time to read about the world we live in and who is controlling it. When I look at leadership across companies, and leadership across countries, it looks predominantly male. And that means our world is missing out on a lot of hardworking, self-identifying women who can improve it. The problems of our time are overwhelming and massive. In the midst of a pandemic and too many crises, our women leaders are proving they are great at leading and getting things done.\n I want to see a world where men and women, who make up equal halves of humanity, also make up equal halves of leadership. When that happens, I wholeheartedly believe that the entire world will benefit. We owe it to our sons and daughters to work hard to get there.\n  Thank you to Nina Achadjian, Maria Alegre, Andrea Barrica, Ralph Gootee, Kat Manalac, Madison McKay, Kristina Milian, Sarah Moon, and Strat Sherman for reading drafts of this.", "posttime": "2020-06-23 01:52:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u521b\u4e1a,\u521b\u4e1a\u8005,female", "title": "\u5173\u4e8e\u505a\u5973\u521b\u4e1a\u8005\u7684\u601d\u8003", "title_en": "Reflections on Being a Female Founder", "transed": 1, "url": "https://tracy.posthaven.com/reflections-on-being-a-female-founder", "via": "", "real_tags": ["\u521b\u4e1a", "\u521b\u4e1a\u8005", "female"]}, {"category": "", "categoryclass": "", "imagename": "640c8f055f248f635730f4686b5e12e0.jpg", "infoid": 1007673, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u8bbe\u5907\u56fa\u4ef6\u7684\u7f51\u7edc\u670d\u52a1\u5668\u4e2d\u7684\u4e00\u4e2a\u672a\u6253\u8865\u4e01\u7684\u6f0f\u6d1e\u4e3a\u653b\u51fb\u8005\u63d0\u4f9b\u4e86root\u6743\u9650\u3002\n\u4ed6\u4eec\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u5728Netkit\u8def\u7531\u5668\u7684\u56fa\u4ef6\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u672a\u6253\u8865\u4e01\u7684\u96f6\u65e5\u6f0f\u6d1e\uff0c\u4f7f79\u4e2a\u8bbe\u5907\u578b\u53f7\u9762\u4e34\u5b8c\u5168\u63a5\u7ba1\u7684\u98ce\u9669\u3002\n\u6839\u636e\u4e24\u4efd\u72ec\u7acb\u7684\u62a5\u544a\uff0c\u8be5\u6f0f\u6d1e\u662f\u56fa\u4ef6\u7684httpd\u7f51\u7edc\u670d\u52a1\u5668\u4e2d\u5b58\u5728\u7684\u4e00\u4e2a\u5185\u5b58\u5b89\u5168\u95ee\u9898\uff0c\u4f7f\u5f97\u653b\u51fb\u8005\u80fd\u591f\u7ed5\u8fc7\u53d7\u5f71\u54cd\u7684Netkit\u8def\u7531\u5668\u5b89\u88c5\u4e0a\u7684\u8eab\u4efd\u9a8c\u8bc1\uff1a\u4e00\u4efd\u662f\u8d8a\u5357\u90ae\u7535\u96c6\u56e2\u4e00\u4f4d\u540d\u4e3a\u201cd4rkn3ss\u201d\u7684\u7814\u7a76\u4eba\u5458\u5173\u4e8e\u96f6\u65e5\u5021\u8bae(ZDI)\u7684\uff1b\u53e6\u4e00\u7bc7\u662f\u7f51\u7edc\u5b89\u5168\u516c\u53f8Grimm\u7684\u4e9a\u5f53\u00b7\u5c3c\u79d1\u5c14\u65af(Adam Nichols)\u64b0\u5199\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u3002\n\u6839\u636eZDI\u7684\u62a5\u544a\uff0c\u201c\u7279\u5b9a\u7684\u7f3a\u9677\u5b58\u5728\u4e8ehttpd\u670d\u52a1\u4e2d\uff0c\u8be5\u670d\u52a1\u9ed8\u8ba4\u4fa6\u542cTCP\u7aef\u53e380\u201d\uff0c\u8be5\u62a5\u544a\u6db5\u76d6\u4e86R6700\u7cfb\u5217Netkit\u8def\u7531\u5668\u4e2d\u5b58\u5728\u7684\u6f0f\u6d1e\u3002\u6b64\u95ee\u9898\u662f\u7531\u4e8e\u5728\u5c06\u7528\u6237\u63d0\u4f9b\u7684\u6570\u636e\u62f7\u8d1d\u5230\u56fa\u5b9a\u957f\u5ea6\u3001\u57fa\u4e8e\u5806\u6808\u7684\u7f13\u51b2\u533a\u4e4b\u524d\uff0c\u6ca1\u6709\u6b63\u786e\u9a8c\u8bc1\u5176\u957f\u5ea6\u9020\u6210\u7684\u3002\n\u6839\u636e\u8be5\u62a5\u544a\uff0c\u5229\u7528\u8be5\u6f0f\u6d1e\u4e0d\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8be5\u6f0f\u6d1e\u83b7\u5f97root\u6743\u9650\u3002\nZDI\u8868\u793a\uff0c\u5b83\u57281\u6708\u4efd\u5411Netkit\u901a\u62a5\u4e86\u8be5\u6f0f\u6d1e\uff0c\u4f46\u4f9b\u5e94\u5546\u4ecd\u672a\u4e3a\u53d7\u5f71\u54cd\u7684\u8bbe\u5907\u63d0\u4f9b\u8865\u4e01\u3002\u4f9b\u5e94\u5546\u66fe\u8981\u6c42\u5c06\u516c\u5f00\u62ab\u9732\u5ef6\u957f\u81f36\u6708\u5e95\uff0c\u4f46ZDI\u62d2\u7edd\u4e86\u3002Threatpost\u5df2\u7ecf\u8054\u7cfbNetkit\u5bfb\u6c42\u8bc4\u8bba\u548c\u8865\u4e01\u65f6\u95f4\u8868\u7684\u7ec6\u8282\u3002\n\u5c31\u5c3c\u79d1\u5c14\u65af\u800c\u8a00\uff0c\u4ed6\u6700\u521d\u5728Netkit R7000\u8def\u7531\u5668\u7cfb\u5217\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e2a\u7f3a\u9677\uff0c\u4f46\u6700\u7ec8\u53d1\u73b0\u4e8679\u79cd\u4e0d\u540c\u7684Netkit\u8bbe\u5907\u548c758\u4e2a\u56fa\u4ef6\u6620\u50cf\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u6613\u53d7\u653b\u51fb\u7684Web\u670d\u52a1\u5668\u526f\u672c\u3002\n\u201c\u8fd9\u4e2a\u6f0f\u6d1e\u65e9\u57282007\u5e74\u5c31\u4f1a\u5f71\u54cd\u56fa\u4ef6(WGT624v4\uff0c2.0.6\u7248)\uff0c\u201d\u4ed6\u5728\u4ed6\u7684\u5e16\u5b50\u4e2d\u8bf4\u3002\u201c\u8003\u8651\u5230\u5927\u91cf\u7684\u56fa\u4ef6\u6620\u50cf\uff0c\u624b\u52a8\u67e5\u627e\u5408\u9002\u7684\u5c0f\u5de5\u5177\u662f\u4e0d\u53ef\u884c\u7684\u3002\u76f8\u53cd\uff0c\u8fd9\u662f\u5b9e\u73b0\u5c0f\u5de5\u5177\u68c0\u6d4b\u81ea\u52a8\u5316\u7684\u597d\u673a\u4f1a\u3002\u201c\n\u5c3c\u79d1\u5c14\u65af\u8868\u793a\uff0c\u95ee\u9898\u5728\u4e8e\u7f3a\u4e4f\u5bf9\u4e00\u79cd\u540d\u4e3a\u5806\u6808Cookie\u6216\u5806\u6808\u91d1\u4e1d\u96c0\u7684\u529f\u80fd\u7684\u652f\u6301\u3002\u5806\u6808\u91d1\u4e1d\u96c0\u6307\u7684\u662f\u201c\u7164\u77ff\u4e2d\u7684\u91d1\u4e1d\u96c0\u201d\u7684\u4f7f\u7528\uff0c\u4ed6\u89e3\u91ca\u8bf4\uff0c\u8fd9\u4e9b\u529f\u80fd\u7528\u4e8e\u5728\u6076\u610f\u4ee3\u7801\u6267\u884c\u4e4b\u524d\u68c0\u6d4b\u5806\u6808\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\u4ed6\u8bf4\uff0c\u867d\u7136\u4e00\u4e9bNetkit\u8def\u7531\u5668\u652f\u6301\u6b64\u529f\u80fd-\u5373D8500\u56fa\u4ef6\u7248\u672c1.0.3.29\u548cR6300v2\u56fa\u4ef6\u7248\u672c1.0.4.12-1.0.4.20-\u4f46\u5927\u591a\u6570\u5176\u4ed6\u8def\u7531\u5668\u4e0d\u652f\u6301\u3002\nNichols\u5728\u5e16\u5b50\u4e2d\u89e3\u91ca\u8bf4\uff1a\u201cD8500\u548cR6300v2\u7684\u66f4\u9ad8\u7248\u672c\u4e0d\u518d\u4f7f\u7528\u5806\u6808cookie\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6f0f\u6d1e\u518d\u6b21\u88ab\u5229\u7528\u3002\u201d\u201c\u4e0e\u5176\u4ed6\u73b0\u4ee3\u8f6f\u4ef6\u76f8\u6bd4\uff0c\u8fd9\u53ea\u662fSOHO\u8bbe\u5907\u5b89\u5168\u843d\u540e\u7684\u53c8\u4e00\u4e2a\u4f8b\u5b50\u3002\u201d\n\u4ed6\u8bf4\uff0cSOHO\u8bbe\u5907\u56fa\u4ef6\u4e2d\u7684Web\u670d\u52a1\u5668\u901a\u5e38\u662f\u7cfb\u7edf\u4e2d\u6700\u6613\u53d7\u653b\u51fb\u7684\u65b9\u9762\uff0c\u56e0\u4e3a\u5b83\u4eec\u201c\u5fc5\u987b\u89e3\u6790\u6765\u81ea\u7f51\u7edc\u7684\u7528\u6237\u8f93\u5165\uff0c\u5e76\u8fd0\u884c\u4f7f\u7528\u8be5\u8f93\u5165\u7684\u590d\u6742CGI\u529f\u80fd\u201d\u3002\n\u5c3c\u79d1\u5c14\u65af\u8bf4\uff1a\u201c\u6b64\u5916\uff0cWeb\u670d\u52a1\u5668\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u56e0\u6b64\u5b83\u7ecf\u5e38\u5bb9\u6613\u53d7\u5230\u5fae\u4e0d\u8db3\u9053\u7684\u5185\u5b58\u635f\u574f\u9519\u8bef\u7684\u653b\u51fb\u3002\u201d\n\u5c3c\u79d1\u5c14\u65af\u5728\u4ed6\u7684\u5e16\u5b50\u4e2d\u89e3\u91ca\u8bf4\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5229\u7528\u96f6\u65e5\u6f0f\u6d1e\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u6700\u7ec8\u5bfc\u81f4\u5806\u6808\u7f13\u51b2\u533a\u6ea2\u51fa\u7684\u6b65\u9aa4\u6765\u5229\u7528Web\u670d\u52a1\u5668\u4e2d\u7684http\u89e3\u6790\u5668\u4e2d\u4f7f\u7528\u7684Recv\u51fd\u6570\u3002\n\u4ed6\u89e3\u91ca\u8bf4\uff0c\u653b\u51fb\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020(CSRF)\u653b\u51fb\u6765\u5229\u7528\u8be5\u6f0f\u6d1e\uff0c\u5c3d\u7ba1\u4ed6\u6216\u5979\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u7684\u76ee\u6807\u8def\u7531\u5668\u7684\u578b\u53f7\u548c\u7248\u672c\u624d\u80fd\u6210\u529f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u201c\u5982\u679c\u4f7f\u7528\u6613\u53d7\u653b\u51fb\u7684\u8def\u7531\u5668\u7684\u7528\u6237\u6d4f\u89c8\u5230\u6076\u610f\u7f51\u7ad9\uff0c\u8be5\u7f51\u7ad9\u53ef\u80fd\u4f1a\u5229\u7528\u7528\u6237\u7684\u8def\u7531\u5668\u2026\u3002\u901a\u8fc7\u4e3aHTML\u9875\u9762\u63d0\u4f9b\u670d\u52a1\uff0c\u8be5\u9875\u9762\u5411\u76ee\u6807\u8bbe\u5907\u53d1\u9001\u5305\u542b\u5229\u7528\u6f0f\u6d1e\u7684AJAX\u8bf7\u6c42\uff1a\u201cNichols\u8bf4\u3002\u4f46\u662f\uff0c\u7531\u4e8eCSRF\u7f51\u9875\u65e0\u6cd5\u4ece\u76ee\u6807\u670d\u52a1\u5668\u8bfb\u53d6\u4efb\u4f55\u54cd\u5e94\uff0c\u56e0\u6b64\u65e0\u6cd5\u8fdc\u7a0b\u8bc6\u522b\u8bbe\u5907\u3002\n\u6839\u636eZDI\u7684\u62a5\u544a\uff0c\u76ee\u524d\u8be5\u6f0f\u6d1e\u7684\u552f\u4e00\u7f13\u89e3\u63aa\u65bd\u662f\u5c06\u4e0e\u8be5\u670d\u52a1\u7684\u4ea4\u4e92\u9650\u5236\u5728\u53d7\u4fe1\u4efb\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\n\u62a5\u544a\u79f0\uff1a\u201c\u53ea\u6709\u4e0e\u8be5\u670d\u52a1\u6709\u5408\u6cd5\u7a0b\u5e8f\u5173\u7cfb\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u624d\u5e94\u88ab\u5141\u8bb8\u4e0e\u5176\u901a\u4fe1\u3002\u201d\u8fd9\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff0c\u6700\u660e\u663e\u7684\u662f\u4f7f\u7528\u9632\u706b\u5899\u89c4\u5219/\u767d\u540d\u5355\u3002\n3\u6708\u4efd\uff0cNetkit\u4fee\u8865\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\uff0c\u8be5\u6f0f\u6d1e\u53ef\u80fd\u4f1a\u4f7f\u672a\u7ecf\u9a8c\u8bc1\u7684\u653b\u51fb\u8005\u80fd\u591f\u63a7\u5236\u5176\u8fd0\u884c1.0.2.68\u4e4b\u524d\u56fa\u4ef6\u7248\u672c\u7684\u65e0\u7ebfAC\u8def\u7531\u5668Nighthawk(R7800)\u786c\u4ef6\u3002\u5b83\u8fd8\u89e3\u51b3\u4e86\u5f71\u54cd\u591c\u9e70\u8def\u7531\u5668\u7684\u4e24\u4e2a\u9ad8\u5ea6\u4e25\u91cd\u7684\u7f3a\u9677\uff0c21\u4e2a\u4e2d\u7b49\u4e25\u91cd\u7684\u7f3a\u9677\u548c\u4e00\u4e2a\u8bc4\u7ea7\u4e3a\u4f4e\u7684\u7f3a\u9677\u3002\n\u5185\u90e8\u5a01\u80c1\u5728\u5de5\u4f5c\u4e2d\u662f\u4e0d\u540c\u7684-\u4e0e\u5bb6\u5ead\u65f6\u4ee3\u4e0d\u540c\u30026\u670824\u65e5\u4e0b\u53482\u70b9\u3002ET\uff0c\u52a0\u5165Threatpost\u7f16\u8f91\u56e2\u961f\u548c\u6211\u4eec\u7684\u7279\u9080\u5609\u5bbe\uff0cGurucul\u9996\u5e2d\u6267\u884c\u5b98Saryu Nayyer\uff0c\u53c2\u52a0\u4e00\u4e2a\u514d\u8d39\u7684\u7f51\u7edc\u7814\u8ba8\u4f1a\uff0c\u4e3b\u9898\u662f\u201c\u5185\u90e8\u7684\u654c\u4eba\uff1a\u5185\u90e8\u5a01\u80c1\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u201d\u83b7\u53d6\u6709\u7528\u7684\u3001\u771f\u5b9e\u7684\u4fe1\u606f\uff0c\u4e86\u89e3\u5185\u90e8\u5a01\u80c1\u5982\u4f55\u968f\u7740WFH\u7684\u53d8\u5316\uff0c\u65b0\u7684\u653b\u51fb\u8f7d\u4f53\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u516c\u53f8\u53ef\u4ee5\u5bf9\u6b64\u505a\u4e9b\u4ec0\u4e48\u3002\u8bf7\u5728\u8fd9\u91cc\u6ce8\u518c\u53c2\u52a0\u8fd9\u4e2aThreatpost\u7f51\u7edc\u7814\u8ba8\u4f1a\u3002", "note_en": "An unpatched vulnerability in the web server of device firmware gives attackers root privileges, researchers said.\n  Researchers have discovered an unpatched, zero-day vulnerability in firmware for  Netgear routers that put  79 device models at risk for full takeover, they said.\n The flaw, a memory-safety issue present in the firmware\u2019s httpd web server, allows attackers to bypass authentication on affected installations of Netgear routers, according to two separate reports:  One on the Zero Day Initiative (ZDI) by a researcher called \u201cd4rkn3ss\u201d from the Vietnam Posts and Telecommunications Group; and a separate  blog post by Adam Nichols of cybersecurity firm  Grimm.\n \u201cThe specific flaw exists within the httpd service, which listens on TCP Port 80 by default,\u201d according to the ZDI report, which covers the bug\u2019s presence in the R6700 series Netgear routers. \u201cThe issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length, stack-based buffer.\u201d\n  Authentication is not required to exploit the vulnerability, which attackers can use to gain root privileges, according to the report.\n ZDI said it informed Netgear of the vulnerability in January, but the vendor still has not delivered a patch for the affected devices. The vendor had asked for an extension until the end of June for public disclosure, which ZDI declined. Threatpost has reached out to Netgear for comment and for details on a patch timeline.\n For his part, Nichols discovered the flaw initially in the Netgear R7000 router series, but eventually identified 79 different Netgear devices and 758 firmware images that included a vulnerable copy of the web server.\n \u201cThis vulnerability affects firmwares as early as 2007 (WGT624v4, version 2.0.6),\u201d he said in his post. \u201cGiven the large number of firmware images, manually finding the appropriate gadgets is infeasible. Rather, this is a good opportunity to automate gadget detection.\u201d\n Nichols said that the problem lies in lack of support for a feature called  stack cookies, or stack canaries\u2014a reference to the use of a \u201ccanary in a coal mine\u201d\u2013which are used to detect a stack buffer overflow before execution of malicious code can occur, he explained. While some Netgear routers support this feature \u2013 namely, the D8500 firmware version 1.0.3.29 and the R6300v2 firmware versions 1.0.4.12-1.0.4.20 \u2013 most others do not, he said.\n \u201cLater versions of the D8500 and R6300v2 stopped using stack cookies, making this vulnerability once again exploitable,\u201d Nichols explained in the post. \u201cThis is just one more example of how SOHO device security has fallen behind as compared to other modern software.\u201d\n Web servers in the firmware of SOHO devices in general are often the most vulnerable aspect of the system as they \u201cmust parse user input from the network and run complex CGI functions that use that input,\u201d he said.\n \u201cFurthermore, the web server is written in C and has had very little testing, and thus it is often vulnerable to trivial memory-corruption bugs,\u201d Nichols said.\n  The zero-day vulnerability can be exploited in two ways, Nichols explained in his post. One way to is to exploit the\u00a0recv\u00a0function used in the http parser in the web server through a series of steps that eventually lead to a stack-buffer overflow.\n Attackers also can use a cross-site request forgery (CSRF) attack to exploit the vulnerability, though he or she needs to know the model and version of the router they\u2019re targeting to pull this off successfully, he explained.\n \u201cIf a user with a vulnerable router browses to a malicious website, that website could exploit the user\u2019s router \u2026 by serving an HTML page which sends an AJAX request containing the exploit to the target device:\u201d Nichols said. \u201cHowever, as the CSRF web page cannot read any responses from the target server, it is not possible to remotely fingerprint the device.\u201d\n The only current mitigation for the vulnerability is to restrict interaction with the service to trusted machines, according to the ZDI report.\n \u201cOnly the clients and servers that have a legitimate procedural relationship with the service should be permitted to communicate with it,\u201d according to the report. \u201cThis could be accomplished in a number of ways, most notably with firewall rules/whitelisting.\u201d\n  In March,  Netgear patched a critical remote code execution bug that could allow an unauthenticated attacker to take control of its Wireless AC Router Nighthawk (R7800) hardware running firmware versions prior to 1.0.2.68. It also addressed two high-severity bugs impacting Nighthawk routers, 21 medium-severity flaws and one rated low.\n Insider threats are different in the work-from home era. On    June 24 at 2 p.m. ET  , join the Threatpost edit team and our special guest, Gurucul CEO Saryu Nayyer, for a FREE webinar,\u00a0\u201c  The Enemy Within: How Insider Threats Are Changing.\u201d   Get helpful, real-world information on how insider threats are changing with WFH, what the new attack vectors are and what companies can do about it  .\u00a0   Please register here  \u00a0for this Threatpost webinar.", "posttime": "2020-06-23 01:52:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8def\u7531\u5668,day,\u6f0f\u6d1e", "title": "NETGEAR\u96f6\u65e5\u5141\u8bb8\u5b8c\u5168\u63a5\u7ba1\u6570\u5341\u4e2a\u8def\u7531\u5668\u578b\u53f7", "title_en": "Netgear Zero-Day Allows Full Takeover of Dozens of Router Models", "transed": 1, "url": "https://threatpost.com/netgear-zero-day-takeover-routers/156744/", "via": "", "real_tags": ["\u8def\u7531\u5668", "day", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007671, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ZIG\u662f\u4e00\u79cd\u65b0\u7684\u901a\u7528\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u6b63\u5728\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u601d\u8003\u8bed\u8a00\u548c\u76f8\u5173\u5de5\u5177\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u6211\u5df2\u7ecf\u8ba8\u8bba\u4e86\u7f16\u8bd1\u65f6\u4ee3\u7801\u6267\u884c\uff0c\u73b0\u5728\u6211\u5c06\u4ecb\u7ecd\u8be5\u8bed\u8a00\u7684\u53e6\u4e00\u4e2a\u521b\u65b0\u6982\u5ff5\uff1a\u5f02\u6b65/\u7b49\u5f85\u3002\n\u662f\u7684\uff0c\u4f46\u662fZig\u4e2d\u7684\u5f02\u6b65/\u7b49\u5f85\u4e0e\u7f16\u8bd1\u65f6\u6267\u884c\u76f8\u7ed3\u5408\uff0c\u5141\u8bb8\u51fd\u6570\u9690\u5f0f\u5730\u6210\u4e3a\u5f02\u6b65\u7684\uff0c\u5e76\u4e14\u6574\u4e2a\u5e93\u4ee5\u4e00\u79cd\u975e\u5e38\u72ec\u7279\u7684\u65b9\u5f0f\u5728\u963b\u585e\u548c\u4e8b\u4ef6I/O\u6a21\u5f0f\u4e0b\u900f\u660e\u5730\u5de5\u4f5c\u3002\n\u867d\u7136Zig\u975e\u5e38\u521b\u65b0\uff0c\u4f46\u5b83\u8bd5\u56fe\u6210\u4e3a\u4e00\u79cd\u5c0f\u800c\u7b80\u5355\u7684\u8bed\u8a00\u3002Zig\u4eceC\u8bed\u8a00\u7684\u7b80\u5355\u6027\u4e2d\u83b7\u5f97\u4e86\u5f88\u591a\u7075\u611f\uff0c\u5e76\u4fdd\u7559\u4e86\u5143\u7f16\u7a0b\u6742\u6280\uff0c\u4ee5\u5907\u60a8\u771f\u6b63\u9700\u8981\u65f6\u4f7f\u7528\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u5728\u4e00\u4e2a\u5468\u672b\u4f7f\u7528Zig\u53d8\u5f97\u9ad8\u6548\u3002\u56e0\u6b64\uff0c\u867d\u7136\u5927\u591a\u6570Zig\u529f\u80fd\u4f1a\u8ba9\u60a8\u7acb\u5373\u611f\u5230\u6109\u5feb\u548c\u719f\u6089\uff0c\u4f46\u5f02\u6b65/\u7b49\u5f85\u662f\u6253\u7834\u719f\u6089\u89c4\u5219\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f46\u8fd9\u662f\u6709\u5145\u5206\u7406\u7531\u7684\u3002\n\u5728\u4f7f\u7528\u4e8b\u4ef6I/O\u65f6\uff0c\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\u5f80\u5f80\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u56de\u8c03\u6216\u5f02\u6b65/\u7b49\u5f85\u3002\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u4f18\u70b9\u662f\u4e0d\u9700\u8981\u5bf9\u8bed\u8a00\u8fdb\u884c\u4efb\u4f55\u6dfb\u52a0\uff0c\u4f46\u7f3a\u70b9\u662f\u73b0\u5728\u4e00\u5207\u90fd\u5fc5\u987b\u57fa\u4e8e\u56de\u8c03\u548c\u5d4c\u5957\u95ed\u5305\u3002\u7b2c\u4e8c\u79cd\u60c5\u51b5\u57fa\u672c\u4e0a\u8ba9\u7f16\u8bd1\u5668\u5c06\u51fd\u6570\u5206\u89e3\u6210\u4e0d\u540c\u7684\u201c\u9636\u6bb5\u201d\uff0c\u4f7f\u6574\u4e2a\u7ffb\u8bd1\u5bf9\u7528\u6237\u900f\u660e(\u5373\u5728\u60a8\u770b\u6765\uff0c\u5b83\u4ecd\u7136\u662f\u6b63\u5e38\u7684\u3001\u987a\u5e8f\u7684\u3001\u547d\u4ee4\u6027\u4ee3\u7801)\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u6709\u5f15\u5165\u51fd\u6570\u7740\u8272\u7684\u526f\u4f5c\u7528\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u5f88\u597d\u5730\u89e3\u91ca\u4e86\u51fd\u6570\u7740\u8272\u7684\u6982\u5ff5\uff0c\u4f46\u603b\u800c\u8a00\u4e4b\uff1a\u56e0\u4e3a\u4f60\u4e0d\u80fd\u4ece\u975e\u5f02\u6b65\u4ee3\u7801\u8c03\u7528\u5f02\u6b65\u51fd\u6570\uff0c\u4f60\u6700\u7ec8\u4f1a\u6709\u5f88\u591a\u91cd\u590d\u7684\u5de5\u4f5c\uff0c\u4f60\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u4f60\u7684\u6807\u51c6\u5e93\u548c\u6240\u6709\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u89e3\u51b3\u5f02\u6b65/\u7b49\u5f85\u3002\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\u662fPython\uff0c\u5728Python3\u4e2d\u5f15\u5165\u5f02\u6b65/\u7b49\u5f85\u4ea7\u751f\u4e86\u50cfaio-libs\u8fd9\u6837\u7684\u9879\u76ee\uff0c\u5176\u76ee\u6807\u662f\u5728AsyncIO\u4e4b\u4e0a\u91cd\u65b0\u5b9e\u73b0\u6d41\u884c\u7684\u7f51\u7edc\u5e93\u3002\n\u8ba9\u6211\u4eec\u901a\u8fc7\u67e5\u770b\u51e0\u4e2a\u793a\u4f8b\u6765\u4e86\u89e3\u5f02\u6b65/\u7b49\u5f85\u5728Zig\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8981\u67e5\u770b\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u8bf7\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\u4ee5\u4fa6\u542c\u6a21\u5f0f\u542f\u52a8Netcat\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u201cHello World\uff01\u201d\u6bcf\u6b21\u8fd0\u884c\u540e\u90fd\u4f1a\u6253\u5370\u51fa\u6765\u3002\n\u7b2c\u4e00\u4e2a\u793a\u4f8b\u662f\u4e00\u4e2a\u5199\u5165\u5957\u63a5\u5b57\u7684\u7b80\u5355\u963b\u585e\u7a0b\u5e8f\u3002\u8fd9\u6ca1\u4ec0\u4e48\u597d\u60ca\u8bb6\u7684\u3002\nconst net=@import(&#34\uff1bstd&34\uff1b).net\uff1bpub FN main()\uff01void{const addr=try net.Address.parseIp(&#34\uff1b127.0.0.1&#34\uff1b\uff0c7000)\uff1btry send_message(Addr)\uff1b}fn send_message(addr\uff1anet.Address)\uff01void{var socket=try net.tcpConnectToAddress(Addr)\uff1bdefer socket.close()\uff1b_=try socket.write(&#34\uff1bHello World\uff01\\n&#34\uff1b)\uff1b}\u3002\nconst net=@import(&#34\uff1bstd&#34\uff1b).net\uff1bpub const io_mode=.evented\uff1bpub FN main()\uff01void{const addr=try net.Address.parseIp(&#34\uff1b127.0.0.1&#34\uff1b\uff0c7000)\uff1btry send_message(Addr)\uff1b}fn send_message(addr\uff1anet.Address)\uff01void{var socket=try net.tcpConnectToAddress(Addr)\uff1bdefer socket.close()\uff1b_=try socket.write(&#34\uff1bHello World\uff01\\n&#34\uff1b)\uff1b}\u3002\n\u8be5\u58f0\u660e\u5728\u540e\u53f0\u5f15\u8d77\u4e86\u4e00\u4e9b\u66f4\u6539\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u4ee5\u975e\u963b\u585e\u6a21\u5f0f\u6253\u5f00\u5957\u63a5\u5b57\u3002\u8fd9\u4f1a\u5bfc\u81f4\u51fd\u6570\u53d8\u6210\u5f02\u6b65\u7684\uff0c\u4f46\u662f\u6b63\u5982\u60a8\u53ef\u4ee5\u770b\u5230\u7684\u90a3\u6837\uff0c\u5b83\u7684\u8c03\u7528\u65b9\u5f0f\u5e76\u6ca1\u6709\u6539\u53d8\uff1a\u5b83\u770b\u8d77\u6765\u4ecd\u7136\u50cf\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\u8c03\u7528\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u662f\u3002\nimport asyncio async def main()\uff1a\u7b49\u5f85send_message(&#34\uff1b127.0.0.1&#34\uff1b\uff0c7000)async def send_message(addr\uff0cport)\uff1a_\uff0cwrite=\u7b49\u5f85\u5f02\u6b65cio.open_connection(addr\uff0cport)writer.write(b&#34\uff1bHello World\uff01\\n&#34\uff1b)writer.close()asyncio.run(main())\u3002\n\u73b0\u5728\u60a8\u5df2\u7ecf\u770b\u5230\uff0c\u5728Zig\u4e2d\uff0c\u542f\u52a8\u534f\u7a0b\u5e76\u7acb\u5373\u7b49\u5f85\u5176\u5b8c\u6210\u4e0d\u9700\u8981\u989d\u5916\u7684\u5173\u952e\u5b57\u3002\u90a3\u4e48\uff0c\u4f60\u5982\u4f55\u5f00\u59cb\u4e00\u4e2a\u534f\u548c\u7a0b\u5e8f\uff0c\u7136\u540e\u7b49\u5f85\u5b83\u5462\uff1f\u5f53\u7136\u662f\u901a\u8fc7\u4f7f\u7528\u5f02\u6b65\uff01\nconst net=@import(&#34\uff1bstd&#34\uff1b).net\uff1bpub const io_mode=.evented\uff1bpub FN main()\uff01void{const addr=try net.Address.parseIp(&#34\uff1b127.0.0.1&#34\uff1b\uff0c7000)\uff1bvar sendFrame=\u5f02\u6b65\u53d1\u9001\u6d88\u606f(Addr)\uff1b//.\u3002\u5728\u53d1\u9001\u90ae\u4ef6\u65f6//\u6267\u884c\u5176\u4ed6\u64cd\u4f5c.\u3002\u5c1d\u8bd5\u7b49\u5f85sendFrame\uff1b}//\u6ce8\u610f\u51fd\u6570\u5b9a\u4e49\u5982\u4f55\u4e0d\u9700\u8981\u4efb\u4f55\u9759\u6001//`async`\u6807\u8bb0\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e`wait`\u7684\u7528\u6cd5\u63a8\u65ad\u51fd\u6570\u4f55\u65f6\u4e3a//\u5f02\u6b65\u3002FN SEND_MESSAGE(\u5730\u5740\uff1anet.Address)\uff01void{//\u5982\u679c\u6211\u4eec\u5728\u6b64\u671f\u95f4\u6709\u5176\u4ed6\u60f3\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u63a8\u8fdf\u2018\u7b49\u5f85\u2019\u8981\u5efa\u7acb\u7684\u8fde\u63a5\u3002var socket=net.tcpConnectToAddress(Addr)\uff1bdefer socket.close()\uff1b//\u5728\u540c\u4e00\u6761\u8bed\u53e5\u4e2d\u540c\u65f6\u4f7f\u7528aWait\u548cAsync//\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e5f\u4e0d\u662f\u60ef\u7528\u7684\uff0c\u4f46\u662f\u5b83\u663e\u793a\u4e86//\u5f53`io_mode`//\u4e3a`.evented`\u65f6\uff0c\u5e55\u540e\u6b63\u5728\u53d1\u751f\u4ec0\u4e48\u3002_=\u5c1d\u8bd5\u7b49\u5f85\u5f02\u6b65socket.write(&#34\uff1bHello World\uff01\\n&#34\uff1b)\uff1b}\u3002\n\u901a\u8fc7\u4f7f\u7528Async\u5173\u952e\u5b57\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u534f\u540c\u4f8b\u7a0b\u5e76\u8fd0\u884c\u5b83\uff0c\u76f4\u5230\u5b83\u9047\u5230\u6302\u8d77\u70b9(\u7c97\u7565\u5730\u8bf4\uff0c\u5b83\u5fc5\u987b\u7b49\u5f85I/O\u53d1\u751f)\u3002\u8fd4\u56de\u503c\u662fZig\u6240\u8bf4\u7684\u201c\u5f02\u6b65\u6846\u67b6\u201d\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7b49\u540c\u4e8e\u6765\u81ea\u5176\u4ed6\u8bed\u8a00\u7684Future\u3001Task\u3001Promise\u6216Coroutine\u5bf9\u8c61\u3002\n\u8ba9\u6211\u5411\u60a8\u5c55\u793a\u5b8c\u6210\u8fd9\u4e2a\u96be\u9898\u7684\u6700\u540e\u4e00\u4e2a\u6280\u5de7\uff1a\u5728\u963b\u585e\u6a21\u5f0f\u4e0b\u4f7f\u7528\u5f02\u6b65/\u7b49\u5f85\u3002\u8981\u6062\u590d\u5230\u963b\u585eI/O\uff0c\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u5220\u9664\u5f00\u5934\u6dfb\u52a0\u7684\u7279\u6b8a\u58f0\u660e(\u6216\u8005\u4f7f\u7528\u76f8\u5e94\u7684\u679a\u4e3e\u5927\u5c0f\u5199)\u3002\nconst net=@import(&#34\uff1bstd&#34\uff1b).net\uff1bpub const io_mode=.block\uff1bpub FN main()\uff01void{const addr=try net.Address.parseIp(&#34\uff1b127.0.0.1&#34\uff1b\uff0c7000)\uff1b//\u662f\u7684\uff0cvar sendFrame=async send_message(Addr)\uff1btry await sendFrame\uff1b}fn send_message(addr\uff1anet.Address)\uff01void{var socket=net.tcpConnectToAddress(Addr)\uff1bdefer.socket.close()\uff1b//this Too_=\u5c1d\u8bd5\u7b49\u5f85\u5f02\u6b65socket.write(&#34\uff1bHello World\uff01\\n&#34\uff1b)\uff1b}\u3002\n\u662f\u7684\uff0c\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u6309\u7167\u9884\u671f\u8fdb\u884c\u7f16\u8bd1\u548c\u5de5\u4f5c\u3002\u8be5\u51fd\u6570\u4e0d\u518d\u662f\u5f02\u6b65\u7684\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u57fa\u672c\u4e0a\u90fd\u53d8\u6210\u4e86no-ops\uff0c\u4f46\u91cd\u70b9\u662f\u5373\u4f7f\u60a8\u4e0d\u80fd\u5229\u7528\u5b83\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u5e76\u53d1\u6027\u3002\u5728\u6211\u4eec\u7684\u5c0f\u793a\u4f8b\u4e2d\uff0c\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u662f\u4ec0\u4e48\u5927\u4e8b\uff0c\u4f46\u8fd9\u662f\u5141\u8bb8\u5e93\u5728\u5355\u4e2a\u4ee3\u7801\u5e93\u4e2d\u63d0\u4f9b\u963b\u585e\u548c\u4e8b\u4ef6I/O\u529f\u80fd\u7684\u539f\u5219\u3002\n\u4e0d\u4e45\u524d\uff0c\u6211\u5f00\u59cb\u5f00\u53d1OkRedis\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528Zig\u7f16\u5199\u7684Redis\u5ba2\u6237\u7aef\u5e93\uff0c\u5b83\u8bd5\u56fe\u5728\u4e0d\u5f71\u54cd\u6548\u7387\u7684\u60c5\u51b5\u4e0b\u4e3a\u7528\u6237\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u7ec6\u8282\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u5728\u5355\u4e2a\u4ee3\u7801\u5e93\u4e2d\u5b8c\u5168\u652f\u6301\u963b\u585e\u548c\u4e8b\u4ef6I/O\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u770b\u4e00\u4e0bGitHub\u4e0a\u53ef\u7528\u7684\u6587\u6863\uff0c\u5e76\u89c2\u770b\u8fd9\u4e2a\u6f14\u8bb2\uff0cAndrew Kelley(Zig\u7684\u521b\u5efa\u8005)\u4e0e\u6211\u5408\u8457\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0cAndrew\u89e3\u91ca\u4e86Zig\u4e2d\u5f02\u6b65/\u7b49\u5f85\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u6f14\u793a\u4e86OkRedis\u3002\n&#34\uff1b\u5728Zig&#34\uff1b\u4e2d\u4f7f\u7528\u5f02\u6b65I/O\u5efa\u6a21\u6570\u636e\u5e76\u53d1\u867d\u7136\u7f16\u8bd1\u5668\u975e\u5e38\u806a\u660e\uff0c\u5e76\u4e14\u51fb\u8d25\u51fd\u6570\u7740\u8272\u6709\u8bb8\u591a\u5b9e\u9645\u597d\u5904\uff0c\u4f46\u5b83\u4e0d\u662f\u7075\u4e39\u5999\u836f\uff0c\u6240\u4ee5\u8ba9\u6211\u7acb\u5373\u63ed\u5f00\u5b83\u7684\u795e\u79d8\u9762\u7eb1\u3002\n\u4e0d\uff0c\u8981\u4f7f\u60a8\u7684\u7a0b\u5e8f\u5229\u7528\u4e8b\u4ef6I/O\uff0c\u60a8\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u8868\u793a\u5e76\u53d1\u6027\u3002\u5982\u679c\u60a8\u4ece\u672a\u8fd9\u6837\u505a\u8fc7\uff0c\u542f\u7528\u4e8b\u4ef6I/O\u5c06\u4e0d\u4f1a\u63d0\u4f9b\u4efb\u4f55\u660e\u663e\u7684\u4f18\u52bf\uff0c\u4f46\u662f\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u67d0\u4e2a\u5e93\u88ab\u6b63\u786e\u5730\u8bbe\u8ba1\u4e3a\u5f02\u6b65/\u7b49\u5f85\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4f1a\u4f53\u9a8c\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u7684\u4ee3\u7801\u5d4c\u5165\u5230\u4e00\u4e2a\u4f7f\u7528\u5f02\u6b65/\u7b49\u5f85\u7684\u8f83\u5927\u9879\u76ee\u4e2d\uff0c\u90a3\u4e48\u81ea\u52a8\u8f6c\u6362\u5230\u4e8b\u4ef6I/O\u5c06\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4f7f\u60a8\u7684\u4ee3\u7801\u4e0e\u5468\u56f4\u7684\u4e0a\u4e0b\u6587\u914d\u5408\u5f97\u5f88\u597d\u3002\n\u4e0d\u9700\u8981\uff0c\u6709\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e8b\u4ef6I/O\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002\u5207\u6362\u5230\u963b\u585e\u6a21\u5f0f\uff0c\u800c\u4e0d\u5f15\u5165\u4efb\u4f55\u66f4\u6539\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b83\u4eec\u6b7b\u9501\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u8003\u8651\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u65e2\u5145\u5f53\u5176\u81ea\u8eab\u7684\u670d\u52a1\u5668\uff0c\u53c8\u5145\u5f53\u5176\u81ea\u8eab\u7684\u5ba2\u6237\u7aef\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7f16\u8bd1\u65f6\uff0c\u53ef\u4ee5\u68c0\u67e5\u6574\u4e2a\u7a0b\u5e8f\u662f\u5426\u5904\u4e8e\u4e8b\u4ef6\u6a21\u5f0f\uff0c\u4f8b\u5982\uff0c\u6b63\u786e\u8bbe\u8ba1\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u5728\u5904\u4e8e\u963b\u585e\u6a21\u5f0f\u65f6\u51b3\u5b9a\u79fb\u52a8\u5230\u7ebf\u7a0b\u6a21\u578b\u3002\n\u95ee\uff1a\u6240\u4ee5\u6211\u751a\u81f3\u4e0d\u9700\u8981\u8003\u8651\u6211\u7684\u5e93\u4e2d\u7684\u666e\u901a\u51fd\u6570\u548c\u534f\u7a0b\uff1f\n\u4e0d\uff0c\u5076\u5c14\u4f60\u4f1a\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5141\u8bb8\u7528\u6237\u5728\u8fd0\u884c\u65f6\u5c06\u51fd\u6570\u6307\u9488\u4f20\u9012\u7ed9\u60a8\u7684\u5e93\u51fd\u6570\uff0c\u5219\u9700\u8981\u786e\u4fdd\u6839\u636e\u51fd\u6570\u662f\u5426\u662f\u5f02\u6b65\u7684\u4f7f\u7528\u6b63\u786e\u7684\u8c03\u7528\u7ea6\u5b9a\u3002\u60a8\u901a\u5e38\u4e0d\u5fc5\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u4e3a\u60a8\u5b8c\u6210\u5de5\u4f5c\uff0c\u4f46\u5bf9\u4e8e\u8fd0\u884c\u65f6\u5df2\u77e5\u503c\u5219\u4e0d\u80fd\u8fd9\u6837\u505a\u3002\n\u597d\u7684\u4e00\u9762\u662f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u5de5\u5177\uff0c\u4ee5\u7b80\u5355\u800c\u6e05\u6670\u7684\u65b9\u5f0f\u8bf4\u660e\u6240\u6709\u7684\u53ef\u80fd\u6027\u3002\u4e00\u65e6\u60a8\u83b7\u5f97\u6b63\u786e\u7684\u7ec6\u8282\uff0c\u4ee3\u7801\u5c06\u4e0d\u4f1a\u6bd4\u5fc5\u987b\u7684\u66f4\u590d\u6742\uff0c\u5e76\u4e14\u60a8\u7684\u5e93\u5c06\u5f88\u5bb9\u6613\u4f7f\u7528\u3002\n\u867d\u7136\u6211\u5728\u64b0\u5199\u7b80\u4ecb\u65f6\u8003\u8651\u5230\u7684\u662f\u666e\u901a\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u60a8\u9700\u8981\u77e5\u9053Zig\u4e0d\u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u5f53\u6d89\u53ca\u5230\u8d44\u6e90\u7ba1\u7406\u65f6\uff0c\u5b83\u4f1a\u7ed9\u60a8\u5e26\u6765\u5f88\u5927\u7684\u6743\u529b(\u548c\u8d23\u4efb)\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u77e5\u9053\u5982\u4f55\u5728C#\u3001JavaScript\u6216Python\u4e2d\u6267\u884c\u5f02\u6b65/\u7b49\u5f85\u64cd\u4f5c\uff0c\u60a8\u5c31\u4e0d\u80fd\u7acb\u5373\u77e5\u9053\u5982\u4f55\u5728Zig\u4e2d\u6267\u884c\u6240\u6709\u64cd\u4f5c\u3002\n\u5177\u4f53\u5730\u8bf4\uff0c\u5783\u573e\u6536\u96c6\u7684\u8bed\u8a00\u5bf9\u60a8\u9690\u85cf\u4e86\u5185\u5b58\u7684\u6765\u6e90\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\uff0c\u4f46\u662f\u8fd9\u79cd\u989d\u5916\u7684\u8f7b\u677e\u7684\u4ee3\u4ef7\u5b8c\u5168\u7531\u673a\u5668\u627f\u62c5\u3002\u8fd9\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u505a\u7684\u6743\u8861\uff0c\u4f46\u662f\uff0c\u7279\u522b\u662f\u5728\u5f02\u6b65/\u7b49\u5f85\u65b9\u9762\uff0c\u5b83\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u4f60\u5931\u53bb\u4e86\u5bf9\u5185\u5b58\u6d88\u8017\u7684\u63a7\u5236\uff0c\u6700\u7ec8\u4f1a\u8fc7\u91cf\u4f7f\u7528\uff0c\u5e76\u5728\u8d85\u8d1f\u8377\u65f6\u9047\u5230\u95ee\u9898(\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd9\u7bc7\u535a\u5ba2\u5e16\u5b50)\u3002\nZIG\u7684\u8981\u70b9\u4e4b\u4e00\u5c31\u662f\u4f7f\u8d44\u6e90\u914d\u7f6e\u59cb\u7ec8\u6e05\u6670\u3001\u53ef\u7ba1\u7406\u3002\u5f53\u6d89\u53ca\u5f02\u6b65/\u7b49\u5f85\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u8fd0\u884c\u534f\u540c\u4f8b\u7a0b\u6240\u9700\u7684\u6240\u6709\u5185\u5b58\u90fd\u7531\u5176\u5e95\u5c42\u5f02\u6b65\u5e27\u8868\u793a\u3002\u4e00\u65e6\u60a8\u6709\u4e86\u4e00\u4e2a\u5e27(\u65e0\u8bba\u662f\u56e0\u4e3a\u5b83\u662f\u9759\u6001\u5185\u5b58\u8fd8\u662f\u56e0\u4e3a\u76f8\u5e94\u7684\u52a8\u6001\u5206\u914d\u6210\u529f\u4e86)\uff0c\u90a3\u4e48\u60a8\u5c31\u77e5\u9053\u534f\u7a0b\u5c06\u80fd\u591f\u987a\u5229\u8fd0\u884c\u5230\u5b8c\u6210\u3002\u4f8b\u5982\uff0c\u5728HTTP\u670d\u52a1\u5668\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5c06\u80fd\u591f\u9884\u5148\u77e5\u9053\u60a8\u662f\u5426\u6709\u8db3\u591f\u7684\u8d44\u6e90\u6765\u63a5\u53d7\u8fde\u63a5\uff0c\u800c\u4e0d\u4f1a\u9047\u5230\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u6761\u4ef6\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u53ea\u8ba8\u8bba\u4e86\u5b9e\u73b0\u534f\u7a0b\u7684\u8bed\u8a00\u7279\u6027\u3002\u6211\u6ca1\u6709\u5168\u90e8\u63d0\u5230\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u6ca1\u6709\u8ba8\u8bba\u4e8b\u4ef6\u5faa\u73af\u3002\u5728Zig\u4e2d\uff0c\u4e8b\u4ef6\u5faa\u73af\u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u5176\u60f3\u6cd5\u662f\u4f7f\u5176\u53ef\u4ea4\u6362\u3002\n\u5728\u64b0\u5199\u672c\u6587\u7684\u65f6\u5019\uff0c\u4e8b\u4ef6\u5faa\u73af\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\uff0c\u4f46\u662f\u4eca\u5929\u60a8\u5df2\u7ecf\u53ef\u4ee5\u5c1d\u8bd5\u6240\u6709\u4e1c\u897f\u4e86\u3002\u5982\u679c\u60a8\u60f3\u77e5\u9053\uff0c\u5f53\u524d\u7684\u5b9e\u73b0\u5df2\u7ecf\u662f\u591a\u7ebf\u7a0b\u7684\u3002\u53ea\u9700\u8bbf\u95eeziglang.org\uff0c\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c\u5e76\u67e5\u770b\u6587\u6863\u5373\u53ef\u3002\n\u554a\uff0c\u662f\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0cGo-\u4e0e\u5176\u4ed6\u51e0\u79cd\u8bed\u8a00\u4e00\u8d77\u4f7f\u7528-\u6ca1\u6709\u51fd\u6570\u7740\u8272\u95ee\u9898\u3002\u5b89\u5fb7\u9c81\u5728\u524d\u9762\u7684\u8c08\u8bdd\u4e2d\u63d0\u5230\u4e86GO\uff0c\u4f46\u6211\u4f1a\u5728\u8fd9\u91cc\u63d0\u51fa\u6211\u7684\u4e24\u70b9\u770b\u6cd5\u3002\n\u5982\u679c\u4f60\u4ee5\u524d\u770b\u8fc7\u6211\u7684\u535a\u5ba2\uff0c\u4f60\u5c31\u77e5\u9053\u6211\u559c\u6b22\u56f4\u68cb\u3002\u6211\u8ba4\u4e3a\u5728\u5e94\u7528\u7a0b\u5e8f\u7ea7\u7f16\u7a0b\u4e2d\uff0cGoroutines\u901a\u5e38\u6bd4\u5f02\u6b65/\u7b49\u5f85\u66f4\u53ef\u53d6\uff0c\u7279\u522b\u662f\u5f53\u6d89\u53ca\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662fGo\u7684\u4e3b\u8981\u9886\u57df\u3002\n\u6211\u8ba4\u4e3aGoroutines\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u5f02\u6b65/\u7b49\u5f85\u662f\u4e00\u4e2a\u5f88\u5bb9\u6613\u8bef\u7528\u7684\u4f4e\u7ea7\u5de5\u5177\uff0c\u4f46\u662f\u5f53\u6d89\u53ca\u5230\u7f16\u5199\u5177\u6709\u6b63\u786e\u6027\u548c\u6548\u7387\u7684\u5173\u952e\u8981\u6c42\u7684\u4ee3\u7801\u65f6\uff0c\u60a8\u9700\u8981\u5f02\u6b65/\u7b49\u5f85\uff0c\u60a8\u9700\u8981Zig\u7684\u54f2\u5b66\uff0c\u5373\u6211\u4eec\u90fd\u5e94\u8be5\u52aa\u529b\u7f16\u5199\u5065\u58ee\u3001\u4f18\u5316\u548c\u53ef\u91cd\u7528\u7684\u8f6f\u4ef6\u3002\n\u975e\u5e38\u611f\u8c22\u60a8\u7684\u9605\u8bfb\uff01\u6709\u4ec0\u4e48\u610f\u89c1\u5417\uff1f\u53d1\u63a8\u6587\uff1a@croloris\u3002\u53e6\u5916\uff0c\u6211\u5f00\u59cb\u5b9a\u671f\u5728Twitch\u4e0a\u76f4\u64ad\u7f16\u7801\uff0c\u4e0b\u4e00\u6b21\u76f4\u64ad\u65f6\u8bf7\u5173\u6ce8\u9891\u9053\u901a\u77e5\u6211\uff01", "note_en": "Zig is a new, general-purpose programming language that is rethinking from the ground up the way languages and related tooling should work. I\u2019ve  already discussed compile-time code execution, and now I\u2019m going to introduce another innovative concept from the language: async/await.\n  Well yes, but async/await in Zig combines with compile-time execution, allowing functions to implicitly become async and whole libraries to work transparently in both blocking and evented I/O mode in a way that\u2019s very much unique to Zig.\n   While Zig is very innovative, it tries to be a small and simple language. Zig takes a lot of inspiration from the simplicity of C and reserves metaprogramming acrobatics for when you really need them. In general, you should be able to become productive with Zig in a weekend. So, while most Zig features will immediately strike you as pleasant and somewhat familiar, async/await is one example of the familiarity-rule being broken, but for good reason.\n  When it comes to making use of evented I/O, you tend to have two options in imperative programming languages: callbacks or async/await.\n The first case has the advantage of not requiring any addition to the language, but the downside is that now everything has to be based on callbacks and nested closures. The second case basically leaves it to the compiler to break down your function into different \u201cstages\u201d, making the whole translation transparent to the user (i.e. to you it still looks like normal, sequential, imperative code) but, unfortunately, it has the side effect of introducing function coloring.\n  The idea of function coloring is nicely explained by  this blog post, but to sum it up: since you can\u2019t call async functions from non-async code, you end up with a lot of duplicated effort, where you need to reimplement parts of your standard library and all networking-related libraries to account for async/await. One example of this is Python, where the introduction of async/await in Python 3 birthed projects like  aio-libs, whose goal is to reimplement popular networking libraries on top of AsyncIO.\n  Let\u2019s walk through how async/await works in Zig by looking at a few examples. To see the following code snippets run, launch Netcat in another terminal in listen mode and, if everything works, you should see \u201cHello World!\u201d being printed after every run.\n    The first example is a simple blocking program that writes to a socket. Nothing surprising there.\n const  net =  @import ( &#34;std&#34; ).net;    pub   fn  main() ! void  {    const  addr =  try  net.Address.parseIp( &#34;127.0.0.1&#34; ,  7000 );    try  send_message(addr);  }    fn  send_message(addr: net.Address) ! void  {    var  socket =  try  net.tcpConnectToAddress(addr);    defer  socket.close();     _ =  try  socket.write( &#34;Hello World! \\n &#34; );  }\n  const  net =  @import ( &#34;std&#34; ).net;    pub   const  io_mode = .evented;    pub   fn  main() ! void  {    const  addr =  try  net.Address.parseIp( &#34;127.0.0.1&#34; ,  7000 );    try  send_message(addr);  }    fn  send_message(addr: net.Address) ! void  {    var  socket =  try  net.tcpConnectToAddress(addr);    defer  socket.close();     _ =  try  socket.write( &#34;Hello World! \\n &#34; );  }\n That declaration caused a few changes in the background, one of which is opening the socket in non-blocking mode. This causes the function to become async, but as you can see the way it gets called did not change: it still looks like a normal function invocation, even though it\u2019s not.\n  import  asyncio    async   def   main ():    await  send_message( &#34;127.0.0.1&#34; ,  7000 )    async   def   send_message ( addr ,  port ):   _, writer =  await  asyncio.open_connection(addr, port)   writer.write( b &#34;Hello World! \\n &#34; )   writer.close()    asyncio.run(main())\n  You\u2019ve seen now that in Zig there is no extra keyword requirement to launch a coroutine and immediately wait for its completion. So how do you start a coroutine and  await it afterward then? By using  async of course!\n const  net =  @import ( &#34;std&#34; ).net;    pub   const  io_mode = .evented;    pub   fn  main() ! void  {    const  addr =  try  net.Address.parseIp( &#34;127.0.0.1&#34; ,  7000 );      var  sendFrame =  async  send_message(addr);    // ... do something else while    // the message is being sent ...    try   await  sendFrame;  }    // Note how the function definition doesn&#39;t require any static  // `async` marking. The compiler can deduce when a function is  // async based on its usage of `await`.  fn  send_message(addr: net.Address) ! void  {    // We could also delay `await`ing for the connection    // to be established, if we had something else we    // wanted to do in the meantime.    var  socket = net.tcpConnectToAddress(addr);    defer  socket.close();      // Using both await and async in the same statement    // is unnecessary and non-idiomatic, but it shows    // what&#39;s happening behind the scenes when `io_mode`    // is `.evented`.   _ =  try   await   async  socket.write( &#34;Hello World! \\n &#34; );  }\n By using the  async keyword, you\u2019re creating the coroutine and running it until it encounters a suspension point (when it has to wait for I/O to happen, roughly speaking). The return value is what Zig calls an \u201casync frame\u201d and is to some degree equivalent to  Future,  Task,  Promise, or  Coroutine objects from other languages.\n  Let me show you the final trick that completes the puzzle: using async/await in blocking mode.To revert back to blocking I/O, all we have to do is delete the special declaration we added in the beginning (or use the corresponding enum case).\n const  net =  @import ( &#34;std&#34; ).net;    pub   const  io_mode = .blocking;    pub   fn  main() ! void  {    const  addr =  try  net.Address.parseIp( &#34;127.0.0.1&#34; ,  7000 );      // yes, this still works    var  sendFrame =  async  send_message(addr);    try   await  sendFrame;  }    fn  send_message(addr: net.Address) ! void  {    var  socket = net.tcpConnectToAddress(addr);    defer  socket.close();      // this too   _ =  try   await   async  socket.write( &#34;Hello World! \\n &#34; );  }\n Yes, this program compiles and works as expected. The function is no longer async, and in fact both keywords basically become no-ops, but  the point is that you can express concurrency even if you\u2019re not able to take advantage of it. This might not seem such a big deal in our small example, but it\u2019s the principle that allows libraries to offer both blocking and evented I/O capabilities off of a single code base.\n  A while ago I started working on  OkRedis, a Redis client library written in Zig that tries to offer as many niceties it can to the user without compromising in terms of efficiency. Among other things, it features full support for both blocking and evented I/O in a single codebase. If you want to learn more, take a look at the available documentation on GitHub and watch this talk  Andrew Kelley (the creator of Zig) co-authored with me. In it, Andrew explains the basics of async/await in Zig and, in the second part, I demo OkRedis.\n     &#34;Modeling Data Concurrency with Asynchronous I/O in Zig&#34;  While the compiler is very smart and defeating function coloring has many practical benefits, it\u2019s not a magic bullet, so let me immediately demystify some ideas about it.\n  No, to make your program take advantage of evented I/O you need to express concurrency in your code.If you never did that work, enabling evented I/O will not provide any appreciable advantage, but you might experience better performance if one of the libraries you\u2019re using has been properly designed for async/await.\n That said if your code gets embedded in a larger project that does make use of async/await, theautomated translation to evented I/O will make your code play nice with the surrounding context, to some extent.\n  No, there\u2019s plenty of applications that need evented I/O to behave correctly. Switching to blocking mode, without introducing any change, might cause them to deadlock. Think for example of a single application that acts both as server and client to itself.\n That said, during compile-time, it\u2019s possible to inspect if the overall program is in evented mode or not, and properly designed code might decide to move to a threaded model when in blocking mode, for example.\n Q: So I don\u2019t even have to think about normal functions vs coroutines in my library?\n No, occasionally you will have to. As an example, if you\u2019re allowing your users to pass to your library function pointers at runtime, you will need to make sure to use the right calling convention based on whether the function is async or not. You normally don\u2019t have to think about it because the compiler is able to do the work for you at compile-time, but that can\u2019t happen for runtime-known values.\n The silver lining is that you have at your disposal all the tools to account for all the possibilities in a simple and clear way. Once you get the details right, the code will be no more complicated than it has to be, and your library will be easy to use.\n  While I wrote the introduction with the average developer in mind, you need to be aware that Zig is not a dynamically typed language and, on top of that, it puts in your hands a lot of power (and responsibility) when it comes to resource management. If you know how to do async/await in C#, JavaScript, or Python, for example, you won\u2019t be able to immediately know how to do  everything in Zig.\n In particular, garbage-collected languages hide from you where the memory is coming from. This makes things much easier for the programmer, but the price for this extra ease is shouldered entirely by the machine. This is nothing new and it\u2019s a trade-off very often worth doing but, especially when it comes to async/await, it\u2019s problematic because you lose control of how much memory you\u2019re consuming, eventually over-committing and encountering issues when under heavy load (see this blog postfor more info).\n One of the main points of Zig is to make resource allocation always clear and manageable. When it comes to async/await, this means that all the memory required to run a coroutine is represented by its underlying async frame. Once you have a frame (be it because it\u2019s static memory or because the corresponding dynamic allocation succeded), then you know the coroutine will be able to run to completion without problems. In the context of a HTTP server, for example, this means that you will be able to know upfront if you have enough resources to accept a connection or not, without encountering unrecoverable error conditions.\n  Up until now, I\u2019ve only talked about the language features that implement coroutines. I haven\u2019t mentioned all of them but, more importantly, I haven\u2019t talked about the event loop. In Zig, the event loop is part of the standard library and the idea is to make it swappable.\n At the moment of writing, there\u2019s still a lot of work to do on the event loop, but you can already try everything out today. The current implementation is already multi-threaded, in case you were wondering. Just go to  ziglang.org, download the latest version, and take a look a the docs.\n  Ah, yes. Go \u2014 alongside a few other languages in fact \u2014 doesn\u2019t have function coloring problems. Andrew mentions Go in his part of the aforelinked talk, but I\u2019ll give my two cents here.\n If you\u2019ve read my blog before, you know that I like Go. I think that goroutines are generally preferable to async/await in application-level programming, especially when it comes to server-side applications, which I believe to be Go\u2019s main domain.\n I think goroutines are preferable in that context because async/await is a much lower level tool that is easy to misuse, but when it comes to writing code with critical requirements of correctness and efficiency, you need async/await and you need Zig\u2019s philosophy that we all should strive to write  robust,  optimal, and  reusable software.\n  Thank you very much for reading! Got a comment? Tweet \u00a0 @croloris.  P.S. I started \u00a0 live coding regularly on Twitch, follow the channel to be notified when I go live next!", "posttime": "2020-06-23 01:51:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9f50\u683c,colorblind,\u7b49\u5f85", "title": "\u9f50\u683c\u7684\u201c\u8272\u76f2\u201d\u5f02\u6b65/\u7b49\u5f85\u662f\u4ec0\u4e48\uff1f", "title_en": "What Is Zig's \u201cColorblind\u201d Async/Await?", "transed": 1, "url": "https://kristoff.it/blog/zig-colorblind-async-await/", "via": "", "real_tags": ["\u9f50\u683c", "\u7b49\u5f85"]}, {"category": "", "categoryclass": "", "imagename": "4219bbeb991987db8cb75ac770bd0a1c.png", "infoid": 1007670, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u60a8\u7684\u7f51\u7edc\u4e0a\u516c\u5f00Web\u670d\u52a1\u00b7\u4f7f\u7528Let\u52a0\u5bc6\u5b9e\u73b0\u514d\u8d39SSL\u00b7\u8bbe\u8ba1\u65f6\u5145\u5206\u8003\u8651\u4e86\u5b89\u5168\u6027\u00b7\u975e\u5e38\u9002\u5408\u5bb6\u5ead\u7f51\u7edc\u3002\n\u8be5\u754c\u9762\u57fa\u4e8eTabler\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\u3002\u914d\u7f6e\u670d\u52a1\u5668\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u6709\u8da3\u8fc7\u3002\n\u5185\u7f6e\u7684\u201c\u8ba9\u6211\u4eec\u52a0\u5bc6\u201d\u652f\u6301\u5141\u8bb8\u60a8\u514d\u8d39\u4fdd\u62a4\u60a8\u7684Web\u670d\u52a1\u3002\u8bc1\u4e66\u751a\u81f3\u53ef\u4ee5\u81ea\u52a8\u7eed\u8ba2\uff01\n\u5c06\u5176\u4ed6\u7528\u6237\u914d\u7f6e\u4e3a\u67e5\u770b\u6216\u7ba1\u7406\u5176\u81ea\u5df1\u7684\u4e3b\u673a\u3002\u63d0\u4f9b\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u3002\n{&#34\uff1b\u6570\u636e\u5e93&#34\uff1b\uff1a{&#34\uff1b\u5f15\u64ce&#34\uff1b\uff1a&#34\uff1bMySQL&#34\uff1b\uff0c&#34\uff1b\u4e3b\u673a&#34\uff1b\uff1a&#34\uff1b\u6570\u636e\u5e93&#34\uff1b\uff0c&#34\uff1b\u540d\u79f0&#34\uff1b\uff1a&#34\uff1bNPM&#34\uff1b\uff0c&#34\uff1b\u7528\u6237&#34\uff1b\uff1a&#34\uff1bNPM&#34\uff1b\uff0c&#34\uff1b\u5bc6\u7801&#34\uff1b\uff1a&#34\uff1bnpm&#34\uff1b\uff0c&#34\uff1b\u7aef\u53e3&#34\uff1b\uff1a3306}}\u3002\n\u7248\u672c\uff1a&#39\uff1b3&#39\uff1b\u670d\u52a1\uff1aAPP\uff1aimage\uff1a&#39\uff1bjc21/nginx-proxy-manager\uff1a\u6700\u65b0&#39\uff1b\u7aef\u53e3\uff1a-&#39\uff1b80\uff1a80&#39\uff1b-&#39\uff1b81\uff1a81&#39\uff1b-&#39\uff1b443\uff1a443&#39\uff1b\u5377\uff1a-./config.json\uff1a/app/config/Production.json-./data\uff1a/data-./letscrypt\uff1a/etc/letscrypt db\uff1aimage\uff1a&#39\uff1bjc21/MariaDB-aria\uff1a10.4&#39\uff1b\u73af\u5883\uff1amysql_root_password\uff1a&#39\uff1bnpm&#39\uff1bmysql_database\uff1a&#39\uff1bnpm&#39\uff1bmysql_user\uff1a&#39\uff1bnpm&#39\uff1bmysql_\u3002\u5377\uff1a-./data/mysql\uff1a/var/lib/mysql\u3002\n\u5f53\u60a8\u7684\u505c\u9760\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5728\u7aef\u53e381\u4e0a\u8fde\u63a5\u5230\u5b83\u4ee5\u7528\u4e8e\u7ba1\u7406\u63a5\u53e3\u3002\u6709\u65f6\uff0c\u7531\u4e8e\u5bc6\u94a5\u7684\u71b5\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u3002\n\u4f7f\u7528\u6b64\u9ed8\u8ba4\u7528\u6237\u767b\u5f55\u540e\uff0c\u7cfb\u7edf\u4f1a\u7acb\u5373\u8981\u6c42\u60a8\u4fee\u6539\u8be6\u7ec6\u4fe1\u606f\u5e76\u66f4\u6539\u5bc6\u7801\u3002", "note_en": "Expose web services on your network \u00b7 Free SSL with Let&#39;s Encrypt \u00b7 Designed with security in mind \u00b7 Perfect for home networks\n    Based on Tabler, the interface is a pleasure to use. Configuring a server has never been so fun.\n  Built in Let\u2019s Encrypt support allows you to secure your Web services at no cost to you. The certificates even renew themselves!\n    Configure other users to either view or manage their own hosts. Full access permissions are available.\n          {  &#34;database&#34; :  {  &#34;engine&#34; :  &#34;mysql&#34; ,  &#34;host&#34; :  &#34;db&#34; ,  &#34;name&#34; :  &#34;npm&#34; ,  &#34;user&#34; :  &#34;npm&#34; ,  &#34;password&#34; :  &#34;npm&#34; ,  &#34;port&#34; :  3306  } }\n   version :  &#39;3&#39; services :  app :  image :  &#39;jc21/nginx-proxy-manager:latest&#39;  ports :  -  &#39;80:80&#39;  -  &#39;81:81&#39;  -  &#39;443:443&#39;  volumes :  - ./config.json :/app/config/production.json  - ./data :/data  - ./letsencrypt :/etc/letsencrypt  db :  image :  &#39;jc21/mariadb-aria:10.4&#39;  environment :  MYSQL_ROOT_PASSWORD :  &#39;npm&#39;  MYSQL_DATABASE :  &#39;npm&#39;  MYSQL_USER :  &#39;npm&#39;  MYSQL_PASSWORD :  &#39;npm&#39;  volumes :  - ./data/mysql :/var/lib/mysql\n      When your docker container is running, connect to it on port  81 for the admin interface.Sometimes this can take a little bit because of the entropy of keys.\n       Immediately after logging in with this default user you will be asked to modify your details and change your password.", "posttime": "2020-06-23 01:50:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "proxy,mysql", "title": "Nginx Proxy Manager-\u7528\u4e8e\u7ba1\u7406letsEncrypt\u4fdd\u62a4\u7684\u53cd\u5411\u4ee3\u7406\u7684UI", "title_en": "Nginx Proxy Manager \u2013 UI to manage letsencrypt-secured reverse proxies", "transed": 1, "url": "https://nginxproxymanager.com", "via": "", "real_tags": ["proxy", "mysql"]}, {"category": "", "categoryclass": "", "imagename": "59de2958006b3d3d2d7996d456ff6c5e.jpg", "infoid": 1007667, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u904f\u5236\u9519\u8bef\u4fe1\u606f\u5728\u5176\u5e73\u53f0\u4e0a\u7684\u4f20\u64ad\uff0c\u8c37\u6b4c\u5468\u4e00\u8868\u793a\uff0c\u5c06\u5f00\u59cb\u5bf9\u8c37\u6b4c\u56fe\u7247\u641c\u7d22\u7ed3\u679c\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002\n\u91cd\u8981\u539f\u56e0\uff1a\u4e0e\u8bef\u5bfc\u6027\u7684\u3001\u88ab\u7be1\u6539\u7684\u3001\u5f7b\u5934\u5f7b\u5c3e\u7684\u5047\u7167\u7247\u548c\u89c6\u9891\u76f8\u6bd4\uff0c\u57fa\u4e8e\u6587\u672c\u7684\u9519\u8bef\u4fe1\u606f\u5e26\u6765\u7684\u5371\u9669\u53ef\u80fd\u76f8\u5f62\u89c1\u7ecc\uff0c\u5305\u62ec\u5728\u4eba\u5de5\u667a\u80fd\u7684\u5e2e\u52a9\u4e0b\u751f\u6210\u4ee4\u4eba\u4fe1\u670d\u7684\u6df1\u5ea6\u5047\u7167\u7247\u548c\u89c6\u9891\u3002\n\u5927\u5c40\uff1a\u8fd9\u4e00\u4e3e\u63aa\u5728\u5404\u5927\u641c\u7d22\u5f15\u64ce\u4e2d\u5c1a\u5c5e\u9996\u6b21\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u79d1\u6280\u516c\u53f8\u6b63\u7ee7\u7eed\u52aa\u529b\u89e3\u51b3\u5176\u5e73\u53f0\u4e0a\u7ee7\u7eed\u7316\u7357\u7684\u9519\u8bef\u4fe1\u606f\u3002\n\u7ec6\u8282\uff1a\u4ece\u5468\u4e00\u5f00\u59cb\uff0c\u8c37\u6b4c\u5c06\u5728\u4e16\u754c\u5404\u5730\u7684\u8c37\u6b4c\u56fe\u7247\u4e2d\u663e\u793a\u4e8b\u5b9e\u6838\u67e5\u4fe1\u606f\uff0c\u8fd9\u4e0e\u8c37\u6b4c\u5728\u5176\u5e38\u89c4\u641c\u7d22\u548c\u65b0\u95fb\u7ed3\u679c\u4e2d\u6240\u505a\u7684\u52aa\u529b\u7c7b\u4f3c\u3002\n\u5f53\u7528\u6237\u5728Google Images\u4e0a\u641c\u7d22\u65f6\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5728\u56fe\u50cf\u7f29\u7565\u56fe\u4e0b\u9762\u770b\u5230\u4e00\u4e2a\u4e8b\u5b9e\u6838\u67e5\u6807\u7b7e\u3002\u4e8b\u5b9e\u6838\u67e5\u53ef\u4ee5\u5e94\u7528\u4e8e\u56fe\u50cf\u672c\u8eab\uff0c\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5b83\u51fa\u73b0\u7684\u7f51\u7ad9\u3002\n\u662f\u7684\uff0c\u4f46\u662f\uff1a\u8c37\u6b4c\u8868\u793a\uff0c\u4e8b\u5b9e\u6838\u67e5\u4e0d\u4f1a\u5f71\u54cd\u56fe\u7247\u641c\u7d22\u7684\u6392\u540d\uff0c\u5c31\u50cf\u5b83\u7684\u4e8b\u5b9e\u6838\u67e5\u4e0d\u4f1a\u5f71\u54cd\u8c37\u6b4c\u65b0\u95fb\u6216\u8c37\u6b4c\u641c\u7d22\u7684\u6392\u540d\u4e00\u6837\u3002", "note_en": "In an effort to curb the spread of misinformation on its platform, Google  said Monday it would begin to fact-check Google Images search results.\n Why it matters: The danger of text-based misinformation could be dwarfed by that posed by misleading, manipulated and outright fake photos and videos, including convincing &#34;deepfakes&#34; generated with the aid of artificial intelligence.\n The big picture: The move, a first among major search engines, comes as tech firms continue to wrestle with how to address the misinformation that continue to run rampant on their platforms.\n Details: Beginning Monday, Google will surface fact-check information in Google Images around the world, a similar effort to what is does in its regular search and news results.\n When users search on Google Images, they may see a fact-check label under image thumbnails. The fact-check could apply to the image itself or the website it appears on.\n Yes, but: Google says fact checks won&#39;t affect rankings in image search, similar to how its fact checks don&#39;t impact rankings in Google News or Google Search.", "posttime": "2020-06-23 00:57:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u8c37\u6b4c", "title": "\u8c37\u6b4c\u5c06\u5f00\u59cb\u4e8b\u5b9e\u6838\u67e5\u8c37\u6b4c\u56fe\u7247", "title_en": "Google To Start Fact-Checking Google Images", "transed": 1, "url": "https://www.axios.com/google-to-start-fact-checking-google-images-b33f19f9-afc9-4316-acb8-021fe4a79857.html", "via": "", "real_tags": ["google", "\u8c37\u6b4c"]}, {"category": "", "categoryclass": "", "imagename": "db7888b2973862728a57dccb1ca8302c.jpg", "infoid": 1007666, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5168\u901f\u524d\u8fdb\u3002\u8bf7\u4e0e\u6211\u4eec\u4e00\u8d77\u53c2\u52a02020\u5e746\u670822\u65e5\u4e0a\u534810\u70b9\u4e3e\u884c\u7684Apple\u7279\u522b\u6d3b\u52a8\u4e3b\u9898\u6f14\u8bb2\u3002PDT\u3002\u8bbe\u7f6e\u63d0\u9192\uff0c\u6211\u4eec\u4f1a\u5728\u6f14\u51fa\u524d\u53d1\u9001\u6700\u65b0\u6d88\u606f\u3002", "note_en": "Full stream ahead. Join us for the Apple Special Event Keynote on June 22, 2020 at 10 a.m. PDT. Set a reminder and we\u2019ll send an update before the show.", "posttime": "2020-06-23 00:56:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,wwdc,\u4e3b\u9898", "title": "Apple WWDC\u4e3b\u9898\u6f14\u8bb2", "title_en": "Apple WWDC Keynote", "transed": 1, "url": "https://youtu.be/GEZhD3J89ZE", "via": "", "real_tags": ["apple", "wwdc", "\u4e3b\u9898"]}, {"category": "", "categoryclass": "", "imagename": "db7888b2973862728a57dccb1ca8302c.jpg", "infoid": 1007665, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5168\u901f\u524d\u8fdb\u3002\u8bf7\u4e0e\u6211\u4eec\u4e00\u8d77\u53c2\u52a02020\u5e746\u670822\u65e5\u4e0a\u534810\u70b9\u4e3e\u884c\u7684Apple\u7279\u522b\u6d3b\u52a8\u4e3b\u9898\u6f14\u8bb2\u3002PDT\u3002\u8bbe\u7f6e\u63d0\u9192\uff0c\u6211\u4eec\u4f1a\u5728\u6f14\u51fa\u524d\u53d1\u9001\u6700\u65b0\u6d88\u606f\u3002", "note_en": "Full stream ahead. Join us for the Apple Special Event Keynote on June 22, 2020 at 10 a.m. PDT. Set a reminder and we\u2019ll send an update before the show.", "posttime": "2020-06-23 00:56:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e3b\u9898,special", "title": "WWDC\u7279\u522b\u6d3b\u52a8\u4e3b\u9898\u6f14\u8bb2\u73b0\u573a", "title_en": "WWDC Special Event Keynote Live", "transed": 1, "url": "https://www.youtube.com/watch?v=GEZhD3J89ZE", "via": "", "real_tags": ["\u4e3b\u9898", "special"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1007663, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u8bfb\u4e86\u201c\u8bc6\u522b\u4e0e\u751f\u6210\u201d\u3002\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u8bfb\u8bfe\u672c\u548c\u5199\u6821\u6837\u90fd\u89c9\u5f97\u7b26\u5408\u2018\u5b66\u4e60\u2019\u7684\u5b9a\u4e49\uff0c\u4e3a\u4ec0\u4e48\u7b80\u5355\u7684\u5c31\u4e0d\u80fd\u505a\u5462\uff1f\u201d\u7b54\u6848\u662f\uff1a\u201c\u8ba4\u53ef\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u7406\u89e3\uff0c\u63a8\u52a8\u4f60\u80fd\u4ea7\u751f\u7684\u4e1c\u897f\u53ef\u4ee5\u5e2e\u52a9\u63ed\u9732\u4f60\u5b9e\u9645\u77e5\u9053\u7684\u4e1c\u897f\u3002\u201d\n\u8fd9\u8ba9\u4eba\u60f3\u8d77\u6770\u592b\u00b7\u970d\u91d1\u65af\u5021\u5bfc\u7684\u201c\u8bb0\u5fc6\u9884\u6d4b\u201d\u6846\u67b6\u3002\u8be5\u6846\u67b6\u8bf4\uff0c\u8bc6\u522b\u662f\u901a\u8fc7\u751f\u6210\u6765\u5b8c\u6210\u7684\u3002\u6765\u81ea\u9876\u7ea7\u751f\u6210\u6a21\u578b\u7684\u9884\u6d4b\u548c\u6765\u81ea\u611f\u5b98\u7684\u89c2\u5bdf\u4e4b\u95f4\u5b58\u5728\u7740\u6301\u7eed\u7684\u5bf9\u8bdd\u3002\u5dee\u5f02\u88ab\u8bb0\u5f55\u4e3a\u4ece\u65e0\u610f\u8bc6\u8df3\u8dc3\u5230\u6709\u610f\u8bc6\u6c34\u5e73\u7684\u610f\u5916\uff1a\n\u5982\u679c\u4f60\u66fe\u7ecf\u5728\u4e00\u6bb5\u697c\u68af\u4e0a\u9519\u8fc7\u4e86\u4e00\u6b65\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u4f60\u6709\u591a\u5feb\u5c31\u610f\u8bc6\u5230\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u4f60\u628a\u811a\u653e\u4f4e\uff0c\u5f53\u5b83\u201c\u7a7f\u8fc7\u201d\u9884\u671f\u7684\u697c\u68af\u8e0f\u677f\u7684\u90a3\u4e00\u523b\uff0c\u4f60\u5c31\u77e5\u9053\u4f60\u6709\u9ebb\u70e6\u4e86\u3002\u811a\u6ca1\u6709\u4efb\u4f55\u611f\u89c9\uff0c\u4f46\u662f\u4f60\u7684\u5927\u8111\u505a\u4e86\u4e00\u4e2a\u9884\u6d4b\uff0c\u8fd9\u4e2a\u9884\u6d4b\u6ca1\u6709\u5b9e\u73b0\u3002\n\u201c\u667a\u529b\u8bba\u201d\uff0c\u7b2c91\u9875\u3002\n\u4e4d\u4e00\u770b\uff0c\u8be5\u6846\u67b6\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u7b26\u5408\u8bc6\u522b\u548c\u751f\u6210\u4e4b\u95f4\u7684\u4e0d\u5bf9\u79f0\u3002\u8fd9\u79cd\u4e0d\u5bf9\u79f0\u6027\u53ef\u4ee5\u901a\u8fc7\u5f3a\u8c03\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\u6765\u89e3\u51b3\uff0c\u5373\u5927\u591a\u6570\u9884\u6d4b\u90fd\u662f\u975e\u7279\u5b9a\u7684\u6216\u201c\u6a21\u7cca\u7684\u201d\u3002\u5982\u679c\u4e00\u7ec4\u9884\u671f\u7ed3\u679c\u4e2d\u7684\u4e00\u4e2a\u53d1\u751f\u4e86\uff0c\u6a21\u7cca\u9884\u6d4b\u4e0d\u4f1a\u5bfc\u81f4\u60ca\u8bb6\u3002\u970d\u91d1\u65af\u627f\u8ba4\u8fd9\u4e00\u89c2\u70b9\uff1a\u201c\u9884\u6d4b\u5e76\u4e0d\u603b\u662f\u51c6\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u5927\u8111\u4f1a\u5bf9\u5373\u5c06\u53d1\u751f\u7684\u4e8b\u60c5\u505a\u51fa\u6982\u7387\u9884\u6d4b\u3002\u6709\u65f6\u6211\u4eec\u786e\u5207\u5730\u77e5\u9053\u5c06\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u6709\u65f6\u6211\u4eec\u7684\u671f\u671b\u5206\u5e03\u5728\u51e0\u79cd\u53ef\u80fd\u6027\u4e4b\u95f4\u3002\u201c\u3002(\u540c\u4e0a\uff0c\u7b2c92\u9875)\u970d\u91d1\u65af\u5728\u4e66\u7684\u5176\u4f59\u90e8\u5206\u6ca1\u6709\u592a\u591a\u5730\u9610\u8ff0\u8fd9\u4e00\u70b9\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u7279\u522b\u662f\uff0c\u5b83\u89e3\u91ca\u4e86\u8bc6\u522b\u548c\u751f\u6210\u4e4b\u95f4\u7684\u4e0d\u5bf9\u79f0\u6027\u3002\n\u56de\u5230\u5b66\u4e60\u6570\u5b66\u7684\u4f8b\u5b50\uff1a\u4e3b\u89c2\u4e0a\uff0c\u5f53\u6211\u8bfb\u5230\u8bc1\u660e\u7684\u65f6\u5019\uff0c\u6211\u611f\u89c9\u6211\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u770b\u5230\u4e0b\u4e00\u884c\u7d27\u968f\u5176\u540e\u7684\u662f\u4e00\u4e2a\u6709\u6548\u7684\u903b\u8f91\u89c4\u5219\u7684\u5e94\u7528\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u6b65\u9aa4\u662f\u4e0e\u6211\u7684\u9884\u671f\u4e00\u81f4\u7684\u4e00\u7ec4\u4e8b\u60c5\u4e4b\u4e00\u3002)\u3002\u7136\u540e\uff0c\u5f53\u6211\u88ab\u8981\u6c42\u91cd\u73b0\u8fd9\u4e00\u6b65\u65f6\uff0c\u6211\u60ca\u8bb6\u5730\u53d1\u73b0\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u505a-\u56e0\u4e3a\u6211\u7684\u9884\u6d4b\u662f\u6a21\u7cca\u7684\uff0c\u6bcf\u4e00\u6b65\u90fd\u6709\u591a\u4ef6\u5408\u7406\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u5230\u5e95\u5e94\u8be5\u505a\u54ea\u4e00\u4ef6\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6211\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u91c7\u53d6\u8bc1\u660e\u4e2d\u7684\u6bcf\u4e00\u6b65\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u552f\u4e00\u5730\u9884\u6d4b\u6bcf\u4e00\u6b65&\u5e76\u4e14\u91cd\u73b0\u8bc1\u660e\u3002\n\u987a\u4fbf\u8bf4\u4e00\u4e0b\u6982\u7387\u9884\u6d4b\u7684\u673a\u5236\uff1a\u5982\u679c\u4f60\u60f3\u8c61\u201c\u6982\u7387\u9884\u6d4b\u201d\u610f\u5473\u7740\u8ba1\u7b97\u6240\u6709\u53ef\u80fd\u7684\u611f\u5b98\u4f53\u9a8c\u7684\u6982\u7387\u5206\u5e03\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u56f0\u96be\u3002\u7136\u800c\uff0c\u6240\u6709\u9700\u8981\u7684\u662f\u201c\u9884\u6d4b\u201d\u662f\u62bd\u8c61\u7684--\u5b83\u8d8a\u62bd\u8c61\uff0c\u4e0e\u4e4b\u4e00\u81f4\u7684\u89c2\u5bdf\u96c6\u5c31\u8d8a\u5927\uff0c\u56e0\u6b64\u4e0e\u4e4b\u9690\u542b\u5173\u8054\u7684\u6982\u7387\u5206\u5e03\u5c31\u8d8a\u5e7f\u3002\u6ca1\u6709\u5fc5\u8981\u5c06\u6982\u7387\u5206\u5e03\u8868\u793a\u4e3a\u5927\u8111\u4e2d\u4f4e\u6c34\u5e73\u611f\u89c9\u533a\u57df\u7684\u6a21\u7cca\u6fc0\u6d3b\u6a21\u5f0f-\u6fc0\u6d3b\u529f\u80fd\u7b49\u6548\u7684\u5355\u4e2a\u5c16\u9510\u7684\u3001\u9ad8\u6c34\u5e73\u7684\u62bd\u8c61\u6807\u7b7e\u4f1a\u66f4\u6709\u6548\u3002\u7136\u540e\uff0c\u5927\u8111\u53ef\u4ee5\u61d2\u60f0\u5730\u8bc4\u4f30\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u89c2\u5bdf\u5230\u7684\u60ca\u559c\u7a0b\u5ea6(\u5373\u6982\u7387)\uff0c\u76f8\u5bf9\u4e8e\u9884\u671f\u3002\n\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u4e00\u53e5\u8bdd\u62b5\u5f97\u4e0a\u4e00\u5343\u5f20\u56fe\u7247\uff1a\u201c\u68d5\u72d7\u201d\u4e0e\u6d77\u91cf\u7684\u56fe\u7247\u662f\u4e00\u81f4\u7684\u3002\u8fd9\u53e5\u8bdd\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u50cf\u662f\u6982\u7387\u5206\u5e03-\u5b83\u770b\u8d77\u6765\u5f88\u5177\u4f53\u3002\u7136\u800c\uff0c\u4ece\u67d0\u79cd\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u5206\u5e03\uff0c\u6d89\u53ca\u72d7\u7684\u5f62\u8c61\u53ef\u80fd\u5177\u6709\u7684\u6240\u6709\u53ef\u80fd\u7684\u5c5e\u6027\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8981\u4f7f\u5176\u5177\u4f53\u5316\uff0c\u5fc5\u987b\u5177\u5907\u8fd9\u4e9b\u5c5e\u6027\u3002\u5f53\u6211\u770b\u5230\u4e00\u53ea\u68d5\u8272\u7684\u72d7\u65f6\uff0c\u6211\u53ef\u80fd\u4f1a\u8ba4\u51fa\u5b83\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4f1a\u753b\u4e00\u53ea\uff0c\u6216\u8005\u6211\u60f3\u8c61\u4e2d\u7684\u90a3\u53ea\u548c\u4f60\u60f3\u8c61\u7684\u5f88\u50cf\u3002\n\u8fd9\u5b9e\u9645\u4e0a\u4e0e\u7edf\u8ba1\u7269\u7406\u6709\u5173\u3002\u6709\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u8fc7\u7a0b\uff0c\u7528\u4e8e\u6784\u5efa\u663e\u5f0f\u6982\u7387\u5206\u5e03\uff0c\u8868\u793a\u4ec5\u77e5\u9053\u9ad8\u7ea7\u62bd\u8c61(\u5728\u672c\u4f8b\u4e2d\uff0c\u662f\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u671f\u671b\u503c\u6216\u201c\u77e9\u201d)\uff0c\u800c\u5206\u5e03\u7684\u6240\u6709\u5176\u4ed6\u7ec6\u8282\u662f\u4e0d\u786e\u5b9a\u7684\u60c5\u51b5\u3002\u6211\u6000\u7591\u5927\u8111\u53ef\u4ee5\u5b8c\u6210\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5c31\u50cf\u72d7\u53ef\u4ee5\u505a\u5fae\u79ef\u5206\u4e00\u6837\u3002(TL\uff1bDR\uff1a\u4ed6\u4eec\u5f53\u7136\u4e0d\u4f1a\uff0c\u4f46\u4ed6\u4eec\u53ef\u4ee5\u8fd1\u4f3c\u5730\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff0c\u4eba\u4eec\u4e5f\u53ef\u4ee5\u7528\u5fae\u79ef\u5206\u63d0\u51fa\u5e76\u6b63\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002)\u3002\n\u5173\u4e8e\u6570\u5b66\u548c\u5fc3\u7406\u6a21\u578b\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u8bc1\u636e\u6216\u63a8\u5bfc\u5c31\u50cf\u6545\u4e8b\u4e00\u6837\uff1a\u4e3b\u4eba\u516c\u88ab\u8fd9\u4e2a\u95ee\u9898\u56f0\u4f4f\u4e86--\u6211\u4eec\u7684\u82f1\u96c4\u6709\u516c\u7406\u548c\u89c4\u5219(\u8bbe\u7f6e)\uff0c\u5979\u60f3\u8981\u5f97\u5230\u7ed3\u679c\uff0c\u4f46\u4e0d\u7acb\u5373\u77e5\u9053\u5982\u4f55\u5f97\u5230\u7ed3\u679c(\u51b2\u7a81)\u3002\u7136\u540e\u5979\u8bb0\u8d77\u4e86\u8fd9\u4e2a\u5f88\u9177\u7684\u628a\u620f(\u6bd4\u5982\u533a\u5206\u88ab\u79ef\u51fd\u6570)\uff0c\u77a7\uff0c\u95ee\u9898\u89e3\u51b3\u4e86(\u89e3\u51b3\u65b9\u6848)\u3002\u6211\u6000\u7591\u8fd9\u4e2a\u6846\u67b6\u6709\u52a9\u4e8e\u56de\u5fc6\u3002\u5b83\u8fd8\u5c06\u91cd\u70b9\u653e\u5728\u4e3a\u4ec0\u4e48\u8981\u505a\u6bcf\u4e00\u6b65(\u9009\u62e9\u6b65\u9aa4\u7684\u76f4\u89c9)\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5982\u4f55\u505a(\u5373\u8bc1\u660e\u6b65\u9aa4\u5408\u7406\u7684\u89c4\u5219)\u3002", "note_en": "I recently read \u201c Recognizing vs Generating.\u201d The author poses the question, \u201cboth reading the textbook and writing proofs feel like they fit the definition \u2018studying\u2019, so why can\u2019t the easier one work?\u201d The answer: \u201cRecognition does not necessarily imply understanding, and pushing for something you can Generate can help expose what you actually know.\u201d\n This brings to mind the \u201c memory-prediction\u201d framework promoted by Jeff Hawkins. The framework says that recognizing is  accomplished by generating. There is a continual dialogue between predictions coming from top-level generative modeling and observations coming from the senses. Discrepancies are registered as surprises that leap from the unconscious to the conscious level:\n If you have ever missed a step on a flight of stairs, you know how quickly you realize something is wrong. You lower your foot and the moment it \u201cpasses through\u201d the anticipated stair tread you know you are in trouble. The foot doesn\u2019t feel anything, but your brain made a prediction and the prediction was not met.\n \u201cOn Intelligence\u201d, p91\n At first glance, the framework doesn\u2019t accord well with an asymmetry between recognizing &amp; generating. The asymmetry  can be accommodated, by emphasizing the fact that most predictions are non-specific or \u2018fuzzy.\u2019 A fuzzy prediction doesn\u2019t result in surprise if  one of a set of expected outcomes occurs. Hawkins acknowledges this idea: \u201cPrediction is not always exact. Rather, our minds make probabilistic predictions concerning what is about to happen. Sometimes we know exactly what is going to happen, other times our expectations are distributed among several possibilities.\u201d (ibid, p92) Hawkins doesn\u2019t make much of this point in the rest of the book, but it seems crucial to me. In particular, it explains the asymmetry between recognition and generation.\n To return to the illustration of studying math: subjectively, I feel like I know what is going on when I read the proof, because I can see that the next line follows by application of a valid logical rule. (That is, the step is among the set of things consistent with my expectations.) Then, when I am called on to reproduce the step, I am surprised to find that I don\u2019t know how \u2014 because my prediction is fuzzy, there are multiple reasonable things to do at each step, but I don\u2019t know exactly which one I should do. If on the other hand, I know  why each particular step in the proof was taken, then I can uniquely predict each one &amp; reproduce the proof.\n An aside about the mechanism of probabilistic predictions: it sounds difficult if you imagine that \u201cprobabilistic predictions\u201d means calculating a probability distribution over all possible sensory experiences. However, all that is necessary is for the \u2018prediction\u2019 to be abstract \u2014 the more abstract it is, the larger the set of observations consistent with it, hence the wider the probability distribution that is  implicitly associated with it. It\u2019s not necessary to represent the probability distribution as a blurry activation pattern in the brain at the low-level sensory areas \u2014 it is more efficient to activate a single sharp, high-level abstract label which is functionally equivalent. The brain can then lazily evaluate the degree of surprise (ie, the probability) of whatever observation occurs, with respect to the expectation.\n In this sense, a word is worth a thousand pictures: \u201cbrown dog\u201d is consistent with a huge number of images. That phrase may not seem like a probability distribution \u2014 it seems pretty specific. However, from a certain perspective, it\u2019s a blank distribution over all the possible attributes that an image of a dog could have, and in fact  would be required to have in order to be made concrete. I may know a brown dog when I see one, but it doesn\u2019t mean I can draw one, or that the one I\u2019m imagining is much like the one you imagine.\n This actually connects to statistical physics. There\u2019s a  well-defined procedure for constructing explicit probability distributions representing the situation where only a high-level abstraction (in this case, the expectation value or \u2018moment\u2019 of a function of the random variables) is known, and all other details of the distribution are uncertain. I suspect that the brain can accomplish something like this, in much the same way that  dogs can do calculus. (TL;DR: of course they don\u2019t, but they can approximate the solution to a problem that one could also pose and formally solve using calculus.)\n As another aside about math &amp; mental models, I\u2019ve always thought of proofs or derivations like stories: the protagonist is stuck with this problem \u2014 our hero has the axioms and the rules (setup), she wants to get to the result, but doesn\u2019t immediately know how (conflict). Then she remember this cool trick (like differentiating the integrand) and voila, problem solved (resolution). I suspect this framing helps with recall. It also puts the focus on  why each step is done (the intuition for choosing the step), not just  how (ie, the rule that justifies the step).", "posttime": "2020-06-23 00:19:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb0\u5fc6,prediction,\u9884\u6d4b", "title": "\u8bb0\u5fc6\u9884\u6d4b\u4e0d\u5bf9\u79f0", "title_en": "Memory-Prediction Asymmetry", "transed": 1, "url": "https://heteroskedasticblog.wordpress.com/2020/06/21/memory-prediction-asymmetry/", "via": "", "real_tags": ["\u8bb0\u5fc6", "\u9884\u6d4b"]}, {"category": "", "categoryclass": "", "imagename": "7c83256d6ac63694f9a33359e22a432e.jpg", "infoid": 1007661, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ebf\u6027\u89c4\u5212\u662f\u6570\u5b66\u89c4\u5212\u4e2d\u4f7f\u7528\u7684\u4e00\u7ec4\u6280\u672f\uff0c\u6709\u65f6\u4e5f\u79f0\u4e3a\u6570\u5b66\u4f18\u5316\uff0c\u7528\u4e8e\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u548c\u4e0d\u7b49\u5f0f\u7cfb\u7edf\uff0c\u540c\u65f6\u6700\u5927\u5316\u6216\u6700\u5c0f\u5316\u67d0\u4e9b\u7ebf\u6027\u51fd\u6570\u3002\u5b83\u5728\u79d1\u5b66\u8ba1\u7b97\u3001\u7ecf\u6d4e\u3001\u6280\u672f\u79d1\u5b66\u3001\u5236\u9020\u3001\u4ea4\u901a\u3001\u519b\u4e8b\u3001\u7ba1\u7406\u3001\u80fd\u6e90\u7b49\u9886\u57df\u90fd\u5f88\u91cd\u8981\u3002\nPython\u751f\u6001\u7cfb\u7edf\u4e3a\u7ebf\u6027\u7f16\u7a0b\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5168\u9762\u800c\u5f3a\u5927\u7684\u5de5\u5177\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u7b80\u5355\u548c\u590d\u6742\u7684\u5de5\u5177\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u514d\u8d39\u7684\u548c\u5546\u4e1a\u7684\u5de5\u5177\u3002\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u7684\u9700\u8981\u3002\n\u60a8\u5c06\u9996\u5148\u4e86\u89e3\u7ebf\u6027\u89c4\u5212\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u7136\u540e\uff0c\u60a8\u5c06\u63a2\u7d22\u5982\u4f55\u5728Python\u4e2d\u5b9e\u73b0\u7ebf\u6027\u7f16\u7a0b\u6280\u672f\u3002\u6700\u540e\uff0c\u60a8\u5c06\u67e5\u770b\u8d44\u6e90\u548c\u5e93\u6765\u5e2e\u52a9\u60a8\u8fdb\u4e00\u6b65\u4e86\u89e3\u7ebf\u6027\u7f16\u7a0b\u4e4b\u65c5\u3002\n\u514d\u8d39\u5956\u52b1\uff1a\u5173\u4e8ePython\u638c\u63e1\u76845\u70b9\u60f3\u6cd5\uff0c\u8fd9\u662f\u4e00\u95e8\u9762\u5411Python\u5f00\u53d1\u4eba\u5458\u7684\u514d\u8d39\u8bfe\u7a0b\uff0c\u5b83\u5411\u60a8\u5c55\u793a\u4e86\u5c06Python\u6280\u80fd\u63d0\u5347\u5230\u66f4\u9ad8\u6c34\u5e73\u6240\u9700\u7684\u8def\u7ebf\u56fe\u548c\u5fc3\u6001\u3002\n\u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u7ebf\u6027\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\u4ee5\u53ca\u76f8\u5173\u5b66\u79d1\u6df7\u5408\u6574\u6570\u7ebf\u6027\u7f16\u7a0b\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e9b\u5b9e\u7528\u7684\u7ebf\u6027\u7f16\u7a0b\u793a\u4f8b\u3002\u7a0d\u540e\uff0c\u60a8\u5c06\u4f7f\u7528Python\u89e3\u51b3\u7ebf\u6027\u89c4\u5212\u548c\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6709\u4e00\u4e2a\u7531\u7ebf\u6027\u65b9\u7a0b\u548c\u4e0d\u7b49\u5f0f\u7ec4\u6210\u7684\u7cfb\u7edf\u3002\u8fd9\u6837\u7684\u7cfb\u7edf\u901a\u5e38\u6709\u8bb8\u591a\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7ebf\u6027\u89c4\u5212\u662f\u4e00\u7ec4\u6570\u5b66\u548c\u8ba1\u7b97\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u627e\u5230\u6b64\u7cfb\u7edf\u7684\u7279\u5b9a\u89e3\uff0c\u8be5\u89e3\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u5176\u4ed6\u7ebf\u6027\u51fd\u6570\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002\n\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u662f\u7ebf\u6027\u89c4\u5212\u7684\u63a8\u5e7f\u3002\u5b83\u5904\u7406\u81f3\u5c11\u6709\u4e00\u4e2a\u53d8\u91cf\u53d6\u79bb\u6563\u6574\u6570\u800c\u4e0d\u662f\u8fde\u7eed\u503c\u7684\u95ee\u9898\u3002\u867d\u7136\u6df7\u5408\u6574\u6570\u95ee\u9898\u4e4d\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u8fde\u7eed\u53d8\u91cf\u95ee\u9898\uff0c\u4f46\u5b83\u4eec\u5728\u7075\u6d3b\u6027\u548c\u7cbe\u786e\u5ea6\u65b9\u9762\u5177\u6709\u663e\u8457\u7684\u4f18\u52bf\u3002\n\u6574\u6570\u53d8\u91cf\u5bf9\u4e8e\u6b63\u786e\u8868\u793a\u7528\u6574\u6570\u81ea\u7136\u8868\u793a\u7684\u6570\u91cf\u975e\u5e38\u91cd\u8981\uff0c\u4f8b\u5982\u751f\u4ea7\u7684\u98de\u673a\u6570\u91cf\u6216\u670d\u52a1\u7684\u5ba2\u6237\u6570\u91cf\u3002\n\u4e00\u79cd\u7279\u522b\u91cd\u8981\u7684\u6574\u6570\u53d8\u91cf\u662f\u4e8c\u8fdb\u5236\u53d8\u91cf\u3002\u5b83\u53ea\u80fd\u53d60\u62161\u7684\u503c\uff0c\u5728\u505a\u51fa\u662f\u6216\u5426\u7684\u51b3\u5b9a\u65f6\u5f88\u6709\u7528\uff0c\u6bd4\u5982\u662f\u5426\u5e94\u8be5\u5efa\u9020\u4e00\u5ea7\u5de5\u5382\uff0c\u6216\u8005\u662f\u5426\u5e94\u8be5\u6253\u5f00\u6216\u5173\u95ed\u4e00\u53f0\u673a\u5668\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u6a21\u62df\u903b\u8f91\u7ea6\u675f\u3002\n\u7ebf\u6027\u89c4\u5212\u662f\u4e00\u79cd\u57fa\u672c\u7684\u4f18\u5316\u6280\u672f\uff0c\u5728\u79d1\u5b66\u548c\u6570\u5b66\u5bc6\u96c6\u578b\u9886\u57df\u5df2\u7ecf\u4f7f\u7528\u4e86\u51e0\u5341\u5e74\u3002\u5b83\u7cbe\u786e\u3001\u76f8\u5bf9\u5feb\u901f\uff0c\u9002\u5408\u4e8e\u4e00\u7cfb\u5217\u5b9e\u9645\u5e94\u7528\u3002\n\u6df7\u5408\u6574\u6570\u7ebf\u6027\u7f16\u7a0b\u5141\u8bb8\u60a8\u514b\u670d\u7ebf\u6027\u7f16\u7a0b\u7684\u8bb8\u591a\u9650\u5236\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\u8fd1\u4f3c\u975e\u7ebf\u6027\u51fd\u6570\u3001\u4f7f\u7528\u534a\u8fde\u7eed\u53d8\u91cf\u3001\u5efa\u7acb\u903b\u8f91\u7ea6\u675f\u6a21\u578b\u7b49\u3002\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u7684\u5de5\u5177\uff0c\u4f46\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u8fdb\u6b65\u4f7f\u5b83\u6bcf\u5929\u90fd\u66f4\u9002\u7528\u3002\n\u901a\u5e38\uff0c\u5f53\u4eba\u4eec\u8bd5\u56fe\u63cf\u8ff0\u548c\u89e3\u51b3\u4f18\u5316\u95ee\u9898\u65f6\uff0c\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u4ed6\u4eec\u662f\u5426\u53ef\u4ee5\u5e94\u7528\u7ebf\u6027\u89c4\u5212\u6216\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u3002\n\u4e0b\u9762\u7684\u6587\u7ae0\u8bf4\u660e\u4e86\u7ebf\u6027\u89c4\u5212\u548c\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u7684\u4e00\u4e9b\u4f7f\u7528\u6848\u4f8b\uff1a\n\u968f\u7740\u8ba1\u7b97\u673a\u80fd\u529b\u7684\u63d0\u9ad8\u3001\u7b97\u6cd5\u7684\u6539\u8fdb\u4ee5\u53ca\u7528\u6237\u53cb\u597d\u7684\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u7684\u51fa\u73b0\uff0c\u7ebf\u6027\u89c4\u5212(\u5c24\u5176\u662f\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212)\u7684\u91cd\u8981\u6027\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u52a0\u3002\n\u89e3\u51b3\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7684\u57fa\u672c\u65b9\u6cd5\u79f0\u4e3a\u5355\u7eaf\u5f62\u6cd5\uff0c\u5b83\u6709\u51e0\u79cd\u53d8\u4f53\u3002\u53e6\u4e00\u79cd\u6d41\u884c\u7684\u65b9\u6cd5\u662f\u5185\u70b9\u6cd5\u3002\n\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u662f\u7528\u66f4\u590d\u6742\u548c\u8ba1\u7b97\u5bc6\u96c6\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u7684\uff0c\u6bd4\u5982\u5206\u652f\u5b9a\u754c\u6cd5\uff0c\u5b83\u5728\u5f15\u64ce\u76d6\u4e0b\u4f7f\u7528\u7ebf\u6027\u89c4\u5212\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e9b\u53d8\u4f53\u662f\u5206\u652f\u5207\u5272\u6cd5\uff0c\u5b83\u6d89\u53ca\u5230\u5207\u5272\u5e73\u9762\u7684\u4f7f\u7528\uff0c\u4ee5\u53ca\u5206\u652f\u4ef7\u683c\u6cd5\u3002\n\u6709\u51e0\u4e2a\u9002\u7528\u4e14\u5e7f\u4e3a\u4eba\u77e5\u7684Python\u5de5\u5177\u53ef\u7528\u4e8e\u7ebf\u6027\u7f16\u7a0b\u548c\u6df7\u5408\u6574\u6570\u7ebf\u6027\u7f16\u7a0b\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u5f00\u6e90\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u662f\u4e13\u6709\u7684\u3002\u60a8\u662f\u5426\u9700\u8981\u514d\u8d39\u6216\u4ed8\u8d39\u5de5\u5177\u53d6\u51b3\u4e8e\u95ee\u9898\u7684\u5927\u5c0f\u548c\u590d\u6742\u7a0b\u5ea6\uff0c\u4ee5\u53ca\u5bf9\u901f\u5ea6\u548c\u7075\u6d3b\u6027\u7684\u9700\u6c42\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u51e0\u4e4e\u6240\u6709\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ebf\u6027\u7f16\u7a0b\u548c\u6df7\u5408\u6574\u6570\u7ebf\u6027\u7f16\u7a0b\u5e93\u90fd\u662f\u7531Fortran\u3001C\u6216C++\u539f\u751f\u7f16\u5199\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u7ebf\u6027\u89c4\u5212\u9700\u8981\u8ba1\u7b97\u5bc6\u96c6\u7684\u77e9\u9635(\u901a\u5e38\u5f88\u5927)\u3002\u8fd9\u6837\u7684\u5e93\u79f0\u4e3a\u6c42\u89e3\u5668\u3002Python\u5de5\u5177\u53ea\u662f\u89e3\u7b97\u5668\u7684\u5305\u88c5\u5668\u3002\nPython\u9002\u5408\u4e8e\u56f4\u7ed5\u672c\u673a\u5e93\u6784\u5efa\u5305\u88c5\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u4e0eC/C++\u914d\u5408\u4f7f\u7528\u3002\u672c\u6559\u7a0b\u4e0d\u9700\u8981\u4efb\u4f55C/C++(\u6216Fortran)\uff0c\u4f46\u662f\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e00\u5f88\u9177\u7684\u529f\u80fd\uff0c\u8bf7\u67e5\u770b\u4ee5\u4e0b\u8d44\u6e90\uff1a\n\u57fa\u672c\u4e0a\uff0c\u5f53\u60a8\u5b9a\u4e49\u548c\u6c42\u89e3\u6a21\u578b\u65f6\uff0c\u60a8\u4f7f\u7528Python\u51fd\u6570\u6216\u65b9\u6cd5\u6765\u8c03\u7528\u6267\u884c\u5b9e\u9645\u4f18\u5316\u5de5\u4f5c\u5e76\u5c06\u89e3\u51b3\u65b9\u6848\u8fd4\u56de\u7ed9Python\u5bf9\u8c61\u7684\u4f4e\u7ea7\u5e93\u3002\n\u51e0\u4e2a\u514d\u8d39\u7684Python\u5e93\u4e13\u95e8\u7528\u4e8e\u4e0e\u7ebf\u6027\u6216\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\u89e3\u7b97\u5668\u4ea4\u4e92\uff1a\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528SciPy\u548cPULT\u6765\u5b9a\u4e49\u548c\u89e3\u51b3\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u3002\n\u4e0e\u8d44\u6e90\u5206\u914d\u76f8\u5173\u7684\u5b9e\u9645\u95ee\u9898\uff0c\u5b83\u8bf4\u660e\u4e86\u73b0\u5b9e\u4e16\u754c\u65b9\u6848\u4e2d\u7684\u7ebf\u6027\u89c4\u5212\u6982\u5ff5\u3002\n\u5982\u679c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u6ca1\u6709\u89e3\uff0c\u5b83\u5c31\u662f\u4e0d\u53ef\u884c\u7684\u3002\u5f53\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u540c\u65f6\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u65f6\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u4f8b\u5982\uff0c\u8003\u8651\u5982\u679c\u6dfb\u52a0\u7ea6\u675fx+y\u2264\u22121\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e00\u4e2a\u51b3\u7b56\u53d8\u91cf(x\u6216y)\u5fc5\u987b\u4e3a\u8d1f\u3002\u8fd9\u4e0e\u7ed9\u5b9a\u7684\u7ea6\u675fx\u22650\u548cy\u22650\u51b2\u7a81\u3002\u8fd9\u6837\u7684\u7cfb\u7edf\u6ca1\u6709\u53ef\u884c\u7684\u65b9\u6848\uff0c\u6240\u4ee5\u53eb\u4e0d\u53ef\u884c\u3002\n\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\u6dfb\u52a0\u4e0e\u7eff\u7ebf\u5e73\u884c\u7684\u7b2c\u4e8c\u4e2a\u76f8\u7b49\u7ea6\u675f\u3002\u8fd9\u4e24\u6761\u7ebf\u6ca1\u6709\u5171\u540c\u70b9\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u7ea6\u675f\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4e00\u4e2a\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u662f\u65e0\u754c\u7684\uff0c\u5982\u679c\u5b83\u7684\u53ef\u884c\u57df\u4e0d\u662f\u6709\u754c\u7684\uff0c\u89e3\u4e5f\u4e0d\u662f\u6709\u9650\u7684\u3002\u8fd9\u610f\u5473\u7740\u60a8\u7684\u53d8\u91cf\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u4e0d\u53d7\u7ea6\u675f\u7684\uff0c\u53ef\u4ee5\u8fbe\u5230\u6b63\u65e0\u7a77\u5927\u6216\u8d1f\u65e0\u7a77\u5927\uff0c\u4ece\u800c\u4f7f\u76ee\u6807\u4e5f\u662f\u65e0\u9650\u7684\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u91c7\u7528\u4e0a\u9762\u7684\u521d\u59cb\u95ee\u9898\uff0c\u5e76\u5220\u9664\u7ea2\u8272\u548c\u9ec4\u8272\u7ea6\u675f\u3002\u628a\u7ea6\u675f\u4ece\u95ee\u9898\u4e2d\u53bb\u6389\u5c31\u53eb\u505a\u653e\u677e\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cx\u548cy\u4e0d\u4f1a\u5728\u6b63\u503c\u4e0a\u6709\u754c\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u589e\u52a0\u5230\u6b63\u65e0\u7a77\u5927\uff0c\u4ece\u800c\u4ea7\u751f\u65e0\u9650\u5927\u7684z\u503c\u3002\n\u5728\u524d\u9762\u7684\u5c0f\u8282\u4e2d\uff0c\u60a8\u770b\u5230\u4e86\u4e00\u4e2a\u62bd\u8c61\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u8be5\u95ee\u9898\u4e0e\u4efb\u4f55\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u90fd\u4e0d\u76f8\u5173\u3002\u5728\u8fd9\u4e00\u5c0f\u8282\u4e2d\uff0c\u60a8\u5c06\u53d1\u73b0\u4e00\u4e2a\u4e0e\u5236\u9020\u4e1a\u8d44\u6e90\u5206\u914d\u76f8\u5173\u7684\u66f4\u5177\u4f53\u3001\u66f4\u5b9e\u7528\u7684\u4f18\u5316\u95ee\u9898\u3002\n\u5047\u8bbe\u4e00\u5bb6\u5de5\u5382\u751f\u4ea7\u56db\u79cd\u4e0d\u540c\u7684\u4ea7\u54c1\uff0c\u7b2c\u4e00\u79cd\u4ea7\u54c1\u7684\u65e5\u751f\u4ea7\u91cf\u662fx\u2081\uff0c\u7b2c\u4e8c\u79cd\u4ea7\u54c1\u7684\u65e5\u751f\u4ea7\u91cf\u662fx\u2082\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u76ee\u6807\u662f\u786e\u5b9a\u6bcf\u79cd\u4ea7\u54c1\u7684\u5229\u6da6\u6700\u5927\u5316\u65e5\u751f\u4ea7\u91cf\uff0c\u540c\u65f6\u7262\u8bb0\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\u7b2c\u4e00\u4e2a\u3001\u7b2c\u4e8c\u4e2a\u3001\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u4ea7\u54c1\u7684\u5355\u4f4d\u4ea7\u54c1\u5229\u6da6\u5206\u522b\u4e3a20\u7f8e\u5143\u300112\u7f8e\u5143\u300140\u7f8e\u5143\u548c25\u7f8e\u5143\u3002\n\u7531\u4e8e\u4eba\u529b\u6240\u9650\uff0c\u6bcf\u5929\u7684\u603b\u4ea7\u91cf\u4e0d\u80fd\u8d85\u8fc750\u53f0\u3002\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4ea7\u54c1\u7684\u6bcf\u5355\u4f4d\uff0c\u6d88\u8017\u4e09\u4e2a\u5355\u4f4d\u7684\u539f\u6750\u6599A\u3002\u7b2c\u4e8c\u4e2a\u4ea7\u54c1\u7684\u6bcf\u5355\u4f4d\u9700\u8981\u4e00\u4e2a\u5355\u4f4d\u7684\u539f\u6599A\u548c\u4e24\u4e2a\u5355\u4f4d\u7684\u539f\u6599B\u3002\u7b2c\u4e09\u4e2a\u4ea7\u54c1\u7684\u6bcf\u4e2a\u5355\u4f4d\u9700\u8981\u4e00\u4e2a\u5355\u4f4d\u7684A\u548c\u4e24\u4e2a\u5355\u4f4d\u7684B\u3002\u6700\u540e\uff0c\u7b2c\u56db\u4e2a\u4ea7\u54c1\u7684\u6bcf\u4e2a\u5355\u4f4d\u9700\u8981\u4e09\u4e2a\u5355\u4f4d\u7684B\u3002\n\u7531\u4e8e\u8fd0\u8f93\u548c\u50a8\u5b58\u7684\u9650\u5236\uff0c\u5de5\u5382\u6bcf\u5929\u53ef\u4ee5\u6d88\u8017\u591a\u8fbe100\u4e2a\u5355\u4f4d\u7684\u539f\u6750\u6599A\u548c90\u4e2a\u5355\u4f4d\u7684B\u3002\n\u76ee\u6807\u51fd\u6570(\u5229\u6da6)\u5728\u6761\u4ef61\u4e2d\u5b9a\u4e49\uff0c\u4eba\u529b\u7ea6\u675f\u6765\u6e90\u4e8e\u6761\u4ef62\uff0c\u5bf9\u539f\u6750\u6599A\u548cB\u7684\u7ea6\u675f\u53ef\u4ee5\u4ece\u6761\u4ef63\u548c\u6761\u4ef64\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u4ea7\u54c1\u7684\u539f\u6750\u6599\u9700\u6c42\u6c42\u548c\u5f97\u5230\u3002\n\u6700\u540e\uff0c\u4ea7\u54c1\u6570\u91cf\u4e0d\u80fd\u4e3a\u8d1f\uff0c\u56e0\u6b64\u6240\u6709\u51b3\u7b56\u53d8\u91cf\u5fc5\u987b\u5927\u4e8e\u6216\u7b49\u4e8e\u96f6\u3002\n\u4e0e\u524d\u9762\u7684\u793a\u4f8b\u4e0d\u540c\uff0c\u60a8\u4e0d\u80fd\u65b9\u4fbf\u5730\u53ef\u89c6\u5316\u8fd9\u4e2a\u793a\u4f8b\uff0c\u56e0\u4e3a\u5b83\u6709\u56db\u4e2a\u51b3\u7b56\u53d8\u91cf\u3002\u7136\u800c\uff0c\u65e0\u8bba\u95ee\u9898\u7684\u7ef4\u5ea6\u5982\u4f55\uff0c\u539f\u5219\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528\u4e24\u4e2aPython\u5305\u6765\u89e3\u51b3\u4e0a\u8ff0\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff1a\n\u672c\u7f51\u7ad9\u7684\u8bbe\u7f6e\u5f88\u7b80\u5355\u3002\u4e00\u65e6\u60a8\u5b89\u88c5\u4e86\u5b83\uff0c\u60a8\u5c31\u62e5\u6709\u4e86\u542f\u52a8\u6240\u9700\u7684\u4e00\u5207\u3002\u5b83\u7684\u5b50\u5305scipy.Optimize\u65e2\u53ef\u4ee5\u7528\u4e8e\u7ebf\u6027\u4f18\u5316\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u975e\u7ebf\u6027\u4f18\u5316\u3002\n\u7eb8\u6d46\u53ef\u4ee5\u8ba9\u4f60\u9009\u62e9\u89e3\u7b97\u5668\uff0c\u5e76\u4ee5\u66f4\u81ea\u7136\u7684\u65b9\u5f0f\u8868\u8fbe\u95ee\u9898\u3002\u7eb8\u6d46\u4f7f\u7528\u7684\u9ed8\u8ba4\u89e3\u7b97\u5668\u662f\u786c\u5e01\u6216\u5206\u652f\u548c\u5207\u5272\u89e3\u7b97\u5668(CBC)\u3002\u5b83\u8fde\u63a5\u5230\u7528\u4e8e\u7ebf\u6027\u677e\u5f1b\u7684\u786c\u5e01\u6216\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u5668(CLP)\u548c\u7528\u4e8e\u5207\u5272\u751f\u6210\u7684\u786c\u5e01\u6216\u5207\u5272\u751f\u6210\u5668\u5e93(CGL)\u3002\n\u53e6\u4e00\u4e2a\u5f88\u68d2\u7684\u5f00\u6e90\u89e3\u7b97\u5668\u662fGNU\u7ebf\u6027\u7f16\u7a0b\u5de5\u5177\u5305(GLPK)\u3002\u4e00\u4e9b\u8457\u540d\u4e14\u975e\u5e38\u5f3a\u5927\u7684\u5546\u4e1a\u548c\u4e13\u6709\u89e3\u51b3\u65b9\u6848\u6709Gurobi\u3001CPLEX\u548cXPRESS\u3002\n\u9664\u4e86\u5728\u5b9a\u4e49\u95ee\u9898\u65f6\u63d0\u4f9b\u7075\u6d3b\u6027\u548c\u8fd0\u884c\u5404\u79cd\u6c42\u89e3\u5668\u7684\u80fd\u529b\u5916\uff0c\u4e0ePyomo\u6216CVXOPT\u7b49\u9700\u8981\u66f4\u591a\u65f6\u95f4\u548c\u7cbe\u529b\u6765\u638c\u63e1\u7684\u66ff\u4ee3\u65b9\u6848\u76f8\u6bd4\uff0cMPOT\u4f7f\u7528\u8d77\u6765\u4e0d\u90a3\u4e48\u590d\u6742\u3002\n\u8981\u5b66\u4e60\u672c\u6559\u7a0b\uff0c\u60a8\u9700\u8981\u5b89\u88c5SciPy\u548cPULT\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u7248\u672c1.4.1\u7684SciPy\u548c\u7248\u672c2.1\u7684MPT\u3002\n\u60a8\u53ef\u80fd\u9700\u8981\u8fd0\u884cPulptest\u6216sudo Pulptest\u624d\u80fd\u542f\u7528\u7eb8\u6d46\u7684\u9ed8\u8ba4\u89e3\u7b97\u5668\uff0c\u7279\u522b\u662f\u5728\u4f7f\u7528Linux\u6216Mac\u65f6\uff1a\n\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u3001\u5b89\u88c5\u548c\u4f7f\u7528GLPK\u3002\u5b83\u662f\u514d\u8d39\u548c\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u5728Windows\u3001MacOS\u548cLinux\u4e0a\u8fd0\u884c\u3002\u5728\u672c\u6559\u7a0b\u540e\u9762\u7684\u90e8\u5206\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u5982\u4f55\u5bf9\u7eb8\u6d46\u4f7f\u7528GLPK(\u9664\u4e86CBC\u4e4b\u5916)\u3002\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605GLPK\u5173\u4e8e\u4f7f\u7528Windows\u53ef\u6267\u884c\u6587\u4ef6\u548cLinux\u5305\u5b89\u88c5\u7684\u6559\u7a0b\u3002\n\u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528SciPy\u4f18\u5316\u548c\u5bfb\u6839\u5e93\u8fdb\u884c\u7ebf\u6027\u7f16\u7a0b\u3002\nlinprog()\u53ea\u89e3\u51b3\u6700\u5c0f\u5316(\u800c\u4e0d\u662f\u6700\u5927\u5316)\u95ee\u9898\uff0c\u4e0d\u5141\u8bb8\u5e26\u6709\u5927\u4e8e\u6216\u7b49\u4e8e\u7b26\u53f7(\u2265)\u7684\u4e0d\u7b49\u5f0f\u7ea6\u675f\u3002\u8981\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u60a8\u9700\u8981\u5728\u5f00\u59cb\u4f18\u5316\u4e4b\u524d\u4fee\u6539\u95ee\u9898\uff1a\n\u60a8\u53ef\u4ee5\u6700\u5c0f\u5316z=x+2y\u7684\u8d1f\u503c(\u2212z=\u2212x\u22122y)\uff0c\u800c\u4e0d\u662f\u6700\u5927\u5316z=x+2y\u3002\n\u53ef\u4ee5\u5c06\u9ec4\u8272\u4e0d\u7b49\u5f0f\u4e58\u4ee5\u22121\uff0c\u5f97\u5230\u76f8\u53cd\u7684\u5c0f\u4e8e\u6216\u7b49\u4e8e\u7b26\u53f7(\u2264)\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5927\u4e8e\u6216\u7b49\u4e8e\u7b26\u53f7\u3002\n\u8fd9\u4e2a\u7cfb\u7edf\u7b49\u540c\u4e8e\u539f\u6765\u7684\u7cfb\u7edf\uff0c\u5e76\u4e14\u4f1a\u6709\u76f8\u540c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5e94\u7528\u8fd9\u4e9b\u6539\u53d8\u7684\u552f\u4e00\u539f\u56e0\u662f\u4e3a\u4e86\u514b\u670d\u4e0e\u95ee\u9898\u8868\u8ff0\u76f8\u5173\u7684\u672c\u79d1\u5b66\u8ba1\u5212\u7684\u5c40\u9650\u6027\u3002\n&gt\uff1b&gt\uff1bobj=[-1\uff0c-2]&gt\uff1b&gt\uff1b&gt\uff1b#\u2500\u252c\u2500\u252c&gt\uff1b&gt\uff1b&gt\uff1b#y&gt\uff1b&gt\uff1b&gt\uff1b#x&gt\uff1b&gt\uff1b&gt\uff1b#\u2502\u2514\u2524\u7cfb\u6570\u3002lhs_ineq=[[2\uff0c1]\uff0c#\u7ea2\u8272\u7ea6\u675f\u5de6\u4fa7.[-4\uff0c5]\uff0c#\u84dd\u8272\u7ea6\u675f\u5de6\u4fa7.[1\uff0c-2]]#\u9ec4\u8272\u7ea6\u675f\u5de6\u4fa7&gt\uff1b&gt\uff1b&gt\uff1brhs_ineq=[20\uff0c#\u7ea2\u8272\u7ea6\u675f\u53f3\u4fa7.10\uff0c#\u84dd\u8272\u7ea6\u675f\u53f3\u4fa7.2]#\u9ec4\u8272\u7ea6\u675f\u53f3\u4fa7&gt\uff1b&gt\uff1blhs_eq=[[-1\uff0c5]]#\u7eff\u8272\u7ea6\u675f\u5de6\u4fa7&gt\uff1b&gt\uff1b&gt\uff1brhs_eq=[15]#\u7eff\u8272\u7ea6\u675f\u53f3\u4fa7\u3002\n\u60a8\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u7cfb\u7edf\u4e2d\u7684\u503c\u653e\u5165\u76f8\u5e94\u7684\u5217\u8868\u3001\u5143\u7ec4\u6216NumPy\u6570\u7ec4\u4e2d\uff1a\n\u7ea6\u675f\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u884c\u987a\u5e8f\u5fc5\u987b\u76f8\u540c\u3002\u6bcf\u884c\u4ee3\u8868\u4e00\u4e2a\u7ea6\u675f\u3002\n\u6765\u81ea\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u5de6\u4fa7\u7684\u7cfb\u6570\u7684\u987a\u5e8f\u5fc5\u987b\u5339\u914d\u3002\u6bcf\u5217\u5bf9\u5e94\u4e8e\u5355\u4e2a\u51b3\u7b56\u53d8\u91cf\u3002\n\u4e0b\u4e00\u6b65\u662f\u4ee5\u4e0e\u7cfb\u6570\u76f8\u540c\u7684\u987a\u5e8f\u5b9a\u4e49\u6bcf\u4e2a\u53d8\u91cf\u7684\u754c\u9650\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u90fd\u5728\u96f6\u548c\u6b63\u65e0\u7a77\u5927\u4e4b\u95f4\uff1a\n&gt\uff1b&gt\uff1bbnd=[(0\uff0cFloat(&#34\uff1binf&#34\uff1b))\uff0c#x\u7684\u8fb9\u754c.(0\uff0cFloat(&#34\uff1binf&#34\uff1b))]#y\u7684\u8fb9\u754c\u3002\n\u8be5\u8bed\u53e5\u662f\u591a\u4f59\u7684\uff0c\u56e0\u4e3alinprog()\u5728\u7f3a\u7701\u60c5\u51b5\u4e0b\u63a5\u53d7\u8fd9\u4e9b\u754c\u9650(\u4ece\u96f6\u5230\u6b63\u65e0\u7a77\u5927)\u3002\n\u6700\u540e\uff0c\u662f\u4f18\u5316\u548c\u89e3\u51b3\u60a8\u611f\u5174\u8da3\u7684\u95ee\u9898\u7684\u65f6\u5019\u4e86\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528linprog()\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\n&gt\uff1b&gt\uff1bopt=linprog(c=obj\uff0cA_ub=lhs_ineq\uff0cb_ub=rhs_ineq\uff0c.\u3002a_eq=lhs_eq\uff0cb_eq=rhs_eq\uff0cBound=Bnd\uff0c.\u3002method=&#34\uff1b\u4fee\u8ba2\u5355\u7eaf\u5f62&34\uff1b)&gt\uff1b&gt\uff1b&gt\uff1bopt con\uff1aarray([0.])\u3002FUN\uff1a-16.818181818181817\u6d88\u606f\uff1a&#39\uff1b\u4f18\u5316\u5df2\u6210\u529f\u7ec8\u6b62\u3002&#39\uff1bNIT\uff1a3 SLACK\uff1aARRAY([0.\u3002\uff0c18.18181818\uff0c3.36363636])\u72b6\u6001\uff1a0\u6210\u529f\uff1a\u771fx\uff1a\u6570\u7ec4([7.72727273\uff0c4.54545455])\u3002\n\u53c2\u6570C\u6307\u7684\u662f\u6765\u81ea\u76ee\u6807\u51fd\u6570\u7684\u7cfb\u6570\u3002a_ub\u548cb_ub\u5206\u522b\u4e0e\u4e0d\u7b49\u5f0f\u7ea6\u675f\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u7cfb\u6570\u76f8\u5173\u3002\u7c7b\u4f3c\u5730\uff0ca_eq\u548cb_eq\u6307\u7684\u662f\u7b49\u5f0f\u7ea6\u675f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u754c\u9650\u6765\u63d0\u4f9b\u51b3\u7b56\u53d8\u91cf\u7684\u4e0b\u9650\u548c\u4e0a\u9650\u3002\n\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u65b9\u6cd5\u5b9a\u4e49\u8981\u4f7f\u7528\u7684\u7ebf\u6027\u89c4\u5212\u65b9\u6cd5\u3002\u6709\u4e09\u4e2a\u9009\u9879\uff1a\n.slack\u662f\u677e\u5f1b\u53d8\u91cf\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u7ea6\u675f\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u3002\n.status\u662f\u4e00\u4e2a\u4ecb\u4e8e0\u548c4\u4e4b\u95f4\u7684\u6574\u6570\uff0c\u5b83\u663e\u793a\u89e3\u51b3\u65b9\u6848\u7684\u72b6\u6001\uff0c\u4f8b\u5982\uff0c0\u8868\u793a\u627e\u5230\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u7684\u65f6\u95f4\u3002\n\u8fd9\u5c31\u662f\u60a8\u83b7\u5f97\u4f18\u5316\u7ed3\u679c\u7684\u65b9\u5f0f\u3002\u60a8\u8fd8\u53ef\u4ee5\u4ee5\u56fe\u5f62\u65b9\u5f0f\u663e\u793a\u5b83\u4eec\uff1a\n\u5982\u524d\u6240\u8ff0\uff0c\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4f4d\u4e8e\u53ef\u884c\u57df\u7684\u9876\u70b9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u884c\u533a\u57df\u5c31\u662f\u4f4d\u4e8e\u84dd\u7ebf\u548c\u7ea2\u7ebf\u4e4b\u95f4\u7684\u7eff\u7ebf\u90e8\u5206\u3002\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u662f\u8868\u793a\u7eff\u7ebf\u548c\u7ea2\u7ebf\u4ea4\u70b9\u7684\u7eff\u8272\u6b63\u65b9\u5f62\u3002\n\u5982\u679c\u8981\u6392\u9664\u76f8\u7b49(\u7eff\u8272)\u7ea6\u675f\uff0c\u53ea\u9700\u4ecelinprog()\u8c03\u7528\u4e2d\u5220\u9664\u53c2\u6570A_eq\u548cb_eq\uff1a\n&gt\uff1b&gt\uff1bopt=linprog(c=obj\uff0cA_ub=lhs_ineq\uff0cb_ub=rhs_ineq\uff0cbound=bnd\uff0c.\u3002method=&#34\uff1b\u4fee\u8ba2\u7684\u5355\u7eaf\u5f62&34\uff1b)&gt\uff1b&gt\uff1b&gt\uff1bopt con\uff1aarray([]\uff0cdtype=flat64)FUN\uff1a-20.714285714285715\u6d88\u606f\uff1a&#39\uff1b\u4f18\u5316\u5df2\u6210\u529f\u7ec8\u6b62\u3002&#39\uff1bNIT\uff1a2 SLACK\uff1aArray([0.\u3002\uff0c0\u3002\uff0c9.85714286])\u72b6\u6001\uff1a0\u6210\u529f\uff1a\u771fx\uff1a\u6570\u7ec4([6.42857143\uff0c7.14285714])\u3002\n\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u4e0e\u4e0a\u4e00\u4e2a\u6848\u4f8b\u4e0d\u540c\u3002\u4f60\u53ef\u4ee5\u5728\u56fe\u8868\u4e0a\u770b\u5230\u5b83\uff1a\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u662f\u7ea2\u8272\u548c\u84dd\u8272\u7ea6\u675f\u76f8\u4ea4\u7684\u53ef\u884c(\u7070\u8272)\u533a\u57df\u7684\u7d2b\u8272\u9876\u70b9\u3002\u5176\u4ed6\u9876\u70b9(\u5982\u9ec4\u8272\u9876\u70b9)\u7684\u76ee\u6807\u51fd\u6570\u503c\u8f83\u9ad8\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528SciPy\u6765\u89e3\u51b3\u524d\u9762\u90e8\u5206\u6240\u8ff0\u7684\u8d44\u6e90\u5206\u914d\u95ee\u9898\uff1a\n\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4e00\u6837\uff0c\u60a8\u9700\u8981\u4ece\u4e0a\u9762\u7684\u95ee\u9898\u4e2d\u63d0\u53d6\u5fc5\u8981\u7684\u5411\u91cf\u548c\u77e9\u9635\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9.linprog()\uff0c\u5e76\u83b7\u5f97\u7ed3\u679c\uff1a\n&gt\uff1b&gt\uff1bobj=[-20\uff0c-12\uff0c-40\uff0c-25]&gt\uff1b&gt\uff1b&gt\uff1blhs_ineq=[[1\uff0c1\uff0c1\uff0c1]\uff0c#\u4eba\u529b.[3\uff0c2\uff0c1\uff0c0]\uff0c#\u7269\u6599A.[0\uff0c1\uff0c2\uff0c3]]#\u7269\u6599B&gt\uff1b&gt\uff1b&gt\uff1brhs_ineq=[50\uff0c#\u4eba\u529b.100\uff0c#\u7269\u6599A.90]#\u7269\u6599B&&gt;\uff1b&gt\uff1b&gt\uff1bopt=linprog(c=obj\uff0cA_uB=lhs_ineq\uff0cb_ub=rhs_ineq\uff0c.\u3002method=&#34\uff1b\u4fee\u8ba2\u7684\u5355\u5de5&34\uff1b)&gt\uff1b&gt\uff1b&gt\uff1bopt con\uff1aArray([]\uff0cdtype=Float64)FUN\uff1a-1900.0\u6d88\u606f\uff1a&#39\uff1b\u4f18\u5316\u5df2\u6210\u529f\u7ec8\u6b62\u3002&#39\uff1bNIT\uff1a2 SLACK\uff1aArray([0.\uff0c40.\uff0c0.])\u3002\u72b6\u6001\uff1a0\u6210\u529f\uff1atrue x\uff1aarray([5.\uff0c0.\uff0c45.\uff0c0.])\u3002\n\u7ed3\u679c\u544a\u8bc9\u60a8\uff0c\u6700\u5927\u5229\u6da6\u4e3a1,900\uff0c\u5bf9\u5e94\u4e8ex\u2081=5\u548cx\u2083=45\u3002\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u751f\u4ea7\u7b2c\u4e8c\u548c\u7b2c\u56db\u79cd\u4ea7\u54c1\u662f\u65e0\u5229\u53ef\u56fe\u7684\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u5f97\u51fa\u51e0\u4e2a\u6709\u8da3\u7684\u7ed3\u8bba\uff1a\n\u7b2c\u4e09\u79cd\u4ea7\u54c1\u5e26\u6765\u7684\u5355\u4f4d\u5229\u6da6\u6700\u5927\uff0c\u6240\u4ee5\u5de5\u5382\u5c06\u751f\u4ea7\u6700\u591a\u7684\u4ea7\u54c1\u3002\n\u7b2c\u4e00\u4e2a\u677e\u5f1b\u4e3a0\uff0c\u8fd9\u610f\u5473\u7740\u4eba\u529b(\u7b2c\u4e00)\u7ea6\u675f\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u503c\u76f8\u540c\u3002\u8fd9\u5bb6\u5de5\u5382\u6bcf\u5929\u751f\u4ea750\u53f0\uff0c\u5df2\u7ecf\u6ee1\u8d1f\u8377\u4e86\u3002\n\u7b2c\u4e8c\u4e2a\u7f3a\u53e3\u662f40\u4e2a\uff0c\u56e0\u4e3a\u5de5\u5382\u6d88\u8017\u4e86\u6f5c\u5728100\u4e2a\u5355\u4f4d\u4e2d\u768460\u4e2a\u5355\u4f4d\u7684\u539f\u6750\u6599A(\u7b2c\u4e00\u4e2a\u4ea7\u54c115\u4e2a\u5355\u4f4d\uff0c\u7b2c\u4e09\u4e2a\u4ea7\u54c145\u4e2a\u5355\u4f4d)\u3002\n\u7b2c\u4e09\u4e2a\u7f3a\u53e3\u662f0\uff0c\u8fd9\u610f\u5473\u7740\u5de5\u5382\u6d88\u8017\u4e86\u5168\u90e890\u4e2a\u5355\u4f4d\u7684\u539f\u6750\u6599B\u3002\u8fd9\u4e2a\u5168\u90e8\u6570\u91cf\u88ab\u6d88\u8017\u5728\u7b2c\u4e09\u4e2a\u4ea7\u54c1\u4e0a\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5de5\u5382\u6839\u672c\u4e0d\u80fd\u751f\u4ea7\u7b2c\u4e8c\u4e2a\u6216\u7b2c\u56db\u4e2a\u4ea7\u54c1\uff0c\u7b2c\u4e09\u4e2a\u4ea7\u54c1\u7684\u4ea7\u91cf\u4e0d\u80fd\u8d85\u8fc745\u4e2a\u5355\u4f4d\u3002\u5b83\u7f3a\u5c11\u539f\u6599B\u3002\nopt.status\u4e3a0\uff0copt.Success\u4e3aTrue\uff0c\u8868\u793a\u4f18\u5316\u95ee\u9898\u7528\u6700\u4f18\u53ef\u884c\u89e3\u6210\u529f\u89e3\u51b3\u3002\nSciPy\u7684\u7ebf\u6027\u89c4\u5212\u529f\u80fd\u4e3b\u8981\u9002\u7528\u4e8e\u8f83\u5c0f\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u66f4\u5927\u3001\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u5176\u4ed6\u5e93\u66f4\u9002\u5408\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\nSciPy\u4e0d\u63d0\u4f9b\u4fc3\u8fdb\u6a21\u578b\u6784\u5efa\u7684\u7c7b\u6216\u51fd\u6570\u3002\u60a8\u5fc5\u987b\u5b9a\u4e49\u6570\u7ec4\u548c\u77e9\u9635\uff0c\u5bf9\u4e8e\u5927\u578b\u95ee\u9898\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u9879\u4e4f\u5473\u4e14\u5bb9\u6613\u51fa\u9519\u7684\u4efb\u52a1\u3002\nSciPy\u4e0d\u5141\u8bb8\u60a8\u76f4\u63a5\u5b9a\u4e49\u6700\u5927\u5316\u95ee\u9898\u3002\u60a8\u5fc5\u987b\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u6700\u5c0f\u5316\u95ee\u9898\u3002\nSciPy\u4e0d\u5141\u8bb8\u60a8\u76f4\u63a5\u4f7f\u7528\u5927\u4e8e\u6216\u7b49\u4e8e\u7b26\u53f7\u6765\u5b9a\u4e49\u7ea6\u675f\u3002\u60a8\u5fc5\u987b\u4f7f\u7528\u5c0f\u4e8e\u6216\u7b49\u4e8e-to\u3002\n\u5e78\u8fd0\u7684\u662f\uff0cPython\u751f\u6001\u7cfb\u7edf\u4e3a\u7ebf\u6027\u7f16\u7a0b\u63d0\u4f9b\u4e86\u51e0\u79cd\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u4e8e\u8f83\u5927\u7684\u95ee\u9898\u975e\u5e38\u6709\u7528\u3002\u5176\u4e2d\u4e4b\u4e00\u662f\u7eb8\u6d46\uff0c\u4f60\u5c06\u5728\u4e0b\u4e00\u8282\u770b\u5230\u5b83\u7684\u4f5c\u7528\u3002\n\u7eb8\u6d46\u5177\u6709\u6bd4SciPy\u66f4\u65b9\u4fbf\u7684\u7ebf\u6027\u89c4\u5212API\u3002\u60a8\u4e0d\u5fc5\u5bf9\u95ee\u9898\u8fdb\u884c\u6570\u5b66\u4fee\u6539\uff0c\u4e5f\u4e0d\u5fc5\u4f7f\u7528\u5411\u91cf\u548c\u77e9\u9635\u3002\u4e00\u5207\u90fd\u66f4\u5e72\u51c0\uff0c\u66f4\u4e0d\u5bb9\u6613\u51fa\u9519\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528Sense\u53c2\u6570\u9009\u62e9\u662f\u6267\u884c\u6700\u5c0f\u5316(LpMinimize\u62161\uff0c\u8fd9\u662f\u9ed8\u8ba4\u503c)\u8fd8\u662f\u6267\u884c\u6700\u5927\u5316(LpMaximize\u6216-1)\u3002\u6b64\u9009\u62e9\u5c06\u5f71\u54cd\u60a8\u95ee\u9898\u7684\u7ed3\u679c\u3002\n\u4e00\u65e6\u62e5\u6709\u4e86\u6a21\u578b\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u51b3\u7b56\u53d8\u91cf\u5b9a\u4e49\u4e3aLpVariable\u7c7b\u7684\u5b9e\u4f8b\uff1a\n\u60a8\u9700\u8981\u4e3alowBound=0\u63d0\u4f9b\u4e00\u4e2a\u4e0b\u9650\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u503c\u662f\u8d1f\u65e0\u7a77\u5927\u3002\u53c2\u6570upbound\u5b9a\u4e49\u4e86\u4e0a\u9650\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u7701\u7565\u5b83\uff0c\u56e0\u4e3a\u5b83\u9ed8\u8ba4\u4e3a\u6b63\u65e0\u7a77\u5927\u3002\n\u53ef\u9009\u53c2\u6570cat\u5b9a\u4e49\u51b3\u7b56\u53d8\u91cf\u7684\u7c7b\u522b\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u8fde\u7eed\u53d8\u91cf\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c&#34\uff1b\u8fde\u7eed&#34\uff1b\u3002\n\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cfx\u548cy\u521b\u5efa\u8868\u793a\u7ebf\u6027\u8868\u8fbe\u5f0f\u548c\u7ea6\u675f\u7684\u5176\u4ed6\u7eb8\u6d46\u5bf9\u8c61\uff1a\n&gt\uff1b&gt\uff1b\u8868\u8fbe\u5f0f=2*x+4*y&gt\uff1b&gt\uff1b&gt\uff1btype(\u8868\u8fbe\u5f0f)&lt\uff1bclass&#39\uff1bPulp.Pulp.LpAffineExpression&#39\uff1b&gt\uff1b&gt\uff1b&gt\uff1bConstraint=2*x+4*y&gt\uff1b=8&gt\uff1b&gt\uff1b&gt\uff1btype(Constraint)&\u3002&gt\uff1b\n\u5f53\u60a8\u5c06\u4e00\u4e2a\u51b3\u7b56\u53d8\u91cf\u4e0e\u6807\u91cf\u76f8\u4e58\u6216\u6784\u5efa\u591a\u4e2a\u51b3\u7b56\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u65f6\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u8868\u793a\u7ebf\u6027\u8868\u8fbe\u5f0f\u7684Pulp.LpAffineExpression\u5b9e\u4f8b\u3002\n\u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u6dfb\u52a0\u6216\u51cf\u53bb\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u4e0e\u5e38\u91cf\u76f8\u4e58\uff0c\u56e0\u4e3a\u7eb8\u6d46\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e9bPython\u7279\u6b8a\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u6a21\u62df\u6570\u5b57\u7c7b\u578b\uff0c\u5982__add__()\u3001__sub_()\u548c__mul__()\u3002\u8fd9\u4e9b\u65b9\u6cd5\u7528\u4e8e\u81ea\u5b9a\u4e49+\u3001-\u548c*\u7b49\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002\n\u540c\u6837\uff0c\u60a8\u53ef\u4ee5\u5c06\u7ebf\u6027\u8868\u8fbe\u5f0f\u3001\u53d8\u91cf\u548c\u6807\u91cf\u4e0e\u64cd\u4f5c\u7b26==\u3001&lt\uff1b=\u6216&gt\uff1b=\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u83b7\u5f97\u8868\u793a\u6a21\u578b\u7ebf\u6027\u7ea6\u675f\u7684Pulp.LpConstraint\u5b9e\u4f8b\u3002\n\u6ce8\u610f\uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e30\u5bcc\u7684\u6bd4\u8f83\u65b9\u6cd5\u6784\u5efa\u7ea6\u675f\u3002__eq_\u3002\n..", "note_en": "Linear programming is a set of techniques used in   mathematical programming, sometimes called mathematical optimization, to solve  systems of linear equations and inequalities while maximizing or minimizing some  linear function. It\u2019s important in fields like scientific computing, economics, technical sciences, manufacturing, transportation, military, management, energy, and so on.\n The Python ecosystem offers several comprehensive and powerful tools for linear programming. You can choose between simple and complex tools as well as between free and commercial ones. It all depends on your needs.\n   You\u2019ll first learn about the  fundamentals of linear programming. Then you\u2019ll explore how to implement linear programming techniques in Python. Finally, you\u2019ll look at resources and libraries to help further your linear programming journey.\n Free Bonus:  5 Thoughts On Python Mastery, a free course for Python developers that shows you the roadmap and the mindset you&#39;ll need to take your Python skills to the next level.\n  In this section, you\u2019ll learn the basics of linear programming and a related discipline, mixed-integer linear programming. In the  next section, you\u2019ll see some practical linear programming examples. Later, you\u2019ll solve linear programming and mixed-integer linear programming problems with Python.\n Imagine that you have a system of linear equations and inequalities. Such systems often have many possible solutions. Linear programming is a set of mathematical and computational tools that allows you to find a particular solution to this system that corresponds to the maximum or minimum of some other linear function.\n Mixed-integer linear programming is an extension of linear programming. It handles problems in which at least one variable takes a discrete integer rather than a  continuous value. Although mixed-integer problems look similar to continuous variable problems at first sight, they offer significant advantages in terms of flexibility and precision.\n Integer variables are important for properly representing quantities naturally expressed with integers, like the number of airplanes produced or the number of customers served.\n A particularly important kind of integer variable is the  binary variable. It can take only the values  zero or  one and is useful in making yes-or-no decisions, such as whether a plant should be built or if a machine should be turned on or off. You can also use them to mimic logical constraints.\n Linear programming is a fundamental optimization technique that\u2019s been used for decades in science- and math-intensive fields. It\u2019s precise, relatively fast, and suitable for a range of practical applications.\n Mixed-integer linear programming allows you to overcome many of the limitations of linear programming. You can approximate non-linear functions with  piecewise linear functions, use  semi-continuous variables, model logical constraints, and more. It\u2019s a computationally intensive tool, but the advances in computer hardware and software make it more applicable every day.\n Often, when people try to formulate and solve an optimization problem, the first question is whether they can apply linear programming or mixed-integer linear programming.\n Some use cases of linear programming and mixed-integer linear programming are illustrated in the following articles:\n  The importance of linear programming, and especially mixed-integer linear programming, has increased over time as computers have gotten more capable, algorithms have improved, and more user-friendly software solutions have become available.\n The basic method for solving linear programming problems is called the   simplex method, which has several variants. Another popular approach is the   interior-point method.\n Mixed-integer linear programming problems are solved with more complex and computationally intensive methods like the   branch-and-bound method, which uses linear programming under the hood. Some variants of this method are the   branch-and-cut method, which involves the use of  cutting planes, and the   branch-and-price method.\n There are several suitable and well-known Python tools for linear programming and mixed-integer linear programming. Some of them are open source, while others are proprietary. Whether you need a free or paid tool depends on the size and complexity of your problem as well as on the need for speed and flexibility.\n It\u2019s worth mentioning that almost all widely used linear programming and mixed-integer linear programming libraries are native to and written in Fortran or C or C++. This is because linear programming requires computationally intensive work with (often large) matrices. Such libraries are called  solvers. The Python tools are just wrappers around the solvers.\n Python is suitable for building wrappers around native libraries because it works well with C/C++. You\u2019re not going to need any C/C++ (or Fortran) for this tutorial, but if you want to learn more about this cool feature, then check out the following resources:\n  Basically, when you define and solve a model, you use Python functions or methods to call a low-level library that does the actual optimization job and returns the solution to your Python object.\n Several free Python libraries are specialized to interact with linear or mixed-integer linear programming solvers:\n  In this tutorial, you\u2019ll use  SciPy and  PuLP to define and solve linear programming problems.\n A practical problem related to resource allocation that illustrates linear programming concepts in a real-world scenario\n   A linear programming problem is  infeasible if it doesn\u2019t have a solution. This usually happens when no solution can satisfy all constraints at once.\n For example, consider what would happen if you added the constraint  x +  y \u2264 \u22121. Then at least one of the decision variables ( x or  y) would have to be negative. This is in conflict with the given constraints  x \u2265 0 and  y \u2265 0. Such a system doesn\u2019t have a feasible solution, so it\u2019s called infeasible.\n Another example would be adding a second equality constraint parallel to the green line. These two lines wouldn\u2019t have a point in common, so there wouldn\u2019t be a solution that satisfies both constraints.\n A linear programming problem is  unbounded if its feasible region isn\u2019t bounded and the solution is not finite. This means that at least one of your variables isn\u2019t constrained and can reach to positive or negative infinity, making the objective infinite as well.\n For example, say you take the initial problem above and drop the red and yellow constraints. Dropping constraints out of a problem is called  relaxing the problem. In such a case,  x and  y wouldn\u2019t be bounded on the positive side. You\u2019d be able to increase them toward positive infinity, yielding an infinitely large  z value.\n In the previous sections, you looked at an abstract linear programming problem that wasn\u2019t tied to any real-world application. In this subsection, you\u2019ll find a more concrete and practical optimization problem related to resource allocation in manufacturing.\n Say that a factory produces four different products, and that the daily produced amount of the first product is  x\u2081, the amount produced of the second product is  x\u2082, and so on. The goal is to determine the profit-maximizing daily production amount for each product, bearing in mind the following conditions:\n The profit per unit of product is $20, $12, $40, and $25 for the first, second, third, and fourth product, respectively.\n Due to manpower constraints, the total number of units produced per day can\u2019t exceed fifty.\n For each unit of the first product, three units of the raw material A are consumed. Each unit of the second product requires one unit of the raw material A and two units of the raw material B. Each unit of the third product needs one unit of A and two units of B. Finally, each unit of the fourth product requires three units of B.\n Due to the transportation and storage constraints, the factory can consume up to one hundred units of the raw material A and ninety units of B per day.\n   The objective function (profit) is defined in condition 1. The manpower constraint follows from condition 2. The constraints on the raw materials A and B can be derived from conditions 3 and 4 by summing the raw material requirements for each product.\n Finally, the product amounts can\u2019t be negative, so all decision variables must be greater than or equal to zero.\n Unlike the previous example, you can\u2019t conveniently visualize this one because it has four decision variables. However, the principles remain the same regardless of the dimensionality of the problem.\n In this tutorial, you\u2019ll use two Python packages to solve the linear programming problem described above:\n  SciPy is straightforward to set up. Once you install it, you\u2019ll have everything you need to start. Its subpackage    scipy.optimize can be used for both linear and  nonlinear optimization.\n PuLP allows you to choose solvers and formulate problems in a more natural way. The default solver used by PuLP is the  COIN-OR Branch and Cut Solver (CBC). It\u2019s connected to the  COIN-OR Linear Programming Solver (CLP) for linear relaxations and the  COIN-OR Cut Generator Library (CGL) for cuts generation.\n Another great open source solver is the  GNU Linear Programming Kit (GLPK). Some well-known and very powerful commercial and proprietary solutions are  Gurobi,  CPLEX, and  XPRESS.\n Besides offering flexibility when defining problems and the ability to run various solvers, PuLP is less complicated to use than alternatives like Pyomo or CVXOPT, which require more time and effort to master.\n  To follow this tutorial, you\u2019ll need to install SciPy and PuLP. The examples below use version 1.4.1 of SciPy and version 2.1 of PuLP.\n   You might need to run  pulptest or  sudo pulptest to enable the default solvers for PuLP, especially if you\u2019re using Linux or Mac:\n  Optionally, you can download, install, and use GLPK. It\u2019s free and open source and works on Windows, MacOS, and Linux. You\u2019ll see how to use GLPK (in addition to CBC) with PuLP later in this tutorial.\n            See GLPK\u2019s tutorials on installing with  Windows executables and  Linux packages for more information.\n In this section, you\u2019ll learn how to use the SciPy  optimization and root-finding library for linear programming.\n    linprog() solves only minimization (not maximization) problems and doesn\u2019t allow inequality constraints with the greater than or equal to sign (\u2265). To work around these issues, you need to modify your problem before starting optimization:\n Instead of maximizing  z =  x +  2y, you can minimize its negative(\u2212 z = \u2212 x \u2212  2y).\n Instead of having the greater than or equal to sign, you can multiply the yellow inequality by \u22121 and get the opposite less than or equal to sign (\u2264).\n   This system is equivalent to the original and will have the same solution. The only reason to apply these changes is to overcome the limitations of SciPy related to the problem formulation.\n  &gt;&gt;&gt; &gt;&gt;&gt;  obj  =  [ - 1 ,  - 2 ] &gt;&gt;&gt;  # \u2500\u252c \u2500\u252c &gt;&gt;&gt;  # \u2502 \u2514\u2524 Coefficient for y &gt;&gt;&gt;  # \u2514\u2500\u2500\u2500\u2500\u2524 Coefficient for x &gt;&gt;&gt;  lhs_ineq  =  [[  2 ,  1 ],  # Red constraint left side ...   [ - 4 ,  5 ],  # Blue constraint left side ...   [  1 ,  - 2 ]]  # Yellow constraint left side &gt;&gt;&gt;  rhs_ineq  =  [ 20 ,  # Red constraint right side ...   10 ,  # Blue constraint right side ...   2 ]  # Yellow constraint right side &gt;&gt;&gt;  lhs_eq  =  [[ - 1 ,  5 ]]  # Green constraint left side &gt;&gt;&gt;  rhs_eq  =  [ 15 ]  # Green constraint right side\n You put the values from the system above into the appropriate  lists, tuples, or  NumPy arrays:\n  The order of the rows for the left and right sides of the constraints must be the same. Each row represents one constraint.\n The order of the coefficients from the objective function and left sides of the constraints must match. Each column corresponds to a single decision variable.\n The next step is to define the bounds for each variable in the same order as the coefficients. In this case, they\u2019re both between zero and positive infinity:\n &gt;&gt;&gt; &gt;&gt;&gt;  bnd  =  [( 0 ,  float ( &#34;inf&#34; )),  # Bounds of x ...   ( 0 ,  float ( &#34;inf&#34; ))]  # Bounds of y\n This statement is redundant because  linprog() takes these bounds (zero to positive infinity) by default.\n  Finally, it\u2019s time to optimize and solve your problem of interest. You can do that with  linprog():\n &gt;&gt;&gt; &gt;&gt;&gt;  opt  =  linprog ( c = obj ,  A_ub = lhs_ineq ,  b_ub = rhs_ineq , ...   A_eq = lhs_eq ,  b_eq = rhs_eq ,  bounds = bnd , ...   method = &#34;revised simplex&#34; ) &gt;&gt;&gt;  opt  con: array([0.])  fun: -16.818181818181817  message: &#39;Optimization terminated successfully.&#39;  nit: 3  slack: array([ 0. , 18.18181818, 3.36363636])  status: 0  success: True  x: array([7.72727273, 4.54545455])\n The parameter  c refers to the coefficients from the objective function.  A_ub and  b_ub are related to the coefficients from the left and right sides of the inequality constraints, respectively. Similarly,  A_eq and  b_eq refer to equality constraints. You can use  bounds to provide the lower and upper bounds on the decision variables.\n You can use the parameter  method to define the linear programming method that you want to use. There are three options:\n   .slack is the values of the slack variables, or the differences between the values of the left and right sides of the constraints.\n .status is an integer between  0 and  4 that shows the status of the solution, such as  0 for when the optimal solution has been found.\n   That\u2019s how you get the results of optimization. You can also show them graphically:\n  As discussed earlier, the optimal solutions to linear programming problems lie at the vertices of the feasible regions. In this case, the feasible region is just the portion of the green line between the blue and red lines. The optimal solution is the green square that represents the point of intersection between the green and red lines.\n If you want to exclude the equality (green) constraint, just drop the parameters  A_eq and  b_eq from the  linprog() call:\n &gt;&gt;&gt; &gt;&gt;&gt;  opt  =  linprog ( c = obj ,  A_ub = lhs_ineq ,  b_ub = rhs_ineq ,  bounds = bnd , ...   method = &#34;revised simplex&#34; ) &gt;&gt;&gt;  opt  con: array([], dtype=float64)  fun: -20.714285714285715  message: &#39;Optimization terminated successfully.&#39;  nit: 2  slack: array([0. , 0. , 9.85714286])  status: 0  success: True  x: array([6.42857143, 7.14285714]))\n The solution is different from the previous case. You can see it on the chart:\n  In this example, the optimal solution is the purple vertex of the feasible (gray) region where the red and blue constraints intersect. Other vertices, like the yellow one, have higher values for the objective function.\n You can use SciPy to solve the resource allocation problem stated in the  earlier section:\n  As in the previous example, you need to extract the necessary vectors and matrix from the problem above, pass them as the arguments to  .linprog(), and get the results:\n &gt;&gt;&gt; &gt;&gt;&gt;  obj  =  [ - 20 ,  - 12 ,  - 40 ,  - 25 ] &gt;&gt;&gt;  lhs_ineq  =  [[ 1 ,  1 ,  1 ,  1 ],  # Manpower ...   [ 3 ,  2 ,  1 ,  0 ],  # Material A ...   [ 0 ,  1 ,  2 ,  3 ]]  # Material B &gt;&gt;&gt;  rhs_ineq  =  [  50 ,  # Manpower ...   100 ,  # Material A ...   90 ]  # Material B &gt;&gt;&gt;  opt  =  linprog ( c = obj ,  A_ub = lhs_ineq ,  b_ub = rhs_ineq , ...   method = &#34;revised simplex&#34; ) &gt;&gt;&gt;  opt  con: array([], dtype=float64)  fun: -1900.0  message: &#39;Optimization terminated successfully.&#39;  nit: 2  slack: array([ 0., 40., 0.])  status: 0  success: True  x: array([ 5., 0., 45., 0.])\n The result tells you that the maximal profit is  1900 and corresponds to  x\u2081 = 5 and  x\u2083 = 45. It\u2019s not profitable to produce the second and fourth products under the given conditions. You can draw several interesting conclusions here:\n The third product brings the largest profit per unit, so the factory will produce it the most.\n The first slack is  0, which means that the values of the left and right sides of the manpower (first) constraint are the same. The factory produces  50 units per day, and that\u2019s its full capacity.\n The second slack is  40 because the factory consumes 60 units of raw material A (15 units for the first product plus 45 for the third) out of a potential  100 units.\n The third slack is  0, which means that the factory consumes all  90 units of the raw material B. This entire amount is consumed for the third product. That\u2019s why the factory can\u2019t produce the second or fourth product at all and can\u2019t produce more than  45 units of the third product. It lacks the raw material B.\n opt.status is  0 and  opt.success is  True, indicating that the optimization problem was successfully solved with the optimal feasible solution.\n SciPy\u2019s linear programming capabilities are useful mainly for smaller problems. For larger and more complex problems, you might find other libraries more suitable for the following reasons:\n SciPy doesn\u2019t provide classes or functions that facilitate model building. You have to define arrays and matrices, which might be a tedious and error-prone task for large problems.\n SciPy doesn\u2019t allow you to define maximization problems directly. You must convert them to minimization problems.\n SciPy doesn\u2019t allow you to define constraints using the greater-than-or-equal-to sign directly. You must use the less-than-or-equal-to instead.\n Fortunately, the Python ecosystem offers several alternative solutions for linear programming that are very useful for larger problems. One of them is PuLP, which you\u2019ll see in action in the next section.\n PuLP has a more convenient linear programming API than SciPy. You don\u2019t have to mathematically modify your problem or use vectors and matrices. Everything is cleaner and less prone to errors.\n    You use the  sense parameter to choose whether to perform minimization (  LpMinimize or  1, which is the default) or maximization (  LpMaximize or  -1). This choice will affect the result of your problem.\n Once that you have the model, you can define the decision variables as instances of the   LpVariable class:\n  You need to provide a lower bound with  lowBound=0 because the default value is negative infinity. The parameter  upBound defines the upper bound, but you can omit it here because it defaults to positive infinity.\n The optional parameter  cat defines the category of a decision variable. If you\u2019re working with continuous variables, then you can use the default value  &#34;Continuous&#34;.\n You can use the variables  x and  y to create other PuLP objects that represent linear expressions and constraints:\n &gt;&gt;&gt; &gt;&gt;&gt;  expression  =  2  *  x  +  4  *  y &gt;&gt;&gt;  type ( expression ) &lt;class &#39;pulp.pulp.LpAffineExpression&#39;&gt; &gt;&gt;&gt;  constraint  =  2  *  x  +  4  *  y  &gt;=  8 &gt;&gt;&gt;  type ( constraint ) &lt;class &#39;pulp.pulp.LpConstraint&#39;&gt;\n When you multiply a decision variable with a scalar or build a linear combination of multiple decision variables, you get an instance of   pulp.LpAffineExpression that represents a linear expression.\n Note: You can add or subtract variables or expressions, and you can multiply them with constants because PuLP classes implement some of the  Python special methods that  emulate numeric types like   __add__(),   __sub__(), and   __mul__(). These methods are used to customize the behavior of operators like  +,  -, and  *.\n Similarly, you can combine linear expressions, variables, and scalars with the  operators  ==,  &lt;=, or  &gt;= to get instances of  pulp.LpConstraint that represent the linear constraints of your model.\n Note: It\u2019s also possible to build constraints with the rich comparison methods   .__eq_\n......", "posttime": "2020-06-22 23:55:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,programming,\u64cd\u4f5c,linear,\u95ee\u9898", "title": "\u5b9e\u8df5\u64cd\u4f5c\u7ebf\u6027\u89c4\u5212\uff1a\u4f7f\u7528Python\u8fdb\u884c\u4f18\u5316", "title_en": "Hands-On Linear Programming: Optimization with Python", "transed": 1, "url": "https://realpython.com/linear-programming-python/", "via": "", "real_tags": ["python", "\u64cd\u4f5c", "linear", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "5cbd4bf80b11a907d58e721ffb30e192.jpg", "infoid": 1007660, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b89\u5fb7\u9c81\u00b7\u6768(Andrew Yang)\u5e0c\u671b\u4eba\u4eec\u4e3a\u4ed6\u4eec\u5728Facebook\u548c\u8c37\u6b4c\u7b49\u5927\u578b\u79d1\u6280\u5e73\u53f0\u4e0a\u521b\u5efa\u7684\u6570\u636e\u4ed8\u8d39\uff0c\u968f\u7740\u4e00\u4e2a\u65b0\u9879\u76ee\u4e8e\u5468\u4e00\u542f\u52a8\uff0c\u4ed6\u76f8\u4fe1\u81ea\u5df1\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002\n\u6768\u7684\u6570\u636e\u7ea2\u5229\u9879\u76ee\u662f\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\uff0c\u4efb\u52a1\u662f\u5728\u5168\u56fd\u8303\u56f4\u5185\u6839\u636e\u52a0\u5dde\u6d88\u8d39\u8005\u9690\u79c1\u6cd5(CCPA)\u7b49\u9690\u79c1\u6cd5\u5efa\u7acb\u6570\u636e\u5373\u8d22\u4ea7\u6743\u3002\u8be5\u9879\u76ee\u5e0c\u671b\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u52a8\u5458100\u591a\u4e07\u4eba\uff0c\u4e3b\u8981\u96c6\u4e2d\u5728\u52a0\u5dde\u4eba\u8eab\u4e0a\uff0c\u5982\u679c\u4ed6\u4eec\u9009\u62e9\u4e0e\u5e73\u53f0\u5171\u4eab\u6570\u636e\uff0c\u201c\u4e3a\u6240\u6709\u7f8e\u56fd\u4eba\u90fd\u53ef\u4ee5\u58f0\u79f0\u81ea\u5df1\u7684\u6570\u636e\u662f\u4ea7\u6743\u5e76\u83b7\u5f97\u4ed8\u6b3e\u7684\u672a\u6765\u94fa\u5e73\u9053\u8def\u201d\u3002\n\u4eca\u5e74\u5e74\u521d\uff0cCCPA\u751f\u6548\uff0c\u8d4b\u4e88\u6d88\u8d39\u8005\u5bf9\u4ed6\u4eec\u5728\u7ebf\u6570\u636e\u7684\u65b0\u63a7\u5236\u6743\uff0c\u6bd4\u5982\u5220\u9664\u548c\u9009\u62e9\u9000\u51fa\u51fa\u552e\u4ed6\u4eec\u7684\u4e2a\u4eba\u4fe1\u606f\u7684\u6743\u5229\u3002\u6cd5\u5f8b\u4e2d\u6ca1\u6709\u5173\u4e8e\u79d1\u6280\u516c\u53f8\u4e3a\u6570\u636e\u4ed8\u8d39(\u6216\u8005\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u4ed8\u94b1\u8ba9\u4ed6\u4eec\u4e0d\u8981\u9009\u62e9\u9000\u51fa)\u7684\u89c4\u5b9a\uff0c\u4f46\u6768\u7684\u65b0\u9879\u76ee\u5e0c\u671b\u8868\u660e\u8fd9\u4e2a\u60f3\u6cd5\u5728\u9009\u6c11\u4e2d\u5f88\u53d7\u6b22\u8fce\u3002\u6570\u636e\u7ea2\u5229\u9879\u76ee\u5c06\u8d4c\u6ce8\u62bc\u5728\u96c6\u4f53\u884c\u52a8\u4e0a\uff0c\u5c06\u5176\u4f5c\u4e3a\u4fee\u6539\u6cd5\u5f8b\u548c\u5c06\u6570\u636e\u8d22\u4ea7\u6743\u6269\u5c55\u5230\u5168\u56fd\u7528\u6237\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u5982\u679c\u8fd9\u4e00\u60f3\u6cd5\u6210\u4e3a\u6cd5\u5f8b\uff0c\u6768\u7684\u56e2\u961f\u8868\u793a\uff0c\u5b83\u5c06\u4ee3\u8868\u7528\u6237\u7684\u5229\u76ca\uff0c\u5e2e\u52a9\u4ed6\u4eec\u83b7\u5f97\u62a5\u916c\u3002\n\u6768\u544a\u8bc9The Verge\uff1a\u201c\u6211\u4eec\u7684\u6b66\u5668\u5b8c\u5168\u88ab\u79d1\u6280\u516c\u53f8\u8d85\u8fc7\u4e86\u3002\u201d\u201c\u6211\u4eec\u53ea\u662f\u6536\u5230\u4e86\u8fd9\u4e9b\u6761\u6b3e\u548c\u6761\u4ef6\u3002\u4ece\u6765\u6ca1\u6709\u4eba\u8bfb\u8fc7\u5b83\u4eec\u3002\u4f60\u53ea\u9700\u70b9\u51fb\u5b83\u4eec\uff0c\u7136\u540e\u671f\u5f85\u6700\u597d\u7684\u7ed3\u679c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6700\u597d\u7684\u60c5\u51b5\u5e76\u6ca1\u6709\u53d1\u751f\u3002\u201c\u3002\n\u50cf\u53c2\u8bae\u5458\u7ea6\u7ff0\u00b7\u80af\u5c3c\u8fea(R-LA)\u8fd9\u6837\u7684\u7acb\u6cd5\u8005\u8fc7\u53bb\u66fe\u63d0\u51fa\u7acb\u6cd5\uff0c\u6388\u4e88\u4eba\u4eec\u5bf9\u4ed6\u4eec\u5728\u7f51\u4e0a\u4ea7\u751f\u7684\u6570\u636e\u7684\u8d22\u4ea7\u6743\uff0c\u4f46\u6240\u6709\u7c7b\u4f3c\u7684\u63aa\u65bd\u90fd\u672a\u80fd\u5728\u56fd\u4f1a\u83b7\u5f97\u592a\u591a\u52bf\u5934\u3002\u4e00\u4e9b\u4eba\u62c5\u5fc3\uff0c\u6570\u636e\u6240\u6709\u6743\u662f\u4fdd\u62a4\u5728\u7ebf\u7528\u6237\u9690\u79c1\u7684\u9519\u8bef\u65b9\u6cd5\uff0c\u53ea\u4f1a\u6fc0\u52b1\u7528\u6237\u51fa\u5356\u81ea\u5df1\u7684\u9690\u79c1\uff0c\u800c\u4e0d\u662f\u4fdd\u62a4\u9690\u79c1\u3002\n\u201c\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u7684\u7acb\u6cd5\u8005\u57fa\u672c\u4e0a\u7f3a\u5e2d\u7684\u95ee\u9898\uff0c\u201d\u6768\u8bf4\u3002\u201c\u6211\u8ba4\u4e3a\u6211\u4eec\u5e94\u8be5\u5728\u7acb\u6cd5\u4e0a\u63a8\u52a8\u66f4\u597d\u7684\u5b89\u6392\u3002\u201d\n\u8be5\u9879\u76ee\u7684\u6ce8\u518c\u8868\u8981\u6c42\u4eba\u4eec\u8f93\u5165\u4ed6\u4eec\u5728\u7f51\u4e0a\u4f7f\u7528\u7684\u6240\u6709\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4ee5\u5e2e\u52a9\u8bc6\u522b\u76ee\u524d\u6709\u591a\u5c11\u5e73\u53f0\u4ece\u4e2a\u4eba\u6570\u636e\u4e2d\u83b7\u5229\u3002\u5b83\u8fd8\u8981\u6c42\u7528\u6237\u63d0\u4f9b\u4ed6\u4eec\u7684\u8d1d\u5b9d(PayPal)\u4fe1\u606f\uff0c\u8fd9\u6837\u6700\u7ec8\u53ef\u80fd\u4ece\u5e73\u53f0\u83b7\u5f97\u7684\u4efb\u4f55\u8d44\u91d1\u90fd\u53ef\u4ee5\u76f4\u63a5\u5b58\u5165\u7528\u6237\u7684\u8d26\u6237\u3002\n\u7528\u6237\u4e3a\u4ed6\u4eec\u521b\u5efa\u7684\u6570\u636e\u4ed8\u8d39\u5728\u4e00\u4e9b\u79d1\u6280\u601d\u60f3\u5bb6\u4e2d\u662f\u4e00\u4e2a\u6d41\u884c\u7684\u60f3\u6cd5\uff0c\u6bd4\u5982Jaron Lanier\uff0c\u6768\u8bf4\u4ed6\u53d7\u5230\u4e86\u8fd9\u4e2a\u4eba\u7684\u5f71\u54cd\u3002Facebook\u5df2\u7ecf\u5411\u4e00\u4e9b\u7528\u6237\u652f\u4ed8\u4e86\u6570\u636e\u8d39\u7528\uff0c\u4f46\u53ea\u6709\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u624d\u4f1a\u5982\u6b64\u3002\u53bb\u5e74\uff0c\u8be5\u516c\u53f8\u63a8\u51fa\u4e86\u81ea\u5df1\u7684\u5b66\u4e60\u5e94\u7528\u7a0b\u5e8f\uff0c\u5411\u5141\u8bb8\u516c\u53f8\u76d1\u63a7\u4ed6\u4eec\u4f7f\u7528\u7684\u529f\u80fd\u548c\u5728\u5e73\u53f0\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u7684\u7528\u6237\u652f\u4ed8\u8d39\u7528\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0cFacebook\u751a\u81f3\u63d0\u51fa\u5411\u4e00\u4e9b\u7528\u6237\u652f\u4ed8\u8bed\u97f3\u5f55\u97f3\u8d39\u7528\uff0c\u4ee5\u5e2e\u52a9\u6539\u8fdb\u5176\u8bed\u97f3\u8bc6\u522b\u6280\u672f\u3002\n\u4f46\u6768\u7684\u6570\u636e\u7ea2\u5229\u9879\u76ee\u5e0c\u671b\u901a\u8fc7\u5c06\u6570\u636e\u652f\u4ed8\u7f6e\u4e8e\u6cd5\u5f8b\u4e4b\u4e0a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5e73\u53f0\u5076\u5c14\u4e3a\u7279\u5b9a\u670d\u52a1\u505a\u7684\u4e8b\u60c5\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u63a8\u52a8\u6570\u636e\u652f\u4ed8\u3002\n\u6768\u8bf4\uff1a\u201c\u8fd9\u662f\u4eba\u4eec\u901a\u8fc7DDP For All\u83b7\u5f97\u80a1\u606f\u7684\u7b2c\u4e00\u5929\uff0c\u8fd9\u5c06\u662f\u5982\u6b64\u4f1f\u5927\u7684\u4e00\u5929\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u60f3\u8c61\u6570\u4ee5\u5343\u8ba1\u751a\u81f3\u6570\u4e07\u7f8e\u56fd\u4eba\u901a\u8fc7\u4ed6\u4eec\u7684\u8d1d\u5b9d(PayPal)\u6216\u73b0\u91d1\u5e94\u7528(Cash App)\u83b7\u5f97\u4e00\u4e9b\u4e1c\u897f\u3002\u201d\u201c\u5373\u4f7f\u662f20\u7f8e\u5143\u300150\u7f8e\u5143\u6216100\u7f8e\u5143\u8fd9\u6837\u7684\u4ef7\u683c\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u544a\u8bc9\u4ed6\u4eec\u7684\u670b\u53cb\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6539\u53d8\u6574\u4e2a\u884c\u4e1a\u7684\u505a\u6cd5\u3002\u201d", "note_en": "Andrew Yang wants people to get paid for the data they create on big tech platforms like Facebook and Google, and with a new project launching on Monday, he believes he can make it happen.\n Yang\u2019s  Data Dividend Project is a new program tasked with establishing data-as-property rights under privacy laws like the California Consumer Privacy Act (CCPA) all across the country. The program hopes to mobilize over 1 million people by the end of the year, focusing primarily on Californians, and \u201cpave the way for a future in which all Americans can claim their data as a property right and receive payment\u201d if they choose to share their data with platforms.\n  At the beginning of the year, the CCPA went into effect, granting consumers new control over their data online like the right to delete and opt out of the sale of their personal information. There\u2019s nothing in the law about tech companies paying for data (or, more specifically, paying them not to opt out), but Yang\u2019s new project is looking to show that the idea is popular with voters. The Data Dividend Project is betting on collective action as a means of changing the law and extending data property rights to users across the country. If this idea becomes law, Yang\u2019s team says it will work on behalf of users to help them get paid.\n \u201cWe are completely outgunned by tech companies,\u201d Yang told  The Verge. \u201cWe\u2019re just presented with these terms and conditions. No one ever reads them. You just click on them and hope for the best. And unfortunately, the best has not happened.\u201d\n Lawmakers like Sen. John Kennedy (R-LA) have introduced legislation in the past that would  grant people property rights over the data they generate online, but all measures like it have failed to gain much momentum in Congress. Some people fear that  data ownership is the wrong approach to protecting user privacy online and only incentivizes users to sell away their privacy instead of protecting it.\n \u201cIt\u2019s a question that our lawmakers have been essentially absent from,\u201d Yang said. \u201cI think there are even better arrangements that we should be pushing for legislatively.\u201d\n The project\u2019s signup form asks for people to put in all of the email addresses they use online to help identify how many platforms are currently profiting off of an individual\u2019s data. It also asks for users to provide their PayPal information so any money that could eventually be gained from platforms could be deposited directly into a user\u2019s account.\n Users getting paid for the data they create is a popular idea among some tech thinkers  like Jaron Lanier, someone Yang says he\u2019s been influenced by. Facebook already pays some users for data but only under specific circumstances. Last year, the company  launched its Study app that paid users who allowed the company to monitor the features they used and the time they spent on the platform. Earlier this year, Facebook even offered to pay some users  for voice recordings to help improve its speech recognition technology.\n But Yang\u2019s Data Dividend Project wants to take data payment further by grounding it in the law, not just something platforms occasionally do for specific services.\n \u201cIt\u2019s that first day that people get paid their dividend through DDP for All is going to be such a great day because you can imagine thousands and even tens of thousands of Americans getting something in their PayPal or Cash App,\u201d Yang said. \u201cEven something like $20, $50, or $100, and they\u2019ll tell their friends, and we can change practices industry-wide.\u201d", "posttime": "2020-06-22 23:54:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6768\u6b63\u5728,yang,\u6570\u636e", "title": "\u5b89\u5fb7\u9c81\u00b7\u6768\u6b63\u5728\u63a8\u52a8Big Tech\u5411\u7528\u6237\u652f\u4ed8\u6570\u636e\u8d39\u7528", "title_en": "Andrew Yang is pushing Big Tech to pay users for data", "transed": 1, "url": "https://www.theverge.com/2020/6/22/21298919/andrew-yang-big-tech-data-dividend-project-facebook-google-ubi", "via": "", "real_tags": ["\u6768\u6b63\u5728", "yang", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "f7fa3af41cfa5db732abb6cd9de4b074.gif", "infoid": 1007658, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6e90\u6587\u6863\u7531SooHee Cho(The Intercept)\u63d0\u4f9b\u7ed9DocumentCloud\u3002", "note_en": "Source document contributed to DocumentCloud by SooHee Cho (The Intercept).", "posttime": "2020-06-22 23:53:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u6218\u4e89,wargame,soohee", "title": "\u4e94\u89d2\u5927\u697c\u6218\u4e89\u6e38\u620f\u573a\u666f\uff1a2025\u5e74Z\u4e16\u4ee3\u9ed1\u6697\u7f51\u7edc\u53db\u4e71", "title_en": "Pentagon Wargame Scenario: 2025 Generation Z Dark Web Rebellion", "transed": 1, "url": "https://www.documentcloud.org/documents/6936805-JLASS-Document.html", "via": "", "real_tags": ["\u6e38\u620f", "\u6218\u4e89", "wargame", "soohee"]}, {"category": "", "categoryclass": "", "imagename": "f3597621c1708e6053f4e8484338d3d9.jpg", "infoid": 1007657, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u52a0\u62ff\u5927\u7684\u7a7a\u6c14\u5f00\u59cb\u5e72\u71e5\u65f6\uff0c\u7537\u4eba\u4eec\u8702\u62e5\u5230\u6851\u8fea\u00b7\u65af\u79d1\u7279\u5c3c\u57fa\u7684\u529e\u516c\u5ba4\u3002\u7537\u4eba\u4eec\u90fd\u5f88\u75d2\u3002\u65af\u79d1\u7279\u5c3c\u57fa\u5728\u6210\u4e3a\u591a\u4f26\u591a\u5927\u5b66\u76ae\u80a4\u79d1\u52a9\u7406\u6559\u6388\u4e4b\u524d\u5b66\u4e60\u5fae\u751f\u7269\u5b66\u3002\u5979\u5df2\u7ecf\u7ec3\u4e60\u4e8623\u5e74\uff0c\u603b\u662f\u5173\u6ce8\u73af\u5883-\u5305\u62ec\u6211\u4eec\u76ae\u80a4\u4e0a\u7684\u5fae\u751f\u7269-\u662f\u5982\u4f55\u5f71\u54cd\u5065\u5eb7\u7684\u3002\u201c\u6211\u5bf9\u4ed6\u4eec\u8bf4\uff0c\u2018\u4f60\u4eec\u600e\u4e48\u6d17\u6fa1\uff1f\u2019\u200a\uff0c\u201d\u5979\u544a\u8bc9\u6211\u3002\u201c\u4ed6\u4eec\u62ff\u7740\u6a61\u76ae\u64e6\u7684\u4e1c\u897f\uff0c\u7528\u67d0\u79cd\u7537\u58eb\u6c90\u6d74\u9732\u6d17\u5168\u8eab\u3002\u4ed6\u4eec\u4e00\u5929\u6d17\u4e24\u6b21\u6fa1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u953b\u70bc\u3002\u4e00\u65e6\u6211\u8ba9\u4ed6\u4eec\u505c\u6b62\u8fd9\u6837\u505a\uff0c\u53ea\u6d17\u4ed6\u4eec\u7684\u4e1c\u897f\uff0c\u4ed6\u4eec\u5c31\u5b8c\u5168\u6ca1\u4e8b\u4e86\u3002\u201c\u3002\n\u201c\u53ef\u80fd\u662f\u814b\u4e0b\uff0c\u8179\u80a1\u6c9f\uff0c\u811a\uff0c\u201d\u5979\u8bf4\u3002\u201c\u90a3\u4e48\u5f53\u4f60\u5728\u6dcb\u6d74\u6216\u6d17\u6fa1\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5728\u8fd9\u91cc\u6d17\u6fa1\u5417\uff1f\u201d\u5979\u6307\u7740\u5979\u7684\u524d\u81c2\u3002\u201c\u6ca1\u6709\u201d\u5373\u4f7f\u53ea\u6709\u6c34\uff0c\u7279\u522b\u662f\u70ed\u6c34\uff0c\u4e5f\u4f1a\u6162\u6162\u5730\u5265\u79bb\u76ae\u80a4\u5916\u5c42\u6709\u52a9\u4e8e\u4fdd\u6301\u6c34\u5206\u7684\u6cb9\u8102-\u800c\u4e14\u4e00\u4e2a\u4eba\u7684\u76ae\u80a4\u8d8a\u5e72\u71e5\u3001\u8d8a\u591a\u5b54\uff0c\u5c31\u8d8a\u5bb9\u6613\u53d7\u5230\u523a\u6fc0\u7269\u548c\u8fc7\u654f\u539f\u7684\u5f71\u54cd\u3002\n\u65af\u79d1\u7279\u5c3c\u57fa\u8ba4\u4e3a\uff0c\u8fd9\u662f\u8fc7\u5ea6\u6e05\u6d17\u4fc3\u4f7f\u6e7f\u75b9\u5728\u5177\u6709\u75be\u75c5\u9057\u4f20\u6613\u611f\u6027\u7684\u4eba\u8eab\u4e0a\u7206\u53d1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u867d\u7136\u6e7f\u75b9\u672c\u8eab\u53ef\u80fd\u4f1a\u4f7f\u4eba\u865a\u5f31\uff0c\u4f46\u5b83\u901a\u5e38\u4e0d\u4f1a\u72ec\u81ea\u65c5\u884c\u3002\u8fd9\u4f3c\u4e4e\u662f\u514d\u75ab\u7cfb\u7edf\u5931\u706b\u5f15\u8d77\u7684\u4e00\u7cfb\u5217\u75be\u75c5\u7684\u4e00\u90e8\u5206\u3002\u60a3\u6709\u6e7f\u75b9\u7684\u5a74\u513f\u5728\u7ae5\u5e74\u65f6\u671f\u60a3\u8fc7\u654f\u6027\u9f3b\u708e\u6216\u54ee\u5598\u7684\u98ce\u9669\u589e\u52a0\uff0c\u8fd9\u662f\u88ab\u79f0\u4e3a\u201c\u7279\u5e94\u6027\u8fdb\u884c\u66f2\u201d\u7684\u4e00\u7cfb\u5217\u514d\u75ab\u7cfb\u7edf\u8fc7\u5ea6\u53cd\u5e94\u7684\u4e00\u90e8\u5206\u3002\n\u201c\u90a3\u4e48\uff0c\u201d\u65af\u79d1\u7279\u5c3c\u57fa\u63a8\u6d4b\uff0c\u201c\u4f5c\u4e3a\u4e00\u4e2a\u793e\u4f1a\uff0c\u5982\u679c\u4f60\u771f\u7684\u56e0\u4e3a\u8fc7\u5ea6\u6d17\u6fa1\u800c\u5f15\u53d1\u6e7f\u75b9\uff0c\u90a3\u53c8\u4f1a\u600e\u6837\u5462\uff1f\u201d\n\u8fd9\u662f\u4e00\u4e2a\u66f4\u5947\u602a\u7684\u65f6\u95f4\u6765\u8d28\u7591\u6d17\u6da4\u3002\u5728\u8fc7\u53bb\u7684\u4e09\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u62a5\u9053\u6211\u4eec\u5bf9\u201c\u5e72\u51c0\u201d\u7684\u6982\u5ff5\u662f\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6f14\u53d8\u7684-\u4ece\u57fa\u672c\u7684\u536b\u751f\u4e60\u60ef\u5230\u590d\u6742\u7684\u4eea\u5f0f\uff0c\u6d89\u53ca\u5230\u6839\u636e\u6027\u522b\u3001\u5e74\u9f84\u548c\u201c\u76ae\u80a4\u7c7b\u578b\u201d\u9488\u5bf9\u6211\u4eec\u6bcf\u4e2a\u4eba\u7684\u6570\u5341\u79cd\u4ea7\u54c1\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u53d1\u8fbe\u56fd\u5bb6\uff0c\u6e7f\u75b9\u548c\u725b\u76ae\u7663\u7b49\u4e0e\u514d\u75ab\u76f8\u5173\u7684\u76ae\u80a4\u75c5\u7684\u53d1\u75c5\u7387\u6709\u6240\u4e0a\u5347\uff0c\u800c\u75e4\u75ae\u4e00\u5982\u65e2\u5f80\u5730\u6709\u5bb3\uff0c\u5c3d\u7ba1\u4e0d\u65ad\u6709\u6602\u8d35\u7684\u65b0\u836f\u548c\u8f6f\u818f\u51fa\u552e\u6765\u89e3\u51b3\u5b83\u3002\n\u867d\u7136\u6ca1\u6709\u4eba\u5e0c\u671b\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u53d1\u751f\uff0c\u4f46\u8fd9\u573a\u5927\u6d41\u884c\u53ef\u80fd\u6807\u5fd7\u7740\u4e00\u4e2a\u673a\u4f1a\uff0c\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u591a\u5c11\u6e05\u6d01\u5bf9\u6211\u4eec\u6709\u597d\u5904\uff0c\u4ee5\u53ca\u6ca1\u6709\u4ec0\u4e48\u505a\u6cd5\u4f1a\u8ba9\u6211\u4eec\u8fc7\u5f97\u66f4\u597d\u3002\u8ba9\u6211\u4eec\u4ece\u663e\u800c\u6613\u89c1\u7684\u4e8b\u60c5\u5f00\u59cb\uff1a\u6d17\u624b\uff0c\u6bcf\u5929\u6d17\u624b20\u79d2\uff0c\u591a\u6b21\u6d17\u624b\u3002\u8fd9\u53ef\u80fd\u662f\u9632\u6b62\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u6240\u80fd\u505a\u7684\u6700\u6709\u4ef7\u503c\u7684\u4e00\u4ef6\u4e8b\u3002\n\u7f8e\u56fd\u4eba\u5bf9\u8fd9\u4e00\u57fa\u672c\u5efa\u8bae\u7684\u62b5\u89e6\u662f\u51fa\u4e86\u540d\u7684\uff0c\u4f46\u6211\u4eec\u4e5f\u5ffd\u89c6\u4e86\u751f\u6d3b\u5728\u6211\u4eec\u76ae\u80a4\u4e0a\u7684\u6570\u4ee5\u4e07\u4ebf\u8ba1\u7684\u5fae\u751f\u7269\u7684\u91cd\u8981\u6027\uff0c\u76ae\u80a4\u662f\u514d\u75ab\u7cfb\u7edf\u4e2d\u6700\u5927\u7684\u5668\u5b98\u30022014\u5e74\uff0c\u7814\u7a76\u4eba\u5458\u5728\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u522e\u4e86\u4e00\u5c0f\u7fa4\u5fd7\u613f\u8005\u7684\u8138\uff0c\u53d1\u73b0\u4ed6\u4eec\u7684\u6bdb\u5b54\u91cc\u94bb\u4e86\u4e00\u79cd\u540d\u4e3a\u8815\u5f62\u87a8\u7684\u5fae\u5c0f\u87a8\u7c7b\u7684DNA\u8bc1\u636e\uff0c\u516c\u4f17\u5f88\u65e9\u5c31\u610f\u8bc6\u5230\u6211\u4eec\u7684\u76ae\u80a4\u4e0a\u6709\u539a\u539a\u7684\u8815\u866b\u3002\u65e0\u8272\u8718\u86db\u7684\u53d1\u73b0\u767b\u4e0a\u4e86\u5168\u56fd\u7684\u5934\u6761\u65b0\u95fb\uff0c\u5f15\u8d77\u4e86\u5e7f\u6cdb\u7684\u547c\u58f0\uff1a\u9a6c\u4e0a\u628a\u8fd9\u4e9b\u4e1c\u897f\u4ece\u6211\u8eab\u4e0a\u62ff\u4e0b\u6765\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u534a\u6beb\u7c73\u5927\u5c0f\u7684\u7ec6\u83cc\u5bc6\u5ea6\u5f02\u5e38\u9ad8\uff0c\u4e0e\u9152\u6e23\u9f3b\u6709\u5173\uff0c\u4f46\u5b83\u4eec\u51e0\u4e4e\u80af\u5b9a\u4f1a\u6709\u4e00\u4e9b\u6709\u7528\u7684\u7528\u9014\u3002\u7c73\u6b47\u5c14\u00b7\u7279\u52b3\u7279\u6e29(Michelle Trautwein)\u662f\u52a0\u5dde\u79d1\u5b66\u9662(California Academy Of Sciences)\u8425\u517b\u5b66(\u5bf9\u82cd\u8747\u7684\u7814\u7a76)\u7684\u6350\u8d60\u4e3b\u5e2d\uff0c\u4e5f\u662f\u8fd9\u9879\u7814\u7a76\u7684\u5408\u8457\u8005\u4e4b\u4e00\u3002\u5979\u544a\u8bc9\u6211\uff0c\u8815\u5f62\u87a8\u53ef\u80fd\u4f1a\u4ee5\u6211\u4eec\u6b7b\u53bb\u7684\u76ae\u80a4\u7ec6\u80de\u4e3a\u98df--\u4f7f\u5b83\u4eec\u6210\u4e3a\u6240\u6709\u8131\u89d2\u5242\u4e2d\u6700\u201c\u5929\u7136\u201d\u7684\u3002\n\u50cf\u8fd9\u6837\u7684\u79d1\u5b66\u53d1\u73b0\u98a0\u8986\u4e86\u7ec6\u83cc\u7406\u8bba\u7684\u4f20\u7edf\u89c2\u5ff5\uff0c\u5373\u6211\u4eec\u5fc5\u987b\u51fb\u9000\u5fae\u751f\u7269\u624d\u80fd\u907f\u514d\u75be\u75c5\u7684\u60f3\u6cd5\u3002\u5fae\u751f\u7269\u548c\u5b83\u4eec\u7684\u5bbf\u4e3b--\u4e5f\u5c31\u662f\u4f60\u548c\u6211--\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u591a\u7684\u662f\u4e0e\u73af\u5883\u548c\u5e73\u8861\u6709\u5173\u3002\u4e0e\u5176\u8bf4\u81ea\u6211\u548c\u4ed6\u8005\u662f\u4e00\u4e2a\u4e8c\u5206\u6cd5\uff0c\u4e0d\u5982\u8bf4\u5b83\u662f\u4e00\u4e2a\u8fde\u7eed\u4f53\u3002\n\u8fd9\u4e00\u65b0\u8ba4\u8bc6\u7684\u542b\u4e49\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u5982\u4f55\u62a4\u7406\u76ae\u80a4\u4ea7\u751f\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\u6bd4\u5982\uff0c\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821\u76ae\u80a4\u79d1\u533b\u751f\u7406\u67e5\u5fb7\u00b7\u52a0\u6d1b(Richard Gallo)\u6700\u8fd1\u9886\u5bfc\u7684\u4e00\u9879\u7814\u7a76\u3002\u4ed6\u7684\u56e2\u961f\u7528\u4e00\u79cd\u5b58\u5728\u4e8e\u5927\u591a\u6570\u4eba\u7c7b\u76ae\u80a4\u4e0a\u7684\u53eb\u505a\u8868\u76ae\u8461\u8404\u7403\u83cc\u7684\u7ec6\u83cc\u8986\u76d6\u4e86\u4e00\u7ec4\u5c0f\u9f20\uff1b\u53e6\u4e00\u7ec4\u5c0f\u9f20\u6c90\u6d74\u7684\u662f\u540c\u4e00\u79cd\u7ec6\u83cc\u7684\u4e0d\u540c\u83cc\u682a\u3002\u7136\u540e\uff0c\u6240\u6709\u7684\u5c0f\u9f20\u90fd\u88ab\u6652\u9ed1\u4e86-\u90a3\u4e9b\u6d82\u6709\u4e00\u79cd\u8461\u8404\u7403\u83cc\u8868\u76ae\u7684\u5c0f\u9f20\u60a3\u76ae\u80a4\u764c\u7684\u51e0\u7387\u8f83\u4f4e\u3002\u76d6\u6d1b\u63a8\u6d4b\uff0c\u539f\u56e0\u662f\u8fd9\u79cd\u83cc\u682a\u4ea7\u751f\u4e00\u79cd\u540d\u4e3a6-N-\u7f9f\u57fa\u6c28\u57fa\u560c\u5464\u7684\u5316\u5408\u7269\uff0c\u8fd9\u79cd\u5316\u5408\u7269\u4f3c\u4e4e\u53ef\u4ee5\u963b\u6b62\u80bf\u7624\u7ec6\u80de\u7684\u590d\u5236\u3002\n\u5931\u53bb\u5e73\u8861\u7684\u76ae\u80a4\u5fae\u751f\u7269\u7fa4\u4e0d\u4ec5\u4ec5\u662f\u8fc7\u5ea6\u4f7f\u7528\u80a5\u7682\u548c\u64e6\u6d17\u7684\u7ed3\u679c\u3002\u6211\u4eec\u4e5f\u63a5\u89e6\u8fc7\u5177\u6709\u6297\u83cc\u7279\u6027\u7684\u9632\u8150\u5242\u3002\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u5bf9\u7f9f\u57fa\u82ef\u7532\u9178\u916f\uff0c\u5b83\u5df2\u7ecf\u88ab\u7528\u6765\u5ef6\u957f\u8bb8\u591a\u536b\u751f\u548c\u7f8e\u5bb9\u4ea7\u54c1\u7684\u4fdd\u8d28\u671f-\u9664\u81ed\u5242\u3001\u5316\u5986\u54c1\u3001\u7259\u818f\u3001\u6d17\u53d1\u6c34-\u4ee5\u53ca\u5305\u88c5\u98df\u54c1\u3002\u5c11\u91cf\u7684\u5bf9\u7f9f\u57fa\u82ef\u7532\u9178\u916f\u662f\u65e0\u5bb3\u7684\uff1b\u4eba\u4eec\u7684\u62c5\u5fe7\u6e90\u4e8e\u6570\u5341\u5e74\u6765\u7684\u7d2f\u79ef\u66b4\u9732\u3002\u4e8b\u5b9e\u4e0a\uff0c\u73b0\u5728\u6211\u4eec\u6240\u6709\u4eba\u7684\u8840\u6db2\u6216\u76ae\u80a4\u4e0a\u90fd\u6709\u5bf9\u7f9f\u57fa\u82ef\u7532\u9178\uff0c\u800c\u4e14\uff0c\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u53ef\u4ee5\u6740\u6b7b\u5e7f\u6cdb\u7684\u7ec6\u83cc\u548c\u771f\u83cc\u3002\u6240\u4ee5\u95ee\u9898\u4e0d\u662f\u5bf9\u7f9f\u57fa\u82ef\u7532\u9178\u916f\u662f\u5426\u6539\u53d8\u4e86\u6211\u4eec\u7684\u5fae\u751f\u7269\u7fa4\u843d\uff0c\u800c\u662f\u5b83\u6709\u591a\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u7f8e\u56fd\u56fd\u5bb6\u8fc7\u654f\u548c\u4f20\u67d3\u75c5\u7814\u7a76\u6240\u7684\u7814\u7a76\u4eba\u5458\u62a5\u544a\u79f0\uff0c\u542b\u6709\u5bf9\u7f9f\u57fa\u82ef\u7532\u9178\u916f\u7684\u4ea7\u54c1\u53ef\u4ee5\u963b\u6b62\u7c98\u819c\u73ab\u7470\u5355\u80de\u83cc\u7684\u751f\u957f-\u4e00\u79cd\u53ef\u4ee5\u6740\u6b7b\u53e6\u4e00\u79cd\u7ec6\u83cc\u7684\u7ec6\u83cc\uff0c\u8fd9\u79cd\u7ec6\u83cc\u5728\u6e7f\u75b9\u7206\u53d1\u671f\u95f4\u589e\u6b96\uff0c\u79f0\u4e3a\u91d1\u9ec4\u8272\u8461\u8404\u7403\u83cc\u3002\n\u6731\u8389\u00b7\u585e\u683c\u96f7(Julie Segre)\u57282012\u5e74\u53d1\u5e03\u4e86\u7b2c\u4e00\u5f20\u4eba\u7c7b\u76ae\u80a4\u7ec6\u83cc\u548c\u771f\u83cc\u591a\u6837\u6027\u7684\u5730\u5f62\u56fe\uff0c\u5f53\u5979\u8c08\u5230\u80a0\u9053\u5fae\u751f\u7269\u7fa4\u6bd4\u76ae\u80a4\u53d7\u5230\u7684\u5173\u6ce8\u8981\u591a\u5f97\u591a\u65f6\uff0c\u5979\u542c\u8d77\u6765\u51e0\u4e4e\u662f\u5728\u4e3a\u7236\u6bcd\u8fa9\u62a4\u3002\u73b0\u5728\u9a6c\u91cc\u5170\u5dde\u8d1d\u585e\u65af\u8fbe\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u5fae\u751f\u7269\u57fa\u56e0\u7ec4\u90e8\u95e8\u7684\u8d1f\u8d23\u4eba\u585e\u683c\u96f7\u8bf4\uff1a\u201c\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u4eba\u4eec\u5bf9\u751f\u6d3b\u5728\u80a0\u9053\u4e2d\u7684\u5fae\u751f\u7269\u548c\u5bf9\u751f\u6d3b\u5728\u76ae\u80a4\u4e0a\u7684\u5fae\u751f\u7269\u6709\u7740\u5982\u6b64\u4e0d\u540c\u7684\u611f\u89c9\uff0c\u201d\u585e\u683c\u96f7\u73b0\u5728\u662f\u4f4d\u4e8e\u9a6c\u91cc\u5170\u5dde\u8d1d\u585e\u65af\u8fbe\u7684\u7f8e\u56fd\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u5fae\u751f\u7269\u57fa\u56e0\u7ec4\u5b66\u90e8\u7684\u8d1f\u8d23\u4eba\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u4eba\u4eec\u5bf9\u751f\u6d3b\u5728\u80a0\u9053\u4e2d\u7684\u5fae\u751f\u7269\u7684\u611f\u89c9\u4e0e\u5bf9\u76ae\u80a4\u4e0a\u7684\u5fae\u751f\u7269\u7684\u611f\u89c9\u5982\u6b64\u4e0d\u540c\u3002\u201d\u201c\u6bcf\u4e2a\u4eba\u90fd\u60f3\u5403Activia\u9178\u5976\uff0c\u8ba9\u81ea\u5df1\u5728\u7ec6\u83cc\u4e2d\u5b9a\u5c45\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u60f3\u7528\u666e\u745e\u5229(Purell)\u3002\u201d\n\u98ce\u9669\u8d44\u672c\u5bb6\u6b63\u6295\u5165\u6570\u767e\u4e07\u7f8e\u5143\u8bd5\u56fe\u6539\u53d8\u8fd9\u4e00\u70b9-\u8fd9\u610f\u5473\u7740\u901a\u8fc7\u5f00\u53d1\u4e00\u79cd\u5c40\u90e8\u76ca\u751f\u83cc\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u65e5\u5e38\u62a4\u80a4\u7a0b\u5e8f\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u51fa\u552e\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u585e\u683c\u96f7\u7684\u4e00\u4e9b\u79d1\u5b66\u540c\u4e8b\u6b63\u5728\u6d4b\u8bd5\u201c\u7ec6\u83cc\u7597\u6cd5\u201d\u6765\u6cbb\u7597\u73b0\u6709\u7684\u75be\u75c5\u3002NIAID\u7684\u7814\u7a76\u4eba\u5458\u5c1d\u8bd5\u5728\u6e7f\u75b9\u60a3\u8005\u7684\u5185\u8098\u55b7\u6d12\u524d\u8ff0\u7684\u73ab\u7470\u5355\u80de\u83cc\u7c98\u819c\u3002\u6839\u636e\u9996\u5e2d\u8c03\u67e5\u5458\u4f0a\u6069\u00b7\u8fc8\u5c14\u65af(Ian Myles)\u7684\u8bf4\u6cd5\uff0c\u7ecf\u8fc7\u6bcf\u5468\u4e24\u6b21\u7684\u516d\u5468\u5e94\u7528\uff0c\u5927\u591a\u6570\u60a3\u8005\u7684\u7ea2\u80bf\u548c\u7619\u75d2\u7b49\u75c7\u72b6\u90fd\u6709\u6240\u51cf\u8f7b\u3002\u4e00\u4e9b\u4eba\u8fd8\u62a5\u544a\u8bf4\uff0c\u5373\u4f7f\u5728\u6cbb\u7597\u505c\u6b62\u540e\uff0c\u4e5f\u9700\u8981\u8f83\u5c11\u7684\u5c40\u90e8\u7c7b\u56fa\u9187\u3002\nSegre\u76ee\u524d\u770b\u5230\u7684\u5e0c\u671b\u4e0d\u662f\u76ca\u751f\u83cc(\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u662f\u5fae\u751f\u7269\u672c\u8eab)\uff0c\u800c\u662f\u76ca\u751f\u83cc--\u5404\u79cd\u201c\u5582\u517b\u6211\u4eec\u7684\u5fae\u751f\u7269\u82b1\u56ed\u201d\u7684\u4ea7\u54c1\u3002\u6b63\u5e38\u548c\u6709\u76ca\u7684\u5fae\u751f\u7269\u5df2\u7ecf\u5b58\u5728\uff1b\u6211\u4eec\u53ef\u80fd\u4e0d\u9700\u8981\u6dfb\u52a0\u5b83\u4eec\uff0c\u800c\u662f\u4fc3\u8fdb\u5b83\u4eec\uff0c\u5979\u8bf4\u3002\u5e02\u573a\u4e0a\u5df2\u7ecf\u4e0a\u5e02\u7684\u4e00\u4e9b\u4e1c\u897f\u53ef\u80fd\u662f\u76ca\u751f\u83cc\uff0c\u6bd4\u5982\u9ecf\u571f\u9664\u81ed\u5242\uff0c\u5b83\u53ef\u4ee5\u5438\u6536\u76ae\u8102\uff0c\u53ef\u80fd\u4f1a\u9650\u5236\u4ea7\u751f\u6c14\u5473\u7684\u5fae\u751f\u7269\u79cd\u7fa4\u3002\n\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u4ece\u5b69\u63d0\u65f6\u4ee3\u5f00\u59cb\uff0c\u5728\u81ea\u7136\u754c\u5446\u4e0a\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f3c\u4e4e\u662f\u5efa\u7acb\u548c\u4fdd\u6301\u5065\u5eb7\u76ae\u80a4\u751f\u7269\u7fa4\u7684\u6700\u597d\u65b9\u5f0f\u4e4b\u4e00\u3002\u6211\u4eec\u662f\u5728\u5176\u4ed6\u4eba\u3001\u52a8\u7269\u3001\u690d\u7269\u53ca\u5176\u643a\u5e26\u7ed9\u6211\u4eec\u7684\u6240\u6709\u968f\u4e4b\u800c\u6765\u7684\u5fae\u751f\u7269\u7684\u5b58\u5728\u4e0b\u8fdb\u5316\u7684\u3002\u5f53\u7136\uff0c\u5927\u6d41\u884c\u9650\u5236\u4e86\u6211\u4eec\u5728\u6237\u5916\u7684\u65f6\u95f4\u548c\u5f7c\u6b64\u7684\u63a5\u89e6\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u6709\u9488\u5bf9\u6027\u7684\u536b\u751f-\u518d\u4e00\u6b21\uff0c\u6d17\u624b\uff01-\u548c\u793e\u4f1a\u8ddd\u79bb\u76f8\u5f53\u4e8e\u5173\u952e\u7684\u3001\u62ef\u6551\u751f\u547d\u7684\u533b\u7597\u5e72\u9884\u3002\u4f46\u662f\uff0c\u5c3d\u53ef\u80fd\u9891\u7e41\u548c\u79ef\u6781\u5730\u6d88\u706d\u6240\u6709\u5fae\u751f\u7269\u5e76\u4e0d\u603b\u662f\u5408\u9002\u7684\u3002\u5c31\u50cf\u4efb\u4f55\u836f\u7269\u4e00\u6837\uff0c\u8d8a\u591a\u5e76\u4e0d\u610f\u5473\u7740\u66f4\u597d\u3002\u8fd9\u573a\u6d41\u884c\u75c5\u7684\u4e00\u4e2a\u6c38\u6052\u7684\u603b\u4f53\u4e3b\u9898\u662f\uff1a\u9664\u4e86\u6839\u9664\u574f\u5904\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bfb\u627e\u597d\u7684\u65b9\u9762\u3002\n\u81f3\u5c11\uff0c\u6211\u4eec\u5f00\u59cb\u5b66\u4f1a\u4e0d\u78b0\u81ea\u5df1\u7684\u8138\u3002\u6211\u4eec\u7684\u87a8\u7c7b\u53ef\u80fd\u4f1a\u5fc3\u5b58\u611f\u6fc0\u3002\n\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u5411\u7f16\u8f91\u63d0\u4ea4\u4e00\u5c01\u4fe1\uff0c\u6216\u5199\u4fe1\u7ed9letters@theatlantic.com\u3002\n\u533b\u5b66\u535a\u58eb\uff0c\u662f\u201c\u5927\u897f\u6d0b\u6708\u520a\u201d\u7684\u7279\u7ea6\u64b0\u7a3f\u4eba\u3002\u4ed6\u4e5f\u662f\u8036\u9c81\u5927\u5b66\u516c\u5171\u536b\u751f\u5b66\u9662\u7684\u8bb2\u5e08\uff0c\u4e5f\u662f\u5373\u5c06\u51fa\u7248\u7684\u65b0\u4e66\u201c\u6e05\u6d01\uff1a\u76ae\u80a4\u7684\u65b0\u79d1\u5b66\u201d(Clean\uff1aThe New Science of Skin)\u7684\u4f5c\u8005\u3002", "note_en": "I when the Canadian air starts drying out, the men flock to Sandy Skotnicki\u2019s office. The men are itchy. Skotnicki studied microbiology before becoming an assistant professor of dermatology at the University of Toronto. She has been practicing for 23 years, always with an eye to how the environment\u2014including the microbial one on our skin\u2014affects health. \u201cI say to them, \u2018How do you shower?\u2019\u200a\u201d she told me. \u201cThey take the squeegee thing and wash their whole body with some sort of men\u2019s body wash. They\u2019re showering twice a day because they\u2019re working out. As soon as I get them to stop doing that and just wash their bits, they\u2019re totally fine.\u201d\n    \u201cBits would be underarms, groin, feet,\u201d she said. \u201cSo when you\u2019re in the shower or the bath, do you need to wash here?\u201d She pointed to her forearm. \u201cNo.\u201d Even water alone, especially hot water, slowly strips away the oils in the outer layers of skin that help preserve moisture\u2014and the drier and more porous someone\u2019s skin, the more susceptible it is to irritants and allergens.\n Skotnicki believes that this is one way overwashing prompts eczema to flare in people with a genetic predisposition to the disease. While eczema itself can be debilitating, it often does not travel alone. It seems to be part of a constellation of conditions caused by immune-system misfires. Infants with eczema have  an increased risk of developing allergic rhinitis or asthma in childhood, part of a cascade of immune-system overreactions  known as the \u201catopic march.\u201d\n    \u201cAnd so what if,\u201d Skotnicki speculated, \u201cas a society, you actually triggered eczema by overwashing?\u201d\n a weirder time to question washing. I\u2019ve spent the past three years reporting on how our notions of what it means to be \u201cclean\u201d have evolved over time\u2014from basic hygiene practices to elaborate rituals that involve dozens of products targeted at each of us by gender and age and \u201cskin type.\u201d At the same time, the incidence of immune-related skin conditions such as eczema and psoriasis has risen in the developed world, while acne is as pernicious as ever, despite the constant stream of expensive new medications and unguents sold to address it.\n   Though no one would ever wish it to happen this way, the pandemic could mark a chance to reexamine how much cleanliness is good for us, and what practices we\u2019d be better off without. Let\u2019s start with the obvious: Wash your hands, for 20 seconds, many times a day. It\u2019s possibly the single most valuable thing you can do to prevent the spread of the coronavirus.\n  Americans are notoriously resistant to that basic recommendation, but we\u2019ve also been oblivious to the importance of the trillions of microbes that live on our skin, the largest organ in the immune system. An early jolt of public recognition that our skin was thick with them came in 2014, when researchers scraped the faces of a small group of volunteers in North Carolina and  found DNA evidence of microscopic mites called  Demodex burrowed in their pores. The detection of the colorless arachnids  made headlines nationwide, eliciting a widespread cry along the lines of  Get these things off of me this instant. But although an abnormally high density of the half-millimeter bugs has been linked to rosacea, they\u2019re almost surely serving some useful purposes. Michelle Trautwein, an endowed chair of dipterology (the study of flies) at the California Academy of Sciences and a co-author of the study, told me that  Demodex may feed off our dead skin cells\u2014making them the most \u201cnatural\u201d exfoliants of all.\n  Scientific findings like these are upending the traditional conception of germ theory, the idea that we must fight off microbes to avoid disease. The relationship between microbes and their hosts\u2014that would be you and me\u2014is more about context and balance. Self and other is less of a dichotomy than a continuum.\n  The implications of this new understanding are likely to have a far-reaching impact on how we take care of our skin. Consider, for example,  a recent study led by the UC San Diego dermatologist Richard Gallo. His team covered one group of mice with a bacterium that is present on most human skin called  Staphylococcus epidermidis; another group got a bath of a different strain of the same bacterium. Then the mice all got suntans\u2014and those coated with one type of the  Staph epidermidis developed fewer skin cancers. The reason, Gallo theorized, is that this strain produces a compound called 6\u2011N\u2011hydroxyaminopurine, which seems to prevent the replication of tumor cells.\n    An out-of-balance skin microbiome isn\u2019t just the result of too much soap and scrubbing. We\u2019ve also exposed ourselves to preservatives with antimicrobial properties. Prime among them are parabens, which have been used for the better part of a century to extend the shelf life of many hygiene and beauty products\u2014deodorant, makeup, toothpaste, shampoo\u2014as well as packaged foods. In small amounts, parabens are harmless; the concern arises from cumulative exposure over decades. Virtually all of us now have parabens in our blood or on our skin, and, as intended, they destroy a wide range of bacteria and fungi. So the question isn\u2019t whether parabens have altered our microbiomes, but how much it matters. Researchers at the National Institute of Allergy and Infectious Diseases reported, for example, that products containing parabens can block the growth of  Roseomonas mucosa\u2014a bacterium that can kill another bacterium, one that proliferates during eczema flares called  Staphylococcus aureus.\n Julie Segre, who published the first topographical maps of human skin\u2019s bacterial and fungal diversity in 2012, sounds almost parentally defensive when she talks about the fact that the gut microbiome has gotten so much more attention than the skin\u2019s. \u201cI don\u2019t understand exactly why it is that people have such a different sense of the microbes that live in their gut than they do about the microbes that live on their skin,\u201d says Segre, who now leads the Microbial Genomics Section at the National Institutes of Health in Bethesda, Maryland. \u201cEveryone wants to eat Activia yogurt and colonize themselves with bacteria, and then they want to use Purell.\u201d\n   Venture capitalists are pouring millions into trying to change that\u2014meaning by developing a topical probiotic that could be sold as an essential part of an everyday skin-care routine. At the same time, some of Segre\u2019s scientific colleagues are testing \u201cbacteriotherapy\u201d to treat existing diseases. Researchers at NIAID tried spraying eczema patients\u2019 inner elbows with the aforementioned  Roseomonas mucosa. After six weeks of twice-weekly applications, symptoms such as redness and itching  diminished in most of the patients, according to Ian Myles, the lead investigator. Some also reported needing fewer topical steroids even after the treatment stopped.\n The promise Segre sees at the moment is not in probiotics (which, technically, are the microbes themselves), but in  prebiotics\u2014the various products that \u201cfeed our microbial gardens.\u201d The normal and beneficial microbes are there already; we probably don\u2019t need to add them so much as promote them, she says. Some things already on the market probably work as prebiotics, such as clay-based deodorants, which absorb sebum and may limit the microbial populations that produce odor.\n    At a fundamental level, spending time in the natural world, starting from early childhood, seems to be one of the best ways to build and maintain a healthy skin biome. We evolved in the presence of other people, animals, plants, and all the attendant microbes they carry to us. Of course, the pandemic limits our time outdoors and exposure to one another. For now, targeted hygiene\u2014again, wash your hands!\u2014and social distancing amount to crucial, lifesaving medical interventions. But the obliteration of all microbes as often and aggressively as possible is not always appropriate. As with any medicine, more does not mean better. An abiding overall theme of the pandemic: In addition to eradicating the bad, we need to seek out the good.\n At the very least, we\u2019re starting to learn not to touch our face. Our mites are probably grateful.\n    We want to hear what you think about this article.  Submit a letter to the editor or write to letters@theatlantic.com.\n            , M.D., is a staff writer at  The Atlantic. He is also a lecturer at Yale School of Public Health and author of the forthcoming book   Clean: The New Science of Skin.", "posttime": "2020-06-22 23:53:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ad8\u4f30,overrated,\u5fae\u751f\u7269", "title": "\u536b\u751f\u88ab\u9ad8\u4f30\u4e86--\u4f60\u53ef\u80fd\u592a\u5e72\u51c0\u4e86", "title_en": "Hygiene Is Overrated \u2013 You Can Be Too Clean", "transed": 1, "url": "https://www.theatlantic.com/magazine/archive/2020/07/hygiene-is-overrated/612235/", "via": "", "real_tags": ["\u9ad8\u4f30", "overrated", "\u5fae\u751f\u7269"]}]