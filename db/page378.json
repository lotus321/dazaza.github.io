[{"category": "", "categoryclass": "", "imagename": "59ae017bb57773e98014d4b788151b30.jpg", "infoid": 1001687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6025\u4e8e\u62e5\u62b1\u5c16\u7aef\u6280\u672f\u7684\u4f01\u4e1a\u6b63\u5728\u63a2\u7d22\u91cf\u5b50\u8ba1\u7b97\uff0c\u8fd9\u79cd\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u91cf\u5b50\u6bd4\u7279\u6765\u6267\u884c\u5728\u7ecf\u5178\u8ba1\u7b97\u673a\u4e0a\u4f1a\u56f0\u96be\u5f97\u591a\uff0c\u6216\u8005\u6839\u672c\u4e0d\u53ef\u884c\u7684\u8ba1\u7b97\u3002\u6700\u7ec8\u76ee\u6807\u662f\u91cf\u5b50\u4f18\u52bf\uff0c\u8fd9\u662f\u91cf\u5b50\u8ba1\u7b97\u673a\u5f00\u59cb\u89e3\u51b3\u6709\u7528\u95ee\u9898\u7684\u62d0\u70b9\u3002\u867d\u7136\u8fd9\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70(\u5982\u679c\u53ef\u4ee5\u5b9e\u73b0\u7684\u8bdd)\uff0c\u4f46\u6f5c\u529b\u662f\u5de8\u5927\u7684\u3002\u5e94\u7528\u5305\u62ec\u4ece\u5bc6\u7801\u5b66\u548c\u4f18\u5316\u5230\u673a\u5668\u5b66\u4e60\u548c\u6750\u6599\u79d1\u5b66\u7684\u65b9\u65b9\u9762\u9762\u3002\n\u6b63\u5982\u91cf\u5b50\u8ba1\u7b97\u521d\u521b\u516c\u53f8IonQ\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u91cf\u5b50\u8ba1\u7b97\u662f\u4e00\u573a\u9a6c\u62c9\u677e\uff0c\u800c\u4e0d\u662f\u77ed\u8dd1\u3002\u4e0a\u4e2a\u6708\uff0c\u6211\u4eec\u6709\u5e78\u91c7\u8bbf\u4e86IonQ\u9996\u5e2d\u6267\u884c\u5b98\u5f7c\u5f97\u00b7\u67e5\u666e\u66fc(Peter Chapman)\uff0c\u8ba8\u8bba\u4e86\u5404\u79cd\u8bdd\u9898\u3002\u5728\u5176\u4ed6\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u5411\u67e5\u666e\u66fc\u8be2\u95ee\u4e86\u91cf\u5b50\u8ba1\u7b97\u5bf9\u4eba\u5de5\u667a\u80fd\u548cML\u7684\u672a\u6765\u5f71\u54cd\u3002\n\u8bdd\u9898\u5f88\u5feb\u8f6c\u5411\u4e86\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\uff0c\u5373\u4eba\u5de5\u901a\u7528\u667a\u80fd(AGI)\uff0c\u8fd9\u4e00\u70b9\u8fd8\u4e0d\u5b58\u5728\u3002\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u662f\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff0c\u5373\u6709\u4e00\u5929\u673a\u5668\u53ef\u4ee5\u7406\u89e3\u6216\u5b66\u4e60\u4eba\u7c7b\u53ef\u4ee5\u7406\u89e3\u7684\u4efb\u4f55\u667a\u529b\u4efb\u52a1\u3002\n\u67e5\u666e\u66fc\u544a\u8bc9VentureBeat\uff1a\u201c\u5728\u5f3a\u70c8\u7684\u4eba\u5de5\u667a\u80fd\u610f\u8bc6\u4e2d\uff0c\u6211\u5bf9\u6b64\u6709\u66f4\u591a\u7684\u770b\u6cd5\uff0c\u53ea\u662f\u56e0\u4e3a\u6211\u4e2a\u4eba\u5728\u8fd9\u65b9\u9762\u6709\u66f4\u591a\u7684\u7ecf\u9a8c\u3002\u201d\u201c\u6700\u8fd1\u521a\u521a\u53d1\u8868\u4e86\u4e00\u7bc7\u975e\u5e38\u6709\u8da3\u7684\u8bba\u6587\uff0c\u8ba8\u8bba\u4e86\u5982\u4f55\u4f7f\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u6765\u63a8\u65adNLP\u4e2d\u5355\u8bcd\u7684\u542b\u4e49\u3002\u6211\u786e\u5b9e\u8ba4\u4e3a\uff0c\u5bf9\u4e8e\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u6765\u8bf4\uff0c\u8fd9\u4e9b\u4e8b\u60c5\u770b\u8d77\u6765\u76f8\u5f53\u6709\u5e0c\u671b\u3002\u8fd9\u5b9e\u9645\u4e0a\u4e5f\u662f\u6211\u52a0\u5165IonQ\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u8fd9\u786e\u5b9e\u6709\u4e00\u5b9a\u7684\u5e94\u7528\u4ef7\u503c\u3002\u201c\u3002\nVB Transform 2020 Online-7\u670815\u65e5\u81f317\u65e5\uff1a\u4e0e\u9886\u5148\u7684AI\u9ad8\u7ba1\u4e00\u8d77\u53c2\u52a0\u5e74\u5ea6AI\u6d3b\u52a8\u3002\u7acb\u5373\u6ce8\u518c\uff0c\u53ef\u8282\u770130%\u7684\u6570\u5b57\u8bbf\u95ee\u901a\u884c\u8bc1\u3002\n\u5728\u968f\u540e\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u67e5\u666e\u66fc\u8be6\u7ec6\u9610\u8ff0\u4e86\u4ed6\u7684\u60f3\u6cd5\u3002\u4ed6\u5199\u9053\uff1a\u201c\u51e0\u5341\u5e74\u6765\uff0c\u4eba\u4eec\u4e00\u76f4\u8ba4\u4e3a\u5927\u8111\u7684\u8ba1\u7b97\u80fd\u529b\u5b58\u5728\u4e8e\u795e\u7ecf\u5143\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6700\u5c0f\u7684\u5355\u4f4d\u3002\u201d\u201c\u8bb8\u591a\u4eba\u7684\u65e9\u671f\u52aa\u529b\u8bd5\u56fe\u627e\u5230\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u7528\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u4eba\u5de5\u795e\u7ecf\u5143\uff0c\u4f46\u6536\u6548\u751a\u5fae\u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u7531\u5927\u8111\u662f\u4e00\u53f0\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u60f3\u6cd5\u63a8\u52a8\u7684\uff0c\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u7684\u8ba1\u7b97\u673a\u3002\n\u201c\u7136\u800c\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u76f8\u4fe1\u6211\u4eec\u73b0\u5728\u77e5\u9053\u5927\u8111\u4e0d\u662f\u4e00\u53f0\u7535\u5b50\u8ba1\u7b97\u673a\uff0c\u800c\u662f\u4e00\u53f0\u7535\u5316\u5b66\u8ba1\u7b97\u673a\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\u3002\u201c\u53ef\u60b2\u7684\u662f\uff0c\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u6ca1\u6709\u8db3\u591f\u7684\u5904\u7406\u80fd\u529b\u6765\u6a21\u62df\u795e\u7ecf\u5143\u79bb\u6563\u90e8\u5206\u7684\u5316\u5b66\u76f8\u4e92\u4f5c\u7528\uff0c\u5982\u6811\u7a81\u3001\u8f74\u7a81\u548c\u7a81\u89e6\u3002\u5373\u4f7f\u6309\u7167\u6469\u5c14\u5b9a\u5f8b\uff0c\u5b83\u4eec\u4e5f\u4e0d\u4f1a\u5728\u660e\u5e74\u6216\u4e00\u767e\u4e07\u5e74\u540e\u51fa\u73b0\u3002\u201c\u3002\n\u67e5\u666e\u66fc\u968f\u540e\u5f15\u7528\u4e86\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc\u7684\u540d\u8a00\uff0c\u4ed6\u8bf4\uff1a\u201c\u5927\u81ea\u7136\u4e0d\u662f\u7ecf\u5178\u7684\uff0c\u8be5\u6b7b\u7684\uff0c\u5982\u679c\u4f60\u60f3\u6a21\u62df\u81ea\u7136\uff0c\u4f60\u6700\u597d\u628a\u5b83\u53d8\u6210\u91cf\u5b50\u529b\u5b66\u7684\u3002\u201d\u5929\u54ea\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u5bb9\u6613\u3002\u201c\n\u67e5\u666e\u66fc\u8bf4\uff1a\u201c\u540c\u6837\uff0c\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u5f88\u53ef\u80fd\u4e0d\u662f\u7ecf\u5178\u7684\uff0c\u5b83\u4e5f\u662f\u91cf\u5b50\u529b\u5b66\u7684\u3002\u201d\nIonQ\u7684\u7ade\u4e89\u5bf9\u624b\u4e4b\u4e00D-Wave\u8ba4\u4e3a\uff0c\u91cf\u5b50\u8ba1\u7b97\u548c\u673a\u5668\u5b66\u4e60\u201c\u975e\u5e38\u5339\u914d\u201d\u3002\u67e5\u666e\u66fc\u4ecd\u6301\u89c2\u671b\u6001\u5ea6\u3002\n\u201c\u6211\u6ca1\u6709\u82b1\u8db3\u591f\u7684\u65f6\u95f4\u6765\u771f\u6b63\u7406\u89e3\u5b83\uff0c\u201d\u4ed6\u627f\u8ba4\u3002\u201c\u5f88\u660e\u663e\uff0c\u6709\u5f88\u591a\u4eba\u8ba4\u4e3aML\u548cQuantum\u6709\u91cd\u53e0\u4e4b\u5904\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u8003\u8651\u523085%\u7684ML\u90fd\u4f1a\u4ea7\u751f\u4e00\u68f5\u51b3\u7b56\u6811\uff0c\u800c\u51b3\u7b56\u6811\u7684\u6df1\u5ea6\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u8fdb\u884c\u4f18\u5316\u3002\u663e\u7136\uff0c\u6709\u5f88\u591a\u4eba\u8ba4\u4e3a\u51b3\u7b56\u6811\u7684\u751f\u6210\u53ef\u4ee5\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u6765\u4f18\u5316\u3002\u8001\u5b9e\u8bf4\uff0c\u6211\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u8fd9\u6837\u3002\u6211\u8ba4\u4e3a\u73b0\u5728\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u8fd8\u4e3a\u65f6\u8fc7\u65e9\uff0c\u4f46\u663e\u7136\u6709\u8fd9\u4e48\u591a\u4eba\u5728\u4ece\u4e8b\u8fd9\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u5f88\u96be\u60f3\u8c61\u5b83\u6ca1\u6709\u5e94\u7528\u3002\u201c\u3002\n\u67e5\u666e\u66fc\u5728\u540e\u6765\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u7ee7\u7eed\u8bf4\uff1a\u201cML\u4e0e\u4f18\u5316\u6709\u7740\u5bc6\u5207\u7684\u8054\u7cfb\uff1a\u8bb8\u591a\u5b66\u4e60\u95ee\u9898\u90fd\u88ab\u8868\u8ff0\u4e3a\u5bf9\u4e00\u7ec4\u8bad\u7ec3\u6837\u672c\u7684\u67d0\u4e9b\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u5316\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u901a\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u64c5\u957f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u3002\u201c\u3002\n\u4e0e\u4eca\u5929\u7684\u7ecf\u5178\u8ba1\u7b97\u673a\u76f8\u6bd4\uff0cQC\u5b9e\u73b0\u7684\u4f18\u5316\u6c34\u5e73\u5c06\u9ad8\u5f97\u591a\u3002\n\u57f9\u8bad\u65f6\u95f4\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11\uff0c\u56e0\u4e3aQC\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u95ee\u9898\uff0c\u5176\u4e2d\u7ecf\u5178\u8ba1\u7b97\u673a\u4e32\u884c\u6267\u884c\u76f8\u540c\u7684\u8ba1\u7b97\u3002\n\u7531\u4e8eQC\u5e26\u6765\u7684\u901f\u5ea6\u6539\u8fdb\uff0c\u53ef\u4ee5\u8003\u8651\u7684\u6392\u5217\u7684\u6570\u91cf\u53ef\u80fd\u4f1a\u5927\u5f97\u591a\u3002\n\u65e0\u8bba\u662f\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u8fd8\u662fML\uff0cIonQ\u90fd\u4e0d\u662f\u7279\u522b\u611f\u5174\u8da3\u3002\u8be5\u516c\u53f8\u5c06\u8fd9\u4e00\u70b9\u7559\u7ed9\u4e86\u5b83\u7684\u5ba2\u6237\u548c\u672a\u6765\u7684\u5408\u4f5c\u4f19\u4f34\u3002\n\u67e5\u666e\u66fc\u8bf4\uff1a\u201c\u5728\u4e00\u4e2a\u91cf\u5b50\u4f53\u7cfb\u4e2d\uff0c\u6709\u592a\u591a\u7684\u4e8b\u60c5\u8981\u505a\u3002\u201d\u201c\u4ece\u6559\u80b2\u7684\u4e00\u7aef\u4e00\u76f4\u5230\u91cf\u5b50\u8ba1\u7b97\u673a\u672c\u8eab\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u7684\u4e00\u4e9b\u7ade\u4e89\u5bf9\u624b\u5df2\u7ecf\u627f\u62c5\u4e86\u5f88\u591a\u6574\u4e2a\u95ee\u9898\u96c6\u3002\u6211\u4eecIonQ\u53ea\u662f\u4e13\u6ce8\u4e8e\u4e3a\u4ed6\u4eec\u751f\u4ea7\u4e16\u754c\u4e0a\u6700\u597d\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u6837\u7684\u5c0f\u516c\u53f8\u6765\u8bf4\uff0c\u8fd9\u5df2\u7ecf\u662f\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u4efb\u52a1\u4e86\u3002\u201c\u3002\n\u201c\u6240\u4ee5\uff0c\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u6211\u4eec\u6709\u70b9\u9ad8\u5174\u8ba9\u5176\u4ed6\u4eba\u89e3\u51b3\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u201d\u4ed6\u8865\u5145\u9053\u3002\u201c\u2026\u3002\u6211\u4eec\u6ca1\u6709\u989d\u5916\u7684\u5e26\u5bbd\u6216\u8d44\u6e90\u6295\u5165\u5230\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e0a\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u516c\u53f8\u8ba4\u4e3a\u90a3\u91cc\u6709\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u5c06\u4e0e\u4ed6\u4eec\u5408\u4f5c\uff0c\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u4ed6\u4eec\u7684\u7b97\u6cd5\u5c06\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u786c\u4ef6\u3002\u4f46\u6211\u4eec\u672c\u8eab\u5e76\u4e0d\u662f\u5728\u505aML\u4e1a\u52a1\u3002\u201c", "note_en": "Businesses eager to embrace cutting-edge technology are exploring quantum computing, which depends on qubits to perform computations that would be much more difficult, or simply not feasible, on classical computers. The ultimate goals are quantum advantage, the inflection point when quantum computers begin to solve useful problems. While that is a long way off (if it can even be achieved), the potential is massive. Applications include everything from cryptography and optimization to machine learning and materials science.\n As quantum computing startup IonQ has described it,  quantum computing is a marathon, not a sprint. We had the pleasure of interviewing IonQ CEO Peter Chapman last month to discuss a variety of topics. Among other questions, we asked Chapman about quantum computing\u2019s future impact on AI and ML.\n   The conversation quickly turned to Strong AI, or Artificial General Intelligence (AGI), which does not yet exist. Strong AI is the idea that a machine could one day understand or learn any intellectual task that a human can.\n \u201cAI in the Strong AI sense, that I have more of an opinion [about], just because I have more experience in that personally,\u201d Chapman told VentureBeat. \u201cAnd there was  a really interesting paper that just recently came out talking about how to use a quantum computer to infer the meaning of words in NLP. And I do think that those kinds of things for Strong AI look quite promising. It\u2019s actually one of the reasons I joined IonQ. It\u2019s because I think that does have some sort of application.\u201d\n  VB Transform 2020 Online - July 15-17: Join leading AI executives at the AI event of the year.  Register today and save 30% off digital access passes.\n In a follow-up email, Chapman expanded on his thoughts. \u201cFor decades, it was believed that the brain\u2019s computational capacity lay in the neuron as a minimal unit,\u201d he wrote. \u201cEarly efforts by many tried to find a solution using artificial neurons linked together in artificial neural networks with very limited success. This approach was fueled by the thought that the brain is an electrical computer, similar to a classical computer.\u201d\n \u201cHowever, since then, I believe we now know the brain is not an electrical computer, but an electrochemical one,\u201d he added. \u201cSadly, today\u2019s computers do not have the processing power to be able to simulate the chemical interactions across discrete parts of the neuron, such as the dendrites, the axon, and the synapse. And even with Moore\u2019s law, they won\u2019t next year or even after a million years.\u201d\n Chapman then quoted Richard Feynman, who famously said \u201cNature isn\u2019t classical, dammit, and if you want to make a simulation of nature, you\u2019d better make it quantum mechanical. And by golly, it\u2019s a wonderful problem because it doesn\u2019t look so easy.\u201d\n \u201cSimilarly, it\u2019s likely Strong AI isn\u2019t classical, it\u2019s quantum mechanical as well,\u201d Chapman said.\n  One of IonQ\u2019s competitors, D-Wave, argues that  quantum computing and machine learning are \u201cextremely well matched.\u201d Chapman is still on the fence.\n \u201cI haven\u2019t spent enough time to really understand it,\u201d he admitted. \u201cThere clearly [are] a lot of people who think that ML and quantum have an overlap. Certainly, if you think of 85% of all ML produces a decision tree, and the depth of that decision tree could easily be optimized with a quantum computer. Clearly, there [are] lots of people that think that generation of the decision tree could be optimized with a quantum computer. Honestly, I don\u2019t know if that\u2019s the case or not. I think it\u2019s still a little early for machine learning, but there clearly [are] so many people that are working on it. It\u2019s hard to imagine it doesn\u2019t have [an] application.\u201d\n Chapman continued in a later email: \u201cML has intimate ties to optimization: Many learning problems are formulated as minimization of some loss function on a training set of examples. Generally, Universal Quantum Computers excel at these kinds of problems.\u201d\n  The level of optimization achieved will be much higher with a QC as compared to today\u2019s classical computers.\n The training time might be substantially reduced because a QC can work on the problem in parallel, where classical computers perform the same calculation serially.\n The number of permutations that can be considered will likely be much larger because of the speed improvements that QCs bring.\n  Whether Strong AI or ML, IonQ isn\u2019t particularly interested in either. The company leaves that to its customers and future partners.\n \u201cThere\u2019s so much to be to be done in a quantum,\u201d Chapman said. \u201cFrom education at one end all the way to the quantum computer itself. I think some of our competitors have taken on lots of the entire problem set. We at IonQ are just focused on producing the world\u2019s best quantum computer for them. We think that\u2019s a large enough task for a little company like us to handle.\u201d\n \u201cSo, for the moment we\u2019re kind of happy to let everyone else work on different problems,\u201d he added. \u201c\u2026 We just don\u2019t have extra bandwidth or resources to put into working on machine learning algorithms. And luckily, there [are] lots of other companies that think that there [are] applications there. We\u2019ll partner with them in the sense that we\u2019ll provide the hardware that their algorithms will run on. But we\u2019re not in the ML business, per se.\u201d", "posttime": "2020-05-12 02:09:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u9996\u5e2d,ceo,\u91cf\u5b50", "title": "IonQ\u9996\u5e2d\u6267\u884c\u5b98\u5f7c\u5f97\u00b7\u67e5\u666e\u66fc\u8c08\u91cf\u5b50\u8ba1\u7b97\u5c06\u5982\u4f55\u6539\u53d8\u4eba\u5de5\u667a\u80fd\u7684\u672a\u6765", "title_en": "IonQ CEO Peter Chapman on How Quantum Computing Will Change the Future of AI", "transed": 1, "url": "https://venturebeat.com/2020/05/09/ionq-ceo-peter-chapman-on-how-quantum-computing-will-change-the-future-of-ai/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u9996\u5e2d", "ceo", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001685, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u524d\u8a00\uff1a\u7f9f\u57fa\u6c2f\u55b9(HCQ)\u4e0e\u963f\u5947\u9709\u7d20\u5408\u7528\u6216\u4e0d\u4e0e\u963f\u5947\u9709\u7d20\u5408\u7528\u76ee\u524d\u4ecd\u662f\u4e00\u79cd\u6f5c\u5728\u7684\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u6d41\u884c\u7684\u65b9\u6cd5\u3002\u4e00\u4e9b\u7814\u7a76\u663e\u793a\u4e86\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u65b9\u6cd5\uff1a\u5bf92020\u5e743\u67082\u65e5\u81f34\u670817\u65e5\u5728\u4e09\u7ea7\u533b\u9662\u4f4f\u9662\u7684\u6210\u4eba\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u8fdb\u884c\u5355\u4e2d\u5fc3\u56de\u987e\u6027\u7814\u7a76\u3002\u6839\u636e\u63a5\u53d7\u7684\u6cbb\u7597(\u76d0\u9178/\u963f\u5947\u9709\u7d20\u3001\u226548h\u6216\u5176\u4ed6\u6cbb\u7597)\uff0c\u6bd4\u8f83\u5404\u7ec4\u60a3\u8005\u7684\u7279\u5f81\u3002\u4ece\u5165\u9662\u5f00\u59cb\uff0c\u901a\u8fc7\u5bf9\u91cd\u75c7\u76d1\u62a4\u75c5\u623f(ICU)\u652f\u6301\u548c/\u6216\u6b7b\u4ea1\u7684\u9700\u6c42\u6765\u8bc4\u4f30\u7ed3\u679c\u3002\u7ed3\u679c\uff1a\u5185\u79d1\u75c5\u623f\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u4f4f\u9662\u60a3\u8005\u4e2d\uff0c45\u4f8b48\u5c0f\u65f6\u5185\u63a5\u53d7\u76d0\u9178\u963f\u5947\u9709\u7d20\u2265\u6cbb\u7597\uff0c\u4f18\u826f\u7387\u4e3a91.1%(OR=6.2p=0.002)\uff0c\u4f18\u4e8e\u5176\u4ed6\u6cbb\u7597\u65b9\u6848(n=87)\u3002\u5728\u5e74\u9f84\u3001\u6027\u522b\u3001\u5408\u5e76\u75c7\u3001\u80f8\u90e8\u5f71\u50cf\u8303\u56f4\u548c\u4e25\u91cd\u7a0b\u5ea6\u65b9\u9762\uff0c\u5404\u7ec4\u5728\u57fa\u7ebf\u4e0a\u5177\u6709\u53ef\u6bd4\u6027\u3002\u5728\u9700\u8981\u8f6c\u9662\u5230ICU(n=27)(\u8fdb\u884c\u673a\u68b0\u901a\u6c14)\u7684\u60a3\u8005\u4e2d\uff0c\u8f6c\u9662\u7684\u4e2d\u4f4d\u5ef6\u8fdf\u65f6\u95f4\u4e3a2\u5929(IQR1-3)\u3002\u6211\u4eec\u4ec5\u62a5\u544a1\u4f8b\u60a3\u8005\u51fa\u73b0\u4e0d\u826f\u4e8b\u4ef6(\u5fc3\u7535\u56feQT\u95f4\u671f\u5ef6\u957f)\uff0c\u9700\u8981\u505c\u7528HCQ\u3002\u7ed3\u8bba\uff1aHCQ/\u963f\u5947\u9709\u7d20\u8054\u5408\u6cbb\u7597\u4f4f\u9662\u60a3\u8005\u51a0\u72b6\u75c5\u6bd2\u5177\u6709\u6f5c\u5728\u7684\u5e94\u7528\u4ef7\u503c\u3002\n\u6240\u6709\u76f8\u5173\u7684\u9053\u5fb7\u51c6\u5219\u90fd\u5f97\u5230\u4e86\u9075\u5b88\uff1b\u4efb\u4f55\u5fc5\u8981\u7684IRB\u548c/\u6216\u4f26\u7406\u59d4\u5458\u4f1a\u7684\u6279\u51c6\u90fd\u5df2\u7ecf\u83b7\u5f97\uff0cIRB/\u76d1\u7763\u673a\u6784\u7684\u8be6\u7ec6\u4fe1\u606f\u4e5f\u5305\u62ec\u5728\u624b\u7a3f\u4e2d\u3002\n\u5df2\u83b7\u5f97\u6240\u6709\u5fc5\u8981\u7684\u60a3\u8005/\u53c2\u4e0e\u8005\u540c\u610f\uff0c\u5e76\u5df2\u5c06\u9002\u5f53\u7684\u673a\u6784\u8868\u683c\u5b58\u6863\u3002\n\u6211\u7406\u89e3\u6240\u6709\u4e34\u5e8a\u8bd5\u9a8c\u548c\u4efb\u4f55\u5176\u4ed6\u9884\u671f\u5e72\u9884\u7814\u7a76\u5fc5\u987b\u5728ICMJE\u6279\u51c6\u7684\u6ce8\u518c\u673a\u6784\u6ce8\u518c\uff0c\u5982ClinicalTrials.gov\u3002\u6211\u786e\u8ba4\u624b\u7a3f\u4e2d\u62a5\u544a\u7684\u4efb\u4f55\u6b64\u7c7b\u7814\u7a76\u90fd\u5df2\u6ce8\u518c\uff0c\u5e76\u63d0\u4f9b\u4e86\u8bd5\u9a8c\u6ce8\u518cID(\u6ce8\u610f\uff1a\u5982\u679c\u5f20\u8d34\u8ffd\u6eaf\u6ce8\u518c\u7684\u524d\u77bb\u6027\u7814\u7a76\uff0c\u8bf7\u5728\u8bd5\u9a8cID\u5b57\u6bb5\u4e2d\u63d0\u4f9b\u4e00\u4efd\u58f0\u660e\uff0c\u8bf4\u660e\u4e3a\u4ec0\u4e48\u6ca1\u6709\u63d0\u524d\u6ce8\u518c\u8be5\u7814\u7a76)\u3002\n\u6211\u5df2\u9075\u5faa\u6240\u6709\u9002\u5f53\u7684\u7814\u7a76\u62a5\u544a\u6307\u5357\uff0c\u5e76\u4e0a\u4f20\u4e86\u76f8\u5173\u7684\u8d64\u9053\u7f51\u7edc\u7814\u7a76\u62a5\u544a\u6838\u5bf9\u8868\u548c\u5176\u4ed6\u76f8\u5173\u6750\u6599\u4f5c\u4e3a\u8865\u5145\u6587\u4ef6(\u5982\u679c\u9002\u7528)\u3002", "note_en": "Introduction: Hydroxychloroquine (HCQ) with or without azithromycin is currently still debated as a potential treatment for the COVID-19 epidemic. Some studies showed discrepant results. However, timing for the treatment initiation and its setting (in-hospital or out-patient) are not consistent across studies.Methods: Monocentric retrospective study conducted from 2th March to 17th April 2020, in adults hospitalized in a tertiary hospital for COVID-19. Patients characteristics were compared between groups depending on the therapy received (HCQ/azithromycin taken \u2265 48 hours or other treatment). Outcomes were evaluated from admission, by the need for intensive care unit (ICU) support and/or death. Univariate analyses were performed using non-parametric tests and confirmed by a multiple logistic regression using Pearson correlation test.Results: Among 132 patients admitted for COVID-19 in the medicine ward, 45 received HCQ/azithromycin \u2265 48 hours, with a favorable outcome in 91.1% of cases (OR=6.2, p=0.002) versus others regimen (n=87). Groups were comparable at the baseline in terms of age, sex, comorbidities, extend in thoracic imaging, and severity. Among patients that required to be transferred to ICU (n=27) (for mechanical ventilation), median delay for transfer was 2 days (IQR 1-3). We report only 1 patient that presented an adverse event (a prolonged QT interval on EKG) that required to discontinue HCQ. Conclusion: The present study suggests a potential interest of the combination therapy using HCQ/azithromycin for the treatment of COVID-19 in in-hospital patients.\n        All relevant ethical guidelines have been followed; any necessary IRB and/or ethics committee approvals have been obtained and details of the IRB/oversight body are included in the manuscript.\n  All necessary patient/participant consent has been obtained and the appropriate institutional forms have been archived.\n  I understand that all clinical trials and any other prospective interventional studies must be registered with an ICMJE-approved registry, such as ClinicalTrials.gov. I confirm that any such study reported in the manuscript has been registered and the trial registration ID is provided (note: if posting a prospective study registered retrospectively, please provide a statement in the trial ID field explaining why the study was not registered in advance).\n  I have followed all appropriate research reporting guidelines and uploaded the relevant EQUATOR Network research reporting checklist(s) and other pertinent material as supplementary files, if applicable.", "posttime": "2020-05-12 02:08:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c2f\u55b9,azithromycin,\u6cbb\u7597", "title": "\u7f9f\u6c2f\u55b9\u8054\u5408\u963f\u5947\u9709\u7d20\uff1a\u964d\u4f4eCOVID19\u53d1\u75c5\u7387\u7684\u6f5c\u529b", "title_en": "Hydroxychloroquine plus azithromycin: potential in reducing COVID19 morbidity", "transed": 1, "url": "https://www.medrxiv.org/content/10.1101/2020.05.05.20088757v1", "via": "", "real_tags": ["\u6c2f\u55b9", "\u6cbb\u7597"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001683, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53$FAMEED_COMPANY\u57282010\u5e74\u63a8\u51fa\u65f6\uff0c\u5b83\u53ea\u5728$Techbro_Founder\u8f66\u5e93\u7684\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u4eec\u7ecf\u5386\u4e86\u98ce\u9669\u6295\u8d44\u7684\u7206\u70b8\u6027\u589e\u957f\uff0c\u4eca\u5929\u6211\u4eec\u62e5\u6709\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u6570\u4ebf\u65e5\u6d3b\u8dc3\u7528\u6237(DAU)\uff0c\u4ed6\u4eec\u901a\u8fc7\u6211\u4eec\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c$Famouscompany.com\u8bbf\u95ee\u6211\u4eec\u7684\u4ea7\u54c1\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u6211\u4eec\u5bf9\u540e\u7aef\u8fdb\u884c\u4e86\u51e0\u6b21\u6050\u614c\u5f15\u53d1\u7684\u66f4\u6539\uff0c\u4ee5\u7ba1\u7406\u6211\u4eec\u7684\u6280\u672f\u503a\u52a1(\u901a\u5e38\u662f\u5728\u4e00\u6b21\u5907\u53d7\u77a9\u76ee\u7684\u505c\u673a\u4e4b\u540e)\uff0c\u4ee5\u9632\u6b62\u6211\u4eec\u7684\u670d\u52a1\u5668\u5d29\u6e83\u3002\u8fd9\u4e9b\u5e74\u6765\uff0c\u6211\u4eec\u73b0\u6709\u7684\u6280\u672f\u5806\u6808\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u670d\u52a1\uff0c\u4f46\u968f\u7740\u6211\u4eec\u5bfb\u6c42\u8fdb\u4e00\u6b65\u53d1\u5c55\uff0c\u5f88\u660e\u663e\uff0c\u5b8c\u5168\u91cd\u5199\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u4ee5\u67d0\u79cd\u65b9\u5f0f\u9632\u6b62\u6211\u4eec\u6bcf\u5e74\u5728\u5ba2\u6237\u83b7\u53d6\u4e0a\u635f\u593120\u4ebf\u7f8e\u5143\u3002\n\u6b63\u5982\u6211\u4eec\u5728\u4e4b\u524d\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\uff0c$FAMERED_COMPANY\u540e\u7aef\u5386\u6765\u90fd\u662f\u7528$NOPARICAL_LANGUAGE\u5f00\u53d1\u7684\uff0c\u5e76\u4e14\u67b6\u6784\u5728$PARICAL_OPEN_SOURCE_framework\u4e4b\u4e0a\u3002\u4e3a\u4e86\u6ee1\u8db3\u6211\u4eec\u7684\u72ec\u7279\u9700\u6c42\uff0c\u6211\u4eec\u8bbe\u8ba1\u5e76\u5f00\u6e90\u4e86$AN_ENGINEER_Take_A_Mythology_CLASS\uff0c\u8fd9\u662f\u4e00\u4e2a\u9488\u5bf9$UNSPECTIONAL_LANGUAGE\u7684\u9ad8\u53ef\u7528\u6027\u3001\u5373\u65f6\u7f16\u8bd1\u5668\u3002\u7136\u800c\uff0c\u5373\u4f7f\u4f7f\u7528\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u6700\u7ec8\u4e5f\u5f00\u59cb\u5728\u7b2c99\u4e2a\u767e\u5206\u4f4d\u5ef6\u8fdf\u7edf\u8ba1\u6570\u636e\u4e2d\u770b\u5230\u96f6\u661f\u7684\u5cf0\u503c\uff0c\u968f\u7740\u6211\u4eec\u6269\u5c55\u4ee5\u5904\u7406\u4e0d\u65ad\u589e\u52a0\u7684DAU\u8ba1\u6570\uff0c\u8fd9\u4e2a\u5cf0\u503c\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u6240\u6709\u7684\u8f6f\u4ef6\u90fd\u662f\u4e3a\u81ea\u7701\u800c\u91cd\u65b0\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u4f7f\u7528\u6211\u4eec\u4eceBrendan Gregg\u7f51\u7ad9\u590d\u5236\u7684\u4e00\u4e9bBPF\u811a\u672c\uff0c\u6211\u4eec\u7684\u5185\u90e8\u5206\u6790\u5de5\u5177$FAMERED_COMPANY\u5de5\u7a0b\u5e08\u786e\u5b9a\u6027\u80fd\u74f6\u9888\u662f\u82b1\u8d39\u5728\u5783\u573e\u6536\u96c6\u5668\u4e0a\u7684\u65f6\u95f4\u9020\u6210\u7684\u3002\n\u6700\u521d\uff0c\u6211\u4eec\u5c1d\u8bd5\u5904\u7406\u4e00\u4e9b\u6211\u4eec\u5e76\u4e0d\u771f\u6b63\u7406\u89e3\u7684\u5783\u573e\u6536\u96c6\u5668\u53c2\u6570\uff0c\u4f46\u4ee4\u6211\u4eec\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u5e76\u6ca1\u6709\u795e\u5947\u5730\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u7981\u7528\u4e86\u5783\u573e\u6536\u96c6\u3002\u8fd9\u589e\u52a0\u4e86\u6211\u4eec\u7684\u5185\u5b58\u4f7f\u7528\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u7684\u81ea\u52a8\u6309\u9700\u4f38\u7f29\u5668\u4e3a\u6211\u4eec\u5904\u7406\u4e86\u8fd9\u4e00\u70b9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\u7136\u800c\uff0c\u6700\u7ec8\uff0c\u6211\u4eec\u51b3\u5b9a\u8f6c\u884c\u7684\u539f\u56e0\u662f\uff0c\u5c3d\u7ba1\u7f8e\u56fd\u6570\u5341\u6240\u5927\u5b66\u90fd\u5728\u6559\u6388\u8fd9\u79cd\u8bed\u8a00\uff0c\u4f46\u6211\u4eec\u5f88\u96be\u7528\u5e73\u51e1\u7684\u8bed\u8a00\u62db\u8058\u65b0\u7684\u4eba\u624d\u3002\u6211\u4eec\u5728$Practical_open_source_framework\u4e0a\u53d1\u8868\u7684\u535a\u5ba2\u5e16\u5b50\u5728Reddit\u4e0a\u4e5f\u5f97\u5230\u4e86\u8f83\u5c11\u7684\u597d\u8bc4\uff0c\u8fd9\u5de9\u56fa\u4e86\u6211\u4eec\u7684\u4fe1\u5ff5\uff0c\u5373\u6211\u4eec\u7684\u6280\u672f\u5806\u6808\u73b0\u5728\u662f\u9057\u7559\u4ee3\u7801\u3002\n\u6211\u4eec\u77e5\u9053\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e9b\u80fd\u8ddf\u4e0a\u6211\u4eec\u540d\u724c\u516c\u53f8\u89c4\u6a21\u7684\u4e1c\u897f\u3002\u6211\u4eec\u6839\u636e\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u6709\u591a\u5c11\u9879\u76ee\u7b26\u53f7\uff0c\u4ed6\u4eec\u5728\u9ed1\u5ba2\u65b0\u95fb\u5934\u7248\u51fa\u73b0\u7684\u9891\u7387\uff0c\u4ee5\u53ca\u6211\u4eec\u8ba9\u529e\u516c\u5ba4\u4eba\u5458\u586b\u5199\u7684\u91cd\u8981\u8bed\u8a00\u7279\u5f81(\u6027\u80fd\u3001\u6548\u7387\u3001\u793e\u533a\u3001\u6613\u7528\u6027)\u7684\u7535\u5b50\u8868\u683c\uff0c\u5bf9\u6211\u4eec\u9009\u62e9\u7684\u4e00\u4e9b\u6709\u5e0c\u671b\u7684\u66ff\u4ee3\u65b9\u6848\u8fdb\u884c\u4e86\u8bc4\u4f30\u5e76\u8fdb\u884c\u4e86\u6392\u540d\uff0c\u8fd9\u4e9b\u9879\u76ee\u7b26\u53f7\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u6709\u591a\u5c11\u4e2a\u9879\u76ee\u7b26\u53f7\uff0c\u4ed6\u4eec\u51fa\u73b0\u5728Hacker News\u7684\u9996\u9875\u4e0a\u7684\u9891\u7387\u6709\u591a\u9ad8\uff0c\u4ee5\u53ca\u6211\u4eec\u8ba9\u529e\u516c\u5ba4\u91cc\u7684\u4eba\u586b\u5199\u7684\u91cd\u8981\u8bed\u8a00\u7279\u5f81\u7684\u7535\u5b50\u8868\u683c\u3002\n\u56e0\u4e3a\u6211\u4eec\u7684\u7535\u5b50\u8868\u683c\u6ee1\u8db3\u968f\u673a\u6027\u7684\u5f3a\u5927\u7edf\u8ba1\u4fdd\u8bc1\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u91cd\u7528\u5b83\u6765\u66ff\u6362\u6211\u4eec\u5e94\u7528\u7a0b\u5e8f\u7684CSPRNG\u3002\n\u7ecf\u8fc7\u4ed4\u7ec6\u8003\u8651\uff0c\u6211\u4eec\u51b3\u5b9a\u91cd\u65b0\u8bbe\u8ba1\u6211\u4eec\u7684\u5e73\u53f0\uff0c\u4f7f\u7528$flashy_language\u548c$hashed_technology\u3002\u6839\u636eStack Overflow\u5f00\u53d1\u4eba\u5458\u8c03\u67e5\uff0c$FLASHY_LANGUAGE\u4e0d\u4ec5\u5f88\u53d7\u6b22\u8fce\uff0c\u800c\u4e14\u662f\u8de8\u5e73\u53f0\u7684\uff1b\u6211\u4eec\u4e5f\u5728\u4f7f\u7528\u5b83\u6765\u91cd\u65b0\u5b9e\u73b0\u6211\u4eec\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\u91cd\u5199\u6211\u4eec\u7684\u6838\u5fc3\u57fa\u7840\u8bbe\u65bd\u76f8\u5f53\u7b80\u5355\uff1a\u7531\u4e8e\u6211\u4eec\u62e5\u6709\u7684\u5de5\u7a0b\u5e08\u8d85\u8fc7\u4e86\u6211\u4eec\u53ef\u80fd\u9700\u8981\u7684\u6570\u91cf\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u505a\uff0c\u6211\u4eec\u53ea\u662f\u51bb\u7ed3\u4e86\u5904\u7406\u9519\u8bef\u62a5\u544a\uff0c\u8f6c\u800c\u5c06\u7cbe\u529b\u8f6c\u79fb\u5230$HUPED_TECHING\u4e0a\u3002\u6211\u4eec\u6700\u521d\u5728\u9002\u5e94$flashy_language\u7684\u4e00\u4e9b\u602a\u7656\u65f6\u9047\u5230\u4e86\u4e00\u4e9b\u56f0\u96be\uff0c\u5e76\u4e14\u9047\u5230\u4e86\u4e00\u4e9b$hashed_technology\u7684\u9519\u8bef\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u5b83\u4eec\u5f3a\u5927\u7684\u65b0\u529f\u80fd\u8ba9\u6211\u4eec\u6d88\u9664\u4e86\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u5904\u7406\u7684\u4e00\u4e9b\u590d\u6742\u6027\u3002\n\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u90e8\u7f72\u66f4\u6539\u9700\u8981\u4e00\u4e9b\u4ed4\u7ec6\u7684\u8ba1\u5212\uff0c\u4f46\u8fd9\u4e5f\u4e0d\u592a\u56f0\u96be\uff1a\u6211\u4eec\u53ea\u9700\u5c06\u72b6\u6001\u9875\u9762\u786c\u7f16\u7801\u4e3a\u6bcf\u5f53\u6211\u4eec\u63a8\u9001\u65b0\u66f4\u6539\u65f6\u4e0d\u66f4\u65b0\uff0c\u8ba9\u7528\u6237\u731c\u6d4b\u6211\u4eec\u7684\u670d\u52a1\u662f\u5426\u542f\u52a8\u3002\u7ba1\u7406\u589e\u91cf\u90e8\u7f72\u662f\u5173\u952e\uff1a\u6211\u4eec\u5bf9\u65b0\u4ee3\u7801\u8fdb\u884c\u4e86\u79ef\u6781\u7684A/B\u6d4b\u8bd5\u3002\u6211\u4eec\u7684\u5185\u90e8\u7814\u7a76\u8868\u660e\uff0c\u5076\u5c14\u5411\u7528\u6237\u5c55\u793a\u4e00\u4e2a\u5168\u65b0\u7684\u754c\u9762\uff0c\u7136\u540e\u5728\u4ed6\u4eec\u4e0b\u6b21\u52a0\u8f7d\u9875\u9762\u65f6\u5207\u6362\u56de\u65e7\u754c\u9762\uff0c\u8fd9\u4f1a\u589e\u52a0\u7528\u6237\u53c2\u4e0e\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u786e\u4fdd\u6839\u636e\u6211\u4eec\u53d1\u73b0\u7684\u4e0e\u591a\u6b66\u88c5\u571f\u532a\u6709\u5173\u7684\u5a92\u4f53\u6587\u7ae0\u6765\u5b9e\u73b0\u8fd9\u6837\u4e00\u4e2a\u7cfb\u7edf\u3002\n\u968f\u7740\u6211\u4eec\u7684\u91cd\u5199\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\uff0c\u5e76\u5411\u6211\u4eec\u6240\u6709\u7684\u5ba2\u6237\u63a8\u51fa\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e00\u52aa\u529b\u5bf9\u6211\u4eec\u548c\u6211\u4eec\u7684\u56e2\u961f\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u529f\u3002\u6211\u4eec\u5df2\u7ecf\u6d4b\u91cf\u4e86\u6211\u4eec\u7684\u6027\u80fd\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u6458\u8981\uff1a\n\u91cd\u5199\u540e\uff0c\u5bf9\u6211\u4eec\u91cd\u8981\u7684\u6bcf\u4e2a\u6307\u6807\u90fd\u5927\u5e45\u589e\u52a0\uff0c\u6211\u4eec\u751a\u81f3\u786e\u5b9a\u4e86\u4e00\u4e9b\u4e0d\u518d\u4e0e\u6211\u4eec\u76f8\u5173\u7684\u6307\u6807\uff0c\u4f8b\u5982\u9519\u8bef\u6570\u91cf\u3001\u7528\u6237\u632b\u6298\u611f\u548c\u7ef4\u62a4\u6210\u672c\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u5728\u6211\u4eec\u7684GitHub\u9875\u9762\u4e0a\u63d0\u4f9b\u4e00\u4e9b\u6211\u4eec\u8d1f\u62c5\u5f97\u8d77\u7684\u5f00\u6e90\u4ee3\u7801\u3002\u5b83\u672c\u8eab\u6beb\u65e0\u7528\u5904\uff0c\u5e76\u4e14\u4e0e\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u7d27\u5bc6\u76f8\u5173\uff0c\u4f46\u60a8\u53ef\u4ee5\u5c06\u5176\u52a0\u661f\u4ee5\u4f7f\u6211\u4eec\u770b\u8d77\u6765\u66f4\u76f8\u5173\u3002\n\u4eba\u4eec\u7ecf\u5e38\u8bf4\uff0c\u5b8c\u5168\u91cd\u5199\u8f6f\u4ef6\u5145\u6ee1\u4e86\u98ce\u9669\uff0c\u4f46\u6211\u4eec$FAMONED_COMPANY\u559c\u6b22\u4e0b\u5927\u8d4c\u6ce8\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u4e00\u6b21\u83b7\u5f97\u4e86\u4e30\u539a\u7684\u56de\u62a5\u3002\u867d\u7136\u6211\u4eec\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5173\u6ce8\u7684\u662f\u540e\u7aef\u66f4\u6539\uff0c\u4f46\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u6211\u4eec\u4e5f\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528$FLASHY_LANGUAGE\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u8d44\u6e90\u4e3a\u6bcf\u4e2a\u5e73\u53f0\u7f16\u5199\u672c\u673a\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u589e\u52a0\u9501\u5b9a\uff0c\u8fd9\u4e9b\u91cd\u5199\u4e5f\u610f\u5473\u7740\u6211\u4eec\u5c06\u4e0d\u63a8\u8350\u7b2c\u4e09\u65b9API\u8bbf\u95ee\u6211\u4eec\u7684\u670d\u52a1\u3002\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u4e00\u4e9b\u7528\u6237\u51fa\u4e8e\u53ef\u8bbf\u95ee\u6027\u7684\u539f\u56e0\u800c\u4f9d\u8d56\u8fd9\u4e9b\u754c\u9762\uff0c\u4f46\u6211\u4eec$FAMERED_COMPANY\u81f4\u529b\u4e8e\u6539\u5584\u6211\u4eec\u4e3a\u6b8b\u75be\u4eba\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u53ea\u8981\u4f60\u4e0d\u4f7f\u7528\u4efb\u4f55\u5f62\u5f0f\u7684\u8f85\u52a9\u6280\u672f\uff0c\u800c\u8fd9\u4e9b\u6280\u672f\u6839\u672c\u4e0d\u518d\u9002\u7528\u4e8e\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6211\u4eec\u5e0c\u671b\u60a8\u5c06\u6211\u4eec\u516c\u53f8\u7684\u8f76\u4e8b\u5185\u5316\u4e3a\u67d0\u79cd\u57fa\u672c\u4e8b\u5b9e\uff0c\u5e76\u5c06\u5176\u5c55\u793a\u7ed9\u8d35\u516c\u53f8\u7684CTO\uff0c\u8fd9\u6837\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u91cd\u65b0\u8bbe\u8ba1\u4ed6\u4eec\u7684\u67b6\u6784\uff0c\u5c31\u50cf\u6211\u4eec\u6240\u505a\u7684\u90a3\u6837\u3002\u6211\u4eec\u77e5\u9053\u4f60\u4f1a\u5ffd\u7565\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u4f60\u4e0d\u662f\u6211\u4eec\uff0c\u6211\u4eec\u6709\u8db3\u591f\u7684\u5de5\u7a0b\u5e08\u548c\u8d44\u6e90\u53ef\u4ee5\u505a\u4efb\u4f55\u6211\u4eec\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd9\u4e2a\u51b3\u5b9a\u4f1a\u6bc1\u4e86\u4f60\u7684\u521d\u521b\u516c\u53f8\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5f88\u5feb\u770b\u5230\u4f60\u7684\u535a\u5ba2\u5e16\u5b50\uff0c\u8bb2\u8ff0\u4f60\u4f7f\u7528$HAMED_TECHING\u7684\u7ecf\u5386\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u5f71\u54cd\u4f60\u7684\u516c\u53f8\u4f7f\u7528\u4ec0\u4e48\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728\u4e0b\u4e00\u6b21\u8bed\u8a00\u6218\u4e89\u53d1\u751f\u65f6\u63d0\u51fa\u6765\u8ba1\u5206\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5e76\u4e14\u50cf\u6211\u4eec\u4e00\u6837\u5bf9$HAMED_TECHING\u611f\u5174\u8da3\uff0c\u6211\u4eec\u6b63\u5728\u62db\u8058\uff01\u8bf7\u52a1\u5fc5\u67e5\u770b\u6211\u4eec\u7684\u5de5\u4f5c\u9875\u9762\uff0c\u90a3\u91cc\u5c06\u6ca1\u6709\u4e0e$FLASHY_LANGUAGE\u76f8\u5173\u7684\u804c\u4f4d\u3002", "note_en": "When $FAMOUS_COMPANY launched in 2010, it ran on a single server in $TECHBRO_FOUNDER\u2019s garage. Since then, we\u2019ve experienced explosive VC-funded growth and today we have hundreds of millions of daily active users (DAUs) from all around the globe accessing our products from our mobile apps and on $famouscompany.com. We\u2019ve since made a couple of panic-induced changes to our backend to manage our technical debt (usually right after a high-profile outage) to keep our servers from keeling over. Our existing technology stack has served us well for all these years, but as we seek to grow further it\u2019s clear that a complete rewrite of our application is something which will somehow prevent us from losing two billion dollars a year on customer acquisition.\n  As we\u2019ve mentioned in previous blog posts, the $FAMOUS_COMPANY backend has historically been developed in $UNREMARKABLE_LANGUAGE and architected on top of $PRACTICAL_OPEN_SOURCE_FRAMEWORK. To suit our unique needs, we designed and open-sourced $AN_ENGINEER_TOOK_A_MYTHOLOGY_CLASS, a highly-available, just-in-time compiler for $UNREMARKABLE_LANGUAGE. Even with our custom runtime, however, we eventually began seeing sporadic spikes in our 99th percentile latency statistics, which grew ever more pronounced as we scaled up to handle our increasing DAU count. Luckily, all of our software is designed from the ground up for introspectability, and using  some BPF scripts we copied from Brendan Gregg\u2019s website our in-house profiling tools $FAMOUS_COMPANY engineers determined that the performance bottlenecks were a result of time spent in the garbage collector.\n Initially, we tried messing with some garbage collector parameters we didn\u2019t really understand, but to our surprise that didn\u2019t magically solve our problems so instead we disabled garbage collection altogether. This increased our memory usage, but our automatic on-demand scaler handled this for us, as the graph below shows:\n  Ultimately, however, our decision to switch was driven by our difficulty in hiring new talent for $UNREMARKABLE_LANGUAGE, despite it being taught in dozens of universities across the United States. Our blog posts on $PRACTICAL_OPEN_SOURCE_FRAMEWORK seemed to get fewer upvotes when posted on Reddit as well, cementing our conviction that our technology stack was now legacy code.\n  We knew we needed to find something that could keep up with us at $FAMOUS_COMPANY scale. We evaluated a number of promising alternatives that we selected and ranked based on the how many bullet points they had on their websites, how often they\u2019d appear on the front page of Hacker News, and a spreadsheet of important language characteristics (performance, efficiency, community, ease-of-use) that we had people in the office fill out.\n As our spreadsheet met strong statistical guarantees of randomness, we were able to reuse it to replace our application\u2019s CSPRNG.\n After careful consideration, we settled on rearchitecting our platform to use $FLASHY_LANGUAGE and $HYPED_TECHNOLOGY. Not only is $FLASHY_LANGUAGE popular according to the Stack Overflow developer survey, it\u2019s also cross platform; we\u2019re using it to reimplement our mobile apps as well. Rewriting our core infrastructure was fairly straightforward: as we have more engineers than we could possibly ever need or even know what to do with, we simply put a freeze on handling bug reports and shifted our effort to $HYPED_TECHNOLOGY instead. We originally had some trouble with adapting to some of $FLASHY_LANGUAGE\u2019s quirks, and ran into a couple of bugs with $HYPED_TECHNOLOGY, but overall their powerful new features let us remove some of the complexity that our previous solution had to handle.\n Deploying the changes without downtime required some careful planning, but this was also not too difficult: we just hardcoded the status page to not update whenever we pushed new changes, keeping users guessing if our service was up or not. Managing incremental rollout was key: we aggressively A/B tested the new code. Our internal studies showed that gaslighting users by showing them a completely new interface once in a while and then switching back to the old one the next time they loaded a page increases user engagement, so we made sure to implement such a system based on a Medium article we found that had something to do with multi-armed bandits.\n With our rewrite now complete and rolled out to all of our customers, we think the effort has been a massive success for us and our team. We have measured our performance and you can see a summary of the results below:\n  Every metric that matters to us has increased substantially from the rewrite, and we even identified some that were no longer relevant to us, such as number of bugs, user frustration, and maintenance cost. Today we are making some of the code that we can afford to open source available on our GitHub page. It is useless by itself and is heavily tied to our infrastructure, but you can star it to make us seem more relevant.\n  It\u2019s often said that completely rewriting software is fraught with peril, but we at $FAMOUS_COMPANY like to take big bets, and it\u2019s clear that this one has paid off handsomely. While we focused on our backend changes in this blog post, as we mentioned before we are using $FLASHY_LANGUAGE in our mobile apps as well, since we don\u2019t have the resources to write native applications for each platform. Unfortunately  to increase lock-in these rewrites also mean we will be deprecating third-party API access to our services. We know some of our users relied on these interfaces for accessibility reasons, but we at $FAMOUS_COMPANY are dedicated to improving our services for those with disabilities as long as you aren\u2019t using any sort of assistive technologies, which no longer work at all with our apps.\n We hope that you internalize our company\u2019s anecdote as some sort of ground truth and show it to your company\u2019s CTO so they too can consider redesigning their architecture like we have done. We know you\u2019ll ignore the fact that you\u2019re not us and we have enough engineers and resources to do whatever we like, but the decision will ruin your startup so it\u2019s not like we\u2019ll see  your blog posts about your experience with $HYPED_TECHNOLOGY anytime soon. If you\u2019re not in a position to influence what your company uses, you can still bring it up for point-scoring the next time a language war comes up.\n If you\u2019re reading this and are interested in $HYPED_TECHNOLOGY like we are, we are hiring! Be sure to check out our jobs page, where there will be zero positions related to $FLASHY_LANGUAGE.", "posttime": "2020-05-12 01:40:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "company", "title": "\u6211\u4eec\u5728$\u540d\u4eba\u516c\u53f8\u6539\u7528$HAMED_TECHING", "title_en": "We at $Famous_company Switched to $Hyped_technology", "transed": 1, "url": "https://saagarjha.com/blog/2020/05/10/why-we-at-famous-company-switched-to-hyped-technology/", "via": "", "real_tags": ["company"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001682, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e744\u67088\u65e5\uff0c\u7ea6\u7ff0\u00b7\u970d\u987f\u00b7\u5eb7\u5a01\u51fa\u73b0\u51a0\u72b6\u75c5\u6bd2\u75c7\u72b6\u30022020\u5e744\u670811\u65e5\uff0c\u4ed6\u6b7b\u4e8e\u8fd9\u79cd\u75be\u75c5\u30021 2 3 4\u3002\n\u50cf\u5f88\u591a\u4eba\u4e00\u6837\uff0c\u6211\u54c0\u60bc\u5eb7\u5a01\u7684\u901d\u4e16\uff0c\u4f46\u6211\u4e5f\u9882\u626c\u4ed6\u7684\u4e00\u751f\u3002\u6211\u8d5e\u9882\u4ed6\u7684\u6210\u5c31\uff0c\u6211\u8d5e\u9882\u4ed6\u7684\u597d\u5947\u5fc3\uff0c\u6211\u8d5e\u9882\u4ed6\u4f7f\u91cd\u8981\u7684\u6570\u5b66\u4e3b\u9898\u5f15\u4eba\u5165\u80dc\u548c\u6709\u8da3\u7684\u6280\u5de7\u3002\n\u8fd9\u9879\u6280\u80fd\u7684\u4e00\u4e2a\u6700\u597d\u7684\u4f8b\u5b50\u662f\u672c\u6587\u7684\u4e3b\u9898\u7f16\u7a0b\u8bed\u8a00FRACTRAN\u3002\n\u5eb7\u5a01\u4ece\u65e9\u5e74\u5c31\u89e6\u52a8\u4e86\u6211\u81ea\u5df1\u7684\u751f\u6d3b\u3002\u6b63\u5982\u6211\u5728\u516b\u7687\u540e\u95ee\u9898\u2026\u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u4ee5\u53ca\u62c9\u7518\u74e6\u5c14\u5fb7\u610f\u60f3\u4e0d\u5230\u7684\u6000\u65e7\u4e4b\u60c5\uff1a\n\u6709\u4e00\u6b21\uff0c\u6211\u6bcd\u4eb2\u9001\u6211\u53bb\u4e86\u4e00\u4e2a\u5929\u624d\u513f\u7ae5\u65e5\u8425\uff0c\u5b83\u7684\u7ec4\u7ec7\u65b9\u5f0f\u5c31\u50cf\u4e00\u6240\u5927\u5b66\u3002\u201c\u5b66\u751f\u201d\u81ea\u9009\u9009\u4fee\u8bfe\uff0c\u6211\u9009\u4e86\u4e00\u95e8\u53eb\u201c\u4e4c\u6566\u5c3c\u7279\u201d\u7684\u9009\u4fee\u8bfe\u3002\u7ed3\u679c\u662f\u534a\u5929\u7684\u62fc\u56fe\u548c\u6e38\u620f\u7ec3\u4e60\uff0c\u6211\u88ab\u5438\u5f15\u4f4f\u4e86\u3002\n\u6211\u8fd8\u80fd\u5728\u54ea\u91cc\u5b66\u5230\u5728\u8d85\u7ea7\u7acb\u65b9\u4f53\u91cc\u73a9\u4e95\u5b57\u6e38\u620f\uff1f\u8fd8\u662f\u5173\u4e8e\u8bf4\u8c0e\u8005\u548c\u8bf4\u771f\u8bdd\u7684\u4eba\uff1f\u6216\u8005\uff0c\u78b0\u5de7\uff0c\u5173\u4e8e\u9a6c\u4e01\u00b7\u52a0\u5fb7\u7eb3\uff1f\u6211\u6000\u7591\u6240\u6709\u7684\u6750\u6599\u90fd\u662f\u4ece\u4ed6\u6536\u96c6\u7684\u4e13\u680f\u4e2d\u62ff\u51fa\u6765\u7684\uff0c\u8fd9\u5f88\u9002\u5408\u6211\u3002\n\u6211\u4eec\u5728\u201c\u80e1\u6566\u5c3c\u7279\u201d\u4e2d\u8c08\u5230\u7684\u5176\u4e2d\u4e00\u4ef6\u4e8b\u662f\u5eb7\u5a01\u7684\u751f\u6d3b\u6e38\u620f\u3002\u6211\u8bb0\u5f97\u5728\u90a3\u91cc\u542c\u8bf4\u8fc7\u5b83\uff0c\u4f46\u6211\u4e5f\u4e0d\u8bb0\u5f97\u7ecf\u5e38\u73a9\u5b83\u3002\u5f53\u65f6\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\uff0c\u5b8c\u5168\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u592a\u5fd9\u7740\u7231\u4e0a\u96f7\u8499\u5fb7\u00b7\u65af\u7a46\u5229\u5b89\uff0c\u4ee5\u81f3\u4e8e\u6ca1\u6709\u7ed9\u7ea6\u7ff0\u00b7\u5eb7\u5a01\u7559\u4e0b\u597d\u5947\u5fc3\u30025 6 7\u3002\n\u5728\u6211\u7684\u4e00\u751f\u4e2d\uff0c\u6211\u53c8\u51e0\u6b21\u91cd\u65b0\u53d1\u73b0\u4e86\u5eb7\u5a01\u7684\u201c\u4eba\u751f\u6e38\u620f\u201d(Game Of Life)\u3002\u6211\u4eec\u5728\u5927\u5b66\u91cc\u8c08\u8fc7\u3002\u51e0\u5e74\u540e\uff0c\u6211\u8bfb\u4e86\u5a01\u5ec9\u00b7\u5e9e\u5fb7\u65af\u901a(William Poundstone)\u7684\u201c\u9012\u5f52\u7684\u5b87\u5b99\uff1a\u5b87\u5b99\u7684\u590d\u6742\u6027\u548c\u79d1\u5b66\u77e5\u8bc6\u7684\u6781\u9650\u201d\uff0c\u5b83\u771f\u7684\u8ba9\u6211\u5927\u5403\u4e00\u60ca\uff1a\n\u4e00\u8def\u4e0a\uff0c\u6211\u5b66\u5230\u4e86\u4e00\u4e9b\u535a\u5f08\u8bba\u7684\u77e5\u8bc6\u3002\u6211\u559c\u6b22\u5404\u79cd\u5404\u6837\u7684\u6e38\u620f\uff0c\u6211\u60f3\u6211\u5728\u56fe\u4e66\u9986\u91cc\u53d1\u73b0\u4e86\u201c\u6218\u7565\u6e38\u620f\uff1a\u7406\u8bba\u4e0e\u5e94\u7528\u201d\uff0c\u5e76\u628a\u5b83\u62ff\u4e86\u8d77\u6765\uff0c\u60f3\u7740\u5b83\u4f1a\u5bf9\u6211\u7684\u4e94\u5b50\u68cb\u6709\u6240\u5e2e\u52a9\u3002\n\u8fd9\u5c31\u628a\u6211\u5e26\u5230\u4e86\u5eb7\u5a01\u7684\u201c\u8bba\u6570\u5b57\u548c\u6e38\u620f\u201d\uff0c\u5e76\u901a\u8fc7\u5e73\u884c\u7684\u8def\u5f84\uff0c\u5230\u8fbe\u4e86\u8d85\u73b0\u5b9e\u7684\u6570\u5b57\u3002\u5c31\u50cf\u201c\u751f\u6d3b\u7684\u6e38\u620f\u201d(Game Of Life)\u4e00\u6837\uff0c\u8d85\u73b0\u5b9e\u7684\u6570\u5b57\u4e0d\u65ad\u51fa\u4eba\u610f\u6599\u5730\u51fa\u73b0\uff0c\u91cd\u65b0\u70b9\u71c3\u4e86\u6211\u5bf9\u6211\u4eec\u5982\u4f55\u8868\u793a\u6570\u636e\u3001\u63d0\u4f9b\u6216\u963b\u788d\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u7684\u65b9\u5f0f\u7684\u5174\u8da3\u3002\n1987\u5e74\uff0c\u5eb7\u5a01\u4e3a1984\u5e74\u548c1985\u5e74\u5728\u65b0\u6cfd\u897f\u5dde\u83ab\u91cc\u65af\u6566\u548c1986\u5e74\u590f\u5929\u5728\u5e15\u6d1b\u963f\u5c14\u6258\u4e3e\u529e\u7684\u5173\u4e8e\u901a\u4fe1\u548c\u8ba1\u7b97\u95ee\u9898\u7684\u7279\u522b\u7814\u8ba8\u4f1a\u8d21\u732e\u4e86FRACTRAN\uff1a\u4e00\u79cd\u7b80\u5355\u7684\u901a\u7528\u7b97\u672f\u7f16\u7a0b\u8bed\u8a00\u3002\u52a0\u5229\u798f\u5c3c\u4e9a\u3002FRACTRAN\u672c\u8eab\u5728\u8be5\u9886\u57df\u5e76\u4e0d\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u516c\u5f00\u95ee\u9898\uff0c\u4f46\u6b63\u5982\u5df2\u53d1\u8868\u8bba\u6587\u7684\u7f16\u8f91\u6240\u6307\u51fa\u7684\u90a3\u6837\uff1a\n\u4e5f\u8bb8\u6240\u6709\u8d21\u732e\u4e2d\u6700\u6709\u8da3\u7684\u662f\u5eb7\u5a01\u5173\u4e8eFRACTRAN\u7684\u8ff7\u4eba\u7684\u6587\u7ae0\uff0c\u8fd9\u662f\u4e00\u4e2a\u5947\u602a\u7684\u6570\u5b57\u96c6\u5408\uff0c\u5f53\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u4ea7\u751f\u6240\u6709\u53ef\u80fd\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u4ece\u4ed6\u7684\u6587\u7ae0\u5f00\u59cb\u3002\n--Thomas M.Cover&amp\uff1bB.Gotinath\uff0c\u201c\u901a\u4fe1\u4e0e\u8ba1\u7b97\u4e2d\u7684\u516c\u5f00\u95ee\u9898\u201d10\u3002\n\u6b63\u5982\u7ef4\u57fa\u767e\u79d1\u6240\u6307\u51fa\u7684\uff0cFRACTRAN\u7a0b\u5e8f\u662f\u7531\u6b63\u5206\u6570\u548c\u521d\u59cb\u6b63\u6574\u6570\u8f93\u5165n\u7ec4\u6210\u7684\u6709\u5e8f\u5217\u8868\u3002\u8be5\u7a0b\u5e8f\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u66f4\u65b0\u6574\u6570n\u6765\u8fd0\u884c\uff1a\n\u5bf9\u4e8e\u5217\u8868\u4e2dnf\u4e3a\u6574\u6570\u7684\u7b2c\u4e00\u4e2a\u5206\u6570f\uff0c\u8bf7\u5c06n\u66ff\u6362\u4e3anf\u3002\n\u91cd\u590d\u6b64\u89c4\u5219\uff0c\u76f4\u5230\u5217\u8868\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5206\u6570\u5728\u4e58\u4ee5n\u65f6\u4ea7\u751f\u6574\u6570\uff0c\u7136\u540e\u505c\u6b62\u3002\n\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u6590\u6ce2\u7eb3\u5951\u6570\u7684FRACTRAN\u7a0b\u5e8f\uff1a17/65\u3001133/34\u300117/19\u300123/17\u30012233/69\u300123/29\u300131/23\u300174/341\u300131/37\u300141/31\u3001129/287\u300141/43\u300113/41\u30011/13\u30011/3\u300211\u3002\n\u6240\u6709FRACTRAN\u7a0b\u5e8f\u4e5f\u90fd\u4ee5n\u7684\u521d\u59cb\u503c\u5f00\u59cb\uff0c\u8be5\u503c\u6709\u65f6\u662f\u5e38\u91cf\uff0c\u6709\u65f6\u7531\u7528\u6237\u63d0\u4f9b\u3002\u5f53\u5b83\u7531\u7528\u6237\u63d0\u4f9b\u65f6\uff0c\u6709\u65f6\u9700\u8981\u51c6\u5907n\u4ee5\u4f7f\u5176\u53ef\u7528\u3002\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e3a\u4e86\u8ba1\u7b97\u67d0\u4e2ax\u503c\u7684fib(X)\uff0c\u6211\u4eec\u8ba1\u7b97n=78*5^(x-1)\u3002\n\u8ba9\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u6765\u8ba1\u7b97fib(7)\u3002\u6211\u4eec\u4ecen=78*5^(7-1)\u5f00\u59cb\uff0c\u53731,218,750\u3002\u6211\u4eec\u5c06\u8ddf\u968f\u4e00\u6bb5\u65f6\u95f4\u6765\u611f\u53d7\u4e00\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n\u8ba1\u5212\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5206\u6570\u662f17/65\u30021,218,750\u4e58\u4ee517/65\u7b49\u4e8e318,750\uff0c\u56e0\u6b64\u6211\u4eec\u5c061,218,750\u66ff\u6362\u4e3a318,750\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u3002\n\u8ba1\u5212\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5206\u6570\u662f17/65\u3002318,750\u9664\u4ee565\u4f1a\u5269\u4e0b\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u8282\u76ee\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f133/34\u3002318,750\u4e58\u4ee5133/34\u7b49\u4e8e1,246,875\uff0c\u56e0\u6b64\u6211\u4eec\u5c06318,750\u66ff\u6362\u4e3a1,246,875\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u3002\n\u8282\u76ee\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f13/41\u300224576\u9664\u4ee541\u4f1a\u5269\u4e0b\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u7a0b\u5e8f\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f1/13\u300224,576\u9664\u4ee513\u4f1a\u7559\u4e0b\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\n\u7a0b\u5e8f\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f1/3\u300224,576\u4e58\u4ee51/3\u662f8,192\uff0c\u6240\u4ee5\u6211\u4eec\u75288,192\u66ff\u636224,576\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u3002\n8,192\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6570\u5b57\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e00\u4e2a\u9664\u6570\u53ef\u4ee5\u5747\u5300\u5730\u9664\u4ee58,192\u3002\u6240\u4ee5\u6211\u4eec\u770b\u5230\u3002\n\u8ba1\u5212\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5206\u6570\u662f17/65\u30028192\u9664\u4ee565\u4f1a\u5269\u4e0b\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u8282\u76ee\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f133/34\u30028,192\u9664\u4ee534\u5269\u4e0b\u7684\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u7a0b\u5e8f\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f17/19\u30028,192\u9664\u4ee519\u5269\u4e0b\u7684\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\n\u8282\u76ee\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f13/41\u30028192\u9664\u4ee541\u4f1a\u5269\u4e0b\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u7a0b\u5e8f\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f1/13\u30028,192\u9664\u4ee513\u540e\u5269\u4e0b\u7684\u662f\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\n\u7a0b\u5e8f\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5206\u6570\u662f1/3.8,192\u9664\u4ee53\u5269\u4e0b\u7684\u662f\u4f59\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\u7a0b\u5e8f\u4e2d\u6ca1\u6709\u4e00\u4e2a\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5e8f\u5e73\u5747\u5206\u914d\u52308,192\u4e2a\uff0c\u6240\u4ee5\u7a0b\u5e8f\u6682\u505c\u3002\n\u6240\u6709FRACTRAN\u7a0b\u5e8f\u90fd\u4f1a\u4e3an\u751f\u6210\u4e00\u7cfb\u5217\u503c\uff0c\u5e76\u4e14\u5fc5\u987b\u4ece\u8fd9\u4e9b\u503c\u4e2d\u63d0\u53d6\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\u5bf9\u4e8e\u6211\u4eec\u7684Fibonacci\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u503c\u4ee51,218,750\u3001318,750\u30011,246,875\u548c1,115,625\u5f00\u59cb\uff0c\u7136\u540e\u4ee5221,184\u300173,728\u300124,576\u548c8,192\u7ed3\u675f\u300213\u4e2a\u3002\n\u5728\u6590\u6ce2\u7eb3\u5951\u6570\u5217\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u662fn\u7684\u6700\u540e\u4e00\u4e2a\u503c\u7684log2\u3002n\u7684\u6700\u540e\u4e00\u4e2a\u503c\u662f8,192\uff0clog2(8,192)\u662f13\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002\u7b2c7\u4e2a\u6590\u6ce2\u7eb3\u5951\u6570\u662f13\u3002\n\u7a0b\u5e8f\u672c\u8eab\uff0c\u4e00\u4e2a\u6709\u9650\u7684\u5206\u6570\u5217\u8868\u3002\u672c\u8282\u76ee\u540d\u5355\u4e3a17/65\u3001133/34\u300117/19\u300123/17\u30012233/69\u300123/29\u300131/23\u300174/341\u300131/37\u300141/31\u3001129/287\u300141/43\u300113/41\u30011/13\u548c1/3\u3002\n\u521d\u59cb\u503cn\u3002\u5b83\u53ef\u4ee5\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u662f\u7528\u6237\u63d0\u4f9b\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u7528\u6237\u5b9a\u4e49\u7684\u503c\u7684\u8f6c\u6362\u3002\u8be5\u7a0b\u5e8f\u7684\u8f6c\u6362\u53ef\u4ee5\u7528JavaScript\u8868\u793a\u4e3an=&gt\uff1b78*Math.pow(5\uff0cn-1)\u3002\n\u4ecen\u7684\u503c\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u7684\u8f6c\u6362\uff0c\u6309\u7167\u6211\u4eec\u60f3\u8981\u7684\u65b9\u5f0f\u7f16\u7801\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5b83\u7c7b\u4f3c\u4e8eVALUES=&gt\uff1bMath.log2(last(Values))\u3002\n\u7f16\u5199FRACTRAN\u89e3\u91ca\u5668\u975e\u5e38\u5bb9\u6613\u3002\u8ba9\u6211\u4eec\u4ece\u7f16\u5199\u4e00\u4e2aJavaScript Fibonacci\u51fd\u6570\u5f00\u59cb\uff0c\u8be5\u51fd\u6570\u4f7f\u7528\u6211\u4eec\u7684FRACTRAN\u7a0b\u5e8f\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0cn\u7684\u503c\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5927\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u201cBigInts\u201d14\u3002\n\u5904\u7406\u5927\u6574\u6570\u7684\u4e00\u4e2a\u540e\u679c\u662f\uff0c\u6211\u4eec\u4f9d\u8d56\u4e8e\u6570\u5b57\u7684\u8bb8\u591a\u4e1c\u897f\u4e0d\u518d\u6709\u6548\u3002\u4f8b\u5982\uff0cMath.log2(8192)=&gt\uff1b13\uff0c\u4f46math.log2(8192n)=&gt\uff1bTypeError\uff1a\u65e0\u6cd5\u5c06BigInt\u503c\u8f6c\u6362\u4e3a\u6570\u5b57\u3002\u6211\u4eec\u5fc5\u987b\u7f16\u5199\u6211\u4eec\u81ea\u5df1\u7684log2\u51fd\u6570\u3002\nMath.pow\u4e5f\u662f\u5982\u6b64\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u5199\u6211\u4eec\u81ea\u5df1\u7684\u3002\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u73b0\uff1a\n//\u4efb\u4f55\u8db3\u591f\u590d\u6742\u7684\u5faa\u73af\u51fd\u6570\uff0c\u5305\u542b\u7279\u5b9a\u7684\u3001//\u975e\u6b63\u5f0f\u6307\u5b9a\u7684\u3001\u5145\u6ee1\u9519\u8bef\u7684\u3001\u7f13\u6162\u5b9e\u73b0\u7684//\u4e00\u534a\u7ebf\u6027\u9012\u5f52\u5e38\u91cflog2=(N)=&gt\uff1b{let result=0n\uff1bwhile(True){//\u9000\u5316\u6761\u4ef6if(n==1n)Break\uff1b//(n%2n==1n)RETURN\uff1bIF(n&lt\uff1b1n)RETURN\uff1b//\u5206\u6cbb\u5f81\u670d++RESULT\uff1b//(n%2n==1n)RETURN\uff1bIF(n&lt\uff1b1n)RETURN\uff1b//\u5206\u6cbb++RESULT\uff1bn=n/2n\uff1b}\u8fd4\u56de\u7ed3\u679c\uff1b}\u5e38\u91cf\u5e42=(\u57fa\uff0c\u6307\u6570)=&gt\uff1b{if(\u6307\u6570&lt\uff1b0n)\u8fd4\u56de\uff1b\u8bbe\u7ed3\u679c=1n\uff1b\u800c(\u6307\u6570--&gt\uff1b0n)\u7ed3\u679c=\u7ed3\u679c*\u57fa\uff1b\u8fd4\u56de\u7ed3\u679c\uff1b}\u3002\n\u73b0\u5728\u7ee7\u7eed\u7f16\u5199\u60a8\u81ea\u5df1\u7684\u5b9e\u73b0\u3002\u5728\u60a8\u7f16\u5199\u5b8c\u81ea\u5df1\u7684\u4ee3\u7801\u4e4b\u524d\uff0c\u8bf7\u5ffd\u7565\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n//\u4f7f\u7528log2\u548c\u4e0a\u9762\u7684\u5e42\u6765\u5236\u5b9a\u79cd\u5b50\u5e76\u89e3\u5bc6\u7ed3\u679cconst fib=(X)=&gt\uff1b{const program=(&#39\uff1b17/65,133/34\uff0c17/19\uff0c23/17,2233/69\uff0c23/29\uff0c31/23\uff0c74/341\uff0c&#39\uff1b+&#39\uff1b31/37\uff0c41/31,129/287\uff0c41/43\uff0c13/41\uff0c1/13\uff0c1/3&#39\uff1b)\u3002\u62c6\u5206(/(\uff1f\uff1a\\s*\uff0c|\\s)\\s*/)\u3002\u6620\u5c04(f=&gt\uff1bf.\u3002\u62c6\u5206(&#39\uff1b/&#39\uff1b)\u3002map(n=&gt\uff1bBigInt(N)\uff1b\u8bben=78n*power(5 n\uff0cBigInt(X)-1 n)\uff1bProgram_start\uff1awhile(True){for(const[\u5206\u5b50\uff0c\u5206\u6bcd]\uff0c\u7a0b\u5e8f){if(n%denominator=0n){n=(n*\u5206\u5b50)/\u5206\u6bcd\uff1bContinue Program_start\uff1b}}Break\uff1b}return log2(N)\uff1b}\uff1bFIB(7)//=&gt\uff1b13\u3002\n\u8fd9\u592a\u9177\u4e86\u3002FRACTRAN\u7a0b\u5e8f\u975e\u5e38\u5c0f\uff0c\u800c\u4e14\u7b80\u5355\u5f97\u79bb\u8c31\uff1a\u5b83\u53ea\u662f\u5206\u6570\u3002\u4e2d\u592eFRACTRAN\u89e3\u91ca\u5668\u4e5f\u975e\u5e38\u5c0f\uff1a\u5b83\u5b9e\u9645\u4e0a\u662fWHILE\u5faa\u73af\u4e2d\u7684FOR\u5faa\u73af\uff0c\u5982\u679cJavaScript\u652f\u6301GOTO\uff0c\u5219\u53ef\u4ee5\u907f\u514dWHILE\u5faa\u73af(\u4ee5\u53caBREAK\u8bed\u53e5)\u300215\u4e2a\u3002\n\u5c3d\u7ba1FRACTRAN\u8868\u9762\u4e0a\u770b\u8d77\u6765\u5f88\u4f18\u96c5\uff0c\u4f46\u4e4d\u4e00\u770b\uff0c\u5b83\u4f3c\u4e4e\u662f\u9ad8\u6df1\u83ab\u6d4b\u7684\u3002\u5b83\u662f\u4e0d\u662f\u4e00\u79cd\u65e2\u4e0d\u597d\u8bfb\u4e5f\u4e0d\u597d\u5199\u7684\u8bed\u8a00\uff1f\u6216\u8005\uff0c\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u5206\u6570\u5217\u8868\u6765\u75af\u72c2\u5730\u7f16\u5199\u7a0b\u5e8f\uff1f\n\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u8003\u8651\u53e6\u4e00\u4f4d\u4f1f\u5927\u601d\u60f3\u5bb6\u9a6c\u6587\u00b7\u660e\u65af\u57fa(Marvin Minsky)\u7684\u4f5c\u54c1\u3002\n1987\u5e749\u6708\uff0c\u65af\u56fe\u5c14\u7279\u00b7\u5e03\u5170\u5fb7\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u51fa\u7248\u4e86\u201c\u5a92\u4f53\u5b9e\u9a8c\u5ba4\uff1a\u53d1\u660e\u672a\u6765\u201d\u3002\u8bf4\u8fd9\u672c\u4e66\u5f71\u54cd\u4e86\u6211\u662f\u4e0d\u516c\u5e73\u7684\u3002\u5c31\u50cf\u8bb8\u591a\u5546\u4e1a\u548c\u6280\u672f\u5723\u5f92\u4f20\u8bb0\u4e00\u6837\uff0c\u5b83\u5bf9\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u548c\u5bfc\u6f14\u5c3c\u53e4\u62c9\u65af\u00b7\u5c3c\u845b\u6d1b\u5e9e\u5e1d(Nicholas Negroponte)\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\u8d5e\u53f9\u4e0d\u5df2\u3002\n\u8fd9\u4e5f\u5f88\u6709\u542f\u53d1\u6027\uff1a\u5e03\u5170\u5fb7\u8be6\u7ec6\u63cf\u8ff0\u4e86\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u662f\u5982\u4f55\u7531\u5176\u4f01\u4e1a\u8d5e\u52a9\u5546\u8d44\u52a9\u7684\uff0c\u4ee5\u53ca\u8d44\u52a9\u6a21\u5f0f\u662f\u5982\u4f55\u63a8\u52a8\u7814\u7a76\u7684\u3002\u4ed6\u4eec\u7684\u5ea7\u53f3\u94ed\u662f\uff0c\u201c\u4e0d\u6f14\u793a\u5c31\u6b7b\u201d\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u94b1\u6d41\u5411\u4e86\u90a3\u4e9b\u4e0d\u4ec5\u80fd\u8ba9\u540c\u9f84\u4eba\u60ca\u53f9\u7684\u4eba\uff0c\u8fd8\u80fd\u63d0\u4f9b\u821e\u53f0\u9b54\u529b\uff0c\u8ba9\u4ed6\u4eec\u7684\u4f01\u4e1a\u8d5e\u52a9\u5546\u6253\u5f00\u94b1\u5305\u3002\n\u5f53\u65f6\u6211\u5728\u79d1\u6280\u4f01\u4e1a\u9500\u552e\u90e8\u5de5\u4f5c\uff0c\u6211\u654f\u9510\u5730\u7406\u89e3\u5230\uff0c\u867d\u7136\u6ca1\u6709\u725b\u6392\u5f88\u96be\u5356\u51faSIZE\uff0c\u4f46\u5f53\u4f60\u6709\u975e\u5e38\u597d\u7684\u725b\u6392\uff0c\u4f46\u6ca1\u6709SIZE\u7684\u65f6\u5019\uff0c\u540c\u6837\u4e0d\u592a\u53ef\u80fd\u83b7\u5f97\u9500\u552e\u300216\u4e2a\u3002\n\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u63d0\u5230\u7684\u5176\u4e2d\u4e00\u4e2a\u4eba\u7269\u662f\u9a6c\u6587\u00b7\u660e\u65af\u57fa(Marvin Minsky)\u3002\u660e\u65af\u57fa\u88ab\u8ba4\u4e3a\u662f\u4eba\u5de5\u667a\u80fd\u9886\u57df\u7684\u5de8\u4eba\uff0c\u4eba\u5de5\u667a\u80fd\u662f\u5f53\u65f6\u7684\u90c1\u91d1\u9999\u72c2\u70ed\u3002\u5386\u53f2\u5c06\u8868\u660e\uff0c\u968f\u7740\u8fd9\u672c\u4e66\u7684\u51fa\u7248\uff0c\u4eba\u5de5\u667a\u80fd\u8d44\u91d1\u5f00\u59cb\u4e86\u53e6\u4e00\u6b21\u5468\u671f\u6027\u5d29\u6e83\uff0c\u4f46\u5f53\u6211\u8bfb\u8fd9\u672c\u4e66\u65f6\uff0c\u6742\u5fd7\u548c\u4e66\u67b6\u5728\u4ee4\u4eba\u7a92\u606f\u7684\u6563\u6587\u548c\u4e4c\u6258\u90a6\u613f\u666f\u7684\u91cd\u538b\u4e0b\u547b\u541f\u3002\n1985\u5e74\uff0c\u660e\u65af\u57fa\u51fa\u7248\u4e86\u201c\u5fc3\u7075\u5b66\u4f1a\u201d\uff0c\u6211\u5728\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u8bfb\u5230\u6709\u5173\u660e\u65af\u57fa\u7684\u6587\u7ae0\u540e\u4e70\u4e0b\u4e86\u8fd9\u672c\u4e66\u30021994\u5e74\uff0c\u4e00\u5bb6\u540d\u4e3a\u65c5\u884c\u8005(Voyager)\u7684\u516c\u53f8\u51fa\u7248\u4e86\u201c\u5fc3\u7075\u793e\u4f1a\u201d(Society Of Mind)\u7684CD-ROM\u7248\uff0c\u6211\u7528\u82f9\u679c\u7684\u4e00\u6b3e\u6bd4\u8f83\u53e4\u602a\u7684\u4ea7\u54c1--\u4ece\u83f2\u5229\u666e\u65af\u90a3\u91cc\u501f\u6765\u7684CD-ROM\u9605\u8bfb\u5668\u548c\u97f3\u9891-CD\u64ad\u653e\u673a--\u201c\u73a9\u201d\u4e86\u8fd9\u4e2a\u7248\u672c\uff0c\u5e76\u6253\u4e0a\u4e86PowerCD\u7684\u724c\u5b50\u3002\nCD-ROM\u7684\u7279\u8272\u4e4b\u4e00\u662f\u5bf9\u660e\u65af\u57fa\u7684\u529e\u516c\u5ba4\u8fdb\u884c\u4e92\u52a8\u53c2\u89c2\u3002\u6211\u4ecd\u7136\u6e05\u695a\u5730\u8bb0\u5f97\u4ed6\u5173\u4e8e\u4ed6\u6302\u5728\u5899\u4e0a\u7684\u955c\u5b50\u7684\u8ba8\u8bba\uff0c\u4ed6\u63d0\u5230\u8d39\u66fc\u5199\u4e86\u4e00\u6574\u672c\u4e66\uff0c\u81f4\u529b\u4e8e\u89e3\u91ca\u4e00\u4ef6\u4e8b\uff1a\u5149\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u4ece\u955c\u5b50\u4e0a\u53cd\u5c04\u51fa\u6765\u7684\uff0c\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u4ed6\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6240\u6709\u975e\u4e13\u4e1a\u4eba\u58eb\u76f8\u4fe1\u7684\u5173\u4e8e\u5149\u548c\u53cd\u5c04\u7684\u4e1c\u897f\u5b9e\u9645\u4e0a\u90fd\u662f\u9519\u8bef\u7684\u3002\n\u4e0e\u8d39\u66fc\u548c\u5eb7\u5a01\u4e00\u6837\uff0c\u660e\u65af\u57fa\u4e5f\u6709\u89e3\u91ca\u5177\u6709\u6311\u6218\u6027\u7684\u60f3\u6cd5\u7684\u5929\u8d4b\u3002\u4ed6\u4e5f\u50cf\u8d39\u66fc\u548c\u5eb7\u5a01\u4e00\u6837\uff0c\u4e3a\u4eba\u7c7b\u77e5\u8bc6\u7684\u8fdb\u6b65\u505a\u51fa\u4e86\u5de8\u5927\u8d21\u732e\u3002\u4ed6\u7684\u7814\u7a76\u9886\u57df\u4e4b\u4e00\u662f\u53ef\u8ba1\u7b97\u6027\uff0c\u5177\u4f53\u5730\u8bf4\uff0c\u5c31\u662f\u7814\u7a76\u4e00\u7c7b\u7406\u60f3\u5316\u7684\u8ba1\u7b97\u673a\u5668\uff0c\u8fd9\u4e9b\u673a\u5668\u73b0\u5728\u88ab\u547d\u540d\u4e3a\u660e\u65af\u57fa\u673a\u5668(Minsky Machines)\uff0c\u4ee5\u7eaa\u5ff5\u4ed6\u7684\u540d\u5b57\u300217 18\u3002\n\u660e\u65af\u57fa\u673a\u5668\u662f\u4e00\u79cd\u7406\u60f3\u5316\u7684\u673a\u5668\uff0c\u5df2\u7ecf\u88ab\u8bc1\u660e\u662f\u8ba1\u7b97\u901a\u7528\u7684\u3002\u660e\u65af\u57fa\u673a\u5668\u662f\u79f0\u4e3a\u5bc4\u5b58\u5668\u673a\u5668\u7684\u7406\u60f3\u5316\u673a\u5668\u5bb6\u65cf\u7684\u4e00\u90e8\u5206\u3002\n\u5c31\u50cf\u5bc4\u5b58\u5668\u673a\u5668\u548c\u56fe\u7075\u673a\u4e00\u6837\uff0c\u660e\u65af\u57fa\u673a\u5668\u5f62\u6210\u4e86\u4e00\u4e2a\u5c0f\u5bb6\u65cf\uff0c\u5b83\u4eec\u4e4b\u95f4\u5728\u60f3\u8c61\u7684\u65b9\u5f0f\u4e0a\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u5728\u8ba1\u7b97\u4e0a\u90fd\u662f\u7b49\u4ef7\u7684\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u660e\u65af\u57fa\u673a\u5668\u7684\u4e00\u79cd\u7279\u522b\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5b8f\u4f1f\u7684\u201d\u660e\u65af\u57fa\u673a\u5668\u300219\u4e2a\n\u5c31\u50cf\u56fe\u7075\u673a\u4e00\u6837\uff0c\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u4e5f\u6709\u6709\u9650\u7684\u72b6\u6001\u3002\u7136\u800c\uff0cMagnificent Minsky\u673a\u5668\u6ca1\u6709\u5355\u4e00\u7684\u78c1\u5e26\u5728\u4e00\u4e2a\u6216\u4e24\u4e2a\u65b9\u5411\u4e0a\u5ef6\u4f38\u5230\u65e0\u9650\u8fdc\uff0c\u800c\u662f\u6709\u6709\u9650\u6570\u91cf\u7684\u78c1\u5e26\uff0c\u6bcf\u4e2a\u78c1\u5e26\u53ea\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u5ef6\u4f38\u5230\u65e0\u7a77\u5927\u3002\n\u5c31\u50cf\u56fe\u7075\u673a\u4e00\u6837\uff0c\u4e00\u53f0\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u4e3a\u6bcf\u4e00\u76d8\u78c1\u5e26\u90fd\u6709\u4e00\u4e2a\u78c1\u5934\uff0c\u6839\u636e\u5b83\u7684\u6307\u4ee4\uff0c\u53ef\u4ee5\u79fb\u52a8\u5b83\u7684\u78c1\u5934\u5e76\u6539\u53d8\u5230\u4e0d\u540c\u7684\u72b6\u6001\u3002\u4e0e\u56fe\u7075\u673a\u4e0d\u540c\u7684\u662f\uff0c\u4e00\u53f0\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u53ef\u4ee5\u5c06\u5176\u78c1\u5934\u5728\u4efb\u610f\u65b9\u5411\u4e0a\u79fb\u52a8\u4efb\u610f\u9650\u91cf\u3002\u6211\u4eec\u79f0\u8fd9\u4e9b\u65b9\u5411\u4e3a\u5411\u524d(\u201c\u8fdc\u79bb\u5f00\u59cb\u201d)\u548c\u5411\u540e(\u201c\u671d\u5411\u5f00\u59cb\u201d)\u3002\n\u5f53\u56fe\u7075\u673a\u4e0e\u5176\u78c1\u5934\u4e0b\u9762\u7684\u7279\u5b9a\u7b26\u53f7\u76f8\u5339\u914d\u65f6\uff0c\u5b83\u53ef\u4ee5\u5199\u5165\u7b26\u53f7\uff0c\u4e5f\u53ef\u4ee5\u5c06\u78c1\u5934\u5411\u4efb\u610f\u65b9\u5411\u79fb\u52a8\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\u4e0e\u56fe\u7075\u673a\u4e0d\u540c\uff0c\u4e00\u53f0\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u4e0d\u80fd\u5728\u5b83\u7684\u78c1\u5e26\u4e0a\u5199\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u6b64\u4e0e\u5b83\u7684\u78c1\u5934\u4e0b\u9762\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u4e0d\u5339\u914d\u3002\u5b83\u80fd\u505a\u7684\u5c31\u662f\u6d4b\u8bd5\u662f\u5426\u6709\u53ef\u80fd\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\u3002\u65e2\u7136\u603b\u662f\u53ef\u4ee5\u524d\u8fdb\u7684\uff0c\u6211\u4eec\u552f\u4e00\u5173\u5fc3\u7684\u5c31\u662f\u540e\u9000\u6709\u6ca1\u6709\u53ef\u80fd\u3002\n\u4e0e\u56fe\u7075\u673a\u4e0d\u540c\u7684\u662f\uff0c\u4e00\u53f0\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u53ef\u4ee5\u540c\u65f6\u79fb\u52a8\u96f6\u4e2a\u6216\u591a\u4e2a\u78c1\u5934\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u6d4b\u8bd5\u53ef\u4ee5\u68c0\u67e5\u4e00\u4e2a\u6216\u591a\u4e2a\u78c1\u5934\u662f\u5426\u53ef\u4ee5\u5411\u540e\u79fb\u52a8\u3002\n\u4e3e\u4e00\u4e2a\u5b57\u9762\u4e0a\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u78c1\u5934\u5728\u5f00\u5934\uff0c\u5c31\u4e0d\u53ef\u80fd\u540e\u9000\u3002\u5982\u679c\u78c1\u5934\u5411\u524d\u79fb\u52a8n\u4e2a\u65b9\u5757\uff0c\u5219\u53ef\u4ee5\u5411\u540e\u79fb\u52a8&lt\uff1b=n\u4e2a\u65b9\u5757\uff0c\u4f46\u4e0d\u80fd\u79fb\u52a8\u6240\u6709&gt\uff1bn\u4e2a\u65b9\u5757\u3002\n\u8fd9\u4e9b\u8bbe\u8ba1\u9009\u62e9\u7684\u6700\u7ec8\u6548\u679c\u662f\uff0cMagnificent Minsky Machine\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u6570\u91cf\u7684\u72b6\u6001\uff0c\u5c31\u50cf\u56fe\u7075\u673a\u4e00\u6837\uff0c\u4f46\u5b83\u901a\u8fc7\u4f7f\u6bcf\u4e2a\u78c1\u5934\u4e0e\u5176\u78c1\u5e26\u7684\u5f00\u5934\u4fdd\u6301\u4efb\u610f\u8ddd\u79bb\u6765\u5b58\u50a8\u8be5\u72b6\u6001\u300220\u4e2a\u3002\n\u8ba9\u6211\u4eec\u4f7f\u7528\u5b8f\u4f1f\u7684\u660e\u65af\u57fa\u673a\u5668\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5927\u81f4\u4e86\u89e3\u4e86\u8fd9\u4e9b\u673a\u5668\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u5c06\u5982\u4f55\u6307\u5b9a\u6bcf\u53f0Magnificent Minsky\u673a\u5668\uff0c\u5373\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u7f16\u5199\u5176\u201c\u7a0b\u5e8f\u201d\uff1a\n\u6211\u4eec\u7684\u673a\u5668\u5c06\u6709\u6709\u9650\u6570\u91cf\u7684\u72b6\u6001\uff0c\u7528\u8fde\u7eed\u7684\u6b63\u6574\u6570\u8868\u793a\uff0c\u53731\uff0c2\uff0c3\uff0c\u2026\u3002\n\u6bcf\u6761\u89c4\u5219\u90fd\u5c06\u8868\u793a\u4e3a\u201c\u5982\u679c\u8fd9\u6837\u505a\uff0c\u5982\u679c\u90a3\u6837\u505a\u201d\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u5c06\u6709\u4e24\u4e2a\u6761\u6b3e\uff1a\u4e00\u4e2a\u884c\u52a8\u6761\u6b3e\u548c\u4e00\u4e2a\u5b88\u536b\u6761\u6b3e\u3002\nACTION\u5b50\u53e5\u5e94\u7531\u4e00\u7ec4\u5411\u524d\u79fb\u52a8\u7684\u78c1\u5934\u548c\u6bcf\u4e2a\u78c1\u5934\u8868\u793a\u79fb\u52a8\u591a\u5c11\u65b9\u5757\u7684\u6b63\u6574\u6570\u7ec4\u6210\u3002\u6211\u4eec\u5c06\u628a\u5b83\u4eec\u8bb0\u4e3a(\u78c1\u5e26\u6807\u8bc6\u7b26^\u8981\u5411\u524d\u79fb\u52a8\u7684\u6b63\u65b9\u5f62)\u7684\u5143\u7ec4\u3002ACTION\u5b50\u53e5\u662f\u8fd9\u6837\u7684\u5143\u7ec4\u7684\u65e0\u5e8f\u96c6\u5408\uff0c\u540c\u4e00\u89c4\u5219\u4e2d\u6ca1\u6709\u4e24\u4e2a\u5143\u7ec4\u5171\u4eab\u76f8\u540c\u7684\u78c1\u5e26\u5934\u3002ACTION\u5b50\u53e5\u8fd8\u5c06\u5305\u62ec\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u6307\u793a\u8981\u8fdb\u5165\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\n\u4fdd\u62a4\u6761\u6b3e\u5e94\u7531\u4e00\u7ec4\u5411\u540e\u79fb\u52a8\u7684\u78c1\u5934\u548c\u4e00\u4e2a\u6b63\u6574\u6570\u7ec4\u6210\uff0c\u8be5\u6b63\u6574\u6570\u8868\u793a\u5411\u5f00\u59cb\u79fb\u52a8\u7684\u65b9\u5757\u6570\u3002\u4e0eACTION\u5b50\u53e5\u4e00\u6837\uff0c\u540c\u4e00\u89c4\u5219\u4e2d\u7684\u4e24\u4e2a\u4fdd\u62a4\u5b50\u53e5\u4e0d\u80fd\u5171\u4eab\u540c\u4e00\u78c1\u5934\u3002\n\u7531\u4e8e\u540c\u4e00\u89c4\u5219\u4e2d\u7684\u4e24\u4e2a\u5b50\u53e5\u4e0d\u80fd\u5171\u4eab\u540c\u4e00\u4e2a\u78c1\u5e26\u5934\uff0c\u56e0\u6b64\u6ca1\u6709\u4e00\u6761\u89c4\u5219\u53ef\u4ee5\u65e2\u6d4b\u8bd5\u4fdd\u62a4\u5b50\u53e5\u4e2d\u7684\u78c1\u5e26\u5934\uff0c\u53c8\u540c\u65f6\u79fb\u52a8\u64cd\u4f5c\u5b50\u53e5\u4e2d\u7684\u78c1\u5e26\u5934\u3002\n\u6211\u4eec\u7684Magnificent Minsky\u673a\u5668\u662f\u901a\u8fc7\u5c06\u78c1\u5934\u653e\u7f6e\u5728\u7279\u5b9a\u4f4d\u7f6e\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u56e0\u6b64\uff0c\u9664\u4e86\u5217\u51fa\u5176\u4e2d\u7684\u72b6\u6001\u548c\u89c4\u5219\u5916\uff0cMagnificent Minsky\u673a\u5668\u7684\u8bf4\u660e\u8fd8\u5c06\u5305\u62ec\u8bbe\u7f6e\u78c1\u5934\u521d\u59cb\u4f4d\u7f6e\u7684\u8bf4\u660e\u3002\n\u5f53\u6211\u4eec\u5e0c\u671b\u8fd0\u884cMagnificent Minsky\u673a\u5668\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u542f\u52a8\u4e3a\u72b6\u60011\u3002\u6211\u4eec\u901a\u8fc7\u6309\u987a\u5e8f\u626b\u63cf\u5f53\u524d\u72b6\u6001\u5185\u7684\u89c4\u5219\u6765\u64cd\u4f5c\u6211\u4eec\u7684\u673a\u5668\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u89c4\u5219\uff0c\u6211\u4eec\u68c0\u67e5\u5176\u4fdd\u62a4\u6761\u6b3e\u3002\u5982\u679c\u53ef\u4ee5\u5c06\u4fdd\u62a4\u5b50\u53e5\u4e2d\u7684\u6240\u6709\u78c1\u5934\u79fb\u5411\u5f00\u5934\uff0c\u5219\u89c4\u5219\u201c\u89e6\u53d1\u201d\uff0c\u6211\u4eec\u6309\u7167\u4fdd\u62a4\u5b50\u53e5\u6240\u6307\u5b9a\u7684\u90a3\u6837\u5c06\u78c1\u5934\u79fb\u5411\u5f00\u5934\u3002\u7136\u540e\uff0c\u6211\u4eec\u53c2\u8003\u64cd\u4f5c\u6761\u6b3e\uff0c\u5e76\u5c06\u5217\u51fa\u7684\u6240\u6709\u78c1\u5934\u4ece\u672b\u5c3e\u79fb\u5f00\u5217\u51fa\u7684\u6570\u91cf\u3002\u6700\u540e\uff0c\u5f53\u89c4\u5219\u89e6\u53d1\u65f6\uff0c\u5982\u679c\u5b83\u5217\u51fa\u4e86\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u5c06\u66f4\u6539\u5230\u8be5\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u5230\u6309\u987a\u5e8f\u626b\u63cf\u5f53\u524d\u72b6\u6001\u4e2d\u7684\u89c4\u5219\u3002\n\u5982\u679c\u4efb\u4f55\u89c4\u5219\u7684\u4fdd\u62a4\u6761\u6b3e\u4e0d\u80fd\u6267\u884c\u78c1\u5934\u671d\u5411\u5f00\u5934\u7684\u6240\u6709\u5fc5\u9700\u7684\u79fb\u52a8\uff0c\u5219\u8be5\u89c4\u5219\u5931\u8d25\uff0c\u5e76\u4e14\u78c1\u5934\u4e0d\u4f1a\u53d7\u5230\u5e72\u6270\u3002\u7136\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u5c1d\u8bd5\u8be5\u5dde\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u89c4\u5219\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u89c4\u5219\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5982\u679c\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6240\u6709\u89c4\u5219\u90fd\u5931\u8d25\uff0c\u8ba1\u7b97\u673a\u5c06\u6682\u505c\u3002\u7531\u6b64\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u5982\u679c\u673a\u5668\u5728\u6ca1\u6709\u4efb\u4f55\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u8fdb\u5165\u4e00\u79cd\u72b6\u6001\uff0c\u5b83\u5c31\u5fc5\u987b\u505c\u6b62\u3002\n\u5982\u679c\u673a\u5668\u8bd5\u56fe\u8f6c\u6362\u5230\u672a\u5b9a\u4e49\u7684\u72b6\u6001\uff0c\u5b83\u4e5f\u4f1a\u505c\u6b62\u3002\u56e0\u6b64\uff0c\u663e\u5f0f\u8f6c\u6362\u5230\u72b6\u60010\u662f\u663e\u5f0f\u505c\u6b62\u673a\u5668\u7684\u683c\u5f0f\u826f\u597d\u7684\u65b9\u5f0f\u3002\n\u73b0\u5728\u6211\u4eec\u51c6\u5907\u597d\u8ba8\u8bbaMagnificent Minsky\u673a\u5668\u7684\u4e00\u4e2a\u7b80\u5355\u7b26\u53f7\uff0c\u5e76\u5c1d\u8bd5\u4e00\u4e2a\u3002\n\u8003\u8651\u4e00\u53f0\u4f1f\u5927\u7684\u660e\u65af\u57fa\u673a\u5668\uff0c\u5b83\u5c06\u628a\u4e24\u4e2a\u6570\u5b57\u76f8\u52a0\u3002\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u5dde\uff0c\u6709\u4e24\u6761\u89c4\u5219\u3002\u6211\u4eec\u7684\u7b26\u53f7\u5c06\u4f1a\u5f88\u7b80\u5355\u3002\u5728\u6bcf\u4e2a\u5dde\uff0c\u90fd\u6709\u4e00\u4e2a\u9017\u53f7\u5206\u9694\u7684\u89c4\u5219\u5217\u8868\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u7b2c\u4e00\u53f0\u673a\u5668\u4e2d\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ea\u8ba8\u8bba\u5982\u4f55\u5199\u4e0b\u89c4\u5219\u3002\n\u6211\u4eec\u5dde\u5c06\u6709\u4e00\u4e2a\u9017\u53f7\u5206\u9694\u7684\u89c4\u5219\u5217\u8868\uff0c\u5373\u89c4\u52191\u3001\u89c4\u52192\u3002\u7a7a\u683c\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u5199\u89c4\u52191\u3001\u89c4\u52192\uff0c\u751a\u81f3\uff1a\n(\u4e0e\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u7a7a\u683c\u5b89\u6392\u7a0b\u5e8f\u662f\u4e3a\u4e86\u4fbf\u4e8e\u4eba\u7c7b\u9605\u8bfb\u800c\u7ec4\u7ec7\u5e03\u5c40\u7684\u95ee\u9898\u3002)\u3002\n\u6bcf\u6761\u89c4\u5219\u90fd\u6709\u4e00\u4e2a\u64cd\u4f5c\u5b50\u53e5\u548c\u4e00\u4e2a\u5b88\u536b\u5b50\u53e5\uff0c\u7528/\u5206\u9694\uff0c\u4f8b\u5982\uff1a\n/\u663e\u7136\u7c7b\u4f3c\u4e8e\u9664\u6cd5\u7684\u8868\u793a\u6cd5\uff0c\u4f46\u5728Magnificent Minsky Machine\u4e2d\uff0c\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u610f\u5473\u7740\u201c\u9664\u6cd5\u201d\uff0c\u5b83\u53ea\u662f\u5c06\u6bcf\u4e2a\u89c4\u5219\u4e2d\u7684\u64cd\u4f5c\u5b50\u53e5\u4e0e\u5b88\u536b\u5b50\u53e5\u5206\u5f00\u3002\n\u52a8\u4f5c\u5b50\u53e5\u548c\u4fdd\u62a4\u5b50\u53e5\u90fd\u6709\u5b8c\u5168\u76f8\u540c\u7684\u7b26\u53f7\uff1a\u5f62\u5f0f\u4e3a(t^s)\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7ec4\uff0c\u5176\u4e2dt\u6807\u8bc6\u78c1\u5934\uff0cs\u6807\u8bc6\u8981\u79fb\u52a8\u7684\u65b9\u5757\u6570\u91cf\u3002^\u5b57\u7b26\u5728\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e2d\u8868\u793a\u5e42\u8fd0\u7b97\uff0c\u4f46\u5728Magnificent Minsky Machine\u4e2d\uff0c\u5b83\u53ea\u662f\u4e00\u79cd\u5206\u9694\u4e24\u4e2a\u6570\u5b57\u7684\u65b9\u5f0f\u3002\n(1^1)(4^1)\u662faction\u5b50\u53e5\uff0c\u5b83\u6709\u4e24\u4e2a\u5143\u7ec4\uff1a(1^1)\u8868\u793a\u5c06\u78c1\u59341\u79fb\u52a81\u5e73\u65b9\uff0c(4^1)\u8868\u793a\u5c06\u78c1\u59344\u79fb\u52a81\u5e73\u65b9\u3002\n(3^1)\u662f\u4fdd\u62a4\u6761\u6b3e\uff0c\u5b83\u8bf4\u8981\u5c06\u78c1\u59343\u79fb\u52a8\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\u5728Magnificent Minsky\u673a\u5668\u4e2d\uff0c\u52a8\u4f5c\u5b50\u53e5\u603b\u662f\u5c06\u78c1\u5934\u5411\u524d\u79fb\u52a8\uff0c\u800c\u4fdd\u62a4\u5b50\u53e5\u603b\u662f\u5c06\u78c1\u5934\u5411\u540e\u79fb\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u8ba9\u6211\u4eec\u7684\u5b50\u53e5\u4f7f\u7528+\u6216-\u6216\u6307\u5411\u4e0d\u540c\u65b9\u5411\u7684\u7bad\u5934\uff0c\u53ea\u8981\u77e5\u9053/\u5de6\u8fb9\u7684\u5b50\u53e5\u662f\u52a8\u4f5c\u5b50\u53e5\u5e76\u5c06\u78c1\u5934\u5411\u524d\u79fb\u52a8\u5c31\u8db3\u591f\u4e86\uff0c\u800c/\u53f3\u8fb9\u7684\u5b50\u53e5\u662f\u4fdd\u62a4\u5b50\u53e5\uff0c\u5e76\u4e14\u5411\u540e\u79fb\u52a8\u78c1\u5934\u5c31\u8db3\u591f\u4e86\u3002\n\u73b0\u5728\u6765\u770b\u6211\u4eec\u7684\u7b2c\u4e00\u53f0\u673a\u5668\uff1a\u6211\u4eec\u7684\u673a\u5668\u53ea\u6709\u4e00\u79cd\u72b6\u60011\uff0c\u5b83\u6709\u4e24\u4e2a\u89c4\u5219\uff1a\n\u6211\u4eec\u7684\u7a0b\u5e8f\u5c06\u4e24\u4e2a\u6b63\u6570\u76f8\u52a0\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aa\u548cb\u3002\u5b83\u6709\u4e09\u76d8\u78c1\u5e26\uff0c1\u30012\u548c3\u3002\u4e3a\u4e86\u8bbe\u7f6e\u673a\u5668\uff0c\u6211\u4eec\u5c06\u78c1\u59341\u653e\u5728\u78c1\u5e26\u7684\u5f00\u5934\uff0c\u5c06\u78c1\u59342a\u6b63\u65b9\u5f62\u653e\u5728\u524d\u9762\uff0c\u5c06\u78c1\u59343b\u653e\u5728\u6b63\u65b9\u5f62\u524d\u9762\u3002\u5f53\u673a\u5668\u505c\u6b62\u65f6\uff0c\u78c1\u59341\u5c06\u662fa+b\u6b63\u65b9\u5f62\u5411\u524d\uff0c\u800c\u78c1\u59342\u548c3\u5c06\u5728\u5f00\u59cb\u5904\u3002\n\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u5c06\u6570\u5b572+2\u76f8\u52a0\uff0c\u770b\u770b\u662f\u5426\u4f1a\u5f97\u51fa4\u3002\u6211\u4eec\u5c06\u5982\u4f55\u4ee5\u56fe\u5f62\u65b9\u5f0f\u663e\u793a\u78c1\u5934\u7684\u4f4d\u7f6e\uff1a21\u3002\n\u8fd9\u8868\u660e\u78c1\u59341\u5728\u5f00\u59cb\u5904\uff0c\u800c\u78c1\u59342\u548c3\u5728\u524d\u9762\u4e24\u4e2a\u6b63\u65b9\u5f62\u5904\uff0c\u5373\u5f00\u59cb\u5904\n..", "note_en": "On April 8, 2020,  John Horton Conway developed symptoms of COVID-19. On April 11, 2020, he succumbed to the disease.  1  2  3  4\n Like so very, very many, I mourn Conway\u2019s passing, and yet I also celebrate his life. I celebrate his accomplishments, I celebrate his curiosity, and I celebrate his skill at making important topics in mathematics engaging and interesting.\n One of the finest examples of that skill is the programming language FRACTRAN, the subject of this essay.\n Conway touched my own life from early days. As I described in  The Eight Queens Problem\u2026 and Raganwald\u2019s Unexpected Nostalgia:\n My mother had sent me to a day camp for gifted kids once, and it was organized like a university. The \u201cstudents\u201d self-selected electives, and I picked one called  Whodunnit. It turned out to be a half-day exercise in puzzles and games, and I was hooked.\n  Where else would I learn about playing tic-tac-toe in a hypercube? Or about liars and truth-tellers? Or, as it happened, about  Martin Gardner? I suspect the entire material was lifted from his collections of columns, and that suited me down to the ground.\n One of the things we talked about in \u201cWhodunnit\u201d was  Conway\u2019s Game of Life. I recall hearing about it there, but I also don\u2019t recall playing with it much. There was a lot going on, and it\u2019s entirely possible that I was too busy falling in love with Raymond Smullyan to have curiosity left over for John Conway.  5  6  7\n    I went on to rediscover Conway\u2019s Game of Life several times in my life. We talked of in university. And years later, I read William Poundstone\u2019s  The Recursive Universe: Cosmic Complexity and the Limits of Scientific Knowledge, and it literally blew my mind:\n Along the way, I learned a little about Game Theory. I loved games of all kinds, and I think I spotted  Games of Strategy: Theory and Applications in a library and picked it up, thinking it would help my Backgammon.\n That led me to Conway\u2019s  On Numbers and Games, and via parallel paths, to  Surreal Numbers. Like the Game of Life, Surreal Numbers keep popping up unexpectedly, reigniting my interest in how the way we represent data, affords or hinders working with that data.\n                          In 1987, Conway contributed  FRACTRAN: A SIMPLE UNIVERSAL PROGRAMMING LANGUAGE FOR ARITHMETIC to a special workshop on problems in communication and computation conducted in the summers of 1984 and 1985 in Morristown, New Jersey, and the summer of 1986 in Palo Alto. California. FRACTRAN itself was not an important open problem in the field, but as the editors of the published papers noted:\n Perhaps the most entertaining of all the contributions is Conway\u2019s fascinating article on FRACTRAN, a strange collection of numbers, which when operated on in a simple way, yield all possible computations. We begin with his article.\n \u2013Thomas M. Cover &amp; B. Gotinath, \u201cOpen Problems in Communication &amp; Computation\u201d  10\n  As Wikipedia notes, a FRACTRAN program is an ordered list of positive fractions together with an initial positive integer input  n. The program is run by updating the integer  n as follows:\n for the first fraction  f in the list for which  nf is an integer, replace  n by  nf\n  repeat this rule until no fraction in the list produces an integer when multiplied by  n, then halt.\n For example, this is a FRACTRAN program for computing any Fibonacci number:  17/65,  133/34,  17/19,  23/17,  2233/69,  23/29,  31/23,  74/341,  31/37,  41/31,  129/287,  41/43,  13/41,  1/13,  1/3.  11\n All FRACTRAN programs also start with an initial value for  n. That value is sometimes a constant, and sometimes provided by the user. When it\u2019s provided by the user, there is sometimes a need to prepare  n to make it usable.\n In this program\u2019s case, to compute  fib(x) for some value of  x, we compute  n = 78 * 5^(x - 1).\n Let\u2019s use this program to compute  fib(7). We start with  n = 78 * 5^(7-1), which is  1,218,750. We\u2019ll follow along for a while to get the feel for what happens:  12\n The first fraction in the program is 17/65. 1,218,750 multiplied by 17/65 is 318,750, so we replace 1,218,750 with 318,750 and begin again.\n  The first fraction in the program is 17/65. 318,750 leaves a remainder when divided by 65, so we move on.\n  The next fraction in the program is 133/34. 318,750 multiplied by 133/34 is 1,246,875, so we replace 318,750 with 1,246,875 and begin again.\n  The next fraction in the program is 13/41. 24,576 leaves a remainder when divided by 41, so we move on.\n  The next fraction in the program is 1/13. 24,576 leaves a remainder when divided by 13, so we move on.\n  The next fraction in the program is 1/3. 24,576 multiplied by 1/3 is 8,192, so we replace 24,576 with 8,192 and begin again.\n 8,192 is an important number, because  none of the divisors divide evenly into 8,192. So we see\n The first fraction in the program is 17/65. 8,192 leaves a remainder when divided by 65, so we move on.\n  The next fraction in the program is 133/34. 8,192 leaves a remainder when divided by 34, so we move on.\n  The next fraction in the program is 17/19. 8,192 leaves a remainder when divided by 19, so we move on.\n  The next fraction in the program is 13/41. 8,192 leaves a remainder when divided by 41, so we move on.\n  The next fraction in the program is 1/13. 8,192 leaves a remainder when divided by 13, so we move on.\n  The next fraction in the program is 1/3. 8,192 leaves a remainder when divided by 3, so we move on. None of the demoninators in the program divide evenly into 8,192, so the program halts.\n All FRACTRAN programs produce a series of values for  n, and the result we want must be extracted from them. For our Fibonacci program, the values begin with  1,218,750,  318,750,  1,246,875, and  1,115,625, and then end with  221,184,  73,728,  24,576, and  8,192.  13\n In the case of Fibonacci, the result we want is the  log2 of the last value for  n. The last value of  n is 8,192, and  log2(8,192) is  13, the answer we want. The 7th Fibonacci number is 13.\n  The program itself, a finite list of fractions. This program\u2019s list is  17/65,  133/34,  17/19,  23/17,  2233/69,  23/29,  31/23,  74/341,  31/37,  41/31,  129/287,  41/43,  13/41,  1/13, and  1/3.\n  An initial value of  n. This may be a constant, it may be a user-supplied value, or it may be a transformation of a user-defined value. This program\u2019s transformation can be expressed in JavaScript as  n =&gt; 78 * Math.pow(5, n-1).\n  A transformation from the values of  n into the result we want, encoded the way we want it. In our case, it is something like  values =&gt; Math.log2(last(values)) .\n  Writing a FRACTRAN interpreter is very easy. Let\u2019s begin by writing a JavaScript Fibonacci function that uses our FRACTRAN program for its implementation. The main thing we\u2019ll need to watch out for is that that values of  n can grow very, very large, so we will want to use big integers, aka \u201cBigInts.\u201d  14\n One consequence of working with big integers is that many of the things we depend on for numbers no longer work. For example,  Math.log2(8192) =&gt; 13, but  math.log2(8192n) =&gt; TypeError: Cannot convert a BigInt value to a number. We\u2019ll have to write our own  log2 function.\n The same goes for  Math.pow, we\u2019ll have to write our own. Feel free to use these implementations if you like:\n // Any sufficiently complicated function that loops, contains an ad hoc, // informally-specified, bug-ridden, slow implementation of // half of Linear Recursion const  log2  =  ( n )  =&gt;  {  let  result  =  0 n ;  while  ( true )  {  // degenerate condition  if  ( n  ===  1 n )  break ;  // termination conditions  if  ( n  %  2 n  ===  1 n )  return ;  if  ( n  &lt;  1 n )  return ;  //divide and conquer  ++ result ;  n  =  n  /  2 n ;  }  return  result ; } const  pow  =  ( base ,  exponent )  =&gt;  {  if  ( exponent  &lt;  0 n )  return ;  let  result  =  1 n ;  while  ( exponent --  &gt;  0 n )  result  =  result  *  base ;  return  result ; }\n Now go ahead and write your own implementation. Ignore the code below until you\u2019ve written your own.\n // uses log2 and pow from above to formulate the seed and decipher the result const  fib  =  ( x )  =&gt;  {  const  program  =  (  &#39; 17/65, 133/34, 17/19, 23/17, 2233/69, 23/29, 31/23, 74/341, &#39;  +  &#39;  31/37, 41/31, 129/287, 41/43, 13/41, 1/13, 1/3 &#39;  ). split ( / (?:\\s *,| \\s)\\s */ ). map ( f  =&gt;  f . split ( &#39; / &#39; ). map ( n  =&gt;  BigInt ( n )));  let  n  =  78 n  *  pow ( 5 n ,  BigInt ( x )  -  1 n );  program_start :  while  ( true )  {  for  ( const  [ numerator ,  denominator ]  of  program )  {  if  ( n  %  denominator  ===  0 n )  {  n  =  ( n  *  numerator )  /  denominator ;  continue  program_start ;  }  }  break ;  }  return  log2 ( n ); }; fib ( 7 )  //=&gt; 13\n This is very cool. The FRACTRAN program is very small and ridiculously simple: It\u2019s just fractions. And the central FRACTRAN interpreter is also very small: It\u2019s literally a  for loop inside a  while loop, and the  while loop (along with a  break statement) could have been avoided if JavaScript supported  GOTO.  15\n For all its apparent elegance, FRACTRAN appears at first glance to be inscrutable. Is it one of those languages that is neither good for reading nor writing? Or is there a method to the madness of writing a program by composing a list of fractions?\n To answer this question, we must first consider the work of another great mind no longer with us,  Marvin Minsky.\n      In September of 1987,  Stewart Brand published  The Media Lab: Inventing the Future at M.I.T.. To say that the book affected me does not do its impact justice. Like many business and technical hagiographies, it was breathless in its admiration for what M.I.T.\u2013and director Nicholas Negroponte\u2013were trying to do.\n It was also highly revealing: Brand described in detail how the Media Lab was funded by its corporate sponsors, and how the funding model drove research. Their motto was, \u201cDemo or Die,\u201d which meant that the money went to the people who could not only wow their peers, but also provide the stage-magic that would open the wallets of their corporate sponsors.\n I was working in technology Enterprise Sales at the time, and keenly understood that while it\u2019s really difficult to sell sizzle without steak, it\u2019s equally improbable to secure the sale when you have perfectly good steak, but no sizzle.  16\n One of the figures mentioned in The Media Lab was  Marvin Minsky. Minsky was considered a giant in Artificial Intelligence, and Artificial Intelligence was the  tulip mania of the day. History would show that as the book was released, AI funding was starting another of its cyclical collapses, but as I read the book, the magazines and book shelves were groaning under the weight of breathless prose and utopian visions.\n   In 1985, Minsky had published  The Society of Mind, and I bought it on the strength of reading about Minsky in The Media Lab. In 1994, a company called Voyager published a  CD-ROM version of The Society of Mind that I \u201cplayed\u201d using one of Apple\u2019s quirkier products, a CD-ROM reader and audio-CD player they borrowed from Phillips and branded as  PowerCD.\n One of the features of the CD-ROM was an interactive tour of Minsky\u2019s office. I still vividly recall his discussion of a mirror he had hanging on the wall, and his mention that Feynman had written an  entire book devoted to explaining just one thing: How light  actually reflects off a mirror, and that in this book, he explains why all of the things non-specialists believe about light and reflection are actually false.\n Like Feynman and Conway, Minsky had a talent for explaining challenging ideas. And also like Feynman and Conway, he had made enormous contributions to the progress of human knowledge. One of his areas of research was in computability, and specifically, the study of a certain class of idealized computing machines that are now named  Minsky Machines in his honour.  17  18\n  A  Minsky Machine is an idealized machine that has been proven to be computationally universal. Minsky Machines are part of the family of idealized machines called  Register Machines.\n Like Register Machines and Turing Machines, Minsky machines form a little family, with slight differences between them in the way they are imagined, but all are computationally equivalent. We shall discuss one particularly simple form of Minsky Machine that we shall call the \u201cMagnificent\u201d Minsky Machine.  19\n Like a  Turing Machine, a Magnificent Minsky Machine has a finite number of states. However, instead of having a single tape that stretches to infinity in one or both directions, Magnificent Minsky Machines have a finite number of tapes, each of which stretches to infinity in only one direction.\n Like a Turing Machine, a Magnificent Minsky Machine has a tape-head for each tape, and based on its instructions, can move its tape-heads and change to a different state. Unlike a Turing Machine, a Magnificent Minsky Machine can move its tape-heads any finite amount in either direction. We call these directions forward (\u201caway from the beginning\u201d), and backwards (\u201ctowards the beginning\u201d).\n When a Turing Machine matches a particular symbol under its tape-head, it can write a symbol, and it can also move the tape-head one square in either direction.\n Unlike a Turing Machine, a Magnificent Minsky Machine cannot write anything on its tapes, and therefore, does not match anything under its tape-heads. What it can do is test whether it is possible to perform a move. Since it is always possible to move forward, the only test we care about is whether a move backwards is possible.\n Also unlike a Turing Machine, a Magnificent Minsky Machine can move zero  or more of its tape-heads at the same time. Therefore, its test may check whether one or more tape-heads can be moved backwards.\n To give a literal example, if the tape-head is at the beginning, no backwards move is possible. If the tape-head is  n squares forward, all moves backwards &lt;=  n squares are possible, but all moves &gt;  n squares are not possible.\n The net effect of these design choices is that a Magnificent Minsky Machine can store an arbitrary amount of state, just like a Turing Machine, but it stores that state by having each tape-head be an arbitrary distance from the beginning of its tape.  20\n      Let\u2019s write a program using a Magnificent Minsky Machine. Now that we have the general idea of how these machines operate, here is how we will specify each Magnificent Minsky Machine, i.e. How we shall write its \u201cprogram:\u201d\n Our machine will have a finte number of states, denoted with consecutive positive integers, i.e. 1, 2, 3, \u2026\n    Each rule will be expressed as \u201cDo this, provided that.\u201d Thus, they will have two clauses: An  action clause, and a  guard clause.\n  The action clause shall consist of a set of tape-heads to move forward, and a positive integer for each tape-head stating how many squares to move. We shall note these as tuples of  (tape-identifier^squares-to-move-forward). The action clause is an unordered set of such tuples, with no two tuples in the same rule sharing the same tape-head. The action clause will also include a positive integer indicating the next state to enter.\n  The guard clause shall consist of a set of tape-heads to move backwards, and a positive integer stating how many squares to move towards the beginning. As with the action clause, no two guard clauses in the same rule can share the same tape-head.\n  Because no two clauses in the same rule can share the same tape-head, it follows that no one rule can both test a tape-head in the guard clause and simultaneously move a tape-head in the action clause.\n Our Magnificent Minsky Machine is initialized with the tape-heads being placed in a specific set of positions, so in addition to listing the states and rules therein, the description of a Magnificent Minsky Machine will also include instructions for setting up the initial position of the tape-heads.\n When we wish to run a Magnificent Minsky Machine, we start it in state 1. We operate our machine by scanning the rules within the current state, in order.\n For each rule, we check its guard clause. If it is possible to move all of the tape-heads in the guard clause towards the beginning, the rule \u201cfires,\u201d and we move the tape-heads towards the beginning as specified by the guard clause. We then consult the action clause, and move all of the tape-heads listed away from the end by the amounts listed. Finally, when a rule fires, if it lists a next state, we change to that state and return to scanning the rules within the current state, in order.\n If any rule\u2019s guard clause cannot perform  all of the required movement of tape-heads towards the beginning, the rule fails, and the tape-heads are not disturbed. We then move on and try the next rule in that state\u2019s list, and the next, and so forth. If all of the rules in the current state fail, the machine halts. It follows, trivially, that if the machine enters a state without any rules, it must necessarily halt.\n If the machine attempts to transition to an undefined state, it also halts. An explicit transition to state 0, therefore, is the well-formed way to explicitly halt the machine.\n Now we\u2019re ready to discuss a simple notation for Magnificent Minsky Machines, and to try one out.\n  Consider a Magnificent Minsky Machine that will add two numbers. We will only need one state, with two rules. Our notation will be simple. In each state, there is a comma-separated list of rules. Since we will only have one state in our first machine, we will only discuss how to write down the rules right now.\n Our state will have a comma-sparated list of rules, i.e.  rule1, rule2. Whitespace is not significant, so we could also write  rule1,rule2 or even:\n  (As is usual with most programming languages, how we arrange our program with whitespace is a matter of organizing the layout for human readability.)\n Each rule willl have an action clause and a guard clause, separated with  /, e.g.:\n  The  / obviously resembles the notation for division, but in a Magnificent Minsky Machine, it doesn\u2019t actually mean \u201cdivide,\u201d it just separates the action clause from the guard clause in each rule.\n The action clauses and guard clauses both have exactly the same notation: One or more tuples of the form  (t^s), where  t identifies the tape-head, and  s identifies the number of squares to move. The  ^ character means exponentiation in some programming langauges, but in a Magnificent Minsky Machine, it\u2019s just a way of separating two numbers.\n  (1^1)(4^1) is the action clause, and it has two tuples:  (1^1) says to move tape-head 1 by one squre, and  (4^1) says to move tape-head 4 by one square.\n  (3^1) is the guard clause, and it says to move tape-head 3 by one square.\n In a Magnificent Minsky Machine, action clauses always move the tape-heads forward, and guard clauses always move the tapehead backwards, so we don\u2019t need to have our clauses use a  + or  -, or arrows pointing in different directions, it is enough to know that clauses to the left of the  / are action clauses and move the tape-heads forward, while clauses to the right of the  / are guard clauses, and move the tape-heads backwards.\n Now to our first machine: Our machine only has one state,  1, and it has two rules:\n  Our program adds two numbers positive numbers, which we shall call  a and  b. It has three tapes, 1, 2, and 3. To set the machine up, we place tape-head 1 at the beginning of its tape, tape-head 2  a squares forward, and we place tape-head 3  b squares forward. When the machine halts, tape-head 1 will be  a + b squares forward, while tape-heads 2 and 3 will be at the beginning.\n We can use it to add the numbers 2+2, and we\u2019ll see if it comes up with 4. Here\u2019s how we\u2019ll show the position of the tape-heads graphically:  21\n  This shows that tape-head 1 is at the beginning, while tape-heads 2 and 3 are two squares forward, the beginnin\n......", "posttime": "2020-05-12 01:38:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5965,john,\u78c1\u5934", "title": "\u8fd8\u8bb0\u5f97\u7ea6\u7ff0\u00b7\u5eb7\u5a01\u7684\u201c\u5f17\u62c9\u7279\u5170\u201d\u5417\uff1f\u8fd9\u662f\u4e00\u79cd\u53ef\u7b11\u5374\u51fa\u5947\u6df1\u5965\u7684\u8bed\u8a00\u3002", "title_en": "Remembering John Conway's FRACTRAN, a ridiculous yet surprisingly deep language", "transed": 1, "url": "http://raganwald.com/2020/05/03/fractran.html", "via": "", "real_tags": ["\u6df1\u5965", "john", "\u78c1\u5934"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001681, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Apache NiFi\u652f\u6301\u5f3a\u5927\u4e14\u53ef\u4f38\u7f29\u7684\u6570\u636e\u8def\u7531\u3001\u8f6c\u6362\u548c\u7cfb\u7edf\u4e2d\u4ecb\u903b\u8f91\u6709\u5411\u56fe\u3002Apache NiFi\u7684\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\u548c\u76ee\u6807\u5305\u62ec\uff1a", "note_en": "Apache NiFi supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic. Some of the high-level capabilities and objectives of Apache NiFi include:", "posttime": "2020-05-12 01:38:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u963f\u5e15\u5947,apache,nifi", "title": "\u963f\u5e15\u5947NiFi", "title_en": "Apache NiFi", "transed": 1, "url": "http://nifi.apache.org/index.html", "via": "", "real_tags": ["\u963f\u5e15\u5947", "apache", "nifi"]}, {"category": "", "categoryclass": "", "imagename": "eab4de15a74c7fe4bf69f7651093b302.png", "infoid": 1001680, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "WebRecorder\u4e3a\u60a8\u6d4f\u89c8\u7684\u4efb\u4f55\u7f51\u9875\u521b\u5efa\u4ea4\u4e92\u5f0f\u526f\u672c\uff0c\u5305\u62ec\u60a8\u7684\u4ea4\u4e92(\u5982\u64ad\u653e\u89c6\u9891\u548c\u97f3\u9891\u3001\u6eda\u52a8\u3001\u5355\u51fb\u6309\u94ae\u7b49)\u6240\u663e\u793a\u7684\u5185\u5bb9\u3002\nwebrecorder.io\u63d0\u4f9b5 GB\u5b58\u50a8\u7a7a\u95f4\u7684\u514d\u8d39\u8d26\u6237\u3002\u901a\u8fc7\u6210\u4e3a\u7f51\u7edc\u8bb0\u5f55\u5668\u7684\u652f\u6301\u8005\uff0c\u83b7\u5f97\u66f4\u591a\uff0c\u5e76\u4e3a\u7f51\u7edc\u8bb0\u5f55\u5668\u7684\u53d1\u5c55\u505a\u51fa\u8d21\u732e\u3002\n\u4e0d\u60f3\u6ce8\u518c\u5417\uff1f\u4e0b\u8f7d\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u5728\u60a8\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u6536\u96c6\u548c\u8bbf\u95ee\u5b58\u6863\u7f51\u9875\uff0c\u65e0\u9700\u5e10\u6237\u3002\n\u5f53\u60a8\u91cd\u65b0\u767b\u5f55\u7f51\u7ad9\u65f6\uff0c\u6355\u83b7\u60a8\u5728\u7f51\u7ad9\u4e0a\u770b\u5230\u7684\u5185\u5bb9\uff0c\u5e76\u5728\u4e0d\u900f\u9732\u60a8\u7684\u51ed\u636e\u7684\u60c5\u51b5\u4e0b\u5171\u4eab\u5b58\u6863\u9875\u9762\u3002\nWebRecorder\u7684\u8fdc\u7a0b\u6d4f\u89c8\u5668\u529f\u80fd\u63d0\u4f9b\u5bf9WebRecorder\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u4e00\u7cfb\u5217\u9884\u914d\u7f6e\u6d4f\u89c8\u5668\u7684\u8bbf\u95ee\u3002\u5b83\u4eec\u63d0\u4f9b\u6700\u5168\u9762\u7684\u7f51\u7edc\u6d41\u91cf\u6355\u83b7\uff0c\u5e76\u652f\u6301\u95ea\u5b58\u3002\n\u7f51\u7edc\u8bb0\u5f55\u5668\u9879\u76ee\u662f\u7531\u65b0\u535a\u7269\u9986\u7684Rhizome\u53d1\u8d77\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u3002\u6211\u4eec\u7684\u4f7f\u547d\u662f\u8ba9\u6240\u6709\u4eba\u90fd\u80fd\u8bbf\u95ee\u9ad8\u4fdd\u771f\u7684\u7f51\u7edc\u5b58\u6863\u3002\n\u4ee5\u4e0b\u662f\u6211\u4eec\u5f00\u53d1\u7684\u5176\u4ed6\u4e00\u4e9b\u5de5\u5177\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e86WebRecorder\u751f\u4ea7\u7684\u53ef\u91cd\u7528\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u5e7f\u6cdb\u5217\u8868\u3002\n\u4e86\u89e3\u66f4\u591a\u7f51\u7edc\u8bb0\u5f55\u5668\u662f\u6839\u830e\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u6839\u830e\u662f\u4e00\u4e2a\u6ce8\u518c\u4e86501(C)(3)\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u3002\u4f60\u7684\u6350\u6b3e\u662f\u514d\u7a0e\u7684\u3002\n\u5373\u4f7f\u60a8\u5904\u4e8e\u8131\u673a\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6b64\u684c\u9762Web\u5b58\u6863\u67e5\u770b\u5668\u6d4f\u89c8\u5bfc\u51fa\u7684\u6536\u85cf\u3002\nWebRecorder\u4e3aWeb\u5b58\u6863\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u53ef\u91cd\u7528\u7684\u5f00\u6e90\u8f6f\u4ef6\u7ec4\u4ef6\uff0c\u6240\u6709\u8fd9\u4e9b\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u5728GitHub\u4e0a\u83b7\u5f97\u3002", "note_en": "Webrecorder creates an interactive copy of any web page that you browse, including content revealed by your interactions such as playing video and audio, scrolling, clicking buttons, and so forth.\n  Webrecorder.io offers free accounts with 5GB of storage. Get more and contribute to Webrecorder&#39;s development by  becoming a supporter.\n Don&#39;t want to register?  Download Desktop App to collect and access archived web pages on your own computer, no account necessary.\n    Capture what you see on websites when you&#39;re logged into them, and share archived pages without revealing your credentials.\n      Webrecorder&#39;s Remote Browser feature provides access to a range of preconfigured browsers running on the Webrecorder server. They offer for the most thorough capture of network traffic, and support for Flash.\n The Webrecorder project is an open source initiative by Rhizome at the New Museum. Our mission is to make high-fidelity web archiving accessible to all.\n Here are some other tools we have developed. An extensive lists of re-usable software components produced by Webrecorder is available here.\n Learn more Webrecorder is a project of Rhizome, a registered 501(c)(3) non-profit organization. Your donations are tax-deductible.\n  Use this desktop web archive viewer to browse exported collections, even when you are offline.\n Webrecorder produces a range of re-usable open source software components for web archiving, all of which are available on GitHub.", "posttime": "2020-05-12 01:38:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb0\u5f55\u5668,interactive,\u5b58\u6863", "title": "\u7f51\u7edc\u8bb0\u5f55\u5668\uff1a\u4e3a\u60a8\u6d4f\u89c8\u7684\u4efb\u4f55\u7f51\u9875\u5236\u4f5c\u4ea4\u4e92\u5f0f\u526f\u672c", "title_en": "Webrecorder: Make an interactive copy of any web page that you browse", "transed": 1, "url": "https://webrecorder.io/", "via": "", "real_tags": ["\u8bb0\u5f55\u5668", "\u5b58\u6863"]}, {"category": "", "categoryclass": "", "imagename": "8bcbf4725023a3732c4df5d7ba9a7676.png", "infoid": 1001679, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7535\u662f\u6211\u4eec\u4e00\u5929\u4e2d\u4e0d\u65ad\u9047\u5230\u7684\u4e00\u79cd\u5e38\u89c1\u73b0\u8c61\u3002\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u719f\u6089\u7535\u6c14\u6280\u672f\u3002\u6211\u4eec\u4e5f\u7ecf\u5386\u8fc7\u7a7f\u8fc7\u94fa\u7740\u5730\u6bef\u7684\u623f\u95f4\u5e76\u63a5\u5730\u5230\u91d1\u5c5e(\u53ef\u80fd\u662f\u95e8\u628a\u624b)\u540e\u4ea7\u751f\u7684\u5f27\u5f62\u9759\u7535\u706b\u82b1\u3002\u6211\u4eec\u66fe\u5728\u96f7\u96e8\u4e2d\u611f\u53d7\u5230\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u95ea\u7535\u5a01\u529b\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u53bb\u4e86\u89e3\u8fd9\u4e9b\u4e8b\u4ef6\u671f\u95f4\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u9047\u5230\u4e24\u79cd\u6709\u70b9\u8fdf\u949d\u7684\u5f62\u8c61\u4e4b\u4e00\uff1a\u7b2c\u4e00\u79cd\u662f\u6c34\u538b\u6a21\u578b\uff0c\u53e6\u4e00\u79cd\u662f\u95ea\u7535\u3002\u6216\u8005\uff0c\u5f53\u6211\u4eec\u53bb\u4e86\u89e3\u8fd9\u4e9b\u4e8b\u4ef6\u4e2d\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u9047\u5230\u4e24\u79cd\u6709\u70b9\u8fdf\u949d\u7684\u5f62\u8c61\uff1a\u7b2c\u4e00\u79cd\u662f\u6c34\u538b\u6a21\u578b\uff0c\u53e6\u4e00\u79cd\u662f\u3002\u7535\u52bf(\u7535\u538b)\u76f8\u5f53\u4e8e\u7ba1\u9053\u4e2d\u7684\u538b\u529b\uff0c\u5728\u7ba1\u9053\u4e2d\u7535\u6d41\u662f\u6c34\u6d41\u3002\u5728\u540e\u8005\u4e2d\uff0c\u7535\u662f\u7531\u79f0\u4e3a\u7535\u5b50\u7684\u5c0f\u73e0\u5b50\u6cbf\u7740\u5bfc\u7ebf\u4f20\u64ad\u800c\u4ea7\u751f\u7684\u3002\u4f46\u8fd9\u4e24\u79cd\u53ef\u89c6\u5316\u90fd\u6709\u5b83\u4eec\u7684\u4f18\u70b9\u3002\u6c34\u538b\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u6784\u601d\u51fa\u50cf\u7535\u4f4d\u548c\u7535\u963b\u8fd9\u6837\u7684\u62bd\u8c61\u6982\u5ff5-\u4f46\u663e\u7136\u7535\u8def\u7684\u5bfc\u7ebf\u3001\u7535\u5bb9\u5668\u548c\u7535\u963b\u4e0e\u5927\u575d\u3001\u7ba1\u9053\u548c\u6536\u7f29\u7ba1\u9053\u7684\u7ed3\u6784\u51e0\u4e4e\u6ca1\u6709\u76f8\u4f3c\u4e4b\u5904\u3002\u7535\u5b50\u73e0\u5b50\u6a21\u578b\u662f\u9ad8\u5ea6\u76f8\u4f3c\u7684\u3002\u4f46\u662f\uff0c\u7535\u5b50\u73e0\u5b50\u6a21\u578b\u662f\u9ad8\u5ea6\u76f8\u4f3c\u7684\u3002\u4f46\u662f\uff0c\u7535\u5b50\u73e0\u5b50\u6a21\u578b\u662f\u9ad8\u5ea6\u76f8\u4f3c\u7684\u3002\u4f46\u662f\uff0c\u6c34\u538b\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u6784\u601d\u51fa\u50cf\u7535\u4f4d\u548c\u7535\u963b\u8fd9\u6837\u7684\u62bd\u8c61\u6982\u5ff5--\u7136\u800c\u5f88\u660e\u663e\uff0c\u7535\u8def\u4e2d\u7684\u5bfc\u7ebf\u3001\u7535\u5bb9\u5668\u548c\u7535\u963b\u4e0e\u5927\u575d\u3001\u7ba1\u9053\u548c\u6536\u7f29\u7ba1\u9053\u7684\u7ed3\u6784\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u76f8\u4f3c\u4e4b\u5904\u3002\u9664\u4e86\u672c\u8eab\u7f3a\u4e4f\u53ef\u89c6\u5316\u7684\u81ea\u6211\u53c2\u7167\u6982\u5ff5\u201c\u7535\u8377\u201d\u4e4b\u5916\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u7f3a\u70b9\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4ee5\u4e0b\u52a8\u753b\uff1a\u5c06\u7535\u4f5c\u4e3a\u539f\u5b50\u4e0a\u7684\u7535\u5b50\u58f3\u5c42\u4e4b\u95f4\u7684\u8868\u9762\u5230\u8868\u9762\u7684\u65cb\u8f6c\u9f7f\u8f6e(\u89c1\u4e0b\u9762\u7684\u7535\u5f71)\u3002\u201c\u8fd9\u4e0d\u662f\u4e07\u80fd\u7684\u53ef\u89c6\u5316\uff0c\u800c\u662f\u5e0c\u671b\u671d\u7740\u6b63\u786e\u7684\u65b9\u5411\u8fc8\u51fa\u51e0\u6b65\u3002\u201d\n\u4efb\u4f55\u7269\u7406\u6982\u5ff5\u90fd\u662f\u5728\u80fd\u60f3\u8c61\u5230\u7684\u6700\u7b80\u5355\u7684\u6761\u4ef6\u4e0b\u9996\u5148\u88ab\u7406\u89e3\u7684\u3002\u540e\u6765\uff0c\u5728\u6211\u4eec\u83b7\u5f97\u4e00\u4e2a\u73b0\u8c61\u7684\u57fa\u672c\u5185\u90e8\u5de5\u4f5c\u539f\u7406\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u539f\u7406\u6269\u5c55\u5230\u5176\u4ed6\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u89e3\u91ca\u5305\u62ec\u7535\u5728\u5185\u7684\u539f\u5b50\u95f4\u73b0\u8c61\u9700\u8981\u4ece\u6700\u7b80\u5355\u7684\u539f\u5b50\u5f00\u59cb\uff1a\u6c22\u6c14\u3002\u6c22\u6c14\u6784\u6210\u4e86\u73b0\u6709\u7269\u8d28\u7684\u5927\u90e8\u5206\uff0c\u4ee5\u5176\u7535\u79bb\u7684\u5f62\u5f0f\u80fd\u591f\u5728\u661f\u9645\u5b87\u5b99\u4e2d\u5bb9\u7eb3\u5de8\u5927\u7684\u7535\u6d41\u3002\u6c22\u53ea\u6709\u4e00\u4e2a\u7535\u5b50\uff0c\u4e3b\u8981\u5b58\u5728\u4e8e\u539f\u5b50\u6838\u7684\u67d0\u4e9b\u5f84\u5411\u8ddd\u79bb\u5185\u3002\u8fd9\u4e2a\u7535\u5b50\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u7535\u5b50\u4e91\uff0c\u662f\u539f\u5b50\u8868\u9762\u4f4d\u7f6e\u7684\u540c\u4e49\u8bcd\u3002\u867d\u7136\u5927\u7ea699.999\u7684\u7535\u5b50\u5b58\u5728\u4e8e\u539f\u5b50\u6838\u7684430pm\u4ee5\u5185\uff0c\u4f46\u627e\u5230\u5ef6\u4f38\u5230\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u8ddd\u79bb\u7684\u8868\u9762\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u91cf\u5b50\u529b\u5b66\uff0c\u7535\u5b50\u7684\u5f84\u5411\u5206\u5e03\u51fd\u6570\u6ca1\u6709\u8ddd\u79bb\u9650\u5236\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u7535\u5b50\u58f3\u5c42\u7684\u8fd9\u4e9b\u6269\u5c55\u8868\u793a\u4e3a\u3002\n\u4e0b\u9762(\u56fe2)\u6240\u793a\u7684\u7535\u8def\u7531\u5355\u5217\u6c22\u539f\u5b50\u7ec4\u6210\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u6c22\u539f\u5b50\u662f\u7535\u79bb\u7684\uff0c\u5e76\u5c06\u5176\u8bf4\u660e\u4e3a\u7f51\u72b6\u7535\u5b50\u58f3\u5c42\u3002\u8fd9\u662f\u53e6\u4e00\u79cd\u663e\u793a\u539f\u5b50\u95f4\u5171\u4eab\u7535\u5b50\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u770b\u5230\u4e24\u7aef\u7684\u7535\u5b50\u67f1\u76f8\u5bf9\u65cb\u8f6c\u3002\u8fd9\u79cd\u65cb\u8f6c\u8bf4\u660e\u4e86\u89d2\u52a8\u91cf\u7684\u51dd\u805a\u65b9\u5411\u6027\u3002\u7535\u5b50\u58f3\u5c42\u7684\u5185\u805a\u89d2\u52a8\u91cf\u89e3\u91ca\u4e86\u201c\u7535\u8377\u201d\u7684\u6982\u5ff5\u3002\u201c\u5728\u672c\u4f8b\u4e2d\uff0c\u987a\u65f6\u9488(CCW)\u65cb\u8f6c\u8868\u793a\u6b63\u7535\u8377(+)\uff0c\u9006\u65f6\u9488(CW)\u8868\u793a\u8d1f(-)\u7535\u8377\u3002\u5c06\u7b26\u53f7\u4efb\u610f\u5206\u914d\u7ed9CW\u6216CCW\u65cb\u8f6c\u5e76\u4e0d\u91cd\u8981\uff0c\u7531\u4e8e\u5173\u4e8e\u7535\u8377\u65b9\u5411\u6027\u7684\u7ea6\u5b9a\u5728\u5386\u53f2\u4e0a\u4e00\u76f4\u5728\u5f98\u5f8a\uff0c\u5176\u57fa\u672c\u7279\u5f81\u662f\uff0c\u5e73\u5747\u800c\u8a00\uff0c\u5728\u7535\u8def\u4e2d(+)\u548c(-)\u5e26\u7535\u7ec8\u7aef\u4e4b\u95f4\uff0c\u5185\u805a\u65cb\u8f6c\u7684\u65b9\u5411\u662f\u76f8\u53cd\u7684\u3002\n\u7535\u8377\u4e5f\u662f\u4e00\u4e2a\u6709\u6807\u5ea6\u7684\u91cf\u3002\u5728\u56fe\u793a\u7684\u7535\u8def\u4e2d\uff0c\u7535\u5b50\u5728(-)\u7aef\u5b50\u7684\u65cb\u8f6c\u901f\u5ea6\u6bd4(+)\u5feb\u3002\u8fd9\u4e0d\u662f\u5173\u4e8e(+)\u548c(-)\u5e26\u7535\u7aef\u5b50\u7684\u4e00\u822c\u7279\u5f81\uff0c\u800c\u662f\u5bf9\u7535\u52bf\u6982\u5ff5\u7684\u8bf4\u660e\u66f4\u7279\u6b8a\u3002\u5feb\u901f\u65cb\u8f6c\u7684\u58f3\u5c42\u6bd4\u65cb\u8f6c\u8f83\u6162\u7684\u58f3\u5c42\u4ee3\u8868\u66f4\u5927\u7684\u7535\u5b50\u52a8\u91cf\uff0c\u56e0\u6b64\u5728\u7535\u5b66\u4e0a\u66f4\u6709\u751f\u4ea7\u529b\u3002*\u5728\u91cf\u5b50\u529b\u5b66\u4e0b\uff0c\u4e0d\u53ef\u80fd\u7cbe\u786e\u5730\u533a\u5206\u901f\u5ea6\u548c\u65b9\u5411\u6027\u5bf9\u7535\u5b50\u52a8\u91cf\u7684\u8d21\u732e\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u53ef\u89c6\u5316\u7b80\u5316\u4e86\u52a8\u91cf\u7684\u6982\u5ff5\u3002*\u5728\u91cf\u5b50\u529b\u5b66\u4e0b\uff0c\u4e0d\u53ef\u80fd\u7cbe\u786e\u5730\u533a\u5206\u901f\u5ea6\u548c\u65b9\u5411\u6027\u5bf9\u7535\u5b50\u52a8\u91cf\u7684\u8d21\u732e\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u53ef\u89c6\u5316\u7b80\u5316\u4e86\u52a8\u91cf\u7684\u6982\u5ff5\u3002\u6bcf\u4e2a\u7ec8\u7aef\u7684\u7535\u5b50\u4e4b\u95f4\u7684\u65b9\u5411\u6027)\u8868\u793a\u7535\u538b\u6216\u7535\u4f4d\u7684\u6982\u5ff5\u3002\u7ec8\u7aef\u4e4b\u95f4\u7684\u7535\u538b\u964d\u8d8a\u5927\uff0c\u4e00\u65e6\u4e24\u4e2a\u7ec8\u7aef\u63a5\u89e6\uff0c\u4ea7\u751f\u7684\u7535\u6d41\u5c31\u8d8a\u5927\u3002\u56e0\u6b64\uff0c\u7535\u6d41\u662f\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u5373\u66f4\u5927\u7684\u52a8\u91cf\u7535\u5b50\u58f3\u5c42(\u66f4\u5feb\uff0c\u66f4\u6709\u51dd\u805a\u529b)\u6fc0\u53d1\u8f83\u5f31\u7684(\u66f4\u6162\u7684\uff0c\u66f4\u4e0d\u7c98\u5408\u7684)\u58f3\u5c42\u8fd0\u52a8\u3002\u5f53\u4e24\u4e2a\u7ec8\u7aef\u63a5\u89e6\u65f6\uff0c\u65b0\u63a5\u89e6\u7684\u67f1\u5b50\u4e4b\u95f4\u7684\u52a8\u91cf\u8f6c\u79fb\u4ee5\u63a5\u8fd1\u5149\u901f\u7684\u901f\u5ea6\u8fc5\u901f\u53d1\u751f\u3002\u7136\u800c\uff0c\u5982\u679c\u539f\u5b50\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b83\u4eec\u7684\u7535\u5b50\u7ee7\u7eed\u4ee5\u5f88\u5927\u7684\u901f\u5ea6\u65cb\u8f6c\u3002\u4f46\u662f\uff0c\u5f53\u4e24\u4e2a\u7ec8\u7aef\u8fdb\u884c\u63a5\u89e6\u65f6\uff0c\u65b0\u63a5\u89e6\u7684\u67f1\u5b50\u4e4b\u95f4\u7684\u52a8\u91cf\u8f6c\u79fb\u53d1\u751f\u5f97\u5f88\u5feb\uff0c\u63a5\u8fd1\u5149\u901f\u3002\u7136\u800c\uff0c\u5982\u679c\u539f\u5b50\u4fdd\u6301\u4e0d\u52a8\uff0c\u5b83\u4eec\u7684\u7535\u5b50\u7ee7\u7eed\u4ee5\u5f88\u5927\u7684\u901f\u5ea6\u65cb\u8f6c", "note_en": "Electricity is a common phenomenon that we encounter continually throughout the day.\u00a0\u00a0Almost everyone is acquainted with electrical technology.\u00a0\u00a0We have also experienced sparks from arc\u2019ed static electricity after walking across a carpeted room and grounding to metal, perhaps a doorknob.\u00a0\u00a0We have taken in the incredible power of lightning during a thunderstorm.\u00a0\u00a0And yet, when we go to find out what is actually happening during these events, we are generally met with one of two somewhat obtuse visualizations:\u00a0\u00a0The\u00a0  water pressure model\u00a0or the\u00a0  electron-bead model.\u00a0\u00a0Both are analogies by degree.\u00a0\u00a0In in the former, electric potential (voltage) is comparable to pressure in a pipe where current is flow of water.\u00a0\u00a0In the latter, electricity results from little beads called electrons that travel down a wire.\u00a0\u00a0  Both of these visualizations have their merits.\u00a0\u00a0The water-pressure model helps us conceive of abstract concepts like potential and resistance \u2014 and yet clearly the wires, capacitors, and resistors of electrical circuitry bear little resemblance to the structures of dams, pipes, and constricting conduits.\u00a0\u00a0The electron-bead model is highly accurate in terms of quantitative accounting, but it stretches the imagination as to how a moving bead actually produces motive pressure, other than the self-referential concept of \u201ccharge,\u201d which itself lacks visualization.\u00a0\u00a0To address these shortcomings, we propose the following animation:\u00a0\u00a0Electricity as surface-to-surface rotational gearing between electron-shells on atoms (see\u00a0 movie\u00a0below).\u00a0\u00a0This is not the end-all-be-all visualization, but hopefully a few steps in the right direction.\n  Any physical concept is best first understood under the simplest conditions imaginable. Later, after we gain access to the basic inner workings of a phenomenon, we can extend these principles to other situations of greater and greater complexity.\u00a0\u00a0For this reason, explanation of inter-atomic phenomena, including electricity, need to begin with the simplest atom:\u00a0\u00a0hydrogen.\u00a0\u00a0Hydrogen constitutes the majority of the material in existence, and in its ionized form is capable of hosting gargantuan currents throughout the interstellar cosmos.  Hydrogen has one electron, which exists predominantly within certain radial distances of the nucleus.\u00a0\u00a0This electron, often referred to as the electron cloud, is synonymous with the location of the surface of the atom.\u00a0\u00a0While\u00a0  99.999% of the electron exists within 430 pm of the nucleus, there is a small chance of finding the surface extended to incredible distances.\u00a0\u00a0In fact, under Quantum Mechanics,\u00a0  the radial distribution function\u00a0for the electron has no limit on distance.\u00a0\u00a0For our model, we represent these extensions of the electron shell as incredibly thin filaments, radially organized about the atom, as shown below in\u00a0 Figure 1:\n  The circuit shown below ( Fig 2) is composed of single-file hydrogens.\u00a0\u00a0We can consider the hydrogens\u00a0  ionized\u00a0and illustrate this as enmeshed electron shells.\u00a0\u00a0This is another way of showing shared electrons between atoms.\u00a0\u00a0We see that the electron columns at either terminal rotate opposite.\u00a0\u00a0This rotation illustrates cohesive directionality of angular momentum.\u00a0\u00a0Cohesive angular momentum of the electron shell explains the concept of \u201ccharge,\u201d where in this example clockwise (CCW) rotation represents positive (+) charge and counter-clockwise (CW) is negative (-) charge.\u00a0\u00a0The arbitrary assignment of sign to CW or CCW rotation is unimportant, as the conventions concerning directionality of charge\u00a0  have wandered throughout history.\u00a0\u00a0The essential feature is that, on average, the direction of cohesive rotation is in opposition between (+) and (-) charged terminals in a circuit.\n Charge\u00a0is also a scaled quantity.\u00a0\u00a0In the illustrated circuit, electrons rotate faster at the (-) terminal than the (+).\u00a0\u00a0This is not a general feature concerning (+) and (-) charged terminals but is rather particular to illustration of the concept of\u00a0  electric potential.\u00a0\u00a0Fast rotating shells represent greater electron momentum, and hence electrically more productive shells, than those depicted with slower rotation.\u00a0\u00a0Under quantum mechanics it is not possible to precisely separate\u00a0  the contribution of speed and directionality to electron momentum, so our visualization simplifies momentum to speed of rotation.\u00a0\u00a0\u00a0Together, the difference in electron momentum (speed, directionality) between electrons at each terminal signifies the concept of voltage, or electric potential.\u00a0\u00a0  The greater the voltage drop between terminals, the greater the current produced once the two make contact.\u00a0\u00a0Therefore, current is the process where greater momentum electron shells (faster, more cohesive) incite weaker (slower, less cohesive) shells into motion.\u00a0\u00a0When the two terminals make contact, the momentum transfer between the newly engaged columns occurs rapidly, at near light speeds.\u00a0\u00a0The atoms stay put, however, and their electrons continue to rotate at much less ferocious speeds.\u00a0\u00a0This is the concept of\u00a0  drift velocity.\n  It\u2019s important to recognize this visualization is a highly simplified model of electricity.\u00a0\u00a0We simplify the differences in charge constituting voltage with directional rotation speed.\u00a0\u00a0In reality, while charge\u00a0 is\u00a0quantized since an object can only rotate one way or the other with respect to some arbitrary axis, electron angular momentum is a continuous concept.\u00a0\u00a0For instance, electron momentum could deconstruct to cohesion of surface rotation and/or it could reflect rotational speed, but these are indistinguishable to the theorist and experimenter alike.\u00a0\u00a0In any event, it is apparent that the actual electron shells\u00a0  are, in fact, rotating.  Also, if we look at more complex atoms we find additional electrons.\u00a0\u00a0We would visualize these\u00a0  additional electrons as additional polarized shells\u00a0that can productively interact with neighboring atoms.\u00a0\u00a0The conducting metals in real wires, for instance, have multiple polar lobes constituting their electron shells.\u00a0\u00a0These complex electron shapes are mathematically described by the concept of\u00a0  orbitals.\u00a0\u00a0The unique multi-lobed structure of p- and d-type orbitals on a metal atom is perhaps why they are such effective conductors.\u00a0\u00a0Each pair of polar surfaces within an orbital is able to productively contact neighboring atoms.\u00a0\u00a0Also, actual wiring in modern technology often utilizes alternating, rather than the illustrated direct-type, current.\u00a0\u00a0Our visualization is easily extended to alternating current by having the atoms move back and forth instead of unidirectionally \u2014 a motion which is equally capable of providing motive force at a distance through a circuit.  This visualization is just a starting point for the imagination.\u00a0\u00a0It is not perfect, but it moves things in the right direction.\u00a0\u00a0For example, it has some serious advantages over the traditional visualizations like the \u201celectron bead flow\u201d and \u201cwater-pressure analogy.\u201d\u00a0\u00a0Unlike these traditional models, we are invoking real structural understanding of the atom to sum up the phenomenon of electricity.\u00a0\u00a0The bead-model of the electron, also called the Bohr model of the atom, has been seriously disregarded for several decades in favor of valence shells, which we reference exclusively.\u00a0\u00a0The water-model illustrates potential and current well, but the analogy also fails to join what is structurally clear about the atom from quantum theory.\u00a0\u00a0Here we hope to have included these oversights into a cohesive visualization by providing for the concepts of charge, voltage, and current with simple hydrogen atoms moving one another through basic surface-to-surface contact.", "posttime": "2020-05-12 01:37:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f62\u8c61\u5316,visualizing,\u7535\u5b50", "title": "\u5c06\u7535\u5f62\u8c61\u5316", "title_en": "Visualizing Electricity", "transed": 1, "url": "https://demystifyingscience.com/blog/how-to-visualize-electricity", "via": "", "real_tags": ["\u5f62\u8c61\u5316", "\u7535\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Anki\u9500\u6bc1\u4e86\u6211\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u5c06\u5e9f\u5f03\u7684\u5386\u53f2\u8bb0\u5f55\u4e0a\u4f20\u5230\u540c\u6b65\u670d\u52a1\u5668\uff0c\u7136\u540e\u6bcf\u6b21\u6211\u8bd5\u56fe\u4ece\u5907\u4efd\u4e2d\u8fd8\u539f\u65f6\uff0c\u6211\u90fd\u4f1a\u53cd\u590d\u91cd\u65b0\u540c\u6b65\u8fd9\u4e9b\u5e9f\u5f03\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u7136\u540e\u6211\u7f16\u5199\u4e86\u81ea\u5df1\u7684\u95f4\u9694\u91cd\u590d\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u4ece\u6807\u8bb0\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8f93\u5165\uff0c\u5728\u7ec8\u7aef\u4e2d\u8be2\u95ee\u95ee\u9898\uff0c\u5e76\u5c06\u72b6\u6001\u5b58\u50a8\u5728json\u6587\u4ef6\u4e2d\u3002\u6211\u5728\u4e00\u4e2a\u4e0b\u5348\u5199\u4e86\u51e0\u767e\u884c\u4ee3\u7801\uff0c\u4ece\u90a3\u4ee5\u540e\u6211\u5c31\u4e00\u76f4\u5728\u7528\u5b83\u3002\n\u6211\u4e5f\u60f3\u5728\u6211\u7684Android\u624b\u673a\u4e0a\u8fd0\u884c\u5b83\uff0c\u4f46\u7ecf\u8fc7\u51e0\u5929\u7684\u6323\u624e\u548c\u51e0\u4e2a\u5343\u5146\u5b57\u8282\u7684IDE\u4e0b\u8f7d\uff0c\u6211\u5931\u53bb\u4e86\u5174\u8da3\u3002\n\u8fd9\u662f\u6211\u7684\u5178\u578b\u7ecf\u9a8c\u3002\u6269\u5c55\u548c\u5b9a\u5236\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u662f\u4e00\u4ef6\u4f8b\u884c\u516c\u4e8b\u3002\u6269\u5c55\u548c\u5b9a\u5236\u6211\u7684\u624b\u673a\u662f\u5982\u6b64\u75db\u82e6\uff0c\u4ee5\u81f3\u4e8e\u6211\u6bcf\u6b21\u90fd\u653e\u5f03\u3002\u6211\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u7684\u8f6f\u4ef6\u611f\u89c9\u5c31\u50cf\u4e00\u53ea\u8212\u9002\u7684\u65e7\u9774\u5b50\uff0c\u7ecf\u8fc7\u591a\u5e74\u7684\u8c03\u6574\u548c\u811a\u672c\u7f16\u5199\uff0c\u7a7f\u4e0a\u4e86\u3002\u6211\u624b\u673a\u4e0a\u7684\u8f6f\u4ef6\u611f\u89c9\u5c31\u50cf\u4e00\u53f0\u8001\u864e\u673a\uff0c\u6bcf\u6708\u79fb\u52a8\u4e00\u6b21\u6240\u6709\u7684\u6309\u94ae\uff0c\u5728\u5e7f\u544a\u64ad\u653e\u65f6\u8ba9\u6211\u7741\u5f00\u773c\u775b\u3002\u5b83\u53c8\u4eae\u53c8\u4eae\uff0c\u4f46\u5b83\u4e0d\u5728\u6211\u8fd9\u8fb9\u3002\nPinephone\u662f\u4e00\u6b3e\u552e\u4ef7150\u7f8e\u5143\u7684\u624b\u673a\uff0c\u65e8\u5728\u80fd\u591f\u8fd0\u884c\u4e3b\u7ebfLinux\u3002\u6211\u4e70\u4e86\u4e00\u53f0\uff0c\u5e0c\u671b\u521b\u9020\u4e00\u79cd\u66f4\u50cf\u4f7f\u7528\u7b14\u8bb0\u672c\u7535\u8111\u7684\u4f53\u9a8c\u3002\n\u663e\u7136\uff0c\u7f16\u5199\u4e00\u5957\u5b8c\u6574\u7684\u624b\u673a\u5957\u88c5\u662f\u4e00\u9879\u5927\u5de5\u7a0b\uff0c\u56e0\u6b64\uff0c\u6211\u4f1a\u575a\u6301\u4e0d\u61c8\u5730\u5c3d\u53ef\u80fd\u5077\u5de5\u51cf\u6599\uff0c\u5e76\u91c7\u7528\u7b80\u6d01\u7f8e\u89c2\u7684\u529f\u80fd\u3002\n\u6211\u88c5\u4e86\u79fb\u52a8\u7535\u8bdd\u3002\u5f53\u65f6\u7684\u533b\u751f\u975e\u5e38\u7b80\u964b\uff0c\u4f46Samueldr\u975e\u5e38\u53cb\u597d\uff0c\u901a\u8fc7IRC\u5411\u6211\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u6211\u5728\u8fd9\u91cc\u5199\u4e0b\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\u6211\u8fd8\u6ca1\u6709\u5f00\u59cb\u7f16\u5199\u7cfb\u7edf\u914d\u7f6e\uff0c\u4f46\u662f\u4e00\u65e6\u6211\u8fd9\u6837\u505a\u4e86\uff0c\u5b83\u5c06\u662f\u4f7f\u7528nixops ploy-d Focus\u7684\u4e00\u6b21\u5355\u51fb\u90e8\u7f72-\u8fd9\u6bd4LineageOS\u66f4\u65b0\u8fc7\u7a0b\u6709\u4e86\u5f88\u5927\u7684\u6539\u8fdb\u3002\u9ed8\u8ba4\u914d\u7f6e\u5982\u4e0b\u6240\u793a\u3002\n\u56e0\u4e3a\u624b\u673a\u8fd0\u884c\u7684\u662f\u666e\u901a\u7684Linux\u7528\u6237\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u624b\u673a\u4e0a\u7f16\u8bd1\u3002\u4f46\u662f\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u7f16\u8bd1\u901f\u5ea6\u5927\u7ea6\u5feb\u4e8610\u500d\uff0c\u6240\u4ee5\u4f3c\u4e4e\u503c\u5f97\u6295\u8d44\u4e8e\u4ea4\u53c9\u7f16\u8bd1\u3002\n\u7b2c\u4e00\u6b65\u662f\u83b7\u5f97\u6211\u6240\u6709\u4f9d\u8d56\u9879\u7684arm64\u7248\u672c\u3002\u8fd9\u662f\u5728shell.nix\u4e2d\u5b8c\u6210\u7684\u3002\n\u6211\u56fa\u5b9anixpkgs\u7684\u7248\u672c\uff0c\u4ee5\u786e\u4fdd\u672c\u5730\u548c\u8fdc\u7a0b\u5f00\u53d1\u4f7f\u7528\u6bcf\u4e2a\u4f9d\u8d56\u9879\u7684\u5b8c\u5168\u76f8\u540c\u7684\u7248\u672c\u3002\nNIX\u6700\u8fd1\u83b7\u5f97\u4e86\u5bf9\u4ea4\u53c9\u7f16\u8bd1\u7684\u652f\u6301\uff0c\u4f46\u662f\u5f88\u591a\u5305\u8fd8\u6ca1\u6709\u6210\u529f\u5730\u4ea4\u53c9\u7f16\u8bd1\u3002\u6240\u4ee5\u8bc0\u7a8d\u662f\u8bbe\u7f6e\u4ea4\u53c9\u7f16\u8bd1\uff0c\u4f46\u662f\u4ece\u672c\u5730\u7684arm64repo\u83b7\u53d6\u4e00\u4e9b\u5305\u3002\u8fd9\u4e9b\u4e0d\u4f1a\u5728\u975earm64\u673a\u5668\u4e0a\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\uff0c\u4f46\u662fnixpkgs\u4e8c\u8fdb\u5236\u7f13\u5b58\u4e2d\u6709\u9884\u6784\u5efa\u7684\u7248\u672c\u3002\narmPkgs=import nixpkgs{system=&#34\uff1baarch64-linux&#34\uff1b\uff1b}\uff1bCrossPkgs=import nixpkgs{CroSystem=hostPkgs\u3002\u5229\u5e03\u3002\u7cfb\u7edf\u3002\u4e3e\u4f8b\u8bf4\u660e\u3002aarch64-\u591a\u5e73\u53f0\uff1boverays=[(Self\uff1aSuper\uff1a{Inherit(ArmPkgs)GCC\u53f0\u9762libGLSDL2\uff1b})]\uff1b}\uff1b\n\u5927\u591a\u6570\u914d\u7f6e\u5728\u672c\u5730\u6784\u5efa\u548c\u8de8\u6784\u5efa\u4e4b\u95f4\u5171\u4eab\uff0c\u56e0\u6b64shell.nix\u63a5\u53d7\u4e00\u4e2a\u5e03\u5c14\u53c2\u6570\u6765\u544a\u8bc9\u5b83\u6211\u4eec\u6b63\u5728\u5c1d\u8bd5\u4ec0\u4e48\u3002\n\u6211\u4eec\u9700\u8981\u53ef\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684pkgconfig\u548cpatchelf\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u7f16\u8bd1\u671f\u95f4\u4f7f\u7528\u3002\u6211\u4eec\u9700\u8981\u5728\u76ee\u6807\u673a\u5668\u4e0a\u53ef\u8fd0\u884c\u7684libGL\u548cSDL2\u8fdb\u884c\u94fe\u63a5\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884cnix-shell\u4ee5\u653e\u5165shell\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u672c\u5730\u7f16\u8bd1\uff0c\u6216\u8005\u6267\u884cnix-shell--arg cross true\u4ee5\u653e\u5165shell\u8bbe\u7f6e\u4e2d\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u3002\n\u6211\u628a\u6bcf\u4ef6\u4e8b\u90fd\u5199\u5f97\u6709\u6761\u4e0d\u7d0a\uff0c\u56e0\u4e3a\u6211\u60f3\u8ba9\u6574\u4e2a\u7cfb\u7edf\u4fdd\u6301\u5c0f\u5de7\u3001\u7b80\u5355\u548c\u5feb\u901f\u3002Zig\u662f\u4e00\u79cd\u5c0f\u578b\u3001\u7b80\u5355\u3001\u5feb\u901f\u7684\u8bed\u8a00\uff0c\u5b83\u4e5f\u975e\u5e38\u5173\u5fc3\u4ea4\u53c9\u7f16\u8bd1\u3002\n\u552f\u4e00\u7684\u95ee\u9898\u662f\u5b83\u5728\u4ea4\u53c9\u7f16\u8bd1\u65f6\u5f88\u96be\u4f7f\u7528pkgconfig\u627e\u5230\u5934\u6587\u4ef6\u3002\u6211\u8fd8\u6ca1\u6709\u8bd5\u7740\u8c03\u8bd5\u8fd9\u4e2a--\u53ea\u662f\u76f4\u63a5\u4f20\u9012\u4e86\u5b83\u4eec\u3002\n..\u3002try include deNix(exe\uff0c&#34\uff1bNIX_LIBGL_DEV&#34\uff1b)\uff1btry include deNix(exe\uff0c&#34\uff1bNIX_SDL2_DEV&#34\uff1b)\uff1b.fn include deNix(exe\uff1a*std.build.LibExeObjStep\uff0cenv_var\uff1a[]const U8)\uff01void{var buf=std.ArrayList(U8).init(allocator\u3002exe.addIncludeDir(buf.item)\uff1b}\u3002\nZig\u4e5f\u6ca1\u6709\u5728\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u6b63\u786e\u8bbe\u7f6e\u8def\u5f84\uff0c\u4f46\u8fd9\u662f\u5408\u7406\u7684-\u5b83\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6211\u6b63\u5728\u4ea4\u53c9\u7f16\u8bd1\u5230\u76f8\u540c\u7684NIX\u7cfb\u7edf\uff0c\u6240\u4ee5\u5b83\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e9b\u5408\u7406\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u6211\u53ea\u662f\u5728\u7f16\u8bd1\u540e\u4fee\u8865\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\n\u7136\u540e\uff0c\u6784\u5efa\u8fc7\u7a0b\u8981\u4e48\u662f\u672c\u5730ZIG\u6784\u5efa\uff0c\u8981\u4e48\u662f\u8de8&amp\uff1b&amp\uff1b./sync\u7684ZIG\u6784\u5efa\u3002\n\u56e0\u4e3a\u7b14\u8bb0\u672c\u7535\u8111\u548c\u624b\u673a\u90fd\u8fd0\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5177\u6709\u76f8\u540c\u7684\u56fa\u5b9a\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u8d39\u5fc3\u4f7f\u7528\u865a\u62df\u673a\u8fdb\u884c\u672c\u5730\u5f00\u53d1\u3002\u6211\u53ea\u9700\u7528\u4ee3\u7801\u6a21\u62df\u8bbe\u5907\u4f20\u611f\u5668\uff0c\u5176\u4ed6\u4e00\u5207\u90fd\u4f1a\u4e00\u6837\u8fd0\u884c\u3002\n\u6211\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u5373\u65f6\u6a21\u5f0f\u7684GUI\u5e93\uff0c\u56e0\u4e3a\u6211\u53d1\u73b0\u5b83\u4eec\u5728\u4ee3\u7801\u884c\u548c\u667a\u529b\u5f00\u9500\u65b9\u9762\u90fd\u6bd4\u5927\u591a\u6570\u4fdd\u7559\u7684\u7cfb\u7edf\u7b80\u5355\u5f97\u591a\u3002\u6211\u4eec\u7684\u673a\u68b0\u516c\u53f8\u6700\u8fd1\u5728GDC\u4e0a\u53d1\u8868\u4e86\u4e00\u6b21\u6f14\u8bb2\uff0c\u9610\u8ff0\u4e86\u8fd9\u4e00\u7406\u8bba\u57fa\u7840\u3002\n\u7535\u6c60\u4f7f\u7528\u7387\u7ecf\u5e38\u53d7\u5230\u5173\u6ce8\uff0c\u4f46\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e00\u76f4\u5f98\u5f8a\u57281%\u7684CPU\u5de6\u53f3\uff0c\u800c\u6bcf\u5f53\u6211\u6309\u4e0b\u6309\u94ae\u65f6\uff0cGNOME\u8ba1\u7b97\u5668\u5c31\u4f1a\u8fbe\u523020%-30%\u3002\u5982\u679c\u8fd9\u6210\u4e3a\u66f4\u590d\u6742\u7684UI\u7684\u95ee\u9898\uff0c\u6211\u53ef\u4ee5\u5728\u7ed8\u56fe\u547d\u4ee4\u5c42\u6dfb\u52a0\u4e00\u4e9b\u7f13\u5b58\u3002\n\u80af\u5b9a\u6709\u4e00\u4e9b\u4e8b\u60c5\u5f88\u96be\u5728\u5373\u65f6\u6a21\u5f0f\u4e0b\u505a\u597d\uff0c\u6bd4\u5982\u590d\u6742\u7684\u53cd\u5e94\u6027\u5e03\u5c40\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u662f\u6211\u5173\u5fc3\u5728\u624b\u673a\u4e0a\u505a\u7684\u4e8b\u60c5\u3002\n\u6211\u4eceMicroui\u590d\u5236\u4e86\u6211\u7684\u6e32\u67d3\u5668\u548c\u5b57\u4f53\u56fe\u96c6\uff0c\u6211\u5df2\u7ecf\u6784\u5efa\u4e86\u8db3\u591f\u7684UI\u5e93\u6765\u8fd0\u884c\u3002\u4ee5\u4e0b\u662f\u8fd9\u6b3e\u95f4\u9694\u91cd\u590d\u5e94\u7528\u7684\u6574\u4e2a\u7528\u6237\u754c\u9762\uff1a\nif(ui.key orelse0==&#39\uff1bQ&#39\uff1b){\u5c1d\u8bd5\u4fdd\u5b58\u65e5\u5fd7(self.logs.item)\uff1bstd.os.exit(0)\uff1b}\u5e38\u91cf\u767d\u8272=UI.color{.R=255\uff0c.g=255\uff0c.B=255\uff0c.a=255}\uff1bvar TEXT_RECT=RECT\uff1bvar BUTTON_RECT=text_rect.splitBottom(atlas.text_height)\uff1bswitch(self.state){.Prepare=&gt\uff1b{try ui.text(text_rect\uff0cWhite\uff0ctry format(allocator\uff0c&#34\uff1b{}PENDING&#34\uff1b\uff0c.{self.queue e.len}))\uff1bif(try ui.button(button_rect\uff0cWhite\uff0c&#34\uff1bGo&#34\uff1b)){self.state=.Prompt\uff1b}\uff0c.Prompt=&gt\uff1b{const next=self.queue[0]\uff1bconst text=try format(allocator\uff0c&#34\uff1b){self.state=.Prompt\uff1b}\uff0c.Prompt=&gt\uff1b{const next=self.queue[0]\uff1bconst text=try format(allocator\uff0c&#34\uff1b)\u3002{}\\n\\n(\u7d27\u6025\u6027={}\uff0c\u95f4\u9694={})&#34\uff1b\uff0c.{next.cloze.renders[next.state.ender_ix]\uff0cnext.state.urgency\uff0cnext.state.interval_ns})\uff1b\u5c1d\u8bd5ui.text(text_rect\uff0cWhite\uff0ctext)\uff1bif(try ui.button(button_rect\uff0cWhite\uff0c&#34\uff1bshow&#34\uff1b){self.state=.Reval\uff1b}}\uff0c.Reval=&Get\u3002\u5c1d\u8bd5ui.text(RECT\uff0c\u767d\u8272\uff0cTry Format(allocator\uff0c&#34\uff1b{}&#34\uff1b\uff0c.{next.cloze.text}))\uff1bvar event_o\uff1a\uff1fLog.Event=null\uff1bvar misse_rect=button_rect\uff1bvar Hit_rect=misse_rect.plitRight(@divTrunc(misse_rect.w\uff0c2))\uff1bif(try ui.button(misse_rect\uff0cWhite\uff0c&#34\uff1bmisse&\u3002}if(try ui.button(Hit_rect\uff0cWhite\uff0c&#34\uff1bHit&#34\uff1b)){event_o=.hit\uff1b}if(Event_O)|event|{try self.logs.append(.{.at_ns=std.time.milliTimestamp()*1_000_000\uff0c.cloze_text=next.cloze.text\uff0c.ender_ix=next.state.ender_ix\uff0c.event=event\uff0c})\uff1bself.queue=\u3002if(self.queue e.len==0){self.queue=try sortByUrgency(&amp\uff1bself.frame_arena\uff0cself.cloze\uff0cself.logs.item)\uff1bself.state=.Prepare\uff1b}Else{self.state=.Prompt\uff1b}}\uff0c}\u3002\n\u6211\u771f\u7684\u5f88\u559c\u6b22\u5b83\u662f\u76f4\u63a5\u7684\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u5206\u6563\u5728\u591a\u4e2a\u6587\u4ef6\u3001\u7c7b\u6216\u56de\u8c03\u4e2d\u3002\u4f60\u53ef\u4ee5\u4ece\u4e0a\u5230\u4e0b\u770b\u3002\u5982\u679c\u6211\u60f3\u5bf9\u67d0\u4e2a\u7ec4\u4ef6\u6216\u5e03\u5c40\u8fdb\u884c\u62bd\u8c61\uff0c\u6211\u53ea\u9700\u5c06\u5176\u653e\u5165\u4e00\u4e2a\u51fd\u6570\u4e2d\u5373\u53ef\u3002\n\u663e\u7136\uff0c\u8981\u6539\u8fdb\u6297\u952f\u9f7f\u3001\u5b57\u4f53\u3001\u5e03\u5c40\u7b49\u65b9\u9762\u9700\u8981\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u4f46\u6211\u8ba4\u4e3a\u53ef\u4ee5\u5728\u4e0d\u4f7f\u4e0a\u9762\u7684\u754c\u9762\u590d\u6742\u5316\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8fd9\u4e9b\u5de5\u4f5c\u3002", "note_en": "After anki trashed my history, uploaded the trashed history to the sync server, and then repeatedly re-synced the trashed history every time I tried to restore from backup, I wrote my own spaced repetition app. It reads input from a markdown file, asks questions in the terminal and stores state in a json file. I wrote those few hundred lines of code in an afternoon and I&#39;ve been using it ever since.\n I wanted to run it on my android phone too, but after several days of struggling and several gigabytes of IDE downloads I lost interest.\n This is my typical experience. Extending and customizing my laptop is a routine affair. Extending and customizing my phone is so painful that I give up every time. The software on my laptop feels like a comfortable old boot, worn in over years of tweaking and scripting. The software on my phone feels like a slot machine that moves all the buttons around once a month and holds my eyes open while the ads play. It&#39;s shiny and polished, but it isn&#39;t on my side.\n  The  pinephone is a $150 mobile phone that aims to be able to run mainline linux. I bought one hoping to create an experience more like the experience of using my laptop.\n Obviously writing an entire mobile suite is a big project, so I&#39;m relentlessly cutting corners wherever possible and adopting an aesthetic of simplicity &gt; capability.\n    I installed  mobile-nixos. The docs at the time were very barebones but  samueldr was kind enough to walk me through it over irc and I wrote down the process  here.\n I haven&#39;t gotten around to writing a system configuration yet, but once I do it will be a single-click deploy with  nixops deploy -d focus - a big improvement over the  LineageOS update process. The default configuration looks like  this.\n  Since the phone is running a normal linux userland it is possible to compile directly on the phone. But my laptop compiles things ~10x faster so it seemed worth investing in cross-compilation.\n The first step is getting hold of arm64 versions of all my dependencies. This is done in  shell.nix.\n I pin the version of nixpkgs to make sure that both local and remote development use the exact same version of each dependency.\n  Nix recently gained support for cross-compilation but many packages don&#39;t cross-compile successfully yet. So the trick is to setup for cross-compilation, but grab some packages from the native arm64 repo. These won&#39;t build from source on a non-arm64 machine but there are pre-built version available in the nixpkgs binary cache.\n armPkgs  =  import  nixpkgs  {  system  =  &#34;aarch64-linux&#34; ;  } ;  crossPkgs  =  import  nixpkgs  {  crossSystem  =  hostPkgs . lib . systems . examples . aarch64-multiplatform ;  overlays  =  [( self :  super : {  inherit  ( armPkgs )  gcc mesa libGL SDL2  ;  })] ;  } ;\n Most config is shared between local and cross builds, so  shell.nix takes a boolean argument that tells it which we&#39;re attempting.\n  We need pkgconfig and patchelf runnable on the host machine because they are used during compilation. And we need libGL and SDL2 runnable on the target machine to link against.\n  Now we can do  nix-shell to drop into a shell setup for local compilation, or  nix-shell --arg cross true to drop into a shell setup for cross compilation.\n  I wrote everything in  zig because I&#39;m trying to keep the whole system small, simple and fast. Zig is a small, simple, fast language that also cares a lot about cross-compilation.\n  The one hitch is that it struggled to find headers using pkgconfig when cross-compiling. I haven&#39;t tried to debug this - just passed them directly instead.\n    ... try includeNix(exe, &#34;NIX_LIBGL_DEV&#34;); try includeNix(exe, &#34;NIX_SDL2_DEV&#34;);...fn includeNix(exe: *std.build.LibExeObjStep, env_var: []const u8) !void { var buf = std.ArrayList(u8).init(allocator); defer buf.deinit(); try buf.appendSlice(std.os.getenv(env_var).?); try buf.appendSlice(&#34;/include&#34;); exe.addIncludeDir(buf.items);}\n Zig also didn&#39;t set paths correctly in the resulting binary but this is reasonable - there is no way for it to know that I&#39;m cross-compiling to an identical nix system so it defaults to some reasonable heuristics. I just patch the binary after compilation.\n     The build process is then either  zig build local or  zig build cross &amp;&amp; ./sync.\n Since both laptop and phone are running the same operating system with the same pinned dependencies I don&#39;t bother to use a virtual machine for local development. I can just mock out the device sensors in code and everything else will run the same.\n  I&#39;m writing an immediate-mode GUI library because I find them much simpler than most retained systems, in terms of both lines of code and mental overhead. Our Machinery recently gave a  GDC talk that lays out the rationale.\n Battery usage is often given as a concern, but on my laptop this app hovers around 1% cpu at all times whereas gnome-calculator reaches 20-30% whenever I press buttons. If this becomes a problem with more complex UIs I can add some caching at the draw command layer.\n There are definitely some things that may be difficult to do well in immediate-mode, like complex reactive layouts, but luckily they aren&#39;t things that I care about doing on my phone.\n I copied my  renderer and  font atlas from  microui and I&#39;ve built just enough UI library to get things working. Here is the entire UI for the spaced repetition app:\n if (ui.key orelse 0 == &#39;q&#39;) { try saveLogs(self.logs.items); std.os.exit(0);}const white = UI.Color{ .r = 255, .g = 255, .b = 255, .a = 255 };var text_rect = rect;var button_rect = text_rect.splitBottom(atlas.text_height);switch (self.state) { .Prepare =&gt; { try ui.text(text_rect, white, try format(allocator, &#34;{} pending&#34;, .{self.queue.len})); if (try ui.button(button_rect, white, &#34;go&#34;)) { self.state = .Prompt; } }, .Prompt =&gt; { const next = self.queue[0]; const text = try format( allocator, &#34;{}\\n\\n(urgency={}, interval={})&#34;, .{ next.cloze.renders[next.state.render_ix], next.state.urgency, next.state.interval_ns } ); try ui.text(text_rect, white, text); if (try ui.button(button_rect, white, &#34;show&#34;)) { self.state = .Reveal; } }, .Reveal =&gt; { const next = self.queue[0]; try ui.text(rect, white, try format(allocator, &#34;{}&#34;, .{next.cloze.text})); var event_o: ?Log.Event = null; var miss_rect = button_rect; var hit_rect = miss_rect.splitRight(@divTrunc(miss_rect.w, 2)); if (try ui.button(miss_rect, white, &#34;miss&#34;)) { event_o = .Miss; } if (try ui.button(hit_rect, white, &#34;hit&#34;)) { event_o = .Hit; } if (event_o) |event| { try self.logs.append(.{ .at_ns = std.time.milliTimestamp() * 1_000_000, .cloze_text = next.cloze.text, .render_ix = next.state.render_ix, .event = event, }); self.queue = self.queue[1..]; if (self.queue.len == 0) { self.queue = try sortByUrgency(&amp;self.frame_arena, self.clozes, self.logs.items); self.state = .Prepare; } else { self.state = .Prompt; } } },}\n I really like that it&#39;s just straight code - not split across multiple files or classes or callbacks. You can just read it from top to bottom. If I want to abstract over some component or layout I can just put it in a function.\n Obviously it needs a lot of work to improve anti-aliasing, fonts, layout etc, but I think those can be done without complicating the interface above.", "posttime": "2020-05-12 01:37:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pinephone,\u624b\u673a", "title": "Pinephone\u7b2c\u4e00\u6b65", "title_en": "Pinephone first steps", "transed": 1, "url": "https://scattered-thoughts.net/writing/pinephone-first-steps/", "via": "", "real_tags": ["pinephone", "\u624b\u673a"]}, {"category": "", "categoryclass": "", "imagename": "bc1c686e709d1c953be460cf42da4708.jpeg", "infoid": 1001677, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6587\u7ae0\u548c\u535a\u5ba2\u6587\u7ae0\u5f00\u59cb\u95ee\u540c\u6837\u7684\u95ee\u9898\uff1a\u201c\u4e3a\u4ec0\u4e48\u6240\u6709\u7684\u7f51\u7ad9\u770b\u8d77\u6765\u90fd\u662f\u4e00\u6837\u7684\uff1f\u201d\n\u8fd9\u4e9b\u5e16\u5b50\u901a\u5e38\u4f1a\u6307\u51fa\u4e00\u4e9b\u5e38\u89c1\u7684\u8bbe\u8ba1\u5143\u7d20\uff0c\u4ece\u5e26\u6709\u53e0\u52a0\u6587\u672c\u7684\u5927\u56fe\u7247\u5230\u6c49\u5821\u83dc\u5355\uff0c\u8fd9\u662f\u4e09\u6761\u6c34\u5e73\u7ebf\uff0c\u5f53\u70b9\u51fb\u65f6\uff0c\u4f1a\u663e\u793a\u53ef\u4f9b\u9009\u62e9\u7684\u9875\u9762\u9009\u9879\u5217\u8868\u3002\n\u6211\u7684\u540c\u4e8b\u5df4\u8fea\u4e9a\u00b7\u675c\u65af\u8482(Bardia Doosti)\u3001\u5927\u536b\u00b7\u514b\u5170\u5fb7\u5c14(David Crandall)\u3001\u8bfa\u66fc\u00b7\u82cf(Norman Su)\u548c\u6211\u6b63\u5728\u7814\u7a76\u7f51\u7edc\u7684\u5386\u53f2\uff0c\u8fd9\u65f6\u6211\u4eec\u5f00\u59cb\u6ce8\u610f\u5230\u8fd9\u4e9b\u5e16\u5b50\u7a81\u7136\u51fa\u73b0\u3002\u4e0d\u8fc7\uff0c\u6ca1\u6709\u4e00\u4f4d\u4f5c\u8005\u505a\u8fc7\u4efb\u4f55\u5f62\u5f0f\u7684\u5b9e\u8bc1\u7814\u7a76\u3002\u8fd9\u66f4\u591a\u7684\u662f\u4ed6\u4eec\u7684\u9884\u611f\u3002\n\u6211\u4eec\u51b3\u5b9a\u5bf9\u8fd9\u4e00\u8bf4\u6cd5\u8fdb\u884c\u8c03\u67e5\uff0c\u770b\u770b\u7f51\u7ad9\u5f00\u59cb\u770b\u8d77\u6765\u4e00\u6837\u7684\u8bf4\u6cd5\u662f\u5426\u5c5e\u5b9e\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u63a2\u7d22\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u6570\u636e\u6316\u6398\u7814\u7a76\uff0c\u4ed4\u7ec6\u68c0\u67e5\u4e861\u4e07\u4e2a\u7f51\u7ad9\u4e0a\u7684\u8fd120\u4e07\u5f20\u56fe\u7247\u3002\n\u8981\u7814\u7a76\u6574\u4e2a\u4e92\u8054\u7f51\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff1b\u6709\u8d85\u8fc710\u4ebf\u4e2a\u7f51\u7ad9\uff0c\u6709\u5f88\u591a\u500d\u4e8e\u6b64\u7684\u7f51\u9875\u3002\u7531\u4e8e\u6ca1\u6709\u53ef\u4f9b\u9009\u62e9\u7684\u5168\u90e8\u5217\u8868\uff0c\u56e0\u6b64\u968f\u673a\u8fdb\u884c\u4e92\u8054\u7f51\u62bd\u6837\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5373\u4f7f\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u5927\u591a\u6570\u4eba\u4e5f\u53ea\u662f\u5b9a\u671f\u8bbf\u95ee\u8fd9\u4e9b\u7f51\u7ad9\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u6240\u4ee5\u968f\u673a\u62bd\u6837\u53ef\u80fd\u751a\u81f3\u4e0d\u4f1a\u50cf\u5927\u591a\u6570\u4eba\u7ecf\u5386\u7684\u90a3\u6837\u6355\u6349\u5230\u4e92\u8054\u7f51\u3002\n\u6211\u4eec\u6700\u7ec8\u4f7f\u7528\u4e86\u7f57\u7d201000(Russell 1000)\u7684\u7f51\u7ad9\uff0c\u8fd9\u662f\u7f8e\u56fd\u5e02\u503c\u6700\u9ad8\u7684\u4f01\u4e1a\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u80fd\u4ee3\u8868\u4e3b\u6d41\u4f01\u4e1a\u7f51\u9875\u8bbe\u8ba1\u7684\u8d8b\u52bf\u3002\u6211\u4eec\u8fd8\u7814\u7a76\u4e86\u53e6\u5916\u4e24\u7ec4\u7f51\u7ad9\uff0c\u4e00\u7ec4\u662fAlexa\u7684500\u4e2a\u6d41\u91cf\u6700\u5927\u7684\u7f51\u7ad9\uff0c\u53e6\u4e00\u7ec4\u662f\u83b7\u5f97Webby Awards\u63d0\u540d\u7684\u7f51\u7ad9\u3002\n\u56e0\u4e3a\u6211\u4eec\u5bf9\u8fd9\u4e9b\u7f51\u7ad9\u7684\u89c6\u89c9\u5143\u7d20\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u4e86\u5b9a\u671f\u4fdd\u5b58\u7f51\u7ad9\u7684\u4e92\u8054\u7f51\u6863\u6848\u9986(Internet Archive)\u63d0\u4f9b\u7684\u4ed6\u4eec\u7f51\u9875\u7684\u56fe\u7247\u4f5c\u4e3a\u6570\u636e\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u6536\u96c6\u5bf9\u6bd4\u6570\u767e\u4e07\u4e2a\u7f51\u7ad9\u5bf9\u7684\u5b9a\u91cf\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u52a8\u5316\u5206\u6790\u8fc7\u7a0b\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u5b9a\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u81ea\u52a8\u6d4b\u91cf\u7684\u201c\u76f8\u4f3c\u6027\u201d\u7684\u5b9a\u4e49\u3002\u6211\u4eec\u8c03\u67e5\u4e86\u989c\u8272\u548c\u5e03\u5c40\u7b49\u7279\u5b9a\u5c5e\u6027\uff0c\u4ee5\u53ca\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u4ece\u6570\u636e\u4e2d\u81ea\u52a8\u5b66\u4e60\u7684\u5c5e\u6027\u3002\n\u5bf9\u4e8e\u989c\u8272\u548c\u5e03\u5c40\u5c5e\u6027\uff0c\u6211\u4eec\u6d4b\u91cf\u4e86\u5c06\u4e00\u4e2a\u7f51\u7ad9\u7684\u914d\u8272\u65b9\u6848\u6216\u9875\u9762\u7ed3\u6784\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7f51\u7ad9\u9700\u8981\u8fdb\u884c\u7684\u9010\u4e2a\u50cf\u7d20\u7684\u7f16\u8f91\u6b21\u6570\u3002\u5bf9\u4e8e\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u6839\u636e\u56fe\u50cf\u6765\u81ea\u54ea\u4e2a\u7f51\u7ad9\u5bf9\u56fe\u50cf\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u6d4b\u91cf\u6a21\u578b\u5b66\u4e60\u5230\u7684\u5c5e\u6027\u3002\u6211\u4eec\u4e4b\u524d\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u8fd9\u5728\u5ea6\u91cf\u98ce\u683c\u76f8\u4f3c\u6027\u65b9\u9762\u505a\u5f97\u76f8\u5f53\u597d\uff0c\u4f46\u662f\u4eba\u7c7b\u5f88\u96be\u7406\u89e3\u6a21\u578b\u5173\u6ce8\u7684\u662f\u4ec0\u4e48\u5c5e\u6027\u3002\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6240\u6709\u4e09\u4e2a\u6307\u6807-\u989c\u8272\u3001\u5e03\u5c40\u548c\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u5c5e\u6027-\u7f51\u7ad9\u4e4b\u95f4\u7684\u5e73\u5747\u5dee\u5f02\u57282008\u5e74\u81f32010\u5e74\u8fbe\u5230\u5cf0\u503c\uff0c\u7136\u540e\u57282010\u5e74\u81f32016\u5e74\u4e0b\u964d\u3002\u5e03\u5c40\u5dee\u5f02\u51cf\u5c11\u7684\u6700\u591a\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0b\u964d\u4e8630%\u4ee5\u4e0a\u3002\n\u8fd9\u4e9b\u53d1\u73b0\u8bc1\u5b9e\u4e86\u7f51\u9875\u8bbe\u8ba1\u535a\u5ba2\u4f5c\u8005\u7684\u6000\u7591\uff0c\u5373\u7f51\u7ad9\u6b63\u5728\u53d8\u5f97\u8d8a\u6765\u8d8a\u76f8\u4f3c\u3002\u5728\u5c55\u793a\u4e86\u8fd9\u4e00\u8d8b\u52bf\u4e4b\u540e\uff0c\u6211\u4eec\u60f3\u8981\u7814\u7a76\u6211\u4eec\u7684\u6570\u636e\uff0c\u770b\u770b\u662f\u4ec0\u4e48\u5177\u4f53\u7684\u53d8\u5316\u5bfc\u81f4\u4e86\u8fd9\u4e00\u8d8b\u52bf\u3002\n\u60a8\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u4e9b\u7ad9\u70b9\u53ea\u662f\u590d\u5236\u5f7c\u6b64\u7684\u4ee3\u7801\uff0c\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4ee3\u7801\u76f8\u4f3c\u6027\u5b9e\u9645\u4e0a\u5df2\u663e\u8457\u964d\u4f4e\u3002\u7136\u800c\uff0c\u8f6f\u4ef6\u5e93\u7684\u4f7f\u7528\u589e\u52a0\u4e86\u5f88\u591a\u3002\n\u5e93\u4ee5\u5e38\u89c1\u4efb\u52a1\u7684\u901a\u7528\u4ee3\u7801\u96c6\u5408\u4e3a\u7279\u8272\uff0c\u4f8b\u5982\u4e3a\u79fb\u52a8\u8bbe\u5907\u8c03\u6574\u9875\u9762\u5927\u5c0f\u6216\u5236\u4f5c\u6c49\u5821\u83dc\u5355\u6ed1\u5165\u6ed1\u51fa\u3002\u6211\u4eec\u89c2\u5bdf\u4e86\u54ea\u4e9b\u7ad9\u70b9\u6709\u5f88\u591a\u5171\u540c\u7684\u5e93\uff0c\u4ee5\u53ca\u5b83\u4eec\u770b\u8d77\u6765\u6709\u591a\u76f8\u4f3c\u3002\u4f7f\u7528\u67d0\u4e9b\u5e93\u6784\u5efa\u7684\u7f51\u7ad9-Bootstrap\u3001FontAwese\u548cJQuery UI-\u770b\u8d77\u6765\u5f7c\u6b64\u66f4\u76f8\u4f3c\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e9b\u5e93\u63a7\u5236\u9875\u9762\u5e03\u5c40\uff0c\u5e76\u4e14\u5177\u6709\u5e38\u7528\u7684\u9ed8\u8ba4\u9009\u9879\u3002\u4f7f\u7528\u5176\u4ed6\u5e93(\u5982SWFObject\u548cJQuery\u5de5\u5177)\u7684\u7ad9\u70b9\u5f80\u5f80\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u540c\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e9b\u5e93\u5141\u8bb8\u66f4\u590d\u6742\u3001\u66f4\u5b9a\u5236\u7684\u9875\u9762\u3002\n2005\u5e74\u5e73\u5747\u76f8\u4f3c\u5ea6\u5f97\u5206\u7684\u7f51\u7ad9\u5f80\u5f80\u6bd42016\u5e74\u5e73\u5747\u76f8\u4f3c\u5ea6\u5f97\u5206\u7684\u7f51\u7ad9\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u76f8\u4f3c\u3002\n\u4f8b\u5982\uff0c\u57282005\u5e74\uff0cWebshots.com\u548cYum.com\u88ab\u8ba4\u4e3a\u76f8\u5bf9\u76f8\u4f3c\uff0c\u4f46\u914d\u8272\u65b9\u6848\u548c\u5e03\u5c40\u7565\u6709\u4e0d\u540c\u3002\u867d\u7136\u5b83\u4eec\u90fd\u4e3b\u8981\u4f7f\u7528\u767d\u8272\u3001\u84dd\u8272\u548c\u9ed1\u8272\uff0c\u4f46\u53f3\u8fb9\u7684\u7f51\u7ad9\u80cc\u666f\u662f\u84dd\u8272\u7684\u3002\n\u800c2016\u5e74\u7684\u4e24\u4e2a\u7f51\u7ad9\uff0cXfinity.com\u548cGilt.com\u5219\u66f4\u52a0\u76f8\u4f3c\uff1a\u5b83\u4eec\u7684\u9876\u90e8\u90fd\u6709\u4e00\u4e2a\u83dc\u5355\u680f\uff0c\u4e3b\u8981\u662f\u9ed1\u767d\u76f8\u95f4\u7684\u56fe\u7247\u3002\u8fd9\u4e9b\u9875\u9762\u7684\u6587\u672c\u8981\u5c11\u5f97\u591a\uff0c\u5e76\u4e14\u66f4\u597d\u5730\u5229\u7528\u4e86\u73b0\u6709\u7684\u66f4\u9ad8\u5206\u8fa8\u7387\u7684\u663e\u793a\u5668\u3002\n\u4e00\u65b9\u9762\uff0c\u8ffd\u968f\u6f6e\u6d41\u5728\u5176\u4ed6\u8bbe\u8ba1\u9886\u57df\u662f\u5b8c\u5168\u6b63\u5e38\u7684\uff0c\u6bd4\u5982\u65f6\u5c1a\u6216\u5efa\u7b51\u3002\u5982\u679c\u8bbe\u8ba1\u56e0\u4e3a\u4f7f\u7528\u76f8\u540c\u7684\u5e93\u800c\u53d8\u5f97\u8d8a\u6765\u8d8a\u76f8\u4f3c\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5f88\u53ef\u80fd\u53d8\u5f97\u66f4\u5bb9\u6613\u4e3a\u89c6\u969c\u4eba\u58eb\u6240\u63a5\u53d7\uff0c\u56e0\u4e3a\u6d41\u884c\u7684\u5e93\u901a\u5e38\u6bd4\u4e2a\u522b\u5f00\u53d1\u4eba\u5458\u66f4\u5584\u4e8e\u7b26\u5408\u53ef\u8bbf\u95ee\u6027\u6807\u51c6\u3002\u5b83\u4eec\u4e5f\u66f4\u52a0\u7528\u6237\u53cb\u597d\uff0c\u56e0\u4e3a\u65b0\u8bbf\u95ee\u8005\u4e0d\u9700\u8981\u82b1\u90a3\u4e48\u591a\u65f6\u95f4\u6765\u5b66\u4e60\u5982\u4f55\u6d4f\u89c8\u7f51\u7ad9\u7684\u9875\u9762\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u4e92\u8054\u7f51\u662f\u4e00\u4e2a\u5171\u4eab\u7684\u6587\u5316\u4ea7\u7269\uff0c\u5b83\u7684\u5206\u5e03\u5f0f\u3001\u53bb\u4e2d\u5fc3\u5316\u7684\u6027\u8d28\u662f\u5b83\u7684\u72ec\u7279\u4e4b\u5904\u3002\u968f\u7740\u4e3b\u9875\u548c\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u5e73\u53f0(\u5982Neopets\u548cMySpace)\u9010\u6e10\u6de1\u51fa\u4eba\u4eec\u7684\u8bb0\u5fc6\uff0c\u7f51\u9875\u8bbe\u8ba1\u53ef\u80fd\u4f1a\u5931\u53bb\u5176\u4f5c\u4e3a\u4e00\u79cd\u521b\u9020\u6027\u8868\u73b0\u5f62\u5f0f\u7684\u529b\u91cf\u3002Mozilla\u57fa\u91d1\u4f1a\u8ba4\u4e3a\u6574\u5408\u4e0d\u5229\u4e8e\u4e92\u8054\u7f51\u7684\u201c\u5065\u5eb7\u201d\uff0c\u7f51\u7edc\u7684\u7f8e\u611f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5176\u798f\u7949\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\n\u5982\u679c\u7f51\u7ad9\u56e0\u4e3a\u8bb8\u591a\u4eba\u4f7f\u7528\u76f8\u540c\u7684\u56fe\u4e66\u9986\u800c\u770b\u8d77\u6765\u66f4\u76f8\u4f3c\uff0c\u90a3\u4e48\u7ef4\u62a4\u8fd9\u4e9b\u56fe\u4e66\u9986\u7684\u5927\u578b\u79d1\u6280\u516c\u53f8\u53ef\u80fd\u4f1a\u5728\u4e92\u8054\u7f51\u7684\u89c6\u89c9\u7f8e\u5b66\u4e0a\u83b7\u5f97\u4e0d\u6210\u6bd4\u4f8b\u7684\u6743\u529b\u3002\u867d\u7136\u4e0e\u4fdd\u5bc6\u4ee3\u7801\u76f8\u6bd4\uff0c\u53d1\u5e03\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u7684\u5e93\u53ef\u80fd\u4f1a\u7ed9\u7f51\u7edc\u5e26\u6765\u51c0\u6536\u76ca\uff0c\u4f46\u5927\u578b\u79d1\u6280\u516c\u53f8\u7684\u8bbe\u8ba1\u539f\u5219\u5e76\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u6bcf\u4e2a\u7f51\u7ad9\u3002\n\u8fd9\u79cd\u5de8\u5927\u7684\u529b\u91cf\u662f\u79d1\u6280\u884c\u4e1a\u6574\u5408\u7684\u66f4\u5927\u6545\u4e8b\u7684\u4e00\u90e8\u5206-\u8fd9\u5f53\u7136\u53ef\u80fd\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u539f\u56e0\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u5ba1\u7f8e\u5de9\u56fa\u4e5f\u5e94\u8be5\u5f97\u5230\u4e25\u683c\u7684\u5ba1\u89c6\u3002\n\u559c\u6b22\u4f60\u8bfb\u8fc7\u7684\u5417\uff1f\u60f3\u8981\u66f4\u591a\u5417\uff1f\u6ce8\u518c\u8be5\u5bf9\u8bdd\u7684\u6bcf\u65e5\u65f6\u4e8b\u901a\u8baf\u3002]", "note_en": "Over the past few years,  articles and  blog posts have started to ask some version of the same question: \u201c Why are all websites starting to look the same?\u201d\n These posts usually point out some common design elements, from large images with superimposed text, to  hamburger menus, which are those three horizontal lines that, when clicked, reveal a list of page options to choose from.\n My colleagues Bardia Doosti, David Crandall, Norman Su and I were studying the  history of the web when we started to notice these posts cropping up. None of the authors had done any sort of empirical study, though. It was more of a hunch they had.\n We decided to investigate the claim to see if there were any truth to the notion that websites are starting to look the same and, if so, explore why this has been happening. So we ran  a series of data mining studies that scrutinized nearly 200,000 images across 10,000 websites.\n  It\u2019s virtually impossible to study the entire internet;  there are over a billion websites, with many times as many webpages. Since there\u2019s no list of them all to choose from, performing a random sample of the internet is off the table. Even if it were possible, most people only see a tiny fraction of those websites regularly, so a random sample may not even capture the internet that most people experience.\n We ended up using the websites of  the Russell 1000, the top U.S. businesses by market capitalization, which we hoped would be representative of trends in mainstream, corporate web design. We also studied two other sets of sites, one with Alexa\u2019s 500 most trafficked sites, and another with sites nominated for  Webby Awards.\n Because we were interested in the visual elements of these websites, as data, we used images of their web pages from  the Internet Archive, which regularly preserves websites. And since we wanted to gather quantitative data comparing millions of website pairs, we needed to automate the analysis process.\n To do that, we had to settle on a definition of \u201csimilarity\u201d that we could measure automatically. We investigated both specific attributes like color and layout, as well as attributes learned automatically from data using artificial intelligence.\n For the color and layout attributes, we measured how many pixel-by-pixel edits we would have to make to transform the color scheme or page structure of one website into another. For the AI-generated attributes, we trained a machine learning model to classify images based on which website they came from and measure the attributes the model learned.  Our previous work indicates that this does a reasonably good job at measuring stylistic similarity, but it\u2019s very difficult for humans to understand what attributes the model focused on.\n  We found that across all three metrics \u2013 color, layout and AI-generated attributes \u2013 the average differences between websites peaked between 2008 and 2010 and then decreased between 2010 and 2016. Layout differences decreased the most, declining over 30% in that time frame.\n  These findings confirm the suspicions of web design bloggers that websites are becoming more similar. After showing this trend, we wanted to study our data to see what kinds of specific changes were causing it.\n You might think that these sites are simply copying each other\u2019s code, but code similarity has actually significantly decreased over time. However, the use of software libraries has increased a lot.\n  Libraries feature collections of generic code for common tasks, like resizing a page for mobile devices or making a hamburger menu slide in and out. We looked at which sites had lots of libraries in common and how similar they looked. Sites built with certain libraries \u2013 Bootstrap, FontAwesome and JQuery UI \u2013 tended to look much more similar to each other. This could be because these libraries control page layout and have commonly used default options. Sites that used other libraries, like SWFObject and JQuery Tools, tended look much different, and that might be due to that fact that those libraries allow for more complex, customized pages.\n  Sites with average similarity scores in 2005 tended to look less similar than those with average similarity scores in 2016.\n For example, in 2005, Webshots.com and Yum.com were considered relatively similar, but had somewhat different color schemes and very different layouts. While they both mostly use white, blue and black, the site on the right has a blue background.\n  Two 2016 sites, Xfinity.com and Gilt.com, on the other hand, are even more similar: They both have a menu bar on the top and are primarily white and black with images. These pages have much less text and make better use of the higher resolution monitors that exist now.\n    On the one hand, adhering to trends is totally normal in other realms of design, like fashion or architecture. And if designs are becoming more similar because they\u2019re using the same libraries, that means they\u2019re likely becoming more accessible to the visually impaired, since popular libraries are  generally better at conforming to accessibility standards than individual developers. They\u2019re also more user-friendly, since new visitors won\u2019t have to spend as much time learning how to navigate the site\u2019s pages.\n On the other hand, the internet is a shared cultural artifact, and its distributed, decentralized nature is what makes it unique. As home pages and fully customizable platforms like NeoPets and MySpace fade into memory, web design may lose much of its power as a form of creative expression. The Mozilla Foundation  has argued that consolidation is bad for the \u201chealth\u201d of the internet, and the aesthetics of the web could be seen as one element of its well-being.\n And if sites are looking more similar because many people are using the same libraries, the large tech companies who maintain those libraries may be gaining a disproportionate power over the visual aesthetics of the internet. While publishing libraries that anyone can use is likely a net benefit for the web over keeping code secret, big tech companies\u2019 design principles are not necessarily right for every site.\n This outsize power is part a larger story of consolidation in the tech industry \u2013 one that certainly  could be a cause for concern. We believe aesthetic consolidation should be critically examined as well.\n  [ Like what you\u2019ve read? Want more?  Sign up for The Conversation\u2019s daily newsletter.]", "posttime": "2020-05-12 01:36:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7ad9,starting", "title": "\u662f\u7684\uff0c\u7f51\u7ad9\u5f00\u59cb\u770b\u8d77\u6765\u66f4\u76f8\u4f3c\u4e86\u3002", "title_en": "Yes, websites are starting to look more similar", "transed": 1, "url": "https://theconversation.com/yes-websites-really-are-starting-to-look-more-similar-136484", "via": "", "real_tags": ["\u7f51\u7ad9", "starting"]}, {"category": "", "categoryclass": "", "imagename": "9c3c7938b896622a50428f005ad6fc93.jpg", "infoid": 1001675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ProPublica\u662f\u4e00\u4e2a\u8c03\u67e5\u6ee5\u7528\u6743\u529b\u7684\u975e\u8425\u5229\u6027\u65b0\u95fb\u7f16\u8f91\u5ba4\u3002\u6ce8\u518c\u540e\u5373\u53ef\u6536\u5230\u6211\u4eec\u6700\u91cd\u8981\u7684\u65b0\u95fb\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u4e0e\u603b\u90e8\u8bbe\u5728\u4fc4\u4ea5\u4fc4\u5dde\u626c\u65af\u6566\u7684\u201c\u5546\u4e1a\u6742\u5fd7\u201d\u5408\u4f5c\u64b0\u5199\u7684\uff0c\u540e\u8005\u662fProPublica\u5730\u65b9\u62a5\u9053\u7f51\u7edc\u7684\u6210\u5458\u3002\n2016\u5e7411\u6708\u4e00\u4e2a\u53cd\u5e38\u6e29\u6696\u7684\u65e9\u6668\uff0c\u626c\u65af\u6566\u7684\u5546\u754c\u548c\u653f\u754c\u9886\u8896\u6324\u5728\u8fd9\u5ea7\u4fc4\u4ea5\u4fc4\u5dde\u57ce\u5e02\u957f\u671f\u53d7\u82e6\u7684\u4e1c\u533a\u4e00\u5c0f\u5757\u6742\u4e71\u65e0\u7ae0\u7684\u571f\u5730\u4e0a\u3002\u5728\u51e0\u5341\u5e74\u7684\u8870\u843d\u4e2d\u6447\u6447\u6b32\u5760\uff0c\u8fd9\u4e2a\u5730\u533a\u662f\u5751\u5751\u6d3c\u6d3c\u7684\u8857\u9053\uff0c\u6742\u8349\u4e1b\u751f\u7684\u5730\u5757\uff0c\u8150\u70c2\u7684\u623f\u5c4b\u548c\u514d\u4e0b\u8f66\u7684\u9152\u7c7b\u5e02\u573a\u3002\n\u4f46\u5728\u8fd9\u4e00\u5929\uff0c\u8fd9\u5ea7\u66fe\u7ecf\u662f\u5168\u56fd\u94a2\u94c1\u5236\u9020\u4e2d\u5fc3\uff0c\u73b0\u5728\u662f\u5de5\u4e1a\u8870\u843d\u7684\u5178\u8303\u7684\u57ce\u5e02\uff0c\u6b63\u5728\u5e86\u795d\u4e00\u9879\u65b0\u4e8b\u4e1a\u7684\u7834\u571f\u52a8\u5de5\uff1a\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u81ea\u6211\u51b7\u5374\u7684\u996e\u6599\u7f50\uff1a\u51b0\u9547\u7f50\u5934\u3002\u603b\u90e8\u4f4d\u4e8e\u52a0\u5dde\u7684\u996e\u6599\u516c\u53f8\u7ea6\u745f\u592b\u56fd\u9645\u516c\u53f8(Joseph Co.International)\u66fe\u627f\u8bfa\u6295\u8d442000\u4e07\u7f8e\u5143\u5efa\u7acb\u4e00\u4e2a\u7814\u53d1\u548c\u5236\u9020\u56ed\u533a\uff0c\u5e76\u521b\u9020\u6570\u767e\u4e2a\u65b0\u7684\u5c31\u4e1a\u673a\u4f1a\u3002\u5b83\u7684\u5ea7\u53f3\u94ed\u662f\uff1a\u201c\u51b0\u6cb3\u65f6\u4ee3\u7ed3\u675f\u4e86\uff01\u201d\n\u8eab\u7a7f\u6df1\u8272\u897f\u88c5\uff0c\u6253\u7740\u7c89\u8272\u9886\u5e26\u7684\u516c\u53f8\u8463\u4e8b\u957f\u517c\u9996\u5e2d\u6267\u884c\u5b98\u7c73\u5207\u5c14\u00b7\u7ea6\u745f\u592b(Mitchell Joseph)\u5bf9100\u591a\u540d\u670b\u53cb\u3001\u5bb6\u4eba\u548c\u5e02\u653f\u5e9c\u5b98\u5458\u53d1\u8868\u8bb2\u8bdd\u65f6\u7b11\u5bb9\u6ee1\u9762\u3002\u4ed6\u8bf4\uff0c\u4ed6\u7684\u66fe\u7956\u7236\u4e8e20\u4e16\u7eaa\u521d\u5728\u8fd9\u91cc\u521b\u7acb\u4e86\u661f\u7a7a\u74f6\u88c5\u516c\u53f8\uff0c\u4e4b\u540e\u8be5\u516c\u53f8\u4e8e1971\u5e74\u5173\u95e8\u3002\n\u201c\u8fd9\u662f\u6211\u4eec\u7684\u5723\u5730\uff0c\u201d\u7ea6\u745f\u592b\u8bf4\u3002\u80fd\u591f\u5728\u51e0\u4e4e100\u5e74\u540e\u5728\u540c\u6837\u7684\u7269\u4e1a\u4e0a\u56de\u5f52\uff0c\u5e76\u91c7\u7528\u996e\u6599\u884c\u4e1a\u7684\u9769\u547d\u6027\u6280\u672f\uff0c\u5e76\u5c06\u5176\u5e26\u56de\u626c\u65af\u6566\uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u975e\u5e38\u4ee4\u4eba\u6b23\u6170\u7684\u3002\u201c\u3002\n\u65f6\u4efb\u5e02\u957f\u7ea6\u7ff0\u00b7\u9ea6\u514b\u7eb3\u5229(John McNally)\u548c\u626c\u65af\u6566\u5dde\u7acb\u5927\u5b66(Young Gstown State University)\u6821\u957f\u5409\u59c6\u00b7\u7279\u96f7\u585e\u5c14(Jim Tressel)\u5728\u7ea6\u745f\u592b\u5c06\u94f2\u5b50\u5f00\u8fdb\u83b1\u6069\u5927\u9053(Lane Avenue)\u6cbf\u7ebf\u7684\u4e00\u5757\u8349\u76ae\u65f6\u9f13\u638c\uff0c\u5e76\u6b63\u5f0f\u542f\u52a8\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u5b98\u5458\u4eec\u8868\u793a\uff0c\u8be5\u9879\u76ee\u5c06\u6bcf\u5e74\u751f\u4ea710\u4ebf\u7f50\u3002\u7ea6\u745f\u592b\u5ba3\u5e03\uff1a\u201c\u6211\u4eec\u5c06\u4e3a\u6ce2\u58eb\u987f\u3001\u4f5b\u7f57\u91cc\u8fbe\u3001\u8fbe\u62c9\u65af\u63d0\u4f9b\u4e00\u5207\u670d\u52a1\u3002\u201d", "note_en": "ProPublica is a nonprofit newsroom that investigates abuses of power. Sign up to receive  our biggest stories as soon as they\u2019re published.\n  This article was produced in partnership with The Business Journal, based in Youngstown, Ohio, which is a member of the  ProPublica Local Reporting Network.\n  On an unseasonably warm November morning in 2016, Youngstown\u2019s business and political leaders crowded onto a small, scraggly plot of land on the Ohio city\u2019s long-suffering East Side. Reeling from decades of decline, the area was a patchwork of potholed streets, weeded lots, moldering homes and drive-thru liquor marts.\n  But on this day, the city, once a national center of steel manufacturing and now a poster child for industrial decay, was celebrating the groundbreaking of a new venture: Chill-Can, the world\u2019s first self-chilling beverage can. Joseph Co. International, a California-based beverage company, had pledged to build a $20 million research and manufacturing campus and create hundreds of new jobs. Its motto: \u201cThe Ice Age Is Over!\u201d\n  Dressed in a dark suit and pink tie, Mitchell Joseph, the firm\u2019s chairman and CEO, beamed as he addressed more than 100 friends, family members and city officials. His great-grandfather, he said, had founded the Star Bottling Co. on the site at the turn of the 20th century, before it closed shop in 1971.\n  \u201cIt\u2019s sacred ground to us,\u201d Joseph said. \u201cTo be able to come back after almost 100 years on the same exact property and take technology that is revolutionary in the beverage industry and bring it back to Youngstown is very gratifying to us.\u201d\n  Then-Mayor John McNally and Youngstown State University President Jim Tressel applauded as Joseph drove a shovel into a patch of turf along Lane Avenue and officially kick-started a project that officials said would manufacture 1 billion cans a year. \u201cWe\u2019ll service everything up to Boston, down to Florida, out to Dallas,\u201d Joseph proclaimed.", "posttime": "2020-05-12 01:06:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u94c1\u9508", "title": "\u6323\u624e\u7684\u94c1\u9508\u5e26\u57ce\u5e02\u5c06\u590d\u5174\u5bc4\u6258\u5728\u4e00\u4e2a\u81ea\u51b7\u7684\u996e\u6599\u7f50\u4e0a", "title_en": "A Struggling Rust Belt City Pinned Its Revival on a Self-Chilling Beverage Can", "transed": 1, "url": "https://www.propublica.org/article/youngstown-chill-can", "via": "", "real_tags": ["rust", "\u94c1\u9508"]}, {"category": "", "categoryclass": "", "imagename": "47251e5ac8880b853c679e85d77464ca.jpeg", "infoid": 1001674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u5468\u4e00\u5f00\u59cb\uff0c340\u4e07\u540d\u9ad8\u4e2d\u751f\u5c06\u5750\u5728\u4e66\u684c\u524d-\u4ee5\u53ca\u5728\u6c7d\u8f66\u91cc\u3001\u5367\u5ba4\u5730\u677f\u4e0a\u548c\u4efb\u4f55\u4ed6\u4eec\u80fd\u627e\u5230\u5b89\u9759\u7684\u5730\u65b9-\u53c2\u52a0\u9ad8\u7ea7\u9009\u4fee\u8003\u8bd5\uff0c\u5e0c\u671b\u80fd\u8bc1\u660e\u4ed6\u4eec\u638c\u63e1\u4e86\u4e00\u7cfb\u5217\u5b66\u672f\u79d1\u76ee\u3002\n\u8fd9\u4e9b\u6d4b\u8bd5\u770b\u8d77\u6765\u5c06\u4e0e\u8fc7\u53bb\u51e0\u5e74\u5927\u4e0d\u76f8\u540c\uff0c\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5df2\u7ecf\u5173\u95ed\u4e86\u9ad8\u4e2d\uff0c\u5e76\u4fc3\u4f7f\u8fd0\u884c\u9ad8\u7ea7\u9884\u4fee\u8bfe\u7a0b\u7684\u5927\u5b66\u59d4\u5458\u4f1a\u4e89\u5148\u6050\u540e\u5730\u521b\u5efa\u4e00\u79cd\u65b0\u7684\u8003\u8bd5\u5f62\u5f0f\u3002\n..\u3002", "note_en": "Beginning Monday, 3.4 million high school students will sit down at desks\u2014and in cars, on bedroom floors and anywhere they can find some quiet\u2014and take Advanced Placement exams with the hopes of proving mastery of a range of academic subjects.\n  The tests will look much different than in years past, as the coronavirus pandemic has closed high schools and sent the College Board, which runs the Advanced Placement program, scrambling to create a new format.\n...", "posttime": "2020-05-12 00:52:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "coronavirus,\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,\u65f6\u4ee3,\u8003\u8bd5", "title": "\u51a0\u72b6\u75c5\u6bd2\u65f6\u4ee3\u7684\u7f8e\u8054\u793e\u8003\u8bd5\uff1a\u5728\u7ebf\uff0c\u65f6\u957f\u53ea\u670915\u523045\u5206\u949f", "title_en": "A.P. Exams in the Coronavirus Era: Online, and Just 15 To 45 Minutes Long", "transed": 1, "url": "https://www.wsj.com/articles/a-p-exams-in-the-coronavirus-era-online-and-just-15-to-45-minutes-long-11589208916", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u65f6\u4ee3", "\u8003\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001673, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7@stripestatus\u63a8\u7279\u9988\u9001\u63d0\u4f9b\u7684\u66f4\u65b0-\u8bf7\u5173\u6ce8\u6211\u4eec\u7684\u7f51\u7ad9\uff01", "note_en": "Updates provided via the  @stripestatus Twitter feed\u2014follow us there!", "posttime": "2020-05-12 00:52:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6761\u5e26,stripe,\u5173\u6ce8", "title": "\u6761\u5e26\u7684API\u5df2\u5173\u95ed", "title_en": "Stripe's API Is Down", "transed": 1, "url": "http://status.stripe.com?down=now", "via": "", "real_tags": ["\u6761\u5e26", "stripe", "\u5173\u6ce8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001672, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63a8\u8350\u9644\u4ef6\uff1aUSB\u7535\u7f06\uff0c\u5f15\u811a24x1(2)\uff0c8MB pSRAM\uff0cUSB\u4e3b\u673a\u7535\u7f06Teensy 4.1\u57282.4 x 0.7\u82f1\u5bf8\u7684\u5916\u5f62\u4e2d\u5177\u6709\u6700\u5feb\u7684\u5fae\u63a7\u5236\u5668\u548c\u6269\u5c55\u7684\u5f3a\u5927\u5916\u56f4\u8bbe\u5907\u96c6\u3002\nTeensy 4.1\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u5c06\u6240\u6709\u901a\u7528I/O\u5f15\u811a\u5e26\u5230\u5916\u90e8\u8fb9\u7f18\u4e0a\u3002\u8981\u4f7f\u7528\u4ee5\u592a\u7f51\u7aef\u53e3\uff0c\u9700\u8981\u8fde\u63a5\u78c1\u6781\u63d2\u5b54\u548c\u7535\u5bb9\u5668\u3002\u76ee\u524d\u8fd9\u53ea\u662f\u4e00\u4e2a\u4f7f\u7528OSH\u516c\u56ed\u5171\u4eab\u7535\u8def\u677f\u7684DIY\u9879\u76ee\u3002PJRC\u8ba1\u5212\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u5c06\u5176\u4f5c\u4e3aDIY\u5de5\u5177\u5305\u63d0\u4f9b\u3002\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e9b\u90e8\u4ef6\u6765\u6784\u5efa\u4ee5\u592a\u7f51\u8fde\u63a5\u30021\u4e2a\u4ee5\u592a\u7f51Magjack RB1-125BAG1A\uff0cMouser950-RB1-125BAG1A\uff0cDigikey1278-1011-ND2\u63a5\u5934\uff0c3x2\uff0c2 mm\u95f4\u8dddDigikey1849-1000-ND2\u63d2\u69fd\uff0c3x2\uff0c2 mm\u95f4\u8dddAmhenon FCI 89361-706LF\uff0cDigikey609-3139-ND1\u5e26\u72b6\u7535\u7f06\uff0c3\u81f36\u82f1\u5bf8Digikey HF06S-5-ND1\u7535\u5bb9\u5668\uff0c0.1\u3002\nTeensy 4.1\u7684\u5e95\u90e8\u6709\u710a\u63a52\u4e2a\u5185\u5b58\u82af\u7247\u7684\u4f4d\u7f6e\u3002\u8f83\u5c0f\u7684\u4f4d\u7f6e\u7528\u4e8e\u653e\u7f6epSRAM\u82af\u7247\u3002\u8f83\u957f\u7684\u4f4d\u7f6e\u7528\u4e8e\u95ea\u5b58\u3002Teensy 4.1&#39\uff1b\u7684USB\u4e3b\u673a\u7aef\u53e3\u5141\u8bb8\u60a8\u8fde\u63a5USB\u8bbe\u5907\uff0c\u5982\u952e\u76d8\u548cMIDI\u4e50\u5668\u3002\u9700\u89815\u9488\u63a5\u5934\u548cUSB\u4e3b\u673a\u7535\u7f06\u624d\u80fd\u63d2\u5165USB\u8bbe\u5907\u3002\u5982\u679c\u9700\u8981\u591a\u4e2a\u8bbe\u5907\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528USB\u96c6\u7ebf\u5668\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605USBHost_t36\u793a\u4f8b\u3002", "note_en": "Recommended Accessories: USB Cable, Pins 24x1 (2), 8MB PSRAM, USB Host Cable Teensy 4.1 features the fastest micocontroller and an expanded set ofpowerful peripherals in a 2.4 by 0.7 inch form factor.\n Teensy 4.1 is designed to bring all general purpose I/O pins tobreadboard friendly pads on the outside edges. To use the Ethernet port, a magjack and capacitor need to be connected. This is currently available only as a DIY project using this OSH Park Shared Circuit Board.PJRC is planning to offer this as a DIY kit in the near future. These parts are recommended to build the Ethenet connection. 1 Ethernet Magjack RB1-125BAG1A,  Mouser 950-RB1-125BAG1A,  Digikey 1278-1011-ND2 Header, 3x2, 2mm pitch  Digikey 1849-1000-ND2 Socket, 3x2, 2mm pitch Amphenol FCI 89361-706LF,  Digikey 609-3139-ND1 Ribbon Cable, 3 to 6 inch  Digikey HF06S-5-ND1 Capacitor, 0.1uF, 8051 Capacitor, 1uF, 805 probably not needed1 Capacitor, 1nF, 805 optional, should be high voltage rated if used1 Resistor, 1M optional1 Circuit Board  OSH Park Shared PCB\n The bottom side of Teensy 4.1 has locations to solder 2 memory chips.  The smaller location is meant for a  PSRAM chip. Thelarger location is intended for flash memory. Teensy 4.1&#39;s USB Host port allow you to connect USB devices, like keyboardsand MIDI musical instruments. A 5 pin header and a USB Host cable are needed tobe able to plug in a USB device. USB hubs may be used if more than 1 device is needed. See the USBHost_t36examples for details.", "posttime": "2020-05-12 00:51:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,mb,ethernet,usb", "title": "Teensy 4.1\u53d1\u5e03\uff1a100 Mbps\u4ee5\u592a\u7f51\u3001\u9ad8\u901fUSB\u30018 MB\u95ea\u5b58", "title_en": "Teensy 4.1 Released: 100 Mbps Ethernet, High-Speed USB, 8 MB Flash", "transed": 1, "url": "https://www.pjrc.com/store/teensy41.html", "via": "", "real_tags": ["\u53d1\u5e03", "mb", "ethernet", "usb"]}, {"category": "", "categoryclass": "", "imagename": "1f3b45f848a35b2102c615aea9f0e239.jpg", "infoid": 1001671, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b27\u6d32\u5730\u533a\u533a\u57df\u4e92\u8054\u7f51\u6ce8\u518c\u4e2d\u5fc3(RIPE NCC)\u6b63\u5728\u4e3e\u884c\u9009\u4e3e\uff0c\u4ee5\u586b\u8865\u5176\u6267\u884c\u8463\u4e8b\u4f1a\u7684\u4e09\u4e2a\u5e2d\u4f4d\u3002\u9009\u4e3e\u5c06\u4e8e2020\u5e745\u670813\u65e5\u81f315\u65e5\u5728RIPE NCC\u7684\u5e74\u5ea6\u80a1\u4e1c\u5927\u4f1a\u4e0a\u4e3e\u884c\uff0c\u7ed3\u679c\u5c06\u4e8e5\u670815\u65e5\u4e0a\u534810\u70b945\u5206\u73b0\u573a\u76f4\u64ad\u3002\n\u5728\u6210\u719f\u7684NCC\u6267\u884c\u8463\u4e8b\u4f1a\u4e09\u4e2a\u7a7a\u7f3a\u5e2d\u4f4d\u7684\u5019\u9009\u4eba\u4e2d\uff0c\u7ecf\u8425\u7740\u4e00\u5bb6\u540d\u4e3aNetstyle\u7684\u7f51\u7edc\u516c\u53f8\u7684\u57c3\u62c9\u5fb7\u00b7\u79d1\u6069(Elad Cohen)\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\u4e92\u8054\u7f51\u8c03\u67e5\u5458Ron Guilmette\u5c06Netstyle\u548c\u79d1\u6069\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e0e\u5357\u975e\u4e92\u8054\u7f51\u534f\u8bae\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u53ef\u7591\u6d3b\u52a8\u8054\u7cfb\u8d77\u6765\u3002\u8fd9\u5305\u62ec\u5c5e\u4e8eSasol\u7684IP\u5730\u5740\u5757\uff0c\u4ee5\u53ca\u4f3c\u4e4e\u5c5e\u4e8eTredcor\u3001AfrOx\u3001Woolworths\u548cSITA\u7684\u5757\u3002\n\u533a\u57df\u4e92\u8054\u7f51\u6ce8\u518c\u673a\u6784\uff0c\u5982RIPE\u7f51\u7edc\u534f\u8c03\u4e2d\u5fc3\uff0c\u5411\u5176\u670d\u52a1\u533a\u57df\u5185\u7684\u6210\u5458\u63d0\u4f9b\u4e92\u8054\u7f51\u8d44\u6e90\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u62ec\u7f51\u9645\u534f\u8bae(IP)\u5730\u5740\u3002\n\u5728\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0cMyBroadband\u4e0eGuilmette\u5408\u4f5c\u8c03\u67e5\u4e86\u5927\u91cf\u6709\u4ef7\u503c\u7684\u4e92\u8054\u7f51\u534f\u8bae(IP)\u5730\u5740\u88ab\u660e\u663e\u7a83\u53d6\u548c\u5360\u7528\u7684\u4e8b\u4ef6\u3002\n\u8c03\u67e5\u7684\u4e00\u90e8\u5206\u63ed\u9732\u4e86\u975e\u6d32\u5730\u533a\u4e92\u8054\u7f51\u6ce8\u518c\u4e2d\u5fc3(AFRINIC)\u7684\u4e00\u540d\u5185\u90e8\u4eba\u5458\u5982\u4f55\u4eceAFRINIC\u7684\u7a7a\u95f2\u5730\u5740\u6c60\u4e2d\u632a\u7528\u5927\u91cfIP\u5730\u5740\u5757\u3002\n\u6b64\u7a7a\u95f2\u6c60\u662fAFRINIC\u6258\u7ba1\u7684IP\u5730\u5740\u7a7a\u95f4\uff0c\u7528\u4e8e\u6839\u636e\u5176\u89c4\u5219\u5411\u5408\u6cd5\u6709\u8d44\u683c\u83b7\u5f97IP\u5730\u5740\u7a7a\u95f4\u7684\u4e2a\u4eba\u6216\u7ec4\u7ec7\u53d1\u653e\u3002\nAFRINIC\u5185\u90e8\u81f3\u5c11\u6709\u4e00\u4e2a\u4eba\u81ea\u5df1\u62ff\u5230\u4e86\u8fd9\u4e9b\u672a\u5206\u914d\u7684IP\u5730\u5740\uff0c\u5e76\u5728\u9ed1\u5e02\u4e0a\u51fa\u552e\u3002\n\u81ea\u4ece\u6211\u4eec\u7684\u62a5\u544a\u53d1\u8868\u4ee5\u6765\uff0cAFRINIC\u7acb\u5373\u89e3\u96c7\u4e86\u6709\u95ee\u9898\u7684\u5185\u90e8\u4eba\u58eb\uff0c\u5e76\u6536\u56de\u4e86\u4ece\u5176\u7a7a\u95f2\u6c60\u4e2d\u62ff\u8d70\u7684IP\u5730\u5740\u5757\u3002\n\u6211\u4eec\u8c03\u67e5\u7684\u53e6\u4e00\u90e8\u5206\u6d89\u53ca\u79f0\u4e3a\u201c\u4f20\u7edf\u201dIP\u5730\u5740\u5757\u7684\u5730\u5740\u5206\u914d\u3002\n\u8fd9\u4e9b\u5730\u5740\u5757\u7279\u522b\u6709\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u6536\u53d6AFRINIC\u7684\u5e74\u8d39\uff0c\u56e0\u4e3a\u5728AFRINIC\u51fa\u73b0\u4e4b\u524d\uff0c\u5b83\u4eec\u88ab\u5206\u914d\u7ed9\u4e92\u8054\u7f51\u65e9\u671f\u7684\u516c\u53f8\u3002\n\u5728\u68b3\u7406\u975e\u6d32\u7684IP\u5730\u5740\u7a7a\u95f4\u65f6\uff0cGuilmette\u53d1\u73b0Cohen\u7684Netstyle\u7535\u5b50\u90ae\u4ef6\u5730\u5740([\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4])\u51fa\u73b0\u5728\u4ee5\u4e0bIP\u5730\u5740\u5757\u7684Internet\u8def\u7531\u6ce8\u518c\u8868(IRR)\u8bb0\u5f55\u4e2d\uff1a\n\u5f53\u88ab\u95ee\u53caInfoplan\u3001AECI\u3001Sasol\u3001Tredcor\u548cWooltru\u533a\u5757\u65f6\uff0c\u79d1\u6069\u8868\u793a\uff0c\u4ed6\u4eec(Netstyle)\u662f\u6240\u6709\u8fd9\u4e9b\u533a\u5757\u7684\u6240\u6709\u8005\uff0c\u9664\u4e86Sasol\u533a\u5757\u3002\u4ed6\u8fd8\u8bf4\uff0c\u4ed6\u540e\u6094\u66fe\u7ecf\u4e70\u8fc7\u5b83\u4eec\u3002\n\u79d1\u6069\u8bf4\uff0c\u4ed6\u901a\u8fc7\u4e00\u5bb6\u7f8e\u56fd\u7ecf\u7eaa\u4eba\u4e3a\u8fd9\u4e9b\u533a\u5757\u652f\u4ed8\u4e86\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u4f46\u6ca1\u6709\u8bf4\u660e\u4ed6\u4f7f\u7528\u7684\u662f\u54ea\u5bb6\u7ecf\u7eaa\u4eba\u3002\n\u5f53\u88ab\u95ee\u53ca\u6709\u5173\u8d2d\u4e70\u7684\u6cd5\u5f8b\u6587\u4ef6\u65f6\uff0c\u4ed6\u8bf4\uff1a\u201c\u6cd5\u5f8b\u6587\u4ef6\u4e0e\u76f8\u5173\u7684\u7f8e\u56fd\u5f8b\u5e08\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5c06\u5728\u4efb\u4f55\u6cd5\u5ead\u4e0a\u51fa\u793a\u3002\u201d\n\u79d1\u6069\u62d2\u7edd\u56de\u7b54\u4e3a\u4ec0\u4e48\u4ed6\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4f1a\u51fa\u73b0\u5728\u8428\u7d22\u5c14\u56de\u6536\u7684\u4e00\u5757IP\u5730\u5740\u7684IRR\u8bb0\u5f55\u4e2d\u3002\n\u4e0b\u8868\u603b\u7ed3\u4e86Guilmette\u8c03\u67e5\u8ba4\u5b9a\u4e3a\u201c\u88ab\u76d7\u201d\u7684\u6240\u6709\u9057\u7559IP\u5730\u5740\u5757\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cGuilmette\u9009\u62e9\u4f7f\u7528\u201c\u88ab\u76d7\u201d\u4e00\u8bcd\uff0c\u4e13\u95e8\u6307\u5b58\u50a8\u5728AFRINIC\u6570\u636e\u5e93\u4e2d\u7684IP\u5730\u5740\u5757\u7684WHOIS\u8bb0\u5f55\u88ab\u4ee5\u53ef\u7591\u65b9\u5f0f\u64cd\u7eb5\u7684\u60c5\u51b5\u3002\n\u8fd9\u5305\u62ec\u59d3\u540d\u3001\u5730\u5740\u548c\u8054\u7cfb\u65b9\u5f0f\u7684\u6539\u53d8\uff0c\u5409\u5c14\u6885\u7279\u79f0\u8fd9\u79cd\u65b9\u5f0f\u201c\u660e\u663e\u662f\u5047\u7684\u201d\u3002\n\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u7684\u8bb0\u5f55\u5c31\u50cf\u4e92\u8054\u7f51\u7684\u5730\u5951\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u597d\u7684\u6f14\u5458\u80fd\u591f\u627e\u5230\u64cd\u7eb5IP\u5730\u5740\u5757\u7684WHOIS\u8bb0\u5f55\u7684\u65b9\u6cd5\uff0c\u5c31\u50cf\u80fd\u591f\u95ef\u5165\u5730\u5951\u529e\u516c\u5ba4\uff0c\u6539\u53d8\u8d35\u91cd\u623f\u4ea7\u7684\u5730\u5951\u4fe1\u606f\u4e00\u6837\u3002\nAFRINIC\u5c1a\u672a\u56de\u7b54\u6709\u5173\u5982\u4f55\u5bf9\u8fd9\u4e9b\u4f20\u7edfIP\u5730\u5740\u5757\u8fdb\u884c\u66f4\u6539\u7684\u95ee\u9898\u3002\n\u5728\u66f4\u65b0\u4e0b\u8868\u4e2d\u7684\u4fe1\u606f\u65f6\uff0cNetstyle\u548cCohen\u8fde\u63a5\u5230\u4e86\u5176\u4ed6\u51e0\u4e2a\u5757\u3002\nNetstyle\u5f53\u524d\u8def\u7531\u7684IP\u5730\u5740\u662f\u5c5e\u4e8e\u9644\u5c5e\u8ba1\u7b97\u670d\u52a1\u516c\u53f8(160.116.0.0/16)\u7684\u5730\u5740\u5757\u7684\u4e00\u90e8\u5206\u3002\n\u5df2\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u201c[EMAIL_PROTECTED]\u201d\u5c06IRR\u5bf9\u8c61\u6dfb\u52a0\u5230\u5c5e\u4e8eSafren Computer Services\u7684\u5757\u7684AFRINIC\u6570\u636e\u5e93\u4e2d\u3002\u8be5\u6761\u76ee\u6700\u540e\u4e00\u6b21\u4fee\u6539\u662f\u57282020\u5e741\u670826\u65e5\u3002MyBroadband\u4e4b\u524d\u516c\u5e03\u7684\u6587\u4ef6\u5c06\u79d1\u6069\u4e0e\u201cAfri Holdings Ltd\u201d\u7684\u540d\u5b57\u8054\u7cfb\u8d77\u6765\u3002\n\u7c7b\u4f3c\u5730\uff0c\u5728RADb\u6570\u636e\u5e93\u4e2d\u4f7f\u7528\u201c[Email.Protected]\u201d\u5730\u5740\u4e3aAgrihold\u6dfb\u52a0\u4e86\u4e00\u4e2aIRR\u5bf9\u8c61\u3002\u8be5\u6761\u76ee\u6700\u540e\u4e00\u6b21\u4fee\u6539\u662f\u57282020\u5e741\u67083\u65e5\u3002\nIP\u5730\u5740\u5757\u7684\u4f30\u8ba1\u503c\u662f\u4f7f\u75281\u7f8e\u5143\u515118.79\u5170\u7279\u548c\u6bcf\u4e2aIP\u5730\u574020\u7f8e\u5143\u7684\u6c47\u7387\u8ba1\u7b97\u7684\u3002\u8fd9\u4e00\u4ef7\u683c\u662f\u57fa\u4e8e\u4e1a\u5185\u6d88\u606f\u4eba\u58eb\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u8868\u793a\uff0c20\u7f8e\u5143\u7684\u5e73\u5747\u4ef7\u683c\u662f\u5408\u7406\u7684\uff0c\u4f46\u4ef7\u683c\u53ef\u80fd\u4f1a\u66f4\u9ad8\uff0c\u4e5f\u53ef\u80fd\u66f4\u4f4e\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60c5\u51b5\u3002\n\n\u79d1\u6069\u662f\u4e89\u593a\u6210\u719f\u7684NCC\u6267\u884c\u8463\u4e8b\u4f1a\u4e09\u4e2a\u7a7a\u7f3a\u5e2d\u4f4d\u7684\u4e5d\u540d\u5019\u9009\u4eba\u4e4b\u4e00\u3002\u4ed6\u63d0\u540d\u4e86\u81ea\u5df1\uff0c\u5e76\u83b7\u5f97\u4e86\u7b2c\u4e8c\u9ad8\u7684\u652f\u6301\u63d0\u540d\u3002\n\u652f\u6301\u63d0\u540d\u6392\u540d\u524d\u4e94\u7684\u5019\u9009\u4eba\u662f\u8c22\u5c14\u76d6\u00b7\u8fc8\u7d22\u591a\u592b(35)\uff0c\u57c3\u62c9\u5fb7\u00b7\u79d1\u6069(16)\uff0c\u96f7\u8499\u5fb7\u00b7\u6770\u6ed5(16)\uff0c\u4e54\u8fea\u00b7\u4f69\u83b1\u7279\u00b7\u9a6c\u4e01\u5185\u65af(13)\u548c\u5a01\u5ec9\u00b7\u897f\u5c14\u7ef4\u65af\u7279(11)\u3002\n\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u6392\u540d\u4ec5\u4f9b\u53c2\u8003\u3002\u652f\u6301\u63d0\u540d\u4e0d\u4e00\u5b9a\u51b3\u5b9a\u54ea\u4e9b\u5019\u9009\u4eba\u5c06\u5f53\u9009\u3002\nGuilmette\u5df2\u5c06Maikel Uerling\u4e0e\u5357\u975e\u4f20\u7edfIP\u5730\u5740\u5757\u4e0a\u7684\u53ef\u7591\u6d3b\u52a8\u8054\u7cfb\u8d77\u6765\uff0c\u8fd9\u4e00\u70b9\u5728MyBroadband\u7684\u65e9\u4e9b\u65f6\u5019\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\u53d1\u8868\u3002\n\u7f51\u7edc\u4e13\u7528SAS\u3001Novogara\u548cFiberXpress\u90fd\u5728\u4e0a\u8868\u4e2d\u5217\u51fa\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u88ab\u76d7IP\u5730\u5740\u5757\u4e2d\u901a\u544a\u8def\u7531\uff0c\u5305\u62ec\u8fde\u63a5\u5230Netstyle\u548cCohen\u7684IP\u5730\u5740\u5757\u3002\n\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u63a5\u53d7\u53d1\u5f80Guilmette\u8ba4\u5b9a\u4e3a\u88ab\u76d7\u7684IP\u5730\u5740\u7684\u7f51\u7edc\u6d41\u91cf\u3002\n\u4e00\u4e2a\u4f8b\u5b50\u662fInfoplan\u5757(196.16.0.0/14)\uff0c\u5176\u4e2dCohen\u7684Netstyle\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5217\u5728Internet Routing Registry\u6761\u76ee\u4e2d\u3002\u7f51\u7edc\u4e13\u7528SAS\u3001Novogara\u548cFiberXpress\u90fd\u4e3aInfoplan\u5757\u4e2d\u5305\u542b\u7684IP\u5730\u5740\u5b50\u5206\u914d\u901a\u544a\u8def\u7531\u3002\n\u57c3\u62c9\u5fb7\u00b7\u79d1\u6069(Elad Cohen)\u88ab\u8981\u6c42\u5c31\u4ed6\u52a0\u5165RIPE NCC\u6267\u884c\u8463\u4e8b\u4f1a\u7684\u6d3b\u52a8\u53d1\u8868\u8bc4\u8bba\u3002\u4ed6\u62d2\u7edd\u56de\u7b54\u95ee\u9898\u3002\n\u5fc5\u987b\u6307\u51fa\u7684\u662f\uff0c\u79d1\u6069\u5728\u672c\u62a5\u544a\u4e2d\u6ca1\u6709\u53d7\u5230\u4efb\u4f55\u975e\u6cd5\u6d3b\u52a8\u7684\u6307\u63a7\u3002\nMyBroadband\u8fd8\u5411RIPE NCC\u8be2\u95ee\u4e86\u79d1\u6069\u7684\u6267\u884c\u8463\u4e8b\u4f1a\u5019\u9009\u4eba\u8d44\u683c\u3002\u8be5\u7ec4\u7ec7\u8bc1\u5b9e\uff0c\u5b83\u77e5\u9053\u9488\u5bf9\u4ed6\u7684\u6307\u63a7\u3002\n\u201c\u6210\u719f\u7684NCC\u662f\u6839\u636e\u8377\u5170\u6cd5\u5f8b\u6210\u7acb\u7684\u4f1a\u5458\u534f\u4f1a\u3002\u6839\u636e\u6211\u4eec\u7684\u89c4\u5b9a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u88ab\u652f\u6301\u4f5c\u4e3a\u6267\u884c\u5c40\u9009\u4e3e\u7684\u5019\u9009\u4eba\uff0c\u201c\u8be5\u7ec4\u7ec7\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u8868\u793a\u3002\n\u201c\u6bcf\u4e2a\u6210\u5458\u90fd\u6709\u6743\u63d0\u540d(\u5e76\u4e14)\u6bcf\u4e2a\u6210\u5458\u53ea\u80fd\u652f\u6301\u4e00\u4e2a\u88ab\u63d0\u540d\u4eba\u4e00\u6b21\u3002\u201d", "note_en": "The Regional Internet Registry for the European region, RIPE NCC, is holding elections to fill three seats on its executive board. The elections will be held at RIPE NCC\u2019s annual general meeting on 13-15 May 2020, with the results live streamed at 10:45 on 15 May.\n Among the candidates for the three seats available on the RIPE NCC Executive Board is Elad Cohen, who operates a networking company called Netstyle.\n Internet investigator Ron Guilmette has linked\u00a0Netstyle and Cohen\u2019s e-mail address to   suspicious activity in the South African Internet Protocol address space. This included a block of IP addresses that belongs to Sasol, and blocks which appear to belong to Tredcor, Afrox, Woolworths, and SITA.\n Regional Internet Registries, like the RIPE Network Coordination Centre, provide Internet resources to their members in their service region. These resources include Internet Protocol (IP) addresses.\n  Over several months, MyBroadband worked with Guilmette to look into the apparent theft of, and squatting on, vast swaths of valuable Internet Protocol (IP) addresses.\n One portion of the investigation uncovered how an insider at Africa\u2019s Regional Internet Registry, AFRINIC,   misappropriated large IP address blocks from AFRINIC\u2019s free pool of addresses.\n This free pool is the IP address space that AFRINIC holds in trust to give out to people or organisations that legitimately qualify to receive IP address space under its rules.\n At least one person inside AFRINIC helped themselves to these unassigned IP addresses and sold them on the black market.\n Since publishing our report, AFRINIC has summarily dismissed the insider in question and has   taken back the IP address blocks that were taken from its free pool.\n  Another part of our investigation involved address assignments referred to as \u201clegacy\u201d IP address blocks.\n These blocks of addresses are particularly valuable because they do not attract AFRINIC\u2019s annual fees, as they were assigned to companies in the early days of the Internet, before AFRINIC existed.\n While combing through Africa\u2019s IP address space, Guilmette discovered that Cohen\u2019s Netstyle e-mail address (  [email\u00a0protected]) appeared in the Internet Routing Registry (IRR) records for the following IP address blocks:\n  When queried about the Infoplan, AECI, Sasol, Tredcor, and Wooltru blocks, Cohen stated that they (Netstyle) are the owners of all of those ranges, except the Sasol block. He also said that he regrets ever buying them.\n Cohen said he paid millions of US dollars for the blocks via a US-based broker, but did not state which broker he used.\n When asked for the legal documentation regarding the purchases, he said: \u201cThe legal documents are with the USA lawyer involved, we will show them in any court.\u201d\n Cohen declined to answer questions about why his e-mail address appeared in an IRR record for a block of IP addresses which Sasol has reclaimed.\n  The table below summarises all of the legacy IP address blocks which Guilmette\u2019s investigation identified as \u201cstolen\u201d.\n In this context, Guilmette chose to use the term \u201cstolen\u201d to specifically refer to a situation where the WHOIS records of an IP address block, stored in AFRINIC\u2019s database, had been manipulated in a suspicious way.\n This includes names, addresses, and contact information being changed in ways which Guilmette described as \u201cobviously fake\u201d.\n WHOIS records are like the title deeds of the Internet. If a bad actor can find a way to manipulate the WHOIS record of an IP address block, it would be like being able to break into the deeds office and change the information on the title deeds of valuable property.\n AFRINIC has yet to answer questions on how the changes to these legacy IP address blocks were made.\n While updating the information in the table below, Netstyle and Cohen were connected to a few other blocks.\n Netstyle is currently routing IP addresses that are part of a block which belonged to a company called Affiliated Computing Services (160.116.0.0/16).\n An IRR object was added to the AFRINIC database for the block belonging to Safren Computer Services using the e-mail address \u201c [email\u00a0protected]\u201d. The entry was last modified on 26 January 2020. Documents   previously published by MyBroadband link Cohen to the name \u201cAfri Holdings Ltd\u201d.\n Similarly, an IRR object was added for Agrihold in the RADb database using the \u201c [email\u00a0protected]\u201d address. The entry was last modified on 3 January 2020.\n The estimated value of a block of IP addresses was calculated using an exchange rate of R18.79 per USD and a price of $20 per IP address. The price is based on feedback from industry sources who have indicated that $20 is a reasonable average to work with, but that prices can be higher or lower depending on circumstances.\n \n  Cohen is one of   nine candidates contending for the three available seats on the RIPE NCC Executive Board. He nominated himself and he is also tied for the second-highest number of support nominations received.\n The top five candidates by   support nominations received are Sergey Myasoedov (35), Elad Cohen (16), Raymond Jetten (16), Jordi Palet Martinez (13), and William Sylvester (11).\n It should be noted that this ranking is given for interest only. Support nominations do not necessarily determine which candidates will be voted in.\n    Guilmette has connected Maikel Uerlings to suspicious activity on South African legacy IP address blocks, as published in   an earlier report on MyBroadband.\n Network Dedicated SAS, Novogara, and FiberXpress all advertise routes in one or more of the stolen IP address blocks listed in the table above, including ones connected to Netstyle and Cohen.\n This means that they accept network traffic destined for IP addresses which Guilmette has identified as stolen.\n One example is the Infoplan block (196.16.0.0/14), where Cohen\u2019s Netstyle e-mail address is listed in the Internet Routing Registry entry. Network Dedicated SAS, Novogara, and FiberXpress all advertise routes for IP address sub-allocations contained in the Infoplan block.\n  Elad Cohen was asked for comment regarding his campaign to join the RIPE NCC Executive Board. He declined to answer questions.\n It must be noted that Cohen is not being accused of any illegal activity in this report.\n  MyBroadband also asked RIPE NCC about Cohen\u2019s candidacy for the Executive Board. The organisation confirmed that it was aware of the allegations against him.\n \u201cThe RIPE NCC is a membership association under Dutch law. According to our rules, anyone can be supported as a candidate for the Executive Board elections,\u201d a spokesperson for the organisation stated.\n \u201cEach member is entitled to make nominations [and] each member can support a nominee only once.\u201d", "posttime": "2020-05-12 00:34:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u7ec7,ip,\u5730\u5740", "title": "\u8fde\u63a5\u5230IP\u5730\u5740\u62a2\u52ab\u6848\u7684MAN\u6b63\u5728\u7ade\u9009\u6b27\u6d32\u77e5\u8bc6\u4ea7\u6743\u7ec4\u7ec7\u7684\u804c\u4f4d", "title_en": "Man connected to IP address heist running for position at European IP org", "transed": 1, "url": "https://mybroadband.co.za/news/internet/350973-man-connected-to-african-ip-address-heist-running-for-board-position-at-european-ip-address-organisation.html", "via": "", "real_tags": ["\u7ec4\u7ec7", "ip", "\u5730\u5740"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001670, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684\u73af\u5883\u53d8\u91cf\u652f\u6301\uff1a\u5185\u7f6e\u5bf9.env\u548cNEXT_PUBLIC_PREFIX\u7684\u652f\u6301\uff0c\u5982CRA\u4e2d\u6240\u793a\u3002\n\u6539\u8fdb\u7684\u5185\u7f6e\u83b7\u53d6\u652f\u6301\uff1a\u5bf9\u4e8eNode.js\u548c\u6240\u6709\u6d4f\u89c8\u5668(\u6784\u5efa\u548c\u8fd0\u884c\u65f6)\uff0c\u653e\u5f03\u8282\u70b9\u83b7\u53d6\u548c\u540c\u6784\u83b7\u53d6\u5bfc\u5165\uff0c\u8f6c\u800c\u4f7f\u7528\u5185\u7f6e\u83b7\u53d6\u591a\u8fb9\u5f62\u586b\u5145\u3002\n\u96c6\u6210\u7684Web Vitals\u62a5\u544a\uff1a\u6355\u83b7\u63a8\u52a8\u706f\u5854\u5f97\u5206\u7684\u6307\u6807\uff0c\u4f46\u8981\u4ece\u60a8\u7684\u5b9e\u9645\u6d41\u91cf\u4e2d\u83b7\u53d6\u3002\n\u5feb\u901f\u5237\u65b0\u662f\u4e00\u79cd\u5168\u65b0\u7684\u70ed\u91cd\u65b0\u52a0\u8f7d\u4f53\u9a8c\uff0c\u53ef\u4e3a\u60a8\u63d0\u4f9b\u5bf9Reaction\u7ec4\u4ef6\u6240\u505a\u7f16\u8f91\u7684\u5373\u65f6\u53cd\u9988\u3002\u73b0\u5728\uff0c\u5bf9\u4e8eNext.js 9.4\u6216\u66f4\u9ad8\u7248\u672c\u4e0a\u7684\u6240\u6709\u9879\u76ee\uff0c\u5b83\u73b0\u5728\u90fd\u662f\u9ed8\u8ba4\u542f\u7528\u7684\u3002\n\u70ed\u91cd\u65b0\u52a0\u8f7d\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4f46\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u5b83\u592a\u8106\u5f31\u4e86\uff0c\u65e0\u6cd5\u5728\u60a8\u7684\u5de5\u4f5c\u6d41\u4e2d\u9ed8\u8ba4\u542f\u7528\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cNext.js\u4ee5\u524d\u5b9e\u73b0\u4e86\u4e00\u79cd\u7c97\u7565\u7684\u70ed\u91cd\u65b0\u52a0\u8f7d\u5f62\u5f0f\uff0c\u5b83\u5c06\u91cd\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u72b6\u6001\u3002\n\u65e7\u7684\u70ed\u91cd\u65b0\u52a0\u8f7d\u5b9e\u73b0\u5bf9\u7f16\u8bd1\u6216\u8fd0\u884c\u65f6\u9519\u8bef\u6ca1\u6709\u5f39\u6027\uff0c\u5982\u679c\u60a8\u5728\u7f16\u8f91CSS\u6216JavaScript\u65f6\u8f93\u5165\u9519\u8bef\uff0c\u5219\u4f1a\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u5168\u91cd\u65b0\u52a0\u8f7d\u3002\u8fd9\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6253\u4e71\u4e86\u4f60\u7684\u601d\u8def\u3002\nFAST Refresh\u6df1\u5ea6\u96c6\u6210\u5230Reaction\u672c\u8eab(\u901a\u8fc7Reaction Refresh)\uff0c\u5141\u8bb8Next.js\u5bf9Reaction\u7ec4\u4ef6\u6811\u6267\u884c\u53ef\u9884\u6d4b\u7684\u7cbe\u786e\u66f4\u65b0\u3002\n\u8fd9\u610f\u5473\u7740Next.js\u5c06\u53ea\u66f4\u65b0\u60a8\u7f16\u8f91\u7684\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u53ea\u91cd\u65b0\u5448\u73b0\u8be5\u7ec4\u4ef6\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u7ec4\u4ef6\u72b6\u6001\u3002\u8fd9\u5305\u62ec\u6837\u5f0f(\u5185\u8054\u3001CSS-in-JS\u6216CSS/Sass\u6a21\u5757)\u3001\u6807\u8bb0\u3001\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u548c\u6548\u679c(\u901a\u8fc7useEffect)\u3002\n\u4f5c\u4e3a\u8fd9\u6b21\u4f53\u9a8c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5b8c\u5168\u91cd\u65b0\u8bbe\u8ba1\u4e86\u9519\u8bef\u8986\u76d6\uff0c\u4ee5\u4f7f\u5176\u66f4\u6709\u5e2e\u52a9\uff0c\u5e76\u4f7f\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5bf9\u6253\u5b57\u9519\u8bef\u6216\u8fd0\u884c\u65f6\u9519\u8bef\u5177\u6709\u5f39\u6027\u3002\u8fd9\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\n\u51c6\u786e\u7684\u9519\u8bef\u4f4d\u7f6e\uff0c\u5728\u7f16\u8bd1\u524d\u89e3\u6790\u5230\u4ee3\u7801\u7684\u539f\u59cb\u884c\u548c\u5217\u3002\njs\u57289.3\u4e2d\u5f15\u5165\u4e86\u9759\u6001\u7ad9\u70b9\u751f\u6210\u65b9\u6cd5\uff0c\u76ee\u6807\u5f88\u660e\u786e\uff1a\u6211\u4eec\u5e94\u8be5\u83b7\u5f97\u9759\u6001(\u59cb\u7ec8\u5feb\u901f\u3001\u59cb\u7ec8\u5728\u7ebf\u3001\u5168\u7403\u5206\u5e03)\u7684\u597d\u5904\uff0c\u4f46\u8981\u51fa\u8272\u5730\u652f\u6301\u52a8\u6001\u6570\u636e\uff0c\u8fd9\u6b63\u662fNext.js\u6240\u719f\u77e5\u7684\u3002\n\u4e3a\u4e86\u4e24\u5168\u5176\u7f8e\uff0cNext.js\u652f\u6301\u589e\u91cf\u9759\u6001\u751f\u6210\uff0c\u5373\u5728\u6784\u5efa\u7ad9\u70b9\u540e\u66f4\u65b0\u9759\u6001\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u57289.3\u4e2d\uff0c\u6211\u4eec\u5728getStaticPath\u4e2d\u5f15\u5165\u4e86Fallback\uff1atrue\u9009\u9879\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u8fd0\u884c\u65f6\u6dfb\u52a0\u65b0\u9875\u9762\u3002\n\u6211\u4eec\u6700\u8fd1\u6574\u7406\u4e86\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86Next.js\u5982\u4f55\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u9759\u6001\u9884\u5448\u73b0\u65e0\u9650\u6570\u91cf\u7684\u9875\u9762\uff1a\n\u4eca\u5929\uff0c\u6211\u4eec\u8fd8\u5f15\u5165\u4e86\u589e\u91cf\u9759\u6001\u518d\u751f(Beta)\uff0c\u8fd9\u662f\u4e00\u79cd\u66f4\u65b0\u73b0\u6709\u9875\u9762\u7684\u673a\u5236\uff0c\u5f53\u6d41\u91cf\u4f20\u5165\u65f6\uff0c\u901a\u8fc7\u5728\u540e\u53f0\u91cd\u65b0\u5448\u73b0\u5b83\u4eec\u3002\u53d7\u8fc7\u65f6\u800c\u91cd\u65b0\u9a8c\u8bc1\u7684\u542f\u53d1\uff0c\u8fd9\u786e\u4fdd\u4e86\u6d41\u91cf\u59cb\u7ec8\u4ee5\u9759\u6001\u65b9\u5f0f\u4e0d\u95f4\u65ad\u5730\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u65b0\u6784\u5efa\u7684\u9875\u9762\u5b8c\u6210\u751f\u6210\u4e4b\u540e\u624d\u4f1a\u5c06\u5176\u63a8\u9001\u3002\n\u5bfc\u51fa\u5f02\u6b65\u51fd\u6570getStaticProps(){return{props\uff1aawait getDataFromCMS()\uff0c//\u6211\u4eec\u5c06\u5c1d\u8bd5\u91cd\u65b0\u751f\u6210\u9875\u9762\uff1a//-\u5f53\u8bf7\u6c42\u4f20\u5165\u65f6//-\u6700\u591a\u6bcf\u79d2\u4e00\u6b21STRISTH_REVALIDATE\uff1a1}}\u3002\n\u9875\u9762\u6c38\u8fdc\u4e0d\u4f1a\u8131\u673a\u3002\u5982\u679c\u540e\u53f0\u9875\u91cd\u65b0\u751f\u6210\u5931\u8d25\uff0c\u5219\u65e7\u9875\u4fdd\u6301\u4e0d\u53d8\u3002\nNext Start\u548cVercel edge\u5e73\u53f0\u90fd\u5df2\u7ecf\u5b8c\u5168\u652f\u6301\u589e\u91cf\u529f\u80fd(\u6dfb\u52a0\u9875\u9762\u548c\u5ef6\u8fdf\u66f4\u65b0\u9875\u9762)\u548c\u9884\u89c8\u6a21\u5f0f\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5f00\u53d1\u8865\u5145RFC\uff0c\u4ee5\u89e3\u51b3\u4e24\u4e2a\u989d\u5916\u7684\u589e\u91cf\u9759\u6001\u751f\u6210\u529f\u80fd\uff1a\n\u4e00\u6b21\u91cd\u65b0\u751f\u6210\u591a\u4e2a\u9875\u9762\u5e76\u4f7f\u5176\u65e0\u6548(\u5982\u60a8\u7684\u535a\u5ba2\u7d22\u5f15\u548c\u67d0\u4e2a\u535a\u5ba2\u5e16\u5b50)\u3002\n\u5728\u6211\u4eec\u5ba3\u5e03\u4e0b\u4e00\u4ee3\u9759\u6001\u7ad9\u70b9\u751f\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u60f3\u8981\u5206\u4eab\u4eceHeadless CMS API\u83b7\u53d6\u5185\u5bb9\u5e76\u5c06\u5176\u5448\u73b0\u4e3aNext.js HTML\u7684\u771f\u5b9e\u573a\u666f\u3002\n\u6211\u4eec\u4e0e\u4e16\u754c\u4e0a\u4e00\u4e9b\u6700\u597d\u7684CMS\u7cfb\u7edf\u7684\u521b\u5efa\u8005\u5408\u4f5c\uff1aConentful\u3001DatoCMS\u3001\u68f1\u955c\u3001SANISH\u548cTakeShape\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u7cfb\u7edf\u6b63\u5728\u5f00\u53d1\u4e2d\u3002\n\u8fd9\u4e9b\u793a\u4f8b\u4e0d\u4ec5\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u5e76\u83b7\u5f97100%\u5f00\u6e90\u548c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bb8\u53ef\uff0c\u800c\u4e14\u5b83\u4eec\u8fd8\u7ed3\u5408\u4e86\u53ef\u7528\u7684\u6700\u4f73\u5b9e\u8df5\uff1a\n\u6211\u4eec\u8fd8\u4e0eTinaCMS\u5728CMS\u7684\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u65b0\u65b9\u5411\u4e0a\u8fdb\u884c\u4e86\u5408\u4f5c\uff1a\u5185\u5bb9\u7684\u9875\u9762\u5185\u7f16\u8f91\u3002\u8bf7\u67e5\u770b\u4ed6\u4eec\u7684\u6307\u5357\uff0c\u4e86\u89e3\u5982\u4f55\u4e3a\u60a8\u7684\u9879\u76ee\u5b9e\u65bd\u5b83\u3002\n\u6211\u4eec\u4ece\u4f7f\u7528Next.js\u7684\u516c\u53f8\u5f97\u5230\u7684\u4e00\u4e2a\u5e38\u89c1\u53cd\u9988\u662f\uff0c\u4e0d\u6e05\u695a\u73af\u5883\u53d8\u91cf\u4f55\u65f6\u5185\u8054\u5230\u6d4f\u89c8\u5668\u5305\u4e2d\uff0c\u4ee5\u53ca\u4f55\u65f6\u4ec5\u5728Node.js\u73af\u5883\u4e2d\u53ef\u7528\u3002\n\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u5411\u6d4f\u89c8\u5668\u516c\u5f00\u73af\u5883\u53d8\u91cf\uff0c\u60a8\u53ef\u4ee5\u5728\u73af\u5883\u53d8\u91cf\u524d\u9762\u52a0\u4e0aNEXT_PUBLIC_\u3002\u5f53\u4f7f\u7528\u8be5\u73af\u5883\u53d8\u91cf\u65f6\uff0c\u5b83\u5c06\u5185\u8054\u5230\u6d4f\u89c8\u5668JavaScript\u5305\u4e2d\u3002\n\u60a8\u4e0d\u518d\u9700\u8981\u6dfb\u52a0next.config.js\u548cenv\u952e\u6765\u516c\u5f00\u8fd9\u4e9b\u53d8\u91cf\u3002\n//Pages/index.js//\u73af\u5883\u53d8\u91cf\u5c06\u5411\u6d4f\u89c8\u5668\u516c\u5f00\u3002\u8bb0\u5f55(&#39\uff1b\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u7248\u672c&#39\uff1b\uff0c\u8fdb\u7a0b\u3002\u73af\u5883\u3002NEXT_PUBLIC_VERSION)\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570(){\u8fd4\u56deHello World}\u3002\n\u7b2c\u4e8c\u4e2a\u66f4\u6539\u662fNext.js\u73b0\u5728\u9ed8\u8ba4\u652f\u6301.env\u52a0\u8f7d\u3002\u5141\u8bb8\u60a8\u8f7b\u677e\u5b9a\u4e49\u5f00\u53d1\u548c\u751f\u4ea7\u73af\u5883\u53d8\u91cf\u3002\n\u5728Next.js 9.1.7\u4e2d\uff0c\u6211\u4eec\u5ba3\u5e03\u5728\u6d4f\u89c8\u5668\u4e2d\u5bf9FETCH()API\u8fdb\u884c\u591a\u5c42\u586b\u5145\u3002\u73b0\u5728\uff0c\u8fd9\u79cd\u591a\u5c42\u586b\u5145\u4e5f\u6269\u5c55\u5230\u4e86Node.js\u73af\u5883\u3002\n\u5b9e\u9645\u4e0a\uff0c\u60a8\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u670d\u52a1\u5668\u7aefFETCH PolyFill(\u4f8b\u5982\uff0c\u540c\u6784-\u53d6\u6d88\u83b7\u53d6\u6216\u8282\u70b9-\u83b7\u53d6)\uff0c\u56e0\u4e3aNext.js\u5c06\u5728\u6240\u6709\u73af\u5883\u4e2d\u81ea\u52a8\u63d0\u4f9bFETCH()\u3002\n\u5bfc\u51fa\u5f02\u6b65\u51fd\u6570getStaticProps(){//\u4e0d\u518d\u9700\u8981\u4ece\u540c\u6784\u5bfc\u5165FETCH-UNFETCH\u5e38\u91cfres=AWAIT FETCH(&#39\uff1bhttps://./posts&#39\uff1b)\u5e38\u91cfPOST=AWAIT RES\u3002json()return{props\uff1a{post}\u51fd\u6570({post}){//\u5448\u73b0\u5e16\u5b50.\u3002}\u5bfc\u51fa\u9ed8\u8ba4\u503c\u3002\n\u4e0a\u5468\uff0c\u8c37\u6b4cChrome\u56e2\u961f\u63a8\u51fa\u4e86Core Web Vitals\u3002\u6838\u5fc3\u7f51\u7edc\u6d3b\u529b\u662f\u5728\u7f51\u7edc\u4e0a\u4f20\u9012\u4f1f\u5927\u7528\u6237\u4f53\u9a8c\u7684\u5173\u952e\u8d28\u91cf\u4fe1\u53f7\uff0c\u8457\u540d\u7684\u706f\u5854\u62a5\u544a\u5c31\u662f\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u7684\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u60a8\u7684\u7f51\u7ad9\u6216Web\u5e94\u7528\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u5feb\uff0c\u90a3\u4e48\u8ddf\u8e2a\u8fd9\u4e9b\u6307\u6807\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u8fd9\u4e5f\u662fNext.js\u7684\u6838\u5fc3\u76ee\u6807\u4e4b\u4e00\u3002\nChrome\u56e2\u961f\u53d1\u5e03\u4e86\u4e00\u4e2aCore Web Vitals Chrome\u6269\u5c55\uff0c\u5b83\u5141\u8bb8\u60a8\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u83b7\u5f97\u9875\u9762\u6267\u884c\u60c5\u51b5\u7684\u53ef\u89c6\u53cd\u9988\u3002\n\u5728\u6784\u5efa\u751f\u4ea7Web\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u60a8\u8fd8\u5e0c\u671b\u4e86\u89e3\u60a8\u7684\u7ad9\u70b9\u5bf9\u8bbf\u95ee\u8005\u548c(\u6f5c\u5728)\u5ba2\u6237\u7684\u8868\u73b0\u5982\u4f55\u3002\u60a8\u751a\u81f3\u53ef\u80fd\u5e0c\u671b\u8ddf\u8e2a\u8fd9\u4e9b\u5ea6\u91cf\u968f\u65f6\u95f4\u7684\u6539\u8fdb\u6216\u5012\u9000\uff0c\u4ee5\u67e5\u770b\u60a8\u7684\u66f4\u6539\u662f\u5426\u5bf9\u60a8\u7684\u53d7\u4f17\u4ea7\u751f\u4e86\u9884\u671f\u7684\u5f71\u54cd\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u5411\u60a8\u7684\u5206\u6790\u670d\u52a1\u62a5\u544aCore Web Vitals\uff0c\u6211\u4eec\u4e0eGoogle\u5408\u4f5c\u5f15\u5165\u4e86\u4e00\u79cd\u540d\u4e3areportWebVitals\u7684\u65b0\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4ecePages/_app.js\u4e2d\u5bfc\u51fa\uff1a\n//\u5c06\u4e3a\u6bcf\u4e2a\u5fc5\u987b\u62a5\u544a\u7684\u6307\u6807\u8c03\u7528\u4e00\u6b21\u3002\u5bfc\u51fa\u51fd\u6570\u62a5\u544aWebVitals(\u6307\u6807){//\u8fd9\u4e9b\u6307\u6807\u53ef\u4ee5\u53d1\u9001\u5230\u4efb\u4f55\u5206\u6790\u670d\u52a1\u3002log(\u516c\u5236)}\u51fd\u6570({\uff0cpageProps}){return}\u5bfc\u51fa\u9ed8\u8ba4\u503c\u3002\n\u8981\u5c06\u6b64\u65b9\u6cd5\u4e0e\u60a8\u7684\u5206\u6790\u670d\u52a1\u7ed3\u5408\u4f7f\u7528\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u7684\u5c06\u7ed3\u679c\u53d1\u9001\u5230\u5206\u6790\u90e8\u5206\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6838\u5fc3Web Vitals\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u53c2\u8003web.dev/vitals\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u5927\u578b\u9879\u76ee\uff0c\u60a8\u7684\u4e00\u4e9b\u5bfc\u5165\u8bed\u53e5\u53ef\u80fd\u4f1a\u53d7\u5230../\u610f\u5927\u5229\u9762\u7684\u5f71\u54cd\uff1a\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8fdb\u53e3\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u8fdb\u53e3\u3002\u5047\u8bbeComponents\u76ee\u5f55\u4f4d\u4e8e\u6839\u76ee\u5f55\uff0c\u6211\u4eec\u5e0c\u671bimport\u8bed\u53e5\u5982\u4e0b\u6240\u793a\uff1a\n\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0cNext.js9.4\u4f7f\u5f97\u8bbe\u7f6eJavaScript\u548cTypeScript\u9879\u76ee\u7684\u7edd\u5bf9\u5bfc\u5165\u53d8\u5f97\u8d85\u7ea7\u7b80\u5355\u3002\u60a8\u53ea\u9700\u5c06baseUrl\u914d\u7f6e\u6dfb\u52a0\u5230jsconfig.json(JS\u9879\u76ee)\u6216tsconfig.json(TS\u9879\u76ee)\u3002\n\u8fd9\u5c06\u5141\u8bb8\u4ece\u7684\u7edd\u5bf9\u5bfc\u5165\u3002(\u6839\u76ee\u5f55)\u3002\u5b83\u8fd8\u4e0eVSCode\u548c\u5176\u4ed6\u7f16\u8f91\u5668\u96c6\u6210\uff0c\u652f\u6301\u4ee3\u7801\u5bfc\u822a\u548c\u5176\u4ed6\u7f16\u8f91\u5668\u529f\u80fd\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u4e4b\u524d\u4fee\u6539\u4e86webpack\u6a21\u5757\u522b\u540d\u914d\u7f6e\u4ee5\u542f\u7528\u7edd\u5bf9\u5bfc\u5165\uff0c\u5219\u73b0\u5728\u53ef\u4ee5\u5220\u9664\u8be5\u914d\u7f6e\u3002\n\u6b64\u5916\uff0cNext.js9.4\u8fd8\u652f\u6301\u8def\u5f84\u9009\u9879\uff0c\u8be5\u9009\u9879\u5141\u8bb8\u60a8\u521b\u5efa\u81ea\u5b9a\u4e49\u6a21\u5757\u522b\u540d\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5141\u8bb8\u60a8\u4f7f\u7528@/design-system\u800c\u4e0d\u662fComponents/design-system\uff1a\n\u5982\u679c\u6307\u5b9a\u8def\u5f84\uff0c\u5219\u5fc5\u987b\u6307\u5b9abaseUrl\u3002\u60a8\u53ef\u4ee5\u5728TypeScript\u6587\u6863\u4e2d\u4e86\u89e3\u6709\u5173\u8def\u5f84\u9009\u9879\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5f53\u5728Next.js9.3\u4e2d\u542f\u52a8\u5185\u7f6e\u7684Sass\u652f\u6301\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u7684\u53cd\u9988\u662f\u4e00\u90e8\u5206\u7528\u6237\u60f3\u8981\u914d\u7f6eSass\u7f16\u8bd1\u5668\u3002\u4f8b\u5982\uff0c\u8981\u914d\u7f6einclude dePath\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002\n\u6211\u4eec\u91cd\u65b0\u8bbe\u8ba1\u4e86\u547d\u4ee4\u884c\u8f93\u51fa\uff0c\u4f7f\u5176\u66f4\u52a0\u4e00\u81f4\uff0c\u8f93\u51fa\u7684\u91cd\u590d\u6570\u636e(\u5982\u90e8\u7f72URL)\u66f4\u5c11\uff0c\u9700\u8981\u7b49\u5f85\u5f00\u53d1\u670d\u52a1\u5668\u542f\u52a8\u7b49\u7b49\u3002\u6211\u4eec\u8fd8\u66f4\u6539\u4e86\u6d88\u606f\u7c7b\u578b\u7684\u95f4\u8ddd\uff0c\u4f7f\u5176\u5728\u6d88\u606f\u4e4b\u95f4\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u518d\u4ece\u4e00\u884c\u8df3\u5230\u53e6\u4e00\u884c\u3002\n\u52a0\u5165\u6709\u5173GitHub\u8ba8\u8bba\u7684Next.js\u793e\u533a\u3002\u8ba8\u8bba\u662f\u4e00\u4e2a\u793e\u533a\u7a7a\u95f4\uff0c\u5141\u8bb8\u60a8\u4e0e\u5176\u4ed6Next.js\u7528\u6237\u8054\u7cfb\u5e76\u63d0\u51fa\u95ee\u9898\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fNext.js\uff0c\u8bf7\u968f\u610f\u4e0e\u793e\u533a\u5171\u4eab\u60a8\u7684\u9879\u76eeURL\u3002\n\u6211\u4eec\u611f\u8c22\u6211\u4eec\u7684\u793e\u533a\u548c\u6240\u6709\u5916\u90e8\u53cd\u9988\u548c\u8d21\u732e\uff0c\u8fd9\u4e9b\u53cd\u9988\u548c\u8d21\u732e\u5e2e\u52a9\u5851\u9020\u4e86\u8fd9\u4e2a\u7248\u672c\u3002", "note_en": "New Environment Variables Support: built-in support for  .env and a  NEXT_PUBLIC_ prefix, as seen in CRA\n Improved Built-in Fetch Support: ditch your  node-fetch and  isomorphic-fetch imports in favor of a built-in  fetch polyfill, for Node.js and all browsers (build and runtime)\n Integrated Web Vitals Reporting: capture the  metrics that drive Lighthouse scores, but from your real traffic\n  Fast Refresh is a new hot reloading experience that gives you instantaneous feedback on edits made to your React components. It is now  enabled by default for all projects on Next.js 9.4 or newer.\n Hot reloading has  existed for a long time but has  historically been  too fragile to enable by default in your workflow. Because of this, Next.js previously implemented a coarse form of hot reloading that would reset the entire state of your application.\n The old hot reloading implementation was not resilient to compilation or runtime errors and would perform a full reload of your application if you made a typo while editing your CSS or JavaScript. This was suboptimal and interrupted your train of thought.\n Fast Refresh deeply integrates into React itself ( via React Refresh), allowing Next.js to perform predictable precision updates to your React component tree.\n This means Next.js will only update code in the file you edited, and only re-render that component,  without losing component state. This includes styles (inline, CSS-in-JS, or CSS/Sass Modules), markup, event handlers, and effects (via  useEffect).\n  As part of this experience, we completely redesigned the error overlay to be more helpful and to make your application resilient to typos or runtime errors. This includes, but is not limited to:\n Accurate error locations, resolved to the  original line and column of your code, before compilation\n  Next.js introduced Static Site Generation methods in 9.3 with a clear goal in mind: we should get  the benefits of static (always fast, always online,  globally distributed), but with excellent support for dynamic data, which Next.js is known for.\n To get the best of both worlds, Next.js supports  Incremental Static Generation, updating static content after you have already built your site. For example, in 9.3 we\u2019ve introduced the  fallback: true option in  getStaticPaths, which allows you to add  new pages at runtime.\n We recently put together an example showcasing how Next.js can statically pre-render an infinite number of pages this way:\n  Today, we are also introducing  Incremental Static Regeneration (beta), which is a mechanism to  update existing pages, by re-rendering them in the background as traffic comes in. Inspired by  stale-while-revalidate, this ensures traffic is served uninterrupted, always statically, and the newly built page is pushed only after it&#39;s done generating.\n export  async  function  getStaticProps ( )  {  return  { props :  await  getDataFromCMS ( ) ,  // we will attempt to re-generate the page:  // - when a request comes in  // - at most once every second unstable_revalidate :  1  } }\n  Pages never go offline. If the background page re-generation fails, the old page remains unaltered.\n Both incremental features (adding pages and lazily updating them), as well as  preview mode, are already fully supported by both  next start and the  Vercel edge platform out of the box.\n Up next, we will be working on a supplemental RFC to address two additional incremental static generation capabilities:\n Re-generating and invalidating multiple pages at once (like your blog index and a certain blog post)\n  On the heels of our announcement of  next-gen static site generation, we wanted to share real-world scenarios of fetching content from Headless CMS APIs and rendering it as Next.js HTML.\n We partnered with the creators of some of the best CMS systems in the world:  Contentful,  DatoCMS,  Prismic,  Sanity, and  TakeShape, with more on the way.\n  These examples are not only ready to be used and 100% open source and MIT licensed, but they incorporate the best practices available:\n   We also have collaborated with TinaCMS on an exciting new direction for CMS:  in-page editing of content.  Check out their guide to learn how to implement it for your project.\n  A common piece of feedback that we got from companies using Next.js is that it was unclear when an environment variable is inlined into the browser bundle and when it is only available in the Node.js environment.\n  The first is to expose an environment variable to the browser you can prefix the environment variable with  NEXT_PUBLIC_. When that environment variable is used it will then be inlined into the browser JavaScript bundle.\n You no longer have to add a  next.config.js and add the  env key to expose these variables.\n // pages/index.js // The environment variable will be exposed to the browser  . log ( &#39;My Application Version&#39; , process . env . NEXT_PUBLIC_VERSION ) export  default  function    ( )  {  return   Hello World  }\n The second change is that Next.js now supports  .env loading by default. Allowing you to easily define development and production environment variables.\n     In  Next.js 9.1.7 we announced polyfilling of the   fetch() API in the browser. Today this polyfilling has been extended to the Node.js environment too.\n In practice, you no longer have to use any type of server-side fetch polyfill (for example  isomorphic-unfetch or  node-fetch) as Next.js will automatically provide  fetch() in all environments.\n  export  async  function  getStaticProps ( )  {  // fetch no longer needs to be imported from isomorphic-unfetch  const res  =  await  fetch ( &#39;https://.../posts&#39; )  const posts  =  await res . json ( )  return  { props :  { posts  }  } } function    (  { posts  } )  {  // Render posts... } export  default\n  Last week the Google Chrome team introduced  Core Web Vitals. Core Web Vitals are the quality signals key to delivering great UX on the web, on top of which the  famous Lighthouse reports are built.\n Keeping track of these metrics is extremely useful if you want your website or web application to be as fast as possible, which is one of the core goals of Next.js.\n  The Chrome team has released a  Core Web Vitals Chrome extension that allows you as a developer to get visual feedback on how your pages are performing.\n When building production web applications you also want to know how your site is performing for your visitors and (potential) customers. You might even want to track the improvement or regression of these metrics over time in order to see if your changes have the intended impact on your audience.\n In order to aid reporting Core Web Vitals to your analytics service we have introduced,  in collaboration with Google, a new method called  reportWebVitals which can be exported from  pages/_app.js:\n // Will be called once for every metric that has to be reported. export  function  reportWebVitals ( metric )  {  // These metrics can be sent to any analytics service   . log (metric ) } function    (  {   , pageProps  } )  {  return   } export  default\n To use this method in combination with your analytics service refer to the  &#34;Sending result to Analytics&#34; section of the docs. If you want to learn more about Core Web Vitals you can refer to  web.dev/vitals.\n  If you\u2019re working on a large project, some of your  import statements might suffer from the  ../../../ spaghetti:\n  In such cases, instead of relative imports, we should be using  absolute imports. Assuming that the  components directory exists at the root, we want  import statements to look like:\n  We&#39;re excited to announce that Next.js 9.4 makes setting up absolute imports super simple for both JavaScript and TypeScript projects. All you need to do is to add the  baseUrl config to   jsconfig.json (JS projects) or   tsconfig.json (TS projects).\n  This will allow absolute imports from  . (the root directory). It also integrates with VSCode and other editors, supporting code navigation and other editor features.\n Note: If you\u2019ve previously modified your  Webpack module alias configuration to enable absolute imports, that configuration can now be removed.\n Furthermore, Next.js 9.4 also supports the  paths option, which allows you to create custom module aliases. For example, the following allows you to use  @/design-system instead of  components/design-system:\n    You must specify  baseUrl if you specify  paths. You can learn more about the  paths option  in the TypeScript documentation.\n  When built-in Sass support was launched in  Next.js 9.3 we got the feedback that a subset of users wanted to configure the sass compiler. For example to configure  includePaths.\n    We have redesigned the command line output to be more consistent and output less duplicate data like the deployment URL, waiting on the development server to start and more. We&#39;ve also changed the spacing of the message type to be consistent across messages, meaning they no longer jump from line to line.\n        Join the Next.js community on  GitHub Discussions. Discussions is a community space that allows you to connect with other Next.js users and ask questions.\n If you are using Next.js feel free to  share your project url with the community.\n We are thankful to our community and all the external feedback and contributions that helped shape this release.", "posttime": "2020-05-12 00:19:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u589e\u91cf,refresh,js", "title": "Next.js 9.4-\u5feb\u901f\u5237\u65b0\u3001\u589e\u91cf\u9759\u6001\u518d\u751f", "title_en": "Next.js 9.4 \u2013 Fast Refresh, Incremental Static Regeneration", "transed": 1, "url": "https://nextjs.org/blog/next-9-4", "via": "", "real_tags": ["\u589e\u91cf", "refresh", "js"]}]