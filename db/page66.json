[{"category": "", "categoryclass": "", "imagename": "8050ade216cbe5005b32f5275dbc31dd.jpg", "infoid": 1006470, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0c\u6211\u5973\u513f\u4e0a\u4e2d\u5b66\u7684\u65f6\u5019\uff0c\u5979\u8981\u590d\u4e60\u4e00\u573a\u201c\u79d1\u5b66\u65b9\u6cd5\u4e94\u6b65\u66f2\u201d\u7684\u6d4b\u9a8c\u3002\u5979\u6beb\u4e0d\u8d39\u529b\u5730\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u8bb0\u5fc6\u4e86\u4e94\u4e2a\u5355\u8bcd\uff0c\u4f46\u5979\u4e5f\u5fc5\u987b\u51c6\u5907\u597d\u89e3\u91ca\u5b83\u4eec\uff0c\u5728\u90a3\u91cc\u5979\u9047\u5230\u4e86\u9ebb\u70e6\uff0c\u76f4\u5230\u5979\u6709\u4e86\u4e00\u4e2a\u597d\u4e3b\u610f\uff1a\u8fd9\u662f\u5979\u7684\u6bcd\u4eb2\u7684\u4e00\u4e2a\u673a\u4f1a\uff0c\u5979\u7684\u6bcd\u4eb2\u6559\u6388\u5e76\u64b0\u5199\u4e86\u79d1\u5b66\u53f2\uff0c\u8ba9\u81ea\u5df1\u53d8\u5f97\u6709\u7528\u4e86\u3002\u201c\u6211\u60f3\u89c2\u5bdf\u3001\u5047\u8bbe\u3001\u9884\u6d4b\u3001\u5b9e\u9a8c\u3001\u786e\u8ba4\u662f\u6709\u610f\u4e49\u7684\uff0c\u201d\u5979\u5bf9\u6211\u8bf4\uff0c\u201c\u4f46\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u5047\u8bbe\u3001\u89c2\u5bdf\u3001\u9884\u6d4b\u3001\u5b9e\u9a8c\u3001\u786e\u8ba4\u5462\uff1f\u201d\u8fd8\u662f\u9884\u6d4b\u3001\u89c2\u5bdf\u3001\u786e\u8ba4\u3001\u5047\u8bbe\u3001\u5b9e\u9a8c\uff1f\u6216\u2026\u201c\u3002\n\u201c\u5b8c\u5168\u6b63\u786e\uff0c\u201d\u6211\u6253\u65ad\u4e86\u5979\uff0c\u5979\u8fd8\u6ca1\u6765\u5f97\u53ca\u544a\u8bc9\u6211\u8fd9\u4e94\u4e2a\u8bcd\u7684\u5168\u90e8120\u79cd\u7ec4\u5408\u3002\u7136\u540e\uff0c\u6211\u975e\u4f46\u6ca1\u6709\u89e3\u51b3\u5979\u7684\u95ee\u9898\uff0c\u53cd\u800c\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7cdf\u3002(\u6bcd\u4eb2\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\uff1f)\u3002\u201c\u4ed6\u4eec\u771f\u7684\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u8d70\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u8ba4\u4e3a\u5b83\u4eec\u66f4\u6709\u53ef\u80fd\u540c\u65f6\u53d1\u751f\u3002\u6b64\u5916\uff0c\u5b83\u4eec\u8fd8\u53ef\u4ee5\u5305\u62ec\u8bb8\u591a\u5176\u4ed6\u90e8\u5206\uff0c\u5982\u6bd4\u8f83\u3001\u5f62\u5f0f\u5316\u3001\u7c7b\u63a8\u3001\u89e3\u91ca\u3001\u53ef\u89c6\u5316\u2026\u3002\u5979\u770b\u4e86\u6211\u4e00\u773c\u201c\u7236\u6bcd\u5f88\u6709\u9b45\u529b\uff0c\u4f46\u7528\u5904\u4e0d\u5927\u201d\uff0c\u7136\u540e\u53c8\u8f6c\u8fc7\u5934\u6765\u770b\u5979\u7684\u7b14\u8bb0\u3002\u5982\u679c\u6211\u80fd\u8ba9\u5979\u53c2\u8003\u4ea8\u5229\u00b7M\u00b7\u8003\u5c14\u65af\u7684\u201c\u79d1\u5b66\u65b9\u6cd5\uff1a\u4ece\u8fbe\u5c14\u6587\u5230\u675c\u5a01\u7684\u601d\u7ef4\u8fdb\u5316\u201d(The Science Method\uff1aan Evolution of Think from Darwin to Dewey)\u5c31\u597d\u4e86\u3002\u8003\u5c14\u65af\u7684\u4e66\u4e5f\u6ca1\u6709\u89e3\u51b3\u5979\u7684\u95ee\u9898\uff0c\u800c\u662f\u628a\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u66f4\u5927\u66f4\u6709\u8da3\u7684\u73b0\u8c61\u3002(\u4e66\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\uff1f)\u3002\n\u79d1\u5b66\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff0c\u5b83\u662f\u4ec0\u4e48\u65f6\u5019\u3001\u4ec0\u4e48\u5730\u65b9\u3001\u600e\u4e48\u4f1a\u50cf\u5b69\u5b50\u4eec\u8bf4\u7684\u90a3\u6837\u6210\u4e3a\u4e00\u4ef6\u4e8b\u7684\u5462\uff1f\u201c\u79d1\u5b66\u65b9\u6cd5\u201d\u7684\u6743\u5a01\u5b9a\u4e49\u5e38\u5e38\u8bf4\uff0c\u5b83\u7531\u4e00\u7cfb\u5217\u7a0b\u5e8f\u7ec4\u6210\uff0c\u5305\u62ec\u89c2\u5bdf\u3001\u5b9e\u9a8c\u4ee5\u53ca\u901a\u8fc7\u5f52\u7eb3\u548c\u6f14\u7ece\u63a8\u7406\u5f62\u6210\u548c\u68c0\u9a8c\u5047\u8bf4\u3002\u8fd9\u6837\u7684\u63cf\u8ff0\u901a\u5e38\u5c06\u79d1\u5b66\u7684\u6210\u529f\u5f52\u529f\u4e8e\u81ea17\u4e16\u7eaa\u4ee5\u6765\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u5e94\u7528\uff0c\u4ee5\u53ca\u5f17\u6717\u897f\u65af\u00b7\u57f9\u6839\u548c\u827e\u8428\u514b\u00b7\u725b\u987f\u7b49\u4eba\u7684\u5de5\u4f5c\u3002\u4f46\u662f\uff0c\u57f9\u6839\u3001\u725b\u987f\u621617\u4e16\u7eaa\u7684\u5176\u4ed6\u4efb\u4f55\u4eba\u90fd\u4e0d\u4f1a\u627f\u8ba4\u8fd9\u4e2a\u77ed\u8bed\uff1b\u800c\u4e14\uff0c\u4ed6\u4eec\u90fd\u4e0d\u4f1a\u540c\u610f\u73b0\u5728\u7684\u6807\u51c6\u5b9a\u4e49\u3002\u4f8b\u5982\uff0c\u57f9\u6839\u62d2\u7edd\u6f14\u7ece\u63a8\u7406\uff0c\u8ba4\u4e3a\u8fd9\u662f\u7cdf\u7cd5\u7684\u65e7\u4e9a\u91cc\u58eb\u591a\u5fb7\u65b9\u6cd5\uff0c\u800c\u79d1\u5b66\u53f2\u4e0a\u6700\u5927\u80c6\u7684\u5047\u8bbe\u4e4b\u4e00-\u5b87\u5b99\u4ee5\u592a\u7684\u4f5c\u8005\u725b\u987f\u5219\u5426\u8ba4\u5047\u8bbe\u5728\u4ed6\u7684\u79d1\u5b66\u4e2d\u626e\u6f14\u4efb\u4f55\u89d2\u8272\uff0c\u4ed6\u8457\u540d\u5730\u5ba3\u79f0\u201c\u6ca1\u6709Fingo\u7684\u5047\u8bbe\u201d(\u6211\u6ca1\u6709\u63d0\u51fa\u4efb\u4f55\u5047\u8bbe)\u3002\n\u8003\u5c14\u65af\u5c06\u79d1\u5b66\u65b9\u6cd5\u8ffd\u6eaf\u5230\u6bd4\u79d1\u5b66\u9769\u547d\u66f4\u665a\u7684\u65f6\u671f--19\u4e16\u7eaa\u672b\u548c20\u4e16\u7eaa\u521d\u3002\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0e\u667a\u529b\u5730\u7406\u5b66\u7684\u7ed3\u6784\u6027\u8f6c\u53d8\u4e0d\u8c0b\u800c\u5408\uff1a\u79d1\u5b66\u548c\u4eba\u6587\u88ab\u5206\u6210\u4e24\u4e2a\u4e0d\u540c\u7684\u5927\u9646\u3002\u4e3a\u4e86\u8bc1\u660e\u5b83\u7684\u2026", "note_en": "A few years ago, when my daughter was in middle school, she had to study for a quiz on \u201cthe five steps of the scientific method.\u201d She had no problem memorizing five words in a given order, but she also had to be ready to explain them, and there she ran into trouble, until she was seized by a bright idea: here was a chance for her mother, who taught and wrote about the history of science, to make herself useful. \u201cI guess it makes sense for it to be observation, hypothesis, prediction, experiment, confirmation,\u201d she said to me, \u201cbut why couldn\u2019t it be hypothesis, observation, prediction, experiment, confirmation? Or prediction, observation, confirmation, hypothesis, experiment? Or\u2026\u201d\n  \u201cExactly,\u201d I interrupted, before she could offer me all 120 permutations of the five words. Then, rather than solving her problem, I made it worse. (What are mothers for?) \u201cThey could really go in any order. Actually, I think they\u2019re likelier to occur simultaneously. Also, they could include plenty of other parts, like comparison, formalization, analogy, interpretation, visualization\u2026\u201d She gave me her \u201cparents are charming but of scant utility\u201d look and turned back to her notes. If only I could have referred her to Henry M. Cowles\u2019s  The Scientific Method: An Evolution of Thinking from Darwin to Dewey. Cowles\u2019s book doesn\u2019t solve her problem either, but makes it into a much bigger and more interesting phenomenon. (What are books for?)\n  What is the scientific method, and when, where, and how did it become, as the kids say, a thing? Authoritative definitions of \u201cthe scientific method\u201d often state that it consists of a set of procedures including observation, experimentation, and the formation and testing of hypotheses by inductive and deductive reasoning. Such accounts, as a rule, ascribe science\u2019s successes to the application of these procedures ever since the seventeenth century and the work of people such as Francis Bacon and Isaac Newton. But neither Bacon nor Newton nor anyone else in the seventeenth century would have recognized the phrase; moreover, neither would have agreed with current standard definitions. Bacon, for instance, rejected deductive reasoning as the bad old Aristotelian approach, and Newton, author of one of the boldest hypotheses in the history of science\u2014the universal aether\u2014denied any role for hypotheses in his science, famously declaring \u201chypotheses non fingo\u201d (I frame no hypotheses).\n  Cowles traces the scientific method to a later period than the Scientific Revolution\u2014the late nineteenth and early twentieth centuries. This makes sense, since it coincides with a tectonic shift in intellectual geography: the splitting of the sciences and the humanities into two diverging continents. To prove its\u2026", "posttime": "2020-06-14 06:47:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u601d\u8003,thinking,\u5047\u8bbe", "title": "\u53ea\u8981\u7528\u4f60\u7684\u601d\u8003\u6cf5", "title_en": "Just Use Your Thinking Pump", "transed": 1, "url": "https://www.nybooks.com/articles/2020/07/02/just-use-your-thinking-pump/", "via": "", "real_tags": ["\u601d\u8003", "thinking", "\u5047\u8bbe"]}, {"category": "", "categoryclass": "", "imagename": "fe6f825b70b1ccd0929cc4906daa76f6.jpg", "infoid": 1006469, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u7e41\u661f\u586b\u6ee1\u4e86\u591c\u7a7a\u3002\u4f46\u662f\uff0c\u5f53\u5b87\u5b99\u8fd8\u5904\u4e8e\u521d\u7ea7\u9636\u6bb5\u65f6\uff0c\u5b83\u6839\u672c\u6ca1\u6709\u6052\u661f\u3002\u4e00\u4e2a\u56fd\u9645\u79d1\u5b66\u5bb6\u56e2\u961f\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u63a5\u8fd1\u4e8e\u63a2\u6d4b\u3001\u6d4b\u91cf\u548c\u7814\u7a76\u8fd9\u4e2a\u65f6\u4ee3\u7684\u4fe1\u53f7\uff0c\u81ea\u4ece\u90a3\u4e2a\u6ca1\u6709\u6052\u661f\u7684\u65f6\u4ee3\u5728\u5927\u7ea6130\u4ebf\u5e74\u524d\u7ed3\u675f\u4ee5\u6765\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u4e00\u76f4\u5728\u5b87\u5b99\u4e2d\u4f20\u64ad\u3002\u8be5\u56e2\u961f\u7531\u534e\u76db\u987f\u5927\u5b66(University Of Washington)\u3001\u58a8\u5c14\u672c\u5927\u5b66(University Of Melbourne)\u3001\u79d1\u5ef7\u5927\u5b66(Curtin University)\u548c\u5e03\u6717\u5927\u5b66(Brown University)\u7684\u7814\u7a76\u4eba\u5458\u9886\u5bfc\uff0c\u53bb\u5e74\u5728\u201c\u5929\u4f53\u7269\u7406\u6742\u5fd7\u201d(AstroPhysical Journal)\u4e0a\u62a5\u544a\u79f0\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5c06Murchison Widefield\u9635\u5217\u6536\u96c6\u7684\u65e0\u7ebf\u7535\u53d1\u5c04\u6570\u636e\u63d0\u9ad8\u4e86\u8fd110\u500d\u3002\u7814\u7a76\u5c0f\u7ec4\u6210\u5458\u76ee\u524d\u6b63\u5728\u641c\u5bfb\u8fd9\u67b6\u4f4d\u4e8e\u504f\u8fdc\u897f\u6fb3\u5927\u5229\u4e9a\u7684\u5c04\u7535\u671b\u8fdc\u955c\u7684\u6570\u636e\uff0c\u4ee5\u5bfb\u627e\u6765\u81ea\u6211\u4eec\u5b87\u5b99\u4e2d\u8fd9\u4e2a\u77e5\u4e4b\u751a\u5c11\u7684\u4fe1\u53f7\u7684\u8b66\u793a\u4fe1\u53f7\u3002\n\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u7269\u7406\u5b66\u6559\u6388\u3001\u56e2\u961f\u6210\u5458\u7c73\u683c\u5c14\u00b7\u83ab\u62c9\u83b1\u65af\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u4e2a\u65f6\u4ee3\u7684\u5b87\u5b99\u5c5e\u6027\u5bf9\u7b2c\u4e00\u6279\u6052\u661f\u7684\u5f62\u6210\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\uff0c\u5e76\u542f\u52a8\u4e86\u4eca\u5929\u5b87\u5b99\u7684\u7ed3\u6784\u7279\u5f81\u3002\u201d\u90a3\u4e2a\u65f6\u4ee3\u7269\u8d28\u5728\u5b87\u5b99\u4e2d\u7684\u5206\u5e03\u65b9\u5f0f\u5f88\u53ef\u80fd\u51b3\u5b9a\u4e86\u4eca\u5929\u661f\u7cfb\u548c\u661f\u7cfb\u56e2\u7684\u5206\u5e03\u65b9\u5f0f\u3002\n\u5728\u8fd9\u4e2a\u9ed1\u6697\u65f6\u4ee3\u4e4b\u524d\uff0c\u5b87\u5b99\u662f\u708e\u70ed\u800c\u7a20\u5bc6\u7684\u3002\u7535\u5b50\u548c\u5149\u5b50\u6709\u89c4\u5f8b\u5730\u76f8\u4e92\u7f20\u7ed5\uff0c\u4f7f\u5b87\u5b99\u53d8\u5f97\u4e0d\u900f\u660e\u3002\u4f46\u5f53\u5b87\u5b99\u7684\u5e74\u9f84\u4e0d\u5230\u4e00\u767e\u4e07\u5e74\u65f6\uff0c\u7535\u5b50-\u5149\u5b50\u76f8\u4e92\u4f5c\u7528\u5c31\u53d8\u5f97\u7f55\u89c1\u4e86\u3002\u4e0d\u65ad\u81a8\u80c0\u7684\u5b87\u5b99\u53d8\u5f97\u8d8a\u6765\u8d8a\u900f\u660e\u548c\u9ed1\u6697\uff0c\u5f00\u59cb\u4e86\u5b83\u7684\u9ed1\u6697\u65f6\u4ee3\u3002\n\u6ca1\u6709\u6052\u661f\u7684\u65f6\u4ee3\u6301\u7eed\u4e86\u6570\u4ebf\u5e74\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e2d\u6027\u7684-\u6ca1\u6709\u5168\u9762\u7684\u7535\u8377-\u4e3b\u5bfc\u4e86\u5b87\u5b99\u3002\n\u83ab\u62c9\u83b1\u65af\u8bf4\uff0c\u5728\u8fd9\u4e2a\u9ed1\u6697\u7684\u65f6\u4ee3\uff0c\u6211\u4eec\u5f53\u7136\u6ca1\u6709\u57fa\u4e8e\u5149\u7684\u4fe1\u53f7\u53ef\u4ee5\u7814\u7a76\u6765\u4e86\u89e3\u5b83--\u6ca1\u6709\u53ef\u89c1\u5149\uff01\u4f46\u662f\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u4fe1\u53f7\u6211\u4eec\u53ef\u4ee5\u5bfb\u627e\u3002\u5b83\u6765\u81ea\u6240\u6709\u7684\u4e2d\u6027\u6c22\u3002\u6211\u4eec\u4ece\u672a\u6d4b\u91cf\u8fc7\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u5b83\u5c31\u5728\u90a3\u91cc\u3002\u5b83\u5f88\u96be\u63a2\u6d4b\u5230\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u4fe1\u53f7\u53d1\u51fa\u540e\u7684130\u4ebf\u5e74\u91cc\uff0c\u6211\u4eec\u7684\u5b87\u5b99\u53d8\u5f97\u975e\u5e38\u5fd9\u788c\uff0c\u5145\u65a5\u7740\u6765\u81ea\u6052\u661f\u3001\u661f\u7cfb\u751a\u81f3\u6211\u4eec\u7684\u6280\u672f\u7684\u5176\u4ed6\u6d3b\u52a8\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u6df9\u6ca1\u4e86\u6765\u81ea\u4e2d\u6027\u6c22\u7684\u4fe1\u53f7\u3002\n\u83ab\u62c9\u83b1\u65af\u548c\u4ed6\u7684\u56e2\u961f\u5bfb\u627e\u7684130\u4ebf\u5e74\u524d\u7684\u4fe1\u53f7\u662f\u7535\u78c1\u6ce2\u53d1\u5c04\uff0c\u4e2d\u6027\u6c22\u572821\u5398\u7c73\u7684\u6ce2\u957f\u4e0a\u53d1\u5c04\u3002\u81ea\u90a3\u65f6\u4ee5\u6765\uff0c\u5b87\u5b99\u4e00\u76f4\u5728\u81a8\u80c0\uff0c\u5c06\u4fe1\u53f7\u5ef6\u4f38\u5230\u8fd12\u7c73\u3002\n\u83ab\u62c9\u83b1\u65af\u8bf4\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u5e94\u8be5\u5305\u542b\u5173\u4e8e\u9ed1\u6697\u65f6\u4ee3\u548c\u7ed3\u675f\u5b83\u7684\u4e8b\u4ef6\u7684\u4fe1\u606f\u3002\n\u5f53\u5b87\u5b99\u53ea\u670910\u4ebf\u5c81\u7684\u65f6\u5019\uff0c\u6c22\u539f\u5b50\u5f00\u59cb\u805a\u96c6\u5e76\u5f62\u6210\u7b2c\u4e00\u6279\u6052\u661f\uff0c\u7ed3\u675f\u4e86\u9ed1\u6697\u65f6\u4ee3\u3002\u6765\u81ea\u7b2c\u4e00\u6279\u6052\u661f\u7684\u5149\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7eaa\u5143-\u518d\u7535\u79bb\u65f6\u4ee3-\u6765\u81ea\u8fd9\u4e9b\u6052\u661f\u7684\u80fd\u91cf\u5c06\u5927\u90e8\u5206\u4e2d\u6027\u6c22\u8f6c\u5316\u4e3a\u7535\u79bb\u7b49\u79bb\u5b50\u4f53\u3002\u76f4\u5230\u4eca\u5929\uff0c\u7b49\u79bb\u5b50\u4f53\u4ecd\u7136\u4e3b\u5bfc\u7740\u661f\u9645\u7a7a\u95f4\u3002\n\u83ab\u62c9\u83b1\u65af\u8bf4\uff0c\u518d\u7535\u79bb\u65f6\u4ee3\u548c\u4e4b\u524d\u7684\u9ed1\u6697\u65f6\u4ee3\u662f\u7406\u89e3\u6211\u4eec\u7684\u7279\u5f81\u7684\u5173\u952e\u65f6\u671f\uff0c\u6bd4\u5982\u4e3a\u4ec0\u4e48\u6211\u4eec\u6709\u4e00\u4e9b\u533a\u57df\u5145\u6ee1\u661f\u7cfb\uff0c\u800c\u53e6\u4e00\u4e9b\u533a\u57df\u76f8\u5bf9\u7a7a\u65f7\uff0c\u7269\u8d28\u7684\u5206\u5e03\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u6697\u7269\u8d28\u548c\u6697\u80fd\u91cf\u3002\nMurchison\u9635\u5217\u662f\u56e2\u961f\u7684\u4e3b\u8981\u5de5\u5177\u3002\u8fd9\u67b6\u5c04\u7535\u671b\u8fdc\u955c\u75314096\u4e2a\u5076\u6781\u5929\u7ebf\u7ec4\u6210\uff0c\u53ef\u4ee5\u6355\u6349\u5230\u50cf\u4e2d\u6027\u6c22\u7684\u7535\u78c1\u7279\u5f81\u8fd9\u6837\u7684\u4f4e\u9891\u4fe1\u53f7\u3002\n\u4f46\u662f\u8fd9\u4e9b\u4f4e\u9891\u4fe1\u53f7\u5f88\u96be\u63a2\u6d4b\u5230\uff0c\u56e0\u4e3a\u6765\u81ea\u5b87\u5b99\u4e2d\u5176\u4ed6\u6765\u6e90\u7684\u7535\u78c1\u566a\u58f0\uff0c\u5305\u62ec\u661f\u7cfb\u548c\u4eba\u7c7b\u6d3b\u52a8\u3002\u83ab\u62c9\u83b1\u65af\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u5df2\u7ecf\u5f00\u53d1\u51fa\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u65b9\u6cd5\u6765\u8fc7\u6ee4\u8fd9\u79cd\u566a\u97f3\uff0c\u5e76\u4f7f\u5b83\u4eec\u66f4\u63a5\u8fd1\u90a3\u4e2a\u4fe1\u53f7\u30022019\u5e74\uff0c\u7814\u7a76\u4eba\u5458\u5ba3\u5e03\uff0c\u4ed6\u4eec\u5df2\u7ecf\u4ece\u8d85\u8fc721\u4e2a\u5c0f\u65f6\u7684Murchison Array\u6570\u636e\u4e2d\u8fc7\u6ee4\u51fa\u4e86\u7535\u78c1\u5e72\u6270-\u5305\u62ec\u6765\u81ea\u6211\u4eec\u81ea\u5df1\u7684\u65e0\u7ebf\u7535\u5e7f\u64ad\u7684\u7535\u78c1\u5e72\u6270\u3002\n\u5f80\u524d\u770b\uff0c\u8be5\u56e2\u961f\u6709\u5927\u7ea63000\u5c0f\u65f6\u7684\u5c04\u7535\u671b\u8fdc\u955c\u6536\u96c6\u7684\u989d\u5916\u6392\u653e\u6570\u636e\u3002\u7814\u7a76\u4eba\u5458\u6b63\u8bd5\u56fe\u8fc7\u6ee4\u6389\u5e72\u6270\uff0c\u5e76\u66f4\u63a5\u8fd1\u90a3\u4e2a\u96be\u4ee5\u6349\u6478\u7684\u4fe1\u53f7-\u4ee5\u53ca\u5b83\u53ef\u4ee5\u7167\u4eae\u7684\u9ed1\u6697\u65f6\u4ee3\u3002\u66f4\u591a\u4fe1\u606f\uff1aW.Li\u7b49\u4eba\u3002\u7b2c\u4e00\u5b63MWA\u7b2c\u4e8c\u9636\u6bb5\u7684\u518d\u7535\u79bb\u529f\u7387\u8c31\u7ed3\u679c\u5728\u7ea2\u79fb7\uff0c\u5929\u4f53\u7269\u7406\u6742\u5fd7(2019\u5e74)\u3002\u7f51\u5740\uff1a10.3847/15384357/ab55e4", "note_en": "Today, stars fill the night sky. But when the universe was in its infancy, it contained no stars at all. And an international team of scientists is closer than ever to detecting, measuring and studying a signal from this era that has been traveling through the cosmos ever since that starless era ended some 13 billion years ago.    That team\u2014led by researchers at the University of Washington, the University of Melbourne, Curtin University and Brown University\u2014reported last year in the  Astrophysical Journal that it had achieved an almost 10-fold improvement of radio emission data collected by the Murchison Widefield Array. Team members are currently scouring the data from this radio telescope in remote Western Australia for a telltale signal from this poorly understood &#34; &#34; of our universe.\n    &#34;We think the properties of the universe during this era had a major effect on the formation of the first stars and set in motion the structural features of the universe today,&#34; said team member Miguel Morales, a UW professor of physics. &#34;The way matter was distributed in the universe during that era likely shaped how galaxies and galactic clusters are distributed today.&#34;\n  Before this dark age, the universe was hot and dense. Electrons and photons regularly snared one another, making the universe opaque. But when the universe was less than a million years old, electron\u2013photon interactions became rare. The expanding universe became increasingly transparent and dark, beginning its dark age.\n   The starless era lasted hundreds of millions of years during which neutral   \u2014  with no overall charge\u2014dominated the cosmos.\n  &#34;For this dark age, of course there&#39;s no light-based signal we can study to learn about it\u2014there was no visible light!&#34; said Morales. &#34;But there is a specific signal we can look for. It comes from all that neutral hydrogen. We&#39;ve never measured this signal, but we know it&#39;s out there. And it&#39;s difficult to detect because in the 13 billion years since that signal was emanated, our universe has become a very busy place, filled with other activity from stars, galaxies and even our technology that drown out the signal from the neutral hydrogen.&#34;\n    The 13 billion-year-old signal that Morales and his team are after is electromagnetic radio emission that the neutral hydrogen emanated at a wavelength of 21 centimeters. The universe has expanded since that time, stretching the signal out to nearly 2 meters.\n  That signal should harbor information about the dark age and the events that ended it, Morales said.\n  When the universe was just 1 billion years old, hydrogen atoms began to aggregate and form the first stars, bringing an end to the dark age. The light from those first stars kicked off a new era\u2014the Epoch of Reionization\u2014in which energy from those stars converted much of the neutral hydrogen into an ionized plasma. That plasma dominates interstellar space to this day.\n   &#34;The Epoch of Reionization and the dark age preceding it are critical periods for understanding features of our  , such as why we have some regions filled with galaxies and others relatively empty, the distribution of matter and potentially even dark matter and dark energy,&#34; said Morales.\n  The Murchison Array is the team&#39;s primary tool. This radio telescope consists of 4,096 dipole antennas, which can pick up low-frequency signals like the electromagnetic signature of neutral hydrogen.\n  But those sorts of low-frequency signals are difficult to detect due to electromagnetic &#34;noise&#34; from other sources bouncing around the cosmos, including galaxies,   and human activity. Morales and his colleagues have developed increasingly sophisticated methods to filter out this noise and bring them closer to that signal. In 2019, the researchers announced that they had filtered out electromagnetic interference\u2014including from our own radio broadcasts\u2014from more than 21 hours of Murchison Array data.\n  Moving forward, the team has about 3,000 hours of additional emission data collected by the radio telescope. The researchers are trying to filter out interference and get even closer to that elusive signal from  \u2014and the dark age it can illuminate.        More information:\t\t\t\t\t\t\t\t\t\t\t\tW. Li et al. First Season MWA Phase II Epoch of Reionization Power Spectrum Results at Redshift 7,  The Astrophysical Journal (2019).  DOI: 10.3847/1538-4357/ab55e4", "posttime": "2020-06-14 06:46:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b87\u5b99,year,\u4fe1\u53f7", "title": "\u6765\u81ea\u5b87\u5b99\u201c\u9ed1\u6697\u65f6\u4ee3\u201d\u7ec8\u7ed3\u7684120\u4ebf\u5e74\u524d\u7684\u4fe1\u53f7", "title_en": "12 Billion-year-old signal from the end of the universe's 'dark age'", "transed": 1, "url": "https://phys.org/news/2020-06-scientists-billion-year-old-universe-dark-age.html", "via": "", "real_tags": ["\u5b87\u5b99", "year", "\u4fe1\u53f7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006467, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f\u6240\u6709\u53ef\u4e0eULX3S FPGA ESP32\u677f\u914d\u5408\u4f7f\u7528\u7684\u793e\u533a\u9879\u76ee\u7684\u53d1\u6e90\u5730\u3002\n\u9ad8\u7ea7\u793a\u4f8bEmard\u7684ADC\u3001DVI\u3001JTAG\u3001OLED\u3001ov7670\u3001PS2\u3001SDRAM\u3001SPI RAM\u3001USB\u7b49\u3002\nf32c\u53ef\u91cd\u5b9a\u5411\u7684\u6807\u91cf\u6d41\u6c34\u7ebf32\u4f4d\u5904\u7406\u5668\u5185\u6838\uff0c\u53ef\u6267\u884cRISC-V\u6216MIPS\u7684\u5b50\u96c6\u3002\nFM\u8df3\u86a4\u6536\u97f3\u673a\u8c03\u9891\u6536\u97f3\u673aFPGA\u4e0e\u7b80\u5355\u7684RLC\u7f51\u7edc\u548c\u6a21\u62df\u6bd4\u8f83\u5668(\u7247\u4e0a\u63d0\u4f9b\uff0c\u4e0d\u9700\u8981ADC)\u3002\n\u7528\u4e8e\u57fa\u4e8eFPGA\u768432\u4f4dMIPS\u548cRISC-V\u8f6fCPU\u5185\u6838(F32c)\u7684FPGArduino Arduino\u5185\u6838\u6269\u5c55\u3002\u53e6\u8bf7\u53c2\u9605FPGArduino\u6e90\u4ee3\u7801\u3001\u6b64\u63cf\u8ff0\u3001\u6b64\u89c6\u9891\u548c\u6b64\u89c6\u9891\u3002\nJupiter Ace Ulx3S\u7684Jupiter Ace\u7248\u672c\uff0c\u4f7f\u7528PS/2\u952e\u76d8\uff0c\u5177\u6709HDMI\u8f93\u51fa\u3002\n\u5e26\u6709VexRiscv CPU\u7684Litex Linux Linux\uff0c\u8fd9\u662f\u4e00\u6b3e\u652f\u6301Linux\u768432\u4f4dRISC-V CPU\uff0c\u7528Spinal HDL\u7f16\u5199\u3002\nMicropython-ESP32 Emard\u516c\u53f8\u7684Micropython\u5728ESP32\u4e0a\u8fd0\u884c\uff1bLattice ECP5 FPGA JTAG\u7684JTAG\u7f16\u7a0b\u4e0e\u5237\u65b0\u3002\n\u5965\u5fb7\u4fee\u65af\u7814\u8ba8\u4f1a-\u53c2\u52a0\u5728\u8428\u683c\u52d2\u5e03\u4e3e\u884c\u7684Radiona\u6d3b\u52a8\u4e2d\u4f7f\u7528ULX3S\u7684FPGA\u5965\u5fb7\u4fee\u65af\u7814\u8ba8\u4f1a\u7684\u6750\u6599\u3002\nOrao Emard\u662fGrant Seale\u5728FPGA\u4e0a\u4eff\u771fCompukit UK101\u7684\u6770\u4f5c\u3002\n\u83f2\u5c3c\u514b\u65af\u62f1\u5eca\u57c3\u9a6c\u5fb7\u7684\u83f2\u5c3c\u514b\u65af(AMSTAR)FPGA-DAR-2016(\u4ec5\u4f9b\u6559\u80b2\u4f7f\u7528)\u3002\nRDS\u8c03\u5236\u5668\u7528\u4e8eFPGA\u7684RDS\u8c03\u5236\u5668\u6b64\u4ee3\u7801\u968fFM\u53d1\u5c04\u673a\u4e00\u8d77\u63d0\u4f9b\u3002\u4e0d\u9700\u8981\u5916\u90e8\u7ec4\u4ef6\u3002\nST7789\u663e\u793a\u5668\u4e0a\u7684SlabBoy\u6e38\u620f\u7537\u5b69\uff0c\u5b83\u8fd8\u4e0d\u80fd\u8fd0\u884cGameBoy\u6e38\u620f\uff0c\u4f46\u53ef\u4ee5\u8fd0\u884c\u7b80\u5355\u7684\u6c47\u7f16\u7a0b\u5e8f\u793a\u4f8b\u3002\nALI Express\u7684ST7789\u663e\u793a\u5668\u6162\u901fMicroPython\u9a71\u52a8\u7a0b\u5e8f\uff0c\u7528\u4e8e\u4e0d\u5e26CS\u5f15\u811a\u7684240x240 ST7789\u663e\u793a\u5668\u3002\nTI-99A\u4ece\u672a\u53d1\u5e03TI-99/4A\u7cfb\u5217\u4e2d\u7684\u5bb6\u7528\u8ba1\u7b97\u673a\uff0c\u5728ULX3S FPGA\u677f\u4e0a\u5b9e\u73b0\u3002\u53e6\u89c1TI99/2\u3002\nTic Tac Toe\u8fd9\u662f\u201cTic Tac Toe\u201d(\u96f6\u548c\u5341\u5b57)\u5728Verilog\u4e2d\u7684\u5b9e\u73b0\u3002\u7528\u6237\u4e0eFPGA\u5bf9\u6218\u3002\n\u5f00\u6e90FPGA\u8fd0\u52a8\u4e2d\u7684\u8c01\u4ebaHackaday\u5706\u684c\u4f1a\u8bae\u8ba8\u8bba2019\u5e74\u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48", "note_en": "This is the home of all the awesome repos and forks of community projects that can be used with the ULX3S FPGA ESP32 board.\n     Advanced Examples emard\u2019s ADC, DVI, JTAG, OLED, ov7670, PS2, SDRAM, SPI RAM, USB and more.\n                    f32c retargetable, scalar, pipelined, 32-bit processor core which can execute subsets of either RISC-V or MIPS\n  FM Flea Radio FM radio receiver for FPGA with simple RLC network and analog comparator (available on-chip, no ADC required).\n  FPGArduino Arduino core extensions for FPGA-based 32-bit MIPS and RISC-V soft CPU cores (f32c). See also  FPGArduino source,  this description,  this video and  this video\n        Jupiter Ace A version of the Jupiter Ace for the Ulx3s using a PS/2 keyboard, and with HDMI output.\n    LiteX Linux Linux with VexRiscv CPU, a 32-bits Linux Capable RISC-V CPU written in Spinal HDL\n      Micropython - ESP32 emard\u2019s micropython running on ESP32; JTAG programming and flashing of Lattice ECP5 FPGA JTAG\n        Odysseus Workshop - material for participation at FPGA Odysseus with ULX3S Workshop at Radiona event in Zagreb\n  Orao emard\u2019s fork of  Grant Seale\u2019s great work for emulation of Compukit UK101 on FPGA\n      Phoenix Arcade emard\u2019s Phoenix (Amstar) FPGA - DAR - 2016 (Educational use only)\n    RDS Modulator RDS modulator for FPGA; This code comes complete with FM transmitter. No external components are needed.\n    Slabboy gameboy on an ST7789 display, which can\u2019t yet run Gameboy games, but can run simple assembler examples\n      ST7789 display slow MicroPython driver for 240x240 ST7789 display without CS pin from Ali Express\n  TI-99 A never released home computer in the TI-99/4A family, implemented on the ULX3S fpga board. See also  TI99/2\n  Tic tac toe This is an implementation of \u201cTic Tac Toe\u201d (noughts and crosses) in Verilog. The user plays against the FPGA\n            Hackaday round table of who\u2019s-who in the Open Source FPGA movement discusses what\u2019s next in 2019", "posttime": "2020-06-14 06:29:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,fpga,runs", "title": "Hackable 150\u7f8e\u5143FPGA\u5728RISC-V\u53ca\u66f4\u591a\u5e73\u53f0\u4e0a\u8fd0\u884cLinux", "title_en": "Hackable 150$ FPGA runs Linux on RISC-V & more", "transed": 1, "url": "https://ulx3s.github.io/", "via": "", "real_tags": ["linux", "fpga", "runs"]}, {"category": "", "categoryclass": "", "imagename": "7e7fecb78bdb0957db227b29529a32cd.png", "infoid": 1006466, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f39\u6027\u5806\u6808(\u4e5f\u79f0\u4e3aELK)\u53ef\u4ee5\u4e3a\u60a8\u7684\u751f\u4ea7\u670d\u52a1\u5e26\u6765\u5f88\u591a\u4ef7\u503c\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u670d\u52a1\u4e2d\u4e0d\u4f7f\u7528\u7ed3\u6784\u5316\u65e5\u5fd7\uff0c\u90a3\u4e48\u5b83\u5c31\u6ca1\u6709\u592a\u5927\u7684\u4ef7\u503c\u3002\n\u5728\u6211\u6700\u8fd1\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\uff0c\u6211\u5199\u5230\u4e86\u9e8b\u9e7f\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f60\u5e94\u8be5\u5173\u5fc3\u5b83\u3002\u6211\u8fd8\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u5c06elk\u4e0e\u4f60\u7684Go\u5e94\u7528\u7a0b\u5e8f\u96c6\u6210\u7684\u6559\u7a0b\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u5e26\u60a8\u4e86\u89e3\u5982\u4f55\u5c06\u7ed3\u6784\u5316\u65e5\u5fd7\u8bb0\u5f55\u96c6\u6210\u5230Go\u670d\u52a1\u4e2d\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u5177\u6709\u51e0\u4e2a\u57fa\u672c\u7aef\u70b9\u7684\u793a\u4f8bHTTP\u670d\u52a1\uff0c\u5e76\u5c06\u4f7f\u7528zap\u5e93\u53d1\u51fa\u9519\u8bef/\u6210\u529f\u65e5\u5fd7\uff0c\u5176\u4e2d\u8fd8\u5c06\u5305\u62ec\u4e00\u4e9b\u7279\u5b9a\u4e8e\u57df\u7684\u4fe1\u606f\u3002\n\u76ee\u524d\uff0crepo\u6709\u4e00\u4e2amain.go\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5177\u6709\u4e09\u4e2a\u4e0d\u540c\u7aef\u70b9\u7684http\u5904\u7406\u7a0b\u5e8f\uff1a\n\u5904\u7406\u7a0b\u5e8f\u672c\u8eab\u5e76\u4e0d\u6267\u884c\u4efb\u4f55\u7279\u6b8a\u64cd\u4f5c\uff0c\u5b83\u4eec\u53ea\u662f\u5728\u88ab\u8c03\u7528\u65f6\u8fd4\u56de\u72b6\u6001OK\u3002\n\u76ee\u524d\uff0c\u5b83\u6240\u505a\u7684\u662f\u5c06\u6807\u51c6http.ResponseWriter\u5305\u88c5\u5230statusWriter\u4e2d\uff0c\u540e\u8005\u8bb0\u5f55\u8fd4\u56de\u7684http\u72b6\u6001\u4ee3\u7801\u3002\n\u9664\u4e86GO\u5e94\u7528\u7a0b\u5e8f\u4e4b\u5916\uff0c\u5728\u5206\u652f\u7684\u6839\u76ee\u5f55\u4e2d\u8fd8\u6709\u4e00\u4e2aGO-elk-Exercise-reqs.json\u6587\u4ef6\u3002\u5b83\u662f\u4e00\u7ec4\u5bfc\u51fa\u7684\u8bf7\u6c42\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u5bfc\u5165\u60a8\u9009\u62e9\u7684REST\u5ba2\u6237\u7aef\u3002\n\u6211\u7528\u7684\uff0c\u5e76\u63a8\u8350\u7684\uff0c\u662f\u5931\u7720\u75c7\u3002\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u8be5\u6587\u4ef6\uff0c\u53ea\u9700\u5c06\u8be5\u6587\u4ef6\u5bfc\u5165\u5230\u60a8\u7684\u5931\u7720\u5de5\u4f5c\u533a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5982\u679c\u4e00\u5207\u90fd\u6210\u529f\u4e86\uff0c\u60a8\u5c06\u83b7\u5f97\u6240\u6709\u5fc5\u8981\u7684HTTP\u8bf7\u6c42\u5bfc\u5165\u5230\u60a8\u7684\u5de5\u4f5c\u533a\u4e2d\uff0c\u5e76\u4e14\u6240\u6709\u5fc5\u8981\u7684\u6570\u636e(\u4f8b\u5982\u6807\u5934)\u90fd\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u3002\n\u6216\u8005\uff0c\u5982\u679c\u5bfc\u5165\u4e0d\u9002\u7528\u4e8e\u60a8\u7684REST\u5ba2\u6237\u7aef\uff0c\u4e0b\u9762\u662f\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u624b\u52a8\u6dfb\u52a0\u5b83\u4eec\uff1a\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5728\u6210\u529f(\u72b6\u6001\u7801\u5c0f\u4e8e400)\u6216\u9519\u8bef(\u72b6\u6001\u7801\u5927\u4e8e\u6216\u7b49\u4e8e400)\u65f6\u53d1\u51fa\u7ed3\u6784\u5316\u65e5\u5fd7\u6765\u5b8c\u6210loggingMiddleware\u529f\u80fd\u3002\n\u5982\u679c\u6210\u529f\uff0c\u6211\u4eec\u5c06\u901a\u8fc7logger.Info\u5199\u201c\u5165\u7ad9\u8bf7\u6c42\u6210\u529f\u201d\u3002\n\u5982\u679c\u51fa\u73b0\u9519\u8bef\u7684\u72b6\u6001\u7801\uff0c\u6211\u4eec\u4f1a\u5728\u9ed8\u8ba4\u7684\u9519\u8bef\u952e\u4e2d\u5199\u5165\u201c\u5165\u7ad9\u8bf7\u6c42\u5931\u8d25\uff0c\u72b6\u6001\u4e3a[\u8fd4\u56de\u7684\u72b6\u6001\u7801]\u201d\uff0c\u9ed8\u8ba4\u7684\u9519\u8bef\u952e\u4e2d\u4f1a\u5199\u4e0b\u201cInbound Request Failed with Status[Returned Status code]\u201d\u3002\n\u4ee5\u4e0b\u662f\u6211\u4eec\u5c06\u5728\u6559\u7a0b\u7ed3\u675f\u65f6\u53d1\u51fa\u7684\u793a\u4f8b\u65e5\u5fd7\u884c\uff1a\n\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u5c06\u4e00\u6b65\u4e00\u6b65\u5730\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u9010\u6b65\u4ecb\u7ecd\u5e94\u7528\u7a0b\u5e8f&&\u5b9e\u73b0\u7ed3\u6784\u5316\u65e5\u5fd7\u8bb0\u5f55\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u662f\u5982\u4f55\u5c06\u65e5\u5fd7\u4f5c\u4e3a\u4e2d\u95f4\u4ef6\u63d2\u5165\u7684\u3002\n\u8fd9\u4f7f\u5f97\u7f16\u5199\u57df\u7279\u5b9a\u903b\u8f91\u7684\u5f00\u53d1\u4eba\u5458\u4e0d\u77e5\u9053\u5982\u4f55\u8bb0\u5f55\u4ed6\u4eec\u7684HTTP\u8c03\u7528\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\n\u6b64\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u5728\u6bcf\u4e2a\u8981\u68c0\u6d4b\u7684\u7aef\u70b9\u4e0a\u91cd\u7528\u65e5\u5fd7\u4e2d\u95f4\u4ef6\uff0c\u800c\u4e0d\u662f\u5c06\u4ee3\u7801\u590d\u5236\u7c98\u8d34\u5230\u6bcf\u4e2a\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002\n\u6700\u540e\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6545\u610f\u4fdd\u6301\u7b80\u5355\u3002\u5728\u5b9e\u9645\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u6b64\u4e2d\u95f4\u4ef6\u4f5c\u4e3aFX\u6a21\u5757\u5305\u542b\u5728\u5185\uff0c\u4f5c\u4e3a\u6bcf\u4e2a\u5fae\u670d\u52a1\u7684\u57fa\u51c6FX\u6a21\u5757\u7684\u4e00\u90e8\u5206\u3002\n\u6211\u4eec\u5c06\u4ece\u7b80\u5355\u5730\u5bf9\u6bcf\u4e2a\u6210\u529f\u6216\u5931\u8d25\u7684http\u8c03\u7528\u53d1\u51fa\u65e5\u5fd7\u6d88\u606f\u5f00\u59cb\u3002\n\u5728\u540e\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e2a\u6570\u7ec4\u7528\u6211\u4eec\u60f3\u8981\u5728\u65e5\u5fd7\u4e2d\u53d1\u51fa\u7684\u7279\u5b9a\u952e\u586b\u5145\u5b83\u3002\n\u63a5\u4e0b\u6765\uff0c\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u4f7f\u7528logger.Info\u548clogger.Error\uff0c\u5e76\u663e\u793a\u5404\u81ea\u7684\u6210\u529f/\u9519\u8bef\u6d88\u606f\u3002\u8fd8\u5305\u62ec\u5f53\u524d\u4e3a\u7a7a\u4f46\u5c06\u5728\u4e0b\u4e00\u6b65\u4e2d\u586b\u5145\u7684\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\u5b57\u6bb5\u3002\n\u6211\u4eec\u8fd8\u5c06\u9519\u8bef\u6d88\u606f\u5c01\u88c5\u5728zap.Error\u5b57\u6bb5\u4e2d\u3002\u8fd9\u5c06\u5728\u5355\u72ec\u7684\u9519\u8bef\u5b57\u6bb5\u4e2d\u4f20\u64ad\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u4e14\u8fd8\u5c06\u5305\u62ec\u5806\u6808\u8ddf\u8e2a\u3002\n\u901a\u8fc7\u4f7f\u7528go run main.go\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u5e76\u4eceREST\u5ba2\u6237\u673a\u53d1\u9001http\u8bf7\u6c42\u6765\u6d4b\u8bd5\u4e00\u5207\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\n\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4e0b\u9762\u662f\u60a8\u5e94\u8be5\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u793a\u4f8b\u65e5\u5fd7\u884c\uff1a\n\u8ba9\u6211\u4eec\u7ee7\u7eed\u6dfb\u52a0\u6211\u4eec\u9700\u8981\u7684\u5176\u4f59\u5bc6\u94a5\u3002\n\u8981\u5c06\u8c03\u7528\u7684\u7aef\u70b9\u548cHTTP\u65b9\u6cd5\u5305\u62ec\u5728\u7ed3\u6784\u5316\u65e5\u5fd7\u4e2d\uff0c\u60a8\u5fc5\u987b\u4ece*http.Request\u5bf9\u8c61\u4e2d\u83b7\u53d6\u5b83\u4eec\u3002\n\u6267\u884c\u4e0e\u4e0a\u4e00\u8282\u7c7b\u4f3c\u7684\u6d4b\u8bd5\uff0c\u5e76\u770b\u5230\u60a8\u7684\u65e5\u5fd7\u73b0\u5728\u5305\u62ec\u7aef\u70b9\u548chttp\u65b9\u6cd5\uff1a\n\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecehttp\u8bf7\u6c42\u4e2d\u63d0\u53d6\u5934\u90e8\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u65e5\u5fd7\u4e2d\uff1a\n\u6dfb\u52a0\u6b64\u5185\u5bb9\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u5728\u672c\u7ec3\u4e60\u5f00\u59cb\u65f6\u770b\u5230\u9884\u671f\u7684\u65e5\u5fd7\uff1a\n\u73b0\u5728\uff0c\u60a8\u5e94\u8be5\u5df2\u7ecf\u5f88\u597d\u5730\u638c\u63e1\u4e86\u4ec0\u4e48\u662f\u7ed3\u6784\u5316\u65e5\u5fd7\uff0c\u4ee5\u53ca\u5982\u4f55\u5728Go\u670d\u52a1\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5982\u4f55\u5229\u7528\u5b83\u7684\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6211\u5728\u8fd9\u7bc7\u6587\u7ae0\u5f00\u5934\u94fe\u63a5\u7684\u5176\u4ed6\u4e00\u4e9b\u6587\u7ae0\u3002", "note_en": "The  Elastic stack (also referred to as ELK) can bring a lot of value to your production services. But it is not that much of value if you don\u2019t use structured logs in your services.\n In  one of my latest posts, I wrote about what ELK is and why you should care. I also wrote a tutorial about  how to integrate ELK with your Go app.\n In this article, I will walk you through how to integrate structured logging in your Go services. We will use a sample HTTP service with a few basic endpoints and we\u2019ll use the  zap library to emit logs on error/success, which would also include some domain-specific info.\n    Currently, the repo has a  main.go file which has http handlers for three different endpoints:\n  The handlers themselves don\u2019t do anything special, they simply return a  status OK when invoked.\n  Currently, what it does is it wraps the standard  http.ResponseWriter into a  statusWriter, which records the returned http status code.\n   In addition to the Go application, you have a file  go-elk-exercise-reqs.json in the branch\u2019s root. It is an exported set of requests you can import in a REST client of your choice.\n The one I use, and recommend, is  Insomnia. If you want to use that one, simply import the file in your insomnia workspace like this:\n    If everything was successful, you\u2019ll get all necessary HTTP requests imported in you workspace with all necessary data already setup (e.g. headers).\n Alternatively, if the import doesn\u2019t work for your rest client, here is what the requests are, so that you can add them manually:\n        In this tutorial, we\u2019ll complete the loggingMiddleware function by emitting structured logs on success (status code is less than 400) or error (status code is greater than or equal to 400).\n   In case of a success, we\u2019ll write  \u201cInbound request succeeded\u201d via  logger.Info.\n In case of a bad status code, we\u2019ll write  \u201cInbound request failed with status [returned status code]\u201d via  logger.Error in the default  error key.\n Here is an example log line we\u2019ll emit by the end of the tutorial:\n In the following section, I will walk you through how to achieve this step by step.\n  In this section, we will go through the application &amp; implement structured logging step by step.\n A noteworthy thing to notice is how we are plugging in logging as a middleware.\n This makes the developers writing the domain-specific logic unaware of the implementation details of how their http invocations are logged.\n Additionally, it allows us to reuse the logging middleware on each endpoint we want instrumented, rather than copy-pasting the code in each handler.\n And finally, this application is kept simple on purpose. In a real application, you might want to include this middleware as a  Fx module which you include as part of your baseline Fx modules for each of your microservices.\n    We\u2019ll start by simply emitting log messages on each successful or failed http call.\n  We\u2019ll use this array in the later steps to populate it with the specific keys we want to emit in our logs.\n Next, use  logger.Info and  logger.Error in the appropriate spots with their respective success/error messages. Also include all logging fields which are currently empty, but will be filled in in the next steps.\n We also encapsulate the error message in a  zap.Error field. This will propagate the error message in a separate  error field and will also include the stack trace.\n Test that everything works correctly by running your application using  go run main.go and sending an http request from your rest client.\n If everything went well, here is a sample log line you should see on your screen:\n    Let\u2019s move on with adding the rest of the keys we\u2019ll need.\n  To include the invoked endpoint and the HTTP method in the structured logs, you will have to take them from the  *http.Request object.\n  Make a similar test as in the previous section and see that your logs now include the endpoint and http method:\n    Here, we extract the headers from the http request and add them to our logs:\n After you add this, we should be able to see the log as expected from the beginning of this exercise:\n   You should now have a good grasp of what structured logs are and how to use them in your Go services.\n If you want to learn more about how to leverage it, check out some of the other articles I\u2019ve linked at the beginning of the post.", "posttime": "2020-06-14 06:10:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ed3\u6784\u5316,structured,\u65e5\u5fd7", "title": "Go\u4e2d\u7684\u7ed3\u6784\u5316\u65e5\u5fd7", "title_en": "Structured Logs in Go", "transed": 1, "url": "https://pmihaylov.com/go-structured-logs/", "via": "", "real_tags": ["\u7ed3\u6784\u5316", "\u65e5\u5fd7"]}, {"category": "", "categoryclass": "", "imagename": "100bf375773e0b6b1ce19fbb04944f8c.png", "infoid": 1006465, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4e0d\u4f1a\u6fc0\u6012\u52a8\u7269\u6743\u5229\u6d3b\u52a8\u5bb6\uff0c\u800c\u53ea\u4f1a\u6210\u4e3a\u5496\u5561\u56e0\u6e38\u8bf4\u8005\u7684\u7a9d\u70b9\u3002", "note_en": "Instead of irritating animal-rights activists we&#39;ll just end up being shills for the caffeine lobby.", "posttime": "2020-06-14 05:54:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sexually,\u6743\u5229", "title": "\u907f\u514d\u4f7f\u7528\u5e26\u6027\u529f\u80fd\u7684\u5341\u516d\u8fdb\u5236\u5e38\u91cf", "title_en": "Avoid sexually charged hexadecimal constants", "transed": 1, "url": "https://github.com/riscv/riscv-asm-manual/commit/219a2b2ee359e6feaab69033f228c528e800b8bd", "via": "", "real_tags": ["sexually", "\u6743\u5229"]}, {"category": "", "categoryclass": "", "imagename": "a62291d4590d1fd0bee058f8a5f13899.png", "infoid": 1006464, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\uff1b\u4ee5\u524d\u7684\u7248\u672c\uff0c()\u3002\u8fd9\u662f\u4fee\u6539\u5386\u53f2\u63d0\u8981\u7684\u6458\u8981\uff0c\u4e0e\u6211\u7684\u6350\u8d60\u8005\u5728Patreon\u4e0a\u5e26\u7ed9\u60a8\u7684\u5185\u5bb9\u91cd\u53e0\u3002\n\u7531\u4e8e\u8fbe\u5230\u4e86TinyLetter5000\u8ba2\u9605\u8005\u7684\u9650\u5236\uff0c\u8fd9\u4efd\u65f6\u4e8b\u901a\u8baf\u672c\u6708\u8f6c\u79fb\u5230\u4e86Substack\u3002\u9664\u4e86\u5df2\u77e5\u7684\u957f\u5ea6\u622a\u65ad\u95ee\u9898\u5916\uff0c\u8bf7\u544a\u8bc9\u6211\u4efb\u4f55\u95ee\u9898\u3002(\u8bf7\u6ce8\u610f\uff0c\u5728\u684c\u9762\u4e0a\u9605\u8bfb\u7f51\u7ad9\u7248\u672c\u662f\u6ce8\u91ca\u7b49\u7684\u63a8\u8350\u65b9\u5f0f\u3002)\u3002\nOn\uff0cBrown\u7b49\u4eba2020\u5e74(\u6bd4\u8f83\uff1b\u968f\u673a\u6837\u672c\uff1b\u5e26\u771f\u5b9e\u4e16\u754c\u6f14\u793a\u7684\u201cOpenAI\u201d)\u3002\n\u5b66\u4f1a\u5b66\u4e60\u3002OA\u53d1\u5e03\u4e86\u4eba\u4eec\u671f\u5f85\u5df2\u4e45\u7684\u540e\u7eed\u4ea7\u54c1\uff0c\u4e00\u4e2a\u53ef\u4ee5\u7edf\u6cbb\u6240\u6709\u4eba\u7684\u6a21\u578b\uff1a117\u2715\u7684175B\u53c2\u6570\u6a21\u578b\uff0c\u5b83\u5177\u6709\u66f4\u5f3a\u5927\u7684\u8bed\u8a00\u751f\u6210\u529f\u80fd\uff0c\u4f7f\u5b83\u80fd\u591f\u89e3\u51b3\u4ece\u7b97\u672f\u5230\u82f1\u8bed\u7ffb\u8bd1\uff0c\u4ece\u89e3\u5b57\u8c1c\u5230\u7c7b\u6bd4\u7684\u5404\u79cd\u95ee\u9898-\u7eaf\u7cb9\u662f\u4ece\u6587\u672c\u793a\u4f8b\u7684\u63d0\u793a\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u4e13\u95e8\u7684\u57f9\u8bad\u6216\u5fae\u8c03\uff0c\u53ea\u662f\u5bf9\u5927\u578b\u4e92\u8054\u7f51\u6587\u672c\u8bed\u6599\u5e93\u7684\u4e0b\u4e00\u8bcd\u9884\u6d4b\u8bad\u7ec3\u3002\u8fd9\u610f\u5473\u7740\u5b83\u7684\u6ce8\u610f\u529b\u673a\u5236\u8d77\u5230\u4e86\u901a\u8fc7\u8bad\u7ec3\u8db3\u591f\u591a\u6837\u7684\u6570\u636e1\u6765\u201c\u5b66\u4f1a\u5b66\u4e60\u201d\u7684\u4f5c\u7528\uff0c\u8feb\u4f7f\u5b83\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b66\u4e60\u666e\u901a\u7684\u6587\u672c\u5173\u7cfb\u3002\u5c31\u50cfOpenAI\u51e0\u5468\u524d\u5ba3\u5e03\u7684\u90a3\u6837\uff0c\u4f3c\u4e4e\u5df2\u7ecf\u6c89\u6ca1\u5f97\u51e0\u4e4e\u65e0\u5f71\u65e0\u8e2a\uff0c\u6240\u4ee5\u6211\u5c06\u6bd4\u5f80\u5e38\u66f4\u6df1\u5165\u3002\n\u201c\u653b\u51fb\u53ea\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\u201d\u4e24\u5e74\u524d\uff0c\u6709\u8da3\u7684\u662f\uff0c\u5b83\u7684\u201c\u60c5\u611f\u795e\u7ecf\u5143\u201d\u662f\u6709\u7528\u7684\u9884\u8bad\u548c\u53ef\u7231\u7684\u30021\u5e74\u524d\uff0c\u51ed\u501f\u5176\u51fa\u8272\u7684\u6587\u672c\u751f\u6210\u548c\u5fae\u8c03\u80fd\u529b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u4eca\u5e74\u662f\u53ef\u6015\u7684\u4e00\u5e74\uff0c\u56e0\u4e3a\u4e0e2\u76f8\u6bd4\uff0c\u5b83\u662f\u4e00\u4e2a\u5c0f\u800c\u6d45\u7684\u6a21\u578b\uff0c\u7b80\u5355\u7684\u7edf\u4e00\u4f53\u7cfb\u7ed3\u67843\u4ee5\u6700\u611a\u8822\u7684\u65b9\u5f0f(\u4e0b\u4e00\u4e2a\u6587\u672c\u4ee4\u724c\u7684\u5355\u5411\u9884\u6d4b)\u5728\u5355\u4e2a\u8d2b\u7a77\u7684\u6a21\u6001(\u968f\u673a\u4e92\u8054\u7f51\u6587\u672c\u8f6c\u50a84)\u4e0a\u5bf9\u5fae\u5c0f\u6570\u636e(\u9002\u5408\u7b14\u8bb0\u672c\u7535\u8111)\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u800c\uff0c\u7b2c\u4e00\u4e2a\u7248\u672c\u5df2\u7ecf\u8868\u73b0\u51fa\u75af\u72c2\u7684\u8fd0\u884c\u65f6\u5143\u5b66\u4e60-\u800c\u4e14\u4f38\u7f29\u66f2\u7ebf\u4ecd\u7136\u4e0d\u5f2f\u66f2\uff01\u8fd9\u4e9b\u6837\u672c\u4e5f\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u597d\uff0c\u65e0\u8bba\u662f\u53d1\u660e\u65b0\u7684\u9634\u830e\u7b11\u8bdd\uff0c\u8fd8\u662f\u5199\u5173\u4e8e\u65cb\u8f6c\u9635\u5217\u7684\u6587\u7ae0(\u5927\u90e8\u5206\u90fd\u662f\u6709\u6548\u7684)\u3002\n\u4e0d\u662f\u5168\u90e8\uff0c\u800c\u662f\u5f88\u5927\u4e00\u90e8\u5206\u3002\u5b83\u662f\u5728\u6bcf\u9879\u4efb\u52a1\u4e0a\u90fd\u8bbe\u7f6e\u7684\u5417\uff1f\u4e0d\uff0c\u5f53\u7136\u4e0d\u662f\u3002\u4f46\u95ee\u9898\u4e0d\u662f\u6211\u4eec\u80fd\u5426\u5728\u6cd5\u5f8b\u4e0a\u627e\u5230\u4efb\u4f55\u53ef\u80fd\u4e0d\u8d77\u4f5c\u7528\u7684\u65b9\u6cd5\uff0c\u800c\u662f\u3002\u800c\u4e14\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u66f4\u597d\u5730\u5de5\u4f5c(\u53c2\u89c1\u201c\u9650\u5236\u201d\u4e00\u8282\u4e2d\u7684\u51e0\u4e2a)\u3002\u6709\u6ca1\u6709\u50cf\u64cd\u7eb5\u673a\u5668\u4eba\u7ed5\u7740SF\u5411\u4eba\u7c7b\u53d1\u5c04\u6fc0\u5149\u548c\u706b\u7bad\u4e4b\u7c7b\u7684\u4e8b\u60c5\uff1f\u4e0d\uff0c\u5f53\u7136\u4e0d\u662f\u3002\u5b83\u201c\u4ec5\u4ec5\u201d\u662f\u4e00\u4e2a\u6587\u672c\u9884\u6d4b\u6a21\u578b\uff0c\u4e00\u4e2a\u611a\u8822\u7684\u6587\u672c\u4e13\u5bb6\uff1b\u4f46\u6211\u4eec\u5e94\u8be5\u8bb0\u4f4f\uff0c\u4e00\u4e2a\u611a\u8822\u7684\u4e13\u5bb6\u53ea\u662f\u4e00\u4e2a\u57fa\u56e0\u7a81\u53d8\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u8fdc\u79bb\u6b63\u5e38\u4eba\u7684\u5c0f\u8111\u635f\u4f24\u3002\u5982\u679cRL\u662f\u76d1\u7763\u5b66\u4e60\u9876\u90e8\u7684\u6a31\u6843\uff0c\u800c\u975e\u76d1\u7763\u5b66\u4e60\u662f\u65e0\u76d1\u7763\u5b66\u4e60\u86cb\u7cd5\u4e0a\u7684\u7cd6\u971c\uff0c\u90a3\u4e48\uff0c\u9762\u5305\u5e08\u4eec\u6b63\u5728\u53d8\u5f97\u76f8\u5f53\u4e0d\u9519\u3002\n\u7f29\u653e\u4ecd\u5728\u5de5\u4f5c\u3002\u6211\u5f88\u60ca\u8bb6\uff0c\u56e0\u4e3a\u6211\u9884\u8ba1\u66f4\u63a5\u8fd1100b\u7684\u53c2\u6570\uff0c\u6211\u8ba4\u4e3a/\u7684\u6027\u80fd\u8868\u660e\uff0c\u5c3d\u7ba1\u6709\u7f29\u653e\u8bba\u65876\uff0c\u4f46\u7f29\u653e\u66f2\u7ebf\u5df2\u7ecf\u5f00\u59cb\u5f2f\u66f2\uff0c\u5230100b\u65f6\uff0c\u53ef\u80fd\u5f88\u96be\u8bc1\u660e\u8fdb\u4e00\u6b65\u7f29\u653e\u662f\u5408\u7406\u7684\u3002\u7136\u800c\uff0c\u5728\u6bd4\u4f8b\u56e0\u5b50\u6ca1\u6709\u660e\u663e\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fbe\u5230\u4e86\u8fd9\u4e2a\u6570\u5b57\u7684\u4e24\u500d\uff1a\u5b83\u7684\u6bd4\u4f8b\u4ecd\u7136\u5927\u81f4\u662f\u5bf9\u6570/\u5e42\u5f8b\uff0c\u5c31\u50cf\u9884\u6d4b\u7684\u90a3\u6837\uff0c\u89c4\u6a21\u5c0f\u5f97\u591a\u7684\u6a21\u578b\u4e5f\u6ca1\u6709\u8fbe\u5230\u8fd9\u6837\u7684\u6c34\u5e73\uff0c\u5373\u6536\u76ca\u5b9e\u9645\u4e0a\u505c\u6b62\u589e\u957f\uff0c\u6216\u8005\u5f00\u59cb\u9700\u8981\u5927\u5e45\u63d0\u9ad8\uff0c\u8fdc\u8fdc\u8d85\u51fa\u4e86\u53ef\u884c\u6027\u3002\u8fd9\u8868\u660e\uff0c\u91c7\u7528\u6570\u4e07\u4ebf\u4e2a\u53c2\u6570\u662f\u53ef\u80fd\u7684\uff0c\u4e5f\u662f\u6709\u7528\u7684(\u8fd9\u4e9b\u53c2\u6570\u4ecd\u5728\u53ef\u7528\u8ba1\u7b97\u548c\u5b89\u57f9\u9884\u7b97\u4e4b\u5185\uff0c\u53ea\u9700\u8981\u6570\u5343\u4e2a\u6807\u666e\u9884\u7b97\uff0c\u6216\u8bb8\u9700\u89811000\u4e07\u81f31\u4ebf\u7f8e\u5143\u9884\u7b97\uff0c\u5047\u8bbe\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u5584\uff0c\u53c2\u89c1\u672c\u671f\u7684Hernandez&amp\uff1bBrown 2020\u7b49)\uff0c\u518d\u770b\u770b\u56fe\u8868\uff0c\u8bb8\u591a\u57fa\u51c6(\u6bd4\u5982)\u5c06\u4e0b\u964d10\u4e2a\u53c2\u6570\u3002\n\u201c\u6839\u636e\u201d\u8fc8\u5411\u672a\u6765\u201c\u7684\u58ee\u89c2\u8868\u73b0\u63a8\u65ad\uff0c\u751f\u547d\u3001\u5b87\u5b99\u548c\u4e07\u7269\u7684\u7b54\u6848\u4ec5\u4ec5\u662f4.398\u4e07\u4ebf\u4e2a\u53c2\u6570\u3002\u201d\n\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u8bad\u7ec3NN\u3002\u6b63\u5982\u6211\u4e00\u76f4\u8bf4\u7684\u90a3\u6837\uff0c\u201cNN\u662f\u61d2\u60f0\u7684\u201d\uff0c\u5f53\u6211\u4eec\u63a8\u52a8\u4ed6\u4eec\u8d85\u8d8a\u7b80\u5355\u7684\u7b54\u6848&\u5ec9\u4ef7\u7684\u6377\u5f84\u65f6\uff0c\u4ed6\u4eec\u80fd\u505a\u7684\u6bd4\u6211\u4eec\u8ba9\u4ed6\u4eec\u505a\u7684\u8981\u591a\u5f97\u591a\u3002\u8d8a\u786c\u8d8a\u5927\uff0c\u8d8a\u597d\u3002(\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u63d0\u5230\u534a\u76d1\u7763\u5b66\u4e60\u7684\u6700\u65b0\u8fdb\u5c55&\u57fa\u4e8e\u6a21\u578b\u7684\u590d\u5174\u3002)\u3002\n\u89c4\u6a21\u7684\u597d\u5904\uff1a\u7a33\u5b9a\u6027\uff0c\u2192\uff0c\u6cdb\u5316\uff0c\u2192\uff0c\u5143\u5b66\u4e60\u3002\u867d\u7136DL\u53d7\u5230\u5176\u8bad\u7ec3\u548c\u6570\u636e\u7684\u963b\u788d\uff0c\u4f46DL\u5374\u4eab\u53d7\u7740\u4e00\u79cd\u4e0d\u5408\u7406\u6709\u6548\u7684\u7ef4\u5ea6\u52a0\u6301--\u4ec5\u4ec5\u5728\u5927\u91cf\u6570\u636e\u4e0a\u7b80\u5355\u5730\u8bad\u7ec3\u4e00\u4e2a\u5927\u578b\u6a21\u578b\u5c31\u80fd\u4ea7\u751f\u66f4\u597d\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5143\u5b66\u4e60\uff0c\u800c\u4e0d\u9700\u8981\u5728\u67b6\u6784\u4e2d\u5efa\u7acb\u54ea\u6015\u662f\u4e00\u4e01\u70b9\u7684\u4e1c\u897f\uff1b\u603b\u7684\u6765\u8bf4\uff0c\u5728\u66f4\u591a\u66f4\u96be\u7684\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\u4f1a\u521b\u9020\u51fa\u66f4\u63a5\u8fd1\u4eba\u7c7b\u7684\u6027\u80fd\u3001\u901a\u7528\u6027\u548c\u5065\u58ee\u6027\u3002OA5\u4e0d\u4ec5\u53ef\u4ee5\u6269\u5c55\u5230\u6570\u767e\u4e07\u4e2a\u5c0f\u6279\u91cf\uff0c\u800c\u4e14\u53ef\u4ee5\u7a33\u5b9a\u5728\u6570\u767e\u4e07\u4e2a\u5c0f\u6279\u91cf\u3002OA5-Like\u5728\u5927\u89c4\u6a21\u56fe\u50cf\u6570\u636e\u96c6(\u5982&amp\uff1b\u53d7\u76ca\u4e8e\u5f02\u5e38\u5927\u7684\u5c0f\u6279\u91cf)\u65f6\u7a33\u5b9a\uff0c\u800c\u5206\u7c7b\u5668(\u5982Transfer&amp\uff1bRobutify)\u5177\u6709\u7c7b\u4f3c\u4eba\u7c7b\u7684\u9519\u8bef7\uff0c\u591a\u6a21\u6001\u5b66\u4e60\u5728\u8f83\u5c11\u7684\u6570\u636e(\u4f8b\u5982\uff0c\u6fc0\u52b1)\u4e0a\u4ea7\u751f\u66f4\u597d\u7684\u8868\u793a\uff0c\u800cS\u53ef\u4ee5\u3002\u8fbe\u5230\u4eba\u7684\u6c34\u5e73\uff0c\u4e0e\u6570\u767e\u540d\u7ade\u4e89\u7684\u81ea\u6211\u53c2\u4e0e\u8005\u4e00\u8d77\u8986\u76d6\u53ef\u80fd\u7684\u7b56\u7565\u3002\u6a21\u4eff\u5b66\u4e60\u559c\u6b22\u6982\u62ec\u5728\u51e0\u767e\u4e2a\u4efb\u52a1\u4e0a\uff0c\u8bad\u7ec3\u51fa\u4e00\u5f20\u6df1\u539a\u7684\u7f51\u3002\u5f53W\u5d4c\u5165\u8db3\u591f\u6df1\u65f6\uff0c\u6216\u8005\u5728//\u6709\u8db3\u591f\u7684\u6837\u672c\u4ee5\u5f3a\u5236\u56e0\u5f0f\u5206\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u89e3\u7f20\u51fa\u73b0\u3002\u5728\u6570\u767e\u4e07\u4e2a\u57df\u968f\u673a\u7684\u8bad\u7ec3\u4e2d\uff0c\u8bf1\u5bfc\u4e86\u7c7b\u4f3c\u7684\u9690\u5f0f\u5143\u5b66\u4e60\uff0c\u5728\u6bcf\u4e2a\u8fd0\u884c\u65f6\u8c03\u7528\u671f\u95f4\uff0c\u63a2\u6d4b\u5176\u73af\u5883\u5e76\u5c06\u5176\u5bf9\u673a\u5668\u4eba\u624b\u63a7\u5236\u7684\u7406\u89e3\u7f16\u7801\u5230\u5176\u9690\u85cf\u72b6\u6001\uff1b\u5e76\u4e14\u901a\u8fc72\u9636\u7f29\u653e\u6bd4\u4f20\u7edf\u7684\u673a\u5668\u4eba\u89c4\u5212\u5668\u6027\u80fd\u66f4\u597d\u3002\u6216\u8005\uff0c\u6570\u767e\u4e2a\u7ea7\u522b\u7684\u57f9\u8bad\u5355\u72ec\u57f9\u8bad\u7279\u5de5\uff0c\u4f46\u5728\u6570\u5343\u4e2a\u7ea7\u522b\uff0c\u4ed6\u4eec\u5f00\u59cb\u6982\u62ec\u5230\u770b\u4e0d\u89c1\u7684\u7ea7\u522b\u3002\u4ec5\u4ec5\u901a\u8fc7\u8bad\u7ec3\u4e00\u4e2a\u66f4\u5927\u7684\u6a21\u578b\u6765\u7814\u7a76\u66f4\u4e30\u5bcc\u7684\u4fe1\u53f7\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u641c\u7d22\uff0c\u5c31\u8bc1\u660e\u4e86\u771f\u6b63\u7684\u8d85\u4eba\u4e0d\u4f1a\u4ea7\u751f\u201c\u9519\u89c9\u201d&\u800c\u4e14\uff0c\u5c31\u8fd9\u4e00\u70b9\u800c\u8a00\uff0c\u8fd8\u5c55\u793a\u4e86\uff0c\u4ec5\u4ec5\u662f\u7aef\u5230\u7aef\u5730\u8bad\u7ec3\uff0c\u6839\u636e\u8db3\u591f\u7684\u6570\u636e\u9884\u6d4b\u5956\u52b1\uff0c\u5c31\u8db3\u4ee5\u53d6\u4ee3AlphaZero\uff0c\u9690\u542b\u5730\u5b66\u4e60\u6811\u641c\u7d22(\u4f46\u66f4\u597d)\u3002\u4e0d\u80dc\u679a\u4e3e\u3002\n\u4f38\u7f29\u6027\u5047\u8bbe\u8ba4\u4e3a\uff0c\u4e00\u65e6\u6211\u4eec\u627e\u5230\u4e86\u50cf\u81ea\u6211\u5173\u6ce8\u6216\u5377\u79ef\u8fd9\u6837\u7684\u53ef\u6269\u5c55\u67b6\u6784\uff0c\u6211\u4eec\u53ea\u9700\u8bad\u7ec3\u8d8a\u6765\u8d8a\u5927\u7684NN\uff0c\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u884c\u4e3a\u5c31\u4f1a\u81ea\u7136\u800c\u7136\u5730\u6210\u4e3a\u9488\u5bf9\u6240\u6709\u4efb\u52a1\u548c\u6570\u636e\u8fdb\u884c\u4f18\u5316\u7684\u6700\u7b80\u5355\u65b9\u5f0f\uff0c\u8fd9\u4e00\u5047\u8bbe\u770b\u8d77\u6765\u8d8a\u6765\u8d8a\u53ef\u4fe1\u3002\n\u4e00\u76f4\u5728\u8ffd\u8e2a\u30022020\u5e74\u662f\u56de\u987e\u8fc7\u53bb\u5341\u5e74\u7684\u6700\u597d\u65f6\u673a\u3002\u57282010\u5e74\uff0c\u4eba\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u628a\u4e16\u754c\u4e0a\u6240\u6709\u771f\u6b63\u76f8\u4fe1\u6df1\u5ea6\u5b66\u4e60\u7684\u4eba\u90fd\u5b89\u6392\u5230\u4e00\u4e2a\u4e2d\u7b49\u5927\u5c0f\u7684\u4f1a\u8bae\u5ba4\u91cc(\u5176\u4e2d3\u4e2a\u4eba\u6b63\u5728\u5fd9\u4e8e\u521b\u5efa\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u7a0d\u5fae\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e2e\u52a9)\u30022010\u5e74\uff0c\u5bf9\u673a\u5668\u5b66\u4e60\u611f\u5174\u8da3\u7684\u4eba\u53ef\u80fd\u5df2\u7ecf\u8bfb\u5230\u4e86\u4e00\u4e9b\u5173\u4e8e\u4f7f\u7528\u5168\u90e8100-200\u4e07\u4e2a\u53c2\u6570\u8bc6\u522b\u624b\u5199\u6570\u5b57\u7684\u5185\u5bb9\uff0c\u6216\u8005\u5bf9\u6807\u51c6\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u8bed\u97f3\u8bc6\u522b\u8fdb\u884c\u4e86\u4e00\u4e9b\u9002\u5ea6\u7684\u795e\u7ecf\u8c03\u6574\u3002\u57282010\u5e74\uff0c\u8c01\u4f1a\u9884\u6d4b\uff0c\u5728\u63a5\u4e0b\u6765\u768410\u5e74\u91cc\uff0c\u6df1\u5ea6\u5b66\u4e60\u5c06\u7ecf\u5386\u5bd2\u6b66\u7eaa\u7684\u7206\u70b8\uff0c\u5bfc\u81f4\u6574\u4e2a\u673a\u5668\u5b66\u4e60\u4e2d\u66ff\u4ee3\u65b9\u6cd5\u7684\u5927\u89c4\u6a21\u706d\u7edd\uff0c\u6a21\u578b\u5c06\u6269\u5c55\u52301.75\u4ebf\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e9b\u5de8\u5927\u7684\u6a21\u578b\u5c06\u81ea\u53d1\u5730\u53d1\u5c55\u6240\u6709\u8fd9\u4e9b\u80fd\u529b\uff0c\u9664\u4e86\u5c11\u6570\u88ab\u4eba\u5de5\u667a\u80fd\u793e\u533a\u5176\u4ed6\u4eba(\u522b\u7ba1\u4e16\u754c)\u8ba4\u4e3a\u662f\u6545\u610f\u6b3a\u9a97\u7684\u8001\u6d3e\u72c2\u70ed\u5206\u5b50\u4e4b\u5916\u7684\u5c11\u6570\u987d\u56fa\u8fde\u63a5\u4e3b\u4e49\u8005\uff0c\u5982Schmidhuber\uff0cSutskever\uff0cLegg\uff0c&Amp\uff1bAmot\uff1b\n\u540e\u89c1\u4e4b\u660e\u662f20/20\u3002\u5373\u4f7f\u57282015\u5e74\uff0c\u6269\u5c55\u5047\u8bf4\u4f3c\u4e4e\u4e5f\u975e\u5e38\u503c\u5f97\u6000\u7591\uff1a\u6bd5\u7adf\uff0c\u4f60\u9700\u8981\u4e00\u4e9b\u4e1c\u897f\u6765\u8fdb\u884c\u6269\u5c55\uff0c\u800c\u4e14\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u5230\u73b0\u6709\u7cfb\u7edf\u4e2d\u7684\u7f3a\u9677\uff0c\u7136\u540e\u60f3\u8c61\u5b83\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6d88\u5931\uff0c\u8fdb\u5c55\u4f1a\u5728\u73b0\u5728\u4efb\u4f55\u4e00\u4e2a\u6708\u3001\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u3002\u5c31\u50cf\u57fa\u56e0\u7ec4\u5b66\u9769\u547d\u4e00\u6837\uff0c\u51e0\u4f4d\u6709\u8fdc\u89c1\u7684\u9884\u8a00\u5bb6\u63a8\u65ad\uff0c\u80da\u80ce\u6240\u9700\u7684\u57fa\u56e0\u5c06\u5448\u6307\u6570\u7ea7\u589e\u957f&\u5f88\u5feb\u5c31\u4f1a\u4ea7\u751f\u5f3a\u5927\u7684\u57fa\u56e0\uff0c\u800c\u6e05\u9192\u7684\u4e13\u5bb6\u5219\u5bf9\u201c\u7f3a\u5931\u7684\u9057\u4f20\u6027\u201d\u7ede\u5c3d\u8111\u6c41&\u5632\u7b11\u8fd9\u6837\u7684n\u8981\u6c42\u5982\u4f55\u88ab\u8bc1\u660e\u662f\u4e00\u4e2a\u5931\u8d25\u7684\u8303\u5f0f\u3002\u672a\u6765\u4e00\u5f00\u59cb\u662f\u7f13\u6162\u7684\uff0c\u7136\u540e\u5f88\u5feb\u5c31\u4f1a\u5230\u6765\u3002\u7136\u800c\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\uff1a\u6240\u6709\u7684\u8363\u8a89\u5c5e\u4e8e\u72c2\u70ed\u8005\uff0c\u803b\u8fb1\u548c\u803b\u8fb1\u5c5e\u4e8e\u6279\u8bc4\u8005\uff018\u5982\u679c\u6709\u4eba\u80fd\u56de\u523010\u5e74\u524d\uff0c\u751a\u81f35\u5e74\u524d\uff0c\u770b\u7740\u6bcf\u4e00\u4f4d\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u8bfb\u5230\u8fd9\u7bc7\u8bba\u6587\u2026\u90fd\u4f1a\u5934\u6655\u76ee\u7729\u5c31\u597d\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u73b0\u5728\u4f3c\u4e4e\u6ca1\u6709\u51e0\u4e2a\u4eba\u5934\u8111\u53d1\u70ed\uff0c\u56e0\u4e3a\u4eba\u7c7b\u4e8b\u540e\u8bf8\u845b\u4eae\u7684\u80fd\u529b\u662f\u65e0\u7a77\u65e0\u5c3d\u7684(\u201c\u6211\u53ef\u4ee5\u901a\u8fc7\u5fae\u8c03\u5f97\u5230\u90a3\u4e48\u591a\uff0c\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u4e00\u76f4\u90fd\u9884\u6d4b\u5230\u4e86\uff0c\u591a\u4e48\u65e0\u804a\u201d)\u3002(\u5982\u679c\u60a8\u4ecd\u7136\u786e\u5b9a\u5728\u672a\u6765\u51e0\u5341\u5e74\u5185\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u53ef\u80fd\u6027\u51e0\u4e4e\u4e3a\u96f6\uff0c\u4e3a\u4ec0\u4e48\uff1f\u4f60\u6709\u6ca1\u6709--\u4e66\u9762\u9884\u6d4b--\u50cf\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u8fd9\u662f\u4f60\u8ba4\u4e3a\u4eba\u5de5\u667a\u80fd\u5931\u8d25\u5728\u672a\u6765\u51e0\u5341\u5e74\u7684\u6837\u5b50\u5417\uff1f\u4ec0\u4e48\u5177\u4f53\u7684\u4efb\u52a1\uff0c\u4ec0\u4e48\u5177\u4f53\u7684\u6570\u5b57\uff0c\u4f1a\u8ba9\u4f60\u4fe1\u670d\u5462\uff1f\u4e16\u754c\u770b\u8d77\u6765\u4f1a\u6709\u4ec0\u4e48\u4e0d\u540c\n\uff0cHernandez&amp\uff1bBrown 2020(/\uff1b\u7b2c\u4e00\u4e2a\u539f\u578b\u4ece\u6765\u4e0d\u662f\u6700\u597d\u7684\u539f\u578b\uff0c\u4f46\u5982\u679c\u6709\u8db3\u591f\u7684\u8ba1\u7b97\u65f6\u95f4\uff0c\u60a8\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6539\u8fdb\uff0c\u5e76\u5f04\u6e05\u695a\u5e94\u8be5\u5982\u4f55\u4ece\u5934\u5230\u5c3e\u5b8c\u6210\u5b83\uff0c\u672c\u6587\u91cf\u5316\u4e86\u81ea2012\u5e74\u4ee5\u6765\u7684\u795e\u7ecf\u7f51\u7edc\u786c\u4ef6\u8fc7\u5269\uff1a\u201c\u73b0\u5728\u8bad\u7ec3\u2715\u9700\u8981\u7684\u8ba1\u7b97\u51cf\u5c11\u4e8644\u2026\u3002\u8fbe\u5230AlexNet\u7684\u6c34\u5e73\u201c\u3002\u4e0d\u8db3\u4e3a\u5947(\u5982in)\uff1b\u53c2\u9605/\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u8bad\u7ec3\u6b63\u786e\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u7528\u6700\u7b80\u5355\u7684\u4e8b\u60c5\u72af\u4e0b\u5de8\u5927\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u80fd\u529b\u4f1a\u50cfResnet\u6216EfficientNet\u4e00\u6837\u8df3\u8dc3\uff0c\u6216\u8005\u5076\u5c14\u63d0\u9192\u6211\u4eec\u3002)\u3002\n\uff0cSvyatkovski\u7b49\u4eba2020\u5e74(\u4e0d\u6e05\u695a\u662f\u5426\u5e94\u7528\uff1b\u53e6\u8bf7\u53c2\u9605\u5c11\u6570\u4ee3\u7801\u5b8c\u6210\u529f\u80fd)\u3002\n(\uff1b\u4e00\u4e2a\u6a21\u578b\uff0c7\u4e2a\u6570\u636e\u96c6\uff0c8900\u4e07\u5f20\u56fe\u50cf\uff0c83\u4e2a\u635f\u5931/\u4efb\u52a1\uff0c\u5168\u7403\u641c\u7d22\u8d28\u91cf\u63d0\u5347+8%)\u3002\n()\uff1b(\u4e00\u4e2a\u7b80\u5355\u4f46\u9ad8\u8d28\u91cf\u7684\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0a\u627e\u5230\uff1b\u6709\u8da3\u7684\u662f\uff0c\u7531\u4e8e\u6cd5\u5f8b\u4e0a\u7684\u6a21\u7cca\u6027&amp\uff1b\u4e00\u4e9b\u827a\u672f\u5bb6\u5982\u4f55\u8868\u73b0\u5f97\u50cf\u52a8\u7269\u4e00\u6837\uff0c\u5486\u54ee\u7740\u201c\u5077\u7a83\u201d&amp\uff1b\u514d\u8d39\u7684Fursonas\u662f\u4e00\u53ea\u7a7f\u7740\u7f8a\u76ae\u7684\u72fc\uff0c\u6270\u4e71\u4e86\u4ed6\u4eec\u7684\u5544\u98df\u987a\u5e8f9-\u5c3d\u7ba1\u521b\u4f5c\u8005\u5df2\u7ecf\u667a\u80dc\u4e86\u7eb8\u8001\u864e\u7684\u5a01\u80c1\uff0c\u4f46\u8fd9\u4e9b\u4ee4\u4eba\u4e0d\u5feb\u7684\u95ee\u9898\u5c06\u56f0\u6270ML\uff0c\u56e0\u4e3aDL\u6a21\u7279\u50cf\u5154\u5b50\u4e00\u6837\u7e41\u6b96)\u3002\n\uff0cSommers&Amp\uff1bBohns 2019(\u4eba\u4eec\u4e0d\u5584\u4e8e\u9884\u6d4b\u5bf9\u8b66\u65b9\u8981\u6c42\u7684\u62b5\u5236\uff1b\u53e6\u89c1)\u3002\n\uff0cHedrick 2017 10(\u201c\u2026\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5343\u5e74\u91cc\uff0c\u6211\u4eec\u4eba\u7c7b\u4e00\u76f4\u662f\u5730\u7403\u4e0a\u60a3\u75c5\u6700\u4e25\u91cd\u7684\u7269\u79cd\u201c\uff1b\u8ddf\u8fdb)\u3002\n\uff0cDANES&A\uff1bWidom 2020(\u5fc3\u7406\u5b66\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u662f\u6709\u610f\u4e49\u7684\uff0c\u9664\u975e\u4ece\u4e2a\u4f53\u5dee\u5f02\u7684\u89d2\u5ea6\u6765\u770b)\u3002\n\uff0cCurran&amp\uff1bHauser 2019(\u201c\u8725\u8734\u4eba\u6052\u5b9a\u201d\u54cd\u5e94\u8005\u5982\u4f55\u8bc1\u660e\u8fd9\u4e00\u70b9\uff1f\u6216\u8005\uff0c\u201c\u81ea\u7531\u56de\u5e94\u662f\u9b54\u9b3c\u201d)\n\uff0cBigelow\u7b49\u4eba2014(\u4e3a\u4ec0\u4e48\u6570\u636e\u53ef\u89c6\u5316\u5982\u6b64\u7cdf\u7cd5-\u8868\u9762\u4e0a\u5f88\u6f02\u4eae\uff0c\u4f46\u5374\u5177\u6709\u8bef\u5bfc\u6027\u6216\u65e0\u7528\uff1f\u56e0\u4e3a\u8bb8\u591a\u8bbe\u8ba1\u5e08\u4e0d\u770b\u6570\u636e\uff0c\u6240\u4ee5\u907f\u514d\u81ea\u52a8\u624b\u52a8\u521b\u5efa\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6f02\u4eae\u7684\u5f62\u72b6/\u989c\u8272&amp\uff1b\u559c\u6b22\u6446\u5f04\u6570\u636e\uff0c\u800c\u5ffd\u7565\u4e86\u8bfb\u8005)\u3002\nYanet al 2020(\u201c\u91c7\u7528\u5e7f\u544a\u62e6\u622a\u5668\u7684\u7528\u6237\u968f\u540e\u6d88\u8d39\u5bf9\u5e94\u4e8e10%\u591a\u4e2a\u7c7b\u522b\u768420%\u4ee5\u4e0a\u7684\u65b0\u95fb\u6587\u7ae0\u3002\u8fd9\u79cd\u5f71\u54cd\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6301\u7eed\u5b58\u5728\u2026\u201c\u3002\uff1b\u8bf7\u53c2\u9605)\u3002\n(\u4f9b\u9700\u60c5\u51b5\uff1a\u5982\u679c\u5141\u8bb8\u6da8\u4ef7\uff0c\u53e3\u7f69\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u5f88\u5bb9\u6613\u5236\u9020&\u51fa\u552e\u5e76\u4e0d\u8fdd\u6cd5)\u3002\n(\u5f17\u5170\u514b\u00b7\u5e03\u62c9\u8428(Frank Bourassa)\u5982\u4f55\u6b3a\u9a97\u4e00\u5bb6\u745e\u58eb\u78e8\u574a\u5411\u4ed6\u51fa\u552e\u72ec\u4e00\u65e0\u4e8c\u7684\u4e9a\u9ebb\u7eb8\uff0c\u4e3aPerfect&amp\uff1b\u521b\u9020\u4e863.1725\u4ebf\u7f8e\u5143\u76842.012\u4ebf\u7f8e\u5143\uff0c\u57fa\u672c\u4e0a\u900d\u9065\u6cd5\u5916)\u3002\n\u201cun Jour joueur\u201d(\u4e4c\u9e26\u7684Jig\uff1bune semaine chez les\u00c9carlates{2018})[\u53e4\u5178]\u3002\n\u201cBons et Mauvais jours\u201d(Raven\u2018s Jig\uff1bune semaine chez les\u00c9carlates{2018})[\u53e4\u5178]\u3002\n\u201c\u5df4\u5c14\u8482\u9a6c\u5c14\u7684\u65e9\u6668\u201d(Mane in Green\uff1bII.The Journey[\u8ff7\u5931\u84dd\u5b9d\u77f3\u7684\u63a2\u7d22-EP\u30022]{2017})[\u5668\u4e50\u6447\u6eda]\u3002\n\u201c\u98ce\u66b4\u6765\u4e86[\u5355\u4e00\u76ee\u7684\u7684\u56de\u5fc6]\u201d(UnDreamedPanic\u58ee\u4e3e\u3002Metajoker\uff1bIgnite{2020})[\u5ca9\u77f3]\n\u201c\u6765\u5427\uff0c\u751c\u871c\u7684\u6b7b\u795e[Komm\uff0cS\u00fcsser Tod]\u201d(\u666e\u62c9\u8482\u5a1c\u7235\u58eb\u58ee\u4e3e\u3002Niklas Gabrielsson\uff1b\u52a8\u753b\u6807\u51c6\u7b2c6\u5377{2019})[\u7235\u58eb\u4e50]\u3002\n(\u73b0\u5728)\u8ba1\u7b97\u6210\u672c\u51e0\u4e4e\u4e0d\u4f1a\u8d85\u8fc7\u51e0\u767e\u4e07\u7f8e\u5143\uff0c\u800c\u4e14\u8fd0\u884c\u6210\u672c\u4e5f\u5f88\u4f4e(\u7b2c39\u9875\uff1a\u201c\u5373\u4f7f\u6709\u5b8c\u6574\u7684175B\uff0c\u4ece\u4e00\u4e2a\u8bad\u7ec3\u6709\u7d20\u7684\u6a21\u578b\u751f\u6210100\u9875\u5185\u5bb9\u7684\u6210\u672c\u5927\u7ea6\u662f0.4\u5343\u74e6\u65f6\uff0c\u6216\u8005\u53ea\u9700\u8981\u51e0\u7f8e\u5206\u7684\u80fd\u6e90\u6210\u672c\u3002\u201d)\uff0c\u800c(\u5426\u5219\u65e0\u7528\u7684)\u6df1\u84dd\u4eba\u5de5\u667a\u80fd\u9879\u76ee\u636e\u8bf4\u8981\u82b1\u8d39&GT\uff1b\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\u76841051.97\u4ebf\u7f8e\u5143(1.91\u4ebf\u7f8e\u5143\u7684\u62a5\u544a\u4f3c\u4e4e\u4e0e\u8bb8\u5b97\u8861\u7684\u300a\u6df1\u84dd\u80cc\u540e\u300b(Pg187)\u4e2d\u63d0\u5230\u7684\u5ba3\u4f20\u9884\u4f30\u4ef7\u503c\u76f8\u6df7\u6dc6)\uff0c\u4ee5\u53ca\u50cfBlow&GT\uff1b5000\u2715\u8fd9\u6837\u7684\u5927\u79d1\u5b66\u9879\u76ee\u7684\u8d44\u91d1\u5927\u591a\u5931\u8d25\u4e86\u3002\u51e0\u5341\u5e74\u524d\uff0c\u7528\u5168\u7403\u8ba1\u7b97\u8d44\u6e90\u548c\u79d1\u5b66\u9884\u7b97\u5c31\u53ef\u4ee5\u505a\u5230\uff1b\u800c\u4eca\u5929\u7684\u786c\u4ef6\u548c\u9884\u7b97\uff0c\u6211\u4eec\u6839\u672c\u4e0d\u77e5\u9053\u6216\u4e0d\u60f3\u505a\uff0c\u53c8\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\u5b58\u5728\u786c\u4ef6\u60ac\u7f6e\u3002(\u53e6\u8bf7\u53c2\u9605\u5168\u8111\u4eff\u771f\u8def\u7ebf\u56fe&amp\uff1b)\u21a9\ufe0e\u3002\n\u4f8b\u5982\uff0c\u4e0d\u4f7f\u7528\u6216\u795e\u7ecf\u4f53\u7cfb\u7ed3\u6784\u641c\u7d22\u6765\u5c1d\u8bd5\u5b9a\u5236\u6a21\u578b\uff0c\u751a\u81f3\u4e0d\u51b3\u5b9a\u57fa\u672c\u7684\u8d85\u53c2\u6570\uff0c\u5982\u5bbd\u5ea6(\u5982\u56fe\u6240\u793a\uff0c\u5373\u4f7f\u5728\u201c\u6613\u4e8e\u7406\u89e3\u548c\u624b\u5de5\u4f18\u5316\u7684\u9999\u8349\u4f53\u7cfb\u7ed3\u6784\u201d\u4e2d\uff0c\u8fd9\u4e5f\u4f1a\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c)\u3002\u21a9\ufe0e\u3002\n\u751a\u81f3\u6ca1\u6709-\u6240\u4ee5\u6ca1\u6709\u8c37\u6b4c\u56fe\u4e66\uff0c\u6ca1\u6709Arxiv\uff0c\u6ca1\u6709\u5229\u666e\u6839\uff0c\u6ca1\u6709Sci-Hub\u2026\u3002\u21a9\ufe0e\u3002\n\u201c\u4e00\u4e2a\u7537\u4eba\u5728\u533b\u751f\u7684\u529e\u516c\u5ba4\uff0c\u533b\u751f\u544a\u8bc9\u4ed6\uff0c\u201d\u6211\u6709\u4e00\u4e9b\u597d\u6d88\u606f\u548c\u4e00\u4e9b\u574f\u6d88\u606f\u8981\u544a\u8bc9\u4f60\u3002\u201c/\u90a3\u4e2a\u4eba\u8bf4\uff0c\u201d\u55ef\uff0c\u6211\u73b0\u5728\u4e0d\u80fd\u63a5\u53d7\u8fd9\u4e2a\u574f\u6d88\u606f\uff0c\u6240\u4ee5\u5148\u544a\u8bc9\u6211\u8fd9\u4e2a\u597d\u6d88\u606f\u3002\u201c/\u533b\u751f\u8bf4\uff0c\u201d\u597d\u6d88\u606f\u662f\u4f60\u6709\u4e00\u4e2a18\u82f1\u5bf8\u7684\u9634\u830e\u3002\u201c/\u8fd9\u4e2a\u4eba\u770b\u8d77\u6765\u5446\u4e86\u4e00\u4f1a\u513f\uff0c\u7136\u540e\u95ee\uff0c\u201d\u574f\u6d88\u606f\u662f\u4ec0\u4e48\uff1f\u201c/\u533b\u751f\u8bf4\uff0c\u201d\u55ef\uff0c\u597d\u6d88\u606f\u662f\u4f60\u6709\u4e00\u4e2a18\u82f1\u5bf8\u7684\u9634\u830e\u3002\u201c/\u8fd9\u4e2a\u7537\u4eba\u770b\u8d77\u6765\u5446\u4e86\u4e00\u4f1a\u513f\uff0c\u7136\u540e\u95ee\uff0c\u201d\u574f\u6d88\u606f\u662f\u4ec0\u4e48\uff1f\u201c/\u533b\u751f\u8bf4\uff0c\u201d\u55ef\uff0c\u597d\u6d88\u606f\u662f\u4f60\u7684\u9634\u830e\u670918\u82f1\u5bf8\u3002\u201c\u3002\u201c\u4f60\u7684\u8111\u5b50\u5728\u4f60\u90a3\u8bdd\u513f\u91cc\u3002\u201d\u201c\u21a9\ufe0e\u201d\n\u5177\u4f53\u5730\u8bf4\uff1a\u3001\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u5927\u578b\u6a21\u578b\u7684\u8ffd\u6c42\u51e0\u4e4e\u5b8c\u5168\u662f\u7531OpenAI&amp\uff1b\u884c\u4e1a\u5b9e\u4f53\u63a8\u52a8\u7684(\u540e\u8005\u6ee1\u8db3\u4e8e\u5c0f\u5f97\u591a\u7684\u6a21\u578b)\uff0c\u5b66\u672f\u754c\u8868\u73b0\u51fa\u4e86\u51e0\u4e4e\u5b8c\u5168\u7684\u538c\u6076(\u751a\u81f3\u662f\u538c\u6076)\u3002\u5c3d\u7ba1\u6240\u6709\u7684\u6bd4\u4f8b\u5047\u8bbe\u662f\u201c\u663e\u800c\u6613\u89c1\u7684\u201d\uff0c\u6bd4\u4f8b\u662f\u201c\u9884\u6d4b\u7684\u201d\uff0c\u4f46\u4eba\u4eec\u5bf9\u5b9e\u9645\u64cd\u4f5c\u7684\u5174\u8da3\u5374\u975e\u5e38\u5c0f\u3002\u4e5f\u8bb8\u6211\u4eec\u5e94\u8be5\u66f4\u591a\u5730\u5173\u6ce8\u4eba\u4eec\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u8bf4\u4ec0\u4e48\u3002\u21a9\ufe0e\u3002\n\u56fe\u50cf\u7f29\u653e\u5b9e\u9a8c\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u65b9\u9762\u662f\uff0c\u5373\u4f7f\u5728\u539f\u59cb\u4efb\u52a1\u7684\u6027\u80fd\u201c\u6301\u5e73\u201d\u4e8e\u63a5\u8fd1\u6807\u7b7e\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\uff0c\u8fc1\u79fb\u5b66\u4e60\u4ecd\u5728\u7ee7\u7eed\u6539\u5584\u3002\u663e\u7136\uff0c\u5185\u90e8\u8868\u793a\uff0c\u5373\u4f7f\u4ec5\u7528\u4e8e\u5206\u7c7b\uff0c\u56e0\u6b64\u5206\u6570\u4e0d\u80fd\u589e\u52a0\u8d85\u8fc7\u4e00\u4e2a\u5c0f\u7684\u767e\u5206\u6bd4\uff0c\u4e5f\u4f1a\u53d8\u5f97\u66f4\u50cf\u4eba\u7c7b\u7684\u7f16\u7801\uff1f\u6211\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u8bed\u8a00\u6a21\u578b\uff0c\u635f\u5931\u7684\u6700\u540e\u4e00\u90e8\u5206\u4f3c\u4e4e\u5bf9\u751f\u6210\u7684\u6837\u672c\u8d28\u91cf\u6709\u5f88\u5927\u5f71\u54cd\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u53ea\u6709\u5728\u5b8c\u6210\u4e86\u6240\u6709\u66f4\u7b80\u5355\u7684\u5efa\u6a21\u4e4b\u540e\uff0c\u61d2\u60f0\u7684\u8bed\u8a00\u6a21\u578b\u624d\u88ab\u8feb\u901a\u8fc7\u66f4\u6b63\u786e\u5730\u5efa\u6a21\u66f4\u590d\u6742\u7684\u4e1c\u897f(\u5982\u903b\u8f91\u3001\u5bf9\u8c61\u3001\u4e16\u754c\u77e5\u8bc6\u7b49)\u6765\u6324\u51fa\u4e0b\u4e00\u6b65\u7684\u6027\u80fd\u3002\u21a9\ufe0e\u3002\n\u73b0\u5728\uff0c\u8fd9\u79cd\u53ef\u80fd\u6027\u5f88\u5c0f\uff0c\u800c\u4e14\u5df2\u7ecf\u5f00\u59cb\u8ba9\u52a0\u91cc\u00b7\u9a6c\u5e93\u65af(Gary Marcus)\u7b49\u4eba\u5bf9WinoGrande\u611f\u5230\u6709\u70b9\u7d27\u5f20\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5f00\u59cb\u601d\u8003\u4e3a\u4ec0\u4e48Winograd\u6a21\u5f0f\u662f\u5e38\u8bc6\u63a8\u7406/\u667a\u80fd\u7684\u826f\u597d\u8861\u91cf\u6807\u51c6(\u56e0\u4e3a\u667a\u80fd\uff0c\u5f53\u7136\uff0c\u662f\u4efb\u4f55\u4eba\u5de5\u667a\u80fd\u8fd8\u4e0d\u80fd\u505a\u7684\u4e8b\u60c5)\u3002\u21a9\ufe0e\n\u522b\u62c5\u5fc3\uff1a\u6211\u4eec\u5df2\u7ecf\u6709\u7a7a\u5934--\u505a\u7a7a\u548c\u505a\u7a7a\u8033\u6735--\u6765\u5bf9\u51b2\u5f17\u7d22\u7eb3\u901a\u80c0\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u5efa\u8bae\u572890\u5e74\u4ee3\u7684\u5f62\u8c61\u5b8f\u89c2\u57fa\u91d1\u4e2d\u6301\u6709\u5927\u91cf\u5934\u5bf8\uff0c\u4ee5\u4fbf\u4ece\u8f6c\u5411\u4f18\u8d28\u548c\u7f8a\u7fa4\u7684\u8fc7\u7a0b\u4e2d\u53d7\u76ca\uff1a\u8fd9\u5c06\u662f\u4e00\u4e2a\u53e4\u602a\u503a\u5238\u7684\u718a\u5e02-\u8fd9\u5e76\u4e0d\u662f\u725b\u5e02\u3002\u21a9\ufe0e\u3002\n\uff0cSabin&amp\uff1bBoulger 1973(\u5728\u7334\u5b50\u548c\u7334\u5b50\u7ec4\u7ec7\u4e2d\u7a7f\u884c\u6570\u5341\u6b21)\u3002\n\u21a9\ufe0e", "note_en": "This is the   edition of  ; previous,   ( ). This is a summary of the revision-history   feed, overlapping with my   &amp;  ; brought to you by my donors on  Patreon.\n The newsletter moved this month to  Substack due to reaching the TinyLetter 5000-subscriber limit. Please let me know of any issues beyond the known issue of length truncation. (Note that reading the website version on desktop is the recommended way for annotations etc.)\n On  , Brown et al 2020 ( , compare  ;  random samples;  \u201cOpenAI  \u201d with real-world demos)\n Learning to learn. OA releases the long-awaited followup to  , one model to rule them all: a 117\u2715 larger 175b-parameter model with far more powerful language generation, which lets it solve a wide variety of problems from arithmetic to English translation to unscrambling anagrams to   analogies\u2014purely from being prompted with text examples, without any specialized training or finetuning whatsoever, merely next-word prediction training on a big Internet text corpus. This implies  \u2019s attention mechanisms serve as   that have \u201clearned to learn\u201d by training on sufficiently varied data  1, forcing it to do more than just learn ordinary textual relationships. Like OpenAI\u2019s   just weeks ago, the announcement of   appears to have sunk almost without a trace, so I will go into more depth than usual.\n \u201cAttacks only get better.\u201d 2 years ago,   was interestingly useful pretraining and adorable with its \u201csentiment neuron\u201d. 1 year ago,   was impressive with its excellent text generation &amp; finetuning capabilities. This year,   is scary because it\u2019s a small &amp; shallow model compared to what\u2019s possible  2, with a simple uniform architecture  3 trained in the dumbest way possible (unidirectional prediction of next text token) on a single impoverished modality (random Internet   text dumps  4) on tiny data (fits on a laptop), and yet, the first version already manifests crazy runtime meta-learning\u2014and the scaling curves  still are not bending! The samples are also better than ever, whether it\u2019s   inventing new penis jokes  5 or writing (mostly working)   about rotating arrays.\n Not the whole picture, but a big part. Does it set   on every task? No, of course not. But the question is not whether we can lawyerly find any way in which it might not work, but  . And there are many ways it might work better (see the  \u201cLimitations\u201d section for just a few). Does    do anything like steer a robot around SF shooting lasers and rockets at humans? No, of course not. It is \u2018just\u2019 a text prediction model, an idiot savant of text; but an idiot savant, we should remember, is only a genetic mutation or bit of brain damage away from a normal human. If RL is the cherry on the top of the supervised learning, and unsupervised learning is the frosting on top of the unsupervised learning cake, well, the bakers are getting pretty good.\n Scaling still working. I was surprised, as I had expected closer to 100b parameters, and I thought that the performance of  / / / / /  suggested that, the scaling papers  6 notwithstanding, the scaling curves had started to bend and by 100b, it might be hard to justify further scaling. However,   hits twice that without noticeable change in scaling factors: its scaling continues to be roughly logarithmic/power-law, as it was for much smaller models &amp; as forecast, and it has not hit a regime where gains effectively halt or start to require increases vastly beyond feasibility. That suggests that it would be both possible and useful to head to trillions of parameters (which are still well within available compute &amp; budgets, requiring merely thousands of  s &amp; perhaps $10\u2013$100m budgets assuming no improvements which of course there will be, see Hernandez &amp; Brown 2020 etc in this issue), and eyeballing the graphs, many benchmarks like the     would fall by 10t parameters.\n \u201cExtrapolating the spectacular performance of   into the future suggests that the answer to life, the universe and everything is just 4.398 trillion parameters.\u201d\n We don\u2019t know how to train NNs. As I keep saying, \u201cNNs are lazy\u201d and can do far more than we make them do when we push them beyond easy answers &amp; cheap shortcuts. The   is the harder and bigger, the better. (Besides  , one could mention recent progress in semi-supervised learning &amp; the model-based   renaissance.)\n Blessings of scale: stability\u2192generalization\u2192meta-learning.   is hamstrung by its training &amp; data, but DL enjoys an unreasonably effective blessing of dimensionality\u2014just simply training a  big model on a  lot of data induces better properties like meta-learning without even the slightest bit of that architecture being built in; and in general, training on more and harder tasks creates ever more human-like performance, generalization, and robustness.  OA5 does not just scale to, but stabilizes at, minibatches of millions due to  . OA5-like,   stabilizes at large-scale image datasets like   &amp; benefits from unusually large minibatches, while classifier  s like   transfer &amp; robustify with human-like errors  7, multimodal learning produces better representations on less data (eg  / , motivating  ), and  s can  .   reaches human-level with hundreds of competing self-players to cover possible strategies. Imitation learning   like   generalizes at hundreds of tasks to train a deep net. Disentanglement emerges in   with sufficiently deep  w embeddings, or in  / /  with enough samples to force factorization. Training   on millions of domain randomizations induced similar implicit meta-learning where during each runtime invocation, the   probes its environment and encodes its understanding of robot hand control into its hidden state; and   outperforms classical robot planners by scaling 2 orders. Or in  , training on hundreds of levels trains agents individually, but at thousands of levels, they begin to generalize to unseen levels.   demonstrated truly superhuman Go without \u2018delusions\u2019 just by training a bigger model on a richer signal &amp; pro-level play without any search\u2014and  , for that matter, demonstrated that just training an   end-to-end to predict a reward on enough data is enough to obsolete even AlphaZero and learn tree search implicitly (but better). And on and on.\n The  scaling hypothesis that, once we find a scalable architecture like self-attention or convolutions, we can simply train ever larger NNs and ever more sophisticated behavior will emerge naturally as the easiest way to optimize for all the tasks &amp; data, looks increasingly plausible.\n Keeping track.   in 2020 makes as good a point as any to take a look back on the past decade. In 2010, one could easily fit everyone in the world who genuinely believed in deep learning into a moderate-sized conference room (assisted slightly by the fact that 3 of them were busy founding  ). Someone interested in machine learning in 2010  might have read about some stuff in recognizing hand-written digits using all of 1\u20132 million parameters, or some modest neural tweaks to standard hidden Markov model voice-recognition. In 2010, who would have predicted that over the next 10 years, deep learning would undergo a Cambrian explosion causing a mass extinction of alternative approaches throughout machine learning, that models would scale up to 175,000 million parameters, and that these enormous models would just spontaneously develop all these capabilities, aside from a few diehard connectionists written off as willfully-deluded old-school fanatics by the rest of the AI community (never mind the world), such as  , Schmidhuber, Sutskever, Legg, &amp; Amodei?\n Hindsight is 20/20. Even in 2015, the scaling hypothesis seemed highly dubious: you needed something to scale, after all, and it was all too easy to look at flaws in existing systems and imagine that they would never go away and progress would sigmoid any month now, soon. Like the genomics revolution where a few far-sighted seers extrapolated that the necessary  n for  es would increase exponentially &amp; deliver powerful  es soon, while sober experts wrung their hands over \u201cmissing heritability\u201d &amp; the miraculous complexity of biology &amp; scoff about how such  n requirements proved   was a failed paradigm, the future arrived at first slowly and then quickly. Yet, here we are: all honor to the fanatics, and shame and humiliation to the critics!  8 If only one could go back 10 years, or even 5, to watch every AI researchers\u2019 head explode reading this paper\u2026 Unfortunately, few heads appear to be exploding now, because human capacity for hindsight &amp; excuses is boundless (\u201cI can get that much with finetuning, anyway I predicted it all along, how boring\u201d) and  . (If you are still  certain that there is near-zero probability of   in the next few decades, why? Did you predict\u2014in writing\u2014capabilities like  ? Is this how you expect AI failure to look in the decades beforehand? What specific task, what specific number, would convince you otherwise? How would the world look different than it does now if these crude prototype insect-brain-sized DL systems were not on a path to success?)\n Authority without accountability. What should we think about the experts? Projections of failure were made by eminent, respectable, serious people. They spoke in considered tones of why AI hype was excessive and might trigger an \u201cAI winter\u201d, and the fundamental flaws of fashionable approaches and why brute force could not work. These statements were made routinely in 2014, 2015, 2016\u2026 And they were wrong. I am aware of few issuing a  mea culpa or reflecting on it.\n Phatic, not predictive. There is, however, a certain tone of voice the bien pensant all speak in, whose sound is the same whether right or wrong; a tone shared with many statements in January to March of this year; a tone we can also find in a 1940  Scientific American article authoritatively titled,  , which advised the reader to not be concerned about it any longer \u201cand get sleep\u201d. (\u2018It\u2019 was the atomic bomb, about which certain scientists had stopped talking, raising public concerns; not only could it happen, the British bomb project had already begun, and 5 years later it did happen.)\n The iron law of bureaucracy: Cathedral gothic. This tone of voice is the voice of  . The voice of authority insists on calm, and people not \u201cpanicking\u201d (the chief of sins). The voice of authority assures you that it won\u2019t happen (because it can\u2019t happen). The voice utters simple arguments about why the status quo will prevail, and considers only how the wild new idea could fail (and not all the possible options). The voice is not, and does not deal in, uncertainty; things will either happen or they will not, and since it will not happen, there is no need to take any precautions (and you should not worry because it can\u2019t happen). The voice does not believe in drawing lines on graphs (it is rank numerology). The voice does not issue any numerical predictions (which could be falsified). The voice is opposed to unethical things like randomized experiments on volunteers (but will overlook the insult). The voice does not have a model of the future (because a model implies it does not already know the future). The voice is concerned about its public image (and unkind gossip about it by other speakers of the voice). The voice is always sober, respectable, and credentialed (the voice would be pleased to write an op-ed for your national magazine and/or newspaper). The voice speaks, and is not spoken to (you cannot ask the voice what objective fact would change its mind). The voice never changes its mind (until it does). The voice is never surprised by events in the world (only disappointed). The voice advises you to go back to sleep (right now).\n , Hernandez &amp; Brown 2020 ( / ; the first prototype is never the best one, but given enough compute &amp; time, you can refine it and figure out how it should have been done all along, and this paper quantifies the neural net hardware overhang just since 2012: \u201cit now takes 44\u2715 less compute to train\u2026to the level of AlexNet\u201d. Unsurprising\u2014eg the   in  :  ; see  / . We don\u2019t know how to train the right kind of neural nets and make huge mistakes with the simplest things, as capability jumps like resnets or EfficientNet or   occasionally remind us.)\n , Svyatkovskiy et al 2020 (unclear if application of  ; see also the   few-shot code completion abilities)\n ( ; one model, 7 datasets, 89m images, 83 losses/tasks, and +8% search quality boost worldwide)\n     ( );     (a simple but high-quality   of  , also available on  ; interesting for how   due to legal fuzziness &amp; some artists acting like animals, howling about \u2018theft\u2019 &amp; free fursonas being a wolf in sheep\u2019s clothing upsetting their pecking order  9\u2014though the creator has outfoxed the paper tiger threats, these kittlesome questions will dog ML as DL models multiply like rabbits)\n      , Sommers &amp; Bohns 2019 (people are bad at predicting resistance to police requests; see also  )\n  , Hedrick 2017  10 (\u201c\u2026for the past few thousand years, we human beings have been the most diseased species on earth\u201d; followup to  )\n   , Danese &amp; Widom 2020 (nothing in psychology makes sense except in the light of individual-differences)\n  , Curran &amp; Hauser 2019 (how do \u201clizardman constant\u201d responders justify it? Or, \u2018free response is the devil\u2019)\n  , Bigelow et al 2014 (why are data visualizations so bad\u2014superficially pretty but misleading or useless? Because many designers don\u2019t look at the data, avoid automation &amp; create manually so they can focus on pretty shapes/colors &amp; enjoying fiddling with it, and ignore readers)\n , Yan et al 2020 (\u201cUsers who adopt ad blockers subsequently consume 20% more news articles corresponding to 10% more categories. The effect persists over time\u2026\u201d; see  )\n  (supply and demand: masks can be easily made anywhere  if prices are allowed to rise &amp; they are not illegal to sell)\n (how Frank Bourassa tricked a Swiss mill into selling him the unique   linen-paper to create  $317            250   2012m in perfect   &amp; mostly got away with it)\n  \u201cUn Jour Joueur\u201d (Raven\u2019s Jig;  Une Semaine chez les \u00c9carlates {2018}) [classical]\n \u201cBons et mauvais Jours\u201d (Raven\u2019s Jig;  Une Semaine chez les \u00c9carlates {2018}) [classical]\n  \u201cMorning in Baltimare\u201d (Mane in Green;  II. The Journey [The Quest of the Lost Sapphire\u2014Ep. 2] {2017}) [instrumental rock]\n     \u201cThe Storm Is Coming   [Single Purpose Remix]\u201d (UndreamedPanic feat. Metajoker;  Ignite {2020}) [rock]\n  \u201cCome, Sweet Death [ Komm, s\u00fcsser Tod]\u201d (Platina Jazz feat. Niklas Gabrielsson;   Anime Standards Vol. 6 {2019}) [jazz]\n hardly costs more than a few million dollars of compute (now) and is cheap to run (pg39: \u201cEven with the full   175B, generating 100 pages of content from a trained model can cost on the order of 0.4 kW-hr, or only a few cents in energy costs.\u201d), while  \u2019s (otherwise useless) Deep Blue AI project reputedly cost &gt; $10            5   1997m for the final iteration (reports of  $192            100   1997m appear to be a confusion with the estimated value of  publicity mentioned in pg187 of Hsu\u2019s  Behind Deep Blue) and Big Science projects like   blow &gt;5000\u2715 the funding to mostly fail.   could have been done decades ago with global computing resources &amp; scientific budgets; what could be done with today\u2019s hardware &amp; budgets that we just don\u2019t know or care to do? There  is a hardware overhang. (See also the   Whole Brain Emulation Roadmap &amp;  .) \u21a9\ufe0e\n Eg no use of   or neural architecture search to try to tailor the model, or even decide basic hyperparameters like widths (which as   shows, can make quite a different even in \u201cwell-understood and hand-optimized vanilla architectures\u201d). \u21a9\ufe0e\n Not even  s\u2014so no Google Books, no Arxiv, no Libgen, no Sci-Hub\u2026 \u21a9\ufe0e\n \u2018A man is at the doctor\u2019s office, and the doctor tells him, \u201cI\u2019ve got some good news and some bad news for you.\u201d / The man says, \u201cWell, I can\u2019t take the bad news right now, so give me the good news first.\u201d / The doctor says, \u201cWell, the good news is that you have an 18-inch penis.\u201d / The man looks stunned for a moment, and then asks, \u201cWhat\u2019s the bad news?\u201d / The doctor says, \u201cYour brain\u2019s in your dick.\u201d\u2019 \u21a9\ufe0e\n Specifically:  ,  ,  ,  ,  ,  ,  ,  . It is noteworthy that the pursuit of large models is driven almost exclusively by OpenAI &amp; industry entities (the latter of which are content with far smaller models), and that academia has evinced an almost total disinterest (disgust, even). For all that the scaling hypothesis is \u2018obvious\u2019 and scaling is \u2018predicted\u2019, there is remarkably little interest in actually  doing it. Perhaps we should pay more attention to what people do rather than what they say. \u21a9\ufe0e\n One interesting aspect of image scaling experiments is that even when performance is \u2018plateauing\u2019 on the original task &amp; approaching label error, the transfer learning continues to improve. Apparently the internal representations, even when adequate for mere classification and so the score cannot increase more than a small percentage, become more human-like\u2014encoding  ? I\u2019ve noticed with language models, the final fractions of a loss appear to make a substantial difference to generated sample quality, perhaps because it is only after all the easier modeling is finished that the lazy language model is forced to squeeze out the next bit of performance by more correctly modeling more sophisticated things like logic, objects, world-knowledge, etc. \u21a9\ufe0e\n Now that  \u2019s few-shot and   have begun to make people like Gary Marcus feel slightly nervous about WinoGrande, they have begun   for why Winograd schemas   good measures of commonsense reasoning/intelligence (because intelligence, of course, is whatever AI can\u2019t do yet). \u21a9\ufe0e\n Don\u2019t worry: we already have short-shorts &amp; ear-  to hedge against fursona inflation. That said, we advise taking a large position in equineties image macro funds to benefit from a flight to quality and herding: it\u2019ll be a bear market for kinky bonds\u2014and that\u2019s no bull. \u21a9\ufe0e\n , Sabin &amp; Boulger 1973 (making     by dozens of passages through monkeys &amp; monkey tissues)\n \u21a9\ufe0e", "posttime": "2020-06-14 05:53:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gpt,reflections,\u5b66\u4e60", "title": "\u5173\u4e8eGPT-3\u8003\u8bd5\u7684\u51e0\u70b9\u601d\u8003", "title_en": "Reflections on GPT-3", "transed": 1, "url": "https://www.gwern.net/newsletter/2020/05#gpt-3", "via": "", "real_tags": ["gpt", "\u5b66\u4e60"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006462, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u4fee\u526a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\u5df2\u7ecf\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3\uff0c\u56e0\u4e3a\u5728\u8bad\u7ec3\u548c\u9a8c\u8bc1\u671f\u95f4\u6f5c\u5728\u5730\u8282\u7701\u4e86\u65f6\u95f4\u3001\u5185\u5b58\u548c\u7cbe\u529b\u3002\u6700\u8fd1\u7684\u5de5\u4f5c\u5df2\u7ecf\u901a\u8fc7\u4e00\u7cfb\u5217\u6602\u8d35\u7684\u8bad\u7ec3\u548c\u4fee\u526a\u5468\u671f\u786e\u5b9a\u4e86\u5728\u521d\u59cb\u5316\u65f6\u4e2d\u5956\u5f69\u7968\u6216\u7a00\u758f\u96e8\u5b50\u7f51\u7edc\u7684\u5b58\u5728\u3002\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u672c\u95ee\u9898\uff1a\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u65f6\u8bc6\u522b\u9ad8\u5ea6\u7a00\u758f\u7684\u53ef\u8bad\u7ec3\u5b50\u7f51\u7edc\uff0c\u800c\u4e0d\u9700\u8981\u7ecf\u8fc7\u8bad\u7ec3\uff0c\u751a\u81f3\u4e0d\u9700\u8981\u67e5\u770b\u6570\u636e\uff1f\u6211\u4eec\u901a\u8fc7\u7406\u8bba\u9a71\u52a8\u7684\u7b97\u6cd5\u8bbe\u8ba1\u7ed9\u51fa\u4e86\u80af\u5b9a\u7684\u7b54\u6848\u3002\u6211\u4eec\u9996\u5148\u7528\u6570\u5b66\u516c\u5f0f\u548c\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u4e00\u4e2a\u5b88\u6052\u5b9a\u5f8b\uff0c\u5b83\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u73b0\u6709\u7684\u57fa\u4e8e\u68af\u5ea6\u7684\u526a\u679d\u7b97\u6cd5\u5728\u521d\u59cb\u5316\u65f6\u4f1a\u906d\u53d7\u5c42\u574d\u584c\uff0c\u6574\u4e2a\u5c42\u7684\u8fc7\u65e9\u526a\u679d\u4f1a\u5bfc\u81f4\u7f51\u7edc\u4e0d\u53ef\u8bad\u7ec3\u3002\u8fd9\u4e00\u7406\u8bba\u8fd8\u89e3\u91ca\u4e86\u5982\u4f55\u5b8c\u5168\u907f\u514d\u5c42\u574d\u584c\uff0c\u4ece\u800c\u6fc0\u53d1\u4e86\u4e00\u79cd\u65b0\u7684\u526a\u679d\u7b97\u6cd5\u8fed\u4ee3\u7a81\u89e6\u6d41\u4fee\u526a(SynFlow)\u3002\u8be5\u7b97\u6cd5\u53ef\u4ee5\u89e3\u91ca\u4e3a\u5728\u53d7\u9650\u4e8e\u7a00\u758f\u6027\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u521d\u59cb\u5316\u65f6\u4fdd\u6301\u901a\u8fc7\u7f51\u7edc\u7684\u7a81\u89e6\u5f3a\u5ea6\u7684\u603b\u6d41\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u7b97\u6cd5\u6ca1\u6709\u53c2\u8003\u8bad\u7ec3\u6570\u636e\uff0c\u5728\u4e00\u7cfb\u5217\u6a21\u578b(VGG\u548cResNet)\u3001\u6570\u636e\u96c6(CIFAR-10/100\u548cTiny ImageNet)\u548c\u7a00\u758f\u7ea6\u675f(\u9ad8\u8fbe99.9%)\u4e0a\u7684\u521d\u59cb\u5316\u6027\u80fd\u59cb\u7ec8\u4f18\u4e8e\u73b0\u6709\u7684\u6700\u5148\u8fdb\u7684\u526a\u679d\u7b97\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u6570\u636e\u4e0d\u53ef\u77e5\u7684\u4fee\u526a\u7b97\u6cd5\u6311\u6218\u4e86\u73b0\u6709\u7684\u8303\u5f0f\uff0c\u5373\u5fc5\u987b\u4f7f\u7528\u6570\u636e\u6765\u91cf\u5316\u54ea\u4e9b\u7a81\u89e6\u662f\u91cd\u8981\u7684\u3002", "note_en": "Download PDF  Abstract: Pruning the parameters of deep neural networks has generated intense interestdue to potential savings in time, memory and energy both during training and attest time. Recent works have identified, through an expensive sequence oftraining and pruning cycles, the existence of winning lottery tickets or sparsetrainable subnetworks at initialization. This raises a foundational question:can we identify highly sparse trainable subnetworks at initialization, withoutever training, or indeed without ever looking at the data? We provide anaffirmative answer to this question through theory driven algorithm design. Wefirst mathematically formulate and experimentally verify a conservation lawthat explains why existing gradient-based pruning algorithms at initializationsuffer from layer-collapse, the premature pruning of an entire layer renderinga network untrainable. This theory also elucidates how layer-collapse can beentirely avoided, motivating a novel pruning algorithm Iterative Synaptic FlowPruning (SynFlow). This algorithm can be interpreted as preserving the totalflow of synaptic strengths through the network at initialization subject to asparsity constraint. Notably, this algorithm makes no reference to the trainingdata and consistently outperforms existing state-of-the-art pruning algorithmsat initialization over a range of models (VGG and ResNet), datasets(CIFAR-10/100 and Tiny ImageNet), and sparsity constraints (up to 99.9percent). Thus our data-agnostic pruning algorithm challenges the existingparadigm that data must be used to quantify which synapses are important.", "posttime": "2020-06-14 05:35:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf\u7f51\u7edc,\u5b88\u6052,neural,\u7b97\u6cd5", "title": "\u57fa\u4e8e\u8fed\u4ee3\u5b88\u6052\u7a81\u89e6\u6d41\u7684\u65e0\u6570\u636e\u4fee\u526a\u795e\u7ecf\u7f51\u7edc", "title_en": "Pruning neural networks without any data by iteratively conserving synaptic flow", "transed": 1, "url": "https://arxiv.org/abs/2006.05467", "via": "", "real_tags": ["\u795e\u7ecf\u7f51\u7edc", "\u5b88\u6052", "neural", "\u7b97\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "01b211023ae5b292777295cb37f402ec.jpg", "infoid": 1006461, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bb6\u5ead\u7a81\u53d1\u65b0\u95fb\u95f4\u8c0d\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u706f\u6ce1\u7684\u53d8\u5316\u6765\u7a83\u542c\u3002\n\u8fc8\u514b\u5c14\u00b7\u5e03\u5170\u6069|\u76d6\u8482\u7167\u7247", "note_en": "Home     Breaking News    Spies can eavesdrop by watching a lightweight bulb\u2019s variations\n Michael Blann | Getty Photographs", "posttime": "2020-06-14 05:35:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b27\u6d32,eavesdrop,\u53d8\u5316", "title": "\u95f4\u8c0d\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u4e00\u4e2a\u8f7b\u578b\u706f\u6ce1--\u6b27\u6d32\u2122\u7684\u53d8\u79cd--\u6765\u8fdb\u884c\u7a83\u542c\u3002", "title_en": "Spies can eavesdrop by watching a lightweight bulb\u00e2\u20ac\u2122s variations", "transed": 1, "url": "https://www.en24.news/2020/06/spies-can-eavesdrop-by-watching-a-light-bulbs-variations.html", "via": "", "real_tags": ["\u6b27\u6d32", "eavesdrop", "\u53d8\u5316"]}, {"category": "", "categoryclass": "", "imagename": "477b972c57ac92f280f586685c6f3c8c.jpg", "infoid": 1006460, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[\u6b63\u5982\u5bfc\u8a00\u4e2d\u6240\u8ff0\uff0c\u8fd9\u7bc7\u5e16\u5b50\u662f\u5173\u4e8e\u5168\u9762\u628a\u63e1\u5168\u5c40\u7684\u4ef7\u503c\uff0c\u5305\u62ec\u6bcf\u573a\u8fa9\u8bba\u7684\u591a\u4e2a\u65b9\u9762\uff0c\u5373\u4f7f\u5176\u4e2d\u5927\u591a\u6570\u662f\u9519\u8bef\u7684\u3002]\u3002\n\u597d\u7684\u6001\u5ea6\u548c\u597d\u7684\u573a\u5730\u4f1a\u5e26\u4f60\u8d70\u4e00\u6bb5\u4ee4\u4eba\u60ca\u8bb6\u7684\u957f\u8def\uff0c\u4f46\u5f53\u7136\u5b83\u4eec\u672c\u8eab\u5e76\u4e0d\u603b\u662f\u8db3\u591f\u7684\u3002\u8c03\u89e3\u51b2\u7a81\u65f6\uff0c\u6211\u5c1d\u8bd5\u7684\u4e0b\u4e00\u4ef6\u4e8b\u662f\u6682\u65f6\u5ffd\u7565\u6211\u76f8\u4fe1\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u52aa\u529b\u5e73\u7b49\u5730\u7406\u89e3\u4e89\u8bba\u7684\u53cc\u65b9\u3002\u6211\u79f0\u8fd9\u7bc7\u6587\u7ae0\u4e3a\u201c\u7406\u89e3\u201d\uff0c\u4f46\u5b83\u540c\u6837\u53ef\u4ee5\u88ab\u79f0\u4e3a\u201c\u503e\u542c\u201d\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u201c\u79ef\u6781\u503e\u542c\u201d\u3002\u8001\u5b9e\u8bf4\uff0c\u65af\u8482\u82ac\u00b7\u67ef\u7ef4\u5728\u4ed6\u7684\u4e66\u201c\u9ad8\u6548\u4eba\u58eb\u76847\u4e2a\u4e60\u60ef\u201d\u4e2d\u5df2\u7ecf\u8bf4\u5f97\u6bd4\u6211\u597d\u5f97\u591a\u3002\u4e60\u60ef\u4e94\u662f\u201c\u5148\u5bfb\u6c42\u7406\u89e3\u201d\uff0c\u5b83\u6293\u4f4f\u4e86\u4e8b\u7269\u7684\u7cbe\u9ad3\u3002\n\u771f\u6b63\u4e86\u89e3\u51b2\u7a81\u53cc\u65b9\u7684\u4ef7\u503c\u600e\u4e48\u5f3a\u8c03\u90fd\u4e0d\u4e3a\u8fc7\u3002\u5373\u4f7f\u6211\u540d\u4e49\u4e0a\u89e3\u51b3\u4e86\u4e00\u573a\u51b2\u7a81\uff0c\u5982\u679c\u6211\u4ecd\u7136\u6ca1\u6709\u771f\u6b63\u6478\u7d22\u5176\u4e2d\u4e00\u65b9\u6216\u53e6\u4e00\u65b9\uff0c\u6211\u4e5f\u4f1a\u5750\u7acb\u4e0d\u5b89\u3002\u4e0d\u6b62\u4e00\u6b21\uff0c\u8bd5\u56fe\u5728\u201c\u4e8b\u540e\u201d\u6320\u75d2\u75d2\u5df2\u7ecf\u53d1\u73b0\u4e86\u4e00\u4e2a\u9690\u85cf\u7684\u8981\u6c42\u6216\u75db\u70b9\uff0c\u8fd9\u53ea\u4f1a\u5728\u672a\u6765\u5f15\u8d77\u66f4\u591a\u7684\u60b2\u75db\u3002\u8bb0\u4f4f\uff0c\u6210\u529f\u5f88\u5c11\u50cf\u8ba9\u51b2\u7a81\u6d88\u5931\u90a3\u4e48\u7b80\u5355\uff1b\u9664\u975e\u4f60\u6b63\u786e\u5730\u7406\u89e3\u4e86\u53cc\u65b9\uff0c\u5426\u5219\u4f60\u65e0\u6cd5\u77e5\u9053\u4f60\u662f\u5426\u771f\u7684\u627e\u5230\u4e86\u6210\u529f(\u800c\u4e0d\u4ec5\u4ec5\u662f\u80dc\u5229)\u3002\n\u4f46\u662f\uff0c\u7406\u89e3\u53cc\u65b9\u5e76\u4e0d\u53ea\u662f\u4e00\u4ef6\u4e8b\u540e\u7684\u4e8b\u60c5\u3002\u5f53\u4f60\u9677\u5165\u51b2\u7a81\u65f6\uff0c\u5b83\u5728\u6307\u5bfc\u51b2\u7a81\u7684\u89e3\u51b3\u65b9\u9762\u4e5f\u6709\u5177\u4f53\u7684\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u4f60\u6b63\u786e\u5730\u5e94\u7528\u6148\u5584\u539f\u5219\u3002\u6148\u5584\u539f\u5219\u8bf4\uff0c\u4f60\u5e94\u8be5\u52aa\u529b\u4e3a\u4eba\u4eec\u7684\u8bba\u70b9\u627e\u5230\u6700\u597d\u7684\u89e3\u91ca\uff0c\u5373\u4f7f\u5b83\u4eec\u5e76\u4e0d\u603b\u662f\u6e05\u6670\u6216\u8fde\u8d2f\u7684\u3002\u5b83\u53c8\u56de\u5230\u4e86\u5584\u610f\u7684\u5047\u8bbe\u4e0a\uff1b\u4e5f\u8bb8\u4e89\u8bba\u542c\u8d77\u6765\u5f88\u75af\u72c2\uff0c\u4f46\u5bf9\u8bf4\u8bdd\u8005\u6765\u8bf4\u662f\u6709\u610f\u4e49\u7684\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u6148\u5584\u539f\u5219\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4ece\u7406\u89e3\u8bba\u70b9\u548c\u63d0\u51fa\u8bba\u70b9\u7684\u4eba\u5f00\u59cb\u3002\n\u7406\u89e3\u53cc\u65b9\u4e5f\u662f\u6240\u8c13\u7684\u201c\u94a2\u94c1\u5236\u9020\u201d\u7684\u5173\u952e\u90e8\u5206\uff0c\u8fd9\u662f\u79ef\u6781\u5730\u4e3a\u53e6\u4e00\u4e2a\u4eba\u7684\u8bba\u70b9\u627e\u5230\u66f4\u597d\u7684\u7248\u672c\u7684\u8fc7\u7a0b\u3002\u5728\u51b2\u7a81\u4e2d\u8fd9\u6837\u505a\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u610f\u5916\u5730\u91cd\u65b0\u517b\u6210\u4e86\u8ffd\u6c42\u80dc\u5229\u800c\u4e0d\u662f\u6210\u529f\u7684\u4e60\u60ef\u3002\u6811\u7acb\u8bda\u610f\uff0c\u4e0e\u53cc\u65b9\u5171\u540c\u52aa\u529b\uff0c\u5145\u5206\u53d1\u5c55\u4ed6\u4eec\u60f3\u8981\u8868\u8fbe\u7684\u89c2\u70b9\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u8ba8\u8bba\u53d8\u5f97\u6e05\u6670\uff0c\u8fd9\u5f80\u5f80\u53ef\u4ee5\u9610\u660e\u51b2\u7a81\u7684\u75c7\u7ed3\u6240\u5728\u3002\n\u5f53\u7136\uff0c\u6709\u65f6\u5019\u505a\u6148\u5584\u662f\u5f88\u96be\u7684\u3002\u4eba\u4eec\u53ef\u80fd\u4f1a\u63d0\u51fa\u770b\u4f3c\u2026\u7684\u4e89\u8bba\u3002\u4e0d\u5bf9\u3002\u592a\u75af\u72c2\u4e86\u3002\u751a\u81f3\u662f\u6709\u5bb3\u7684\u3002(\u4e89\u8bba\u672c\u8eab\u662f\u5426\u6709\u5bb3\u8fd9\u4e2a\u8bdd\u9898\u5f88\u5438\u5f15\u4eba\uff0c\u6211\u5728\u8fd9\u91cc\u6ca1\u6709\u7bc7\u5e45\u3002\u4e0d\u7ba1\u4f60\u76f8\u4fe1\u4ec0\u4e48\uff0c\u8fd9\u90fd\u4e0e\u6211\u60f3\u8981\u8868\u8fbe\u7684\u89c2\u70b9\u65e0\u5173)\u3002\u5f88\u591a\u4eba\u4f1a\u8ba4\u4e3a\uff0c\u8bd5\u56fe\u7406\u89e3\u6216\u6539\u8fdb\u8fd9\u6837\u7684\u8bba\u70b9\u662f\u6d6a\u8d39\u65f6\u95f4\uff0c\u751a\u81f3\u5728\u4f26\u7406\u4e0a\u662f\u9519\u8bef\u7684\u3002\u6211\u4e0d\u540c\u610f\u3002\u6211\u76f8\u4fe1\uff0c\u65e0\u8bba\u51b2\u7a81\u662f\u4ec0\u4e48\uff0c\u771f\u6b63\u7406\u89e3\u51b2\u7a81\u53cc\u65b9\u4ece\u6839\u672c\u4e0a\u6765\u8bf4\u90fd\u662f\u6709\u4ef7\u503c\u7684\u3002\u5b83\u6f84\u6e05\u4e86\u3002\u5b83\u80fd\u5efa\u7acb\u540c\u7406\u5fc3\u3002\u5b83\u6269\u5927\u4e86\u4f60\u5bf9\u4e16\u754c\u7684\u8ba4\u8bc6\u3002\u5373\u4f7f\u5230\u6700\u540e\u4f60\u4ecd\u7136\u6df1\u6709\u4e0d\u540c\u610f\u89c1\uff0c\u7406\u89e3\u8fd9\u4e2a\u8bba\u70b9\u4e5f\u4f1a\u8ba9\u4f60\u505a\u51fa\u66f4\u597d\u7684\u56de\u5e94\u3002\n\u539f\u5219\u56fa\u7136\u4e0d\u9519\uff0c\u4f46\u8981\u5728\u5b9e\u8df5\u4e2d\u8fbe\u5230\u90a3\u79cd\u7a0b\u5ea6\u7684\u7406\u89e3\u53ef\u80fd\u771f\u7684\u5f88\u96be\u3002\u8fd9\u662f\u4e00\u79cd\u968f\u7740\u91cd\u590d\u800c\u53d8\u5f97\u5bb9\u6613\u7684\u6280\u80fd\uff0c\u6240\u4ee5\u6211\u9f13\u52b1\u4f60\u5c3d\u53ef\u80fd\u591a\u5730\u7ec3\u4e60\u5b83\uff0c\u5373\u4f7f\u662f\u5728\u770b\u8d77\u6765\u4e0d\u5fc5\u8981\u7684\u5c0f\u51b2\u7a81\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u5728\u5bb9\u6613\u7684\u65f6\u5019\u517b\u6210\u8fd9\u4e2a\u4e60\u60ef\uff0c\u4f60\u4f1a\u53d1\u73b0\u5373\u4f7f\u5728\u56f0\u96be\u7684\u65f6\u5019\uff0c\u5b83\u4e5f\u4f1a\u53d8\u5f97\u81ea\u7136\u800c\u7136\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u4f60\u6b63\u5728\u5c1d\u8bd5\uff0c\u4f46\u4f60\u771f\u7684\u88ab\u56f0\u4f4f\u4e86\uff0c\u5f53\u6211\u4f3c\u4e4e\u4e0d\u80fd\u7406\u89e3\u522b\u4eba\u8bf4\u7684\u8bdd\u65f6\uff0c\u6211\u6709\u4e00\u4e2a\u8bc0\u7a8d\u53ef\u4ee5\u5e2e\u52a9\u6211\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u4e0d\u540c\u7684\u89c2\u70b9\uff0c\u8bf7\u5c1d\u8bd5\u5c06\u4e89\u8bba\u5206\u6210\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u7684\u4e0d\u540c\u90e8\u5206\u3002\u5f88\u591a\u8bba\u70b9\u5f88\u81ea\u7136\u5730\u7b26\u5408\u8fd9\u79cd\u6a21\u5f0f\uff0c\u6211\u7ecf\u5e38\u53d1\u73b0\uff0c\u867d\u7136\u6211\u4e0d\u80fd\u5b8c\u5168\u638c\u63e1\u8bba\u70b9\u7684\u6574\u4f53\uff0c\u4f46\u6211\u65e2\u7406\u89e3\u751a\u81f3\u540c\u610f\u8fd9\u4e2a\u95ee\u9898\uff1b\u6b63\u662f\u89e3\u51b3\u65b9\u6848\u7ed9\u6211\u5e26\u6765\u4e86\u95ee\u9898\u3002\u5373\u4f7f\u8fd9\u6837\uff0c\u5c06\u95ee\u9898\u5206\u79bb\u51fa\u6765\u5e76\u660e\u786e\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u8ba9\u6211\u7406\u89e3\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u5b83\u7ecf\u5e38\u7a81\u51fa\u4e00\u4e9b\u6211\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u672a\u9648\u8ff0\u7684\u524d\u63d0\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7ec3\u4e60\u70bc\u94a2\u7684\u597d\u65b9\u6cd5\uff0c\u56e0\u4e3a\u660e\u786e\u5730\u8868\u8fbe\u9690\u542b\u524d\u63d0\u662f\u6539\u8fdb\u8bba\u70b9\u7684\u597d\u65b9\u6cd5\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5728\u8fd9\u65b9\u9762\u76f8\u5f53\u7cdf\u7cd5\u3002\n\u6211\u8fd8\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u8fd9\u79cd\u6280\u5de7\u5728\u67d0\u79cd\u60c5\u51b5\u4e0b\u6709\u6548\uff0c\u4f46\u5e76\u4e0d\u5b8c\u5168\u6709\u6548\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u5c1d\u8bd5\u5c06\u95ee\u9898\u53d8\u5f97\u66f4\u4e00\u822c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bba\u70b9\u662f\u201c\u58a8\u897f\u54e5\u4eba\u6b63\u5728\u62a2\u8d70\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u963b\u6b62\u6765\u81ea\u58a8\u897f\u54e5\u7684\u79fb\u6c11\u201d\uff0c\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u5c06\u95ee\u9898\u5b9a\u4e49\u4e3a\u201c\u58a8\u897f\u54e5\u4eba\u6b63\u5728\u62a2\u8d70\u6211\u4eec\u7684\u5de5\u4f5c\u201d\uff0c\u4f46\u5c06\u5176\u5b9a\u4e49\u4e3a\u201c\u67d0\u4e9b\u4e1c\u897f\u6b63\u5728\u62a2\u8d70\u6211\u4eec\u7684\u5de5\u4f5c\u201d\uff0c\u751a\u81f3\u201c\u6211\u4eec\u7684\u7ecf\u6d4e\u524d\u666f\u7cdf\u7cd5\u900f\u9876\u201d\uff0c\u53ef\u80fd\u4f1a\u66f4\u6709\u6210\u6548\u3002\u8fd9\u5f15\u51fa\u4e86\u4e00\u4e2a\u9690\u542b\u7684\u524d\u63d0(\u539f\u56e0\u662f\u58a8\u897f\u54e5\u79fb\u6c11)\uff0c\u8fd9\u53ef\u80fd\u662f\u771f\u6b63\u7684\u5206\u6b67\u70b9\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u627e\u5230\u4e00\u4e2a\u4f60\u53ef\u4ee5\u540c\u60c5\u7684\u95ee\u9898\u4e5f\u662f\u6709\u4ef7\u503c\u7684\u3002\u6709\u4e86\u8fd9\u7c7b\u95ee\u9898\uff0c\u4f60\u5c31\u53ef\u4ee5\u5c06\u51b2\u7a81\u91cd\u65b0\u5b9a\u4e49\u4e3a\u4e00\u9879\u5408\u4f5c\u4efb\u52a1\uff0c\u5171\u540c\u52aa\u529b\u627e\u5230\u89e3\u51b3\u95ee\u9898\u7684\u6700\u4f73\u65b9\u6848\u3002\u4f60\u53ef\u4ee5\u5f00\u59cb\u5bfb\u627e\u6210\u529f\uff0c\u800c\u4e0d\u662f\u80dc\u5229\u3002\n\u4eba\u4eec\u7ecf\u5e38\u8bf4\uff0c\u771f\u6b63\u7406\u89e3\u67d0\u4eba\u7684\u8bba\u70b9\u7684\u771f\u6b63\u4e25\u5cfb\u8003\u9a8c\u662f\u4ee5\u4ed6\u4eec\u540c\u610f\u7684\u65b9\u5f0f\u5411\u4ed6\u4eec\u89e3\u91ca\u7684\u80fd\u529b\u3002\u8fd9\u5f88\u597d\uff0c\u4f60\u7edd\u5bf9\u5e94\u8be5\u4ee5\u6b64\u4e3a\u76ee\u6807(\u8bd5\u56fe\u89e3\u91ca\u56de\u6765\u4e5f\u662f\u89e3\u51b3\u51b2\u7a81\u7684\u4e00\u4e2a\u6709\u7528\u7684\u7a8d\u95e8)\uff0c\u4f46\u6709\u65f6\u6211\u53d1\u73b0\u4f7f\u7528\u7a0d\u5fae\u9ad8\u4e00\u70b9\u7684\u95e8\u69db\u662f\u6709\u7528\u7684\u3002\u5f53\u6211\u4e0d\u4ec5\u80fd\u5411\u63d0\u51fa\u8bba\u70b9\u7684\u4eba\u89e3\u91ca\u5b83\uff0c\u800c\u4e14(\u5bf9\u6211\u81ea\u5df1\uff0c\u800c\u4e0d\u662f\u5411\u4ed6\u4eec)\u89e3\u91ca\u4ed6\u4eec\u662f\u5982\u4f55\u76f8\u4fe1\u5b83\u7684\u65f6\u5019\uff0c\u6211\u8ba4\u4e3a\u6211\u81ea\u5df1\u662f\u771f\u6b63\u6b63\u786e\u5730\u7406\u89e3\u4e86\u4e00\u4e2a\u8bba\u70b9\u3002\u51b2\u7a81\u53cc\u65b9\u90fd\u662f\u5b87\u5b99\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u8981\u7406\u89e3\u5b87\u5b99\uff0c\u4f60\u5fc5\u987b\u77e5\u9053\u53cc\u65b9\u662f\u5982\u4f55\u5f62\u6210\u7684\u3002\n\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u6df1\u5965\u7684\u6216\u8981\u6c42\u8fc7\u9ad8\u7684\u6807\u51c6\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u65f6\u5019\u90fd\u6709\u5fc5\u8981\u8fd9\u6837\u505a\u3002\u4f46\u6709\u4e00\u4e9b\u6709\u8da3\u548c\u5b9e\u9645\u7684\u51b2\u7a81\u6765\u6e90\uff0c\u8fd9\u662f\u4e00\u79cd\u771f\u6b63\u6709\u7528\u7684\u65b9\u6cd5\uff0c\u63d0\u4f9b\u4e86\u5f88\u591a\u6d1e\u5bdf\u529b\u3002\u5b97\u6559\u662f\u6211\u6700\u559c\u6b22\u7684\u4f8b\u5b50\uff1b\u5927\u591a\u6570\u6709\u795e\u8bba\u4e16\u754c\u89c2\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u89e3\u91ca\u65e0\u795e\u8bba\u8005\u7684\u5b58\u5728\uff0c\u4f46\u8bb8\u591a\u65e0\u795e\u8bba\u8005\u5f88\u96be\u89e3\u91ca\u6709\u795e\u8bba\u8005\u7684\u5b58\u5728\u3002\u201c\u4eba\u662f\u54d1\u5df4\u201d\u4e5f\u8bb8\u5728\u60c5\u611f\u4e0a\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\uff0c\u4f46\u6784\u5efa\u4e00\u4e2a\u771f\u6b63\u7684\u89e3\u91ca\u7684\u5de5\u4f5c\u5efa\u7acb\u4e86\u5f88\u591a\u540c\u7406\u5fc3\uff0c\u5e76\u6700\u7ec8\u4f7f\u7531\u6b64\u4ea7\u751f\u7684\u8bba\u70b9\u53d8\u5f97\u5c16\u9510\u8d77\u6765\u3002\n\u6211\u5728\u8fd9\u4e00\u8282\u6d89\u53ca\u4e86\u5f88\u591a\u4e0d\u540c\u7684\u65b9\u9762\uff0c\u4f46\u6211\u8ba4\u4e3a\u6211\u53ef\u4ee5\u628a\u5b83\u5f52\u7ed3\u4e3a\u56db\u4e2a\u8981\u70b9\uff1a", "note_en": "[As described in   the introduction, this post is about the value of fully grasping the whole picture, including the many sides to each debate, even when most of them are wrong.]\n  A  good attitude and a  good venue will carry you a surprisingly long way, but of course they\u2019re not always sufficient on their own. The next thing I try when mediating conflict is to temporarily ignore whatever I believe and work to understand both sides of the argument equally. I called this post \u201ccomprehension\u201d, but it could equally just be called \u201clistening\u201d, or maybe more precisely \u201cactive listening\u201d. Honestly, Stephen Covey has already said most of this far better than I can in his book  The 7 Habits of Highly Effective People. Habit number five is \u201cseek first to understand\u201d, which captures the spirit of things.\n The value of truly understanding both sides of a conflict cannot be overstated. Even when I\u2019ve nominally resolved a conflict, I get antsy if I still don\u2019t really grok one side or the other. More than once, trying to scratch that itch \u201cafter the fact\u201d has turned up a hidden requirement or pain point which would have just caused more grief down the road. Remember, success is rarely as simple as just making the conflict go away; you can\u2019t know if you\u2019ve truly found success (not just victory) unless you properly understand both sides.\n But understanding both sides isn\u2019t just an after-the-fact thing. It also has concrete value in guiding the resolution of a conflict when you\u2019re caught in the middle of it, because it allows you to properly apply the  principle of charity. The principle of charity says that you should try and find the best possible interpretation for people\u2019s arguments, even when they aren\u2019t always clear or coherent. It goes back to assuming good faith; maybe an argument sounds crazy, but  it makes sense to the person saying it. The only way to apply the principle of charity in many cases is to start by understanding the argument, and the person making it.\n Understanding both sides is also a key part of something called \u201c steelmanning\u201c, which is the process of actively finding better versions of another person\u2019s arguments. This may seem like an odd thing to do in a conflict, but only if you\u2019ve accidentally slipped back into the habit of aiming for victory instead of success. Assume good faith, and work with both sides to fully develop the points they\u2019re trying to make. Doing this brings clarity to the discussion which can often illuminate the crux of the conflict.\n Of course sometimes being charitable is  hard. People may make arguments which just seem\u2026 wrong. Crazy. Even harmful. (The topic of whether an argument can be harmful in and of itself is a fascinating one I don\u2019t have space for here. Whatever you believe, it isn\u2019t relevant to the point I\u2019m trying to make). A lot of people would suggest that trying to understand or improve an argument like that is a waste of time, or even ethically wrong. I disagree. I believe that truly understanding both sides of a conflict is fundamentally valuable, no matter what that conflict is. It clarifies. It builds empathy. It expands your knowledge of the world. And even if by the end you still deeply disagree, understanding the argument will let you articulate a better response.\n  The principle is all well and good, but getting to that level of understanding in practice can be really hard. It\u2019s a skill that gets easier with repetition, so I would encourage you to practice it as much as possible, even for small conflicts where it might not seem necessary. Build that habit when it\u2019s easy, and you\u2019ll find that it becomes automatic even when it\u2019s hard. Still, if you\u2019re trying and you\u2019re really stuck, I\u2019ve got a trick which helps me when I just can\u2019t seem to connect with what somebody is saying.\n To better understand a different perspective, try splitting an argument up into the separate pieces of a problem and a solution. A lot of arguments fit into this pattern quite naturally, and I often find that while I couldn\u2019t quite grasp the argument as a whole, I both understand and even agree with the problem; it\u2019s the solution that\u2019s causing me issues. Even then, having the problem separated out and well-defined can lead me to understanding the solution too, because it frequently highlights some unstated premise which I wasn\u2019t aware of. This is also a great way to practice steelmanning, since making implied premises explicit is a great way to improve an argument; people are pretty bad at this by default.\n I should also note that if this trick kind of works for a situation, but doesn\u2019t quite, you should try making the problem even more general. For example, if the argument is \u201cMexicans are taking our jobs, so we should stop immigration from Mexico\u201d, it\u2019s tempting to define the problem as just \u201cMexicans are taking our jobs\u201d, but it\u2019s probably more productive to define it as something like \u201csomething is taking our jobs\u201d or even \u201cour economic prospects suck\u201d. This pulls out an implied premise (that the cause is Mexican immigrants) which may be the real point of disagreement, but even apart from that, finding a problem which you can be sympathetic to is worth its weight in gold. With this kind of problem in hand, you can reframe the conflict as a cooperative mission, working together to find the best solution to the problem. You can start to look for success, not victory.\n  It\u2019s often said that the real acid test for truly understanding somebody\u2019s argument is the ability to explain it back to them in a way they will agree with. This is good, and you should definitely aim for this (trying to explain it back is also a useful trick for conflict resolution in general), but sometimes I find it useful to use a slightly higher bar. I consider myself to really properly understand an argument when I can not only explain it to the person who made it, but can also explain (to myself, not to them) how they came to believe it. Both sides of the conflict are part of the universe, so to understand the universe you have to know how both sides came to be.\n This may seem like an esoteric or excessively demanding standard, and it isn\u2019t necessary all the time. But there are interesting and practical sources of conflict where this is a really useful approach that provides a lot of insight. Religion is my favourite example of this; most theistic worldviews can pretty naturally explain the existence of atheists, but a lot of atheists have a hard time explaining the existence of theists. \u201cPeople are dumb\u201d may be emotionally satisfying, but doing the work of constructing a real explanation builds a lot of empathy and ends up sharpening the resulting argument.\n I\u2019ve covered a lot of different ground in this section, but I think I can boil it down to four key points to take away:", "posttime": "2020-06-14 05:34:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u51b3,guide,\u7406\u89e3", "title": "\u51b2\u7a81\u89e3\u51b3\u5b9e\u7528\u6307\u5357\uff1a\u7406\u89e3", "title_en": "A Practical Guide to Conflict Resolution: Comprehension", "transed": 1, "url": "https://www.lesswrong.com/posts/j2D2dcsAsK5zLKDup/a-practical-guide-to-conflict-resolution-comprehension", "via": "", "real_tags": ["\u89e3\u51b3", "guide", "\u7406\u89e3"]}, {"category": "", "categoryclass": "", "imagename": "59873a49dced6a237b2fc55016f38cb7.png", "infoid": 1006459, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u50cf\u5f88\u591a\u6211\u8fd9\u4e2a\u5e74\u9f84(\u5feb30\u5c81)\u7684\u4eba\u4e00\u6837\uff0c\u6211\u901a\u8fc7\u67e5\u770b\u6211\u8ba4\u4e3a\u770b\u8d77\u6765\u4e0d\u9519\u7684\u7f51\u7ad9\u6e90\u4ee3\u7801\u6765\u5b66\u4e60\u5efa\u7acb\u7f51\u7ad9\u3002\u6b63\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u53d1\u73b0\u60a8\u53ef\u4ee5\u4f7f\u7528\u8868\u683c\u6765\u663e\u793a\u60a8\u60f3\u8981\u7684\u9875\u9762\uff0c\u5e76\u4f7f\u7528\u6846\u67b6\u96c6\u5728\u5c4f\u5e55\u4e0a\u4fdd\u7559\u9875\u9762\u7684\u5143\u7d20\uff0c\u540c\u65f6\u6eda\u52a8\u5176\u4ed6\u90e8\u5206\u3002\u6211\u53d1\u73b0\u8fd9\u79cd\u901a\u8fc7\u53d1\u73b0\u6765\u5b66\u4e60\u7684\u5f62\u5f0f\u5728\u6211\u7684\u8111\u6d77\u4e2d\u6839\u6df1\u8482\u56fa\uff0c\u6bd4\u542c\u4ece\u522b\u4eba\u7684\u6559\u5bfc\u8981\u597d\u5f97\u591a\u3002\n\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u8001\u5f0f\u7684\u3001\u4e0d\u53ef\u8bbf\u95ee\u7684\u3001\u8fc7\u65f6\u7684HTML\u6280\u672f\u65e9\u5df2\u4e0d\u590d\u5b58\u5728\uff0c\u6211\u4eec\u6784\u5efa\u7684\u7f51\u7ad9(\u6216Web\u5e94\u7528\u7a0b\u5e8f)\u7684\u590d\u6742\u6027\u548c\u8d28\u91cf\u5927\u5e45\u63d0\u9ad8\u3002\u4e0d\u8fc7\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u67e5\u770b\u60a8\u6b63\u5728\u67e5\u770b\u7684\u9875\u9762\u7684\u6e90\u4ee3\u7801\u7684\u80fd\u529b\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u6570\u91cf\u8fc5\u901f\u589e\u957f\u7684\u6784\u5efa\u5de5\u5177\uff0c\u65b0\u7684\u670d\u52a1\u5668\u7aef\u8bed\u8a00(\u5982Rust\u548cGo)\u7684\u6fc0\u589e\uff0c\u4ee5\u53ca\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684Javascript\u7684\u4fb5\u5360\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u540c\u6784\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e00\u5207\u90fd\u975e\u5e38\u4ee4\u4eba\u5174\u594b\uff0c\u6211\u60f3\u6211\u4eec\u90fd\u4f1a\u540c\u610f\uff0c\u5728\u5efa\u7acb\u4e92\u8054\u7f51\u7684\u65b9\u5f0f\u4e0a\u6709\u66f4\u591a\u7684\u9009\u62e9\u662f\u8d8a\u597d\u7684\u3002\n\u4f46\u662f\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u8d70\u5f97\u592a\u8fdc\u4e86\uff0c\u5ffd\u89c6\u4e86\u662f\u4ec0\u4e48\u8ba9\u7f51\u7edc\u53d8\u5f97\u4f1f\u5927\u5462\uff1f\n\u8fd9\u4e9b\u66f4\u65b0\u7684\u529f\u80fd\u548c\u66f4\u9ad8\u7684\u7528\u6237\u671f\u671b\uff0c\u518d\u52a0\u4e0a\u8d85\u5f3a\u7684\u957f\u9752\u6d4f\u89c8\u5668\uff0c\u53ef\u4ee5\u8ba9\u4f60\u8d1f\u8d23\u8f83\u4f4e\u7ea7\u522b\u7684\u4efb\u52a1\u3002\u7ba1\u7406\u6d4f\u89c8\u5668\u72b6\u6001\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u4ee5\u524d\u8fd9\u4e00\u5207\u90fd\u662f\u4e3a\u4f60\u505a\u7684\u3002\u4f60\u70b9\u51fb\u4e86\u4e00\u4e2a\u94fe\u63a5\uff0c\u4f60\u8fdb\u5165\u4e86\u53e6\u4e00\u4e2a\u9875\u9762\uff0c\u4f60\u70b9\u51fb\u4e86\u540e\u9000\u6309\u94ae\uff0c\u7136\u540e\u4f60\u56de\u5230\u4e86\u524d\u4e00\u9875\u3002\u73b0\u5728\uff0c\u4f7f\u7528Push State(\u6216\u8005\u60a8\u9009\u62e9\u7684\u6846\u67b6\u5c06\u5176\u62bd\u8c61\u4e3a\u4ec0\u4e48)\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u641e\u5f97\u4e00\u56e2\u7cdf\uff0c\u8ba9\u60a8\u7684\u7ad9\u70b9\u7b28\u62d9\u800c\u4e0d\u76f4\u89c2\u5730\u5de5\u4f5c\u8d77\u6765\uff0c\u5c31\u50cf2000\u5e74\u7684DVD\u83dc\u5355\u4e00\u6837\u3002\u4eba\u4eec\u7ecf\u5e38\u72af\u8fd9\u6837\u7684\u9519\u8bef\u3002\n\u6211\u4e0d\u662f\u5728\u4e3b\u5f20\u56de\u5230\u4e00\u4e2a\u6ca1\u6709\u8fd9\u4e9b\u6784\u5efa\u5f97\u975e\u5e38\u597d\u7684\u73b0\u4ee3\u6846\u67b6\u7684\u4e16\u754c\u3002\u5b83\u4eec\u4e0e\u6539\u8fdb\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u4f5c\u6d41\u7a0b\u7684\u6784\u5efa\u5de5\u5177\u4e00\u8d77\uff0c\u53ef\u4ee5\u66f4\u5feb\u5730\u6784\u5efa\u5706\u6ed1\u800c\u6709\u7528\u7684web\u5e94\u7528\u7a0b\u5e8f\u3002\u6ca1\u6709\u5fc5\u8981\u6253\u788e\u78e8\u574a\u91cc\u7684\u6846\u67b6\u3002\n\u6211\u7684\u89c2\u70b9\u662f\uff0c\u5728\u50cf\u4f60\u5e94\u8be5\u505a\u7684\u90a3\u6837\u7167\u987e\u4f60\u7684\u201c\u666e\u901a\u201d\u7528\u6237\u7684\u540c\u65f6\uff0c\u8ba9\u516c\u5f00\u53ef\u89c1\u7684\u6280\u672f(HTML\u3001CSS\u3001\u4e00\u4e9bJavascript)\u5c3d\u53ef\u80fd\u5730\u4e3a\u5f00\u53d1\u8005\u6240\u7406\u89e3\u4e5f\u662f\u5f88\u6709\u7528\u7684-\u4ed6\u4eec\u53ea\u662f\u4f7f\u7528\u4f60\u7684\u4e1c\u897f\u7684\u53e6\u4e00\u7c7b\u4eba\u3002\n\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u88ab\u6ee5\u7528\u65f6\uff0c\u65b0\u6280\u672f\u4e5f\u4f1a\u8ba9\u7f51\u7ad9\u521b\u5efa\u8005\u4e0d\u5fc5\u8003\u8651\u5f71\u54cd\u7528\u6237\u7684\u5176\u4ed6\u56e0\u7d20\u3002\u5c06\u53e6\u4e00\u4e2a\u82b1\u54e8\u7684JavaScript\u5e93\u6dfb\u52a0\u5230\u4f9d\u8d56\u9879\u4e2d\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u662f\u5f88\u96be\u770b\u5230\u5bf9\u7528\u6237\u7684\u5f71\u54cd\u3002\u5728\u7b2c\u4e00\u4e16\u754c\u56fd\u5bb6\uff0c\u6ca1\u6709\u4f7f\u7528\u60a8\u7684\u672a\u8ba1\u91cf\u7684\u8d85\u9ad8\u901f\u529e\u516c\u5149\u7ea4\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u91cf\u60ca\u4eba\u7684RAM\u5728MacBook Pro\u4e0a\u67e5\u770b\u60a8\u7684\u5de5\u4f5c\u3002\n\u7f51\u7edc\u662f\u4e00\u4e2a\u72ec\u7279\u7684\u5f00\u653e\u5e73\u53f0\uff0c\u5efa\u7acb\u5728\u5546\u5b9a\u7684\u6807\u51c6\u4e4b\u4e0a-\u5b83\u4e0d\u53d7\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u7684\u63a7\u5236\u3002Web\u4e0a\u7684\u5185\u5bb9\u662f\u53ef\u8bbf\u95ee\u3001\u53ef\u5bfb\u5740\u548c\u53ef\u9884\u6d4b\u7684\uff0c\u8fd9\u53ef\u4ee5\u8bf4\u662f\u5b83\u5982\u6b64\u6210\u529f\u7684\u51e0\u4e2a\u539f\u56e0\u4e4b\u4e00\u3002\n\u5c3d\u7ba1\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u6211\u4eec\u4e0d\u6210\u719f\u7684\u884c\u4e1a\u53ef\u4ee5\u5728\u5168\u4e16\u754c\u8303\u56f4\u5185\u8bbf\u95ee\uff0c\u4f46\u5438\u5f15\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u5728\u8be5\u884c\u4e1a\u5de5\u4f5c\u4ecd\u7136\u5b58\u5728\u91cd\u5927\u95ee\u9898\u3002\u4e0d\u5fc5\u8981\u5730\u6df7\u6dc6\u6211\u4eec\u7684\u5de5\u4f5c\u6210\u679c\uff0c\u63d0\u9ad8\u4e86\u65b0\u624b\u7684\u8fdb\u5165\u95e8\u69db\uff0c\u5ffd\u89c6\u4e86\u7f51\u7edc\u4e4b\u7f8e\u3002\n\u8fd9\u4e5f\u662f\u4e3a\u4e86\u597d\u73a9\u3002\u5c06web\u89c6\u4e3a\u201c\u4ec5\u4ec5\u662f\u53e6\u4e00\u4e2a\u7f16\u8bd1\u76ee\u6807\u201d\u4f1a\u8ba9\u53c2\u4e0e\u5f00\u53d1\u7684\u5f00\u53d1\u4eba\u5458\u66f4\u96be\u521b\u5efa\u7528\u6237\u6837\u5f0f\u8868\u3001\u6d4f\u89c8\u5668\u6269\u5c55\u6216\u6570\u636e\u6293\u53d6\u5de5\u5177\u6765\u6269\u5c55\u60a8\u5df2\u6784\u5efa\u7684\u5185\u5bb9\u3002\u4ed6\u4eec\u505a\u8fd9\u4ef6\u4e8b\u7684\u65b9\u5f0f\u548c\u5de5\u5177\u53ef\u80fd\u662f\u4f60\u65e0\u6cd5\u9884\u6599\u7684--\u8fd9\u662f\u4e00\u79cd\u5bfb\u627e\u65b0\u4e1a\u52a1\u3001\u96c7\u4f63\u5458\u5de5\u6216\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\u7684\u7edd\u5999\u65b9\u5f0f\u3002", "note_en": "Like many people my age (late 30s) I learnt to build websites by viewing the source of sites that I thought looked good. It was this way that I discovered you could use tables to have a page laid out how you fancied, and framesets to persist elements of the page on screen whilst other parts scrolled. I found this form of learning by discovery stuck in my head a whole lot better than being taught by someone.\n Thankfully these old school, inaccessible, and of-their-time HTML techniques are long gone and the complexity and quality of the websites (or web applications) we build has increased drastically. What does remain though is the ability to view the source of the page you\u2019re viewing.\n We\u2019ve seen a burgeoning amount of build tooling, a proliferation of new server-side languages (such as Rust and Go) and the encroachment of Javascript from client to server enabling isomorphic apps. This is all very exciting and I think we can all agree that more choice in ways of building interwebs there are, the better.\n But have we gone too far, and lost sight of what has made the web great?\n These newer capabilities and higher user expectations, augmented by supercharged evergreen browsers, can make you responsible for lower level tasks. A good example is managing the browser\u2019s state. Previously this was all done for you. You clicked a link, you ended up on another page, you clicked the back button and you went back to that previous page. Now with pushState \u2014 or whatever your chosen framework abstracts it to \u2014 you can easily make a mess and have your site clunkily and unintuitively work like a 2000\u2019s DVD menu. And people frequently make this mistake.\n I\u2019m not arguing for a return to a world without these massively well-built modern frameworks. They, along with build tooling that\u2019s improved developer workflows, allow slick and useful webapps to be built faster. There is no need to smash the frames in the mills.\n My argument is that whilst looking after your \u2018normal\u2019 users, as you should, it\u2019s also useful to make the tech that\u2019s publically viewable (HTML, CSS, some Javascript) as comprehensible as possible to developers \u2014 who are just another class of person using your stuff.\n At its worst, and when misused, new technologies also remove the web builder from having to think about other factors that affect the user. It\u2019s incredibly easy to add yet another fancy JavaScript library into the dependencies, but harder to see the effect on a user. The user who isn\u2019t on your unmetered superfast office fibre in a first world country viewing your work on a MacBook Pro with an insane quantity of RAM.\n   The web is a unique open platform built on agreed standards \u2014 it\u2019s not controlled by a single company. Content on the web is accessible, addressable, and predictable, which is arguably a few of the reasons why it\u2019s so successful.\n Despite being, by its very nature, accessible worldwide \u2014 our immature industry has significant problems attracting a diverse range of people to work in it. Needlessly obfuscating the output of our work raises the barrier of entry for newbies and ignores the beauty of the web.\n It\u2019s also about fun. Treating the web as \u201cjust another compile target\u201d makes it harder for engaged developers to create user stylesheets, browser extensions or data scraping tools that extend what you\u2019ve built. They may be doing this in ways and with tooling that you couldn\u2019t possibly have anticipated \u2014 a brilliant way of finding new business, hiring people or just for fun.", "posttime": "2020-06-14 05:17:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u5f00\u53d1,users", "title": "\u5f00\u53d1\u4eba\u5458\u4e5f\u662f\u60a8\u7684\u7528\u6237--\u4e3a\u201c\u67e5\u770b\u6e90\u4ee3\u7801\u201d\u8fa9\u62a4", "title_en": "Developers are your users too \u2013 a defence of 'View Source'", "transed": 1, "url": "https://medium.com/@jasoncartwright/developers-are-your-users-too-73e186dc8fd2", "via": "", "real_tags": ["\u4ee3\u7801", "\u5f00\u53d1", "users"]}, {"category": "", "categoryclass": "", "imagename": "b597c8cad1dadd2112d345c3cf845ba0.jpg", "infoid": 1006458, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u5728\u79ef\u6781\u7ec4\u7ec7\u4e2d\u5fc3(Center For Positive Organizations)\u4e3b\u529e\u7684\u4e00\u6b21\u81ea\u6211\u9886\u5bfc\u80fd\u529b\u7814\u7a76\u6240(SIYLI)\u6d3b\u52a8\u4e2d\u6709\u4e86\u6df1\u523b\u7684\u4f53\u9a8c\u3002SIYLI\u7684\u9879\u76ee\u6559\u6388\u795e\u7ecf\u79d1\u5b66\u652f\u6301\u7684\u5b9e\u7528\u6b63\u5ff5\u548c\u60c5\u5546\u6280\u672f\u3002\n\u5728\u4e24\u5929\u591a\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u53c2\u52a0\u4e86\u51e0\u5341\u4e2a\u65e8\u5728\u5b66\u4e60\u8fd9\u4e9b\u9886\u57df\u7684\u8eab\u4e34\u5176\u5883\u7684\u6d3b\u52a8\u3002\u6574\u4e2a\u7ecf\u5386\u975e\u5e38\u6709\u5f71\u54cd\u529b\uff0c\u6211\u628aSIYLI\u7684\u8bb8\u591a\u5fae\u5b9e\u8df5\u5e26\u5165\u4e86\u6211\u7684\u65e5\u5e38\u751f\u6d3b\u3002\n\u5728\u8282\u76ee\u4e2d\uff0c\u6211\u4eec\u56f4\u7ed5\u542c\u529b\u505a\u4e86\u5f88\u591a\u7ec3\u4e60\u3002\u8fd9\u4e9b\u7ed9\u6211\u7559\u4e0b\u7684\u5f71\u54cd\u6bd4\u5176\u4ed6\u4efb\u4f55\u4e00\u4e2a\u90fd\u8981\u5927\u3002\u901a\u5e38\u5728\u8fd9\u4e9b\u7ec3\u4e60\u4e2d\uff0c\u9879\u76ee\u53c2\u4e0e\u8005\u914d\u5bf9\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e2a\u53ef\u4ee5\u8c08\u8bba\u7684\u8bdd\u9898\u3002A\u4eba\u4f1a\u8bf43\u5206\u949f\uff0cB\u4eba\u53ea\u80fd\u542c\u3002\u7136\u540e\u6211\u4eec\u4ea4\u6362\u4e86\u4f4d\u7f6e\u3002\u5728\u7ec3\u4e60\u7684\u4e0d\u540c\u53d8\u5316\u4e2d\uff0c\u6211\u4eec\u7ec3\u4e60\u4e86\u79ef\u6781\u503e\u542c\u548c\u60c5\u611f\u503e\u542c\u7b49\u6280\u5de7\u3002\n\u5728\u8fd9\u4e2a\u7ec3\u4e60\u91cd\u590d\u4e86\u51e0\u6b21\u4e4b\u540e\uff0c\u6211\u5f00\u59cb\u611f\u89c9\u5230\u4e0e\u5e73\u65f6\u975e\u5e38\u4e0d\u540c\u3002\u6211\u6ce8\u610f\u5230\u6211\u8bf4\u5f97\u66f4\u6162\u4e86\uff0c\u4e5f\u66f4\u81ea\u7531\u5730\u5206\u4eab\u4e86\u6211\u7684\u60f3\u6cd5\u3002\u6211\u89c9\u5f97\u81ea\u5df1\u5f88\u96c6\u4e2d\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u68d2\u7684\u611f\u89c9\uff1b\u6211\u60f3\u5728\u6211\u6240\u6709\u7684\u4e92\u52a8\u4e2d\u90fd\u6709\u8fd9\u79cd\u611f\u89c9\u3002\n\u5f53\u6211\u5728\u665a\u4e9b\u65f6\u5019\u66f4\u6df1\u5165\u5730\u601d\u8003\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u5728\u6211\u7684\u65e5\u5e38\u751f\u6d3b\u4e2d\uff0c\u6211\u56f4\u7ed5\u7740\u8c08\u8bdd\u611f\u5230\u4e86\u5f88\u5927\u7684\u7126\u8651\u3002\u6211\u5929\u751f\u5c31\u6bd4\u8f83\u5185\u5411\uff0c\u6240\u4ee5\u7ecf\u5e38\u5f88\u96be\u8fdb\u5165\u5145\u6ee1\u6d3b\u529b\u7684\u7fa4\u804a\u3002\u6211\u4e60\u60ef\u6027\u5730\u8bf4\u5f97\u5f88\u5feb\uff0c\u56e0\u4e3a\u7ecf\u9a8c\u544a\u8bc9\u6211\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u5728\u6211\u7ed3\u675f\u6211\u7684\u60f3\u6cd5\u4e4b\u524d\u6253\u65ad\u6211\u7684\u8bdd\u3002\u8c08\u8bdd\u611f\u89c9\u5c31\u50cf\u662f\u8ba9\u6211\u7cbe\u75b2\u529b\u5c3d\u7684\u6bd4\u8d5b\uff0c\u6211\u9700\u8981\u4e89\u53d6\u53d1\u8a00\u7684\u7a7a\u95f4\u3002\n\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u4e00\u904d\u53c8\u4e00\u904d\u5730\u505aSIYLI\u7ec3\u4e60\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u6211\u7684\u8c08\u8bdd\u4f19\u4f34\u4e0d\u80fd\u6253\u65ad\u6211\u3002\u7ed3\u679c\uff0c\u6211\u611f\u5230\u5e73\u9759\u3001\u653e\u677e\uff0c\u53e3\u9f7f\u4e5f\u66f4\u6e05\u695a\u4e86\u3002\n\u6211\u60f3\u4e00\u76f4\u90fd\u6709\u8fd9\u6837\u7684\u611f\u89c9\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u7814\u8ba8\u4f1a\u4e0a\u3002\u4f46\u600e\u4e48\u505a\u5462\uff1f\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u4eba\u4eec\u4e0d\u53d7\u89c4\u5219\u7684\u7ea6\u675f\uff0c\u53ea\u80fd\u542c\u6211\u8bb2\u4e09\u5206\u949f\uff01\n\u5728\u8c08\u8bdd\u4e2d\u6709\u4e00\u4ef6\u4e8b\u6211\u786e\u5b9e\u53ef\u4ee5\u63a7\u5236\uff0c\u90a3\u5c31\u662f\u6211\u5982\u4f55\u503e\u542c\uff0c\u6240\u4ee5\u6211\u4ece\u90a3\u91cc\u5f00\u59cb\u3002SIYLI\u7ec3\u4e60\u6240\u6709\u9700\u8981\u9759\u9759\u503e\u542c\u7684\u5185\u5bb9--\u4e0d\u8ba1\u5212\u4e0b\u4e00\u6b65\u8981\u8bf4\u4ec0\u4e48\uff0c\u4e0d\u5bfb\u627e\u5f00\u573a\u767d\uff0c\u53ea\u9700\u8981\u503e\u542c\u3002\n\u6211\u5f00\u59cb\u5728\u65e5\u5e38\u4e92\u52a8\u4e2d\u4e13\u6ce8\u4e8e\u503e\u542c\u3002\u6211\u53d1\u73b0\uff0c\u628a\u8fd9\u4e2a\u59ff\u52bf\u5e26\u5230\u6211\u7684\u8c08\u8bdd\u4e2d\u5df2\u7ecf\u5bf9\u51cf\u8f7b\u6211\u611f\u5230\u7684\u538b\u529b\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u8fd9\u8ba9\u6211\u5728\u8eab\u4f53\u548c\u7cbe\u795e\u4e0a\u90fd\u5904\u4e8e\u4e00\u4e2a\u5f88\u597d\u7684\u4f4d\u7f6e\uff0c\u4ee5\u4fbf\u5728\u6211\u8be5\u505a\u51fa\u56de\u5e94\u7684\u65f6\u5019\u505a\u51fa\u56de\u5e94\u3002\n\u5728SIYLI\uff0c\u6211\u6709\u673a\u4f1a\u611f\u53d7\u5230\u5728\u6211\u611f\u89c9\u5230\u88ab\u503e\u542c\u800c\u4e0d\u662f\u5306\u5fd9\u7684\u5bf9\u8bdd\u4e2d\u4e92\u52a8\u662f\u4ec0\u4e48\u611f\u89c9\u3002\u6211\u5f00\u59cb\u628a\u90a3\u6bb5\u8bb0\u5fc6\u5e26\u5165\u6211\u7684\u8c08\u8bdd\u4e2d\u3002\u6b64\u5916\uff0c\u6211\u4e00\u76f4\u5728\u4f7f\u7528\u5fae\u578b\u5b9e\u8df5\u5728\u6574\u4e2a\u5bf9\u8bdd\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u5728\u573a\u548c\u4e13\u6ce8\u3002\u6211\u66f4\u64c5\u957f\u6d88\u9664\u7d27\u5f20\u60c5\u7eea\uff0c\u4fdd\u6301\u8212\u9002\u7684\u8282\u594f\u3002\n\u6211\u8fd8\u5236\u5b9a\u4e86\u4e00\u4e2a\u66f4\u597d\u7684\u7b56\u7565\u6765\u5904\u7406\u4e2d\u65ad\u3002\u50cf\u201c\u5bf9\u4e0d\u8d77\uff0c\u6211\u8fd8\u6ca1\u8bf4\u5b8c\u201d\u8fd9\u6837\u7b80\u5355\u7684\u4e00\u53e5\u8bdd\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5927\u80c6\u7684\u4e3e\u52a8\uff0c\u4f46\u5b83\u901a\u5e38\u4f1a\u8d77\u5230\u4f5c\u7528\uff0c\u611f\u89c9\u6bd4\u5306\u5fd9\u901a\u8fc7\u6211\u7684\u60f3\u6cd5\u8981\u597d\u5f97\u591a\u3002\n\u6b63\u5ff5\u7ec3\u4e60\u5bf9\u4f60\u7684\u5de5\u4f5c\u6216\u4e92\u52a8\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u6211\u5f88\u60f3\u5728\u8bc4\u8bba\u91cc\u542c\u5230\u8fd9\u4ef6\u4e8b\uff01", "note_en": "Earlier this year, I had a profound experience at a  Search Inside Yourself Leadership Institute (SIYLI) event hosted by the  Center for Positive Organizations. SIYLI\u2019s programs teach neuroscience-backed techniques for practical mindfulness and emotional intelligence.\n Over two days, I participated in dozens of immersive activities geared toward learning in these domains. The whole experience was very impactful, and I\u2019ve carried many of the SIYLI\u2019s  micropractices into my daily life.\n  In the program, we did many exercises around listening. These left a bigger impact on me than any of the rest. Typically in these exercises, program participants paired up and were given a topic to speak about. Person A would speak for three minutes, and Person B could only listen. Then we switched. In different variations of the exercise, we practiced skills like active listening and listening for emotion.\n After several iterations of this exercise, I started to feel very different from how I normally do. I noticed that I was speaking more slowly and sharing my thoughts more freely. I felt centered. It was a great feeling; I wanted to feel that way in all of my interactions.\n As I reflected more deeply later in the evening, I realized that in my day-to-day life, I feel a lot of anxiety around conversation. I\u2019m naturally more reserved, so I often have difficulty breaking into vigorous group conversations. And I habitually speak quickly because experience has taught me that somebody might cut me off before I can finish my thought. Conversations can feel like exhausting contests where I need to fight for speaking space.\n But as we did the SIYLI exercises over and over, I realized that my conversation partner couldn\u2019t cut me off. As a result, I felt calm, relaxed, and more articulate.\n  I wanted to feel like that all the time, not just in a seminar. But how? In the real world, people aren\u2019t bound by rules to listen to me for three minutes!\n  One thing I do have control over in a conversation is how I listen, so I started out there. The SIYLI exercises all required listening quietly \u2014 not planning what you\u2019re going to say next, not looking for an opening, just listening.\n I started to focus on listening in my daily interactions. I found that bringing this posture into my conversations already went a long way toward reducing the stress I felt. And it put me in a good place both physically and mentally for when it was time for me to respond.\n  At SIYLI, I had the chance to feel what it was like to interact in a conversation where I felt heard, not rushed. I started taking that memory into my conversations. Additionally, I\u2019ve been using micropractices to stay present and mindful throughout conversations. I\u2019m better at fighting off nervous energy and keeping a comfortable pace.\n I\u2019ve also developed a better strategy for dealing with the interruptions. A simple phrase like \u201cExcuse me, I\u2019m not done yet\u201d feels like a bold move, but it usually does the trick and feels so much better than rushing through my thought.\n How has mindfulness practice impacted your work or your interactions? I\u2019d love to hear about it in the comments!", "posttime": "2020-06-14 05:16:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u5f53\u4f5c,stop,\u503e\u542c", "title": "\u6211\u5b66\u4f1a\u4e86\u4e0d\u518d\u628a\u8c08\u8bdd\u5f53\u4f5c\u6bd4\u8d5b", "title_en": "I Learned to Stop Approaching Conversations as Contests", "transed": 1, "url": "https://spin.atomicobject.com/2020/06/13/conversations-contests/#.XuUU40XpkPs.hackernews", "via": "", "real_tags": ["app", "\u5f53\u4f5c", "stop", "\u503e\u542c"]}, {"category": "", "categoryclass": "", "imagename": "76c81689074e2d695f0cda5093a8c3df.jpg", "infoid": 1006457, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5e74\u6765\uff0c\u4e50\u9ad8\u7684MindStorms\u5957\u4ef6\u4e00\u76f4\u662f\u4e00\u4e9b\u6700\u597d\u7684\u673a\u5668\u4eba\u548c\u7f16\u7a0b\u6559\u80b2\u5de5\u5177\u3002\u5b83\u4eec\u4e5f\u662f\u53d1\u5c55\u6700\u6162\u7684\uff0c\u6700\u65b0\u7684\u5957\u88c5\u4e50\u9ad8\u5934\u8111\u98ce\u66b4EV3\u5c06\u4e8e2013\u5e74\u95ee\u4e16\u3002\u73b0\u5728\uff0c\u4e03\u5e74\u540e\uff0c\u4e50\u9ad8\u7ec8\u4e8e\u63a8\u51fa\u4e86\u4e00\u6b3e\u65b0\u7684\u5934\u8111\u98ce\u66b4\u5957\u4ef6\uff1a\u4e50\u9ad8\u5934\u8111\u98ce\u66b4\u673a\u5668\u4eba\u53d1\u660e\u5bb6\u3002\n\u673a\u5668\u4eba\u53d1\u660e\u5bb6\u5de5\u5177\u5305\u53ef\u4ee5\u8ba9\u5b69\u5b50(\u6216\u6210\u5e74\u4eba)\u4ece949\u4ef6\u4e2d\u5236\u9020\u51fa5\u79cd\u4e0d\u540c\u7684\u673a\u5668\u4eba\u6a21\u578b\uff0c\u4ece\u56db\u6761\u817f\u7684\u6b65\u884c\u8005\u5230\u53ef\u4ee5\u51fb\u638c\u7684\u4e24\u8db3\u8f6e\u5f0f\u673a\u5668\u4eba\u3002\u6240\u6709\u8fd9\u4e9b\u673a\u5668\u4eba\u90fd\u53ef\u4ee5\u88ab\u7f16\u7a0b\u6765\u6267\u884c\u4e0d\u540c\u7684\u6280\u5de7\uff0c\u6bd4\u5982\u6293\u53d6\u7269\u54c1\uff0c\u53d1\u5c04\u5851\u6599\u5f39\uff0c\u907f\u5f00\u969c\u788d\u7269\uff0c\u4ee5\u53ca\u73a9\u5404\u79cd\u5e26\u7403\u7684\u8fd0\u52a8\u3002\n\u8be5\u5957\u4ef6\u5305\u62ec\u56db\u4e2a\u4f4e\u8c03\u3001\u4e2d\u7b49\u89d2\u5ea6\u7684\u9a6c\u8fbe\uff1b\u4e00\u4e2a\u989c\u8272\u548c\u5149\u7ebf\u4f20\u611f\u5668\uff1b\u4ee5\u53ca\u4e00\u4e2a\u8ddd\u79bb\u4f20\u611f\u5668\uff0c\u5b83\u4eec\u4e0e\u667a\u80fd\u4e2d\u5fc3\u6a21\u5757\u4e00\u8d77\u4e3a\u8fd9\u4e9b\u673a\u5668\u4eba\u4f9b\u7535\u5e76\u6267\u884c\u547d\u4ee4\u3002\u5f53\u7136\uff0c\u50cf\u6240\u6709\u7684MindStorms\u5de5\u5177\u5305\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u624b\u5934\u7684\u5de5\u5177\u6784\u5efa\u81ea\u5df1\u7684\u673a\u5668\u4eba\u4f5c\u54c1\uff0c\u5e76\u4e3a\u66f4\u590d\u6742\u7684\u9879\u76ee\u6dfb\u52a0\u4e50\u9ad8\u6280\u672f\u548c\u7cfb\u7edf\u90e8\u4ef6\u3002\n\u667a\u80fd\u4e2d\u5fc3\u662f\u4e50\u9ad8MindStorms\u7684\u5927\u8111\uff0cMindStorms\u673a\u5668\u4eba\u53d1\u660e\u8005\u5957\u4ef6\u6240\u5728\u7684\u8857\u533a\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5148\u8fdb\u7684\u3002\u5b83\u5177\u6709\u516d\u4e2a\u7528\u4e8e\u4f20\u611f\u5668\u548c\u7535\u673a\u7684\u8f93\u5165/\u8f93\u51fa\u7aef\u53e3\u3001\u4e00\u4e2a\u516d\u8f74\u9640\u87ba/\u52a0\u901f\u5ea6\u8ba1\u3001\u4e00\u4e2a\u626c\u58f0\u5668\u548c\u4e00\u4e2a5x5 LED\u77e9\u9635\u3002\u4f7f\u7528\u9002\u7528\u4e8eAndroid\u3001iOS\u3001Windows 10\u548cMacOS\u7684\u4e50\u9ad8MindStorms Robot Inventor\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u84dd\u7259\u65e0\u7ebf\u63a7\u5236\u667a\u80fd\u4e2d\u5fc3\u548c\u6240\u6709\u4f7f\u7528\u5b83\u7684\u673a\u5668\u4eba\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u652f\u6301\u4f7f\u7528\u57fa\u4e8e\u78c1\u8d34\u7684\u6682\u5b58\u8bed\u8a00\u548cPython\u8fdb\u884c\u7f16\u7a0b\uff0c\u9002\u7528\u4e8e\u9700\u8981\u7f16\u5199\u4ee3\u7801\u7cbe\u786e\u5ea6\u7684\u66f4\u590d\u6742\u7684\u9879\u76ee\u3002\n\u5947\u602a\u7684\u662f\uff0c\u667a\u80fd\u96c6\u7ebf\u5668\u7684\u7aef\u53e3\u6bd4MindStorms EV3\u5957\u4ef6\u4f7f\u7528\u7684\u667a\u80fd\u7816\u5c11\u4e86\u4e24\u4e2a\u7aef\u53e3\uff0c\u540e\u8005\u6709\u516b\u4e2a\u7aef\u53e3\u3002\u7136\u800c\uff0c\u8ddd\u79bb\u4f20\u611f\u5668\u5177\u6709\u4e00\u4e2a\u516d\u9488\u9002\u914d\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528\u5305\u62ec\u7535\u5b50\u677f\u5728\u5185\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff0c\u8fd9\u589e\u52a0\u4e86\u5957\u4ef6\u7684\u53ef\u6269\u5c55\u6027\u3002\u4e50\u9ad8\u6ca1\u6709\u6307\u5b9aMindStorms Robot Inventor Kit\u7684\u667a\u80fd\u4e2d\u5fc3\u5185\u7684\u786c\u4ef6\uff0cEV3\uff1b\u7684\u667a\u80fd\u7816\u4f7f\u7528\u7684\u662fARM9\u5904\u7406\u5668\uff0c\u800c\u4e4b\u524d\u7684MindStorms NXT\u5957\u4ef6\u4f7f\u7528\u7684\u662fARM7\u5904\u7406\u5668\u3002\n\u4e50\u9ad8\u601d\u7ef4\u98ce\u66b4\u673a\u5668\u4eba\u53d1\u660e\u8005\u5de5\u5177\u5305\u7684\u4ef7\u683c\u662f\u4e50\u9ad8Boost\u521b\u610f\u5de5\u5177\u7bb1\u7684\u4e24\u500d\u591a\uff0c\u540e\u8005\u8868\u9762\u4e0a\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7c7b\u4f3c\u7684\u57fa\u4e8e\u4e50\u9ad8\u7684\u673a\u5668\u4eba\u5de5\u5177\u7bb1\u3002\u7136\u800c\uff0c\u4e50\u9ad8Boost\u7684\u5a01\u529b\u8981\u5c0f\u5f97\u591a\u3002\u5b83\u4f7f\u7528\u81ea\u5df1\u7b80\u5316\u7684\u57fa\u4e8e\u74f7\u7816\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e2\u4e0d\u652f\u6301Scratch\u4e5f\u4e0d\u652f\u6301Python\uff0c\u5e76\u4e14\u53ea\u6709\u4e24\u4e2a\u9a6c\u8fbe(\u4e00\u4e2a\u5185\u7f6e\u5728Move Hub\u5757\u4e2d)\u548c\u4e00\u4e2a\u7ec4\u5408\u989c\u8272\u548c\u8ddd\u79bb\u4f20\u611f\u5668\u3002\nLego Boost\u672c\u8eab\u4e5f\u4e0d\u5904\u7406\u4efb\u4f55\u7f16\u7a0b\uff1bMove Hub\u53ea\u662f\u624b\u673a\u6216\u5e73\u677f\u7535\u8111\u4e0aLego Boost\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u7684\u547d\u4ee4\u7684\u63a5\u6536\u5668\u3002\u867d\u7136\u4e50\u9ad8Boost\u5bf9\u4e8e\u5e0c\u671b\u5b66\u4e60\u673a\u5668\u4eba\u548c\u7f16\u7a0b\u57fa\u7840\u77e5\u8bc6\u7684\u5e74\u8f7bSTEM\u5b66\u751f\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u5305\uff0c\u4f46\u5b83\u5e76\u4e0d\u50cfMindStorms\u5de5\u5177\u5305\u90a3\u6837\u662f\u5f00\u653e\u5f0f\u7684\u3002", "note_en": "Lego&#39;s Mindstorms kits have stood out as some of the best robotics and programming education tools for years. They&#39;ve also been some of the slowest to evolve, with the most recent kit,  Lego Mindstorms EV3, coming out in 2013. Now, after seven years, Lego has finally unveiled a new Mindstorms kit: Lego Mindstorms Robot Inventor.\n The Robot Inventor kit lets kids (or adults) build five different robot models out of 949 pieces, ranging from a four-legged walker to a bipedal wheeled robot that can give high-fives. All of these robots can be programmed to perform different tricks, like grabbing items, firing plastic projectiles, avoiding obstacles, and playing various sports with a ball.\n The kit includes four low-profile, medium-angular motors; a color and light sensor; and a distance sensor, which work together with the Intelligent Hub block to power these robots and execute commands. Of course, like all Mindstorms kits, you can build your own robotic creations with the tools at hand, and add Lego Technic and System pieces for more complex projects.\n  The Intelligent Hub serves as the brain of Lego Mindstorms, and the block that houses the Mindstorms Robot Inventor Kit is the most advanced one yet. It features six input/output ports for sensors and motors, a six-axis gyro/accelerometer, a speaker, and a five-by-five LED matrix. The Intelligent Hub and all robots built with it can be controlled wirelessly over Bluetooth with the Lego Mindstorms Robot Inventor app for Android, iOS, Windows 10, and macOS. The app supports programming in both the tile-based Scratch language and in Python, for more complex projects that require the precision of written code.\n Curiously, the Intelligent Hub has two fewer ports than the Intelligent Brick used by the Mindstorms EV3 kit, which had eight. However, the distance sensor features a six-pin adapter that enables the use of third-party components, including electronics boards, which adds more expandability to the kit. Lego has not specified the hardware inside the Mindstorms Robot Inventor Kit&#39;s Intelligent Hub; the EV3&#39;s Intelligent Brick used an ARM9 processor, while the Mindstorms NXT kit before that used an ARM7 processor.\n  The Lego Mindstorms Robot Inventor Kit is more than twice as expensive as the  Lego Boost Creative Toolbox, which on its surface looks like a similar Lego-based robotics kit. However, Lego Boost is far less powerful. It uses its own simplified tile-based programming language and supports neither Scratch nor Python, and comes with only two motors (one built into its Move Hub block) and one combination color-and-distance sensor.\n  Lego Boost also does not process any programming itself; the Move Hub is simply a receiver for commands sent from the Lego Boost app on a phone or tablet. While Lego Boost is an excellent kit for younger STEM students looking to learn the basics of robotics and programming, it isn&#39;t nearly as open-ended as a Mindstorms kit.", "posttime": "2020-06-14 05:16:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,\u4e50\u9ad8,lego,\u673a\u5668\u4eba", "title": "7\u5e74\u540e\uff0c\u4e50\u9ad8\u53d1\u5e03\u4e86\u4e00\u6b3e\u65b0\u7684MindStorms\u5de5\u5177\u5305", "title_en": "After 7 years, Lego releases a new Mindstorms kit", "transed": 1, "url": "https://www.pcmag.com/news/it-took-7-years-but-lego-finally-has-a-new-mindstorms-kit", "via": "", "real_tags": ["\u53d1\u5e03", "\u4e50\u9ad8", "lego", "\u673a\u5668\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006456, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u5c06\u7f16\u5199x86_64\u6307\u4ee4\u8bed\u4e49\u7684\u4e00\u4e2a\u5c0f\u7247\u6bb5(\u4f46\u4ecd\u7136\u975e\u5e38\u590d\u6742)\uff1a\u5185\u5b58\u5bfb\u5740\u3002\n\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u5c06\u5199\u51fax86_64\u5141\u8bb8\u7528\u6237\u4ec5\u901a\u8fc7\u4e00\u6761\u6307\u4ee4\u6765\u5bfb\u5740\u5185\u5b58\u7684\u4e0d\u540c\u65b9\u5f0f\uff1amov\u3002\n\u6211\u4e0d\u4f1a\u5c1d\u8bd5\u8ba8\u8bba\u5176\u4ed6\u53ef\u4ee5\u89e6\u53ca\u5185\u5b58\u7684\u6307\u4ee4(\u591a\u4e8f\u4e86CISC\uff0c\u8fd9\u51e0\u4e4e\u662f\u6240\u6709\u7684\u6307\u4ee4)\uff0c\u90a3\u4e9b\u5199\u5927\u91cf\u5185\u5b58\u7684\u6307\u4ee4(\u770b\u770b\u4f60\uff0cfxsave)\uff0c\u6216\u8005\u4efb\u4f55\u76f8\u90bb\u7684\u4e3b\u9898(\u4ee3\u7801\u6a21\u578b\u3001\u72ec\u7acb\u4e8e\u4f4d\u7f6e\u7684\u4ee3\u7801\u3001\u4e8c\u8fdb\u5236\u91cd\u65b0\u5b9a\u4f4d)\u3002\u6211\u751a\u81f3\u4e0d\u4f1a\u5c1d\u8bd5\u8ba8\u8bba\u5386\u53f2\u5bfb\u5740\u6a21\u5f0f\u6216\u5f53x86_64\u5904\u7406\u5668\u4e0d\u662f64\u4f4d\u6a21\u5f0f\u65f6\u5de5\u4f5c\u7684\u6a21\u5f0f(\u5373\uff0c\u9664\u4e8664\u4f4d\u4ee3\u7801\u7684\u957f\u6a21\u5f0f\u4e4b\u5916\u7684\u4efb\u4f55\u6a21\u5f0f)\u3002\n\u5c3d\u7ba1(\u6216\u8005\u4e5f\u8bb8\u8981\u611f\u8c22\uff1f)\u3002\u4f20\u7edf\u7684\u5730\u72f1\uff0c\u5373x86_64\u7684\u6307\u4ee4\u7f16\u7801\uff0c\u5728\u5982\u4f55\u5bfb\u5740\u5185\u5b58\u65b9\u9762\u6709\u4e00\u4e9b\u9650\u5236\u3002\n\u8fd9\u4e24\u79cd\u5bfb\u5740\u6a21\u5f0f\u90fd\u8981\u6c42\u6240\u6709\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u76f8\u540c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u4e0d\u80fd\u505a\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u6df7\u540864\u300132\u548c16\u4f4d\u5bc4\u5b58\u5668\u6765\u4ea7\u751f\u6709\u6548\u5730\u5740-x86_64\u7f16\u7801\u4e2d\u6839\u672c\u6ca1\u6709\u8fd9\u6837\u505a\u7684\u7a7a\u95f4\u3002\n\u6240\u6709\u5bc4\u5b58\u5668\u5fc5\u987b\u5f7c\u6b64\u5927\u5c0f\u76f8\u540c\uff0c\u4f46\u4e0d\u5fc5\u4e0e\u5904\u7406\u5668\u6a21\u5f0f\u76f8\u540c\u3002\u7279\u522b\u5730\uff0c\u901a\u8fc7\u5728\u6211\u4eec\u7684\u7f16\u7801\u4e2d\u5305\u62ec\u5730\u5740\u524d\u7f00\u5b57\u8282(0x67)\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u752832\u4f4d\u5bc4\u5b58\u5668\u800c\u4e0d\u662f64\u4f4d\u5bc4\u5b58\u5668\u3002\n\u6211\u79f0\u8fd9\u79cd\u6a21\u5f0f\u4e3a\u201c\u6bd4\u4f8b-\u6307\u6570-\u57fa\u7840-\u4f4d\u79fb\u201d\uff0c\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\u8fd8\u80fd\u53eb\u4ec0\u4e48\u3002\n\u636e\u6211\u6240\u77e5\uff0cIntel\u548cAMD\u5b9e\u9645\u4e0a\u90fd\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u5355\u4e00\u6a21\u5f0f\uff1b\u76f8\u53cd\uff0c\u4ed6\u4eec\u5c06\u5176\u79f0\u4e3a\u5177\u6709\u5404\u79cd\u4e0d\u540c\u7f16\u7801\u7684\u76f8\u5173\u6a21\u5f0f\u7684\u4e00\u822c\u96c6\u5408\u3002\n\u4f46\u6211\u4eec\u4eca\u5929\u8ba8\u8bba\u7684\u4e0d\u662f\u7f16\u7801\uff1a\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u8bed\u4e49\uff0c\u4ece\u8bed\u4e49\u4e0a\u8bb2\uff0c\u8fd9\u4e9b\u76f8\u5173\u6a21\u5f0f\u4e2d\u7684\u6bcf\u4e00\u79cd\u90fd\u4f9d\u8d56\u4e8e\u53c2\u6570\u7684\u67d0\u79cd\u7ec4\u5408\uff1a\n\u4f4d\u79fb\uff1a\u6574\u4f53\u504f\u79fb\u91cf\u3002\u5373\u4f7f\u572864\u4f4d\u6a21\u5f0f\u4e0b\uff0c\u8fd9\u901a\u5e38\u4e5f\u88ab\u9650\u5236\u4e3a32\u4f4d\uff0c\u4f46\u53ef\u4ee5\u662f64\u4f4d\uff0c\u5e26\u6709\u4e00\u4e9b\u9009\u62e9\u7f16\u7801\u3002\u7a0d\u540e\u518d\u8bb2\u3002\n\u8fd9\u56db\u79cd\u7ec4\u5408(\u5305\u62ec\u6240\u6709\u56db\u79cd)\u90fd\u662f\u6709\u6548\u7684\u3002\u4ee5\u4e0b\u662f\u6709\u6548\u7684\u7ec4\u5408\uff0c\u5927\u81f4\u6309\u590d\u6742\u6027\u9012\u589e\u987a\u5e8f\u6392\u5217\uff1a\n\u8fd9\u53ef\u4ee5\u8bf4\u662fx86\u7cfb\u5217\u4e2d\u6700\u7b80\u5355\u7684\u5bfb\u5740\u673a\u5236\uff1a\u4f4d\u79fb\u5b57\u6bb5\u88ab\u89c6\u4e3a\u7edd\u5bf9\u5185\u5b58\u5730\u5740\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u5728x86_64\u4e0a\u4e5f\u51e0\u4e4e\u5b8c\u5168\u65e0\u7528\u3002\u8fd8\u8bb0\u5f97\u90a3\u4e2a\u5173\u4e8e\u4f4d\u79fb\u7684\u6ce8\u91ca\u5417\uff1f\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f32\u4f4d\uff1f\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u8868\u793a\u7edd\u5bf9\u5730\u5740\uff0c\u56e0\u4e3a\u7edd\u5bf9x86_64\u5730\u5740\u662f64\u4f4d(\u5b9e\u9645\u4e0a\u662f48\u4f4d\uff0c\u4f46\u4e0d\u7ba1\u600e\u6837)\uff0c\u4e0d\u9002\u5408\u4f4d\u79fb\u3002\n\u6709\u4e00\u4e2a\u4f8b\u5916\uff1ax86_64\u5141\u8bb8\u4f7f\u7528a*\u5bc4\u5b58\u5668\u8fdb\u884c64\u4f4d\u79fb\u4f4d\u3002\n\uff1b\u5c06\u4f4d\u4e8e0x0000000000000000ff\u7684qword\u5b58\u50a8\u5230rax mov rax\uff0c[0xff]\uff1b\u5c06\u4f4d\u4e8e0x0000000000000000ff\u7684\u53cc\u5b57\u5b58\u50a8\u5230eax mov eax\uff0c[0xff]\uff1b\u5c06\u4f4d\u4e8e0x0000000000000000ff\u7684\u5b57\u5b58\u50a8\u5230ax mov ax\uff0c[0xff]\uff1b\u5c06\u4f4d\u4e8e0x000000000000000000ff\u7684\u5b57\u8282\u5b58\u50a8\u5230almov al\uff0c[0xff]\u3002\nGAS(GNU\u6c47\u7f16\u7a0b\u5e8f)\u5c06\u5b83\u4eec\u79f0\u4e3a32\u4f4d\u548c64\u4f4d\u6a21\u5f0f\u4e0b\u7684movab\u3002\n\u9996\u5148\uff0c\u51fa\u4e8e\u4e0e\u672c\u6587\u65e0\u5173\u7684\u4ee3\u7801\u6a21\u578b\u539f\u56e0\u3002\u4f0a\u83b1\u00b7\u672c\u5fb7\u65af\u57fa\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u535a\u5ba2\u6ce2\u65af\u987f\u90a3\u4e9b\u3002\n\u66f4\u5177\u4f53\u5730\u8bf4\uff1a\u5927\u591a\u6570\u7a0b\u5e8f\u81f3\u5c11\u6709\u51e0\u4e2a\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u9759\u6001\u5730\u5740\uff0c\u6bd4\u5982\u5168\u5c40\u53d8\u91cf\u3002\n\u6309RBP mov RBP\uff0cRSP movabs rax\uff0c\u504f\u79fbx\uff1b\u8fd9\u91cc\uff01mov qword PTR[RBP-8]\u3001rax mov rax\u3001qword PTr[RBP-8]mov rax\u3001qword PTR[rax]popRBP ret\u3002\n\u901a\u8fc7\u57fa\u5740\u5bc4\u5b58\u5668\u7684\u5bfb\u5740\u5728\u7edd\u5bf9\u5bfb\u5740\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u5c42\u95f4\u63a5\u5c42\uff1a\u4e0d\u662f\u7f16\u7801\u5230\u6307\u4ee4\u7684\u4f4d\u79fb\u5b57\u6bb5\u4e2d\u7684\u7edd\u5bf9\u5730\u5740\uff0c\u800c\u662f\u4ece\u6307\u5b9a\u7684\u901a\u7528\u5bc4\u5b58\u5668(\u4efb\u4f55GPR\uff01\u4e07\u5c81\uff01)\u3002\n\u8fd9\u79cd\u95f4\u63a5\u6027\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u6a21\u5f0f\u5bf9\u4efb\u610f\u76ee\u6807\u5bc4\u5b58\u5668\u8fdb\u884c\u7edd\u5bf9\u5bfb\u5740\uff1a\n\uff1b\u5c06\u7acb\u5373\u6570(\u4e0d\u662f\u4f4d\u79fb)\u5b58\u50a8\u5230rbx mov rbx\uff0c0xacabacabacabacab\uff1b\u5c06\u5b58\u50a8\u5728rbx\u4e2d\u7684\u5730\u5740\u5904\u7684qword\u5b58\u50a8\u5230rcx mov rcx\uff0c[rbx]\u3002\n\u2026\u3002\u4f46\u8003\u8651\u5230\u6211\u4eec\u5373\u5c06\u770b\u5230\u7684\u66f4\u4e30\u5bcc\u7684\u5bfb\u5740\u65b9\u5f0f\uff0c\u6211\u4eec\u6ca1\u6709\u591a\u5c11\u7406\u7531\u8fd9\u6837\u505a\u3002\n\u56e0\u4e3a\u6709\u65f6\u6211\u4eec\u5df2\u7ecf\u4ece\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u83b7\u5f97\u4e86\u4e00\u4e2a\u8ba1\u7b97\u51fa\u7684\u5730\u5740\uff0c\u6211\u4eec\u53ea\u60f3\u4f7f\u7528\u5b83\u3002\n\u4e0a\u9762\u7684\u7f6e\u6362\u793a\u4f8b\u7684\u5206\u89e3\u4e5f\u5f88\u597d\u5730\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u8fd9\u4e0e\u901a\u8fc7\u57fa\u5740\u5bc4\u5b58\u5668\u5bfb\u5740\u4e00\u6837\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u7d22\u5f15\u5bc4\u5b58\u5668\u7684\u503c\u3002\n\uff1b\u5c06rcx\u4e2d\u7684qword\u5b58\u50a8\u5230\u8ba1\u7b97\u7684\u5185\u5b58\u5730\u5740\u4e2d\uff1b\u4f5c\u4e3arax\u548crbx mov[rax+rbx]\u4e2d\u7684\u503c\u4e4b\u548c\uff0crcx\u3002\n\u6211\u8d39\u4e86\u597d\u5927\u52b2\u624d\u60f3\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8fd9\u5f53\u7136\u610f\u5473\u7740\u6211\u7684\u540c\u4e8b\u9a6c\u4e0a\u5c31\u627e\u5230\u4e86\u4e00\u4e2a\uff1a\n\u63a8\u9001RBP mov RBP\u3001RSP mov qword PTR[RBP-8]\u3001RDI mov dword PTR[RBP-12]\u3001ESI mov rax\u3001qword PTR[RBP-8]\uff1brax\u662fbuf movsxd rcx\u3001dword ptr[RBP-12]\uff1brcx\u662f\u7d22\u5f15movsx eax\u3001\u5b57\u8282ptr[rax+rcx]\uff1b\u5c06buf[index]\u5b58\u50a8\u5230eax POP RBP\u3002\n\u56de\u60f3\u8d77\u6765\uff0c\u8fd9\u4e00\u70b9\u663e\u800c\u6613\u89c1\uff1aBase+Index\u975e\u5e38\u9002\u5408\u5bf9\u6570\u7ec4\u8bbf\u95ee\u5efa\u6a21\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\u548c\u6570\u7ec4\u504f\u79fb\u91cf\u5728\u7f16\u8bd1\u65f6\u90fd\u4e0d\u662f\u56fa\u5b9a\u7684\u3002\n\u66f4\u95f4\u63a5\u7684\uff01\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u731c\u5230\uff0c\u4f7f\u7528\u57fa\u5740\u5bc4\u5b58\u5668\u548c\u4f4d\u79fb\u5b57\u6bb5\u8ba1\u7b97\u6709\u6548\u5730\u5740\u5bf9\u5e94\u4e8e\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\u7136\u540e\uff0c\u6211\u4eec\u628a\u8fd9\u7b14\u94b1\u4f5c\u4e3a\u6211\u4eec\u7684\u6709\u6548\u5730\u5740\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\uff1b\u5c060xafe\u52a0\u5230rax\u4e2d\u5b58\u50a8\u7684\u503c\u4e2d\uff0c\u7136\u540e\u5c06\u8ba1\u7b97\u51fa\u7684\u5730\u5740\u5904\u7684qword\u5b58\u50a8\u5230rbx mov rbx\u4e2d\uff0c[rax+0xcae]\u3002\n\u6b63\u5982\u6211\u4eec\u5728Base+Index\u4e2d\u770b\u5230\u7684\uff0c\u4e00\u4e9b\u5bfb\u5740\u6a21\u5f0f\u81ea\u7136\u53cd\u6620\u4e86\u7c7b\u4f3cC\u8bed\u8a00\u7684\u8bed\u4e49\u3002\n\u57fa\u5740+\u4f4d\u79fb\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u6765\u8003\u8651\uff0c\u4f46\u5bf9\u4e8e\u7ed3\u6784\u8bed\u4e49\u800c\u8a00\uff1a\u57fa\u5740\u5bc4\u5b58\u5668\u4fdd\u5b58\u7ed3\u6784\u5f00\u59cb\u5904\u7684\u5730\u5740\uff0c\u800c\u4f4d\u79fb\u5b57\u6bb5\u4fdd\u5b58\u8be5\u7ed3\u6784\u4e2d\u7684\u56fa\u5b9a\u504f\u79fb\u91cf\u3002\nPUSH RBP mov RBP\u3001RSP mov qword PTR[RBP-8]\u3001RDI mov rax\u3001qword PTR[RBP-8]\uff1brax\u662f\u9875\u680fmov rax\u3001qword PTR[rax+8]\uff1brax+8\u662ffoobar-&gt;b\uff1b\u5b58\u50a8\u56derax\u5f39\u51faRBP ret\u3002\n\u5982\u679c\u4f60\u60f3\u4e00\u5f00\u59cb\u7684\u5806\u6808\u6784\u9020\u548c\u5e03\u5c40\uff0c\u8fd9\u4e5f\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ed3\u6784\uff1a\u50cf[RBP-N]\u8fd9\u6837\u7684\u8bbf\u95ee\u57fa\u672c\u4e0a\u662f\u5806\u6808-&gt;\u5bf9\u8c61\u3002\n\u5982\u679c\u6700\u540e\u4e00\u79cd\u6a21\u5f0f\u5bf9\u60a8\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u8fd9\u4e00\u79cd\u5c31\u662f\u5408\u4e4e\u903b\u8f91\u7684\u4e0b\u4e00\u6b65\uff1a\u5b83\u5728\u8bed\u4e49\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u7d22\u5f15\u5bc4\u5b58\u5668\u7684\u503c\u3002\n\uff1b\u5c06\u5b58\u50a8\u5728rax\u548crcx\u4e2d\u7684\u503c\u6dfb\u52a00xafe\uff0c\u7136\u540e\u5c06\u8ba1\u7b97\u673a\u5730\u5740\u5904\u7684qword\u5b58\u50a8\u5230rbx mov rbx\u4e2d\uff0c[rax+rcx+0xcae]\u3002\n\u5c31\u50cfBase+Index\u81ea\u7136\u5730\u4e3a\u6570\u7ec4\u8bbf\u95ee\u5efa\u6a21\uff0cBase+\u4f4d\u79fb\u81ea\u7136\u5730\u4e3a\u7ed3\u6784\u8bbf\u95ee\u5efa\u6a21\u4e00\u6837\uff0cBase+Index+Disposition\u81ea\u7136\u5730\u4e3a\u6570\u7ec4\u5185\u7684\u7ed3\u6784\u8bbf\u95ee\u5efa\u6a21\uff01\n\u6211\u8d39\u4e86\u597d\u5927\u52b2\u624d\u5728Godbolt\u4e0a\u53d1\u51fa\u8fd9\u6837\u7684\u58f0\u97f3\uff0c\u4f46\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e2a\u5e26\u6709-O1\u7684\uff1a\nstruct foo{long a\uff1blong b\uff1b}\uff1blong square(struct foo foos[]\uff0clong i){struct foo x=foos[i]\uff1breturn x\u3002b\uff1b}\u3002\nshl rsi\uff0c4 mov rax\uff0cqword ptr[rdi+rsi+8]\uff1brdi\u662ffoos\uff0crsi\u662fi\uff0c8\u662f\u5b57\u6bb5\u504f\u79fb\u91cfret\u3002\n\u523b\u5ea6\u57df\u7c7b\u4f3c\u4e8e\u4f4d\u79fb\uff0c\u56e0\u4e3a\u5b83\u662f\u7f16\u7801\u5230\u6307\u4ee4\u4e2d\u7684\u6052\u5b9a\u56e0\u5b50\u3002\u7136\u800c\uff0c\u4e0e\u7f6e\u6362\u4e0d\u540c\u7684\u662f\uff0c\u6bd4\u4f8b\u53d7\u5230\u6781\u5927\u7684\u9650\u5236\uff1a\u5b83\u53ea\u6709\u4e24\u4f4d\u5bbd\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u80fd\u662f4\u4e2a\u53ef\u80fd\u503c\u4e2d\u76841\u4e2a\uff1a1\u30012\u30014\u62168\u3002\n\u987e\u540d\u601d\u4e49\uff0cScale\u5b57\u6bb5\u7528\u4e8e\u7f29\u653e(\u5373\u4e58\u4ee5)\u53e6\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7279\u522b\u662f\u5b83\u603b\u662f\u7f29\u653e\u7d22\u5f15\u5bc4\u5b58\u5668-Scale\u4e0d\u80fd\u5728\u6ca1\u6709\u7d22\u5f15\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\n\u5728\u8bb8\u591a\u5176\u4ed6\u529f\u80fd\u4e2d\uff0cBase+(Index*Scale)\u81ea\u7136\u5730\u5c06\u8bbf\u95ee\u5efa\u6a21\u4e3a\u6307\u9488\u6570\u7ec4(\u4e0e\u5982\u4e0a\u6240\u8ff0\u7684\u5e03\u5c40\u7ed3\u6784\u6570\u7ec4\u4e0d\u540c)\uff1a\nstruct foo{long a\uff1blong b\uff1b}\uff1blong bar(struct foo*foos[]\uff0clong i){struct foo*x=foos[i]\uff1breturn x-&gt\uff1bb\uff1b}\u3002\nMOV rax\uff0cqword ptr[rdi+8*rsi]\uff1brdi\u662ffoos\uff0crsi\u662fi\uff0c8\u662f\u523b\u5ea6(\u6307\u9488\u5927\u5c0f\uff01)\u3002MOV RAX\uff0cQWORD PTR[RAX+8]RET\n\u6211\u4eec\u7ee7\u7eed\u8d70\u5427\u3002\u8fd9\u4e0e\u4e0a\u4e00\u4e2a\u6a21\u5f0f\u51e0\u4e4e\u76f8\u540c\uff0c\u53ea\u662f\u6211\u4eec\u4e3a\u4f4d\u79fb\u573a\u53bb\u6389\u4e86\u57fa\u5740\u5bc4\u5b58\u5668\u3002\u90a3\u91cc\u6ca1\u6709\u7279\u522b\u7684\u590d\u6742\u6027\u3002\n(index*scale)+\u4f4d\u79fb\u81ea\u7136\u4f1a\u5bf9\u6570\u7ec4\u8bbf\u95ee\u7684\u7279\u6b8a\u60c5\u51b5\u8fdb\u884c\u5efa\u6a21\uff1a\u5f53\u6570\u7ec4\u53ef\u9759\u6001\u5bfb\u5740(\u4f8b\u5982\uff0c\u5168\u5c40)\uff0c\u5e76\u4e14\u5143\u7d20\u5927\u5c0f\u53ef\u901a\u8fc7\u6807\u5ea6\u8ba1\u7b97\u65f6\u3002\nmovsxd rax\uff0cEDI mov eax\uff0cdword ptr[4*rax+tbl]\uff1brax\u662fi\uff0c4\u662f\u6bd4\u4f8b(sizeof(Int)==4)ret\u3002\n\u73b0\u5728\u6211\u4eec\u7528\u7164\u6c14\u505a\u996d\u3002\u8fd9\u662f\u6700\u540e\u7684\u4e5f\u662f\u6700\u590d\u6742\u7684x86_64\u5bfb\u5740\u5f62\u5f0f\uff0c\u4f46\u5728\u6982\u5ff5\u4e0a\u7edd\u5bf9\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u4e4b\u5904\uff1a\u5b83\u53ea\u662f\u5728\u4e09\u53c2\u6570\u5bfb\u5740\u6a21\u5f0f\u4e4b\u4e0a\u518d\u8fdb\u884c\u4e00\u6b21\u7b97\u672f\u64cd\u4f5c\u3002\nLea rax\uff0c[rdi+4*rdi]shl rax\uff0c4 mov rax\uff0cqword ptr[rax+8*rsi+tbl]ret\u3002\n\u4e0a\u9762\u8bb0\u5f55\u7684\u5bfb\u5740\u6a21\u5f0f\u51e0\u4e4e\u4e0e\u5176\u5386\u53f2\u4e0a\u7684x86_32\u7b49\u6548\u5bfb\u5740\u6a21\u5f0f\u76f8\u540c-\u5176\u6700\u5927\u53d8\u5316\u662f\u5141\u8bb864\u4f4dGPRS\u548c(\u6709\u65f6)64\u4f4d\u4f4d\u79fb\u3002\nx86_64\u7684\u771f\u6b63\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u6dfb\u52a0\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u5bfb\u5740\u6a21\u5f0f\uff0c\u5373\u4f17\u6240\u5468\u77e5\u7684\u201c\u76f8\u5bf9RIP\u201d\u5bfb\u5740\u3002\n\u4e3a\u4ec0\u4e48\u53eb\u201cRIP-Relative\u201d\uff1f\u56e0\u4e3a\u5b83\u7f16\u7801\u76f8\u5bf9\u4e8eRIP\u5bc4\u5b58\u5668\u7684\u503c\u7684\u4f4d\u79fb(\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u4e0b\u4e00\u6761\u6307\u4ee4\u7684RIP\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u6307\u4ee4\u7684RIP)\u3002\u8fd9\u901a\u5e38\u7528\u719f\u6089\u7684[\u57fa\u5740+\u4f4d\u79fb]\u8bed\u6cd5\u8868\u793a\uff0c\u9664\u4e86\u57fa\u5740\u5bc4\u5b58\u5668\u73b0\u5728\u662fRIP\u800c\u4e0d\u662fGPR\uff1a\n\u51fa\u4e8e\u6211\u6700\u521d\u8bf4\u8fc7\u6211\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u7684\u539f\u56e0\uff1a\u4e0e\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801\u548c\u4ee3\u7801\u6a21\u578b\u3002\n\u6211\u4eec\u5c06\u505a\u4e00\u4e2a\u7b80\u77ed\u7684\u4f8b\u5916\uff1a\u4f7f\u7528RIP\u76f8\u5bf9\u5bfb\u5740\u4f7f\u5f97\u4e0e\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801\u66f4\u5c0f\u3001\u66f4\u7b80\u5355\uff0c\u5e76\u4e14\u975e\u5e38\u9002\u5408\u201c\u5c0f\u201d(\u548c\u9ed8\u8ba4)\u4ee3\u7801\u6a21\u578b\uff0c\u5728\u8fd9\u79cd\u6a21\u578b\u4e2d\uff0c\u6240\u6709\u4ee3\u7801\u548c\u6570\u636e\u90fd\u9700\u8981\u572832\u4f4d\u504f\u79fb\u91cf\u5185\u53ef\u5bfb\u5740\u3002\nfoo\uff1amov rax\uff0cqword PTR[RIP+tbl@GOTPCREL]mov rax\uff0cqword PTR[rax+8*rdi]ret\u3002\nfoo\uff1acall.L0$p.L0$pb\uff1aPOP eax.Ltmp0\uff1aadd eax\uff0cOFFSET_GLOBAL_OFFSET_TABLE_+(.Ltmp0-.L0$PB)mov ecx\uff0cdword PTR[esp+4]mov eax\uff0cdword PTR[eax+tbl@get]mov eax\uff0cdword PTR[eax+4*ecx]ret\u3002\nx86_64\u51e0\u4e4e\u627c\u6740\u4e86\u5206\u6bb5\u3002\u5dee\u4e0d\u591a\u4e86\u3002\u7531\u4e8e\u5e73\u9762\u5730\u5740\u7a7a\u95f4\uff0c\u6bb5\u5bc4\u5b58\u5668\u4e0d\u518d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u51fa\u73b0\u5728\u51e0\u4e2a\u5730\u65b9\uff1a\nLinux(\u5b9e\u9645\u4e0a\u662fglibc)\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u4f7f\u7528fs\u6765\u8bbf\u95ee\u5185\u6838\u914d\u7f6e\u7684TLS\u6bb5\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e2aCPU\u7684GDT\u914d\u7f6e\u4e2d\u627e\u5230\u8fd9\u4e9b\u6bb5\u3002\u5047\u8bbeglibc\u4e2d\u7684\u5176\u4ed6\u4e1c\u897f(\u6216\u60a8\u4f7f\u7528\u7684\u4efb\u4f55libc)\u6ca1\u6709\u4f7f\u7528\u5b83\uff0c\u90a3\u4e48gs\u4f3c\u4e4e\u53ef\u4ee5\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u514d\u8d39\u4f7f\u7528\u3002\nLinux\u5728\u5185\u6838\u7a7a\u95f4\u4e2d\u4f7f\u7528GS\u6765\u5b58\u50a8\u6bcf\u4e2aCPU\u53d8\u91cf\u533a\u57df\u7684\u57fa\u5740\u3002\u6211\u4eec\u53ef\u4ee5\u5728PER_CPU_VAR\u7684\u5b8f\u5b9a\u4e49\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a\n\u6240\u4ee5\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u3002\u597d\u6d88\u606f\u662f\uff0c\u5173\u5fc3\u5b83\u4eec\u5e76\u4e0d\u662f\u592a\u7cdf\u7cd5\uff1a\u5b83\u4eec\u672c\u8d28\u4e0a\u5f52\u7ed3\u4e3a\u5c06\u6bb5\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u4e0e\u5730\u5740\u8ba1\u7b97\u7684\u5176\u4f59\u90e8\u5206\u76f8\u52a0\u3002\nPush RBP mov RBP\uff0cRSP mov rax\uff0cqword PTR fs\uff1a[0]\uff1b\u6293\u53d6\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u533aLea rax\u7684\u57fa\u5730\u5740[rax+x@TPOFF]\uff1b\u8ba1\u7b97TLS mov qword PTR[RBP-8]\uff0crax\u5185x\u7684\u6709\u6548\u5730\u5740\uff1b\u5c06x\u7684\u5730\u5740\u5b58\u50a8\u5230y mov rax\uff0cqword PTR[RBP-8]mov eax\uff0cdword PTR[rax]popRBP ret\u4e2d\u3002\n\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u5f53\u4f7f\u752864\u4f4d\u5bc4\u5b58\u5668\u8fdb\u884c\u5bfb\u5740\u65f6\uff0c\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5728\u4f7f\u752832\u4f4d\u5bc4\u5b58\u5668\u65f6\u5219\u4e0d\u662f\u8fd9\u6837\u3002\u5f53\u4f7f\u752832\u4f4d\u5bc4\u5b58\u5668\u5bfb\u5740\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9664esp\u4e4b\u5916\u7684\u4efb\u4f5532\u4f4dgpr\u4f5c\u4e3a\u7d22\u5f15\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u7f16\u7801\u602a\u7656(\u6307\u793aesp(0b100)\u7684\u4f4d\u6a21\u5f0f\u6539\u4e3a\u7528\u6765\u6307\u793a\u2026\u3002\u67d0\u4e8b)\u3002(\u21a9", "note_en": "Today I\u2019m going to write up one small (and yet still remarkably complicated) fragment of x86_64\u2019sinstruction semantics: memory addressing.\n Specifically, I\u2019m going to write up the different ways in which x86_64 allows the user to addressmemory via just  one instruction:  mov.\n I won\u2019t attempt to cover other instructions that can touch memory (which is pretty much all of them,thanks CISC), ones that write massive chunks of memory (looking at you,  fxsave), or any adjacentsubjects (code models, position independent code, binary relocations). I also won\u2019t even try tocover historical addressing modes or modes that work when an x86_64 processor isn\u2019t in 64-bit mode(i.e., any modes other than long mode with 64-bit code).\n  Despite (or perhaps thanks to?) the legacy hell that is x86_64\u2019s instruction encoding,there are  some constraints on how memory is addressed.\n  Both addressing modes require all registers to be the same size as each other.In order words, we can\u2019t do something weird like mixing 64, 32, and 16-bit registersto produce an effective address \u2014 there simply isn\u2019t room in the x86_64 encodingto do so.\n  All registers have to be the same size as each each other but  don\u2019t have tobe the same as the processor mode. In particular, we can use 32-bit registers insteadof 64-bit ones by including the address prefix byte ( 0x67) in our encoding.\n  I call this mode \u201cScale-Index-Base-Displacement\u201d because I have no idea what else to call it.\n As far as I can tell, neither Intel nor AMD  actually considers this to be asingular mode; instead, they refer to it as a general collection of related modeswith a wide variety of different encodings.\n But we\u2019re not talking about encodings today: we\u2019re talking about semantics,and semantically each of these related modes falls back to some combination offour parameters:\n Displacement: An integral offset. This is normally limited to 32 bits even in 64-bit mode but can be 64-bits with a few select encodings. More on that later.\n Various combinations of the four (including all four) are valid. Here are the valid combinations,in roughly increasing order of complexity:\n    This is arguably the simplest addressing mechanism in the x86 family: the  displacement fieldis treated as an absolute memory address.\n Unfortunately, it\u2019s also almost completely useless on x86_64. Remember that note about displacementsalmost always being 32 bits? That means you can\u2019t represent an absolute address, since anabsolute x86_64 address is 64 bits (really 48, but whatever) and just won\u2019t fit in the displacement.\n There\u2019s  one exception to this: x86_64 allows for a 64-bit displacement with the  a* registers.\n  ; store the qword at 0x00000000000000ff into rax mov  rax ,  [ 0xff ] ; store the dword at 0x00000000000000ff into eax mov  eax ,  [ 0xff ] ; store the word at 0x00000000000000ff into ax mov  ax ,  [ 0xff ] ; store the byte at 0x00000000000000ff into al mov  al ,  [ 0xff ]\n gas (the GNU assembler) refers to these as  movabs in both 32-bit and 64-bit modes.\n  First of all, for code model reasons that aren\u2019t relevant to this post. Eli Bendersky has a fantastic blog poston those.\n More concretely: most programs have at least a few static addresses that are determined atcompile-time, like global variables.\n    push  rbp mov  rbp ,  rsp movabs  rax ,  offset  x  ; here! mov  qword  ptr  [ rbp  -  8 ],  rax mov  rax ,  qword  ptr  [ rbp  -  8 ] mov  rax ,  qword  ptr  [ rax ] pop  rbp ret\n   Addressing via the  base register adds one layer of indirection over absolute addressing:instead of an absolute address encoded into the instruction\u2019s displacement field, an addressis loaded from the specified general-purpose register ( any GPR! Hooray!).\n This indirection allows us to do absolute addressing with an arbitrary destination register via thefollowing pattern:\n ; store the immediate (not displacement) into rbx mov  rbx ,  0xacabacabacabacab ; store the qword at the address stored in rbx into rcx mov  rcx ,  [ rbx ]\n \u2026but we have relatively few reasons to do that, given the richer addressing modes we\u2019re aboutto see.\n  Because sometimes we have a calculated address already lying around from another operation,and we just want to use it.\n The disassembly from the  displacement sample above has a good example of this as well:\n   This is just like addressing via the  base register, except that we also addin the value of the  index register.\n  ; store the qword in rcx into the memory address computed ; as the sum of the values in rax and rbx mov  [ rax  +  rbx ],  rcx\n  I had a hard time contriving an example for this, which of course means that my coworkersimmediately found one:\n   push  rbp mov  rbp ,  rsp mov  qword  ptr  [ rbp  -  8 ],  rdi mov  dword  ptr  [ rbp  -  12 ],  esi mov  rax ,  qword  ptr  [ rbp  -  8 ]  ; rax is buf movsxd  rcx ,  dword  ptr  [ rbp  -  12 ]  ; rcx is index movsx  eax ,  byte  ptr  [ rax  +  rcx ]  ; store buf[index] into eax pop  rbp ret\n  This is obvious in retrospect:  Base + Index is perfect for modeling arrayaccesses where neither the array\u2019s starting address nor the offset into thearray is fixed at compile-time.\n  More indirection! In case you haven\u2019t guessed it, calculating the effective address with  boththe  base register and the  displacement field corresponds to two operations:\n  Then, we take that sum and use it as our effective address. By way of example:\n ; add 0xcafe to the value stored in rax ; then, store the qword at the computed address into rbx mov  rbx ,  [ rax  +  0xcafe ]\n  As we\u2019ve seen with  Base + Index, some addressing modes naturally reflect C-likearray semantics.\n Base + Displacement can be thought of in a similar manner, but for structure semantics:the  base register holds the address to the beginning of the structure, and the  displacementfield holds the fixed offset into that structure.\n    push  rbp mov  rbp ,  rsp mov  qword  ptr  [ rbp  -  8 ],  rdi mov  rax ,  qword  ptr  [ rbp  -  8 ]  ; rax is foobar mov  rax ,  qword  ptr  [ rax  +  8 ]  ; rax + 8 is foobar-&gt;b; store back into rax pop  rbp ret\n  This also makes sense if you think about the stack construction and layout at the beginning ofevery function as a custom structure: accesses like  [rbp - N] are basically  stack-&gt;objN.\n  If the last mode makes sense to you, then this one is the logical next step: it\u2019s semanticallyidentical, except that we  also add the value of the  index register.\n  ; add 0xcafe to the values stores in rax and rcx ; then, store the qword at the computer address into rbx mov  rbx ,  [ rax  +  rcx  +  0xcafe ]\n  Just as  Base + Index naturally models an array access and  Base + Displacement naturally modelsstructure access,  Base + Index + Displacement naturally models structure access within an array!\n I had a hard time getting  clang to emit one of these on Godbolt, but eventuallygot one with  -O1:\n struct  foo  {  long  a ;  long  b ; }; long  square ( struct  foo  foos [],  long  i )  {  struct  foo  x  =  foos [ i ];  return  x . b ; }\n  shl  rsi ,  4 mov  rax ,  qword  ptr  [ rdi  +  rsi  +  8 ]  ; rdi is foos, rsi is i, 8 is the field offset ret\n    The  scale field is like  displacement in that it\u2019s a constant factor that\u2019s encoded intoour instruction. Unlike  displacement, however,  scale is extremely constrained: it\u2019s onlytwo bits wide, meaning that it can only be 1 of 4 possible values:  1,  2,  4, or  8.\n As the name implies, the  scale field is used to scale (i.e., multiply) another field.In particular, it always scales the  index register \u2014  scale  cannot be used without index.\n  Among many other things,  Base + (Index * Scale) naturally models accesses into an arrayof pointers (distinct from an array of laid-out structures, like above!):\n struct  foo  {  long  a ;  long  b ; }; long  bar ( struct  foo  * foos [],  long  i )  {  struct  foo  * x  =  foos [ i ];  return  x -&gt; b ; }\n  mov  rax ,  qword  ptr  [ rdi  +  8 * rsi ]  ; rdi is foos, rsi is i, 8 is the scale (pointer-sized!) mov  rax ,  qword  ptr  [ rax  +  8 ] ret\n   Let\u2019s keep going. This is almost identical to the last mode, except that we\u2019veswapped the  base register out for the  displacement field. No particular complexity there.\n  (Index * Scale) + Displacement naturally models a specialized case of array access:when the array is statically addressable (e.g., a global) and the element size iscomputable via the  scale.\n    movsxd  rax ,  edi mov  eax ,  dword  ptr  [ 4 * rax  +  tbl ]  ; rax is i, 4 is the scale (sizeof(int) == 4) ret\n   Now we\u2019re cooking with gas. This is the final and most complex x86_64 addressing form,but there\u2019s  absolutely nothing conceptually special about it: it\u2019s just one morearithmetic operation on top of the three-parameter addressing modes.\n     lea  rax ,  [ rdi  +  4 * rdi ] shl  rax ,  4 mov  rax ,  qword  ptr  [ rax  +  8 * rsi  +  tbl ] ret\n   The addressing mode documented above is  almost identical to its historical x86_32 equivalent\u2014 its biggest changes are allowing 64-bit GPRs and (sometimes) 64-bit displacements.\n Where x86_64 really diverges is in its addition of a brand new addressing mode, best known as\u201cRIP-relative\u201d addressing.\n Why is it called \u201cRIP-relative\u201d? Because it encodes a displacement relative to the RIP register\u2019svalue (specifically the RIP of the  next instruction, not the current one). This is usuallyrepresented with the familiar  [Base + Displacement] syntax, except that the  base register isnow  rip instead of a GPR:\n   For reasons that I originally said that I wouldn\u2019t go into in this blog post: position-independentcode and code models.\n We\u2019ll make a brief exception: using RIP-relative addressing makes position-independent code smallerand simpler, and is a natural fit for the \u201csmall\u201d (and default) code model, where all codeand data needs to be addressable within a 32-bit offset.\n    foo:  mov  rax ,  qword  ptr  [ rip  +  tbl@GOTPCREL ]  mov  rax ,  qword  ptr  [ rax  +  8 * rdi ]  ret\n  foo:  call  .L0$pb .L0$pb:  pop  eax .Ltmp0:  add  eax ,  offset  _GLOBAL_OFFSET_TABLE_ + ( .Ltmp0 - .L0$pb )  mov  ecx ,  dword  ptr  [ esp  +  4 ]  mov  eax ,  dword  ptr  [ eax  +  tbl@GOT ]  mov  eax ,  dword  ptr  [ eax  +  4 * ecx ]  ret\n  x86_64 almost killed segmentation. Almost. Segment registers are no longer necessary thanksto the flat address space, but they still show up in a few places:\n Linux (really glibc) uses  fs in userspace to access the TLS segments configured by the kernel.You can find these segments specified in the per-CPU GDT configuration. gs appears free for use in userspace , assuming something else in glibc (or whatever libc you use)doesn\u2019t use it.\n  Linux uses  gs in kernelspace to store the base address for the per-CPU variable region.We can see this in the  macro definition of  PER_CPU_VAR:\n So, unfortunately, we still need to care about these. The good news is that caring about themisn\u2019t too bad: they essentially boil down to adding the value in the segment register to the rest ofthe address calculation.\n    push  rbp mov  rbp ,  rsp mov  rax ,  qword  ptr  fs :[ 0 ]  ; grab the base address of the thread-local storage area lea  rax ,  [ rax  +  x@TPOFF ]  ; calculate the effective address of x within the TLS mov  qword  ptr  [ rbp  -  8 ],  rax  ; store the address of x into y mov  rax ,  qword  ptr  [ rbp  -  8 ] mov  eax ,  dword  ptr  [ rax ] pop  rbp ret\n  Our very first gotcha: this is true when using 64-bit registers for addressing, but  not when using 32-bit registers. When addressing with 32-bit registers we can use any 32-bit GPR as an index  except  esp, thanks to an encoding quirk (the bit pattern that would indicate  esp ( 0b100) is instead used to indicate\u2026something).\u00a0 \u21a9", "posttime": "2020-06-14 04:59:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u5b58,\u5bfb\u5740,addresses,rax", "title": "x86_64\u5982\u4f55\u5bfb\u5740\u5185\u5b58", "title_en": "How x86_64 Addresses Memory", "transed": 1, "url": "https://blog.yossarian.net/2020/06/13/How-x86_64-addresses-memory", "via": "", "real_tags": ["\u5185\u5b58", "\u5bfb\u5740", "addresses", "rax"]}, {"category": "", "categoryclass": "", "imagename": "1d75f860897fc802d9750abeb8de890d.jpg", "infoid": 1006455, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5267\u96c6\u94fe\u63a5\uff1a\u5e03\u4f26\u4e39\u673a\u5668\u4eba\u68a6\u60f3\u9879\u76ee-http://www.digitaljournal.com/article/250801\u851a\u84dd-https://azure.microsoft.com/en-us/overview/\u851a\u84dd\u5e02\u573a(\u7cfb\u7edf\u6316\u6398)\uff1ahttps://azuremarketplace.microsoft.com/en-us/marketplace/apps/sysdig.sydig_platform_1?tab=Overview-\u851a\u84dd\u5f27\u5f62-https://azure.microsoft.com/en-us/services/azure-arc/-\u851a\u84dd\u7ea2\u5e3dOpenShift-https://www.openshift.com/products/azure-openshift-vscode-\u3002https://code.visualstudio.com/\u5267\u96c6\u65f6\u95f4\u8868\u548c\u8bdd\u9898\uff1a\u63ed\u5e55\u6218-\u6559\u7236\u5e03\u4f26\u4e39\u00b7\u4f2f\u6069\u65af&#39\uff1b\u201c\u8d77\u6e90\u6545\u4e8b\u201d(C64\u548cApple 2C)--Choplifter\u3001Dark Castle\u548c\u5176\u4ed6\u6e38\u620f\u5851\u9020\u4e86\u5e74\u8f7b\u7684\u5e03\u5170\u767b\u00b7\u4f2f\u6069\u65af(Brendan Burns)&#39\uff1b\u5934\u8111-\u5e73\u53f0\u6e38\u620f\uff0c\u585e\u5c14\u8fbe\u548cOculus Quest\uff0c\u6e38\u620f\u673a\u548cXCloud(\u5728Azure Kubernetes\u4e0a\u8fd0\u884c)-\u81ea\u5b66\u5982\u4f55\u7f16\u7a0b-\u5e03\u5170\u767b\u60f3\u6210\u4e3a\u4e00\u540d\u79d1\u5e7b\u4f5c\u5bb6\uff0c\u6211\u4eec\u8ba8\u8bba\u79d1\u5e7b\u4e66\u7c4d\u548c\u4f5c\u5bb6\u4ee5\u53ca\u6f2b\u753b-\u6587\u79d1\uff0c\u673a\u5668\u4eba\u548c\u68a6\u60f3-\u5e03\u5170\u767b\u4e4b\u5fc3\u897f\u96c5\u56fe-\u8bde\u751f\uff0c\u76ee\u7684\uff0c\u4ee5\u53caKubernetes\u7684\u540d\u5b57-Brendan\u524d\u5f80\u5fae\u8f6f\u9886\u5bfcAzure Kubernetes\uff0c\u5e76\u8c08\u8bba\u5176\u5de5\u5177\u548c\u589e\u957f\uff0c\u4ee5\u53ca\u4ed6\u5728\u5fae\u8f6f\u9047\u5230\u7684\u4eba\u3002-Azure Arc\u548cAzure Redhat OpenShift-\u5982\u679c\u60a8\u8981\u91cd\u65b0\u5f00\u59cb\u5de5\u4f5c\uff0c\u60a8\u4f1a\u60f3\u8981\u4ece\u4e8b\u7684\u6280\u672f-Brendan\u6559\u7236\u6700\u5f15\u4ee5\u4e3a\u8c6a\u7684\u6280\u672f\u3002\n\u514d\u8d23\u58f0\u660e\uff1a\u672c\u9875\u5d4c\u5165\u7684\u64ad\u5ba2\u548c\u63d2\u56fe\u6765\u81ea\u4e39\u00b7\u5e15\u6f58\u5fb7\u91cc\u4e9a(Dan Papandrea)\uff0c\u8fd9\u662f\u5176\u6240\u6709\u8005\u7684\u8d22\u4ea7\uff0c\u4e0eListen Notes\uff0cInc.\u65e0\u5173\u6216\u80cc\u4e66\u3002", "note_en": "Episode Links:\u00a0 Brendans Robot Dream Project - http://www.digitaljournal.com/article/250801\u00a0 Azure - https://azure.microsoft.com/en-us/overview/\u00a0 Azure Marketplace (Sysdig) : https://azuremarketplace.microsoft.com/en-us/marketplace/apps/sysdig.sydig_platform_1?tab=Overview\u00a0 Azure Arc- https://azure.microsoft.com/en-us/services/azure-arc/\u00a0 Azure Redhat Openshift - https://www.openshift.com/products/azure-openshift\u00a0 Vscode - https://code.visualstudio.com/   Episode Timeline and Topics:\u00a0   -Opener\u00a0   - Godfather Brendan Burns&#39; Origin Story (C64 and Apple 2C)\u00a0   - Choplifter, Dark Castle, and other games shaping young Brendan Burns&#39; mind\u00a0   - Platform Gaming, Zelda, and Oculus Quest, Consoles and XCloud (runs on Azure Kubernetes)\u00a0   - Teaching himself how to code\u00a0   - Brendan wanted to be a Sci-Fi writer and we discuss Sci-Fi books and authors and Comics\u00a0   - Liberal Arts, Robots and Dreams   - Brendan Hearts Seattle.\u00a0   - the birth, purpose, and naming of Kubernetes\u00a0   - Brendan heads to Microsoft to lead Azure Kubernetes and talks its tools and growth and the people he has met at Microsoft.\u00a0   - Azure Arc and Azure Redhat Openshift\u00a0   - Technology you would want to work on if you were to start over\u00a0   - Work Godfather Brendan is most proud of\n   Disclaimer: The podcast and artwork embedded on this page are from Dan &#34;POP&#34; Papandrea, which is the property of its owner and not affiliated with or endorsed by Listen Notes, Inc.", "posttime": "2020-06-14 04:42:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,\u5fae\u8f6f,google,microsoft,\u521b\u5efa\u8005", "title": "\u4e3a\u4ec0\u4e48Kubernetes\u7684\u521b\u5efa\u8005\u4e4b\u4e00\u4ece\u8c37\u6b4c\u8f6c\u5230\u4e86\u5fae\u8f6f", "title_en": "Why One of Kubernetes' Creators Moved From Google To Microsoft", "transed": 1, "url": "https://www.listennotes.com/podcasts/the-popcast-with/episode-17-godfather-brendan-Ja80YqtZuWU/", "via": "", "real_tags": ["\u8c37\u6b4c", "\u5fae\u8f6f", "google", "microsoft", "\u521b\u5efa\u8005"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006454, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "//\u6765\u81eaAirbnb.com&lt\uff1bBox&gt\uff1b&lt\uff1b\u56fe\u50cf\u56db\u820d\u4e94\u5165=&#34\uff1bmd&#34\uff1bsrc=&#34\uff1bhttps://bit.ly/2k1H1t6&#34\uff1b/&gt\uff1b&lt\uff1bFlex Align=&#34\uff1bBaseline&#34\uff1bmt={2}&gt\uff1b&lt\uff1bText ml={2}textTransform=&#34\uff1bUPERCASE&#34\uff1bFontSize=&#34\uff1bsm&#34\uff1bvariantColor=&#34\uff1bpink&#34\uff1b&gt\uff1bPlus&lt\uff1b/Badge&gt\uff1b&lt\uff1bText ml={2}text Transform=&#34\uff1bUPERCASE&#34\uff1bFontSize=&#34\uff1bsm&#34\uff1bfontWeight=&#34\uff1b\u7c97\u4f53&#34\uff1bcolor=&#34\uff1bpink.800&34\uff1b&gt\uff1b\u5df2\u9a8c\u8bc1&amp\uff1bbull\uff1b\u5f00\u666e\u6566&lt\uff1b/text&gt\uff1b&lt\uff1b/Flex&gt\uff1b&lt\uff1btext mt={2}fontSize=&#34\uff1bxl&#34\uff1bfontWeight=&#34\uff1bSemibold&34\uff1blineHeight=&#34\uff1bShort&#34\uff1b&gt\uff1b/Text&gt\uff1b&lt\uff1bFlex mt={2}Align=&#34\uff1bCenter&#34\uff1b&gt\uff1b&lt\uff1bBox As={mdstar}color=&#34\uff1borange.400&lt\uff1b/&gt\uff1b&lt\uff1bText ml={1}fontsize=&#34\uff1bsm&#34\uff1b&gt\uff1b&lt\uff1bb&gt\uff1b4.84&lt\uff1b/b&gt\uff1b(190)&lt\uff1b/Text&gt\uff1b&lt\uff1b/Flex&gt\uff1b&lt\uff1b/Flex&gt\uff1b&lt\uff1b/Box&gt\uff1b", "note_en": "// Sample component from airbnb.com&lt;Box&gt; &lt;Image rounded=&#34;md&#34; src=&#34;https://bit.ly/2k1H1t6&#34;/&gt; &lt;Flex align=&#34;baseline&#34; mt={2}&gt; &lt;Badge variantColor=&#34;pink&#34;&gt;Plus&lt;/Badge&gt; &lt;Text ml={2} textTransform=&#34;uppercase&#34; fontSize=&#34;sm&#34; fontWeight=&#34;bold&#34; color=&#34;pink.800&#34; &gt; Verified &amp;bull; Cape Town &lt;/Text&gt; &lt;/Flex&gt; &lt;Text mt={2} fontSize=&#34;xl&#34; fontWeight=&#34;semibold&#34; lineHeight=&#34;short&#34;&gt; Modern, Chic Penthouse with Mountain, City &amp; Sea Views &lt;/Text&gt; &lt;Text mt={2}&gt;$119/night&lt;/Text&gt; &lt;Flex mt={2} align=&#34;center&#34;&gt; &lt;Box as={MdStar} color=&#34;orange.400&#34; /&gt; &lt;Text ml={1} fontsize=&#34;sm&#34;&gt;&lt;b&gt;4.84&lt;/b&gt; (190)&lt;/Text&gt; &lt;/Flex&gt;&lt;/Box&gt;", "posttime": "2020-06-14 04:25:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,ui,gt", "title": "Chakra UI-\u9002\u7528\u4e8e\u60a8\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\u7684\u7b80\u5355\u3001\u6a21\u5757\u5316\u4e14\u53ef\u8bbf\u95ee\u7684UI\u7ec4\u4ef6", "title_en": "Chakra UI \u2013 Simple, Modular and Accessible UI Components for Your React Apps", "transed": 1, "url": "https://chakra-ui.com", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "ui", "gt"]}]