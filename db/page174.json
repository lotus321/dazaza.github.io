[{"category": "", "categoryclass": "", "imagename": "b6f721a442b978269de2c58320a8b38b.jpg", "infoid": 1005393, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e74\u5f00\u53d1\u4eba\u5458\u8c03\u67e5\u7ed3\u679c\u51fa\u7089\u4e86\uff0c\u5728\u53c2\u4e0e\u8c03\u67e5\u76846.5\u4e07\u540d\u7a0b\u5e8f\u5458\u4e2d\uff0c\u94c1\u9508\u518d\u4e00\u6b21\u6210\u4e3a\u6700\u53d7\u6b22\u8fce\u7684\u8bed\u8a00\u3002\u81ea2016\u5e74\u4ee5\u6765\uff0c\u94c1\u9508\u4e00\u76f4\u4f4d\u5c45\u699c\u9996\uff0c\u8fd9\u8868\u660e\u5b83\u6709\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u559c\u6b22\u7684\u4e1c\u897f\u3002\u5728\u90a3\u4e9b\u8868\u793a\u76ee\u524d\u4f7f\u7528Rust\u7684\u8c03\u67e5\u53d7\u8bbf\u8005\u4e2d\uff0c\u670986.1%\u7684\u4eba\u5e0c\u671b\u660e\u5e74\u7ee7\u7eed\u4f7f\u7528\u5b83\u3002\u8fd9\u662f\u201c\u94c1\u9508\u201d\u8fde\u7eed\u7b2c\u4e94\u5e74\u8749\u8054\u8fd9\u4e00\u699c\u9996\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u5b83\u4e00\u5b9a\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\u3002\n\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u4eec\u91c7\u8bbf\u4e86Stack Overflow\u7684\u5934\u53f7Rust\u8d21\u732e\u8005\u6770\u514b\u00b7\u53e4\u5c14\u4e01(\u53c8\u540dSepmaster)\uff0c\u89e3\u91ca\u662f\u4ec0\u4e48\u8ba9Rust\u5728\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u5458\u4e2d\u5982\u6b64\u53d7\u6b22\u8fce\u3002\u4ee5\u4e0b\u662f\u4ed6\u4e0d\u5f97\u4e0d\u8bf4\u7684\u8bdd\u7684\u4e00\u4e2a\u6837\u672c\uff1a\n\u201c\u7b80\u77ed\u7684\u7b54\u6848\u662f\uff0cRust\u89e3\u51b3\u4e86\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e2d\u5b58\u5728\u7684\u75db\u70b9\uff0c\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u524d\u8fdb\u4e00\u6b65\uff0c\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u6709\u9650\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u201d\n\u6574\u7bc7\u6587\u7ae0\u975e\u5e38\u503c\u5f97\u4e00\u8bfb\uff0c\u56e0\u4e3a\u4ed6\u4ecb\u7ecd\u4e86Rust\u5bf9\u4e8e\u6765\u81ea\u5176\u4ed6\u8bed\u8a00\u7684\u7a0b\u5e8f\u5458\u7684\u597d\u5904(\u4ee5\u53ca\u75db\u70b9)\u3002\u4e0d\u8fc7\uff0c\u5c3d\u7ba1\u6770\u514b\u53e3\u82e5\u60ac\u6cb3\uff0c\u5f88\u6709\u8bf4\u670d\u529b\uff0c\u4f46\u6211\u4eec\u8fd8\u662f\u5e0c\u671b\u542c\u5230\u66f4\u591a\u7528\u6237\u7684\u610f\u89c1\u3002\u6240\u4ee5\u6211\u5728\u6211\u4eec\u7684\u94c1\u9508\u804a\u5929\u5ba4\u548c\u94c1\u9508\u8bba\u575b\u4e0a\u5bfb\u6c42\u8bc4\u8bba\u3002Ruust\u7528\u6237\u662f\u4e00\u7fa4\u70ed\u60c5\u7684\u4eba\uff0c\u6211\u5728\u4e00\u4e9b\u53cb\u597d\u7684\u8fa9\u8bba\u4e2d\u83b7\u5f97\u4e86\u4e00\u4e9b\u8ff7\u4eba\u7684\u89c1\u89e3\u3002\n(\u4e3a\u4e86\u957f\u5ea6\u3001\u6e05\u6670\u5ea6\u548c\u6982\u5ff5\u6027\u5206\u7ec4\uff0c\u5bf9\u4e0b\u9762\u7684\u5f15\u8bed\u8fdb\u884c\u4e86\u7f16\u8f91\u3002\u5b83\u4eec\u4e2d\u7684\u8bb8\u591a\u90fd\u6765\u81eaRust\u7528\u6237\u8bba\u575b\u4e0a\u7684\u8fd9\u4e2a\u5e16\u5b50\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u60f3\u8981\u5b8c\u6574\u5730\u548c\u4e0a\u4e0b\u6587\u5730\u9605\u8bfb\u5b83\u4eec\uff0c\u8bf7\u968f\u610f\u9605\u8bfb\u3002)\u3002\n\u65e0\u9700\u591a\u8bf4\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48Rust\u83b7\u5f97\u4e86\u5982\u6b64\u591a\u7684\u7231\uff0c\u76f4\u63a5\u6765\u81eaRustaceans\u81ea\u5df1(\u5305\u62ecRust\u6838\u5fc3\u56e2\u961f\u7684\u4e24\u540d\u6210\u5458)\u3002\n\u867d\u7136\u6709\u4e9b\u8bed\u8a00\u53ea\u662f\u5bf9\u73b0\u6709\u6982\u5ff5\u8fdb\u884c\u4e86\u6539\u8fdb\u548c\u7b80\u5316\uff0c\u4f46\u4e00\u4e9b\u7528\u6237\u89c9\u5f97Rust\u5b9e\u9645\u4e0a\u662f\u5728\u7528\u7f16\u7a0b\u8bed\u8a00\u505a\u65b0\u7684\u4e8b\u60c5\u3002\u800c\u4e14\uff0c\u505a\u65b0\u4e1c\u897f\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u70ab\u8000\uff1b\u4ed6\u4eec\u89c9\u5f97\u8fd9\u4e9b\u8bbe\u8ba1\u9009\u62e9\u7528\u73b0\u4ee3\u7f16\u7a0b\u89e3\u51b3\u4e86\u96be\u9898\u3002\nZiCog\uff1a\u201c\u5728\u6211\u4e13\u4e1a\u4f7f\u7528\u4e86\u5927\u7ea640\u5e74\u7684\u5341\u51e0\u79cd\u8bed\u8a00\u4e2d\uff0c\u94c1\u9508\u662f\u552f\u4e00\u4e00\u79cd\u771f\u6b63\u5f15\u5165\u4e86\u65b0\u529f\u80fd\u7684\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6ca1\u6709\u5783\u573e\u6536\u96c6\u6216\u590d\u6742\u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u7f16\u8bd1\u7684\u771f\u5b9e\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u5185\u5b58\u4f7f\u7528\u5b89\u5168\u7684\u6574\u4e2a\u6982\u5ff5\u3002\u201c\nDenys S\u00e9guret\uff1a\u201c\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u76f8\u5f53\u5f3a\u5927\u7684\u529f\u80fd(\u5982\u5728env\u53d8\u91cf\u7684\u63a9\u9970\u4e0b\u8bfb\u53d6\u7f16\u8bd1\u4e0a\u4e0b\u6587\u5143\u7d20)\u53ef\u4ee5\u5982\u6b64\u4f18\u96c5\u5730\u5b8c\u6210\u65f6\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u89e3\u51b3\uff0c\u800c\u6ca1\u6709\u4efb\u4f55\u4e11\u964b\u7684\u4e0d\u4e00\u81f4\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u6709\u8fd9\u6837\u7684\u70ed\u60c5\u3002\u201d\nJanriemer\uff1a\u201cNPM\u7684\u5de5\u7a0b\u5e08\u514b\u91cc\u65af\u00b7\u8fea\u91d1\u68ee(Chris Dickinson)\u7684\u4e00\u53e5\u8bdd\u5b8c\u7f8e\u5730\u6982\u62ec\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u5f53\u65f6\u5728\u4e0d\u77e5\u9053\u8fd9\u53e5\u8bdd\u7684\u60c5\u51b5\u4e0b\u4e5f\u6709\u540c\u6837\u7684\u60f3\u6cd5\uff1a\u2018\u6211\u5bf9\u62c9\u65af\u7279\u6700\u5927\u7684\u8d5e\u7f8e\u662f\u5b83\u5f88\u65e0\u804a\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u8d5e\u7f8e\u3002\u2019\nRust\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u770b\u8d77\u6765\u50cf\u662f\u7531\u7528\u6237\u4f53\u9a8c\u8bbe\u8ba1\u5e08\u5f00\u53d1\u7684\u3002\u4ed6\u4eec\u5bf9\u8fd9\u95e8\u8bed\u8a00\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u613f\u666f(\u4e00\u4e2a\u539f\u56e0)\uff0c\u5e76\u4ed4\u7ec6\u9009\u62e9\u5728\u8bed\u8a00\u4e2d\u6dfb\u52a0\u4ec0\u4e48\u548c\u4fee\u6539\u4ec0\u4e48\uff0c\u540c\u65f6\u503e\u542c\u793e\u533a\u771f\u6b63\u60f3\u8981\u7684\u662f\u4ec0\u4e48\u3002\u6ca1\u6709\u4efb\u4f55\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u5b83\u4eec\u90fd\u662f\u4e00\u4e2a\u8fde\u8d2f\u7684\u6574\u4f53\uff0c\u5b8c\u7f8e\u5730\u652f\u6301\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u201c\u3002\nSkysch\uff1a\u201c\u6211\u4eceHaskell\u6765\u5230Rust\uff0c\u6211\u89c9\u5f97Haskell\u662f\u4e00\u95e8\u975e\u5e38\u4f18\u96c5\u548c\u5b89\u5168\u7684\u8bed\u8a00\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6700\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eHaskell\u4e2d\u7684\u9ad8\u6027\u80fd\u4ee3\u7801\u548c\u60ef\u7528\u7684\u201c\u5e72\u51c0\u201d\u4ee3\u7801\u4e4b\u95f4\u7684\u5dee\u5f02\u6bd4Rust\u4e2d\u7684\u66f4\u5927\u3002\u5927\u591a\u6570Rust\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u5927\u591a\u6570\u5176\u4ed6Rust\u4ee3\u7801\uff0c\u5373\u4f7f\u5b83\u6267\u884c\u5f97\u5f88\u597d\u3002\u5982\u679c\u6709\u4eba\u5728\u4e0e\u60a8\u901a\u5e38\u6240\u505a\u7684\u4e0d\u540c\u7684\u5e93\u548c\u76ee\u6807\u4e0b\u64cd\u4f5c\uff0cHaskell\u53ef\u80fd\u4f1a\u5f88\u5feb\u53d8\u5f97\u964c\u751f\u3002\u8bed\u6cd5\u4e0a\u7684\u5fae\u5c0f\u5dee\u5f02\u53ef\u80fd\u4f1a\u5bfc\u81f4\u884c\u4e3a\u4e0a\u7684\u5de8\u5927\u5dee\u5f02\uff0c\u800c\u62c9\u65af\u7279\u5728\u8fd9\u4e00\u8f74\u4e0a\u7684\u4e00\u81f4\u6027\u66f4\u5f3a\u3002\n\u4e5f\u8bb8\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u4f9d\u8d56\u7ba1\u7406\u548c\u6784\u5efa\u5de5\u5177\uff0c\u5b83\u5b9e\u9645\u4e0a\u5df2\u7ecf\u89e3\u51b3\u4e86\u201c\u4f9d\u8d56\u5730\u72f1\u201d\u7684\u95ee\u9898\uff1b\n\u76ee\u6807\u88f8\u673a(\u4f8b\u5982\uff0c\u7f16\u5199\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6216\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff1b\u5c06Rust\u7528\u4f5c\u2018\u9ad8\u7ea7\u6c47\u7f16\u5668\u2019)\u201c\u3002\ndboross\uff1a\u201c\u7f16\u8bd1\u65f6\u95f4\u4fdd\u8bc1\uff1a\u5f53\u6211\u60f3\u5230\u201d\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u201c\u65f6\uff0c\u6211\u4f1a\u60f3\u5230Java\u6216C#\uff0c\u6216\u7c7b\u4f3cTypeScript\u7684\u4e1c\u897f\u3002\u5b83\u4eec\u5728\u7f16\u8bd1\u65f6\u4fdd\u8bc1\u60a8\u7684\u4ee3\u7801\u5177\u6709\u6b63\u786e\u7684\u7c7b\u578b\uff0c\u5e76\u5c06\u4e00\u7ec4\u9519\u8bef\u4ece\u8fd0\u884c\u65f6\u79fb\u5230\u7f16\u8bd1\u65f6\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u751f\u9508\u7684\u7a0b\u5ea6\u8981\u9ad8\u51fa\u4e00\u4e2a\u6570\u91cf\u7ea7\uff01\u7f16\u8bd1\u65f6\u68c0\u67e5\u6269\u5c55\u5230\u7ebf\u7a0b\u5b89\u5168\u3001\u6240\u6709\u6743\u8bed\u4e49\u548c\u9a8c\u8bc1\u3002\n\u679a\u4e3e\u610f\u5473\u7740\uff0c\u5728\u7f16\u8bd1\u65f6\uff0c\u6211\u53ef\u4ee5\u58f0\u660e\u6211\u7684\u6570\u636e\u53ef\u4ee5\u4f5c\u4e3a\u7684\u53d8\u91cf\u96c6\uff0c\u5f53\u6211\u8bbf\u95ee\u8be5\u6570\u636e\u65f6\uff0c\u6211\u88ab\u8feb\u8003\u8651\u6240\u6709\u7684\u53ef\u80fd\u6027\u3002\u7279\u5f81\u610f\u5473\u7740\uff0c\u5f53\u6211\u7684\u4ee3\u7801\u662f\u6a21\u677f\u5316/\u6cdb\u578b\u65f6\uff0c\u6211\u5177\u6709\u6240\u9700\u7684\u786e\u5207\u529f\u80fd\u3002\n\u94c1\u9508\u5177\u6709\u6781\u5f3a\u7684\u5411\u540e\u517c\u5bb9\u6027\u3002\u6211\u53ef\u4ee5\u8fd0\u884c\u4e3aRust1.0\u7f16\u5199\u7684\u4ee3\u7801\u3002\u540c\u6837\uff0c\u6211\u53ef\u4ee5\u7f16\u5199\u6211\u77e5\u9053\u4e0b\u6b21\u66f4\u65b0Rust\u65f6\u4e0d\u5fc5\u66f4\u65b0\u7684\u4ee3\u7801\u3002\n\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662fRust\u672c\u8eab-\u8be5\u8bed\u8a00\u4f7f\u5e93\u62e5\u6709\u540c\u6837\u7684\u4fdd\u8bc1\u3002\u8bf7\u8003\u8651\u4e24\u4e2a\u4e8b\u5b9e\uff1a\n\u5728\u7c7b\u578b\u68c0\u67e5\u4e2d\uff0c\u53ea\u8003\u8651\u51fd\u6570\u7684\u7b7e\u540d\u3002\u4e0d\u9700\u8981\u4f9d\u8d56\u5b9e\u73b0\u6765\u786e\u5b9a\u8c03\u7528\u8005\u662f\u5426\u6b63\u786e(\u5c31\u50cf\u5728Scala\u6216Haskell\u4e2d\u53ef\u4ee5\u505a\u7684\u90a3\u6837)\u3002\n\u6269\u5c55\u7c7b\u578b\u7cfb\u7edf\u610f\u5473\u7740\u63a5\u53e3\u7684\u4e0d\u6b63\u786e\u4f7f\u7528\u4f1a\u53d8\u6210\u7c7b\u578b\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u9519\u8bef\u3002\n\u7531\u4e8e\u8fd9\u4e24\u4ef6\u4e8b\uff0c\u5e93\u53ef\u4ee5100%\u786e\u5b9a\u5b83\u4eec\u5728\u53d1\u5e03\u65b0\u63a5\u53e3\u65f6\u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027\u3002\u5728Python\u3001Java\u3001Javascript\u3001\u751a\u81f3Scala\u6216Haskell\u4e2d\uff0c\u5982\u679c\u60a8\u60f3\u786e\u4fdd\u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027\uff0c\u5219\u9700\u8981\u683c\u5916\u6ce8\u610f\u5b9e\u73b0\u3002\u5728Rust\u4e2d\uff0c\u5b83\u662f\u514d\u8d39\u7684\uff1a\u5982\u679c\u60a8\u6ca1\u6709\u66f4\u6539\u51fd\u6570\u7b7e\u540d\uff0c\u5b83\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\u201c\u3002\nPeter Varo\uff1a\u201cRust\u627e\u5230\u4e86\u4e00\u4e2a\u6700\u4f73\u70b9\uff1a\u5b83\u548cC\u6216C++\u4e00\u6837\u4f4e\u7ea7\uff0c\u5177\u6709\u6240\u6709\u8fd9\u4e9b\u4f18\u70b9(\u4f8b\u5982\uff0c\u63a7\u5236\u3001\u5927\u5c0f\u3001\u901f\u5ea6\u7b49)\u3002\u540c\u65f6\uff0c\u5b83\u4e0eHaskell\u4e00\u6837\u9ad8\u6c34\u5e73\uff0c\u62e5\u6709\u4ee4\u4eba\u60ca\u53f9\u7684\u529f\u80fd\u9057\u4ea7\u3002\u5b83\u4ecd\u7136\u662f\u52bf\u5728\u5fc5\u884c\u7684\uff0c\u6240\u4ee5\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u90fd\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u800c\u4e14\u5b83\u548cPython\u4e00\u6837\u7075\u6d3b\u3002\u4f8b\u5982\uff0c\u50cf\u201c\u9e2d\u5b50\u7c7b\u578b\u201d\u8fd9\u6837\u7684\u6982\u5ff5\u53d1\u751f\u5728\u7f16\u8bd1\u65f6(\u5373\u7279\u5f81\u754c\u9650)\uff0c\u4f46\u662f\u5b83\u6ca1\u6709\u8fc7\u65f6\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u6a21\u578b\u53ca\u5176\u6240\u6709\u4f17\u6240\u5468\u77e5\u7684\u95ee\u9898\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6240\u5305\u542b\u7684\u7535\u6c60\uff1a\u7b80\u6d01\u7684\u8bed\u6cd5\u3001\u8bed\u8a00\u63d0\u4f9b\u7684\u5c11\u91cf\u529f\u80fd\u3001\u6807\u51c6\u5e93\u7684\u5b8c\u6574\u6027\u4ee5\u53ca\u6587\u6863\u7684\u4e00\u81f4\u6027\u548c\u8d28\u91cf\uff0c\u5305\u62ec\u4e3a\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u63d0\u4f9b\u7684\u5b66\u4e60\u6750\u6599\uff0c\u90fd\u662f\u4fc3\u6210\u56e0\u7d20\u3002\u201c\u3002\nBonk\uff1a\u201c\u4f7f\u7528Rust/Cargo\uff0c\u6211\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b9e\u9645\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u6784\u5efa\u7cfb\u7edf\u3002\u4e0d\u9700\u8981\u82b1\u4e00\u6574\u5929\u7684\u65f6\u95f4\u9605\u8bfb\u53e6\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\u3002\u4e0eRust\u7684\u4ea4\u53c9\u7f16\u8bd1\u662f\u5982\u6b64\u7b80\u5355\u548c\u8f7b\u677e\uff0c\u4ee5\u81f3\u4e8e\u5f53\u60a8\u9605\u8bfb\u5982\u4f55\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u65f6\uff0c\u60a8\u4f1a\u5fcd\u4e0d\u4f4f\u60f3\u201c\u7b49\u7b49\uff0c\u6211\u80af\u5b9a\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\u201d\n\u5f53\u4f60\u5728\u94c1\u9508\u4e4b\u5916\u7684\u65f6\u5019\uff0c\u6709\u4e9b\u4e1c\u897f\u542c\u8d77\u6765\u50cf\u662f\u7a7a\u6d1e\u7684\u53e3\u53f7\uff0c\u4f46\u5f53\u4f60\u5f00\u59cb\u4f7f\u7528\u5b83\u65f6\uff0c\u4f60\u4f1a\u60ca\u559c\u5730\u610f\u8bc6\u5230\u5176\u4e2d\u6709\u5f88\u591a\u771f\u76f8\uff1a\n\u5f53\u60a8\u82b1\u8d39\u65f6\u95f4\u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u60a8\u4e0d\u5fc5\u8c03\u8bd5\u4ee3\u7801\uff0c\u4ece\u800c\u8282\u7701\u4e86\u65f6\u95f4\u3002\n\u60a8\u4e0d\u518d\u5bb3\u6015\u91cd\u5927\u91cd\u6784\u3002\u4e00\u65e6\u60a8\u7684\u91cd\u6784\u4ee3\u7801\u7f16\u8bd1\u5b8c\u6210\uff0c\u5b83\u5c31\u53ef\u4ee5\u6309\u9884\u671f\u5de5\u4f5c\u3002\n\u5b83\u786e\u5b9e\u8feb\u4f7f\u60a8\u8fdb\u884c\u9002\u5f53\u7684\u591a\u7ebf\u7a0b(\u5f53\u7136\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u6b7b\u9501\uff0c\u4f46\u662f\u5d29\u6e83\u7c7b\u578b\u7684bug\u8981\u96be\u5f97\u591a)\u3002\n\u6211\u53d1\u73b0\u81ea\u5df1\u505a\u7684\u6837\u677f\u4ee3\u7801\u8981\u5c11\u5f97\u591a\u3002\u65e0\u8bba\u6211\u9700\u8981\u4ec0\u4e48\u6837\u677f\u4ee3\u7801\uff0c\u6211\u901a\u5e38\u53ef\u4ee5\u9690\u85cf\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u4f1a\u59a8\u788d\u5b9e\u9645\u7684\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u4ee3\u7801\u3002(\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u9519\u8bef\u7c7b\u578b\u8f6c\u6362)\u3002\u201c\u3002\n\u5f53\u524d\u7684\u8bb8\u591a\u7f16\u7a0b\u8ba8\u8bba\u90fd\u56f4\u7ed5\u7740\u662f\u4f7f\u7528\u5141\u8bb8\u60a8\u5904\u7406\u5185\u5b58\u7ba1\u7406\u7684\u5feb\u901f\u3001\u4f4e\u7ea7\u8bed\u8a00\uff0c\u8fd8\u662f\u4f7f\u7528\u5177\u6709\u66f4\u9ad8\u5b89\u5168\u9632\u8303\u63aa\u65bd\u7684\u9ad8\u7ea7\u8bed\u8a00\u3002\u5bf9\u4e8e\u94c1\u9508\u7684\u7c89\u4e1d\u4eec\u6765\u8bf4\uff0c\u4ed6\u4eec\u559c\u6b22\u5b83\u517c\u800c\u6709\u4e4b\u3002\nPubNub\u7684\u5efa\u7b51\u5e08\u6770\u4f0a\u00b7\u5965\u65af\u7279(Jay Oster)\u8bf4\uff1a\u201c\u8fd9\u7c7b\u4f3c\u4e8e\u5728\u5b8c\u5168\u9ed1\u6697\u7684\u73af\u5883\u4e2d\u6e38\u8361\u4e86\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\uff0c\u7136\u540e\u7a81\u7136\u9886\u609f\u5230\u4e24\u4e2a\u4e8b\u5b9e\uff1a\n\u4f60\u5e76\u4e0d\u5b8c\u7f8e\u3002\u4f60\u4f1a\u72af\u9519\u7684\u3002\u90a3\u4e9b\u9519\u8bef\u4f1a\u7ed9\u4f60\u5e26\u6765\u5f88\u591a\u95ee\u9898\u3002\n\u6211\u770b\u5230\u4e00\u79cd\u5e38\u89c1\u7684\u5f02\u8bae\uff0c\u6709\u4e9b\u4eba\u5ba3\u79f0\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u5b8c\u7f8e\u7684\uff0c\u4ed6\u4eec\u786e\u5b9e\u5199\u51fa\u4e86\u5b8c\u7f8e\u7684\u4ee3\u7801\uff0c\u4e00\u5207\u90fd\u5f88\u68d2\uff0c\u4ed6\u4eec\u4e0d\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u5176\u4ed6\u4eba\u90fd\u5bf9\u94c1\u9508\u611f\u5174\u8da3\u3002\u4f46\u8fd9\u4f4d\u8001\u5c71\u7f8a\u5f88\u6e05\u695a\uff0c\u8fd9\u4e9b\u4eba\u8fd8\u6ca1\u6709\u8ba4\u8bc6\u5230\u95ee\u9898\u4e0d\u662f\u4e25\u683c\u5730\u8bf4\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\u95ee\u9898\uff0c\u800c\u662f\u5176\u4ed6\u4eba\u7684\u95ee\u9898\u3002\u8fd9\u662f\u4e00\u4e2a\u89c4\u6a21\u7ecf\u6d4e\u7684\u95ee\u9898\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6211\u6709\u65f6\u95f4\u548c\u7cbe\u529b\u5173\u6ce8\u6bcf\u4e00\u5206\u949f\u7684\u7ec6\u8282\uff0c\u5e76\u7cbe\u5fc3\u624b\u5de5\u5236\u4f5c\u6bcf\u4e00\u884c\u6f02\u4eae\u7684\u4ee3\u7801\uff0c\u800c\u4e0d\u8003\u8651\u8bed\u8a00\u6216\u5b9e\u73b0\u7ec6\u8282\uff0c\u6211\u81ea\u5df1\u5c31\u53ef\u4ee5\u72ec\u7acb\u7f16\u5199\u5b8c\u7f8e\u65e0\u7f3a\u9677\u7684\u4ee3\u7801\u3002\u4f46\u90a3\u5e76\u4e0d\u91cd\u8981\u3002\u4e00\u65e6\u6211\u5f00\u59cb\u4f9d\u8d56\u5176\u4ed6\u4eba\u7f16\u5199\u7684\u4ee3\u7801\uff0c\u6216\u8005\u65b0\u7684\u8d21\u732e\u8005\u51fa\u73b0\u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u6211\u6240\u6709\u6240\u8c13\u7684\u5b8c\u7f8e\u4fdd\u8bc1\u73b0\u5728\u90fd\u4e0e\u73b0\u5b9e\u4e0d\u7b26\u3002\u201c\u60ef\u4f8b\u7684\u6b63\u786e\u6027\u201d\u5e76\u4e0d\u5177\u6709\u53ef\u6bd4\u6027\u3002\n\u4f20\u7edf\u5c06\u4f1a\u6709\u7f3a\u9677\uff0c\u4e0d\u5207\u5b9e\u9645\u7684\u5927\u91cf\u65f6\u95f4\u548c\u7cbe\u529b\u5c06\u88ab\u82b1\u8d39\u5728\u8bd5\u56fe\u81ea\u52a8\u5316\u4e00\u5f00\u59cb\u5c31\u4e0d\u5e94\u8be5\u5b58\u5728\u7684\u521b\u53ef\u8d34\u4e0a\u3002\u201c\u554a\u54c8\uff01\u201dMoment\u610f\u8bc6\u5230\uff0c\u901a\u8fc7\u5c06\u8fd9\u4e9b\u76f8\u540c\u7684\u7ea6\u5b9a\u76f4\u63a5\u653e\u5165\u8bed\u8a00\u548c\u7f16\u8bd1\u5668\u4e2d\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u83b7\u5f97\u66f4\u5f3a\u6709\u529b\u7684\u4fdd\u8bc1\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u5982\u679c\u60a8\u613f\u610f\uff0c\u60a8\u8fd8\u53ef\u4ee5\u83b7\u5f97\u4e0e\u5fae\u8c03\u624b\u5199\u7a0b\u5e8f\u96c6\u76f8\u5f53\u7684\u6027\u80fd\u3002\u4f60\u53ef\u4ee5\u65e2\u5403\u86cb\u7cd5\u53c8\u5403\u86cb\u7cd5\uff01\u201c\u3002\ndboross\uff1a\u201c\u4f5c\u4e3a\u4e00\u540d\u5e93\u4f5c\u8005\uff0c\u590d\u6742\u7684\u7279\u6027/\u901a\u7528\u7cfb\u7edf\u610f\u5473\u7740\u6211\u53ef\u4ee5\u5236\u4f5c\u590d\u6742\u800c\u53c8\u6613\u4e8e\u4f7f\u7528\u7684\u754c\u9762\u3002\u8fd9\u4e9b\u63a5\u53e3\u4e0d\u80fd\u88ab\u9519\u8bef\u5730\u4f7f\u7528\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4e0d\u5fc5\u6267\u884c\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u6211\u7684\u7528\u6237\u751a\u81f3\u4e0d\u5fc5\u8003\u8651\u95ee\u9898\u7528\u4f8b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4f1a\u7f16\u5199\u5b83\u4eec\u3002\n\u4f5c\u4e3a\u4e00\u540d\u56fe\u4e66\u9986\u6d88\u8d39\u8005\uff0c\u4e30\u5bcc\u800c\u5e7f\u6cdb\u7684\u677f\u6761\u7bb1\u751f\u6001\u7cfb\u7edf\u4f7f\u6211\u80fd\u591f\u5728\u5e7f\u6cdb\u7684\u4e0d\u540c\u9886\u57df\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u6df1\u5165\u7814\u7a76\u6bcf\u4e2a\u9886\u57df\u7684\u7ec6\u8282\u3002\u6211\u4e0d\u9700\u8981\u77e5\u9053JSON\u89e3\u6790\u5668\u6216\u7f16\u5199\u5668\u5982\u4f55\u4f7f\u7528serde-\u800c\u4e14\u6211\u7684\u77e5\u8bc6\u532e\u4e4f\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3abug\u7684\u6765\u6e90\uff0c\u56e0\u4e3a\u6211\u5f97\u5230\u7684\u662f\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u9519\u8bef\u3002\n\u5f53\u6211\u4f7f\u7528\u94c1\u9508\u7684\u65f6\u5019\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u771f\u7684\u53d7\u5230\u4e86\u7167\u987e\u3002\u6709\u8fd9\u4e48\u591a\u7410\u788e\u7684\u4e8b\u60c5\uff0c\u4ece\u5305\u5347\u7ea7\uff0c\u5230\u7c7b\u578b\u9519\u8bef\uff0c\u518d\u5230\u4f20\u9012\u63a5\u53e3\u4e0d\u671f\u671b\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5f97\u5230\u4e00\u4e2a\u968f\u673a\u7684\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u8fd9\u5728Rust\u4e2d\u662f\u5b8c\u5168\u6ca1\u6709\u7684\u3002\u6211\u53ea\u8981\u60f3\u60f3\u7b97\u6cd5\u5c31\u884c\u4e86\uff01\u201c\u3002\n\u8fd8\u8bb0\u5f97\u6211\u63d0\u5230\u7684\u90a3\u573a\u8fa9\u8bba\u5417\uff1f\u6211\u770b\u5230\u7684\u4e00\u4e9b\u53cd\u53cd\u590d\u590d\u7684\u60c5\u51b5\u662f\u56e0\u4e3a\u6211\u60f3\u77e5\u9053\u6700\u53d7\u6b22\u8fce\u7684\u6807\u9898\u662f\u5426\u6765\u81eaRust\uff0c\u56e0\u4e3aRust\u7684\u7528\u6237\u7fa4\u5f88\u5c0f\uff0c\u4ed6\u4eec\u5927\u591a\u9009\u62e9\u4f7f\u7528\u8fd9\u79cd\u8bed\u8a00\u3002\u867d\u7136\u8fd9\u662f\u4e8b\u5b9e\uff0c\u5728\u6211\u4eec\u7684\u8c03\u67e5\u4e2d\uff0c\u53ea\u67095.1%\u7684\u53d7\u8bbf\u8005\u5728\u8fc7\u53bb\u4e00\u5e74\u4e2d\u4f7f\u7528\u8fc7Rust\uff0c\u4f46\u8fd9\u4e9b\u7528\u6237\u5e0c\u671b\u7ee7\u7eed\u4f7f\u7528Rust\u3002\nCAD97\uff1a\u201c\u975e\u5e38\u5766\u7387\u5730\u8bf4\uff1a\u6211\u8ba4\u4e3a\u94c1\u9508\u5728\u8fd9\u91cc\u7684\u597d\u5904\u662f\u5f88\u5c11\u6709\u4eba\u88ab\u8feb\u4f7f\u7528\u94c1\u9508\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5927\u591a\u6570\u4eba\u4ecd\u5728\u9009\u62e9\u6027\u5730\u4f7f\u7528\u94c1\u9508\u3002\n\u6211\u5e76\u4e0d\u662f\u8bf4Rust\u914d\u4e0d\u4e0a\u8fd9\u4e2a\u6807\u7b7e(\u6211\u975e\u5e38\u80af\u5b9a\u5b83\u914d\u5f97\u4e0a\uff01)\uff0c\u6211\u53ea\u662f\u8ba4\u4e3aRust\u5904\u4e8e\u975e\u5e38\u6709\u5229\u7684\u5730\u4f4d\uff0c\u53ef\u4ee5\u201c\u73a9\u5f04\u201d\u8fd9\u4e00\u6307\u6807\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u662f\u5728\u8fd9\u91cc\u8861\u91cf\uff0c\u56e0\u4e3a\u5b83\u6709\u5927\u91cf\u7684\u7231\u597d\u8005\u9009\u62e9\u6027\u91c7\u7528\uff0c\u4f46\u90a3\u4e9b\u5f3a\u5236\u4eba\u4eec\u4f7f\u7528\u4ed6\u4eec\u4e0d\u613f\u7ee7\u7eed\u4f7f\u7528\u7684\u8bed\u8a00\u7684\u4eba(\u5443)\u91c7\u7528\u7387\u5f88\u4f4e\u3002\u201c\u3002\nZiCog\uff1a\u201c\u5982\u679c\u4f60\u4f7f\u7528\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u4f60\u5c31\u4f1a\u89c9\u5f97\u5b83\u5f88\u70c2\u3002\u7528\u592a\u591a\uff0c\u7528\u4e86\u5f88\u591a\u5e74\uff0c\u5b83\u4eec\u90fd\u5f88\u70c2\u3002\n\u90a3\u4e9b\u7528\u5404\u79cd\u8bed\u8a00\u8fdb\u884c\u5927\u91cf\u7f16\u7a0b\u5e76\u62e5\u6709\u6280\u80fd\u548c\u5929\u8d4b\u7684\u4eba\uff0c\u6700\u7ec8\u53d1\u660e\u5e76\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u65b0\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u4fee\u590d\u4ed6\u4eec\u8fc7\u53bb\u906d\u53d7\u7684\u6240\u6709\u75db\u82e6\u3002\u6b63\u5982\u4f60\u6240\u77e5\u9053\u7684\u90a3\u6837\uff0c\u65b0\u7684\u8bed\u8a00\u5c31\u50cf\u6742\u8349\u4e00\u6837\u5982\u96e8\u540e\u6625\u7b0b\u822c\u6d8c\u73b0\u3002\n\u9274\u4e8e\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5982\u679c\u60a8\u95ee\u7a0b\u5e8f\u5458\u4ed6\u4eec\u559c\u6b22\u54ea\u79cd\u8bed\u8a00\uff0c\u7b54\u6848\u5c06\u4e0d\u662f\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u4e5f\u4e0d\u662f\u4ed6\u4eec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u4efb\u4f55\u8bed\u8a00\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u51e0\u4e4e\u6ca1\u6709\u7a0b\u5e8f\u5458\u5fc5\u987b\u957f\u671f\u4f7f\u7528Rust\uff0c\u6240\u4ee5\u4ed6\u4eec\u5f53\u7136\u4f1a\u8bf4\u4ed6\u4eec\u559c\u6b22Rust\u3002\u201c\u3002\nPubNub\u7684\u5efa\u7b51\u5e08\u6770\u4f0a\u00b7\u5965\u65af\u7279(Jay Oster)\uff1a\u201c\u51e0\u5341\u5e74\u6765\uff0c\u6211\u5bf9\u5404\u79cd\u8bed\u8a00\u90fd\u6709\u7c7b\u4f3c\u7684\u2018\u8349\u603b\u662f\u66f4\u7eff\u2019\u7684\u504f\u89c1\u3002\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u9020\u6210\u8fd9\u4e00\u73b0\u8c61\u7684\u4e3b\u8981\u56e0\u7d20\u4e4b\u4e00\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u4e00\u4e9b\u8f83\u65b0\u7684\u8bed\u8a00\u4f1a\u5728\u8fd9\u4e9b\u8c03\u67e5\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u5bf9\u5417\uff1f\u201c\u3002\nH2CO3\uff1a\u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0cRust\u662f\u6211\u6700\u559c\u6b22\u7684\u8bed\u8a00\uff0c\u5c3d\u7ba1\u6211\u5df2\u7ecf\u4f7f\u7528\u5b834\u5e74\u4e86(\u51fa\u4e8e\u6027\u80fd\u7684\u9700\u8981\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u9879\u76ee\uff0c\u4ee5\u53ca\u201d\u771f\u6b63\u7684\u201c\u4ee3\u7801)\u3002\u5f53\u6211\u6709\u4e86\u8fd9\u4e48\u591a\u4f7f\u7528C\u548cC++\u7684\u7ecf\u9a8c\u65f6\uff0c\u6211\u5df2\u7ecf\u53d1\u73b0\u4e86\u5b83\u4eec\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u4e25\u91cd\u7f3a\u9677\u3002\n\u89c1\u9b3c\uff0c\u5373\u4f7f\u662fHaskell\uff0c\u6700\u4f18\u79c0\u7684\u4f18\u96c5\u8bed\u8a00\uff0c\u4e5f\u5728\u5927\u7ea6\u4e00\u5e74\u540e\u663e\u793a\u51fa\u4e0d\u53ef\u907f\u514d\u7684\u4e11\u964b\uff0c\u5f53\u65f6\u6211\u4e0d\u5f97\u4e0d\u5f00\u59cb\u6446\u5f04\u8bed\u8a00\u6269\u5c55\u548c\u65b9\u8a00\uff0c\u4ee5\u83b7\u5f97\u4e00\u4e2a\u6709\u70b9\u9ad8\u7ea7\u7684\u5e93\u6765\u7f16\u8bd1\u3002\n\u8fd9\u6839\u672c\u6ca1\u6709\u53d1\u751f\u5728\u94c1\u9508\u5730\u533a\u3002\u88c5\u6ee1\u4e86\u6b65\u67aa\u548c\u8bbe\u8ba1\u9519\u8bef\u7684\u4e1c\u897f\u4ece\u672a\u4ece\u8ff7\u96fe\u4e2d\u6d6e\u73b0\u51fa\u6765\u3002\nasafigan\uff1a\u201c\u6211\u76f8\u4fe1\u94c1\u9508\u5b66\u8d77\u6765\u5f88\u6709\u6311\u6218\u6027\uff0c\u4f46\u7528\u8d77\u6765\u5f88\u6709\u4ef7\u503c\u3002\u6211\u8ba4\u4e3a\uff0c\u53ea\u8981\u56de\u62a5\u8db3\u591f\u597d\uff0c\u4eba\u4eec\u6709\u591a\u4e48\u559c\u6b22\u63a5\u53d7\u6311\u6218\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\n\u6211\u53d1\u73b0Rust\u5f88\u96be\u5b66\uff0c\u4f46\u5f88\u5bb9\u6613\u4f7f\u7528\u3002\u6211\u8ba4\u4e3a\u5f88\u591a\u4eba\u662f\u4ece\u4e0d\u540c\u7684\u8bed\u8a00\u6765\u5230Rust\u7684\uff0c\u4ed6\u4eec\u60ca\u8bb6\u4e8e\u5b83\u6709\u5982\u6b64\u5927\u7684\u4e0d\u540c(\u56e0\u6b64\u5f88\u96be\u5b66\u4e60)\u3002\u4f46\u4ed6\u4eec\u5fd8\u8bb0\u4e86\u4e00\u5f00\u59cb\u5b66\u4e60\u7f16\u7a0b\u6709\u591a\u96be\u3002\u5728\u5927\u5b66\u91cc\uff0c\u6211\u4eec\u6709\u4e24\u95e8Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u8bfe\u7a0b\u3002\u5230\u6700\u540e\uff0c\u5927\u591a\u6570\u4eba\u4ecd\u7136\u6ca1\u6709\u771f\u6b63\u7406\u89e3\u3002\u9508\u8bed\u4e0e\u5176\u4ed6\u8bed\u8a00\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u5f88\u96be\u5b66\u3002\u5982\u679c\u60a8\u6240\u77e5\u9053\u7684\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u90a3\u4e48\u5b66\u4e60\u51fd\u6570\u5f0f\u7f16\u7a0b\u662f\u5f88\u56f0\u96be\u7684\u3002\u5982\u679c\u60a8\u6240\u77e5\u9053\u7684\u4e00\u5207\u90fd\u662f\u529f\u80fd\u6027\u7684\uff0c\u90a3\u4e48\u5f88\u96be\u5b66\u4e60OOP\u3002\u5982\u679c\u60a8\u53ea\u77e5\u9053GC\u6216\u624b\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u90a3\u4e48\u5f88\u96be\u4e86\u89e3\u6240\u6709\u6743\u3002\u7279\u5f81\u4e5f\u5f88\u5947\u602a\u3002\u4f46\u4e3a\u4e86\u66f4\u597d\u7684\u8f6f\u4ef6\uff0c\u8fd9\u662f\u503c\u5f97\u7684\u3002\u201c\u3002\ncfsamson\uff1a\u201c\u5728Rust\uff0c\u6211\u53d1\u73b0\u5f88\u591a\u5de5\u4f5c\u90fd\u662f\u524d\u7f6e\u7684\u3002\u8fd9\u4f1a\u4f7f\u7b80\u5355\u7684\u95ee\u9898\u66f4\u96be\u5f00\u59cb\uff0c\u4f46\u4e0d\u4f1a\u5728\u4ee5\u540e\u4ea7\u751f\u56f0\u96be\u7684\u95ee\u9898\u3002\u5982\u679c\u6709\u95ee\u9898\uff0c\u6700\u5e38\u89c1\u7684\u662f\u95ee\u9898\u57df\u672c\u8eab\u6bd4\u6211\u60f3\u8c61\u7684\u8981\u96be\uff0c\u800c\u4e14\u4e0e\u6211\u4f7f\u7528\u7684\u5de5\u5177\u65e0\u5173\u3002\u6211\u53d1\u73b0\u6211\u9884\u5148\u652f\u4ed8\u7684\u4ef7\u683c\u7edd\u5bf9\u7269\u6709\u6240\u503c\u3002\u4e00\u65e6\u4f60\u719f\u6089\u4e86\u8fd9\u95e8\u8bed\u8a00\uff0c\u6211\u4e5f\u4f1a\u53d1\u73b0\u4ef7\u683c\u5f88\u4f4e\u3002\u201c\u3002\n\u4ece\u4e0e\u7c89\u4e1d\u7684\u4ea4\u8c08\u4e2d\uff0c\u6211\u53d1\u73b0\u4ed6\u4eec\u5bf9\u8fd9\u79cd\u8bed\u8a00\u7684\u70ed\u7231\u5f88\u96be\u95ea\u8000\u51fa\u6765\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e0d\u540c\u610f\u3002\u94c1\u9508\u7528\u6237blonk\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u793e\u533a\u8303\u56f4\u7684\u7279\u5f81\u3002\n\u5e03\u6717\u514b\uff1a\u5f88\u660e\u663e\uff0c\u6574\u4e2a\u201c\u8981\u5c0a\u91cd\u201d\u7684\u505a\u6cd5\u8fd0\u4f5c\u5f97\u5f88\u597d\u3002\u6709\u51e0\u4e2a\u6848\u4f8b\u4e2d\uff0cIMHO\uff0c\u4eba\u4eec\u6076\u610f\u63d0\u95ee\uff0c\u4f46\u793e\u533a\u6210\u5458\u6ca1\u6709\u5bf9\u60c5\u51b5\u505a\u51fa\u5de8\u5927\u7684\u56de\u5e94\uff0c\u800c\u662f\u771f\u8bda\u5730\u56de\u7b54\uff0c\u8fd9\u7f13\u548c\u4e86\u5c40\u52bf\u3002\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u662f\u4ec0\u4e48\u9020\u5c31\u4e86\u4e00\u4e2a\u5fe0\u5b9e\u7684\u652f\u6301\u8005\uff0c\u90a3\u5c31\u53bb\u548c\u6700\u5fe0\u8bda\u7684\u4eba\u8c08\u8c08\uff0c\u5bf9\u5417\uff1f\u6211\u8054\u7cfb\u4e86\u201c\u94c1\u9508\u201d\u6838\u5fc3\u56e2\u961f\uff0c\u60f3\u627e\u51fa\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u8ba4\u4e3a\u201c\u94c1\u9508\u201d\u5e74\u590d\u4e00\u5e74\u5730\u53d7\u5230\u5982\u6b64\u591a\u7684\u7231\u6234\u3002\u683c\u5f0f\u7565\u6709\u4e0d\u540c\uff0c\u6211\u4fdd\u7559\u4e86\u95ee\u7b54\u5e03\u5c40\u3002\n\u827e\u7433\u00b7\u9c8d\u5c14(Erin Power)\u662f\u67cf\u6797\u7684\u4e00\u5bb6\u94c1\u9508\u5f00\u53d1\u5546\u3002\u4ece2015\u5e74\u76841.0\u5f00\u59cb\uff0c\u5979\u5c31\u4e00\u76f4\u5728\u4f7f\u7528Rust\u3002\u5979\u662fRust\u6cbb\u7406\u5de5\u4f5c\u7ec4\u7684\u8d1f\u8d23\u4eba\u4e4b\u4e00\uff0c\u4e5f\u662f\u201cTokei\u201d\u7684\u521b\u5efa\u8005\uff0c\u201cTokei\u201d\u662f\u7528Rust\u7f16\u5199\u7684\u6d41\u884c\u7684\u5f00\u6e90\u4ee3\u7801\u8ba1\u6570\u5668\u3002\n\u95ee\uff1a\u4f7f\u7528\u94c1\u9508\u7684\u4eba\u4f3c\u4e4e\u771f\u7684\u5f88\u559c\u6b22\u5b83\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u6211\u60f3\u8fd9\u662f\u56e0\u4e3a\u62c9\u65af\u7279\u505a\u51fa\u4e86\u5f88\u5927\u7684\u627f\u8bfa\uff0c\u5e76\u5151\u73b0\u4e86\u8fd9\u4e9b\u627f\u8bfa\u3002\u4e0e\u4efb\u4f55\u5176\u4ed6\u9ad8\u7ea7\u8bed\u8a00\u4e00\u6837\uff0cRUST\u63d0\u4f9b\u4e86\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u4f46\u5b83\u662f\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u9690\u85cf\u7684\u6210\u672c\u6216\u884c\u4e3a\u9700\u8981\u8003\u8651\u3002\n\u751f\u9508\u4e00\u76f4\u662f\u4e3a\u6211\u4eec\u5728\u73b0\u4ee3\u786c\u4ef6\u4e2d\u671f\u671b\u7684\u4e1c\u897f\u800c\u8bbe\u8ba1\u7684\u3002\u7ebf\u7a0b\u5b89\u5168\u548c\u6570\u636e\u7ade\u4e89\uff0c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u53ef\u80fd\u662f\u5e38\u89c1\u7684\u6b65\u67aa\uff0c\u5728\u8bed\u8a00\u7ea7\u522b\u4e0a\u88ab\u8003\u8651\u5728\u5185\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u5145\u5206\u5229\u7528\u5de5\u4f5c\u7ad9\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u5927\u91cf\u66f4\u6539\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u4ee4\u4eba\u5934\u75bc\u7684\u95ee\u9898\u3002\u6211\u4e00\u76f4\u5370\u8c61\u6df1\u523b\u7684\u662f\uff0crayon(Rust\u4e2d\u7684\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u5e93)\u53ef\u4ee5\u901a\u8fc7\u53ea\u66f4\u6539\u4e00\u884c\u4ee3\u7801\u6765\u5e76\u884c\u5316\u60a8\u7684\u6574\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u3002\n\u56e0\u6b64\uff0c\u4f7f\u7528Rust\u7f16\u5199\u4e86\u8bb8\u591a\u9ad8\u8d28\u91cf\u3001\u5feb\u901f\u7684\u5b9e\u73b0\uff0c\u800c\u4e14\u7531\u4e8e\u6709\u4e86Cargo\u548ccrates.io(Rust\u7684\u5305\u7ba1\u7406\u5668\u548c\u793e\u533a\u8fd0\u884c\u5305\u6ce8\u518c\u4e2d\u5fc3)\uff0c\u5728\u5185\u90e8\u548c\u4e0e\u6574\u4e2a\u4e16\u754c\u91cd\u7528\u548c\u5171\u4eab\u4ee3\u7801\u4ece\u672a\u50cf\u73b0\u5728\u8fd9\u6837\u5bb9\u6613\u3002\nCargo\u5904\u7406\u5305\u542b\u51e0\u5230\u51e0\u5341\u4e2a\u5305\u7684\u5927\u578b\u5b58\u50a8\u5e93\u5c31\u50cf\u5904\u7406\u4e00\u4e2a\u5305\u4e00\u6837\u597d\uff0c\u60a8\u4e0d\u9700\u8981\u82b1\u51e0\u5929\u65f6\u95f4\u7f16\u5199\u6784\u5efa\u6587\u4ef6\u5c31\u53ef\u4ee5\u62e5\u6709\u60a8\u60f3\u8981\u7684\u914d\u7f6e\u3002\n\u4e0d\u4ec5\u53ef\u4ee5\u8f7b\u677e\u5730\u7ba1\u7406\u548c\u66f4\u65b0Rust\u4f9d\u8d56\u9879\uff0cRust\u672c\u8eab\u4e5f\u975e\u5e38\u5bb9\u6613\u4f7f\u7528Rustup\u5728\u4e0d\u540c\u7248\u672c\u7684\u8bed\u8a00\u4e4b\u95f4\u8fdb\u884c\u5347\u7ea7\u548c\u5207\u6362\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRustup\u662f\u4e00\u4e2a\u5de5\u5177\u94fe\u7248\u672c\u7ba1\u7406\u5668\u3002\n\u4e0a\u9762\u7684\u4efb\u4f55\u4e00\u70b9\u90fd\u8db3\u4ee5\u8ba9\u4eba\u559c\u6b22Rust\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u5b83\u4f7fRust\u6210\u4e3a\u4e00\u79cd\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u4fe1\u670d\u7684\u8bed\u8a00\uff0c\u7528\u5b83\u7f16\u5199\u548c\u521b\u5efa\u9879\u76ee\u90fd\u4f1a\u8ba9\u4eba\u611f\u5230\u8033\u76ee\u4e00\u65b0\u3002\n\u95ee\uff1aRust\u56e2\u961f\u8ba1\u5212\u8ba9\u7528\u6237\u5bf9\u5b83\u4fdd\u6301\u559c\u7231\u7684\u662f\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u55ef\uff0c\u6211\u4e0d\u80fd\u8bf4\u6240\u6709\u7684\u56e2\u961f\u90fd\u8ba1\u5212\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3aRust\u6709\u51e0\u5341\u4e2a\u56e2\u961f\uff0c\u4e3b\u8981\u7531\u5fd7\u613f\u8005\u7ec4\u6210\uff0c\u4ed6\u4eec\u90fd\u662f\u534a\u81ea\u4e3b\u7684\uff0c\u90fd\u5728\u52aa\u529b\u6539\u5584Rust\u8bed\u8a00\u548c\u5468\u56f4\u7684\u751f\u6001\u7cfb\u7edf\u3002\u4f60\u53ef\u4ee5\u5728GitHub\u4e0a\u627e\u5230\u8be5\u9879\u76ee\u4eca\u5e74\u7684\u8def\u7ebf\u56fe(\u4e0d\u8fc7\u6211\u4f1a\u6ce8\u610f\u5230\uff0c\u5b83\u662f\u5728\u65b0\u51a0\u80ba\u708e\u4e4b\u524d\u63d0\u51fa\u548c\u7f16\u5199\u7684)\u3002\n\u7b54\uff1a\u81ea\u4eceRust\u57282015\u5e74\u53d1\u5e031.0\u7248\u4ee5\u6765\uff0c\u6211\u5c31\u4e00\u76f4\u5728\u7f16\u5199\u5b83\uff0c\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u4e00\u76f4\u8bd5\u56fe\u628a\u6211\u7684\u7f16\u7a0b\u65f6\u95f4\u82b1\u5728\u5b83\u4e0a\u9762\u3002\u6211\u7f16\u5199\u5e76\u7ef4\u62a4\u4e86\u76f8\u5f53\u591a\u7684\u5f00\u6e90\u5e94\u7528\u7a0b\u5e8f\u548c\u5e93\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u548c\u5e93\u90fd\u662f\u6211\u7ef4\u62a4\u7684\uff0c\u5e76\u4e14\u81ea2018\u5e74\u4ee5\u6765\u6211\u4e00\u76f4\u5728\u4e13\u4e1a\u5730\u4e0eRust\u5408\u4f5c\u3002\n\u95ee\uff1a\u6211\u770b\u5230\u4e00\u4e9b\u8bc4\u8bba\u8bf4\u94c1\u9508\u5f88\u96be\u638c\u63e1\uff0c\u5728\u6211\u4eec\u7684\u8c03\u67e5\u4e2d\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u4eba(~5%)\u4f7f\u7528\u8fc7\u94c1\u9508\u3002\u4f60\u8ba4\u4e3a\u8fdb\u5165\u94c1\u9508\u6709\u5f88\u9ad8\u7684\u95e8\u69db\u5417\uff1f\u4e3a\u4ec0\u4e48\u6216\u8005\u4e3a\u4ec0\u4e48\u4e0d\uff1f\n\u7b54\uff1a\u6211\u8ba4\u4e3a\u201c\u94c1\u9508\u201d\u4e2d\u786e\u5b9e\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u6982\u5ff5\uff0c\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u95e8\u69db\u5f88\u9ad8\u3002\u867d\u7136\u8bf4\u662f\u8f76\u4e8b\uff0c\u4f46\u6211\u5728Rust\u4e4b\u524d\u7684\u80cc\u666f\u662f\u5168\u6808web\u5f00\u53d1\u548c\u8bbe\u8ba1\uff1b\u6211\u4ee5\u524d\u6ca1\u6709\u201c\u7cfb\u7edf\u201d\u6216\u201c\u51fd\u6570\u201d\u8bed\u8a00\u7ecf\u9a8c\uff0c\u6211\u53d1\u73b0\u7528Rust\u5b66\u4e60\u8fd9\u4e9b\u6982\u5ff5\u6bd4\u5176\u4ed6\u73b0\u6709\u8bed\u8a00\u5bb9\u6613\u5f97\u591a\uff0c\u6240\u4ee5\u6211\u4e0d\u540c\u610fRust\u6574\u4f53\u4e0a\u6709\u5f88\u9ad8\u7684\u95e8\u69db\u3002\n\u6211\u89c9\u5f97\u5f88\u5927\u7684\u969c\u788d\u6765\u81ea\u4e8eRust\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u6765\u81ea\u5176\u4ed6\u89d2\u5ea6\u7684\u4e30\u5bcc\u8d44\u6e90\u6765\u9002\u5408\u4e0d\u540c\u4eba\u7684\u5fc3\u7406\u6a21\u578b\u6765\u5b66\u4e60\uff0c\u5c31\u50cf\u60a8\u4f7f\u7528\u66f4\u6210\u719f\u7684\u8bed\u8a00\u6240\u62e5\u6709\u7684\u90a3\u6837\u3002\u5e0c\u671b\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u4f1a\u6709\u66f4\u591a\u6837\u5316\u7684\u5b66\u4e60\u6750\u6599\u6765\u5e2e\u52a9\u6559\u6388\u548c\u63d0\u9ad8\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u7684\u7406\u89e3\u3002\n\u867d\u7136\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u4eba\u7f16\u5199\u4e86Rust\uff0c\u4f46\u5b83\u7684\u91c7\u7528\u662f\u5982\u6b64\u6210\u529f\uff0c\u4eba\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\u8bb8\u591a\u5173\u952e\u8f6f\u4ef6\u5df2\u7ecf\u5728Rust\u4e2d\u88ab\u91cd\u5199\u6216\u521b\u5efa\u3002\u94c1\u9508\u5df2\u7ecf\u5728\u4e94\u5927\u79d1\u6280\u516c\u53f8\u4e2d\u7684\u6bcf\u4e00\u5bb6\u90fd\u91c7\u7528\u4e86\uff0c\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662f\u4f01\u4e1a\u611f\u5174\u8da3\u3002Dropbox\u6216OneSignal\u7b49\u89c4\u6a21\u8f83\u5c0f\u7684\u79d1\u6280\u516c\u53f8\u5728Rust\u6709\u5f88\u591a\u6838\u5fc3\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u670d\u52a1\u3002\n\u5f17\u6d1b\u91cc\u5b89\u00b7\u5409\u5c14\u5f7b(Florian Gilcher)\u81ea2013\u5e74\u4ee5\u6765\u4e00\u76f4\u5728Rust\u7f16\u7a0b\u3002\u4ed6\u4ece\u793e\u533a\u56e2\u961f\u4e00\u5f00\u59cb\u5c31\u662f\u6210\u5458\uff0c\u76ee\u524d\u662f\u6838\u5fc3\u56e2\u961f\u7684\u4e00\u5458\u3002\u5f17\u6d1b\u91cc\u5b89\u5171\u540c\u7ec4\u7ec7\u4e86\u524d\u4e94\u5c4aRustFest\uff0c\u5e76\u5171\u540c\u7ec4\u7ec7\u4e86OxidizeConf\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u6d3b\u8dc3\u5728Ruby\u793e\u533a\u3002\n\u95ee\uff1a\u4f7f\u7528\u94c1\u9508\u7684\u4eba\u4f3c\u4e4e\u771f\u7684\u5f88\u559c\u6b22\u5b83\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\n\u7b54\uff1a\u7b80\u5355\u7684\u7b2c\u4e00\u4e2a\u53cd\u5e94\u662f\uff1a\u56e0\u4e3a\u5b83\u5728\u5f88\u591a\u65b9\u9762\u90fd\u662f\u597d\u4ea7\u54c1\u3002\u6770\u514b\u00b7\u53e4\u5c14\u4e01\u5df2\u7ecf\u505a\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6982\u8ff0\uff0c\u6211\u4e0d\u60f3\u5728\u4f60\u7684\u535a\u5ba2\u4e0a\u91cd\u590d\u4e86\u3002\n\u6211\u5c06\u8be6\u7ec6\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8fd9\u5f88\u91cd\u8981\uff1a\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u548c\u5de5\u5177\u90fd\u662f\u4ee5\u5bf9\u6297\u6027\u548c\u53ef\u6bd4\u6027\u7684\u65b9\u5f0f\u9500\u552e\u7684\u3002\u201c\u6bd4X\u597d\u201d\u3001\u201cX\u662f\u65b0\u7684Y\u201d\u7b49\u3002\u62c9\u65af\u7279\u4e00\u76f4\u91c7\u53d6\u7684\u505a\u6cd5\u662f\u8ba9\u597d\u7684\u7279\u5f81\u8131\u9896\u800c\u51fa\u3002\u4f8b\u5982\uff0c\u4e00\u79cd\u6784\u5efaRust\u7684\u5ec9\u4ef7\u65b9\u6cd5\u662f\u8bf4\u6240\u6709\u6743\u548c\u501f\u7528\u6743\u662fC\u548cC++\u95ee\u9898\u7684\u4fee\u590d\u3002\u7136\u800c\uff0c\u8fd9\u4ea7\u751f\u4e86\u4e00\u4e2a\u53ef\u6015\u7684\u8bba\u70b9\uff1a\u5b83\u4eec\u5bf9\u8bb8\u591a\u5176\u4ed6\u4e8b\u60c5\u90fd\u6709\u597d\u5904\uff0c\u800c\u8fd9\u4e2a\u8bba\u70b9\u662f\u6211\u3002\n..", "note_en": "The 2020 Developer Survey results are in, and once again, Rust is the number one most loved language among the 65,000 programmers who participated. Rust has taken the number one spot since 2016, showing that it\u2019s got something that the developers who use it love. 86.1% of those survey respondents who said they currently use Rust want to continue using it next year. This is the fifth year in a row that Rust has taken this top spot, so we figured it\u2019s got to have something special.\n A few months ago, we asked Stack Overflow\u2019s top Rust contributor, Jake Goulding (aka  Shepmaster), to explain  what makes Rust such a hit with the coders who used it. Here\u2019s a sample of what he had to say:\n \u201cThe short answer is that Rust solves pain points present in many other languages, providing a solid step forward with a limited number of downsides.\u201d\n The full article is well worth a read, as he covers the benefits (as well as the pain points) of Rust for coders coming from other languages. But as eloquent and persuasive as Jake is, we wanted to hear from more users. So I reached out for comment in our  Rust chatroom and on the  Rust forums. Rust users are a passionate bunch, and I got some fascinating insights along with some friendly debates.\n (The quotes below are edited for length, clarity, and to group them conceptually. Many of them come from  this thread on the Rust user forums, so if you want to read them all in full and in context, feel free.)\n Without further ado, here\u2019s why Rust gets so much love, straight from the Rustaceans themselves (including two members of the Rust core team.)\n  While some languages just add polish and ease to existing concepts, several users feel that Rust is actually doing new things with a programming language. And it\u2019s not doing new things just to be showy; they feel these design choices solve hard problems with modern programming.\n ZiCog: \u201cRust is the only language of the dozen or so I have used professionally for four decades that actually introduces genuinely new features. Namely the whole idea of safety of memory usage in a compiled, real systems programming language with no garbage collection or complicated run-time system.\u201d\n Denys S\u00e9guret: \u201cWe frequently have such enthusiasm when we discover that a quite powerful feature like reading a compilation context element under the disguise of an env variable can be done so elegantly, and even be solved at compile time, without any ugly inconsistency.\u201d\n janriemer: \u201cA quote from Chris Dickinson, engineer at npm, sums it up perfectly for me, because I have thought the same, without knowing the quote at that time: \u2018My biggest compliment to Rust is that it\u2019s boring, and this is an amazing compliment.\u2019\n Rust is a programming language that looks like it has been  developed by user experience designers. They have a clear vision (a  why) of the language and  carefully choose what to add to the language and what to rework, while listening to what the community really wants. There are no loose ends, it\u2019s all a coherent whole that perfectly supports a developer\u2019s workflow.\u201d\n skysch : \u201cI came to Rust from Haskell, and I feel that Haskell is a very elegant and safe language. The biggest differentiator for me is that there is a greater difference between high-performance code and idiomatic \u2018clean\u2019 code in Haskell than in Rust. Most Rust code looks like most other Rust code, even when it performs well. Haskell can become unfamiliar real quick if someone is operating under different libraries and goals from what you are typically doing. Small differences in syntax can result in huge differences in behavior, and Rust has more uniformity on that axis.\u201d\n  perhaps the world\u2019s best dependency management and build tool, which has practically solved the \u2018dependency hell\u2019 problem;\n  Targets bare-metal (e.g. write an OS kernel or device driver; use Rust as a \u2018high level assembler\u2019)\u201d\n daboross: \u201cCompile time guarantees: When I think of a \u201cstatically typed language\u201d, I think of Java, or C#, or something like TypeScript. They give compile-time assurances that your code has the correct types, and move a set of errors from runtime to compile time. Rust goes one magnitude further in this! Compile time checking extends to thread safety, to ownership semantics, to validation.\n Enums mean that, at compile time, I can declare the set of variants my data can exist as, and when accessing that data I\u2019m forced to consider all possibilities. Traits mean that when my code is templated/generic, I have exact capabilities I can require.\n Rust is  extremely backwards compatible. I can run code written for Rust 1.0. Equally, I can write code which I know I won\u2019t have to update next time I update Rust.\n And it\u2019s not just Rust itself \u2013 the language enables libraries to have the same guarantees. Consider two facts:\n In type checking,  only the signature of functions are considered. There\u2019s no relying on the implementation for determining if callers are correct (like you can do in Scala, or Haskell)\n The extensive type system means  incorrect usages of interfaces become type errors, not runtime errors.\n Because of these two things, libraries can be 100% sure that they maintain backwards compatibility when releasing a new interface. In Python, or Java, or Javascript, or even Scala or Haskell, you need to pay extra attention to implementations of things if you want to ensure you maintain backwards compatibility. In Rust, it\u2019s free: if you haven\u2019t changed the function signature, it remains the same.\u201d\n Peter Varo: \u201cRust found a sweet spot: it is just as low-level as C or C++ with all the advantages of these (e.g. control, size, speed, etc.) At the same time, it is as high-level as Haskell with an amazing amount of functional heritage. It is still imperative, so quite accessible to most people, and it is just as flexible as Python. For example, concepts like \u201cduck-typing\u201d are happening at compile time (i.e. trait bounds), yet it does not have the dated, object-oriented programming model and all of its well known problems.\n Last but not least, the batteries which are included: the small and concise syntax, the small number of features the language provides, the integrity of the standard library as well as its consistency and the quality of its documentation, including the learning materials for both beginners and advanced users are all contributing factors.\u201d\n blonk: \u201cWith Rust/cargo I can focus on the actual code rather than the build system. No need to spend whole days reading up on Yet Another Build System. Cross-compilation with Rust is so incredibly simple and painless that when you read up on how to do it, you can\u2019t help but think \u201cWait, I must be missing something.\u201d\n When you\u2019re outside of Rust, there are things that sound like empty slogans, but when you start using it you\u2019ll become pleasantly surprised to realize there\u2019s a lot of truth to:\n While you spend time fighting to compile your code, you save that time in not having to debug your code.\n You\u2019re no longer afraid of major refactoring. Once your refactored code compiles, it works as intended.\n It really does force you to do proper multithreading (well, you can still deadlock, but the crashy types of bugs are far more difficult to do).\n I find myself doing far less boilerplate code. And what boilerplate code I do need, I can often hide in a different module so it doesn\u2019t get in the way of the actual application logic code. (Most common example of this is the error type conversions).\u201d\n  Many current programming discussions revolve around whether to use a fast, low-level language that lets you handle memory management or a higher-level language with greater safety precautions. For fans of Rust, they like that it does both.\n Jay Oster, Architect at   PubNub: \u201cIt\u2019s akin to wandering around in complete darkness for an entire career, and suddenly being enlightened to two facts:\n You are not perfect. You will make mistakes. Those mistakes will cause you a lot of problems.\n I see a common dissent where some proclaim that they  are in fact perfect, and that they do write flawless code, and everything is peachy, and they can\u2019t understand why everyone else is so interested in Rust. But it\u2019s clear to this old goat that these are the people who haven\u2019t yet learned that the problem is not  strictly themselves; it\u2019s everyone else. It\u2019s a problem of economy of scale.\n In other words, I myself could write flawless and bug-free code in isolation if I had the time and energy to pay attention to every minute detail and meticulously hand-craft every beautiful line regardless of the language or implementation details.  But that doesn\u2019t matter. Once I start depending on code written by other people or new contributors come along and make modifications, all of my so-called guarantees of perfection are now incompatible with reality. \u2018Correctness by convention\u2019 does not scale.\n Conventions will have faults and impractical amounts of time and energy will be spent trying to automate a bandaid that should not exist in the first place. The \u201caha!\u201d moment is realizing that one can actually get much stronger guarantees by baking those same conventions directly into the language and compiler.\n To top it off, you can also get performance equivalent to that of finely tuned hand-written assembly, if you so desire. You can have your cake and eat it too!\u201d\n daboross: \u201cAs a library author, the complex trait/generic system means I can craft intricate, yet easy to use interfaces. These interfaces  cannot be used incorrectly, which means I don\u2019t have to perform runtime checks, and my users don\u2019t have to even  think about problem cases, because they  can\u2019t write them.\n As a library consumer, the rich and extensive  crates ecosystem enables me to write code in vast different domains without needing to dig into the specifics of every one. I don\u2019t need to know how a JSON parser or writer works to use serde \u2013 and my lack of knowledge won\u2019t ever be a source of bugs, because I get compile time errors rather than runtime ones.\n I just feel really taken care of when I\u2019m using Rust. There are  so many trivial things, from package upgrades, to type errors, to passing in a string which an interface doesn\u2019t expect and getting a random runtime error which I\u2019m  completely free of in Rust. I can just think about the algorithms!\u201d\n  Remember that debate I mentioned? Some of the back and forth I saw came from wondering if the Most Loved title comes from Rust having a small user base that mostly use the language by choice. While it\u2019s true, only 5.1% of our survey respondents had used Rust in the past year, those users want to keep on using Rust.\n CAD97 : \u201cTo be perfectly frank: I think Rust benefits here that very few people are being forced to use Rust. Most people are electively using Rust, still.\n I\u2019m not saying Rust doesn\u2019t deserve the label (I\u2019m pretty sure it does!), I\u2019m just arguing that Rust is in a  very good position to \u201cgame\u201d the metric SO is actually measuring here, because it has a large elective adoption from enthusiasts but a low(er) adoption by those who would mandate people to use a language they would rather not continue to use.\u201d\n ZiCog: \u201cIf you use any programming language long enough you will come to think it sucks. Use many, over many years, they all suck.\n Those that do a lot of programming in all kinds of languages and have the skill and talent, end up inventing and implementing their own new programming language to fix all the pains they have suffered in the past. As you know, new languages sprout like weeds as a result.\n Given the above, if you ask programmers what language they love it will not be the one they are using or any they have used in the past.\n As almost no programmers have had to use Rust for the long haul so far of course they will say they love Rust.\u201d\n Jay Oster, Architect at   PubNub: \u201cI had a similar \u2018grass is always greener\u2019 bias toward various languages over the decades. But I think this isn\u2019t one of the primary contributing factors to this phenomenon. If it were, we might expect some of the newer languages to come out on top in these surveys, right?\u201d\n H2CO3 : \u201cRust is currently my favorite language by far, despite the fact that I\u2019ve been using it for 4 years now (for personal projects, as well as \u201creal\u201d code, out of need for performance). By the time I had this much experience with C and C++, I had already discovered their bundle of serious shortcomings.\n Heck, even Haskell, the most elite of elegant languages, showed its inevitable ugliness after about a year or so, when I had to start fiddling with language extensions and dialects in order to get a somewhat advanced library to compile.\n This simply didn\u2019t happen in Rust. The bag of footguns and design errors just never emerged from the mist.\u201d\n asafigan: \u201cI believe that Rust is challenging to learn but rewarding to use. I think it is actually surprising how much people enjoy being challenged as long as the reward is good enough.\n I found Rust hard to learn but pretty easy to use. I think a lot of people come to Rust from a different language and are surprised how much different (and therefore hard to learn) it is. But they forget how hard it was to learn to program in the first place. In college, we had two courses on Object Oriented Programming in Java. By the end, most people still didn\u2019t really get it. Rust is different enough from other languages to be hard to learn. It\u2019s hard to learn say Functional Programming if all you know is OOP. It\u2019s hard to learn OOP if all you know is Functional. It\u2019s hard to learn Ownership if all you know is GC or manual memory management. Traits are pretty weird too. But it\u2019s worth it for better software.\u201d\n cfsamson : \u201cIn Rust, I find that a lot of the effort is front loaded. It makes easy problems somewhat harder to get started on, but it doesn\u2019t create hard problems later on. If there are problems it\u2019s most often the problem domain itself that is harder than I thought, and not related to the tools I use. I find the price I pay up front is definitely worth what I get. I also find the price low once you get to know the language well.\u201d\n  From talking to fans, I found that their love of the language shines through pretty hard, even when they disagree. Rust user blonk identifies this as a community-wide characteristic.\n blonk: It\u2019s pretty clear that this whole \u201cbe respectful\u201d is working very well. There have been a few cases where people have, imho, asked questions in bad faith, but rather than coughing up a giant hairball over the situation, community members reply in good faith, and it defuses the situation.\n  If you want to know what makes a devoted supporter, talk to the most devoted, right? I reached out to the Rust core team to find out why they think Rust gets so much love, year over year. The format is a little different, I\u2019ve kept the question and answer layout.\n  Erin Power is a Rust developer based in Berlin. She has been using Rust since 1.0 in 2015. She is one of the leads of Rust\u2019s Governance WG, and is the creator of \u201c Tokei\u201d a popular open source code counter written in Rust.\n Q: People who use Rust really seem to like it; why do you think that is?\n A: I think it\u2019s because Rust makes big promises, and delivers on them. Rust provides automatic memory management like any other high level language, but it\u2019s done at compile time so there\u2019s no hidden cost or behavior to account for.\n Rust has always been designed for what we expect in modern hardware. Thread safety and data races, which can be a common footgun in other languages, were accounted for at the language level. As a result it can be incredibly easy to take full advantage of your workstation\u2019s capabilities without a lot of changes or headaches. It\u2019s always been impressive to me how  rayon (a popular library in Rust) can parallelize your entire workload by changing just a single line of code.\n As a result there\u2019s been a lot of high quality and fast implementations being written in Rust, and thanks to cargo and  crates.io (Rust\u2019s package manager and community run package registry), it\u2019s never been easier to reuse and share that code both internally and with the world at large.\n Cargo handles a large repository with several to dozens of packages just as well as it handles one, you don\u2019t need to spend days writing a build file to have the configuration you want.\n Not only is it easy to manage and update your Rust dependencies, Rust itself is incredibly easy to upgrade and switch between different versions of the language with Rustup; a toolchain version manager that is included by default.\n Any of the above points would be enough for somebody to like Rust, but taken altogether it makes Rust an incredibly compelling language that feels refreshing to write and create your projects in.\n Q: What\u2019s the Rust team planning to keep users in love with it?\n A: Well I can\u2019t speak for what all the teams have planned, as Rust has dozens of teams consisting mostly of volunteers who are semi-autonomously all trying to improve the Rust language and the surrounding ecosystem. You can find out about  the project\u2019s roadmap for the year on GitHub (though I will note that it was proposed and written before COVID-19).\n  A: I\u2019ve been writing Rust since it went 1.0 in 2015 and have tried to spend as much of my programming time writing in it since. I write and maintain quite a few open source applications and libraries that I maintain and I\u2019ve been working with Rust professionally since 2018.\n Q: I\u2019ve seen some comments that Rust is difficult to get the hang of, and in our survey, only a small (~5%) number of people had used Rust. Do you think there\u2019s a high barrier to entry to Rust? Why or why not?\n A: I think there are certainly specific concepts in Rust that have a high barrier to learn and use. Though speaking anecdotally, my background before Rust was in fullstack web dev and design; I had no previous \u201csystems\u201d or \u201cfunctional\u201d language experience, and I found it way easier to learn those concepts in Rust than other existing languages, so I wouldn\u2019t agree that Rust as whole has a high barrier.\n I feel that a lot of the high barrier comes from Rust being a relatively new programming language and there is not currently a wealth of resources coming from other perspectives that fit different people\u2019s mental models to learn from like you have with the more well established languages. Hopefully, as time goes on we\u2019ll have more diverse learning materials that help teach and improve understanding these concepts.\n While only a small portion of people have written Rust, it\u2019s adoption has been such a success, a lot of critical pieces of software people use everyday have already been rewritten or created in Rust. Rust has already seen adoption in every single one of the big five tech corporations, and it\u2019s not just enterprises that are interested. Smaller tech firms like Dropbox or OneSignal have a lot of their core infrastructure for their services in Rust.\n  Florian Gilcher has been programming in Rust since 2013. He\u2019s a member of the community team since its inception and is currently part of the core team. Florian co-organised the first five RustFests and co-organises OxidizeConf. Before that, he was active in the Ruby community.\n Q: People who use Rust really seem to like it; why do you think that is?\n A: The simple first response is: because it\u2019s a good product in many aspects.  Jake Goulding already gave a good overview that I don\u2019t want to repeat on your blog.\n   I\u2019ll go a bit into detail why that matters: Many programming languages and tools are marketed in a confrontational and comparative matter. \u201cBetter than X\u201d; \u201cX is the new Y\u201d; etc. Rust has always taken the approach of making good features stand out by themselves. For example, a cheap way of framing Rust would be to say that Ownership and Borrowing are fixes for C and C++ problems. This makes for a terrible argument, though: they are good for many other things, and this argument im\n......", "posttime": "2020-06-06 10:51:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,rust", "title": "\u4e3a\u4ec0\u4e48\u4f7f\u7528Rust\u7684\u5f00\u53d1\u8005\u5982\u6b64\u559c\u6b22\u5b83", "title_en": "Why the developers who use Rust love it so much", "transed": 1, "url": "https://stackoverflow.blog/2020/06/05/why-the-developers-who-use-rust-love-it-so-much/", "via": "", "real_tags": ["\u5f00\u53d1", "rust"]}, {"category": "", "categoryclass": "", "imagename": "f55443577c99e12c10aa3a91fce59d5c.jpg", "infoid": 1005392, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\uff0c\u5728\u4e00\u6b21\u968f\u610f\u7684\u8c08\u8bdd\u4e2d\uff0c\u6211\u65e0\u610f\u4e2d\u542c\u5230\u4e00\u4f4d\u540c\u4e8b\u8bf4\uff1aLinux\u7f51\u7edc\u5806\u6808\u592a\u6162\u4e86\uff01\u60a8\u4e0d\u80fd\u6307\u671b\u6bcf\u4e2a\u5185\u6838\u6bcf\u79d2\u5904\u7406\u7684\u6570\u636e\u5305\u8d85\u8fc75\u4e07\u4e2a\uff01\n\u8fd9\u8ba9\u6211\u5f00\u59cb\u601d\u8003\u3002\u867d\u7136\u6211\u540c\u610f\u6bcf\u4e2a\u5185\u683850kpps\u53ef\u80fd\u662f\u4efb\u4f55\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u7684\u6781\u9650\uff0c\u4f46\u662fLinux\u7f51\u7edc\u5806\u6808\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\u8ba9\u6211\u4eec\u91cd\u65b0\u8868\u8ff0\u4e00\u4e0b\uff0c\u8ba9\u5b83\u53d8\u5f97\u66f4\u6709\u8da3\uff1a\n\u5728Linux\u4e0a\uff0c\u7f16\u5199\u6bcf\u79d2\u63a5\u6536100\u4e07\u4e2aUDP\u6570\u636e\u5305\u7684\u7a0b\u5e8f\u6709\u591a\u96be\uff1f\n\u5e0c\u671b\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u80fd\u7ed9\u6211\u4eec\u4e0a\u4e00\u5802\u5173\u4e8e\u73b0\u4ee3\u7f51\u7edc\u5806\u6808\u8bbe\u8ba1\u7684\u597d\u8bfe\u3002\n\u6d4b\u91cf\u6bcf\u79d2\u6570\u636e\u5305\u6570(PPS)\u6bd4\u6d4b\u91cf\u6bcf\u79d2\u5b57\u8282\u6570(Bps)\u6709\u8da3\u5f97\u591a\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u597d\u7684\u6d41\u6c34\u7ebf\u548c\u53d1\u9001\u66f4\u957f\u7684\u6570\u636e\u5305\u6765\u5b9e\u73b0\u9ad8bps\u3002\u63d0\u9ad8PPS\u7684\u96be\u5ea6\u8981\u5927\u5f97\u591a\u3002\n\u7531\u4e8e\u6211\u4eec\u5bf9PPS\u5f88\u611f\u5174\u8da3\uff0c\u6211\u4eec\u7684\u5b9e\u9a8c\u5c06\u4f7f\u7528\u77edUDP\u6d88\u606f\u3002\u51c6\u786e\u5730\u8bf4\uff1a32\u5b57\u8282\u7684UDP\u6709\u6548\u8d1f\u8f7d\u3002\u8fd9\u610f\u5473\u7740\u4ee5\u592a\u7f51\u5c42\u4e0a\u670974\u4e2a\u5b57\u8282\u3002\n\u5b83\u4eec\u90fd\u6709\u4e24\u4e2a6\u68382 GHz Xeon\u5904\u7406\u5668\u3002\u5728\u542f\u7528\u8d85\u7ebf\u7a0b(HT)\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u673a\u7bb1\u4e0a\u6700\u591a\u670924\u4e2a\u5904\u7406\u5668\u3002\u8fd9\u4e9b\u76d2\u5b50\u914d\u5907\u4e86Solarflare\u7684\u591a\u961f\u521710G\u7f51\u5361\uff0c\u914d\u7f6e\u4e8611\u4e2a\u63a5\u6536\u961f\u5217\u3002\u7a0d\u540e\u518d\u8bb2\u3002\n\u8ba9\u6211\u4eec\u7684UDP\u6570\u636e\u5305\u4f7f\u7528\u7aef\u53e34321\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u6d41\u91cf\u4e0d\u4f1a\u53d7\u5230iptables\u7684\u5e72\u6270\uff1a\n\u63a5\u6536\u5668$iptables-i\u8f93\u51651-p UDP--dport 4321-j ACCET\u63a5\u6536\u5668$iptables-t RAW-I\u9884\u5904\u74061-p udp--dport 4321-j NOTRACK\u3002\n\u63a5\u6536\u65b9$for i in`seq 1 20`\uff1bdo\\IP addr add 192.168.254.$i/24 dev eth2\uff1b\\donesender$IP addr add 192.168.254.30/24 dev eth3\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u505a\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5b9e\u9a8c\u3002\u4e00\u6b21\u7b80\u5355\u7684\u53d1\u9001\u548c\u63a5\u6536\u5c06\u53d1\u9001\u591a\u5c11\u4e2a\u6570\u636e\u5305\uff1f\nFD=SOCKET.Socket(SOCKET.AF_INET\uff0cSOCKET.SOCK_DGRAM)fd.bind((&#34\uff1b0.0.0.0&#34\uff1b\uff0c65400))#\u9009\u62e9\u6e90\u7aef\u53e3\u4ee5\u964d\u4f4enondeterminismfd.connect((&#34\uff1b192.168.254.1&#34\uff1b\uff0c4321))\uff0c\u800cTRUE\uff1afd.sendmmsg([&#34\uff1b\\x00&#34\uff1b*32]*1024)\u3002\n\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u901a\u5e38\u7684\u201c\u53d1\u9001\u7cfb\u7edf\u8c03\u7528\u201d\uff0c\u4f46\u5b83\u7684\u6548\u7387\u4e0d\u4f1a\u5f88\u9ad8\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u5185\u6838\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u6700\u597d\u907f\u514d\u3002\u5e78\u8fd0\u7684\u662f\uff0cLinux\u6700\u8fd1\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684syscall\uff1asendmmsg\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u4e00\u6b21\u53d1\u9001\u8bb8\u591a\u6570\u636e\u5305\u3002\u8ba9\u6211\u4eec\u4e00\u6b21\u5904\u74061024\u4e2a\u5305\u5427\u3002\n\u53d1\u9001\u65b9$./udpsender 192.168.254.1\uff1a4321\u63a5\u6536\u65b9$./udproceiver1 0.0.0.0\uff1a4321 0.352M PPS 10.730MiB/90.010Mb 0.284M PPS 8.655MiB/72.603Mb 0.262M PPS 7.991MiB/67.033Mb 0.199M PPS 6.081MiB/51.013Mb 0.195M PPS 5.956MiB/49.966Mb\u3002\n\u4f7f\u7528\u5e7c\u7a1a\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728197K\u5230350K PPS\u4e4b\u95f4\u5b8c\u6210\u3002\u8fd8\u4e0d\u7b97\u592a\u7cdf\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6709\u76f8\u5f53\u591a\u7684\u53ef\u53d8\u6027\u3002\u5b83\u662f\u7531\u5185\u6838\u5728\u5185\u6838\u4e4b\u95f4\u6df7\u6d17\u6211\u4eec\u7684\u7a0b\u5e8f\u9020\u6210\u7684\u3002\u5c06\u8fdb\u7a0b\u56fa\u5b9a\u5230CPU\u5c06\u6709\u6240\u5e2e\u52a9\uff1a\n\u53d1\u9001\u65b9$taskset-c 1./udpsender 192.168.254.1\uff1a4321\u63a5\u6536\u65b9$taskset-c 1./udproceiver1 0.0.0.0\uff1a4321 0.362M PPS 11.058MiB/92.760Mb 0.374M PPS 11.411MiB/95.723Mb 0.369M PPS 11.252MiB/94.389 Mb 0.370M PPS 11.289MiB/94.696Mb 0.365\n\u73b0\u5728\uff0c\u5185\u6838\u8c03\u5ea6\u5668\u5c06\u8fdb\u7a0b\u4fdd\u7559\u5728\u5b9a\u4e49\u7684CPU\u4e0a\u3002\u8fd9\u63d0\u9ad8\u4e86\u5904\u7406\u5668\u7f13\u5b58\u7684\u5c40\u90e8\u6027\uff0c\u5e76\u4f7f\u6570\u5b57\u66f4\u52a0\u4e00\u81f4\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\n\u867d\u713637\u4e07PPS\u5bf9\u4e8e\u4e00\u4e2a\u5e7c\u7a1a\u7684\u7a0b\u5e8f\u6765\u8bf4\u662f\u4e0d\u9519\u7684\uff0c\u4f46\u5b83\u79bb1Mpps\u7684\u76ee\u6807\u8fd8\u6709\u76f8\u5f53\u5927\u7684\u8ddd\u79bb\u3002\u8981\u63a5\u6536\u66f4\u591a\uff0c\u9996\u5148\u6211\u4eec\u5fc5\u987b\u53d1\u9001\u66f4\u591a\u6570\u636e\u5305\u3002\u4ece\u4e24\u4e2a\u7ebf\u7a0b\u72ec\u7acb\u53d1\u9001\u600e\u4e48\u6837\uff1a\n\u53d1\u9001\u65b9$taskset-c 1\uff0c2./udpsender\\192.168.254.1\uff1a4321 192.168.254.1\uff1a4321\u63a5\u6536\u65b9$taskset-c 1./udproceiver1 0.0.0.0\uff1a4321 0.349M PPS 10.651MiB/89.343Mb 0.354M PPS 10.815MiB/90.724Mb 0.354M PPS 10.806MiB/90.646Mb 0.354M PPS 10.811M\u3002\n\u63a5\u6536\u65b9\u7684\u4eba\u6570\u5e76\u6ca1\u6709\u589e\u52a0\u3002ethtool-S\u5c06\u63ed\u793a\u6570\u636e\u5305\u7684\u5b9e\u9645\u53bb\u5411\uff1a\n\u63a5\u6536\u8005$WATCH&#39\uff1bsudo ethtool-S eth2|grep rx&#39\uff1brx_nodesc_drop_cnt\uff1a451.3k/s rx-0.rx_Packets\uff1a8.0/s rx-1.rx_Packets\uff1a0.0/s rx-2.rx_Packets\uff1a0.0/s rx-3.rx_Packets\uff1a0.5/s Rx-4.rx_Packets\uff1a355.2k/s Rx-5.rx_Packets\uff1a0.0/s Rx-6.rx_Packets\uff1a0.0/s Rx-7.rx_Packets\uff1a0.5/s RX-\u3002.rx_Packets\uff1a0.0/s Rx-9.rx_Packets\uff1a0.0/s Rx-10.rx_Packets\uff1a0.0/s\u3002\n\u901a\u8fc7\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\uff0cNIC\u62a5\u544a\u5b83\u5df2\u6210\u529f\u5c06\u5927\u7ea6350kpps\u4f20\u8f93\u52304\u53f7RX\u961f\u5217\u3002rx_nodesc_drop_cnt\u662f\u4e00\u4e2a\u7279\u5b9a\u4e8eSolarflare\u7684\u8ba1\u6570\u5668\uff0c\u8868\u793aNIC\u65e0\u6cd5\u5c06450kpps\u4f20\u8f93\u5230\u5185\u6838\u3002\n\u6709\u65f6\u5019\uff0c\u5305\u88f9\u6ca1\u6709\u9001\u5230\u7684\u539f\u56e0\u5e76\u4e0d\u660e\u663e\u3002\u4e0d\u8fc7\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u60c5\u51b5\u975e\u5e38\u6e05\u695a\uff1aRX\u961f\u5217#4\u5c06\u6570\u636e\u5305\u53d1\u9001\u5230CPU#4\u3002\u800cCPU#4\u4e0d\u80fd\u518d\u505a\u4efb\u4f55\u5de5\u4f5c-\u5b83\u5b8c\u5168\u5fd9\u4e8e\u8bfb\u53d6350kpps\u3002\u4e0b\u9762\u662f\u5b83\u5728HTOP\u4e2d\u7684\u6837\u5b50\uff1a\n\u8fc7\u53bb\uff0c\u7f51\u5361\u53ea\u6709\u4e00\u4e2aRX\u961f\u5217\uff0c\u7528\u4e8e\u5728\u786c\u4ef6\u548c\u5185\u6838\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u5305\u3002\u8fd9\u79cd\u8bbe\u8ba1\u6709\u4e00\u4e2a\u660e\u663e\u7684\u9650\u5236--\u5b83\u4e0d\u53ef\u80fd\u4f20\u9001\u8d85\u8fc7\u5355\u4e2aCPU\u6240\u80fd\u5904\u7406\u7684\u66f4\u591a\u7684\u6570\u636e\u5305\u3002\n\u4e3a\u4e86\u5229\u7528\u591a\u6838\u7cfb\u7edf\uff0cNIC\u5f00\u59cb\u652f\u6301\u591a\u4e2aRX\u961f\u5217\u3002\u8bbe\u8ba1\u5f88\u7b80\u5355\uff1a\u6bcf\u4e2aRX\u961f\u5217\u90fd\u56fa\u5b9a\u5728\u5355\u72ec\u7684CPU\u4e0a\uff0c\u56e0\u6b64\uff0c\u901a\u8fc7\u5c06\u6570\u636e\u5305\u4f20\u8f93\u5230\u6240\u6709RX\u961f\u5217\uff0cNIC\u53ef\u4ee5\u5229\u7528\u6240\u6709CPU\u3002\u4f46\u8fd9\u4e5f\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u7f51\u5361\u5982\u4f55\u51b3\u5b9a\u5c06\u5176\u63a8\u9001\u5230\u54ea\u4e2aRX\u961f\u5217\uff1f\n\u5faa\u73af\u5e73\u8861\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5355\u4e2a\u8fde\u63a5\u5185\u7684\u6570\u636e\u5305\u91cd\u65b0\u6392\u5e8f\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u4f7f\u7528\u6765\u81ea\u5206\u7ec4\u7684\u6563\u5217\u6765\u51b3\u5b9aRX\u961f\u5217\u53f7\u3002\u6563\u5217\u901a\u5e38\u4ece\u5143\u7ec4(\u6e90IP\u3001DST IP\u3001\u6e90\u7aef\u53e3\u3001DST\u7aef\u53e3)\u8ba1\u7b97\u3002\u8fd9\u4fdd\u8bc1\u4e86\u5355\u4e2a\u6d41\u7684\u5206\u7ec4\u5c06\u59cb\u7ec8\u5728\u5b8c\u5168\u76f8\u540c\u7684RX\u961f\u5217\u4e0a\u7ed3\u675f\uff0c\u5e76\u4e14\u5355\u4e2a\u6d41\u4e2d\u7684\u5206\u7ec4\u7684\u91cd\u65b0\u6392\u5e8f\u4e0d\u4f1a\u53d1\u751f\u3002\nReceiver$ethtool-n eth2 rx-flow-hash udp4UDP over IPv4 FLOWS\u4f7f\u7528\u4ee5\u4e0b\u5b57\u6bb5\u8ba1\u7b97\u54c8\u5e0c\u6d41\u5bc6\u94a5\uff1aIP Saip DA\u3002\n\u8fd9\u8868\u793a\u4e3a\uff1a\u5bf9\u4e8eIPv4 UDP\u6570\u636e\u5305\uff0cNIC\u5c06\u6563\u5217(\u6e90IP\u3001DST IP)\u5730\u5740\u3002\u5373\uff1a\n\u8fd9\u76f8\u5f53\u6709\u9650\uff0c\u56e0\u4e3a\u5b83\u5ffd\u7565\u7aef\u53e3\u53f7\u3002\u8bb8\u591aNIC\u5141\u8bb8\u81ea\u5b9a\u4e49\u6563\u5217\u3002\u540c\u6837\uff0c\u4f7f\u7528ethtool\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8981\u6563\u5217\u7684\u5143\u7ec4(src ip\u3001dst ip\u3001src port\u3001dst port)\uff1a\n\u63a5\u6536\u65b9$ethtool-N eth2 rx-flow-hash udp4 sdfn\u65e0\u6cd5\u66f4\u6539RX\u7f51\u7edc\u6d41\u6563\u5217\u9009\u9879\uff1a\u4e0d\u652f\u6301\u64cd\u4f5c\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u7684NIC\u4e0d\u652f\u6301\u5b83-\u6211\u4eec\u53ea\u80fd\u4f7f\u7528(src IP\uff0cdst IP)\u6563\u5217\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u6240\u6709\u6570\u636e\u5305\u6d41\u5230\u4e00\u4e2aRX\u961f\u5217\uff0c\u5e76\u4e14\u53ea\u547d\u4e2d\u4e00\u4e2aCPU\u3002\u8ba9\u6211\u4eec\u4ee5\u6b64\u4e3a\u5951\u673a\uff0c\u5bf9\u4e0d\u540cCPU\u7684\u6027\u80fd\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u5728\u6211\u4eec\u7684\u8bbe\u7f6e\u4e2d\uff0c\u63a5\u6536\u4e3b\u673a\u6709\u4e24\u4e2a\u72ec\u7acb\u7684\u5904\u7406\u5668\u7ec4\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u7ec4\u662f\u4e00\u4e2a\u4e0d\u540c\u7684NUMA\u8282\u70b9\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5355\u7ebf\u7a0b\u63a5\u6536\u5668\u56fa\u5b9a\u5230\u6211\u4eec\u8bbe\u7f6e\u7684\u56db\u4e2a\u6709\u8da3\u7684CPU\u4e2d\u7684\u4e00\u4e2a\u3002\u8fd9\u56db\u4e2a\u9009\u9879\u662f\uff1a\n\u5728\u53e6\u4e00\u4e2aCPU\u4e0a\u8fd0\u884cReceiver\uff0c\u4f46\u5728\u4e0eRX\u961f\u5217\u76f8\u540c\u7684NUMA\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u6211\u4eec\u5728\u4e0a\u9762\u770b\u5230\u7684\u6027\u80fd\u5927\u7ea6\u662f360kpps\u3002\n\u5f53\u63a5\u6536\u5668\u4e0eRX\u961f\u5217\u5728\u5b8c\u5168\u76f8\u540c\u7684CPU\u4e0a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fbe\u5230~430kpps\u3002\u4f46\u5b83\u521b\u9020\u4e86\u9ad8\u5ea6\u7684\u53ef\u53d8\u6027\u3002\u5982\u679cNIC\u56e0\u6570\u636e\u5305\u800c\u4e0d\u582a\u91cd\u8d1f\uff0c\u5219\u6027\u80fd\u4f1a\u964d\u81f3\u96f6\u3002\n\u5f53\u63a5\u6536\u5668\u5728\u5904\u7406RX\u961f\u5217\u7684CPU\u7684HT\u4e0a\u8fd0\u884c\u65f6\uff0c\u5728200kpps\u5de6\u53f3\u7684\u6027\u80fd\u662f\u901a\u5e38\u7684\u4e00\u534a\u3002\n\u5f53\u63a5\u6536\u5668\u4f4d\u4e8e\u4e0eRX\u961f\u5217\u4e0d\u540c\u7684NUMA\u8282\u70b9\u4e0a\u7684CPU\u4e0a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u7ea633\u4e07PPS\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u6570\u5b57\u5e76\u4e0d\u592a\u4e00\u81f4\u3002\n\u867d\u7136\u5728\u4e0d\u540c\u7684NUMA\u8282\u70b9\u4e0a\u8fd0\u884c10%\u7684\u635f\u5931\u542c\u8d77\u6765\u5e76\u4e0d\u592a\u7cdf\u7cd5\uff0c\u4f46\u968f\u7740\u89c4\u6a21\u7684\u6269\u5927\uff0c\u95ee\u9898\u53ea\u4f1a\u53d8\u5f97\u66f4\u4e25\u91cd\u3002\u5728\u4e00\u4e9b\u6d4b\u8bd5\u4e2d\uff0c\u6211\u6bcf\u4e2a\u5185\u6838\u53ea\u80fd\u6324\u51fa250kpps\u3002\u5728\u6240\u6709\u7684\u4ea4\u53c9NUMA\u6d4b\u8bd5\u4e2d\uff0c\u53ef\u53d8\u6027\u90fd\u5f88\u5dee\u3002\u8de8NUMA\u8282\u70b9\u7684\u6027\u80fd\u635f\u5931\u5728\u541e\u5410\u91cf\u8f83\u9ad8\u65f6\u66f4\u4e3a\u660e\u663e\u3002\u5728\u5176\u4e2d\u4e00\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u5f53\u5728\u574f\u7684NUMA\u8282\u70b9\u4e0a\u8fd0\u884c\u63a5\u6536\u5668\u65f6\uff0c\u6211\u5f97\u5230\u4e864\u500d\u7684\u60e9\u7f5a\u3002\n\u7531\u4e8e\u6211\u4eecNIC\u4e0a\u7684\u6563\u5217\u7b97\u6cd5\u975e\u5e38\u6709\u9650\uff0c\u56e0\u6b64\u8de8RX\u961f\u5217\u5206\u53d1\u6570\u636e\u5305\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u591a\u4e2aIP\u5730\u5740\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u5c06\u6570\u636e\u5305\u53d1\u9001\u5230\u4e0d\u540c\u7684\u76ee\u7684IP\uff1a\n\u63a5\u6536\u8005$WATCH&#39\uff1bsudo ethtool-S eth2|grep rx&#39\uff1brx-0.rx_Packets\uff1a8.0/s Rx-1.rx_Packets\uff1a0.0/s Rx-2.rx_Packets\uff1a0.0/s Rx-3.rx_Packets\uff1a0.0/s Rx-3.rx_Packets\uff1a355.2k/s Rx-4.rx_Packets\uff1a0.5/s Rx-5.rx_Packets\uff1a297.0k/s Rx-6.rx_Packets\uff1a0.0/s Rx-7.rx_Packets\uff1a0.5/s Rx-8.rx_Packets\uff1a0.0/s RX-9\u3002.rx_Packets\uff1a0.0/s rx-10.rx_Packets\uff1a0.0/s\nReceiver$taskset-c 1./udproceiver1 0.0.0.0\uff1a4321 0.609M PPS 18.599MiB/156.019Mb 0.657M PPS 20.039MiB/168.102Mb 0.649M PPS 19.803MiB/166.120Mb\u3002\n\u4e07\u5c81\uff01\u5f53\u4e24\u4e2a\u5185\u6838\u5fd9\u4e8e\u5904\u7406RX\u961f\u5217\uff0c\u7b2c\u4e09\u4e2a\u5185\u6838\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6709\u53ef\u80fd\u83b7\u5f97~650K PPS\uff01\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u6d41\u91cf\u53d1\u9001\u5230\u4e09\u4e2a\u6216\u56db\u4e2aRX\u961f\u5217\u6765\u8fdb\u4e00\u6b65\u589e\u52a0\u8fd9\u4e2a\u6570\u5b57\uff0c\u4f46\u5f88\u5feb\u5e94\u7528\u7a0b\u5e8f\u5c06\u8fbe\u5230\u53e6\u4e00\u4e2a\u9650\u5236\u3002\u8fd9\u6b21rx_nodesc_drop_cnt\u6ca1\u6709\u589e\u957f\uff0c\u4f46netstat&#34\uff1b\u63a5\u6536\u5668\u9519\u8bef\u662f\uff1a\n\u63a5\u6536\u65b9$watch&#39\uff1bnetstat-s--udp&#39\uff1budp\uff1a437.0k/s\u6570\u636e\u5305\u63a5\u6536\u52300.0/s\u672a\u77e5\u7aef\u53e3\u63a5\u6536\u7684\u6570\u636e\u5305\u3002386.9k/s\u6570\u636e\u5305\u63a5\u6536\u9519\u8bef0.0/s\u6570\u636e\u5305\u53d1\u9001\u63a5\u6536\u9519\u8bef\uff1a123.8k/s SndbufErrors\uff1a0 InCsumErrors\uff1a0\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u867d\u7136NIC\u80fd\u591f\u5c06\u6570\u636e\u5305\u4f20\u9001\u5230\u5185\u6838\uff0c\u4f46\u5185\u6838\u65e0\u6cd5\u5c06\u6570\u636e\u5305\u4f20\u9001\u5230\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5b83\u53ea\u80fd\u63d0\u4f9b440kpps\uff0c\u5176\u4f59\u7684390kpps+123kpps\u7531\u4e8e\u5e94\u7528\u7a0b\u5e8f\u63a5\u6536\u901f\u5ea6\u4e0d\u591f\u5feb\u800c\u88ab\u4e22\u5f03\u3002\n\u6211\u4eec\u9700\u8981\u6a2a\u5411\u6269\u5c55\u63a5\u6536\u5668\u5e94\u7528\u7a0b\u5e8f\u3002\u5929\u771f\u7684\u65b9\u6cd5\uff0c\u4ece\u8bb8\u591a\u5e16\u5b50\u63a5\u6536\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u53d1\u6325\u4f5c\u7528\uff1a\n\u53d1\u9001\u65b9$taskset-c 1\uff0c2./udpsender 192.168.254.1\uff1a4321 192.168.254.2\uff1a4321\u63a5\u6536\u65b9$taskset-c 1\uff0c2./udproceiver1 0.0.0.0\uff1a4321 2 0.495M PPS 15.108MiB/126.733Mb 0.480M PPS 14.636MiB/122.775Mb 0.461M PPS 14.071MiB/118.038Mb 0.486M PPS 14.8MiB\u3002\n\u4e0e\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u76f8\u6bd4\uff0c\u63a5\u6536\u6027\u80fd\u8f83\u4f4e\u3002\u8fd9\u662f\u7531UDP\u63a5\u6536\u7f13\u51b2\u533a\u7aef\u7684\u9501\u5b9a\u4e89\u7528\u5f15\u8d77\u7684\u3002\u7531\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u4f7f\u7528\u76f8\u540c\u7684\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\uff0c\u56e0\u6b64\u5b83\u4eec\u82b1\u8d39\u4e0d\u6210\u6bd4\u4f8b\u7684\u65f6\u95f4\u4e89\u593aUDP\u63a5\u6536\u7f13\u51b2\u533a\u5468\u56f4\u7684\u9501\u3002\u8fd9\u7bc7\u6587\u7ae0\u66f4\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5e78\u8fd0\u7684\u662f\uff0cLinux\u6700\u8fd1\u6dfb\u52a0\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\uff1aSO_REUSEPORT\u6807\u5fd7\u3002\u5f53\u5728\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\u4e0a\u8bbe\u7f6e\u6b64\u6807\u5fd7\u65f6\uff0cLinux\u5c06\u5141\u8bb8\u8bb8\u591a\u8fdb\u7a0b\u7ed1\u5b9a\u5230\u540c\u4e00\u7aef\u53e3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5c06\u5141\u8bb8\u7ed1\u5b9a\u4efb\u610f\u6570\u91cf\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8d1f\u8f7d\u5c06\u5206\u6563\u5728\u5b83\u4eec\u4e4b\u95f4\u3002\n\u4f7f\u7528SO_REUSEPORT\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5c06\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u90fd\u5c06\u62e5\u6709\u4e00\u4e2a\u4e13\u7528\u7684UDP\u63a5\u6536\u7f13\u51b2\u533a\u3002\u8fd9\u907f\u514d\u4e86\u4ee5\u524d\u9047\u5230\u7684\u4e89\u7528\u95ee\u9898\uff1a\nReceiver$TASKSET-c 1\uff0c2\uff0c3\uff0c4./udproceiver1 0.0.0.0\uff1a4321 4 1 1.114M PPS 34.007MiB/285.271Mb 1.147M PPS 34.990MiB/293.518Mb 1.126M PPS 34.374MiB/288.354 Mb\u3002\n\u66f4\u591a\u7684\u8c03\u67e5\u5c06\u63ed\u793a\u8fdb\u4e00\u6b65\u6539\u8fdb\u7684\u7a7a\u95f4\u3002\u5c3d\u7ba1\u6211\u4eec\u542f\u52a8\u4e86\u56db\u4e2a\u63a5\u6536\u7ebf\u7a0b\uff0c\u4f46\u8d1f\u8f7d\u5e76\u672a\u5728\u5b83\u4eec\u4e4b\u95f4\u5747\u5300\u5206\u5e03\uff1a\n\u4e24\u4e2a\u7ebf\u7a0b\u63a5\u6536\u4e86\u6240\u6709\u5de5\u4f5c\uff0c\u53e6\u5916\u4e24\u4e2a\u7ebf\u7a0b\u6839\u672c\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u6570\u636e\u5305\u3002\u8fd9\u662f\u7531\u6563\u5217\u51b2\u7a81\u5f15\u8d77\u7684\uff0c\u4f46\u8fd9\u4e00\u6b21\u662f\u5728SO_REUSEPORT\u5c42\u3002\n\u6211\u5df2\u7ecf\u505a\u4e86\u4e00\u4e9b\u8fdb\u4e00\u6b65\u7684\u6d4b\u8bd5\uff0c\u5728\u5355\u4e2aNUMA\u8282\u70b9\u4e0a\u4f7f\u7528\u5b8c\u5168\u5bf9\u9f50\u7684RX\u961f\u5217\u548c\u63a5\u6536\u5668\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u83b7\u5f971.4Mpps\u3002\u5728\u4e0d\u540c\u7684NUMA\u8282\u70b9\u4e0a\u8fd0\u884cReceiver\u4f1a\u5bfc\u81f4\u6570\u5b57\u4e0b\u964d\uff0c\u6700\u591a\u53ea\u80fd\u8fbe\u52301Mpps\u3002\n\u786e\u4fdd\u6d41\u91cf\u5747\u5300\u5206\u5e03\u5728\u591a\u4e2aRX\u961f\u5217\u548cSO_REUSEPORT\u8fdb\u7a0b\u4e2d\u3002\u5b9e\u9645\u4e0a\uff0c\u53ea\u8981\u6709\u5927\u91cf\u7684\u8fde\u63a5(\u6216\u6d41)\uff0c\u8d1f\u8f7d\u901a\u5e38\u662f\u5747\u5300\u5206\u5e03\u7684\u3002\n\u60a8\u9700\u8981\u6709\u8db3\u591f\u7684\u7a7a\u95f2CPU\u5bb9\u91cf\u624d\u80fd\u5b9e\u9645\u4ece\u5185\u6838\u62fe\u53d6\u6570\u636e\u5305\u3002\n\u4e3a\u4e86\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0cRX\u961f\u5217\u548c\u63a5\u6536\u5668\u8fdb\u7a0b\u90fd\u5e94\u8be5\u4f4d\u4e8e\u5355\u4e2aNUMA\u8282\u70b9\u4e0a\u3002\n\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u5c55\u793a\u4e86\u5728Linux\u673a\u5668\u4e0a\u63a5\u65361Mpps\u5728\u6280\u672f\u4e0a\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u5e76\u6ca1\u6709\u5bf9\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u8fdb\u884c\u4efb\u4f55\u5b9e\u9645\u5904\u7406-\u5b83\u751a\u81f3\u6ca1\u6709\u67e5\u770b\u6d41\u91cf\u7684\u5185\u5bb9\u3002\u5728\u6ca1\u6709\u66f4\u591a\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u6307\u671b\u4efb\u4f55\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u6709\u8fd9\u6837\u7684\u6027\u80fd\u3002\n\u5bf9\u8fd9\u79cd\u4f4e\u7ea7\u522b\u3001\u9ad8\u6027\u80fd\u7684\u6570\u636e\u5305\u4e89\u8bba\u611f\u5174\u8da3\u5417\uff1fCloudFlare\u6b63\u5728\u4f26\u6566\u3001\u65e7\u91d1\u5c71\u548c\u65b0\u52a0\u5761\u62db\u8058\u3002\nLinux\u6280\u672f\u8c08\u6df1\u5ea6\u6f5c\u6c34", "note_en": "Last week during a casual conversation I overheard a colleague saying: &#34;The Linux network stack is slow! You can&#39;t expect it to do more than 50 thousand packets per second per core!&#34;\n That got me thinking. While I agree that 50kpps per core is probably the limit for any practical application, what  is the Linux networking stack capable of? Let&#39;s rephrase that to make it more fun:\n On Linux, how hard is it to write a program that receives 1 million UDP packets per second?\n Hopefully, answering this question will be a good lesson about the design of a modern networking stack.\n   Measuring packets per second (pps) is much more interesting than measuring bytes per second (Bps). You can achieve high Bps by better pipelining and sending longer packets. Improving pps is much harder.\n Since we&#39;re interested in pps, our experiments will use short UDP messages. To be precise: 32 bytes of UDP payload. That means 74 bytes on the Ethernet layer.\n  They both have two six core 2GHz Xeon processors. With hyperthreading (HT) enabled that counts to 24 processors on each box. The boxes have a multi-queue 10G network card by Solarflare, with 11 receive queues configured. More on that later.\n  Let&#39;s use port 4321 for our UDP packets. Before we start we must ensure the traffic won&#39;t be interfered with by the  iptables:\n receiver$ iptables -I INPUT 1 -p udp --dport 4321 -j ACCEPTreceiver$ iptables -t raw -I PREROUTING 1 -p udp --dport 4321 -j NOTRACK\n  receiver$ for i in `seq 1 20`; do \\ ip addr add 192.168.254.$i/24 dev eth2; \\ donesender$ ip addr add 192.168.254.30/24 dev eth3\n   To start let&#39;s do the simplest experiment. How many packets will be delivered for a naive send and receive?\n  fd = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)fd.bind((&#34;0.0.0.0&#34;, 65400)) # select source port to reduce nondeterminismfd.connect((&#34;192.168.254.1&#34;, 4321))while True: fd.sendmmsg([&#34;\\x00&#34; * 32] * 1024)\n While we could have used the usual  send syscall, it wouldn&#39;t be efficient. Context switches to the kernel have a cost and it is be better to avoid it. Fortunately a handy syscall was recently added to Linux:   sendmmsg. It allows us to send many packets in one go. Let&#39;s do 1,024 packets at once.\n     sender$ ./udpsender 192.168.254.1:4321receiver$ ./udpreceiver1 0.0.0.0:4321 0.352M pps 10.730MiB / 90.010Mb 0.284M pps 8.655MiB / 72.603Mb 0.262M pps 7.991MiB / 67.033Mb 0.199M pps 6.081MiB / 51.013Mb 0.195M pps 5.956MiB / 49.966Mb 0.199M pps 6.060MiB / 50.836Mb 0.200M pps 6.097MiB / 51.147Mb 0.197M pps 6.021MiB / 50.509Mb\n With the naive approach we can do between 197k and 350k pps. Not too bad. Unfortunately there is quite a bit of variability. It is caused by the kernel shuffling our programs between cores. Pinning the processes to CPUs will help:\n sender$ taskset -c 1 ./udpsender 192.168.254.1:4321receiver$ taskset -c 1 ./udpreceiver1 0.0.0.0:4321 0.362M pps 11.058MiB / 92.760Mb 0.374M pps 11.411MiB / 95.723Mb 0.369M pps 11.252MiB / 94.389Mb 0.370M pps 11.289MiB / 94.696Mb 0.365M pps 11.152MiB / 93.552Mb 0.360M pps 10.971MiB / 92.033Mb\n Now, the kernel scheduler keeps the processes on the defined CPUs. This improves processor cache locality and makes the numbers more consistent, just what we wanted.\n   While 370k pps is not bad for a naive program, it&#39;s still quite far from the goal of 1Mpps. To receive more, first we must send more packets. How about sending independently from two threads:\n sender$ taskset -c 1,2 ./udpsender \\ 192.168.254.1:4321 192.168.254.1:4321receiver$ taskset -c 1 ./udpreceiver1 0.0.0.0:4321 0.349M pps 10.651MiB / 89.343Mb 0.354M pps 10.815MiB / 90.724Mb 0.354M pps 10.806MiB / 90.646Mb 0.354M pps 10.811MiB / 90.690Mb\n The numbers on the receiving side didn&#39;t increase.  ethtool -S will reveal where the packets actually went:\n receiver$ watch &#39;sudo ethtool -S eth2 |grep rx&#39; rx_nodesc_drop_cnt: 451.3k/s rx-0.rx_packets: 8.0/s rx-1.rx_packets: 0.0/s rx-2.rx_packets: 0.0/s rx-3.rx_packets: 0.5/s rx-4.rx_packets: 355.2k/s rx-5.rx_packets: 0.0/s rx-6.rx_packets: 0.0/s rx-7.rx_packets: 0.5/s rx-8.rx_packets: 0.0/s rx-9.rx_packets: 0.0/s rx-10.rx_packets: 0.0/s\n Through these stats, the NIC reports that it had successfully delivered around 350kpps to RX queue number #4. The  rx_nodesc_drop_cnt is a Solarflare specific counter saying the NIC failed to deliver 450kpps to the kernel.\n Sometimes it&#39;s not obvious why the packets weren&#39;t delivered. In our case though, it&#39;s very clear: the RX queue #4 delivers packets to CPU #4. And CPU #4 can&#39;t do any more work - it&#39;s totally busy just reading the 350kpps. Here&#39;s how that looks in  htop:\n   Historically, network cards had a single RX queue that was used to pass packets between hardware and kernel. This design had an obvious limitation - it was impossible to deliver more packets than a single CPU could handle.\n To utilize multicore systems, NICs began to support multiple RX queues. The design is simple: each RX queue is pinned to a separate CPU, therefore, by delivering packets to all the RX queues a NIC can utilize all CPUs. But it raises a question: given a packet, how does the NIC decide to which RX queue to push it?\n  Round-robin balancing is not acceptable, as it might introduce reordering of packets within a single connection. An alternative is to use a hash from packet to decide the RX queue number. The hash is usually counted from a tuple (src IP, dst IP, src port, dst port). This guarantees that packets for a single flow will always end up on exactly the same RX queue, and reordering of packets within a single flow can&#39;t happen.\n     receiver$ ethtool -n eth2 rx-flow-hash udp4UDP over IPV4 flows use these fields for computing Hash flow key:IP SAIP DA\n This reads as: for IPv4 UDP packets, the NIC will hash (src IP, dst IP) addresses. i.e.:\n  This is pretty limited, as it ignores the port numbers. Many NICs allow customization of the hash. Again, using  ethtool we can select the tuple (src IP, dst IP, src port, dst port) for hashing:\n receiver$ ethtool -N eth2 rx-flow-hash udp4 sdfnCannot change RX network flow hashing options: Operation not supported\n Unfortunately our NIC doesn&#39;t support it - we are constrained to (src IP, dst IP) hashing.\n  So far all our packets flow to only one RX queue and hit only one CPU. Let&#39;s use this as an opportunity to benchmark the performance of different CPUs. In our setup the receiver host has two separate processor banks, each is a different  NUMA node.\n We can pin the single-threaded receiver to one of four interesting CPUs in our setup. The four options are:\n Run receiver on another CPU, but on the same NUMA node as the RX queue. The performance as we saw above is around 360kpps.\n With receiver on exactly same CPU as the RX queue we can get up to ~430kpps. But it creates high variability. The performance drops down to zero if the NIC is overwhelmed with packets.\n When the receiver runs on the HT counterpart of the CPU handling RX queue, the performance is half the usual number at around 200kpps.\n With receiver on a CPU on a different NUMA node than the RX queue we get ~330k pps. The numbers aren&#39;t too consistent though.\n While a 10% penalty for running on a different NUMA node may not sound too bad, the problem only gets worse with scale. On some tests I was able to squeeze out only 250kpps per core. On all the cross-NUMA tests the variability was bad. The performance penalty across NUMA nodes is even more visible at higher throughput. In one of the tests I got a 4x penalty when running the receiver on a bad NUMA node.\n   Since the hashing algorithm on our NIC is pretty limited, the only way to distribute the packets across RX queues is to use many IP addresses. Here&#39;s how to send packets to different destination IPs:\n   receiver$ watch &#39;sudo ethtool -S eth2 |grep rx&#39; rx-0.rx_packets: 8.0/s rx-1.rx_packets: 0.0/s rx-2.rx_packets: 0.0/s rx-3.rx_packets: 355.2k/s rx-4.rx_packets: 0.5/s rx-5.rx_packets: 297.0k/s rx-6.rx_packets: 0.0/s rx-7.rx_packets: 0.5/s rx-8.rx_packets: 0.0/s rx-9.rx_packets: 0.0/s rx-10.rx_packets: 0.0/s\n  receiver$ taskset -c 1 ./udpreceiver1 0.0.0.0:4321 0.609M pps 18.599MiB / 156.019Mb 0.657M pps 20.039MiB / 168.102Mb 0.649M pps 19.803MiB / 166.120Mb\n Hurray! With two cores busy with handling RX queues, and third running the application, it&#39;s possible to get ~650k pps!\n We can increase this number further by sending traffic to three or four RX queues, but soon the application will hit another limit. This time the  rx_nodesc_drop_cnt is not growing, but the  netstat &#34;receiver errors&#34; are:\n receiver$ watch &#39;netstat -s --udp&#39;Udp: 437.0k/s packets received 0.0/s packets to unknown port received. 386.9k/s packet receive errors 0.0/s packets sent RcvbufErrors: 123.8k/s SndbufErrors: 0 InCsumErrors: 0\n This means that while the NIC is able to deliver the packets to the kernel, the kernel is not able to deliver the packets to the application. In our case it is able to deliver only 440kpps, the remaining 390kpps + 123kpps are dropped due to the application not receiving them fast enough.\n   We need to scale out the receiver application. The naive approach, to receive from many threads, won&#39;t work well:\n sender$ taskset -c 1,2 ./udpsender 192.168.254.1:4321 192.168.254.2:4321receiver$ taskset -c 1,2 ./udpreceiver1 0.0.0.0:4321 2 0.495M pps 15.108MiB / 126.733Mb 0.480M pps 14.636MiB / 122.775Mb 0.461M pps 14.071MiB / 118.038Mb 0.486M pps 14.820MiB / 124.322Mb\n The receiving performance is down compared to a single threaded program. That&#39;s caused by a lock contention on the UDP receive buffer side. Since both threads are using the same socket descriptor, they spend a disproportionate amount of time fighting for a lock around the UDP receive buffer.  This paper describes the problem in more detail.\n    Fortunately, there is a workaround recently added to Linux:  the SO_REUSEPORT flag. When this flag is set on a socket descriptor, Linux will allow many processes to bind to the same port. In fact, any number of processes will be allowed to bind and the load will be spread across them.\n With  SO_REUSEPORT each of the processes will have a separate socket descriptor. Therefore each will own a dedicated UDP receive buffer. This avoids the contention issues previously encountered:\n receiver$ taskset -c 1,2,3,4 ./udpreceiver1 0.0.0.0:4321 4 1 1.114M pps 34.007MiB / 285.271Mb 1.147M pps 34.990MiB / 293.518Mb 1.126M pps 34.374MiB / 288.354Mb\n  More investigation will reveal further room for improvement. Even though we started four receiving threads, the load is not being spread evenly across them:\n  Two threads received all the work and the other two got no packets at all. This is caused by a hashing collision, but this time it is at the  SO_REUSEPORT layer.\n  I&#39;ve done some further tests, and with perfectly aligned RX queues and receiver threads on a single NUMA node it was possible to get 1.4Mpps. Running receiver on a different NUMA node caused the numbers to drop achieving at best 1Mpps.\n  Ensure traffic is distributed evenly across many RX queues and  SO_REUSEPORT processes. In practice, the load usually is well distributed as long as there are a large number of connections (or flows).\n You need to have enough spare CPU capacity to actually pick up the packets from the kernel.\n To make the things harder, both RX queues and receiver processes should be on a single NUMA node.\n While we had shown that it is technically possible to receive 1Mpps on a Linux machine, the application was not doing any actual processing of received packets - it didn&#39;t even look at the content of the traffic. Don&#39;t expect performance like that for any practical application without a lot more work.\n Interested in this sort of low-level, high-performance packet wrangling? CloudFlare is  hiring in London, San Francisco and Singapore.\n  Linux  Tech Talks  Deep Dive", "posttime": "2020-06-06 10:34:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a5\u6536,million,\u6570\u636e\u5305", "title": "\u5982\u4f55\u6bcf\u79d2\u63a5\u6536\u4e00\u767e\u4e07\u4e2a\u6570\u636e\u5305(2015)", "title_en": "How to receive a million packets per second (2015)", "transed": 1, "url": "https://blog.cloudflare.com/how-to-receive-a-million-packets/", "via": "", "real_tags": ["\u63a5\u6536", "million", "\u6570\u636e\u5305"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u7ef4\u62a4\u505c\u673a\u6216\u5bb9\u91cf\u95ee\u9898\uff0c\u670d\u52a1\u5668\u6682\u65f6\u65e0\u6cd5\u4e3a\u60a8\u7684\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\u3002\u8bf7\u7a0d\u540e\u518d\u8bd5\u3002\n\u6b64\u5916\uff0c\u5c1d\u8bd5\u4f7f\u7528ErrorDocument\u5904\u7406\u8bf7\u6c42\u65f6\u9047\u5230503\u670d\u52a1\u4e0d\u53ef\u7528\u9519\u8bef\u3002\napache/2.4.39(Unix)mod_hive/6.27 openssl/1.0.1e-fips mod_fast cgi/2.4.6\u670d\u52a1\u5668\uff0c\u4f4d\u4e8emathsgee.com\u7aef\u53e3443", "note_en": "The server is temporarily unable to service yourrequest due to maintenance downtime or capacityproblems. Please try again later.\n Additionally, a 503 Service Unavailableerror was encountered while trying to use an ErrorDocument to handle the request.\n  Apache/2.4.39 (Unix) mod_hive/6.27 OpenSSL/1.0.1e-fips mod_fastcgi/2.4.6 Server at mathsgee.com Port 443", "posttime": "2020-06-06 10:34:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u533f\u540d,anonymous,mod", "title": "\u6570\u5b66\u533f\u540d\u652f\u6301\u5c0f\u7ec4", "title_en": "Mathematics Anonymous Support Group", "transed": 1, "url": "https://mathsgee.com/courses/the-mathematical-genius-in-you/", "via": "", "real_tags": ["\u533f\u540d", "anonymous", "mod"]}, {"category": "", "categoryclass": "", "imagename": "1a18d55660c94c68dea1b96352215856.jpeg", "infoid": 1005390, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": ".bigTop__review{\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b}.bigTop__VideoPlayerBox{\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b}.bigTop__VideoPlayerBox--\u88ab\u52a8{\u5bbd\u5ea6\uff1a100%\uff1b\u9ad8\u5ea6\uff1a100%\uff1b\u9876\u90e8\uff1a0\uff1b\u5de6\u4fa7\uff1a0\uff1b\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b/*z\u7d22\u5f15\uff1a-1\uff1b*/}.bigTop__VideoPlayerBox--\u56de\u9000{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1bz\u7d22\u5f15\uff1a0\uff1b}.bigTop__VideoPlayerBox--\u3002\u4e0d\u900f\u660e\u5ea6\uff1a1\uff1bz-index\uff1a1\uff1b}.bigTop__VideoPlayer{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1b\u586b\u5145-\u5e95\u90e8\uff1a56.25%\uff1b}.bigTop__codeholder{\u663e\u793a\uff1a\u65e0\uff1b}.bigTop__\u5e7b\u706f\u7247\u663e\u793a{\u5149\u6807\uff1a\u6307\u9488\uff1b\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u5e95\u90e8\uff1a0\uff1b\u53f3\u4fa7\uff1a0\uff1b\u80cc\u666f\u8272\uff1a#FFF\uff1b\u586b\u5145\uff1a10px\uff1b\u5bbd\u5ea6\uff1a300px\uff1b}.bigTop__button{\u8fb9\u6846\u5bbd\u5ea6\uff1a2px\uff1b\u8fb9\u6846\u6837\u5f0f\uff1a\u5b9e\u5fc3\uff1bfont\u3002\u6587\u672c\u8f6c\u6362\uff1a\u5927\u5199\uff1b\u5b57\u4f53\u5927\u5c0f\uff1a12px\uff1b\u5b57\u6bcd\u95f4\u8ddd\uff1a1px\uff1b\u5149\u6807\uff1a\u6307\u9488\uff1b\u9875\u8fb9\u8ddd\uff1a0\uff1b\u586b\u5145\uff1a6px 15px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b\u8fc7\u6e21\uff1a\u989c\u8272300ms\uff0c\u80cc\u666f\u989c\u8272300ms\uff1b}.bigTop_button--\u5d4c\u5165{\u80cc\u666f\uff1a\u900f\u660e\uff1b\u989c\u8272\uff1a#FFF\uff1b\u8fb9\u8ddd\uff1a30px\u81ea\u52a820px\uff1b\u6700\u5c0f\u5bbd\u5ea6\uff1a175px\uff1b\u8fb9\u6846\u989c\u8272\uff1a#FFF\uff1b}.bigTop_button--\u5d4c\u5165\uff1aho.\u3002\u8fb9\u6846\u989c\u8272\uff1a#333\uff1b\u80cc\u666f\u989c\u8272\uff1a#fff\uff1b}.bigTop__button--\u9ed1\u8272\uff1a\u60ac\u505c{color\uff1a#fff\uff1bback-color\uff1a#333\uff1b}.bigTop__Button--\u5185\u8054{\u7a7a\u8fb9\u8ddd\uff1a15px 0\uff1b}.bigTop__Atmotional{\u586b\u5145\uff1a0\uff1b\u8fb9\u8ddd\uff1a0\uff1b\u80cc\u666f\u5927\u5c0f\uff1a1px 1px\uff1b\u80cc\u666f\u4f4d\u7f6e\uff1a-1px-1px\uff1b}.bigTop__atomalic\uff1a\u7a7a{paddingBottom\uff1a0\uff1b\u80cc\u666f\u5927\u5c0f\uff1a1px 1px\uff1b\u80cc\u666f\u4f4d\u7f6e\uff1a-1px-1px\uff1b}.bigTop__atumular\uff1a\u7a7a{paddingBottom\uff1a}.bigTop__\u5927\u6c14\u89c6\u9891\uff0c.bigTop__\u5927\u6c14img{\u5bbd\u5ea6\uff1a100%\uff1b\u663e\u793a\uff1a\u5757\uff1b\u586b\u5145\uff1a0\uff1b\u9875\u8fb9\u8ddd\uff1a0\uff1b}/*\u7ec8\u7aef\u5a92\u4f53css*//*caption/credit*/.bigTop__captioncredit{\u663e\u793a\uff1a\u5757\uff1b\u5b57\u4f53\u7cfb\u5217\uff1a&#34\uff1b\u89c6\u7f51\u819c&#34\uff1b\uff0cHelvetica\uff0c\u5b8b\u4f53\uff0c\u65e0\u886c\u7ebf\uff1b\u989c\u8272\uff1a#666\uff1b\u8fb9\u8ddd\uff1a5px auto 0\uff1b\u586b\u5145\uff1a0 10px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b}.bigTop__Caption{font-size\uff1a14px\uff1bline-high\uff1a20px\uff1bfont-weight\uff1a300\uff1bdisplay\uff1ainline\uff1b}.bigTop_Credit{font-size\uff1a14px\uff1bline-high\uff1a20px\uff1bfont-weight\uff1a300\uff1btext-change\uff1auppercase\uff1bdisplay\uff1ainline\uff1b}/*\u7ed3\u675f\u5b57\u5e55/\u4fe1\u7528*//*\u89c6\u9891\u64ad\u653e\u6309\u94ae*/.bigTop__play{\u5bbd\u5ea6\uff1a50px\uff1b\u9ad8\u5ea6\uff1a50px\uff1b\u5149\u6807\uff1a\u6307\u9488\uff1b\u8fb9\u6846\uff1a1px#999\u5b9e\u5fc3\uff1b\u80cc\u666f\u989c\u8272\uff1aRGBA(0\uff0c0\uff0c0\uff0c0.7)\uff1b\u8fb9\u6846\u534a\u5f84\uff1a50%\uff1b\u6587\u672c\u7f29\u8fdb\uff1a-9999px\uff1b\u663e\u793a\uff1a\u5757\uff1b\u6846\u5927\u5c0f\u8c03\u6574\u3002.bigTop__play\uff0c.bigTop__VideoPlayerBox\uff1aHOVER+.bigTop__PLAY--\u72ec\u7acb\uff0c.bigTop__PLAY--HOVER{\u80cc\u666f\u989c\u8272\uff1a#0080c3\uff1b\u8fb9\u6846\u989c\u8272\uff1a#0080c3\uff1b}.bigTop__PLAY\uff1a\u4e4b\u524d{\u5bbd\u5ea6\uff1a0\uff1b\u9ad8\u5ea6\uff1a0\uff1b\u8fb9\u6846-\u9876\u90e8\uff1a11px\u7eaf\u8272\u900f\u660e\uff1b\u8fb9\u6846-\u5e95\u90e8\uff1a12px\u7eaf\u8272\u900f\u660e\uff1b\u8fb9\u6846-\u5de6\u8fb9\uff1a18px\u5b9e\u4f53#fff\uff1b\u5185\u5bb9\uff1a&#34\uff1b}.bigTop__VideoTrigger{\u5149\u6807\uff1a\u6307\u9488\uff1b\u5bbd\u5ea6\uff1a100%\uff1b\u9ad8\u5ea6\uff1a100%\uff1b\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u9876\u90e8\uff1a0\uff1b\u5de6\u4fa7\uff1a0\uff1b}.bigTop__play--\u72ec\u7acb{\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u9876\u90e8\uff1a50%\uff1b\u5de6\u4fa7\uff1a50%\uff1bTransform\uff1aTranslateY(-50%)TranslateX(-50%)\uff1b-webkit-Transform\uff1aTranslateY(-50%)TranslateX(-50%)\uff1bPointer-Events\uff1aNone\uff1b}/*\u89c6\u9891\u6309\u94ae*//*/.bigTopPage_Grid{padding\uff1a0 10px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b\u5de6\u9875\u8fb9\u8ddd\uff1a\u81ea\u52a8\uff1b\u53f3\u9875\u8fb9\u8ddd\uff1a\u81ea\u52a8\uff1b}/*\u7ed3\u675f\u9875\u9762\u7f51\u683c**/*/.plitTop.bigTop__rel{\u80cc\u666f\u989c\u8272\uff1a#222\uff1b}.plitTop.bigTop__text\uff0c.plitTop.bigTop__flash\uff0c.plitTop.bigTop__flash\uff1alink\uff0c.plitTop.\u3002}.plitTop.bigTop--lightTheme.bigTop__rel{Background-color\uff1a#fff\uff1b}.plitTop.bigTop--lightTheme.bigTop__text\uff0c.plitTop.bigTop--lightTheme.bigTop_flash\uff0c.plitTop.bigTop--lightTheme.bigTop__flash\uff1alink\uff0c.plitTop.bigTop--lightTheme.bigTop_hed\uff0c.plitTop.bigTop\u3002}.\u62c6\u5206\u9876\u90e8.bigTop__overlay--Bottom\uff0c.plitTop.bigTop__overlay--\u9876\u90e8{\u80cc\u666f\uff1a\u521d\u59cb\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__media{\u6d6e\u52a8\uff1a\u53f3\uff1b\u5bbd\u5ea6\uff1a50%\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__captionCredit{\u6587\u672c\u5bf9\u9f50\uff1a\u53f3\uff1b\u989c\u8272\uff1a#666\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__text.bigTop__text--\u5e95\u90e8\uff0c.plitTop.bigTop__text.bigTop_text--\u53d8\u6362\uff1a\u5e73\u79fb(-50%\uff0c-50%)\uff1b-webkit-Transform\uff1a\u7ffb\u8bd1(-50%\uff0c-50%)\uff1b\u5bbd\u5ea6\uff1a50%\uff1b\u6700\u5c0f\u9ad8\u5ea6\uff1a\u521d\u59cb\uff1b\u586b\u5145\uff1a0 30px\uff1b}.edit-Japan.plitTop.bigTop__hed\uff0c.edit-Japan.plitTop.bigTop__dek{text-align\uff1aLeft\uff1b}/*\u4ec5\u96504\u4e2a\u5355\u5143*/@\u5a92\u4f53(\u6700\u5927\u5bbd\u5ea6\uff1a639px){.plitTop.bigTop__rel{paddingTop\uff1a15px\uff1b}.plititOnly(\u6700\u5927\u5bbd\u5ea6\uff1a639px){.plitTop.bigTop__rel{padd-Bottom\uff1a15px\uff1b}.plititOnly\u3002}.plitTop.bigTop__captionCredit{text-align\uff1aLeft\uff1bcolor\uff1a#f4f4f4\uff1b}.plitTop.bigTop--lightTheme.bigTop__captionCredit{color\uff1a#666\uff1b}.plitTop.bigTop__text.bigTop__text--Bottom\uff0c.plitTop.bigTop__text.bigTop__text--Bottom{positi", "note_en": ".bigTop__preview { opacity: 0;}.bigTop__videoPlayerBox { position: absolute;}.bigTop__videoPlayerBox--passive { width: 100%; height: 100%; top: 0; left: 0; opacity: 0; /*z-index: -1;*/}.bigTop__videoPlayerBox--fallback { position: relative; z-index: 0;}.bigTop__videoPlayerBox--fallback .videoHint { display: none !important;}.bigTop__videoPlayerBox--active { width: 100%; height: 100%; top: 0; left: 0; opacity: 1; z-index: 1;}.bigTop__videoPlayer { position: relative; padding-bottom: 56.25%;}.bigTop__codeholder { display: none;}.bigTop__slideshow { cursor: pointer; position: absolute; bottom: 0; right: 0; background-color: #fff; padding: 10px; width: 300px;}.bigTop__button { border-width: 2px; border-style: solid; font-family: &#39;Retina&#39;, Helvetica, Arial, sans-serif; font-weight: 600; text-transform: uppercase; font-size: 12px; letter-spacing: 1px; cursor: pointer; margin: 0; padding: 6px 15px; box-sizing: border-box; transition: color 300ms, background-color 300ms;}.bigTop_button--embedded { background: transparent; color: #fff; margin: 30px auto 20px; min-width: 175px; border-color: #fff;}.bigTop_button--embedded:hover { color: #333; background-color: #fff;}.bigTop__button--black { color: #333; border-color: #333; background-color: #fff;}.bigTop__button--black:hover { color: #fff; background-color: #333;}.bigTop__button--inline { margin: 15px 0 0;}.bigTop__atmospheric { padding: 0; margin: 0; background-size: 1px 1px; background-position: -1px -1px;}.bigTop__atmospheric:empty { padding-bottom: 56.25%; background-color: #000; background-size: cover; background-repeat: no-repeat;}.bigTop__atmospheric video,.bigTop__atmospheric img { width: 100%; display: block; padding: 0; margin: 0;}/******** end media CSS *******//******************caption/credit********************/.bigTop__captioncredit { display: block; font-family: &#34;Retina&#34;, Helvetica, Arial, sans-serif; color: #666; margin: 5px auto 0; padding: 0 10px; box-sizing: border-box;}.bigTop__caption { font-size: 14px; line-height: 20px; font-weight: 300; display: inline;}.bigTop__credit { font-size: 14px; line-height: 20px; font-weight: 300; text-transform: uppercase; display: inline;}/******** end caption/credit ******//******** Video Play Button *********/.bigTop__play { width: 50px; height: 50px; cursor: pointer; border: 1px #999 solid; background-color: rgba(0, 0, 0, 0.7); border-radius: 50%; text-indent: -9999px; display: block; box-sizing: border-box;}.bigTop__videoPlayerBox:hover + .bigTop__text &gt; .bigTop__play,.bigTop__videoPlayerBox:hover + .bigTop__play--standalone,.bigTop__play--hover { background-color: #0080c3; border-color: #0080c3;}.bigTop__play:before { width: 0; height: 0; border-top: 11px solid transparent; border-bottom: 12px solid transparent; border-left: 18px solid #fff; content: &#34; &#34;; position: absolute; display: block; margin-top: 13px; margin-left: 18px;}.bigTop__videoTrigger { cursor: pointer; width: 100%; height: 100%; position: absolute; top: 0; left: 0;}.bigTop__play--standalone { position: absolute; top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); pointer-events: none;}/***** Video Button *****//********************Make bigTop align to page grid***********************/.bigTopPage__grid { padding: 0 10px; box-sizing: border-box; margin-left: auto; margin-right: auto;}/*** end page grid **//********************splitTop styling***********************/.splitTop .bigTop__rel { background-color: #222;}.splitTop .bigTop__text,.splitTop .bigTop__flash,.splitTop .bigTop__flash:link,.splitTop .bigTop__hed,.splitTop .bigTop__dek { color: #fff;}.splitTop.bigTop--lightTheme .bigTop__rel { background-color: #fff;}.splitTop.bigTop--lightTheme .bigTop__text,.splitTop.bigTop--lightTheme .bigTop__flash,.splitTop.bigTop--lightTheme .bigTop__flash:link,.splitTop.bigTop--lightTheme .bigTop__hed,.splitTop.bigTop--lightTheme .bigTop__dek { color: #000;}.splitTop .bigTop__overlay { background-color: transparent;}.splitTop .bigTop__overlay--bottom,.splitTop .bigTop__overlay--top { background: initial;}.splitTop .bigTop__media { float: right; width: 50%;}.splitTop .bigTop__captioncredit { text-align: right; color: #666;}.splitTop .bigTop__text.bigTop__text--bottom,.splitTop .bigTop__text.bigTop__text--top { position: absolute; top: 50%; bottom: auto; left: 25%; transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%); width: 50%; min-height: initial; padding: 0 30px;}.edition-japan .splitTop .bigTop__hed,.edition-japan .splitTop .bigTop__dek { text-align: left;}/* 4 unit only */@media (max-width: 639px) { .splitTop .bigTop__rel { padding-bottom: 15px; } .splitTop .bigTop__media { float: none; width: 100%; } .splitTop .bigTop__captioncredit { text-align: left; color: #f4f4f4; } .splitTop.bigTop--lightTheme .bigTop__captioncredit { color: #666; } .splitTop .bigTop__text.bigTop__text--bottom, .splitTop .bigTop__text.bigTop__text--bottom { position: relative; width: auto; top: auto; left: auto; margin: 40px 20px; padding: 0; transform: none; -webkit-transform: none; } .bigTop__flash.flashlineSVG { margin-left: 0; }}/* 4, 8 unit splitTop font styling */@media (max-width: 979px) { .splitTop .bigTop__text .bigTop__hed { font-size: 32px; line-height: 1.12; } .wsj-modern span.bigTop__flash.flashlineSVG { text-indent: 215px; } .splitTop .bigTop__text .bigTop__dek { font-size: 16px; line-height: 1.38; }}/* 12, 16 unit splitTop font styling */@media (min-width: 980px) { .splitTop .bigTop__text .bigTop__hed { font-size: 52px; line-height: 1; } .splitTop .bigTop__text .bigTop__dek { font-size: 20px; line-height: 1.3; }}/*** end splitTop styling **//*****SECTION SPECIFIC STYLING***/.magazine .bigTop__flash,.magazine .bigTop__flash:link,.magazine .bigTop__flash:visited,.magazine .bigTop__flash:active { font-family: &#39;Retina Wide&#39;, &#39;Retina Narrow&#39;, &#39;Retina&#39;, &#39;Arial&#39;, sans-serif;}.magazine .bigTop__hed { font-weight: 400;}.magazine .bigTop__dek { font-family: &#39;Exchange&#39;, &#39;Chronicle SSm&#39;, Georgia, serif;}/***************Set via media query and not via classesto prevent page jump/rerenderPreviously set via CSS classes, e.g. bigTop__text--static, bigTop__hed-s,but it took too long for the page to &#34;settle&#34;**//* 4 unit only */@media (max-width: 639px) { .bigTopHide--4, .bigTop__flash.bigTopHide--4 { display: none; } .bigTop { margin: 0 0 20px; } .bigTop__overlay { display: none; } .bigTop__media--image { padding-bottom: 66.77%; } .bigTop__text { position: static; margin-top: 15px; text-align: left; margin-left: 10px; margin-right: 10px; width: auto; } .bigTop__overlay { display: none; } .bigTop__flash, .bigTop__flash:link, .bigTop__flash:active, .bigTop__flash:visited { color: #0080c3; text-align: left; } .bigTop__hed { font-size: 32px; line-height: 1.125; color: #000; text-align: left; } .bigTop__dek { font-size: 17px; line-height: 24px; color: #666; text-align: left; } .bigTop__flash + .bigTop__hed { margin-top: 4px; } .bigTop__hed + .bigTop__dek { margin-top: 1px; } .bigTop__dek:last-child { margin-bottom: 15px; } .bigTop__hed:last-child { margin-bottom: 14px; } .bigTop_button--embedded { margin: 15px 0 10px; color: #000; border-color: #000; min-width: 150px; } .bigTop_button--embedded:hover { background-color: #000; color: #fff; } .bigTop__text--flex &gt; .bigTop__play, .bigTop__play--standalone { position: absolute; top: 28vw; /* half of bottom padding of video elem */ left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); pointer-events: none; } .bigTop__videoTrigger { height: 0; padding-bottom: 56.25%; } .bigTop__flash.flashlineSVG { background-size: contain; } .wsj-modern .bigTop__text span:before { margin-left: 10px; }}/* 8 unit */@media (min-width: 640px) and (max-width: 979px) { .bigTop__captioncredit, .bigTop__text { max-width: 640px; } .wsj-modern .splitTop span.bigTop .bigTop__flash.flashlineSVG { min-width: 282px; } .bigTop__text.bigTop__text--bottom { box-sizing: border-box; min-height: 40%; top: auto; bottom: 0; padding-bottom: 10px; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); box-sizing: border-box; } .wsj-modern .bigTop span.bigTop__flash.flashlineSVG { max-width: 239px; min-height: 15px; max-height: 15px; min-width: 350px; } .wsj-modern .splitTop.bigTop span.bigTop__flash.flashlineSVG { min-width: 279px; } .bigTop__text.bigTop__text--top { top: auto; bottom:60%; max-height: 40%; padding-top: 10px; box-sizing: border-box; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__hed { font-size: 42px; line-height: 1.095; } .bigTop__hed + .bigTop__dek { margin-top: 9px; } .bigTop__flash + .bigTop__hed { margin-top: 5px; } .bigTop_button--embedded { margin: 20px auto; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { position: static; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { margin-top: 15px; } .bigTop__text--flex &gt; .bigTop__play + .bigTop__flash { margin-top: 15px; } .wsj-modern .splitTop .bigTop__text span:before { margin-left: 10px; }}/* 8, 12, 16 unit */@media (min-width: 640px) { .bigTopHide--8, .bigTopHide--12, .bigTopHide--16, .bigTop__flash.bigTopHide--8, .bigTop__flash.bigTopHide--12, .bigTop__flash.bigTopHide--16 { display: none; } .bigTop__rel { overflow: hidden; /* fix horizontal scroll in IE11 */ } .bigTop__media--image { padding-bottom: 51.3%; } .bigTop__media--image &gt; .bigTop__preview--forceblur { --webkit-filter: blur(20px); filter: blur(20px); } .bigTop__text { position: absolute; top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); } .bigTop__dek { font-size: 20px; line-height: 28px; } .bigTop__text--static.bigTop__text { color: #000; position: static; transform: none; margin-left: auto; margin-right: auto; } .bigTop__text--inactive.bigTop__text--bottom, .bigTop__text--inactive.bigTop__text--center { opacity: 0; } .bigTop__text.bigTop__text--flex { flex-direction: column; display: flex; justify-content: flex-end; align-items: center; height: 100%; } .bigTop__text--clickthrough { pointer-events: none; } .bigTop__text--clickthrough &gt; .bigTop__flash, .bigTop__text--clickthrough &gt; .bigTop__hed, .bigTop__text--clickthrough &gt; .bigTop__dek { pointer-events: auto; } .bigTop__text.bigTop__text--flex.bigTop__text--center { justify-content: center; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { order: 2; }}/* 12 unit */@media (min-width: 980px) and (max-width: 1299px) { .bigTop__captioncredit { max-width: 960px; } .splitTop .bigTop__captioncredit { max-width: none; } .bigTop__play { width: 70px; height: 70px; } .bigTop__play:before { border-top-width: 16px; border-bottom-width: 17px; border-left-width: 26px; margin-top: 18px; margin-left: 25px; }}/* 12, 16 unit */@media (min-width: 980px) { .splitTop .bigTop__captioncredit { margin: 0; padding: 5px 5px 0 0; width: 50%; float: right; } .bigTop__hed { font-size: 52px; line-height: 1.077; } .edition-japan .bigTop__hed { font-size: 45px; } .bigTop__text { max-width: 960px; } .bigTop__text.bigTop__text--bottom { box-sizing: border-box; min-height: 30%; top: auto; bottom: 0; box-sizing: border-box; padding-bottom: 30px; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__text.bigTop__text--top { top: auto; bottom: 70%; max-height: 30%; padding-top: 10px; box-sizing: border-box; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__hed + .bigTop__dek { margin-top: 8px; } .bigTop__flash + .bigTop__hed { margin-top: 5px; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { /* need to do this because of IE11 */ position: absolute; top: 50%; left: 50%; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play + .bigTop__flash, .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play + .bigTop__hed { margin-top: 50px; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { margin-top: -45px; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { margin-top: 20px; } .bigTop__text--flex &gt; .bigTop__play + .bigTop__flash { margin-top: 15px; }}/* 16 unit */@media (min-width: 1300px) { .bigTop__captioncredit { max-width: 1280px; } .splitTop .bigTop__captioncredit { max-width: none; } .bigTop__play { width: 90px; height: 90px; } .bigTop__play:before { border-top-width: 20px; border-bottom-width: 22px; border-left-width: 33px; margin-top: 24px; margin-left: 33px; }}", "posttime": "2020-06-06 10:33:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,remote,bigtop", "title": "\u8fdc\u7a0b\u5b66\u4e60\u7684\u7ed3\u679c\u662f\uff1a\u5b83\u4e0d\u8d77\u4f5c\u7528", "title_en": "The Results Are in for Remote Learning: It Didn\u2019t Work", "transed": 1, "url": "https://www.wsj.com/articles/schools-coronavirus-remote-learning-lockdown-tech-11591375078", "via": "", "real_tags": ["\u5b66\u4e60", "remote", "bigtop"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f7b\u89e6\u5e76\u6309\u4f4f\u5c4f\u5e55\u5e95\u90e8\u7684\u6355\u83b7\u6309\u94ae\u3002\u677e\u5f00\u4ee5\u5c06\u5176\u7c98\u8d34\u5230Web\u6d4f\u89c8\u5668\u6216\u63d2\u4ef6\u3002\n\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528Socket\u5c06\u624b\u673a\u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002\u5b83\u4f1a\u5728\u663e\u793a\u4e8c\u7ef4\u7801\u65f6\u751f\u6210\u552f\u4e00\u7684ID\u3002\n\u76ee\u524d\u8fd8\u6ca1\u6709\uff0c\u4f46\u60a8\u53ef\u4ee5\u5355\u51fb\u989c\u8272\u66f4\u6539\u5bf9\u8c61\u7684\u989c\u8272\u5e76\u590d\u5236\u5341\u516d\u8fdb\u5236\u4ee3\u7801\u3002\n\u55ef\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u6240\u8bc4\u8bba\u8fc7\u7684\u6700\u9177\u7684\u63d2\u4ef6\u4e86\u3002\uff1a)\u5728\u8fd9\u4ef6\u4e8b\u4e0a\u505a\u5f97\u5f88\u597d\u3002\n\u662f\u554a\uff0c\u4e0d\uff01\u8fd9\u662f\u4e00\u4e9b\u75af\u72c2\u7684\u4e8b\u60c5@sonnylazuardi\u66f4\u591a\u7406\u7531\u8bf4\u660e\u6211\u4eec\u4e3a\u4ec0\u4e48\u559c\u6b22@FigmaDesign\u793e\u533a\ud83e\udd42\u3002\n\u5982\u6b64\u9177\uff0c\u5c063D\u73b0\u5b9e\u4e16\u754c\u5143\u7d20\u79fb\u52a8\u52302D\u754c\u9762\u6216\u6570\u5b57\u4e16\u754c\uff0c\u8fb9\u754c\u53d8\u5f97\u6a21\u7cca\u3002", "note_en": "Tap and hold the capture button located in the bottom of your screen. Release to paste it to web browser or plugin.\n  The app uses socket to connect phone to your computer. It will generate unique id when showing QR Code.\n Currently not yet, but you can click on the color to change the object&#39;s color and copy the hex code\n  Well this just might be the coolest plugin I&#39;ve ever reviewed. :) Great job on this.\n  Yeah nooo! This is some crazy stuff right here @sonnylazuardi More reasons why we love the @figmadesign community \ud83e\udd42\n So cool, moving 3D real world elements into 2D interface or digital world, the boundary is becoming blur.", "posttime": "2020-06-06 10:00:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u5f00\u6e90,\u5f69\u8272,figma,\u4e16\u754c", "title": "\u5f00\u6e90\u5f69\u8272\u590d\u5236\u7c98\u8d34\uff0c\u4ece\u60a8\u7684\u624b\u673a\u6444\u50cf\u5934\u7c98\u8d34\u5230Web\u3001\u8349\u56fe\u3001\u56fe\u5f62\u63d2\u4ef6", "title_en": "Open source color copy paste from your phone camera to web, sketch, figma plugin", "transed": 1, "url": "https://colorcopypaste.app/", "via": "", "real_tags": ["\u624b\u673a", "\u5f00\u6e90", "\u5f69\u8272", "figma", "\u4e16\u754c"]}, {"category": "", "categoryclass": "", "imagename": "db152e5a2613afe9bd4062b72430926f.jpeg", "infoid": 1005388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6211\u57282017\u5e74\u5de6\u53f3\u505a\u7684\u4e00\u4e2a\u73a9\u5177\u9879\u76ee\uff0c\u76ee\u7684\u662f\u6a21\u4eff\u7ed9\u5b9a\u76ee\u6807\u56fe\u50cf\u7684\u7ed8\u56fe\u8fc7\u7a0b(\u7075\u611f\u6765\u81ea\u4e92\u8054\u7f51\u4e0a\u8bb8\u591a\u57fa\u56e0\u7ed8\u56fe\u7684\u4f8b\u5b50\uff0c\u8fd9\u662f\u6211\u5bf9\u5b83\u7684\u770b\u6cd5\uff0c\u4e3b\u8981\u662f\u4f5c\u4e3a\u4e00\u79cd\u7ec3\u4e60)\u3002\n\u5b83\u8fd8\u652f\u6301\u7528\u6237\u521b\u5efa\u7684\u91c7\u6837\u8499\u7248\uff0c\u4ee5\u9632\u60a8\u60f3\u8981\u6307\u5b9a\u9700\u8981\u66f4\u591a\u7b14\u5212\u7684\u533a\u57df(\u4f8b\u5982\uff0c\u5206\u914d\u66f4\u591a\u7ec6\u8282)", "note_en": "This is a toy project I did around 2017 for imitating a drawing process given a target image (inspired by many examples of genetic drawing on the internet, and this was my take on it, mostly as an exercise).\n    It also supports user-created sampling masks, in case you&#39;d like to specify regions where more brushstrokes are needed (for ex, to allocate more finer details)", "posttime": "2020-06-06 09:43:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9057\u4f20,genetic,\u7ed8\u56fe", "title": "\u9057\u4f20\u7ed8\u56fe", "title_en": "Genetic Drawing", "transed": 1, "url": "https://github.com/anopara/genetic-drawing", "via": "", "real_tags": ["\u9057\u4f20", "genetic", "\u7ed8\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "be2f3e6d7a800823fb0a687a75822154.png", "infoid": 1005386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "WebRTC API\u7684\u8bbe\u8ba1\u521d\u8877\u662f\u5141\u8bb8JavaScript\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u5305\u542b\u97f3\u9891\u548c\u89c6\u9891\u6d41\u7684\u5b9e\u65f6\u8fde\u63a5\uff0c\u4ee5\u53ca\u4efb\u610f\u6570\u636e\u7684\u6570\u636e\u901a\u9053\u3002\u521b\u5efa\u8fd9\u4e9b\u8fde\u63a5\u662f\u4e3a\u4e86\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u7528\u6237\u7684\u6d4f\u89c8\u5668\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u652f\u6301WebRTC\u534f\u8bae\u7684\u4e2d\u95f4\u670d\u52a1\u5668\u3002WebRTC\u8fd8\u5229\u7528getUserMedia()\u65b9\u6cd5\u8bbf\u95ee\u9ea6\u514b\u98ce\u548c\u6444\u50cf\u673a\u6570\u636e\u3002\n\u4e00\u7bc7HACKS\u6587\u7ae0(\u8bf7\u53c2\u9605\u6b64\u5904\u7684\u6240\u6709WebRTC HACKS\u6587\u7ae0)\u5bf9RTCPeerConnection\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u8fdb\u884c\u4e86\u9ad8\u7ea7\u63cf\u8ff0\uff1a\n\u5173\u4e8eWebRTC\u57fa\u672c\u529f\u80fd\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6559\u7a0b\u5728HTML5 Rock\u3002\u652f\u6301\u5f00\u53d1\u7684\u57fa\u672c\u6d4b\u8bd5\u9875\u9762\u96c6\u5408\u5728WebRTC-Landing\u3002\n\u5728Mozilla hacks\u535a\u5ba2\u6587\u7ae0Embedded WebRTC\u89c6\u9891\u804a\u5929\u4e2d\uff0c\u5bf9RTCPeerConnection\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u8fdb\u884c\u4e86\u9ad8\u7ea7\u63cf\u8ff0\u3002", "note_en": "The  WebRTC API\u00a0is\u00a0designed to allow JavaScript applications to create real-time connections containing audio and video streams as well as data channels for arbitrary data. These connections are created to directly link two users&#39; browsers, without necessarily requiring any intermediary servers which support\u00a0the WebRTC protocols.\u00a0WebRTC also leverages the   getUserMedia() method to get access to microphone and camera data.\n A high-level description of what happens in an  RTCPeerConnection was shown in an  Hacks article (see all WebRTC Hacks articles  here):\n   A good tutorial on basic features in WebRTC is at  HTML5 Rocks.\u00a0\u00a0 A collection of basic test pages to support development are at  webrtc-landing.\n    A high-level description of what happens in an  RTCPeerConnection was shown in the  Mozilla Hacks blog article  Embedding WebRTC video chat.", "posttime": "2020-06-06 09:42:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "webrtc,communications", "title": "\u4f7f\u7528WebRTC\u7684\u70b9\u5bf9\u70b9\u901a\u4fe1", "title_en": "Peer-to-Peer Communications with WebRTC", "transed": 1, "url": "https://developer.mozilla.org/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC", "via": "", "real_tags": ["webrtc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Netscape\u5728\u5341\u5929\u7684\u65f6\u95f4\u91cc\u521b\u5efa\u4e86\u4e00\u79cd\u7528\u4e8eJava\u7684\u4f19\u4f34\u811a\u672c\u8bed\u8a00\uff0c\u5b83\u6700\u521d\u662f\u4f5c\u4e3a\u4e8b\u5b9e\u4e0a\u7684Web\u6807\u51c6\u53d1\u5e03\u7684\uff0c\u6700\u7ec8\u6210\u4e3a\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u672c\u6587\u8bb2\u8ff0\u4e861995-2015\u5e74\u95f4JavaScript\u8bed\u8a00\u7684\u521b\u5efa\u3001\u8bbe\u8ba1\u3001\u53d1\u5c55\u548c\u6807\u51c6\u5316\u7684\u6545\u4e8b\u3002\u4f46\u8fd9\u4e2a\u6545\u4e8b\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u8bed\u8a00\u7684\u6280\u672f\u7ec6\u8282\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5173\u4e8e\u4eba\u4eec\u548c\u7ec4\u7ec7\u5982\u4f55\u7ade\u4e89\u548c\u5408\u4f5c\u6765\u5851\u9020\u4e3b\u5bfc2020\u5e74\u7f51\u7edc\u7684JavaScript\u8bed\u8a00\u7684\u6545\u4e8b\u3002\n\u8fd9\u662f\u4f5c\u8005\u7684HOPL-4\u9884\u5370\u672c\u3002\u8bb0\u5f55\u7684\u6700\u7ec8\u7248\u672c\u5c06\u53d1\u8868\u57282020\u5e746\u6708\u7684\u7f8e\u56fd\u7f16\u7a0b\u8bed\u8a00\u5b66\u4f1a\u8bba\u6587\u96c6(https://doi.org/10.1145/3386327.)\u4e0a", "note_en": "How a sidekick scripting language for Java, created at Netscape in a ten-day hack, ships first as a de facto Web standard and eventually becomes the world\u2019s most widely used programming language. This paper tells the story of the creation, design, evolution, and standardization of the JavaScript language over the period of 1995\u20132015. But the story is not only about the technical details of the language. It is also the story of how people and organizations competed and collaborated to shape the JavaScript language which dominates the Web of 2020.\n  This is the authors HOPL-4 preprint.The definitive Version of Record to be published in Proceedings of the ACM on Programming Languages, June 2020, https://doi.org/10.1145/3386327.", "posttime": "2020-06-06 09:26:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u8bed\u8a00", "title": "JavaScript\uff1a\u524d20\u5e74", "title_en": "JavaScript: The First 20 Years", "transed": 1, "url": "https://zenodo.org/record/3707008#.XtoRR-TEklQ", "via": "", "real_tags": ["java", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u5e10\u6237", "note_en": "Create\r\t\t\t\t\t\t\t\t\t\t\tAccount", "posttime": "2020-06-06 09:09:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u65b0\u6b3e,electric,\u521b\u5efa", "title": "\u5e03\u6797\u683c\u65b0\u6b3e\u7535\u52a8SUV\u548c\u76ae\u5361\u5c55\u793a\u7535\u52a8\u6c7d\u8f66\u8bbe\u8ba1\u7684\u53ef\u80fd\u6027", "title_en": "Bollinger\u2019s New Electric SUV and Pickup Show What\u2019s Possible with EV Design", "transed": 1, "url": "https://spectrum.ieee.org/energywise/transportation/efficiency/bollingers-new-electric-suv-pickup-ev-design", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u65b0\u6b3e", "electric", "\u521b\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "29e19ca5632230096024d46553376380.jpg", "infoid": 1005383, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8005\u6309\uff1a\u8fd9\u662f2018\u5e74\u548c2019\u5e74\u53d1\u8868\u7684\u4e00\u7bc7\u6587\u7ae0\u7684\u66f4\u65b0\u7248\u3002\nUSB-C\u88ab\u6807\u699c\u4e3a\u6ee1\u8db3\u6211\u4eec\u672a\u6765\u6240\u6709\u7535\u7f06\u9700\u6c42\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5c06\u7535\u6e90\u548c\u6570\u636e\u4f20\u8f93\u4e0e\u663e\u793a\u548c\u97f3\u9891\u8fde\u63a5\u7edf\u4e00\u8d77\u6765\u3002\u5f00\u542f\u4e86\u201c\u4e00\u5200\u5207\u201d\u7684\u7535\u7f06\u65f6\u4ee3\u3002\u5c3d\u7ba1\u73b0\u4ee3\u667a\u80fd\u624b\u673a\u9ed8\u8ba4\u63d0\u4f9bUSB-C\u63a5\u53e3\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8be5\u6807\u51c6\u672a\u80fd\u5151\u73b0\u5176\u65e9\u671f\u7684\u627f\u8bfa\u3002\n\u5373\u4f7f\u662fUSB-C\u6700\u57fa\u672c\u7684\u529f\u80fd-\u4e3a\u8bbe\u5907\u4f9b\u7535-\u4ecd\u7136\u662f\u4e00\u5806\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u76f8\u4e92\u51b2\u7a81\u7684\u4e13\u6709\u6807\u51c6\uff0c\u4ee5\u53ca\u666e\u904d\u7f3a\u4e4f\u6307\u5bfc\u8d2d\u4e70\u51b3\u5b9a\u7684\u6d88\u8d39\u8005\u4fe1\u606f\u3002USB-C\u4e0a\u53ef\u7528\u7684\u6570\u636e\u901f\u5ea6\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u95ee\u9898\u662f\uff0c\u4e0d\u540c\u7684USB-C\u8bbe\u5907\u652f\u6301\u7684\u529f\u80fd\u5e76\u4e0d\u6e05\u695a\uff0c\u4f46USB-C\u6807\u51c6\u7684\u5b9a\u4e49\u539f\u5219\u8ba9\u6d88\u8d39\u8005\u8ba4\u4e3a\u4e00\u5207\u90fd\u5e94\u8be5\u6b63\u5e38\u5de5\u4f5c\u3002\n\u76ee\u524d\u5f62\u5f0f\u7684USB-C\u6807\u51c6\u6709\u4e00\u79cd\u975e\u5e38\u666e\u904d\u7684\u632b\u8d25\u611f\u3002\u5728\u4e0d\u540c\u7684\u5145\u7535\u5668\u4e4b\u95f4\u79fb\u52a8\u624b\u673a\uff0c\u5373\u4f7f\u989d\u5b9a\u7535\u6d41\u548c\u7535\u538b\u76f8\u540c\uff0c\u901a\u5e38\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u76f8\u540c\u7684\u5145\u7535\u901f\u5ea6\u3002\u6b64\u5916\uff0c\u9009\u62e9\u7b2c\u4e09\u65b9USB-C\u7535\u7f06\u6765\u53d6\u4ee3\u901a\u5e38\u592a\u77ed\u7684\u76d2\u88c5\u7535\u7f06\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5931\u53bb\u5feb\u901f\u5145\u7535\u529f\u80fd\u3002\u53ef\u4ee5\u9009\u62e9\u652f\u6301\u9ad8\u901a\u5feb\u901f\u5145\u7535\u6216USB Power Delivery\u7684\u7b2c\u4e09\u65b9USB-C\u7535\u6e90\u9002\u914d\u5668\uff0c\u800c\u4e0d\u662f\u4f17\u591a\u4e13\u6709\u6807\u51c6\u4e2d\u7684\u4e00\u79cd\u3002\n\u6211\u4eec\u8fc7\u53bb\u5bf9\u6b64\u8fdb\u884c\u4e86\u591a\u6b21\u6d4b\u8bd5\uff0c\u53d1\u73b0\u4e09\u661f\u3001\u534e\u4e3a\u3001LG\u3001\u8c37\u6b4c\u548cOnePlus\u7b49\u6d41\u884c\u54c1\u724c\u7684USB-C\u624b\u673a\u4e00\u65e6\u5f00\u59cb\u6df7\u5408\u642d\u914d\u7535\u7f06\u548c\u5145\u7535\u5668\uff0c\u90fd\u4f1a\u964d\u4f4e\u5145\u7535\u901f\u5ea6\u3002\n\u5373\u4f7f\u662f\u6700\u65b0\u7684\u65d7\u8230\u4ea7\u54c1\uff0c\u5728\u6240\u652f\u6301\u7684\u901f\u5ea6\u548c\u6807\u51c6\u4e4b\u95f4\u4e5f\u5b58\u5728\u5de8\u5927\u7684\u5dee\u5f02\u3002\u4f8b\u5982\uff0c\u5982\u679c\u504f\u79bb\u5185\u7f6e\u7535\u7f06\uff0cOnePlus 8 Pro\u572830W\u65f6\u65e0\u6cd5\u7fd8\u66f2\u5145\u7535\u3002\u5982\u679c\u60a8\u5f04\u65ad\u6216\u4e22\u5931\u4e86\u6240\u63d0\u4f9b\u7684\u7535\u7f06\uff0c\u90a3\u5c31\u4e0d\u592a\u597d\u4e86\u3002\u6839\u636e\u8c37\u6b4c\u7684\u8bf4\u6cd5\uff0c\u8c37\u6b4cPixel4\u65ad\u7136\u62d2\u7edd\u4f7f\u7528\u534e\u4e3a\u7535\u7f06\u5145\u7535\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e9b\u7535\u7f06\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8fdd\u53cd\u4e86\u5b98\u65b9\u7684USB-C\u89c4\u8303\u3002\u56e0\u6b64\uff0c\u4e0d\u8981\u6307\u671b\u80fd\u591f\u4f7f\u7528\u670b\u53cb\u7684USB-C\u9002\u914d\u5668\u6216USB-C\u63a5\u53e3\u5145\u7535\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e0e\u5305\u88c5\u76d2\u4e2d\u63d0\u4f9b\u7684\u7535\u7f06\u548c\u5145\u7535\u5668\u76f8\u6bd4\uff0c\u6df7\u5408\u642d\u914d\u7535\u7f06\u548c\u5145\u7535\u5668\u5982\u4f55\u5927\u5e45\u964d\u4f4eUSB\u5145\u7535\u901f\u5ea6\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u901a\u8fc7USB-C\u7684\u5145\u7535\u901f\u5ea6\u5728\u4e0d\u540c\u7684\u624b\u673a\u4e0a\u5dee\u522b\u5f88\u5927\u3002\n\u597d\u6d88\u606f\u662f\uff0cUSB Power Delivery(PD)\u73b0\u5728\u53ef\u4ee5\u5f88\u597d\u5730\u652f\u6301\u5feb\u901f\u5145\u7535\uff0c\u5c3d\u7ba1\u901f\u5ea6\u901a\u5e38\u6bd4\u76d2\u88c5\u5145\u7535\u5668\u6162\u3002\u652f\u6301\u65f6\uff0c\u5feb\u901f\u5145\u7535\u901f\u5ea6\u660e\u663e\u8f83\u6162\u3002\u4f7f\u7528USB PD\u4f5c\u4e3a\u9ed8\u8ba4\u5145\u7535\u6280\u672f\u7684\u624b\u673a\u5728\u66f4\u6362\u7535\u7f06\u548c\u5145\u7535\u5668\u65f6\u4e5f\u6bd4\u4f7f\u7528\u4e13\u6709\u6807\u51c6\u7684\u624b\u673a\u8868\u73b0\u5f97\u66f4\u597d\u3002\u4f8b\u5982\uff0c\u770b\u770b\u4e09\u661fGalaxy S20\u4e0eOnePlus 8 Pro\u7684\u6bd4\u8f83\u3002\n\u867d\u7136\u8fd9\u662f\u671d\u7740\u6b63\u786e\u65b9\u5411\u8fc8\u51fa\u7684\u4e00\u6b65\uff0c\u4f46USB Power Delivery\u4e5f\u5f88\u5feb\u53d7\u5230\u6807\u51c6\u788e\u7247\u7684\u5f71\u54cd\u3002USB PD 3.0\u89c4\u8303\u4e2d\u5f15\u5165\u7684\u53ef\u7f16\u7a0b\u7535\u6e90(PPS)\u5bfc\u81f4\u4e86\u5bf945W\u5feb\u901f\u5145\u7535\u4e0e\u4e09\u661fGalaxy Note 10 Plus\u7684\u6781\u5927\u6df7\u6dc6\u3002\u73b0\u5728\u6d88\u8d39\u8005\u4e0d\u4ec5\u8981\u6ce8\u610fUSB Power Delivery\uff0c\u4ed6\u4eec\u8fd8\u9700\u8981\u4e00\u4e9b\u8bbe\u5907\u7684PPS\u53d8\u79cd\u3002\u56f0\u60d1\uff1f\n\u4f7f\u7528Note 10 Plus\u8fdb\u884c45W\u5145\u7535\u9700\u8981USB PD 3.0 PPS\uff0c\u800c\u4e0d\u662f\u666e\u901a\u7684USB PD\u3002\u56f0\u60d1\uff1f\n\u6211\u4eec\u8fd8\u5728\u7ee7\u7eed\u63a2\u7d22\u5728\u66f4\u5927\u8303\u56f4\u7684\u8bbe\u5907\u4e2d\u5bf9Power Delivery\u548cQuick Charge\u6807\u51c6\u7684\u5145\u7535\u652f\u6301\u65b9\u9762\u7684\u5dee\u5f02\u3002\u6211\u4eec\u5df2\u7ecf\u5c06\u5176\u4e0e\u76d2\u88c5\u5145\u7535\u5668\u901f\u5ea6\u548c\u901a\u7528USB2.4A\u7aef\u53e3\u7684\u652f\u6301\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u8868\u4e2d\u627e\u5230\u6570\u636e\u3002\u7ed3\u679c\u7a81\u51fa\u663e\u793a\u7684\u7eff\u8272\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u5feb\u901f\u5145\u7535\u652f\u6301\uff0c\u9ec4\u8272\u8868\u793a\u5b9e\u73b0\u6b63\u5e38\uff0c\u7ea2\u8272\u8868\u793a\u672a\u80fd\u4ee5\u5408\u9002\u7684\u901f\u5ea6\u652f\u6301\u76f8\u5173\u6807\u51c6\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u4ee3\u4eba\u4e2d\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u8d8b\u52bf\u662fUSB Power Delivery\u652f\u6301\u5df2\u7ecf\u8d85\u8fc7\u4e86Quick Charge 3.0\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u4e8eQuick Charge 4\u4e0ePower Delivery\u7684\u517c\u5bb9\u6027\u3002USB PD\u4e5f\u8d8a\u6765\u8d8a\u591a\u5730\u88ab\u7b14\u8bb0\u672c\u7535\u8111\u548c\u5e73\u677f\u7535\u8111\u652f\u6301\u5145\u7535\uff0c\u8fd9\u4f7f\u5f97\u60a8\u66f4\u6709\u53ef\u80fd\u627e\u5230\u4e00\u4e2a\u9002\u7528\u4e8e\u6240\u6709\u8bbe\u5907\u7684USB-C\u9002\u914d\u5668\u3002\n\u867d\u7136\u5df2\u7ecf\u8d62\u5f97\u4e86\u5bf9\u5feb\u901f\u5145\u7535\u7684\u652f\u6301\uff0c\u4f46USB Power Delivery\u73b0\u5728\u5e7f\u6cdb\u652f\u6301\u5feb\u901f\u5145\u7535\u3002\nUSB\u4f9b\u7535\u901f\u5ea6\u901a\u5e38\u5f98\u5f8a\u572815W\u5de6\u53f3\uff0c\u800cQuick Charge 3.0\u901a\u5e38\u4f4e\u4e8e9W\u3002\u7136\u800c\uff0c\u559c\u5fe7\u53c2\u534a\u7684\u7ed3\u679c\u5b8c\u7f8e\u5730\u7a81\u663e\u4e86\u66f4\u5e7f\u6cdb\u7684\u95ee\u9898\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u901f\u5ea6\u7ed3\u679c\u8303\u56f4\u3002\u667a\u80fd\u624b\u673a\u901a\u5e38\u4e5f\u4f1a\u5728\u89c4\u683c\u8868\u4e2d\u9690\u85cf\u5bf9\u8fd9\u4e9b\u6807\u51c6\u7684\u652f\u6301\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u6d88\u8d39\u8005\u77e5\u9053\u8fd9\u4e9b\u6807\u51c6\u7684\u542b\u4e49\u3002\u5373\u4f7f\u4e00\u90e8\u624b\u673a\u540c\u65f6\u652f\u6301\u4e24\u79cd\u7b2c\u4e09\u65b9\u6807\u51c6\uff0c\u5b83\u7684\u5145\u7535\u901f\u5ea6\u4e5f\u53ef\u80fd\u6bd4\u4f7f\u7528\u76d2\u88c5\u5145\u7535\u5668\u65f6\u6162\u5f97\u591a\u3002\n\u5f52\u6839\u7ed3\u5e95\uff0c\u667a\u80fd\u624b\u673a\u7684\u5145\u7535\u901f\u5ea6\u4ecd\u7136\u6ca1\u6709\u592a\u5927\u7684\u4e00\u81f4\u6027\uff0c\u6d88\u8d39\u8005\u4e5f\u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u77e5\u9053\u624b\u673a\u662f\u5426\u4f1a\u4f7f\u7528\u4efb\u4f55\u7ed9\u5b9a\u7684\u6807\u51c6\u5145\u7535\uff0c\u6216\u8005\u5145\u7535\u6548\u679c\u5982\u4f55\u3002\u5f53\u4ea7\u54c1\u5f00\u59cb\u4f7f\u7528\u53cc\u5411\u5145\u7535\u529f\u80fd(\u6bd4\u5982\u4ece\u7b14\u8bb0\u672c\u7535\u8111\u7684USB\u7aef\u53e3\u4e3a\u624b\u673a\u5145\u7535)\u65f6\uff0c\u8fd9\u4e00\u70b9\u5c31\u53d8\u5f97\u66f4\u52a0\u4e0d\u6e05\u695a\u4e86\u3002\n\u5f53\u65f6\u5145\u7535\u4ecd\u7136\u8fc7\u4e8e\u590d\u6742\uff0c\u6570\u636e\u4f20\u8f93\u901f\u5ea6\u4e5f\u662f\u5982\u6b64\u3002\u5bf9\u4e8e\u67d0\u4e9b\u7aef\u53e3\uff0cUSB-C\u652f\u63012.x\u30013.x\u548c\u8fc5\u96f7\u901f\u5ea6\uff0c\u8fd9\u5df2\u7ecf\u591f\u8ba9\u4eba\u56f0\u60d1\u7684\u4e86\u3002\u4f46\u662f\uff0c\u7535\u7f06\u8fd8\u5fc5\u987b\u7ecf\u8fc7\u7279\u522b\u989d\u5b9a\uff0c\u4ee5\u6ee1\u8db3\u66f4\u9ad8\u7684\u901f\u5ea6\u8981\u6c42\u3002\nUSB3.2\u7684\u63a8\u51fa\u53ca\u5176\u8352\u8c2c\u7684Gen 1\u548cGen 2\u54c1\u724c\u7ed9\u90a3\u4e9b\u8bd5\u56fe\u7406\u89e3\u65e5\u76ca\u590d\u6742\u7684\u547d\u540d\u65b9\u6848\u7684\u4eba\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u969c\u788d\u3002\u5c31\u5728\u51e0\u5929\u540e\uff0cUSB4\u7684\u53d1\u5e03\u8017\u5c3d\u4e86\u6d88\u8d39\u8005\u548c\u5f00\u53d1\u8005\u7684\u4efb\u4f55\u5269\u4f59\u7406\u89e3\u3002USB4\u58f0\u79f0\u201c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u7ec8\u7aef\u7528\u6237\u7684\u56f0\u60d1\u201d\uff0c\u56e0\u4e3a\u5b83\u9700\u8981USB-C\u8fde\u63a5\u5668\u548cUSBPD\u652f\u6301\uff0c\u4f46\u5b83\u4ecd\u7136\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u4ee4\u4eba\u56f0\u60d1\u7684\u53ef\u9009\u529f\u80fd\uff0c\u6bd4\u5982\u53ea\u6709\u4e00\u4e9b\u8bbe\u5907\u652f\u6301Thunderbolt3\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u8981\u60f3\u8ba9USB4\u8bbe\u5907\u5927\u91cf\u8fdb\u5165\u5e02\u573a\u5e76\u6709\u6240\u4f5c\u4e3a\uff0c\u8fd8\u9700\u8981\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6d88\u8d39\u8005\u4ecd\u7136\u4e0d\u5f97\u4e0d\u8d39\u529b\u5730\u901a\u8fc7\u8fd9\u4e2a\u54c1\u724c\u6ce5\u6f6d\u6765\u5f04\u6e05\u695a\u4ec0\u4e48\u662f\u53d7\u652f\u6301\u7684\u3002\n\u4ec5\u51ed\u8089\u773c\u65e0\u6cd5\u5224\u65adUSB-C\u7535\u7f06\u662f\u652f\u6301\u5927\u7535\u6d41\u5145\u7535\u8fd8\u662f\u652f\u63014.0\u6570\u636e\u901f\u5ea6\u3002\nUSB\u6570\u636e\u547d\u540d\u65b9\u6848\u65e0\u7591\u662f\u4e00\u56e2\u7cdf\u3002\u4e0b\u9762\u7684\u8868\u683c\u6709\u671b\u5e2e\u52a9\u60a8\u7406\u6e05\u6bcf\u4e2a\u89c4\u8303\u63d0\u4f9b\u7684\u5185\u5bb9\u3002\n\u5f53\u6d89\u53ca\u5230\u652f\u6301\u201c\u5907\u7528\u6a21\u5f0f\u201d\u548c\u5176\u4ed6\u534f\u8bae\u65f6\uff0c\u8bbe\u5907\u548c\u7535\u7f06\u4e5f\u540c\u6837\u5b58\u5728\u95ee\u9898\u3002\u5b83\u4eec\u5c5e\u4e8eUSB-C\u89c4\u8303\uff0c\u800c\u4e0d\u662f\u7aef\u53e3\u7684\u6570\u636e\u901f\u5ea6\u89c4\u8303\u3002\u8fd9\u4e9b\u529f\u80fd\u5305\u62ecDisplayPort\u3001MHL\u3001HDMI\u3001\u4ee5\u592a\u7f51\u548c\u901a\u8fc7\u8fde\u63a5\u5668\u63d0\u4f9b\u7684\u97f3\u9891\u529f\u80fd\uff0c\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\u90fd\u4f9d\u8d56\u4e8e\u8fde\u63a5\u7684\u8bbe\u5907\u548c\u7535\u7f06\u6765\u652f\u6301\u5b83\u4eec\u3002\u8fd9\u4e9b\u4e0d\u662f\u7aef\u53e3\u89c4\u8303\u7684\u5f3a\u5236\u90e8\u5206\uff0c\u56e0\u4e3a\u4e0d\u540c\u8bbe\u5907\u7684\u529f\u80fd\u548c\u9700\u6c42\u660e\u663e\u4e0d\u540c\u3002\u4f8b\u5982\uff0cUSB4\u5f15\u5165\u4e86DisplayPort 4.1a\u548cPCI Express\u6570\u636e\u652f\u6301\uff0c\u4f46\u4f60\u5728\u7535\u6c60\u7ec4\u4e0a\u4e0d\u9700\u8981\u8fd9\u4e9b\u3002\n\u8fd9\u6837\u505a\u7684\u95ee\u9898\u662f\u4e0d\u4e00\u5b9a\u63d0\u4f9b\u7528\u6237\u5728\u4ea7\u54c1\u4e2d\u671f\u671b\u7684\u67d0\u4e9b\u529f\u80fd\u3002\u5982\u679c\u7b14\u8bb0\u672c\u7535\u8111\u7f3a\u5c11\u5e38\u89c4\u7aef\u53e3\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u901a\u8fc7USB-C\u7aef\u53e3\u652f\u6301HDMI\u6216\u4ee5\u592a\u7f51\uff0c\u4f46\u60c5\u51b5\u53ef\u80fd\u5e76\u975e\u5982\u6b64\u3002\u66f4\u4ee4\u4eba\u6cae\u4e27\u7684\u662f\uff0c\u529f\u80fd\u53ef\u80fd\u4ec5\u9650\u4e8e\u8bbe\u5907\u4e0a\u7684\u7279\u5b9aC\u578b\u7aef\u53e3\u3002\u60a8\u53ef\u80fd\u67093\u4e2a\u7aef\u53e3\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u7aef\u53e3\u53ef\u4ee5\u63d0\u4f9b\u60a8\u60f3\u8981\u7684\u529f\u80fd\u3002\nUSB-C\u517c\u5bb9\u5f88\u591a\u529f\u80fd\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u7aef\u53e3\u90fd\u652f\u6301\u6240\u6709\u529f\u80fd\u3002USB4\u505a\u5f97\u592a\u5c11\u4e86\uff0c\u4e5f\u592a\u665a\u4e86\uff0c\u5e2e\u4e0d\u4e0a\u5fd9\u3002\nUSB-C\u4f7f\u529f\u80fd\u66f4\u4e0d\u900f\u660e\uff0c\u800c\u4e0d\u662f\u66f4\u5c11\u3002\u5b83\u58f0\u79f0\u53ef\u4ee5\u505a\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u4f46\u4ecd\u7136\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u6b3e\u4ea7\u54c1\u4f1a\u771f\u6b63\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u4e2d\u7684\u4efb\u4f55\u4e00\u9879\u3002USB4\u53ef\u80fd\u6709\u52a9\u4e8e\u7edf\u4e00\u4e00\u4e9b\u529f\u80fd\u517c\u5bb9\u6027\uff0c\u4f46\u6211\u6000\u7591\u5b83\u662f\u5426\u4f1a\u5728USB-C3.1\u548c\u66f4\u65e7\u7684\u7aef\u53e3\u4ecd\u7136\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\u5e2e\u52a9\u7ed3\u675f\u6df7\u4e71\u3002\u5927\u91cf\u7684\u4f20\u7edf\u8bbe\u5907\u548c\u5269\u4f59\u7684\u53ef\u9009\u6807\u51c6\u610f\u5473\u7740USB-C\u7aef\u53e3\u529f\u80fd\u4e00\u76ee\u4e86\u7136\u3002\u5373\u4f7f\u6709\u4e86\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u7aef\u53e3\u4e5f\u88ab\u6b63\u786e\u5730\u6807\u4e0a\u4e86\u9002\u5f53\u7684\u54c1\u724c\uff0c\u5f53\u4eba\u4eec\u60f3\u8981\u7684\u53ea\u662f\u6709\u6548\u7684\u4e1c\u897f\u65f6\uff0c\u5f04\u6e05\u695a\u5404\u79cd\u6a21\u5f0f\u548c\u884c\u8bdd\u7684\u6b63\u53cd\u4e24\u9762\u53ef\u80fd\u4f1a\u662f\u5f88\u591a\u9700\u8981\u6d88\u5316\u7684\u4fe1\u606f\u3002\n\u8fd9\u5c31\u5f88\u597d\u5730\u628a\u6211\u4eec\u5e26\u5230\u4e86\u53ef\u9006USB\u7aef\u53e3\u7684\u6700\u5927\u95ee\u9898\u4e0a\uff0c\u81f3\u5c11\u5728\u667a\u80fd\u624b\u673a\u4e0a\u662f\u8fd9\u6837\uff1a\u8bbe\u5907\u4e0a\u7f3a\u4e4f\u53ef\u9006USB\u7aef\u53e3\u3002\u5728\u624b\u673a\u9886\u57df\uff0c\u5355\u4e00\u7684\u97f3\u9891\u548c\u7535\u6e90\u7aef\u53e3\u5df2\u7ecf\u88ab\u8bc1\u660e\u662f\u6709\u95ee\u9898\u7684\uff0c\u6d88\u8d39\u8005\u5728\u4e0d\u65b9\u4fbf\u7684\u65f6\u5019\u4f1a\u4f38\u624b\u53bb\u627e\u52a0\u5bc6\u72d7\u548c\u96c6\u7ebf\u5668\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u7136\u800c\uff0c\u8fd9\u6253\u5f00\u4e86\u4e00\u4e2a\u517c\u5bb9\u6027\u95ee\u9898\u7684\u5168\u65b0\u4e16\u754c\uff0c\u4f8b\u5982\u60a8\u7684\u96c6\u7ebf\u5668\u6216\u52a0\u5bc6\u72d7\u662f\u5426\u652f\u6301\u76f8\u540c\u7684\u53cc\u5411\u7535\u6e90\u5145\u7535\u65b9\u6cd5\u6216\u6807\u51c6\uff0c\u6216\u8005\u6570\u636e\u662f\u5426\u4ecd\u7136\u53ef\u4ee5\u4f20\u8f93\u5230\u53e6\u4e00\u53f0\u8bbe\u5907\u3002\n\u8bd5\u9519\u901a\u5e38\u662f\u786e\u5b9aUSB-C\u7aef\u53e3\u652f\u6301\u4ec0\u4e48\u7684\u552f\u4e00\u65b9\u6cd5\u3002\n\u5e02\u573a\u4e0a\u4e00\u4e9b\u6700\u65b0\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e5f\u662f\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u867d\u7136\u8fd9\u53d6\u51b3\u4e8e\u8bbe\u5907\uff0c\u56e0\u4e3a\u4e00\u4e9b\u65b0\u578b\u53f7\u5728\u591a\u4e2aUSB-C\u7aef\u53e3\u4e0a\u8fd0\u884c\u5145\u7535\u3001\u97f3\u9891\u548c\u5176\u4ed6\u529f\u80fd\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u5f53\u8bbe\u5907\u901a\u7535\u65f6\uff0c\u4e22\u5f03USB-C\u7684\u7535\u6e90\u63d2\u5ea7\u4f1a\u7acb\u5373\u51cf\u5c11\u60a8\u7684\u5916\u56f4\u8bbe\u5907\u6570\u91cf\uff0c\u8fd9\u5c24\u5176\u4ee4\u4eba\u6cae\u4e27\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7b14\u8bb0\u672c\u7535\u8111\u4e00\u5f00\u59cb\u53ea\u6709\u51e0\u4e2a\u53ef\u7528\u7684\u7aef\u53e3\u3002\u7528\u6237\u8d8a\u6765\u8d8a\u591a\u5730\u88ab\u8feb\u4f7f\u7528\u52a0\u5bc6\u72d7\uff0c\u4ee5\u8fde\u63a5\u5230\u5728\u5176\u4ed6\u5e02\u573a\u4e0a\u4ecd\u7136\u65e0\u5904\u4e0d\u5728\u7684\u4f20\u7edf\u7aef\u53e3\u3002\n\u90e8\u5206\u539f\u56e0\u662f\uff0c\u5c3d\u7ba1USB-C\u5df2\u7ecf\u8fdb\u5165\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4f46\u5728\u4e3b\u6d41\u663e\u793a\u5668\u548c\u666e\u901a\u914d\u4ef6\u4e0a\u4ecd\u7136\u5f88\u5c11\u89c1\u3002\u65b0\u7aef\u53e3\u6240\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u5c31\u662f\u5c06\u4e00\u4e9b\u7ec4\u4ef6\u4ece\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u63a8\u5230\u7535\u7f06\u7684\u53e6\u4e00\u7aef\u3002\u8003\u8651\u5230\u901a\u5e38\u53ea\u662f\u4e3a\u4e86\u6062\u590d\u65e7\u4ea7\u54c1\u7684\u529f\u80fd\u800c\u6536\u53d6\u7684\u4ef7\u683c\uff0c\u8fd9\u5e76\u4e0d\u5b8c\u5168\u662f\u4e00\u4e2a\u5bf9\u6d88\u8d39\u8005\u53cb\u597d\u7684\u4e3e\u63aa\u3002\n\u7ebf\u7f06\u517c\u5bb9\u6027\uff0c\u53ef\u4ee5\u8bf4\u662fUSB-C\u6700\u4ee4\u4eba\u6cae\u4e27\u7684\u95ee\u9898\uff0c\u6e90\u4e8e\u5bf9\u8f83\u6162\u8bbe\u5907\u7684\u4f20\u7edf\u652f\u6301\uff0c\u4ee5\u53ca\u89c6\u9891\u6570\u636e\u7b49\u8f83\u9ad8\u901f\u5ea6\u4f7f\u7528\u6848\u4f8b\u7684\u5f15\u5165\u3002USB2.0\u53ea\u6709\u56db\u9488\u6570\u636e\u548c\u7535\u6e90\u8fde\u63a5\u5668\uff0c\u800c3.0\u7535\u7f06\u5c06\u5176\u589e\u52a0\u5230\u516b\u9488\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u7528\u4e8e\u5145\u7535\u7684USB-C\u8f6cA\u7535\u7f06\u53ef\u80fd\u67092.0\u30013.0\u548c3.1\u79cd\uff0c\u8fd9\u4f1a\u5f71\u54cd\u5b83\u4eec\u53ef\u4ee5\u5904\u7406\u7684\u6570\u636e\u91cf\u548c\u529f\u7387\u3002USB Power Delivery\u662f\u5411\u540e\u517c\u5bb9\u7684\uff0c\u56e0\u6b64\u662f\u4f7f\u7528\u65e7\u7535\u7f06\u7c7b\u578b\u548c\u901f\u5ea6\u7ed9\u8bbe\u5907\u5145\u7535\u7684\u6700\u4f73\u9009\u62e9\uff0c\u4f46\u4e13\u6709\u6807\u51c6\u7684\u6d41\u884c\u610f\u5473\u7740\u6d88\u8d39\u8005\u5f88\u5c11\u771f\u6b63\u77e5\u9053\u4ed6\u4eec\u5f97\u5230\u7684\u662f\u4ec0\u4e48\u3002\n\u7535\u7f06\u8d28\u91cf\u3001\u989d\u5b9a\u503c\u548c\u957f\u5ea6\u4f1a\u5f71\u54cdUSB-C\u7aef\u53e3\u4e0a\u7684\u53ef\u7528\u529f\u80fd\u3002\u6709\u4e9b\u7535\u7f06\u751a\u81f3\u8fdd\u53cd\u4e86\u6807\u51c6\uff01\n\u7535\u7f06\u8d28\u91cf\u5728\u8fd9\u91cc\u4e5f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4e00\u4e9b\u5145\u7535\u6807\u51c6\u4f1a\u68c0\u6d4b\u7535\u7f06\u53ef\u4ee5\u5904\u7406\u7684\u529f\u7387\uff0c\u5e76\u8bbe\u7f6e\u9002\u5f53\u7684\u5145\u7535\u901f\u5ea6\u3002\u5728\u6211\u4eec\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u534e\u4e3a\u7684\u6280\u672f\u9700\u89815A\u8bc4\u7ea7\u624d\u80fd\u5168\u901f\u5145\u7535(\u4f46\u8fdd\u53cd\u4e86\u89c4\u8303\uff0c\u4e0d\u80fd\u4e0ePixel4\u4e00\u8d77\u4f7f\u7528)\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6765\u81ea\u7b2c\u4e09\u65b9\u7684\u8f83\u957f\u7535\u7f06\u5e76\u4e0d\u603b\u662f\u63d0\u4f9b\u4e0e\u624b\u673a\u9644\u5e26\u7684\u8f83\u5c0f\u7535\u7f06\u76f8\u540c\u7684\u901f\u5ea6\u3002\n\u5982\u679c\u8fd9\u8fd8\u4e0d\u591f\u590d\u6742\uff0c\u9ad8\u901f\u6570\u636e\u548c\u5b9e\u65f6\u89c6\u9891\u4f20\u8f93\u7684\u5f15\u5165\u5e26\u6765\u4e86\u65b0\u7684\u95ee\u9898\u3002\u975e\u5e38\u5feb\u7684\u4fe1\u53f7\u5728\u8fdc\u8ddd\u79bb\u4f20\u8f93\u65f6\u4f1a\u53d7\u5230\u8870\u51cf\u548c\u65f6\u949f\u6296\u52a8\u7684\u5f71\u54cd\uff0c\u8fd9\u610f\u5473\u7740\u6570\u636e\u53ef\u80fd\u4f1a\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e22\u5931\u3002\u4e3a\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u7535\u7f06\u4e5f\u53ef\u5206\u4e3a\u65e0\u6e90\u6216\u6709\u6e90\u4e24\u79cd\u3002\u6709\u6e90\u7535\u7f06\u5305\u62ec\u8f6c\u53d1\u5668\uff0c\u7528\u4e8e\u6062\u590d\u4fe1\u53f7\u5e45\u5ea6\u5e76\u9632\u6b62\u957f\u8ddd\u79bb\u4fe1\u53f7\u8d28\u91cf\u635f\u5931\u3002\u56e0\u6b64\uff0c\u7528\u4e8e\u8d85\u9ad8\u901f\u6570\u636e\u4f20\u8f93(\u5982\u901a\u8fc7\u8fc5\u96f7\u53d1\u90014K 60fps\u89c6\u9891\u6216\u6570\u636e)\u7684\u957f\u7535\u7f06\u9700\u8981\u6709\u6e90\u90e8\u4ef6\uff0c\u800c\u57fa\u672c\u5145\u7535\u548c\u6570\u636e\u4f20\u8f93\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0d\u5230\u4e24\u7c73\u957f\u7684\u6807\u51c6\u65e0\u6e90\u7535\u7f06\u3002\nDisplayPort\u3001MHL\u3001HMDI\u548cThunderbolt\u901a\u8fc7\u65e0\u6e90USB Type-C\u7f06\u7ebf\u63d0\u4f9b\u652f\u6301\uff0c\u5982\u679c\u5b83\u4eec\u5e26\u6709\u6807\u793a\u7684\u201c\u4e09\u53c9\u621f\u201dSuperSpeed USB\u5fbd\u6807\uff0c\u5219\u8fd9\u4e9b\u7f06\u7ebf\u7684\u957f\u5ea6\u4e0d\u5230\u4e24\u7c73\uff0c\u5982\u679c\u5e26\u6709SuperSpeed+\u6807\u7b7e\u7684\u7f06\u7ebf\uff0c\u5219\u652f\u6301\u957f\u5ea6\u4e0d\u5230\u4e00\u7c73\u7684\u7f06\u7ebf\u3002\u66f4\u8fdc\u7684\u8ddd\u79bb\u9700\u8981\u6709\u6e90\u7535\u7f06\uff0c\u5982\u679c\u4f60\u60f3\u898140Gbps\u7684\u901f\u5ea6\uff0c\u4f60\u5fc5\u987b\u6ce8\u610f\u8fc5\u96f7\u6807\u5fd7\u3002\u8fde\u63a5\u5230\u5176\u4ed6USB\u7c7b\u578b\u7684\u88ab\u52a8\u9002\u914d\u5668\u7535\u7f06\u4e0d\u652f\u6301\u8fd9\u4e9b\u6a21\u5f0f\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u3002\n\u529f\u80fd\u517c\u5bb9\u6027\u95ee\u9898\u8fd8\u6d89\u53ca\u76f8\u5173\u7684\u7aef\u53e3\u548c\u8bbe\u5907\uff0c\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u5145\u7535\u901f\u5ea6\u3001\u4f20\u7edf\u6807\u51c6\u548c\u5907\u7528\u6a21\u5f0f\u8fdb\u884c\u914d\u7f6e\u3002USB-C\u662f\u4e00\u4e2a\u6bd4\u5b83\u7684\u524d\u8eab\u66f4\u590d\u6742\u7684\u7aef\u53e3\uff0c\u9700\u8981\u66f4\u591a\u7684\u8f6f\u4ef6\u548c\u786c\u4ef6\u8f93\u5165\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\nUSB-C\u4ea7\u54c1\u7684\u8d77\u70b9\u662fPower Delivery\u534f\u8bae\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u5145\u7535\u7684\u95ee\u9898\uff0c\u7aef\u53e3\u4e5f\u662f\u901a\u8fc7\u4f7f\u7528\u8fde\u63a5\u5668\u548c\u9644\u52a0\u5f15\u811a\u6765\u4f20\u8fbe\u5bf9HDMI\u548cDisplayPort\u7b49\u989d\u5916\u529f\u80fd\u7684\u652f\u6301\u3002\u6240\u6709\u5907\u7528\u6a21\u5f0f\u90fd\u4f7f\u7528Power Delivery\u7ed3\u6784\u5316\u4f9b\u5e94\u5546\u5b9a\u4e49\u62a5\u6587(VDM)\u6765\u53d1\u73b0\u3001\u914d\u7f6e\u3001\u8fdb\u5165\u6216\u9000\u51fa\u8fd9\u4e9b\u6a21\u5f0f\u3002\u5e95\u7ebf\u662f\uff0c\u5982\u679c\u4f60\u7684\u8bbe\u5907\u4e0d\u652f\u6301Power Delivery\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u652f\u6301\u4efb\u4f55\u5176\u4ed6\u529f\u80fd\u3002\u9057\u61be\u7684\u662f\uff0c\u4f9b\u7535\u7ebf\u8def\u6bd4\u57fa\u672c\u7ebf\u8def\u66f4\u590d\u6742\u3001\u66f4\u6602\u8d35\uff0c\u800c\u4e14\u590d\u6742\u6027\u968f\u7740\u7aef\u53e3\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002\n\u5373\u4fbf\u5982\u6b64\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6bcf\u4e2a\u4f9b\u7535\u7aef\u53e3\u6216\u8bbe\u5907\u90fd\u5c06\u652f\u6301\u6240\u6709\u529f\u80fd\u3002\u9664\u4e86\u4f9b\u7535\u7ec4\u4ef6\u548c\u5e38\u89c4\u7aef\u53e3\u8fde\u63a5\u5916\uff0c\u8fd8\u9700\u8981\u8bbe\u5907\u5236\u9020\u5546\u63d0\u4f9b\u5fc5\u8981\u7684\u590d\u7528\u5668\u548c\u5176\u4ed6IC\uff0c\u4ee5\u652f\u6301\u4ee5\u592a\u7f51\u3001\u663e\u793a\u5668\u548c\u5176\u4ed6\u66ff\u4ee3\u6a21\u5f0f\u3002\u4e0b\u56fe\u4ec5\u663e\u793a\u4e86\u6269\u5c55\u5355\u4e2aUSB-C\u7aef\u53e3\u7684\u529f\u80fd\u96c6\u6240\u9700\u7684\u90e8\u5206\u4e0d\u540c\u7ec4\u4ef6\u5757\u3002\n\u53ea\u6709\u5f53\u4ea7\u54c1\u60f3\u8981\u5c06\u591a\u4e2a\u4fe1\u53f7(\u5982\u89c6\u9891\u6216\u97f3\u9891)\u8def\u7531\u548c\u7ba1\u7406\u5230\u591a\u4e2aUSB\u7aef\u53e3\u65f6\uff0c\u7aef\u53e3\u7535\u8def\u624d\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002\u4fe1\u53f7\u8def\u7531\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u548c\u6602\u8d35\uff0c\u56e0\u6b64\u5236\u9020\u5546\u5c06\u529f\u80fd\u9650\u5236\u5728\u4e00\u4e2a\u6216\u4e24\u4e2a\u7aef\u53e3\u3002\n\u5373\u4f7f\u662f\u4f9b\u7535\u4e5f\u9700\u8981\u4f7f\u7528\u590d\u6742\u7684USB-C\u7535\u8def\uff0c\u4ee5\u9002\u5e94\u53ef\u9006\u8fde\u63a5\u5668\u7c7b\u578b\u3001\u7535\u6e90\u9009\u9879\u8303\u56f4\uff0c\u4ee5\u53ca\u5411\u4e0a\u3001\u5411\u4e0b\u548c\u53cc\u5411\u5145\u7535\u7aef\u53e3\u548c\u6570\u636e\u9009\u9879\u4e4b\u95f4\u7684\u9009\u62e9\u3002\u4e3a\u4e86\u964d\u4f4e\u6210\u672c\u548c\u590d\u6742\u6027\uff0c\u5e76\u975e\u7b14\u8bb0\u672c\u7535\u8111\u6216PC\u4e0a\u7684\u6240\u6709USB-C\u7aef\u53e3\u90fd\u652f\u6301\u6240\u6709\u529f\u80fd\u3002USB4\u65e8\u5728\u901a\u8fc7\u5f3a\u5236\u4e00\u4e9b\u529f\u80fd\u6765\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4f46\u5982\u679c\u8bbe\u5907\u6df7\u5408\u5339\u914d\u65b0\u65e7\u6807\u51c6\u4ee5\u8282\u7701\u6210\u672c\u548c\u590d\u6742\u6027\uff0c\u8fd9\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u6709\u5e2e\u52a9\u3002\nUSB-C\u7684\u590d\u6742\u6027\u65e0\u7591\u662f\u5b83\u7684\u8d25\u7b14\u3002\u867d\u7136\u4e00\u6839\u7535\u7f06\u652f\u6301\u6240\u6709\u4e1c\u897f\u7684\u60f3\u6cd5\u542c\u8d77\u6765\u975e\u5e38\u6709\u7528\uff0c\u4f46\u73b0\u5b9e\u5f88\u5feb\u5c31\u53d8\u6210\u4e86\u4e13\u6709\u4ea7\u54c1\u4e0e\u6309\u89c4\u683c\u4ea7\u54c1\u3001\u4e0d\u540c\u7535\u7f06\u8d28\u91cf\u548c\u529f\u80fd\u4ee5\u53ca\u4e0d\u900f\u660e\u529f\u80fd\u652f\u6301\u7684\u9519\u7efc\u590d\u6742\u7684\u7ec4\u5408\u3002\u5176\u7ed3\u679c\u662f\u4e00\u79cd\u770b\u8d77\u6765\u7b80\u5355\u6613\u7528\u7684\u6807\u51c6\uff0c\u4f46\u5f88\u5feb\u5c31\u5bfc\u81f4\u4e86\u6d88\u8d39\u8005\u7684\u6cae\u4e27\uff0c\u56e0\u4e3a\u6ca1\u6709\u660e\u786e\u7684\u8ff9\u8c61\u8868\u660e\u4e3a\u4ec0\u4e48\u67d0\u4e9b\u7535\u7f06\u548c\u529f\u80fd\u4e0d\u80fd\u8de8\u8bbe\u5907\u5de5\u4f5c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4ea7\u54c1\u5f00\u53d1\u4eba\u5458\u4e5f\u9762\u4e34\u7740\u540c\u6837\u4ee4\u4eba\u6cae\u4e27\u7684\u60c5\u51b5\u3002\u652f\u6301\u6240\u6709\u9ad8\u7ea7USB-C\u529f\u80fd\u662f\u4e00\u9879\u590d\u6742\u7684\u5de5\u7a0b\u58ee\u4e3e\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u524d\u51e0\u4ee3USB\u3002\u6b64\u5916\uff0c\u4e0d\u65ad\u589e\u52a0\u7684\u7ec4\u4ef6\u548c\u8fde\u63a5\u5668\u589e\u52a0\u4e86\u5f00\u53d1\u6210\u672c\u548c\u90e8\u7f72\u65f6\u95f4\u3002\u867d\u7136\u73b0\u5728\u6709\u66f4\u591a\u7684\u96c6\u6210IC\u548cUSB4\u6765\u7b80\u5316\u517c\u5bb9\u6027\uff0c\u4f46\u6700\u65b0\u89c4\u8303\u4e2d\u7684\u5927\u91cf\u9009\u9879\u548c\u529f\u80fd\u4f7f\u5f97\u5b9e\u65bd\u8d77\u6765\u65e2\u6602\u8d35\u53c8\u8017\u65f6\u3002\n\u5e76\u975e\u6240\u6709USB-C\u7aef\u53e3\u6216\u7535\u7f06\u90fd\u76f8\u540c\u3002\u5c3d\u7ba1\u52aa\u529b\u7edf\u4e00\uff0cUSB4\u8fd8\u662f\u4e0d\u80fd\u89e3\u51b3\u517c\u5bb9\u6027\u95ee\u9898\u3002\nUSB4\u662f\u7edf\u4e00USB-C\u7aef\u53e3\u7684\u6df7\u5408\u5c1d\u8bd5\uff0c\u5355\u9760\u5b83\u80af\u5b9a\u89e3\u51b3\u4e0d\u4e86\u95ee\u9898\u3002\u66f4\u597d\u7684\u6807\u7b7e\u53ef\u4ee5\u5e2e\u52a9\u6d88\u8d39\u8005\u8bc6\u522b\u54ea\u4e9b\u7535\u7f06\u548c\u4ea7\u54c1\u652f\u6301\u54ea\u4e9b\u529f\u80fd-\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u547d\u540d\u65b9\u6848\u548c\u5fbd\u6807\u5bf9\u4e8e\u968f\u4fbf\u770b\u4e00\u773c\u6765\u8bf4\u662f\u76f8\u5f53\u4e0d\u53cb\u597d\u7684\u3002\u5f3a\u5236\u7535\u7f06\u548c\u7aef\u53e3\u7740\u8272\uff0c\u5c31\u50cfUSB 3.0\u7aef\u53e3\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\uff0c\u4f46\u5b83\u6709\u70b9\u8fdd\u80cc\u4e86\u8fd9\u4e2a\u4e00\u5200\u5207\u7684\u89e3\u51b3\u65b9\u6848\u7684\u5168\u90e8\u76ee\u7684\u3002\u9700\u8981\u4e00\u4e2a\u66f4\u4e25\u683c\u7684\u6267\u884c\u6807\u51c6\u6765\u5e2e\u52a9\u6d88\u8d39\u8005\u7406\u89e3\u517c\u5bb9\u6027\u5c06\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u4e0e2018\u5e74\u6211\u7b2c\u4e00\u6b21\u5173\u6ce8\u8fd9\u4e2a\u95ee\u9898\u65f6\u76f8\u6bd4\uff0c2020\u5e74\u7684USB-C\u751f\u6001\u7cfb\u7edf\u66f4\u52a0\u9519\u7efc\u590d\u6742\uff0c\u800c\u4e0d\u662f\u66f4\u5c11\u3002USB3.2\u548cUSB4\u7684\u53d1\u5e03\u4f7f\u8be5\u6807\u51c6\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u5374\u6ca1\u6709\u7ed9\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u5173\u4e8e\u5176\u652f\u6301\u5185\u5bb9\u7684\u660e\u786e\u4fe1\u606f\u3002\u867d\u7136USB Power Delivery\u652f\u6301\u7684\u589e\u957f\u662f\u4e00\u4e2a\u597d\u8ff9\u8c61\uff0c\u4f46PPS\u7684\u5f15\u5165\u5df2\u7ecf\u963b\u788d\u4e86\u8be5\u884c\u4e1a\u53ef\u80fd\u5f88\u5feb\u56f4\u7ed5\u5355\u4e00\u5145\u7535\u6807\u51c6\u8fbe\u6210\u4e00\u81f4\u7684\u4efb\u4f55\u5e0c\u671b\u3002USB\u89c4\u683c\u6bcf\u5e74\u90fd\u5728\u53d8\u5316\uff0c\u6d88\u8d39\u8005\u65e0\u6cd5\u8ddf\u4e0a\u3002\n\u51e0\u5e74\u8fc7\u53bb\u4e86\uff0c\u6211\u4ecd\u7136\u770b\u4e0d\u5230\u4e00\u6761\u660e\u786e\u7684\u51fa\u8def\u6765\u6446\u8131\u8fd9\u4e00\u6df7\u4e71\u7684\u5c40\u9762\u3002\n\u6b63\u5728\u5bfb\u627e\u66f4\u591a\u57fa\u4e8e\u6570\u636e\u7684\u5206\u6790\u4ee5\u4f9b\u60a8\u6df1\u5165\u7814\u7a76\u5417\uff1f\u8bf7\u67e5\u770b\u6211\u4eec\u4e0b\u9762\u7684\u4e00\u4e9b\u6d4b\u8bd5\u5185\u5bb9\uff1a", "note_en": "Editor\u2019s note: This is an updated version of an article published in 2018 and 2019.\n  USB-C is billed as the solution for all our future cable needs, unifying power, and data delivery with display and audio connectivity. Ushering in an age of the one-size-fits-all cable. Despite the USB-C connector supplied as default in modern smartphones, the standard has, unfortunately, failed to live up to its early promises.\n  Even the seemingly most basic function of USB-C \u2014 powering devices \u2014 continues to be a mess of  compatibility issues,  conflicting proprietary standards, and a general lack of consumer information to guide purchasing decisions. The data speeds available over USB-C have also become increasingly convoluted. The problem is that the features supported by different USB-C devices aren\u2019t clear, yet the defining principle of the USB-C standard makes consumers think everything should just work.\n  There is a very common frustration with the USB-C standard in its current form. Moving phones between different chargers, even of the same current and voltage ratings, often won\u2019t produce the same charging speeds. Furthermore, picking a third party USB-C cable to replace the often all too short in-box cable can result in losing fast charging capabilities. As can opting for a third-party USB-C power adapter that supports  Qualcomm\u2019s Quick Charge or  USB Power Delivery rather than one of the numerous proprietary standards.\n We\u2019ve tested this numerous times in the past and found that USB-C phones from popular brands, including Samsung, Huawei, LG, Google, and OnePlus, all slow down their charging speeds once you begin to mix and match cables and chargers.\n  Even the most recent flagships offer drastic disparities between supported speeds and standards. The  OnePlus 8 Pro, for example, fails to  Warp Charge at 30W if you deviate from the in-box cable. Not great if you break or lose the provided cable. The  Google Pixel 4 outright  refuses to charge with Huawei cables, perhaps because they break official USB-C specifications in some way, according to Google. So don\u2019t bank on being able to charge up using your friends  USB-C adapter or USB-C connector.\n    The graph below showcases how mixing and matching cables and chargers drastically reduces USB charging speeds compared to the cable and charger provided in the box. The take-away is that charging speeds over USB-C vary widely from handset to handset.\n  The good news is that  USB Power Delivery (PD) is now pretty well supported for fast charging, albeit usually at a slower speed than the in-box charger. When supported, Quick Charge is notably slower. Phones that use USB PD as their default charging tech also perform better when swapping cables and chargers than those that use proprietary standards. See how the  Samsung Galaxy S20 compares to the  OnePlus 8 Pro, for example.\n While this is a step in the right direction, USB Power Delivery is quickly suffering from standard fragmentation too. The introduction of  Programmable Power Supply (PPS) in the USB PD 3.0 spec led to great confusion about 45W fast charging with the  Samsung Galaxy Note 10 Plus. Now consumers don\u2019t just have to look out for USB Power Delivery, they also need the PPS variant for some devices. Confused?\n  45W charging with the Note 10 Plus requires USB PD 3.0 PPS, not regular USB PD. Confused?\n   We\u2019ve continued to explore the  discrepancies in charging support for Power Delivery and Quick Charge standards in a wider range of devices too. We\u2019ve compared this to boxed charger speeds and support from generic USB 2.4A ports. You can find the data in the table below. Results highlighted green provide good fast charging support, while yellow indicates an OK implementation, and red a failure to support the standard in question at a decent speed.\n   The notable trend over the past couple of generations is that USB Power Delivery support has overtaken Quick Charge 3.0. Although this could be in part due to  Quick Charge 4\u2019s compatibility with Power Delivery. USB PD is increasingly supported by laptops and tablets for charging too, making it more likely you can find a single USB-C adapter for all your gadgets.\n  Support for Quick Charge has wained, but USB Power Delivery now widely supports fast charging.\n  USB Power Delivery speeds hover around 15W typical, while Quick Charge 3.0 is often below 9W. However, the mixed bag of results highlights the broader issue perfectly. There\u2019s a huge range of speed results here. Smartphones also often hide support for these standards in a spec table and even then there\u2019s no guarantee that consumers know what these standards mean. Even if a phone supports both third-party standards, it may charge significantly slower than when using the boxed charger.\n  Ultimately there\u2019s still very little consistency about the charging speed of smartphones and no easy way for consumers to know if, or how well a handset will charge using any given standard. This becomes even less clear when products start using bi-directional charging capabilities, such as charging your phone from your laptop\u2019s USB port.\n   Charging is still overly complicated then, and it\u2019s the same situation with data transfer speeds. USB-C support 2.x, 3.x, and Thunderbolt speeds for some ports, which is confusing enough. However, cables also have to be specifically rated to meet higher speed requirements.\n The  introduction of USB 3.2 and its ridiculous Gen 1 and Gen 2 branding threw up another hurdle for those trying to get their head around the increasingly complicated naming scheme. Just days later, the  USB 4 announcement drained any remaining comprehension from consumers and developers alike. USB 4 claims to \u201cminimize end-user confusion\u201d, as it mandates a USB-C connector and USB PD support, but it still offers a confusing array of optional features, such as Thunderbolt 3 on just some devices. Even so, it will be a long time before USB 4 devices permeate the market in sufficient numbers to make any difference. Unfortunately, consumers still have to wade through this branding quagmire to figure out what\u2019s supported.\n  There&#39;s no way to tell if a USB-C cable supports high current charging or 4.0 data speeds just by looking at it.\n   The USB data naming scheme is undoubtedly a mess. This table below will hopefully help to sort out what each specification offers you.\n   Devices and cables are just as problematic when it comes to supporting \u201cAlternate Modes\u201d and other protocols. These fall under the USB-C specification rather than the port\u2019s data speed specification. These include DisplayPort, MHL, HDMI, Ethernet, and  audio functionality provided over the connector, all of which rely on the connected devices and cables to support them. These are not a compulsory part of the port specification, as capabilities and needs clearly vary from device to device. USB 4, for example, introduces DisplayPort 4.1a and PCI Express data support, but you don\u2019t need that on a battery pack.\n The problem with this is that certain functionality that a user might expect in a product isn\u2019t necessarily provided. Consumers may assume HDMI or Ethernet are supported over a USB-C port if a laptop is missing the regular ports, but that might not be the case. Even more frustratingly, functionality might only be restricted to specific Type-C ports on the device. You might have 3 ports but only one that offers the functions you want.\n  USB-C is compatible with lots of features, but not every port supports everything. USB 4 does too little too late to help.\n  USB-C makes functionality more opaque, not less. It claims to do everything, yet there\u2019s still no guarantee a product will actually work with any of these features. USB 4 may help unify some feature compatibility, but I doubt it will help end confusion while USB-C 3.1 and older ports still exist. The sheer range of legacy devices and remaining optional standards means that USB-C port capabilities remain unknown at a glance. Even when more detailed information is available and ports are correctly marked with the appropriate branding, making heads and tails of the various modes and jargon can be a lot of information for someone to digest when all they want is something that works.\n    This brings us nicely to the biggest problem with the reversible USB port, at least with smartphones: there\u2019s a lack of them on devices. A single port for audio and power is already proving problematic in the handset space, with consumers reaching for dongles and hubs to fix the issue at their inconvenience. However, this opens up a whole new world of compatibility problems, such as whether your hub or dongle supports the same charging method or standard for bi-directional power, or if data can still pass through to another device.\n  Trial and error is often the only way to figure out what a USB-C port supports.\n  It\u2019s a similar situation with a number of the latest laptops on the market. Although this is device-dependent, as some new models sport charging, audio, and other features on multiple USB-C ports. Even so, ditching the power socket for USB-C instantly reduces your peripheral count when powering up the device, which is particularly frustrating considering most laptops only have a couple of available ports to begin with. Users are increasingly forced towards dongles to connect up to legacy ports that are still ubiquitous in other marketplaces.\n  Part of this is due to the fact that although USB-C has made its way to laptops, it\u2019s still rarer to find on mainstream displays and common accessories. All the new port has done is push some components out of the laptop and onto the other end of the cable. Not exactly a consumer-friendly move, given the prices often charged simply to regain the functionality of older products.\n   Cable compatibility, arguably the most frustrating of USB-C\u2019s problems, stems from legacy support for slower devices and the introduction of higher-speed use cases like video data. USB 2.0 features just four-pin connectors for data and power, while 3.0 cables increases this to eight. So USB-C to A cables, which are commonly used for charging, can come in 2.0, 3.0, and 3.1 varieties, which affects the amount of data and power they can handle. USB Power Delivery is backward compatible and so is the best option for charging up devices using older cable types and speeds, but the prevalence of proprietary standards means consumers rarely really know what they are getting.\n Cable quality, rating, and length affect the features available over a USB-C port. Some cables even breach the standard!\n Cable quality also comes into play here, as some charging standards will detect how much power a cable can handle and set the appropriate charging speed. In our earlier example, Huawei\u2019s technology requires a 5A rating to charge at full speed (but breaks spec and doesn\u2019t work with the Pixel 4). This is why longer cables from third parties won\u2019t always offer the same speeds as the smaller ones included with your phone.\n If that wasn\u2019t complicated enough, the introduction of high-speed data and real-time video transfer has introduced new problems. Very fast signals suffer from attenuation and clock jitter when transferred over long distances, meaning data can get lost along the way. To address this issue cables can also come in passive or active varieties. Active cables include redrivers\u00a0to restore the signal amplitude and prevent a loss in signal quality over long distances. So long cables used for very high data speeds (such as sending 4K 60fps video or data over Thunderbolt) require active components in them, while basic charging and data transfers can get away with a standard passive cable that\u2019s less than two meters long.\n  DisplayPort, MHL, HMDI, and Thunderbolt are supported via passive USB Type-C cables at less than two meters if they carry the\u00a0\u201ctrident\u201d SuperSpeed USB logo or less than one meter for\u00a0SuperSpeed+ labeled cables. Active cables will be required for further distances and you\u2019ll have to look out for the Thunderbolt logo if you want 40Gbps speeds. Passive adapter cables to other USB types won\u2019t support any of these modes.\n  Feature compatibility issues also involve the port and device in question, which can be configured for a wide selection of charging speeds, legacy standards, and alternate modes. USB-C is a more complex port than its predecessors, requiring substantially more software and hardware input to get things working correctly.\n The starting point for USB-C products is the Power Delivery protocol. This isn\u2019t just about charging, it\u2019s also how the port communicates support for extra features like HDMI and DisplayPort by using the connectors additional pins. All of the Alternate Modes use the Power Delivery Structured Vendor Defined Message (VDM) to discover, configure, enter, or exit these modes. The bottom line is that if your device doesn\u2019t support Power Delivery, it won\u2019t support any of these other features either. Unfortunately, Power Delivery circuitry is more complicated and expensive than the barebones circuity, and the complexity scales up with the number of ports.\n    Even so, this doesn\u2019t mean every Power Delivery port or device will support every feature. It\u2019s up to device manufacturers to include the necessary multiplexers and other ICs alongside the Power Delivery components and regular port connections to support Ethernet, display, and other Alternate Modes.\u00a0The diagram below shows just some of the different component blocks required to scale up the feature set of just a single USB-C port.\n  The port circuitry only becomes more complicated when products want to route and manage multiple signals, such as video or audio, to multiple USB ports. The signal routing becomes increasingly complex and expensive so manufacturers restrict functionality to only one or two ports.\n Even delivering power requires a complicated circuit with USB-C, in order to accommodate for the reversible connector type, the range of power options, and the choice between upward, downward, and bi-directional charging port and data options. To cut down on costs and complexity, not all USB-C ports on a laptop or PC sport everything. USB 4 aims to help by mandating a few features, but that seems unlikely to help if devices mix and match new and old standards to save on costs and complexity.\n   USB-C\u2019s complexity is undoubtedly its undoing. Although the idea of one cable to support everything sounds very useful, the reality has quickly become a convoluted combination of proprietary versus on-spec products, differing cable qualities and capabilities, and opaque feature support. The result is a standard that looks simple to use but quickly leads to consumer frustration as there is no clear indication as to why certain cables and features don\u2019t work across devices.\n  At the same time, product developers are facing a similarly frustrating situation. Supporting the full range of advanced USB-C features is a complex engineering feat, far more so than previous USB generations. Furthermore, the increasing number of components and connectors is raising development costs and deployment time. While there are now more integrated ICs and USB 4 to ease compatibility, the sheer range of options and features in the latest specification makes implementation expensive and time-consuming.\n  Not all USB-C ports or cables are equal. Despite efforts to unify, USB 4 can&#39;t fix the compatibility problem.\n  USB 4 is a mixed attempt to unify the USB-C port, and it certainly can\u2019t solve the problem on its own. Better labeling could help consumers identify which cables and products support which features \u2014 so far the naming schemes and logos have been rather unfriendly for casual glances. Mandatory cable and port coloring, as was the case with USB 3.0 ports, could help, but it kind of defeats the whole purpose of this one size fits all solution. An even more strictly enforced standard is needed to help consumers get their heads around compatibility will help.\n  Unfortunately, the USB-C ecosystem is more, not less convoluted in 2020 than it was when I first looked at this issue back in 2018. The announcement of USB 3.2 and USB 4 makes the standard more complex without giving the end-user clear information about what\u2019s supported. While the growth in USB Power Delivery support is a good sign, the introduction of PPS has already hampered any hopes that the industry might soon coalesce around a single charging standard. The USB spec changes every year, making it impossible for consumers to keep up.\n Years later, I still don\u2019t see a clear way out of this confusing mess.\n  Looking for some more data-based analysis else to dig your teeth into? Check out some of our testing content below:", "posttime": "2020-06-06 08:51:31", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "2020,\u73b0\u5728,usb", "title": "\u73b0\u5728\u662f2020\u5e74\uff0cUSB-C\u4ecd\u7136\u4e00\u56e2\u7cdf", "title_en": "It's 2020 and USB-C Is Still a Mess", "transed": 1, "url": "https://www.androidauthority.com/state-of-usb-c-870996/", "via": "", "real_tags": ["2020", "\u73b0\u5728", "usb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005382, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u8bba\u6587\u4ecb\u7ecd\u4e86\u4e00\u9879\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u827a\u672f\u5bb6\u4eec\u7ed8\u5236\u4e86\u65e8\u5728\u4f20\u8fbe\u7279\u5b9a3D\u5f62\u72b6\u7684\u7ebf\u6761\u753b\u3002\u8fd9\u9879\u7814\u7a76\u7684\u76ee\u7684\u662f\u4f7f\u7ed8\u56fe\u53ef\u4ee5\u4e0e3D\u6a21\u578b\u7684\u6e32\u67d3\u56fe\u50cf\u914d\u51c6\uff0c\u4ece\u800c\u652f\u6301\u5bf9\u827a\u672f\u5bb6\u7684\u4f4d\u7f6e\u4e0e\u5176\u4ed6\u827a\u672f\u5bb6\u7684\u4f4d\u7f6e\u3001\u4e0e\u5f53\u524d\u7684\u8ba1\u7b97\u673a\u56fe\u5f62\u7ebf\u5b9a\u4e49\u4ee5\u53ca\u4e0e3D\u8868\u9762\u7684\u57fa\u672c\u5dee\u5f02\u5c5e\u6027\u7684\u5173\u8054\u7a0b\u5ea6\u7684\u5206\u6790\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u827a\u672f\u5bb6\u7ed8\u5236\u7684\u7ebf\u6761\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u76f8\u4e92\u91cd\u53e0\u7684(75%\u4e0e\u53e6\u4e00\u6761\u7ebf\u6761\u7684\u8ddd\u79bb\u57281\u6beb\u7c73\u4ee5\u5185)\uff0c\u7279\u522b\u662f\u6cbf\u7740\u7269\u4f53\u7684\u906e\u6321\u8f6e\u5ed3\u3002\u5927\u591a\u6570\u4e0d\u4e0e\u7b49\u9ad8\u7ebf\u91cd\u53e0\u7684\u7ebf\u91cd\u53e0\u56fe\u50cf\u5f3a\u5ea6\u7684\u5927\u68af\u5ea6\uff0c\u5e76\u4e14\u4e0e\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u6700\u8fd1\u7684\u7ebf\u6761\u7ed8\u5236\u7b97\u6cd5\u6240\u4f5c\u7684\u9884\u6d4b\u5bc6\u5207\u76f8\u5173\u300214%\u7684\u4eba\u4e0d\u80fd\u5f88\u597d\u5730\u63cf\u8ff0\u8fd9\u9879\u7814\u7a76\u4e2d\u8003\u8651\u7684\u4efb\u4f55\u5f53\u5730\u5c5e\u6027\u3002\u6211\u4eec\u5de5\u4f5c\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u516c\u5f00\u53ef\u7528\u7684\u5bf9\u9f50\u7ed8\u56fe\u7684\u6570\u636e\u96c6\uff0c\u6839\u636e3D\u6a21\u578b\u7684\u672c\u5730\u5c5e\u6027\u5206\u6790\u7ebf\u6761\u5728\u8be5\u6570\u636e\u96c6\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u9884\u6d4b\u827a\u672f\u5bb6\u5c06\u5728\u54ea\u91cc\u4e3a\u65b0\u573a\u666f\u7ed8\u5236\u7ebf\u6761\u7684\u7b97\u6cd5\u3002\nForrester Cole\uff0cAleksey Golovinski\uff0cAlex Limpaecher\uff0cHeather Stoddart Barros\uff0cAdam Finkelstein\uff0cThomas Funkhoer\u548cSzymon Rusinkiewicz\u3002\u4eba\u4eec\u5728\u54ea\u91cc\u5212\u7ebf\uff1fACM\u56fe\u5f62\u4ea4\u6613(\u6d41\u7a0b\u3002(SIGGRAPH)27(3)\uff0c2008\u5e748\u6708\u3002@\u6587\u7ae0{\u79d1\u5c14\uff1a2008\uff1aWDP\uff0c\u4f5c\u8005Forrester Cole\u548cAleksey Golovinski\u4ee5\u53caAlex Limpaecher\u548cHeather Stoddart Barros\u4ee5\u53caAdam Finkelstein\u548cThomas Funkhoer\u548cSzymon Rusinkiewicz&#34\uff1b\uff0ctitle=#34\uff1bPeople Do Where Do Lines\uff1f&#34\uff1b\uff0cJournal=&#34\uff1bACM Transaction on Graphics(\u8fc7\u7a0b.\u3002\u7b26\u53f7)&#34\uff1b\uff0c\u5e74\u4efd=&#34\uff1b2008&#34\uff1b\uff0c\u6708=8\u6708\uff0c\u5377=&#34\uff1b27&#34\uff1b\uff0c\u7f16\u53f7=&#34\uff1b3&#34\uff1b}", "note_en": "This paper presents the results of a study in which artists made line\rdrawings intended to convey specific 3D shapes. The study was designed\rso that drawings could be registered with rendered images of 3D\rmodels, supporting an analysis of how well the locations of the\rartists&#39; lines correlate with other artists&#39;, with current computer\rgraphics line definitions, and with the underlying differential\rproperties of the 3D surface. Lines drawn by artists in this study\rlargely overlapped one another (75% are within 1mm of another line),\rparticularly along the occluding contours of the object.\rMost lines that do not overlap contours\roverlap large gradients of the image intensity, and correlate\rstrongly with predictions made by recent line drawing algorithms in\rcomputer graphics. 14% were not well described by any of the local\rproperties considered in this study. The result of our work is a\rpublicly available data set of aligned drawings, an\ranalysis of where lines appear in that data set based on local\rproperties of 3D models, and algorithms to predict where artists will\rdraw lines for new scenes.\n      Forrester Cole, Aleksey Golovinskiy, Alex Limpaecher, Heather Stoddart Barros, Adam Finkelstein, Thomas Funkhouser, and Szymon Rusinkiewicz. &#34;Where Do People Draw Lines?&#34;  ACM Transactions on Graphics (Proc. SIGGRAPH) 27(3), August 2008.  @article{Cole:2008:WDP, author = &#34;Forrester Cole and Aleksey Golovinskiy and Alex Limpaecher and Heather Stoddart Barros and Adam Finkelstein and Thomas Funkhouser and Szymon Rusinkiewicz&#34;, title = &#34;Where Do People Draw Lines?&#34;, journal = &#34;ACM Transactions on Graphics (Proc. SIGGRAPH)&#34;, year = &#34;2008&#34;, month = aug, volume = &#34;27&#34;, number = &#34;3&#34;}", "posttime": "2020-06-06 08:50:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u4eec,draw,\u7ebf\u6761", "title": "\u4eba\u4eec\u5728\u54ea\u91cc\u5212\u7ebf\uff1f", "title_en": "Where Do People Draw Lines?", "transed": 1, "url": "https://gfx.cs.princeton.edu/pubs/Cole_2008_WDP/", "via": "", "real_tags": ["\u4eba\u4eec", "draw", "\u7ebf\u6761"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005381, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u56db\u4e2a\u6708\u7684\u5bc6\u96c6\u5f00\u53d1\u5de5\u4f5c\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u7b2c\u4e00\u4e2aQStringTokenizer\u63d0\u4ea4\u5df2\u7ecf\u5728\u6700\u7ec8\u6210\u4e3aQt6.0\u7684\u7248\u672c\u4e2d\u5b9e\u73b0\u3002\u533b\u751f\u5e94\u8be5\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u3002\n\u867d\u7136Qt\u4e2d\u7684\u7248\u672c\u5c06\u4ec5\u9002\u7528\u4e8eQt6\uff0c\u4f46KDAB\u5c06\u4e3aQt5\u53d1\u5e03\u6b64\u5de5\u5177\uff0c\u4f5c\u4e3a\u5176KDToolBox\u751f\u4ea7\u529b\u5957\u4ef6\u7684\u4e00\u90e8\u5206\u3002\u662f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4ee3\u7801\u4e0d\u9700\u8981C++17\uff0c\u5728\u7eafC++11\u4e2d\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\u3002\n\u4e09\u5e74\u524d\uff0c\u5f53QStringView\u7b2c\u4e00\u6b21\u5408\u5e76\u5230Qt5.10\u65f6\uff0c\u6211\u5df2\u7ecf\u5199\u8fc7\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u5728QStringView\u4e0a\u6709\u50cfQString\uff1a\uff1aSplit()\u8fd9\u6837\u7684\u65b9\u6cd5\u3002QStringView\u5b8c\u5168\u662f\u5173\u4e8e\u96f6\u5185\u5b58\u5206\u914d\u7684\uff0cSplit()\u8fd4\u56de\u5206\u914d\u5185\u5b58\u7684\u90e8\u4ef6(\u6bd4\u5982QVector)\u7684\u6240\u5c5e\u5bb9\u5668\u3002\n\u90a3\u4e48\uff0c\u5982\u679c\u4e0d\u5728\u5bb9\u5668\u4e2d\uff0c\u5982\u4f55\u8fd4\u56de\u5b57\u7b26\u4e32\u62c6\u5206\u7684\u7ed3\u679c\u5462\uff1f\u60a8\u53ef\u4ee5\u4eceC++20\u7684std\uff1a\uff1arange\u4e2d\u5f97\u5230\u542f\u793a\uff0c\u5b9e\u73b0\u4e00\u4e2aLazy\u5e8f\u5217\u3002\u60f0\u6027\u5e8f\u5217\u7c7b\u4f3c\u4e8e\u5bb9\u5668\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u7684\u5143\u7d20\u4e0d\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u662f\u52a8\u6001\u8ba1\u7b97\u3002\u5728C++20\u534f\u540c\u7a0b\u5e8f\u672f\u8bed\u4e2d\uff0c\u5b83\u88ab\u79f0\u4e3a\u751f\u6210\u5668\u3002\n\u56e0\u6b64\uff0cQStringTokenizer\u662f\u4e00\u4e2a\u4ee4\u724c\u751f\u6210\u5668\uff0c\u9664\u4e86\u5b83\u7684\u8f93\u5165\u4e4b\u5916\uff0c\u5b83\u53ea\u4fdd\u5b58\u5e38\u91cf\u5185\u5b58\u3002\n\u5f53\u6211\u57282017\u5e74\u6700\u521d\u6784\u601dQStringTokenizer\u65f6\uff0c\u6211\u4ee5\u4e3a\u5b83\u53ea\u4f1a\u5728QStringView\u4e0a\u8fd0\u884c\uff0c\u4ec5\u6b64\u800c\u5df2\u3002\u4f46\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u6e05\u695a\u5730\u8868\u660e\uff0c\u5b83\u8fd8\u652f\u6301\u62c6\u5206QLatin1String\u3002\u90a3\u4ef6\u4e8b\u600e\u4e48\u53ef\u80fd\uff1f\n\u8fd9\u5c31\u662fC++17\u7684\u7528\u6b66\u4e4b\u5730\uff0cQt6.0\u5c06\u4f9d\u8d56\u4e8e\u5b83\u3002C++17\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u7c7b\u6a21\u677f\u53c2\u6570\u63a8\u5bfc(CTAD)\uff1a\n\u8fd9\u5c31\u662f\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u4f7f\u7528\u7684\u3002\u5b9e\u9645\u4e0a\uff0cQStringTokenizer\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u4f46\u662f\u6a21\u677f\u53c2\u6570\u662f\u81ea\u52a8\u63a8\u5bfc\u51fa\u6765\u7684\u3002\n\u56e0\u6b64\uff0c\u8fd9\u5c31\u662fQStringTokenizer\u62c6\u5206QString\u548cQLatin1Strings\u7684\u65b9\u5f0f\uff1a\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662fQStringTokenizer&lt\uff1bQStringView\uff0cQChar&gt\uff1b\uff0c\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662fQStringTokenizer&lt\uff1bQLatin1String\uff0cQChar&gt\uff1b\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff1a\u60a8\u6c38\u8fdc\u4e0d\u5e94\u8be5\u81ea\u5df1\u663e\u5f0f\u5730\u6307\u5b9a\u6a21\u677f\u53c2\u6570\uff0c\u56e0\u4e3a\u60a8\u5f88\u53ef\u80fd\u4f1a\u5f04\u9519\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5fae\u5999\u7684\u548c\u975e\u76f4\u89c2\u7684\u3002\u53ea\u8981\u8ba9\u7f16\u8bd1\u5668\u5b8c\u6210\u5b83\u7684\u5de5\u4f5c\u5c31\u884c\u4e86\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u8fd8\u4e0d\u80fd\u4f9d\u8d56C++17\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5de5\u5382\u51fd\u6570qTokenize()\uff1a\n\u5982\u679cQStringTokenizer\u53ea\u662f\u5bf9QStringView\u6216QLatin1String\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u4f1a\u53d1\u751f\u4ee5\u4e0b\u60c5\u51b5\uff1a__range\u53d8\u91cf\u4f7fQStringTokenizer\u5bf9\u8c61\u5728\u6574\u4e2afor\u5faa\u73af\u4e2d\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001(ok\uff01)\uff0c\u4f46\u662f\u4ecewidget-&gt\uff1btext()\u8fd4\u56de\u7684\u4e34\u65f6\u4fe1\u606f\u5728\u7b2c3\u884c\u751a\u81f3\u5728\u6211\u4eec\u8fdb\u5165for\u5faa\u73af\u4e4b\u524d\u5c31\u5df2\u7ecf\u9500\u6bc1\u4e86(OOPS)\u3002\n\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u4f46\u6211\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u53cd\u5bf9\u5b83\u5462\uff1f\u89e3\u51b3\u65b9\u6848\u65e2\u7b80\u5355\u53c8\u590d\u6742\uff1a\u68c0\u6d4b\u4e34\u65f6\u53d8\u91cf\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u8bb0\u53f7\u8d4b\u503c\u5668\u4e2d\u3002\n\u662f\u7684\uff0c\u60a8\u542c\u5230\u7684\u6ca1\u9519\uff1a\u5982\u679c\u60a8\u5c06\u62e5\u6709\u5bb9\u5668\u7684\u4e34\u65f6(\u201crvalue\u201d)\u4f20\u9012\u7ed9QStringTokenizer\uff0c\u8be5\u5bf9\u8c61\u5c06\u5305\u542b\u4e00\u4e2a\u526f\u672c(\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u4ece\u53c2\u6570\u4e2d\u79fb\u51fa)\uff0c\u4ee5\u5c06\u5b57\u7b26\u4e32\u7684\u751f\u5b58\u671f\u6269\u5c55\u5230QStringTokenizer\u672c\u8eab\u7684\u751f\u5b58\u671f\u3002\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u8fd9\u9879\u6280\u672f\uff0c\u6211\u4eec\u975e\u5e38\u671f\u5f85\u5b83\u4e5f\u80fd\u5728Qt6.0 for QStringBuilder\u4e2d\u4f7f\u7528\u3002\n\u5728Qt6.0\u4e2d\uff0c\u6211\u4eec\u9884\u8ba1QStringTokenizer\u8fd8\u53ef\u4ee5\u5c06\u5f53\u65f6\u53ef\u7528\u7684QUtf8StringView\u5904\u7406\u4e3a\u5927\u6d77\u635e\u9488\uff0c\u4ee5\u53ca\u5c06QRegularExpression\u548cstd\uff1a\uff1aboyer_moore_searcher\u548cstd\uff1a\uff1aboyer_moore_horspool_searcher\u5904\u7406\u4e3a\u9488\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u652f\u6301\u5b83\u4eec\u7684\u7f16\u8bd1\u5668\u4e0a\u5c06\u5176\u91cd\u65b0\u5b9e\u73b0\u4e3aC++20\u534f\u7a0b\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6211\u4eec\u5c06\u4ece\u4e2d\u83b7\u5f97\u591a\u5927\u7684\u6027\u80fd\u3002\nQStringTokenizer\u901a\u7528\u4e14\u5b89\u5168\u5730\u62c6\u5206\u5b57\u7b26\u4e32\uff0c\u5185\u5b58\u5206\u914d\u4e3a\u96f6\u3002\u73b0\u5728\u5c31\u4eceKDToolBox\u514d\u8d39\u83b7\u53d6\u5b83\uff0c\u60a8\u53ef\u4ee5\u7740\u773c\u4e8eQt6\u6765\u9a8c\u8bc1\u60a8\u7684\u4ee3\u7801\u7684\u672a\u6765\u3002", "note_en": "After four months of intensive development work, I am happy to announce that the  first QStringTokenizer commits have landed in what will eventually become Qt 6.0.  The docs should show up, soon.\n While the version in Qt will be Qt 6-only, KDAB will release this tool for Qt 5 as part of its  KDToolBox productivity suite. Yes, that means the code doesn\u2019t require C++17 and works perfectly fine in pure C++11.\n    Three years ago,  when QStringView was first merged for Qt 5.10, I already wrote that we wouldn\u2019t want to have a method like  QString::split() on QStringView.  QStringView is all about zero memory allocations, and split() returns an owning container of parts, say  QVector, allocating memory.\n So how do you return the result of string splitting, if not in a container? You take a cue from C++20\u2019s  std::ranges and implement a  Lazy Sequence. A Lazy Sequence is like a container, except that it\u2019s elements aren\u2019t stored in memory, but calculated on the fly. That, in C++20 coroutine terms, is called a  Generator.\n So, QStringTokenizer is a Generator of tokens, and, apart from its inputs, holds only constant memory.\n        When I initially conceived QStringTokenizer in 2017, I thought it would just work on QStringView and that\u2019d be it. But the last example clearly shows that it also supports splitting  QLatin1String. How is that possible?\n This is where C++17 comes in, on which Qt 6.0 will depend. C++17 brought us  Class Template Argument Deduction (CTAD):\n  And that\u2019s what we used in the examples above. In reality, QStringTokenizer is a template, but the template arguments are deduced for you.\n So, this is how QStringTokenizer splits QStrings as well as QLatin1Strings: in the first case, it\u2019s QStringTokenizer&lt;QStringView, QChar&gt;, in the second, QStringTokenizer&lt;QLatin1String, QChar&gt;. But be warned: you should never, ever, explicitly specify the template arguments yourself, as you will likely get it wrong, because they\u2019re subtle and non-intuitive. Just let the compiler do its job. Or, if you can\u2019t rely on C++17, yet, you can use the factory function qTokenize():\n         if QStringTokenizer simply operated on QStringView or QLatin1String, the following would happen: The __range variable keeps the QStringTokenizer object alive throughout the for loop (ok!), but the temporary returned from widget-&gt;text() would have been destroyed in line 3, even before we enter the for loop (oops).\n This is not desirable, but what can we do against it? The solution is as simple as it is complex: detect temporaries and store them inside the tokenizer.\n Yes, you heard that right: if you pass a temporary (\u201crvalue\u201d) owning container to QStringTokenizer, the object will contain a copy (moved from the argument if possible) to extend the string\u2019s lifetime to that of the QStringTokenizer itself.\n  Now that we have developed the technique, we very strongly expect it to be used in Qt 6.0 for QStringBuilder, too.\n By Qt 6.0, we expect QStringTokenizer to also handle the then-available  QUtf8StringView as haystack and needle, as well as  QRegularExpression and  std::boyer_moore_searcher and  std::boyer_moore_horspool_searcher as needles. We might also re-implement it as a C++20 coroutine on compilers that support them, depending on how much more performance we\u2019ll get out of it.\n  QStringTokenizer splits strings, with zero memory allocations, universally, and safely. Get it for free right now from  KDToolBox, and you can future-proof your code with an eye towards Qt 6.", "posttime": "2020-06-06 08:49:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b57\u7b26\u4e32,diaries,qstringtokenizer", "title": "QStringView\u65e5\u8bb0\uff1a\u96f6\u5206\u914d\u5b57\u7b26\u4e32\u62c6\u5206", "title_en": "QStringView Diaries: Zero-Allocation String Splitting", "transed": 1, "url": "https://www.kdab.com/qstringview-diaries-zero-allocation-string-splitting/", "via": "", "real_tags": ["\u5b57\u7b26\u4e32", "diaries"]}, {"category": "", "categoryclass": "", "imagename": "fb383587c3e8e5012ee1652c34aa41ea.png", "infoid": 1005379, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u5e74\u5e95\uff0cFacebook\u5ba3\u5e03\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u4e0a\u4f20\u7684\u7167\u7247\u8fc1\u79fb\u5230Google Photos\u3002\u8be5\u5de5\u5177\u6700\u521d\u5728\u7231\u5c14\u5170\u53ef\u7528\uff0c\u5e76\u8ba1\u5212\u5728\u4eca\u5e74\u4e0a\u534a\u5e74\u6269\u5c55\u5230\u66f4\u591a\u56fd\u5bb6\u3002\u8fd9\u5bb6\u793e\u4ea4\u7f51\u7edc\u57284\u6708\u4efd\u5c06\u63a8\u5e7f\u8303\u56f4\u6269\u5927\u5230\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\uff0c\u73b0\u5728\u5df2\u7ecf\u8fbe\u5230\u4e86\u4eca\u5929\u7684\u5168\u7403\u63a8\u5e7f\u6c34\u5e73\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u8ba1\u5212\u3002\n\u4eca\u5929\uff0c\u6211\u4eec\u5373\u5c06100%\u63a8\u51fa\u6211\u4eec\u7684\u7167\u7247\u548c\u89c6\u9891\u4f20\u8f93\u5de5\u5177\uff0c\u4f7f\u4eba\u4eec\u53ef\u4ee5\u5c06\u4ed6\u4eec\u7684\u7167\u7247\u76f4\u63a5\u79fb\u690d\u5230Google Photos\u3002\n\u901a\u8fc7\u8fd9\u4e00\u63a8\u51fa\uff0c\u8be5\u5de5\u5177\u73b0\u5728\u53ef\u4f9bfacebook\u4e0a\u7684\u6240\u6709\u4eba\u4f7f\u7528\uff1ahttps://t.co/1pck8PQoEe https://t.co/WBCeJGmMwp pic.twitter.com/ivHSgXNpbl\u3002\n\u8fd9\u4e00\u65f6\u673a\u53ef\u80fd\u662f\u5de7\u5408\uff0c\u4f46\u8003\u8651\u5230\u6700\u8fd1\u56f4\u7ed5Facebook\u7684\u4e89\u8bae\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4eba\u8003\u8651\u5c06\u4ed6\u4eec\u7684\u7167\u7247\u548c\u89c6\u9891\u8f6c\u79fb\u5230\u5176\u4ed6\u5730\u65b9\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u5c06\u5185\u5bb9\u79fb\u81f3Google Photos\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u51e0\u5468\u524d\u53d1\u5e03\u7684\u5206\u6b65\u6307\u5357\u3002\nFacebook\u4e4b\u524d\u5728\u4e9a\u6d32\u3001\u975e\u6d32\u3001\u6b27\u6d32\u548c\u62c9\u4e01\u7f8e\u6d32\u7684\u8bb8\u591a\u5730\u533a\u63d0\u4f9b\u4e86\u8be5\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u8fc7\u7a0b\uff1a\u4ece\u8138\u4e66\u7684\u5e38\u89c4\u8bbe\u7f6e\u4e2d\uff0c\u9009\u62e9\u201c\u8138\u4e66\u4fe1\u606f\u2192\u4f20\u8f93\u4f60\u7684\u7167\u7247\u6216\u89c6\u9891\u7684\u526f\u672c\u201d\u3002\u7136\u540e\uff0c\u53ea\u9700\u6309\u7167\u63d0\u793a\u64cd\u4f5c\u5373\u53ef\u3002\n\u8be5\u5de5\u5177\u6765\u81eaFacebook\u3001Google\u3001Twitter\u548c\u5fae\u8f6f\u7684\u8054\u5408\u6570\u636e\u4f20\u8f93\u9879\u76ee-\u8fd9\u662f\u4e00\u9879\u7b26\u5408GDPR\u7684\u5021\u8bae\uff0c\u65e8\u5728\u4f7f\u4e2a\u4eba\u6570\u636e\u66f4\u5177\u79fb\u52a8\u6027\u3002\u9664\u4e86\u4e0b\u8f7d\u526f\u672c\u6216\u5c06\u5176\u5bfc\u51fa\u5230Google Photos\u4e4b\u5916\uff0c\u7528\u6237\u6700\u7ec8\u5c06\u6709\u66f4\u591a\u7684\u7167\u7247\u76ee\u7684\u5730\u9009\u62e9\uff0c\u5c3d\u7ba1Facebook\u5e76\u672a\u8bf4\u660e\u662f\u54ea\u4e2a\u76ee\u7684\u5730\u3002", "note_en": "Late last year,  Facebook announced a tool to let users easily migrate their uploaded photos to Google Photos. The tool was initially available in Ireland, with plans to expand to more countries in the first half of this year. The social network has made good on those plans by expanding the rollout to the US and Canada in April, and now reaching a global rollout today.\n   Today, we are reaching 100% rollout of our photo and video transfer tool that enables people to port their photos directly to Google Photos.\n With this rollout, the tool is now available globally to everyone on Facebook:  https://t.co/1pck8PQoEe  https://t.co/WBCeJGmMwp  pic.twitter.com/IvHSgXNpbl\n  The timing may be coincidental, but given the recent controversies surrounding Facebook, there may be a lot of people looking into moving their photos and videos elsewhere. If you&#39;re looking for instructions to get that content moved over to Google Photos, check out the  step-by-step guide we posted a couple weeks ago.\n Facebook previously made the tool available in a number of regions throughout Asia, Africa, Europe, and Latin America. It&#39;s a pretty straightforward process: from the general Facebook settings, select\u00a0 Your Facebook Information \u2192Transfer a Copy of Your Photos or Videos.\u00a0From there, just follow the prompts.\n  The tool came out of the joint  Data Transfer Project by Facebook, Google, Twitter, and Microsoft \u2014 a GDPR-compliant initiative to make personal data more mobile. In addition to downloading a copy or exporting it to Google Photos, users will eventually have more destination options for their photos, although Facebook hasn&#39;t said which.", "posttime": "2020-06-06 08:14:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,facebook,\u56fe\u7247,tool", "title": "Facebook\u5c06\u56fe\u7247\u5bfc\u51fa\u5230Google Photos\u7684\u5de5\u5177\u73b0\u5df2\u63a8\u51fa", "title_en": "Facebook Tool To Export Pictures To Google Photos Now Available", "transed": 1, "url": "https://www.androidpolice.com/2020/06/04/facebook-tool-to-export-pictures-to-google-photos-now-available-in-us/", "via": "", "real_tags": ["google", "facebook", "\u56fe\u7247", "tool"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005377, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u6211\u5b66\u5230\u4e86\u4e00\u4e9b\u65b0\u4e1c\u897f\u3002\u5f53\u4f60\u6253\u7535\u8bdd\u65f6\uff0c\u4f60\u542c\u5230\u7684\u201c\u94c3\u58f0\u201d\u4e0d\u662f\u7531\u4f60\u7684\u624b\u673a\u3001\u4f60\u7684\u7f51\u7edc\uff0c\u751a\u81f3\u4e0d\u662f\u4f60\u6240\u5728\u7684\u56fd\u5bb6\u4ea7\u751f\u7684\uff0c\u8fd9\u79cd\u566a\u97f3\u662f\u7531\u63a5\u6536\u7aef\u7684\u7535\u8bdd\u7cfb\u7edf\u4ea7\u751f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u8fdb\u884c\u5b9a\u5236\u3002\n\u6211\u5728\u60f3\u529e\u6cd5\u628a\u6211\u6240\u6709\u7684\u7535\u8bdd\u90fd\u5f55\u4e0b\u6765\u3002\u5728iPhone\u4e0a\uff0c\u7531\u4e8e\u9690\u79c1\u6807\u51c6\u7684\u539f\u56e0\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\u3002\u6709\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bb0\u5f55\u4f60\u7684\u901a\u8bdd\uff0c\u4f46\u5b83\u4eec\u53ea\u6709\u5728\u4f60\u7684\u8fd0\u8425\u5546\u652f\u6301\u4e09\u65b9\u901a\u8bdd\u5408\u5e76\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u8d77\u4f5c\u7528\uff0c\u800c\u6211\u7684\u8fd0\u8425\u5546\u4e0d\u652f\u6301\u3002\n\u6211\u5bf9\u7535\u8bdd\u7cfb\u7edf\u4e86\u89e3\u5f97\u8d8a\u591a\uff0c\u6211\u5c31\u610f\u8bc6\u5230\u5b83\u4eec\u975e\u5e38\u50cf\u7535\u5b50\u90ae\u4ef6\uff1b\u53e4\u8001\u3001\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u5b89\u5168\u3001\u5f88\u5bb9\u6613\u88ab\u64cd\u7eb5\uff0c\u6765\u7535\u663e\u793a\u6b3a\u9a97\u975e\u5e38\u5bb9\u6613\u505a\u5230\u3002\n\u8fd9\u4e9b\u6b65\u9aa4\u603b\u7ed3\u4e86\u8be5\u65b9\u6cd5\u3002\u6211\u9f13\u52b1\u4f60\u4e0b\u8f7d\u5e76\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684PBX\uff0c\u8fd9\u662f\u5728\u4efb\u4f55\u7b80\u5386\u4e0a\u90fd\u6709\u7684\u4e00\u9879\u5f88\u597d\u7684\u6280\u80fd\u3002\n\u4e3a\u81ea\u5df1\u627e\u4e00\u4e2aSIP VOIP\u7535\u8bdd\u670d\u52a1\u63d0\u4f9b\u5546\u6216\u4e2d\u7ee7\u63d0\u4f9b\u5546\uff0c\u6211\u4f7f\u7528SIPGATE Basic\uff0c\u56e0\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u514d\u8d39\u7684Basic\u5305\u3002\u60a8\u9700\u8981\u8bb0\u4e0b\u60a8\u7684SIP ID\u548c\u5bc6\u7801\uff0c\u8fd9\u4e0e\u60a8\u7528\u6765\u6ce8\u518c\u670d\u52a1\u7684\u51ed\u636e\u4e0d\u540c\u3002\n\u90e8\u7f72FreePBX\u5b9e\u4f8b\u3002FreePBX\u662f\u57fa\u4e8eWeb\u7684\u5f00\u6e90GUI\uff0c\u7528\u4e8e\u63a7\u5236\u548c\u7ba1\u7406\u5f00\u6e90\u901a\u4fe1\u670d\u52a1\u5668Asterisk(PBX)\u3002\u4eceISO\u542f\u52a8\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u81ea\u52a8\u5b89\u88c5\u7a0b\u5e8f\uff0c\u60a8\u73b0\u5728\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u5b8c\u5168\u6210\u719f\u7684\u7535\u8bdd\u7cfb\u7edf\u3002\u6309\u7167\u4ed6\u4eec\u7684\u5165\u95e8\u6307\u5357\u4ece\u6b65\u9aa41\u5f00\u59cb\u914d\u7f6e\u60a8\u7684PBX\u548c\u60a8\u7684\u7535\u8bdd\u63d0\u4f9b\u5546\uff0c\u8bbe\u7f6e\u60a8\u7684\u7b2c\u4e00\u4e2a\u5206\u673a\u3001\u5165\u7ad9\u8def\u7531\u5e76\u5c06\u97f3\u4e50\u4e0a\u8f7d\u4e3a\u4fdd\u7559\u97f3\u4e50\u3002\n\u4e3a\u60a8\u7684\u5206\u673a\u542f\u7528Find Me/Follow Me\uff0c\u5e76\u542f\u7528\u2018Play Music on Hold\u2019\u9009\u62e9\u60a8\u4e0a\u4f20\u7684\u6b4c\u66f2\u3002\n\u4e0b\u8f7d\u5e76\u5728\u60a8\u7684\u7535\u8bdd\u4e0a\u5b89\u88c5SIP\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u63a5\u542c\u7535\u8bdd\uff0c\u6211\u4e2a\u4eba\u4f7f\u7528\u7684\u662fAcrobits\u8f6f\u4ef6\u7535\u8bdd\u3002", "note_en": "Today I learnt something new. The \u2018ring ring\u2019 you hear when you make a phone call isn\u2019t generated by your phone, your network or even the country you\u2019re in, that noise is generated by the receiving ends phone system, and this means it can be customized.\n I was trying to find a way of recording all my phone calls. On an iPhone this isn\u2019t very easy due to privacy standards. There are lots of apps that offer to record your calls but they only work if your carrier supports 3-way call merging which mine does not.\n The more I learn about phone systems I realise they are very much like email; ancient, insecure by default and easily manipulated, caller ID spoofing is very easy to do.\n    These steps summarise the method. I encourage you to download and setup your own PBX it\u2019s a great skill to have on any CV.\n Find yourself a SIP VOIP telephone service provider or trunk provider, I use  sipgate basic because they offer a basic package for free. You\u2019ll want to make note of your SIP ID and password, this is different to the credentials you use to register for the service.\n Deploy an instance of  FreePBX. \u201cFreePBX is a web-based open source GUI that controls and manages Asterisk (PBX), an open source communication server.\u201d Boot from the ISO and there is an automated installer, you now have yourself a fully fledged phone system. Follow their getting started guide to configure your PBX with your phone provider from step 1, setup your first extension, inbound route and upload the music as hold music.\n Enable Find Me/Follow Me for your extension and enable \u2018 Play Music On Hold\u2019 selecting the song you have uploaded\n  Download and install a SIP client on your phone so you can recieve calls, personally I use  Acrobits Softphone.", "posttime": "2020-06-06 08:12:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f8f\u7f57\u7eaa,ring,\u7535\u8bdd", "title": "\u7528PBX\u7528\u4f8f\u7f57\u7eaa\u516c\u56ed\u4e3b\u9898\u66f2\u4ee3\u66ff\u201c\u6212\u6307\u201d", "title_en": "Replacing 'ring ring' with the Jurassic Park theme song using a PBX", "transed": 1, "url": "https://jkpe.net/replacing-ring-ring-jurassic-park-theme-song-using-pbx/", "via": "", "real_tags": ["\u4f8f\u7f57\u7eaa", "ring", "\u7535\u8bdd"]}, {"category": "", "categoryclass": "", "imagename": "11c20c18e326fb1b16c5d66d6dd5dee1.jpeg", "infoid": 1005376, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u521a\u521a\u4e0e\u6211\u4eec\u7684\u5458\u5de5\u5206\u4eab\u4e86\u4ee5\u4e0b\u6ce8\u610f\u4e8b\u9879\uff0c\u6211\u4e5f\u60f3\u4e0e\u4f60\u4eec\u6240\u6709\u4eba\u5206\u4eab\u3002-\u5f53\u6211\u4eec\u7ee7\u7eed\u5904\u7406\u8fd9\u4ef6\u56f0\u96be\u7684\u4e8b\u65f6.", "note_en": "I just shared the following note with our employees, and I want to share it with all of you as well. --- As we continue to process this difficult...", "posttime": "2020-06-06 07:56:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u4eab,shared", "title": "\u624e\u514b\u4f2f\u683c\uff1a\u6211\u521a\u521a\u548c\u6211\u4eec\u7684\u5458\u5de5\u5206\u4eab\u4e86\u4ee5\u4e0b\u5185\u5bb9", "title_en": "Zuckerberg: I just shared the following note with our employees", "transed": 1, "url": "https://facebook.com/zuck/posts/10111985969467901", "via": "", "real_tags": ["\u5206\u4eab", "shared"]}]