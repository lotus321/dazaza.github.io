[{"category": "", "categoryclass": "", "imagename": "9c71e4cd8a8fa62bde8f0ff11012096a.jpeg", "infoid": 1005456, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1\u6708\u4e0b\u65ec\uff0c\u82f9\u679c\u516c\u53f8\u53d1\u5e03\u4e86\u4e00\u4efd\u540d\u4e3a\u201c\u82f9\u679c\u53d1\u660e\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u672a\u6765\u5934\u76d4\u663e\u793a\u8bbe\u5907\u7684\u5904\u65b9\u955c\u7247\u7cfb\u7edf\u201d\u7684\u62a5\u544a\u3002\u6211\u4eec\u5728\u62a5\u544a\u4e2d\u6307\u51fa\uff0c\u8fd9\u9879\u4e13\u5229\u4e0e\u672a\u6765\u7684\u6df7\u5408\u73b0\u5b9e\u8033\u673a\u6709\u5173\uff0c\u5b83\u5c06\u5141\u8bb8\u6234\u5904\u65b9\u773c\u955c\u7684\u4eba\u5c06\u4ed6\u4eec\u72ec\u7279\u7684\u955c\u7247\u653e\u5165\u8033\u673a\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5728\u8033\u673a\u4e0a\u4f69\u6234\u5916\u90e8\u773c\u955c\uff0c\u4ece\u800c\u4f7f\u8033\u673a\u66f4\u7b28\u91cd\u3001\u66f4\u4e0d\u8212\u670d\u3002\u4eca\u5929\uff0c\u82f9\u679c\u516c\u53f8\u7684\u4e00\u9879\u4e13\u5229\u5c06\u4ed6\u4eec\u7684\u89c6\u89c9\u5e26\u5230\u4e86\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684\u6c34\u5e73\u3002\n\u4eca\u5929\uff0c\u7f8e\u56fd\u4e13\u5229\u5546\u6807\u5c40\u516c\u5e03\u4e86\u82f9\u679c\u7684\u4e24\u9879\u4e13\u5229\u7533\u8bf7\uff0c\u8fd9\u4e24\u9879\u7533\u8bf7\u7684\u91cd\u70b9\u662f\u82f9\u679c\u672a\u6765\u5728\u5934\u76d4\u8bbe\u5907(HMD)\u548c\u773c\u955c\u4e0a\u7684\u773c\u955c\u3002\u4e3b\u8981\u4e13\u5229\u5305\u62ec\u4e00\u79cd\u529f\u80fd\u5f3a\u5927\u7684\u65b0\u89c6\u529b\u77eb\u6b63\u5149\u5b66\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u5c06\u7528\u6237\u7684\u773c\u955c\u5904\u65b9\u5408\u5e76\u5230\u8be5\u7cfb\u7edf\u4e2d\u3002\u7136\u540e\uff0c\u8be5\u7cfb\u7edf\u5c06\u6539\u53d8\u5149\u5b66\u7cfb\u7edf\uff0c\u4ee5\u89e3\u51b3\u6563\u5149\u3001\u8fdc\u89c6\u548c\u8fd1\u89c6\u7b49\u89c6\u529b\u95ee\u9898\uff0c\u8fd9\u6837\u6234\u773c\u955c\u7684\u4eba\u5728\u4f7f\u7528\u82f9\u679cHMD\u65f6\u5c31\u4e0d\u9700\u8981\u6234\u773c\u955c\u4e86\u3002\n\u8fd9\u5bf9\u82f9\u679c\u6765\u8bf4\u53ef\u80fd\u662f\u4e00\u4e2a\u81f4\u547d\u7684\u5e94\u7528\uff0c\u56e0\u4e3a\u6839\u636eGlassesCrafter(\u4e00\u4efd\u672a\u6ce8\u660e\u65e5\u671f\u7684\u62a5\u544a)\uff0c\u7f8e\u56fd\u89c6\u529b\u59d4\u5458\u4f1a(Vision Council Of America)\u58f0\u79f0\uff0c\u5927\u7ea675%\u7684\u6210\u5e74\u4eba\u4f7f\u7528\u67d0\u79cd\u89c6\u529b\u77eb\u6b63\u3002\n\u76f4\u63a5\u8df3\u5230\u4e0b\u9762\uff0c\u82f9\u679c\u7684\u4e13\u5229\u56fe1\u662f\u8bf4\u660e\u6027\u5934\u76d4\u8bbe\u5907(HMD)\u7684\u57fa\u672c\u6982\u56fe\uff1b\u56fe2\u662f\u5177\u6709\u53ef\u8c03\u8282\u663e\u793a\u5668\u548c\u955c\u5934\u7684\u8bf4\u660e\u6027\u5934\u76d4\u8bbe\u5907\u7684\u57fa\u672c\u6982\u56fe\u3002\n\u82f9\u679c\u516c\u53f8\u6307\u51fa\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907(\u5982\u56fe1\u4e2d\u7684#44\u6240\u793a)\u53ef\u80fd\u5305\u62ec\u4e00\u4e2a\u611f\u6d4b\u7cfb\u7edf\uff0c\u7528\u4e8e\u6d4b\u91cf\u7528\u6237\u773c\u775b\u7684\u773c\u775b\u7279\u5f81(\u4e0a\u6587\u4e2d\u7684#46)\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982Shack-Hartmann\u6ce2\u524d\u4f20\u611f\u5668\u3001Tscherning\u4f20\u611f\u5668\u6216\u5149\u7ebf\u8ddf\u8e2a\u4f20\u611f\u5668\u4e4b\u7c7b\u7684\u6ce2\u524d\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u7528\u6237\u773c\u775b\u4e2d\u7684\u5c48\u5149\u8bef\u5dee\uff0c\u4f8b\u5982\u6563\u5149\u3001\u8fdc\u89c6\u548c\u8fd1\u89c6\u3002\n\u8f93\u5165\u8bbe\u5907\u8fd8\u53ef\u4ee5\u5305\u62ec\u7528\u4e8e\u6355\u6349\u7528\u6237\u73af\u5883\u7684\u56fe\u50cf\u7684\u76f8\u673a(\u6570\u5b57\u56fe\u50cf\u4f20\u611f\u5668)\u3001\u7528\u4e8e\u7531\u89c2\u5bdf\u773c\u6267\u884c\u51dd\u89c6\u68c0\u6d4b\u64cd\u4f5c\u7684\u76f8\u673a\u548c/\u6216\u5176\u4ed6\u76f8\u673a\u3002\n\u6839\u636e\u56fe2\u7684\u4e13\u5229\uff0c\u8be5\u88c5\u7f6e(#10)\u53ef\u4ee5\u91c7\u7528\u7528\u4e8e\u4e00\u526f\u773c\u955c\u7684\u6846\u67b6\u7684\u5f62\u72b6(\u4f8b\u5982\uff0c\u5934\u6234\u5f0f\u88c5\u7f6e10\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u773c\u955c)\u548c/\u6216\u91c7\u53d6\u5178\u578b\u7684\u89c6\u9891\u8033\u673a\u6216\u62a4\u76ee\u955c\u7684\u5f62\u72b6\u3002\n\u82f9\u679c\u77eb\u6b63\u89c6\u89c9\u7cfb\u7edf\u7684\u6838\u5fc3\u5f00\u59cb\u4e8e\u4e0b\u9762\u7684\u4e13\u5229\u56fe4\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u4f55\u8c03\u6574\u53ef\u8c03\u8c10\u67f1\u9762\u900f\u955c\u7684\u7126\u8ddd\u7684\u56fe\u8868\u3002\n\u9664\u4e86\u57fa\u672c\u539f\u7406\u4e4b\u5916\uff0c\u82f9\u679c\u516c\u53f8\u6ce8\u610f\u5230\uff0c\u4e3a\u4e86\u8c03\u8c10\u955c\u5934\uff0c\u53ef\u4ee5\u5c06\u53e6\u4e00\u5e73\u6ed1\u53d8\u5316\u7684\u7535\u538b\u5206\u5e03(\u4f8b\u5982\uff0c\u5177\u6709\u66f4\u5927\u5e45\u5ea6)\u5e94\u7528\u4e8e\u6db2\u6676\u6750\u6599\uff0c\u4ece\u800c\u521b\u5efa\u6298\u5c04\u7387\u5206\u5e03#68\u3002\n\u8be5\u955c\u5934\u7cfb\u7edf\u65e8\u5728\u5e2e\u52a9\u5177\u6709\u6563\u5149\u7684\u7528\u6237\u77eb\u6b63\u89c6\u529b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e13\u5229\u7533\u8bf7\u4e2d\u89c4\u5b9a\u7684\u7279\u5b9a\u955c\u5934\u6280\u672f\u63a7\u5236\u6cbfX\u548c/\u6216Y\u7ef4\u5ea6\u7684\u67f1\u9762\u955c\u5934\u5ea6\u6570\u3002\n\u5728\u64cd\u4f5c\u671f\u95f4\uff0c\u63a7\u5236\u7535\u8def\u53ef\u4ee5\u8c03\u6574\u663e\u793a\u5668\u7684\u4f4d\u7f6e(\u4e0a\u9762\u56fe1\u7684#40)\uff0c\u4f8b\u5982\uff0c\u5de6\u663e\u793a\u5668\u4e0e\u7528\u6237\u7684\u5de6\u773c\u5728\u5c3a\u5bf8Z\u4e0a\u7684\u5206\u79bb\uff0c\u4ee5\u53ca\u53f3\u663e\u793a\u5668\u4e0e\u7528\u6237\u7684\u53f3\u773c\u5728\u5c3a\u5bf8Z\u4e0a\u7684\u5206\u79bb)\u548c/\u6216\u53ef\u4ee5\u8c03\u6574\u5149\u5b66\u7cfb\u7edf\u4e2d\u7684\u53ef\u8c03\u900f\u955c\uff0c\u4ee5\u4f7f\u663e\u793a\u5668\u4e0a\u7684\u5185\u5bb9\u6210\u4e3a\u7528\u6237\u7684\u7126\u70b9\uff0c\u540c\u65f6\u6821\u6b63\u7528\u6237\u7684\u6563\u5149\u3001\u8fdc\u89c6\u3001\u8fd1\u89c6\u548c\u5176\u4ed6\u5c48\u5149\u4e0d\u6b63\u8bef\u5dee\u3002\u5728\u6821\u6b63\u7528\u6237\u7684\u6563\u5149\u3001\u8fdc\u89c6\u3001\u8fd1\u89c6\u548c\u5176\u4ed6\u5c48\u5149\u8bef\u5dee\u7684\u540c\u65f6\uff0c\u63a7\u5236\u7535\u8def\u53ef\u4ee5\u8c03\u6574\u663e\u793a\u5668\u7684\u4f4d\u7f6e(\u4e0a\u9762\u56fe1\u7684#40)\uff0c\u4f8b\u5982\uff0c\u5de6\u663e\u793a\u5668\u4e0e\u7528\u6237\u7684\u5de6\u773c\u5728\u5c3a\u5bf8Z\u4e0a\u7684\u5206\u79bb\u4ee5\u53ca\u53f3\u663e\u793a\u5668\u4e0e\u7528\u6237\u7684\u53f3\u773c\u5728\u5c3a\u5bf8Z\u4e0a\u7684\u5206\u79bb)\u548c/\u6216\u53ef\u4ee5\u8c03\u6574\u5149\u5b66\u7cfb\u7edf\u4e2d\u7684\u53ef\u8c03\u8c10\u900f\u955c\u4ee5\u4f7f\u663e\u793a\u5668\u4e0a\u7684\u5185\u5bb9\u6210\u4e3a\u7528\u6237\u7684\u7126\u70b9\u3002\n\u53ef\u4ee5\u57fa\u4e8e\u6b63\u5728\u663e\u793a\u7684\u5185\u5bb9\u7684\u6027\u8d28(\u4f8b\u5982\uff0c\u57fa\u4e8e\u5185\u5bb9\u662f\u8bf8\u5982\u98ce\u666f\u4e2d\u7684\u5c71\u7684\u8fdc\u5904\u5185\u5bb9\u8fd8\u662f\u8bf8\u5982\u9644\u8fd1\u4eba\u7684\u8fd1\u8ddd\u79bb\u5185\u5bb9)\u6765\u8c03\u6574\u7126\u70b9\uff0c\u4ee5\u6700\u5c0f\u5316\u4f4f\u5bbf-\u6536\u655b\u5931\u914d\uff0c\u540c\u65f6\u8003\u8651\u7528\u6237\u504f\u597d\u548c\u7528\u6237\u5c48\u5149\u8bef\u5dee\u3002\n\u82f9\u679c\u8fdb\u4e00\u6b65\u6307\u51fa\uff0c\u5934\u6234\u5f0f\u8033\u673a\u7684\u7528\u6237\u53ef\u80fd\u6ca1\u6709\u5b8c\u7f8e\u7684\u89c6\u529b\u3002\u4f8b\u5982\uff0c\u7528\u6237\u53ef\u80fd\u8fd1\u89c6\u3001\u53ef\u80fd\u8fdc\u89c6\u548c/\u6216\u53ef\u80fd\u6709\u6563\u5149\u3002\n\u4e3a\u4e86\u77eb\u6b63\u4e0d\u5b8c\u7f8e\u7684\u89c6\u529b\uff0c\u53ef\u4ee5\u5c06\u89c6\u529b\u77eb\u6b63\u955c\u7247\u8026\u5408\u5230\u8bbe\u5907\u4e0a\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u955c\u7247\u53ef\u4ee5\u5177\u6709\u56fa\u5b9a\u90e8\u5206\u548c\u53ef\u62c6\u5378\u7684\u89c6\u529b\u77eb\u6b63\u90e8\u5206\u3002\n\u5728\u82f9\u679c\u7684\u4e13\u5229\u7533\u8bf7\u4e2d\uff0c\u4ed6\u4eec\u8fdb\u4e00\u6b65\u6307\u51fa\uff1a\u4f8b\u5982\uff0c\u73a9\u7535\u5b50\u6e38\u620f\u7684\u7528\u6237\u53ef\u80fd\u5446\u5728\u4e00\u4e2a\u72ed\u5c0f\u7684\u7a7a\u95f4\u91cc\uff0c\u800c\u4e14\u79bb\u5468\u56f4\u7684\u7269\u4f53\u5f88\u8fd1\u3002\u4e3a\u4e86\u5141\u8bb8\u7528\u6237\u7684\u773c\u775b\u5728\u64cd\u4f5c\u671f\u95f4\u653e\u677e(\u65b9\u6846116\u672a\u793a\u51fa)\uff0c\u53ef\u4ee5\u5c06\u8fdc\u5904\u7684\u5c71\u666f\u63d2\u5165\u5230\u89c6\u9891\u6e38\u620f\u4e2d\uff0c\u4ece\u800c\u907f\u514d\u9700\u8981\u7528\u6587\u672c\u6d88\u606f(\u653e\u677e\u773c\u775b)\u6216\u5176\u4ed6\u53ef\u80fd\u6270\u4e71\u7528\u6237\u4eab\u53d7\u89c6\u9891\u6e38\u620f\u7684\u5185\u5bb9\u6765\u6253\u65ad\u7528\u6237\u3002\n\u5feb\u8fdb\u5230\u4e0a\u9762\u7684\u82f9\u679c\u4e13\u5229\u56fe9\uff0c\u6211\u4eec\u80fd\u591f\u770b\u5230\u64cd\u4f5c\u5934\u6234\u5f0f\u8bbe\u5907\u6240\u6d89\u53ca\u7684\u8bf4\u660e\u6027\u64cd\u4f5c\u7684\u6d41\u7a0b\u56fe\uff1b\u56fe10\u662f\u8bf4\u660e\u6027\u900f\u955c\u548c\u76f8\u5173\u89c6\u529b\u77eb\u6b63\u900f\u955c\u7684\u4fa7\u89c6\u56fe\uff1b\u56fe11\u662f\u8026\u5408\u5230\u955c\u67b6\u7684\u8bf4\u660e\u6027\u89c6\u89c9\u77eb\u6b63\u900f\u955c\u7684\u524d\u89c6\u56fe\u3002\n\u5728\u4e13\u5229\u65e0\u82b1\u679c\u4e2d\u3002\u6211\u4eec\u80fd\u591f\u5c06\u78c1\u94c1\u4f5c\u4e3a\u89c6\u89c9\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u90e8\u5206\u5730\uff0c\u82f9\u679c\u516c\u53f8\u6ce8\u610f\u5230\uff0c\u4e3a\u4e86\u5c06\u89c6\u529b\u77eb\u6b63\u900f\u955c#130(\u56fe10\u4e2d\u6240\u793a)\u76f8\u5bf9\u4e8e\u7ed3\u6784#134\u548cHMD\u7684\u5176\u4f59\u90e8\u5206\u653e\u7f6e\u6210\u671f\u671b\u7684\u65cb\u8f6c\u5bf9\u51c6\uff0c\u73af#132\u53ef\u4ee5\u8bbe\u7f6e\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u78c1\u94c1\uff0c\u8bf8\u5982\u78c1\u94c1#138\u548c#140\uff0c\u5e76\u4e14\u7ed3\u6784#134\u53ef\u4ee5\u8bbe\u7f6e\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u5e94\u7684\u78c1\u94c1#136\u548c#142\u3002\n\u5f53\u89c6\u529b\u77eb\u6b63\u955c\u5934\u5b89\u88c5\u5230\u5934\u76d4\u663e\u793a\u5668\u4e0a\u65f6\uff0c\u78c1\u94c1#138\u548c\u78c1\u94c1#136\u4e4b\u95f4\u7684\u78c1\u5f15\u529b\u4ee5\u53ca\u78c1\u94c1#140\u548c#142\u4e4b\u95f4\u7684\u78c1\u5f15\u529b\u5c06\u6709\u52a9\u4e8e\u5c06\u955c\u5934#130\u5bf9\u51c6\u5e76\u4fdd\u6301\u5728\u5934\u76d4\u663e\u793a\u5668\u5185\u6240\u9700\u7684\u89d2\u5ea6\u65b9\u5411\uff0c\u4ece\u800c\u786e\u4fdd\u89c6\u529b\u77eb\u6b63\u955c\u5934\u4ee4\u4eba\u6ee1\u610f\u5730\u77eb\u6b63\u4f7f\u7528\u8005\u7684\u6563\u5149\u3002\n\u6700\u540e\uff0c\u82f9\u679c\u6ce8\u610f\u5230\uff0c\u7528\u6237\u8f93\u5165\u5305\u62ec\u773c\u955c\u5904\u65b9\uff0c\u5e76\u4e14\u63a7\u5236\u7535\u8def\u88ab\u914d\u7f6e\u4e3a\u57fa\u4e8e\u773c\u955c\u5904\u65b9\u5229\u7528\u5b9a\u4f4d\u5668\u8c03\u6574\u663e\u793a\u5668\u7684\u4f4d\u7f6e\u3002\n\u4eca\u5929\u7531\u7f8e\u56fd\u4e13\u5229\u5c40\u516c\u5e03\u7684\u82f9\u679c\u4e13\u5229\u7533\u8bf7\u662f\u57282019\u5e74\u7b2c\u56db\u5b63\u5ea6\u63d0\u4ea4\u7684\uff0c\u8003\u8651\u5230\u8fd9\u662f\u4e00\u9879\u4e13\u5229\u7533\u8bf7\uff0c\u4e00\u4e9b\u53ef\u4ee5\u8ffd\u6eaf\u52302017\u5e745\u6708\u7684\u5de5\u4f5c\u4e5f\u5305\u62ec\u5728\u8fd9\u4efd\u7533\u8bf7\u4e2d\uff0c\u8fd9\u6837\u7684\u4ea7\u54c1\u4e0a\u5e02\u7684\u65f6\u95f4\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u3002\nGraham Myhre\u535a\u58eb\uff1b\u663e\u793a\u63a2\u7d22\u9ad8\u7ea7\u5de5\u7a0b\u7ecf\u7406\uff1bMyhre\u4e4b\u524d\u66fe\u5728Lytro Inc\u5de5\u4f5c\uff0c\u5f00\u53d1\u4e0b\u4e00\u4ee3\u5149\u573a\u5149\u5b66\u548c\u5fae\u5149\u5b66\u3002\nJonny(Hyungryul)Choi\uff1a\u5de5\u7a0b\u7ecf\u7406\uff0c\u4e3a\u672a\u6765\u7684\u82f9\u679c\u4ea7\u54c1\u7814\u7a76\u65b0\u7684\u663e\u793a\u548c\u5149\u5b66\u6280\u672f\u3002\n\u5e03\u5170\u767b\u00b7\u514b\u62c9\u514b(Brandon Clarke)\uff1a\u9762\u677f\u5de5\u827a\u548c\u5149\u5b66(PPO)\u5de5\u7a0b\u96c6\u56e2\u9ad8\u7ea7\u663e\u793a\u5de5\u7a0b\u5e08\u3002\n\u7b2c\u4e8c\u4e2a\u4e13\u5229\u7533\u8bf7\u4e0e\u82f9\u679c\u672a\u6765\u7684\u5934\u76d4\u663e\u793a\u5668\u548c\u73bb\u7483\u8bbe\u5907\u6709\u5173\uff0c\u4eca\u5929\u516c\u5e03\u4e86\u7f16\u53f7\u4e3a20200174255\u7684\u4e13\u5229\u7533\u8bf7\u3002\u5982\u679c\u4f60\u78b0\u5de7\u662f\u4e00\u4f4d\u719f\u6089\u5168\u606f\u56fe\u7ed3\u6784\u3001\u53cd\u5c04\u5168\u606f\u56fe\u3001\u900f\u5c04\u5168\u606f\u56fe\u548c\u8ba1\u7b97\u5168\u606f(CGH)\u663e\u793a\u5668\u7684\u5149\u5b66\u5de5\u7a0b\u5e08\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u6709\u673a\u4f1a\u7406\u89e3\u82f9\u679c\u516c\u53f8\u540d\u4e3a\u201c\u5177\u6709\u591a\u5c42\u5168\u606f\u7ec4\u5408\u5668\u7684\u5149\u5b66\u7cfb\u7edf\u201d\u53d1\u660e\u7684\u6df1\u5ea6\u3002\u8fd9\u91cc\u53ef\u4ee5\u56de\u987e\u4e00\u4e0b\u63d0\u5230\u5168\u606f\u56fe146\u6b21\u7684\u4e13\u5229\u3002", "note_en": "In late January Patently Apple posted a report titled &#34;Apple Invention Details  a Prescription Lens System for a Future Head-Mounted Display Device.&#34; We noted in the report that &#34;The patent relates to a future mixed reality headset that will allow those with prescription glasses to put their unique lenses into a headset to eliminate the need to wear exterior glasses in the headset making it bulkier and less comfortable.&#34; Today an Apple patent takes their vision to the next level in much greater detail.\n    Today the US Patent &amp; Trademark Office published two patent application from Apple that are focused on Apple&#39;s future eyeware in both Head Mounted Devices (HMD) and glasses. The main patent covers a powerful new vision correction optical system that&#39;s able to incorporate a user&#39;s glasses prescription into the system. The system will then alter the optics to address vision issues such astigmatism, farsightedness, and nearsightedness so that those who wear glasses won&#39;t have to them when using Apple&#39;s HMD.\n    That could be a killer application for Apple because according to (an undated report by)  GlassesCrafter,  The Vision Council of America claims that approximately 75% of adults use some sort of vision correction.\n    Jumping right in, Apple&#39;s patent FIG. 1 below is a diagram of a basic overview of an illustrative head-mounted device (HMD); FIG. 2 is a basic overview diagram of an illustrative  head mounted device with adjustable displays and lenses.\n        Apple notes that input-output devices (shown as #44 of FIG. 1) may include a sensing system that measures the eye characteristics of the user&#39;s eyes (#46 above). For example, a wavefront sensor such as a Shack-Hartmann wavefront sensor, Tscherning sensor, or a ray tracing sensor may be used to measure refractive errors in a user&#39;s eyes such as astigmatism, farsightedness, and nearsightedness.\n    Input Devices can also include cameras (digital image sensors) for capturing images of the user&#39;s surroundings, cameras for performing gaze detection operations by the viewing eyes and/or other cameras.\n    Further to patent FIG. 2, the device (#10)  may take on the shape of a frame for a pair of glasses (e.g., head-mounted device 10 may resemble eyeglasses) and or take on the shape of a typical video Headset or a pair of goggles.\n    The heart of Apple&#39;s corrective vision system begins with patent FIG. 4 below which presents a graph showing how the focal length of a tunable cylindrical lens can be adjusted.\n    Beyond the basics, Apple notes that to tune the lens, another smoothly varying voltage profile (e.g., with a larger magnitude) may be applied to the liquid crystal material, thereby creating refractive index profile #68.\n    The lens system is designed to help correct the vision of a user with astigmatism, cylindrical lens power along the X and/or Y dimensions can be controlled using specific lens techniques as laid out in the patent filing.\n        During operations, control circuitry may adjust the position of the display (#40 of FIG. 1 above), e.g., the separation in dimension Z of the left display from the user&#39;s left eye and the separation in dimension Z of the right display from the user&#39;s right eye) and/or may adjust tunable lenses in the optical system to bring content on the display into focus for the user   while correcting for astigmatism, farsightedness, nearsightedness, and other refractive errors in the user&#39;s vision.\n    The focus may be adjusted based on the nature of the content being displayed (e.g., based on the whether the content is distant content such as mountains in a landscape or is close-up content such as a nearby person) to minimize accommodation-vergence mismatch while taking into account user preferences and user refractive error.\n    Apple further notes that a user of the headset may not have perfect vision. For example, a user may be nearsighted, may be farsighted, and/or may have astigmatism.\n    To correct for imperfect vision,   vision correction lenses may be coupled to device.  Certain Lenses may, for example, have a fixed portion and a removable vision correction portion.\n    Further in to Apple&#39;s patent filing they note: &#34;For example,  a user playing a video game may be in a confined space and close to surrounding objects. To allow the user&#39;s eyes to relax during the operations of (block 116 not shown), a distant mountain scene may be inserted into the video game, thereby avoiding the need to interrupt the user with a text message (&#34;relax eyes&#34;) or other content that might disrupt the user&#39;s enjoyment of the video game.&#34;\n    Fast forwarding to Apple&#39;s patent FIG. 9 above, we&#39;re able to see a flow chart of illustrative operations involved in operating a head-mounted device; FIG. 10 is a  side view of illustrative lens  and an associated vision correction lens; and FIG. 11 is a  front view of an illustrative vision correction lens coupled to a lens mount.\n    In patent fig. 11 we&#39;re able to magnets as part of the vision system. In part Apple notes that &#34;to place vision correction lens #130 (shown in FIG. 10) into a desired rotational alignment with respect to structure #134 and the rest of THE HMD, ring #132 may be provided with one or more magnets such as magnets #138 and #140 and structure #134 may be provided with one or more corresponding magnets #136 and #142.\n    When the vision correction lens is mounted to the HMD, magnetic attraction between magnet #138 and magnet #136 and magnetic attraction between magnet #140 and #142 will help align and hold lens #130 in a desired angular orientation within the HMD thereby ensuring that the vision correction lens satisfactorily corrects a user&#39;s astigmatism.\n    Finally, Apple notes that the user input includes an eyeglasses prescription and the control circuitry is configured to adjust a position of the display with the positioner based on the eyeglasses prescription.\n    Apple&#39;s patent application that was published today by the U.S. Patent Office was filed back in Q4 2019 with some work dating back to May 2017 being included in this application Considering that this is a patent application, the timing of such a product to market is unknown at this time.\n        Graham Myhre, PhD; Senior Engineering Manager of Display Exploration; Myhre previously worked at Lytro Inc that developed next-gen Light Field optics and micro-optics.\n      Jonny (Hyungryul) Choi: Engineering Manager; Investigates new display and optical technologies for future Apple products.\n    Brandon Clarke: Senior Display Engineer, part of the Panel Process and Optics (PPO) Engineering Group\n                  A second Patent Application relating to Apple&#39;s future HMD and glass devices was published today under number 20200174255. If you happen to be an optical engineer familiar with hologram structures, reflection holograms, transmission holograms and computer-generated holography (CGH) displays, then you may stand a chance at understanding the depth of Apple&#39;s invention titled &#34;Optical Systems with Multi-Layer Holographic Combiners.&#34; The patent that mentions Hologram 146 times could be reviewed  here.", "posttime": "2020-06-06 23:38:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,app,apple,\u82f9\u679c\u516c\u53f8,replace", "title": "\u6839\u636e\u8fd9\u9879\u4e13\u5229\uff0c\u82f9\u679c\u516c\u53f8\u5c06\u7528\u6c29\u6c14\u62a4\u5957\u4ee3\u66ff\u4f60\u7684\u773c\u955c\u3002", "title_en": "Apple is going to replace your glasses with ar heasets, according to this patent", "transed": 1, "url": "https://www.patentlyapple.com/patently-apple/2020/06/apple-invents-a-vision-correction-system-for-headsets-that-eliminates-the-need-for-a-user-to-wear-prescription-glasses-to-enj.html", "via": "", "real_tags": ["\u82f9\u679c", "app", "apple", "\u82f9\u679c\u516c\u53f8", "replace"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005455, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5185\u6838\u56fe\u5f62\u4e16\u754c\u4e2d\uff0c\u6709\u4e00\u6761\u7531\u6765\u5df2\u4e45\u7684\u201c\u6c99\u7ebf\u201d\uff0c\u5b83\u4e0d\u5141\u8bb8\u5728\u6ca1\u6709\u76f8\u5e94\u7684\u81ea\u7531\u8f6f\u4ef6\u7528\u6237\u7a7a\u95f4\u9a71\u52a8\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\u5408\u5e76\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u3002\u5176\u60f3\u6cd5\u662f\uff0c\u65e0\u6cd5\u6d4b\u8bd5\u5168\u90e8\u529f\u80fd\u610f\u5473\u7740\u5185\u6838\u5f00\u53d1\u4eba\u5458\u65e0\u6cd5\u9a8c\u8bc1\u9a71\u52a8\u7a0b\u5e8f\u7684\u6b63\u5e38\u529f\u80fd\u548c\u5b89\u5168\u6027\uff1b\u5bf9\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237\u7a7a\u95f4\u7aef\u51fa\u73b0\u4e0d\u53ef\u9884\u89c1(\u4e14\u65e0\u6cd5\u6d4b\u8bd5)\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u6700\u8fd1\uff0c\u6211\u4eec\u770b\u5230\u4e86\u5176\u4ed6\u7c7b\u578b\u7684\u8bbe\u5907\uff0c\u5b83\u4eec\u7684\u9a71\u52a8\u7a0b\u5e8f\u5f88\u590d\u6742\uff0c\u4f46\u6ca1\u6709\u6709\u7528\u7684\u81ea\u7531\u7528\u6237\u7a7a\u95f4\u90e8\u5206\uff0c\u5b83\u4eec\u88ab\u63d0\u8bae\u5305\u542b\u5728\u5185\u6838\u4e2d\uff1b\u81f3\u5c11\u6709\u4e00\u4e2a\u88ab\u5408\u5e76\u4e86\uff0c\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6f6e\u6d41\u53ef\u80fd\u5df2\u7ecf\u8f6c\u5411\u4e0d\u5229\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u9a71\u52a8\u7a0b\u5e8f-\u6216\u8005\u65e0\u8bba\u5982\u4f55\uff0c\u5176\u4e2d\u4e00\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u3002", "note_en": "In the kernel graphics world, there has been a longstanding \"line in the sand\" that disallows mergingkernel drivers without a corresponding free-software user-space driver.  The idea is thatnot having a way to test  the full functionality means that the kerneldevelopers cannot verify the proper functioning and security of thedriver; changes to the kernel driver may lead to unforeseen (anduntestable) problems on the user-space side.   More recently, though, wehave seen other types of devices with complex drivers, but no useful freeuser-space piece, that have been proposed for inclusion into the kernel;at least one was merged, but the tide has perhaps turned against those typesof drivers at this point\u2014or some of them, anyway.", "posttime": "2020-06-06 23:22:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u9a71\u52a8\u7a0b\u5e8f,user", "title": "\u91ca\u653e\u975e\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u7684\u7528\u6237\u7a7a\u95f4", "title_en": "Free user space for non-graphics drivers", "transed": 1, "url": "https://lwn.net/SubscriberLink/821817/d2e8e5c253b68ce6/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u9a71\u52a8\u7a0b\u5e8f", "user"]}, {"category": "", "categoryclass": "", "imagename": "0bd1a460e003cf14a173203010cbd6f8.jpg", "infoid": 1005454, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u73b0\u5728\u5728\u91d1\u95e8\u5927\u6865\u9644\u8fd1\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\u81ea\u5df1\uff1a\u90a3\u5230\u5e95\u662f\u4ec0\u4e48\u58f0\u97f3\uff1f\u6df1\u6d77\u751f\u7269\u53d1\u51fa\u53c8\u957f\u53c8\u54cd\u7684\u55e1\u55e1\u58f0\uff1f\u6765\u81ea\u5916\u592a\u7a7a\u7684\u5916\u661f\u9891\u7387\uff1f\u65e7\u91d1\u5c71\u6700\u4f1f\u5927\u7684\u5730\u6807\u53d1\u51fa\u5de8\u5927\u7684\u53f9\u606f\uff0c\u7ec8\u4e8e\u8bb0\u5f55\u4e0b\u5b83\u5bf9\u4e16\u754c\u73b0\u72b6\u7684\u60ca\u6115\uff1f\n\u4e0d--\u4f60\u4ece\u91d1\u95e8\u5927\u6865\u542c\u5230\u7684\u602a\u5f02\u7684\u58f0\u97f3\u5b9e\u9645\u4e0a\u662f\u521a\u521a\u5b89\u88c5\u7684\u65b0\u7684\u4eba\u884c\u9053\u680f\u6746\u7684\u7ed3\u679c\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u6291\u5236\u98ce\u3002\u98ce\u7684\u6709\u8da3\u4e4b\u5904\u5728\u4e8e\uff1a\u5f53\u5b83\u7a7f\u8fc7\u67d0\u4e9b\u7a7a\u5730\u65f6\uff0c\u4f1a\u53d1\u51fa\u55e1\u55e1\u58f0\u3002\u6240\u6709\u7684\u82a6\u82c7\u4eea\u5668\u90fd\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\uff0c\u800c\u4eba\u884c\u9053\u9762\u677f\u7684\u5de5\u7a0b\u5e08\u663e\u7136\u5fd8\u8bb0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u800c\u4e14\uff0c\u56e0\u4e3a\u5b83\u6a2a\u8de8\u6d77\u6e7e\u7684\u4e00\u4e2a\u975e\u5e38\u591a\u98ce\u7684\u7f3a\u53e3\uff0c\u91d1\u95e8\u5927\u6865\u73b0\u5728\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6a59\u8272\u5598\u606f\u7684\u5361\u7956\u5c14\u3002", "note_en": "If you are anywhere in the vicinity of the Golden Gate Bridge right now, you are probably asking yourself: What in the world is that sound? A long, loud hum from a deep sea creature? Alien frequencies from outer space? An enormous sigh from San Francisco&#39;s greatest landmark, finally registering its dismay at the state of the world?\n Nope\u2014the eerie sound you&#39;re hearing from the Golden Gate Bridge is in fact the result of  new sidewalk railing slats, just installed, meant to curb the wind. Funny thing about wind: when it passes through certain open spaces, it creates a hum. This is how all reed instruments work, and it&#39;s something that the engineers of said sidewalk panels  apparently forgot to take into consideration.\n And, because it spans a very windy gap across the Bay, the Golden Gate Bridge is now effectively a giant orange wheezing kazoo.", "posttime": "2020-06-06 23:22:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u73b0\u5728,gate,\u91d1\u95e8\u5927\u6865", "title": "\u201c\u91d1\u95e8\u5927\u6865\u201d\u73b0\u5728\u542c\u8d77\u6765\u50cf\u5927\u536b\u00b7\u6797\u5947\u7684\u7535\u5f71", "title_en": "The Golden Gate Bridge Sounds Like a David Lynch Movie Now", "transed": 1, "url": "https://www.kqed.org/arts/13881451/the-golden-gate-bridge-sounds-like-a-david-lynch-movie-now", "via": "", "real_tags": ["\u7535\u5f71", "\u73b0\u5728", "gate", "\u91d1\u95e8\u5927\u6865"]}, {"category": "", "categoryclass": "", "imagename": "f31fc88ab8832c04b122cbe62adb9f7f.jpg", "infoid": 1005453, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u957f\u671f\u4ee5\u6765\uff0c\u6d77\u6d0b\u4e2d\u90e8\u5947\u7279\u7684\u751f\u6d3b\u4e00\u76f4\u662f\u4e00\u4e2a\u96be\u4ee5\u89c2\u5bdf\u3001\u7814\u7a76\u548c\u6df1\u5165\u7684\u6311\u6218\u3002\u90a3\u4e2a\u9886\u57df\u7684\u751f\u7269\u751f\u6d3b\u5728\u538b\u69a8\u7684\u538b\u529b\u4e0b\uff0c\u5728\u51b0\u51b7\u7684\u6e29\u5ea6\u4e0b\uff0c\u5728\u6f06\u9ed1\u7684\u9ed1\u6697\u4e2d\u3002\u6d41\u4f53\u73af\u5883\u4e0d\u53d7\u91cd\u529b\u548c\u575a\u786c\u8868\u9762\u7684\u7ea6\u675f\uff0c\u56e0\u6b64\u81ea\u7136\u9009\u62e9\u5141\u8bb8\u4e00\u7cfb\u5217\u4e0d\u719f\u6089\u7684\u8eab\u4f53\u90e8\u4f4d\u548c\u5efa\u7b51\u7684\u72c2\u6b22\u3002\u6309\u7167\u4eba\u7c7b\u7684\u6807\u51c6\uff0c\u8fd9\u4e9b\u751f\u7269\u662f\u5916\u661f\u4eba\u3002\n\u73b0\u5728\uff0c\u4e00\u79cd\u65b0\u7684\u6fc0\u5149\u6b63\u5728\u7167\u4eae\u4e00\u4e9b\u6700\u8d85\u51e1\u8131\u4fd7\u7684\u751f\u547d\u5f62\u5f0f\u3002\u6df1\u6d77\u7c7b\u7684\u8f6f\u4f53\u662f\u7531\u7c98\u6db2\u548c\u80f6\u72b6\u7269\u8d28\u7ec4\u6210\u7684-\u6709\u70b9\u50cf\u6c34\u6bcd\uff0c\u53ea\u662f\u6709\u70b9\u5947\u602a\u3002\u5b83\u4eec\u7684\u7279\u70b9\u662f\u534a\u900f\u660e\u90e8\u5206\u548c\u7c98\u6027\u7ed3\u6784\u7684\u8ff7\u5bab\uff0c\u5305\u62ec\u957f\u4e1d\u3001\u7c98\u6db2\u5916\u58f3\u548c\u7528\u4e8e\u6536\u96c6\u98df\u7269\u7684\u7ec6\u7f51\u8fc7\u6ee4\u5668\u3002\u6700\u8fd1\uff0c\u5728\u897f\u6fb3\u5927\u5229\u4e9a\u7684\u6df1\u6d77\uff0c\u79d1\u5b66\u5bb6\u4eec\u62cd\u6444\u5230\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3a\u7ba1\u6c34\u6bcd\u7684\u80f6\u72b6\u751f\u7269\uff0c\u5176\u957f\u5ea6\u4f30\u8ba1\u4e3a150\u82f1\u5c3a-\u8fd9\u53ef\u80fd\u662f\u4e16\u754c\u4e0a\u6700\u957f\u7684\u6d77\u6d0b\u751f\u7269\u6837\u672c\u3002\n6\u67083\u65e5\uff0c\u6765\u81ea\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u8499\u7279\u5229\u6e7e\u6c34\u65cf\u9986\u7814\u7a76\u6240\u548c\u5723\u5730\u4e9a\u54e5\u667a\u5229\u6559\u7687\u5929\u4e3b\u6559\u5927\u5b66\u76847\u540d\u79d1\u5b66\u5bb6\u7ec4\u6210\u7684\u56e2\u961f\u5728\u300a\u81ea\u7136\u300b\u6742\u5fd7\u4e0a\u63cf\u8ff0\u4e86\u4e00\u79cd\u7528\u4e8e\u7814\u7a76\u8fd9\u4e9b\u534a\u900f\u660e\u751f\u7269\u7684\u6210\u50cf\u8bbe\u5907\u3002\u5b83\u53d1\u5c04\u4e00\u79cd\u8584\u8584\u7684\u6fc0\u5149\u98ce\u6247\uff0c\u626b\u63cf\u52a8\u7269\uff0c\u6536\u96c6\u6765\u81ea\u5185\u90e8\u6d41\u52a8\u548c\u7ec4\u7ec7\u7684\u53cd\u5411\u6563\u5c04\u5c04\u7ebf\uff0c\u5e76\u5c06\u6536\u96c6\u5230\u7684\u6570\u636e\u9001\u5165\u8ba1\u7b97\u673a\uff0c\u8ba1\u7b97\u673a\u5c06\u4ee5\u5fae\u5999\u7684\u7ec6\u8282\u53ef\u89c6\u5316\u5730\u91cd\u5efa\u6d3b\u7740\u7684\u6709\u673a\u4f53\u3002\u8fd9\u79cd\u540d\u4e3aDeepPIV\u6210\u50cf\u7cfb\u7edf\u7684\u8bbe\u5907\uff0c\u5c31\u50cfCT\u626b\u63cf\u5bf9\u4eba\u4f53\u6240\u505a\u7684\u90a3\u6837\uff0c\u53ef\u4ee5\u63ed\u793a\u4eba\u4f53\u7684\u5185\u90e8\u3002\n\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u7684MBARI\u6d77\u6d0b\u751f\u7269\u5b66\u5bb6\u5e03\u9c81\u65af\u00b7H\u00b7\u7f57\u5bbe\u900a(Bruce H.Robison)\u5728\u4e00\u6b21\u91c7\u8bbf\u4e2d\u8c08\u5230\u8fd9\u9879\u65b0\u6280\u672f\u65f6\u8bf4\uff0c\u201c\u8fd9\u4ee4\u4eba\u9707\u60ca\u3002\u201d\u201c\u8fd9\u5c06\u4ee5\u4e00\u79cd\u975e\u5e38\u597d\u7684\u65b9\u5f0f\u6253\u5f00\u5c40\u9762\u3002\u201d\n\u8be5\u56e2\u961f\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6d77\u5cb8\u5916\u7684\u8499\u7279\u5229\u6e7e\u8fdb\u884c\u4e86\u63a2\u7d22\uff0c\u8499\u7279\u5229\u6e7e\u7684\u7279\u70b9\u662f\u6709\u4e00\u4e2a\u5f88\u6df1\u7684\u5ce1\u8c37\u3002\u4e00\u4e2a\u62ff\u7740\u6210\u50cf\u4eea\u7684\u673a\u5668\u4eba\u88ab\u7cfb\u5728\u4e00\u6761\u957f\u7ef3\u4e0a\uff0c\u5bfc\u81f4\u4eba\u4eec\u5728\u957f\u8fbe\u56db\u5206\u4e4b\u4e00\u82f1\u91cc\u7684\u6df1\u5904\u4ed4\u7ec6\u68c0\u67e5\u4e86\u6570\u5341\u79cd\u751f\u7269\u3002\n\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u4f5c\u8005\u3001\u6d77\u6d0b\u7814\u7a76\u6240\u7684\u5de5\u7a0b\u5e08\u5361\u5361\u5c3c\u00b7\u5361\u8482\u8d3e(Kakani Katija)\u8bf4\uff0c\u8fd9\u9879\u65b0\u6280\u672f\u5c06\u6709\u52a9\u4e8e\u63ed\u793a\u8fd9\u4e9b\u9ecf\u7cca\u7cca\u7684\u52a8\u7269\u662f\u5982\u4f55\u884c\u52a8\u3001\u8fdb\u98df\u3001\u7e41\u6b96\u548c\u4fdd\u62a4\u81ea\u5df1\u7684\u3002\u201c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u53ef\u89c6\u5316\u8fd9\u4e9b\u7ed3\u6784\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u201d\u5979\u8bf4\u3002\n\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u7684\u6587\u7ae0\u4e2d\uff0c\u7814\u7a76\u5c0f\u7ec4\u8bb2\u8ff0\u4e86\u5982\u4f55\u5c06\u8fd9\u4e2a\u65b0\u9896\u7684\u88c5\u7f6e\u5bf9\u51c6\u4e00\u79cd\u88ab\u79f0\u4e3a\u5de8\u578b\u5e7c\u866b\u7684\u6df1\u6d77\u751f\u7269\uff0c\u8fd9\u662f\u4e00\u79cd\u5927\u81ea\u7136\u7684\u5947\u8ff9\uff0c\u53ef\u4ee5\u5206\u6ccc\u51fa\u5bbd\u8fbe3\u82f1\u5c3a\u7684\u6c14\u7403\u72b6\u7c98\u6db2\u5582\u517b\u7ed3\u6784\u3002\u5728\u4e00\u4e2a\u5927\u7684\u7ed3\u6784\u4e2d\uff0c\u6709\u66f4\u5c0f\u7684\u3001\u62f3\u5934\u5927\u5c0f\u7684\u8fc7\u6ee4\u5668\uff0c\u52a8\u7269\u4eec\u7528\u6765\u6536\u96c6\u730e\u7269\u548c\u5fae\u5c0f\u7684\u9897\u7c92\u3002\n\u4f7f\u7528\u8fd9\u9879\u65b0\u6280\u672f\uff0c\u5361\u8482\u8d3e\u535a\u58eb\u548c\u5979\u7684\u5408\u4f5c\u8005\u7b2c\u4e00\u6b21\u80fd\u591f\u7ed8\u5236\u51fa\u8fd9\u79cd\u5e7c\u866b\u5185\u90e8\u8fc7\u6ee4\u5668\u7684\u7ed3\u6784\u56fe\uff0c\u8bc6\u522b\u51fa\u5b83\u7684\u7cbe\u786e\u5f62\u72b6\u548c\u5404\u90e8\u5206\u7684\u786e\u5207\u529f\u80fd\u3002\u6dfb\u52a0\u7684\u8ba1\u7b97\u673a\u529f\u80fd\u4f7f\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5c06\u53ef\u89c6\u5316\u6548\u679c\u8f6c\u6362\u4e3a\u7535\u5f71\uff0c\u4ece\u800c\u4f7f\u4ed6\u4eec\u80fd\u591f\u6709\u6548\u5730\u98de\u8fc7\u8fc7\u6ee4\u5668\u5e76\u4ed4\u7ec6\u68c0\u67e5\u5176\u6d41\u7a0b\u3002\n\u5361\u8482\u8d3e\u535a\u58eb\u8bf4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u79d1\u5b66\u5bb6\u6709\u673a\u4f1a\u7814\u7a76\u6df1\u6d77\u751f\u7269\u4e2d\u5982\u6b64\u590d\u6742\u7684\u7ed3\u6784\u3002\u5979\u548c\u5979\u7684\u56e2\u961f\u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u5199\u9053\uff0c\u8fd9\u79cd\u53ef\u89c6\u5316\u201c\u53ef\u4ee5\u63ed\u793a\u81ea\u7136\u754c\u4e2d\u4e00\u4e9b\u6700\u590d\u6742\u7684\u5f62\u5f0f\u3002\u201d\n\u8fd9\u7bc7\u8bba\u6587\u7684\u5176\u4ed6\u4f5c\u8005\u662f\u8a79\u5361\u6d1b\u00b7\u7279\u7f57\u5c3c\u3001\u4e54\u65af\u7279\u00b7\u4e39\u5c3c\u5c14\u65af\u3001\u51ef\u5229\u00b7\u5170\u65af\u3001\u7f57\u5e03\u00b7E\u00b7\u590f\u6d1b\u514b\u3001\u963f\u62c9\u5a1c\u00b7D\u00b7\u8c22\u5c14\u66fc\u548c\u7f57\u5bbe\u900a\u535a\u58eb\u3002\u9664\u4e86\u5723\u5730\u4e9a\u54e5\u5929\u4e3b\u6559\u5927\u5b66\u7684\u5de5\u7a0b\u5e08\u7279\u7f57\u5c3c\u535a\u58eb\uff0c\u7814\u7a76\u4eba\u5458\u90fd\u5728\u52a0\u5dde\u6d77\u6d0b\u7814\u7a76\u6240\u5de5\u4f5c\u3002\n\u8fd9\u9879\u65b0\u6280\u672f\u53ef\u80fd--\u81f3\u5c11\u662f\u6f5c\u5728\u7684--\u5bf9\u6d77\u6d0b\u79d1\u5b66\u4ea7\u751f\u5de8\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u4e16\u754c\u4e0a\u7684\u6d77\u6d0b\u662f\u5982\u6b64\u5e7f\u9614\uff0c\u800c\u5176\u58a8\u8272\u6df1\u5904\u7684\u5c45\u6c11\u53c8\u662f\u5982\u6b64\u795e\u79d8\u3002\u79d1\u5b66\u5bb6\u4f30\u8ba1\uff0c\u5730\u7403\u4e0a99%\u4ee5\u4e0a\u7684\u751f\u7269\u5708\u5c45\u4f4f\u5728\u6d77\u6d0b\u4e2d\u3002\u6e14\u6c11\u77e5\u9053\u5b83\u7684\u8868\u5c42\u6c34\u57df\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u4e0e\u9646\u5730\u76f8\u6bd4\uff0c\u5168\u7403\u6d77\u6d0b\u662f\u672a\u77e5\u7684\u3002\n\u7f57\u5bbe\u900a\u535a\u58eb\u4f30\u8ba1\uff0c\u591a\u8fbe\u4e00\u534a\u7684\u6d77\u6d0b\u751f\u7269\u4ecd\u672a\u88ab\u53d1\u73b0-\u4e3b\u8981\u662f\u4e2d\u6df1\u6d77\u7684\u8d85\u51e1\u8131\u4fd7\u7684\u751f\u7269\u3002\n\u4ed6\u57281994\u5e74\u8bf4\uff1a\u201c\u5982\u679c\u4e00\u4e2a\u5916\u661f\u6587\u660e\u6765\u89c2\u5bdf\u8fd9\u4e2a\u661f\u7403\u4e0a\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u751f\u547d\u5f62\u5f0f\uff0c\u4ed6\u4eec\u5c31\u4f1a\u51fa\u53bb\u89c2\u5bdf\u4e2d\u6c34\u751f\u7269\u3002\u201d\u201c\u5c31\u751f\u7269\u91cf\u3001\u4e2a\u4f53\u6570\u91cf\u3001\u5730\u7406\u8303\u56f4\u800c\u8a00--\u65e0\u8bba\u4f60\u60f3\u600e\u4e48\u5206\u5272--\u8fd9\u4e9b\u90fd\u662f\u5730\u7403\u4e0a\u6700\u5927\u7684\u751f\u6001\u5b9e\u4f53\u3002\u4f46\u6211\u4eec\u5bf9\u4ed6\u4eec\u51e0\u4e4e\u4e00\u65e0\u6240\u77e5\u3002\u201c", "note_en": "The bizarre life of the sea\u2019s middle depths has long been a challenge to see, study and fathom. The creatures of that realm live under crushing pressures at icy temperatures in pitch darkness. The fluid environment is unbound by gravity and hard surfaces, so natural selection allows for a riotous array of unfamiliar body parts and architectures. By human standards, these organisms are aliens.\n Now, a new kind of laser is illuminating some of the most otherworldly life-forms. The soft bodies of the abyssal class are made of mucoid and gelatinous materials \u2014 somewhat like jellyfish, only stranger. They feature mazes of translucent parts and gooey structures, including long filaments, mucus housings and fine-mesh filters for gathering food. Recently, in the depths off Western Australia,  scientists filmed a gelatinous type known as a siphonophore whose length was estimated at 150 feet \u2014 potentially the world\u2019s longest example of oceanic life.\n On June 3 in Nature magazine, a team of seven scientists from the  Monterey Bay Aquarium Research Institute in California and the  Pontifical Catholic University of Chile in Santiago  described an imaging device for studying these translucent creatures. It emits a thin fan of laser light that scans through the animals, gathers backscattered rays from the inner flows and tissues, and feeds those gleanings into a computer that visually reconstructs the living organisms in subtle detail. The device, called the DeepPIV imaging system, reveals the insides much as CT scans do for human bodies.\n  \u201cIt\u2019s staggering,\u201d  Bruce H. Robison, a marine biologist at MBARI who participated in the research, said of the new technique in an interview. \u201cIt\u2019s going to open things up in a really good way.\u201d\n The team conducted its explorations off the California coast in Monterey Bay,  which features a deep canyon. A robot holding the imager was lowered on a long tether, resulting in the scrutiny of scores of creatures at depths of up to a quarter mile.\n Kakani Katija, an engineer at the marine institute and the paper\u2019s lead author, said the new technique would help unveil how the gooey animals do such things as move, feed, procreate and protect themselves. \u201cNow that we have a way to visualize these structures, we can finally understand how they function,\u201d  she said.\n In the Nature article, the team told of directing the novel device at an abyssal creature known as a giant larvacean, a marvel of nature that can secrete balloon-like mucus feeding structures as wide as three feet. Within a large structure are smaller, fist-size filters that the animals use to gather prey and tiny particles.\n  Using the new technique, Dr. Katija and her collaborators were able, for the first time, to map the structure of the larvacean\u2019s inner filter, identifying its precise shape and the exact function of its parts. Added computer power let team members turn the visualization into a movie that enabled them to effectively fly through the filter and scrutinize its flows.\n Until now, no scientist has had the chance to examine such complicated structures in the deep creatures, Dr. Katija said. Such visualizations, she and her team wrote in their paper, \u201ccan shed light on some of nature\u2019s most complex forms.\u201d\n The paper\u2019s other authors are Giancarlo Troni, Joost Daniels, Kelly Lance, Rob E. Sherlock, Alana D. Sherman and Dr. Robison. Except for Dr. Troni, an engineer at the Catholic university in Santiago, the researchers work at the California marine institute.\n The new technique could \u2014 at least potentially \u2014 have an enormous impact on marine science, because the world\u2019s oceans are so vast and the denizens of their inky depths so mysterious. Scientists estimate that more than 99 percent of the planet\u2019s biosphere resides  in the oceans. Fishermen know its surface waters, but in general, compared to land, the global ocean is unknown.\n Dr. Robison has estimated that up to half the creatures of the sea remain undiscovered \u2014 mainly the otherworldly ones of the middle depths.\n \u201cIf an alien civilization came to look at the dominant life form on the planet, they\u2019d be out looking at midwater creatures,\u201d he said in 1994. \u201cIn terms of biomass, numbers of individuals, geographical extent \u2014 any way you want to slice it \u2014 these are the biggest ecological entities on earth. But we know virtually nothing about them.\u201d", "posttime": "2020-06-06 23:21:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee4\u4eba\u9707\u60ca,weirdest,\u6d77\u6d0b", "title": "\u6d77\u6d0b\u4e2d\u6700\u602a\u5f02\u7684\u751f\u7269\uff0c\u73b0\u5728\u6b63\u5904\u4e8e\u201c\u4ee4\u4eba\u9707\u60ca\u7684\u201d\u7ec6\u8282\u4e2d", "title_en": "The Sea\u2019s Weirdest Creatures, Now in \u2018Staggering\u2019 Detail", "transed": 1, "url": "https://www.nytimes.com/2020/06/05/science/ocean-biology-larvaceans-lasers.html", "via": "", "real_tags": ["\u4ee4\u4eba\u9707\u60ca", "weirdest", "\u6d77\u6d0b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005452, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u90fd\u88ab\u7535\u5b50\u90ae\u4ef6\u6df9\u6ca1\u4e86\u3002\u95ee\u9898\u4e0d\u5728\u4e8e\u660e\u76ee\u5f20\u80c6\u7684\u5783\u573e\u90ae\u4ef6--\u8ba2\u9605\u5927\u90e8\u5206\u5783\u573e\u90ae\u4ef6\u5e76\u5c4f\u853d\u5176\u4f59\u5185\u5bb9\u5f88\u5bb9\u6613\u3002\u771f\u6b63\u7684\u6740\u624b\u662f\u4e00\u5c01\u6709\u70b9\u6709\u8da3\u7684\u7535\u5b50\u90ae\u4ef6\uff1a\u5173\u4e8e\u4f60\u5916\u56f4\u53c2\u4e0e\u7684\u9879\u76ee\u7684\u8ba8\u8bba\uff0c\u6bcf\u5468\u7684\u65f6\u4e8b\u901a\u8baf\uff0c\u51e0\u4e2a\u6708\u524d\u4f60\u63d0\u4ea4\u7684\u5173\u4e8eGitHub\u95ee\u9898\u7684\u95f2\u804a\uff0c\u4ee5\u53ca\u6240\u6709\u5176\u4ed6\u4f60\u6709\u65f6\u95f4\u5c31\u7565\u8fc7\u7684\u90ae\u4ef6\uff0c\u5982\u679c\u4f60\u5fd9\u7684\u8bdd\u5c31\u8df3\u8fc7\u3002\u624b\u52a8\u5206\u7c7b\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u53ef\u80fd\u662f\u4e00\u573a\u4ee4\u4eba\u7cbe\u75b2\u529b\u7aed\u7684\u6253\u5730\u9f20\u6e38\u620f\u3002\u4f46\u5982\u679c\u4f60\u662fGmail\u7528\u6237\uff0c\u8fd8\u662f\u6709\u5e0c\u671b\u7684--\u4f60\u53ef\u4ee5\u4f7f\u7528AppsScript\u5c06\u5927\u90e8\u5206\u5de5\u4f5c\u81ea\u52a8\u5316\u3002\u6700\u68d2\u7684\u662f\uff0c\u5b83\u662f\u514d\u8d39\u7684\uff01\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5e26\u9886\u60a8\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2aAppsScript\u9879\u76ee\uff0c\u5e76\u8ba9\u60a8\u4f53\u9a8c\u4e00\u4e0b\u60a8\u53ef\u4ee5\u5b9e\u73b0\u4ec0\u4e48\u3002(\u5411Prashant Varanasi\u81f4\u656c\uff0c\u4ed6\u9996\u5148\u5411\u6211\u4ecb\u7ecd\u4e86AppsScript\u3002)\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684AppsScript\u9879\u76ee\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u51fd\u6570\u5e76\u4fdd\u5b58\u8be5\u9879\u76ee\u3002\u8fd9\u6bb5\u4ee3\u7801\u8fd8\u6ca1\u6709\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4f46\u662f\u6211\u4eec\u7a0d\u540e\u4f1a\u6dfb\u52a0\u5b83\u3002AppsScript\u5305\u542b\u7c7b\u4f3ccron\u7684\u89e6\u53d1\u5668\u670d\u52a1\uff0c\u4f46\u60a8\u5fc5\u987b\u5c0f\u5fc3\uff1aGoogle\u9650\u5236\u4e86\u811a\u672c\u8fd0\u884c\u7684\u65f6\u95f4\uff0c\u4e5f\u9650\u5236\u4e86\u60a8\u53ef\u4ee5\u6267\u884c\u7684Gmail\u64cd\u4f5c\u7684\u6570\u91cf\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6bcf15\u5206\u949f\u8fd0\u884c\u4e00\u6b21\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u7ba1\u7406\u811a\u672c\uff0c\u53ef\u4ee5\u8ba9\u6211\u7684\u6536\u4ef6\u7bb1\u4fdd\u6301\u6574\u6d01\uff0c\u800c\u4e0d\u4f1a\u8017\u5c3d\u6211\u7684\u914d\u989d\u3002\u76f4\u63a5\u4ece\u7f16\u8f91\u5668\u4e2d\u4e3aprocessMail\u51fd\u6570\u8bbe\u7f6e\u57fa\u4e8e\u65f6\u95f4\u7684\u89e6\u53d1\u5668\uff0c\u65b9\u6cd5\u662f\u8f6c\u5230\u201c\u7f16\u8f91\u201d\uff0c\u7136\u540e\u8f6c\u5230\u201c\u5f53\u524d\u9879\u76ee\u7684\u89e6\u53d1\u5668\u201d\uff0c\u6700\u540e\u8f6c\u5230\u53f3\u4e0b\u89d2\u7684\u201c\u6dfb\u52a0\u89e6\u53d1\u5668\u201d\u3002\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u81ea\u52a8\u5316\u7684\u6700\u7b80\u5355\u90e8\u5206\u4e00\u6b21\u53ea\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e0a\u5de5\u4f5c\uff0c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u4e0a\u4e0b\u6587\uff1a\u4f8b\u5982\uff0c\u6211\u4f7f\u7528\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u786e\u4fdd\u6211\u6240\u6709\u5b58\u6863\u7684\u7535\u5b50\u90ae\u4ef6\u90fd\u6807\u8bb0\u4e3a\u5df2\u8bfb\u3002(\u4ee4\u6211\u56f0\u60d1\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u8fd9\u662f\u8ba9\u5fbd\u7ae0\u5728Gmail\u7684\u79fb\u52a8\u5e94\u7528\u4e2d\u53d1\u6325\u4f5c\u7528\u7684\u552f\u4e00\u65b9\u6cd5\u3002)\u3002\u51fd\u6570processMail(){Const Rules=[markArchivedRead]\uff1bfor(Let Rule Of Rules){Rule()\uff1b}}\u51fd\u6570markArchivedRead(){return eachThread(&#34\uff1bGmail\uff1a\u6807\u8bb0\u5df2\u8bfb\u53d6\u7684\u5b58\u6863\u7ebf\u7a0b&#34\uff1b\uff0c&#34\uff1b-in\uff1a\u6536\u4ef6\u7bb1\u4e3a\uff1a\u672a\u8bfb&#34\uff1b\uff0c\u51fd\u6570(\u7ebf\u7a0b){thread.markRead()\uff1b})\uff1b}\u51fd\u6570eachThread(operation\uff0cquery\uff0cf){const thread=GInbox is\uff1aunread&#34\uff1b\uff0cfunction(Thread){thread.markRead()\uff1b}\u3002=0){Logger.log(&#34\uff1b%s\uff1a\u6ca1\u6709\u4e0e\u67e5\u8be2%s&#34\uff1b\uff0coperation\uff0cquery)\u5339\u914d\u7684\u7ebf\u7a0b\uff1breturn\uff1b}const n=threads.length\uff1bLogger.log(&#34\uff1b%s\uff1a\u627e\u5230\u4e0e\u67e5\u8be2%s&#34\uff1b\uff0coperation\uff0cn\uff0cquery)\u5339\u914d\u7684%s\u4e2a\u7ebf\u7a0b\uff1b\u5bf9\u4e8e(\u8ba9\u7ebf\u7a0b\u7ebf\u7a0b){f(\u7ebf\u7a0b)\uff1b}Logger.log(&#34\uff1b%s\uff1a\u5df2\u5904\u7406%s\u4e2a\u7ebf\u7a0b\uff0c\u5b8c\u6210\uff01&#34\uff1b\uff0cn\uff0coperation)\uff1b}\u3002\n\u6211\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u67095-10\u4e2a\u8fd9\u6837\u7684\u5c0f\u4efb\u52a1\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5e2e\u52a9\u5668\u90fd\u4f1a\u8ba9\u5b83\u4eec\u4fdd\u6301\u7b80\u6d01\u3002\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2aThread\u5c06\u81ea\u5df1\u9650\u5236\u4e3a\u6bcf\u6b21\u8c03\u7528\u6700\u591a\u5904\u7406100\u4e2a\u7ebf\u7a0b\uff0c\u4ee5\u4fdd\u6301\u8f83\u77ed\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5e76\u9650\u5236\u6d88\u8017\u7684Gmail\u64cd\u4f5c\u7684\u6570\u91cf\u3002\u6211\u4f7f\u7528\u7c7b\u4f3c\u7684\u6bcf\u7ebf\u7a0b\u51fd\u6570\u6765\u5b8c\u6210\u5404\u79cd\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u5176\u4e2d\u5927\u591a\u6570\u4efb\u52a1\u90fd\u662f\u5728\u6211\u5f00\u59cb\u843d\u540e\u65f6\u6574\u7406\u6211\u7684\u5b58\u6863\u90ae\u4ef6\u6216\u6e05\u7406\u6211\u7684\u6536\u4ef6\u7bb1\uff0c\u4f8b\u5982\uff1a\u53d6\u6d88\u5b58\u6863\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u3002\u6211\u4f7f\u7528\u661f\u53f7\u6765\u4fdd\u62a4\u6536\u4ef6\u7bb1\u7ebf\u7a0b\uff0c\u4f7f\u5176\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u81ea\u52a8\u5316\uff1b\u5bf9\u4e8e\u53c2\u8003\u6750\u6599\uff0c\u6211\u4f7f\u7528\u6807\u7b7e\u3002\u8ffd\u6eaf\u6027\u5730\u5c06\u6807\u7b7e\u5e94\u7528\u5230\u6211\u7684\u5b58\u6863\u4e2d\uff0c\u56e0\u4e3aGmail UI\u5728\u4fee\u6539\u8d85\u8fc7\u51e0\u5343\u4e2a\u7ebf\u7a0b\u65f6\u6302\u8d77\u3002\u5c06\u4fc3\u9500\u6d3b\u52a8\u5b58\u6863(\u4f7f\u7528\u8c37\u6b4c\u7684\u81ea\u52a8\u5206\u7c7b)\u8d85\u8fc7\u4e09\u5929\uff0c\u9664\u975e\u5b83\u4eec\u662f\u660e\u661f\u3002\u5728\u5f52\u6863\u4e00\u5e74\u540e\u5220\u9664\u5927\u91cf\u901a\u77e5\u3002\u6765\u81eaSentry\u7b49\u5f02\u5e38\u8ddf\u8e2a\u7cfb\u7edf\u7684\u7535\u5b50\u90ae\u4ef6\u662f\u57fa\u4e8e\u65f6\u95f4\u5220\u9664\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u8005\uff1a\u5f53\u5b83\u662f\u6700\u65b0\u7684\u65f6\u5019\uff0c\u5b83\u662f\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4f46\u4e0d\u503c\u5f97\u6c38\u8fdc\u4fdd\u7559\u51e0\u5341\u4ebf\u5b57\u8282\u3002\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u81ea\u52a8\u5f52\u6863\u4e86\u6709\u5f88\u591a\u53c2\u4e0e\u8005\u7684\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u6ca1\u6709\u6765\u81ea\u6211\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4e5f\u6ca1\u6709\u63d0\u5230\u6211\u8d1f\u8d23\u7684\u56e2\u961f\u6216\u9879\u76ee\u3002\u8fd9\u9700\u8981\u5927\u91cf\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u800c\u4e14\u6709\u76f8\u5f53\u591a\u7684\u6b63\u9762\u5f71\u54cd\uff0c\u4f46\u5f53\u6211\u5728\u4e00\u4e9b\u6781\u7aef\u5b98\u50da\u7684\u5de5\u7a0b\u59d4\u5458\u4f1a\u4efb\u804c\u65f6\uff0c\u6211\u7684\u5934\u8111\u4ecd\u7136\u4fdd\u6301\u6e05\u9192\u3002\n\u5c3d\u7ba1\u6211\u7684\u521d\u8877\u662f\u597d\u7684\uff0c\u4f46\u65f6\u4e8b\u901a\u8baf\u548c\u5176\u4ed6\u4e0d\u5fc5\u8981\u7684\u5e16\u5b50\u7ecf\u5e38\u5806\u79ef\u5728\u6211\u7684\u6536\u4ef6\u7bb1\u91cc\u3002\u624b\u5de5\u6e05\u7406\u8fd9\u4e9b\u79ef\u538b\u7684\u4e1c\u897f\u662f\u5f88\u75db\u82e6\u7684\uff0c\u56e0\u4e3a\u6211\u5b9e\u9645\u4e0a\u60f3\u8bfb\u5176\u4e2d\u7684\u5927\u90e8\u5206\uff1a\u6211\u6700\u7ec8\u4f1a\u82e6\u607c\u4e8e\u662f\u5426\u8fd8\u6709\u65f6\u95f4\u518d\u8bfb\u4e00\u7bc7\u6709\u8da3\u7684\u6587\u7ae0\u6216\u5e16\u5b50\uff0c\u6253\u5f00\u4e00\u767e\u4e07\u4e2a\u6d4f\u89c8\u5668\u6807\u7b7e\uff0c\u71c3\u70e7\u51e0\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\uff0c\u6700\u597d\u5728\u5176\u4ed6\u5730\u65b9\u5ea6\u8fc7\u3002\u76f8\u53cd\uff0c\u6211\u4f7f\u7528\u8fc7\u6ee4\u5668\u5728\u90ae\u4ef6\u5230\u8fbe\u65f6\u6807\u8bb0\u6709\u8da3\u4f46\u53ef\u9009\u7684\u90ae\u4ef6\u3002(\u6211\u6709\u5f88\u591a\u8fc7\u6ee4\u5668\uff0c\u6211\u6700\u8fd1\u5f00\u59cb\u4f7f\u7528gmailctl\u7ba1\u7406\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u3002)\u3002\u5982\u679c\u6211\u7684\u6536\u4ef6\u7bb1\u91cc\u5806\u79ef\u4e86\u8d85\u8fc7100\u5c01\u8fd9\u6837\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4f1a\u5c06\u8f83\u65e7\u7684\u90ae\u4ef6\u5b58\u6863\uff0c\u76f4\u5230\u53ea\u5269\u4e0b50\u5c01\u3002\u6211\u8fd8\u7ed9\u81ea\u52a8\u5b58\u6863\u7684\u90ae\u4ef6\u52a0\u4e86\u6807\u7b7e\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u4eec\u7a0d\u540e\u51fa\u73b0\u5728\u641c\u7d22\u4e2d\uff0c\u6211\u77e5\u9053\u6211\u8fd8\u6ca1\u6709\u8bfb\u8fc7\u5b83\u4eec\u3002\u51fd\u6570limitInbox(){const max=100\uff1bconst op=&#34\uff1bgmail\uff1aLimit\u6536\u4ef6\u7bb1&#34\uff1b\uff1bconst\u6e05\u9664=GmailApp.getUserLabelByName(&#34\uff1boptional/purged&#34\uff1b)\uff1b\u5e38\u91cf\u7ebf\u7a0b=GmailApp.search(&#34\uff1bin\uff1a\u6536\u4ef6\u7bb1\u6807\u7b7e\uff1a\u53ef\u9009&#34\uff1b)\uff1bLogger.log(&#34\uff1b%s\uff1a%s\u53ef\u9009\u7ebf\u7a0b&#34\uff1b\uff0cop\uff0cthreads.length)\uff1bIF(threads.length&lt\uff1b=max){Logger.log(&#34\uff1b%s\u3002\u8fd4\u56de\uff1b}\u8ba9n=0\uff1bfor(\u8ba9", "note_en": "We\u2019re all drowning in email. The problem isn\u2019t the blatant spam\u2014it\u2019s easy tounsubscribe from most of that and block the rest. The real killer is the emailthat\u2019s  sort of interesting: discussion on projects you\u2019re peripherallyinvolved in, weekly newsletters, chatter on GitHub issues you filed months ago,and all the other mail you skim when you have the time and skip if you\u2019re busy. Triaging these emails manually can be an exhausting game of whack-a-mole. Butif you\u2019re a Gmail user, there\u2019s hope\u2014you can use AppsScript to automate big parts of thejob. Best of all, it\u2019s free! In this post, I\u2019ll walk you through creating yourfirst AppsScript project and give you a taste of what you can accomplish. (Hattip to  Prashant Varanasi, who first introducedme to AppsScript.)  Create a new AppsScript project, thenadd a small function and save the project. This code doesn\u2019t do anything yet,but we\u2019ll add to it later on.  AppsScript includes a cron-like triggers service, but you have to be careful:Google limits theamount of time your script spends running, and it also limits the number ofGmail operations you can perform. For me, running my email management scriptevery 15 minutes keeps my inbox nicely groomed without blowing through myquotas. Set up a time-based trigger for the  processMail function right fromthe editor by going to \u201cEdit,\u201d then \u201cCurrent project\u2019s triggers,\u201d and finally\u201cAdd Trigger\u201d in the bottom right.  The simplest bits of my email automation work on one thread at a time, with nofurther context required: for example, I use a small function to make sure thatall my archived email is marked read. (It\u2019s puzzling to me that this isn\u2019t thedefault, since it\u2019s the only way to make the badge count on Gmail\u2019s mobile appsuseful.) function processMail() { const rules = [ markArchivedRead ]; for (let rule of rules) { rule(); }}function markArchivedRead() { return eachThread(&#34;gmail: mark archived threads read&#34;, &#34;-in:inbox is:unread&#34;, function(thread) { thread.markRead(); });}function eachThread(operation, query, f) { const threads = GmailApp.search(query).slice(0, 100); if (threads.length &lt;= 0) { Logger.log(&#34;%s: no threads matching query %s&#34;, operation, query); return; } const n = threads.length; Logger.log(&#34;%s: found %s threads matching query %s&#34;, operation, n, query); for (let thread of threads) { f(thread); } Logger.log(&#34;%s: processed %s threads, done!&#34;, n, operation);}\n I have 5\u201310 small tasks like this active most of the time, and the  eachThreadhelper keeps each of them nice and short. Note that  eachThread limits itselfto processing 100 threads per invocation, keeping execution time short andcapping the number of Gmail operations consumed. I use similar per-thread functions for a variety of simple tasks, most of whicheither groom my archived mail or trim my inbox when I start falling behind.Examples include: Un-starring everything in my archive. I use stars to protect inbox threadsfrom further automation; for reference material, I use a label. Retroactively applying labels to my archive, since the Gmail UI hangs whentrying to modify more than a few thousand threads. Archiving promotions (using Google\u2019s automatic categorization) more thanthree days old, unless they\u2019re starred. Deleting high-volume notifications after they\u2019ve been archived for a year.Email from exception-tracking systems like Sentry is a good candidate fortime-based deletion: it\u2019s valuable information when it\u2019s fresh, but it\u2019s notworth keeping gigabytes of it around forever. For a while, I automatically archived long-running threads with lots ofparticipants, no emails from me, and no mention of teams or projects I wasresponsible for. This took a lot of maintenance and had a fair number offalse positives, but kept my sanity intact while I sat on some  extremelybureaucratic engineering committees.\n  Despite my best intentions, newsletters and other non-essential threads oftenaccumulate in my inbox. It\u2019s painful to clear this backlog out by hand, becauseI actually want to read most of it: I end up agonizing over whether I\u2019ve gottime to read  just one more interesting article or thread, opening a millionbrowser tabs, and burning hours of time better spent elsewhere. Instead, I use filters to label interesting-but-optional mail as it arrives. (Ihave a  lot of filters, which I recently started managing with  gmailctl.) If more than a hundred ofthese emails pile up in my inbox, I archive the older messages until only 50remain. I also tag the auto-archived messages, so I know that I haven\u2019t readthem if they show up in search later on. function limitInbox() { const max = 100; const op = &#34;gmail: limit inbox&#34;; const purged = GmailApp.getUserLabelByName(&#34;optional/purged&#34;); const threads = GmailApp.search(&#34;in:inbox label:optional&#34;); Logger.log(&#34;%s: %s optional threads&#34;, op, threads.length); if (threads.length &lt;= max) { Logger.log(&#34;%s: done!&#34;, op); return; } let n = 0; for (let thread of threads.slice(Math.floor(max/2))) { if (!thread.hasStarredMessages()) { thread.addLabel(purged); thread.moveToArchive(); n++; } } if (!onVacation()) { pushSMS(`auto-archived ${n} non-essential emails!`); } Logger.log(&#34;%s: archived %s threads, done!&#34;, n);}function onVacation() { const email = Session.getEffectiveUser().getEmail(); const cal = CalendarApp.getCalendarById(email); for (let event of cal.getEventsForDay(new Date())) { let t = event.getTitle(); if (t.includes(&#34;OOO&#34;) || t.includes(&#34;PTO&#34;) || t.includes(&#34;Vacation&#34;) || t.includes(&#34;vacation&#34;)) { return true; } } return false;}function pushSMS(msg) { // T-Mobile, Sprint, Verizon, and AT&amp;T all support email-to-SMS GmailApp.sendEmail(&#39;1234567890@vtext.com&#39;, &#39;AppsScript&#39;, msg);}\n With this de-bulking script active, going on vacation or getting busy for aweek doesn\u2019t leave me with an hour-long inbox cleanup chore. It\u2019s surprisinglyliberating. I use the  onVacation and  pushSMS functions regularly: the first lets metoggle vacation-only behavior with minimal effort, and the second notifies meif my scripts are running amok.  The most complex portions of my AppsScript project selectively archivenotifications. Code review systems like Phabricator and GitHub, exceptiontrackers like Sentry, and many RSS-like subscriptions send tons ofnotifications. Often, I\u2019m only interested in the oldest or newest unreadnotification for each item. For example, I love reading trashy, RPG-inspired web novels on  RoyalRoad. They send me an email each time a newchapter gets published in a book I\u2019m following, but I only catch up on mytrashy reading a few times a week. Rather than letting all the notificationssit in my inbox, I\u2019d rather keep only the oldest email for each book. function queueLitRPG() { const op = &#34;gmail: queue litRPG&#34;; const threads = GmailApp.search(&#39;in:inbox from:royalroad.com subject:&#34;New Chapter of&#34;&#39;); let unread = {}; for (let thread of threads) { const book = thread.getFirstMessageSubject().replace(/New Chapter of/, &#39;&#39;).trim(); const chapter = { date: thread.getLastMessageDate(), thread: thread }; if (unread[book] == undefined) { unread[book] = [chapter]; } else { unread[book].push(chapter); } } for (const [book, chapters] of Object.entries(unread)) { // sort most recent first const sorted = chapters.slice().sort((a, b) =&gt; b.date - a.date); // keep the oldest, since that&#39;s where I left off reading for (let chapter of sorted.slice(0, -1)) { chapter.thread.moveToArchive(); } Logger.log(&#34;%s: done with %s&#34;, op, book); }}\n I use a similar approach to: Keep only the latest Sentry notification for each exception. Keep only the latest GitHub and Phabricator notifications that new commitshave been pushed to a pull request that I\u2019m reviewing. Archive Phabricator diff notifications (like GitHub pull requests) sent to agroup if someone else has already started a review. Phab makes this very easyby  stamping lots ofinformationinto email headers. I wish GitHub supported something similar.\n  I haven\u2019t worked much with the calendar support in AppsScript yet, but there\u2019sso much low-hanging fruit. I\u2019d love to try: Declining meetings if they don\u2019t leave me time to eat. Scheduling travel time around meetings when necessary. Emailing me a weekly summary of where my time went and who I met with.", "posttime": "2020-06-06 23:04:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,appsscript,gmail,\u7ebf\u7a0b", "title": "\u4f7f\u7528AppsScript\u5b9e\u73b0Gmail\u81ea\u52a8\u5316", "title_en": "Automating Gmail with AppsScript", "transed": 1, "url": "https://akshayshah.org/automating-gmail-with-appsscript/", "via": "", "real_tags": ["app", "gmail", "\u7ebf\u7a0b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005451, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "XS\u662f\u4e00\u79cd\u53d7kdb+/q\u542f\u53d1\u5e76\u53d1\u5e03\u5230\u516c\u5171\u9886\u57df\u7684\u52a8\u6001\u7c7b\u578b\u3001\u52a8\u6001\u4f5c\u7528\u57df\u7684\u4e32\u8054\u9635\u5217\u8bed\u8a00\u3002\u89e3\u91ca\u5668\u548c\u5185\u7f6e\u51fd\u6570\u662f\u7528OCaml\u7f16\u5199\u7684\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u6d4f\u89c8GitHub\u4e0a\u7684\u8d44\u6e90\u3001\u6253\u5f00\u95ee\u9898\u6216\u62c9\u56de\u8bf7\u6c42\uff0c\u8bf7\u67e5\u770bGitHub\u4e0a\u7684\u9879\u76ee\u9875\u9762\u3002XS\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u79cd\u5173\u6ce8\u7d27\u51d1\u6027\u548c\u8868\u73b0\u529b\u7684\u5c0f\u578b\u8bed\u8a00\u3002\u6216\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3meatsturm@cryptm.org", "note_en": "xs is a dynamically typed, dynamically scoped, concatenative arraylanguage inspired by kdb+/q and released into the public domain. Theinterpreter and builtin functions are written in OCaml.\n   Check out the  project page on github if you wish to browse thesource, open an issue or pull request.  xs aims to be a smalllanguage with a focus on compactness and expressiveness. Or email meat  sturm @cryptm .org", "posttime": "2020-06-06 23:04:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "kdb,public,\u52a8\u6001", "title": "XS\uff1a\u4e00\u79cd\u53d7kdb+\u548cforth\u542f\u53d1\u7684\u516c\u5171\u57df\u7ea7\u8054\u6570\u7ec4\u8bed\u8a00", "title_en": "xs: a public-domain concatenative array language inspired by kdb+ and FORTH", "transed": 1, "url": "https://cryptm.org/xs/", "via": "", "real_tags": ["kdb", "public", "\u52a8\u6001"]}, {"category": "", "categoryclass": "", "imagename": "f0c761be94894f8726b9c597ed78d6a6.png", "infoid": 1005450, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Elena\u662f\u4e00\u79cd\u5177\u6709\u540e\u671f\u7ed1\u5b9a\u7684\u901a\u7528\u8bed\u8a00\u3002\u5b83\u662f\u591a\u8303\u4f8b\u7684\uff0c\u7ed3\u5408\u4e86\u51fd\u6570\u5f0f\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7279\u70b9\u3002\u5b83\u540c\u65f6\u652f\u6301\u5f3a\u7c7b\u578b\u548c\u5f31\u7c7b\u578b\u3001\u8fd0\u884c\u65f6\u8f6c\u6362\u3001\u88c5\u7bb1\u548c\u53d6\u6d88\u88c5\u7bb1\u57fa\u5143\u7c7b\u578b\u3001\u76f4\u63a5\u4f7f\u7528\u5916\u90e8\u5e93\u3002\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e30\u5bcc\u7684\u5de5\u5177\u6765\u5904\u7406\u6d88\u606f\u5206\u6d3e\uff1a\u591a\u65b9\u6cd5\u3001\u6d88\u606f\u9650\u5b9a\u3001\u901a\u7528\u6d88\u606f\u5904\u7406\u7a0b\u5e8f\u3002\n\u5f00\u53d1\u548c\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u9047\u5230\u4e00\u79cd\u65b0\u8bed\u8a00\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u95ee\uff1a\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u53e6\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff1f\u7b80\u77ed\u7684\u7b54\u6848\u662f\u5c1d\u8bd5\u4e00\u4e0b\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u4e3a\u4ec0\u4e48\u4e0d\u628a\u6d88\u606f\u5f53\u4f5c\u53ef\u4ee5\u8fdb\u884c\u4e0d\u540c\u64cd\u4f5c\u7684\u666e\u901a\u8bed\u8a00\u5143\u7d20\u6765\u5904\u7406\uff1a\u52a0\u8f7d\u3001\u4f20\u9012\u3001\u4fee\u6539\u3001\u5206\u6d3e\uff1f\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u53cd\u5c04\u7684\u60c5\u51b5\u4e0b\u505a\u5230\u8fd9\u4e00\u70b9\u5417\uff1f\u8fd9\u5c31\u662f\u6211\u7684\u52a8\u673a\u3002Elena\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u65b9\u4fbf\u7f16\u5199\u52a8\u6001\u3001\u591a\u6001\u7684\u4ee3\u7801\uff0c\u5c06\u52a8\u6001\u548c\u9759\u6001\u8bed\u8a00\u7684\u5143\u7d20\u7ed3\u5408\u8d77\u6765\u3002\nElena\u662f\u4e00\u79cd\u5177\u6709\u540e\u671f\u7ed1\u5b9a\u7684\u901a\u7528\u8bed\u8a00\u3002\u5b83\u662f\u591a\u8303\u4f8b\u7684\uff0c\u7ed3\u5408\u4e86\u51fd\u6570\u5f0f\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7279\u70b9\u3002\u5b83\u540c\u65f6\u652f\u6301\u5f3a\u7c7b\u578b\u548c\u5f31\u7c7b\u578b\u3001\u8fd0\u884c\u65f6\u8f6c\u6362\u3001\u88c5\u7bb1\u548c\u53d6\u6d88\u88c5\u7bb1\u57fa\u5143\u7c7b\u578b\u3001\u76f4\u63a5\u4f7f\u7528\u5916\u90e8\u5e93\u3002\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e30\u5bcc\u7684\u5de5\u5177\u6765\u5904\u7406\u6d88\u606f\u5206\u6d3e\uff1a\u591a\u65b9\u6cd5\u3001\u6d88\u606f\u9650\u5b9a\u3001\u901a\u7528\u6d88\u606f\u5904\u7406\u7a0b\u5e8f\u3002\u591a\u91cd\u7ee7\u627f\u53ef\u4ee5\u4f7f\u7528\u6df7\u5408\u548c\u7c7b\u578b\u63a5\u53e3\u6765\u6a21\u62df\u3002\u5185\u7f6e\u811a\u672c\u5f15\u64ce\u5141\u8bb8\u5c06\u81ea\u5b9a\u4e49\u811a\u672c\u5408\u5e76\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\u540c\u65f6\u652f\u6301\u72ec\u7acb\u5e94\u7528\u7a0b\u5e8f\u548c\u865a\u62df\u673a\u5ba2\u6237\u7aef\u3002\nElena\u7f16\u8bd1\u5668\u662f\u7528C++\u5b8c\u5168\u5b9e\u73b0\u7684\u3002\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4e0d\u9700\u8981\u5916\u90e8\u4f9d\u8d56\u9879\uff0c\u5982Flex\u3001Bison.\u3002\u60a8\u53ea\u9700\u8981Visual Studio 2017\u7248\u6216\u66f4\u9ad8\u7248\u672c\u3002\n\u8981\u6784\u5efa\u7f16\u8bd1\u5668\uff0c\u60a8\u53ef\u4ee5\u6253\u5f00CMD\uff0c\u8f6c\u5230\u6839Elena\u6587\u4ef6\u5939\u5e76\u952e\u5165\uff1a\n\u5728\u5f00\u59cb100%\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u7684\u7a0b\u5e8f\u4e4b\u524d\uff0c\u4e86\u89e3\u771f\u6b63\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u7684\u57fa\u672c\u6982\u5ff5\u662f\u6781\u5176\u91cd\u8981\u7684\u3002\n\u5728OOP\u4e2d\uff0c\u7c7b\u5b9a\u4e49\u4e86\u6b64\u7c7b\u578b\u7684\u6240\u6709\u5bf9\u8c61\u901a\u7528\u7684\u4e00\u7ec4\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5b83\u53ef\u80fd\u5305\u542b\u7528\u4e8e\u521b\u5efa\u5176\u5b9e\u4f8b\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u79f0\u4e3a-\u6784\u9020\u51fd\u6570\u3002\n\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u901a\u5e38\uff0c\u5bf9\u8c61\u5b58\u50a8\u5728\u52a8\u6001\u5185\u5b58\u4e2d\u3002\u5bf9\u8c61\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5-Singleton\uff0c\u5b83\u53ea\u4f5c\u4e3a\u5355\u4e2a\u5b9e\u4f8b\u5b58\u5728\u3002\u8bf7\u6ce8\u610f\uff0c\u5728Elena\u4e2d\uff0c\u7c7b\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u50cf\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\u4f7f\u7528\u5b83\u3002\n\u5b57\u6bb5\uff0c\u4e5f\u79f0\u4e3a\u5b9e\u4f8b\u53d8\u91cf\uff0c\u662f\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u3002\u53ea\u6709\u4f7f\u7528\u8d4b\u503c\u6216\u8bfb\u53d6\u5b57\u6bb5\u5185\u5bb9\u7684\u65b9\u6cd5\u624d\u80fd\u8bfb\u53d6\u8fd9\u4e9b\u53d8\u91cf\u3002\u8fd8\u652f\u6301\u9759\u6001\u5b57\u6bb5\u3002\n\u5728C++\u4e2d\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u800c\u5728C#\u4e2d\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u6307\u5411\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u8fd9\u4e24\u4e2a\u6982\u5ff5\u57fa\u672c\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u5f15\u7528\u662f\u7531\u76f4\u63a5\u6307\u9488\u5b9e\u73b0\u7684\uff0c\u800c\u76f4\u63a5\u6307\u9488\u53ea\u662f\u5185\u5b58\u5730\u5740\u3002\u5728Elena\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5f15\u7528\u3002\n\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u51fd\u6570\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u5e94\u7528\u4e8e\u7279\u5b9a\u5bf9\u8c61\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bf4\uff0c\u8be5\u65b9\u6cd5\u662f\u5728\u5bf9\u8c61\u4e0a\u8c03\u7528\u7684\uff0c\u6216\u8005\u662f\u53d1\u9001\u7ed9&#34\uff1b\u5bf9\u8c61\u7684\u3002\u6240\u8ba8\u8bba\u7684\u5bf9\u8c61\u88ab\u79f0\u4e3a\u63a5\u6536\u8005\u3002\u5728\u63a5\u6536\u5bf9\u8c61\u4e0a\u8c03\u7528\u6bcf\u4e2a\u65b9\u6cd5\u3002\u5728C++\u6216C#\u4e2d\uff0c\u63a5\u6536\u5668\u5728Elena-&#34\uff1bself&#34\uff1b\u4e2d\u79f0\u4e3a&#34\uff1bthis&#34\uff1b\u3002\nElena\u4e2d\u7684\u65b9\u6cd5\u7c7b\u4f3c\u4e8eC#\u548cC++\u4e2d\u7684\u65b9\u6cd5\uff0c\u5728C#\u548cC++\u4e2d\uff0c\u5b83\u4eec\u88ab\u8c03\u7528&#34\uff1b\u6210\u5458\u51fd\u6570&#34\uff1b\u3002\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\u5e76\u59cb\u7ec8\u8fd4\u56de\u7ed3\u679c(\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u7ed3\u679c\uff0c\u5219\u8fd4\u56de\u81ea\u5df1\u7684\u5f15\u7528)\u3002\u65b9\u6cd5\u4f53\u662f\u4e00\u7cfb\u5217\u53ef\u6267\u884c\u8bed\u53e5\u3002\u65b9\u6cd5\u4ece\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\uff0c\u5c31\u50cf\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u4e00\u6837\u3002\n&#34\uff1b\u65b9\u6cd5&34\uff1b\u548c&#34\uff1b\u6d88\u606f&#34\uff1b\u4e4b\u95f4\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u3002\u65b9\u6cd5\u662f\u4ee3\u7801\u4f53\uff0c\u800c\u6d88\u606f\u662f\u53d1\u9001\u7684\u5185\u5bb9\u3002\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u51fd\u6570\u3002\u5728\u6b64\u7c7b\u6bd4\u4e2d\uff0c\u53d1\u9001\u6d88\u606f\u7c7b\u4f3c\u4e8e\u8c03\u7528\u51fd\u6570\u3002\u8c03\u7528\u65b9\u6cd5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u6d88\u606f\u53d1\u9001\u8868\u8fbe\u5f0f\u3002\nElena\u672f\u8bed\u660e\u786e\u533a\u5206\u4e86&#34\uff1b\u6d88\u606f&#34\uff1b\u548c&#34\uff1b\u65b9\u6cd5&#34\uff1b\u3002\u6d88\u606f\u53d1\u9001\u8868\u8fbe\u5f0f\u5c06\u5411\u5bf9\u8c61\u53d1\u9001\u6d88\u606f\u3002\u5bf9\u8c61\u5982\u4f55\u54cd\u5e94\u6d88\u606f\u53d6\u51b3\u4e8e\u5bf9\u8c61\u7684\u7c7b\u3002\u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61\u5c06\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u54cd\u5e94\u540c\u4e00\u6d88\u606f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u8c03\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u6cdb\u578b\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u5177\u6709\u6307\u5b9a\u7b7e\u540d(\u53c2\u6570\u7c7b\u578b)\u7684\u4efb\u4f55\u6d88\u606f\u3002\n\u5f53\u6211\u4eec\u5b66\u4e60\u6216\u4ec5\u4ec5\u662f\u4e86\u89e3\u4efb\u4f55\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\u603b\u662f\u8457\u540d\u7684\u7a0b\u5e8fHello world\uff01&#34\uff1b\u3002\n\u4e3a\u4e86\u521b\u5efa\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u5fc5\u987b\u83b7\u5f97Elena\u7f16\u8bd1\u5668\uff0c\u4e3a\u6b64\uff0c\u60a8\u53ea\u9700\u5728\u6b64\u94fe\u63a5\u4e2d\u4e0b\u8f7d\u7f16\u8bd1\u5668\u3002\n\u7531\u4e8ebin\u6587\u4ef6\u5939\u4f4d\u4e8ePATH\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u5bf9\u4e8e\u80fd\u591f\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u4ee5\u8bbf\u95ee\u6240\u4f7f\u7528\u7684Elena\u8fd0\u884c\u65f6\u662f\u5fc5\u8981\u7684\uff0c\u4f8b\u5982\uff0c\u5f53\u5f02\u5e38\u629b\u51fa\u4ee5\u663e\u793a\u5f02\u5e38\u53d1\u751f\u5728\u54ea\u4e2a\u7c7b&amp\uff1b\u65b9\u6cd5\u4e2d\u65f6\u3002\n\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff0c\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u6253\u5f00Elena IDE\uff0c\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u952e\u5165cmd&34\uff1belide&34\uff1b\u6216\u8005\uff0c\u53ea\u9700\u6253\u5f00\u540d\u4e3a#34\uff1belide&34\uff1b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u6253\u5f00elide IDE\u540e\uff0c\u6211\u4eec\u5c06\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u4e3a\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u5165\u83dc\u5355&#34\uff1bFile-&gt\uff1bNew-&gt\uff1bProject&#34\uff1b\uff0c\u5f53\u60a8\u5728\u9879\u76ee\u83dc\u5355\u4e2d\u5355\u51fb\u65f6\uff0c\u4f1a\u6253\u5f00\u5982\u4e0b\u5bf9\u8bdd\u6846\uff1a\n\u7c7b\u578b\uff1a\u662f\u60a8\u5c06\u521b\u5efa\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7c7b\u578b\uff0c\u5982GUI\u3001\u63a7\u5236\u53f0\u3001\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f.\u3002\n\u5355\u51fb&#34\uff1b\u786e\u5b9a&34\uff1b\u540e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6e90\u6587\u4ef6\uff0c\u4e3a\u6b64\uff0c\u53ea\u9700\u8f6c\u5230\u83dc\u5355&#34\uff1b\u6587\u4ef6-&&gt;\u6e90\u6587\u4ef6&#34\uff1b\u6216\u4f7f\u7528\u5feb\u6377\u65b9\u5f0f&#34\uff1bCtrl+N&#34\uff1b\u3002\n\u7f16\u5199\u5b8c\u8fd9\u6bb5\u4ee3\u7801\u540e\uff0c\u60a8\u9700\u8981\u5c06\u9879\u76ee\u548c\u6e90\u4ee3\u7801\u4fdd\u5b58\u5728\u67d0\u4e2a\u76ee\u5f55\u4e2d\uff0c\u60a8\u53ea\u9700\u8981\u6784\u5efa\u5b83\u3002\n\u8fd9\u91cc\uff0c\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u516c\u5171\u51fd\u6570(\u5305\u542b\u51fd\u6570\u548c\u6d88\u606f\u7684\u9759\u6001\u7c7b)\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u4f46\u662f\u53ef\u4ee5\u66f4\u6539\u8fd9\u4e00\u70b9\u3002\n&#34\uff1bsystem&#34\uff1b\uff1a\u5b83\u662f\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u547d\u540d\u7a7a\u95f4\u672c\u8eab\u53ef\u4ee5\u5305\u542b\u7528\u6487\u53f7\u5206\u9694\u7684\u5b50\u5143\u7d20\n\u8fd9\u5bf9\u6211\u4eec\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4f7f\u7528\u53c2\u6570&#34\uff1bHello World\uff01&#34\uff1b\u5411\u547d\u540d\u7a7a\u95f4System\u4e2d\u7684\u7c7bConsole\u7684\u65b9\u6cd5writeLine\u53d1\u9001\u4e00\u6761\u6d88\u606f\u3002\n\u5c31\u50cf\u5728C#\u3001C++\u3001Python\u7b49\u5176\u4ed6\u8bed\u8a00\u4e2d\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u5bfc\u5165\u67d0\u4e9b\u547d\u540d\u7a7a\u95f4\u6dfb\u52a0\u7279\u6b8a\u5173\u952e\u5b57\uff0c\u4f7f\u7528\u6b64\u5173\u952e\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u3002\n\u8fd9\u4e2a\u7a0b\u5e8f\u552f\u4e00\u7684\u95ee\u9898\u662f\u6211\u4eec\u4e0d\u80fd\u8bfb\u53d6\u8f93\u51fa\u2026\u2026\u6240\u4ee5\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u4f7f\u7528\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\n\u6700\u540e\u4e00\u4e2a\u5206\u53f7\u53ef\u4ee5\u7701\u7565\u3002\u7f16\u5199\u76f8\u540c\u7a0b\u5e8f\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6548\u679c\u5f88\u597d\uff0c\u56e0\u4e3a\u5728Elena\u4e2d\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3002\n\u5c31\u50cf\u5728Smalltalk\u4e2d\u4e00\u6837\uff0c\u5728Elena\u4e2d\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\uff0c\u8981\u521b\u5efa\u53d8\u91cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u5c5e\u6027var\u3002\n\u56e0\u6b64\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u6765\u4ece\u952e\u76d8\u4e0a\u8bfb\u53d6\u4e00\u4e9b\u4e1c\u897f\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){var number\uff1a=console.print(&#34\uff1b\u952e\u5165\u7f16\u53f7\uff1a&#34\uff1b).readLine().toInt()\uff1b*console.printLine(&#34\uff1b\u60a8\u952e\u5165&#34\uff1b\uff0cnumber)\uff1b*console.readChar()}\u3002\n\u5f88\u7b80\u5355\uff0c\u5bf9\u5427\uff1f\u56e0\u6b64\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u518d\u5bfc\u5165\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u540d\u79f0\u7a7a\u95f4\u6269\u5c55\u5305\u542b\u6269\u5c55\u65b9\u6cd5#&#34\uff1bloadLineTo[2]&#34\uff1b\u7684\u5b9a\u4e49\u3002\nvar x\uff1a=new IntNumber()\uff1bvar y\uff1a=0\uff1bvar k\uff1a=new system&#39\uff1bCalendar&#39\uff1bdate()\uff1bvar n\uff1a=k.Year\uff1bvar s\uff1a=&#34\uff1bHello World&#34\uff1b\uff1bvar u\uff1a=0fffffh\uff1bvar l\uff1a=3.1415r\uff1bvar m\uff1a=new RealNumber(3.14r)\uff1bvar j\uff1a=true\uff1bvar h\uff1a=false\uff1b\n\u5bfc\u5165\u6269\u5c55\uff1bSingleton Tester{printMe(S){console.printLine(S)}}\u516c\u5171\u7a0b\u5e8f(){var a\uff1bvar b\uff1a=a\uff1a=2\uff1bTester.printMe(A)\uff1bTester.printMe(B)\uff1bTester.printMe(b\uff1a=3)\uff1b}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1b\u5355\u4f8b\u6d4b\u8bd5\u5668{printMe(S){console.printLine(S)}assignMe(ref retVal\uff0cval){retVal\uff1a=val}}public program(){Tester.assignMe(ref var I\uff0c2)\uff1bTester.printMe(I)\uff1b}\u3002\n\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7801\u6a21\u677f-if\u58f0\u660eElena\u4e2d\u7684\u5206\u652f\u8bed\u53e5\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\uff1a\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){console.writeLine\uff1a&#34\uff1bHi\uff01\uff01\uff1a)&#34\uff1b\uff1bvar you name\uff1a=console.writeLine(&#34\uff1b\u60a8\u7684\u540d\u5b57\uff1f&#34\uff1b).readLine()\uff1bconsole.writeLine\uff1a&#34\uff1b\uff1bvar your Age\uff1a=console.loadLineTo(new Integer())\uff1bvar number of fChildrens\uff1a=0\uff1bif(your Age&Get\u3002\u4f60\u8fd8\u5f88\u5e74\u8f7b\uff01\uff01&34\uff1b}\u5426\u5219(your Age&gt\uff1b=11&amp\uff1b&amp\uff1byour Age&lt\uff1b=20){console.writeLine\uff1a&#34\uff1b\u9752\u6625\u671f\uff0c\u4f1a\u6709\u5f88\u591a\u4eba\u751f\u6c14\u5417\uff1f&#34\uff1b}\u5982\u679c(your Age&&gt;\uff1b=21&amp\uff1b&amp\uff1byour Age&lt\uff1b=30){console.writeLine\uff1a&34\uff1b\u60a8\u5df2\u7ecf\u6709\u5b69\u5b50\u4e86\u5417\uff1f(\u662f/\u5426)&34\uff1b\uff1bString\u6709\u5b69\u5b50\u5417\uff1f\u5982\u679c(haveChildren.lowerCase()==&#34\uff1byes&#34\uff1b){number OfChildrens\uff1a=console.writeLine(&#34\uff1bCool\uff01\uff01\u60a8\u6709\u51e0\u4e2a\u5b69\u5b50\uff1f&#34\uff1b).loadLineTo(new Integer())}}\u5982\u679c(your Age&gt\uff1b=31&amp\uff1b&amp\uff1byour Age&lt\uff1b=40){console.writeLine\uff1a&#34\uff1b\u7ae5\u5e74\u7684\u524d40\u5e74\u662f\u6700\u56f0\u96be\u7684\uff01&34\uff1b}\u5982\u679c(your Age&&gt;\uff1b=41&amp\uff1b&amp\uff1byour Age&lt\uff1b=50){console.writeLine\uff1a&#34\uff1bLife\u3002=51&amp\uff1b&amp\uff1b\u60a8\u7684\u5e74\u9f84&lt\uff1b=60){console.writeLine\uff1a&#34\uff1b\u4eab\u53d7\u60a8\u7684\u751f\u6d3b\uff01&#34\uff1b}\u5982\u679c(your Age&gt\uff1b=61){console.writeLine\uff1a&#34\uff1b\u60a8\u5230\u4e86\u4eab\u53d7\u548c\u653e\u677e\u7684\u5e74\u9f84\uff01\uff01&#34\uff1b}\uff1bconsole.readChar()}\u3002\n\u50cf\u5728\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4e00\u6837\uff0cElena\u652f\u6301\u5faa\u73af\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770bWhile\u5faa\u73af\uff0c\u8fd9\u4e2a\u5faa\u73af\u662f\u4f7f\u7528WHILE\u548cFOR\u6a21\u677f\u5b9e\u73b0\u7684\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){var array\uff1a=Array.Allocation\uff1a200\uff1bvar i\uff1a=0\uff1bWhile(i&lt\uff1barray.Length){array[i]\uff1a=i*10\uff1bi+=1}\uff1bfor(int i\uff1a=0\uff0ci&lt\uff1barray.Length\uff0ci+=1){console.printLine(&#34\uff1bat index&#34\uff1b\uff0ci\uff0c&#34\uff1b\u5177\u6709\u503c\uff1a&#34\uff1b\uff0carray[i])\uff1b\nElena\u652f\u6301\u4ee5\u4e0b\u6a21\u677f\u8fd0\u7b97\u7b26\uff1adoIfNotNil(.\uff1f\uff0c\u7c7b\u4f3c\u4e8eC#)\u548ctryOrReturn(.\\)\u3002\ntryOrReturn\u5c1d\u8bd5\u5411\u5de6\u64cd\u4f5c\u6570\u53d1\u9001\u6d88\u606f\u5e76\u8fd4\u56de\u64cd\u4f5c\u7ed3\u679c\u3002\u5982\u679c\u5bf9\u8c61\u4e0d\u5904\u7406\u5b83\uff0c\u5219\u8fd4\u56de\u7a7a\u3002\n\u5bfc\u5165\u7cfb\u7edf\uff1b\u5bfc\u5165\u6269\u5c55\uff1bB{test(String Command){console.printLine(Command)\uff1b}}C\uff1bpublic program(){var a\uff1a=nil\uff1bvar b\uff1a=new B()\uff1bvar c\uff1a=new C()\uff1ba.\uff1ftest(&#34\uff1bfired a.\uff1ftest&34\uff1b)\uff1bb.\uff1ftest(&#34\uff1bfired b.\uff1ftest&34\uff1b)\uff1ba.\\test(&#34\uff1bfired a.\\test&34\uff1b)\uff1b\u5df2\u89e3\u96c7b.\\test&#34\uff1b)\uff1bc.\\test(&#34\uff1bfired c.\\test&#34\uff1b)\uff1bconsole.readLine()\uff1b}\u3002\npublic program(){1//\u58f0\u660e\u5d4c\u5957\u51fd\u6570Func f1\uff1a={console.writeLine(&#34\uff1bfired&#39\uff1bf1&#39\uff1b&#34\uff1b)}\uff1bFunc f2\uff1a=nil\uff1bf1.\uff1f()\uff1bf2.\uff1f()\uff1bconsole.readLine()\uff1b}\u3002\nElena\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u8981\u521b\u5efa\u7a0b\u5e8f\uff0c\u6211\u4eec\u5fc5\u987b\u58f0\u660e\u65b0\u7c7b\u3002\n\u7c7b\u7528\u4ee3\u7801(\u65b9\u6cd5)\u5c01\u88c5\u6570\u636e(\u5b57\u6bb5)\u4ee5\u8bbf\u95ee\u5b83\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u8bfe\u7a0b\u5185\u5bb9\u3002\u901a\u5e38\uff0c\u8be5\u5b57\u6bb5\u5f15\u7528\u53e6\u4e00\u4e2a\u7c7b\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6211\u4eec\u5230\u8fbe\u5185\u5bb9\u88ab\u89c6\u4e3a\u539f\u59cb\u6570\u636e(\u4f8b\u5982\uff0c\u6570\u5b57\u503c\u6216\u6587\u5b57\u503c)\u7684\u539f\u59cb\u7c7b\u3002\n\u7c7b\u5f62\u6210\u7ee7\u627f\u6811\u3002\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u8d85\u7ea7\u7c7b\u7cfb\u7edf\u5bf9\u8c61\u3002\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528\u5206\u6d3e\u5904\u7406\u7a0b\u5e8f(\u6df7\u5408/\u7ec4\u5bf9\u8c61)\u6216\u63a5\u53e3\u7ee7\u627f\u4ee3\u7801\uff0c\u4f46Elena\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\u3002\u5f53\u6ca1\u6709\u63d0\u4f9b\u7236\u7c7b\u65f6\uff0c\u8be5\u7c7b\u76f4\u63a5\u7ee7\u627f\u7cfb\u7edf\u5bf9\u8c61(\u8d85\u7c7b)\u3002\n\u7c7b\u5b9e\u4f8b\u53ef\u4ee5\u5728\u7279\u6b8a\u65b9\u6cd5-\u6784\u9020\u51fd\u6570\u7684\u5e2e\u52a9\u4e0b\u521b\u5efa\u3002\u6784\u9020\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u7c7b\u5b57\u6bb5\u3002\u6709\u4e00\u4e9b\u7279\u6b8a\u7c7b\u578b\u7684\u7c7b\u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528(\u5d4c\u5957\u7c7b\u3001\u6269\u5c55\u3001\u95ed\u5305)\u3002\u7c7b\u672c\u8eab\u88ab\u89c6\u4e3a\u65e0\u72b6\u6001\u5bf9\u8c61\u3002\n\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u7f16\u5199\u4e00\u4e9b\u7c7b\uff0c\u4ee5\u4f7f\u5176\u5b9e\u73b0\u548c\u4f7f\u7528\u66f4\u52a0\u6e05\u6670\u3002\n\u5bfc\u5165\u7cfb\u7edf\uff1b\u5bfc\u5165\u6269\u5c55\uff1b\u7c7bMyFirstClass{\u6784\u9020\u51fd\u6570(){console.printLine(&#34\uff1bMyFirstClass\u5b9e\u4f8b\u5316\uff01ehhhhhh\uff01\uff01&#34\uff1b)}}public program(){var myFirstClass\uff1a=new MyFirstClass()\uff1bconsole.readChar()}\u3002\n\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u672c\u539f\u5219\u4e4b\u4e00\u662f\u7c7b\u4e4b\u95f4\u7684\u7ee7\u627f\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5b9e\u73b0\u4e24\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u57fa\u7c7b\u548c\u4e00\u4e2a\u6d3e\u751f\u7c7b\u3002\n\u5bfc\u5165\u7cfb\u7edf\uff1b\u5bfc\u5165\u6269\u5c55\uff1b\u7c7bMyFirstBaseClass{string theField1\uff1bstring theField2\uff1b\u6784\u9020\u51fd\u6570new(){theField1\uff1a=&#34\uff1b&#34\uff1b\uff1btheField2\uff1a=&#34\uff1b&#34\uff1b}\u6784\u9020\u51fd\u6570new(String Field1){console.printLine(&#34\uff1bfieldBaseClass1=&#34\uff1b\uff0cfield1)\uff1btheField1\uff1a=field1\uff1bconsole.printLine(&#34\uff1bfieldBaseClass2=&#34\uff1b\uff0cfield2)\uff1btheField1\uff1a=field1\uff1btheField2\uff1a=field2}printFields(){console.printLine(self.Field1)\uff1bconsole.printLine(self.Field2)}Field1=theField1\uff1b//property Field1 Field2=theField2\uff1b--\u4eceDerivedClass&#34\uff1b){console.printLine(&#34\uff1b\u4f7f\u75281\u4e2a\u53c2\u6570\u8c03\u7528MyFirstDerivedClass\u7684\u6784\u9020\u51fd\u6570&#34\uff1b)\uff1bconsole.printLine(&#34\uff1bfield1=&#34\uff1b\uff0cfield1)}\u6784\u9020\u51fd\u6570(String field1\uff0cstring field2)&lt\uff1b=new(field1+&34\uff1b\uff1b--\u4eceDerivedClass&#34\uff1b\uff0cfield2\u8c03\u7528\u3002console.printLine(&#34\uff1bfield1=&#34\uff1b\uff0cfield1)\uff1bconsole.printLine(&#34\uff1bfield2=&#34\uff1b\uff0cfield2)}}public Program(){var myFirstDerivedClassInstance\uff1a=nil\uff1bvar number OfArgsToInitInstance\uff1a=0\uff1bvar ContinueLoop\uff1a=true\uff1b\u800c(ContineLoop){number OfArgsToInitInstance\u3002&amp\uff1bnumber OfArgsToInitInstance&lt\uff1b=2){ContineLoop\uff1a=false}}\uff1b//\u8fd9\u662f&#39\uff1b\u5f00\u5173&#39\uff1b.\u3002number OfArgsToInitInstance=&gt\uff1b0{myFirstDerivedClassInstance\uff1a=new MyFirstDerivedClass()}1{myFirstDerivedClassInstance\uff1a=new MyFirstDerivedClass(&#34\uff1b\u6765\u81ea\u7a0b\u5e8f&#34\uff1b)}}2{myFirstDerivedClassInstance\uff1a=new MyFirstDerivedClass(&#34\uff1bArgument1\u3002\n\u53ef\u4ee5\u58f0\u660e\u4e0d\u80fd\u5728\u7c7b\u5916\u90e8\u8c03\u7528\u7684\u79c1\u6709\u65b9\u6cd5\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bclass MyClass{private printPrivate(){console.printLine(&#34\uff1bprivate prin.&#34\uff1b)}printPublic(){console.print(&#34\uff1bcall from public print-&#34\uff1b)\uff1b//self\u662f\u5bf9\u5f53\u524d\u5bf9\u8c61self.printPrivate()}}public program(){//\u6ce8\u610f\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u672a\u663e\u5f0f\u58f0\u660e//\u7cfb\u7edf\u5bf9\u8c611(\u6ca1\u6709\u8f93\u5165\u53c2\u6570)\u5c06\u7ee7\u627fvar myClass\uff1a=new MyClass\uff1a=new MyClass\uff1a=new MyMyClass\uff1a=new MyClass\uff1a=new MyClass\u3002myClass.printPrivate()}\u3002\n\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u7c7b\u5b57\u6bb5\u4e0d\u80fd\u5728\u7c7b\u4e4b\u5916\u8bbf\u95ee\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u5b83\uff1a\n\u5bfc\u5165\u6269\u5c55\uff1b\u7c7bMyClass{int_x\uff1bget int x()=_x\uff1b//\u83b7\u53d6\u8bbf\u95ee\u5668\u96c6x(Int O)//\u8bbe\u7f6e\u8bbf\u95ee\u5668{_x\uff1a=o}}public program(){var myClass\uff1a=new MyClass()\uff1bmyClass.x\uff1a=2\uff1bconsole.printLine(&#34\uff1bMyClass.x=&#34\uff1b\uff0cmyClass.x)}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1b\u7c7bMyClass{prop int x\uff1b}public program(){var myClass\uff1a=new MyClass()\uff1bmyClass.x\uff1a=2\uff1bconsole.printLine(&#34\uff1bMyClass.x=&#34\uff1b\uff0cmyClass.x)}\n\u8ba9\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u5728\u57fa\u672c\u6570\u636e\u7c7b\u578b(int\u3001long\u3001real\u3001string)\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u6269\u5c55\u6a21\u5757\u4e2d\u58f0\u660e\u7684\u6269\u5c55\u65b9\u6cd5\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){int n\uff1a=20\uff1breal r\uff1a=3.4r\uff1blong l\uff1a=5000000000000l\uff1bconsole.writeLine(&#34\uff1bn=&#34\uff1b+n.toString())\uff1bconsole.writeLine(&#34\uff1br=&#34\uff1b+r.toString())\uff1bconsole.writeLine(&#34\uff1bl=&#34\uff1b+l.toString()\uff1b}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){int n\uff1a=20\uff1blong l\uff1a=50000000000l\uff1bconsole.writeLine(&#34\uff1bn=0o&#34\uff1b+n.toString(8))\uff1bconsole.writeLine(&#34\uff1bl=0x&#34\uff1b+l.toString(16))\uff1b}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1b\u516c\u5171\u7a0b\u5e8f(){int n\uff1a=&#34\uff1b20&#34\uff1b.toInt()\uff1b//=20 long l\uff1a=&#34\uff1b5000000000000&#34\uff1b.toLong()\uff1b//=50000000000l\u5b9e\u9645r\uff1a=&#34\uff1b2.3&#34\uff1b.toReal()\uff1b//=2.3r}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1b\u516c\u5171\u7a0b\u5e8f(){int n\uff1a=&#34\uff1b24&#34\uff1b.toInt(8)\uff1b//=20 long l\uff1a=&#34\uff1b48C27395000&#34\uff1b.toLong(16)\uff1b//=50000000000001}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){int n\uff1a=200\uff1blong l\uff1a=n.toLong()\uff1b//=200l real r1\uff1a=n.toReal()\uff1b//=200.0r real R2\uff1a=l.toReal()\uff1b//=200.0r}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1b\uff1apublic program(){int n\uff1a=200\uff1blong l\uff1a=n\uff1b//=200l real r1\uff1a=n\uff1b//=200.0r real r2\uff1a=l\uff1b//=200.0r}\u3002\n\u5982\u679c\u5b9e\u6570\u6ca1\u6709\u5c0f\u6570\u90e8\u5206\uff0c\u5219\u53ef\u4ee5\u5c06\u5b9e\u6570\u8f6c\u6362\u4e3a\u6574\u6570\uff1a\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){real r\uff1a=200.0r\uff1blong l\uff1a=r.toLong()\uff1b//=200l int n\uff1a=r.toInt()\uff1b//=200}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){real r\uff1a=200.2r\uff1breal r2\uff1a=r.Integer\uff1b//=200.0r long l\uff1a=r.Integer.toLong()\uff1b//=200l int n\uff1a=r.Integer.toInt()\uff1b//=200}\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bPUBLIC PROGRAM(){try{new object().nonExistingMethod()\uff1b}catch\uff1a\uff1a{\u51fd\u6570(MethodNotFoundException E)*{}\uff1aconsole.console.printLine(&#34\uff1b\u65b9\u6cd5\u672a\u627e\u5230&#34\uff1b)*}**\u51fd\u6570(\u5f02\u5e38e)*{}*console.printLine(&#34\uff1b\u672a\u77e5\u9519\u8bef&#34\uff1b)(&#34\uff1bUNKNOWN ERROR&#34\uff1b)(&#34\uff1b\u672a\u77e5\u9519\u8bef&#34\uff1b)(&#34\uff1bUNKNOWN ERROR&#34\uff1b)(&#34\uff1b\u672a\u77e5\u9519\u8bef&#34\uff1b)(&#34\uff1b\u672a\u77e5\u9519\u8bef&#34\uff1b)\u3002\n\u5bfc\u5165\u6269\u5c55\uff1bpublic program(){console.printLine(&#34\uff1btry&#34\uff1b)\uff1btry{var o\uff1a=new object()\uff1bo.ail()\uff1b}Finally{console.printLine(&#34\uff1bFinally&#34\uff1b)\uff1b}catch(Exception E){console.printLine(&#34\uff1berror\uff01&#34\uff1b)\uff1b}}\u3002\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u4fdd\u8bc1\u5bf9\u8c61\u59cb\u7ec8\u6b63\u786e\u5173\u95ed\uff0c\u53ef\u4ee5\u4f7f\u7528Using Pattern\uff1a\n\u5bfc\u5165\u6269\u5c55\uff1b\u7c7bA{\u6784\u9020\u51fd\u6570(){console.printLine(&#34\uff1b\u6253\u5f00&#34\uff1b)\uff1b}do(){console.printLine(&#34\uff1b\u505a&#34\uff1b)\uff1b}\u5173\u95ed(){console.printLine(&#34\uff1b\u5173\u95ed&#34\uff1b)\uff1b}}\u516c\u5171\u7a0b\u5e8f(){\u6b63\u5728\u4f7f\u7528(var a\uff1a=new A(){a.do()\uff1b}}\u3002\nimport system&#39\uff1bio\uff1bimport tensions\uff1bpublic program(){//\u4ece\u547d\u4ee4\u884c\u53c2\u6570var filename\uff1a=program_arguments[1]\u4e2d\u83b7\u53d6\u6587\u4ef6\u540d\uff1b//\u4f7f\u7528(auto read\uff1a=File.Assign(Filename).textreader())\u6253\u5f00\u6587\u672c\u6587\u4ef6\u8bfb\u53d6\u5668{//\u91cd\u590d\u76f4\u5230\u8bfb\u53d6\u5b8c\u6240\u6709\u884c\uff0c\u540c\u65f6(reader.Available){//\u8bfb\u53d6\u884c\u5b57\u7b26\u4e32line\uff1a=reader.readLine()\uff1b//\u6253\u5370\u884cconsole.printLine(line\u3002\nimport system&#39\uff1bio\uff1bimport tensions\uff1bpublic program(){//\u4ece\u547d\u4ee4\u884c\u53c2\u6570var filename\uff1a=program_arguments[1]\u4e2d\u83b7\u53d6\u6587\u4ef6\u540d\uff1b//\u4f7f\u7528(auto Writer\uff1a=File.Assign(Filename).textwriter()){//\u91cd\u590d\u64cd\u4f5c\uff0c\u76f4\u5230\u8f93\u5165\u7a7a\u884c\u4e3a\u6b62(string line\uff1a=console.readLine()\uff0cline\uff01=emptyString\uff0cline\uff1a=console.readLine()){//\u4fdd\u5b58\u5230\u6587\u4ef6\u5199\u5165\u5668\n\u5982\u679c\u8981\u8ffd\u52a0\u5230\u73b0\u6709\u6587\u4ef6\uff0c\u5219\u5e94\u4f7f\u7528logger()\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a\nimport system&39\uff1bio\uff1bimport Extensions\uff1bimport system&#39\uff1bCollection\uff1bpublic program(){//\u4ece\u547d\u4ee4\u884c\u53c2\u6570var filename\uff1a=PROGRAM_ARGUMENTS[1]\uff1b//\u521b\u5efa\u5217\u8868\u4ee5\u4fdd\u5b58\u8bfb\u53d6\u7684\u6570\u636e\u5217\u8868&lt\uff1bbyte&gt\uff1bdump\uff1a=new list&lt\uff1bbyte&gt\uff1b()\uff1b//\u4f7f\u7528(AUTO READER\uff1a=BinaryFileReader)\u6253\u5f00\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u53d6\u5668\u3002new(Filename)){//\u91cd\u590d\u76f4\u5230\u8bfb\u53d6\u5b8c\u6240\u6709\u6587\u4ef6\uff0c\u540c\u65f6(reader.Available){//\u5c06\u5f53\u524d\u5b57\u8282\u8bfb\u5165\u53d8\u91cfb//\u6ce8\u610f\u53d8\u91cf\u58f0\u660e\u4e3aJust-in-place reader.read(Ref Byte B)\uff1b//\u5c06\u8bfb\u53d6\u7684\u5b57\u8282\u6dfb\u52a0\u5230\u8f6c\u50a8\u6587\u4ef6\u3002append(B)\uff1b}\uff1b}\uff1b//\u5c06\u6587\u4ef6\u5185\u5bb9\u6253\u5370\u4e3a\u5b57\u8282\u5217\u8868console.printLine(dump.asEnumerable())\uff1b}\u3002\n\u5bfc\u5165\u7cfb\u7edf\uff1b\u5bfc\u5165\u6269\u5c55\uff1b\u516c\u5171\u7a0b\u5e8f(){//\u6307\u5b9a\u3002\n..", "note_en": "ELENA is a general-purpose language with late binding. It is multi-paradigm, combining features of functional and object-oriented programming. It supports both strong and weak types, run-time conversions, boxing and unboxing primitive types, direct usage of external libraries. Rich set of tools are provided to deal with message dispatching : multi-methods, message qualifying, generic message handlers.\n  A programming language is a formidable\u00a0task to develop and to learn. So encountering a new language you may ask: why another programming language? The short answer is to try it a little differently. Why not to treat the message like a normal language element with which different operations are possible : loading, passing, modifying, dispatching? Could we do it without using reflection all the way? This was my motivation. ELENA is designed to facilitate writing dynamic, polymorphic code, combing elements of dynamic and static languages.\n ELENA is a general-purpose language with late binding. It is multi-paradigm, combining features of functional and object-oriented programming. It supports both strong and weak types, run-time conversions, boxing and unboxing primitive types, direct usage of external libraries. Rich set of tools are provided to deal with message dispatching : multi-methods, message qualifying, generic message handlers. Multiple-inheritance can be simulated using mixins and type interfaces. Built-in script engine allows to incorporate custom defined scripts into your applications. Both stand-alone applications and Virtual machine clients are supported\n        The ELENA compiler was fully implemented in C++. To compile, the compiler does not require external dependencies, such as Flex, Bison... you just need Visual Studio 2017\u00a0or higher.\n  To build the compiler, you can open the CMD, go to root elena folder and type:\n     It is extremely important before beginning the program in a 100% object-oriented language, to know the basic concepts of a truly object-oriented language.\n     In OOP, a class defines a set of properties and methods that are common to all objects of this type. It may contain special methods to create its instances, called - constructors.\n  An object is an instance of a class. In general, objects are stored in dynamic memory. There is a special case of the object - singleton, which exists only as a single instance.  Note that in ELENA, a class is an object itself and can be used like any other object.\n  Fields, also known as the instance variables, are the variables declared within a class. These variables can only be read with the use of methods to assign or read the contents of the field.  Static fields are supported as well.\n  In C++, we talk about &#34;pointers&#34; to objects while in C#, we talk about &#34;references&#34; to objects. Both concepts are basically the same and references are implemented by straight pointers, which are just memory addresses. In ELENA, we use references.\n  Method is like a function, except that it is applied to a specific object. We also say that the method is &#34;invoked&#34; on an object or &#34;sent to&#34; an object. The object in question is called the &#34;receiver&#34;. Every method is invoked on receiving object. In C++ or C#, the receiver is called &#34;this&#34;, in ELENA - &#34;self&#34;.\n Methods in ELENA are similar to methods in C# and C++, where they are called &#34;member functions&#34;. Methods may take arguments and always return a result (if no result provided &#34;self&#34; reference is returned). The method body is a sequence of executable statements. Methods are invoked from expression, just as in other languages.\n  There is an important distinction between &#34;methods&#34; and &#34;messages&#34;. A method is a body of code while a message is something that is sent. A method is similar to a function. in this analogy, sending a message is similar to calling a function. An expression which invokes a method is called a &#34;message sending expression&#34;.\n ELENA terminology makes a clear distinction between &#34;message&#34; and &#34;method&#34;. A message-sending expression will send a message to the object. How the object responds to the message depends on the class of the object. Objects of differents classes will respond to the same message differently, since they will invoke different methods. Generic methods may accept any message with the specified signature (parameter types).\n  A great start for when we are studying or just knowing any new programming language, is always the famous program &#34; Hello world!&#34;.\n In order to create our first program, we have to get the ELENA compiler, for this, you just need to download the compiler in  this link.\n   With the  bin folder is in your path system, this is necessary to be able to generate the executable to access the elena runtime that is used for example, when a exception throws to show in what class &amp; method the exception happens.\n Let&#39;s start, first of all, we need to open the ELENA IDE, for this, you can type in CMD &#34;elide&#34; or, just open the executable called &#34;elide&#34;.\n After opening the elide IDE, we will create a new project, for this, we just need to go to menu &#34; File-&gt;New-&gt;Project&#34;, when you click in the project menu, it will open a dialog like this:\n   Type: Is the type of application than you will create, like GUI, Console, Console App running over VM ....\n   After you click in &#34; ok&#34;, we need to create a new source file, for this, just go to menu &#34; File-&gt;Source file&#34; or use the shortcut &#34; Ctrl+N&#34;.\n   After you write this code, you need to save the project and the source code in some directory and you just need to build it.\n   Here, we declare a  public function (a  static class containging  function\u00a0message). By default, the &#34; program&#34; is the entry point of the program, but, it&#39;s possible to change this.\n   &#34; system&#34;: It is a namespace, the namespace itself may contain sub elements separated by apostrophes\n What does this mean for us? That means that we send a message to method  writeLine of class console in namespace system with parameter &#34; Hello World!&#34;.\n Like in other languages, like C#, C++, Python, we can add a special keyword to &#34; import&#34; some namespace, with this, we can &#39;reduce&#39; code.\n   The unique problem that we have with this program is that we can&#39;t read the output..., so, to fix this, we just need to use one more method, and, we can use this method in two ways.\n     The last semicolon can be omitted.  This second way to write the same program works well because in ELENA, every method returns an object.\n  Like in Smalltalk, in ELENA, everything is a object, so, to create variables, we just need to use an attribute  var.\n   So, as an example, let&#39;s write a simple program to read something from the keybord.\n  import extensions;public program(){\u00a0 \u00a0 var number := console.print(&#34;Type a number: &#34;).readLine().toInt();\u00a0 \u00a0 console.printLine(&#34;You typed &#34;, number);\u00a0 \u00a0 console.readChar() }\n Really simple, right? So, in this example, we need to import one more namespace, the namespace extensions contain the definition for the extension method\u00a0&#34; loadLineTo[2]&#34;.\n  var x := new IntNumber();var y := 0;var k := new system&#39;calendar&#39;Date();var n := k.Year;var s := &#34;Hello World&#34;;var u := 0fffffh;var l := 3.1415r;var m := new RealNumber(3.14r);var j := true;var h := false;\n  import extensions; singleton Tester{ printMe(s) { console.printLine(s) }} public program(){ var a; var b := a :=  2; Tester.printMe(a); Tester.printMe(b); Tester.printMe(b :=  3);}\n    import extensions;singleton Tester{ printMe(s) { console.printLine(s) } assignMe( ref retVal, val) { retVal := val }} public program(){ Tester.assignMe( ref var i,  2); Tester.printMe(i);}\n    Branching statements in ELENA can be declared using a code template -  if. Let&#39;s take a look:\n   import extensions; public program(){ console.writeLine: &#34; Hi!! :)&#34;; var yourName := console.writeLine( &#34; Whats your name ?&#34;).readLine(); console.writeLine: &#34; How old are you ?&#34;; var yourAge := console.loadLineTo( new Integer()); var numberOfChildrens :=  0;  if(yourAge &gt;=  0 &amp;&amp; yourAge &lt;=  10) { console.writeLine: &#34; You&#39;re still very young!!&#34; }  else  if(yourAge &gt;=  11 &amp;&amp; yourAge &lt;=  20) { console.writeLine: &#34; Adolescence, come a lot of people angry?&#34; }  else  if(yourAge &gt;=  21 &amp;&amp; yourAge &lt;=  30) { console.writeLine: &#34; Do you already have children ? ( yes/no )&#34;; string haveChildren := console.readLine();  if(haveChildren.lowerCase() ==  &#34; yes&#34;) { numberOfChildrens := console.writeLine( &#34; Cool!! how many kids do you have ?&#34;) .loadLineTo( new Integer()) } }  else  if(yourAge &gt;=  31 &amp;&amp; yourAge &lt;=  40) { console.writeLine: &#34; The first 40 years of childhood are the most difficult !!!&#34; }  else  if(yourAge &gt;=  41 &amp;&amp; yourAge &lt;=  50) { console.writeLine: &#34; Life begins at 40!&#34; }  else  if(yourAge &gt;=  51 &amp;&amp; yourAge &lt;=  60) { console.writeLine: &#34; Enjoy your LIFE !!!&#34; }  else  if(yourAge &gt;=  61) { console.writeLine: &#34; You are at the age to enjoy and relax !!&#34; }; console.readChar()}\n  Like in other programming languages, ELENA has a support for loops, let&#39;s take a look at the  while loop, this loop is implemented using templates  while  and   for.\n    import extensions;  public program(){ var  array := Array.allocate: 200; var i :=  0;  while(i &lt;  array.Length) {  array[i] := i *  10; i +=  1 };  for( int i :=  0, i &lt;  array.Length, i +=  1) { console.printLine( &#34; At index &#34;, i,  &#34;  has the value:&#34;,  array[i]); }; console.readChar()}\n   ELENA supports the following template operators:  doIfNotNil ( .?, similar to C# ) and  tryOrReturn ( .\\ ).\n  tryOrReturn tries to send a message to  left-operand and returns the result of the operation. If the object does not handle it -  nil is returned.\n import system;import extensions;B{ test(string command) { console.printLine(command); }}C; public program(){ var a := nil; var b :=  new B(); var c :=  new C(); a.?test( &#34; Fired a.?test&#34;); b.?test( &#34; Fired b.?test&#34;); a.\\test( &#34; Fired a.\\test&#34;); b.\\test( &#34; Fired b.\\test&#34;); c.\\test( &#34; Fired c.\\test&#34;); console.readLine();}\n    public program(){\u00a0 // declaring a nested function Func f1 := { console.writeLine(&#34;Fired &#39;f1&#39;&#34;) }; Func f2 := nil; f1.?(); f2.?(); console.readLine();}\n    ELENA is an object-oriented language. To create a program, we have to declare new classes.\n A class encapsulates data (fields) with code (methods) to access it. In most cases, it is not possible to get a direct access to the class content. Usually, the field refers to another class and so on until we reach &#34;primitive&#34; ones which content are considered as raw data (e.g., numeric or literal values).\n Classes form the inheritance tree. There is the common super class -  system&#39;Object. ELENA does not support multiple inheritance, though it is possible to inherit the code using a dispatch handler (mixins / group objects) or interfaces. When the parent is not provided, the class inherits directly  system&#39;Object (the super class).\n A class instance can be created with the help of the special methods - constructors. A constructor is used mostly to initialize the class fields. There are special types of classes which do not have constructors and can be used directly (nested classes, extensions, closures). A class itself is considered as a stateless object.\n To understand this information, we will write some classes, to make clearer its implementation and use.\n  import system;import extensions;class MyFirstClass{ constructor() { console.printLine(&#34;MyFirstClass instancied!!! ehhhhhhh!!&#34;) }}public program(){ var myFirstClass := new MyFirstClass(); console.readChar()}\n    One of the basic principles of object-oriented programming is inheritance between classes, so let&#39;s implement two classes, a base class and a derived class.\n import system;import extensions; class MyFirstBaseClass{ string theField1; string theField2; constructor  new() { theField1 :=  &#34; &#34;; theField2 :=  &#34; &#34; } constructor  new(string field1) { console.printLine( &#34; fieldBaseClass1 = &#34;, field1); theField1 := field1; theField2 :=  &#34; &#34;; } constructor  new(string field1, string field2) { console.printLine( &#34; fieldBaseClass1 = &#34;, field1); console.printLine( &#34; fieldBaseClass2 = &#34;, field2); theField1 := field1; theField2 := field2 } printFields() { console.printLine(self.Field1); console.printLine(self.Field2) } Field1 = theField1;  //  property Field1 Field2 = theField2;  //  property Field2} class MyFirstDerivedClass : MyFirstBaseClass{ constructor  new() { console.writeLine: &#34; Constructor of MyFirstDerivedClass called with no parameters&#34; } constructor  new(string field1) &lt;=  new(field1 +  &#34;  -- Called from DerivedClass&#34;) { console.printLine( &#34; Constructor of MyFirstDerivedClass called with 1 parameters&#34;); console.printLine( &#34; field1 = &#34;, field1) } constructor(string field1, string field2) &lt;=  new(field1 +  &#34;  -- Called from DerivedClass&#34;, field2 +  &#34;  -- Called from DerivedClass&#34;) { console.printLine( &#34; Constructor of MyFirstDerivedClass called with 2 parameters&#34;); console.printLine( &#34; field1 = &#34;, field1); console.printLine( &#34; field2 = &#34;, field2) }} public program(){ var myFirstDerivedClassInstance := nil; var numberOfArgsToInitInInstance :=  0; var continueLoop :=  true;  while(continueLoop) { numberOfArgsToInitInInstance := console.printLine( &#34; Enter with how much variables you want to use in instance init ? (0/1/2)&#34;) .readLine().toInt();  if(numberOfArgsToInitInInstance &gt;=  0 &amp;&amp; numberOfArgsToInitInInstance &lt;=  2) { continueLoop :=  false } };  //  This is a &#39;switch&#39;... numberOfArgsToInitInInstance =&gt;  0 { myFirstDerivedClassInstance :=  new MyFirstDerivedClass() }  1 { myFirstDerivedClassInstance :=  new MyFirstDerivedClass( &#34; Argument1 from program&#34;) }  2 { myFirstDerivedClassInstance :=  new MyFirstDerivedClass( &#34; Argument1 from program&#34;,  &#34; Argument2 from program&#34;) } : { console.writeLine: &#34; invalid option...&#34; }; myFirstDerivedClassInstance.printFields(); console.readChar()}\n It is possible to declare the  private methods which cannot be called outside the class.\n import extensions; class MyClass{  private printPrivate() { console.printLine( &#34; private print.&#34;) } printPublic() { console.print( &#34; Calling from public print - &#34;);  //  self is a reference to the current object self.printPrivate() }} public program(){  //  Note that if the constructor explicitly is not declared   //  the system&#39;Object one (without input parameters) is inherited var myClass :=  new MyClass(); myClass.printPublic(); myClass.printPrivate()}\n In normal case, the class fields cannot be accessed outside the class. That&#39;s why we may declare a special method to access it:\n import extensions; class MyClass{  int _x; get  int x() = _x;  //  get accessor set x( int o)  //  set accessor  { _x := o }} public program(){ var myClass :=  new MyClass(); myClass.x :=  2; console.printLine( &#34; MyClass.x=&#34;, myClass.x)}\n  import extensions; class MyClass{ prop  int x;} public program(){ var myClass :=  new MyClass(); myClass.x :=  2; console.printLine( &#34; MyClass.x=&#34;, myClass.x)}\n  Let&#39;s learn how-to convert basic data types ( int,  long,  real,  string) between one other. We will use the extension methods declared in extensions module.\n  import extensions; public program(){  int n :=  20; real r :=  3.4r;  long l := 5000000000000l; console.writeLine( &#34; n=&#34; + n.toString()); console.writeLine( &#34; r=&#34; + r.toString()); console.writeLine( &#34; l=&#34; + l.toString());}\n    import extensions;  public program(){  int n :=  20;  long l := 5000000000000l; console.writeLine( &#34; n=0o&#34; + n.toString( 8)); console.writeLine( &#34; l=0x&#34; + l.toString( 16));}\n    import extensions; public program(){  int n :=  &#34; 20&#34;.toInt();  //  = 20  long l :=  &#34; 5000000000000&#34;.toLong();  //  = 5000000000000l real r :=  &#34; 2.3&#34;.toReal();  //  = 2.3r}\n  import extensions; public program(){  int n :=  &#34; 24&#34;.toInt( 8);  //  = 20  long l :=  &#34; 48C27395000&#34;.toLong( 16);  //  = 5000000000000l}\n  import extensions; public program(){  int n :=  200;  long l := n.toLong();  //  = 200l real r1 := n.toReal();  //  = 200.0r real r2 := l.toReal();  //  = 200.0r}\n  import extensions; : public program(){  int n :=  200;  long l := n;  //  = 200l real r1 := n;  //  = 200.0r real r2 := l;  //  = 200.0r}\n Conversions from the real number to the integer are possible provided the real number has no fraction part:\n import extensions; public program(){ real r :=  200.0r;  long l := r.toLong();  //  = 200l  int n := r.toInt();  //  = 200}\n  import extensions; public program(){ real r :=  200.2r; real r2 := r.Integer;  //  = 200.0r  long l := r.Integer.toLong();  //  = 200l  int n := r.Integer.toInt();  //  = 200}\n   import extensions; public program(){  try {  new  Object().nonExistingMethod(); }\u00a0 \u00a0  catch::\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 function(MethodNotFoundException e)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0console.printLine( &#34; Method not found&#34;)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 function(Exception e)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0console.printLine( &#34; Unknown error&#34;)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n  import extensions; public program(){ console.printLine( &#34; Try&#34;);  try { var o :=  new  Object(); o.fail(); }  finally { console.printLine( &#34; Finally&#34;); }  catch(Exception e) { console.printLine( &#34; Error!&#34;); }}\n    Using pattern can be used if we want to garantee that the object will always be correctly closed:\n import extensions; class A{ constructor() { console.printLine( &#34; opening&#34;); }  do() { console.printLine( &#34; doing&#34;); } close() { console.printLine( &#34; closing&#34;); }} public program(){  using(var a :=  new A()) { a. do(); }}\n     import system &#39; io;import extensions;public program() { // getting a file name from the command line argument var fileName := program_arguments[1]; // opening a text file reader using(auto reader := File.assign(fileName).textreader()) { // repeating until all the lines are read while (reader.Available) { // read the line string line := reader.readLine(); // print the line console.printLine(line); }; } }\n  import system &#39; io;import extensions;public program() { // getting a file name from the command line argument var fileName := program_arguments[1]; // opening a text file writer using(auto writer := File.assign(fileName).textwriter()) { // repeating until the empty line is entered for(string line := console.readLine(), line != emptyString, line := console.readLine()) { // save to the file writer.writeLine(line) } } }\n  If we want to append to the existing file, then we should use  logger() method, e.g.:\n   import system &#39; io;import extensions;import system&#39;collections; public program() {  //  getting a file name from the command line argument var fileName := program_arguments[ 1];  //  creating a list to hold the read data List&lt;byte&gt; dump :=  new List&lt;byte&gt;();  //  opening a binary file reader  using( auto reader := BinaryFileReader. new(fileName)) {  //  repeating until all the file is read   while (reader.Available) {  //  read the current byte into a variable b  //  note the variable is declared just-in-place reader.read( ref byte b);  //  add the read byte to the dump  dump.append(b); }; };  //  print the file content as a list of bytes console.printLine(dump.asEnumerable());}\n  import system &#39; io;import extensions; public program(){ // specifyin\n......", "posttime": "2020-06-06 23:03:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u7f16\u7a0b\u8bed\u8a00,elena", "title": "Elena\u7f16\u7a0b\u8bed\u8a00\u7b80\u4ecb", "title_en": "Introduction to Elena Programming Language", "transed": 1, "url": "https://www.codeproject.com/Articles/1127103/Introduction-to-ELENA-Programming-Language", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "elena"]}, {"category": "", "categoryclass": "", "imagename": "d0f176eaa45d38dee7dfa5858bfb97d6.jpg", "infoid": 1005449, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u65b0\u516c\u5e03\u7684\u6587\u4ef6\u4ee4\u4eba\u6000\u7591\u56fd\u6c11\u533b\u7597\u670d\u52a1\u7cfb\u7edf\u7684\u65b0\u51a0\u80ba\u708e\u8ddf\u8e2a\u548c\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e8e\u672c\u6708\u5e95\u5728\u5168\u56fd\u63a8\u51fa\u7684\u8bf4\u6cd5\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u5546\u52a1\u90e8\u957f\u7eb3\u5fb7\u5e0c\u59c6\u00b7\u624e\u54c8\u7ef4(Nadhim Zahawi)\u8868\u793a\uff0c\u4ed6\u5e0c\u671b\u8fd9\u6b3eAPP-\u5408\u540c\u8ffd\u8e2a\u8ba1\u5212\u7684\u6838\u5fc3\u90e8\u5206-\u80fd\u57286\u6708\u5e95\u4e4b\u524d\u63a8\u51fa\u3002\n\u4f46\u536b\u751f\u548c\u793e\u4f1a\u4fdd\u969c\u90e8\u4e0eNCC\u96c6\u56e2\u4e4b\u95f4\u7684\u4e00\u4efd\u5408\u540c\u663e\u793a\uff0c\u5b89\u5168\u6d4b\u8bd5\u5de5\u4f5c\u53ef\u80fd\u8981\u52307\u6708\u5e95\u624d\u80fd\u5b8c\u6210\u3002\n\u56fd\u68077.5\u4e07GB\u7684\u534f\u8bae\u4e8e5\u67081\u65e5\u751f\u6548\uff0c\u4f46\u76f4\u52307\u670831\u65e5\u624d\u7ed3\u675f\uff0c\u8fd9\u5f15\u53d1\u4e86\u4eba\u4eec\u7684\u7591\u95ee\uff0c\u5373\u4e3a\u4ec0\u4e48\u653f\u5e9c\u6700\u521d\u58f0\u79f0\uff0c\u52305\u6708\u4e2d\u65ec\uff0c\u5728\u5168\u56fd\u8303\u56f4\u5185\u63a8\u5e7f\u662f\u53ef\u884c\u7684\u3002\u4e0eHeleCloud\u7b7e\u8ba2\u7684\u7b2c\u4e8c\u4efd\u6d4b\u8bd5\u5408\u540c\uff0c\u4ef7\u503c135,000 GB\uff0c\u8981\u52307\u67083\u65e5\u624d\u80fd\u5b8c\u6210\u3002\n\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8(BBC)\u5468\u4e94\u62a5\u9053\u79f0\uff0c\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u4f1a\u57287\u6708\u521d\u51c6\u5907\u5c31\u7eea\uff0c\u4f46\u201c\u4e0d\u80fd\u4fdd\u8bc1\u65f6\u95f4\u8868\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u4e0b\u6ed1\u201d\u3002\u4e00\u4f4d\u9879\u76ee\u5185\u90e8\u4eba\u58eb\u544a\u8bc9BBC\uff1a\u201c\u5510\u5b81\u8857\u5bf9\u98ce\u9669\u7684\u6001\u5ea6\u5df2\u7ecf\u88ab\u5f7b\u5e95\u6539\u53d8\u4e86--\u4ed6\u4eec\u4e0d\u60f3\u8ba9\u5b83\u53d1\u5e03\uff0c\u76f4\u5230\u5b83\u5b8c\u7f8e\u65e0\u7455\u3002\u201d\u624e\u54c8\u7ef4\u8bf4\uff0c\u5728\u201c\u6211\u4eec\u8ba4\u4e3a\u5b83\u5f88\u5065\u58ee\u201d\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u4e0a\u7ebf\u3002\n\u4f46\u662f\uff0c\u9664\u975eNCC\u96c6\u56e2\u63d0\u524d\u7ed3\u675f\u5de5\u4f5c\uff0cNHSX\u80fd\u591f\u8fc5\u901f\u5b9e\u65bd\u4ed6\u4eec\u7684\u5efa\u8bae\uff0c\u5426\u5219\u8fd9\u6b3e\u5df2\u7ecf\u5728\u6000\u7279\u5c9b\u8fdb\u884c\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u8981\u52307\u6708\u5e95\u624d\u80fd\u51c6\u5907\u597d\u3002\n\u7f8e\u56fd\u5065\u5eb7\u670d\u52a1\u6742\u5fd7(The Health Service Journal)\u57285\u6708\u521d\u900f\u9732\uff0c\u5f53\u65f6\u5168\u56fd\u8303\u56f4\u5185\u7684\u63a8\u5e7f\u4ecd\u5b9a\u4e8e\u5f53\u6708\u4e2d\u65ec\u8fdb\u884c\uff0c\u5f53\u65f6\u8fd9\u6b3e\u5e94\u7528\u5c1a\u672a\u901a\u8fc7\u5c06\u5176\u7eb3\u5165NHS\u81ea\u5df1\u7684\u8f6f\u4ef6\u5e93\u6240\u9700\u7684\u6d4b\u8bd5\u3002\u5b83\u6ca1\u6709\u901a\u8fc7\u7f51\u7edc\u5b89\u5168\u3001\u4e34\u5e8a\u5b89\u5168\u548c\u6027\u80fd\u6d4b\u8bd5\u3002\n\u653f\u5e9c\u6700\u521d\u5c06\u8fd9\u6b3e\u5e94\u7528\u4f5c\u4e3a\u653f\u5e9c\u8054\u7cfb\u4eba\u8ffd\u8e2a\u8ba1\u5212\u7684\u5173\u952e\u90e8\u5206\u8fdb\u884c\u8425\u9500\uff0c\u4f46\u8d1f\u8d23\u76d1\u7763\u8be5\u8ba1\u5212\u7684TalkTalk\u524d\u9996\u5e2d\u6267\u884c\u5b98\u8fea\u591a\u00b7\u54c8\u4e01(Dido Harding)\u540e\u6765\u8868\u793a\uff0c\u8fd9\u53ea\u662f\u201c\u4e0a\u9762\u7684\u6a31\u6843\u201d\u3002\n\u63a5\u89e6\u8005\u8ffd\u8e2a\u8ba1\u5212\u4e2d\u4ee5\u4eba\u4e3a\u672c\u7684\u5143\u7d20\u5df2\u7ecf\u4e0a\u7ebf\uff0c\u4f46\u8fd9\u4e5f\u5f15\u53d1\u4e86\u5b89\u5168\u62c5\u5fe7\uff0c\u7279\u522b\u662f\u5173\u4e8e\u6b3a\u8bc8\u8005\u53ef\u80fd\u4f1a\u5982\u4f55\u5bfb\u6c42\u5229\u7528\u8be5\u8ba1\u5212\u4f5c\u4e3a\u5e4c\u5b50\uff0c\u6b3a\u9a97\u53d7\u5bb3\u8005\u4ea4\u51fa\u654f\u611f\u4e2a\u4eba\u6570\u636e\u3002\n\u4e0a\u4e2a\u6708\uff0c\u5f53\u88ab\u95ee\u53ca\u98ce\u9669\u65f6\uff0c\u8fd9\u4f4d\u526f\u9996\u5e2d\u533b\u7597\u5b98\u8868\u793a\uff1a\u201c\u6211\u8ba4\u8bc6\u5230\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5bf9\u6765\u81ea\u5916\u90e8\u7ec4\u7ec7\u7684\u4e92\u52a8\u4f1a\u975e\u5e38\u8c28\u614e\uff0c\u8fd9\u662f\u975e\u5e38\u6b63\u786e\u7684\uff0c\u4f46\u4e2a\u4eba\u4f1a\u975e\u5e38\u660e\u786e\u5730\u544a\u8bc9\u4f60\uff0c\u4ed6\u4eec\u6253\u7535\u8bdd\u662f\u6709\u7279\u6b8a\u539f\u56e0\u7684\u3002\u201d\n\u201c\u6211\u8ba4\u4e3a\uff0c\u5f53\u6709\u4eba\u7ed9\u4f60\u6253\u7535\u8bdd\u65f6\uff0c\u8fd9\u4e00\u70b9\u4f1a\u975e\u5e38\u660e\u663e\u3002\u4ed6\u4eec\u90fd\u662f\u53d7\u8fc7\u4e13\u4e1a\u8bad\u7ec3\u7684\u4eba\uff0c\u5750\u5728\u4ed6\u4eec\u4e0a\u65b9\u7684\u662f\u4e00\u7fa4\u8d44\u6df1\u4e34\u5e8a\u4e13\u4e1a\u4eba\u5458\u3002\u201d\n\u5176\u4ed6\u95ee\u9898\u4ecd\u7136\u7b3c\u7f69\u7740\u8be5\u9879\u76ee\uff0c\u5305\u62ec\u901a\u8fc7\u8fd9\u6b3e\u5e94\u7528\u4ea7\u751f\u7684\u6570\u636e\u5c06\u5982\u4f55\u88ab\u5e15\u5170\u63d0\u5c14\u7ba1\u7406\u7684\u65b0\u51a0\u80ba\u708e\u6570\u636e\u5b58\u50a8\u5229\u7528\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u4f1a\u6210\u529f\u904f\u5236\u75be\u75c5\u7684\u4f20\u64ad\u3002\n\u82f1\u56fd\u6b63\u5728\u901a\u8fc7\u8fd9\u6b3e\u5e94\u7528\u5f00\u8f9f\u81ea\u5df1\u7684\u9053\u8def\uff0c\u5b83\u907f\u5f00\u4e86\u82f9\u679c(Apple)\u548c\u8c37\u6b4c(Google)\u5f00\u53d1\u7684\u53bb\u4e2d\u5fc3\u5316\u6846\u67b6\uff0c\u8f6c\u800c\u91c7\u7528\u4e00\u4e2a\u7cfb\u7edf\uff0c\u63d0\u4f9b\u66f4\u591a\u5173\u4e8e\u75be\u75c5\u4f20\u64ad\u7684\u6570\u636e\uff0c\u4f46\u9690\u79c1\u4fdd\u62a4\u8f83\u5c11\u3002", "note_en": "Newly-released documents have cast doubt on claims that the NHS\u2019s Covid-19 track and trace app will be ready to launch nationally by the end of the month.\n Earlier this week the business minister Nadhim Zahawi said he hoped the app, a central part of the contract tracing scheme, would be rolled out by the end of June.\n But a contract between the Department for Health and Social Care and NCC Group suggests a security testing exercise may not be complete until the end of July.\n The \u00a375,000 deal came into effect on the 1 May, but does not conclude until 31 July, raising questions about why the government initially claimed that a nationwide rollout would be viable by mid-May. A second testing contract with HeleCloud, worth \u00a3135,000, does not conclude until 3 July.\n The BBC reported on Friday that the app should be ready by early July, but that there is \u201cno guarantee that the timetable won\u2019t slip further\u201d. A project insider  told the BBC: \u201cDowning Street\u2019s attitude to risk has been dialled right down \u2013 they don\u2019t want it to be released until it\u2019s perfect.\u201d Zahawi said it wouldn\u2019t go live until \u201cwe think it is robust\u201d.\n  But, unless NCC Group concludes its work ahead of schedule and NHSX is able to rapidly implement their recommendations, it\u2019s possible the app, which is already being tested on the Isle of Wight, may not be ready until the end of of July.\n The\u00a0 Health Service Journal revealed in early May, when a nationwide rollout was still slated for the middle of that month, that the app hadn\u2019t passed the tests required for it to be included in the NHS\u2019s own software library. It failed the cyber security, clinical safety and performance tests.\n The government had initially marketed the app a key part of the government\u2019s contact tracing scheme, but Dido Harding, the former TalkTalk CEO tasked with overseeing the scheme, has since said that it is only the \u201ccherry on top\u201d.\n The people-led element of the contact tracing scheme has already gone live, but that too has raised security concerns, specifically around how fraudsters might seek to use the scheme as a guise to trick victims into handing over sensitive personal data.\n Quizzed about the risks last month, the deputy chief medical officer drew criticism after stating: \u201cI recognise that many of us will be very cautious, and quite rightly so, about interactions from external organisations, but individuals will make it very clear to you that they are calling for a particular reason.\n \u201cI think it will be very evident when somebody rings you these are professionally trained individuals and sitting over them are a group of senior clinical professionals.\u201d\n Other questions still loom over the project, including how the data generated through the app will be harnessed by the Covid-19 data store managed by Palantir, and whether it will even succeed in containing the spread of the illness.\n The UK is forging its own path with the app, having shunned a decentralised framework developed by Apple and Google in favour of a system that provides more data on the spread of the disease, but has fewer privacy safeguards.", "posttime": "2020-06-06 23:02:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,\u8bf4\u6cd5,cast,\u8ba1\u5212", "title": "\u65b0\u533b\u751f\u5bf9NHS\u8054\u7cfb\u4eba\u8ffd\u8e2a\u5e94\u7528\u7a0b\u5e8f\u80fd\u5426\u6309\u65f6\u51c6\u5907\u7684\u8bf4\u6cd5\u8868\u793a\u6000\u7591", "title_en": "New docs cast doubt on claim NHS contact tracing app will be ready on time", "transed": 1, "url": "https://tech.newstatesman.com/security/security-contracts-cast-doubt-on-claim-nhs-contact-tracing-app-will-be-ready-by-end-of-june", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "\u8bf4\u6cd5", "cast", "\u8ba1\u5212"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005448, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u60a8\u5728\u7f51\u7ad9\u4e2d\u5bfc\u822a\u65f6\uff0c\u6b64\u7f51\u7ad9\u4f7f\u7528Cookie\u6765\u6539\u5584\u60a8\u7684\u4f53\u9a8c\u3002\u5728\u8fd9\u4e9bcookie\u4e2d\uff0c\u88ab\u5f52\u7c7b\u4e3a\u5fc5\u8981\u7684cookie\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u7f51\u7ad9\u7684\u57fa\u672c\u529f\u80fd\u7684\u5de5\u4f5c\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u8fd8\u4f7f\u7528\u7b2c\u4e09\u65b9cookie\u6765\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u548c\u4e86\u89e3\u60a8\u5982\u4f55\u4f7f\u7528\u672c\u7f51\u7ad9\u3002\u53ea\u6709\u7ecf\u8fc7\u60a8\u7684\u540c\u610f\uff0c\u8fd9\u4e9bCookie\u624d\u4f1a\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\u3002\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u9000\u51fa\u8fd9\u4e9bcookie\u3002\u4f46\u662f\u9009\u62e9\u4e0d\u4f7f\u7528\u8fd9\u4e9bcookie\u53ef\u80fd\u4f1a\u5bf9\u60a8\u7684\u6d4f\u89c8\u4f53\u9a8c\u4ea7\u751f\u5f71\u54cd\u3002", "note_en": "This website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.", "posttime": "2020-06-06 23:02:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u7a0b\u5e8f,\u5927\u8111,brain,cookie", "title": "\u7a0b\u5e8f\u5458\u7684\u5927\u8111\u5728\u54ea\u91cc\u5b58\u50a8\u6240\u6709\u7684\u4ee3\u7801\uff1f", "title_en": "Where does a Programmer\u2019s brain store all the coding?", "transed": 1, "url": "https://androidrookies.com/where-does-a-programmers-brain-store-all-the-coding/", "via": "", "real_tags": ["\u4ee3\u7801", "\u7a0b\u5e8f", "\u5927\u8111", "brain", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "09e86e76bd04a52e4b26adee598c4ec4.jpeg", "infoid": 1005447, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566(\u8def\u900f\u793e)-\u5468\u4e94\uff0c\u82f1\u56fd\u79d1\u5b66\u5bb6\u505c\u6b62\u4e86\u4e00\u9879\u4e3b\u8981\u7684\u836f\u7269\u8bd5\u9a8c\uff0c\u6b64\u524d\u8be5\u8bd5\u9a8c\u53d1\u73b0\uff0c\u88ab\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u5439\u6367\u4e3a\u5927\u6d41\u884c\u4e2d\u6f5c\u5728\u201c\u6e38\u620f\u89c4\u5219\u6539\u53d8\u8005\u201d\u7684\u6297\u759f\u75be\u836f\u7269\u7f9f\u57fa\u6c2f\u55b9\u5728\u6cbb\u7597\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u65b9\u9762\u201c\u6beb\u65e0\u7528\u5904\u201d\u3002\n\u201c\u8fd9\u4e0d\u662f\u5bf9COVID-19\u7684\u6cbb\u7597\u3002\u8fd9\u5e76\u4e0d\u7ba1\u7528\uff0c\u201c\u725b\u6d25\u5927\u5b66\u6559\u6388\u9a6c\u4e01\u00b7\u5170\u5fb7\u96f7(Martin Landray)\u544a\u8bc9\u8bb0\u8005\uff0c\u4ed6\u662f\u6062\u590d\u8bd5\u9a8c\u7684\u5171\u540c\u8d1f\u8d23\u4eba\u3002\n\u201c\u8fd9\u4e00\u7ed3\u679c\u5e94\u8be5\u4f1a\u6539\u53d8\u4e16\u754c\u5404\u5730\u7684\u533b\u7597\u5b9e\u8df5\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u505c\u6b62\u4f7f\u7528\u4e00\u79cd\u65e0\u7528\u7684\u836f\u7269\u4e86\u3002\u201c\u3002\n\u7279\u6717\u666e\u7684\u76f4\u8a00\u4e0d\u8bb3\u7684\u652f\u6301\u63d0\u9ad8\u4e86\u4eba\u4eec\u5bf9\u8fd9\u79cd\u6709\u6570\u5341\u5e74\u5386\u53f2\u7684\u836f\u7269\u7684\u671f\u671b\uff0c\u4e13\u5bb6\u8868\u793a\uff0c\u5982\u679c\u88ab\u8bc1\u660e\u6709\u6548\uff0c\u8fd9\u79cd\u836f\u7269\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u79cd\u5ec9\u4ef7\u800c\u5e7f\u6cdb\u53ef\u7528\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u6297\u51fb\u8fd9\u79cd\u5927\u6d41\u884c\u3002\u8fd9\u79cd\u5927\u6d41\u884c\u5df2\u5728\u5168\u7403\u8303\u56f4\u5185\u611f\u67d3\u4e86640\u591a\u4e07\u4eba\uff0c\u5bfc\u81f4\u8fd140\u4e07\u4eba\u6b7b\u4ea1\u3002\n\u4e0a\u4e2a\u6708\u53d1\u8868\u5728\u533b\u5b66\u6742\u5fd7\u201c\u67f3\u53f6\u5200\u201d\u4e0a\u7684\u4e00\u9879\u7814\u7a76\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u8be5\u836f\u7269\u7684\u5b89\u5168\u6027\u62c5\u5fe7\uff0c\u5e76\u5bfc\u81f4\u65b0\u51a0\u80ba\u708e\u5bf9\u8be5\u836f\u7269\u7684\u51e0\u9879\u7814\u7a76\u88ab\u53eb\u505c\uff0c\u56f4\u7ed5\u8be5\u836f\u7269\u7684\u4e89\u8bae\u4e0e\u65e5\u4ff1\u589e\u3002\u67f3\u53f6\u5200\u7684\u8fd9\u9879\u7814\u7a76\u968f\u540e\u5728\u5468\u56db\u88ab\u64a4\u56de\uff0c\u6b64\u524d\u8be5\u7814\u7a76\u7684\u4f5c\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u4e0d\u786e\u5b9a\u5176\u6570\u636e\u3002\n\u725b\u6d25\u5927\u5b66\u533b\u5b66\u548c\u6d41\u884c\u75c5\u5b66\u6559\u6388\u5170\u5fb7\u96f7\u6307\u51fa\uff0c\u5173\u4e8e\u8be5\u836f\u7528\u4e8e\u6cbb\u7597\u65b0\u51a0\u80ba\u708e\u7684\u201c\u5de8\u5927\u731c\u6d4b\u201d\uff0c\u4f46\u4ed6\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u201c\u7f3a\u4e4f\u6765\u81ea\u5927\u578b\u968f\u673a\u8bd5\u9a8c\u7684\u53ef\u9760\u4fe1\u606f\u201d\u3002\n\u4ed6\u8bf4\uff0c\u5eb7\u590d\u7684\u521d\u6b65\u7ed3\u679c\uff0c\u8fd9\u662f\u4e00\u9879\u968f\u673a\u8bd5\u9a8c\uff0c\u73b0\u5728\u5df2\u7ecf\u76f8\u5f53\u6e05\u695a\uff1a\u7f9f\u57fa\u6c2f\u55b9\u4e0d\u80fd\u964d\u4f4eCOVID-19\u4f4f\u9662\u60a3\u8005\u7684\u6b7b\u4ea1\u98ce\u9669\u3002\n\u201c\u5982\u679c\u4f60\u4f4f\u9662\u4e86\uff0c\u4e0d\u8981\u670d\u7528\u7f9f\u57fa\u6c2f\u55b9\uff0c\u201d\u4ed6\u8bf4\u3002\n\u7f9f\u6c2f\u55b9\u6062\u590d\u8bd5\u9a8c\u5c061,542\u540d\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u968f\u673a\u5206\u914d\u5230\u7f9f\u6c2f\u55b9\u6cbb\u7597\u7ec4\uff0c\u5e76\u4e0e3,132\u540d\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u968f\u673a\u5206\u914d\u5230\u672a\u7528\u836f\u7684\u6807\u51c6\u6cbb\u7597\u7ec4\u8fdb\u884c\u6bd4\u8f83\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u7ed3\u679c\u663e\u793a\uff0c28\u5929\u540e\u7684\u6b7b\u4ea1\u7387\u3001\u4f4f\u9662\u65f6\u95f4\u6216\u5176\u4ed6\u7ed3\u679c\u6ca1\u6709\u663e\u8457\u5dee\u5f02\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u660e\u5c3c\u82cf\u8fbe\u5927\u5b66\u7684\u4e00\u9879\u968f\u673a\u8bd5\u9a8c\u53d1\u73b0\uff0c\u8be5\u836f\u7269\u5bf9\u9884\u9632\u63a5\u89e6\u51a0\u72b6\u75c5\u6bd2\u7684\u4eba\u611f\u67d3\u65e0\u6548\u3002\n\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(WHO)\u5468\u4e94\u8868\u793a\uff0c\u6062\u590d\u7ed3\u679c\u4e0d\u4f1a\u6539\u53d8\u5176\u6062\u590d\u7f9f\u57fa\u6c2f\u55b9\u6d4b\u8bd5\u7684\u8ba1\u5212\uff0c\u8fd9\u662f\u5176\u201c\u56e2\u7ed3\u201d\u8bd5\u9a8c\u7684\u4e00\u90e8\u5206\u3002\u6839\u636e\u67f3\u53f6\u5200\u7684\u8bba\u6587\uff0c\u5b83\u66fe\u77ed\u6682\u505c\u6b62\u7ed9\u65b0\u60a3\u8005\u670d\u7528\u8fd9\u79cd\u836f\u7269\u3002\n\u82f1\u56fd\u96f7\u4e01\u5927\u5b66(University Of Reding)\u836f\u623f\u4e1a\u52a1\u4e3b\u4efb\u5e15\u62c9\u65af\u56fe\u00b7\u591a\u5c3c\u4e9a\u4f0a(Parastou Donyai)\u8868\u793a\uff0c\u8fd9\u79cd\u836f\u7269\u662f\u201c\u7531\u7279\u6717\u666e\u603b\u7edf\u63a8\u52a8\u767b\u4e0a\u4e16\u754c\u821e\u53f0\u7684\u201d\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u4ed6\u5728\u6ca1\u6709\u786e\u51ff\u8bc1\u636e\u7684\u60c5\u51b5\u4e0b\u79f0\u8d5e\u4e86\u5b83\u3002\n\u8fd9\u4e00\u6d88\u606f\u867d\u7136\u4e0d\u662f\u79ef\u6781\u7684\uff0c\u4f46\u5bf9\u4e8e\u6570\u4ee5\u5343\u8ba1\u7684\u79d1\u5b66\u5bb6\u3001\u533b\u751f\u548c\u5b66\u8005\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u559c\u7684\u89e3\u8131\uff0c\u4ed6\u4eec\u4e00\u76f4\u5728\u547c\u5401\u63d0\u4f9b\u9002\u5f53\u7684\u8bc1\u636e\uff0c\u8bc1\u660e\u7f9f\u57fa\u6c2f\u55b9\u5728COVID-19\u4e2d\u662f\u5426\u6709\u6548\u3002\u5979\u8865\u5145\u8bf4\uff0c\u8fd9\u4e00\u7ed3\u8bba\u5e76\u4e0d\u662f\u201c\u51b3\u5b9a\u6027\u7684\u201d\u3002", "note_en": "LONDON (Reuters) - British scientists halted a major drug trial on Friday after it found that the anti-malarial hydroxychloroquine, touted by U.S. President Donald Trump as a potential \u201cgame changer\u201d in the pandemic, was \u201cuseless\u201d at treating COVID-19 patients.\n \u201cThis is not a treatment for COVID-19. It doesn\u2019t work,\u201d Martin Landray, an Oxford University professor who is co-leading the RECOVERY trial, told reporters.\n \u201cThis result should change medical practice worldwide. We can now stop using a drug that is useless.\u201d\n Vocal support from Trump raised expectations for the decades-old drug that experts said could have been a cheap and widely available tool, if proven to work, in fighting the pandemic, which has infected more than 6.4 million people and killed nearly 400,000 worldwide.\n Controversy surrounding the drug grew after a study published in medical journal The Lancet last month raised safety concerns and led several COVID-19 studies of it to be halted. The Lancet study was then retracted on Thursday after its authors said they were unsure about its data.\n Landray, a professor of medicine and epidemiology at Oxford University, noted the \u201chuge speculation\u201d about the drug as a treatment for COVID-19 but said there had been until now \u201can absence of reliable information from large randomised trials\u201d.\n He said the preliminary results from RECOVERY, which was a randomised trial, were now quite clear: hydroxychloroquine does not reduce the risk of death among hospitalised patients with COVID-19.\n \u201cIf you\u2019re admitted to hospital, don\u2019t take hydroxychloroquine,\u201d he said.\n  The RECOVERY trial of hydroxychloroquine had randomly assigned 1,542 COVID-19 patients to hydroxychloroquine and compared them with 3,132 COVID-19 patients randomly assigned to standard care without the drug.\n Results showed no significant difference in death rates after 28 days, in length of stay in hospital or in other outcomes, the researchers said.\n Earlier this week, a University of Minnesota randomised trial found that the drug was ineffective in preventing infection in people exposed to the coronavirus.\n   The World Health Organization (WHO) said on Friday the RECOVERY results would not change its plan to resume tests of hydroxychloroquine as part of its \u2018Solidarity\u2019 trials. It had briefly stopped giving it to new patients in light of the Lancet paper.\n Parastou Donyai, director of Pharmacy Practice at the University of Reading in England, said the drug was \u201cpropelled onto the world stage by President Trump\u201d, adding he had praised it without solid evidence.\n \u201cThis news, although not positive, is a welcome relief to thousands of scientists, doctors and academics who have been crying out for proper proof of whether hydroxychloroquine works in COVID-19 or not.\u201d she added, calling the conclusion that it does not \u201cdefinitive\u201d.", "posttime": "2020-06-06 22:47:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6c2f\u55b9,useless,\u836f\u7269", "title": "\u82f1\u56fd\u6682\u505c\u7f9f\u6c2f\u55b9\u8bd5\u9a8c\uff0c\u79f0\u5176\u5bf9\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u65e0\u7528", "title_en": "UK Halts Hydroxychloroquine Trial, Calling It's 'Useless' for Covid-19 Patients", "transed": 1, "url": "https://www.reuters.com/article/us-health-coronavirus-hydroxychloroquine/uk-halts-trial-of-hydroxychloroquine-in-covid-19-patients-after-no-benefit-found-idUSKBN23C1YM", "via": "", "real_tags": ["\u6c2f\u55b9", "useless", "\u836f\u7269"]}, {"category": "", "categoryclass": "", "imagename": "caec9342873669c5932d5f4a5de60292.jpeg", "infoid": 1005446, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u5728\u5de5\u4f5c\u4e2d\u542c\u5230\u4e00\u4e2a\u8ba1\u5212\u3002\u4f60\u4f1a\u60f3\uff0c\u201c\u662f\u8fd9\u6837\u5417\uff1f\u201d\u4f46\u662f\u4f60\u8bf4\u5462\uff1f\u8c01\u5728\u623f\u95f4\u91cc\u91cd\u8981\u5417\uff1f\u60a8\u5e0c\u671b\u8fdb\u884c\u6295\u5f71\u7684\u4eba\u4e0b\u4e00\u6b65\u505a\u4ec0\u4e48\uff1f\u6211\u4ee5\u524d\u5f88\u5728\u4e4e\u90a3\u4e9b\u4e1c\u897f\u3002\u5f88\u591a\u3002\u592a\u591a\u4e86\uff0c\u6709\u65f6\u6211\u6839\u672c\u4e0d\u80fd\u4ea4\u6d41\u3002\n\u73b0\u5728\u6211\u53ea\u662f\u8bf4\u51fa\u6211\u7684\u60f3\u6cd5\uff0c\u4e00\u76d8\u6e05\u6de1\u7684\u83dc\u3002\u8fd9\u5c31\u662f\u6211\u662f\u5982\u4f55\u6765\u5230\u8fd9\u91cc\u7684\uff0c\u5b83\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u5728\u6211\u751f\u547d\u7684\u524d\u534a\u90e8\u5206(\u76f4\u523040\u5c81)\uff0c\u6211\u6ca1\u6709\u771f\u6b63\u8003\u8651\u8fc7\u6211\u662f\u5982\u4f55\u4e0e\u4eba\u4ea4\u8c08\u7684\u3002\u6211\u8bf4\u8bdd\uff0c\u4f46\u6211\u9700\u8981\u8bf4\u8bdd\u624d\u80fd\u5f97\u5230\u6211\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u5f53\u6211\u57282002\u5e74\u7834\u4ea7\u65f6\uff0c\u4e00\u5207\u90fd\u6539\u53d8\u4e86\u3002\u6211\u6b8b\u9177\u5730\u63a5\u53d7\u4e86\u81ea\u5df1\u7684\u64cd\u7eb5\u6027\u3001\u63a7\u5236\u6027\u548c\u6b3a\u9a97\u6027\u3002\u6211\u51b3\u5fc3\u6539\u53d8\u6211\u7684\u751f\u6d3b\u3002\n\u8f6c\u53d8\u7684\u4e00\u4e2a\u65b9\u9762\u662f\u6539\u53d8\u4e86\u6211\u4e0e\u4eba\u4ea4\u8c08\u7684\u65b9\u5f0f\u3002\u6211\u627f\u8ba4\u6211\u6ca1\u6709\u793e\u4ea4\u98ce\u5ea6\u3002\u6240\u4ee5\u6211\u5f00\u59cb\u7ec3\u4e60\uff0c\u9605\u8bfb\u6709\u5173\u4ea4\u6d41\u7684\u4e66\u7c4d\uff0c\u5e94\u7528\u8bfe\u7a0b\uff0c\u66f4\u597d\u5730\u503e\u542c\uff0c\u6a21\u4eff\uff0c\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\u3002\n\u6211\u5bf9\u7ed3\u679c\u4e0d\u6ee1\u610f\u3002\u6211\u8fdb\u6b65\u4e86\u3002\u5f88\u591a\u3002\u4f46\u4eba\u4eec\u6709\u65f6\u8fd8\u662f\u4f1a\u5bf9\u6211\u505a\u51fa\u56de\u5e94\uff0c\u597d\u50cf\u6211\u80cc\u53db\u4e86\u4ed6\u4eec\u3002\u6211\u4f1a\u8bd5\u7740\u6162\u6162\u5efa\u7acb\u4e00\u6bb5\u5bf9\u8bdd\u3002\u4f30\u8ba1\u6211\u642d\u6863\u7684\u53cd\u5e94\u3002\u4e00\u6b21\u4e00\u70b9\u70b9\u5730\u5efa\u7acb\u8054\u7cfb\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u5f3a\u70c8\u7684\u53cd\u5f39\u3002\u201c\u6211\u4e0d\u4f1a\u518d\u8ddf\u4f60\u8bf4\u8bdd\u4e86\u3002\u201d\u201c\u6211\u4e0d\u60f3\u548c\u4f60\u8c08\u604b\u7231\u3002\u201d\u6216\u8005\u53ea\u662f\u6c89\u9ed8\u3002\n\u6700\u8fd1\uff0c\u6211\u8bfb\u4e86\u4e0d\u6b62\u4e24\u672c\uff1a\u9053\u5fb7\u591a\u6bb5\u5a5a\u59fb\u5b9e\u8df5\u6307\u5357(A Practice Guide To Ethical Polyamory)\u3002\u4e66\u4e2d\u5f3a\u8c03\u7684\u6280\u5de7\u4e4b\u4e00\u662f\u6e05\u6670\u3001\u76f4\u63a5\u7684\u6c9f\u901a\u3002\n(\u6211\u63a8\u8350\u8fd9\u672c\u4e66\u662f\u56e0\u4e3a\u5b83\u6df1\u5165\u8ba8\u8bba\u4e86\u6c9f\u901a\u7684\u4f26\u7406\u95ee\u9898\u3002\u5b83\u6539\u53d8\u4e86\u6211\u770b\u5f85\u5de5\u4f5c\u4e2d\u6c9f\u901a\u7684\u65b9\u5f0f\u3002)\n\u55ef\uff0c\u8fd9\u79cd\u5fae\u5999\u7684\u3001\u4ee4\u4eba\u8d39\u89e3\u7684\u821e\u8e48\uff0c\u5728\u6211\u975e\u5e38\u786e\u5b9a\u7b54\u6848\u662f\u4ec0\u4e48\u4e4b\u524d\uff0c\u6211\u4ece\u6765\u4e0d\u4f1a\u627f\u8bfa(\u4f46\u6211\u4ecd\u7136\u7ecf\u5e38\u51fa\u9519)\uff0c\u8fd9\u5e76\u4e0d\u80fd\u5e26\u6765\u6211\u7684\u5feb\u4e50\u3002\u6211\u5149\u8bf4\u70b9\u4ec0\u4e48\u4e5f\u6ca1\u4ec0\u4e48\u635f\u5931\u3002\n\u56e0\u6b64\uff0c\u4e0a\u5468\u662f\u4e00\u6b21\u6e05\u6670\u3001\u76f4\u63a5\u6c9f\u901a\u7684\u5b9e\u9a8c\u3002\u6211\u544a\u8bc9\u4e00\u4f4d\u524d\u5973\u53cb\uff0c\u6211\u7231\u5979\uff0c\u6211\u5411\u5979\u63d0\u4f9b\u4e86\u4e00\u6bb5\u957f\u671f\u7684\u5173\u7cfb\u3002\u6211\u544a\u8bc9\u88ab\u6a61\u76ae\u5b50\u5f39\u51fb\u4e2d\u7684\u5973\u513f\uff0c\u6211\u5f88\u5bb3\u6015\uff0c\u6211\u4e3a\u5979\u611f\u5230\u9a84\u50b2\u3002\u6211\u5728\u5de5\u4f5c\u4e2d\u544a\u8bc9\u4e00\u4e2a\u9879\u76ee\uff0c\u4ed6\u4eec\u7684\u76ee\u6807\u7ed9\u6211\u7559\u4e0b\u4e86\u4e0d\u597d\u7684\u5370\u8c61\u3002\n\u6050\u60e7\u3002\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\uff0c\u8fd9\u8ba9\u6211\u5f88\u60ca\u8bb6\u3002\u5f53\u6211\u521a\u521a\u8bf4\u51fa\u6211\u7684\u60f3\u6cd5\u65f6\uff0c\u4e3a\u4ec0\u4e48\u6211\u4f1a\u611f\u5230\u5bb3\u6015\u3001\u66b4\u9732\u548c\u8106\u5f31\u5462\uff1f\u6211\u8ba4\u4e3a\u8fd9\u662f\u5931\u53bb\u4e86\u63a7\u5236\u7684\u9519\u89c9\u3002\u5982\u679c\u6211\u4ece\u5bb9\u4e0d\u8feb\u5730\u4e0e\u4eba\u4ea4\u8c08\uff0c\u90a3\u4e48\u662f\u5426\u6709\u4eba\u4e0e\u6211\u8054\u7cfb\u4f3c\u4e4e\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6211\u53ef\u4ee5\u63a7\u5236\u7684\u3002\u66f4\u8f7b\u677e\u5730\u653e\u677e\uff0c\u4fdd\u6301\u66f4\u7d27\u5bc6\u7684\u8054\u7cfb\uff0c\u5bf9\u5417\uff1f\n\u72af\u50bb\u5440\u3002\u5f53\u7136\u4e86\u3002\u4eba\u4eec\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u8981\u53c2\u4e0e\u548c\u8054\u7cfb\u3002\u8fd9\u79cd\u5931\u53bb\u63a7\u5236\u7684\u611f\u89c9\u662f\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\u73b0\u5b9e\u3002\u867d\u7136\u4e0d\u8212\u670d\uff0c\u4f46\u6211\u4f1a\u4e60\u60ef\u7684\u3002\n\u5b89\u9759\u3002\u6574\u6574\u4e00\u534a\u7684\u5b9e\u9a8c\u5b8c\u5168\u6ca1\u6709\u53cd\u5e94\u3002\u6211\u5e0c\u671b\u4eba\u4eec\u4f1a\u660e\u786e\u5730\u8bf4\uff0c\u201c\u4e0d\uff0c\u8c22\u8c22\u201d\uff0c\u4f46\u6211\u4e0d\u80fd\u63a7\u5236\u8fd9\u4e00\u70b9\u3002\u6c89\u9ed8\u662f\u4e00\u4e2a\u975e\u5e38\u660e\u786e\u7684\u53cd\u5e94\uff0c\u81f3\u5c11\u5728\u6211\u4e0d\u5fd9\u7740\u81ea\u6b3a\u6b3a\u4eba\u7684\u65f6\u5019\u662f\u8fd9\u6837\u3002\u6211\u75db\u5fc3\u5730\u503e\u8bc9\u5fc3\u58f0\uff0c\u5374\u88ab\u87cb\u87c0\u6253\u62db\u547c\u3002\n\u662f\u7684\uff0c\u5f88\u75bc\uff0c\u4f46\u662f\u4f60\u77e5\u9053\u5417\uff1f\u521a\u624d\u8bf4\u4e86\u6211\u7684\u8bdd\u4e5f\u6709\u4e00\u79cd\u6ee1\u8db3\u611f\u3002\u6211\u4e0d\u9700\u8981\u518d\u4e09\u731c\u6d4b\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u66f4\u72e1\u733e\u4e00\u70b9\uff0c\u5f97\u5230\u6211\u60f3\u8981\u7684\u4e1c\u897f\u3002\u6211\u4e0d\u4f1a\u7ed9\u81ea\u5df1\u90a3\u6837\u7684\u9009\u62e9\u3002\n\u63d0\u9192\u81ea\u5df1\uff1a\u52aa\u529b\u8fdb\u884c\u6e05\u6670\u3001\u76f4\u63a5\u7684\u4ea4\u6d41\u5e76\u4e0d\u80fd\u4ec5\u4ec5\u56e0\u4e3a\u6211\u7684\u60f3\u6cd5/\u611f\u89c9\uff0c\u5c31\u5141\u8bb8\u6211\u5bf9\u4efb\u4f55\u4eba\u8bf4\u4efb\u4f55\u8bdd\u3002\u6709\u4e9b\u573a\u5408\u7684\u8bdd\u9898\u662f\u4e0d\u53d7\u9650\u5236\u7684\uff0c\u6bd4\u5982\u8c08\u8bba\u5de5\u4f5c\u573a\u6240\u7684\u6027\u3002\u6709\u5faa\u5e8f\u6e10\u8fdb\u7684\u542f\u793a\uff0c\u6211\u5c55\u793a\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f60\u5c55\u793a\u4e00\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u6211\u4eec\u5750\u4e0b\u6765\u804a\u804a\u90a3\u79cd\u611f\u89c9\u3002\u6709\u4e9b\u65f6\u5019\uff0c\u6709\u4eba\u5bf9\u6211\u8981\u8bf4\u7684\u8bdd\u4e0d\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u8fd8\u6709\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\u3002\n\u6240\u4ee5\u5b9e\u9a8c\u8fd8\u5728\u7ee7\u7eed\u3002\u6628\u665a\u6211\u544a\u8bc9\u67d0\u4eba\uff0c\u6211\u53ef\u80fd\u5bf9\u4e0e\u4ed6\u4eec\u7684\u5404\u79cd\u5173\u7cfb\u611f\u5174\u8da3\u3002\u4ed6\u4eec\u544a\u8bc9\u6211\u4ed6\u4eec\u5bf9\u6d6a\u6f2b\u4e0d\u611f\u5174\u8da3\uff0c\u4f46\u4ed6\u4eec\u5bf9\u53cb\u8c0a\u611f\u5174\u8da3\u3002\u6211\u4eec\u8c08\u5f97\u5f88\u6109\u5feb\uff0c\u53c8\u5f00\u59cb\u4e86\u53e6\u4e00\u6b21\u8c08\u8bdd\u3002\u5b83\u7ed9\u4eba\u7684\u611f\u89c9\u662f\u5e72\u51c0\u3001\u6e05\u6f88\u3001\u660e\u4eae\u3002\u6709\u70b9\u66b4\u9732\uff0c\u4f46\u6211\u5df2\u7ecf\u4e60\u60ef\u4e86\u3002", "note_en": "You hear a plan at work. You think, \u201cIs that it?\u201d But what do you say? Does it matter who\u2019s in the room? What you want the person making the projection to do next? I used to care about all that stuff. A lot. So much that sometimes I couldn\u2019t communicate at all.\n Now I just say what I think, served plain on a dish. Here\u2019s how I got here, what it\u2019s like, and what\u2019s next.\n The first part of my life (up until 40), I didn\u2019t really give thought to how I talked to people. I talked however I needed to talk to get what I wanted.\n When I broke down in 2002, all that changed. I brutally came to terms with how manipulative, controlling, and deceitful I was. I resolved to turn my life around.\n One aspect of the turnaround was revamping how I talked with people. I accepted that I had no social grace. And so I began practicing, reading books about communication, applying the lessons, listening better, mirroring, all that stuff.\n I was not happy with the results. I improved. A lot. But people sometimes still responded to me as if I had betrayed them. I would try to slowly build a conversation. Gauge my partner\u2019s reaction. Build connection a little at a time. And then came the backlash. \u201cI won\u2019t be talking to you any more.\u201d \u201cI don\u2019t want a relationship with you.\u201d Or just silence.\n I recently read   More Than Two: A Practical Guide to Ethical Polyamory. One of the techniques the book stresses is clear, direct communication.\n (I recommend this book for its deep discussion of the ethics of communication. It has transformed the way I see communication at work.)\n Well, this delicate, baffling dance, where I never commit until I\u2019m pretty sure what the answer is going to be (and still I am often wrong), isn\u2019t contributing to my joy. I don\u2019t have much to lose just saying stuff.\n And so the last week has been an experiment in clear, direct communication. I told an ex-girlfriend that I loved her and I was offering her a long-term relationship. I told my daughter who is getting shot with rubber bullets that I am terrified and that I am proud of her. I told a project at work that I wasn\u2019t impressed by their goals.\n Fear. That was my first reaction and it surprised me. Why would I feel afraid &amp; exposed &amp; vulnerable when I had just said exactly what I thought? I think it is the loss of the illusion of control. If I ease into a conversation, then whether someone connects with me seems like something I can control to some extent. Ease more easily, stay more connected, right?\n Bullshit. Of course. People decide for themselves whether they want to engage and connect. This feeling of loss of control is good because it aligns with reality. It\u2019s uncomfortable, but I\u2019ll get used to it.\n Silence. Fully half of the experiments resulted in no response at all. I wish people would explicitly say, \u201cNo, thank you,\u201d but I don\u2019t control that. Silence is a pretty damn clear response, at least while I\u2019m not busy trying to fool myself. It hurts to pour out my heart and be greeted by crickets.\n Yes, it hurts, but you know what? There is also a sense of satisfaction to having just said my piece. I don\u2019t have to second guess myself about whether I could have just been a little more weasel-y and gotten what I wanted. I\u2019m not giving myself that option.\n Reminder to myself: striving for clear, direct communication does not give me license to say just anything to just anyone just because I think/feel it. There are contexts where topics are in/out of bounds, like talking about sex at work. There is progressive revelation, where I reveal something and you reveal something and then we sit for a mo with how that feels. There are times when someone isn\u2019t interested in what I have to say because there\u2019s other stuff going on.\n And so the experiment continues. Last night I told someone I could be interested in a variety of relationships with them. They told me they weren\u2019t interested in romance but they were interested in friendship. We had a nice talk and teed up another talk. And it felt clean &amp; clear &amp; bright. And a little exposing, but I\u2019m getting used to that.", "posttime": "2020-06-06 22:46:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c9f\u901a,clear,\u4e0d\u80fd", "title": "\u6211\u7684\u6e05\u6670\u76f4\u63a5\u6c9f\u901a\u7684\u5b9e\u9a8c", "title_en": "My experiment with clear and direct communication", "transed": 1, "url": "https://medium.com/@kentbeck_7670/clear-direct-communications-an-experiment-21b8a151aa7c", "via": "", "real_tags": ["\u6c9f\u901a", "clear", "\u4e0d\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "f773ffb92af2f33560d1a6080eb15d14.jpeg", "infoid": 1005444, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-\u5468\u4e94\uff0cTwitter Inc.\u3001Facebook Inc.\u548cInstagram\u4ee5\u7248\u6743\u6295\u8bc9\u4e3a\u7531\uff0c\u5728\u5176\u5e73\u53f0\u4e0a\u7981\u7528\u4e86\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u5411\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u7684\u7ade\u9009\u81f4\u656c\u89c6\u9891\u3002\n\u8fd9\u6bb5\u89c6\u9891\u663e\u793a\u4e86\u5f17\u6d1b\u4f0a\u5fb7\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u88ab\u8b66\u65b9\u62d8\u7559\u671f\u95f4\u6b7b\u4ea1\u540e\u6297\u8bae\u6e38\u884c\u548c\u66b4\u529b\u4e8b\u4ef6\u7684\u7167\u7247\u548c\u89c6\u9891\uff0c\u7279\u6717\u666e\u5728\u80cc\u666f\u4e2d\u53d1\u8868\u4e86\u8bb2\u8bdd\u3002\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u662f\u4ec0\u4e48\u7248\u6743\u5f62\u8c61\u5f15\u53d1\u4e86\u8fd9\u8d77\u6295\u8bc9\uff0c\u4f46\u52a0\u5dde\u5f8b\u5e08\u8428\u59c6\u00b7\u5e93\u62c9\u514b(Sam Koolaq)\u544a\u8bc9Politico\uff0c\u4ed6\u7684\u516c\u53f8\u5411Twitter\u3001Facebook\u3001Instagram\u548cYouTube\u63d0\u4ea4\u4e86\u7248\u6743\u6295\u8bc9\u3002Koolaq\u6ca1\u6709\u7acb\u5373\u56de\u590d\u8def\u900f\u793e\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u5f17\u6d1b\u4f0a\u5fb7\u4e0a\u5468\u5728\u4e0e\u4e00\u540d\u8b66\u5bdf\u7684\u81f4\u547d\u906d\u9047\u540e\u53bb\u4e16\uff0c\u5f15\u53d1\u4e86\u5168\u56fd\u6027\u7684\u6297\u8bae\u6d3b\u52a8\u3002\n\u5468\u4e94\u665a\u4e9b\u65f6\u5019\uff0c\u7279\u6717\u666e\u6279\u8bc4\u4e86\u63a8\u7279\u7684\u5220\u9664\u3002\u201c\u4ed6\u4eec\u6b63\u5728\u4e3a\u6fc0\u8fdb\u7684\u5de6\u7ffc\u6c11\u4e3b\u515a\u594b\u529b\u6297\u4e89\u3002\u4e00\u8fb9\u5012\u7684\u6218\u6597\u3002\u975e\u6cd5\uff0c\u201c\u4ed6\u5728\u63a8\u7279\u4e0a\u5199\u9053\u3002\n\u63a8\u7279\u9996\u5e2d\u6267\u884c\u5b98\u6770\u514b\u00b7\u591a\u5c14\u897f(Jack Dorsey)\u5728\u63a8\u7279\u4e0a\u56de\u5e94\u79f0\uff0c\u201c\u8fd9\u4e0d\u662f\u771f\u7684\uff0c\u4e5f\u4e0d\u8fdd\u6cd5\u3002\u201d\n\u591a\u5c14\u897f\u8865\u5145\u8bf4\uff1a\u201c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4ece\u7248\u6743\u6240\u6709\u8005\u90a3\u91cc\u6536\u5230\u4e86DMCA\u7684\u6295\u8bc9\u3002\u201d\n\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u8868\u793a\uff0c\u5b83\u5bf9\u201c\u7248\u6743\u6240\u6709\u8005\u6216\u5176\u6388\u6743\u4ee3\u8868\u5411\u6211\u4eec\u53d1\u51fa\u7684\u6709\u6548\u7248\u6743\u6295\u8bc9\u201d\u505a\u51fa\u4e86\u56de\u5e94\u3002\n\u62e5\u6709\u7167\u7247\u548c\u89c6\u9891\u5206\u4eab\u7f51\u7edcInstagram\u7684Facebook\u8868\u793a\uff0c\u5728\u6536\u5230\u521b\u5efa\u8005\u6839\u636e\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u63d0\u51fa\u7684\u7248\u6743\u6295\u8bc9\u540e\uff0c\u5b83\u5220\u9664\u4e86\u8fd9\u7bc7\u5e16\u5b50\u3002\nFacebook\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u4f7f\u7528\u5728Instagram\u4e0a\u5206\u4eab\u7684\u539f\u521b\u827a\u672f\u7684\u7ec4\u7ec7\u9884\u8ba1\u5c06\u6709\u6743\u8fd9\u6837\u505a\u3002\u201d\n\u5468\u4e09\uff0c\u7279\u6717\u666e\u7684\u7ade\u9009\u56e2\u961f\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u8fd9\u6bb53\u520645\u79d2\u7684\u89c6\u9891\u3002\u8fd9\u6bb5\u89c6\u9891\u8fd8\u4e0a\u4f20\u5230\u4e86\u7279\u6717\u666e\u7684YouTube\u9891\u9053\u548c\u4ed6\u7684\u7ade\u9009\u56e2\u961f\u7684Facebook\u9875\u9762\u4e0a\u3002\u8fd9\u6bb5\u89c6\u9891\u5728YouTube\u548cFacebook\u4e0a\u7684\u70b9\u51fb\u91cf\u52a0\u8d77\u6765\u5df2\u7ecf\u8d85\u8fc7140\u4e07\u6b21\u3002\nYouTube\u7684\u6bcd\u516c\u53f8Alphabet Inc\u8868\u793a\uff0c\u7279\u6717\u666e\u7ade\u9009\u56e2\u961f\u4e0a\u4f20\u7684\u89c6\u9891\u4e0e\u4e0a\u4f20\u5230Twitter\u4e0a\u7684\u89c6\u9891\u4e0d\u540c\u3002YouTube\u8868\u793a\uff0c\u7248\u6743\u6295\u8bc9\u4e2d\u786e\u8ba4\u7684\u5185\u5bb9\u5e76\u4e0d\u5b58\u5728\uff0c\u8be5\u7f51\u7ad9\u4e5f\u6ca1\u6709\u5220\u9664\u89c6\u9891\u3002\n\u81ea\u4ece\u5bf9\u7279\u6717\u666e\u5173\u4e8e\u90ae\u5bc4\u6295\u7968\u821e\u5f0a\u7684\u672a\u7ecf\u8bc1\u5b9e\u7684\u6307\u63a7\u7684\u63a8\u6587\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u4ee5\u6765\uff0c\u63a8\u7279\u4e00\u76f4\u53d7\u5230\u7279\u6717\u666e\u653f\u5e9c\u7684\u4e25\u683c\u5ba1\u67e5\u3002\u5b83\u8fd8\u5c06\u7279\u6717\u666e\u5173\u4e8e\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u6297\u8bae\u6d3b\u52a8\u7684\u4e00\u6761\u63a8\u6587\u8d34\u4e0a\u4e86\u201c\u7f8e\u5316\u66b4\u529b\u201d\u7684\u6807\u7b7e\u3002\n\u7279\u6717\u666e\u627f\u8bfa\u5c06\u51fa\u53f0\u7acb\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5e9f\u9664\u6216\u524a\u5f31\u4e00\u9879\u6cd5\u5f8b\uff0c\u8be5\u6cd5\u5f8b\u4fdd\u62a4\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u4e0d\u5fc5\u5bf9\u5176\u7528\u6237\u53d1\u5e03\u7684\u5185\u5bb9\u627f\u62c5\u8d23\u4efb\u3002\n\u8fc7\u53bb\uff0cTwitter\u81f3\u5c11\u64a4\u4e0b\u4e86\u7279\u6717\u666e\u7684\u4e24\u4e2a\u89c6\u9891\uff0c\u8fd9\u4e9b\u89c6\u9891\u7684\u914d\u4e50\u6765\u81ea\u8759\u8760\u4fa0\u7535\u5f71\u201c\u9ed1\u6697\u9a91\u58eb\u5d1b\u8d77\u201d(The Dark Knight Rises)\u548c\u4e94\u5206\u94b1\u7684\u201c\u6444\u5f71\u201d(Photograph)\u3002", "note_en": "(Reuters) - Twitter Inc, Facebook Inc and Instagram disabled President Donald Trump\u2019s campaign tribute video to George Floyd on their platforms on Friday, citing copyright complaints.\n The clip, which shows photos and videos of protest marches and instances of violence in the aftermath of the death of Floyd while in police custody in Minnesota, has Trump speaking in the background.\n It was not clear what copyright image prompted the complaint, but California lawyer Sam Koolaq told Politico his firm submitted copyright complaints to Twitter, Facebook, Instagram and YouTube. Koolaq did not immediately respond to a request for comment from Reuters.\n Floyd\u2019s death last week after a fatal encounter with a police officer has led to nationwide protests.\n Late Friday, Trump criticized the removal by Twitter. \u201cThey are fighting hard for the Radical Left Democrats. A one sided battle. Illegal,\u201d he wrote on Twitter.\n Twitter Chief Executive Jack Dorsey responded in a tweet, \u201cNot true and not illegal\u201d\n \u201cThis was pulled because we got a DMCA complaint from copyright holder,\u201d Dorsey added.\n The social media site said it responds \u201cto valid copyright complaints sent to us by a copyright owner or their authorized representatives.\u201d\n Facebook, which owns photo and video-sharing network Instagram, said it removed the post after receiving the creator\u2019s copyright complaint under the Digital Millennium Copyright Act.\n \u201cOrganizations that use original art shared on Instagram are expected to have the right to do so,\u201d Facebook said in a statement.\n The three-minute, 45-second video was tweeted by Trump\u2019s campaign on Wednesday. It was also uploaded on Trump\u2019s YouTube channel and his campaign\u2019s Facebook page. The clip has garnered more than 1.4 million views on YouTube and Facebook combined.\n YouTube\u2019s parent, Alphabet Inc, said the video the Trump campaign uploaded was not identical to the one uploaded to Twitter. The content identified in the copyright complaint was not present and the site did not remove the video, YouTube said.\n  Twitter has been under fierce scrutiny from the Trump administration since it fact-checked Trump\u2019s tweets about unsubstantiated claims of mail-in voting fraud. It also labeled a Trump tweet about protests in Minneapolis as \u201cglorifying violence.\u201d\n Trump has pledged to introduce legislation that may scrap or weaken a law that shields social media companies from liability for content posted by their users.\n In the past, Twitter has taken down at least two of Trump\u2019s videos that had music from the soundtrack of the Batman movie \u201cThe Dark Knight Rises\u201d and Nickelback\u2019s \u201cPhotograph.\u201d", "posttime": "2020-06-06 22:45:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u7279,facebook,\u7248\u6743,\u7279\u6717\u666e", "title": "\u63a8\u7279\uff0cFacebook\u7981\u7528\u7279\u6717\u666e\u56e0\u7248\u6743\u6295\u8bc9\u5411\u5f17\u6d1b\u4f0a\u5fb7\u81f4\u656c\u7684\u89c6\u9891", "title_en": "Twitter, Facebook disable Trump video tribute to Floyd over copyright complaint", "transed": 1, "url": "https://www.reuters.com/article/us-twitter-trump/twitter-facebook-disable-trump-video-tribute-to-floyd-over-copyright-complaint-idUSKBN23C092", "via": "", "real_tags": ["\u63a8\u7279", "facebook", "\u7248\u6743", "\u7279\u6717\u666e"]}, {"category": "", "categoryclass": "", "imagename": "9cf943048d4392b45355e4cbd980ad1c.jpg", "infoid": 1005443, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u795d\u8d3aLinux Mint\u56e2\u961f\u4eca\u5929\u660e\u786e\u8868\u660e\u4e86\u53cd\u5bf9Snap\u7684\u7acb\u573a\uff0c\u5c06\u5176\u4ece\u4ed6\u4eec\u7684\u5b58\u50a8\u5e93\u4e2d\u5220\u9664\uff0c\u8fd9\u662f\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4ece\u8fc7\u53bb\u51e0\u4e2a\u6708\u4ee5\u6765\u5c31\u5df2\u7ecf\u5728\u8868\u8fbe\u7684\u89c2\u70b9\u3002\u901a\u8fc7\u5c06Snap\u8bbe\u4e3a\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5c06Snap\u63a8\u5230Ubuntu\u7528\u6237\u7684\u5589\u5499\u91cc\uff0c\u8fd9\u4e0d\u662f\u4e00\u4ef6\u975e\u5e38\u660e\u667a\u7684\u4e8b\u60c5\u3002\u540e\u7aef\u662f\u4e13\u6709\u7684\u3002\u8fd9\u4e0eLinux\u548c\u81ea\u7531/\u5f00\u6e90\u8f6f\u4ef6\u6240\u4ee3\u8868\u7684\u7cbe\u795e\u76f4\u63a5\u80cc\u9053\u800c\u9a70\u3002\u6784\u5efa\u4e13\u6709\u5e73\u53f0\u5e76\u628a\u5b83\u4eec\u53d8\u6210\u6709\u56f4\u5899\u7684\u82b1\u56ed\u6b63\u662f\u50cf\u5fae\u8f6f\u548c\u8c37\u6b4c\u8fd9\u6837\u7684\u516c\u53f8\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u8fd9\u4e5f\u6b63\u662f\u4e3a\u4ec0\u4e48\u6211\u4eeclinux\u7684\u4eba\u9996\u5148\u60f3\u8981\u4e00\u4e2a\u72ec\u7acb\u7684\u751f\u6001\u7cfb\u7edf\u3002Snap\u5728\u8fd9\u65b9\u9762\u5b58\u5728\u5f88\u5927\u95ee\u9898\u3002\n\u5f00\u53d1\u4eba\u5458\u63a7\u5236\u66f4\u65b0\u3002\u540c\u6837\uff0c\u8fd9\u4e0eGNU\u54f2\u5b66\u76f4\u63a5\u80cc\u9053\u800c\u9a70\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60f3\u8d70\u8fd9\u6761\u8def\uff0c\u4e0d\u59a8\u4f7f\u7528Windows\u6216OSX\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Linux\u5462\uff1f\u4f7f\u7528\u4e13\u6709\u8f6f\u4ef6\uff0c\u7a0b\u5e8f\u63a7\u5236\u7528\u6237\uff0c\u5176\u4ed6\u5b9e\u4f53(\u5f00\u53d1\u8005\u6216\u201c\u6240\u6709\u8005\u201d)\u63a7\u5236\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u4e13\u6709\u7a0b\u5e8f\u8d4b\u4e88\u5f00\u53d1\u4eba\u5458\u5bf9\u7528\u6237\u7684\u63a7\u5236\u6743\u3002\u8fd9\u672c\u8eab\u5c31\u662f\u4e0d\u516c\u5e73\u7684\uff1b\u6b64\u5916\uff0c\u5b83\u8fd8\u8bf1\u4f7f\u5f00\u53d1\u4eba\u5458\u4ee5\u5176\u4ed6\u65b9\u5f0f\u8650\u5f85\u7528\u6237\u3002\nAPT\u505a\u4e86\u975e\u5e38\u51fa\u8272\u7684\u5de5\u4f5c\u3002APT/Deb\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5f88\u6ee1\u610f\uff0c\u81f3\u5c11\u5927\u591a\u6570Ubuntu/Debian\u7528\u6237\u662f\u8fd9\u6837\u3002\u6b64\u5916\uff0cDNF/rpm\u4e5f\u662fFedora/RH\u7cfb\u7edf\u7684\u7c7b\u4f3c\u5305\u88c5\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u4eba\u4e5f\u5bf9\u6b64\u611f\u5230\u9ad8\u5174\u3002\u5728Jenkins\u548c\u81ea\u52a8\u5316\u6784\u5efa\u7684\u65f6\u4ee3\uff0c\u6784\u5efa\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u683c\u5f0f\uff0c\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u4e22\u5f03\u4e24\u4e2a\u5305\u7ba1\u7406\u7684\u5de5\u4f5c\u89e3\u51b3\u65b9\u6848\u5e76\u4ece\u5934\u5f00\u59cb\u53d1\u660e\u4e00\u4e2a\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u5982\u6b64\u91cd\u8981\u3002\n\u522b\u628a\u5b83\u786c\u585e\u8fdb\u6211\u4eec\u7684\u5589\u5499\u91cc\uff0c\u81f3\u5c11\u8ba9\u5b83\u6210\u4e3a\u53ef\u9009\u7684\u3002\u5982\u679c\u53d1\u884c\u7248\u63d0\u4f9b\u5feb\u7167\u771f\u7684\u90a3\u4e48\u91cd\u8981\uff0c\u4ed6\u4eec\u81f3\u5c11\u53ef\u4ee5\u505a\u7684\u5c31\u662f\u628a\u5b83\u8bbe\u4e3a\u53ef\u9009\u7684\uff0c\u4e3a\u4ec0\u4e48\u8981\u9ed8\u8ba4\u548c\u5f3a\u5236\u5462\uff1f\u5982\u679c\u6211\u771f\u7684\u60f3\u8981\u5b83\uff0c\u6211\u53ea\u9700\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u7b80\u5355\u5730\u5b89\u88c5Snap\u5373\u53ef\u3002\u4e0d\u4ec5\u4ec5\u662f\u8fd9\u6837\u3002\u6b63\u5982\u6587\u7ae0\u6240\u63d0\u5230\u7684\uff0c\u4eceUbuntu20.04\u5f00\u59cb\uff0cDEB for Chrome\u8f6f\u4ef6\u5305\u4f1a\u5077\u5077\u5730\u5c06\u60a8\u5f15\u5bfc\u5230Snap\u8f6f\u4ef6\u5305\uff0c\u800c\u4e0d\u662f\u5728\u6ca1\u6709\u7528\u6237\u540c\u610f\u6216\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\u4eceAPT\u5b58\u50a8\u5e93\u5b89\u88c5\u5b83\u3002\u6b64\u884c\u4e3a\u4e0e\u540e\u95e8\u6240\u505a\u7684\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u8fd9\u4e00\u70b9\uff0c\u8fde\u540c\u524d\u9762\u63d0\u5230\u7684\u5176\u4ed6\u539f\u56e0\uff0c\u90fd\u662f\u5173\u4e8e\u5feb\u7167\u7684\u5c0f\u6545\u969c\u548c\u6076\u610f\u7684\u6076\u81ed\uff0c\u56e0\u6b64\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u3002", "note_en": "I congratulate the\u00a0 Linux Mint team for clearly taking a stand\u00a0against snaps today by removing it from their repository, it was something many of us were voicing already since last several months. Snap is being shoved down upon Ubuntu users&#39; throats by making it the default which isn&#39;t a very sensible thing to do.   The backend is proprietary.   This goes directly against the spirit of what Linux and FOSS stands for. Building proprietary platforms and turning them into walled gardens is exactly what companies like Microsoft and Google are doing, this is exactly why us Linux folks wanted a separate ecosystem in the first place. Snap is highly problematic in this regard.\n Developer controls the updates.  Again, this goes  directly against the GNU Philosophy. In other words, one may as well use Windows or OSX if they wanted to go this route, why use Linux at all?   With proprietary software, the program controls the users, and some other entity (the developer or \u201cowner\u201d) controls the program. So the proprietary program gives its developer power over its users. That is unjust in itself; moreover, it tempts the developer to mistreat the users in other ways.\n APT does a fantastic job as it is.   apt/deb is a wonderful package management system and everyone is happy with it, at least the majority of Ubuntu/Debian users. Besides,  dnf/rpm is also a similar packaging system for Fedora/RH systems and everyone is happy with that too. In the age of Jenkins and automated builds where builds can target multiple formats, I don&#39;t see why its so important to dump two working solutions for package management and invent a new one from scratch.\n Don&#39;t shove it down our throats, make it optional at least.  If it were really so important for the distros to provide snaps, the least they could have done is made it optional, why have it by default and mandatory? If I really wanted it, I&#39;d simply &#34; apt install snap&#34; my way into installing it.  Its not just that. As the article mentions, starting from Ubuntu 20.04, the DEB package for chromium sneakily directs you to the snap package instead of installing it from the apt repository without even the user&#39;s consent or permission. This behavior is no different than what a backdoor does. This, along with other mentioned reasons reeks of glitches and bad intent with respect to snap, hence it should be avoided as much as possible.", "posttime": "2020-06-06 22:29:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ubuntu,\u5feb\u7167,anti", "title": "\u4e3a\u4ec0\u4e48\u5feb\u7167\u662fUbuntu\u4e0a\u7684\u53cd\u6a21\u5f0f", "title_en": "Why Snaps are an anti-pattern on Ubuntu", "transed": 1, "url": "https://techtudor.blogspot.com/2020/06/four-reasons-why-snaps-are-anti-pattern.html", "via": "", "real_tags": ["ubuntu", "\u5feb\u7167", "anti"]}, {"category": "", "categoryclass": "", "imagename": "0df5f29c7b2bda235bd3677d68372595.jpg", "infoid": 1005442, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ProPublica\u662f\u4e00\u4e2a\u8c03\u67e5\u6ee5\u7528\u6743\u529b\u7684\u975e\u8425\u5229\u6027\u65b0\u95fb\u7f16\u8f91\u5ba4\u3002\u6ce8\u518c\u540e\u5373\u53ef\u6536\u5230\u6211\u4eec\u6700\u91cd\u8981\u7684\u65b0\u95fb\u3002\n\u76f4\u5230\u6700\u8fd1\uff0c\u5f53\u4e9a\u9a6c\u900a\u7684\u5ba2\u6237\u5728\u7f51\u7ad9\u7684\u641c\u7d22\u680f\u4e2d\u952e\u5165\u201c\u892a\u9ed1\u6fc0\u7d20\u201d\u65f6\uff0c\u5404\u79cd\u7761\u7720\u8865\u5145\u5242\u90fd\u4f1a\u51fa\u73b0\u5728\u5217\u8868\u7ed3\u679c\u4e2d\u6700\u4ee4\u4eba\u5782\u6d8e\u7684\u623f\u5730\u4ea7\u4e2d-\u7b2c\u4e00\u9875\u7684\u5de6\u4e0a\u89d2\u3002\n\u6770\u68ee\u00b7\u535a\u4f0a\u65af(Jason Boyce)\u7684\u4e00\u4f4d\u987e\u95ee\u5ba2\u6237\u662f\u4e00\u5bb6\u5929\u7136\u8865\u5145\u5242\u9500\u552e\u5546\uff0c\u4ed6\u7ecf\u5e38\u5411\u4e9a\u9a6c\u900a\u627f\u8bfa\uff0c\u6bcf\u70b9\u51fb\u4e00\u6b21\u4ea7\u54c1\uff0c\u4ed6\u5c31\u4f1a\u5411\u4e9a\u9a6c\u900a\u627f\u8bfa\u5927\u7ea66\u7f8e\u5143\uff0c\u4ee5\u6c42\u5728\u6700\u597d\u7684\u4f4d\u7f6e\u4e0a\u51fa\u4ef7\u9ad8\u4e8e\u7ade\u4e89\u5bf9\u624b\u3002\u867d\u7136\u8be5\u54c1\u724c\u4ece\u672a\u767b\u4e0a\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b83\u7ecf\u5e38\u51fa\u73b0\u5728\u9876\u6392\u3002\u4f46\u57283\u6708\u4e0b\u65ec\uff0c\u535a\u4f0a\u65af\u6ce8\u610f\u5230\u4e9a\u9a6c\u900a\u7684\u81ea\u6709\u54c1\u724cSolimo\u5360\u636e\u4e86\u5de6\u4e0a\u89d2\uff0c\u800c\u4ed6\u5ba2\u6237\u7684\u4ea7\u54c1\u5219\u88ab\u63a8\u5230\u4e86\u8f83\u4f4e\u7684\u4e00\u6392\u3002\u7136\u540e\u535a\u4f0a\u65af\u5728\u641c\u7d22\u680f\u8f93\u5165\u201c\u78e8\u788e\u5496\u5561\u201d\uff0c\u7ed3\u679c\u5374\u5728\u5de6\u4e0a\u89d2\u627e\u5230\u4e86\u4e9a\u9a6c\u900a\u65b0\u9c9c\u54e5\u4f26\u6bd4\u4e9a\u78e8\u788e\u5496\u5561\uff0c\u63a8\u5012\u4e86\u53e6\u4e00\u4f4d\u5ba2\u6237\u3002\n\u201c\u8fd9\u592a\u75af\u72c2\u4e86\uff0c\u201d\u535a\u4f0a\u65af\u8bf4\u3002\u201c\u4ed6\u4eec\u628a\u81ea\u5df1\u7684\u4ea7\u54c1\u653e\u5728\u751f\u4ea7\u7ebf\u7684\u6700\u524d\u9762\u3002\u201d\n\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u5ba2\u6237\u975e\u5e38\u6124\u6012\u3002\u7531\u4e8e\u62c5\u5fc3\u4e9a\u9a6c\u900a\u7684\u62a5\u590d\uff0c\u4ed6\u62d2\u7edd\u900f\u9732\u8fd9\u4e9b\u5ba2\u6237\u7684\u59d3\u540d\u3002\u201c\u4ed6\u4eec\u5728\u60f3\uff0c\u2018\u4e9a\u9a6c\u900a\u4e0b\u4e00\u6b65\u8981\u505a\u4ec0\u4e48\uff1f\u2019\u201d\u4ed6\u8bf4\u3002", "note_en": "ProPublica is a nonprofit newsroom that investigates abuses of power. Sign up to receive  our biggest stories as soon as they\u2019re published.\n  Until recently, when Amazon customers typed \u201cmelatonin\u201d into the site\u2019s search bar, a variety of sleep supplements would appear in the most coveted real estate on the listings results \u2014 top left on the first page.\n  One of consultant Jason Boyce\u2019s clients, a seller of natural supplements, often sought to outbid competitors for the best spots by promising Amazon about $6 each time someone clicked on the product. While the brand never attained the top left slot, it regularly landed in the top row. But in late March, Boyce noticed that Amazon\u2019s own brand, Solimo, had taken over the top left, while his client\u2019s product had been bumped to a lower row. Then Boyce typed \u201cground coffee\u201d in the search bar, only to find AmazonFresh Colombia ground coffee in the top left, pushing down another client.\n  \u201cThis is madness,\u201d Boyce said. \u201cThey\u2019re putting their own product right in the front of the line.\u201d\n  He said the clients, whom he declined to name because they feared retaliation from Amazon, were outraged. \u201cThey were thinking, \u2018What is Amazon going to do next?\u2019\u201d he said.", "posttime": "2020-06-06 22:28:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e9a\u9a6c\u900a,amazon,\u7ade\u4e89,competitive,\u535a\u4f0a\u65af", "title": "\u4e9a\u9a6c\u900a\u7684\u65b0\u7ade\u4e89\u4f18\u52bf\uff1a\u628a\u81ea\u5df1\u7684\u4ea7\u54c1\u653e\u5728\u9996\u4f4d", "title_en": "Amazon\u2019s new competitive advantage: putting its own products first", "transed": 1, "url": "https://www.propublica.org/article/amazons-new-competitive-advantage-putting-its-own-products-first", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "\u7ade\u4e89", "\u535a\u4f0a\u65af"]}, {"category": "", "categoryclass": "", "imagename": "24e61a8175af932d24d6bfab5f86fc71.png", "infoid": 1005441, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u77e5\u8bc6\u4ea7\u6743\u610f\u4e49\u6700\u5c0f\u7684\u6240\u6709\u5a92\u4ecb\u4e2d\uff0c\u5b9e\u9645\u7684\u98df\u7269\u548c\u996e\u6599\u80af\u5b9a\u662f\u6700\u8352\u8c2c\u7684\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u98df\u54c1\u5305\u88c5\u7684\u5546\u4e1a\u5916\u89c2\u3002\u6211\u8bf4\u7684\u662f\u771f\u6b63\u7684\u98df\u54c1\u548c\u996e\u6599\u4ea7\u54c1\u672c\u8eab\uff0c\u4e0d\u7ba1\u5b83\u4eec\u662f\u624b\u5de5\u917f\u9020\u7684\u5564\u9152\u8fd8\u662f\u4e00\u76d8\u98df\u7269\u3002\u7136\u800c\uff0c\u4f60\u4f1a\u770b\u5230\u8fd9\u7c7b\u4e8b\u60c5\u65f6\u6709\u53d1\u751f\u3002\u62ab\u8428\u5e97\u4e0d\u77e5\u4f55\u6545\u8ba4\u4e3a\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u5176\u62ab\u8428\u5473\u9053\u7684\u5546\u6807\u3002\u6216\u8005\uff0c\u5bf9\u4e8e\u4eca\u5929\u7684\u5e16\u5b50\u6765\u8bf4\uff0c\u66f4\u6070\u5f53\u7684\u8bf4\u6cd5\u662f\uff0c\u5fb7\u56fd\u4e00\u5bb6\u6cd5\u9662\u8868\u793a\uff0c\u7ed9\u9910\u684c\u4e0a\u7684\u98df\u7269\u62cd\u7167\u53ef\u80fd\u4fb5\u72af\u53a8\u5e08\u7684\u7248\u6743\u3002\n\u7535\u9540\u98df\u54c1\u73b0\u5728\u53c8\u51fa\u73b0\u4e86\uff0c\u52a0\u5dde\u6cd5\u5f8b\u8bc4\u8bba\u7f51\u7ad9\u7684\u535a\u5ba2\u4e0a\u6709\u4e00\u7bc7\u5e16\u5b50\u8bf4\uff0c\u7535\u9540\u98df\u54c1\uff0c\u5982\u679c\u8db3\u591f\u6709\u827a\u672f\u6027\uff0c\u5b9e\u9645\u4e0a\u786e\u5b9e\u503c\u5f97\u7248\u6743\u4fdd\u62a4\u3002\u867d\u7136\u6574\u7bc7\u5e16\u5b50\u90fd\u5f88\u8be6\u7ec6\u548c\u900f\u5f7b\uff0c\u4f46\u771f\u6b63\u7684\u95ee\u9898\u662f\u7535\u9540\u98df\u54c1\u662f\u5426\u503c\u5f97\u7248\u6743\u4fdd\u62a4\uff0c\u4e0e\u5176\u8bf4\u662f\u7535\u9540\u7684\u521b\u9020\u6027\u65b9\u9762--\u5176\u4e2d\u6709\u4e00\u4e9b\u771f\u6b63\u7684\u521b\u9020\u6027\u65b9\u9762--\u66f4\u591a\u7684\u662f\u56fa\u5b9a\u7684\u95ee\u9898\u3002\u8981\u4fdd\u8bc1\u7248\u6743\uff0c\u4f5c\u54c1\u5fc5\u987b\u65e2\u662f\u539f\u521b\u7684\uff0c\u53c8\u662f\u5728\u56fa\u5b9a\u7684\u5a92\u4ecb\u4e0a\u521b\u4f5c\u7684\u3002\u5728\u7ea6\u7ff0\u00b7\u9a6c\u6b47\u5c14\u6cd5\u5b66\u9662\u7684\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6709\u51e0\u4e2a\u5173\u952e\u7684\u5386\u53f2\u6848\u4f8b\u89e3\u51b3\u4e86\u4f5c\u54c1\u5728\u56fa\u5b9a\u5a92\u4ecb\u4e2d\u7684\u610f\u4e49\uff0c\u8fd9\u4e00\u70b9\u5f88\u6709\u5e2e\u52a9\u3002\n\u5728\u91d1\u76db\u516c\u53f8\u8bc9\u5f3a\u751f\u8fdb\u53e3\u516c\u53f8\u6848\u4e2d\uff0c\u6cd5\u9662\u5ba1\u67e5\u4e86\u91d1\u751f\u7684\u201c\u7897\u72b6\u98df\u7269\u201d\u96d5\u5851\u662f\u5426\u7b26\u5408\u7248\u6743\u6cd5\u7684\u56fa\u5b9a\u8981\u6c42\u300231\u91d1\u6210\u627f\u8ba4\uff0c\u7897\u72b6\u98df\u7269\u96d5\u5851\u662f\u7531\u201c(\u96c7\u5458)\u4ece\u5f53\u5730\u9910\u9986\u8d2d\u4e70\u7684\u6613\u8150\u70c2\u7684\u8d8a\u5357\u83dc\u201d\u7ec4\u6210\u7684\u300232\u5728\u5206\u6790\u91d1\u76db\u7684\u7897\u72b6\u98df\u7269\u96d5\u5851\u662f\u5426\u7b26\u5408\u56fa\u5b9a\u8981\u6c42\u65f6\uff0c\u6cd5\u9662\u5c06\u5176\u4e0e\u51ef\u5229\u8bc9\u829d\u52a0\u54e5\u516c\u56ed\u533a\u6848\u4e2d\u7684\u751f\u6d3b\u82b1\u56ed\u76f8\u63d0\u5e76\u8bba\uff0c\u56e0\u4e3a\u751f\u6d3b\u82b1\u56ed\u5929\u751f\u5c31\u662f\u591a\u53d8\u7684\u3002\u5728\u5206\u6790\u91d1\u751f\u7684\u7897\u72b6\u98df\u7269\u96d5\u5851\u662f\u5426\u7b26\u5408\u56fa\u5b9a\u8981\u6c42\u65f6\uff0c\u6cd5\u9662\u5c06\u5176\u4e0e\u51ef\u5229\u8bc9\u829d\u52a0\u54e5\u516c\u56ed\u533a\u6848\u4e2d\u7684\u751f\u6d3b\u82b1\u56ed\u76f8\u63d0\u5e76\u8bba\uff0c\u540e\u8005\u5929\u751f\u5c31\u662f\u53ef\u53d8\u7684\u3002\n\u5728\u201c\u51ef\u5229\u8bc9\u829d\u52a0\u54e5\u516c\u56ed\u533a\u201d\u4e00\u6848\u4e2d\uff0c\u8fd9\u662f\u76ee\u524d\u5173\u4e8e\u6709\u673a\u4f5c\u54c1\u53ef\u8457\u4f5c\u6743\u7684\u4e3b\u8981\u6848\u4f8b\uff0c\u7b2c\u4e03\u5de1\u56de\u6cd5\u9662\u5206\u6790\u4e86\u4e00\u4e2a\u7ecf\u8fc7\u827a\u672f\u8bbe\u8ba1\u7684\u82b1\u56ed\u662f\u5426\u4e3a\u4e86\u201c\u7248\u6743\u6cd5\u201d\u7684\u76ee\u7684\u800c\u88ab\u201c\u56fa\u5b9a\u201d\u300234\u4e00\u4f4d\u8457\u540d\u7684\u827a\u672f\u5bb6\u67e5\u666e\u66fc\u00b7\u51ef\u5229\u5728\u829d\u52a0\u54e5\u5e02\u4e2d\u5fc3\u4e00\u4e2a\u8457\u540d\u7684\u516c\u5171\u516c\u56ed\u683c\u5170\u7279\u516c\u56ed\u5b89\u88c5\u4e86\u4e00\u4e2a\u91ce\u82b1\u9648\u5217\u54c1\u300235\u4ed6\u7684\u82b1\u56ed\u53d7\u5230\u4e86\u8bc4\u8bba\u754c\u548c\u516c\u4f17\u7684\u597d\u8bc4\uff0c\u5e76\u88ab\u5ba3\u4f20\u4e3a\u201c\u6d3b\u7684\u827a\u672f\u201d\u300236\u829d\u52a0\u54e5\u516c\u56ed\u533a\u5728\u6ca1\u6709\u5f97\u5230\u51ef\u5229\u7684\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7f29\u5c0f\u82b1\u56ed\u7684\u5927\u5c0f\uff0c\u91cd\u65b0\u914d\u7f6e\u6765\u620f\u5267\u6027\u5730\u4fee\u6539\u4e86\u82b1\u56ed\u300237\u51ef\u5229\u8d77\u8bc9\u516c\u56ed\u533a\u300238\u7b2c\u4e03\u5de1\u56de\u6cd5\u5ead\u88c1\u5b9a\uff0c\u51ef\u5229\u7684\u751f\u6d3b\u82b1\u56ed\u4e0d\u7b26\u5408\u7248\u6743\u4fdd\u62a4\u8d44\u683c\uff0c\u56e0\u4e3a\u5b83\u201c\u7f3a\u4e4f\u652f\u6301\u7248\u6743\u901a\u5e38\u6240\u9700\u7684\u90a3\u79cd\u4f5c\u8005\u8eab\u4efd\u548c\u7a33\u5b9a\u7684\u56fa\u5b9a\u4f5c\u54c1\u201d\u300239\u5728\u5176\u610f\u89c1\u4e2d\uff0c\u6cd5\u9662\u6f84\u6e05\u8bf4\uff0c\u5b83\u201c\u5e76\u4e0d\u662f\u8bf4\u7248\u6743\u53ea\u9644\u4e8e\u9759\u6001\u6216\u5b8c\u5168\u6c38\u4e45\u7684\u4f5c\u54c1(\u6ca1\u6709\u6c38\u6052\u7684\u8868\u73b0\u5a92\u4ecb)\uff0c\u4e5f\u4e0d\u662f\u8bf4\u5728\u4f5c\u54c1\u4e2d\u878d\u5165\u81ea\u7136\u6216\u6d3b\u7684\u5143\u7d20\u7684\u827a\u672f\u5bb6\u6c38\u8fdc\u4e0d\u80fd\u8981\u6c42\u7248\u6743\u3002\u201d40\u7136\u800c\uff0c\u6cd5\u9662\u6f84\u6e05\u8bf4\uff0c\u201c\u5e76\u4e0d\u662f\u8bf4\u7248\u6743\u53ea\u9644\u4e8e\u9759\u6001\u7684\u6216\u5b8c\u5168\u6c38\u4e45\u7684\u4f5c\u54c1(\u6ca1\u6709\u4e00\u79cd\u8868\u8fbe\u5a92\u4ecb\u662f\u6c38\u6052\u7684)\uff0c\u4e5f\u4e0d\u662f\u8bf4\u5728\u4f5c\u54c1\u4e2d\u878d\u5165\u81ea\u7136\u6216\u6d3b\u7684\u5143\u7d20\u7684\u827a\u672f\u5bb6\u6c38\u8fdc\u4e0d\u80fd\u8981\u6c42\u7248\u6743\u3002\u201d40\u7136\u800c\uff0c\n\u56e0\u6b64\uff0c\u6211\u4eec\u8fd9\u91cc\u6709\u4e24\u4e2a\u6848\u4f8b\uff0c\u6cd5\u9662\u5728\u88c1\u51b3\u7248\u6743\u4fdd\u62a4\u65f6\uff0c\u7279\u522b\u662f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u5173\u4e8e\u56fa\u5b9a\u5a92\u4f53\u7684\u95ee\u9898\u3002\u867d\u7136\u201c\u52a0\u5dde\u6cd5\u5f8b\u8bc4\u8bba\u201d\u7684\u5e16\u5b50\u805a\u7126\u4e8e\u91d1\u751f\u516c\u53f8\u7684\u88c1\u51b3\uff0c\u5e76\u629b\u51fa\u4e86\u51e0\u4f4d\u5b66\u8005\u5bf9\u6cd5\u9662\u5bf9\u53ef\u4fee\u590d\u6027\u95ee\u9898\u7684\u89e3\u91ca\u63d0\u51fa\u5f02\u8bae\uff0c\u4f46\u6211\u8ba4\u4e3a\u51ef\u5229\u6848\u7684\u88c1\u51b3\u5b9e\u9645\u4e0a\u66f4\u6709\u5f71\u54cd\u529b\u3002\u6765\u81ea\u7cbe\u9009\u5b66\u8005\u7684\u7b2c\u4e00\u4e2a\u62b1\u6028\u662f\uff0c\u6982\u5ff5\u827a\u672f\u7ecf\u5e38\u5305\u62ec\u91cd\u590d\uff0c\u4f5c\u4e3a\u4e0d\u53ef\u964d\u89e3\u4ecb\u8d28\u7684\u66ff\u4ee3\uff0c\u4ee5\u5b9e\u73b0\u53ef\u5b9a\u578b\u6027\u3002\n\u9996\u5148\uff0c\u8d5b\u4e49\u5fb7\u6559\u6388\u58f0\u79f0\uff0c\u827a\u672f\u5bb6\u7684\u6982\u5ff5\u827a\u672f\u5728\u91cd\u590d\u8868\u6f14\u65f6\u662f\u56fa\u5b9a\u7684\uff0c\u8fd9\u4e00\u8bf4\u6cd5\u540c\u6837\u9002\u7528\u4e8e\u53cd\u590d\u6446\u653e\u540c\u4e00\u9053\u83dc\u7684\u53a8\u5e08\u3002\u5f88\u53ef\u80fd\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u53a8\u5e08\u4e0d\u4f1a\u60f3\u8981\u4e3a\u67d0\u9053\u83dc\u7684\u67d0\u4e00\u7279\u5b9a\u7248\u672c\u63d0\u4f9b\u7248\u6743\uff1b\u4efb\u4f55\u4e00\u4efd\u201c\u8c01\u6740\u4e86\u5c71\u7f8a\uff1f\u201d\u4e0d\u4f1a\u6301\u7eed\u5e73\u57474\u4e2a\u6708\u6765\u5904\u7406\u4e92\u8054\u7f51\u63d0\u4ea4\u7684\u7248\u6743\u7533\u8bf7\u3002[56][56][56][56]\u6ce8\u518c\u5904\u7406\u65f6\u95f4\uff0c\u7f8e\u56fd\u7248\u6743\u5c40https://www.copyright.gov/registration/docs/processing-times-faqs.pdf[perma.cc/mhm9-dx5g](\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u4e3a2019\u5e745\u67081\u65e5).\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u963f\u5357\u5fb7\u5927\u53a8\u6bcf\u665a\u7684\u201c\u8c01\u6740\u4e86\u5c71\u7f8a\uff1f\u201d\u5f88\u53ef\u80fd\u4f1a\u201c\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u590d\u201d\uff0c\u4fdd\u8bc1\u4e86\u6b63\u5982\u6559\u6388\u6240\u8bf4\u7684\u90a3\u6837\u7684\u4fdd\u62a4\u63aa\u65bd\u662f\u5982\u6b64\u91cd\u590d\u624d\u80fd\u8fbe\u5230\u6548\u679c\u3002\n\u53ea\u6709\u5f53\u4f60\u5b8c\u5168\u5ffd\u7565\u6cd5\u5f8b\u4e2d\u7684\u6682\u65f6\u6027\u8bed\u8a00\u65f6\uff0c\u8fd9\u624d\u6709\u610f\u4e49\uff0c\u5b83\u89c4\u5b9a\uff1a\n\u201c\u5f53\u4e00\u4ef6\u4f5c\u54c1\u5177\u4f53\u5316\u65f6\uff0c\u5b83\u88ab\u2018\u56fa\u5b9a\u2019\u5728\u4e00\u79cd\u6709\u5f62\u7684\u8868\u8fbe\u5a92\u4ecb\u4e2d\u3002\u3002\u3002\u5177\u6709\u8db3\u591f\u7684\u6c38\u4e45\u6027\u6216\u7a33\u5b9a\u6027\uff0c\u4ee5\u5141\u8bb8\u5b83\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u88ab\u611f\u77e5\u3001\u590d\u5236\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4f20\u64ad\uff0c\u800c\u4e0d\u662f\u77ed\u6682\u7684\u6301\u7eed\u65f6\u95f4\u3002\u201c\n\u4e00\u540d\u53a8\u5e08\uff0c\u5c3d\u7ba1\u4ed6\u6216\u5979\u53ef\u80fd\u662f\u624d\u534e\u6a2a\u6ea2\u4e14\u5bcc\u6709\u521b\u9020\u529b\u7684\uff0c\u4f46\u4ed6\u6216\u5979\u4f1a\u521b\u9020\u5e76\u62fc\u76d8\u4ed6\u6216\u5979\u7684\u98df\u7269\uff0c\u8fd9\u4e9b\u98df\u7269\u5b9e\u9645\u4e0a\u4f1a\u8f6c\u79fb\u5230\u9910\u684c\u4e0a\uff0c\u5728\u90a3\u91cc\u77ed\u6682\u4eab\u7528\uff0c\u7136\u540e\u901a\u8fc7\u98df\u7528\u88ab\u9500\u6bc1\uff0c\u5728\u6211\u4eec\u7684\u8eab\u4f53\u91cc\u8f6c\u5316\u4e3a\u7eaf\u7cb9\u7684\u5361\u8def\u91cc\u80fd\u91cf\u3002\u65e0\u8bba\u8fd9\u9879\u6cd5\u5f8b\u7684\u8bed\u8a00\u76ee\u7684\u662f\u4ec0\u4e48\uff0c\u5b83\u90fd\u4e0d\u53ef\u80fd\u610f\u5473\u7740\u8981\u5bf9\u5176\u8fdb\u884c\u590d\u5236\u9650\u5236\u3002\u5728\u51ef\u5229\u6848\u7684\u88c1\u51b3\u4e2d\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u56fa\u5b9a\u5728\u690d\u7269\u4e2d\u7684\u827a\u672f\u54c1\uff0c\u8fd9\u4e9b\u827a\u672f\u54c1\u53ef\u80fd\u4f1a\u6301\u7eed\u5f88\u591a\u5e74\uff0c\u4f46\u5f53\u829d\u52a0\u54e5\u51b3\u5b9a\u6539\u53d8\u4e0d\u56fa\u5b9a\u7684\u8868\u8fbe\u65b9\u5f0f\u65f6\uff0c\u8fd9\u4e9b\u827a\u672f\u54c1\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u4fdd\u62a4\u3002\n\u7b2c\u4e8c\u4e2a\u6279\u8bc4\u662f\uff0c\u5f53\u4eba\u4eec\u5728\u7167\u7247\u548c\u89c6\u9891\u4e2d\u6355\u6349\u5230\u5b83\u7684\u56fe\u50cf\u65f6\uff0c\u5a92\u4f53\u5c31\u53d8\u5f97\u56fa\u5b9a\u4e86\u3002\n\u5176\u6b21\uff0c\u8d5b\u4e49\u5fb7\u6559\u6388\u7684\u201c\u56fa\u5b9a\u8981\u6c42\u7684\u9996\u8981\u76ee\u7684\u5728\u4e8e\u4ed6\u4eba\u5bf9\u4f5c\u54c1\u7684\u4f7f\u7528\u548c\u4eab\u53d7\u201d\u7684\u89c2\u70b9\u652f\u6301\u4e86\u8fd9\u6837\u7684\u89c2\u70b9\uff0c\u5373\u5f53\u4e00\u9053\u83dc\u4e0d\u4ec5\u4ec5\u662f\u6d88\u8d39\u65f6\uff0c\u5b83\u5c31\u662f\u201c\u56fa\u5b9a\u7684\u201d\u3002[58][58][58]\u524d\u6ce849\uff0c\u7b2c339\u9875(\u5f15\u7528\u52b3\u62c9\u00b7\u6d77\u66fc\uff0c\u201c\u5982\u4f55\u4e66\u5199\u751f\u6d3b\uff1a\u5173\u4e8e\u56fa\u5b9a\u548c\u7248\u6743/\u9690\u79c1\u5212\u5206\u7684\u4e00\u4e9b\u60f3\u6cd5\u201d\uff0c51WM)\uff0c\u4e0a\u9762\u6ce8\u89e349(\u5f15\u7528\u52b3\u62c9\u00b7\u6d77\u66fc\uff0c\u201c\u5982\u4f55\u4e66\u5199\u751f\u6d3b\uff1a\u5173\u4e8e\u56fa\u5b9a\u548c\u7248\u6743/\u9690\u79c1\u5212\u5206\u7684\u4e00\u4e9b\u60f3\u6cd5\u201d\uff0c51WM)\u3002&&amp\uff1bMary L.Rev.\u3002825,842(2009))\u2026\u2026\u5f53\u7136\uff0c\u50cfNetflix\u7684\u201c\u53a8\u5e08\u684c\u201d[59][59][59][59][59][59][59][59][59][59][59][59][59][59][59][59][59]\u5409\u7eb3\u7ef4\u8299\u00b7\u8303\u00b7\u80e1\u91cc\u65af(Genevieve Van Hoor\u3002\u6355\u6349\u6240\u6709\u8fd9\u4e9b\u7f8e\u5473\u9700\u8981\u65f6\u95f4\uff0cBustle(2019\u5e742\u670822\u65e5)\uff0chttps://www.bustle.com/p/when-will-chefs-table-return-for-season-7-it-takes-time-to-capture-all-that-tasty-goodness-15988094[https://perma.cc/39KK-NJU7].\u3002\u800c\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u53d1\u5e03\u98df\u7269\u7684\u8d8b\u52bf\u8bc1\u660e\uff0c\u5b83\u5b58\u5728\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u53ef\u4ee5\u88ab\u5176\u4ed6\u4eba\u4eab\u7528\u3002\n\u53ea\u662f\u8fd9\u592a\u8352\u8c2c\u4e86\u3002\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u6240\u6709\u8fd9\u4e9b\u4f8b\u5b50\u90fd\u8868\u660e\uff0c\u6444\u5f71\u548c\u80f6\u7247\u8fd9\u79cd\u56fa\u5b9a\u7684\u5a92\u4ecb\u7406\u5e94\u83b7\u5f97\u76f8\u5173\u7684\u7248\u6743\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u98df\u7269\u8868\u8fbe\u7684\u975e\u56fa\u5b9a\u7684\u4f5c\u54c1\u3002\n\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u53a8\u5e08\u5728\u54c1\u5c1d\u548c\u5de7\u5999\u5730\u6d82\u62b9\u4ed6\u4eec\u7684\u98df\u7269\u65b9\u9762\u90fd\u4e0d\u80fd\u975e\u5e38\u6709\u624d\u534e\u3002\u7136\u800c\uff0c\u4e0d\u7ba1\u5b83\u4eec\u591a\u4e48\u6709\u827a\u672f\u6027\uff0c\u5a92\u4ecb\u8981\u4e48\u662f\u56fa\u5b9a\u7684\uff0c\u8981\u4e48\u4e0d\u662f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u80fd\u6bc1\u6389\u4e00\u76d8\u98df\u7269\u7684\u4eba\uff0c\u6211\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u5a92\u4ecb\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u3002", "note_en": "Of all the mediums where intellectual property makes the least amount of sense, actual food and drink must certainly be among the most absurd. Not the trade dress of food packaging, mind you. I&#39;m talking about the actual food and drink products themselves, be they craft beer or a plate of food. And, yet, you see this sort of thing crop up from time to time. A pizzeria somehow thinks it can trademark  the taste of its pizza. Or, more apropos for today&#39;s post, a German court that says taking pictures of plated food could  violate the copyright of the chef.\n Plating food is now coming up again, with a  post on the blog of the California Law Review site suggesting that plated food, if artistic enough, does in fact deserve copyright protection. While the entire post is detailed and thorough, the real question of whether plated food merits copyright protection has less to do with the creative aspect of plating -- of which there are some true creative aspects -- than with the question of fixability. To warrant copyright, a work must be both original in its creativity and created in a fixed medium. There are a couple of key historic cases that address what it means for a work to be in a fixed medium, helpfully laid out  in this John Marshall Law School article.\n In Kim Seng Company v. J&amp;A Importers, Inc., the court examined whether Kim Seng\u2019s \u201cbowl-of-food\u201d sculpture satisfied the fixation requirement of copyright law.31 Kim Seng admitted that the bowl-of-food sculpture was comprised of \u201ca perishable Vietnamese dish purchased by [an employee] from a local restaurant.\u201d32 In analyzing whether Kim Seng\u2019s bowl-of-food sculpture met the fixation requirement, the court compared it to the living garden in Kelley v. Chicago Park District, which was inherently changeable and ultimately perishable.33\n In Kelley v. Chicago Park District, the current leading case on copyrightability of organic works, the Seventh Circuit analyzed whether an artistically arranged garden was \u201cfixed\u201d for the purpose of the Copyright Act.34 A famous artist, Chapman Kelley, installed a wildflower display in Grant Park, a prominent public park in downtown Chicago.35 His garden received critical and popular acclaim, and was promoted as \u201cliving art.\u201d36 Without permission from Kelley, the Chicago Park District dramatically modified the garden by reducing its size, reconfiguring the flower beds, and changing some of the planting materials.37 Kelley sued the Park District.38 The Seventh Circuit found that Kelley\u2019s living garden could not be eligible for copyright protection because it \u201clack[ed] the kind of authorship and stable fixation normally required to support copyright.\u201d39 In its opinion, the court clarified that it was \u201cnot suggesting that copyright attaches only to works that are static or fully permanent (no medium of expression lasts forever), or that artists who incorporate natural or living elements in their work can never claim copyright.\u201d40 However, Kelley\u2019s living garden was \u201cnot stable or permanent enough\u201d to be a work of fixed authorship.\n So here we have two cases where courts are deciding copyright protections specifically in part on the question of fixed medium. While the California Law Review&#39;s post focuses on the Kim Seng Company decision, trotting out several scholars who take issue with the court&#39;s interpretation of the fixability question, I believe the the Kelley decision is actually more powerful. The first complaint from select scholars is that concept art often includes repetition that serves as a stand in for non-degradable medium for fixability.\n First, Professor Said\u2019s claim that an artists\u2019 conceptual art is fixed when repetitively performed applies with equal force to chefs who plate the same dish over and over. It is likely that, in practice, a chef would not want to copyright one particular iteration of a dish; any serving of \u201cWho Killed the Goat?\u201d would not last the average four months it takes to process an internet-submitted copyright claim.[56][56][56] Registration Processing Times, U.S. Copyright Office https://www.copyright.gov/registration/docs/processing-times-faqs.pdf [perma.cc/MHM9-DX5G] (last visited May 1, 2019).... Instead, Chef Anand\u2019s nightly plating of \u201cWho Killed the Goat?\u201d would likely \u201crepeat [itself] over and over,\u201d warranting the exact kind of protection that Professor Said describes as being so repetitive as to achieve performance.\n This only makes sense if you completely ignore the &#34;transitory&#34; language in the law, which states:\n \u201cA work is \u2018fixed\u2019 in a tangible medium of expression when its embodiment . . . is sufficiently permanent or stable to permit it to be perceived, reproduced, or otherwise communicated for a period of time more than transitory duration.\u201d\n A chef, brilliant and creative as he or she may be, creates and plates his or her food, that food literally transits to the table where it is enjoyed briefly before being destroyed via consumption, turned into mere caloric energy inside our bodies. Whatever the purpose of the law&#39;s language, it can&#39;t possibly have meant to assign copying restrictions to  that. In the Kelley decision, we&#39;re talking about art fixed in plants that might last years and years and yet that  still didn&#39;t warrant protection when Chicago decided to change the non-fixed expression around.\n The second criticism is that the medium becomes fixed when people capture its image in photographs and video.\n Second, Professor Said\u2019s idea that \u201cthe first purposes of the fixation requirement lies in the use and enjoyment of the work by others\u201d supports the notion that a dish is \u201cfixed\u201d when it becomes something more than just consumption.[58][58][58] Said, supra note 49, at 339 (citing Laura Heymann, How to Write a Life: Some Thoughts on Fixation and the Copyright/Privacy Divide, 51 WM. &amp; MARY L. REV. 825, 842 (2009))....Certainly, the success of shows like Netflix\u2019s Chef\u2019s Table[59][59][59] Genevieve Van Hoorhis, When Will \u2018Chef\u2019s Table\u2019 Return for Season 7? It Takes Time To Capture All That Tasty Goodness, Bustle (Feb. 22, 2019), https://www.bustle.com/p/when-will-chefs-table-return-for-season-7-it-takes-time-to-capture-all-that-tasty-goodness-15988094 [https://perma.cc/39KK-NJU7].... and the trend of posting food to social media proves that it exists long enough to be enjoyed by others.[\n Except that&#39;s ridiculous. If anything, all these examples show is that the fixed medium of photography and film deserve the copyrights in question, not the non-fixed work expressed via food.\n To be clear, none of this is to say that chef&#39;s can&#39;t be extremely talented both in taste and in artfully plating their food. No matter how artistic they may be, however, either the medium is fixed or it isn&#39;t. And as someone who can destroy a plate of food, I can tell you that medium ain&#39;t fixed.", "posttime": "2020-06-06 22:28:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6cd5\u5f8b,law,\u98df\u7269", "title": "\u4e0d\uff0c\u52a0\u5dde\u6cd5\u5f8b\u8bc4\u8bba\uff0c\u98df\u54c1\u7535\u9540\u4e0d\u503c\u5f97\u7248\u6743\u4fdd\u62a4", "title_en": "No, California Law Review, Food Plating Does Not Deserve Copyright Protection", "transed": 1, "url": "https://www.techdirt.com/articles/20200602/13143644631/no-california-law-review-food-plating-does-not-deserve-copyright-protection.shtml", "via": "", "real_tags": ["\u6cd5\u5f8b", "law", "\u98df\u7269"]}]