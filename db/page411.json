[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1000352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Apache2 Debian\u6d4b\u8bd5\u9875\u8be5\u9875\u4ec5\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684", "note_en": "Apache2 Debian Test Page  The page is only for testing purpose", "posttime": "2020-05-02 21:47:03", "tags": "vps,usd,\u6d4b\u8bd5,page", "title": "\u6bcf\u6708\u6d4b\u8bd51\u7f8e\u5143VPS CPU", "title_en": "Testing 1 USD a month VPS CPU", "transed": 1, "url": "http://vps.novateg.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["vps", "usd", "\u6d4b\u8bd5", "page"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000350, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5206\u6563\u7684\u3001\u79c1\u6709\u7684\u3001\u5b89\u5168\u7684\u548c\u514d\u8d39\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u83b7\u53d6\u5f00\u59cb\u6784\u5efa\u6240\u9700\u7684\u5de5\u5177\u548c\u652f\u6301\u3002\n\u60a8\u7684\u7528\u6237\u7684\u9690\u79c1\u548c\u533f\u540d\u6027\u3002\u6bcf\u4e2a\u4eba\u7684\u5b89\u5168\u8bbf\u95ee(SAFE)\u7f51\u7edc\u7684\u5efa\u7acb\u662f\u4e3a\u4e86\u7528\u5185\u7f6e\u7684\u52a0\u5bc6\u901a\u4fe1\u6765\u5426\u5b9a\u4e92\u8054\u7f51\u5165\u4fb5\u8005\u7684\u7aa5\u63a2\u3002\n\u6613\u4e8e\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u7684API\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7f16\u7801\u3002\u8fd9\u91cc\u65e0\u9700\u62c5\u5fc3\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u6216\u6269\u5c55\u6210\u672c\uff01\n\u7528\u6237\u59cb\u7ec8\u63a7\u5236\u7740\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u968f\u7740\u7f51\u7edc\u7684\u8d27\u5e01\u5316\uff0c\u4f60\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6700\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4f60\u7684\u7528\u6237\u6389\u4ee5\u8f7b\u5fc3\u3002\n\u60a8\u4e0d\u9700\u8981\u6eda\u52a8\u81ea\u5df1\u7684\u5e10\u6237\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\uff0c\u7528\u6237\u53ea\u9700\u5728\u7f51\u7edc\u7ea7\u522b\u767b\u5f55\u4e00\u6b21\u3002\u6709\u4e86\u4fdd\u9669\u7bb1\uff0c\u60a8\u518d\u4e5f\u4e0d\u4f1a\u4e22\u5931\u5bc6\u7801\u4e86\uff01\n\u6709\u4e86\u7528\u6237\u62e5\u6709\u7684\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8de8\u5e94\u7528\u7a0b\u5e8f\u5171\u4eab\u6570\u636e\uff0c\u4ee5\u65b0\u7684\u65b9\u5f0f\u521b\u5efa\u548c\u91cd\u7528\u6570\u636e\u96c6\uff01\n\u5b89\u5168\u7f51\u7edc\u4e2d\u6d89\u53ca\u7684\u7ec4\u4ef6\u5305\u62ec\u5ba2\u6237\u7aef\u3001\u4fdd\u9669\u5e93\u3001\u8def\u7531\u548c\u4f4e\u7ea7\u7f51\u7edc\u3002\n\u6838\u5fc3\u6280\u672f\u3002\n\u684c\u9762\u3001Web\u548c\u79fb\u52a8Dapp\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6784\u5efa\u5728\u5b89\u5168\u7f51\u7edc\u4e0a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u5c06\u60a8\u7684\u60f3\u6cd5\u5e26\u5230\u65b0\u7684\u3001\u5206\u6563\u7684\u4e92\u8054\u7f51\u4e0a\u3002\n\u793a\u4f8bDapp\u3002\nPARSEC(Protocol for Achronous\uff0cReliable\uff0cSecure and Efficient Consensus\uff0c\u5f02\u6b65\u3001\u53ef\u9760\u3001\u5b89\u5168\u548c\u9ad8\u6548\u4e00\u81f4\u6027\u534f\u8bae)\u662f\u4e00\u79cd\u5141\u8bb8\u8282\u70b9\u5728\u5206\u6563\u7684\u7f51\u7edc\u4e2d\u8fbe\u6210\u6709\u5e8f\u4e00\u81f4\u6027\u7684\u7b97\u6cd5\u3002\n\u4f7f\u7528Parsec", "note_en": "Decentralised, private, secure and infrastructure free. Get the tools and support you need to start building.\n Privacy and anonymity for your users. The Secure Access for Everyone (SAFE) Network is built to negate the prying eyes of internet interlopers with built-in encrypted communications.\n Easy to use APIs in many languages, means you can focus on coding. No need to worry about your infrastructure or scaling costs here!\n  Users are always in control of their data, and with monetisation being built into the network, you can focus on making the best app, without selling your users short.\n You don\u2019t need to roll-your-own account management solutions, users log in once at the network level. With SAFE you have no passwords left to lose!\n With data owned by users, you can share data across applications to create and reuse data sets in new ways!\n The components involved in the SAFE Network range from clients, vaults, routing and low level networking.\n Core Technology\n Desktop, Web and Mobile DApps can all easily be built on the SAFE Network. You can work with several languages to bring your ideas to the new, decentralised internet.\n Example DApps\n PARSEC (Protocol for Asynchronous, Reliable, Secure and Efficient Consensus) is an algorithm which allows nodes to reach ordered consensus in a decentralised network.\n Use PARSEC", "posttime": "2020-05-02 21:46:42", "tags": "rust,app,\u5b89\u5168,p2p,\u7f51\u7edc", "title": "\u5b89\u5168\u7f51\u7edc\u3002\u5b89\u5168P2P APP\u7cfb\u7edf\u5728Rust\u4e2d\u7684\u5b9e\u73b0", "title_en": "Safe Network. Secure P2P app system implemented in Rust", "transed": 1, "url": "https://hub.safedev.org/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["rust", "app", "\u5b89\u5168", "p2p", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000348, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u8d85\u7ea7\u7b80\u5355\u7684\u5f85\u529e\u4e8b\u9879\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u5c06\u4efb\u52a1\u5206\u7c7b\u5230\u9879\u76ee\u4e2d\uff0c\u5e76\u5c06\u4efb\u52a1\u5206\u7c7b\u4e3a\u4e09\u5217\uff1a&#34\uff1bTODO&34\uff1b\u3001&#34\uff1bDO&#34\uff1b\u548c&#34\uff1bDone&#34\uff1b\u3002\u6bcf\u4e2a\u521b\u5efa\u7684\u4efb\u52a1\u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2aID\u3002\u66f4\u6539\u4efb\u52a1\u7684\u6bcf\u4e2a\u547d\u4ee4\u90fd\u9700\u8981\u4e00\u4e2a\u4efb\u52a1ID\u3002", "note_en": "This is a super simple todo app. You can sort your tasks into projects and sort your task into three columns,  &#34;TODO&#34;,  &#34;DOING&#34; and  &#34;DONE&#34;. Every created tasks gets automatically assigned an id. Every command that changes a task requires a task ID.", "posttime": "2020-05-02 21:45:34", "tags": "\u4efb\u52a1,manager,task", "title": "Bash\u4e2d\u7684\u4efb\u52a1\u7ba1\u7406\u5668", "title_en": "Task Manager in Bash", "transed": 1, "url": "https://github.com/magtastic/bashtodo", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u4efb\u52a1", "manager", "task"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000347, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "DIXED\u5e2e\u52a9\u6df1\u5ea6\u5b66\u4e60\u56e2\u961f\u66f4\u5feb\u5730\u57f9\u8bad\u6a21\u578b\uff0c\u8f7b\u677e\u5171\u4eabGPU\u8d44\u6e90\uff0c\u5e76\u6709\u6548\u534f\u4f5c\u3002Desired\u5141\u8bb8\u6df1\u5165\u5b66\u4e60\u7684\u5de5\u7a0b\u5e08\u4e13\u6ce8\u4e8e\u5927\u89c4\u6a21\u6784\u5efa\u548c\u57f9\u8bad\u6a21\u578b\uff0c\u800c\u65e0\u9700\u62c5\u5fc3DevOps\u6216\u4e3a\u5e38\u89c1\u4efb\u52a1(\u5982\u5bb9\u9519\u6216\u5b9e\u9a8c\u8ddf\u8e2a)\u7f16\u5199\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002\n\u60a8\u53ef\u4ee5\u5c06Desired\u770b\u4f5c\u662f\u4e00\u4e2a\u5e73\u53f0\uff0c\u5b83\u53ef\u4ee5\u5f25\u5408TensorFlow\u548cPyTorch\u7b49\u5de5\u5177\u4e4b\u95f4\u7684\u5dee\u8ddd-\u8fd9\u4e24\u4e2a\u5de5\u5177\u975e\u5e38\u9002\u5408\u4f7f\u7528\u5355\u4e2aGPU\u7684\u5355\u4e2a\u7814\u7a76\u4eba\u5458-\u4ee5\u5e94\u5bf9\u968f\u7740\u56e2\u961f\u3001\u96c6\u7fa4\u548c\u6570\u636e\u96c6\u7684\u89c4\u6a21\u4e0d\u65ad\u589e\u5927\u800c\u5927\u89c4\u6a21\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u65f6\u51fa\u73b0\u7684\u6311\u6218\u3002\n\u7075\u6d3b\u7684GPU\u8c03\u5ea6\uff0c\u5305\u62ec\u52a8\u6001\u8c03\u6574\u57f9\u8bad\u4f5c\u4e1a\u5927\u5c0f\u4ee5\u53ca\u81ea\u52a8\u7ba1\u7406AWS\u548cGCP\u4e0a\u7684\u4e91\u8d44\u6e90\u3002\n\u8981\u4f7f\u7528Defined\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u6d41\u884c\u7684DL\u6846\u67b6\uff0c\u5982TensorFlow\u548cPyTorch\uff1b\u60a8\u53ea\u9700\u8981\u4fee\u6539\u6a21\u578b\u4ee3\u7801\u6765\u5b9e\u73b0Defined API\u3002\n\u8981\u5c06\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u79fb\u690d\u5230Desired\uff0c\u8bf7\u9075\u5faa\u60a8\u9996\u9009\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u6307\u5bfc\uff1a\n\u5982\u679c\u60a8\u9700\u8981\u5e2e\u52a9\uff0c\u60f3\u8981\u63d0\u4ea4\u9519\u8bef\u62a5\u544a\uff0c\u6216\u8005\u53ea\u662f\u60f3\u8981\u53ca\u65f6\u4e86\u89e3\u6709\u5173DIRECTED\u7684\u6700\u65b0\u6d88\u606f\uff0c\u8bf7\u52a0\u5165DIRECTED\u793e\u533a\uff01\n\u677e\u5f1b\u662f\u95ee\u6709\u5173\u51b3\u5fc3\u7684\u95ee\u9898\u5e76\u83b7\u5f97\u652f\u6301\u7684\u6700\u597d\u5730\u65b9\u3002\u5355\u51fb\u6b64\u5904\u52a0\u5165\u6211\u4eec\u7684\u677e\u5f1b\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u52a0\u5165\u793e\u533a\u90ae\u4ef6\u5217\u8868\uff0c\u8be2\u95ee\u6709\u5173\u9879\u76ee\u7684\u95ee\u9898\u5e76\u63a5\u6536\u901a\u77e5\u3002", "note_en": "Determined helps deep learning teams  train models more quickly,  easilyshare GPU resources, and  effectively collaborate. Determined allows deeplearning engineers to focus on building and training models at scale, withoutneeding to worry about DevOps or writing custom code for common tasks likefault tolerance or experiment tracking.\n You can think of Determined as a platform that bridges the gap between toolslike TensorFlow and PyTorch --- which work great for a single researcher with asingle GPU --- to the challenges that arise when doing deep learning at scale,as teams, clusters, and data sets all increase in size.\n  flexible GPU scheduling, including dynamically resizing training jobson-the-fly and automatic management of cloud resources on AWS and GCP\n To use Determined, you can continue using popular DL frameworks such asTensorFlow and PyTorch; you just need to modify your model code to implementthe Determined API.\n       To port an existing deep learning model to Determined, follow thetutorial for your preferred deep learning framework:\n     If you need help, want to file a bug report, or just want to keep up-to-datewith the latest news about Determined, please join the Determined community!\n Slack is the best place toask questions about Determined and get support.  Click here to join our Slack.\n You can also join the  community mailing listto ask questions about the project and receive announcements.", "posttime": "2020-05-02 21:42:06", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u6df1\u5ea6,deep,\u5b66\u4e60,determined", "title": "\u51b3\u5fc3\uff1a\u6df1\u5ea6\u5b66\u4e60\u57f9\u8bad\u5e73\u53f0", "title_en": "Determined: Deep Learning Training Platform", "transed": 1, "url": "https://github.com/determined-ai/determined", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u6df1\u5ea6", "deep", "\u5b66\u4e60"]}, {"category": "", "categoryclass": "", "imagename": "f445aec87178b5c9e4b9fb45921abee9.jpg", "infoid": 1000343, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65f6\u95f4\uff0c\u4e00\u4e2a\u4e0e\u6211\u4eec\u751f\u6d3b\u4e2d\u7684\u4e00\u5207\u7ea0\u7f20\u5728\u4e00\u8d77\u7684\u8bcd\uff0c\u4e00\u4e2a\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684\u4e1c\u897f\u3002\u5728\u6211\u4eec\u505a\u7684\u4efb\u4f55\u6d3b\u52a8\u4e2d\uff0c\u8ddf\u8e2a\u5b83\u90fd\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u51e0\u5343\u5e74\u6765\uff0c\u6211\u4eec\u53d1\u5c55\u4e86\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u6700\u7a81\u51fa\u7684\u662f\uff0c\u6211\u4eec\u4e00\u76f4\u4f9d\u8d56\u4e8e\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u89c6\u592a\u9633\u65f6\u95f4\u3002\n\u6211\u4eec\u51b3\u5b9a\u968f\u7740\u5b63\u8282\u7684\u63a8\u79fb\u628a\u5b83\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5c06\u56db\u5b63\u7684\u4e00\u4e2a\u5b8c\u6574\u5468\u671f\u7b97\u4f5c\u4e00\u5e74\uff0c\u5373\u7ed5\u592a\u9633\u4e00\u5468\u3002\u6211\u4eec\u8fd8\u628a\u5149\u7684\u4f20\u9012\u4e0e\u7f3a\u5c11\u5206\u6210\u51e0\u5929\uff0c\u5373\u5730\u7403\u81ea\u8f6c\u4e00\u5468\u3002\u63a5\u4e0b\u6765\u6765\u770b\u66f4\u7cbe\u786e\u7684\u65f6\u949f\u5212\u5206\uff0c\u6bd4\u5982\u79d2\u3001\u5206\u548c\u5c0f\u65f6\uff0c\u8fd9\u4e9b\u5355\u4f4d\u5728\u5386\u53f2\u4e0a\u7684\u4e0d\u540c\u65f6\u523b\u610f\u5473\u7740\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u6700\u7ec8\uff0c\u968f\u7740\u65c5\u884c\u53d8\u5f97\u66f4\u5feb\uff0c\u5728\u591a\u4e2a\u5730\u65b9\u8fdb\u5316\u51fa\u6765\u7684\u4e0d\u540c\u8ba1\u65f6\u65b9\u5f0f\u4e0d\u5f97\u4e0d\u8d8b\u540c\u3002\u5404\u4f4d\u3002\n\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u65f6\u95f4\u662f\u4e8b\u4ef6\u7684\u8fdb\u7a0b\uff0c\u6ca1\u6709\u4e8b\u4ef6\u5c31\u6ca1\u6709\u65f6\u95f4\u3002\u5b83\u662f\u7531\u5b83\u7684\u6d4b\u91cf\u6765\u5b9a\u4e49\u7684\uff0c\u4ee5\u7279\u5b9a\u95f4\u9694\u53d8\u5316\u7684\u4e1c\u897f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5355\u4f4d\uff0c\u5c3d\u7ba1\u5b83\u4ecd\u7136\u662f\u65e0\u9650\u53ef\u9664\u7684\u3002\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u770b\u5f85\u65f6\u95f4\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\u5728\u7ecf\u5178\u7269\u7406\u5b66\u4e2d\uff0c\u65f6\u95f4\u662f\u7edd\u5bf9\u7684\uff0c\u72ec\u7acb\u4e8e\u611f\u77e5\u8005\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u540c\u6b65\u7684\u3002\u5728\u73b0\u4ee3\u7269\u7406\u5b66\u4e2d\uff0c\u6211\u4eec\u6709\u7231\u56e0\u65af\u5766\u7684\u72ed\u4e49\u800c\u5e7f\u4e49\u7684\u76f8\u5bf9\u8bba\uff0c\u4e5f\u5c31\u662f\u9002\u7528\u7684\uff0c\u4e8b\u7269\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u53c2\u7167\u7cfb\uff0c\u65f6\u95f4\u53ef\u4ee5\u81a8\u80c0\u6216\u6536\u7f29\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u8868\u660e\uff0c\u7531\u4e8e\u8ddf\u8e2a\u65f6\u95f4\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u521b\u9020\u4e86\u6bcf3000\u4e07\u5e74\u8bef\u5dee\u4e3a1\u79d2\u7684\u8d85\u7cbe\u5bc6\u539f\u5b50\u949f\u3002\u6211\u4eec\u53ef\u4ee5\u7edd\u5bf9\u786e\u5b9a\u4e24\u4e2a\u8282\u62cd/\u632f\u8361\u4e4b\u95f4\u53d1\u751f\u7684\u5931\u8bef\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u5b83\u5c31\u8d85\u51fa\u4e86\u4eba\u7c7b\u7684\u5bff\u547d\uff0c\u6211\u4eec\u6709\u5f88\u591a\u9519\u8bef\u9700\u8981\u7ea0\u6b63\u3002\u8fd9\u4e9b\u65f6\u949f\u662f\u6211\u4eec\u771f\u7406\u7684\u6765\u6e90\uff0c\u5b83\u4eec\u7ed9\u4e86\u6211\u4eec\u79d2\u7684\u6807\u51c6\u5355\u4f4d\u7684\u5b9a\u4e49\uff0cSI\u79d2\u3002\n\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709\u8ba1\u7b97\u65f6\u95f4\u7684\u539f\u5b50\u949f\uff0c\u800c\u4e0d\u8003\u8651\u5468\u56f4\u53d1\u751f\u7684\u4e8b\u4ef6\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5728\u592a\u7a7a\u4e2d\u8fd0\u52a8\u7684\u884c\u661f\uff0c\u5b83\u53d7\u5230\u529b\u7684\u4f5c\u7528\uff0c\u5728\u90a3\u91cc\u6211\u4eec\u9009\u62e9\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u56f4\u7ed5\u592a\u9633\u4e00\u5468\u6ee1\u4e00\u5708\u7b49\u4e8e\u4e00\u5e74\uff0c\u5b83\u672c\u8eab\u81ea\u8f6c\u4e00\u5468\u5c31\u662f\u4e00\u4e2a\u592a\u9633\u65e5\uff0c\u4e24\u6b21\u592a\u9633\u51cc\u65e5\u4e4b\u95f4\u7684\u7a7a\u95f4(\u5929\u7a7a\u4e2d\u7684\u6700\u9ad8\u9ad8\u5ea6)\u3002\u8fd9\u4e24\u4e2a\u503c\u6700\u7ec8\u90fd\u5e94\u8be5\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5e94\u8be5\u662f\u4e0d\u540c\u7684\u3002\u5730\u7403\uff0c\u56e0\u4e3a\u5b83\u7684\u4e0d\u5747\u5300\u6027\u548c\u76ee\u524d\u7684\u4f4d\u7f6e\uff0c\u5728\u5b83\u7684\u3002\n\u6211\u4eec\u6240\u505a\u7684\u5c31\u662f\u4f7f\u7528SI\u79d2\u7684\u6807\u51c6\u5b9a\u4e49\u4f5c\u4e3a\u6211\u4eec\u7684\u951a\u3002\u73b0\u5728\uff0c\u4e00\u5929\u4e0d\u662f\u7531\u592a\u9633\u7684\u8868\u89c2\u4f4d\u7f6e\u6765\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7ec4\u6210\u5e73\u5747\u6052\u661f\u65e5\u7684\u5e73\u5747\u6807\u51c6\u5355\u4f4d\u79d2\u7684\u6570\u91cf\u6765\u5b9a\u4e49\u7684\uff0c\u5927\u7ea6\u572886400.002\u79d2\u5de6\u53f3\u3002\u8fd9\u4e2a\u5b9e\u9645\u7684\u7edf\u4e00\u65f6\u949f\u65f6\u95f4\u79f0\u4e3a\u5e73\u5747\u65f6\u95f4\u3002\u5e73\u5747\u592a\u9633\u65f6\u95f4\u662f\u4e00\u5e74\u4e2d\u67d0\u4e00\u5929\u7684\u51c6\u786e\u5e73\u5747\u65f6\u95f4\u3002\u8fd9\u662f\u6240\u6709\u592a\u9633\u65e5\u9664\u4ee5n\u5929\u7684\u603b\u548c\u3002\n\u56e0\u6b64\uff0c\u5177\u6709\u7edf\u4e00\u56fa\u5b9a\u503c(\u5e73\u5747\u65f6\u95f4)\u7684\u65f6\u949f\u5c06\u4e0e\u8868\u89c2\u592a\u9633\u65f6\u95f4\u4e0d\u540c\u3002\u8fd9\u79cd\u5dee\u5f02\u88ab\u79f0\u4e3a\u65f6\u95f4\u65b9\u7a0b(EOT)\uff0c\u5b83\u7684\u53d8\u5316\u53ef\u4ee5\u957f\u8fbe15\u5206\u949f(\u63d0\u524d14\u5206\u949f\uff0c\u63a5\u8fd12\u67086\u65e5\uff0c\u843d\u540e\u4e8e\u63a5\u8fd111\u67083\u65e5\u768416\u5206\u949f)\uff0c\u4f46\u968f\u7740\u5730\u7403\u5b8c\u6210\u7ed5\u592a\u9633\u7684\u8f68\u9053\uff0c\u5b83\u4f1a\u91cd\u65b0\u5e73\u8861\u81ea\u5df1\u3002\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u8bb8\u591a\u6a21\u62df\u6765\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u3002\n\u51e0\u5e74\u6765\uff0c\u6211\u4eec\u7684\u65e5\u5386\u53ea\u80fd\u5bb9\u7eb3\u6574\u6574\u4e00\u5929\uff0c\u4f46\u5b9e\u9645\u5b8c\u6210\u4e00\u5708\u6240\u9700\u7684\u5929\u6570\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e2a\u5206\u6570\u7d2f\u79ef\u591a\u5e74\uff0c\u5728\u4e0b\u4e00\u5e74\u589e\u52a0\u989d\u5916\u7684\u4e00\u5929\uff0c366d\u800c\u4e0d\u662f365\u5929\u3002\u5728\u5112\u7565\u5386\u4e0a\uff0c\u4e00\u5e74\u662f365.25\u5929\uff0c\u7136\u800c\u8fd9\u5e76\u4e0d\u7cbe\u786e\uff0c\u5b83\u6bd4\u5f62\u6210\u4e00\u5e74\u6240\u9700\u7684\u5b9e\u9645\u5929\u6570\uff1a365.242199\u5929\u8981\u9ad8\u51fa\u4e00\u5e74\u7684\u5b9e\u9645\u5929\u6570\uff1a366\u5929\uff0c\u800c\u4e0d\u662f365\u5929\u3002\u5728\u5112\u7565\u5386\u4e0a\uff0c\u4e00\u5e74\u662f366\u5929\uff0c\u800c\u4e0d\u662f365\u5929\u3002\u4eca\u5929\u6700\u5e38\u89c1\u7684\u516c\u5386\u5bf9\u5b83\u7684\u5b9a\u4e49\u66f4\u591a\u2026\u2026\u3002\n\u4f46\u662f\u5728\u6211\u4eec\u73b0\u5728\u7684\u751f\u6d3b\u4e2d\uff0c\u5728\u6211\u4eec\u7684\u8f6f\u4ef6\u4e2d\uff0c\u6211\u4eec\u4ecd\u7136\u752886400\u79d2\u6765\u5b9a\u4e49\u4e00\u5929\uff0c\u5bf9\u5417\uff1f\u90a3\u4e48\u8fd9\u4e2a\u590d\u6742\u7cfb\u7edf\u7684\u5176\u4f59\u90e8\u5206\u5462\uff0c\u6211\u4eec\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u5dee\u5f02\uff0c\u8c01\u9009\u62e9\u65f6\u95f4\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u5728\u8fd9\u4e9b\u4ef7\u503c\u4e0a\u540c\u6b65\uff0c\u8c01\u8d1f\u8d23\uff1f\u4f60\u6240\u5728\u7684\u6b63\u5348\u53ef\u80fd\u4e0d\u662f\u6211\u6240\u5728\u7684\u6b63\u5348\u3002\n\u6211\u4eec\u949f\u4e0a\u663e\u793a\u7684\u5f53\u5730\u65f6\u95f4\u662f\u7531\u6211\u4eec\u7684\u5730\u65b9\u5f53\u5c40\u9009\u62e9\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6c11\u4e8b\u65f6\u95f4\u3002\u56e0\u4e3a\u6211\u4eec\u90fd\u751f\u6d3b\u5728\u540c\u4e00\u4e2a\u661f\u7403\u4e0a\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u5f53\u5730\u793e\u533a\u7684\u6bcf\u4e2a\u4eba\u90fd\u4e0e\u6211\u4eec\u8ba4\u4e3a\u662f\u540c\u65f6\u7684\u65f6\u95f4\u540c\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u5728\u90a3\u91cc\u521b\u5efa\u4e00\u4e2a\u4e25\u683c\u7684\u6807\u51c6\u65f6\u95f4\uff0c\u5e76\u4ece\u90a3\u91cc\u4e3a\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u6d3e\u751f\u51fa\u65f6\u95f4\u3002\u4efb\u4f55\u79bb\u8fd9\u6761\u5b50\u5348\u7ebf\u66f4\u8fdc\u7684\u7ecf\u5ea6\u90fd\u4f1a\u589e\u52a0\u589e\u91cf\u65f6\u5dee\u3002\u90a3\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u540c\u6b65\u4e86\uff0c\u51cf\u5c11\u4e86\u4e71\u4e03\u516b\u7cdf\u7684\u4e8b\u60c5..\u3002\n\u7b2c\u4e00\u4e2a\u4e3b\u8981\u6807\u51c6\u662f\u5728\u4f26\u6566\u683c\u6797\u5a01\u6cbb\u7684\u7687\u5bb6\u5929\u6587\u53f0\u8bbe\u7acb\u7684\u3002\u90a3\u91cc\u8bb0\u5f55\u7684\u5e73\u5747\u65f6\u95f4\u88ab\u7528\u6765\u4f5c\u4e3a\u5f53\u5730\u6c11\u7528\u65f6\u95f4\u7684\u504f\u79fb\u91cf\uff0c\u79f0\u4e3a\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\uff0c\u6216\u7b80\u79f0\u4e3aGMT\u3002\u7136\u800c\uff0c\u5b83\u5e76\u4e0d\u50cf\u5b83\u6240\u80fd\u8fbe\u5230\u7684\u90a3\u6837\u7cbe\u786e\uff0c\u56e0\u6b64\u57281967\u5e74\u88ab\u53e6\u4e00\u79cd\u79f0\u4e3a\u4e16\u754c\u534f\u8c03\u65f6\u95f4(UTC)\u7684\u6807\u51c6\u6240\u53d6\u4ee3\u3002\nUTC\u662f\u4e16\u754c\u65f6\u95f4\u6807\u51c6\u7684\u4e00\u4e2a\u7248\u672c\u3002\u5728\u8fd9\u4e2a\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u8fd8\u627e\u5230\u4e86UT1\uff0c\u5b83\u5229\u7528GPS\u536b\u661f\u8ddf\u8e2a\u5730\u7403\u81ea\u8f6c\u89d2\uff0c\u5b83\u662f0\u5ea6\u7ecf\u5ea6\u7684\u5e73\u5747\u592a\u9633\u65f6\uff0c\u5b83\u662f\u4e00\u4e2a\u66f4\u597d\u7684", "note_en": "Time, a word that is entangled in everything in our lives, somethingwe\u2019re intimately familiar with. Keeping track of it is important formany activities we do.\n Over millennia we\u2019ve developed different ways to calculate it. Mostprominently, we\u2019ve relied on the position the sun appears to be at inthe sky, what is called apparent solar time.\n We \u2019ve decided to split it as seasons pass, counting one full cycle ofthe 4 seasons as a year, a full rotation around the sun. We \u2019ve alsodivided the passing of light to the lack thereof as days, a rotationof the earth on itself. Moving on to more precise clock divisions suchas seconds, minutes, and hours, units that meant different things atdifferent points in history. Ultimately, as travel got faster, thedifferent ways of counting time that evolved in multiple places had toconverge. People  ...\n In physics, time is the progression of events, without events there\u2019sno time. It is defined by its measurement, what changes at a specificinterval can be considered a unit, though still infinitely divisible. In physics there are two ways to view time. In classical physics, time isabsolute, independent of the perceiver, synchronized for everyone. Whilein modern physics, we have Einstein \u2019s special and general relativitythat applies, things depend on a frame of reference, time can dilate orcontract  ...\n All of this to say that because of the importance of tracking time, we\u2019vecreated ultra-precise atomic clocks that have an error of 1 second every30 million years. We can be categorically sure of the lapse that happensbetween two beats/oscillations, if there\u2019s an error then it\u2019s outsidethe human life-span, and we\u2019ve got many of them to correct errors. Thoseclocks are our sources of truth, they give us the definition of thestandard unit of second, SI second.\n We have, on one hand, the atomic clocks counting time regardless of eventshappening around, and on the other hand, we have a moving planet in spacethat is subject to forces, where we\u2019ve chosen the fact that one fullorbit around the sun equals a year and that one full rotation on itselfis a solar day, the space between two transit of the sun (maximum heightin the sky). Both of those values ought to diverge and differ eventually. The earth, because of its unevenness and current position in its  ...\n What we\u2019ve done is used this standard definition of the SI second as ouranchor. A day is now not defined by the apparent sun position but as theaverage number of standard unit seconds that make up an average stellarday, somewhat around 86400.002 seconds. This actual uniform clock timeis called the mean time. Mean solar time is the exact average mean timefor a day in a year. That is the sum of all solar days over n days.\n Thus, clocks that have a uniform fixed value, mean-time, will differ withthe apparent sun time. This difference is called the equation of time(EOT) and it can vary as much as 15min (ahead 14 minutes near February 6,behind 16 minutes near November 3) but rebalances itself as the earthfinishes its orbit around the sun. There are many simulations you canfind online to understand this concept.\n As for years, our calendars can only hold entire days but the actualnumber of days it takes to finish an orbit is fractional. And so weaccumulate this fraction over multiple years and add an extra day tothe year that follows making it a leap year, 366 days instead of 365.On a Julian calendar, a year is 365.25, however this is not precise,it is higher than the actual number of days it takes to form a year:365.242199. The Gregorian calendar, which is the most common today,defines it more  ...\n But we still use 86400 seconds to define a day in our current lives,in our software, right? What about the rest of this complex system,how do we cope with this discrepancies, who chooses the mean time,how can we all sync on those values, who\u2019s in charge? Noon where youare might not be noon where I am.\n The local time that shows on our clock is chosen by our local authorities,we call it civil time. And because we all live on the same planet, instead of each syncing inour local community with what appears to us as the mean time, we canchoose a fixed geographical spot, create a rigorous standard time there,and for the rest of the world, derive from it. Anything further away inlongitude from this meridian can add a delta time difference. That waywe can all sync and make less of a mess in  ...\n The first major standard was set at the Royal Observatory in Greenwich,London. The mean time recorded there was used as the one to derive yourlocal civil time as an offset from, called Greenwich Mean Time, or GMT forshort. However, it was not as precise as it could be and thus got replacedin 1967 by another standard called Universal Coordinated Time, UTC.\n UTC is a version of the Universal Time standard. In this standard we alsofind UT1, that keeps track of Earth rotation angle using GPS satellites,it is the mean solar time at 0 degree longitude, it\u2019s a better and moreprecise version of GMT.\n UTC, instead of relying on the rotation of the earth, relies on theInternational Atomic Time (TAI), which is the time we talked aboutthat defines precisely the SI second using 400 atomic clocks at multiplelaboratories worldwide. Additionally, to keep count of the rotation ofthe Earth, and keeps in sync with UT1, the UTC authorities can add or removea second in a day, a leap second. The difference between UTC and UT1 isDUT1, basically when DUT1 is one second we need a leap second. So  ...\n As you could\u2019ve guessed, introducing a leap second isn\u2019t a decision wetake instantaneously, it\u2019s announced at least six months in advance in\u201cBulletin C\u201d by the International Earth Rotation and Reference SystemsService (IERS) which is one of the authority. There\u2019s also involvementin the standard from the International Astronomical Union (IAU) and theInternational Telecommunication Union (ITU).\n With this, we\u2019re set, we have a clean standard, now how should we dividethe world such that civil local time keep in sync with the sun.\n Time and longitude difference is what we need, we split the world into 24meridians, each 15 degrees apart, each meridian zone represents one hourseparation offset from UTC. Those are called time zones, they can gofrom UTC-12 to UTC+14, and can sometimes be referred to by their name,for example Western European Time, Central European Time, etc \u2026However,countries don \u2019t fall precisely on meridian, and thus local authorities canchoose which section of the country follows which time  ...\n Moreover, there\u2019s a practice called daylight saving time (DST), or summertime, which is used in civil time to advance forward the clock by one hourin spring and set it back one hour in autumn/fall. For example in winterthe region could be on UTC+2 (EET) and in summer on UTC+3 (EEST). Creatinga 23h day in late winter and a 25h day in autumn/fall. This practice isbeing reconsidered in the EU and planned to be removed by 2021.\n     The easiest way I\u2019ve found to test many formats is to use the  date(1)command.\n It can show the time both in human readable format string and moremachine readable numeric formats.\n Some formats include the timezone as numeric, others as the alphabetictime zone abbreviation. You can represent the date with or without thetime zone, with it to make it more precise to the viewer.\n Some formats prepend the time zone part with the \u2018Z\u2019 character, which hasorigins in the GMT standard but that now stands for zone descriptionof zero hours, also sometimes called \u201cZulu time\u201d.\n We can see that the date command automatically knows our time zone andhow to display the time in a way we can read it. How do we set thisformat and where does it take it from. How to set the time zone.\n  The date commands relies on  locale, which is an internationalizationmechanism used by Unix-like operating systems. Locale are configurationsthat can be used to set the language, money, and other representationalvalues that can change by location. The libc on the system, andconsequentially the coreutils, should be aware of those locale values.\n The specific category of locale we are interested in is the  LC_TIME,which is used for the formatting of time and date information, spellingof weekdays, months, format of display, time zone, 24 vs 12h format, etc..\n     Locale can also be set on a user level in  ~/.config/locale.conf, or $XDG_CONFIG_HOME/locale.conf, or generally  $HOME/.config/locale.conf.\n All of this works because of the way profiles are loaded in the shell,you can take a look at  /etc/profile.d/locale.sh.\n  The time zone information database is distributed by the IANA,it\u2019s referred to as the tz database. The Unix distribution downloadswhen updated and installs it in  /usr/share/zoneinfo/so that otherlibraries and programs can use it. In the tz data/zoneinfo db we canfind all the information required to keep track of time in specificplaces. It \u2019s distributed in such a way to make it easier to choosetime zone by choosing the city name or location instead of the exactdrift/skew  ...\n To change the timezone globally we have to link  /etc/localtime to anentry in  /usr/share/zoneinfo/. For instance:\n  Many Unix-like system provide helpers to not have to manually linkit. There\u2019s  timedatectl(1) from systemd and  /etc/timezone on Debian,for instance.\n The  TZ POSIX environment variable can also be used to specify thezone in human readable format on the command line, and the  TZDIRto specify the location of the tzdata. That means separate users on asingle system can have different time zones.\n   The format of the tz database aka tzdata is explained in details in the man tzfile(5). To create it you can use a textual format an convertit using the command  zic(1) (zone information compiler).\n  &gt; echo &#34;Zone COOL +2:25 - COOL&#34; &gt; COOL.zone&gt; mkdir ./zoneinfo&gt; zic COOL.zone -d ./zoneinfo&gt; TZDIR=zoneinfo TZ=COOL date# Should Output something similar toSun 12 Apr 2020 11:44:00 AM COOL\n So now programs that rely on the standard  time.h header can be awareof the time zone info. You can also load your own dynamically using tzset(3) from the  TZ env.\n   Time is used in so many places in our operating system. We\u2019re goingto list some common places where it is found and then build on them toapproach more complex topics in the following sections.\n Let\u2019s start with the infamous POSIX time. POSIX time, or Unix time, orEpoch time, is the number of seconds that have elapsed since Epoch time,which is the 1st of January 1970 00:00:00 UTC, minus the leap secondsdifference, so Unix time is the same everywhere. That means that in Unixtime, each day is considered to be exactly 86400 SI seconds, which wouldmean it should skew away from real UTC, and thus drifts away from UT1(mean time).\n To answer this, when there\u2019s a leap second introduced in UTC, POSIXtime will repeat the same second or omit one because its minute cannotgo over 60 seconds unlike real UTC.\n Some rare systems can use TAI (International Atomic Time) as a sourceinstead of UTC but will need a table on the system with the leap secondsin it to know how to calibrate itself to civil time.\n Because Unix time start in 1970, dates that are before this need to berepresented as negative numbers. However, prior to this date we haveto keep in mind that there might not have been the UTC standard yet andthus it \u2019s better to rely on something else to represent the time and dateaccurately. Some real time operating systems (RTOS), that we \u2019ll see ina bit, like QNX choose to represent Unix time as an unsigned integer,which means it cannot represent time  ...\n  Historically, Unix time was a signed 32 bit integer that incremented at60 Hz, the same rate as the system clock on the hardware of early Unixsystem, that is 60 times per second. Epoch differed too, it was the 1st of January 1971 in the first editionof Unix Programmer \u2019s Manual. However, at 1/60th of a second precision,the 32 bit integer would have used all its range in only 2.5 years. Thusit was changed again to the Epoch of 1 January 1970 at the rate of 1Hz,an  ...\n When the concept was made there was no consideration of all theissues with leap seconds, time zones, leap years, we\u2019ve mentionedpreviously. It\u2019s only in the 2001 edition of POSIX.1 that there wassome rectification about the faulty leap year rule in the definition ofUnix time.\n  Unix time is the value that Unix system look at to keep track of theirsystem time. Its value is kept in a  time_t type format, defined vaguelyin POSIX.1 as previously mentioned, and that can be included via the time.h header. POSIX only mandates that it should be an integer, anddoesn\u2019t say anything about if it should be signed or not, explainingwhy QNX chose an unsigned integer. For more precise time manipulation, the  time.hheader also includesother types  ...\n However, usually it is a singled signed number which size is defined persystem. For example on mine,  &lt;time.h&gt; redirects to  &lt;bits/timesize.h&gt;as a 64 bits signed integer.\n One issue called the Year 2038 problem, Y2038, or Y2k38, is when systemthat chose to represent Unix time as a signed 32 bit value reach themaximum range of 32 bit integers and overflows, creating an undefinedbehavior. This issue is completely avoided using a 64 bit signed integer.\n  The uptime of a machine is a measure of how long the machine has beenrunning since the last reboot, the current time minus the time it wasbooted at. Some system may require high availability due to service level agreementand this is one of the measure that can be looked at. However, highuptime can be a sign of negligence and rebooting after a long time maylead to unexpected consequences as some changes may only happen on reboot.\n Most Unix-like OS come with the BSD  uptime(1) command which shows thecurrent time, how long the system has been running, how many users arecurrently logged in, and the system load average for the last 1, 5, and15 minutes (Though those values aren\u2019t good metrics, see Brendan Gregg\u2019sblog). Load average being the average number of processing running atthat time. It\u2019s the same information one can find in the first line ofthe  w(1) command.\n On Linux the uptime can also be found in the  /proc filesystem, as /proc/uptime, the file containing 2 values, the first one being thenumber of seconds elapsed since last reboot and the second how muchtime each core has spent idle in seconds. Which are both indicator ofsystem usage.\n Another command that is common as a metric is  time(1). It is a simplecommand which reports the time a command has taken. By default it reports on real time, user time, and sys time. Real timemeans the wall-clock time, it \u2019s the total time for everything to executefrom start to finish. User time is the amount of cpu time spent in usermode, while sys time is the amount of time spent in kernel mode, systemcalls time and more. CPU time is calculated as  ...\n In fact, there exists a panoply of commands that can be used forbenchmarking processes and what they use, how much time they spend inwhich particular section of their code. We\u2019ll keep it at that.\n That said, we often have to take snapshots of time in our programs,timestamps, saying this has happened at this specific time, attaching ametadata. These timestamps can be stored in Unix time, or UTC time, or inthe specific time zone. However, time-stamping records with local timeisn \u2019t advised because of issues that could arise with daylight saving,it \u2019s much easier to recalculate the offset from UTC. Though in certaincases, it would be valuable  ...\n Examples of metadata timestamps are the Unix atime, ctime, mtime thatare stored with files inodes on the file system.\n Atime is the last access timestamp changed whenever the file is read orexecuted for instance, ctime is the last status change timestamp changedwhenever the file is written to or its inode changes, mtime is the lastmodification timestamp changed whenever the file has data written to it,is created, truncated, etc.. An additional non-standard timestamp that we can find on some system isbtime, the file creation/birth timestamp.\n Additionally, some filesystems support flags related to those timestamps,usually for optimization to avoid disk load, such as ones that changethe way atime is updated, remove access time from directories, etc.. This is the prevalent default on a lot of filesystems and thus gives afalse sense of the definition of those timestamps.\n To have more information about when those timestamp are actually updatedhave a look at  man 7 inode, and check your file current values bycalling the  stat command or related system call on it. You can also use touch(1) to arbitrarily change the timestamps on files.\n Let\u2019s end this section with timers and chronometers that trigger eventsat specified time, Unix alarm clocks if you want, clock daemons.\n The de facto implementation of this is cron, which first appeared inUnix V6, a clock daemon tool written by Ken Thompson, in reference tothe word Chronos which is the Greek word/prefix for time.\n Cron specialized in scheduling the execution of programs periodically,at certain time events. It registers the events in a table.\n It initializes its entries from directories containing the scripts: /etc/crontab or  /etc/cron.*/ or  /var/spool/cron, you can take alook at  man 8 cron for more info on that.\n   Cron will by default execute the entries using sh, that means those aresimple shell scripts, letting you set environment variables, and more. In the crontab you have to specify at which time to repeat the executionof events using a special syntax composed of every minute, every hour,every day, every month, every week day.\n Despite cron being the go to solution for repeated scheduled execution,others have created new solutions. Namely, init systems and servicemanagers have tried to re-implement cron their own way and integratetimers as a type of service. Centralizing the management of timers alongwith services.\n Prominently, systemd implements this function using  systemd.timers,which are systemd unit files and inherit all the facilities and securitythat systemd provides for them.\n      We\u2019ve said previously that POSIX time was used by Unix-like OS to keeptrack of system time but we\u2019ve cut it short at that. There\u2019s still a lotto add to this, like where does the system get its time to begin with,how does it store it when it\u2019s not running, what in the OS triggers thecount of seconds, etc..\n In this section I\u2019ll limit myself to Linux and FreeBSD as examples butthe concepts should apply to any other Unix-like OS. I\u2019ve chosen to dothis because resources were scarce on this topic as most have chosento not mention it and skip directly to the topic of NTP, Network TimeProtocol, which we\u2019ll see in the next section.\n There are two types of clocks on our machines, the first type goes bythe name of RTC (Real Time clock)/CMOS Clock/BIOS Clock/Hardware clock,and the other by the name of system clock/kernel clock/software clock. The system clock is the one we \u2019ve mentioned before, that keeps track oftime using a counter of seconds after the Epoch, and the hardware clockis one we haven \u2019t mentioned that resides physically on the system andruns without  ...\n As you would have guessed, any two clocks are bound to drift aparteventually, those clocks will differ from each other and from the realtime. However, there are many methods to keep them in sync and accuratewithout using external sources.\n Hardware clocks are usually found on the PC motherboard and interfacedwith using an IO bus. Because some of those are on standard architecturesuch as the ISA (Industry Standard Architecture), it can be easy to knowhow to query and modify them. However, it\u2019s still hardware dependentand so can vary widely.\n These clocks run independently of any control program and are even runningwhen the machine is powered off, kept alive by their own power source,a small battery. They are normally consulted only when the machine is turned on, to setthe system time on boot. Unfortunately, they are known to be inaccurate,but weirdly inaccurate in a predictable way, gaining or losing the sameamount of time each day, drifting monotonously, a systematic  ...\n Hardware clocks don\u2019t have to store time as Unix time or UTC, and don\u2019thave to be limited in precision to seconds. It\u2019s up to the hardwareimplementation to decide what can be done and on the user to decidewhat to do with it. In theory these clocks have a frequency that variesbetween 2Hz and 8192Hz, from 0.5s to 0.1ms precision.\n Let\u2019s also note that there can be more than one hardware clock ona system.\n  On Linux for example, the RTC clocks are mapped to special device files /dev/rtc* backed by the driver. The star denoting the number of theclock if there are many, and  /dev/rtc being the default RTC clock. As with anything hardware, there could possibly be issues with the driverof the RTC and the clocks might not be mapped properly, especially ifnot following the industry standard. Linux has fallback mechanisms forother systems  ...\n On the other side, the only time that matters is the one you see whenthe system is running, and that is the system time.\n As we said, system time is the number of seconds since the Epoch thatis stored and kept track of by the kernel, however internally it mightbe more precise than seconds, it could go up to the precision offered bythe architecture. We\u2019ll come back to this topic of high precision soon,just keep the simple concept in mind.\n The system time, when displayed to us, refers to the timezone informationand files we\u2019ve previously mentioned. It\u2019s good to know that the Linuxkernel also keeps its own timezone information for specific actions suchas filesystem related activities, and this kernel timezone is updatedat boot or via the utility  hwclock(8) by issuing  hwclock --systz.\n When booting, the system clock is also initialized from the RTC thatkeeps running when the system is off. In some cases it can be initializedfrom external sources and not rely on the RTC.\n Thus, when the system is running the hardware clock is pretty muchuseless and we could do whatever we want with it. However, we have tobeware of discrepancies on reboot.\n The counter that the kernel uses to increment the system clock is usuallybased on a timer functionality offered by the Instruction Set Architectureof the CPU (ISA not to be confused with the other ISA we spoke about,the Industry Standard Architecture). In simple terms, that means that theCPU gets interrupted at known programmable intervals periodically,and when it \u2019s interrupted it executes a timer service/event routine.  ...\n To set the system time and date, we can rely on the  date(1) command,which takes many formats via its  --set option.\n     Or even, on some system, rely on the service manager. The infamous timedatectl(1) of systemd comes to mind, which can set and giveinformation about pretty much everything we\u2019re mentioning in this section.\n  Local time: Fri 2020-04-17 12:40:00 EEST Universal time: Fri 2020-04-17 09:40:00 UTC RTC time: Fri 2020-04-17 09:40:01 Time zone: Asia/Beirut (EEST, +0300) System clock synchronized: yes NTP service: active RTC in local TZ: no\n What\u2019s this line about \u201cRTC in local TZ\u201d, can the time on the hardwareclock be stored with timezone info, and why would we do this? What isstored on this clock, is it UTC or local time?\n The answer to this, like most things, is that it depends. The time onthe RTC can be configured to be set to whatever the system wants it tobe. Yet, storing it in UTC is the best choice as UTC doesn \u2019t changeregardless of time zones and daylight saving. Having the RTC storingthe local civil time means that it would need to be aware of all thecomplication that it implies, which most RTC clock won \u2019t. If in localtime,  ...\n So it\u2019s preferable to store the time of the RTC in UTC but some systemsstill choose to not adhere to this. For instance, when dual-booting,the other operating system may expect the RTC to contain local time andupdate it accordingly. That creates a discrepancy, and the RTC has noway to indicate if it is storing local time or UTC, hence the OShas to keep track of this information internally. This is the kind of scenario  ...\n On FreeBSD, this information is given via the  /etc/wall_cmos_clockfile: if the file exists it means that the hardware clock keeps localtime, otherwise the hardware clock is in UTC. On Linux, this information is passed to the kernel at boot time viathe  persistent_clock_is_local kernel parameter/stanza (see notes timekeeping.c). The RTC can also be queried and set in localtime orUTC via the  hwclock(8) options  --localtime  ...\n Hence, we have to keep those clocks in sync. The best way to do thisis to rely on the predictable inaccuracy/systematic drift/instrumentbias of the hardware clock. We can measure its drift rate, and applya correction factor in software.\n On Linux there are two tools to perform this,  hwclock(8) and adjtimex(8), while on FreeBSD there is  adjkerntz(8).\n hwclock(8), and its predecessor  clock(8), let you query, calculatedrift, and adjust the hardware clock and kernel/system clock in bothdirection. While with  clock(8) you had to calculate the drift manually, hwclock(8) does it automatically. It does it by keeping track, in an ASCII file called  /etc/adjtime, ofthe historical information, the records of how the clock drifts over time,and if the hardware clock is in  ...\n  # adjust drift of RTC&gt; hwclock --adjust# set RTC to the same time given by --date&gt; hwclock --set --date=&#39;19:30&#39;# set the RTC from system clock# and update the drift at the same time&gt; hwclock --systohc --update-drift\n Thus, it would be a good idea to call  hwclock(8) periodically in acron job to keep the hardware time in sync and calibrate the drift.\n On FreeBSD, the utility  adjkerntz(8) is used in a similar way but onlyfor local time RTC. It\u2019s called at system startup and shutdown with the -i option from the init system before any other daemon is startedand sets the kernel clock from the RTC, managing the DST and timezonerelated configuration.\n       We can specify if it\u2019s a clock that has issues with years above 1999(which I can\u2019t find in the man page on my machine though):\n  As for the  adjtimex(8) tool, on Linux, it doesn\u2019t actually changethe hardware clock at all but specializes in the nitty-gritty detailsof the system/kernel clock and its relation with hardware.\n It\u2019s especially useful for manually readjusting the system clock basedon the drift of the RTC and raw access to kernel settings related tosystem time.\n For instance, it can be used to change the speed of the system clock,telling it how much to add to time whenever it receives an interrupt. Forexample if the system clock ticks faster than it\u2019s supposed to be, itcould be made to tick slower or it could be made such that each tickrepresents a smaller value to add to the time, both options are possible. Those are done through the  --frequency and  --tickoptionsrespectively.  ...\n It can also be used to change the offset/drift, apply adjustment to thesystem time, and what affects the hardware clock.\n Interesting options are the  -c and  -a which keep comparing the systemtime and hardware clock time every 10s and print the ticks and frequencyoffsets, which can be useful for estimating the systematic drift andthen store it in  /etc/adjtime, which  -a actually does.\n  --- current --- -- suggested --cmos time system-cmos error_ppm tick freq tick freq1587136817 0.2772121587136827 0.278389 117.7 10000 -17010561587136837 0.279261 87.2 10000 -1701056 9998 56905191587136847 0.280304 104.3 10000 -1701056 9998 4571769\n So my system considers 10000 ticks to be equal to 10s, basically having1K ticks a second, but it\u2019s suggested that I use 9998 per 10s instead.\n Note also the  error_ppm, ppm (part per million), meaning that I\u2019vegotten a delta error of around 103 ticks per million that I need slewforward.\n  mode: 0 offset: -852985 frequency: -1701056 maxerror: 483000 esterror: 0 status: 8193time_constant: 7 precision: 1 tolerance: 32768000 tick: 10000 raw time: 1587136914s 254051439us = 1587136914.254051439\n  1 PLL updates enabled 2 PPS freq discipline enabled 4 PPS time discipline enabled 8 frequency-lock mode enabled 16 inserting leap second 32 deleting leap second 64 clock unsynchronized 128 holding frequency 256 PPS signal present 512 PPS signal jitter exceeded 1024 PPS signal wander exceeded 2048 PPS signal calibration error 4096 clock hardware fault 8192 Nanosecond resolution (0 is microsecon)16384  ...\n PPS standing for Pulse Per Second, PLL for Phase-lock loop,and FLL for Frequency-Locked Loop, which are different clockcircuitries/feedback-loop, discipline, and slewing techniques, basicallydifferent methods of looping for time adjusting frequency and ticks tomatch real one, which are affected differently by the environment andhave ups and downs.\n What we can deduce is that my clock with status  8193 has PLL updatesand a nanosecond precision.\n That means that if 1000 ticks make up a second, a tick happens everymillisecond. Can\u2019t we have more precise ticks, aren\u2019t I supposed to getnanosecond precision. But wouldn\u2019t that clog the CPU altogether, canwe get multiple timers too. We\u2019ll see that with high resolution clockslater on, for now, again, let\u2019s keep those questions and concepts in mind.\n An interesting line in the output of  adjtimex catches our attention,bit 6, or 64 in decimal, \u201cclock unsynchronized\u201d what does it mean. It\u2019ssimilar to the \u201cSystem clock synchronized: yes\u201d line of systemd\u2019s timedatectl output.\n An inspection of the Linux kernel source code let us know that there\u2019s amechanism in the kernel to automatically synchronize the hardware clockwith the system clock. It goes under the name of NTP \u201c11 minute mode\u201dbecause it adjusts it every 11 minutes.\n Many other Unix-like operating systems choose to do this, have the kernelbe the only program that syncs hardware time to system time. To not letother programs have to worry about all the drifting and calculation. Inthis case we don \u2019t need to create a cron job that adjusts the time,the kernel already does it for us. Sometimes however, the kernel won \u2019trecord the drift time anywhere while in  ...\n  On Linux, the only way to turn it off is to stop the NTP daemon (networktime protocol daemon, which we\u2019ll see in the next section), call anyprogram that sets the system clock from the hardware clock such as hwclock --hctosys or actually recompile the kernel without the relatedoption:  RTC_SYSTOHC.\n   Let\u2019s move to this high precision topic we\u2019ve kept in mind.\n So my system clock has nanosecond precision, are there ways to gethigher precision from my system clock, what does that mean from thetimer interrupt perspective. How much time should we spend on timerevents handling instead of executing programs. How are they implementedin the instruction set, do I have a choice of clocks, are there otherinstructions to call. How do I check all that?\n We said briefly that system time was kept track with using interruptsthat were generated at predefined time or at specific periodicintervals. Whenever they happen, the kernel needs to handletime-based events such as the scheduling of processes, statisticscalculation, time keeping (time of day), profiling, measurements,and more. Different machines have different kinds of timer devices that  ...\n  We could choose to actually rely on the RTC directly and not anythingelse. However, that comes with a cost because its quite slow, it ticksevery 0.5s to 0.1ms, to stay energy efficient. So let\u2019s leave the RTCfor boot time only and not timers.\n  The Time Stamp Counter is a 64 bit register called TSC present on allx86 processors since the Pentium. It\u2019s connected via a CLK input pinthat also drives the CPU clock and thus ticks as the same frequency. Forexample a 2GHz CPU will make this register tick every 0.5 nanosecond. TheTSC register can be queried by the  rdtsc, read tsc, instruction. It \u2019svery useful as it ticks along with  ...\n  The Programmable Interrupt Timer is also part of an instruction set. Theway it works is that it can be programmed to send global interruptsafter a certain time has elapsed, one-shot or periodically. It has a 16bit precision and variable frequency rates that can be configured.\n  Similar to PIT in such that it can issue one-shot or periodicinterrupts. Its size is 32 bits. And the interrupt it sent to the specificprocessor that requested it instead of globally (which PIT would do). Itsfrequency is based on the bus clock signal and can also be controlledbut less flexible than PIT.\n  ACPI Power Management Timer is part of the ACPI-based motherboards andhave quite a low frequency of 3.58MHz, ticking every 279ns. It isn\u2019tnearly as accurate as other timers but has the advantage that it isn\u2019taffected by change based on power-management. It should be used as alast resort system clock.\n  The High Precision Event Timer is a chip integrated into theSouthbridge. It provides multiple hardware timers, up to eight 32 or64 bit independent counters, each having their own clock signal and afrequency of at least 10MHz, 100ns. It is less precise than the TSC buthas the advantage that it is separated and has multiple clocks.\n It\u2019s always good to keep in mind that all those numbers about precisionare for the best case scenario and that we may have overheads. We stillhave to remember that, for example, when querying the TSC we have to firstissue the  rdtscpcommand which has to be interpreted. It doesn \u2019t meanthat we have a machine ticking at 0.5ns that we \u2019re going to be able tomeasure such intervals precisely.  ...\n On Linux you can check the features your CPU supports by consulting theflags in  /proc/cpuinfo.\n    Before checking for the availability of the hardware timers and what iscurrently set for what on your system, let\u2019s take a moment to understandwhere we can use these timers.\n There are in general 3 uses for the timers we\u2019ve seen: clock source,clock event, and clock scheduling.\n The clock source is the one that provides the basic timeline, it shouldbe a continuous, non-stop (ideally), monotonic, uniform timer that tellsyou where you are in time. It\u2019s used to provide the system time, the POSIXtime counter. When issuing  date this is what is going to be consulted. So the clock source should have a high resolution and the frequencyshould be as stable and  ...\n Clock events are the reverse of clock source, they take snapshotson the timeline and interrupts at certain point, providing a higherresolution. They could in theory use the same hardware as the clocksource but are not limited to it. They could use all the other hardwarethat are specialized in sending interrupts after a programmed time totrigger the events on the system timeline.  ...\n The clock scheduling is about how time affects the scheduling of processeson the system, what timeslice should be used to run processes and thenswitch to another one. This can possibly be the same counter as theclock source, however usually it needs smaller intervals as it has tobe very fast but doesn\u2019t have to be accurate.\n The clock source keeps time as a counter we refer to as jiffies. Jiffiesare used to keep the number of ticks that happened since the system hasbooted, it is incremented by 1 at each timer interrupt. The number ofticks/interrupts in a second is denoted by a constant defined at compiletime or in a kernel parameter called  HZ, for Hertz, it \u2019s named thisway in most Unix-like OS.  ...\n   However, it is deprecated and will always return 100 (10ms), regardlessof the precision. The actual value has to be set as a kernel parameter in CONFIG_HZ.\n  Nonetheless, it isn\u2019t such a good idea to go to higher precision  HZbecause if scheduling relies on jiffies it could affect performance.\n Now let\u2019s check how we can see which devices we support and changethe clocks.\n On Linux, there\u2019s not many options regarding anything other than the clocksource (system time). To check the ones available and the one currentlyin used you can rely on the  /sys/ filesystem.\n  The clock source can be changed while the system is running by echoingthe new clock to the same location:\n  For permanent changes you can recompile the kernel with different optionsor set the clock at boot by passing it as the  clocksource option tothe Linux kernel (kernel stanza) in grub or any other boot-manager.\n  Additionally you can enable or disable  hpet to be used as the basetime for events clock.\n As of today here are the relevant configurations and different clocksources for multiple CPU architectures:\n clocksource= Override the default clocksource Format: &lt;string&gt; Override the default clocksource and use the clocksource with the name specified. Some clocksource names to choose from, depending on the platform: [all] jiffies (this is the base, fallback clocksource) [ACPI] acpi_pm [ARM] imx_timer1,OSTS,netx_timer,mpu_timer2, pxa_timer,timer3,32k_counter,timer0_1  ...\n The process is quite similar on FreeBSD. By default it\u2019s aware of thetimer available on the system, it automatically ranks and chooses thebest possible ones.\n It has three timekeeping, one it calls  hardclock running at 1000HZ(1ms), which is the same as the clock source, one it calls  statclockused for statistics and scheduler events with a frequency of 128HZ,and a last one called  profclock which is a bit higher in precision,0.125ms. Those obviously can be tuned to preference.\n       The documentation about what the flag means can be found via themanpage  eventtimers(4), they are related to what the clock supports(periodic or not, per CPU or not). Those values can be changed in the /etc/sysctl.conf file or tunable via  sysctl on the command line.\n As with Linux, on FreeBSD hpet can be used for events if the driveris installed and enabled, it\u2019s part of the acpi. FreeBSD offers somebeautiful documentation about it in the  hpet(4) manpage, discussing theconfigurations too. For instance if it can be used to support event timersfunctionality, and tune how many timers on the hpet per CPU can be used.\n So now we should be all set, if we call POSIX functions part of  &lt;time.h&gt;such as  gettimeofday we can get the result in a structure that containsmicroseconds (0.001ms) if the precision allows it. And actually POSIX1003.1b requires nanosecond precision. There are also the POSIX  clock_gettime()family of functions, which letyou specify from which clock to get  ...\n There used to be a time when on Linux all the timers on the system werecoupled to the jiffies, it isn\u2019t the case today. We have a decoupledclock event subsystem that gets delegated and manages interrupts, and thesource device can be swapped without breaking everything. Linux alsoadded a kernel configuration called  CONFIG_HIGH_RES_TIMERSto allowhigh resolution  ...\n  On Linux, all the information about timers and their statistics ispropagated to user space in  /proc for advanced debugging.\n For instance,  /proc/timer_list, gets us a list of the currentlyconfigured clocks and running timers. We can use it to check theirprecisions:\n  HRTIMER_MAX_CLOCK_BASES: 2now at 294115539550 nsecscpu: 0 clock 0: .index: 0 .resolution: 1 nsecs .get_time: ktime_get_real .offset: 0 nsecsactive timers: clock 1: .index: 1 .resolution: 1 nsecs .get_time: ktime_get .offset: 0 nsecs[...] event_handler: hrtimer_interrupt\n We can see that the  .resolution is  1 nsecs and that the event_handler is  hrtimer_interrupt instead of  tick_handle_periodic,which would be for lower resolution timers.\n /proc/timer_stats is an advance debugging feature that can be enablevia the  CONFIG_TIMER_STATSkernel configuration and that let us gatherstatistics about all the timers on the system, you turn it on and offwhenever you want. It can tell us which routines in the kernel are usingthe timers an how frequently they are requesting them. The format isas follows:  ...\n     Before starting this section I\u2019d like to point out three ways that timecan be updated. One is called stepping and it consists of making one discontinuous changeto time, a sudden instant jump from one value to another that could bebackward or forward in time. This happens when something triggers thesystem time to go to a specific value, external sources  ...\n We also have to keep in mind the time it takes to fetch the value of timefrom a source: for it to be transmitted and interpreted by our system. Itwon \u2019t be an instant transfer and sometimes may take such a long time thatwe are forced to take it in consideration when doing our calculationsof adjustment. We call this the delay, the time it takes to do the  ...\n So why should we rely on an external source of time, why should we careabout having precise time.\n At human scale, on my watch I can rotate the hands of the clock a littleand adjust it to whatever someone else has. Nothing horrible is goingto happen because of it, right? The majority of people don\u2019t need precisionhigher than a couple of minutes. However, computers are different, you \u2019re not the one monitoring time,and their errors accumulate pretty  ...\n So who needs millisecond accuracy or more? Who has a need for precisetime? And precise time according to what. Haven\u2019t we said in the previoussection that our system clocks already have a pretty good calibrationmechanism in place. However, even with all the accuracy we can get, we \u2019re still going todrift, no matter what, and we still need to be aware  ...\n So what does accurate mean, do you need accuracy across your internalnetwork of machines, each not drifting too far away from the other eventhough not in sync with UTC. Or do you need them all to be in sync withUTC or your time zone. How much does the software you are running tolerate change in time. Doesit expect monotonic time, can it handle jumps,  ...\n   We have to add to this list all the machines with nasty system clocksthat drift in unexpected ways. Such machines are better off syncing withan external source.\n  If we don\u2019t want to worry about managing another daemon on our system\n  If the system doesn\u2019t have access neither to the internet nor to anyphysical external source of time.\n Now that we know if we need an external source of time or not, let\u2019ssee how to calculate how precise and stable these sources are.\n When using a clock as reference we want to make sure it\u2019s stable andprecise.\n A clock\u2019s frequency stability is rated and measured by its ppm or ppberror, part per million errors or part per billion errors. The \u201cpart\u201dcan be either the number of ticks or the number of seconds that aredrifting from the actual value (both can be used interchangeably). Thesmaller this ppm value is the more stable the clock is. The reasons why  ...\n  Let\u2019s take as an example an HPET clock with a frequency of 10MHz( 10_000_000Hz) in an environment between -40 to 80 degrees C. Add thefact that the clock manufacturer has specified that it has a stabilitythat varies between -7.5 and +7.5 ppm.\n For every 1 million ticks or 1 million seconds, there is a plus or minus7.5 variation. Over a whole day the clock would drift by 0.648 seconds.\n  Atomic clocks have tremendously small error variations, those can bebetween 0.0001 and 0.000001 ppb (part per billion). They are driftingby a second every ~300k to 30M years, which confirms what we\u2019ve exploredin the first section of this article.\n Temperature plays such a big role in the stability of our clock so tomake them more stable we could either lock our machines in a controlledtemperature environment or try to come up with a way to automaticallycompensate for how much the temperature is affecting the clock. While the first option is possible in data centers, it \u2019s not somethingthat  ...\n However, we could devise an experiment in which we find a formula thatcalculates how much the temperature affects the clock frequency and slewour clock appropriately. We could monitor the temperature, feed it, and use it to train thecorrection mechanism in whatever software or mean we use to handlesetting time. Which all comes up to gathering  ...\n Unfortunately, no solution is perfect and this could be overlyoptimistic. Correlation doesn \u2019t equate causation. Still, such mechanismare great to keep the clock stable within a certain temperaturerange. Some experiments have found that temperature compensation reducesdeviation by 3.5 times. Our earlier drift of 0.648s would be reduced  ...\n Let\u2019s now define some important terms we need in our inventory tounderstand everything that is coming next about external clocks.\n \u201cReference clock\u201d or \u201cordinary clock\u201d, this means any machine thatcan be used to retrieve accurate time, usually in UTC so that itcan be used by anyone. Those could range from cesium clock, to GPS,to terrestrial broadcast like radio clocks.\n The time from the reference clock will be forwarded from one server toanother until it reaches you. Thus the reliability of the network, andhow far you are from the it play a big role in how accurate the valuefrom the reference clock will be.\n We\u2019re using server that are connected to external time source and externaltime source themselves interchangeably here unless explicitly mentioned.\n \u201cDelay\u201d, a word we\u2019ve seen before that means the time it takes to doa round trip. It\u2019s normally calculated by timestamping on both endsand doing an estimate of the difference in transport and processing.\n  \u201cOffset\u201d or \u201cPhase\u201d, is the time difference/deviation between theclock on one end and the clock on another end, usually your clock and areference clock. Phase referring to the oscillation rhythm difference,as in \u201cout of phase\u201d.\n  \u201cJitter \u201dor \u201cDispersion \u201d, is the successive time values differenceafter subsequent requests from remote servers or action. It \u2019s a greatcriteria to measure the stability of the network, how much delaychanges, if it varies a lot the network isn \u2019t reliable. This term canbe used as a measure of stability of any other repeatable  ...\n  \u201cclockhopping\u201d, the spreading of time, jumping from one server toanother, which results in less and less accuracy.\n  \u201cFrequency error\u201d, this is how much the reference clock or our localclock drifts over time, measured in ppm and ppb, as we\u2019ve seen before.\n  \u201cStability\u201d, the generic term to refer to how much we can trust aclock. It\u2019s also a term used in control theory to refer to how far weare from a reaching a stable point (0).\n  \u201cAccuracy\u201d, also a generic term that means how far apart a machine\u2019stime is away from UTC. The typical accuracy on the internet rangesfrom about 5ms to 100ms, varying with network delays.\n  \u201cPPS\u201d, or \u201cPulse Per Second\u201d, a method of synchronizing two clocksbased on a tick that happens every second.\n  \u201cWatchdog timer\u201d, is a timer that keeps the time since the last pollor update of time from the external source of time.\n  \u201cFudge\u201d, I couldn\u2019t put my hand on the precise definition of this termother than that it refers to any special way in which you can configurean external clock.\n  \u201cMax Poll\u201d and \u201cMin Poll\u201d, throttling parameters which are the maximumand minimum number amount of time that should pass before the remoteserver allows you to query it again. This is usually expressed inpowers of 2, for example 6 means  2^6 or 64 seconds.\n  \u201cStiffness \u201dor \u201cUpdate Interval \u201dor \u201cTime Constant \u201d( \u03c4tau), how muchthe clock is allowed to change in a specified amount of time, andthe time between the updates. A small time constant (update interval)means a clock that is less stiff and slews quickly. It \u2019s usuallyexpressed like the max poll in powers of  ...\n When all those values differ a lot, we can\u2019t allow an abrupt jump oftime on our end, that would disrupt local processes. So what we do isslew time, but that would also mean having a slow calibration. In an ideal world, all the reference clocks would be the same everywhere,however they aren \u2019t. So what should we do if there \u2019s a big  ...\n First off, if the offset is too big we don\u2019t trust it until we have thesame offset from multiple time sources. If it\u2019s small enough we go on with our slewing. If the offset is still big, we have to set the clock anew, step it.\n However, on boot we have to sync from the hardware clock, like we\u2019veseen before, which might be off, so we have to either slew the systemtime which can take several hours or make the updates less stiff toquickly reduce the offset (in 5min usually with an less stiff PLL).\n Moreover, we can\u2019t also believe any remote server or machine as a timesource, so we ought to devise a mechanism, a sanity check, to filterwhich machines we trust and which ones we don\u2019t, maybe even combiningmultiple time sources in a quorum-like fashion. We can evaluate remote machines for how stable they are by making thempass  ...\n That also creates a trust issue on boot, so what can be done is to sendmultiple quick requests to multiple external time source servers toinsure their reliability and get an estimate within 10 seconds at boot.\n As time goes on, our system clock should become more stable and we shouldbe requesting the remote servers less frequently.\n This is possible through different feedback mechanisms that learn toadjust the system time appropriately. In a way, this is similar to themechanism that fixes the hardware clock drifting but for the systemclock which we haven\u2019t tackled before.\n Different Unix-like OS and software provide different means of adjustingthe system clock according to external time. There are 4 mechanismsor system calls that can be used to implement the adjustment of thesystem clock.\n The first method is through  settimeofday(2), which is used to jump to afixed place in time, to step it. This could be used for very big offsets.\n The second method is through  adjtime(2)which is used to slew thetime by changing the frequency of the clock. You pass a delta to thefunction and if this is positive the clock will be sped up until itgains that delta and if negative the clock will slow down until it haslost this delta. This is intended to be used to make small  ...\n The third method is through the  hardpps() function that is internal tothe kernel and handles an interrupt service that listens to a constantpulse that happens every second. The RFC 2783 defines how this APIshould behave, basically syncing the transition between pulses with thesystem clock.\n The fourth and last method is through the  ntp_adjtime(2) function,that is an advanced mechanism to discipline the system clock. It isdefined in RFC 1589 called \u201cA Kernel Model for Precision Timekeeping\u201d,also going under the name of \u201ckernel clock discipline\u201d. Initially createdas a better version of  adjtime(2)that can be  ...\n &gt; adjtimex -p mode: 0 offset: -7431812 frequency: -1677305 maxerror: 2000 esterror: 0 status: 8193time_constant: 7 precision: 1 tolerance: 32768000 tick: 10000 raw time: 1588007066s 608698606us = 1588007066.608698606\n &gt; ntptimentp_gettime() returns code 0 (OK) time e2518f79.db34a44c Mon, Apr 27 2020 20:06:01.856, (.856272195), maximum error 49500 us, estimated error 0 us, TAI offset 0ntp_adjtime() returns code 0 (OK) modes 0x0 (), offset -6172.114 us, frequency -25.594 ppm, interval 1 s, maximum error 49500 us, estimated error 0  ...\n Phase locked loop and frequency locked loops main difference is theirpredictor part that will output the value of their feedback loop. Theyboth take as input the timestamp and compare it with local time butwhat happens afterwards, how they change either the phase/offset or thefrequency depends on which one is chosen.  ...\n PLL is an offset discipline mode, its predictor is an integral of theoffset over past updates and outputs the offset amortized over timein order to avoid setting the clock backward. It adjusts it graduallyby small increments or decrements until the offset is gone. The timeconstant aka update interval is the rate at  ...\n FLL is a frequency based discipline mode, its predictor takes the offsetand divides it by the time since the last update and adjusts the clockfrequency such that at the next update the offset will be as small aspossible.\n In the most recent software, the two modes are used together andmixed. They are weighted according to the polling intervals, when itis bellow Allan intercepts, which is 2048s (this can be changed), thena phased-lock loop is used with more weight, and whenever the pollinginterval is higher, then a frequency-locked  ...\n When not fetching the time from another machine that is connected to areference clock but having it connected directly to us, we\u2019ll requiresome hardware driver to interface with it. These physical source of time can implement their own clock disciplinealgorithm and synchronization protocol and thus we have to adaptappropriately.  ...\n Before moving on to what those device could possibly be, let\u2019s have asmall note on leap second smearing.\n There are two main ways to handle a leap second, we could either step,that is stopping the clock completely for a second (repeating a second)or skipping an entire second, or we could either slew the clock usingthe smooth kernel discipline we\u2019ve seen. This is what leap smearing is about, it \u2019s a standard pushed by  ...\n However, keep in mind that such standard only has weight if everyoneadhere to it, otherwise during the leap second event multiple serverswill have different time and the dispersion will be bigger. That is whywe shouldn\u2019t mix smearing with non-smearing time servers.\n We\u2019ve said we could connect to physical precise time source to becomea reference clock, so what can those be? We\u2019ll give as example the twomost popular ones.\n In the first category we have terrestrial broadcasts, radio stationsthat broadcast time. The most well known are the CHU in Canada, WWV in Colorado, USA, and WWVHin Hawai, USA.\n CHU broadcasts at 3.33MHz, 7.85MHz, 14.67MHz since 1923, and WWVbroadcasts on 2.5MHz, 5MHz, 10MHz, 15MHz, and 20MHz since 1945. They bothget their time from other reliable sources such as atomic clocks and GPS.\n As they are radio broadcasts, you need a radio receiver and a way toanalyze the audio to be able to synchronize with them.\n What they broadcast is some repetitive beep to sync on pulse per secondand minute, some binary coded decimal, and literally someone talking fromtime to time to say in English, or French for the Canadian version, whattime it currently is in UTC hour and minute. So they alternate beeps,ticks, and voice announcements.  ...\n Furthermore, there are also telephone numbers that you can call to getthe time, similarly to the radio. One of them is provided by the sameorganization as the CHU, the NRC, National Research Council of Canada.\n In the second category we have GPS, the Global Positioning System. And let\u2019s be more explicit here, we\u2019re talking about the American NAVSTARGPS that is composed of multiple satellites at 20K km orbit,always having 4 satellites visible from any point on Earth.\n To sync time with a GPS you need a GPS receiver, some of those also comewith a pulse per second feature for accuracy sake. The receiver catchesthe civilian band frequency that the GPS continuously broadcasts anddecodes the signal to get the messages in it. This message containsa multitude of information  ...\n The GPS satellites include atomic clocks that are accurate to thenanosecond. However, we \u2019re loosing a bit of accuracy because of the delaybetween us and the satellite. So you \u2019d think that since they have atomicclocks they would follow TAI (International Atomic Time), however theyfollow their own special  ...\n The format time that GPS store and broadcast doesn \u2019t use theyear/month/day Gregorian calendar but express it as a week number anda seconds-into-week number. The week is a 10-bit field and thus rotatesevery 1024 weeks, which is approximately 19.6 years. The first rolloverhappened on August 21, 1999 and  ...\n This phenomena of week rollover has been deemed the \u201cY2K\u201d of GPS becausemany device drivers didn\u2019t anticipate it and had hard-coded the GPS epoch. A solution to this would be to derive the GPS epoch from the leapsecond data broadcasted by the GPS and a leap second table. Weirdly,a GPS vendor, has a patent  ...\n   A last nota-bene, your position is derived from how far you are, thedelay, from 3 satellites and calculating the intersection.\n To link this to the previous ideas, if you have a driver that supportsthose external clocks hardware device receiver, it should implement the ntp_adjtime(2) or a custom discipline to take care of adjusting timeitself. Be sure to check the list of drivers available for your solution.\n Let\u2019s proceed from the abstract talk to the concrete: which protocolsand standards can be used to implement time synchronization with externalsources of time.\n The most trivial protocol is the Time Protocol defined in rfc 868. It\u2019s asimple client-server protocol where the server when receiving a requestdirectly replies the time in seconds since midnight 1st 1900 GMT as a32 bit binary number. The protocol runs on UDP and TCP on port 37, as  /etc/servicesshows:  ...\n  Because it\u2019s based on a 32 bit value, it\u2019s going to rollover at some pointin 2036 which will deprecate it easily unless the value is upgraded to64 bits.\n While it\u2019s simple, it doesn\u2019t take into consideration leap seconds,delays, is only precise to the second, and disregards all the stuffsabout time we\u2019ve previously mentioned.\n  rdate - get the time via the networkrdate connects to an RFC 868 time server over a TCP/IP network, printingthe returned time and/or setting the system clock.\n The evolution of the time protocol is the Network Time Protocol, orNTP. It takes into consideration multiple things the other did notincluding: leap seconds, broadcasting mechanism, active/passive modes,security and digest, a hierarchical level of accuracy, polling mechanisms,more precision,  ...\n The current protocol stands at version 4, NTPv4, which is documentedin rfc 5905 but has additional addendum for extensions. It is backwardcompatible with its previous version, NTPv3, in rfc 1305.\n   The timestamps that NTP sends and receives rely on UTC time, the timezoneinformation is kept for local machines to decide. Additionally, NTPwarns of any impending leap second adjustment. Thus, in theory, all NTP servers should store the same UTC time up toa certain precision.\n When an NTP client is running we have to choose what to do with thehardware clock, do we sync it with system time. Many implementationseither save the drift to a file so that it can be used on the nextboot and/or rely on the kernel \u201c11 minute mode \u201dwe talked aboutearlier. Moreover, if a network  ...\n NTP uses a hierarchy, a semi-layered division, to classify clocks thatare available. It calls them strata.\n The stratum, singular, is a measure of the synchronization distance to areference clock. Remember a reference clock is an actual hardware thatcan be used to get precise time, like a GPS. The stratum is the numberof servers we need to pass through to reach such reference clock. Unlikejitter  ...\n The reference clock itself, the timekeeping device, is considered stratum0 and the closest servers connected to it are at stratum 1. Thus a serversynchronized to a stratum  n server will itself be considered stratum  n+1. The upper limit for stratum is 15, in theory, above this the dispersionmay  ...\n The stratum hierarchy helps in spreading the load and avoid cyclicalclock dependencies as it \u2019s now in the shape of a tree. That means asmall number of servers give time to a large number of clients, whichin turn could be servers to others. That implies low stratum servers,such as stratum  ...\n In addition, the NTP contains in its message a reference identifier, refId, which denotes which reference clock is used at stratum 0 on thispath. So you can know you\u2019re getting your time from which source.\n Let\u2019s also mention that NTP can be deployed locally, in a LAN. It\u2019spossible to create your own hierarchy by acquiring a timekeeping device,such as a GPS, to avoid network delays and get a better precision.\n NTP is not limited to the usual client/server architecture, it includeshorizontal peering mode and a broadcasting mechanism.\n Horizontal peering is when multiple servers are coupled together in agroup to synchronize time more accurately.\n The broadcasting mode works by having a server sends the time to abroadcast address and have clients listen for NTP packets sent to thataddress. This mode is useful for leap second propagation instead ofhaving it sent only when the client connects.\n On that note, on the day of a leap second event, the leap second couldbe propagated either from a configuration file, a reference clock, oranother NTP server. What then happens, how the leap second is applied,depends on the implementation. It could be a stop or skip mechanism ora  ...\n  In the early days of the NTP, the timestamp in the message used to havethe same issue as the Time Protocol, a single 32 bit value, thus havingrollover issue.\n NTPv4 now uses a 128-bit date format that is split into 2 main parts, oneis 64 bits for the seconds and the other 64 bits for fractional seconds. The seconds part is again split into two others, the most significant32 bits is the current era number (number of rollovers), and the  ...\n  0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |LI | VN |Mode | Stratum | Poll | Precision | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Root Delay | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ...\n As you can see NTP is much more advanced than the time protocol. Forexample, a minimal request would need the version and mode filled,client mode being 3, or 011 in binary. The usual unencrypted messagesare 90 bytes long (76 bytes at the IP layer). A broadcast happens every64  ...\n With such protocol, though requiring minimal bandwidth, but with aninsane amount of clients, there needs to be throttling system. Thepolling interval of a client depends on many factors, including itscurrent precision and the maximum and minimum polling interval allowedby the  ...\n NTP servers are viewed as a public utility of sorts and thus need helpfrom the public, especially the people that are knowledgeable and haveaccess to static public IP addresses. The pool of public NTP serversneeds to keep growing to serve the increase in clients.\n   But why rely on publicly available NTP servers instead of building ourown NTP server hierarchy on LAN, haven\u2019t we said this would offer moreprecision.\n Not only would it offer more precision because of the stability ofthe bandwidth and its network distance, it would also mean it \u2019s underour control and thus not throttled, thus more available. That wouldalso mean more security and trust as you could put the NTP server in  ...\n But let\u2019s say you want to deploy your own NTP server, what\u2019s availableout there for you to use, what are the implementations.\n The NTP reference implementation of the protocol, the canonical opensource implementation, is called ntpd. It has continuously been developedand maintained for over 25 years.\n It comes with sensible default configuration to fetch time from a poolof NTP servers on the internet. Most Unix-like distros have packages thatare easy to set up.\n What you can configure range from the location of the drift file tocontrol local clock, to the location of the leap second and how it \u2019sapplied, to the clock discipline related configurations like jitter rate,to security options, to log locations, and to hardware driver  ...\n The  ntpq utility allows to manage the NTP server, be it local orremote, and query its status and configurations. Similar to openssl,it has an interactive mode and a command line arguments mode. For instance, the  ntpq -p output is quite interesting.\n  remote refid st t when poll reach delay offset jitter==============================================================================*time-A.timefreq .ACTS. 1 u 152 1024 377 43.527 -11.093 3.982+clock.isc.org 127.0.0.1 2 u 230 1024 377 67.958 -7.729 0.071 time-a.nist.gov  ...\n It displays the server name in the first column along with its state, a + meaning it\u2019s a candidate server and  * meaning it\u2019s a peer. The refid column is the reference identifier we\u2019ve mentioned. The  stcolumn is the stratum level of the server. The  whencolumn shows thenumber  ...\n Another tool to test remote NTP servers is  ntpdate. It can be used toinitiate syncing local clock but when used with the  -d option it canquery an NTP server without changing system time.\n  &gt; ntpdate -d time-b.nist.gov30 Apr 19:04:27 ntpdate[72016]: ntpdate 4.2.8p14@1.3728-o Wed Mar 18 13:44:46 UTC 2020 (1)Looking for host time-b.nist.gov and service ntp129.6.15.29 reversed to time-b-g.nist.govhost found : time-b-g.nist.govtransmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)server  ...\n  There are many other implementations of NTP servers other than thecanonical ntpd. You can find multiple comparison tables online thatshow the differences between them. Here\u2019s a few things that often getmentioned:\n  The canonical implementation, ntpd, fully supports the specs as it\u2019sthe reference implementation, has been ported to the biggest number ofoperating systems, has the largest number of drivers, and is probablythe most stable.\n Chrony is another software that implements NTPv4. It has been writtenfrom scratch and is known to be well maintained and secure. Chrony \u2019s biggest selling point is that it works remarkably well inenvironments where the external time source isn \u2019t regularly available,a  ...\n systemd \u2019s timesyncd is a network time protocol daemon that implements anSNTP client, Simple Network Time Protocol, defined in RFC 4330. SNTP isa simplified version of NTP that uses the same network packet format butwith a different way to deal with synchronization.  ...\n The advantage of having the time synced using a service manager is that itcan be hooked to automatically start whenever the network is operational,whenever there\u2019s connectivity.\n   &gt; timedatectl status Local time: Thu 2020-04-30 19:26:56 EEST Universal time: Thu 2020-04-30 16:26:56 UTC RTC time: Thu 2020-04-30 16:26:56 Time zone: Asia/Beirut (EEST, +0300) System clock synchronized: no NTP service: inactive RTC in local TZ: no\n   &gt; timedatectl timesync-status Server: 162.159.200.1 (1.arch.pool.ntp.org)Poll interval: 34min 8s (min: 32s; max 34min 8s) Leap: normal Version: 4 Stratum: 3 Reference: A960804 Precision: 1us (-25) Root distance: 32.142ms (max: 5s) Offset: -9.034ms Delay:  ...\n The client configuration can be found in  /etc/systemd/timesyncd.confwith a format defined in the  timesyncd.conf(5) manpage and systemd-timesyncd.service.\n   clockspeed by D. J. Bernstein is an even simpler approach to SNTP thatuses the TSC register to adjust the ticking speed.\n Another protocol called Berkeley Algorithm works by polling the timefrom all the machines on a network and taking the average, all the othermachines then syncs with this time.\n Yet another interesting implementation is HTP, the HTTP Time protocol. HTPrelies on the Date header of HTTP, defined in the HTTP/1.1 RFC 2616. Ituses statistical analysis to arrive at the most accurate time possible. Soif you can access a webpage then  ...\n Hence, let\u2019s see what\u2019s up with security and NTP. We know that anythingthat is on the network should be secure and trusted.\n If, for example, an attacker effectuate a man-in-the-middle attack theywould be to be able to change the time source for your machine. Thesecurity implications would be that certificates and signatures thatshouldn \u2019t be trusted because they expired  ...\n That\u2019s one reason why browsers today show errors whenever the systemclock is out of sync.\n The NTP specifications have been there for so long that we\u2019ve hadplenty of years to find security issues and fix them, the referenceimplementation being the testing ground for them. The codebase isconstantly audited. For example, the first version  ...\n There has been a move by the IETF to create this encryption overlaycalled Network Time Security (NTS). CloudFlare currently implements itbut not many others.\n Another project called NTPSec forks the ntpd source, tries to removecomplexity and clean the code. Finding vulnerabilities in it.\n Audits are important, as we\u2019ve said, Chrony came out as the most securebetween multiple NTP implementations.\n  A 2017 security audit of three NTP implementations, conducted on behalfof the Linux Foundation \u2019s Core Infrastructure Initiative, by the securityfirm Cure53 suggested that both NTP reference implementation and NTPsecwere more problematic than  ...\n On the other hand, there are other types of things we need to careabout. We \u2019ve discussed the polling issues and the lack of public NTPservers in the pool, and so it \u2019s important for them to be able towithstand heavy loads. One attack relies  ...\n Another security issue related to how much we rely on NTP as a publicservice, is about how some IoT devices have been found to hard-code theaddress of NTP servers. These kinds of assumptions are dangerous.\n The last thing I want to address in this section is another protocolfor syncing system time with an external time source called PTP, thePrecision Time Protocol.\n PTP is used for when NTP doesn \u2019t provide enough precision, for criticalmeasurement and control systems such as financial transactions or mobilephone tower transmissions. It is specially crafted for the local networkscenario where you have  ...\n PTP was originally defined by the IEEE in 2002 in the IEEE 1588-2002standard, officially entitled \u201cStandard for a Precision ClockSynchronization Protocol for Networked Measurement and Control Systems \u201d,then reviewed in IEEE 1588-2008, PTPv2,  ...\n PTP is similar to NTP in the way that it synchronizes time betweenmachines but the difference is that it adds accurate network latencyinformation using hardware timestamping. Hardware assisted timestamp is done at the very lowest levels of  ...\n  It uses the same epoch as the Unix time however, while Unix time is basedon UTC and is subject to leap seconds, PTP is based on the InternationalAtomic Time (TAI).\n An ordinary clock, in NTP parlance a reference clock, is the source oftime in PTP that distributes it to a grandmaster, which can then againrelay it to boundary clocks that others sync with. It is an architecturethat is integrated with  ...\n Within a group the system is automatically able to decide on who to electas a master clock, which is the clock which is deemed the most accurate.\n Let\u2019s end by saying that when push comes to shove, you can always buya machine that comes with everything integrated instead of setting itup yourself.\n In the next section we\u2019ll see systems that rely on precise time inspecial ways.\n   We\u2019ve hinted and mentioned some examples of what could happen if thereis misbehavior in system time. What else could happen.\n We rely on system time for anything related to communication with otherhumans, it creates the context of what is happening. It is also usefulfor sampling, data collecting for statistical analysis.\n With an out-of-whack system time, logs will be out of synchronizationand events will be hard to debug. It will be hard to correlate thingswith real life. Database queries that rely on the  now()to get the current time anddate will  ...\n Apart from the human perception issues there are the countless overflowsand rollovers we \u2019ve mentioned. All of them being issues related to thesize of the data structure that isn \u2019t enough to store what is needed, leadingto either  ...\n There are the problems related to time zones and daylight savingevents. Those can happen during the transition when computers repeat anevent for one more hour or one hour less than the expected duration. Thisis tricky when those  ...\n To resolve most of those it\u2019s better not to use time zones and DST inthese cases but to rely on UTC and leave civil time for display only. Butas you know, there\u2019s still the issue of leap seconds.\n Some domains need more synchronization than others, let\u2019s discussdistributed systems and real-time operating systems as examples.\n A distributed computer system consists of multiple software pieces runningon different computers but that still try to act as a single system.\n In a distributed system, it is important to keep clock synchronization,to ensure all the computers have the same notion of time so that theexecution runs on the same timeline. What we truly care about is event ordering, to know  ...\n In general there are two ways to keep things in order, you either use wallclocks, which are all the timekeeping devices we \u2019ve been mentioning thusfar, or you use logical clocks which are simple monotonous counters allgoing  ...\n The complication in distributed systems is that system clocks ondifferent machines will eventually drift and so it\u2019s hard to keep a strictordering. That\u2019s not what\u2019s expected of a consistent monotonic clock. That is why logical  ...\n However, Logical clocks are not always an option. Another one could beto have a strong coordinator for timestamp in the middle where messagesalways pass through it. But that solution adds a bottleneck to the architectureand  ...\n In distributed systems, virtual machines are often used, so a way tokeep them in sync is to sync them with their host.\n The other domain to explore is real-time operating systems, systems thatare mission critical and require accuracy.\n Real-time OS, aka RTOS, are similar to general-purpose OS (GPOS) inthat they are responsible to managing computer resources and hostingapplications, but they differ in the way they are made to have precisetiming and high  ...\n RTOSs are deterministic by design, they are made to meet deadlinesassociated with external events, they are made to be responsive. Its jitters, the measure of error in the timing of subsequent tasks,should be extremely  ...\n Depending on the type of events it can guarantee, real-time OS areseparated into two categories. If it is mandatory that it should betruly deterministic and that a not adhering means a system failure, wecategorize it  ...\n So programs running on real-time OS should run with consistent timing,but we don \u2019t stop at this, programmers should have full control on howthese tasks are prioritized and be able to check for deadlines. Theyshould  ...\n The priority given to task are a parameter that is part of the schedulingalgorithm an OS uses to choose which task should run next. It schedulestasks based on interrupts. The time to handle this interrupt routine  ...\n The scheduling is strict, no low priority task can run before a highpriority one. Real-time OSs use rate monotonic, earlier deadline first,preemptive scheduling algorithms while general-purpose OSs use completelyfair  ...\n There are many examples of real-time OS such as VxWorks, QNX, RtLinux,FreeRTOS, RiotOS, and more. Some are open source, some are POSIXcompliants, some are hard real-time, some are soft real-time.\n On Linux specifically, to enable real-time you have to enable the PREEMPT_RT scheduling patch. Though it\u2019s arguably soft real-time as it\u2019snot mathematically provable real-time.\n Another real-time Linux related project is the ELISA project, the EnablingLinux in Safety Application project, which aims at creating a standardto build mission critical Linux systems.\n  Founding members of ELISA include Arm, BMW Car IT GmbH, KUKA, Linutronix,and Toyota. To be trusted, safety-critical systems must meet functionalsafety objectives for the overall safety of the system, including  ...\n   For machines time may need accuracy but for humans it is definitelysubjective. We feel time as our emotions are swayed by life. Thiscertainly matters.\n We possess clocks within us, biological clocks in which sun time andmemories play an integral part in.\n For example in emergencies and dangerous situations, time seems toslow down. And as we grow older we perceive time to move faster. It\u2019sinteresting to see time from a human perspective.\n We live in such an interconnected world that greeting people inthe morning on the internet has lead to the  Universal GreetingTime. Time inthis interconnected world has also lead to marketingcampaigns and  ...\n I\u2019ve written in depth about \u201cinternet time perception\u201d in  this otherarticle.\n I hope this colossal article has cleared the topic of time, and time onUnix. It may not be as concise and scientifically true in some placesbut still convey an approximate overview to readers. Please reachout  ...\n                       If you want to have a more in depth discussion I&#39;m always available by  email or irc.We can discuss and argue about what you like and dislike, about new ideas to consider, opinions, etc.. If you don&#39;t  ...", "posttime": "2020-05-02 21:19:44", "tags": "unix,\u65f6\u95f4", "title": "Unix\u4e0a\u7684\u65f6\u95f4", "title_en": "Time on Unix", "transed": 1, "url": "https://venam.nixers.net/blog/unix/2020/05/02/time-on-unix.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["unix", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "ef3c4f5d6860c14256741f3887554c69.jpg", "infoid": 1000341, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f\u8bf4\u660e\u5982\u4f55\u81ea\u5df1\u5236\u4f5c\u7684\u8bf4\u660e\u4e66\u3002\uff1a)\u73a9\u5f97\u5f00\u5fc3\uff0c\u8bf7\u628a\u4f60\u7528\u5b83\u505a\u4ec0\u4e48\u7684\u622a\u56fe\u53d1\u7ed9\u6211\uff01\uff1a)\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500\u3002\n\u8ba9\u6211\u77e5\u9053\u4e00\u672c\u8bf4\u660e\u4e66\u662f\u5426\u6709\u7528\uff0c\u5982\u679c\u6709\u7528\uff0c\u6211\u4f1a\u9a6c\u4e0a\u505a\u4e00\u672c\u3002\n\u8fd9\u5c31\u662f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u7531\u6765--\u5982\u4f55\u83b7\u5f97\u66f4\u597d\u7684\u5728\u7ebf\u4fee\u8865\u4f53\u9a8c\u3002\u5982\u679c\u4f60\u4eec\u5236\u4f5c\u5e76\u8bd5\u7528\u4e86\u5b83\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\u5e76\u63d0\u4f9b\u53cd\u9988\uff01\u6211\u660e\u5929\u8981\u505a\u4e00\u672c\u96be\u6559\u7684\u4e66\u2026\u2026\u3002\n\u5bf9\u8bdd\u7ed3\u675f\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500", "note_en": "And here&#39;s the instructable that shows how to make one yourself. :) Have fun and please send me screengrabs of what you do with it! :)\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500\n  Let me know if an instructable would be useful, and if so I&#39;ll whip one up.\n  That&#39;s the idea this grew out of - how to enable better online tinkering experiences. If you guys make and try it out, please be in touch to give feedback! I&#39;ll whip up an instructable tomorrow...\n  \u5bf9\u8bdd\u7ed3\u675f\n      \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500", "posttime": "2020-05-02 21:19:26", "tags": "\u89c6\u9891,mirror,\u6709\u7528,instructable", "title": "\u7528\u4e8e\u89c6\u9891\u901a\u8bdd\u7684\u4fa7\u89c6\u955c", "title_en": "Sideview Mirror for Videocalls", "transed": 1, "url": "https://twitter.com/AmosLightnin/status/1255511707960647684", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u89c6\u9891", "mirror", "\u6709\u7528"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000340, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "+((\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[]+[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]-(\uff01\uff01[]))+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(+\uff01\uff01[]))/+((\uff01+[]+(\uff01\uff01[])-\u3002[]+[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[]\u3002+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])-[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(+\uff01\uff01[]))", "note_en": "+((!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![]+[])+(!+[]+(!![])+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]-(!![]))+(!+[]+(!![])+!![]+!![])+(+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![])+(+!![]))/+((!+[]+(!![])-[]+[])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![])+(!+[]+(!![])-[])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![])+(+!![]))", "posttime": "2020-05-02 21:19:23", "tags": "\u7532\u9aa8\u6587,oracle,faces", "title": "\u7532\u9aa8\u6587\u9762\u4e344000\u591a\u540d\u5973\u6027\u7684\u4e0d\u5e73\u7b49\u85aa\u916c\u7d22\u8d54", "title_en": "Oracle faces claims of unequal pay from over 4k women", "transed": 1, "url": "https://www.theregister.co.uk/2020/05/02/oracle_pay_discrimination_lawsuit_gets/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7532\u9aa8\u6587", "oracle", "faces"]}, {"category": "", "categoryclass": "", "imagename": "d1a9b44493c2c0d1728e0f6150421d66.png", "infoid": 1000339, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5199\u4f5c\u3001\u8ba1\u5212\u3001\u534f\u4f5c\u548c\u7ec4\u7ec7\u3002\u7406\u5ff5\u5c31\u662f\u4f60\u6240\u9700\u8981\u7684\u4e00\u5207--\u5728\u4e00\u4e2a\u5de5\u5177\u91cc\u3002\u201c\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u5305\u542b\u4e86\u6211\u5bf9Concept\u7684\u89c2\u5bdf\uff0c\u5b83\u662f\u65e0\u4ee3\u7801\u7684\u62e5\u62a4\u8005\uff0c\u6b63\u5728\u541e\u566c\u751f\u4ea7\u529b\u5de5\u5177\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6982\u5ff5\uff0c\u6216\u8005\u4ee5\u524d\u6ca1\u6709\u7528\u8fc7\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6587\u7ae0\u53ef\u80fd\u4e0d\u9002\u5408\u4f60\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u5bb6\u5728diesdas.digital\u5de5\u4f5c\u7684\u516c\u53f8\uff0c\u6211\u4eec\u70ed\u7231\u89c2\u5ff5\uff0c\u800c\u4e14\u4e00\u76f4\u5728\u5e7f\u6cdb\u4f7f\u7528\u5b83\uff0c\u4ee5\u81f3\u4e8e\u5b83\u8ba9\u6211\u4eec\u4ee5\u524d\u4f7f\u7528\u7684\u5927\u591a\u6570\u5176\u4ed6\u5de5\u5177\u53d8\u5f97\u591a\u4f59-\u5b83\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6211\u4e0d\u77e5\u9053\u5982\u679c\u6ca1\u6709\u5b83\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8fd0\u8425\u516c\u53f8\u3002\u6240\u4ee5\u8fd9\u4e2a\u5e16\u5b50\u975e\u5e38\u2026\u3002\nConcept\u662f\u4e00\u79cd\u5143\u5de5\u5177\uff1a\u4e00\u79cd\u6784\u5efa\u5de5\u5177\u7684\u5de5\u5177\uff0c\u5b83\u7684\u53ef\u5ef6\u5c55\u6027\u5982\u6b64\u4e4b\u5f3a\uff0c\u4f7f\u5f97\u53d1\u660e\u60a8\u81ea\u5df1\u7684\u5de5\u4f5c\u6d41\u53d8\u5f97\u5982\u6b64\u5bb9\u6613\uff0c\u4ee5\u81f3\u4e8e\u60a8\u4e0d\u7981\u60ca\u53f9\u4e0d\u5df2\uff1a\u5141\u8bb8\u4eba\u4eec\u5728\u4e0d\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u6570\u636e\u5e93\u548c\u5173\u7cfb\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6210\u5c31\u3002\u5b83\u8fd8\u64c5\u957f\u5a92\u4f53\u5bc6\u96c6\u7684\u7a7a\u767d\u9875\u9762\u534f\u4f5c\u73af\u5883--\u5b83\u5728\u8fd9\u65b9\u9762\u6bd4\u8c37\u6b4c\u6587\u6863(Google Docs)\u5f3a\uff0c\u6bd4Dropbox Paper\u597d\uff0c\u6bd4\u4efb\u4f55\u7ef4\u57fa(Wiki)\u90fd\u597d\u3002\n\u4e00\u5f00\u59cb\u5c31\u662f\u9633\u5149\u548c\u5f69\u8679\uff1a\u4f60\u53ea\u9700\u8981\u51e0\u9875\u7eb8\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\uff1b\u8fd9\u91cc\u662f\u4f1a\u8bae\u7b14\u8bb0\uff0c\u90a3\u91cc\u662f\u5f85\u529e\u4e8b\u9879\u6e05\u5355\uff0c\u90a3\u91cc\u662f\u7279\u96f7\u6d1b\u5f0f\u7684\u9ed1\u677f\uff1b\u592a\u68d2\u4e86\uff0c\u6700\u540e\u4f60\u6240\u6709\u79fb\u52a8\u7684\u6570\u636e\u76ee\u6807\u90fd\u6c47\u805a\u5230\u4e86\u4e00\u4e2a\u5730\u65b9\uff01\u7136\u540e\uff0c\u60a8\u5f00\u59cb\u5c06\u66f4\u591a\u7684\u4e1c\u897f\u653e\u5728\u4e00\u8d77\uff1a\u60a8\u53d1\u73b0\u4e86\u81ea\u5b9a\u4e49\u89c6\u56fe\u3001\u5173\u7cfb\u548c\u6570\u636e\u5e93\u3002\u8111\u7b4b\u6025\u8f6c\u5f2f\uff0c\u6240\u6709\u7684\u53ef\u80fd\u6027\uff01\u4e00\u591c\u4e4b\u95f4\uff0c\u6982\u5ff5\u6210\u4e3a\u60a8\u516c\u53f8\u7684\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3001\u9879\u76ee\u6587\u6863\u5de5\u5177\u3001\u5185\u90e8\u7ef4\u57fa\u5de5\u5177\u3001\u9500\u552e\u7ebf\u7d22\u8ddf\u8e2a\u5de5\u5177\u3001CRM\u5de5\u5177\u2026\u2026\u3002\n\u5bf9\u4e0d\u8d77\uff0c\u6211\u9700\u8981\u4f11\u606f\u4e00\u4e0b\uff0c\u2026\u3002\u56e0\u4e3a\u4f60\u5de8\u5927\u7684\u7075\u6d3b\u6027\u4e5f\u662f\u4f60\u6700\u5927\u7684\u5f31\u70b9\u3002\n\u9996\u5148\uff1a\u901a\u77e5\u6ca1\u6709\u8ddf\u4e0a\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u5728\u6982\u5ff5\u4e0a\u6784\u5efa\u4e86\u5927\u91cf\u4e0d\u540c\u7684\u5de5\u5177\uff0c\u90a3\u4e48\u901a\u77e5\u5c31\u4e0d\u518d\u6709\u7528\u4e86\uff0c\u2026\u3002\u4f60\u4f1a\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0a\u9762\u5217\u51fa\u4e86\u6240\u6709\u65b9\u9762\u768486\u9879\u66f4\u6539\uff1b\u5b83\u4eec\u6ca1\u6709\u6761\u7406\uff0c\u4e5f\u4e0d\u50cf\u5355\u72ec\u7684\u5e94\u7528\u7a0b\u5e8f\u90a3\u6837\u4e0e\u601d\u7ef4\u6876\u76f8\u5bf9\u5e94\u3002\u60a8\u7684CRM\u901a\u77e5\u7a81\u7136\u4e0e\u60a8\u5f53\u524d\u7684\u4ea7\u54c1\u5f00\u53d1Sprint\u66f4\u65b0\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u4ed6\u4eec\u600e\u4e48\u4f1a\u5206\u5f00\u5462\uff1f\u6982\u5ff5\u4e0d\u77e5\u9053\u5b83\u5728\u50a8\u5b58\u4ec0\u4e48\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u624b\u6bb5\u548c\u76ee\u7684\u2026\u2026\u3002\n\u6211\u4ece\u672a\u60f3\u8fc7\u6211\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u4f46\u6211\u6000\u5ff5\u6536\u5230JIRA\u901a\u77e5\u7684\u65f6\u5019\uff0c\u56fe\u6807\u7684\u989c\u8272\u3001\u683c\u5f0f\u548c\u63aa\u8f9e\u4f1a\u7acb\u5373\u51c6\u786e\u5730\u544a\u8bc9\u6211\u5b83\u7684\u4e0a\u4e0b\u6587\u548c\u5185\u5bb9\u3002\n\u867d\u7136\u8fd9\u4e2a\u6982\u5ff5\u53ef\u4ee5\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684\u7528\u4f8b\uff0c\u8fd9\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u7279\u522b\u64c5\u957f\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u5b83\u6ca1\u6709\u5f15\u8d77\u8ba8\u8bba\uff0c\u56e0\u4e3a\u5b83\u7684\u8bc4\u8bba\u5f88\u5c0f\uff0c\u800c\u4e14\u5f88\u9690\u853d\u3002\u4f60\u4e5f\u4e0d\u80fd\u5f15\u8d77\u4eba\u4eec\u5bf9\u5361\u7247/\u9875\u9762\u7684\u67d0\u4e9b\u5c5e\u6027\u7684\u6ce8\u610f\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5143\u6570\u636e\u90fd\u53d8\u6210\u4e86\u4e00\u4e2a\u5f88\u957f\u7684\u5c5e\u6027\u5217\u8868\u3002\u5982\u679c\u4f60\u6709\u610f\u4e3a\u4e00\u4e2a\u7528\u4f8b\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u5177\uff0c\u4f60\u5e94\u8be5\u5f3a\u8c03\u5e38\u89c1/\u91cd\u8981\u7684\u529f\u80fd\uff0c\u800c\u9690\u85cf\u66f4\u591a\u6a21\u7cca\u7684\u529f\u80fd\u3002\u5728\u89c2\u5ff5\u4e0a\u4e00\u5207\u90fd\u662f\u4e00\u6837\u7684\uff0c..\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5de5\u5177(\u4f8b\u5982\u9879\u76ee\u5f85\u529e\u4e8b\u9879)\uff0cConcept\u6839\u672c\u6ca1\u6709\u4e3a\u8be5\u4efb\u52a1\u8bbe\u8ba1\u5f97\u5f88\u597d\u3002\u7531\u4e8e\u5b83\u7684\u5f3a\u5236\u901a\u7528\u6027\uff0c\u5b83\u51e0\u4e4e\u4e0d\u662f\u8bbe\u8ba1\u51fa\u6765\u7684\u3002\u4e00\u5207\u90fd\u662f\u59a5\u534f\u3002\u4e00\u5207\u90fd\u53d8\u6210\u4e86\u5b83\u7684\u6700\u4f4e\u516c\u5206\u6bcd\u3002\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u662f\u6709\u76ee\u7684\u7684\uff0c\u4e5f\u4e0d\u5bb9\u6613\u5728\u89c6\u89c9\u4e0a\u8fdb\u884c\u626b\u63cf\u3002\u901a\u7528\u5316\u8feb\u4f7f\u4e07\u4e8b\u4e07\u7269\u90fd\u91c7\u7528\u901a\u7528\u5316\u8bbe\u8ba1\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u6700\u5927\u7684\u62b1\u6028\u662f\u5de5\u5177\u5e94\u8be5\u662f\u8fbe\u5230\u76ee\u7684\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6210\u4e3a\u969c\u788d-\u4f46\u6709\u4e86\u6982\u5ff5\uff0c\u6784\u5efa\u5de5\u5177\u672c\u8eab\u5f80\u5f80\u5c31\u6210\u4e86\u76ee\u7684\u3002\n\u592a\u591a\u65f6\u5019\uff0c\u4eba\u4eec\u65e0\u6cd5\u5904\u7406\u5f3a\u5927\u7684\u6982\u5ff5\u8d4b\u4e88\u4ed6\u4eec\u7684\u80fd\u529b\uff1a\u4ed6\u4eec\u7ecf\u5e38\u4e3a\u4e00\u4e2a\u95ee\u9898\u6784\u5efa\u6700\u590d\u6742\u3001\u6700\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u8ba9\u4ed6\u4eec\u770b\u8d77\u6765\u5f88\u806a\u660e\u3002\u56ed\u827a\u610f\u5ff5\u677f\u672c\u8eab\u5c31\u6210\u4e86\u4e00\u9879\u6d3b\u52a8\u2026\u3002\u6982\u5ff5\u4e0d\u4f1a\u59a8\u788d\u4f60\uff0c\u5b83\u7684\u5ef6\u5c55\u6027\u603b\u662f\u4f1a\u8ba9\u4f60\u8fdb\u4e00\u6b65\u8c03\u6574\u4f60\u7684\u7535\u8def\u677f\uff0c\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5c5e\u6027\uff0c\u8fde\u63a5\u53e6\u4e00\u4e2a\u5173\u7cfb\uff0c\u6dfb\u52a0\u53e6\u4e00\u4e2a\u89c6\u56fe\uff0c\u68c0\u67e5\u4f60\u7684\u7535\u8def\u677f\u5e76\u5b8c\u6210\u6240\u6709\u5361\u4e0a\u7684\u6570\u636e\u3002\u5b83\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u6c38\u6052\u7684..\u3002\n\u4f46\u522b\u641e\u9519\u4e86\uff1a\u6240\u6709\u8fd9\u4e9b\u5fd9\u788c\u7684\u5de5\u4f5c\u90fd\u6ca1\u6709\u4ec0\u4e48\u4ef7\u503c\u3002\u5f53\u7136\uff0c\u66f4\u597d\u7684\u5de5\u5177\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u4ece\u7406\u5ff5\u4e0a\u8bb2\uff0c\u4f60\u901a\u5e38\u5f88\u65e9\u5c31\u8fbe\u5230\u4e86\u201c90%\u201d\u7684\u6c34\u5e73--\u4f46\u8fd9\u4e0d\u662f\u4eba\u4eec\u505c\u4e0b\u6765\u7684\u65f6\u5019\u3002\u4eba\u4eec\u9676\u9189\u4e8e\u6536\u76ca\u9012\u51cf\u7684\u6d3b\u52a8\uff0c\u4f7f\u4e00\u5207\u53d8\u5f97\u4e0d\u5fc5\u8981\u5730\u590d\u6742\u3002\u4e00\u5f20\u684c\u5b50\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff0c\u4e00\u5f20\u7eb8\u677f\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff0c\u4e00\u9875\u7eb8\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff1f\u597d\u7684!\u3002\n\u5927\u591a\u6570\u65f6\u5019\uff0c\u4e00\u4e2a\u5e73\u51e1\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u5c31\u53ef\u4ee5\u4e86\u3002\u4e5f\u8bb8\u53ef\u4ee5\u5217\u4e2a\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u3002\u4e5f\u8bb8\u53ef\u4ee5\u628a\u90a3\u4e9b\u5f85\u529e\u4e8b\u9879\u52a0\u5230\u65e5\u5386\u4e0a\u3002\u4f46\u90a3\u4e0d\u4f1a\u8ba9\u4f60\u770b\u8d77\u6765\u5f88\u806a\u660e\uff0c\u4e0d\u662f\u5417\uff1f\u5177\u67095\u4e2a\u89c6\u56fe\u30013\u4e2a\u4e0e\u5176\u4ed6\u6570\u636e\u5e93\u7684\u5173\u7cfb\u548c\u6bcf\u5f20\u536120\u4e2a\u5c5e\u6027\u7684\u6982\u5ff5\u677f\u6267\u884c\u2026\u3002\u8fd9\u8868\u660e\u4f60\u771f\u7684\u8003\u8651\u5230\u4e86\u6240\u6709\u7684\u8fb9\u7f18\u60c5\u51b5\uff01\u505a\u5f97\u597d!\u3002\n\u5728\u8fd9\u4e2a\u5fd9\u788c\u7684\u2026\u4e0a\u82b1\u8d39\u7684\u521d\u59cb\u65f6\u95f4\u4e0d\u4ec5\u6d6a\u8d39\u4e86\u3002\u60a8\u6700\u7ec8\u5f97\u5230\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u4e00\u672c\u624b\u518c\u6765\u7406\u89e3\u548c\u4f7f\u7528\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u73a9\u7b11\uff0c\u6211\u4eec\u786e\u5b9e\u7ecf\u5386\u8fc7\uff1a\u6211\u4eec\u770b\u5230\u4e86\u65e0\u6570\u7684Slake\u6d88\u606f\uff0c\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\u677f\u3002\u8fd9\u79cd\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u4f1a\u964d\u4f4e\u4ee5\u540e\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u7684\u6bcf\u4e2a\u4eba\u7684\u901f\u5ea6\u3002\n\u73b0\u5728\u2026\u3002\u5f53\u7136\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u662f\u89c2\u5ff5\u7684\u9519--\u5f53\u7136\uff0c\u5b83\u662f\u53ef\u4ee5\u5229\u7528\u7684\u3002", "note_en": "\u201cWrite, plan, collaborate, and get organized.  Notion is all you need \u2014 in one tool.\u201d\n This post contains my observations on Notion, the no-code champion that\u2019s eating up the productivity tool space. If you don\u2019t know what Notion is or haven\u2019t used it before, then this post is probably not for you. I should mention that as a company at  diesdas.digital, we love Notion and have been using it so extensively that it has made most other tools we previously used redundant \u2014it \u2019s become our operating system and I don \u2019t know how we would run the company without it. So this post is very much  ...\n Notion is a meta-tool: a tool to build tools and it\u2019s so malleable and makes inventing your own workflows so easy, you can\u2019t help, but marvel at it: It\u2019s an incredibly impressive achievement to allow people to build databases and relations without writing any code. It also excels at the media-heavy blank-page collaboration environment \u2014 it\u2019s better at that than Google Docs, it\u2019s better than Dropbox Paper, it\u2019s better than any wiki.\n   It \u2019s all sunshine and rainbows at the start: You get going with a few pages; meeting notes here, a to do list there, a trello-esque board over there; it \u2019s fantastic, finally all your moving data targets converge in one place! Then you start putting more things together: You discover custom views, relations, databases. Mind blown, all the possibilities! Over night Notion becomes your company \u2019s project management tool, project documentation tool, internal wiki tool, lead tracking tool, CRM tool,  ...\n Sorry Notion, but I need a break \u2026 because your immense flexibility is also your biggest weakness.\n  First of all: Notifications don\u2019t keep up. It you\u2019ve built a ton of different tools in Notion, then notifications simply aren\u2019t useful anymore \u2026 you receive emails that list 86 changes all across the board(s); they are not organized and they don\u2019t correspond to mental buckets, like separate apps would. Your CRM notifications are suddenly bundled with your current product development sprint updates. And how could they be separate? Notion doesn\u2019t know  what it is storing, for all means and purposes  ...\n I never thought I\u2019d say this, but I miss the times of receiving a JIRA notification and the icon\u2019s color, the formatting and the phrasing tell me immediately and exactly its context and what it is about.\n  And while it \u2019s impressive that Notion can handle all of these different use cases, it \u2019s not particularly good at any of them. It doesn \u2019t invite discussion because its comments are tiny and hidden. You also can \u2019t call attention to certain properties of a card/page because all meta-data becomes one long list of properties. If you were purposefully designing a tool for one use case, you \u2019d emphasize common/important functionality and hide more obscure features. In Notion everything is the same,  ...\n Judged as a standalone tool, e.g. a project backlog, Notion is simply not well designed for that task. It\u2019s almost undesigned due to its forced genericness. Everything is a compromise. Everything becomes its lowest common denominator. Nothing has purpose or is easy to scan visually. Being generic forces generic design onto everything.\n  By far the biggest gripe I have is that a tool should be a means to an end and get out of the way\u2014but with Notion building the tool often becomes the end in itself.\n Too often people can \u2019t handle the great power Notion gives them: they frequently build the most sophisticated, most complex solution for a problem because that makes them look smart. Gardening Notion boards becomes an activity in itself \u2026Notion doesn \u2019t get out of the way, it \u2019s malleability always invites you to tweak your boards further, to add another property, to connect another relation, to add another view, to go through your board and complete data on all cards. It has become a perpetual  ...\n But make no mistake: All of this busy-work has little value. Of course better tools provide efficiency gains, but in Notion you usually reach a \u201c90% there\u201d level quite early\u2014but that\u2019s not when people stop. People revel in activities of diminishing returns and make everything unnecessarily complicated. A card in a table on a card in a board on a page? Sure!\n Most times a mundane bullet point list would have been fine. Maybe a to do list. Maybe adding those todos to a calendar. But that wouldn\u2019t make you look smart, would it? A Notion board with 5 views, 3 relations to other databases and 20 properties per card does \u2026 it shows you\u2019ve really thought of all the edge cases! Good job!\n Not only is the initial time spent on this busy-work wasted \u2026 you end up with solutions that need a manual to comprehend and use them. This is not a joke, we\u2019ve actually been there: We\u2019ve seen endless Slack messages explaining how a new Notion board is supposed to be used. This needless complexity slows everyone down who needs to use these tools later on.\n Now \u2026of course all this is not Notion \u2019s fault \u2014of course it can be used sensibly and responsibly. This whole post is a bit like criticizing a programming language for the bad code beginners write with it. Maybe we simply haven \u2019t grown our Notion legs yet. But the reality is that not everyone on your team will want to become an expert tool builder: The flexibility that Notion offers simply invites you to use it for the wrong things and make everything too damn complicated. It invites excessive  ...\n  Observing this makes me feel really drawn to tools like Basecamp, which are very rigid, very opinionated, funneling you through workflows that make sense, because they \u2019ve been proven over time and iterated upon. Somebody decided, after careful consideration, that this is the feature set the tool should offer and that \u2019s it. Somebody thought about how it all connects, how it \u2019s designed and how it all comes together. The feature scope is fixed. No adding of stuff. No rearranging the core  ...\n Notion is the opposite and that flexibility makes it incredibly useful in  some situations, but sadly also distracting and mediocre for  most use cases. Maybe we had to go down this way, to see the benefits of more opinionated software again \u2014 to embrace constraints and to focus on the actual work. Understanding usually comes in sine waves \u2026 we\u2019ve been at the top of the flexibility hill and now it might be time to bounce back.\n But that\u2019s just my opinion. Even in my team people will probably strongly disagree. Maybe someone will write a follow-up blog post with a counter take? That\u2019d be great, I\u2019d like to have that conversation!", "posttime": "2020-05-02 21:19:09", "tags": "\u89c2\u5ff5,encourages,\u5de5\u5177,notion", "title": "\u89c2\u5ff5\u9f13\u52b1\u5fd9\u788c\u7684\u5de5\u4f5c\uff0c\u6211\u5df2\u7ecf\u538c\u5026\u4e86", "title_en": "Notion encourages busy-work and I\u2019m tired of it", "transed": 1, "url": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u89c2\u5ff5", "\u5de5\u5177", "notion"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000338, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u5217\u8868\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u6211\u4eec\u6ca1\u6709\u5ba1\u6838\u672c\u9875\u6240\u5217\u8f6f\u4ef6\u7684\u5b89\u5168\u6216\u9690\u79c1\u95ee\u9898\uff0c\u8d85\u51fa\u4e86\u8be5\u8f6f\u4ef6\u7684\u5f00\u53d1\u8005\u4ee5\u53ca\u53ef\u80fd\u7684\u5176\u4ed6\u7ad9\u70b9\u544a\u8bc9\u6211\u4eec\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5bf9\u8f6f\u4ef6\u8bb8\u53ef\u505a\u4e86\u4e00\u4e9b\u521d\u6b65\u7814\u7a76\u3002\n\u6b64\u9875\u9762\u662f\u5171\u4eab\u8d44\u6e90\uff0c\u6211\u4eec\u9f13\u52b1\u5176\u4ed6\u4eba\u5411\u5176\u6dfb\u52a0\u5185\u5bb9\uff0c\u56e0\u6b64\u6b64\u5904\u7684\u67d0\u4e9b\u6761\u76ee\u53ef\u80fd\u662f\u7531\u793e\u533a\u6210\u5458\u6dfb\u52a0\u7684\u3002\u6211\u4eec\u5b9a\u671f\u68c0\u67e5\u6b64\u8d44\u6e90\uff0c\u77e5\u9053\u5176\u4ed6\u4eba\u4e5f\u4f1a\u68c0\u67e5\u5b83\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u7ef4\u57fa\uff0c\u56e0\u6b64\u5728\u4fee\u590d\u9519\u8bef\u4e4b\u524d\u53ef\u80fd\u4f1a\u6dfb\u52a0\u9519\u8bef\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u5728\u4f7f\u7528\u4e4b\u524d\u67e5\u770b\u6709\u5173\u60a8\u611f\u5174\u8da3\u7684\u8f6f\u4ef6\u7684\u8bb8\u53ef\u8bc1\u548c\u4fe1\u606f\uff0c\u5e76\u4f7f\u7528\u60a8\u7684\u8c03\u67e5\u7ed3\u679c\u66f4\u65b0\u6b64\u9875\u9762\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u4e92\u8054\u7f51\u4e0a\u7206\u53d1\u4e86\u4e13\u6709\u8f6f\u4ef6\u3002\u8bb8\u591a\u4eba\u5efa\u8bae\u4f7f\u7528\u4e13\u6709\u3001SaaSS\u548c/\u6216\u4fb5\u72af\u9690\u79c1\u7684\u89c6\u9891\u4f1a\u8bae\u8f6f\u4ef6\u4f5c\u4e3a\u9762\u5bf9\u9762\u4f1a\u8bae\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u4e13\u6709\u4f9b\u5e94\u5546\u6b63\u5728\u901a\u8fc7\u63d0\u4f9b\u4e34\u65f6\u514d\u8d39\u7684\u670d\u52a1\u6765\u8df3\u8fc7\u8fd9\u9879\u4efb\u52a1\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u670d\u52a1\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u8fd9\u5c06\u9501\u5b9a\u7ec4\u7ec7\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e9b\u4f9b\u5e94\u5546\u3002\u76f8\u53cd\uff0c\u8ba9\u6211\u4eec\u5171\u540c\u52aa\u529b\u4fc3\u8fdb\u81ea\u7531\u8f6f\u4ef6\u7684\u53d1\u5c55\u3002\n\u804a\u5929\u89c6\u9891BigBlueButton\u89c6\u9891\u6d41\u548c\u97f3\u9891\u8fde\u63a5\u5f80\u5f80\u76f8\u5f53\u7a33\u5b9a\u3002\u4e0eCanvas\u3001Moodle\u548c\u5176\u4ed6\u5b66\u4e60\u7ba1\u7406\u89e3\u51b3\u65b9\u6848(LMS)\u7cfb\u7edf\u96c6\u6210(\u89c1\u4e0b\u6587)\u3002LGPL\u3002\nJITSI Meet\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u51e0\u4e2a\u4eba\u8fdb\u884c\u89c6\u9891\u6216\u97f3\u9891\u804a\u5929\u3002\u5bf9\u4e8e\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4eba\u6765\u8bf4\u5e76\u4e0d\u603b\u662f\u53ef\u9760\u7684\u3002\u6709\u65f6\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u624d\u80fd\u4f7f\u97f3\u9891\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5de5\u4f5c\u3002Apache-2.0\u3002\n\u5982\u679c\u6240\u6709\u5404\u65b9\u90fd\u4f7f\u7528\u76f8\u540c\u7684(\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u6700\u65b0\u7684)\u5ba2\u6237\u7aef\u7248\u672c\uff0c\u90a3\u4e48GNU Jami\u5f80\u5f80\u662f\u7a33\u5b9a\u7684\u3002GPLv 3\u3002\nGStreamer/Icecast\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u811a\u672c\u4e0e\u8bb8\u591a\u5355\u5411\u5173\u7cfb\u4e2d\u7684\u4eba\u5171\u4eab\u60a8\u7684\u76f8\u673a\u6216\u684c\u9762\u5c4f\u5e55\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0eMumble\u76f8\u7ed3\u5408\uff0c\u5141\u8bb8\u5b66\u6821\u6559\u5e08\u8fdb\u884c\u6f14\u793a\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u97f3\u9891\u56de\u7b54\u95ee\u9898\u3002\u7531\u4e8e\u89c6\u9891\u6d41\u7684\u7f13\u51b2\uff0c\u89c6\u9891\u9988\u9001\u53ef\u80fd\u4f1a\u6ede\u540e\u7ea65-10\u79d2\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u66f4\u591a\u9009\u9879\u3002\nOBS/nginx OBS Studio\u53ef\u4ee5\u4e0enginx web\u670d\u52a1\u5668\u914d\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7RTMP\u8fdb\u884c\u5f55\u5c4f\u6216\u76f4\u64ad\u3002\u89c2\u4f17\u53ef\u4ee5\u4f7f\u7528VLC\u3001MPV\u6216\u4efb\u4f55\u5176\u4ed6\u517c\u5bb9\u64ad\u653e\u5668\u5728\u60a8\u7684Web\u670d\u52a1\u5668\u4e0a\u6536\u770bRTMP\u6d41\u3002GPL-2.0\u3002\nOpenTokRTC\u73b0\u5728\u662fNexmo/Vonage\u89c6\u9891API\u7684\u4e00\u90e8\u5206\u3002\u81f3\u5c11\u539f\u59cbTokBox\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u662f\u81ea\u7531\u8f6f\u4ef6\uff0c\u4f46\u4e0d\u6e05\u695a\u5b83\u662f\u5426\u53ef\u4ee5\u5728\u6ca1\u6709\u4efb\u4f55\u975e\u81ea\u7531\u8f6f\u4ef6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\u4f5c\u4e3a\u4e00\u4e2a\u53cd\u529f\u80fd\uff0cVonage\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5728\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u4f01\u4e1a\u7248\uff0c\u6216\u8005\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u975e\u514d\u8d39JavaScript\u3002\nAudio Mumble Mumble\u5bf9\u4e8e\u7ec8\u7aef\u7528\u6237\u6765\u8bf4\u975e\u5e38\u5bb9\u6613\uff0c\u800c\u4e14\u4e3b\u8981\u5e73\u53f0\u90fd\u6709\u514d\u8d39\u7684\u672c\u5730\u5ba2\u6237\u7aef\u3002\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u5b83\u5360\u7528\u7684\u5185\u5b58\u5f88\u5c11\uff0c\u4f46\u662f\u5982\u679c\u6709\u5f88\u591a\u4eba\u540c\u65f6\u5728\u4e00\u4e2a\u6709\u5f88\u591a\u4eba\u5728\u76d1\u542c\u7684\u9891\u9053\u4e2d\u901a\u8bdd\uff0c\u90a3\u4e48\u5b83\u4f1a\u5360\u7528\u5927\u91cf\u7684\u670d\u52a1\u5668\u5e26\u5bbd\u3002\u5ba2\u6237\u7aef\u5728\u8fd9\u4e9b\u65f6\u95f4\u4f1a\u770b\u5230\u4e0b\u884c\u94fe\u8def\u5e26\u5bbd\u589e\u52a0\uff0c\u8fd9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u975e\u5bf9\u79f0\u4f4f\u5b85\u8fde\u63a5\u5141\u8bb8\u66f4\u5927\u7684\u4e0b\u884c\u94fe\u8def\u3002\u4e8b\u4ef6\u53d1\u751f\u5728\u76f4\u63a5\u9762\u5bf9\u9762\u7684\u4ea4\u6d41\u4e2d\uff0c\u5b83\u901a\u5e38\u662f\u2026\u3002\n\u6587\u672c\u548c\u53ef\u80fd\u7684\u6587\u6863\u5171\u4eab\u7535\u5b50\u90ae\u4ef6\u548c\u90ae\u4ef6\u5217\u8868\u7535\u5b50\u90ae\u4ef6\u5df2\u7ecf\u88ab\u8bb8\u591a\u4eba\u666e\u904d\u4f7f\u7528\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u5206\u6563\u7684\u793e\u4ea4\u7f51\u7edc\u3002\u4e00\u79cd\u9009\u62e9\u662f\u901a\u8fc7\u5728\u7535\u5b50\u90ae\u4ef6\u7684\u201c\u6536\u4ef6\u4eba\uff1a\u201d\u6216\u201c\u6284\u9001\uff1a\u201d\u5b57\u6bb5\u4e2d\u5217\u51fa\u591a\u4e2a\u4eba\u6765\u5411\u60a8\u7684\u540c\u4e8b\u3001\u670b\u53cb\u548c\u5bb6\u4eba\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u5efa\u7acb\u90ae\u4ef6\u5217\u8868\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u957f\u671f\u7b56\u7565\uff0c\u7279\u522b\u662f\u5f53\u4eba\u4eec\u5e0c\u671b\u52a0\u5165\u6216\u79bb\u5f00\u5c0f\u7ec4\uff0c\u6216\u8005\u4ed6\u4eec\u60f3\u8981\u9605\u8bfb\u5b8c\u6574\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u6216\u8005\u4e0d\u518d\u5173\u6ce8\u4e00\u4e2a\u957f\u671f\u8fd0\u884c\u7684\u4e3b\u9898\u65f6\u3002\nIRC IRC\u6709\u9002\u7528\u4e8e\u6240\u6709\u4e3b\u8981\u5e73\u53f0\u7684\u514d\u8d39\u8f6f\u4ef6IRC\u5ba2\u6237\u7aef\u3002\u5982\u679c\u60a8\u60f3\u5728Freenode(\u4e00\u79cd\u6d41\u884c\u7684IRC\u670d\u52a1\u5668)\u4e0a\u521b\u5efa\u9891\u9053\uff0c\u4f46\u60a8\u7684\u9891\u9053\u4e0d\u662f\u5173\u4e8e\u81ea\u7531\u8f6f\u4ef6\u6216\u83b7\u5f97\u5e7f\u6cdb\u8bb8\u53ef\u7684\u521b\u610f\u4f5c\u54c1\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u521b\u5efa\u4ee5#39\uff1b##&#\u5f00\u5934\u7684\u70ed\u95e8\u9891\u9053\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u9700\u8981Freenode\u5458\u5de5\u7684\u5e2e\u52a9\uff0c\u60a8\u7684\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u50cf\u8bf7\u6c42\u81ea\u7531\u8f6f\u4ef6\u9879\u76ee\u6e20\u9053\u7684\u5e2e\u52a9\u90a3\u6837\u4f18\u5148\u3002..\u3002\nKiwiIRC\u4e0d\u8981\u5728\u7ad9\u70b9\u914d\u7f6e\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\u7801\u5bc6\u94a5\uff0c\u5426\u5219\u5b83\u4f1a\u5728\u7528\u6237\u5c1d\u8bd5\u767b\u5f55\u65f6\u6dfb\u52a0\u975e\u514d\u8d39\u9a8c\u8bc1\u7801\u7cfb\u7edf\u3002Apache-2.0\u3002\n\u4f11\u606f\u5ba4\u5728\u4f11\u606f\u5ba4\u7684\u516c\u5171\u5b9e\u4f8b\u4e0a\uff0c\u5173\u95ed\u6d4f\u89c8\u5668\u9009\u9879\u5361\u6216\u65ad\u5f00\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7f51\u9875\u7684\u8fde\u63a5\u540e\uff0c\u4e0eIRC\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c06\u65ad\u5f00\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u79c1\u6709\u5b9e\u4f8b\uff0c\u5219\u9700\u8981\u7ba1\u7406\u5458\u521b\u5efa\u7684\u5e10\u6237\u624d\u80fd\u767b\u5f55\uff0c\u5e76\u4e14\u5373\u4f7f\u5728\u5173\u95ed\u6d4f\u89c8\u5668\u9009\u9879\u5361\u6216\u65ad\u5f00\u8fde\u63a5\u540e\uff0c\u4e0eIRC\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4ecd\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u3002\nMatrix\u770b\u8d77\u6765Matrix\u505a\u4e86\u76f8\u5f53\u591a\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u8054\u5408\u3001\u7f51\u7edc\u4e4b\u95f4\u7684\u6865\u63a5\u548cVoIP\u3002Apache-2.0\u3002\nMatterest Anti-Feature\uff1a\u5c0a\u91cd\u81ea\u7531\u7684Matterest\u7248\u672c\u6bd4\u4f01\u4e1a\u7248\u7684\u529f\u80fd\u5c11\uff0c\u540e\u8005\u5f88\u53ef\u80fd\u662f\u975e\u514d\u8d39\u7684\u3002\u9488\u5bf9\u4e0d\u540c\u7ec4\u4ef6(MIT\u3001AGPLv3\u3001Apache 2.0)\u7684\u591a\u4e2a\u8bb8\u53ef\u8bc1\u3002\nRocket.Chat Anti-f", "note_en": "This list is work in progress. We have not audited the software listed on this page for security or privacy concerns beyond what developers of the software, and potentially other sites tell us about it. We have done some initial research into software licenses.\n This page is a shared resource, and we encourage others to add to it, so some of the entries here may be added by members of the community. We check this resource periodically, and know that others check it too, but it&#39;s a wiki, so errors may be added before they&#39;re fixed. We encourage you to review licenses and information about the software you&#39;re interested in before using it, and to update this page with your findings.\n As more people are going remote, there is an outbreak of proprietary software happening around the Internet. Many are suggesting to use proprietary,  SaaSS, and/or privacy invading video conferencing software as an alternative to meeting in person. Proprietary vendors are hopping to the task by offering services that are temporarily free as in cost, and that would lock organizations into continuing to use those vendors. Let&#39;s work together to promote free software instead.\n   Chat Video BigBlueButton Video streaming, and audio connections tend to be quite stable. Integrates with Canvas, Moodle, and other Learning Management Solutions (LMS) systems (see below). LGPL\n Jitsi Meet Easy to use, and good for a couple of people to video or audio chat with each other. Not always reliable with more than two people. Sometimes it&#39;s necessary to reload the page to get audio working in both directions. Apache-2.0\n GNU Jami Tends to be stable if all parties use the same (ideally the latest) version of the client. GPLv3\n GStreamer/Icecast It&#39;s possible to share your camera or desktop screen with many people in a one-way relationship using  command line scripts. This method combined with Mumble allows for a school teacher to give a presentation, and to be available for questions via audio. The video feed would likely be about 5-10 seconds behind, due to buffering of the video stream. See more options below.\n OBS/nginx OBS Studio can be used in conjunction with the nginx web server to screencast or stream via RTMP. Viewers can tune into the RTMP stream on your web server using VLC, mpv, or any other compatible player. GPL-2.0\n OpenTokRTC Now a part of nexmo / Vonage video API. At least parts of the original TokBox code are free software, but it&#39;s not clear whether it&#39;s possible to use without any non-free software. As an anti-feature, Vonage offers enterprise editions that may run on your own server, or may require running non-free JavaScript.\n Audio Mumble Mumble is pretty easy for end users, and there are free native clients for major platforms. On the server, it has a low memory footprint, but can use a lot of server bandwidth if many people are talking at once in a channel that has many people listening in. Clients would see an increase in downlink bandwidth at these times, which is okay, since most asymmetrical residential connections allow for a larger downlink. Event in direct face to face communication, it&#39;s generally  ...\n Text and possibly document sharing Email and mailing lists Email is already commonly used by many people, and is a decentralized social network. One option is to email your coworkers, friends and family by listing multiple people in your email&#39;s To: or Cc: fields. Setting up mailing lists is a better long term strategy, especially if people are expected to join or leave groups, or they want to read the full history of, or stop following a long-running thread.\n IRC IRC There are free software IRC clients for all major platforms. If you want to create a channel on Freenode (a popular IRC server), but your channel isn&#39;t about free software or broadly licensed creative works, you can still create topical channels that begin with &#39;##&#39;. Note that in this case if you need help from Freenode staff, your request won&#39;t be as high priority as requests for help with a free software project&#39;s channel.  ...\n KiwiIRC Don&#39;t add a captcha key in the site config, otherwise it will add a non-free captcha system when users try to log in. Apache-2.0\n The Lounge On public instances of The Lounge, connections to IRC servers are dropped after closing your browser tabs or losing your connection to application&#39;s Web page. If you use a private instance, you&#39;ll need an account created by an administrator to log in, and connections to the IRC server are kept active even after closing your browser tabs or losing your connection. MIT\n Matrix It seems like Matrix does quite a lot, including federation, bridging between networks, and VoIP. Apache-2.0\n Mattermost Anti-feature: the freedom respecting version of Mattermost has less features than the enterprise editions, which are likely non-free. Multiple licenses for different components (MIT, AGPLv3, Apache 2.0)\n Rocket.Chat Anti-feature: the freedom respecting version of Rocket.Chat has less features than the enterprise editions, which are likely non-free. MIT\n Wire On their  client source code repo, they say &#34;a. You agree not to change the way the Open Source App connects and interacts with our servers;...&#34;. It&#39;s not clear whether this is acceptable for software under a free license.\n XMPP / Jabber XMPP has been around for a long time. There are free clients for major platforms, and a variety of free server codebases to choose from if you want to run your own server.\n Zulip It looks like Zulip&#39;s enterprise edition is a support contract for the free software, which is great. Apache 2.0\n Sandstorm Sandstorm makes it easy to install and use free software applications on your Web server. It comes with many free applications, and it&#39;s probably best to confirm the licenses of the applications before you install them.\n Document Writing and document sharing Etherpad This is a very useful tool for collaborative text editing. It&#39;s great for meetings, brainstorming, and interleaved writing and editing flows. Apache 2.0\n     NextCloud NextCloud is a featureful Web service for document editing, file storage, audio/video chat, and more. AGPL-3.0\n   Wiki Software ikiwiki Write wiki pages in Markdown, via a Git repo, or via the Web (which commits to Git). Great for internal wikis, ie for documenting procedures, policies, article drafts, etc. Extensible with plugins. GPL-2.0 +\n MediaWiki Used in quite a lot of places. It supports many different extensions. It&#39;s a good choice for public wikis that anyone can edit, or for internal wikis. GPLv2+\n Learning Management Solutions (LMS) Canvas One of the more popular choices out there. Integrates with Big Blue Button (see above). AGPLv3", "posttime": "2020-05-02 21:18:49", "tags": "\u901a\u4fe1,communication,software", "title": "\u8fdc\u7a0b\u901a\u4fe1(LibrePlanet\u4e0a\u7684Wiki\u9875\u9762)", "title_en": "Remote Communication (wiki page on LibrePlanet)", "transed": 1, "url": "https://libreplanet.org/wiki/Remote_Communication", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u901a\u4fe1", "software"]}, {"category": "", "categoryclass": "", "imagename": "a333658f99f26e9966290db145465b38.jpg", "infoid": 1000335, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4f4d\u7279\u65af\u62c9\u8054\u5408\u521b\u59cb\u4eba\u8c08\u5230\u4e86\u4ed6\u5bf9Twitter\u7684\u4f7f\u7528\uff0c\u4ee5\u53ca\u5728\u4e0e\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(Securities And Exchange Commission)\u8fbe\u6210\u548c\u89e3\u540e\u4ed6\u5fc5\u987b\u505a\u51fa\u7684\u8c03\u6574\u3002\u6b32\u4e86\u89e3\u5b8c\u6574\u8bbf\u8c08\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\uff1ahttps://cbsn.ws/2UB9O5c\u8ba2\u960560\u5206\u949f\u9891\u9053\u8fd9\u91cc\uff1ahttp://bit.ly/1S7CLRu\u89c2\u770b\u5168\u96c6&#34\uff1b60\u5206\u949f&#34\uff1b\u8fd9\u91cc\uff1ahttp://cbsn.ws/1Qkjo1F\u83b7\u53d6\u66f4\u591a&#34\uff1b60\u5206\u949f&#34\uff1b\u4ece&#34\uff1b60\u5206\u949f\uff1a\u52a0\u73ed\u8fd9\u91cc\uff1ahttp://cbsn.ws/1KG3sdr\u91cd\u6e29\u8fc7\u53bb\u7684\u5267\u96c6.", "note_en": "The Tesla co-founder talks about his use of Twitter and the adjustments he\u2019s had to make after a settlement with the Securities and Exchange Commission. For the full interview, click here:  https://cbsn.ws/2UB9O5c  Subscribe to the &#34;60 Minutes&#34; Channel HERE:  http://bit.ly/1S7CLRu Watch Full Episodes of &#34;60 Minutes&#34; HERE:  http://cbsn.ws/1Qkjo1F Get more &#34;60 Minutes&#34; from &#34;60 Minutes: Overtime&#34; HERE:  http://cbsn.ws/1KG3sdr Relive past episodies  ...", "posttime": "2020-05-02 21:18:26", "tags": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b,\u7279\u65af\u62c9,\u57c3\u9686,ceo,http", "title": "\u7279\u65af\u62c9CEO\u57c3\u9686\u00b7\u9a6c\u65af\u514b\uff1a\u201c\u6211\u7528\u6211\u7684\u63a8\u6587\u6765\u8868\u8fbe\u81ea\u5df1\u201d(2018)[\u89c6\u9891]", "title_en": "Tesla CEO Elon Musk: \u201cI use my tweets to express myself\u201d (2018) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=SIzGdoPu9vs", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "\u7279\u65af\u62c9", "\u57c3\u9686", "ceo", "http"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000334, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c3c\u5eb7\u6b63\u5728\u52a0\u5927\u76f8\u673a\u7ef4\u4fee\u7684\u96be\u5ea6\uff0c\u8fd9\u662f\u7ef4\u6743\u8fd0\u52a8\u7684\u201c\u7164\u77ff\u91cc\u7684\u91d1\u4e1d\u96c0\u201d\u3002", "note_en": "Nikon is making it harder to repair its cameras, 'the canary in the coal mine' for the right-to-repair movement. ", "posttime": "2020-05-02 21:18:13", "tags": "\u76f8\u673a,\u5c3c\u5eb7,longer,repair", "title": "\u5c3c\u5eb7\u5c06\u4e0d\u518d\u6388\u6743\u4efb\u4f55\u4eba\u4fee\u7406\u5176\u76f8\u673a", "title_en": "Nikon Will No Longer Authorize Anyone to Repair Its Cameras", "transed": 1, "url": "https://www.vice.com/en_us/article/qvgggp/nikon-is-making-it-harder-to-fix-its-cameras", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u76f8\u673a", "\u5c3c\u5eb7", "longer", "repair"]}, {"category": "", "categoryclass": "", "imagename": "99a151567d649869bb818d0d5cd0f00e.png", "infoid": 1000333, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7ecf\u8fc7\u51e0\u4e2a\u6708\u7684\u6df1\u601d\u719f\u8651\u540e\uff0c\u6709\u4e89\u8bae\u7684.org\u7f51\u7ad9\u57df\u540d\u7684\u51fa\u552e-\u6148\u5584\u673a\u6784\u548c\u975e\u8425\u5229\u7ec4\u7ec7\u4f7f\u7528-\u5df2\u7ecf\u88ab\u6401\u7f6e\u3002\n\u8fd0\u8425.org\u57df\u540d\u7684\u516c\u5171\u4e92\u8054\u7f51\u6ce8\u518c\u4e2d\u5fc3(PIR)\u4e8e11\u6708\u88ab\u51fa\u552e\u7ed9\u79c1\u52df\u80a1\u6743\u516c\u53f8ethos Capital\uff0c\u4f20\u8a00\u4ef7\u683c\u4e3a10\u4ebf\u7f8e\u5143(8\u4ebfGB)\u3002\n\u6279\u8bc4\u4eba\u58eb\u8b66\u544a\u8bf4\uff0c\u65b0\u7684\u6240\u6709\u8005\u5c06\u8bd5\u56fe\u8fd0\u8425.org\u4ee5\u76c8\u5229\uff0c\u8fd9\u5c06\u4f7f\u6148\u5584\u673a\u6784\u635f\u5931\u6570\u767e\u4e07\u7f8e\u5143\u3002\n\u5305\u62ec\u7f8e\u56fd\u5973\u7ae5\u5b50\u519b\u548c\u57fa\u7763\u6559\u9752\u5e74\u4f1a\u5728\u5185\u7684\u7ec4\u7ec7\u547c\u5401\u963b\u6b62PIR\u7684\u9500\u552e\u3002\n\u975e\u8425\u5229\u90e8\u95e8\u7684\u8bb8\u591a\u4eba\u62c5\u5fc3\uff0c\u5c06.org\u51fa\u552e\u7ed9\u4e00\u4e2a\u8425\u5229\u6027\u80a1\u6743\u96c6\u56e2\u4f1a\u5bfc\u81f4\uff1a\n4\u670815\u65e5\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u603b\u68c0\u5bdf\u957f\u6cfd\u7ef4\u5c14\u00b7\u8d1d\u585e\u62c9(Xavier Becera)\u8868\u793a\uff0c\u8f6c\u79fb\u5f15\u53d1\u4e86\u4e0d\u5bb9\u5ffd\u89c6\u7684\u4e25\u91cd\u5173\u5207\u3002\n\u4e92\u8054\u7f51\u540d\u79f0\u4e0e\u6570\u5b57\u5730\u5740\u5206\u914d\u673a\u6784(Icann)\u662f.org\u548c.com\u7b49\u9876\u7ea7\u57df\u540d\u7684\u7ba1\u7406\u673a\u6784\u3002\n\u5468\u56db\uff0c\u5b83\u62d2\u7edd\u5151\u73b0PIR\u4ece\u4e92\u8054\u7f51\u534f\u4f1a(Internet Society)\u8f6c\u79fb\u5230ethos Capital\u7684\u4ea4\u6613\u3002\n\u8be5\u516c\u53f8\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0cethos Capital\u6ca1\u6709\u4fdd\u62a4\u6216\u670d\u52a1.org\u793e\u533a\u7684\u6709\u610f\u4e49\u7684\u8ba1\u5212\u3002\n\u6b64\u6b21\u6536\u8d2d\u5c06\u7559\u4e0b3.6\u4ebf\u7f8e\u5143\u7684\u503a\u52a1\uff0cPIR\u5c06\u88ab\u8feb\u507f\u8fd8\u8fd9\u7b14\u503a\u52a1\uff0c\u5e76\u5411\u80a1\u4e1c\u63d0\u4f9b\u56de\u62a5\u3002\n\u4eca\u5929\uff0cIcann\u65ad\u7136\u62d2\u7edd\u4e86ethos Capital\u5c06.org\u57df\u540d\u6ce8\u518c\u4e2d\u5fc3\u8f6c\u53d8\u4e3a\u8d1f\u503a\u7d2f\u7d2f\u7684\u76c8\u5229\u6027\u5b9e\u4f53\u7684\u8ba1\u5212\u3002\u5b83\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u8fd9\u662f\u4e00\u573a\u91cd\u8981\u7684\u80dc\u5229\uff0c\u627f\u8ba4\u4e86\u6ce8\u518c\u4e2d\u5fc3\u4f5c\u4e3a\u4e00\u4e2a\u4ee5\u4f7f\u547d\u4e3a\u57fa\u7840\u7684\u975e\u8425\u5229\u5b9e\u4f53\u7684\u957f\u671f\u9057\u4ea7\uff0c\u4fdd\u62a4\u4e86\u6570\u5343\u4e2a\u7ec4\u7ec7\u53ca\u5176\u670d\u52a1\u7684\u4eba\u7684\u5229\u76ca\u3002\n\u4f46\u662f\uff0c.org\u6ce8\u518c\u4e2d\u5fc3\u4ecd\u7136\u9700\u8981\u4e00\u4f4d\u5fe0\u5b9e\u7684\u7ba1\u5bb6\uff0c\u56e0\u4e3a\u4e92\u8054\u7f51\u534f\u4f1a\u5df2\u7ecf\u660e\u786e\u8868\u793a\uff0c\u5b83\u4e0d\u518d\u9700\u8981\u8fd9\u4e00\u8d23\u4efb\u3002\n\u76ae\u5c14\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u6ce8\u518c\u6210\u7acb\uff0c\u8be5\u5dde\u603b\u68c0\u5bdf\u957f\u4e5f\u5728\u8c03\u67e5\u8fd9\u7b14\u4ea4\u6613\u3002", "note_en": "The controversial sale of the .org web domain - used by charities and non-profit organisations - has been set back after months of deliberation.\n Public Internet Registry (PIR), which runs the .org domain, was sold in November to private equity firm Ethos Capital for a rumoured $1bn (\u00a3800m).\n Critics warned that the new owner would try to run .org for profit, costing charities millions.\n     Organisations including the Girl Scouts of America and the YMCA had called for the sale of PIR to be blocked.\n Many in the non-profit sector feared the sale of .org to a for-profit equity group would lead to:\n  On 15 April, California&#39;s attorney general Xavier Becerra said the transfer &#34;raises serious concerns that cannot be overlooked&#34;.\n The  Internet Corporation for Assigned Names and Numbers (Icann) is the governing body for top-level domains such as .org and .com.\n It declined to honour the transfer of PIR from the Internet Society to Ethos Capital on Thursday.\n  In a statement, it said Ethos Capital had &#34;no meaningful plan to protect or serve the .org community&#34;.\n The takeover would leave a debt of $360m, which PIR would be &#34;forced to service&#34; and &#34;provide returns to its shareholders&#34;.\n  &#34;Icann today roundly rejected Ethos Capital&#39;s plan to transform the .org domain registry into a heavily indebted for-profit entity. This is an important victory that recognises the registry&#39;s long legacy as a mission-based, not-for-profit entity protecting the interests of thousands of organisations and the people they serve,&#34; it said in a statement.\n &#34;But the .org registry still needs a faithful steward, because the Internet Society has made clear it no longer wants that responsibility.&#34;\n PIR is incorporated in Pennsylvania, where the state&#39;s attorney general is also investigating the sale.", "posttime": "2020-05-02 21:16:37", "tags": "\u57df\u540d,\u7f51\u7ad9,web,\u6ce8\u518c,profit", "title": ".org\u7f51\u7ad9\u57df\u540d\u9500\u552e\u88ab\u963b\u6b62", "title_en": "Sale of .org web domain blocked", "transed": 1, "url": "https://www.bbc.com/news/technology-52501456", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u57df\u540d", "\u7f51\u7ad9", "web", "\u6ce8\u518c", "profit"]}, {"category": "", "categoryclass": "", "imagename": "c58c12d9d9cdd40b7cdc5273c0356ec0.png", "infoid": 1000332, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u6211\u4eec\u7684\u653f\u7b56\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u5a92\u4f53\u4e0a\u53d1\u8868\u6587\u7ae0\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u5bf9\u6bcf\u4e00\u7bc7\u62a5\u9053\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1cdc.gov\u3002\nCOVID19\u5373\u5c06\u6740\u6b7b\u6570\u4ee5\u5343\u8ba1\u7684\u9910\u5385\u3002\u8fd9\u573a\u5927\u6d41\u884c\u662f\u6700\u7ec8\u7684\u538b\u529b\u6d4b\u8bd5\uff0c\u9910\u5385\u4e25\u91cd\u5931\u8d25\u3002\u60f3\u60f3\u770b\uff1a\u5f53\u6211\u4eec\u8d70\u51fa\u8fd9\u4e2a\u56f0\u5883\u65f6\uff0c\u4f60\u6700\u559c\u6b22\u7684\u98df\u7269\u53ef\u80fd\u4e0d\u518d\u5b58\u5728\u4e86\u3002\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u4f1a\u88ab\u64cd\u6210\u8fd9\u6837\uff1f\u542c\u6211\u89e3\u91ca\u3002\n\u9910\u996e\u4e1a\u7684\u5229\u6da6\u7387\u662f\u51fa\u4e86\u540d\u7684\u5c11\u3002\u5b9e\u9645\u4e0a\u662f\u5f88\u5c0f\u7684\u3002\u4f5c\u4e3a\u53c2\u8003\uff0c\u94f6\u884c\u3001\u4f1a\u8ba1\u548c\u6cd5\u5f8b\u670d\u52a1\u7684\u5229\u6da6\u7387\u7ea6\u4e3a18-25%\uff0c\u533b\u7597\u4fdd\u5065\u5229\u6da6\u7387\u4e3a12-15%\uff0c\u8f6f\u4ef6\u5229\u6da6\u7387\u4e3a15-25%\u3002\u9910\u9986\uff1f3-9%\u3002\u662f\u554a\uff0c\u5c31\u50cf\u4e2a\u4f4d\u6570\u3002\u8fd9\u4e9b\u5fae\u8584\u7684\u5229\u6da6\u7387\u8ba9\u9910\u5385\u7684\u50a8\u5907\u4e3a\u96f6\u3002\u56e0\u6b64\uff0c\u5f53\u5371\u673a\u6765\u88ad\u65f6(\u5c31\u50cf\u73b0\u5728)\uff0c\u4ed6\u4eec\u51e0\u4e4e\u5c31\u5b8c\u86cb\u4e86\u3002\u9910\u9986\u8001\u677f\u552f\u4e00\u7684\u9009\u62e9\u5c31\u662f\u6536\u8d77\u4ed6\u4eec\u7684\u9a84\u50b2\uff0c\u4e5e\u6c42\u548c\u5e0c\u671b\u5f97\u5230\u5e2e\u52a9--\u6216\u8005\u653e\u5f03\u90a3\u4e9b\u4fd7\u8bdd\u8bf4\u7684\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5229\u6da6\u7387\u8fd9\u4e48\u5dee\u5462\uff1f\u55ef\uff0c\u9996\u5148\u662f\u6574\u4e2a\u884c\u4e1a\u5728\u5f00\u59cb\u4ef7\u683c\u7ade\u4e89\u65f6\u642c\u8d77\u77f3\u5934\u7838\u81ea\u5df1\u7684\u811a\u3002\u4f60\u770b\uff0c\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u8fd9\u6837-\u8fc7\u53bb\u7684\u5229\u6da6\u7387\u5373\u4f7f\u4e0d\u662f\u73b0\u5728\u7684\u4e09\u500d\uff0c\u4e5f\u662f\u73b0\u5728\u7684\u4e24\u500d\u3002\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u867d\u7136\u83dc\u5355\u4ef7\u683c\u5e94\u8be5\u4e00\u76f4\u5728\u4e0a\u6da8\uff0c\u4ee5\u8ddf\u4e0a\u901a\u80c0\u548c\u5feb\u901f\u4e0a\u6da8\u7684\u79df\u91d1\u7b49\u56e0\u7d20\uff0c\u4f46\u4ef7\u683c\u6218\u53cd\u800c\u538b\u4f4e\u4e86\u4ef7\u683c(\u6709\u4eba\u613f\u610f\u652f\u4ed81\u7f8e\u5143\u7684\u8d85\u503c\u5957\u9910\u5417\uff1f)\u3002\u6240\u6709\u8fd9\u4e9b\u88ab\u4fb5\u8680\u7684\u8fb9\u9645\u76f4\u5230\u9910\u5385\u88ab..\u3002\n\u201c\u5373\u4f7f\u662f\u5e7f\u53d7\u8d5e\u8a89\u7684\u9910\u9986\u8001\u677f\u4e5f\u5728\u8d5a\u53d6\u8d8a\u6765\u8d8a\u5c11\u7684\u6536\u5165\u3002\u5229\u6da6\u7387\u4ece20\u5e74\u524d\u768415%-20%\u4e0b\u964d\u5230\u4eca\u5929\u76844%-7%\u3002\u201c--\u8d39\u57ce\u00b7\u9a6c\u683c\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u6211\u7684\u4e0b\u4e00\u70b9\uff1a\u6211\u4eec\u5bf9\u7ecf\u8425\u98df\u54c1\u7ecf\u8425\u7684\u771f\u5b9e\u6210\u672c\u7f3a\u4e4f\u7406\u89e3\u6216\u8ba4\u8bc6\u3002\u6211\u4eec\u53ea\u662f\u4e0d\u77e5\u9053\u3002\u800c\u4e14\u6211\u4eec\u7684\u5047\u8bbe\u6709\u5f88\u5927\u7684\u504f\u5dee\u3002\u8001\u5b9e\u8bf4\uff0c\u5728\u6211\u5f00Wolf Down(\u5fb7\u56fd\u8857\u5934\u5feb\u9910)\u4e4b\u524d\uff0c\u6211\u4e5f\u4e0d\u592a\u4e86\u89e3\u8fd9\u4e00\u70b9\u3002\u8ba9\u6211\u544a\u8bc9\u4f60\uff0c\u8fd9\u8ba9\u4f60\u5927\u5f00\u773c\u754c\uff01\u6211\u5c06\u901a\u8fc7\u6211\u7684\u7ecf\u5386\u6765\u5206\u4eab\u6211\u7684\u53d1\u73b0\uff0c\u4ee5\u9610\u660e\u4e3a\u4ec0\u4e48\u9910\u9986\u5982\u6b64\u7cdf\u7cd5\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981(\u81f3\u5c11\u90e8\u5206\u5730)\u627f\u62c5\u8d23\u4efb\uff0c\u4ee5\u53ca\u6211\u4eec\u662f\u5982\u4f55\u62e5\u6709\u6743\u529b\u7684\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u9910\u5385\u5229\u6da6\u7387\u662f\u5982\u4f55\u53d1\u6325\u4f5c\u7528\u7684\u3002\u522b\u62c5\u5fc3\uff0c\u6211\u4f1a\u4fdd\u6301\u7b80\u5355\u7684\u3002\u5229\u6da6\u7387\u662f\u9500\u552e\u6536\u5165\u51cf\u53bb\u628a\u98df\u7269\u9001\u5230\u809a\u5b50\u91cc\u7684\u6240\u6709\u8d39\u7528\u540e\u5269\u4e0b\u7684\u3002\u8fd9\u5305\u62ec\u98df\u54c1\u6210\u672c(COGS)\u3001\u52b3\u52a8\u529b\u6210\u672c\u548c\u95f4\u63a5\u8d39\u7528\u3002\u4e4d\u4e00\u770b\u4f3c\u4e4e\u76f8\u5f53\u76f4\u622a\u4e86\u5f53\uff0c\u4f46\u6709\u5f88\u591a\u9690\u85cf\u7684\u6210\u672c\u53ef\u80fd\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\u3002\u6211\u5c06\u53ea\u5206\u4eab\u4e00\u4e9b\u5728\u201c\u72fc\u6765\u4e86\u201d\u4e4b\u524d\u6211\u4ece\u672a\u60f3\u8fc7\u7684\u4e1c\u897f\u3002\n\u98df\u7269\u6210\u672c\u663e\u7136\u5305\u62ec\u4e86\u6240\u6709\u7684\u98df\u6750\u3002\u7136\u800c\uff0c\u6211\u4eec\u7ecf\u5e38\u5fd8\u8bb0\u7684\u662f\u50cf\u6d6a\u8d39\u548c\u5305\u88c5\u6210\u672c\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5f88\u5feb\u7d2f\u79ef\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7684\u5916\u5356\u7897\u6bcf\u4e2a\u552e\u4ef70.35\u7f8e\u5143\u3002\u518d\u52a0\u4e0a\u4e00\u4e2a\u53c9\u5b50\u3001\u888b\u5b50\u548c\u9910\u5dfe\u7eb8\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u5229\u6da6\u7387\u6765\u8bf4\u662f\u4e2a\u4e0d\u9519\u7684\u5229\u6da6\u7387\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u4e5f\u786e\u4fe1\u4ece\u5927\u578b\u98df\u54c1\u4f9b\u5e94\u5546\u90a3\u91cc\u83b7\u5f97\u4ea7\u54c1\u4f1a\u66f4\u4fbf\u5b9c\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6279\u91cf\u8d2d\u4e70\u7684\u3002\u663e\u7136\uff0c\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u5982\u6b64\u3002\u6709\u4e9b\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u6709\u4e9b\u4e8b\u60c5\uff0c\u4ed6\u4eec\u4f1a\u52a0\u4ef7\u3002\u4e3a..\u3002\n\u5c31\u7ba1\u7406\u8d39\u7528\u800c\u8a00\uff0c\u6709\u623f\u79df\u3001\u6c34\u7535\u8d39\u3001\u4fdd\u9669\u3001\u4e92\u8054\u7f51\u3001\u7c3f\u8bb0\u3001\u652f\u4ed8\u5904\u7406\u7b49\u663e\u800c\u6613\u89c1\u7684\u8d39\u7528\u3002\u8fd8\u6709\u6240\u6709\u5176\u4ed6\u6211\u4ece\u672a\u60f3\u8fc7\u7684\u8d39\u7528-\u6bd4\u5982\u6bcf\u6708300\u7f8e\u5143\u7684\u5783\u573e\u7ba1\u7406\u8d39(\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef\u4e86\u5728\u5bb6\u91cc\u514d\u8d39\u6361\u5783\u573e\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8981\u4ed8\u94b1)\u3002\u7136\u540e\u8fd8\u6709150\u7f8e\u5143\u7684\u5e8a\u5355\u670d\u52a1\u8d39\u6765\u6d17\u6240\u6709\u7684\u6e05\u6d01\u6bdb\u5dfe\uff0c150\u7f8e\u5143\u7684\u6d17\u7897\u673a\u79df\u8d41\u8d39\uff0c\u53e6\u5916150\u7f8e\u5143\u7684\u9694\u6cb9\u5668\u670d\u52a1\u8d39\uff0c\u8fd8\u6709\u522b\u5fd8\u4e86\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u98df\u54c1\u6210\u672c\u901a\u5e38\u5360\u6536\u5165\u768433%\u5de6\u53f3\uff0c\u52b3\u52a8\u529b\u6210\u672c\u53c8\u536033%\uff0c\u5e0c\u671b\u7ba1\u7406\u8d39\u7528\u8db3\u591f\u4f4e\uff0c\u8db3\u4ee5\u4ea7\u751f\u5269\u4f59\u7269\u3002\u6bd4\u7387\u6839\u636e\u9910\u5385\u7c7b\u578b\u7684\u4e0d\u540c\u800c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u5229\u6da6\u7387\u901a\u5e38\u57283-9%\u5de6\u53f3\u3002\u4e3a\u4e86\u5e2e\u52a9\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u6211\u4e3a\u6c83\u5c14\u592b\u00b7\u5510\u6069(Wolf Down)\u7684\u4e00\u4f4dD\u00f6ner\u6574\u7406\u4e86\u4e00\u4e2a\u7c97\u7565\u7684\u6210\u672c\u7ec6\u76ee\uff0c\u8ba9\u4f60\u5bf9\u5b83\u662f\u5982\u4f55\u5206\u89e3\u7684\u6709\u4e00\u4e2a\u6982\u5ff5\u3002\n\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u9762\u5305\u548c\u86cb\u767d\u8d28\uff0c\u98df\u54c1\u6210\u672c\u6bd4\u63a8\u8350\u7684\u8981\u9ad8\u3002\u6211\u4eec\u60f3\u8981\u6700\u597d\u3001\u6700\u65b0\u9c9c\u7684\u9178\u9762\u56e2\u505a\u6211\u4eec\u7684d\u00f6ner\u9762\u5305\uff0c\u6240\u4ee5\u6211\u4eec\u548cArtisin\u5408\u4f5c\uff0c\u4ed6\u4e3a\u6211\u4eec\u5b9a\u5236\u4e86\u70d8\u7119\u3002\u8fd9\u6bd4\u9884\u5148\u5305\u88c5\u7684\u76ae\u5854\u997c\u8d35\u5f97\u591a\uff0c\u4f46\u6839\u636e\u597d\u8bc4\uff0c\u8fd9\u662f\u5b8c\u5168\u503c\u5f97\u7684\u3002\u81f3\u4e8e\u86cb\u767d\u8d28\uff0c\u6211\u4eec\u4e0d\u4ec5\u4f7f\u7528\u9ad8\u8d28\u91cf\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u4e0e\u5f53\u4eca\u8bb8\u591a\u5730\u65b9\u76f8\u53cd\u7684\u662f\uff0c\u6211\u4eec\u5728\u86cb\u767d\u8d28\u4e0a\u5e76\u4e0d\u541d\u556c\u3002\u5927\u591a\u6570\u5730\u65b9\u5e73\u5747\u6bcf\u4efd75-100\u514b\u3002\u6211\u4eec\u8d85\u8fc7125\u514b\u3002\u56e0\u4e3a\u90a3\u662f\u56e0\u4e3a..\u3002\n\u65e2\u7136\u6211\u4eec\u62d2\u7edd\u727a\u7272\u9002\u5f53\u7684\u4efd\u989d\u548c\u4ea7\u54c1\u8d28\u91cf\uff0c\u6211\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u627e\u5230\u5176\u4ed6\u65b9\u6cd5\u6765\u964d\u4f4e\u6210\u672c\u3002\u6211\u4eec\u8bbe\u8ba1\u7684\u7cbe\u7b80\u83dc\u5355\u6b63\u662f\u4e3a\u6b64\u800c\u8bbe\u8ba1\u7684--\u4f18\u5316\u8fd0\u8425\u6210\u672c\u4ee5\u8865\u507f\u98df\u54c1\u6210\u672c\u3002\u4e0d\u8fc7\uff0c\u5982\u4f60\u6240\u89c1\uff0c\u72fc\u541e\u864e\u54bd\u4e4b\u540e\uff0c\u5c31\u6240\u5269\u65e0\u51e0\u4e86\u3002\u5927\u6982\u4e00\u7f8e\u5143\u5de6\u53f3\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u51fa\u552e\u5927\u91cf\u7684\u591a\u7eb3\u6765\u8d5a\u53d6\u4e00\u70b9\u5229\u6da6\u3002\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u8fd9\u91cc\u6ca1\u6709\u4eba\u80fd\u8d5a\u5230\u51e0\u767e\u4e07\uff0c\u53ea\u662f\u60f3\u5b58\u70b9\u94b1\u3002\n\u597d\u7684\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u600e\u6837\u624d\u80fd\u964d\u4f4e\u6210\u672c\u5462\uff1f\u9664\u4e86\u6269\u5f20\u4ee5\u4ece\u89c4\u6a21\u7ecf\u6d4e\u4e2d\u83b7\u76ca(\u5373\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5927\uff1f", "note_en": "Anyone can publish on Medium per our  Policies, but we don\u2019t fact-check every story. For more info about the coronavirus, see  cdc.gov.\n  COVID 19 is about to kill restaurants by the thousands. This pandemic is the ultimate pressure test and restaurants are failing hard. Think about it: when we come out of this, your favourite food spots might not be there any more. Why are they so fucked? Let me explain.\n Margins in the restaurant industry are notoriously small. Like tiny, actually. For reference, margins for banking, accounting, and legal services come in around 18\u201325%, healthcare 12-15%, and software 15\u201325%. Restaurants? 3\u20139%.  Ya, like single digit. These razor thin profit margins have left restaurants with zero reserves. So when a crisis hits ( like right now), they are pretty much screwed. Restaurant owners \u2019only options are to swallow their pride, beg, and hope for help \u2014or throw in the proverbial  ...\n So, why are the margins so bad anyway? Well, it starts with the fact that the industry as a whole shot itself in the foot when it started competing on price. See, it wasn\u2019t always this way \u2014 margins used to be double, if not triple, what they are now. But for the past couple decades, while menu prices should have been rising to keep up with things like inflation and rapidly increasing rent, price wars instead drove them down ( $1 value meal anyone?). All this eroded margins til restaurants were  ...\n \u201cEven widely lauded restaurateurs are taking ever-smaller earnings. The 15-20% margins of 20 years ago have dwindled to a mere 4-7% today.\u201d \u2014  Philly Mag\n That brings me to my next point: our lack of understanding or appreciation of the true cost of running a food operation.  We just don\u2019t know.And our assumptions are way off. To be honest, I didn \u2019t know most of this either before I opened Wolf Down (quick serve German Street Food). And let me tell you, it was quite the eye opener! I \u2019ll share what I discovered through my experience to shed light on why restaurants are so fucked, why we are (at least in part) accountable, and how we have the power  ...\n  First we need to understand how restaurant margins work. Don\u2019t worry, I\u2019ll keep it simple. Profit margin is what\u2019s left of sales revenue after subtracting all expenses to get food into your belly. This includes food cost (COGS), labour cost, and overhead. It seems pretty straight forward at first, but there are a lot of  hidden costs that might surprise you. I\u2019ll share just a few that I\u2019d never even thought about before Wolf Down.\n Food cost obviously includes all the ingredients.  What we often forget though are things like waste and packaging cost, which can add up fast. Our take-out bowls, for example, cost $0.35 each. Add a fork, bag and napkins and that \u2019s a nice little bite out of our profit margin. I was also somehow convinced that getting product from big food suppliers would be cheaper since we buy in bulk. Apparently that \u2019s not always the case. For some things yes, but for others, they up-charge. Drinks for  ...\n In terms of overhead costs, there \u2019s the obvious stuff like rent, utilities, insurance, internet, bookkeeping, payment processing, etc. Then there \u2019s all this other stuff I \u2019d never thought about \u2014like $300/month for waste management (we \u2019re so used to free garbage pick-up at home that I never anticipated having to pay for it). Then there \u2019s $150 for linen service to wash all the cleaning towels, another $150 for dishwasher rental, another $150 for grease trap servicing, and don \u2019t forget  ...\n All-in, food cost generally eats up around 33% of revenue, labour chews up another 33%, and hopefully overhead is low enough to have leftovers. Ratios vary based by restaurant type, but profit margins usually land around 3\u20139%. To help illustrate this, I put together a rough breakdown of costs for a d\u00f6ner at Wolf Down to give you an idea of how it all breaks down.\n  In our case, food cost is higher than recommended due to our bread and proteins. We wanted the best, freshest sourdough for our d\u00f6ner bread, so we partnered with Artisin who bakes it custom for us. This is much pricier than pre-packaged pitas but, based on the raving reviews, totally worth it. As for the protein, not only do we use high quality stuff, but contrary to many spots these days, we don \u2019t skimp on protein. Most places average 75 \u2013100g per portion. We go over 125g. Cause that  ...\n Since we refuse to sacrifice proper portions and product quality, I knew we had to find other ways to keep costs down. We designed our streamlined menu precisely for this \u2014optimizing operating costs to compensate for food cost. Still, as you can see, after wolfing down, there isn \u2019t much left. Roughly a dollar or so. That means we need to sell a whole lot of d\u00f6ner to make a little profit. All I \u2019m trying to say is, no one is making millions here, just trying to save up a little something  ...\n Ok so, how can we lower costs? Other than expanding to take benefit from economies of scale (ie. why big chains are doing ok), the options, well, you\u2019re not gonna like them\u2026\n Option 1: Lower food cost. Lower quality ingredients cost less.  But wait, they also won\u2019t be as fresh or tasty.  You cool with that? Restaurants already do all they can to negotiate with suppliers to lower cost \u2014 and when they go too far, it shows. Personally, it makes me want to cry when my favourite sandwich spot replaces its fresh crusty sourdough for bagged pre-sliced Wonder trash.  But I get it. Though in my head I\u2019m yelling \u2018 I\u2019ll pay for the good shit \u2014please, bring it back!\u2019. So  ...\n Option 2: Cut overhead costs. Again, restaurants do their best to negotiate with landlords, insurance companies, utilities, internet providers\u2026 and we all know how well that tends to work. If you want a nice clean dining experience \u2014 it is what is, and it costs what it costs. Not much wiggle room here.\n Option 3: Reduce labour cost.  How long do you want to wait for food? Is it ok if it\u2019s not cooked perfectly cause one guy is trying to do five things at once? Besides, it\u2019s not like we can we pay them any less \u2014 most make minimum wage. If anything, we don\u2019t pay them enough. If you think they are  \u2018non-skilled workers\u2019 \u2014 are you saying feeding you is not a valuable skill? I\u2019ve worked with great people in tech and finance, but they\u2019re no better or harder working than our  Wolf Pack. This  ...\n \u201cIn most people\u2019s opinion, an office job is preferable to a career in the restaurant industry. Which is not to say it\u2019s not worthy work. If this pandemic has proven anything, it\u2019s how essential those working in the food industry are. Instead, these assumptions come from a cycle of low pay and bad benefits that devalue both the job itself and the people doing it.\u201d \u2014  Eater\n And in case anyone is wondering \u201c Then how come Wolf Down can afford to feed healthcare workers for free?\u201d What\u2019s the deal?  Fine. For the sake of this post, I\u2019ll come clean: it comes from our (the owner\u2019s) pockets, not Wolf Down\u2019s.\n What about third-party delivery? Do they help or hurt restaurants? That\u2019s a whole other conversation I dive into in my post \u2018 Why Uber Eats is A Necessary Evil\u2019 \u2014 check it out if interested in learning more about that.\n How about tips? Tips are hugely appreciated and really help staff survive, which is awesome. Unfortunately, however, tips do not impact margins. Even though tipping generously is always commendable \u2014  please keep it up!\u2014it does not solve the problem.  So what do we do?\n Desperate times call for desperate measures. Although we can\u2019t change the past, we can reshape the future. Let\u2019s learn something from COVID 19. Let\u2019s create positive change out of a bad situation and finally fix this mess. If you love food as much as I do, you might want to pay attention.\n Whenever the margin issue comes up, the answer always seems to be \u2018 just lower costs\u2019.  Like duh. But wait! We already trimmed all the fat\u2026 Decreasing costs won\u2019t solve this. That leaves only one option: increasing sales revenue. We\u2019ve been looking at it all wrong. The simple truth is we don\u2019t pay enough. Without realizing it, we\u2019ve been cheaping out on restaurants.\n The craziest thing to me in all this is, I love food. Like, obsessed.  Who\u2019s with me? My point is: if eating is literally one of our favourite things ever, are we willing to pay adequately for it? Do we value it sufficiently? Honestly, seems to me like, if there\u2019s one industry that should be profitable, it\u2019s restaurants. One, we have to eat. Two, we love to eat! What if you could never have your favourite pizza, burger, pasta, etc, again? What would you pay to save it?\n Reports show that, due to COVID 19, 1 in 10 restaurants is already gone for good. And this is just the beginning. When restaurants do re-open (those that survive), they will be in rough shape. This is when we need to step up to ensure that those who put food on our tables can keep food on theirs.\n Let\u2019s call it OPTION 19. As in,  we already tried all the other options and none work. As in,  fuck you COVID 19! It\u2019s very simple: let\u2019s reset our expectations and restore respectable margins. Like back in the 1990\u2019s. Like many other industries today. We can do better. They deserve better. Let\u2019s aim for 19%.\n How do  we do this? By supporting your favourite restaurants adjusting menu prices as needed.  That\u2019s it. For too long they\u2019ve avoided doing this out of fear we would rebel. Armed with new knowledge, let\u2019s be more understanding. That\u2019s how we #supportlocal. That\u2019s how we keep enjoying our favourite foods. It won\u2019t kill us. It will save them.\n  If you feel like it, please share, post, tag, like, publish, send to journalist, tell your friends \u2014 whatever you can to help this all be for something.", "posttime": "2020-05-02 18:06:51", "tags": "\u4ed6\u5988\u7684,restaurants,\u6210\u672c,food", "title": "\u4e3a\u4ec0\u4e48\u9910\u9986\u8fd9\u4e48\u4ed6\u5988\u7684\u70c2\uff1f", "title_en": "Why Restaurants Are So Fucked", "transed": 0, "url": "https://medium.com/@joelleparenteau/why-are-restaurants-so-fucked-ca07c4624745", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u4ed6\u5988\u7684", "\u6210\u672c", "food"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000331, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u53bb\u4e16\u524d\u63a5\u53d7\u7684\u6700\u540e\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0c\u5171\u4eab\u8f6f\u4ef6\u5148\u9a71\u5409\u59c6\u00b7\u5df4\u987f(Jim Button)\u8868\u793a\uff0c\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\u4e4b\u524d\uff0c\u4ed6\u201c\u5df2\u7ecf\u653e\u5f03\u4e86\u5171\u4eab\u8f6f\u4ef6\u6e38\u620f\u7684\u60f3\u6cd5\u201d\u3002\u5f53\u65f6\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5408\u7406\u7684\u7acb\u573a\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u76f8\u5f53\u591a\u8bc1\u636e\u7684\u7acb\u573a\u3002\u867d\u7136\u6709\u5f88\u591a\u4eba\u8bd5\u56fe\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u9500\u552e\u4ed6\u4eec\u7684\u6e38\u620f\uff0c\u4f46\u5728\u6e38\u620f\u4e2d\u8fd8\u6ca1\u6709\u4e0eAndrew Fluegelman\u3001Jim Button\u6216Bob Wallace\u76f8\u5ab2\u7f8e\u7684\u5171\u4eab\u8f6f\u4ef6\u6210\u529f\u6848\u4f8b\u3002\n\u5f88\u81ea\u7136\uff0c\u5f88\u591a\u4eba\u90fd\u5728\u601d\u8003\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u6837\u3002\u4ed6\u4eec\u5f97\u51fa\u7684\u7b54\u6848\u5f80\u5f80\u5e26\u6709\u90a3\u4e2a\u65f6\u4ee3\u7684\u504f\u89c1\uff0c\u8ba4\u4e3a\u7f16\u7a0b\u6216\u73a9\u65e0\u804a\u7684\u6e38\u620f\u4e0d\u5982\u5236\u4f5c\u6216\u4f7f\u7528\u5446\u677f\u7684\u5546\u4e1a\u8f6f\u4ef6\u90a3\u4e48\u6b63\u76f4\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5373\u4f7f\u662f\u6709\u504f\u89c1\u7684\u7b54\u6848\u901a\u5e38\u4e5f\u6709\u4e00\u5c42\u771f\u5b9e\u6027\u3002\u60a8\u4e0e\u60a8\u7684\u7535\u4fe1\u7a0b\u5e8f\u3001\u6570\u636e\u5e93\u6216\u6587\u5b57\u5904\u7406\u7a0b\u5e8f\u6709\u957f\u671f\u7684\u5408\u4f5c\u5173\u7cfb\uff0c\u56e0\u6b64\u7ed9\u5176\u4f5c\u8005\u53d1\u9001\u652f\u7968\u4ee5\u52a0\u5165.\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u7f3a\u4e4f\u4eba\u8109\u3001\u62b1\u8d1f\u548c\u624d\u534e\u7684\u6e38\u620f\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u9664\u4e86\u5171\u4eab\u8f6f\u4ef6\u6a21\u578b\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u9009\u62e9\uff0c\u53ef\u4ee5\u8d70\u4f20\u7edf\u7684\u5546\u4e1a\u8def\u7ebf-\u8fd9\u79cd\u66ff\u4ee3\u65b9\u6848\u6bd420\u4e16\u7eaa80\u5e74\u4ee3\u7684\u5171\u4eab\u8f6f\u4ef6\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u524d\u666f\uff0c\u56e0\u4e3a\u81f3\u5c11\u53ef\u4ee5\u4ece\u81ea\u5df1\u7684\u52aa\u529b\u4e2d\u83b7\u5f97\u4e00\u4e9b\u62a5\u916c\u3002\u8fd9\u662f\u5149\u76d8\u6742\u5fd7\u4e2d\u5947\u7279\u7684\u5c0f\u805a\u5c45\u533a\uff0c\u6240\u4ee5\u6211\u4eec\u4eca\u5929\u5fc5\u987b\u4ece\u90a3\u91cc\u5f00\u59cb\u6211\u4eec\u7684\u6545\u4e8b\u3002\n\u78c1\u76d8\u6742\u5fd7\u80cc\u540e\u7684\u6838\u5fc3\u7406\u5ff5\u51e0\u4e4e\u548c\u4e2a\u4eba\u8ba1\u7b97\u673a\u672c\u8eab\u4e00\u6837\u53e4\u8001\u30021978\u5e742\u6708\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6208\u83b1\u5854\u7684\u62c9\u5c14\u592b\u00b7\u9ea6\u514b\u5c14\u7f57\u4f0a(Ralph McElroy)\u51fa\u7248\u4e86\u7b2c\u4e00\u671fCload\uff0c\u8fd9\u662fRadio Shack TRS-80\u6bcf\u6708\u4e00\u6b21\u7684\u8f6f\u4ef6\u96c6\u5408\uff0c\u662f\u7b2c\u4e00\u53f0\u9884\u88c5\u7684\u5fae\u578b\u8ba1\u7b97\u673a\uff0c\u83b7\u5f97\u4e86\u771f\u6b63\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u9500\u552e\u6570\u5b57\u3002McElroy\u5728\u4ed6\u7684\u4ecb\u7ecd\u6027\u793e\u8bba\u4e2d\u5199\u9053\uff1a\u201c\u8981\u52a0\u5165\u591a\u5c11\u6709\u4e9b\u7cbe\u82f1\u7684\u8ba1\u7b97\u673a\u7528\u6237\u4ff1\u4e50\u90e8\uff0c\u4e00\u4e2a\u4eba(\u4ee5\u524d)\u5fc5\u987b\u5b66\u4e60\u7528\u4e00\u79cd\u76f8\u5f53\u2026\u2026\u7684\u8bed\u8a00\u8bf4\u8bdd\u7684\u795e\u79d8\u827a\u672f\u3002\u201d\n\u5230\u4e861981\u5e74\uff0cTRS-80\u7684\u65e9\u671f\u52bf\u5934\u5f00\u59cb\u51cf\u5f31\uff0c\u529f\u80fd\u66f4\u5f3a\u7684Apple II\u8868\u73b0\u5f3a\u52b2\u3002\u4ec0\u91cc\u592b\u6ce2\u7279\u8def\u6613\u65af\u5b89\u90a3\u5dde\u7acb\u5927\u5b66\u533b\u7597\u4e2d\u5fc3(Louisiana State University Medical Center)\u7684\u7a0b\u5e8f\u5458\u5409\u59c6\u00b7\u66fc\u5384\u59c6(Jim Mangham)\u8ba4\u4e3a\uff0c\u5e02\u573a\u5df2\u7ecf\u51c6\u5907\u597d\u4e3aApple II\u63a8\u51fa\u7b49\u540c\u4e8eCLOAD\u7684\u4ea7\u54c1-\u5c3d\u7ba1\u5b83\u4e0d\u662f\u4ee5\u76d2\u5f0f\u78c1\u5e26\u53d1\u5e03\u7684\uff0c\u800c\u662f\u5728\u8f6f\u76d8\u4e0a\u53d1\u5e03\u7684\uff0c\u800c\u8f6f\u76d8\u73b0\u5728\u6b63\u5728\u7a33\u6b65\u83b7\u5f97\u5438\u5f15\u529b\u3002\u4ed6\u62db\u52df\u4e86\u4e00\u4e2a\u53eb\u963f\u5c14\u00b7\u7ef4\u79d1\u7ef4\u4e4c\u65af\u7684\u670b\u53cb\u6765\u548c\u4ed6\u4e00\u8d77\u521b\u4e1a\uff0c\u4e24\u4eba\u51c6\u5907\u4e86\u7b2c\u4e00\u671f\u4ed6\u4eec\u559c\u6b22\u7684\u6742\u5fd7.\u3002\nMangham\u548cVekovius\u4e00\u5f00\u59cb\u53ea\u670950\u4e2a\u7528\u6237\uff0c\u5c31\u628a\u8f6f\u76d8\u6253\u9020\u6210\u4e86Apple II\u8ba1\u7b97\u9886\u57df\u7684\u4e00\u652f\u771f\u6b63\u7684\u529b\u91cf\u3002\u4ed6\u4eec\u6e05\u695a\u5730\u610f\u8bc6\u5230\uff0c\u4ed6\u4eec\u81ea\u5df1\u4e0d\u53ef\u80fd\u5199\u51fa\u8db3\u591f\u7684\u8f6f\u4ef6\u6765\u586b\u6ee1\u6bcf\u4e2a\u6708\u7684\u78c1\u76d8\uff0c\u6240\u4ee5\u4ed6\u4eec\u4ece\u4e00\u5f00\u59cb\u5c31\u52aa\u529b\u4e0e\u8bfb\u8005\u5efa\u7acb\u5171\u751f\u5173\u7cfb\uff1b\u4ed6\u4eec\u53d1\u5e03\u7684\u5927\u90e8\u5206\u7a0b\u5e8f\u90fd\u6765\u81ea\u8bfb\u8005\u81ea\u5df1\u3002\u5728\u65e9\u671f\uff0c\u4e92\u60e0\u7684\u7cbe\u795e\u6269\u5c55\u5230\u4e86\u5e0c\u671b\u8bfb\u8005\u628a\u4ed6\u4eec\u7684\u5149\u76d8\u5bc4\u56de\u6765\u7684\u5730\u6b65\u2026\u2026\u3002\n\u56e0\u6b64\uff0c\u66fc\u683c\u59c6\u548c\u7ef4\u79d1\u7ef4\u4e4c\u65af\u7684\u5c0f\u516c\u53f8\u8f6f\u76d8\u51fa\u7248\u516c\u53f8\u6162\u6162\u5730\u53d8\u6210\u4e86\u4e00\u4e2a\u540d\u526f\u5176\u5b9e\u7684\u78c1\u76d8\u6742\u5fd7\u5e1d\u56fd\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u66fc\u683c\u59c6\u4ece\u65e5\u5e38\u8fd0\u8425\u4e2d\u9000\u4e86\u4e0b\u6765\uff0c\u6210\u4e3aVekovius\u7684\u8fd1\u4e4e\u6c89\u9ed8\u7684\u5408\u4f5c\u4f19\u4f34\uff0cVekovius\u603b\u662f\u4e24\u4eba\u4e2d\u66f4\u4e13\u6ce8\u4e8e\u5546\u4e1a\u7684\u4eba\u30021983\u5e748\u6708\uff0c\u4ed6\u5c06\u8f6f\u76d8\u6269\u5c55\u5230\u6bcf\u671f\u4e24\u5f20\u78c1\u76d8\uff1b1984\u5e741\u6708\u5f00\u59cb\u8fdb\u5165\u96f6\u552e\u5e97\uff1b1984\u5e746\u6708\u4e3aCommodore 64\u63a8\u51fa\u4e86\u4e00\u672c\u540d\u4e3aLoadstarfor the Commodore 64\u7684\u914d\u5957\u78c1\u76d8\u6742\u5fd7\u3002\u8f6f\u76d8\u5728\u4f1f\u5927\u7684..\u3002\n\u4e3a\u4e86\u9f13\u52b1\u8f6f\u4ef6\u63d0\u4ea4\uff0c\u6240\u6709\u7684\u8f6f\u76d8\u6742\u5fd7\u90fd\u5b9a\u671f\u4e3e\u529e\u4e86\u4e00\u573a\u540d\u4e3aCodeQuest\u7684\u7f16\u7a0b\u7ade\u8d5b\u3002\u9f13\u52b1\u8bfb\u8005\u53d1\u9001\u4efb\u4f55\u7c7b\u578b\u7684\u7a0b\u5e8f\uff0c\u9664\u4e86\u8f6f\u76d8\u6700\u7ec8\u53d1\u5e03\u83b7\u5956\u8f6f\u4ef6\u6240\u9700\u652f\u4ed8\u7684\u5956\u91d1\u5916\uff0c\u8fd8\u5c06\u4e89\u593a1000\u7f8e\u5143\u7684\u51a0\u519b\u6295\u7a3f\u5956\u91d1\u3001500\u7f8e\u5143\u7684\u7b2c\u4e8c\u540d\u5956\u91d1\u548c250\u7f8e\u5143\u7684\u7b2c\u4e09\u540d\u5956\u91d1\u3002\u5927\u84dd\u76d8\u7684\u7b2c\u4e8c\u8f6e\u6bd4\u8d5b\u4e8e1988\u5e741\u670831\u65e5\u7ed3\u675f\uff0c\u6700\u7ec8\u4ea7\u751f\u4e86\u4e24\u540d\u83b7\u80dc\u8005\uff0c\u4ed6\u4eec\u7684\u6210\u7ee9\u76f8\u5f53\u4e0d\u9519.\u3002\n\u5728\u6bd4\u8d5b\u7684\u65f6\u5019\uff0c\u7c73\u52d2\u4f3c\u4e4e\u6ca1\u6709\u53bb\u8fc7\u751f\u6d3b\u4e2d\u7684\u4efb\u4f55\u5730\u65b9.\u3002\u5728\u4ed6\u5feb30\u5c81\u7684\u65f6\u5019\uff0c\u4ed6\u4ecd\u7136\u4ee5\u4e00\u79cd\u76f8\u5f53\u6742\u4e71\u65e0\u7ae0\u7684\u65b9\u5f0f\u4e0a\u5927\u4e13\uff0c\u540c\u65f6\u5728\u6570\u636e\u5904\u7406\u56fe\u817e\u67f1\u7684\u4f4e\u7aef\u505a\u4e00\u4e9b\u6ca1\u6709\u524d\u9014\u7684\u5de5\u4f5c\uff0c\u6bd4\u5982\u7167\u770b\u4ed6\u6240\u5728\u5b66\u9662\u7684\u8ba1\u7b97\u673a\u5ba4\u3002\u4ed6\u7684\u719f\u4eba\u51e0\u4e4e\u4e0d\u6307\u671b\u4ed6\u642c\u51fa\u7236\u6bcd\u7684\u623f\u5b50\uff0c\u66f4\u4e0d\u7528\u8bf4\u6539\u53d8\u4e00\u4e2a\u884c\u4e1a\u4e86\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u770b\u4f3c\u61d2\u60f0\u7684\u4eba\u5374\u6709\u96c4\u5fc3\u58ee\u5fd7\uff0c\u575a\u6301\u4e0d\u61c8\uff0c\u654f\u9510\u7684\u8425\u9500\u5934\u8111\u2026\u2026\u3002\n\u5728\u53c2\u52a0CodeQuest\u7ade\u8d5b\u4e4b\u524d\uff0c\u4ed6\u4e3a\u5f53\u5730\u62a5\u7eb8\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u6e38\u620f\u7684\u4e13\u680f\uff0c\u5199\u4e86\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u51fb\u8d25\u6d41\u884c\u8857\u673a\u6e38\u620f\u7684\u4e66\uff0c\u6700\u540e\u4f46\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u6d4b\u8bd5\u4e86\u65e9\u671f\u7684\u6e38\u620f\u5171\u4eab\u8f6f\u4ef6\u5e02\u573a\uff1a\u4ed6\u4ee5Apogee Software\u7684\u540d\u4e49\u7f16\u5199\u5e76\u5206\u53d1\u4e86\u51e0\u4e2a\u5171\u4eab\u8f6f\u4ef6\u6587\u672c\u5192\u9669-\u8fd9\u4e2a\u540d\u5b57\u540e\u6765\u5728\u7279\u5b9a\u7684\u6e38\u620f\u73a9\u5bb6\u4e2d\u53d8\u5f97\u975e\u5e38\u975e\u5e38\u6709\u540d\u3002\u4f46\u8fd9\u4e00\u6b21\uff0c\u4ed6\u5bf9\u8fd9\u4e2a\u53cd\u5e94\u611f\u5230\u5931\u671b\uff0c\u5c31\u50cf\u5176\u4ed6\u4eba\u4e00\u6837\u2026\u2026\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0cKroz\u738b\u56fd\u662f\u65e7\u5927\u578b\u673aClassi\u7684\u6df7\u5408\u4f53", "note_en": "In one of the last interviews he gave before his death, shareware pioneer Jim Button said that he \u201chad written off the idea of shareware games\u201d prior to the beginning of the 1990s. At the time, it seemed a reasonable position to take, one based on quite a bit of evidence. While any number of people had tried to sell their games this way, there had been no shareware success stories in games to rival those of Andrew Fluegelman, Jim Button, or Bob Wallace.\n Naturally, many pondered why this should be so. The answers they came up with were often shot through with the prejudices of the period, which held that programming or playing frivolous games was a less upstanding endeavor than that of making or using stolid business software. Still, even the prejudiced answers often had a ring of truth. You had a long-term relationship with your telecommunications program, database, or word processor, such that sending its author a check in order to join the  ...\n Luckily, there was an alternative to the shareware model for those game programmers who lacked the right combination of connections, ambitions, and talents to go the traditional commercial route \u2014 an alternative that offered a better prospect than shareware during the 1980s of getting paid at least a little something for one\u2019s efforts. It was the odd little ghetto of the disk magazines, and so it\u2019s there that we must start our story today.\n   The core idea behind the disk magazines is almost as old as personal computing itself. In February of 1978, Ralph McElroy of Goleta, California, published the first issue of  CLOAD, a monthly collection of software for the  Radio Shack TRS-80, the first pre-assembled microcomputer to rack up really impressive sales numbers. \u201cTo join the somewhat elite club of computer users, \u201dwrote McElroy in his introductory editorial, \u201cone [previously] had to learn the mysterious art of speaking in a rather  ...\n By 1981, the TRS-80\u2019s early momentum was beginning to flag and the more capable  Apple II was coming on strong. Jim Mangham, a programmer at the Louisiana State University Medical Center in Shreveport, decided that the market was ready for a  CLOADequivalent for the Apple II \u2014albeit published not on cassettes but on floppy disks, which were now steadily gaining traction. He recruited a buddy named Al Vekovius to join him in the venture, and the two prepared the first issue of something they  ...\n Starting with just 50 subscribers, Mangham and Vekovius built  Softdiskinto a real force in Apple II computing. Well aware that they couldn \u2019t possibly write enough software themselves to fill a disk every single month, they worked hard from the beginning to foster a symbiotic relationship with their readership; most of the programs they published came from the readers themselves. In the early days, the spirit of reciprocity extended to the point of expecting readers to mail their disks back  ...\n Thus Mangham and Vekovius\u2019s little company Softdisk Publishing slowly turned into a veritable disk-magazine empire. In time, Mangham stepped back from day-to-day operations, becoming a nearly silent partner to Vekovius, always the more business-focused of the pair. He expanded  Softdisk to two disks per issue in August of 1983; started reaching retail stores by January of 1984; launched a companion disk magazine called  Loadstarfor the Commodore 64 in June of 1984. Softdisk survived the great  ...\n   In order to encourage software submissions, all of the Softdisk magazines ran a periodic programming competition called CodeQuest. Readers were encouraged to send in programs of any type, competing for prizes of $1000 for the top submission, $500 for second place, and $250 for third place, on top of the money Softdisk would pay upon eventually publishing the winning software.  Big Blue Disk\u2018s second incarnation of the contest ended on January 31, 1988, yielding two winners that were fairly  ...\n At the time of the contest, Miller didn \u2019t seem to be going much of anywhere in life. In his late twenties, he was still attending junior college in a rather desultory fashion whilst working dead-end gigs at the lower end of the data-processing totem pole, such as babysitting his college \u2019s computer lab. His acquaintances hardly expected him to ever move out of his parents \u2019house, much less change an industry. Yet this seeming slacker had reserves of ambition, persistence, marketing acumen,  ...\n  Before entering the CodeQuest contest, he\u2019d written a column on games for the local newspaper, written a book on how to beat popular arcade games, and, last but not least, tested the early shareware market for games: he\u2019d written and distributed  a couple of  shareware text adventuresunder the name of Apogee Software \u2014a name which would later become very, very famous among a certain segment of gamers. But on this occasion he was disappointed by the response, just like everyone else making  ...\n Put crudely,\u00a0 Kingdom of Kroz was a mash-up of the old mainframe classic   Rogue and the arcade game   Gauntlet \u2014 or, if you like, a version of  Rogue that  played in real time and had handcrafted levels instead of procedurally-generated ones. It wasn\u2019t much to look at \u2014 like classic  Rogue, it was rendered entirely in ASCII graphics \u2014 but many people found it surprisingly addictive once they got into it. It went over very well indeed with  Big Blue Disk\u2018s subscribers when it appeared in the  ...\n While he waited on  Big Blue Diskto release those sequels, Miller started to explore a new idea for marketing games outside the traditional publishing framework. In fact, this latest idea would eventually prove his greatest single stroke of marketing genius, even if its full importance would take some time yet to crystallize. He would later sum up his insight in an interview: \u201cPeople aren \u2019t willing to pay for something they \u2019ve already got in their hands, but they are willing to pay  ...\n Miller and George Broussard, his longtime best friend and occasional partner in the treacherous world of shareware, made an engine for multiple-choice trivia games \u2014 not exactly a daunting programming challenge after the likes of  Kroz. They compiled sets of questions dealing with different topics: general trivia,  vocabulary,  the original  Star Trek and  Star Trek: The Next Generation. They created \u201cvolumes \u201din each category consisting of 100 questions. Then they released the first  ...\n Alas, the scheme proved not to be a surefire means of selling trivia games; the economics of getting just 100 questions for $4 were perhaps a bit dodgy even in the late 1980s, when just about everything involving computers cost exponentially more than it does today. But a seed had been planted; the next time Miller tried something similar, he would finally hit pay dirt.\n The next time in question came in the second half of 1989, just after  Big Blue Disk published the last  Kroz game. The magazine\u2019s contract terms were far more generous than those of any traditional software publisher: Miller had retained the  Kroz copyright throughout, and the magazine\u2019s license to it became non-exclusive as soon as it published the third and last game of the trilogy. Miller, in other words, could now do whatever he wished with his three  Krozgames, while still benefiting  ...\n  So, he decided to try the same scheme he had used with his trivia games: release the first part of the trilogy for free, but ask people to send him $7.50 each for the second and third parts. A tactic that had prompted an underwhelming response the first time around worked out much better this time. Unlike those earlier exercises in multiple choice, the  Kroz trilogy was made up of real  games\u2014or, perhaps better said, was actually one real game artificially divided into three. After  ...\n In short, Scott Miller \u2014and shareware gaming in general \u2014finally got their equivalent to that day when Jim Button returned home from a Hawaiian vacation to find his basement drowning in paid registrations. Suddenly Miller as well was drowning in mail, making thousands of dollars every month. He \u2019d done it; his dogged persistence had paid off. He \u2019d found a way around the machinations of the big publishers, found a way to sell games on his own terms, cracked the code of shareware  ...\n From here, things happened very, very quickly. Miller whipped up a second trilogy of  Kroz games to sell under the same model \u2014  first part free,  second and  thirdmust be paid for \u2014and was rewarded with more checks in the mail. Most people at this point would have been content to continue writing lone-wolf games and reaping huge rewards \u2014but Miller was, as I \u2019ve already noted, a man of unusual ambition. At heart, he was more passionate about marketing games than programming them;  ...\n Already before 1989 was over, he had reached out to a Silicon Valley youth named Todd Raplogle, who had created and uploaded to various bulletin-board systems a little action-adventure called  Caves of Thor that was similar in spirit to the  Kroz games. Miller convinced Raplogle to re-release his free game under the Apogee imprint, and to make two paid sequels to accompany it. Raplogle followed that trilogy up with a tetralogy called   Monuments of Mars. Meanwhile George Broussard  ...\n By 1991, Apogee was off and running as a real business. Miller quit his dead-end day jobs, moved out of his parents\u2019 house, convinced Broussard to join him as a full-time partner, found an accountant, leased himself an office, and started hiring helpline attendants and clerical help to deal with a workload that was mushrooming for all the right reasons. His life had undergone a head-spinning transformation in the span of less than two years.\n At this point, then, we might want to ask ourselves in a more holistic way just  whyApogee became so successful so quickly. Undoubtedly, a huge part of the equation is indeed the much-vaunted \u201cApogee model \u201dof selling shareware: hook them with a free game, then reel them in with the paid sequels. Yet that wasn \u2019t a silver bullet in and of itself, as Miller \u2019s own early lack of success with his trivia games illustrates. It had to be executed just right \u2014which tells us that Miller  ...\n If all of this sounds a bit mercenary, so be it; Miller was as hard-nosed as capitalists come, and he certainly wasn \u2019t running Apogee as a charity. Yet it \u2019s seldom good business, at least in the long run, to sell junk, and this too Miller understood. Apogee maintained a level of quality control that was often lacking even from the big publishers, who often felt compelled to release a game before its time to meet the Christmas market or to pump up the quarterly numbers.  ...\n I \u2019ll be the first to admit that the Apogee style of game does little for me. Still, my personal tastes in no way blind me to the reality that these unprepossessing but well-crafted little games filled a space in the market of the early 1990s that the big publishers were missing entirely as they rushed to cement a grand merger of Silicon Valley and Hollywood and begin the era of the \u201cinteractive movie. \u201dWhile the boxed-games industry went more and more high-concept, with  ...\n But of course a business model as profitable as Miller \u2019s must soon attract rivals who hope to execute it even better. Already in 1992, a company called Epic MegaGames appeared to challenge Apogee for the title of King of Shareware; they as well employed Scott Miller \u2019s episodic approach, and also echoed Apogee \u2019s proven action-first design aesthetic. Shareware gaming was becoming a thriving shadow industry of its own, right under the noses of the big boys who were still  ...\n  This shareware sales chart from July of 1993 shows how dominant Apogee was at that time. Seven out of the top ten games are theirs, with a further two going to Epic MegaGames, their only remotely close competitor. Although the fast-and-simple design aesthetic in which those companies specialized ruled the charts, they pulled with them a long tale of many other types of shareware games, as we \u2019ll see in the next part of this article. The very fact that there existed a  ...\n Many of you doubtless have an inkling already of where this series of articles must go from here \u2014 of how not only the story of Apogee Software but also that of Softdisk Publications will feed directly into that of the most transformative computer game in history. And never fear, I\u2019ll get to all of that \u2014 but in my next article rather than this one.\n For in addition to that other story which threatens to suck all the oxygen out of the room, there are a thousand other, smaller ones of individual creators being inspired to program all kinds of games and sell them as shareware in the wake of Apogee \u2019s success. Exactly none of them made as much money from their endeavors as did Scott Miller, but some became popular enough to still be remembered today. Indeed, many of us who were around back then still have our obscure  ...\n Like the Apogee games, many other shareware titles identified holes in the market which the big publishers, who all seemed to be rushing hell-bent in the exact same direction, were failing to fill. In many cases, these were genres from which the traditional industry had actually done very well in the past, but which which it had now judged to no longer to be worth its while. For example, the years between the  collapse of Infocomin 1989 and the beginning of the Internet-based  ...\n In terms of presentation, most of these shareware games were dead ringers for the games that had been sold on store shelves five to ten years earlier. And by the same token, the people who made them in the 1990s were really not all that different from the bedroom programmers who had built the boxed-games industry in the 1980s. Just as many creators of non-game shareware were uncomfortable with time-limited or otherwise crippled software, not all creators of shareware  ...\n By way of illustration, I\u2019d like to conclude this article with a short case study of a shareware parnership that didn\u2019t make its principals rich, that didn\u2019t even allow them to quit their day jobs. In fact, neither partner ever really even  triedto achieve either of those things. They just made games in two unfashionable styles which they still happened to love, and said games made some other people with the same tastes very happy. And that was more than enough for  ...\n   Matthew remembers his best childhood Christmas ever as the one in 1983, when he was twelve years old and his family got an Apple IIe computer. A sheet of Apple-logo stickers came in the box that housed the computer, and Matthew stuck one of them on his notebook. Soon Daniel, another student at his Los Angeles-area school, noticed the sticker and came over to chat. \u201cI\u2019ve got an Apple II also!\u201d he said. Just like that, a lifelong friendship was born.\n The two joined an informal community of fellow travelers, the likes of which could be found in school cafeterias and playgrounds all over the country, swapping tips and exploits and most of all games. Their favorites of the games they traded were the text adventures of Infocom and the  Ultima CRPGs of Origin Systems; if the pair\u2019s friendship was born over the Apple II, it was cemented during the many hours they spent plumbing the depths of   Zorktogether. Matthew  ...\n So many things in life are a question of timing \u2014 not least the careers of game developers. One story which Matthew Engle shared with me when I interviewed him in preparation for this article makes that point disarmingly explicit. In 1986, Daniel, Matthew, and another friend created a BASIC text adventure called  Zapracker, which they attempted to sell through their local software stores. Matthew:\n We made our own boxes and packaged the game with the floppy disk and the manual, just like Richard Garriott did back in the day. Our box was designed to hang on a peg in a software store. We got on a bus with 25 or so copies and visited a few different stores. We\u2019d say, \u201cHey, would you like to sell this on consignment? You get half the money and we get half.\u201d A few stores took us up on it, and we sold a few copies.\n       This tale is indeed almost eerily similar of that of Richard Garriott selling a Ziploc-bagged   Akalabeth through his local Computerland just six years earlier; if anything, our heroes in 1986 would appear to have put  moreeffort into their packaging, and perhaps into their game as well, than Garriott did into his. But in the short span of barely half a decade, the possibility of parlaying a homemade game hanging on a rack in a local computer store into an iconic  ...\n Their game-making efforts were growing steadily more sophisticated, as evinced by Daniel\u2019s choice of programming languages: after starting off in Apple II BASIC, he moved on to an MS-DOS C compiler. Adopting unknowingly the approach that had already been used by everyone from  Scott Adams to  Infocom, from  Telarium to  Polarware to  Magnetic Scrolls, Daniel wrote an interpreter in C which could present a text adventure written in a domain-specific language of his  ...\n During the pair \u2019s last year in high school, the Los Angeles school district and the manufacturing conglomerate Rockwell International co-sponsored a contest for interesting student projects in computer science. Once Daniel and Matthew decided to enter it, it gave them a thing which many creators find invaluable: a deadline. They finished up their game, and submitted it alongside the technological framework that enabled it. They were soon informed that their  ...\n All of the finalists were there, demonstrating their entries. We did a couple of interviews for a local TV station. Then the dinner started. They started running down the list of winners, and before we knew it, it was down to two finalists: my and Dan\u2019s project and another one. Then they announced the other one as second place; we had won. It was quite a night!\n  Daniel and Matthew gave little initial thought to monetizing their big win. After finishing high school in 1989, they went their separate ways, at least in terms of physical location: Daniel moved to New York to study computer science, while Matthew stayed in Los Angeles to study film. But they kept in touch, and soon started talking about making another game, this time in the spirit of their other favorite type from the 1980s: an old-school  Ultima.\n It was 1991 by now, and, fed by the meteoric success of Apogee, shareware games of many different stripes were appearing. Daniel and Matthew as well finally caught the fever. They belatedly released  Skyland\u2019s Star as shareware for $15, using it as a sort of test case for the eventual marketing of their  Ultima-alike. They were among those noble or na\u00efve souls who eschewed the Apogee model in favor of releasing their whole game at once. Instead of offering  ...\n Progress on the\u00a0 Ultima-like game, which was to be called\u00a0  Excelsior Phase I: Lysandia, was inevitably slowed by their respective university studies; the biggest chunk of the work got done in the summers of 1991, 1992, and 1993, when Daniel came back to Los Angeles and they both had more free time. Then they would sit for hours many days at their favorite pizza restaurant, sketching out their plans. Matthew did most of the scenario design, graphics, and  ...\n Calling themselves by now 11th Dimension Entertainment, they finished and released  Excelsior in 1993 as shareware, with a registration price of $20. Once again, they relied on a manual, a hint book, and a map alongside players\u2019 consciences to convince them to register. Although it certainly didn\u2019t become an Apogee-sized success story,  Excelsior did garner more attention and registrations than had  Skyland\u2019s Star. It was helped not only by its being in a  ...\n As they were finishing  Excelsior, Daniel and Matthew had also been finishing their degree programs. Daniel got a programming job at Electronic Arts after a few false starts, while Matthew started a career in Hollywood that would put him, ironically given the retro nature of  Excelsior, on teams making cutting-edge CD-ROM-enabled multimedia products at companies like Disney Interactive. Despite their busy lives, they were both still excited enough by independent  ...\n The sheer quantity of labor which Matthew in particular put into this retro-game with limited commercial prospects could have been motivated only by love. Matthew:\n We went all out. I ultimately made about 3800 16 X 16-pixel tiles. It was an exhausting process. For every tile, I had to specify whether you could walk on it or it would block you. There was also transparency; we had layers of tiles, overlaid upon one another. There might be a grass tile, then the player-character tile. Then, if you\u2019re walking through a doorway, for example, the arch at the top of the doorway.\n Then, after that exhausting process, began the arduous process of putting the tiles down to create the map, which was 500 X 500 tiles if I\u2019m not mistaken \u2014 so, 250,000 tiles to place. Plus all of the town and castle and dungeon maps had to be created.\n By the time they released   Excelsior Phase II: Errondorin 1999, software distribution had changed dramatically from what it had been six years before. It was now feasible to accept credit-card registrations online, and to offer registrants the instant satisfaction of downloadable PDF documents and the like. The motivating ethic of the original shareware movement was alive and well in its way, but, just as with other types of software, the phrase \u201cshareware  ...\n In the end, the two of them sold roughly 500 copies each of  Excelsior I and  II \u2014 \u201csmall potatoes\u201d by any standard, as Matthew freely admits. He believes that they made perhaps $5000 to $10,000 in all on their games, after the cost of postage and all those printed manuals was subtracted.\n I must confess that I personally have some reservations about the 11th Dimension games. It seems to me that  Skyland\u2019s Star\u2018s scenario isn\u2019t quite compelling enough to overcome the engine\u2019s limited parser and lack of player conveniences, and that the  Excelsiorgames, while certainly expansive and carefully put-together, rely a bit too much on needle-in-the-haystack hunting over their enormous maps. Then again, though, I have the exact same complaints  ...\n Shareware gave a place for games like those of Daniel and Matthew to live and breathe when the only other viable mode of distribution was through the boxed publishers, who interested themselves only in a fairly small subset of the things that games can do and be. Long before the likes of Steam, the shareware scene was the indie-games scene of its time, demonstrating all of the quirky spirit which that phrase has come to imply. While the big boys  ...\n ( Sources: the books   Masters of Doom by David Kushner,\u00a0  Rocket Jump: Quake and the Golden Age of First-Person Shooters by David L. Craddock, and   Sophistication &amp; Simplicity: The Life and Times of the Apple II Computer by Steven Weyhrich;  Computer Gaming World of December 1992, January 1993, March 1993, May 1993, June 1993, July 1993, September 1993, January 1994, February 1994, and June 1994;  Game Developer of January/February 1995;  PC Powerplay  ...\n In the interest of full disclosure as well as a full listing of sources, I have to note that a small part of this article is drawn from lived personal experience. I actually knew Scott Miller and George Broussard in the late 1980s and early 1990s, albeit only in a very attenuated, second-hand sort of way: Scott dated my sister for several years. Scott and George came by my room from time to time to see the latest Amiga games when I was still in  ...\n A year or two after finishing high school, I interviewed for a job at Apogee, which was by then flying high. Again, had I known what my future held I would have paid more attention to my surroundings; I retain only the vaguest impression of a chaotic but otherwise unremarkable-looking office. Scott and George were perceptive enough to realize that I would never have fit in with them, and didn \u2019t hire me. For this I bear them no ill will whatsoever,  ...\n The company once known as Apogee, which is now known as 3D Realms, has released  all of their old shareware games for free on their website. Daniel Berke and Matthew Engle continue to maintain their old games in updated versions that work with modern incarnations of Windows; you can  download them and  purchase registrations on the 11th Dimension Entertainment home page.)", "posttime": "2020-05-02 18:06:48", "tags": "\u6e38\u620f,\u8f6f\u4ef6,scene,games", "title": "\u5171\u4eab\u8f6f\u4ef6\u573a\u666f\uff0c\u7b2c2\u90e8\u5206\uff1a\u6e38\u620f\u95ee\u9898", "title_en": "The Shareware Scene, Part 2: The Question of Games", "transed": 0, "url": "https://www.filfre.net/2020/05/the-shareware-scene-part-2-the-question-of-games/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6e38\u620f", "\u8f6f\u4ef6", "scene", "games"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000330, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u58a8\u897f\u54e5\u5dde\u963f\u5c14\u4f2f\u514b\u57fa--\u6851\u8fea\u4e9a\u56fd\u5bb6\u5b9e\u9a8c\u5ba4(Sandia National Laboratory)\u9886\u5bfc\u7684\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u53d1\u660e\u4e86\u4e00\u6b3e\u9996\u521b\u7684\u8f6f\u4ef6\uff0c\u4f9b\u79d1\u5b66\u5bb6\u521b\u5efa\u590d\u6742\u7269\u4f53\u7684\u7cbe\u786e\u6570\u5b57\u8868\u793a\u3002\n\u8fd9\u6b3e\u540d\u4e3aVoroCrust\u7684\u65b0\u8f6f\u4ef6\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u540d\u4e3a\u7f51\u683c\u7684\u6570\u5b57\u8868\u793a\uff0c\u79d1\u5b66\u5bb6\u4eec\u5728\u8bb8\u591a\u5b66\u79d1\u4e2d\u4f7f\u7528\u8fd9\u79cd\u7f51\u683c\uff0c\u8fd9\u4e9b\u5b66\u79d1\u4f7f\u7528\u5404\u79cd\u90e8\u4ef6\u7684\u51e0\u4f55\u6a21\u578b-\u4ece\u8f6c\u5b50\u5230\u8f66\u8f6e\u518d\u5230\u9632\u62a4\u8bbe\u5907\u3002\u590d\u6742\u7f51\u683c\u901a\u5e38\u5177\u6709\u66f2\u7ebf\u3001\u9510\u8fb9\u6216\u5b54\u3002\u4e00\u65e6\u521b\u5efa\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u5c31\u50cf3D\u56fe\u50cf\uff0c\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u6a21\u62df\u4e2d\u4f7f\u7528\uff0c\u8ba1\u7b97\u673a\u6a21\u62df\u4e2d\u5305\u542b\u786e\u5b9a\u90e8\u4ef6\u5728\u6781\u7aef\u6761\u4ef6\u4e0b\u4f55\u65f6\u53ef\u80fd\u5931\u6548\u7684\u7b97\u6cd5\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u5e2e\u52a9\u7684-\u800c\u4e14\u7ecf\u5e38\u662f..\u3002\n\u4f8b\u5982\uff0c\u822a\u7a7a\u822a\u5929\u884c\u4e1a\u7684\u4e00\u4f4d\u79d1\u5b66\u5bb6\u53ef\u80fd\u4f1a\u5236\u4f5c\u4e00\u4e2a\u98de\u673a\u673a\u7ffc\u7684\u7f51\u683c\uff0c\u5e76\u901a\u8fc7\u8ba1\u7b97\u673a\u6a21\u62df\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5b83\u5728\u5927\u98ce\u548c\u6781\u7aef\u6e29\u5ea6\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\u7684\u4fe1\u606f\u3002\u4e00\u4e9b\u79d1\u5b66\u5bb6\u8fd8\u4f7f\u7528\u7f51\u683c\u5bf9\u5730\u8d28\u5b66\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u9884\u6d4b\u5730\u4e0b\u53d8\u5316\uff0c\u4f8b\u5982\u6db2\u4f53\u6216\u6c61\u67d3\u7269\u7684\u5730\u4e0b\u6d41\u52a8\u3002\n\u6851\u8fea\u4e9a\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u517c\u9879\u76ee\u8d1f\u8d23\u4eba\u7a46\u7f55\u9ed8\u5fb7\u00b7\u57c3\u8d1d\u8fbe(Mohamed Ebeida)\u8868\u793a\uff0cVoroCrust\u7ed3\u5408\u4e86\u540d\u4e3aVoronoi Cell\u7684\u7279\u6b8a\u7c7b\u578b\u76843D\u591a\u9762\u4f53\u7ec6\u80de\u6765\u521b\u5efa\u7f51\u683c\u3002\u4ed6\u8bf4\uff0c\u5927\u591a\u6570\u5176\u4ed6\u7f51\u683c\u751f\u6210\u65b9\u6cd5\u4f7f\u75283D\u56db\u9762\u4f53\u6216\u516d\u9762\u4f53\u5355\u5143\uff0c\u8fd9\u4e9b\u5355\u5143\u8d28\u91cf\u8f83\u4f4e\u6216\u96be\u4ee5\u81ea\u52a8\u5316\u3002\u73b0\u6709\u7684Voronoi\u7f51\u683c\u5212\u5206\u65b9\u6cd5\u5e76\u4e0d\u603b\u662f\u9002\u7528\u4e8e\u590d\u6742\u7269\u4f53\u7684\u6240\u6709\u89d2\u548c\u89d2\u3002\u8fd9\u53ef\u4ee5\u7528\u4f53\u529b\u52b3\u52a8\u6765\u89e3\u51b3\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4e4f\u5473\u7684\u8fc7\u7a0b\uff0c\u53ef\u80fd\u9700\u8981\u5927\u91cf\u7684\u2026\u3002\nVoroCrust\u76ee\u524d\u6b63\u5728\u63a5\u53d7\u5176\u4ed6\u4e00\u4e9b\u653f\u5e9c\u673a\u6784\u548c\u5927\u5b66\u7684\u6d4b\u8bd5\u3002\u8be5\u8f6f\u4ef6\u62e5\u6709\u4e00\u9879\u4e13\u5229\uff0c\u53e6\u5916\u8fd8\u63d0\u4ea4\u4e86\u4e24\u9879\u4e13\u5229\u7533\u8bf7\u3002\u7814\u7a76\u8bb8\u53ef\u8bc1\u53ef\u901a\u8fc7\u6851\u8fea\u4e9a\u77e5\u8bc6\u4ea7\u6743\u5c40\u83b7\u5f97\u3002\nEbeida\u8bf4\uff0cVoroCrust\u662f\u7b2c\u4e00\u4e2a\u751f\u6210\u7b26\u5408\u590d\u6742\u6a21\u578b\u7684Voronoi-cell\u7f51\u683c\u7684\u8f6f\u4ef6\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u4fee\u590d\u3002\u4ed6\u5df2\u7ecf\u5728\u8be5\u8f6f\u4ef6\u4e0a\u5de5\u4f5c\u4e86\u4e09\u5e74\u591a\uff0c\u5e76\u8868\u793a\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u51cf\u5c11\u79d1\u5b66\u5bb6\u57283D\u5efa\u6a21\u4e0a\u82b1\u8d39\u7684\u8bb8\u591a\u5c0f\u65f6\u7684\u4f53\u529b\u52b3\u52a8\u3002\n\u201c\u6851\u8fea\u4e9a\u8ba4\u4e3a\u556e\u5408\u662f\u8fd9\u4e9b\u5206\u6790\u4e2d\u6700\u5927\u7684\u5355\u4e00\u74f6\u9888\uff0c\u201d\u57c3\u8d1d\u8fbe\u8bf4\u3002\u76ee\u524d\u7684\u505a\u6cd5\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u800cVoroCrust\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u6761\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u81ea\u52a8\u5316\u7684\u9014\u5f84\uff0c\u901a\u8fc7\u51cf\u5c11\u4fee\u590d\u8ba1\u7b97\u673a\u751f\u6210\u7684\u5efa\u6a21\u9519\u8bef\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u51cf\u8f7b\u4e86\u6280\u672f\u4eba\u5458\u7684\u8d1f\u62c5\u3002\u201c\u3002\nEbeida\u8bf4\uff0c\u6700\u8fd1\u63cf\u8ff0VoroCrust\u7684\u624b\u7a3f\u5df2\u7ecf\u901a\u8fc7\u4e86Graphics\u7684\u4ea4\u6613\uff0c\u5e76\u5c06\u5728\u9876\u7ea7\u8ba1\u7b97\u673a\u56fe\u5f62\u4f1a\u8baeSIGGRAPH 2020\u4e0a\u5c55\u793a\uff0c\u5e76\u8865\u5145\u8bf4\u201c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u8363\u8a89\u3002\u201d\n\u8be5\u8f6f\u4ef6\u662f\u4e0e\u9a6c\u91cc\u5170\u5927\u5b66\u3001\u5e15\u514b\u5b66\u9662\u3001\u5fb7\u514b\u8428\u65af\u5927\u5b66\u5965\u65af\u6c40\u5206\u6821\u548c\u52a0\u5dde\u5927\u5b66\u6234\u7ef4\u65af\u5206\u6821\u5408\u4f5c\u5f00\u53d1\u7684\u3002\n\u57283D\u5efa\u6a21\u4e2d\uff0c\u5206\u6790\u5e08\u5728\u9700\u8981\u5206\u6790\u7684\u5bf9\u8c61\u5468\u56f4\u521b\u5efa\u770b\u8d77\u6765\u50cf\u51e0\u4f55\u58f3\u7684\u7f51\u683c\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u7f51\u683c\u770b\u8d77\u6765\u4e0e\u5bf9\u8c61\u5b8c\u5168\u4e00\u6837\uff0c\u5e76\u7b26\u5408\u6240\u6709\u8fb9\uff0c\u4f46\u4f7f\u7528\u5f53\u524d\u7684\u7f51\u683c\u6280\u672f\u5e76\u4e0d\u603b\u662f\u5f88\u5bb9\u6613\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5e38\u89c1\u7684\u7f51\u683c\u65b9\u6cd5\u901a\u5e38\u4f7f\u7528\u56db\u9762\u4f53\u548c\u516d\u9762\u4f53\u5355\u5143\u6765\u586b\u5145\u5bf9\u8c61\u7684\u7a7a\u95f4\uff0c\u4ece\u5bf9\u8c61\u7684\u5185\u90e8\u5230\u5176\u5916\u90e8\u8fb9\u754c\u3002\u7136\u800c\uff0c\u5f53\u5355\u5143\u4e0d\u7b26\u5408\u8fb9\u754c\u9644\u8fd1\u7684\u5f62\u72b6\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002Ebeida\u8bf4\uff0c\u624b\u52a8\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u603b\u662f\u53ef\u9760\u7684\uff0c\u6709\u65f6\u4f1a\u6539\u53d8\u6700\u7ec8\u6a21\u578b\u7684\u6570\u5b66\u5c5e\u6027\u3002\n\u60f3\u8c61\u556e\u5408\u8fc7\u7a0b\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u60f3\u7740\u586b\u6ee1\u5e8a\u57ab\u3002\u56db\u9762\u4f53\u7684\u201c\u57ab\u5b50\u201d\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u586b\u6ee1\u7a7a\u95f4\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u592a\u575a\u56fa\u4e86\u3002\u516d\u9762\u4f53\u5750\u57ab\u53ef\u4ee5\u66f4\u7075\u6d3b\uff0c\u4f46\u7531\u4e8e\u5176\u56fa\u5b9a\u7684\u7ed3\u6784\uff0c\u53ef\u80fd\u4e0d\u4f1a\u6cbf\u7740\u9876\u90e8\u6216\u89d2\u843d\u7684\u8fb9\u7f18\u3002\u4f7f\u7528\u7075\u6d3b\u7684\u6750\u6599\uff0c\u5982\u591a\u9762\u4f53\uff0c\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u8fb9\uff0c\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u586b\u5145\u5e8a\u57ab\u7684\u6240\u6709\u533a\u57df\u548c\u89d2\u843d\u3002\nEbeida\u8bf4\uff0c\u4e3a\u4e86\u5b8c\u5168\u81ea\u52a8\u5316\u7f51\u683c\u5212\u5206\u8fc7\u7a0b\uff0c\u4ed6\u7684\u56e2\u961f\u4e0d\u4ec5\u4f7f\u7528\u4e86\u591a\u9762\u4f53\uff0c\u4ed6\u4eec\u8fd8\u9006\u8f6c\u4e86\u6807\u51c6\u65b9\u6cd5\uff0c\u627e\u5230\u4e86\u4e00\u79cd\u4ece3D\u6a21\u578b\u7684\u8fb9\u754c\u800c\u4e0d\u662f\u4e2d\u95f4\u5f00\u59cb\u7684\u65b9\u6cd5\u3002\u7814\u7a76\u5c0f\u7ec4\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u5728\u51e0\u4f55\u7269\u4f53\u7684\u8fb9\u754c\u5468\u56f4\u653e\u7f6e\u79f0\u4e3a\u79cd\u5b50\u7684\u70b9\uff0c\u7136\u540e\u8fd9\u4e9b\u70b9\u6210\u4e3a\u6c83\u7f57\u8bfa\u4f0a\u7ec6\u80de\u7684\u7acb\u8db3\u70b9\u3002\u4e00\u65e6\u8fb9\u754c\u7684\u5916\u90e8\u5b8c\u6210\uff0c\u5c31\u53ef\u4ee5\u7528\u9644\u52a0\u7684Voronoi\u5355\u5143\u683c\u586b\u5145\u5bf9\u8c61\u7684\u5185\u90e8\u3002\n\u9a6c\u91cc\u5170\u5927\u5b66\u7684\u535a\u58eb\u751f\u827e\u54c8\u8fc8\u5fb7\u00b7\u963f\u535c\u675c\u52d2\u5361\u5fb7(Ahmed Abdelkader)\u4e0e\u57c3\u8d1d\u8fbe\u4e00\u8d77\u7814\u7a76VoroCrust\uff0c\u5e76\u63cf\u8ff0\u4e86\u4f7f\u7528Voronoi\u7ec6\u80de\u7684\u4f18\u52bf\u3002\n\u201c\u8868\u9762\u66f4\u5e72\u51c0\uff0c\u5c31\u50cf\u5b9d\u77f3\u6216\u94bb\u77f3\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5b83\u4eec\u53ef\u4ee5\u5b8c\u7f8e\u800c\u81ea\u7136\u5730\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u201d\nAbdelkader\u8bf4\uff0c\u66f2\u7ebf\u5e26\u6765\u4e86\u6311\u6218\uff0c\u4ed6\u4f7f\u7528\u7897\u548c\u66f4\u590d\u6742\u7684\u7269\u4f53(\u5982\u53d1\u52a8\u673a)\u4e3a\u4f8b\u3002\u4ed6\u8bf4\uff0c\u8981\u786e\u5b9a\u5fc5\u8981\u7684\u6210\u5206\uff0c\u4ee5\u4fbf\u5728\u6570\u5b66\u8bc1\u660e\u4e2d\u5c06\u8fd9\u4e9b\u788e\u7247\u5b8c\u7f8e\u5730\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\u3002\u73b0\u5728\uff0c\u4ed6\u8bf4\uff0c\u56e2\u961f\u5f88\u9ad8\u5174\u80fd\u5728\u8fd9\u4e00\u66f4\u6df1\u5c42\u6b21\u7684\u7406\u89e3\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u589e\u5f3a\u8f6f\u4ef6", "note_en": "ALBUQUERQUE, N.M. \u2014 A team of researchers led by Sandia National Laboratories have invented a first-of-its-kind software for scientists to create accurate digital representations of complex objects.\n  The new software, VoroCrust, offers a novel way to create digital representations, called meshes, which are used by scientists in many disciplines that work with geometric models of all kinds of parts \u2014from rotors to wheels to protective equipment. Complex meshes often have curves, sharp edges or holes. Once created, they look like 3D images that can be used in computer simulations that incorporate algorithms to determine when parts might fail in extreme conditions. This is a helpful \u2014and often  ...\n For example, a scientist in the aerospace industry might make a mesh of an airplane wing and run it through a computer simulation to learn more about what will happen to it in high wind and extreme temperatures. Some scientists also use meshes to model geology to anticipate underground changes, such as subsurface flows of liquids or contaminants.\n VoroCrust incorporates special types of 3D polyhedral cells called Voronoi cells to create the meshes, said Sandia computer scientist and project lead Mohamed Ebeida. Most other mesh-generation methods use 3D tetrahedral or hexahedral cells that can have low quality or are difficult to automate, he said. Existing methods for Voronoi meshing don \u2019t always conform to all corners and angles of complex objects. This can be fixed with manual labor, but it is a tedious process that can take a significant  ...\n VoroCrust is currently being tested by a few other government agencies and universities. The software has one patent, and two additional patent applications have been filed. Research licenses are available through Sandia\u2019s  Intellectual Property office.\n VoroCrust is the first software to generate Voronoi-cell meshes that conform to complex models without needing to be fixed manually, said Ebeida. He\u2019s been working on the software for more than three years and said the software could reduce many hours of manual labor that scientists spend on 3D modeling.\n  \u201cSandia identified meshing as the single biggest bottleneck in these analyses,\u201d Ebeida said. \u201cCurrent practices require human intervention, and VoroCrust provides us with a path toward automating this process to relieve tech staff by reducing the time spent on fixing computer-generated errors in modeling.\u201d\n A recent manuscript describing VoroCrust has been reviewed and accepted in Transaction on Graphics and will be presented in  SIGGRAPH 2020, a top computer graphics conference, Ebeida said, adding \u201cthis is quite an honor.\u201d\n The software was developed in collaboration with the University of Maryland, College Park, the University of Texas at Austin and the University of California, Davis.\n  In 3D modeling, analysts create meshes that look like geometric shells around the objects they need to analyze. Ideally, the mesh will look exactly like the object and conform to all edges, but that\u2019s not always easy using current meshing techniques.\n Common meshing methods typically use the tetrahedral and hexahedral cells to fill the space of an object, starting from the object\u2019s interior toward its outside boundaries However, problems occur when the cells do not conform to the shape near the boundary. Manually fixing this problem is not always reliable and sometimes changes the mathematical properties of the final model, Ebeida said.\n One way to imagine the meshing process is to think of filling a mattress. Tetrahedral \u201ccushions\u201d could fill the space easily, but they might be too firm. Hexahedral cushions could be more flexible but might not follow the edges along the top or corners due to their fixed structure. Using flexible material like a polyhedron that can have arbitrary number of sides could make it easier to fill all areas and corners of the mattress.\n  Ebeida said to fully automate the meshing process, his team not only used polyhedrons, they also reversed the standard approach and found a way to start at the boundary, rather than the middle, of a 3D model. The team carefully placed points, called seeds, around the boundaries of geometrical objects, which then became footholds for Voronoi cells. Once the outside of the boundary is complete, the interior of the object can be filled in with additional Voronoi cells.\n Ahmed Abdelkader, a doctoral student at the University of Maryland, worked on VoroCrust with Ebeida and described the advantages of using Voronoi cells.\n \u201cThe facets are cleaner, like gemstones or diamonds,\u201d he said. \u201cThey can perfectly and naturally fit together.\u201d\n Curves present challenges, Abdelkader said, using the examples of bowls and more complex objects like engines. He said it took a lot of work to pin down the necessary ingredient that would set the pieces together perfectly in a mathematical proof. Now, he said, the team is excited to build upon this deeper understanding to enhance the software with more features.\n \u201cThe Voronoi magic will happen,\u201d Ebeida said. \u201cOnce you decompose the object into these well-shaped pieces, these cells, you can mesh any model you want with confidence about the quality of the resulting mesh without any post-processing.\u201d\n  When working on  VoroCrust, the goal was to create a software robust enough that it could model any object needed for simulation, said Ahmed Mahmoud, a University of California doctoral student who worked on the software.\n Sandia manager Emily Stein and research engineer Tara LaForce have used VoroCrust to make geological models for deep disposal of nuclear waste as part of the Department of Energy\u2019s Spent Fuel and Waste Science and Technology Campaign that Sandia leads. In addition to the  Laboratory Directed Research and Development program, the campaign contributes funding for VoroCrust development.\n Two priorities of the campaign are to create design concepts and numerical modeling approaches for disposal systems. VoroCrust might create a mesh of an underground repository and the waste in it, or it could create a mesh of the underground geology. This mesh can be then used to solve the subsurface flow of liquid or gas in porous material or the transport of contaminants within flowing fluids.\n LaForce said VoroCrust offers promising capabilities for creating a mesh that can run in a reasonable timeframe. Stein added that other meshing methods sometimes distort the mesh, creating a simulation that is not as accurate as it could be.\n  \u201cThe idea is that we could take the geological model as it is and run it without additional manipulation,\u201d LaForce said.\n Carl Gable, the leader of the Computational Earth Sciences group at Los Alamos National Laboratory, has also used VoroCrust to create geological models as part of the campaign.\n \u201cIf you\u2019re making an airplane, submarine or car, one of the first steps is building computational framework you\u2019re trying to represent,\u201d Gable said. \u201cIn our case, it\u2019s geology. We need to represent tunnels, canisters and waste packages, and we also need represent the natural system, the geological system, and VoroCrust is a tool that is good at doing that.\u201d\n  Ebeida said while the research problem of creating geometric meshes with Voronoi cells has been solved, the technical readiness of the software is not at a place where it could be used off-the-shelf.\n Sandia manager Joe Bishop, who\u2019s been interested in VoroCrust for years, said modeling and simulation engineers on his team could benefit from the software for simulations if current software packages can leverage the polyhedral elements.\n \u201cWe need to know if we can run our simulations on these objects and compare it to tetrahedral and hexahedral methods,\u201d he said. \u201cVoroCrust is a promising tool. It could provide the geometry, and we would do the physics.\u201d\n  Sandia National Laboratories is a multimission laboratory operated by National Technology and Engineering Solutions of Sandia LLC, a wholly owned subsidiary of Honeywell International Inc., for the U.S. Department of Energy \u2019s National Nuclear Security Administration. Sandia Labs has major research and development responsibilities in nuclear deterrence, global security, defense, energy technologies and economic competitiveness, with main facilities in Albuquerque,  ...", "posttime": "2020-05-02 18:06:45", "tags": "\u81ea\u52a8\u5316,automating,\u7f51\u683c,vorocrust", "title": "\u81ea\u52a8\u5316\u590d\u6742\u76843D\u5efa\u6a21", "title_en": "Automating Complex 3D Modeling", "transed": 0, "url": "https://share-ng.sandia.gov/news/resources/news_releases/3d_modeling/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u81ea\u52a8\u5316", "\u7f51\u683c", "vorocrust"]}]