[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1003256, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u540dFreeBSD\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u603b\u662f\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528FreeBSD--\u5305\u62ec\u5728\u684c\u9762\u4e0a\u3002\u81ea2004\u5e74\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884cFreeBSD\uff1b\u8fd9\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u5bb9\u6613\uff0c\u4f46\u8fd9\u4e9b\u5e74\u6765\uff0c\u6211\u53d1\u73b0\u60c5\u51b5\u603b\u4f53\u4e0a\u5728\u6539\u5584\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u7f3a\u4e4f\u8db3\u591f\u7684\u6587\u6863-\u6240\u4ee5\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u662f\u4e3a\u4e86\u7ed9\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e5f\u662f\u4e3a\u4e86\u7ed9Google\u8bf1\u9975\u63d0\u4f9b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4ee5\u9632\u6709\u4eba\u9047\u5230\u6211\u5fc5\u987b\u89e3\u51b3\u7684\u4e00\u4e9b\u95ee\u9898\u3002\u51e0\u4e2a\u6708\u524d\uff0c\u5728\u6211\u7684System76 Galago Pro\u7ecf\u5386\u4e86\u4e8c\u6b21\u4f53\u9a8c\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u6b7b\u6c14\u6c89\u6c89\u7684/\u80bf\u80c0\u7684\u5c0f\u9152\u9986\u540e\uff0c\u6211\u51b3\u5b9a\u662f\u65f6\u5019\u66f4\u6362\u5b83\u4e86\u30022\u670815\u65e5\uff0c\u6211\u8ba2\u8d2d\u4e86\u4e00\u53f0Dell Latitude 7390\u3002\u8fd9\u662f\u4e00\u6b3e\u8f83\u8001\u7684\u7b14\u8bb0\u672c\u7535\u8111--\u6700\u521d\u4e8e2018\u5e74\u63a8\u51fa--\u4f46\u6211\u4e00\u76f4\u53d1\u73b0\u6234\u5c14Latitude\u7684\u8d28\u91cf\u5f88\u597d\uff0c\u800c\u4e14\u8fd9\u6b3e\u7b14\u8bb0\u672c\u7684\u4ef7\u683c\u975e\u5e38\u8bf1\u4eba\uff1a\u6234\u5c14\u52a0\u62ff\u5927\u516c\u53f8\u5c06\u5176\u552e\u4ef7\u5b9a\u4e3a1049\u52a0\u5143(750\u7f8e\u5143)\uff0c\u800c\u4e0d\u662f3599\u52a0\u5143(2600\u7f8e\u5143)\u7684\u539f\u4ef7\u3002\u6211\u53ea\u80fd\u5047\u8bbe\u8fd9\u662f\u4ed6\u4eec\u6700\u540e\u7684\u5b58\u8d27\uff0c\u4ed6\u4eec\u60f3\u6e05\u7a7a\u90a3\u6761\u751f\u4ea7\u7ebf\u3002\u7b14\u8bb0\u672c\u7535\u8111\u968f\u9644\uff1a\u7b14\u8bb0\u672c\u7535\u8111\u57283\u67086\u65e5\u5230\u8d27\uff0c\u6211\u505a\u4e86\u51e0\u9879\u5347\u7ea7\uff1a\u6211\u7528\u82f1\u7279\u5c14660p 512 GB NVMe\u786c\u76d8(94\u52a0\u5143)\u53d6\u4ee3\u4e86256 GB\u7684\u56fa\u6001\u786c\u76d8\u3002\n\u9664\u4e86\u7ed9\u6211\u53cc\u500d\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u5347\u7ea7\u78c1\u76d8\u8fd8\u5141\u8bb8\u6211\u4fdd\u6301Windows\u5b89\u88c5\u7684\u5b8c\u597d\u65e0\u635f\uff0c\u4ee5\u9632\u6211\u60f3\u8ba9\u8fd9\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u5728\u8fd0\u884cWindows\u65f6\u91cd\u65b0\u6295\u5165\u4f7f\u7528\u3002\u5728\u8fd9\u4e9b\u5347\u7ea7\u4e4b\u540e\uff0c\u6211\u5e76\u6ca1\u6709\u6211\u7406\u60f3\u7684\u7b14\u8bb0\u672c\u7535\u8111--\u6211\u4f1a\u66f4\u559c\u6b2232 GB\u7684RAM(\u6234\u5c14\u7684\u89c4\u683c\u8bf4\u660e\u8fd9\u6b3e\u7b14\u8bb0\u672c\u7535\u8111\u6700\u591a\u652f\u630116 GB)\u3001\u7b2c\u4e8c\u5757\u78c1\u76d8(\u7406\u8bba\u4e0aWWAN\u63d2\u69fd\u53ef\u4ee5\u5bb9\u7eb3\u4e00\u4e2aM.2 2242 NVMe\u78c1\u76d8\uff0c\u4f46\u7f51\u4e0a\u7684\u8bc4\u8bba\u663e\u793a\u6234\u5c14BIOS\u4e0d\u5141\u8bb8\u5728\u8be5\u63d2\u69fd\u4e2d\u5b89\u88c5\u56fa\u6001\u786c\u76d8)\u548cTrackStick-\u4f46\u6211\u652f\u4ed8\u7684\u4ef7\u683c\u5b9e\u9645\u4e0a\u53ef\u4ee5&\u3002\u6211\u7528\u6211\u7684\u65e7\u7b14\u8bb0\u672c\u7535\u8111\u4ece\u6700\u65b0\u7684FreeBSD 12.1-STABL\u5468\u5feb\u7167\u4e0b\u8f7d\u4e86&#34\uff1bMemtick&34\uff1b\u56fe\u50cf\uff0c\u5e76\u5c06\u5176\u5199\u5165U\u76d8\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4f1a\u4f7f\u7528\u7248\u672c\u6620\u50cf(\u8fd9\u4e5f\u4f1a\u8ba9\u540e\u9762\u7684\u4e00\u4e9b\u6b65\u9aa4\u53d8\u5f97\u66f4\u5bb9\u6613)\uff0c\u4f46\u6211\u6700\u8fd1\u505a\u7684\u4e00\u4e9b\u66f4\u6539\u548c\u652f\u6301I2C\u89e6\u6478\u677f\u6240\u9700\u7684\u4e00\u4e9b\u4ee3\u7801\u90fd\u4e0d\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\u3002(\u5982\u679c\u60a8\u51e0\u4e2a\u6708\u540e\u518d\u9605\u8bfb\u672c\u6587\uff0c\u8bf7\u4f7f\u752812.2\u6216\u66f4\u9ad8\u7248\u672c\uff0c\u800c\u4e0d\u662f12-\u7a33\u5b9a\u5206\u652f\u3002)\u3002\u8981\u4eceDell Latitude 7390\u4e0a\u7684U\u76d8\u542f\u52a8\uff0c\u6211\u9700\u8981\u5728\u5f00\u673a\u65f6\u6309F12\u952e\u624d\u80fd\u8fdb\u5165\u542f\u52a8\u76d8\u9009\u62e9\u83dc\u5355\u3002\u5b89\u88c5FreeBSD\u5bf9\u6211\u6765\u8bf4\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u6211\u8fc7\u53bb\u5df2\u7ecf\u505a\u8fc7\u5f88\u591a\u6b21\u4e86\uff1b\u4f46\u6211\u786e\u5b9e\u66f4\u6539\u4e86\u51e0\u4e2a\u9ed8\u8ba4\u503c\uff1a\u5728\u9009\u62e9\u8981\u5b89\u88c5FreeBSD\u7684\u54ea\u4e9b\u90e8\u5206\u65f6\uff0c\u6211\u5305\u62ec\u4e86\u53d1\u884c\u7248\u3002\u901a\u5e38\u6211\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u4f46\u662f\u6211\u9700\u8981FreeBSD\u6e90\u4ee3\u7801\u6765\u6784\u5efa\u4e00\u4e9b\u5185\u6838\u6a21\u5757\u3002\n\u5728\u914d\u7f6eZFS\u65f6\uff0c\u6211\u6253\u5f00\u4e86\u5168\u78c1\u76d8\u52a0\u5bc6(\u5c31\u50cf\u6211\u6700\u8fd1\u5728\u6240\u6709\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u6240\u505a\u7684\u90a3\u6837)\u3002\n\u6211\u5c06\u4ea4\u6362\u7a7a\u95f4\u4ece2 GB(\u9ed8\u8ba4)\u589e\u52a0\u523016 GB\u3002\u6211\u5e0c\u671b\u8fd9\u4e2a\u7cfb\u7edf\u6c38\u8fdc\u4e0d\u9700\u8981\u4f7f\u7528\u4ea4\u6362\u7a7a\u95f4--\u4f46\u662f\u5982\u679c\u5b83\u768416G\u7684RAM\u8fd8\u4e0d\u591f\uff0c\u90a3\u4e482 GB\u7684\u4ea4\u6362\u7a7a\u95f4\u4e5f\u4e0d\u592a\u53ef\u80fd\u6709\u8db3\u591f\u7684\u5e2e\u52a9\u3002\n\u6211\u5173\u95ed\u4e86sshd-\u6211\u4e0d\u6253\u7b97\u8fdc\u7a0b\u8fde\u63a5\u5230\u8fd9\u53f0\u53f0\u5f0f\u673a-\u5e76\u6253\u5f00\u4e86ntpd\u548cpowerd-\u6211\u5e0c\u671b\u65f6\u949f\u4fdd\u6301\u51c6\u786e\uff0c\u6211\u60f3\u901a\u8fc7\u5728CPU\u6ca1\u6709\u8d1f\u8f7d\u65f6\u653e\u6162\u8fd0\u884c\u901f\u5ea6\u6765\u8282\u7701\u7535\u80fd\u3002(\u7a0d\u540e\u53ef\u4ee5\u901a\u8fc7/etc/rc.conf\u542f\u7528\u6216\u7981\u7528\u5b83\u4eec\uff0c\u4f46\u662f\u5b89\u88c5\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u60f3\u6211\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fd9\u6837\u505a\u3002)\u3002\n\u5728\u7cfb\u7edf\u5f3a\u5316\u5c4f\u5e55\u4e2d\uff0c\u6211\u542f\u7528\u4e86clear_tmp\u3001Disable_syslogd\u548cDISABLE_Sendmail\u9009\u9879-\u524d\u4e24\u4e2a\u9009\u9879\u53ea\u662f\u539f\u5219\u4e0a\u7684\uff0c\u800cSendmail\u662f\u6211\u4e0d\u60f3\u8981\u548c\u4e0d\u60f3\u8981\u7684(\u6211\u6539\u7528qmail)\u3002\u6211\u6ca1\u6709\u542f\u7528\u4efb\u4f55\u5176\u4ed6\u7684\u5f3a\u5316\u9009\u9879\uff0c\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u4efb\u4f55\u663e\u8457\u7684\u597d\u5904\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u5b83\u4eec\u7684\u79fb\u52a8\u529f\u80fd\u5f88\u6709\u7528\u3002\n\u5728\u521b\u5efa\u6211\u7684\u7528\u6237\u5e10\u6237\u65f6\uff0c\u6211\u5c06\u8be5\u5e10\u6237\u6dfb\u52a0\u5230\u4e86\u8f6e\u76d8\u548c\u89c6\u9891\u7ec4\u3002\u524d\u8005\u662f\u5fc5\u9700\u7684\uff0c\u8fd9\u6837\u6211\u624d\u80fd\u901a\u8fc7su\u53d8\u6210root\u7528\u6237\uff1b\u540e\u8005\u662f\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u52a0\u901f\u89c6\u9891\u529f\u80fd\u6240\u5fc5\u9700\u7684\u3002(\u5982\u679c\u60a8\u5fd8\u8bb0\u4e86\u8fd9\u4e9b\uff0c\u60a8\u53ef\u4ee5\u4ee5root\u8eab\u4efd\u767b\u5f55\uff0c\u7a0d\u540e\u518d\u6dfb\u52a0\u5b83\u4eec\uff0c\u4f46\u8fd9\u5f88\u9ebb\u70e6-\u6211\u5728\u8fd9\u91cc\u63d0\u5230\u5b83\u4eec\u662f\u56e0\u4e3a\u6211\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u8fd9\u6837\u505a\u3002)\u3002\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6211\u8981\u6c42\u5b89\u88c5\u7a0b\u5e8f\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u5e76\u53d6\u51faU\u76d8\u3002\u6211\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u5173\u95ed\u607c\u4eba\u7684\u5927\u58f0\u63a7\u5236\u53f0\u54d4\u58f0\uff1a\u7136\u540e\u6211\u544a\u8bc9FreeBSD\u4f7f\u7528&#34\uff1b\u94fe\u8def\u805a\u5408&34\uff1b\u7f51\u7edc\uff0c\u6545\u969c\u81ea\u52a8\u4ece\u6709\u7ebf\u4ee5\u592a\u7f51(\u5982\u679c\u8fde\u63a5)\u5207\u6362\u5230WiFinetwork#sysrc WLANS_iwm0=&#34\uff1bwlan0&#34\uff1b#sysrc ifconfig_wlan0=&#34\uff1b#sysrc ifconfig_em0=&\u3002\u6ede\u540eproto\u6545\u969c\u8f6c\u79fb\u6ede\u540e\u7aef\u53e3em0\u6ede\u540e\u7aef\u53e3wlan0 DHCP&#34\uff1b\n\u901a\u8fc7/etc/wpa_Supplicant.conf\u63d0\u4f9b\u4e86\u6211\u7684WiFi\u7f51\u7edc\u51ed\u636e\uff0c\u5e76\u542f\u52a8\u4e86\u7f51\u7edc(\u670d\u52a1netif\u91cd\u65b0\u542f\u52a8)\u3002\u6211\u60f3\u8981\u4e00\u4e2a\u9632\u706b\u5899\uff0c\u6240\u4ee5\u6211\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u914d\u7f6e\u542f\u7528\u4e86FreeBSD\u7684PF\uff1a#echo&#34\uff1b&gt\uff1b/etc/pf.conf#echo&#34\uff1b\u5728lo0&#34\uff1b&gt\uff1b&gt\uff1b/etc/pf.conf#echo&34\uff1b/etc/pf.conf\uff1b/etc/pf.conf#sysrc PF_enable=&\u4e0a\u8bbe\u7f6e\u8df3\u8fc7#34\uff1b&gt\uff1b&gt\uff1b/etc/pf.conf#sysrc PF_enable=&\u3002\n\u73b0\u5728\u6700\u70e6\u4eba\u7684\u90e8\u5206\u662f\uff1a\u56e0\u4e3a\u6211\u8fd0\u884c\u7684\u662f12.1-\u7a33\u5b9a\u7248\uff0c\u800c\u4e0d\u662f12.1-Release\u7248(\u7531\u4e8e\u524d\u9762\u63d0\u5230\u7684\u8865\u4e01\u548c\u6700\u8fd1\u6dfb\u52a0\u7684\u5bf9I2C\u89e6\u6478\u677f\u7684\u652f\u6301)\uff0c\u6211\u4e0d\u80fd\u5b8c\u5168\u4f9d\u8d56FreeBSDProject\u6784\u5efa\u7684\u8f6f\u4ef6\u5305\u3002\u76f8\u53cd\uff0c\u6211\u9700\u8981\u901a\u8fc7\u7aef\u53e3\u6811\u6784\u5efa\u4e24\u4e2a\u5185\u6838\u6a21\u5757\u5305-drm-kmod\u548ciichid\u3002\u8fd9\u610f\u5473\u7740\uff1a\u5e76\u9501\u5b9a\u8fd9\u4e9b\u8f6f\u4ef6\u5305\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e0d\u4f1a\u81ea\u52a8\u5347\u7ea7\u5230FreeBSD 12.1-Release\uff1a\n\u5982\u679c\u6211\u80fd\u591f\u5b89\u88c512.2-Release(\u5728\u6211\u64b0\u5199\u672c\u6587\u65f6\u5b83\u8fd8\u4e0d\u5b58\u5728)\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6b65\u9aa4\u53ea\u9700pkg install iichid DRM-KMOD\u5373\u53ef\u3002\u73b0\u5728\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u8fd9\u4e9b\u8f6f\u4ef6\u5305\uff0c\u6211\u53ef\u4ee5\u4e0b\u8f7d\u8fd0\u884c\u57fa\u672cGUI\u6240\u9700\u7684\u5176\u4ed6Onesi\uff1a\u7136\u540e\u8fdb\u884c\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\u6765\u6253\u5f00GUI\uff1a\u6b64\u65f6\uff0c\u6211\u53ef\u4ee5\u91cd\u65b0\u5f15\u5bfc\u5e76\u89c2\u770b\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u5f15\u5bfc\u5230GUI\uff0c\u5728GUI\u4e2d\u6211\u4ee5cpercia\u8eab\u4efd\u767b\u5f55\uff0c\u6253\u5f00\u4e00\u4e2a\u63a7\u5236\u53f0(Ctrl-Alt-T)\uff0c\u7136\u540e\u4f7f\u7528su\u53d8\u6210root\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u8fdb\u884c\u66f4\u591a\u7684\u914d\u7f6e\u3002Dell Latitude 7390\u4e0a\u7684BIOS\u5c06\u626c\u58f0\u5668\u548c\u8033\u673a\u63d2\u5b54\u914d\u7f6e\u4e3a\u72ec\u7acb\u7684\u97f3\u9891\u8f93\u51fa\u3002\u8fd9\u4e0d\u662f\u6211\u60f3\u8981\u7684-\u6211\u60f3\u8ba9\u58f0\u97f3\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8f6c\u5230\u626c\u58f0\u5668\uff0c\u4f46\u5982\u679c\u6211\u63d2\u5165\u8033\u673a\uff0c\u5c31\u4f1a\u5207\u6362\u5230\u8033\u673a\u63d2\u5b54\u5e76\u81ea\u52a8\u5c06\u626c\u58f0\u5668\u9759\u97f3\u3002\u4e3a\u6b64\uff0c\u6211\u544a\u8bc9FreeBSD\uff0c\u8033\u673a(\u8fd9\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u7684NID33)\u4e0e\u626c\u58f0\u5668\u5c5e\u4e8e\u540c\u4e00\u97f3\u9891\u8bbe\u5907(AS=1)\uff0c\u4f46\u5e94\u8be5\u4f7f\u7528\u9759\u97f3\u548c\u5207\u6362\u5230\u8033\u673a\u7684\u884c\u4e3a(\u987a\u5e8f=15)\uff1a\u8bf4\u5230\u97f3\u9891\uff0cHDMI\u4e2d\u6709\u4e00\u4e2a\u9519\u8bef\u3002\u5730\u57402&34\uff1b\u4e0a\u7684\u547d\u4ee4\u8d85\u65f6)\u88ab\u8bb0\u5f55\u5230\u5185\u6838\u63a7\u5236\u53f0\u3002EdMaste\u4e00\u76f4\u81f4\u529b\u4e8e\u4fee\u590d\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u4f46\u4ed6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\uff0c\u8ba9\u6211\u53ef\u4ee5\u8ba9\u8b66\u544a\u4fdd\u6301\u6c89\u9ed8\uff1a\u6211\u559c\u6b22\u7684(KDE)\u73af\u5883\u4e0d\u662f#39\uff1b\u6211\u4e0d\u592a\u9700\u8981D-BUS\uff0c\u4f46\u5b83\u9700\u8981\u7684\u4e00\u4e2a\u5730\u65b9\u662f\u5141\u8bb8GUI\u5de5\u5177\u770b\u5230\u7535\u6c60\u72b6\u6001\u5e76\u4e0e\u7535\u6e90\u7ba1\u7406\u4ea4\u4e92\uff1aCPU\u9519\u8bef\u901a\u5e38\u901a\u8fc7\u5fae\u7801\u8865\u4e01\u5f97\u5230\u4fee\u590d\uff0c\u6240\u4ee5\u6211\u60f3\u62e5\u6709\u8fd9\u4e9b\uff1a\u6211\u5e0c\u671b\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u5f15\u5bfc\u66f4\u5feb-\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u60f3\u8981\u66f4\u6539\u5f15\u5bfc\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u8ba9\u5f15\u5bfc\u52a0\u8f7d\u5668\u7b49\u5f8510\u79d2\uff0c\u4e5f\u4e0d\u9700\u8981FreeBSD\u5185\u6838\u5728\u6302\u8f7d\u6839\u6587\u4ef6\u7cfb\u7edf\u4e4b\u524d\u7b49\u5f85USB\u8bbe\u5907(\u6211\u77e5\u9053\u6211\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u5728NVMe\u78c1\u76d8\u4e0a)\uff1a\u5982\u4e0a\u6240\u8ff0\uff0c\u5728\u6302\u8f7d\u6839\u6587\u4ef6\u7cfb\u7edf(\u6211\u77e5\u9053\u6211\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u5728NVMe\u78c1\u76d8\u4e0a)\u4e4b\u524d\uff0cFreeBSD\u5185\u6838\u4e0d\u9700\u8981\u7b49\u5f85USB\u8bbe\u5907(\u6211\u77e5\u9053\u6211\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u5728NVMe\u78c1\u76d8\u4e0a)\uff1a\u6211\u8fd8\u4f7f\u7528spiped\u901a\u8fc7\u96a7\u9053\u5c06\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u5230\u90ae\u4ef6\u670d\u52a1\u5668\u548c\u4ece\u90ae\u4ef6\u670d\u52a1\u5668\u53d1\u9001\uff1a#pkg install netqmail ucspi-tcp spiped#echo`hostname`&gt\uff1b/var/qmail/control/me#echo&#34\uff1b\uff1a127.0.0.1\uff1a8025&#34\uff1b&gt\uff1b/var/qmail/control/smtprouts#rm/var/qmail/alias/.qmail-*#echo cpercia&gt\uff1b/var/qmail\u3002yes&#34\uff1b#sysrc qmailsmtpd_enable=&#34\uff1byes&#34\uff1b#sysrc qmailsmtpd_host=&#34\uff1b127.0.0.1&#34\uff1b#echo&#34\uff1b127.0.0.1\uff1a\u5141\u8bb8&#34\uff1b&gt\uff1b/etc/tcp.smtp#sysrc spiped_enable=&#34\uff1byes&#34\uff1b#sysrc spiped_Pipes=&#34\uff1bsmtp\u3002[127.0.0.1]\uff1a8025and#34\uff1b#sysrc spiped_pipe_SMTP_target=&#34\uff1bmail.tarsnap.com:8025&#34\uff1b#sysrc spiped_pipe_SMTP_key=&#34\uff1b/etc/spiped/smtp.key&#34\uff1b#sysrc spiped_PIPE_POP3_MODE=&#34\uff1bCLIENT&#34\uff1b#sysrc spiped_pipe_POP3_source=&#34\uff1b[127.0.0.1]\uff1a110&#34\uff1b#sysrc spiped_PIPE_POP3_TARGET=&#34\uff1bmail.tarsnap.com\uff1a#sysrc spiped_pipe_POP3_key=&#34\uff1b/etc/spiped/pop3.key&#34\uff1b\n\u6700\u540e\uff0c\u867d\u7136\u5df2\u7ecf\u5b89\u88c5\u4e86\u7f51\u7edc\u6444\u50cf\u5934\u5b88\u62a4\u8fdb\u7a0b(kde5\u8f6f\u4ef6\u5305\u5c06\u5176\u4f5c\u4e3a\u4f9d\u8d56\u9879\u5f15\u5165)\uff0c\u4f46\u6211\u5e0c\u671b\u542f\u7528\u5b83\uff0c\u5e76\u5e0c\u671bcpercia\u7528\u6237\u80fd\u591f\u8bbf\u95ee\u5b83\uff1a\u6b64\u65f6\uff0c\u6211\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u684c\u9762\u73af\u5883\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u6309\u7167\u6211\u60f3\u8981\u7684\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\u3002\u6211\u4e0d\u559c\u6b22\u9ed8\u8ba4\u7684KDE\u5899\u7eb8\uff0c\u6240\u4ee5\u6211\u5b89\u88c5\u4e86\u65b0\u7684\u5899\u7eb8\u5e76\u544a\u8bc9KDE\u4f7f\u7528\u5b83(\u53f3\u952e\u5355\u51fb\u684c\u9762\uff1b#34\uff1b\u914d\u7f6e\u684c\u9762\u5411\u4e0b\u6eda\u52a8\u5e76\u9009\u62e9\u6b63\u786e\u7684\u5899\u7eb8)\u3002\u6211\u5e0c\u671b\u80fd\u591f\u4ecekde\u4e2d\u6253\u5370\uff0c\u6240\u4ee5\u6211\u542f\u7528\u4e86CUPS(\u5b83\u5df2\u7ecf\u4f5c\u4e3akde\u4f9d\u8d56\u9879\u5b89\u88c5)\u5e76\u542f\u52a8\u4e86\u5b83(\u56e0\u4e3a\u6211\u60f3\u5728\u4e0d\u91cd\u542f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5b83\uff0c\u6240\u4ee5\u662f\u5fc5\u8981\u7684)\uff1a\u7136\u540e\u544a\u8bc9kde\u6211\u7684\u6253\u5370\u673a(&#34\uff1b\u7cfb\u7edf\u8bbe\u7f6e&#34\uff1b-&gt\uff1b&34\uff1b\u6253\u5370\u673a&#34\uff1b-&gt\uff1b&#34\uff1bAddPrinter&#34\uff1bAddPrinter&#34\uff1bhttp://192.168.1.60:631/ipp\u7684\u624b\u52a8URI\u548cGenericPostScript\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f)\u3002\u6211\u5e0c\u671b\u80fd\u591f\u63a7\u5236\u5c4f\u5e55\u7684\u4eae\u5ea6(\u53c8\u540d\u3002\u8fde\u63a5\u5230\u82f1\u7279\u5c14\u89c6\u9891\u82af\u7247\u7ec4\u7684\u80cc\u5149)\uff1a\u5c24\u5176\u662f\u80fd\u591f\u901a\u8fc7\u6234\u5c14\u901a\u8fc7ACPI\u5c55\u793a\u7684\u529f\u80fd\u952e(Fn+Up\u3001Fn+Down)\u8fdb\u884c\u63a7\u5236\n\u4e00\u65e6\u6211\u786e\u5b9a\u6211\u9700\u898112.1\u7a33\u5b9a\u7248(\u5e76\u786e\u8ba4\u901a\u8fc7\u9002\u5f53\u7f16\u8bd1\u7684\u8f6f\u4ef6\u5305\uff0c\u89c6\u9891\u548c\u89e6\u6478\u677f\u90fd\u53ef\u4ee5\u5de5\u4f5c)\uff0c\u6211\u51b3\u5b9a\u4ece12.1\u7a33\u5b9a\u7248\u7684ISO\u91cd\u65b0\u5b89\u88c5\u3002\u6211\u4e0b\u8f7d\u4e86Memtick\u7684ISO\uff0c\u7136\u540e.\u3002\u5b83\u5df2\u7ecf\u8150\u70c2\u4e86\u3002\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u88ab\u622a\u65ad\u4e86\uff1b\u6211\u731c\u90a3\u4e00\u5468\u7684\u5feb\u7167\u955c\u50cf\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\u3002\n\u6211\u60f3\uff0c\u4e0d\u8981\u7d27\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u8ff7\u4f60\u5907\u5fd8\u5f55ISO\u6765\u4ee3\u66ff\uff1b\u8fd9\u4f1a\u5728\u5b89\u88c5\u65f6\u4e0b\u8f7d\u60a8\u60f3\u8981\u7684FreeBSD\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u5168\u90e8\u5305\u542b\u5728ISO\u4e2d\u3002\u8fd9\u4e2a\u6ca1\u6709\u635f\u574f--\u4f46\u662f\u5f53\u5b89\u88c5\u7a0b\u5e8f\u4e0b\u8f7d\u6211\u60f3\u8981\u5b89\u88c5\u7684\u90e8\u5206\u65f6\uff0c\u5b83\u65e0\u6cd5\u8bc6\u522b\u6211\u7684WiFi\u7f51\u7edc\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u53ea\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff1a\u6211\u628a\u7b14\u8bb0\u672c\u7535\u8111\u63d2\u5165\u6709\u7ebf\u7f51\u7edc\uff0c\u4e00\u5207\u90fd\u5f88\u6b63\u5e38\u3002\n\u6709\u4e00\u6b21(\u6211\u8bb0\u4e0d\u6e05\u662f\u54ea\u4e00\u6b21)\u6211\u8bd5\u56fe\u5b89\u88c5\u94ec\u5305\uff0c\u7ed3\u679c\u53d1\u73b0\u6ca1\u6709\u53ef\u7528\u7684\u5305\uff1a\u90a3\u4e00\u5468FreeBSD\u5305\u6784\u5efa\u96c6\u7fa4\u4e2d\u7684\u6784\u5efa\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u4e0d\u65ad\u589e\u957f\u7684\u6784\u5efa\u521a\u521a\u8d85\u8fc724\u5c0f\u65f6\u9650\u5236\uff0c\u5305\u6784\u5efa\u8005\u8ba4\u4e3a\u5b83\u4e00\u5b9a\u662f\u5361\u4f4f\u4e86\u3002\u6211\u5411FreeBSD\u7aef\u53e3\u7ecf\u7406\u56e2\u961f\u62a5\u544a\u4e86\u8fd9\u4e00\u60c5\u51b5\uff0c\u4ed6\u4eec\u63d0\u9ad8\u4e86Chrome\u7684\u65f6\u95f4\u9650\u5236\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u6210\u529f\u6784\u5efa-\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u5b83\u7684\u6784\u5efa\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u4e0d\u65ad\u589e\u957f\u7684\u6784\u5efa\u521a\u521a\u8d85\u8fc7\u4e8624\u5c0f\u65f6\u7684\u9650\u5236\uff0c\u800c\u5305\u6784\u5efa\u8005\u8ba4\u4e3a\u5b83\u80af\u5b9a\u662f\u5361\u4f4f\u4e86\u3002\u6211\u5411FreeBSD\u7aef\u53e3\u7ecf\u7406\u56e2\u961f\u62a5\u544a\u4e86\u8fd9\u4e00\u60c5\u51b5\uff0c\u4ed6\u4eec\u63d0\u9ad8\u4e86Chrome\u7684\u65f6\u95f4\u9650\u5236\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u6210\u529f\u6784\u5efa-\u4f46\u5728\u5e73\u5747\u65f6\u95f4\u5185\u3002\n\u5728\u6211\u5f00\u59cb\u4f7f\u7528\u8fd9\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u4e4b\u524d\uff0c\u80cc\u5149\u63a7\u5236\u952e\u4f1a\u8c03\u6574ACPI_VIDEO\u5bf9\u4eae\u5ea6\u7684\u6982\u5ff5\uff0c\u800c\u82f1\u7279\u5c14\u80cc\u5149\u5de5\u5177\u53ef\u4ee5\u8c03\u6574\u5b9e\u9645\u4eae\u5ea6\uff0c\u4f46\u4e24\u8005\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb\uff1b\u6211\u5fc5\u987b\u5411FreeBSD\u5185\u6838\u6dfb\u52a0\u4ee3\u7801\u4ee5\u901a\u8fc7devd\u663e\u793a\u4eae\u5ea6\u53d8\u5316\uff0c\u5e76\u7f16\u5199\u5fc5\u8981\u7684\u914d\u7f6e\u6587\u4ef6(acpi-video-intel-backlight.conf)\u6765\u8c03\u7528\u82f1\u7279\u5c14\u80cc\u5149\u8fdb\u884c\u5fc5\u8981\u7684\u66f4\u6539\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u5fc5\u987b\u901a\u8fc7devd\u5411FreeBSD\u5185\u6838\u6dfb\u52a0\u4ee3\u7801\u4ee5\u663e\u793a\u4eae\u5ea6\u53d8\u5316\uff0c\u5e76\u7f16\u5199\u5fc5\u8981\u7684\u914d\u7f6e\u6587\u4ef6(acpi-video-intel-backlight.conf)\u6765\u8c03\u7528\u82f1\u7279\u5c14\u80cc\u5149\u8fdb\u884c\u5fc5\u8981\u7684\u66f4\u6539\u3002\n\u5f53\u6211\u7b2c\u4e00\u6b21\u5c06LAGG\u63a5\u53e3\u8bbe\u7f6e\u4e3a\u5728\u6709\u7ebf\u548c\u65e0\u7ebf\u7f51\u7edc\u4e4b\u95f4\u81ea\u52a8\u5207\u6362FreeBSD\u65f6\uff0c\u6211\u53d1\u73b0\u6211\u9700\u8981\u901a\u8fc7\u52a0\u8f7d\u5668\u52a0\u8f7dWiFi\u9a71\u52a8\u7a0b\u5e8f(\u548c\u56fa\u4ef6)\u5185\u6838\u6a21\u5757\u3002\u4e0e\u901a\u8fc7\u6700\u8fd1\u6dfb\u52a0\u7684devMatch\u5de5\u5177\u81ea\u52a8\u52a0\u8f7d\u5b83\u4eec\u4e0d\u540c\uff1a\u5982\u679c\u6211\u4f9d\u8d56devMatch\uff0c\u5219FreeBSD\u7684\u542f\u52a8\u811a\u672c\u5c06\u5728\u52a0\u8f7dwifi\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u524d\u5c1d\u8bd5\u521b\u5efa\u94fe\u8def\u805a\u5408\u63a5\u53e3\uff0c\u5e76\u4e14(\u6beb\u4e0d\u5947\u602a)\u65e0\u6cd5\u805a\u5408\u7f51\u7edc\u3002t\u5b58\u5728\u3002\u5bf9devmatch rc.d\u811a\u672c\u7684\u4e00\u884c\u4fee\u590d\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u8f83\u65e9\u5730\u79fb\u52a8\u4e86\u5b83\uff0c\u5e76\u4f7f\u4e24\u4e2aloader.conf\u884c\u53d8\u5f97\u4e0d\u5fc5\u8981\u3002\n\u6700\u540e\uff0c\u4e5f\u662f\u6700\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u6211\u4e00\u5ea6\u53d1\u73b0\u63d2\u4e0a\u6216\u62d4\u4e0b\u4ea4\u6d41\u7535\u6e90\u4f1a\u5bfc\u81f4\u7b14\u8bb0\u672c\u7535\u8111\u8fdb\u5165\u7761\u7720\u72b6\u6001(S3\u6302\u8d77)\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u7531\u4e8eACPI\u3001upowerd\u548cKDE\u7684\u7535\u6e90\u7ba1\u7406\u9009\u9879\u4e4b\u95f4\u7684\u4ea4\u4e92\u4f5c\u7528\uff1a\u5982\u679c\u5728\u7cfb\u7edf\u5904\u4e8e\u7761\u7720\u72b6\u6001\u65f6\u6253\u5f00\u7b14\u8bb0\u672c\u7535\u8111\u76d6\uff0c\u5219ACPI\u4e0d\u4f1a\u53d1\u9001\u901a\u77e5\uff0c\u5bfc\u81f4upowerd\u8ba4\u4e3a\u7b14\u8bb0\u672c\u7535\u8111\u76d6\u4ecd\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u5f53KDE\u6536\u5230\u4ea4\u6d41\u7535\u6e90\u72b6\u6001\u6539\u53d8\u7684\u6d88\u606f\u65f6\uff0c\u5b83\u68c0\u67e5\u4e86\u6240\u6709\u4e0e\u7535\u6e90\u7ba1\u7406\u76f8\u5173\u7684\u72b6\u6001\uff0c\u53d1\u73b0\u76d6\u5b50\u662f\u5173\u95ed\u7684\uff0c\u5e76\u51b3\u5b9a\u5b83\u5e94\u8be5\u8fdb\u5165\u7761\u7720\u72b6\u6001\u3002\u6700\u540e\uff0c\u6211\u53ea\u9700\u8981\u5bf9FreeBSD\u7684ACPI\u4ee3\u7801\u8fdb\u884c\u4e00\u884c\u4fee\u590d\uff0c\u4f46\u662f\u82b1\u4e86\u4e09\u5929\u65f6\u95f4\u624d\u627e\u5230\u8fd9\u4e00\u884c\uff01\nFreeBSD\u4e3a\u684c\u9762\u505a\u597d\u51c6\u5907\u4e86\u5417\uff1f\u662f\u4e5f\u4e0d\u662f\u3002\u662f\u7684\uff0c\u56e0\u4e3a\u6211\u6709\u4e00\u53f0Verynice FreeBSD\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4e00\u5207\u90fd\u53ef\u4ee5\u6309\u7167\u6211\u60f3\u8981\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u6211\u5728\u4e1a\u4f59\u65f6\u95f4\u82b1\u4e86\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u6446\u5f04\u8fd9\u4e9b\u4e1c\u897f\uff0c\u624d\u4fee\u590d\u4e86\u4e00\u4e9b\u51fa\u73b0\u7684\u5c0f\u6545\u969c\uff1b\u867d\u7136\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\uff0c\u4f46\u6211\u9884\u8ba1\uff0c\u5927\u591a\u6570\u4eba\u5728\u89e3\u51b3\u6211\u9047\u5230\u7684\u6240\u6709\u95ee\u9898\u4e4b\u524d\uff0c\u65e9\u5c31\u4f1a\u653e\u5f03\u4e86\u3002\u53e6\u4e00\u65b9\u9762\uff0cFreeBSD\u80fd\u4e3a\u684c\u9762\u505a\u597d\u51c6\u5907\u5417\uff1f\u7edd\u5bf9\u53ef\u4ee5\u3002\u6211\u5df2\u7ecf\u4fee\u590d\u4e86\u6211\u9047\u5230\u7684\u95ee\u9898-\u4e00\u65e6\u6211\u4eec\u6709\u4e86FreeBSD 12.2\u7248\u672c\uff0c\u4ee5\u53ca\u4e3a\u8be5\u7248\u672c\u6784\u5efa\u7684\u5305\uff0c\u542f\u52a8GUI\u7684\u8fc7\u7a0b\u4e5f\u4f1a\u5bb9\u6613\u5f97\u591a\u3002FreeBSD\u6700\u9700\u8981\u7684\u662f\u8ba9\u5f00\u53d1\u4eba\u5458\u8d2d\u4e70\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5e76\u4ed4\u7ec6\u89e3\u51b3\u51fa\u73b0\u7684\u95ee\u9898\uff1bFreeBSD\u57fa\u91d1\u4f1a\u5df2\u7ecf\u5f00\u59cb\u8fd9\u6837\u505a\u4e86\uff0c\u6211\u5e0c\u671b\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u4ed6\u4eec-\u4ee5\u53ca\u5176\u4ed6FreeBSD\u7528\u6237-\u5c06\u53d1\u5e03\u62a5\u544a\uff0c\u544a\u8bc9\u6211\u4eec\u54ea\u4e9b\u7b14\u8bb0\u672c\u7535\u8111\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4ed6\u4eec\u9700\u8981\u4ec0\u4e48\u914d\u7f6e\u3002", "note_en": "As a FreeBSD developer, I make a point of using FreeBSD whenever I can\u2014 including on the desktop. I&#39;ve been running FreeBSD on laptopssince 2004; this hasn&#39;t always been easy, but over the years I&#39;ve foundthat the situation has generally been improving. One of the thingswe still lack is adequate documentation, however \u2014 so I&#39;m writingthis to provide an example for users and also Google bait in caseanyone runs into some of the problems I had to address. A few months ago, after my System76 Galago Pro had its  secondexperience with a dead/swelling batery, I decided that it was time toreplace it. On February 15th, I ordered a Dell Latitude 7390. This is an older model of laptop \u2014 it originally launched in2018 \u2014 but I&#39;ve always found that Dell Latitudes are well built,and this one came with a very attractive price tag: Rather than theoriginal price of $3599 CAD ($2600 USD), Dell Canada was selling itfor $1049 CAD ($750 USD). I can only assume that it was the last oftheir stock and they wanted to clear out that production line. The laptop came with:  The laptop arrived on March 6th, and I made a couple upgrades: I replaced the 256 GB SSD with an Intel 660p 512 GB NVMe disk ($94 CAD).\nIn addition to giving me double the disk space, upgrading the disk allowedme to keep the Windows installation intact in case I ever want to put thislaptop back into use running Windows. After these upgrades, I didn&#39;t quite have my ideal laptop \u2014 I wouldhave preferred 32 GB of RAM (Dell&#39;s specifications state that this laptopsupports a maximum of 16 GB), a second disk (theoretically the &#34;WWAN&#34;PCIe slot can hold an M.2 2242 NVMe disk, but comments online suggest thatthe Dell BIOS doesn&#39;t allow SSDs in that slot) and a TrackStick \u2014but for what I paid I really can&#39;t complain. I downloaded the &#34;memstick&#34; image from the latest FreeBSD 12.1-STABLEweekly snapshot using my old laptop and wrote it to a USB Disk. NormallyI would use a RELEASE image (which would make some later steps easier too)but a few recent changes I had made and some of the code needed to supportthe I2C touchpad weren&#39;t in the last release. (If you&#39;re reading this afew months into the future, use 12.2 or a later release instead of the12-STABLE branch.) To boot from a USB stick on the Dell Latitude 7390, I needed to press F12when I turned the system on to enter the boot disk selection menu. Installing FreeBSD was easy for me, as I&#39;ve done it many times in thepast; but I did change several defaults: When selecting which parts of FreeBSD to install, I included the&#34;src&#34; distribution. Normally I wouldn&#39;t do this; but I needed theFreeBSD source code for building some kernel modules later.\n When configuring ZFS, I turned on full disk encryption (as I have done onall of my laptops recently).\n I increased the swap space from 2 GB (the default) to 16 GB. I hopethat this system never needs to use swap space \u2014 but if its 16 GBof RAM isn&#39;t enough, it&#39;s unlikely that 2 GB of swap space would beenough to help either.\n I turned off  sshd \u2014 I don&#39;t intend to connect to thislaptop remotely \u2014 and turned on  ntpd and  powerd\u2014 I want the clock kept accurate, and I want to save power byrunning the CPU slower when it&#39;s not under load. (These can be enabledor disabled via  /etc/rc.conf later, but the installer offersthem so I figured I might as well do it here.)\n From the &#34;system hardening&#34; screen, I enabled the  clear_tmp, disable_syslogd, and  disable_sendmail options \u2014the first two are just on principle, while Sendmail is something I don&#39;tuse and don&#39;t want (I use qmail instead). I don&#39;t enable any of the other&#34;hardening&#34; options since they don&#39;t have any significant benefit butremove functionality which I find useful.\n When creating my &#34;cperciva&#34; user account, I added the account to the wheel and  video groups. The former is necessary so thatI can  su to root; the latter is necessary for applications toaccess accelerated video functionality. (If you forget these, you can login as root and add them later, but it&#39;s a nuisance \u2014 and I mentionthem here because I have on numerous occasions needed to do exactly that.)\nAfter the installation completes, I asked the installer to reboot the systemand removed the USB disk. The first thing I did was to turn off the annoyingly loud console beep: and then I told FreeBSD to use &#34;link aggregation&#34; networking, failingover automatically from the wired ethernet (if connected) to the WiFinetwork # sysrc wlans_iwm0=&#34;wlan0&#34;# sysrc ifconfig_wlan0=&#34;WPA&#34;# sysrc ifconfig_em0=&#34;ether MY:WI:FI:MAC:ADD:RESS&#34;# sysrc cloned_interfaces=&#34;lagg0&#34;# sysrc ifconfig_lagg0=&#34;laggproto failover laggport em0 laggport wlan0 DHCP&#34;\nprovided my WiFi network credentials via  /etc/wpa_supplicant.conf and started the network ( service netif restart). I want a firewall,so I enabled FreeBSD&#39;s  pf with a very simple configuration: # echo &#34;block in all&#34; &gt; /etc/pf.conf# echo &#34;set skip on lo0&#34; &gt;&gt; /etc/pf.conf# echo &#34;pass out all keep state&#34; &gt;&gt; /etc/pf.conf# sysrc pf_enable=&#34;YES&#34;# service pf start\n Now for the most annoying part: Because I&#39;m running 12.1-STABLE rather than12.1-RELEASE (due to the aforementioned patches and recently added support fothe I2C touchpad) I couldn&#39;t rely completely on packages built by the FreeBSDProject. Instead, I needed to build two packages of kernel modules \u2014 drm-kmod and  iichid \u2014 via the ports tree. This meant: And locking those packages to ensure that they won&#39;t be &#34;upgraded&#34;automatically to versions compiled on FreeBSD 12.1-RELEASE:\nIf I had been able to install 12.2-RELEASE (which does not exist yet atthe time I am writing this), those steps would simply have been pkg install iichid drm-kmod. Now that I had those packages in place, I could download the other onesI needed to get a basic GUI running:  And then do some basic configuration to turn on the GUI: At this point I could reboot and watch my laptop boot into a GUI where Ilogged in as  cperciva, opened a console (Ctrl-Alt-T), and used su to become root so I could do more configuration. The BIOS on the Dell Latitude 7390 configures the speakers and headphonejack as being independent audio outputs. This isn&#39;t what I want \u2014I want to have sound go to the speakers by default but switch to theheadphone jack and mute the speakers automatically if I plug in headphones.To do this, I told FreeBSD that the headphones (which are  nid33on this laptop) are part of the same audio set ( as=1) as thespeakers but should use mute-and-switch-to-headphones behaviour( seq=15): Speaking of audio, there&#39;s a bug in the HDMI codec which results inannoying warnings (&#34;Unexpected unsolicited response with tag 63&#34; and&#34;Command timeout on address 2&#34;) being logged to the kernel console. EdMaste has been working on fixing the underlying issues, but he provided aworkaround which let me silence the warnings: My preferred (KDE) environment doesn&#39;t need D-Bus for much, but one place itis needed is to allow the GUI tools to see the battery state and interact withpower management: CPU bugs often get fixed via microcode patches, so I want to have those: I want my laptop to boot faster \u2014 which means not having the bootloader wait 10 seconds in case I want to change how I boot, and nothaving the FreeBSD kernel wait for USB devices before mounting the rootfilesystem (I know that my root filesystem is on the NVMe disk): As mentioned above, I like to use qmail rather than sendmail; I also use spiped to tunnel emailto and from my mail server: # pkg install netqmail ucspi-tcp spiped# echo `hostname` &gt; /var/qmail/control/me# echo &#34;:127.0.0.1:8025&#34; &gt; /var/qmail/control/smtproutes# rm /var/qmail/alias/.qmail-*# echo cperciva &gt; /var/qmail/alias/.qmail-default# cp /var/qmail/doc/mailer.conf.sample /etc/mail/mailer.conf# sysrc qmailsend_enable=&#34;YES&#34;# sysrc qmailsmtpd_enable=&#34;YES&#34;# sysrc qmailsmtpd_host=&#34;127.0.0.1&#34;# echo &#34;127.0.0.1:allow&#34; &gt; /etc/tcp.smtp# sysrc spiped_enable=&#34;YES&#34;# sysrc spiped_pipes=&#34;SMTP POP3&#34;# sysrc spiped_pipe_SMTP_mode=&#34;client&#34;# sysrc spiped_pipe_SMTP_source=&#34;[127.0.0.1]:8025&#34;# sysrc spiped_pipe_SMTP_target=&#34;mail.tarsnap.com:8025&#34;# sysrc spiped_pipe_SMTP_key=&#34;/etc/spiped/smtp.key&#34;# sysrc spiped_pipe_POP3_mode=&#34;client&#34;# sysrc spiped_pipe_POP3_source=&#34;[127.0.0.1]:110&#34;# sysrc spiped_pipe_POP3_target=&#34;mail.tarsnap.com:8110&#34;# sysrc spiped_pipe_POP3_key=&#34;/etc/spiped/pop3.key&#34;\nAnd finally while the webcam daemon is installed already (the  kde5package pulls it in as a dependency) I want it to be enabled and I want the cperciva user to be able to access it:  At this point I had a fully functional desktop environment, but it wasn&#39;tset up exactly how I wanted. I don&#39;t like the default KDE wallpaper, so Iinstalled new wallpaper and told KDE to use it (right click on desktop; &#34;Configure Desktop&#34;; scrolldown and select the right wallpaper). I want to be able to print from within KDE, so I enabled CUPS (which wasalready installed as a KDE dependency) and started it (necessary since Iwanted to use it without rebooting): and then told KDE about my printer (&#34;System Settings&#34; -&gt; &#34;Printers&#34; -&gt; &#34;AddPrinter&#34;; manual URI of  http://192.168.1.60:631/ipp and the GenericPostScript Printer driver). I want to be able to control the brightness of the screen (aka. thebacklight connected to the Intel video chipset): and in particular to be able to control it via the function keys (Fn+Up,Fn+Down) which Dell exposes via ACPI:  There&#39;s a long list of software I want to be able to use (or insome cases, would prefer to avoid, but need nonetheless): # pkg install firefox libreoffice thunderbird chromium# pkg install nano konversation# pkg install xournal ImageMagick7 pdftk# pkg install texlive-full# pkg install git subversion diffstat portlint sloccount# pkg install autoconf autoconf-archive automake libtool# pkg install base64 wkhtmltopdf# pkg install tarsnap\n And finally I want to perform hourly backups to Tarsnap \u2014 but in the background,and not spinning up the CPU to perform them: # echo &#39;47 * * * * root nice /usr/local/bin/tarsnap -c --keyfile /root/tarsnap.key -f `date +\\%Y-\\%m-\\%d:\\%H` /root /etc /usr/local/etc /usr/home&#39; &gt; /etc/cron.d/tarsnap# sysrc powerd_flags=&#34;-N&#34;\n Like most desktop environments, KDE has a myriad settings which can beadjusted, and I change many to match my personal taste, ranging fromthe Application Launcher (I prefer the &#34;menu&#34; version) to the keyboardshortcuts for changing desktops (I use Meta+Tab for this, since I don&#39;tmake use of KDE &#34;Activities&#34;). The one particularly noteworthy option I set is to tell KDE to &#34;Sleep&#34;when the laptop lid is closed; in combination with the (default) settingto lock the screen when sleeping, this gives me a convenient way to&#34;put the laptop away&#34; when I don&#39;t want to shut it down completely.(Note however that it is unable to &#34;Hibernate&#34; since FreeBSD does nothave the necessary support for Suspend-to-Disk.) So where are we at now? Here&#39;s a short summary: Battery: 8-12 hours under typical use depending on backlight brightness; 2 hours of  buidworld -j8.\n After the above installation and configuration \u2014 which took 75minutes, mostly spent downloading 4 GB worth of packages \u2014 there&#39;sjust one things left to do: Copy all my data across from my old laptop. While the above installation and configuration process all worked inthe end, it wasn&#39;t nearly as smooth the first time \u2014 or the secondtime, or the third time. Some of the issues I ran into: The first time I installed FreeBSD, I installed FreeBSD 12.1-RELEASE. Thiscaused problems for the touchpad \u2014 it was very unresponsive and thepointer often &#34;lagged&#34; up to half a second behind \u2014 because therelease didn&#39;t have some I2C code which was later added in 12.1-STABLE.\n After upgrading the system to 12.1-STABLE, I found that the video driverdidn&#39;t work. While FreeBSD aims to maintain compatibility in &#34;stable&#34;branches, occasionally issues slip in \u2014 and one such issue arosein the 12-STABLE branch making the  drm-kmod package built on12.1-RELEASE incompatible with the 12.1-STABLE kernel.\n Once I determined that I needed 12.1-STABLE (and confirmed that withappropriately compiled packages, both video and touchpad worked) Idecided to reinstall from a 12.1-STABLE ISO. I downloaded the &#34;memstick&#34;ISO, and... it was corrupted. Or rather, truncated; I guess somethingbroke with the mirroring of that week&#39;s snapshots.\n No matter, I thought; I can use the &#34;mini-memstick&#34; ISO instead; thisdownloads the parts of FreeBSD you want at install time rather thanincluding them all on the ISO. This one wasn&#39;t corrupted \u2014 butwhen the installer got to downloading the bits I wanted to install, itcouldn&#39;t recognize my WiFi network. Fortunately this was only a minorannoyance: I plugged my laptop into my wired network and everythingwas fine.\n One of the times (I can&#39;t remember which) I tried to install the chromium package, it turned out that there wasn&#39;t a packageavailable: That week&#39;s build in the FreeBSD package-building clusterfailed because the ever-growing build had just crossed the 24 hourlimit and the package builder decided that it must have gotten stuck.I reported this to the FreeBSD ports manager team and they increasedchromium&#39;s time limit so that it could build successfully \u2014 butin the mean time I had to build the port myself (which took about sixhours on my laptop).\n Before I started working on this laptop, the backlight control keyswould adjust  acpi_video&#39;s notion of what the brightness shouldbe, and the  intel-backlight tool was able to adjust the actualbrightness, but there was no connection between the two; I had to add codeto the FreeBSD kernel to expose brightness changes via devd and wrote thenecessary configuration file ( acpi-video-intel-backlight.conf)to invoke  intel-backlight to make the necessary changes.\n When I first set up the  lagg interface to have FreeBSD switchautomatically between wired and wireless networks, I found that I neededto load the WiFi driver (and firmware) kernel modules via  loader.confrather than having them loaded automatically by the recently-added &#34;devmatch&#34;tool: If I relied on devmatch, then FreeBSD&#39;s startup scripts would try tocreate the link aggregation interface before the wifi driver was loaded, and(unsurprisingly) fail to aggregate a network interface which didn&#39;t exist.A one-line fix to the devmatch rc.d script moved it earlier in the bootprocess and made two  loader.conf lines unnecessary.\n Finally \u2014 and most confusingly \u2014 I found at one point thatplugging or unplugging AC power would result in the laptop going to sleep(S3 Suspend). This turned out to be due to an interaction between ACPI,upowerd, and KDE&#39;s power management options: ACPI was not sending anotification if the laptop lid was opened while the system was asleep,resulting in upowerd thinking that the lid was still closed... and whenKDE got a message about the AC power status changing, it checked all ofthe statuses related to power management, found that the lid was &#34;closed&#34;,and decided that it should go to sleep. In the end, all I needed was aone-line fix to FreeBSD&#39;s ACPI code, but it took three days to find thatone line!\n Is FreeBSD ready for the desktop? Yes and no. Yes, in that I have a verynice FreeBSD laptop where everything works the way I want. But no, in thatit took me two months worth of fiddling with this in my spare time to fixsome of the &#34;glitches&#34; which arose; while there wasn&#39;t anything particularlychallenging, I expect that most people would give up long before they fixedall of the issues I ran into. On the other hand,  can FreeBSD be ready for the desktop?Absolutely. I&#39;ve fixed the issues I ran into \u2014 and once we haveFreeBSD 12.2-RELEASE with packages built for that release the process ofbringing up a GUI will be much easier, as well. The biggest thing FreeBSDneeds is to have developers acquiring laptops and carefully working theirway through the issues which arise; the FreeBSD Foundation hasalready started doing this, and I hope in the months to come they \u2014and other FreeBSD users \u2014 will publish reports telling us whichlaptops work and what configuration they need.", "posttime": "2020-05-22 17:34:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,freebsd,laptop", "title": "\u6211\u7684\u65b0FreeBSD\u7b14\u8bb0\u672c\u7535\u8111\uff1aDell Latitude 7390", "title_en": "My New FreeBSD Laptop: Dell Latitude 7390", "transed": 1, "url": "http://www.daemonology.net/blog/2020-05-22-my-new-FreeBSD-laptop-Dell-7390.html", "via": "", "real_tags": ["\u7535\u8111", "freebsd", "laptop"]}, {"category": "", "categoryclass": "", "imagename": "620a0ad270fca4cad8ca8772f9d7e6bd.jpg", "infoid": 1003255, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce2\u5c14\u00b7\u62c9\u6590\u5c14\uff01\u4eca\u5e74\uff0c\u4e5f\u5c31\u662f\u4ed6\u901d\u4e16\u4e94\u767e\u5468\u5e74\uff0c\u672c\u5e94\u662f\u4ed6\u5149\u8363\u7684\u4e00\u5e74\u3002\u57282018\u5e74\u7c73\u5f00\u6717\u57fa\u7f57\u548c2019\u5e74\u83b1\u6602\u7eb3\u591a\u00b7\u8fbe\u82ac\u5947\u7684\u5927\u578b\u5c55\u89c8\u4e4b\u540e\uff0c\u535a\u7269\u9986\u754c\u6b63\u5728\u5e86\u795d\u8fd9\u4f4d\u5149\u8363\u7684\u6587\u827a\u590d\u5174\u65f6\u671f\u827a\u672f\u4e09\u4f4d\u4e00\u4f53\u7684\u7b2c\u4e09\u4f4d\u6210\u5458\u3002\u7136\u540e\uff0c\u5bf9\u65b0\u51a0\u72b6\u75c5\u6bd2\u7684\u6050\u60e7\u8feb\u4f7f\u5404\u5730\u7684\u535a\u7269\u9986\u53d6\u4e0b\u6a2a\u5e45\uff0c\u9a71\u8d76\u6e38\u5ba2\uff0c\u5173\u95ed\u5927\u95e8\u3002\u8bb2\u5ea7\u548c\u4f1a\u8bae\uff0c\u53d6\u6d88\u4e86\uff01\u534e\u76db\u987f\u56fd\u5bb6\u7f8e\u672f\u9986\u7684\u201c\u62c9\u6590\u5c14\u548c\u4ed6\u7684\u5708\u5b50\u201d\u95ed\u5e55\u4e86\uff01\u5df4\u9ece\u90ca\u5916\u5b54\u6234\u535a\u7269\u9986\u7684\u201c\u62c9\u6590\u5c14\uff1a\u8001\u5e08\u548c\u4ed6\u7684\u5b66\u751f\u201d\u95ed\u9986\u4e86\uff01\u4e00\u65e6\u6050\u614c\u8fc7\u53bb\uff0c\u4ed6\u4eec\u4f1a\u91cd\u65b0\u5f00\u5f20\u5417\uff1f\u6ca1\u4eba\u77e5\u9053\u3002\u81f3\u5c11\uff0c\u7f57\u9a6c\u594e\u91cc\u7eb3\u83b1\u7f8e\u672f\u9986(Scuderie Del Quirinale)\u76ee\u524d\u5173\u95ed\u7684\u201c\u62c9\u6590\u5c14\u201d(Raffaello)\u5df2\u7ecf\u5ba3\u5e03\u8ba1\u5212\u4e8e6\u67082\u65e5\u91cd\u65b0\u5f00\u653e\u3002\u6700\u540e\u4e00\u4e2a\u88ab\u6807\u699c\u4e3a\u6709\u53f2\u4ee5\u6765\u89c4\u6a21\u6700\u5927\u7684\u62c9\u6590\u5c14\u5c55\u89c8\uff0c\u5c55\u51fa\u4e86200\u591a\u4ef6\u6770\u4f5c\uff0c\u5176\u4e2d\u5305\u62ec\u62c9\u6590\u5c14\u672c\u4eba\u7684100\u5e45\u6cb9\u753b\u548c\u7d20\u63cf\uff0c\u7531\u4e4c\u83f2\u9f50\u3001\u5362\u6d6e\u5bab\u3001\u666e\u62c9\u591a\u548c\u4f26\u6566\u56fd\u5bb6\u7f8e\u672f\u9986\u7b49\u51fa\u501f\u3002\u4eba\u4eec\u5e0c\u671b\u7406\u6027\u80fd\u53ca\u65f6\u91cd\u8fd4\u738b\u4f4d\uff0c\u8ba9\u4f26\u6566\u56fd\u5bb6\u7f8e\u672f\u9986(National Gallery)\u572810\u6708\u4efd\u5f00\u95e8\uff0c\u8fd9\u5c06\u662f\u4eca\u5e74\u7b2c\u4e8c\u5927\u5c55\u89c8\u3002\n\u62c9\u6590\u5c14\u6210\u5c31\u7684\u5e86\u795d\u6d3b\u52a8\u88ab\u4e00\u79cd\u81f4\u547d\u7684\u75c5\u6bd2\u6253\u65ad\uff0c\u8fd9\u662f\u4e00\u79cd\u60b2\u5267\u6027\u7684\u5de7\u5408\uff0c\u6216\u8005\u53ef\u80fd\u662f\u8bd7\u610f\u7684\u4e0d\u516c\u6b63\u30021520\u5e744\u67086\u65e5\uff0c\u4e00\u573a\u5e2d\u5377\u6559\u7687\u5bab\u5ef7\u7684\u75c5\u6bd2\u6027\u80ba\u708e\u593a\u53bb\u4e86\u62c9\u6590\u5c14\u672c\u4eba\u7684\u751f\u547d\uff0c\u4eab\u5e7437\u5c81\u3002\u4f20\u8bb0\u4f5c\u8005\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u4f4d\u52b3\u7d2f\u8fc7\u5ea6\u3001\u7b4b\u75b2\u529b\u5c3d\u7684\u827a\u672f\u5bb6\u88ab\u4e00\u573a\u58ee\u89c2\u7684\u58ee\u4e3e\u5e26\u8d70\u4e86\u3002\u4ed6\u6700\u5927\u7684\u8d5e\u52a9\u4eba\uff0c\u7f8e\u7b2c\u5947\u6559\u7687\u5229\u5965\u5341\u4e16\uff0c\u4e00\u5e74\u534a\u540e\u7a81\u7136\u6b7b\u4e8e\u80ba\u708e\uff0c\u4eab\u5e7446\u5c81\u3002\u5728\u6587\u827a\u590d\u5174\u65f6\u671f\u7684\u7f57\u9a6c\uff0c\u827a\u672f\u5bb6\u548c\u8d5e\u52a9\u4eba\u4e4b\u95f4\u6700\u5bcc\u6709\u6210\u6548\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u6301\u7eed\u4e86\u4e03\u5e74\u591a\u4e00\u70b9\u3002\u5176\u4e2d\u7684\u53d7\u5bb3\u8005\u5305\u62ec\u62c9\u6590\u5c14\u7684\u5efa\u7b51\u5e08\u751f\u6daf\uff0c\u5c31\u5728\u5b83\u5f00\u59cb\u84ec\u52c3\u53d1\u5c55\u7684\u65f6\u5019\u88ab\u5207\u65ad\u4e86\u3002\n\u5728\u4ed6\u827a\u672f\u751f\u6daf\u7684\u65e9\u671f\uff0c\u62c9\u6590\u5c14\u4e3b\u8981\u662f\u4f5c\u4e3a\u4e00\u4f4d\u975e\u5e38\u6709\u6210\u5c31\u7684\u753b\u5bb6\u800c\u95fb\u540d\uff0c\u4ed6\u662f\u4e00\u4f4d\u7528\u77f3\u6cb9\u521b\u4f5c\u67d4\u548c\u7684\u5b97\u6559\u573a\u666f\u7684\u5236\u9020\u8005\uff0c\u4ee5\u53ca\u53e4\u4ee3\u54f2\u5b66\u3001\u795e\u5b66\u548c\u827a\u672f\u7684\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\u7684\u613f\u666f\uff0c\u8fd9\u4e9b\u613f\u666f\u90fd\u58c1\u753b\u5728\u68b5\u8482\u5188\u5bab\u6bbf\u6559\u7687\u7684\u516c\u5bd3\u65af\u5766\u5179(Stanze)\u7684\u5899\u4e0a\u3002\u7136\u800c\uff0c\u57281514\u5e74\uff0c\u6559\u7687\u5229\u5965\u5728\u65b0\u5723\u5f7c\u5f97\u5927\u6559\u5802\u7684\u7b2c\u4e00\u4f4d\u5efa\u7b51\u5e08\u5e03\u62c9\u66fc\u7279\u53bb\u4e16\u540e\uff0c\u9009\u62e9\u4ed6\u62c5\u4efb\u65b0\u5723\u5f7c\u5f97\u5927\u6559\u5802\u7684\u9996\u5e2d\u5efa\u7b51\u5e08\uff0c\u5c06\u8fd9\u4f4d\u5e74\u8f7b\u827a\u672f\u5bb6\u7684\u804c\u4e1a\u751f\u6daf\u63a8\u5411\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u5411\u3002\u62c9\u6590\u5c14\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5bf9\u5efa\u7b51\u611f\u5174\u8da3\uff0c\u57281514\u5e74\u4e4b\u524d\u66fe\u6d89\u8db3\u8fc7\u51e0\u4e2a\u9879\u76ee\uff0c\u4f46\u65b0\u7684\u4efb\u547d\u4f7f\u4ed6\u5b9e\u9645\u4e0a\u6210\u4e3a\u57fa\u7763\u6559\u4e16\u754c\u7684\u9886\u5148\u5efa\u7b51\u5e08\u3002\n\u6ca1\u6709\u6bd4\u65b0\u5723\u5f7c\u5f97\u6559\u5802\u66f4\u80fd\u4f53\u73b0\u6587\u827a\u590d\u5174\u65f6\u671f\u7f57\u9a6c\u6587\u5316\u81ea\u4fe1\u7684\u4e86\u3002\u6559\u7687\u6731\u5229\u53f6\u65af\u4e8c\u4e16\u51b3\u5b9a\u5728\u57fa\u7763\u6559\u9996\u90fd\u5efa\u9020\u4e00\u5ea7\u5de8\u5927\u7684\u65b0\u53e4\u5178\u8bbe\u8ba1\u6559\u5802\uff0c\u8fd9\u7b80\u76f4\u662f\u5927\u80c6\u4e4b\u4e3e\u3002\u5b83\u7684\u5efa\u9020\u8981\u6c42\u6559\u7687\u62c6\u9664\u57fa\u7763\u6559\u4e16\u754c\u6700\u53e4\u8001\u7684\u6559\u5802-\u8001\u5723\u5f7c\u5f97\u5927\u6559\u5802\uff0c\u8fd9\u5ea7\u6559\u5802\u662f\u7531\u541b\u58eb\u5766\u4e01\u7687\u5e1d\u4e8e4\u4e16\u7eaa\u5728\u5c3c\u7984\u9a6c\u620f\u56e2\u7684\u5e9f\u589f\u4e0a\u5efa\u9020\u7684\u3002\u6839\u636e\u4e00\u4e2a\u4f20\u7edf\uff0c\u8fd9\u5ea7\u5927\u6559\u5802\u4e0d\u4ec5\u7eaa\u5ff5\u5723\u5f7c\u5f97\u7684\u5893\u5730\uff0c\u4e5f\u7eaa\u5ff5\u4ed6\u6b89\u96be\u7684\u5730\u65b9\u3002\u8001\u6559\u5802\u91cc\u6324\u6ee1\u4e86\u5723\u5f92\u7684\u9057\u8ff9\uff0c\u6559\u7687\u548c\u70c8\u58eb\u7684\u575f\u5893\uff0c\u4ee5\u53ca\u8457\u540d\u7684\u827a\u672f\u4f5c\u54c1\uff0c\u5305\u62ec\u7f8e\u4e3d\u7684\u53e4\u4ee3\u9a6c\u8d5b\u514b\u548c\u4e54\u6258\u768414\u4e16\u7eaa\u58c1\u753b\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5fc5\u987b\u4e3a\u65b0\u6559\u5802\u62c6\u9664\uff0c\u8fd9\u662f(\u8bb8\u591a\u4eba\u8bf4\u7684)\u6559\u7687\u6731\u5229\u53f6\u65af\u865a\u8363\u5fc3\u7684\u7eaa\u5ff5\u7891\u3002\u5f53\u7136\uff0c\u6ca1\u6709\u4eba\u80fd\u6307\u8d23\u6559\u7687\u8fc7\u4e8e\u8c26\u865a\u3002\u6731\u5229\u53f6\u65af\u7684\u9996\u5e2d\u5efa\u7b51\u5e08\u5e03\u62c9\u66fc\u7279(Bramante)\u8ba1\u5212\u5728\u65b0\u5927\u6559\u5802\u7684\u4e2d\u592e\u5341\u5b57\u8def\u53e3\u548c\u5723\u5f7c\u5f97\u5893(\u73b0\u5728\u77d7\u7acb\u7740\u5df4\u8fbe\u57fa\u8bfa\u548c\u9ad8\u575b)\u4e0a\u65b9\u7ad6\u7acb\u4e00\u5ea7\u4e09\u5c42\u697c\u9ad8\u7684\u96d5\u5851\u88c5\u7f6e\uff0c\u4e0a\u9762\u670940\u591a\u5ea7\u96d5\u5851\uff0c\u5168\u90e8\u7531\u7c73\u5f00\u6717\u57fa\u7f57\u521b\u4f5c\uff0c\u4f5c\u4e3a\u6559\u7687\u6731\u5229\u53f6\u65af\u672c\u4eba\u7684\u575f\u5893\u3002\n\u5c3d\u7ba1\u8c22\u5929\u8c22\u5730\uff0c\u8be5\u9879\u76ee\u7684\u8fd9\u4e00\u90e8\u5206\u6700\u7ec8\u88ab\u6401\u7f6e\u4e86\uff0c\u4f46\u5229\u5965\u5341\u4e16\u548c\u968f\u540e\u7684\u6559\u7687\u4eec\u7ee7\u7eed\u6295\u5165\u5927\u91cf\u8d44\u6e90\u5efa\u9020\u5927\u6559\u5802\u3002150\u5e74\u6765\uff0c\u5b83\u4e00\u76f4\u662f\u6559\u7687\u8d5e\u52a9\u827a\u672f\u7684\u6838\u5fc3\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5f53\u65f6\u6700\u806a\u660e\u7684\u8d5e\u52a9\u4eba\u6559\u7687\u5229\u5965(Pope Leo)\u4efb\u547d\u5e74\u8f7b\u7684\u62c9\u6590\u5c14(Raphael)\u4e3a\u5efa\u7b51\u5e08\uff0c\u800c\u4ed6\u5728\u5efa\u7b51\u8bbe\u8ba1\u65b9\u9762\u51e0\u4e4e\u6ca1\u6709\u7ecf\u9a8c\uff1f\u62c9\u6590\u5c14\u7684\u4e3b\u8981\u4f20\u8bb0\u4f5c\u5bb6\u4e54\u6cbb\u00b7\u74e6\u8428\u91cc(Giorgio Vasari)\u7684\u8bfb\u8005\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u662f\u60c5\u6709\u53ef\u539f\u7684\u3002\u74e6\u8428\u91cc\u5bf9\u62c9\u6590\u5c14\u7684\u753b\u4f5c\u8d5e\u4e0d\u7edd\u53e3\uff0c\u4f46\u51e0\u4e4e\u6ca1\u6709\u63d0\u5230\u4ed6\u4e0e\u5efa\u7b51\u7684\u5173\u7cfb\u3002\u8bb8\u591a\u73b0\u4ee3\u5b66\u8005\u5bf9\u5efa\u7b51\u5e08\u62c9\u6590\u5c14\u4e0d\u5c51\u4e00\u987e\uff0c\u8ba4\u4e3a\u4ed6\u53ea\u662f\u5e03\u62c9\u66fc\u7279\u7684\u8ffd\u968f\u8005\uff0c\u800c\u5e03\u62c9\u66fc\u7279\u662f\u4e00\u4f4d\u5efa\u7b51\u5927\u5e08\u66fc\u51ef\uff0c\u4ed6\u6ca1\u6709\u5b8c\u6210\u4efb\u4f55\u91cd\u5927\u7684\u7eaa\u5ff5\u7891\u3002\u5927\u591a\u6570\u827a\u672f\u9274\u8d4f\u5bb6\uff0c\u5982\u679c\u4ed6\u4eec\u60f3\u5230\u62c9\u6590\u5c14\u7684\u5efa\u7b51\uff0c\u5c31\u4f1a\u60f3\u5230\u96c5\u5178\u5b66\u6821(1509-11\u5e74)\u7b49\u7ed8\u753b\u4e2d\u7684\u5efa\u7b51\u80cc\u666f\uff0c\u5728\u90a3\u91cc\uff0c\u53e4\u4ee3\u54f2\u5b66\u5bb6\u5728\u4e00\u5ea7\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\u7684\u4e2d\u592e\u89c4\u5212\u7684\u5927\u6559\u5802\u5916\u7684\u53f0\u9636\u4e0a\u6388\u8bfe\u548c\u8fa9\u8bba\uff0c\u8fd9\u8ba9\u4eba\u5f3a\u70c8\u5730\u60f3\u8d77\u5e03\u62c9\u66fc\u7279\u4e3a\u65b0\u5723\u5f7c\u5f97\u5927\u6559\u5802\u8bbe\u8ba1\u7684\u4f5c\u54c1\u3002\n\u62c9\u6590\u5c14\u7684\u540c\u4ee3\u4eba\uff0c\n\u5728\u4ed6\u6240\u6709\u7684\u4f5c\u54c1\u4e2d\uff0c\u53ea\u6709\u4ed6\u4e3a\u5723\u739b\u4e3d\u4e9a\u00b7\u5fb7\u5c14\u00b7\u6ce2\u6ce2\u7f57\u7684\u5947\u5409\u5bb6\u65cf\u5efa\u9020\u7684\u793c\u62dc\u5802\u8ba9\u6211\u4eec\u771f\u6b63\u611f\u53d7\u5230\u4e86\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5728\u4e07\u795e\u6bbf\u7684\u542f\u53d1\u4e0b\uff0c\u8fd9\u4e2a\u7a7a\u95f4\u88ab\u8bbe\u8ba1\u6210\u4e00\u4e2a\u548c\u8c10\u7684\u53e4\u5178\u7535\u67a2\uff0c\u5728\u4e0a\u9762\u5c55\u793a\u7ed8\u753b\u3001\u96d5\u5851\u3001\u786c\u76ae\u57c3\u7279\u62c9\u548c(\u6700\u521d)\u9a6c\u8d5b\u514b\u7684\u827a\u672f\u3002\u56e0\u6b64\uff0c\u5b83\u5c06\u7eaa\u5ff5\u963f\u6208\u65af\u8482\u8bfa\u00b7\u5947\u5409\u4f5c\u4e3a\u827a\u672f\u8d5e\u52a9\u4eba\u7684\u65e0\u4e0e\u4f26\u6bd4\u7684\u804c\u4e1a\u751f\u6daf\u3002\u5b83\u5de7\u5999\u5730\u4f7f\u7528\u4e86\u5f69\u8272\u5927\u7406\u77f3\u548c\u4ece\u53e4\u8463\u4e2d\u521b\u9020\u6027\u5730\u6539\u7f16\u800c\u6765\u7684\u4f18\u96c5\u88c5\u9970\u54c1\u3002\u5b83\u7684\u5de5\u827a\u5f88\u7cbe\u6e5b\u3002\u4f46\u5373\u4f7f\u662f\u8fd9\u5ea7\u793c\u62dc\u5802\u4e5f\u5f97\u7531\u5176\u4ed6\u4eba\u6765\u5b8c\u6210\u3002\u5b83\u76f4\u523017\u4e16\u7eaa\u4e2d\u53f6\u624d\u5b8c\u5de5\u3002\n\u62c9\u6590\u5c14\u4f5c\u4e3a\u5efa\u7b51\u5e08\u7684\u4e3b\u8981\u804c\u8d23--\u65b0\u5723\u5f7c\u5f97\u5927\u6559\u5802\u600e\u4e48\u6837\uff1f\u62c9\u6590\u5c14\u5bf9\u8fd9\u5ea7\u5efa\u7b51\u7684\u6700\u7ec8\u72b6\u6001\u7684\u5f71\u54cd\u8fdc\u8fdc\u6bd4\u4e0d\u4e0a\u7c73\u5f00\u6717\u57fa\u7f57\u5728\u4ed6\u62c5\u4efb\u9996\u5e2d\u5efa\u7b51\u5e08\u768418\u5e74\u4e2d\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u62c9\u6590\u5c14\u53ea\u7559\u4e0b\u4e86\u51e0\u5e45\u753b\uff0c\u9675\u5893\u8bbe\u8ba1\u548c\u4e00\u4e2a\u65b0\u7684\u5e73\u9762\u56fe\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e2a\u5e73\u9762\u56fe\u5bf9\u8fd9\u5ea7\u5efa\u7b51\u7684\u672a\u6765\u5177\u6709\u5de8\u5927\u7684\u610f\u4e49\u3002\u5e03\u62c9\u66fc\u7279\u66fe\u6784\u601d\u4e00\u5ea7\u4e2d\u592e\u89c4\u5212\u7684\u6559\u5802\uff0c\u6700\u7ec8\u7075\u611f\u6765\u81ea\u4e07\u795e\u6bbf--\u8fd9\u662f\u6587\u827a\u590d\u5174\u65f6\u671f\u7f57\u9a6c\u4fdd\u5b58\u6700\u5b8c\u597d\u7684\u53e4\u5178\u5bfa\u5e99\u3002\u5706\u5f62\u6216\u4e2d\u592e\u89c4\u5212\u7684\u6559\u5802\u53cd\u6620\u4e86\u67cf\u62c9\u56fe\u539f\u5219\uff0c\u4ece\u5e03\u9c81\u5185\u83b1\u65af\u57fa\u548c\u963f\u5c14\u8d1d\u8482\u5728\u56db\u91cd\u594f\u65f6\u671f\u5230\u83b1\u6602\u7eb3\u591a\u00b7\u8fbe\u00b7\u82ac\u5947\u548c\u5e03\u62c9\u66fc\u7279\u5728\u6587\u827a\u590d\u5174\u65f6\u671f\u4e00\u76f4\u662f\u57fa\u7763\u6559\u53e4\u5178\u5efa\u7b51\u7684\u7406\u60f3\u9009\u62e9\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u62c9\u6590\u5c14\u7684\u8bbe\u8ba1\u8981\u6c42\u5c06\u6559\u5802\u56db\u4e2a\u7fc5\u8180\u4e2d\u7684\u4e00\u4e2a\u5ef6\u4f38\u5230\u6b63\u5385\uff0c\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u7f57\u9a6c\u5341\u5b57\u67b6\uff0c\u901a\u8fc7\u4e00\u4e2a\u4e0d\u673d\u7684\u67f1\u5eca\u8fdb\u5165\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ed6\u8fc8\u51fa\u4e86\u5173\u952e\u7684\u4e00\u6b65\uff0c\u5f00\u59cb\u4e86\u6559\u4f1a\u5411\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u5df4\u897f\u91cc\u5361\u5f62\u5f0f\u7684\u6f14\u53d8\u3002\n\u62c9\u6590\u5c14\u5927\u80c6\u5730\u4fee\u6539\u5e03\u62c9\u66fc\u7279\u7684\u8bbe\u8ba1\u5e76\u4e0d\u662f\u51fa\u4e8e\u5916\u884c\u7684\u5e7b\u60f3\uff0c\u800c\u662f\u50cf\u4ed6\u6240\u6709\u6210\u719f\u7684\u4f5c\u54c1\u4e00\u6837\uff0c\u662f\u5bf9\u53e4\u8463\u8fdb\u884c\u4ed4\u7ec6\u3001\u6709\u7eaa\u5f8b\u7684\u7814\u7a76\u7684\u7ed3\u679c\u3002\u81ea\u5f7c\u5f97\u62c9\u514b\u4ee5\u6765\uff0c\u4eba\u6587\u4e3b\u4e49\u8005\u4e00\u76f4\u5728\u54c0\u60bc\u7f57\u9a6c\u53e4\u8001\u9762\u6599\u7684\u7834\u574f\uff0c\u5e76\u68a6\u60f3\u6062\u590d\u8fd9\u5ea7\u57ce\u5e02\u7684\u58ee\u4e3d\u7269\u7406\u3002\u65e9\u671f\u7684\u6559\u7687\uff0c\u5982\u4eba\u6587\u4e3b\u4e49\u6559\u7687\u5c3c\u53e4\u62c9\u65af\u4e94\u4e16\uff0c\u5df2\u7ecf\u5f00\u59cb\u4ee5\u66f4\u53e4\u5178\u7684\u98ce\u683c\u91cd\u5efa\u7f57\u9a6c\u3002\u4f46\u6b63\u662f\u62c9\u6590\u5c14\u5728\u6559\u7687\u5229\u5965\u548c\u4ed6\u7684\u4eba\u6587\u4e3b\u4e49\u987e\u95ee\uff0c\u7279\u522b\u662f\u5df4\u5c14\u5fb7\u8428\u00b7\u5361\u65af\u8482\u683c\u91cc\u5965(Baldesar Castiglione)\u548c\u5b89\u6770\u6d1b\u00b7\u79d1\u6d1b\u5947(Angelo Colocci)\u7684\u652f\u6301\u4e0b\uff0c\u627f\u62c5\u4e86\u52d8\u6d4b\u7f57\u9a6c\u5e9f\u589f\u7684\u4e25\u8083\u5de5\u4f5c\uff0c\u5e76\u8bd5\u56fe\u9010\u533a\u91cd\u5efa\u53e4\u57ce\u7684\u9762\u8c8c\u3002\u6b63\u662f\u8fd9\u4e2a\u51c6\u54f2\u5b66\u9879\u76ee\u6fc0\u53d1\u4e86\u6587\u827a\u590d\u5174\u65f6\u671f\u6587\u4eba\u7684\u60f3\u8c61\u529b\uff0c\u5e76\u5bfc\u81f4\u4ed6\u4eec\u79f0\u8d5e\u62c9\u6590\u5c14\u662f\u90a3\u4e2a\u65f6\u4ee3\u6700\u4f1f\u5927\u7684\u5efa\u7b51\u5e08\u3002\n\u7136\u800c\uff0c\u62c9\u6590\u5c14\u7684\u7f57\u9a6c\u8ba1\u5212\uff0c\u4ee5\u53ca\u5b83\u5bf9\u4e3b\u8981\u7eaa\u5ff5\u7891-\u5bfa\u5e99\u3001\u6d74\u5ba4\u3001\u5267\u9662\u3001\u5bab\u6bbf\u3001\u8bba\u575b\u548c\u516c\u5171\u5efa\u7b51\u7684\u91cd\u5efa-\u4e0d\u4ec5\u4ec5\u662f\u5bf9\u53e4\u7269\u5b66\u7814\u7a76\u7684\u5b66\u672f\u8d21\u732e\u3002\u8fd9\u662f\u4e00\u4e2a\u5b9e\u7528\u7684\u9879\u76ee\uff0c\u65e8\u5728\u670d\u52a1\u4e8e\u5bf9\u73b0\u4ee3\u53e4\u5178\u98ce\u683c\uff0c\u6587\u827a\u590d\u5174\u98ce\u683c\u611f\u5174\u8da3\u7684\u5efa\u7b51\u5e08\u548c\u8d5e\u52a9\u4eba\u3002\u5728\u4ed6\u4f5c\u4e3a\u753b\u5bb6\u7684\u5de5\u4f5c\u4e2d\uff0c\u62c9\u6590\u5c14\u4ee5\u6536\u96c6\u610f\u5927\u5229\u5404\u5730\u5176\u4ed6\u827a\u672f\u5bb6\u7684\u8bbe\u8ba1\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684\u53d1\u660e\u548c\u6280\u672f\u4f5c\u4e3a\u81ea\u5df1\u7684\u53d1\u660e\u548c\u6280\u672f\u800c\u95fb\u540d\u3002\u7c73\u5f00\u6717\u57fa\u7f57\u548c\u4ed6\u7684\u5c0f\u5708\u5b50\u4eec\u6781\u4e0d\u516c\u6b63\u5730\u5632\u7b11\u4ed6\uff0c\u8ba4\u4e3a\u4ed6\u4e0d\u8fc7\u662f\u4e00\u53ea\u559c\u9e4a\uff0c\u4ece\u5176\u4ed6\u827a\u672f\u5bb6\u90a3\u91cc\u7a83\u53d6\u4e86\u4ed6\u6700\u597d\u7684\u60f3\u6cd5\u3002\u4f5c\u4e3a\u4e00\u540d\u5efa\u7b51\u5e08\uff0c\u62c9\u6590\u5c14\u5b9e\u8df5\u4e86\u540c\u6837\u7684\u91cd\u7ec4\u53e4\u5178\u4e3b\u4e49\uff0c\u4ece\u65e0\u6570\u7684\u53e4\u8463\u7ed3\u6784\u4e2d\u9009\u62e9\u5143\u7d20\uff0c\u4f46\u53c8\u4ee5\u548c\u8c10\u3001\u6709\u521b\u610f\u7684\u65b9\u5f0f\u91cd\u65b0\u7ec4\u88c5\u3002\u4ed6\u660e\u767d\uff0c\u4e0e\u73b0\u4ee3\u6559\u80b2\u7406\u8bba\u4e0d\u540c\u7684\u662f\uff0c\u521b\u9020\u529b\u662f\u77e5\u8bc6\u4e4b\u5b50\u3002\n\u5728\u4ed6\u7684\u7f57\u9a6c\u8ba1\u5212\u4e2d\uff0c\u62c9\u6590\u5c14\u7684\u76ee\u6807\u662f\u8d85\u8d8a\u4ed6\u4ece\u7ef4\u7279\u9c81\u5a01\u91cd\u5efa\u7684\u53e4\u5178\u79e9\u5e8f\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u5e76\u7528\u53e4\u5178\u5f62\u5f0f\u548c\u88c5\u9970\u54c1\u586b\u5145\u4e00\u5ea7\u5de8\u5927\u7684\u8bb0\u5fc6\u5bab\u6bbf\u3002\u8fd9\u6837\uff0c\u5c31\u50cf\u82cf\u683c\u62c9\u5e95\u4e00\u6837\uff0c\u4ed6\u5c06\u6210\u4e3a\u5404\u79cd\u5efa\u7b51\u5e08\u5929\u624d\u7684\u52a9\u4ea7\u58eb\u3002\u5982\u679c\u5b83\u5efa\u6210\u4e86\uff0c\u5b83\u5c06\u6210\u4e3a\u6709\u53f2\u4ee5\u6765\u6700\u4f1f\u5927\u7684\u53e4\u5178\u98ce\u683c\u5b9d\u5e93\u3002\u4f46\u662f\uff0c\u5f53\u62c9\u6590\u5c14\u7684\u751f\u547d\u88ab\u7f29\u77ed\u65f6\uff0c\u8fd9\u4e2a\u5bcc\u6709\u8fdc\u89c1\u7684\u9879\u76ee\u4e5f\u8fd8\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\u3002\u540e\u6765\uff0c\u5b83\u4e5f\u5c06\u7531\u6280\u80fd\u8f83\u4f4e\u7684\u624b\u5de5\u5b8c\u6210-\u7531\u76ae\u7f57\u00b7\u5229\u6208\u91cc\u5965(Pirro Ligorio)\u8fd9\u6837\u7684\u5b66\u8005\u5efa\u7b51\u5e08\u548c\u8ba9-\u96c5\u514b\u00b7\u535a\u8428\u5c14(Jean-Jacques Boissard)\u8fd9\u6837\u7684\u53e4\u8463\u5b66\u5bb6\u5b8c\u6210\u3002\u6b63\u5982\u7ea6\u7ff0\u00b7\u8c22\u5c14\u66fc\u5728\u4e00\u9879\u7ecf\u5178\u7814\u7a76\u4e2d\u603b\u7ed3\u7684\u90a3\u6837\uff0c\u62c9\u6590\u5c14\u662f\u201c\u6587\u827a\u590d\u5174\u65f6\u671f\u6240\u6709\u4f1f\u5927\u5efa\u7b51\u5e08\u4e2d\u6700\u4e0d\u5e78\u7684\u4e00\u4f4d\u3002\u201d", "note_en": "P oor Raphael! This year, the five-hundredth anniversary of his death, was to have been his year of glory. After major exhibitions of Michelangelo in 2018 and Leonardo da Vinci in 2019, the museum world was in the midst of celebrating the third member of the glorious trinity of High Renaissance art. Then fear of a new coronavirus forced museums everywhere to take down their banners, chase away visitors, and close their doors. Lectures and conferences, canceled! \u201cRaphael and His Circle\u201d at the National Gallery in Washington, closed! \u201cRaphael: The Teacher and His Pupils\u201d at the Mus\u00e9e Cond\u00e9 outside of Paris, closed! Will they reopen once the panic has passed? Nobody knows. At least the currently shuttered \u201cRaffaello\u201d at the Scuderie del Quirinale in Rome has now announced plans to reopen on June 2. The last has been billed as the largest show ever dedicated to Raphael, with over two hundred masterpieces, including one hundred paintings and drawings by Raphael himself, lent by the Uffizi, the Louvre, the Prado, and London\u2019s National Gallery, among others. And there is hope that reason will return to its throne in time for London\u2019s National Gallery to open its doors in October for what will be the second-largest exhibition of the year.\n It\u2019s a kind of tragic coincidence, or perhaps poetic injustice, that celebrations of Raphael\u2019s achievement were interrupted by a deadly virus. It was a viral pneumonia ripping through the papal court that killed Raphael himself, aged thirty-seven, on April 6, 1520. The overworked and exhausted artist was carried off, biographers tell us, by a  grandissima febbre. His greatest patron, the Medici pope Leo  X, died suddenly of pneumonia a year and a half later, aged forty-six. The most fruitful partnership between artist and patron in High Renaissance Rome had lasted just over seven years. Among the casualties was Raphael\u2019s career as an architect, cut off just as it was beginning to blossom.\n  Earlier in his artistic life, Raphael was chiefly known as a highly accomplished painter, a maker of tender religious scenes in oil as well as the breathtaking visions of ancient philosophy, theology, and the arts frescoed onto the walls of the  Stanze, the pope\u2019s apartments in the Vatican palace. In 1514, however, Pope Leo pushed the young artist\u2019s career in a new direction when he chose him to be chief architect of New St. Peter\u2019s Basilica, following the death of its first architect, Bramante. Raphael had long had an interest in architecture and had dabbled in a few projects before 1514, but the new appointment made him, in effect, the leading architect in Christendom.\n There was no greater symbol of the cultural confidence of High Renaissance Rome than New St. Peter\u2019s. Pope Julius  II\u2019s decision to build an enormous new church of classical design in the capital of Christianity had been nothing short of audacious. Its construction required the pontiff to tear down the most venerable church in Christendom, Old St. Peter\u2019s Basilica, built by the emperor Constantine in the fourth century on the ruins of Nero\u2019s circus. According to one tradition, the basilica commemorated not only St. Peter\u2019s place of burial but also the place where he had been martyred. The old church was filled with relics of the saints, tombs of popes and martyrs, and famous works of art, including beautiful ancient mosaics and fourteenth-century frescoes by Giotto. All this had to be torn down for the new church, a monument (said many) to the vanity of Pope Julius. Certainly no one could accuse that pope of an excess of humility. Under the central crossing of the new basilica and over the tomb of St. Peter, where the  baldacchino and high altar now stand, Julius\u2019s chief architect, Bramante, planned to erect a three-story sculptural installation with over forty sculptures, all created by Michelangelo, as a tomb for\u2014who else?\u2014Pope Julius himself.\n Although that part of the project, thankfully, was in the end set aside, Leo  X and subsequent popes continued to pour vast resources into building the basilica. It remained the centerpiece of papal patronage of the arts for 150 years. So why did Pope Leo, the age\u2019s most intelligent patron, appoint young Raphael as its architect, a man with little experience in building design? Readers of Giorgio Vasari, Raphael\u2019s principal biographer, could be excused for asking that question. Vasari praises Raphael\u2019s painting to the skies but barely mentions his involvement with architecture. Many modern scholars have dismissed Raphael the architect as a mere epigone of Bramante, a master builder  manqu\u00e9 who completed no major monuments. Most connoisseurs of art, if they think of Raphael\u2019s buildings at all, think of the architectural backgrounds in paintings like the  School of Athens (1509\u201311), where ancient philosophers teach and debate on the steps outside a breathtakingly large, centrally planned church, strongly reminiscent of Bramante\u2019s designs for New St. Peter\u2019s.\n Raphael\u2019s contemporaries, though, did not think of him as a failed or derivative architect. For them he was a man just hitting his stride in a new art when death brought an end to his many projects. Only a few petty detractors thought Leo had made a mistake. A line in the inscription on Raphael\u2019s tomb in the Pantheon extols him for \u201cenhancing the glory of Popes Julius and Leo with his works in painting  and architecture\u201d [italics mine]. The humanist literati who composed dozens of poetic epitaphs for him after his death mourned the interruption of his great project to reconstruct the built environment of ancient Rome. The humanist Celio Calcagnini, writing to a friend just before Raphael\u2019s death, described him not only as the \u201cprince of all painters\u201d but also as \u201csuch an assiduous architect that he discovers and perfects those things that the cleverest talents considered impossible.\u201d Raphael, he noted, even comments on the text of Vitruvius\u2014the great Roman authority on architecture\u2014with a charm that excuses his shrewd criticisms of that author\u2019s limitations.\n  T he greatest modern authority on Raphael, John Shearman, believed that the eclipse of Raphael\u2019s fame as an architect was more than undeserved: it was a tragic injustice that architectural historians should do their best to rectify. The task is by no means easy, since so many of Raphael\u2019s architectural projects were destroyed or left unfinished, to be completed by other hands. Reconstructing his ideas from drawings, early engravings, documents, literary testimony, and the surviving physical evidence is a delicate and daunting scholarly task which few today are qualified to undertake.\n Nevertheless, when one considers that Raphael only began to erect buildings to his own designs in 1512, aged twenty-seven, it is remarkable how many projects he did undertake, all the while maintaining his extraordinary productivity as a painter. He built two large palaces in the Borgo, both of which were torn down, one to make room for Bernini\u2019s colonnade in the seventeenth century, the other when the Via della Conciliazione was laid out in 1937. He left plans for at least two more palaces that were modified and built by other architects. He began construction on two villas, the grand Villa Madama in a park north of the Vatican, now the resort of Italian diplomats, and an exquisite  gioello, the Villa Lante, on the Gianicolo. The Villa Madama project was carried forward after Raphael\u2019s death by his most accomplished disciple, Giulio Romano, who also finished the Villa Lante in 1523\u201324. In both cases he made major alterations to Raphael\u2019s original design. The huge, elegant stables Raphael built for the banker Agostino Chigi at his  villa suburbana were torn down in 1808. The small church of San Eligio degli Orefici, his earliest church design, was radically altered and finished by his collaborators Baldassare Peruzzi and Bastiano da San Gallo. He left competition designs for San Giovanni de\u2019Fiorentini in Rome and for the fa\u00e7ade of San Lorenzo, the Medici church in Florence; neither were built.\n Of all his work, only the chapel he built for the Chigi family in Santa Maria del Popolo gives us a real sense of what might have been. Inspired in its main lines by the Pantheon, the space was designed as a harmonious classical armature on which to display the arts of painting, sculpture,  pietra dura, and (originally) mosaic. It would thus commemorate Agostino Chigi\u2019s unmatched career as a patron of the arts. It makes brilliant use of colored marbles and elegant ornamentation creatively adapted from the antique. Its craftsmanship is exquisite. But even this chapel had to be completed by other hands. It was not finished before the middle of the seventeenth century.\n What of New St. Peter\u2019s, Raphael\u2019s chief responsibility as an architect? Raphael had nowhere near the impact on the final state of the building that Michelangelo was to have in his eighteen years as chief architect. Raphael left just a few drawings, tomb designs, and a new floor plan. But that floor plan turned out to be of immense significance for the building\u2019s future. Bramante had conceived of a centrally planned church inspired ultimately by the Pantheon\u2014the most fully preserved classical temple in Renaissance Rome. Circular or centrally planned churches, reflecting Platonic principles, had been the ideal for Christian classical architecture from the time of Brunelleschi and Alberti in the quattrocento down to Leonardo da Vinci and Bramante in the High Renaissance. Raphael\u2019s design, by contrast, called for extending one of the four wings of the church into a nave, thus forming a Roman cross, to be entered through a monumental colonnaded porch. In other words, he took the key step that began the church\u2019s evolution into the basilican form we see today.\n  R aphael\u2019s boldness in modifying Bramante\u2019s designs was not some dilettantish flight of fancy but, like all his mature work, the result of careful, disciplined study of the antique. Humanists since Petrarch had mourned the destruction of Rome\u2019s ancient fabric and dreamt of restoring the city\u2019s physical grandeur. Earlier pontiffs such as the humanist pope Nicholas  V had begun to rebuild Rome in a more classical style. But it was Raphael, supported by Pope Leo and his humanist advisers, especially Baldesar Castiglione and Angelo Colocci, who undertook the serious work of surveying the ruins of Rome and attempting to reconstruct the appearance of the ancient city district by district, building by building. It was this quasi-philological project that fired the imaginations of Renaissance literati and led them to praise Raphael as the greatest architect of the age.\n Yet Raphael\u2019s  Plan of Rome, with its reconstructions of major monuments\u2014temples, baths, theaters, palaces, fora, and public buildings\u2014was not simply a learned contribution to antiquarian studies. It was a practical project, designed to serve architects and patrons interested in building in the modern classical style, the Renaissance style. In his work as a painter Raphael was famous for collecting the designs of other artists throughout Italy and making their inventions and techniques his own. Michelangelo and his coterie sneered at him, with appalling injustice, as a mere magpie, stealing his best ideas from other artists. As an architect Raphael practiced the same kind of recombinant classicism, choosing elements from innumerable antique structures but reassembling them in harmonious, creative ways. He understood, as modern educational theory does not, that creativity is the child of knowledge.\n In his  Plan of Rome, Raphael\u2019s goal was to go beyond the basic grammar of the classical orders he had reconstructed from Vitruvius, and to populate a vast memory palace with classical forms and ornaments. In this way, like Socrates, he would stand as midwife to the genius of architects and  disegnatori of every kind. Had it been completed, it would have become the greatest treasure-trove of classical style ever assembled. But this visionary project, too, was still in its early stages when Raphael\u2019s life was cut short. It, too, would be carried out later by less skilled hands\u2014by scholar-architects like Pirro Ligorio and antiquarians like Jean-Jacques Boissard. Raphael was, as John Shearman concluded in a classic study, \u201cthe unluckiest of all the great Renaissance architects.\u201d", "posttime": "2020-05-22 17:01:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62c9\u6590\u5c14,raphael", "title": "\u62c9\u6590\u5c14\uff0c\u88ab\u6253\u65ad\u4e86", "title_en": "Raphael, Interrupted", "transed": 1, "url": "https://newcriterion.com/issues/2020/6/raphael-interrupted", "via": "", "real_tags": ["\u62c9\u6590\u5c14", "raphael"]}, {"category": "", "categoryclass": "", "imagename": "70830beeb6dae95fcd672adefc84ce96.png", "infoid": 1003254, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u5230\u641c\u7d22\u8bfa\u987f\u6307\u6325\u5b98(NC)\u662f\u7531John Socha\u7f16\u5199\u5e76\u7531Peter Norton Computing(\u540e\u6765\u4e8e1990\u5e74\u88ab\u8d5b\u95e8\u94c1\u514b\u516c\u53f8\u6536\u8d2d)\u53d1\u5e03\u7684\u5df2\u505c\u4ea7\u7684\u539f\u578b\u6b63\u7edf\u6587\u4ef6\u7ba1\u7406\u5668(OFM)\u3002NC\u63d0\u4f9b\u57fa\u4e8e\u6587\u672c\u7684\u7528\u6237\u754c\u9762\uff0c\u7528\u4e8e\u7ba1\u7406MS-DOS\u4e0a\u7684\u6587\u4ef6\u3002\u5b83\u662f1986\u5e74\u81f31998\u5e74\u95f4\u6b63\u5f0f\u5236\u4f5c\u7684\u3002\u8bfa\u987f\u6307\u6325\u5b98\u7684\u6700\u540e\u4e00\u4e2aMS-DOS\u7248\u672c5.51\u4e8e1998\u5e747\u67081\u65e5\u53d1\u5e03\u3002\n\u4e00\u4e2a\u76f8\u5173\u7684\u4ea7\u54c1\uff0c\u8bfa\u987f\u684c\u9762\uff0cMS-DOS\u548cWindows\u7684\u56fe\u5f62\u5916\u58f3\uff0c\u63a5\u66ff\u4e86\u8bfa\u987f\u6307\u6325\u5b98\u3002\u5b83\u6709\u4e24\u4e2a\u53d8\u79cd\uff0cDOS\u7248Norton Desktop\u548cWindows\u7248Norton Desktop\u3002\n\u7ea6\u7ff0\u00b7\u7d22\u67e5\u4e8e1984\u5e74\u5f00\u59cb\u5236\u4f5c\u201c\u8bfa\u987f\u6307\u6325\u5b98\u201d\uff0c\u5f53\u65f6\u4ed6\u79f0\u4e4b\u4e3a\u201cVisual DOS\u201d\u6216\u201cVDOS\u201d\u3002[1]\u3002\n\u8bfa\u987f\u6307\u6325\u5b98\u5f88\u5bb9\u6613\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u540c\u65f6\u67e5\u770b\u4e24\u4e2a\u6587\u4ef6\u64cd\u4f5c\u5bf9\u8c61\u3002\u542f\u52a8\u7a0b\u5e8f\u540e\uff0c\u7528\u6237\u4f1a\u770b\u5230\u4e24\u4e2a\u5e26\u6709\u6587\u4ef6\u5217\u8868\u7684\u9762\u677f\u3002\u6bcf\u4e2a\u9762\u677f\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u914d\u7f6e\u4e3a\u663e\u793a\u6709\u5173\u53e6\u4e00\u4e2a\u9762\u677f\u3001\u76ee\u5f55\u6811\u6216\u8bb8\u591a\u5176\u4ed6\u9009\u9879\u7684\u4fe1\u606f\u3002\u5728\u5c4f\u5e55\u5e95\u90e8\uff0c\u8bfa\u987f\u6307\u6325\u5b98\u663e\u793a\u6309CTRL\u548cALT\u952e\u6309\u9700\u6269\u5c55\u7684\u547d\u4ee4\u5217\u8868\u3002\u56e0\u6b64\uff0c\u65e0\u9700\u5927\u91cf\u4f7f\u7528\u9f20\u6807(\u5c3d\u7ba1\u5728\u7248\u672c3.0\u5de6\u53f3\u96c6\u6210\u4e86\u9f20\u6807\u529f\u80fd)\uff0c\u7528\u6237\u80fd\u591f\u5feb\u901f\u9ad8\u6548\u5730\u6267\u884c\u8bb8\u591a\u6587\u4ef6\u64cd\u4f5c\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5305\u62ec\u4e00\u4e2a\u5185\u7f6e\u7684\u6587\u672c\u6587\u4ef6\u67e5\u770b\u5668(\u7528F3\u952e\u8c03\u7528)\u548c\u6587\u672c\u6587\u4ef6\u7f16\u8f91\u5668(\u7528F4\u952e\u8c03\u7528)\u3002\n\u8bfa\u987f\u53f8\u4ee4\u5b98\u5728DOS\u65f6\u4ee3\u975e\u5e38\u53d7\u6b22\u8fce\uff0c\u5b83\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u514b\u9686\u3002\u4f8b\u5982\uff0cIntelliJ IDE\u8fc7\u53bb\u5305\u542b\u4e00\u4e2a\u4f7f\u7528\u4e0eNorton Commander[2]\u76f8\u540c\u7684\u5feb\u6377\u952e\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\u7684&#34\uff1bCommander&34\uff1b\u63d2\u4ef6\uff0c\u4f46\u8be5\u63d2\u4ef6\u73b0\u5728\u5df2\u8fc7\u65f6\u3002[3]\u3002\nWindows 95\u5305\u542b\u4e00\u4e2a\u540d\u4e3aWindows\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u65b0\u56fe\u5f62\u5916\u58f3\u7a0b\u5e8f\uff0c\u5e76\u652f\u6301\u957f\u6587\u4ef6\u540d(LFN)\u3002\u8d5b\u95e8\u94c1\u514b\u53d1\u5e03\u4e86Norton Commander 5.51\uff0c\u4ee5\u652f\u6301\u4f7f\u7528\u6807\u51c6Windows API\u7684\u957f\u6587\u4ef6\u540d\u3002\u4e3a\u4e86\u5728\u5b9e\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u65f6\u4fdd\u7559LFN\uff0c\u8bfa\u987f\u6307\u6325\u5b985.51\u8981\u6c42\u4f7f\u7528\u7ec8\u6b62\u5e76\u505c\u7559\u9a7b\u7559(TSR)\u5b9e\u7528\u7a0b\u5e8f\u3002\u8bfa\u987f\u6307\u6325\u5b98\u5728\u5b9e\u6a21\u5f0f\u4e0b\u6ca1\u6709\u5bf9LFN\u7684\u672c\u5730\u652f\u6301\uff0c\u56e0\u6b64\u4f1a\u622a\u65ad\u5b83\u4eec\u3002\n\u636e\u5f7c\u5f97\u00b7\u8bfa\u987f\u96c6\u56e2(Peter Norton Group)\u524d\u5f00\u53d1\u4eba\u5458\u9a6c\u514b\u00b7\u6d1b\u5229\u5c14(Mark Low Lier)\u79f0\uff0c\u5728\u8d5b\u95e8\u94c1\u514b\u6536\u8d2d\u5f7c\u5f97\u00b7\u8bfa\u987f\u8ba1\u7b97\u516c\u53f8(Peter Norton Computing)\u540e\uff0c\u8d5b\u95e8\u94c1\u514b\u66fe\u731c\u6d4b\u5fae\u8f6fWindows\u4f1a\u6210\u529f\uff0c\u56e0\u6b64\u5173\u952e\u7684PNC\u8d44\u6e90\u88ab\u632a\u7528\uff0c\u540c\u65f6\u8058\u8bf7\u4e86Windows\u5e73\u53f0\u7684\u65b0\u7a0b\u5e8f\u5458\u3002Enrique Salem(\u4ed6\u6700\u7ec8\u6210\u4e3a\u8d5b\u95e8\u94c1\u514b\u7684\u9996\u5e2d\u6267\u884c\u5b98)\u9886\u5bfc\u5f00\u53d1\u4e86\u4e00\u4e2a\u6587\u4ef6\u7ba1\u7406\u5668\u548c\u7a0b\u5e8f\u7ba1\u7406\u5668\uff0c\u5176\u540d\u79f0\u4e3aNorton Desktop for Windows\u3002\nNorton Commander for Windows\u662f\u7ecf\u5178DOS\u6587\u4ef6\u7ba1\u7406\u5668\u7684Windows 95\u53d8\u4f53\u3002\n1.0\u7248\u4e8e1996\u5e74\u9996\u6b21\u53d1\u5e03\u3002\u5b83\u540c\u65f6\u652f\u6301Windows 95\u548cWindows NT\u3002\n\u6b64\u7248\u672c\u4e0eWindows\u529f\u80fd(\u5982\u56de\u6536\u7ad9\u548c\u5feb\u901f\u67e5\u770b)\u5b8c\u5168\u96c6\u6210\u3002\u901a\u8fc7\u968f\u9644\u7684Basic Quick View Plus\u652f\u6301\u5feb\u901f\u67e5\u770b\u529f\u80fd\u3002\n2.0\u7248\u4e8e2000\u5e74\u53d1\u5e03\u3002\u5b83\u652f\u6301Windows 2000\u4ee5\u53ca\u5728Windows XP\u3001Windows Vista\u548cWindows 7\u4e0b\u7684\u529f\u80fd\u3002\u5b89\u88c5\u7a0b\u5e8f\u5305\u62ec\u7f51\u7edc\u5b9e\u7528\u7a0b\u5e8f\u3001\u8bfa\u987f\u6307\u6325\u5b98\u8c03\u5ea6\u7a0b\u5e8f\u548c\u8bfa\u987f\u6307\u6325\u5b98\u3002\n\u7f51\u7edc\u5b9e\u7528\u7a0b\u5e8f\u5141\u8bb8\u67e5\u770b\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\u548c\u7cfb\u7edf\u3001\u8fde\u63a5\u5230\u8fdc\u7a0b\u7cfb\u7edf\u3001\u6620\u5c04\u7f51\u7edc\u9a71\u52a8\u5668\u3001\u7f51\u7edc\u76d1\u63a7\u7b49\u3002\n\u8bfa\u987f\u6307\u6325\u5b98\u4e0e\u4ee5\u524d\u7684\u7248\u672c\u76f8\u6bd4\u53d8\u5316\u4e0d\u5927\uff0c\u5305\u62ec\u5404\u79cd\u683c\u5f0f\u7684\u6587\u4ef6\u538b\u7f29/\u89e3\u538b\u7f29\uff0c\u7f51\u7edc\u5b9e\u7528\u7a0b\u5e8f\u8bbf\u95ee\uff0c\u78c1\u76d8\u6e05\u7406\uff0c\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u6bd4\u8f83\uff0cFTP\u8fde\u63a5\u7ba1\u7406\uff0c\u7b49\u7b49\u3002\n\u7248\u672c1.0\u4e8e1992\u5e7412\u6708\u53d1\u5e03\u3002\u5b83\u652f\u6301\u5e26HPFS\u6216FAT\u6587\u4ef6\u7cfb\u7edf\u7684OS/2 2.0\u3002\n1993\u5e746\u6708\uff0c\u8d5b\u95e8\u94c1\u514b\u5c06\u8bfa\u987f\u6307\u6325\u5b98OS/2\u7684\u4ef7\u683c\u964d\u81f349\u7f8e\u5143\uff0c\u5e76\u5f88\u5feb\u505c\u6b62\u9500\u552e\u3002\n\u5b57\u8282\u57281989\u5e74\u5c06\u8bfa\u987f\u6307\u6325\u5b982.0 for DOS\u5217\u4e3a\u5b57\u8282\u5956\u7684\u6770\u51fa\u83b7\u5956\u8005\u4e4b\u4e00\uff0c\u4ed6\u8bf4\u5728\u62e5\u6324\u7684\u786c\u76d8\u4e0a\u5bfc\u822a\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u3002[4]", "note_en": "Jump to navigation  Jump to search  Norton Commander ( NC) is a discontinued prototypical  orthodox file manager (OFM), written by  John Socha and released by  Peter Norton Computing (later acquired in 1990 by the  Symantec corporation). NC provides a  text-based user interface for managing files on top of  MS-DOS. It was officially produced between 1986 and 1998. The last MS-DOS version of Norton Commander, 5.51, was released on July 1, 1998.\n A related product,  Norton Desktop, a graphical shell for MS-DOS and Windows, succeeded Norton Commander. It came in two variants,  Norton Desktop for DOS and  Norton Desktop for Windows.\n    John Socha started work on Norton Commander in 1984; at the time, he called it &#34;Visual DOS&#34; or &#34;VDOS&#34;.  [1]\n Norton Commander was easy to use because it had a constant view of two file manipulation objects at once. After starting the program the user sees two panels with file lists. Each panel can be easily configured to show information about the other panel, a directory tree, or a number of other options. At the bottom of the screen, Norton Commander displays a list of commands that are extended on demand by the  CTRL and  ALT keys. Thus, without heavy use of the mouse (although mouse functionality was integrated around version 3.0), the user is able to perform many file manipulation actions quickly and efficiently. Additionally, it also includes a built-in text file viewer (invoked with F3 key) and text file editor (invoked with F4 key).\n Norton Commander was very popular during the DOS era and it has been extensively cloned. For example, the  IntelliJ IDE used to include a &#34;Commander&#34; plugin that performed file manipulation using the same shortcut keys as Norton Commander  [2] but the plugin is now obsolete.  [3]\n  Windows 95 included a new graphical shell called  Windows Explorer and supported  long filenames (LFN). Symantec released Norton Commander 5.51 to support long filenames using the standard Windows  APIs. In order to preserve LFNs while working in  real mode, Norton Commander 5.51 required the use of a  Terminate and Stay Resident (TSR) utility. Norton Commander did not have native support for LFNs in real mode and would truncate them.\n  According to former Peter Norton Group developer Mark Lowlier, after Symantec had acquired Peter Norton Computing, Symantec had speculated Microsoft Windows would be a success, so the key PNC resources had been diverted, while new programmers for Windows platform were hired.  Enrique Salem (who eventually became Symantec&#39;s CEO) led the development of a File Manager and Program Manager released as Norton Desktop for Windows.\n  Norton Commander for Windows was a Windows 95 variant of the classical DOS file manager.\n  Version 1.0 was first released in 1996. It supported both Windows 95 and Windows NT.\n This version fully integrated with Windows features such as the  Recycle Bin and  Quick View. Quick View feature was supported via the included basic Quick View Plus.\n    Version 2.0 was released in 2000. It supports Windows 2000 and functions under Windows XP, Windows Vista, and Windows 7. Installer included Network Utilities, Norton Commander Scheduler, and the Norton Commander.\n Network Utilities allows for viewing devices and systems on network, connecting to remote systems, mapping network drives, network monitoring, and more.\n Norton Commander is little changed from previous versions, and includes file compression/de-compression of various formats, network utilities access, disk cleanup, files and folder compare, FTP connection management, and more.\n   Version 1.0 was released in December 1992. It supports  OS/2 2.0 with  HPFS or FAT file system.\n  In June 1993, Symantec lowered the price of Norton Commander for OS/2 to $49, and soon ceased sales.\n  BYTE in 1989 listed Norton Commander 2.0 for DOS as among the &#34;Distinction&#34; winners of the BYTE Awards, stating that &#34;navigating through a crowded hard disk is a breeze&#34;.  [4]\n    PowerDesk by Avanquest, of which an evaluation version of Version 4 is included in Microsoft&#39;s Windows NT 4.0  Resource Kits\n RAR archive manager used to have Norton Commander-like interface, the last version with that interactive file manager interface look-alike was DOS version 2.50\n    ^   Bezroukov, Nikolai (2005).  &#34;The History of Development of Norton Commander&#34;.  Softpanorama.  As John Socha recollected the events (personal communication): &#39;I started work on what became known as the Norton Commander in the fall of 1984 ... At the time I called it Visual DOS, with the abbreviation of VDOS instead of the usual two-letter abbreviations used at the time.&#39;", "posttime": "2020-05-22 17:00:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6307\u6325\u5b98,norton,windows", "title": "\u8bfa\u987f\u6307\u6325\u5b98", "title_en": "Norton Commander", "transed": 1, "url": "https://en.wikipedia.org/wiki/Norton_Commander", "via": "", "real_tags": ["\u6307\u6325\u5b98", "norton", "windows"]}, {"category": "", "categoryclass": "", "imagename": "2f04d649ff258bc91254769363ac3046.jpeg", "infoid": 1003253, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u68c0\u67e5\u9879\u76ee\u4e2d\u662f\u5426\u5b58\u5728PostCSS config\uff1apostcss.config.jin\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684postcss\uff1bpostcss&34\uff1b\u90e8\u5206\uff0c\u6216\u5305\u914d\u7f6e\u4e2d\u7684postcss\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528PostCSS\uff0c\u8bf7\u6839\u636e\u5b98\u65b9\u6587\u6863\u6dfb\u52a0\uff0c\u5e76\u5728\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u6b64\u63d2\u4ef6\u3002\npostcss[input.css]--\u6b63\u786e\u4f7f\u7528CSS[-o|--output output.css][--watch|-w]postcss&lt\uff1binput.css&gt\uff1b.--\u6b63\u786e\u4f7f\u7528CSS--dir&lt\uff1boutput-directory&gt\uff1b[--watch|-w]postcss&lt\uff1binput-directory&gt\uff1b--use css-right--dir&lt\uff1boutput-directory&gt\uff1b[--watch|-w]postcss&lt\uff1b\u8f93\u5165\u76ee\u5f55&gt\uff1b[--watch|-w]postcss&lt\uff1b--\u6b63\u786e\u4f7f\u7528css--dir&lt\uff1boutput-directory&gt\uff1b[--watch|-w]postcss&lt\uff1binput.css&lt\uff1b.--\u6b63\u786e\u4f7f\u7528css--\u66ff\u6362", "note_en": "Check your project for existing PostCSS config:  postcss.config.jsin the project root,  &#34;postcss&#34; section in  package.jsonor  postcss in bundle config.\n   If you do not use PostCSS, add it according to  official docsand set this plugin in settings.\n     postcss [input.css] --use css-properly [-o |--output output.css] [--watch |-w] postcss  &lt;input.css &gt;... --use css-properly --dir  &lt;output-directory &gt; [--watch |-w] postcss  &lt;input-directory &gt; --use css-properly --dir  &lt;output-directory &gt; [--watch |-w] postcss  &lt;input-glob-pattern &gt; --use css-properly --dir  &lt;output-directory &gt; [--watch |-w] postcss  &lt;input.css &gt;... --use css-properly --replace", "posttime": "2020-05-22 17:00:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u8bed,plugin,postcss", "title": "\u4e3a\u559c\u6b22\u6b63\u786e\u4e66\u5199\u82f1\u8bed\u7684\u4eba\u63d0\u4f9b\u7684PostCSS\u63d2\u4ef6", "title_en": "A PostCSS plugin for people who prefer to write English properly", "transed": 1, "url": "https://github.com/jevakallio/css-properly", "via": "", "real_tags": ["\u82f1\u8bed", "plugin", "postcss"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003252, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4e24\u4e2a\u8457\u540d\u7684FM\u57ce\u9547\u4eff\u771f\u5668\u3002\u5361\u8428\u8bfa\u74e6\u7684Unz\u53ef\u80fd\u662f\u6700\u597d\u7684FM\u57ce\u9547\u4eff\u771f\u5668\uff0c\u6211\u542c\u8bf4Mame\u6b63\u5728\u53d8\u5f97\u66f4\u597d\u3002\u4f46\u662f\uff0c\u5728\u6211\u770b\u6765\uff0c\u6709\u4e09\u56db\u4e2a\u7a0b\u5e8f\u505a\u540c\u6837\u7684\u4e8b\u60c5\u662f\u597d\u7684\u3002\u5982\u679c\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\uff0c\u5982\u679c\u5b83\u88ab\u7ec8\u6b62\uff0c\u6216\u8005\u7a81\u7136\u4e0d\u53ef\u7528\uff0c\u6211\u4eec\u5c06\u88ab\u8499\u5728\u9f13\u91cc\u3002*\u8fd9\u6837\u7684\u98ce\u9669\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u9ad8\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u4e0d\u8d1f\u8d23\u4efb\u3001\u4e0d\u5fc5\u8981\u548c\u8fc7\u4e8e\u9891\u7e41\u5730\u653e\u5f03\u4e86\u5411\u540e\u517c\u5bb9\u6027\u3002*\u6211\u5f88\u5e78\u8fd0\u3002\u6211\u4e5f\u6709\u6211\u81ea\u5df1\u7684\u52a8\u673a\u3002\u6211\u7684\u76ee\u6807\u662f\u8ba9\u771f\u6b63\u7684FM Townes PC\u5c3d\u53ef\u80fd\u957f\u65f6\u95f4\u5730\u8fd0\u884c\uff0c\u4e3a\u6b64\u6211\u5f00\u53d1\u4e86YSSCSICD.SYS\u3002\u4f46\u662f\uff0c\u4e00\u4e9b\u6e38\u620f\u6e38\u620f\u76f4\u63a5\u8bbf\u95eeCD-ROM I/O\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u9700\u8981\u5199\u8865\u4e01\u3002\u5176\u4ed6\u4eff\u771f\u5668\u5b8c\u5168\u6ca1\u6709\u7406\u7531\u6a21\u62dfSCSI\u8fde\u63a5\u7684CD-ROM\u9a71\u52a8\u5668\uff0c\u4f46\u6211\u786e\u5b9e\u6709\u7406\u7531\u3002\u6240\u4ee5\uff0c\u6211\u7684\u76ee\u6807\u4e4b\u4e00\u5c31\u662f\u6a21\u62dfSCSI\u8fde\u63a5\u7684CD-ROM\u9a71\u52a8\u5668\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u7f16\u5199\u8865\u4e01\u3002\u6e90\u4ee3\u7801\u5df2\u7ecf\u5728Github\u4e0a\u4e86\u3002\u6211\u4e5f\u60f3\u8ba9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u7528\u3002\u6211\u6b63\u5728\u63a2\u7d22\u5982\u4f55\u4f7f\u7528Github\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002", "note_en": "There are two known FM Towns emulators.\u00a0 Kasanova&#39;s UNZ probably is the best emulates FM Towns, and I hear that  MAME is getting better.\u00a0 But, in my opinion, it is good to have three or four programs that do the same thing.\u00a0 If we have only one, and if it is terminated, or suddenly unavailable, we will be left in the dark.\u00a0 Such a risk is higher than ever because OS developers irresponsibly and unnecessarily and too frequently drops backward compatibility.\u00a0 I am lucky enough to be a programmer, I am trying to write what I need by my own whenever possible. Also I have my own motivation.\u00a0 My goal is to keep actual FM Towns PCs alive as long as possible, and for that purpose I developed YSSCSICD.SYS.\u00a0 But, some game titles are directly accessing CD-ROM I/O, in such cases I need to write a patch.\u00a0 Other emulators have absolutely no reason to emulate SCSI-connected CD-ROM drive, but I do have a reason.\u00a0 So, one of my goals is to emulate SCSI-connected CD-ROM drive, so that I can write patches easier. The source code has been on Github.  I&#39;d like to make binary available as well.\u00a0 I am exploring how to do it using Github.", "posttime": "2020-05-22 17:00:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "fm,cd", "title": "\u201c\u6d25\u683c\u9c81\u201d-FM\u57ce\u9547\u6a21\u62df\u5668\u9879\u76ee", "title_en": "\u201cTsugaru\u201d \u2013 FM Towns Emulator Project", "transed": 1, "url": "http://ysflight.in.coocan.jp/FM/towns/Tsugaru/e.html", "via": "", "real_tags": ["fm", "cd"]}, {"category": "", "categoryclass": "", "imagename": "f8451dd3f2584ddd3e363f0511637b64.jpeg", "infoid": 1003251, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d1\u5e03\u6211\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u4e0e\u56e2\u961f\u5408\u4f5c\uff0c\u5e2e\u52a9\u4ed6\u4eec\u53d1\u5e03\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u610f\u8bc6\u5230\u6295\u5165\u751f\u4ea7\u901a\u5e38\u662f\u4e00\u7247\u6df7\u4e71\u3002\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u591a\u5927\u5e76\u4e0d\u91cd\u8981\uff1a\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f\u7531\u4e0d\u540c\u768435\u4e2a\u56e2\u961f\u5f00\u53d1\u7684\uff0c\u8fd8\u662f\u53ea\u7531\u4e00\u4e2a\u6210\u719f\u7684\u56e2\u961f\u5f00\u53d1\u7684\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u71b5\u7684\u95ee\u9898\uff1a-)\u3002\n\u6709\u5f88\u591a\u4e66\u7c4d\u63cf\u8ff0\u4e86\u5b9e\u73b0\u540e\u7eed\u751f\u4ea7\u652f\u6301\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4f46\u4f60\u4e0d\u4f1a\u5728\u53bb\u751f\u4ea7\u548c\u6d3b\u52a8\u4e4b\u524d\u8bfb\u5b8c\u6240\u6709\u8fd9\u4e9b\u4e66\uff0c\u5982\u679c\u4f60\u8bfb\u4e86\u5b83\u4eec\uff0c\u5728\u63a8\u51fa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u5fd8\u8bb0\u4f60\u8bfb\u5230\u7684\u4e00\u4e9b\u4e1c\u897f\u3002\u5f53\u7136\uff0c\u6211\u8bfb\u8fc7\u5f88\u591a\u4e66\uff0c\u4e5f\u6709\u81ea\u5df1\u7684\u7ecf\u5386\u3002\u5728\u4e0a\u7ebf\u4e4b\u524d\uff0c\u6211\u901a\u5e38\u4f1a\u5f00\u59cb\u56de\u5fc6\u6211\u6240\u77e5\u9053\u7684\u4e00\u5207\uff0c\u5e76\u8bd5\u56fe\u5c06\u5176\u5e94\u7528\u4e8e\u5f53\u524d\u7684\u6848\u4ef6\u3002\u6211\u5728\u60f3\u5982\u4f55\u66f4\u597d\u5730\u7ec4\u7ec7\u4fe1\u606f\uff0c\u5e76\u60f3\u51fa\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u65e7\u6838\u5bf9\u8868\u7684\u60f3\u6cd5\u3002\n[\u5f88\u9ad8\u5174\u6709]\u5e94\u7528\u90e8\u7f72\u5230\u81f3\u5c112\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e(\u53ef\u4ee5\u5728\u4e0d\u540c\u4f4d\u7f6e\u4e4b\u95f4\u914d\u7f6evPC\u5bf9\u7b49)\u3002\n\u81f3\u5c11\u4e3a\u57fa\u672c\u6307\u6807\u914d\u7f6e\u8b66\u62a5\uff0c\u4ee5\u4fbfCPU\u3001\u5185\u5b58\u3001IOPS\u3001\u78c1\u76d8\u7a7a\u95f4\u3002\n\u90e8\u7f72\u6570\u636e\u5e93\u65f6\uff0c\u5e94\u81f3\u5c11\u5177\u6709\u6240\u9700\u7684\u6700\u4f4e\u8282\u70b9\u6570\u91cf\uff0c\u5e76\u5177\u6709\u53ef\u5e2e\u52a9\u60a8\u5c3d\u5feb\u6062\u590d\u7684\u590d\u5236\u56e0\u5b50\u3002\n\u6211\u9700\u8981\u4e00\u4efd\u70df\u96fe\u6d4b\u8bd5\u5217\u8868(\u5982\u679c\u5b83\u4eec\u662f\u81ea\u52a8\u5316\u7684\u5c31\u597d\u4e86)\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u751f\u4ea7\u5df2\u7ecf\u542f\u52a8\u5e76\u5728\u8fd0\u884c\u3002\n\u7b2c\u4e09\u65b9\u670d\u52a1\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u5e94\u8be5\u7531\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u672c\u8eab\u8fdb\u884c\u68c0\u67e5\uff0c\u6216\u8005\u8ba9\u4ed6\u7684\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u7aef\u70b9\u8fdb\u884c\u68c0\u67e5\uff0c\u6216\u8005\u9700\u8981\u5236\u4f5c\u4e00\u4e9b\u811a\u672c\u6765\u68c0\u67e5\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u8fd0\u884c\u72b6\u51b5\u3002\n\u6839\u636e\u60a8\u4f7f\u7528\u7684GIT-FLOW\u9700\u8981\u5206\u914d\u6807\u7b7e\u6765\u51c6\u5907\u5feb\u901f\u4fee\u590d\u7684\u5206\u652f\uff0c\u7b49\u7b49\u3002\n\u786e\u4fdd\u4e86\u89e3\u7cfb\u7edf\u4e2d\u6bcf\u4e2a\u7ec4\u4ef6\u6240\u9700\u7684\u8d44\u6e90\u6570\u91cf\u3002\n\u8bf7\u786e\u4fdd\u4e3a\u670d\u52a1\u914d\u7f6e\u6240\u6709\u9650\u5236\u3002\u4e3a\u4e86\u907f\u514d\u56e0\u4e3a\u4e00\u4e2a\u670d\u52a1\u4e2d\u7684\u5185\u5b58\u6cc4\u6f0f\u800c\u6740\u6b7b\u5468\u56f4\u7684\u6240\u6709\u670d\u52a1\u7684\u60c5\u51b5\u3002\n\u9700\u8981\u6709\u8d1f\u8d23\u751f\u4ea7\u90e8\u7f72\u7684\u4eba\u5458\uff0c\u5e76\u7b7e\u5b57\u786e\u8ba4\u751f\u4ea7\u5df2\u51c6\u5907\u5c31\u7eea\u3002\n\u9700\u8981\u6709\u4e0d\u540c\u7ea7\u522b\u7ec6\u8282\u548cETA\u7684\u707e\u96be\u6062\u590d\u8ba1\u5212\uff0c\u4f8b\u5982\uff1a\u5982\u4f55\u6062\u590d\u4e00\u9879\u670d\u52a1\u3001\u5982\u4f55\u6062\u590d\u6570\u636e\u5e93\u3001\u5982\u4f55\u6062\u590d\u6574\u4e2a\u7fa4\u96c6\u3001\u5982\u4f55\u6062\u590d\u6574\u4e2a\u533a\u57df\u3002\n\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u8bf7\u5728\u4e0a\u7ebf\u524d\u628a\u4f60\u901a\u5e38\u68c0\u67e5\u7684\u4e1c\u897f\u53d1\u7ed9\u6211\uff0c\u6211\u4f1a\u66f4\u65b0\u8fd9\u4e2a\u6e05\u5355\u7684\u3002\u5f53\u7136\uff0c\u5982\u679c\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784/DevOps\u8fdb\u7a0b/BigData\u5904\u7406\u65b9\u9762\u9700\u8981\u5e2e\u52a9\uff0c\u8bf7\u8054\u7cfb\u6211\u3002", "note_en": "Releasing my own apps or working with teams to help them to release their application. I realized that rolling out to production is usually chaos. It doesn\u2019t matter how big is your app: the app that was made by different 35 teams or just one mature team. It just a matter of entropy :-).\n There are a lot of books that describe  best practices to go to live with subsequent production support. But you are not going to read all those books right before going to production and event if you read them, during the rollout you may forget something that you read about. Of cause I\u2019ve read many of them and have my own experience. Before go-live I usually starting to recollect everything that I know and try to apply to the current case. I was thinking about how to organize information better and come up with an idea of well known old checklists.\n    [Nice to have] Application is deployed to at least 2 different locations(VPC peering could be configured between location)\n      Alerts are configured at least for basic metrics so that CPU, memory, IOPS, disk space\n      Databases should be deployed at least with a minimum required number of a node with a replication factor that helps you to recover as soon as possible\n      Need to have a list of smoke tests (it\u2019s good if they are automated) that could show that production is up and running\n  3rd party services health check should be either checked by application service itself or has his health check endpoints or needs to make some scripts that check the health of 3rd party service.\n    According to git-flow that you use need to assign tags to prepare branches for quick fixes, etc.\n  Make sure that you understand the number of necessary resources for each component in a system\n Make sure that you configure all limits for the services. To avoid situations when because of the memory leak in one service you kill everything around.\n      Need to have a person who is responsible for production deployment and sign off that production is ready to go\n    Need to have a disaster recovery plan with different levels of details and ETAs for example: how to recover one service, how to recover a database, how to recover the whole cluster, how to recover the whole region\n  Please don\u2019t hesitate to send me the things that you usually check before go live and I will update this list. And of cause, if you need help with your Application Architecture/DevOps Processes/BigData processing reach me out.", "posttime": "2020-05-22 16:59:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,\u5e94\u7528\u7a0b\u5e8f,readiness,\u751f\u4ea7", "title": "\u540e\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u4ea7\u5c31\u7eea\u68c0\u67e5\u8868", "title_en": "Production readiness checklist for back end applications", "transed": 1, "url": "https://medium.com/@aleksei.kornev/production-readiness-checklist-for-backend-applications-8d2b0c57ccec", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "\u5e94\u7528\u7a0b\u5e8f", "readiness", "\u751f\u4ea7"]}, {"category": "", "categoryclass": "", "imagename": "e48cf30d192f006425282b0e3318521e.jpg", "infoid": 1003250, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u56db\u53d1\u5e03\u7684\u4e00\u9879\u7814\u7a76\u663e\u793a\uff0c\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684Care19\u5e94\u7528\u7a0b\u5e8f\u662f\u9996\u6279\u5728\u7f8e\u56fd\u4e0a\u5e02\u7684\u6570\u5b57\u51a0\u72b6\u75c5\u6bd2\u63a5\u89e6\u8005\u8ffd\u8e2a\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\uff0c\u5b83\u8fdd\u53cd\u4e86\u81ea\u5df1\u4e0eFoursquare\u548c\u8c37\u6b4c\u7b49\u7b2c\u4e09\u65b9\u516c\u53f8\u5171\u4eab\u7528\u6237\u4fe1\u606f\u7684\u9690\u79c1\u653f\u7b56\u3002\n\u636eFast Company\u62a5\u9053\uff0c\u9690\u79c1\u8f6f\u4ef6\u4e13\u5bb6Jumbo Privacy\u5bf9Care19\u8fdb\u884c\u4e86\u5ba1\u67e5\uff0c\u53d1\u73b0\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5411\u5916\u90e8\u53d1\u9001\u4f4d\u7f6e\u6570\u636e\u548c\u5176\u4ed6\u4e2a\u4eba\u4fe1\u606f\u3002\n\u7531ProudCrowd\u5f00\u53d1\uff0c\u8be5\u516c\u53f8\u4e3a\u5317\u8fbe\u79d1\u4ed6\u5dde\u5dde\u7acb\u5927\u5b66\u4f53\u80b2\u8ff7\u8425\u9500\u4e00\u6b3e\u57fa\u4e8e\u4f4d\u7f6e\u7684\u793e\u4ea4\u7f51\u7edc\u5e94\u7528\uff0cCare19\u901a\u8fc7\u5206\u914d\u548c\u8ddf\u8e2a\u968f\u673a\u7528\u6237ID\u627f\u8bfa\u53c2\u4e0e\u8005\u533f\u540d\u3002\u8be5\u7cfb\u7edf\u8bb0\u5f55\u7528\u6237\u82b1\u8d3910\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u4e0e\u81ea\u613f\u63d0\u4f9b\u7ed9\u5317\u8fbe\u79d1\u4ed6\u5dde\u536b\u751f\u90e8\u7684\u63a5\u89e6\u8005\u8ffd\u8e2a\u6570\u636e\u76f8\u5173\u8054\u3002\n\u62a5\u544a\u79f0\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u9690\u79c1\u653f\u7b56\u8bf4\u660e\u4f4d\u7f6e\u6570\u636e\u662f\u60a8\u7684\u9690\u79c1\uff0c\u5e76\u5b89\u5168\u5b58\u50a8\u5728ProudCrowd\u6709\u9650\u8d23\u4efb\u516c\u53f8\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u9664\u975e\u60a8\u540c\u610f\u6216ProudCrowd\u6839\u636e\u8054\u90a6\u6cd5\u89c4\u5f3a\u5236\u8981\u6c42\uff0c\u5426\u5219\u4e0d\u4f1a\u4e0e\u7b2c\u4e09\u65b9\u5171\u4eab\u3002\n\u7136\u800c\uff0cJumbo\u53d1\u73b0\u4e86\u4f20\u8f93\u5230Foursquare\u7684\u7528\u6237ID\u53f7\u3001\u7535\u8bddID\u548c\u4f3c\u4e4e\u662f\u4f4d\u7f6e\u6570\u636e\u7684\u4e1c\u897f\u3002\u624b\u673a\u5e7f\u544a\u6807\u8bc6\u7b26\u88ab\u53d1\u9001\u5230\u4e0e\u8c37\u6b4cFirebase\u670d\u52a1\u76f8\u5173\u8054\u7684\u670d\u52a1\u5668\uff0c\u800c\u5206\u914d\u7684\u968f\u673aID\u548c\u624b\u673a\u540d\u79f0(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u5e38\u5305\u62ec\u7528\u6237\u7684\u540d\u5b57)\u88ab\u53d1\u9001\u5230\u8f6f\u4ef6\u8bca\u65ad\u516c\u53f8Bugfender\u3002\nProudCrowd\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff0c\u6839\u636e\u6211\u4eecFoursquare\u534f\u8bae\u7684\u6761\u6b3e\uff0cCare19\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u6e05\u695a\u5730\u663e\u793a\u4e86\u6211\u4eec\u9644\u8fd1\u5730\u65b9\u5c4f\u5e55\u4e0aFoursquare\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u4f46\u662f\uff0c\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u76ee\u524d\u6ca1\u6709\u660e\u786e\u63d0\u5230\u8fd9\u79cd\u7528\u6cd5\u3002\u6211\u4eec\u5c06\u4e0e\u6211\u4eec\u7684\u5dde\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\uff0c\u5728\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u4e2d\u66f4\u52a0\u660e\u786e\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0eFoursquare\u8fbe\u6210\u7684\u534f\u8bae\u4e0d\u5141\u8bb8\u4ed6\u4eec\u6536\u96c6\u6216\u4ee5\u4efb\u4f55\u5f62\u5f0f\u4f7f\u7528Care19\u6570\u636e\uff0c\u53ea\u662f\u7b80\u5355\u5730\u786e\u5b9a\u9644\u8fd1\u7684\u4f01\u4e1a\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9\u6211\u4eec\u3002\n\u5728\u7ed9Fast Company\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0cProudCrowd\u521b\u59cb\u4eba\u8482\u59c6\u00b7\u5e03\u9c81\u91d1\u65af(Tim Brookins)\u8868\u793a\uff0cCare19&19&Foursquare\u7684\u6574\u5408\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u5f88\u5feb\u5c31\u4f1a\u5f97\u5230\u7ea0\u6b63\u3002\u5e03\u9c81\u91d1\u65af\u5c06\u8be5\u9519\u8bef\u63cf\u8ff0\u4e3a\u76f8\u5f53\u6e29\u548c\uff0c\u56e0\u4e3aFoursquare\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6536\u96c6\u6211\u4eec\u53d1\u9001\u7684\u6570\u636e\u3002\n\u636e\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u62a5\u9053\uff0c\u867d\u7136Care19\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u6700\u8fd1\u53d1\u5e03\u7684\u82f9\u679c-\u8c37\u6b4c\u66dd\u5149\u901a\u77e5API\uff0c\u4f46\u82f9\u679c\u53c2\u4e0e\u4e86\u8be5\u5e94\u7528\u7684\u5ba1\u67e5\u3002\u82f9\u679c\u76ee\u524d\u6b63\u5728\u8c03\u67e5Jumbo\u7684\u6307\u63a7\uff0c\u5e76\u5c06\u4e0eProudCrowd\u5408\u4f5c\uff0c\u4f7f\u8fd9\u6b3e\u5e94\u7528\u7b26\u5408\u5176\u89c4\u5219\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u5317\u8fbe\u79d1\u4ed6\u5dde\u516c\u5171\u536b\u751f\u5c40\u7684\u4e00\u540d\u5b98\u5458\u662f\u4e0a\u5468\u6279\u8bc4\u82f9\u679c(Apple)\u548c\u8c37\u6b4c(Google)\u8de8\u5e73\u53f0\u66b4\u9732\u901a\u77e5\u7cfb\u7edf\u8fc7\u4e8e\u4e25\u683c\u800c\u65e0\u6cd5\u666e\u904d\u91c7\u7528\u7684\u5c11\u6570\u4e13\u5bb6\u4e4b\u4e00\u3002\u5728\u534e\u76db\u987f\u90ae\u62a5\u53d1\u8868\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5305\u62ec\u8054\u7cfb\u4eba\u8ffd\u8e2a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5728\u5185\u7684\u82f9\u679c-\u8c37\u6b4c\u89e3\u51b3\u65b9\u6848\u7684\u6279\u8bc4\u8005\u8868\u793a\uff0c\u66dd\u5149\u901a\u77e5API\u7eb3\u5165\u4e86\u5bf9\u8054\u7cfb\u4eba\u8ffd\u8e2a\u64cd\u4f5c\u4e0d\u5229\u7684\u6570\u636e\u5171\u4eab\u9650\u5236\u3002\n\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u63a5\u89e6\u8005\u8ffd\u8e2a\u8054\u7edc\u4eba\u5f17\u6069\u00b7\u591a\u65bd(Vern Dosch)\u8868\u793a\uff0c\u6bcf\u8fc7\u4e00\u5206\u949f\uff0c\u53ef\u80fd\u5c31\u4f1a\u6709\u5176\u4ed6\u4eba\u88ab\u611f\u67d3\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5c3d\u6211\u4eec\u6240\u80fd\u3002\u6211\u660e\u767d\u4e86\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u54c1\u724c\u9700\u8981\u4fdd\u62a4\u3002\u6211\u53ea\u5e0c\u671b\u4ed6\u4eec\u80fd\u7528\u4e0b\u5df4\u9886\u8def\u3002\n\u82f9\u679c\u548c\u8c37\u6b4c\u7684\u7cfb\u7edf\u62d2\u7edd\u8bbf\u95ee\u5730\u7406\u4f4d\u7f6e\u6570\u636e\uff0c\u533f\u540d\u7528\u6237\u8bbe\u5907\uff0c\u9650\u5236\u5e94\u7528\u7a0b\u5e8f\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e2d\u592e\u670d\u52a1\u5668\u4e0a\uff0c\u4ee5\u53ca\u5176\u4ed6\u4fdd\u969c\u63aa\u65bd\u3002\u5982\u679cPHA\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u7b26\u5408Apple-Google\u6807\u51c6\uff0c\u5b83\u4e0d\u4f1a\u88ab\u6388\u4e88\u8bbf\u95eeAPI\u7684\u6743\u9650\uff0c\u56e0\u6b64\u88ab\u7981\u6b62\u5728\u540e\u53f0\u5904\u7406\u4efb\u52a1\u3002\n\u5317\u8fbe\u79d1\u4ed6\u5dde\u6700\u521d\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u7684\u662f\u5e0c\u671b\u6574\u5408\u66dd\u5149\u901a\u77e5\u6280\u672f\uff0c\u4f46\u9690\u79c1\u9650\u5236\u4fc3\u4f7f\u56e2\u961f\u91cd\u65b0\u5f00\u59cb\u5e76\u521b\u5efa\u4e86\u4e24\u4e2a\u72ec\u7acb\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\u4e00\u4e2a\u662f\u4e3a\u8054\u7cfb\u4eba\u8ffd\u8e2a\u56e2\u961f\u521b\u5efa\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u96c6\u6210\u4e86\u66dd\u5149\u901a\u77e5API\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5317\u8fbe\u79d1\u4ed6\u5dde\u662f\u5426\u4f1a\u63a8\u51fa\u65b0\u7248Care19\u5e94\u7528\u7a0b\u5e8f\uff0c\u5185\u7f6e\u66dd\u5149\u901a\u77e5API\uff0c\u4f46\u8be5\u5dde\u662f\u5ba3\u5e03\u652f\u6301\u82f9\u679c-\u8c37\u6b4c\u5021\u8bae\u7684\u4e09\u4e2a\u5dde\u4e4b\u4e00\u3002\u636eAL.com\u62a5\u9053\uff0c\u5468\u56db\uff0c\u963f\u62c9\u5df4\u9a6c\u5dde\u548c\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u4e5f\u7b7e\u7ea6\u6210\u4e3a\u8fd9\u9879\u6280\u672f\u7684\u65e9\u671f\u91c7\u7528\u8005\u3002\n\u963f\u62c9\u5df4\u9a6c\u5dde\u5dde\u957f\u51ef\u00b7\u827e\u7ef4\u8bf4\uff0c(\u6211\u4eec)\u4e0e\u8fd9\u4e24\u5bb6\u5168\u7403\u5de8\u5934\u8054\u624b\uff0c\u5e0c\u671b\u5e2e\u52a9\u6211\u4eec\u7684\u4eba\u4eec\u4e86\u89e3\u4ed6\u4eec\u53ef\u80fd\u5728\u4f55\u65f6\u4f55\u5730\u63a5\u89e6\u5230\u8fd9\u79cd\u75c5\u6bd2\u3002\u5e0c\u671b\u8fd9\u5c06\u6210\u4e3a\u5de5\u5177\u7bb1\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u5de5\u5177\uff0c\u901a\u8fc7\u4f7f\u7528\u51e0\u4e4e\u6bcf\u4e2a\u963f\u62c9\u5df4\u9a6c\u5dde\u4eba\u53e3\u888b\u91cc\u7684\u4e1c\u897f\u6765\u51cf\u7f13\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\u4e00\u90e8\u624b\u673a\u3002&#34\uff1b\n\u5728\u77ed\u6682\u7684\u6d4b\u8bd5\u671f\u4e4b\u540e\uff0c\u82f9\u679c\u548c\u8c37\u6b4c\u7684\u66dd\u5149\u901a\u77e5API\u4e8e\u5468\u4e09\u53d1\u5e03\u4e86iOS13.5\u3002\u5229\u7528\u8be5\u6846\u67b6\u7684\u8054\u7cfb\u4eba\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u4f1a\u5728\u672a\u6765\u51e0\u5929\u6216\u51e0\u5468\u5185\u53d1\u5e03\u3002\nAppleInsider\u4e0e\u4f1a\u5458\u6709\u5408\u4f5c\u5173\u7cfb\uff0c\u901a\u8fc7\u4f1a\u5458\u94fe\u63a5\u8d2d\u4e70\u7684\u4ea7\u54c1\u53ef\u80fd\u4f1a\u8d5a\u53d6\u4f63\u91d1\u3002\u8fd9\u4e9b\u5408\u4f5c\u5173\u7cfb\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u7f16\u8f91\u5185\u5bb9\u3002", "note_en": "North Dakota&#39;s Care19 app, one of the first digital coronavirus contact tracing solutions to hit market in the U.S., contradicts its own privacy policy to share user information with third party companies like Foursquare and Google, according to a study released on Thursday.\n  A  review of Care19 by privacy software specialist Jumbo Privacy found the app  sends location data and other personal information to outside parties, reports  Fast Company.\n Developed by ProudCrowd, which markets a location-based social networking app for North Dakota State University sports fans, Care19 promises  participant anonymity by assigning and tracking random user IDs. The system logs locations where a user spent 10 minutes or more, information that can be correlated with contact tracing data provided on a voluntary basis to the North Dakota Department of Health.\n The app&#39;s privacy policy notes &#34;location data is private to you and is stored securely on ProudCrowd, LLC servers,&#34; and will not be shared with third-parties &#34;unless you consent or ProudCrowd is compelled under federal regulations,&#34; the report said.\n However, Jumbo found user ID numbers, phone IDs and what appears to be location data transmitted to Foursquare. Phone advertising identifiers are sent to servers associated with Google&#39;s Firebase service, while the assigned random ID and phone name \u2014 which by default typically includes a user&#39;s first name \u2014 is sent to software diagnostics firm Bugfender.\n &#34;The Care19 application user interface clearly calls out the usage of Foursquare on our Nearby Places&#39; screen, per the terms of our Foursquare agreement,&#34; ProudCrowd said in a statement. &#34;However, our privacy policy does not currently explicitly mention this usage. We will be working with our state partners to be more explicit in our privacy policy. It is important to note that our agreement with Foursquare does not allow them to collect Care19 data or use it in any form, beyond simply determining nearby businesses and returning that to us.&#34;\n In an email to  Fast Company, ProudCrowd founder Tim Brookins said Care19&#39;s Foursquare integration was a mistake that will soon be rectified. Brookins characterized the error as &#34;fairly benign, as Foursquare doesn&#39;t actually collect our sent data.&#34;\n While Care19 does not rely on the recently released Apple-Google  Exposure Notification API, Apple  was involved in the vetting of the app, reports  The Washington Post. Apple is currently investigating Jumbo&#39;s claims and will work with ProudCrowd to bring the app in compliance with its rules.\n  Ironically, a North Dakota public health authority official was among a handful of experts who last week criticized Apple and Google&#39;s cross-platform Exposure Notification system as being  too restrictive for general adoption. In an article published by  The Post, critics of the Apple-Google solution, including developers of contact tracing apps, said the Exposure Notification API incorporates data sharing restrictions that are detrimental to contact tracing operations.\n &#34;Every minute that ticks by, maybe someone else is getting infected, so we want to be able to use everything we can,&#34; said Vern Dosch, contact tracing liaison for North Dakota. &#34;I get it. They have a brand to protect. I just wish they would have led with their jaw.&#34;\n Apple and Google&#39;s systems deny access to geolocation data, anonymize user equipment and restrict apps from storing data on a centralized server, among other safeguards. If a PHA&#39;s app does not meet Apple-Google standards, it is not granted access to the API and is thus prohibited from processing tasks in the background.\n North Dakota initially built its app with hopes of integrating Exposure Notification technology, but the privacy restrictions prompted the team to start over and create two separate apps: one for contact tracing teams and another that integrates the Exposure Notification API.\n It is unclear if North Dakota will roll out a new version of the Care19 app with the Exposure Notification API baked in, but the state is one of three to announce support of the Apple-Google initiative. On Thursday,  Alabama and South Carolina also signed on as early adopters of the technology, reports  AL.com.\n &#34;(We&#39;ve) joined hands with these two global giants in hopes of helping our people learn when and where they may have gotten exposed to this virus,&#34; Alabama Gov. Kay Ivey said. &#34;Hopefully, this will become an important tool in the tool kit to slow the spread of coronavirus by using what almost every Alabamians has in their pocket ... a cell phone.&#34;\n After a brief beta testing period, Apple and Google&#39;s Exposure Notification API went live  on Wednesday with the release of iOS 13.5. Contact tracing apps that take advantage of the framework should see release in the coming days or weeks.\n    AppleInsider has affiliate partnerships and may earn commission on products purchased through affiliate links. These partnerships do not influence our editorial content.", "posttime": "2020-05-22 16:25:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u82f9\u679c,google,app,apple", "title": "\u7ecf\u82f9\u679c\u5ba1\u67e5\u7684\u8054\u7cfb\u4eba\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u53d1\u73b0\u4e0eFoursquare/Google\u5171\u4eab\u6570\u636e", "title_en": "Contact tracing app vetted by Apple found to share data with Foursquare/Google", "transed": 1, "url": "https://appleinsider.com/articles/20/05/22/contact-tracing-app-vetted-by-apple-found-to-share-data-with-foursquare-and-google", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u82f9\u679c", "google", "app", "apple"]}, {"category": "", "categoryclass": "", "imagename": "bff2a714cd7081340512131d66996508.png", "infoid": 1003249, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "80486\u5904\u7406\u5668\u53ef\u4ee5\u5728\u5355\u4e2a\u5468\u671f\u5185\u6267\u884c\u8bb8\u591a\u6307\u4ee4\uff0c\u4f8b\u5982\u5bc4\u5b58\u5668\u5230\u5bc4\u5b58\u5668\u76f8\u52a0\u6307\u4ee4(\u4f8b\u5982\uff0cADDEAX\u3001EBX)\uff0c\u4eba\u4eec\u901a\u5e38\u8ba4\u4e3a\u8fd9\u662f\u76f8\u5f53\u590d\u6742\u7684\uff0c\u9700\u8981\u8bfb\u53d6\u4e24\u4e2a\u5bc4\u5b58\u5668\u3001\u5b8c\u6574\u768432\u4f4d\u7b97\u672f\u903b\u8f91\u5355\u5143\u64cd\u4f5c\u4ee5\u53ca\u5bc4\u5b58\u5668\u548c\u6807\u5fd7\u5199\u5165\u3002\n\u7136\u800c\uff0c\u4eba\u4eec\u81ea\u7136\u4f1a\u8ba4\u4e3a\u76f8\u5bf9\u7b80\u5355\u7684\u5176\u4ed6\u6307\u4ee4\u9700\u8981\u591a\u4e2a\u5468\u671f\uff0c\u5305\u62ec\u5404\u79cd\u6807\u5fd7\u64cd\u4f5c\u6307\u4ee4\uff0c\u5982STC\u548cCLC\uff0c\u5b83\u4eec\u662f\u52a0\u6cd5\u6307\u4ee4\u6240\u9700\u64cd\u4f5c\u7684\u4e25\u683c\u5b50\u96c6(\u4ec5\u5c06\u9884\u5148\u8ba1\u7b97\u7684\u503c\u52a0\u8f7d\u5230\u6807\u5fd7\u4e2d\uff0c\u800c\u4e0d\u5fc5\u5b9e\u9645\u57fa\u4e8e\u8f93\u5165\u786e\u5b9a\u8981\u52a0\u8f7d\u7684\u503c\uff0c\u5e76\u4e14\u6839\u672c\u4e0d\u9700\u8981\u5bc4\u5b58\u5668\u66f4\u65b0)\uff0c\u4f46\u9700\u89812\u4e2a\u5468\u671f\u3002\n80486\u5305\u542b\u7528\u4e8e\u89e3\u7801\u3001\u64cd\u4f5c\u6570\u63d0\u53d6\u3001\u6267\u884c\u548c\u56de\u5199\u7684\u5e76\u884c\u64cd\u4f5c\u7ea7\u3002\u56e0\u6b64\uff0c\u867d\u7136\u52a0\u6cd5\u786e\u5b9e\u9700\u89813\u4e2a\u65f6\u949f\u624d\u80fd\u6267\u884c\uff0c\u4f46\u4e0e\u7b2c\u4e00\u4e2a8086\u4e00\u6837\uff0c\u5b83\u7684\u6267\u884c\u4e0e\u4e0a\u4e00\u6b21/\u4e0b\u4e00\u6b21\u64cd\u4f5c\u91cd\u53e0\uff0c\u56e0\u6b64CPU\u53ef\u4ee5\u5728\u6bcf\u4e2a\u65f6\u949f\u4e0a\u6267\u884c\u4e00\u4e2a\u52a0\u6cd5\u3002\n(\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e00\u9636\u6bb5\u8fd8\u6709\u5f88\u591a\u4e8b\u60c5\u8981\u505a\uff0c\u6240\u4ee5\u6211\u53ef\u80fd\u4e0d\u8bb0\u5f97\u6240\u6709\u7684\u7ec6\u8282\u4e86)\u3002\n\u4e24\u4e2a\u65f6\u949f\u662f\u81ea8088\u4ee5\u6765\u4efb\u4f55\u6307\u4ee4\u7684\u6700\u5c0f\u6267\u884c\u65f6\u95f4\u3002\u7531\u4e8e\u5bc4\u5b58\u5668/\u5bc4\u5b58\u5668\u786e\u5b9e\u9700\u89813\u4e2a\u5468\u671f\uff0c\u56e0\u6b64\u6dfb\u52a0(\u6216\u7c7b\u4f3c)\u3002\u4f7f\u7528286\uff0c\u7531\u4e8e\u4f18\u5316\u4e86\u5fae\u7801\u548c\u8def\u7531(*1)\uff0c\u5b83\u4eec\u7684\u8fd0\u884c\u901f\u5ea6\u52a0\u5feb\u5230\u4e24\u4e2a\u5468\u671f\u3002\u867d\u7136386\u786e\u5b9e\u7531\u4e8e\u66f4\u597d\u7684\u5730\u5740\u751f\u6210\u800c\u52a0\u5feb\u4e86\u6267\u884c\u901f\u5ea6\uff0c\u4f46\u57fa\u672c\u6267\u884c\u65b9\u6848\u4e0e3\u7ea7\u6307\u4ee4\u9884\u53d6\u4fdd\u6301\u4e0d\u53d8\u3002\n486\u786e\u5b9e\u8fdb\u4e00\u6b65\u8c03\u6574\u4e86\u5730\u5740\u751f\u6210\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\u91cd\u505a\u4e86\u6307\u4ee4\u63d0\u53d6\u4f53\u7cfb\u7ed3\u6784\u3002\u8fd9\u662f\u901a\u8fc7\u4e00\u67615\u7ea7\u7ba1\u9053\u5b8c\u6210\u7684\u3002\n\u89e3\u78011-\u4e3b\u6307\u4ee4\u89e3\u7801-\u8fd9\u91cc\u53ea\u68c0\u67e5\u4e86\u524d1..3\u4e2a\u5b57\u8282\u3002\n\u8fd9\u4e9b\u7ea7\u7684\u64cd\u4f5c\u662f\u6709\u6761\u4ef6\u7684\uff0c\u4f46\u5c06\u59cb\u7ec8\u91c7\u53d6(\u901a\u8fc7)\u64cd\u4f5c\u4ee5\u4fdd\u6301\u6052\u5b9a\u7684\u65f6\u949f\u901f\u7387\u3002\nFETCH\u603b\u662f\u4e00\u6b21\u5c06\u4e00\u4e2a16\u5b57\u8282\u7684\u9ad8\u901f\u7f13\u5b58(\u5185\u5b58)\u884c\u653e\u5165\u5b83\u7684\u4e24\u4e2a\u7f13\u51b2\u533a\u4e4b\u4e00\u3002\u56e0\u6b64\uff0c\u5e73\u5747\u6bcf4-5\u6761\u6307\u4ee4\u5b83\u53ea\u9700\u8981\u8fd9\u6837\u505a\u3002\u8be5\u65f6\u95f4\u53ef\u7528\u4e8e\u9884\u586b\u6ee1\u7b2c\u4e8c\u7f13\u51b2\u5668\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u4ee3\u7801\u662f\u7ebf\u6027\u7684\uff0c\u5373\u4f7f\u6ca1\u6709\u9ad8\u901f\u7f13\u5b58\uff0c486\u4e5f\u53ef\u4ee5\u4fdd\u6301\u5feb\u901f\u6267\u884c\u3002\n\u8bd1\u78011\u67e5\u770b\u64cd\u4f5c\u7801\u548c\u5bfb\u5740\u5b57\u6bb5\u4ee5\u786e\u5b9a\u8981\u91c7\u53d6\u7684\u52a8\u4f5c\uff0c\u5c06\u5b9e\u9645\u6307\u4ee4\u957f\u5ea6\u53cd\u9988\u5230\u63d0\u53d6\u7ea7(\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u524d\u8fdb)\uff0c\u5b83\u8bbe\u7f6eD2\u6267\u884c\u7684\u64cd\u4f5c\u3002\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e2a\u524d\u7f00\u5b57\u8282\u88ab\u4f5c\u4e3a\u5176\u81ea\u5df1\u7684\u6307\u4ee4\u6765\u5904\u7406\uff0c\u5360\u7528\u53e6\u4e00\u4e2a\u65f6\u949f\u5468\u671f(*2\uff0c3)\u3002\u7c7b\u4f3c\u4e8e\u53cc\u5b57\u8282\u64cd\u4f5c\u7801\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282(\u4f8b\u59820Fh)\u3002\n\u89e3\u78012\u89e3\u7801\u64cd\u4f5c\u6570\u8bbf\u95ee\uff0c\u4ece\u63d0\u53d6\u7ea7\u7684\u7f13\u51b2\u533a\u83b7\u53d6\u504f\u79fb\u91cf\u6216\u7acb\u5373\u503c\u3002\u5b83\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5730\u5740\u8ba1\u7b97\u3002\u7b80\u5355\u7684\u9700\u8981\u4e24\u4e2a\u5468\u671f\uff0c\u590d\u6742\u7684\u9700\u8981\u4e24\u4e2a\u5468\u671f\u3002\n\u884c\u5211\u3002\u5982\u679c\u6240\u6709\u6570\u636e\u90fd\u4ee5\u5373\u65f6\u65b9\u5f0f\u5b58\u5728\uff0c\u6216\u5b58\u5728\u4e8e\u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u6216\u6765\u81ea\u5bc4\u5b58\u5668\u5806\uff0c\u5219\u6267\u884c\u5c06\u5728\u5355\u4e2a\u5468\u671f\u5185\u6267\u884c\u3002\n\u5199\u56de\u5c06\u8bfb\u53d6\u503c(\u5185\u5b58\u3001\u9ad8\u901f\u7f13\u5b58\u6216\u63d0\u53d6\u7f13\u51b2\u533a)\u6216\u9501\u5b58\u7684\u6267\u884c\u7ed3\u679c\u5b58\u50a8\u5230\u5bc4\u5b58\u5668\u548c/\u6216\u5185\u5b58\u5199\u5165\u7f13\u51b2\u533a\u4e2d\u3002\n\u56e0\u6b64\uff0c\u5355\u4e2aADD REG\uff0cREG\u4ecd\u7136\u9700\u89813\u4e2a\u5468\u671f\uff0c\u4f46\u662f\u7531\u4e8e\u6d41\u6c34\u7ebf\u7684\u539f\u56e0\uff0cCPU\u6bcf\u4e2a\u65f6\u949f\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u5468\u671f\u3002\n\u4f46\u662f\u7b49\u7b49\uff0c\u5982\u679c\u6709\u4e24\u4e2aadd\uff0c\u7b2c\u4e8c\u4e2a\u9700\u8981\u524d\u4e00\u4e2a\u7684\u7ed3\u679c\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u6bd4\u5982ADD AX\uff0cBX\uff1bADD CX\uff0cAX\u3002\u8fd9\u4e0d\u662f\u610f\u5473\u7740\u7b2c\u4e8c\u4e2a\u5fc5\u987b\u7b49\u5230\u7b2c\u4e00\u4e2a\u7684\u56de\u5199\u5b8c\u6210\u624d\u80fd\u6267\u884c\u5417\uff1f\n\u55ef\uff0c\u662f\u7684\uff0c\u9664\u4e86\u5de5\u7a0b\u5e08\u5728\u56de\u5199\u548c\u6267\u884c\u4e4b\u95f4\u589e\u52a0\u4e86\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f/\u53cd\u9988\u3002WB\u8f93\u5165\uff0c\u5373\u524d\u4e00\u6b21\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4e0d\u4ec5\u5199\u5165\u5bc4\u5b58\u5668\u7ec4\uff0c\u800c\u4e14\u8fd8\u63d0\u4f9b\u4f5c\u4e3a\u5907\u7528\u8f93\u5165(\u7528\u76ee\u6807\u662f\u4ec0\u4e48\u6807\u8bb0)\u8fd4\u56de\u6267\u884c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e00\u6761\u6307\u4ee4\u9700\u8981\u8bfb\u53d6\u524d\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u5bc4\u5b58\u5668\uff0c\u5219\u751a\u81f3\u5728\u5199\u5165\u5b9e\u6570\u5bc4\u5b58\u5668\u4e4b\u524d\u5c31\u53ef\u4ee5\u8bfb\u53d6\u8be5\u5bc4\u5b58\u5668\u3002\n\u5f88\u9177\uff0c\u4e0d\u662f\u5417\uff1f\u4f46\u8fd9\u4f1a\u53d8\u5f97\u66f4\u52a0\u68d8\u624b\u3002\u5728EXECUTE\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u64cd\u4f5c\u7684\u6807\u5fd7\u4e5f\u4ece\u5199\u56de\u4e2d\u63d0\u4f9b\u56de\u6765\uff0c\u4ee5\u4fbf\u5728\u4e0b\u4e00\u6761\u6307\u4ee4\u4e2d\u4f7f\u7528\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u5728\u8bf8\u5982\u6bd4\u8f83\u6216\u51cf\u6cd5\u4e4b\u7c7b\u7684\u6807\u5fd7\u4fee\u6539\u64cd\u4f5c\u4e4b\u540e\u542f\u7528\u4e00\u4e2a\u5468\u671f\u672a\u91c7\u53d6\u7684\u8df3\u8f6c\u3002\n\u5c3d\u7ba1\u6709\u8fd9\u6837\u7684\u4f18\u5316\uff0c\u72b6\u6001\u5bc4\u5b58\u5668\u64cd\u4f5c\u6307\u4ee4\u5e76\u6ca1\u6709\u4ece\u8fd9\u4e2a\u907f\u514d\u6697\u793a\u7684\u5feb\u6377\u65b9\u5f0f\u4e2d\u53d7\u76ca\u3002\u76f4\u63a5\u72b6\u6001\u5bc4\u5b58\u5668\u64cd\u4f5c\u4e0d\u901a\u8fc7WB\uff0c\u800c\u662f\u76f4\u63a5\u5904\u7406\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u4e24\u6b65\u5fae\u6307\u4ee4\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u72b6\u6001\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e0d\u4ec5\u4f1a\u6539\u53d8\u6240\u6709\u64cd\u4f5c\u884c\u4e3a\uff0c\u8fd8\u4f1a\u4ea7\u751f\u5404\u79cd\u5f02\u5e38\u3002\n\u8bb0\u4f4f\uff0c80486\u4e0d\u662fRISC CPU\uff0c\u4e5f\u4e0d\u4f1a\u5728\u5185\u90e8\u8f6c\u6362\u4e3aRISC(\u7c7b\u4f3c)\u6307\u4ee4\uff0c\u4f46\u7ee7\u7eed\u50cf\u5b83\u4eec\u7684\u524d\u8eab\u4e00\u6837\u8fd0\u884c\uff0c\u8fd9\u662f\u6709\u76ca\u7684\u3002\u53ea\u9700\u8981\u975e\u5e38\u5de7\u5999\u5730\u8bbe\u8ba1\u6d41\u6c34\u7ebf\uff0c\u5728\u5404\u7ea7\u4e4b\u95f4\u8fdb\u884c\u53cd\u9988\uff0c\u5e76\u5e76\u884c\u64cd\u4f5c\u5730\u5740\u8ba1\u7b97\u5355\u5143\u3002\u867d\u7136\u5954\u817e(P5)\u5f15\u5165\u4e86\u8d85\u5361\u64cd\u4f5c(\u5e94\u8be5\u662f\u5e76\u884c\u6d41\u6c34\u7ebf)\uff0c\u4f46\u76f4\u5230P6(\u5954\u817ePro)\u624d\u5c06\u4ee3\u7801\u7ffb\u8bd1\u6210(\u6709\u70b9)\u7c7b\u4f3cRISC\u7684\u5185\u6838--\u4f46\u5373\u4f7f\u5728\u90a3\u65f6\uff0c\u4e5f\u4f7f\u7528\u4e86\u8bb8\u591a\u975eRISCy\u4fa7\u901a\u9053\u3002\n\u968f\u540e\u7684\u8bbe\u8ba1\u771f\u7684\u8d85\u8d8a\u4e86\u4ed6\u4eec\u81ea\u5df1\uff0c\u4e00\u6761\u7ba1\u9053\u5728\u5954\u817eIII\u4e2d\u589e\u957f\u523010\u7ea7\uff0c\u7b2c\u4e00\u53f0\u5954\u817e4\u7ea7\u589e\u957f\u523020\u7ea7\uff0cIIRC\u7ba1\u9053\u589e\u957f\u523040\u7ea7(\uff01)\u3002\u5728\u8fd4\u56de\u5230\u66f4\u7b80\u5355\u4f46\u5927\u89c4\u6a21\u7684\u5e76\u884c\u8bbe\u8ba1(\u5982P6)\u4e4b\u524d\uff0c\u4e0a\u4e00\u6b21\u7f51\u7edc\u7a81\u53d1\u7684\u5404\u4e2a\u9636\u6bb5\u5df2\u7ecf.\u3002\u4f46\u8fd9\u4e5f\u662f\u53e6\u4e00\u56de\u4e8b\u4e86\u3002\n*1-80286\u901f\u5ea6\u7684\u4e3b\u8981\u6536\u76ca\u662f\u4e13\u7528\u5730\u5740\u8ba1\u7b97\u5355\u5143\uff0c\u4f46\u8fd9\u662f\u53e6\u4e00\u56de\u4e8b\u3002\n*2-\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u9501\u5728286/386\u4e0a\u9700\u8981\u96f6\u4e2a\u5468\u671f\uff0c\u800c\u5728486\u4e0a\u53ea\u9700\u8981\u4e00\u4e2a\u5468\u671f\u3002\n*3-\u5728\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u786e\u5b9e\u8bfb\u5230\u4e86\u82f1\u7279\u5c14(IIRC)\u5173\u4e8e\u524d\u7f00\u548c\u7ba1\u9053\u7684\u4e00\u9879\u5f88\u597d\u7684\u7814\u7a76\u3002\u4e00\u4e2a\u771f\u6b63\u503c\u5f97\u6ce8\u610f\u7684\u90e8\u5206\u662fUnix\u7a0b\u5e8f\u5e73\u5747\u53ea\u4f7f\u7528DOS\u7a0b\u5e8f\u7684\u4e00\u534a\u524d\u7f00\u3002\u8fd9\u8bc1\u660e\u4e86\u7528\u6bb5\u503c\u8ba1\u7b97\u5730\u5740\u662f\u591a\u4e48\u611a\u8822\u3002\n\u611f\u8c22\u60a8\u62bd\u51fa\u65f6\u95f4\u6765\u5199\u8fd9\u4efd\u4fe1\u606f\u91cf\u5f88\u5927\u7684\u7b54\u6848\u3002\u6211\u786e\u5b9e\u4ece\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u3002--\u76d6\u5c14\u594e\u65af\u7279\n\u9996\u5148\uff0c486\u5728\u5355\u4e2a\u5468\u671f\u5185\u6267\u884c\u6307\u4ee4\u662f\u4e0d\u6b63\u786e\u7684\u300280486\u662f\u6d41\u6c34\u7ebf\u67b6\u6784\uff0c\u56e0\u6b64\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5927\u591a\u6570\u6307\u4ee4\u53ef\u4ee5\u5728\u524d\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u540e\u4e00\u4e2a\u5468\u671f\u5f00\u59cb\u3002AFAIK\uff0c80486\u7684\u7ba1\u9053\u957f\u5ea6\u4e3a5\u7ea7(\u5982\u679cID1ID2ex WB)\u3002\u8fd9\u610f\u5473\u7740\u8fdb\u5165\u8be5\u6d41\u6c34\u7ebf\u7684\u6307\u4ee4\u5177\u67095\u4e2a\u5468\u671f\u7684\u7b49\u5f85\u65f6\u95f4\u3002\n\u8fd9\u4e9b1\u5468\u671f\u6307\u4ee4\u5c5e\u4e8e\u6240\u8c13\u7684RISC\u5b50\u96c6\uff1a\u751f\u4ea7\u8f6f\u4ef6\u4e2d\u901a\u5e38\u5b58\u5728\u7684\u6307\u4ee4\u5b50\u96c6\uff0c\u56e0\u4e3a\u751f\u6210\u8be5\u8f6f\u4ef6\u7684\u7f16\u8bd1\u5668\u4f7f\u7528\u5b83\u4eec\u6700\u591a\u3002\n\u5176\u4ed6\u6307\u4ee4\uff0c\u5c3d\u7ba1\u548c\u7b2c\u4e00\u6761\u6307\u4ee4\u4e00\u6837\u7b80\u5355\uff0c\u4f46\u4e0d\u5c5e\u4e8eRISC\u5b50\u96c6\uff0c\u5fc5\u987b\u901a\u8fc7\u5fae\u7801\u6267\u884c\uff0c\u5c31\u50cf\u5b83\u5728\u4ee5\u524d\u7684\u4f53\u7cfb\u7ed3\u6784\u4e2d\u662f\u5982\u4f55\u6267\u884c\u7684\u4e00\u6837\u3002\n\u6211\u660e\u767d\u4e86\uff0c\u6240\u4ee5\u5904\u7406\u5668\u6709\u4e24\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u6267\u884c\u8def\u5f84\uff0c\u90a3\u4e9b\u66f4\u5e38\u89c1\u7684\u6307\u4ee4\u901a\u8fc7\u66f4\u4f18\u5316\u7684\u8def\u5f84\uff0c\u4f46\u662f\u5176\u4ed6\u6307\u4ee4(\u5373\u4f7f\u5b83\u4eec\u7531\u4e8e\u662f\u7b80\u5355\u7684\u6307\u4ee4\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5728\u4f18\u5316\u7684\u8def\u5f84\u4e0a\u5b9e\u73b0)\u4f7f\u7528\u8f83\u4e0d\u4f18\u5316\u7684\u673a\u5236\uff0c\u56e0\u6b64\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\uff1f-occipita\u3002\n\u9664\u4e86\u56f4\u7ed5\u5fae\u7801\u548c\u5feb\u901f\u8def\u5f84\u6307\u4ee4\u7684\u5404\u79cd\u4f18\u5316\u4e4b\u5916\uff0cx86\u4e0a\u7684\u6807\u5fd7\u4e5f\u5f88\u7279\u6b8a\uff0c\u56e0\u4e3a\u6240\u6709\u6307\u4ee4\u90fd\u4e0d\u4f1a\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u66f4\u65b0\u6807\u5fd7(INC/DEC\u4e0d\u4f1a\u50cfADD/SUB\u90a3\u6837\u66f4\u65b0CF)\u3002\u4e5f\u8bb8\u82f1\u7279\u5c14\u66f4\u559c\u6b22\u4f7f\u7528\u4e00\u79cd\u590d\u6742\u7684\u65b9\u6cd5\u6765\u4ec5\u66f4\u6539CF(\u4f8b\u5982\u5c06\u6807\u5fd7\u5bc4\u5b58\u5668\u8bfb\u53d6\u5230\u4e34\u65f6\u5b58\u50a8\u5668\uff0c\u5e94\u7528\u63a9\u7801.)\u3002\u4e0d\u662f\u6dfb\u52a0\u4fe1\u53f7\u6765\u4ec5\u66f4\u65b0CF\u5e76\u8ddf\u8e2a\u76f8\u5173\u6027\uff1a\u5982\u679cCF\u66f4\u65b0\u662f\u7279\u5b9a\u7684\uff0c\u5219CPU\u53ef\u80fd\u9700\u8981\u505c\u6b62\u6d41\u6c34\u7ebf\u4ee5\u907f\u514d\u5371\u9669\u3002--TEMLIB\u3002\n\u70b9\u51fb\u201c\u53d1\u5e03\u60a8\u7684\u7b54\u6848\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u3001\u9690\u79c1\u653f\u7b56\u548cCookie\u653f\u7b56\u3002\n\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u7b54\u6848\u5417\uff1f\u6d4f\u89c8\u6807\u8bb0\u7684\u5176\u4ed6\u95ee\u9898\u6216\u63d0\u51fa\u60a8\u81ea\u5df1\u7684\u95ee\u9898\u3002", "note_en": "The 80486 processor can execute many instructions in a single cycle, such as a register-to-register add instruction ( ADD EAX, EBX, for example), which one would generally assume is fairly complex, requiring two registers to be read, a full 32 bit ALU operation, and both a register and flag writes.\n However, other instructions that one would naturally assume to be relatively simple take multiple cycles, including the various flag manipulation instructions like  STC and  CLC, which are a strict subset of the operations required for an  ADD instruction (only loading a precalculated value into the flags, rather than having to actually determine what the value to load should be based on inputs, and not needing a register update at all), yet take 2 cycles.\n  The 80486 contains parallel operating stages for decoding, operand fetch, execution and write back. So while an  ADD does take 3 clocks to perform, still like with the first 8086, it&#39;s execution overlaps with the previous/next operation, so the CPU can crank out one  ADD per clock.\n  (Caveat, there&#39; a whole lot more going on in this stages, so I might not remember all details)\n Two clocks was the minimum execution time for any instruction since the 8088.  ADD (or similar) as register/register did take 3 cycles. With the 286 they were sped up to two cycle operation due optimized microcode and routing (*1). While the 386 did speed up execution even more due better address generation, the basic execution scheme stayed the same with a 3 stage instruction prefetch.\n The 486 did straighten address generation to further, but more important redid the instructions fetch architecture. This was done by a 5 stage pipeline.\n Decode 1 - Primary instruction decode - here only the first 1..3 bytes were examined\n Operation of these stages are conditional, but will always be taken (passed thru) to keep a constant clock rate.\n Fetch always gets a cache (memory) line of 16 byte at once into one of its two buffers. Thus in average it only needs to do so every 4-5 instructions. This time is available to prefill the second buffer. Thus the 486 can keep up fast execution even without cache as long as the code is linear.\n Decode 1 looks at opcode and addressing field to determinate the action to be taken, feed back real instruction length to the fetch stage (so it can advance) it sets up the operation D2 performs. Notable here, each prefix byte is handled as an instruction of its own, taking another clock cycle (*2,3). Similar the first byte (e.g.0Fh) of a two byte opcode.\n Decode 2 decodes operand access, fetches offsets or immediate values from the fetch stage&#39;s buffer. It des as well do address calculations. Simple ones within a single cycle, complex need two.\n Execution. If all data is present as immediate, or in cache, or from the register file, the execution performs in a single cycle.\n Write Back stores either the read value (memory, cache or Fetch buffer) or the latched results from Execution into the registers and or memory write buffers.\n So a single  ADD reg,reg still needs 3 cycles but due the pipeline the CPU can finish one every clock.\n But wait, what happens if there are two  ADD, the second needing the result of the previous? Like  ADD AX,BX; ADD CX,AX. Wouldn&#39;t that mean the second has to wait in execution until write back of the first is finished?\n Well, yes, except the engineers added a shortcut/feedback between Write Back and Execution. The WB input, the result of the previous Execute, is not only written to the register set, but as well offered to back to Execution as alternate input (tagged with what the target was). So if one instruction needs to read a register that was the result of the prior instruction it&#39;s available even before written into the &#39;real&#39; register.\n Cool, isn&#39;t it? But it gets even more tricky. The flags of any operation done in Execute are as well provided back from Write Back to be used in the next instruction. This is done to enable a one cycle not taken jump after flag modifying operations like compare or subtract.\n Despite that optimization status register manipulating instructions do not benefit from this shortcut to avoid implications. Direct status register manipulation don&#39;t go thru WB but are two step microinstructions handling the Status Register directly. This is important as status register settings do not only change over all operation behaviour but also can generate various exceptions.\n  It&#39;s beneficial to remember that  the 80486 is not a RISC CPU and does  not translate internally to RISC(-like) instructions, but continues to operate like their predecessors. Just with a very clever designed pipeline with feedback between various stages and parallel operation of address calculation units. While The Pentium (P5) introduced superskalar operation (due parallel pipelines), it wasn&#39;t until the P6 (Pentium Pro) that a code translation to a (somewhat) RISC like core happened - but even then lots of un-RISCy side channels were used.\n Following designs really outdid themself with a pipeline growing to 10 stages in Pentium III, 20 for the first Pentium 4 and IIRC 40 (!) stages for the last netburst, before going back to a more simple but massive parallel design like teh P6 already had... But that&#39;s as well another story.\n  *1 - The main gain of the 80286 in speed was a dedicated address calculation unit, but that&#39;s a different story.\n *2 - That&#39;s why a  LOCK takes zero cycles on a 286/386 but one cycle on a 486.\n *3 - Somewhere I did read a nice study made by Intel (IIRC) about prefixes and the pipeline. One really remarkable part was that Unix programs in average use only half as much prefixes as DOS programs. Proves my pot how stupid it is to do address calculation with segment values.\n  Thank you for taking the time to write this very informative answer. I did learn a lot from this.\r \r\u2013\u00a0 ghellquist\n      First, it is not true that the 486 executes instructions in a single cycle. The 80486 is a pipelined architecture, so it&#39;s more accurate to say that most instructions can start one cycle after the preceding instruction has started. AFAIK, the pipeline length of a 80486 is 5 stages (IF ID1 ID2 EX WB). This means that a instruction that enter this pipeline has a latency of 5 cycles.\n These &#34;1-cycle&#34; instructions are the ones that belong to the so called RISC subset: a subset of instructions that are commonly present in production software because compilers that produced that software use them the most.\n Other instructions, despite being as simple as the first ones, doesn&#39;t belong to the RISC subset and must be executed by means of microcode, as how it were executed in previous architectures.\n  I see, so the processor has two entirely separate execution paths, and those more common instructions go via a more optimized path, but other instructions (even if they could easily have been implemented on that optimized path due to being simple instructions) use the less optimized mechanism and therefore take longer?\r \r\u2013\u00a0 occipita\n  Besides various optimisations around microcode and fast path instructions, flags on x86 are special as all instructions don&#39;t update the flags in the same way (INC/DEC don&#39;t update CF unlike ADD/SUB). Maybe Intel preferred to use a convoluted method to change only CF (such as reading the flag register to a temporary storage, apply a mask...) instead of adding signals to only update CF and track dependencies : if CF updates are particular, the CPU may need to stall the pipeline to avoid hazards.\r \r\u2013\u00a0 TEMLIB\n    By clicking \u201cPost Your Answer\u201d, you agree to our  terms of service,  privacy policy and  cookie policy\n  Not the answer you&#39;re looking for? Browse other questions tagged       or  ask your own question.", "posttime": "2020-05-22 16:25:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u95f4,execute,\u6307\u4ee4", "title": "\u4e3a\u4ec0\u4e4880486\u6267\u884c\u7b80\u5355\u6307\u4ee4\u7684\u65f6\u95f4\u6bd4\u6267\u884c\u590d\u6742\u6307\u4ee4\u7684\u65f6\u95f4\u957f\uff1f", "title_en": "Why does the 80486 take longer to execute simple instructions than complex ones?", "transed": 1, "url": "https://retrocomputing.stackexchange.com/questions/14876/why-does-the-80486-take-longer-to-execute-simple-instructions-than-complex-ones", "via": "", "real_tags": ["\u65f6\u95f4", "execute", "\u6307\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "652b8c15cf13f335f997e69b33487a61.jpg", "infoid": 1003248, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u4e3b\u8981\u5185\u5bb9Spotify\u672c\u5468\u5ba3\u5e03\uff0c\u4e54\u00b7\u7f57\u6839(Joe Rogan)\u6781\u4e3a\u6210\u529f\u7684\u8282\u76ee\u201c\u4e54\u00b7\u7f57\u6839\u4f53\u9a8c\u201d(The Joe Rogan Experience)\u5c06\u6210\u4e3aSpotify\u72ec\u5bb6\u8282\u76ee\u3002\u8fd9\u53ef\u80fd\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u4e00\u7b14\u64ad\u5ba2\u4ea4\u6613\u3002\u518d\u52a0\u4e0a\u8fc7\u53bb\u4e00\u5e74\u534a\u91cc\u5176\u4ed6\u64ad\u5ba2\u6536\u8d2d\u7684\u8f70\u52a8\u4e00\u65f6\u7684\u72c2\u6f6e\uff0c\u8be5\u516c\u53f8\u73b0\u5728\u5df2\u7ecf\u6210\u7acb\uff0c\u6210\u4e3a\u64ad\u5ba2\u9886\u57df\u7684\u6700\u5927\u54c1\u724c-\u5e76\u53ef\u80fd\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u63a7\u5236\u64ad\u5ba2\u3002\n\u4ece\u6765\u6ca1\u6709\u4e00\u5bb6\u64ad\u5ba2\u516c\u53f8\u9500\u552e\u5e7f\u544a\uff0c\u5236\u4f5c\u8282\u76ee\uff0c\u62e5\u6709\u5df2\u7ecf\u5f88\u53d7\u6b22\u8fce\u7684\u64ad\u5ba2\u64ad\u653e\u5668\uff0c\u5e76\u63d0\u4f9b\u5236\u4f5c\u65b0\u7cfb\u5217\u7684\u5de5\u5177\u3002Spotify\u73b0\u5728\u62e5\u6709\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u800c\u4e0e\u7f57\u6839\u7684\u4ea4\u6613\u610f\u5473\u7740\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u70ed\u95e8\u8282\u76ee\uff0c\u4fdd\u8bc1\u6570\u767e\u4e07\u4eba\u7ecf\u5e38\u4f7f\u7528\u5176\u5e73\u53f0\u6536\u542c\u64ad\u5ba2\u3002\n\u7136\u800c\uff0c\u8fd9\u7b14\u4ea4\u6613\u4e5f\u53ef\u80fd\u9884\u793a\u7740\u66f4\u5e7f\u6cdb\u7684\u64ad\u5ba2\u884c\u4e1a\u7684\u672a\u6765\uff0c\u5728\u8fd9\u4e2a\u884c\u4e1a\u4e2d\uff0c\u5c06\u53d1\u5c55\u4e24\u4e2a\u6d3e\u522b\uff1a\u4e00\u4e2a\u91cd\u89c6\u9690\u79c1\u548c\u5f00\u653e\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u53e6\u4e00\u4e2a\u662f\u5c01\u95ed\u7684\uff0c\u56f4\u7ed5\u88ab\u9501\u5b9a\u7684\u8282\u76ee\u548c\u5b9a\u5411\u5e7f\u544a\u5efa\u7acb\u8d77\u6765\uff0c\u6bd4\u5982Spotify\u3002\n\u53bb\u4ed6\u5988\u7684Spotify\uff0c\u53bb\u4ed6\u5988\u7684\u4efb\u4f55\u53ea\u80fd\u5728\u4e00\u6b3e\u5e94\u7528\u4e2d\u64ad\u653e\u7684\u201c\u64ad\u5ba2\u201d\u3002\n-Marco Arment(@marcoarment)2020\u5e745\u670819\u65e5\u3002\nSpotify\u53bb\u5e74\u901a\u8fc7\u4e09\u7b14\u5173\u952e\u6536\u8d2d\u8868\u8fbe\u4e86\u5176\u64ad\u5ba2\u96c4\u5fc3\u3002\u5b83\u6536\u8d2d\u4e86\u4e24\u4e2a\u64ad\u5ba2\u7f51\u7edc-Gimlet Media(\u4ee5\u56de\u590dAll\u800c\u95fb\u540d)\u548cParcast(\u4e00\u4e2a\u771f\u5b9e\u72af\u7f6a\u548c\u795e\u79d8\u7684\u7f51\u7edc)-\u52a0\u4e0a\u4e00\u5bb6\u540d\u4e3aAnchor\u7684\u516c\u53f8\uff0c\u63d0\u4f9b\u6613\u4e8e\u4f7f\u7528\u7684\u64ad\u5ba2\u521b\u5efa\u5de5\u5177\u3002\u636e\u62a5\u9053\uff0cSpotify\u603b\u5171\u4e3a\u8fd9\u4e09\u5bb6\u516c\u53f8\u82b1\u8d39\u4e86\u7ea64\u4ebf\u7f8e\u5143\u3002\n\u4eca\u5e74\uff0cSpotify\u7ee7\u7eed\u65a5\u5de8\u8d44\u6536\u8d2d\u4eba\u624d\u3002\u4eca\u5e742\u6708\uff0cSpotify\u6536\u8d2d\u4e86\u6797\u683c\u548c\u6bd4\u5c14\u00b7\u897f\u8499\u65af(The Ringer And Bill Simmons)\u7684\u65d7\u8230\u8282\u76ee\uff0c\u636e\u62a5\u9053\uff0c\u4ef7\u683c\u7ea6\u4e3a1.96\u4ebf\u7f8e\u5143\u3002\u73b0\u5728\u6709\u4e86\u7f57\u6839\u7684\u4ea4\u6613\uff0c\u636e\u62a5\u9053\uff0c\u8fd9\u7b14\u4ea4\u6613\u53ef\u80fd\u4f1a\u8ba9Spotify\u635f\u5931\u8d85\u8fc71\u4ebf\u7f8e\u5143\u3002\u8be5\u56e2\u961f\u82b1\u8d39\u4e86\u5927\u91cf\u8d44\u91d1\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e3a\u4e86\u9501\u5b9a\u4e00\u4e9b\u4e1a\u5185\u9876\u7ea7\u5185\u5bb9\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684\u7cfb\u5217-\u4ee5\u53ca\u5e7f\u544a-\u63d0\u4ea4\u7ed9Spotify\u3002\nSpotify\u5728\u64ad\u5ba2\u9886\u57df\u770b\u5230\u4e86\u5de8\u5927\u7684\u5546\u673a\u3002\u9996\u5148\uff0c\u6ca1\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u7ade\u4e89\u5bf9\u624b\u53ef\u4ee5\u5355\u72ec\u4e0e\u516c\u53f8\u7ade\u4e89\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u82f9\u679c\u662f\u64ad\u5ba2\u9886\u57df\u6700\u5927\u7684\u540d\u5b57\uff0c\u5b83\u57fa\u672c\u4e0a\u4e0d\u7ba1\u82f9\u679c\u64ad\u5ba2\uff0c\u8ba9\u542c\u4f17\u81ea\u7531\u6765\u53bb\uff0c\u5141\u8bb8\u521b\u4f5c\u8005\u4e0a\u4f20\u4ed6\u4eec\u7684RSS\u8ba2\u9605\u6e90\uff0c\u800c\u4e0d\u662f\u82f9\u679c\u8bd5\u56fe\u5165\u80a1\u3002\u82f9\u679c\u73b0\u5728\u4e0d\u505a\u8282\u76ee\uff0c\u4e5f\u4e0d\u5356\u5e7f\u544a\uff0c\u8fd9\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u4e0e\u5176\u4ee5\u9690\u79c1\u4e3a\u5bfc\u5411\u7684\u5730\u4f4d\u80cc\u9053\u800c\u9a70\u3002Spotify\u53ef\u4ee5\u62e5\u6709\u8fd9\u4e2a\u7a7a\u95f4\u3002\u5373\u4f7f\u82f9\u679c\u60f3\u8981\u7ade\u4e89\uff0c\u5b83\u73b0\u5728\u4e5f\u5fc5\u987b\u5bfb\u627e\u5176\u4ed6\u5927\u578b\u8282\u76ee\u6765\u6536\u8d2d\uff0c\u800cSpotify\u62e5\u6709\u5de8\u5927\u7684\u9886\u5148\u4f18\u52bf\u3002\n\u7136\u800c\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u64ad\u5ba2\u524d\u671f\u82b1\u8d39\u4e86Spotify\u4e00\u5927\u7b14\u94b1\uff0c\u4f46\u5728\u672a\u6765\u53ef\u80fd\u4f1a\u6709\u6240\u56de\u62a5\u3002\u6bcf\u5f53\u6709\u4eba\u5728\u5176\u5e73\u53f0\u4e0a\u64ad\u653e\u4e00\u9996\u6b4c\u66f2\u65f6\uff0c\u5b83\u5fc5\u987b\u5411\u5531\u7247\u516c\u53f8\u652f\u4ed8\u6536\u542c\u8d39\u7528\u3002\u4f46\u6709\u4e86\u64ad\u5ba2\uff0c\u8be5\u516c\u53f8\u5c31\u4e0d\u9700\u8981\u5411\u7b2c\u4e09\u65b9\u4ed8\u8d39\u4e86\u3002\u901a\u8fc7\u72ec\u5bb6\u4ea4\u6613\u548c\u81ea\u5df1\u7684\u8282\u76ee\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u4ece\u6bcf\u4e2a\u6536\u542c\u8282\u76ee\u4e2d\u8d5a\u94b1\u7684\uff0c\u56e0\u4e3a\u5b83\u6295\u653e\u4e86\u5e7f\u544a\u3002\u5373\u4f7f\u662f\u9ad8\u7ea7\u7528\u6237\u4e5f\u4f1a\u5728Spotify\u64ad\u5ba2\u4e2d\u542c\u5230\u5e7f\u544a\uff0c\u6240\u4ee5Spotify\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u6709\u6536\u5165\u7684\u53cc\u5e95\u8870\u9000\u3002\n\u64ad\u5ba2\u53ef\u80fd\u662f\u6709\u5229\u53ef\u56fe\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5373\u4f7f\u5b83\u82b1\u4e86\u6570\u4ebf\u7f8e\u5143\u4e3a\u5176\u5e73\u53f0\u8d2d\u4e70\u4eba\u624d\u548c\u5de5\u5177\uff0c\u5b83\u5f88\u53ef\u80fd\u4f1a\u6536\u56de\u8fd9\u7b14\u94b1\u3002\u53e6\u4e00\u5bb6\u64ad\u5ba2\u5e7f\u544a\u7f51\u7edcMidroll\u8868\u793a\uff0c\u5e7f\u544a\u5546\u53ef\u4ee5\u4e3a\u6bcf1000\u540d\u8282\u76ee\u542c\u4f17\u652f\u4ed818\u81f350\u7f8e\u5143\u4e0d\u7b49\u7684\u8d39\u7528\u3002\u4e54\u00b7\u7f57\u6839(Joe Rogan)\u8868\u793a\uff0c\u4ed6\u7684\u8282\u76ee\u6bcf\u6708\u4e0b\u8f7d\u91cf\u8fbe\u52301.9\u4ebf\u6b21\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u5728\u4f4e\u7aef\u5e02\u573a\u6bcf\u6708\u53ef\u4ee5\u5e26\u6765300\u4e07\u7f8e\u5143\u7684\u5e7f\u544a\u6536\u5165\u3002\u798f\u5e03\u65af\u8bf4\uff0c\u7f57\u6839\u53bb\u5e74\u8d5a\u4e863000\u4e07\u7f8e\u5143\u3002\n\u7f57\u6839\u7684\u8282\u76ee\u4ecd\u7136\u53ef\u4ee5\u5728Spotify\u4e0a\u514d\u8d39\u6536\u542c\uff1b\u4eba\u4eec\u4e0d\u9700\u8981\u4e3aSpotify Premium\u4ed8\u8d39\u6536\u542c\u6216\u89c2\u770b\u5b83\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u4f1a\u7528\u81ea\u5df1\u7684\u6570\u636e\u4ed8\u8d39\uff0c\u8fd9\u6709\u52a9\u4e8eSpotify\u9500\u552e\u66f4\u6709\u5229\u53ef\u56fe\u7684\u5e7f\u544a\u3002Spotify\u5c06\u8054\u5408\u9500\u552e\u7f57\u6839\u8282\u76ee\u7684\u5e7f\u544a\uff0c\u56e0\u6b64\u514d\u8d39\u7528\u6237\u5c06\u542c\u5230\u8fd9\u4e9b\u5e7f\u544a\uff0c\u4ee5\u53ca\u5728\u4f7f\u7528Spotify\u5e73\u53f0\u8fc7\u7a0b\u4e2d\u64ad\u653e\u7684\u4efb\u4f55\u989d\u5916\u5e7f\u544a\u3002Spotify\u4e0d\u9700\u8981\u6bcf\u4e2a\u4eba\u90fd\u8ba2\u9605\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\uff0cSpotify\u90fd\u80fd\u4ece\u4ed6\u4eec\u8eab\u4e0a\u8d5a\u94b1\u3002\n\u50cf\u7f57\u6839\u8fd9\u6837\u7684\u5927\u724c\u4eba\u7269\u53ef\u80fd\u4f1a\u628a\u4eba\u4eec\u5e26\u5230Spotify\uff0c\u4f46\u8ba9\u4ed6\u4eec\u7559\u5728\u90a3\u91cc\u7684\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u5c55\u89c8\u9986\u3002\u8fd9\u4e5f\u662fSpotify\u6218\u7565\u7684\u4e00\u90e8\u5206\uff1a\u63d0\u4f9b\u64ad\u5ba2\u521b\u4f5c\u5de5\u5177\uff0c\u4ee5\u4fbf\u5236\u4f5c\u66f4\u591a\u8282\u76ee\uff0c\u5e76\u586b\u5145\u5176\u76ee\u5f55\u3002Spotify\u8868\u793a\uff0c\u5b83\u73b0\u5728\u5217\u51fa\u4e86100\u591a\u4e07\u4e2a\u64ad\u5ba2\uff0c\u57282020\u5e74\u7b2c\u4e00\u5b63\u5ea6\uff0c70%\u7684\u8282\u76ee\u662f\u7528Anchor\u5236\u4f5c\u7684\u3002\n\u9664\u4e86\u6240\u6709\u8fd9\u4e9b\u6536\u8d2d\u548c\u4ea4\u6613\u4e4b\u5916\uff0cSpotify\u8fd8\u521b\u9020\u4e86\u7528\u4e8e\u751f\u6210\u64ad\u653e\u5217\u8868\u548c\u63d2\u5165\u5e7f\u544a\u7684\u65b0\u6280\u672f\u3002\u5b83\u901a\u8fc7\u7b97\u6cd5\u751f\u6210\u64ad\u5ba2\u64ad\u653e\u5217\u8868\uff0c\u5e76\u63a8\u51fa\u4e86\u81ea\u5df1\u7684\u5e7f\u544a\u5de5\u5177-\u6d41\u5e7f\u544a\u63d2\u5165(Streaming Ad Insertion)\uff0c\u8be5\u5de5\u5177\u5141\u8bb8\u5728\u4eba\u4eec\u6d41\u5f0f\u64ad\u653e\u65f6\u5c06\u6709\u9488\u5bf9\u6027\u7684\u5e7f\u544a\u653e\u5165\u8282\u76ee\u4e2d\uff0c\u8fd9\u518d\u6b21\u4f9d\u8d56\u4e8e\u5173\u952e\u7684\u7528\u6237\u6570\u636e\u3002\u5b83\u5728\u5e94\u7528\u5185\u63a8\u51fa\u4e86\u89c6\u9891\u64ad\u5ba2\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cdYouTube\u7684\u4e00\u4e9b\u53d7\u6b22\u8fce\u7684\u64ad\u5ba2\u8f6c\u5411\u5176\u5e73\u53f0-\u5982\u679c\u4e0d\u662f\u72ec\u5bb6\u7684\uff0c\u81f3\u5c11\u662f\u4ea4\u53c9\u53d1\u5e03\uff0c\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584Spotify\u7684\u670d\u52a1\u3002\n\u6240\u6709\u8fd9\u4e9b\u4e3e\u63aa\u90fd\u53ef\u4ee5\u8ba9Spotify\u4ece\u5934\u5230\u5c3e\u63a7\u5236\u6574\u4e2a\u64ad\u5ba2\u8fc7\u7a0b\u3002\u64ad\u5ba2\u53ef\u4ee5\u4f7f\u7528Spotify\u5de5\u5177\u5236\u4f5c\u8282\u76ee\uff0c\u5e76\u8f7b\u677e\u53d1\u5e03\u5230Spotify\u7684\u5e73\u53f0\u4e0a\u3002Spotify\u6700\u7ec8\u53ef\u80fd\u4f1a\u51fa\u552e\u8fd9\u4e9b\u8282\u76ee\u7684\u5e7f\u544a\uff0c\u90a3\u4e9b\u53ef\u80fd\u5df2\u7ecf\u4ee5\u8ba2\u9605\u7684\u5f62\u5f0f\u5411\u516c\u53f8\u652f\u4ed8\u8d39\u7528\u7684\u542c\u4f17\u4e5f\u4f1a\u63d0\u4f9b\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4e3aSpotify\u7684\u5e7f\u544a\u5b9a\u5411\u548c\u8d2d\u4e70\u51b3\u7b56\u63d0\u4f9b\u4e86\u4f9d\u636e\u3002\n\u5b83\u8fd8\u51c6\u5907\u6210\u4e3a\u64ad\u5ba2\u98ce\u5c1a\u7684\u5f15\u9886\u8005\uff0c\u7531\u4e16\u754c\u5404\u5730\u7684\u7b56\u5c55\u4eba\u7ec4\u7ec7\u63a8\u8350\u64ad\u653e\u5217\u8868\uff1b\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u5b83\u5411\u6570\u767e\u4e07\u7528\u6237\u63a8\u5e7f\u81ea\u5df1\u7684\u8282\u76ee\u3002\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u6ca1\u6709\u7f57\u6839\u7684\u8282\u76ee\u90a3\u4e48\u5927\u7684\u8282\u76ee\uff0cSpotify\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4eea\u8868\u76d8\u6765\u67e5\u770b\u5b83\u4eec\u7684\u5206\u6790\uff0c\u5e76\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u89c2\u4f17\u7684\u4eba\u53e3\u7edf\u8ba1\u4fe1\u606f\uff0c\u8fd9\u6709\u52a9\u4e8e\u5b83\u4eec\u9500\u552e\u81ea\u5df1\u7684\u5e7f\u544a\u3002\u521b\u4f5c\u8005\u53ef\u80fd\u4f1a\u53d7\u5230\u6fc0\u52b1\uff0c\u9f13\u52b1\u4ed6\u4eec\u7684\u542c\u4f17\u5728Spotify\u4e0a\u6d88\u8d39\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u66f4\u591a\u5730\u4e86\u89e3\u4ed6\u4eec\u7684\u89c2\u4f17\u3002\n\u6ca1\u6709\u5176\u4ed6\u516c\u53f8\u7684\u8fd0\u8425\u89c4\u6a21\u548c\u521b\u65b0\u901f\u5ea6\u5982\u6b64\u4e4b\u5feb\u3002\u82f9\u679c\u62e5\u6709\u8fd9\u4e2a\u5e73\u53f0\uff0c\u662fiOS\u4ea7\u54c1\u7684\u9ed8\u8ba4\u73a9\u5bb6\uff0c\u4f46\u5b83\u8fd8\u6ca1\u6709\u83b7\u5f97\u8282\u76ee\u6216\u9500\u552e\u5e7f\u544a\u3002NPR\u5236\u4f5c\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u8282\u76ee\uff0c\u4f46\u5b83\u6ca1\u6709\u5e7f\u53d7\u6b22\u8fce\u7684\u64ad\u653e\u5668\u3002\u5c31Spotify\u800c\u8a00\uff0c\u4ec5\u7ecf\u8fc7\u4e00\u5e74\u534a\u7684\u52aa\u529b\uff0c\u8be5\u884c\u4e1a\u73b0\u5728\u5c31\u5fc5\u987b\u4e0e\u8fc4\u4eca\u6700\u5177\u5a01\u80c1\u6027\u7684\u7ade\u4e89\u5bf9\u624b\u6297\u8861\u3002\n\u8fd9\u4e00\u5207\u90fd\u5f15\u51fa\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\uff0c\u5373Spotify\u7684\u6240\u6709\u51b3\u5b9a\u5c06\u5982\u4f55\u5f71\u54cd\u66f4\u5e7f\u6cdb\u7684\u64ad\u5ba2\u884c\u4e1a\u3002Spotify\u5bf9\u6570\u636e\u7684\u5b8c\u5168\u63a7\u5236\u548c\u5bf9\u5e7f\u544a\u5b9a\u5411\u7684\u63a8\u52a8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4e16\u754c\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u64ad\u5ba2\u5e7f\u544a\u66f4\u7c7b\u4f3c\u4e8e\u7f51\u7edc\u5e7f\u544a\uff0c\u56e0\u4e3a\u5b83\u4eec\u9488\u5bf9\u7684\u662f\u4e2a\u4eba\u542c\u4f17\u3002\u8fd9\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\u53ef\u80fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u53e6\u4e00\u4e9b\u4eba\u5df2\u7ecf\u8868\u8fbe\u4e86\u5bf9\u9690\u79c1\u5f71\u54cd\u7684\u62c5\u5fe7\u3002\u4f8b\u5982\uff0c\u6536\u542c\u64ad\u5ba2\u7684\u6570\u636e\u6bd4\u97f3\u4e50\u66f4\u654f\u611f\uff0c\u56e0\u4e3a\u4eba\u4eec\u6536\u542c\u5173\u4e8e\u6f5c\u5728\u8bf4\u660e\u95ee\u9898\u7684\u5229\u57fa\u8282\u76ee\u3002\u6b64\u5916\uff0c\u4eba\u4eec\u53ef\u80fd\u6700\u7ec8\u4e0d\u5f97\u4e0d\u4f7f\u7528\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u6536\u542c\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u8282\u76ee\uff0c\u5176\u4e2d\u4e4b\u4e00\uff0c\u5fc5\u7136\u662fSpotify\u3002\n\u5c31\u50cf\u6211\u4eec\u5728\u66f4\u5e7f\u6cdb\u7684\u7f51\u7edc\u4e0a\u770b\u5230\u7684\u4eba\u4eec\u6839\u636e\u4ed6\u4eec\u7684\u9690\u79c1\u6765\u51b3\u5b9a\u4ed6\u4eec\u5728\u54ea\u91cc\u6d4f\u89c8\u6216\u4f7f\u7528\u4ec0\u4e48\u7535\u5b50\u90ae\u4ef6\u6216\u6d88\u606f\u670d\u52a1\u4e00\u6837\uff0c\u64ad\u5ba2\u4e5f\u53ef\u80fd\u4f1a\u53d1\u751f\u540c\u6837\u7684\u4e8b\u60c5\u3002\u64ad\u5ba2\u66fe\u7ecf\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u662f\u5e73\u7b49\u7684\uff0c\u4f46\u73b0\u5728\u4f3c\u4e4e\u5c06\u4f1a\u6709\u4e24\u4e2a\u64ad\u5ba2\u4e16\u754c\uff1aSpotify\u548c\u5176\u4ed6\u6240\u6709\u4eba\u3002", "note_en": "Skip to main content                                                                                                                In what\u2019s likely the biggest deal ever for a single podcast, Spotify  announced this week that Joe Rogan\u2019s enormously successful show,  The Joe Rogan Experience, will become a Spotify-exclusive. Combined with a blockbuster spree of other podcast acquisitions over the last year and a half, the company is now set up to become the biggest name in podcasting \u2014 and to possibly control podcasting in an unprecedented way.\n There\u2019s never been a single podcasting company that sells ads, makes shows, has an already-popular podcast player, and offers the tools to make new series. Spotify now has all of that, and the Rogan deal means it also offers a hit show that guarantees millions of people will regularly use its platform for podcast listening.\n The deal also, however, might foreshadow a future for the broader podcasting industry in which two sects develop: one that values privacy and an open ecosystem and another that\u2019s closed-off and built around locked-down shows and targeted ads, like Spotify.\n Fuck Spotify, and fuck any \u201cpodcast\u201d that\u2019s only playable in one app.\n\u2014 Marco Arment (@marcoarment)  May 19, 2020\n Spotify made its podcasting ambitions known last year with three key acquisitions. It  bought two podcast networks \u2014 Gimlet Media (known for  Reply All) and  Parcast (a true-crime and mystery network) \u2014 plus a company called Anchor that offers easy-to-use podcast creation tools. All together, Spotify reportedly spent around $400 million for the three companies combined.\n This year, Spotify continued to spend big on talent acquisitions. In February, Spotify  acquired  The Ringer and Bill Simmons\u2019 flagship show, reportedly for around $196 million. And now there\u2019s Rogan\u2019s deal, which could reportedly cost Spotify more than $100 million. The team spent a lot of money all in an effort to lock down some of the industry\u2019s top content and commit their series \u2014 and ads \u2014 to Spotify.\n Spotify sees a massive business opportunity around podcasts. For one, no single competitor can take the company on by itself. Apple, the biggest name in podcasting up until now, has mostly left Apple Podcasts alone, letting listeners freely come and go and allowing creators to upload their RSS feeds, without Apple trying to take a stake in them. Apple doesn\u2019t make shows  right now, and it also doesn\u2019t sell ads, which would go against its privacy-oriented position anyway. Spotify can own this space. Even if Apple wanted to compete, it now would have to find other big shows to acquire, and Spotify has a huge head start.\n  Even more importantly, though, these podcasts cost Spotify a lot of money up front but could pay off in the future. Whenever someone streams a song on its platform, it has to pay the record label for that listen. But with podcasts, the company doesn\u2019t have to pay a third party. With exclusive deals and its own programming, it\u2019s actually  making money off each listen because of the ads it places. Even premium users hear ads in Spotify podcasts, so Spotify double-dips with revenue in those cases.\n Podcasts could be lucrative, which is why even though it spent hundreds of millions of dollars on acquiring talent and tools for its platform, it\u2019ll likely recoup that money. Midroll, another podcast ad network,  says advertisers can pay anywhere from $18 to $50 per 1,000 listeners that a show reaches. Joe Rogan says his show reaches 190 million downloads per month, meaning he could, on the low end, bring in $3 million in ads per month.  Forbes  says Rogan made $30 million last year.\n Rogan\u2019s show will still be free to listen to on Spotify; people won\u2019t need to pay for Spotify Premium to hear or watch it, although they will pay with their data, which helps Spotify sell more lucrative ads. Spotify will jointly sell the ads for Rogan\u2019s show, so free users will hear those ads, plus any additional ads that run in the course of using Spotify\u2019s platform. Spotify doesn\u2019t need everyone to subscribe because it makes money off them either way.\n  Big names, like Rogan, might bring people to Spotify, but it\u2019s a large show library that keeps them there. That\u2019s also been part of Spotify\u2019s strategy: offering podcast creation tools so more shows are made, and they pad its catalog. Spotify  says it now lists more than a million podcasts, and during the first quarter of 2020, 70 percent of shows were created with Anchor.\n On top of all these acquisitions and deals, Spotify has also created new tech for generating playlists and inserting ads. It  algorithmically generates podcast playlists and has launched its own advertising tool called  Streaming Ad Insertion that lets targeted ads be placed into shows as people stream them, which, again, relies on that critical user data. It  launched video podcasts in-app, which might sway some of YouTube\u2019s popular podcasters over to its platform \u2014 if not exclusively, at least to cross-publish, to further round out Spotify\u2019s offerings.\n All of these moves allow Spotify to control the entire podcasting process from start to finish. Podcasters can make shows with Spotify tools and publish easily to Spotify\u2019s platform. Spotify could eventually sell ads for those shows, and listeners who might already give the company money in the form of a subscription also offer up their data, which informs Spotify\u2019s ad-targeting and purchase decisions.\n   It\u2019s also setting itself up to become a podcast tastemaker with curators around the world  organizing recommendation playlists; this could help it promote its own shows to its millions of users. For the vast majority of shows that aren\u2019t as big as Rogan\u2019s, Spotify  offers a dashboard to view their analytics and learn more about their audience\u2019s demographics, which helps them sell their own ads. Creators might be incentivized to encourage their listeners to consume on Spotify because they\u2019ll learn more about their audience.\n No other company is operating at this scale and with innovation this quick in the space. Apple has the platform and is the default player for iOS products, but it hasn\u2019t acquired shows or sold ads. NPR makes incredible shows, but it doesn\u2019t have a massively popular player. After only a year and a half of effort on Spotify\u2019s part, the industry now has to contend with its most threatening competitor yet.\n This all leads to the bigger question of how all of Spotify\u2019s decisions will affect the broader podcasting industry. Spotify\u2019s complete control over data and its push for ad targeting might lead to a world in which podcast ads more closely resemble web ads in that they\u2019re targeted to individual listeners. That might be okay with some people, but others have already expressed concerns over the privacy implications. Listening data for podcasts is more sensitive than music, for example, because people listen to niche shows about potentially telling topics. Plus, people might end up having to use multiple apps to hear their favorite shows, and one of those, by necessity, might be Spotify.\n Just as we\u2019ve seen people on the broader web make decisions about where they browse or what email or messaging service they use based on their privacy, the same thing might happen with podcasting. Podcasting was once equal across all platforms, but it now seems like there will be two podcast worlds: Spotify versus everybody else.", "posttime": "2020-05-22 16:24:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64ad\u5ba2,\u4e16\u754c,world,spotify", "title": "\u64ad\u5ba2\u4e16\u754c\u73b0\u5728\u662fSpotify\u800c\u4e0d\u662f\u5176\u4ed6\u4efb\u4f55\u4eba", "title_en": "The Podcasting World Is Now Spotify versus Everybody Else", "transed": 1, "url": "https://www.theverge.com/21265005/spotify-joe-rogan-experience-podcast-deal-apple-gimlet-media-ringer", "via": "", "real_tags": ["\u64ad\u5ba2", "\u4e16\u754c", "world", "spotify"]}, {"category": "", "categoryclass": "", "imagename": "4eece4cf7f10be4be571a43e8c8340c4.jpg", "infoid": 1003247, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6838\u6843\u6eaa\u3002(KGO)--\u6838\u6843\u6eaa\u7ea6\u7ff0\u00b7\u7f2a\u5c14\u533b\u7597\u4e2d\u5fc3\u7684\u533b\u751f\u8bf4\uff0c\u5728\u8fd9\u6bb5\u9694\u79bb\u671f\u5185\uff0c\u4ed6\u4eec\u770b\u5230\u7684\u81ea\u6740\u6b7b\u4ea1\u4eba\u6570\u8d85\u8fc7\u4e86\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u4eba\u6570\u3002\u89c2\u770b\uff1a\u4f60\u7684\u5fc3\u7406\u5065\u5eb7\uff1a\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u5bf9\u8bdd\uff0c\u865a\u62df\u5e02\u653f\u5385\u8c08\u8bba\u51a0\u72b6\u75c5\u6bd2\u5bf9\u7cbe\u795e\u5065\u5eb7\u7684\u5f71\u54cd\u521b\u4f24\u90e8\u95e8\u7684\u8d1f\u8d23\u4eba\u8ba4\u4e3a\u7cbe\u795e\u5065\u5eb7\u6b63\u906d\u53d7\u5982\u6b64\u4e25\u91cd\u7684\u6298\u78e8\uff0c\u662f\u65f6\u5019\u7ed3\u675f\u539f\u5730\u907f\u96be\u4ee4\u4e86\u3002\u8fc8\u514b\u00b7\u5fb7\u535a\u4f0a\u65af\u5e03\u5170\u514b\u535a\u58eb\u8bf4\uff1a\u201c\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u73b0\u5728\u662f\u65f6\u5019\u4e86\u3002\u201d\u4ed6\u8bf4\uff1a\u6211\u8ba4\u4e3a\uff0c\u6700\u521d\u8bbe\u7acb\u8fd9\u4e2a(\u5c31\u5730\u907f\u96be\u6240\u547d\u4ee4)\u662f\u4e3a\u4e86\u62c9\u5e73\u66f2\u7ebf\uff0c\u786e\u4fdd\u533b\u9662\u6709\u8d44\u6e90\u7167\u987eCOVID\u60a3\u8005\u3002\u6211\u4eec\u76ee\u524d\u6709\u8d44\u6e90\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u6211\u4eec\u7684\u5176\u4ed6\u793e\u533a\u536b\u751f\u6b63\u53d7\u5230\u5f71\u54cd\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u6570\u5b57\u662f\u53f2\u65e0\u524d\u4f8b\u7684\u3002\u4ed6\u8bf4\uff1a\u5728\u8fd9\u4e48\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u6211\u4eec\u4ece\u672a\u89c1\u8fc7\u8fd9\u6837\u7684\u6570\u5b57\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5728\u8fc7\u53bb\u7684\u56db\u5468\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u76ee\u7779\u4e86\u76f8\u5f53\u4e8e\u4e00\u5e74\u7684\u81ea\u6740\u672a\u9042\u4e8b\u4ef6\u3002\u51ef\u897f\u00b7\u6c49\u68ee\u5df2\u7ecf\u5728\u6838\u6843\u6eaa\u7684\u7ea6\u7ff0\u00b7\u7f2a\u5c14\u533b\u7597\u4e2d\u5fc3\u5f53\u4e86\u5c06\u8fd133\u5e74\u7684\u521b\u4f24\u62a4\u58eb\u3002\u5979\u5f88\u62c5\u5fc3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4ec5\u770b\u5230\u4e86\u66f4\u591a\u7684\u81ea\u6740\u4f01\u56fe\uff0c\u5979\u8bf4\u4ed6\u4eec\u65e0\u6cd5\u50cf\u5f80\u5e38\u4e00\u6837\u62ef\u6551\u90a3\u4e48\u591a\u7684\u75c5\u4eba\u3002\u76f8\u5173\uff1a\u5728\u5fc3\u7406\u5065\u5eb7\u95ee\u9898\u4e0a\u5bfb\u6c42\u5e2e\u52a9\uff0c\u6c49\u68ee\u8bf4\uff0c\u6211\u6700\u8fd1\u770b\u5230\u7684\u662f\u6211\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u3002\u6211\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u5982\u6b64\u591a\u7684\u6545\u610f\u4f24\u5bb3\u3002\u521b\u4f24\u56e2\u961f\u4e4b\u6240\u4ee5\u7ad9\u51fa\u6765\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u5e0c\u671b\u793e\u533a\u80fd\u591f\u610f\u8bc6\u5230\uff0c\u8ba9\u4eba\u4eec\u4f38\u51fa\u63f4\u624b\uff0c\u76f8\u4e92\u652f\u6301\uff0c\u8ba9\u90a3\u4e9b\u906d\u53d7\u75db\u82e6\u7684\u4eba\u77e5\u9053\u4ed6\u4eec\u53ef\u4ee5\u5f97\u5230\u5e2e\u52a9\u3002John Muir Health\u5468\u56db\u665a\u4e9b\u65f6\u5019\u5411ABC7\u53d1\u8868\u4e86\u4e00\u4efd\u58f0\u660e\uff0c\u79f0\u8be5\u7ec4\u7ec7\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u652f\u6301\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u5c31\u5730\u907f\u96be\u6240\u79e9\u5e8f\u3002John Muir Health\u4e00\u76f4\u5e76\u5c06\u7ee7\u7eed\u652f\u6301Contra Costa\u53bf\u536b\u751f\u670d\u52a1\u90e8\u95e8\u4e3a\u9632\u6b62\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u800c\u5b9e\u65bd\u7684\u201c\u5c31\u5730\u907f\u96be\u6240\u4ee4\u201d\u3002\u6211\u4eec\u610f\u8bc6\u5230\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u6709\u8bb8\u591a\u610f\u89c1\uff0c\u5305\u62ec\u5728\u6211\u4eec\u7684\u533b\u52a1\u4eba\u5458\u5185\u90e8\uff0cJohn Muir Health\u9f13\u52b1\u6211\u4eec\u7684\u533b\u751f\u548c\u5de5\u4f5c\u4eba\u5458\u5efa\u8bbe\u6027\u5730\u53c2\u4e0e\u8fd9\u4e9b\u8ba8\u8bba\u3002\u65e0\u8bba\u662f\u51a0\u72b6\u75c5\u6bd2\u3001\u7cbe\u795e\u5065\u5eb7\u3001\u84c4\u610f\u66b4\u529b\u6216\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u4eec\u90fd\u540c\u6837\u5173\u6ce8\u6211\u4eec\u793e\u4f1a\u7684\u5065\u5eb7\u3002\u6211\u4eec\u7ee7\u7eed\u4e0e\u6211\u4eec\u7684\u884c\u4e3a\u5065\u5eb7\u4e2d\u5fc3\u3001\u53bf\u5065\u5eb7\u548c\u793e\u533a\u7ec4\u7ec7\u79ef\u6781\u5408\u4f5c\uff0c\u63d0\u9ad8\u4eba\u4eec\u5bf9\u7cbe\u795e\u5065\u5eb7\u95ee\u9898\u7684\u8ba4\u8bc6\uff0c\u5e76\u4e3a\u4efb\u4f55\u6709\u9700\u8981\u7684\u4eba\u63d0\u4f9b\u8d44\u6e90\u3002\u5982\u679c\u60a8\u8eab\u5904\u5371\u673a\uff0c\u9700\u8981\u7acb\u5373\u5e2e\u52a9\uff0c\u8bf7\u7acb\u5373\u62e8\u6253\u7535\u8bdd\u6216\u53d1\u77ed\u4fe1\u81f320121\u3002\u6211\u4eec\u90fd\u662f\u540c\u821f\u5171\u6d4e\u7684\u4eba\uff0c\u8bf7\u793e\u4f1a\u5404\u754c\u5728\u8fd9\u4e2a\u5145\u6ee1\u6311\u6218\u7684\u65f6\u523b\uff0c\u5411\u4efb\u4f55\u4f60\u8ba4\u4e3a\u53ef\u80fd\u9700\u8981\u5e2e\u52a9\u7684\u4eba\u4f38\u51fa\u63f4\u624b\u3002\u8c22\u8c22\u3002\u5eb7\u7279\u62c9\u00b7\u79d1\u65af\u5854\u53bf\u5371\u673a\u4e2d\u5fc3\u6709\u8f85\u5bfc\u5458\u53ef\u4ee5\u4e00\u5468\u4e03\u5929\u3001\u6bcf\u592924\u5c0f\u65f6\u63a5\u542c\u4ed6\u4eec\u7684\u70ed\u7ebf\u7535\u8bdd\u3002\u8fd9\u6b21\u901a\u8bdd\u662f\u514d\u8d39\u7684\uff0c\u800c\u4e14\u662f\u4fdd\u5bc6\u7684\u3002\u8fd9\u4f4d\u6267\u884c\u8463\u4e8b\u8868\u793a\uff0c\u62e8\u62531-800-273-Talk\u53ef\u4ee5\u4ea7\u751f\u5de8\u5927\u7684\u4e0d\u540c\u3002\u6267\u884c\u8463\u4e8b\u6c64\u59c6\u00b7\u7530\u6751(Tom Tamura)\u8bf4\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u7edd\u5927\u591a\u6570\u4eba\u8868\u793a\uff0c\u5728\u6253\u7535\u8bdd\u5e76\u83b7\u5f97\u6240\u9700\u7684\u8d44\u6e90\u540e\uff0c\u4ed6\u4eec\u611f\u89c9\u597d\u591a\u4e86\u3002\u6709\u4e86\u5e2e\u52a9\uff0c\u5c31\u6709\u4e86\u5e0c\u671b\u3002\u6211\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u8054\u7cfb\u5230\u4e00\u4e9b\u4eba\u548c\u7ec4\u7ec7\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4e3a\u4f60\u63d0\u4f9b\u4f60\u9700\u8981\u7684\u4fe1\u606f\u548c\u8d44\u6e90\uff0c\u5e2e\u52a9\u4f60\u5ea6\u8fc7\u8fd9\u6bb5\u8270\u96be\u7684\u65f6\u671f\u3002\u4ed6\u8bf4\uff0c\u6253\u5230\u4ed6\u4eec\u70ed\u7ebf\u7684\u7535\u8bdd\u6709\u6240\u589e\u52a0\uff0c\u4f46\u4e0d\u662f\u5f88\u660e\u663e\u3002\u4ed6\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u4eba\u4eec\u6ca1\u6709\u770b\u5230\u4ed6\u4eec\u901a\u5e38\u7684\u652f\u6301\u7f51\u7edc\u3002\u8fd9\u5c31\u662f\u6253\u7535\u8bdd\u7684\u9f13\u52b1\u4e4b\u5904\u3002\u72ec\u5bb6\u62a5\u9053\uff1a\u7f57\u5bbe\u00b7\u5a01\u5ec9\u59c6\u65af(Robin Williams)\u4e4b\u5b50\u624e\u514b(Zak)\u655e\u5f00\u5fc3\u6249\uff0c\u8bb2\u8ff0\u4e86\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u7684\u5ba3\u4f20\u5de5\u4f5c\u3002\u6211\u8ba4\u4e3a\u4eba\u4eec\u53d1\u73b0\u81ea\u5df1\u4e0e\u4ed6\u4eec\u62e5\u6709\u7684\u6b63\u5e38\u652f\u6301\u7f51\u7edc\u8131\u8282\uff0c\u6559\u5802\u3001\u5b66\u6821\u548c\u8bfb\u4e66\u4f1a\uff0c\u968f\u4fbf\u4f60\u80fd\u8bf4\u51fa\u4ec0\u4e48\uff0c\u7530\u6751\u8bf4\u3002\u518d\u52a0\u4e0a\u4e00\u4e9b\u54a8\u8be2\u670d\u52a1\u7684\u5173\u95ed\uff0c\u4eba\u4eec\u53ef\u80fd\u53d7\u5230\u4e86\u4e9b\u8bb8\u51b2\u51fb\u3002\u4ed6\u4eec\u8bd5\u56fe\u5b89\u7136\u5ea6\u8fc7\u8fd9\u573a\u98ce\u66b4\uff0c\u4f46\u968f\u7740\u8fd9\u79cd\u5b64\u7acb\u7684\u52a0\u5267\uff0c\u4eba\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u8fd9\u4e0d\u662f\u4e00\u573a\u77ed\u8dd1\uff0c\u800c\u662f\u4e00\u573a\u9a6c\u62c9\u677e\u3002\u4ed6\u8bf4\uff0c\u5bf9\u6211\u4eec\u6240\u6709\u4eba\u6765\u8bf4\uff0c\u5411\u4eba\u4eec\u4f38\u51fa\u63f4\u624b\u3001\u5efa\u7acb\u8054\u7cfb\u662f\u5f88\u91cd\u8981\u7684\u3002\u6c49\u68ee\u8bf4\uff0c\u5982\u679c\u9762\u5bf9\u9762\u7684\u4f1a\u8bae\u6709\u52a9\u4e8e\u5fc3\u7406\u5065\u5eb7\uff0c\u90a3\u5c31\u66f4\u597d\u4e86\u3002\u5979\u8bf4\uff0c\u516d\u82f1\u5c3a\u5916\uff0c\u6234\u4e0a\u53e3\u7f69\uff0c\u6d17\u624b\u8fdb\u53bb\uff0c\u4e0d\u8981\u89e6\u6478\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4eba\u4eec\u5b89\u5168\u5730\u4fdd\u6301\u793e\u4ea4\u8ddd\u79bb\u3002\u6c49\u68ee\u8bf4\uff0c\u5173\u6ce8\u7cbe\u795e\u5065\u5eb7\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5bf9\u5427\uff0c\u4ed6\u4eec\u6253\u7b97\u6b7b\u53bb\uff0c\u6c49\u68ee\u8bf4\u3002\u6709\u65f6\uff0c\u4eba\u4eec\u4f1a\u505a\u51fa\u6211\u4eec\u6240\u8bf4\u7684\u624b\u52bf\u3002\u8fd9\u662f\u4e00\u79cd\u547c\u6551\u3002\u6211\u4eec\u73b0\u5728\u770b\u5230\u7684\u60c5\u51b5\u4e0e\u6b64\u7565\u6709\u4e0d\u540c\u3002\u8fd9\u4ee4\u4eba\u5fc3\u70e6\u610f\u4e71\u3002\u6c49\u68ee\u548c\u5fb7\u535a\u4f0a\u65af\u5e03\u5170\u514b\u8bf4\uff0c\u4ed6\u4eec\u770b\u5230\u5927\u90e8\u5206\u5e74\u8f7b\u4eba\u6b7b\u4e8e\u81ea\u6740\u3002\u4ed6\u4eec\u62c5\u5fc3\u9694\u79bb\u548c\u5931\u4e1a\u4f1a\u5e26\u6765\u7684\u538b\u529b\uff0c\u56e0\u4e3a\u9694\u79bb\u8fd8\u5728\u7ee7\u7eed\u3002\u5982\u679c\u60a8\u6216\u60a8\u8ba4\u8bc6\u7684\u4eba\u9700\u8981\u5e2e\u52a9\uff0c\u8bf7\u62e8\u62531", "note_en": "WALNUT CREEK, Calif. (KGO) -- Doctors at John Muir Medical Center in Walnut Creek say they have seen more deaths by suicide during this quarantine period than deaths from the  COVID-19 virus.   WATCH:  &#39;Your Mental Health: A Bay Area Conversation,&#39; virtual town hall addressing COVID-19 impact on mental health  The head of the trauma in the department believes mental health is suffering so much, it is time to end the shelter-in-place order.   &#34;Personally I think it&#39;s time,&#34; said Dr. Mike deBoisblanc. &#34;I think, originally, this (the shelter-in-place order) was put in place to flatten the curve and to make sure hospitals have the resources to take care of COVID patients.We have the current resources to do that and our other community health is suffering.&#34;  The numbers are unprecedented, he said.  &#34;We&#39;ve never seen numbers like this, in such a short period of time,&#34; he said. &#34;I mean we&#39;ve seen a year&#39;s worth of suicide attempts in the last four weeks.&#34;  Kacey Hansen has worked as a trauma nurse at John Muir Medical Center in Walnut Creek for almost 33 years. She is worried because not only are they seeing more suicide attempts, she says they are not able to save as many patients as usual.   RELATED:  Get help with mental health issues  &#34;What I have seen recently, I have never seen before,&#34; Hansen said. &#34;I have never seen so much intentional injury.&#34;  The trauma team is speaking out because they want the community to be aware, for people to reach out and support each other and for those who are suffering to know they can get help.  John Muir Health provided a statement to ABC7 late Thursday, saying the organization as a whole is supportive of the shelter-in-place order in the Bay Area.   &#34;John Muir Health has been, and continues to be, supportive of the Shelter-in-Place order put in place by Contra Costa County Health Services to prevent the spread of COVID-19. We realize there are a number of opinions on this topic, including within our medical staff, and John Muir Health encourages our physicians and staff to participate constructively in these discussions. We all share a concern for the health of our community whether that is COVID-19, mental health, intentional violence or other issues. We continue to actively work with our Behavioral Health Center, County Health and community organizations to increase awareness of mental health issues and provide resources to anyone in need. If you are in a crisis and need help immediately, please call 211 or 800-833-2900 or text &#39;HOPE&#39; to 20121 now. We are all in this together, and ask the community to please reach out to anyone who you think might be in need during this challenging time. Thank you.&#34;  The Contra Costa County Crisis Center has counselors available to answer their hotline 24 hours a day, seven days a week. The call is free and confidential.  The executive director says a call to the 1-800-273-TALK can make a huge difference.   &#34;Generally speaking the vast majority of people say they feel better after they call and get the resources they need,&#34; said Executive Director Tom Tamura. &#34;With help comes hope. I think that there are people and organizations out there that you can contact that can get you the information you need and resources you need to get you through this tough time.&#34;  He said calls to their hotline are up, but not dramatically.  He thinks that could be because people aren&#39;t seeing their usual network of support. That is where the encouragement to make a phone call can come from.   EXCLUSIVE:  Robin Williams&#39; son, Zak, opens up about mental health struggles, advocacy work amid COVID-19 pandemic  &#34;I think people have found themselves disconnected from the normal supportive networks that they have, churches and schools and book clubs, you name it,&#34; Tamura said. &#34;And that, coupled with the closure of some counseling services, people were maybe in a little bit of shock.They were trying to weather the storm a bit but as that isolation has grown people have come to realize this isn&#39;t a sprint it is marathon.&#34;  He says it&#39;s important for all of us to be reaching out to people and making connections.  Hansen says in-person meetings are even OK if it will help mental health.  &#34;Six feet away, wear a mask, wash your hands going in, don&#39;t touch, you can see people socially distancing safely,&#34; she said.   Hansen says a focus on mental health is very important right &#34;They intend to die,&#34; Hansen said. &#34;Sometimes, people will make what we call a &#39;gesture&#39;. It&#39;s a cry for help.We&#39;re just seeing something a little different than that right now. It&#39;s upsetting.&#34;  Hansen and deBoisblanc say they are seeing mostly young adults die by suicide.They are worried about the stress that isolation and job loss can bring as this quarantine continues.  If you or someone you know needs help, call 1-800-273-TALK. Or if you can&#39;t remember that number, 211 can get you to the resource you need.   RELATED:  Coronavirus Doctor&#39;s Note: Shining a light on mental illness  The shelter-in-place order is currently set to expire at 11:59 p.m. on May 31.  Contra Costa Health Services released a statement in response to the trauma team at John Muir Medical Center.   &#34;We strongly encourage everyone in distress to seek help from mental health professionals and local resources such as 211 (the Crisis Center),&#34; the statement read. &#34;We understand that this is a very difficult time for many people and it can feel very isolating to practice social distancing. We want to stress that the shelter-in-place order is saving lives at the same time. It&#39;s not uncommon for medical professionals can have differing opinions on courses of treatment for many health issues. The Shelter-in-Place order is no different. We will continue to look to the science of our identified indicators as we determine how best to move forward.&#34;    RELATED STORIES &amp; VIDEOS:", "posttime": "2020-05-22 15:56:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e7\u91d1\u5c71,\u6e7e\u533a,\u4e13\u4e1a\u4eba\u58eb,rise,\u4eba\u4eec", "title": "\u65e7\u91d1\u5c71\u6e7e\u533a\u533b\u7597\u4e13\u4e1a\u4eba\u58eb\u8868\u793a\uff0c\u5728\u5728\u5bb6\u5de5\u4f5c\u7684\u8ba2\u5355\u4e2d\uff0c\u81ea\u6740\u4eba\u6570\u4e0d\u65ad\u4e0a\u5347", "title_en": "Suicides on the rise amid stay-at-home order, Bay Area medical professionals say", "transed": 1, "url": "https://abc7news.com/suicide-covid-19-coronavirus-rates-during-pandemic-death-by/6201962/", "via": "", "real_tags": ["\u65e7\u91d1\u5c71", "\u6e7e\u533a", "\u4e13\u4e1a\u4eba\u58eb", "rise", "\u4eba\u4eec"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003246, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f8b\u5982\uff1a\u6a31\u6843\u8c37\u57ce\u9645\u7275\u5f15\u516c\u53f8\u603b\u88c1\u7f57\u7eb3\u5fb7\u00b7\u8d1d\u5c14(A)\u548c\u7231\u8d1d\u5c14\u5973\u513f\u7684\u5e74\u8f7b\u4eba\u7f57\u4f2f\u7279\u00b7\u970d\u5229(B)\u5c31\u540e\u8005\u7684\u897f\u88c5\u53d1\u751f\u4e86\u6fc0\u70c8\u7684\u4e89\u6267\uff0c\u5e76\u6012\u6c14\u51b2\u51b2\u5730\u5206\u624b\u4e86(28)\u3002\u8d1d\u5c14\u627e\u5230\u5728\u516c\u53f8\u529e\u516c\u5ba4\u5de5\u4f5c\u7684\u5973\u513f\u5a1c\u5854\u8389(C)\uff0c\u547d\u4ee4\u628a\u5979\u7684\u8c6a\u534e\u8f7f\u8f66\u4ece\u5979\u8eab\u8fb9\u5e26\u8d70\uff0c\u547d\u4ee4\u5979(29)\u6bcf\u5929\u4e0b\u73ed\u6b65\u884c\u56de\u5bb6\uff0c\u8fd9\u8f86\u8f66\u5c06\u8f7d\u5979\u6cbf\u7740\u7275\u5f15\u7ebf\uff0c\u7a7f\u8fc7\u7ea2\u5ca9\u96a7\u9053\u3002\u970d\u8389\u51fa\u53bb\u9f13\u52a8\u7f62\u5de5\uff0c\u572830\u5c81\u65f6\u5f00\u59cb\u7f62\u5de5\u3002(\u7f62\u5de5\uff0c\u4f5c\u4e3a\u4e00\u79cd\u53ef\u7ec8\u6b62\u7684\u3001\u53ef\u521b\u9020\u7684\u3001\u53ef\u504f\u79bb\u7684\u548c\u504f\u79bb\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u8d77\u5230\u60c5\u8282\u4e3b\u7ebf\u7684\u4f5c\u7528\u3002\u5973\u5b69(C)\u6b65\u884c\u56de\u5bb6\uff0c\u7a7f\u8fc7\u4e00\u6761\u53c8\u77ed\u53c8\u9ed1\u7684\u96a7\u9053\uff0c\u5c31\u5728\u4e00\u8f86\u91cd\u578b\u57ce\u9645\u6c7d\u8f66\u5411\u5979\u903c\u8fd1\u7684\u65f6\u5019\uff0c\u5979\u7684\u811a\u88ab\u96a7\u9053\u91cc\u7684\u4e00\u53ea\u9752\u86d9\u5361\u4f4f\u4e86\uff1b\u7531\u4e8e\u7f62\u5de5(\u53d1\u7535\u5382\u7a81\u7136\u505c\u7535)\uff0c\u5979\u4ece\u6b7b\u4ea1\u4e2d\u5e78\u514d\u4e8e\u96be\u3002[(a.)\u3002\u6545\u4e8b\u3001\u65b0\u95fb\u6545\u4e8b\u3001\u5927\u6c14\u77ed\u7bc7\u5c0f\u8bf4\u6216\u201c\u671d\u5723\u8005\u7684\u8fdb\u6b65\u201d\u60c5\u8282\u3002]\u3002\u5927\u591a\u6570\u6545\u4e8b\u3001\u65b0\u95fb\u6545\u4e8b\u4ee5\u53ca\u5927\u6c14\u77ed\u7bc7\u5c0f\u8bf4\u90fd\u662f\u8fd9\u79cd\u7ed3\u6784\uff0c\u5b83\u4eec\u4ec5\u4ec5\u8bb2\u8ff0\u4e86\u4e24\u4e2a\u91cd\u5927\u4e8b\u4ef6\u4e4b\u95f4\u53d1\u751f\u7684\u5404\u79cd\u4e8b\u4ef6\uff1b\u56e0\u6b64\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u201c\u671d\u5723\u8005\u7684\u8fdb\u6b65\u201d\uff0c\u5728\u8fd9\u90e8\u5c0f\u8bf4\u4e2d\uff0c\u4e3b\u89d2\u514b\u91cc\u65af\u8482\u5b89(A)\u89e3\u51b3\u4e86\u4e00\u4e2a\u53c8\u4e00\u4e2a\u95ee\u9898\uff0c\u4f46\u9664\u4e86\u6309\u65f6\u95f4\u987a\u5e8f\u5916\uff0c\u5b83\u4eec\u4e0e\u5176\u4ed6\u4efb\u4f55\u95ee\u9898\u90fd\u6ca1\u6709\u4efb\u4f55\u7279\u6b8a\u7684\u5173\u7cfb\u3002\u5728\u4e0d\u5f71\u54cd\u6574\u4f53\u7684\u8fde\u8d2f\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7701\u7565\u4e00\u4e2a\u6216\u51e0\u4e2a\u3002\u4f8b\u5982\uff0c\u514b\u91cc\u65af\u8482\u5b89\u4e0e\u201c\u5de8\u4eba\u7edd\u671b\u201d(B)\u7684\u906d\u9047\u4e1d\u6beb\u4e0d\u5f71\u54cd\u4ed6\u4e0e\u201c\u7edd\u671b\u6cbc\u6cfd\u201d\u7684\u6597\u4e89\u3002\u6216\u8005\uff0c\u6bcf\u4e00\u4e2a\u7684\u987a\u5e8f\u751a\u81f3\u53ef\u4ee5\u98a0\u5012\u3002[(b.)\u3002\u5192\u9669\u6545\u4e8b\u7b49]\u3002\u6848\u4f8b\u5341\u4e09-b\u51fa\u73b0\u5728\u8bb8\u591a\u5b9d\u5c9b\u7cfb\u5217\u548c\u5bfb\u5b9d\u6545\u4e8b\uff0c\u4ee5\u53ca\u5404\u79cd\u5192\u9669\u6545\u4e8b\u4e2d\u3002\u5bfb\u5b9d\u53cc\u65b9(A\u548cB)\u4e4b\u95f4\u7684\u5404\u79cd\u906d\u9047(28\uff0c29\uff0c30\uff0c31\uff0c32)\uff0c\u5148\u662f\u5c16\u9510\u5730\u5c06\u5929\u5e73\u629b\u7ed9\u4e86\u4e00\u4e2a\u4eba\uff0c\u7136\u540e\u53c8\u8ba9\u53e6\u4e00\u4e2a\u4eba\u4fdd\u6301\u4e86\u9605\u8bfb\u80fd\u529b\u3002\u6211\u7279\u522b\u8bb0\u5f97A\u00b7E\u00b7\u4e01\u683c\u5c14\u8239\u957f\u7684\u201c\u6d77\u76d7\u5973\u4eba\u201d\uff0c\u8fd9\u672c\u4e66\u7b2c\u4e00\u6b21\u51fa\u73b0\u5728\u201c\u5965\u6208\u65af\u201d\u4e2d\uff0c\u6211\u4e70\u4e86\u5b83\u7684\u7b2c\u4e8c\u4e2a\u7248\u6743\u3002\u5bf9\u4e8e\u6211\u7f16\u8f91\u7684\u4e00\u672c\u6742\u5fd7\u6765\u8bf4\uff0c\u5927\u4f53\u4e0a\u662f\u8fd9\u6837\u6784\u5efa\u7684\uff1a\u5728\u67d0\u4e2a\u5c9b\u5c7f\u4e0a\u7684\u8bb8\u591a\u76f8\u9047\u53ef\u4ee5\u88ab\u7701\u7565\uff0c\u6216\u8005\u5e0c\u671b\u6d53\u7f29\u6545\u4e8b\u7684\u7f16\u8f91\u53ef\u4ee5\u7701\u7565\u4e00\u6761\u7ebf\u7d22\u7684\u51e0\u4e2a\u7247\u6bb5\uff0c\u800c\u53e6\u4e00\u6761\u7ebf\u7d22\u7684\u76f8\u5e94\u62bd\u6410(\u89c1\u56fe)\uff0c\u5c06\u7834\u788e\u7684\u90e8\u5206\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u672c\u53ef\u4ee5\u662f\u4e00\u90e8\u4e2d\u7bc7\u5c0f\u8bf4\uff0c\u800c\u4e0d\u662f\u4e00\u672c\u5c0f\u8bf4\u3002(\u7816\u6392\u60c5\u8282\uff0c\u7ecf\u5e38\u51fa\u73b0\u5728\u77ed\u7bc7\u5c0f\u8bf4\u4e2d\u3002)\u3002\u524d\u9762\u7684\u7b2c\u4e8c\u4e2a\u56fe(\u56fe19)\u5c06\u663e\u793a\u6b64\u6a21\u5f0f\uff0c\u4f46\u793a\u4f8b\u5fc5\u987b\u4e0d\u540c\uff0c\u4f8b\u5982\uff1a\u4f8b\u5982\uff1a\u6d41\u6d6a\u6c49\u7535\u6c14\u7ebf\u5de5David Lauriston(A)\u5728\u4e00\u4e2a\u540d\u4e3aTippingdale\u7684\u94a2\u94c1\u5c0f\u9547\u9047\u5230\u4e86\u5973\u5b69Myene Cary(B)\uff0c\u5e76\u53d7\u5230\u6fc0\u52b1\uff0c\u5728\u5de5\u5934\u5f17\u683c\u68ee(C)\u7684\u5e26\u9886\u4e0b\u7533\u8bf7\u4e86\u4e00\u4efd\u94a2\u94c1\u5382\u7684\u5de5\u4f5c\uff0c\u5f17\u683c\u68ee\u6d3e\u4ed6\u53bb\u505a\u4e00\u9879\u5371\u9669\u7684\u9ad8\u538b\u5de5\u4f5c\uff0c\u6d89\u53ca22000\u4f0f\u7535\u538b\uff0c\u8fd8\u6709\u4e00\u4e2a\u6076\u68cd\u52a9\u624bRed McMcCary(B)\uff0c\u4ed6\u88ab\u6d3e\u5f80\u94a2\u94c1\u5382\u7533\u8bf7\u4e00\u4efd\u5de5\u4f5c\uff0c\u9886\u73ed\u5f17\u683c\u68ee(C)\u6d3e\u4ed6\u53bb\u505a\u4e00\u9879\u5371\u9669\u7684\u9ad8\u538b\u5de5\u4f5c\uff0c\u6d89\u53ca22000\u4f0f\u7535\u538b\uff0c\u8fd8\u6709\u4e00\u4e2a\u6076\u68cd\u5e2e\u624bRed McMc.\u3002(D)\u9700\u8981\u4ed6\u9996\u5148\u6307\u793a\u7535\u529b\u64cd\u4f5c\u5458\u8001\u5c71\u59c6\u00b7\u97e6\u4f2f(E)\u4fdd\u6301\u67d0\u4e00\u9ad8\u538b\u7535\u8def\u6253\u5f00\u3002\u7531\u4e8e\u4e0d\u786e\u5b9a\u97e6\u4f2f\u7684\u53ef\u9760\u6027\uff0c\u4ed6\u53bb\u627e\u4eba\u5bff\u4fdd\u9669\u4ee3\u7406\u4eba\u80e1\u514b(F)\uff0c\u80e1\u514b\u626b\u63cf\u4e86\u4ed6\u7684\u4eba\u5bff\u4fdd\u9669\u7533\u8bf7\uff0c\u7136\u540e\u7ed9\u4e86\u52b3\u91cc\u65af\u987f\u4e00\u7b14\u5c0f\u8d39\uff0c\u8fd9\u7b14\u5c0f\u8d39\u4f1a\u628a\u5c0f\u8d39\u53d1\u7ed9\u4ed6\u5931\u6563\u5df2\u4e45\u7684\u7236\u4eb2\u8521\u65af\u00b7\u52b3\u91cc\u65af\u987f(Chase Lauriston\uff0cG)(\u56fe\u4e2d\u6ca1\u6709\u663e\u793a)\u3002\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5c31\u50cf\u4e00\u6392\u5012\u7f6e\u7684\u7816\u5757\uff0c\u4e00\u5757\u7816\u5411\u524d\u503e\u5012\u65f6\uff0c\u53e6\u4e00\u5757\u7816\u4e5f\u4f1a\u5411\u524d\u503e\u5012\uff0c\u4ece\u800c\u4e00\u76f4\u5012\u5230\u5c3d\u5934\u3002\u8bb8\u8bb8\u591a\u591a\u7684\u77ed\u7bc7\u5c0f\u8bf4--\u751a\u81f30\u3002\u4ea8\u5229\u90fd\u5c5e\u4e8e\u8fd9\u79cd\u7ed3\u6784\uff0c\u867d\u7136\u662f0\u3002\u4ea8\u5229\u4e5f\u4f7f\u7528\u4e86\u56db\u8fb9\u5f62\u3002(Scheherzade\u60c5\u8282\uff0c\u6216\u4f2a\u7f51\u3002)\u3002\u6848\u4f8b\u5341\u4e94\u7684\u4e3b\u8981\u4f8b\u5b50\u662f\u201c\u5929\u65b9\u591c\u8c2d\u201d\uff0c\u5728\u201c\u5929\u65b9\u591c\u8c2d\u201d\u4e2d\uff0cScheherzade(A)\u591c\u4ee5\u7ee7\u65e5\u5730\u65cb\u8f6c\u7740\u4e00\u4e2a\u65b0\u7684\u5173\u7cfb\u96c6\u5408\u4f53\uff0c\u65e0\u8bba\u5b83\u4eec\u770b\u8d77\u6765\u591a\u4e48\u50cf\u4e00\u5f20\u7f51\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u79cd\u6811\u72b6\u7684\u961f\u5f62\uff0c\u6709\u6811\u5e72\u3001\u6811\u679d\u548c\u6811\u679d\u3002\u5b83\u662f\u8fd9\u6837\u505a\u7684\uff0c\u4ee5\u81f3\u4e8e\u63d0\u4f9b\u4e86\u6570\u767e\u4e2a\u7b80\u5355\u7684\u6545\u4e8b-\u771f\u6b63\u7684\u6545\u4e8b-\u5c3d\u7ba1\u771f\u6b63\u7684\u6545\u4e8b\u4e00\u76f4\u90fd\u662f\u8c22\u8d6b\u624e\u5fb7(A)\u81ea\u5df1\u7684\u6545\u4e8b\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u60c5\u8282\u7ec4\u5408\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u5c31\u50cf\u5728\u751f\u7269\u5b66\u9886\u57df\u4e00\u6837\uff0c\u5b58\u5728\u7740\u8fd9\u4e9b\u8fd0\u52a8\u548c\u7a81\u53d8\uff0c\u4ee5\u53ca\u65b0\u7684\u5143\u7d20\u7ec4\u5408\u672c\u8eab\uff0c\u8fd9\u4e9b\u7ec4\u5408\u8fd8\u6ca1\u6709\u8bde\u751f\u3002\u7136\u800c\uff0c\u6211\u73b0\u5728\u60f3\u8981\u505a\u7684\u662f\u5411\u4f60\u4eec\u5c55\u793a\u5927\u91cf\u7684\u8fd9\u4e9b\u57fa\u672c\u7684\u7ec4\u5408\u6df7\u5408\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u7f51\u7edc\u5267\u60c5\uff0c\u8bb2\u8ff0\u8c01\u7684\u6545\u4e8b\u548c\u5b8c\u6574\u5730\u5448\u73b0\u8c01\u7684\u5173\u7cfb\u9700\u8981104,000\u5b57\u3002\u4e5f\u8bb8\uff0c\u6700\u4ee4\u4eba\u611f\u5174\u8da3\u7684\u662f\uff0c\u8fd9\u4e2a\u7f51\u7edc\u662f\u5982\u4f55\u5f00\u59cb\u7684\uff0c\u4ee5\u53ca\u5176\u4ed6\u540c\u6837\u5927\u5927\u5c0f\u5c0f\u7684\u7f51\u7edc\u662f\u5982\u4f55\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5f00\u59cb\u7684\u3002\u5728\u672c\u7cfb\u5217\u7684\u4e0b\u4e00\u671f\u4e2d\uff0c\u57fa\u52d2\u5148\u751f\u5c06\u89e6\u53ca\u4e3b\u9898\u7684\u6838\u5fc3\u3002\u4ed6\u7684\u4e00\u4f4d\u516c\u4f17\u4eba\u7269", "note_en": "Example: Ronald Baer (A), president of the Cherry Valley Interurban Traction Company and Robert Holly (B), a young man who loves Baer&#39;s daughter, have a stormy argument about the latter&#39;s suit and break up in a rage (28). Baer goes to his daughter, Natalie (C), who works in the office of the company, and ordering her limousine taken away from her, commands her (29) to walk home each day from work, which will carry her along the traction line and through the Red Rock Tunnel. Holly goes out and agitates for a strike, bringing it under way at 30. (A strike, being a terminable, creatable, deviatable and deviating thing, can function as a plot thread. The girl (C) walking home, and going through the short dark tunnel, gets her foot caught in a frog inside of the tunnel just as a heavy interurban car is bearing down on her; and is saved from death (31) by the strike (sudden cessation of electricity from powerhouse).    [ (a.) The tale, news story, atmospheric short-story, or &#34;Pilgrim\u2019s Progress&#34; plot.]      Most tales, also news stories, as well as atmospheric short-stories, which merely narrate the various incidents occurring between two vital incidents, are of this structure; so, also, may be said to be &#34;Pilgrim&#39;s Progress,&#34; in which Christian (A), the central character, solves one problem after another, but none has any particular relation toward any other except chronological. One or several could be omitted without detracting from the coherence of the whole. For instance, Christian&#39;s encounter (28) with the Giant Despair (B) does not in the least bear upon his struggle (29) with the Slough of Despond. Or, also, the order of each could even be reversed.    [ (b.) Adventure stories, etc.]      Case XIII-b is found in many treasure island serials and treasure-hunting stories, and adventure stories of all sorts. The various encounters (28, 29, 30, 31, 32) between the two parties (A and B) hunting the treasure throw the balance acutely first to one, and then to the other, keeping the reader &#34;set up.&#34; I particularly remember that &#34;The Pirate Woman,&#34; by Captain A. E. Dingle, which appeared first in  The Argosy, and of which I bought &#34;second rights&#34; for a magazine I edited, was thus constructed in the main: many of the encounters on a certain island could have been left out, or an editor wishing to condense the story could have dropped out several segments of the one thread and corresponding convulutions of the other thread (see diagram) and, joining together the broken parts, could have had a novelette instead of a novel.  (The Row-of-Bricks plot, frequently found in short-stories.)     The second previous figure, Figure 19, will show this pattern, but the example must be different, for instance:  Example: A tramp electrical lineman, David Lauriston (A), meets a girl, Myrene Cary (B), in a small steel town called Tippingdale, and is actuated to apply for a job in the steel mills, under a foreman Ferguson (C), who dispatches him out on a dangerous high-tension job involving 22,000 volts, with a villain helper, Red McAfee. (D), necessitating his first instructing a power operator, old Sam Webb (E), to keep a certain high-tension circuit open. Because of not being sure of Webb&#39;s reliability, he goes to a life insurance agent, Hooker (F), who, scanning his application for life insurance, is enabled to drop Lauriston a tip that sends the latter to his long-lost father, Chase Lauriston (G) (not shown in diagram).  You will note that the incidents are like a row of up-ended bricks, where one brick, in toppling forward, topples the next one forward, and thus through to the end. Many, many short-stories\u2014even 0. Henry&#39;s\u2014are of this structure; although 0. Henry also used the quadrangular polygon as well.    (The Scheherezade plot, or pseudo-web.)      The chief example of Case XV is &#34;The Arabian Nights&#34; where Scheherezade (A) spins, night after night, a new conglomeration of relationships which, however much they seem to resemble a web, are merely a sort of tree-like formation, with trunks, branches, and twigs.  It is so done as to provide hundreds of simple stories\u2014really tales\u2014although the real story all the time is that of Scheherezade (A) herself.  NOW we are done with these elemental plot combinations. No doubt, as in the field of biology, there are sports and mutations of these, as well as new elemental combinations themselves which have never yet been born. What I want to do now, however, is to show you a huge number of these elemental combinations blended together into a single web-work plot, the telling of whose story and the full presentation of whose relationships demanded 104,000 words. And what will be of most interest, perhaps, is how this web was started and how other webs, likewise, both small and large, may be started in a similar manner.  In the next installment of this series, Mr. Keeler reaches the heart of his subject. One of his popular mystery novels, published both in America and abroad, &#34;The Voice of the Seven Sparrows,&#34; will be diagrammed and analyzed. The method by which it was built up will be shown step by step.\n    A TRUE web-work plot consists of a plot structure in which many or all of the 15, Elemental Plot Combinations described in part III appear combined and recombined one with the other and all, of course, in the same narrative.  On pages 18 and 19 of this issue of THE AUTHOR &amp; JOURNALIST appears  a complete diagram or graph of the mystery novel &#34;The Voice of the Seven Sparrows&#34; (by Harry Stephen Keeler) which appeared serially on both sides of the Atlantic and likewise as a book on both sides, being issued by Hutchinson and Company of London and E. P. Dutton and Co., of New York.  Our diagram, as seen in the black numbered spots (the unnumbered crossings of threads do not count; they are merely due to our having to use a sheet of paper to represent characters moving three-dimensionally) emphasizes that the novel contains 80 markedly deviative incidents which change the destiny or course of one or all of the participants therein, either immediately or subsequently.  We also find that the novel contains 34 plot threads\u2014some active, some passive\u2014of which 18 figure in the plot both antecendent to the opening of the actual narrative, as published, and the course of the narrative itself 7 appear only in the antecendent conditions; and 9 appear only in that portion of the plot which develops after the story has opened.  It will be seen (by the typewritten scale at the top of the graph) that the plot structure lying back (to the left) of the opening of the story (39) covers 500 years from the incident (1) which serves as an opening gun for the creation of the plot. It will likewise be noted that once the story opens (39) it requires from then to the close (80) exactly 4 days 15 1/2 hours.  It might be of interest also to note that one plot thread consisting of two steel garden spades (entering 17 from 14, and thence into 18) is carried from 18 to 35 as an idea only, which at 35 is transmogrified by one of the villains into a symbol or deuce of spades; indeed, into a great number of such!  It may be noted from the graph alone that several incidents\u2014notably No. 17, a wreck on the Pacific\u2014deviates 5 vital characters into 5 channels, different from those they were already in. presenting thus a quintuple variation of Elemental Plot Combination No. X.  Just as one plot thread was, for part of its course, an idea, so does another plot thread consist of a purely abstract conception, namely the Chinese game of Yeng-San, which, changing the destiny of humans and itself being changed and affected by outside factors (i. e. being banned by the Chinese government) constitutes a thoroughly conventional plot thread.  It will also be noted that the heavy black line represents not only the &#34;viewpoint character,&#34; Absalom Smith, the hero, but the story itself. The events are viewed through his eyes, and the reader as a rule has no cognizance of what has taken place elsewhere until Absalom Smith, in some certain incident, learns of it.  In the key to the graph (in small type below) the opening incident of the narrative, number 39, is given the bold-face letter A to indicate that it is the first to be brought under the reader&#39;s scrutiny. The incidents thereafter, as they actually take place before the eyes of the reader, are in turn lettered B, C, D, etc. The unlettered incidents lie outside of the viewpoint character&#39;s progress, and are brought to his (and the reader&#39;s) attention only indirectly, through the mouths of others, or by direct abortive lapses from viewpoint.  The chart does not show at what exact point in the story a character becomes aware of an old incident in the plot; that is, while I can show how in actual time Beatrice Mannerby&#39;s creation of the spurious Ng Yat newspaper story (30) occurs two months prior to the opening of the narrative, I cannot show how Absalom Smith, the hero, learns of her little bit of feminine ingenuity only almost at the end of the narrative, i. e. in incident 75, where Beatrice, now technically under arrest, tells what she did. But I will endeavor later to give a principle or two covering this ever-present problem of story presentation.    BEFORE going briefly into the specific matter of how all web-works are started, including this one, it might be well to preface such a question with a few remarks as to the philosophy and general methods of such composition.  In the first place, why a web-work anyway?  Is not the following explanation of it wholly acceptable? Aside from normal interest in dramatic happenings, is it not true that in every human being is a longing\u2014an instinctive hunger\u2014to believe that life, in its great complexity and utter meaningless involvements,  does move in a regulated manner; that it is not all incoherent, all mixed up and utterly without pattern, but that the whole thing is mathematically accurate in its causes and effects? We see it proved frequently in small limited relationships and we often call such proof &#34;poetic justice.&#34;  But on the large stage represented by years, oceans, continents, and infinite numbers of reactions between people, the thing is not so susceptible of proof.  Life, on the larger scale, though full of effects which are the direct results of causes, is apparently plotless. It is too complex. There has never yet appeared in life a causal relationship involving even 80 incidents and 34 strands that can be as unified as one artificially created. And it is this artificial relationship, this purely fictional web-work plot, this bit of fife twisted into a pattern mathematically and geometrically true, that fills the gaps in one&#39;s spirit which rebels at the looseness of life as it apparently is.  &#34; Should one aim for plot or for story?&#34; I give you this answer: The author should imagine himself as possessing, so to speak, a near-sighted eye and a far-sighted eye. The near-sighted eye should watch the developments being built into the story and concentrate on its job, for this is the story which the reader is going to follow before the curtain begins to lift and show him the web-work plot back of it all. But all the time the far-sighted eye must be watching two things: First, will the developments in the story help to weave a more structurally satisfying plot? Second, will the plot as thus far built help to provide interesting developments (in the story) for the nearsighted eye to concentrate upon?  Naturally a change in story may necessitate a change in plot, or vice versa; with every change, some distortion of the whole structure may take place. The web-work at times literally seems to quiver like a sea of jelly. Every tap of the hammer makes a dozen changes necessary. But gradually as both the story and plot develop together, it becomes more and more stable, till finally it is  as near perfect as it can be made.  The story intrigues the editor, but the plot sells it to him.    THERE is, sticking forth in every webwork plot, the crumbling relic of a preliminary structure that to the technician marks the initial simple structure\u2014or move\u2014from which the entire plot was created. And sometimes, too, this structure is so admirably preserved that the terrible seesawings and agonies of the plot-maker have not destroyed its pristine beauty and classic lines !  This brings us to a statement of a mental process which eleven years ago was first enunciated by this writer and was named by the publisher of THE AUTHOR &amp; JOURNALIST &#34;The Keeler Law.&#34; It was then stated in a form calculated by this writer to give it mathematical definiteness (and a headache to the non-mathematical) and because I am still hoping for some royalties from Mr. Emerson, owner of Bromo-Selzer, I will re-state it as it was stated in 1916. It ran, as I phrased it:    Because already I am beginning to feel shaky about the possibility of receiving those Bromo-Selzer royalties, or even a free bottle, I will re-state this &#34;law&#34; today, after eleven years, as the following simple rule:    In 1922 Arthur Sullivant Hoffman, in his &#34;Fundamentals of Fiction Writing,&#34; attacked the above stated law as &#34;the last word in formula.&#34; It is more than possible, of course, that Mr. Hoffman misconstrued the statement of the law as supposedly declaring that a plot must definitely be built in that way, rather than  that the mind must follow that formula only in initiating the plot. If he did not thus misconstrue it, my chief defense to his allegation that &#34;this is the last word in formula&#34; is that it has brought many thousands of dollars into my till; many books and magazine serials out under my name; and many hundreds of newspaper reviews in papers in America, the British Isles, New, Zealand, Australia, British India and South Africa. As editor for many years of a magazine devoted to adventure stories\u2014and  Adventure was one of the most successful and profitable magazines ever issued, as well as one showing that a popular magazine may attain a real dignity\u2014Mr. Hoffman has been confronted with plots that are prolongations of Elemental Cases II, III, XIIIa and XIIIb, and XIV, varied by entanglements here and there with one or another combination. Whereas the law I have stated refers to web-works. And if he will tell me how one may create a set of complicated yet correllated dramatic relationships without deriving them from an initial set already created, I will be glad to learn of it. If he can make of me furthermore sufficiently a gambler in a literary sense that I will work out a number of initial incidents in the optimistic hope that the rest of my plot will provide the entire compulsion for these incidents, he can invest me with a great deal of courage which I do not have: for when it comes to time and energy, I want\u2014and so do you, I believe\u2014in case invention fails and balks, as it so frequently does, to have the structure on which all else hangs sound in itself, able to stand on its own feet, depending on nothing and nobody for its compulsion.  But let us get down to examples. You may, as time goes on, watch all stories. For the present, the closest story at hand is the one that has been graphed and to which there is a printed key on page 18.    IF you will note carefully, Absalom Smith. the hero, is brought successively and quite early in the narration, into an encounter with six or seven other characters of some importance in the structure. Each of the first incidents brings him into relation with a new (to the reader) character. In No. 39 he receives a $1000 offer, subject to certain provisions, from  Snell, City Editor of the Argus; in No. 40, he visits  Monte van Tine, a young clubman; in No. 41 he has an encounter with  &#34;Sam Barker,&#34; his enemy, on the steps of the Argus, in which he foolishly drops a hint that he has an inside tip to things. In No. 42, he calls on  Ambrose Smith, his brother, to try to get a loan to reach New Orleans and follow his tip; in No. 43,  his father gives him everything he has in the world to reach New Orleans; in 44 he calls on  Albert Wick, an acquaintance, to make certain arrangements about his mail. In No. 45 he receives a (supposed)  photograph of Beatrice Mannerby whom he is trying to locate. Thus, one after another, his path has been made (by the author) to cross the paths of a number of very actively functioning factors in the plot, and also a few which proved (for the author) to be nearly &#34;duds.&#34; Yet had the author not made these crossings, he would not have had even the nucleus of this web. And the philosophy of these early crossings is\u2014or should be\u2014obvious. It is necessary (in initiating the plot) that the viewpoint character make a number of rapid crossings with other characters or threads, so that they may be gotten into the network\u2014so that the author may begin to weave! Just so sure as the strands are kept down by not sufficient crossings in the beginning, there is nothing to weave with\u2014or else the web-work will be no more complex than the pigtail down a little Dutch girl&#39;s back. In this story (the serial form) the narration opens in the first paragraph establishing Absalom Smith&#39;s point of view. In the next six hours, seven incidents involving him take place, each introducing a different character or object. Thus and thus only is thrown into existence a set of strands by which the weaving of that which is to lie ahead of the story is to take place, and also that which is to follow. I was many years discovering this fact, but only a few days in discovering the philosophy of it. I have found that unless one deliberately projects a number of characters in quick succession into a story, one will flounder helplessly in trying to build up a web-work.  It should be emphasized here, however, and before we proceed a step further, that in the final manuscript, as completed by the author, the narrative may not necessarily open at the point where this preliminary invention or row-of-bricks &#34;trial plot&#34; was begun, even if this original row-of-bricks structure has remained unchanged, as so frequently happens. The opening curtain may ultimately be placed back of all this, or it may be placed midway in it, in which case some of the incidents in this row-of-bricks plot will lie in the &#34;conditions precedent.&#34;  But we will later clarify all these points of a highly important principle, by actual demonstration.    Why, someone asks, must each incident in this preliminary half dozen be a direct resultant of the previous incident? That is because at this point there is no fully developed set of incidents back of the &#34;weaving board&#34; (the opening of the story) from which any of these early incidents may be derived by the process of invention; nor is there any later plot either. It is, in fact, from this early &#34;invention&#34; that all else is woven, to the left, to the right. Therefore it must stand on its own feet, since it supports the webwork, not the webwork it; and since it may prove impossible to derive any of its incidents from the portion of the plot that covers &#34;conditions precedent.&#34;  In &#34;The Voice of the Seven Sparrows,&#34; tracing up this causation and comparing it with certain crude notes and diagrams on pieces of manilla paper still in the author&#39;s possession, it appears that only two incidents were re-derived: that is, the original plot notes show that the young newspaperman gets the offer (39) ; to try and make a loan, he goes to his friend, the young clubman who gives him the tip and the story of how he was doublecrossed in lieu of a loan (40) ; therefore he goes to the villain to have it out (41) ; having in his anger dropped a tip to the villain he goes reluctantly to his successful and sarcastic brother to make the lo\n......", "posttime": "2020-05-22 15:56:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60c5\u8282,kinematics", "title": "\u7f51\u7edc\u60c5\u8282\u6784\u5efa\u7684\u529b\u5b66(\u548c\u8fd0\u52a8\u5b66)(1927\u5e74)", "title_en": "The Mechanics (and Kinematics) of Web-Work Plot Construction (1927)", "transed": 1, "url": "http://spinelessbooks.com/keeler/mechanics/index.html", "via": "", "real_tags": ["\u60c5\u8282"]}, {"category": "", "categoryclass": "", "imagename": "3ab961c60726e4c087cf73b74e878830.jpg", "infoid": 1003245, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JAMStack(Javascript\uff0cAPI and Markup Stack)\u662f\u4e00\u4e2a\u56f4\u7ed5\u5236\u4f5cWeb\u9879\u76ee\u7684\u65b0\u65b9\u5f0f\u7684\u672f\u8bed\uff0c\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u60a8\u4e0d\u5fc5\u6258\u7ba1\u81ea\u5df1\u7684\u540e\u7aef\u6765\u6784\u5efa\u7ad9\u70b9\uff0c\u800c\u662f\u5728\u6784\u5efa\u65f6\u5448\u73b0\u4e00\u7ec4\u9759\u6001\u9875\u9762\uff0c\u5e76\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc(CDN)\u3002\u8fd9\u610f\u5473\u7740\u66f4\u597d\u7684\u5b89\u5168\u6027\u3001\u66f4\u9ad8\u7684\u53ef\u6269\u5c55\u6027\u548c\u66f4\u597d\u7684\u7f51\u7ad9\u6027\u80fd\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Nuxt.js\u6784\u5efa\u4e00\u4e2aJAMStack\u591a\u8bed\u8a00\u535a\u5ba2\uff0cNuxt.js\u662f\u4e00\u4e2a\u5f3a\u5927\u7684Vue\u6846\u67b6\uff0c\u652f\u6301SPA\u3001SSR\u548c\u9759\u6001\u751f\u6210\u7684\u6e32\u67d3\uff0c\u4e0eStrapi Headless CMS\u4e00\u8d77\u5b58\u50a8\u6570\u636e\u5e76\u516c\u5f00\u5b83\u4eec\u4ee5\u751f\u6210\u9759\u6001\u535a\u5ba2\u3002\u8981\u5728\u672c\u5730\u8bbe\u7f6eSTRIPI\uff0c\u60a8\u53ef\u4ee5\u9075\u5faa\u672c\u6307\u5357\uff0c\u5426\u5219\u60a8\u53ef\u4ee5\u4f7f\u7528\u5728\u6211\u4eec\u7684\u670d\u52a1\u5668https://strapi.lotrek.net/.\u4e0a\u8fd0\u884c\u7684\u53ea\u8bfb\u5b9e\u4f8b\u3002\n\u4f7f\u7528Strapi\uff0c\u6211\u6784\u5efa\u4e86\u4e00\u4e2a\u6734\u7d20\u7684\u7ed3\u6784\u6765\u652f\u6301\u7ffb\u8bd1\uff0c\u5176\u4e2d\u7684Post\u8868\u5305\u542b\u94fe\u63a5\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5305\u542b\u7ffb\u8bd1\u7684TransPost\u5143\u7d20\u7684\u5143\u7d20\u3002\n_|POST||TRANS_POST|=||\u5df2\u53d1\u5e03||\u8bed\u8a00||Created_At|&lt\uff1b--(1)-(N)--&gt\uff1b&gt\uff1b|\u6807\u9898|\u5185\u5bb9|slug|=\u3002\n\u4f60\u53ef\u4ee5\u4f7f\u7528GraphQL\u6e38\u4e50\u573a\u6765\u73a9\u5b83\uff0c\u5e76\u63a2\u7d22\u540e\u7aef\u3002\u8bf7\u8bb0\u4f4f\uff0c\u672c\u6559\u7a0b\u7684\u91cd\u70b9\u662fNuxt.js\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u60f3\u8981\u751f\u6210\u6700\u7ec8\u9759\u6001\u7ad9\u70b9\u7684\u540e\u7aef\u3002\n\u8bb0\u4f4f\u9009\u62e9axios\u9009\u9879(\u60a8\u7a0d\u540e\u4f1a\u7528\u5230\u5b83)\u5e76\u6dfb\u52a0\u4e00\u4e2aUI\u6846\u67b6\uff0c\u6bd4\u5982Buefy\u3002\n\u5e76\u5728services\u6587\u4ef6\u5939\u4e0b\u521b\u5efaindex.js\u6587\u4ef6\u6765\u5305\u88c5\u6240\u6709\u67e5\u8be2\u3002\u6b64\u5ba2\u6237\u7aef\u5e94\u5b9e\u73b03\u79cd\u65b9\u6cd5\uff1a\ngetAllPosts\uff1a\u83b7\u53d6\u7279\u5b9a\u8bed\u8a00\u7684\u6240\u6709\u5e16\u5b50\uff0c\u663e\u793a\u5176\u4ed6\u8bed\u8a00\u7684slug\u3001\u6807\u9898\u3001\u5185\u5bb9\u548c\u5176\u4ed6\u5e16\u5b50\u7684slug\uff0c\u4ee5\u83b7\u53d6\u5907\u7528URL\u3002\ngetSinglePost\uff1a\u83b7\u53d6\u5177\u6709\u7279\u5b9a\u63d2\u4ef6\u548c\u8bed\u8a00\u7684\u5355\u4e2a\u5e16\u5b50\uff0c\u4ee5\u5176\u4ed6\u8bed\u8a00\u663e\u793a\u6240\u6709\u5c5e\u6027\u548c\u5e16\u5b50\u3002\n\u4eceApollo-Fetch\u5bfc\u5165{createApolloFetch}\u5bfc\u51fa\u9ed8\u8ba4\u7c7bBlogClient{structor(){this\u3002apolloFetch=createApolloFetch({uri\uff1a`${process.\u3002\u73af\u5883\u3002NUXT_ENV_BACKEND_URL}/raphql`})}getAllPostsHead(Lang){const allPostsQuery=`query AllPosts($lang\uff1astring\uff01){transPosts(where\uff1a{lang\uff1a$lang}){slug title}}`\u8fd4\u56de\u6b64\u53c2\u6570\u3002apolloFetch({query\uff1aallPostsQuery\uff0cVariables\uff1a{lang}})}getAllPosts(Lang){const allPostsQuery=`query AllPosts($lang\uff1astring\uff01){transPosts(where\uff1a{lang\uff1a$lang}){slug title content post{Publisher transPosts(where\uff1a{lang_ne\uff1a$lang}){slug lang}`\u8fd4\u56de\u6b64\u53c2\u6570\u3002apolloFetch({query\uff1aallPostsQuery\uff0cVariables\uff1a{lang}})}getSinglePost(slug\uff0clang){const simplePostQuery=`\u67e5\u8be2\u53d1\u5e03($slug\uff1astring\uff01\uff0c$lang\uff1astring\uff01){transPosts(where\uff1a{slug\uff1a$slug\uff0clang\uff1a$lang}){slug\u6807\u9898\u5185\u5bb9POST{\u53d1\u5e03\u7684transPosts(\u5176\u4e2d\uff1a{lang_ne\uff1a$lang}){slug\u3002apolloFetch({query\uff1asimplePostQuery\uff0c\u53d8\u91cf\uff1a{slug\uff0clang}})}}\u3002\n\u8981\u4f7fBlogClient\u5728\u60a8\u6709\u6743\u8bbf\u95ee\u4e0a\u4e0b\u6587\u65f6\u53ef\u7528(\u4f8b\u5982\uff0c\u5728asyncData\u51fd\u6570\u4e2d)\uff0c\u8bf7\u521b\u5efaplugins/ctx-inject.js\u6587\u4ef6\u3002\n\u4ece&#39\uff1b~/services&#39\uff1b\u5bfc\u5165BlogClient\u5bfc\u51fa\u9ed8\u8ba4\u503c({app}\uff0cInject)=&gt\uff1b{app.\u3002$blogClient=new BlogClient()}\u3002\n\u8fd9\u4e2a\u535a\u5ba2\u7684\u7ed3\u6784\u5c06\u975e\u5e38\u7b80\u5355\uff0c\u5728\u4e3b\u9875(/)\u4e2d\u4f1a\u6709\u4e00\u4e2a\u5e16\u5b50\u5217\u8868\u548c\u4e00\u4e2a\u9605\u8bfb\u6587\u7ae0\u7684\u94fe\u63a5(/blog/&lt\uff1bpostslug&gt\uff1b)\u3002\u73b0\u5728\u60a8\u53ef\u4ee5\u4ece\u4e0a\u4e0b\u6587\u8bbf\u95eeBlogClient\u5b9e\u4f8b\u4e86\uff0c\u73b0\u5728\u5f00\u59cb\u91cd\u5199\u4e3b\u9875\u7ec4\u4ef6(Pages/index.vue)\uff0c\u4ee5\u4f7f\u7528\u540d\u4e3aasyncData\u7684\u7279\u6b8a\u65b9\u6cd5\u83b7\u53d6\u535a\u5ba2\u5e16\u5b50\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5e16\u5b50\u5448\u73b0\u6807\u9898\u548c\u94fe\u63a5\u3002asyncData\u63a5\u6536\u4e0a\u4e0b\u6587\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7context.app.$blogClient\u8bbf\u95ee\u60a8\u7684BlogClient\u5b9e\u4f8b\u3002\n&lt\uff1btemplate&gt\uff1b&lt\uff1bSection class=&#34\uff1b&gt\uff1b&lt\uff1bdiv class=&#34\uff1bis-mobile&#34\uff1b&gt\uff1b&lt\uff1bdiv v-for=&#34\uff1b\u5e16\u5b50&#34\uff1b\uff1akey=&#34\uff1bpost.slug&#34\uff1b&gt\uff1b&lt\uff1bh2&gt\uff1b{{post.title}}&lt\uff1b/H2&gt\uff1b&\u3002\u535a\u5ba2-slug&#39\uff1b\uff0cparams\uff1a{slug\uff1apost.slug}}&#34\uff1b&gt\uff1b\u9605\u8bfb\u66f4\u591a.\u3002&lt\uff1b/nuxt-link&gt\uff1b&lt\uff1b/div&gt\uff1b&lt\uff1b/div&gt\uff1b&lt\uff1b/Section&gt\uff1b&lt\uff1b/template&gt\uff1b&lt\uff1b\u811a\u672c&gt\uff1b\u5bfc\u51fa\u9ed8\u8ba4\u503c{name\uff1a&#39\uff1b\u4e3b\u9875&#39\uff1b\uff0c\u5f02\u6b65\u5f02\u6b65\u6570\u636e({app}){const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getAllPostsHead(&#39\uff1bEN&#39\uff1b)\u8fd4\u56de{Posts\uff1apostsData\u3002\u6570\u636e\u3002transPosts}}\uff0cdata(){return{post\uff1a[]}&lt\uff1b/script&gt\uff1b\n\u6dfb\u52a0/blog/&lt\uff1bpostslug&gt\uff1broute\uff0c\u521b\u5efa\u7ec4\u4ef6blogpost(page/blog/_slug.vue)\u3002\u5b89\u88c5Vue Markdown\u7ec4\u4ef6\u4ee5\u6b63\u786e\u5448\u73b0\u6587\u7ae0(\u7eb1\u7ebf\u6dfb\u52a0Vue-markdown)\u3002\n&lt\uff1b\u6a21\u677f&gt\uff1b&lt\uff1bSection class=&#34\uff1b&gt\uff1b&lt\uff1bdiv class=&#34\uff1bis-mobile&34\uff1b&gt\uff1b&lt\uff1bh2&gt\uff1b{{post.title}}&lt\uff1b/h2&gt\uff1b&lt\uff1bvue-markdown&gt\uff1b{{post.content}}&lt\uff1b/vue-markdown&gt\uff1b&lt\uff1b/div&\u3002\u811a\u672c&&gt;\u5bfc\u51fa\u9ed8\u8ba4\u503c{name\uff1a&#39\uff1bblogpost&#39\uff1b\uff0c\u7ec4\u4ef6\uff1a{&#39\uff1bvue-markdown&#39\uff1b\uff1aVueMarkdown}\uff0c\u5f02\u6b65\u5f02\u6b65\u6570\u636e({app\uff0croute}){const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getSinglePost(\u8def\u7531\u3002\u53c2\u6570\u3002slug\uff0c&#39\uff1ben&#39\uff1b)\u8fd4\u56de{POST\uff1apostsData\u3002\u6570\u636e\u3002transPosts[0]}}\uff0cdata(){return{post\uff1anull}&lt\uff1b/script&gt\uff1b\n\u5e38\u91cf\u533a\u57df\u8bbe\u7f6e=[{code\uff1a&#39\uff1ben&#39\uff1b\uff0ciso\uff1a&#39\uff1ben-US&39\uff1b}\uff0c{code\uff1a&#39\uff1bes&#39\uff1b\uff0ciso\uff1a&#39\uff1bes-es&#39\uff1b}\uff0c{code\uff1a&#39\uff1bit&#39\uff1bit-IT&#39\uff1b}]const default_locale=&#39\uff1ben&#39\uff1b\u5bfc\u51fa\u9ed8\u8ba4\u503c{//.\u3002I18N\uff1a{locales\uff1alocales\uff0cdefaultLocale\uff1adefault_locale\uff0cencodePath\uff1afalse\uff0cvueI18n\uff1a{fall backLocale\uff1adefault_locale\uff0cMessages\uff1a{en\uff1a{readmore\uff1a&#39\uff1bread more&#39\uff1b}\uff0ces\uff1a{readmore\uff1a&#39\uff1bLee mass&#39\uff1b}\uff0cit\uff1a{readmore\uff1a&#39\uff1bleggi di pi\uff1f\uff1f&#39\uff1b}//.}\u3002\n\u73b0\u5728\u60a8\u53ef\u4ee5\u4fee\u6539\u4e3b\u9875\u7ec4\u4ef6\u4e86\uff1a\u5728nuxt-link\u4e2d\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528localePath\uff0c\u5e76\u4f7f\u7528$t\u5448\u73b0\u7ffb\u8bd1\u540e\u7684\u6807\u7b7ereadmore\u3002\n\u5728asyncData\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u6587\u7684store.$i18n\u5c5e\u6027\u83b7\u53d6\u5e16\u5b50\u5217\u8868\uff0c\u4ee5\u83b7\u53d6\u5f53\u524d\u8bed\u8a00\u3002\n//.\u3002\u5f02\u6b65\u5f02\u6b65\u6570\u636e({app\uff0cstore}){const postsData=\u7b49\u5f85\u5e94\u7528\u3002$blogClient\u3002getAllPostsHead(\u5b58\u50a8\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)\u8fd4\u56de{POSTS\uff1apostsData\u3002\u6570\u636e\u3002TransPosts}}\uff0c//.\u3002\n//.\u3002\u5f02\u6b65\u5f02\u6b65\u6570\u636e({app\uff0croute\uff0cstore}){const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getSinglePost(\u8def\u7531\u3002\u53c2\u6570\u3002\u9f3b\u6d95\u866b\uff0c\u5546\u5e97\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)\u8fd4\u56de{POST\uff1apostsData\u3002\u6570\u636e\u3002TransPosts[0]}}\uff0c//.\u3002\n&lt\uff1btemplate&gt\uff1b&lt\uff1bb-navbar-dropdown\uff1alabel=&#34\uff1b$i18n.locale&#34\uff1b&gt\uff1b&lt\uff1bnuxt-link v-for=&#34\uff1blocale&#34\uff1b\uff1akey=&#34\uff1blocale.code&#34\uff1bclass=&#34\uff1bnavbar-item&#34\uff1b\uff1ato=&#34\uff1bswitchLocalePath(locale.code)\u3002/b-navbar-dropdown&gt\uff1b&lt\uff1b/template&gt\uff1b&lt\uff1bscript&gt\uff1bexport default{Computed\uff1a{availableLocales(){return this\u30021.18\u4ebf\u7f8e\u5143\u3002\u5730\u70b9\u3002\u7b5b\u9009\u5668(\u533a\u57df\u8bbe\u7f6e=&gt\uff1b\u533a\u57df\u8bbe\u7f6e\u3002\u4ee3\u7801\uff01==\u8fd9\u4e2a\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)}&lt\uff1b/script&gt\uff1b\n\u5e76\u5c06\u5176\u5305\u542b\u5728\u5e03\u5c40/default.vue\u4e2d\uff0c\u4ee5\u4f7f\u5176\u5728\u5bfc\u822a\u680f\u4e2d\u53ef\u7528\u3002\u6b64\u7ec4\u4ef6\u8c03\u7528switchLocalePath\u4ee5\u83b7\u53d6\u6307\u5411\u53e6\u4e00\u79cd\u8bed\u8a00\u7684\u5f53\u524d\u9875\u9762\u7684\u94fe\u63a5\u3002\u8981\u4f7f\u8bed\u8a00\u5207\u6362\u5668\u4f7f\u7528\u52a8\u6001\u8def\u7531\uff0c\u60a8\u9700\u8981\u4f7f\u7528store.dispatch\u8bbe\u7f6eblogpost\u7ec4\u4ef6\u4e2d\u7684slug\u53c2\u6570\u3002\n//.\u3002\u5f02\u6b65\u5f02\u6b65\u6570\u636e({app\uff0croute\uff0cstore}){const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getSinglePost(\u8def\u7531\u3002\u53c2\u6570\u3002\u9f3b\u6d95\u866b\uff0c\u5546\u5e97\u30021.18\u4ebf\u7f8e\u5143\u3002\u5730\u70b9)\u7b49\u5f85\u5546\u5e97\u3002\u6d3e\u5355(&#39\uff1bi18n/setRouteParams&#39\uff1b\uff0c\u5bf9\u8c61\u3002FromEntries(postsData.\u3002\u6570\u636e\u3002TransPosts[0]\u3002\u53d1\u5e16\u3002\u8f6c\u5f2f\u3002map(el=&gt\uff1b[el.\u3002\u6717\uff0c{\u9f3b\u6d95\u866b\uff1aEL\u3002slug}])\u8fd4\u56de{POST\uff1apostsData\u3002\u6570\u636e\u3002TransPosts[0]}}\uff0c//.\n\u8bb0\u4f4f\u4f7f\u7528.env\u6216\u76f4\u63a5(\u5bfc\u51faNUXT_ENV_BACKEND_URL=https://strapi.lotrek.net)\u5e76\u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668)\u8bbe\u7f6e\u535a\u5ba2\u5ba2\u6237\u7aef\u4f7f\u7528\u7684NUXT_ENV_BACKEND_URL\u73af\u5883\u53d8\u91cf\u3002\n\u2139\u751f\u6210\u9875\u9762\u2714\u751f\u6210/\u5b83/\u2714\u751f\u6210/ES/\u2714\u751f\u6210/\u2728\u572843.49\u79d2\u5185\u5b8c\u6210\u3002\n\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u4e0d\u4f1a\u751f\u6210\u52a8\u6001\u8def\u7531\uff0c\u56e0\u4e3aNuxt.js\u4e0d\u77e5\u9053\u5982\u4f55\u751f\u6210\u5b83\u4eec\u3002\u8981\u6dfb\u52a0\u52a8\u6001\u8def\u7531\u652f\u6301\uff0c\u60a8\u5fc5\u987b\u5728nuxt.config.js\u4e2d\u7684Generate settings\u4e0b\u5b9e\u73b0routes\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u60a8\u60f3\u8981\u751f\u6210\u7684\u8def\u7531\u548c\u5305\u542bPOST\u7684\u6709\u6548\u8d1f\u8f7d\u7684\u5bf9\u8c61\u5217\u8868\u3002\n\u4ece&#39\uff1b\u5bfc\u5165BlogClient\u3002/services&#39\uff1b//.\u3002\u5bfc\u51fa\u9ed8\u8ba4\u503c{//.\u3002\u751f\u6210\uff1a{routes\uff1aasync()=&gt\uff1b{const client=new BlogClient()let routes=[]let postsData=[]for(\u533a\u57df\u8bbe\u7f6e\u7684\u5e38\u91cf\u533a\u57df\u8bbe\u7f6e){postsData=\u7b49\u5f85\u5ba2\u6237\u7aef\u3002getAllPosts(\u533a\u57df\u8bbe\u7f6e\u3002\u4ee3\u7801)ROUES=ROUTS\u3002Concat(postsData.\u3002\u6570\u636e\u3002\u8f6c\u5f2f\u3002map((Post)=&gt\uff1b{return{route\uff1a`${locale.\u3002code=DEFAULT_LOCALE\uff1f&#39\uff1b&#39\uff1b\uff1a&#39\uff1b/&#39\uff1b+\u533a\u57df\u8bbe\u7f6e\u3002code}/blog/${post.\u3002slug}`\uff0c\u6709\u6548\u8d1f\u8f7d\uff1aPOST}}))}\u8fd4\u56de\u8def\u7531}}//.}\u3002\n\u7531\u4e8e\u6709\u6548\u8d1f\u8f7d\u5728\u4e0a\u4e0b\u6587\u4e2d\u53ef\u7528\uff0c\u60a8\u53ef\u4ee5\u91cd\u6784blogpost\u7ec4\u4ef6\u4e2d\u7684asyncData\u51fd\u6570\uff0c\u4ee5\u4ececontext.payload\u83b7\u5f97\u7279\u5b9a\u7684\u5e16\u5b50\u3002\nconst getSinglePostFromContext=async({app\uff0croute\uff0cstore\uff0cpayload})=&gt\uff1b{if(Payload){return payload}const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getSinglePost(\u8def\u7531\u3002\u53c2\u6570\u3002\u9f3b\u6d95\u866b\uff0c\u5546\u5e97\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)\u8fd4\u56depostsData\u3002\u6570\u636e\u3002transPosts[0]}\u5bfc\u51fa\u9ed8\u8ba4\u503c{name\uff1a&#39\uff1bblogpost&#39\uff1b\uff0casync asyncData(Context){const singlePost=await getSinglePostFromContext(Context)\u7b49\u5f85\u4e0a\u4e0b\u6587\u3002\u5546\u5e97\u3002\u6d3e\u5355(&#39\uff1bi18n/setRouteParams&#39\uff1b\uff0c\u5bf9\u8c61\u3002FromEntries(singlePost.\u3002\u53d1\u5e16\u3002\u8f6c\u5f2f\u3002map(el=&gt\uff1b[el.\u3002\u6717\uff0c{\u9f3b\u6d95\u866b\uff1aEL\u3002slug}])return{post\uff1asinglePost}}\uff0c//.}\u3002\n\u2139Generating Pages\u2714Generated/it/\u2714Generated/ES/\u2714Generated/\u2714Generated/Blog/Hello-World\u2714Generated/it/Blog/Cao-mondo\u2728\u572833.82\u79d2\u5185\u5b8c\u6210\u3002\n\u9759\u6001\u751f\u6210\u540e\u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5728\u5ba2\u6237\u7aef\u5bfc\u822a\u671f\u95f4\u4ecd\u7136\u4f1a\u8fdb\u884casyncData\u8c03\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5916\u90e8API\u670d\u52a1\u5668\u5e94\u8be5\u5728\u60a8\u7684\u9759\u6001\u7f51\u7ad9\u8054\u673a\u65f6\u8fd0\u884c(\u5982\u679cStrapi\u670d\u52a1\u5668\u5173\u95ed\uff0c\u60a8\u5c06\u65e0\u6cd5\u83b7\u53d6&#34\uff1b\u6d88\u606f)\u3002\u8fd9\u662f\u4e00\u4e2a\u5df2\u77e5\u7684\u95ee\u9898\uff0cNuxt.js\u56e2\u961f\u6b63\u5728\u52aa\u529b\u5728\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\u652f\u6301nuxt\u751f\u6210\u7684\u5b8c\u5168\u9759\u6001\u751f\u6210\uff0c\u76ee\u524d\u60a8\u53ef\u4ee5\u4f7f\u7528nuxt-payload-\u63d0\u53d6\u5668\u63d2\u4ef6\u3002\u968f\u4e00\u8d77\u5b89\u88c5\nconst getSinglePostFromContext=async({$axios\uff0c$payloadURL\uff0capp\uff0croute\uff0cstore\uff0cpayload})=&gt\uff1b{if(Payload){return payload}let postsData=null if(Process.\u3002\u9759\u6001&amp\uff1b&amp\uff1b\u8fdb\u7a0b\u3002\u5ba2\u6237\u7aef&amp\uff1b&amp\uff1b$payloadURL){postsData=\u7b49\u5f85$axios\u3002$get($payloadURL(Route))\u8fd4\u56depostsData\u3002post}postsData=\u7b49\u5f85\u5e94\u7528\u7a0b\u5e8f\u3002$blogClient\u3002getSinglePost(\u8def\u7531\u3002\u53c2\u6570\u3002\u9f3b\u6d95\u866b\uff0c\u5546\u5e97\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)\u8fd4\u56depostsData\u3002\u6570\u636e\u3002\u4f20\u8f93\u53d1\u5e03[0]}\u3002\n\u5f02\u6b65\u5f02\u6b65\u6570\u636e({$axios\uff0c$payloadURL\uff0capp\uff0croute\uff0cstore}){if(\u8fdb\u7a0b\u3002\u9759\u6001&amp\uff1b&amp\uff1b\u8fdb\u7a0b\u3002\u5ba2\u6237\u7aef&amp\uff1b&amp\uff1b$payloadURL){\u8fd4\u56de\u7b49\u5f85$axios\u3002$get($payloadURL(Route))}const postsData=\u7b49\u5f85APP\u3002$blogClient\u3002getAllPostsHead(\u5b58\u50a8\u30021.18\u4ebf\u7f8e\u5143\u3002\u533a\u57df\u8bbe\u7f6e)\u8fd4\u56de{POSTS\uff1apostsData\u3002\u6570\u636e\u3002\u4f20\u8f93\u53d1\u5e03}}\u3002\n\u6709\u65f6\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4e3a\u52a8\u6001\u8def\u7531\u914d\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8def\u5f84\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u4e3a\u82f1\u8bed\u4fdd\u7559/blog/\uff1aslug path\uff0c\u4e3a\u897f\u73ed\u7259\u8bed\u4fdd\u7559/art\u00edculos/\uff1aslug route\uff0c\u4e3a\u610f\u5927\u5229\u8bed\u4fdd\u7559/titioli/\uff1aslug route\u3002\u9075\u5faanuxt-i18n\u6587\u6863\uff0c\u60a8\u5fc5\u987b\u5728nuxt.config.js\u7684i18n\u90e8\u5206\u4e2d\u6307\u5b9a\u8fd9\u4e9b\u8def\u7531\u3002\nI18N{//.\u3002parsePages\uff1afalse\uff0cPages\uff1a{&#39\uff1bblog/_slug&#39\uff1b\uff1a{it\uff1a&#39\uff1b/jotioli/\uff1aslug&#39\uff1b\uff0ces\uff1a&#39\uff1b/art\u00edculos/\uff1aslug&#39\uff1b\uff0cen\uff1a&#39\uff1b/blog/\uff1aslug&#39\uff1b}}\uff0c//.}\u3002\n\u8981\u4f7f\u8fd9\u4e9b\u8bbe\u7f6e\u5728I18N\u914d\u7f6e\u548c\u751f\u6210\u51fd\u6570\u4e2d\u90fd\u53ef\u91cd\u7528\uff0c\u8bf7\u5728\u5355\u72ec\u7684\u6587\u4ef6i18n.config.js\u4e2d\u79fb\u52a8\u81ea\u5b9a\u4e49\u8def\u7531\u3002\n\u5bfc\u51fa\u9ed8\u8ba4{Pages\uff1a{&#39\uff1bblog/_slug&#39\uff1b\uff1a{it\uff1a&#39\uff1b/jotioli/\uff1aslug&#39\uff1b\uff0ces\uff1a&#39\uff1b/art\u00edculos/\uff1aslug&#39\uff1b\uff0cen\uff1a&#39\uff1b/blog/\uff1aslug&#39\uff1b}\u3002\n\u4ece&#39\uff1b\u5bfc\u5165i18nConfig\u3002/i18n.config&#39\uff1b//.\u3002\u5bfc\u51fa\u9ed8\u8ba4\u503c{//.\u3002I18n\uff1a{locales\uff1alocales\uff0cdefaultLocale\uff1adefault_locale\uff0cparsePages\uff1afalse\uff0cPages\uff1aI18nConfig\u3002\u9875\u9762\uff0c\u7f16\u7801\u8def\u5f84\uff1aFALSE\uff0cvueI18n\uff1a{fall backLocale\uff1aDEFAULT_LOCALE\uff0c//.}}\uff0c//.\u3002\n\u8def\u7531\uff1aasync()=&gt\uff1b{const client=new BlogClient()let routes=[]let postsData=[]for(\u533a\u57df\u8bbe\u7f6e\u7684\u5e38\u91cf\u533a\u57df\u8bbe\u7f6e){postsData=\u7b49\u5f85\u5ba2\u6237\u7aef\u3002getAllPosts(\u533a\u57df\u8bbe\u7f6e\u3002\u4ee3\u7801)ROUES=ROUTS\u3002Concat(postsData.\u3002\u6570\u636e\u3002\u8f6c\u5f2f\u3002map((Post)=&gt\uff1b{return{route\uff1a`${locale.\u3002code=DEFAULT_LOCALE\uff1f&#39\uff1b&#39\uff1b\uff1a&#39\uff1b/&#39\uff1b+\u533a\u57df\u8bbe\u7f6e\u3002\u4ee3\u7801}${i18nConfig\u3002Pages[&#39\uff1bblog/_slug&39\uff1b][\u533a\u57df\u8bbe\u7f6e\u3002\u4ee3\u7801]\u3002\u66f4\u6362(&#39\uff1b\uff1aslug&#39\uff1b\uff0cPOST\u3002slug)}`\uff0c\u6709\u6548\u8d1f\u8f7d\uff1aPOST}})}}\u8fd4\u56de\u8def\u7ebf}\n\u2139Generating Pages\u2714Generated/Blog/Hello-World\u2714Generated/it/Artioli/Cao-mondo\u2714Generated/ES/ART\u00edculos/Hola-Mundo\u2714Generated/ES/\u2714Generated/it/\u2714Generated/\u2728\u572833.82\u79d2\u5185\u5b8c\u6210\u3002\n\u5728\u6b64\u5b58\u50a8\u5e93\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u672c\u6559\u7a0b\u7684\u5b8c\u6574\u4ee3\u7801\uff0c\u7ed3\u679c\u90e8\u7f72\u5728Netlify CDN\u4e0a\uff0c\u7f51\u5740\u4e3ahttps://eager-shockley-a415b7.netlify.app/.\u3002Netlify\u662f\u6211\u6700\u559c\u6b22\u7684\u670d\u52a1\u4e4b\u4e00\uff0c\u5b83\u4e3a\u9759\u6001\u7f51\u7ad9\u63d0\u4f9b\u4e91\u6258\u7ba1\uff0c\u63d0\u4f9b\u6301\u7eed\u90e8\u7f72\u3001\u514d\u8d39SSL\u3001\u65e0\u670d\u52a1\u5668\u529f\u80fd\u7b49\u2026\u2026\u3002\u6700\u540e\u7684\u4ee3\u7801\u5411\u7f51\u7ad9\u6dfb\u52a0\u4e86\u4e00\u4e9b\u7f3a\u5931\u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff0c\u5b83\u6dfb\u52a0\u4e86\u4f5c\u8005\u652f\u6301\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\u4f7f\u7528\u4e86\u8fd9\u91cc\u7701\u7565\u7684\u4e00\u4e9b\u5916\u90e8\u7ec4\u4ef6\uff0c\u5e76\u542f\u7528\u4e86\u9879\u76ee\u7684SEO\u9009\u9879\u6765\u5411\u9875\u9762\u6dfb\u52a0\u5143\u6570\u636e(\u53c2\u89c1nuxt-18n\u6587\u6863\u4e2d\u7684SEO\u90e8\u5206)\u3002\n\u6700\u7ec8\u4ee3\u7801\u4e2d\u5305\u542b\u7684\u53e6\u4e00\u4e2a\u6709\u7528\u7684\u4e1c\u897f\u662f\u7531Nuxt.js\u7ad9\u70b9\u5730\u56fe\u6a21\u5757\u63d0\u4f9b\u7684\u7ad9\u70b9\u5730\u56fe\u3002Sitemap\u5f88\u5bb9\u6613\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u91c7\u7528Generate.routes\u503c\uff0c\u56e0\u6b64\u4f1a\u81ea\u52a8\u5305\u542b\u52a8\u6001\u8def\u7531\u3002\u914d\u7f6e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728nuxt.config.js\u6587\u4ef6\u7684\u6a21\u5757\u6570\u7ec4\u90e8\u5206\u7684\u672b\u5c3e\u6dfb\u52a0@nuxtjs/sitemap\u3002\n\u5bfc\u51fa\u9ed8\u8ba4\u503c{//.\u3002\u7ad9\u70b9\u5730\u56fe\uff1a{hostname\uff1abase_url\uff0cgzip\uff1atrue\uff0ci18n\uff1adefault_locale}//.}", "note_en": "JAMStack (Javascript, APIs and Markup Stack) is a terminology around the new way of making web projects where you don\u2019t have to host your own backend that builds the site every time you serve it, instead it renders out a set of static pages at build time and deploys them to a content delivery network (CDN). This means better security, increased scalability and improved website performance.\n In this tutorial you&#39;ll learn how to build a JAMStack multilanguage blog using  Nuxt.js, a powerful Vue framework that supports SPA, SSR and statically generated renderings in conjunction with  Strapi Headless CMS to store data and expose them to generate a static blog. To setup Strapi locally you can follow  this guide otherwise you can use a read only instance running on our server at  https://strapi.lotrek.net/.\n   With Strapi I built a naive structure to support translations with a  Post table containing elements linked with one or more  TransPost elements that contain translations\n ____________ ____________ | POST | | TRANS_POST | ============ ============ | published | | language | | created_at | &lt;--(1)-------(N)--&gt;&gt; | title | | | | content | | | | slug | ============ ============\n You can play with it using  GraphQL playground and explore the backend. Remember that the main focus of this tutorial is  Nuxt.js, you can use any backend you want to generate the final static site.\n    Remember to select  axios option (you&#39;ll need it later) and add a UI framework such as  Buefy.\n    and create  index.js file under  services folder to wrap all the queries. This client should implement 3 methods:\n getAllPosts: fetches all the posts in a specific language, showing  slug,  title,  content and the other posts slugs in other languages to get alternate urls.\n getSinglePost: fetch a single post with a specific slug and language, showing all the attributes and posts in other languages.\n import  {  createApolloFetch  }  from  &#39; apollo-fetch &#39; export  default  class  BlogClient  {  constructor  ()  {  this . apolloFetch  =  createApolloFetch ({  uri :  ` ${ process . env . NUXT_ENV_BACKEND_URL } /graphql`  })  }  getAllPostsHead  ( lang )  {  const  allPostsQuery  =  ` query AllPosts($lang: String!) { transPosts(where: {lang: $lang}) { slug title } } `  return  this . apolloFetch ({  query :  allPostsQuery ,  variables :  {  lang  }  })  }  getAllPosts  ( lang )  {  const  allPostsQuery  =  ` query AllPosts($lang: String!) { transPosts(where: {lang: $lang}) { slug title content post { published transPosts(where: {lang_ne: $lang}) { slug lang } } } } `  return  this . apolloFetch ({  query :  allPostsQuery ,  variables :  {  lang  }  })  }  getSinglePost  ( slug ,  lang )  {  const  simplePostQuery  =  ` query Post($slug: String!, $lang: String!) { transPosts(where: {slug : $slug, lang: $lang}) { slug title content post { published transPosts(where: {lang_ne: $lang}) { slug lang } } } } `  return  this . apolloFetch ({  query :  simplePostQuery ,  variables :  {  slug ,  lang  }  })  } }\n To make  BlogClient available whenever you have access to the context (e.g. in  asyncData function) create  plugins/ctx-inject.js file\n import  BlogClient  from  &#39; ~/services &#39; export  default  ({  app  },  inject )  =&gt;  {  app . $blogClient  =  new  BlogClient () }\n    The structure of this blog will be really simple, in the homepage ( /) there&#39;ll be a list of posts with a link to read the article ( /blog/&lt;postslug&gt;). Now that you can access the  BlogClient instance from the context, start rewriting the  HomePage component ( pages/index.vue) to fetch blog posts in a special method called  asyncData and render title and link for each post.  asyncData receives the  context as the first argument and your  BlogClient instance is accessible at  context.app.$blogClient\n &lt;template&gt;  &lt;section  class= &#34;section&#34; &gt;  &lt;div  class= &#34;is-mobile&#34; &gt;  &lt;div  v-for= &#34;post in posts&#34;  :key= &#34;post.slug&#34; &gt;  &lt;h2&gt;{{ post.title }} &lt;/h2&gt;  &lt;nuxt-link  :to= &#34;{name: &#39;blog-slug&#39;, params:{slug: post.slug}}&#34; &gt;Read more... &lt;/nuxt-link&gt;  &lt;/div&gt;  &lt;/div&gt;  &lt;/section&gt; &lt;/template&gt; &lt;script&gt; export  default  {  name :  &#39; HomePage &#39; ,  async  asyncData  ({  app  })  {  const  postsData  =  await  app . $blogClient . getAllPostsHead ( &#39; en &#39; )  return  {  posts :  postsData . data . transPosts  }  },  data  ()  {  return  {  posts :  []  }  } } &lt;/script&gt;\n Add  /blog/&lt;postslug&gt; route creating the component  BlogPost ( pages/blog/_slug.vue). Install  Vue Markdown component to render the article correctly ( yarn add vue-markdown)\n &lt;template&gt;  &lt;section  class= &#34;section&#34; &gt;  &lt;div  class= &#34;is-mobile&#34; &gt;  &lt;h2&gt;{{ post.title }} &lt;/h2&gt;  &lt;vue-markdown&gt;{{ post.content }} &lt;/vue-markdown&gt;  &lt;/div&gt;  &lt;/section&gt; &lt;/template&gt; &lt;script&gt; export  default  {  name :  &#39; BlogPost &#39; ,  components :  {  &#39; vue-markdown &#39; :  VueMarkdown  },  async  asyncData  ({  app ,  route  })  {  const  postsData  =  await  app . $blogClient . getSinglePost ( route . params . slug ,  &#39; en &#39; )  return  {  post :  postsData . data . transPosts [ 0 ]  }  },  data  ()  {  return  {  post :  null  }  } } &lt;/script&gt;\n       const  LOCALES  =  [  {  code :  &#39; en &#39; ,  iso :  &#39; en-US &#39;  },  {  code :  &#39; es &#39; ,  iso :  &#39; es-ES &#39;  },  {  code :  &#39; it &#39; ,  iso :  &#39; it-IT &#39;  } ] const  DEFAULT_LOCALE  =  &#39; en &#39; export  default  {  // ...  i18n :  {  locales :  LOCALES ,  defaultLocale :  DEFAULT_LOCALE ,  encodePaths :  false ,  vueI18n :  {  fallbackLocale :  DEFAULT_LOCALE ,  messages :  {  en :  {  readmore :  &#39; Read more &#39;  },  es :  {  readmore :  &#39; Lee mas &#39;  },  it :  {  readmore :  &#39; Leggi di pi\u00f9 &#39;  }  }  }  }  // ... }\n Now you can modify the  HomePage component: in  nuxt-link you should use  localePath and render the translated label  readmore using  $t\n  In  asyncData you can fetch the posts list using the  store.$i18n attribute of  context to get the current language.\n // .... async  asyncData  ({  app ,  store  })  {  const  postsData  =  await  app . $blogClient . getAllPostsHead (  store . $i18n . locale  )  return  {  posts :  postsData . data . transPosts  } }, // ....\n  // .... async  asyncData  ({  app ,  route ,  store  })  {  const  postsData  =  await  app . $blogClient . getSinglePost (  route . params . slug ,  store . $i18n . locale  )  return  {  post :  postsData . data . transPosts [ 0 ]  } }, // ....\n  &lt;template&gt;  &lt;b-navbar-dropdown  :label= &#34;$i18n.locale&#34; &gt;  &lt;nuxt-link  v-for= &#34;locale in availableLocales&#34;  :key= &#34;locale.code&#34;  class= &#34;navbar-item&#34;  :to= &#34;switchLocalePath(locale.code)&#34; &gt; {{ locale.code }}  &lt;/nuxt-link&gt;  &lt;/b-navbar-dropdown&gt; &lt;/template&gt; &lt;script&gt; export  default  {  computed :  {  availableLocales  ()  {  return  this . $i18n . locales . filter ( locale  =&gt;  locale . code  !==  this . $i18n . locale )  }  } } &lt;/script&gt;\n and include it in  layouts/default.vue to make it available in the navbar. This component calls  switchLocalePath to get a link to the current page in another language. To make the language switcher working with dynamic routes you need to set the  slug parameter in  BlogPost component using  store.dispatch\n //... async  asyncData  ({  app ,  route ,  store  })  {  const  postsData  =  await  app . $blogClient . getSinglePost (  route . params . slug ,  store . $i18n . locale  )  await  store . dispatch (  &#39; i18n/setRouteParams &#39; ,  Object . fromEntries ( postsData . data . transPosts [ 0 ]. post . transPosts . map (  el  =&gt;  [ el . lang ,  {  slug :  el . slug  }])  )  )  return  {  post :  postsData . data . transPosts [ 0 ]  } }, //...\n  Remember to set  NUXT_ENV_BACKEND_URL environment variabile used by  BlogClient with .env or directly ( export NUXT_ENV_BACKEND_URL=https://strapi.lotrek.net) and launch the development server\n      \u2139 Generating pages\u2714 Generated /it/\u2714 Generated /es/\u2714 Generated /\u2728 Done in 43.49s.\n as you can see dynamic routes are not generated, because Nuxt.js doesn&#39;t know how to generate them. To add dynamic routes support you have to implement  routes function under  generate settings in  nuxt.config.js and return a list of objects containing the  route you want to generate and the  payload containing the post.\n import  BlogClient  from  &#39; ./services &#39; // ... export  default  {  // ...  generate :  {  routes :  async  ()  =&gt;  {  const  client  =  new  BlogClient ()  let  routes  =  []  let  postsData  =  []  for  ( const  locale  of  LOCALES )  {  postsData  =  await  client . getAllPosts ( locale . code )  routes  =  routes . concat ( postsData . data . transPosts . map (( post )  =&gt;  {  return  {  route :  ` ${ locale . code  ===  DEFAULT_LOCALE  ?  &#39;&#39;  :  &#39; / &#39;  +  locale . code } /blog/ ${ post . slug } ` ,  payload :  post  }  }))  }  return  routes  }  }  //... }\n Since  payload is available in the  context, you can refactor asyncData function in  BlogPost component to get the specific post from  context.payload\n const  getSinglePostFromContext  =  async  ({  app ,  route ,  store ,  payload  })  =&gt;  {  if  ( payload )  {  return  payload  }  const  postsData  =  await  app . $blogClient . getSinglePost (  route . params . slug ,  store . $i18n . locale  )  return  postsData . data . transPosts [ 0 ] } export  default  {  name :  &#39; BlogPost &#39; ,  async  asyncData  ( context )  {  const  singlePost  =  await  getSinglePostFromContext ( context )  await  context . store . dispatch (  &#39; i18n/setRouteParams &#39; ,  Object . fromEntries ( singlePost . post . transPosts . map (  el  =&gt;  [ el . lang ,  {  slug :  el . slug  }])  )  )  return  {  post :  singlePost  }  },  // ... }\n  \u2139 Generating pages\u2714 Generated /it/\u2714 Generated /es/\u2714 Generated /\u2714 Generated /blog/hello-world\u2714 Generated /it/blog/ciao-mondo\u2728 Done in 33.82s.\n    A problem you can notice after static generation is that  asyncData calls are still made during client-side navigation, which means that an external API server should run while your static website is online (if Strapi server is down you&#39;ll get &#34;Failed to fetch&#34; message). This is a known problem and Nuxt.js team is working to  support full static generation for nuxt generate in the next version, for now you can use  nuxt-payload-extractor plugin. Install it with\n     const  getSinglePostFromContext  =  async  ({  $axios ,  $payloadURL ,  app ,  route ,  store ,  payload  })  =&gt;  {  if  ( payload )  {  return  payload  }  let  postsData  =  null  if  ( process . static  &amp;&amp;  process . client  &amp;&amp;  $payloadURL )  {  postsData  =  await  $axios . $get ( $payloadURL ( route ))  return  postsData . post  }  postsData  =  await  app . $blogClient . getSinglePost (  route . params . slug ,  store . $i18n . locale  )  return  postsData . data . transPosts [ 0 ] }\n  async  asyncData  ({  $axios ,  $payloadURL ,  app ,  route ,  store  })  {  if  ( process . static  &amp;&amp;  process . client  &amp;&amp;  $payloadURL )  {  return  await  $axios . $get ( $payloadURL ( route ))  }  const  postsData  =  await  app . $blogClient . getAllPostsHead (  store . $i18n . locale  )  return  {  posts :  postsData . data . transPosts  } }\n  Sometimes you may need to configure a custom path for a dynamic route, for example you may want to keep  /blog/:slug path for english,  /art\u00edculos/:slug route for spanish and  /articoli/:slug route for italian. Following nuxt-i18n documentation you have to specify these routes in  i18n section of  nuxt.config.js\n i18n  {  // ...  parsePages :  false ,  pages :  {  &#39; blog/_slug &#39; :  {  it :  &#39; /articoli/:slug &#39; ,  es :  &#39; /art\u00edculos/:slug &#39; ,  en :  &#39; /blog/:slug &#39;  }  },  // ... }\n To make these settings reusable both in  i18n configuration and  generate function, move custom routes in a separated file  i18n.config.js\n export  default  {  pages :  {  &#39; blog/_slug &#39; :  {  it :  &#39; /articoli/:slug &#39; ,  es :  &#39; /art\u00edculos/:slug &#39; ,  en :  &#39; /blog/:slug &#39;  }  } }\n  import  i18nConfig  from  &#39; ./i18n.config &#39; // ... export  default  {  // ...  i18n :  {  locales :  LOCALES ,  defaultLocale :  DEFAULT_LOCALE ,  parsePages :  false ,  pages :  i18nConfig . pages ,  encodePaths :  false ,  vueI18n :  {  fallbackLocale :  DEFAULT_LOCALE ,  // ...  }  },  // ...\n  routes :  async  ()  =&gt;  {  const  client  =  new  BlogClient ()  let  routes  =  []  let  postsData  =  []  for  ( const  locale  of  LOCALES )  {  postsData  =  await  client . getAllPosts ( locale . code )  routes  =  routes . concat ( postsData . data . transPosts . map (( post )  =&gt;  {  return  {  route :  ` ${ locale . code  ===  DEFAULT_LOCALE  ?  &#39;&#39;  :  &#39; / &#39;  +  locale . code }${ i18nConfig . pages [ &#39; blog/_slug &#39; ][ locale . code ]. replace ( &#39; :slug &#39; ,  post . slug )} ` ,  payload :  post  }  }))  }  return  routes }\n  \u2139 Generating pages\u2714 Generated /blog/hello-world\u2714 Generated /it/articoli/ciao-mondo\u2714 Generated /es/art\u00edculos/hola-mundo\u2714 Generated /es/\u2714 Generated /it/\u2714 Generated /\u2728 Done in 33.82s.\n   In  this repository you can see the complete code of this tutorial, the result is deployed on  Netlify CDN at  https://eager-shockley-a415b7.netlify.app/. Netlify is one of my favourite services that provides cloud hosting for static websites, offering continuous deployment, free SSL, serverless functions, and more... The final code adds some missing features to the website, for example it adds authors support, uses some external components omitted here for simplicity and enables SEO option to the project to add metadata to pages (see  SEO section in nuxt-18n documentation).\n Another useful thing included in the final code is the sitemap, provided by the  Nuxt.js Sitemap module. Sitemap is easy to setup because it takes the  generate.routes value by default, so dynamic routes will be automagically included. The configurations is really straightforward, just add  @nuxtjs/sitemap at the end of  modules array section of your  nuxt.config.js file\n   export  default  {  // ...  sitemap :  {  hostname :  BASE_URL ,  gzip :  true ,  i18n :  DEFAULT_LOCALE  }  // ... }", "posttime": "2020-05-22 15:49:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u535a\u5ba2,\u6784\u5efa,jamstack,slug", "title": "\u5982\u4f55\u7528Nuxt.js\u6784\u5efaJAMStack\u591a\u8bed\u8a00\u535a\u5ba2", "title_en": "How to build a JAMStack multi language blog with Nuxt.js", "transed": 1, "url": "https://dev.to/astagi/how-to-build-a-jamstack-multi-language-blog-with-nuxt-js-3gah", "via": "", "real_tags": ["\u535a\u5ba2", "\u6784\u5efa", "jamstack", "slug"]}, {"category": "", "categoryclass": "", "imagename": "24e61a8175af932d24d6bfab5f86fc71.png", "infoid": 1003244, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u4eca\u5929\u518d\u6b21\u8bbf\u95ee\u6211\u4eec\u7684\u7ad9\u70b9(\u6211\u731c\uff0c\u5982\u679c\u60a8\u4e0d\u5355\u51fb\u5b83\uff0c\u5c06\u6c38\u8fdc\u8bbf\u95ee\u6211\u4eec\u7684\u7ad9\u70b9)\uff0c\u73b0\u5728\u60a8\u5c06\u5728\u7ad9\u70b9\u5e95\u90e8\u770b\u5230\u4e00\u6761\u901a\u77e5\uff0c\u8bf4\u660e\u6b64\u7ad9\u70b9\u4f7f\u7528Cookie\u3002(\u6ce8\uff1a\u5982\u679c\u60a8\u4eca\u5929\u8bbf\u95ee\u6211\u4eec\u7684\u7ad9\u70b9(\u6211\u731c\uff0c\u5982\u679c\u60a8\u4e0d\u70b9\u51fb\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u8bbf\u95ee)\uff0c\u60a8\u5c06\u5728\u7ad9\u70b9\u5e95\u90e8\u770b\u5230\u4e00\u6761\u901a\u77e5\uff0c\u8bf4\u660e\u6b64\u7ad9\u70b9\u4f7f\u7528Cookie\u3002)\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u4f7f\u7528\u7684\u662fcookie\u3002\u57fa\u672c\u4e0a\uff0c\u4efb\u4f55\u7f51\u7ad9\u90fd\u4f1a\u5c06cookie\u7528\u4e8e\u5404\u79cd\u6709\u7528\u7684\u3001\u975e\u53ef\u6015\u7684\u3001\u975e\u4fb5\u5165\u6027\u7684\u76ee\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4f7f\u7528cookie\u6765\u8ddf\u8e2a\u60a8\u7684\u504f\u597d(\u5305\u62ec\u5f53\u60a8\u5173\u95ed\u7f51\u7ad9\u4e0a\u7684\u5e7f\u544a\u65f6\uff0c\u6211\u4eec\u5141\u8bb8\u60a8\u514d\u8d39\u5173\u95ed)\u3002\u4e3a\u4e86\u786e\u4fdd\u8fd9\u4e9b\u5e7f\u544a\u6d88\u5931\uff0c\u6216\u8005\u4efb\u4f55\u5176\u4ed6\u504f\u597d\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u4f7f\u7528cookie\u3002\n\u5f53\u7136\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u5f88\u591a\u7f51\u7ad9\u5f39\u51fa\u6846\u901a\u77e5\u4f60\u4ed6\u4eec\u4f7f\u7528\u7684\u662fCookie\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u4e0e\u5404\u79cd\u5b8c\u5168\u6ca1\u6709\u610f\u4e49\u7684\u6b27\u76df\u6cd5\u5f8b\u6cd5\u89c4\u6709\u5173\uff0c\u8fd9\u4e9b\u6cd5\u5f8b\u6cd5\u89c4\u53ef\u80fd\u4f1a\u8ba9\u76d1\u7ba1\u673a\u6784\u611f\u89c9\u826f\u597d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u91c7\u53d6\u4efb\u4f55\u63aa\u65bd\u6765\u4fdd\u62a4\u4f60\u7684\u9690\u79c1\u3002\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u90a3\u4e9b\u4eba\u8ba4\u4e3a\uff0c\u901a\u8fc7\u7ee7\u7eed\u7559\u5728\u7f51\u7ad9\u4e0a\uff0c\u4f60\u5df2\u7ecf\u4e0e\u7f51\u7ad9\u8fbe\u6210\u4e86\u67d0\u79cd\u6cd5\u5f8b\u534f\u8bae(\u62dc\u6258\u2026\u2026)\u3002\u8fd9\u4e9bCookie\u901a\u77e5\u5f39\u51fa\u7a97\u53e3\u5bf9\u4efb\u4f55\u4eba\u90fd\u6ca1\u6709\u5e2e\u52a9\u3002\u5b83\u4eec\u4e0d\u4f1a\u7ed9\u4f60\u63d0\u4f9b\u7279\u522b\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4e5f\u4e0d\u4f1a\u628a\u4f60\u5e26\u5230\u4e00\u4e2a\u66f4\u4fdd\u62a4\u4f60\u5b9e\u9645\u9690\u79c1\u7684\u5730\u65b9\u3002\u5b83\u4eec\u53ea\u4f1a\u60f9\u607c\u4eba\u4eec\uff0c\u6240\u4ee5\u4eba\u4eec\u4f1a\u5ffd\u7565\u5b83\u4eec\uff0c\u79bb\u5f00\u7f51\u7ad9\uff0c\u6216\u8005(\u6700\u5e38\u89c1\u7684)\u53ea\u9700\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u5c06\u607c\u4eba\u7684\u6761\u5f62\u56fe\u6216\u65b9\u6846\u79fb\u5f00\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u9996\u5148\u770b\u5230\u4ed6\u4eec\u60f3\u8981\u67e5\u770b\u7684\u5185\u5bb9\u4e86\u3002(\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f)\u53ea\u9700\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u5373\u53ef\u5c06\u70e6\u4eba\u7684\u680f\u6216\u6846\u79fb\u5f00\uff0c\u4ece\u800c\u83b7\u5f97\u4ed6\u4eec\u60f3\u8981\u67e5\u770b\u7684\u5185\u5bb9\u3002\n\u8fd9\u5c31\u662f\u6240\u6709\u8fd9\u4e00\u5207\u6781\u5176\u611a\u8822\u7684\u4e8b\u60c5\uff1a\u4f60\u5df2\u7ecf\u63a7\u5236\u4e86\u5c40\u9762\u3002\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u66f2\u5947\uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u4f1a\u8ba9\u4f60\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63a7\u5236\u4f60\u4fdd\u7559\u7684\u66f2\u5947\uff0c\u4ee5\u53ca\u4f60\u5220\u9664\u5b83\u4eec\u7684\u65b9\u5f0f(\u9891\u7387)\u3002\u6709\u4e9b\u6d4f\u89c8\u5668\uff0c\u6bd4\u5982Mozilla\u7684Firefox Focus\u6d4f\u89c8\u5668\uff0c\u4e00\u65e6\u4f60\u5173\u95ed\u9875\u9762\uff0c\u5c31\u4f1a\u81ea\u52a8\u4e22\u5f03cookie(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5b83\u975e\u5e38\u9002\u5408\u79fb\u52a8\u6d4f\u89c8)\u3002\u5f53\u7136\uff0c\u5982\u679c\u60a8\u60f3\u5728\u67d0\u4e9b\u9875\u9762\u4e0a\u4fdd\u6301\u767b\u5f55\u72b6\u6001\uff0c\u6216\u8005\u60f3\u8ba9\u5b83\u4eec\u8bb0\u4f4f\u9996\u9009\u9879\uff0c\u90a3\u4e48\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u4e9b\u9875\u9762\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u6216\u66f4\u6539\u5404\u79cd\u8bbe\u7f6e\u3002\u5904\u7406\u997c\u5e72\u7684\u6743\u529b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u4f60\uff0c\u8fd9\u662f\u4ef6\u597d\u4e8b\u3002\u6211\u4eec\u79d1\u6280\u6ce5\u571f\u516c\u53f8\u559c\u6b22\u628a\u63a7\u5236\u63a8\u5230\u7f51\u7edc\u7684\u672b\u7aef\uff0c\u800c\u4e0d\u662f\u63a7\u5236\u5728\u4e2d\u95f4\u3002\n\u4f46\u662f\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u8ba9\u4e00\u4e9b\u9690\u79c1\u76d1\u7ba1\u8005\u89c9\u5f97\u4ed6\u4eec\u505a\u4e86\u4ec0\u4e48\uff0c\u6240\u4ee5\u4ed6\u4eec\u8981\u6c42\u5728\u7f51\u7ad9\u4e0a\u53d1\u5e03\u8fd9\u79cd\u6beb\u65e0\u610f\u4e49\u7684Cookie\u901a\u77e5\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u7684\u4e00\u5bb6\u5e7f\u544a\u63d0\u4f9b\u5546\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5305\u62ec\u8fd9\u6837\u7684cookie\u901a\u77e5\uff0c\u5426\u5219\u6211\u4eec\u5c06\u5931\u53bb\u4e3a\u6765\u81ea\u8c37\u6b4c\u7684\u4efb\u4f55\u5e7f\u544a\u63d0\u4f9b\u670d\u52a1\u7684\u80fd\u529b\uff0c\u56e0\u4e3a\u8c37\u6b4c(\u65e0\u8bba\u662f\u597d\u662f\u574f)\u90fd\u662f\u4e3b\u8981\u7684\u5e7f\u544a\u63d0\u4f9b\u5546\u4e4b\u4e00\u3002\u6211\u4eec\u6ca1\u6709\u5f97\u5230\u4e00\u4e2a\u660e\u786e\u7684\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u7edd\u5bf9\u9700\u8981\u6dfb\u52a0\u8fd9\u4e2a\u607c\u4eba\u7684\u901a\u77e5\uff0c\u8fd9\u5bf9\u4efb\u4f55\u4eba\u90fd\u6ca1\u6709\u771f\u6b63\u7684\u5e2e\u52a9\uff0c\u4f46\u6073\u6c42\u53d8\u5f97\u8d8a\u6765\u8d8a\u7edd\u671b\uff0c\u53d1\u51fa\u4e86\u5404\u79cd\u5404\u6837\u7684\u8b66\u544a\u3002\u6211\u4eec\u751a\u81f3\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u5b8c\u5168\u5173\u95ed\u5e7f\u544a(\u5f53\u7136\uff0c\u8fd9\u4f1a\u5e26\u6765\u67d0\u79cd\u7ecf\u6d4e\u4e0a\u7684\u51b2\u51fb)\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u8868\u660e\uff0c\u7531\u4e8e\u6211\u4eec\u4ecd\u5728\u4f7f\u7528\u5176\u4ed6\u7c7b\u578b\u7684cookie(\u540c\u6837\uff0c\u5305\u62eccookie\uff0c\u8868\u793a\u4e0d\u8981\u5411\u8fd9\u4e2a\u4eba\u663e\u793a\u4efb\u4f55\u5e7f\u544a)\uff0c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u90fd\u5fc5\u987b\u5f20\u8d34\u901a\u77e5\u3002\n\u6211\u4eec\u88ab\u544a\u77e5\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5728\u4e00\u5929\u5185\u53d1\u5e03cookie\u901a\u77e5\uff0c\u8c37\u6b4c\u5c06\u5728\u5168\u7403\u8303\u56f4\u5185\u5c4f\u853d\u6211\u4eec\u3002\u8001\u5b9e\u8bf4\uff0c\u6211\u751a\u81f3\u4e0d\u786e\u5b9a\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u3002\u4f46\u662f\uff0c\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u73b0\u5728\u5411\u60a8\u5c55\u793a\u4e00\u4e2acookie\u901a\u77e5\u3002\u8fd9\u65e2\u611a\u8822\u53c8\u70e6\u4eba\uff0c\u6211\u8ba4\u4e3a\u8fd9\u6839\u672c\u4e0d\u7b26\u5408\u4f60\u7684\u5229\u76ca\u3002\u53ea\u6709\u5f53\u5b83\u8ba9\u6211\u4eec\u7684\u4f34\u4fa3\u4e0d\u518d\u70e6\u6211\u4eec\u7684\u65f6\u5019\uff0c\u5b83\u624d\u7b26\u5408\u6211\u4eec\u7684\u5229\u76ca\u3002\u4f60\u4e0d\u89c9\u5f97\u597d\u4e9b\u4e86\u5417\uff1f\n\u60a8\u53ef\u4ee5\u5355\u51fb\u201c\u6536\u5230\u201d\u5e76\u4f7f\u5176\u6d88\u5931\u3002\u60a8\u4e0d\u80fd\u5355\u51fb\u5b83\uff0c\u5b83\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\u60a8\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u963b\u6b62cookie\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u7559\u5728\u6d4f\u89c8\u5668\u4e2d\u3002\u4f60\u53ef\u4ee5\u6bcf\u5929\u6216\u6bcf\u5468\u6254\u6389\u4f60\u7684\u997c\u5e72(\u6709\u65f6\u4e0d\u4e00\u5b9a\u662f\u4e00\u79cd\u574f\u505a\u6cd5)\u3002\u4f60\u63a7\u5236\u7740\u5c40\u9762\u3002\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u7ed9\u4f60\u770b\u901a\u77e5\uff0c\u6211\u4eec\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002", "note_en": "If you&#39;re visiting our site today (and I guess, forever into the future if you don&#39;t click &#34;got it&#34;) you will now see a notification at the bottom of the site saying that this site uses cookies. Of course, this site uses cookies. Basically any site uses cookies for all sorts of useful non-awful, non-invasive purposes. We use cookies, for example, to track your preferences (including when you  turn off ads on the site, which we let you do for free). In order to make sure those ads are gone, or whatever other preferences stay in place, we use cookies.\n For the last few years, of course, you&#39;ve probably seen a bunch of sites pop up boxes &#34;notifying&#34; you that they use cookies. For the most part, this has to do with various  completely pointless EU laws and regulations that probably make regulators feel good, but  do literally nothing to protect your privacy. Worst are the ones that suggest that by continuing on the site you&#39;ve made some sort of legal agreement with the site (come on...). These cookie notification pop ups  do not help anyone. They don&#39;t provide you particularly useful information, and they don&#39;t lead you to a place that is more protective of your actual privacy. They just annoy people, and so people ignore them, leave the site, or (most commonly) just &#34;click ok&#34; to get the annoying bar or box out of the way to get to the content they wanted to see in the first place.\n Here&#39;s the stupendously stupid thing about all of this:  you are already in control. If you don&#39;t like cookies, your browser gives you quite a lot of control over which ones you keep, and how (and how often) you get rid of them. Some browsers, like Mozilla&#39;s Firefox Focus browser, automatically discard cookies as soon as you close a page (it&#39;s great for mobile browsing, by the way). Of course, that leads to some issues if you want to remain logged in on certain pages, or to have them remember preferences, but for those you can use a different browser or change various settings. It&#39;s nice that the power to handle cookies is very much up to you. We here at Techdirt like it when the control is pushed out to the ends of the network, rather than controlled in the middle.\n But, because it makes some privacy regulators feel like they&#39;ve &#34;done something&#34;, they require such a pointless &#34;cookie notification&#34; on sites. Recently, one of our ad providers told us that we, too, needed to include such a cookie notification, or else we&#39;d lose the ability to serve any ads from Google, who (for better or for worse) is one of the major ad providers out there. We did not get a clear explanation for why we absolutely needed to add this annoying notification that doesn&#39;t really help anyone, but the pleas were getting more and more desperate, with all sorts of warnings. We even asked if we could just turn off the ads entirely (which would, of course, represent something of a financial hit) and they seemed to indicate that because we still use other types of cookies (again, including cookies to say &#34;don&#39;t show this person any ads&#34;), we had to put up the notification anyway.\n The last thing we were told is that if we didn&#39;t put up a cookie notification within a day, Google would &#34;block us globally.&#34; I&#39;m honestly not even sure what this means. But, either way, we&#39;re now showing you a cookie notification. It&#39;s silly and annoying and I don&#39;t think it serves your interests at all. It serves our interests only inasmuch as it gets our partner to stop bugging us. Don&#39;t you feel better?\n You can click &#34;got it&#34; and make it go away. You can not click it and it will stay. You can block cookies in your browser, or you can leave them. You can toss out your cookies every day or every week (not necessarily a bad practice sometimes). You&#39;re in control. But we have to show you the notification, and so we are.", "posttime": "2020-05-22 15:49:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "cookies,cookie", "title": "\u662f\u7684\uff0c\u6b64\u7ad9\u70b9\u4f7f\u7528Cookie\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u7ad9\u70b9\u90fd\u4f7f\u7528Cookie", "title_en": "Yes, This Site Uses Cookies, Because Nearly All Sites Use Cookies", "transed": 1, "url": "https://www.techdirt.com/articles/20200521/17152344550/yes-this-site-uses-cookies-because-nearly-all-sites-use-cookies-were-notifying-you-because-were-told-we-have-to.shtml", "via": "", "real_tags": ["cookies", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "c08d211680dd32a0294e0ae6a021a651.png", "infoid": 1003243, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Wireguard\u662fJason A.Donenfeld\u521b\u5efa\u7684\u4e0b\u4e00\u4ee3\u8de8\u5e73\u53f0VPN\u6280\u672f\uff0c\u5b83\u8fc5\u901f\u6210\u4e3a\u591a\u5e74\u6765\u4f7f\u7528\u7684\u5f3a\u5927\u3001\u590d\u6742\u7684IPSec\u548cSSL VPN\u89e3\u51b3\u65b9\u6848\u7684\u6d41\u884c\u66ff\u4ee3\u65b9\u6848\u3002\u4f5c\u4e3a\u5176\u6210\u529f\u7684\u8bc1\u660e\uff0c\u5b83\u6700\u8fd1\u88ab\u5408\u5e76\u5230\u4e86v5.6\u7684Linux\u5185\u6838\u4e2d\u3002\u5b83\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u5185\u6838\u6a21\u5757\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7528Go\u6216Rust\u7f16\u5199\u7684\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002\u5982\u679c\u60a8\u662fWireguard\u7684\u65b0\u624b\uff0c\u6211\u5efa\u8bae\u60a8\u67e5\u770b\u6982\u5ff5\u6027\u6982\u8ff0\uff0c\u56e0\u4e3a\u8fd9\u5c06\u6709\u52a9\u4e8e\u60a8\u9605\u8bfb\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u3002\nWireguard\u7684\u5929\u624d\u90e8\u5206\u4e4b\u4e00\u662f\u5b83\u7684\u5bc6\u94a5\u8def\u7531\u6982\u5ff5\u3002\u52a0\u5bc6\u5bc6\u94a5\u8def\u7531\u5b9a\u4e49\u4e86\u516c\u94a5\u548cIP\u5730\u5740\u5217\u8868(\u5141\u8bb8\u7684IP)\u4e4b\u95f4\u7684\u5173\u8054\u3002IP\u5730\u5740\u5217\u8868\u5141\u8bb8(\u5165\u7ad9)\u548c\u8def\u7531(\u51fa\u7ad9)Wireguard\u96a7\u9053\u5185\u7684\u6570\u636e\u5305\u3002\u6b64\u5173\u8054\u5305\u542b\u5bf9\u7b49\u9879\u7684\u603b\u6700\u4f4e\u914d\u7f6e\uff0c\u4ece\u96a7\u9053\u9a8c\u8bc1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e0d\u9700\u8981\u9759\u6001\u5bf9\u7b49\u9879\u7aef\u70b9IP\u5730\u5740\u3002\u8fd9\u5141\u8bb8\u5728\u4e24\u7aef\u8fdb\u884c\u5185\u7f6eIP\u6f2b\u6e38\uff0c\u524d\u63d0\u662f\u5bf9\u7b49\u5730\u5740\u4e0d\u4f1a\u540c\u65f6\u66f4\u6539\uff0c\u6216\u8005\u5728\u66f4\u6539\u65f6\u6709\u53ef\u9760\u7684\u4fe1\u4ee4\u65b9\u5f0f\u3002\nDNS\u53ef\u7528\u4e8e\u652f\u6301\u52a8\u6001\u5bfb\u5740\u7684\u5bf9\u7b49\u4f53\uff0c\u56e0\u4e3a\u5404\u79cdWireguard\u5b9e\u7528\u7a0b\u5e8f\u5728\u914d\u7f6e\u5bf9\u7b49\u4f53\u65f6\u5c06\u89e3\u6790DNS\u540d\u79f0\uff0c\u5e76\u4e14\u5b58\u5728\u53ef\u7528\u4e8e\u5b9a\u671f\u91cd\u65b0\u89e3\u6790\u5bf9\u7b49\u4f53\u5730\u5740\u7684\u652f\u6301\u811a\u672c\u3002\u592a\u68d2\u4e86\uff01\u8fd9\u542c\u8d77\u6765\u5f88\u6709\u5e0c\u671b\uff0c\u2026\u3002\u4f46\u662f\uff1a\n\u5982\u679c\u4e24\u4e2a\u5bf9\u7b49\u70b9\u90fd\u4f4d\u4e8e\u6211\u4eec\u65e0\u6cd5\u63a7\u5236\u7684NAT\u4e4b\u540e\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u5373\u6ca1\u6709\u9759\u6001\u7aef\u53e3\u8f6c\u53d1\u3002\n\u6211\u4eec\u5982\u4f55\u4e0d\u4ec5\u53d1\u73b0IP\u5730\u5740\uff0c\u800c\u4e14\u53d1\u73b0\u7aef\u53e3\uff1f\u73b0\u6709\u7684\u5b9e\u7528\u7a0b\u5e8f\u4e0d\u652f\u6301\u6b64\u529f\u80fd\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u7740\u624b\u5728\u4e24\u4e2a\u90fd\u4f4d\u4e8eNAT\u540e\u9762\u7684\u52a8\u6001\u5bfb\u5740\u5bf9\u7b49\u4f53\u4e4b\u95f4\u5efa\u7acbWireguard\u96a7\u9053\u3002\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u575a\u6301\u4f7f\u7528Wireguard\u6700\u7eaf\u7cb9\u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u73b0\u5728Linux\u5185\u6838\u9644\u5e26\u7684\u4ee3\u7801\u3002\u6211\u4eec\u4e0d\u60f3\u4ee5\u4efb\u4f55\u65b9\u5f0f\u6298\u8877\u5b83\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u76ee\u6807\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u53d8\u5f97\u975e\u5e38\u6709\u521b\u610f\u3002\n\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u4f1a\u60f3\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u4e2d\u5fc3\u8f90\u5c04\u578b\u5462\uff1f\u5f53\u7136\uff0c\u6211\u4eec\u53ea\u9700\u521b\u5efa\u4eceAlice\u548cBob\u5230\u9759\u6001\u5bfb\u5740\u3001\u65e0NAT\u7684\u4e2d\u592e\u96c6\u7ebf\u5668\u7684\u96a7\u9053\u5373\u53ef\u3002\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u53ef\u4ee5\u901a\u8fc7\u96c6\u7ebf\u5668\u8fdb\u884c\u8def\u7531\u3002\n\u8fd9\u662f\u4e00\u79cd\u5b8c\u5168\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u4e5f\u662f\u4eca\u5929\u5e7f\u6cdb\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u7528\u4f8b\uff0c\u6211\u4eec\u4e0d\u611f\u5174\u8da3\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\n\u5bf9\u4e8e\u8bb8\u591a\u5bf9\u7b49\u70b9\uff0c\u96c6\u7ebf\u5668\u6210\u4e3a\u5782\u76f4\u6269\u5c55\u74f6\u9888\u3002(\u60f3\u60f3\u7269\u8054\u7f51\u3001\u4e92\u8054\u6c7d\u8f66\u3001\u673a\u5668\u4eba\u7b49)\u3002\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6982\u8ff0\u4e86\u95ee\u9898\uff0c\u662f\u65f6\u5019\u5f00\u59cb\u7740\u624b\u4e86\u3002\u5982\u679c\u6211\u4eec\u8981\u5728Alice\u548cBob\u4e4b\u95f4\u76f4\u63a5\u5efa\u7acbWireguard\u96a7\u9053\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u7a7f\u8d8a\u4ed6\u4eec\u524d\u9762\u7684NAT\u3002\u7531\u4e8eWireguard\u5728UDP\u4e0a\u5de5\u4f5c\uff0c\u56e0\u6b64UDP\u6253\u5b54\u662f\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6700\u4f73\u9009\u62e9\u3002\nUDP\u6253\u6d1e\u5229\u7528\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u5927\u591a\u6570NAT\u5728\u5c06\u5165\u7ad9\u6570\u636e\u5305\u4e0e\u73b0\u6709\u201c\u8fde\u63a5\u201d\u8fdb\u884c\u5339\u914d\u65f6\u90fd\u662f\u5bbd\u677e\u7684\u3002\u8fd9\u4f7f\u6211\u4eec\u53ef\u4ee5\u91cd\u7528\u7aef\u53e3\u72b6\u6001\u6765\u91cd\u65b0\u8fdb\u5165\u3002\u5982\u679cAlice\u5411\u65b0\u4e3b\u673aCarol\u53d1\u9001UDP\u6570\u636e\u5305\uff0c\u5e76\u4e14Bob\u77e5\u9053\u8f6c\u6362\u671f\u95f4\u4f7f\u7528\u7684\u51fa\u7ad9\u6e90IP\u548cAlice\u7684NAT\u7aef\u53e3\uff0c\u5219Bob\u53ef\u4ee5\u901a\u8fc7\u5411\u6b64IP\uff1a\u7aef\u53e3\u5bf9(\u4e0b\u56fe\u4e2d\u76842.2.2.2\uff1a7777)\u53d1\u9001UDP\u6570\u636e\u5305\u5230\u8fbeAlice\u3002\n*\u6211\u4eec\u7684\u6253\u5b54\u793a\u4f8b\u63cf\u8ff0\u7684\u662f\u5168\u9525NAT\u3002\u5176\u4ed6\u4e0d\u592a\u5e38\u89c1\u7684NAT\u7c7b\u578b\u5b58\u5728\u6b64\u65b9\u6cd5\u4e0d\u8d77\u4f5c\u7528\u7684\u9650\u5236\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86UDP\u6253\u5b54\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5f88\u597d\uff0c\u4f46\u8fd9\u4ecd\u7136\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\nRFC5389 NAT\u4f1a\u8bdd\u7a7f\u8d8a\u5b9e\u7528\u7a0b\u5e8f(STUN)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u534f\u8bae\u6765\u56de\u7b54\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u957f\u7684RFC\uff0c\u6240\u4ee5\u6211\u4f1a\u5c3d\u6211\u6700\u5927\u7684\u52aa\u529b\u6765\u603b\u7ed3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSTUN\u4e0d\u662f\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u7684\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\uff1a\nSTUN\u672c\u8eab\u5e76\u4e0d\u80fd\u89e3\u51b3NAT\u7a7f\u8d8a\u95ee\u9898\u3002\u76f8\u53cd\uff0cSTUN\u5b9a\u4e49\u4e86\u4e00\u79cd\u53ef\u4ee5\u5728\u66f4\u5927\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u4f7f\u7528\u7684\u5de5\u5177\u3002\u672f\u8bed\u201cSTUN\u7528\u6cd5\u201d\u7528\u4e8e\u4efb\u4f55\u4f7f\u7528STUN\u4f5c\u4e3a\u7ec4\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\u3002\nSTUN\u662f\u4e00\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u534f\u8bae\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cAlice\u5145\u5f53\u5ba2\u6237\u7aef\uff0cCarol\u5145\u5f53\u670d\u52a1\u5668\u3002Alice\u5411Carol\u53d1\u9001STUN\u7ed1\u5b9a\u8bf7\u6c42\u3002\u5f53\u7ed1\u5b9a\u8bf7\u6c42\u901a\u8fc7Alice\u7684NAT\u65f6\uff0c\u6e90IP\uff1aport\u5c06\u88ab\u91cd\u5199\u3002\u4e00\u65e6Carol\u6536\u5230\u7ed1\u5b9a\u8bf7\u6c42\uff0c\u5979\u5c31\u4f1a\u5c06\u7b2c3\u5c42\u548c\u7b2c4\u5c42\u62a5\u5934\u4e2d\u7684\u6e90ip\uff1aport\u590d\u5236\u5230\u7ed1\u5b9a\u54cd\u5e94\u7684\u6709\u6548\u8d1f\u8f7d\u4e2d\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9Alice\u3002\u7ed1\u5b9a\u54cd\u5e94\u901a\u8fc7Alice\u7684NAT\u4f20\u56de\uff0c\u6b64\u65f6\u76ee\u6807ip\uff1aport\u5c06\u88ab\u91cd\u5199\uff0c\u4f46\u6709\u6548\u8d1f\u8f7d\u4fdd\u6301\u4e0d\u53d8\u3002Alice\u6536\u5230\u7ed1\u5b9a\u54cd\u5e94\uff0c\u5e76\u77e5\u9053\u6b64\u5957\u63a5\u5b57\u7684\u5916\u90e8IP\uff1aPort\u4e3a2.2.2.2\uff1a7777\u3002\n\u6b63\u5982\u524d\u9762\u6307\u51fa\u7684\uff0cSTUN\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u89e3\u51b3\u65b9\u6848\u3002STUN\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728NAT\u4e4b\u540e\u7406\u89e3\u5176\u5916\u90e8IP\uff1a\u7aef\u53e3\u7684\u673a\u5236\uff0c\u4f46STUN\u4e0d\u63d0\u4f9b\u5411\u76f8\u5173\u65b9\u53d1\u9001\u4fe1\u53f7\u7684\u65b9\u6cd5\u3002\u5982\u679c\u6211\u4eec\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u9700\u8981NAT\u7a7f\u8d8a\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cSTUN\u662f\u6211\u4eec\u5e94\u8be5\u8003\u8651\u7684\u7ec4\u4ef6\u3002\u6211\u4eec\u4e0d\u662f\u5728\u7f16\u5199Wireguard\uff0c\u5b83\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u5b83(\u53c2\u89c1\u5173\u4e8e\u4fdd\u6301\u5176\u6e90\u4ee3\u7801\u4e0d\u53d8\u7684\u76ee\u6807)\u3002\u90a3\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u4eceSTUN\u4e2d\u5438\u53d6\u4e00\u4e9b\u6982\u5ff5\uff0c\u5e76\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u76ee\u6807\u3002\u6211\u4eec\u663e\u7136\u9700\u8981\u4e00\u53f0\u5916\u90e8\u7684\u9759\u6001\u5bfb\u5740\u4e3b\u673a\u6765\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u7a7f\u900f\u7684UDP\u6f0f\u6d1e\u3002\n\u65e9\u57282016\u5e748\u6708\uff0cWireguard\u7684\u521b\u5efa\u8005\u5728Wireguard\u90ae\u4ef6\u5217\u8868\u4e0a\u5206\u4eab\u4e86\u4e00\u4e2aNAT\u6253\u6d1ePoC/Example\u3002Jason\u7684\u793a\u4f8b\u5305\u542b\u4e00\u4e2a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u3002\u5ba2\u6237\u673a\u6253\u7b97\u4e0eWireguard\u4e00\u8d77\u8fd0\u884c\uff0c\u800c\u670d\u52a1\u5668\u8fd0\u884c\u5728\u9759\u6001\u5bfb\u5740\u7684\u4e3b\u673a\u4e0a\uff0c\u7528\u4e8eIP\uff1a\u7aef\u53e3\u53d1\u73b0\u3002\u5ba2\u6237\u7aef\u4f7f\u7528\u539f\u59cb\u5957\u63a5\u5b57\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\uff1a\n/*\u6211\u4eec\u4f7f\u7528\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u56e0\u6b64WireGuard\u63a5\u53e3\u53ef\u4ee5\u5b9e\u9645\u62e5\u6709\u5b9e\u9645\u5957\u63a5\u5b57\u3002*/SOCK=SOCKET(AF_INET\uff0cSOCK_RAW\uff0cIPPROTO_UDP)\uff1bIF(SOCK&lt\uff1b0){perror(&#34\uff1bsocket&#34\uff1b)\uff1breturn errno\uff1b}\u3002\n\u6b63\u5982\u8bc4\u8bba\u4e2d\u6307\u51fa\u7684\uff0cWireguard\u62e5\u6709\u201c\u771f\u6b63\u7684\u63d2\u5ea7\u201d\u3002\u901a\u8fc7\u4f7f\u7528\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u5ba2\u6237\u7aef\u80fd\u591f\u5728\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u6b3a\u9a97Wireguard\u4f7f\u7528\u7684\u6e90\u7aef\u53e3\u3002\u8fd9\u786e\u4fdd\u4e86\u5728\u670d\u52a1\u5668\u4e0a\u770b\u5230\u7684\u6e90IP\uff1a\u7aef\u53e3\u5728\u6253\u56de\u65f6\u5c06\u6620\u5c04\u56deNAT\u4e0a\u7684Wireguard\u5957\u63a5\u5b57\u3002\n\u5ba2\u6237\u7aef\u5728\u5176\u539f\u59cb\u5957\u63a5\u5b57\u4e0a\u4f7f\u7528\u4f20\u7edf\u7684BPF\u8fc7\u6ee4\u5668\u6765\u8fc7\u6ee4\u4ece\u670d\u52a1\u5668\u53d1\u5f80Wireguard\u7aef\u53e3\u7684\u56de\u590d\uff1a\nstatic void Apply_bpf(int sock\uff0cuint16_t port\uff0cuint32_t ip){struct sock_filter[]={bpf_stmt(bpf_ld+bpf_W+bpf_ABS\uff0c12/*src ip*/)\uff0cbpf_jpp(bpf_jmp+bpf_jeq+bpf_K\uff0cip\uff0c0\uff0c5)\uff0cbpf_stmt(bpf_ld+bpf_H+bpf_ABS\uff0c0,\u30023)\uff0cBPF_STMT(BPF_LD+BPF_H+BPF_ABS\uff0c22/*DST port*/)\uff0cBPF_JUMP(BPF_JMP+BPF_JEQ+BPF_K\uff0cport\uff0c0\uff0c1)\uff0cBPF_STMT(BPF_RET+BPF_K\uff0c-1)\uff0cBPF_STMT(BPF_RET+BPF_K\uff0c0)}\uff1bstruct sock_fprog filter_prog={.len=sizeof(Filter)/sizeof(filter[0])\uff0c.filter=filter}\uff1bif(setsockopt(sock\uff0cSOL_SOCKET\uff0cSO_ATTACH_FILTER\uff0c&amp\uff1bfilter_prog\uff0csizeof(Filter_Prog))&lt\uff1b0){perror(&#34\uff1bsetsockopt(Bpf)&#34\uff1b)\uff1bexit(Errno)\uff1b}}\u3002\n\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u901a\u4fe1\u7684\u6570\u636e\u5728\u6570\u636e\u5305\u548c\u56de\u590d\u7ed3\u6784\u4e2d\u5b9a\u4e49\uff1a\nstruct{struct udphdr udp\uff1buint8_t my_pubkey[32]\uff1buint8_t They_pubkey[32]\uff1b}__attribute__((Pack))Packet={.udp={.len=htons(sizeof(Packet))\uff0c.est=htons(Port)}}\uff1bstruct{struct iphdr iphdr\uff1bstruct udphdr udp\uff1buint32_t ip\uff1buint16_t port\n\u5ba2\u6237\u7aef\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u904d\u5386\u5df2\u914d\u7f6e\u7684Wireguard\u5bf9\u7b49\u70b9(WG show&lt\uff1binterface&gt\uff1b\u5bf9\u7b49\u70b9)\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5bf9\u7b49\u70b9\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\u3002my_pubkey\u548cits_pubkey\u5b57\u6bb5\u88ab\u9002\u5f53\u586b\u5145\u3002\u5f53\u670d\u52a1\u5668\u63a5\u6536\u5230\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u6570\u636e\u5305\u65f6\uff0c\u5b83\u4f7f\u7528my_pubkey\u5b57\u6bb5\u9488\u5bf9\u7531\u516c\u94a5\u952e\u63a7\u7684\u5bf9\u7b49\u4f53\u7684\u5185\u5b58\u4e2d\u7684\u8868\u6267\u884c\u6761\u76ee\u7684\u5411\u4e0a\u63d2\u5165\u3002\u7136\u540e\uff0c\u5b83\u4f7f\u7528thems_pubkey\u5b57\u6bb5\u5bf9\u540c\u4e00\u4e2a\u8868\u6267\u884c\u67e5\u627e\u3002\u5982\u679c\u5728\u7b2c\u4e8c\u6b21\u67e5\u627e\u4e2d\u627e\u5230\u6761\u76ee\uff0c\u5219\u5bf9\u7b49\u4f53\u7684IP\uff1aPORT\u5c06\u5728\u56de\u590d\u4e2d\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\u5f53\u5ba2\u6237\u7aef\u6536\u5230\u56de\u590d\u65f6\uff0cIP\u548c\u7aef\u53e3\u5b57\u6bb5\u5c06\u88ab\u89e3\u5305\uff0c\u5e76\u914d\u7f6e\u5bf9\u7b49\u65b9\u7684\u7aef\u70b9\u5730\u5740(WG\u8bbe\u7f6e&lt\uff1binterface&gt\uff1b\u5bf9\u7b49\u65b9&lt\uff1b\u5bc6\u94a5&gt\uff1b\u9009\u9879.&gt\uff1b\u7aef\u70b9&lt\uff1bIP&gt\uff1b\uff1a&lt\uff1b\u7aef\u53e3&gt\uff1b)\u3002\n\u6761\u76ee\u7ed3\u6784\u4e2d\u7684IP\u548c\u7aef\u53e3\u5b57\u6bb5\u7531\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u7684\u6570\u636e\u5305\u4e2d\u7684IP\u548cUDP\u62a5\u5934\u586b\u5145\u3002\u6bcf\u6b21\u5ba2\u6237\u7aef\u8bf7\u6c42\u5bf9\u7b49\u8bbe\u5907\u7684IP\u548c\u7aef\u53e3\u4fe1\u606f\u65f6\uff0c\u90fd\u4f1a\u5237\u65b0\u5bf9\u7b49\u8bbe\u5907\u8868\u4e2d\u81ea\u5df1\u7684IP\u548c\u7aef\u53e3\u4fe1\u606f\u3002\n\u793a\u4f8b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u5f88\u597d\u5730\u8bf4\u660e\u4e86Wireguard\u5982\u4f55\u6210\u4e3aUDP\u6253\u5b54\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5728\u8fd9\u4e00\u77e5\u8bc6\u7684\u57fa\u7840\u4e0a\uff0c\u5411\u66f4\u9002\u5408\u73b0\u5b9e\u4e16\u754c\u7684\u4e1c\u897f\u9760\u62e2\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8ba9\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ee5\u4e00\u79cd\u8de8\u5e73\u53f0\u4e14\u4e0d\u9700\u8981\u7528\u4e8eIP\uff1a\u7aef\u53e3\u53d1\u73b0\u7684\u81ea\u5b9a\u4e49\u6709\u7ebf\u534f\u8bae\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u8be5\u5c3d\u53ef\u80fd\u7b80\u5355\u3002\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u7b49\u70b9\u90fd\u53ef\u4ee5\u6253\u5f00\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u65e0\u6cd5\u5229\u7528BPF\u7b5b\u9009\u5668\u3002\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u8c03\u8bd5\u5de5\u5177\uff0c\u81ea\u5b9a\u4e49\u8fde\u63a5\u534f\u8bae\u5f88\u96be\u8c03\u8bd5\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4f7f\u7528\u73b0\u6709\u7684\u3001\u5e7f\u6cdb\u4f7f\u7528\u7684\u6210\u719f\u5de5\u5177\u3002\n\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u4e00\u4e2a\u793a\u4f8b\u5ba2\u6237\u673a\uff0c\u8be5\u5ba2\u6237\u673a\u4f7f\u7528\u7279\u5b9a\u4e8eLinux\u7684\u7f51\u7edc\u7279\u6027\u4eceWireguard\u62e5\u6709\u7684\u5957\u63a5\u5b57\u6b3a\u9a97\u6570\u636e\u5305\u3002\u6211\u4eec\u4e0d\u662f\u56f4\u7ed5Wireguard\u6784\u5efa\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u6765\u6253\u5f00\u548c\u89c2\u5bdfNAT\u4e0a\u7684IP\uff1a\u7aef\u53e3\u6620\u5c04\uff0c\u800c\u662f\u53ea\u4f7f\u7528Wireguard\u3002Wireguard\u96a7\u9053\u662f\u6781\u5176\u8f7b\u91cf\u7ea7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4e3aIP\uff1a\u7aef\u53e3\u53d1\u73b0\u6784\u5efa\u5230\u6211\u4eec\u7684\u9759\u6001\u5bfb\u5740\u5bf9\u7b49\u4f53\u7684\u96a7\u9053\u3002\n\u4e0a\u56fe\u53ef\u80fd\u4f1a\u8ba9\u60a8\u60f3\u8d77\u8f74\u8f90\u56fe\u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u4e0d\u6253\u7b97\u901a\u8fc7\u6ce8\u518c\u8868\u5bf9\u7b49\u4f53\u8fdb\u884c\u8def\u7531\u3002\u6ce8\u518c\u8868\u5bf9\u7b49\u9879\u6709\u4e00\u4e2aIPv4\u5730\u5740\u4e3a10.0.0.254/32\u7684Wireguard\u63a5\u53e3\u3002\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u7684\u914d\u7f6e\u5df2\u66f4\u65b0\u4ee5\u53cd\u6620\u8fd9\u4e00\u70b9\u3002\u5b83\u4eec\u5c06\u53ea\u63a5\u53d7\u6765\u81ea10.0.0.254/32\u7684\u6570\u636e\u5305\uff0c\u5e76\u901a\u8fc7\u6b64\u5bf9\u7b49\u4f53\u5c06\u6570\u636e\u5305\u8def\u7531\u523010.0.0.254/32\u3002\n\u4e0e\u6ce8\u518c\u8868\u5bf9\u7b49\u4f53\u7684Wireguard\u96a7\u9053\u5728Alice\u548cBob\u7684NAT\u4e0a\u6253\u5f00\u4e86\u4e00\u4e2a\u6d1e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u5f7c\u6b64\u8fde\u63a5\u3002\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u4ece\u6ce8\u518c\u8868\u5bf9\u7b49\u4f53\u67e5\u8be2\u8fd9\u4e9b\u6d1e\u7684IP\uff1a\u7aef\u53e3\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528DNS\u534f\u8bae\u3002DNS\u76f8\u5bf9\u7b80\u5355\u3001\u6210\u719f(\u5927\u7ea61987\u5e74)\u3001\u8de8\u5e73\u53f0\uff0c\u5e76\u4e14\u78b0\u5de7\u5b9a\u4e49\u4e86\u4e00\u79cd\u8bb0\u5f55\u7c7b\u578b\uff0c\u5373SRV(\u670d\u52a1)\u8bb0\u5f55\uff0c\u7528\u4e8e\u5b9a\u4f4d\u670d\u52a1\uff0c\u5373\u8bc6\u522b\u5176IP\u5730\u5740\u548c\u7aef\u53e3\u3002\u57fa\u4e8eDNS\u7684\u670d\u52a1\u53d1\u73b0RFC6763\u4f7f\u7528\u5177\u4f53\u7684\u7ed3\u6784\u548c\u67e5\u8be2\u6a21\u5f0f\u5bf9\u6b64\u8bb0\u5f55\u7c7b\u578b\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u7528\u4e8e\u53d1\u73b0\u7ed9\u5b9a\u57df\u4e0b\u7684\u670d\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u7528\u4f8b\u4e2d\u5229\u7528\u8fd9\u4e9b\u8bed\u4e49\u3002\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u9009\u5b9a\u4e86\u670d\u52a1\u53d1\u73b0\u534f\u8bae\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u5c06\u5176\u4e0eWireguard\u8fde\u63a5\u8d77\u6765\u3002CoreDNS\u662f\u4e00\u4e2a\u7528Go\u7f16\u5199\u7684\u57fa\u4e8e\u63d2\u4ef6\u7684DNS\u670d\u52a1\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u6bd5\u4e1a\u7684CNCF\u9879\u76ee\uff0c\u6070\u597d\u662fKubernetes\u7684DNS\u670d\u52a1\u5668\u3002\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u63a5\u53d7DNS-SD\u67e5\u8be2\u5e76\u8fd4\u56de\u76f8\u5173Wireguard\u5bf9\u7b49\u70b9\u4fe1\u606f\u7684CoreDNS\u63d2\u4ef6\u3002\u8bb0\u5f55\u540d\u79f0\u5c06\u4f7f\u7528\u516c\u94a5(\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4e3aAlice&amp\uff1bBob)\uff0c\u800cjordanWhited.net\u5c06\u7528\u4f5c\u533a\u57df\u3002\u5bf9\u4e8e\u90a3\u4e9b\u719f\u6089BIND\u6837\u5f0f\u533a\u57df\u6587\u4ef6\u7684\u4eba\u6765\u8bf4\uff0c\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\u7684\u533a\u57df\u6570\u636e\uff1a\n_wireguard._udp in Ptr alice._wireguard._udp.jordanwhited.net._wireguard._udp in Ptr bob._wireguard._udp.jordanwhited.net.alice._wireguard._udp in SRV 0 1 7777 alice.jordanWhited.net.alice in A 2.2.2.2 bob._wireguard._udp in SRV 0 1 8888 bob.jordanWhited.net.bob in A 3.3.3.3\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u5047\u540dAlice\u548cBob\u6765\u4ee3\u66ffWireguard\u516c\u94a5\u3002Wireguard\u516c\u94a5\u5728\u9700\u8981\u6587\u672c\u8868\u793a(\u914d\u7f6e\u6587\u4ef6\u3001\u5b9e\u7528\u7a0b\u5e8f\u8f93\u51fa\u7b49\u2026)\u7684\u5730\u65b9\u91c7\u7528base64\u7f16\u7801\u3002\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u6709\u4e00\u4e2a44\u5b57\u8282\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662fAlice\uff1a\nBase64\u7f16\u7801\u88ab\u8bbe\u8ba1\u4e3a\u4ee5\u5141\u8bb8\u4f7f\u7528\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u4f46\u4e0d\u9700\u8981\u4eba\u7c7b\u53ef\u8bfb\u7684\u5f62\u5f0f\u8868\u793a\u4efb\u610f\u516b\u4f4d\u5b57\u8282\u5e8f\u5217\u3002\nDNS\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u5177\u6709\u7531\u4ee5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u5904\u7406\u7684\u96f6\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e[STD13\u3001RFC1591\u3001RFC2606]\u7ec4\u6210\u7684\u540d\u79f0\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cBase32\u5728\u751f\u6210\u7a0d\u957f\u4e00\u4e9b\u7684\u5b57\u7b26\u4e32(56\u5b57\u8282)\u7684\u540c\u65f6\uff0c\u5c06\u5141\u8bb8\u6211\u4eec\u5728DNS\u5185\u8868\u793aWireguard\u516c\u94a5\uff1a\nBase32\u7f16\u7801\u88ab\u8bbe\u8ba1\u4e3a\u4ee5\u9700\u8981\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u4f46\u4e0d\u9700\u8981\u4eba\u7c7b\u53ef\u8bfb\u7684\u5f62\u5f0f\u8868\u793a\u4efb\u610f\u516b\u4f4d\u5b57\u8282\u5e8f\u5217\u3002\n\u60a8\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528base32\u548cbase64\u5b9e\u7528\u7a0b\u5e8f\u5728\u7f16\u7801\u683c\u5f0f\u4e4b\u95f4\u6765\u56de\u8f6c\u6362\u3002\u4f8b\u5982\uff1a\n$WG genkey|WG pubkey&gt\uff1bpub.txt$cat pub.txt O9rAAiO5qTejOEtFbsQhCl745ovoM9coTGiprFTaHUE=$cat pub.txt|base64-D|base32 HPNMAARDXGUTPIZYJNCW5RBBBJPPRZUL5AZ5OKCMNCU2YVG2DVAQ=$cat pub.txt|base64-D|base32|base32-d|base64 O9rAiO5\u3002\nCoreDNS\u6709\u5173\u4e8e\u7f16\u5199\u63d2\u4ef6\u7684\u6587\u6863\u3002\u9664\u4e86\u8bbe\u7f6e\u548c\u914d\u7f6e\u89e3\u6790\u4e4b\u5916\uff0c\u63d2\u4ef6\u8fd8\u5fc5\u987b\u5b9e\u73b0plugin.Handler\u63a5\u53e3\uff1a\n\u6211\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2aCoreDNS\u63d2\u4ef6\uff0c\u901a\u8fc7\u540d\u4e3awgsd\u7684DNS-SD\u8bed\u4e49\u63d0\u4f9bWireguard\u5bf9\u7b49\u70b9\u4fe1\u606f\u3002wgsd\u662f\u4e00\u4e2a\u201c\u5916\u90e8\u201d\u63d2\u4ef6\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u542f\u7528\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e86\u4e24\u79cd\u52a0\u8f7d\u5916\u90e8\u63d2\u4ef6\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7f16\u8bd1\u65f6\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u65b9\u6cd5\u3002\n$diff-u plugin.cfg.orig plugin.cfg-plugin.cfg.orig 2020-05-13 20\uff1a32\uff1a56.000000000-0700+plugin.cfg2020-05-13 12\uff1a24\uff1a22.000000000-0700@@-54\uff0c6+54\uff0c7@@K8S_EXTERNAL\uff1aK8S_EXTERNAL Kubernetes\uff1aKubernetes file\uff1afile+wgsd\uff1agithub.com/jwhited\u3002\n\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7aef\u70b93.3.3.3\uff1a8888\u914d\u7f6e\u4e86\u5355\u4e2aWireguard\u5bf9\u7b49\u8bbe\u5907\uff1a\n$digg@127.0.0.1_wireguard._udp.jordanWhited.net\u3002ptr+Noall+Answer+Additional\uff1b&lt\uff1b&lt\uff1b&gt\uff1bdig 9.10.6\uff1b&lt\uff1b&gt\uff1b&gt\uff1b@127.0.0.1_wireguard._udp.jordanWhited.net\u3002ptr+Noall+Answer+Additional\uff1b(\u627e\u52301\u53f0\u670d\u52a1\u5668)\uff1b\uff1b\u5168\u5c40\u9009\u9879\uff1a+cmd_wireguard._udp.jordanWhited.net\u30020 in ptr TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q=._wireguard._udp.jordanWhited.net.\u3002\n$dig@127.0.0.1 TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q=._wireguard._udp.jordanWhited.net.\u3002srv+Noall+Answer+Additional\uff1b&lt\uff1b&lt\uff1b&gt\uff1bdig 9.10.6\uff1b&lt\uff1b&gt\uff1b&gt\uff1b@127.0.0.1 TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q=._wireguard._udp.jordanWhited.net\u3002srv+noall+Answer+Additional\uff1b(\u627e\u52301\u53f0\u670d\u52a1\u5668)\uff1b\uff1b\u5168\u5c40\u9009\u9879\uff1a+cmd tl5glqumg5vatrrtyg57hydce55wnfhx7wadwwzhmno4njly4a7q=._wireguard._udp.jordanWhited.net\u30020\u5728srv 0 0 8888 TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q=.jordanWhited.net.\u3002TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q=.jordanWhited.net.\u3002A 3.3.3.3\u4e2d\u76840\u3002\n$sudo WG show utun4 peersmvplwow3agnGM8G78+BiJ3tmlPf9gDtbJ2NdxqV44D8=$digg@127.0.0.1_wireguard._udp.jordanWhited.net.\u3002Ptr+Short|Cut-d\u3002-f1|base32-d|base64mvplwow3agnGM8G78+BiJ3tmlPf9gDtbJ2NdxqV44D8=\u3002\nAlice\u9996\u5148\u4e0e\u6ce8\u518c\u8868\u5efa\u7acb\u96a7\u9053\u3002\u9c8d\u52c3\u540c\u65f6\u505a\u7740\u540c\u6837\u7684\u4e8b\u60c5\u3002\u63a5\u4e0b\u6765\uff0cAlice\u4e0a\u7684wgsd-client(\u4ecd\u6709\u5f85\u5b9e\u73b0)\u67e5\u8be2\u5728\u6ce8\u518c\u8868\u4e0a\u8fd0\u884c\u7684CoreDNS\u63d2\u4ef6(Wgsd)\u3002\u8be5\u63d2\u4ef6\u4eceWireguard\u68c0\u7d22Bob\u7684\u7aef\u70b9\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9wgsd-client\u3002\u7136\u540e\uff0cwgsd-client\u8bbe\u7f6eBob\u7684\u7aef\u70b9\u503c\u3002\u6700\u540e\uff0c\u5728Alice\u548cBob\u4e4b\u95f4\u76f4\u63a5\u5efa\u7acbWireguard\u96a7\u9053\u3002\n\u5bf9\u201c\u5df2\u5efa\u7acb\u7684\u96a7\u9053\u201d\u7684\u4efb\u4f55\u5f15\u7528\u4ec5\u4ec5\u610f\u5473\u7740\u53d1\u751f\u4e86\u63e1\u624b\uff0c\u5e76\u4e14\u5206\u7ec4\u53ef\u4ee5\u5728\u5bf9\u7b49\u4f53\u4e4b\u95f4\u6d41\u52a8\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136Wireguard\u786e\u5b9e\u6709\u63e1\u624b\u673a\u5236\uff0c\u4f46\u5b83\u6bd4\u60a8\u60f3\u8c61\u7684\u66f4\u50cf\u662f\u4e00\u79cd\u8fde\u63a5\u8f83\u5c11\u7684\u534f\u8bae\uff1a\n\u4efb\u4f55\u5b89\u5168\u534f\u8bae\u90fd\u9700\u8981\u4fdd\u6301\u67d0\u79cd\u72b6\u6001\uff0c\u56e0\u6b64\u6700\u521d\u53ea\u9700\u975e\u5e38\u7b80\u5355\u7684\u63e1\u624b\u5373\u53ef\u5efa\u7acb\u7528\u4e8e\u6570\u636e\u4f20\u8f93\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002\u8fd9\u79cd\u63e1\u624b\u6bcf\u9694\u51e0\u5206\u949f\u8fdb\u884c\u4e00\u6b21\uff0c\u4ee5\u4fbf\u4e3a\u5b8c\u7f8e\u7684\u524d\u5411\u4fdd\u5bc6\u63d0\u4f9b\u65cb\u8f6c\u5bc6\u94a5\u3002\u5b83\u662f\u57fa\u4e8e\u65f6\u95f4\u5b8c\u6210\u7684\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u5148\u524d\u6570\u636e\u5305\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u5b83\u65e8\u5728\u4f18\u96c5\u5730\u5904\u7406\u6570\u636e\u5305\u4e22\u5931\u3002\nWGSD-Client\u8d1f\u8d23\u4f7f\u5bf9\u7b49\u7aef\u70b9\u914d\u7f6e\u4fdd\u6301\u6700\u65b0\u3002\u5b83\u68c0\u7d22\u5df2\u914d\u7f6e\u5bf9\u7b49\u9879\u7684\u5217\u8868\uff0c\u67e5\u8be2CoreDNS\u4ee5\u67e5\u627e\u5339\u914d\u7684\u516c\u94a5\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u6bcf\u4e2a\u5bf9\u7b49\u9879\u7684\u7aef\u70b9\u503c\u3002\u6211\u4eec\u6700\u521d\u7684\u5b9e\u73b0\u6253\u7b97\u901a\u8fc7cron\u6216\u7c7b\u4f3c\u7684\u8c03\u5ea6\u673a\u5236\u5b9a\u671f\u8fd0\u884c\u3002\u5b83\u4ee5\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u68c0\u67e5\u6240\u6709\u5bf9\u7b49\u70b9\u4e00\u6b21\uff0c\u7136\u540e\u9000\u51fa\uff0c\u5b83\u4e0d\u662f\u5b88\u62a4\u8fdb\u7a0b\u3002\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u6539\u8fdb\u8fd9\u4e00\u70b9\uff0c\u4f46\u73b0\u5728\u8ba9\u6211\u4eec\u4ece\u7b80\u5355\u7684\u4e8b\u60c5\u5f00\u59cb\u3002\n\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u6d4b\u8bd5\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e86\u3002\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5c06\u5728NAT\u540e\u9762\u6709Alice\u548cBob\uff0c\u800c\u6ca1\u6709NAT\u7684\u6ce8\u518c\u8868\u5bf9\u7b49\u4f53\u3002Alice\u8fde\u63a5\u5230LTE\u63d0\u4f9b\u5546\uff0cBob\u8fde\u63a5\u5230\u4f4f\u5b85ISP\uff0cRegistry\u662fEC2\u5b9e\u4f8b\u3002\u4ee5\u4e0b\u662f\u6240\u6709\u4e09\u4e2a\u5bf9\u7b49\u70b9\u7684\u516c\u94a5\uff1a\n[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]\uff1a~$sudo cat/etc/wireguard/utun4.conf[\u63a5\u53e3]\u5730\u5740=10.0.0.1/32 PrivateKey=0CtieMOYKa2RduPbJss/Um9BiQPSjgvHW+B7Mor5OnE=Listenport=51820#\u6ce8\u518c\u8868[\u5bf9\u7b49]\u516c\u94a5=JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDP\u3002)\u4fa6\u542c\u7aef\u53e3\uff1a51820Peer\uff1aJeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY=ENDPOINT\uff1a4.4.4.4\uff1a51820\u5141\u8bb8IPS\uff1a10.0.0.254/32\u6700\u65b0\u63e1\u624b\uff1a48\u79d2\u524d\u4f20\u8f93\uff1a1.67KiB\u5df2\u6536\u5230\uff0c11.99 KiB\u53d1\u9001\u6301\u4e45\u4fdd\u6301\u8fde\u63a5\uff1a\u6bcf5\u79d2\uff1asyKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js=\u5141\u8bb8\u7684IPS\uff1a10.0.0.2/32\u6301\u4e45\u4fdd\u6301\u8fde\u63a5\uff1a\u6bcf5\u79d2\u3002\n[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]\uff1a~$sudo cat/etc/wireguard/wg0.conf[sudo]jwhited\u7684\u5bc6\u7801\uff1a[interface]address=10.0.0.2/32 PrivateKey=cIN5NqeWcbreXoaIhR/4wgrrQJGym/E7WrTtMtK8Gc=listenport=51820#\u6ce8\u518c\u8868[\u5bf9\u7b49]\u516c\u94a5=JeZlz14G8tg1Bqhhr\u3002syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js=\u79c1\u94a5\uff1a(\u9690\u85cf)\u4fa6\u542c\u7aef\u53e3\uff1a51820\u5bf9\u7b49\uff1aJeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY=\u7aef\u70b9\uff1a4.4.4.4\uff1a51820\u5141\u8bb8\u7684IPS\uff1a10.0.0.254/32\u6700\u65b0\u63e1\u624b\uff1a26\u79d2\u524d\u4f20\u8f93\uff1a1.54KiB\u5df2\u63a5\u6536\u300211.75 KiB\u53d1\u9001\u6301\u4e45\u4fdd\u6301\u8fde\u63a5\uff1a\u6bcf5\u79d2\uff1axScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4=\u5141\u8bb8\u7684IP\uff1a10.0.0.1/32\u6301\u4e45\u4fdd\u6301\u8fde\u63a5\uff1a\u6bcf5\u79d2\u3002\n[email\u00a0protected]\uff1a~$sudo cat/etc/wireguard/wg0.conf[Interface]Address=10.0.0.254/32 PrivateKey=wLw2ja5AapryT+3SsBiyYVNVDYABJiWfPxLzyuiy5nE=ListenPort=51820#Alice[Peer]PublicKey=xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4=AllowedIPs=10.0.0.1/32#Bob[Peer]PublicKey=syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js=AllowedIPs=10.0.0.2/32[email\u00a0protected]\uff1a~$sudo wg showinterface\uff1awg0 public key\uff1aJeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY=private key\uff1a(hidden)listening port\uff1a51820peer\uff1axScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4=endpoint\uff1a2.2.2.2\u3002\uff1a41424\u5141\u8bb8\u7684IPS\uff1a10.0.0.1/32\u6700\u8fd1\u4e00\u6b21\u63e1\u624b\uff1a6\u79d2\u524d\u4f20\u8f93\uff1a\u6536\u5230510.29 KiB\uff0c52.11KiB\u53d1\u9001\u65b9\uff1asyKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js=\u7aef\u70b9\uff1a3.3.3.3\uff1a51820\u5141\u8bb8IPS\uff1a10.0.0.2/32\u6700\u65b0\u63e1\u624b\uff1a1\u520646\u79d2\u524d\u4f20\u8f93\uff1a498.04 KiB\u5df2\u6536\u5230\uff0c50.59KiB\u5df2\u53d1\u9001\u3002\n\u4f7f\u7528Alice-Registry\u548cBob-Registry\u4e4b\u95f4\u7684\u6d3b\u52a8\u96a7\u9053\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u67e5\u8be2\u7aef\u70b9\u4fe1\u606f\uff1a\n[\u90ae\u7bb1\u53d7\u4fdd\u62a4]\uff1a~$dig@4.4.4.4-p 5353_wireguard._udp.jordanWhited.net\u3002PTR+Noall+Answer+Additional\uff1b&lt\uff1b&\n..", "note_en": "Wireguard is a next generation, cross-platform VPN technology created by Jason A. Donenfeld that has quickly become a popular alternative to the beefy, complex IPSec and SSL VPN solutions used for years. As a testament to its success it has  recently been merged into the Linux Kernel as of v5.6. It is also available as a kernel module or as a user space application written in  Go or  Rust. If you are new to Wireguard I recommend checking out the  conceptual overview as this will be helpful for following along through the rest of the post.\n  One of the genius parts of Wireguard is its concept of  crypto-key routing. Crypto-key routing defines an association between a public key, and a list of IP addresses (Allowed IPs). The list of IP addresses permits (inbound) and routes (outbound) packets inside of a Wireguard tunnel. This association encompasses the total  minimum configuration for a peer, there is no static peer endpoint IP address  required from a tunnel validation standpoint. This allows for built-in IP roaming on both sides, assuming peer addresses don\u2019t change simultaneously OR there is a reliable means for signaling when they do.\n The DNS can be leveraged to support dynamically addressed peers as various Wireguard utilities will resolve DNS names when configuring a peer, and there are  supporting scripts that can be used to periodically re-resolve peer addresses. Awesome! This sounds promising\u2026 however:\n What happens if both peers are behind a NAT that we don\u2019t control? i.e. no static port-forwarding.\n How can we discover not only IP addresses but ports? The existing utilities do not support this.\n In this post we will set out to establish a Wireguard tunnel between dynamically addressed peers that are both sitting behind a NAT. One of the primary goals for achieving this is to stick with Wireguard in its purest form, the code that now ships with the Linux Kernel. We do not want to compromise it in any fashion to achieve our goals, although we could get very creative with its user space implementation.\n  Some of you may be thinking why not use a  hub-and-spoke model? Surely we can just create tunnels from Alice and Bob to a statically addressed, NAT-free central hub. Alice and Bob can route through the hub.\n    This is a totally valid approach and one that is widely used today. However, for our use case we are not interested for the following reasons:\n With many peers a hub becomes a vertical scaling bottleneck. (think IoT, connected cars, robotics, etc.)\n  Now that we\u2019ve outlined the problem, it\u2019s time to dive in. If we are going to establish a Wireguard tunnel directly between Alice and Bob we need to be able to traverse the NATs in front of them. Since Wireguard works over UDP,  UDP hole punching is our best bet for accomplishing this.\n UDP hole punching exploits the fact that most NATs are lenient when matching inbound packets against existing \u201cconnections\u201d. This allows us to re-use port state for punching our way back in. If Alice sends a UDP packet to a new host, Carol, and Bob has knowledge of the outbound source IP and port Alice\u2019s NAT used during translation, Bob can reach Alice by sending a UDP packet towards this IP:port pair ( 2.2.2.2:7777 in the illustration below).\n  * Our hole punching example describes a full-cone NAT. There are limitations with other, less common NAT types where this method does not work.\n   So we now know how UDP hole punching works. Great, but that still leaves us with open questions.\n  RFC5389 Session Traversal Utilities for NAT (STUN) defines a protocol to answer some of these questions. It\u2019s a lengthy RFC, so I\u2019ll do my best to summarize. It\u2019s important to note that STUN is not a drop-in solution to the problem we are trying to solve:\n STUN by itself is not a solution to the NAT traversal problem. Rather, STUN defines a tool that can be used inside a larger solution. The term \u201cSTUN usage\u201d is used for any solution that uses STUN as a component.\n    STUN is a client/server protocol. In the example above Alice is acting as the client and Carol is the server. Alice sends a STUN Binding request to Carol. When the Binding request passes through Alice\u2019s NAT, the source IP:port gets rewritten. Once Carol receives the Binding request, she copies the source IP:port from the layer 3 and layer 4 headers into the payload of the Binding response and sends it to Alice. The Binding response passes back through Alice\u2019s NAT at which point the destination IP:port gets rewritten, but the payload remains untouched. Alice receives the Binding response and becomes aware her external IP:port for this socket is  2.2.2.2:7777.\n As previously pointed out, STUN is not a complete solution. STUN provides a mechanism for an application to understand its external IP:port when behind a NAT, but STUN does not provide a method for signaling this to interested parties. If we were writing an application from the ground up that required NAT traversal capabilities, STUN is a component we should consider. We are not writing Wireguard, it already exists, and its not something we can modify (see goal about leaving its source untouched). So where does that leave us? We can certainly take some concepts from STUN and use them to achieve our goal. We clearly need an external, statically addressed host for discovering UDP holes that we can punch through.\n  Back in August 2016, the creator of Wireguard, shared a  NAT hole punching PoC/Example on the  Wireguard mailing list. Jason\u2019s example contains a client and server application. The client is intended to be run alongside Wireguard, and the server runs on the statically addressed host for IP:port discovery. The client uses a  raw socket for communicating with the server:\n /* We use raw sockets so that the WireGuard interface can actually own the real socket. */sock  = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); if (sock  &lt;  0) {\tperror( &#34;socket&#34;);\t return errno;}\n As pointed out in the comment, Wireguard owns the \u201creal socket\u201d. By using a raw socket the client is able to spoof the source port used by Wireguard when communicating with the server. This ensures the source IP:port seen at the server will map back to the Wireguard socket on the NAT when punching back in.\n The client uses a  classic BPF filter on its raw socket for filtering replies from the server destined to the Wireguard port:\n static  void  apply_bpf( int sock, uint16_t port, uint32_t ip){\t struct sock_filter filter[]  = {\t\tBPF_STMT(BPF_LD  + BPF_W  + BPF_ABS,  12  /* src ip */),\t\tBPF_JUMP(BPF_JMP  + BPF_JEQ  + BPF_K, ip,  0,  5),\t\tBPF_STMT(BPF_LD  + BPF_H  + BPF_ABS,  20  /* src port */),\t\tBPF_JUMP(BPF_JMP  + BPF_JEQ  + BPF_K, PORT,  0,  3),\t\tBPF_STMT(BPF_LD  + BPF_H  + BPF_ABS,  22  /* dst port */),\t\tBPF_JUMP(BPF_JMP  + BPF_JEQ  + BPF_K, port,  0,  1),\t\tBPF_STMT(BPF_RET  + BPF_K,  - 1),\t\tBPF_STMT(BPF_RET  + BPF_K,  0)\t};\t struct sock_fprog filter_prog  = {\t\t.len  =  sizeof(filter)  /  sizeof(filter[ 0]),\t\t.filter  = filter\t};\t if (setsockopt(sock, SOL_SOCKET, SO_ATTACH_FILTER,  &amp;filter_prog,  sizeof(filter_prog))  &lt;  0) {\t\tperror( &#34;setsockopt(bpf)&#34;);\t\texit(errno);\t}}\n The data communicated between the client and server is defined in the  packet and  reply structures:\n struct {  struct udphdr udp; uint8_t my_pubkey[ 32]; uint8_t their_pubkey[ 32];} __attribute__((packed)) packet  = { .udp  = { .len  = htons( sizeof(packet)), .dest  = htons(PORT) }}; struct {  struct iphdr iphdr;  struct udphdr udp; uint32_t ip; uint16_t port;} __attribute__((packed)) reply;\n The client works by iterating over the configured Wireguard peers ( wg show &lt;interface&gt; peers) and sending a  packet to the server for each one. The  my_pubkey and  their_pubkey fields are populated appropriately. When the server receives a  packet from the client, it performs an upsert of an  entry against an in-memory table of peers keyed by public key, using the  my_pubkey field. It then performs a lookup against the same table using the  their_pubkey field. If an  entry is found from the second lookup, the peer\u2019s IP:port are sent in a reply to the client. When a reply is received by the client, the  ip and  port fields are unpacked and the peer\u2019s endpoint address is configured ( wg set &lt;interface&gt; peer &lt;key&gt; &lt;options...&gt; endpoint &lt;ip&gt;:&lt;port&gt;).\n   The IP and port fields in the  entry structure are populated from the IP and UDP headers in the packet received from the client. Each time a client requests the IP and port information for a peer, its own IP and port information is refreshed in the peer table.\n The example client and server applications are great examples for how Wireguard can be part of a UDP hole punching solution. We know its possible, so let\u2019s build on this knowledge and move closer to something that is more suited for the real world. Specifically, let\u2019s aim to do this in a way that is cross-platform and does not require a custom wire protocol for IP:port discovery. Our solution should be as simple as possible. Opening a raw socket may not be possible on all of our peers, and we may not be able to leverage BPF filters, either. A custom wire protocol is difficult to debug without custom debugging tools, so let\u2019s use something that is mature with existing, widespread tooling.\n  In the previous section we explored an example client that used Linux-specific networking features to spoof packets from the socket owned by Wireguard. Instead of building a custom application around Wireguard to open and observe IP:port mappings on a NAT, let\u2019s just use Wireguard. Wireguard tunnels are extremely lightweight, we can simply build a tunnel to our statically addressed peer for IP:port discovery.\n    The figure above may remind you of the hub-and-spoke diagram. The main difference here is that we do not intend to route through the Registry peer. The Registry peer has a Wireguard interface with an IPv4 address of  10.0.0.254/32. Alice and Bob\u2019s configuration has been updated to reflect this. They will only accept packets from and route packets to  10.0.0.254/32 via this peer.\n The Wireguard tunnel with the Registry peer opens up a hole on Alice\u2019s and Bob\u2019s NAT for them to connect with each other. Now we need a way to query the IP:port of those holes from the Registry peer. For this purpose we are going to use the DNS protocol. DNS is relatively simple, mature (circa 1987), cross-platform, and happens to define a record type, the  SRV (service) record, for locating services, i.e. identifying their IP address and port.  DNS-Based Service Discovery RFC6763 expands on this record type with a concrete structure and query pattern for discovering services under a given domain. We can leverage these semantics for our use case.\n  Now that we have a service discovery protocol picked out, we need a way to connect it with Wireguard.  CoreDNS is a plugin-based DNS server written in Go. It\u2019s a graduated  CNCF project and happens to be the DNS server for  Kubernetes. Let\u2019s write a CoreDNS plugin that takes DNS-SD queries and returns information about associated Wireguard peers. Public keys will be used for the record names (Alice &amp; Bob in our example), and jordanwhited.net will serve as the zone. For those familiar with Bind-style zone files, you can expect zone data something like this:\n _wireguard._udp IN PTR alice._wireguard._udp.jordanwhited.net._wireguard._udp IN PTR bob._wireguard._udp.jordanwhited.net.alice._wireguard._udp IN SRV 0 1 7777 alice.jordanwhited.net.alice IN A 2.2.2.2bob._wireguard._udp IN SRV 0 1 8888 bob.jordanwhited.net.bob IN A 3.3.3.3\n  Up until this point we have been using the pseudonyms Alice and Bob in place of Wireguard public keys. Wireguard public keys are Base64 encoded where a textual representation is required (configuration files, utility output, etc\u2026). So instead of Alice, we would have a string that is 44 bytes long:\n  The Base 64 encoding is designed to represent arbitrary sequences of octets in a form that allows the use of both upper- and lowercase letters but that need not be human readable.\n  Each node in the DNS tree has a name consisting of zero or more labels [STD13, RFC1591, RFC2606] that are treated in a case insensitive fashion.\n Base32 on the other hand, while producing a slightly longer string (56 bytes), will allow us to represent Wireguard public keys inside of the DNS:\n The Base 32 encoding is designed to represent arbitrary sequences of octets in a form that needs to be case insensitive but that need not be human readable.\n You can convert back and forth between encoding formats at the command line using the  base32 and  base64 utilities. For example:\n $ wg genkey | wg pubkey &gt; pub.txt$ cat pub.txt O9rAAiO5qTejOEtFbsQhCl745ovoM9coTGiprFTaHUE =$ cat pub.txt | base64 -D | base32 HPNMAARDXGUTPIZYJNCW5RBBBJPPRZUL5AZ5OKCMNCU2YVG2DVAQ ====$ cat pub.txt | base64 -D | base32 | base32 -d | base64 O9rAAiO5qTejOEtFbsQhCl745ovoM9coTGiprFTaHUE =\n   CoreDNS has  documentation on writing plugins. Besides setup and configuration parsing, a plugin must implement the  plugin.Handler interface:\n  I\u2019ve gone ahead and implemented a CoreDNS plugin to provide Wireguard peer information via DNS-SD semantics called  wgsd.  wgsd is an \u201cexternal\u201d plugin and needs to be enabled at compile-time. There are two methods for loading external plugins documented  here. We will use the  Build with compile-time configuration file method.\n  $ diff -u plugin.cfg.orig plugin.cfg --- plugin.cfg.orig 2020-05-13 20:32:56.000000000 -0700  +++ plugin.cfg 2020-05-13 12:24:22.000000000 -0700  @@ -54,6 +54,7 @@  k8s_external:k8s_external kubernetes:kubernetes file:file +wgsd:github.com/jwhited/wgsd  auto:auto secondary:secondary etcd:etcd\n        For our test we have a single Wireguard peer configured with an endpoint of  3.3.3.3:8888:\n   $ dig @127.0.0.1 _wireguard._udp.jordanwhited.net. PTR +noall +answer +additional; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; @127.0.0.1 _wireguard._udp.jordanwhited.net. PTR +noall +answer +additional;  ( 1 server found );; global options: +cmd_wireguard._udp.jordanwhited.net.  0 IN PTR  TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q ====._wireguard._udp.jordanwhited.net.\n  $ dig @127.0.0.1  TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q ====._wireguard._udp.jordanwhited.net. SRV +noall +answer +additional; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; @127.0.0.1  TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q ====._wireguard._udp.jordanwhited.net. SRV +noall +answer +additional;  ( 1 server found );; global options: +cmd tl5glqumg5vatrrtyg57hydce55wnfhx7wadwwzhmno4njly4a7q ====._wireguard._udp.jordanwhited.net.  0 IN SRV  0  0  8888  TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q ====.jordanwhited.net. TL5GLQUMG5VATRRTYG57HYDCE55WNFHX7WADWWZHMNO4NJLY4A7Q ====.jordanwhited.net.  0 IN A 3.3.3.3\n   $ sudo wg show utun4 peersmvplwow3agnGM8G78+BiJ3tmlPf9gDtbJ2NdxqV44D8 =$ dig @127.0.0.1 _wireguard._udp.jordanwhited.net. PTR +short | cut -d. -f1 | base32 -d | base64mvplwow3agnGM8G78+BiJ3tmlPf9gDtbJ2NdxqV44D8 =\n      Alice starts off by establishing a tunnel with the Registry. Bob simultaneously does the same thing. Next, the  wgsd-client (still to be implemented) on Alice queries our CoreDNS plugin ( wgsd) running on the Registry. The plugin retrieves Bob\u2019s endpoint information from Wireguard and returns it to the  wgsd-client. The  wgsd-client then sets Bob\u2019s endpoint value. Finally, a Wireguard tunnel is established directly between Alice and Bob.\n Any reference to an \u201cestablished tunnel\u201d simply means a handshake occurred and that packets may flow between peers. Note that while Wireguard does have a handshake mechanism, it is more of a connection-less protocol than you may think:\n Any secure protocol require some state to be kept, so there is an initial very simple handshake that establishes symmetric keys to be used for data transfer. This handshake occurs every few minutes, in order to provide rotating keys for perfect forward secrecy. It is done based on time, and not based on the contents of prior packets, because it is designed to deal gracefully with packet loss.\n   The  wgsd-client is responsible for keeping peer endpoint configuration up to date. It retrieves the list of configured peers, queries CoreDNS for matching public keys, and then sets the endpoint value for each peer if needed. Our initial implementation is intended to be run periodically via cron or similar scheduling mechanism. It checks all peers once in a serialized fashion and then exits, it is not a daemon. We can improve upon this later, but for now let\u2019s start with something simple.\n  We\u2019re ready to test out our solution. In our tests we will have Alice and Bob behind NAT, and a Registry peer with no NAT. Alice is connected to an LTE provider, Bob is connected to a residential ISP, and Registry is an EC2 instance. Here are the public keys of all three peers:\n    [email\u00a0protected]:~$ sudo cat /etc/wireguard/utun4.conf [Interface ] Address  = 10.0.0.1/32 PrivateKey  = 0CtieMOYKa2RduPbJss/Um9BiQPSjgvHW+B7Mor5OnE = ListenPort  =  51820 # Registry [Peer ] PublicKey  =  JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY = Endpoint  = 4.4.4.4:51820 PersistentKeepalive  =  5 AllowedIPs  = 10.0.0.254/32 # Bob [Peer ] PublicKey  = syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js = PersistentKeepalive  =  5 AllowedIPs  = 10.0.0.2/32 [email\u00a0protected]:~$ sudo wg showinterface: utun4 public key: xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4 = private key:  (hidden ) listening port:  51820peer:  JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY = endpoint: 4.4.4.4:51820 allowed ips: 10.0.0.254/32 latest handshake:  48 seconds ago transfer: 1.67 KiB received, 11.99 KiB sent persistent keepalive: every  5 secondspeer: syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js = allowed ips: 10.0.0.2/32 persistent keepalive: every  5 seconds\n  [email\u00a0protected]:~$ sudo cat /etc/wireguard/wg0.conf [sudo ] password  for jwhited: [Interface ] Address  = 10.0.0.2/32 PrivateKey  = cIN5NqeWcbreXoaIhR/4wgrrQJGym/E7WrTttMtK8Gc = ListenPort  =  51820 # Registry [Peer ] PublicKey  =  JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY = Endpoint  = 4.4.4.4:51820 PersistentKeepalive  =  5 AllowedIPs  = 10.0.0.254/32 # Alice [Peer ] PublicKey  = xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4 = PersistentKeepalive  =  5 AllowedIPs  = 10.0.0.1/32 [email\u00a0protected]:~$ sudo wg showinterface: wg0 public key: syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js = private key:  (hidden ) listening port:  51820peer:  JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY = endpoint: 4.4.4.4:51820 allowed ips: 10.0.0.254/32 latest handshake:  26 seconds ago transfer: 1.54 KiB received, 11.75 KiB sent persistent keepalive: every  5 secondspeer: xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4 = allowed ips: 10.0.0.1/32 persistent keepalive: every  5 seconds\n  [email\u00a0protected]:~$ sudo cat /etc/wireguard/wg0.conf [Interface ] Address  = 10.0.0.254/32 PrivateKey  = wLw2ja5AapryT+3SsBiyYVNVDYABJiWfPxLzyuiy5nE = ListenPort  =  51820 # Alice [Peer ] PublicKey  = xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4 = AllowedIPs  = 10.0.0.1/32 # Bob [Peer ] PublicKey  = syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js = AllowedIPs  = 10.0.0.2/32 [email\u00a0protected]:~$ sudo wg showinterface: wg0 public key:  JeZlz14G8tg1Bqh6apteFCwVhNhpexJ19FDPfuxQtUY = private key:  (hidden ) listening port:  51820peer: xScVkH3fUGUv4RrJFfmcqm8rs3SEHr41km6+yffAHw4 = endpoint: 2.2.2.2:41424 allowed ips: 10.0.0.1/32 latest handshake:  6 seconds ago transfer: 510.29 KiB received, 52.11 KiB sentpeer: syKB97XhGnvC+kynh2KqQJPXoOoOpx/HmpMRTc+r4js = endpoint: 3.3.3.3:51820 allowed ips: 10.0.0.2/32 latest handshake:  1 minute,  46 seconds ago transfer: 498.04 KiB received, 50.59 KiB sent\n With active tunnels between Alice - Registry and Bob - Registry we should be able to query endpoint information:\n [email\u00a0protected]:~$ dig @4.4.4.4 -p  5353 _wireguard._udp.jordanwhited.net. PTR +noall +answer +additional; &lt;&\n......", "posttime": "2020-05-22 15:47:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dns,endpoint,wireguard", "title": "\u4f7f\u7528DNS-SD\u7684WireGuard\u7aef\u70b9\u53d1\u73b0\u548cNAT\u7a7f\u8d8a", "title_en": "WireGuard Endpoint Discovery and NAT Traversal Using DNS-SD", "transed": 1, "url": "https://www.jordanwhited.com/posts/wireguard-endpoint-discovery-nat-traversal/", "via": "", "real_tags": ["dns", "endpoint", "wireguard"]}, {"category": "", "categoryclass": "", "imagename": "7a7990f3011ca2c837253d6a7da842a9.jpg", "infoid": 1003242, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e16\u754c\u5927\u56fd\u4e89\u5148\u6050\u540e\u5730\u5bfb\u627e\u836f\u7269\u4ee5\u6062\u590d\u7ecf\u6d4e\u8fd0\u8f6c\u4e4b\u9645\uff0c\u7f8e\u56fd\u627f\u8bfa\u63d0\u4f9b\u9ad8\u8fbe12\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u963f\u65af\u5229\u5eb7(AstraZeneca)\u5b9e\u9a8c\u6027\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u8ba1\u5212\u9996\u627910\u4ebf\u5242\u75ab\u82d7\u7684\u8fd1\u4e09\u5206\u4e4b\u4e00\u3002\n\u867d\u7136\u75ab\u82d7\u5e76\u672a\u88ab\u8bc1\u660e\u5bf9\u51a0\u72b6\u75c5\u6bd2\u6709\u6548\uff0c\u4f46\u4e16\u754c\u5404\u56fd\u9886\u5bfc\u4eba\u8ba4\u4e3a\uff0c\u75ab\u82d7\u662f\u91cd\u632f\u9677\u5165\u505c\u6ede\u7684\u7ecf\u6d4e\uff0c\u751a\u81f3\u83b7\u5f97\u76f8\u5bf9\u4e8e\u5168\u7403\u7ade\u4e89\u5bf9\u624b\u4f18\u52bf\u7684\u552f\u4e00\u771f\u6b63\u9014\u5f84\u3002\n\u5728\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u8981\u6c42\u63a5\u79cd\u75ab\u82d7\u540e\uff0c\u7f8e\u56fd\u536b\u751f\u90e8\u540c\u610f\u63d0\u4f9b\u6700\u591a12\u4ebf\u7f8e\u5143\uff0c\u4ee5\u52a0\u5feb\u963f\u65af\u5229\u5eb7\u7684\u75ab\u82d7\u5f00\u53d1\uff0c\u5e76\u4e3a\u7f8e\u56fd\u786e\u4fdd3\u4ebf\u5242\u75ab\u82d7\u3002\n\u7f8e\u56fd\u536b\u751f\u90e8\u957f\u4e9a\u5386\u514b\u65af\u00b7\u963f\u624e\u5c14(Alex Azar)\u8bf4\uff1a\u201c\u4e0e\u963f\u65af\u5229\u5eb7\u7684\u8fd9\u4efd\u5408\u540c\u662f\u626d\u66f2\u901f\u5ea6\u884c\u52a8(Operation Warp Speed)\u57282021\u5e74\u4e4b\u524d\u7814\u5236\u51fa\u5b89\u5168\u3001\u6709\u6548\u3001\u53ef\u5e7f\u6cdb\u83b7\u5f97\u7684\u75ab\u82d7\u5de5\u4f5c\u7684\u4e00\u4e2a\u91cd\u8981\u91cc\u7a0b\u7891\u3002\u201d\n\u8fd9\u79cd\u75ab\u82d7\u4ee5\u524d\u88ab\u79f0\u4e3aChAdOx1 nCoV-19\uff0c\u73b0\u5728\u88ab\u79f0\u4e3aAZD1222\uff0c\u7531\u725b\u6d25\u5927\u5b66\u5f00\u53d1\uff0c\u5e76\u6388\u6743\u7ed9\u82f1\u56fd\u5236\u836f\u5546\u963f\u65af\u5229\u5eb7(AstraZeneca)\u3002\u5bf9\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u7684\u514d\u75ab\u529b\u5c1a\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u75ab\u82d7\u7684\u4f7f\u7528\u4e5f\u4e0d\u6e05\u695a\u3002\n\u7f8e\u56fd\u7684\u534f\u8bae\u5141\u8bb8\u5728\u7f8e\u56fd\u5bf9\u75ab\u82d7\u8fdb\u884c\u540e\u671f\u7b2c\u4e09\u9636\u6bb5\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u67093\u4e07\u4eba\u53c2\u52a0\u3002\n\u603b\u90e8\u4f4d\u4e8e\u82f1\u56fd\u5251\u6865\u7684\u963f\u65af\u5229\u5eb7(AstraZeneca)\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u8fbe\u6210\u4e86\u81f3\u5c114\u4ebf\u5242\u75ab\u82d7\u7684\u534f\u8bae\uff0c\u5e76\u786e\u4fdd\u4e8610\u4ebf\u5242\u75ab\u82d7\u7684\u751f\u4ea7\u80fd\u529b\uff0c\u9996\u6279\u4ea4\u4ed8\u5c06\u4e8e9\u6708\u4efd\u5f00\u59cb\u3002\n\u73b0\u5728\u662f\u82f1\u56fd\u84dd\u7b79\u80a1\u5bcc\u65f6100\u6307\u6570(FTSE100 Index)\u4e2d\u6700\u6709\u4ef7\u503c\u7684\u516c\u53f8\uff0c\u5b83\u5df2\u7ecf\u540c\u610f\u5411\u82f1\u56fd\u4eba\u63d0\u4f9b1\u4ebf\u5242\uff0c\u6700\u5feb9\u6708\u4efd\u5c31\u4f1a\u67093000\u4e07\u5242\u3002\u90e8\u957f\u4eec\u627f\u8bfa\uff0c\u82f1\u56fd\u5c06\u9996\u5148\u83b7\u5f97\u75ab\u82d7\u3002\n\u968f\u7740\u4e16\u754c\u5404\u5730\u7684\u9886\u5bfc\u4eba\u8c03\u67e5\u81f3\u5c11\u81ea\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4ee5\u6765\u6700\u4e25\u91cd\u7684\u4e00\u4e9b\u7ecf\u6d4e\u7834\u574f\uff0c\u4ee5\u53ca\u8d85\u8fc732.5\u4e07\u4eba\u7684\u6b7b\u4ea1\uff0c\u8bb8\u591a\u4eba\u90fd\u5728\u4e89\u5148\u6050\u540e\u5730\u5bfb\u627e\u75ab\u82d7\u3002\n\u7f8e\u56fd\u653f\u5e9c\u5df2\u7ecf\u4e0e\u5f3a\u751f\u3001\u73b0\u4ee3\u548c\u8d5b\u8bfa\u83f2\u8fbe\u6210\u4e86\u652f\u6301\u75ab\u82d7\u5f00\u53d1\u7684\u534f\u8bae\uff0c\u8fd9\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u6700\u5bcc\u6709\u7684\u56fd\u5bb6\u5c06\u80fd\u591f\u9996\u5148\u4fdd\u62a4\u672c\u56fd\u516c\u6c11\u7684\u62c5\u5fe7\u3002\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u8d5b\u8bfa\u83f2(Sanofi)\u7684\u8d1f\u8d23\u4eba\u8868\u793a\uff0c\u9274\u4e8e\u6cd5\u56fd\u4e3a\u8fd9\u9879\u7814\u7a76\u63d0\u4f9b\u4e86\u8d44\u91d1\u652f\u6301\uff0c\u5728\u7f8e\u56fd\u751f\u4ea7\u7684\u75ab\u82d7\u5242\u91cf\u53ef\u4ee5\u9996\u5148\u6d41\u5411\u7f8e\u56fd\u60a3\u8005\uff0c\u8fd9\u6fc0\u6012\u4e86\u6cd5\u56fd\u653f\u5e9c\u3002\n\u963f\u65af\u5229\u5eb7\u8868\u793a\uff0c\u5b83\u6b63\u5728\u4e0e\u4e16\u754c\u5404\u5730\u7684\u653f\u5e9c\u548c\u5408\u4f5c\u4f19\u4f34-\u5982\u5370\u5ea6\u8840\u6e05\u7814\u7a76\u6240-\u8fdb\u884c\u8c08\u5224\uff0c\u4ee5\u589e\u52a0\u83b7\u5f97\u75ab\u82d7\u7684\u673a\u4f1a\u548c\u4ea7\u91cf\uff0c\u5e76\u6b63\u5728\u4e0e\u5404\u79cd\u7ec4\u7ec7\u5c31\u516c\u5e73\u5206\u914d\u548c\u5206\u53d1\u75ab\u82d7\u8fdb\u884c\u8c08\u5224\u3002\n\u963f\u65af\u5229\u5eb7\u9996\u5e2d\u6267\u884c\u5b98\u5e15\u65af\u5361\u5c14\u00b7\u7d22\u91cc\u5965(Pascal Soriot)\u8868\u793a\uff1a\u201c\u6211\u4eec\u8981\u611f\u8c22\u7f8e\u56fd\u548c\u82f1\u56fd\u653f\u5e9c\u4e3a\u52a0\u5feb\u75ab\u82d7\u7684\u5f00\u53d1\u548c\u751f\u4ea7\u63d0\u4f9b\u7684\u5b9e\u8d28\u6027\u652f\u6301\u3002\u201d\n\u6309\u4ea7\u91cf\u8ba1\u7b97\uff0c\u5370\u5ea6\u8840\u6e05\u7814\u7a76\u6240\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u75ab\u82d7\u5236\u9020\u5546\uff0c\u8be5\u7814\u7a76\u6240\u5df2\u5c06\u5176\u4e00\u5bb6\u5e74\u4ea7\u80fd\u9ad8\u8fbe4\u4ebf\u5242\u7684\u8bbe\u65bd\u4e13\u95e8\u7528\u4e8e\u751f\u4ea7\u725b\u6d25\u75ab\u82d7\u3002\n\u9996\u5e2d\u6267\u884c\u5b98Adar Poonawalla\u544a\u8bc9\u8def\u900f\u793e\uff1a\u201c\u6211\u4eec\u4e00\u5f00\u59cb\u5c31\u5728\u6bcf\u6708\u7ea6400\u4e07\u5230500\u4e07\u5242\u7684\u4fdd\u5b88\u57fa\u7840\u4e0a\u6269\u5927\u89c4\u6a21\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u4e0e\u963f\u65af\u5229\u5eb7\u8fdb\u884c\u8c08\u5224\u3002\nAZD1222\u7684I/II\u671f\u4e34\u5e8a\u8bd5\u9a8c\u4e8e\u4e0a\u4e2a\u6708\u5f00\u59cb\uff0c\u65e8\u5728\u8bc4\u4f30\u82f1\u683c\u5170\u5357\u90e8\u51e0\u4e2a\u8bd5\u9a8c\u4e2d\u5fc31000\u591a\u540d\u5e74\u9f84\u572818\u5c81\u81f355\u5c81\u4e4b\u95f4\u7684\u5065\u5eb7\u5fd7\u613f\u8005\u7684\u5b89\u5168\u6027\u3001\u514d\u75ab\u539f\u6027\u548c\u6709\u6548\u6027\u3002\u8bd5\u9a8c\u6570\u636e\u9884\u8ba1\u5f88\u5feb\u5c31\u4f1a\u51fa\u6765\u3002\n\u653f\u5e9c\u3001\u5236\u836f\u5546\u548c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u7814\u7a76\u5927\u7ea6100\u4e2a\u9879\u76ee\uff0c\u4e13\u5bb6\u9884\u6d4b\uff0c\u4e00\u79cd\u5b89\u5168\u6709\u6548\u7684\u9884\u9632\u8fd9\u79cd\u75be\u75c5\u7684\u65b9\u6cd5\u53ef\u80fd\u9700\u898112\u523018\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u80fd\u5f00\u53d1\u51fa\u6765\u3002\n\u53ea\u6709\u5c11\u6570\u6b63\u5728\u5f00\u53d1\u7684\u75ab\u82d7\u8fdb\u5165\u4e86\u4eba\u4f53\u8bd5\u9a8c\uff0c\u8fd9\u662f\u5b89\u5168\u6027\u548c\u6709\u6548\u6027\u7684\u6307\u6807\uff0c\u4e5f\u662f\u5927\u591a\u6570\u75ab\u82d7\u5931\u8d25\u7684\u9636\u6bb5\u3002\n\u201c\u963f\u65af\u5229\u5eb7\u8ba4\u8bc6\u5230\u75ab\u82d7\u53ef\u80fd\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f46\u81f4\u529b\u4e8e\u52a0\u5feb\u4e34\u5e8a\u8ba1\u5212\u7684\u8fdb\u5c55\uff0c\u5e76\u6269\u5927\u98ce\u9669\u751f\u4ea7\uff0c\u201d\u8be5\u516c\u53f8\u8868\u793a\u3002\n\u5305\u62ec\u8f89\u745e(Pfizer Inc)\u3001\u5f3a\u751f(J&amp\uff1bJ\uff1b)\u548c\u8d5b\u8bfa\u83f2(Sanofi)\u5728\u5185\u7684\u5176\u4ed6\u5236\u836f\u5546\u4e5f\u5904\u4e8e\u75ab\u82d7\u5f00\u53d1\u7684\u4e0d\u540c\u9636\u6bb5\u3002\n\u603b\u90e8\u4f4d\u4e8e\u7f8e\u56fd\u7684Inovio\u5236\u836f\u516c\u53f8\u5468\u4e09\u8868\u793a\uff0c\u5176\u5b9e\u9a8c\u75ab\u82d7\u5728\u5c0f\u9f20\u548c\u8c5a\u9f20\u8eab\u4e0a\u4ea7\u751f\u4e86\u4fdd\u62a4\u6027\u6297\u4f53\u548c\u514d\u75ab\u7cfb\u7edf\u53cd\u5e94\u3002\n\u73b0\u4ee3\u672c\u5468\u53d1\u5e03\u4e86\u5176\u6f5c\u5728\u75ab\u82d7\u7684\u79ef\u6781\u6570\u636e\uff0c\u79f0\u8be5\u75ab\u82d7\u5728\u4e00\u5c0f\u7fa4\u5065\u5eb7\u5fd7\u613f\u8005\u4e2d\u4ea7\u751f\u4e86\u4fdd\u62a4\u6027\u6297\u4f53\u3002", "note_en": "The United States has secured almost a third of the first one billion doses planned for AstraZeneca\u2019s experimental COVID-19 vaccine by pledging up to $1.2 billion, as world powers scramble for medicines to get their economies back to work.\n While not proven to be effective against the coronavirus, vaccines are seen by world leaders as the only real way to restart their stalled economies, and even to get an edge over global competitors.\n After President Donald Trump demanded a vaccine, the U.S. Department of Health agreed to provide up to US$1.2 billion to accelerate AstraZeneca\u2019s vaccine development and secure 300 million doses for the United States.\n \u201cThis contract with AstraZeneca is a major milestone in Operation Warp Speed\u2019s work toward a safe, effective, widely available vaccine by 2021,\u201d U.S. Health Secretary Alex Azar said.\n The vaccine, previously known as ChAdOx1 nCoV-19 and now as AZD1222, was developed by the University of Oxford and licensed to British drugmaker AstraZeneca. Immunity to the new coronavirus is uncertain and so the use of vaccines unclear.\n The U.S. deal allows a late-stage \u2013 Phase III \u2013 clinical trial of the vaccine with 30,000 people in the United States.\n  AstraZeneca, based in Cambridge, England, said it had concluded agreements for at least 400 million doses of the vaccine and secured manufacturing capacity for one billion doses, with first deliveries due to begin in September.\n Now the most valuable company on Britain\u2019s blue-chip FTSE 100 Index, it has already agreed to deliver 100 million doses to people in Britain, with 30 million as soon as September. Ministers have promised that Britain will get first access to the vaccine.\n  With leaders across the world surveying some of the worst economic destruction since at least World War Two, and the deaths of more than 325,000, many are scrambling for a vaccine.\n The U.S. government has already struck deals to support vaccine development with Johnson &amp; Johnson (J&amp;J), Moderna and Sanofi, sparking fears the richest countries will be able to protect their citizens first.\n The head of Sanofi angered the French government earlier this month when he said vaccine doses produced in the United States could go to U.S. patients first, given the country had supported the research financially.\n AstraZeneca said it was in talks with governments and partners around the world \u2013 such as the Serum Institute of India \u2013 to increase access and production, and is speaking to various organizations on the fair allocation and distribution of the vaccine.\n \u201cWe would like to thank the U.S. and U.K. governments for their substantial support to accelerate the development and production of the vaccine,\u201d AstraZeneca Chief Executive Pascal Soriot said.\n The Serum Institute of India, the world\u2019s largest maker of vaccines by volume, has dedicated one of its facilities with a capacity to produce up to 400 million doses annually to producing the Oxford vaccine.\n \u201cWe are scaling up on a conservative basis of about 4 to 5 million doses a month to begin with,\u201d Chief Executive Adar Poonawalla told Reuters, adding the company was in discussions with AstraZeneca.\n  A Phase I/II clinical trial of AZD1222 began last month to assess safety, immunogenicity and efficacy in over 1,000 healthy volunteers aged 18 to 55 years across several trial centers in southern England. Data from the trial is expected shortly.\n  Governments, drugmakers and researchers are working on around 100 programs, and experts are predicting a safe and effective means of preventing the disease could take 12 to 18 months to develop.\n Only a handful of the vaccines in development have advanced to human trials, an indicator of safety and efficacy, and the stage at which most fail.\n \u201cAstraZeneca recognizes that the vaccine may not work but is committed to progressing the clinical program with speed and scaling up manufacturing at risk,\u201d it said.\n Other drugmakers including Pfizer Inc, J&amp;J and Sanofi are also in various stages of vaccine development.\n U.S.-based Inovio Pharmaceuticals said on Wednesday its experimental vaccine produced protective antibodies and immune system responses in mice and guinea pigs.\n And Moderna this week released positive data for its potential vaccine, which it said produced protective antibodies in a small group of healthy volunteers.", "posttime": "2020-05-22 15:32:52", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,\u963f\u65af\u5229\u5eb7,doses,\u75ab\u82d7", "title": "\u7f8e\u56fd\u83b7\u5f973\u4ebf\u5242\uff0c\u51e0\u4e4e\u4e09\u5206\u4e4b\u4e00\u7684\u6f5c\u5728\u963f\u65af\u5229\u5eb7\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7", "title_en": "US Secures 300 Million Doses, Almost a Third, of Potential AstraZeneca COVID-19 Vaccine", "transed": 1, "url": "https://business.financialpost.com/technology/u-s-secures-300-million-doses-of-potential-astrazeneca-covid-19-vaccine-3", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u963f\u65af\u5229\u5eb7", "doses", "\u75ab\u82d7"]}]