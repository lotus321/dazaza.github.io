[{"category": "", "categoryclass": "", "imagename": "cc85999531769ba61b75a7050d6d663b.png", "infoid": 1002453, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u521b\u5efaWeb\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u8981\u6c42\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff1a\u65e0\u8bba\u662f\u7528\u6237\u5728\u6211\u4eec\u7684\u5e73\u53f0\u6ce8\u518c\u65f6\u5fc5\u987b\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd8\u662f\u5fd8\u8bb0\u5bc6\u7801\uff0c\u6216\u8005\u8d2d\u4e70\u540e\u5fc5\u987b\u53d1\u9001\u4ed8\u6b3e\u786e\u8ba4\u3002\u7535\u5b50\u90ae\u4ef6\u9700\u6c42\u5b9e\u9645\u4e0a\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u4ece\u4e00\u5f00\u59cb\u5c31\u6784\u5efa\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u4e0d\u4ec5\u662f\u5e2e\u52a9\u4f60\u4ece\u5934\u5f00\u59cb\u5b9a\u4e49\u4e00\u4e2a\u7075\u6d3b\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u8ba9\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u6539\u53d8\u7535\u5b50\u90ae\u4ef6\u4ea4\u4ed8\u5e73\u53f0\uff0c\u800c\u4e14\u5728\u5b9e\u9645\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\u65b9\u9762\u4e5f\u662f\u7075\u6d3b\u7684\u3002\n\u8fd9\u4e00\u6b21\u6211\u5c06\u4f7f\u7528Django\u5c55\u793a\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f46\u6211\u5e0c\u671b\u5176\u4e3b\u8981\u601d\u60f3\u53ef\u4ee5\u4f20\u64ad\u5230\u60a8\u53ef\u80fd\u6b63\u5728\u4f7f\u7528\u7684\u5176\u4ed6\u6846\u67b6\u548c\u7f16\u7a0b\u8bed\u8a00\u3002\n\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5728\u7528\u6237\u6ce8\u518c\u6211\u4eec\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4e4b\u540e\u5411\u4ed6\u6216\u5979\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u5728\u8fd0\u884c\u6240\u6709\u9a8c\u8bc1\u5e76\u521b\u5efa\u7528\u6237\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Django\u7684\u6587\u6863\u5728\u89c6\u56fe\u4e2d\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u4eec\u4f1a\u60f3\u51fa\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n\u5f53\u7136\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u7f6e\uff0c\u5982EMAIL_HOST\u548cEMAIL_PORT\uff0c\u6b63\u5982\u6587\u6863\u6240\u8ff0\u3002\n\u6b63\u5982\u6211\u524d\u9762\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u51e0\u4e2a\u90e8\u5206\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u6216\u90ae\u4ef6\u53d1\u9001\u7a0b\u5e8f\u6765\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u8bf7\u6c42\uff0c\u8fd9\u4f1a\u5f88\u597d\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u6dfb\u52a0\u4fee\u590d\u6216\u66f4\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5fc5\u641c\u7d22\u6574\u4e2a\u4ee3\u7801\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u201c\u7535\u5b50\u90ae\u4ef6\u4ee3\u7801\u201d\u79fb\u5230\u4e86\u4e00\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u4e86\uff01\u521b\u5efa\u77e5\u9053\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u9001\u4ec0\u4e48\u5185\u5bb9\u7684\u7279\u5b9a\u90ae\u4ef6\u7a0b\u5e8f\u600e\u4e48\u6837\uff1f\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u5c06\u5728\u6bcf\u6b21\u65b0\u7528\u6237\u6ce8\u518c\u65f6\u751f\u6548\u7684\u90ae\u4ef6\u7a0b\u5e8f\u548c\u53e6\u4e00\u4e2a\u53d1\u9001\u8ba2\u5355\u786e\u8ba4\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff01\n\u8fd9\u8868\u660e\uff0c\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u5408\u5e76\u66f4\u591a\u7684\u90ae\u4ef6\u7a0b\u5e8f\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\u60a8\u53ea\u9700\u8ba9\u57fa\u672c\u90ae\u4ef6\u7a0b\u5e8f\u5904\u7406\u5b9e\u73b0\uff0c\u7136\u540e\u7531\u5b50\u7c7b\u8bbe\u7f6e\u5185\u5bb9\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6ce8\u518c\u89c6\u56fe\u5c06\u770b\u8d77\u6765\u5e72\u51c0\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5fc5\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff1a\n\u5047\u8bbe\u6211\u4eec\u5fc5\u987b\u4f7f\u7528SendGrid\u7684\u5b98\u65b9python\u5e93\u5c06\u7535\u5b50\u90ae\u4ef6\u540e\u7aef\u79fb\u52a8\u5230SendGrid(\u4e00\u4e2a\u7528\u4e8e\u4ea4\u6613\u548c\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u7684\u5ba2\u6237\u901a\u4fe1\u5e73\u53f0)\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528Django\u7684Send_Email\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u65b0\u5e93\u7684\u8bed\u6cd5\u3002\u4e95\u2026\u3002\u6211\u4eec\u5f88\u5e78\u8fd0\uff01\u6211\u4eec\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u7ba1\u7406\u76f8\u5173\u7684\u4ee3\u7801\u90fd\u653e\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u91cd\u6784\ud83d\ude09\u3002\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eSendGrid\u7684API\u5bc6\u94a5\uff0c\u8fd8\u8bf7\u6ce8\u610f\uff0chtml\u6a21\u677f\u5c06\u76f4\u63a5\u4eceSendRID\u7684\u7f51\u9875\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u62e5\u6709\u6a21\u677f\u7684ID\u6765\u6307\u5b9a\u5e94\u8be5\u4f7f\u7528\u54ea\u4e2a\u6a21\u677f\u3002\n\u592a\u68d2\u4e86\uff01\u8fd9\u5e76\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4fee\u6539\u6211\u4eec\u60f3\u8981\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u6bcf\u4e00\u884c\u4ee3\u7801\uff01\n\u5f53\u7136\uff0c\u5f53\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u5f88\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e00\u4e9b\u57df\u6570\u636e\u6765\u586b\u5199\u7535\u5b50\u90ae\u4ef6\u7684\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7684\u6b22\u8fce\u7535\u5b50\u90ae\u4ef6\u4e2d\u5305\u542b\u65b0\u7528\u6237\u540d\uff0c\u4f1a\u66f4\u53cb\u597d\u3002SendGrid\u5141\u8bb8\u60a8\u5728\u6a21\u677f\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u88ab\u4ece\u6211\u4eec\u90a3\u91cc\u63a5\u6536\u5230\u7684\u5b9e\u9645\u4fe1\u606f\u66ff\u6362\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e2a\u6570\u636e\u5427\uff01\n\u6211\u5728\u8fd9\u91cc\u770b\u5230\u7684\u552f\u4e00\u95ee\u9898\u662f\u8fd9\u4e2a\u66ff\u6362\u65b9\u6848\u4e0d\u592a\u7075\u6d3b\u3002\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5fc5\u987b\u6839\u636e\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u7684\u4e0a\u4e0b\u6587\u4f20\u9012\u5176\u4ed6\u6570\u636e\uff0c\u4f8b\u5982\uff1a\u65b0\u8ba2\u5355\u7f16\u53f7\u3001\u91cd\u7f6e\u5bc6\u7801\u94fe\u63a5\u7b49\u3002\u53ef\u80fd\u6709\u76f8\u5f53\u591a\u7684\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u53d8\u5f97\u66f4\u6df7\u4e71\u3001\u66f4\u80ae\u810f\u3002(=\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5173\u952e\u5b57\u53ef\u53d8\u957f\u5ea6\u7684\u53c2\u6570\u5217\u8868\uff0c\u901a\u5e38\u79f0\u4e3a**kwargs\uff0c\u4f46\u4e3a\u4e86\u4f7f\u5176\u66f4\u5177\u8868\u73b0\u529b\uff0c\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a**\u66ff\u6362\uff1a\n\u5982\u679c\u60a8\u5fc5\u987b\u5411\u90ae\u4ef6\u7a0b\u5e8f\u4f20\u9012\u989d\u5916\u7684\u4fe1\u606f\uff0c\u60a8\u5c06\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u7075\u6d3b\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u76f8\u5173\u7684\u4ee3\u7801\u5c01\u88c5\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u7ef4\u62a4\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u63a5\u6536\u53ef\u53d8\u7684\u4e0a\u4e0b\u6587\u53c2\u6570\u6765\u586b\u5145\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff01\u4e00\u6b21\u8003\u8651\u6574\u4e2a\u65b9\u6cd5\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u4f46\u9010\u6b65\u5b9e\u73b0\u4f1a\u66f4\u7b80\u5355\uff0c\u597d\u5904\u4e5f\u5f88\u591a\u3002\u6211\u9f13\u52b1\u60a8\u4f7f\u7528\u6b64\u8bbe\u8ba1\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u6dfb\u52a0\u9644\u52a0\u6587\u4ef6\u7684\u529f\u80fd\uff01\n\u975e\u5e38\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u5e0c\u671b\u5b83\u80fd\u5bf9\u60a8\u7684\u9879\u76ee\u6709\u6240\u5e2e\u52a9\u3002\u8bf7\u5173\u6ce8\u6211\u5373\u5c06\u53d1\u5e03\u7684\u5e16\u5b50\uff0c\u6211\u795d\u60a8\u597d\u8fd0\uff0c\u5e76\u795d\u60a8\u7f16\u7801\u6109\u5feb\uff01", "note_en": "When creating a web application, it is frequently requested to send emails: no matter if it has to be done when users sign up in our platform, or if they forget their password, or if a payment confirmation has to be sent after a purchase. The email requirement is actually very important and it can be messy if we don\u2019t structure an email service from the beginning.\n This post aims not only to help you define a flexible email service from scratch that allows you to change the email delivery platform easily, but also to be supple in terms of the content of the actual email.\n I will be using  Django to show an example this time, but I hope the main idea can be spread to other frameworks and programming languages you might be using.\n   Suppose we want to send an email to a user after he or she signs up to our web application. We can use  Django\u2019s documentation to send that email in the view after all validations were run and the user was created. We will come up with something like this:\n  Of course you must set up some important configurations in your settings like EMAIL_HOST and EMAIL_PORT, as the documentation says.\n   As I said before, we will probably need to send emails in several parts of our application, so it would be nice to have an email service or mailer who handles all the email requests, making it easier to add fixes or changes, because we won\u2019t have to search through the whole code.\n     Now that we have moved all the \u201cemail code\u201d to a single place, we can take advantage of that! How about creating specific mailers that know what content to send when they are called? Let\u2019s add a mailer that will get into action everytime new users sign up and another one that sends orders\u2019 confirmations!\n  This shows that it is very easy to incorporate more mailers for different situations. You just have to let the basic mailer handle the implementation, and the subclasses set the content.\n Now our register view will look much cleaner, because it doesn\u2019t have to handle all the email stuff:\n   Suppose that we have to move our email backend to  Sendgrid (a customer communication platform for transactional and marketing email) using its official  python library. We won\u2019t be using Django\u2019s  send_email any longer. Instead we will have to use the new library\u2019s syntax. Well\u2026 We are lucky! We have all the code related to email management in just one place and it will be easier for us to do this refactor \ud83d\ude09\n  Be aware that you must set Sendgrid\u2019s api key in your settings and also note that html templates will be managed directly from Sendrid\u2019s web page, and you will need to have the templates\u2019 ids to specify which one should be used.\n Great! It was not so difficult and we don\u2019t have to modify each line of code where we want to send an email!\n   Of course when we send emails, it is likely to use some domain data to fill in the email\u2019s template. For example, it would be friendlier if our welcome email had the new user\u2019s name in it. Sendgrid allows you to define variables in the template that will be replaced with the actual information that receives from us. So let\u2019s add this data!\n  The only problem I see here is that this substitutions scheme isn\u2019t very flexible. It is likely to happen that we have to pass other data depending on the context that cannot be accessed via the user, for instance: new order\u2019s number, reset password link, etc. There can be quite a lot of these variables and passing them as named parameters could make the code messier and dirtier. We want a keyworded, variable-length argument list, usually called  **kwargs, but let\u2019s name them  **substitutions to make it more expressive:\n  In case you have to pass extra information to the mailer, you will do something like this:\n   We have created a flexible mailer which encapsulates all the code related to emails in one place, making it easier to maintain, and that also receives variable context parameters to fill in the email content! Thinking of the whole approach at once could be difficult, but making it step by step is simpler and the benefits are a lot.  I encourage you to add the feature of attaching files to an email using this design!\n Thank you very much for reading this post and I hope it helps you for your projects. Follow me for upcoming posts, and I wish you good luck and happy coding!", "posttime": "2020-05-17 06:50:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "django,simple,\u7535\u5b50\u90ae\u4ef6", "title": "\u4f7f\u7528Django\u6784\u5efa\u7b80\u5355\u7684\u90ae\u4ef6\u670d\u52a1", "title_en": "Build a Simple Mailing Service with Django", "transed": 1, "url": "https://medium.com/python-in-plain-english/simple-mailer-with-django-2a7e2ad34b34", "via": "", "real_tags": ["django", "simple", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002452, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u9875\u662f\u5bf9GCC 10\u4e2d\u5927\u91cf\u6539\u8fdb\u4e2d\u7684\u4e00\u4e9b\u6539\u8fdb\u7684\u7b80\u8981\u603b\u7ed3\u3002\u60a8\u53ef\u80fd\u8fd8\u60f3\u67e5\u770b\u6211\u4eec\u7684\u201c\u79fb\u690d\u5230GCC 10\u201d\u9875\u548c\u5b8c\u6574\u7684GCC\u6587\u6863\u3002\n\u4fee\u590d\u4e86C++14\u548cC++17\u4e4b\u95f4\u7684ABI\u4e0d\u517c\u5bb9\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u76ee\u6807\u4e0a\uff0c\u5e26\u6709\u96f6\u5b50\u5bf9\u8c61\u7684\u7c7b\u5728\u7f16\u8bd1\u4e3aC++17\u6216C++20\u65f6\u4f1a\u88ab\u9519\u8bef\u4f20\u9012\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684C++\u6ce8\u91ca\u3002\n\u975e\u6807\u51c6std\uff1a\uff1a__is_nullptr_t\u7c7b\u578b\u7279\u5f81\u5df2\u5f03\u7528\uff0c\u5c06\u5728\u672a\u6765\u7248\u672c\u4e2d\u4ecelibstdc++\u4e2d\u5220\u9664\u3002\u6807\u51c6\u7279\u5f81STD\uff1a\uff1aIS_NULL_POINTER\u5e94\u8be5\u6539\u4e3a\u3002\n\u6784\u5efaGCC\u6240\u9700\u7684mpfr\u5e93\u7684\u6700\u4f4e\u7248\u672c\u5df2\u7ecf\u589e\u52a0\u52303.1.0\u7248(\u53d1\u5e03\u4e8e2011\u5e7410\u670803\u65e5)\u3002\n\u5220\u9664\u4e86--param allow-store-data-races\u5185\u90e8\u53c2\u6570\uff0c\u800c\u91c7\u7528\u4e86\u65b0\u7684\u5b98\u65b9\u9009\u9879-falow-store-data-races\u3002\u867d\u7136\u9ed8\u8ba4\u884c\u4e3a\u6ca1\u6709\u6539\u53d8\uff0c\u5e76\u4e14\u65b0\u7684\u9009\u9879\u5141\u8bb8\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u671f\u95f4\u6b63\u786e\u5730\u7ef4\u62a4\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u7684\u8bbe\u7f6e\uff0c\u4f46\u662f\u73b0\u5728\u5c06\u8bca\u65ad\u9ed8\u8ba4\u7684via--param allow-store-data-race\u7684\u66f4\u6539\uff0c\u5e76\u4e14\u5fc5\u987b\u76f8\u5e94\u5730\u8c03\u6574\u6784\u5efa\u7cfb\u7edf\u3002\n\u5378\u8f7d\u5230\u5f02\u6784\u7cfb\u7edf\u67b6\u6784\u4e2d\u95f4\u8bed\u8a00(HSAIL)\u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u65b0\u589e\u5185\u7f6e\u51fd\u6570\uff1a\u53ef\u4ee5\u4f7f\u7528__HAS_BUTHIN\u5185\u7f6e\u9884\u5904\u7406\u5668\u8fd0\u7b97\u7b26\u67e5\u8be2\u5bf9GCC\u7b49\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u5185\u7f6e\u51fd\u6570\u7684\u652f\u6301\u60c5\u51b5\u3002\n\u65b0\u7684\u547d\u4ee4\u884c\u9009\u9879\uff1a-fprofile-Partial-Training\u73b0\u5728\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u7f16\u8bd1\u5668\uff0c\u57f9\u8bad\u8fd0\u884c\u672a\u8986\u76d6\u7684\u4ee3\u7801\u8def\u5f84\u4e0d\u5e94\u9488\u5bf9\u5927\u5c0f\u8fdb\u884c\u4f18\u5316\u3002\n-fprofile-reducable\u63a7\u5236\u7531-fprofile-GENERATE\u6536\u96c6\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u53ef\u91cd\u73b0\u6027\u7ea7\u522b\u3002\u8fd9\u4f7f\u5f97\u91cd\u5efa\u5177\u6709\u76f8\u540c\u7ed3\u679c\u7684\u7a0b\u5e8f\u6210\u4e3a\u53ef\u80fd\uff0c\u4f8b\u5982\uff0c\u8fd9\u5bf9\u4e8e\u5206\u53d1\u5305\u662f\u6709\u7528\u7684\u3002\n-fprofile-prefix-path\u53ef\u4ee5\u4e0e-fprofile-Generate=profile_dir\u548c-fprofile-use=profile_dir\u7ec4\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u901a\u77e5GCC\u6784\u5efa\u6e90\u6811\u7684\u57fa\u76ee\u5f55\u5728\u54ea\u91cc\uff0c\u4ee5\u9632\u68c0\u6d4b\u548c\u4f18\u5316\u6784\u5efa\u6709\u6240\u4e0d\u540c\u3002\n-fAnalyzer\u542f\u7528\u65b0\u7684\u9759\u6001\u5206\u6790\u8fc7\u7a0b\u548c\u76f8\u5173\u8b66\u544a\u3002\u6b64\u904d\u5bf9\u4ee3\u7801\u4e2d\u7684\u8def\u5f84\u6267\u884c\u8017\u65f6\u7684\u63a2\u7d22\uff0c\u5e0c\u671b\u68c0\u6d4b\u5404\u79cd\u5e38\u89c1\u9519\u8bef\uff0c\u5982\u53cc\u91cd\u91ca\u653e\u7684\u9519\u8bef\u3002\u6b64\u9009\u9879\u5728\u6b64\u7248\u672c\u4e2d\u5e94\u89c6\u4e3a\u8bd5\u9a8c\u6027\u9009\u9879\u3002\u7279\u522b\u662f\uff0c\u5bf9\u975eC\u4ee3\u7801\u7684\u5206\u6790\u4e0d\u592a\u53ef\u80fd\u8d77\u4f5c\u7528\u3002\n\u8fc7\u7a0b\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u91cd\u65b0\u5b9e\u73b0\u4e86\u805a\u5408\u7684\u8fc7\u7a0b\u95f4\u6807\u91cf\u66ff\u6362(IPA-SRA)\u4f20\u9012\uff0c\u4ee5\u4fbf\u5728\u94fe\u63a5\u65f6\u5de5\u4f5c\uff0c\u73b0\u5728\u8fd8\u53ef\u4ee5\u5220\u9664\u8ba1\u7b97\u548c\u8fd4\u56de\u672a\u4f7f\u7528\u7684\u8fd4\u56de\u503c\u3002\n-finline-Functions\u73b0\u5728\u5728-O2\u5904\u542f\u7528\uff0c\u5e76\u91cd\u65b0\u4f18\u5316\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4ee3\u7801\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u6027\u80fd\u6743\u8861\u3002\u5185\u8054\u542f\u53d1\u5f0f\u4e5f\u5927\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\uff0c\u907f\u514d\u4e86\u5bf9-flto-O2\u7f16\u8bd1\u65f6\u95f4\u7684\u8d1f\u9762\u5f71\u54cd\u3002\n\u5185\u8054\u542f\u53d1\u5f0f\u548c\u51fd\u6570\u514b\u9686\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u503c\u8303\u56f4\u4fe1\u606f\u6765\u9884\u6d4b\u5355\u4e2a\u8f6c\u6362\u7684\u6709\u6548\u6027\u3002\n\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528C++One Definition Rule\u6765\u63d0\u9ad8\u57fa\u4e8e\u7c7b\u578b\u7684\u522b\u540d\u5206\u6790\u7684\u7cbe\u5ea6\u3002\n\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u6dfb\u52a0\u4e86\u65b0\u7684\u4e8c\u8fdb\u5236LTO-DUMP\u3002\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u8f6c\u50a8\u6709\u5173LTO\u5b57\u8282\u7801\u76ee\u6807\u6587\u4ef6\u7684\u5404\u79cd\u4fe1\u606f\u3002\nLTO\u7684\u5e76\u884c\u9636\u6bb5\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u6b63\u5728\u8fd0\u884c\u7684make&#39\uff1b\u7684jviewer\uff0c\u6216\u8005\u53ef\u4ee5\u56de\u9000\u5230\u53ef\u7528\u6838\u5fc3\u7684\u6570\u91cf\u3002\nLTO\u5b57\u8282\u7801\u53ef\u4ee5\u7528ZSTD\u7b97\u6cd5\u8fdb\u884c\u538b\u7f29\u3002\u914d\u7f6e\u811a\u672c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4bzstd\u652f\u6301\u3002\nMOST--\u53c2\u6570\u503c\u73b0\u5728\u53ef\u4ee5\u6309\u8f6c\u6362\u5355\u5143\u7c92\u5ea6\u6307\u5b9a\u3002\u8fd9\u5305\u62ec\u63a7\u5236\u5185\u8054\u548c\u5176\u4ed6\u8fc7\u7a0b\u95f4\u4f18\u5316\u7684\u6240\u6709\u53c2\u6570\u3002\u4e0e\u65e9\u671f\u7248\u672c\u4e0d\u540c\uff0cGCC 10\u5c06\u5ffd\u7565\u63a7\u5236\u5728\u94fe\u63a5\u65f6\u6307\u5b9a\u7684\u4f18\u5316\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u4e0e\u4f18\u5316\u6807\u5fd7\u76f8\u540c\u7684\u65b9\u5f0f\u5e94\u7528\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684\u53c2\u6570\u3002\n\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u7684\u4f18\u5316\u6539\u8fdb\uff1a\u4f7f\u7528-fprofile-value\uff0c\u63d2\u5165\u6307\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u8ddf\u8e2a\u95f4\u63a5\u8c03\u7528\u7684\u591a\u4e2a\u503c(\u6700\u591a4\u4e2a)\uff0c\u5e76\u63d0\u4f9b\u66f4\u7cbe\u786e\u7684\u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\u3002\nC\u3001C++\u548cFortran\u7f16\u8bd1\u5668\u73b0\u5728\u652f\u6301openacc\u89c4\u8303\u76842.6\u7248\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605openacc wiki\u9875\u9762\u4e0a\u7684\u5b9e\u73b0\u72b6\u6001\u90e8\u5206\u548c\u8fd0\u884c\u65f6\u5e93\u6587\u6863\u3002\nGCC 10\u5728GCC 9\u7248\u672c\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u591a\u4e2a\u65b0\u5b9e\u73b0\u7684OpenMP5.0\u529f\u80fd\uff0c\u5982\u6761\u4ef6lastprivate\u5b50\u53e5\u3001\u626b\u63cf\u548c\u5faa\u73af\u6307\u4ee4\u3001ORDER(\u5e76\u53d1)\u548cUSE_DEVICE_ADDR\u5b50\u53e5\u652f\u6301\u3001SIMD\u6784\u9020\u4e0a\u7684IF\u5b50\u53e5\u6216\u5bf9DECLARE_DEVANT VARIANT\u6307\u4ee4\u7684\u90e8\u5206\u652f\u6301\uff0c\u66f4\u52a0\u63a5\u8fd1\u5bf9OpenMP 5.0\u6807\u51c6\u7684\u5168\u9762\u652f\u6301\u3002\nOpenMP\u548copenacc\u73b0\u5728\u652f\u6301\u5378\u8f7d\u5230AMD Radeon(GCN)GPU\uff1b\u652f\u6301\u7684\u662f\u7b2c\u4e09\u4ee3\u6590\u6d4e(\u6590\u6d4e)\u548c\u7b2c\u4e94\u4ee3Vega 10/Vega 20(gfx900\u6216gfx906)\u3002\n\u65b0\u5c5e\u6027\uff1a\u6dfb\u52a0\u4e86access\u51fd\u6570\u548ctype\u5c5e\u6027\uff0c\u4ee5\u63cf\u8ff0\u51fd\u6570\u5982\u4f55\u8bbf\u95ee\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u4f20\u9012\u7ed9\u5b83\u7684\u5bf9\u8c61\uff0c\u5e76\u5c06\u6b64\u7c7b\u53c2\u6570\u4e0e\u8868\u793a\u5bf9\u8c61\u5927\u5c0f\u7684\u6574\u6570\u53c2\u6570\u76f8\u5173\u8054\u3002\u8be5\u5c5e\u6027\u7528\u4e8e\u68c0\u6d4b\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u65e0\u6548\u8bbf\u95ee\uff0c\u4f8b\u5982\u7531-Wstringop-overflow\u8bca\u65ad\u7684\u51fd\u6570\u3002\nsymver\u5c5e\u6027\u53ef\u7528\u4e8e\u5c06\u7b26\u53f7\u7ed1\u5b9a\u5230ELF\u5e73\u53f0\u4e0a\u7684\u7279\u5b9a\u7248\u672c\u8282\u70b9\u3002\u8fd9\u6bd4\u5c06GNU\u4f5c\u4e3asymver\u6307\u4ee4\u4f7f\u7528\u5185\u8054\u6c47\u7f16\u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u540e\u8005\u4e0e\u94fe\u63a5\u65f6\u4f18\u5316\u4e0d\u517c\u5bb9\u3002\n\u65b0\u8b66\u544a\uff1a-Wstring-Compare\uff0c\u7531-WExtra\u542f\u7528\uff0c\u8b66\u544a\u96f6\u4e0e\u8c03\u7528strcmp\u548cstrncmp\u7684\u7ed3\u679c\u4e4b\u95f4\u7684\u76f8\u7b49\u548c\u4e0d\u7b49\u8868\u8fbe\u5f0f\uff0c\u8fd9\u662f\u7531\u4e8e\u4e00\u4e2a\u53c2\u6570\u7684\u957f\u5ea6\u5927\u4e8e\u53e6\u4e00\u4e2a\u53c2\u6570\u6240\u6307\u5411\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u800c\u5bfc\u81f4\u7684\u5e38\u91cf\u3002\n-WzerLength-Bound\u7531-Warray-Bound\u542f\u7528\uff0c\u8b66\u544a\u5bf9\u53ef\u80fd\u4e0e\u540c\u4e00\u5bf9\u8c61\u7684\u5176\u4ed6\u6210\u5458\u91cd\u53e0\u7684\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n\u5bf9\u73b0\u6709\u8b66\u544a\u7684\u589e\u5f3a\uff1a-Warray-bound\u68c0\u6d4b\u5230\u66f4\u591a\u5bf9\u6210\u5458\u6570\u7ec4\u7684\u8d8a\u754c\u8bbf\u95ee\u4ee5\u53ca\u5bf9\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n-Wstringop-overflow\u68c0\u6d4b\u5230\u6210\u5458\u6570\u7ec4\u7684\u66f4\u591a\u8d8a\u754c\u5b58\u50a8\uff0c\u5305\u62ec\u96f6\u957f\u5ea6\u6570\u7ec4\u3001\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u548c\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\uff0c\u4ee5\u53ca\u5b57\u7b26\u4e32\u5185\u7f6e\u51fd\u6570\u8bfb\u53d6\u672a\u7ec8\u6b62\u5b57\u7b26\u6570\u7ec4\u7684\u66f4\u591a\u5b9e\u4f8b\u3002\u8be5\u8b66\u544a\u8fd8\u68c0\u6d4b\u5230\u901a\u8fc7\u8c03\u7528\u4f7f\u7528\u65b0\u5c5e\u6027\u8bbf\u95ee\u58f0\u660e\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u7684\u8d8a\u754c\u8bbf\u95ee\u3002\n\u9664\u4e86\u5df2\u7ecf\u652f\u6301\u7684UCN\u8bed\u6cd5(\\uNNNN\u6216\\UNNNNNNN)\u4e4b\u5916\uff0c\u73b0\u5728\u53ef\u4ee5\u5728\u8f93\u5165\u7f16\u7801(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3aUTF-8)\u4e2d\u76f4\u63a5\u6307\u5b9a\u6807\u8bc6\u7b26\u4e2d\u7684\u6269\u5c55\u5b57\u7b26\uff1a\n\u4f7f\u7528-std=c2x\u548c-std=gnu2x\u652f\u6301\u5373\u5c06\u53d1\u5e03\u7684ISO C\u6807\u51c6C2X\u4fee\u8ba2\u7248\u4e2d\u7684\u51e0\u4e2a\u65b0\u529f\u80fd\u3002\u5728\u7f16\u8bd1\u65e7\u8bed\u8a00\u7248\u672c\u65f6\uff0c\u8fd8\u652f\u6301\u5c06\u5176\u4e2d\u4e00\u4e9b\u529f\u80fd\u4f5c\u4e3a\u6269\u5c55\u3002\u9664\u4e86\u5217\u51fa\u7684\u529f\u80fd\u5916\uff0c\u5728C2X\u6a21\u5f0f\u4e0b\u9ed8\u8ba4\u542f\u7528\u4e86\u4e00\u4e9b\u4ee5\u524d\u652f\u6301\u4f5c\u4e3a\u6269\u5c55\u5e76\u73b0\u5728\u6dfb\u52a0\u5230C\u6807\u51c6\u4e2d\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u6ca1\u6709\u4f7f\u7528-std=c2x-Wpedtic\u8fdb\u884c\u8bca\u65ad\u3002\u4e0e\u5728C++\u4e2d\u4e00\u6837\uff0c\u652f\u6301[[]]\u5c5e\u6027\u8bed\u6cd5\u3002\u73b0\u6709\u5c5e\u6027\u53ef\u4ee5\u4e0e\u6b64\u8bed\u6cd5\u4e00\u8d77\u4f7f\u7528\uff0c\u683c\u5f0f\u5982[[gnu\uff1a\uff1aconst]]\u3002\u652f\u6301\u6807\u51c6\u5c5e\u6027[[Deproated]]\u3001[[Fall Through]]\u548c[[Mayse_Unussed]]\u3002\n\u652f\u6301\u5341\u8fdb\u5236\u6d6e\u70b9\u7b97\u672f\u65f6\uff0c\u9664\u4ee5\u524d\u4ec5\u5728\u5305\u542b&lt\uff1bfloat.h&gt\uff1b\u4e4b\u524d\u5b9a\u4e49\u4e86__STDC_WANT_DEC_FP__\u65f6\u624d\u5b9a\u4e49\u7684\u5b8f\u5916\uff0c&lt\uff1bfloat.h&gt\uff1b\u8fd8\u5b9a\u4e49\u4e86\u5b8fDEC32_TRUE_MIN\u3001DEC64_TRUE_MIN\u548cDEC128_TRUE_MIN\u3002\n\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u7a7a\u62ec\u53f7\u4e3a\u8be5\u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5177\u6709\u539f\u578b\u7684\u7c7b\u578b\uff0c\u4ee5\u4f9b\u540e\u7eed\u8c03\u7528\uff1b\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8bca\u65ad\u5176\u4ed6\u65e7\u5f0f\u51fd\u6570\u5b9a\u4e49\u3002\nGCC\u73b0\u5728\u9ed8\u8ba4\u4e3a-fno-common\u3002\u56e0\u6b64\uff0c\u5bf9\u5404\u79cd\u76ee\u6807\u7684\u5168\u5c40\u53d8\u91cf\u8bbf\u95ee\u6548\u7387\u66f4\u9ad8\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5177\u6709\u591a\u4e2a\u8bd5\u63a2\u6027\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u73b0\u5728\u4f1a\u5bfc\u81f4\u94fe\u63a5\u5668\u9519\u8bef\u3002\u4f7f\u7528-fcommon\uff0c\u8fd9\u6837\u7684\u5b9a\u4e49\u5728\u94fe\u63a5\u671f\u95f4\u4ee5\u9759\u9ed8\u65b9\u5f0f\u5408\u5e76\u3002\n\u65b0\u8b66\u544a\uff1a-Wmismatted-Tags\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\uff0c\u8b66\u544a\u6709\u5173\u7ed3\u6784\u3001\u7c7b\u548c\u7c7b\u6a21\u677f\u7684\u58f0\u660e\u53ca\u5176\u4e13\u95e8\u5316\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u5b9a\u4e49\uff0c\u5219\u7c7b\u952e\u4e0e\u5b9a\u4e49\u6216\u7b2c\u4e00\u4e2a\u58f0\u660e\u90fd\u4e0d\u5339\u914d\u3002\u63d0\u4f9b\u8be5\u9009\u9879\u662f\u4e3a\u4e86\u7b80\u5316\u5bf9\u57fa\u4e8eWindows\u7684\u7f16\u8bd1\u5668\u7684\u53ef\u79fb\u690d\u6027\u3002\n-wredundant-tag\u9ed8\u8ba4\u7981\u7528\uff0c\u5728\u53ef\u4ee5\u6d88\u9664\u952e\u800c\u4e0d\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u6b67\u4e49\u7684\u4e0a\u4e0b\u6587\u4e2d\u8b66\u544a\u5197\u4f59\u7684class-key\u548cenum-key\u3002\nGCC 10\u4e2d\u7684\u51e0\u4e2a\u76ee\u6807(\u5305\u62ecAArch64\u3001ARM\u3001PowerPC ELFv2\u3001S/390\u548cItanium)\u6539\u53d8\u4e86\u6309\u503c\u4f20\u9012\u548c\u8fd4\u56de\u67d0\u4e9bC++\u7c7b\u7684ABI\u3002\u8fd9\u4e9b\u66f4\u6539\u5f71\u54cd\u5177\u6709\u96f6\u5927\u5c0f\u7684\u5b50\u5bf9\u8c61(\u7a7a\u57fa\u7c7b\uff0c\u6216\u5177\u6709[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u6570\u636e\u6210\u5458)\u7684\u7c7b\uff0c\u800c\u6240\u6709\u5176\u4ed6\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b(\u5728\u67d0\u4e9bABI\u89c4\u8303\u4e2d\u79f0\u4e3a\u540c\u6784\u805a\u5408\uff0c\u6216\u8005\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6210\u5458\uff0c\u5373\u5355\u4e2a\u5143\u7d20)\u3002\u5728-std=c++17\u548c-std=c++20\u6a21\u5f0f\u4e2d\uff0c\u57fa\u7c7b\u4e3a\u7a7a\u7684\u7c7b\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u5177\u6709\u5355\u4e2a\u5143\u7d20\u6216\u540c\u6784\u805a\u5408\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u65b9\u5f0f\u4f20\u9012(\u5728\u9519\u8bef\u7684\u5bc4\u5b58\u5668\u6216\u5728\u9519\u8bef\u7684\u5806\u6808\u5730\u5740)\u3002\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u4f7f\u7528-std=c++17\u548c-std=c++14ABI\u7f16\u8bd1\u7684\u4ee3\u7801\u4e0d\u517c\u5bb9\u3002\u6b64\u95ee\u9898\u5df2\u66f4\u6b63\uff0c\u5e76\u4e14\u5728\u90a3\u4e9bABI\u51b3\u7b56\u4e2d\u5ffd\u7565\u4e86\u7a7a\u57fa\uff0c\u56e0\u6b64\u4f7f\u7528-std=c++14\u548c-std=c++17\u7f16\u8bd1\u7684\u51fd\u6570\u73b0\u5728\u518d\u6b21\u4e0eABI\u517c\u5bb9\u3002\u793a\u4f8b\uff1astruct Empty{}\uff1bstruct S\uff1aEmpty{Float f\uff1b}\uff1bvoid f(S)\uff1b\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u5305\u542b\u4f7f\u7528C++20[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u7c7b\u7c7b\u578b\u4e3a\u7a7a\u7684\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u7c7b\u4e2d\uff0c\u8fd9\u4e9b\u6210\u5458\u5728\u4f20\u9012\u51b3\u7b56\u7684ABI\u53c2\u6570\u4e2d\u6ca1\u6709\u88ab\u5ffd\u7565\u3002\u8fd9\u4e24\u79cdABI\u53d8\u5316\u73b0\u5728\u90fd\u88ab\u8bca\u65ad\u4e3a-Wpsabi\u3002\n\u73b0\u5728\u53ef\u4ee5\u4ece\u4efb\u4f55\u8fd4\u56de\u7b26\u53f7\u6216\u5143\u7ec4\u7684__\u7279\u5f81\u76f4\u63a5\u521b\u5efa\u522b\u540d\u3002\u4ee5\u524d\uff0c\u9700\u8981\u4f7f\u7528AliasSeq\u6765\u4e3a\u5b83\u4eec\u7684\u8fd4\u56de\u8bbe\u7f6e\u522b\u540d\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528__\u7279\u5f81(getLinkage\uff0c.)\u68c0\u6d4b\u4e3a\u7ed3\u6784\u3001\u7c7b\u6216\u63a5\u53e3\u6307\u5b9a\u7684ABI\u8bed\u8a00\u3002\u6dfb\u52a0\u4e86\u5bf9core.math.toPrec\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u3002\u8fd9\u4e9b\u5185\u90e8\u51fd\u6570\u4fdd\u8bc1\u5728\u4ee3\u7801\u4e2d\u7684\u6307\u5b9a\u70b9\u56db\u820d\u4e94\u5165\u5230\u7279\u5b9a\u7684\u6d6e\u70b9\u7cbe\u5ea6\u3002\n\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5bf9\u6742\u6ce8(\u5185\u8054)\u7684\u652f\u6301\u3002\u4ee5\u524d\uff0c\u6742\u6ce8\u53ef\u4ee5\u8bc6\u522b\uff0c\u4f46\u5bf9\u7f16\u8bd1\u6ca1\u6709\u5f71\u54cd\u3002\nASM\u64cd\u4f5c\u6570\u4e2d\u7684\u53ef\u9009\u62ec\u53f7\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u73b0\u5728\uff0c\u4f7f\u7528-M\u7f16\u8bd1\u65f6\uff0c\u6240\u6709\u5185\u5bb9\u5bfc\u5165\u7684\u6587\u4ef6\u90fd\u5305\u542b\u5728Make Dependency\u5217\u8868\u4e2d\u3002\n\u7531gcc.attribute\u6a21\u5757\u63d0\u4f9b\u7684\u7f16\u8bd1\u5668\u8bc6\u522b\u7684\u5c5e\u6027\u73b0\u5728\u5c06\u5728\u5e94\u7528\u4e8e\u51fd\u6570\u539f\u578b\u4ee5\u53ca\u5e94\u7528\u4e8e\u5b8c\u6574\u51fd\u6570\u58f0\u660e\u65f6\u751f\u6548\u3002\n\u6dfb\u52a0\u4e86--enable-libphobos-check\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u63a7\u5236\u662f\u5426\u5c06\u8fd0\u884c\u65f6\u68c0\u67e5\u7f16\u8bd1\u5230D\u8fd0\u884c\u65f6\u5e93\u4e2d\u3002\n\u6dfb\u52a0\u4e86--with-libphobos-druntime-only\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u6307\u793a\u662f\u53ea\u5c06\u6838\u5fc3D\u8fd0\u884c\u65f6\u5e93\u6784\u5efa\u5230libphobos\u4e2d\uff0c\u8fd8\u662f\u5c06\u6838\u5fc3\u5e93\u548c\u6807\u51c6\u5e93\u90fd\u6784\u5efa\u5230libphobos\u4e2d\u3002\n\u73b0\u5728\u652f\u6301OpenMP\u89c4\u83035.0\u7248\u7684use_device_addr\u3002\u8bf7\u6ce8\u610f\uff0c\u9664\u6b64\u4e4b\u5916\uff0cFortran\u7f16\u8bd1\u5668\u8fd8\u90e8\u5206\u652f\u6301OpenMP 4.5\uff1b\u7f3a\u5c11\u7684\u6700\u5927\u9879\u662f\u7ed3\u6784\u5143\u7d20\u6620\u5c04\u3002\n\u4f7f\u7528\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684I/O\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u5927\u5c0f\u5df2\u589e\u52a0\u52301048576\u3002\u73b0\u5728\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u683c\u5f0f\u5316\u6587\u4ef6\u548c\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cfGFORTRAN_FORMACTED_BUFFER_SIZE\u548cGFORTRAN_UNFORMACTED_BUFFER_SIZE\u5206\u522b\u8bbe\u7f6e\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002\n\u5355\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u4f2a\u53c2\u6570\u5217\u8868\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u73b0\u5728\u4f1a\u88ab\u62d2\u7edd\uff0c\u5e76\u8fd4\u56de\u9519\u8bef\u3002\u4f7f\u7528\u65b0\u9009\u9879-fallow-argument-mismatch\u5c06\u8fd9\u4e9b\u9519\u8bef\u8f6c\u6362\u4e3a\u8b66\u544a\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-std=Legacy\u4e2d\u3002-Wargument-\u5df2\u5220\u9664\u4e0d\u5339\u914d\u3002\n\u5bf9BOZ\u6587\u5b57\u5e38\u91cf\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u66f4\u597d\u5730\u7b26\u5408Fortran 2008\u548c2018\u6807\u51c6\u3002\u5728\u8fd9\u4e9bFortran\u6807\u51c6\u4e2d\uff0cBOZ\u6587\u5b57\u5e38\u91cf\u662f\u65e0\u7c7b\u578b\u548c\u65e0\u7c7b\u578b\u7684\u5b9e\u4f53\u3002\u4f5c\u4e3a\u8fd4\u5de5\u7684\u4e00\u90e8\u5206\uff0cFortran\u6807\u51c6\u7684\u6709\u6587\u6863\u548c\u65e0\u6587\u6863\u7684\u6269\u5c55\u73b0\u5728\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u53d1\u51fa\u9519\u8bef\u3002\u5176\u4e2d\u4e00\u4e9b\u6269\u5c55\u53ef\u4ee5\u4e0e-fallow-invalid-boz\u4e00\u8d77\u4f7f\u7528\uff0c\u5176\u4e2d\u9519\u8bef\u4f1a\u964d\u7ea7\u4e3a\u8b66\u544a\uff0c\u5e76\u4e14\u4ee3\u7801\u4f1a\u50cf\u4ee5\u524d\u7684gfortran\u4e00\u6837\u8fdb\u884c\u7f16\u8bd1\u3002\n\u5728\u9664-Os\u4e4b\u5916\u7684\u4efb\u4f55\u4f18\u5316\u7ea7\u522b\uff0cgfortran\u73b0\u5728\u5bf9\u53c2\u6570\u4f7f\u7528\u5185\u8054\u6253\u5305\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u5e93\u4f8b\u7a0b\u3002\u5982\u679c\u6e90\u4ee3\u7801\u5305\u542b\u5927\u91cf\u9700\u8981\u91cd\u65b0\u6253\u5305\u7684\u53c2\u6570\uff0c\u5219\u4ee3\u7801\u5927\u5c0f\u6216\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u53d8\u5f97\u8fc7\u5927\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528-fno-inline-arg-pack\u6765\u7981\u7528\u5185\u8054\u53c2\u6570\u6253\u5305\u3002\n\u4f20\u7edf\u6269\u5c55\uff1a\u5bf9\u4e8e\u683c\u5f0f\u5316\u7684\u8f93\u5165/\u8f93\u51fa\uff0c\u5982\u679c\u7701\u7565\u4e86\u6570\u636e\u7f16\u8f91\u63cf\u8ff0\u7b26I\u3001F\u548cG\u4e4b\u540e\u7684\u663e\u5f0f\u5bbd\u5ea6\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5bbd\u5ea6\u3002\n\u683c\u5f0f\u89c4\u8303\u672b\u5c3e\u7684\u683c\u5f0f\u9879\u76ee\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u540e\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u5185\u5bb9\u3002\u4f7f\u7528\u9009\u9879-FDEC-BLACK-FORMAT-ITEM\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-FDEC\u4e2d\u3002\n\u5df2\u6269\u5c55\u5bf9\u81ea\u52a8\u548c\u9759\u6001\u5c5e\u6027\u7684\u73b0\u6709\u652f\u6301\uff0c\u4ee5\u5141\u8bb8\u5728\u7b49\u4ef7\u8bed\u53e5\u4e2d\u4f7f\u7528\u5177\u6709\u81ea\u52a8\u5c5e\u6027\u7684\u53d8\u91cf\u3002\u4f7f\u7528-FDEC-STATIC\uff1b\u6b64\u9009\u9879\u7531-FDEC\u9690\u542b\u3002\n\u5141\u8bb8\u5728\u6570\u503c(\u6574\u6570\u3001\u5b9e\u6570\u6216\u590d\u6570)\u6216\u903b\u8f91\u53d8\u91cf\u7684\u8d4b\u503c\u548c\u6570\u636e\u8bed\u53e5\u4e2d\u4f7f\u7528\u5b57\u7b26\u6587\u5b57\u3002\u4f7f\u7528\u9009\u9879-fdec-char-Conversions\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-fdec\u4e2d\u3002\n\u5341\u8fdb\u5236\u6bd4\u8f83\uff0c\u5373\u5141\u8bb8\u4f7f\u7528\u970d\u5c14\u745e\u65af\u5e38\u91cf\u4e0e\u6574\u6570\u3001\u5b9e\u6570\u3001\u590d\u6570\u548c\u5b57\u7b26\u8868\u8fbe\u5f0f\u8fdb\u884c\u6bd4\u8f83\u3002\u4f7f\u7528\u9009\u9879-FDEC\u3002\n\u9519\u8bef\u548c\u8b66\u544a\u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u540d\u79f0\u73b0\u5728\u9664\u4e86\u79cd\u7c7b\u4e4b\u5916\u8fd8\u5305\u62eclen\uff1b*\u7528\u4e8e\u5047\u5b9a\u957f\u5ea6\u3002\u5982\u679c\u662f\u9ed8\u8ba4\u7c7b\u578b\uff0c\u5219\u7701\u7565\u8be5\u7c7b\u578b\u3002\u4f8b\u5982\uff1aCharacter(12)\u3001Character(6\uff0c4)\u3002\nCo_Broadcast\u73b0\u5728\u652f\u6301\u6d3e\u751f\u7c7b\u578b\u53d8\u91cf\uff0c\u5305\u62ec\u5177\u6709\u53ef\u5206\u914d\u7ec4\u4ef6\u7684\u5bf9\u8c61\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ef\u9009\u53c2\u6570STAT=\u548cERRMSG=\u5f53\u524d\u88ab\u5ffd\u7565\u3002\n\u5bf9\u6a21\u5757\u548c\u5b50\u6a21\u5757\u540d\u79f0\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u5141\u8bb8\u6807\u51c6\u8981\u6c42\u768463\u4e2a\u5b57\u7b26\u7684\u5b8c\u6574\u957f\u5ea6\u3002\u4ee5\u524d\uff0c\u5982\u679c\u6a21\u5757\u3001\u5b50\u6a21\u5757\u548c\u51fd\u6570\u540d\u79f0\u7684\u603b\u957f\u5ea6\u8d85\u8fc7126\u4e2a\u5b57\u7b26\uff0c\u5219\u7b26\u53f7\u540d\u79f0\u4f1a\u88ab\u622a\u65ad\u3002\u56e0\u6b64\uff0c\u6b64\u66f4\u6539\u8fdd\u53cd\u4e86ABI\uff0c\u4f46\u4ec5\u9002\u7528\u4e8e\u8d85\u8fc7126\u4e2a\u5b57\u7b26\u9650\u5236\u7684\u60c5\u51b5\u3002\nAArch64\u548cARM\u7aef\u53e3\u73b0\u5728\u652f\u6301\u4e32\u8054\u7ec4\u4ef6\u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u8f93\u51fa\u7ea6\u675f\uff0c\u5982__GCC_ASM_FLAG_OUTPUTS__\u6240\u793a\u3002\u5728ARM\u4e0a\uff0c\u6b64\u529f\u80fd\u4ec5\u9002\u7528\u4e8eA32\u548cT32\u76ee\u6807\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u4e0e\u53ef\u4f38\u7f29\u5411\u91cf\u6269\u5c55(Scalable Vector Extension\uff0cSVE)\u76f8\u5173\u7684\u6539\u8fdb\u6709\u51e0\u4e2a\uff1a\u73b0\u5728\u652f\u6301SVE Acle\u7c7b\u578b\u548c\u5185\u90e8\u51fd\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u5934\u6587\u4ef6arm_sve.h\u8bbf\u95ee\u5b83\u4eec\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528ARM_SVE_VECTOR_BITS\u5c5e\u6027\u521b\u5efa\u56fa\u5b9a\u957f\u5ea6\u7684SVE\u7c7b\u578b\u3002\u4f8b\u5982\uff1a\n-MSVE-VECTOR-BITS=128\u73b0\u5728\u4e3a\u5c0f\u7aef\u76ee\u6807\u751f\u6210\u7279\u5b9a\u4e8e\u5411\u91cf\u957f\u5ea6\u7684\u4ee3\u7801\u3002\u5b83\u7ee7\u7eed\u4e3a\u5927\u7aef\u76ee\u6807\u751f\u6210\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5\u7684\u4ee3\u7801\uff0c\u5c31\u50cf\u4ee5\u524d\u7684\u7248\u672c\u5bf9\u6240\u6709\u76ee\u6807\u6240\u505a\u7684\u90a3\u6837\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u52a0\u8f7d\u548c\u622a\u65ad\u5b58\u50a8\uff0c\u5305\u62ec\u805a\u96c6\u52a0\u8f7d\u548c\u5206\u6563\u5b58\u50a8\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u6bd4\u8f83\u4f7f\u7528SVE\u548cAdvanced SIMD\u8fdb\u884c\u77e2\u91cf\u5316\u7684\u6210\u672c\uff0c\u5e76\u5c1d\u8bd5\u9009\u62e9\u6700\u597d\u7684\u3002\u4ee5\u524d\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5b83\u603b\u662f\u4f7f\u7528SVE\u3002\n\u5982\u679c\u5411\u91cf\u5faa\u73af\u4f7f\u7528Advanced SIMD\u800c\u4e0d\u662fSVE\uff0c\u90a3\u4e48\u5411\u91cf\u5316\u5668\u73b0\u5728\u4f1a\u8003\u8651\u4f7f\u7528SVE\u6765\u5411\u91cf\u5316\u5269\u4f59\u5143\u7d20(\u201c\u6807\u91cf\u5c3e\u201d\u6216\u201c\u5c3e\u90e8\u201d)\u3002\n\u9664\u4e86\u8fd9\u4e9b\u7279\u5b9a\u70b9\u4e4b\u5916\uff0c\u5411\u91cf\u5316\u5668\u4f7f\u7528SVE\u7684\u65b9\u5f0f\u8fd8\u6709\u8bb8\u591a\u4e00\u822c\u6027\u7684\u6539\u8fdb\u3002\nmBranch-Protection=pac-ret\u9009\u9879\u73b0\u5728\u63a5\u53d7\u53ef\u9009\u7684\u53c2\u6570+b-key\u6269\u5c55\uff0c\u4ee5\u4f7f\u7528B-key\u800c\u4e0d\u662fA-key\u6267\u884c\u8fd4\u56de\u5730\u5740\u7b7e\u540d\u3002\n\u6dfb\u52a0\u4e86\u9009\u9879-mOutline-Atomics\uff0c\u4ee5\u5e2e\u52a9\u5728GNU/Linux\u7cfb\u7edf\u4e0a\u90e8\u7f72\u5927\u578b\u7cfb\u7edf\u6269\u5c55(LSE)\uff0c\u8be5\u7cfb\u7edf\u4ee5\u9762\u5411ARMv8-A\u7684\u57fa\u51c6\u67b6\u6784\u6784\u5efa\u3002\u5f53\u6307\u5b9a\u8be5\u9009\u9879\u65f6\uff0c\u5c06\u53d1\u51fa\u4ee3\u7801\u4ee5\u5728\u8fd0\u884c\u65f6\u68c0\u6d4bLSE\u6307\u4ee4\u7684\u5b58\u5728\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u6807\u51c6\u539f\u5b50\u64cd\u4f5c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u73b0\u5728\u901a\u8fc7ALE\u5185\u90e8\u529f\u80fd\u652f\u6301\u4e8b\u52a1\u6027\u5185\u5b58\u6269\u5c55\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+tme\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+tme)\u3002\nArmv8.5-A\u4e2d\u7684\u8bb8\u591a\u529f\u80fd\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\u3002\u5176\u4e2d\u5305\u62ec\uff1a\u53ef\u901a\u8fc7(GCC 9.1\u4e2d\u5df2\u6709)+RNG\u9009\u9879\u6269\u5c55\u542f\u7528\u7684\u968f\u673a\u6570\u6307\u4ee4\u3002\n\u7c7b\u4f3c\u5730\uff0c\u4e0b\u9762\u7684Armv8.6-A\u7279\u6027\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\uff1abfloat16\u6269\u5c55\u3002\u5f53\u9009\u62e9Armv8.6-A\u65f6\uff0c\u8be5\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528(\u4f8b\u5982by-march=armv8.6-a)\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528+bf16\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u53ca\u66f4\u9ad8\u7248\u672c\u542f\u7528\u5b83\u3002\n\u77e9\u9635\u4e58\u6cd5\u6269\u5c55\u3002\u6b64\u6269\u5c55\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5bf9\u5e94\u4e8e\u6bcf\u79cd\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\uff1a\u652f\u63018\u4f4d\u6574\u6570\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u9009\u62e9Armv8.6-A\u65f6\uff0c\u6b64\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528+i8 mm\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u548c\u66f4\u9ad8\u7248\u672c\u542f\u7528\u3002\n\u652f\u630132\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f32 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u4e5f\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\n\u652f\u630164\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f64 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u540c\u6837\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\nSVE2\u73b0\u5728\u901a\u8fc7ACLE\u5185\u90e8\u529f\u80fd\u548c(\u5728\u6709\u9650\u8303\u56f4\u5185)\u81ea\u52a8\u77e2\u91cf\u5316\u6765\u652f\u6301\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+sve2\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+sve2)\u3002\u53ef\u4ee5\u901a\u8fc7+sve2-sm4\u3001+sve2-aes\u3001+sve2-sha3\u548c+sve2-bitperm\u542f\u7528\u5176\u4ed6\u6269\u5c55\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-a65ae\u6216\u7528\u4f5c\u7b49\u6548\u76ee\u6807\u5c5e\u6027\u548c\u7f16\u8bd1\u6307\u793a\u7684\u53c2\u6570\u3002\n\u6dfb\u52a0\u4e86\u5bf9FDPIC ABI\u7684\u652f\u6301\u3002\u5b83\u4f7f\u752864\u4f4d\u51fd\u6570\u63cf\u8ff0\u7b26\u6765\u8868\u793a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u5e76\u5728\u65e0MMU\u7684\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u4ee3\u7801\u5171\u4eab\u3002\u5bf9\u5e94\u7684\u76ee\u6807\u4e09\u5143\u7ec4\u662farm-uclinuxfdpiceabi\uff0cC\u5e93\u662fuclibc-ng\u3002\n\u5728\u4f7f\u752864\u4f4d\u6574\u6570\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5bf964\u4f4d\u6574\u6570\u64cd\u4f5c\u7684\u5904\u7406\u8fdb\u884c\u4e86\u663e\u7740\u7684\u4fee\u6539\u548c\u6539\u8fdb\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u5e76\u51cf\u5c11\u4e86\u5806\u6808\u4f7f\u7528\u91cf\u3002\u9009\u9879-mneon-for-64\u4f4d\u73b0\u5728\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-m35p\u3002\n\u5bf9ALE\u6570\u636e\u5904\u7406\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u5df2\u7ecf\u6269\u5c55\u5230\u5305\u62ec32\u4f4dSIMD\u3001\u9971\u548c\u7b97\u672f\u300116\u4f4d\u4e58\u6cd5\u548c\u5176\u4ed6\u65e8\u5728\u4f18\u5316DSP\u7b97\u6cd5\u7684\u76f8\u5173\u5185\u90e8\u529f\u80fd\u3002\n\u5728Thumb-1(V6m)\u4e2d\u6dfb\u52a0\u4e86\u5bf9-mpury-code\u7684\u652f\u6301\uff1a\u6b64M-profile\u529f\u80fd\u4e0d\u518d\u5c40\u9650\u4e8e\u5177\u6709movt\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0c-mcpu=corcorp-m0\u73b0\u5728\u652f\u6301\u6b64\u9009\u9879\u3002\n\u6dfb\u52a0\u4e86\u5bf9MVE\u6d4b\u8bd5\u7248Acle\u5185\u90e8\u7279\u6027\u7684\u652f\u6301\u3002\u53ef\u4ee5\u901a\u8fc7\u5305\u62ecarm_mve.h\u5934\u6587\u4ef6\u5e76\u4f20\u9012+mve\u6216+mve.fp\u9009\u9879\u6269\u5c55\u540d\u6765\u542f\u7528\u8fd9\u4e9b\u5185\u90e8\u529f\u80fd(\u4f8b\u5982\uff1a-march=armv8.1-m.main+mve)\u3002\n\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u529f\u80fd\u4fdd\u5b58\u6240\u6709\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\uff0c\u5305\u62ec\u96f6\u5f00\u9500\u73af\u8def\u4f7f\u7528\u7684\u6269\u5c55\u5bc4\u5b58\u5668\u548c\u8f85\u52a9\u5bc4\u5b58\u5668\u3002\n\u901a\u8fc7\u4f7f\u7528\u591a\u6761\u77ed\u6307\u4ee4\u63d0\u9ad8\u4ee3\u7801\u5927\u5c0f\u3002\n..", "note_en": "This page is a &#34;brief&#34; summary of some of the huge number of improvementsin GCC 10.You may also want to check out our Porting to GCC 10 page and the full GCC documentation.\n  An ABI incompatibility between C++14 and C++17 has been fixed. On some targets a class with a zero-sized subobject would be passed incorrectly when compiled as C++17 or C++20. See the  C++ notes below for more details.\n    The non-standard  std::__is_nullptr_t type trait is deprecated and will be removed from libstdc++ in a future release. The standard trait  std::is_null_pointer should be instead.\n  The minimum version of the  MPFR library required for building GCC has been increased to version 3.1.0 (released 2011-10-03).\n    The  --param allow-store-data-races internal parameter has been removed in favor of a new official option  -fallow-store-data-races. While default behavior is unchanged and the new option allows to correctly maintain a per compilation unit setting across link-time optimization, alteration of the default via  --param allow-store-data-races will now be diagnosed and build systems have to be adjusted accordingly.\n  Offloading to Heterogeneous System Architecture Intermediate Language (HSAIL) has been deprecated and will likely be removed in a future release.\n  New built-in functions:  The\t  __has_builtin\tbuilt-in preprocessor operator can be used to query support\tfor built-in functions provided by GCC and other compilers\tthat support it.\n  New command-line options:  -fprofile-partial-training\t can now be used to inform the compiler that code paths not covered by the\t training run should not be optimized for size.\n  -fprofile-reproducible\t controls level of reproducibility of profile gathered by\t   -fprofile-generate.\t This makes it possible to rebuild program\t with same outcome which is useful, for example, for distribution packages.\n  -fprofile-prefix-path\t can be used in combination with  -fprofile-generate=profile_dir and\t  -fprofile-use=profile_dir to inform GCC where the base\t directory of build source tree is in case it differs between instrumentation\t and optimized builds.\n  -fanalyzer\tenables a new static analysis pass and associated warnings.\tThis pass performs a time-consuming exploration of paths through\tthe code in the hope of detecting various common errors, such as\tdouble-free bugs. This option should be regarded as\t experimental in this release. In particular, analysis of non-C\tcode is unlikely to work.\n  Inter-procedural optimization improvements:  The inter-procedural scalar replacement of aggregates (IPA-SRA) pass\t was re-implemented to work at link-time and can now also remove\t computing and returning unused return values.\n  -finline-functions\t is now enabled at  -O2 and was retuned for better code\t size versus runtime performance trade-offs. Inliner heuristics was\t also significantly sped up to avoid negative impact to  -flto\t -O2 compile times.\n  Inliner heuristics and function cloning can now use value-range\t information to predict effectivity of individual transformations.\n  During link-time optimization the C++ One Definition Rule is used to\t increase precision of type based alias analysis.\n  Link-time optimization improvements:  A new binary   lto-dump has been added. The program can dump various information about a LTO bytecode object file.\n  Parallel phase of the LTO can automatically detect a running make&#39;s\tjobserver or can fall back to number of available cores.\n  The LTO bytecode can be compressed with   zstd algorithm. Configure script can automatically detect the  zstd support.\n  Most  --param values can now be specified at\t translation unit granularity. This includes all parameters controlling\t the inliner and other inter-procedural optimizations. Unlike earlier\t releases, GCC 10 will ignore parameters controlling optimizations\t specified at link-time and apply parameters specified at compile-time\t in the same manner as done for optimization flags.\n  Profile driven optimization improvements:  Using   -fprofile-values, an instrumented binary can track multiple\tvalues (up to 4) for e.g. indirect calls and provide more precise\tprofile information.\n  Version 2.6 of the  OpenACC specification is now supported in the C, C++ and Fortran compilers. See the  implementation status section on the OpenACC wiki page and the   run-time library documentation for further information.\n  GCC 10 adds a number of newly implemented  OpenMP 5.0 features on top of the GCC 9 release such as  conditional  lastprivate clause,  scan and  loop directives,  order(concurrent) and  use_device_addr clauses support,  if clause on  simd construct or partial support for the  declare\u00a0variant directive, getting closer to full support of the OpenMP 5.0 standard.\n  OpenMP and OpenACC now support  offloading to AMD Radeon (GCN) GPUs; supported are the third-generation Fiji ( fiji) and the fifth-generation VEGA 10/VEGA 20 ( gfx900 or  gfx906).\n  New attributes:  The  access function and type attribute has been added to describe how a function accesses objects passed to it by pointer or reference, and to associate such arguments with integer arguments denoting the objects&#39; sizes. The attribute is used to enable the detection of invalid accesses by user-defined functions, such as those diagnosed by  -Wstringop-overflow.\n  The  symver attribute can be used to bind symbols to specific version nodes on ELF platforms. This is preferred to using inline assembly with GNU as  symver directive because the latter is not compatible with link-time optimizations.\n  New warnings:  -Wstring-compare, enabled\tby  -Wextra, warns about equality and inequality\texpressions between zero and the result of a call to either\t strcmp and  strncmp that evaluate to\ta constant as a result of the length of one argument being greater\tthan the size of the array pointed to by the other.\n  -Wzero-length-bounds,\tenabled by  -Warray-bounds, warns about accesses to\telements of zero-length arrays that might overlap other members\tof the same object.\n  Enhancements to existing warnings:  -Warray-bounds\tdetects more out-of-bounds accesses to member arrays as well as\taccesses to elements of zero-length arrays.\n        -Wstringop-overflow\tdetects more out-of-bounds stores to member arrays including\tzero-length arrays, dynamically allocated objects and variable length\tarrays, as well as more instances of reads of unterminated character\tarrays by string built-in functions. The warning also detects\tout-of-bounds accesses by calls to user-defined functions declared\twith the new attribute  access.\n  Extended characters in identifiers may now be specified directly in the input encoding (UTF-8, by default), in addition to the UCN syntax ( \\uNNNN or  \\UNNNNNNNN) that is already supported:\n  Several new features from the upcoming C2X revision of the ISO C standard are supported with  -std=c2x and  -std=gnu2x. Some of these features are also supported as extensions when compiling for older language versions. In addition to the features listed, some features previously supported as extensions and now added to the C standard are enabled by default in C2X mode and not diagnosed with  -std=c2x -Wpedantic.  The  [[]] attribute syntax is supported, as in C++. Existing attributes can be used with this syntax in forms such as  [[gnu::const]]. The standard attributes  [[deprecated]],  [[fallthrough]] and  [[maybe_unused]] are supported.\n      When decimal floating-point arithmetic is supported,  &lt;float.h&gt; defines macros  DEC32_TRUE_MIN,  DEC64_TRUE_MIN and  DEC128_TRUE_MIN, in addition to the macros that were previously only defined if  __STDC_WANT_DEC_FP__ was defined before including  &lt;float.h&gt;.\n  In C2X mode, empty parentheses in a function definition give that function a type with a prototype for subsequent calls; other old-style function definitions are diagnosed by default in C2X mode.\n  GCC now defaults to  -fno-common. As a result, global variable accesses are more efficient on various targets. In C, global variables with multiple tentative definitions now result in linker errors. With  -fcommon such definitions are silently merged during linking.\n  New warnings:  -Wmismatched-tags,\tdisabled by default, warns about declarations of structs, classes,\tand class templates and their specializations with a class-key that\tdoes not match either the definition or the first declaration if no\tdefinition is provided. The option is provided to ease portability\tto Windows-based compilers.\n  -Wredundant-tags,\tdisabled by default, warns about redundant  class-key and\t enum-key in contexts where the key can be eliminated without\tcausing an syntactic ambiguity.\n              The ABI of passing and returning certain C++ classes by value changed on several targets in GCC 10, including  AArch64,  ARM,  PowerPC ELFv2,  S/390 and  Itanium. These changes affect classes with a zero-sized subobject (an empty base class, or data member with the  [[no_unique_address]] attribute) where all other non-static data members have the same type (this is called a &#34;homogeneous aggregate&#34; in some ABI specifications, or if there is only one such member, a &#34;single element&#34;). In  -std=c++17 and  -std=c++20 modes, classes with an empty base class were not considered to have a single element or to be a homogeneous aggregate, and so could be passed differently (in the wrong registers or at the wrong stack address). This could make code compiled with  -std=c++17 and  -std=c++14 ABI incompatible. This has been corrected and the empty bases are ignored in those ABI decisions, so functions compiled with  -std=c++14 and  -std=c++17 are now ABI compatible again. Example:  struct empty {}; struct S : empty { float f; }; void f(S);. Similarly, in classes containing non-static data members with empty class types using the C++20  [[no_unique_address]] attribute, those members weren&#39;t ignored in the ABI argument passing decisions as they should be. Both of these ABI changes are now diagnosed with  -Wpsabi.\n    Aliases can now be created directly from any  __traits that return symbols or tuples. Previously, an  AliasSeq was necessary in order to alias their return.\n  It is now possible to detect the language ABI specified for a struct, class, or interface using  __traits(getLinkage, ...).  Support for  core.math.toPrec intrinsics has been added. These intrinsics guarantee the rounding to specific floating-point precisions at specified points in the code.\n  Support for  pragma(inline) has been implemented. Previously the pragma was recognized, but had no effect on the compilation.\n  Optional parentheses in  asm operands are deprecated and will be removed in a future release.\n  All content imported files are now included in the make dependency list when compiling with  -M.\n  Compiler recognized attributes provided by the  gcc.attribute module will now take effect when applied to function prototypes as well as when applied to full function declarations.\n  Added a  --enable-libphobos-checking configure option to control whether run-time checks are compiled into the D runtime library.\n  Added a  --with-libphobos-druntime-only configure option to indicate whether to build only the core D runtime library, or both the core and standard libraries into libphobos.\n  use_device_addr of version 5.0 of the  OpenMP specification is now supported. Note that otherwise OpenMP 4.5 is partially supported in the Fortran compiler; the largest missing item is structure element mapping.\n  The default buffer size for I/O using unformatted files has been increased to 1048576. The buffer size for can now be set at runtime via the environment variables  GFORTRAN_FORMATTED_BUFFER_SIZE and  GFORTRAN_UNFORMATTED_BUFFER_SIZE for formatted and unformatted files, respectively.\n  Mismatches between actual and dummy argument lists in a single file are now rejected with an error. Use the new option  -fallow-argument-mismatch to turn these errors into warnings; this option is implied with  -std=legacy.  -Wargument-mismatch has been removed.\n  The handling of a BOZ literal constant has been reworked to provide better conformance to the Fortran 2008 and 2018 standards. In these Fortran standards, a BOZ literal constant is a typeless and kindless entity. As a part of the rework, documented and undocumented extensions to the Fortran standard now emit errors during compilation. Some of these extensions are permitted with the  -fallow-invalid-boz, where the error is degraded to a warning and the code is compiled as with older gfortran.\n  At any optimization level except -Os, gfortran now uses inline packing for arguments instead of calling a library routine. If the source contains a large number of arguments that need to be repacked, code size or time for compilation can become excessive. If that is the case,  -fno-inline-arg-packing can be used to disable inline argument packing.\n  Legacy extensions:  For formatted input/output, if the explicit widths after the data-edit descriptors  I,  F and  G have been omitted, default widths are used.\n  A blank format item at the end of a format specification, i.e. nothing following the final comma, is allowed. Use the option  -fdec-blank-format-item; this option is implied with  -fdec.\n  The existing support for  AUTOMATIC and  STATIC attributes has been extended to allow variables with the  AUTOMATIC attribute to be used in  EQUIVALENCE statements. Use  -fdec-static; this option is implied by  -fdec.\n  Allow character literals in assignments and  DATA statements for numeric ( INTEGER,  REAL, or  COMPLEX) or  LOGICAL variables. Use the option  -fdec-char-conversions; this option is implied with  -fdec.\n  DEC comparisons, i.e. allow Hollerith constants to be used in comparisons with  INTEGER,  REAL,  COMPLEX and  CHARACTER expressions. Use the option  -fdec.\n  Character type names in errors and warnings now include  len in addition to  kind;  * is used for assumed length. The kind is omitted if it is the default kind. Examples:  CHARACTER(12),  CHARACTER(6,4).\n  CO_BROADCAST now supports derived type variables including objects with allocatable components. In this case, the optional arguments  STAT= and  ERRMSG= are currently ignored.\n  The handling of module and submodule names has been reworked to allow the full 63-character length mandated by the standard. Previously symbol names were truncated if the combined length of module, submodule, and function name exceeded 126 characters. This change therefore breaks the ABI, but only for cases where this 126 character limit was exceeded.\n   The AArch64 and arm ports now support condition flag output constraints in inline assembly, as indicated by the  __GCC_ASM_FLAG_OUTPUTS__. On arm this feature is only available for A32 and T32 targets. Please refer to the documentation for more details.\n  There have been several improvements related to the Scalable Vector Extension (SVE):  The SVE ACLE types and intrinsics are now supported. They can be accessed using the header file  arm_sve.h.\n  It is now possible to create fixed-length SVE types using the  arm_sve_vector_bits attribute. For example:\n    -msve-vector-bits=128 now generates vector-length-specific code for little-endian targets. It continues to generate vector-length-agnostic code for big-endian targets, just as previous releases did for all targets.\n  The vectorizer is now able to use extending loads and truncating stores, including gather loads and scatter stores.\n  The vectorizer now compares the cost of vectorizing with SVE and vectorizing with Advanced SIMD and tries to pick the best one. Previously it would always use SVE if possible.\n  If a vector loop uses Advanced SIMD rather than SVE, the vectorizer now considers using SVE to vectorize the left-over elements (the \u201cscalar tail\u201d or \u201cepilog\u201d).\n  Besides these specific points, there have been many general improvements to the way that the vectorizer uses SVE.\n  The  -mbranch-protection=pac-ret option now accepts the optional argument  +b-key extension to perform return address signing with the B-key instead of the A-key.\n  The option  -moutline-atomics has been added to aid deployment of the Large System Extensions (LSE) on GNU/Linux systems built with a baseline architecture targeting Armv8-A. When the option is specified code is emitted to detect the presence of LSE instructions at runtime and use them for standard atomic operations. For more information please refer to the documentation.\n  The Transactional Memory Extension is now supported through ACLE intrinsics. It can be enabled through the  +tme option extension (for example,  -march=armv8.5-a+tme).\n  A number of features from Armv8.5-A are now supported through ACLE intrinsics. These include:  The random number instructions that can be enabled\tthrough the (already present in GCC 9.1)  +rng option\textension.\n  Similarly, the following Armv8.6-A features are now supported through ACLE intrinsics:  The bfloat16 extension. This extension is enabled automatically when Armv8.6-A is selected (such as by  -march=armv8.6-a). It can also be enabled for Armv8.2-A and later using the  +bf16 option extension.\n  The Matrix Multiply extension. This extension is split into three parts, one for each supported data type:\t Support for 8-bit integer matrix multiply instructions.\t This extension is enabled automatically when Armv8.6-A is\t selected. It can also be enabled for Armv8.2-A and later using\t the  +i8mm option extension.\n  Support for 32-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f32mm\t option extension, which also has the effect of enabling SVE.\n  Support for 64-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f64mm\t option extension, which likewise has the effect of enabling SVE.\n  SVE2 is now supported through ACLE intrinsics and (to a limited extent) through autovectorization. It can be enabled through the  +sve2 option extension (for example,  -march=armv8.5-a+sve2). Additional extensions can be enabled through  +sve2-sm4,  +sve2-aes,  +sve2-sha3 and  +sve2-bitperm.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-a65ae or as arguments to the equivalent target attributes and pragmas.\n  Support for the FDPIC ABI has been added. It uses 64-bit function descriptors to represent pointers to functions, and enables code sharing on MMU-less systems. The corresponding target triple is  arm-uclinuxfdpiceabi, and the C library is uclibc-ng.\n    The handling of 64-bit integer operations has been significantly reworked and improved leading to improved performance and reduced stack usage when using 64-bit integral data types. The option  -mneon-for-64bits is now deprecated and will be removed in a future release.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-m35p.\n  Support has been extended for the ACLE   data-processing intrinsics to include 32-bit SIMD, saturating arithmetic, 16-bit multiplication and other related intrinsics aimed at DSP algorithm optimization.\n  Support for  -mpure-code in Thumb-1 (v6m) has been added: this M-profile feature is no longer restricted to targets with  MOVT. For example,  -mcpu=cortex-m0 now supports this option.\n      Support for the   MVE beta ACLE intrinsics has been added. These intrinsics can be enabled by including the arm_mve.h header file and passing the  +mve  or  +mve.fp  option extensions (for example:  -march=armv8.1-m.main+mve ).\n    The interrupt service routine functions save all used registers, including extension registers and auxiliary registers used by Zero Overhead Loops.\n  Improve code size by using multiple short instructi\n......", "posttime": "2020-05-17 06:49:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6dd8\u6c70,gcc", "title": "GCC\u88ab\u6dd8\u6c70\u51fa\u5c40", "title_en": "GCC 10.1 Is Out", "transed": 1, "url": "https://gcc.gnu.org/gcc-10/changes.html", "via": "", "real_tags": ["\u6dd8\u6c70", "gcc"]}, {"category": "", "categoryclass": "", "imagename": "a437c9bce657fa83fcd2aaae9537d6b3.jpeg", "infoid": 1002451, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u8bf4\uff0c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u7684\u4e00\u4f4d\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u5df2\u7ecf\u89e3\u51b3\u4e86\u5047\u8bbe\u66f2\u901f\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2a\u6096\u8bba\u3002\nAlcubierre\u9a71\u52a8\u5668\u4f7f\u7528\u5de8\u5927\u7684\u80fd\u91cf\u6765\u5236\u9020\u4e00\u79cd\u6298\u53e0\u5f0f\u7684\u53e3\u888b\u5c3a\u5bf8\u3002\n\u7f8e\u56fd\u5b87\u822a\u5c40\u771f\u7684\u5728\u7814\u7a76\u3002\u3002\u3002\u66f2\u901f\u9a71\u52a8\u5668\uff1f\u4e00\u4efd\u5185\u90e8\u53ef\u884c\u6027\u62a5\u544a\u8868\u660e\uff0c\u8be5\u673a\u6784\u53ef\u80fd\u662f\uff0c\u6216\u8005\u81f3\u5c11\u5728\u6298\u53e0\u7a7a\u95f4\u65c5\u884c\u7684\u60f3\u6cd5\u662fNASA\u661f\u9645\u592a\u7a7a\u98de\u884c\u83dc\u5355\u7684\u4e00\u90e8\u5206\u3002\n\u5728\u8fd9\u4efd\u62a5\u544a\u4e2d\uff0c\u9ad8\u7ea7\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u54c8\u7f57\u5fb7\u00b7\u201c\u6851\u5c3c\u201d\u00b7\u6000\u7279\u89e3\u91ca\u4e86\u7406\u8bba\u7269\u7406\u5b66\u5bb6(\u548c\u540c\u884c)\u7c73\u683c\u5c14\u00b7\u963f\u5c14\u5e93\u6bd4\u5c14\u7684\u89c2\u70b9\u3002\u7136\u540e\uff0c\u4ed6\u63cf\u8ff0\u4e86\u963f\u5c14\u5e93\u6bd4\u57c3\u5c14\u5de5\u4f5c\u4e2d\u7684\u4e00\u4e2a\u201c\u6096\u8bba\u201d\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u6096\u8bba\u6765\u5efa\u7acb\u4e00\u4e2a\u5de5\u4f5c\u6a21\u578b\u3002\n\u53e3\u8bed\u5316\u7684\u672f\u8bed\u201c\u66f2\u901f\u9a71\u52a8\u201d\u6765\u81ea\u79d1\u5e7b\u5c0f\u8bf4\uff0c\u5b83\u6307\u7684\u662f\u7b26\u5408\u7231\u56e0\u65af\u5766\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u4e9a\u5149\u901f(\u4f4e\u4e8e\u5149\u901f)\u65c5\u884c\u7684\u6982\u5ff5\uff0c\u4f46\u4ecd\u7136\u5c06\u901f\u5ea6\u63a8\u5230\u7406\u8bba\u4e0a\u53ef\u80fd\u7684\u7edd\u5bf9\u6700\u5927\u503c\u3002\u5728\u201c\u661f\u9645\u8ff7\u822a\u201d\u7684\u7ecf\u5178\u4e2d\uff0c\u6e10\u8fdb\u5f0f\u7684\u8bbe\u8ba1\u8d8a\u6765\u8d8a\u63a5\u8fd1\u4e00\u4e2a\u5047\u8bbe\u7684\u969c\u788d--\u8fd9\u5c31\u662f\u771f\u6b63\u7684\u79d1\u5b66\u5bb6\u4eec\u4e0d\u65ad\u5411\u7edd\u5bf9\u96f6\u5ea6\u5f00\u51ff\u7684\u65b9\u5f0f\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5149\u901f\u662f\u969c\u788d\u3002\nAlcubierre\u9a71\u52a8\u5668\u7684\u5de5\u4f5c\u539f\u7406\u5c31\u50cf\u662f\u7ecf\u5178\u6d3e\u5bf9\u628a\u620f\u7684\u7269\u7406\u7248\u672c\u3002\u5b87\u5b99\u98de\u8239\u5750\u5728\u65f6\u7a7a\u4e2d\uff0c\u800c\u79d1\u5b66\u5c06\u9762\u6599\u4ece\u5b83\u524d\u9762\u62c9\u5230\u5b83\u540e\u9762\uff0c\u5c31\u50cf\u4e00\u5757\u684c\u5e03\u4ece\u94fa\u5f00\u7684\u76d8\u5b50\u4e0b\u9762\u62c9\u51fa\u6765\u4e00\u6837\u3002\u6000\u7279\u89e3\u91ca\u8bf4\uff1a\n\u201cAlcubierre\u6240\u63cf\u8ff0\u7684\u64cd\u4f5c\u6982\u5ff5\u662f\uff0c\u822a\u5929\u5668\u5c06\u4f7f\u7528\u4e00\u4e9b\u4f20\u7edf\u7684\u63a8\u8fdb\u7cfb\u7edf\u79bb\u5f00\u8d77\u59cb\u70b9(\u4f8b\u5982\u5730\u7403)\uff0c\u5e76\u884c\u9a76\u4e00\u6bb5\u8ddd\u79bbd\uff0c\u7136\u540e\u4f7f\u98de\u8239\u76f8\u5bf9\u4e8e\u51fa\u53d1\u70b9\u505c\u4e0b\u6765\u3002\u201d\u78c1\u573a\u4f1a\u6253\u5f00\uff0c\u98de\u8239\u5c31\u4f1a\u8fc5\u901f\u98de\u5411\u5b83\u7684\u6052\u661f\u76ee\u7684\u5730\uff0c\u4e0d\u4f1a\u5728\u5c40\u90e8\u7a81\u7834\u5149\u901f\uff0c\u4f46\u4f1a\u5728\u4efb\u610f\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6574\u4e2a\u8ddd\u79bb\u3002\u201c\u3002\nAlcubierre\u7684\u7406\u8bba\u53ef\u4ee5\u8ffd\u6eaf\u52301994\u5e74\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u7269\u7406\u5b66\u5bb6\u4eec\u5c31\u4e00\u76f4\u628a\u5b83\u4f5c\u4e3a\u8fdb\u4e00\u6b65\u8ba8\u8bba\u7684\u8d77\u70b9\u3002\u901a\u8fc7\u521b\u9020\u4e00\u79cd\u8896\u73cd\u4e16\u754c\uff0c\u5b87\u5b99\u98de\u8239\u4f3c\u4e4e\u53ef\u4ee5\u5728\u7269\u7406\u4e4b\u5916\u8fd0\u884c\uff0c\u7269\u7406\u5b9a\u5f8b\u53ef\u4ee5\u88ab\u56de\u907f-\u81f3\u5c11\u7406\u8bba\u662f\u8fd9\u6837\u7684\u3002\n\u8fd9\u5176\u4e2d\u6709\u4ec0\u4e48\u77db\u76fe\u4e4b\u5904\u5462\uff1f\u6000\u7279\u662f\u8fd9\u6837\u63cf\u8ff0\u7684\uff1a\u201c\u80fd\u91cf\u5bc6\u5ea6\u542f\u52a8\u65f6\uff0c+x\u8f74\u65b9\u5411\u7684\u9009\u62e9\u5728\u6570\u5b66\u4e0a\u662f\u4efb\u610f\u7684\uff0c\u90a3\u4e48\u822a\u5929\u5668\u600e\u4e48\u2018\u77e5\u9053\u2019\u8be5\u5f80\u54ea\u4e2a\u65b9\u5411\u8d70\u5462\uff1f\u201d\u79d1\u5e7b\u5c0f\u8bf4\u901a\u8fc7\u53d1\u660e\u4e00\u4e2a\u201c\u7a33\u5b9a\u7684\u866b\u6d1e\u201d\u89e3\u51b3\u4e86\u8fd9\u4e2a\u6096\u8bba\uff0c\u4f46\u662f\u6000\u7279\u4e0d\u80fd\u9a7e\u9a76\u4e00\u67b6\u5929\u795e(Deus Ex Machina)\u53bb\u534a\u4eba\u9a6c\u5ea7\u963f\u5c14\u6cd5\u661f(Alpha Centauri)\u3002\n\u76f8\u53cd\uff0c\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7565\u6709\u4e0d\u540c\u7684\u8303\u4f8b\uff1a\u201c\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u64cd\u4f5c\u6982\u5ff5\u4e2d\uff0c\u822a\u5929\u5668\u79bb\u5f00\u5730\u7403\uff0c\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u7684\u4e9a\u5149\u901f\uff0c\u7136\u540e\u542f\u52a8\u78c1\u573a\u3002\u5f53\u6fc0\u6d3b\u65f6\uff0c\u78c1\u573a\u7684\u52a9\u63a8\u4f5c\u7528\u4e8e\u521d\u59cb\u901f\u5ea6\uff0c\u4f5c\u4e3a\u6807\u91cf\u4e58\u6570\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u9ad8\u7684\u8868\u89c2\u901f\u5ea6\uff0c\u201c\u6000\u7279\u89e3\u91ca\u8bf4\u3002\n\u8fd9\u8258\u8239\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u7136\u540e\u542f\u52a8\u66f2\u901f\u9a71\u52a8\u5668\uff0c\u800c\u662f\u4f7f\u7528\u6447\u6446\u542f\u52a8\u4f5c\u4e3a\u65b9\u5411\u63d0\u793a\u3002\n\u6211\u4eec\u8ba4\u4e3a\u66f2\u901f\u662f\u5b9e\u73b0\u9065\u8fdc\u661f\u9645\u65c5\u884c\u7684\u552f\u4e00\u9014\u5f84\u3002\u6000\u7279\u5c06\u91cd\u70b9\u653e\u5728\u4e86\u4f5c\u54c1\u4e2d\u7684\u4e00\u4e2a\u6570\u5b66\u6096\u8bba\u4e0a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u969c\u788d\u3002\n\u4ed6\u8ba4\u4e3a\uff0c\u66f2\u901f\u7684\u8bd5\u9a8c\u573a\u53ef\u80fd\u79bb\u6211\u4eec\u5bb6\u66f4\u8fd1\u3002\u4ed6\u89e3\u91ca\u8bf4\uff1a\u201c\u66f2\u901f\u63a8\u8fdb\u5668\u7684\u60f3\u6cd5\u53ef\u80fd\u4f1a\u5728\u56fd\u5185\u2018\u6f5c\u610f\u8bc6\u2019\u6709\u4e00\u4e9b\u5353\u6709\u6210\u6548\u7684\u5e94\u7528\uff0c\u8ba9\u5b83\u5728\u6210\u4e3a\u771f\u6b63\u7684\u661f\u9645\u63a8\u8fdb\u5668\u7cfb\u7edf\u4e4b\u524d\u6210\u719f\u8d77\u6765\u3002\u201d\n\u5982\u679c\u79d1\u5b66\u5bb6\u80fd\u591f\u5236\u9020\u51fa\u963f\u5c14\u5e93\u6bd4\u5c14\u63a8\u8fdb\u5668\u6240\u9700\u7684\u6240\u8c13\u201c\u8d1f\u8d28\u91cf\u201d\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u90e8\u7f72\u5728\u5730\u7403\u7684\u5927\u6c14\u5c42\u4e2d\u3002\n\u6b64\u5185\u5bb9\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u4ee5\u5e2e\u52a9\u7528\u6237\u63d0\u4f9b\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728piano.io\u4e0a\u627e\u5230\u6709\u5173\u6b64\u5185\u5bb9\u548c\u7c7b\u4f3c\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "A NASA propulsion physicist has, he says,  resolved a paradox in a hypothetical warp drive.\n The Alcubierre drive  uses a huge amount of energy to make a sort of fold-like pocket dimension.\n   Is NASA really working on . . . a  warp drive? An  internal feasibility report suggests the agency might be, or at least that the idea of traveling through folded space is part of the NASA interstellar spaceflight menu.\n  In the report, advanced propulsion physicist Harold \u201cSonny\u201d White explains the ideas of theoretical physicist (and peer) Miguel Alcubierre. He then describes a \u201cparadox\u201d in Alcubierre\u2019s work, and how that paradox might be resolved to make a working model.\n   The colloquial term \u201cwarp drive\u201d has come from science fiction, and it refers to the idea of sub-luminal (less than the speed of light) travel that conforms to Einstein\u2019s theory of general relativity, but still pushes speed to absolute maximum that\u2019s theoretically possible. In the  Star Trek canon, progressive designs come closer and closer to a hypothetical barrier\u2014the way real scientists continue to hew closer and closer to absolute zero. In real life, light speed is the barrier.\n The Alcubierre drive works like a physics version of a classic party trick. The spaceship sits in spacetime while science pulls the fabric from in front of it to behind it, like a tablecloth pulled out from under a full spread of dishes. White explains:\n \u201cThe concept of operations as described by Alcubierre is that the spacecraft would depart the point of origin (e.g. earth) using some conventional propulsion system and travel a distance  d, then bring the craft to a stop relative to the departure point. The field would be turned on and the craft would zip off to its stellar destination, never locally breaking the speed of light, but covering the distance in an arbitrarily short period of time just the same.\u201d\n Alcubierre\u2019s theory dates to 1994, and physicists have used it as a jumping-off point for further discussion ever since. By creating a kind of pocket world where a spaceship can operate seemingly outside of physics, the  laws of physics can be sidestepped\u2014or so the theory goes.\n What\u2019s the paradox? White describes it this way: \u201cWhen the energy density is initiated, the choice in direction of the +x-axis is mathematically arbitrary, so how does the spacecraft \u2018know\u2019 which direction to go?\u201d Sci-fi has solved this paradox by inventing a \u201cstable wormhole,\u201d but White can\u2019t fly a  deus ex machina to Alpha Centauri.\n  Instead, he suggests a slightly different paradigm: \u201cIn this modified concept of operations, the spacecraft departs earth and establishes an initial sub-luminal velocity, then initiates the field. When active, the field\u2019s boost acts on the initial velocity as a scalar multiplier resulting in a much higher apparent speed,\u201d White explains.\n Instead of coming to a stop and then engaging the warp drive, the ship would use a rolling start as a directional cue.\n   We think of warp speed as, well, the only way faraway interstellar travel will ever be feasible. And White has focused on one mathematical paradox within the work, but that\u2019s not the only such obstacle.\n He suggests the proving ground for warp speed could be, well, closer to home. \u201c[T]he idea of a warp drive may have some fruitful domestic applications \u2018subliminally,\u2019 allowing it to be matured before it is engaged as a true interstellar drive system,\u201d he explains.\n If scientists can make the so-called \u201cnegative mass\u201d required for an Alcubierre drive, even a tiny example could be deployed within Earth\u2019s atmosphere.\n   This content is created and maintained by a third party, and imported onto this page to help users provide their email addresses. You may be able to find more information about this and similar content at piano.io", "posttime": "2020-05-17 06:35:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "nasa,\u66f2\u901f,working", "title": "\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u771f\u7684\u5728\u7814\u7a76\u66f2\u901f\u9a71\u52a8\u5668\u5417\uff1f", "title_en": "Is NASA Actually Working On a Warp Drive?", "transed": 1, "url": "https://www.popularmechanics.com/science/a32449240/nasa-warp-drive-space-time/", "via": "", "real_tags": ["nasa", "\u66f2\u901f", "working"]}, {"category": "", "categoryclass": "", "imagename": "37516a74d518642ad21ef3f8455decb3.png", "infoid": 1002450, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0cApache Kafka\u00ae\u4f7f\u7528Apache zooKeeper\u2122\u6765\u5b58\u50a8\u5176\u5143\u6570\u636e\u3002\u5206\u533a\u4f4d\u7f6e\u548c\u4e3b\u9898\u914d\u7f6e\u7b49\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e4b\u5916\uff0c\u5b58\u50a8\u5728\u5355\u72ec\u7684ZooKeeper\u96c6\u7fa4\u4e2d\u3002\u57282019\u5e74\uff0c\u6211\u4eec\u6982\u8ff0\u4e86\u4e00\u4e2a\u8ba1\u5212\uff0c\u6253\u7834\u8fd9\u79cd\u4f9d\u8d56\uff0c\u5c06\u5143\u6570\u636e\u7ba1\u7406\u5f15\u5165\u5361\u592b\u5361\u672c\u8eab\u3002\n\u90a3\u4e48\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u6709\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u95ee\u9898\u4e0d\u5728\u4e8e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u672c\u8eab\uff0c\u800c\u5728\u4e8e\u5916\u90e8\u5143\u6570\u636e\u7ba1\u7406\u7684\u6982\u5ff5\u3002\n\u6709\u4e24\u4e2a\u7cfb\u7edf\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u91cd\u590d\u3002\u6bd5\u7adf\uff0cKafka\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u53d1\u5e03/\u8ba2\u9605API\u3002ZooKeeper\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edfAPI\u3002\u6bcf\u79cd\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u901a\u4fe1\u3001\u5b89\u5168\u3001\u76d1\u63a7\u548c\u914d\u7f6e\u65b9\u5f0f\u3002\u5bf9\u4e8e\u64cd\u4f5c\u5458\u6765\u8bf4\uff0c\u62e5\u6709\u4e24\u4e2a\u7cfb\u7edf\u5927\u81f4\u4f1a\u4f7f\u7ed3\u679c\u7684\u603b\u590d\u6742\u6027\u589e\u52a0\u4e00\u500d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u9661\u5ced\u5b66\u4e60\u66f2\u7ebf\uff0c\u5e76\u589e\u52a0\u67d0\u4e9b\u9519\u8bef\u914d\u7f6e\u5bfc\u81f4\u5b89\u5168\u6f0f\u6d1e\u7684\u98ce\u9669\u3002\n\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u6548\u7387\u4e0d\u9ad8\u3002\u6211\u4eec\u81f3\u5c11\u8fd0\u884c\u4e09\u4e2a\u989d\u5916\u7684Java\u8fdb\u7a0b\uff0c\u6709\u65f6\u751a\u81f3\u66f4\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230Kafka\u96c6\u7fa4\u7684ZooKeeper\u8282\u70b9\u548cKafka\u8282\u70b9\u4e00\u6837\u591a\uff01\u53e6\u5916\uff0cZooKeeper\u4e2d\u7684\u6570\u636e\u8fd8\u9700\u8981\u53cd\u6620\u5728Kafka\u63a7\u5236\u5668\u4e0a\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53cc\u91cd\u7f13\u5b58\u3002\n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u9650\u5236\u4e86Kafka\u7684\u53ef\u4f38\u7f29\u6027\u3002\u5f53Kafka\u96c6\u7fa4\u6b63\u5728\u542f\u52a8\uff0c\u6216\u8005\u6b63\u5728\u9009\u62e9\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u52a0\u8f7d\u96c6\u7fa4\u7684\u5b8c\u6574\u72b6\u6001\u3002\u968f\u7740\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u52a0\uff0c\u6b64\u52a0\u8f7d\u8fc7\u7a0b\u7684\u957f\u5ea6\u4e5f\u4f1a\u589e\u52a0\u3002\u8fd9\u9650\u5236\u4e86Kafka\u53ef\u4ee5\u5b58\u50a8\u7684\u5206\u533a\u6570\u91cf\u3002\n\u6700\u540e\uff0c\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u53ef\u80fd\u4f1a\u4f7f\u63a7\u5236\u5668\u7684\u5185\u5b58\u5185\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u4e0d\u540c\u6b65\u3002\u63a7\u5236\u5668\u7684\u6d3b\u5ea6\u89c6\u56fe(\u5728\u96c6\u7fa4\u4e2d)\u4e5f\u53ef\u80fd\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u89c6\u56fe\u4e0d\u540c\u3002\nKIP-500\u6982\u8ff0\u4e86\u5728\u5361\u592b\u5361\u4e2d\u5904\u7406\u5143\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u201cKafka on Kafka\u201d\uff0c\u56e0\u4e3a\u5b83\u6d89\u53ca\u5230\u5c06Kafka\u7684\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e2d\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728ZooKeeper\u7b49\u5916\u90e8\u7cfb\u7edf\u4e2d\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0c\u5143\u6570\u636e\u5c06\u5b58\u50a8\u5728Kafka\u5185\u90e8\u7684\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u63a7\u5236\u5668\u5c06\u662f\u6b64\u5206\u533a\u7684\u9886\u5bfc\u8005\u3002\u5c06\u4e0d\u4f1a\u6709\u5916\u90e8\u5143\u6570\u636e\u7cfb\u7edf\u9700\u8981\u914d\u7f6e\u548c\u7ba1\u7406\uff0c\u53ea\u6709\u5361\u592b\u5361\u672c\u8eab\u3002\n\u6211\u4eec\u5c06\u5143\u6570\u636e\u89c6\u4e3a\u65e5\u5fd7\u3002\u9700\u8981\u6700\u65b0\u66f4\u65b0\u7684\u4ee3\u7406\u53ea\u80fd\u8bfb\u53d6\u65e5\u5fd7\u7684\u5c3e\u90e8\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u9700\u8981\u6700\u65b0\u65e5\u5fd7\u6761\u76ee\u7684\u4f7f\u7528\u8005\u53ea\u9700\u8981\u8bfb\u53d6\u65e5\u5fd7\u7684\u6700\u672b\u5c3e\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u65e5\u5fd7\u3002\u4ee3\u7406\u8fd8\u5c06\u80fd\u591f\u5728\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u65f6\u6301\u4e45\u4fdd\u5b58\u5b83\u4eec\u7684\u5143\u6570\u636e\u7f13\u5b58\u3002\nKafka\u96c6\u7fa4\u9009\u4e3e\u63a7\u5236\u5668\u8282\u70b9\u6765\u7ba1\u7406\u5206\u533a\u9886\u5bfc\u8005\u548c\u7fa4\u96c6\u5143\u6570\u636e\u3002\u6211\u4eec\u62e5\u6709\u7684\u5206\u533a\u548c\u5143\u6570\u636e\u8d8a\u591a\uff0c\u63a7\u5236\u5668\u53ef\u4f38\u7f29\u6027\u5c31\u53d8\u5f97\u8d8a\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u4e0e\u4e3b\u9898\u6216\u5206\u533a\u7684\u6570\u91cf\u6210\u7ebf\u6027\u6bd4\u4f8b\u7684\u65f6\u95f4\u7684\u64cd\u4f5c\u6570\u91cf\u3002\n\u4e00\u79cd\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u63a7\u5236\u5668\u6545\u969c\u8f6c\u79fb\u3002\u76ee\u524d\uff0c\u5f53Kafka\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u5b83\u9700\u8981\u52a0\u8f7d\u5b8c\u6574\u7684\u96c6\u7fa4\u72b6\u6001\u624d\u80fd\u7ee7\u7eed\u3002\u968f\u7740\u7fa4\u96c6\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u957f\uff0c\u6b64\u8fc7\u7a0b\u9700\u8981\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728KIP-500\u4e4b\u540e\u7684\u4e16\u754c\u4e2d\uff0c\u5c06\u6709\u51e0\u4e2a\u5907\u7528\u63a7\u5236\u5668\uff0c\u5b83\u4eec\u968f\u65f6\u51c6\u5907\u5728\u6d3b\u52a8\u63a7\u5236\u5668\u79bb\u5f00\u65f6\u63a5\u624b\u3002\u8fd9\u4e9b\u5907\u7528\u63a7\u5236\u5668\u53ea\u662f\u5143\u6570\u636e\u5206\u533a\u7684RAFT Quorum\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u5728\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7ecf\u5386\u6f2b\u957f\u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002\nKIP-500\u5c06\u52a0\u5feb\u4e3b\u9898\u7684\u521b\u5efa\u548c\u5220\u9664\u3002\u76ee\u524d\uff0c\u5728\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u91cd\u65b0\u52a0\u8f7d\u96c6\u7fa4\u4e2d\u6240\u6709\u4e3b\u9898\u540d\u79f0\u7684\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5f53\u96c6\u7fa4\u4e2d\u7684\u4e3b\u9898\u96c6\u53d1\u751f\u66f4\u6539\u65f6\uff0cZooKeeper\u4f1a\u901a\u77e5\u6211\u4eec\uff0c\u4f46\u5b83\u5e76\u4e0d\u786e\u5207\u5730\u544a\u8bc9\u6211\u4eec\u6dfb\u52a0\u6216\u5220\u9664\u4e86\u54ea\u4e9b\u4e3b\u9898\u3002\u76f8\u53cd\uff0c\u5728\u540eKIP-500\u4e16\u754c\u4e2d\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u53ea\u6d89\u53ca\u5728\u5143\u6570\u636e\u5206\u533a\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u6761\u76ee\uff0c\u8fd9\u662f\u4e00\u4e2aO(1)\u64cd\u4f5c\u3002\n\u5143\u6570\u636e\u53ef\u4f38\u7f29\u6027\u662f\u672a\u6765\u6269\u5c55Kafka\u7684\u5173\u952e\u3002\u6211\u4eec\u9884\u8ba1\u5355\u4e2aKafka\u96c6\u7fa4\u6700\u7ec8\u80fd\u591f\u652f\u6301100\u4e07\u4e2a\u6216\u66f4\u591a\u5206\u533a\u3002\n\u4f5c\u4e3aKafka\u7248\u672c\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u7684\u51e0\u4e2a\u7ba1\u7406\u5de5\u5177\u4ecd\u7136\u5141\u8bb8\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u901a\u4fe1\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4ecd\u7136\u6709\u4e00\u4e24\u4e2a\u64cd\u4f5c\u4e0d\u80fd\u5b8c\u6210\uff0c\u9664\u975e\u901a\u8fc7\u8fd9\u79cd\u76f4\u63a5\u7684\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u901a\u4fe1\u3002\n\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u7f29\u5c0f\u8fd9\u4e9b\u5dee\u8ddd\u3002\u5f88\u5feb\uff0c\u5bf9\u4e8e\u4ee5\u524d\u9700\u8981\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u8bbf\u95ee\u7684\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u90fd\u5c06\u6709\u4e00\u4e2a\u516c\u5171\u7684Kafka API\u3002\u5728Kafka\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u7981\u7528\u6216\u5220\u9664\u4e0d\u5fc5\u8981\u7684--zooKeeper\u6807\u5fd7\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0cKafka\u63a7\u5236\u5668\u5c06\u5176\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u63a7\u5236\u5668\u4f9d\u8d56\u4e8e\u6b64\u5206\u533a\uff0c\u6240\u4ee5\u5206\u533a\u672c\u8eab\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u63a7\u5236\u5668\u6765\u8fdb\u884c\u9886\u5bfc\u8005\u9009\u4e3e\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\u76f8\u53cd\uff0c\u7ba1\u7406\u6b64\u5206\u533a\u7684\u8282\u70b9\u5fc5\u987b\u5b9e\u73b0\u81ea\u6211\u7ba1\u7406\u7684RAFT\u4ef2\u88c1\u3002\nKIP-595\uff1a\u5143\u6570\u636e\u4ef2\u88c1\u7684RAFT\u534f\u8bae\u6982\u8ff0\u4e86\u6211\u4eec\u5c06\u5982\u4f55\u4f7fRAFT\u534f\u8bae\u9002\u5e94Kafka\uff0c\u4ece\u800c\u4f7f\u5176\u771f\u6b63\u611f\u89c9\u50cf\u662f\u7cfb\u7edf\u7684\u672c\u673a\u90e8\u5206\u3002\u8fd9\u5c06\u6d89\u53ca\u5c06RAFT\u8bba\u6587\u4e2d\u63cf\u8ff0\u7684\u57fa\u4e8e\u63a8\u9001\u7684\u6a21\u5f0f\u66f4\u6539\u4e3a\u57fa\u4e8ePull\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e0e\u4f20\u7edf\u7684\u5361\u592b\u5361\u590d\u5236\u662f\u4e00\u81f4\u7684\u3002\u5176\u4ed6\u8282\u70b9\u5c06\u8fde\u63a5\u5230\u8fd9\u4e9b\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5c06\u6570\u636e\u63a8\u9001\u5230\u5176\u4ed6\u8282\u70b9\u3002\u540c\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0e\u5361\u592b\u5361\u4e00\u81f4\u7684\u672f\u8bed\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u7b4f\u7eb8--\u201c\u7eaa\u5143\u201d\u800c\u4e0d\u662f\u201c\u672f\u8bed\u201d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u6700\u521d\u7684\u5b9e\u65bd\u5c06\u4fa7\u91cd\u4e8e\u652f\u6301\u5143\u6570\u636e\u5206\u533a\u3002\u5b83\u4e0d\u652f\u6301\u5c06\u5e38\u89c4\u5206\u533a\u8f6c\u6362\u4e3aRAFT\u6240\u9700\u7684\u5168\u90e8\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u8fd9\u662f\u6211\u4eec\u672a\u6765\u53ef\u80fd\u4f1a\u56de\u5230\u7684\u4e00\u4e2a\u8bdd\u9898\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u9879\u76ee\u6700\u4ee4\u4eba\u5174\u594b\u7684\u90e8\u5206\u662f\u80fd\u591f\u5728\u6ca1\u6709\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u60c5\u51b5\u4e0b\u5728\u201cKIP-500\u6a21\u5f0f\u201d\u4e0b\u8fd0\u884c\u3002\u5f53Kafka\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528RAFT Quorum\u6765\u5b58\u50a8\u6211\u4eec\u7684\u5143\u6570\u636e\uff0c\u800c\u4e0d\u662fZooKeeper\u3002\n\u6700\u521d\uff0cKIP-500\u6a21\u5f0f\u5c06\u662f\u8bd5\u9a8c\u6027\u7684\u3002\u5927\u591a\u6570\u7528\u6237\u5c06\u7ee7\u7eed\u4f7f\u7528\u201c\u4f20\u7edf\u6a21\u5f0f\u201d\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cZooKeeper\u4ecd\u5728\u4f7f\u7528\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3aKIP-500\u6a21\u5f0f\u4e00\u5f00\u59cb\u5e76\u4e0d\u652f\u6301\u6240\u6709\u53ef\u80fd\u7684\u529f\u80fd\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5c06KIP-500\u6a21\u5f0f\u8bbe\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u4e4b\u524d\u83b7\u5f97\u4fe1\u5fc3\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u65f6\u95f4\u6765\u5b8c\u5584\u4ece\u4f20\u7edf\u6a21\u5f0f\u5230KIP-500\u6a21\u5f0f\u7684\u5347\u7ea7\u8fc7\u7a0b\u3002\n\u542f\u7528KIP-500\u6a21\u5f0f\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u5c06\u5728\u63a7\u5236\u5668\u4e2d\u5b8c\u6210\u3002\u6211\u4eec\u5fc5\u987b\u5c06\u4e0eZooKeeper\u4ea4\u4e92\u7684\u63a7\u5236\u5668\u90e8\u5206\u4e0e\u5b9e\u73b0\u66f4\u591a\u901a\u7528\u903b\u8f91(\u5982\u526f\u672c\u96c6\u7ba1\u7406)\u7684\u90e8\u5206\u5206\u5f00\u3002\n\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u548c\u5b9e\u73b0\u66f4\u591a\u7684\u63a7\u5236\u5668API\u6765\u53d6\u4ee3\u76ee\u524d\u6d89\u53caZooKeeper\u7684\u901a\u4fe1\u673a\u5236\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u65b0\u7684AlterIsr API\u3002\u6b64API\u5141\u8bb8\u526f\u672c\u5728\u4e0d\u4f7f\u7528ZooKeeper\u7684\u60c5\u51b5\u4e0b\u901a\u77e5\u63a7\u5236\u5668\u540c\u6b65\u526f\u672c\u96c6\u4e2d\u7684\u66f4\u6539\u3002\nKIP-500\u5f15\u5165\u4e86\u6865\u5f0f\u7248\u672c\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0eKIP-500\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u5361\u592b\u5361\u7248\u672c\u5171\u5b58\u3002\u6865\u63a5\u7248\u672c\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u540e\u52a8\u7269\u56ed\u9972\u517b\u5458\u4e16\u754c\u7684\u96f6\u505c\u673a\u5347\u7ea7\u3002\u4f7f\u7528\u65e7\u7248\u672c\u5361\u592b\u5361\u7684\u7528\u6237\u53ea\u9700\u5347\u7ea7\u5230\u6865\u5f0f\u7248\u672c\u5373\u53ef\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5bf9\u7f3a\u5c11ZooKeeper\u7684\u7248\u672c\u6267\u884c\u7b2c\u4e8c\u6b21\u5347\u7ea7\u3002\u987e\u540d\u601d\u4e49\uff0c\u6865\u6881\u91ca\u653e\u5c31\u50cf\u4e00\u5ea7\u901a\u5f80\u65b0\u4e16\u754c\u7684\u6865\u6881\u3002\n\u90a3\u4e48\u8fd9\u662f\u600e\u4e48\u8fd0\u4f5c\u7684\u5462\uff1f\u5047\u8bbe\u4e00\u4e2a\u96c6\u7fa4\u5904\u4e8e\u90e8\u5206\u5347\u7ea7\u72b6\u6001\uff0c\u6865\u63a5\u7248\u672c\u4e0a\u6709\u51e0\u4e2a\u4ee3\u7406\uff0cKIP-500\u53d1\u5e03\u540e\u6709\u51e0\u4e2a\u4ee3\u7406\u3002\u7ba1\u5236\u5458\u5c06\u59cb\u7ec8\u662fKIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u3002\u5728\u8fd9\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u4ee3\u7406\u4e0d\u80fd\u4f9d\u8d56\u76f4\u63a5\u4fee\u6539ZooKeeper\u6765\u5ba3\u5e03\u4ed6\u4eec\u6b63\u5728\u8fdb\u884c\u7684\u66f4\u6539(\u4f8b\u5982\u914d\u7f6e\u66f4\u6539\u6216ACL\u66f4\u6539)\u3002KIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u4e0d\u4f1a\u6536\u5230\u8fd9\u6837\u7684\u901a\u77e5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u76d1\u542c\u52a8\u7269\u56ed\u9972\u517b\u5458\u3002\u53ea\u6709\u63a7\u5236\u5668\u4ecd\u5728\u4e0eZooKeeper\u4ea4\u4e92\uff0c\u5c06\u5176\u66f4\u6539\u955c\u50cf\u5230ZooKeeper\u3002\n\u56e0\u6b64\uff0c\u5728\u6865\u53d1\u5e03\u4e2d\uff0c\u9664\u63a7\u5236\u5668\u4e4b\u5916\u7684\u6240\u6709\u4ee3\u7406\u90fd\u5fc5\u987b\u5c06ZooKeeper\u89c6\u4e3a\u53ea\u8bfb(\u9664\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u9650\u7684\u4f8b\u5916)\u3002\n\u5bf9\u4e8e\u50cfIncrementalAlterConfigs\u8fd9\u6837\u7684RPC\uff0c\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd\u8c03\u7528\u7531\u6d3b\u52a8\u63a7\u5236\u5668\u5904\u7406\u3002\u5bf9\u4e8e\u65b0\u5ba2\u6237\u6765\u8bf4\uff0c\u8fd9\u5f88\u5bb9\u6613-\u4ed6\u4eec\u53ea\u9700\u5c06\u547c\u53eb\u76f4\u63a5\u53d1\u9001\u5230\u90a3\u91cc\u5373\u53ef\u3002\u5bf9\u4e8e\u8f83\u8001\u7684\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5c06RPC\u53d1\u9001\u5230\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u4ee3\u7406\u4e0a\u8fd0\u884c\u7684\u91cd\u5b9a\u5411\u7cfb\u7edf\uff0c\u65e0\u8bba\u5b83\u4eec\u6700\u521d\u4f4d\u4e8e\u54ea\u4e2a\u4ee3\u7406\u4e0a\u3002\n\u5bf9\u4e8e\u6d89\u53ca\u4ee3\u7406\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u590d\u6742\u4ea4\u4e92\u7684RPC\uff0c\u6211\u4eec\u5c06\u9700\u8981\u521b\u5efa\u65b0\u7684\u63a7\u5236\u5668API\u3002\u4e00\u4e2a\u4f8b\u5b50\u662fKIP-497\uff0c\u5b83\u6307\u5b9a\u4e86\u4e00\u4e2a\u65b0\u7684AlterIsrRequest API\uff0c\u5141\u8bb8\u4ee3\u7406\u8bf7\u6c42\u66f4\u6539\u5206\u533a\u540c\u6b65\u526f\u672c(ISR)\u3002\n\u5c06\u5373\u5e2dZooKeeper API\u66ff\u6362\u4e3a\u6587\u6863\u9f50\u5168\u4e14\u53d7\u652f\u6301\u7684RPC\u4e0e\u5220\u9664\u5ba2\u6237\u7aefZooKeeper\u8bbf\u95ee\u5177\u6709\u8bb8\u591a\u76f8\u540c\u7684\u597d\u5904\u3002\u7ef4\u62a4\u8de8\u7248\u672c\u517c\u5bb9\u6027\u5c06\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u5bf9\u4e8eAlterIsrRequest\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u51cf\u5c11\u5411ZooKeeper\u5199\u5165\u666e\u901a\u64cd\u4f5c\u6240\u9700\u7684\u6b21\u6570\u4e5f\u4f1a\u5e26\u6765\u597d\u5904\u3002\nKafka\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u770b\u5230\u5b83\u7684\u67b6\u6784\u7684\u6f14\u53d8\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\u3002\u6b63\u5982KIP-500\u8fd9\u6837\u7684\u9879\u76ee\u6240\u8868\u660e\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u6f14\u53d8\u8fd8\u6ca1\u6709\u5b8c\u6210\u3002\u6211\u6700\u559c\u6b22KIP-500\u7684\u5730\u65b9\u662f\u5b83\u7b80\u5316\u4e86\u6574\u4e2a\u67b6\u6784-\u65e0\u8bba\u662f\u7ba1\u7406\u5458\u8fd8\u662f\u5f00\u53d1\u4eba\u5458\u3002\u5b83\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e8b\u4ef6\u65e5\u5fd7\u7684\u5f3a\u5927\u62bd\u8c61\u6765\u5904\u7406\u5143\u6570\u636e\u3002\u5b83\u5c06\u6700\u7ec8\u8bc1\u660e\u2026\u3002\u5361\u592b\u5361\u4e0d\u9700\u8981\u770b\u95e8\u4eba\u3002\n\u5982\u679c\u60a8\u5bf9Apache Kafka\u4e2d\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u79fb\u9664\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u57285\u670821\u65e5\u4e0a\u534810\uff1a00\u52a0\u5165\u6211\u4eec\u5728Confluent Community Slake#\u666e\u901a\u9891\u9053\u7684\u73b0\u573a\u95ee\u7b54\u3002PDT\u3002\u8981\u4e86\u89e3\u5176\u4ed6\u6b63\u5728\u8fdb\u884c\u7684\u4f7fKafka\u5177\u6709\u5f39\u6027\u53ef\u4f38\u7f29\u6027\u7684\u5de5\u4f5c\uff0c\u8bf7\u67e5\u770b\u8fd9\u7bc7\u5173\u4e8e\u201c\u53d8\u5f62\u5de5\u7a0b\u201d\u7684\u535a\u5ba2\u6587\u7ae0\u3002\nColin McCabe\u76ee\u524d\u5728Confluent\u5de5\u4f5c\uff0c\u4ee5\u63d0\u9ad8Apache Kafka\u7684\u6027\u80fd\u3001\u53ef\u4f38\u7f29\u6027\u548c\u901a\u7528\u6027\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u7814\u7a76\u8fc7ApacheHadoop\u00ae\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf(\u2122)\u3002\u79d1\u6797\u5728\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon University)\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u8ba1\u7b97\u673a\u5de5\u7a0b\uff0c\u4ed6\u559c\u6b22\u81ea\u5236\u5564\u9152\u548c\u6f5c\u6c34\u3002", "note_en": "Currently, Apache Kafka \u00ae uses Apache ZooKeeper\u2122 to store its metadata. Data such as the location of partitions and the configuration of topics are stored outside of Kafka itself, in a separate ZooKeeper cluster. In 2019, we outlined a  plan to break this dependency and bring metadata management into Kafka itself.\n So what is the problem with ZooKeeper? Actually, the problem is not with ZooKeeper itself but with the concept of external metadata management.\n Having two systems leads to a lot of duplication. Kafka, after all, is a replicated distributed log with a pub/sub API on top. ZooKeeper is a replicated distributed log with a filesystem API on top. Each has its own way of doing network communication, security, monitoring, and configuration. Having two systems roughly doubles the total complexity of the result for the operator. This leads to an unnecessarily steep learning curve and increases the risk of some misconfiguration causing a security breach.\n Storing metadata externally is not very efficient. We run at least three additional Java processes, and sometimes more. In fact, we often see Kafka clusters with just as many ZooKeeper nodes as Kafka nodes! Additionally, the data in ZooKeeper also needs to be reflected on the Kafka controller, which leads to double caching.\n Worse still, storing metadata externally limits Kafka\u2019s scalability. When a Kafka cluster is starting up, or a new controller is being elected, the controller must load the full state of the cluster from ZooKeeper. As the amount of metadata grows, so does the length of this loading process. This limits the number of partitions that Kafka can store.\n Finally, storing metadata externally opens up the possibility of the controller\u2019s in-memory state becoming de-synchronized from the external state. The controller\u2019s view of liveness\u2014which is in the cluster\u2014can also diverge from ZooKeeper\u2019s view.\n   KIP-500 outlines a better way of handling metadata in Kafka. You can think of this as \u201cKafka on Kafka,\u201d since it involves storing Kafka\u2019s metadata in Kafka itself rather than in an external system such as ZooKeeper.\n In the post-KIP-500 world, metadata will be stored in a partition inside Kafka rather than in ZooKeeper. The controller will be the leader of this partition. There will be no external metadata system to configure and manage, just Kafka itself.\n We will treat metadata as a log. Brokers that need the latest updates can read only the tail of the log. This is similar to how consumers that need the latest log entries only need to read the very end of the log, not the entire log. Brokers will also be able to persist their metadata caches across process restarts.\n  A Kafka cluster elects a controller node to manage partition leaders and cluster metadata. The more partitions and metadata we have, the more important controller scalability becomes. We would like to minimize the number of operations that require a time linearly proportional to the number of topics or partitions.\n One such operation is controller failover. Currently, when Kafka elects a new controller, it needs to load the full cluster state before proceeding. As the amount of cluster metadata grows, this process takes longer and longer.\n In contrast, in the post-KIP-500 world, there will be several standby controllers that are ready to take over whenever the active controller goes away. These standby controllers are simply the other nodes in the Raft quorum of the metadata partition. This design ensures that we never need to go through a lengthy loading process when a new controller is elected.\n KIP-500 will speed up topic creation and deletion. Currently, when a topic is created or deleted, the controller must reload the full list of all topic names in the cluster from ZooKeeper. This is necessary because while ZooKeeper notifies us when the set of topics in the cluster has changed, it doesn\u2019t tell us exactly which topics were added or removed. In contrast, creating or deleting a topic in the post-KIP-500 world will simply involve creating a new entry in the metadata partition, which is an O(1) operation.\n Metadata scalability is a key part of scaling Kafka in the future. We expect that a single Kafka cluster will eventually be able to support a million partitions or more.\n    Several administrative tools shipped as part of the Kafka release still allow direct communication with ZooKeeper. Worse still, there are still one or two operations that can\u2019t be done except through this direct ZooKeeper communication.\n We have been working hard to close these gaps. Soon, there will be a public Kafka API for every operation that previously required direct ZooKeeper access. We will also disable or remove the unnecessary  --zookeeper flags in the next major release of Kafka.\n  In the post-KIP-500 world, the Kafka controller will store its metadata in a Kafka partition rather than in ZooKeeper. However, because the controller depends on this partition, the partition itself cannot depend on the controller for things like leader election. Instead, the nodes that manage this partition must implement a self-managed Raft quorum.\n KIP-595: A Raft Protocol for the Metadata Quorum outlines how we will adapt the Raft protocol to Kafka so that it really feels like a native part of the system. This will involve changing the push-based model described in the  Raft paper to a pull-based model, which is consistent with traditional Kafka replication. Rather than pushing out data to other nodes, the other nodes will connect to them. Similarly, we will use terminology consistent with Kafka rather than the original Raft paper\u2014\u201depochs\u201d instead of \u201cterms,\u201d and so forth.\n The initial implementation will be focused on supporting the metadata partition. It will not support the full range of operations that would be needed to convert regular partitions over to Raft. However, this is a topic we may return to in the future.\n  The most exciting part of this project, of course, is the ability to run without ZooKeeper, in \u201cKIP-500 mode.\u201d When Kafka is run in this mode, we will use a Raft quorum to store our metadata rather than ZooKeeper.\n Initially, KIP-500 mode will be experimental. Most users will continue to use \u201clegacy mode,\u201d in which ZooKeeper is still in use. Partly, this is because KIP-500 mode will not support all possible features at first. Another reason is because we want to gain confidence in KIP-500 mode before making it the default. Finally, we will need time to perfect the upgrade process from legacy mode to KIP-500 mode.\n Much of the work to enable KIP-500 mode will be in the controller. We must separate out the part of the controller that interacts with ZooKeeper from the part that implements more general-purpose logic such as replica set management.\n We need to define and implement more controller APIs to replace the communication mechanisms that currently involve ZooKeeper. One example of this is the new  AlterIsr API. This API allows a replica to notify the controller of a change in the in-sync replica set without using ZooKeeper.\n  KIP-500 introduced the concept of a  bridge release that can coexist with both pre- and post-KIP-500 versions of Kafka. Bridge releases are important because they enable zero-downtime upgrades to the post-ZooKeeper world. Users on an older version of Kafka simply upgrade to a bridge release. Then, they can perform a second upgrade to a release that lacks ZooKeeper. As its name suggests, the bridge release acts as a bridge into the new world.\n So how does this work? Consider a cluster that is in a partially upgraded state, with several brokers on the bridge release and several brokers on a post-KIP-500 release. The controller will always be a post-KIP-500 broker. In this cluster, brokers cannot rely on directly modifying ZooKeeper to announce changes they are making (such as a configuration change or an ACL change). The post-KIP-500 brokers would not receive such notifications because they are not listening on ZooKeeper. Only the controller is still interacting with ZooKeeper, by mirroring its changes to ZooKeeper.\n Therefore, in the bridge release, all the brokers except the controller must treat ZooKeeper as read only (with some very limited exceptions).\n For RPCs like  IncrementalAlterConfigs, we simply need to ensure that the call is processed by the active controller. This is easy for new clients\u2014they can simply send the calls there directly. For older clients, we need a redirection system that will run on the brokers that send the RPCs to the active controller, no matter which broker they initially end up on.\n For RPCs that involve a complex interaction between the broker and the controller, we will need to create new controller APIs. One example is  KIP-497, which specifies a new  AlterIsrRequest API that allows brokers to request changes to partition in-sync replicas (ISRs).\n Replacing ad hoc ZooKeeper APIs with well-documented and supported RPCs has many of the same benefits as removing client-side ZooKeeper access did. Maintaining cross-version compatibility will be easier. For the special case of  AlterIsrRequest, there will also be benefits to reducing the number of writes to ZooKeeper that a common operation requires.\n  Kafka is one of the most active Apache projects. It has been amazing to see the evolution in its architecture over the last few years. That evolution is not done yet, as projects like KIP-500 show. What I like most about KIP-500 is that it\u2019s a simplification to the overall architecture\u2014for administrators and developers alike. It will let us use the powerful abstraction of the event log for metadata handling. And it will finally prove that\u2026Kafka needs no keeper.\n If you have any questions about ZooKeeper removal in Apache Kafka,  join our live Q&amp;A in the Confluent Community Slack #general channel on May 21st at 10:00 a.m. PDT. To learn about other work that is happening to make Kafka  elastically scalable, check out this  blog post on Project Metamorphosis.\n Colin McCabe currently works for Confluent to improve the performance, scalability, and general awesomeness of Apache Kafka. Previously, he worked on the Apache\u2122 Hadoop\u00ae Distributed Filesystem. Colin studied computer science and computer engineering at Carnegie Mellon University, and he enjoys homebrewing and scuba diving.", "posttime": "2020-05-17 06:33:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u9664,removing,zookeeper", "title": "\u5361\u592b\u5361\u6d88\u9664\u5bf9ZooKeeper\u7684\u4f9d\u8d56", "title_en": "Kafka Removing Zookeeper Dependency", "transed": 1, "url": "https://www.confluent.io/blog/removing-zookeeper-dependency-in-kafka/", "via": "", "real_tags": ["\u6d88\u9664", "removing", "zookeeper"]}, {"category": "", "categoryclass": "", "imagename": "9dc781bbef801118e96c6cbf0331c472.jpeg", "infoid": 1002448, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Chrome Galvanizer\u662f\u4e00\u6b3e\u751f\u6210Chrome\u4f01\u4e1a\u7b56\u7565\u7684\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u7528\u6237\u52a0\u5f3a\u6d4f\u89c8\u5668\u5b89\u5168\u6027\u3002\u76ee\u524d\uff0c\u4e3b\u8981\u652f\u6301\u751f\u6210\u7b56\u7565\uff0c\u4ee5\u9650\u5236\u6765\u81ea\u660e\u786e\u6807\u8bb0\u4e3a\u654f\u611f\u7684\u7ad9\u70b9(\u4f8b\u5982\uff0c\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u3001\u94f6\u884c\u3001\u52a0\u5bc6\u6743\u9650\u548c\u5176\u4ed6\u7ad9\u70b9)\u7684\u6269\u5c55\u8bbf\u95ee\u3002\u8fd9\u5141\u8bb8\u60a8\u963b\u6b62\u6269\u5c55\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5b9a\u7684\u7ad9\u70b9\uff0c\u5373\u4f7f\u60a8\u5728\u7b2c\u4e00\u6b21\u5b89\u88c5\u5b83\u4eec\u65f6\u5df2\u7ecf\u6388\u4e88\u4e86\u8bbf\u95ee\u5b83\u4eec\u7684\u6743\u9650\u3002\n\u8fd9\u53ef\u4ee5\u9632\u6b62\u901a\u8fc7\u53cd\u5411\u66f4\u65b0\u52ab\u6301\u7684\u6269\u5c55\uff0c\u4ee5\u53ca\u7531\u4e8e\u5176\u4ee3\u7801\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\u800c\u88ab\u5229\u7528\u7684\u6269\u5c55\u3002\n\u524d\u4e00\u7c7b\u653b\u51fb\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662fmega Chrome\u6269\u5c55\u88ab\u9ed1\u5ba2\u653b\u51fb\u3002\u57fa\u672c\u4e0a\uff0c\u53d1\u5e03\u5de8\u578b\u6269\u5c55\u7684\u8d26\u53f7\u5f88\u53ef\u80fd\u662f\u88ab\u7f51\u7edc\u9493\u9c7c\u7684\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5012\u9000\u7684\u6269\u5c55\u66f4\u65b0\u88ab\u63a8\u7ed9\u4e86\u6240\u6709\u6269\u5c55\u7528\u6237(\u6570\u767e\u4e07)\u3002\u6839\u636eMega&#39\uff1b\u7684\u58f0\u660e\uff0c\u8be5\u6269\u5c55\u540d\u8bb0\u5f55\u5e76\u7a83\u53d6\u4e86\u201c\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com(\u7528\u4e8e\u7f51\u5e97\u767b\u5f55)\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7b49\u7f51\u7ad9\u7684\u51ed\u8bc1\u3002\u201d\n\u4f7f\u7528Chrome Galvanizer\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u6216\u6240\u6709\u6269\u5c55\u65e0\u6cd5\u518d\u8bbf\u95ee\u7684\u7279\u5b9a\u7ad9\u70b9\u6765\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u6b64\u7c7b\u653b\u51fb\u3002\u5bf9\u4e8e\u8d85\u7ea7\u7528\u6237\u6765\u8bf4\uff0c\u5982\u679c\u7528\u6237\u521b\u5efa\u4e86\u4e00\u4e2a\u9650\u5236\u8d85\u7ea7\u6269\u5c55\u8bbf\u95ee\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u514d\u53d7\u653b\u51fb\u3002\n\u60a8\u751a\u81f3\u53ef\u4ee5\u914d\u7f6e\u53ea\u5141\u8bb8\u6269\u5c55\u8bbf\u95ee\u7279\u5b9a\u7ad9\u70b9\u767d\u540d\u5355\u7684\u7b56\u7565\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5c06\u654f\u611f\u7ad9\u70b9\u5217\u5165\u9ed1\u540d\u5355\u3002\u5982\u679c\u60a8\u60f3\u8981\u5c06\u6269\u5c55\u7528\u4e8e\u4e00\u7ec4\u7ad9\u70b9\uff0c\u800c\u4e0d\u662fWeb\u7684\u5176\u4f59\u90e8\u5206\uff0c\u5219\u6b64\u529f\u80fd\u975e\u5e38\u6709\u7528\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5206\u5c42\u8fd9\u4e9b\u653f\u7b56\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002", "note_en": "Chrome Galvanizer is a tool to generate Chrome enterprise policies to help users harden their browser security. Currently, the main support is for generating policies to restrict extension access from sites explicitly marked as sensitive (e.g. your email, bank, cryptocurency, and other sites). This allows you to prevent extensions from accessing these specific sites even if you&#39;ve already granted them permission to do so when first installing them.\n  This protects from hijacked extensions with backdoored updates and against extensions that have been  exploited due to a security vulnerability in their code.\n One good example of the former type of attack this protects against is the case of the  MEGA Chrome extension getting hacked. Basically, the account which publishes the MEGA extension likely was phished, the result being that a backdoored extension update was pushed out to all extension users (millions). Per MEGA&#39;s statement the extension keylogged and stole  \u201ccredentials for sites including amazon.com, live.com, github.com, google.com (for webstore login), myetherwallet.com, mymonero.com, [and] idex.market.\u201d\n Using Chrome Galvanizer, you can protect yourself from attacks like this by specifying specific sites that one or all of your extensions can no longer access. For the MEGA case, if users had created a policy restricting access for the MEGA extension to access  amazon.com,  live.com,  github.com,  google.com,  myetherwallet.com,  mymonero.com, and  idex.market then they&#39;d be protected from the attack.\n You can even configure policies that only allow an extension to access a specific whitelist of sites instead of just blacklisting sensitive ones. This is useful if you have an extension you want to use for a set of sites but not the rest of the web. Of course, you can also layer these policies to get even better results.", "posttime": "2020-05-17 06:17:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "chrome,\u6f0f\u6d1e,\u540e\u95e8,harden,\u6269\u5c55", "title": "ChromeGalvanizer-\u9488\u5bf9\u6269\u5c55\u540e\u95e8\u548c\u6f0f\u6d1e\u5f3a\u5316\u60a8\u7684\u6d4f\u89c8\u5668", "title_en": "ChromeGalvanizer \u2013 Harden your browser against extension backdoors and exploits", "transed": 1, "url": "https://github.com/mandatoryprogrammer/ChromeGalvanizer", "via": "", "real_tags": ["chrome", "\u6f0f\u6d1e", "\u540e\u95e8", "harden", "\u6269\u5c55"]}, {"category": "", "categoryclass": "", "imagename": "2cae259de697d9f6b726d4240e81162b.jpg", "infoid": 1002447, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6bc1\u706d\u6c38\u6052\u201d\u6210\u4e3a\u6700\u65b0\u4e00\u6b3e\u4f7f\u7528\u5185\u6838\u7ea7\u9a71\u52a8\u7a0b\u5e8f\u6765\u5e2e\u52a9\u68c0\u6d4b\u591a\u4eba\u6bd4\u8d5b\u4e2d\u7684\u4f5c\u5f0a\u8005\u7684\u6e38\u620f\u3002\n\u8fd9\u6b3e\u6e38\u620f\u7684\u65b0\u9a71\u52a8\u7a0b\u5e8f\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u6765\u81ea\u5fb7\u52aa\u6c83\u7684\u6bcd\u516c\u53f8\u7231\u8fea\u5fb7(Irdeto)\uff0c\u8be5\u516c\u53f8\u66fe\u4ee5\u8fd1\u4e4e\u65e0\u4e0e\u4f26\u6bd4\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\uff0c\u73b0\u5728\u5219\u4ee5\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6709\u6548\u4f46\u7ecf\u5e38\u88ab\u7834\u89e3\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\u3002\u4f46\u65b0\u7684Denuvo\u53cd\u4f5c\u5f0a\u4fdd\u62a4\u4e0e\u8be5\u516c\u53f8\u7684Denuvo\u9632\u7be1\u6539\u6280\u672f\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u540e\u8005\u4f7f\u7528\u4ee3\u7801\u6df7\u6dc6\u6765\u963b\u6b62\u7834\u89e3\u7a0b\u5e8f(\u8fd9\u9879\u6280\u672f\u5728\u63a8\u51fa\u540e\u4e0d\u4e45\u5c31\u5df2\u7ecf\u5728Doom Etal\u4e0a\u8ba8\u8bba\u8fc7\u4e86)\u3002\nIrdeto\u5728\u4e00\u7bc7\u5ba3\u5e03\u63a8\u51fa\u8be5\u5de5\u5177\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u5728\u4e3a\u671f\u4e24\u5e74\u7684\u63d0\u524d\u8bbf\u95ee\u8ba1\u5212\u4e2d\uff0c\u65b0\u7684Denuvo\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u5728\u65e0\u6570\u4e2a\u5c0f\u65f6\u548c\u6570\u767e\u4e07\u6b21\u6e38\u620f\u4f1a\u8bdd\u4e4b\u540e\uff0c\u9762\u5411\u672b\u65e5\u6c38\u6052\u7684\u73a9\u5bb6\u63a8\u51fa\u3002\u4f46\u4e0eValorant\u7684\u7c7b\u4f3cVanguard\u7cfb\u7edf\u4e0d\u540c\u7684\u662f\uff0cDenuvo Anti-cheat Driver\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\uff0c\u8ba9\u73a9\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7cfb\u7edf\u4e0a\u76d1\u63a7\u5b83\u7684\u4f7f\u7528\u60c5\u51b5\u3002\n\u4e3a\u4e86\u6d88\u9664\u4efb\u4f55\u6f5c\u5728\u7684\u6050\u60e7\uff0c\u7231\u8fea\u5fb7\u5199\u9053\uff0cDenuvo Anti-cheat\u53ea\u5728\u6e38\u620f\u6d3b\u8dc3\u65f6\u8fd0\u884c\uff0c\u8d1d\u585e\u65af\u8fbe\u7684\u8865\u4e01\u7b14\u8bb0\u4e2d\u4e5f\u540c\u6837\u5199\u7740\uff0c\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f7f\u7528\u5728\u6e38\u620f\u542f\u52a8\u65f6\u5f00\u59cb\uff0c\u5f53\u6e38\u620f\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u505c\u6b62\u65f6\u505c\u6b62\u3002\u8fd9\u4e0eValorant\u7684\u5148\u950b\u7cfb\u7edf\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u540e\u8005\u9700\u8981\u4ece\u7cfb\u7edf\u542f\u52a8\u65f6\u52a0\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u76d1\u63a7\u7cfb\u7edf\u72b6\u6001\u7684\u5b8c\u6574\u6027\u3002\n\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u4ea7\u54c1\u8d1f\u8d23\u4ebaMichail Greshishchev\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u544a\u8bc9Ars\uff0c\u5728\u591a\u4eba\u6bd4\u8d5b\u4e4b\u5916\u4e0d\u4f1a\u8fdb\u884c\u76d1\u63a7\u6216\u6570\u636e\u6536\u96c6\u3002\u5fb7\u52aa\u6c83\u4e0d\u4f1a\u8bd5\u56fe\u7ef4\u62a4\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002\u5b83\u4e0d\u4f1a\u963b\u6b62\u4f5c\u5f0a\u3001\u6e38\u620fmod\u6216\u5f00\u53d1\u5de5\u5177\u3002\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u53ea\u68c0\u6d4b\u4f5c\u5f0a\u3002&#34\uff1b\nGreshishchev\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u7684\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u83b7\u5f97\u4e86\u77e5\u540d\u5185\u6838\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7684\u8ba4\u8bc1\uff0c\u5b8c\u6210\u4e86\u5b9a\u671f\u7684\u767d\u76d2\u548c\u9ed1\u76d2\u5ba1\u8ba1\uff0c\u5e76\u63a5\u53d7\u4e86\u72ec\u7acb\u4f5c\u5f0a\u5f00\u53d1\u8005\u7684\u6e17\u900f\u6d4b\u8bd5\u3002\u4ed6\u8bf4\uff0c\u7231\u8fea\u751f\u8fd8\u8bbe\u7acb\u4e86\u4e00\u4e2a\u6f0f\u6d1e\u8d4f\u91d1\u8ba1\u5212\uff0c\u4ee5\u53d1\u73b0\u4ed6\u4eec\u53ef\u80fd\u9057\u6f0f\u7684\u4efb\u4f55\u6f0f\u6d1e\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u7531\u4e8eDenuvo Anti-cheat\u7684\u8bbe\u8ba1\uff0c\u53f8\u673a\u6bd4\u5176\u4ed6\u53ef\u80fd\u66f4\u5bb9\u6613\u63a5\u89e6\u4e92\u8054\u7f51\u7684\u53f8\u673a\u66f4\u5b89\u5168\u3002\u4e0e\u73b0\u6709\u7684\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\u4e0d\u540c\uff0cDenuvo Anti-cheat\u4e0d\u4f1a\u4ece\u7f51\u7edc\u4e0a\u6d41\u5f0f\u4f20\u8f93\u5916\u58f3\u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u53d7\u5230\u653b\u51fb\uff0c\u653b\u51fb\u8005\u4e0d\u80fd\u5411\u6e38\u620f\u8005\u7684\u673a\u5668\u53d1\u9001\u4efb\u610f\u6076\u610f\u8f6f\u4ef6\u3002\n\u4ed6\u7ee7\u7eed\u8bf4\uff0c\u8fd9\u4e9b\u6e38\u620f\u673a\u5df2\u7ecf\u6709\u4e86\u4e00\u5927\u5806\u4e0d\u5408\u683c\u7684(\u5b89\u5168\u65b9\u9762\u7684)\u7ba1\u7406\u670d\u52a1\uff0c\u800c\u4e14\u6709\u6d3b\u8dc3\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002\u6765\u81ea\u9f20\u6807\u548c\u952e\u76d8\u4f9b\u5e94\u5546\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001\u7167\u660e\u548c\u8d85\u9891\u670d\u52a1\u7b49\u3002\u5982\u679c\u653b\u51fb\u8005\u771f\u7684\u60f3\u5371\u5bb3\u6e38\u620f\u8005\u7684\u5b89\u5168\uff0c\u4ed6\u4eec\u4f1a\u901a\u8fc7\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u7684\u9632\u7be1\u6539\u8f6f\u4ef6\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u5982\u679c\u5728\u91ce\u5916\u53d1\u73b0\u4e86\u9a71\u52a8\u7a0b\u5e8f\u6f0f\u6d1e\uff0c\u53ef\u64a4\u9500\u7684\u8bc1\u4e66\u548c\u81ea\u52a8\u8fc7\u671f\u7684\u7f51\u7edc\u5bc6\u94a5\u53ef\u4ee5\u7528\u4f5c\u627c\u6740\u5f00\u5173\u6765\u5207\u65ad\u5b83\u4eec\u3002\u6ca1\u6709\u5b89\u5168\u4e13\u5bb6\u53ef\u4ee5\u58f0\u79f0\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e07\u65e0\u4e00\u5931\u7684\uff0c\u4f46\u6211\u4eec\u7684\u6e17\u900f\u6d4b\u8bd5\u3001\u8ba4\u8bc1\u548c\u5b89\u5168\u5ba1\u8ba1\u8fdc\u8fdc\u9ad8\u4e8e\u4efb\u4f55\u5408\u7406\u7684\u6807\u51c6\uff0c\u4ed6\u8bf4\u3002\n\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u5728\u591a\u4eba\u6e38\u620f\u53cd\u4f5c\u5f0a\u5de5\u5177\u4e2d\u7684\u4f7f\u7528\u5b9e\u9645\u4e0a\u76f8\u5f53\u666e\u904d\uff0c\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u53ef\u4ee5\u68c0\u6d4b\u5e76\u963b\u6b62\u8bd5\u56fe\u4fee\u6539\u6e38\u620f\u4ee3\u7801\u7684\u4f4e\u6743\u9650\u7528\u6237\u6a21\u5f0f\u5de5\u5177\u3002\u867d\u7136\u4f5c\u5f0a\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ee3\u7801\u7b7e\u540d\u6f0f\u6d1e\u6765\u5b89\u88c5\u4ed6\u4eec\u81ea\u5df1\u7684\u5185\u6838\u7ea7\u4f5c\u5f0a\u5de5\u5177\u6765\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u66f4\u52a0\u56f0\u96be\u3002\n\u4ec5\u5728\u6e38\u620f\u8fd0\u884c\u65f6\u52a0\u8f7d\u5185\u6838\u6a21\u5f0f\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5c31\u50cfDenuvo\u6240\u505a\u7684\u90a3\u6837\uff0c\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u4e5f\u4e0e\u4ece\u542f\u52a8\u65f6\u8fd0\u884crootkit\u98ce\u683c\u7684\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6b63\u5982\u72ec\u7acb\u5b89\u5168\u7814\u7a76\u5458\u8428\u5229\u59c6\u00b7\u62c9\u5e0c\u5fb7(Saleem Rashid)\u5728\u8c08\u5230Valorant\u7684\u5148\u950b\u5b89\u5168\u9a71\u52a8\u7a0b\u5e8f\u65f6\u544a\u8bc9Ars\u7684\u90a3\u6837\uff0c\u540e\u8005\u4e3a\u5728\u7528\u6237\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7684\u7cfb\u7edf\u7ea7\u6f0f\u6d1e\u5e26\u6765\u4e86\u66f4\u5927\u7684\u98ce\u9669\uff0c\u521b\u9020\u4e86\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u597d\u5904\u7684\u5927\u653b\u51fb\u9762\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u672b\u65e5\u6c38\u6052\u793e\u533a\u7684\u4e00\u4e9b\u6210\u5458\u5bf9Denuvo\u53cd\u4f5c\u5f0a\u5de5\u5177\u7684\u63a8\u51fa\u65b9\u5f0f\uff0c\u6216\u8005\u4ed6\u4eec\u8ba4\u4e3a\u5b83\u7ed9\u4ed6\u4eec\u7684\u7cfb\u7edf\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\u611f\u5230\u4e0d\u6ee1\u3002\nReddit\u7528\u6237extant_dinero\u5728Doom subreddit\u4e0a\u7684\u70ed\u95e8\u5e16\u5b50\u4e2d\u5199\u9053\uff0c\u4efb\u4f55\u8f6f\u4ef6\uff0c\u7279\u522b\u662f\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\uff0c\u90fd\u4e0d\u5e94\u8be5\u62e5\u6709\u5bf9\u4f60\u7684\u7cfb\u7edf\u7684\u5185\u6838\u7ea7\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u679c\u662f\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u8d2d\u4e70\u4e4b\u524d\u5f97\u5230\u901a\u77e5\u3002\u5982\u679c\u6211\u77e5\u9053\u5b83\u4f1a\u88ab\u6dfb\u52a0\uff0c\u6211\u5c31\u4e0d\u4f1a\u4e70\u5b83\u4e86\u3002\u4ec5\u4ec5\u56e0\u4e3a\u5176\u4ed6\u8f6f\u4ef6\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u5c31\u662f\u6b63\u786e\u7684\u3002\n\u4f46\u662fGreshishchev\u544a\u8bc9Ars\uff0c\u8fd9\u6837\u7684\u6050\u60e7\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u4ed6\u8bf4\uff0cDenuvo Anti-cheat\u88ab\u8bbe\u8ba1\u6210\u4e0eNVIDIA\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u6216Steam\u7684\u5ba2\u6237\u670d\u52a1\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e0e\u8fc7\u53bb\u7684\u53cd\u4f5c\u5f0a\u4e0d\u540c\uff0c\u73b0\u5728\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\u6302\u94a9\uff0c\u4e0d\u9700\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5f00\u59cb\uff0c\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\u3002\n\u5bb3\u6015\u672a\u77e5\u662f\u4eba\u7c7b\u7684\u672c\u6027\uff0c\u6211\u4eec\u518d\u591a\u7684\u6280\u672f\u4e3b\u5f20\u4e5f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u4fe1\u4efb\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u5efa\u7acb\u8d77\u6765\u7684\uff0c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5f53\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u516c\u53f8\u5728\u60a8\u6700\u559c\u6b22\u7684\u6e38\u620f\u4e2d\u7981\u8d5b\u4e00\u540d\u73a9\u5bb6\u65f6\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u60a8\u7684\u4fe1\u4efb\u3002", "note_en": "Doom Eternal has become the latest game to use a kernel-level driver to aid in detecting cheaters in multiplayer matches.\n The game&#39;s new driver and anti-cheat tool come courtesy of  Denuvo\u00a0parent Irdeto, a company  once known for nearly unbeatable piracy protection and now known for  somewhat effective but often cracked piracy protection. But the new Denuvo Anti-Cheat protection is completely separate from the company&#39;s Denuvo Anti-Tamper technology, which uses code obfuscation to hinder crackers (and which was  already mooted for  Doom Eternal anyway shortly after launch).\n The new Denuvo\u00a0Anti-Cheat tool rolls out to  Doom Eternal players after &#34;countless hours and millions of gameplay sessions&#34; during a two-year early access program, Irdeto  said in a blog post announcing its introduction. But unlike   Valorant&#39;s similar Vanguard system, the Denuvo Anti-Cheat driver &#34;doesn\u2019t have annoying tray icons or splash screens&#34; letting players monitor its use on their system.\n   To assuage any potential fears, Irdeto writes that Denuvo Anti-Cheat only runs when the game is active, and  Bethesda&#39;s patch notes similarly say that &#34;use of the kernel-mode driver starts when the game launches and stops when the game stops for any reason.&#34; That&#39;s a major difference from  Valorant&#39;s Vanguard system, which  requires the driver to be loaded from system startup in order to &#34;monitor system state for integrity.&#34;\n &#34;No monitoring or data collection happens outside of multiplayer matches,&#34; Denuvo Anti-Cheat Product Owner Michail Greshishchev told Ars via email. &#34;Denuvo does not attempt to maintain the integrity of the system. It does not block cheats, game mods, or developer tools. Denuvo Anti-Cheat only detects cheats.&#34;\n  Greshishchev added that the company&#39;s driver has received &#34;certification from renown[ed] kernel security researchers, completed regular whitebox and blackbox audits, and was penetration-tested by independent cheat developers.&#34; He said\u00a0Irdeto is also setting up a bug bounty program to discover any flaws they might have missed.\n And because of Denuvo Anti-Cheat&#39;s design, Greshishchev says the driver is more secure than others that might have more exposure to the Internet.\u00a0&#34;Unlike existing anti-cheats, Denuvo Anti-Cheat does not stream shell code from the Web,&#34; Greshishchev told Ars. &#34;This means that, if compromised, attackers can&#39;t send down arbitrary malware to gamers&#39; machines.\n &#34;These same gaming machines already have a sea of subpar (security-wise) administrative services with active Internet connections,&#34; he continued. &#34;Drivers from mouse and keyboard vendors, lighting and overclocking services, etc. If attackers really wanted to compromise gamers&#39; machines, they would go through them\u2014not through the world&#39;s strongest anti-tamper software.&#34;\n If a driver exploit is discovered in the wild, Greshishchev told Ars that revocable certificates and self-expiring network keys can be used as &#34;kill switches&#34; to cut them off.\u00a0&#34;No security expert can claim their solution is infallible, but our penetration testing, certification, and security auditing is significantly higher than any reasonable standard,&#34; he said.\n  The use of kernel-mode drivers is actually pretty common in multiplayer game anti-cheat tools, helping to ensure that lower-privileged &#34;user-mode&#34; tools that try to modify the game code can be detected and stopped. While cheaters can still get around this by using code-signing exploits to install their own kernel-level cheat tools, the process is more difficult.\n Loading a kernel-mode anti-cheat driver only when a game is running, as Denuvo does, is also very different from running a  rootkit-style\u00a0anti-cheat driver from startup, from a security perspective. The latter introduces much more exposure for system-level exploits that can run without the user&#39;s knowledge, creating &#34;a large attack surface for little benefit,&#34; as independent security researcher Saleem Rashid told Ars  regarding  Valorant&#39;s Vanguard security driver.\n Still, some members of the  Doom Eternal community are not happy about the way the Denuvo Anti-Cheat tool was rolled out, or with the security risks they feel it creates on their systems.\n &#34;No piece of software, especially an anti-cheat, should have kernel-level access to your system and if it is we should have been informed before purchasing it,&#34; Reddit user extant_dinero wrote in  a popular thread on the  Doom subreddit urging people to delete the game. &#34;I would not have purchased it had I known it would be added. Just because other pieces of software do it doesn&#39;t make it right.&#34;\n But Greshishchev tells Ars such fear is misplaced. Denuvo Anti-Cheat is &#34;designed to be no different than Nvidia&#39;s graphic drivers or Steam&#39;s Client Service,&#34; he said. &#34;Unlike anti-cheats of the past, there are no filesystem hooks, no requirement to start with the OS, no annoying tray icons or splash screens.&#34;\n &#34;It&#39;s human nature to have a fear of the unknown, and no amount of technical claims by us could address that. Trust is built up over time, and we think that when Denuvo Anti-Cheat bans a player in your favorite game, we will gain your trust.&#34;", "posttime": "2020-05-17 05:47:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,denuvo,eternal,\u6e38\u620f", "title": "\u201c\u672b\u65e5\u6c38\u6052\u201d\u4f7f\u7528\u7684\u662fDenuvo\u7684\u65b0\u5185\u6838\u7ea7\u53cd\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f", "title_en": "'Doom Eternal' Is Using Denuvo's New Kernel-Level Anti-Cheat Driver", "transed": 1, "url": "https://arstechnica.com/gaming/2020/05/doom-eternal-anti-cheat-kernel-driver-is-safer-than-others-denuvo-says/", "via": "", "real_tags": ["\u7a0b\u5e8f", "denuvo", "eternal", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "c80b55af49940fdf19f90fe1ff1fab6b.png", "infoid": 1002446, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2011\u5e74\uff0c\u4e00\u540d\u8377\u5170\u81ea\u884c\u8f66\u8bb0\u8005\u5f00\u73a9\u7b11\u5730\u63d0\u8bae\u5728\u4ed6\u7684\u7956\u56fd\u4fee\u5efa\u4e00\u5ea7\u4eba\u5de5\u5c71\uff0c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u63d0\u6848\u548c\u53ef\u884c\u6027\u7814\u7a76\uff0c\u6210\u4e3a\u8377\u5170\u6700\u5927\u7684\u521b\u65b0\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u9879\u76ee\u7684Die Berg Komt er-\uff0c\u4e00\u4e2a\u4eba\u548c\u4e00\u5ea7(\u4eba\u9020)\u5c71\u7684\u6545\u4e8b\u3002", "note_en": "In 2011, a Dutch cycling journalist\u2019s tongue-in-cheek proposal for an artificial mountain in his homeland sparked a flurry of proposals and feasibility studies, growing to be the biggest innovation platform in the Netherlands.   This is the story of Die Berg Komt Er \u2013\u00a0of a project, a man and a (man-made) mountain.", "posttime": "2020-05-17 05:47:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u9020,man,die", "title": "\u8377\u5170\u4eba\u548c\u4ed6\u7684(\u4eba\u9020)\u5c71", "title_en": "A Dutchman and his (man-made) mountain", "transed": 1, "url": "https://cyclingtips.com/2020/05/a-dutchman-and-his-man-made-mountain/", "via": "", "real_tags": ["\u4eba\u9020", "man", "die"]}, {"category": "", "categoryclass": "", "imagename": "c0977b838010da333dd2fa6d4cc99b5d.jpeg", "infoid": 1002445, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u5bb6\u8457\u540d\u7684\u5a31\u4e50\u5f8b\u5e08\u4e8b\u52a1\u6240\u906d\u5230\u9ed1\u5ba2\u653b\u51fb\u540e\uff0c\u4e00\u4e2a\u8eab\u4efd\u4e0d\u660e\u7684\u7f51\u7edc\u5e2e\u6d3e\u6cc4\u9732\u4e86Lady Gaga\u7684\u6570\u636e\uff0c\u4ed6\u4eec\u8bf4\u8fd9\u662f\u5173\u4e8e\u603b\u7edf\u7684\u6570\u636e\u3002\n\u7f51\u7edc\u5e2e\u6d3e\u5728\u8fd9\u4e2a\u9ed1\u6697\u7684\u7f51\u7ad9\u4e0a\u5220\u9664\u4e86\u94fe\u63a5\u5230\u7b2c\u4e00\u90e8\u5206\u6570\u636e\u7684\u94fe\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\u3002\u201c\u5546\u4e1a\u5185\u5e55\u201d(Business Insider)\u67e5\u9605\u7684\u6587\u4ef6\u6837\u672c\u5305\u62ec\u63d0\u5230\u603b\u7edf\u7684\u6cd5\u5f8b\u7535\u5b50\u90ae\u4ef6\u3001\u6587\u4ef6\u548c\u5408\u540c\uff0c\u4ece\u4e00\u4f4d\u5b66\u5f92(An\uff1bApprentice)\u5728\u7ade\u9009\u671f\u95f4\u5bfb\u6c42\u62cd\u6444\u65b0\u8282\u76ee\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5230\u5c31\u5408\u6cd5\u4f7f\u7528\u4ed6\u7684\u91c7\u8bbf\u5f55\u50cf\u8fdb\u884c\u8c08\u5224\u7684\u5408\u540c\u3002\n\u52d2\u7d22\u8f6f\u4ef6\u56e2\u4f19\u8fc7\u53bb\u66fe\u4ece\u4f01\u4e1a\u7a83\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u5176\u6cc4\u9732\u5230\u4e00\u4e2a\u9ed1\u6697\u7684\u7f51\u7ad9\u4e0a\uff0c\u4e00\u540d\u8ddf\u8e2a\u8fc7\u53bb\u6570\u636e\u8f6c\u50a8\u7684\u52d2\u7d22\u8f6f\u4ef6\u4e13\u5bb6\u8868\u793a\uff0c\u5f88\u96be\u77e5\u9053\u4ed6\u4eec\u7a83\u53d6\u4e86\u4ec0\u4e48\u6570\u636e\uff0c\u4f46\u4ed6\u8868\u793a\uff0c\u8fd9\u8d77\u72af\u7f6a\u884c\u4e3a\u52a0\u5267\u4e86\u4e00\u6ce2\u9ad8\u5ea6\u516c\u5f00\u7684\u52d2\u7d22\u8f6f\u4ef6\u52d2\u7d22\u653b\u51fb\u6d6a\u6f6e\u3002\n\u4e13\u95e8\u4ece\u4e8b\u52d2\u7d22\u8f6f\u4ef6\u7684\u7f51\u7edc\u5b89\u5168\u516c\u53f8Emsisoft\u7684\u5a01\u80c1\u7814\u7a76\u5458\u5e03\u96f7\u7279\u00b7\u5361\u6d1b(Brett Clow)\u8868\u793a\uff0c\u4ed6\u4eec\u53ef\u80fd\u6ca1\u6709\u4ec0\u4e48\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u53ef\u80fd\u53ea\u662f\u8bd5\u56fe\u65bd\u52a0\u989d\u5916\u7684\u538b\u529b\u3002\u52d2\u7d22\u8f6f\u4ef6\u96c6\u56e2\u7684\u884c\u4e3a\u6b63\u53d8\u5f97\u66f4\u52a0\u9634\u9669\u548c\u6781\u7aef\u3002\u4ed6\u4eec\u73b0\u5728\u5c06\u6570\u636e\u6b66\u5668\u5316\uff0c\u5e76\u7528\u5b83\u6765\u5bf9\u4ed8\u88ab\u76d7\u7684\u516c\u53f8\u3002\n\u672c\u5468\uff0c\u8fd9\u4e2a\u7f51\u7edc\u5e2e\u6d3e\u4fb5\u5165\u4e86\u9876\u7ea7\u5a31\u4e50\u4e1a\u5f8b\u5e08\u4e8b\u52a1\u6240Grubman Shire Meiselas&amp\uff1bSacks\uff0c\u5e76\u6cc4\u9732\u4e86Lady Gaga\u7684\u6570\u5343\u4efd\u5408\u540c\u548c\u5176\u4ed6\u6587\u4ef6\u3002\n\u9ed1\u5ba2\u5a01\u80c1\u79f0\uff0c\u5982\u679c\u8be5\u5f8b\u5e08\u4e8b\u52a1\u6240\u4e0d\u652f\u4ed84200\u4e07\u7f8e\u5143\u7684\u8d4e\u91d1\uff0c\u4ed6\u4eec\u5c06\u516c\u5e03\u66f4\u591a\u540d\u4eba\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5e03\u9c81\u65af\u00b7\u65af\u666e\u6797\u65af\u6c40\u3001\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u963f\u594e\u83b1\u62c9\u7b49\u6570\u5341\u4eba\u3002\n\u6839\u636e\u540d\u4eba\u65b0\u95fb\u7f51\u7ad9\u7b2c\u516d\u9875\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u8fd9\u5bb6\u540d\u4e3aGrubman Shire Meiselas&amp\uff1bSacks\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\u8868\u793a\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u4e0d\u662f\u5ba2\u6237\uff0c\u4ed6\u4eec\u6ca1\u6709\u652f\u4ed8\u8d4e\u91d1\uff0c\u4ed6\u4eec\u6b63\u5728\u4e0e\u8054\u90a6\u8c03\u67e5\u5c40\u5408\u4f5c\u7834\u6848\u3002\n\u8fd9\u4e2a\u540d\u4e3aRevil\u7684\u56e2\u4f19\u5bf9\u52a0\u5bc6\u6570\u636e\u7684\u4f01\u4e1a\u6267\u884c\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\uff0c\u8981\u6c42\u8d4e\u91d1\u624d\u80fd\u91ca\u653e\u6570\u636e\uff0c\u5426\u5219\u5982\u679c\u4ed6\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u5c31\u4f1a\u6cc4\u9732\u6570\u636e\u3002\n\u8be5\u7ec4\u7ec7\u8bf4\uff0c\u5f53\u4ed6\u4eec\u53d1\u5e03\u4ed6\u4eec\u58f0\u79f0\u662f\u5173\u4e8e\u7279\u6717\u666e\u7684\u6570\u636e\u65f6\uff0c\u5f8b\u5e08\u5148\u751f\u8bf4\u5510\u7eb3\u5fb7\u4ece\u6765\u5c31\u4e0d\u662f\u4ed6\u4eec\u7684\u5ba2\u6237\u3002\u4ed6\u8bf4\u6211\u4eec\u662f\u5728\u865a\u5f20\u58f0\u52bf\u3002\u54e6\uff0c\u597d\u5427\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u5e26\u7740\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u5f20\u8d34\u3002&#34\uff1b\n\u6211\u4eec\u8bfb\u5230\u4e86\u5f53\u5c40\u7684\u7acb\u573a\u3002\u5ba3\u5e03\u8fd9\u662f\u4e00\u8d77\u6050\u6016\u4e3b\u4e49\u884c\u4e3a\u3002\u4f60\u7684\u7acb\u573a\u662f\u4f60\u7684\u9009\u62e9\u3002\u8fd9\u5bf9\u6211\u4eec\u7684\u5de5\u4f5c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u5b83\u53ea\u662f\u53ef\u4ee5\u5b8c\u5168\u5220\u9664\u6211\u4eec\u4ecd\u7136\u89c2\u5bdf\u5230\u7684\u67d0\u4e9b\u5e27\u3002\u4f46\u73b0\u5728\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5f8b\u5e08\u5148\u751f\u8bf4\u5510\u7eb3\u5fb7\u4ece\u6765\u4e0d\u662f\u4ed6\u4eec\u7684\u5ba2\u6237\u3002\u4ed6\u8bf4\u6211\u4eec\u662f\u5728\u865a\u5f20\u58f0\u52bf\u3002\u54e6\uff0c\u597d\u5427\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u5e26\u7740\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u53d1\u5e03\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u660e\u661f\u4eec\u652f\u6301(\u636e\u5a92\u4f53\u62a5\u9053)\u5f8b\u5e08\u5148\u751f\u3002\n\u4f46\u662f\uff0c\u5f53\u72d7\u4ed4\u961f\u5f00\u59cb\u5728\u5a92\u4f53\u4e0a\u53d1\u8868\u6587\u7ae0\u65f6\uff0c\u4ed6\u4eec\u7684\u652f\u6301\u529b\u5ea6\u4f1a\u6709\u591a\u5927\uff1f\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u62d2\u7edd\u53c2\u52a0\u67d0\u4e9b\u6d3b\u52a8\u3001\u97f3\u4e50\u4f1a\uff1f\u64a4\u56de\u5df2\u7b7e\u7684\u5408\u540c\uff0c\u53d6\u6d88\u4ed6\u4eec\u7684\u6f14\u51fa\uff1f\n\u5f8b\u5e08\u5148\u751f\uff0c\u4f60\u4f1a\u53d7\u5230\u8d23\u5907\u7684\u3002\u4f60\u8981\u81ea\u638f\u8170\u5305\u8d54\u507f\u6240\u6709\u635f\u5931\u3002\u6b64\u5916\uff0c\u6b63\u5982\u6b63\u786e\u6307\u51fa\u7684\u90a3\u6837\uff0c\u60a8\u7684\u58f0\u8a89\u5df2\u7ecf\u53d7\u635f\u3002\u4f46\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u4e3a\u8fd9\u662f\u6211\u4eec\u80fd\u505a\u7684\u6700\u574f\u7684\u4e8b\u4e86\u3002\u54e6\uff0c\u4e0d\u3002\u8fdc\u4e0d\u662f\u6700\u574f\u7684\u3002\u6211\u4eec\u548c\u60a8\u90fd\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u83b7\u5f97\u8d44\u91d1\uff1a\n1.\u4f60\u548c\u6211\u627e\u5230\u5171\u540c\u8bed\u8a00(\u4f60\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u56fd\u5bb6\u7684\u4e2d\u4ecb\u673a\u6784\uff0c\u56e0\u4e3a\u5f53\u5730\u7684\u767d\u75f4\u81ea\u5df1\u80cc\u540e\u6709\u4ec0\u4e48\u4e1c\u897f\u963b\u6b62\u4f60\u8fd9\u6837\u505a)\u3002\u7136\u540e\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u770b\u5230\u4f60\u91cd\u89c6\u5ba2\u6237\u7684\u58f0\u8a89\u548c\u5b89\u5168\u3002\u6211\u4eec\u627f\u8bfa\uff0c\u5728\u6211\u4eec\u8fbe\u6210\u534f\u8bae\u540e\uff0c\u8fd9\u4e9b\u6570\u636e\u4e0d\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u53d1\u5e03\u3001\u4f7f\u7528\u6216\u51fa\u552e\u3002\u8fd9\u662f\u6211\u4eec\u7684\u8bfa\u8a00\u3002\u6211\u4eec\u7684\u58f0\u8a89\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u6211\u4eec\u975e\u5e38\u73cd\u89c6\u3002\u6211\u4eec\u603b\u662f\u4fe1\u5b88\u8bfa\u8a00\u3002\u7136\u540e\u6211\u4eec\u62ff\u5230\u94b1\uff0c\u4f60\u5f52\u8fd8\u4f60\u7684\u58f0\u8a89\u3001\u6570\u636e\uff0c\u52a0\u5f3a\u4f60\u7684\u5b89\u5168\u5e76\u7ee7\u7eed\u751f\u6d3b\u3002\n2.\u4f60\u7ee7\u7eed\u542c\u806a\u660e\u4eba\u7684\u8bdd\uff0c\u4ed6\u4eec\u5f53\u7136\u4e0d\u4f1a\u8d54\u507f\u4f60\u7684\u635f\u5931\u3002\u6211\u4eec\u7684\u884c\u52a8\u5982\u4e0b\uff1a\n1)\u6211\u4eec\u6bcf\u5468(\u6309\u59d3\u6c0f)\u5728\u4fe1\u606f\u4ea4\u6613\u6240\u62cd\u5356\u5ba2\u6237\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u8981\u4e48\u88ab\u660e\u661f\u81ea\u5df1\u4e70\u8d70\uff0c\u8981\u4e48\u88ab\u5404\u79cd\u5a92\u4f53\u5230\u65f6\u6572\u8bc8\uff0c\u6216\u8005\u5e72\u8106\u662f\u597d\u5fc3\u4eba\u3002\u6211\u4eec\u4e0d\u5728\u4e4e\u3002\u6700\u91cd\u8981\u7684\u662f\u6211\u4eec\u4f1a\u62ff\u5230\u94b1\u3002\u76f8\u5e94\u5730\uff0c\u5728\u8fd9\u4e4b\u540e\uff0c\u4eba\u4eec\u5c06\u5f00\u59cb\u51fa\u73b0\u95ee\u9898\u3002\u800c\u4e14\uff0c\u54e6\uff0c\u662f\u7684\uff0c\u4ed6\u4eec\u4f1a\u77e5\u9053\u8fd9\u4ef6\u4e8b\u5e94\u8be5\u5f52\u548e\u4e8e\u8c01\u3002\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u5b89\u5168\u548c\u58f0\u8a89\u6765\u6362\u53d6\u91d1\u94b1\u3002\n2)\u60a8\u7684\u6570\u636e\u5c06\u4fdd\u6301\u4e0d\u53ef\u7528\u72b6\u6001\u3002\u8ba9\u6211\u4eec\u5b9e\u8bdd\u5b9e\u8bf4\u5427\u3002\u5373\u4f7f\u662f\u8fd9\u4e9b\u767d\u75f4\u4e5f\u4e0d\u80fd\u7834\u8bd1\u692d\u5706\u5bc6\u7801\u3002\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u7ee7\u7eed\u76f8\u4fe1\u4ed6\u4eec\u3002\u4f60\u6bcf\u5929\u90fd\u4f1a\u8499\u53d7\u635f\u5931\uff0c\u4ed6\u4eec\u6b63\u5728\u79ef\u6781\u8c03\u67e5\u8fd9\u8d77\u72af\u7f6a\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u81ea\u5df1\u4e5f\u77e5\u9053\u81ea\u5df1\u4f1a\u6389\u8fdb\u5899\u91cc\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u5bfb\u627e\u7684\u662f\u8868\u6f14\u8005\uff0c\u800c\u4e0d\u662f\u7ec4\u7ec7\u8005\u3002\u8fd9\u662f\u4ed6\u4eec\u7684\u4e8b\uff0c\u6211\u4eec\u770b\u7206\u7c73\u82b1\u73a9\u5f97\u5f88\u5f00\u5fc3\u3002\n\u8fd9\u5c31\u662f\u6211\u60f3\u8bf4\u7684\u5168\u90e8\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u5bf9\u6211\u4eec\u6709\u5229\u3002\u6211\u4eec\u4f1a\u5f97\u5230\u5b83\u7684\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u4f60\u5c06\u906d\u53d7\u591a\u5927\u7684\u635f\u5931(\u539f\u6587\u5982\u6b64)\u3002\u8fd8\u6709\u90a3\u4e9b\u4fe1\u4efb\u4f60\u7684\u4eba\u3002", "note_en": "The unidentified cybergang who  dumped Lady Gaga&#39;s data after the hack of a prominent entertainment law firm have dumped what they say is data about the president.\n The cybergang dropped links to &#34;the first part of data, with the most harmless information,&#34; on the dark web site. A sampling of the files reviewed by Business Insider were were legal emails, documents, and contracts mentioning the president, from an &#34;Apprentice&#34; costar&#39;s emails seeking to land a new show during his campaign, to the contracts negotiating legal use of his videotaped interviews.\n The  ransomware gang has stolen data from businesses and leaked it on a dark web site in the past, and a ransomware expert who has followed past data dumps said it&#39;s difficult to know what they data they have stolen \u2013 but said the crime adds to  a wave of highly public ransomware extortion attacks.\n &#34;They may have nothing significant and could simply be attempting to apply to additional pressure,&#34; said Brett Callow, a threat researcher at Emsisoft, a cybersecurity company that specializes in ransomware. &#34;The actions of ransomware groups are becoming ever more insidious and ever more extreme. They now weaponize data and use it against the companies from which it was stolen.&#34;\n   This week, the cybergang  hacked into top entertainment law firm Grubman Shire Meiselas &amp; Sacks, and leaked thousands of contracts and other documents from Lady Gaga.\n The hackers have threatened to release more data about celebrities, including Bruce Springsteen, Christina Aguilera, and dozens of others if the law firm doesn&#39;t pay $42 million in ransom.\n The law firm,  Grubman Shire Meiselas &amp; Sacks, said that President Donald Trump is not a client, that they are not paying the ransom, and that they are working with the FBI to solve the crime, according to a statement published by the celebrity news site  Page Six.\n The gang, REvil, executes ransomware attacks on businesses in which it encrypts their data, demands a ransom to release it, otherwise leaking it if they fail to do so.\n   As they dumped data they claimed are about Trump, the group said, &#34;Mr. Lawyer says that Donald has never been their client. And he says that we are bluffing. Oh well. The first part, with the most harmless information, we will post here.&#34;\n   We read the position of the authorities. Declare this an act of terrorism. Your position is your choice. This will not affect our work in any way. It&#39;s just that it can completely erase certain frames that we still observed. But now is not about that.\n   Mr. Lawyer says that Donald has never been their client. And he says that we are bluffing. Oh well. The first part, with the most harmless information, we will post here. We are very pleased that the stars support (according to media reports) Mr. Lawyer\n But how strong will their support be when the paparazzi start publishing in the media? When will they begin to refuse to participate in certain events, concerts? Withdraw signed contracts, cancel their performances?\n Mr. lawyer, you will be to blame. And you will pay all losses from your pocket. Moreover, as correctly noted, your reputation has already suffered. But everyone believes that this is the worst we could do. Oh no. Far from the worst. Both we and you are aware of this. We will receive money in 2 ways:\n 1. You and I find a common language (you can even [sic] through intermediaries in other countries, since local idiots who themselves have something behind their backs prevent you from doing this). Then, everyone will see that you value the reputation and safety of customers. We give our word that after our agreements the data will not be published, used somewhere, or sold. This is our word. Our reputation is very well known and dear to us. We always keep our words. Then we get money, you return your reputation, data, strengthen your security and continue to live.\n   2. You continue to listen to smart guys who, of course, will not compensate you for losses. Our actions will be as follows:\n 1) We will auction customer data every week (by last name) on the information exchange.\u00a0  This data will be bought either by the stars themselves, or various media and blackmail them then, or simply kind people with good intentions. We do not care. The main thing is we will get the money.  Accordingly, after this, people will begin to have problems. And, oh yes, they will know who to blame for this. And who put their safety and reputation in exchange for money.\n 2) Your data will remain unavailable. Let&#39;s be honest. Even these idiots cannot decipher elliptic cryptography. Although you can continue to believe them. You incur losses daily, and they are actively investigating this crime, although they themselves understand that they will fall into the wall. Moreover, they are looking for performers, not organizers. This is their business, we have fun watching with popcorn.\n That&#39;s all I wanted to say. As you can see, both options benefit us. And we will get it. The only question is how strong losses [sic] you will incur. And those who trusted you.", "posttime": "2020-05-17 05:46:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u9ed1\u5ba2,gaga,gang,\u6570\u636e", "title": "Lady Gaga\u9ed1\u5ba2\u80cc\u540e\u7684\u52d2\u7d22\u8f6f\u4ef6\u56e2\u4f19\u8f6c\u50a8\u7279\u6717\u666e\u6587\u4ef6", "title_en": "Ransomware gang behind Lady Gaga hack dumps Trump docs", "transed": 1, "url": "https://www.businessinsider.com/ransomware-trump-lady-gaga-hack-leaks-files-presidents-2020-5", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u9ed1\u5ba2", "gaga", "gang", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "e486419aaf96bc43c6c9d1e6cb057466.png", "infoid": 1002444, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "XP.css\u662f98.css\u7684\u6269\u5c55\u3002\u4e00\u4e2aCSS\u5e93\uff0c\u7528\u4e8e\u6784\u5efa\u770b\u8d77\u6765\u50cf\u65e7UI\u7684\u754c\u9762\u3002\u8bf7\u53c2\u9605GitHub\u4e0a\u7684XP.css\u8bf7\u53c2\u9605GitHub\u4e0a\u768498.css\u3002\n\u8fd9\u4e2a\u5e93\u4f9d\u8d56\u4e8e\u8bed\u4e49HTML\u7684\u4f7f\u7528\u3002\u8981\u5236\u4f5c\u6309\u94ae\uff0c\u60a8\u9700\u8981\u4f7f\u7528&lt\uff1b\u6309\u94ae&gt\uff1b\u3002\u8f93\u5165\u5143\u7d20\u9700\u8981\u6807\u7b7e\u3002\u56fe\u6807\u6309\u94ae\u4f9d\u8d56\u4e8e\u548f\u53f9\u8c03\u6807\u7b7e\u3002\u672c\u9875\u9762\u5c06\u6307\u5bfc\u60a8\u5b8c\u6210\u8be5\u8fc7\u7a0b\uff0c\u4f46\u53ef\u8bbf\u95ee\u6027\u662f\u6b64\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u6807\u3002\n\u60a8\u53ef\u4ee5\u8986\u76d6\u5143\u7d20\u7684\u8bb8\u591a\u6837\u5f0f\uff0c\u540c\u65f6\u4fdd\u6301\u8be5\u5e93\u63d0\u4f9b\u7684\u5916\u89c2\u3002\u4f60\u7684\u7ebd\u6263\u9700\u8981\u66f4\u591a\u7684\u886c\u57ab\u5417\uff1f\u52c7\u6562\u70b9\u513f\u3002\u9700\u8981\u4e3a\u60a8\u7684\u8f93\u5165\u6807\u7b7e\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\u5417\uff1f\u8bf7\u4fbf\u3002\n\u8fd9\u4e2a\u5e93\u4e0d\u5305\u542b\u4efb\u4f55JavaScript\uff0c\u5b83\u53ea\u662f\u7528\u4e00\u4e9bCSS\u8bbe\u7f6eHTML\u7684\u6837\u5f0f\u3002\u8fd9\u610f\u5473\u774098.css\u4e0e\u60a8\u9009\u62e9\u7684\u524d\u7aef\u6846\u67b6\u517c\u5bb9\u3002\n\u4e0b\u9762\u662f\u5c06XP.css\u4e0eReact\u4e00\u8d77\u4f7f\u7528\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u4e0e\u666e\u901aJavaScript\u4e00\u8d77\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4f7f\u7528XP.css\u7684\u6700\u5feb\u65b9\u5f0f\u662f\u4eceunpkg\u5bfc\u5165\u5b83\u3002\n\u547d\u4ee4\u6309\u94ae\uff0c\u4e5f\u79f0\u4e3a\u6309\u94ae\uff0c\u662f\u5f53\u7528\u6237\u5355\u51fb\u5b83\u65f6\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u63a7\u4ef6\u3002\n\u6807\u51c6\u6309\u94ae\u5bbd75px\uff0c\u9ad823px\uff0c\u5916\u6846\u548c\u5185\u6846\u51f8\u8d77\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u4f1a\u83b7\u5f9712px\u7684\u6c34\u5e73\u586b\u5145\u3002\n\u5355\u51fb\u6309\u94ae\u65f6\uff0c\u51f8\u8d77\u7684\u8fb9\u6846\u4f1a\u4e0b\u9677\u3002\u4ee5\u4e0b\u6309\u94ae\u88ab\u6a21\u62df\u4e3a\u5904\u4e8e\u6309\u4e0b(\u6fc0\u6d3b)\u72b6\u6001\u3002\n\u7981\u7528\u7684\u6309\u94ae\u4fdd\u6301\u76f8\u540c\u7684\u51f8\u8d77\u8fb9\u6846\uff0c\u4f46\u5176\u6807\u7b7e\u4e2d\u7684\u5916\u89c2\u4e3a\u892a\u8272\u3002\n\u6309\u94ae\u7126\u70b9\u4e0e\u865a\u7ebf\u8fb9\u6846\u901a\u4fe1\uff0c\u5728\u6309\u94ae\u5185\u5bb9\u5185\u8bbe\u7f6e4px\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u88ab\u6a21\u62df\u4e3a\u805a\u7126\u3002\n\u590d\u9009\u6846\u7531\u4e00\u4e2a\u51f9\u9677\u9762\u677f\u8868\u793a\uff0c\u9009\u4e2d\u65f6\uff0c\u8be5\u9762\u677f\u4f1a\u5728\u6307\u793a\u9009\u9879\u7684\u6807\u7b7e\u65c1\u8fb9\u586b\u5145\u4e00\u4e2a\u590d\u9009\u56fe\u6807\u3002\n\u6ce8\u610f\uff1a\u5fc5\u987b\u4f7f\u7528&lt\uff1blabel&gt\uff1b\u5143\u7d20\u5e76\u5c06for\u5c5e\u6027\u6307\u5411\u8f93\u5165\u7684id\uff0c\u5728\u590d\u9009\u6846\u540e\u5305\u542b\u76f8\u5e94\u7684\u6807\u7b7e\u3002\u8fd9\u786e\u4fdd\u590d\u9009\u6846\u6613\u4e8e\u4e0e\u8f85\u52a9\u6280\u672f\u4e00\u8d77\u4f7f\u7528\uff0c\u540c\u65f6\u786e\u4fdd\u6240\u6709\u4eba\u90fd\u6709\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c(\u4f7f\u7528Tab\u952e\u5bfc\u822a\uff0c\u80fd\u591f\u5355\u51fb\u6574\u4e2a\u6807\u7b7e\u4ee5\u9009\u4e2d\u8be5\u6846)\u3002\n\u5bf9\u8f93\u5165\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u4f7f\u7528field-row\u7c7b\u5c06\u6bcf\u4e2a\u8f93\u5165\u5305\u88c5\u5728\u5bb9\u5668\u4e2d\u3002\u8fd9\u786e\u4fdd\u4e86\u8f93\u5165\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e00\u81f4\u3002\n\u9009\u9879\u6309\u94ae(\u4e5f\u79f0\u4e3a\u5355\u9009\u6309\u94ae)\u8868\u793a\u6709\u9650\u7684\u4e92\u65a5\u9009\u9879\u96c6\u4e2d\u7684\u5355\u4e2a\u9009\u9879\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u6237\u53ea\u80fd\u9009\u62e9\u4e00\u7ec4\u9009\u9879\u3002\n\u53ef\u4ee5\u901a\u8fc7\u5728\u6bcf\u4e2a\u8f93\u5165\u4e0a\u6307\u5b9a\u5171\u4eab\u540d\u79f0\u5c5e\u6027\u6765\u5bf9\u9009\u9879\u6309\u94ae\u8fdb\u884c\u5206\u7ec4\u3002\u5982\u524d\u6240\u8ff0\uff1a\u5bf9\u8f93\u5165\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u4f7f\u7528field-row\u7c7b\u5c06\u6bcf\u4e2a\u8f93\u5165\u5305\u88c5\u5728\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u4ee5\u786e\u4fdd\u8f93\u5165\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e00\u81f4\u3002\n\u82b1\u751f\u9171\u5e94\u8be5\u662f\u5149\u6ed1\u7684\u6211\u7406\u89e3\u4e3a\u4ec0\u4e48\u4eba\u4eec\u559c\u6b22\u8106\u8106\u7684\u82b1\u751f\u9171\u8106\u8106\u7684\u82b1\u751f\u9171\u662f\u597d\u7684\n\u521b\u5efa\u9009\u9879\u5361\u65f6\uff0c\u60a8\u5c06\u4f7f\u7528\u7ae0\u8282class=&#34\uff1btab&#34\uff1b\uff0c\u7136\u540e\u4f7f\u7528\u6807\u7b7eclass=&#34\uff1btab.title&#34\uff1b\u548c\u6bcf\u4e2a\u9009\u9879\u5361\u7684\u5185\u5bb9(\u4f7f\u7528\u6587\u7ae0class=&#34\uff1btab-content&#34\uff1b\u5143\u7d20)\u3002\n\u8981\u5c06\u9009\u9879\u5361\u6807\u8bb0\u4e3a\u53ef\u89c1\uff0c\u53ef\u4ee5\u5728HTML\u4e2d\u9759\u6001\u5730\u6216\u4f7f\u7528JavaScript\u52a8\u6001\u5730\u5c06.active\u7c7b\u6dfb\u52a0\u5230.tab-title\u548c.tab-content\u4e2d\u3002\u5f53\u60a8\u8981\u66f4\u6539\u5b83\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5176\u4ece\u5176\u4ed6\u9009\u9879\u5361\u4e2d\u5220\u9664\uff01\nTab 1 Tab 2 Tab 3\u9009\u9879\u5361\u5185\u5bb9\u521b\u5efa\u9009\u9879\u5361\u65f6\uff0c\u60a8\u5c06\u4f7f\u7528\u7ae0\u8282class=&#34\uff1btab&#34\uff1b\uff0c\u7136\u540e\u5bf9\u4e8e\u9009\u9879\u5361\u6807\u9898\uff0c\u4f7f\u7528\u6807\u7b7eclass=&#34\uff1btab.title&#34\uff1b\uff0c\u5e76\u4f7f\u7528\u6587\u7ae0class=&#34\uff1btab-content&#34\uff1b\u5143\u7d20\u663e\u793a\u6bcf\u4e2a\u9009\u9879\u5361\u7684\u5185\u5bb9\u3002\u8981\u5c06\u9009\u9879\u5361\u6807\u8bb0\u4e3a\u53ef\u89c1\uff0c\u53ef\u4ee5\u5728HTML\u4e2d\u9759\u6001\u5730\u6216\u4f7f\u7528JavaScript\u52a8\u6001\u5730\u5c06.active\u7c7b\u6dfb\u52a0\u5230.tab-title\u548c.tab-content\u4e2d\u3002\u5f53\u60a8\u8981\u66f4\u6539\u5b83\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5176\u4ece\u5176\u4ed6\u9009\u9879\u5361\u4e2d\u5220\u9664\uff01\u66f4\u591a.\u3002\u6b64\u9009\u9879\u5361\u5305\u542bGroupBox\u4eca\u65e5\u60c5\u7eea\u514b\u83b1\u5c14\u00b7\u8428\u83f2\u5179\u00b7\u5e03\u62c9\u5fb7\u00b7\u91cc\u6602\u514b\u91cc\u65af\u00b7\u6469\u6d1b\u54e5\u00b7\u5361\u62c9\u00b7\u62c9\u5229\u97f3\u4e50\u9009\u9879\u53613 Lorem Ipsum Dolor Site\u3002\n\u5206\u7ec4\u6846\u662f\u53ef\u7528\u4e8e\u7ec4\u7ec7\u4e00\u7ec4\u63a7\u4ef6\u7684\u7279\u6b8a\u63a7\u4ef6\u3002\u5206\u7ec4\u6846\u662f\u5177\u6709\u56f4\u7ed5\u4e00\u7ec4\u63a7\u4ef6\u7684\u53ef\u9009\u6807\u7b7e\u7684\u77e9\u5f62\u6846\u67b6\u3002\n\u7ec4\u6846\u53ef\u4ee5\u901a\u8fc7\u7528fieldset\u6807\u7b7e\u5305\u88c5\u60a8\u7684\u5143\u7d20\u6765\u4f7f\u7528\u3002\u5b83\u5305\u542b\u4e00\u4e2a\u51f9\u9677\u7684\u5916\u8fb9\u6846\u548c\u4e00\u4e2a\u51f8\u8d77\u7684\u5185\u8fb9\u6846\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u4ef6\u5468\u56f4\u7684\u96d5\u523b\u6846\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u5b57\u6bb5\u96c6\u4e2d\u653e\u7f6e\u56fe\u4f8b\u5143\u7d20\u4e3a\u60a8\u7684\u7ec4\u63d0\u4f9b\u6807\u7b7e\u3002\n\u6587\u672c\u6846(\u4e5f\u79f0\u4e3a\u7f16\u8f91\u63a7\u4ef6)\u662f\u4e00\u4e2a\u77e9\u5f62\u63a7\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u8f93\u5165\u6216\u7f16\u8f91\u6587\u672c\u3002\u5b83\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u652f\u6301\u5355\u884c\u6216\u591a\u884c\u6587\u672c\u3002\n\u53ef\u4ee5\u901a\u8fc7\u5728\u8f93\u5165\u5143\u7d20\u4e0a\u6307\u5b9a\u6587\u672c\u7c7b\u578b\u6765\u5448\u73b0\u6587\u672c\u6846\u3002\u4e0e\u590d\u9009\u6846\u548c\u5355\u9009\u6309\u94ae\u4e00\u6837\uff0c\u60a8\u5e94\u8be5\u63d0\u4f9b\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u5e76\u6b63\u786e\u8bbe\u7f6e\u5c5e\u6027\uff0c\u5e76\u4f7f\u7528field-row\u7c7b\u5c06\u4e24\u8005\u5305\u88c5\u5728\u5bb9\u5668\u4e2d\u3002\n\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u6bb5\u884c\u5806\u53e0\u7c7b\u5c06\u6807\u7b7e\u653e\u7f6e\u5728\u8f93\u5165\u7684\u4e0a\u65b9\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u65c1\u8fb9\u3002\n\u6ed1\u5757(\u6709\u65f6\u79f0\u4e3a\u8ddf\u8e2a\u6761\u63a7\u4ef6)\u7531\u5b9a\u4e49\u8c03\u6574\u8303\u56f4\u6216\u8303\u56f4\u7684\u6761\u548c\u663e\u793a\u63a7\u4ef6\u5f53\u524d\u503c\u7684\u6307\u793a\u5668\u7ec4\u6210\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528Has-box-Indicator\u7c7b\u5c06\u9ed8\u8ba4\u6307\u793a\u5668\u66ff\u6362\u4e3a\u6846\u6307\u793a\u5668\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528is-Vertical\u7528div\u5305\u88c5\u6ed1\u5757\u4ee5\u5782\u76f4\u663e\u793a\u8f93\u5165\u3002\n\u6ce8\u610f\uff1a\u8981\u66f4\u6539\u5782\u76f4\u6ed1\u5757\u7684\u957f\u5ea6\u3001\u8f93\u5165\u5bbd\u5ea6\u548cdiv\u9ad8\u5ea6\u3002\n\u4e0b\u62c9\u5217\u8868\u6846\u4ec5\u5141\u8bb8\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u5355\u4e2a\u9879\u76ee\u3002\u5728\u5173\u95ed\u72b6\u6001\u4e0b\uff0c\u63a7\u4ef6\u663e\u793a\u63a7\u4ef6\u7684\u5f53\u524d\u503c\u3002\u7528\u6237\u6253\u5f00\u5217\u8868\u4ee5\u66f4\u6539\u8be5\u503c\u3002\n5-\u96be\u4ee5\u7f6e\u4fe1\uff014-\u592a\u68d2\u4e86\uff013-\u76f8\u5f53\u4e0d\u95192-\u4e0d\u592a\u68d21-\u4e0d\u5e78\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u9009\u62e9\u7b2c\u4e00\u4e2a\u9009\u9879\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879\u5143\u7d20\u6307\u5b9a\u9009\u5b9a\u5c5e\u6027\u6765\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002\n5-\u96be\u4ee5\u7f6e\u4fe1\uff014-\u592a\u68d2\u4e86\uff013-\u76f8\u5f53\u4e0d\u95192-\u4e0d\u592a\u68d21-\u4e0d\u5e78\n\u5728\u7a97\u53e3\u7684\u9876\u90e8\u8fb9\u7f18\uff0c\u5728\u5176\u8fb9\u6846\u5185\uff0c\u662f\u6807\u9898\u680f(\u4e5f\u79f0\u4e3a\u6807\u9898\u680f\u6216\u6807\u9898\u680f)\uff0c\u5b83\u5ef6\u4f38\u5230\u6574\u4e2a\u7a97\u53e3\u7684\u5bbd\u5ea6\u3002\u6807\u9898\u680f\u6807\u8bc6\u7a97\u53e3\u7684\u5185\u5bb9\u3002\n\u5728\u6807\u9898\u680f\u4e2d\u5305\u62ec\u4e0e\u4e3b\u7a97\u53e3\u7684\u516c\u5171\u547d\u4ee4\u76f8\u5173\u8054\u7684\u547d\u4ee4\u6309\u94ae\u3002\u8fd9\u4e9b\u6309\u94ae\u5145\u5f53\u7279\u5b9a\u7a97\u53e3\u547d\u4ee4\u7684\u5feb\u6377\u65b9\u5f0f\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u7c7b\u6765\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u6807\u9898\u680f\uff1aTitle-Bar\u3001Title-Bar-Text\u548cTitle-Bar-Controls\u3002\n\u6211\u4eec\u4f7f\u7528aria-label\u6765\u5448\u73b0Close\u6309\u94ae\uff0c\u8ba9\u8f85\u52a9\u6280\u672f\u77e5\u9053\u8be5\u6309\u94ae\u7684\u7528\u610f\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528&#34\uff1b\u6700\u5c0f\u5316&#34\uff1b\u548c&#34\uff1b\u6700\u5927\u5316&#34\uff1b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4e3a\u4e86\u7ed9\u6211\u4eec\u7684\u6807\u9898\u680f\u4e00\u4e2a\u5bb6\uff0c\u6211\u4eec\u4f7f\u7528\u4e86Window\u7c7b\u3002\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51f8\u8d77\u7684\u5916\u8fb9\u754c\u548c\u5185\u8fb9\u754c\uff0c\u4ee5\u53ca\u4e00\u4e9b\u586b\u5145\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u5bb9\u5668\u6837\u5f0f\u4e2d\u6307\u5b9a\u5bbd\u5ea6\u6765\u81ea\u7531\u8c03\u6574\u7a97\u53e3\u7684\u5927\u5c0f\u3002\n\u8981\u7ed8\u5236\u7a97\u53e3\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4f7f\u7528\u6807\u9898\u680f\u4e0b\u9762\u7684Window-Body\u7c7b\u3002\n\u5fae\u8f6f\u276eR\u276f\u89c6\u7a97DOS\u276eC\u276f\u7248\u6743\u6240\u6709\u5fae\u8f6f\u516c\u53f81990\u5e74\u81f32001\u5e74\u3002C\uff1a\\WINDOWS\\system32&gt\uff1b\u60a8\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u548c\u524d\u6807\u8bb0\u8f7b\u677e\u6784\u5efa\u547d\u4ee4\u884c\u3002\n\u547d\u4ee4\u63d0\u793a\u7b26Microsoft&amp\uff1b#10094\uff1bR&amp\uff1b#10095\uff1bWindows DOS&amp\uff1b#10094\uff1bC&amp\uff1b#10095\uff1b\u7248\u6743\u6240\u6709Microsoft Corp.1990-2001\u5e74\u3002C\uff1a&amp\uff1b#92\uff1bWindows&amp\uff1b#92\uff1bsystem32&&gt;\u60a8\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u548c\u524d\u6807\u8bb0\u8f7b\u677e\u6784\u5efa\u547d\u4ee4\u884c\n\u4e00\u4e2a\u6709\u6807\u7b7e\u548c\u7ec4\u7684\u7a97\u53e3\uff0c\u97f3\u4e50\u72d7\u98df\u7269\u8bbe\u7f6e\u4f60\u7684\u8046\u542c\u504f\u597d\u4eca\u5929\u7684\u5fc3\u60c5\u5c3c\u57fa\u00b7\u7c73\u5a1c\u00b7\u8d1d\u5c14\u5854\u65af\u8ff7\u4eba\u7684\u83ab\u59ae\u514b\u00b7\u6069\u5854\u65af\u5854(Nicki Minaj Bell Towers)\uff0c\u9b45\u529b\u5341\u8db3\u7684\u83ab\u59ae\u514b\u00b7\u6069(Monique En)\u3002V\u91cd\u7f6e\u8b66\u62a5.\u3002\u5c1d\u8bd5\u8fd9\u6837\u505a\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5173\u6ce8\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6587\u7ae0\u6807\u7b7e\u4e3a\u6bcf\u4e2a\u9009\u9879\u5361\u521b\u5efa\u5185\u5bb9\u3002\u597d\u7684\uff0c\u53d6\u6d88\u3002\n\u6811\u89c6\u56fe\u63a7\u4ef6\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5217\u8868\u6846\u63a7\u4ef6\uff0c\u5b83\u6839\u636e\u5bf9\u8c61\u7684\u903b\u8f91\u5c42\u6b21\u5173\u7cfb\u5c06\u4e00\u7ec4\u5bf9\u8c61\u663e\u793a\u4e3a\u7f29\u8fdb\u8f6e\u5ed3\u3002\n\u8981\u5448\u73b0\u6811\u89c6\u56fe\uff0c\u8bf7\u5c06ul\u5143\u7d20\u4e0e\u6811\u89c6\u56fe\u7c7b\u4e00\u8d77\u4f7f\u7528\u3002\u8fd9\u4e2a\u5217\u8868\u7684\u5b50\u5143\u7d20(li\u5143\u7d20)\u53ef\u4ee5\u5305\u542b\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u5185\u5bb9\u3002\n\u8981\u4f7f\u5176\u6210\u4e3a\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5957\u66f4\u591a\u7684ul\u5143\u7d20(\u8fd9\u4e9b\u5143\u7d20\u4e0a\u4e0d\u9700\u8981\u7c7b)\u3002\u8fd9\u5c06\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e00\u4e2a\u6f02\u4eae\u7684\u865a\u7ebf\u8fb9\u6846\u548c\u7f29\u8fdb\uff0c\u4ee5\u8bf4\u660e\u6811\u7684\u7ed3\u6784\u3002\n\u76ee\u5f55\u4ec0\u4e48\u662fWeb\u5f00\u53d1\uff1fCSS\u9009\u62e9\u5668\u7279\u5b9a\u5c5e\u6027JavaScript\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u907f\u514d\uff0c\u9664\u975e\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u907f\u514d\u6240\u6709\u8d39\u7528HTML\u7279\u522b\u611f\u8c22\u3002\n\u8bf7\u53c2\u8003GitHub\u95ee\u9898\u9875\u9762\uff0c\u67e5\u770b\u6211\u7684CSS\u4e2d\u7684\u9519\u8bef\u6216\u62a5\u544a\u65b0\u7684\u9519\u8bef\u3002\u8fd8\u8981\u68c0\u67e598.css\u7684\u95ee\u9898\u3002\ncss\u4e00\u5f00\u59cb\u662f98.css(\u7531Jordan Scales\u53d1\u8d77\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u9879\u76ee)\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u73b0\u5728\u6b63\u8bd5\u56fe\u5c06GUI\u4f5c\u4e3a\u6837\u677f\uff0c\u4ee5\u4fbf\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u5176\u4f5c\u4e3a\u4e3b\u9898\u3002\u5982\u679c\u4f60\u60f3\u505a\u4e00\u4e2a\u4e3b\u9898\u6216\u8005\u505a\u8d21\u732e\uff0c\u6211\u5f88\u60f3\u770b\u770b\u4f60\u80fd\u628a\u8fd9\u4e2a\u5e26\u5230\u54ea\u91cc\u53bb\uff01\n\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\u9879\u76ee\uff01\ud83c\udf78\u8003\u8651\u5728GitHub\u4e0a\u4e3b\u6f14/\u5173\u6ce8\uff0c\u5728\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002", "note_en": "XP.css is an extention of 98.css. A CSS library for building interfaces that look like old UIs.  See  XP.css on GitHub  See  98.css on GitHub\n    This library relies on the usage of  semantic HTML. To make a button, you&#39;ll need to use a  &lt;button&gt;. Input elements require labels. Icon buttons rely on  aria-label. This page will guide you through that process, but accessibility is a primary goal of this project.\n  You can override many of the styles of your elements while maintaining the appearance provided by this library. Need more padding on your buttons? Go for it. Need to add some color to your input labels? Be our guest.\n  This library does not contain any JavaScript, it merely styles your HTML with some CSS. This means 98.css is compatible with your frontend framework of choice.\n  Here is an example of  XP.css used with React, and  an example with vanilla JavaScript. The fastest way to use XP.css is to import it from unpkg.\n              A  command button, also referred to as a push button, is a control that causes the application to perform some action when the user clicks it.\n  A standard button measures 75px wide and 23px tall, with a raised outer and inner border. They are given 12px of horizontal padding by default.\n    When buttons are clicked, the raised borders become sunken. The following button is simulated to be in the pressed (active) state.\n    Disabled buttons maintain the same raised border, but have a &#34;washed out&#34; appearance in their label.\n    Button focus is communicated with a dotted border, set 4px within the contents of the button. The following example is simulated to be focused.\n  Checkboxes are represented with a sunken panel, populated with a &#34;check&#34; icon when selected, next to a label indicating the choice.\n  Note: You  must include a corresponding label  after your checkbox, using the  &lt;label&gt; element with a  for attribute pointed at the  id of your input. This ensures the checkbox is easy to use with assistive technologies, on top of ensuring a good user experience for all (navigating with the tab key, being able to click the entire label to select the box).\n      When grouping inputs, wrap each input in a container with the  field-row class. This ensures a consistent spacing between inputs.\n  An  option button, also referred to as a radio button, represents a single choice within a limited set of mutually exclusive choices. That is, the user can choose only one set of options.\n    Option buttons can be grouped by specifying a shared  name attribute on each input. Just as before: when grouping inputs, wrap each input in a container with the  field-row class to ensure a consistent spacing between inputs.\n      Peanut butter should be smooth       I understand why people like crunchy peanut butter       Crunchy peanut butter is good\n  You create the tabs, you would use a  section class=&#34;tabs&#34; then for the tab titles you use a  label class=&#34;tab.title&#34; and the content for each tab by using an  article class=&#34;tab-content&#34; element.\n  To mark a tab as visible, add the  .active class to the  .tab-title and the  .tab-content either statically in your HTML or dynamically using JavaScript. Don&#39;t forget to remove it from the other tabs when you&#39;re changing it!\n      Tab 1   Tab 2   Tab 3     Tab Content    You create the tabs, you would use a  section class=&#34;tabs&#34;  then for the tab titles you use a  label class=&#34;tab.title&#34;  and the content for each tab by using an  article class=&#34;tab-content&#34;  element.     To mark a tab as visible, add the  .active  class to the  .tab-title  and the  .tab-content  either statically in your HTML or dynamically using JavaScript. Don&#39;t forget to remove it from the other tabs when you&#39;re changing it!        More...   This tab contains a GroupBox     Today&#39;s mood       Claire Saffitz         Brad Leone         Chris Morocco         Carla Lalli Music           Tab 3   Lorem Ipsum Dolor Sit\n  A  group box is a special control you can use to organize a set of controls. A group box is a rectangular frame with an optional label that surrounds a set of controls.\n  A group box can be used by wrapping your elements with the  fieldset tag. It contains a sunken outer border and a raised inner border, resembling an engraved box around your controls.\n    You can provide your group with a label by placing a  legend element within the  fieldset.\n  A  text box (also referred to as an edit control) is a rectangular control where the user enters or edits text. It can be defined to support a single line or multiple lines of text.\n  Text boxes can rendered by specifying a  text type on an  input element. As with checkboxes and radio buttons, you should provide a corresponding label with a properly set  for attribute, and wrap both in a container with the  field-row class.\n    Additionally, you can make use of the  field-row-stacked class to position your label above the input instead of beside it.\n  A  slider, sometimes called a trackbar control, consists of a bar that defines the extent or range of the adjustment and an indicator that shows the current value for the control...\n      You can make use of the  has-box-indicator class replace the default indicator with a box indicator, furthermore the slider can be wrapped with a  div using  is-vertical to display the input vertically.\n  Note: To change the length of a vertical slider, the  input width and  div height.\n  A  drop-down list box allows the selection of only a single item from a list. In its closed state, the control displays the current value for the control. The user opens the list to change the value.\n    5 - Incredible!   4 - Great!   3 - Pretty good   2 - Not so great   1 - Unfortunate\n  By default, the first option will be selected. You can change this by giving one of your  option elements the  selected attribute.\n  5 - Incredible!   4 - Great!   3 - Pretty good   2 - Not so great   1 - Unfortunate\n      At the top edge of the window, inside its border, is the title bar (also reffered to as the caption or caption bar), which extends across the width of the window. The title bar identifies the contents of the window.\n  Include command buttons associated with the common commands of the primary window in the title bar. These buttons act as shortcuts to specific window commands.\n  You can build a complete title bar by making use of three classes,  title-bar,  title-bar-text, and  title-bar-controls.\n    We make use of  aria-label to render the Close button, to let assistive technologies know the intent of this button. You may also use &#34;Minimize&#34; and &#34;Maximize&#34; like so:\n  To give our title bar a home, we make use of the  window class. This provides a raised outer and inner border, as well as some padding. We can freely resize the window by specifying a width in the container style.\n    To draw the contents of the window, we use the  window-body class under the title bar.\n    Microsoft\u276eR\u276f Windows DOS \u276eC\u276f Copyright Microsoft Corp 1990-2001.  C:\\WINDOWS\\SYSTEM32&gt; You can build a command line easily with a window and pre tag\n      Command Prompt                    Microsoft &amp;#10094;R &amp;#10095; Windows DOS  &amp;#10094;C &amp;#10095; Copyright Microsoft Corp 1990-2001.  C: &amp;#92;WINDOWS &amp;#92;SYSTEM32&gt; You can build a command line easily with a window and pre tag\n  A Window With Tabs and Groups                      Music   Dogs   Food     Set your listening preferences     Today&#39;s mood       Nicki Minaj         Bell Towers         The Glamorous Monique         EN. V         Reset Alarm...   Try this to get some attention                You create the content for each tab by using an  article  tag.             OK   Cancel\n  A  tree view control is a special list box control that displays a set of objects as an indented outline based on their logical hierarchical relationship.\n  To render a tree view, use an  ul element with the  tree-view class. The children of this list ( li elements), can contain whatever you&#39;d like.\n    To make this a tree, we can nest further  ul elements (no class needed on these). This will provide them with a nice dotted border and indentation to illustrate the structure of the tree.\n    Table of Contents   What is web development?    CSS    Selectors   Specificity   Properties           JavaScript     Avoid at all costs       Unless     Avoid       At     Avoid   At   All   Cost         All   Cost               HTML   Special Thanks\n      Refer to  the GitHub issues page to see bugs in my CSS or report new ones. Also check the  issues for 98.css.\n  XP.css started as a fork of  98.css (a fun project started by  Jordan Scales) and is now trying to boilerplate the GUI to be able to theme it easily.   If you want to make a theme or contribute i&#39;d love to see where you can take this!\n  Hopefully you&#39;ve enjoyed this project! \ud83c\udf78 Consider  starring/following along on GitHub and following me on  Twitter.", "posttime": "2020-05-17 05:00:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,css", "title": "XP.css-\u7528\u4e8e\u6784\u5efaGUI\u7684Windows XP CSS\u6587\u4ef6\u548c\u6846\u67b6", "title_en": "XP.css \u2013 Windows XP CSS file and framework for building GUIs", "transed": 1, "url": "https://botoxparty.github.io/XP.css/", "via": "", "real_tags": ["windows", "css"]}, {"category": "", "categoryclass": "", "imagename": "14a6d11e0e49572ccd576da5162faeec.png", "infoid": 1002443, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Pontiff\u505a\u4e86\u4e00\u4e2a\u6838\u5fc3\u5047\u8bbe/\u5f3a\u52a0\uff1a\u4e00\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u6587\u4ef6\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5b83\u81ea\u52a8\u89e3\u6790\u6784\u5efa\u987a\u5e8f\uff0c\u5e76\u884c\u6784\u5efa\uff0c\u83b7\u53d6\u548c\u6c99\u7bb1\u6240\u6709\u4f9d\u8d56\u9879\u6700\u7ec8\u5c06\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u4f9d\u8d56\u9879\u7248\u672c\u7ea6\u675f\u5b83\u8fd8\u5c06\u63a7\u5236\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\uff0c\u5141\u8bb8\u8de8\u5e73\u53f0\u548c\u6240\u6709\u65f6\u95f4\u7684\u53ef\u91cd\u590d\u6784\u5efa\u3002\nPontiff\u76ee\u524d\u6b63\u5728\u5185\u90e8\u5f00\u53d1\u4e2d\uff0c\u76f4\u5230\u5b83\u7684\u529f\u80fd\u96c6\u548c\u63a5\u53e3\u88ab\u9501\u5b9a\uff0cPull\u8bf7\u6c42\u5c06\u88ab\u793c\u8c8c\u5730\u62d2\u7edd\uff0c\u901a\u8fc7\u95ee\u9898\u63d0\u51fa\u7684\u529f\u80fd\u8bf7\u6c42\u5c06\u88ab\u8003\u8651\u3002\u975e\u5e38\u611f\u8c22\u9519\u8bef\u62a5\u544a\u3002\u6211\u7684\u76ee\u6807\u662f\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u5f00\u53d1Pontiff\uff0c\u53ef\u4ee5\u8de8Pontiff\u6587\u4ef6\u7248\u672c\u8fdb\u884c\u529f\u80fd\u8fc1\u79fb\uff0c\u4f46\u662f\u5982\u679c\u6211\u7834\u574f\u4e86\u60a8\u7684\u9879\u76ee\uff0c\u8bf7\u968f\u610f\u5728#FICE ON FREENODE\u4e2d\u5bf9\u6211(Alicemaz)\u5927\u558a\u5927\u53eb\u3002\n\u76ee\u524d\uff0cPontiff\u5728Linux(\u53ef\u80fd\u8fd8\u6709BSD\uff1f)\u4e0a\u5de5\u4f5c\u3002\u5e76\u4e14\u9700\u8981lang lld\u548cgit\u2018\u6211\u5f88\u5feb\u5c31\u4f1a\u652f\u6301GCC\u548cgnu ld\u3002\u6211\u4f1a\u652f\u6301SVN\uff0c\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u652f\u6301\u3002\u6211\u60f3\u652f\u6301pijul\u5982\u679c\u4ec5\u4ec5\u51fa\u4e8e\u7f8e\u5b66\u539f\u56e0\uff0c\u6211\u53ef\u80fd\u4f1a\u5728\u67d0\u4e00\u5929\u52c9\u5f3a\u652f\u6301Windows\uff0c\u4f46\u4e0d\u4f1a\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u7684\u4efb\u4f55\u65f6\u5019\u5f15\u5bfc\u811a\u672c\u5728ArchLInux\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u9664\u975e\u60a8\u5c06FICE-CSI\u522b\u540d\u4e3aCSI\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4fee\u590d\u65b9\u6cd5\u3002\n\u4f9d\u8d56\u5173\u7cfb\u5fc5\u987b\u901a\u8fc7\u5b58\u50a8\u5e93\u548c\u76ee\u5f55\u5bf9\u8c61\u6307\u5b9a\u4e3a\u957f\u683c\u5f0f\uff0c\u4f46\u8fd9\u5e94\u8be5\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u56e0\u4e3a\u9664\u4e86\u6211\u4e4b\u5916\uff0c\u6ca1\u6709\u4eba\u5f88\u5feb\u53d1\u5e03\u8fc7PIOTFF\u9879\u76ee\u3002\u6211\u5f88\u5feb\u5c31\u4f1a\u6709\u4e00\u4e2a\u57fa\u672c\u89e3\u6790\u5668\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7b26\u53f7\uff0c\u7136\u540e\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8f6c\u6362\u4e3a\u56de\u8d2d\u3002\u6700\u7ec8\uff0c\u6211\u4f1a\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u53d1\u5e03\u7248\u672c\u5316\u7684tarball\uff0c\u5e76\u5141\u8bb8\u534a\u4e2a\u6a21\u5f0f(\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f)\u5c06\u5b83\u4eec\u62c9\u4e0b\u3002\n\u8981\u5f00\u59cb\uff0c\u8bf7\u8fd0\u884cbootstrap.scm\u3002\u5b83\u5c06\u6784\u5efa\u4e00\u4e2a\u6700\u5c0f\u53ef\u884cPontiff\uff0c\u7136\u540e\u4f7f\u7528\u8be5Pontiff\u6b63\u786e\u6784\u5efaPINTIFF\u5b83\u8c03\u7528\u9e21\u8089-\u5b89\u88c5-s\uff0c\u56e0\u6b64\u5982\u679c\u4ece\u90a3\u91cc\u8c03\u7528\u4e86\u60a8\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\uff0c\u8bf7\u5c0f\u5fc3\uff0c\u5c06\u751f\u6210\u7684(\u9759\u6001\u94fe\u63a5\u7684)PANTIFF\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5165\u67d0\u4e2a\u8def\u5f84PATH\u65b0\u7684[\u9879\u76ee\u540d]\u5c06\u521b\u5efa\u4e00\u4e2ahello world\u9879\u76ee\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u53ef\u6267\u884c\u7684Pontiff Build\u548cPontiff run\u3002\u6b63\u5982\u60a8\u6240\u671f\u671b\u7684\uff0c\u6211\u6700\u7ec8\u4f1a\u6709\u66f4\u591a\u5173\u4e8ePontiff.ix\u6587\u4ef6\u7684kawaii\u6587\u6863\uff0c\u4f46\u662f\u5b83\u7684\u7c7b\u578b\u89c4\u8303\u53ef\u80fd\u662f\u76f8\u5f53\u53ef\u8bfb\u7684\u3002\n\u8bb0\u4f4f\uff0c\u6587\u4ef6\u662f\u6a21\u5757\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6a21\u5757\u7684\u8def\u5f84\u552f\u4e00\u5730\u786e\u5b9a\u5176\u540d\u79f0\uff1asrc/a/b/c.scm\u5fc5\u987b\u662f\u5305\u542b\u4e00\u4e2a\u4e14\u53ea\u5305\u542b\u4e00\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\uff0c\u540d\u4e3aa.bc\u3002\u6709\u4e9b\u4e1c\u897f\u6211\u4eec\u662f\u6545\u610f\u4e0d\u652f\u6301\u7684(\u6bd4\u5982\u51fd\u6570\u5668\uff1b\u671f\u671b\u8868\u683c\u4e2d\u7684\u7c7b\u578b\u7c7b\u7cfb\u7edf\u8fdf\u65e9\u4f1a\u51fa\u73b0\uff01)\u3002\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u80fd\u4f7f\u7528\u5b8f\u6765\u6270\u4e71\u5bfc\u5165\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5728\u7f16\u8bd1\u4e4b\u524d\u5bf9\u5b83\u4eec\u8fdb\u884c\u89e3\u6790\uff0c\u4ee5\u4fbf\u5bf9\u6a21\u5757\u8fdb\u884c\u6392\u5e8f\u3002\n\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u91cd\u8981\u7684\u8f6f\u4ef6\u7248\u672c\uff0c\u8fd8\u6709\u66f4\u591a\u7248\u672c\u5373\u5c06\u53d1\u5e03\uff01\u5e0c\u5c14\u592b\u5c06\u4e3b\u8981\u5efa\u7acb\u5728\u54c8\u65af\u514b\u5c14\u8ba1\u5212\u548cAGDA\u8ba1\u5212\u4e4b\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u6211\u4eec\u6240\u80fd\u4e3a\u672a\u6765\u505a\u51fa\u5408\u7406\u7684\u8d21\u732e\u3002", "note_en": "pontiff makes one core assumption/imposition: one module is one file is one compilation unit from this basis, it resolves a build order automatically, builds in parallel, fetches and sandboxes all dependencies eventually pontiff will allow users to specify dependency version constraints it will also control the compiler and runtime, allowing reproducible builds across platforms and for all time\n pontiff is presently under internal development until its featureset and interface are locked down, pull requests will be politely declined feature requests made via issue will be considered. bug reports are appreciated my goal is to develop pontiff in a backward-compatible manner, with functional migrations across pontiff file versions but if I break your project feel free to yell at me (alicemaz) in #chicken on freenode\n presently, pontiff works on linux (and probably bsd?) and requires clang lld and git I&#39;ll support gcc and gnu ld soon. I&#39;ll support svn maybe soon-ish. I&#39;d like to support pijul if only for aesthetic reasons I will probably support windows grudgingly someday but not any time in the near future the bootstrapping script won&#39;t work on archlinux unless you alias chicken-csi to csi but it&#39;s an easy fix\n dependencies must be specified longform via the repository and directory objects but this shouldn&#39;t be much of a problem since no one except me has ever released a pontiff project fairly soon I will have a barebones resolver so you can specify a symbol that will be transformed to a repo by some means eventually I&#39;ll have a way to publish versioned tarballs and allow semver patterns (or something like that) to pull them down\n to get started, run bootstrap.scm. it will build a minimum viable pontiff, then use that to build pontiff properly it invokes  chicken-install -s so be careful if that&#39;s something you dislike from there, put the resulting (statically linked) pontiff binary in PATH somewhere  pontiff new [project name] will create a hello world project with one executable  pontiff build and  pontiff run do what you expect I will have more kawaii documentation on the pontiff.ix file eventually but a fairly readable type spec of it can be found in src/prototype/file.scm\n remember, a file is a module is a compilation unit more specifically, a module&#39;s path uniquely determines its name: src/a/b/c.scm  must be a file containing one and only one module, named a.b.c there are some things we don&#39;t support on purpose (like functors; expect a typeclass system in tabulae sooner or later!) also it is very important that no macros mess with import lists, as we  must parse them  before compilation to sort modules\n this is our first nontrivial software release, with more to come! sylph will mostly be built on scheme haskell and agda and we want to contribute back whatever we reasonably can here&#39;s to the future", "posttime": "2020-05-17 05:00:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba1\u5212,haskell,pontiff", "title": "Pontiff\uff1a\u4e00\u79cdHaskell\u5f0f\u7684\u9e21\u8ba1\u5212\u6784\u5efa\u7cfb\u7edf", "title_en": "Pontiff: A haskell-style build system for Chicken Scheme", "transed": 1, "url": "https://github.com/sylphbio/pontiff", "via": "", "real_tags": ["\u8ba1\u5212", "haskell", "pontiff"]}, {"category": "", "categoryclass": "", "imagename": "c10321a74beaec2f442fa95738aa2911.jpg", "infoid": 1002442, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e7f\u6cdb\u4f7f\u7528\u7684JavaScript\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u65f6Node.js\u7684\u5236\u9020\u5546\u53d1\u5e03\u4e86Deno 1.0\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684JavaScript\u548cTypeScript\u8fd0\u884c\u65f6\uff0c\u89e3\u51b3\u4e86Node.js\u4e2d\u7684\u8bbe\u8ba1\u9519\u8bef\u3002\n\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0cNode.js\u7684\u521b\u5efa\u8005Ryan Dahl\u4e00\u76f4\u5728\u5f00\u53d1Deno JavaScript\u9879\u76ee\uff0c\u4ed6\u7684\u8d21\u732e\u8005\u56e2\u961f\u73b0\u5728\u5df2\u7ecf\u53d1\u5e03\u4e86Deno 1.0\uff0c\u8fd9\u5bf9JavaScript\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u53ef\u80fd\u4f1a\u53d8\u5f97\u4e0eNode.js\u4e00\u6837\u91cd\u8981\u3002\nJavaScript\u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\uff0c\u5728\u6bcf\u4e00\u53f0\u6709\u7f51\u7edc\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u4e0a\u90fd\u4f7f\u7528\u5b83\u3002\u5c31\u50cfNode.js\u6216Node\u4e00\u6837\uff0cDeno\u8fd0\u884c\u65f6\u7528\u4e8e\u5728Web\u6d4f\u89c8\u5668\u4e4b\u5916\u6267\u884cJavaScript\u3002\n\u7136\u800c\uff0c\u4e0eNode.js\u4e0d\u540c\u7684\u662f\uff0cDeno\u4e3a\u5fae\u8f6f\u65e5\u76ca\u6d41\u884c\u7684TypeScript\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u652f\u6301\uff0cTypeScript\u662f\u4e3a\u5927\u578b\u9879\u76ee\u8bbe\u8ba1\u7684JavaScript\u8d85\u96c6\u3002\nDeno\u57fa\u4e8eGoogle\u7684Chromium V8 JavaScript\u5f15\u64ce\uff0c\u5e76\u4e14\u662f\u7528Rust\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u4e0d\u662fNode\u7684C++\u3002\n\u9664\u4e86\u4fee\u590dNode.js\u7684\u95ee\u9898\u5916\uff0cDahl\u8fd8\u5e0c\u671bDeno\u80fd\u591f\u8fce\u5408JavaScript\uff0c\u56e0\u4e3a\u4e0e2009\u5e74\u4ed6\u8bbe\u8ba1Node\u65f6\u76f8\u6bd4\uff0cJavaScript\u662f\u4e00\u79cd\u975e\u5e38\u4e0d\u540c\u7684\u8bed\u8a00\u3002\u6b64\u5916\uff0c\u7531\u4e8eNode\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0cNode\u53d8\u5f97\u5f88\u96be\u66f4\u65b0\u3002\n\u968f\u7740JavaScript\u8bed\u8a00\u7684\u4e0d\u65ad\u53d8\u5316\uff0c\u4ee5\u53caTypeScript\u7b49\u65b0\u529f\u80fd\u7684\u52a0\u5165\uff0c\u6784\u5efa\u8282\u70b9\u9879\u76ee\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u9879\u8270\u5de8\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u7ba1\u7406\u6784\u5efa\u7cfb\u7edf\u548c\u5176\u4ed6\u7e41\u91cd\u7684\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u5265\u593a\u4e86\u52a8\u6001\u8bed\u8a00\u811a\u672c\u7f16\u5199\u7684\u4e50\u8da3\uff0c\u8fbe\u5c14\u5728\u7531Deno\u5f00\u53d1\u4eba\u5458Bert Belder\u548cBartek Iwa\u0144czuk\u5171\u540c\u64b0\u5199\u7684\u4e00\u7bc7\u535a\u6587\u4e2d\u5199\u9053\u3002\n\u6b64\u5916\uff0c\u94fe\u63a5\u5230\u5916\u90e8\u5e93\u7684\u673a\u5236\u57fa\u672c\u4e0a\u662f\u901a\u8fc7NPM\u5b58\u50a8\u5e93\u96c6\u4e2d\u8d77\u6765\u7684\uff0c\u8fd9\u4e0d\u7b26\u5408Web\u7684\u7406\u60f3\uff0c\u4ed6\u8865\u5145\u9053\uff0c\u4ed6\u6307\u7684\u662fNode\u7684NPM\u5305\u3002\nDeno\u6838\u5fc3\u662f\u7528Rust\u7f16\u5199\u7684\uff0cDeno 1.0\u7684\u4e3b\u8981\u7ec4\u4ef6\u662fDeno\u547d\u4ee4\u884c\u754c\u9762(CLI)\u3002\nDahl\u8bf4\uff0cDeno\u4e0d\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2a\u94c1\u9508\u677f\u6761\u7bb1\u7684\u96c6\u5408-\u8f6f\u4ef6\u5305\u6216\u8f6f\u4ef6\u5e93-\u5141\u8bb8\u5728\u4e0d\u540c\u7684\u5c42\u8fdb\u884c\u96c6\u6210\u3002\u4f8b\u5982\uff0cDeno\u6838\u5fc3\u673a\u7bb1\u662fDeno\u7684\u6700\u57fa\u672c\u7684\u6846\u67b6\uff0c\u800cRusty_V8\u673a\u7bb1\u63d0\u4f9b\u5230V8\u7684C++\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3(API)\u7684Rust\u7ed1\u5b9a\u3002\n&#34\uff1b\u8be5\u673a\u7bb1\u63d0\u4f9b\u4e86\u5728GitHub Actions CI\u4e2d\u5185\u7f6e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u5b83\u4e5f\u5141\u8bb8\u7528\u6237\u4ece\u5934\u5f00\u59cb\u7f16\u8bd1V8\u5e76\u8c03\u6574\u5176\u8bb8\u591a\u6784\u5efa\u914d\u7f6e\uff0c&#34\uff1bDahl\u5199\u9053\u3002\n&#34\uff1b\u6240\u6709V8\u6e90\u4ee3\u7801\u90fd\u5206\u53d1\u5728\u673a\u7bb1\u4e2d\u3002\u6700\u540e\uff0cRUSTY_V8\u8bd5\u56fe\u6210\u4e3a\u4e00\u4e2a\u5b89\u5168\u7684\u63a5\u53e3\u3002\u73b0\u5728\u8fd8\u4e0d\u662f\u767e\u5206\u4e4b\u767e\u5b89\u5168\uff0c\u4f46\u6211\u4eec\u5feb\u5230\u4e86\u3002\u80fd\u591f\u4ee5\u5b89\u5168\u7684\u65b9\u5f0f\u4e0eV8\u8fd9\u6837\u590d\u6742\u7684\u865a\u62df\u673a\u4ea4\u4e92\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\uff0c\u8fd9\u8ba9\u6211\u4eec\u5728Deno\u672c\u8eab\u53d1\u73b0\u4e86\u8bb8\u591a\u56f0\u96be\u7684\u9519\u8bef\u3002\nDahl\u8fd8\u5f3a\u8c03\uff0cDeno\u4e0d\u662fNode\u7684\u5206\u652f\uff0c\u800c\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u5b9e\u73b0\uff0c\u5c3d\u7ba1\u76ee\u6807\u4e0eNode\u76f8\u4f3c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5b83\u4e5f\u4e0eNPM\u4e0d\u517c\u5bb9\u3002\u7136\u800c\uff0cDahl\u9884\u8ba1Deno\u6700\u7ec8\u5c06\u80fd\u591f\u8fd0\u884c\u66f4\u591a\u5f00\u7bb1\u5373\u7528\u7684Node\u7a0b\u5e8f\u3002\n\u6839\u636eDahl\u7684\u8bf4\u6cd5\uff0cDeno\u5728Web\u670d\u52a1\u5668\u4e0a\u7684\u6027\u80fd\u4e0eNode\u76f8\u5f53\uff0c\u4f46Deno\u7684\u5ef6\u8fdf\u6bd4Node\u66f4\u597d\u3002\nhello-world Deno HTTP\u670d\u52a1\u5668\u6bcf\u79d2\u5904\u7406\u5927\u7ea625k\u4e2a\u8bf7\u6c42\uff0c\u6700\u5927\u5ef6\u8fdf\u4e3a1.3\u6beb\u79d2\u3002\u4ed6\u6307\u51fa\uff0c\u4e00\u4e2a\u7c7b\u4f3c\u7684Node\u7a0b\u5e8f\u6bcf\u79d2\u5904\u740634k\u4e2a\u8bf7\u6c42\uff0c\u6700\u5927\u5ef6\u8fdf\u57282\u5230300\u6beb\u79d2\u4e4b\u95f4\u76f8\u5f53\u4e0d\u7a33\u5b9a\u3002", "note_en": "The makers of the widely used JavaScript server-side runtime, Node.js, have released Deno 1.0, a new runtime for JavaScript and TypeScript that addresses &#34;design mistakes&#34; in Node.js.\n The Deno JavaScript project has been under development by Node.js creator Ryan Dahl for the past two years and his team of contributors has now released Deno 1.0, which could become just as important for JavaScript developers as Node.js.\n    JavaScript is one of the most widely used programming languages, and it&#39;s employed on every device with a web browser. Just like Node.js or Node, the Deno runtime is for executing JavaScript outside a web browser.\n  However, unlike Node.js, Deno offers first-class support for\u00a0 Microsoft&#39;s increasingly popular Typescript, a superset of JavaScript designed for large projects.\n   Deno is based on Google&#39;s Chromium V8 JavaScript engine and written in programming language Rust as opposed to C++ for Node.\n Besides fixing problems with Node.js, Dahl also wanted Deno to cater for JavaScript being a very different language today than it was in 2009, when he designed Node. Additionally, because of Node&#39;s wide use, Node has become difficult to update.\n   &#34;With the changing JavaScript language, and new additions like TypeScript, building Node projects can become an arduous endeavor, involving managing build systems and other heavy-handed tooling that takes away from the fun of dynamic language scripting,&#34;  writes Dahl in a blogpost\u00a0co-authored by fellow Deno developers Bert Belder and Bartek Iwa\u0144czuk.\n &#34;Furthermore the mechanism for linking to external libraries is fundamentally centralized through the NPM repository, which is not in line with the ideals of the web,&#34; he adds, referring to Node&#39;s NPM packages.\n The Deno core is written in Rust, and Deno 1.0&#39;s main component is the Deno command line interface (CLI).\n Dahl says Deno is not a monolithic program, but rather a collection of Rust &#34;crates&#34; \u2013 packages or software libraries \u2013 that allow integration at different layers. For example, the Deno core crate is the &#34;very bare bones&#34; of Deno, while the rusty_v8 crate provides Rust bindings to V8&#39;s C++ application programming interface (API).\n &#34;The crate provides binaries that are built in GitHub Actions CI, but it also allows users to compile V8 from scratch and adjust its many build configurations,&#34; Dahl writes.\n &#34;All the V8 source code is distributed in the crate itself. Finally rusty_v8 attempts to be a safe interface. It&#39;s not yet 100% safe, but we&#39;re getting close. Being able to interact with a VM as complex as V8 in a safe way is quite amazing and has allowed us to discover many difficult bugs in Deno itself.&#34;\n  Dahl also stresses that Deno is not a fork of Node, but a completely new implementation, albeit with similar goals to Node. It&#39;s also not, in general, compatible with NPM. However Dahl expects Deno will eventually be able to run more Node programs out of the box.\n Deno&#39;s performance on web server is about equal to Node, according to Dahl, but Deno has better latency than Node.\n &#34;A hello-world Deno HTTP server does about 25k requests per second with a max latency of 1.3 milliseconds. A comparable Node program does 34k requests per second with a rather erratic max latency between 2 and 300 milliseconds,&#34; he notes.", "posttime": "2020-05-17 04:45:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,\u8bbe\u8ba1,\u5f00\u53d1,runtime,js", "title": "\u9488\u5bf9Node.js\u4e2d\u7684\u201c\u8bbe\u8ba1\u9519\u8bef\u201d\uff0c\u5176\u5f00\u53d1\u4eba\u5458\u53d1\u5e03\u4e86JS/Tyescript Runtime Deno 1.0", "title_en": "Addressing 'Design Mistakes' in Node.js, Its Developers Release JS/TypeScript Runtime Deno 1.0", "transed": 1, "url": "https://www.zdnet.com/article/deno-1-0-node-js-makers-have-new-javascript-runtime-for-typescript-programming-language/", "via": "", "real_tags": ["\u53d1\u5e03", "\u8bbe\u8ba1", "\u5f00\u53d1", "runtime", "js"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002441, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u6211\u8bfb\u4e86\u5f88\u591a\u5173\u4e8e\u94c1\u9508\u7684\u4e66\u3002\u51e0\u5929\u524d\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4e9b\u7528Rust\u7f16\u5199\u7684\u5e38\u89c1POSIX\u547d\u4ee4\u884c\u5de5\u5177\u66ff\u4ee3\u5de5\u5177\u3002\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u5728\u67d0\u4e9b\u65b9\u9762\u90fd\u66f4\u597d\u3002", "note_en": "I\u2019ve been reading a lot about  Rust lately. A few days ago I came across a bunch of common POSIX command line tool replacements written in Rust. Most of them are better in some way.", "posttime": "2020-05-17 04:44:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,nix,\u547d\u4ee4\u884c", "title": "\u7528Rust\u7f16\u5199\u7684\u5e38\u89c1*nix\u547d\u4ee4", "title_en": "Common *nix commands written in Rust", "transed": 1, "url": "https://gcollazo.com/common-nix-commands-written-in-rust/", "via": "", "real_tags": ["rust", "nix", "\u547d\u4ee4\u884c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002440, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56fe\u5f62\u4ea4\u6362\u683c\u5f0f(GIF)\u5df2\u670930\u591a\u5e74\u7684\u5386\u53f2\uff0c\u4f46\u5b83\u662f\u7f51\u7edc\u6587\u5316\u4e2d\u65e0\u5904\u4e0d\u5728\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u4f7f\u7528GIF\u6765\u4fdd\u5b58\u77ed\u7684\u3001\u65e0\u58f0\u7684\u548c\u5faa\u73af\u7684\u89c6\u9891\uff0c\u8fd9\u4e9b\u89c6\u9891\u7ecf\u5e38\u6210\u4e3a\u6a21\u56e0\u3002\u5b58\u5728\u521b\u5efa\u548c\u5171\u4eab\u5b83\u4eec\u7684\u5b9e\u4f53\u670d\u52a1\uff0c\u8bb8\u591a\u667a\u80fd\u624b\u673a\u952e\u76d8\u90fd\u6709\u5185\u7f6e\u7684GIF\u652f\u6301\u3002\n\u8fd9\u4e5f\u5f88\u5bb9\u6613\u5c06\u5b83\u4eec\u5d4c\u5165\u5230\u5177\u6709\u7b80\u5355\u56fe\u50cf\u6807\u7b7e\u7684\u7f51\u7ad9\u4e2d\u3002\u4f46GetGIF\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff1a\u5e9e\u5927\u7684\u6587\u4ef6\u5927\u5c0f\u3002\u4e00\u4e2aGIF\u53ef\u4ee5\u6bd4\u4e00\u4e2a\u5178\u578b\u7684\u7f51\u7ad9(\u8d85\u8fc72MB)\u66f4\u5927\u3002\n\u6211\u4e0d\u5728\u4e4e\u4efb\u4f55\u4e1c\u897f\u662f\u8bbe\u8ba1\u7528\u6765\u505a\u4ec0\u4e48\u7684\u3002\u6211\u5728\u4e4e\u5b83\u80fd\u505a\u4ec0\u4e48\u3002\nGIF\u4ece\u6765\u6ca1\u6709\u88ab\u8bbe\u8ba1\u6210\u63d0\u4f9b\u5b8c\u6574\u7684\u89c6\u9891\u3002\u51e0\u4e4e\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\uff0cSteveWilhite\u8bbe\u8ba1\u4e86\u8fd9\u79cd\u683c\u5f0f\u6765\u89e3\u51b3\u6709\u6548\u5730\u4e3a\u7b80\u5355\u56fe\u50cf\u63d0\u4f9b\u670d\u52a1\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u5929\u6c14\u56fe\u548c\u5176\u4ed6\u56fe\u5f62\u3002\nGIF\u4e2d\u7684\u6bcf\u4e2a\u56fe\u50cf\u90fd\u88ab\u9650\u5236\u4e3a256\u8272\u7684\u8c03\u8272\u677f\u3002\u56fe\u50cf\u4e5f\u662f\u4f7f\u7528LZW\u65e0\u635f\u538b\u7f29\u7684\uff0c\u8fd9\u4e9b\u56e0\u7d20\u4f7f\u5f97GIF\u6210\u4e3a\u56fe\u5f62\u800c\u4e0d\u662f\u50cf\u7167\u7247\u8fd9\u6837\u7684\u56fe\u50cf\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u540e\u8005\u6709\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u66f4\u9002\u5408\u50cfJPEG\u8fd9\u6837\u7684\u683c\u5f0f\u3002\nGIF\u8fd8\u5141\u8bb8\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b58\u50a8\u591a\u4e2a\u56fe\u50cf\u3002\u8fd9\u4e00\u4e8b\u5b9e\u4f7f\u5f97\u65b0\u7684GIF\u89c4\u8303(GIF89a)\u5f88\u5bb9\u6613\u589e\u52a0\u56fe\u50cf\u4e4b\u95f4\u7684\u65f6\u95f4\u5ef6\u8fdf\u9009\u9879\uff0c\u5c06\u5b83\u4eec\u53d8\u6210\u52a8\u753b\u7684\u5e27\u3002\n\u8be5\u89c4\u8303\u8fd8\u5141\u8bb8\u4f7f\u7528\u79f0\u4e3a\u5e94\u7528\u6269\u5c55\u5757\u7684\u7a7a\u95f4\u3002Netscape Navigatorv2.0\u5229\u7528\u8fd9\u4e2a\u7a7a\u95f4\u5141\u8bb8GIF\u521b\u5efa\u8005\u6307\u5b9aGIF\u5e94\u8be5\u5faa\u73af\u4e00\u5b9a\u6b21\u6570\u6216\u65e0\u9650\u671f\u5faa\u73af\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\u4eca\u5929\u901a\u5e38\u770b\u5230\u7684GIF\u3002\n\u7136\u800c\uff0cGIF\u73b0\u5728\u7684\u5927\u5c0f\u5f80\u5f80\u662f\u51e0\u5146\u5b57\u8282\uff0c\u56e0\u4e3a\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u5b83\u4eec\u6765\u663e\u793a\u7531\u5927\u91cf\u7ec6\u8282\u56fe\u50cf\u7ec4\u6210\u7684\u89c6\u9891\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u65e0\u635f\u538b\u7f29\u7684\u3002\u6b64\u5916\uff0cGIF\u4e0d\u5728\u5e27\u4e4b\u95f4\u8fdb\u884c\u4efb\u4f55\u538b\u7f29\uff0c\u8fd9\u662f\u5178\u578b\u89c6\u9891\u538b\u7f29\u6280\u672f\u7684\u57fa\u672c\u57fa\u7840\u3002\u56e0\u4e3aGIF\u4e0d\u4f1a\u5229\u7528\u8fd9\u79cd\u4fe1\u606f\u5197\u4f59\uff0c\u6240\u4ee5\u8fd9\u79cd\u683c\u5f0f\u662f\u4e00\u79cd\u975e\u5e38\u4f4e\u6548\u7684\u89c6\u9891\u670d\u52a1\u65b9\u5f0f\u3002\n\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u4e00\u79cd\u5b9e\u9645\u4e0a\u662f\u4e3a\u89c6\u9891\u670d\u52a1\u800c\u8bbe\u8ba1\u7684\u683c\u5f0f\uff0c\u5982MP4\u6216WebM\u3002\u5f53Twitter\u57282014\u5e74\u589e\u52a0\u5bf9GIF\u7684\u652f\u6301\u65f6\uff0c\u4ed6\u4eec\u901a\u8fc7\u5c06\u4e0a\u4f20\u7684GIF\u8f6c\u6362\u6210\u89c6\u9891\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002\u540c\u5e74\uff0cImgur\u5f00\u59cb\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\n\u73b0\u5728\u7528HTML Videoelement\u63d0\u4f9b\u89c6\u9891\u800c\u4e0d\u662fGIF\u5f88\u5bb9\u6613\uff0c\u51e0\u4e4e\u6240\u6709\u4eba\u90fd\u652f\u6301\u5b83\uff0c\u4f46\u662f\u4f7f\u7528\u89c6\u9891\u6807\u7b7e\u800c\u4e0d\u662f\u56fe\u50cf\u6807\u7b7e\u8981\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002\u8981\u63d0\u4f9b\u76f8\u5f53\u4e8eGIF\u7684\u89c6\u9891\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6807\u8bb0\uff1a\n&lt\uff1b\u89c6\u9891\u81ea\u52a8\u64ad\u653e\u5faa\u73af\u9759\u97f3\u64ad\u653e&lt\uff1bvideo/webm&34\uff1b\uff1btype=&#34\uff1bvideo/WebM&34\uff1b&gt\uff1b&lt\uff1bsource src=&#34\uff1bdyning-baby.mp4&34\uff1btype=&#34\uff1bvideo/mp4&34\uff1b&gt\uff1b&lt\uff1bp&gt\uff1b\u60a8\u7684\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u6b64\u5d4c\u5165\u5f0f\u3002\n\u4f7f\u7528\u81ea\u52a8\u64ad\u653e\u3001\u5faa\u73af\u548c\u9759\u97f3\u5c5e\u6027\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e0e\u6211\u4eec\u4eceGIF\u4e2d\u671f\u671b\u7684\u76f8\u540c\u7684\u884c\u4e3a\u3002\n\u5143\u7d20\u5c06\u52a0\u8f7d\u6d4f\u89c8\u5668\u652f\u6301\u7684\u7b2c\u4e00\u4e2a\u6e90\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6d4f\u89c8\u5668\u65e0\u6cd5\u64ad\u653eWebM\u89c6\u9891\uff0c\u5b83\u5c06\u5c1d\u8bd5\u64ad\u653eMP4\u7248\u672c\u3002\n\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5907\u7528\u6d88\u606f\uff0c\u4ee5\u9632\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u89c6\u9891\u5143\u7d20\u3002\u8fd9\u4e0e\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u4efb\u4f55\u6765\u6e90\u7684\u60c5\u51b5\u4e0d\u540c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5143\u7d20\u4f1a\u6fc0\u53d1\u4e00\u4e2a\u9519\u8bef\u4e8b\u4ef6\u3002\n\u6211\u4eec\u4e0d\u5fc5\u4e3a\u6bcf\u4e2a\u6e90\u63d0\u4f9bMIMEtype\uff0c\u4f46\u8fd9\u6837\u505a\u53ef\u80fd\u4f1a\u5141\u8bb8\u6d4f\u89c8\u5668\u4fdd\u5b58\u7f51\u7edc\u8bf7\u6c42\u3002\u5982\u679c\u5b83\u65e0\u6cd5\u5904\u7406\u8be5\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u79fb\u5230\u4e0b\u4e00\u4e2a\u6e90\uff0c\u800c\u4e0d\u662f\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u3002\n\u7528\u6237\u7684\u7535\u6e90\u8bbe\u7f6e\u4e5f\u4f1a\u5f71\u54cd\u89c6\u9891\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7528\u6237\u6253\u5f00\u4e86\u4f4e\u529f\u7387\u6a21\u5f0f\uff0c\u5219\u89c6\u9891\u4e0d\u4f1a\u5728iOS\u4e0a\u81ea\u52a8\u64ad\u653e\u3002\u76f8\u53cd\uff0c\u7528\u6237\u5e94\u8be5\u770b\u5230\u63a7\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u624b\u52a8\u64ad\u653e\u89c6\u9891\u3002\n\u867d\u7136\u63d0\u4f9b\u89c6\u9891\u670d\u52a1\u4e0d\u50cf\u63d0\u4f9bGIF\u670d\u52a1\u90a3\u6837\u7b80\u5355\uff0c\u4f46\u6587\u4ef6\u5927\u5c0f\u7684\u8282\u7701\u53ef\u80fd\u662f\u5de8\u5927\u7684\u3002\u4e0b\u9762\u7684\u89c6\u9891\u5927\u5c0f\u4e3a103KB\uff0c\u800c\u6211\u8f6c\u6362\u5b83\u7684GIF\u4e3a4.1MB\u3002\u90a3\u662f\u5c3a\u5bf8\u7f29\u5c0f\u4e8697%\u4ee5\u4e0a\u3002\n\u4e3a\u4e86\u5feb\u901f\u5c06GIF\u8f6c\u6362\u6210\u89c6\u9891\uff0c\u6709\u5f88\u591a\u7f51\u7ad9\u53ef\u4ee5\u8ba9\u4f60\u4e00\u6b21\u6027\u8f6c\u6362\u3002\n\u8981\u5728MacOS\u4e2d\u622a\u53d6\u89c6\u9891\u622a\u56fe\uff0c\u6211\u4f7f\u7528\u7684\u662fKap\u3002\u652f\u6301\u5c06\u89c6\u9891\u4fdd\u5b58\u4e3aGIF\u3001MP4\u3001WebM\u6216APNG\u6587\u4ef6\u3002QuickTime\u8fd8\u652f\u6301\u5c4f\u5e55\u5f55\u5236\u3002\n\u5982\u679c\u4f60\u4f7f\u7528Imgur\uff0c\u6211\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u4e0a\u4f20MP4\u540e\u7684\u89c6\u9891\u8d28\u91cf\u5f88\u5dee\u3002\u539f\u56e0\u4f3c\u4e4e\u662f\u4ed6\u4eec\u88ab\u91cd\u65b0\u538b\u7f29\u4e86\uff0c\u6240\u4ee5\u81f3\u5c11\u5bf9Imgur\u6765\u8bf4\uff0c\u4e0a\u4f20\u4e00\u4e2aGIF\u6587\u4ef6\u8ba9\u4ed6\u4eec\u8d1f\u8d23\u5c06\u5176\u8f6c\u6362\u6210\u89c6\u9891\u4f1a\u66f4\u597d\u3002\n\u6700\u540e\u4e00\u70b9\u6ce8\u610f\uff1a\u6839\u636eWilhite\u7684\u8bf4\u6cd5\uff0cgif\u7684\u53d1\u97f3\u662f\u67d4\u548c\u7684\u201cG\u201d\uff0c\u5c31\u50cf\u201cjif\u201d\u4e00\u6837\u3002\u8fd9\u4e3a\u6211\u89e3\u51b3\u4e86\u8fd9\u573a\u6c38\u65e0\u6b62\u5883\u7684\u8fa9\u8bba\u3002", "note_en": "The Graphics Interchange Format ( GIF) isover 30 years old but is a pervasive part of internet culture. We use GIFs toserve short, silent, and looping videos, which frequently become memes.  Entireservices exist to create and share them, and manysmartphone keyboards have built-in GIF support.\n It&#39;s also easy to embed them into websites with simple image tags. YetGIFs have a significant drawback: massive file sizes. A single GIF can be largerthan a typical website ( over 2MB).\n   I don&#39;t care what anything was  designed to do. I care about what it  can do.\n GIFs  were neverdesignedto serve full videos. Almost to the contrary,  SteveWilhite designed the format tosolve the problem of efficiently serving simple images, like weather maps andother graphics.\n Each image in a GIF is limited to a color pallete of 256 colors. Images are also losslessly compressedusing  LZW.These factors made GIF a good choice for graphics rather than images likephotographs, which have much more detail and are better suited for a format like JPEG.\n GIF also allowed for storing more than one image in a file. This fact made iteasy for a new GIF specification (GIF89a) to add the option for time delaysbetween images, turning them into frames of an animation.\n The specification also allows for a space called the application extensionblock.  Netscape Navigatorv2.0 used this space to allow GIF creators to specify that a GIF should loop acertain number of times or indefinitely. This gave us the GIF as we commonly seeit today.\n However, GIFs tend to be several megabytes in size now because we frequently usethem to display videos comprised of images with a lot of detail. Remember thateach one is losslessly compressed. Furthermore, GIF doesn&#39;t do any compressionbetween frames, a basic foundation of typical  videocompression techniques.Frames of a video tend to be fairly similar. Because GIFs don&#39;t exploit thisinformation redundancy, the format is a very inefficient way to serve videos.\n The solution is to use a format that&#39;s actually designed to serve videos, like MP4 or WebM. Many services do this transparently.When Twitter  added GIFsupportin 2014, they implemented the fetaure by converting uploaded GIFs into videos toserve instead. Imgur  started doing the samething the same year.\n  Serving videos instead of GIFs is easy to do now with the HTML  videoelement, whichis supported  almost universally, but it doestake more work to use a video tag rather than an image tag. To serve the videoequivalent of a GIF, we can use markup like this:\n &lt; video  autoplay  loop  muted  playsinline&gt; &lt; source  src = &#34;dancing-baby.webm&#34;  type = &#34;video/webm&#34;&gt; &lt; source  src = &#34;dancing-baby.mp4&#34;  type = &#34;video/mp4&#34;&gt; &lt; p&gt;Your browser doesn&#39;t support this embedded video.&lt;/ p&gt;&lt;/ video&gt;\n Using the  autoplay,  loop, and  muted attributes gives us the same behaviorthat we expect from a GIF.\n  The element will load the  firstsourcethat the browser supports. In this case, if the browser can&#39;t play WebM videos,it will try to play the MP4 version instead.\n We also provide a fallback message in case the browser doesn&#39;t support the videoelement. This is distinct from the case where the browser doesn&#39;t support any ofthe sources. In that case, the element fires an error event.\n We don&#39;t have to provide the  MIMEtypefor each source, but doing so might allow the browser to  save a networkrequest.If it can&#39;t handle the type, it can move on to the next source rather thanmaking a request to the server.\n Video behavior can also be affected by the user&#39;s power settings. For example,videos won&#39;t autoplay on iOS if the user has  low powermode on. Instead, the user should seethe controls and can manually play the video.\n While serving a video is not as straightforward as serving a GIF, the file sizesavings can be tremendous. The following video is 103 KB in size, compared to4.1 MB for the GIF that I converted it from. That&#39;s a size reduction of over97%.\n   To quickly convert a GIF into a video, there are plenty of websites that let you do a one-off conversion.\n   To take video screenshots in macOS, I use  Kap. It supportssaving the videos as GIF, MP4, WebM, or APNG files. QuickTime also  supports screenrecordings.\n If you use  Imgur, one issue that I&#39;ve experienced is poorvideo quality after uploading MP4s. The reason seems to be that  they getrecompressed.So at least for Imgur, it&#39;s better to upload a GIF and let them take care ofconverting it into a video.\n One final note:  according toWilhite, GIF  ispronouncedwith a soft \u201cG,\u201d like \u201cjif.\u201d That settles the  never-endingdebatefor me.", "posttime": "2020-05-17 04:44:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u4f9b,videos,gif", "title": "\u63d0\u4f9b\u89c6\u9891\u800c\u4e0d\u662fGIF", "title_en": "Serve Videos Instead of GIFs", "transed": 1, "url": "https://www.dannyguo.com/blog/serve-videos-instead-of-gifs/", "via": "", "real_tags": ["\u63d0\u4f9b", "videos", "gif"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002438, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u540d\u5b57\u662fJesse\uff0c\u8fd9\u662f\u4e00\u4e2a\u9762\u5411\u559c\u6b22\u5728\u5b9e\u8df5\u4e2d\u5b66\u4e60\u7684\u5f00\u53d1\u4eba\u5458\u7684Rust\u5165\u95e8\u6559\u7a0b\u3002\n\u672c\u6559\u7a0b\u7684\u76ee\u7684\u662f\u53d1\u5c55\u5bf9Rust\u4e2d\u7684\u5de5\u5177\u6784\u5efa\u7684\u76f4\u89c9-\u5177\u4f53\u5730\u8bf4\uff0c\u5b66\u4e60\u5982\u4f55\u5728Rust\u4e2d\u601d\u8003\u548c\u6784\u5efa\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u751f\u4ea7\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684\u547d\u4ee4\u884c\u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u5c06\u5305\u542b\u6807\u9898\u548c\u6bb5\u843d\u7684\u57fa\u672cMarkdown\u6587\u6863\u8f6c\u6362\u4e3ahtml\u6587\u4ef6\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4ece\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u201cHello\uff0cWorld\uff01\u201d\u5f00\u59cb\u3002\u53ef\u6267\u884c\u7684\u3002\u7136\u540e\uff0c\u5728\u516d\u7ae0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fed\u4ee3\u548c\u5c55\u5f00\uff0c\u76f4\u5230\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684Markdown\u6587\u4ef6\u7f16\u8bd1\u6210\u6709\u6548\u7684HTML\u3002\n\u94c1\u9508\u9700\u8981\u4e00\u79cd\u4e0e\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u4e60\u60ef\u7684\u4e0d\u540c\u7684\u5fc3\u6001\u3002\u901a\u8fc7\u9996\u5148\u4e13\u6ce8\u4e8e\u57f9\u517b\u81ea\u4fe1\uff0c\u53ef\u4ee5\u51cf\u8f7b\u5b66\u4e60\u9508\u5e26\u6765\u7684\u8bb8\u591a\u6700\u521d\u7684\u75db\u82e6\u548c\u632b\u6298\u611f\u3002\u8fd9\u5c31\u662f\u672c\u6559\u7a0b\u7684\u76ee\u7684\uff1a\u5efa\u7acb\u4fe1\u5fc3\u3002\n\u5f53\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u94c1\u9508\u7684\u65f6\u5019\uff0c\u6211\u53ea\u80fd\u5446\u4e0a\u51e0\u4e2a\u661f\u671f\uff0c\u7136\u540e\u6211\u7684\u632b\u6298\u611f\u5c31\u4f1a\u538b\u5012\u6211\uff0c\u6211\u4e0d\u5f97\u4e0d\u653e\u5f03\u5b83\u4e00\u6bb5\u65f6\u95f4\u3002\u6700\u540e\uff0c\u6211\u4f1a\u56de\u5230\u94c1\u9508\uff0c\u518d\u7ecf\u5386\u51e0\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u65f6\u523b\uff0c\u7136\u540e\u518d\u6b21\u611f\u5230\u6cae\u4e27\uff0c\u4f11\u606f\u4e00\u4e0b\u3002\u8fd9\u4e2a\u5faa\u73af\u8fd8\u4f1a\u6301\u7eed\u5927\u7ea6\u56db\u6b21\uff0c\u76f4\u5230\u6700\u540e\u6211\u5750\u4e0b\u6765\uff0c\u62ff\u7740\u7eb8\u548c\u7b14\uff0c\u51c6\u786e\u5730\u5199\u4e0b\u4e86\u5230\u5e95\u662f\u4ec0\u4e48\u540c\u65f6\u56f0\u6270\u7740\u6211\uff0c\u5e76\u5438\u5f15\u6211\u53bb\u9508\u3002\n\u6211\u5f97\u51fa\u7684\u7ed3\u8bba\u53ef\u80fd\u4e0d\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\uff1aRust\u5b66\u4e60\u8d77\u6765\u5f88\u6cae\u4e27\uff0c\u56e0\u4e3a\u5728\u5904\u7406\u7f16\u7a0b\u95ee\u9898\u65f6\u9700\u8981\u4e0d\u540c\u7684\u601d\u7ef4\u6a21\u5f0f\u3002\u6211\u4e0d\u80fd\u505a\u6211\u4eceC\u5230C++\u3001C++\u5230PHP\u3001C++\u5230Java\uff0c\u6216\u8005\u6211\u719f\u6089\u7684\u5176\u4ed6\u5927\u7ea630\u79cd\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u65f6\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u5c06\u65b0\u8bed\u8a00\u7684\u4efb\u4f55\u53e5\u6cd5\u5dee\u5f02\u6070\u597d\u9002\u5408\u4e8e\u6211\u73b0\u6709\u7684\u6846\u67b6\uff0c\u5373\u4e00\u79cd\u8bed\u8a00\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u5e94\u8be5\u662f\u4ec0\u4e48\u611f\u89c9\u3002\u62c9\u65af\u7279\u8981\u6c42\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u8981\u6709\u4e00\u4e2a\u6e05\u767d\u7684\u5386\u53f2\u3002\n\u4f5c\u4e3a\u4e00\u540d\u6559\u7a0b\u4f5c\u8005\uff0c\u6211\u60f3\u5199\u4e00\u7bc7\u5173\u4e8eRust\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u4ee5\u4fbf\u8ba9\u5176\u4ed6\u8bed\u8a00\u7684\u5f00\u53d1\u4eba\u5458\u5c3d\u53ef\u80fd\u5feb\u5730\u4e0a\u624b--\u4f46\u6211\u4e0d\u60f3\u50cf\u5176\u4ed6Rust\u6559\u7a0b\u4e00\u6837\uff0c\u53ea\u6df1\u5165\u5230\u5b83\u7684\u4e00\u4e9b\u7ec6\u8282\u90e8\u5206\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u90e8\u5206\u662f\u57fa\u7840\u7684\uff0c\u4f46\u5bf9\u4e8e\u4efb\u4f55\u60f3\u8981\u5b66\u4e60\u50cfRust\u8fd9\u6837\u72ec\u7279\u7684\u65b0\u8bed\u8a00\u7684\u4eba\u6765\u8bf4\uff0c\u90fd\u662f\u4ee4\u4eba\u4e0d\u5feb\u7684\u3002\n\u4e0d\u53ea\u662f\u6211\u6709\u8fd9\u4e2a\u987e\u8651\u3002\u5728\u4e00\u9879\u5bf96000\u540dRust\u7528\u6237\u7684\u8c03\u67e5\u4e2d\uff0c\u8fd125%\u7684\u4eba\u8868\u793a\uff0c\u8fd9\u79cd\u8bed\u8a00\u592a\u96be\u6216\u592a\u96be\u5b66\u4e86\uff0c\u6240\u6709\u7528\u6237\u90fd\u8bf4\u6700\u96be\u5b66\u7684\u4e24\u4e2a\u9886\u57df\u662f\u7ec8\u8eab\u548c\u6240\u6709\u6743/\u501f\u9605\u7cfb\u7edf\u3002\u5982\u679c\u6211\u8981\u5199\u4e00\u7bc7\u80fd\u8ba9\u4eba\u4eec\u5bf9\u94c1\u9508\u611f\u5230\u5174\u594b\u7684\u6559\u7a0b\uff0c\u6211\u77e5\u9053\u5728\u5904\u7406\u8fd9\u4e9b\u590d\u6742\u7684\u4e3b\u9898\u4e4b\u524d\uff0c\u6211\u5fc5\u987b\u4e13\u6ce8\u4e8e\u5efa\u7acb\u4fe1\u5fc3\u3002\u5728\u6211\u770b\u6765\uff0c\u4e00\u65e6\u4e00\u4e2a\u4eba\u5bf9\u8fd9\u95e8\u8bed\u8a00\u7684\u4fe1\u5fc3\u8db3\u591f\u9ad8\uff0c\u89e3\u51b3\u751f\u547d\u5468\u671f\u548c\u6240\u6709\u6743\u7b49\u95ee\u9898\u5c06\u662f\u4ed6\u4eec\u5b66\u4e60\u7684\u4e00\u4e2a\u81ea\u7136\u8fc7\u7a0b\u3002\n\u82b1\u70b9\u65f6\u95f4\u590d\u4e60\u4e00\u4e0b\u5b66\u4e60\u76ee\u6807(\u4e0b\u9762)\uff0c\u7136\u540e\u8f6c\u5230\u7b2c\u4e00\u7ae0\u3002\n\u5728\u60a8\u7684\u5de5\u4f5c\u7ad9\u4e0a\u5b89\u88c5\u94c1\u9508\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u5b89\u88c5\u94c1\u9508\uff0c\u60a8\u53ef\u4ee5\u5b8c\u6210\u672c\u6559\u7a0b\u3002\nRust\u5bf9\u6211\u7684\u4e3b\u8981\u5438\u5f15\u529b\u5728\u4e8e\uff0c\u6211\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u50cfC\u8fd9\u6837\u7684\u4f4e\u7ea7\u8bed\u8a00\uff0c\u5e76\u62e5\u6709\u9ad8\u7ea7\u8bed\u8a00\u7684\u4e00\u4e9b\u66f4\u5177\u8868\u73b0\u529b\u7684\u5143\u7d20\u548c\u5b58\u50a8\u5b89\u5168\u6027\u3002\u8fd9\u51e0\u4e4e\u5c31\u50cf\u662f\u4e00\u79cd\u5168\u65b0\u7684\u601d\u8003\u8f6f\u4ef6\u5de5\u7a0b\u95ee\u9898\u7684\u65b9\u5f0f\u3002\u4e8b\u5b9e\u4e0a\uff0cRust\u5904\u7406\u53d8\u91cf\u7b26\u53f7\u7684\u65b9\u5f0f\uff0c\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4ee5\u53ca\u4ece\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u662f\u601d\u8003\u6211\u4eec\u6b63\u5728\u6784\u5efa\u7684\u5de5\u5177\u7684\u4e00\u79cd\u6709\u70b9\u72ec\u7279\u7684\u65b9\u5f0f\u3002\n\u55ef\uff0c\u5c31\u50cf\u5171\u540c\u6838\u5fc3\u7684\u51fa\u73b0\u6539\u53d8\u4e86\u6211\u4eec\u6559\u6388\u6570\u5b66\u7684\u65b9\u5f0f\u4e00\u6837\uff0c\u6709\u4e9b\u4eba\u975e\u5e38(\u6709\u65f6\u662f\u6709\u6bd2\u7684)\u6279\u8bc4Rust\u5982\u4f55\u8feb\u4f7f\u6211\u4eec\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u4e8b\u7269\u3002\u4f46\u662f\uff0c\u6bcf\u79cd\u8bed\u8a00\u90fd\u6709\u4f18\u7f3a\u70b9\uff0c\u8003\u8651\u5230\u60a8\u6b63\u5728\u6784\u5efa\u7684\u662f\u4ec0\u4e48\u4ee5\u53ca\u60a8\u559c\u6b22\u5982\u4f55\u5bf9\u60a8\u7684\u95ee\u9898\u8fdb\u884c\u5fc3\u7406\u5efa\u6a21\uff0c\u60a8\u771f\u7684\u8981\u627e\u51fa\u54ea\u79cd\u8bed\u8a00\u6700\u6709\u610f\u4e49\u3002\n\u6211\u5efa\u8bae\u4f60\u4e0d\u8981\u6389\u8fdb\u8fd9\u4e9b\u201c\u94c1\u9508\u6bd4\u5b83\u597d\u201d\u6216\u201c\u94c1\u9508\u5438\u529b\u56e0\u4e3a\u201d\u7684\u5154\u5b50\u6d1e\u91cc\u3002\u6211\u4eec\u90fd\u662f\u5de5\u7a0b\u5e08\uff0c\u5de5\u7a0b\u5e08\u4f7f\u7528\u5de5\u5177\u3002\u6211\u4eec\u5e94\u8be5\u6b22\u8fce\u65b0\u7684\u65b9\u5f0f\u6765\u601d\u8003\u6211\u4eec\u591a\u5e74\u6765\u4e00\u76f4\u5728\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6700\u7ec8\u6211\u4eec\u4f1a\u627e\u5230\u66f4\u597d\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u5b83\u4eec\u3002\n\u5f62\u6210\u4f60\u81ea\u5df1\u7684\u89c2\u70b9\u3002\u5de5\u5177\u5e94\u8be5\u662f\u6709\u8da3\u7684\u3001\u5f15\u4eba\u5165\u80dc\u7684\uff0c\u800c\u4e0d\u662f\u8bfd\u8c24\u7684\u8c08\u8bdd\u70b9\u3002\n\u6211\u7684\u7cfb\u5217\u6559\u7a0b\u7684\u8bbe\u8ba1\u4e0d\u540c\u4e8e\u6211\u6240\u89c1\u8fc7\u7684\u4efb\u4f55\u5173\u4e8e\u94c1\u9508\u7684\u4e1c\u897f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u81ea\u5b66\u6210\u624d\u7684\u4eba\uff0c\u6211\u5199\u8fd9\u4e9b\u6559\u7a0b\u7684\u65b9\u5f0f\u4f1a\u5e2e\u52a9\u6211\u83b7\u5f97\u57fa\u672c\u7684\u81ea\u4fe1\uff0c\u90a3\u5c31\u662f\u6211\u4ece\u6765\u6ca1\u6709\u5728\u7f51\u4e0a\u9605\u8bfb\u8fc7\u4f20\u7edf\u4e66\u7c4d\u548c\u6d41\u884c\u7684\u5165\u95e8\u6559\u7a0b\u3002\u94c1\u9508\u9700\u8981\u4e0d\u540c\u7684\u5fc3\u6001\uff0c\u662f\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u4f5c\u4e3a\u94c1\u9508\u6559\u5e08\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u628a\u94c1\u9508\u7684\u6240\u6709\u6df1\u5965\u77e5\u8bc6\u9884\u5148\u88c5\u5165\u65e8\u5728\u6e29\u548c\u5730\u5c06\u67d0\u4eba\u4ecb\u7ecd\u5230\u8fd9\u95e8\u8bed\u8a00\u7684\u6559\u7a0b\u4e2d\u3002\n\u5b98\u65b9\u7684\u201c\u94c1\u9508\u201d\u4e00\u4e66\u5f88\u68d2\u3002\u5965\u83b1\u5229\u7684\u4e66\u5f88\u68d2\u3002\u4e5f\u6709\u5f88\u591a\u5f88\u68d2\u7684\u6559\u7a0b\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u559c\u6b22\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u8bed\u8a00\uff0c\u8fd9\u662f\u6f5c\u5fc3\u94bb\u7814\u548c\u6784\u5efa\u5de5\u5177\u6240\u5fc5\u9700\u7684\u601d\u7ef4\u6a21\u5f0f\u3002\u6bd5\u7adf\uff0cRUST\u662f\u4e00\u79cd\u7cfb\u7edf\u8bed\u8a00\uff0c\u800c\u5de5\u5177\u6784\u5efa\u662f\u6df1\u5165\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u62e5\u6709\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u5e76\u884c\u76ee\u6807(\u6784\u5efatinymarkdown\u7f16\u8bd1\u5668)\u53ef\u4ee5\u4e3a\u6211\u4eec\u6b63\u5728\u5b66\u4e60\u548c\u5e94\u7528\u7684\u5185\u5bb9\u63d0\u4f9b\u4e00\u4e9b\u57fa\u7840\u4fe1\u5fc3\u3002\n\u8fd9\u662f\u5b66\u4e60\u751f\u9508\u7684\u4e00\u79cd\u72ec\u7279\u65b9\u5f0f\uff0c\u8fd9\u4e00\u70b9\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4e5f\u5e0c\u671b\u6211\u80fd\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5b66\u4e60\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u672c\u8bfe\u7a0b\u5e76\u4e0d\u662f\u8981\u8ba9\u4f60\u719f\u6089Rustper se\uff1b\u6211\u5728Rust\u7684\u65b0\u624b\u8eab\u4e0a\u770b\u5230\u7684\u95ee\u9898\u662f\uff0c\u8981\u5b66\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u592a\u5feb\u4e86\uff0c\u800c\u4e14\u5728\u201c\u4f60\u597d\uff0c\u4e16\u754c\uff01\u201d\u4e4b\u540e\uff0c\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u8db3\u591f\u7684\u56de\u62a5\u3002\u6765\u8bc1\u660e\u7559\u5728\u8fd9\u91cc\u662f\u6b63\u5f53\u7684\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570Rust\u6559\u7a0b\u5e76\u6ca1\u6709\u544a\u8bc9\u4eba\u4eecRust\u5bf9\u4e8e\u6784\u5efa\u5de5\u5177\u662f\u591a\u4e48\u6709\u8da3\uff0c\u800c\u662f\u8fc7\u4e8e\u5173\u6ce8Rust\u7684\u72ec\u7279\u529f\u80fd\u3002\u8fd9\u4e9b\u6559\u7a0b\u4ecd\u7136\u5f88\u91cd\u8981\uff0c\u4f46\u6211\u8ba4\u4e3a\u5176\u4ed6\u6559\u7a0b-\u90a3\u4e9b\u4e13\u6ce8\u4e8e\u6784\u5efa\u4e1c\u897f\u7684\u6559\u7a0b\uff0c\u5373\u4f7f\u4e0d\u662f\u90a3\u4e48\u590d\u6742-\u4e5f\u5f88\u91cd\u8981\uff0c\u5b83\u4eec\u6709\u52a9\u4e8e\u8d5e\u626c\u4ecd\u7136\u5e74\u8f7b\u7684\u5728\u7ebfRust\u6559\u7a0b\u751f\u6001\u7cfb\u7edf(\u622a\u81f32019\u5e74)\u3002\nMarkdown\u662f\u4e00\u79cd\u7528\u4e8e\u975e\u5e38\u5feb\u901f\u5730\u7f16\u5199HTML\u5185\u5bb9\u7684\u7b80\u7ea6\u8bed\u8a00\u3002\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u7f16\u5199\u57fa\u4e8e\u6587\u672c\u7684\u6587\u6863\uff0c\u8fd9\u4e9b\u6587\u6863\u65e2\u6613\u8bfb\u53c8\u5c0f\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u7f16\u8bd1\u6210Vaid HTML\u3002\u5b83\u4f7f\u8d77\u8349\u3001\u66f4\u65b0\u548c\u53d1\u5e03\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\uff0c\u662f\u7a0b\u5e8f\u5458\u5728\u6240\u6709\u5de5\u4f5c\u9886\u57df\u4e2d\u5e38\u7528\u7684\u5de5\u5177\u3002\nMarkdown\u7f16\u8bd1\u5668\u7684\u5de5\u4f5c\u662f\u5c06\u201cmarkdown\u201d\u5185\u5bb9\u8f6c\u6362\u4e3a\u6709\u6548\u7684HTML\u3002\n#\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u8fd9\u662f\u4e00\u6bb5\u6587\u5b57\u3002\u591a\u6574\u6d01\u554a\uff01\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u5728\u6bb5\u843d\u5757\u5468\u56f4\u653e\u7f6e`&lt\uff1bp&gt\uff1b`\u6807\u7b7e\u5c06\u5176\u8f6c\u6362\u4e3a\u6bb5\u843d\u5757\u3002\n&lt\uff1bh1&gt\uff1b\u8fd9\u662f\u6807\u9898&lt\uff1b/h1&gt\uff1b&lt\uff1bp&gt\uff1b\u8fd9\u662f\u4e00\u6bb5\u6587\u672c\u3002\u591a\u6574\u6d01\u554a\uff01\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u4f7f\u7528&lt\uff1bcode&gt\uff1b&lt\uff1bp&gt\uff1b&lt\uff1b/code&gt\uff1b\u6807\u7b7e\u5c06\u5176\u8f6c\u6362\u4e3a\u6bb5\u843d\u5757\u3002&lt\uff1b/p&gt\uff1b\n\u6211\u4eec\u5728\u672c\u8bfe\u7a0b\u4e2d\u6784\u5efa\u7684\u7f16\u8bd1\u5668\u5c06\u6807\u9898\u6807\u7b7e\u3001\u6bb5\u843d\u5757\u548c\u4ee3\u7801\u7247\u6bb5\u4eceMarkdown\u8f6c\u6362\u4e3a\u6709\u6548\u7684HTML\u3002\n\u6211\u4eec\u672c\u7ae0\u7684\u76ee\u6807\u662f\u57f9\u517b\u5efa\u7acb\u65b0\u7684RustProject\u7684\u4fe1\u5fc3\u3002\n\u6211\u4eec\u5c06\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u6765\u8ddf\u8e2a\u6240\u6709\u6559\u7a0b\u9879\u76ee\u3002\u5728\u6211\u7684\u6559\u7a0b\u4e2d\uff0c\u60a8\u901a\u5e38\u4f1a\u770b\u5230C\uff1a\\RustTutorials\u4f5c\u4e3a\u6211\u4eec\u6240\u6709\u9879\u76ee\u7684\u6839\u6587\u4ef6\u5939\u3002\u968f\u4fbf\u7ed9\u4f60\u7684\u540d\u5b57\u53d6\u4ec0\u4e48\u540d\u5b57\u90fd\u884c\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aTinyMD\u7684Markdown\u7f16\u8bd1\u5668-\u8fd9\u4e5f\u662f\u6211\u62d2\u7edd\u7684Netflix\u8282\u76ee\u7684\u540d\u79f0\uff0c\u8be5\u8282\u76ee\u8bb2\u8ff0\u7684\u662f\u4e00\u53ea\u8fdb\u5165\u533b\u5b66\u9662\u7684\u6709\u77e5\u89c9\u7684\u8718\u86db\u3002\u60a8\u4e0d\u5fc5\u521b\u5efa\u65b0\u76ee\u5f55\uff1b\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u8d27\u7269\u5de5\u5177\u94fe\u3001\u5305\u7ba1\u7406\u5668\u548c\u9879\u76ee\u6784\u5efa\u5de5\u5177\u6765\u521b\u5efa\u65b0\u76ee\u5f55\uff0c\u8fd9\u4e9b\u5de5\u5177\u662f\u5728\u60a8\u5b89\u88c5Rust\u65f6\u968fRust\u7f16\u8bd1\u5668\u4e00\u8d77\u63d0\u4f9b\u7684\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528Cargo\u5de5\u5177\u67e5\u770b\u6b64\u9879\u76ee\u548cRust\u4e2d\u7684\u6240\u6709\u9879\u76ee\uff0c\u4f20\u9012\u65b0\u53c2\u6570\u5e76\u6307\u5b9a\u6211\u4eec\u9700\u8981\u7684\u5185\u5bb9\uff1a\n\u547d\u4ee4Cargo new\u6784\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c--bin\u6807\u5fd7\u544a\u8bc9Cargo\u8be5\u9879\u76ee\u5c06\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6(\u79f0\u4e3atinymd)\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5e93\u3002\u6211\u5c06\u5728\u4e0d\u540c\u7684\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u5e93\u548c\u5305\u7cfb\u7edf\uff0c\u4f46\u73b0\u5728\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3aNPM\u3001Rubygems\u6216\u4efb\u4f55\u5176\u4ed6\u5305\u7cfb\u7edf\u3002\n\u4e00\u65e6\u60a8\u8fd0\u884c\u4e86Cargo new\u547d\u4ee4\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u786e\u8ba4\u8be5\u9879\u76ee\u5df2\u6b63\u786e\u642d\u5efa\u7684\u6d88\u606f\uff1a\n\u542f\u52a8\u65b0\u7684Rust\u9879\u76ee\u540e\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u5e76\u6253\u5f00\u8be5\u9879\u76ee\u7684\u6839\u6587\u4ef6\u5939\u3002\n\u4f7f\u7528\u60a8\u559c\u6b22\u7684\u7f16\u8f91\u5668\u6253\u5f00\u540d\u4e3atinyms\u7684\u65b0\u6587\u4ef6\u5939\u3002\u5982\u679c\u60a8\u50cf\u6211\u4e00\u6837\u4f7f\u7528VS Code\uff0c\u60a8\u901a\u5e38\u53ef\u4ee5\u952e\u5165\uff1a\nCargo.toml\u6587\u4ef6\uff0c\u5b83\u662f\u6e05\u5355\u6587\u4ef6\u3002\u8fd9\u662f\u9879\u76ee\u914d\u7f6e\u548c\u4f9d\u8d56\u9879\u811a\u672c\u3002\u8fd9\u7c7b\u4f3c\u4e8eRuby\u4e2d\u7684Gemfile\u6216Node\u4e2d\u7684Package.json\u3002\n\u6bcf\u5f53\u6211\u4eec\u521b\u5efa\u8fd9\u6837\u7684\u65b0\u9879\u76ee\u65f6\uff0cRust\u90fd\u4f1a\u4e3a\u6211\u4eec\u63d2\u5165\u4e00\u4e9b\u9ed8\u8ba4\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u201cHello\uff0cworld\uff01\u201d\u7a0b\u5e8f\u3002\n\u901a\u8fc7\u67e5\u770bmain.rs\u6587\u4ef6\u4e2d\u9884\u6253\u5305\u7684\u865a\u62df\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u76f4\u89c2\u5730\u4e86\u89e3Rust\u7684\u8bed\u6cd5\uff1a\n\u6b63\u5982\u60a8\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u7684\u90a3\u6837\uff1a\u8fd9\u770b\u8d77\u6765\u5f88\u50cfC\uff1b\u51fd\u6570\u662f\u7528fn\u58f0\u660e\u7684\uff1bprintf\u7b49\u6548\u9879\u662fprintln\uff01\uff0c\u5b83\u662f\u4e00\u4e2a\u5b8f\uff0c\u800c\u4e0d\u662f\u51fd\u6570\uff1b\u8fd9\u4e2a\u7a0b\u5e8f\u53ea\u505a\u6253\u5370\u547d\u4ee4\u884c\u7684&#34\uff1bHello\uff0cworld\uff01&#34\uff1b\u3002\nRust\u4e2d\u7684\u5b8f\u5c01\u88c5\u4ee3\u7801\u5e76\u4ee5\u5f00\u53d1\u4eba\u5458\u53cb\u597d\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u6559\u7a0b\u4e2d\u53ea\u7528\u5230\u5c11\u6570\u51e0\u4e2a\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7Rust\u63d0\u4f9b\u7684\u3002\u5b8f\u4f7f\u63d0\u4f9b\u8fa9\u8bba\u5de5\u5177\u53d8\u5f97\u5f88\u5bb9\u6613\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u66f4\u6d41\u7545\u3001\u66f4\u6613\u8bfb\u7684\u4ee3\u7801\uff0c\u76ee\u524d\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u8d85\u7ea7\u51fd\u6570\u3002\n\u6211\u4e2a\u4eba\u4e0d\u559c\u6b22\u65b0\u7684Rust\u7a0b\u5e8f\u5458\u4ece\u4e00\u5f00\u59cb\u5c31\u5fc5\u987b\u5904\u7406\u5b8f\uff0c\u4f46\u8fd9\u53ea\u662fRust\u771f\u6b63\u6210\u4e3a\u4e00\u79cd\u72ec\u7279\u7684\u7f16\u7a0b\u4f53\u9a8c\u7684\u65b9\u5f0f\u4e4b\u4e00\u3002\n\u5728\u6211\u4eec\u672a\u96e8\u7ef8\u7f2a\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u628a\u8fd9\u4e2a\u9879\u76ee\u5efa\u8d77\u6765\u3002\u6253\u5f00\u60a8\u7684\u7ec8\u7aef(\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fVS Code\uff0c\u53ef\u4ee5\u901a\u8fc7\u952e\u5165Ctrl+`\u4f7f\u7528\u96c6\u6210\u7ec8\u7aef)\uff0c\u7136\u540e\u8f93\u5165Cargo Build\uff1a\n$Cargo\u7f16\u8bd1tinymd v0.1.0(C\uff1a\\RustTutorials\\tinymd)\u57281.19s$\u4e2d\u5b8c\u6210\u4e86dev[\u672a\u4f18\u5316+\u8c03\u8bd5\u4fe1\u606f]\u76ee\u6807\n\u60a8\u53ef\u4ee5\u770b\u5230\uff0cBuild\u547d\u4ee4\u5728\u6784\u5efa\u9879\u76ee\u4e4b\u524d\u9996\u5148\u5bf9\u5176\u8fdb\u884c\u7f16\u8bd1\u3002\u90a3\u91cc\u7684\u5176\u4ed6\u4e1c\u897f-dev[\u672a\u4f18\u5316+debuginfo]-\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u7f16\u8bd1\u548c\u6784\u5efa\u8fd9\u4e2a\u9879\u76ee\u53ea\u662f\u4e3a\u4e86dev\u76ee\u7684\u3002\u4ee3\u7801\u6ca1\u6709\u4f18\u5316\uff0c\u5e76\u4e14\u5b58\u5728\u6211\u4eec\u901a\u5e38\u4e0d\u4f1a\u4fdd\u7559\u5728\u53d1\u5e03\u7248\u672c\u4e2d\u7684\u8c03\u8bd5\u7b26\u53f7\u3002dev\u76ee\u6807\u662fCargo\u6784\u5efa\u547d\u4ee4\u7684\u9ed8\u8ba4\u76ee\u6807\uff0c\u76f8\u5f53\u4e8eDebugbuild(\u5728\u5177\u6709Debug\u6216Release\u6784\u5efa\u7684\u8303\u4f8b\u4e2d)\u3002\n\u9ed8\u8ba4\u7684\u8d27\u7269\u6784\u5efa\u975e\u5e38\u9002\u5408\u5b66\u4e60Rust\uff0c\u5e76\u4e14\u5c06\u662f\u6211\u4eec\u6784\u5efa\u6240\u6709Rust\u9879\u76ee\u7684\u65b9\u5f0f\u3002\u5b83\u8d1f\u8d23\u4f9d\u8d56\u9879\u7ba1\u7406\u548c\u68c0\u67e5\uff0c\u5e76\u4e3a\u6211\u4eec\u63d0\u4f9b\u7f16\u8bd1\u5668(Rustc)\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u7ad9\u5f0f\u5730\u5904\u7406\u6211\u4eec\u7684\u4ee3\u7801\u3002\n\u6b64\u65f6\uff0c\u60a8\u5e94\u8be5\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\u770b\u5230\u4e00\u4e2a\u540d\u4e3atarget\u7684\u65b0\u76ee\u5f55\u3002\u5b83\u662f\u901a\u8fc7\u4f7f\u7528CARADE BUILD\u547d\u4ee4\u7684defaulttarget\u521b\u5efa\u7684\uff0c\u5373Debug\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u627e\u5230\u9879\u76ee\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u6211\u4eec\u5c06\u7ecf\u5e38\u4f7f\u7528\u7684\u7b2c\u4e09\u4e2aCargo\u547d\u4ee4\u662fCargo Run\uff0c\u8fd9\u662f\u6211\u4eec\u5c06\u5982\u4f55\u8fd0\u884c\u6211\u4eec\u7684\u9879\u76ee\u6784\u5efa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\n$Cargo\u5728\u8fd0\u884c`target\\debug\\tinymd.exe`Hello\uff0cworld\uff01$\u540e\uff0c\u57280.00s\u5185\u5b8c\u6210\u4e86dev[\u672a\u4f18\u5316+\u8c03\u8bd5\u4fe1\u606f]\u76ee\u6807\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u9012\u9879\u76ee\u540d\u79f0\uff1bRust\u5c06\u6839\u636e\u53d1\u5e03\u76ee\u6807\u6267\u884c\u9002\u5f53\u7684.exe\u6587\u4ef6\uff0c\u4ece\u800c\u4e3a\u6211\u4eec\u63a8\u65ad\u51fa\u8fd9\u4e00\u70b9\u3002\n\u5982\u679c\u4f60\u770b\u5230\u201c\u4f60\u597d\uff0c\u4e16\u754c\uff01\u201d\u5728\u60a8\u7684\u7ec8\u7aef\uff0c\u7136\u540e\u795d\u8d3a\u60a8\uff1a\u60a8\u5df2\u7ecf\u5efa\u7acb\u4e86\u60a8\u7684\u7b2c\u4e00\u4e2a\u94c1\u9508\u7a0b\u5e8f\uff01\n\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u7814\u7a76Rust\u8bed\u8a00\uff0c\u5e76\u5f00\u59cb\u5b9a\u5236\u6211\u4eec\u7684markdown\u7f16\u8bd1\u5668\uff0c\u4f7f\u5176\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5b9e\u9645\u7684\u7a0b\u5e8f\u3002\n\u5982\u679c\u60a8\u5bf9\u672c\u7ae0\u6709\u4efb\u4f55\u610f\u89c1\u3001\u62c5\u5fe7\u6216\u6295\u8bc9\uff0c\u8bf7\u5411\u6211\u53d1\u9001\u4e00\u4e9b\u53cd\u9988\u3002\n\u672c\u7ae0\u7684\u76ee\u6807\u662f\u57f9\u517b\u5b66\u751f\u5bf9Rust\u4e2d\u7684\u57fa\u672c\u51fd\u6570\u548c\u53d8\u91cf\u7684\u4fe1\u5fc3\u3002\n\u6211\u4eec\u9879\u76ee\u7684\u6240\u6709\u6e90\u6587\u4ef6\u90fd\u4f4d\u4e8esrc\u76ee\u5f55\u4e2d\uff0c\u4e3a\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u5c06main.rs\u6587\u4ef6\u7528\u4e8e\u6211\u4eec\u7684markdown\u7f16\u8bd1\u5668\u3002\n\u63d0\u4f9b\u7684Hello World\u793a\u4f8b\u4ee3\u7801\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5f00\u59cb\u5b9a\u5236\u9879\u76ee\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002\u5728\u672c\u7ae0\u7ed3\u675f\u65f6\uff0c\u4e0d\u5e26\u53c2\u6570\u6267\u884c\u6211\u4eec\u7684\u4ee3\u7801\u5c06\u8f93\u51fa\u4e00\u4e2a\u6a2a\u5e45-\u4e00\u5c0f\u6bb5\u6587\u672c\uff0c\u5305\u62ec\u7a0b\u5e8f\u540d\u79f0\u3001\u4f5c\u8005\u3001\u7b80\u77ed\u63cf\u8ff0\u548c\u7528\u6cd5\u793a\u4f8b\u3002\n\u6b63\u5982\u60a8\u4ecemain()\u51fd\u6570\u4e2d\u770b\u5230\u7684\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u6216\u53c2\u6570\u7684\u57fa\u672c\u51fd\u6570\u7f16\u5199\u8d77\u6765\u76f8\u5f53\u7b80\u5355\u3002\u8ba9\u6211\u4eec\u7ee7\u7eed\u5728\u6587\u4ef6\u7684\u9876\u90e8\u7f16\u5199\u4e00\u4e2a\u540d\u4e3aUsage()\u7684\u65b0\u51fd\u6570\u3002\u5728\u5b83\u5185\u90e8\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7528\u4e8e\u7f16\u5199&#34\uff1bHello\uff0cworld\uff01&#34\uff1b\u7684\u76f8\u540c\u4ee3\u7801\u6765\u8f93\u51fa\u6211\u4eec\u7684\u5de5\u5177\u7684\u540d\u79f0\u548c\u7b80\u77ed\u63cf\u8ff0\uff1a\nfn\u7528\u6cd5(){println\uff01(&#34\uff1btinymd\uff0c&lt\uff1byour name&gt\uff1b&#34\uff1b)\uff1b\uff1b}fn main(){println\uff01(&#34\uff1bHello\uff0cworld\uff01)\uff1b)\uff1b}\u3002\n\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u8fd9\u6837\u505a\uff0c\u8bf7\u7ee7\u7eed\u7528\u60a8\u7684\u540d\u5b57\u66ff\u6362&lt\uff1b\u60a8\u7684\u540d\u5b57\u3002\n\u8981\u7f16\u8bd1\u5e76\u8fd0\u884c\u5b83\uff0c\u60a8\u53ea\u9700\u8fd0\u884cCargo Run\uff0c\u5982\u679c\u5b83\u68c0\u6d4b\u5230\u60a8\u7684\u6e90\u6587\u4ef6\u4e2d\u6709\u4efb\u4f55\u66f4\u6539\uff0c\u5b83\u5c06\u5728\u573a\u666f\u540e\u9762\u91cd\u65b0\u7f16\u8bd1\u5e76\u91cd\u65b0\u7f16\u8bd1\u60a8\u7684\u9879\u76ee\uff1a\n\u5982\u679c\u60a8\u771f\u7684\u4e0d\u60f3\u67e5\u770b\u9644\u5e26\u7684\u4fe1\u606f(\u5df2\u5b8c\u6210\u7684Devand\u8fd0\u884c\u884c)\uff0c\u60a8\u53ef\u4ee5\u5c06-q\u6807\u5fd7\u4f20\u9012\u7ed9Cargo\uff0c\u5b83\u544a\u8bc9\u5b83\u4fdd\u6301\u5b89\u9759\uff1a\n\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u5c06\u5728\u5bf9\u4ee3\u7801\u8fdb\u884c\u66f4\u6539\u65f6\u7f16\u8bd1\u3001\u6784\u5efa\u548c\u8fd0\u884c\u4ee3\u7801-\u6240\u4ee5\u5f53\u60a8\u770b\u5230-q\u6807\u5fd7\u65f6\u4e0d\u8981\u60ca\u614c\u3002\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5c06\u4e3b\u51fd\u6570\u4e3b\u4f53\u4e2d\u7684Hello World\u884c\u66ff\u6362\u4e3a\u5bf9use()\u7684\u8c03\u7528\uff1a\n\u5e72\u51c0\u5229\u843d\uff01\u4f46\u662f\uff0c\u65e0\u9700\u4e89\u8bba\u3001\u65e0\u9700\u8fd4\u56de\u7684\u529f\u80fd\u51e0\u4e4e\u4e0e\u5145\u6c14\u98de\u9556\u677f\u4e00\u6837\u6709\u7528\u3002\u4e3a\u4e86\u6539\u8fdbuse()\u51fd\u6570\uff0c\u8ba9\u5b83\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5\u5199\u5165\u63a7\u5236\u53f0\u7a97\u53e3\u7684\u7b80\u5355\u503c\u3002\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aget_function()\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u6211\u4eec\u5de5\u5177\u7684\u67d0\u4e2a\u4efb\u610f\u7248\u672c\u53f7\u3002\n\u6211\u4eec\u5728\u524d\u9762\u770b\u5230\uff0c\u6ca1\u6709\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u51fd\u6570\u662f\u8fd9\u6837\u7f16\u5199\u7684\uff1a\n\u5047\u8bbe\u6211\u4eec\u7684\u7248\u672c\u53f7\u662f1000\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u51fd\u6570\u8fd4\u56de\u8be5\u7248\u672c\u53f7\uff0c\u7136\u540e\u5c06\u5176\u6253\u5370\u51fa\u6765\u3002\u56de\u60f3\u4e00\u4e0b\uff0cunsignedinteger\u7684\u8303\u56f4\u662f0\u52302X-1\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5c06\u6570\u5b571000\u5b58\u50a8\u5728\u81f3\u5c1116\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\u4e2d(\u8303\u56f4\u662f0\u523065,535)\u3002\u6211\u4eec\u5728\u201c\u94c1\u9508\u201d\u6742\u5fd7\u4e0a\u7528\u5173\u952e\u8bcdu16\u6765\u8868\u793a\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u5c06\u58f0\u660e\u4e00\u4e2a\u540d\u4e3aget_version\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u5e76\u8fd4\u56desa u16\u3002\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u4f7f\u7528-&gt\uff1b\u7b26\u53f7\u96c6\u6307\u5b9a\u8fd4\u56de\u503c\u3002\n\u8981\u8fd4\u56de\u503c1000\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528return\u5173\u952e\u5b57(\u5b83\u7684\u4f5c\u7528\u4e0e\u542c\u8d77\u6765\u5b8c\u5168\u4e00\u6837)\uff0c\u4e5f\u53ef\u4ee5\u50cfRuby\u90a3\u6837\u53ea\u5199\u6570\u5b57\u3002\n\u5728\u4e0a\u9762\u7684\u4e24\u4e2a\u793a\u4f8b\u4e2d\uff0c\u51fd\u6570\u7684\u8ba1\u7b97\u7ed3\u679c\u90fd\u662f\u6570\u5b571000\u3002\u8fd9\u662f\u56e0\u4e3aRust\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00(\u5c31\u50cfRuby\uff01)\u3002\u5728\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\u4e2d\uff0c\u4e00\u5207\u90fd\u662f\u8868\u8fbe\u5f0f-\u5e76\u4e14\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u662f\u503c\u3002\u8fd9\u610f\u5473\u7740\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u5757\u7684\u8ba1\u7b97\u7ed3\u679c\u662f\u4e00\u4e2a\u503c\u3002\u56e0\u4e3a\u51fd\u6570\u662f\u4e00\u5757\u4ee3\u7801\uff0c\u6240\u4ee5\u51fd\u6570\u7684\u8ba1\u7b97\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u503c\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u4f7f\u7528RETURN\u5173\u952e\u5b57\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5206\u53f7\uff1b\u6570\u5b571001\u672c\u8eab\u5c31\u662f\u5757\u6c42\u503c\u7684\u503c\uff0c\u800cRETURN 1000\uff1b\u662f\u4e00\u6761\u8bed\u53e5-\u5e76\u4e14\u8bed\u53e5\u4ee5\u5206\u53f7\u7ed3\u5c3e\u3002\nRust\u793e\u533a(\u4ee5\u53ca\u5927\u591a\u6570\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00)\u63a5\u53d7\u7684\u65b9\u5f0f\u662f\u53ea\u5bf9\u65e9\u671f\u8fd4\u56de\u4f7f\u7528RETURN\u5173\u952e\u5b57-\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u7279\u5b9a\u5757\u4e2d\u7684\u6700\u540e\u4e00\u6761\u8bed\u53e5\u53ef\u80fd\u4e0d\u662f\u8be5\u5757\u53ef\u4ee5\u8ba1\u7b97\u7684\u552f\u4e00\u503c\u65f6\u4f7f\u7528\u8fd4\u56de\u5173\u952e\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u6839\u636e\u7248\u672c\u53f7\u6253\u5370\u4e00\u4e9b\u8f93\u51fa\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\nfn get_version()-&gt\uff1bu16{let version=1\uff1b//\u4ec5\u4f5c\u4e3a\u793a\u4f8b\uff0c\u5982\u679c\u7248\u672c&lt\uff1b2{\u8fd4\u56de1\uff1b}2}\u3002\n\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u6beb\u65e0\u610f\u4e49\u7684\u4ee3\u7801\u5757\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u5757\u7684\u503c\u5c06\u4e3a1\uff0c\u5e76\u4e14\u5728\u6ee1\u8db3\u611f\u7684if\u8868\u8fbe\u5f0f\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528rereturn\u5173\u952e\u5b57\u6765\u8868\u793a\u63d0\u524d\u8fd4\u56de\u3002\u8fd9\u662f\u63d0\u524d\u8fd4\u56de\uff0c\u56e0\u4e3a\u5757\u901a\u5e38\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a2\uff0c\u4f46\u662f\u5728\u65e9\u671fIF\u68c0\u67e5\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u80fd\u4f1a\u6bd4\u8fd4\u56de2\u65f6\u66f4\u65e9\u5730\u8fd4\u56de\u503c\u3002\n\u8ba9\u6211\u4eec\u901a\u8fc7\u5728Usage()\u7684println\uff01()\u5b8f\u5185\u8c03\u7528\u65b0\u7684get_version()\u51fd\u6570\uff0c\u5c06\u5176\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\uff1a\nfn get_version()-&gt\uff1bu16{1000}fn use(){println\uff01(&#34\uff1btinymd\uff0c&lt\uff1byour name&gt\uff1b&#34\uff1b)\uff1bprintln\uff01(&#34\uff1bversion{}&#34\uff1b\uff0cget_version())\uff1b}fn main(){use()\uff1b}\n\u5728\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5982\u4f55\u5c06\u53c2\u6570\u4f20\u9012\u7ed9println\uff01()\uff0c\u5c31\u50cf\u5728\u53e6\u4e00\u79cd\u8bed\u8a00\u4e2d\u4f20\u9012\u5178\u578b\u7684printf\u51fd\u6570\u4e00\u6837\u3002\u56e0\u4e3aRust\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u5b8f\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u8bc6\u522b\u60a8\u8bd5\u56fe\u6253\u5370\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u6240\u4ee5\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u6307\u5b9a\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u5728C\u7684printf\u51fd\u6570\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528%s\u6765\u8868\u793a\u8981\u6253\u5370\u5b57\u7b26\u6570\u7ec4\u7684\u4f4d\u7f6e\uff1bRust\u53ea\u8981\u6c42\u60a8\u4f7f\u7528{}\uff0c\u800c\u4e0d\u8003\u8651\u53d8\u91cf\u7684\u7c7b\u578b\u3002(\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u6253\u5370\u5b57\u7b26\u4e32\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\uff01)\u3002\n$Cargo\u8fd0\u884c\u7f16\u8bd1tinymd v0.1.0(C\uff1a\\RustTutorials\\tinymd)\u5728\u8fd0\u884c`target\\debug\\tinymd.exe`tinymd(\u7531&lt\uff1byour name&&gt;version 1000\u7f16\u5199\u7684\u6807\u8bb0\u7f16\u8bd1\u5668)\u65f6\uff0c\u57280.63\u79d2\u5185\u5b8c\u6210\u4e86dev[\u672a\u4f18\u5316+debuginfo]\u76ee\u6807\u3002\n\u6b63\u5728\u6253\u5370\u7248\u672c\u6574\u6570(1000)\uff0c\u5e76\u4e14println\uff01\u5b8f\u53ef\u4ee5\u6839\u636eget_version()\u6307\u5b9a\u7684\u8fd4\u56de\u7c7b\u578b\u63a8\u65ad\u5b83\u662f\u4e00\u4e2a\u6574\u6570\u3002\n\u8fd9\u4e00\u7ae0\u6211\u4eec\u5dee\u4e0d\u591a\u8bfb\u5b8c\u4e86\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5bf9Rust\u7684\u51fd\u6570\u8bed\u6cd5\u6709\u4e86\u4fe1\u5fc3\uff0c\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u521b\u5efa\u7b80\u5355\u53d8\u91cf\u5e76\u4e3a\u5176\u8d4b\u503c\u3002\n\u6211\u4eec\u5c06\u5b66\u4e60\u7684\u7b2c\u4e00\u79cd\u53d8\u91cf\u662f\u6574\u6570\u3002\u6240\u6709inRust\u53d8\u91cf\u90fd\u662f\u901a\u8fc7\u5c06\u5b83\u4eec\u7684\u7c7b\u578b\u653e\u5728\u5b83\u4eec\u7684\u540d\u79f0\u540e\u9762\u6765\u58f0\u660e\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u6765\u4fdd\u5b58\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u7248\u672c\uff1a\n\u4ec5\u51fa\u4e8e\u793a\u4f8b\u76ee\u7684\uff0c\u8ba9version\uff1au16\uff1b//i\uff1bm\u4f7f\u7528u16\u3002\u8fd9\u4e5f\u53ef\u80fd\u662f//\u4e00\u67b6U8\u3002\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u53ef\u53d8\u5c3a\u7801\u3002\nRust\u4e2d\u7684\u53d8\u91cf\u662f\u7528let\u5173\u952e\u5b57\u58f0\u660e\u7684\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528\u5192\u53f7(\uff1a)\u6765\u63cf\u8ff0\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u6240\u6709\u53d8\u91cf\u90fd\u9700\u8981\u8fd9\u6837\u58f0\u660e\uff0c\u9664\u975e\u53d8\u91cf\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7(\u6bd4\u65b9\u8bf4)\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6765\u63a8\u65ad\u3002\u8ba9\u6211\u4eec\u7ec3\u4e60\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u58f0\u660e\u53d8\u91cf\u3002\n\u8981\u5c06\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u8ba9\u6211\u4eec\u5728use()\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4e2d\u58f0\u660e\u5b83\u3002\u7136\u540e\uff0c\u4e0d\u662f\u8ba9println\uff01\u4f7f\u7528\u51fd\u6570get_version()\u6765\u6253\u5370\u7248\u672c\uff0c\u800c\u662f\u8ba9\u5b83\u4f7f\u7528\u6211\u4eec\u7684\u5c40\u90e8\u53d8\u91cf\uff1a\nfn get_version()-&gt\uff1bu16{1000}fn use(){let the_version\uff1au16\uff1b//\u58f0\u660e\u6211\u4eec\u7684\u53d8\u91cfthe_version=get_version()\uff1b//\u4e3a\u53d8\u91cfprintln\uff01(&#34\uff1btinymd\uff0c&lt\uff1byour name&gt\uff1b&#34\uff1b)\uff1bprintln\uff01(&#34\uff1bversion{}&#34\uff1b\uff0cthe_version)\uff1b\u8d4b\u503c\u3002//\u6253\u5370\u8d4b\u503c}fn main(){\u7528\u6cd5()\uff1b}\u3002\n\u5982\u60a8\u6240\u89c1\uff0c\u7528println\u4e2d\u7684\u53d8\u91cf\u66ff\u6362\u51fd\u6570\uff01\u662f\u76f8\u5f53\u76f4\u622a\u4e86\u5f53\u7684\u3002\u6b64\u5916\uff0c\u770b\u770b\u6211\u4eec\u5982\u4f55\u58f0\u660e_version\uff0c\u7136\u540e\u5c06\u51fd\u6570\u7684\u503c\u4f20\u9012\u7ed9\u5b83\u3002Rust\u6839\u636e\u6211\u4eec\u7528\u6765\u7ed9\u53d8\u91cf\u8d4b\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6765\u63a8\u65ad\u53d8\u91cfWewant\u7684\u7c7b\u578b\u3002\n\u5982\u679c\u60a8\u5bf9\u672c\u7ae0\u6709\u4efb\u4f55\u610f\u89c1\u3001\u62c5\u5fe7\u6216\u6295\u8bc9\uff0c\u8bf7\u5411\u6211\u53d1\u9001\u4e00\u4e9b\u53cd\u9988\u3002\n\u6211\u4eec\u5728\u672c\u7ae0\u7684\u76ee\u6807\u662f\u57f9\u517b\u5bf9Rust\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u4fe1\u5fc3\u3002\n\u6211\u4eec\u7684\u5c0f\u578b\u6807\u8bb0\u7f16\u8bd1\u5668\u624d\u521a\u521a\u8bde\u751f\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u9879\u76ee\u8bbe\u7f6e\uff0c\u5982\u679c\u6211\u4eec\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8f93\u51fa\u4e00\u4e2a\u6a2a\u5e45--\u4e00\u5757\u6709\u5e2e\u52a9\u7684\u6587\u672c\uff0c\u901a\u5e38\u8bf4\u660e\u7a0b\u5e8f\u662f\u4ec0\u4e48\uff0c\u662f\u8c01\u7f16\u5199\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u5df2\u7ecf\u5c06\u6b64\u6a2a\u5e45\u5305\u88c5\u5728use()\u51fd\u6570\u4e2d\u3002\u5230\u6700\u540e\u4e00\u7ae0\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u8f93\u51fa\u4e86\u7a0b\u5e8f\u7684\u7248\u672c\u3002\n\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4ece\u9879\u76ee\u7684\u6e05\u5355\u6587\u4ef6(Cargo.toml)\u4e2d\u63d0\u53d6\u6570\u636e\u6765\u6539\u8fdb\u6a2a\u5e45\uff0c\u800c\u4e0d\u662f\u5c06\u7248\u672c\u53f7\u7b49\u786c\u7f16\u7801\u5230main.rs\u4e2d\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3Rust\u662f\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u7684\uff0c\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u662f\uff0c\u662f\u4ec0\u4e48\u8ba9Rust\u5b8c\u5168\u4e0d\u540c\u3002\n..", "note_en": "My name is Jesse, and this is an introductory Rust tutorial for developers wholike learning by doing.\n The purpose of this tutorial is to develop intuition abouttoolbuilding in Rust\u2013specifically, to learn how to think and build in Rust.\n Our goal is to produce a very basic command line compiler that will turn abasic Markdown document containing headings and paragraphs into an html file.\n To do this, we will start from scratch by building a simple \u201cHello,World!\u201d executable. Then, over the course of six chapters, iterate and expanduntil finally we can compile a very simple Markdown file into valid HTML.\n   Rust requires a different kind of mindset than most developers aretypically used to. A lot of the initial pains and frustrations with learningRust can be mitigated by focusing on developing confidence first. That\u2019s whatthis tutorial is: a confidence builder.\n When I first picked up Rust, I could only get a few weeks into it before myfrustration would get the best of me and I would have to abandon it for a while.Eventually I would go back to Rust, have a few more \u201ca-ha\u201d moments, then getfrustrated again and take a break. This cycle would continue for about four moretimes until finally I sat down with a pen and paper and wrote down exactly what itwas that kept simultaneously bothering me about and attracting me to Rust.\n What I arrived at was something that will likely not be a surprise to you: Rustwas frustrating to learn because it required a different mental model when approachingprogramming problems. I couldn\u2019t do what I did when going from C to C++, or C++ to PHP,or C++ to Java, or any of the other thirty or so languages I am familiar with, whichwas to just fit whatever syntactical differences the new language had into myexisting framework for what a language should do and how it should feel. Rustrequired, for the most part, a clean slate.\n As a tutorial author, I wanted to write an introductory tutorial on Rust to getdevelopers in other languages up and running as fast as possible\u2013but I didn\u2019twant to be like every other Rust tutorial and just dive into the nitty grittyparts of it that, although foundational, were off-putting to anyone trying tolearn a new language as unique as Rust.\n And it wasn\u2019t just me with this concern. In a survey of 6,000 Rust users,nearly  25% said the languagewas too hard or confusing to learn, with the two largest areas that all users saidwere very difficult being  lifetimes and the  ownership/borrowing system. IfI was going to write a tutorial that would get people excited about Rust, I knewI would have to focus on building confidence  before tackling those complicatedtopics. In my mind, once someone\u2019s confidence in the language was high enough,tackling things like lifetimes and ownership would be a natural progression intheir study.\n Take a moment to review the learning objectives (below), then move on to thefirst chapter.\n                 Have Rust installed on your workstation. You can complete this tutorial if youdon\u2019t have Rust installed yet.\n          Rust\u2019s main attractor to me is that I can have all the control of a lower-levellanguage like C with some of the more expressive elements and memory safety of ahigher-level language. It\u2019s almost like a whole new way of thinking aboutsoftware engineering problems. In fact, the way Rust handles variableassignment, passing arguments into functions, and returning values out fromfunctions, is a somewhat unique way of thinking about the tools we\u2019re building.\n  Well, just like how Common Core came in and revamped the way we teach Math,there are people who are very (and sometimes toxically) critical of how Rustforces us to think differently about things. But every language has pros andcons, and it\u2019s really up to you to figure out which one makes the most sensegiven what you\u2019re building and how you like to mentally model your problems.\n I recommend that you don\u2019t fall down these \u201cIs Rust Better Than\u201d or \u201cRust SucksBecause\u201d rabbit holes. We\u2019re all engineers, and engineers use tools. We shouldwelcome new ways to think about the problems we\u2019ve been solving for years andyears, because eventually we\u2019re going to find better ways of solving them.\n  Form your own opinions. Tools are supposed to be fun engaging, not talkingpoints for mudslinging.\n   My tutorial series is designed differently than anything else I\u2019ve seen aboutRust. Being an autodidact, I wrote these tutorials in a way that would havehelped give me the foundational confidence that I never got reading traditionalbooks and popular introductory tutorials online. Rust requires a differentmindset, yes, but I don\u2019t think we as Rust teachers should be frontloading allof Rust\u2019s esotericities into tutorials meant to gently introduce someone intothe language.\n The official Rust book is great. The O\u2019Reilly book is great. There are a lot ofgreat tutorials, too. I personally like to learn a new language and it\u2019srequisite thinking paradigms by  diving in and building tools. Rust is, afterall, a systems language, and toolbuilding is a great way to dive into practicalapplication. On top of that, having a parallel objective (building a tinymarkdown compiler) that is easy to understand provides some foundationalconfidence in what we\u2019re learning and applying.\n It\u2019s a unique way to learn Rust, that\u2019s for sure, and it\u2019s the way I wish Icould have learned it.\n That being said, this course  is not meant to get you up and running with Rustper se; the problem that I have seen with newcomers to Rust is that there isjust too much to learn too soon, and there\u2019s not enough payoff in the beginningafter \u201cHello, world!\u201d to justify sticking around. In my humble opinion, this isbecause most Rust tutorials aren\u2019t teaching people how fun Rust is for building tools,and instead focusing too much on how idiosyncratic the unique features of Rust are.Those tutorials are still important, but I think other tutorials\u2013ones that focus on building something, even if it\u2019s not that complicated\u2013are important, too, and serve tocompliment the still young (as of 2019) ecosystem of Rust tutorials online.\n   Markdown is a minimalistic language for writing HTML content very quickly. Itgives us the ability to write text-based documents that are legible and small,while compiling into vaid HTML. It makes drafting, updating, and publishing veryeasy, and is a common tool used among programmers in all lines of work.\n A Markdown compiler\u2019s job is to convert \u201cmarkdown\u201d content into valid HTML.\n  # This is a title This is a paragraph of text. How neat! In this tutorial, we will learn how to turn this into a paragraph block by putting  `&lt;p&gt;` tags around it.\n  &lt; h1&gt;This is a title&lt;/ h1&gt;&lt; p&gt;This is a paragraph of text. How neat! In this tutorial, we will learn how to turn this into a paragraph block by putting &lt; code&gt;&lt; p&gt;&lt;/ code&gt; tags around it.&lt;/ p&gt;\n The compiler we are building in this course will convert heading tags, paragraphblocks, and code snippets from Markdown into valid HTML.\n   Our goal for this chapter is to develop confidence in setting up a new Rustproject.\n   We will start by creating a folder to keep track of all our tutorial projects.In my tutorials, you will often see  C:\\RustTutorials as the root folder of allour projects. Go ahead and name yours whatever you want.\n For this tutorial, we are creating a Markdown compiler called  TinyMD\u2013whichis also the name of my rejected Netflix show about a sentient spider that goesto medical school. You don\u2019t have to make a new directory; we\u2019re going to do thatwith Rust\u2019s  Cargo toolchain, the package manager and project building toolthat comes along with the Rust compiler when you installed Rust.\n We will scafford this and all projects in Rust using the  cargo tool, passingthe  new argument and specifying what we want:\n  The command  cargo new builds a new project, and the  --bin flag tells Cargothat this project will result in an executable (called  tinymd) instead ofbeing a library. I am going to cover libraries and the package system in adifferent tutorial, but for now you can think of it like NPM, Rubygems, or anyother package system.\n Once you\u2019ve ran the  cargo new command, you will get a confirmation that theproject was scaffolded correctly:\n  With our new Rust project started, let\u2019s go ahead and open the project\u2019s root folder.\n Use your favorite editor to open up the new folder named  tinymd.If you\u2019re using VS Code like me, you can usually type:\n     A  Cargo.toml file, which is the manifest file. This is the projectconfiguration and dependencies script. This would be like the  Gemfile in Ruby,or  package.json in Node.\n Anytime we create a new project like this, Rust sticks in some default code forus. Here you can see that it\u2019s nothing more than a simple \u201cHello, world!\u201dprogram.\n There are several things you can intuit about Rust\u2019s syntax by looking at theprepackaged dummy code in the  main.rs file:\n  As you might have guessed: this looks a lot like C; functions are declared with fn; the  printf equivalent is  println!, which is a  macro and not afunction; this program does nothing more than print  &#34;Hello, world!&#34; to thecommand line.\n   A macro in Rust encapsulates code and presents it in a developer-friendly way.There are only a few that we will be using throughout these tutorials, and allof them are delivered through Rust. Macros make it easy to providebatteries-included tools to help developers write more fluid and legible code,and you can think of them as like super functions for now.\n I personally don\u2019t like that new Rust programmers have to deal with macrosfrom the start, but this is just one of the ways Rust really is a uniqueprogramming experience.\n Before we get ahead of ourselves, let\u2019s build this project. Open up yourterminal (if you\u2019re using VS Code, you can use the integrated terminal by typing Ctrl+ `), and then type  cargo build:\n $ cargo build Compiling tinymd v0.1.0 (C:\\RustTutorials\\tinymd) Finished dev [unoptimized + debuginfo] target(s) in 1.19s$\n You can see that the  build command first compiles the project beforebuilding it. The other stuff there\u2013 dev [unoptimized + debuginfo]\u2013is telling us that we have compiled and built this project for devpurposes only. The code is not optimized and there are debug symbols presentthat we would normally not keep in a release version. The  dev target is thedefault target for the  cargo build command, and is equivalent to a Debugbuild (in a paradigm where you have either Debug or Release builds).\n The default  cargo build is perfectly fine for learning Rust, and will be theway we build all our Rust projects. It takes care of dependency managementchecking and interfaces the compiler ( rustc) for us so that we can have aone stop shop for working with our code.\n At this point, you should see a new directory called  target in your project\u2019sroot directory. It was created by using the  cargo build command\u2019s defaulttarget, which is Debug. Here you will find your project\u2019s executables.\n   The third Cargo command we will often use is  cargo run, which is how wewill run the executable that our project builds.\n  $ cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.00s Running `target\\debug\\tinymd.exe` Hello, world!$\n Note that we don\u2019t need to pass the name of the project; Rust will infer thatfor us, by executing the appropriate  .exe file based on the release target.\n If you see \u201cHello, world!\u201d in your terminal, then congratulations: you havebuilt your first Rust program!\n In the next section, we\u2019ll dive into the Rust language and start customizing our markdown compiler to make it feel like an actual program.\n If you have a comment, concern, or complaint about this chapter,  send me some feedback.\n   Our goal for this chapter is to develop confidence about basic functionsand variables in Rust.\n  All of our project\u2019s source files live in the  src directory, and for thepurposes of clarity, we\u2019re only going to use the  main.rs file for ourmarkdown compiler.\n The Hello World example code provided gives us all we need to know to startcustomizing our project. By the end of this chapter, executing our code withoutarguments will output a banner\u2013a short block of text that includes theprogram\u2019s name, the author, a brief description, and usage examples.\n   As you can see from the  main() function, basic functions with no return valuesor arguments are fairly simple to write. Let\u2019s go ahead and write a new functioncalled  usage() right at the top of our file. Inside it, we\u2019ll use the samecode that we can see being used to write  &#34;Hello, world!&#34; to output the nameand a short description of our tool:\n fn  usage()  {    println !( &#34;tinymd, a markdown compiler written by &lt;YOUR NAME&gt;&#34;);  }     fn  main()  {    println !( &#34;Hello, world!&#34;);  }\n Go ahead and replace  &lt;YOUR NAME&gt; with your name if you haven\u2019t already doneso.\n To compile and run this, you can just run  cargo run, which, if it detects anychanges in your source files, will recompile and rebuild your project behindthe scenes:\n  If you don\u2019t really care to look at the accompanying information ( Finished devand  Running lines), you can pass the  -q flag to Cargo, which tells it to bequiet:\n  To save space, that\u2019s how I\u2019ll be compiling, building, and running the code aswe make changes to it\u2013so don\u2019t panic when you see the  -q flag.\n Let\u2019s go ahead and replace the Hello World line in the main function body witha call to  usage():\n    Neat! But an argumentless and returnless function is about as useful as aninflatable dart board. To improve our  usage() function, let\u2019s have it returna simple value that we can write to the console window.\n  In this section, we\u2019re going to create a function called  get_function() thatwill return some arbitrary version number of our tool.\n We saw earlier that a function with no arguments and no return value is writtenlike this:\n  Let\u2019s say our version number is  1000, and we want to returnthat from a function and then print it out. Recall that the range of an unsignedinteger is 0 to 2 X-1, meaning we would need to store the number 1000in at least a 16-bit unsigned integer (which has a range of 0 to 65,535). Wedenote that in Rust with the keyword  u16.\n   This declares a function named  get_version that takes no arguments and returnsa  u16. You can see that we specify return values by using the  -&gt; set ofsymbols.\n To return the value  1000, we can either use the  return keyword (which doesexactly what it sounds like) or we can do what Ruby does and just write thenumber.\n   In both examples above, the functions will evaluate to the number 1000. This isbecause Rust is considered an expression-based language (like Ruby!). In anexpression-based language, everything is an expression\u2013and expressions evaluateto values. That means that a block of code, being an expression, evaluates toa value. Since a function is a block of code, functions evaluate to a value,too.\n Notice that we only need the semi-colon when we use the  return keyword;the number 1001 by itself is the value that the block evaluates to, while the return 1000; is a statement\u2013and statements end with a semicolon.\n The accepted way in the Rust community (and in most expression-based languages)is to only use the  return keyword for early returns\u2013that is, for when thelast statement in a particular block may not be the only value that the blockcan evaluate to. For example, if you wanted to print some output based on theversion number, you would do something like this:\n fn  get_version()  -&gt;  u16 {     let  version   =   1;   // For the sake of example      if  version   &lt;   2  {     return   1;    }      2  }\n Obviously this is a pointless block of code, but you can see that the block willevaluate to  1, and in the satisifed  if expression, we use the  returnkeyword to indicate an early return. It\u2019s an  early return because the blockwould normally evaluate to  2, but in the case of the early  if check, itcould return a value earlier than when  2 would be returned.\n Let\u2019s add the new  get_version() function to our program by calling it fromwithin the  println!() macro in  usage():\n fn  get_version()  -&gt;  u16 {     1000  }     fn  usage()  {    println !( &#34;tinymd, a markdown compiler written by &lt;YOUR NAME&gt;&#34;);    println !( &#34;Version {}&#34;,  get_version());  }     fn  main()  {    usage();  }\n Here you can see how we pass arguments to  println!() like we would a typical printf function in another language. Since Rust provides this macro for us, itcan discern what kind of variable you are trying to print so you don\u2019t have toworry about specifying the type. For example, in C\u2019s  printf function youwould use  %s to denote where you want the character array to be printed; Rustonly requires you to use  {}, regardless of the variable\u2019s type. (We will beprinting strings very soon, so sit tight!)\n    $ cargo run Compiling tinymd v0.1.0  (C: \\RustTutorials \\tinymd ) Finished dev  [unoptimized + debuginfo ] target (s ) in 0.63s Running  `target \\debug \\tinymd.exe `tinymd, a markdown compiler written by &lt;YOUR NAME&gt;Version  1000\n The version integer (1000) is being printed, and the  println! macro can inferthat it\u2019s an integer based on the return type specified by  get_version().\n We\u2019re  almost done with this chapter. Now that we\u2019re confident with Rust\u2019sfunction syntax, let\u2019s learn how to create and assign a value to a simplevariable.\n  The first kind of variable we will learn about is the integer. All variables inRust are declared by putting their type  after their name. For example, if wewant to create an integer variable to hold the version of our application, wewould declare a variable  version like this:\n let  version:  u16;   // I&#39;m using u16 for the sake of example only. This could be    // a u8, too. It just depends on your variable size.\n  Variables in Rust are declared with the  let keyword, and then we use a colon( :) to describe the variable\u2019s type. All variables need to be declared likethis, unless the variables type can be inferred by, say, the return value of afunction. Let\u2019s practice using both ways to declare a variable.\n To store our arbitrary application version in a variable, let\u2019s declare itwithin the scope of the  usage() function. Then, instead of having  println!use the function  get_version() to print the version, we\u2019ll have it use ourlocal variable:\n fn  get_version()  -&gt;  u16 {     1000  }     fn  usage()  {     let  the_version:  u16;   // Declare our variable   the_version   =  get_version();   // Assign a value to our variable   println !( &#34;tinymd, a markdown compiler written by &lt;YOUR NAME&gt;&#34;);    println !( &#34;Version {}&#34;,  the_version);   // Print the value assigned }     fn  main()  {    usage();  }\n As you can see, substituting the function with the variable in  println! isfairly straightforward. Additionally, look at how we declared  the_version,then passed the value of the function to it. Rust infers the type of variable wewant based on the return value of the function we use to assign it a value.\n    If you have a comment, concern, or complaint about this chapter,  send me some feedback.\n   Our goal in this chapter is to develop confidence about a few of the basic stringoperations in Rust.\n  Our tiny markdown compiler is only just being born. We\u2019ve got a project setup,and if we run the program we are able to output a  banner\u2013a block of helpfultext that usually says what the program is, who wrote it, and how to use it. Wehave wrapped up this banner in the  usage() function. By the end of the lastchapter, we were outputting the version of our program.\n In this chapter, we will improve the banner by pulling data from our project\u2019s manifest file ( Cargo.toml) instead of hard-coding things like the version number into  main.rs. To do this, we need to understand how Rust deals with strings and,perhaps most importantly, what makes Rust wholly diffe\n......", "posttime": "2020-05-17 04:42:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u7f16\u8bd1,\u7f16\u8bd1\u5668", "title": "\u901a\u8fc7\u6784\u5efa\u4e00\u4e2a\u5c0f\u578b\u7684Markdown\u7f16\u8bd1\u5668\u5f00\u59cb\u4f7f\u7528Rust", "title_en": "Getting Started with Rust by Building a Tiny Markdown Compiler", "transed": 1, "url": "https://jesselawson.org/rust/getting-started-with-rust-by-building-a-tiny-markdown-compiler/", "via": "", "real_tags": ["rust", "\u7f16\u8bd1", "\u7f16\u8bd1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1002437, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56de\u5230\u201c\u94f6\u7ffc\u6740\u624b\u201d\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5927\u6d41\u884c\u4ecd\u5728\u8086\u8650\uff0c\u4f46\u4e5f\u8bb8\u5f53\u4f60\u5728\u539f\u5730\u907f\u96be\u65f6\uff0c\u8fd9\u4f1a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5206\u6563\u6ce8\u610f\u529b\u7684\u5730\u65b9\u3002\u56e0\u4e3a\u4f60\u5f88\u806a\u660e\uff0c\u5c3d\u53ef\u80fd\u8eb2\u5728\u539f\u5730\uff0c\u800c\u4e14\u6ca1\u6709\u6ce8\u5c04\u6d88\u6bd2\u5242\u3002\u800c\u4e14\uff0c\u5c31\u50cf\u8fd9\u90e8\u7535\u5f71\u4e2d\u7684\u8bb8\u591a\u5176\u4ed6\u6280\u672f\u4e00\u6837\uff0c\u8fd9\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u89e3\u6784\u3001\u6279\u5224\u548c\u91cd\u65b0\u60f3\u8c61\u3002\n\u5728\u505a\u4ed6\u7684\u4fa6\u63a2\u5de5\u4f5c\u65f6\uff0c\u5fb7\u5361\u4ece\u91cc\u6602\u7684\u9152\u5e97\u623f\u95f4\u91cc\u53d6\u56de\u4e86\u4e00\u7ec4\u5feb\u7167\uff0c\u4ed6\u628a\u5b83\u4eec\u5e26\u56de\u4e86\u5bb6\u3002\u4e0a\u56fe\u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\u5438\u5f15\u4e86\u4ed6\u7684\u773c\u7403\uff0c\u4ed6\u60f3\u8981\u66f4\u8be6\u7ec6\u5730\u8c03\u67e5\u5b83\u3002\u4ed6\u62cd\u6444\u4e86\u8fd9\u5f20\u7167\u7247\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u4e86\u4ed6\u653e\u5728\u8d77\u5c45\u5ba4\u91cc\u7684\u4e00\u4e2a\u9ed1\u8272\u8bbe\u5907\u4e2d\u3002\n\u6ce8\u610f\uff1a\u6211\u5c06\u5c1d\u8bd5\u5728\u6587\u672c\u4e2d\u63cf\u8ff0\u6b64\u4ea4\u4e92\uff0c\u4f46\u5728\u67e5\u770b\u4e4b\u540e\u66f4\u5bb9\u6613\u6982\u5ff5\u5316\u3002\u7531\u4e8e\u7248\u6743\u9650\u5236\uff0c\u6211\u4e0d\u80fd\u4e0a\u4f20\u8fd9\u4e2a\u957f\u5ea6\u7684\u89c6\u9891\u548c\u539f\u59cb\u97f3\u9891\uff0c\u6240\u4ee5\u6211\u5728\u4e0b\u9762\u6dfb\u52a0\u4e86\u9884\u5148\u6e32\u67d3\u7684\u95ed\u8def\u5b57\u5e55\u3002\u526a\u8f91\u4e2d\u7684\u6240\u6709\u5bf9\u767d\u90fd\u662f\u6234\u5361\u5fb7\u7684\u3002\n\u4ed6\u5c06\u5feb\u7167\u63d2\u5165\u4e00\u4e2a\u6c34\u5e73\u72ed\u7f1d\u4e2d\uff0c\u7136\u540e\u6253\u5f00\u673a\u5668\u3002\u4e00\u6761\u7ec6\u957f\u7684\u6c34\u5e73\u6a59\u8272\u7ebf\u6761\u5728\u524d\u9762\u677f\u5de6\u4fa7\u53d1\u5149\u3002\u4e00\u7cfb\u5217\u770b\u4f3c\u968f\u673a\u957f\u5ea6\u7684\u6a59\u8272\u7ebf\u6761\u5f00\u59cb\u5728\u6a2a\u8de8\u9762\u677f\u5176\u4f59\u90e8\u5206\u7684\u5355\u884c\u7a7a\u95f4\u4e2d\u76f8\u4e92\u8ffd\u9010\uff0c\u5e76\u5728Deckard\u4f7f\u7528\u5b83\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7ee7\u7eed\u8fd9\u6837\u505a\u3002(\u60f3\u8c61\u4e00\u4e0b\uff0c\u4e00\u4e2a\u65b0\u95fb\u62a5\u4ef7\u5668\u5411\u540e\u8fd0\u884c\uff0c\u5176\u4e2d\u7684\u201c\u6807\u9898\u201d\u662f\u95ea\u8000\u7684\u7425\u73c0\u8272\u7ebf\u6761\u3002)\u3002\u5bf9\u4e8e\u5fb7\u5361\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u662f\u65e0\u7528\u7684\uff0c\u7edd\u5bf9\u662f\u6beb\u65e0\u610f\u4e49\u7684\u5206\u5fc3\uff0c\u5728\u4ed6\u7684\u5916\u56f4\u89c6\u89c9\u4e2d\u52a0\u5165\u4e86\u9ad8\u5bf9\u6bd4\u5ea6\u7684\u8fd0\u52a8\uff0c\u4e0e\u4e0b\u9762\u771f\u5b9e\u7684\u3001\u6709\u8da3\u7684\u5185\u5bb9\u4e89\u593a\u6ce8\u610f\u529b\u3002\n\u4e00\u79d2\u949f\u540e\uff0c\u5c4f\u5e55\u663e\u793a\u4e00\u4e2a\u84dd\u8272\u7f51\u683c\uff0c\u5728\u5176\u540e\u9762\u663e\u793a\u5feb\u7167\u626b\u63cf\u3002\u4ed6\u51dd\u89c6\u7740\u7f51\u683c\u4e2d\u7684\u56fe\u50cf\u7247\u523b\uff0c\u8bf4\u51fa\u4e86\u4e00\u7ec4\u6307\u4ee4\uff0c\u201c\u5c06224\u589e\u5f3a\u5230176\u3002\u201d\n\u4f5c\u4e3a\u54cd\u5e94\uff0c\u4e09\u4e2a\u6570\u636e\u70b9\u51fa\u73b0\u5728\u5c4f\u5e55\u5e95\u90e8\u7684\u56fe\u50cf\u4e0a\u3002\u6bcf\u4e2a\u6807\u7b7e\u90fd\u6709\u4e00\u4e2a\u4e24\u4e2a\u5b57\u6bcd\u7684\u6807\u7b7e\u548c\u4e00\u4e2a\u56db\u4f4d\u6570\u7684\u6570\u5b57\uff0c\u4f8b\u5982\u3002\u201cZM 0000 NS 0000 EW 0000\u3002\u201dNS\u548cEW-\u5927\u6982\u5206\u522b\u662f\u5357\u5317\u5750\u6807\u548c\u4e1c\u897f\u5750\u6807-\u7acb\u5373\u66f4\u65b0\u4e3a\u201cZM0000 NS0197 EW 0334\u201d\u3002\u66f4\u65b0\u6570\u5b57\u540e\uff0c\u5c4f\u5e55\u4e0a\u4f1a\u663e\u793a\u4e00\u4e2a\u5341\u5b57\u51c6\u7ebf\uff0c\u6307\u5411\u7f51\u683c\u4e2d\u7684\u5355\u4e2a\u77e9\u5f62\u3002\n\u7136\u540e\uff0c\u968f\u7740ZM\u7f16\u53f7(\u53ef\u80fd\u662f\u7f29\u653e\u6216\u653e\u5927\u500d\u7387)\u7684\u589e\u52a0\uff0c\u4e00\u4e2a\u65b0\u7684\u77e9\u5f62\u5c06\u4ece\u8fb9\u7f18\u653e\u5927\u4ee5\u5339\u914d\u76ee\u6807\u77e9\u5f62\u3002\u5f53\u52a8\u753b\u77e9\u5f62\u5230\u8fbe\u76ee\u6807\u77e9\u5f62\u65f6\uff0c\u5176\u8f6e\u5ed3\u4f1a\u95ea\u70c1\u51e0\u6b21\u9ec4\u8272\u3002\u7136\u540e\u5728\u4e00\u7cfb\u5217\u6b65\u9aa4\u4e2d\u653e\u5927\u77e9\u5f62\u7684\u5185\u5bb9\u4ee5\u586b\u6ee1\u5c4f\u5e55\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u7531\u7c7b\u4f3c\u4e8e\u673a\u68b0\u76f8\u673a\u5149\u5708\u7684\u58f0\u97f3\u6765\u70b9\u7f00\u3002\u6269\u5927\u7684\u95ee\u9898\u5df2\u7ecf\u5b8c\u5168\u89e3\u51b3\u4e86\u3002\u8986\u76d6\u5c06\u6d88\u5931\uff0c\u76f4\u5230\u4e0b\u4e00\u7ec4\u53e3\u5934\u547d\u4ee4\u3002\u4eceDeckard\u53d1\u51fa\u547d\u4ee4\u5230\u8bbe\u5907\u663e\u793a\u6700\u7ec8\u653e\u5927\u56fe\u50cf\u4e4b\u95f4\u7684\u7cfb\u7edf\u54cd\u5e94\u65f6\u95f4\u7ea6\u4e3a11\u79d2\u3002\n\u5728\u53d1\u51fa\u53e6\u4e00\u4e2a\u547d\u4ee4\u4e4b\u524d\uff0c\u5fb7\u5361\u5fb7\u7814\u7a76\u4e86\u4e00\u4e0b\u65b0\u7684\u56fe\u50cf\u3002\u8fd9\u4e00\u6b21\uff0c\u4ed6\u8bf4\uff0c\u201c\u589e\u5f3a\u3002\u201d\u56fe\u50cf\u4ee5\u7c7b\u4f3c\u7684\u5494\u54d2\u58f0\u653e\u5927\uff0c\u76f4\u5230\u4ed6\u544a\u8bc9\u5b83\uff0c\u201c\u505c\u6b62\u3002\u201d\n\u4ed6\u7ed9\u51fa\u7684\u5176\u4ed6\u6307\u793a\u8fd8\u5305\u62ec\u201c\u79fb\u5165\u3001\u62c9\u51fa\u3001\u5411\u53f3\u8ddf\u8e2a\u3001\u5c45\u4e2d\u3001\u5411\u540e\u3001\u5c45\u4e2d\u548c\u5411\u53f3\u5e73\u79fb\u201d\u3002\u5176\u4e2d\u4e00\u4e9b\u5305\u62ec\u79bb\u6563\u7684\u6307\u4ee4\uff0c\u5982\u201cTrack 45 Right\u201d\uff0c\u800c\u53e6\u4e00\u4e9b\u662f\u76f8\u5bf9\u547d\u4ee4\uff0c\u7cfb\u7edf\u4f1a\u9075\u5b88\u8fd9\u4e9b\u547d\u4ee4\uff0c\u76f4\u5230\u7cfb\u7edf\u88ab\u544a\u77e5\u505c\u6b62\u4e3a\u6b62\uff0c\u5982\u201cGo Right\u201d\u3002\n\u4f7f\u7528\u8fd9\u6837\u7684\u547d\u4ee4\uff0c\u4ed6\u5206\u79bb\u51fa\u63ed\u793a\u91cd\u8981\u7ebf\u7d22\u7684\u56fe\u50cf\u7684\u4e00\u90e8\u5206\uff0c\u7136\u540e\u4ed6\u8bf4\u51fa\u6307\u4ee4\uff0c\u201c\u5c31\u5728\u90a3\u91cc\u7ed9\u6211\u4e00\u4efd\u786c\u62f7\u8d1d\u3002\u201d\u673a\u5668\u6253\u5370\u56fe\u50cf\uff0cDeckard\u7528\u5b83\u6765\u5e2e\u52a9\u627e\u5230\u7167\u7247\u4e2d\u7684\u590d\u5236\u8005\u3002\n\u5728\u6279\u8bc4\u4e4b\u524d\uff0c\u6211\u60f3\u6307\u51fa\u4e00\u70b9\u8001\u7ec3\u4e4b\u5904\u3002Deckard\u53ef\u4ee5\u53d1\u51fa\u5e26\u53c2\u6570\u6216\u4e0d\u5e26\u53c2\u6570\u7684\u547d\u4ee4\uff0c\u68c0\u67e5\u5458\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002\u4f8b\u5982\uff0c\u201c45\u53f7\u8f68\u9053\u5411\u53f3\u201d\u548c\u201c\u5411\u53f3\u8f68\u9053\u201d\u3002\u5982\u679c\u6ca1\u6709\u8be5\u53c2\u6570\uff0c\u5b83\u53ea\u4f1a\u91cd\u590d\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u76f4\u5230\u88ab\u544a\u77e5\u505c\u6b62\u4e3a\u6b62\u3002\u8fd9\u6709\u52a9\u4e8eDeckard\u5728\u4ed6\u786e\u5207\u5730\u77e5\u9053\u4ed6\u60f3\u8981\u5728\u54ea\u91cc\u4ee5\u53ca\u4f55\u65f6\u5bfb\u627e\u65f6\u53d1\u51fa\u76f8\u540c\u7684\u57fa\u672c\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u786e\u5207\u5730\u77e5\u9053\u4ed6\u5728\u5bfb\u627e\u4ec0\u4e48\u3002\u8fd9\u662f\u8bed\u8a00\u8bbe\u8ba1\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u7279\u70b9\u3002\n\u4f46\u5c3d\u7ba1\u5982\u6b64\uff0c\u8ba9\u4ed6\u7528\u8fd9\u79cd\u7b28\u62d9\u7684\u65b9\u5f0f\u63d0\u4f9b\u5faa\u5e8f\u6e10\u8fdb\u7684\u6307\u5bfc\uff0c\u611f\u89c9\u5c31\u50cf\u662f\u4e00\u4e9b\u9ad8\u79d1\u6280\u7684\u5927\u901a\u9053(Big Trak)\u3002(\u6211\u8bd5\u7740\u627e\u4e00\u4e2a\u548c\u8fd9\u90e8\u7535\u5f71\u4e00\u6837\u53e4\u8001\u7684\u53c2\u8003\u8d44\u6599\u3002)\u3002\u8fd9\u5e76\u4e0d\u662f\u6240\u6709\u7684\u2026\u3002\n\u6211\u80fd\u56de\u53bb\u63d0\u4e00\u4e0b\u90a3\u4e2a\u7425\u73c0\u5e72\u6270\u706f\u5417\uff1f\u56e0\u4e3a\u8fd9\u4f1a\u8ba9\u4eba\u5206\u5fc3\u3002\u800c\u4e14\u6beb\u65e0\u610f\u4e49\u3002\u6211\u6ca1\u6709\u751f\u6c14\u3002\u6211\u53ea\u662f\u5f88\u5931\u671b\u3002\n\u5728\u4e92\u52a8\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u65f6\u5019\uff0c\u5982\u679c\u5c4f\u5e55\u4e0a\u7684\u4efb\u4f55\u6570\u5b57\u90fd\u6709\u610f\u4e49\uff0c\u5e76\u4e14\u4e0e\u5fb7\u5361\u5fb7\u8bf4\u7684\u6570\u5b57\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u4f8b\u5982\uff0c\u521d\u59cb\u7f29\u653e(\u6211\u5728Photoshop\u4e2d\u68c0\u67e5)\u7ea6\u4e3a304%\uff0c\u8fd9\u65e2\u4e0d\u662fDeckard\u6240\u8bf4\u7684224%\uff0c\u4e5f\u4e0d\u662f176%\u3002\n\u53ef\u80fd\u6bcf\u4e2a\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u4ed6\u53ea\u9700\u4ee5\u4ed6\u60f3\u8981\u7684\u7f29\u653e\u8303\u56f4\u547d\u540d\u4e24\u4e2a\u65b9\u5757\uff0c\u8ba9\u673a\u5668\u627e\u5230\u8303\u56f4\uff0c\u4f46\u662f\u6807\u7b7e\u5728\u54ea\u91cc\u5462\uff1f\u4ed6\u9700\u8981\u8bb0\u4f4f\u6bcf\u4e2a\u50cf\u7d20\u7684\u5730\u5740\u5417\uff1f\u8fd9\u662f\u5982\u4f55\u5728\u4efb\u610f\u7f29\u653e\u7ea7\u522b\u4e0b\u5de5\u4f5c\u7684\uff1f\n\u4e3a\u4ec0\u4e48\u5728\u8f6c\u6362\u5e8f\u5217\u4e2d\u4f1a\u51fa\u73b0\u8bf1\u53d1\u766b\u75eb\u7684\u95ea\u5149\uff1f\u5f53\u7136\uff0c\u6211\u77e5\u9053\u5f88\u591a\u6280\u672f\u5728\u53d7\u673a\u68b0\u7ea6\u675f\u65f6\u4f1a\u4ea7\u751f\u4e0d\u5e78\u7684\u5f71\u54cd\uff0c\u4f46\u8fd9\u662f\u6570\u5b57\u5316\u7684\u3002\n\u4e3a\u4ec0\u4e48\u6253\u5370\u7684\u7167\u7247\u548c\u4ed6\u8981\u786c\u62f7\u8d1d\u7684\u9759\u6b62\u56fe\u50cf\u5982\u6b64\u4e0d\u540c\uff1f\n\u51dd\u89c6\u7740\u798f\u7279\u6de1\u8910\u8272\u773c\u775b\u91cc\u7684\u5012\u5f71\uff0c\u5f88\u660e\u663e\u4ed6\u5728\u73a9\u5bfc\u5f39\u53f8\u4ee4\u90e8\uff0c\u800c\u4e0d\u662f\u628a\u6ce8\u610f\u529b\u653e\u5728\u8fd9\u4e2a\u754c\u9762\u4e0a\u3002(\u597d\u7684\uff0c\u8fd9\u662f\u7535\u5f71\u5236\u4f5c\u4eba\u7684\u95ee\u9898\uff0c\u4e0d\u662f\u754c\u9762\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u8fd8\u662f\u8981\u8bf4\u51fa\u6765\u3002)\u3002\n\u56e0\u6b64\uff0c\u5982\u679c1982\u5e74\u96f7\u5fb7\u5229\u00b7\u65af\u79d1\u7279(Ridley Scott)\u5728\u5e16\u5b50\u4e2d\u544a\u8bc9\u6211\uff0c\u6211\u4eec\u4e0d\u80fd\u91cd\u65b0\u62cd\u6444\u54c8\u91cc\u68ee\u00b7\u798f\u7279(Harrison Ford)\uff0c\u6211\u4eec\u5fc5\u987b\u5229\u7528\u73b0\u6709\u7684\u8d44\u6e90\uff0c\u8fd9\u662f\u6211\u4f1a\u505a\u7684\uff0c\u2026\u3002\n\u6324\u538b\u7f51\u683c\uff0c\u4f7f\u5355\u5143\u683c\u4e0eNTSC\u5c4f\u5e55\u76844\uff1a3\u6bd4\u4f8b\u5339\u914d\u3002\u8986\u76d6\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u5730\u5740\uff0c\u540c\u65f6\u7a81\u51fa\u663e\u793a\u8fb9\u7f18\u7684\u5217\u6807\u8bc6\u7b26\u548c\u884c\u6807\u8bc6\u7b26\u3002\u8ba9\u7b2c\u4e00\u4e2a\u5355\u5143\u683c\u7684\u8f6e\u5ed3\u5728\u4ed6\u8bf4\u8bdd\u65f6\u88ab\u7167\u4eae\uff0c\u5e76\u5c06\u8f6e\u5ed3\u5c55\u5f00\u4ee5\u5305\u542b\u7b2c\u4e8c\u4e2a\u547d\u540d\u7684\u5355\u5143\u683c\u3002\u7136\u540e\u7f29\u653e\uff0c\u5728\u8fc7\u6e21\u671f\u95f4\u5220\u9664\u5355\u5143\u683c\u6807\u7b7e\u3002\u5f53\u5904\u4e8e\u5168\u89c6\u56fe\u4ee5\u5916\u7684\u4efb\u4f55\u4f4d\u7f6e\u65f6\uff0c\u5728\u56db\u4e2a\u5355\u5143\u683c\u4e2d\u663e\u793a\u5730\u56fe\uff0c\u5728\u6574\u4f53\u4e0a\u4e0b\u6587\u4e2d\u4ee5\u53ef\u89c6\u65b9\u5f0f\u663e\u793a\u7f29\u653e\u3002\n\u6709\u4e86\u8fd9\u4e2a\u754c\u9762\uff0c\u73b0\u6709\u5bf9\u8bdd\u7684\u7ed3\u6784\u5c31\u66f4\u6709\u610f\u4e49\u4e86\u3002\u5f53\u5fb7\u5361\u5fb7\u8bf4\uff0c\u201c\u628a203\u53f7\u63d0\u5347\u5230608\u53f7\u201d\u65f6\uff0c\u5b83\u4f1a\u5728\u955c\u5b50\u4e0a\u653e\u5927\uff0c\u5c0f\u5730\u56fe\u4f1a\u786e\u8ba4\u8fd9\u4e00\u70b9\u3002\n\u6570\u5b57\u4e0d\u4f1a\u5339\u914d\uff0c\u4f46\u4ece\u6700\u540e\u7684\u526a\u8f91\u4e2d\u5f88\u660e\u663e\uff0c\u65af\u79d1\u7279\u5e76\u4e0d\u5173\u5fc3\u8fd9\u4e00\u70b9(\u6216\u8005\uff0c\u66f4\u4ec1\u6148\u7684\u662f\uff0c\u6ca1\u6709\u65f6\u95f4\u4e86)\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4f1a\u5728\u6297\u8bae\u4e0b\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6211\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u79cd\u4ea4\u4e92\u9700\u8981\u5728\u811a\u672c\u4e2d\u4fee\u590d\u3002\n\u8fd9\u9879\u6280\u672f\u771f\u6b63\u7cbe\u5999\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u5f20\u7167\u7247\u3002\u4ed4\u7ec6\u770b\u8fd9\u4e2a\u573a\u666f\uff0c\u5fb7\u5361\u4e0d\u4ec5\u4ec5\u662f\u5728\u505aCSI\u589e\u5f3a\uff01\u547d\u4ee4(\u6216\u8005\uff0c\u4e0d\u90a3\u4e48\u5632\u5f04\u5730\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u5347\u7ea7)\u3002\u4ed6\u6b63\u5728\u4f7f\u7528\u7167\u7247\u68c0\u67e5\u5668\u67e5\u770b\u89d2\u843d\u548c\u4ece\u6700\u5c0f\u7684\u53cd\u5c04\u4e2d\u91cd\u5efa\u7684\u5bf9\u8c61\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u4e92\u52a8\u60f3\u8c61\u6210\u4ed6\u5728\u901a\u8fc73D\u9759\u7269\u63a7\u5236\u4e00\u67b6\u65e0\u4eba\u673a\uff0c\u5bfb\u627e\u7ebf\u7d22\u6765\u5e2e\u52a9\u4ed6\u8fdb\u4e00\u6b65\u7834\u6848\u3002\n\u8981\u91cd\u65b0\u8bbe\u8ba1\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u57fa\u7840\u5c42\u9762\u4e0a\u51b3\u5b9a\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e3a\u663e\u793a\u5668\u7684\u5916\u89c2\u7740\u8272\u3002\u8fd9\u5c31\u662f\u4ece\u67d0\u4e2a\u75af\u72c2\u76843D\u6444\u50cf\u673a\u6355\u6349\u5230\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u5728\u56fe\u50cf\u4e2d\u53ef\u7528\u5417\uff1f\u6216\u8005\u5b83\u662f\u4ece\u4e8c\u7ef4\u56fe\u50cf\u7684\u7ec6\u8282\u4e2d\u63a8\u65ad\u51fa\u6765\u7684\uff1f\u8ba9\u6211\u4eec\u79f0\u7b2c\u4e00\u4e2a\u4e3a3D\u6355\u83b7\uff0c\u7b2c\u4e8c\u4e2a\u4e3a3D\u63a8\u65ad\u3002\n\u5982\u679c\u6211\u4eec\u786e\u5b9a\u8fd9\u662f\u4e00\u4e2a3-D\u6355\u6349\uff0c\u90a3\u4e48\u4ed6\u901a\u8fc7\u673a\u5668\u89c2\u5bdf\u5230\u7684\u6240\u6709\u6570\u636e\u90fd\u5177\u6709\u76f8\u540c\u7684\u7f6e\u4fe1\u5ea6\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a3D\u63a8\u65ad\u5668\uff0c\u6bd4\u8d77\u76f8\u673a\u76f4\u63a5\u6355\u6349\u7684\u6570\u636e\uff0c\u5fb7\u5361\u9700\u8981\u4ee5\u66f4\u591a\u7684\u6000\u7591\u6765\u5bf9\u5f85\u63a8\u65ad\u7684\u6570\u636e\u30023-D\u63a8\u65ad\u5668\u662f\u66f4\u56f0\u96be\u7684\u95ee\u9898\uff0c\u5b83\u63d0\u51fa\u4e86\u4e00\u4e9b\u6211\u4eec\u5728\u73b0\u4ee3\u4eba\u5de5\u667a\u80fd\u4e2d\u5fc5\u987b\u5904\u7406\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u4e48\u8bf4\uff0c\u8fd9\u5c31\u662f\u8fd9\u79cd\u6295\u673a\u6027\u6280\u672f\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\n\u663e\u793a\u5668\u5e94\u8be5\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u6e05\u695a\u5730\u663e\u793a\u89c2\u5bdf\u5230\u7684\u5185\u5bb9\u548c\u63a8\u65ad\u51fa\u7684\u5185\u5bb9\u3002\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u90e8\u5206\u662f\u89c6\u89c9\u8bbe\u8ba1\u548c\u98ce\u683c\u7684\u95ee\u9898\uff0c\u4f46\u90e8\u5206\u662f\u6279\u8bc4\u903b\u8f91\u7684\u95ee\u9898\u3002\u7b2c\u4e00\u6b65\u662f\u4ee5\u7167\u7247\u903c\u771f\u7684\u65b9\u5f0f\u6e32\u67d3\u76f8\u673a\u5706\u9525\u4f53\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u7136\u540e\u4ee5\u4e00\u79cd\u8868\u660e\u5176\u7f6e\u4fe1\u5ea6\u7684\u65b9\u5f0f\u6e32\u67d3\u76f8\u673a\u622a\u9762\u4f53\u4e4b\u5916\u7684\u6240\u6709\u5185\u5bb9\u3002\u4e0b\u9762\u7684\u6bd4\u8f83\u8bf4\u660e\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\n\u5728\u6bd4\u8f83\u4e2d\uff0c\u5fb7\u5361\u5df2\u7ecf\u5c06\u201c\u65e0\u4eba\u673a\u201d\u4ece\u53f3\u8fb9\u770b\u5230\u7684\u201c\u5b9e\u9645\u7167\u7247\u201d\u8f6c\u5411\u5de6\u8fb9\u63a8\u65ad\u7684\u7a7a\u95f4\u3002\u5355\u8272\u5904\u7406\u63d0\u4f9b\u7b2c\u4e00\u9ad8\u7f6e\u4fe1\u5ea6\u4fe1\u53f7\u3002\n\u5728\u573a\u666f\u4e2d\uff0c\u4e3b\u8981\u7684\u63a8\u8bba\u5c06\u6765\u81ea\u9605\u8bfb\u8fea\u65af\u79d1\u821e\u4f1a\u9876\u706f\u4e2d\u7684\u5012\u5f71\uff0c\u53ef\u80fd\u4f1a\u589e\u52a0\u7f51\u4e0a\u53ef\u4ee5\u627e\u5230\u7684\u516c\u5bd3\u5e73\u9762\u56fe\uff0c\u6216\u8005\u53ef\u80fd\u662f\u8d2d\u4e70\u7535\u5668\u7684\u6536\u636e\uff0c\u7b49\u7b49\u3002\u5b83\u53ef\u4ee5\u4ece\u5012\u5f71\u548c\u9ad8\u7f6e\u4fe1\u5ea6\u6765\u6e90\u91cd\u5efa\u7684\u6240\u6709\u4e1c\u897f\u90fd\u6709\u5b9e\u5fc3\u7684\u9ed1\u7ebf\uff0c\u4e00\u4e2a\u4e8c\u7ea7\u4fe1\u53f7\u3002\n\u8f83\u5c0f\u7684\u5c0f\u6446\u8bbe\u8131\u79bb\u4e86\u8fea\u65af\u79d1\u7403\u7684\u53cd\u5c04\uff0c\u5e76\u4ece\u5176\u4ed6\u53cd\u5c04\u7387\u8f83\u4f4e\u7684\u8868\u9762\u9690\u542b\u51fa\u6765\uff0c\u6e32\u67d3\u65f6\u6ca1\u6709\u9ed1\u8272\u7ebf\u6761\u548c\u6a21\u7cca\u3002\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4fe1\u53f7\uff0c\u8868\u660e\u8be5\u7b97\u6cd5\u5728\u5176\u63a8\u65ad\u4e2d\u5177\u6709\u975e\u5e38\u4f4e\u7684\u7f6e\u4fe1\u5ea6\u3002\n\u8fd9\u53ea\u662f\u5904\u7406\u5b83\u7684\u4e00\u79cd\u65b9\u5f0f(\u89c6\u89c9\u4e0a\u4e0d\u662f\u5f88\u6709\u8da3)\uff0c\u4f46\u662f\u5e94\u8be5\u8bf4\u660e\uff0c\u4e3a\u4e86\u53ef\u4fe1\uff0c\u7167\u7247\u68c0\u67e5\u5668\u4e0d\u5e94\u8be5\u5728\u9525\u4f53\u4e4b\u5916\u6709\u5355\u4e00\u7684\u6e32\u67d3\u6837\u5f0f\u3002\u5b83\u9700\u8981\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u8fd9\u4e9b\u6c34\u5e73\u7684\u4e1c\u897f\u6765\u5e2e\u52a9Deckard\u7acb\u5373\u8ba4\u8bc6\u5230\u4ed6\u5e94\u8be5\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u76f8\u4fe1\u4ed6\u6240\u770b\u5230\u7684\u3002\n\u73b0\u4ee3CGI\u559c\u6b22\u5927\u4f53\u79ef\u6295\u5f71\u3002(\u4f8b\u5982\uff0c\u8fd9\u662f\u53bb\u5e74\u5f17\u91cc\u8328\u83b7\u5956\u5f71\u7247\u201c\u8718\u86db\u4fa0\uff1a\u8fdc\u79bb\u5bb6\u4e61\u201d\u7684\u4e2d\u5fc3\u65b0\u6708\u3002)\u3002\u5982\u679c\u80fd\u770b\u5230\u5fb7\u5361\u5fb7\u5728\u91cc\u6602\u7684\u516c\u5bd3\u91cc\u8fdb\u884c\u5168\u606f\u7532\u677f\u822c\u7684\u91cd\u73b0\uff0c\u52a0\u4e0a\u4e0a\u9762\u63cf\u8ff0\u7684\u6240\u6709\u89c6\u89c9\u5904\u7406\uff0c\u90a3\u5c06\u662f\u4e00\u6b21\u7f8e\u5999\u7684\u5e76\u5217\u3002\n\u2026\u3002\u90a3\u4f1a\u7834\u574f\u73b0\u573a\u7684\u6c14\u6c1b\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u5fb7\u5361\u627e\u5230\u4e86\u7ebf\u7d22\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u4e86\u4ed6\u662f\u8c01\uff0c\u4ed6\u7684\u751f\u6d3b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002\u6211\u4eec\u770b\u5230\u70df\u96fe\u5f25\u6f2b\u7684\u516c\u5bd3\u3002\u6211\u4eec\u770b\u5230\u5355\u8c03\u7684\u6c99\u53d1\u3002\u6211\u4eec\u770b\u5230\u90a3\u5806\u65e7\u7684\u4fa6\u63a2\u673a\u3002\u6211\u4eec\u770b\u5230\u9713\u8679\u706f\u548c\u607c\u4eba\u7684\u5e7f\u544a\u706f\u5728\u4ed6\u7684\u7a97\u6237\u4e0a\u6765\u56de\u6446\u52a8\u3002\u8ba9\u4ed6\u6c89\u6d78\u5728\u4e00\u4e2a\u5927\u7684\u4f53\u79ef\u6295\u5f71\u4e2d\u4f1a\u5931\u53bb\u6240\u6709\u8fd9\u4e9b\u5927\u6c14\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u8981\u4e48\u50cf\u6211\u4eec\u5728\u201c\u5c11\u6570\u6d3e\u62a5\u544a\u201d\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u8ba9\u5b83\u4fdd\u6301\u4e00\u4e2a\u5c0f\u7684\u5305\u542b\u526f\u603b\u7edf\uff0c\u8981\u4e48\u5c31\u8ba9\u5b83\u4fdd\u6301\u4e00\u4e2a\u5c0f\u7684\u5e73\u677f\u7535\u89c6\u3002\n\u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u663e\u793a\u5668\u7684\u5916\u89c2(\u548c\u4e0d\u5e94\u8be5)\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u8ba8\u8bba\u8f93\u5165\u3002\n\u90a3\u4e48\uff0c\u8981\u8c08\u8bba\u6295\u5165\uff0c\u6211\u4eec\u5fc5\u987b\u56de\u5230\u6211\u6700\u559c\u6b22\u7684\u4e00\u4e2a\u8bdd\u9898\u4e0a\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u4ea4\u4e92\u7684\u4ee3\u7406\u7ea7\u522b\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u51b3\u5b9a\u673a\u5668\u6b63\u5728\u505a\u591a\u5c11\u5de5\u4f5c\u3002\u8fd9\u53f0\u673a\u5668\u53ea\u662f\u4e00\u4e2a\u624b\u52a8\u5de5\u5177\uff0c\u5fb7\u5361\u5fc5\u987b\u64cd\u7eb5\u5b83\u624d\u80fd\u8ba9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\u5417\uff1f\u6291\u6216\u662f\u79ef\u6781\u534f\u52a9\u4ed6\u5462\uff1f\u6216\u8005\uff0c\u6700\u540e\uff0c\u5f53\u4ed6\u7684\u6ce8\u610f\u529b\u653e\u5728\u5176\u4ed6\u4e8b\u60c5\u4e0a\u65f6\uff0c\u5b83\u8fd8\u80fd\u505a\u8fd9\u9879\u5de5\u4f5c\u5417\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u80fd\u4ee3\u8868\u4ed6\u5145\u5f53\u4ee3\u7406\u4eba\u5417\uff1f\u590d\u6742\u7684\u5de5\u5177\u53ef\u4ee5\u662f\u8fd9\u4e9b\u6a21\u5f0f\u7684\u6df7\u5408\u4f53\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5355\u72ec\u6765\u770b\u4e00\u4e0b\u3002\n\u8fd9\u5c31\u662f\u201c\u94f6\u7ffc\u6740\u624b\u201d\u4e2d\u7684\u7167\u7247\u68c0\u67e5\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u5b83\u53ef\u4ee5\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u662f\u5fb7\u5361\u5fc5\u987b\u544a\u8bc9\u5b83\u5230\u5e95\u8be5\u505a\u4ec0\u4e48\u3002\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u6539\u8fdb\u5b83\u3002\n\u6211\u4eec\u53ef\u4ee5\u7ed9\u4ed6\u5f88\u597d\u7684\u7269\u7406\u63a7\u5236\uff0c\u5c31\u50cf\u8fd9\u67b6\u6982\u5ff5\u578b\u65e0\u4eba\u673a\u7684\u9065\u63a7\u5668\u3002\u98de\u884c\u63a7\u5236\u6700\u7ec8\u6210\u4e3a\u8fd9\u4e2a\u535a\u5ba2\u4e0a\u53cd\u590d\u51fa\u73b0\u7684\u8bdd\u9898(\u751a\u81f3\u5df2\u7ecf\u5728Blade Runner\u5bf9\u65cb\u8f6c\u5668\u7684\u8bc4\u8bba\u4e2d\u51fa\u73b0\u4e86)\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7ee7\u7eed\u8ba8\u8bba\u5982\u4f55\u6700\u597d\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u8ba4\u4e3a\u624b\u6301\u63a7\u5236\u5668\u4f1a\u7834\u574f\u8fd9\u4e2a\u573a\u666f\u7684\u611f\u89c9\uff0c\u5c31\u50cfDeckard\u5750\u4e0b\u6765\u73a9\u89c6\u9891\u6e38\u620f\u800c\u4e0d\u662f\u505a\u975e\u5de5\u4f5c\u65f6\u95f4\u7684\u4fa6\u63a2\u5de5\u4f5c\u4e00\u6837\u3002\n\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba8\u8bba\u624b\u52bf\u754c\u9762\uff0c\u4f7f\u7528\u6211\u4eec\u4ee5\u524d\u5728\u201c\u653b\u58f3\u673a\u52a8\u961f\u201d\u4e2d\u89c1\u8fc7\u7684\u4e00\u4e9b\u63d0\u793a\u6027\u6280\u672f\u3002\u4f46\u662f\u518d\u8bf4\u4e00\u6b21\uff0c\u8fd9\u4f1a\u7834\u574f\u73b0\u573a\u7684\u611f\u89c9\uff0c\u8ba9\u4ed6\u770b\u8d77\u6765\u66f4\u50cf\u7ea6\u7ff0\u00b7\u5b89\u5fb7\u987f(John Anderton)\u7ad9\u5728\u5fae\u578b\u7535\u89c6\u7248\u7684\u5c11\u6570\u6d3e\u62a5\u544a\u8457\u540d\u7684\u72af\u7f6a\u6d17\u6da4\u5668\u524d\u9762\u3002\n\u8d4b\u4e88\u8fd9\u4e00\u573a\u666f\u60c5\u611f\u8d28\u611f\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5fb7\u5361\u4e00\u8fb9\u505a\u4fa6\u63a2\u4f5c\u4e1a\uff0c\u4e00\u8fb9\u559d\u7740\u4e00\u676f\u5a01\u58eb\u5fcc\u3002\u8fd9\u8868\u660e\u4ed6\u7684\u60c5\u7eea\u6709\u591a\u4f4e\u843d\u3002\u628a\u5b83\u6254\u56de\u53bb\u663e\u7136\u662f\u4ed6\u665a\u4e0a\u4f8b\u884c\u516c\u4e8b\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u79cd\u4e60\u60ef\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u5373\u4f7f\u5168\u795e\u8d2f\u6ce8\u4e8e\u91cc\u6602\u7684\u6848\u5b50\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002\u6211\u4eec\u600e\u4e48\u80fd\u8ba9\u4ed6\u5750\u5728\u6c99\u53d1\u4e0a\uff0c\u624b\u653e\u5728\u94c5\u6c34\u6676\u5a01\u58eb\u5fcc\u73bb\u7483\u676f\u4e0a\uff0c\u8fd8\u5728\u8c03\u67e5\u7167\u7247\u5462\uff1f\u4ed6\u80fd\u7528\u5b83\u6765\u8c03\u67e5\u7167\u7247\u5417\uff1f\n\u5728\u8fd9\u91cc\uff0c\u6211\u63a8\u8350\u4e00\u4e9b\u7279\u522b\u7684\u6709\u5f62\u7528\u6237\u754c\u9762\u3002\u6211\u7b2c\u4e00\u6b21\u662f\u5728\u201c\u661f\u7403\u5927\u6218\u201d\u7684\u5047\u65e5\u7279\u8f91\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u8d85\u51e1\u8131\u4fd7\u7684\u4e1c\u897f\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u5728\u8fd9\u91cc\u4e5f\u80fd\u884c\u5f97\u901a\u3002\u5047\u8bbe\u7167\u7247\u68c0\u67e5\u5668\u4e0a\u6709\u4e00\u4e2a\u9ad8\u5206\u8fa8\u7387\u76f8\u673a\uff0c\u754c\u9762\u5141\u8bb8Deckard\u5c06\u4ed6\u60f3\u8981\u7684\u4efb\u4f55\u5bf9\u8c61\u58f0\u660e\u4e3a\u63a7\u5236\u5bf9\u8c61\u3002\u58f0\u660e\u4e4b\u540e\uff0c\u6444\u5f71\u673a\u6839\u636e\u66f2\u9762\u8ddf\u8e2a\u5bf9\u8c61\uff0c\u4f7f\u7528\u5bf9\u8be5\u5bf9\u8c61\u7684\u66f4\u6539\u6765\u63a7\u5236\u865a\u62df\u6444\u5f71\u673a\u3002\n\u5728\u573a\u666f\u4e2d\uff0cDeckard\u53ef\u4ee5\u5c06\u5a01\u58eb\u5fcc\u73bb\u7483\u676f\u58f0\u660e\u4e3a\u4ed6\u7684\u63a7\u5236\u5bf9\u8c61\uff0c\u5e76\u5c06\u4ed6\u6c99\u53d1\u7684\u624b\u81c2\u58f0\u660e\u4e3a\u63a7\u5236\u9762\u3002\u5f53\u7136\uff0c\u4ed6\u6240\u5904\u7684\u865a\u62df\u7a7a\u95f4\u6bd4\u6c99\u53d1\u81c2\u8981\u5927\uff0c\u4f46\u5b83\u53ef\u4ee5\u50cf\u9f20\u6807\u548c\u9f20\u6807\u57ab\u4e00\u6837\u5de5\u4f5c\u3002\u4ed6\u53ef\u4ee5\u628a\u5b83\u6361\u8d77\u6765\uff0c\u7136\u540e\u518d\u653e\u56de\u539f\u5904\uff0c\u4ee5\u5ef6\u957f\u8fd0\u52a8\u65f6\u95f4\u3002\n\u8be5\u65b9\u6848\u8003\u8651\u4e86\u9664\u5782\u76f4\u5347\u964d\u4e4b\u5916\u7684\u6240\u6709\u79fb\u52a8\u3002\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u624b\u52bf\u6216\u53e3\u5934\u547d\u4ee4(\u89c1\u4e0b\u6587)\u3002\n\u4f7f\u7528\u6b64\u4ea4\u4e92\u6a21\u578b\u610f\u5473\u7740Deckard\u53ef\u4ee5\u4f7f\u7528\u5a01\u58eb\u5fcc\u73bb\u7483\u676f\uff0c\u4ece\u800c\u5141\u8bb8\u573a\u666f\u4fdd\u6301\u5176\u7eb9\u7406\u548c\u624b\u611f\u3002\u4ed6\u8fd8\u80fd\u559d\u9152\uff0c\u8fd8\u80fd\u8ba9\u4ed6\u7684\u4fa6\u63a2\u4e0a\u53f0\u3002\n\u5f53Deckard\u4e0d\u77e5\u9053\u4ed6\u8981\u627e\u7684\u662f\u4ec0\u4e48\u65f6\uff0c\u95f4\u63a5\u64cd\u7eb5\u5f88\u6709\u5e2e\u52a9\u3002\u4ed6\u53ef\u4ee5\u73af\u987e\u56db\u5468\uff0c\u8d70\u8fd1\u4e00\u4e9b\u4e1c\u897f\u6765\u68c0\u67e5\u5b83\u4eec\u3002\u4f46\u662f\u5f53\u4ed6\u77e5\u9053\u4ed6\u5728\u627e\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u4ed6\u5c31\u4e0d\u5e94\u8be5\u53bb\u627e\u4e86\u3002\u4ed6\u5e94\u8be5\u53ef\u4ee5\u7d22\u8981\u5b83\uff0c\u7136\u540e\u8ba9\u7167\u76f8\u68c0\u67e5\u5458\u7ed9\u4ed6\u770b\u3002\u8fd9\u9700\u8981\u6211\u4eec\u5047\u8bbe\u4e00\u4e9b\u4eba\u5de5\u667a\u80fd\u3002\u5c3d\u7ba1\u201c\u94f6\u7ffc\u6740\u624b\u201d\u663e\u7136\u5305\u62ec\u901a\u7528\u4eba\u5de5\u667a\u80fd\uff0c\u4f46\u8ba9\u6211\u4eec\u5047\u8bbe\u90a3\u79cd\u4eba\u5de5\u667a\u80fd\u5fc5\u987b\u653e\u5728\u4e00\u4e2a\u7c7b\u4f3c\u4eba\u7c7b\u7684\u590d\u5236\u4f53\u4e2d\uff0c\u800c\u4e0d\u80fd\u6324\u5230\u8fd9\u4e2a\u8bbe\u5907\u4e2d\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u8ba9\u6211\u4eec\u53ea\u6269\u5c55\u72ed\u4e49\u4eba\u5de5\u667a\u80fd\u7684\u80fd\u529b\u3002\n\u5176\u4e2d\u4e00\u4e9b\u5c06\u662f\u5bfc\u822a\u548c\u7279\u5b9a\u7684\uff0c\u4f8b\u5982\uff0c\u201c\u7f29\u653e\u5230\u80cc\u666f\u4e2d\u7684\u955c\u5b50\u201d\uff0c\u6216\u8005\u201c\u91cd\u7f6e\u65b9\u5411\u201d\u3002\u6709\u4e9b\u4f1a\u66f4\u62bd\u8c61\u3001\u66f4\u5177\u4f53\u5185\u5bb9\uff0c\u4f8b\u5982\u3002\u201c\u53bb\u53a8\u623f\u201d\u6216\u201c\u9760\u8fd1\u90a3\u4e2a\u7ea2\u8272\u7684\u4e1c\u897f\u201d\u3002\u5982\u679c\u5b83\u6709\u51dd\u89c6\u63a2\u6d4b\u529f\u80fd\uff0c\u4ed6\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u770b\u5b83\u6765\u6307\u793a\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u201c\u9760\u8fd1\u90a3\u4e2a\u7ea2\u8272\u7684\u4e1c\u897f\u201d\uff0c\u540c\u65f6\u770b\u7740\u90a3\u4e2a\u7ea2\u8272\u7684\u4e1c\u897f\u3002\u8003\u8651\u5230\u8fd9\u4e2a\u6295\u673a\u8bbe\u5907\u76843D\u63a8\u8bba\u6027\u8d28\uff0c\u4ed6\u53ef\u80fd\u8fd8\u60f3\u8ffd\u8e2a\u4e00\u4e2a\u63a8\u8bba\u7684\u51fa\u5904\uff0c\u6bd4\u5982\u201c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u8fd9\u628a\u6905\u5b50\u5728\u8fd9\u91cc\uff1f\u201d\u8fd9\u610f\u5473\u7740\u81ea\u7136\u8bed\u8a00\u7684\u751f\u6210\u548c\u7406\u89e3\u3002\n\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u963b\u6b62\u4ed6\u4f7f\u7528\u7535\u5f71\u4e2d\u542c\u5230\u7684\u76f8\u540c\u7684\u901a\u7528\u547d\u4ee4\uff0c\u4f46\u6211\u6000\u7591\u5f53\u4ed6\u4eec\u6709\u8fd9\u6837\u7684\u547d\u4ee4\u548c\u624b\u5934\u7684\u5bf9\u8c61\u63a7\u5236\u5668\u65f6\uff0c\u4f1a\u4e0d\u4f1a\u6709\u4eba\u60f3\u8981\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cDeckard\u4e5f\u4f1a\u6709\u4e00\u4e9b\u901a\u7528\u7684\u641c\u7d22\u80fd\u529b\uff0c\u7528\u6765\u63d0\u95ee\u548c\u6d4b\u8bd5\u60f3\u6cd5\u3002\u201c\u8fd9\u4e9b\u4e1c\u897f\u662f\u5728\u54ea\u91cc\u4e70\u7684\uff1f\u201d\u6216\u8005\u968f\u540e\uff0c\u201c\u6709\u4ed6\u8d2d\u4e70\u7684\u5546\u5e97\u7684\u5f55\u50cf\u5e26\u5417\uff1f\u201d\u751a\u81f3\uff0c\u201c\u5728\u4f60\u770b\u6765\u90a3\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d(\u6b63\u786e\u7684\u7b54\u6848\u5e94\u8be5\u662f\uff0c\u201c\u55ef\uff0c\u90a3\u770b\u8d77\u6765\u50cf\u662f\u963f\u8bfa\u83f2\u5c3c\u753b\u50cf\u91cc\u7684\u955c\u5b50\uff0cRidley\u2026\u3002\u6211\u662f\u8bf4\u2026\u3002Rick*\u201c)\u5b83\u53ef\u4ee5\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\uff0c\u5e76\u63d0\u4f9b\u5b83\u6709\u6743\u8bbf\u95ee\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u989d\u5916\u4fe1\u606f\uff0c\u5c31\u50cfGoogle Lens\u6216IBM Watson\u56fe\u50cf\u8bc6\u522b\u6240\u505a\u7684\u90a3\u6837\u3002\n\u6700\u540e\uff0c\u4ed6\u5e94\u8be5\u80fd\u591f\u8be2\u95ee\u7b80\u5355\u7684\u4e8b\u5b9e\uff0c\u770b\u770b\u68c0\u67e5\u5458\u662f\u5426\u77e5\u9053\u6216\u80fd\u627e\u5230\u5b83\u3002\u4f8b\u5982\uff0c\u201c\u573a\u666f\u4e2d\u6709\u591a\u5c11\u4eba\uff1f\u201d\n\u6240\u6709\u8fd9\u4e00\u5207\u4ecd\u7136\u9700\u8981Deckard\u53d1\u8d77\u884c\u52a8\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e9b\u4ee3\u7406\u601d\u7ef4\u6765\u8fdb\u4e00\u6b65\u589e\u5f3a\u5b83\u3002\n\u4ece\u4ee3\u7406\u7684\u89d2\u5ea6\u601d\u8003\u5c31\u662f\u95ee\uff0c\u201c\u7cfb\u7edf\u53ef\u4ee5\u4e3a\u7528\u6237\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u9700\u8981\u7528\u6237\u7684\u5173\u6ce8\uff1f\u201d(\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u591a\uff0c\u6211\u5199\u4e86\u4e00\u672c\u5173\u4e8e\u5b83\u7684\u4e66\u3002)\u3002\u5728\u8fd9\u91cc\uff0cAI\u5e94\u8be5\u548cDeckard\u4e00\u8d77\u5de5\u4f5c\u3002\u4e0d\u53ea\u662f\u5efa\u7acb\u63a8\u8bba\u548c\u5bf9\u89c2\u6d4b\u8fdb\u884c\u5206\u7c7b\uff0c\u800c\u4e14\u5728\u6574\u4e2a\u573a\u666f\u4e2d\u8fdb\u884c\u5f02\u5e38\u68c0\u6d4b\u3002\u5176\u4e2d\u4e00\u4e9b\u5c06\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u6bd4\u5982\u201c\u8981\u77e5\u9053\u9ec4\u6cb9\u5200\u662f\u5b9c\u5bb6\u7684\uff0c\u800c\u9910\u5177\u7684\u5176\u4f59\u90e8\u5206\u662f\u514b\u91cc\u65af\u6258\u5f17\u00b7\u62c9\u683c\u83f2\u5c14\u5fb7(Christofle Lagerfeld)\u7684\u3002\u8fd9\u91cc\u6709\u4e9b\u4e0d\u5bf9\u52b2\u3002\u201c\u3002\u4e0d\u8fc7\uff0c\u5fb7\u5361\u4f1a\u53d1\u73b0\u5176\u4e2d\u4e00\u4e9b\u6709\u7528\u7684\u3002\u53ef\u80fd\u8981\u7531Deckard\u6765\u5ba1\u67e5\u603b\u7ed3\uff0c\u5e76\u51b3\u5b9a\u54ea\u4e9b\u503c\u5f97\u8fdb\u4e00\u6b65\u8c03\u67e5\u3002\n\u5b83\u4e5f\u5e94\u8be5\u80fd\u591f\u5e2e\u52a9\u4ed6\u5b9e\u73b0\u4ed6\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0c\u8b66\u65b9\u5df2\u5c06\u4f50\u62c9\u7684\u7167\u7247\u5b58\u6863\u3002(\u5979\u7684\u8096\u50cf\u751a\u81f3\u5728\u6211\u4eec\u4e00\u5f00\u59cb\u770b\u5230\u7684\u6863\u6848\u4e2d\u65cb\u8f6c\uff0c\u6240\u4ee5\u5b83\u77e5\u9053\u5979\u57283D\u4e2d\u7684\u6837\u5b50\uff0c\u4ee5\u4fbf\u8fdb\u884c\u975e\u5e38\u590d\u6742\u7684\u6a21\u5f0f\u5339\u914d\u3002)\u3002\u5f53\u7279\u5de5\u5728\u9006\u5c04\u7ebf\u8ddf\u8e2a\u573a\u666f\u5e76\u91cd\u5efa\u63a8\u65ad\u7684\u7a7a\u95f4\u65f6\uff0c\u4e00\u65e6\u68c0\u6d4b\u5230\u4efb\u4f55\u9762\u5b54\uff0c\u5b83\u5c31\u5e94\u8be5\u68c0\u67e5\u5934\u53f7\u901a\u7f09\u72af\u540d\u5355\uff0c\u7279\u522b\u662f\u5fb7\u5361\u5fb7\u7684\u6848\u4ef6\u6587\u4ef6\u3002\u5b83\u4e0d\u5e94\u8be5\u7b49\u4ed6\u627e\u5230\u5b83\u3002\u8fd9\u518d\u6b21\u7ed9\u5267\u672c\u5e26\u6765\u4e86\u4e00\u4e9b\u6311\u6218\u3002\u5f53\u6280\u672f\u4eba\u5458\u53ef\u4ee5\u800c\u4e14\u5e94\u8be5\u5728\u770b\u5230\u56fe\u50cf\u51e0\u79d2\u949f\u540e\u627e\u5230Zhora\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u7559\u4f4f\u82f1\u96c4Deckard\uff1f\u8fd9\u5bf9\u4f5c\u5bb6\u6765\u8bf4\u662f\u4e00\u4e2a\u65b0\u7684\u6311\u6218\uff0c\u4f46\u5bf9\u4e8e\u53ef\u4fe1\u5ea6\u6765\u8bf4\uff0c\u8fd9\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\n\u5fb7\u5361\u5fb7\u4ece\u91cc\u6602\u7684\u516c\u5bd3\u91cc\u62ff\u51fa\u4e00\u74f6\u5a01\u58eb\u5fcc\u3001\u4e00\u53ea\u73bb\u7483\u676f\u548c\u90a3\u5f20\u7167\u7247\u3002\u4ed6\u5750\u5728\u6c99\u53d1\u4e0a\uff0c\u628a\u7167\u7247\u653e\u5728\u5496\u5561\u684c\u4e0a\uff0c\u8bf4\u201c\u7167\u7247\u68c0\u67e5\u5458\uff1f\u201d\u653e\u5728\u4e00\u5f20\u6742\u4e71\u7684\u8336\u51e0\u4e0a\u7684\u673a\u5668\u6062\u590d\u4e86\u6d3b\u529b\u3002\u5fb7\u5361\u7ee7\u7eed\u8bf4\uff0c\u201c\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u3002\u201d\u4ed6\u6307\u7740\u90a3\u5f20\u7167\u7247\u3002\u4e00\u6761\u7ec6\u957f\u7684\u5149\u7ebf\u626b\u8fc7\u56fe\u50cf\u3002\u626b\u63cf\u7684\u56fe\u50cf\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\uff0c\u4ece\u8fb9\u7f18\u62c9\u8fd1\u4e00\u70b9\u3002\u6807\u7b7e\u4e0a\u5199\u7740\u201c\u5ef6\u4f38\u573a\u666f\u201d\uff0c\u6211\u4eec\u770b\u5230\u6846\u67b6\u5916\u7684\u516c\u5bd3\u7684\u7ebf\u6846\u8868\u793a\u5f00\u59cb\u6210\u5f62\u3002\u4e00\u5c0f\u90e8\u5206\u5f02\u5e38\u60c5\u51b5\u5f00\u59cb\u51fa\u73b0\u5728\u5de6\u4fa7\u3002\u5fb7\u5361\u5f80\u676f\u5b50\u91cc\u5012\u4e86\u51e0\u6307\u5a01\u58eb\u5fcc\u3002\u4ed6\u559d\u4e86\u4e00\u676f\uff0c\u8bf4\uff0c\u201c\u63a7\u5236\u5458\uff0c\u201d\u7136\u540e\u628a\u676f\u5b50\u653e\u5728\u6c99\u53d1\u6276\u624b\u4e0a\u3002\u9762\u5411\u68c0\u67e5\u5668\u7684\u624b\u81c2\u4e0a\u4f1a\u51fa\u73b0\u5c0f\u7684\u6295\u5f71\u56fe\u5f62\u3002\u4ed6\u8bf4\uff0c\u201c\u597d\u7684\u3002\u6709\u4eba\u8eb2\u8d77\u6765\u4e86\u5417\uff1f\u642c\u5bb6\uff1f\u201c\u3002\u68c0\u67e5\u5458\u56de\u7b54\u8bf4\uff1a\u201c\u4e0d\u662f\uff0c\u4e5f\u4e0d\u662f\u3002\u201d\u5fb7\u5361\u5fb7\u770b\u7740\u5c4f\u5e55\u8bf4\uff0c\u201c\u653e\u5927\u5230\u90a3\u53ea\u624b\u81c2\uff0c\u7136\u540e\u9489\u5728\u8138\u4e0a\u3002\u201d\u4ed6\u9006\u65f6\u9488\u8f6c\u52a8\u6c99\u53d1\u6276\u624b\u4e0a\u7684\u73bb\u7483\uff0c\u201c\u65e0\u4eba\u673a\u201d\u56f4\u7ed5\u7740\u91cc\u6602\u7684\u8138\u65cb\u8f6c\uff0c\u6a21\u7cca\u7684\u90e8\u5206\u7528\u84dd\u8272\u6e32\u67d3\u3002\u4ed6\u95ee\u9053\uff1a\u201c\u4f60\u6709\u4ec0\u4e48\u4fe1\u5fc3\uff1f\u201d\u68c0\u67e5\u5458\u56de\u7b54\u8bf4\uff0c\u201c95\u3002\u201d\u5728\u5c4f\u5e55\u7684\u4e00\u4fa7\uff0c\u7763\u5bdf\u8986\u76d6\u4e86\u91cc\u6602\u7684\u8b66\u5bdf\u4e2a\u4eba\u8d44\u6599\u3002\u5fb7\u5361\u5fb7\u8bf4\uff0c\u201c\u89e3\u5f00\u201d\uff0c\u7136\u540e\u4e3e\u8d77\u9152\u676f\u559d\u4e86\u4e00\u676f\u3002\u4ed6\u4ece\u6c99\u53d1\u8d70\u5230\u5730\u677f\u4e0a\uff0c\u66f4\u4e13\u6ce8\u5730\u51dd\u89c6\u7740\uff0c\u7136\u540e\u628a\u996e\u6599\u653e\u5728\u5496\u5561\u684c\u4e0a\u3002\u201c\u65b0\u7684\u8868\u9762\uff0c\u201d\u4ed6\u8bf4\uff0c\u7136\u540e\u987a\u65f6\u9488\u8f6c\u52a8\u73bb\u7483\u676f\u3002\u6444\u50cf\u673a\u8f6c\u8fc7\u6765\uff0c\u4ed6\u770b\u5230\u4e86\u4e00\u95f4\u5367\u5ba4\u3002\u201c\u6211\u4eec\u600e\u4e48\u4f1a\u6709\u8fd9\u4e48\u5927\u7684\u63a8\u8bba\u5462\uff1f\u201d\u4ed6\u95ee\u3002\u68c0\u67e5\u5458\u56de\u7b54\u8bf4\uff1a\u201c\u5927\u5385\u91cc\u7684\u51f8\u9762\u955c\u5b50\u2026\u201d\u3002\u5fb7\u5361\u6253\u65ad\u4e86\u4ed6\u7684\u8bdd\uff0c\u8bf4\uff1a\u201c\u7b49\u4e00\u4e0b\u3002\u90a3\u662f\u4e00\u53ea\u811a\u5417\uff1f\u4f60\u8bf4\u8fc7\u6ca1\u6709\u4eba\u8eb2\u8d77\u6765\u3002\u201c\u3002\u68c0\u67e5\u5458\u56de\u7b54\u8bf4\uff1a\u201c\u8fd9\u4e2a\u4eba\u6ca1\u6709\u8eb2\u85cf\u3002\u4ed6\u4eec\u4f3c\u4e4e\u5728\u7761\u89c9\u3002\u201c\u3002\u5fb7\u5361\u5fb7\u7ffb\u4e86\u7ffb\u4ed6\u7684\u773c\u775b\u3002\u4ed6\u8bf4\uff0c\u201c\u653e\u5927\u5230\u8138\u548c\u522b\u9488\u3002\u201d\u89c6\u56fe\u653e\u5927\u5230\u8138\u90e8\uff0c\u4f46\u76f8\u673a\u4e0e\u5979\u7684\u4e0b\u5df4\u6c34\u5e73\uff0c\u56e0\u6b64\u5f88\u96be\u8fa8\u8ba4\u51fa\u8138\u90e8\u3002\u5fb7\u5361\u5fb7\u5c06\u73bb\u7483\u5411\u524d\u503e\u659c\uff0c\u76f8\u673a\u5347\u8d77\uff0c\u805a\u7126\u5728\u4e00\u5f20\u84dd\u8272\u7684\u7ebf\u6846\u9762\u5b54\u4e0a\u3002\u8fea\u5361\u5fb7\u8bf4\uff0c\u201c\u4f60\u89c9\u5f97\u90a3\u50cf\u662f\u4f50\u62c9\u5417\uff1f\u201d\u7763\u5bdf\u76d6\u4e0a\u4e86\u5979\u7684\u8b66\u65b9\u6863\u6848\uff0c\u56de\u7b54\u8bf4\uff0c\u201c63%\u7684\u4eba\u662f\u8fd9\u6837\u505a\u7684\u3002\u201d\u8fea\u5361\u5fb7\u8bf4\uff0c\u201c\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u65e9\u8bf4\u5462\uff1f\u201d\u68c0\u67e5\u5458\u56de\u7b54\u8bf4\uff1a\u201c\u6211\u7684\u95e8\u69db\u8bbe\u4e3a66%\u3002\u201d\u5fb7\u5361\u8bf4\uff0c\u201c\u9a6c\u4e0a\u7ed9\u6211\u4e00\u4efd\u786c\u62f7\u8d1d\u3002\u201d\u4ed6\u4e3e\u8d77\u9152\u676f\uff0c\u559d\u5b8c\u4e86\u9152\u3002\n\u8fd9\u4e00\u573a\u666f\u4fdd\u6301\u4e86\u539f\u4f5c\u7684\u8d28\u5730\u548c\u57fa\u8c03\uff0c\u5e76\u624e\u8425\u5728\u72ed\u9698AI\u7684\u5c40\u9650\u6027\u4e0a\uff0c\u8ba9\u5fb7\u5361\u6210\u4e3a\u82f1\u96c4\u3002\u4e5f\u6ca1\u6709\u8ba9\u4ed6\u8bbe\u8ba1\u4e00\u4e2a\u865a\u62df\u7684\u5927\u9677\u9631\u3002\n\u83b7\u5f97\u6700\u4f73\u63a5\u53e3\u63d0\u540d\u7684\u7535\u5f71\u5e94\u5bf9\u4e86\u4e00\u9879\u975e\u540c\u5bfb\u5e38\u7684\u6311\u6218\uff0c\u5373\u8981\u505a\u5230\u53ef\u4fe1\uff0c\u5e76\u5e2e\u52a9\u63cf\u7ed8\u51fa\u6545\u4e8b\u4e16\u754c\u7684\u56fe\u666f\u3002\u4ed6\u4eec\u5728\u7528\u6295\u673a\u6280\u672f\u8bb2\u6545\u4e8b\u65b9\u9762\u8fbe\u5230\u4e86\u6700\u5148\u8fdb\u7684\u6c34\u5e73\u3002\u6700\u4f73\u53d9\u4e8b\u63d0\u540d\u5206\u522b\u662f\u201c\u6211\u662f\u6bcd\u4eb2\u201d\u3001\u201c\u8718\u86db\u4fa0\uff1a\u8fdc\u79bb\u5bb6\u56ed\u201d\u548c\u201c\u9ed1\u8863\u4eba\uff1a\u56fd\u9645\u7248\u201d\u3002\n\u5728\u6765\u81eaMCU\u7684\u7b2c\u4e8c\u90e82019\u5e74\u63d0\u540d\u7535\u5f71\u4e2d\uff0c\u5f7c\u5f97\u3002\n..", "note_en": "Back to  Blade Runner. I mean, the pandemic is  still pandemicking, but maybe this will be a nice distraction while you shelter in place. Because you\u2019re smart, sheltering in place as much as you can, and not injecting disinfectants . And, like so many other technologies in this film, this will take a while to deconstruct, critique, and reimagine.\n   Doing his detective work, Deckard retrieves a set of snapshots from Leon\u2019s hotel room, and he brings them home with with. Something in the one pictured above catches his eye, and he wants to investigate it in greater detail. He takes the photograph and inserts it in a black device he keeps in his living room.\n Note: I\u2019ll try and describe this interaction in text, but it is much easier to conceptualize after viewing it. Owing to copyright restrictions, I cannot upload this length of video with the original audio, so I have added pre-rendered closed captions to it, below. All dialogue in the clip is Deckard.\n  He inserts the snapshot into a horizontal slit and turns the machine on. A thin, horizontal orange line glows on the left side of the front panel. A series of seemingly random-length orange lines begin to chase one another in a single-row space that stretches across the remainder of the panel and continue to do so throughout Deckard\u2019s use of it. (Imagine a news ticker, running backwards, where the \u201cheadlines\u201d are glowing amber lines.) This seems useless and an absolutely pointless distraction for Deckard, putting high-contrast motion in his peripheral vision, which fights for attention with the actual, interesting content down below.\n  After a second, the screen reveals a blue grid, behind which the scan of the snapshot appears. He stares at the image in the grid for a moment, and speaks a set of instructions,  \u201cEnhance 224 to 176.\u201d\n In response, three data points appear overlaying the image at the bottom of the screen. Each has a two-letter label and a four-digit number, e.g.  \u201cZM 0000 NS 0000 EW 0000.\u201d The NS and EW\u2014presumably North-South and East-West coordinates, respectively\u2014immediately update to read,  \u201cZM 0000 NS 0197 EW 0334.\u201d After updating the numbers, the screen displays a crosshairs, which target a single rectangle in the grid.\n  A new rectangle then zooms in from the edges to match the targeted rectangle, as the ZM number\u2014presumably zoom, or magnification\u2014increases. When the animated rectangle reaches the targeted rectangle, its outline blinks yellow a few times. Then the contents of the rectangle are enlarged to fill the screen, in a series of steps which are punctuated with sounds similar to a mechanical camera aperture. The enlargement is perfectly resolved. The overlay disappears until the next set of spoken commands. The system response between Deckard\u2019s issuing the command and the device\u2019s showing the final enlarged image is about 11 seconds.\n Deckard studies the new image for awhile before issuing another command. This time he says,  \u201cEnhance.\u201d The image enlarges in similar clacking steps until he tells it,  \u201cStop.\u201d\n Other instructions he is heard to give include  \u201cmove in, pull out, track right, center in, pull back, center, and pan right.\u201d Some include discrete instructions, such as,  \u201cTrack 45 right\u201d while others are relative commands that the system obeys until told to stop, such as  \u201cGo right.\u201d\n Using such commands he isolates part of the image that reveals an important clue, and he speaks the instruction,  \u201cGive me a hard copy right there.\u201d The machine prints the image, which Deckard uses to help find the replicant pictured.\n  I\u2019d like to point out one bit of sophistication before the critique. Deckard can issue a command with or without a parameter, and the inspector knows what to do. For example,  \u201cTrack 45 right\u201d and  \u201cTrack right.\u201d Without the parameter, it will just do the thing repeatedly until told to stop. That helps Deckard issue the same basic command when he knows exactly where he wants to look and when doesn\u2019t know what exactly what he\u2019s looking for. That\u2019s a nice feature of the language design.\n But still, asking him to provide step-by-step instructions in this clunky way feels like some high-tech  Big Trak. (I tried to find a reference that was as old as the film.) And that\u2019s not all\u2026\n  Can I go back and mention that amber distracto-light? Because it\u2019s distracting. And pointless. I\u2019m not mad. I\u2019m just disappointed.\n It sure would be nice if any of  the numbers on screen made sense, and had any bearing with the numbers Deckard speaks, at any time during the interaction. For instance, the initial zoom (I checked in Photoshop) is around 304%, which is neither the 224 or 176 that Deckard speaks.\n It might be that each square has a number, and he simply has to name the two squares at the extents of the zoom he wants, letting the machine find the extents, but where is the labeling? Did he have to memorize an address for each pixel? How does that work at arbitrary levels of zoom?\n  Why the  seizure-inducing flashing in the transition sequences? Sure, I get that lots of technologies have unfortunate effects when constrained by mechanics, but this is digital.\n Why is the printed picture so unlike the still image where he asks for a hard copy?\n Gaze at the reflection in Ford\u2019s hazel, hazel eyes, and it\u2019s clear he\u2019s playing Missile Command, rather than paying attention to this interface at all. (OK, that\u2019s the filmmaker\u2019s issue, not a part of the interface, but still, come on.)\n   So if 1982 Ridley Scott was telling me in post that we couldn\u2019t reshoot Harrison Ford, and we had to make it just work with what we had, here\u2019s what I\u2019d do\u2026\n Squash the grid so the cells match the 4:3 ratio of the NTSC screen. Overlay the address of each cell, while highlighting column and row identifiers at the edges. Have the first cell\u2019s outline illuminate as he speaks it, and have the outline expand to encompass the second named cell. Then zoom, removing the cell labels during the transition. When at anything other than full view, display a map across four cells that shows the zoom visually in the context of the whole.\n  With this interface, the structure of the existing conversation makes more sense. When Deckard said,  \u201cEnhance 203 to 608\u201d the thing would zoom in on the mirror, and the small map would confirm.\n The numbers wouldn\u2019t match up, but it\u2019s pretty obvious from the final cut that Scott didn\u2019t care about that (or, more charitably, ran out of time). Anyway I would be doing this under protest, because I would argue this interaction needs to be fixed in the script.\n  What\u2019s really nifty about this technology is that it\u2019s not just a photograph. Look close in the scene, and Deckard isn\u2019t just doing  CSI Enhance! commands (or, to be less mocking, AI  upscaling). He\u2019s using the photo inspector to  look around corners and at objects that are reconstructed from the smallest reflections. So we can think of the interaction  like he\u2019s controlling a drone through a 3D still life, looking for a lead to help him further the case.\n    To redesign it, we have to decide at a foundational level  how we think this works, because it will color what the display looks like. Is this all data that\u2019s captured from some crazy 3D camera and available in the image? Or is it being inferred from details in the 2 dimensional image? Let\u2019s call the first the  3D capture, and the second the  3D inference.\n If we decide this is a 3-D capture, then all the data that he observes through the machine has the same degree of confidence. If, however, we decide  this is a 3D inferrer, Deckard needs to treat the inferred data with more skepticism than the data the camera directly captured. The 3-D inferrer is the harder problem, and raises some issues that we must deal with in modern AI, so let\u2019s just say that\u2019s the way this speculative technology works.\n The first thing the display should do it make it clear what is observed and what is inferred. How you do this is partly a matter of visual design and style, but partly a matter of diegetic logic. The first pass would be to render everything in the  camera frustum photo-realistically, and then render everything outside of that in a way that signals its confidence level. The comp below illustrates one way this might be done.\n  In the comp, Deckard has turned the \u201cdrone\u201d from the \u201cactual photo,\u201d seen off to the right, toward the inferred space on the left. The  monochrome color treatment provides that first high-confidence signal.\n In the scene, the primary inference would come from reading the reflections in the disco ball overhead lamp, maybe augmented with plans for the apartment that could be found online, or maybe purchase receipts for appliances, etc. Everything it can reconstruct from the reflection and high-confidence sources has  solid black lines, a second-level signal.\n The smaller knickknacks that are out of the reflection of the disco ball, and implied from other, less reflective surfaces, are  rendered without the black lines and blurred. This provides a signal that the algorithm has a very low confidence in its inference.\n This is just one (not very visually interesting) way to handle it, but should illustrate that, to be believable, the photo inspector shouldn\u2019t have a single rendering style outside the frustum. It would need something akin to these levels to help Deckard instantly recognize how much he should trust what he\u2019s seeing.\n  Modern CGI loves big volumetric projections. (e.g. it was the central novum of last year\u2019s  Fritz winner,  Spider-Man: Far From Home.) And it would be a wonderful juxtaposition to see Deckard in a holodeck-like recreation of Leon\u2019s apartment, with all the visual treatments described above.\n   \u2026that would kind of spoil the mood of the scene. This isn\u2019t just about Deckard\u2019s finding a clue, we also see a little about who he is and what his life is like. We see the smoky apartment. We see the drab couch. We see the stack of old detective machines. We see the neon lights and annoying advertising lights swinging back and forth across his windows. Immersing him in a big volumetric projection would lose all this atmospheric stuff, and so I\u2019d recommend keeping it either a small contained VP, like we saw in  Minority Report, or just keep it a small flat screen.\n  OK, so we have an idea about how the display would (and shouldn\u2019t) look, let\u2019s move on to talk about the inputs.\n  To talk about inputs, then, we have to return to a favorite topic of mine, and that is the  level of agency we want for the interaction. In short, we need to decide how much work the machine is doing. Is the machine just a  manual tool that Deckard has to manipulate to get it to do anything? Or does it actively  assist him? Or, lastly, can it even do the job while his attention is on something else\u2014that is, can it act as an  agent on his behalf? Sophisticated tools can be a blend of these modes, but for now, let\u2019s look at them individually.\n  This is how the photo inspector works in  Blade Runner. It can do things, but Deckard has to tell it exactly what to do. But we can still improve it in this mode.\n We could give him well-mapped  physical controls, like a remote control for this conceptual drone.  Flight controls wind up being a recurring topic on this blog (and even came up already in the  Blade Runner reviews with the  Spinners) so I could go on about how best to do that, but I think that a handheld controller would ruin the feel of this scene, like Deckard was sitting down to play a video game rather than do off-hours detective work.\n  Similarly, we could talk about a  gestural interface, using some of the  synecdochic techniques we\u2019ve seen before in  Ghost in the Shell. But again, this would spoil the feel of the scene, having him look more like John Anderton in front of a tiny-TV version of  Minority Report\u2019s famous crime scrubber.\n  One of the things that gives this scene its emotional texture is that Deckard is drinking a glass of whiskey while doing his detective homework. It shows how  low he feels. Throwing one back is clearly part of his evening routine, so much a habit that he does it despite being preoccupied about  Leon\u2019s case. How can we keep him on the couch, with his hand on the lead crystal whiskey glass, and  still investigating the photo? Can he use  it to investigate the photo?\n Here I recommend a bit of  ad-hoc  tangible user interface. I first  backworlded this for   The Star Wars Holiday Special, but I think it could work here, too. Imagine that the photo inspector has a high-resolution camera on it, and the interface allows Deckard to declare any object that he wants as a control object. After the declaration, the camera tracks the object against a surface, using the changes to that object to control the virtual camera.\n In the scene, Deckard can declare the whiskey glass as his control object, and the arm of his couch as the control surface. Of course the virtual space he\u2019s in is bigger than the couch arm, but it could work like a mouse and a mousepad. He can just pick it up and set it back down again to extend motion.\n  This scheme takes into account all movement except vertical lift and drop. This could be a gesture or a spoken command (see below).\n Going with this interaction model means Deckard can use the whiskey glass, allowing the scene to keep its texture and feel. He can still drink and get his detective on.\n   Indirect manipulation is helpful for when Deckard doesn\u2019t know what he\u2019s looking for. He can look around, and get close to things to inspect them. But when he knows what he\u2019s looking for, he shouldn\u2019t have to go find it. He should be able to just ask for it, and have the photo inspector show it to him. This requires that we presume some AI. And even though  Blade Runner clearly includes General AI, let\u2019s presume that that kind of AI has to be housed in a human-like replicant, and can\u2019t be squeezed into this device. Instead, let\u2019s just extend the capabilities of  Narrow AI.\n Some of this will be navigational and specific,  \u201cZoom to that mirror in the background,\u201d for instance, or,  \u201cReset the orientation.\u201d Some will more abstract and content-specific, e.g.  \u201cHead to the kitchen\u201d or  \u201cGet close to that red thing.\u201d If it had gaze detection, he could even indicate a location by looking at it.  \u201cGet close to that red thing there,\u201d for example, while looking at the red thing. Given the 3D inferrer nature of this speculative device, he might also want to trace the provenance of an inference, as in,  \u201cHow do we know this chair is here?\u201d This implies  natural language generation as well as understanding.\n There\u2019s nothing from stopping him using the same general commands heard in the movie, but I doubt anyone would want to use those when they have commands like this and the object-on-hand controller available.\n Ideally Deckard would have some general search capabilities as well, to ask questions and test ideas.  \u201cWhere were these things purchased?\u201d or subsequently,  \u201cIs there video footage from the stores where he purchased them?\u201d or even,  \u201cWhat does that look like to you?\u201d (The correct answer would be,  \u201cWell that looks like the mirror from the Arnolfini portrait, Ridley\u2026I mean\u2026Rick*\u201d) It can do pattern recognition and provide as much extra information as it has access to, just like  Google Lens or  IBM Watson image recognition does.\n  Finally, he should be able to ask after simple facts to see if the inspector knows or can find it. For example,  \u201cHow many people are in the scene?\u201d\n All of this still requires that Deckard initiate the action, and we can augment it further with a little agentive thinking.\n  To think in terms of agents is to ask,  \u201cWhat can the system do  for the user, but not requiring the user\u2019s attention?\u201d (I wrote  a book about it if you want to know more.) Here, the AI should be working alongside Deckard. Not just building the inferences and cataloguing observations, but doing  anomaly detection on the whole scene as it goes. Some of it is going to be pointless, like  \u201cBe aware the butter knife is from IKEA, while the rest of the flatware is Christofle Lagerfeld. Something\u2019s not right, here.\u201d But some of it Deckard will find useful. It would probably be up to Deckard to review summaries and decide which were worth further investigation.\n It should also be able to help him with his goals. For example, the police had Zhora\u2019s picture on file. (And her portrait even rotates in the dossier we see at the beginning, so it knows what she looks like in 3D for very sophisticated pattern matching.) The moment the agent\u2014while it was reverse  ray tracing the scene and reconstructing the inferred space\u2014detects any faces, it should run the face through a most wanted list, and specifically Deckard\u2019s case files. It shouldn\u2019t wait for him to find it. That again poses some challenges to the script. How do we keep Deckard the hero when the tech can and should have found Zhora seconds after being shown the image? It\u2019s a new challenge for writers, but it\u2019s becoming increasingly important for believability.\n    Deckard grabs a bottle of whiskey, a glass, and the photo from Leon\u2019s apartment. He sits on his couch, places the photo on the coffee table and says  \u201cPhoto inspector?\u201d The machine on top of a cluttered end table comes to life. Deckard continues,  \u201cLet\u2019s look at this.\u201d He points to the photo. A thin line of light sweeps across the image. The scanned image appears on the screen, pulled in a bit from the edges. A label reads, \u201cExtending scene,\u201d and we see wireframe representations of the apartment outside the frame begin to take shape. A small list of anomolies begins to appear to the left. Deckard pours a few fingers of whiskey into the glass. He takes a drink and says,  \u201cController,\u201d before putting the glass on the arm of his couch. Small projected graphics appear on the arm facing the inspector. He says,  \u201cOK. Anyone hiding? Moving?\u201d The inspector replies,  \u201cNo and no.\u201d Deckard looks at the screen he says,  \u201cZoom to that arm and pin to the face.\u201d He turns the glass on the couch arm counterclockwise, and the \u201cdrone\u201d revolves around to show Leon\u2019s face, with the shadowy parts rendered in blue. He asks,  \u201cWhat\u2019s the confidence?\u201d The inspector replies,  \u201c95.\u201d On the side of the screen the inspector overlays Leon\u2019s police profile. Deckard says,  \u201cunpin\u201d and lifts his glass to take a drink. He moves from the couch to the floor to stare more intently and places his drink on the coffee table.  \u201cNew surface,\u201d he says, and turns the glass clockwise. The camera turns and he sees into a bedroom.  \u201cHow do we have this much inference?\u201d he asks. The inspector replies,\u00a0 \u201cThe convex mirror in the hall\u2026\u201d Deckard interrupts, saying,  \u201cWait. Is that a foot? You said no one was hiding.\u201d The inspector replies,  \u201cThe individual is not hiding. They appear to be sleeping.\u201d Deckard rolls his eyes. He says,  \u201cZoom to the face and pin.\u201d The view zooms to the face, but the camera is level with her chin, making it hard to make out the face. Deckard tips the glass forward and the camera rises up to focus on a blue, wireframed face. Deckard says,  \u201cThat look like Zhora to you?\u201d The inspector overlays her police file and replies,  \u201c63% of it does.\u201d Deckard says,  \u201cWhy didn\u2019t you say so?\u201d The inspector replies,  \u201cMy threshold is set to 66%.\u201d Deckard says, \u201c Give me a hard copy right there.\u201d He raises his glass and finishes his drink.\n  This scene keeps the texture and tone of the original, and camps on the limitations of Narrow AI to let Deckard be the hero. And doesn\u2019t have him programming a virtual Big Trak.\n                The movies nominated for Best Interfaces manage the extraordinary challenge of being believable  and helping to paint a picture of the world of the story. They advance the state of the art in telling stories with speculative technology. The nominees for Best Narrative are  I Am Mother, Spider Man: Far From Home, and  Men in Black: International.\n     In the second 2019 nominee movie from the MCU, Peter\n......", "posttime": "2020-05-17 04:41:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5e7b,fi,\u770b\u5230", "title": "\u79d1\u5e7b\u754c\u9762", "title_en": "Sci-fi Interfaces", "transed": 1, "url": "https://scifiinterfaces.com/", "via": "", "real_tags": ["\u79d1\u5e7b", "fi", "\u770b\u5230"]}]