[{"category": "", "categoryclass": "", "imagename": "67b7a85eaa8b05887a33b151c8d7f9f2.png", "infoid": 1002664, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u9605\u8bfb\u5173\u4e8eJavaScript\u627f\u8bfa\u7684MDN\u6587\u6863\u65f6\uff0c\u6211\u610f\u8bc6\u5230Promise.all\u548cPromise.allSetted\u4e4b\u95f4\u7684\u533a\u522b\u5e76\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u3002\u6765\u81ea\u4e0a\u9762\u94fe\u63a5\u7684\u6587\u6863\uff1a\u627f\u8bfa\u662f\u5728\u521b\u5efa\u627f\u8bfa\u65f6\u4e0d\u4e00\u5b9a\u77e5\u9053\u7684\u503c\u7684\u4ee3\u7406\u3002\u5b83\u5141\u8bb8\u60a8\u5c06\u5904\u7406\u7a0b\u5e8f\u4e0e\u5f02\u6b65\u64cd\u4f5c\u7684\u6700\u7ec8\u6210\u529f\u503c\u6216\u5931\u8d25\u539f\u56e0\u76f8\u5173\u8054\u3002\n\u627f\u8bfa\u5904\u4e8e\u4ee5\u4e0b\u72b6\u6001\u4e4b\u4e00\uff1a\u5f85\u5b9a\uff1a\u521d\u59cb\u72b6\u6001\uff0c\u65e2\u4e0d\u5c65\u884c\u4e5f\u4e0d\u62d2\u7edd\u3002\u5df2\u5b8c\u6210\uff1a\u8868\u793a\u64cd\u4f5c\u6210\u529f\u5b8c\u6210\u3002Rejected\uff1a\u8868\u793a\u64cd\u4f5c\u5931\u8d25\u3002\n\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5b9e\u4f8b\u5316\u627f\u8bfa\uff1aTLDR\uff1bPromise.all\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u627f\u8bfa\u65e0\u6cd5\u89e3\u6790\uff0c\u90fd\u5c06\u7acb\u5373\u62d2\u7edd\uff0c\u800cPromise.allSetted\u5c06\u7b49\u5f85\u6240\u6709\u627f\u8bfa\u7684\u5b8c\u6210\u3002\u5411Promise.all()\u4f20\u9012\u4e00\u4e2a\u53ef\u8fed\u4ee3(\u901a\u5e38\u662f\u7531\u5176\u4ed6\u627f\u8bfa\u7ec4\u6210\u7684\u6570\u7ec4)\uff0c\u5e76\u5c1d\u8bd5\u89e3\u6790\u6240\u6709\u627f\u8bfa\u3002\u5982\u679c\u8fd9\u4e9b\u627f\u8bfa\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u629b\u51fa\u4f8b\u5916\u6216\u62d2\u7edd\uff0cPromise.all\u5c06\u7acb\u5373\u8c03\u7528\u5176\u62d2\u7edd\u3002\u60a8\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528try/catch\u6216.catch()\u5c06Promise.all()\u62ec\u8d77\u6765\u3002const promiseFunction=Async()=&gt\uff1b{const ResolvingPromise=new Promise(Resolve=&gt\uff1bsetTimeout(()=&gt\uff1bResolve(&#39\uff1bSuccess&39\uff1b)\uff0c1000))\uff1bConst RejectingPromise=New Promise((Resolve\uff0cReject)=&gt\uff1bsetTimeout(()=&gt\uff1bReject(&#39\uff1bsetTimeout(&#39\uff1bFail&39\uff1b)\uff0c500))\uff1b\u5c1d\u8bd5{const\u3002all([ResolvingPromise\uff0cRejectingPromise])\uff1b}catch(E){//e\u662f&#39\uff1bFAIL&39\uff1b\uff0c\u8fd9\u662f\u6765\u81eaRejectingPromise//ResolvingPromise=Promise{&lt\uff1bPending&&gt;\uff1b}\u63a7\u5236\u53f0\u7684Reject\u51fd\u6570\u7684\u5185\u5bb9\u3002log(E)\uff1b}}\uff1bpromiseFunction()\uff1b\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c\u5f53\u8c03\u7528console.log(E)\u65f6\uff0cResolution vingPromise\u7684\u72b6\u6001\u4ecd\u7136\u662f\u6302\u8d77\u3002catch\u8bed\u53e5\u4e2d\u8c03\u7528\u7684\u4ee3\u7801\u5728promiseFunction\u8c03\u7528\u540e\u5927\u7ea6500ms\u8fd0\u884c-\u56e0\u4e3arejectingPromise\u5728500ms\u4e4b\u540e\u62d2\u7edd\u3002const promisvingFunction=Async()=&gt\uff1b{const ResolvingPromise=new Promise(Resolve=&gt\uff1bsetTimeout(()=&gt\uff1bResolve(&#39\uff1bSuccess&39\uff1b)\uff0c1000))\uff1bConst ResolvingPromiseTwo=New Promise((Resolve\uff0cReject)=&gt\uff1bsetTimeout(()=&gt\uff1bResolve(&#39\uff1bSuccessTwo&39\uff1b)\uff0c500)\u3002all([ResolvingPromise\uff0cResolvingPromiseTwo])\uff1bConsole\u3002log(AllPromises)\uff1b//allPromises=[&#39\uff1bSUCCESS&#39\uff1b\uff0c&#39\uff1bSUCCESS TWO&#39\uff1b]}catch(E){//\u63a7\u5236\u53f0\u4ece\u4e0d\u6267\u884c\u6b64\u4ee3\u7801\u5757\u3002log(E)\uff1b}}\uff1bpromiseFunction()\uff1b\nPromise.All\u5728\u8c03\u7528\u540e\u89e3\u67901000ms-ResolvingPromiseTwo\u5728500ms\u540e\u89e3\u6790\uff0cResvingPromise\u57281s\u540e\u89e3\u6790\uff0c\u8fd9\u5b8c\u6210\u4e86\u6240\u6709\u627f\u8bfa\uff0c\u8fd9\u5141\u8bb8Promise.All\u627f\u8bfa\u89e3\u6790\u3002Promise.all()\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u4f20\u9012\u7ed9\u5b83\u7684\u6bcf\u4e2a\u627f\u8bfa\u7684\u89e3\u6790\u503c\uff0c\u6309\u7167\u5b83\u4eec\u88ab\u4f20\u9012\u7684\u987a\u5e8f\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4=[&#39\uff1bSUCCESS&#39\uff1b\uff0c&#39\uff1bSUCCESS TWO&#39\uff1b]\u3002\u8fd8\u4f1a\u5411Promise.allSetted()\u4f20\u9012\u4e00\u4e2a\u53ef\u8fed\u4ee3(\u901a\u5e38\u662f\u7531\u5176\u4ed6\u627f\u8bfa\u7ec4\u6210\u7684\u6570\u7ec4)\uff0c\u5e76\u5c06\u5c1d\u8bd5\u89e3\u6790\u6240\u6709\u627f\u8bfa\u3002\u5982\u679c\u8fd9\u4e9b\u627f\u8bfa\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u629b\u51fa\u4f8b\u5916\u6216\u62d2\u7edd\uff0c\u5219\u5176\u72b6\u6001\u8bbe\u7f6e\u4e3a\u62d2\u7edd\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u6ce8\u610f\u4e8b\u9879\u662fPromise.allSetted\u6c38\u8fdc\u4e0d\u4f1a\u629b\u51fa\u3002\u60a8\u4e0d\u9700\u8981\u7528try/catch\u5305\u88c5\u5b83-\u5b83\u603b\u662f\u4f1a\u89e3\u51b3\u7684\u3002const promiseFunction=Async()=&gt\uff1b{const ResolvingPromise=new Promise(Resolve=&gt\uff1bsetTimeout(()=&gt\uff1bResolve(&#39\uff1bSuccess&39\uff1b)\uff0c1000))\uff1bConst RejectingPromise=New Promise((Resolve\uff0cReject)=&gt\uff1bsetTimeout(()=&gt\uff1bReject(&#39\uff1bsetTimeout(&#39\uff1bFail&39\uff1b)\uff0c500))\uff1b\u5c1d\u8bd5{const\u3002allSetted([ResolvingPromise\uff0cRejectingPromise])\uff1b\u63a7\u5236\u53f0\u3002log(AllPromises)\uff1b//allPromises//[//{\u72b6\u6001\uff1a&#34\uff1b\u5df2\u5b8c\u6210&#34\uff1b\uff0c\u503c\uff1a&#39\uff1b\u6210\u529f&#39\uff1b}\uff0c//{\u72b6\u6001\uff1a&#34\uff1b\u62d2\u7edd&#34\uff1b\uff0c\u539f\u56e0\uff1a&#39\uff1b\u5931\u8d25&#39\uff1b}//]}catch(E){//\u6b64\u4ee3\u7801\u5757\u4ece\u672a\u5728\u63a7\u5236\u53f0\u6267\u884c\u3002log(E)\uff1b}}\uff1bpromiseFunction()\uff1b\nPromise.allSetted\u57281\u79d2\u540e\u89e3\u6790-\u5b83\u7b49\u5f85\u6240\u6709\u627f\u8bfa\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u7684\u72b6\u6001\u5982\u4f55\uff0c\u6216\u8005\u5b83\u4eec\u662f\u5426\u62d2\u7edd\u3002\u7136\u540e\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u3002\u8fd9\u53d6\u51b3\u4e8e\u6253\u7535\u8bdd\u7684\u4eba\u68c0\u67e5\u6bcf\u4e2a\u627f\u8bfa\u662f\u5151\u73b0\u8fd8\u662f\u88ab\u62d2\u7edd\u3002\u5982\u679c\u5b83\u5df2\u5b8c\u6210\uff0c\u5219\u5bf9\u8c61\u7684\u503c\u5c06\u5305\u542b\u5df2\u89e3\u6790\u7684\u5185\u5bb9\u3002\u5982\u679c\u72b6\u6001\u4e3aRejected\uff0c\u5b83\u5c06\u5305\u542b\u4e00\u4e2a\u540d\u4e3aReason\u7684\u952e\uff0c\u5373\u629b\u51fa\u6216\u62d2\u7edd\u7684\u5185\u5bb9\u3002Promise\u4e2d\u8fd8\u6709\u53e6\u4e00\u4e2a\u5229\u76ca\u51fd\u6570\uff0c\u79f0\u4e3aPromise.race\u3002Promise.race()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u627f\u8bfa\uff0c\u8be5\u627f\u8bfa\u5728\u53ef\u8fed\u4ee3\u4e2d\u7684\u4e00\u4e2a\u627f\u8bfa\u5b9e\u73b0\u6216\u62d2\u7edd\u65f6\u7acb\u5373\u5b9e\u73b0\u6216\u62d2\u7edd\uff0c\u5e76\u5e26\u6709\u6765\u81ea\u8be5\u627f\u8bfa\u7684\u503c\u6216\u539f\u56e0\u30021\u4e2a\u3002\nconst promiseFunction=Async()=&gt\uff1b{const ResolvingPromise=New Promise(Resolve=&gt\uff1bsetTimeout(()=&gt\uff1bResolve(&#39\uff1bSuccess&#39\uff1b)\uff0c1000))\uff1bConst ResolvingPromiseTwo=New Promise((Resolve\uff0cReject)=&gt\uff1bsetTimeout(()=&", "note_en": "I was  reading the MDN docs on JavaScript promises and realized that the difference between  Promise.all and  Promise.allSettled wasn\u2019t immediately obvious.  From the docs linked above: A  Promise is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action\u2019s eventual success value or failure reason.\n A Promise is in one of these states:   pending: initial state, neither fulfilled nor rejected.   fulfilled: meaning that the operation completed successfully.   rejected: meaning that the operation failed.\n You can instantiate a promise like so:   tldr;  Promise.all will immediately reject if any of the promises fail to resolve, wherease  Promise.allSettled will await the completion of all promises.  Promise.all() is passed an iterable (usually an array of other promises) and will attempt to resolve all of them. If any of these promises throws an exception or  rejects,  Promise.all will immediateley invoke its  reject. You should always surround  Promise.all() with a  try/catch or a  .catch(). const  promiseFunction  =  async  ()  =&gt;  {  const  resolvingPromise  =  new  Promise ( resolve  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; success &#39; ),  1000 ));  const  rejectingPromise  =  new  Promise (( resolve ,  reject )  =&gt;  setTimeout (()  =&gt;  reject ( &#39; fail &#39; ),  500 ));  try  {  const  allPromises  =  await  Promise . all ([ resolvingPromise ,  rejectingPromise ]);  }  catch  ( e )  { \t // e is &#39;fail&#39;, which is the contents of the reject function from rejectingPromise  // resolvingPromise = Promise\u00a0{&lt;pending&gt;}  console . log ( e );  } }; promiseFunction ();\n In the above code snippet, when  console.log(e) is called, the status of  resolvingPromise will still be pending. The code invoked in the catch statement is run roughly  500ms after the  promiseFunction invocation - since  rejectingPromise rejects after 500ms. const  promiseFunction  =  async  ()  =&gt;  {  const  resolvingPromise  =  new  Promise ( resolve  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; success &#39; ),  1000 ));  const  resolvingPromiseTwo  =  new  Promise (( resolve ,  reject )  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; successTwo &#39; ),  500 ));  try  {  const  allPromises  =  await  Promise . all ([ resolvingPromise ,  resolvingPromiseTwo ]);  console . log ( allPromises );  // allPromises = [&#39;success&#39;, &#39;successTwo&#39;]  }  catch  ( e )  {  // this code block is never executed  console . log ( e );  } }; promiseFunction ();\n The  Promise.all resolves 1000ms after invocation -  resolvingPromiseTwo resolves after 500ms, and  resolvingPromise resolves after 1s, which completes all the promises, which allows the  Promise.all promise to resolve.  Promise.all() returns an array with the resolved value of each of the Promises passed to it, in the order in which they are passed. In the above case, it is an array of strings =  [&#39;success&#39;, &#39;successTwo&#39;].  Promise.allSettled() is also passed an iterable (usually an array of other promises) and will attempt to resolve all of them. If any of these promises throws an exception or  rejects, its status is set to  rejected. An important note is that  Promise.allSettled  can never throw. You do not need to wrap it with  try/catch - it will always resolve. const  promiseFunction  =  async  ()  =&gt;  {  const  resolvingPromise  =  new  Promise ( resolve  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; success &#39; ),  1000 ));  const  rejectingPromise  =  new  Promise (( resolve ,  reject )  =&gt;  setTimeout (()  =&gt;  reject ( &#39; fail &#39; ),  500 ));  try  {  const  allPromises  =  await  Promise . allSettled ([ resolvingPromise ,  rejectingPromise ]);  console . log ( allPromises );  // allPromises  // [  // {status: &#34;fulfilled&#34;, value: &#39;success&#39;},  // {status: &#34;rejected&#34;, reason: &#39;fail&#39;}  // ]  }  catch  ( e )  {  // this code block is never executed  console . log ( e );  } }; promiseFunction ();\n Promise.allSettled resolves after 1s - it awaits all the promises, regardless of their status or if they  reject. It then returns an array of objects. It\u2019s up to the caller to check if each promise  fulfilled or  rejected. If it  fulfilled, the  value of the object will be contain what was  resolved. If the status is  rejected, it will contain a key called  reason, which is what was thrown or  rejected.  There is also another interest function in  Promise called  Promise.race. The  Promise.race() method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.   1\n const  promiseFunction  =  async  ()  =&gt;  {  const  resolvingPromise  =  new  Promise ( resolve  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; success &#39; ),  1000 ));  const  resolvingPromiseTwo  =  new  Promise (( resolve ,  reject )  =&gt;  setTimeout (()  =&gt;  resolve ( &#39; successTwo &#39; ),  500 ));  try  {  const  racedPromises  =  await  Promise . race ([ resolvingPromise ,  resolvingPromiseTwo ]);  console . log ( racedPromises );  // both promises would&#39;ve resolved, but resolvingPromiseTwo was faster, so racedPromises = &#39;successTwo&#39;`  }  catch  ( e )  {  // this code block is only executed if the first promise to settle rejects/throws  console . log ( e );  } }; promiseFunction ();\n In the above,  console.log(racedPromises) is called 500ms after invocation - both promises would\u2019ve resolved, but  resolvingPromiseTwo was faster, and it is what  Promise.race resolves with. This is pretty specific behavior - most of the time this is probably  not what you want, but it\u2019s pretty neat!", "posttime": "2020-05-19 01:02:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u627f\u8bfa", "title": "JavaScript Promise.all\u4e0ePromise.allSetted", "title_en": "JavaScript Promise.all vs. Promise.allSettled", "transed": 1, "url": "https://blog.jonlu.ca/posts/promises?ref=hnm18", "via": "", "real_tags": ["java", "\u627f\u8bfa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002663, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6700\u8fd1\u7684\u4e00\u4e2a\u9879\u76ee\u4e2d\uff0c\u6211\u4e0d\u5f97\u4e0d\u7814\u7a76\u68c0\u6d4brootkit\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u6355\u6349\u5b83\u4eec\u7684\u6700\u6709\u6548\u63aa\u65bd\u3002\u5f53\u6211\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u95ee\u5230\uff0crootkit\u7684\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u662f\u4ec0\u4e48\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u6211\u7684\u641c\u7d22\u6700\u7ec8\u8ba9\u6211\u627e\u5230\u4e86TrendMicro RootkitBuster\uff0c\u5b83\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u626b\u63cf\u9690\u85cf\u6587\u4ef6\u3001\u6ce8\u518c\u8868\u9879\u3001\u8fdb\u7a0b\u3001\u9a71\u52a8\u7a0b\u5e8f\u548c\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u4ee5\u8bc6\u522b\u548c\u5220\u9664rootkit\u7684\u514d\u8d39\u5de5\u5177\u201d\u3002\n\u5b83\u5439\u5618\u7684\u7279\u70b9\u80af\u5b9a\u5f15\u8d77\u4e86\u6211\u7684\u6ce8\u610f\u3002\u4ed6\u4eec\u58f0\u79f0\u68c0\u6d4b\u5230\u4e86\u51e0\u79cdRootkit\u7528\u6765\u5c06\u81ea\u5df1\u94bb\u8fdb\u673a\u5668\u7684\u6280\u672f\uff0c\u4f46\u5b83\u662f\u5982\u4f55\u5728\u5f15\u64ce\u76d6\u4e0b\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u4f1a\u6ee5\u7528\u5b83\u5417\uff1f\u6211\u51b3\u5b9a\u901a\u8fc7\u9006\u5411\u5de5\u7a0b\u627e\u51fa\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8fd9\u81f3\u5c11\u53ef\u4ee5\u8bf4\u662f\u628a\u6211\u5e26\u5165\u4e86\u4e00\u4e2a\u6c38\u8fdc\u7ed9\u6211\u7559\u4e0b\u4f24\u75a4\u7684\u5154\u5b50\u6d1e\u4ee3\u7801\u6d1e\u4e2d\u3002\n\u5f00\u59cb\u5192\u9669\u65f6\uff0c\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u4f1a\u6536\u5230Process Hacker\u53d1\u51fa\u7684\u5947\u5999\u8b66\u544a\uff0c\u79f0\u5df2\u7ecf\u5b89\u88c5\u4e86\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u7aef\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4efd\u8d8b\u52bf\u79d1\u6280\u7684\u201c\u5171\u540c\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u8fd9\u7edd\u5bf9\u662f\u503c\u5f97\u7814\u7a76\u7684\u4e1c\u897f\u3002\u9664\u4e86\u8be5\u9a71\u52a8\u7a0b\u5e8f\u6b63\u5728\u5b89\u88c5\u4e4b\u5916\uff0c\u8fd9\u4e2a\u53cb\u597d\u7684\u7a97\u53e3\u4e5f\u6253\u5f00\u4e86\uff0c\u63d0\u793a\u6211\u63a5\u53d7\u8d8b\u52bf\u79d1\u6280\u7684\u7528\u6237\u534f\u8bae\u3002\n\u6211\u73b0\u5728\u8fd8\u6ca1\u6709\u5fc3\u60c5\u628a\u81ea\u5df1\u7684\u7075\u9b42\u4ea4\u7ed9\u9b54\u9b3c\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u6761\u6b3e\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u6761\u6b3e\uff0c\u58f0\u660e\u201c\u60a8\u540c\u610f\u4e0d\u5c1d\u8bd5\u5bf9\u2026\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3001\u53cd\u7f16\u8bd1\u3001\u4fee\u6539\u3001\u7ffb\u8bd1\u3001\u53cd\u6c47\u7f16\u3001\u53d1\u73b0\u6e90\u4ee3\u7801\u6216\u521b\u5efa\u6d3e\u751f\u4f5c\u54c1\u3002\u201c\u3002\n\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u5728\u6211\u63a5\u53d7\u4efb\u4f55\u6761\u6b3e\u4e4b\u524d\uff0c\u8d8b\u52bf\u79d1\u6280\u5df2\u7ecf\u5728\u6211\u7684\u673a\u5668\u4e0a\u90e8\u7f72\u4e86\u4ed6\u4eec\u7684\u8f6f\u4ef6\u3002\u6709\u8da3\u7684\u662f\uff0c\u5f53\u6211\u8bd5\u56fe\u901a\u8fc7\u53f3\u952e\u5355\u51fb\u5e94\u7528\u7a0b\u5e8f\u5e76\u6309\u4e0b\u201c\u5173\u95ed\u7a97\u53e3\u201d\u6765\u9000\u51fa\u8be5\u8fc7\u7a0b\u65f6\uff0c\u5b83\u5b8c\u5168\u907f\u5f00\u4e86\u8bb8\u53ef\u534f\u8bae\uff0c\u8f6c\u5230\u626b\u63cf\u4eea\u7684\u4e3b\u5c4f\u5e55\uff0c\u5c3d\u7ba1\u6211\u9009\u62e9\u4e86\u201c\u6211\u4e0d\u63a5\u53d7\u8bb8\u53ef\u534f\u8bae\u7684\u6761\u6b3e\u201d\u9009\u9879\u3002\u8c22\u8c22\u8d8b\u52bf\u79d1\u6280\uff01\n\u5f53\u6211\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u4e00\u4e2a\u5feb\u901f\u7684\u547d\u4ee4\u63d0\u793a\u7b26\u95ea\u70c1\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u4e2a7-Zip\u81ea\u89e3\u538b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7ed3\u679c\uff0c\u5b83\u5c06\u5176\u4f59\u7684\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u89e3\u538b\u5230%temp%\\RootkitBuster\u3002\nTmcomm\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6807\u7b7e\u4e3a\u201cTrendMicro Common Module\u201d\u548c\u201cTrend Micro Eyes\u201d\u3002\u5feb\u901f\u6d4f\u89c8\u8be5\u9a71\u52a8\u7a0b\u5e8f\u8868\u660e\uff0c\u5b83\u63a5\u53d7\u4e86\u6765\u81ea\u7279\u6743\u7528\u6237\u6a21\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u901a\u4fe1\uff0c\u5e76\u6267\u884c\u4e86\u975e\u7279\u5b9a\u4e8erootkit Remover\u672c\u8eab\u7684\u5e38\u89c1\u64cd\u4f5c\u3002\u8be5\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u4ec5\u5728Rootkit Buster\u4e2d\u4f7f\u7528\uff0c\u800c\u4e14\u5728\u8d8b\u52bf\u79d1\u6280\u7684\u6574\u4e2a\u4ea7\u54c1\u7ebf\u4e2d\u90fd\u6709\u5b9e\u65bd\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u7814\u7a76tmcomm\u9a71\u52a8\u7a0b\u5e8f\u3002\u6211\u4eec\u5c06\u628a\u7814\u7a76\u91cd\u70b9\u653e\u5728\u5bfb\u627e\u6ee5\u7528\u9a71\u52a8\u7a0b\u5e8f\u529f\u80fd\u7684\u4e0d\u540c\u65b9\u6cd5\u4e0a\uff0c\u6700\u7ec8\u76ee\u6807\u662f\u80fd\u591f\u6267\u884c\u5185\u6838\u4ee3\u7801\u3002\u6211\u51b3\u5b9a\u4e0d\u68c0\u67e5tmrkb.sys\uff0c\u56e0\u4e3a\u867d\u7136\u6211\u786e\u5b9a\u5b83\u662f\u6613\u53d7\u653b\u51fb\u7684\uff0c\u4f46\u5b83\u4f3c\u4e4e\u53ea\u7528\u4e8erootkit Buster\u3002\n\u8ba9\u6211\u4eec\u4ece\u57fa\u672c\u9a71\u52a8\u7a0b\u5e8f\u5f00\u59cb\u6211\u4eec\u7684\u5192\u9669\u4e4b\u65c5\uff0c\u5b83\u4f3c\u4e4e\u4e0d\u4ec5\u7528\u4e8e\u8fd9\u4e2arootkit Remover\u5b9e\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u8fd8\u7528\u4e8e\u5176\u4ed6\u51e0\u4e2a\u8d8b\u52bf\u79d1\u6280\u4ea7\u54c1\u3002\u6b63\u5982\u6211\u5728\u4e0a\u4e00\u8282\u4e2d\u6240\u8bf4\u7684\uff0c\u975e\u5e38\u7b80\u5355\u5730\u6d4f\u89c8\u4e00\u4e0b\u9a71\u52a8\u7a0b\u5e8f\u5c31\u4f1a\u53d1\u73b0\uff0c\u5b83\u786e\u5b9e\u5141\u8bb8\u6765\u81ea\u7279\u6743\u7528\u6237\u6a21\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u901a\u4fe1\u3002\n\u9a71\u52a8\u7a0b\u5e8f\u91c7\u53d6\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u4e00\u662f\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u6765\u63a5\u53d7\u6765\u81ea\u7528\u6237\u6a21\u5f0f\u7684IOCTL\u901a\u4fe1\u3002\u9a71\u52a8\u7a0b\u5e8f\u5728\u8def\u5f84\\Device\\TmComm\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\uff0c\u5e76\u5728\\DosDevices\\TmComm(\u53ef\u901a\u8fc7\\\\.\\global\\TmComm\u8bbf\u95ee)\u521b\u5efa\u6307\u5411\u8be5\u8bbe\u5907\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u9a71\u52a8\u7a0b\u5e8f\u5165\u53e3\u70b9\u521d\u59cb\u5316\u4e86\u5728\u6574\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u5927\u91cf\u7c7b\u548c\u7ed3\u6784\uff0c\u4f46\u662f\uff0c\u51fa\u4e8e\u6211\u4eec\u7684\u76ee\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u6db5\u76d6\u6bcf\u4e2a\u7c7b\u548c\u7ed3\u6784\u3002\n\u6211\u5f88\u9ad8\u5174\u770b\u5230\u8d8b\u52bf\u79d1\u6280\u505a\u51fa\u4e86\u6b63\u786e\u7684\u51b3\u5b9a\uff0c\u5c06\u4ed6\u4eec\u7684\u8bbe\u5907\u9650\u5236\u4e3a\u7cfb\u7edf\u7528\u6237\u548c\u7ba1\u7406\u5458\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u6211\u4eec\u786e\u5b9e\u53d1\u73b0\u4e86\u53ef\u5229\u7528\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u4efb\u4f55\u901a\u4fe1\u90fd\u81f3\u5c11\u9700\u8981\u7ba1\u7406\u6743\u9650\uff0c\u6240\u4ee5\u4e1a\u754c\u4e2d\u6709\u76f8\u5f53\u5927\u4e00\u90e8\u5206\u4eba\u4e0d\u4f1a\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u6f0f\u6d1e\u3002\u4f8b\u5982\uff0cMicrosoft\u672c\u8eab\u5e76\u4e0d\u5c06\u7ba1\u7406\u5458\u5230\u5185\u6838\u89c6\u4e3a\u5b89\u5168\u8fb9\u754c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u83b7\u5f97\u4e86\u5927\u91cf\u7684\u8bbf\u95ee\u6743\u9650\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8d8b\u52bf\u79d1\u6280\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u53ef\u5229\u7528\u4ee3\u7801\u5c06\u6beb\u65e0\u7528\u5904\u3002\n\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e00\u4e2a\u5f88\u5927\u7684\u7ec4\u4ef6\u662f\u5b83\u7684\u201cTrueApi\u201d\u7c7b\uff0c\u5b83\u5728\u9a71\u52a8\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u671f\u95f4\u5b9e\u4f8b\u5316\u3002\u8be5\u7c7b\u5305\u542b\u6307\u5411\u5728\u6574\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u5bfc\u5165\u51fd\u6570\u7684\u6307\u9488\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u98a0\u5012\u7684\u7ed3\u6784\uff1a\nstruct TrueApi{Byte Initialized\uff1bPVOID ZwQuerySystemInformation\uff1bPVOID ZwCreateFile\uff1bPVOID unk1\uff1b//\u521d\u59cb\u5316\u4e3aNULL\u3002PVOID ZwQueryDirectoryFile\uff1bPVOID ZwClose\uff1bPVOID ZwOpenDirectoryObjectWrapper\uff1bPVOID ZwQueryDirectoryObject\uff1bPVOID ZwDuplicateObject\uff1bPVOID unk2\uff1b//\u521d\u59cb\u5316\u4e3aNULL\u3002PVOID ZwOpenKey\uff1bPVOID ZwEnumerateKey\uff1bPVOID ZwEnumerateValueKey\uff1bPVOID ZwCreateKey\uff1bPVOID ZwQueryValueKey\uff1bPVOID ZwQueryKey\uff1bPVOID ZwDeleteKey\uff1bPVOID ZwTerminateProcess\uff1bPVOID ZwOpenProcess\uff1bPVOID ZwSetValueKey\uff1bPVOID ZwDeleteValueKey\u3002PVOID ZwQuerySecurityObject\uff1bPVOID unk3\uff1b//\u521d\u59cb\u5316\u4e3a\u7a7aPVOID unk4\uff1b//\u521d\u59cb\u5316\u4e3a\u7a7aPVOID ZwSetSecurityObject\uff1b}\uff1b\n\u67e5\u770b\u4ee3\u7801\uff0cTrueApi\u4e3b\u8981\u7528\u4f5c\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u6211\u6709\u6839\u636e\u7684\u731c\u6d4b\u662f\uff0c\u8d8b\u52bf\u79d1\u6280\u5728\u521d\u59cb\u5316\u65f6\u7f13\u5b58\u8fd9\u4e9b\u5bfc\u5165\u7684\u51fd\u6570\uff0c\u4ee5\u907f\u514d\u5ef6\u8fdf\u7684IAT\u6302\u94a9\u3002\u4f46\u662f\uff0c\u7531\u4e8eTrueApi\u662f\u901a\u8fc7\u67e5\u770b\u5bfc\u5165\u8868\u6765\u89e3\u6790\u7684\uff0c\u56e0\u6b64\u5982\u679c\u5b58\u5728\u5728\u9a71\u52a8\u7a0b\u5e8f\u52a0\u8f7d\u65f6\u6302\u94a9IAT\u7684rootkit\uff0c\u5219\u6b64\u673a\u5236\u662f\u65e0\u7528\u7684\u3002\n\u4e0eTrueApi\u7c7b\u4f3c\uff0cXrayApi\u662f\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u53e6\u4e00\u4e2a\u4e3b\u8981\u7c7b\u3002\u6b64\u7c7b\u7528\u4e8e\u8bbf\u95ee\u591a\u4e2a\u4f4e\u7ea7\u8bbe\u5907\uff0c\u5e76\u76f4\u63a5\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u3002XrayConfig\u7684\u4e00\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u662f\u5b83\u7684\u201cconfig\u201d\u3002\u4ee5\u4e0b\u662f\u8868\u793a\u914d\u7f6e\u6570\u636e\u7684\u90e8\u5206\u53cd\u5411\u5de5\u7a0b\u7ed3\u6784\uff1a\nstruct XrayConfigData{WORD SIZE\uff1bCHAR PAD1[2]\uff1bDWORD SystemBuildNumber\uff1bDWORD UnkOffset1\uff1bDWORD UnkOffset2\uff1bDWORD UnkOffset3\uff1bChar Pad2[4]\uff1bPVOID NotificationEntryIdentifier\uff1bPVOID NtoskrnlBase\uff1bPVOID IopRootDeviceNode\uff1bPVOID PpDevNodeLockTree\uff1bPVOID ExInitial.\u3002\n\u914d\u7f6e\u6570\u636e\u5b58\u50a8Windows\u5185\u6838\u4e2d\u5185\u90e8/\u672a\u8bb0\u5f55\u53d8\u91cf\u7684\u4f4d\u7f6e\uff0c\u5982IopRootDeviceNode\u3001PpDevNodeLockTree\u3001ExInitializeNPagedLookasideListInternal\u548cExDeleteNPagedLookasideList\u3002\u6211\u731c\u6d4b\u8fd9\u95e8\u8bfe\u7684\u76ee\u7684\u662f\u76f4\u63a5\u8bbf\u95ee\u4f4e\u7ea7\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u53ef\u80fd\u88ab\u52ab\u6301\u7684\u6709\u6587\u6863\u8bb0\u5f55\u7684\u65b9\u6cd5\u3002\n\u5728\u6211\u4eec\u8fdb\u5165\u9a71\u52a8\u7a0b\u5e8f\u5141\u8bb8\u6211\u4eec\u505a\u4ec0\u4e48\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3IOCTL\u8bf7\u6c42\u662f\u5982\u4f55\u5904\u7406\u7684\u3002\n\u5728\u4e3b\u8c03\u5ea6\u51fd\u6570\u4e2d\uff0cTrend Micro\u9a71\u52a8\u7a0b\u5e8f\u5c06IRP_MJ_DEVICE_CONTROL\u8bf7\u6c42\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u6211\u79f0\u4e3aTmIoctlRequest\u7684\u4e13\u6709\u7ed3\u6784\u3002\nTrend Micro\u7ec4\u7ec7IOCTL\u8bf7\u6c42\u8c03\u5ea6\u7684\u65b9\u5f0f\u662f\u6709\u51e0\u4e2a\u201c\u8c03\u5ea6\u8868\u201d\u3002\u201c\u57fa\u672c\u8c03\u5ea6\u8868\u201d\u7b80\u5355\u5730\u5305\u542bIOCTL\u4ee3\u7801\u548c\u76f8\u5e94\u7684\u201c\u5b50\u8c03\u5ea6\u529f\u80fd\u201d\u3002\u4f8b\u5982\uff0c\u5f53\u60a8\u53d1\u9001\u4ee3\u7801\u4e3a0xDEADBEEF\u7684IOCTL\u8bf7\u6c42\u65f6\uff0c\u5b83\u5c06\u6bd4\u8f83\u6b64\u57fa\u672c\u8c03\u5ea6\u8868\u7684\u6bcf\u4e2a\u6761\u76ee\uff0c\u5982\u679c\u5b58\u5728\u5177\u6709\u5339\u914d\u4ee3\u7801\u7684\u8868\u6761\u76ee\uff0c\u5219\u4f20\u9012\u6570\u636e\u3002\u57fa\u8868\u6761\u76ee\u53ef\u4ee5\u7531\u4ee5\u4e0b\u7ed3\u6784\u8868\u793a\uff1a\n\u5728\u8c03\u7528DispatchFunction\u4e4b\u540e\uff0c\u5b83\u901a\u5e38\u4f1a\u9a8c\u8bc1\u6240\u63d0\u4f9b\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u8303\u56f4\u4ece\u57fa\u672c\u7684nullptr\u68c0\u67e5\u5230\u68c0\u67e5\u8f93\u5165\u548c\u8f93\u51fa\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u201c\u5b50\u5206\u6d3e\u51fd\u6570\u201d\u6839\u636e\u7528\u6237\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u4f20\u9012\u7684\u4ee3\u7801\u8fdb\u884c\u53e6\u4e00\u6b21\u67e5\u627e\uff0c\u4ee5\u627e\u5230\u76f8\u5e94\u7684\u201c\u5b50\u8868\u6761\u76ee\u201d\u3002\u5b50\u8868\u6761\u76ee\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u7ed3\u6784\u8868\u793a\uff1a\n\u5728\u8c03\u7528\u5b9e\u9645\u6267\u884c\u6240\u8bf7\u6c42\u64cd\u4f5c\u7684PrimaryRoutine\u4e4b\u524d\uff0c\u5b50\u8c03\u5ea6\u51fd\u6570\u8c03\u7528ValidatorRoutine\u3002\u6b64\u4f8b\u7a0b\u5728\u8f93\u5165\u7f13\u51b2\u533a\u4e0a\u6267\u884c\u201c\u7279\u5b9a\u4e8e\u64cd\u4f5c\u201d\u7684\u9a8c\u8bc1\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5bf9PrimaryRoutine\u5c06\u4f7f\u7528\u7684\u6570\u636e\u6267\u884c\u68c0\u67e5\u3002\u53ea\u6709\u5f53ValidatorRoutine\u6210\u529f\u8fd4\u56de\u65f6\uff0c\u624d\u4f1a\u8c03\u7528PrimaryRoutine\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u57fa\u672c\u4e86\u89e3\u4e86IOCTL\u8bf7\u6c42\u662f\u5982\u4f55\u5904\u7406\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u505a\u4ec0\u4e48\u3002\u56de\u987e\u5b58\u50a8\u201c\u5b50\u8c03\u5ea6\u51fd\u6570\u201d\u7684\u201c\u57fa\u672c\u8c03\u5ea6\u8868\u201d\u7684\u5b9a\u4e49\uff0c\u8ba9\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u6bcf\u4e2a\u57fa\u8868\u6761\u76ee\uff0c\u5e76\u627e\u51fa\u6bcf\u4e2a\u5b50\u8c03\u5ea6\u8868\u5141\u8bb8\u6211\u4eec\u505a\u4ec0\u4e48\uff01\n\u7b2c\u4e00\u4e2a\u5206\u6d3e\u8868\u4f3c\u4e4e\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\uff0c\u4f46\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9996\u5148\uff0c\u201c\u5b50\u8c03\u5ea6\u8868\u201d\u6761\u76ee\u7684\u4ee3\u7801\u662f\u901a\u8fc7\u4ece\u8f93\u5165\u7f13\u51b2\u533a\u7684\u8d77\u59cb\u5904\u53d6\u6d88\u5f15\u7528DWORD\u6765\u83b7\u5f97\u7684\u3002\u8fd9\u610f\u5473\u7740\u8981\u6307\u5b9a\u8981\u6267\u884c\u54ea\u4e2a\u5b50\u5206\u6d3e\u6761\u76ee\uff0c\u53ea\u9700\u5728\u8f93\u5165\u7f13\u51b2\u533a\u7684\u5e95\u90e8\u8bbe\u7f6e\u4e00\u4e2aDWORD\uff0c\u4f7f\u5176\u4e0e\u6761\u76ee\u7684**OperationCode**\u76f8\u5bf9\u5e94\u3002\n\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\uff0c\u8d8b\u52bf\u79d1\u6280\u65b9\u4fbf\u5730\u5305\u62ec\u4e86\u5927\u91cf\u7684\u8c03\u8bd5\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u53ef\u4ee5\u8ba9\u6211\u4eec\u4e86\u89e3\u51fd\u6570\u7684\u4f5c\u7528\u3002\u4e0b\u9762\u662f\u6211\u5728\u6b64\u5b50\u8c03\u5ea6\u8868\u4e2d\u98a0\u5012\u7684\u529f\u80fd\u4ee5\u53ca\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u6267\u884c\u7684\u64cd\u4f5c\u3002\n\u6b64\u8c03\u5ea6\u8868\u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u9a71\u52a8\u7a0b\u5e8f\u7684\u8fdb\u7a0b\u626b\u63cf\u529f\u80fd\u3002\u6b64\u5b50\u8c03\u5ea6\u8868\u4e2d\u7684\u8bb8\u591a\u51fd\u6570\u4f7f\u7528\u5355\u72ec\u7684\u626b\u63cf\u7ebf\u7a0b\uff0c\u901a\u8fc7\u5404\u79cd\u65b9\u6cd5(\u6709\u8bb0\u5f55\u7684\u548c\u672a\u8bb0\u5f55\u7684)\u540c\u6b65\u641c\u7d22\u8fdb\u7a0b\u3002\n\u5982\u679c\u7cfb\u7edf\u201c\u53d7\u652f\u6301\u201d\uff0c\u5219\u8fd4\u56deTRUE(\u65e0\u8bba\u5b83\u4eec\u662f\u5426\u5177\u6709\u7528\u4e8e\u60a8\u7684\u6784\u5efa\u7684\u786c\u7f16\u7801\u504f\u79fb\u91cf)\u3002\n\u8fd9\u4e9bIOCTL\u56f4\u7ed5\u7740\u4e00\u4e9b\u6211\u79f0\u4e4b\u4e3a\u201c\u5fae\u4efb\u52a1\u201d\u548c\u201c\u5fae\u626b\u63cf\u201d\u7684\u7ed3\u6784\u3002\u4ee5\u4e0b\u662f\u53cd\u5411\u5de5\u7a0b\u6784\u5efa\u7684\u7ed3\u6784\uff1a\nstruct MicroTaskVtable{PVOID\u6784\u9020\u5668\uff1bPVOID\u65b0\u8282\u70b9\uff1bPVOID\u5220\u9664\u8282\u70b9\uff1bPVOID\u63d2\u5165\uff1bPVOID\u63d2\u5165\u4e4b\u540e\uff1bPVOID\u63d2\u5165\u4e4b\u524d\uff1bPVOID\u7b2c\u4e00\u4e2a\uff1bPVOID\u4e0b\u4e00\u4e2a\uff1bPVOID\u79fb\u9664\uff1bPVOID RemoveHead\uff1bPVOID RemoveTail\uff1bPVOID unk2\uff1bPVOID IsEmpty\uff1b}\uff1bstruct MicroTask{MicroTaskVtable*vtable\uff1bPVOPVOID self2\uff1b//ptr\u81ea\u8eab\u3002DWORD_PTR unk1\uff1bPVOID\u5185\u5b58\u5206\u914d\u5668\uff1bPVOID CurrentListItem\uff1bPVOID PreviousListItem\uff1bDWORD ListSize\uff1bDWORD unk4\uff1b//\u521d\u59cb\u5316\u4e3aNULL\u3002\u5b57\u7b26\u5217\u8868\u540d\u79f0[50]\uff1b}\uff1bstruct MicroScanVtable{PVOID Constructor\uff1bPVOID GetTask\uff1b}\uff1bstruct MicroScan{MicroScanVtable*vtable\uff1bDWORD Tag\uff1b//Always&#39\uff1bPANS&#39\uff1b\u3002\u5b57\u7b26PAD1[4]\uff1bDWORD64\u4efb\u52a1\u5927\u5c0f\uff1b\u5fae\u4efb\u52a1\u4efb\u52a1[4]\uff1b}\uff1b\n\u5bf9\u4e8e\u6b64\u5b50\u8c03\u5ea6\u8868\u4e2d\u7684\u5927\u591a\u6570IOCTL\uff0c\u9a71\u52a8\u7a0b\u5e8f\u586b\u5145\u7684\u5ba2\u6237\u7aef\u4f20\u5165\u4e00\u4e2aMicroScan\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u5982\u4f55\u6ee5\u7528\u8fd9\u79cd\u4fe1\u4efb\u3002\n\u5f53\u6211\u6700\u521d\u5bf9\u6b64\u5b50\u8c03\u5ea6\u8868\u4e2d\u7684\u51fd\u6570\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u65f6\uff0c\u6211\u975e\u5e38\u56f0\u60d1\uff0c\u56e0\u4e3a\u4ee3\u7801\u201c\u770b\u8d77\u6765\u4e0d\u6b63\u786e\u201d\u3002\u5b83\u770b\u8d77\u6765\u50cf\u662f\u5ba2\u6237\u7aef\u5c06GetProcessesAllMethods\u7b49\u51fd\u6570\u8fd4\u56de\u7684MicroScan\u5185\u6838\u6307\u9488\u76f4\u63a5\u4f20\u9012\u7ed9DeleteTaskResults\u7b49\u5176\u4ed6\u51fd\u6570\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u51fd\u6570\u5c06\u91c7\u7528\u8fd9\u4e2a\u4e0d\u53d7\u4fe1\u4efb\u7684\u5185\u6838\u6307\u9488\uff0c\u5e76\u4e14\u5728\u7c7b\u7684\u57fa\u7840\u4e0a\u6307\u5b9a\u7684\u865a\u62df\u51fd\u6570\u8868\u4e2d\u51e0\u4e4e\u6ca1\u6709\u9a8c\u8bc1\u8c03\u7528\u51fd\u6570\u3002\n\u67e5\u770bDeleteTaskResults\u5b50\u5206\u6d3e\u8868\u6761\u76ee\u7684\u201c\u9a8c\u8bc1\u4f8b\u7a0b\u201d\uff0c\u5728\u8f93\u5165\u7f13\u51b2\u533a+0x10\u5904\u6307\u5b9a\u7684MicroScan\u5b9e\u4f8b\u4e0a\u6267\u884c\u7684\u552f\u4e00\u9a8c\u8bc1\u662f\u786e\u4fdd\u5b83\u662f\u6709\u6548\u7684\u5185\u6838\u5730\u5740\u3002\n\u9664\u4e86\u786e\u4fdd\u63d0\u4f9b\u7684\u6307\u9488\u5728\u5185\u6838\u5185\u5b58\u4e2d\u4e4b\u5916\uff0c\u552f\u4e00\u7684\u5176\u4ed6\u68c0\u67e5\u662f\u5728DeleteTaskResults\u4e2d\u8fdb\u884c\u7b80\u5355\u68c0\u67e5\uff0c\u4ee5\u786e\u4fddMicroScan\u7684\u6807\u8bb0\u6210\u5458\u662fPANS\u3002\n\u7531\u4e8eDeleteTaskResults\u8c03\u7528\u5728MicroScan\u5b9e\u4f8b\u7684\u865a\u62df\u51fd\u6570\u8868\u4e2d\u6307\u5b9a\u7684\u6784\u9020\u51fd\u6570\uff0c\u8981\u8c03\u7528\u4efb\u610f\u5185\u6838\u51fd\u6570\uff0c\u6211\u4eec\u9700\u8981\uff1a\n\u80fd\u591f\u5206\u914d\u81f3\u5c1110\u5b57\u8282\u7684\u5185\u6838\u5185\u5b58(\u7528\u4e8evtable\u548ctag)\u3002\n\u63a7\u5236\u5206\u914d\u7684\u5185\u6838\u5185\u5b58\u6765\u8bbe\u7f6e\u865a\u62df\u51fd\u6570\u8868\u6307\u9488\u548c\u6807\u7b7e\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5f53\u6d89\u53ca\u5230\u4ece\u7528\u6237\u6a21\u5f0f\u5206\u914d\u548c\u63a7\u5236\u5185\u6838\u5185\u5b58\u65f6\uff0c\u6211\u7684\u4e00\u4f4d\u5bfc\u5e08Alex Ionescu\u80fd\u591f\u4e3a\u6211\u6307\u660e\u6b63\u786e\u7684\u65b9\u5411\u30022010\u5e74\u7684\u4e00\u4efdHackInTheBox\u6742\u5fd7\u4e0a\u6709\u4e00\u7bc7\u7531Matthew Jurczyk\u64b0\u5199\u7684\u540d\u4e3a\u201c\u5728Windows7\u4e2d\u4fdd\u7559\u5bf9\u8c61\u201d\u7684\u6587\u7ae0\u3002\u672c\u6587\u8ba8\u8bba\u4e86\u4f7f\u7528Windows7\u4e2d\u5f15\u5165\u7684APC\u4fdd\u7559\u5bf9\u8c61\u4ece\u7528\u6237\u6a21\u5f0f\u5206\u914d\u53ef\u63a7\u5185\u6838\u5185\u5b58\u3002\u603b\u4f53\u601d\u8def\u662f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528ApcRoutine\u548cApcArgumentX\u6210\u5458\u4f5c\u4e3a\u5185\u6838\u5185\u5b58\u4e2d\u6240\u9700\u7684\u6570\u636e\u5c06APC\u6392\u961f\u5230APC\u4fdd\u7559\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528NtQuerySystemInformation\u5728\u5185\u6838\u5185\u5b58\u4e2d\u67e5\u627eAPC\u4fdd\u7559\u5bf9\u8c61\u3002\u6b64\u4fdd\u7559\u5bf9\u8c61\u5c06\u5728\u4e00\u884c\u4e2d\u5305\u542b\u4ee5\u524d\u6307\u5b9a\u7684KAPC\u53d8\u91cf\uff0c\u4ece\u800c\u5141\u8bb8\u7528\u6237\u6a21\u5f0f\u5e94\u7528\u7a0b\u5e8f\u63a7\u5236\u591a\u8fbe32\u5b57\u8282\u7684\u5185\u6838\u5185\u5b58(\u572864\u4f4d\u4e0a)\uff0c\u5e76\u77e5\u9053\u5185\u6838\u5185\u5b58\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u8fd9\u4e2a\u6280\u5de7\u5728Windows10\u4e2d\u4ecd\u7136\u6709\u6548\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u80fd\u591f\u6ee1\u8db3\u6240\u6709\u4e09\u4e2a\u8981\u6c42\u3002\u901a\u8fc7\u4f7f\u7528APC\u4fdd\u7559\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3aMicroScan\u7ed3\u6784\u5206\u914d\u81f3\u5c1110\u4e2a\u5b57\u8282\uff0c\u5e76\u5b8c\u5168\u7ed5\u8fc7\u4e0d\u5145\u5206\u7684\u68c0\u67e5\u3002\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f\u8c03\u7528\u4efb\u610f\u5185\u6838\u6307\u9488\u7684\u80fd\u529b\uff1a\n\u867d\u7136\u6211\u5728DeleteTaskResults\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u53d7\u653b\u51fb\u7684\u4ee3\u7801\u7684\u5177\u4f53\u793a\u4f8b\uff0c\u4f46\u6211\u5728\u8868\u4e2d\u7528\u661f\u53f7\u6807\u8bb0\u7684\u4efb\u4f55\u51fd\u6570\u90fd\u662f\u6613\u53d7\u653b\u51fb\u7684\u3002\u5b83\u4eec\u90fd\u4fe1\u4efb\u4e0d\u53d7\u4fe1\u4efb\u7684\u5ba2\u6237\u7aef\u6307\u5b9a\u7684\u5185\u6838\u6307\u9488\uff0c\u5e76\u6700\u7ec8\u8c03\u7528MicroScan\u5b9e\u4f8b\u7684\u865a\u62df\u51fd\u6570\u8868\u4e2d\u7684\u51fd\u6570\u3002\n\u5f53\u6211\u5728\u8c03\u8bd5\u5b57\u7b26\u4e32\u4e2d\u770b\u5230\u5b83\u7684\u540d\u79f0\u65f6\uff0c\u8fd9\u4e2a\u51fd\u6570\u5f15\u8d77\u4e86\u6211\u7684\u6ce8\u610f\u3002\u4f7f\u7528\u6b64\u5b50\u8c03\u5ea6\u8868\u51fd\u6570\uff0c\u4e0d\u53d7\u4fe1\u4efb\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u6ce8\u518c\u591a\u8fbe16\u4e2a\u5728\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\u8c03\u7528\u7684\u4efb\u610f\u201c\u5378\u8f7d\u4f8b\u7a0b\u201d\u3002\u6b64\u51fd\u6570\u7684\u9a8c\u8bc1\u5668\u4f8b\u7a0b\u68c0\u67e5\u6765\u81ea\u4e0d\u53ef\u4fe1\u5ba2\u6237\u7aef\u7f13\u51b2\u533a\u7684\u8be5\u6307\u9488\u7684\u6709\u6548\u6027\u3002\u5982\u679c\u8c03\u7528\u65b9\u6765\u81ea\u7528\u6237\u6a21\u5f0f\uff0c\u5219\u9a8c\u8bc1\u5668\u5bf9\u4e0d\u53d7\u4fe1\u4efb\u7684\u6307\u9488\u8c03\u7528ProbeForRead\u3002\u5982\u679c\u8c03\u7528\u65b9\u6765\u81ea\u5185\u6838\u6a21\u5f0f\uff0c\u5219\u9a8c\u8bc1\u5668\u5c06\u68c0\u67e5\u5b83\u662f\u5426\u4e3a\u6709\u6548\u7684\u5185\u6838\u5185\u5b58\u5730\u5740\u3002\n\u6b64\u51fd\u6570\u4e0d\u80fd\u7acb\u5373\u7528\u4e8e\u7528\u6237\u6a21\u5f0f\u4e0b\u7684\u5229\u7528\u6f0f\u6d1e\u653b\u51fb\u3002\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u662f\u7528\u6237\u6a21\u5f0f\u8c03\u7528\u8005\uff0c\u5219\u5fc5\u987b\u63d0\u4f9b\u7528\u6237\u6a21\u5f0f\u6307\u9488\uff0c\u56e0\u4e3a\u9a8c\u8bc1\u5668\u4f8b\u7a0b\u4f7f\u7528ProbeForRead\u3002\u5f53\u9a71\u52a8\u7a0b\u5e8f\u5378\u8f7d\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u7528\u6237\u6a21\u5f0f\u6307\u9488\uff0c\u4f46\u7531\u4e8eSMEP\u7b49\u7f13\u89e3\u63aa\u65bd\uff0c\u5b83\u4e0d\u4f1a\u505a\u592a\u591a\u4e8b\u60c5\u3002\u6211\u5c06\u5728\u540e\u9762\u7684\u5c0f\u8282\u4e2d\u5f15\u7528\u6b64\u51fd\u6570\uff0c\u4f46\u662f\u770b\u5230\u4e00\u4e2a\u4e0d\u53ef\u4fe1\u7684\u7528\u6237\u6a21\u5f0f\u5ba2\u6237\u7aef\u80fd\u591f\u6307\u793a\u9a71\u52a8\u7a0b\u5e8f\u8c03\u7528\u4efb\u610f\u6307\u9488\u7684\u8bbe\u8ba1\u771f\u7684\u5f88\u53ef\u6015\u3002\n\u6b64\u5b50\u8c03\u5ea6\u8868\u7528\u4e8e\u4e0eXrayApi\u4ea4\u4e92\u3002\u867d\u7136Xray Api\u901a\u5e38\u7531\u5185\u6838\u4e2d\u5b9e\u73b0\u7684\u626b\u63cf\u4f7f\u7528\uff0c\u4f46\u6b64\u5b50\u8c03\u5ea6\u8868\u4e3a\u5ba2\u6237\u7aef\u4e0e\u7269\u7406\u9a71\u52a8\u5668\u4ea4\u4e92\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u8bbf\u95ee\u6743\u9650\u3002\n\u6700\u540e\u7684\u5b50\u5206\u6d3e\u7528\u4e8e\u626b\u63cf\u5404\u79cd\u7cfb\u7edf\u7ed3\u6784\u4e2d\u7684\u6302\u94a9\u3002\u770b\u5230Trend Micro\u68c0\u67e5\u5728\u5bf9\u8c61\u7c7b\u578b\u3001\u4e3b\u8981\u51fd\u6570\u8868\u751a\u81f3\u51fd\u6570\u5185\u8054\u6302\u94a9\u4e2d\u5305\u62ec\u6302\u94a9\u7684\u5404\u79cd\u6302\u94a9\u662f\u5f88\u6709\u8da3\u7684\u3002\n\u662f\u7684\uff0cTMXMSCheckSystemObjectByName2\u5c31\u50cf\u542c\u8d77\u6765\u90a3\u4e48\u7cdf\u7cd5\u3002\u5728\u76f4\u63a5\u67e5\u770b\u51fd\u6570\u4e4b\u524d\uff0c\u4e0b\u9762\u662f\u540e\u9762\u4f7f\u7528\u7684\u51e0\u4e2a\u53cd\u5411\u5de5\u7a0b\u7ed3\u6784\uff1a\nstruct CheckSystemObjectParams{PVOID Src\uff1bPVOID DST\uff1bDWORD Size\uff1bDWORD*Outsize\uff1b}\uff1bstruct TXMSParams{DWORD OutStatus\uff1bDWORD HandlerID\uff1bChar unk[0x38]\uff1bCheckSystemObjectParams*CheckParams\uff1b}\uff1b\nTMXMSCheckSystemObjectByName2\u63a5\u53d7\u6e90\u6307\u9488\u3001\u76ee\u6807\u6307\u9488\u548c\u5b57\u8282\u5927\u5c0f\u3002\u4e3aTMXMSCheckSystemObjectByName2\u8c03\u7528\u7684\u9a8c\u8bc1\u5668\u51fd\u6570\u68c0\u67e5\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u672c\u8d28\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u6709\u6548\u7684CheckParams\u7ed3\u6784\uff0c\u5e76\u4e14\u6211\u4eec\u4f20\u9012\u7684DST\u6307\u9488\u4f4d\u4e8e\u7528\u6237\u6a21\u5f0f\u5185\u5b58\u4e2d\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u51fd\u6570\u672c\u8eab\uff1a\n\u5c3d\u7ba1for\u5faa\u73af\u770b\u8d77\u6765\u53ef\u80fd\u5f88\u53ef\u6015\uff0c\u4f46\u5b83\u6240\u505a\u7684\u53ea\u662f\u68c0\u67e5\u4e00\u7cfb\u5217\u5185\u6838\u5185\u5b58\u7684\u4f18\u5316\u65b9\u6cd5\u3002\u5bf9\u4e8eSrc\u5230Src+Size\u8303\u56f4\u5185\u7684\u6bcf\u4e2a\u5185\u5b58\u9875\uff0c\u8be5\u51fd\u6570\u8c03\u7528MmIsAddressValid\u3002\u771f\u6b63\u53ef\u6015\u7684\u90e8\u5206\u662f\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8fd9\u4e9b\u884c\u91c7\u7528\u4e0d\u53d7\u4fe1\u4efb\u7684Src\u6307\u9488\uff0c\u5e76\u5c06\u5927\u5c0f\u5b57\u8282\u590d\u5236\u5230\u4e0d\u53d7\u4fe1\u4efb\u7684dst\u6307\u9488\u2026\u3002\u54ce\u5440\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528memmove\u64cd\u4f5c\u6765\u8bfb\u53d6\u4efb\u610f\u5185\u6838\u6307\u9488\uff0c\u4f46\u662f\u5199\u5165\u4efb\u610f\u5185\u6838\u6307\u9488\u53c8\u5982\u4f55\u5462\uff1f\u95ee\u9898\u662fTMXMSCheckSystemObjectByName2\u7684\u9a8c\u8bc1\u5668\u8981\u6c42\u76ee\u6807\u662f\u7528\u6237\u6a21\u5f0f\u5185\u5b58\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4ee3\u7801\u4e2d\u8fd8\u6709\u53e6\u4e00\u4e2a\u9519\u8bef\u3002\n\u4e0b\u4e00\u884c*params-&gt\uff1boutsize=size\uff1b\u4ece\u6211\u4eec\u7684\u7ed3\u6784\u4e2d\u83b7\u53d6size\u6210\u5458\uff0c\u5e76\u5c06\u5176\u653e\u5728\u7531\u4e0d\u53d7\u4fe1\u4efb\u7684outsize\u6210\u5458\u6307\u5b9a\u7684\u6307\u9488\u5904\u3002\u6ca1\u6709\u5bf9\u7279\u5927\u53f7\u6307\u5411\u4ec0\u4e48\u8fdb\u884c\u9a8c\u8bc1\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2aIOCTL\u8c03\u7528\u4e2d\u6700\u591a\u7f16\u5199\u4e00\u4e2aDWORD\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSrc\u6307\u9488\u9700\u8981\u6307\u5411\u6700\u5927\u5b57\u8282\u5927\u5c0f\u7684\u6709\u6548\u5185\u6838\u5185\u5b58\u3002\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u6211\u521a\u521a\u4f20\u9012\u4e86ntoskrnl\u6a21\u5757\u7684\u57fa\u7840\u4f5c\u4e3a\u6e90\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u4efb\u610f\u7684\u5199\u539f\u8bed\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u627e\u5230\u7684\u5378\u8f7d\u4f8b\u7a0b\u6280\u5de7\u6765\u6267\u884c\u4ee3\u7801\u3002\u5c3d\u7ba1\u5982\u679c\u6211\u4eec\u4ece\u7528\u6237\u6a21\u5f0f\u8c03\u7528\uff0c\u9a8c\u8bc1\u5668\u4f8b\u7a0b\u4f1a\u963b\u6b62\u6211\u4eec\u4f20\u5165\u5185\u6838\u6307\u9488\uff0c\u4f46\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u901a\u8fc7\u9a8c\u8bc1\u5668\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528WRITE\u539f\u8bed\u5199\u5165\u9a71\u52a8\u7a0b\u5e8f\u7684.Data\u90e8\u5206\u5185\u7684\u5378\u8f7d\u4f8b\u7a0b\u6570\u7ec4\uff0c\u5e76\u653e\u7f6e\u6240\u9700\u7684\u6307\u9488\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u559c\u6b22\u5728\u6211\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u575a\u6301\u4e25\u683c\u7684\u5b89\u5168\u6027\uff0c\u4f46\u8fd9\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u8ba9\u6211\u6253\u7834\u4e86\u8fd9\u4e2a\u4f20\u7edf\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u4e0d\u4f1a\u8ba8\u8bba\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b89\u5168\u95ee\u9898\uff0c\u800c\u662f\u5168\u7403\u6570\u767e\u4e07\u8d8b\u52bf\u79d1\u6280\u5ba2\u6237\u4f7f\u7528\u7684\u53ef\u6015\u4ee3\u7801\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u4ece0\u52300x10000\u7684for\u5faa\u73af\uff0c\u9012\u589e4\uff0c\u5e76\u68c0\u7d22\u5f53\u524d\u7d22\u5f15\u540e\u9762\u7684\u8fdb\u7a0b\u5bf9\u8c61(\u5982\u679c\u6709)\u3002\u5982\u679c\u7d22\u5f15\u786e\u5b9e\u4e0e\u67d0\u4e2a\u8fdb\u7a0b\u5339\u914d\uff0c\u5219\u8be5\u51fd\u6570\u68c0\u67e5\u8be5\u8fdb\u7a0b\u7684\u540d\u79f0\u662f\u5426\u4e3acsrss.exe\u3002\u5982\u679c\u8fdb\u7a0b\u540d\u4e3acsrss.exe\uff0c\u5219\u6700\u7ec8\u68c0\u67e5\u8be5\u8fdb\u7a0b\u7684\u4f1a\u8bddID\u662f\u5426\u4e3a0\u3002\u6765\u5427\uff0c\u4f19\u8ba1\u4eec\uff0c\u786e\u5b9e\u6709\u8bb0\u5f55\u5728\u6848\u7684api\u53ef\u4ee5\u679a\u4e3e\u5185\u6838\u2026\u4e2d\u7684\u8fdb\u7a0b\u3002\u66b4\u529b\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\n\u5f53\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u6211\u4e0d\u786e\u5b9a\u6211\u770b\u5230\u7684\u662f\u4ec0\u4e48\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u5f53\u524d\u8fdb\u7a0b(\u6070\u597d\u662f\u7cfb\u7edf\u8fdb\u7a0b)\uff0c\u56e0\u4e3a\u8fd9\u662f\u5728\u7cfb\u7edf\u7ebf\u7a0b\u4e2d\u8c03\u7528\u7684\uff0c\u7136\u540e\u5b83\u5728\u7b2c\u4e00\u4e2a0x1000\u5b57\u8282\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\u201csystem\u201d\u3002\u73b0\u5728\u53d1\u751f\u7684\u662f\u2026\u3002Trend Micro\u901a\u8fc7\u5728\u5176EPROCESS\u7ed3\u6784\u4e2d\u67e5\u627e\u7cfb\u7edf\u8fdb\u7a0b\u7684\u5df2\u77e5\u540d\u79f0\uff0c\u5bf9EPROCESS\u7ed3\u6784\u7684ImageFileName\u6210\u5458\u8fdb\u884c\u66b4\u529b\u653b\u51fb\u3002\u5982\u679c\u9700\u8981\u8fdb\u7a0b\u7684ImageFileName\uff0c\u53ea\u9700\u4f7f\u7528\u5e26\u6709ProcessImageFileName\u7c7b\u2026\u7684ZwQueryInformationProcess\u3002\n\u5728\u6b64\u51fd\u6570\u4e2d\uff0cTrend Micro\u4f7f\u7528csrss\u8fdb\u7a0b\u7684PID\u6765\u66b4\u529b\u5f3a\u5236EPROCESS\u7ed3\u6784\u7684PEB\u6210\u5458\u3002\u8be5\u51fd\u6570\u4f7f\u7528PsLookupProcessByProcessId\u68c0\u7d22csrss\u8fdb\u7a0b\u7684EPROCESS\u5bf9\u8c61\uff0c\u5e76\u4f7f\u7528ZwQueryInformationProcess\u68c0\u7d22PebBaseAddress\u3002\u4f7f\u7528\u8fd9\u4e9b\u6307\u9488\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u4e0e\u5df2\u77e5PEB\u6307\u9488\u5339\u914d\u7684\u4ece0\u52300x2000\u7684\u6bcf\u4e2a\u504f\u79fb\u91cf\u3002\u5982\u679c\u60a8\u53ea\u80fd\u4f7f\u7528ZwQueryInformationProcess\uff0c\u5c31\u50cf\u60a8\u5df2\u7ecf\u4f7f\u7528\u2026\u4e00\u6837\uff0c\u90a3\u4e48\u67e5\u627ePEB\u6210\u5458\u7684\u504f\u79fb\u91cf\u53c8\u6709\u4ec0\u4e48\u610f\u4e49\u5462\n\u5728\u8fd9\u91cc\uff0cTrend Micro\u4f7f\u7528\u5177\u6709\u5df2\u77e5\u8d77\u59cb\u5730\u5740\u7684\u5f53\u524d\u7cfb\u7edf\u7ebf\u7a0b\u6765\u66b4\u529b\u5f3a\u5236ETHREAD\u7ed3\u6784\u7684StartAddress\u6210\u5458\u3002\u4e0d\u9700\u8981\u67e5\u627e\u539f\u59cb\u504f\u79fb\u91cf\u7684\u53e6\u4e00\u79cd\u60c5\u51b5\u3002ZwQueryInformationThread\u6709\u4e00\u4e2a\u534a\u6587\u6863\u5316\u7684\u7c7b\uff0c\u540d\u4e3aThreadQuerySetWin32StartAddress\uff0c\u5b83\u4e3a\u60a8\u63d0\u4f9b\u7ebf\u7a0b\u7684\u8d77\u59cb\u5730\u5740\u3002\n\u5f53\u6211\u6700\u521d\u53cd\u7f16\u8bd1\u6b64\u51fd\u6570\u65f6\uff0c\u6211\u8ba4\u4e3aIDA Pro\u53ef\u80fd\u4f1a\u7b80\u5316Memset\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6b64\u51fd\u6570\u6240\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6240\u6709TrueApi\u7ed3\u6784\u6210\u5458\u8bbe\u7f6e\u4e3a\u96f6\u3002\u6211\u51b3\u5b9a\u5e26\u4e0a\u3002\n..", "note_en": "For a recent project, I had to do research into methods rootkits are detected and the most effective measures to catch them when I asked the question, what are some existing solutions to rootkits and how do they function? My search eventually landed me on the  TrendMicro RootkitBuster which describes itself as \u201cA free tool that scans hidden files, registry entries, processes, drivers, and the master boot record (MBR) to identify and remove rootkits\u201d.\n The features it boasted certainly caught my attention. They were claiming to detect several techniques rootkits use to burrow themselves into a machine, but how does it work under the hood and can we abuse it? I decided to find out by reverse engineering core components of the application itself, leading me down a rabbit hole of code that scarred me permanently, to say the least.\n  Starting the adventure, launching the application resulted in a fancy warning by  Process Hacker that a new driver had been installed.\n  Already off to a good start, we got a copy of Trend Micro\u2019s \u201ccommon driver\u201d, this was definitely something to look into. Besides this driver being installed, this friendly window opened prompting me to accept Trend Micro\u2019s user agreement.\n  I wasn\u2019t in the mood to sign away my soul to the devil just yet, especially since the terms included a clause stating  \u201cYou agree not to attempt to reverse engineer, decompile, modify, translate, disassemble, discover the source code of, or create derivative works from\u2026\u201c.\n Thankfully, Trend Micro already deployed their software on to my machine before I accepted any terms. Funnily enough, when I tried to exit the process by right-clicking on the application and pressing \u201cClose Window\u201d, it completely evaded the license agreement and went to the main screen of the scanner, even though I had selected the \u201cI do not accept the terms of the license agreement\u201d option. Thanks Trend Micro!\n  I noticed a quick command prompt flash when I started the application. It turns out this was the result of a 7-Zip Self Extracting binary which extracted the rest of the application components to  %TEMP%\\RootkitBuster.\n   The  tmcomm driver which was labeled as the \u201cTrendMicro Common Module\u201d and \u201cTrend Micro Eyes\u201d. A quick overlook of the driver indicated that it accepted communication from  privileged user-mode applications and performed common actions that are not specific to the Rootkit Remover itself. This driver  is not only used in the Rootkit Buster and is implemented throughout Trend Micro\u2019s product line.\n In the follow sections, we\u2019ll be deep diving into the  tmcomm driver . We\u2019ll focus our research into finding different ways to abuse the driver\u2019s functionality, with the end goal being able to execute kernel code. I decided not to look into the  tmrkb.sys because although I am sure it is vulnerable, it seems to only be used for the Rootkit Buster.\n  Let\u2019s begin our adventure with the base driver that appears to be used not only for this Rootkit Remover utility, but several other Trend Micro products as well. As I stated in the previous section, a very brief look-over of the driver revealed that it does allow for communication from  privileged user-mode applications.\n  One of the first actions the driver takes is to create a device to accept IOCTL communication from user-mode. The driver creates a device at the path  \\Device\\TmComm and a symbolic link to the device at  \\DosDevices\\TmComm (accessible via  \\\\.\\Global\\TmComm). The driver entrypoint initializes a significant amount of classes and structure used throughout the driver, however, for our purposes, it is not necessary to cover each one.\n I was happy to see that Trend Micro made the correct decision of restricting their device to the  SYSTEM user and Administrators. This meant that even if we did find exploitable code, because any communication would require at least Administrative privileges, a significant amount of the industry would not consider it a vulnerability. For example,  Microsoft themselves do not consider Administrator to Kernel to be a security boundary because of the significant amount of access they get. This does not mean however exploitable code in Trend Micro\u2019s drivers won\u2019t be useful.\n   A large component of the driver is its \u201cTrueApi\u201d class which is instantiated during the driver\u2019s entrypoint. The class contains pointers to  imported functions that get used throughout the driver. Here is a reversed structure:\n struct  TrueApi {\t BYTE  Initialized ;\t PVOID  ZwQuerySystemInformation ;\t PVOID  ZwCreateFile ;\t PVOID  unk1 ;  // Initialized as NULL.\t PVOID  ZwQueryDirectoryFile ;\t PVOID  ZwClose ;\t PVOID  ZwOpenDirectoryObjectWrapper ;\t PVOID  ZwQueryDirectoryObject ;\t PVOID  ZwDuplicateObject ;\t PVOID  unk2 ;  // Initialized as NULL.\t PVOID  ZwOpenKey ;\t PVOID  ZwEnumerateKey ;\t PVOID  ZwEnumerateValueKey ;\t PVOID  ZwCreateKey ;\t PVOID  ZwQueryValueKey ;\t PVOID  ZwQueryKey ;\t PVOID  ZwDeleteKey ;\t PVOID  ZwTerminateProcess ;\t PVOID  ZwOpenProcess ;\t PVOID  ZwSetValueKey ;\t PVOID  ZwDeleteValueKey ;\t PVOID  ZwCreateSection ;\t PVOID  ZwQueryInformationFile ;\t PVOID  ZwSetInformationFile ;\t PVOID  ZwMapViewOfSection ;\t PVOID  ZwUnmapViewOfSection ;\t PVOID  ZwReadFile ;\t PVOID  ZwWriteFile ;\t PVOID  ZwQuerySecurityObject ;\t PVOID  unk3 ;  // Initialized as NULL.\t PVOID  unk4 ;  // Initialized as NULL.\t PVOID  ZwSetSecurityObject ; };\n Looking at the code, the TrueApi is primarily used as an alternative to calling the functions directly. My educated guess is that Trend Micro is caching these imported functions at initialization to evade  delayed IAT hooks. Since the TrueApi is resolved by looking at the import table however, if there is a rootkit that hooks the IAT on driver load, this mechanism is useless.\n  Similar to the TrueApi, the XrayApi is another major class in the driver. This class is used to access several low-level devices and to interact directly with the filesystem. A major component of the XrayConfig is its \u201cconfig\u201d. Here is a partially reverse-engineered structure representing the config data:\n struct  XrayConfigData {\t WORD  Size ;\t CHAR  pad1 [ 2 ];\t DWORD  SystemBuildNumber ;\t DWORD  UnkOffset1 ;\t DWORD  UnkOffset2 ;\t DWORD  UnkOffset3 ;\t CHAR  pad2 [ 4 ];\t PVOID  NotificationEntryIdentifier ;\t PVOID  NtoskrnlBase ;\t PVOID  IopRootDeviceNode ;\t PVOID  PpDevNodeLockTree ;\t PVOID  ExInitializeNPagedLookasideListInternal ;\t PVOID  ExDeleteNPagedLookasideList ;\t CHAR  unkpad3 [ 16 ];\t PVOID  KeAcquireInStackQueuedSpinLockAtDpcLevel ;\t PVOID  KeReleaseInStackQueuedSpinLockFromDpcLevel ;\t ... };\n The config data stores the location of internal/undocumented variables in the Windows Kernel such as the  IopRootDeviceNode,  PpDevNodeLockTree,  ExInitializeNPagedLookasideListInternal, and  ExDeleteNPagedLookasideList. My educated guess for the purpose of this class is to access low-level devices directly rather than use documented methods which could be hijacked.\n  Before we get into what the driver allows us to do, we need to understand how IOCTL requests are handled.\n In the primary dispatch function, the Trend Micro driver converts the data alongside a  IRP_MJ_DEVICE_CONTROL request to a proprietary structure I call a  TmIoctlRequest.\n  The way Trend Micro organized dispatching of IOCTL requests is by having several \u201cdispatch tables\u201d. The \u201cbase dispatch table\u201d simply contains an IOCTL Code and a corresponding \u201csub dispatch function\u201d. For example, when you send an IOCTL request with the code  0xDEADBEEF, it will compare each entry of this base dispatch table and pass along the data if there is a table entry that has the matching code. A base table entry can be represented by the structure below:\n  After the  DispatchFunction is called, it typically verifies some of the data provided ranging from basic  nullptr checks to checking the size of the input and out buffers. These \u201csub dispatch functions\u201d then do another lookup based on a code passed in the user input buffer to find the corresponding \u201csub table entry\u201d. A sub table entry can be represented by the structure below:\n  Before calling the  PrimaryRoutine, which actually performs the requested action, the sub dispatch function calls the  ValidatorRoutine. This routine does \u201caction-specific\u201d validation on the input buffer, meaning that it performs checks on the data the  PrimaryRoutine will be using. Only if the  ValidatorRoutine returns successfully will the  PrimaryRoutine be called.\n Now that we have a basic understanding of how IOCTL requests are handled, let\u2019s explore what they allow us to do. Referring back to the definition of the \u201cbase dispatch table\u201d, which stores \u201csub dispatch functions\u201d, let\u2019s explore each base table entry and figure out what each sub dispatch table allows us to do!\n   This first dispatch table appears to interact with the filesystem, but what does that actually mean? To start things off, the code for the \u201csub dispatch table\u201d entry is obtained by dereferencing a  DWORD from the start of the input buffer. This means that to specify which sub dispatch entry you\u2019d like to execute, you simply need to set a  DWORD at the base of the input buffer to correspond with that entries\u2019  **OperationCode**.\n To make our lives easier, Trend Micro conveniently included a significant amount of debugging strings, often giving an idea of what a function does. Here is a table of the functions I reversed in this sub dispatch table and what they allow us to do.\n    This dispatch table is primarily used to control the driver\u2019s  process scanning features. Many functions in this sub dispatch table use a separate scanning thread to synchronously search for processes via various methods both documented and undocumented.\n Returns TRUE if the system is \u201csupported\u201d (whether or not they have hardcoded offsets for your build).\n These IOCTLs revolve around a few structures I call \u201cMicroTask\u201d and \u201cMicroScan\u201d. Here are the structures reverse-engineered:\n struct  MicroTaskVtable {\t PVOID  Constructor ;\t PVOID  NewNode ;\t PVOID  DeleteNode ;\t PVOID  Insert ;\t PVOID  InsertAfter ;\t PVOID  InsertBefore ;\t PVOID  First ;\t PVOID  Next ;\t PVOID  Remove ;\t PVOID  RemoveHead ;\t PVOID  RemoveTail ;\t PVOID  unk2 ;\t PVOID  IsEmpty ; }; struct  MicroTask {\t MicroTaskVtable *  vtable ;\t PVOID  self1 ;  // ptr to itself.\t PVOID  self2 ;  // ptr to itself.\t DWORD_PTR  unk1 ;\t PVOID  MemoryAllocator ;\t PVOID  CurrentListItem ;\t PVOID  PreviousListItem ;\t DWORD  ListSize ;\t DWORD  unk4 ;  // Initialized as NULL.\t char  ListName [ 50 ]; }; struct  MicroScanVtable {\t PVOID  Constructor ;\t PVOID  GetTask ; }; struct  MicroScan {\t MicroScanVtable *  vtable ;\t DWORD  Tag ;  // Always &#39;PANS&#39;.\t char  pad1 [ 4 ];\t DWORD64  TasksSize ;\t MicroTask  Tasks [ 4 ]; };\n For most of the IOCTLs in this sub dispatch table, a MicroScan is passed in by the client which the driver populates. We\u2019ll look into how we can abuse this trust in the next section.\n  When I was initially reverse engineering the functions in this sub dispatch table, I was quite confused because the code \u201cdidn\u2019t seem right\u201d. It appeared like the  MicroScan kernel pointer returned by functions such as  GetProcessesAllMethods was being directly passed onto other functions such as  DeleteTaskResults by  the client. These functions would then take this untrusted kernel pointer and with almost no validation call functions in the virtual function table specified at the base of the class.\n  Taking a look at the \u201cvalidation routine\u201d for the  DeleteTaskResults sub dispatch table entry, the only validation performed on the  MicroScan instance specified at the input buffer  + 0x10 was making sure it was a valid kernel address.\n  The only other check besides making sure that the supplied pointer was in kernel memory was a simple check in  DeleteTaskResults to make sure the  Tag member of the  MicroScan is  PANS.\n  Since  DeleteTaskResults calls the constructor specified in the virtual function table of the  MicroScan instance, to call an arbitrary kernel function we need to:\n Be able to allocate at least 10 bytes of kernel memory (for vtable and tag).\n  Control the allocated kernel memory to set the virtual function table pointer and the tag.\n Fortunately a mentor of mine,  Alex Ionescu, was able to point me in the right direction when it comes to allocating and controlling kernel memory from user-mode. A  HackInTheBox Magazine from 2010 had an article by  Matthew Jurczyk called \u201cReserve Objects in Windows 7\u201d. This article discussed using APC Reserve Objects, which was introduced in Windows 7, to allocate controllable kernel memory from user-mode. The general idea is that you can queue an Apc to an Apc Reserve Object with the  ApcRoutine and  ApcArgumentX members being the data you want in kernel memory and then use  NtQuerySystemInformation to find the Apc Reserve Object in kernel memory. This reserve object will have the previously specified  KAPC variables in a row, allowing a user-mode application to control up to 32 bytes of kernel memory (on 64-bit) and know the location of the kernel memory. I would strongly suggest reading the article if you\u2019d like to learn more.\n This trick still works in Windows 10, meaning we\u2019re able to meet all three requirements. By using an Apc Reserve Object, we can allocate at least 10 bytes for the  MicroScan structure and bypass the inadequate checks completely. The result? The ability to call arbitrary kernel pointers:\n  Although I provided a specific example of vulnerable code in  DeleteTaskResults, any of the functions I marked in the table with asterisks are vulnerable. They all trust the kernel pointer specified by the untrusted client and end up calling a function in the  MicroScan instance\u2019s virtual function table.\n       This function caught my eye the moment I saw its name in a debug string. Using this sub dispatch table function, an  untrusted client can register up to 16 arbitrary \u201cunload routines\u201d that get called when the driver unloads. This function\u2019s validator routine checks this pointer from the untrusted client buffer for validity. If the caller is from user-mode, the validator calls  ProbeForRead on the untrusted pointer. If the caller is from kernel-mode, the validator checks that it is a valid kernel memory address.\n This function cannot immediately be used in an exploit from user-mode. The problem is that if we\u2019re a user-mode caller, we  must provide a user-mode pointer, because the validator routine uses  ProbeForRead. When the driver unloads, this user-mode pointer gets called, but it won\u2019t do much because of mitigations such as  SMEP. I\u2019ll reference this function in a later section, but it is genuinely scary to see an untrusted user-mode client being able to direct a driver to call an arbitrary pointer  by design.\n  This sub dispatch table is used to interact with the XrayApi. Although the Xray Api is generally used by scans implemented in the kernel, this sub dispatch table provides limited access for the client to interact with physical drives.\n    The final sub dispatch is used to scan for hooks in a variety of system structures. It was interesting to see the variety of hooks Trend Micro checks for including hooks in object types, major function tables, and even function inline hooks.\n   Yeah,  TMXMSCheckSystemObjectByName2 is as bad as it sounds. Before looking at the function directly, here\u2019s a few reverse engineered structures used later:\n struct  CheckSystemObjectParams {  PVOID  Src ;  PVOID  Dst ;  DWORD  Size ;  DWORD *  OutSize ; }; struct  TXMSParams {  DWORD  OutStatus ;  DWORD  HandlerID ;  CHAR  unk [ 0x38 ];  CheckSystemObjectParams *  CheckParams ; };\n TMXMSCheckSystemObjectByName2 takes in a Source pointer, Destination pointer, and a Size in bytes. The validator function called for  TMXMSCheckSystemObjectByName2 checks the following:\n  Essentially, this means that we need to pass a valid  CheckParams structure and the  Dst pointer we pass is in user-mode memory. Now let\u2019s look at the function itself:\n  Although that for loop may seem scary, all it is doing is an optimized method of checking a range of kernel memory. For every memory page in the range  Src to  Src + Size, the function calls  MmIsAddressValid. The real scary part is the following operations:\n  These lines take an untrusted  Src pointer and copies  Size bytes to the untrusted  Dst pointer\u2026 yikes. We can use the  memmove operations to read an arbitrary kernel pointer, but what about writing to an arbitrary kernel pointer? The problem is that the validator for  TMXMSCheckSystemObjectByName2 requires that the destination is user-mode memory. Fortunately, there is another bug in the code.\n The next  *params-&gt;OutSize = Size; line takes the  Size member from our structure and places it at the pointer specified by the untrusted  OutSize member. No verification is done on what  OutSize points to, thus we can write up to a DWORD each IOCTL call. One caveat is that the  Src pointer would need to point to valid kernel memory for up to  Size bytes. To meet this requirement, I just passed the base of the  ntoskrnl module as the source.\n Using this arbitrary write primitive, we can use the previously found unload routines trick to execute code. Although the validator routine prevents us from passing in a kernel pointer if we\u2019re calling from user-mode, we don\u2019t actually need to go through the validator. Instead, we can write to the unload routine array inside of the driver\u2019s  .data section using our write primitive and place the pointer we want.\n  Typically, I like sticking to strictly security in my blog posts, but this driver made me break that tradition. In this section, we won\u2019t be covering the security issues of the driver, rather the terrible code that\u2019s used by millions of Trend Micro customers around the world.\n   Let\u2019s take a look at what\u2019s happening here. This function has a for loop from 0 to 0x10000, incrementing by 4, and retrieves the object of the process behind the current index (if there is one). If the index does match a process, the function checks if the name of the process is  csrss.exe. If the process is named  csrss.exe, the final check is that the session ID of the process is 0. Come on guys, there is literally documented API to enumerate processes from kernel\u2026 what\u2019s the point of bruteforcing?\n    When I first saw this code, I wasn\u2019t sure what I was looking at. The function takes the current process, which happens to be the System process since this is called in a System thread, then it searches for the string \u201cSystem\u201d in the first 0x1000 bytes. What\u2019s happening is\u2026 Trend Micro is bruteforcing the  ImageFileName member of the  EPROCESS structure by looking for the known name of the System process inside of its  EPROCESS structure. If you wanted the  ImageFileName of a process, just use  ZwQueryInformationProcess with the  ProcessImageFileName class\u2026\n   In this function, Trend Micro uses the PID of the  csrss process to brute force the  Peb member of the  EPROCESS structure. The function retrieves the  EPROCESS object of the  csrss process by using  PsLookupProcessByProcessId and it retrieves the  PebBaseAddress by using  ZwQueryInformationProcess. Using those pointers, it tries every offset from 0 to 0x2000 that matches the known  Peb pointer. What\u2019s the point of finding the offset of the  Peb member when you can just use  ZwQueryInformationProcess, as you already do\u2026\n   Here Trend Micro uses the current system thread with a known start address to brute force the  StartAddress member of the  ETHREAD structure. Another case where finding the raw offset is unnecessary. There is a semi-documented class of  ZwQueryInformationThread called  ThreadQuerySetWin32StartAddress which gives you the start address of a thread.\n   When I initially decompiled this function, I thought IDA Pro might be simplifying a  memset operation, because all this function was doing was setting all of the  TrueApi structure members to zero. I decided to tak\n......", "posttime": "2020-05-19 01:01:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rootkit,pvoid", "title": "\u5982\u4f55\u4f7f\u7528Trend Micro\u7684Rootkit Remover\u5b89\u88c5Rootkit", "title_en": "How to Use Trend Micro's Rootkit Remover to Install a Rootkit", "transed": 1, "url": "https://d4stiny.github.io/How-to-use-Trend-Micro-Rootkit-Remover-to-Install-a-Rootkit/", "via": "", "real_tags": ["rootkit", "pvoid"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002662, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[\u5217\u8868\u4e2d\u7684\u4e0a\u4e00\u4e2a][\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u524d\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0b\u4e00\u4e2a]\u5217\u8868\uff1aopenbsd-techSubject\uff1aclarityFrom\uff1a&lt\uff1bjohnc()armadilloSpace\uff01COM&gt\uff1b\u65e5\u671f\uff1a2020-05-16 19\uff1a13\uff1a37\u6d88\u606f-ID\uff1a20200516121337.533b97457880de85c8001c140e636eb6.035aeb57e5.wbe()\u7535\u5b50\u90ae\u4ef618\uff01\u597d\u7238\u7238\uff01com[\u4e0b\u8f7d\u539f\u59cb\u6d88\u606f\u6216\u6b63\u6587](\u4e0d\u786e\u5b9a\u8fd9\u662f\u5c5e\u4e8etech@\u8fd8\u662fmisc@)\u5173\u4e8e\u975e\u529f\u80fd\u4ee3\u7801\u66f4\u6539\u7684\u60f3\u6cd5\u662f\u4ec0\u4e48\uff0c\u8fd9\u4e9b\u66f4\u6539\u53ea\u662f\u4e3a\u4e86\u5728\u4e0d\u66f4\u6539\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u63d0\u9ad8\u6e05\u6670\u5ea6\uff1f\u4f8b\u5982\uff0c\u5728wsdisplay_mulops\u7ed3\u6784\u4e2d\uff0c\u6709int(*alloc_attr)(void*c\uff0cint fg\uff0cint bg\uff0cint flag\uff0clong*attrp)\uff1bvoid(*unpack_attr)(void*c\uff0clong attr\uff0cint*fg\uff0cint*bg\uff0cint*ul)\uff1b\u5728\u7ed3\u6784\u7684\u672b\u5c3e\u662f\u8fd9\u6837\u7684\u6ce8\u91ca\uff0c\u8fd9\u8868\u660e\u81f3\u5c11\u6709\u4eba(\u9664\u4e86\u6211\u4e4b\u5916)\u88ab\u5b83\u5f04\u7cca\u6d82\u4e86\uff1a/*XXX\u9700\u8981\u4e00\u4e2afree_attr()\uff1f*/\u6211\u5efa\u8baealloc_attr\u5e94\u8be5\u91cd\u547d\u540d\u4e3apack_attr\uff0c\u4f46\u662f\u572839\u4e2a\u72ec\u7279\u7684\u6587\u4ef6\u4e2d\uff0calloc_attr\u4e0a\u670984\u4e2a\u5339\u914d\u9879\u3002\u540c\u6837\uff0c\u6211\u5728\u9605\u8bfb\u4ee3\u7801\u65f6\u4f1a\u505a\u7b14\u8bb0\uff0c\u5e76\u4e14\u5728\u5404\u79cd\u6587\u4ef6\u548c\u51fd\u6570\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u6ce8\u91ca\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u4eba\u66f4\u5feb\u5730\u638c\u63e1\u672a\u6765\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u662f\u8fd9\u6837\u505a\u7684\u3002\u6211\u5e0c\u671b\u5199\u4e00\u7bc7\u5173\u4e8e\u6211\u7684\u63a2\u7d22\u7684\u50cf\u6837\u7684\u6587\u7ae0\uff0c\u4f46\u5185\u8054\u6ce8\u91ca\u662f\u66f4\u6301\u4e45\u7684\u6587\u6863\u3002[\u5217\u8868\u4e2d\u7684\u4e0a\u4e00\u4e2a][\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0a\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0b\u4e00\u4e2a]", "note_en": "[ prev in list] [ next in list] [ prev in thread] [ next in thread]   List:  openbsd-techSubject:  Code changes for clarityFrom:  &lt;johnc () armadilloaerospace ! com&gt;Date:  2020-05-16 19:13:37Message-ID:  20200516121337.533b97457880de85c8001c140e636eb6.035aeb57e5.wbe () email18 ! godaddy ! com[Download RAW  message or  body](Not sure if this belongs in tech@ or misc@)What is the thinking around non-functional code changes that justimprove clarity without functionality changes? I can imagine badexperiences with that, but there is certainly room for improvement.For instance, in the wsdisplay_emulops structure, there are:int\t(*alloc_attr)(void *c, int fg, int bg, int flags, long *attrp);void\t(*unpack_attr)(void *c, long attr, int *fg, int *bg, int *ul);And at the end of the structure is this comment, showing that atleast someone (other than me) was confused by it:\t/* XXX need a free_attr() ??? */I would suggest that alloc_attr should be renamed to pack_attr, butthere are 84 matches on alloc_attr across 39 unique files.Similarly, I am taking notes as I read the code, and adding a fewcomments in various files and functions could help other people getup to speed much faster in the future, but I am hesitant to submitpatches. I am hoping to write a decent article about my explorations,but inline comments are more durable documentation. [ prev in list] [ next in list] [ prev in thread] [ next in thread]", "posttime": "2020-05-19 01:01:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,carmack,attr", "title": "John Carmack\u6b63\u5728\u9605\u8bfb\u548c\u8d21\u732eOpenBSD\u6e90\u4ee3\u7801", "title_en": "John Carmack is reading and contributing to OpenBSD source code", "transed": 1, "url": "https://marc.info/?l=openbsd-tech&m=158965652915344&w=2", "via": "", "real_tags": ["\u4ee3\u7801", "carmack", "attr"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002661, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5230\u8fbe\u7f8e\u56fd\u540e\u7684\u5934\u4e24\u4e2a\u6708\uff0c\u540e\u671f\u98ce\u9669\u6295\u8d44(VC)\u6d3b\u52a8\u6ca1\u6709\u663e\u8457\u53d8\u5316\uff0c\u4f46\u65e9\u671f\u98ce\u9669\u6295\u8d44\u6d3b\u52a8\u4e0b\u964d\u4e8638%\u3002\u65e9\u671f\u98ce\u9669\u6295\u8d44\u5bf9\u5e02\u573a\u72b6\u51b5\u7684\u7279\u522b\u654f\u611f\u6027-\u6211\u4eec\u8868\u660e\uff0c\u8fd9\u57281976\u5e74\u81f32017\u5e7440\u5e74\u7684\u8870\u9000\u4e2d\u662f\u5e38\u89c1\u7684-\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u98ce\u9669\u6295\u8d44\u7684\u987a\u5468\u671f\u6027\u53ca\u5176\u5bf9\u521b\u65b0\u7684\u5f71\u54cd\u7684\u8d28\u7591\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u98ce\u9669\u6295\u8d44\u76f8\u5bf9\u4e0d\u53d7\u516c\u5f00\u5e02\u573a\u5f71\u54cd\u7684\u666e\u904d\u8bf4\u6cd5\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u5bf9\u521b\u65b0\u7684\u5f71\u54cd\u5e76\u4e0d\u662f\u826f\u6027\u7684\uff1a\u7531\u98ce\u6295\u652f\u6301\u7684\u516c\u53f8\u5728\u7ecf\u6d4e\u8870\u9000\u671f\u95f4\u8fdb\u884c\u7684\u521b\u65b0\u88ab\u5f15\u7528\u7684\u6b21\u6570\u8f83\u5c11\uff0c\u539f\u521b\u6027\u8f83\u5dee\uff0c\u4e00\u822c\u6027\u8f83\u5dee\uff0c\u4e0e\u57fa\u7840\u79d1\u5b66\u7684\u5173\u8054\u5ea6\u4e5f\u8f83\u4f4e\u3002\u5bf9\u4e8e\u7531\u65e9\u671f\u98ce\u9669\u57fa\u91d1\u8d44\u52a9\u7684\u521d\u521b\u4f01\u4e1a\u6765\u8bf4\uff0c\u8fd9\u4e9b\u5f71\u54cd\u66f4\u4e3a\u660e\u663e\u3002\u8003\u8651\u5230\u98ce\u9669\u6295\u8d44\u5728\u4e3a\u7ecf\u6d4e\u4e2d\u7684\u7a81\u7834\u6027\u521b\u65b0\u63d0\u4f9b\u8d44\u91d1\u65b9\u9762\u626e\u6f14\u7684\u91cd\u8981\u89d2\u8272\uff0c\u6211\u4eec\u7684\u53d1\u73b0\u5bf9\u66f4\u5e7f\u6cdb\u5730\u8ba8\u8bba\u8de8\u5546\u4e1a\u5468\u671f\u7684\u521b\u65b0\u7684\u6027\u8d28\u5177\u6709\u91cd\u8981\u610f\u4e49", "note_en": "Although late-stage venture capital (VC) activity did not change dramatically in the first two months after the COVID-19 pandemic reached the U.S., early-stage VC activity declined by 38%. The particular sensitivity of early-stage VC investment to market conditions\u2014which we show to be common across recessions spanning four decades from 1976 to 2017\u2014raises questions about the pro-cyclicality of VC and its implications for innovation, especially in light of the common narrative that VC is relatively insulated from public markets. We find that the implications for innovation are not benign: innovation conducted by VC-backed firms in recessions is less highly cited, less original, less general, and less closely related to fundamental science. These effects are more pronounced for startups financed by early-stage venture funds. Given the important role that VC plays in financing breakthrough innovations in the economy, our findings have implications for the broader discussion on the nature of innovation across business cycles", "posttime": "2020-05-19 01:01:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d44\u672c,capital,\u521b\u65b0", "title": "\u98ce\u9669\u8d44\u672c\u5982\u4f55\u8ddf\u968f\u7ecf\u6d4e\u4e0b\u6ed1\u5e76\u9650\u5236\u521b\u65b0", "title_en": "How venture capital follows the economy down and curtails innovation", "transed": 1, "url": "https://www.nber.org/papers/w27150", "via": "", "real_tags": ["\u8d44\u672c", "capital", "\u521b\u65b0"]}, {"category": "", "categoryclass": "", "imagename": "fcd32b4f875a968af27581eaf5699dc5.png", "infoid": 1002660, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5Android 10\u4e3a\u76ee\u6807\u7684\u4e0d\u53d7\u4fe1\u4efb\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e3b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u8c03\u7528exec()\u3002\u6267\u884c\u53ef\u5199\u5e94\u7528\u7a0b\u5e8f\u4e3b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5c5e\u4e8eW^X\u8fdd\u89c4\u3002\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u53ea\u52a0\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684APK\u6587\u4ef6\u4e2d\u534a\u5d4c\u5165\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\n\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0cTermux\u9700\u8981\u66f4\u65b0\u5176\u76ee\u6807API\u3002\u6b64\u9875\u9762\u7528\u4e8e\u6536\u96c6\u6709\u5173\u5982\u4f55\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u60f3\u6cd5\u548c\u4fe1\u606f\u3002", "note_en": "Untrusted apps that target Android 10 cannot invoke exec() on files withinthe app&#39;s home directory. This execution of files from the writable app homedirectory is a W^X violation. Apps should load only the binary code that&#39;sembedded within an app&#39;s APK file.\n In the long run this needs to be fixed and Termux needs to update its target API.This page is for gathering ideas and information about how to work around this.", "posttime": "2020-05-19 01:00:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,android,\u627c\u6740,termux,\u5e94\u7528\u7a0b\u5e8f", "title": "Android 10\u6b63\u5728\u627c\u6740Termux\u7ec8\u7aef\u5e94\u7528", "title_en": "Android 10 Is killing Termux terminal app", "transed": 1, "url": "https://github.com/termux/termux-packages/wiki/Termux-and-Android-10", "via": "", "real_tags": ["app", "android", "\u627c\u6740", "termux", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "9b73312c19476fb321721106cc36795f.png", "infoid": 1002659, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4efb\u5929\u5802\u7684\u76ee\u6807\u662f\u4e3a\u73a9\u5bb6\u63d0\u4f9b\u5c3d\u53ef\u80fd\u597d\u7684\u56fe\u5f62\uff0c\u4e3a\u6b64\uff0c\u5b83\u5c06\u4e0e\u8ba1\u7b97\u673a\u56fe\u5f62\u9886\u57df\u6700\u5927\u7684\u53c2\u4e0e\u8005\u4e4b\u4e00\u5408\u4f5c\uff0c\u751f\u4ea7\u7ec8\u6781\u56fe\u5f62\u82af\u7247\u3002\n\u5176\u7ed3\u679c\u662f\u4e3a\u8fd9\u5bb6\u4eba\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6f02\u4eae\u7684\u63a7\u5236\u53f0\uff0c\u5e76\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u672c500\u9875\u7684\u624b\u518c\u3002\n\u522b\u62c5\u5fc3\uff0c\u6211\u5411\u4f60\u4fdd\u8bc1\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u4f1a\u90a3\u4e48\u957f&\u6211\u5f88\u4eab\u53d7\uff01\n\u4e3b\u5904\u7406\u5668\u662f\u8fd0\u884c\u9891\u7387\u4e3a93.75 MHz\u7684NEC VR4300\uff0c\u5b83\u662fSilicon Graphics\u7684MIPS R4300i\u7684\u4e8c\u8fdb\u5236\u517c\u5bb9\u7248\u672c\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a\nMIPS III ISA\uff1a\u53d6\u4ee3MIPS II\uff0c\u91c7\u7528\u65b0\u768464\u4f4d\u6307\u4ee4\u300264\u4f4d\u5b57\u79f0\u4e3a\u53cc\u5b57\u3002\n5\u7ea7\u6d41\u6c34\u7ebf\uff1a\u6700\u591a\u53ef\u4ee5\u540c\u65f6\u6267\u884c5\u6761\u6307\u4ee4(\u8be6\u7ec6\u8bf4\u660e\u53ef\u4ee5\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u627e\u5230)\u3002\n24 KB\u4e00\u7ea7\u7f13\u5b58\uff1a\u5206\u4e3a16 KB\u7528\u4e8e\u6307\u4ee4\uff0c8 KB\u7528\u4e8e\u6570\u636e\u3002\n\u6b64\u5c01\u88c5\u4e2d\u8fd8\u5305\u62ec\u4e00\u4e2a\u5185\u90e864\u4f4dFPU\uff0cCPU\u5c06\u5176\u8bc6\u522b\u4e3a\u534f\u5904\u7406\u5668(COP1)\uff0c\u5c3d\u7ba1\u8be5\u5355\u5143\u5b89\u88c5\u5728ALU\u65c1\u8fb9\uff0c\u5e76\u4e14\u53ea\u80fd\u901a\u8fc7ALU\u6d41\u6c34\u7ebf\u8bbf\u95ee\uff0c\u8fd9\u610f\u5473\u7740\u672c\u8eab\u4e0d\u5b58\u5728\u534f\u540c\u5904\u7406\u3002\nRAM\u7684\u7ec4\u88c5\u65b9\u5f0f\u9075\u5faa\u7edf\u4e00\u5185\u5b58\u67b6\u6784\u6216\u201cUMA\u201d\uff0c\u5373\u6240\u6709\u53ef\u7528RAM\u4ec5\u96c6\u4e2d\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4efb\u4f55\u9700\u8981RAM\u7684\u7ec4\u4ef6\u90fd\u5c06\u8bbf\u95ee\u6b64\u5171\u4eab\u4f4d\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ef2\u88c1\u5176\u8bbf\u95ee\u7684\u7ec4\u4ef6\u662fGPU\u3002\n\u9009\u62e9\u6b64\u8bbe\u8ba1\u7684\u539f\u56e0\u662f\uff0c\u5b83\u8282\u7701\u4e86\u5927\u91cf\u7684\u751f\u4ea7\u6210\u672c\uff0c\u800c\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u7ba1\u7406\u4e0d\u5f53\uff0c\u5b83\u4f1a\u589e\u52a0\u8bbf\u95ee\u4e89\u7528\u3002\n\u7531\u4e8e\u7edf\u4e00\u5185\u5b58\u67b6\u6784\uff0cCPU\u4e0d\u518d\u80fd\u591f\u76f4\u63a5\u8bbf\u95eeRAM\uff0c\u56e0\u6b64GPU\u4e5f\u5c06\u63d0\u4f9bDMA\u529f\u80fd\u3002\n\u9664\u4e86UMA\u4e4b\u5916\uff0cRAM\u7684\u7ed3\u6784\u6709\u70b9\u590d\u6742\uff0c\u6240\u4ee5\u6211\u5c06\u5c3d\u91cf\u4fdd\u6301\u7b80\u5355\uff0c\u8fd9\u91cc\u662f&amp\uff1bmldr\u3002\n\u7cfb\u7edf\u7269\u7406\u4e0a\u5305\u542b4.5MB\u7684RAM\uff0c\u4f46\u662f\u5b83\u662f\u4f7f\u75289\u4f4d\u6570\u636e\u603b\u7ebf\u8fde\u63a5\u7684\uff0c\u5176\u4e2d\u7b2c9\u4f4d\u4fdd\u7559\u7ed9GPU(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\u3002\u56e0\u6b64\uff0c\u9664GPU\u4e4b\u5916\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u6700\u591a\u53ea\u80fd\u627e\u52304 MB\u3002\n\u5b89\u88c5\u5728\u7535\u8def\u677f\u4e0a\u7684RAM\u7c7b\u578b\u88ab\u79f0\u4e3aRambus DRAM\u6216\u7b80\u79f0\u201cRDRAM\u201d\uff0c\u8fd9\u53ea\u662f\u53e6\u4e00\u4e2a\u5728\u6210\u4e3a\u4e0b\u4e00\u6807\u51c6\u65f6\u4e0eSDRAM\u7ade\u4e89\u7684\u8bbe\u8ba1\u3002RDRAM\u4ee5\u4e32\u884c\u65b9\u5f0f\u8fde\u63a5(\u6bcf\u6b21\u4f20\u8f93\u4e00\u4f4d)\uff0c\u800cSDRAM\u4f7f\u7528\u5e76\u884c\u8fde\u63a5(\u4e00\u6b21\u4f20\u8f93\u591a\u4f4d)\u3002\nRDRAM\u7684\u5ef6\u8fdf\u4e0e\u5b89\u88c5\u7684\u5b58\u50a8\u4f53\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8003\u8651\u5230\u6b64\u7cfb\u7edf\u62e5\u6709\u7684RAM\u6570\u91cf\uff0c\u6240\u4ea7\u751f\u7684\u5ef6\u8fdf\u662f\u76f8\u5f53\u5927\u7684\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8fd9\u4e2a\u63a7\u5236\u53f0\u4e0a\u7684\u53ef\u7528RAM\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5Expansion Pak\u9644\u4ef6\u6765\u6269\u5c55\uff1a\u4e00\u4e2a\u5916\u89c2\u522b\u81f4\u7684\u5c0f\u76d2\u5b50\uff0c\u5305\u542b4.5MB\u3002\u5947\u602a\u7684\u662f\uff0cRAM\u603b\u7ebf\u5fc5\u987b\u7ec8\u6b62\uff0c\u6240\u4ee5\u63a7\u5236\u53f0\u603b\u662f\u9644\u5e26\u4e00\u4e2a\u7ec8\u7ed3\u5668(\u79f0\u4e3a\u8df3\u7ebf\u5305)\u6765\u4ee3\u66ff\u6269\u5c55\u5305\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u80fd\u4f1a\u95ee\uff0c\u5982\u679c\u60a8\u5728\u6ca1\u6709\u5b89\u88c5\u4efb\u4f55Pak\u7684\u60c5\u51b5\u4e0b\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u4ece\u5b57\u9762\u4e0a\u770b\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u7a7a\u767d\u5c4f\u5e55\uff01\n\u56fe\u5f62\u7684\u6838\u5fc3\u9a7b\u7559\u5728\u7531Silicon Graphics\u8bbe\u8ba1\u7684\u4e00\u4e2a\u540d\u4e3aReality Co-Processor\u7684\u5de8\u578b\u82af\u7247\u4e0a\uff0c\u8fd0\u884c\u901f\u5ea6\u4e3a62.5 MHz\u3002\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u5305\u542b\u5f88\u591a\u7535\u8def\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u89c9\u5f97\u5f88\u96be\u8ddf\u4e0a\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u56fe\u5f62\u5b50\u7cfb\u7edf\u7684\u67b6\u6784\u975e\u5e38\u590d\u6742\uff01\u8fd9\u79cd\u8bbe\u8ba1\u7684\u4e3b\u8981\u7406\u5ff5\u662f\uff0cGPU\u4e0d\u50cf\u7ade\u4e89\u5bf9\u624b\u7684\u90a3\u6837\u662f\u4e00\u4e2a\u201c\u7b80\u5355\u201d\u7684\u5149\u6805\u5316\u5668\uff0c\u76f8\u53cd\uff0c\u5b83\u8fd8\u5e94\u8be5\u80fd\u591f\u52a0\u901f\u51e0\u4f55\u8ba1\u7b97(\u5378\u8f7dCPU)\uff0c\u4e3a\u6b64\uff0c\u9700\u8981\u66f4\u591a\u7684\u7535\u8def\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u8be5\u82af\u7247\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u6a21\u5757\uff0c\u5176\u4e2d\u4e24\u4e2a\u7528\u4e8e\u56fe\u5f62\u5904\u7406\uff1a\n\u6807\u91cf\u5355\u5143\uff1a\u57fa\u4e8eMIPS R400\u7684CPU\uff0c\u5b9e\u73b0R400\u6307\u4ee4\u96c6\u7684\u5b50\u96c6\u3002\n\u5411\u91cf\u5355\u5143\uff1a\u752832\u4e2a128\u4f4d\u5bc4\u5b58\u5668\u6267\u884c\u5411\u91cf\u8fd0\u7b97\u7684\u534f\u5904\u7406\u5668\u3002\u6bcf\u4e2a\u5bc4\u5b58\u5668\u88ab\u5206\u62108\u4e2a\u90e8\u5206\uff0c\u4e00\u6b21\u64cd\u4f5c8\u4e2a16\u4f4d\u77e2\u91cf(\u5c31\u50cf\u4f20\u7edfCPU\u4e0a\u7684SIMD\u6307\u4ee4\u4e00\u6837)\u3002\n\u7cfb\u7edf\u63a7\u5236\uff1a\u63d0\u4f9bDMA\u529f\u80fd\u5e76\u63a7\u5236\u5176\u90bb\u5c45\u6a21\u5757RDP(\u7a0d\u540e\u8be6\u7ec6\u4ecb\u7ecd)\u7684\u53e6\u4e00\u4e2a\u534f\u5904\u7406\u5668\u3002\n\u4e3a\u4e86\u64cd\u4f5c\u8be5\u6a21\u5757\uff0cCPU\u5728RAM\u4e2d\u5b58\u50a8\u4e00\u7cfb\u5217\u79f0\u4e3a\u663e\u793a\u5217\u8868\u7684\u547d\u4ee4\u4ee5\u53ca\u5c06\u8981\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u7136\u540eRSP\u8bfb\u53d6\u8be5\u5217\u8868\u5e76\u5bf9\u5176\u5e94\u7528\u6240\u9700\u7684\u64cd\u4f5c\u3002\u53ef\u7528\u7684\u529f\u80fd\u5305\u62ec\u51e0\u4f55\u4f53\u53d8\u6362(\u5982\u900f\u89c6\u6295\u5f71)\u3001\u526a\u88c1\u548c\u7167\u660e\u3002\n\u8fd9\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5b83\u662f\u5982\u4f55\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u7684\u5462\uff1f\u55ef\uff0c\u6709\u8da3\u7684\u662f\uff1a\u4e0e\u5b83\u7684\u7ade\u4e89\u5bf9\u624b(PS1\u548c\u571f\u661f)\u4e0d\u540c\uff0c\u51e0\u4f55\u5f15\u64ce\u5e76\u4e0d\u662f\u786c\u8fde\u7ebf\u7684\u3002\u76f8\u53cd\uff0cRSP\u5305\u542b\u4e00\u4e9b\u5185\u5b58(4KB\u7528\u4e8e\u6307\u4ee4\uff0c4KB\u7528\u4e8e\u6570\u636e)\u6765\u5b58\u50a8\u5fae\u7801\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u8d85\u8fc71000\u6761\u6307\u4ee4\u7684\u5c0f\u7a0b\u5e8f\uff0c\u7528\u4e8e\u5b9e\u73b0\u56fe\u5f62\u6d41\u6c34\u7ebf\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u6307\u5bfc\u6807\u91cf\u5355\u5143\u5e94\u8be5\u5982\u4f55\u64cd\u4f5c\u6211\u4eec\u7684\u56fe\u5f62\u6570\u636e\u3002\u5fae\u7801\u5728\u8fd0\u884c\u65f6\u7531CPU\u9988\u9001\u3002\n\u4efb\u5929\u5802\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5fae\u7801\u53ef\u4f9b\u9009\u62e9\uff0c\u4e0eSNES\u7684\u540e\u53f0\u6a21\u5f0f\u7c7b\u4f3c\uff0c\u6bcf\u4e2a\u5fae\u7801\u90fd\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5e73\u8861\u8d44\u6e90\u3002\n\u5728RSP\u5904\u7406\u5b8c\u6211\u4eec\u7684\u591a\u8fb9\u5f62\u6570\u636e\u4e4b\u540e\uff0c\u5b83\u5c06\u5f00\u59cb\u5411\u4e0b\u4e00\u4e2a\u6a21\u5757RDP\u53d1\u9001\u5149\u6805\u5316\u547d\u4ee4\u6765\u7ed8\u5236\u5e27\u3002\u8fd9\u4e9b\u547d\u4ee4\u8981\u4e48\u4f7f\u7528\u79f0\u4e3aXbus\u7684\u4e13\u7528\u603b\u7ebf\u53d1\u9001\uff0c\u8981\u4e48\u901a\u8fc7\u4e3bRAM\u53d1\u9001\u3002\nRDP\u662f\u53e6\u4e00\u4e2a\u5904\u7406\u5668(\u8fd9\u6b21\u5177\u6709\u56fa\u5b9a\u529f\u80fd)\uff0c\u5b83\u5305\u62ec\u591a\u4e2a\u5f15\u64ce\uff0c\u7528\u4e8e\u5c06\u7eb9\u7406\u6620\u5c04\u5230\u591a\u8fb9\u5f62\u3001\u6df7\u5408\u989c\u8272\u548c\u6784\u5efa\u65b0\u6846\u67b6\u3002\n\u5b83\u53ef\u4ee5\u5c06\u4e09\u89d2\u5f62\u6216\u77e9\u5f62\u4f5c\u4e3a\u56fe\u5143\u5904\u7406\uff0c\u540e\u8005\u5bf9\u4e8e\u7ed8\u5236\u7cbe\u7075\u975e\u5e38\u6709\u7528\u3002RDP\u7684\u5149\u6805\u5316\u7ba1\u9053\u5305\u542b\u4ee5\u4e0b\u5757\uff1a\n\u7eb9\u7406\u5355\u5143\uff1a\u4f7f\u75284KB\u7684\u4e13\u7528\u5185\u5b58(\u79f0\u4e3a\u201cTMEM\u201d)\u5904\u7406\u7eb9\u7406\uff0c\u6700\u591a\u53ef\u4f7f\u75288\u4e2a\u5e73\u94fa\u7528\u4e8e\u7eb9\u7406\u3002\u5b83\u53ef\u4ee5\u5bf9\u5b83\u4eec\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u53cc\u7ebf\u6027\u8fc7\u6ee4\uff1a\u5c06\u9009\u5b9a\u76842D\u7eb9\u7406\u6620\u5c04\u52303D\u5f62\u72b6\u4e0a\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u5e73\u6ed1\u4ee5\u907f\u514d\u50cf\u7d20\u5316\u533a\u57df\u3002\u4e00\u4e2a\u201c\u5b8c\u6574\u201d\u7684\u8fc7\u6ee4\u5668\u9700\u8981\u56db\u4e2a\u70b9\u6765\u6267\u884c\u63d2\u503c\uff0c\u7136\u800c\uff0c\u8fd9\u4e2a\u63a7\u5236\u53f0\u53ea\u4f7f\u7528\u4e86\u4e09\u4e2a\u70b9(\u4e09\u89d2\u5f62\u63d2\u503c)\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e9b\u5f02\u5e38\u3002\u56e0\u6b64\uff0c\u67d0\u4e9b\u7eb9\u7406\u5fc5\u987b\u4e8b\u5148\u201c\u8c03\u6574\u201d\u3002\nMIP\u6620\u5c04\uff1a\u6839\u636e\u7eb9\u7406\u7684\u7ec6\u8282\u7ea7\u522b\u81ea\u52a8\u9009\u62e9\u7eb9\u7406\u7684\u7f29\u5c0f\u7248\u672c\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8ba1\u7b97\u8fdc\u79bb\u6444\u5f71\u673a\u53ef\u89c1\u7684\u5927\u578b\u7eb9\u7406\uff0c\u5e76\u9632\u6b62\u51fa\u73b0\u952f\u9f7f\u3002\u5982\u679c\u542f\u7528\uff0cN64\u5c06\u6539\u7528\u4e09\u7ebf\u6027\u8fc7\u6ee4\u6620\u5c04\u7eb9\u7406\u3002\u6b64\u65b0\u7b97\u6cd5\u8fd8\u5c06\u5728mipmap\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\uff0c\u4ee5\u67d4\u5316\u7ec6\u8282\u7ea7\u522b\u7684\u7a81\u7136\u53d8\u5316\u3002\n\u900f\u89c6\u6821\u6b63\uff1a\u9009\u62e9\u5c06\u7eb9\u7406\u6620\u5c04\u5230\u4e09\u89d2\u5f62\u7684\u7b97\u6cd5\u3002\u4e0e\u5176\u4ed6\u7b97\u6cd5\u4e0d\u540c\uff0c\u8be5\u7b97\u6cd5\u8003\u8651\u4e86\u6bcf\u4e2a\u57fa\u672c\u4f53\u7684\u6df1\u5ea6\u503c\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u66f4\u597d\u7684\u6548\u679c\u3002\n\u989c\u8272\u7ec4\u5408\u5668\uff1a\u6df7\u5408\u548c\u63d2\u503c\u591a\u5c42\u989c\u8272(\u4f8b\u5982\uff0c\u5e94\u7528\u7740\u8272\u5668)\u3002\n\u6df7\u5408\u5668\uff1a\u5c06\u50cf\u7d20\u4e0e\u5f53\u524d\u5e27\u7f13\u51b2\u533a\u6df7\u5408\uff0c\u4ee5\u5e94\u7528\u534a\u900f\u660e\u3001\u6297\u952f\u9f7f\u3001\u96fe\u5316\u548c\u6296\u52a8\u3002\u5b83\u8fd8\u6267\u884cz\u7f13\u51b2(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\u3002\n\u5b58\u50a8\u5668\u63a5\u53e3\uff1a\u7531\u524d\u9762\u7684\u5757\u7528\u6765\u8bfb\u5199RAM\u4e2d\u7684\u5f53\u524d\u5e27\u7f13\u51b2\u533a\u548c/\u6216\u586b\u5145TMEM\u3002\nRDP\u63d0\u4f9b\u56db\u79cd\u529f\u80fd\u6a21\u5f0f\uff0c\u6bcf\u79cd\u6a21\u5f0f\u90fd\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7ec4\u5408\u8fd9\u4e9b\u6a21\u5757\uff0c\u4ee5\u4f18\u5316\u7279\u5b9a\u64cd\u4f5c\u3002\n\u7531\u4e8e\u6b64\u6a21\u5757\u4e0d\u65ad\u66f4\u65b0\u5e27\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5b83\u5904\u7406RAM\u7684\u65b9\u5f0f\u975e\u5e38\u4e0d\u540c\uff1a\u8fd8\u8bb0\u5f97\u4e0d\u5bfb\u5e38\u76849\u4f4d\u201c\u5b57\u8282\u201d\u5417\uff1f\u7b2c\u4e5d\u4f4d\u7528\u4e8e\u4e0e\u5e27\u7f13\u51b2\u533a\u76f8\u5173\u7684\u8ba1\u7b97(\u5982z\u7f13\u51b2\u548c\u6297\u952f\u9f7f)\uff0c\u5e76\u4e14\u53ea\u80fd\u901a\u8fc7\u5185\u5b58\u63a5\u53e3\u8bbf\u95ee\u3002\n\u4ea7\u751f\u7684\u5e27\u7f13\u51b2\u533a\u5fc5\u987b\u53d1\u9001\u5230\u89c6\u9891\u7f16\u7801\u5668\u624d\u80fd\u5728\u5c4f\u5e55\u4e0a\u663e\u793a(DMA\u548c\u89c6\u9891\u63a5\u53e3\u7ec4\u4ef6\u662f\u5b8c\u6210\u6b64\u4efb\u52a1\u7684\u5173\u952e)\u3002\n\u7406\u8bba\u4e0a\u6700\u5927\u5bb9\u91cf\u4e3a24\u4f4d\u8272\u6df1(1680\u4e07\u8272)\u548c640x480\u5206\u8fa8\u7387(\u6216PAL\u533a\u57df\u4e2d\u7684720x576)\u3002\u6211\u63d0\u5230\u8fd9\u662f\u201c\u7406\u8bba\u4e0a\u7684\u201d\uff0c\u56e0\u4e3a\u4f7f\u7528\u6700\u5927\u7684\u80fd\u529b\u53ef\u80fd\u4f1a\u8017\u8d39\u8d44\u6e90\uff0c\u6240\u4ee5\u7a0b\u5e8f\u5458\u4f1a\u503e\u5411\u4e8e\u4f7f\u7528\u8f83\u4f4e\u7684\u7edf\u8ba1\u6570\u636e\u6765\u91ca\u653e\u8db3\u591f\u7684\u8d44\u6e90\u7528\u4e8e\u5176\u4ed6\u670d\u52a1\u3002\n\u8ba9\u6211\u4eec\u628a\u524d\u9762\u6240\u6709\u7684\u89e3\u91ca\u90fd\u653e\u5728\u6b63\u786e\u7684\u89d2\u5ea6\uff0c\u56e0\u4e3a\u6211\u5c06\u501f\u7528\u4efb\u5929\u5802\u7684\u8d85\u7ea7\u9a6c\u91cc\u596564\u6765\u7b80\u800c\u8a00\u4e4b\u5730\u5c55\u793a\u4e00\u4e2a\u6846\u67b6\u662f\u5982\u4f55\u7ec4\u6210\u7684\uff1a\n\u9996\u5148\uff0c\u6211\u4eec\u76843D\u6a21\u578b\u4f4d\u4e8e\u76d2\u5f0fROM\u4e2d\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u6301\u7a33\u5b9a\u7684\u5e26\u5bbd\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u5c06\u5b83\u4eec\u590d\u5236\u5230RAM\u4e2d\u3002\n\u7136\u540e\u662f\u4f7f\u7528\u6211\u4eec\u7684\u6a21\u578b\u6784\u5efa\u573a\u666f\u7684\u65f6\u5019\u4e86\uff0cCPU\u53ef\u4ee5\u81ea\u5df1\u5b8c\u6210\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u4efb\u52a1\u88ab\u59d4\u6258\u7ed9RCP\u3002CPU\u5c06\u6539\u4e3a\u5411RCP\u53d1\u9001\u547d\u4ee4\uff0c\u8fd9\u662f\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\u6765\u5b8c\u6210\u7684\uff1a\n\u7ec4\u6210\u5305\u542bRSP\u8981\u6267\u884c\u7684\u64cd\u4f5c\u7684\u663e\u793a\u5217\u8868\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728RAM\u4e2d\u3002\n\u4e4b\u540e\uff0cRSP\u5c06\u5f00\u59cb\u6267\u884c\u7b2c\u4e00\u6279\u4efb\u52a1\uff0c\u7ed3\u679c\u5c06\u4ee5\u5149\u6805\u5316\u547d\u4ee4\u7684\u5f62\u5f0f\u53d1\u9001\u5230RDP\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6210\u529f\u5730\u5904\u7406\u4e86\u6211\u4eec\u7684\u6570\u636e\u5e76\u5bf9\u5176\u5e94\u7528\u4e86\u4e00\u4e9b\u6548\u679c\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u9700\u8981\uff1a\n\u6b63\u5982\u60a8\u53ef\u80fd\u731c\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5c06\u7531RDP\u6267\u884c\u3002CPU\u4f1a\u5c06\u6570\u636e(\u5982\u7eb9\u7406)\u653e\u5230RAM\u4e0a\uff0c\u8fd9\u4e2a\u6a21\u5757\u6709\u56fa\u5b9a\u7684\u6d41\u6c34\u7ebf\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u4efb\u52a1\u9009\u62e9\u6700\u4f73\u7684\u64cd\u4f5c\u6a21\u5f0f\u6765\u63d0\u9ad8\u5e27\u7387\u3002\n\u4e00\u65e6RDP\u5b8c\u6210\u6570\u636e\u5904\u7406\uff0c\u5b83\u5c06\u628a\u6700\u7ec8\u7684\u4f4d\u56fe\u5199\u5165RAM\u4e2d\u7684\u5e27\u7f13\u51b2\u533a\u3002\u4e4b\u540e\uff0cCPU\u5fc5\u987b\u5c06\u65b0\u5e27\u4f20\u8f93\u5230\u89c6\u9891\u63a5\u53e3(\u6700\u597d\u4f7f\u7528DMA)\uff0c\u89c6\u9891\u63a5\u53e3\u518d\u5c06\u5176\u53d1\u9001\u5230\u89c6\u9891\u7f16\u7801\u5668\u8fdb\u884c\u663e\u793a\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u8d85\u7ea7\u4efb\u5929\u5802\u4ee5\u524d\u76842D\u89d2\u8272\u7684\u4f8b\u5b50\uff0c\u5b83\u4eec\u662f\u4e3a\u65b0\u76843D\u65f6\u4ee3\u91cd\u65b0\u8bbe\u8ba1\u7684\uff0c\u5b83\u4eec\u662f\u4ea4\u4e92\u5f0f\u7684\uff0c\u6240\u4ee5\u6211\u9f13\u52b1\u4f60\u53bb\u770b\u770b\u5b83\u4eec\uff01\n\u5982\u679c\u4f60\u8bfb\u8fc7\u4ee5\u524d\u7684\u63a7\u5236\u53f0\uff0c\u4f60\u4f1a\u9047\u5230\u5173\u4e8e\u66f2\u9762\u53ef\u89c1\u6027\u7684\u65e0\u4f11\u6b62\u7684\u95ee\u9898\uff0c\u73b0\u5728\u4f60\u53ef\u80fd\u8ba4\u4e3a\u591a\u8fb9\u5f62\u6392\u5e8f\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5728\u672c\u7cfb\u5217\u4e2d\uff0cRDP\u7b2c\u4e00\u6b21\u91c7\u7528\u4e86\u4e00\u79cd\u79f0\u4e3aZ-Buffering\u7684\u57fa\u4e8e\u786c\u4ef6\u7684\u65b9\u6cd5\u3002\u7b80\u800c\u8a00\u4e4b\uff0cRDP\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u540d\u4e3aZ-Buffer\u7684\u989d\u5916\u7f13\u51b2\u533a\u3002\u8fd9\u4e0e\u5e27\u7f13\u51b2\u533a\u7684\u5c3a\u5bf8\u76f8\u540c\uff0c\u4f46\u662f\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u542b\u6700\u8fd1\u50cf\u7d20\u76f8\u5bf9\u4e8e\u6444\u5f71\u673a\u7684\u6df1\u5ea6(Z\u503c)\uff0c\u800c\u4e0d\u662f\u5b58\u50a8RGB\u503c\u3002\n\u5728RDP\u6805\u683c\u5316\u77e2\u91cf\u4e4b\u540e\uff0c\u5c06\u65b0\u50cf\u7d20\u7684z\u503c\u4e0eZ\u7f13\u51b2\u5668\u4e2d\u7684\u76f8\u5e94\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u65b0\u50cf\u7d20\u5305\u542b\u8f83\u5c0f\u7684z\u503c\uff0c\u5219\u610f\u5473\u7740\u65b0\u50cf\u7d20\u4f4d\u4e8e\u524d\u4e00\u4e2a\u50cf\u7d20\u7684\u524d\u9762\uff0c\u56e0\u6b64\u5b83\u5c06\u5e94\u7528\u4e8e\u5e27\u7f13\u51b2\u533a\uff0c\u5e76\u4e14z\u7f13\u51b2\u533a\u4e5f\u4f1a\u66f4\u65b0\u3002\u5426\u5219\uff0c\u8be5\u50cf\u7d20\u5c06\u88ab\u4e22\u5f03\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8865\u5145\uff1a\u7a0b\u5e8f\u5458\u4e0d\u518d\u9700\u8981\u62c5\u5fc3\u5b9e\u73b0\u57fa\u4e8e\u8f6f\u4ef6\u7684\u591a\u8fb9\u5f62\u6392\u5e8f\u65b9\u6cd5\uff0c\u8fd9\u4f1a\u8017\u5c3d\u5927\u91cf\u7684CPU\u8d44\u6e90\u3002\u4f46\u662f\uff0cZ\u7f13\u51b2\u533a\u5e76\u4e0d\u80fd\u4f7f\u60a8\u514d\u4e8e\u8f93\u5165\u4e0d\u5fc5\u8981\u7684\u51e0\u4f55\u4f53(\u4e22\u5f03\u6216\u900f\u7ed8\uff0c\u4e24\u8005\u90fd\u4f1a\u6d88\u8017\u8d44\u6e90)\u3002\u4e3a\u6b64\uff0c\u6e38\u620f\u5f15\u64ce\u53ef\u80fd\u4f1a\u9009\u62e9\u5305\u62ec\u906e\u6321\u5254\u9664\u7b97\u6cd5\uff0c\u4ee5\u5c3d\u65e9\u4e22\u5f03\u4e0d\u53ef\u89c1\u7684\u51e0\u4f55\u4f53\u3002\nSGI\u663e\u7136\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e0a\u6295\u5165\u4e86\u5927\u91cf\u6280\u672f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u662f\u4e00\u6b3e\u9762\u5411\u5bb6\u5ead\u7684\u6e38\u620f\u673a\uff0c\u56e0\u6b64\uff0c\u5b83\u5fc5\u987b\u964d\u4f4e\u6210\u672c\u3002\u4e00\u4e9b\u8270\u96be\u7684\u51b3\u5b9a\u7ed9\u7a0b\u5e8f\u5458\u5e26\u6765\u4e86\u56f0\u96be\u7684\u6311\u6218\uff1a\n\u7531\u4e8e\u56fe\u5f62\u6d41\u6c34\u7ebf\u4e2d\u7684\u7ec4\u4ef6\u548c\u64cd\u4f5c\u6570\u91cf\u5de8\u5927\uff0cRCP\u6700\u7ec8\u975e\u5e38\u5bb9\u6613\u51fa\u73b0\u505c\u6ede\uff1a\u8fd9\u662f\u4e00\u79cd\u4e0d\u53d7\u6b22\u8fce\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6240\u9700\u7684\u6570\u636e\u5728\u6d41\u6c34\u7ebf\u540e\u9762\u5ef6\u8fdf\uff0c\u5b50\u7ec4\u4ef6\u4f1a\u5728\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u4fdd\u6301\u7a7a\u95f2\u3002\n\u8fd9\u603b\u662f\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u5e76\u7531\u7a0b\u5e8f\u5458\u6765\u907f\u514d\u5b83\u4eec\u3002\u867d\u7136\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7b80\u5355\uff0c\u4e00\u4e9bCPU\uff0c\u5982\u6807\u91cf\u5355\u5143\uff0c\u5b9e\u73b0\u4e86\u4e00\u79cd\u79f0\u4e3a\u65c1\u8def\u7684\u529f\u80fd\uff0c\u5b83\u901a\u8fc7\u7ed5\u8fc7\u4e00\u4e9b\u53ef\u4ee5\u8df3\u8fc7\u7684\u6267\u884c\u9636\u6bb5\u6765\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u6267\u884c\u7c7b\u4f3c\u7684\u6307\u4ee4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97\u8fde\u7eed\u7684\u52a0\u6cd5\u6307\u4ee4\uff0c\u5219\u4e0d\u9700\u8981\u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u6bcf\u6b21\u52a0\u6cd5\u5b8c\u6210\u65f6\u5c06\u5176\u8bfb\u56de\uff0c\u800c\u662f\u53ef\u4ee5\u5bf9\u6240\u6709\u52a0\u6cd5\u4fdd\u6301\u4f7f\u7528\u76f8\u540c\u7684\u5bc4\u5b58\u5668\uff0c\u5e76\u5728\u6700\u540e\u4e00\u6b21\u52a0\u6cd5\u5b8c\u6210\u540e\u8fdb\u884c\u56de\u5199\u3002\n\u5728RDP\u5185\u90e8\u67094KB\u7684\u7eb9\u7406\u5185\u5b58\u53ef\u7528\u4f5c\u7eb9\u7406\u7f13\u5b58\uff0c\u5176\u4e3b\u8981\u76ee\u6807\u662f\u907f\u514d\u505c\u6b62RAM\u7684\u8bfb\u53d6\u5468\u671f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c4KB\u78b0\u5de7\u4e0d\u8db3\u4ee5\u5904\u7406\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f7f\u7528mipmap\uff0c\u5219\u53ef\u7528\u7f13\u5b58\u91cf\u5c06\u51cf\u5c11\u4e00\u534a\u3002\n\u56e0\u6b64\uff0c\u4e00\u4e9b\u6e38\u620f\u4f7f\u7528\u7eaf\u8272\u548cGouraud\u7740\u8272(\u5982\u8d85\u7ea7\u9a6c\u91cc\u596564)\uff0c\u800c\u53e6\u4e00\u4e9b\u6e38\u620f\u5219\u4f9d\u8d56\u4e8e\u9884\u8ba1\u7b97\u7eb9\u7406(\u4f8b\u5982\uff0c\u5fc5\u987b\u6df7\u5408\u591a\u4e2a\u5c42)\u3002\n\u5728\u6211\u4eec\u8fdb\u5165\u7ec6\u8282\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u97f3\u9891\u5b50\u7cfb\u7edf\u7684\u4e24\u4e2a\u7aef\u70b9\uff1a\n\u6211\u4eec\u7684\u8d77\u70b9\u662f\u76d2\u5f0fROM\uff0c\u5b83\u5305\u542b\u53ea\u6709CPU\u624d\u80fd\u89e3\u91ca\u7684\u6570\u636e\u3002\n\u7ec8\u70b9\u662f\u6570\u6a21\u8f6c\u6362\u5668\u6216\u201cDAC\u201d\uff0c\u5b83\u53ea\u7406\u89e3\u6ce2\u5f62\u6570\u636e\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5982\u4f55\u5c06\u4e24\u7aef\u8fde\u63a5\u8d77\u6765\u5462\uff1f\u6e38\u620f\u673a\u901a\u5e38\u5305\u62ec\u4e00\u4e2a\u4e13\u95e8\u7684\u97f3\u9891\u82af\u7247\uff0c\u4e3a\u6211\u4eec\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4efb\u5929\u580264\u6ca1\u6709\u8fd9\u6837\u7684\u4e13\u7528\u82af\u7247\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4efb\u52a1\u5206\u5e03\u5728\u8fd9\u4e9b\u7ec4\u4ef6\u4e0a\uff1a\n\u4e3bCPU\uff1a\u5c06\u97f3\u9891\u6570\u636e\u4ece\u6e38\u620f\u7684ROM\u4f20\u8f93\u5230RAM\uff0c\u7136\u540e\u521d\u59cb\u5316\u97f3\u9891\u5217\u8868\u4ee5\u4f9bRSP\u4f7f\u7528\u3002\nRSP\uff1a\u901a\u8fc7\u4f7f\u7528\u66f4\u591a\u7684\u5fae\u7801\uff0c\u5b83\u89e3\u91ca\u5148\u524d\u5b58\u50a8\u5728RAM\u4e2d\u7684\u97f3\u9891\u5217\u8868\uff0c\u5e76\u5bf9\u97f3\u9891\u6570\u636e\u6267\u884c\u6240\u9700\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u5305\u62ec\uff1a\n\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u7ed3\u679c\u6570\u636e\u662f\u6ce2\u5f62\u6570\u636e\u3002\u7136\u540e\u5c06\u5176\u53d1\u9001\u5230\u97f3\u9891\u63a5\u53e3\u6216\u201cAI\u201d\u6a21\u5757\uff0c\u7136\u540e\u518d\u5c06\u5176\u4f20\u8f93\u5230\u6570\u6a21\u8f6c\u6362\u5668\u3002\u5f97\u5230\u7684\u6ce2\u5f62\u5305\u542b\u4e24\u4e2a\u901a\u9053(\u56e0\u4e3a\u6211\u4eec\u7684\u7cfb\u7edf\u662f\u7acb\u4f53\u58f0\u7684)\uff0c\u6bcf\u4e2a\u901a\u9053\u90fd\u670916\u4f4d\u5206\u8fa8\u7387\u3002\n\u662f\u65f6\u5019\u68c0\u67e5\u4e3aN64\u5236\u4f5c\u7684\u914d\u4e50\u4e86\u3002\u6709\u592a\u591a(\u597d\u7684)\u8981\u5728\u672c\u6587\u4e2d\u63d0\u53ca\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e9b\u5438\u5f15\u4e86\u6211\u7684\u6ce8\u610f\uff1a\n\u91c7\u6837\u7387\u6700\u9ad8\u53ef\u8fbe44.1 Hz\uff0c\u4f46\u4f7f\u7528\u6700\u9ad8\u91c7\u6837\u7387\u4f1a\u5360\u7528\u5927\u91cfCPU\u5468\u671f\u3002\n\u901a\u9053\u7684\u6570\u91cf\u6ca1\u6709\u4e25\u683c\u7684\u9650\u5236\uff0c\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8eRSP\u80fd\u591f\u6df7\u5408\u591a\u5c11(\u5982\u679c\u5904\u7406ADPCM\uff0c\u901a\u5e38\u5927\u7ea616-24\u4e2a\u901a\u9053\uff1b\u5982\u679c\u5904\u7406PCM\uff0c\u901a\u5e38\u5927\u7ea6100\u4e2a\u901a\u9053)\u3002\n\u5185\u5b58\u662f\u53e6\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\uff0c\u800c\u7ade\u4e89\u5bf9\u624b\u4f9d\u8d56\u66f4\u5927\u7684\u4ecb\u8d28(\u5373CD-ROM)\u548c\u4e13\u7528\u97f3\u9891\u5185\u5b58\uff0c\u800c\u4efb\u5929\u580264\u58a8\u76d2\u5b58\u50a8\u7684\u6570\u636e(\u66f4\u4e0d\u7528\u8bf4\u97f3\u4e50\u6570\u636e)\u8981\u5c11\u5f97\u591a\uff0c\u800c\u4e14\u5fc5\u987b\u4e0e\u5176\u4ed6\u7ec4\u4ef6\u5171\u4eab\u5176\u4e3b\u5185\u5b58\u3002\u51fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u73a9\u5bb6\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230N64\u7aef\u53e3\u5305\u542b\u7684\u97f3\u4e50\u8d28\u91cf\u8f83\u5dee\u6216\u4e50\u8c31\u91cd\u590d\u3002\u514b\u670d\u8fd9\u4e00\u9650\u5236\u7684\u4e00\u79cd\u65b9\u6cd5\u5305\u62ec\u5b9e\u73b0\u4e00\u4e2a\u8f6f\u4ef6\u5b9a\u5e8f\u5668\uff0c\u8be5\u8f6f\u4ef6\u5b9a\u5e8f\u5668\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u9884\u5148\u586b\u5145\u7684\u4e00\u7ec4\u58f0\u97f3(\u7c7b\u4f3c\u4e8eMIDI\u97f3\u4e50)\u6765\u201c\u6784\u9020\u201d\u6837\u672c\u3002\n\u4e0ePS1\u548c\u571f\u661f\u7c7b\u4f3c\uff0cN64\u6e38\u620f\u662f\u4e3a\u88f8\u673a\u7f16\u5199\u7684\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u53ef\u7528\u7684BIOS\u4f8b\u7a0b\u6765\u7b80\u5316\u67d0\u4e9b\u64cd\u4f5c\u3002\u4f5c\u4e3a\u66ff\u4ee3\uff0c\u6e38\u620f\u5d4c\u5165\u4e86\u5c0f\u578b\u64cd\u4f5c\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u76f8\u5f53\u5927\u7684\u62bd\u8c61\u91cf\u6765\u6709\u6548\u5730\u5904\u7406CPU\u3001GPU\u548cI/O\u3002\n\u8fd9\u4e0d\u662f\u6211\u4eec\u6700\u521d\u53ef\u80fd\u60f3\u8c61\u7684\u4f20\u7edf\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5360\u7528\u7a7a\u95f4\u6700\u5c0f\u7684\u5fae\u5185\u6838\uff0c\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a\n\u5185\u6838\u662f\u901a\u8fc7\u4f7f\u7528\u4efb\u5929\u5802\u7684\u5e93\u81ea\u52a8\u5d4c\u5165\u7684\uff0c\u6b64\u5916\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u51b3\u5b9a\u4e0d\u5305\u62ec\u5176\u4e2d\u4e00\u4e2a\u5e93\uff0c\u5185\u6838\u7684\u76f8\u5e94\u90e8\u5206\u5c06\u88ab\u8df3\u8fc7\uff0c\u4ee5\u907f\u514d\u6d6a\u8d39\u76d2\u5f0f\u78c1\u5e26\u7a7a\u95f4\u3002\n\u6b63\u5982\u60a8\u73b0\u5728\u6240\u77e5\u9053\u7684\uff0cI/O\u6ca1\u6709\u76f4\u63a5\u8fde\u63a5\u5230CPU\uff0c\u6240\u4ee5RCP\u7684\u7b2c\u4e09\u4e2a\u6a21\u5757(\u6211\u5230\u73b0\u5728\u8fd8\u6ca1\u6709\u63d0\u5230\u8fc7)\u7528\u4f5cI/O\u63a5\u53e3\uff0c\u5b83\u4e3b\u8981\u4e0eCPU\u3001\u63a7\u5236\u5668\u3001\u6e38\u620f\u76d2\u548c\u97f3\u9891/\u89c6\u9891DAC\u901a\u4fe1\u3002\n\u4efb\u5929\u5802\u4fdd\u7559\u4e86\u76d2\u5f0f\u4ecb\u8d28\u8fdb\u884c\u5b58\u50a8\uff0c\u56e0\u6b64\uff0c\u6e38\u620f\u4eab\u6709\u66f4\u9ad8\u7684\u5e26\u5bbd(\u6839\u636eROM\u7684\u901f\u5ea6\uff0c\u57285-50MB/s\u4e4b\u95f4)\uff0c\u540c\u65f6\u5236\u4f5c\u6210\u672c\u4e5f\u66f4\u9ad8\u3002\u5e02\u573a\u4e0a\u53d1\u73b0\u7684\u6700\u5927\u7684\u58a8\u76d2\u670964MB\u3002\n\u5728\u76d2\u5f0f\u78c1\u5e26\u5185\u90e8\uff0c\u5236\u9020\u5546\u53ef\u80fd\u5305\u62ec\u989d\u5916\u7684\u5b58\u50a8\u5668(\u4ee5EEPROM\u3001\u95ea\u5b58\u6216\u5e26\u7535\u6c60\u7684SRAM\u7684\u5f62\u5f0f)\u6765\u4fdd\u5b58\u4fdd\u5b58\uff0c\u4f46\u662f\u8fd9\u4e0d\u518d\u662f\u4e00\u4e2a\u5f3a\u70c8\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u67d0\u4e9b\u9644\u4ef6\u4e5f\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u4fdd\u5b58\u3002\n\u4efb\u5929\u580264\u63a7\u5236\u5668\u5305\u62ec\u4e00\u4e2a\u7528\u4e8e\u63d2\u5165\u9644\u4ef6\u7684\u63a5\u53e3\uff0c\u5176\u4e2d\u4e00\u4e9b\u662f\uff1a\n\u63a7\u5236\u5668\u5305\uff1a\u7528\u4e8e\u5b58\u50a8\u3001\u4fdd\u5b58\u6570\u636e\u5e76\u5728\u5176\u4ed6\u63a7\u5236\u53f0\u4e0a\u4f7f\u7528\u7684\u53e6\u4e00\u79cd\u4ecb\u8d28(\u7c7b\u4f3c\u4e8e\u7d22\u5c3c\u7684\u5b58\u50a8\u5361)\u3002\nRumble Pak\uff1a\u5305\u542b\u4e00\u4e2a\u5c0f\u578b\u9a6c\u8fbe\uff0c\u7528\u4e8e\u63d0\u4f9b\u89e6\u89c9\u53cd\u9988\uff0c\u53ef\u8ba9\u73a9\u5bb6\u6c89\u6d78\u5728\u67d0\u4e9b\u6e38\u620f\u4e2d\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u6b3e\u6e38\u620f\u673a\u7684\u4e3b\u677f\u5e95\u90e8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u63a5\u53e3\uff0c\u539f\u672c\u662f\u4f9b\u5c1a\u672a\u53d1\u5e03\u7684\u78c1\u76d8\u9a71\u52a8\u5668\u4f7f\u7528\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u5305\u542b\u4e13\u6709\u78c1\u76d8\u8bfb\u53d6\u5668\u7684\u201c\u989d\u5916\u5730\u677f\u201d\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u8be5\u9a71\u52a8\u5668\u53ea\u5728\u65e5\u672c\u53d1\u5e03\uff0c\u5e76\u6700\u7ec8\u53d6\u6d88\u4e86\u5728\u4e16\u754c\u5176\u4ed6\u5730\u533a\u7684\u9500\u552e\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u5f00\u53d1\u4e3b\u8981\u662f\u7528C\u8bed\u8a00\u8fdb\u884c\u7684\uff0c\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff0c\u4e5f\u4f7f\u7528\u4e86\u6c47\u7f16\u8bed\u8a00\u3002\u867d\u7136\u8be5\u7cfb\u7edf\u5305\u542b64\u4f4d\u6307\u4ee4\u96c6\uff0c\u4f4664\u4f4d\u6307\u4ee4\u5f88\u5c11\u4f7f\u7528\uff0c\u56e0\u4e3a\u5728\u5b9e\u8df5\u4e2d\uff0c32\u4f4d\u6307\u4ee4\u6070\u597d\u6267\u884c\u5f97\u66f4\u5feb\uff0c\u5e76\u4e14\u9700\u8981\u4e00\u534a\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\n\u4e3a\u4e86\u547d\u4ee4RCP\uff0c\u5e93\u5305\u542b\u591a\u4e2a\u62bd\u8c61\u5c42\uff0c\u4f8b\u5982\uff0c\u50cfGraphics Binary Interface\u6216\u2018GBI\u2019\u8fd9\u6837\u7684\u7ed3\u6784\u88ab\u8bbe\u8ba1\u6210\u66f4\u5bb9\u6613\u5730\u7ec4\u5408\u5fc5\u8981\u7684\u663e\u793a\u5217\u8868\uff0c\u540c\u6837\u9002\u7528\u4e8e\u97f3\u9891\u51fd\u6570(\u5176\u7ed3\u6784\u88ab\u79f0\u4e3aAudio Binary Interface\u6216\u2018ABI\u2019)\u3002\n\u5728\u5fae\u7801\u5f00\u53d1\u65b9\u9762\uff0c\u4efb\u5929\u5802\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u5957\u5fae\u7801\u7a0b\u5e8f\u53ef\u4f9b\u9009\u62e9\uff0c\u7136\u800c\uff0c\u5982\u679c\u5f00\u53d1\u8005\u60f3\u8981\u5b9a\u5236\u5b83\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u9879\u5177\u6709\u6311\u6218\u6027\u7684\u4efb\u52a1\uff1aScalar Unit\u6307\u4ee4\u96c6\u6700\u521d\u6ca1\u6709\u6587\u6863(\u5f53\u7136\u662f\u5e94\u4efb\u5929\u5802\u7684\u8981\u6c42)\uff0c\u540e\u6765\u8be5\u516c\u53f8\u6539\u53d8\u4e86\u7acb\u573a\uff0cSGI\u6700\u7ec8\u53d1\u5e03\u4e86\u4e00\u4e9b\u5fae\u7801\u7f16\u7a0b\u6587\u6863\u3002\n\u7528\u4e8e\u5f00\u53d1\u7684\u786c\u4ef6\u5305\u62ecSGI\u63d0\u4f9b\u7684\u5de5\u4f5c\u7ad9\uff0c\u6bd4\u5982Indy\u673a\u5668\uff0c\u5b83\u9644\u5e26\u4e86\u4e00\u4e2a\u540d\u4e3aU64\u7684\u989d\u5916\u5b50\u677f\uff0c\u5176\u4e2d\u5305\u542b\u96f6\u552e\u63a7\u5236\u53f0\u7684\u786c\u4ef6\u548cI/O\u3002\u8fd8\u4e3aWindows\u8ba1\u7b97\u673a\u63d0\u4f9b\u4e86\u5de5\u5177\u3002\n\u5176\u4ed6\u7b2c\u4e09\u65b9\u5de5\u5177\u5305\u542b\u5728\u5e26\u6709\u8fde\u63a5\u5230\u5de5\u4f5c\u7ad9\u7684\u957f\u5e26\u72b6\u7535\u7f06\u7684\u58a8\u76d2\u4e2d\u3002\u8be5\u76d2\u5b89\u88c5\u5728\u96f6\u552e\u4efb\u5929\u580264\u4e2d\uff0c\u4f46\u5305\u62ec\u5c06\u8bfb\u53d6\u8bf7\u6c42\u4ece\u63a7\u5236\u53f0\u91cd\u5b9a\u5411\u5230\u5de5\u4f5c\u7ad9RAM\u7684\u5185\u90e8\u7535\u8def\u3002\u90e8\u7f72/\u8c03\u8bd5\u8fc7\u7a0b\u662f\u901a\u8fc7\u5c06\u6e38\u620f\u7684\u526f\u672c\u4f20\u8f93\u5230RAM\u6765\u6267\u884c\u7684\uff0c\u7136\u540e\uff0c\u5f53\u63a7\u5236\u53f0\u6253\u5f00\u65f6\uff0c\u5b83\u5c06\u4ece\u90a3\u91cc\u5f00\u59cb\u8bfb\u53d6\u3002\n\u53cd\u76d7\u7248\u7cfb\u7edf\u662fSNES CIC\u7684\u5ef6\u7eed\u3002\u6b63\u5982\u4f60\u6240\u77e5\u9053\u7684\uff0c\u76d7\u7248\u68c0\u6d4b\u548c\u533a\u57df\u9501\u5b9a\u90fd\u8981\u5f52\u529f\u4e8eCIC\u82af\u7247(\u5b83\u5fc5\u987b\u51fa\u73b0\u5728\u6bcf\u4e2a\u6388\u6743\u7684\u6e38\u620f\u76d2\u4e2d)\uff0c\u4efb\u5929\u580264\u6539\u8fdb\u4e86\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u8981\u6c42\u4e0d\u540c\u7684\u6e38\u620f\u5177\u6709\u7279\u5b9a\u53d8\u4f53\u7684CIC\u82af\u7247\uff0c\u4ee5\u786e\u4fdd\u76d2\u4e0d\u662f\u5047\u5192\u7684\u6216\u5305\u542bCIC\u514b\u9686\uff0c\u5916\u56f4\u63a5\u53e3\u6216\u201cPIF\u201d\u4f1a\u5728\u6e38\u620f\u5f00\u59cb\u65f6\u548c\u6e38\u620f\u671f\u95f4\u8fdb\u884c\u6821\u9a8c\u548c\u68c0\u67e5\uff0c\u4ee5\u76d1\u7763\u5b89\u88c5\u5728\u76d2\u4e0a\u7684\u5f53\u524dCIC\u3002\n\u5982\u679c\u7531\u4e8e\u4efb\u4f55\u539f\u56e0\uff0cPIF\u8ba4\u4e3a\u5f53\u524d\u7684\u58a8\u76d2\u65e0\u6548\uff0c\u5219\u4f1a\u5bfc\u81f4\u63a7\u5236\u53f0\u6c38\u4e45\u51bb\u7ed3\u3002\n\u533a\u57df\u9501\u5b9a\u662f\u901a\u8fc7\u5728\u4e0d\u540c\u533a\u57df\u4e4b\u95f4\u7a0d\u5fae\u6539\u53d8\u58a8\u76d2\u7684\u5f62\u72b6\u6765\u5b8c\u6210\u7684\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u80fd\u4ece\u4e0d\u540c\u7684\u533a\u57df\u5c06\u6e38\u620f\u7269\u7406\u5730\u63d2\u5165\u5230N64\u4e0a\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u7531\u4e8e\u76d2\u5f0f\u4ecb\u8d28\u7684\u4f7f\u7528\uff0c\u76d7\u7248\u95ee\u9898\u5e76\u6ca1\u6709\u592a\u5927\u7684\u62c5\u5fe7\uff0c\u5c3d\u7ba1\u6e38\u620f\u4ef7\u683c\u6bd4\u57fa\u4e8eCD\u7684\u6e38\u620f\u4ef7\u683c\u9ad8\u51fa\u4e09\u500d\u3002\n\u5c3d\u7ba1\u770b\u8d77\u6765\u53ef\u80fd\u5f88\u50bb\uff0c\u4f46\u4efb\u5929\u5802\u7559\u4e0b\u4e86\u4e00\u6247\u95e8\u662f\u5f00\u7740\u7684\uff1a\u78c1\u76d8\u9a71\u52a8\u5668\u7aef\u53e3\u3002\n\u4e00\u4e9b\u516c\u53f8\u4e3a\u4e86\u5f00\u53d1\u81ea\u5df1\u7684\u786c\u4ef6\u800c\u9006\u5411\u8bbe\u8ba1\u4e86\u754c\u9762\uff0c\u4e00\u4e9b\u7531\u6b64\u4ea7\u751f\u7684\u4ea7\u54c1\u6210\u4e3a\u4e86\u76d7\u7248\u7684\u95ee\u9898\u3002\n\u6211\u60f3\u503c\u5f97\u4e00\u63d0\u7684\u662fDoctor v64\uff0c\u8fd9\u6b3e\u8bbe\u5907\u4e0e\u78c1\u76d8\u9a71\u52a8\u5668\u7aef\u53e3\u7684\u5f62\u72b6\u76f8\u540c\uff0c\u4f46\u5305\u62ec\u4e00\u4e2aCD-ROM\u9a71\u52a8\u5668\uff0c\u7528\u4e8e\u5c06\u76d2\u5f0f\u78c1\u5e26\u7684\u5185\u5bb9\u514b\u9686\u5230CD\u4e0a\uff0c\u76f8\u53cd\u7684\u60c5\u51b5(\u4eceCD\u8bfb\u53d6ROM)\u4e5f\u662f\u53ef\u80fd\u7684\u3002\n\u5f53\u6211\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\n..", "note_en": "Nintendo\u2019s goal was to give players the  best graphics possible, for this it will partner with one of the biggest players in computer graphics to produce the  ultimate graphics chip.\n The result was a nice-looking console for the family&amp;mldr and a 500-page manual for the developer.\n Don\u2019t worry, I promise you this article will not be  that long&amp;mldr Enjoy!\n   The main processor is a  NEC VR4300 that runs at 93.75 MHz, it\u2019s a binary-compatible version of Silicon Graphics\u2019  MIPS R4300i that features:\n A  MIPS III ISA: Succeeds the MIPS II featuring new 64-bit instructions. 64-bit words are called  doublewords.\n  5-stage pipeline: Up to five instructions can be executed simultaneously (a detailed explanation can be found in a  previous article).\n 24 KB L1 cache: Divided in 16 KB for instructions and 8 KB for data.\n An internal  64-bit FPU is also included in this package, the CPU identifies it as a co-processor ( COP1) although the unit is fitted next to the ALU and it\u2019s only accessed through the ALU pipeline, meaning there\u2019s no co-processing per se.\n  The way RAM is assembled follows the  unified-memory architecture or \u2018UMA\u2019 where all available RAM is centralised in one place only and any component that requires RAM will access this shared location. The component arbitrating its access is, in this case, the GPU.\n The reason for choosing this design comes to the fact that it saves a considerable amount of production costs while, on the other side, it increments access contention if not managed properly.\n  Due to the unified memory architecture, the CPU no longer has direct access to RAM, so the GPU will be providing DMA functionality as well.\n  Apart from the UMA, the structure of RAM is a little bit complicated, so I\u2019ll try to keep it simple, here it goes&amp;mldr\n The system physically contains  4.5 MB of RAM, however it\u2019s connected using a  9-bit data bus where the 9th bit is reserved for the GPU (more details later). As a consequence, every component except the GPU will only find  up to 4 MB.\n The type of RAM fitted in the board is called  Rambus DRAM or \u2018RDRAM\u2019 for short, this was just another design that competed against SDRAM on becoming the next standard. RDRAM is connected in  serial (where transfers are done one bit at a time) while SDRAM uses a  parallel connection (transfers multiple bits at a time).\n RDRAM\u2019s latency is directly proportional to the number of banks installed so in this case, with the amount of RAM this system has, the resulting latency  is significant.\n By contrast, the amount of available RAM on this console  can be expanded by installing the  Expansion Pak accessory: A fancy-looking small box that includes 4.5 MB. Curiously enough, the RAM bus must be terminated, so the console always shipped with a terminator (called  Jumper Pak) fitted in the place of the Expansion Pak. Now, you may ask, what would happen if you switch on the console without any  Pak installed?  Literally nothing, you get a blank screen!\n   The core of the graphics reside on a huge chip designed by Silicon Graphics called  Reality Co-Processor running at 62.5 MHz. This package contains  a lot of circuitry so don\u2019t worry if you find it difficult to follow, the graphics sub-system has a very complex architecture! The main philosophy of this design is that the GPU is not meant to be a \u2018simple\u2019 rasteriser like the  competitor\u2019s. Instead, it should also be capable of  accelerating geometry calculations (offloading the CPU), and for that, more circuitry will be needed.\n Having said that, this chip is divided into three main modules, two of them are used for graphics processing:\n The  Scalar Unit: A MIPS R400-based CPU which implements a subset of the R400 instruction set.\n The  Vector Unit: A co-processor that performs vector operations with 32 128-bit registers. Each register is  sliced in eight parts to operate eight 16-bit vectors at once (just like SIMD instructions on conventional CPUs).\n The  System Control: Another co-processor that provides DMA functionality and controls its neighbour module, the RDP (more about it later on).\n In order to operate this module, the CPU stores in RAM a series of commands called  Display list along with the data that will be manipulated, then the RSP reads the list and applies the required operations on it. The available features include geometry transformations (such as perspective projection), clipping and lighting.\n This seems straightforward, but how does it perform these operations? Well, here\u2019s the interesting part: Unlike its competitors (PS1 and Saturn),  the geometry engine is not hard-wired. Instead, the RSP contains some memory (4 KB for instructions and 4 KB for data) to store  microcode, a small program, with no more than 1000 instructions, that  implements the graphics pipeline. In other words, it directs the Scalar Unit on how it should operate our graphics data. The microcode is fed by the CPU during runtime.\n Nintendo provided different microcodes to choose from and, similarly to the  SNES\u2019 background modes, each one balances the resources differently.\n After the RSP finished processing our polygon data, it will start sending  rasterisation commands to the next module, the  RDP, to draw the frame. These commands are either sent using a dedicated bus called  XBUS or through main RAM.\n The RDP is another processor (this time with fixed functionality) that includes multiple engines used to map textures onto our polygons, mix colours and build the new frame.\n It can process either  triangles or  rectangles as primitives, the latter is useful for drawing sprites. The RDP\u2019s rasterisation pipeline contains the following blocks:\n A  Texture Unit: Processes textures using 4 KB of dedicated memory (called \u2018TMEM\u2019) allowing up to eight tiles to be used for texturing. It can perform the following operations on them: Bilinear filtering: Maps the selected 2D texture over the 3D shape and smooths it to avoid pixelated areas. A \u2018complete\u2019 filter would require four points to carry out the interpolation, however, this console only uses three ( triangular interpolation) resulting in some anomalies. Thus, certain textures will have to be \u2018adapted\u2019 beforehand.\n Mip-Mapping: Automatically selects a scaled-down version of the texture depending on its  level of detail. This avoids computing large textures that would be seen far away from the camera and prevents aliasing. If enabled, the N64 maps textures using  trilinear filtering instead. This new algorithm will also interpolate between the mipmaps to soften sudden changes in the level of detail.\n Perspective correction: Chosen algorithm for mapping textures onto triangles. Unlike  other algorithms, this one takes into account the depth value of each primitive, achieving better results.\n A  Colour Combiner: Mixes and interpolates multiples layers of colours (for instance, to apply shaders).\n A  Blender: Mixes pixels against the current frame-buffer to apply translucency, anti-aliasing, fog, dithering. It also performs z-buffering (more about it later on).\n A  Memory interface: Used by the previous blocks to read and write the current frame-buffer in RAM and/or fill the TMEM.\n The RDP provides four modes of functioning, each mode combines these blocks differently in order to optimise specific operations.\n Since this module is constantly updating the frame-buffer, it handles RAM very differently: Remember the unusual 9-bit \u2018byte\u2019? The ninth bit is used for frame-buffer-related calculations (like z-buffering and antialiasing) and can only be accessed through the Memory interface.\n  The resulting frame-buffer must be sent to the  Video Encoder in order to display it on screen ( DMA and the  Video Interface component are essential to accomplish this).\n The theoretical maximum capabilities are 24-bit colour depth (16.8 million colours) and 640x480 resolution (or 720x576 in the PAL region). I mention it as \u2018theoretical\u2019 since using the maximum capabilities can be resource-hungry, so programmers will tend to use lower stats to free up enough resources for other services.\n  Let\u2019s put all the previous explanations into perspective, for that I\u2019ll borrow Nintendo\u2019s  Super Mario 64 to show, in a nutshell, how a frame is composed:\n To start with, our 3D models are located in the cartridge ROM, but in order to keep a steady bandwidth, we need to copy them to RAM first.\n Then it\u2019s time to build a scene using our models, the CPU could do it by itself but it may take ages, so the task is delegated to the RCP. The CPU will instead send orders to the RCP, this is done by carrying out these tasks:\n Compose the Display List that contains the operations to be carried out by the RSP and store it in RAM.\n Afterwards, the RSP will start performing the first batch of tasks and the result will be sent to the RDP in the form of rasterisation commands.\n So far we managed to process our data and apply some effects on it, but we still need to:\n  As you may guess, these tasks will be performed by the RDP. The CPU will feed the data (such as textures) by placing it on RAM, this module has a fixed pipeline but we can select the optimal mode of operation based on the current task to improve the frame-rate.\n Once the RDP finishes processing the data, it will write the final bitmap to the frame-buffer area in RAM. Afterwards, the CPU must transfer the new frame to the  Video Interface (preferably using the DMA) which will in turn sent it to the  Video Encoder for display.\n   Here are some examples of previous 2D characters for the  Super Nintendo that have been redesigned for the new 3D era, they are interactive so I encourage you to check them out!\n   If you\u2019ve read about the previous consoles, you came across the never-ending problem regarding  visibility of surfaces and by now may think polygon sorting is the only way out of this. Well, for the first time in this series, the RDP features a hardware-based approach called  Z-buffering. In a nutshell, the RDP allocates an extra buffer called  Z-Buffer in memory. This has the same dimensions of a frame-buffer, but instead of storing RGB values, each entry contains the depth (Z-value) of the nearest pixel with respect to the camera.\n After the RDP rasterises the vectors, the z-value of the new pixel is compared against the respective value in Z-buffer. If the new pixel contains a smaller z-value, it means the new pixel is positioned in front of the previous one, so it\u2019s applied onto the frame-buffer and the z-buffer is also updated. Otherwise, the pixel is discarded.\n Overall, this is a huge welcomed addition: Programmers do not need to worry anymore about implementing  software-based polygon sorting methods which drain a lot of CPU resources. However, Z-buffer does not save you from feeding unnecessary geometry (discarded or overdrawn, both consuming resources). For this, game engines may choose to include an  occlusion culling algorithm to discard unseen geometry as early as possible.\n  SGI clearly invested a lot of technology into this system. Nonetheless, this was a console meant for the household and as such, it had to keep its cost down. Some hard decisions resulted in difficult challenges for programmers:\n Due to the huge number of components and operations in the graphics pipeline, the RCP ended up being very susceptible to  stalls: An undesirable situation where sub-components keep idling for considerable periods because the required data is delayed at the back of the pipeline.\n This will always result in performance degradation and is up to the programmer to avoid them. Although to make things easier, some CPUs such as the Scalar Unit implement a feature called  Bypassing which enables to execute similar instructions at a faster rate by bypassing some execution stages that can be skipped.For example, if we have to compute sequential  ADD instructions there\u2019s no need to write the result back to a register and then read it back every time each  ADD is finished, we can instead keep using the same register for all additions and do the write-back once the last  ADD is completed.\n Inside the RDP there are 4 KB Texture memory available to be used as  Texture Cache, its main goal is to avoid stalling read cycles from RAM. Unfortunately, in practice 4 KB happened to be insufficient for high-resolution textures. Furthermore, if mipmapping is used, the available amount of cache is then reduced to half.\n As a result, some games used solid colours with Gouraud shading (like  Super Mario 64) and others relied on pre-computed textures (for example, where multiple layers had to be mixed).\n   Before we go into the details, let\u2019s define the two endpoints of the audio sub-system:\n Our starting point is the cartridge ROM, it contains data that only the CPU can interpret.\n The ending point is the  Digital-to-Analog converter or \u2018DAC\u2019, which only understands  waveform data.\n Now, how do we connect both ends? Consoles normally include a dedicated audio chip that does the work for us. Unfortunately, the Nintendo 64  doesn\u2019t have such dedicated chip, so this task is distributed across these components:\n The  main CPU: Transfers the audio data from the game\u2019s ROM to RAM, then it initialises  Audio Lists to be used by the RSP.\n The  RSP: With the use of even more microcode, it interprets the audio lists previously stored in RAM and performs the required operations to the audio data which, for example, can include:\n The resulting data is, as expected, waveform data. This is then sent to the  Audio Interface or \u2018AI\u2019 block which will then transfer it to the digital-to-analogue converter. The resulting waveform contains two channels (since our system is stereo) with 16-bit resolution each.\n   Time to checkout the soundtracks made for the N64. There are too many (good ones) to mention in this article, so here are some that caught my attention:\n    Sampling rate can be up to 44.1Hz, but using the top rate will steal lots of CPU cycles.\n There\u2019s no strict limit in the number of channels, it all depends how much the RSP is capable of mixing (often around 16-24 channels if processing ADPCM or ~100 if PCM).\n Memory is another concern, while competitors relied on larger mediums (i.e. CD-ROM) and dedicated audio memory, Nintendo 64 cartridges hold much less data (let alone music data) and have to share its main memory with other components. For those reasons, players may notice that N64 ports contain lesser quality music or repeated scores. A method for overcoming this limitation consisted in implementing a software sequencer that could \u2018construct\u2019 the samples at runtime using a pre-populated set of sounds (similar to MIDI music).\n   Similar to the PS1 and Saturn, N64 games are written for bare-metal. However, there are no BIOS routines available to simplify some operations. As a substitute,  games embed small OS that provides a fair amount of abstraction to efficiently handle the CPU, GPU and I/O.\n This is not the conventional  desktop OS that we may imagine at first, it\u2019s just a micro-kernel with the smallest footprint possible that provides the following functionality:\n  The kernel is automatically embedded by using Nintendo\u2019s libraries, additionally, if programmers decide not to include one of the libraries, the respective portion of the kernel is skipped to avoid cartridge space being wasted.\n  As you know by now, I/O is not directly connected to the CPU, so the RCP\u2019s third module (which I haven\u2019t mentioned until now) serves as an  I/O interface, it basically communicates with the CPU, controllers, game cartridge and Audio/Video DACs.\n   Nintendo held on to the cartridge medium for storage and as a consequence, games enjoyed higher bandwidths (between 5-50 MB/s depending on the ROM\u2019s speed) while being more expensive to produce. The biggest cartridge found in the market has 64 MB.\n Inside cartridges manufacturers may include extra memory (in the form of  EEPROM,  flash or  SRAM with a battery) to hold saves, however this is not a strong requirement any more since certain accessories could be used to store saves as well.\n  The Nintendo 64 controller included a connector used to plug in accessories, some of them are:\n The  Controller Pak: Another medium (similar to Sony\u2019s  Memory Card) used to store save data and use it on other consoles.\n The  Rumble Pak: Contains a small motor in order to provide haptic feedback, useful for immersing the player on certain games.\n  Apart from that, this console included a special connector at the bottom of its motherboard which was meant to be used by the yet-unreleased  Disk drive, some sort of an \u2018extra floor\u2019 that contained a proprietary disk reader, the drive was only released on Japan nonetheless and eventually cancelled for the rest of the world.\n  In general, development was mainly done in C, assembly was also used to achieve better performance. While this system contained a 64-bit instruction set, 64-bit instructions were rarely used since in practice, 32-bit instructions happened to be faster to execute and required half the storage.\n Libraries contained several layers of abstractions in order to command the RCP, for example, structs like the  Graphics Binary Interface or \u2018GBI\u2019 were designed to assemble the necessary Display lists more easily, the same applied for audio functions (its struct was called  Audio Binary Interface or \u2018ABI\u2019).\n In terms of microcode development, Nintendo already provided a set of microcode programs to choose from, however if developers wanted to customise it, that would indeed be a challenging tasks: The Scalar Unit instruction set wasn\u2019t initially documented (at the request of Nintendo, of course), later on the company changed its position and SGI finally released some documentation for microcode programming.\n Hardware used for development included workstations supplied by SGI, like the  Indy machine which came with an extra daughterboard called  U64 that contains the hardware and I/O of the retail console. Tools were supplied for Windows computers as well.\n Other third-party tools consisted in cartridges featuring a long ribbon cable that connected to the workstation. This cartridge fitted in a retail Nintendo 64 but included internal circuitry to redirect the  read requests from the console to the workstation\u2019s RAM. The deployment/debugging process was carried out by transferring a copy of the game to RAM and then, when the console was switched on, it would start reading from there.\n   The anti-piracy system is a continuation of the  SNES\u2019 CIC. As you know, bootleg detection and region locking are possible thanks to the CIC chip (which must be present in every  authorised game cartridge), the Nintendo 64 improved this system by requiring different games to have a specific variant of the CIC chips in order to make sure the cartridge was not a counterfeit or contained a CIC clone, the  Peripheral Interface or \u2018PIF\u2019 would do checksum checks at the start and during gameplay to supervise current CIC installed on the cartridge.\n If by any reason the PIF considers the current cartridge is not valid, it will then induce the console in a permanent freeze.\n Region-locking was done by slightly altering the shape of the cartridge between different regions so the user can\u2019t physically insert the game on an N64 from a different region.\n Overall, there was not too much concern regarding piracy thanks to the use of cartridge medium, although game prices were three times higher than CD-based ones.\n  As silly as it may seem, Nintendo left one door opened: The  Disk Drive port.\n A few companies reversed engineered the interface in order to develop their own hardware, and some of the resulting products became a concern for piracy.\n I guess the one worth mentioning is the  Doctor v64, this device has the same shape as the Disk Drive port but included a CD-ROM drive that\u2019s used to clone the contents of the cartridge to a CD, the opposite (reading Roms from a CD) is also possible.\n  When I was a kid \n......", "posttime": "2020-05-19 00:59:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4efb\u5929\u5802,\u5b9e\u7528,practical,ram", "title": "\u4efb\u5929\u580264\u67b6\u6784--\u5b9e\u7528\u5206\u6790", "title_en": "Nintendo 64 Architecture \u2013 A Practical Analysis", "transed": 1, "url": "https://copetti.org/projects/consoles/nintendo-64/", "via": "", "real_tags": ["\u4efb\u5929\u5802", "\u5b9e\u7528", "practical", "ram"]}, {"category": "", "categoryclass": "", "imagename": "a5ce040108f606b498af773bb48f8c94.jpg", "infoid": 1002658, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u627f\u8ba4\u81ea\u5df1\u5173\u4e8e\u5f00\u6e90\u7684\u770b\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u6b64\u524d\u8be5\u516c\u53f8\u5728\u684c\u9762\u7edf\u6cbb\u5730\u4f4d\u7684\u5dc5\u5cf0\u65f6\u671f\u4e0e\u5b83\u548cLinux\u8fdb\u884c\u4e86\u591a\u5e74\u7684\u6597\u4e89\u3002\u5fae\u8f6f\u524d\u9996\u5e2d\u6267\u884c\u5b98\u53f2\u8482\u592b\u00b7\u9c8d\u5c14\u9ed8(Steve Ballmer)\u57282001\u5e74\u66fe\u5c06Linux\u79f0\u4e3a\u201c\u4e00\u79cd\u5728\u77e5\u8bc6\u4ea7\u6743\u610f\u4e49\u4e0a\u4f9d\u9644\u4e8e\u5b83\u6240\u89e6\u53ca\u7684\u4e00\u5207\u7684\u764c\u75c7\u201d\u3002\n\u5fae\u8f6f\u603b\u88c1\u5e03\u62c9\u5fb7\u00b7\u53f2\u5bc6\u65af(Brad Smith)\u73b0\u5728\u8ba4\u4e3a\uff0c\u8be5\u516c\u53f8\u5bf9\u5f00\u6e90\u7684\u770b\u6cd5\u662f\u9519\u8bef\u7684\u3002\u53f2\u5bc6\u65af\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u6700\u8fd1\u7684\u4e00\u6b21\u6d3b\u52a8\u4e2d\u8bf4\uff1a\u201c\u5f53\u5f00\u6e90\u5728\u672c\u4e16\u7eaa\u521d\u7206\u53d1\u65f6\uff0c\u5fae\u8f6f\u7ad9\u5728\u4e86\u5386\u53f2\u7684\u9519\u8bef\u4e00\u8fb9\uff0c\u6211\u53ef\u4ee5\u8bf4\u6211\u4e2a\u4eba\u4e5f\u662f\u5982\u6b64\u3002\u201d\u53f2\u5bc6\u65af\u5df2\u7ecf\u5728\u5fae\u8f6f\u5de5\u4f5c\u4e86\u8d85\u8fc725\u5e74\uff0c\u5728\u4e0e\u5f00\u6e90\u8f6f\u4ef6\u7684\u6597\u4e89\u4e2d\uff0c\u4ed6\u662f\u8be5\u516c\u53f8\u7684\u8d44\u6df1\u5f8b\u5e08\u4e4b\u4e00\u3002\n\u201c\u597d\u6d88\u606f\u662f\uff0c\u5982\u679c\u751f\u547d\u8db3\u591f\u957f\uff0c\u4f60\u53ef\u4ee5\u5b66\u4e60\u2026\u3002\u4f60\u9700\u8981\u6539\u53d8\uff0c\u201c\u53f2\u5bc6\u65af\u8865\u5145\u8bf4\u3002\u4e0e\u7ed9Linux\u8d34\u4e0a\u764c\u75c7\u6807\u7b7e\u7684\u65e5\u5b50\u76f8\u6bd4\uff0c\u5fae\u8f6f\u80af\u5b9a\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u5316\u3002\u8fd9\u5bb6\u8f6f\u4ef6\u5de8\u5934\u73b0\u5728\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u5f00\u6e90\u9879\u76ee\u8d21\u732e\u8005\uff0c\u51fb\u8d25\u4e86Facebook\u3001Docker\u3001Google\u3001Apache\u548c\u8bb8\u591a\u5176\u4ed6\u516c\u53f8\u3002\n\u8fd1\u5e74\u6765\uff0c\u5fae\u8f6f\u9010\u6e10\u91c7\u7528\u5f00\u6e90\uff0c\u5305\u62ec\u5f00\u6e90\u7684PowerShell\u3001Visual Studio Code\uff0c\u751a\u81f3Microsoft Edge\u7684\u539f\u521bJavaScript\u5f15\u64ce\u3002\u5fae\u8f6f\u8fd8\u4e0eCanonical\u5408\u4f5c\uff0c\u5c06Ubuntu\u5f15\u5165Windows10\uff0c\u5e76\u6536\u8d2d\u4e86Xamarin\u6765\u5e2e\u52a9\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\uff0c\u6536\u8d2d\u4e86GitHub\u6765\u7ef4\u62a4\u5f00\u53d1\u4eba\u5458\u6d41\u884c\u7684\u4ee3\u7801\u5e93\u3002\n\u5fae\u8f6f\u751a\u81f3\u5728\u672c\u6708\u665a\u4e9b\u65f6\u5019\u53d1\u5e03\u7684Windows10\u66f4\u65b0\u4e2d\u53d1\u5e03\u4e86\u5b8c\u6574\u7684Linux\u5185\u6838\uff0c\u5e76\u4e8e\u53bb\u5e74\u8f6c\u5411Edge\u7684Chromium\u6d4f\u89c8\u5668\u5f15\u64ce\u3002\u5fae\u8f6f\u8fd8\u5728\u4e0e\u5f00\u6e90\u793e\u533a\u5408\u4f5c\uff0c\u4e3aWindows10\u521b\u5efaPowerToys\uff0c\u8be5\u516c\u53f8\u65b0\u7684\u5f00\u653e\u8bbe\u8ba1\u7406\u5ff5\u53ef\u80fd\u610f\u5473\u7740\uff0c\u5728\u672a\u6765\u51e0\u5e74\u91cc\uff0c\u6211\u4eec\u5c06\u5728Windows\u4e2d\u770b\u5230\u66f4\u591a\u7684\u5f00\u6e90\u52aa\u529b\u3002", "note_en": "Microsoft has admitted it was wrong about open source, after the company battled it and Linux for years at the height of its desktop domination. Former Microsoft CEO Steve Ballmer famously branded Linux \u201ca cancer that attaches itself in an intellectual property sense to everything it touches\u201d  back in 2001.\n Microsoft president Brad Smith now believes the company was wrong about open source. \u201cMicrosoft was on the wrong side of history when open source exploded at the beginning of the century, and I can say that about me personally,\u201d said Smith in a  recent MIT event. Smith has been at Microsoft for more than 25 years and was one of the company\u2019s senior lawyers during its battles with open-source software.\n  \u201cThe good news is that, if life is long enough, you can learn \u2026 that you need to change,\u201d  added Smith. Microsoft has certainly changed since the days of branding Linux a cancer. The software giant is now the single largest contributor to open-source projects in the world, beating Facebook, Docker, Google, Apache, and many others.\n Microsoft has gradually been adopting open source in recent years, including open-sourcing  PowerShell,  Visual Studio Code, and even Microsoft Edge\u2019s original  JavaScript engine. Microsoft has also partnered with Canonical to bring  Ubuntu to Windows 10, and it  acquired Xamarin to aid mobile app development and  GitHub to maintain the popular code repository for developers.\n Microsoft is even  shipping a full Linux kernel in a Windows 10 update that will release later this month, and it  moved to the Chromium browser engine for Edge last year. Microsoft is also collaborating with open-source communities to  create PowerToys for Windows 10, and the company\u2019s new  open design philosophy may mean we\u2019ll see a lot more open-source efforts in Windows in the years to come.", "posttime": "2020-05-19 00:58:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,microsoft,\u5fae\u8f6f,\u770b\u6cd5,wrong", "title": "\u5fae\u8f6f\uff1a\u6211\u4eec\u5bf9\u5f00\u6e90\u7684\u770b\u6cd5\u662f\u9519\u8bef\u7684", "title_en": "Microsoft: We were wrong about open source", "transed": 1, "url": "https://www.theverge.com/2020/5/18/21262103/microsoft-open-source-linux-history-wrong-statement", "via": "", "real_tags": ["\u5f00\u6e90", "microsoft", "\u5fae\u8f6f", "\u770b\u6cd5", "wrong"]}, {"category": "", "categoryclass": "", "imagename": "3c20f1cae91d07b40aba3402e70cd285.png", "infoid": 1002657, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u751f\u6d3b\u4e2d\uff0c\u6709\u65f6\u4f60\u4f1a\u6536\u5230\u4e00\u5c01\u975e\u5e38\u611a\u8822\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4ee5\u81f3\u4e8e\u4f60\u771f\u7684\u4ece\u6905\u5b50\u4e0a\u7ad9\u8d77\u6765\uff0c\u53ea\u662f\u4e3a\u4e86\u4e0d\u6253\u4f60\u7684\u663e\u793a\u5668\u3002\n\u8ba9\u6211\u4eec\u56de\u5230\u5f00\u5934\uff0c2020\u5e744\u67086\u65e5\u3002\u5728\u6ce8\u518c\u4e86Brother Hackathon 2020\u540e\uff0c\u6211\u6536\u5230\u4e86\u4e00\u53f0\u5168\u65b0\u7684Brother QL-820NWB\u6807\u7b7e\u6253\u5370\u673a\uff0c\u5e76\u5f00\u59cb\u5728Android\u4e0a\u505a\u4e00\u4e9b\u5de5\u4f5c\uff0c\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u624b\u673a\u5e94\u7528\u3002\u9ed1\u5ba2\u9a6c\u62c9\u677e\u6709\u51e0\u4e2a\u8ff7\u4f60\u9ed1\u5ba2\u9a6c\u62c9\u677e\u6311\u6218\uff0c\u8ba9\u4eba\u4eec\u6709\u673a\u4f1a\u521b\u9020\u4e00\u4e9b\u6709\u8da3\u7684\u66f4\u5c0f\u7684\u60f3\u6cd5\uff0c\u4e3b\u8981\u662f\u56f4\u7ed5\u539f\u578b\u3002\n\u6211\u5df2\u7ecf\u51b3\u5b9a\u5e94\u5bf9\u6311\u62182\u548c\u6311\u62183\u3002\u6311\u62182\u662f\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u4f01\u4e1a\u521b\u5efa\u7b80\u5355\u7684\u6807\u5fd7\uff0c\u7528\u4e8e\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u8fdb\u884c\u4ea4\u6d41\u3002\u6311\u62183\u662f\u521b\u5efa\u4e00\u4e2a\u65e0\u9700\u5927\u91cf\u6570\u636e\u8f93\u5165(\u4f20\u611f\u5668\u3001\u6444\u50cf\u5934\uff0c\u8bf8\u5982\u6b64\u7c7b\u7684\u4e1c\u897f)\u5373\u53ef\u6253\u5370\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6311\u62182\u6700\u7ec8\u521b\u5efa\u4e86SignPrinterApp\uff0c\u8fd9\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u751f\u6210\u53ef\u6253\u5370\u7684\u6807\u5fd7\uff0c\u53ef\u4ee5\u5728\u4e00\u5957Brother\u6253\u5370\u673a\u4e0a\u6253\u5370\uff0c\u6216\u8005\u4fdd\u5b58\u5230\u56fe\u50cf\u4e2d\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5728\u4efb\u4f55\u6253\u5370\u673a\u8bbe\u5907\u4e0a\u6253\u5370\u3002\n\u5728\u53d1\u5e03\u4e86\u51e0\u4e2a\u7248\u672c\u540e\uff0c\u6211\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u7248\u672c\uff0c\u4ee3\u53f7\u4e3a\u2018Prod\u2019\u548c\u2018ProD2\u2019\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3aSignPrinterApp\u2026\u53d1\u5e03\u5230Google play\u4e0a\u3002\u5b83\u968f\u540e\u4f5c\u4e3a\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\u53d1\u5e03\uff0c\u5e76\u5206\u522b\u4e8e4\u670820\u65e5\u548c4\u670823\u65e5\u83b7\u5f97\u6279\u51c6\u3002\n\u56db\u5929\u540e\uff0c\u6211\u6536\u5230\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5e94\u7528\u7a0b\u5e8f\u88ab\u4eceGoogle Play\u4e0b\u67b6\u3002\n\u5bf9\u771f\u5b9e\u7684\u4eba\u6216\u4e00\u7fa4\u4eba\u56e0\u81ea\u6740\u3001\u8fc7\u91cf\u670d\u836f\u3001\u81ea\u7136\u539f\u56e0\u7b49\u6b7b\u4ea1\u7f3a\u4e4f\u654f\u611f\u5ea6\u3002\n\u5f88\u96be\u5426\u8ba4\u51a0\u72b6\u75c5\u6bd2\u7684\u5a01\u80c1\uff0c\u540c\u65f6\u9f13\u52b1\u4eba\u4eec\u6253\u5370\u6807\u5fd7\u8fdb\u884c\u4ea4\u6d41\uff0c\u6216\u8005\u4ece\u5141\u8bb8\u4eba\u4eec\u4ea4\u6d41\u4ed6\u4eec\u7684\u673a\u6784\u662f\u5982\u4f55\u8fd0\u8425\u7684\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u5229\u3002\n\u770b\u5230\u4e00\u4e2a\u88ab\u6279\u51c6\u5e76\u53d1\u5e03\u4e86\u4e24\u6b21\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u6ca1\u6709\u8b66\u544a\u751a\u81f3\u505c\u7528\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u8fdb\u5165\u6682\u505c\u72b6\u6001\uff0c\u8fd9\u771f\u7684\u5f88\u6709\u8da3\u3002\n\u4e0a\u8bc9\u7a0b\u5e8f\u4ee5\u6062\u590d\u2026\u7ed3\u675f\u3002\u4f46\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u66f4\u6539\u3002\n\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e00\u6b3e\u544a\u8bc9\u4eba\u4eec\u6d17\u624b\u3001\u5446\u5728\u5bb6\u91cc\u3001\u793e\u4ea4\u8ddd\u79bb\u6216\u4efb\u4f55\u7c7b\u4f3c\u2026\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u786e\u4fdd\u3002\u8c37\u6b4c\u53ea\u662f\u5e0c\u671bAndroid\u7528\u6237\u4e0d\u77e5\u9053\u8fd9\u4e00\u70b9\u3002", "note_en": "Sometimes in life, you get an email that is so dumb, so so so stupid that you literally get up from your chair just to not punch your monitor.\n  Let\u2019s rewind back to the beginning, April 6th, 2020. After signing up for the  Brother Hackathon 2020, I received a brand new Brother QL-820NWB label printer and began doing some work on Android to set up a mobile app. The hackathon had a couple of mini-hackathon challenges to get people a chance to create some interesting smaller ideas, mostly around prototyping.\n I had decided to tackle Challenge 2 and Challenge 3. Challenge 2 is creating an application to allow businesses to create simple signs that could be used to communicate during the COVID-19 pandemic. Challenge 3 is creating an application to print without a lot of data entry (sensors, camera, that kinda thing).\n Challenge 2 ended up with the creation of the SignPrinterApp, a free application to generate printable signs that can be printed on a set of Brother printers or saved to an image and printed basically on any printer device.\n  After a couple of releases, I finally had a good enough version, codenamed  \u2018PROD\u2019 and \u2018PROD2\u2019 and released them to Google Play as the SignPrinterApp\u2026 which was then released as a free app and approved on April 20th and April 23rd respectively\n  Four days later, I received this email and the app was pulled from Google Play\n   Lacking sensitivity regarding the death of a real person or group of people due to suicide, overdose, natural causes, etc.\n It\u2019s kind of hard to deny the COVID-19 threat while encouraging people to print signs to communicate, or profit from a free app that allows people to communicate how their establishment is operating.\n It\u2019s really interesting to see that an app that had been approved and released twice can go directly to suspension without a warning or even deactivation.\n The appeals process ended with reinstatement\u2026 but with the following changes needing to be made.\n  So make sure if you ever create an app that tells people to wash their hands, stay at home, social distance or anything like that\u2026 Google just wants Android users to not know about that.", "posttime": "2020-05-19 00:58:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,google,\u75c5\u6bd2,\u8c37\u6b4c,\u5e94\u7528\u7a0b\u5e8f", "title": "\u6709\u4e00\u6b21\u8c37\u6b4c\u8ba9\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u4ea4\u6d41\u53d8\u5f97\u66f4\u52a0\u56f0\u96be", "title_en": "That one time Google made it more difficult to communicate about Covid-19", "transed": 1, "url": "https://medium.com/@lazherrera/that-one-time-google-made-it-more-difficult-to-communicate-about-covid-19-cf29c3751c69", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "google", "\u75c5\u6bd2", "\u8c37\u6b4c", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "3975da58fb653520c4643547d75cbd74.jpg", "infoid": 1002656, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u81ea\u7531\u65b0\u95fb\u62a5\u9053\uff0c\u660e\u5c3c\u82cf\u8fbe\u5dde\u4e00\u540d\u7537\u5b50\u56e0\u51fb\u843d\u65e0\u4eba\u673a\u800c\u9762\u4e34\u4e24\u9879\u91cd\u7f6a\u6307\u63a7\u3002\n\u8fd9\u8d77\u4e8b\u4ef6\u59cb\u4e8e\u4e00\u540d\u672a\u900f\u9732\u59d3\u540d\u7684\u7537\u5b50\u9a7e\u9a76\u65e0\u4eba\u673a\u98de\u8d8a\u5df4\u7279\u83f2\u5c14\u5fb7\u98df\u54c1\u516c\u53f8(Butterfield Foods)\uff0c\u8be5\u516c\u53f8\u662f\u660e\u5c3c\u82cf\u8fbe\u5dde\u5357\u90e8\u5c0f\u9547\u5df4\u7279\u83f2\u5c14\u5fb7(Butterfield)\u7684\u4e00\u5bb6\u8089\u5236\u54c1\u751f\u4ea7\u5546-\u5305\u62ec\u9e21\u8089\u3002\u8fd9\u540d\u7537\u5b50\u540e\u6765\u544a\u8bc9\u4e00\u540d\u8b66\u957f\u526f\u624b\uff0c\u4ed6\u8bd5\u56fe\u8bc1\u660e\u9e21\u662f\u56e0\u4e3a\u5927\u6d41\u884c\u800c\u88ab\u5bb0\u6740\u7684\u3002\n\u4e24\u540d\u5458\u5de5\u8d70\u8fd1\u8fd9\u540d\u7537\u5b50\uff0c\u95ee\u4ed6\u5728\u505a\u4ec0\u4e48\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u53e6\u4e00\u4e2a\u4eba\u5c06\u65e0\u4eba\u673a\u4ece\u7a7a\u4e2d\u51fb\u843d\u3002\u8fd9\u540d\u7537\u5b50\u8bf4\uff0c\u4ed6\u7684\u65e0\u4eba\u673a\u4ef7\u503c1900\u7f8e\u5143\u3002\n\u81ea\u7531\u65b0\u95fb\u62a5\u79f0\uff0c\u5f53\u5c40\u902e\u6355\u4e8634\u5c81\u7684\u7537\u5b50\u7279\u62c9\u7ef4\u65af\u00b7\u675c\u5b89\u00b7\u6e29\u7279\u65af(Travis Duane Winters)\uff0c\u5e76\u5728\u6c83\u901a\u4e07\u53bf\u5730\u533a\u6cd5\u9662\u5bf9\u4ed6\u63d0\u51fa\u6307\u63a7\u3002\u5b98\u5458\u4eec\u8868\u793a\uff0c\u6e29\u7279\u65af\u627f\u8ba4\u5f00\u67aa\u6253\u6b7b\u4e86\u8fd9\u67b6\u65e0\u4eba\u673a\u3002\u4ed6\u9762\u4e34\u5211\u4e8b\u6bc1\u574f\u8d22\u4ea7\u548c\u5728\u57ce\u5e02\u8303\u56f4\u5185\u9c81\u83bd\u5f00\u67aa\u7684\u6307\u63a7\u3002\n\u8fd9\u5df2\u7ecf\u4e0d\u662f\u7b2c\u4e00\u6b21\u6709\u4eba\u51fb\u843d\u65e0\u4eba\u673a\u4e86\u3002\u6211\u4eec\u62a5\u9053\u4e862016\u5e74\u548c2017\u5e74\u53d1\u751f\u7684\u51e0\u8d77\u6b64\u7c7b\u67aa\u51fb\u4e8b\u4ef6\u3002\u5728\u4e00\u4e2a\u6848\u4f8b\u4e2d\uff0c\u4e00\u540d\u7537\u5b50\u8d77\u8bc9\u4e00\u540d\u90bb\u5c45\uff0c\u5f53\u4ed6\u7684\u65e0\u4eba\u673a\u98de\u8d8a\u90bb\u5c45\u7684\u571f\u5730\u65f6\uff0c\u8fd9\u540d\u90bb\u5c45\u5f00\u67aa\u6253\u6b7b\u4e86\u4ed6\u3002\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u4ee5\u7a0b\u5e8f\u4e3a\u7531\u9a73\u56de\u4e86\u8fd9\u8d77\u8bc9\u8bbc\uff0c\u53d1\u73b0\u5b83\u5e94\u8be5\u63d0\u4ea4\u7ed9\u5dde\u6cd5\u9662\uff0c\u800c\u4e0d\u662f\u8054\u90a6\u6cd5\u9662\u3002\n\u7f8e\u56fd\u8054\u90a6\u822a\u7a7a\u7ba1\u7406\u5c40(Federal Aviation Administration)\u8868\u793a\uff0c\u6839\u636e\u540c\u6837\u7684\u8054\u90a6\u822a\u7a7a\u6cd5\uff0c\u51fb\u843d\u65e0\u4eba\u673a\u662f\u975e\u6cd5\u7684\uff0c\u540c\u6837\u7684\u8054\u90a6\u822a\u7a7a\u6cd5\u89c4\u5b9a\u51fb\u843d\u673a\u7ec4\u4eba\u5458\u98de\u673a\u662f\u975e\u6cd5\u7684\u3002\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u6709\u4efb\u4f55\u4eba\u6839\u636e\u8fd9\u4e9b\u6cd5\u5f8b\u88ab\u8d77\u8bc9\u7684\u6848\u4f8b\u3002\n\u51fb\u843d\u4e00\u67b6\u5c0f\u578b\u6444\u5f71\u65e0\u4eba\u673a\u7684\u6cd5\u5f8b\u5c31\u50cf\u51fb\u843d\u4e00\u67b6\u6709\u4eba\u9a7e\u9a76\u7684\u98de\u673a\u4e00\u6837\u9002\u7528\u5417\uff1f\u6211\u6ca1\u770b\u9519\u5427\uff1f\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\u90a3\u5c31\u662f..\u3002\u75af\u4e86\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u8fd9\u540d\u7537\u5b50\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5728\u57ce\u5e02\u91cc\u5f00\u67aa(\u53d6\u51b3\u4e8e\u5177\u4f53\u60c5\u51b5)\u800c\u53d7\u5230\u8c34\u8d23\u6216\u5165\u72f1\u51e0\u4e2a\u6708\uff0c\u4f46\u6211\u4e0d\u6562\u76f8\u4fe1\u4ed6\u771f\u7684\u9762\u4e34\u7740\u4e00\u4e9b\u7c7b\u4f3c\u7684\u6307\u63a7\uff0c\u5c31\u50cf\u4ed6\u5728\u4e4c\u514b\u5170\u4e0a\u7a7a\u51fb\u843d\u4e86\u9a6c\u6765\u897f\u4e9a\u822a\u7a7a\u516c\u53f8\u7684\u98de\u673a\u4e00\u6837\uff1f\n\u8fd9\u662f\u540c\u4e00\u6761\u6cd5\u5f8b\u3002\u7f8e\u56fd\u8054\u90a6\u6cd5\u5f8b\u89c4\u5b9a\uff0c\u5411\u98de\u673a\u5c04\u51fb\u662f\u975e\u6cd5\u7684\uff0c\u65e0\u8bba\u98de\u673a\u662f\u6709\u4eba\u9a7e\u9a76\u8fd8\u662f\u65e0\u4eba\u9a7e\u9a76\u3002\u5982\u679c\u4f60\u77e5\u9053\u98de\u673a\u662f\u65e0\u4eba\u9a7e\u9a76\u7684\uff0c\u8fd9\u5c06\u662f\u91cf\u5211\u7684\u4e00\u4e2a\u56e0\u7d20\uff0c\u4e3b\u5f20\u6bd4\u5411\u6709\u4eba\u9a7e\u9a76\u98de\u673a\u5c04\u51fb\u7684\u4eba\u8f7b\u5224\u3002\u4f46\u662f\uff0c\u65e2\u7136\u4e00\u6761\u6cd5\u5f8b\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f60\u4e3a\u4ec0\u4e48\u9700\u8981\u4e24\u6761\u4e0d\u540c\u7684\u6cd5\u5f8b\u5462\uff1f\n\u5df4\u7279\u83f2\u5c14\u5fb7\u98df\u54c1\u516c\u53f8(Butterfield Foods)\u662f\u660e\u5c3c\u82cf\u8fbe\u5dde\u5357\u90e8\u5df4\u7279\u83f2\u5c14\u5fb7\u5c0f\u9547\u7684\u4e00\u5bb6\u8089\u5236\u54c1\u751f\u4ea7\u5546\uff0c\u5176\u4e2d\u5305\u62ec\u9e21\u8089\u3002\u8fd9\u540d\u7537\u5b50\u540e\u6765\u544a\u8bc9\u4e00\u540d\u8b66\u957f\u526f\u624b\uff0c\u4ed6\u8bd5\u56fe\u8bc1\u660e\u9e21\u662f\u56e0\u4e3a\u5927\u6d41\u884c\u800c\u88ab\u5bb0\u6740\u7684\u3002\u6211\u60f3\u4ed6\u4eec\u6bcf\u5929\u90fd\u5728\u90a3\u91cc\u5bb0\u6740\u9e21\uff0c\u4e0d\u7ba1\u6709\u6ca1\u6709\u5927\u6d41\u884c\u3002\u8fd9\u4f4d\u65e0\u4eba\u673a\u64cd\u4f5c\u5458\u5230\u5e95\u60f3\u8bc1\u660e\u4ec0\u4e48\uff1f\n\u6211\u6000\u7591\u8fd9\u5b9e\u9645\u4e0a\u4e0e\u51a0\u72b6\u75c5\u6bd2\u5bfc\u81f4\u5927\u91cf\u5bb6\u755c\u88ab\u6251\u6740\u7684\u62a5\u9053\u6709\u5173\u3002\u5f53\u8089\u7c7b\u52a0\u5de5\u5382\u4e25\u91cd\u7f3a\u4e4f\u5de5\u4eba\u65f6\uff0c\u4ed6\u4eec\u65e0\u6cd5\u7ba1\u7406\u4ed6\u4eec\u62e5\u6709\u7684\u7272\u755c\u6570\u91cf\uff0c\u6709\u51e0\u5bb6\u5df2\u7ecf\u5f00\u59cb\u5927\u89c4\u6a21\u5c60\u5bb0\uff0c\u5e76\u5c06\u8eab\u4f53\u503e\u5012\u5728\u96c6\u4f53\u7272\u755c\u575f\u5893\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6d6a\u8d39\uff0c\u56e0\u4e3a\u4e25\u9177\u7684\u8003\u9a8c\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u98df\u7269\u3002\u9e21\u901a\u5e38\u5728\u5ba4\u5185\u5c60\u5bb0\u548c\u52a0\u5de5\u3002\u4ed6\u53ef\u80fd\u662f\u60f3\u62cd\u4e0b\u4e00\u5806\u5806\u88ab\u503e\u5012\u7684\u9e21\u5c38\u7684\u7167\u7247\uff0c\u4ee5\u5c55\u793a\u8fd9\u4e9b\u5927\u89c4\u6a21\u6251\u6740\u4ea7\u751f\u7684\u5e9f\u7269\u3002", "note_en": "A Minnesota man is facing two felony charges for shooting down a drone,  The Free Press reports.\n The incident began when an unnamed man flew a drone over Butterfield Foods, a producer of meat products\u2014including chicken\u2014in the Southern Minnesota town of Butterfield. The man later told a sheriff&#39;s deputy he was trying to prove that chickens were being slaughtered because of the pandemic.\n Two employees approached the man and asked him what he was doing. Soon afterward, someone else shot the drone out of the sky.\u00a0The man says his drone cost $1,900.\n The authorities arrested 34-year-old\u00a0Travis Duane Winters and charged him in Watonwan County District Court, The Free Press says. Officials say Winters admitted to shooting the drone. He faces charges of\u00a0criminal damage to property and reckless discharge of a weapon within city limits.\n This is not the first time someone has shot down a drone. We  reported on several such shootings in 2016 and 2017. In one case, a man sued a neighbor who shot his drone when it flew over the neighbor&#39;s land. A federal judge  dismissed that lawsuit\u00a0on procedural grounds, finding that it should have been filed in state, not federal, courts.\n The Federal Aviation Administration has said that shooting down a drone is illegal under the same federal aviation laws that make it illegal to shoot down a crewed aircraft. But we don&#39;t know of any cases of people being prosecuted under those laws.\n  The same law for shooting down a small photography drone applies as if you shoot down a manned aircraft? Did I read that right? If so that\u2019s... insane. I mean this guy should probably get a reprimand or do a few months in jail for discharging a firearm in the city (depending on exact circumstances) but I can\u2019t believe he actually faces some similar charges as if he shot down the Malaysian Airlines plane over Ukraine?\n It\u2019s the same law. There\u2019s a US federal law saying that shooting at aircraft is illegal, whether the aircraft is manned or unmanned.   If you knew the aircraft was unmanned, that would be a factor in sentencing, arguing for a lesser sentence than someone who shoots at a manned aircraft. But why would you need two separate laws when one will do?\n  Butterfield Foods, a producer of meat products\u2014including chicken\u2014in the Southern Minnesota town of Butterfield. The man later told a sheriff&#39;s deputy he was trying to prove that chickens were being slaughtered because of the pandemic  I&#39;d imagine they slaughter chicken there everyday, pandemic or no pandemic. What did this drone operator really try to prove?\n I suspect this actually has to do with reports of mass culling of livestock due to COVID-19. When meat processing plants get severely short on workers, they can\u2019t manage the volumes of livestock they have, and several have begun mass slaughtering and dumping bodies into mass livestock graves. It\u2019s an enormous waste, since there\u2019s not any food being produced from the ordeal.   Chickens are normally slaughtered and processed indoors. He was probably trying to get pictures of piles of dumped chicken carcasses, to show the waste from these mass cullings.", "posttime": "2020-05-19 00:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51fb\u843d,shoots,\u65e0\u4eba\u673a", "title": "\u660e\u5c3c\u82cf\u8fbe\u5dde\u4e00\u540d\u7537\u5b50\u51fb\u843d\u65e0\u4eba\u673a\uff0c\u88ab\u63a7\u91cd\u7f6a", "title_en": "Man shoots down drone, gets hit with felony charges in Minnesota", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/05/minnesota-man-faces-felony-charges-for-shooting-down-drone/", "via": "", "real_tags": ["\u51fb\u843d", "shoots", "\u65e0\u4eba\u673a"]}, {"category": "", "categoryclass": "", "imagename": "5c2b2a91b9b796da2e4246070223781d.jpg", "infoid": 1002655, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6e21\u8f6e\u4e0a\u6709\u4e2a\u7537\u4eba\u3002\u4ed6\u7a7f\u7740\u725b\u4ed4\u88e4\u548c\u68d2\u7403\u5939\u514b\uff0c\u7ad9\u5728\u8239\u5c3e\uff0c\u82f1\u4fca\u7684\u8138\u4e0a\u6ee1\u662f\u7c89\u523a\u75a4\u75d5\u3002\u5176\u4ed6\u4eba\u90fd\u5728\u5173\u6ce8\u66fc\u54c8\u987f\u3002\u90a3\u662f1986\u5e74\uff1a\u53cc\u5b50\u5854\u4e3b\u5bb0\u4e86\u666f\u8272\u3002\u4f46\u662f\u8fd9\u4e2a\u4eba\u6ca1\u6709\u770b\u90a3\u4e9b\u5efa\u7b51\u3002\u4ed6\u51dd\u89c6\u7740\u6eda\u6eda\u7684\u6c34\uff0c\u6f6e\u6c50\u7684\u6c47\u6d41\uff0c\u4e1c\u6cb3\u548c\u54c8\u5fb7\u900a\u6cb3\u5728\u57ce\u5e02\u7684\u6e2f\u53e3\u6c47\u5408\u5728\u4e00\u8d77\u3002\n\u5728\u8fd9\u91cc\uff0c\u4e00\u5207\u90fd\u5f88\u5e7f\u9614\u3002\u5728\u8fd9\u91cc\uff0c\u4e00\u5207\u90fd\u4f1a\u6d88\u5931\u3002\u4ed6\u628a\u968f\u8eab\u542c\u653e\u5728\u53e3\u888b\u91cc\uff0c\u8033\u6735\u4e0a\u6234\u7740\u8033\u673a\u3002\u4ed6\u6b63\u5728\u542c\u7684\u97f3\u4e50\u662f\u4ed6\u6628\u665a\u5f88\u665a\u624d\u5531\u5b8c\u7684\u6df7\u97f3\u3002\u5f53\u4ed6\u505a\u5b8c--\u5c3d\u7ba1\u4ed6\u4ece\u6765\u6ca1\u6709\u505a\u8fc7\u4efb\u4f55\u4e8b\u60c5\uff0c\u786e\u5207\u5730\u8bf4--\u4ed6\u62ff\u8d77\u78c1\u5e26\u79bb\u5f00\u4e86\u5f55\u97f3\u68da\u3002\u5f53\u7136\u662f\u6ee1\u6708\u4e86\u3002\u4e09\u5e74\u6765\uff0c\u4ed6\u6bcf\u9022\u6ee1\u6708\u90fd\u4f1a\u5f55\u5236\u8fd9\u5f20\u4e13\u8f91\u3002\u6709\u65f6\u4ed6\u8737\u7f29\u5728\u6f14\u64ad\u5ba4\u91cc\u6253\u76f9\uff0c\u51cc\u6668\u9192\u6765\u65f6\u6709\u4e00\u4e2a\u65b0\u60f3\u6cd5\uff0c\u4e00\u4e2a\u524d\u6240\u672a\u6709\u7684\u58f0\u97f3\u5728\u4ed6\u7684\u8111\u6d77\u4e2d\u6d8c\u73b0\u3002\n\u4ed6\u53eb\u4e9a\u745f\u00b7\u62c9\u585e\u5c14\u3002\u4ed6\u4e09\u5341\u4e94\u5c81\u3002\u4ed6\u662f\u540c\u6027\u604b\uff0c\u4f5b\u6559\u5f92\uff0c\u5927\u63d0\u7434\u5bb6\uff0c\u4e61\u6751\u6b4c\u624b\uff0c\u524d\u536b\u4f5c\u66f2\u5bb6\uff0c\u8fea\u65af\u79d1\u5973\u738b\uff1b\u4ed6\u662f\u4f60\u4ece\u672a\u542c\u8bf4\u8fc7\u7684\u6700\u4f1f\u5927\u7684\u97f3\u4e50\u5bb6\u3002\u4ed6\u4e00\u76f4\u5728\u505a\u7684\u97f3\u4e50\u542c\u8d77\u6765\u4e0d\u50cf\u4ee5\u524d\u505a\u8fc7\u7684\u4efb\u4f55\u97f3\u4e50\u3002\u5b83\u5c31\u50cf\u6765\u81ea\u6d77\u5e95\u7684\u97f3\u4e50\uff0c\u5c31\u50cf\u4ed6\u4eec\u5728\u6708\u7403\u4e0a\u7684\u591c\u603b\u4f1a\u6f14\u594f\u7684\u97f3\u4e50\u3002\u4ed6\u6b63\u5728\u5236\u4f5c\u7684\u4e13\u8f91\uff0c\u4e5f\u662f\u4ed6\u7684\u7b2c\u4e00\u5f20\u4e13\u8f91\uff0c\u540d\u4e3a\u201c\u56de\u58f0\u4e16\u754c\u201d(World Of Echo)\u3002\u53ea\u6709\u4ed6\u7684\u58f0\u97f3\u548c\u5927\u63d0\u7434\uff0c\u5728\u5e9f\u5f03\u7684\u91d1\u878d\u533a\u7684\u4e00\u4e2a\u5de5\u4f5c\u5ba4\u91cc\uff0c\u5468\u56f4\u662f\u7a7a\u8361\u8361\u7684\u3001\u53d1\u5149\u7684\u529e\u516c\u5ba4\u3002\u4e00\u4e2a\u4eba\u628a\u97f3\u4e50\u63a8\u5411\u4e86\u6781\u9650\uff0c\u627e\u5230\u4e86\u7a81\u7834\u70b9\uff0c\u5236\u4f5c\u51fa\u53ef\u4ee5\u60f3\u8c61\u5230\u7684\u6700\u7f8e\u7684\u6b4c\u66f2\uff0c\u7136\u540e\u50cf\u592a\u5983\u7cd6\u4e00\u6837\u5c06\u5b83\u4eec\u620f\u5f04\u5f97\u56db\u5206\u4e94\u88c2\uff0c\u653e\u5927\u548c\u626d\u66f2\uff0c\u76f4\u5230\u5b83\u4eec\u6d88\u5931\u5728\u58f0\u97f3\u7684\u6e56\u6cca\u4e2d\u3002\n\u5728\u5c55\u4f4d\u4e0a\uff0c\u4ed6\u7d27\u5f20\u5730\u542c\u7740\uff0c\u80a9\u8180\u7a0d\u5fae\u52a8\u4e86\u4e00\u4e0b\uff0c\u5f53\u573a\u8df3\u821e\u3002\u54ea\u4e2a\u6700\u597d\uff1f\u5f53\u5927\u63d0\u7434\u88ab\u626d\u66f2\uff0c\u50cf\u7535\u5409\u4ed6\u4e00\u6837\u53cd\u9988\u65f6\uff0c\u5b83\u7684\u58f0\u97f3\u4f1a\u662f\u600e\u6837\u7684\uff1f\u4ed6\u5982\u4f55\u5de7\u5999\u5730\u97a0\u8eac\uff0c\u53d1\u51fa\u58f0\u97f3\u7684\u6726\u80e7\u9762\u7eb1\uff1f\u5982\u679c\u4f60\u80fd\u542c\u5230\u4ed6\u5531\u7684\u6b4c\u8bcd\uff0c\u6216\u8005\u6839\u672c\u542c\u4e0d\u61c2\u8bed\u8a00\uff0c\u53ea\u6709\u591a\u97f3\u8282\u7684\u558b\u558b\u4e0d\u4f11\uff0c\u97f3\u4e50\u4ece\u4ed6\u8eab\u4e0a\u503e\u6cfb\u800c\u51fa\uff0c\u4f60\u4f1a\u89c9\u5f97\u66f4\u597d\u5417\uff1f\n\u51cc\u66682\u70b9\u30013\u70b9\u62164\u70b9\uff0c\u4ed6\u4f1a\u505c\u4e0b\u6765\uff0c\u628a\u591c\u91cc\u7684\u78c1\u5e26\u653e\u8fdb\u53bb\uff0c\u4e00\u8fb9\u5728\u6c89\u7761\u7684\u57ce\u5e02\u91cc\u5f98\u5f8a\uff0c\u4e00\u8fb9\u53cd\u590d\u542c\u3002\u6709\u65f6\u4ed6\u4f1a\u8d70\u4e0a\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5728\u82cf\u8c6a\u533a\u7684\u8857\u9053\u4e0a\u6f2b\u6b65\uff0c\u6216\u8005\u6cbf\u7740\u6cb3\u5411\u5317\u8d70\u3002\u4e5f\u8bb8\u4ed6\u4f1a\u5728Gem Spa\u505c\u4e0b\u6765\u4e70\u4e2a\u9e21\u86cb\u5976\u6cb9\uff1b\u4e5f\u8bb8\u4ed6\u4f1a\u53bb\u5929\u5802\u4f11\u606f\u5ba4\u6216\u8f66\u5e93\uff0c\u5728\u90a3\u91cc\uff0c\u6f02\u4eae\u7684\u7537\u5b69\u4eec\u4e00\u8d77\u8df3\u821e\uff0c\u9ed1\u767d\u76f8\u95f4\uff0c\u6c57\u6d41\u6d43\u80cc\uff0c\u6b23\u559c\u82e5\u72c2\u3002\n\u4e0d\u8fc7\uff0c\u6700\u8fd1\u4e9a\u745f\u5df2\u7ecf\u5bf9\u591c\u751f\u6d3b\u5931\u53bb\u4e86\u5174\u8da3\uff1b\u6700\u8fd1\u4ed6\u611f\u5230\u75b2\u60eb\u4e0d\u582a\u3002\u56e0\u6b64\uff0c\u4eca\u665a\u4ed6\u53d1\u73b0\u81ea\u5df1\u5728\u9ece\u660e\u65f6\u5206\u5750\u5728\u6e21\u8f6e\u4e0a\uff0c\u51dd\u89c6\u7740\u5916\u9762\u7684\u6c34\u9762\uff0c\u559c\u6b22\u6e21\u8f6e\u5f15\u64ce\u4f4e\u6c89\u7684\u55e1\u55e1\u58f0\u4e2d\u7684\u97f3\u4e50\u3002\n\u4ed6\u4e0d\u662f\u4ece\u8fd9\u91cc\u6765\u7684\u3002\u4ed6\u662f\u4e00\u4e2a\u519c\u573a\u7537\u5b69\uff0c\u4e00\u4e2a\u6765\u81ea\u7231\u8377\u534e\u5dde\u7389\u7c73\u5730\u7684\u96be\u6c11\uff0c\u5728\u5927\u57ce\u5e02\u91cc\u5bfb\u627e\u8d22\u5bcc\u3002\u4ed6\u4ece\u6765\u4e0d\u89c9\u5f97\u81ea\u5df1\u4e0e\u5965\u65af\u5361\u5362\u8428\u683c\u683c\u4e0d\u5165\uff0c18\u5c81\u90a3\u5e74\uff0c\u4ed6\u79bb\u5bb6\u51fa\u8d70\u4e86\u3002\u4ed6\u88ab\u51b2\u8fdb\u65e7\u91d1\u5c71\u7684\u4e00\u4e2a\u4f5b\u6559\u516c\u793e\uff0c\u5728\u90a3\u91cc\u4ed6\u88ab\u7981\u6b62\u62c9\u5927\u63d0\u7434\uff0c\u6240\u4ee5\u4ed6\u8eb2\u5728\u4e00\u4e2a\u5c0f\u58c1\u6a71\u91cc\u7ec3\u4e60\u4e86\u51e0\u4e2a\u5c0f\u65f6\u30021973\u5e74\uff0c22\u5c81\u7684\u4ed6\u642c\u5230\u4e86\u66fc\u54c8\u987f\uff0c\u5728\u8bd7\u4eba\u5927\u53a6(Poets Building)\u627e\u5230\u4e86\u4e00\u5957\u516c\u5bd3\uff0c\u8fd9\u662f\u4e1c\u6751\u4e00\u680b\u7834\u65e7\u7684\u65e0\u7535\u68af\u516c\u5bd3\u697c\uff0c\u662f\u8bd7\u4eba\u548c\u53cd\u4e3b\u6d41\u6587\u5316\u4f20\u5947\u4eba\u7269\u827e\u4f26\u00b7\u91d1\u65af\u4f2f\u683c(Allen Ginsberg)\u7684\u5bb6\uff0c\u4ed6\u9f13\u52b1\u4ed6\u51fa\u67dc\u4e3a\u540c\u6027\u604b\u3002\n\u8239\u5c3e\u662f\u767d\u8272\u7684\u3002\u4e9a\u745f\u659c\u9760\u5728\u680f\u6746\u4e0a\uff0c\u68a6\u60f3\u7740\u81ea\u5df1\u7684\u672a\u6765\u3002\u4ed6\u60f3\u8981\u7684\u662f\u6210\u4e3a\u4e00\u540d\u6d41\u884c\u6b4c\u661f\uff0c\u5c3d\u7ba1\u4ed6\u53d7\u5230\u5bb3\u7f9e\u3001\u7f3a\u94b1\u3001\u5b8c\u7f8e\u4e3b\u4e49\u548c\u62d2\u7edd\u5728\u4ed6\u7684\u613f\u666f\u7684\u4efb\u4f55\u65b9\u9762\u59a5\u534f\u7684\u963b\u788d\u3002\u5927\u591a\u6570\u97f3\u4e50\u5bb6\u53ea\u4e13\u6ce8\u4e8e\u4e00\u4e2a\u573a\u666f\uff0c\u4f46\u4e9a\u745f\u4e00\u76f4\u662f\u4e2a\u6d41\u6d6a\u6c49\u3002\u4ed6\u662f\u4e2a\u4e0d\u5b89\u5206\u7684\u4eba\uff0c\u7231\u6253\u542c\u57ce\u91cc\u6240\u6709\u5236\u9020\u97f3\u4e50\u7684\u5730\u65b9\u3002\u8fb9\u754c\u548c\u8fb9\u754c\u5bf9\u4ed6\u6765\u8bf4\u6beb\u65e0\u610f\u4e49\uff0c\u4ed6\u8f7b\u677e\u5730\u8de8\u8fc7\u4e86\u5b83\u4eec\u3002\n\u5728\u4ed6\u5230\u8fbe\u7ebd\u7ea6\u7684\u4e00\u5e74\u5185\uff0c\u4ed6\u88ab\u4efb\u547d\u4e3a\u53a8\u623f\u7684\u97f3\u4e50\u603b\u76d1\uff0c\u53a8\u623f\u662f\u8fd9\u4e2a\u57ce\u5e02\u5b9e\u9a8c\u97f3\u4e50\u548c\u8868\u6f14\u573a\u666f\u7684\u6838\u5fc3\u573a\u6240\u3002\u4ed6\u4e0e\u83f2\u5229\u666e\u00b7\u683c\u62c9\u65af(Philip Glass)\u548c\u53f2\u8482\u592b\u00b7\u8d56\u514b(Steve Reich)\u7b49\u6781\u7b80\u4e3b\u4e49\u4f5c\u66f2\u5bb6\u5408\u4f5c\uff0c\u540c\u65f6\u6f14\u594f\u80ae\u810f\u7684\u5e02\u4e2d\u5fc3\u6447\u6eda\u4e50\uff0c\u8dd1\u5230CBGB\u4e0eTalking Heads\u4e00\u8d77\u6f14\u594f\u5927\u63d0\u7434\u3002\u4efb\u4f55\u97f3\u4e50\u90fd\u53ef\u80fd\u662f\u5b9e\u9a8c\u97f3\u4e50\uff0c\u4efb\u4f55\u97f3\u4e50\u90fd\u53ef\u80fd\u88ab\u63a8\u5230\u6781\u9650\u3002\n\u7136\u540e\u4ed6\u53d1\u73b0\u4e86\u8fea\u65af\u79d1\u8fd9\u4e2a\u4eab\u4e50\u4e3b\u4e49\u7684\u3001\u6027\u6b32\u65fa\u76db\u7684\u4e16\u754c\u3002\u6574\u4e2a\u5e02\u4e2d\u5fc3\uff0c\u591c\u603b\u4f1a\u90fd\u5728\u6fc0\u589e\uff1a\u5728\u90a3\u91cc\uff0c\u4f60\u53ef\u4ee5\u548c\u4e00\u5343\u4e2a\u964c\u751f\u4eba\u4e00\u8d77\u6c57\u6d41\u6d43\u80cc\uff0c\u5728\u591c\u95f4\u8282\u594f\u7684\u4e16\u754c\u91cc\u653e\u5f03\u7981\u5fcc\u3002\u5f88\u5feb\uff0c\u4ed6\u5f00\u59cb\u4ee5\u591a\u4e2a\u5316\u540d\u53d1\u884c\u821e\u8e48\u5531\u7247\u3002\u6050\u9f99L\uff0c\u5173\u8282\u677e\u52a8\uff0c\u56e0\u4ed6\u5bb6\u9644\u8fd1\u516c\u56ed\u91cc\u7684\u6bd2\u8d29\u4e0d\u65ad\u54ed\u558a\u800c\u5f97\u540d\u3002\u5370\u5ea6\u6d0b\uff0c\u6740\u4eba\u9cb8\uff1a\u53e6\u4e00\u4e2a\u81ea\u6211\u7684\u540d\u5b57\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u53e6\u4e00\u4e2a\u89c6\u91ce\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u968f\u7740\u8fd9\u4e9b\u5531\u7247\u8df3\u821e\uff0c\u4f46\u5b83\u4eec\u672c\u8eab\u4e5f\u662f\u6781\u7b80\u4e3b\u4e49\u7684\u5b9e\u9a8c\u6027\u5192\u9669\uff1a\u7a7a\u65f7\u3001\u7b28\u62d9\u3001\u5947\u602a\u7684\u65e0\u7ed3\u6784\u51f9\u69fd\uff0c\u60c5\u7eea\u4ece\u9ad8\u8f9b\u70f7\u503c\u3001\u6325\u821e\u62f3\u5934\u7684\u72c2\u559c\u8f6c\u53d8\u4e3a\u66f4\u5b69\u5b50\u6c14\u3001\u66f4\u5929\u771f\u7684\u611f\u5b98\u3002\n\u5728\u6c34\u58f0\u4e2d\u542c\u7740\u201c\u56de\u58f0\u4e16\u754c\u201d\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u662f\u4ed6\u505a\u8fc7\u7684\u6700\u5b8c\u6574\u7684\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u628a\u65b0\u4e8b\u7269\u5e26\u5230\u8fd9\u4e2a\u4e16\u754c\u4e0a\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u3002\u8fd9\u5f20\u4e13\u8f91\u5c06\u4e8e\u5f53\u5e74\u665a\u4e9b\u65f6\u5019\u53d1\u884c\uff0c\u5c3d\u7ba1\u65e9\u671f\u7684\u8bc4\u8bba\u662f\u79ef\u6781\u7684\uff0c\u4f46\u9500\u91cf\u4ee4\u4eba\u9707\u60ca\u3002\u672a\u6765\u7684\u97f3\u4e50\u8fd8\u6ca1\u6709\u5e02\u573a\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u3002\n\u4e9a\u745f\u00b7\u7f57\u7d20\u7684\u97f3\u4e50\u6700\u795e\u5947\u7684\u5730\u65b9\u4e4b\u4e00\u5c31\u662f\u5b83\u4f20\u8fbe\u60c5\u611f\u7684\u65b9\u5f0f\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u4e0d\u6613\u7528\u8bed\u8a00\u8868\u8fbe\u7684\u60c5\u611f\u3002\u5bf9\u4ed6\u6765\u8bf4\uff0c\u97f3\u4e50\u662f\u4e00\u4e2a\u907f\u96be\u6240\uff0c\u4e00\u4e2a\u907f\u98ce\u6e2f\uff1a\u4e00\u4e2a\u4ed6\u53ef\u4ee5\u822a\u884c\uff0c\u751a\u81f3\u6d88\u5931\u7684\u65e0\u9650\u5883\u754c\u3002\u4ed6\u5e0c\u671b\u8fd9\u80fd\u7ed9\u4ed6\u5e26\u6765\u540d\u58f0\uff0c\u63d0\u9ad8\u77e5\u540d\u5ea6\uff0c\u4f46\u4ed6\u4e5f\u559c\u6b22\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u4ed6\u53ef\u4ee5\u6e38\u8fdb\u91cc\u9762\uff0c\u6682\u65f6\u4ece\u4e16\u754c\u4e0a\u6d88\u5931\u3002\n\u52a0\u901f\u4e86\u8fd9\u4e00\u8d8b\u52bf\uff0c\u4f7f\u5176\u53d8\u5f97\u6076\u6027\u3002\u4ed6\u5929\u751f\u7684\u5bbd\u655e\u53d8\u5f97\u6df7\u4e71\uff0c\u800c\u4ed6\u6d41\u6d6a\u7684\u80fd\u529b\u8ba9\u4f4d\u4e8e\u4e00\u79cd\u5371\u9669\u7684\u8ff7\u5931\u503e\u5411\u3002\u8fd9\u79cd\u75c5\u6bd2\u4f7f\u4ed6\u8eab\u8d25\u540d\u88c2\uff0c\u4fb5\u8680\u4e86\u4ed6\u7684\u514d\u75ab\u7cfb\u7edf\u3002\u7ed3\u5c40\u6765\u5f97\u5f88\u5feb\uff1a1992\u5e744\u67084\u65e5\uff0c\u5728\u7ebd\u7ea6\u4e0a\u7a7a\u7684\u4e00\u5f20\u75c5\u5e8a\u4e0a\u3002\n\u4f60\u5982\u4f55\u5b9a\u4e49\u6210\u529f\uff1f\u4e9a\u745f\u00b7\u62c9\u585e\u5c14\u53bb\u4e16\u65f6\u53ea\u670940\u5c81\uff0c\u8eab\u65e0\u5206\u6587\uff0c\u51e0\u9996\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u5355\u66f2\u548c\u4e00\u5f20\u4ee5\u4ed6\u7684\u540d\u5b57\u547d\u540d\u7684\u4e13\u8f91\u3002\u4f46\u4ed6\u7559\u4e0b\u4e86\u6570\u5343\u5c0f\u65f6\u672a\u51fa\u7248\u7684\u97f3\u4e50\uff0c\u6210\u767e\u4e0a\u5343\u9996\u6b4c\u66f2\u3002\u5728\u4ed6\u7f3a\u5e2d\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u6162\u6162\u5730\u5411\u4e16\u754c\u53d1\u5e03\uff0c\u83b7\u5f97\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u8d5e\u8d4f\u548c\u8d5e\u8a89\u3002\u73b0\u5728\u542c\u7740\uff0c\u5f88\u660e\u663e\uff0c\u6e21\u8239\u4e0a\u90a3\u4e2a\u5b89\u9759\u7684\u4eba\uff0c\u968f\u7740\u53ea\u6709\u4ed6\u80fd\u542c\u5230\u7684\u58f0\u97f3\u9759\u9759\u5730\u8df3\u821e\uff0c\u53ef\u80fd\u662f20\u4e16\u7eaa\u4f5c\u66f2\u4e2d\u6700\u597d\u3001\u6700\u5947\u602a\u7684\u5929\u624d\u4e4b\u4e00\uff0c\u4ed6\u662f\u4e00\u4e2a\u7edd\u5bf9\u81f4\u529b\u4e8e\u81ea\u7531\u7684\u6e38\u7267\u6c11\u65cf\uff0c\u4ed6\u7684\u81ea\u7136\u5143\u7d20\u5c31\u662f\u97f3\u4e50\u672c\u8eab\u3002\n\u201c\u90a3\u5c31\u662f\u6211\u4eec\uff0c\u201d\u4e9a\u745f\u66fe\u7ecf\u5531\u9053\uff0c\u201c\u5728\u6211\u4eec\u5230\u8fbe\u90a3\u91cc\u4e4b\u524d\u3002\u201d\u4ed6\u5728\u8bb2\u4e00\u4e2a\u5c0f\u65f6\u5019\u7684\u6545\u4e8b\uff0c\u9ece\u660e\u524d\u5f00\u8f66\u53bb\u6e56\u8fb9\u6e38\u6cf3\u3002\u7136\u540e\u8282\u62cd\u54cd\u8d77\uff0c\u73b0\u5728\u4ed6\u5531\u7684\u662f\u7231\uff0c\u6216\u8005\u53ef\u80fd\u53ea\u662f\u5728\u590f\u5929\u7684\u65e9\u6668\u9192\u7740\u7684\u611f\u89c9\u3002\u7684\u786e\uff0c\u8fd9\u662f\u4e00\u79cd\u75af\u72c2\u7684\u7ec4\u5408\uff0c\u4ed6\u4e5f\u662f\uff1a7\u67084\u65e5\u7684\u70df\u82b1\uff0c\u6240\u6709\u7684\u4e00\u5207\u90fd\u5728\u4e00\u77ac\u95f4\uff0c\u5728\u4f60\u8fd8\u6ca1\u6765\u5f97\u53ca\u9886\u4f1a\u4f60\u6240\u770b\u5230\u7684\u4e4b\u524d\u5c31\u6d88\u5931\u4e86\u3002\n\u5965\u5229\u7ef4\u4e9a\u00b7\u83b1\u56e0(Olivia Laing)\u83b7\u5f972018\u5e74\u6e29\u5fb7\u59c6-\u574e\u8d1d\u5c14\u5956(Windham-Campbell Award)\u975e\u865a\u6784\u7c7b\u56fe\u4e66\uff0c\u5979\u4e4b\u524d\u8457\u6709\u4e09\u672c\u975e\u865a\u6784\u7c7b\u56fe\u4e66\uff0c\u5305\u62ec\u300a\u5b64\u72ec\u7684\u57ce\u5e02\u300b(The Lonely City)\u548c\u4e00\u672c\u5c0f\u8bf4\u300aCrudo\u300b\u3002\u5979\u7684\u4f5c\u54c1\u5df2\u88ab\u7ffb\u8bd1\u621015\u79cd\u8bed\u8a00\u3002\u5979\u4f4f\u5728\u82f1\u56fd\u4f26\u6566\u3002\n\u8282\u9009\u81ea\u201c\u6ed1\u7a3d\u5929\u6c14\uff1a\u7d27\u6025\u60c5\u51b5\u4e0b\u7684\u827a\u672f\u201d\u00a92020\uff0c\u4f5c\u8005\uff1aOlivia Laing\u3002\u7ecf\u51fa\u7248\u5546W.\u2009W.Norton&amp\uff1bCompany\uff0cInc.\u8bb8\u53ef\u4f7f\u7528\u3002\u7248\u6743\u6240\u6709\u3002", "note_en": "There\u2019s a man on the ferry. He\u2019s wearing jeans and a baseball jacket, and standing at the stern, his handsome face pitted with acne scars. Everyone else is looking at Manhattan. It\u2019s 1986: the twin towers dominate the view. But this man isn\u2019t looking at the buildings. He\u2019s staring at the swirling water, the confluence of tides, the East River and the Hudson coming together in the harbor of the city.\n Out here, everything is expansive. Out here, everything falls away. He has his Walkman in his pocket, his headphones around his ears. The music he\u2019s listening to is a mix he finished late last night. When he was done\u2014though nothing he does is ever done, exactly\u2014he took the cassette and left the studio. Full moon, of course. He has been recording this album every full moon for three years now. Sometimes he curls up in the studio for a nap, waking in the small hours with a new idea, an unprecedented sound bubbling through his mind.\n His name is Arthur Russell. He\u2019s thirty-five. He\u2019s a gay man, a Buddhist, a cellist, a country singer, an avant-garde composer, a disco queen; he is the greatest musician you\u2019ve never heard of. The music he\u2019s been making doesn\u2019t sound like any music that\u2019s ever been made before. It\u2019s like music from the bottom of the ocean, it\u2019s like music they play in nightclubs on the moon. The album he\u2019s working on, his first, is called  World of Echo. Just his voice and his cello, in a studio in the deserted Financial District, surrounded by empty, glowing offices. One man pushing music to its limits, finding the breaking points, making the most beautiful songs imaginable and then teasing them apart like taffy, amplifying and distorting until they dissolve into lakes of sound.\n In the booth, he listens tensely, moving his shoulders a little, dancing on the spot. Which is best? How does the cello sound when it\u2019s distorted, feeding back like an electric guitar? How subtly can he bow, making gauzy veils of sound? Is it better when you can hear the words he\u2019s singing, or when there\u2019s no intelligible language at all, just a polysyllabic babble, the music pouring through him?\n At two or three or four in the morning he stops and slots in the night\u2019s tape, listening to it repeatedly as he prowls the sleeping city. Sometimes he\u2019ll walk for hours, wandering the streets of SoHo or following the river north. Maybe he\u2019ll stop at Gem Spa and buy an egg cream; maybe he\u2019ll call in at Paradise Lounge or the Garage, where the beautiful boys dance, black and white together, in an ecstatic sweaty fusion.\n  Lately, though, Arthur has been losing his taste for the nightlife; lately he\u2019s been feeling dog-tired. So tonight he finds himself on the ferry at dawn, gazing out at the water, loving how the music sounds over the low drone of the ferry\u2019s engine.\n He doesn\u2019t come from here. He\u2019s a farm boy, a refugee from the cornfields of Iowa, seeking his fortune in the big city. He never felt like he fitted in in Oskaloosa and at eighteen he ran away from home. He washed up in a Buddhist commune in San Francisco, where he was forbidden to play his cello and so hid in a tiny closet to practice for hours. In 1973, at the age of twenty-two, he made the move to Manhattan, finding an apartment in the Poets Building, a tatty East Village walk-up that was home to the poet and counterculture legend Allen Ginsberg, who encouraged him to come out as a gay man.\n The wake of the boat is white. Arthur leans on the rail, dreaming of his future. What he wants is to be a pop star, though he is hampered by his shyness, his lack of money, his perfectionism, and his refusal to compromise on any aspect of his vision. Most musicians stick to a single scene but Arthur has always been a rover. He\u2019s a restless soul, sticking his nose into all the different places in the city where music is made. Boundaries and borders mean nothing to him; he hurdles them with ease.\n Within a year of his arrival in New York, he was appointed musical director of the Kitchen, the venue at the heart of the city\u2019s experimental music and performance scene. He collaborated with minimalist composers like Philip Glass and Steve Reich, and at the same time he played dirty downtown rock \u2019n\u2019 roll, running out to CBGB to play cello with the Talking Heads. Any music could be experimental music; any music could be pushed to its limits.\n And then he discovered the hedonistic, libidinal world of disco. All across downtown, nightclubs were proliferating: wild spaces where you could sweat with a thousand strangers, relinquishing inhibitions in a nocturnal world of rhythm. Quickly, he began to release dance records, under multiple pseudonyms. Dinosaur L, Loose Joints, named for the constant cry from the dealers in the park by his house. Indian Ocean, Killer Whale: names for alternate selves, each with their own alternate vision. You could dance to these records, sure, but they were also experimental adventures in minimalism in their own right: spacey, dubby, weirdly unstructured grooves, shifting in mood from high-octane, fist-pumping ecstasy to a more childlike, innocent sensuality.\n Listening to  World of Echo over the sound of the water, he thinks it is the most complete thing he\u2019s ever done. But it\u2019s never easy to put something new into the world. The album is released later that year and though the early reviews are positive the sales are appalling. There is no market for the music of the future, not yet.\n  One of the most magical things about Arthur Russell\u2019s music is the way it conveys feelings, especially feelings that are not easily translated into words. For him, music is a place of refuge, a haven: an infinite realm into which he can voyage, even vanish. He hopes it might bring him fame, heightened visibility, but he also loves the way he can swim out into it, temporarily disappearing from the world.\n accelerates this tendency, turning it malignant. His natural spaciness becomes confusion, while his capacity for wandering gives way to a dangerous tendency to get lost. The virus lays waste to him, eroding his immune system. The end comes fast: April 4, 1992, in a hospital bed high above New York.\n How do you define success? Arthur Russell was only forty when he died, flat broke, a few obscure singles and one album to his name. But he left behind thousands of hours of unpublished music, hundreds upon hundreds of songs. In his absence, it has slowly been released into the world, to growing appreciation and acclaim. Listening to it now, it becomes apparent that the quiet man on the ferry, dancing silently to sounds that only he could hear, might have been one of the best and strangest talents of twentieth-century composition, a nomad with an absolute commitment to freedom, whose natural element was music itself.\n \u201cThat\u2019s us,\u201d Arthur once sang, \u201cbefore we got there.\u201d He\u2019s telling a story about being a kid, driving to the lake before dawn to swim. Then the beat kicks in, and now it\u2019s love he\u2019s singing about, or maybe just how it feels to be awake in the world on a summer morning. It\u2019s a wild combination all right, and so was he: a firework on the Fourth of July, everything all at once, in a flash, and gone before you could grasp what you\u2019d seen.\n  Winner of the 2018 Windham-Campbell Prize for nonfiction, Olivia Laing is the author of three previous books of nonfiction, including The Lonely City , and one novel, Crudo . Her work has been translated into fifteen languages. She lives in London, England.\n Excerpted from  Funny Weather: Art in an Emergency  \u00a9 2020 by Olivia Laing. Used with permission of the publisher, W.\u2009W. Norton &amp; Company, Inc. All rights reserved.", "posttime": "2020-05-19 00:42:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u5931,vanished,\u97f3\u4e50", "title": "\u6d88\u5931\u5728\u97f3\u4e50\u4e2d", "title_en": "Vanished into Music", "transed": 1, "url": "https://www.theparisreview.org/blog/2020/05/11/vanished-into-music/", "via": "", "real_tags": ["\u6d88\u5931", "vanished", "\u97f3\u4e50"]}, {"category": "", "categoryclass": "", "imagename": "db22b0edfa80d793b75f997b4889ef57.jpg", "infoid": 1002654, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7cbe\u795e\u75c5\u5b66\u5bb6\u827e\u7c73\u00b7\u4e9a\u5386\u5c71\u5927\uff0c\u533b\u5b66\u535a\u58eb\uff0c\u5728\u5979\u7684\u8bca\u6240\u91cc\u770b\u5230\u4e86\u4e00\u4e9b\u5987\u5973\uff0c\u5979\u4eec\u5728\u751f\u4e0b\u5b69\u5b50\u540e\u4e0e\u5fc3\u7406\u5065\u5eb7\u4f5c\u6597\u4e89\u3002\n\u4e0e\u4ea7\u540e\u5eb7\u590d\u76f8\u5173\u7684\u6311\u6218\uff0c\u5b66\u4f1a\u7167\u987e\u5a74\u513f\uff0c\u4ee5\u53ca\u7ba1\u7406\u611f\u67d3\u548c\u5176\u4ed6\u6bcd\u4e73\u5582\u517b\u5e76\u53d1\u75c7-\u6240\u6709\u8fd9\u4e9b\u90fd\u53ea\u9700\u8981\u5f88\u5c11\u7684\u7761\u7720-\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ee5\u524d\u5065\u5eb7\u7684\u5973\u6027\u60a3\u4e0a\u6291\u90c1\u75c7\uff0c\u751a\u81f3\u6709\u81ea\u6740\u7684\u5ff5\u5934\u3002\u6709\u7cbe\u795e\u5065\u5eb7\u95ee\u9898\u53f2\u7684\u5973\u6027\u9762\u4e34\u7740\u66f4\u9ad8\u7684\u4ea7\u540e\u6291\u90c1\u75c7\u98ce\u9669\u3002\n\u65af\u5766\u798f\u5927\u5b66\u533b\u5b66\u9662\u7cbe\u795e\u75c5\u5b66\u548c\u884c\u4e3a\u79d1\u5b66\u7684\u4e34\u5e8a\u52a9\u7406\u6559\u6388\u4e9a\u5386\u5c71\u5927\u8bf4\uff0c\u4ece\u7cbe\u795e\u75c5\u5b66\u4e0a\u8bb2\uff0c\u521a\u751f\u5b8c\u5b69\u5b50\u5c31\u662f\u4e00\u4e2a\u9ad8\u5371\u65f6\u671f\u3002\u6709\u60a3\u4ea7\u540e\u6291\u90c1\u75c7\u7684\u98ce\u9669\uff0c\u800c\u4e14\u8fd9\u4e5f\u662f\u4e00\u4e2a\u538b\u529b\u5f88\u5927\u7684\u65f6\u671f\u3002\n\u4e3a\u4e86\u5bfb\u627e\u66f4\u597d\u7684\u5e2e\u52a9\u65b9\u5f0f\uff0c\u4e9a\u5386\u5c71\u5927\u5728\u7f8e\u56fd\u7cbe\u795e\u75c5\u5b66\u534f\u4f1a\u7684\u4e00\u6b21\u4f1a\u8bae\u4e0a\u4e0e\u5176\u4ed6\u7cbe\u795e\u75c5\u5b66\u5bb6\u8ba8\u8bba\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\u4ed6\u4eec\u6307\u51fa\uff0c\u5728\u79c1\u8425\u884c\u4e1a\u53d7\u96c7\u7684\u7f8e\u56fd\u5de5\u4eba\u4e2d\uff0c\u53ea\u670916%\u7684\u4eba\u53ef\u4ee5\u901a\u8fc7\u5de5\u4f5c\u573a\u6240\u83b7\u5f97\u5e26\u85aa\u80b2\u513f\u5047\uff0c\u4ed6\u4eec\u7684\u7406\u8bba\u662f\uff0c\u7f8e\u56fd\u6240\u6709\u804c\u4e1a\u6bcd\u4eb212\u5468\u7684\u5e26\u85aa\u4ea7\u5047\u53ef\u4ee5\u6539\u5584\u8bb8\u591a\u5973\u6027\u7684\u5fc3\u7406\u548c\u8eab\u4f53\u5065\u5eb7\u3002\n\u4ed6\u4eec\u7684\u5047\u8bbe\u662f\uff1a\u5e26\u85aa\u4f11\u5047\u53ef\u4ee5\u8ba9\u5973\u6027\u7684\u8eab\u4f53\u6709\u65f6\u95f4\u7597\u4f24\uff0c\u5728\u672c\u5df2\u56f0\u96be\u7684\u65f6\u671f\u6d88\u9664\u5de5\u4f5c\u538b\u529b\uff0c\u5e76\u51cf\u8f7b\u65b0\u751f\u513f\u7684\u4e00\u4e9b\u7ecf\u6d4e\u538b\u529b\u3002\n\u4ed6\u4eec\u51b3\u5b9a\u8fdb\u884c\u8c03\u67e5\u3002\u7814\u7a76\u5c0f\u7ec4\u6c47\u7f16\u4e8626\u9879\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u6bd4\u8f83\u4e86\u6bcd\u4eb2\u4f11\u4e0d\u540c\u6570\u91cf\u7684\u5e26\u85aa\u6216\u65e0\u85aa\u4ea7\u5047\u540e\uff0c\u5987\u5973\u548c\u513f\u7ae5\u7684\u5404\u79cd\u5fc3\u7406\u548c\u8eab\u4f53\u5065\u5eb7\u7ed3\u679c\u3002\u4ed6\u4eec\u7684\u7814\u7a76\u53d1\u8868\u5728\u300a\u54c8\u4f5b\u7cbe\u795e\u75c5\u5b66\u8bc4\u8bba\u300b\u6742\u5fd7\u4e0a\u3002\n\u5728\u5176\u4ed6\u53d1\u73b0\u4e2d\uff0c\u4e9a\u5386\u5c71\u5927\u548c\u5979\u7684\u5408\u4f5c\u8005\u53d1\u73b0\uff0c\u8f83\u957f\u7684\u5e26\u85aa\u4ea7\u5047\u4e0e\u4ee5\u4e0b\u56e0\u7d20\u76f8\u5173\uff1a\n\u5bf9\u4e8e\u9009\u62e9\u6bcd\u4e73\u5582\u517b\u7684\u6bcd\u4eb2\u6765\u8bf4\uff0c\u6bcd\u4e73\u5582\u517b\u7387\u66f4\u9ad8\uff0c\u6bcd\u4e73\u5582\u517b\u6301\u7eed\u7684\u65f6\u95f4\u662f\u539f\u6765\u7684\u4e24\u500d\u3002\n\u6bcd\u4eb2\u6216\u5b69\u5b50\u5728\u7b2c\u4e00\u5e74\u56e0\u533b\u7597\u5e76\u53d1\u75c7\u8fd4\u56de\u533b\u9662\u7684\u53ef\u80fd\u6027\u8f83\u4f4e\u3002\n\u6839\u636e\u8fd9\u9879\u5206\u6790\uff0c\u66f4\u957f\u7684\u5e26\u85aa\u4ea7\u5047\u4e5f\u4e0e\u6bcd\u4eb2\u7684\u7ecf\u6d4e\u5229\u76ca\u76f8\u5173\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u793e\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u5728\u5b69\u5b50\u51fa\u751f\u540e\u7684\u4e00\u5e74\u91cc\uff0c\u4f11\u5e26\u85aa\u5047\u671f\u7684\u5987\u5973\u66f4\u6709\u53ef\u80fd\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\uff0c\u770b\u5230\u5de5\u8d44\u4e0a\u6da8\uff0c\u5979\u4eec\u66f4\u4e0d\u53ef\u80fd\u4f9d\u8d56\u516c\u5171\u63f4\u52a9\u548c\u98df\u54c1\u5238\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u4e00\u4e9b\u7814\u7a76\u663e\u793a\u4e86\u4e0d\u592a\u79ef\u6781\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\u9f13\u52b1\u96c7\u4e3b\u5bf9\u4ece\u4e8b\u4f4e\u85aa\u6216\u517c\u804c\u5de5\u4f5c\u7684\u80b2\u9f84\u5987\u5973\u5b58\u5728\u504f\u89c1\u3002\n\u6700\u7ec8\uff0c\u4e9a\u5386\u5c71\u5927\u548c\u5979\u7684\u5408\u8457\u8005\u8ba4\u4e3a\uff0c\u8f83\u957f\u7684\u5e26\u85aa\u5047\u671f\u7ed9\u4e86\u6bcd\u4eb2\u4e0e\u5b69\u5b50\u5efa\u7acb\u8054\u7cfb\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u5e76\u6ee1\u8db3\u4e86\u5979\u4eec\u81ea\u5df1\u7684\u5fc3\u7406\u548c\u8eab\u4f53\u5065\u5eb7\u9700\u6c42\u3002\n\u4e9a\u5386\u5c71\u5927\u8bf4\uff1a\u6211\u4eec\u7684\u8bc4\u4f30\u663e\u793a\uff0c\u6709\u5927\u91cf\u6570\u636e\u652f\u6301\u7f8e\u56fd\u5b9e\u884c12\u5468\u5168\u56fd\u5e26\u85aa\u4ea7\u5047\u653f\u7b56\u3002", "note_en": "Psychiatrist\u00a0 Amy Alexander, MD, sees a number of women at her practice who struggle with their mental health after they&#39;ve given birth.\n Challenges associated with healing from a birth, learning to care for an infant, and managing infections and other complications with breastfeeding -- all on very little sleep -- can cause formerly healthy women to develop depression or even thoughts of suicide. And women with a history of mental health problems face an even higher risk of postpartum depression.\n &#34;Right after having the baby is a high-risk period, psychiatrically,&#34; said Alexander, a clinical assistant professor of psychiatry and behavioral sciences at Stanford Medicine. &#34;There&#39;s a risk of  postpartum depression, and it&#39;s also just a really high-stress time.&#34;\n In search of a better way to help, Alexander discussed the issue with other psychiatrists at a meeting of the\u00a0 American Psychiatric Association. Noting that just 16% of American workers employed in private industry have  access to paid parental leave through their workplace, they theorized that 12 weeks of paid maternity leave for all working mothers in the United States could improve both the mental and physical health of many women.\n Their hypothesis: Paid leave could give women&#39;s bodies time to heal, remove work stress during an already difficult time and alleviate some of the financial pressures of a new baby.\n They decided to investigate. The team compiled results from 26 studies comparing various mental and physical health outcomes for women and children, after the mothers took different amounts of paid or unpaid maternity leave. Their research was  published in\u00a0 The Harvard Review of Psychiatry.\n Among other findings, Alexander and her collaborators found that longer paid maternity leave was associated with:\n For mothers who chose to breastfeed, higher rates of breastfeeding, and breastfeeding that continued for twice as long.\n  A lower likelihood of the mother or child returning to the hospital with medical complications in the first year.\n Longer paid maternal leave also correlated with economic benefits for mothers that can be helpful for society, according to the analysis. For example, in the year following birth of a child, women who took paid leave were more likely to return to work and to see a wage increase, and they were less likely to rely on public assistance and food stamps.\n On the flip side, some studies have shown less positive effects, such as encouragement of employer bias against women of childbearing age in lower-paying or part-time jobs.\n Ultimately, Alexander and her co-authors contend that a longer period of paid leave gives mothers the time and space to bond with their child and to attend to their own mental and physical health needs.\n &#34;Our review shows that there is a lot of data that supports the institution of a 12-week national paid maternity leave policy in the U.S.,&#34; Alexander said.", "posttime": "2020-05-19 00:42:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e26\u85aa,national", "title": "\u5168\u56fd\u5e26\u85aa\u4ea7\u5047\u7684\u6848\u4f8b", "title_en": "The case for national paid maternity leave", "transed": 1, "url": "https://scopeblog.stanford.edu/2020/05/18/the-case-for-national-paid-maternity-leave/", "via": "", "real_tags": ["\u5e26\u85aa", "national"]}, {"category": "", "categoryclass": "", "imagename": "a386dab336657e91f4b089beba32a700.jpg", "infoid": 1002653, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u9ad8\u6cd5\u9662\u9a73\u56de\u4e86\u4e00\u9879\u8bc9\u8bbc\uff0c\u8be5\u8bc9\u8bbc\u79f0Facebook\u901a\u8fc7\u6258\u7ba1\u6050\u6016\u5206\u5b50\u7684\u5185\u5bb9\u5411\u4ed6\u4eec\u63d0\u4f9b\u4e86\u201c\u7269\u8d28\u652f\u6301\u201d\u3002\u5b83\u62d2\u7edd\u542c\u53d6Force\u8bc9Facebook\u6848\uff0c\u8fd9\u8d77\u6848\u4ef6\u662f\u7531\u4e94\u540d\u7f8e\u56fd\u4eba\u7684\u5bb6\u4eba\u63d0\u8d77\u7684\uff0c\u8fd9\u4e9b\u7f8e\u56fd\u4eba\u5728\u4ee5\u8272\u5217\u7684\u5df4\u52d2\u65af\u5766\u88ad\u51fb\u4e2d\u53d7\u4f24\u6216\u6b7b\u4ea1\u3002\u8fd9\u8d77\u8bc9\u8bbc\u53bb\u5e74\u5df2\u7ecf\u53d7\u5230\u4e86\u4e25\u91cd\u6253\u51fb\uff0c\u52a0\u5f3a\u4e86\u53cd\u5bf9\u5c31\u6050\u6016\u88ad\u51fb\u8d77\u8bc9\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u7684\u6cd5\u5f8b\u5148\u4f8b\u3002\n2016\u5e74\u7684\u8bc9\u8bbcForce v.Facebook\u8fa9\u79f0\uff0cFacebook\u5728\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u6258\u7ba1\u4e86\u5c5e\u4e8e\u54c8\u9a6c\u65af\u7684\u8d26\u6237\uff0c\u7f8e\u56fd\u5c06\u54c8\u9a6c\u65af\u5f52\u7c7b\u4e3a\u6050\u6016\u7ec4\u7ec7\u3002\u6839\u636e\u201c\u901a\u4fe1\u4f53\u9762\u6cd5\u201d(Communications Decency Act)\u7b2c230\u6761\uff0c\u7f51\u7ad9\u4e00\u822c\u4e0d\u80fd\u56e0\u7528\u6237\u521b\u5efa\u7684\u5185\u5bb9\u800c\u88ab\u8d77\u8bc9\uff0c\u4f46\u8d77\u8bc9\u4e66\u79f0\uff0cFacebook\u7684\u7b97\u6cd5\u5411\u559c\u6b22\u7c7b\u4f3c\u9875\u9762\u6216\u5e16\u5b50\u7684\u4eba\u63a8\u5e7f\u6050\u6016\u5185\u5bb9\uff0c\u79f0\u8fd9\u5e94\u8be5\u4f1a\u964d\u4f4e\u5176\u514d\u75ab\u529b\u3002\n\u7b2c\u4e8c\u5de1\u56de\u4e0a\u8bc9\u6cd5\u9662\u53d1\u73b0\u8fd9\u4e00\u903b\u8f91\u4e0d\u5177\u8bf4\u670d\u529b\u3002\u8be5\u516c\u53f8\u53bb\u5e74\u9a73\u65a5\u4e86\u8fd9\u4e00\u6295\u8bc9\uff0c\u79f0\u201c\u6ca1\u6709\u4f9d\u636e\u201d\u8ba9Facebook\u627f\u62c5\u8d23\u4efb\uff0c\u56e0\u4e3a\u5b83\u7528\u7b97\u6cd5\u5b89\u6392\u4e86\u5185\u5bb9\u3002\u663e\u793a\u7279\u5b9a\u7528\u6237\u60f3\u8981\u70b9\u51fb\u7684\u6750\u6599\uff0c\u800c\u4e0d\u662fFacebook\u63a8\u8350\u7cfb\u7edf\u7684\u72ec\u6709\u8d44\u4ea7\uff0c\u201c\u4ece\u4e00\u5f00\u59cb\u5c31\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u53d1\u5e03\u7b2c\u4e09\u65b9\u5185\u5bb9\u7684\u6839\u672c\u7ed3\u679c\u3002\u201d\u6700\u9ad8\u6cd5\u9662\u6ca1\u6709\u5c31\u9a73\u56de\u6b64\u6848\u7684\u539f\u56e0\u53d1\u8868\u8bc4\u8bba\uff0c\u4f46\u5b83\u6279\u51c6\u4e86\u8fd9\u4e00\u88c1\u51b3\u3002\u5b83\u4e4b\u524d\u62d2\u7edd\u5ba1\u7406\u4e00\u8d77\u9488\u5bf9Grindr\u7684\u9a9a\u6270\u76f8\u5173\u8bc9\u8bbc\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u53d6\u51b3\u4e8e\u7b2c230\u6761\uff0c\u4ee5\u53ca\u4e00\u8d77\u6d89\u53ca\u8bfd\u8c24Yelp\u5ba1\u67e5\u7684\u6848\u4ef6\u3002\nForce\u8bc9Facebook\u662f\u4f17\u591a\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u7684\u8bc9\u8bbc\u4e4b\u4e00\uff0c\u8fd9\u4e9b\u5e73\u53f0\u6d89\u5acc\u6563\u5e03\u6050\u6016\u5ba3\u4f20\u6216\u53c2\u4e0e\u66b4\u529b\u88ad\u51fb\u3002\u8fd9\u4e9b\u8bc9\u8bbc\u51e0\u4e4e\u90fd\u6ca1\u6709\u6210\u529f\uff0c\u5305\u62ec\u4e00\u8d77\u7531Pulse\u591c\u603b\u4f1a\u67aa\u51fb\u6848\u53d7\u5bb3\u8005\u5bb6\u5c5e\u63d0\u8d77\u7684\u6848\u4ef6\uff0c\u4ee5\u53ca\u51e0\u8d77\u4e0eISIS\u6050\u6016\u4e3b\u4e49\u6709\u5173\u7684\u6848\u4ef6\u3002\u8fd9\u4e9b\u88c1\u51b3\u5e76\u6ca1\u6709\u5168\u90e8\u63f4\u5f15\u7b2c230\u6761\uff0c\u4f46\u8fd9\u662f\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u5173\u952e\u8fa9\u62a4\u4e4b\u4e00\uff0c\u4eca\u5929\u7684\u5426\u51b3\u4fdd\u7559\u4e86\u5b83\u7684\u6cd5\u5f8b\u5f71\u54cd\u529b\u3002", "note_en": "The Supreme Court has  rejected a lawsuit claiming Facebook provided \u201cmaterial support\u201d to terrorists by hosting their content. It declined to  hear  Force v. Facebook, a case brought by the families of five Americans who were hurt or killed by Palestinian attacks in Israel. The suit had already been dealt a serious blow last year, strengthening a legal precedent against suing social media platforms over terrorist attacks.\n The 2016 lawsuit  Force v. Facebook argued that Facebook knowingly hosted accounts belonging to Hamas, which the US classifies as a terrorist organization. Websites generally can\u2019t be sued for user-created content under Section 230 of the Communications Decency Act, but the complaint contended Facebook\u2019s algorithm promoted terrorist content to people who liked similar pages or posts, saying that should reduce its immunity.\n The Second Circuit appeals court  found that logic unconvincing. It shot down the complaint last year, saying there was \u201cno basis\u201d for making Facebook liable because it arranged content with algorithms. Rather than being a unique property of Facebook\u2019s recommendation system, displaying material that specific users want to click on \u201chas been a fundamental result of publishing third\u2010party content on the Internet since its beginning.\u201d The Supreme Court didn\u2019t comment on why it rejected the case, but it let that ruling stand. It\u2019s previously declined to  hear a harassment-related lawsuit against Grindr that hinged on Section 230 as well as a case involving  defamatory Yelp reviews.\n Force v. Facebook was one of many lawsuits against social media platforms for allegedly spreading terrorist propaganda or playing a role in violent attacks. These suits have been almost universally unsuccessful \u2014 including one case brought by the families of  Pulse nightclub shooting victims and  several related to ISIS terrorism. The rulings don\u2019t  all invoke Section 230, but it\u2019s one of social media companies\u2019 key defenses, and today\u2019s rejection preserves its legal heft.", "posttime": "2020-05-19 00:41:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u63a5\u5f85,court", "title": "\u6700\u9ad8\u6cd5\u9662\u9a73\u56de\u9488\u5bf9Facebook\u63a5\u5f85\u6050\u6016\u5206\u5b50\u7684\u8bc9\u8bbc", "title_en": "Supreme Court rejects lawsuit against Facebook for hosting terrorists", "transed": 1, "url": "https://www.theverge.com/2020/5/18/21262248/supreme-court-rejects-stuart-force-facebook-section-230-lawsuit-algorithms", "via": "", "real_tags": ["facebook", "\u63a5\u5f85", "court"]}, {"category": "", "categoryclass": "", "imagename": "868d4850aaf850c5cdab7a82f785b4e6.jpg", "infoid": 1002652, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6234\u68ee\u516c\u53f8\u521b\u59cb\u4eba\u8a79\u59c6\u65af\u00b7\u6234\u68ee\u5728\u63a5\u53d7(\u4f26\u6566)\u661f\u671f\u65e5\u6cf0\u6664\u58eb\u62a5\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u6234\u68ee\u53d6\u6d88\u7684\u7535\u52a8\u6c7d\u8f66\u5728\u5185\u90e8\u88ab\u79f0\u4e3aN526\uff0c\u6bcf\u6b21\u5145\u7535\u7684\u7eed\u822a\u91cc\u7a0b\u4e3a600\u82f1\u91cc\uff0c\u53ef\u4ee5\u57284.8\u79d2\u5185\u4ece\u96f6\u52a0\u901f\u5230\u6bcf\u5c0f\u65f662\u82f1\u91cc\u3002\u8a79\u59c6\u65af\u00b7\u6234\u68ee(James Dyson)\u8bf4\uff0c\u4ed6\u751a\u81f3\u201c\u79d8\u5bc6\u5730\u5728\u4e00\u4e2a\u5c01\u95ed\u7684\u9662\u843d\u91cc\u201d\u9a7e\u9a76\u4e86\u8fd9\u6b3eSUV\u98ce\u683c\u7684\u6c7d\u8f66\u539f\u578b\uff0c\u610f\u5728\u4e0e\u7279\u65af\u62c9\u7684\u7535\u52a8\u6c7d\u8f66\u76f8\u6297\u8861\u3002\n\u8fd9\u5bb6\u5438\u5c18\u5668\u516c\u53f8\u77ed\u6682\u7684\u7535\u52a8\u6c7d\u8f66\u9879\u76ee\u59cb\u4e8e2017\u5e74\uff0c\u6234\u68ee\u516c\u53f8\u4e00\u5ea6\u7ea6\u6709600\u4eba\u5728\u4ece\u4e8b\u8fd9\u9879\u5de5\u4f5c\u3002\u6234\u68ee\u8868\u793a\uff0c2018\u5e74\u5c06\u5728\u65b0\u52a0\u5761\u5efa\u7acb\u4e00\u5bb6\u5236\u9020\u5de5\u5382\uff0c\u751f\u4ea7\u7535\u52a8\u6c7d\u8f66\uff0c\u5e76\u6b63\u5728\u4e3a\u8fd9\u6b3e\u6c7d\u8f66\u5f00\u53d1\u56fa\u6001\u7535\u6c60\u3002\n\u82f1\u56fd\u9996\u5bcc\u8a79\u59c6\u65af\u00b7\u6234\u68ee\u7235\u58eb(Sir James Dyson)\u65a5\u8d445\u4ebf\u82f1\u9551\u5f00\u53d1\u4e86\u4e00\u6b3e\u7535\u52a8\u6c7d\u8f66\uff0c\u53ef\u4ee5\u4e0e\u7279\u65af\u62c9(Tesla)\u7684\u7ade\u4e89\uff0c\u4f46\u5728\u7b2c\u4e00\u6b3e\u539f\u578b\u4e0a\u8def\u4e4b\u524d\uff0c\u4ed6\u5c31\u628a\u5b83\u62a5\u5e9f\u4e86\u3002\u4ed6\u544a\u8bc9\u7ea6\u7ff0\u00b7\u963f\u91cc\u5947\u4e3a\u4ec0\u4e48https://t.co/mIVmVFnN6D\u3002\n--\u300a\u661f\u671f\u65e5\u6cf0\u6664\u58eb\u62a5\u300b\u6742\u5fd7(@TheSTMagazine)2020\u5e745\u670817\u65e5\u3002\n\u4f46\u5728\u82b1\u8d39\u4e86GB 5\u4ebf\u82f1\u9551(\u7ea6\u54086.05\u4ebf\u7f8e\u5143)\u7684\u81ea\u6709\u8d44\u91d1\u7528\u4e8e\u8be5\u9879\u76ee\u540e\uff0c\u8a79\u59c6\u65af\u00b7\u6234\u68ee(James Dyson)\u53bb\u5e7410\u6708\u653e\u5f03\u4e86\u7535\u52a8\u6c7d\u8f66\u8ba1\u5212\u3002\u4ed6\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u544a\u8bc9\u5458\u5de5\uff0c\u201c\u5c3d\u7ba1\u6211\u4eec\u5728\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u975e\u5e38\u52aa\u529b\uff0c\u4f46\u6211\u4eec\u5c31\u662f\u770b\u4e0d\u5230\u8ba9\u5b83\u5728\u5546\u4e1a\u4e0a\u53ef\u884c\u7684\u65b9\u6cd5\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u5c06\u201c\u4e13\u6ce8\u4e8e\u5236\u9020\u56fa\u6001\u7535\u6c60\u7684\u8270\u5de8\u4efb\u52a1\u201d\uff0c\u4ee5\u53ca\u673a\u5668\u5b66\u4e60\u548c\u4eba\u5de5\u667a\u80fd\u7b49\u5176\u4ed6\u201c\u57fa\u7840\u201d\u6280\u672f\u3002\n\u636e\u6cf0\u6664\u58eb\u62a5\u62a5\u9053\uff0c\u6234\u68ee\u6c7d\u8f66\u91cd2.6\u5428\uff0c\u6700\u9ad8\u65f6\u901f125\u82f1\u91cc\uff0c\u914d\u5907\u4e24\u53f0200\u5343\u74e6\u7684\u7535\u52a8\u673a\u3002\n\u6234\u68ee\u5728\u63a5\u53d7\u201c\u6cf0\u6664\u58eb\u62a5\u201d\u91c7\u8bbf\u65f6\u8bf4\uff1a\u201c\u6211\u4eec\u611f\u5230\u975e\u5e38\u60b2\u4f24\u548c\u5931\u671b\u3002\u201d\u201c\u6211\u4eec\u7684\u751f\u6d3b\u5145\u6ee1\u98ce\u9669\u548c\u5931\u8d25\u3002\u6211\u4eec\u5c1d\u8bd5\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u5b83\u4eec\u90fd\u5931\u8d25\u4e86\u3002\u751f\u6d3b\u5e76\u4e0d\u5bb9\u6613\u3002\u201c\u3002\n\u6700\u8fd1\uff0c\u6234\u68ee\u82b1\u8d39\u4e86\u5927\u7ea62500\u4e07\u7f8e\u5143\uff0c\u5229\u7528\u8be5\u516c\u53f8\u73b0\u6709\u7684\u7535\u673a\u6280\u672f\uff0c\u4e3a\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u5236\u9020\u4e86\u4e00\u79cd\u547c\u5438\u673a\u3002\u82f1\u56fd\u653f\u5e9c\u4e0a\u4e2a\u6708\u544a\u8bc9\u8be5\u516c\u53f8\uff0c\u4e0d\u9700\u8981\u547c\u5438\u673a\uff0c\u4f46\u8a79\u59c6\u65af\u00b7\u6234\u68ee(James Dyson)\u8868\u793a\uff0c\u4ed6\u5e76\u4e0d\u540e\u6094\u8be5\u516c\u53f8\u6295\u5165\u6240\u8c13\u7684\u79d1\u6587\u7279\u9879\u76ee\u7684\u8d44\u6e90\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u6709\u4e00\u4e9b\u5e0c\u671b\uff0c\u6211\u4eec\u7684\u547c\u5438\u673a\u53ef\u80fd\u4f1a\u5e2e\u52a9\u5176\u4ed6\u56fd\u5bb6\u7684\u53cd\u5e94\uff0c\u4f46\u8fd9\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u65f6\u95f4\u548c\u8c03\u67e5\u3002\u201d\n\u201c\u6cf0\u6664\u58eb\u62a5\u201d\u5c31\u5176\u5e74\u5ea6\u82f1\u56fd\u5bcc\u8c6a\u6392\u884c\u699c\u91c7\u8bbf\u4e86\u6234\u68ee\u3002\u8a79\u59c6\u65af\u00b7\u6234\u68ee\u9996\u6b21\u8363\u767b\u201c\u661f\u671f\u65e5\u6cf0\u6664\u58eb\u62a5\u201d\u5bcc\u8c6a\u699c\u699c\u9996\uff0c\u4f30\u8ba1\u8eab\u5bb6\u8fbe162\u4ebf\u82f1\u9551(\u7ea6\u5408190\u4ebf\u7f8e\u5143)\u3002", "note_en": "Dyson\u2019s canceled electric vehicle was known internally as the N526, would have had a 600-mile range per charge and could go from zero to 62 mph in 4.8 seconds, company founder James Dyson said in an interview with the  (London)  Sunday Times. James Dyson says he even drove the prototype of the SUV-style vehicle, meant to rival Tesla\u2019s electric vehicles, \u201csecretly in a screened-off compound.\u201d\n The vacuum cleaner company\u2019s short-lived  electric car project started in 2017, and at one point some 600 people at Dyson were working on it. In 2018, Dyson said it would build  a manufacturing plant in Singapore to make the EVs, and was also working on developing solid-state batteries for the vehicle.\n Sir James Dyson, Britain\u2019s richest man, spent \u00a3500m developing an electric car to rival Tesla\u2019s. Then he scrapped it before the first prototype took to the road. He tells John Arlidge why  https://t.co/mIVmVFnN6D\n\u2014 The Sunday Times Magazine (@TheSTMagazine)  May 17, 2020\n But after spending \u00a3500 million (about $605 million) of his own money on the project, James Dyson  scrapped the EV plans last October. He told staff in an email \u201cthough we have tried very hard throughout the development process we simply can no longer see a way to make it commercially viable,\u201d adding that the company would \u201cconcentrate on the formidable task of manufacturing solid-state batteries\u201d as well as other \u201cfundamental\u201d technologies such as machine learning and AI.\n The Dyson car weighed 2.6 tons and had a top speed of 125 mph, with twin 200kW electric motors, according to the  Times.\n \u201cThere\u2019s huge sadness and disappointment,\u201d Dyson said in the  Times interview. \u201cOurs is a life of risk and of failure. We try things and they fail. Life isn\u2019t easy.\u201d\n More recently, Dyson had spent about $25 million building a  breathing ventilator meant for COVID-19 patients, using the company\u2019s existing motor technology. The  UK government told the company last month the ventilator was not needed, but James Dyson said he did not regret the resources the company devoted to the so-called CoVent project. \u201cI have some hope that our ventilator may yet help the response in other countries, but that requires further time and investigation,\u201d he said.\n The  Times spoke to Dyson for its annual rankings of the UK\u2019s wealthiest people. James Dyson topped the   Sunday Times Rich List for the first time, with an estimated fortune of \u00a316.2 billion (about $19 billion).", "posttime": "2020-05-19 00:41:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dyson,\u6234\u68ee", "title": "\u8a79\u59c6\u65af\u00b7\u6234\u68ee(James Dyson)\u8868\u793a\uff0c\u4ed6\u81ea\u5df1\u82b1\u4e865\u4ebf\u82f1\u9551\u8d2d\u4e70\u516c\u53f8\u53d6\u6d88\u7684\u7535\u52a8\u6c7d\u8f66", "title_en": "James Dyson says he spent \u00a3500M of his own money on the company\u2019s canceled EV", "transed": 1, "url": "https://www.theverge.com/2020/5/17/21261473/james-dyson-electric-vehicle-tesla", "via": "", "real_tags": ["dyson", "\u6234\u68ee"]}, {"category": "", "categoryclass": "", "imagename": "0ac17f22f1a4b09deb6d6b0f9488bf3d.jpg", "infoid": 1002649, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u6700\u8fd1\u5728\u7279\u65af\u62c9\u5f17\u91cc\u8499\u7279\u5de5\u5382\u6240\u5728\u5730\u963f\u62c9\u7c73\u8fbe\u53bf(Alameda County)\u4e0e\u5b98\u5458\u53d1\u751f\u51b2\u7a81\uff0c\u8fd9\u53ef\u80fd\u8ba9\u4ed6\u5bf9\u5bfb\u627e\u7279\u65af\u62c9\u4e0b\u4e00\u5bb6\u7f8e\u56fd\u5de5\u5382\u7684\u7d27\u8feb\u611f\u589e\u5f3a\u3002\u4e0a\u5468\u4e94\uff0c\u51e0\u5bb6\u65b0\u95fb\u5a92\u4f53\u62a5\u9053\u79f0\uff0c\u7279\u65af\u62c9\u6b63\u5728\u7f29\u5c0f\u8303\u56f4\uff0c\u9009\u62e9\u4e00\u4e2a\u65b0\u7684\u5730\u70b9\u6765\u751f\u4ea7Y\u578b\u8de8\u754c\u8f66\u548c\u7279\u65af\u62c9\u5373\u5c06\u63a8\u51fa\u7684CyberTruck\u3002\n\u8fd9\u4e9b\u62a5\u9053\u59cb\u4e8eelectrek\uff0c\u8fd9\u662f\u4e00\u5bb6\u652f\u6301\u7279\u65af\u62c9\u7684\u7f51\u7ad9\uff0c\u5176\u8054\u5408\u521b\u59cb\u4eba\u5f17\u96f7\u5fb7\u00b7\u5170\u4f2f\u7279(Fred Lambert)\u5728\u516c\u53f8\u5185\u90e8\u6709\u826f\u597d\u7684\u4eba\u8109\u3002\u5c31\u5728\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f4\u4e0b\u53483\u70b9\u4e4b\u524d\uff0c\u5170\u4f2f\u7279\u65b0\u95fb\u62a5\u9053\u79f0\uff0c\u7279\u65af\u62c9\u5df2\u5c06\u4e0b\u4e00\u5bb6\u5de5\u5382\u843d\u6237\u5f97\u514b\u8428\u65af\u5dde\u5965\u65af\u6c40\u3002\n\u5170\u4f2f\u7279\u5199\u9053\uff1a\u6211\u4eec\u88ab\u544a\u77e5\uff0c\u9009\u5740\u7684\u51b3\u5b9a\u5e76\u4e0d\u662f\u677f\u4e0a\u9489\u9489\u7684\uff0c\u56e0\u4e3a\u7279\u65af\u62c9\u663e\u7136\u5728\u5927\u5965\u65af\u6c40\u5730\u533a\u83b7\u5f97\u4e86\u51e0\u4e2a\u9009\u62e9\u3002\u4f46\u636e\u8bf4\u9a6c\u65af\u514b\u5e0c\u671b\u5c3d\u5feb\u5f00\u5de5\u5efa\u8bbe\uff0c\u76ee\u6807\u662f\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u8ba9Y\u578b\u8f66\u51fa\u5382\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u4e00\u5bb6\u6c7d\u8f66\u516c\u53f8\u6765\u8bf4\uff0c\u4ece\u5934\u5f00\u59cb\u5efa\u8bbe\u65b0\u5de5\u5382\u7684\u65f6\u95f4\u90fd\u975e\u5e38\u77ed\u3002\u53bb\u5e74\uff0c\u7279\u65af\u62c9\u82b1\u4e86\u8fd1\u4e00\u5e74\u7684\u65f6\u95f4\u624d\u5efa\u6210\u4e0a\u6d77\u5de5\u5382-\u8fd9\u88ab\u8ba4\u4e3a\u662f\u5f02\u4e4e\u5bfb\u5e38\u7684\u5feb\u3002\n\u65b0\u5de5\u5382\u5f88\u5bb9\u6613\u8017\u8d44\u6570\u5341\u4ebf\u7f8e\u5143\u3002\u7279\u65af\u62c9\u76ee\u524d\u6b63\u5728\u67cf\u6797\u9644\u8fd1\u5efa\u9020\u4e00\u5ea7\u5de5\u5382\uff0c\u9884\u8ba1\u8017\u8d44\u8d85\u8fc740\u4ebf\u7f8e\u5143\u3002\u4f46\u4e0a\u4e2a\u5b63\u5ea6\u672b\uff0c\u94f6\u884c\u91cc\u670980\u4ebf\u7f8e\u5143\uff0c\u7279\u65af\u62c9\u5e94\u8be5\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u878d\u8d44\u95ee\u9898\u3002\n\u5170\u4f2f\u7279\u6307\u51fa\uff0c\u7279\u65af\u62c9\u4e0e\u5965\u65af\u6c40\u5730\u533a\u6709\u4e00\u4e9b\u73b0\u6709\u7684\u8054\u7cfb\u3002Autopilot\u56e2\u961f\u4e2d\u7684\u4e00\u4e9b\u82af\u7247\u5de5\u7a0b\u5e08\u662f\u4eceAMD\u7684\u5965\u65af\u6c40\u529e\u4e8b\u5904\u62db\u8058\u6765\u7684\uff0c\u56e0\u6b64\u7279\u65af\u62c9\u5728\u90a3\u91cc\u6709\u4e00\u4e2a\u5c0f\u529e\u516c\u5ba4\u3002\nelectrek\u7684\u62a5\u9053\u64ad\u51fa\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u4e09\u5bb6\u65b0\u95fb\u673a\u6784-TechCrunch\uff0cCNBC\u548c\u7f8e\u8054\u793e-\u90fd\u53d1\u8868\u4e86\u62a5\u9053\uff0c\u79f0\u7279\u65af\u62c9\u4ecd\u5728\u8003\u8651\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u7684\u5854\u5c14\u8428\u3002\n\u867d\u7136\u5c1a\u672a\u505a\u51fa\u6700\u7ec8\u51b3\u5b9a\uff0c\u4f46\u5965\u65af\u6c40\u548c\u5854\u5c14\u8428\u90fd\u5728\u6700\u7ec8\u5165\u56f4\u540d\u5355\u4e4b\u5217\uff0cTechcrunch\u7684\u67ef\u5c14\u65af\u6ed5\u00b7\u79d1\u6d1b\u585e\u514b\u63f4\u5f15\u591a\u4e2a\u6d88\u606f\u6765\u6e90\u5199\u9053\u3002\nKorosec\u6307\u51fa\uff0c\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u6b64\u524d\u66fe\u8868\u793a\uff0c\u7279\u65af\u62c9\u7684CyberTruck\u5de8\u578b\u5de5\u5382\u5c06\u8bbe\u5728\u7f8e\u56fd\u4e2d\u90e8\uff0c\u5730\u70b9\u5c06\u5728\u7279\u65af\u62c94\u6708\u4e0b\u65ec\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u540e\u7684\u4e09\u4e2a\u6708\u5185\u9009\u5b9a\u3002\n\u5170\u4f2f\u7279\u6307\u8d23\u7279\u65af\u62c9\u5c06\u8fd9\u4e9b\u62a5\u9053\u63d0\u4f9b\u7ed9\u7ade\u4e89\u5bf9\u624b\u7684\u65b0\u95fb\u673a\u6784\u3002\u6211\u4e0d\u77e5\u9053\u4ed6\u662f\u5426\u6b63\u786e\uff0c\u4f46\u4e0d\u96be\u60f3\u8c61\u4e3a\u4ec0\u4e48\u7279\u65af\u62c9\u4f1a\u60f3\u8981\u907f\u514d\u51fa\u5c14\u53cd\u5c14\u3002\u5a01\u80c1\u9009\u62e9\u53e6\u4e00\u4e2a\u5730\u70b9\u4f1a\u8ba9\u7279\u65af\u62c9\u5728\u4e0e\u5fb7\u514b\u8428\u65af\u5dde\u548c\u5965\u65af\u6c40\u5b98\u5458\u7684\u8c08\u5224\u4e2d\u53d1\u6325\u7b79\u7801\u3002\u6211\u4eec\u5df2\u7ecf\u8981\u6c42\u7279\u65af\u62c9\u5bf9\u76f8\u4e92\u77db\u76fe\u7684\u62a5\u9053\u53d1\u8868\u8bc4\u8bba\uff0c\u5982\u679c\u8be5\u516c\u53f8\u505a\u51fa\u56de\u5e94\uff0c\u6211\u4eec\u5c06\u66f4\u65b0\u8fd9\u7bc7\u62a5\u9053\u3002\n\u5fb7\u514b\u8428\u65af\u5dde\u548c\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u90fd\u6709\u5de5\u4f5c\u6743\u6cd5\u5f8b\uff0c\u5141\u8bb8\u5458\u5de5\u9009\u62e9\u4e0d\u652f\u4ed8\u5de5\u4f1a\u4f1a\u8d39\u3002\u8fd9\u4e9b\u6cd5\u5f8b\u53ef\u80fd\u6709\u52a9\u4e8e\u7279\u65af\u62c9\u4e0d\u9f13\u52b1\u65b0\u5de5\u5382\u7684\u5de5\u4eba\u7ec4\u5efa\u5de5\u4f1a\u3002\u52a0\u5dde\u7684\u6cd5\u5f8b\u5bf9\u5de5\u4f1a\u7ec4\u7ec7\u66f4\u4e3a\u53cb\u597d\u3002\n\u6211\u6000\u7591\u7279\u65af\u62c9\u6700\u7ec8\u4f1a\u5c06\u4e0b\u4e00\u5bb6\u5de5\u5382\u8bbe\u5728\u5fb7\u514b\u8428\u65af\u5dde\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u9a6c\u65af\u514b\u5df2\u7ecf\u4e0e\u8be5\u5dde\u6709\u4e86\u5bc6\u5207\u7684\u8054\u7cfb\u3002\u9a6c\u65af\u514b\u7684\u53e6\u4e00\u5bb6\u516c\u53f8SpaceX\u5728\u5fb7\u514b\u8428\u65af\u5dde\u81f3\u5c11\u6709\u4e24\u4e2a\u8bbe\u65bd\u3002\u8be5\u516c\u53f8\u6b63\u5728\u5fb7\u514b\u8428\u65af\u5dde\u6700\u5357\u7aef\u9644\u8fd1\u7684\u535a\u5361\u5947\u5361(Boca Chica)\u9644\u8fd1\u7684\u4e00\u4e2a\u5feb\u901f\u589e\u957f\u7684\u8bbe\u65bd\u5efa\u9020\u661f\u9645\u98de\u8239\u3002SpaceX\u5728\u5f97\u514b\u8428\u65af\u5dde\u9ea6\u683c\u96f7\u6208\u4e5f\u6709\u4e00\u4e2a\u706b\u7bad\u6d4b\u8bd5\u8bbe\u65bd\uff0c\u5927\u7ea6\u5728\u5965\u65af\u6c40\u548c\u8fbe\u62c9\u65af\u4e4b\u95f4\u3002\n\u6700\u8fd1\uff0c\u5728\u53bf\u5b98\u5458\u8bd5\u56fe\u63a8\u8fdf\u7279\u65af\u62c9\u5f17\u91cc\u8499\u7279\u5de5\u5382\u7684\u91cd\u65b0\u5f00\u653e\u540e\uff0c\u9a6c\u65af\u514b\u8a93\u8a00\u8981\u5c06\u7279\u65af\u62c9\u642c\u51fa\u52a0\u5dde\u3002\n5\u67089\u65e5\uff0c\u9a6c\u65af\u514b\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u6839\u7a3b\u8349\u3002\u7279\u65af\u62c9\u73b0\u5728\u5c06\u7acb\u5373\u5c06\u5176\u603b\u90e8\u548c\u672a\u6765\u7684\u9879\u76ee\u642c\u5230\u5fb7\u514b\u8428\u65af\u5dde/\u5185\u534e\u8fbe\u5dde\u3002\u51e0\u5929\u540e\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u5dde\u957f\u683c\u96f7\u683c\u00b7\u963f\u535a\u7279(Greg Abbott)\u8868\u793a\uff0c\u4ed6\u8fd8\u6ca1\u6709\u548c\u9a6c\u65af\u514b\u8c08\u8fc7\u5c06\u7279\u65af\u62c9\u642c\u5230\u5fb7\u514b\u8428\u65af\u5dde\u7684\u4e8b\u3002\n5\u6708\u521d\uff0c\u9a6c\u65af\u514b\u5728\u63a8\u7279\u4e0a\u8c08\u5230\u4e86\u51fa\u552e\u81ea\u5df1\u7684\u5b9e\u7269\u8d22\u4ea7\uff0c\u5305\u62ec\u4e4b\u524d\u5c5e\u4e8e\u6f14\u5458\u5409\u6069\u00b7\u6000\u5c14\u5fb7(Gene Wilder)\u7684\u52a0\u5dde\u4e00\u5904\u4f4f\u5b85\u3002\n\u56e0\u6b64\uff0c\u5efa\u9020\u4e00\u5bb6\u5fb7\u514b\u8428\u65af\u5dde\u7684\u6c7d\u8f66\u5de5\u5382\u53ef\u80fd\u662f\u9a6c\u65af\u514b\u751f\u6d3b\u4e2d\u66f4\u5e7f\u6cdb\u8f6c\u53d8\u7684\u4e00\u90e8\u5206-\u4ece\u5728\u52a0\u5dde\u5ea6\u8fc7\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u5230\u5728\u5b64\u661f\u5dde\u5ea6\u8fc7\u5927\u90e8\u5206\u65f6\u95f4\u3002\u5728\u8fc7\u53bb\u768415\u5e74\u91cc\uff0c\u9a6c\u65af\u514b\u4e58\u5750\u4ed6\u7684\u79c1\u4eba\u98de\u673a\u5f80\u8fd4\u4e8e\u6d1b\u6749\u77f6\u7684SpaceX\u529e\u516c\u5ba4\u548c\u7279\u65af\u62c9\u5728\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u8bbe\u65bd\u4e4b\u95f4\u3002\u5f80\u8fd4\u4e8eSpaceX\u5357\u5f97\u514b\u8428\u65af\u4e1a\u52a1\u548c\u4f4d\u4e8e\u5965\u65af\u6c40\u5730\u533a\u7684\u7279\u65af\u62c9\u65b0\u603b\u90e8\u4e4b\u95f4\uff0c\u4e0d\u4f1a\u8ba9\u4ed6\u7684\u65e5\u5e38\u751f\u6d3b\u53d1\u751f\u5982\u6b64\u5927\u7684\u53d8\u5316\u3002", "note_en": "Elon Musk&#39;s recent  clashes with officials in Alameda County, home of Tesla&#39;s Fremont factory, may have given him a heightened sense of urgency to find Tesla&#39;s next US factory. On Friday, several news outlets reported that Tesla was narrowing in on a new location to build the Model Y crossover and Tesla&#39;s forthcoming Cybertruck.\n The reports started with Electrek, a pro-Tesla site whose co-founder Fred Lambert has good connections inside the company. Just before 3pm Eastern time, Lambert\u00a0 reported that Tesla had settled on Austin, Texas as the site of its next factory.\n &#34;We are told that the decision for the site is not set in stone since Tesla was apparently given a few options in the greater Austin area,&#34; Lambert wrote. &#34;But Musk is said to want to start construction extremely soon and aims to have Model Y vehicles coming out of the plant by the end of the year.&#34;\n That would be a remarkably short amount of time for any car company to build a new factory from scratch. Last year, it took Tesla almost a year to build its Shanghai factory\u2014and that was considered unusually fast.\n The new factory could easily cost billions of dollars. Tesla is currently building a factory near Berlin that is  estimated to cost more than $4 billion. But with  $8 billion in the bank at the end of the last quarter, Tesla shouldn&#39;t have too much trouble financing the project.\n Lambert noted that Tesla has some existing connections to the Austin area. Some of the chip engineers on the Autopilot team were recruited from AMD&#39;s Austin offices, and so Tesla has a small office there.\n  Hours after Electrek&#39;s story ran, three news organizations\u2014 TechCrunch,  CNBC, and the  Associated Press\u2014all published stories stating that Tesla was still considering Tulsa, Oklahoma.\n &#34;A final decision has not been made, but Austin and Tulsa are among the finalists,&#34; Techcrunch&#39;s Kirsten Korosec writes, citing &#34;multiple sources.&#34;\n Elon Musk has previously said that Tesla&#39;s &#34;Cybertruck gigafactory&#34; would be in the central United States and that a location would be chosen within three months of Tesla&#39;s late April earnings call, Korosec noted.\n Lambert  accused Tesla of feeding these stories to rival news organizations. I don&#39;t know if he&#39;s right, but it&#39;s not hard to imagine why Tesla would want to avoid tipping its hand.\u00a0The threat to pick another location would give Tesla leverage in negotiations with Texas and Austin officials. We&#39;ve asked Tesla for comment on the conflicting reports and will update this story if the company responds.\n Both Texas and Oklahoma have right-to-work laws that allow employees to opt out of paying union dues. These laws could help Tesla discourage workers in its new factory from forming a union. California&#39;s laws are more friendly to union organizing.\n  One reason I suspect that Tesla will ultimately locate its next factory in Texas is that Musk already has substantial ties to the state. Musk&#39;s other company, SpaceX, has at least two facilities in Texas. The company is  building Starships at a fast-growing facility near Boca Chica, near the southernmost point in Texas. SpaceX also has a  rocket testing facility in McGregor, Texas, about halfway between Austin and Dallas.\n  Musk recently vowed to move Tesla out of California after county officials tried to delay re-opening of Tesla&#39;s Fremont factory.\n &#34;This is the final straw,&#34;  Musk tweeted on May 9. &#34;Tesla will now move its HQ and future programs to Texas/Nevada immediately.&#34; A few days later, Texas Gov. Greg Abbott said he had\u00a0 spoken to Musk about moving Tesla to Texas.\n Earlier in May,  Musk tweeted about selling his physical possessions, including a California home\u00a0that formerly belonged to actor Gene Wilder.\n So building a Texas car factory could be part of a broader shift in Musk&#39;s life\u2014from spending most of his time in California to spending most of his time in the Lone Star State. Musk has spent the last 15 years shuttling back and forth between SpaceX offices in Los Angeles and Tesla&#39;s facilities in the Bay Area in his private jet. Going back and forth between SpaceX&#39;s South Texas operation and a new Tesla headquarters in the Austin area wouldn&#39;t be such a big change in his routine.", "posttime": "2020-05-18 23:40:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u5fb7\u5dde,plans,\u9a6c\u65af\u514b", "title": "\u7279\u65af\u62c9\u8ba1\u5212\u5728\u5fb7\u5dde\u5efa\u65b0\u8f66\u5382", "title_en": "Tesla plans to build a new car factory in Texas", "transed": 1, "url": "https://arstechnica.com/cars/2020/05/report-tesla-plans-to-build-a-new-car-factory-in-texas/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u5fb7\u5dde", "plans", "\u9a6c\u65af\u514b"]}, {"category": "", "categoryclass": "", "imagename": "f5d54e35393e3dd9eb1f4cc6b15939db.jpg", "infoid": 1002648, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0c\u5fae\u8f6f\u548c\u8054\u90a6\u5feb\u9012\u5ba3\u5e03\u4e86\u4e00\u9879\u4e3a\u671f\u591a\u5e74\u7684\u8054\u5408\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u53cc\u65b9\u76f8\u4fe1\u8fd9\u5c06\u6709\u52a9\u4e8e\u6539\u53d8\u5546\u4e1a\u6a21\u5f0f\u3002\n\u8054\u90a6\u5feb\u9012\u8868\u793a\uff0c\u5176\u7b2c\u4e00\u9879\u670d\u52a1\u8054\u90a6\u5feb\u9012\u73af\u7ed5(FedEx Surround)\u5c06\u5141\u8bb8\u516c\u53f8\u66f4\u597d\u5730\u8ddf\u8e2a\u5176\u4f9b\u5e94\u94fe\uff0c\u5e76\u6539\u5584\u8fd0\u8f93\u65f6\u95f4\u3002\n\u5c31\u5728\u51e0\u4e2a\u6708\u524d\uff0c\u8fd9\u5bb6\u822a\u8fd0\u5de8\u5934\u53d6\u6d88\u4e86\u4e0e\u5fae\u8f6f\u7ade\u4e89\u5bf9\u624b\u4e9a\u9a6c\u900a(Amazon)\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u3002\n\u5fae\u8f6f(Microsoft)\u548c\u8054\u90a6\u5feb\u9012(FedEx)\u5468\u4e00\u5ba3\u5e03\u4e86\u4e00\u9879\u4e3a\u671f\u591a\u5e74\u7684\u8054\u5408\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u53cc\u65b9\u76f8\u4fe1\uff0c\u8fd9\u5c06\u901a\u8fc7\u8054\u90a6\u5feb\u9012\u7684\u7269\u6d41\u7f51\u7edc\u548c\u5fae\u8f6f\u7684\u4e91\u8ba1\u7b97\u5e2e\u52a9\u5b9e\u73b0\u5546\u4e1a\u8f6c\u578b\u3002\n\u4e24\u4eba\u8868\u793a\uff0c\u4ed6\u4eec\u7684\u7b2c\u4e00\u9879\u670d\u52a1\u540d\u4e3a\u8054\u90a6\u5feb\u9012\u73af\u7ed5(FedEx Around)\uff0c\u5c06\u5bf9\u4f9b\u5e94\u94fe\u548c\u9001\u8d27\u8fdb\u884c\u5b9e\u65f6\u5206\u6790\uff0c\u8fd9\u6837\u516c\u53f8\u5c31\u6709\u53ef\u80fd\u66f4\u597d\u5730\u53d1\u8d27\u3002\n\u4e24\u5bb6\u516c\u53f8\u6ca1\u6709\u900f\u9732\u5408\u4f5c\u7684\u5168\u90e8\u6027\u8d28\uff0c\u5305\u62ec\u8054\u90a6\u5feb\u9012\u5c06\u5411\u5fae\u8f6f\u652f\u4ed8\u591a\u5c11\u94b1\u6765\u4f7f\u7528\u5176Azure\u4e91\u6280\u672f\u3002\u4f46\u8fd9\u4e00\u5408\u4f5c\u5173\u7cfb\u4ee3\u8868\u4e86\u4e9a\u9a6c\u900a\u7ade\u4e89\u5bf9\u624b\u9009\u62e9\u5fae\u8f6f\u63d0\u4f9b\u7684\u4e91\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u4e91\u8ba1\u7b97\u5e02\u573a\u9886\u5934\u7f8a\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(AWS)\u7684\u53c8\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u4e9a\u9a6c\u900a\u548c\u8054\u90a6\u5feb\u9012\u4e4b\u95f4\u7684\u7ade\u4e89\u8d8a\u6765\u8d8a\u6fc0\u70c8\uff0c\u56e0\u4e3a\u4e9a\u9a6c\u900a\u6295\u5165\u5de8\u8d44\u5efa\u8bbe\u81ea\u5df1\u7684\u8fd0\u8f93\u7f51\u7edc\uff0c\u8054\u90a6\u5feb\u9012\u53bb\u5e74\u5ba3\u5e03\u5c06\u7ec8\u6b62\u4e0e\u4e9a\u9a6c\u900a\u7684\u5730\u9762\u9001\u8d27\u5408\u540c\u3002\u4e9a\u9a6c\u900a\u4ecd\u7136\u7ed9\u8054\u90a6\u5feb\u9012\u63d0\u4f9b\u4e86\u5927\u91cf\u4e1a\u52a1\uff0c\u4f46\u8bb8\u591a\u4eba\u8ba4\u4e3a\u4e9a\u9a6c\u900a\u6700\u7ec8\u4f1a\u5728\u6ca1\u6709\u7b2c\u4e09\u65b9\u5e2e\u52a9\u7684\u60c5\u51b5\u4e0b\u81ea\u884c\u53d1\u8d27\u3002\n\u5fae\u8f6f\u548c\u8054\u90a6\u5feb\u9012\u7684\u670d\u52a1\u5c06\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u63a8\u51fa\uff0c\u5b83\u4eec\u5c06\u901a\u8fc7\u8054\u90a6\u5feb\u9012\u7684\u7269\u8054\u7f51\u6280\u672f\u6536\u96c6\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u5fae\u8f6f\u7684\u4e00\u5957\u670d\u52a1\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53ef\u80fd\u5e2e\u52a9\u9884\u6d4b\u4f1a\u51cf\u7f13\u4ea4\u4ed8\u901f\u5ea6\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6076\u52a3\u5929\u6c14\u6216\u901a\u5173\u95ee\u9898\u3002\u8fd9\u53ef\u80fd\u4f1a\u5141\u8bb8\u516c\u53f8\u6539\u53d8\u8def\u7ebf\uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u9001\u8d27\u3002", "note_en": "Microsoft and FedEx announced a joint, multi-year partnership Monday that the pair believe could help &#34;transform commerce.&#34;\n Its first service, FedEx Surround, will allow companies to better track its supply chain and improve shipping times, FedEx said.\n The announcement comes just months after the shipping giant cancelled its partnership with Microsoft-rival\u00a0Amazon.\n Microsoft and  FedEx  announced a joint, multi-year partnership on Monday that the pair believe could help &#34;transform commerce&#34; through FedEx&#39;s logistics network and Microsoft&#39;s cloud.\n The two said their first service, called\u00a0FedEx Surround, will give real-time analytics into supply chain and delivery, so companies could potentially better ship goods.\n  The companies did not disclose the full nature of the partnership, including how much FedEx will be paying Microsoft to use its Azure cloud technology. But the partnership represents yet another example of  Amazon rivals choosing to go with Microsoft&#39;s cloud offering over the cloud computing market leader Amazon Web Services (AWS).\n  Amazon and FedEx have been increasingly competitive with each other as Amazon invests heavily in building out its own shipping network.\u00a0FedEx announced last year that it would  end its ground-delivery contract with Amazon. Amazon still gives FedEx plenty of business, but many think Amazon will eventually ship everything itself without the help of third parties.\n Microsoft and FedEx&#39;s offering, which will be available later in the year, will collect data through FedEx&#39;s\u00a0IoT technology and analyze it through Microsoft&#39;s suite of services, and could help predict issues that would slow delivery, such as severe weather or clearance issues. That could allow companies to change routes in order to deliver goods more quickly.", "posttime": "2020-05-18 23:26:02", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u4e9a\u9a6c\u900a,amazon,\u5fae\u8f6f,\u9012\u9001", "title": "\u8054\u90a6\u5feb\u9012\uff0c\u5fae\u8f6f\u8054\u624b\u9012\u9001\u5305\u88f9\uff0c\u62c9\u5927\u4e0e\u4e9a\u9a6c\u900a\u7684\u5dee\u8ddd", "title_en": "FedEx, Microsoft Are Teaming Up To Deliver Packages, Widening Gap with Amazon", "transed": 1, "url": "https://www.cnbc.com/2020/05/18/fedex-microsoft-are-teaming-up-to-deliver-packages-widening-gap-with-amazon.html", "via": "", "real_tags": ["microsoft", "\u4e9a\u9a6c\u900a", "amazon", "\u5fae\u8f6f", "\u9012\u9001"]}]