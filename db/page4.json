[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1008269, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528ASGI(\u5f02\u6b65\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3)\u662f\u901a\u8fc7\u901a\u90531.0\uff0c\u5f53\u65f6ASGI\u89c4\u8303\u8fd8\u5728\u8d77\u8349\u9636\u6bb5\u3002\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u4e2a\u9762\u8bd5\u9879\u76ee\uff0c\u5e2e\u52a9\u6211\u627e\u5230\u4e86\u73b0\u5728\u7684\u5de5\u4f5c\u3002\u5f53\u65f6\u611f\u89c9\u5f88\u795e\u5947\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06WebSocket\u529f\u80fd\u6dfb\u52a0\u5230\u6211\u7684Django\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u4e3a\u6211\u65e0\u7f1d\u5730\u5904\u7406\u8eab\u4efd\u9a8c\u8bc1\u548c\u5176\u4ed6\u4e0eDjango\u76f8\u5173\u7684\u4e8b\u60c5\u3002\n\u64b0\u5199\u672c\u6587\u65f6\uff0cASGI\u89c4\u8303\u5df2\u7ecf\u662f\u7248\u672c3\uff0c\u5e76\u4e14ASGI\u548c\u901a\u9053\u90fd\u5df2\u6210\u4e3aDjango Software Foundation\u7684\u4e00\u90e8\u5206\u3002\u4e0e\u8349\u6848\u7248\u76f8\u6bd4\uff0c\u5b83\u5df2\u7ecf\u6210\u719f\u4e86\u5f88\u591a\uff0c\u589e\u52a0\u4e86\u751f\u547d\u5468\u671f\u8c03\u7528\u548c\u66f4\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\u683c\u5f0f\u7b49\u3002\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u4e00\u4e2a\u5065\u5eb7\u800c\u5feb\u901f\u589e\u957f\u7684\u793e\u533a\u6b63\u5728\u5f62\u6210\uff0c\u6211\u4eec\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u7684ASGI\u670d\u52a1\u5668\u8fd0\u884c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u3002\u5728\u6211\u7684\u516c\u53f8\uff0c\u6211\u4eec\u6bcf\u5929\u901a\u8fc7\u8fd0\u884c\u5728Daphne\u4e0a\u7684ASGI\u670d\u52a1\u51e0\u767e\u4e07\u4e2a\u8bf7\u6c42\uff0cNetflix\u7684Dispatch\u57fa\u4e8eFastAPI\uff0c\u4e00\u4e2a\u6d41\u884c\u7684ASGI web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff0c\u663e\u7136\uff0c\u5fae\u8f6f\u4e5f\u5728\u4f7f\u7528\u5b83\u3002\n\u6211\u8c26\u865a\u5730\u5efa\u8bae\u4efb\u4f55\u7528Python\u6784\u5efaWeb\u670d\u52a1\u7684\u4eba\u90fd\u8981\u5b66\u4e60ASGI\u3002\u800c\u5b66\u4e60\u4e1c\u897f\u7684\u6700\u597d\u65b9\u6cd5\u5c31\u662f\u7528\u5b83\u6765\u6784\u5efa\u4e1c\u897f\uff0c\u6240\u4ee5\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u9010\u6b65\u4ecb\u7ecd\u6784\u5efa\u4e00\u4e2a\u652f\u6301ASGI\u7684\u5fae\u578bWeb\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u7684\u6b65\u9aa4\u3002\u6211\u5e0c\u671b\u5b83\u80fd\u5e2e\u52a9\u89e3\u91caASGI\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u5728\u7f16\u5199\u7b2c\u4e00\u884c\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5bf9ASGI\u662f\u4ec0\u4e48\u4ee5\u53ca\u6211\u4eec\u8981\u6784\u5efa\u7684\u76ee\u6807\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u3002\n\u56fe\u5f62TD A[\u5ba2\u6237\u7aef]--&gt\uff1b|HTTP\u3001WebSocket\u3001.|B(ASGI\u670d\u52a1\u5668)B--&gt\uff1b|\u4f5c\u7528\u57df\u3001\u53d1\u9001\u3001\u63a5\u6536|C(ASGI\u5e94\u7528\u7a0b\u5e8f)\u3002\n\u7b80\u5355\u5730\u8bf4\uff0c\u6d4f\u89c8\u5668(\u5ba2\u6237\u7aef)\u4f7f\u7528\u67d0\u79cd\u7c7b\u578b\u7684\u8bf7\u6c42(HTTP\u6216WebSocket)\u5efa\u7acb\u5230ASGI\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u7136\u540e\uff0cASGI\u670d\u52a1\u5668\u4f7f\u7528\u5c01\u88c5\u5728\u540d\u4e3aScope\u7684python\u5b57\u5178\u4e2d\u7684\u6709\u5173\u8fde\u63a5\u7684\u4fe1\u606f\u8c03\u7528ASGI\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528\u4e24\u4e2a\u56de\u8c03\u51fd\u6570(\u540d\u4e3aSend\u548cReceive)\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5728\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\u3002\n{&#34\uff1btype&#34\uff1b\uff1a&#34\uff1bhttp&#34\uff1b\uff0c&#34\uff1bhttp_version&#34\uff1b\uff1a&#34\uff1b1.1&#34\uff1b\uff0c&#34\uff1b\u670d\u52a1\u5668&#34\uff1b\uff1a(&#34\uff1b127.0.0.1&#34\uff1b\uff0c8,000)\uff0c&#34\uff1b\u5ba2\u6237\u7aef&#34\uff1b\uff1a(&#34\uff1b127.0.0.1&#34\uff1b\uff0c60457)\uff0c&#34\uff1b\u65b9\u6848&#34\uff1b\uff1a&#34\uff1bhttp&#34\uff1b\uff0c&#34\uff1b\u65b9\u6cd5&#34\uff1b\uff1a&#34\uff1b\u83b7\u53d6&#34\uff1b\uff0c&#34\uff1b\u6839\u8def\u5f84&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff0c&#34\uff1b\u8def\u5f84&#34\uff1b\uff1a&#34\uff1b/hello/a&#34\uff1b\uff0c&#34\uff1bRAW_path&#34\uff1b\uff1aB&#34\uff1b/hello/a&#34\uff1b\uff0c&#34\uff1bQUERY_STRING&#34\uff1b\uff1aB&#34\uff1b&#34\uff1b\uff0c&#34\uff1bHeaders&#34\uff1b\uff1a[(B&#34\uff1bhost&#34\uff1b\uff0cb&#34\uff1blocalhost\uff1a8000&#34\uff1b)\uff0c(b&#34\uff1bConnection&#34\uff1b\uff0cb&#34\uff1bKeep-Alive&#34\uff1b)\uff0c(b&#34\uff1bUser-agent&#34\uff1b\uff0cb&#34\uff1bMozilla/5.0(Macintosh\uff1b\u82f1\u7279\u5c14Mac OS X 10_14_6)AppleWebKit/537.36(khtml\uff0c\u5982\u58c1\u864e)Chrome/83.0.4103.106 Safari/537.36&#34\uff1b\uff0c)\uff0c(b&#34\uff1bAccept&#34\uff1b\uff0cb&#34\uff1btext/html\uff0capplication/xhtml+xml\uff0capplication/xml\uff1bq=0.9\uff0cimage/apng\uff0c*/*\uff1bq=0.8\uff0capplication/\u7b7e\u540d\u4ea4\u6362\uff1bv=b3\uff1bq=0.9&#34\uff1b\uff0c)\u3002\uff0cb&#34\uff1bgzip\uff0cdeflate\uff0cbr&#34\uff1b)\uff0c(b&#34\uff1bAccept-Language&#34\uff1b\uff0cb&#34\uff1bEN-US\uff0cEN\uff1bq=0.9&#34\uff1b)\uff0c(b&#34\uff1bcookie&#34\uff1b\uff0cb&#39\uff1bcsrftoken=dDA2IAPrvgPc7hkyBSyctxDk78KmhHAzUqR0LUpjXI3Xgki0QrGEWazE3RGZuLGl&#39\uff1b\uff0c)\uff0c]\uff0c}\u3002\n\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u4f5c\u7528\u57df\u4e0eWSGI\u73af\u5883\u6ca1\u6709\u592a\u5927\u4e0d\u540c\u3002\u4e8b\u5b9e\u4e0a\uff0cASGI\u63a5\u53e3\u4e0eWSGI\u63a5\u53e3\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662fASGI\u4e0d\u662f\u4f7f\u7528environ\u548cstart_response\u6765\u53d1\u9001\u62a5\u5934\u5e76\u4f7f\u7528WSGI\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u54cd\u5e94\u4e3b\u4f53\uff0c\u800c\u662f\u4e0e\u8fde\u63a5\u8fdb\u884c\u63a5\u53e3\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u5728\u8fde\u63a5\u7684\u751f\u547d\u5468\u671f\u4e2d\u591a\u6b21\u5f02\u6b65\u5730\u63a5\u6536\u548c\u53d1\u9001\u6d88\u606f\uff0c\u76f4\u5230\u8fde\u63a5\u5173\u95ed\u3002\u8fd9\u4e3aWebSocket\u548cHTTP\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u63a5\u53e3\u3002\n\u4e5f\u5b8c\u5168\u53ef\u4ee5\u5c06WSGI\u5e94\u7528\u7a0b\u5e8f\u5305\u88c5\u5728ASGI\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ea\u9700\u6839\u636e\u8303\u56f4\u51c6\u5907\u4e00\u4e2aWSGI\u73af\u5883\u548cstart_response\uff0c\u63a5\u6536\u548c\u53d1\u9001\uff0c\u7136\u540e\u8c03\u7528WSGI\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5c31\u53ef\u4ee5\u5de5\u4f5c\u4e86\u3002\u5982\u679c\u5c06\u8c03\u7528\u59d4\u6258\u5230\u7ebf\u7a0b\u6c60\u6216\u7c7b\u4f3c\u5185\u5bb9\u4e2d\uff0c\u5219\u53ea\u662f\u4f7fWSGI\u5e94\u7528\u7a0b\u5e8f\u5f02\u6b65\u3002\u8fd9\u5c31\u662f\u9891\u9053\u56f4\u7ed5\u59dc\u6208\u7684\u5927\u81f4\u65b9\u5f0f\u3002\n\u5f53\u6211\u8bf4ASGI\u6846\u67b6\u65f6\uff0c\u6211\u6307\u7684\u662f\u4f7f\u6784\u5efaASGI\u5e94\u7528\u7a0b\u5e8f\u66f4\u5bb9\u6613\u7684\u6846\u67b6\uff0c\u8fd9\u4e0d\u5305\u62ecASGI\u670d\u52a1\u5668\u90e8\u5206\u3002\u6211\u4e4b\u6240\u4ee5\u63d0\u5230\u8fd9\u4e00\u70b9\uff0c\u662f\u56e0\u4e3a\u4e00\u4e9b\u8f83\u65e9\u7684Python\u5f02\u6b65Web\u6846\u67b6\u6709\u81ea\u5df1\u7684\u670d\u52a1\u5668\u5b9e\u73b0\uff0c\u4e5f\u4f1a\u63a5\u7ba1\u8bf8\u5982\u89e3\u6790HTTP\u8bf7\u6c42\u3001\u5904\u7406\u7f51\u7edc\u8fde\u63a5\u7b49\u4efb\u52a1\u3002\u6211\u4eec\u4e0d\u4f1a\u5728ASGI Web\u6846\u67b6\u4e2d\u505a\u8fd9\u4e9b\u5de5\u4f5c\u3002\u4f5c\u4e3aWSGI\u7684\u7cbe\u795e\u7ee7\u627f\u8005\uff0c\u5728WSGI\u4e2d\uff0cWeb\u670d\u52a1\u5668(\u5982Gunicorn\u548cuwsgi)\u548cWeb\u6846\u67b6(\u5982Flask\u548cDjango)\u662f\u5206\u5f00\u7684\uff0cASGI\u4e5f\u6709\u8fd9\u79cd\u5206\u79bb\u3002\n\u5f02\u6b65\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f(\u4f5c\u7528\u57df\u3001\u63a5\u6536\u3001\u53d1\u9001)\uff1a\u540d\u79f0=\u4f5c\u7528\u57df[&#34\uff1b\u8def\u5f84&#34\uff1b]\u3002\u62c6\u5206(&#34\uff1b/&#34\uff1b\uff0c1)[-1]\u6216&#34\uff1bWORLD&#34\uff1b\u7b49\u5f85\u53d1\u9001({&#34\uff1btype&#34\uff1b\uff1a&#34\uff1bhttp.response se.start&#34\uff1b\uff0c&#34\uff1bstatus&#34\uff1b\uff1a200\uff0c&#34\uff1bHeader&#34\uff1b\uff1a[[B&#34\uff1bContent-type&#34\uff1b\uff0cb&#34\uff1bText/Plain&#34\uff1b]\uff0c]\uff0c})\u6b63\u5728\u7b49\u5f85\u53d1\u9001({&#34\uff1btype&#34\uff1b\uff1a&#34\uff1bhttp.response.body&#34\uff1b\uff0c&#34\uff1bbody&#34\uff1b\uff1aF&#34\uff1bHello\uff0c{name}\uff01&#34\uff1b)\u3002encode()\uff0c&#34\uff1bMORE_BODY&#34\uff1b\uff1aFALSE\uff0c})\u3002\nstart\u542f\u52a8HTTP\u54cd\u5e94\uff0c\u53d1\u9001\u72b6\u6001\u4ee3\u7801\u548c\u54cd\u5e94\u5934\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u4ee5200OK\u72b6\u6001\u4ee3\u7801\u54cd\u5e94\uff0c\u5e76\u5728\u6807\u9898\u4e2d\u5c06Content-type\u8bbe\u7f6e\u4e3atext/PLAN\u3002body\u53d1\u9001\u54cd\u5e94\u6b63\u6587\uff0cmore_body\u952e\u544a\u8bc9\u670d\u52a1\u5668\u54cd\u5e94\u662f\u5426\u5b8c\u6210\u3002ASGI\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u77e5\u9053\u8fde\u63a5\u662f\u5426\u5e94\u8be5\u5173\u95ed\uff0c\u6216\u8005\u81ea\u52a8\u51b3\u5b9a\u662f\u5185\u5bb9\u957f\u5ea6\u62a5\u5934\u8fd8\u662f\u5206\u5757\u7f16\u7801\u3002\n\u4f60\u5e94\u8be5\u53ef\u4ee5\u8bbf\u95eehttp://localhost:8000/\u5e76\u83b7\u5f97\u201c\u4f60\u597d\uff0c\u4e16\u754c\u201d\u3002\u8bbf\u95eehttp://localhost:8000/tom\u4f1a\u8ba9\u4f60\u83b7\u5f97\u201c\u4f60\u597d\uff0c\u6c64\u59c6\u201d\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0cuvicorn\u76f8\u5f53\u5feb\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0cWRK-D10S http://localhost:8000/hi\u76842018\u5e74\u6700\u4f4e\u89c4\u683cMacBook Air\u7684\u8bf7\u6c42\u6570/\u79d2\u4e3a27857.87\u3002\n\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684hello world\u793a\u4f8b\uff0c\u4f46\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7f16\u5199\u66f4\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e0d\u592a\u65b9\u4fbf\u3002\u9996\u5148\uff0c\u5b83\u4e0d\u505a\u8def\u7531\uff0c\u5982\u679c\u4f60\u60f3\u5bf9\u4e0d\u540c\u7684\u8def\u5f84\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u5de8\u5927\u7684\u5982\u679c\u2026\u3002\u5426\u5219\u5982\u679c..\u3002Else\u5b50\u53e5\u3002\u5176\u6b21\uff0c\u6bcf\u6b21\u90fd\u8981\u4ee5Python\u5b57\u5178\u7684\u5f62\u5f0f\u7f16\u5199ASGI\u6d88\u606f\u662f\u76f8\u5f53\u56f0\u96be\u7684\u3002\u7b2c\u4e09\uff0c\u5728\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u8ddf\u8e2a\u8fde\u63a5\u7684\u72b6\u6001\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u4f8b\u5982\u54cd\u5e94\u662f\u5426\u5df2\u542f\u52a8\u3001\u54cd\u5e94\u662f\u5426\u5df2\u7ed3\u675f\u3001\u662f\u5426\u5e94\u5728\u6b64\u5904\u542f\u52a8\u54cd\u5e94\u7b49\u3002\n\u4f7f\u7528\u65b0\u6846\u67b6\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u7f16\u5199\u5982\u4e0bASGI\u5e94\u7528\u7a0b\u5e8f\uff1a\n\u4eceaAF\u5bfc\u5165asyncio\u4eceaaf\u5bfc\u5165aAF#\u53e6\u4e00\u4e2aASGI\u6846\u67b6\u4eceaaf.route\u5bfc\u5165\u6765\u81eaaaf.response\u5bfc\u5165HttpResponse\u8def\u7531\u5668=Router()@Router\u3002route(&#39\uff1b/&#39\uff1b)@Router\u3002route(&#39\uff1b/&lt\uff1bname&gt\uff1b&#39\uff1b)async def hello(connection\uff0cname=&#39\uff1bworld&#39\uff1b)\uff1areturn HttpResponse(f&#34\uff1bhello\uff0c{name}&#34\uff1b)@Router\u3002route(&#39\uff1b/count&#39\uff1b)@Router\u3002ROUTE(&#39\uff1b/Count/&lt\uff1bint\uff1aNumber&&gt;\uff1b&#39\uff1b)\u5f02\u6b65\u5b9a\u4e49\u8ba1\u6570(Connection\uff0cNumber=10)\uff1a\u5bf9\u4e8e\u8303\u56f4\u5185\u7684i(Number)\uff1a\u7b49\u5f85\u8fde\u63a5\u3002\u53d1\u9001(f&#39\uff1bcount{i}\\n&39\uff1b\uff0cFinish=false)\u7b49\u5f85\u5f02\u6b65\u3002\u4f11\u7720(%1)\u7b49\u5f85\u8fde\u63a5\u3002\u53d1\u9001(&#39\uff1b&#39\uff1b\uff0cFinish=True)@Router\u3002ROUTE(&#39\uff1b/ECHO&#39\uff1b)Async def ECHO(\u8fde\u63a5)\uff1aBody=\u7b49\u5f85\u8fde\u63a5\u3002Body()\u6b63\u5728\u7b49\u5f85\u8fde\u63a5\u3002\u53d1\u9001(Body\uff0cFinish=True)APP=AAF([\u8def\u7531\u5668])\u3002\n\u6211\u5e0c\u671b\u8fd9\u4e2a\u6211\u60f3\u8981\u7684\u6846\u67b6\u5916\u89c2\u7684\u7247\u6bb5\u662f\u4e0d\u8a00\u800c\u55bb\u7684\u3002\u4f46\u4ee5\u4e0b\u662f\u6211\u60f3\u8981\u5b9e\u73b0\u7684\u4e00\u4e9b\u5173\u952e\u76ee\u6807\uff1a\nConnection\u7c7b\u5c06\u8868\u793aASGI HTTP\u6216WebSocket\u8fde\u63a5\u3002\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5c01\u88c5\u4e86ASGI\u4e2d\u7684\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\uff0c\u5373Scope\u3001Send\u548cReceive\uff0c\u5e76\u516c\u5f00\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u9700\u8981\u5197\u957f\u5730\u5199\u51fa\u6240\u6709\u7684ASGI\u6d88\u606f\uff0c\u5e76\u4eceScope\u4e2d\u89e3\u6790\u6240\u6709\u5185\u5bb9\uff0c\u5982cookie\u548cHeader\u3002\u4f46\u5b83\u5e94\u8be5\u5141\u8bb8\u7528\u6237\u8bbf\u95ee\u539f\u6765\u7684\u4f5c\u7528\u57df\uff0c\u5728\u4ed6\u4eec\u60f3\u8981\u7684\u65f6\u5019\u53d1\u9001\u548c\u63a5\u6536\uff0c\u8fd9\u6837\u5c31\u4fdd\u6301\u4e86ASGI\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u7ec4\u5408\u6027\u3002\u4f8b\u5982\uff0c\u5b83\u5e94\u8be5\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u8c03\u7528Another_Asgi_app(connection.scope\uff0cconnectionn.asgi_send\uff0cconnection.asgi_Receive)\u5c06\u67d0\u4e9b\u8fde\u63a5\u59d4\u6258\u7ed9\u53e6\u4e00\u4e2aASGI\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4ece\u679a\u4e3e\u5bfc\u5165\u679a\u4e3eFROM\u51fd\u6570\u5de5\u5177\u4ecehttp.Cookie\u5bfc\u5165Cached_Property\u901a\u8fc7\u952e\u5165import any\uff0cAwaable\uff0cCallable\uff0cOptional\uff0cUnion from urllib\u5bfc\u5165SimpleCookie\u3002parse import parse_qsl\uff0cun\u5f15\u53f7_plus from werkzeug.datastructs\u5bfc\u5165\u6807\u5934\uff0cMultiDict CoroutineFunction=Callable[[any]\uff0cAwaable]class ConnectionType(Enum)\uff1ahttp=&#34\uff1bHTTP&#34\uff1bWebSocket=\u3002\u7c7b\u8fde\u63a5\uff1adef__init__(self\uff0c\u4f5c\u7528\u57df\uff1adict\uff0c*\uff0csend\uff1aCoroutineFunction\uff0cReceive\uff1aCoroutineFunction)\uff1aself\u3002\u4f5c\u7528\u57df=\u4f5c\u7528\u57df\u672c\u8eab\u3002ASGI_SEND=\u53d1\u9001\u81ea\u8eab\u3002ASGI_RECEIVE=\u63a5\u6536\u81ea\u8eab\u3002\u5f00\u59cb=\u9519\u8bef\u7684\u81ea\u6211\u3002\u5b8c\u6210=\u9519\u8bef\u7684\u81ea\u6211\u3002RESP_HEADERS=HEADERS()SELF\u3002resp_cookies\uff1aSimpleCookie=SimpleCookie()self\u3002RESP_STATUS_CODE\uff1a\u53ef\u9009[INT]=\u65e0\u81ea\u8eab\u3002http_body=b&#34\uff1b&#34\uff1b\u81ea\u8eab\u3002HTTP_HAS_MORE_BODY=\u771f\u6211\u3002HTTP_RECEIVED_BODY_LENGTH=0@cached_property def Req_Headers(Self)-&gt\uff1bHeaders\uff1aSelf\u4e2d(k\uff0cv)\u7684Headers=Headers()\u3002\u8303\u56f4[&#34\uff1bHeaders&#34\uff1b]\uff1aHeader\u3002\u6dfb\u52a0(k.\u3002\u89e3\u7801(&#34\uff1bascii&#34\uff1b)\uff0cv.\u3002decode(&#34\uff1bascii&#34\uff1b))return headers@cached_property def req_cookies(Self)-&gt\uff1bSimpleCookie\uff1aCookie=SimpleCookie()cookie\u3002\u52a0\u8f7d(\u81ea\u8eab\u3002\u8bf7\u6c42\u6807\u9898(_H)\u3002get(&#34\uff1bcookie&#34\uff1b\uff0c{})return cookie@cached_property def type(Self)-&gt\uff1bConnectionType\uff1areturn(ConnectionType.\u3002\u5982\u679c\u4e3aSELF\uff0c\u5219\u4e3aWebSocket\u3002\u8303\u56f4\u3002get(&#34\uff1btype&#34\uff1b)==&#34\uff1bwebsocket&#34\uff1bElse ConnectionType\u3002http)@cached_property def\u65b9\u6cd5(Self)-&gt\uff1bstr\uff1a\u8fd4\u56deself\u3002\u4f5c\u7528\u57df[&#34\uff1bMethod&#34\uff1b]@CACHED_PROPERTY\u5b9a\u4e49\u8def\u5f84(SELF)-&gt\uff1b\u5b57\u7b26\u4e32\uff1a\u8fd4\u56deSELF\u3002\u4f5c\u7528\u57df[&#34\uff1bpath&#34\uff1b]@cached_property def query(Self)-&gt\uff1bMultiDict\uff1areturn MultiDict(parse_qsl(UNQUOTE_PLUS(sel.\u3002\u4f5c\u7528\u57df[&#34\uff1bQUERY_STRING&#34\uff1b]\u3002decode()Async def send(self\uff0cdata\uff1aUnion[bytes\uff0cstr]=b&#34\uff1b&#34\uff1b\uff0cFinish\uff1a\u53ef\u9009[bool]=false)\uff1aif self\u3002\u5df2\u5b8c\u6210\uff1a\u5982\u679c\u662fSELF\uff0c\u5219\u5f15\u53d1ValueError(&#34\uff1b\u5f53\u8fde\u63a5\u5173\u95ed\u65f6\u4e0d\u80fd\u53d1\u9001\u6d88\u606f&#34\uff1b)\u3002type==ConnectionType\u3002HTTP\uff1aif isinstance(data\uff0cstr)\uff1adata=data\u3002encode()\u7b49\u5f85\u81ea\u5df1\u3002_http_send(data\uff0cFinish=Finish)\u5426\u5219\uff1a\u5f15\u53d1NotImplementedError()async def_http_send(self\uff0cdata\uff1abytes=b&#34\uff1b&#34\uff1b\uff0c*\uff0cFinish\uff1abool=false)\uff1a\u5982\u679c\u4e0d\u662fself\u3002\u5df2\u5f00\u59cb\uff1a\u5982\u679c\u5b8c\u6210\uff1a\u81ea\u6211\u3002PUT_RESP_HEADER(&#34\uff1bContent-Length&#34\uff1b\uff0cstr(len(Data)\u7b49\u5f85\u81ea\u5df1\u3002start_resp()\u7b49\u5f85Self\u3002\u5982\u679c\u5b8c\u6210\uff1a\u7b49\u5f85\u81ea\u6211\uff0c\u5219asgi_send({&#34\uff1btype&#34\uff1b\uff1a&#34\uff1bhttp.response.body&#34\uff1b\uff0c&#34\uff1bbody&#34\uff1b\uff1adata or b&#34\uff1b&#34\uff1b\uff0c&#34\uff1bmore_body&#34\uff1b\uff1atrue})\u3002Finish()\u5f02\u6b65\u5b9a\u4e49Finish(SELF\uff0cCLOSE_CODE\uff1aOPTIONAL[INT]=1000)\uff1a\u5982\u679c\u662fSELF\u3002type==ConnectionType\u3002HTTP\uff1a\u5982\u679c\u662fSelf\u3002\u5df2\u5b8c\u6210\uff1a\u5982\u679c\u4e0d\u662f\u81ea\u8eab\uff0c\u5219\u5f15\u53d1ValueError(&#34\uff1b\u8fde\u63a5\u5df2\u5b8c\u6210&#34\uff1b)\u3002\u5f00\u59cb\uff1a\u8d5b\u5c14\u592b\u3002RESP_STATUS_CODE=204\u7b49\u5f85\u81ea\u6211\u3002start_resp()\u7b49\u5f85Self\u3002asgi_send({&#34\uff1btype&#34\uff1b\uff1a&#34\uff1bhttp.response.body&#34\uff1b\uff0c&#34\uff1bbody&#34\uff1b\uff1aB&#34\uff1b&#34\uff1b\uff0c&#34\uff1bmore_body&#34\uff1b\uff1afalse})\u5426\u5219\uff1a\u5f15\u53d1NotImp\n\u5728HTTP\u8bf7\u6c42-\u54cd\u5e94\u5468\u671f\u4e2d\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u5bf9\u4f55\u65f6\u53d1\u9001\u5185\u5bb9\u8fdb\u884c\u7cbe\u7ec6\u63a7\u5236\uff0c\u8fd4\u56de\u77e5\u9053\u5982\u4f55\u8bbe\u7f6e\u5934\u90e8\u548c\u53d1\u9001\u6b63\u6587\u7684\u54cd\u5e94\u66f4\u4e3a\u65b9\u4fbf\u548c\u719f\u6089\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684HttpResponse\u52a9\u624b\u7c7b\u3002\n#response.py\u5bfc\u5165json\u6765\u81ea\u952e\u5165import Union\uff0cOptional\uff0cMapping\uff0cAny from.connection\u5bfc\u5165\u8fde\u63a5\u7c7bHttpResponse\uff1adef__init__(self\uff0cbody\uff1aOptional[Union[Bytes\uff0cstr]]=b&#34\uff1b&#34\uff1b\uff0cconnection\uff1aOptional[Connection]=None\uff0c*\uff0cStatus_code\uff1aint=200\uff0cHeaders\uff1aOptional[Mapping[str\uff0cstr]]=None)\uff1aself\u3002\u8eab\u4f53=\u8eab\u4f53\u81ea\u6211\u3002\u8fde\u63a5=\u8fde\u63a5\u672c\u8eab\u3002STATUS_CODE=STATUS_CODE\u81ea\u8eab\u3002Headers=Header def__await__(Self)\uff1a\u5982\u679c\u4e0d\u662fself\uff0c\u5219\u4e3a\u3002\u8fde\u63a5\uff1a\u63d0\u9ad8\u503c\u9519\u8bef(&#34\uff1b\u65e0\u8fde\u63a5&#34\uff1b)\u81ea\u8eab\u3002\u8fde\u63a5\u3002RESP_STATUS_CODE=SELF\u3002\u5982\u679c\u662fSELF\uff0c\u5219\u4e3aSTATUS_CODE\u3002\u6807\u9898\uff1a\u8868\u793ak\uff0c\u8868\u793aself\u4e2d\u7684v\u3002\u6807\u9898\u3002\u9879\u76ee()\uff1a\u81ea\u6211\u3002\u8fde\u63a5\u3002put_resp_header(k\uff0cv)\u8fd4\u56deself\u3002\u8fde\u63a5\u3002\u53d1\u9001(\u81ea\u5df1\u3002Body\uff0cFinish=True)\u3002__await__()class JsonResponse(HttpResponse)\uff1adef__init__(self\uff0cdata\uff1aany\uff0cconnection\uff1a\u53ef\u9009[\u8fde\u63a5]=\u65e0\uff0c*args\uff0c**kwargs)\uff1abody=json\u3002\u8f6c\u50a8(\u6570\u636e)\u6807\u5934=kwargs\u3002\u5982\u679cHeaders\u4e3aNone\uff0c\u5219\u83b7\u53d6(&#34\uff1bHeaders&#34\uff1b)\uff1aHeaders={}Headers[&#34\uff1bContent-type&#34\uff1b]=&#34\uff1bapplication/json&#34\uff1bSuper()\u3002__init__(body\uff0cconnection\uff0c*args\uff0c**kwargs)\u3002\nHttpResponse\u7c7b\u4e2d\u6ca1\u6709\u592a\u591a\u5185\u5bb9\u3002\u5b83\u6240\u505a\u7684\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u719f\u6089\u7684\u63a5\u53e3\uff0c\u5141\u8bb8\u6211\u4eec\u4f20\u5165\u54cd\u5e94\u4e3b\u4f53\u3001\u53ef\u9009\u5934\u3001\u53ef\u9009\u72b6\u6001\u4ee3\u7801\uff0c\u5e76\u5728Connection\u7c7b\u4e2d\u8c03\u7528\u5e95\u5c42\u65b9\u6cd5\u3002\u5728JsonResponse\u7c7b\u7684\u793a\u4f8b\u4e2d\uff0c\u5b83\u8fd8\u8bbe\u7f6e\u4e86\u5185\u5bb9\u7c7b\u578b\u6807\u5934\u3002\n\u6b64\u5e94\u7528\u7a0b\u5e8f\u5728\u8bbf\u95ee\u65f6\u5e94\u4ee5JSON\u5bf9\u8c61\u7684\u5f62\u5f0f\u8fd4\u56de\u6240\u6709\u67e5\u8be2\u53c2\u6570\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u8fd9\u4e0eGoal\u90e8\u5206\u4e2d\u7684\u7528\u6cd5\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u5728Goal\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8fd4\u56de\u54cd\u5e94\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5b83\u3002\u8fd9\u662f\u56e0\u4e3a\u6b64\u793a\u4f8b\u662f\u4e00\u4e2a\u666e\u901a\u7684ASGI\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u539f\u59cb\u76ee\u6807\u90e8\u5206\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u4f4d\u4e8e\u8def\u7531\u5668\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u8def\u7531\u5668\u4e3a\u6211\u4eec\u8c03\u7528\u7b49\u5f85\u3002\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u5141\u8bb8\u8fde\u63a5\u53c2\u6570\u4e3aNONE\u3002\n\u8def\u7531\u5668\u6839\u636e\u8bf7\u6c42\u7684URL\u548cHTTP\u65b9\u6cd5\u5c06\u8bf7\u6c42\u5206\u6d3e\u5230\u4e0d\u540c\u7684\u5904\u7406\u7a0b\u5e8f\u3002\u5927\u591a\u6570\u8def\u7531\u5668\u5b9e\u65bd\u8fd8\u4f1a\u89e3\u6790URL\u4e2d\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8def\u7531\u5668\u3002\n\u7136\u540e\u544a\u8bc9\u8def\u7531\u5668\u5339\u914dURL/a/foo/bar\uff0c\u5b83\u5e94\u8be5\u7ed9\u6211\u4eec\u63d0\u4f9b\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u4ee5\u53ca\u53c2\u6570param_a\u548cparams_b\u3002\n\u8fd9\u786e\u5b9e\u4e0d\u5bb9\u6613\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\uff0cwekzeug\u9644\u5e26\u4e86\u4e00\u4e2a\u8def\u7531\u6a21\u5757\uff0c\u5b83\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u5728\u7f3a\u5c11\u5c3e\u90e8\u659c\u6760\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u91cd\u5b9a\u5411\u3002\u5728\u5b83\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5927\u7ea660\u884c\u4ee3\u7801\u5b9e\u73b0\u6211\u4eec\u7684\u8def\u7531\u6a21\u5757\u3002\n#routing.py import functools from\u952e\u5165import Callable\uff0cIterable\uff0cOptional from werkzeug.routing import Map\uff0cMethodNotAllowed\uff0cNotFound\uff0cRequestRedirect\uff0cRule from.connection import Connection from.response import HttpResponse\u7c7b\u8def\u7531\u5668\uff1adef__init__(Self)\uff1aSuper()\u3002__init__()\u81ea\u6211\u3002url_map=Map()self\u3002ENDPOINT_TO_HANDLER={}def route(self\uff0cRule\uff0cMethods=None\uff0cName=None)\uff1aMethods=Set(Methods)If Methods\u4e0d\u662fNone If Methods\u548cNot&#34\uff1bOptions&#34\uff1bin Methods\uff1aMethods\u3002\u6dfb\u52a0(&#34\uff1boptions&#34\uff1b)def\u4fee\u9970\u7b26(\u540d\u79f0\uff1a\u53ef\u9009[str]\uff0c\u5904\u7406\u7a0b\u5e8f\uff1a\u53ef\u8c03\u7528)\uff1aself\u3002add_route(RULE_STRING=RULE\uff0cHANDLER=HANDLER\uff0cMethods=Methods\uff0cName=name)\u8fd4\u56de\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u51fd\u6570\u5de5\u5177\u3002Partial(\u4fee\u9970\u7b26\uff0c\u540d\u79f0)def add_route(self\uff0c*\uff0cRule_string\uff1astr\uff0cHandler\uff1aCallable\uff0cName\uff1aOptional[str]=None\uff0cMethods\uff1aOptional[Iterable[str]]=None\uff0c)\uff1a\u5982\u679c\u4e0d\u662fName\uff1aName=Handler\u3002__NAME__EXISTING_HANDLER=SELF\u3002Endpoint_to_Handler\u3002\u5982\u679cEXISTING_HANDLER\u548cEXISTING_HANDLER\u4e0d\u662f\u5904\u7406\u7a0b\u5e8f\uff0c\u5219GET(NAME)\uff1a\u5f15\u53d1ValueError(&#34\uff1b\u91cd\u590d\u7684\u8def\u7531\u540d\u79f0\uff1a%s&#34\uff1b%(Name))\u81ea\u8eab\u3002url_map\u3002\u6dfb\u52a0(Rule(RULE_STRING\uff0cENDPOINT=name\uff0cMethods=Methods))self\u3002ENDPOINT_TO_HANDLER[\u540d\u79f0]=\u5904\u7406\u7a0b\u5e8f\u5b9a\u4e49get_url_binding_for_connection(self\uff0cconnection\uff1aconnection)\uff1aScope=Connection\u3002\u4f5c\u7528\u57df\u8fd4\u56deSelf\u3002url_map\u3002\u7ed1\u5b9a(\u8fde\u63a5\u3002\u8bf7\u6c42\u6807\u9898(_H)\u3002GET(&#34\uff1bHOST&#34\uff1b)\uff0cPATH_INFO=\u4f5c\u7528\u57df\u3002GET(&#34\uff1b\u8def\u5f84&#34\uff1b)\uff0cSCRIPT_NAME=\u4f5c\u7528\u57df\u3002GET(&#34\uff1broot_path&#34\uff1b)\u6216NONE\uff0curl_schema=Scope\u3002GET(&#34\uff1bSCHEMA&#34\uff1b)\uff0cQUERY_ARGS=SCOPE\u3002Get(&#34\uff1bquery_string&#34\uff1b\uff0cb&#34\uff1b&#34\uff1b)\uff0c)Async def__call__(\u81ea\u8eab\uff0c\u8fde\u63a5\uff1a\u8fde\u63a5\u3002\n..", "note_en": "The first time I used  ASGI( Asynchronous Server Gateway Interface) was through  Channels 1.0 when ASGI spec was still a draft. It was my first interview project which helped me get my current job. It felt magical at that time how easy it is to add WebSocket functionality to my Django app and handles authentication and other Django related things for me seamlessly.\n ASGI specification is now at version 3 at the time of writing and both ASGI and Channels became part of Django Software Foundation. Compared to the draft version, it has matured a lot with added lifecycle calls and better application format, etc. Most excitingly, a healthy and fast-growing community is forming and we are seeing more and more ASGI servers running in production environments. At my company, we are serving a few million requests per day through ASGI running on  Daphne, Netflix\u2019s  Dispatch is based on  FastAPI, a popular ASGI web application framework, and apparently, Microsoft is  using it too.\n I would humbly advise anyone building web services in Python to learn about ASGI. And the best way to learn something is to built things with it, so in this blog post, I\u2019ll walk through the steps to build a micro web application framework that speaks ASGI. I hope it can help explain how ASGI works.\n  Before writing the first line of code, we need to have a basic understanding of what ASGI is and what we are building towards.\n   graph TD\tA[Client] --&gt;|HTTP, WebSocket, ...| B(ASGI Server)\tB --&gt; |scope, send, receive| C(ASGI application)\n To put it in simple words, A browser(client), establishes a connection to ASGI server with a certain type of request (HTTP or WebSocket), the ASGI server then calls ASGI application with information about the connection, encapsulated in a python dictionary called  scope, and two callbacks, named  send and  receive, that the application can use to send and receive messages between server and client.\n  {  &#34;type&#34; :  &#34;http&#34; ,  &#34;http_version&#34; :  &#34;1.1&#34; ,  &#34;server&#34; :  ( &#34;127.0.0.1&#34; ,  8000 ),  &#34;client&#34; :  ( &#34;127.0.0.1&#34; ,  60457 ),  &#34;scheme&#34; :  &#34;http&#34; ,  &#34;method&#34; :  &#34;GET&#34; ,  &#34;root_path&#34; :  &#34;&#34; ,  &#34;path&#34; :  &#34;/hello/a&#34; ,  &#34;raw_path&#34; :  b&#34;/hello/a&#34; ,  &#34;query_string&#34; :  b&#34;&#34; ,  &#34;headers&#34; :  [  ( b&#34;host&#34; ,  b&#34;localhost:8000&#34; ),  ( b&#34;connection&#34; ,  b&#34;keep-alive&#34; ),  (  b&#34;user-agent&#34; ,  b&#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36&#34; ,  ),  (  b&#34;accept&#34; ,  b&#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#34; ,  ),  ( b&#34;accept-encoding&#34; ,  b&#34;gzip, deflate, br&#34; ),  ( b&#34;accept-language&#34; ,  b&#34;en-US,en;q=0.9&#34; ),  (  b&#34;cookie&#34; ,  b&#39;csrftoken=dDA2IAPrvgPc7hkyBSyctxDk78KmhHAzUqR0LUpjXI3Xgki0QrGEWazE3RGZuLGl&#39; ,  ),  ], }\n You might notice that  scope is not too different from a WSGI  environ. In fact, ASGI interface is very similar to WSGI interface, but instead of getting a  environ and  start_response to send headers and using the return value of WSGI application as the response body, ASGI interfaces with the connection and allows us to receive and send messages multiple times during the lifecycle of the connection  asynchronously until the connection is closed. This allows a nice interface for both WebSocket and HTTP.\n It\u2019s also totally possible to wrap a WSGI application inside an ASGI application, just prepare a WSGI  environ and  start_response based on  scope,  receive, and  send then call the WSGI application and it would work. If you delegate that call into a thread pool or something similar, you just made your WSGI application asynchronous. This is roughly how Channels wraps around Django.\n  When I say ASGI framework I refer it as a framework that makes building ASGI application easier and this does not include the ASGI server part. I\u2019m mentioning this because some of the earlier Python asynchronous web frameworks have their own server implementation that also takes over tasks such as parsing HTTP requests, handles network connections, etc. We are not doing those in ASGI web framework. As a spiritual successor to WSGI, where web servers, such as Gunicorn and uwsgi, and web frameworks, such as Flask and Django, are separated, ASGI has this separation too.\n    async  def  application ( scope ,  receive ,  send ):  name  =  scope [ &#34;path&#34; ]. split ( &#34;/&#34; ,  1 )[ - 1 ]  or  &#34;world&#34;  await  send (  {  &#34;type&#34; :  &#34;http.response.start&#34; ,  &#34;status&#34; :  200 ,  &#34;headers&#34; :  [[ b&#34;content-type&#34; ,  b&#34;text/plain&#34; ],],  }  )  await  send (  {  &#34;type&#34; :  &#34;http.response.body&#34; ,  &#34;body&#34; :  f&#34;Hello,  { name } !&#34; . encode (),  &#34;more_body&#34; :  False ,  }  )\n http.response.start starts an HTTP response sending status code and response headers. In this example, it responds with the 200 OK status code and has  content-type set to  text/plain in the headers.  http.response.body sends the response body, the  more_body key tells the server if the response is finished. ASGI server might use this to know if a connection should be closed or automatically decide between a  content-length header or a chunked encoding.\n   And you should be able to visit  http://localhost:8000/ and get  Hello, world.Visiting  http://localhost:8000/tom would get you  Hello, tom.\n By the way, uvicorn is pretty fast, a simple benchmark with  wrk -d10s http://localhost:8000/hi on a 2018 lowest spec MacBook Air yields  Requests/sec: 27857.87.\n Although this approach works with a simple hello world example, it\u2019s not exactly convenient to write a more complex application this way. For one, it doesn\u2019t do routing, if you want to respond differently for different paths, you\u2019ll probably end up with a huge  if ... else if ... else clause. Secondly, having to write the ASGI message every time in the form of a python dict is quite arduous. Third, in a complex application, it gets harder to track the status of the connection, such as is the response started, is the response ended, should I start the response here, etc.\n  With the new framework, I hope to be able to write an ASGI application like this:\n import  asyncio from  aaf  import  aaf  # Another ASGI framework from  aaf.routing  import  Router from  aaf.response  import  HttpResponse router  =  Router () @ router . route ( &#39;/&#39; ) @ router . route ( &#39;/&lt;name&gt;&#39; ) async  def  hello ( connection ,  name = &#39;world&#39; ):\t return  HttpResponse ( f&#34;Hello,  { name } &#34; ) @ router . route ( &#39;/count&#39; ) @ router . route ( &#39;/count/&lt;int:number&gt;&#39; ) async  def  count ( connection ,  number = 10 ):\t for  i  in  range ( number ):\t\t await  connection . send ( f&#39;count  { i } \\n &#39; ,  finish = False )\t\t await  asyncio . sleep ( 1 )\t await  connection . send ( &#39;&#39; ,  finish = True ) @ router . route ( &#39;/echo&#39; ) async  def  echo ( connection ):\t body  =  await  connection . body ()\t await  connection . send ( body ,  finish = True ) app  =  aaf ([ router ])\n I hope this snippet of how I want the framework to look like is self-explanatory. But here are some of the key things I want to achieve:\n    The  Connection class will represent an ASGI HTTP or WebSocket connection. It\u2019s a class that encapsulates the three basic elements in ASGI, namely  scope,  send and  receive, and expose some convenient methods and properties so that users don\u2019t need to verbosely write out all the ASGI messages and parse everything, such as cookies and headers, from  scope. But it should allow users to access the original  scope,  send and  receive when they want to, so that the composability of ASGI applications is maintained. For example, it should allow user to delegate certain  connections to another ASGI application by calling  another_asgi_app(connection.scope, connectionn.asgi_send, connection.asgi_receive).\n  from  enum  import  Enum from  functools  import  cached_property from  http.cookies  import  SimpleCookie from  typing  import  Any ,  Awaitable ,  Callable ,  Optional ,  Union from  urllib.parse  import  parse_qsl ,  unquote_plus from  werkzeug.datastructures  import  Headers ,  MultiDict CoroutineFunction  =  Callable [[ Any ],  Awaitable ] class  ConnectionType ( Enum ):  HTTP  =  &#34;HTTP&#34;  WebSocket  =  &#34;WebSocket&#34; class  Connection :  def  __init__ (  self ,  scope :  dict ,  * ,  send :  CoroutineFunction ,  receive :  CoroutineFunction  ):  self . scope  =  scope  self . asgi_send  =  send  self . asgi_receive  =  receive  self . started  =  False  self . finished  =  False  self . resp_headers  =  Headers ()  self . resp_cookies :  SimpleCookie  =  SimpleCookie ()  self . resp_status_code :  Optional [ int ]  =  None  self . http_body  =  b&#34;&#34;  self . http_has_more_body  =  True  self . http_received_body_length  =  0  @ cached_property  def  req_headers ( self )  -&gt;  Headers :  headers  =  Headers ()  for  ( k ,  v )  in  self . scope [ &#34;headers&#34; ]:  headers . add ( k . decode ( &#34;ascii&#34; ),  v . decode ( &#34;ascii&#34; ))  return  headers  @ cached_property  def  req_cookies ( self )  -&gt;  SimpleCookie :  cookie  =  SimpleCookie ()  cookie . load ( self . req_headers . get ( &#34;cookie&#34; ,  {}))  return  cookie  @ cached_property  def  type ( self )  -&gt;  ConnectionType :  return  (  ConnectionType . WebSocket  if  self . scope . get ( &#34;type&#34; )  ==  &#34;websocket&#34;  else  ConnectionType . HTTP  )  @ cached_property  def  method ( self )  -&gt;  str :  return  self . scope [ &#34;method&#34; ]  @ cached_property  def  path ( self )  -&gt;  str :  return  self . scope [ &#34;path&#34; ]  @ cached_property  def  query ( self )  -&gt;  MultiDict :  return  MultiDict ( parse_qsl ( unquote_plus ( self . scope [ &#34;query_string&#34; ]. decode ())))  async  def  send ( self ,  data :  Union [ bytes ,  str ]  =  b&#34;&#34; ,  finish :  Optional [ bool ]  =  False ):  if  self . finished :  raise  ValueError ( &#34;No message can be sent when connection closed&#34; )  if  self . type  ==  ConnectionType . HTTP :  if  isinstance ( data ,  str ):  data  =  data . encode ()  await  self . _http_send ( data ,  finish = finish )  else :  raise  NotImplementedError ()  async  def  _http_send ( self ,  data :  bytes  =  b&#34;&#34; ,  * ,  finish :  bool  =  False ):  if  not  self . started :  if  finish :  self . put_resp_header ( &#34;content-length&#34; ,  str ( len ( data )))  await  self . start_resp ()  await  self . asgi_send (  { &#34;type&#34; :  &#34;http.response.body&#34; ,  &#34;body&#34; :  data  or  b&#34;&#34; ,  &#34;more_body&#34; :  True }  )  if  finish :  await  self . finish ()  async  def  finish ( self ,  close_code :  Optional [ int ]  =  1000 ):  if  self . type  ==  ConnectionType . HTTP :  if  self . finished :  raise  ValueError ( &#34;Connection already finished&#34; )  if  not  self . started :  self . resp_status_code  =  204  await  self . start_resp ()  await  self . asgi_send (  { &#34;type&#34; :  &#34;http.response.body&#34; ,  &#34;body&#34; :  b&#34;&#34; ,  &#34;more_body&#34; :  False }  )  else :  raise  NotImplementedError ()  # await self.asgi_send({&#34;type&#34;: &#34;websocket.close&#34;, &#34;code&#34;: close_code})  self . finished  =  True  async  def  start_resp ( self ):  if  self . started :  raise  ValueError ( &#34;resp already started&#34; )  if  not  self . resp_status_code :  self . resp_status_code  =  200  headers  =  [  [ k . encode ( &#34;ascii&#34; ),  v . encode ( &#34;ascii&#34; )]  for  k ,  v  in  self . resp_headers . items ()  ]  for  value  in  self . resp_cookies . values ():  headers . append ([ b&#34;Set-Cookie&#34; ,  value . OutputString (). encode ( &#34;ascii&#34; )])  await  self . asgi_send (  {  &#34;type&#34; :  &#34;http.response.start&#34; ,  &#34;status&#34; :  self . resp_status_code ,  &#34;headers&#34; :  headers ,  }  )  self . started  =  True  async  def  body_iter ( self ):  if  not  self . type  ==  ConnectionType . HTTP :  raise  ValueError ( &#34;connection type is not HTTP&#34; )  if  self . http_received_body_length  &gt;  0  and  self . http_has_more_body :  raise  ValueError ( &#34;body iter is already started and is not finished&#34; )  if  self . http_received_body_length  &gt;  0  and  not  self . http_has_more_body :  yield  self . http_body  req_body_length  =  (  int ( self . req_headers . get ( &#34;content-length&#34; ,  &#34;0&#34; ))  if  not  self . req_headers . get ( &#34;transfer-encoding&#34; )  ==  &#34;chunked&#34;  else  None  )  while  self . http_has_more_body :  if  req_body_length  and  self . http_received_body_length  &gt;  req_body_length :  raise  ValueError ( &#34;body is longer than declared&#34; )  message  =  await  self . asgi_receive ()  message_type  =  message . get ( &#34;type&#34; )  if  message . get ( &#34;type&#34; )  ==  &#34;http.disconnect&#34; :  raise  ValueError ( &#34;Disconnected&#34; )  if  message_type  !=  &#34;http.request&#34; :  continue  chunk  =  message . get ( &#34;body&#34; ,  b&#34;&#34; )  if  not  isinstance ( chunk ,  bytes ):  raise  ValueError ( &#34;Chunk is not bytes&#34; )  self . http_body  +=  chunk  self . http_has_more_body  =  message . get ( &#34;more_body&#34; ,  False )  or  False  self . http_received_body_length  +=  len ( chunk )  yield  chunk  async  def  body ( self ):  return  b&#34;&#34; . join ([ chunks  async  for  chunks  in  self . body_iter ()])  def  put_resp_header ( self ,  key ,  value ):  self . resp_headers . add ( key ,  value )  def  put_resp_cookie ( self ,  key ,  value ):  self . resp_cookies [ key ]  =  value\n I hope this code is easy to read. All it does is providing us with an interface that makes it easier to access info about the request, read request body, make sure body length is not larger than declared, and send the response back to the client. It also provides some safeguards to ensure messages of the right type is sent in the right state. For example, it ensures that  http.response.start messages are always sent before  http.response.body, and no more messages are sent after connection closed. Most of the heavy lifting in parsing header, cookie, and query is done by  werkzeug and other Python built-in superheroes.\n  # example1.py from  aaf.connection  import  Connection async  def  app ( scope ,  receive ,  send ):  conn  =  Connection ( scope ,  receive = receive ,  send = send )  name  =  conn . query . get ( &#34;name&#34; )  await  conn . send ( &#34;Hello, &#34;  +  ( name  or  &#34;world&#34; ),  finish = True )\n We can run this example by executing  uvicorn example_1:app. Requesting  /?name=foo should correctly return  Hello, foo.\n We now have an ASGI application that\u2019s shorter in code and does more (accessing HTTP query). That\u2019s one step closer to what we want!\n  It\u2019s usually not required to have fine control over when to send what in an HTTP request-response cycle, returning a response that knows how to set headers and send the body is more convenient and familiar. To do that, we can write a simple  HttpResponse helper class.\n  # response.py import  json from  typing  import  Union ,  Optional ,  Mapping ,  Any from  .connection  import  Connection class  HttpResponse :  def  __init__ (  self ,  body :  Optional [ Union [ bytes ,  str ]]  =  b&#34;&#34; ,  connection :  Optional [ Connection ]  =  None ,  * ,  status_code :  int  =  200 ,  headers :  Optional [ Mapping [ str ,  str ]]  =  None  ):  self . body  =  body  self . connection  =  connection  self . status_code  =  status_code  self . headers  =  headers  def  __await__ ( self ):  if  not  self . connection :  raise  ValueError ( &#34;No connection&#34; )  self . connection . resp_status_code  =  self . status_code  if  self . headers :  for  k ,  v  in  self . headers . items ():  self . connection . put_resp_header ( k ,  v )  return  self . connection . send ( self . body ,  finish = True ). __await__ () class  JsonResponse ( HttpResponse ):  def  __init__ (  self ,  data :  Any ,  connection :  Optional [ Connection ]  =  None ,  * args ,  ** kwargs  ):  body  =  json . dumps ( data )  headers  =  kwargs . get ( &#34;headers&#34; )  if  headers  is  None :  headers  =  {}  headers [ &#34;content-type&#34; ]  =  &#34;application/json&#34;  super (). __init__ ( body ,  connection ,  * args ,  ** kwargs )\n There\u2019s not much going on in the  HttpResponse class. All it does is providing a familiar interface allowing us to pass in a response body, optional headers, optional status code, and calls the underneath methods in  Connection class for us. In the example of  JsonResponse class, it also sets the  content-type header.\n   This application should return all query parameters in the form of a JSON object when visited.\n  You might have noticed that this is not exactly how it\u2019s used in the   Goal  section, where we can just  return the response object instead of  await on it. This is because this example is a plain ASGI application and the one in the original   Goal  section is in the context of a  Router, who calls the  await for us. The  connection argument is allowed to be  None in the constructor for the same reason.\n  Router dispatches requests based on requested url and HTTP method to different handlers. Most router implementations also parses parameters in urls. For example, if we define a router\n  and then tell the router to match the URL  /a/foo/bar, it should give us the  handler function as well as the parameters  param_a and  params_b.\n This is indeed not easy but luckily,  werkzeug comes with a  routing module with does exactly this and even more, such as automatically redirect in the case of missing trailing slash. With its help, we can implement our  routing module in around 60 lines of code.\n # routing.py import  functools from  typing  import  Callable ,  Iterable ,  Optional from  werkzeug.routing  import  Map ,  MethodNotAllowed ,  NotFound ,  RequestRedirect ,  Rule from  .connection  import  Connection from  .response  import  HttpResponse class  Router :  def  __init__ ( self ):  super (). __init__ ()  self . url_map  =  Map ()  self . endpoint_to_handler  =  {}  def  route ( self ,  rule ,  methods = None ,  name = None ):  methods  =  set ( methods )  if  methods  is  not  None  else  None  if  methods  and  not  &#34;OPTIONS&#34;  in  methods :  methods . add ( &#34;OPTIONS&#34; )  def  decorator ( name :  Optional [ str ],  handler :  Callable ):  self . add_route (  rule_string = rule ,  handler = handler ,  methods = methods ,  name = name  )  return  handler  return  functools . partial ( decorator ,  name )  def  add_route (  self ,  * ,  rule_string :  str ,  handler :  Callable ,  name :  Optional [ str ]  =  None ,  methods :  Optional [ Iterable [ str ]]  =  None ,  ):  if  not  name :  name  =  handler . __name__  existing_handler  =  self . endpoint_to_handler . get ( name )  if  existing_handler  and  existing_handler  is  not  handler :  raise  ValueError ( &#34;Duplicated route name: %s&#34;  %  ( name ))  self . url_map . add ( Rule ( rule_string ,  endpoint = name ,  methods = methods ))  self . endpoint_to_handler [ name ]  =  handler  def  get_url_binding_for_connection ( self ,  connection :  Connection ):  scope  =  connection . scope  return  self . url_map . bind (  connection . req_headers . get ( &#34;host&#34; ),  path_info = scope . get ( &#34;path&#34; ),  script_name = scope . get ( &#34;root_path&#34; )  or  None ,  url_scheme = scope . get ( &#34;scheme&#34; ),  query_args = scope . get ( &#34;query_string&#34; ,  b&#34;&#34; ),  )  async  def  __call__ ( self ,  connection :  Connecti\n......", "posttime": "2020-06-26 03:46:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ece\u5934\u5f00\u59cb,asgi", "title": "ASGI\u4ece\u5934\u5f00\u59cb-\u8ba9\u6211\u4eec\u6784\u5efa\u4e00\u4e2aASGI Web\u6846\u67b6", "title_en": "ASGI from scratch \u2013 Let's build an ASGI web framework", "transed": 1, "url": "https://shenli.dev/2020/06/20/asgi-from-scratch.html", "via": "", "real_tags": ["\u4ece\u5934\u5f00\u59cb", "asgi"]}, {"category": "", "categoryclass": "", "imagename": "98ddd737d62bf0b6064e15cbbb5b41b1.jpg", "infoid": 1008267, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e9a\u9a6c\u900a\u7684\u4e00\u9879\u540d\u4e3aHoneycode\u7684\u65b0\u670d\u52a1\u627f\u8bfa\u8ba9\u975e\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u77e5\u9053\u5982\u4f55\u5f00\u53d1\u8f6f\u4ef6\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u521b\u5efa\u4e92\u52a8\u7684\u7f51\u7edc\u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5468\u4e09\u4e0b\u5348\uff0cHoneycode\u4ee5\u6d4b\u8bd5\u7248\u53d1\u5e03\uff0c\u5c06\u4e9a\u9a6c\u900a\u5e26\u5165\u5feb\u901f\u589e\u957f\u7684\u4f4e\u4ee3\u7801\u548c\u65e0\u4ee3\u7801\u8f6f\u4ef6\u5f00\u53d1\u5e02\u573a\uff0c\u5728\u8fd9\u4e2a\u5e02\u573a\u4e2d\uff0c\u5206\u6790\u5e08\u548c\u516c\u53f8\u5185\u90e8\u7684\u5176\u4ed6\u9ad8\u7ea7\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5426\u5219\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5c31\u9700\u8981\u4ed6\u4eec\u4e0e\u5185\u90e8IT\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u56e2\u961f\u63a5\u89e6\u3002\n\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u526f\u603b\u88c1\u62c9\u91cc\u00b7\u5965\u53e4\u65af\u6c40(Larry Augustin)\u8bf4\uff0c\u201c\u6211\u4eec\u771f\u7684\u5f88\u60f3\u628aAWS\u7684\u529b\u91cf\u63a8\u5411\u6240\u6709\u7684\u4e1a\u52a1\u4eba\u5458\uff0c\u4ed6\u4eec\u60f3\u8981\u521b\u5efa\u8fd9\u4e9b\u5b9a\u5236\u5e94\u7528\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u4f46\u73b0\u5728\u6ca1\u6709\u80fd\u529b\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u201d\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u526f\u603b\u88c1\u62c9\u91cc\u00b7\u5965\u53e4\u65af\u6c40(Larry Augustin)\u8bf4\u3002\n\u8be5\u670d\u52a1\u4f7f\u7528\u5e95\u5c42AWS\u6570\u636e\u5e93\uff0c\u5141\u8bb8\u94fe\u63a5\u3001\u7b5b\u9009\u548c\u6392\u5e8f\u6570\u636e\uff0c\u4f46\u5177\u6709\u70b9\u51fb\u5f0f\u754c\u9762\u548c\u8ba9\u4eba\u8054\u60f3\u5230\u7535\u5b50\u8868\u683c\u7684\u6570\u636e\u8f93\u5165\u7ed3\u6784\u3002\u8fd9\u9879\u670d\u52a1\u5bf9\u6700\u591a20\u4e2a\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u514d\u8d39\u7684\uff0c\u5bf9\u8f83\u5927\u7684\u5e94\u7528\u7a0b\u5e8f\u5219\u6536\u8d39\u3002\n\u4e9a\u9a6c\u900a\u9884\u8ba1\uff0cHoneycode\u7684\u4e3b\u8981\u7528\u9014\u662f\u516c\u53f8\u5185\u90e8\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\uff0c\u4f46Honeycode\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9762\u5411\u516c\u4f17\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u3002\n\u8fd9\u662fAWS\u66f4\u5e7f\u6cdb\u7684\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u76ee\u7684\u662f\u5c06\u5176\u4ea7\u54c1\u6269\u5c55\u5230\u6700\u521d\u5438\u5f15\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u5176\u4e91\u6280\u672f\u7684\u6838\u5fc3\u57fa\u7840\u8bbe\u65bd\u548c\u5e73\u53f0\u670d\u52a1\u4e4b\u5916\u3002\u4e9a\u9a6c\u900a\u6b63\u5bfb\u6c42\u5728\u5fae\u8f6fAzure\u548c\u8c37\u6b4c\u4e91(Google Cloud)\u7b49\u7ade\u4e89\u5bf9\u624b\u7684\u7ade\u4e89\u4e2d\u634d\u536b\u5176\u4f5c\u4e3a\u9876\u7ea7\u516c\u5171\u4e91\u5e73\u53f0\u7684\u9886\u5148\u5730\u4f4d\u3002\nGartner\u53bb\u5e74\u4f30\u8ba1\uff0c\u52302024\u5e74\uff0c\u4f4e\u4ee3\u7801\u548c\u65e0\u4ee3\u7801\u65b9\u6cd5\u5c06\u5360\u516c\u53f8\u5185\u90e8\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u768465%\u4ee5\u4e0a\u3002Forrester\u65e9\u4e9b\u65f6\u5019\u7684\u9884\u6d4b\u662f\uff0c\u52302024\u5e74\uff0c\u8fd9\u4e2a\u5e02\u573a\u5c06\u4ee5\u6bcf\u5e7450%\u7684\u901f\u5ea6\u589e\u957f\uff0c\u8fbe\u5230210\u4ebf\u7f8e\u5143\u4ee5\u4e0a\u3002Forrester\u53bb\u5e74\u79cb\u5929\u4efb\u547dFileMaker\u3001AppSheet\u3001Caspio\u548cQuick Base\u4e3a\u8be5\u9886\u57df\u7684\u9886\u5bfc\u8005\u3002\nAWS Honeycode\u7684\u4ea7\u54c1\u7ba1\u7406\u603b\u76d1Meera Vaidyanathan\u8bf4\uff0c\u4e9a\u9a6c\u900a\u81ea\u5df1\u5728\u89c4\u5212\u3001\u53d1\u5e03\u548c\u547d\u540d\u4ea7\u54c1\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86\u65e9\u671f\u7248\u672c\u7684Honeycode\uff0c\u5e76\u7528\u4e8e\u5176\u4ed6\u529f\u80fd\uff0c\u5982\u4e3a\u56e2\u961f\u521b\u5efa\u7ec4\u7ec7\u7ed3\u6784\u56fe\u3002\n\u201c\u5c31\u5177\u4f53\u7684\u5782\u76f4\u9886\u57df\u6216\u884c\u4e1a\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u8c01\u53ef\u4ee5\u4f7f\u7528\u5b83\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u201d\u5979\u8bf4\u3002\nGeekWire Space&amp\uff1bScience-\u83b7\u5956\u822a\u7a7a\u822a\u5929\u548c\u79d1\u5b66\u7f16\u8f91\u827e\u4f26\u00b7\u535a\u4f0a\u5c14(Alan Boyle)\u6bcf\u5468\u5934\u6761", "note_en": "A new Amazon service called  Honeycode promises to let non-developers quickly create interactive web and mobile apps without knowing how to develop software.\n Announced in beta on Wednesday afternoon, Honeycode inserts Amazon into the fast-growing market for low-code and no-code software development, in which analysts and other advanced users inside companies can create sophisticated apps that would otherwise require them to engage their internal IT and application development teams.\n \u201cWe really wanted to push that power of AWS out to all those people in the line of business, who want to create these custom apps to get things done, but don\u2019t have the skill set to do it today,\u201d said Larry Augustin, an Amazon Web Services vice president.\n  The service uses an underlying AWS database, allowing data to be linked, filtered and sorted, but with a point-and-click interface and a data entry structure reminiscent of a spreadsheet. The service is free for applications with up to 20 users, with charges kicking in for larger applications.\n Amazon expects the primary usage to be used for apps and websites inside companies, but Honeycode could also be used for public-facing apps and websites.\n  It\u2019s part of a broader effort by AWS to expand its offerings beyond the core infrastructure and platform services that initially attracted software developers to its cloud technologies. Amazon is looking to defend its lead as the top public cloud platform against rivals such as Microsoft Azure and Google Cloud.\n   Gartner  estimated last year that low-code and no-code approaches will represent more than 65% of application development inside companies by 2024. Earlier projections by Forrester predicted that the market  would grow 50% a year to more than $21 billion by 2024. Forrester last fall  named FileMaker, AppSheet, Caspio and Quick Base as leaders in the field.\n Amazon itself used early versions of Honeycode in the process of planning, launching and naming the product, and for other functions such as creating an org chart for the team, said Meera Vaidyanathan, director of product management for AWS Honeycode.\n \u201cIn terms of the specific verticals or industries, I don\u2019t think there are any limitations to who can use it,\u201d she said.\n      GeekWire Space &amp; Science - Weekly headlines from Alan Boyle, award-winning aerospace and science editor", "posttime": "2020-06-26 03:45:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5546\u4e1a,amazon,\u7a0b\u5e8f,honeycode", "title": "Amazon Honeycode-NoCode\u5546\u4e1a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u8005", "title_en": "Amazon Honeycode \u2013 NoCode business app creator", "transed": 1, "url": "https://www.geekwire.com/2020/aws-honeycode-makes-amazon-player-booming-no-code-software-movement/?mc_cid=a762b3db2a&mc_eid=681f4c362e", "via": "", "real_tags": ["\u5546\u4e1a", "amazon", "\u7a0b\u5e8f", "honeycode"]}, {"category": "", "categoryclass": "", "imagename": "f260c0958a49edcb5a2442b137d7fb28.jpg", "infoid": 1008266, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u4ef6\u65e8\u5728\u4e3a\u4efb\u4f55\u5e0c\u671b\u6269\u5927\u5bf9\u53cd\u79cd\u65cf\u4e3b\u4e49\u7684\u7406\u89e3\u5e76\u53c2\u4e0e\u6253\u51fb\u79cd\u65cf\u4e3b\u4e49\uff0c\u7279\u522b\u662f\u4e0e\u53cd\u9ed1\u4eba\u548c\u8b66\u5bdf\u66b4\u529b\u6709\u5173\u7684\u4eba\u63d0\u4f9b\u8d44\u6e90\u3002\u5728\u672c\u6307\u5357\u4e2d\uff0c\u8bf7\u627e\u5230\u5404\u79cd\u8d44\u6e90\uff0c\u4ee5\u63a2\u7d22\u4e86\u89e3\u3001\u89e3\u91ca\u548c\u89e3\u51b3\u79cd\u65cf\u4e0d\u5e73\u7b49\u3001\u767d\u4eba\u81f3\u4e0a\u3001\u8b66\u5bdf\u66b4\u529b\u548c\u4e0d\u516c\u6b63\u7b49\u770b\u4f3c\u68d8\u624b\u7684\u95ee\u9898\u7684\u5b9e\u7528\u65b9\u6cd5\u3002\n\u4ee5\u60a3\u8005\u4e3a\u4e3b\u5bfc\u7684\u8bfe\u9898\u7ec4\u5ef6\u957f\u65b0\u51a0\u80ba\u708e\u75c7\u72b6\u8c03\u67e5\u7ed3\u679c\u5206\u6790\u3002\u7531\u5206\u6563\u7684\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u56e2\u961f\u7ec4\u7ec7\u7684\u8c03\u67e5\u6570\u636e\u751f\u6210(640\u4efd\u56de\u590d)\u3002\n\u82cf\u683c\u5170\u6280\u672f\u5730\u56fe-\u5217\u51fa\u82cf\u683c\u5170\u7684\u516c\u53f8\uff0c\u8fd9\u4e9b\u516c\u53f8\u5c06\u6784\u5efa\u6280\u672f\u4f5c\u4e3a\u5176\u6838\u5fc3\u4e1a\u52a1\u7684\u4e00\u90e8\u5206\u6216\u5728\u5185\u90e8\u8fdb\u884c\u3002\n\u672c\u6307\u5357\u65e8\u5728\u4e3a\u5904\u7406\u6b7b\u4ea1\u63d0\u4f9b\u5b9e\u9645\u652f\u6301\uff0c\u5305\u62ec\u6b7b\u4ea1\u53d1\u751f\u524d\u3001\u6b7b\u4ea1\u671f\u95f4\u548c\u6b7b\u4ea1\u53d1\u751f\u540e\u3002\u5b83\u5df2\u672c\u5730\u5316\u5230\u7ebd\u7ea6\uff0c\u4f46\u5728\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u4e0b\u53ef\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u533a\u57df\u8bbe\u7f6e\u8fdb\u884c\u7f16\u8f91\u3002\n\u7cbe\u9009\u7684\u5728\u7ebf\u8bfe\u7a0b\uff0c\u89c6\u9891\uff0c\u7f51\u7ad9\u548c\u8bad\u7ec3\u8425\uff0c\u5bf9\u6cd5\u5f8b\u4e13\u4e1a\u4eba\u58eb\u6709\u7528\uff01\n\u4ee5\u4e0b\u662f5\u670822\u65e5\u91cd\u65b0\u5f00\u4e1a\u7684\u4f01\u4e1a\uff0c\u7136\u540e\u62a5\u544a\u79f0\uff0c\u5728\u91cd\u65b0\u5f00\u4e1a\u540e\uff0c\u5458\u5de5\u6216\u5ba2\u6237\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\u3002\u5982\u679c\u60a8\u53bb\u8fc7\u8fd9\u4e9b\u5730\u70b9\u4e4b\u4e00\uff0c\u8bf7\u91c7\u53d6\u989d\u5916\u7684\u9884\u9632\u63aa\u65bd\uff0c\u56e0\u4e3a\u60a8\u53ef\u80fd\u5df2\u7ecf\u63a5\u89e6\u5230\u4e86\u51a0\u72b6\u75c5\u6bd2\u3002\n\u8fd9\u672c\u6307\u5357\u662f\u4e3a\u4e86\u8868\u8fbe\u6211\u5728\u7ec3\u4e60\u3001\u8bad\u7ec3\u3001\u4ee3\u7406\u3001\u6b66\u5668\u3001\u80fd\u529b\u3001\u5730\u56fe\u3001\u6218\u7565\u3001\u5355\u4eba\u548c\u56e2\u961f\u60c5\u51b5\u3001\u5b9a\u4f4d\u7b49\u65b9\u9762\u7684\u6240\u6709\u60f3\u6cd5\u548c\u60f3\u6cd5\u3002\n\u8fd9\u4e00\u8d44\u6e90\u7531\u79cb\u53e4\u666e\u5854\u5728\u5e03\u83b1\u5b89\u5a1c\u00b7\u534e\u83b1\u58eb\u7684\u76d1\u7763\u4e0b\u6c47\u7f16\u800c\u6210\uff0c\u76ee\u7684\u662f\u4e3a\u8bd5\u56fe\u6210\u4e3a\u66f4\u597d\u76df\u53cb\u7684\u4e2a\u4eba\u63d0\u4f9b\u4e00\u4e2a\u8d77\u70b9\u3002\n\u6211\u60f3\u9996\u5148\u8bf4\u7684\u662f\uff0c\u8fd9\u5c06\u662f\u4e00\u6bb5\u4e0d\u5b8c\u6574\u7684\u5386\u53f2\uff0c\u56e0\u4e3a\u8fd9\u4e09\u5e74\u91cc\u53d1\u751f\u4e86\u5f88\u591a\u6211\u4eec\u6839\u672c\u4e0d\u77e5\u9053\u7684\u4e8b\u60c5\u3002\u8fd9\u4e5f\u5c06\u6bd4\u8bf4\u5531\u53f0\u8bcd\u66f4\u8be6\u7ec6\uff0c\u56e0\u4e3a\u8bf4\u5531\u53f0\u8bcd\u7684\u6210\u5458\u57282012\u5e74\u5e95\u4e4b\u524d\u662f\u552f\u4e00\u771f\u6b63\u51fa\u73b0\u5728\u516c\u4f17\u89c6\u7ebf\u4e2d\u7684\u4eba\u3002\n\u8fd9\u662f\u4e00\u4e2a\u5c0f\u6307\u5357\uff0c\u65e8\u5728\u5e2e\u52a9\u90a3\u4e9b\u60f3\u8981\u5728\u7f8e\u56fd\u7535\u89c6\u52a8\u753b\u4e1a\u5de5\u4f5c\u7684\u4eba\u3002\n\u672c\u6307\u5357\u65e8\u5728\u63d0\u4f9b\u5ba1\u6838\u60a8\u81ea\u5df1\u6216\u5176\u4ed6\u4eba\u7684\u5728\u7ebf\u4fe1\u606f\u6240\u9700\u7684\u90e8\u5206(\u4e0d\u662f\u5168\u90e8)\u8d44\u6e90\u548c\u5de5\u5177\u3002\n\u63ed\u5f001975\u5e74\u4f5c\u4e3a\u6d41\u884c\u6587\u5316\u827a\u672f\u54c1\u7684\u795e\u79d8\u9762\u7eb1\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5728\u7c89\u4e1d\u6587\u5316\u4e2d\u6784\u5efa\u8eab\u4efd\u548c\u610f\u4e49\u7684\u3002\n\u8fd9\u4efd\u6e05\u5355\u5305\u62ec\u751f\u6001\u9886\u57df\u7684\u672c\u79d1\u751f/\u5e94\u5c4a\u6bd5\u4e1a\u751f\u7684\u6709\u507f\u5de5\u4f5c(\u4e3b\u8981\u662f\u7f8e\u56fd/\u52a0\u62ff\u5927\u7684)\u3002\u5b89\u5a1c\u00b7\u535a\u683c\u970d\u5c14\u5fb7(Anna Boegehold)\u5bf9\u8fd9\u4efd\u540d\u5355\u7684\u7ef4\u62a4\u4e0d\u529b\u3002", "note_en": "This document was created to be used as a resource for anyone looking to broaden their understanding of anti-racism and get involved to combat racism, specifically as it relates to anti-Blackness and police violence. Within this guide, please find a variety of resources to explore practical ways to understand, explain, and solve seemingly intractable problems of racial inequity, white supremacy, police violence, and injustice.\n An analysis of the prolonged COVID-19 symptoms survey by patient-led research team. Generated from survey data organized by decentralized team of COVID-19 patients (640 Responses)\n Scottish Tech Map - lists companies in Scotland that build technology as part of their core business or internally\n This guide is designed to provide practical support for dealing with death; before, during, and after it occurs. It is localized to New York but is available under a creative commons licence so it can be edited for your locale.\n  A selection of online courses, videos, websites and bootcamps useful for people in a legal profession!\n  Below are businesses that reopened on May 22, and then reported that an employee or customer tested positive for coronavirus after they reopened.If you have been to one of these locations, take extra precautions because you may have been exposed.\n    This guide is being made to express all of my thoughts and ideas on practicing, training, agents, weapons, abilities, maps, strategies, solo and team situations, positioning, and so forth.\n This resource was compiled by Autumn Gupta with Bryanna Wallace\u2019s oversight for the purpose of providing a starting place for individuals trying to become better allies\n  I want to say at the outset that this is going to be an incomplete history because there\u2019s a lot that happened in these three years that we simply don\u2019t know about. This is also going to be way more detailed about the rap line than the vocal line because the rap line members were the only ones really in the public eye until the end of 2012.\n This is meant to be as a small guide to help people who want to work in the Television Animation Industry in the United States\n  This guide is designed to provide some (not all), of the resources and tools you will need to audit information available online on yourself or another person.\n Demystifying The 1975 as a popular cultural artifact and how it constructs identity and meaning within fan culture\n This list includes PAID jobs for undergrads/recent grads in Ecological fields (mostly US/Canada based). This list is poorly maintained by Anna Boegehold.", "posttime": "2020-06-26 03:44:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u6587\u6863,crowd,\u63d0\u4f9b", "title": "Sourceful--\u4f17\u5305\u7684\u6700\u4f73\u516c\u5f00Google\u6587\u6863\u5217\u8868", "title_en": "Sourceful \u2013 a crowd-sourced list of the best public Google docs", "transed": 1, "url": "https://sourceful.co.uk", "via": "", "real_tags": ["google", "\u6587\u6863", "crowd", "\u63d0\u4f9b"]}, {"category": "", "categoryclass": "", "imagename": "ebd60010a63196e2c24a7b04d7c54baa.png", "infoid": 1008265, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u4f55\u8bbe\u7f6e\u60a8\u7684\u5f00\u53d1\u73af\u5883\uff1f\u6839\u636e\u60a8\u7684\u8bed\u8a00\u4e0d\u540c\uff0c\u6709\u8bb8\u591a\u7f16\u8f91\u5668\u3001\u5305\u7ba1\u7406\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001Linter\u7b49\u7b49\u53ef\u4f9b\u9009\u62e9\u3002\u60a8\u627e\u5230\u7684\u6bcf\u7bc7\u6587\u7ae0\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u63a8\u8350\u5de5\u5177\u7ec4\u5408\uff0c\u6bcf\u79cd\u5de5\u5177\u90fd\u58f0\u79f0\u5b83\u4eec\u7684\u5217\u8868\u662f\u6b63\u786e\u7684\u505a\u4e8b\u65b9\u5f0f\u3002\n\u7a0d\u5fae\u4e0d\u90a3\u4e48\u8f7b\u7387\u7684\u56de\u7b54\u662f\uff0c\u662f\u7684\uff0c\u4f60\u5e94\u8be5\u9009\u62e9\u4e00\u4e9b\u5de5\u5177\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u5e94\u8be5\u9009\u62e9\u4e00\u4e9b\u5de5\u5177\uff0c\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e3a\u4ec0\u4e48\u5f00\u53d1\u73af\u5883\u6700\u7ec8\u5e76\u4e0d\u90a3\u4e48\u91cd\u8981\uff0c\u4ee5\u53ca\u5728\u9009\u62e9\u5de5\u5177\u65f6\u5e94\u8be5\u5e94\u7528\u54ea\u4e9b\u9650\u5236\u7ea6\u675f\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6b63\u5728\u63a5\u53d7\u6210\u4e3a\u4e00\u540d\u53a8\u5e08\u7684\u57f9\u8bad\uff0c\u4f60\u9700\u8981\u5b66\u4e60\u5982\u4f55\u6b63\u786e\u4f7f\u7528\u5200\u5b50\uff0c\u5982\u4f55\u5b89\u5168\u5feb\u901f\u5730\u5207\u788e\u548c\u5207\u4e01\u3002\n\u662f\u7684\uff0c\u4f60\u9700\u8981\u4e00\u628a\u950b\u5229\u7684\u5200\u3002\u4f46\u662f\u5f53\u4f60\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u7528\u54ea\u628a\u5200\u5e76\u4e0d\u91cd\u8981\uff1a\u53ea\u8981\u6311\u4e00\u628a\u8db3\u591f\u950b\u5229\u3001\u8db3\u591f\u597d\u7684\u5200\uff0c\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\u5c31\u884c\u4e86\u3002\u6bd5\u7adf\uff0c\u5200\u53ea\u662f\u4e00\u79cd\u5de5\u5177\u3002\n\u5403\u4f60\u505a\u7684\u98df\u7269\u7684\u4eba\u5e76\u4e0d\u5173\u5fc3\u4f60\u7528\u7684\u662f\u54ea\u628a\u5200\uff1a\u4ed6\u4eec\u5173\u5fc3\u7684\u662f\u98df\u7269\u7684\u5473\u9053\u548c\u5916\u89c2\u3002\n\u5728\u53a8\u623f\u5446\u4e86\u516d\u4e2a\u6708\u540e\uff0c\u4f60\u4f1a\u5f00\u59cb\u4e86\u89e3\u4f60\u4e2a\u4eba\u662f\u5982\u4f55\u4f7f\u7528\u5200\u5177\u7684\uff0c\u4f60\u60f3\u8981\u8ffd\u6c42\u4ec0\u4e48\u83dc\u80b4\uff0c\u4f60\u60f3\u8981\u6539\u53d8\u4ec0\u4e48\u6280\u672f\u3002\u7136\u540e\u4f60\u5c31\u4f1a\u6709\u77e5\u8bc6\u6765\u6311\u9009\u4e00\u628a\u6216\u51e0\u628a\u5b8c\u5168\u9002\u5408\u4f60\u9700\u8981\u7684\u7279\u5b9a\u7684\u5200\u3002\n\u4f46\u662f\u8981\u8bb0\u4f4f\uff1a\u5403\u4f60\u98df\u7269\u7684\u4eba\u4ecd\u7136\u4e0d\u4f1a\u5728\u610f\u4f60\u7528\u7684\u662f\u54ea\u628a\u5200\u3002\n\u5f53\u4f60\u4f7f\u7528\u7f51\u7ad9\u65f6\uff0c\u4f60\u5e76\u4e0d\u5173\u5fc3\u7a0b\u5e8f\u5458\u4f7f\u7528\u4e86\u54ea\u79cd\u6784\u5efa\u5de5\u5177\u3002\u5f53\u4f60\u8fd0\u884c\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4f60\u5e76\u4e0d\u5173\u5fc3\u4ed6\u4eec\u4f7f\u7528\u4e86\u54ea\u79cd\u7f16\u8f91\u5668\u3002\u4f60\u5e0c\u671b\u8f6f\u4ef6\u80fd\u591f\u5de5\u4f5c\uff0c\u505a\u5230\u5b83\u6240\u8bf4\u7684\uff0c\u5bb9\u6613\u4f7f\u7528\uff0c\u4e0d\u4f1a\u59a8\u788d\u4f60--\u4f60\u4e5f\u4e0d\u5173\u5fc3\u4ed6\u4eec\u662f\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\n\u8fd9\u540c\u6837\u9002\u7528\u4e8e\u60a8\u7684\u4ee3\u7801\u7684\u7528\u6237\uff1a\u4ed6\u4eec\u5e76\u4e0d\u5173\u5fc3\u60a8\u4f7f\u7528\u4e86\u54ea\u4e9b\u5de5\u5177\u3002\n\u5f53\u60a8\u5f00\u59cb\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u65e0\u8bba\u662f\u4e00\u822c\u7684\u7f16\u7a0b\uff0c\u8fd8\u662f\u4e00\u95e8\u65b0\u7684\u8bed\u8a00\u6216\u6846\u67b6\uff0c\u60a8\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u559c\u6b22\u5982\u4f55\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u7ea0\u7ed3\u4e8e\u5bfb\u627e\u7406\u60f3\u7684\u5f00\u53d1\u73af\u5883\u548c\u5de5\u5177\u94fe\uff0c\u4e0d\u5982\u9009\u62e9\u8db3\u591f\u597d\u7684\u5de5\u5177\uff1a\n\u5bb9\u6613\u4e0a\u624b\uff1a\u60a8\u7684\u76ee\u6807\u662f\u53d1\u5e03\u6709\u7528\u7684\u4ee3\u7801\uff0c\u4f5c\u4e3a\u521d\u5b66\u8005\uff0c\u6446\u5f04\u60a8\u7684\u5f00\u53d1\u73af\u5883\u5bf9\u6b64\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\u3002\n\u4e00\u65e6\u4f60\u6709\u4e86\u8db3\u591f\u7684\u7ecf\u9a8c\uff0c\u4f60\u5c31\u4f1a\u5f00\u59cb\u5f62\u6210\u89c2\u70b9\u3002\u4f60\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528\u7684\u5de5\u5177\u53d8\u5f97\u6311\u5254\uff0c\u6216\u8005\u6700\u7ec8\u6839\u636e\u4f60\u7684\u9700\u8981\u5b9a\u5236\u5b83\u4eec\u3002\u4f60\u751a\u81f3\u53ef\u80fd\u4f1a\u5199\u4e00\u7bc7\u5173\u4e8e\u4f60\u7279\u5b9a\u7684\u5f00\u53d1\u73af\u5883\u548c\u4f60\u6700\u559c\u6b22\u7684\u5de5\u5177\u7684\u6587\u7ae0\u3002\n\u4f46\u662f\u4e0d\u7ba1\u4f60\u7684\u559c\u597d\u6709\u591a\u5f3a\uff0c\u5f88\u53ef\u80fd\u4f60\u4e0d\u592a\u559c\u6b22\u7684\u5de5\u5177\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u505a\u5f97\u5f88\u597d\u3002\u5982\u679c\u4f60\u77e5\u9053\u81ea\u5df1\u5728\u505a\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u7528\u4efb\u4f55\u950b\u5229\u7684\u5200\u5b50\u5207\u852c\u83dc\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u4f60\u6700\u559c\u6b22\u7684\u3002\n\u538c\u5026\u4e86\u4e89\u5148\u6050\u540e\u5730\u5b8c\u6210\u4f60\u7684\u5de5\u4f5c\u5417\uff1f\u5982\u679c\u4f60\u7684\u5de5\u4f5c\u6548\u7387\u8db3\u591f\u9ad8\uff0c\u4f60\u53ef\u4ee5\u4f11\u606f\u4e00\u4e0b\u5348\uff0c\u76f8\u4fe1\u81ea\u5df1\u5df2\u7ecf\u521b\u9020\u4e86\u9ad8\u4ef7\u503c\u7684\u5de5\u4f5c\u3002\u66f4\u4e0d\u7528\u8bf4\uff0c\u5f53\u4f60\u9700\u8981\u4e00\u4efd\u65b0\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u66f4\u5bb9\u6613\u627e\u5230\u4e00\u4efd\u65b0\u5de5\u4f5c\u3002\u5b66\u4e60\u9ad8\u6548\u7a0b\u5e8f\u5458\u7684\u79d8\u5bc6\u6280\u80fd\u3002\n\u6211\u4eec\u90fd\u4f1a\u72af\u9519\uff0c\u6211\u670920\u5e74\u7684\u7ecf\u9a8c\uff1a\u4ece\u6bcf\u5929\u51cc\u66684\u70b9\u5bfc\u81f4\u751f\u4ea7\u5d29\u6e83\u7684\u4ee3\u7801\uff0c\u5230\u63a5\u53d7\u4e00\u4e2a\u8352\u8c2c\u7684\u7cdf\u7cd5\u5de5\u4f5c\u673a\u4f1a\u3002\u6bcf\u4e00\u6b21\u60e8\u75db\u7684\u5931\u8d25\u90fd\u7ed9\u4e86\u6211\u4e00\u4e2a\u6559\u8bad--\u4f46\u90a3\u662f\u5728\u4e3a\u65f6\u5df2\u665a\u4e4b\u540e\u3002\u4f60\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\uff01\u52a0\u51653900\u540d\u5176\u4ed6\u7a0b\u5e8f\u5458\u7684\u884c\u5217\uff0c\u6bcf\u5468\u4f60\u90fd\u4f1a\u5b66\u5230\u5982\u4f55\u907f\u514d\u6211\u72af\u4e0b\u53e6\u4e00\u4e2a\u9519\u8bef\u3002", "note_en": "How do you setup your dev environment?Depending on your language there are many choices of editor, package manager, build tool, linter, on and on.And every article you find will have a different combination of suggested tools, each of which claiming that  their list is The Right Way To Do Things.\n   The slightly less flippant answer is that, yes, there are some contraints on which tools you should pick, but otherwise you should just pick something and move on.\n Let\u2019s see why dev environments don\u2019t matter that much in the end, and what limited constraints you should apply when choosing your tools.\n  Imagine you\u2019re training to become a chef.You will need to learn how to use a knife correctly, to chop and dice safely and quickly.\n And yes, you need a sharp knife.But when you\u2019re starting out, it doesn\u2019t matter which knife you use: just pick something sharp and good enough, and move on.After all, the knife is just a tool.\n The people eating the food you cook don\u2019t care about which knife you used: they care how the food tastes and looks.\n After six months in the kitchen, you\u2019ll start understanding how you personally use a knife, what cuisines you want to pursue, what techniques you want to vary.And then you\u2019ll have the knowledge to pick a specific knife or knives exactly suited to your needs.\n But remember: the people eating your food  still won\u2019t care which knife you used.\n  When you use a website, you don\u2019t care which build tool the programmer used.When you run an app, you don\u2019t care which editor they used.You want the software to work, to do what it says, to be easy to use, to get out of your way\u2014and you don\u2019t care how they did it.\n And that applies just as much to the users of your code: they don\u2019t care which tools you used.\n And when you\u2019re starting out, whether programming in general or a new language or framework, you don\u2019t know how you will like to work.So instead of obsessing over finding the ideal development environment and toolchain, just pick tools that are good enough:\n Easy to get going: Your goal is ship useful code, and as a beginner time spent fiddling with your dev environment won\u2019t help with that.\n Once you have enough experience, you will start developing opinions.You might become choosy about which tools you use, or end up customizing them to your needs.You might even write an article about your particular dev environment and favorite tools.\n But however strong your preferences are, chances are that given tools you don\u2019t quite like as much, you will still do just fine.If you know what you\u2019re doing, you can chop vegetables with any sharp knife, even if it\u2019s not your favorite.\n     Tired of scrambling to get your job done?  If you were productive enough, you could take the afternoon off, confident you\u2019d produced high value work. Not to mention having an easier time finding a new job when you need one.  Learn the  secret skills of productive programmers.\n We all make mistakes, and I\u2019ve got 20 years\u2019 worth: from code that crashed production every night at 4AM, to accepting a preposterously bad job offer.  Every painful failure taught me a lesson\u2014but only after it was too late.  You can do better! Join 3900 other programmers, and every week you\u2019ll  learn how to avoid another of my mistakes.", "posttime": "2020-06-26 03:43:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u73af\u5883,environment,\u5de5\u5177", "title": "\u60a8\u7684\u5f00\u53d1\u73af\u5883\u6ca1\u6709\u60a8\u60f3\u8c61\u7684\u90a3\u4e48\u91cd\u8981", "title_en": "Your dev environment matters less than you think", "transed": 1, "url": "https://codewithoutrules.com/2020/06/25/dev-environment/", "via": "", "real_tags": ["\u5f00\u53d1", "\u73af\u5883", "\u5de5\u5177"]}, {"category": "", "categoryclass": "", "imagename": "84ceb200b2152e09ac97dfad13e885be.jpg", "infoid": 1008264, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3aCollision From Home\u5927\u4f1a\u7684\u4e00\u90e8\u5206\uff0cAClimate a\u9996\u5e2d\u6267\u884c\u5b98\u6234\u7ef4\u8fbe\u00b7\u8d6b\u5179\u5c14(Davida Herzl)\u5411\u79d1\u5b66\u754c\u514d\u8d39\u53d1\u5e03\u4e86\u4e0e\u8c37\u6b4c\u8054\u5408\u5236\u4f5c\u7684\u65b0\u6570\u636e\u96c6\u3002\n\u8fd9\u4e9b\u6570\u636e\u662f\u56db\u5e74\u6765\u6570\u636e\u6536\u96c6\u548c\u6c47\u603b\u7684\u9876\u5cf0\uff0c\u5bfc\u81f4\u52a0\u5dde\u5168\u5dde\u8fdb\u884c\u4e864200\u4e07\u6b21\u7a7a\u6c14\u8d28\u91cf\u6d4b\u91cf\u3002\n\u8be5\u516c\u53f8\u7684\u4f20\u611f\u548c\u5206\u6790\u5de5\u5177\u88ab\u96c6\u6210\u5230\u8c37\u6b4c\u8857\u666f\u8f66\u8f86\u4e2d\uff0c\u8be5\u8f66\u8f86\u5728\u5408\u8d44\u8fc7\u7a0b\u4e2d\u6d4b\u91cf\u4e86\u65e7\u91d1\u5c71\u6e7e\u533a\u3001\u6d1b\u6749\u77f6\u548c\u52a0\u5dde\u4e2d\u592e\u5c71\u8c37\u7684\u7a7a\u6c14\u6c61\u67d3\u7269\u548c\u6e29\u5ba4\u6c14\u4f53\u6c34\u5e73\u3002\n\u8fd9\u4e9b\u8f66\u8f86\u6536\u96c6\u4e86\u4e8c\u6c27\u5316\u78b3\u3001\u81ed\u6c27\u3001\u4e8c\u6c27\u5316\u6c2e\u3001\u4e00\u6c27\u5316\u6c2e\u3001\u7532\u70f7\u3001\u9ed1\u78b3\u548c\u7ec6\u9897\u7c92\u7269\u6c61\u67d3\u7269\u7684\u6570\u636e\u3002\u4e24\u5bb6\u516c\u53f8\u8868\u793a\uff0c\u6570\u636e\u96c6\u7684\u53d1\u5e03\u5e94\u8be5\u4f1a\u652f\u6301\u5bf9\u53ef\u4ee5\u901a\u8fc7\u7a7a\u6c14\u6c61\u67d3\u548c\u6e29\u5ba4\u6c14\u4f53\u6570\u636e\u6d4b\u91cf\u63a8\u8fdb\u7684\u9886\u57df\u7684\u7814\u7a76\u3002\n\u5fb7\u514b\u8428\u65af\u5927\u5b66\u5965\u65af\u6c40\u5206\u6821(University of Texas\uff0cAustin)\u548c\u73af\u5883\u4fdd\u62a4\u57fa\u91d1(Environmental Defense Fund)\u7684\u7814\u7a76\u4eba\u5458\u57282017\u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\u4f7f\u7528\u4e86\u7cbe\u9009\u7684\u6570\u636e\uff0c\u79f0\u57ce\u5e02\u8857\u533a\u4e4b\u95f4\u7684\u6c61\u67d3\u53ef\u80fd\u4f1a\u76f8\u5dee\u4e94\u5230\u516b\u500d\u30022018\u5e74\uff0cEDF\u548cKaiser Permanente\u53d1\u5e03\u4e86\u4e00\u9879\u7814\u7a76\uff0c\u5c06\u5965\u514b\u5170\u7684\u8857\u5934\u6c61\u67d3\u4e0e\u66f4\u9ad8\u7684\u5fc3\u810f\u75c5\u53d1\u75c5\u7387\u8054\u7cfb\u8d77\u6765\uff0c\u6700\u540e\u57282020\u5e74\uff0cAClimate a\u6570\u636e\u7684\u5b50\u96c6\u88ab\u7528\u6765\u4f30\u8ba1\u62e5\u5835\u6536\u8d39\u7684\u73af\u5883\u6548\u76ca\u3002\n\u73b0\u5728\uff0c\u6709\u4e86\u5411\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u7684\u5b8c\u6574\u7684\u52a0\u5dde\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\u96c6\uff0cAClimate a\u548c\u8c37\u6b4c\u6b63\u5728\u52a0\u500d\u52aa\u529b\uff0c\u4ed6\u4eec\u7684\u8bba\u70b9\u662f\uff0c\u6d4b\u91cf\u548c\u5206\u6790\u8857\u5934\u7a7a\u6c14\u8d28\u91cf\u5bf9\u4e8e\u63ed\u793a\u548c\u51cf\u5c11\u65e2\u635f\u5bb3\u5065\u5eb7\u53c8\u6539\u53d8\u6c14\u5019\u7684\u6392\u653e\u81f3\u5173\u91cd\u8981\uff0c\u8be5\u516c\u53f8\u8868\u793a\u3002", "note_en": "As part of the  Collision from Home conference, Aclima chief executive Davida Herzl released a new dataset made in conjunction with Google for free to the scientific community.\n The data is the culmination of four years of data collection and aggregation resulting in 42 million air quality measurements throughout the state of California.\n The company\u2019s sensing and analytics tools were integrated into  Google   Street View vehicles, which measured air pollutant and greenhouse gas levels in the San Francisco Bay Area, Los Angeles, and the California Central Valley over the course of the joint venture.\n  The vehicles collected data on carbon dioxide, ozone, nitrogen dioxide, nitric oxide, methane, black carbon and fine particulate pollutants. The two companies said that the release of the dataset should support research into fields that can be advanced by air pollution and greenhouse gas data measurement.\n Selections of the data were used by researchers from the University of Texas, Austin, and the Environmental Defense Fund for a 2017 paper that pollution can vary by five to eight times between city blocks. In 2018 the EDF and Kaiser Permanente released a study linking street level pollution n Oakland to higher incidences of heart disease and finally in 2020 a subset of the  Aclima   data was used to estimate the environmental benefits of congestion pricing.\n Now, with  this complete California air quality dataset to researchers, Aclima and Google are doubling down on their thesis that measuring and analyzing street-level air quality is essential to revealing and reducing the emissions that both damage health and change the climate, the company said.", "posttime": "2020-06-26 03:24:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u53d1\u5e03,\u8c37\u6b4c,california,\u6570\u636e", "title": "\nAClimate a\u548c\u8c37\u6b4c\u53d1\u5e03\u4e86\u4e00\u7ec4\u65b0\u7684\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\uff0c\u4f9b\u7814\u7a76\u4eba\u5458\u8c03\u67e5\u52a0\u5dde\u7684\u6c61\u67d3\u60c5\u51b5", "title_en": "\n\t\t\t\tAclima and Google release a new air quality data set for researchers to investigate California pollution\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/25/aclima-and-google-release-a-new-air-quality-data-set-for-researchers-to-investigate-california-pollution/", "via": "", "real_tags": ["google", "\u53d1\u5e03", "\u8c37\u6b4c", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008263, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5c06\u529f\u80fd\u5f3a\u5927\u7684H\u7ea7\u82f1\u7279\u5c14CPU\u548cNVIDIA RTX 20\u7cfb\u5217\u663e\u5361\u538b\u7f29\u5230\u8d85\u8584\u7684\u7b14\u8bb0\u672c\u7535\u8111\u673a\u8eab\u4e2d\u3002\u4f60\u4f1a\u4ece\u4e2d\u6324\u51fa\u54ea\u4e9b\u4ee4\u4eba\u60ca\u53f9\u7684\u521b\u65b0\u5462\uff1f\n\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b21\uff0c\u52a8\u611f\u5341\u8db3\u7684NVIDIA\u663e\u5361\u4e0e\u8f7b\u91cf\u7ea7System76 Open\u56fa\u4ef6\u5408\u4f5c\u3002\u4ece\u96f6\u5230\u5168\u901f\u524d\u8fdb\uff0c\u5fae\u4e0d\u8db3\u9053\u7684\u542f\u52a8\u65f6\u95f4\u548c\u4e00\u4e2a\u602a\u7269GPU\u5c31\u5728\u4f60\u8eab\u8fb9\u3002\n\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86System76 Embedded Controller\u56fa\u4ef6\uff0c\u8fd9\u662fGPLv3\u8bb8\u53ef\u7684\u4ee3\u7801\uff0c\u5141\u8bb8\u60a8\u8bbf\u95ee\u548c\u63a7\u5236\u91cd\u8981\u529f\u80fd\uff0c\u5982\u952e\u76d8\u3001\u98ce\u6247\u548c\u7535\u6c60\u3002\n\u4f7f\u7528POP\uff01_OS\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u63d0\u5347\u7535\u91cf\uff0c\u6216\u8005\u5728\u4e0d\u9700\u8981\u65f6\u8282\u7701\u7535\u6c60\u3002POP\uff01_OS\u5141\u8bb8\u60a8\u5728\u82f1\u7279\u5c14\u548cNVIDIA\u663e\u5361\u4e4b\u95f4\u5207\u6362\uff0c\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u60a8\u7684GPU\u542f\u52a8\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\nOryx Pro\u4e3a\u5b8c\u7f8e\u7684\u591a\u663e\u793a\u5668\u6307\u6325\u4e2d\u5fc3\u63d0\u4f9b\u52a8\u529b\uff0c\u901a\u8fc7USB-C\u4e3a\u60a8\u63d0\u4f9b1\u4e2a\u8ff7\u4f60DisplayPort\u30011\u4e2aHDMI\u7aef\u53e3\u548c1\u4e2aThunderbolt3\u7aef\u53e3\u3002\n\u5728\u6700\u5927\u8bbe\u7f6e\u4e0b\u73a9\u89c6\u89c9\u6548\u679c\u6700\u597d\u7684\u6e38\u620f\u3002\u5728\u9632\u7729\u5149\u54d1\u5149\u663e\u793a\u5c4f\u548c\u6d41\u7545\u7684\u952e\u76d8\u4e0a\u8212\u9002\u5730\u8fdb\u884c\u52a8\u753b\u5236\u4f5c\u3001\u5f00\u53d1\u3001\u521b\u5efa\u548c\u6e38\u620f\u3002\n\u7b2c\u5341\u4ee3\u82f1\u7279\u5c14\u00ae\u9177\u777fi7-10875H\uff0c2.3\uff0c\u9ad8\u8fbe5.1 GHz-16 MB\u9ad8\u901f\u7f13\u5b58-8\u6838-16\u4e2a\u7ebf\u7a0b\u3002\n\u5e26\u8fc5\u96f73\u7684USB 3.2 C\u578b\u30013 x USB 3.2(1 x\u4f9b\u7535USB\u3001AC/DC)\u3001SD\u5361\u8bfb\u5361\u5668\u3002\n2\u54081\u97f3\u9891\u63d2\u5b54(\u9ea6\u514b\u98ce/S/PDIF\u5149\u5b66\u8f93\u51fa)\u30012\u54081\u97f3\u9891\u63d2\u5b54(\u8033\u673a/\u9ea6\u514b\u98ce)\u3001\u7acb\u4f53\u58f0\u626c\u58f0\u5668", "note_en": "We squeezed a powerful H-class Intel CPU and NVIDIA RTX 20-Series graphics into an impressively thin laptop body. What amazing innovations will you squeeze out of it?\n  For the first time ever, action-packed NVIDIA graphics team up with lightweight  System76 Open Firmware. Go zero to full speed ahead with minuscule boot times and a monster GPU by your side.\n  We\u2019ve also added System76 Embedded Controller Firmware, which is  GPLv3 licensed code that grants you access and control over important functionality, such as your keyboard, fans, and battery.\n  Get a boost of power when you need it or save battery when you don\u2019t. Pop!_OS allows you to toggle between Intel and NVIDIA graphics, and even launch specific applications using your GPU.\n  Oryx Pro powers the perfect multi-monitor command center, providing you with 1 mini DisplayPort, 1 HDMI port, and 1 Thunderbolt 3 port via USB-C.\n  Play the most visually impressive games at their maximum settings. Animate, develop, create, and game comfortably on a glare-resistant matte display and fluid keyboard.\n    10th Gen Intel\u00ae Core i7-10875H, 2.3 up to 5.1 GHz \u2013 16 MB cache \u2013 8 cores \u2013 16 threads\n     USB 3.2 Type-C with Thunderbolt 3, 3 x USB 3.2 (1 x powered USB, AC/DC), SD Card Reader\n    2-in-1 Audio Jack (Microphone / S/PDIF Optical output), 2-in-1 Audio Jack (Headphone / Microphone), Stereo Speakers", "posttime": "2020-06-26 03:23:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u7b14\u8bb0\u672c\u7535\u8111,laptop,\u56fa\u4ef6", "title": "\u65b0\u7684System76\u7b14\u8bb0\u672c\u7535\u8111\uff1aOryx Pro", "title_en": "New system76 laptop: Oryx Pro", "transed": 1, "url": "https://system76.com/laptops/oryx", "via": "", "real_tags": ["\u7535\u8111", "\u7b14\u8bb0\u672c\u7535\u8111", "laptop", "\u56fa\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "27dd43a285dc2b169df6bce80da812a5.png", "infoid": 1008262, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60f3\u8981\u4e3a\u8fd9\u4e2a\u7ef4\u57fa\u505a\u8d21\u732e\u5417\uff1f\u7ee7\u7eed\u5427\uff01\u5982\u679c\u5b83\u4e0eEnki\u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u5173\uff0c\u6216\u8005\u4e0e\u5982\u4f55\u7f16\u5199\u7684\u7f16\u8f91\u6307\u5357\u6709\u5173\uff0c\u8ba9\u6211\u4eec\u6765\u5904\u7406\u3002\u5982\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8bf7\u4e0d\u8981\u7f16\u8f91\uff01", "note_en": "Want to contribute to this wiki? Go right ahead!If it has to do with how the Enki software ecosystem works, or editorial guidelines for how to write, let us handle that. Anything else, edit away!", "posttime": "2020-06-26 03:23:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u4e16\u754c,topics", "title": "\u73b0\u5b9e\u4e16\u754c\u8f6f\u4ef6\u5de5\u7a0b\u4e3b\u9898\u5217\u8868", "title_en": "List of topics for real world software engineering", "transed": 1, "url": "https://github.com/enkidevs/curriculum/wiki/List-Of-Topics", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u4e16\u754c", "topics"]}, {"category": "", "categoryclass": "", "imagename": "33e3471913f3e2e82cc1fc502c71a3ed.jpg", "infoid": 1008259, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6444\u5f71\u53d1\u660e\u7684\u70ed\u60c5\u6d0b\u6ea2\u7684\u5ba3\u4f20\u88ab\u4e00\u4e2a\u7f3a\u70b9\u6240\u7f13\u548c\uff1a\u5a92\u4f53\u7f3a\u4e4f\u8272\u5f69\u3002\u753b\u5bb6\u517c\u7535\u62a5\u53d1\u660e\u5bb6\u585e\u7f2a\u5c14\u00b7F\u00b7B\u00b7\u83ab\u5c14\u65af(Samuel F.B.Morse)\u5c06\u6cd5\u56fd\u827a\u672f\u5bb6\u8def\u6613\u65af-\u96c5\u514b-\u66fc\u5fb7\u00b7\u8fbe\u76d6\u5c14(Louis-Jacques-Mand\u00e9Daguerre)\u7684\u4f5c\u54c1\u6bd4\u4f5c\u4e2d\u95f4\u7248\u753b\u7684\u660e\u6697\u5bf9\u6bd4\u3002\u53e6\u4e00\u4f4d\u89c2\u5bdf\u5bb6\u6307\u51fa\uff0c\u201c\u5728\u6ca1\u6709\u989c\u8272\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u662f\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u7269\u4f53\u7684\u5b8c\u7f8e\u56fe\u50cf\uff0c\u5c31\u50cf\u90a3\u4e9b\u4ece\u9ad8\u5ea6\u629b\u5149\u7684\u8868\u9762\u53cd\u5c04\u6240\u89c1\u7684\u56fe\u50cf\u4e00\u6837\u3002\u201d\u5728\u7f8e\u56fd\u6700\u521d\u9881\u53d1\u7684\u4e94\u9879\u4e0e\u6444\u5f71\u6709\u5173\u7684\u4e13\u5229\u4e2d\uff0c\u6709\u4e09\u9879\u6d89\u53ca\u5a92\u4f53\u7684\u65e0\u8272\u6027\u3002\u8fd9\u4e9b\u6700\u521d\u7684\u6539\u8fdb\u63cf\u8ff0\u4e86\u901a\u8fc7\u7528\u989c\u6599\u624b\u7ed8\u6216\u901a\u8fc7\u9540\u950c\u5de5\u827a\u4e3a\u94f6\u7248\u5370\u5237\u673a\u8868\u9762\u589e\u52a0\u989c\u8272\u7684\u65b9\u5f0f\u3002\u8bb0\u5f55\u81ea\u7136\u8272\u5f69\u662f\u65e9\u671f\u6444\u5f71\u7684\u7406\u60f3\uff0c\u5c3d\u7ba1\u76f4\u5230\u4e8c\u5341\u4e16\u7eaa\u624d\u57fa\u672c\u5b9e\u73b0\u3002\n19\u4e16\u7eaa\u51fa\u7248\u7684\u51e0\u4e4e\u6bcf\u672c\u4e66\u957f\u7684\u624b\u518c\u4e2d\u90fd\u6709\u4e00\u7ae0\u662f\u5173\u4e8e\u7ed9\u7167\u7247\u4e0a\u8272\u6216\u7ed8\u753b\u7684\u3002\u5173\u4e8e\u5982\u4f55\u6dfb\u52a0\u989c\u8272\u7684\u6587\u7ae0\u4e5f\u5728\u6444\u5f71\u5370\u5237\u673a\u4e0a\u5927\u91cf\u6d8c\u73b0\u3002\u4e00\u4f4d\u4f5c\u5bb6\u63a8\u8bba\u9053\uff1a\u201c\u8272\u5f69\u7684\u7f3a\u4e4f\u4e3b\u8981\u4f53\u73b0\u5728\u8096\u50cf\u753b\u4e0a\uff0c\u8fd9\u79cd\u4e0d\u8db3\u7ed9\u4eba\u4e00\u79cd\u51b7\u51b0\u51b0\u7684\u3001\u8fd1\u4e4e\u82cd\u767d\u7684\u611f\u89c9\uff1b\u5b83\u4f7f\u8096\u50cf\u4e0d\u90a3\u4e48\u5b8c\u7f8e\uff0c\u5f80\u5f80\u7ed9\u4eba\u4e00\u79cd\u66f4\u8001\u7684\u611f\u89c9\u3002\u201d\u8fd9\u4f4d\u4f5c\u8005\u548c\u5176\u4ed6\u8bb8\u591a\u4eba\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u51c6\u5907\u56fe\u50cf\u8868\u9762\u7684\u65b9\u6cd5\uff0c\u63a8\u8350\u4e86\u753b\u7b14\u7684\u7c7b\u578b\u548c\u8981\u5728\u56fe\u7247\u7684\u6bcf\u4e2a\u533a\u57df\u4f7f\u7528\u7684\u7cbe\u786e\u989c\u6599\u3002\u8fd9\u4e9b\u6e05\u5355\u63ed\u793a\u4e86\u5f53\u65f6\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u79cd\u65cf\u5047\u8bbe\uff0c\u4e3a\u201c\u8089\u8272\u201d\u63d0\u4f9b\u4e86\u5355\u4e00\u7684\u914d\u65b9\uff0c\u540c\u65f6\u5c31\u5982\u4f55\u4e3a\u5de5\u4f5c\u5ba4\u5143\u7d20(\u4ece\u80cc\u666f\u548c\u5e03\u6599\u5230\u4e1d\u7ef8\u3001\u7fbd\u6bdb\u548c\u6bdb\u76ae)\u7740\u8272\u63d0\u4f9b\u4e86\u5e7f\u6cdb\u800c\u591a\u6837\u7684\u5efa\u8bae\u3002\n\u5728\u6b64\u671f\u95f4\uff0c\u5927\u591a\u6570\u5236\u7247\u5382\u90fd\u8fdb\u884c\u4e86\u7cbe\u5fc3\u7684\u5206\u5de5\uff0c\u8058\u8bf7\u52a9\u624b\u51c6\u5907\u5e95\u7247\uff0c\u8058\u8bf7\u64cd\u4f5c\u5458\u64cd\u4f5c\u76f8\u673a\uff0c\u8058\u8bf7\u753b\u5bb6\u5b8c\u6210\u51b2\u6d17\u540e\u7684\u753b\u9762\u3002\u6b63\u5982\u4e00\u4f4d\u8bc4\u8bba\u5bb6\u57281857\u5e74\u7ebd\u7ea6\u4e00\u6b21\u5c55\u89c8\u540e\u54c0\u53f9\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u989d\u5916\u7684\u53c2\u4e0e\u8005\u53ea\u662f\u5076\u5c14\u88ab\u70b9\u540d\uff1a\u201c\u6211\u4eec\u5f88\u9057\u61be\uff0c\u827a\u672f\u5bb6\u6ca1\u6709\u88ab\u5141\u8bb8\u5728\u6bcf\u5e45\u753b\u4e0a\u9644\u52a0\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u628a\u5b83\u7684Execution\u2026\u4e2d\u6240\u5c55\u793a\u7684\u4efb\u4f55\u6280\u5de7\u5f52\u529f\u4e8e\u6211\u4eec\u3002\u6211\u4eec\u4e0d\u80fd\u8ba4\u4e3a\u53c2\u5c55\u5546\u5e94\u8be5\u5f97\u5230\u6240\u6709\u7684\u8d5e\u8a89\u3002\u5e94\u8be5\u6839\u636e\u529f\u7ee9\u6765\u5212\u5206\u3002\u201c\u3002\u8fd9\u4f4d\u4f5c\u8005\u6240\u8bf4\u7684\u201c\u827a\u672f\u5bb6\u201d\u6307\u7684\u662f\u753b\u5bb6\uff0c\u800c\u4e0d\u662f\u6444\u5f71\u64cd\u4f5c\u5458\u6216\u6444\u5f71\u68da\u7684\u8001\u677f\u3002\u7531\u4e8e\u8fd9\u79cd\u4e0d\u5e73\u8861\uff0c\u4f5c\u8005\u5f97\u51fa\u7ed3\u8bba\uff0c\u624b\u8272\u7167\u7247\u4e0d\u5e94\u8be5\u5728\u6bd4\u8d5b\u4e2d\u88ab\u8bc4\u5224\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5236\u9020\u8005\u4ecd\u7136\u6ca1\u6709\u540d\u5b57\u3002\n\u5728\u7ed8\u753b\u7167\u7247\u6d41\u884c\u7684\u9f0e\u76db\u65f6\u671f\uff0c\u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u7167\u7247\u4e2d\u7684\u6444\u5f71\u5143\u7d20\u548c\u7ed8\u753b\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u5206\u6b67\uff0c\u751a\u81f3\u662f\u51b2\u7a81\u3002\u8bb8\u591a\u5982\u4f55\u64cd\u4f5c\u7684\u4f5c\u8005\u5728\u4ed6\u4eec\u7684\u6d82\u8272\u8bf4\u660e\u4e4b\u524d\u90fd\u8d2c\u4f4e\u4e86\u7ed8\u753b\u7167\u7247\uff0c\u58f0\u79f0\u4ed6\u4eec\u6c42\u52a9\u4e8e\u7740\u8272\u7167\u7247\u53ea\u662f\u4e3a\u4e86\u6ee1\u8db3\u516c\u4f17\u54c1\u5473\u7684\u7a81\u53d1\u5947\u60f3\u3002\u201c\u6c49\u5f17\u83b1\u6742\u5fd7\u201d\u7684\u4e00\u7bc7\u6587\u7ae0\u63a8\u8bba\u9053\uff1a\u201c\u5f69\u8272\u7167\u7247\u5360\u636e\u4e86\u4e00\u79cd\u4e0d\u5e94\u8be5\u53d7\u5230\u8d28\u7591\u7684\u5883\u5730\uff1a\u827a\u672f\u5bb6\u5bf9\u7740\u5b83\u4eec\u5f2f\u7740\u5634\u5507\uff0c\u6444\u5f71\u5e08\u5219\u51b7\u5632\u70ed\u8bbd\u5730\u770b\u7740\u5b83\u4eec\u3002\u4e00\u4e2a\u8bf4\u4e0d\u662f\u753b\uff0c\u4e00\u4e2a\u8bf4\u4e0d\u662f\u7167\u7247\uff0c\u6240\u4ee5\u6444\u5f71\u8272\u5f69\u8fd9\u95e8\u827a\u672f\uff0c\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u4e00\u65b9\u7684\u8ba4\u540c\uff0c\u4f46\u90fd\u70ed\u8877\u4e8e\u63a5\u53d7\uff0c\u8fd9\u624d\u662f\u6700\u5927\u7684\u6170\u85c9\u201c\uff0c\u4ed6\u8bf4\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4ed6\u8bf4\u8fd9\u4e0d\u662f\u753b\uff0c\u4ed6\u8bf4\u4ed6\u4e0d\u662f\u7167\u7247\u3002\u201d\u6c49\u5f17\u83b1\u751a\u81f3\u5efa\u8bae\u6f5c\u5728\u7684\u53c2\u5c55\u5546\u4e0d\u8981\u5728\u6444\u5f71\u6bd4\u8d5b\u4e2d\u5c55\u793a\u5f69\u8272\u94f6\u7248\uff0c\u4ed6\u575a\u6301\u8bf4\uff0c\u201c\u6ca1\u6709\u4e00\u4e2a\u719f\u7ec3\u7684\u64cd\u4f5c\u5458\u4f1a\u8bf4\u51fa\u50cf\u753b\u7b14\u4e00\u6837\u7cbe\u7ec6\u3001\u6e05\u6670\u3001\u8272\u8c03\u9c9c\u8273\u7684\u5f69\u8272\u5370\u8c61\u3002\u201d\n\u5728\u5927\u591a\u6570\u6444\u5f71\u5e08\u548c\u8bc4\u8bba\u5bb6\u4e2d\uff0c\u5bf9\u624b\u7ed8\u7684\u4e3b\u8981\u6279\u8bc4\u662f\u5b83\u6a21\u7cca\u4e86\u56fe\u50cf\u7684\u6444\u5f71\u672c\u8d28\uff0c\u4e3a\u4e86\u827a\u672f\u6548\u679c\u800c\u727a\u7272\u4e86\u771f\u5b9e\u4ef7\u503c\u3002\u96c5\u81f4\u7684\u8272\u5f69\u5e94\u8be5\u662f\u5fae\u5999\u7684\uff1b\u900f\u660e\u7684\u8272\u8c03\u5e94\u8be5\u52a0\u5f3a\uff0c\u4f46\u4e0d\u662f\u63a9\u76d6\u6444\u5f71\u7684\u7ec6\u8282\u3002\u6444\u5f71\u5e08\u4ea8\u5229\u00b7\u4ea8\u7279\u00b7\u65af\u5185\u6797\u540e\u6765\u6210\u4e3a\u201c\u6444\u5f71\u827a\u672f\u6742\u5fd7\u201d\u7684\u7f16\u8f91\uff0c\u4ed6\u5728\u81ea\u5df1\u7684\u6307\u5bfc\u624b\u518c\u4e2d\u5199\u9053\uff1a\u201c\u6211\u975e\u5e38\u6000\u7591\u7ed9\u94f6\u7248\u4e0a\u8272\u662f\u5426\u5408\u9002\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\uff0c\u81f3\u5c11\u73b0\u5728\u666e\u904d\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679c\u624b\u672f\u5bf9\u5b83\u4eec\u6709\u4ec0\u4e48\u6539\u5584\u7684\u8bdd\uff0c\u90a3\u4e5f\u662f\u5fae\u4e4e\u5176\u5fae\u7684\u3002\u201d\u5176\u4ed6\u4eba\u6307\u8d23\u6280\u80fd\u8f83\u5dee\u7684\u5de5\u4f5c\u5ba4\u4f7f\u7528\u624b\u7ed8\u6765\u63a9\u76d6\u6444\u5f71\u7f3a\u9677\uff0c\u5982\u7126\u8ddd\u4e0d\u4f73\u6216\u8272\u8c03\u8303\u56f4\u6709\u9650\u3002\u4f26\u6566\u5927\u5c55\u7684\u4e00\u7bc7\u5173\u4e8e\u7ed8\u753b\u94f6\u7248\u7684\u8bc4\u8bba\u8ba4\u4e3a\uff1a\u201c\u5728\u6211\u4eec\u770b\u6765\uff0c\u7ed9\u7167\u7247\u4e0a\u8272\u7684\u8fc7\u7a0b\u5bf9\u827a\u672f\u6781\u4e3a\u6709\u5bb3\u3002\u4e0d\u597d\u7684\u94f6\u7248\u53ef\u80fd\u4f1a\u88ab\u6d82\u4e0a\u6cb9\u6f06\uff0c\u5192\u5145\u6210\u76f8\u5f53\u6210\u529f\u7684\u7167\u7247\u3002\u201c\u3002\n\u56de\u987e\u6444\u5f71\u7684\u7b2c\u4e00\u4e2a\u5341\u5e74\uff0c\u7f16\u8f91\u517c\u51fa\u7248\u5546\u585e\u7f2a\u5c14\u00b7\u6c49\u5f17\u83b1(Samuel Humphrey)\u57281849\u5e74\u5199\u9053\uff1a\u201c\u867d\u7136\u5b83\u672c\u8eab\u53ea\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u5b83(\u7740\u8272\u8fc7\u7a0b)\u5f15\u8d77\u7684\u8f70\u52a8\u6bd4\u6240\u6709\u5176\u4ed6\u6539\u8fdb\u7684\u603b\u548c\u8fd8\u8981\u591a\u3002\u201d\u4e0a\u8272\uff0c\u6216\u201c\u624b\u7ed8\u201d\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u5f15\u5165\u673a\u68b0\u4e4b\u540e\u88ab\u79f0\u4e3a\u201c\u624b\u7ed8\u201d\u7684\u3002\n\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u7b2c\u4e00\u4e2a\u7b54\u6848\u662f\u6444\u5f71\u5e08\u53ea\u9700\u7b80\u5355\u5730\u5728\u5e95\u7247\u4e0a\u4ee4\u4eba\u4e0d\u5feb\u7684\u90e8\u5206\u6d82\u62b9\uff0c\u6216\u8005\u7528\u5370\u5ea6\u58a8\u6c34\u5c06\u5176\u6d82\u9ed1\uff0c\u8fd9\u6837\u6b63\u7247\u4e0a\u5c31\u6839\u672c\u770b\u4e0d\u5230\u4efb\u4f55\u7ec6\u8282\u3002\u8fd9\u6761\u5efa\u8bae\u4e00\u76f4\u6d41\u884c\u523019\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u5f53\u65f6\u4e00\u7bc7\u9488\u5bf9\u65b0\u5174\u4e1a\u4f59\u6444\u5f71\u5e08\u9636\u5c42\u7684\u6587\u7ae0\u5efa\u8bae\uff0c\u201c\u6444\u5f71\u5e08\u6c38\u8fdc\u4e0d\u5e94\u8be5\u6ee1\u8db3\u4e8e\u80ae\u810f\u9634\u6697\u7684\u5929\u7a7a\uff0c\u800c\u8981\u76f8\u4fe1\u4ed6\u7a33\u624e\u7a33\u6253\u7684\u624b\u80fd\u7528\u4e0d\u900f\u660e\u7684\u65b9\u5f0f\u628a\u5e95\u7247\u6321\u4f4f\u3002\u201d\u5f53\u5730\u5e73\u7ebf\u89c4\u5219\u65f6\uff0c\u8fd9\u9879\u6280\u672f\u5f88\u5bb9\u6613\u5b8c\u6210\uff0c\u4f46\u5f15\u5165\u4efb\u4f55\u7a81\u51fa\u7684\u90e8\u5206\uff0c\u7279\u522b\u662f\u6811\u53f6\uff0c\u4f7f\u4efb\u52a1\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\n\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\u662f\u6ca1\u6709\u4e91\uff0c\u9700\u8981\u6444\u5f71\u5e08\u5236\u4f5c\u4e24\u5f20\u5e95\u7247\uff0c\u4e00\u5f20\u4e3a\u98ce\u666f\u66dd\u5149\uff0c\u53e6\u4e00\u5f20\u4e3a\u5929\u7a7a\u66dd\u5149\uff0c\u7136\u540e\u5c06\u8fd9\u4e24\u5f20\u5e95\u7247\u7ec4\u5408\u5728\u4e00\u8d77\u8fdb\u884c\u6253\u5370\u3002\u4e00\u4e9b\u4eba\u5728\u4e0d\u540c\u7684\u5730\u70b9\u8fdb\u884c\u4e86\u4e91\u7814\u7a76\uff0c\u5982\u679c\u539f\u59cb\u89c6\u56fe\u4e2d\u7684\u4e91\u88ab\u8bc1\u660e\u4e0d\u4e0a\u955c\u7684\u8bdd\u3002\u5076\u5c14\uff0c\u4f5c\u5bb6\u4eec\u4f1a\u8b66\u544a\u8bf4\uff0c\u201c\u8981\u4f7f\u8fd9\u4e9b\u4e91\u4e0e\u5b83\u4eec\u4e0d\u5c5e\u4e8e\u7684\u89c2\u70b9\u76f8\u534f\u8c03\uff0c\u603b\u662f\u4f1a\u6709\u6781\u5927\u7684\u56f0\u96be\u201d\uff0c\u4f46\u5728\u6574\u4e2a19\u4e16\u7eaa\uff0c\u88ab\u79f0\u4e3a\u201c\u7ec4\u5408\u5370\u5237\u201d\u7684\u7ec4\u5408\u5370\u5237\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u98ce\u666f\u4e2d\u3002\u6cd5\u56fd\u6444\u5f71\u5e08\u53e4\u65af\u5854\u592b\u00b7\u52d2\u00b7\u683c\u96f7(Gustave Le Gray)\u56e0\u5176\u620f\u5267\u6027\u7684\u6d77\u666f\u800c\u95fb\u540d\u56fd\u9645\uff0c\u4ed6\u7684\u6d77\u666f\u4ee5\u5927\u7247\u4e91\u56e2\u4e3a\u7279\u8272\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u7ec4\u5408\u5370\u5237\u4ea7\u751f\u7684\u3002\n\u5373\u4f7f\u572819\u4e16\u7eaa60\u5e74\u4ee3\u4ee5\u540e\uff0c\u5f53\u7528\u6539\u8fdb\u7684\u6444\u5f71\u65b9\u6cd5\u963b\u6b62\u4e91\u5c42\u79fb\u52a8\u53d8\u5f97\u66f4\u52a0\u53ef\u884c\u65f6\uff0c\u7ec4\u5408\u6253\u5370\u6280\u672f\u4ecd\u7136\u5f88\u53d7\u6b22\u8fce\u3002\u4e00\u4f4d\u8457\u540d\u7684\u82f1\u56fd\u6444\u5f71\u5e08\u62b1\u6028\u8bf4\uff0c\u7ec4\u5408\u6253\u5370\u6ca1\u6709\u827a\u672f\u6027\uff0c\u58f0\u79f0\u201c\u7b49\u5230\u5408\u9002\u7684\u4e91\u51fa\u73b0\u5728\u573a\u666f\u4e2d\uff0c\u6bd4\u4ece\u76d2\u5b50\u91cc\u9009\u62e9\u5408\u9002\u7684\u4e91\u5e76\u6253\u5370\u51fa\u6765\u66f4\u5408\u6cd5\u3002\u201d\u4e00\u4f4d\u70ed\u60c5\u7684\u4e1a\u4f59\u7231\u597d\u8005\u5728\u5370\u5237\u54c1\u4e0a\u56de\u5e94\u8bf4\uff1a\u201c\u5728\u6211\u770b\u6765\uff0c\u7528\u5355\u72ec\u7684\u5e95\u7247\u5728\u4e91\u4e2d\u5370\u5237\uff0c\u5982\u679c\u5904\u7406\u5f97\u5f53\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u827a\u672f\u7684\u6539\u8fdb\uff0c\u6211\u770b\u4e0d\u51fa\u4e3a\u4ec0\u4e48\u8981\u5bf9\u5b83\u91c7\u53d6\u4efb\u4f55\u4f8b\u5916\u3002\u5929\u7a7a\u53ef\u80fd\u662f\u5b8c\u5168\u4e0d\u5408\u9002\u7684\uff0c\u800c\u4e14\u7ecf\u5e38\u662f\u8fd9\u6837\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u53cd\u5bf9\u4ee5\u9002\u5f53\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u7684\u7406\u7531\u3002\u201c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6210\u529f\u5730\u5728\u4ed6\u4eec\u7684\u7167\u7247\u4e2d\u52a0\u5165\u8fd9\u79cd\u6c1b\u56f4\u7684\u6444\u5f71\u5e08\u53d7\u5230\u4e86\u5e7f\u6cdb\u7684\u94a6\u4f69\uff0c\u65e0\u8bba\u6548\u679c\u662f\u5982\u4f55\u83b7\u5f97\u7684\u3002\u8bc4\u8bba\u5bb6\u8d6b\u5c14\u66fc\u00b7\u6c83\u683c\u5c14(Hermann Vogel)\u57281873\u5e74\u7ef4\u4e5f\u7eb3\u56fd\u9645\u5c55\u89c8\u4e0a\u62a5\u9053\u65f6\u79f0\u8d5e\u4e86\u4e00\u7ec4\u4f18\u80dc\u7f8e\u5730(Yosemite)\u7167\u7247\uff0c\u6307\u51fa\u57c3\u5fb7\u6c83\u5fb7\u00b7\u8fc8\u5e03\u91cc\u5947(Eadweard)\u201c\u8fc8\u5e03\u91cc\u5947\u6700\u7a81\u51fa\u7684\u7279\u70b9\u662f\u51fa\u8272\u7684\u4e91\u5f69\u6548\u679c\uff0c\u5728\u8fd9\u4e9b\u5927\u7167\u7247\u4e2d\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u683c\u5916\u7cbe\u7ec6\u3002\u201d\n\u9664\u4e86\u4ece\u76d2\u5b50\u91cc\u6311\u51fa\u4e91\u5916\uff0c\u6444\u5f71\u5e08\u8fd8\u53ef\u4ee5\u5728\u66dd\u5149\u671f\u95f4\u906e\u853d\u5929\u7a7a\uff0c\u4ee5\u5728\u6784\u56fe\u7684\u660e\u6697\u533a\u57df\u4e4b\u95f4\u5b9e\u73b0\u9002\u5f53\u7684\u5e73\u8861\u3002\u5230\u4e8619\u4e16\u7eaa80\u5e74\u4ee3\u4e2d\u671f\uff0c\u8fd9\u662f\u5bf9\u505a\u666f\u89c2\u5de5\u4f5c\u7684\u4e1a\u4f59\u7231\u597d\u8005\u7684\u4e3b\u8981\u5efa\u8bae\u4e4b\u4e00\uff1a\u201c\u5927\u591a\u6570\u64cd\u4f5c\u5458\u5728\u524d\u9762\u4f7f\u7528\u4ece\u955c\u5934\u9876\u90e8\u94f0\u94fe\u7684\u895f\u7ffc\uff0c\u8fd9\u6837\u53ef\u4ee5\u906e\u853d\u5929\u7a7a\uff0c\u9632\u6b62\u5b83\u8d85\u65f6\u3002\u4e00\u5b9a\u8981\u6ce8\u610f\u8ba9\u895f\u7ffc\u4fdd\u6301\u5e73\u7f13\u8fd0\u52a8\uff0c\u5426\u5219\u4f1a\u5728\u677f\u4e0a\u5f62\u6210\u4e00\u6761\u575a\u786c\u3001\u6e05\u6670\u7684\u7ebf\u6761\u3002\u201c\u3002\n\u5e73\u8861\u660e\u4eae\u7684\u5929\u7a7a\u548c\u98ce\u666f\u7684\u66dd\u5149\u5728\u4eca\u5929\u4ecd\u7136\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u56e0\u4e3a\u4eba\u7c7b\u611f\u77e5\u7684\u52a8\u6001\u8303\u56f4\u751a\u81f3\u6bd4\u6700\u597d\u7684\u6570\u7801\u76f8\u673a\u90fd\u8981\u5bbd\u5f97\u591a\u3002\u6e10\u53d8\u6ee4\u5149\u7247\u51cf\u5c11\u4e86\u8fdb\u5165\u955c\u5934\u4e0a\u534a\u90e8\u5206\u7684\u5149\u91cf\uff0c\u5e76\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u6e05\u6670\u6216\u4e2d\u6027\u7684\u4e0b\u534a\u90e8\u5206\uff0c\u81ea20\u4e16\u7eaa\u521d\u4ee5\u6765\u4e00\u76f4\u5728\u4f7f\u7528\uff0c\u81f3\u4eca\u4ecd\u53d7\u5230\u5f53\u4ee3\u98ce\u666f\u6444\u5f71\u5e08\u7684\u6b22\u8fce\uff0c\u4ed6\u4eec\u5e0c\u671b\u7167\u539f\u6837\u8bb0\u5f55\u4e91\u5f69\uff0c\u800c\u4e0d\u662f\u7a0d\u540e\u5c06\u5b83\u4eec\u4ece\u76d2\u5b50(\u6216\u6570\u5b57\u6587\u4ef6)\u4e2d\u6311\u9009\u51fa\u6765\u3002\n\u8282\u9009\u81ea\u201c\u597d\u7167\u7247\uff1a\u6d41\u884c\u6444\u5f71\u53f2\u201d\uff0c\u4f5c\u8005\uff1aKim Beil\uff0c\u65af\u5766\u798f\u5927\u5b66\u51fa\u7248\u793e\u51fa\u7248\u3002\u00a92020\u7531\u5229\u5170\u00b7\u65af\u5766\u798f\u521d\u7ea7\u5927\u5b66\u8463\u4e8b\u4f1a\u63d0\u4f9b\u3002\u7248\u6743\u6240\u6709\u3002\nKim Beil\u5728\u65af\u5766\u798f\u5927\u5b66\u6559\u6388\u827a\u672f\u53f2\uff0c\u5e76\u4e3a\u201c\u827a\u672f\u8bba\u575b\u201d(ArtForum)\u3001\u201c\u7f8e\u56fd\u827a\u672f\u201d(Art In America)\u548c\u201c\u6444\u5f71\u201d(Photograph)\u7b49\u51fa\u7248\u7269\u64b0\u5199\u6709\u5173\u73b0\u5f53\u4ee3\u827a\u672f\u7684\u6587\u7ae0\u3002\u5979\u662f\u201c\u597d\u7167\u7247\uff1a\u6d41\u884c\u6444\u5f71\u53f2\u201d\u7684\u4f5c\u8005\u3002", "note_en": "Ebullient announcements of photography\u2019s invention were tempered by one shortcoming: the medium\u2019s lack of color. Painter and telegraph inventor Samuel F.B. Morse likened the French artist Louis-Jacques-Mand\u00e9 Daguerre\u2019s work to the chiaroscuro of mezzotint prints. Another observer noted, \u201cin the absence of color they are as perfect images of the objects they represent, as are those which are seen by reflection from a highly polished surface.\u201d Of the first five patents issued in the United States related to photography, three concerned the medium\u2019s colorlessness. These initial improvements described modes of adding color to the surface of the daguerreotype by hand painting with pigments or through a galvanizing process. The recording of natural color was the desideratum of early photography, although it remained largely unattainable until the twentieth century.\n Nearly every book-length manual published in the nineteenth century included a chapter on coloring or painting photographs. How-to articles on adding color also proliferated in the photographic press. One writer reasoned, \u201cThe want of color is chiefly felt in portraits; this deficiency imparts a cold and almost cadaverous air; it renders the likeness less perfect, and often gives an appearance of greater age.\u201d This author and many others detailed methods for preparing the surface of the image, recommending types of brushes and the precise pigments to use on each area of the picture. These lists reveal the dominant racial assumptions of the time, providing a single formula for \u201cflesh tints,\u201d while offering extensive and varied advice on how to color studio elements from backdrops and drapery to silks, feathers, and furs.\n  Most studios practiced an elaborate division of labor during this period, employing assistants to prepare the plates, operators to work the camera, and painters to complete the pictures after development. Only occasionally were these additional participants named, as a critic lamented following an 1857 exhibition in New York: \u201cWe regret that the artist has not been permitted to attach his name to each picture, that we might give the credit for whatever skill is evinced in its execution\u2026We cannot consider that the exhibitor should receive all the praise. It should be divided according to merit.\u201d By \u201cartist,\u201d this author meant the painter, not the camera operator or the owner of the photographic studio. As a result of this imbalance, the author concluded that hand-colored photographs should not be judged in the contest because their makers remained unnamed.\n The perception of a division, or even a conflict, between the photographic and the painterly elements in pictures was common during the peak popularity of painted photographs. Many how-to authors prefaced their coloring instructions by disparaging painted photographs, claiming that they resorted to tinting photographs only to satisfy the whims of public taste. An article in  Humphrey\u2019 s Journal reasoned, \u201cColored photographs occupy an undeservedly questionable situation: the artist curls his lip at them, and the photographer regards them with a sneer. The one says they are no paintings, the other that they are no photographs; thus the art of photographic coloring, unrecognized by either, must seek consolation in the fact that it is embraced nonetheless eagerly by both.\u201d  Humphrey\u2019 s even advised potential exhibitors against showing colored daguerreotypes at photographic competitions, maintaining, \u201cThere is not a skillful operator who will pronounce a colored impression equal to one with a fine, clear, brilliant-toned impression untarnished by the brush.\u201d\n  Among most photographers and critics, the chief criticism of hand painting was that it obscured the photographic nature of the image, sacrificing truth-value for artistic effects. Tasteful coloring was meant to be subtle; transparent hues should enhance, but not conceal, photographic detail. Photographer Henry Hunt Snelling, who would later become editor of the  Photographic Art Journal, wrote in his own instructional manual, \u201cI very much doubt the propriety of coloring the daguerreotypes, as I am of the opinion that they are little, if any, improved by the operation, at least as it is now generally practiced.\u201d Others accused less skilled studios of using hand painting to cover up photographic defects, such as poor focus or limited tonal range. A review of painted daguerreotypes at London\u2019s Great Exhibition argued, \u201cThe process of coloring photographs is, it appears to us, exceedingly detrimental to the art. Bad daguerreotypes may be painted up and passed off as tolerably successful photographs.\u201d\n Looking back over photography\u2019s first decade, editor and publisher Samuel Humphrey wrote in 1849, \u201cThough in itself a small affair, it [the process of coloring] has created more popular clamor than all other improvements combined.\u201d Coloring, tinting, painting, or \u201chand painting,\u201d as it came to be called after the introduction of mechanical and chemical methods of recording coloring, endures as one of the prime aesthetic markers of early photography. Despite purists\u2019 criticisms, hand coloring remained popular from the early 1840s through the craze for card portraiture that lasted into the 1880s. By 1894, however,  Wilson\u2019 s Cyclopedic Photography noted, \u201cFormerly the demand for tinted and colored photographs was considerable; today, however, it can hardly be said to exist.\u201d In its heyday, hand coloring was recognized with all the fervor of any fashionable trend, attracting attention and derision in almost equal measure for nearly half a century.\n  The subjects of early photographs lived all their days under cloudless skies. Neither daguerreotypes nor Talbot\u2019s paper negative process could easily capture drifting clouds. One writer reflected on the daguerreotype era, noting that \u201cthe sky was represented by a dull, uniform tint of a slaty blue color, without perspective or depth, and the complete want of every living creature gave the pictures a deserted and mournful appearance.\u201d Initially it was assumed that representing clouds in photographs was impossible, and some operators took to painting them in with ink on the back of paper negatives before printing. With improvement in lenses and the invention of the collodion process, the fleecy sky seemed to be within reach by the 1850s. Collodion\u2019s color sensitivity was limited to blue light, though, so balancing the exposure for the blue sky against the lengthier one required for the green landscape remained a challenge. During this period, instructional manuals and photographic journals regularly printed recommendations for how to achieve cloud effects, \u201cwhether by natural means or dodges,\u201d as one photographer put it.\n Not only were photographers frustrated by the lack of clouds, which could make a stormy seascape roil beneath a paradoxically empty sky, but they also despaired of what remained in place of the clouds. When the sky was overexposed, the thin negative revealed the blotchy and streaky evidence of chemical pours on the plate. This defect was considered so grave as to completely ruin a photograph. One critic argued that such \u201cstreaks\u2026often spoil fine pictures and oblige us to throw them aside.\u201d Others noted that the clear negative revealed a \u201cheavy, dingy, blotty proof\u201d or complained that the sky appeared \u201cdirty.\u201d\n The first answer to these woes called for the photographer to simply paint over the offending part of the negative or black it out with india ink, so that no detail at all appeared in the positive print. This advice was popular well into the 1880s, when an article for the burgeoning class of amateur photographers suggested, \u201cThe photographer should never rest satisfied with smutty dull skies, trusting to his steady hand to block them out of the negative with opaque.\u201d The technique was easily accomplished when the horizon was regular, but the introduction of any protruding bits, especially foliage, complicated the task significantly.\n  A still more involved solution to the absence of clouds required that the photographer make two negatives, exposing one for the landscape and the other for the sky, then combine the pair in printing. Some made cloud studies at different sites, should clouds in the original view prove unphotogenic. Occasionally writers warned that \u201cthere will always be an extreme difficulty in harmonizing these clouds with a view to which they do not belong,\u201d but combination printing, as it was called, was widely employed for landscapes throughout the nineteenth century. The French photographer Gustave Le Gray was celebrated internationally for his dramatic seascapes, which featured large cloud masses, often created through combination printing.\n Even after the 1860s, when it became more feasible to arrest the movement of clouds with improved photographic methods, the technique of combination printing remained popular. A prominent British photographer complained that combination printing was inartistic, claiming \u201cit is more legitimate to wait till a suitable cloud comes on the scene than to select a suitable cloud from a box and print it in.\u201d An enthusiastic amateur responded in print, \u201cPrinting in clouds from a separate negative is, to my thinking, when properly done, a very artistic improvement, and I fail to see why any exception should be taken to it. Skies utterly inappropriate may be added, and frequently are, but that is no argument against their use in a proper manner.\u201d Indeed, photographers who managed to include such atmosphere in their prints were widely admired, regardless of how the effects were attained. Reporting from the 1873 international exhibition in Vienna, the critic Hermann Vogel praised a group of Yosemite photographs, noting Eadweard \u201cMuybridge, above all others, is distinguished by superb cloud effects, which, in these large pictures, look extraordinary fine.\u201d\n  Apart from picking clouds out of a box, photographers could also mask the sky during exposure to achieve the proper balance between light and dark areas of the composition. By the mid-1880s, this was among the leading recommendations for amateurs doing landscape work: \u201cMost operators employ the flap in front hinged from the top of the lens, which, by shading the sky, prevents it from being over-timed. Care must be taken to keep the flap in gentle motion, otherwise a rigid, distinct line will be formed on the plate.\u201d\n Balancing the exposure of a bright sky against the landscape remains a challenge today, as humans perceive a much wider dynamic range than even the best digital cameras. Graduated filters, which reduce the amount of light entering the top half of the lens and transition smoothly to a clear or neutral lower half, have been in use since the early twentieth century and are still popular among contemporary landscape photographers who wish to record the clouds as they are rather than picking them out a box (or digital file) later.\n  Excerpted from  Good Pictures: A History of Popular Photography  by Kim Beil, published by Stanford University Press. \u00a9 2020 by the Board of Trustees of the Leland Stanford Junior University. All Rights Reserved.\n  Kim Beil teaches art history at Stanford University and writes about modern and contemporary art for publications including  Artforum,  Art in America, and  Photograph. She is the author of  Good Pictures: A History of Popular Photography.", "posttime": "2020-06-26 03:21:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e16\u754c,world,\u6444\u5f71", "title": "\u6ca1\u6709\u4e91\u7684\u4e16\u754c\uff1a\u8ba9\u7167\u7247\u770b\u8d77\u6765\u66f4\u50cf\u4e16\u754c\u7684\u65e9\u671f\u5c1d\u8bd5", "title_en": "A World Without Clouds: early attempts to make photos look more like the world", "transed": 1, "url": "https://www.laphamsquarterly.org/roundtable/world-without-clouds", "via": "", "real_tags": ["\u4e16\u754c", "world", "\u6444\u5f71"]}, {"category": "", "categoryclass": "", "imagename": "3e770159d824257732cc2ab3152524f2.jpg", "infoid": 1008258, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u83b7\u53d6\u7a81\u53d1\u65b0\u95fb\u8b66\u62a5\u548c\u7279\u522b\u62a5\u9053\u3002\u91cd\u8981\u7684\u65b0\u95fb\u548c\u6545\u4e8b\u4f1a\u5728\u5de5\u4f5c\u65e5\u65e9\u4e0a\u53d1\u5e03\u3002\n\u8ba2\u9605\u3002\n\u5468\u56db\uff0c\u9a6c\u8428\u8bf8\u585e\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u57c3\u5fb7\u00b7\u9a6c\u57fa(Ed Markey)\u548c\u4fc4\u52d2\u5188\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u6770\u592b\u00b7\u9ed8\u514b\u5229(Jeff Merkley)\u63d0\u51fa\u7acb\u6cd5\uff0c\u8bd5\u56fe\u7981\u6b62\u8054\u90a6\u6267\u6cd5\u673a\u6784\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u548c\u5176\u4ed6\u751f\u7269\u8bc6\u522b\u76d1\u63a7\u6280\u672f\u3002\n\u8fd9\u9879\u7acb\u6cd5\u8fd8\u5c06\u4f7f\u5dde\u548c\u5730\u65b9\u6267\u6cd5\u7684\u8054\u90a6\u8d44\u91d1\u53d6\u51b3\u4e8e\u7c7b\u4f3c\u7981\u4ee4\u7684\u9881\u5e03\u3002\n\u9762\u90e8\u8bc6\u522b\u548c\u751f\u7269\u8bc6\u522b\u6280\u672f\u6682\u505c\u6cd5\u6848\u5f97\u5230\u4e86\u9a6c\u8428\u8bf8\u585e\u5dde\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u963f\u4e9a\u5a1c\u00b7\u666e\u96f7\u65af\u5229(Ayanna Pressley)\u548c\u534e\u76db\u987f\u5dde\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u666e\u62c9\u7c73\u62c9\u00b7\u8d3e\u4e9a\u5e15\u5c14(Pramila Jayapal)\u7684\u652f\u6301\u3002\u8fd9\u4e00\u4e8b\u4ef6\u53d1\u751f\u57285\u6708\u4e0b\u65ec\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u65b9\u62d8\u7559\u671f\u95f4\u88ab\u6740\u540e\uff0c\u4eba\u4eec\u5bf9\u8b66\u52a1\u548c\u76d1\u63a7\u5de5\u5177\u8fdb\u884c\u4e86\u4e25\u683c\u5ba1\u67e5\uff0c\u5e76\u51fa\u73b0\u4e86\u5e7f\u6cdb\u7684\u6297\u8bae\u6d3b\u52a8\u3002\n\u9a6c\u57fa\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u9762\u90e8\u8bc6\u522b\u6280\u672f\u4e0d\u4ec5\u5bf9\u6211\u4eec\u7684\u9690\u79c1\u6784\u6210\u4e25\u91cd\u5a01\u80c1\uff0c\u5b83\u8fd8\u5728\u8eab\u4f53\u4e0a\u5371\u53ca\u7f8e\u56fd\u9ed1\u4eba\u548c\u6211\u4eec\u56fd\u5bb6\u7684\u5176\u4ed6\u5c11\u6570\u65cf\u88d4\u4eba\u53e3\u3002\u201d\u201c\u5f53\u6211\u4eec\u52aa\u529b\u6d88\u9664\u6e17\u900f\u5230\u6211\u4eec\u793e\u4f1a\u5404\u4e2a\u90e8\u5206\u7684\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u5ffd\u89c6\u8fd9\u4e9b\u6280\u672f\u5e26\u6765\u7684\u5371\u5bb3\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u7981\u6b62\u653f\u5e9c\u4f7f\u7528\u76d1\u63a7\u6280\u672f\u662f\u552f\u4e00\u8d1f\u8d23\u4efb\u7684\u4e8b\u60c5\u3002\n\u5c06\u5173\u4e8e\u5feb\u901f\u53d8\u5316\u7684\u5a92\u4f53\u548c\u6280\u672f\u4e16\u754c\u7684\u7a81\u53d1\u65b0\u95fb\u548c\u5185\u90e8\u5206\u6790\u76f4\u63a5\u53d1\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\u3002\n\u8be5\u6cd5\u6848\u5c06\u4f7f\u4efb\u4f55\u8054\u90a6\u673a\u6784\u6216\u5b98\u5458\u5728\u7f8e\u56fd\u201c\u83b7\u53d6\u3001\u62e5\u6709\u3001\u83b7\u53d6\u6216\u4f7f\u7528\u201d\u751f\u7269\u8bc6\u522b\u76d1\u63a7\u6280\u672f\u90fd\u662f\u975e\u6cd5\u7684\u3002\u5b83\u8fd8\u5c06\u7981\u6b62\u4f7f\u7528\u8054\u90a6\u8d44\u91d1\u8d2d\u4e70\u6b64\u7c7b\u6280\u672f\u3002\n\u8be5\u6cd5\u6848\u89c4\u5b9a\uff0c\u53ea\u6709\u5728\u8054\u90a6\u6cd5\u5f8b\u6709\u4e00\u957f\u4e32\u6761\u6b3e\u4ee5\u786e\u4fdd\u6781\u5176\u8c28\u614e\u5730\u4f7f\u7528\u8fd9\u79cd\u76d1\u63a7\u6280\u672f\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u76d1\u63a7\u6280\u672f\u3002\u4efb\u4f55\u8fd9\u6837\u7684\u8054\u90a6\u6cd5\u5f8b\u90fd\u9700\u8981\u89c4\u5b9a\u4f7f\u7528\u3001\u8bbf\u95ee\u548c\u4fdd\u7559\u4ece\u751f\u7269\u8bc6\u522b\u76d1\u63a7\u7cfb\u7edf\u6536\u96c6\u7684\u6570\u636e\u7684\u6807\u51c6\uff1b\u6309\u6027\u522b\u3001\u80a4\u8272\u548c\u5e74\u9f84\u5212\u5206\u7684\u51c6\u786e\u7387\u6807\u51c6\uff1b\u5bf9\u6b63\u5f53\u7a0b\u5e8f\u3001\u9690\u79c1\u3001\u8a00\u8bba\u81ea\u7531\u4ee5\u53ca\u79cd\u65cf\u3001\u6027\u522b\u548c\u5b97\u6559\u516c\u5e73\u7684\u4e25\u683c\u4fdd\u62a4\uff1b\u4ee5\u53ca\u786e\u4fdd\u9075\u5b88\u8be5\u6cd5\u6848\u7684\u673a\u5236\u3002\n\u5b83\u8fd8\u89c4\u5b9a\uff0c\u5730\u65b9\u6216\u5dde\u653f\u5e9c\u5728\u6ca1\u6709\u9075\u5b88\u7c7b\u4f3c\u6cd5\u5f8b\u6216\u653f\u7b56\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6ca1\u6709\u8d44\u683c\u6839\u636e\u7231\u5fb7\u534e\u00b7\u4f2f\u6069\u7eaa\u5ff5\u53f8\u6cd5\u63f4\u52a9\u62e8\u6b3e\u8ba1\u5212(Edward Byrne Memorial Justice Aid Grant Program)\u83b7\u5f97\u8054\u90a6\u8d22\u653f\u63f4\u52a9\uff0c\u8be5\u8ba1\u5212\u4e3a\u8b66\u5bdf\u57f9\u8bad\u3001\u8bbe\u5907\u548c\u7528\u54c1\u63d0\u4f9b\u8d44\u91d1\u3002\n\u5728\u63d0\u51fa\u8be5\u6cd5\u6848\u4e4b\u524d\uff0c\u5305\u62ec\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(American Civil Liberties Union)\u548c\u56fd\u9645\u7279\u8d66\u7ec4\u7ec7\u5728\u5185\u7684\u516c\u6c11\u81ea\u7531\u548c\u4eba\u6743\u7ec4\u7ec7\u591a\u5e74\u6765\u4e00\u76f4\u547c\u5401\u5f7b\u5e95\u7981\u6b62\u8fd9\u79cd\u76d1\u63a7\u6280\u672f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u62c5\u5fc3\u8fd9\u4f1a\u52a0\u5267\u4eba\u7c7b\u504f\u89c1\uff0c\u4fb5\u72af\u4eba\u4eec\u7684\u5baa\u6cd5\u81ea\u7531\u3002\n\u201c\u9762\u90e8\u8bc6\u522b\u662f\u4e00\u79cd\u7279\u522b\u5371\u9669\u7684\u76d1\u89c6\u5f62\u5f0f\uff0c\u201d\u6570\u5b57\u6743\u5229\u5021\u5bfc\u7ec4\u7ec7\u201c\u4e89\u53d6\u672a\u6765\u201d(Fight For The Future)\u7684\u526f\u4e3b\u4efb\u57c3\u6587\u00b7\u683c\u91cc\u5c14(Evan Greer)\u5728\u4e00\u4efd\u652f\u6301\u8be5\u6cd5\u6848\u7684\u58f0\u660e\u4e2d\u8868\u793a\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e9b\u5965\u5a01\u5c14\u5f0f\u7684\u672a\u6765\u6280\u672f--\u5b83\u73b0\u5728\u6b63\u88ab\u5168\u56fd\u5404\u5730\u7684\u6267\u6cd5\u673a\u6784\u4f7f\u7528\uff0c\u5e76\u4e14\u6b63\u5728\u5bf9\u793e\u533a\u9020\u6210\u4f24\u5bb3\u3002\n\u201c\u56fd\u4f1a\u5e94\u8be5\u901a\u8fc7\u8fd9\u9879\u6cd5\u6848\uff0c\u201d\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(ACLU)\u9ad8\u7ea7\u7acb\u6cd5\u987e\u95ee\u5c3c\u739b\u00b7\u8f9b\u683c\u00b7\u53e4\u5229\u4e9a\u5c3c(Neema Singh Guliani)\u8bf4\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u9879\u76d1\u63a7\u6280\u672f\u7684\u90e8\u7f72\u6ca1\u6709\u5f97\u5230\u7acb\u6cd5\u673a\u6784\u7684\u6279\u51c6\uff0c\u4e5f\u6ca1\u6709\u5c31\u6211\u4eec\u662f\u5426\u5e94\u8be5\u4f7f\u7528\u5b83\u8fdb\u884c\u516c\u5f00\u8fa9\u8bba\u3002\u73b0\u5728\u662f\u6211\u4eec\u505c\u6b62\u4f7f\u7528\u8fd9\u9879\u6280\u672f\uff0c\u505c\u6b62\u8d44\u52a9\u4fb5\u5165\u6027\u548c\u6b67\u89c6\u6027\u76d1\u89c6\u7ed3\u6784\u7684\u65f6\u5019\u4e86\u3002\u201c\u3002\n\u5468\u4e09\uff0c\u636e\u900f\u9732\uff0c\u5bc6\u6b47\u6839\u5dde\u4e00\u540d\u7537\u5b50\u7f57\u4f2f\u7279\u00b7\u5a01\u5ec9\u59c6\u65af(Robert Williams)\u57281\u6708\u4efd\u88ab\u8b66\u65b9\u62d8\u7559\u4e86\u4e00\u5929\u591a\uff0c\u56e0\u4e3a\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u9519\u8bef\u5730\u5c06\u4ed6\u7684\u9a7e\u7167\u7167\u7247\u4e0e\u67d0\u4eba\u5728\u5546\u5e97\u884c\u7a83\u7684\u76d1\u63a7\u89c6\u9891\u8fdb\u884c\u4e86\u5339\u914d\u3002\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u5728\u4e00\u4efd\u8bc9\u72b6\u4e2d\u79f0\uff0c\u6b64\u6848\u65e2\u8bc1\u660e\u4e86\u201c\u8fd9\u9879\u6280\u672f\u5b58\u5728\u7f3a\u9677\uff0c\u4e5f\u8bc1\u660e\u4e86\u8c03\u67e5\u4eba\u5458\u6ca1\u6709\u80fd\u529b\u5229\u7528\u8fd9\u7c7b\u6280\u672f\u3002\u201d\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u7f8e\u56fd\u6700\u5927\u7684\u4e09\u5bb6\u79d1\u6280\u516c\u53f8-IBM\u3001\u4e9a\u9a6c\u900a\u548c\u5fae\u8f6f-\u5ba3\u5e03\u5168\u9762\u9650\u5236\u5176\u9762\u90e8\u8bc6\u522b\u5de5\u5177\u7684\u9500\u552e\uff0c\u5e76\u547c\u5401\u5bf9\u8fd9\u9879\u6280\u672f\u8fdb\u884c\u8054\u90a6\u76d1\u7ba1\u3002\n\u9ed8\u514b\u5229\u548c\u65b0\u6cfd\u897f\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u79d1\u91cc\u00b7\u5e03\u514b(Cory Booker)\u57282\u6708\u4efd\u63d0\u51fa\u4e86\u4e00\u9879\u7c7b\u4f3c\u7684\u6cd5\u6848\uff0c\u5bfb\u6c42\u6682\u505c\u8054\u90a6\u653f\u5e9c\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\uff0c\u5c3d\u7ba1\u8be5\u6cd5\u6848\u6709\u5e7f\u6cdb\u7684\u4f8b\u5916\uff0c\u5141\u8bb8\u6267\u6cd5\u90e8\u95e8\u5728\u83b7\u5f97\u6cd5\u9662\u6388\u6743\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u8fd9\u9879\u6280\u672f\u3002", "note_en": "Get breaking news alerts and special reports. The news and stories that matter, delivered weekday mornings.\n SUBSCRIBE\n  Sens. Ed Markey, D-Mass., and Jeff Merkley, D-Ore., introduced legislation Thursday that seeks to ban the use of facial recognition and other biometric surveillance technology by federal law enforcement agencies.\n The legislation would also make federal funding for state and local law enforcement contingent on the enactment of similar bans.\n   The  Facial Recognition and Biometric Technology Moratorium Act, is supported by Reps. Ayanna Pressley, D-Mass., and Pramila Jayapal, D-Wash. It comes at a time of  intense scrutiny of policing and  surveillance tools, and widespread protests after the killing of George Floyd in Minneapolis police custody in late May.\n \u201cFacial recognition technology doesn\u2019t just pose a grave threat to our privacy, it physically endangers Black Americans and other minority populations in our country,\u201d Markey said in a statement. \u201cAs we work to dismantle the systematic racism that permeates every part of our society, we can\u2019t ignore the harms that these technologies present.&#34;\n Prohibiting government use of the surveillance technology is the &#34;only responsible thing to do,&#34; he added.\n Get breaking news and insider analysis on the rapidly changing world of media and technology right to your inbox.\n The bill would make it unlawful for any federal agency or official to \u201cacquire, possess, access or use\u201d biometric surveillance technology in the United States. It would also prohibit the use of federal funds to purchase such technology.\n  The bill states that this type of surveillance technology could only be used if there was a federal law with a long list of provisions to ensure it was used with extreme caution. Any such federal law would need to stipulate standards for the use, access and retention of the data collected from biometric surveillance systems; standards for accuracy rates by gender, skin color and age; rigorous protections for due process, privacy, free speech, and racial, gender and religious equity; and mechanisms to ensure compliance with the act.\n  It also stipulates that local or state governments would not be eligible to receive federal financial assistance under the Edward Byrne Memorial Justice Assistance Grant program, which funds police training, equipment and supplies, without complying with a similar law or policy.\n The introduction of the bill follows years of calls from civil liberties and human rights groups, including the American Civil Liberties Union and Amnesty International for an outright ban of the surveillance technology over concerns that it  exacerbates human biases and infringes on people\u2019s constitutional freedoms.\n \u201cFacial recognition is a uniquely dangerous form of surveillance,&#34; said Evan Greer, deputy director of digital rights advocacy group Fight For The Future in a statement endorsing the bill. &#34;This is not just some Orwellian technology of the future \u2013\u2013 it\u2019s being used by law enforcement agencies across the country right now, and doing harm to communities right now.&#34;\n   \u201cCongress should pass this bill,\u201d said Neema Singh Guliani, the ACLU&#39;s senior legislative counsel. &#34;It\u2019s clear that this surveillance technology has been deployed without legislative approval or public debate about whether we should be using it at all. It\u2019s time we put the brakes on the use of this technology and stopped funding invasive and discriminatory surveillance structures.\u201d\n On Wednesday, it was revealed that a man in Michigan, Robert Williams, spent over a day in police custody in January  after facial recognition software mistakenly matched his driver\u2019s license photo to surveillance video of someone shoplifting. The ACLU said in a complaint that the case proved both that the \u201ctechnology is flawed and that investigators are not competent in making use of such technology.\u201d\n Earlier this month, three of America\u2019s largest technology companies \u2014  IBM, Amazon and Microsoft \u2014 announced sweeping restrictions on their sale of facial recognition tools, and called for federal regulation of the technology.\n Merkley introduced  a similar bill in February, along with Sen. Cory Booker, D-N.J., that sought a moratorium on the federal government\u2019s use of facial recognition, although that bill had broad exceptions, allowing for law enforcement to use the technology with court warrants.", "posttime": "2020-06-26 03:21:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53c2\u8bae\u5458,senators,\u6280\u672f", "title": "\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u5c06\u63d0\u8bae\u7981\u6b62\u4f7f\u7528\u9762\u90e8\u8bc6\u522b", "title_en": "Democratic senators to propose ban on use of facial recognition", "transed": 1, "url": "https://www.nbcnews.com/tech/security/2-democratic-senators-propose-ban-use-facial-recognition-federal-law-n1232128", "via": "", "real_tags": ["\u53c2\u8bae\u5458", "senators", "\u6280\u672f"]}, {"category": "", "categoryclass": "", "imagename": "94c8d00e13387101db1ff2d0c52c6caa.jpeg", "infoid": 1008257, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u53cd\u590d\u65e0\u5e38\u5730\u51b3\u5b9a\u662f\u5426\u6279\u51c6Basecamp\u7684\u563f\u7535\u5b50\u90ae\u4ef6\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u82f9\u679c\u5df2\u7ecf\u201c\u660e\u786e\u6279\u51c6\u201d\u563f\u7528\u4e8eApp Store\u3002Basecamp\u9996\u5e2d\u6280\u672f\u5b98\u548c\u8054\u5408\u521b\u59cb\u4eba\u5927\u536b\u00b7\u6d77\u5185\u8fc8\u5c14\u00b7\u6c49\u68ee\u4eca\u5929\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u8fd9\u4e00\u6d88\u606f\u3002\n\u563f\u5c06\u4e0d\u5305\u62ec\u4efb\u4f55\u5e94\u7528\u5185\u8d2d\u4e70(IAP)\uff0c\u56e0\u6b64\u82f9\u679c\u5c06\u4e0d\u4f1a\u83b7\u5f97\u6807\u51c6\u768430%\u4f63\u91d1\u3002\u8d77\u521d\uff0c\u82f9\u679c\u53cd\u5bf9\u7528\u6237\u4eceApp Store\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u5fc5\u987b\u901a\u8fc7\u7f51\u7edc\u6ce8\u518c\u3002\u82f9\u679c\u7684\u653f\u7b56\u8981\u6c42\u5f00\u53d1\u8005\u4f7f\u7528IAP\u89e3\u9501\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4ed8\u8d39\u7279\u6027\u6216\u529f\u80fd\u3002\u563f\uff0c\u901a\u8fc7\u63d0\u4f9b\u514d\u8d39\u8bd5\u7528\u9009\u9879\uff0c\u6210\u529f\u5730\u7ed5\u8fc7\u4e86\u8fd9\u4e9b\u89c4\u5219\u3002\n\u82f9\u679c\u5df2\u7ecf\u660e\u786e\u6279\u51c6\u5728App Store\u4e2d\u4f7f\u7528\u563f\uff01\u6ca1\u6709IAP\uff0c\u6ca1\u670930%\u7684\u63d0\u6210\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u6253\u5f00\u4e86\u514d\u8d39\u4e34\u65f6\u5730\u5740\u670d\u52a1\u7684\u5927\u95e8\uff0c\u5e76\u5bf9\u5de5\u4f5c\u8d26\u6237\u4f7f\u7528\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u771f\u662f\u677e\u4e86\u4e00\u53e3\u6c14\uff01\u73b0\u5728\u563f\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u5f00\u653e\u4e86\uff01\u4e0d\u9700\u8981\u9080\u8bf7\u4ee3\u7801https://t.co/J7OCCTFX2Z\ud83c\udf89\u2764\ufe0f\u3002\n-dhh(@dhh)2020\u5e746\u670825\u65e5\u3002\n\u563f\u73b0\u5728\u5bf9\u6240\u6709\u4eba\u5f00\u653e\uff0c\u4e0d\u9700\u8981\u9080\u8bf7\u7801\u3002\u8fd9\u6b3e\u5e94\u7528\u627f\u8bfa\u4ee5\u66f4\u6709\u6761\u7406\u7684\u65b9\u5f0f\u6536\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u6bcf\u5e74\u6536\u8d3999\u7f8e\u5143\u3002\u4f46\u4e5f\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u563f\u662f\u5f00\u53d1\u8005\u5982\u4f55\u907f\u514d\u5411\u82f9\u679c\u652f\u4ed830%\u7684IAP\u548c\u8ba2\u9605\u8d39\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u201c\u5e0c\u671b\u8fd9\u4e5f\u80fd\u4e3a\u6279\u51c6\u5176\u4ed6\u591a\u5e73\u53f0SAAS\u5e94\u7528\u7a0b\u5e8f\u94fa\u5e73\u4e00\u6761\u5149\u660e\u7684\u9053\u8def\u3002\u4ecd\u7136\u6709\u4e00\u957f\u4e32\u7684\u53cd\u5784\u65ad\u95ee\u9898\u9700\u8981\u56de\u7b54\uff0c\u4f46\u60c5\u51b5\u7406\u6240\u5f53\u7136\u5730\u6709\u6240\u6539\u5584\u3002\u65b0\u653f\u7b56\uff0c\u65b0\u4f18\u5148\u3002\u82f9\u679c\u5411\u524d\u8fc8\u8fdb\u4e86\u4e00\u5927\u6b65\uff0c\u201c\u6c49\u68ee\u5728\u63a8\u7279\u4e0a\u5199\u9053\u3002\n\u6b27\u76df\u59d4\u5458\u4f1a(European Commission)\u6700\u8fd1\u5c31App Store\u548cApple Pay\u8981\u6c42\u5f00\u53d1\u8005\u4f7f\u7528\u81ea\u5df1\u7684\u652f\u4ed8\u548c\u5e94\u7528\u5185\u8d2d\u4e70\u7cfb\u7edf\u7684\u89c4\u5b9a\u5c55\u5f00\u4e86\u53cc\u91cd\u8c03\u67e5\u3002\u8fd9\u9879\u8c03\u67e5\u662f\u7531Spotify\u7684\u6295\u8bc9\u5f15\u53d1\u7684\uff0c\u4f46\u5173\u4e8eApp Store\u662f\u5426\u516c\u5e73\u7684\u4e89\u8bba\u5e76\u4e0d\u65b0\u9c9c\u3002\u82f9\u679c\u53ef\u80fd\u4f1a\u5b89\u629a\u4e00\u4e9b\u5f00\u53d1\u8005\uff0c\u5982\u679c\u5b83\u5141\u8bb8\u4ed6\u4eec\u6548\u4effBasecamp\uff0c\u63d0\u4f9b\u514d\u8d39\u8bd5\u7528\uff0c\u800c\u4e0d\u662fIAP\u3002", "note_en": "After flip flopping on whether it would approve Basecamp\u2019s Hey email app, Apple has \u201cdefinitively approved\u201d Hey for the App Store. Basecamp CTO and co-founder David Heinemeier Hansson  tweeted the news today.\n Hey will not include any in-app purchases (IAP), so Apple will not get its standard 30 percent commission. At first,  Apple objected to the fact that users would download the app from the App Store but have to sign up via the web. Apple\u2019s policies require that developers use IAP to unlock paid features or functionality in an app. Hey managed to skirt around those rules by  offering a free trial option.\n  Apple has definitively approved HEY in the App Store!! No IAP, no 30% cut, but we\u2019ve opened the door to a free temp address service, and use same app for work accounts. I\u2019m so incredibly relieved! And now HEY is open to EVERYONE! No invite code needed \ud83c\udf89\u2764\ufe0f  https://t.co/J7OCCTFX2Z\n\u2014 DHH (@dhh)  June 25, 2020\n  Hey is now open to everyone, and it does not require an invite code. The app promises a more organized approach to email, for $99 per year. But perhaps more importantly, Hey is an example of how developers can avoid paying Apple 30 percent of IAP and subscription fees.\n \u201cHopefully this paves an illuminated path for approval for other multi-platform SAAS applications as well. There are still a litany of antitrust questions to answer, but things legitimately got a little better. New policies, new precedence. Apple took a great step forward,\u201d Hansson tweeted.\n The European Commission recently  opened dual investigations into the App Store and Apple Pay over its rules requiring developers to use its own payment and in-app purchase system. That investigation was spurred by  Spotify\u2019s complaint, but the debate over  whether the App Store is fair is not new. Apple may appease some developers if it allows them to follow Basecamp\u2019s lead and offer free trials instead of IAP.", "posttime": "2020-06-26 03:01:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "apple,\u82f9\u679c,\u5e94\u7528,email", "title": "\u563f\uff0c\u7535\u5b50\u90ae\u4ef6\u5e94\u7528\u5728\u82f9\u679c\u201c\u6700\u7ec8\u201d\u6279\u51c6\u540e\u5411\u6240\u6709\u4eba\u5f00\u653e", "title_en": "Hey Email App Open To All After Apple 'Definitively' Approves It", "transed": 1, "url": "https://www.engadget.com/apple-basecamp-hey-email-app-store-154225649.html", "via": "", "real_tags": ["apple", "\u82f9\u679c", "\u5e94\u7528", "email"]}, {"category": "", "categoryclass": "", "imagename": "99194f67e5542018f2c1c325832cade0.png", "infoid": 1008256, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u56de\u6765\uff0c\u611f\u8c22\u4f60\u52a0\u5165\u6211\u4eec\u7684\u9605\u8bfb\u7b14\u8bb0\u2026\u3002\u5173\u4e8eELF\u6587\u4ef6\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c13\u90e8\u5206\u4ecb\u7ecd\u4e86\u5b83\u4eec\u662f\u4ec0\u4e48\uff0c\u5b83\u4eec\u53ef\u4ee5\u505a\u4ec0\u4e48\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u5bf9\u5b83\u4eec\u505a\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u4eec\u81ea\u5df1\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4e00\u76f4\u5f88\u6210\u529f\u5730\u907f\u514d\u8c08\u8bbaTLS(\u4e0d\uff0c\u4e0d\u662f\u90a3\u4e2a)\uff0c\u4f46\u6211\u60f3\u6211\u4eec\u5df2\u7ecf\u5230\u4e86\u4e0d\u80fd\u518d\u62d6\u5ef6\u7684\u5730\u6b65\u4e86\uff0c\u6240\u4ee5\u3002\n\u6211\u4eec\u4ece\u8270\u96be\u5730\u9605\u8bfb\u6587\u4ef6\u7684\u7ecf\u5386\u4e2d\u77e5\u9053\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7528\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u662f\u8ba1\u7b97\u673a\u4e0a\u7684\u5ba2\u4eba\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u6267\u884c\u4e00\u4e9b\u6307\u4ee4\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u80fd\u4f1a\u793c\u8c8c\u5730\u8981\u6c42\u67d0\u4e9b\u8bbe\u5907\u7b26\u5408\u6211\u4eec\u7684\u9700\u6c42\uff0c\u4f46\u6700\u7ec8\u8c03\u7528\u8fd9\u4e9b\u6307\u4ee4\u7684\u662f\u5185\u6838\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u662f\u88ab\u5bb9\u5fcd\u7684\u3002\u8001\u5b9e\u8bf4\uff0c\u5185\u6838\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u4e1c\u897f\u3002\n\u4e0d\u8fc7\uff0c\u5185\u6838\u5076\u5c14\u4f1a\u8ba9\u975e\u5185\u6838\u4ee3\u7801\u6267\u884c\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u5b83\u8d1f\u8d23\u8fd9\u79cd\u60c5\u51b5\u7684\u786e\u5207\u53d1\u751f\u65b9\u5f0f\u548c\u65f6\u95f4-\u4ee5\u53ca\u6301\u7eed\u591a\u957f\u65f6\u95f4\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5bf9\u8fdb\u7a0b\u662f\u5982\u4f55\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5f62\u6210\u4e86\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u60f3\u6cd5\uff1a\u5185\u6838\u672c\u8eab\u89e3\u6790\u6211\u4eec\u60f3\u8981\u6267\u884c\u7684\u6587\u4ef6\uff0c\u5982\u679c\u5b83\u89e3\u6790\u4e86\u5b83(\u5c3d\u7ba1\u5b83\u5bf9\u51e0\u4e4e\u4e0d\u50cf\u6211\u4eec\u611f\u5174\u8da3\u7684\u4e8b\u60c5\u90a3\u4e48\u591a)\uff0c\u6620\u5c04\u4e00\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u201c\u4e0d\u63d2\u624b\u201d\u63a7\u5236\u5b83\u3002\n\u4f46\u662f\u4ea4\u63a5\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5177\u4f53\u6765\u8bf4\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u597d\u5427\uff0c\u4eca\u5929\u4e0d\u662f\u6211\u4eec\u8fdb\u5165\u5185\u6838\u8c03\u8bd5\u7684\u65e5\u5b50(\u867d\u7136\u2026\u3002\u4e0d\u3002\u9664\u975e\uff1f\u6ca1\u6709)\uff0c\u4f46\u6211\u4eec\u80af\u5b9a\u80fd\u5927\u81f4\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\n\u8ba1\u7b97\u673a\u662f\u4ec0\u4e48\uff1f\u4e00\u5806\u53ef\u601c\u7684\u767b\u8bb0\u7c3f\u3002\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\u90fd\u662f\u5411\u4e0b\u7684\u3002\n\u4ee5\u4e0b\u662f\u4e00\u4e9bCPU\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u6070\u597d\u662fechidna\u7684\u4e3b\u8981\u51fd\u6570\u5f00\u59cb\u6267\u884c\u65f6\u7684\u503c\uff1a\n\u5c31\u8fd9\u4e9b\u5417\uff1f\u4e0d\u8981\u554a\uff01\u8fd9\u91cc\u6709128\u4f4d\u5bc4\u5b58\u5668(SSE)\u3001256\u4f4d\u5bc4\u5b58\u5668(AVX)\u3001512\u4f4d\u5bc4\u5b58\u5668(AVX-512)-\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u6709x87/FPU\u5bc4\u5b58\u5668\uff0c\u5f53\u60a8\u9700\u8981\u4e00\u4e2a\u534f\u5904\u7406\u5668\u6765\u5904\u7406\u8fd9\u4e9b\u5bc4\u5b58\u5668\u65f6\u3002\n\u8fd9\u7b80\u76f4\u662f\u4e00\u56e2\u7cdf\u3002\u5173\u952e\u662f\uff0c\u6211\u4eec\u6709\u4e00\u5806\u5168\u5c40\u53d8\u91cf\uff0c\u8bfb\u5199\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u56e0\u6b64\uff0c\u4f18\u5316\u7f16\u8bd1\u5668\u503e\u5411\u4e8e\u5728\u4efb\u4f55\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5b83\u4eec\u3002\n\u8fd9\u91cc\u7684\u201c\u4ed6\u4eec\u201d\u6307\u7684\u662f\u4ece%rax\u5230%r15\u8fd9\u4e00\u7cfb\u5217\u4e2d\u7684\u901a\u7528\u578b\u3002\u6709\u65f6\uff0c\u5982\u679c\u60a8\u7684\u4f18\u5316\u5668\u611f\u5230\u7279\u522b\u5934\u6655\u76ee\u7729\uff0c\u4e00\u4e9b%xmmN\u5bc4\u5b58\u5668\u4e5f\u4f1a\u51fa\u73b0(\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u75db\u82e6\u5730\u4e86\u89e3\u5230\u7684\u90a3\u6837)\u3002\n\u8fd8\u6709\u4e00\u4e9b\u7279\u6b8a\u7528\u9014\u7684\u5bc4\u5b58\u5668\uff0c\u5982cs\u3001ss\u3001ds\u3001es\u7b49\u7b49\uff0c\u6211\u4eec\u5e76\u4e0d\u7279\u522b\u5173\u5fc3\u8fd9\u56db\u4e2a\u5bc4\u5b58\u5668\uff0c\u56e0\u4e3a\u572864\u4f4dLinux\u4e0a\uff0c\u6211\u4eec\u7684\u5185\u5b58\u6a21\u578b\u8981\u7b80\u5355\u4e00\u4e9b\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u4f7f\u7528\u5bc4\u5b58\u5668\u6765\u53d1\u9001\u5185\u6838LoveLetters--\u4f8b\u5982\uff0c\u5728echidna\u7684Write\u51fd\u6570\u4e2d\uff1a\n\u53d1\u5e03\u4e0d\u5b89\u5168\u7684FN\u5199\u5165(fd\uff1au32\uff0cbuf\uff1a*const U8\uff0ccount\uff1ausize){ASM\uff01(&#34\uff1bmov rax\uff0c1 SysCall&#34\uff1b\uff1a\uff1a&#34\uff1b{rdi}&#34\uff1b(Fd)\uff0c&#34\uff1b{rsi}&#34\uff1b(Buf)\uff0c&#34\uff1b{rdx}&#34\uff1b(Count)\uff1a&#34\uff1brax&#34\uff1b\uff0c&#34\uff1brr\u3002\u82f1\u7279\u5c14(34\uff1b))}\u3002\n\u56e0\u6b64\uff0c\u5185\u6838\u5e94\u7528\u7a0b\u5e8f\u548c\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f7f\u7528\u5bc4\u5b58\u5668\u3002\u6211\u6700\u559c\u6b22\u7684\u5bc4\u5b58\u5668\u4e4b\u4e00--\u6211\u6b63\u5728\u5199\u4e00\u7cfb\u5217\u5173\u4e8eELF\u6587\u4ef6\u7684\u6587\u7ae0--\u662f%rip\uff0c\u6307\u4ee4\u6307\u9488\u3002\n\u6211\u88ab\u544a\u77e5\u5b83\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u7b80\u5355\uff0c\u4f46\u572864\u4f4dLinux\u4e0a\uff0c\u5b83\u53ea\u662f\u6307\u5411\u6211\u4eec\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u7684(\u865a\u62df)\u5730\u5740\u3002\u5f53\u7a0b\u5e8f\u6267\u884c\u5411\u524d\u79fb\u52a8\u65f6\uff0c%rip-by\u4e0d\u7ba1\u7f16\u7801\u521a\u6267\u884c\u7684\u6307\u4ee4\u9700\u8981\u591a\u5c11\u5b57\u8282\uff0c\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\uff1a(#*_)\u3002\n\u56e0\u6b64\uff0c\u8fd9\u56de\u7b54\u4e86\u6211\u4eec\u95ee\u9898\u7684\u4e00\u90e8\u5206-\u5185\u6838\u5982\u4f55\u5c06\u63a7\u5236\u6743\u201c\u79fb\u4ea4\u201d\u7ed9\u7a0b\u5e8f\uff1a\u5b83\u53ea\u662f\u6539\u53d8\u4e86%rip\uff01\u5904\u7406\u5668\u505a\u7684\u662f\u6700\u597d\u7684\u3002\u4e95\u3002\u6709\u70b9\u50cf\u3002\u6bd4\u65b9\u8bf4\uff0c\u201c\u5728\u5176\u4ed6\u4e8b\u60c5\u4e2d\u201d\u3002\n(\u8bf7\u6ce8\u610f\uff0c\u5728x86\u4e0a\uff0c\u60a8\u4e0d\u80fd\u76f4\u63a5\u5199\u5165%rip\u5bc4\u5b58\u5668-\u60a8\u5fc5\u987b\u4f7f\u7528jmp\u3001call\u6216ret\u7b49\u6307\u4ee4\u3002)\u3002\n\u516c\u5e73\u5730\u8bf4\uff0c\u5b83\u4e5f\u4ece\u73af0\u5207\u6362\u5230\u73af3--\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u201c\u8270\u96be\u9605\u8bfb\u6587\u4ef6\u201d\u7b2c2\u90e8\u5206\u4e2d\u7b80\u8981\u8ba8\u8bba\u8fc7\u7684\u3002\u5e76\u4e14\u5b83\u4ece\u201c\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\u5207\u6362\u5230\u201c\u7528\u6237\u5730\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\u3002\n\u91cd\u70b9\u662f--\u8fd9\u4e5f\u662f\u8fdb\u7a0b\u95f4\u5207\u6362\u7684\u5de5\u4f5c\u539f\u7406\u3002\u5bf9\u4e8e\u7528\u6237\u800c\u8a00\uff0c\u8fdb\u7a0b\u662f\u5e76\u884c\u6267\u884c\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5185\u6838\u800c\u8a00\uff0c\u5b83\u7684\u8c03\u5ea6\u5668\u5206\u914d\u7684\u662f\u65f6\u95f4\u7247\u3002\u6bcf\u5f53\u5b83\u8ba9process\u201cfoo\u201d\u6267\u884c\u4e00\u6bb5\u65f6\u95f4\u65f6\uff0c\u5b83\uff1a\n\u4ece\u73af0\u5207\u6362\u5230\u73af3\uff0c\u4e5f\u8df3\u8f6c\u5230\u4e0a\u6b21\u4e2d\u65ad\u8fdb\u7a0b\u201cfoo\u201d\u65f6\u7684\u5730\u5740%Riphad\u3002\n\u6700\u7ec8\uff0c\u7cfb\u7edf\u8ba1\u65f6\u5668\u4e2d\u65ad\u5173\u95ed\uff0c\u6267\u884c\u7acb\u5373\u8df3\u56de\u5185\u6838\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f-\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5185\u6838\u51b3\u5b9a\u8fdb\u7a0b\u662f\u6dd8\u6c14\u7684\u8fd8\u662f\u597d\u7684\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u503c\u5f97\u66f4\u591a\u7684\u65f6\u95f4\u3002\n\u5982\u679c\u4e0d\u662f-\u4f8b\u5982\uff0c\u5982\u679c\u5185\u6838\u51b3\u5b9a\u6211\u4eec\u4e0b\u4e00\u6b65\u771f\u7684\u5e94\u8be5\u7ed9\u8fdb\u7a0b\u201cbar\u201d\u66f4\u591a\u65f6\u95f4\uff0c\u90a3\u4e48\u5185\u6838\u5c06\u4fdd\u5b58\u201cfoo\u201d\u7684\u72b6\u6001(\u5927\u591a\u6570\u6ce8\u518c\u5668)\uff0c\u91cd\u7f6e\u4e00\u7ec4CPU\u72b6\u6001(\u4e3b\u8981\u662f\u5185\u5b58\u7f13\u5b58)\uff0c\u5e76\u6309\u7167\u6211\u4eec\u521a\u624d\u63cf\u8ff0\u7684\u65b9\u5f0f\u5207\u6362\u5230\u201cbar\u201d\u3002\n\u8fd9\u662f\u975e\u5e38\u9065\u8fdc\u7684\u4e8b\u60c5\u6982\u89c2\u3002\u5b83\u4e5f\u4e0d\u5b8c\u5168\u6b63\u786e\u3002\u4f46\u5c31\u6211\u4eec\u7684\u76ee\u7684\u800c\u8a00\uff0c\u5b83\u662f\u8db3\u591f\u6b63\u786e\u7684\u3002\n\u8fd9\u662f\u9488\u5bf9\u6d41\u7a0b\u7684\u3002\u4f46\u662f\u7ebf\u7a0b\u5462\uff1f\u7ebf\u7a0b\u4e5f\u662f\u201c\u62a2\u5360\u591a\u4efb\u52a1\u201d\u7684--\u5b83\u4eec\u7684\u6267\u884c\u53ef\u4ee5\u88ab\u66b4\u529b\u4e2d\u65ad\uff0c\u800c\u4e0d\u662f\u663e\u5f0f\u5730\u653e\u5f03\u63a7\u5236(\u5373\u3002\u201c\u62a2\u5360\u201d)\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u7ebf\u7a0b\u3002\n\u201c\u53e6\u4e00\u4e2a\u201d\u591a\u4efb\u52a1\u662f\u534f\u4f5c\u6027\u7684\u591a\u4efb\u52a1--\u4f60\u4e0d\u9700\u8981\u5185\u6838\u7684\u5e2e\u52a9\u5c31\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u5c31\u662f\u534f\u540c\u7a0b\u5e8f\u7684\u5de5\u4f5c\u65b9\u5f0f--\u53ea\u662f\u5728\u51b3\u5b9a\u8f6e\u5230\u8c01\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u7528\u6237\u5dde\u7684\u4eba\u90fd\u5728\u4e00\u8d77\u73a9\u5f97\u5f88\u597d\u3002\n\u4e0d\u8fc7\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u66f4\u7b80\u5355\u3002\u56e0\u4e3a\u4ee3\u7406\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c\u5f53\u4ece\u4e00\u4e2a\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u65f6\uff0c\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u7684\u72b6\u6001\u8f83\u5c11\u3002\n\u4f46\u662f\u2026\u3002\u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u5982\u4f55\u533a\u5206\u7ebf\u7a0b\uff1f\u5982\u679c\u4f7f\u7528\u76f8\u540c\u7684\u5165\u53e3\u70b9\u542f\u52a8\u4e86\u51e0\u4e2a\u7ebf\u7a0b\uff0c\u60a8\u5982\u4f55\u77e5\u9053\u54ea\u4e2a\u7ebf\u7a0b\u662f\u54ea\u4e2a\u7ebf\u7a0b\u5462\uff1f\u8fd9\u662fCPU\u5904\u7406\u7684\u4e8b\u60c5\u5417\uff1f\u8fd8\u662f\u5185\u6838\uff1f\n//\u5728`elk/sample/twothread/twothreads.c`#include&lt\uff1bunistd.h&gt\uff1b#include&lt\uff1bpthread.h&gt\uff1bvoid*in_thread(void*unuse){while(1){\u7761\u7720(1)\uff1b}}int main(){pthread_t1\uff0ct2\uff1bpthread_create(&amp\uff1bt1\uff0cnull\uff0cin_thread\uff0cnull)\uff1bpthread_create(&amp\uff1bt2\uff0cnull\uff0cin_thread\uff0c\n$cd elk/sample/twothread$GCC twothreads.c-pthread-o twothreads.c-pthread-o twothread$./twothread(\u7a0b\u5e8f\u4e0d\u6253\u5370\u4efb\u4f55\u5185\u5bb9\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u9000\u51fa)\u3002\n$gdb-quiet./twothread\u6b63\u5728\u8bfb\u53d6\u7b26\u53f7./twothreads.(Gdb)\u57280x1175\u5904\u63d2\u5165_threadBreakpoint 1\uff1a\u6587\u4ef6twothreads.c\uff0c\u7b2c6\u884c\u3002(Gdb)\u8fd0\u884c\u542f\u52a8\u7a0b\u5e8f\uff1a/home/amos/ftl/elk/samples/twothreads/twothreads[Thread\u8c03\u8bd5\u4f7f\u7528libthreaddb\u5df2\u542f\u7528]\u4f7f\u7528\u4e3b\u673alibthreaddb\u5e93&#34\uff1b/usr/lib/libthreaddb.so.1&#34\uff1b\u3002[\u65b0\u7ebf\u7a0b0x7ff7da5700(lwp 14253\u3002\u5728\u4e24\u4e2a\u7ebf\u7a0b\u5904\u547d\u4e2d\u65ad\u70b91\uff0cin_thread(\u672a\u4f7f\u7528=0x0)\u3002c\uff1a66\u4f11\u7720(1)\uff1b\n\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u5207\u90fd\u8bf4\u5f97\u901a\u3002\u6211\u4eec\u6709\u4e09\u4e2a\u7ebf\u7a0b--\u4e3b\u7ebf\u7a0b\u548c\u6211\u4eec\u521b\u5efa\u7684\u53e6\u5916\u4e24\u4e2a\u7ebf\u7a0b\u3002\u6240\u4ee5\u8bf4\u771f\u7684\uff0c\u8fd9\u4e2a\u8282\u76ee\u5e94\u8be5\u53eb\u201c\u4e09\u8bfb\u201d\u3002\n(Gdb)\u4f4d\u4e8e/usr/lib/libpthread.so.0\u514b\u9686()\u4e2d\u7684/usr/lib/libpthread.so.0#2 0x00007ff7ea83d3\u4e2d\u7684bt#0 in_thread(\u672a\u4f7f\u7528=0x0)\u3002c\uff1a6#1 0x00007ffff7f7846f in start_thread()from/usr/lib/libc.so.6\u3002\n\u5c31\u50cfINFO\u5bc4\u5b58\u5668\u4e00\u6837\uff0cGDB\u6709INFO\u7ebf\u7a0b\uff0c\u8fd9\u8ba9\u6211\u4eec\u77e5\u9053\u5b83\u4eec\u90fd\u5728\u53d1\u751f\u4ec0\u4e48\uff1a\n(Gdb)\u4fe1\u606f\u7ebf\u7a0bID\u76ee\u6807ID\u5e271\u7ebf\u7a0b0x7ffff7da6740(Lwp 14249)&#34\uff1b\u4e24\u4e2a\u7ebf\u7a0b&#34\uff1b0x00007ffff7f79a67\u4f4d\u4e8e/usr/lib/libpthread.so.0*2\u7ebf\u7a0b0x7ff7da5700(Lwp 14253)&#34\uff1b\u4e24\u4e2a\u7ebf\u7a0b&#34\uff1bin_thread(\u672a\u4f7f\u7528=0xxthread.so.0*2\u7ebf\u7a0b\u4e2d(\u672a\u4f7f\u7528=0xpthread.so.0*2\u7ebf\u7a0b0x7ff7da5700(Lwp 14253)&#34\uff1b\u4e24\u4e2a\u7ebf\u7a0b&#34\uff1bin_thread(\u672a\u4f7f\u7528=0xxthread.so.0*2\u7ebf\u7a0b\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u201c\u5f53\u524dgdb\u7ebf\u7a0b\u201d\u8bbe\u7f6e\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u4efb\u4f55\u503c\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u67e5\u770b\u4e3b\u7ebf\u7a0b\u5728\u505a\u4ec0\u4e48\uff1a\n(Gdb)\u7ebf\u7a0b1[\u5207\u6362\u5230\u7ebf\u7a0b1(\u7ebf\u7a0b0x7ffff7da6740(Lwp 14249))]#0 0x00007ff7f79a67 in__pthread_clockjoin_ex()from/usr/lib/libpthread.so.0(Gdb)bt#0x00007ff7f79a67 in__pthread_clockjoin_ex()from/usr/lib/libpthread.so.0(Gdb)bt#0x00007ff7f79a67 in__pthread_clockjoin_ex()from/usr/lib/libpthread.so.0\u3002\n(Gdb)main()\u4e2d\u7684\u5e271#1 0x000055555551e3\uff0c\u4f4d\u4e8e\u4e24\u4e2a\u7ebf\u7a0b\u3002c\uff1a1414pthread_Join(t1\uff0cNULL)\uff1b(Gdb)info localst1=140737351669504t2=140737343276800(Gdb)p/x t1$1=0x7ff7da5700(Gdb)p/x t2$2=0x7ff75a4700\u3002\n\u770b\u8d77\u6765\u50cf\u662f\u6307\u9488\u3002\u597d\u5427\u3002\u73b0\u5728\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u68c0\u67e5\u5404\u79cd\u7ebf\u7a0b\u7684\u72b6\u6001\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6211\u4eec\u7684\u4e24\u4e2a\u7ebf\u7a0b\u662f\u600e\u4e48\u56de\u4e8b--\u5b83\u4eec\u662f\u80cc\u9760\u80cc\u7684\uff1a\n\u4e8b\u60c5\u770b\u8d77\u6765\u76f8\u4f3c\u5f97\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u3002\u5b83\u4eec\u5e94\u8be5-\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5728\u505a\u5b8c\u5168\u76f8\u540c\u7684\u4e8b\u60c5-\u7b49\u5f85\u65f6\u95f4\u8017\u5c3d\uff0c\u4e00\u6b21\u4e00\u79d2\u3002\n\u5f53\u7136\uff0c\u6709\u4e9b\u5bc4\u5b58\u5668\u503c\u5173\u95ed\u4e860x1000(%RBP\u5230%R10)\uff0c\u4f46\u662f\uff0c\u4f8b\u5982\uff0c%RIP\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\u6765\u8bf4\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u8001\u5b9e\u8bf4\uff0c\u8fd9\u8ba9\u4eba\u5b89\u5fc3\u3002\u5e76\u975e\u6211\u4eec\u6240\u6709\u7684\u5047\u8bbe\u90fd\u662f\u9519\u8bef\u7684\u3002\n\u4f46\u4e00\u5b9a\u6709\u529e\u6cd5\u628a\u5b83\u4eec\u533a\u5206\u5f00\u6765\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u201cpthread\u201d(POSIXthread)\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u7528\u6237\u5730\u5e93\uff1a\n\u4ece\u5230\u7cfb\u7edf\u8bfb\u53d6\u5171\u4eab\u5bf9\u8c61\u5e930x00007ffff7fd3100 0x00007ffff7ff2b14\u662f(*)/lib64/ld-linux-x86-64.so.20x00007ff7f76ad0 0x00007ff7f858c5\u662f(*)/usr/lib/libpthread.so.00x00007ff7dce630 0x00007ff7f18e\u3002\n\u2026\u3002\u5e76\u4e14\u5b83\u516c\u5f00\u4e86\u50cfpthreadself()\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u8c03\u7528\u7ebf\u7a0b\u7684ID\u3002\u6240\u4ee5\u5b83\u5fc5\u987b\u77e5\u9053\u6211\u4eec\u5f53\u524d\u5728\u54ea\u4e2a\u7ebf\u7a0b\u4e2d\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u2026\u3002\u5bc4\u5b58\u5668\u3002\n\u8ba9\u6211\u4eec\u505a\u4e00\u4e9b\u6211\u5e0c\u671b\u5728\u51e0\u4e2a\u6708\u524d\u5c31\u60f3\u660e\u767d\u7684\u4e8b\u60c5\uff0c\u5f53\u65f6\u6211\u8fd8\u5728\u7814\u7a76\u201c\u6eda\u52a8\u81ea\u5df1\u7684\u52a8\u6001\u94fe\u63a5\u5668\u201d\u662f\u5426\u662f\u4e00\u4ef6\u4e0d\u592a\u5408\u7406\u7684\u4e8b\u60c5\u3002\n(Gdb)disas pthread_self\uff1a0x00007ffff7e2efa0&lt\uff1b+0&gt\uff1b\u51fd\u6570\u7684\u6c47\u7f16\u4ee3\u7801\u7684pthread_selfDump\uff1aendbr64 0x00007ff7e2efa4&lt\uff1b+4&gt\uff1b\uff1aMOV rax\uff0cQWORD PTR fs\uff1a0x10 0x00007ff7e2efad&lt\uff1b+13&gt\uff1b\uff1aretEnd of Assembly\u3002\n\u989d\u5916\u5206\u6bb5\u3002\u6307\u5411\u989d\u5916\u6570\u636e\u7684\u6307\u9488(\u2018E\u2019\u4ee3\u8868\u2018Extra\u2019)\u3002\nF\u6bb5(FS)\u3002\u6307\u5411\u66f4\u591a\u989d\u5916\u6570\u636e\u7684\u6307\u9488(\u2018F\u2019\u5728\u2018E\u2019\u4e4b\u540e)\u3002\nG\u6bb5(GS)\u3002\u6307\u5411\u66f4\u591a\u989d\u5916\u6570\u636e\u7684\u6307\u9488(\u2018G\u2019\u5728\u2018F\u2019\u4e4b\u540e)\u3002\n\u592a\u68d2\u4e86\u3002\u56e0\u6b64\uff0c\u201cs\u201d\u4ee3\u8868\u201c\u6bb5\u201d\uff0c\u201cf\u201d\u4ee3\u8868\u201cfxtra data\u201d\u3002\n\u4e0d\u8fc7\uff0c\u7b49\u4e00\u4e0b\u3002\u6211\u975e\u5e38\u80af\u5b9a\u6bcf\u6b21\u6211\u4eec\u770b\u5b83\u7684\u65f6\u5019%fs\u90fd\u662f0x0\u3002\u8ba9\u6211\u4eec\u4ed4\u7ec6\u68c0\u67e5\u4e00\u4e0b\uff1a\n(Gdb)t a i r fsThread 3(\u7ebf\u7a0b0x7ffff75a4700(Lwp 14475))\uff1afs 0x00\u7ebf\u7a0b2(\u7ebf\u7a0b0x7ffff7da5700(Lwp 14474))\uff1afs 0x00\u7ebf\u7a0b1(\u7ebf\u7a0b0x7ff7da6740(Lwp 14473))\uff1afs 0x0\u3002\nt a a i r fs\u53ea\u662f\u7ebf\u7a0b\u5e94\u7528\u6240\u6709\u4fe1\u606f\u5bc4\u5b58\u5668fs\u7684\u6a21\u7cca\u65b9\u5f0f\u3002\n\u8fd9\u662f\u5bf9\u7684-\u53ea\u8981\u5b83\u4e0d\u542b\u7cca\uff0cgdb\u5c31\u53ef\u4ee5\u8ba9\u60a8\u7f29\u77ed\u4efb\u4f55\u547d\u4ee4\u6216\u9009\u9879\u540d\u79f0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u60a8\u770b\u5230\u6b63\u5728\u4f7f\u7528\u5feb\u6377\u952e\uff0c\u5e76\u4e14\u4e0d\u786e\u5b9a\u5b83\u7684\u4f5c\u7528\uff0c\u60a8\u53ef\u4ee5\u8be2\u95eegdb\uff0c\u56e0\u4e3a\u5b83\u7684help\u547d\u4ee4\u4e5f\u63a5\u53d7\u5feb\u6377\u952e\u5f62\u5f0f\u3002\n(Gdb)help NISTEP\u4e00\u6761\u6307\u4ee4\uff0c\u4f46\u901a\u8fc7\u5b50\u4f8b\u7a0b\u8c03\u7528\u7ee7\u7eed\u3002\u7528\u6cd5\uff1anexti[N]\u53c2\u6570N\u8868\u793a\u7b2cN\u6b65(\u6216\u76f4\u5230\u7a0b\u5e8f\u56e0\u5176\u4ed6\u539f\u56e0\u505c\u6b62)\u3002\n\u8fd9\u662f\u5728\u6492\u8c0e\u5417\uff1f\u662f\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0cpthreadself\u5c06\u5c1d\u8bd5\u4ece\u5185\u5b58\u5730\u57400x0+0x10\u8bfb\u53d6\uff0c\u5e76\u4e14\u80af\u5b9a\u662fSegerror\u3002\n(Gdb)print(void*)pthread_self()[\u5207\u6362\u5230\u7ebf\u7a0b0x7ffff7da5700(Lwp 14474)]\u4ecegdb\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u505c\u6b62\u3002\u5305\u542b\u51fd\u6570(Pthreadself)\u7684\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u5c06\u88ab\u653e\u5f03\u3002\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\uff0cgdb\u5c06\u9759\u9ed8\u505c\u6b62\u3002\n\u8c03\u5ea6\u7a0b\u5e8f\u9501\u5b9a\u662fgdb\u7684\u4e00\u4e2a\u7279\u6027\uff0c\u5b83\u4f1a\u793c\u8c8c\u5730\u8981\u6c42Linux\u5185\u6838\u4e0d\u8981\u62a2\u5360\u5f53\u524d\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u67e5\u770b\u5b83\u3002\n\u56e0\u6b64\uff0c\u5e7f\u53d1\u94f6\u884c\u5728\u6492\u8c0e\u3002\u4f46\u8fd9\u5e76\u4e0d\u5b8c\u5168\u4ee4\u4eba\u60ca\u8bb6--%fs\u5bc4\u5b58\u5668\u662f\u7ebf\u7a0b\u672c\u5730\u7684(\u5728Linux 64\u4f4d\uff01\u8bf7\u8bb0\u4f4f\uff0c\u5bc4\u5b58\u5668\u7684\u7528\u9014\u5b8c\u5168\u5728ABI\u4e2d\u5b9a\u4e49\uff0c\u5b83\u7531\u5185\u6838\u51b3\u5b9a(ITSO)\uff0c\u5e76\u4e14GDB\u672c\u8eab\u8fd0\u884c\u81ea\u5df1\u7684\u7ebf\u7a0b\uff0c\u4e0e\u6b21\u8981\u7684\u7ebf\u7a0b\u4e0d\u540c\u3002\n\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u8ba8\u8bba\u8fc7\u5947\u602a\u7684gdb\u672f\u8bed\u4e86\uff0c\u6240\u4ee5\uff0c\u4ee5\u9632\u4e07\u4e00\uff0c\u201c\u6b21\u8981\u7684\u201d\u5c31\u662f\u201c\u6b63\u5728\u8c03\u8bd5\u7684\u8fdb\u7a0b\u201d\u3002\u6211\u77e5\u9053\u5440\u3002\u602a\u602a\u7684\u3002\u7ee7\u7eed\u524d\u8fdb\u3002\n\u662f\u5426\u6709\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6%fs\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff1f\u5f53\u7136\u6709\uff01\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7arcprctl syscall\u793c\u8c8c\u5730\u8be2\u95ee\u5185\u6838\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u7684\u5305\u88c5\u5668\uff1a\n#include&lt\uff1basm/prctl.h&gt\uff1b#include&lt\uff1bsys/prctl.h&gt\uff1bint arch_prctl(int code\uff0c\u65e0\u7b26\u53f7\u957f\u5730\u5740)\uff1bint arch_prctl(int code\uff0cunsign long*addr)\uff1b#\u5b9a\u4e49ARCH_SET_GS 0x1001#DEFINE ARCH_SET_FS 0x1002#DEFINE ARCH_GET_FS 0x1003#DEFINE ARCH_GET_GS 0x1004\u3002\n\u8fd9\u5c31\u5bf9\u4e86\u3002\u540c\u4e00\u51fd\u6570\u4e00\u6b21\u5b9a\u4e49\u4e3a\u83b7\u53d6uint64_t\uff0c\u7b2c\u4e8c\u6b21\u5b9a\u4e49\u4e3a\u83b7\u53d6\u6307\u5411uint64_t\u7684\u6307\u9488\u3002\u60a8\u77e5\u9053\uff0c\u56e0\u4e3a\u5b83\u65e2\u53ef\u4ee5\u83b7\u53d6\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5185\u5bb9\u3002\n\u8fd9\u5c31\u662flibc\u7684\u8fd0\u4f5c\u65b9\u5f0f\uff0c\u5b9d\u8d1d\u3002\u544a\u8bc9\u4f60C\u6709\u7c7b\u578b\u7cfb\u7edf\u7684\u4eba\u4e0d\u662f\u5728\u5984\u60f3\u5c31\u662f\u5728\u8c03\u76ae\u6363\u86cb\u3002\n\u4e3a\u4ec0\u4e48\u8981\u4e3e\u884c\u8fd9\u4e2a\u4eea\u5f0f\uff1f\u55ef\uff0c%fs\u548c%gs\u4e0d\u662f\u901a\u7528\u5bc4\u5b58\u5668-\u5b83\u4eec\u662f\u6bb5\u5bc4\u5b58\u5668\u3002\u572864\u4f4d\u65f6\u4ee3\u4e4b\u524d\uff0c\u6bb5\u5bc4\u5b58\u5668\u8981\u91cd\u8981\u5f97\u591a\u3002\n\u90a3\u4e00\u5e74\u662f1976\u5e74\u3002\u81ea\u4ece8\u4f4dIntel8008\u53d1\u5e03\u4ee5\u6765\uff0c\u5df2\u7ecf\u8fc7\u53bb\u4e86\u56db\u5e74\uff0c\u5176\u4ed6\u516c\u53f8\u4e5f\u5728\u9646\u7eed\u53d1\u5e0316\u4f4d\u5fae\u5904\u7406\u5668\u3002\n\u6570\u5b57\u8bbe\u5907\u516c\u53f8(DEC)\u3001\u98de\u5146\u534a\u5bfc\u4f53\u548c\u56fd\u5bb6\u534a\u5bfc\u4f53\u90fd\u53d1\u5e03\u4e86\u67d0\u79cd\u5f62\u5f0f\u768416\u4f4d\u5fae\u5904\u7406\u5668\u3002\u4e00\u5e74\u524d\uff0cNational\u751a\u81f3\u53d1\u5e03\u4e86Pace\uff0c\u8fd9\u662f\u4e00\u6b3e\u677e\u6563\u5730\u57fa\u4e8e\u81ea\u5df1\u7684IMP-16\u8bbe\u8ba1\u7684\u5355\u7247\u673a\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u82f1\u7279\u5c14\u7684iAPX432\u9879\u76ee\u5df2\u7ecf\u8fdb\u884c\u4e86\u4e00\u5e74\uff0c\u8fd9..\u3002\u786e\u5b9e\u53ef\u4ee5\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u6574\u7bc7\u6587\u7ae0\u3002Ada\u662f\u5904\u7406\u5668\u7684\u76ee\u6807\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u548c\u57fa\u4e8e\u80fd\u529b\u7684\u5bfb\u5740\u3002\n\u7136\u800c\uff0ciAPX432\u9879\u76ee\u5374\u4e3e\u6b65\u7ef4\u8270--\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e9b\u62bd\u8c61\u7684\u4e1c\u897f\u5e76\u4e0d\u662f\u514d\u8d39\u7684\u3002\u5b83\u4eec\u4e0d\u4ec5\u9700\u8981\u660e\u663e\u66f4\u591a\u7684\u6676\u4f53\u7ba1\uff0c\u800c\u4e14\u4e0e\u7ade\u4e89\u5bf9\u624b\u7684\u5fae\u5904\u7406\u5668\u76f8\u6bd4\uff0c\u540c\u7b49\u7a0b\u5e8f\u7684\u6027\u80fd\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\n\u56e0\u6b64\uff0c\u57281976\u5e745\u6708\uff0c\u82f1\u7279\u5c14\u7684\u540c\u4e8b\u4eec\u8bf4\u201c\u597d\u5427\uff0c\u8ba9\u6211\u4eec\u5728iAPX432\u70f9\u996a\u5b8c\u6210\u4e4b\u524d\u53d1\u5e03\u4e00\u4e9b16\u4f4d\u82af\u7247\u5427\u3002\u201d\u73b0\u5728\u8ddd\u79bb\u5fb7\u5dde\u4eea\u5668(TI)\u53d1\u5e03\u53e6\u4e00\u6b3e\u5355\u823916\u4f4d\u5fae\u5904\u7406\u5668TMS9900\u8fd8\u6709\u4e00\u4e2a\u6708\uff0c\u538b\u529b\u662f\u5b9e\u5b9e\u5728\u5728\u7684\u3002\n\u4f46\u662f\u201c16\u4f4d\u82af\u7247\u201d\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u55ef\uff0c\u5b9e\u9645\u4e0a\u662f\u2026\u3002\u8fd9\u8981\u89c6\u60c5\u51b5\u800c\u5b9a\u3002\n\u4f8b\u5982\uff0c\u6211\u66fe\u5c06\u82f1\u7279\u5c148008\u79f0\u4e3a\u201c8\u4f4d\u82af\u7247\u201d--\u4f46\u5b83\u6ca1\u90a3\u4e48\u7b80\u5355\u3002\n\u5f53\u7136\uff0c8008\u7684\u5bc4\u5b58\u5668\u662f8\u4f4d\u7684\u3002\u6bcf\u4e2a\u4f4d\u90fd\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\uff1a\n\u6bcf\u4e00\u4f4d\u4e5f\u5bf9\u5e94\u4e8e2\u7684\u5e42-\u901a\u8fc7\u5c06\u6bcf\u4e2a\u201c\u5f00\u201d\u4f4d\u4e2d\u7684\u4e24\u4f4d\u7684\u5e42\u76f8\u52a0\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7684\u503c\uff1a\n\u6709\u7b26\u53f7\u6574\u6570\u6d89\u53ca\u7684\u6bd4\u8f83\u591a\uff0c\u800c\u6d6e\u70b9\u6570\u6d89\u53ca\u7684\u751a\u81f3\u66f4\u591a\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u8981\u592a\u5206\u5fc3\u4e86\u3002\n\u5982\u679c\u4f60\u53ea\u75288\u4f4d\u6765\u7f16\u7801\u5185\u5b58\u5730\u5740\uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u5bfb\u5740256\u5b57\u8282\u7684\u5185\u5b58\u3002\n\u56e0\u6b64\uff0c\u5373\u4f7f\u662f8\u4f4d\u82af\u7247\u901a\u5e38\u4e5f\u6709\u66f4\u5927\u7684\u201c\u5730\u5740\u603b\u7ebf\u201d\u30028008\u6709\u4e00\u676114\u4f4d\u7684\u5730\u5740\u603b\u7ebf\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684PC\u5bc4\u5b58\u5668(\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u6211\u4eec\u5728x86-64\u4e0a\u79f0\u4e4b\u4e3a\u6307\u4ee4\u6307\u9488)\u7684\u5bbd\u5ea6\u662f..14\u4f4d\u3002\n\u5982\u4f55\u4f7f\u75288\u4f4d\u901a\u7528\u5bc4\u5b58\u5668\u64cd\u4f5c14\u4f4d\u5730\u5740\uff1f\u4f7f\u7528\u5176\u4e2d\u4e24\u4e2a\u5bc4\u5b58\u5668\uff01\u4e3a\u4ec0\u4e48\u662f14\u4f4d\u800c\u4e0d\u662f16\u4f4d\uff1f\u55ef\uff0c\u5f53\u4f60\u5728\u505a\u5f00\u5fc3\u679c\u7684\u65f6\u5019\uff0c\u6bcf\u6839\u5927\u5934\u9488\u90fd\u5f88\u91cd\u8981\uff1a\n\u8be5\u82af\u7247\u5177\u67098\u4f4d\u5bbd\u7684\u6570\u636e\u603b\u7ebf\u548c14\u4f4d\u5bbd\u7684\u5730\u5740\u603b\u7ebf\uff0c\u53ef\u5bfb\u574016KB\u7684\u5185\u5b58\u3002\u7531\u4e8e\u82f1\u7279\u5c14\u57281972\u5e74\u53ea\u80fd\u751f\u4ea718\u9488DIP\u5c01\u88c5\uff0c\u603b\u7ebf\u5fc5\u987b\u8fdb\u884c\u4e09\u500d\u591a\u8def\u590d\u7528\u3002\u56e0\u6b64\uff0c\u8be5\u82af\u7247\u7684\u6027\u80fd\u662f\u975e\u5e38\u6709\u9650\u7684\uff0c\u5b83\u9700\u8981\u5927\u91cf\u7684\u5916\u90e8\u903b\u8f91\u6765\u89e3\u7801\u6240\u6709\u7684\u4fe1\u53f7\u3002\n\u56e0\u6b64\uff0c\u591a\u4e8f\u4e86\u5f15\u811a\u590d\u7528\uff0c8008\u53ef\u4ee5\u5bfb\u574016KiB\u7684\u5185\u5b58\uff0c\u8fd9\u4ecd\u7136\u4e0d\u662f\u5f88\u591a\u3002\u56de\u523070\u5e74\u4ee3\uff0c\u82f1\u7279\u5c14\u662f\u4e00\u5bb6\u81f4\u529b\u4e8e\u5236\u9020\u5185\u5b58\u82af\u7247\u7684\u521d\u521b\u516c\u53f8\u3002\u4e0d\u96be\u7406\u89e3\uff0c\u4ed6\u4eec\u5e0c\u671b\u4eba\u4eec\u4f7f\u7528\u80fd\u591f\u5bfb\u5740\u66f4\u591a\u5185\u5b58\u7684\u5fae\u5904\u7406\u5668\u3002\n8086&#39\uff1b\u7684\u8bbe\u8ba1\u66f4\u5927\u3002\u5b83\u91c7\u752840\u9488\u5c01\u88c5\uff0c\u56e0\u6b64\u4ed6\u4eec\u80fd\u591f\u5c06\u6570\u636e\u5f15\u811a\u7684\u6570\u91cf\u51cf\u5c11\u523020\u4e2a--\u800c\u4e14\u8fd8\u5e26\u6709\u4e00\u4e9b\u591a\u8def\u590d\u7528\u529f\u80fd\u3002\u901a\u8fc720\u4f4d\u5730\u5740\u603b\u7ebf\uff0c8086\u80fd\u591f\u63d0\u4f9b\u9ad8\u8fbe1MIB\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002\n\u4f46\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff0c8086\u7684\u901a\u7528\u5bc4\u5b58\u5668\u66f4\u5c0f--\u5b83\u4eec\u53ea\u670916\u4f4d\u3002\u5355\u4e2a\u5bc4\u5b58\u5668\u4ecd\u7136\u4e0d\u8db3\u4ee5\u5f15\u7528\u7269\u7406\u5b58\u50a8\u5668\u5730\u5740\u3002\n\u600e\u4e48\u529e\u5462\uff1f\u4f7f\u7528\u5206\u6bb5\uff018086\u5f15\u5165\u4e86\u56db\u4e2a\u6bb5\u5bc4\u5b58\u5668\uff1a\u4ece\u4e2d\u8bfb\u53d6\u6307\u4ee4\u7684\u4ee3\u7801\u6bb5(CS)\u3001\u901a\u7528\u5185\u5b58\u7684\u6570\u636e\u6bb5(DS)\u3001\u5806\u6808\u6bb5(SS)\u548c\u989d\u5916\u6bb5(ES)\uff0c\u5f53\u60a8\u9700\u8981\u4ece\u5185\u5b58\u7684\u4e00\u4e2a\u533a\u57df\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u533a\u57df\u65f6\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u53ef\u7528\u4f5c\u4e34\u65f6\u5b58\u50a8\u7a7a\u95f4\u3002\n\u6307\u4ee4\u901a\u5e38\u91c7\u752816\u4f4d\u504f\u79fb\u91cf\u53c2\u6570\uff0c\u6839\u636e\u6307\u4ee4\u7684\u6027\u8d28\uff0c\u5b83\u4f1a\u5c06\u8be5\u504f\u79fb\u91cf\u4e0e\u76f8\u5173\u7684\u6bb5\u5bc4\u5b58\u5668\u76f8\u52a0\u3002\u6bcf\u4e2a\u6bb5\u5bc4\u5b58\u5668\u90fd\u662f\u2026\u5bc4\u5b58\u5668\u3002\u4e5f\u662f16\u4f4d\u300216+16=20\uff0c\u4e00\u5207\u6b63\u5e38\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e8086\uff0c\u6bcf\u4e2a\u5355\u72ec\u7684\u5b58\u50a8\u5668\u5730\u5740\u53ef\u4ee5\u75314096\u4e2a\u4e0d\u540c\u7684\u6bb5\uff1a\u504f\u79fb\u91cf\u5bf9\u5f15\u7528\u3002\n\u8fd9\u4e5f\u610f\u5473\u7740\uff0c\u53ea\u8981\u60a8\u7684\u6574\u4e2a\u7a0b\u5e8f(\u4ee3\u7801\u548c\u6570\u636e)\u9002\u5408\u5355\u4e2a64K\u6bb5\uff0c\u60a8\u5c31\u53ef\u4ee5\u62e5\u6709\u4ece0\u5f00\u59cb\u7684\u4e0d\u9519\u7684\u504f\u79fb\u91cf(\u5bf9\u4e8e\u60a8\u7684\u6bb5)\u3002\n\u5982\u679c\u5b83\u4e0d\u80fd\u5bb9\u7eb3\u5728\u4e00\u4e2a64K\u7684\u6bb5\u4e2d\uff0c\u90a3\u4e48\u4f60\u7684\u504f\u79fb\u91cf\u5c31\u4e0d\u518d\u662f16\u4f4d\u7684\u4e86\uff0c\u4f60\u5fc5\u987b\u5f00\u59cb\u5728\u4e0d\u540c\u7684\u6bb5\u4e4b\u95f4\u6765\u56de\u5207\u6362\uff0c\u5e76\u5904\u7406\u65f6\u9ae6\u7684\u6307\u9488\u5927\u5c0f\u3002\n\u5982\u679c\u8981\u5f15\u7528\u540c\u4e00\u6bb5\u4e2d\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528NEAR\u6307\u9488\uff1a\n\u5982\u679c\u8981\u5f15\u7528\u53e6\u4e00\u4e2a\u6bb5\u4e2d\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fdc\u6307\u9488\u3002\n\u5982\u679c\u60a8\u60f3\u5f15\u7528\u53e6\u4e00\u4e2a\u6bb5\u4e2d\u7684\u5185\u5b58\uff0c\u5e76\u4e14\u60a8\u7684\u6307\u9488\u7b97\u6cd5\u53ef\u80fd\u4f1a\u66f4\u6539\u6307\u9488\u7684\u503c\u4ee5\u5f15\u7528\u53e6\u4e00\u4e2a\u6bb5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5de8\u5927\u7684\u6307\u9488\uff1a\n1982\u5e74\uff0c\u82f1\u7279\u5c14\u63a8\u51fa\u4e8680286\uff0c\u6211\u4eec\u5c06\u79f0\u4e4b\u4e3a286\u578b\uff0c\u5b83\u5f15\u5165\u4e86\u51e0\u4e2a\u65b0\u5947\u7684\u4e1c\u897f\u3002\u9996\u5148\uff0c\u6570\u636e\u5f15\u811a\u4e0d\u518d\u662f\u591a\u8def\u590d\u7528\u7684-\u82af\u7247\u670968\u4e2a\u5f15\u811a\uff0c\u5176\u4e2d16\u4e2a\u5f15\u811a\u4e13\u7528\u4e8e\u5730\u5740\u603b\u7ebf\u3002\n\u7b2c\u4e8c\uff1a286\u5f15\u5165\u4e86\u201c\u4fdd\u62a4\u865a\u62df\u5730\u5740\u6a21\u5f0f\u201d\u3002\u7136\u800c\uff0c\u57288086\u4e0a\uff0c\u4ee3\u7801\u3001\u5806\u6808\u548c\u6570\u636e\u6bb5\u53ef\u4ee5(\u5e76\u4e14\u505a\u5230\u4e86\uff01)\u3002\u91cd\u53e0\uff0c286\u53f7\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd8\u53ef\u4ee5\u4e3a\u6bb5\u5206\u914d\u201c\u7279\u6743\u7ea7\u522b\u201d-\u5177\u6709\u8f83\u4f4e\u6743\u9650\u7ea7\u522b\u7684\u6bb5\u4e0d\u80fd\u8bbf\u95ee\u5177\u6709\u8f83\u9ad8\u6743\u9650\u7ea7\u522b\u7684\u6bb5\u3002\n\u8fd8\u8bb0\u5f97\u4fdd\u62a4\u73af\u5417\uff1f\u6211\u4eec\u5728\u201c\u8270\u96be\u7684\u9605\u8bfb\u6587\u4ef6\u201d(\u7b2c2\u90e8\u5206)\u4e2d\u8c08\u5230\u4e86\u73af0\u548c\u73af3--\u4ec5\u6b64\u800c\u5df2\uff01\n\u201c\u73af\u201d\u662f\u7279\u6743\u7ea7\u522b\uff0c\u5f53\u524d\u7279\u6743\u7ea7\u522b\u5b58\u50a8\u5728CS\u5bc4\u5b58\u5668\u7684\u8f83\u4f4e\u4e24\u4f4d\u4e2d\u3002\u60a8\u77e5\u9053\u5417\uff0c\u6211\u4eec\u7684\u793a\u4f8b\u7a0b\u5e8f\u8fd0\u884c\u7684\u662f\u2026\u3002\n\u2026\u3002\u57283\u53f7\u73af\uff01\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5e38\u89c4\u7684\u7528\u6237\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u5185\u6838\u4ee3\u7801\u3002\n\u7136\u800c\uff0c286&#39\uff1b\u7684\u4fdd\u62a4\u6a21\u5f0f\u4f7f\u7528\u8d77\u6765\u6709\u70b9\u70e6\u4eba--\u9996\u5148\uff0c\u5b83\u7834\u574f\u4e86\u4e0e\u65e7\u76848086\u5e94\u7528\u7a0b\u5e8f\u7684\u517c\u5bb9\u6027\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4e00\u65e6\u60a8\u5c06\u5176\u4ece\u201c\u771f\u5b9e\u201d\u6a21\u5f0f\u5207\u6362\u5230\u201c\u4fdd\u62a4\u201d\u6a21\u5f0f\uff0c\u60a8\u5c31\u65e0\u6cd5\u5728\u4e0d\u6267\u884c\u786c\u91cd\u7f6e\u7684\u60c5\u51b5\u4e0b\u5207\u6362\u56de\u6765\u3002\n\u4f46\u662f\uff0c\u5c11\u6570\u4f7f\u7528286\u4fdd\u62a4\u6a21\u5f0f\u7684\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u4f7f\u7528\u5b8c\u6574\u768424\u4f4d\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff1a16MiB\u3002\u7406\u8bba\u4e0a\u3002\u5b9e\u9645\u4e0a\uff0c286\u4e3b\u677f\u53ea\u652f\u6301\u9ad8\u8fbe4MiB\u7684RAM-\u5373\u4f7f\u90a3\u6837\uff0c\u8d2d\u4e70\u8fd9\u4e48\u591a\u5185\u5b58\u4e5f\u662f\u6602\u8d35\u5f97\u4ee4\u4eba\u671b\u800c\u5374\u6b65\u3002\n\u5feb\u8fdb\u52301985\u5e74\u3002\u65e5\u7f8e\u534a\u5bfc\u4f53\u5927\u6218\u6b63\u5982\u706b\u5982\u837c\u3002\u82f1\u7279\u5c14\u6700\u7ec8\u51b3\u5b9a\u505c\u6b62\u751f\u4ea7DRAM\uff0c\u76ee\u524d\u4e13\u6ce8\u4e8e\u5fae\u5904\u7406\u5668\u3002\n1985\u5e7410\u6708\uff0c\u82f1\u7279\u5c14\u53d1\u5e03\u4e8680386(\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c386\u201d)\uff0c\u8fd9\u662f\u5bf980286\u4f53\u7cfb\u7ed3\u6784\u8fdb\u884c32\u4f4d\u6269\u5c55\u7684\u7b2c\u4e00\u4e2a\u5b9e\u73b0\u3002\u6700\u540e\uff0c\u6570\u636e\u5bbd\u5ea6\u548c\u5730\u5740\u5bbd\u5ea6\u662f\u76f8\u540c\u7684\uff1a32\u4f4d\u3002\n\u8fd9\u610f\u5473\u7740-\u4ece\u7406\u8bba\u4e0a\u8bb2-386\u80fd\u591f\u5bfb\u57404GiB\u7684RAM\u3002\n\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u8ba9\u4f60\u62e5\u6709\u90a3\u4e48\u591a\u5185\u5b58\u7684\u677f--\u6216\u8005\u4efb\u4f55\u63a5\u8fd1\u5b83\u7684\u5730\u65b9--\u90fd\u662f\u4e0d\u5b58\u5728\u7684\u3002\u5373\u4f7f\u53ea\u6709\u51e0\u5146\u5b57\u8282\u7684RAM\u4e5f\u4f1a\u8ba9\u60a8\u671b\u800c\u5374\u6b65\u3002\nTall Tree Systems\u63a8\u51fa\u4e86Jram\u7cfb\u5217\u7684\u6700\u65b0\u6210\u5458Jram-3\uff0cJRAM-3\u662f\u7b2c\u56db\u4ee3\u591a\u529f\u80fd\u5b58\u50a8\u677f\uff0c\u662f\u5907\u53d7\u8d5e\u8a89\u7684Jram-2\u7684\u7ee7\u4efb\u8005\u3002JRAM-3\u4e13\u4e3a\u6ee1\u8db3\u4e3b\u8981\u7535\u5b50\u8868\u683c\u4f9b\u5e94\u5546\u6b63\u5728\u5b9e\u65bd\u7684\u6700\u65b0\u6269\u5c55\u5185\u5b58\u89c4\u8303\u6807\u51c6\u800c\u8bbe\u8ba1\uff0c\u53ef\u8bbf\u95ee\u9ad8\u8fbe8\u5146\u5b57\u8282\u7684\u5185\u5b58\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5927\u3001\u66f4\u9ad8\u6548\u7684\u7535\u5b50\u8868\u683c\u3002JRAM-3\u8fd8\u53ef\u7528\u4e8eDOS\u5b58\u50a8\u5668\u3001\u7535\u5b50\u82af\u7247\u3002\n..", "note_en": "Welcome back and thanks for joining us for the  reads notes\u2026the thirteenth installment of our series on ELF files, what they are,what they can do, what does the dynamic linker do to them, and how canwe do it ourselves.\n I&#39;ve been pretty successfully avoiding talking about TLS so far (no,  notthatone)but I guess we&#39;ve reached a point where it cannot be delayed any further, so.\n  We know from our adventures in  reading files the hardway that, as a userlandapplication, we are a  guest on the computer.\n Sure, we may execute some instructions, we may even politely request thatcertain devices tend to our needs but ultimately the one who&#39;s calling theshots is the kernel. We are  tolerated here. Honestly, the kernel wouldrather nothing execute at all.\n  Occasionally though, the kernel will let non-kernel code execute. And again,it&#39;s in charge of exactly how and when that happens - and for how long.\n By now we&#39;ve formed a fairly good idea of how processes are loaded intomemory: the kernel itself parses the file we want to execute, if it&#39;s ELF itparses it (it&#39;s not interested in nearly as many things as we are, though),maps a few things, then \u201chands off\u201d control to it.\n But what does  hand off mean? In concrete terms, what happens? Well, today&#39;snot the day we get into kernel debugging (although\u2026 nah. unless? no.), butwe sure can get a rough idea what&#39;s going on.\n What is a computer? A miserable little pile of registers. That&#39;s right - it&#39;sglobal variables all the way down.\n Here&#39;s the value of  some of the CPU registers just as  echidna&#39;s main functionstarts executing:\n  Is that all of them? Nope! There&#39;s 128-bit registers (SSE), 256-bit registers(AVX), 512-bit registers (AVX-512) - and of course we still have the x87/FPUregisters, from back when  you needed a co-processor forthat.\n TL;DR - it&#39;s a  whole mess. The point is, we have a bunch of globalvariables that are, like,  really fast to read from and write to. Sooptimizing compilers tend to want to use them whenever possible.\n And by \u201cthem\u201d I mean the general-purpose ones in the bunch - from  %rax to %r15. And sometimes, if your optimizer feels particularly giddy, some ofthe  %xmmN registers as well (as we have painfully learned in the  lastarticle).\n And then there&#39;s special-purpose registers, like  cs,  ss,  ds,  es, etc.We&#39;re not overly concerned with those four in particular, because on we&#39;re on64-bit Linux and our memory model is somewhat simpler.\n In fact, we&#39;ve been using registers all this time to send the kernel loveletters - in  echidna&#39;s  write function for example:\n pub unsafe fn write(fd: u32, buf: *const u8, count: usize) { asm!( &#34; mov rax, 1 syscall &#34; :: &#34;{rdi}&#34;(fd), &#34;{rsi}&#34;(buf), &#34;{rdx}&#34;(count) : &#34;rax&#34;, &#34;rcx&#34;, &#34;r11&#34; : &#34;intel&#34; )}\n So both the kernel and userland applications use registers. One of myfavorite registers - seeing as I&#39;m in the middle of writing a seriesabout ELF files - is  %rip, the instruction pointer.\n I&#39;m being told that it wasn&#39;t always that simple, but on 64-bit Linux, itjust points to the (virtual) address of the code we&#39;re currently executing.Whenever program execution moves forward, so does  %rip - by however manybytes it took to encode the instruction that was just executed:\n  So, this answers part of our question - how does the kernel \u201chand off\u201dcontrol to a program: it just changes  %rip! And the processor does therest. Well. Sorta kinda. \u201cAmong other things\u201d, let&#39;s say.\n (Note that, on x86, you can&#39;t write to the  %rip register directly - youhave to use instructions like  jmp,  call, or  ret.)\n To be fair, it also switches from ring 0 to ring 3 - again, something we&#39;vebriefly discussed in  Reading files the hard way Part2. And it switches from the\u201ckernel virtual address space\u201d to the \u201cuserland virtual address space\u201d.\n  Point is - that&#39;s also how switching  between processes works. As far as theuser is concerned, processes execute in parallel, but as far as the kernel isconcerned, its scheduler is handing out slices of time. Whenever it letsprocess \u201cfoo\u201d execute for a bit, it:\n Switches from Ring 0 to Ring 3, also jumping to whatever address  %riphad when process \u201cfoo\u201d was last interrupted\n Eventually, the system timer interrupt goes off, and execution immediatelyjumps back to the kernel&#39;s interrupt handler - at which point the kerneldecides whether the process has been naughty or nice and whether it meritsmore time.\n If not - for example, if it decides we really should be giving process \u201cbar\u201dmore time next, then the kernel saves the state of \u201cfoo\u201d, (most of theregisters), resets a bunch of CPU state (mostly memory caches), and switchesto \u201cbar\u201d the way we&#39;ve just described.\n That&#39;s the  very distant overview of things. It&#39;s also not entirely correct.But for our purposes, it&#39;s correct enough.\n That&#39;s for processes. But what about threads? Threads are also \u201cpreemptivemultitasking\u201d - instead of explicitly relinquishing control, their executioncan be violently interrupted (ie. \u201cpreempted\u201d) so that other threads can beexecuted.\n The \u201cother\u201d multitasking is cooperative multitasking - which you don&#39;t needthe kernel&#39;s help to do. That&#39;s how coroutines work - just bits of userlandstate that all play nice together when it comes to deciding whose turn is it.\n Switching between threads is simpler though. Because of all threads of agiven process share the same address space. So there&#39;s less state to saveand restore when switching from one to the other.\n But then\u2026 the question arises: how do you tell threads apart? If severalthreads are started with the same entry point, how do you know which iswhich? Is that something the CPU handles? or the kernel?\n    // in `elk/samples/twothreads/twothreads.c`#include &lt;unistd.h&gt;#include &lt;pthread.h&gt;void *in_thread(void *unused) { while (1) { sleep(1); }}int main() { pthread_t t1, t2; pthread_create(&amp;t1, NULL, in_thread, NULL); pthread_create(&amp;t2, NULL, in_thread, NULL); pthread_join(t1, NULL); pthread_join(t2, NULL);}\n  $ cd elk/samples/twothreads$ gcc twothreads.c -pthread -o twothreads$ ./twothreads(program doesn&#39;t print anything and never exits)\n  $ gdb -quiet ./twothreadsReading symbols from ./twothreads...(gdb) break in_threadBreakpoint 1 at 0x1175: file twothreads.c, line 6.(gdb) runStarting program: /home/amos/ftl/elk/samples/twothreads/twothreads[Thread debugging using libthread_db enabled]Using host libthread_db library &#34;/usr/lib/libthread_db.so.1&#34;.[New Thread 0x7ffff7da5700 (LWP 14253)][New Thread 0x7ffff75a4700 (LWP 14254)][Switching to Thread 0x7ffff7da5700 (LWP 14253)]Thread 2 &#34;twothreads&#34; hit Breakpoint 1, in_thread (unused=0x0) at twothreads.c:66 sleep(1);\n Everything makes sense so far. We&#39;ve got three threads - the main thread, andthe two other we created. So really, the program should be named \u201cthreethreads\u201d.\n  (gdb) bt#0 in_thread (unused=0x0) at twothreads.c:6#1 0x00007ffff7f7846f in start_thread () from /usr/lib/libpthread.so.0#2 0x00007ffff7ea83d3 in clone () from /usr/lib/libc.so.6\n Just like  info registers, GDB has  info threads, which lets us knowwhat&#39;s going on with all of them:\n (gdb) info threads Id Target Id Frame 1 Thread 0x7ffff7da6740 (LWP 14249) &#34;twothreads&#34; 0x00007ffff7f79a67 in __pthread_clockjoin_ex () from /usr/lib/libpthread.so.0* 2 Thread 0x7ffff7da5700 (LWP 14253) &#34;twothreads&#34; in_thread (unused=0x0) at twothreads.c:6 3 Thread 0x7ffff75a4700 (LWP 14254) &#34;twothreads&#34; in_thread (unused=0x0) at twothreads.c:6\n We can set the \u201ccurrent GDB thread\u201d to whatever we want, for example if wewant to see what the main thread is up to:\n (gdb) thread 1[Switching to thread 1 (Thread 0x7ffff7da6740 (LWP 14249))]#0 0x00007ffff7f79a67 in __pthread_clockjoin_ex () from /usr/lib/libpthread.so.0(gdb) bt#0 0x00007ffff7f79a67 in __pthread_clockjoin_ex () from /usr/lib/libpthread.so.0#1 0x00005555555551e3 in main () at twothreads.c:14\n  (gdb) frame 1#1 0x00005555555551e3 in main () at twothreads.c:1414 pthread_join(t1, NULL);(gdb) info localst1 = 140737351669504t2 = 140737343276800(gdb) p/x t1$1 = 0x7ffff7da5700(gdb) p/x t2$2 = 0x7ffff75a4700\n Looks like pointers. Okay. So, now that we know how to inspect the state ofvarious threads, let&#39;s see what&#39;s going on with our two threads - here they areback-to-back:\n   Things look  eerily similar. And they should - both threads are doingexactly the same thing - waiting for time to run out, one second at a time.\n Sure, some register values are off by  0x1000 ( %rbp through  %r10), but,for example,  %rip is exactly the same for both. Which is reassuring, to behonest. Not  all our assumptions are wrong.\n But there has to be a way to tell them apart. For starters, \u201cpthreads\u201d (POSIXthreads) are implemented as a userland library:\n From To Syms Read Shared Object Library0x00007ffff7fd3100 0x00007ffff7ff2b14 Yes (*) /lib64/ld-linux-x86-64.so.20x00007ffff7f76ad0 0x00007ffff7f858c5 Yes (*) /usr/lib/libpthread.so.00x00007ffff7dce630 0x00007ffff7f18e2f Yes (*) /usr/lib/libc.so.6(*): Shared library is missing debugging information.\n \u2026and it exposes functions like  pthread_self() - which returns the ID of thecalling thread. So it  must know which thread we&#39;re currently in. And  allwe have to go by are\u2026 registers.\n  Let&#39;s do something I  wish I had figured out months ago, when I was stillresearching whether \u201crolling your own dynamic linker\u201d was even a halfwayreasonable thing to do.\n  (gdb) disas pthread_selfDump of assembler code for function pthread_self: 0x00007ffff7e2efa0 &lt;+0&gt;: endbr64 0x00007ffff7e2efa4 &lt;+4&gt;: mov rax,QWORD PTR fs:0x10 0x00007ffff7e2efad &lt;+13&gt;: retEnd of assembler dump.\n   Extra Segment (ES). Pointer to extra data (\u2018E\u2019 stands for \u2018Extra\u2019).\n F Segment (FS). Pointer to more extra data (\u2018F\u2019 comes after \u2018E\u2019).\n G Segment (GS). Pointer to still more extra data (\u2018G\u2019 comes after \u2018F\u2019).\n Great. So the \u201cs\u201d stands for \u201csegment\u201d and the \u201cf\u201d stands for \u201cfxtra data\u201d.\n  But hold on a second. I&#39;m pretty sure  %fs was 0x0 every time we looked atit. Let&#39;s double check:\n (gdb) t a a i r fsThread 3 (Thread 0x7ffff75a4700 (LWP 14475)):fs 0x0 0Thread 2 (Thread 0x7ffff7da5700 (LWP 14474)):fs 0x0 0Thread 1 (Thread 0x7ffff7da6740 (LWP 14473)):fs 0x0 0\n t a a i r fs is just the obscure way of saying  thread apply all info register fs.\n That&#39;s right - whenever it&#39;s not ambiguous, GDB lets you shorten  any command oroption name. In fact, if you see a shortcut being used and you&#39;re not sure what it does,you can ask gdb, since its  help command also accepts the shortcut form.\n  (gdb) help niStep one instruction, but proceed through subroutine calls.Usage: nexti [N]Argument N means step N times (or till program stops for another reason).\n  Is this a lie? Yes. If that was the case,  pthread_self would try to readfrom memory address  0x0+0x10 and  definitely segfault.\n  (gdb) print (void*) pthread_self()[Switching to Thread 0x7ffff7da5700 (LWP 14474)]The program stopped in another thread while making a function call from GDB.Evaluation of the expression containing the function(pthread_self) will be abandoned.When the function is done executing, GDB will silently stop.\n    scheduler-locking is a feature of GDB that politely asks the Linux kernelto, like, not preempt the current thread, because we&#39;re looking at it.\n So GDB is lying. But it&#39;s not entirely surprising - the  %fs register is thread-local (on Linux 64-bit! remember that whatever a register isused for is entirely defined in the ABI and it&#39;s up to the kernel to make itso), and GDB itself is running its own threads distinct from the inferior&#39;sthreads.\n It&#39;s been a while since we&#39;ve been over weird GDB terminology, so, just incase, the \u201cinferior\u201d is the \u201cprocess being debugged\u201d. I know. Weird. Moving on.\n Is there another way to grab the contents of the  %fs register? Sure thereis! We can ask the kernel politely via the  arch_prctl syscall. We&#39;ll uselibc&#39;s wrapper for it:\n #include &lt;asm/prctl.h&gt;#include &lt;sys/prctl.h&gt;int arch_prctl(int code, unsigned long addr);int arch_prctl(int code, unsigned long *addr);#define ARCH_SET_GS\t\t0x1001#define ARCH_SET_FS\t\t0x1002#define ARCH_GET_FS\t\t0x1003#define ARCH_GET_GS\t\t0x1004\n That&#39;s right. The same function is defined once as taking an  uint64_t, anda second time as taking a  pointer to an  uint64_t. You know, since it canboth get and set things.\n That&#39;s just how libc rolls, baby. Whoever tells you C has a type system iseither delusional or mischievous.\n   Why the ceremony? Well,  %fs and  %gs aren&#39;t general-purpose registers -they&#39;re segment registers. Segment registers were a lot more relevant beforethe 64-bit era.\n   The year is 1976. Four years have passed since the released of the 8-bit Intel 8008, and other companiesare releasing 16-bit microprocessors left and right.\n  Digital Equipment Corporation (DEC), Fairchild Semiconductor and NationalSemiconductor have all released some form of 16-bit microprocessor. One yearprior, National even released the PACE, a singlechip based loosely on its own IMP-16 design.\n Meanwhile, Intel is one year into the  iAPX432 project, which.. reallywarrants at least one entire article. Ada was the intended programming languagefor the processor, and it supported object-oriented programming and  capability-based addressing.\n The iAPX 432 project was struggling though - turns out those abstractionsweren&#39;t free. Not only did they require significantly more transistors,performance of equivalent programs suffered compared to competingmicroprocessors.\n So, in May of 1976, the folks at Intel go \u201cokay let&#39;s work on  some 16-bitchip that we can release before iAPX 432 is done cooking. This is one monthbefore Texas Instruments (TI) releases the TMS9900, anothersingle-ship 16-bit microprocessor - the pressure is real.\n But what does \u201ca 16-bit chip\u201d really mean? Well actually\u2026 it all depends.\n For example, I&#39;ve referred to the  Intel8008 as an \u201c8-bit chip\u201d - but it&#39;snot that simple.\n Sure, the registers of the 8008 were eight bits. Each bit can be on or off:\n  Each bit also corresponds to a power of two - by adding the power of twoof each of the \u201con\u201d bits, we get the value as an unsigned integer:\n  Signed integers are a bit more involved - and floating-point numbers are evenmove involved. But let&#39;s not get too distracted.\n If you only used eight bits to encode memory addresses, then you could onlyaddress, well, 256 bytes of memory.\n  So, even eight-bit chips usually had a larger \u201caddress bus\u201d. The 8008had a 14-bit address bus - which means the width of its  PC register(program counter, which we call instruction pointer on x86-64) was..14 bits.\n How do you manipulate 14-bit addresses with 8-bit general-purpose registers?With two of them! Why 14-bit and not 16-bit? Well, when you&#39;re making achip, every pin counts:\n The chip has a 8 bit wide data bus and 14 bit wide address bus, which canaddress 16 KB of memory. Since Intel could only manufacture 18 pin DIPpackages at 1972, the bus has to be three times multiplexed. Therefore thechip&#39;s performance is very limited and it requires a lot external logic todecode all signals.\n So, thanks to pin multiplexing, the 8008 could address 16KiB of memory.Which is  still not a lot. And back in the 70s,  Intel was a startupdevoted to making memory chips. Itstands to reason they&#39;d like people to use microprocessors that allowaddressing a lot more memory.\n The 8086&#39;s design is bigger. It ships in a 40-pin package, so they&#39;re able tobump the number of data pins to 20 - still with some multiplexing. And with a20-bit address bus, the 8086 is able to provide a whopping  1 MiB physicaladdress space.\n  But just as before, the 8086&#39;s general-purpose registers are smaller -they&#39;re only 16 bits. A single register is still not enough to refer to aphysical memory address.\n What to do? Use segments! The 8086 introduces four segment registers:the code segment ( CS), from which instructions are read, the data segment( DS) for general memory, the stack segment ( SS), and the extra segment( ES), useful as a temporary storage space when you need to copy from onearea of memory to another.\n Instructions would typically take 16-bit offset arguments, and depending onthe nature of the instruction, it would add up that offset with the relevantsegment register. Each of the 8086&#39;s segment registers were\u2026 also 16 bits.16 + 16 = 20, all is well.\n     That means that, for the 8086, each single memory address can be referred toby 4096 different  segment:offset pairs.\n This also means that - as long as your entire program (code and data) fits withina single 64K segment, you can have nice offsets that start at 0 (for your segment).\n If it  doesn&#39;t fit in a single 64K segment, well then your offsets don&#39;t fitin 16 bits anymore, and you have to start juggling between different segments,and deal with funky pointer sizes.\n If you want to refer to memory in the same segment, you can use a  near pointer:\n  If you want to refer to memory in another segment, you can use a  far pointer\n  If you want to refer to memory in another segment  and you may have pointer arithmetic that changes the pointer&#39;s value to refer to yet  another segment, you can use a  huge pointer:\n    In 1982, Intel launches the  80286, which we&#39;ll just call the  286, whichintroduce several novelties. First off, the data pins are no longermultiplexed - the chip has 68 pins, 16 of which are dedicated to the addressbus.\n   Second: the 286 introduces \u201cprotected virtual-address mode\u201d. Whereas, on the8086, code, stack and data segment could (and did!) overlap, the 286 preventsthat. Segments can also be assigned \u201cprivilege levels\u201d - segments with lowerprivilege levels cannot access segments with higher privilege levels.\n Remember protection rings? We talked about ring 0 and ring 3 in  Readingfiles the hard way part 2 - those are it!\n A \u201cring\u201d is a privilege level, and the current privilege level is storedin the lower two bits of the CS register. And what do you know, our sample programis running\u2026\n  \u2026in Ring 3! As it should, since it&#39;s a regular userland program, not kernel code.\n However the 286&#39;s protected mode is kind of annoying to use - for starters,it breaks compatibility with old 8086 applications. And to make things worse,once you switch it from \u201creal\u201d mode to \u201cprotected\u201d mode, you can&#39;t switchback without performing a hard reset.\n But, the few applications that  do make use of the 286&#39;s protected mode areable to use the full 24-bit physical address space: 16 MiB. In theory. Inpractice, 286 motherboards only support up to 4 MiB of RAM - and even then,buying that much memory is prohibitively expensive.\n Fast forward to 1985. The  Japan-US semiconductor war is raging. Intel eventually decides to stop producing DRAM, now focusing on microprocessors.\n  In October of 1985, Intel releases the  80386 (which we&#39;ll call \u201cthe 386\u201d) -the first implementation of the 32-bit extension to the  80286 architecture.Finally,  finally, the data width and the address width are the same: 32bits.\n  Which means - in theory - the 386 is able to address 4 GiB of RAM.\n  In practice though, boards that let you have that much memory - or anywhereclose to it - do not exist. Even a couple megabytes of RAM will set you back.\n  Tall Tree Systems presents JRAM-3, the newest member of the JRAM family.JRAM-3 is a fourth generation multifunction memory board and the successor ofthe highly praised JRAM-2. Designed to meet the latest expanded memoryspecification standard being implemented by the major spreadsheet vendors,JRAM-3 can access up to eight megabytes of memory for larger, more efficientspreadsheets. JRAM-3 can also be used for DOS memory, electronic di\n......", "posttime": "2020-06-26 02:59:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ebf\u7a0b,\u7a0b\u5e8f,\u6267\u884c,local,\u5bc4\u5b58\u5668", "title": "\u5236\u4f5c\u6211\u4eec\u81ea\u5df1\u7684\u53ef\u6267\u884c\u6253\u5305\u7a0b\u5e8f\uff0c\u7b2c13\u90e8\u5206\uff0c\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8", "title_en": "Making our own executable packer, part 13, Thread-local storage", "transed": 1, "url": "https://fasterthanli.me/blog/2020/thread-local-storage/", "via": "", "real_tags": ["\u7ebf\u7a0b", "\u7a0b\u5e8f", "\u6267\u884c", "local", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "b2ce936850c390ff53a37eacb94373c7.jpeg", "infoid": 1008255, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "10.0.0\u7248\u5df2\u7ecf\u5230\u4e86\uff01\u8fd9\u662f\u4e00\u4e2a\u8de8\u8d8a\u6574\u4e2a\u5e73\u53f0\u7684\u4e3b\u8981\u7248\u672c\uff0c\u5305\u62ec\u6846\u67b6\u3001\u89d2\u5ea6\u6750\u8d28\u548cCLI\u3002\u8fd9\u4e2a\u7248\u672c\u6bd4\u5178\u578b\u7684\u7248\u672c\u8981\u5c0f\uff1b\u4ece\u6211\u4eec\u53d1\u5e039.0\u7248\u7684ANGLE\u5230\u73b0\u5728\u53ea\u67094\u4e2a\u6708\u7684\u65f6\u95f4\u3002\n\u6211\u4eec\u5c1d\u8bd5\u6bcf\u5e74\u53d1\u5e03\u4e24\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u4ee5\u4e0eJavaScript\u751f\u6001\u7cfb\u7edf\u7684\u5176\u4f59\u90e8\u5206\u4fdd\u6301\u89d2\u5ea6\u540c\u6b65\uff0c\u5e76\u62e5\u6709\u53ef\u9884\u6d4b\u7684\u65f6\u95f4\u8868\u3002\u6211\u4eec\u8ba1\u5212\u5728\u4eca\u5e74\u79cb\u5929\u53d1\u5e03\u7248\u672c11\u3002\n\u8981\u4f7f\u7528\u65b0\u7684\u65e5\u671f\u8303\u56f4\u9009\u53d6\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528MAT-DATE-RAME-INPUT\u548cMAT-DATE-RANGE-PICTER\u7ec4\u4ef6\u3002\n\u5f53\u60a8\u4f7f\u7528\u4e0eCommonJS\u4e00\u8d77\u6253\u5305\u7684\u4f9d\u8d56\u9879\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f83\u5927\u7684\u8f83\u6162\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4ece\u7248\u672c10\u5f00\u59cb\uff0c\u5f53\u60a8\u7684\u6784\u5efa\u62c9\u5165\u8fd9\u4e9b\u6346\u7ed1\u5305\u4e4b\u4e00\u65f6\uff0c\u6211\u4eec\u73b0\u5728\u4f1a\u8b66\u544a\u60a8\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u5f00\u59cb\u770b\u5230\u8fd9\u4e9b\u5173\u4e8e\u4f9d\u8d56\u9879\u7684\u8b66\u544a\uff0c\u8bf7\u8ba9\u60a8\u7684\u4f9d\u8d56\u9879\u77e5\u9053\u60a8\u66f4\u559c\u6b22ECMAScript\u6a21\u5757(ESM)\u5305\u3002\n\u5f53\u60a8\u4f7f\u7528ng new\u521b\u5efa\u65b0\u7684\u5de5\u4f5c\u533a\u65f6\uff0c\u7248\u672c10\u63d0\u4f9b\u4e86\u66f4\u4e25\u683c\u7684\u9879\u76ee\u8bbe\u7f6e\u3002\n\u542f\u7528\u6b64\u6807\u5fd7\u4f1a\u4f7f\u7528\u4e00\u4e9b\u65b0\u8bbe\u7f6e\u6765\u521d\u59cb\u5316\u60a8\u7684\u65b0\u9879\u76ee\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u53ef\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\uff0c\u5e2e\u52a9\u60a8\u63d0\u524d\u6355\u83b7\u9519\u8bef\uff0c\u5e76\u5141\u8bb8CLI\u5bf9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u9ad8\u7ea7\u4f18\u5316\u3002\u5177\u4f53\u5730\u8bf4\uff0cStrict\u6807\u5fd7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u5bf9ANGLE\u7684\u4f9d\u8d56\u9879\u8fdb\u884c\u4e86\u4e00\u4e9b\u66f4\u65b0\uff0c\u4ee5\u4e0eJavaScript\u751f\u6001\u7cfb\u7edf\u4fdd\u6301\u540c\u6b65\u3002\n\u6211\u4eec\u8fd8\u66f4\u65b0\u4e86\u9879\u76ee\u5e03\u5c40\u3002\u4ece\u7248\u672c10\u5f00\u59cb\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u65b0\u7684tsconfig.base.json\u3002\u8fd9\u4e2a\u989d\u5916\u7684tsconfig.json\u6587\u4ef6\u66f4\u597d\u5730\u652f\u6301IDE\u548c\u6784\u5efa\u5de5\u5177\u89e3\u6790\u7c7b\u578b\u548c\u5305\u914d\u7f6e\u7684\u65b9\u5f0f\u3002\n\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86\u65b0\u9879\u76ee\u7684\u6d4f\u89c8\u5668\u914d\u7f6e\uff0c\u4ee5\u6392\u9664\u8f83\u65e7\u548c\u8f83\u5c11\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u3002\n\u8fd9\u6709\u4e00\u4e2a\u526f\u4f5c\u7528\uff0c\u5373\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u65b0\u9879\u76ee\u7981\u7528ES5\u6784\u5efa\u3002\u8981\u4e3a\u9700\u8981ES5\u6784\u5efa\u548c\u5dee\u5f02\u52a0\u8f7d\u7684\u6d4f\u89c8\u5668(\u5982IE\u6216UC\u6d4f\u89c8\u5668)\u542f\u7528ES5\u6784\u5efa\u548c\u5dee\u5f02\u52a0\u8f7d\uff0c\u53ea\u9700\u5728.Browserlistrc\u6587\u4ef6\u4e2d\u6dfb\u52a0\u60a8\u9700\u8981\u652f\u6301\u7684\u6d4f\u89c8\u5668\u5373\u53ef\u3002\n\u6211\u4eec\u5927\u5e45\u589e\u52a0\u4e86\u4e0e\u793e\u533a\u5408\u4f5c\u7684\u6295\u8d44\u3002\u5728\u8fc7\u53bb\u7684\u4e09\u5468\u91cc\uff0c\u6211\u4eec\u7684\u5f85\u5b9a\u95ee\u9898\u6570\u91cf\u51cf\u5c11\u4e86700\u591a\u4e2a\u95ee\u9898\uff0c\u6d89\u53ca\u6846\u67b6\u3001\u5de5\u5177\u548c\u7ec4\u4ef6\u3002\u6211\u4eec\u5df2\u7ecf\u89e6\u53ca\u4e862000\u591a\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u8fdb\u884c\u5927\u7b14\u6295\u8d44\uff0c\u4e0e\u793e\u533a\u5408\u4f5c\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\nANGLE\u8f6f\u4ef6\u5305\u683c\u5f0f\u4e0d\u518d\u5305\u62ecESM5\u6216FESM5\u6346\u7ed1\u5305\uff0c\u5728\u4e3aANGLE\u8f6f\u4ef6\u5305\u548c\u5e93\u8fd0\u884c\u7eb1\u7ebf\u6216NPM\u5b89\u88c5\u65f6\uff0c\u53ef\u4ee5\u8282\u7701119MB\u7684\u4e0b\u8f7d\u548c\u5b89\u88c5\u65f6\u95f4\u3002\u4e0d\u518d\u9700\u8981\u8fd9\u4e9b\u683c\u5f0f\uff0c\u56e0\u4e3a\u652f\u6301ES5\u7684\u4efb\u4f55\u964d\u7ea7\u90fd\u662f\u5728\u6784\u5efa\u8fc7\u7a0b\u7ed3\u675f\u65f6\u5b8c\u6210\u7684\u3002\n\u57fa\u4e8e\u4e0e\u793e\u533a\u7684\u5e7f\u6cdb\u534f\u5546\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u652f\u6301\u8f83\u65e7\u7684\u6d4f\u89c8\u5668\uff0c\u5305\u62ecIE9\u300110\u548cInternet Explorer Mobile\u3002\n\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\u548c\u6307\u5bfc\uff0c\u8bf7\u8bbf\u95eeupdate.angular.io\u3002\u4e3a\u4e86\u83b7\u5f97\u6700\u4f73\u7684\u66f4\u65b0\u4f53\u9a8c\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u59cb\u7ec8\u4e00\u6b21\u5347\u7ea7\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u3002", "note_en": "Version 10.0.0 is here! This is a  major release that spans the entire platform, including the framework, Angular Material, and the CLI. This release is smaller than typical; it has only been 4 months since we released version 9.0 of Angular.\n  We try to release two major versions each year to keep Angular synchronized with the rest of the JavaScript ecosystem and to have a predictable schedule. We plan to release version 11 this fall.\n     To use the new date range picker, you can use the  mat-date-range-input and  mat-date-range-picker components.\n    When you use a dependency that is packaged with CommonJS, it can result in  larger slower applications.\n Starting with version 10, we now warn you when your build pulls in one of these bundles. If you\u2019ve started seeing these warnings for your dependencies, let your dependency know that you\u2019d prefer an ECMAScript module (ESM) bundle.\n   Version 10 offers a more strict project setup when you create a new workspace with  ng new.\n  Enabling this flag initializes your new project with a few new settings that improve maintainability, help you catch bugs ahead of time, and allow the CLI to perform advanced optimizations on your app. Specifically, the  strict flag does the following:\n   As usual, we have made a few updates to the dependencies of Angular to stay synchronized with the JavaScript ecosystem.\n  We\u2019ve also updated our project layout. Starting with version 10 you will see a new  tsconfig.base.json. This additional   tsconfig.json  file better supports the way that IDEs and build tooling resolve type and package configurations.\n  We\u2019ve updated the browser configuration for new projects to exclude older and less used browsers.\n     This has the side effect of disabling ES5 builds by default for new projects. To enable ES5 builds and differential loading for browsers that require it (such as IE or UC Browser), simply  add the browsers you need to support in the  .browserslistrc file.\n  We\u2019ve dramatically increased our investment in working with the community. In the last three weeks our open issue count has decreased by over 700 issues across  framework,  tooling, and  components. We\u2019ve touched over 2,000 issues, and we plan to make large investments over the next few months, working with the community to do even more.\n   The  Angular Package Format no longer includes ESM5 or FESM5 bundles, saving you 119MB of download and install time when running  yarn or  npm install for Angular packages and libraries. These formats are no longer needed as any downleveling to support ES5 is done at the end of the build process.\n Based on heavy consultation with the community, we are deprecating support for older browsers including IE 9, 10, and  Internet Explorer Mobile.\n   Visit  update.angular.io for detailed information and guidance. To have the best update experience, we recommend always upgrading one major release at a time.", "posttime": "2020-06-26 02:59:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89d2\u5ea6,angular,\u6d4f\u89c8\u5668", "title": "\u89d2\u5ea610\u73b0\u5df2\u53ef\u7528", "title_en": "Angular 10 Now Available", "transed": 1, "url": "https://blog.angular.io/version-10-of-angular-now-available-78960babd41", "via": "", "real_tags": ["\u89d2\u5ea6", "angular", "\u6d4f\u89c8\u5668"]}, {"category": "", "categoryclass": "", "imagename": "46c1530b6d5bcfa7d236c27d6e2e9b88.png", "infoid": 1008254, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6b63\u5728\u6bd4\u8f83Hey.com\u548c\u6211\u76ee\u524d\u7684\u90ae\u4ef6\u7cfb\u7edfGmail\u7684\u529f\u80fd\u3002\u6211\u610f\u8bc6\u5230Hey.com\u4e5f\u6709\u9690\u79c1\u65b9\u9762\u7684\u597d\u5904\uff0c\u4f46\u6211\u5728\u8fd9\u91cc\u53ea\u5173\u6ce8\u529f\u80fd\u3002\u6240\u6709\u8fd9\u4e9b\u58f0\u660e\u90fd\u662f\u6211\u4e2a\u4eba\u7684\u89c2\u70b9\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5ffd\u89c6\u5927\u672c\u8425\u4eba\u6c11\u7684\u52aa\u529b\u3002\n\u6211\u57286\u670817\u65e5\u6536\u5230\u4e86Hey.com\u7684\u9080\u8bf7\uff0c\u5e76\u7acb\u5373\u5c06\u6211\u4eceGmail\u8d26\u6237\u6536\u5230\u7684\u6240\u6709\u90ae\u4ef6\u90fd\u8f6c\u53d1\u5230\u4e86\u6211\u7684\u65b0\u7684\u563f\u8d26\u6237\u3002\n\u4f60\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u4f60\u7684\u90ae\u7bb1\u6709\u591a\u7a7a\u3002\u6211\u5b8c\u5168\u7406\u89e3\u4e0d\u5141\u8bb8\u5bfc\u5165\u65e7\u7535\u5b50\u90ae\u4ef6\u7684\u51b3\u5b9a\uff0c\u56e0\u4e3a\u5b83\u5e76\u4e0d\u771f\u6b63\u7b26\u5408\u529f\u80fd\uff0c\u4f46\u8fd9\u5bfc\u81f4\u5728\u67e5\u627e\u65e7\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u65e0\u8bba\u662f\u4f60\u60f3\u8981\u91cd\u65b0\u9605\u8bfb\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u8fd8\u662f\u67d0\u4eba\u7684\u8054\u7cfb\u65b9\u5f0f\u6216\u5730\u5740\uff0c\u90fd\u4f1a\u5728\u563f\u548cGmail\u4e4b\u95f4\u8fdb\u884c\u5927\u91cf\u5207\u6362\u3002\n\u6211\u60f3\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5207\u6362\u5230\u4f60\u7684\u65e7\u90ae\u7bb1\u7684\u6b21\u6570\u4f1a\u51cf\u5c11\uff0c\u4f46\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u4e24\u4f4d\u521b\u59cb\u4eba\u90fd\u5efa\u8baeTwitter\u4e0a\u7684\u7528\u6237\u5c06\u4ed6\u4eec\u7684\u65e7\u90ae\u7bb1\u5bfc\u51fa\u4e3aMbox\u683c\u5f0f\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u67d0\u4e2a\u5730\u65b9\uff0c\u4f46\u8fd9\u53ea\u7ed9\u4e86\u4f60\u4e00\u4e2a\u5907\u4efd\uff0c\u5e76\u4e0d\u80fd\u5b58\u50a8\u6574\u4e2a\u641c\u7d22\u5931\u8d25\u3002\u73b0\u5728\u662f2020\u5e74\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u4ece\u6211\u62e5\u6709\u7684\u4efb\u4f55\u8bbe\u5907\u4e0a\u641c\u7d22\u6211\u7684\u65e7\u90ae\u4ef6\uff0c\u800c\u4e0d\u5fc5\u7b49\u5f85\u3002\n\u8ba9\u6211\u4eec\u6765\u5173\u6ce8\u4e00\u4e0b\u8fd9\u4e00\u521b\u65b0\u7684\u65b0\u529f\u80fd\uff1a\u201cThe Screener\u201d\u3002\u867d\u7136\u5b83\u80cc\u540e\u7684\u60f3\u6cd5\u7edd\u5bf9\u5f88\u9177\uff0c\u4f46\u6211\u5f88\u5feb\u5c31\u89c9\u5f97\u5b83\u5e26\u6765\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u6211\u65e0\u6cd5\u514b\u670d\u3002\n\u9996\u5148\uff0c\u63a5\u6536\u7535\u5b50\u90ae\u4ef6\u53d8\u6210\u4e86\u4e00\u4ef6\u4e3b\u52a8\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u4e00\u4ef6\u88ab\u52a8\u7684\u4e8b\u60c5\u3002\u4ee5\u524d\uff0c\u6211\u4f1a\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u9605\u8bfb\u5b83\uff0c\u5c06\u5b83\u79fb\u52a8\u5230\u4efb\u4f55\u6587\u4ef6\u5939\uff0c\u5b58\u6863\u5b83\uff0c\u963b\u6b62\u53d1\u4ef6\u4eba\uff0c\u6216\u8005\u4efb\u4f55\u4f60\u671f\u671b\u80fd\u591f\u5bf9\u7535\u5b50\u90ae\u4ef6\u6267\u884c\u7684\u64cd\u4f5c\u3002\u4f46\u662f\u73b0\u5728\uff0c\u60a8\u5c06\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u51b3\u7b56\u8fc7\u7a0b\uff1a\u60a8\u662f\u5426\u5e0c\u671b\u4ece\u6b64\u5730\u5740\u63a5\u6536\u7535\u5b50\u90ae\u4ef6\uff1f\u5982\u679c\u662f\uff0c\u60a8\u5e0c\u671b\u5c06\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u5230\u4f55\u5904\uff1f(\u53ef\u9009\u62e9\u6536\u4ef6\u7bb1\u3001\u8fdb\u7eb8\u6216\u7eb8\u8ff9)\u3002\n\u95ee\u9898\u662f\uff0c\u8fd9\u4e2a\u51b3\u5b9a\u5e76\u4e0d\u50cf\u770b\u8d77\u6765\u90a3\u4e48\u7b80\u5355\u3002\u7531\u4e8e\u563f\u7684\u76ee\u6807\u6587\u4ef6\u5939\u57fa\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u5730\u5740(\u800c\u4e0d\u662f\u50cfGmail\u90a3\u6837\u57fa\u4e8e\u5185\u5bb9)\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u4f01\u4e1a\u4eceinfo@business.com\u5411\u60a8\u53d1\u9001\u65f6\u4e8b\u901a\u8baf\u65f6\uff0c\u60a8\u7684\u7b2c\u4e00\u53cd\u5e94\u53ef\u80fd\u662f\u5c06\u65f6\u4e8b\u901a\u8baf(\u4ee5\u53ca\u53d1\u9001\u5730\u5740)\u5206\u914d\u7ed9Feed\u3002\u4f46\u662f\uff0c\u540c\u6837\u7684\u4f01\u4e1a\u53ef\u80fd\u4f1a\u4ece\u76f8\u540c\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5411\u60a8\u53d1\u9001\u8ba2\u5355\u786e\u8ba4\uff0c\u7136\u540e\u6700\u7ec8\u4f1a\u51fa\u73b0\u5728Feed\u4e2d\uff0c\u800c\u4e0d\u662fPaper Trail\uff01\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ed6\u4eec\u7f51\u7ad9\u4e0a\u7684\u8054\u7cfb\u4eba\u8868\u683c\u5411\u4ed6\u4eec\u53d1\u9001\u95ee\u9898\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u518d\u6b21\u4ece\u540c\u4e00\u4e2a\u5730\u5740\u56de\u7b54\u4f60\uff0c\u4f46\u8fd9\u4e00\u6b21\u4f60\u60f3\u628a\u5b83\u653e\u5728\u4f60\u7684\u6536\u4ef6\u7bb1\u91cc\u3002\nGoogle\u975e\u5e38\u64c5\u957f\u6839\u636e\u53d1\u9001\u5730\u5740\u548c\u5185\u5bb9(\u53ef\u80fd\u8fd8\u6709\u66f4\u591a\u53c2\u6570)\u5c06\u90ae\u4ef6\u5206\u7c7b\u4e3a\u4e3b\u8981\u7684\u3001\u793e\u4ea4\u7684\u6216\u4fc3\u9500\u7684\u90ae\u4ef6\u3002\u7531\u4e8e\u53ea\u770b\u53d1\u9001\u5730\u5740\uff0cHey.com\u5728\u8fd9\u91cc\u7684\u7ade\u4e89\u4e2d\u5904\u4e8e\u52a3\u52bf\u3002\n\u5f53\u51b3\u5b9a\u963b\u6b62\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5728\u7b5b\u9009\u5668\u4e2d\u53d1\u9001\u65f6\uff0c\u540c\u6837\u7684\u51b3\u5b9a\u8fc7\u7a0b\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4ece\u4e00\u4e2a\u6211\u6709\u65f6\u4f1a\u8bbf\u95ee\u7684\u7f51\u7ad9\u6536\u5230\u4e00\u4efd\u65f6\u4e8b\u901a\u8baf\uff0c\u4f46\u5728\u90a3\u91cc\u6211\u7edd\u5bf9\u5bf9\u65f6\u4e8b\u901a\u8baf\u4e0d\u611f\u5174\u8da3\u3002\u5728Gmail\u4e2d\uff0c\u8fd9\u4efd\u65f6\u4e8b\u901a\u8baf\u8981\u4e48\u4f1a\u51fa\u73b0\u5728\u201c\u4fc3\u9500\u201d\u4e2d\uff0c\u6211\u53ef\u4ee5\u5ffd\u7565\u5b83\uff1b\u8981\u4e48\u4f1a\u51fa\u73b0\u5728\u6211\u7684\u6536\u4ef6\u7bb1\u91cc\uff0c\u5728\u90a3\u91cc\u6211\u4f1a\u88ab\u89e6\u53d1\u53d6\u6d88\u8ba2\u9605\u8fd9\u4efd\u65f6\u4e8b\u901a\u8baf\u3002\n\u5728Hey.com\u4e2d\uff0c\u4f60\u53ef\u80fd\u53ea\u60f3\u70b9\u51fb\u201c\u5426\u201d\uff0c\u7136\u540e\u5c31\u5b8c\u4e8b\u4e86\u3002\u518d\u4e5f\u6ca1\u6709\u65f6\u4e8b\u901a\u8baf\u4e86\uff0c\u592a\u597d\u4e86\uff0c\u5bf9\u5427\uff1f\u4e0d\uff0c\u518d\u731c\u4e00\u6b21\u3002\u4f60\u521a\u521a\u62d2\u7edd\u4e86\u6240\u6709\u6765\u81ea\u8fd9\u4e2a\u5730\u5740\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5982\u679c\u540c\u4e00\u5bb6\u516c\u53f8\u73b0\u5728\u60f3\u7ed9\u60a8\u53d1\u9001\u4e00\u5c01\u60a8\u60f3\u8981\u63a5\u6536\u7684\u7535\u5b50\u90ae\u4ef6(\u4f8b\u5982\uff0c\u201c\u6211\u4eec\u7684\u6570\u636e\u5e93\u5df2\u88ab\u653b\u7834\uff0c\u8bf7\u91cd\u65b0\u8bbe\u7f6e\u60a8\u7684\u5bc6\u7801\u201d)\uff0c\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u62d2\u7edd\u8be5\u7535\u5b50\u90ae\u4ef6\u3002\n\u8fd9\u4f1a\u8ba9\u4f60\u8981\u4e48\u5bf9\u592a\u591a\u90ae\u4ef6\u8bf4\u201c\u662f\u201d(\u56e0\u4e3a\u4f60\u4e0d\u60f3\u5192\u9669\u9519\u8fc7\u6765\u81ea\u540c\u4e00\u5730\u5740\u7684\u91cd\u8981\u90ae\u4ef6)\uff0c\u8981\u4e48\u8bf4\u201c\u4e0d\u201d\uff0c\u4f46\u6709\u4e00\u79cd\u611f\u89c9\u662f\uff0c\u4f60\u53ef\u80fd\u4f1a\u540e\u6094\u5c06\u6765\u4f1a\u8bf4\u201c\u4e0d\u201d\u3002\nHey.com\u6709\u4e00\u4e2a\u6bd4Gmail\u4e25\u683c\u5f97\u591a\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba8\u8bba\u4ec0\u4e48\u662f\u5783\u573e\u90ae\u4ef6\uff0c\u4f46\u6211\u4e2a\u4eba\u89c9\u5f97Gmail\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u5f88\u597d\uff0c\u7279\u522b\u662f\u5728\u8bef\u62a5\u7684\u60c5\u51b5\u4e0b\u3002\u6211\u5b81\u613f\u5728\u6211\u7684\u6536\u4ef6\u7bb1\u91cc\u591a\u653e\u4e00\u5c01\u5783\u573e\u90ae\u4ef6\uff0c\u4e5f\u4e0d\u613f\u5728\u6211\u7684\u5783\u573e\u90ae\u4ef6\u7bb1\u91cc\u9519\u8fc7\u4e00\u5c01\u91cd\u8981\u7684\u90ae\u4ef6\u3002\u5c3d\u7ba1\u6211\u5728\u8bd5\u7528\u671f\u95f4\u53ea\u4f7f\u7528\u4e86Hey.com\uff0c\u4f46\u6211\u4ecd\u7136\u6709\u51e0\u5c01\u90ae\u4ef6\u53d8\u6210\u4e86\u5783\u573e\u90ae\u4ef6\uff0c\u800c\u6211\u672c\u60f3\u5728\u6211\u7684\u6536\u4ef6\u7bb1\u91cc\u6536\u5230\u8fd9\u4e9b\u90ae\u4ef6\u3002\n\u6211\u4e00\u5f00\u6237\u5c31\u5728\u6211\u7684\u624b\u673a(Android)\u4e0a\u5b89\u88c5\u4e86Hey.com\u79fb\u52a8\u5e94\u7528\u3002\u4f60\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\uff1a\u6ca1\u6709\u901a\u77e5\uff01hey.com\u5728\u8fd9\u91cc\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\uff1ahttps://hey.com/features/notifications/\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4ee5\u7ebf\u7a0b\u6216\u53d1\u4ef6\u4eba\u4e3a\u57fa\u7840\u6253\u5f00\u901a\u77e5\u7684\u9009\u9879\uff0c\u4f46\u8fd9\u5bf9\u7528\u6237\u6765\u8bf4\u611f\u89c9\u50cf\u662f\u4e00\u79cd\u8d1f\u62c5\u3002\u5982\u679c\u540c\u4e8b\u5728\u6211\u79bb\u5f00\u529e\u516c\u5ba4\u540e\u7ed9\u6211\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4ecd\u7136\u5e0c\u671b\u5728\u6211\u7684\u7535\u8bdd\u4e0a\u6536\u5230\u6709\u5173\u5b83\u7684\u901a\u77e5\u3002\u8981\u6c42\u6211\u4e3b\u52a8\u5c06\u6240\u6709\u540c\u4e8b(\u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u6211\u5e0c\u671b\u6536\u5230\u901a\u77e5\u7684\u4eba)\u5217\u5165\u767d\u540d\u5355\u4f3c\u4e4e\u5f88\u70e6\u4eba\u3002\u6211\u7684\u624b\u673a\u6709\u5b8c\u7f8e\u7684\u901a\u77e5\u8bbe\u7f6e(\u7981\u7528\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u52ff\u6253\u6270\u6a21\u5f0f\u7b49)\u3002Hey.com\u81f3\u5c11\u5e94\u8be5\u4e3a\u4f60\u7684\u6536\u4ef6\u7bb1\u4e2d\u7684\u6bcf\u5c01\u7535\u5b50\u90ae\u4ef6\u63d0\u4f9b\u63a5\u6536\u901a\u77e5\u7684\u9009\u9879\u3002\u6211\u5df2\u7ecf\u662f\u6210\u5e74\u4eba\u4e86\uff0c\u6211\u53ef\u4ee5\u81ea\u5df1\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u6211\u7684\u901a\u77e5\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u6bcf\u5e74\u6536\u53d699\u7f8e\u5143\u7684\u670d\u52a1\u8d39\u3002\n\u9664\u4e86\u901a\u77e5\uff0c\u6211\u6ce8\u610f\u5230\u8fd9\u6b3e\u5e94\u7528\u5728\u51e0\u4e2a\u573a\u5408\u52a0\u8f7d\u5185\u5bb9\u90fd\u5f88\u6162\uff0c\u65e0\u8bba\u662f\u5728\u6253\u5f00\u7535\u5b50\u90ae\u4ef6\u8fd8\u662f\u5207\u6362\u5230\u5c4f\u5e55\u89c6\u56fe\u65f6\u90fd\u662f\u5982\u6b64\u3002\u6211\u57284G\u548cWifi\u4e0a\u90fd\u89c2\u5bdf\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u7684\u666e\u901aGmail\u5e94\u7528\u7a0b\u5e8f\u4ece\u6765\u6ca1\u6709\u9047\u5230\u8fc7\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u60f3\u4ed6\u4eec\u53ef\u4ee5\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u80af\u5b9a\u5f88\u70e6\u4eba\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e0d\u4f1a\u5207\u6362\u5230Hey.com\u4f5c\u4e3a\u6211\u7684\u4e3b\u8981\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002\u867d\u7136\u6211\u5bf9\u4e00\u79cd\u5168\u65b0\u7684\u3001\u6539\u8fdb\u7684\u7535\u5b50\u90ae\u4ef6\u4f53\u9a8c\u611f\u5230\u5174\u594b\uff0c\u4f46\u6211\u89c9\u5f97Hey.com\u4e0d\u9002\u5408\u6211\u3002\u867d\u7136\u4ed6\u4eec\u786e\u5b9e\u7ed9\u7535\u5b50\u90ae\u4ef6\u5217\u8868\u5e26\u6765\u4e86\u4e00\u4e9b\u65b0\u7684\u3001\u5f88\u9177\u7684\u4e1c\u897f(\u7a0d\u540e\u56de\u590d\uff0c\u6401\u7f6e\u4e00\u8fb9)\uff0c\u4f46\u4e00\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u8ba9\u4eba\u611f\u89c9\u975e\u5e38\u56fa\u6267\u5df1\u89c1\uff0c\u5373\u4f7f\u4ed6\u4eec\u589e\u52a0\u4e86\u5173\u95ed\u5c4f\u5e55\u5e76\u5728\u5168\u7403\u8303\u56f4\u5185\u6253\u5f00\u901a\u77e5\u7684\u53ef\u80fd\u6027(\u8fd9\u662f\u6211\u6700\u5927\u7684\u4e24\u4e2a\u62b1\u6028)\uff0c\u6211\u4ecd\u7136\u89c9\u5f97\u5b83\u6ca1\u6709\u6218\u80dcGmail(\u65e5\u5386\u96c6\u6210\u3001\u66f4\u597d\u7684\u5185\u5bb9\u548c\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u7b49)\u3002", "note_en": "I\u2019m comparing the functionality of Hey.com vs my current mail system, Gmail. I realise that Hey.com also has a privacy upside to it, but I\u2019m only focusing on functionality here. All of the statements are my own opinion, and not meant to disregard the efforts of the people at Basecamp in any way.\n  I received my Hey.com invite on June 17th, and immediately forwarded all my incoming mails from my Gmail account to my new Hey account.\n The first thing that you notice is how empty your mailbox is. I can totally understand the decision to not allow the importing of old e-mails because it doesn\u2019t really fit with the functionality, but this leads to a lot of switching between Hey and Gmail when looking for an old e-mail, be it some information you want to re-read or someone\u2019s contact details or address.\n I assume the switching to your old mailbox will reduce over time, but it\u2019s still a problem. Both founders suggest users on twitter to export their old mailbox to mbox format and store it somewhere, but that only gives you a backup, it doesn\u2019t store the whole search debacle. It\u2019s 2020, I want to be able to search my old mails from any device I have, and not have to wait for it either.\n   Let\u2019s focus on the new and innovative feature: \u201cThe Screener\u201d. While the idea behind it is definitely cool, I quickly felt it posed some problems which I could not get over for some reason.\n First of all, receiving e-mail becomes an active thing instead of a passive thing. Before, I would receive an e-mail, read it, move it to any folder, archive it, block the sender, or any action you\u2019d expect to be able to do with an e-mail. But now, you\u2019re thrown into a new decision making process: Do you want to receive e-mail from this address, and if so, where do you want the e-mail to go? (Imbox, Feed or Paper Trail being the options).\n The problem is that this decision isn\u2019t as simple as it seems. Since Hey bases their destination folder on the sending e-mail address (as opposed to on the content like Gmail does), this means that when a business sends you a newsletter coming from info@business.com, your first reaction might be to assign the newsletter (and thus the sending address) to The Feed. However, the same business might be sending you an order confirmation from the same e-mail address, which would then end up in The Feed instead of the Paper Trail! Even worse, you could send them a question through a contact form on their website and they might answer you from the same address again, but this time you\u2019d like to have it in your Imbox instead.\n Google is very good at classifying mails into Primary, Social or Promotions, both based on sending address and content (and probably many more parameters). By only looking at the sending address, Hey.com is falling short of the competition here.\n The same decision process is a problem when deciding to block an email address from sending in The Screener. I receive a newsletter from a website which I sometimes visit but where I\u2019m definitely not interested in the newsletter. In Gmail, this newsletter would either end up in Promotions, where I could just ignore it, or in my Inbox, where I would be triggered to go unsubscribe from this newsletter.\n In Hey.com, you might be tempted to just click No, and be done with it. No more newsletters, great, right? Nope, guess again. You just said no to ALL emails coming from this address. If the same company now wants to send you an e-mail which you wanted to receive (say, \u201cOur database has been breached, please reset your password\u201d), you just said no to that e-mail too.\n This leaves you with either saying Yes to too many mails (because you don\u2019t want to risk missing an important mail from the same address), or saying No but having the feeling that you might regret having said No in the future.\n  Hey.com has a spam filter which is way stricter than Gmail\u2019s. Sure, we can discuss about what actually is counted as spam, but I personally feel Gmail is doing a pretty good job at it, especially in the case of false positives. I\u2019d rather have one spam mail more in my inbox than missing one important mail in my spam box. Even though I only used Hey.com during the trial, I still had several mails go into spam which I wanted to have received in my Imbox instead.\n  I also installed the Hey.com mobile app on my phone (Android) as soon as I made an account. The first thing you notice: No notifications! Hey.com explains it themselves here:  https://hey.com/features/notifications/ . The app offers you the option of turning on notifications on a thread or sender basis, but that feels like a burden to the user. If a colleague sends me an e-mail after I have left the office, I still want to receive a notification about it on my phone. Asking me to proactively whitelist all my colleagues (and any other person I would want to receive notifications from) seems annoying. My phone has perfect notifications settings (disable per app, do not disturb mode, etc). Hey.com should at least give the option to receive a notification for every e-mail in your Imbox. I\u2019m a grown up, I can decide how I handle my notifications myself, especially if you\u2019re charging 99$/year for your service.\n Apart from the notifications, I noticed on several occasions the app was slow in loading content, both when opening an e-mail or switching to The Screener view. I observed this both on 4G and Wifi, and have never had this issue with my normal Gmail app. I assume they can fix this in future versions, but it was annoying for sure.\n  I won\u2019t be switching to Hey.com as my main email client unfortunately. As excited as I was for a new and improved e-mail experience, I feel like Hey.com isn\u2019t it for me. While they definitely bring some new and cool stuff to the email table (Reply Later, Set Aside), the implementation of some features feels very opinionated, and even if they added the possibility to turn off The Screener and turn on notifications globally (which are my 2 biggest gripes), I still feel like it doesn\u2019t win out vs Gmail (calendar integration, better content and spam filtering, etc).", "posttime": "2020-06-26 02:57:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u4f1a,won,\u7535\u5b50\u90ae\u4ef6", "title": "Hey.com\uff1a\u4e00\u7bc7\u8bc4\u8bba(\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4e0d\u4f1a\u6362\u7684\u539f\u56e0)", "title_en": "Hey.com: a review (and why I won't be switching)", "transed": 1, "url": "https://medium.com/@jonathan.goyvaerts/hey-com-a-review-and-why-i-wont-be-switching-8de2ee6b311e", "via": "", "real_tags": ["\u4e0d\u4f1a", "won", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "b7fba3610c0acb9e33f6e9eda4243af1.jpg", "infoid": 1008253, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u65b0\u7248\u7684Arcore\u662f\u8c37\u6b4c\u9488\u5bf9Android\u624b\u673a\u7684\u589e\u5f3a\u73b0\u5b9e\u5f00\u53d1\u5e73\u53f0\uff0c\u73b0\u5728\u5305\u542b\u4e86\u6df1\u5ea6API\u3002\u8fd9\u4e2aAPI\u65e9\u572812\u6708\u4efd\u5c31\u53d1\u5e03\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u5b83\u5728Arcore1.18\u4e2d\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u662f\u5b9e\u51b5\u8f6c\u64ad\u3002\n\u4ee5\u524d\uff0cArcore\u4f1a\u7ed8\u5236\u5899\u58c1\u548c\u5730\u677f\uff0c\u5e76\u76f8\u5e94\u5730\u7f29\u653eAR\u5bf9\u8c61\uff0c\u4f46Depth API\u652f\u6301\u906e\u6321\u7b49\u529f\u80fd-\u8ba9AR\u6f14\u5458\u770b\u8d77\u6765\u50cf\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5bf9\u8c61\u540e\u9762\u3002\u6df1\u5ea6\u611f\u5e94\u5b9e\u73b0\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u662f\u6a21\u62df\u7269\u7406\u7684\u80fd\u529b\uff0c\u6bd4\u5982\u5c06\u865a\u62df\u7269\u4f53\u6254\u4e0b\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u697c\u68af\uff0c\u5e76\u8ba9\u5b83\u771f\u5b9e\u5730\u53cd\u5f39\u3002\n\u867d\u7136\u82f9\u679c\u6b63\u5728\u4e3a\u5176\u7528\u4e8e\u589e\u5f3a\u73b0\u5b9e\u7684\u8bbe\u5907\u6784\u5efa\u66f4\u5148\u8fdb\u7684\u786c\u4ef6\uff0c\u5373iPad Pro\u4e2d\u7684\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\uff0c\u4f46Arcore\u901a\u5e38\u88ab\u8bbe\u8ba1\u4e3a\u5728\u76f8\u673a\u786c\u4ef6\u4e2d\u7684\u6700\u4f4e\u516c\u5206\u6bcd\u4e0a\u5de5\u4f5c\u3002\u5728\u8fc7\u53bb\uff0c\u8fd9\u610f\u5473\u7740Arcore\u53ea\u4f7f\u7528\u4e00\u4e2a\u6444\u50cf\u5934\uff0c\u5373\u4f7f\u5927\u591a\u6570Android\u624b\u673a\uff0c\u751a\u81f3\u662f\u4fbf\u5b9c\u7684~100\u7f8e\u5143\u7684Android\u624b\u673a\uff0c\u90fd\u914d\u5907\u4e86\u591a\u4e2a\u6444\u50cf\u5934\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8fdb\u884c3D\u4f20\u611f\u3002(\u9ad8\u901a\u5728\u8fd9\u65b9\u9762\u5e94\u8be5\u53d7\u5230\u4e00\u4e9b\u6307\u8d23\uff0c\u56e0\u4e3a\u5b83\u7684SoC\u901a\u5e38\u4e00\u6b21\u53ea\u652f\u6301\u8fd0\u884c\u4e00\u4e2a\u6444\u50cf\u5934\u3002)\u3002\n\u57281.18\u7248\u672c\u4e2d\uff0cArcore\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b21\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u989d\u5916\u7684\u76f8\u673a\u786c\u4ef6\u6765\u5e2e\u52a9\u8fdb\u884c3D\u4f20\u611f\u3002\u867d\u7136Depth API\u53ef\u4ee5\u5728\u5355\u6444\u50cf\u5934\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u4f7f\u7528\u8fd0\u52a8\u6765\u786e\u5b9a\u6df1\u5ea6\u503c\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u4ece\u624b\u673a\u7684\u98de\u884c\u65f6\u95f4\u4f20\u611f\u5668\u83b7\u53d6\u6570\u636e\uff0c\u4ee5\u63d0\u9ad8\u6df1\u5ea6\u8d28\u91cf\u3002\u4e09\u661f\u662f\u5728Note10+\u548cGalaxy S20 Ultra\u4e2d\u88ab\u79f0\u4e3a\u660e\u786e\u652f\u6301\u8fd9\u4e00\u70b9\u7684\u516c\u53f8\u4e4b\u4e00\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e24\u4e2a\u90fd\u662f\u8fd9\u4e9b\u8bbe\u5907\u7684\u6700\u9ad8\u7aefSKU\u3002\u5f88\u591a\u624b\u673a\u90fd\u6709\u591a\u4e2a\u6444\u50cf\u5934\uff0c\u6bd4\u5982\u5e7f\u89d2\u548c\u957f\u7126\uff0c\u4f46\u5f88\u591a\u624b\u673a\u90fd\u6709ToF\u6444\u50cf\u5934\u3002\n\u8981\u731c\u6d4bArcore\u7684\u672a\u6765\uff0c\u4e00\u4e2a\u597d\u4e3b\u610f\u662f\u9694\u7740\u8fc7\u9053\u770b\u770bArKit\uff0c\u8fd9\u662f\u82f9\u679c\u7684\u589e\u5f3a\u73b0\u5b9e\u5e73\u53f0\u3002ARKit\u4e2d\u4e00\u4e2a\u5f88\u5927\u7684\u6df1\u5ea6\u529f\u80fd\u4f3c\u4e4e\u6ca1\u6709\u5728Google\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u88ab\u63d0\u53ca\uff0c\u90a3\u5c31\u662f\u4eba\u7269\u906e\u6321\uff0c\u5373\u79fb\u52a8\u7269\u4f53\u6765\u9690\u85cf\u865a\u62df\u7269\u4f53\u7684\u80fd\u529b\u3002\u8c37\u6b4c\u7684\u6f14\u793a\u53ea\u5c55\u793a\u4e86\u9690\u85cf\u865a\u62df\u7269\u4f53\u7684\u9759\u6b62\u7269\u4f53\u3002\n\u6df1\u5ea6API\u63d0\u4f9bAndroid\u548cUnity SDK\u4e24\u4e2a\u7248\u672c\u3002\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u4f60\u9700\u8981\u4e00\u90e8\u4e0eArcore\u517c\u5bb9\u7684\u624b\u673a\u3002\u8c37\u6b4c\u5728\u8fd9\u91cc\u7ef4\u62a4\u7740\u4e00\u4e2a\u5f88\u5927\u7684\u540d\u5355\u3002", "note_en": "The latest version of ARCore, Google&#39;s augmented reality developer platform for Android phones, now  includes a depth API. The API was released as a preview back in December, but now it&#39;s live for everyone in ARCore 1.18.\n Previously, ARCore would map out walls and floors and scale AR objects accordingly, but the Depth API enables things like occlusion\u2014letting AR actors appear to be behind objects in the real world. The other big feature enabled by depth sensing is the ability to simulate physics, like the ability to toss a virtual object down the real-life stairs and have it bounce around realistically.\n  While Apple is building more advanced hardware into its devices for augmented reality, namely the lidar sensor in the iPad Pro, ARCore has typically been designed to work on the lowest common denominator in camera hardware. In the past that has meant ARCore only uses a single camera, even when most Android phones, even  cheap ~$100 Android phones, come with multiple cameras that could help with 3D sensing. (Qualcomm&#39;s deserves some of the blame here, since its SoCs have often only supported running  a single camera at a time.)\n In version 1.18, for the first time ever, ARCore can use some of this extra camera hardware to help with 3D sensing. While the Depth API can run in a single-camera mode that uses motion to determine depth values, it can also pull in data from a phone&#39;s time-of-flight sensor to improve the depth quality. Samsung was one of the companies that was called out as specifically supporting this in the Note10+ and Galaxy S20 Ultra. Note that both of these are the highest-end skus for these devices. Tons of phones have multiple cameras like wide-angle and telephoto, but many phones have ToF cameras.\n For a guess at the future of ARCore, a good idea would be a look across the aisle to ARKit, Apple&#39;s augmented reality platform. A big depth feature in ARKit that doesn&#39;t seem to be mentioned in Google&#39;s blog post is &#34;people occlusion,&#34; or the ability for  moving objects to hide virtual objects. Google&#39;s demos only show stationary objects hiding virtual objects.\n The Depth API is available in Android and Unity SDKs. For users, you&#39;ll need an ARCore-compatible phone. Google maintains a big list  here.", "posttime": "2020-06-26 02:39:29", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "android,google,\u63d0\u4f9b,arcore", "title": "Google\u5728Arcore 1.18\u4e2d\u63d0\u4f9bAndroid\u6df1\u5ea6\u611f\u77e5\u548c\u5bf9\u8c61\u906e\u6321\u529f\u80fd", "title_en": "Google gives Android depth sensing and object occlusion with ARCore 1.18", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/06/google-gives-android-depth-sensing-and-object-occlusion-with-arcore-1-18/", "via": "", "real_tags": ["android", "google", "\u63d0\u4f9b", "arcore"]}, {"category": "", "categoryclass": "", "imagename": "567191c2d787d45f7ad74a3c88c60442.png", "infoid": 1008252, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u65b0\u63d0\u4ea4\u7684\u6587\u4ef6\uff0cLemonade\u9884\u8ba1\u5176IPO\u5b9a\u4ef7\u4e3a\u6bcf\u80a123\u7f8e\u5143\u81f326\u7f8e\u5143\u3002\u7531\u4e8e\u8be5\u516c\u53f8\u6253\u7b97\u5728\u4e0a\u5e02\u9996\u65e5\u51fa\u552e1100\u4e07\u80a1\u7968\uff0c\u8fd9\u5bb6\u4e13\u6ce8\u4e8e\u79df\u8d41\u548c\u5bb6\u5ead\u4fdd\u9669\u7684\u72ec\u89d2\u517d\u516c\u53f8\u5c06\u4ee5\u8fd9\u6837\u7684\u4ef7\u683c\u7b79\u96c62.53\u4ebf\u81f32.86\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\u3002\n\u52a0\u4e0a\u5c06\u5411\u627f\u9500\u94f6\u884c\u63d0\u4f9b\u7684\u53e6\u5916165\u4e07\u80a1\uff0c\u8be5\u516c\u53f8\u7684\u7b79\u8d44\u89c4\u6a21\u589e\u81f32.91\u4ebf\u81f33.289\u4ebf\u7f8e\u5143\u3002\u8003\u8651\u5230IPO\u4ef7\u683c\u533a\u95f4\uff0c\u5305\u62ec\u5411\u627f\u9500\u5546\u53d1\u884c\u7684\u80a1\u7968\u5728\u5185\uff0cLemonade\u7684\u9690\u542b\u4f30\u503c\u4ece13.\u4ebf\u7f8e\u5143\u523014.7\u4ebf\u7f8e\u5143\u4e0d\u7b49\u3002\n\u8fd9\u5c31\u662f\u65b0\u95fb\u3002\u73b0\u5728\uff0c\u8fd9\u4e2a\u9884\u671f\u4f30\u503c\u533a\u95f4\u662f\u5426\u5f3a\u52b2\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5b83\u5bf9\u5176\u4ed6\u4fdd\u9669\u79d1\u6280\u521d\u521b\u516c\u53f8\u53ef\u80fd\u9884\u793a\u7740\u4ec0\u4e48\uff1f\u6211\u4eec\u6765\u8c08\u8c08\u8fd9\u4ef6\u4e8b\u5427\u3002\nTechCrunch\u4eca\u5929\u665a\u4e9b\u65f6\u5019\u5c06\u4e0e\u6cb3\u9a6c(\u623f\u4e3b\u4fdd\u9669)\u548cRoot(\u6c7d\u8f66\u4fdd\u9669)\u7684\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u4ea4\u8c08\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5feb\u901f\u4e86\u89e3\u4ed6\u4eec\u5173\u4e8eLemonade\u7684IPO\u8fdb\u5c55\u60c5\u51b5\uff0c\u4ee5\u53ca\u4ed6\u4eec\u662f\u5426\u5bf9\u5176\u5b9a\u4ef7\u76ee\u6807\u611f\u5230\u60ca\u8bb6\u3002\n\u4f46\u5373\u4f7f\u6ca1\u6709\u5916\u90e8\u8bc4\u8bba\uff0cLemonade\u81f3\u5c11\u6700\u521d\u7784\u51c6\u7684\u5b9a\u4ef7\u533a\u95f4\u4e5f\u4e0d\u662f\u7279\u522b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u5b83\u6bd4\u6211\u9884\u671f\u7684\u8981\u5f3a\u3002", "note_en": "According to  its new filing, Lemonade expects its IPO to price at $23 to $26 per share. As the company intends to sell 11 million shares in its debut, the rental and home insurance-focused unicorn would raise between $253 million and $286 million at those prices.\n Counting an additional 1.65 million shares that it will make available to its underwriting banks, the company\u2019s fundraise grows to $291 million to $328.9 million. Including shares offered to underwriters, Lemonade\u2019s implied valuation given its IPO price range runs from $1.30 billion to $1.47 billion.\n  That\u2019s the news. Now, is that expected valuation interval strong, and, if not, what might it portend for other insurtech startups? Let\u2019s talk about it.\n  TechCrunch is speaking with the CEOs of  Hippo (homeowner\u2019s insurance) and  Root (car insurance) later today, so we\u2019ll get their notes in quick order regarding how Lemonade\u2019s IPO is shaping up, and if they are surprised by its pricing targets.\n But even without external commentary, the pricing range that Lemonade is at least initially targeting is not terribly impressive. That said, it\u2019s stronger than I anticipated.", "posttime": "2020-06-26 02:38:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "ipo,targets,lemonade", "title": "\n\u67e0\u6aac\u6c34\u5728\u5373\u5c06\u5230\u6765\u7684IPO\u4e2d\u7784\u51c6\u4e0b\u4e00\u8f6e\u5b9a\u4ef7", "title_en": "\n\t\t\t\tLemonade targets down-round pricing in impending IPO\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/25/lemonade-targets-down-round-pricing-in-impending-ipo/", "via": "", "real_tags": ["ipo", "targets", "lemonade"]}]