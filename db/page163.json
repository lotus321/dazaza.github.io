[{"category": "", "categoryclass": "", "imagename": "c77ff936ca38e3f88f6690e3e761872e.jpeg", "infoid": 1004870, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u5bf9\u6d41\u5a92\u4f53\u672a\u6765\u7684\u8c6a\u8d4cHBO Max\u5c06\u4e0d\u53d7AT&amp\uff1bT\u7684\u79fb\u52a8\u6570\u636e\u4e0a\u9650\u9650\u5236\uff0c\u800cNetflix\u548cDisney Plus\u7b49\u7ade\u4e89\u5bf9\u624b\u5c06\u8017\u5c3d\u4f60\u7684\u6570\u636e\u3002\n\u8fd9\u662fVergecast\u4e0e\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u8d1f\u8d23HBO Max\u7684\u9ad8\u7ba1\u6258\u5c3c\u00b7\u8d21\u5361\u5c14\u7ef4\u65af(Tony Goncalves)\u8c08\u8bdd\u7684\u540e\u7eed\u5185\u5bb9\u3002\u5f53\u88ab\u95ee\u53caHBO Max\u662f\u5426\u4f1a\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u8d21\u5361\u5c14\u7ef4\u65af\u8bf4\u4ed6\u7684\u56e2\u961f\u201c\u8fdb\u884c\u4e86\u5bf9\u8bdd\u201d\uff0c\u4f46\u6ca1\u6709\u7b54\u6848\u3002\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u540e\u6765\u5411The Verge\u8bc1\u5b9e\uff0cHBO Max\u5c06\u514d\u9664\u8be5\u516c\u53f8\u7684\u4f20\u7edf\u6570\u636e\u4e0a\u9650\u548c\u65e0\u9650\u5236\u5957\u9910\u7684\u8f6f\u6570\u636e\u4e0a\u9650\u3002\n\u636e\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u4e00\u4f4d\u77e5\u60c5\u9ad8\u7ba1\u900f\u9732\uff0cHBO Max\u6b63\u5728\u4f7f\u7528AT&amp\uff1bT\u7684\u201c\u8d5e\u52a9\u6570\u636e\u201d\u7cfb\u7edf\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8be5\u7cfb\u7edf\u5141\u8bb8\u4efb\u4f55\u516c\u53f8\u4ed8\u8d39\uff0c\u4ee5\u907f\u514d\u5176\u670d\u52a1\u53d7\u5230\u6570\u636e\u4e0a\u9650\u7684\u9650\u5236\u3002\u4f46\u7531\u4e8eAT&amp\uff1bT\u62e5\u6709HBO Max\uff0c\u5b83\u53ea\u662f\u5728\u652f\u4ed8\u81ea\u5df1\u7684\u8d39\u7528\uff1a\u6570\u636e\u8d39\u5728HBO Max\u7684\u8d26\u7c3f\u4e0a\u663e\u793a\u4e3a\u4e00\u9879\u8d39\u7528\uff0c\u5728AT&amp\uff1bT Mobility\u7684\u8d26\u7c3f\u4e0a\u663e\u793a\u4e3a\u6536\u5165\u3002\u5bf9\u4e8e\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8bf4\uff0c\u5b83\u662f\u5f52\u96f6\u7684\u3002\u4e0eNetflix\u8fd9\u6837\u7684\u7ade\u4e89\u5bf9\u624b\u76f8\u6bd4\uff0cNetflix\u7406\u8bba\u4e0a\u53ef\u4ee5\u5411\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u652f\u4ed8\u8d5e\u52a9\u6570\u636e\u8d39\u7528\uff0c\u4f46\u8fd9\u5c06\u662f\u7eaf\u7cb9\u7684\u6210\u672c\u3002\n\u7406\u8bba\u4e0a\uff0cNetflix\u53ef\u4ee5\u5411\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u652f\u4ed8\u8d5e\u52a9\u6570\u636e\u7684\u8d39\u7528\uff0c\u4f46\u8fd9\u5c06\u662f\u4e00\u9879\u7eaf\u7cb9\u7684\u6210\u672c\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0a\u4e00\u6b21\u6211\u4eec\u67e5\u770bAT&amp\uff1b\u7684\u8d5e\u52a9\u6570\u636e\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u80fd\u627e\u5230\u7684\u4f7f\u7528\u5b83\u7684\u4ec5\u6709\u7684\u4e09\u5bb6\u6d41\u5a92\u4f53\u670d\u52a1\u2026\u2026\u3002\u90fd\u5f52AT&amp\uff1bT\u6240\u6709\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8d5e\u52a9\u7684\u6570\u636e\u7cfb\u7edf\u8fdd\u53cd\u7f51\u7edc\u4e2d\u7acb\u539f\u5219\u7684\u539f\u56e0\u3002\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT)\u7684\u6d41\u5a92\u4f53\u670d\u52a1\u76f8\u5bf9\u4e8e\u5176\u7ade\u4e89\u5bf9\u624b\u5177\u6709\u91cd\u5927\u4f18\u52bf\uff0c\u6240\u6709\u8fd9\u4e9b\u7ade\u4e89\u5bf9\u624b\u90fd\u9762\u4e34\u7740\u4e0a\u9650\u7684\u6311\u6218\u3002\u4f46\u7f8e\u56fd\u4e0d\u518d\u6709\u7f51\u7edc\u4e2d\u7acb\uff0c\u56e0\u6b64AT&T\u53ef\u4ee5\u81ea\u7531\u5730\u7ed9\u4e88\u81ea\u5df1\u4f18\u60e0\u5f85\u9047\u3002\n\u201c\u7f51\u7edc\u662f\u6c34\u7ba1\uff0c\u5185\u5bb9\u662f\u6c34\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6c34\u548c\u6c34\u7ba1\u5728\u4e00\u8d77\uff0c\u201c\u8d21\u5361\u5c14\u7ef4\u65af\u8bf4\u3002", "note_en": "HBO Max, AT&amp;T\u2019s big bet on the future of streaming, will be excused from AT&amp;T\u2019s mobile data caps, while competing services like Netflix and Disney Plus will use up your data.\n That\u2019s the follow-up from a  Vergecast conversation with Tony Goncalves, the AT&amp;T executive in charge of HBO Max. Asked whether HBO Max would hit the cap, Goncalves said his team \u201chad the conversation\u201d but didn\u2019t have the answer. AT&amp;T later confirmed to  The Verge that HBO Max will be excused from the company\u2019s traditional data caps and the soft data caps on unlimited plans.\n  According to an AT&amp;T executive familiar with the matter, HBO Max is using AT&amp;T\u2019s \u201csponsored data\u201d system, which technically allows any company to pay to excuse its services from data caps. But since AT&amp;T owns HBO Max, it\u2019s just paying itself: the data fee shows up on the HBO Max books as an expense and on the AT&amp;T Mobility books as revenue. For AT&amp;T as a whole, it zeroes out. Compare that to a competitor like Netflix, which could theoretically pay AT&amp;T for sponsored data, but it would be a pure cost.\n Netflix could theoretically pay AT&amp;T for sponsored data, but it would be a pure cost\n That\u2019s why the last time we looked at AT&amp;T\u2019s sponsored data system, the only three streaming services we could find using it...  were owned by AT&amp;T. It\u2019s also why sponsored data systems fly in the face of net neutrality principles. AT&amp;T\u2019s streaming services have a major advantage over its competitors, all of which run up against the cap. But there\u2019s no net neutrality in the United States anymore, so AT&amp;T is free to give itself preferential treatment.\n \u201cThe network is the plumbing, and the content is the water. And you\u2019re seeing water and the plumbing kind of coming together,\u201d said Goncalves.", "posttime": "2020-06-03 01:51:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "max,\u6570\u636e", "title": "HBO Max\u4e0d\u4f1a\u51b2\u51fbAT&T\u6570\u636e\u4e0a\u9650\uff0c\u4f46Netflix\u548cDisney Plus\u4f1a", "title_en": "HBO Max Won't Hit AT&T Data Caps, But Netflix and Disney Plus Will", "transed": 1, "url": "https://www.theverge.com/2020/6/2/21277402/hbo-max-att-data-caps-netflix-disney-plus-streaming-services-net-neutrality", "via": "", "real_tags": ["max", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "134487f0cc837a288f894700debe59f5.png", "infoid": 1004869, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u7531\u4e8e\u8fbe\u5230\u6700\u5927\u540c\u65f6\u6309\u952e\u6b21\u6570\u800c\u53d1\u9001\u610f\u5916\u4fe1\u53f7/\u5b57\u7b26\u65f6\uff0c\u4f1a\u51fa\u73b0\u91cd\u5f71\u91cd\u5f71\u3002\n\u5f53\u540c\u65f6\u6309\u4e0b\u591a\u4e2a\u952e\u65f6\uff0c\u67d0\u4e9b\u952e\u76d8\u952e\u4e0d\u8d77\u4f5c\u7528\u3002\u90a3\u4e9b\u6ca1\u6709\u51fa\u73b0\u5728\u7535\u8111\u4e0a\u6216\u4f3c\u4e4e\u6d88\u5931\u4e86\u7684\u6309\u952e\u88ab\u79f0\u4e3a\u201c\u5e7d\u7075\u201d\u3002\u5728\u5927\u591a\u6570\u952e\u76d8\u4e0a\uff0c\u5373\u4f7f\u662f\u4e00\u4e9b\u660e\u786e\u6807\u699c\u4e3a\u201c\u9632\u91cd\u5f71\u201d\u7684\u952e\u76d8\uff0c\u8fd9\u4e5f\u662f\u901a\u8fc7\u4e09\u4e2a\u952e\u7684\u7ec4\u5408\u6765\u5b9e\u73b0\u7684\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5728\u73a9\u4f60\u6700\u559c\u6b22\u7684\u89c6\u9891\u6e38\u620f\u65f6\uff0c\u4f60\u4e0d\u80fd\uff0c\u6bd4\u65b9\u8bf4\uff0c\u4e0d\u80fd\u4e00\u8fb9\u5bf9\u89d2\u7ebf\u5954\u8dd1\uff0c\u4e00\u8fb9\u5f00\u67aa(\u6bd4\u5982\u540c\u65f6\u6309\u4e0ba\u3001w\u548cg\u952e)\u3002\u901a\u5e38\uff0c\u91cd\u5f71\u662f\u7531\u4ee5\u4e0b\u4e09\u4e2a\u9650\u5236\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u9020\u6210\u7684\uff1a\u786c\u4ef6\u65e0\u6cd5\u8bfb\u53d6\u7ed9\u5b9a\u7684\u6309\u952e\u7ec4\u5408\u3001\u8ba1\u7b97\u673a\u4e0a\u7684\u8f6f\u4ef6\u4e0d\u652f\u6301\u591a\u4e2a\u540c\u65f6\u6309\u952e\uff0c\u6216\u8005\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u534f\u8bae\u9650\u5236\u4e86\u62a5\u544a\u7684\u6700\u5927\u540c\u65f6\u6309\u952e\u6570\u91cf\u3002\n\u9632\u91cd\u5f71\u529f\u80fd\u786e\u4fdd\u60a8\u7684\u6309\u952e\u6309\u4e0b\u7684\u987a\u5e8f\u6ca1\u6709\u9519\u8bef\u5730\u53d1\u9001\u3002\u4e22\u5931\u8f93\u5165\u8fd9\u901a\u5e38\u662f\u75313\u4ef6\u4e8b\u5f15\u8d77\u7684\uff1a1)\u786c\u4ef6\u4e0d\u517c\u5bb92)\u4e0d\u652f\u6301\u591a\u6b21\u51fb\u952e\u7684\u8f6f\u4ef63)\u9650\u5236\u53ef\u540c\u65f6\u4f20\u8f93\u7684\u51fb\u952e\u6b21\u6570\u7684\u901a\u4fe1\u534f\u8bae(USB)\u4e0ePS/2)\u3002\u4e3a\u4ec0\u4e48\u952e\u76d8\u4e0d\u80fd\u8bc6\u522b\u67d0\u4e9b\u7ec4\u5408\u952e\u76d8\u7684\u89e6\u70b9\u901a\u5e38\u4e0d\u662f\u5355\u72ec\u8bc4\u4f30\u7684\uff0c\u800c\u662f\u5728\u5b83\u4eec\u7684\u5f00\u5173\u914d\u7f6e\u4e2d\uff0c\u4e00\u79cd\u7531\u5217\u548c\u884c\u7ec4\u6210\u7684\u77e9\u9635(\u89c1\u63d2\u56fe)\u3002\u8fd9\u907f\u514d\u4e86\u6bcf\u4e2a\u6309\u94ae\u90fd\u6709\u5355\u72ec\u7684\u5f15\u7ebf\uff0c\u5e76\u4e14\u57fa\u4e8e\u6765\u81ea\u4e92\u8fde\u7684\u5217\u548c\u884c\u7684\u56fe\u6848\u6765\u8bc6\u522b\u51fb\u952e\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u79cd\u65b9\u6cd5\u5982\u4f55\u5de5\u4f5c\u7684\u4e00\u4e9b\u7b80\u5355\u793a\u4f8b\uff1a1)\u6309\u4e0b\u5355\u4e2a\u6309\u94ae\u7684\u4e00\u6b21\u5355\u72ec\u51fb\u952e\u53ef\u4ee5\u770b\u4f5c\u662f\u5217\u548c\u884c\u7684\u7279\u5b9a\u7ec4\u5408\u7684\u7ed3\u679c\uff0c\u5176\u4e2d\u5217X\u7684\u5bfc\u4f53\u4e0e\u884cY\u7684\u5bfc\u7ebf\u8fde\u63a5\uff1a\n\u5982\u679c\u63a7\u5236\u5668\u68c0\u67e5\u952e\u76d8\u4ee5\u67e5\u770b\u54ea\u4e2a\u952e\u6b63\u5728\u88ab\u6309\u4e0b\uff0c\u5219\u57fa\u4e8e\u5217\u548c\u884c\u7684\u8f93\u5165\u4fe1\u53f7\u8bc6\u522b\u5c06\u6e05\u695a\u5730\u8bc6\u522b\u51fa\u6240\u6d89\u53ca\u7684\u952e\u3002\u6bcf\u4e2a\u952e\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u4e0d\u7559\u4efb\u4f55\u8bef\u89e3\u7684\u4f59\u5730\u30022)\u5728\u4e0d\u540c\u7684\u5217\u548c\u884c\u4e2d\u540c\u65f6\u51fb\u952e\u4e24\u4e2a(\u6216\u591a\u4e2a)\u952e\u3002\n\u57fa\u4e8e\u4e0d\u540c\u7684\u5217\u548c\u884c\uff0c\u8fd9\u4e24\u79cd\u7ec4\u5408\u4ecd\u7136\u5f88\u5bb9\u6613\u533a\u5206\uff0c\u5e76\u4e14\u903b\u8f91\u6e05\u6670\uff1a\u6bcf\u4e2a\u952e\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u8bc6\u522b\u7535\u8def\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u53ea\u8981\u6240\u8ba8\u8bba\u7684\u952e\u843d\u5165\u76f8\u4e92\u79bb\u6563\u7684\u5217\u548c\u884c\u30023)\u540c\u4e00\u5217\u6216\u540c\u4e00\u884c\u4e2d\u4e24\u4e2a\u952e\u7684\u540c\u65f6\u51fb\u952e\u3002\n\u8be5\u6a21\u5f0f\u4ecd\u7136\u5141\u8bb8\u6bcf\u4e2a\u952e\u7684\u5355\u4e00\u6e05\u6670\u6807\u8bc6\u3002\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a\u5177\u6709\u95ed\u5408\u89e6\u70b9\u7684\u5217\u88ab\u6fc0\u6d3b\uff0c\u8fd9\u4e24\u884c\u4e5f\u5141\u8bb8\u8fdb\u884c\u660e\u663e\u7684\u533a\u5206\u3002\u5f53\u540c\u4e00\u7ebf\u8def\u4e0a\u7684\u4e24\u4e2a\u952e\u88ab\u6572\u51fb\u65f6\uff0c\u6fc0\u6d3b\u7684\u4e0d\u518d\u662f\u56db\u4e2a\u5bfc\u8054\uff0c\u800c\u662f\u53ea\u6709\u4e09\u4e2a\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bfc\u8054\u662f\u5171\u4eab\u7684\u3002\u8fd9\u79cd\u884c\u4e3a\u79f0\u4e3a\u5171\u7ebf\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7b80\u5355\u903b\u8f91\u4e2d\u7684\u4e00\u4e2a\u88c2\u7f1d\uff1a\u63a7\u5236\u5668\u73b0\u5728\u5bc4\u5b58\u5668\u4e24\u4e2a\u76f8\u4e92\u8fde\u63a5\u7684\u5217\u548c\u884c\u3002\u4f46\u662f\u901a\u8fc7\u67e5\u770b\u63d2\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7f51\u683c\u4e0a\u6709\u56db\u4e2a\u6309\u94ae\u662f\u53ef\u4ee5\u6309\u4e0b\u7684\u3002\u56e0\u6b64\uff0c\u4ea7\u751f\u7684\u56fe\u6848\u4e0d\u518d\u662f\u552f\u4e00\u7684\u3002\u4ee5\u4e0b\u7ec4\u5408\u952e\u5bf9\u63a7\u5236\u5668\u800c\u8a00\u4f3c\u4e4e\u90fd\u662f\u76f8\u540c\u7684\uff1a\n\u4f8b\u5982\uff0c\u5982\u679c\u540c\u65f6\u6309W\u3001S\u548cD\uff0c\u5219E\u663e\u793a\u4e3a\u91cd\u5f71\uff0c\u56e0\u4e3a\u952e\u76d8\u65e0\u6cd5\u533a\u5206\u8fd9\u56db\u4e2a\u5355\u72ec\u7684\u6309\u94ae\u3002\u8fd9\u4e0d\u4e00\u5b9a\u662fUSB\u95ee\u9898\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u952e\u76d8\u5e03\u7ebf\u4e2d\u7684\u903b\u8f91\u95ee\u9898\u3002\u4e00\u4e9b\u5e26\u6709\u53cd\u80f6\u7ba1\u7684\u952e\u76d8\u5c06\u53ea\u63d0\u4f9b\u5e26\u6709WASD\u5757\u7684\u6b64\u529f\u80fd\uff0c\u4ee5\u53ca\u5468\u56f4\u7684\u6309\u952e\u548c\u65b9\u5411\u952e\u3002\u6709\u4e9b\u952e\u76d8\u5728\u6574\u4e2a\u952e\u76d8\u4e0a\u90fd\u4f1a\u6709\u771f\u6b63\u7684NKRO\u3002", "note_en": "Ghosting Ghosting occurs when an unintended signal/character is sent due to the maximum number of simultaneous key presses being reached.\n Some keyboard keys don&#39;t work when multiple keys are pressed simultaneously. The key presses that don&#39;t show up on the computer or seem to have disappeared are said to have been &#34;ghosted&#34;. On most keyboards, even some that are explicitly marketed as &#34;Anti-Ghosting,&#34; this happens with many three key combinations. Imagine playing your favorite video game and not being able to, say, run diagonally and fire your weapon at the same time (say pressing a, w, and g simultaneously).  Typically, ghosting is the result of one or more of following three limitations: the hardware can&#39;t read the given key combination, the software on the computer doesn&#39;t support multiple simultaneous keys, or the communication protocol between the hardware and software limits the maximum number of simultaneous keys reported.\n Anti-ghosting ensures that your key presses are sent without error and in the order pressed.    Lost Input This is typically caused by 3 things: 1) Hardware Incompatibility 2) Software that does not support multiple keystrokes 3) Communication protocol that limits the number of keystrokes that can be transmitted simultaneously (USB) versus PS/2).   Why keyboards cannot read certain combinations The contacts of a keyboard are not usually evaluated individually, but rather in their switching configuration, a kind of matrix of columns and rows (see illustration). This avoids having an individual lead for each button and recognizes keystrokes based on the pattern from the interconnected columns and rows. Let&#39;s look at some simple examples of how this method works:   1) One Individual keystroke  Pressing a single button can be seen as the result of a particular combination of column and row, in which the conductor of column X is circuited with the lead of row Y:\n  If the controller checks the keyboard to see which key is being pressed, input signal recognition on the basis of column and row clearly identifies the key in question. There is only one possible combination for each key, leaving no room for misinterpretation.   2) Simultaneous keystrokes of two (or more) keys in different columns and rows\n  Based on the different columns and rows, the two combinations remain easily distinguished and the logic is clear: each key has only one input recognition circuit, so no problems arise, so long as the keys in question fall into mutually discrete columns and rows.   3) Simultaneous keystrokes of two keys in the same column or row\n  The pattern still allows for a single clear identification of each key. Even if only one column with closed contacts is activated, the two rows allow for a clear distinction to be made. When two keys on the same line are struck, it is no longer four leads that are activated, but rather only three, because one lead is shared. This behavior is called co-linear.\n    Here we see a crack in the simple logic: the controller now registers two mutually circuited columns and rows. But by looking at the illustration, we see that there are four buttons on the grid that could have been pressed. The resulting pattern is therefore no longer unique. The following key combinations all seem identical to the controller:\n  For example, if W, S, and D are struck simultaneously, E appears as a ghost because the keyboard cannot distinguish between the four individual buttons. This is not necessarily a USB problem, but it may also be a logical problem in the wiring of the keyboard. Some keyboards with Anti-Ghosing will only provide this functionality with the WASD block, along with surrounding keys, plus the direction keys. Some Keyboards will have real NKRO across the entire keyboard.", "posttime": "2020-06-03 01:51:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cd\u5f71,anti,\u952e\u76d8", "title": "\u53cd\u91cd\u5f71", "title_en": "Anti-Ghosting", "transed": 1, "url": "https://landing.coolermaster.com/faq/anti-ghosting/", "via": "", "real_tags": ["\u91cd\u5f71", "anti", "\u952e\u76d8"]}, {"category": "", "categoryclass": "", "imagename": "64059979de219980f4d35c1290b588a1.png", "infoid": 1004868, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2019\u5e74\u672b\uff0cOculus Quest\u624b\u90e8\u8ddf\u8e2a\u7684\u63a8\u51fa\u4e3b\u5bfc\u4e86\u865a\u62df\u73b0\u5b9e(VR)\u884c\u4e1a\u3002\u867d\u7136\u8fd9\u4e00\u5b9e\u9a8c\u529f\u80fd\u4ecd\u5904\u4e8e\u8d77\u6b65\u9636\u6bb5\uff0c\u4f46VR\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5bf9\u6b64\u5927\u8086\u7092\u4f5c\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u4e3a\u6df7\u5408\u73b0\u5b9e\u6280\u672f\u4e2d\u4ee4\u4eba\u5174\u594b\u7684\u65b0\u53ef\u80fd\u6027\u6253\u5f00\u5927\u95e8\u3002\nOculus Quest\u624b\u90e8\u8ddf\u8e2a\u652f\u6301\u5bfb\u6c42\u8ba9VR\u5f00\u53d1\u8005\u901a\u8fc7\u81ea\u7136\u7684\u624b\u52bf\u548c\u7b80\u5355\u7684\u4e92\u52a8\u66f4\u81ea\u7531\u5730\u521b\u4f5c\u548c\u8868\u8fbe\u81ea\u5df1\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u80fd\u591f\u5229\u7528\u8fd9\u4e00\u529f\u80fd\uff0c\u4f7f\u865a\u62df\u73b0\u5b9e\u6210\u4e3a\u7528\u6237\u66f4\u5bb9\u6613\u83b7\u5f97\u7684\u3001\u66f4\u903c\u771f\u7684\u4f53\u9a8c\u3002\n\u5927\u591a\u6570AR\u8033\u673a\u548cOculus Quest\u7b49\u66f4\u5148\u8fdb\u7684VR\u8033\u673a\u90fd\u5728\u4e89\u53d6\u6240\u8c13\u7684\u516d\u81ea\u7531\u5ea6(6DOF)\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u7a7a\u95f4\u91cc\u81ea\u7531\u79fb\u52a8\u4f60\u7684\u624b\u548c\u8eab\u4f53\u3002\nOculus Quest\u5e26\u6709\u89e6\u6478\u63a7\u5236\u5668\uff0c\u8033\u673a\u4e2d\u7684\u4f20\u611f\u5668\u53ef\u4ee5\u8ddf\u8e2a\u79fb\u52a8\u3002\u4e0d\u9700\u8981\u7535\u7ebf\u3002\u8fd9\u662f\u8fd9\u6b3e\u8bbe\u5907\u6700\u4ee4\u4eba\u5174\u594b\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u96be\u602a\u4e24\u6b3eQuest\u578b\u53f7(64 GB\u548c128 GB)\u5728Oculus\u5546\u5e97\u90fd\u9500\u552e\u4e00\u7a7a\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u60f3\u8fc7\u83b7\u5f97Oculus Rift\u6216S\u88c2\u7f1d\uff0c\u53ef\u4ee5\u8003\u8651\u5148\u83b7\u5f97Quest\u3002\n\u8981\u4f53\u9a8c\u8fd9\u4e00\u7a81\u7834\u6027\u7684\u529f\u80fd\uff0c\u8bf7\u5c1d\u8bd5\u4ee5\u4e0b\u51e0\u4e2a\u4f7f\u7528\u771f\u5b9e\u53cc\u624b\u7684\u793a\u4f8b\uff1a\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u7d22Oculus Quest\u624b\u90e8\u8ddf\u8e2a\u7684\u5f71\u54cd\uff0c\u67e5\u770b\u5f53\u524d\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5e76\u8003\u8651\u5982\u4f55\u638c\u63e1\u8fd9\u9879\u6f5c\u5728\u7684\u7a81\u7834\u6027\u6280\u672f\uff0c\u4ee5\u521b\u5efa\u66f4\u597d\u7684\u7528\u6237\u754c\u9762(UI)\u3002\n\u8bf7\u5c06\u672c\u6587\u89c6\u4e3a\u5f00\u53d1UX/UI\u8bbe\u8ba1\u7684\u5b9e\u7528\u5efa\u8bae\u3002\u8bf7\u8bb0\u4f4f\uff0c\u624b\u90e8\u8ddf\u8e2a\u9886\u57df\u4ecd\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\uff0c\u6ca1\u6709\u201c\u4e00\u5200\u5207\u201d\u7684\u65b9\u6cd5\u3002\u9664\u4e86\u7cfb\u7edf\u7684\u5c40\u9650\u6027\u5916\uff0c\u4e0d\u540c\u7684\u7528\u6237\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u865a\u62df\u4f53\u9a8c\u662f\u4e0d\u540c\u7684\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u8fd9\u4e2a\u5185\u5bb9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\n\u624b\u90e8\u8ddf\u8e2a\u662fOculus Quest\u5934\u76d4\u663e\u793a\u5668(HMD)\u4e0a\u7684\u4e00\u9879\u529f\u80fd\uff0c\u4f7f\u4eba\u4eec\u5728\u4f7f\u7528VR\u8bbe\u5907\u65f6\u53ef\u4ee5\u5c06\u624b\u4f5c\u4e3a\u4e00\u79cd\u53ef\u884c\u7684\u8f93\u5165\u65b9\u6cd5\u3002\u7528\u6237\u53ef\u4ee5\u7528\u624b\u505a\u51fa\u7b80\u5355\u7684\u624b\u52bf\uff0c\u4f8b\u5982\u634f\u3001\u6309\u4f4f\u6216\u62d6\u52a8\uff0c\u4ee5\u5728VR\u73af\u5883\u4e2d\u6267\u884c\u4efb\u52a1\u6216\u52a8\u4f5c\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u662f\u5168\u5173\u8282\u7684\u8ddf\u8e2a\u786c\u4ef6\uff0c\u53ef\u4ee5\u786e\u5b9a\u4f60\u7684\u624b\u5728\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u624b\u6307\u6216\u624b\u6307\u5173\u8282\u5728\u4efb\u4f55\u65f6\u523b\u90fd\u5728\u505a\u4ec0\u4e48\u3002\u8fd9\u79cd\u8bbe\u8ba1\u4fc3\u8fdb\u4e86\u81ea\u7136\u7684\u4ea4\u4e92\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u4e34\u573a\u611f\u548c\u66f4\u8eab\u4e34\u5176\u5883\u3001\u66f4\u5438\u5f15\u4eba\u7684\u4f53\u9a8c\u3002\n\u8ddf\u8e2a\u7684\u8fd0\u52a8\u63a7\u5236\u5668\u6216\u5168\u606f\u955c\u59341\u4e0d\u4f1a\u63d0\u4f9b\u6709\u5173\u60a8\u7684\u624b\u7684\u4f4d\u7f6e\u6216\u624b\u6307\u6307\u5411\u7684\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002\u540c\u6837\uff0c\u6c14\u95e8\u5173\u8282\u4e0d\u662f\u624b\u90e8\u8ddf\u8e2a\u6280\u672f\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u63d0\u4f9b\u4e00\u4e2a\u8fd0\u52a8\u8f74\u3002\n\u60a8\u53ef\u4ee5\u5728Leap Motion\u3001HoloLens 2\u3001\u667a\u80fd\u624b\u673aSDK(\u5305\u62ecMediaPipeSDK\u548cManoMotion)\u4ee5\u53caVR(\u5305\u62ecManus Prime\u548cVRluv)\u4e2d\u770b\u5230\u5168\u5173\u8282\u624b\u90e8\u8ddf\u8e2a\u7684\u5f88\u597d\u793a\u4f8b\u3002\n\u73b0\u5728\uff0cOculus Quest Hand Tracking\u4e5f\u52a0\u5165\u4e86\u8fd9\u4e00\u540d\u5355\uff0c\u8fd9\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u7edd\u4f73\u7684\u673a\u4f1a\u3002\n\u5f53Facebook\u73b0\u5b9e\u5b9e\u9a8c\u5ba4\u7684\u4ea7\u54c1\u548c\u8bbe\u8ba1\u56e2\u961f\u96c6\u601d\u5e7f\u76ca\u65f6\uff0c\u597d\u4e8b\u5c31\u4f1a\u53d1\u751f\u3002\u6700\u521d\u4f5c\u4e3a\u4e00\u4e2a\u7814\u7a76\u9879\u76ee\u5f00\u59cb\u7684\u9879\u76ee\u5df2\u7ecf\u4e3a\u865a\u62df\u73b0\u5b9e\u8f93\u5165\u5e26\u6765\u4e86\u4e00\u4e2a\u521b\u65b0\u7684\u65b0\u8303\u5f0f\u3002\n\u8bbe\u8ba1\u8303\u4f8b\u662f\u652f\u6491\u6211\u4eec\u5982\u4f55\u4e0e\u8f6f\u4ef6\u4ea4\u4e92\u7684\u57fa\u672c\u6982\u5ff5\u3002\u5728\u865a\u62df\u73b0\u5b9e\u4e2d\uff0c\u8fd9\u4e00\u573a\u666f\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\uff0c\u8fd9\u662f\u9ad8\u7ea7\u624b\u90e8\u8ddf\u8e2a\u7684\u672c\u8d28\u6f14\u53d8\u3002\nOculus Quest\u624b\u90e8\u8ddf\u8e2a\u8f6f\u4ef6\u5305\u542b\u6df1\u5ea6\u5b66\u4e60\u529f\u80fd\uff0c\u5141\u8bb8\u8ba1\u7b97\u673a\u4ec5\u4f7f\u7528Quest\u81ea\u5e26\u7684\u5355\u8272\u76f8\u673a\u6765\u786e\u5b9a\u7528\u6237\u624b\u6307\u7684\u4f4d\u7f6e\u3002\u8fd9\u9879\u6280\u672f\u521b\u5efa\u4e86\u4e00\u7ec4\u6620\u5c04\u5230\u7528\u6237\u624b\u548c\u624b\u6307\u76843D\u70b9\uff0c\u4f7f\u5176\u80fd\u591f\u5728VR\u73af\u5883\u4e2d\u7cbe\u786e\u5730\u8868\u793a\u8fd0\u52a8\u3002\n\u867d\u7136\u65b0\u7684Oculus\u529f\u80fd\u662f\u6df7\u5408\u73b0\u5b9e\u7684\u4e00\u6b21\u98de\u8dc3\uff0c\u4f46\u5b83\u5bf9\u5f00\u53d1\u4eba\u5458\u548c\u7528\u6237\u90fd\u6784\u6210\u4e86\u6311\u6218\u3002\u6240\u6709\u672a\u63a2\u7d22\u7684\u6280\u672f\u90fd\u662f\u672a\u7ecf\u6d4b\u8bd5\u7684\uff0c\u56e0\u6b64\uff0c\u5b83\u8feb\u4f7f\u8bbe\u8ba1\u5e08\u8df3\u51fa\u6846\u6846\u8fdb\u884c\u601d\u8003\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5fc5\u987b\u6709\u6548\u5730\u63d0\u51fa\u4e3a\u8fd9\u79cd\u72ec\u7279\u7684\u786c\u4ef6\u8bbe\u8ba1\u8f6f\u4ef6\u7684\u65b0\u65b9\u6cd5\u3002\n\u4e0a\u4e00\u6b21\u5982\u6b64\u91cd\u5927\u7684\u8f6c\u53d8\u662f\u5f53\u4e16\u754c\u8f6c\u5411\u4ee5\u79fb\u52a8\u4e3a\u4e2d\u5fc3\u7684\u73b0\u5b9e\uff0c\u5c06\u53f0\u5f0f\u7535\u8111\u6362\u6210\u667a\u80fd\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\u65f6\u3002\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u5fd8\u8bb0\u57fa\u4e8e\u9f20\u6807\u7684\u73af\u5883\uff0c\u8f6c\u800c\u8003\u8651\u89e6\u6478\u5c4f\uff0c\u56e0\u4e3a\u70b9\u51fb\u88ab\u6ed1\u52a8\u53d6\u4ee3\u4e86\u3002\n\u73b0\u5728\uff0c\u5728VR\u5f00\u53d1\u9886\u57df\uff0c\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u5fc5\u987b\u60f3\u529e\u6cd5\u7528\u4ed6\u4eec\u7684\u624b\u800c\u4e0d\u662f\u63a7\u5236\u5668\u6765\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528Oculus Quest\u6280\u672f\u3002\n\u4f7f\u7528Oculus Quest\u624b\u90e8\u8ddf\u8e2a\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u4e0e\u865a\u62df\u73af\u5883\u4ea4\u4e92\uff1a\n\u76f4\u63a5\u64cd\u4f5c\u662f\u4e00\u79cd\u865a\u62df\u73b0\u5b9e\u8f93\u5165\u6a21\u578b\uff0c\u7528\u6237\u53ef\u4ee5\u7528\u624b\u89e6\u6478\u5168\u606f\u56fe\u5e76\u4e0e\u5176\u4ea4\u4e92\u3002\u7269\u4f53\u7684\u884c\u4e3a\u5c31\u50cf\u5b83\u4eec\u5728\u73b0\u5b9e\u4e2d\u4e00\u6837\uff0c\u56e0\u6b64\uff0c\u8fd9\u662f\u5b66\u4e60\u5982\u4f55\u63a7\u5236\u865a\u62df\u4e16\u754c\u7684\u4e00\u79cd\u6709\u8da3\u800c\u7b80\u5355\u7684\u65b9\u5f0f\u3002\n\u60a8\u53ef\u4ee5\u6309\u4e0b\u6309\u94ae\u3001\u62fe\u53d6\u5bf9\u8c61\u3001\u6eda\u52a8\u7a97\u53e3\u548c\u6fc0\u6d3b2D\u5185\u5bb9\u65b9\u9762\uff0c\u5c31\u50cf\u5b83\u4eec\u662f\u865a\u62df\u89e6\u6478\u5c4f\u4e00\u6837\u3002\u76f4\u63a5\u64cd\u4f5c\u662f\u4e00\u79cd\u63a5\u8fd1\u8f93\u5165\u7684\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u60a8\u60f3\u8981\u5728\u4f38\u624b\u53ef\u53ca\u7684\u8303\u56f4\u5185\u4e0e\u5185\u5bb9\u4ea4\u4e92\u65f6\uff0c\u5b83\u662f\u6700\u597d\u7684\u3002\n\u6296\u52a8\u662f\u865a\u62df\u624b\u548c\u5b9e\u9645\u624b\u4e4b\u95f4\u7684\u9519\u4f4d\u3002\u5728\u8bb8\u591aAR\u5e73\u53f0\u4e2d\uff0c\u865a\u62df\u624b\u90fd\u662f\u4ee5\u62bd\u8c61\u7684\u65b9\u5f0f\u8868\u793a\u7684\uff0c\u6bd4\u5982\u5f62\u72b6\u3001\u4e91\u6216\u95ea\u5149\u3002\u8fd9\u79cd\u8bbe\u8ba1\u6709\u610f\u9690\u85cf\u6296\u52a8\u6548\u679c\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u4f1a\u5bdf\u89c9\u5230\u4efb\u4f55\u660e\u663e\u7684\u6296\u52a8\u3002\n\u6f02\u79fb\u662f\u4e00\u79cd\u4f60\u5728\u865a\u62df\u4e16\u754c\u4e2d\u79fb\u52a8\u7684\u611f\u89c9\uff0c\u5373\u4f7f\u4f60\u7ad9\u7740\u4e0d\u52a8\u3002\u7269\u4f53\u4f3c\u4e4e\u65e0\u7f18\u65e0\u6545\u5730\u5728\u4f60\u5468\u56f4\u79fb\u52a8\uff0c\u56e0\u4e3a\u7535\u8111\u8ba4\u4e3a\u4f60\u7684\u624b\u4e0e\u5176\u5b9e\u9645\u4f4d\u7f6e\u76f8\u6bd4\u6709\u4e00\u4e2a\u6052\u5b9a\u7684\u504f\u79fb\u91cf\u3002\u5149\u7ebf\u4e0d\u4f73\u6216\u8fdb\u5165\u8033\u673a\u7684\u5149\u7ebf\u8fc7\u591a\u662f\u6f02\u79fb\u95ee\u9898\u7684\u4e3b\u8981\u539f\u56e0\u3002\n\u5947\u602a\u7684\u5fc3\u7075\u4f20\u9001\u662f\u6307\u865a\u62df\u624b\u7684\u4e00\u90e8\u5206\uff0c\u5982\u624b\u6307\uff0c\u968f\u673a\u51fa\u73b0\u5728\u624b\u4e2d\uff0c\u751a\u81f3\u5b8c\u5168\u8131\u8282\u5728\u623f\u95f4\u7684\u5176\u4ed6\u5730\u65b9\u3002\u5b83\u53ef\u80fd\u53ea\u6301\u7eed\u4e00\u5e27\uff0c\u56e0\u4e3a\u5f53\u6280\u672f\u8bef\u8bfb\u73af\u5883\u5e76\u505a\u51fa\u5947\u602a\u7684\u8bef\u5224\u65f6\uff0c\u8fd9\u4e9b\u9519\u8bef\u5c31\u4f1a\u53d1\u751f\u3002(\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4ea4\u54cd\u4e50\u8fdb\u6b65\u6447\u6eda\u4e50\u961f\u7684\u597d\u540d\u5b57\u3002)\n\u8fd9\u4e09\u4e2a\u95ee\u9898\u52a0\u5728\u4e00\u8d77\u662f\u5f71\u54cd\u4ea4\u4e92\u5206\u8fa8\u7387\u7684\u5173\u952e\u56e0\u7d20\uff0c\u4ea4\u4e92\u5206\u8fa8\u7387\u662f\u7528\u6237\u53ef\u4ee5\u8212\u9002\u5730\u53c2\u4e0e\u865a\u62df\u4e16\u754c\u800c\u4e0d\u4f1a\u9047\u5230\u4efb\u4f55\u6709\u5bb3\u7684\u89c6\u89c9\u6216\u6027\u80fd\u95ee\u9898\u7684\u6700\u5c0f\u5bf9\u8c61\u89c4\u6a21\u3002\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5916\u90e8\u8ddf\u8e2a\u7684\u63a7\u5236\u5668\uff0c\u6bd4\u5982Quest\u63a7\u5236\u5668\uff0c\u4f60\u5c31\u4f1a\u62e5\u6709\u96be\u4ee5\u7f6e\u4fe1\u7684\u7cbe\u786e\u5ea6\u3002\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5728\u865a\u62df\u73af\u5883\u4e2d\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e\u9488\u5934\u5927\u5c0f\u7684\u9879\u76ee\u8fdb\u884c\u4ea4\u4e92\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u624b\u90e8\u8ddf\u8e2a\uff0c\u7531\u4e8e\u4e0a\u8ff0\u95ee\u9898\uff0c\u4ea4\u4e92\u5206\u8fa8\u7387\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u5c0f\u4e8e\u4e00\u82f1\u5bf8\u7684\u7269\u4f53\u90fd\u5f88\u96be\u63a5\u5408\u3002\n\u867d\u7136Oculus Quest\u624b\u90e8\u8ddf\u8e2a\u7684\u8d28\u91cf\u548c\u7528\u6237\u754c\u9762\u4ecd\u7136\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u8be5\u6280\u672f\u4ecd\u6709\u6539\u8fdb\u7684\u7a7a\u95f4\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8d28\u91cf\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u4f46\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8bbe\u8ba1\u5e08\u5fc5\u987b\u63a5\u53d7\u4e00\u4e9b\u9650\u5236\u3002\n\u5728\u8bbe\u8ba1\u865a\u62df\u4e16\u754c\u65f6\uff0c\u9664\u4e86\u7269\u4f53\u7684\u5927\u5c0f\u4e4b\u5916\uff0c\u4f60\u8fd8\u5fc5\u987b\u8003\u8651\u4f60\u7684\u624b\u81c2\u7684\u957f\u5ea6\u3002\u4f7f\u7528\u76f4\u63a5\u64cd\u4f5c\u65f6\uff0c\u60a8\u53ea\u80fd\u4e0e\u60a8\u53ef\u4ee5\u5230\u8fbe\u7684\u5bf9\u8c61\u4ea4\u4e92\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8981\u8003\u8651\u624b\u81c2\u6700\u77ed\u7684\u7528\u6237\u7684\u957f\u5ea6\uff0c\u5e76\u786e\u4fdd\u4e0d\u8981\u8ba9\u60a8\u7684\u865a\u62df\u4e16\u754c\u585e\u6ee1\u53ef\u80fd\u65e0\u6cd5\u89e6\u53ca\u7684\u5143\u7d20\u3002\n\u624b\u5c04\u7ebf\u662f\u4e00\u79cd\u865a\u62df\u73b0\u5b9e\u8bbe\u8ba1\u6982\u5ff5\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u624b\u4e2d\u5411\u8fdc\u5904\u7684\u7269\u4f53\u201c\u53d1\u5c04\u201d\u5149\u675f\uff0c\u7136\u540e\u4f7f\u7528\u624b\u52bf\u4ece\u8fdc\u5904\u5bf9\u8be5\u7269\u4f53\u8fdb\u884c\u63a7\u5236\u3002\n\u6b64\u529f\u80fd\u4f7f\u60a8\u80fd\u591f\u4ee5\u591a\u79cd\u65b9\u5f0f\u4e0e\u7528\u6237\u754c\u9762\u4ea4\u4e92\uff0c\u4f8b\u5982\u7ffb\u8f6c\u5f00\u5173\u3001\u6309\u4e0b\u6309\u94ae\u6216\u4ece\u623f\u95f4\u4e2d\u62fe\u53d6\u7269\u54c1\u3002\u5f53\u4f60\u7684\u624b\u6307\u548c\u62c7\u6307\u4e00\u8d77\u89e6\u6478\u6765\u6fc0\u6d3b\u5bf9\u7269\u4f53\u7684\u63a7\u5236\u65f6\uff0c\u4f60\u751a\u81f3\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e9b\u89e6\u89c9\u53cd\u9988\u3002\n\u60a8\u53ef\u4ee5\u6839\u636e\u5934\u90e8\u4f4d\u7f6e\u951a\u5b9a\u624b\u5c04\u7ebf\uff0c\u8fd9\u4f1a\u5728\u60a8\u4f7f\u7528\u624b\u81c2\u548c\u624b\u901a\u8fc7\u66f4\u5927\u8303\u56f4\u7684\u8fd0\u52a8\u8c03\u6574\u89d2\u5ea6\u4e4b\u524d\u589e\u52a0\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7cbe\u786e\u5ea6\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u624b\u5c04\u7ebf\u5728\u865a\u62df\u73af\u5883\u4e2d\u4e0d\u50cf\u5728\u8ba1\u7b97\u673a\u4e0a\u5de5\u4f5c\u5f97\u90a3\u4e48\u597d\u3002\n\u624b\u52bf\u8bc6\u522b\u662f\u4e00\u79cd\u865a\u62df\u73b0\u5b9e\u8bbe\u8ba1\u6982\u5ff5\uff0c\u8ba1\u7b97\u673a\u6839\u636e\u624b\u6307\u548c\u624b\u638c\u7684\u4f4d\u7f6e\u548c\u5f62\u72b6\u5206\u6790\u7528\u6237\u7684\u624b\u7684\u59ff\u52bf\uff0c\u7136\u540e\u89e6\u53d1\u76f8\u5e94\u7684\u52a8\u4f5c\u3002\u4f8b\u5982\uff0c\u8ba1\u7b97\u673a\u53ef\u4ee5\u8bc6\u522b\u5e38\u89c1\u7684\u624b\u8bed\u4f7f\u7528\uff0c\u5982\u548c\u5e73\u7b26\u53f7\u6216\u6447\u6eda\u4e50\u624b\u52bf\u3002\n\u5bf9\u4e8e\u8bbe\u8ba1\u5e08\u6765\u8bf4\uff0c\u624b\u52bf\u53ef\u80fd\u5f88\u96be\u5904\u7406\uff0c\u56e0\u4e3a\u6709\u5f88\u5927\u7684\u51fa\u9519\u7a7a\u95f4\u3002\u60a8\u5fc5\u987b\u8003\u8651\u4ee5\u4e0b\u4e8b\u9879\uff1a\n\u901a\u8fc7\u6f5c\u610f\u8bc6\u7684\u52a8\u4f5c\u6216\u666e\u901a\u7684\u80a2\u4f53\u8bed\u8a00\u65e0\u610f\u5730\u505a\u624b\u52bf\u3002\u4eba\u4eec\u5728\u8bf4\u8bdd\u65f6\u81ea\u7136\u5730\u79fb\u52a8\u4ed6\u4eec\u7684\u624b\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f6f\u4ef6\u505a\u51fa\u4e00\u4e9b\u56de\u5e94\u3002\n\u60a8\u7684\u4e16\u754c\u4e2d\u7684\u6709\u610f\u64cd\u4f5c\u53ef\u80fd\u4f1a\u51fa\u4e8e\u5176\u4ed6\u539f\u56e0\u4fb5\u72af\u7528\u6237\u4f7f\u7528\u67d0\u4e9b\u59ff\u52bf\u7684\u80fd\u529b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7528\u6237\u53ef\u4ee5\u6fc0\u6d3b\u4e16\u754c\u4e0a\u7684\u67d0\u4e2a\u6309\u94ae\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u7c7b\u4f3c\u7684\u6309\u4e0b\u52a8\u4f5c\uff0c\u5219\u53ef\u80fd\u4f1a\u6df7\u6dc6\u7cfb\u7edf\u3002\n\u50cfOK\u624b\u52bf\u6216\u7ad6\u8d77\u5927\u62c7\u6307\u8fd9\u6837\u523b\u610f\u7684\u56fa\u6709\u610f\u601d\u624b\u52bf\u5728\u8bb8\u591a\u6587\u5316\u4e2d\u5df2\u7ecf\u6709\u4e86\u6839\u6df1\u8482\u56fa\u7684\u542b\u4e49\u3002\u8bbe\u8ba1\u4eba\u5458\u5fc5\u987b\u907f\u514d\u5728\u4ed6\u4eec\u7684\u7528\u6237\u754c\u9762\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u56e0\u4e3a\u7528\u6237\u5e0c\u671b\u5728\u4ed6\u4eec\u5df2\u7ecf\u7406\u89e3\u7684\u542b\u4e49\u548c\u8f6f\u4ef6\u5c06\u611f\u77e5\u7684\u542b\u4e49\u4e4b\u95f4\u5b58\u5728\u7d27\u5bc6\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u3002\n\u6545\u610f\u65e0\u610f\u4e49\u7684\u624b\u52bf\u662f\u7279\u5b9a\u7684\u59ff\u52bf\u6216\u52a8\u4f5c\uff0c\u6ca1\u6709\u4efb\u4f55\u5148\u5165\u4e3a\u4e3b\u7684\u6587\u5316\u610f\u4e49\uff0c\u53ea\u662f\u6545\u610f\u505a\u7684\u3002\u4f8b\u5982\uff0cQuest\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u592a\u53ef\u80fd\u4e0e\u4efb\u4f55\u81ea\u7136\u80a2\u4f53\u8bed\u8a00\u6df7\u6dc6\u7684\u634f\u773c\u775b\u7684\u624b\u52bf\u3002\n\u8bbe\u8ba1\u4eba\u5458\u5fc5\u987b\u7ed3\u5408\u67d0\u4e9b\u624b\u52bf\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u6539\u5584\u5176Oculus Quest\u624b\u90e8\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u4f53\u9a8c\u3002\u57fa\u672c\u59ff\u6001\u7684\u4e00\u4e2a\u7a81\u51fa\u793a\u4f8b\u662f\u6267\u884c\u7cfb\u7edf\u8f6c\u4e49\u3002\u7528\u6237\u5fc5\u987b\u59cb\u7ec8\u5177\u6709\u8bbf\u95ee\u6b64\u529f\u80fd\u7684\u6743\u9650\u3002\n\u5f53\u624b\u52bf\u7684\u5185\u5728\u542b\u4e49\u4e0e\u7ed3\u679c\u76f8\u5339\u914d\u65f6\uff0c\u5c06\u8be5\u624b\u52bf\u5305\u542b\u5728\u60a8\u7684\u8bbe\u8ba1\u4e2d\u662f\u503c\u5f97\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7528\u6237\u60f3\u8981\u622a\u56fe\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5c06\u5927\u62c7\u6307\u7684\u5c16\u7aef\u4ece\u53e6\u4e00\u53ea\u624b\u6307\u5411\u98df\u6307\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5f62\u72b6\uff0c\u5c31\u50cf\u4ed6\u4eec\u6b63\u5728\u900f\u8fc7\u76f8\u673a\u7684\u6846\u67b6\u89c2\u770b\u4e00\u6837\u3002\n\u624b\u90e8\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5408\u7406\u624b\u52bf\u7684\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\u5f53\u8be5\u624b\u52bf\u662f\u754c\u9762\u4e2d\u7684\u552f\u4e00\u4ea4\u4e92\u65f6\u3002\u4f8b\u5982\uff0c\u5728\u865a\u62df\u98de\u9556\u6e38\u620f\u4e2d\uff0c\u7528\u6237\u8fdb\u884c\u7684\u552f\u4e00\u4ea4\u4e92\u662f\u6295\u63b7\u98de\u9556\u7684\u52a8\u4f5c\u3002\nOculus Quest\u624b\u90e8\u8ddf\u8e2a\u7684\u6700\u65b0\u53d1\u5c55\u8ba9VR/AR\u793e\u533a\u8bae\u8bba\u7eb7\u7eb7\uff0c\u8bb8\u591aUI\u8bbe\u8ba1\u5e08\u90fd\u5728\u7d27\u9523\u5bc6\u9f13\u5730\u63a8\u8fdb\u8fd9\u4e00\u529f\u80fd\u7684\u754c\u9650\u3002\n\u865a\u62df\u73b0\u5b9e\u5728\u8bb8\u591a\u65b9\u9762\u4ecd\u7136\u6709\u9650\uff0c\u56e0\u4e3a\u8bbe\u8ba1\u5e08\u8fd8\u6ca1\u6709\u53d1\u73b0\u6700\u91cd\u8981\u548c\u6700\u5177\u63a2\u7d22\u6027\u7684\u8303\u4f8b\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u53d1\u6325\u624b\u8ddf\u8e2a\u6280\u672f\u7684\u6f5c\u529b\u3002\n\u4ee5\u4e0b\u662f\u60a8\u5728\u8bbe\u8ba1Oculus Quest\u624b\u90e8\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u4e00\u4e9b\u60f3\u6cd5\uff1a\n\u6e05\u5355\u4e0d\u80dc\u679a\u4e3e\uff0c\u53ea\u662f\u53d7\u5230\u8bbe\u8ba1\u5e08\u60f3\u8c61\u529b\u7684\u9650\u5236\u3002\u8981\u4e86\u89e3\u865a\u62df\u73b0\u5b9e\u8bbe\u8ba1\u4e2d\u65b0\u8303\u5f0f\u7684\u53ef\u80fd\u6027\uff0c\u8bf7\u8003\u8651\u4e0b\u9762\u7684\u4f8b\u5b50\u3002\n\u6ed1\u52a8\u952e\u76d8\u4f7f\u60a8\u53ef\u4ee5\u5728\u865a\u62df\u952e\u76d8\u5468\u56f4\u6ed1\u52a8\u53cc\u624b\u3002\u8be5\u8f6f\u4ef6\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u6280\u672f\u731c\u6d4b\u4f60\u8bd5\u56fe\u5199\u7684\u662f\u4ec0\u4e48\uff0c\u5f53\u4f60\u7ee7\u7eed\u6ed1\u52a8\u65f6\uff0c\u5b8c\u6210\u7684\u6587\u672c\u4f1a\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u3002\n\u98de\u624b\u8ba9\u4f60\u6709\u53ef\u80fd\u4e0e\u9065\u8fdc\u7684\u7269\u54c1\u4e92\u52a8\u3002\u5b83\u7c7b\u4f3c\u4e8e\u4fee\u6539\u540e\u7684\u624b\u5c04\u7ebf\uff0c\u5176\u4e2d\u60a8\u7684\u624b\u4f4d\u4e8e\u5149\u7ebf\u7684\u672b\u7aef\uff0c\u5141\u8bb8\u5bf9\u8ddd\u79bb\u8f83\u8fdc\u7684\u5bf9\u8c61\u8fdb\u884c\u8fd1\u573a\u76f4\u63a5\u5bf9\u8c61\u64cd\u7eb5\u3002\n\u8303\u56f4/\u5927\u5c0f\u653e\u5927\u662f\u53e6\u4e00\u79cd\u8ddd\u79bb\u5de5\u5177\uff0c\u5176\u4e2d\u865a\u62df\u73b0\u5b9e\u7684\u624b\u6bd4\u7528\u6237\u7684\u5b9e\u9645\u624b\u5927\u5f97\u591a\u3002\u8fd9\u5141\u8bb8\u8fdb\u884c\u5927\u89c4\u6a21\u64cd\u4f5c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u6700\u5c11\u7684\u79fb\u52a8\u6765\u63a7\u5236\u5de8\u5927\u7684\u5bf9\u8c61\u548c\u6574\u4e2a\u573a\u666f\u3002\n\u629b\u624b\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6982\u5ff5\uff0c\u4f60\u53ef\u4ee5\u628a\u624b\u4ece\u4f60\u8eab\u4e0a\u629b\u5f00\uff0c\u7136\u540e\u7528\u624b\u52bf\u5728\u5730\u677f\u6216\u5176\u4ed6\u8868\u9762\u722c\u884c\uff0c\u4ee5\u5230\u8fbe\u7269\u4f53\u3002\n\u5176\u4e2d\u4e00\u4e9b\u60f3\u6cd5\u5145\u5176\u91cf\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u65b0\u5947\uff0c\u4f46Shopify\u7684VR/AR\u8d1f\u8d23\u4eba\u4e39\u5c3c\u5c14\u00b7\u6bd4\u5f7b\u59c6(Daniel Beuchamp)\u89e3\u91ca\u8bf4\uff0c\u8fd9\u662f\u4e00\u6761\u91cd\u8981\u7684\u8fdb\u5316\u4e4b\u8def\u3002\n\u201c\u91ca\u653e\u65b0\u7684\u548c\u5f3a\u5927\u7684\u60f3\u6cd5\u7684\u6700\u597d\u65b9\u6cd5\u4e4b\u4e00\u5c31\u662f\u5efa\u7acb\u5728\u611a\u8822\u7684\u60f3\u6cd5\u4e0a\uff0c\u201d\u6bd4\u5f7b\u59c6\u8bf4\u3002\n\u8981\u60f3\u5728VR/AR\u4e2d\u83b7\u5f97\u7a81\u7834\u6027\u7684\u60f3\u6cd5\uff0c\u4f60\u5fc5\u987b\u9996\u5148\u7ecf\u5386\u5f88\u591a\u7cdf\u7cd5\u7684\u60f3\u6cd5\u3002\u5728\u6267\u884c\u6b64\u64cd\u4f5c\u65f6\uff0c\u8bf7\u8003\u8651\u5982\u4f55\u66f4\u5feb\u5730\u6539\u8fdb\u624b\u90e8\u8ddf\u8e2a\u3002\u8bbe\u7f6e\u597dOculus Quest\u8fdb\u884c\u5f00\u53d1\u540e\uff0c\u5c06\u60a8\u7684\u6ce8\u610f\u529b\u8f6c\u79fb\u5230\u7814\u7a76\u4eba\u5458\u7684\u6a21\u5f0f\u3002\n\u4e0e\u5176\u8bd5\u56fe\u7acb\u5373\u7528\u624b\u8ddf\u8e2a\u6765\u5934\u8111\u98ce\u66b4\u4e00\u4e2a\u83b7\u80dc\u7684\u4ea7\u54c1\uff0c\u4f60\u5e94\u8be5\u73a9\u5f04\u8fd9\u9879\u6280\u672f\uff0c\u60f3\u51fa\u7528\u6237\u559c\u6b22\u7684\u6709\u8da3\u7684\u60f3\u6cd5\u3002\u5728\u8fd9\u6837\u505a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u719f\u6089\u8be5\u5de5\u5177\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5076\u7136\u53d1\u73b0\u53ef\u4ee5\u5e94\u7528\u4e8e\u66f4\u6709\u76ee\u7684\u7684\u9879\u76ee\u7684\u4ea4\u4e92\u548c\u6982\u5ff5\u3002\n\u6ce2\u5c1a\u58f0\u79f0\uff0c\u4ed6\u5e0c\u671b\u66f4\u591a\u7684\u865a\u62df\u73b0\u5b9e\u5f00\u53d1\u8005\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5c0f\u60f3\u6cd5\u53ef\u4ee5\u5e26\u6765\u5de8\u5927\u7684\u7a81\u7834\u3002\n\u201c\u4e0d\u8981\u628a\u6784\u5efa\u6574\u4e2a\u6e38\u620f\u6216\u6574\u4e2a\u4ea7\u54c1\u7684\u91cd\u62c5\u653e\u5728\u81ea\u5df1\u8eab\u4e0a\u3002\u5efa\u9020\u8bb8\u591a\u5c0f\u4e1c\u897f\uff0c\u4e0d\u7ba1\u5b83\u4eec\u770b\u8d77\u6765\u6709\u591a\u50bb\u3002\u4f60\u4f1a\u60ca\u8bb6\u4e8e\u4f60\u5b66\u5230\u4e86\u591a\u5c11\u4e1c\u897f\u3002\u201c\u3002\n\u5982\u679c\u6709\u4eba\u8d70\u8fdb\u4f60\u7684\u529e\u516c\u5ba4\uff0c\u770b\u5230\u4f60\u529e\u516c\u684c\u4e0a\u653e\u7740\u4e00\u53cc\u5047\u624b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u4f60\u7684\u505a\u6cd5\u6709\u70b9\u592a\u611a\u8822\u4e86\u3002\u7136\u800c\uff0cVR\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5e94\u8be5\u8003\u8651\u7ed9\u81ea\u5df1\u4e70\u4e00\u4e9b\u9ad8\u8d28\u91cf\u7684\u7269\u7406\u6a21\u578b\u3002\n\u5f53\u4f60\u6709\u4e00\u53cc\u624b\u7684\u65f6\u5019\uff0c\u5411\u5176\u4ed6\u56e2\u961f\u6210\u5458\u9610\u8ff0\u4f60\u7684\u60f3\u6cd5\u548c\u89e3\u91ca\u4f60\u7684\u6982\u5ff5\u8981\u5bb9\u6613\u5f97\u591a\u3002\u60a8\u53ef\u4ee5\u5728\u624b\u80cc\u4e0a\u7ed8\u5236\u4e00\u4e9b\u8f74\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u66f4\u51c6\u786e\u5730\u6f14\u793a\u4e0d\u540c\u7684\u52a8\u4f5c\u548c\u5efa\u8bae\u7684\u624b\u52bf\u3002\n\u8ba8\u8bba\u8bbe\u8ba1\u6982\u5ff5\u548c\u65b0\u60f3\u6cd5\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u53ea\u6709\u5f53\u60a8\u4e0e\u60a8\u7684\u56e2\u961f\u6210\u5458\u516c\u5f00\u8c08\u8bba\u65f6\uff0c\u60a8\u5bf9\u865a\u62df\u73b0\u5b9e\u73af\u5883\u6216\u5e94\u7528\u7a0b\u5e8f\u7684\u613f\u666f\u624d\u4f1a\u5b9e\u73b0\u3002\n\u786e\u4fdd\u4f60\u6709\u5b9a\u671f\u4f1a\u8bae\u6216\u5f00\u653e\u5e73\u53f0\u548c\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u4ee5\u4fc3\u8fdb\u81ea\u7531\u6d41\u52a8\u7684\u8ba8\u8bba\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u56db\u5904\u4ea4\u6d41\u60f3\u6cd5\uff0c\u5e76\u83b7\u5f97\u6240\u9700\u7684\u53cd\u9988\uff0c\u5c06\u7c97\u7565\u7684\u8111\u7535\u6ce2\u5851\u9020\u6210\u4e00\u4e2a\u7cbe\u81f4\u7684\u6982\u5ff5\u3002\n\u8bbe\u8ba1\u754c\u7684\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\uff0c\u4f60\u8d8a\u5feb\u8ba9\u4f60\u7684\u8bbe\u8ba1\u53d8\u5f97\u53ef\u89c1\uff0c\u6548\u679c\u5c31\u8d8a\u597d\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9bUI\u8bbe\u8ba1\u8005\u53ef\u4ee5\u7528\u6765\u78e8\u7ec3\u4ed6\u4eec\u5728\u8bbe\u8ba1VR\u73af\u5883\u4e2d\u7684\u6280\u80fd\u7684\u5de5\u5177\uff1a\n\u77e2\u91cf\u91c7\u75282D\u77e2\u91cf\u5e76\u8d4b\u4e88\u5176\u6df1\u5ea6\uff0c\u4ee5\u4f7f\u5176\u6210\u4e3a3D\u77e2\u91cf\u3002\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a\u6765\u81ea\u5df1\u5feb\u901f\u521b\u5efa3D\u4e16\u754c\uff0c\u800c\u4e0d\u9700\u8981\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6216\u9ad8\u7ea7\u7f16\u7801\u6280\u80fd\u3002\n\u8c37\u6b4c\u7684\u79ef\u6728\u53ef\u4ee5\u8ba9\u4f60\u8fdb\u5165\u865a\u62df\u73b0\u5b9e\u7684\u4e16\u754c\uff0c\u5e76\u4f7f\u7528\u57fa\u672c\u7684\u79ef\u6728\u6765\u6784\u5efa\u5f62\u72b6\u3002\u7136\u540e\u53ef\u4ee5\u5c06\u5b8c\u6210\u7684\u6a21\u578b\u76f4\u63a5\u5bfc\u51fa\u5230\u6e38\u620f\u5f15\u64ce\u4e2d\u3002\n\u8c37\u6b4c\u7684\u503e\u659c\u753b\u7b14\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5757\u7684\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u4f60\u901a\u8fc7\u7ed8\u753b\u5de5\u5177\u521b\u5efa\u66f4\u590d\u6742\u7684\u6709\u673a\u5f62\u72b6\u3002\n\u907f\u514d\u5728\u6ca1\u6709\u597d\u7684\u8c03\u8bd5\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\u6f5c\u5fc3\u4e8eVR\u8bbe\u8ba1\u7684\u8bf1\u60d1\u3002\u60a8\u9700\u8981\u8003\u8651\u5982\u4f55\u6539\u8fdb\u7cfb\u7edf\u548c\u7528\u6237\u754c\u9762\uff0c\u56e0\u6b64\uff0c\u8c03\u8bd5\u5de5\u5177\u662f\u5e2e\u52a9\u60a8\u5feb\u901f\u8bc6\u522b\u548c\u6d88\u9664\u95ee\u9898\u7684\u91cd\u8981\u65b9\u9762\u3002\n\u5728\u865a\u62df\u73b0\u5b9e\u8bbe\u8ba1\u4e2d\uff0c\u65f6\u95f4\u5f80\u5f80\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u9650\u5236\u56e0\u7d20\u3002\u5373\u4f7f\u60a8\u638c\u63e1\u4e86\u8c03\u8bd5\u95ee\u9898\uff0c\u4e5f\u5fc5\u987b\u5bfb\u627e\u51cf\u5c11\u8fed\u4ee3\u65f6\u95f4\u7684\u65b9\u6cd5\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fOculus\u94fe\u63a5\uff0c\u60a8\u53ef\u4ee5\u5728PC\u4e0a\u4f7f\u7528Quest\u624b\u52a8\u8ddf\u8e2a\uff0c\u800c\u4e0d\u662f\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u5e76\u5c06\u5176\u90e8\u7f72\u5230Quest\u8fdb\u884c\u6d4b\u8bd5\u3002\u901a\u8fc7Oculus\u94fe\u63a5\uff0c\u60a8\u7684VR\u5e94\u7528\u7a0b\u5e8f\u5c06\u901a\u8fc7Unity\u6216\u865a\u5e7b\u8fdb\u884c\u5b9e\u51b5\u64ad\u653e\u3002\u53e6\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\u662f\u201c\u6cc4\u6f0f\u8fd0\u52a8\u201d\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u653e\u5728\u529e\u516c\u684c\u6216\u5934\u76d4\u4e0a\u7684\u6444\u50cf\u5934\uff0c\u4f7f\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u80fd\u8bbf\u95ee\u624b\u90e8\u8ddf\u8e2a\u3002\n\u53e6\u4e00\u4e2a\u60f3\u6cd5\u662f\u914d\u7f6e\u901a\u8fc7\u9f20\u6807\u6216\u952e\u76d8\u529f\u80fd\u6a21\u62df\u624b\u7684\u65b9\u6cd5\u3002\u8fd9\u6837\u505a\u610f\u5473\u7740\u56e2\u961f\u4e2d\u7684\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u5904\u7406\u7b80\u5355\u7684\u60f3\u6cd5\uff0c\u4ece\u800c\u52a0\u5feb\u4e86\u8bbe\u8ba1\u8fc7\u7a0b\u3002\n\u5f53\u4f60\u4f7f\u7528VR\u65b0\u624b\u8fdb\u884cBeta\u6d4b\u8bd5\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u662f\u5f92\u52b3\u7684\u3002\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u4f7f\u7528\u786c\u4ef6\u7684\u7ecf\u9a8c\uff0c\u6240\u4ee5\u4ed6\u4eec\u5f88\u96be\u901a\u8fc7\u4ee4\u4eba\u60ca\u53f9\u7684\u56e0\u7d20\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u6709\u4e00\u4e9b\u865a\u62df\u73b0\u5b9e\u7ecf\u9a8c\u7684\u4eba\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u7ed9\u51fa\u8d1f\u9762\u53cd\u9988\u548c\u5efa\u8bbe\u6027\u7684\u6279\u8bc4\uff0c\u5e2e\u52a9\u4f60\u6539\u8fdb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002\n\u867d\u7136\u8bb8\u591a\u4e13\u5bb6\u53ef\u80fd\u5bf9\u67d0\u4e9b\u8303\u4f8b\u6216\u6280\u672f\u6709\u4e00\u4e9b\u504f\u89c1\uff0c\u4f46\u5b83\u4eec\u5bf9\u6d4b\u8bd5\u548c\u4f18\u5316\u5e2e\u52a9\u66f4\u6709\u7528\u3002\u8981\u6d88\u9664\u4efb\u4f55\u504f\u89c1\uff0c\u8bf7\u8981\u6c42\u60a8\u7684\u6d4b\u8bd5\u4eba\u5458\u4ec5\u4f9d\u8d56\u4ed6\u4eec\u5728\u865a\u62df\u73af\u5883\u4e2d\u7684\u6240\u89c1\u6240\u95fb\u3002\u901a\u8fc7\u88c5\u804b\u4f5c\u54d1\uff0c\u53ea\u6309\u7167\u8f6f\u4ef6\u544a\u8bc9\u4ed6\u4eec\u505a\u7684\u4e8b\u60c5\u884c\u4e8b\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u8bc6\u522bUI\u4e2d\u7684\u7f3a\u9677\u3002\nOculus Quest\u624b\u90e8\u8ddf\u8e2a\u63d0\u4f9b\u4e86\u4ece\u6559\u80b2\u5230\u4f01\u4e1a\u7684\u5de8\u5927\u673a\u9047\u3002\u968f\u7740\u865a\u62df\u73b0\u5b9e\u8d8a\u6765\u8d8a\u591a\u5730\u878d\u5165\u73b0\u4ee3\u4e16\u754c\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u5e0c\u671b\u6316\u6398\u8fd9\u9879\u6280\u672f\u7684\u539f\u59cb\u6f5c\u529b\u3002\n\u76ee\u524d\uff0c\u8bbe\u8ba1\u4e2d\u8fd8\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cUI\u8bbe\u8ba1\u5e08\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u4ecd\u7136\u53ef\u4ee5\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4e3a\u5404\u79cd\u73b0\u5b9e\u4e16\u754c\u7684\u4f7f\u7528\u521b\u9020\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5f15\u4eba\u5165\u80dc\u548c\u8eab\u4e34\u5176\u5883\u7684VR\u73af\u5883\u3002\n\u8bbe\u8ba1\u56e2\u961f\u5185\u90e8\u7684\u6c9f\u901a\u81f3\u5173\u91cd\u8981\uff0c\u4e0e\u7528\u6237\u7684\u5916\u90e8\u6c9f\u901a\u4e5f\u662f\u5982\u6b64\uff0c\u5c24\u5176\u662f\u5728\u6d4b\u8bd5\u548c\u4f18\u5316\u65b9\u9762\u3002\u5f00\u53d1\u4eba\u5458\u5728\u6d4b\u8bd5\u671f\u95f4\u5fc5\u987b\u5bfb\u6c42\u6709\u7ecf\u9a8c\u7684VR\u7528\u6237\u7684\u5e2e\u52a9\uff0c\u5e76\u5229\u7528\u5148\u8fdb\u7684\u8c03\u8bd5\u5de5\u5177\u6765\u51cf\u5c11\u8fed\u4ee3\u65f6\u95f4\u3002\n\u6027\u80fd\u662f\u6700\u91cd\u8981\u7684\uff0c\u4f46\u968f\u7740\u7ade\u4e89\u52a0\u5267\uff0c\u5feb\u901f\u751f\u4ea7\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u7ade\u4e89\u5c06\u6210\u4e3a\u5728\u667a\u80fd\u624b\u673a\u4e0a\u521b\u9020\u4e0b\u4e00\u4e2a\u865a\u62df\u73b0\u5b9e\u5237\u5361\u52a8\u4f5c\u7684\u516c\u53f8\u3002\n\u60a8\u53ef\u4ee5\u5728Microsoft Design Labs Hands Playround for Quest\u548cHoloLens 2\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u624b\u90e8\u8bbe\u8ba1\u7684\u4fe1\u606f\uff0c\u6216\u8005\u7ec3\u4e60\u624b\u90e8\u8ddf\u8e2a\u6280\u672f\u3002", "note_en": "In late 2019, the  introduction of Oculus Quest hand tracking dominated the virtual reality (VR) industry. While this experimental feature is still very much in its infancy, there is considerable hype among VR app developers as it may open the doors to exciting new possibilities in mixed reality technology.\n Oculus Quest hand-tracking support seeks to give VR developers more freedom to create and express themselves through natural gestures and simple interactions. Over time, app developers may be able to leverage this feature to make virtual reality a more accessible, realistic experience for users.\n Most AR headsets and more advanced VR headsets as Oculus Quest are striving for so-called six-degrees-of-freedom (6DOF) where you can freely move your hands and body in your space.\n Oculus Quest comes with Touch Controllers where the movements are being tracked by the sensors in your headset. No wires necessary. It\u2019s one of the most exciting features of the device and it\u2019s not surprising both Quest models (64GB and 128GB) are sold out from the  Oculus Store. If you\u2019ve ever thought about getting Oculus Rift or Rift S, consider getting a Quest first.\n To experience this groundbreaking feature try a few of the examples where you\u2019re using your real hands:\n   In this article, we&#39;ll explore the impact of Oculus Quest hand tracking, look at the current best practices and consider how you can get a grip on this potentially ground-breaking technology to create a better user interface (UI).\n Consider this article as a practical advice towards developing your UX/UI design. Keep in mind the hand tracking field is still in the early days and there\u2019s no \u201c one size fits all\u201d approach. Apart from limitations of the system the virtual experience of the applications is different from user to user. Saying that, this content is a good starting point.\n     Hand tracking is a feature on the Oculus Quest head-mounted display (HMD) that enables people to use their hands as a viable input method when using the VR device. Users can make simple gestures with their hands, such as pinching, holding, or dragging to perform tasks or actions in the VR environment.\n The critical aspect is that it is fully-articulated tracking hardware that can determine where your hands are in the virtual space and what every finger or finger joint is doing at any moment. This design facilitates natural interactions, which give the user a heightened sense of presence and a more immersive, engaging experience.\n Tracked motion controllers or HoloLens 1 don&#39;t provide information about your hands&#39; location or where your fingers are pointing. Similarly, Valve Knuckles are not hand tracking technology because they only offer one axis of movement.\n You can see good examples of fully-articulated hand tracking in Leap Motion,  HoloLens 2, in Smartphone SDKs, including  MediaPipe and  ManoMotion, as well as in VR, including  Manus Prime and  VRgluv.\n Now, Oculus Quest hand tracking joins that list, which presents excellent opportunities for app developers.\n  Good things happen when the product and design teams at Facebook Reality Labs put their heads together. What originally started as a research project has resulted in an innovative new paradigm for  virtual reality input.\n Design paradigms are the foundational concept that underpins how we interact with software. In VR, this landscape changes dramatically, which is an essential evolution for high-level hand tracking.\n The software behind Oculus Quest hand tracking incorporates deep learning, allowing the computer to determine the position of the user\u2019s fingers, using only the Quest\u2019s native monochrome cameras. The technology creates a group of 3D points that map to the user\u2019s hands and fingers, enabling it to represent movement to an accurate degree in the VR environment.\n While the new Oculus feature is a leap forward for mixed reality, it poses a challenge for developers and users alike. All unexplored technology is untested, and therefore, it forces designers to think outside the box, as they effectively must come up with new ways of designing software for this unique hardware.\n The last major shift of this magnitude was when the world moved to a mobile-centric reality, swapping their desktop computers for smartphones and tablets. Developers had to forget about the mouse-based environment, and instead, think about touchscreens, as clicking was replaced by swiping.\n Now, in the realm of VR development, app designers must figure out how to get the most of the Oculus Quest technology using their hands instead of controllers.\n   When using Oculus Quest hand tracking, there are three ways you can interact with the virtual environment:\n     Direct manipulation is a virtual reality input model where the user reaches out with their hands to touch and interact with holograms. Objects behave as they would in reality, and so, it&#39;s a fun and easy way of learning how to control a virtual world.\n  You can press buttons, pick up objects, scroll windows, and activate 2D content aspects as if they were a virtual touchscreen. Direct manipulation is a near input model, which means it is best when you want to interact with content within arms reach.\n   Jitter is a misalignment between the virtual hands and your actual hands. In a lot of AR platforms, the virtual hands are represented in abstract ways, like with shapes, clouds, or sparkles. This design is intentional to hide the jitter effect, so users don&#39;t pick up on any obvious jittering.\n Drift is the feeling that you are moving in the virtual world, even while you stand still. Objects appear to move around you for no reason because of a constant offset of where the computer thinks your hand is compared to its real location. Bad lighting or too much light coming into the headset is a primary cause of drift issues.\n Grotesque Teleports are when a part of the virtual hands, like a finger, randomly appears inside the hand, or even completely disjointed somewhere else in the room. It may only last for a frame, as these errors happen when the technology misreads the environment and makes bizarre misjudgments. (It&#39;s also a really good name for a symphonic progressive rock band.)\n  Together, these three problems are the key factors that impact interaction resolution, which is the minimum object scale that users can comfortably engage in the virtual world without encountering any detrimental visual or performance issues.\n If you have an externally tracked controller, like a Quest controller, you have incredible accuracy. You may find it possible to comfortably interact with items the size of a pinhead in the virtual environment. However, with hand tracking, the interaction resolution is not as good because of the issues above. Realistically, any objects smaller than an inch will be hard to engage.\n While the quality and user interface of Oculus Quest hand tracking is still impressive, the technology still has room for improvement. The quality will get better over time, but for now, there are some limitations that designers must accept.\n Besides the object size, you must also think about the length of your arms when designing a virtual world. With direct manipulation, you can only interact with objects you can reach. More to the point, consider the length of your shortest-armed user and make sure not to overpack your virtual world with elements that may be out of reach.\n  A hand ray is a virtual reality design concept where the user can \u201cshoot\u201d a beam from their hand at a distant object, and then use gestures to exercise control over that object from afar.\n   This feature enables you to interact with the user interface in many ways, such as flipping switches, pushing buttons, or picking up items from across the room. You may even get some haptic feedback as you touch your finger and thumb together to activate control on an object.\n You can anchor hand rays based on your head position, which adds a degree of accuracy before you adjust the angle through a broader range of motion with your arms and hands.\n  Typically, hand rays don\u2019t work as well in a virtual environment as they do on computers.\n  Gesture recognition is a virtual reality design concept where the computer analyzes the pose of the user&#39;s hand in regard to the position and shape of the fingers and palm and then triggers a corresponding action. For example, the computer may recognize common sign language uses, like the peace symbol or a rock n\u2019 roll sign.\n    For designers, gestures can be tricky to deal with, as there is a lot of room for error. You must consider the following:\n Unintentional gesticulations through subconscious movement or common body language. People moving their hands naturally while talking might cause the software to do something in response.\n Intentional operations in your world may infringe on the user&#39;s ability to use certain poses for other reasons. For example, if the user can activate a button in the world, but also uses a similar pushing movement elsewhere, it can confuse the system.\n Intentional inherent meaning gestures like the OK sign or thumbs up already have an ingrained meaning in many cultures. Designers must avoid using these in their user interface because the user expects there to be a close one-to-one mapping between the meaning they already understand and the meaning that the software will perceive.\n Intentional meaningless gestures are specific poses or movements that don&#39;t have any preconceived cultural meaning and are only done intentionally. For example, Quest uses an eye-pinch gesture that is unlikely to be confused with any natural body language.\n  Designers must incorporate certain gestures to enable users to improve the user experience for their Oculus Quest hand tracking application. A prominent example of an essential gesture is to perform a system escape. Users must have access to this ability at all times.\n When the inherent meaning of a gesture matches the outcome, it&#39;s worth including the gesture in your design. For example, if the user wants to take a screenshot, they can bring the tips of their thumbs toward the forefinger from the opposing hand to create a square shape, as if they are looking through the frame of a camera.\n A further example of a justifiable gesture in a hand tracking application is when the gesture is the sole interaction in the interface. For instance, in a virtual darts game, the only interaction the user would be doing is the motion of throwing a dart.\n  The latest developments in Oculus Quest hand tracking have got the VR/AR community talking, and many UI designers are chomping at the bit to push the boundaries of this feature.\n   Virtual reality remains limited in many ways, as designers are yet to discover the most important and exploratory paradigms to maximize the potential of hand-tracking technology.\n Here are just some ideas that you can use when designing Oculus Quest hand tracking applications:\n  The list goes on and is only limited by the imagination of the designer. To get a feel for the possibilities of new paradigms in VR design, consider the examples below.\n Swipe Keyboard enables you to swipe your hands around a virtual keyboard. The software guesses what you are trying to write using machine learning technology, and the completed text appears on the screen as you continue swiping.\n Flying Hands makes it possible for you to interact with items that are far away. It is like a modified hand ray, where your hands are at the end of the ray, allowing near-field direct object manipulation on objects that are at a distance.\n Range/Size Amplification is another distance tool where the virtual reality hands are much bigger than the user\u2019s actual hands. This allows for large-scale manipulation so you can control huge objects and entire scenes with relatively minimal movement.\n Hand Throwing is a fun concept where you can throw your hand away from you, and then use gestures to crawl the detached around the floor or other surfaces to get to objects.\n Some of these ideas may seem novel at best, but   Daniel Beauchamp , the head of VR/AR at Shopify, explains this an essential road to evolution.\n \u201cOne of the best ways to unlock new and powerful ideas is to build upon silly ideas,\u201d  says Beauchamp.\n   To get to the ground-breaking ideas in VR/AR, you must first go through a lot of bad ideas. As you do this, think about how you make improvements to hand tracking faster. After you  setup Oculus Quest for development move your mind to the researcher&#39;s mode.\n  Instead of trying to brainstorm a winning product with hand tracking instantly, you should play around with the technology, coming up with fun ideas that users enjoy. In doing this, you can get familiar with the capabilities of the tool, and may stumble upon interactions and concepts that you can apply to a more purposeful project.\n Beauchamp claims he wishes more VR developers took this approach, as the little ideas can lead to huge breakthroughs.\n \u201cDon\u2019t put the burden on yourself to build out a whole game or build out a whole product. Build many small things, no matter how silly they may seem. You\u2019ll be surprised at just how much you learn.\u201d\n  If someone walks into your office and sees a pair of fake hands on your desk, they may think you\u2019re taking the silly approach a little too far. However, VR app developers should consider getting themselves some quality physical models.\n It&#39;s much easier to formulate ideas and explain your concepts to other team members when you have a set of hands. You can draw some axes on the back of the hands, which can make it easier to demonstrate different motions and suggested gestures with greater accuracy.\n  It&#39;s vital to discuss design concepts and new ideas. Your vision for a virtual reality environment or application will only come to be if you talk openly about it with your team members.\n Make sure you have regular meetings or open platforms and project management tools that facilitate free-flowing discussion so you can bounce ideas around, and get the feedback needed to sculpt a rough brainwave into a polished concept.\n  Everybody in design knows that the faster you can get your designs visible, the better. Here are a few tools that UI designers can use to hone their skills in designing VR environments:\n Vectary takes 2D vectors and gives them depth to make them 3D. You can do this to quickly create a 3D world yourself, without needing a software engineer or high-level coding skills.\n Blocks by Google allows you to enter a VR world and use basic building blocks to construct shapes. You can then export your finished models directly into your game engine.\n Tilt Brush by Google is a similar tool to Blocks that allows you to create more complex, organic shapes through paint tools.\n  Avoid the temptation to dive into VR design without a good debugging tool. You need to think about how you can improve the system and user interface, and so, a debugging tool is a vital aspect that will help you identify and eliminate issues quickly.\n  Time is often a significant constraint in VR design. Even if you&#39;re on top of the debugging issues, you must look for ways to reduce your iteration time.\n If you\u2019re using  the Oculus link, you can use Quest hand tracking on your PC instead of building an app and deploying it to the Quest for testing. Through Oculus link, your VR app will play live through  Unity or Unreal. An alternative to this is Leak Motion, a camera that you can place on your desk or helmet that will enable everyone on the team to access hand tracking.\n Another idea is to configure ways of simulating hands through mouse or keyboard functions. Doing this means people in the team can quickly play with simple ideas on the fly, which speeds up the design process.\n  When you use VR newbies for beta testing, it can prove unproductive. As they have no experience with the hardware, it&#39;s hard for them to get past the WOW factor. Instead, you should use people with some VR experience because they can give negative feedback and constructive criticism that helps you improve your app design.\n While many experts may have some bias toward certain paradigms or technology, they are more useful for testing and optimization assistance. To combat any bias, ask your testers to rely only on what they see or hear in the virtual environment. By playing dumb and acting solely on what the software tells them to do, users can identify flaws in the UI.\n  Oculus Quest hand tracking presents immense opportunities from education to enterprise. As virtual reality becomes ever-more integrated into the modern world, more companies want to tap into the raw potential of this technology.\n For now, there are still some kinks in the design. Still, UI designers and app developers can come together to create incredibly engaging and immersive VR environments for a diverse range of real-world uses.\n Communication within design teams is crucial, as is external communication with users, especially when it comes to testing and optimization. Developers must enlist the help of experienced VR users during testing, and leverage advanced debugging tools to reduce iteration times.\n Performance matters most, but fast production is vital as the competition heats up to become the company that creates the next &#34;swipe&#34; motion for VR on smartphones.\n You can learn more about   designing for hands from Oculus  or practice hand tracking techniques in   Microsoft Design Labs Hands Playground  for Quest and HoloLens 2.", "posttime": "2020-06-03 01:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u8bbe\u8ba1,\u624b\u90e8,ui", "title": "\u865a\u62df\u73b0\u5b9e\u624b\u90e8\u8ddf\u8e2a\u5e94\u7528\u7684\u7528\u6237\u754c\u9762\u8bbe\u8ba1", "title_en": "Designing UI for VR Hand Tracking Applications", "transed": 1, "url": "https://circuitstream.com/blog/oculus-quest-hand-tracking/", "via": "", "real_tags": ["app", "\u8bbe\u8ba1", "\u624b\u90e8", "ui"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004867, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e54\u5c14\u00b7\u65af\u6ce2\u5c14\u65af\u57fa(Joel Spolsky)\u5728\u4e00\u7bc7\u8457\u540d\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u65ad\u8a00\uff0c\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u4ee3\u7801\u5e93\u3002\u4ed6\u4e3e\u4e86\u7f51\u666f\u7684\u4f8b\u5b50\uff0c\u4ed6\u4eec\u82b1\u4e86\u51e0\u5e74\u65f6\u95f4\u91cd\u5199\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u7684\u516c\u53f8\u6700\u7ec8\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5012\u95ed\u4e86\u3002\u4e00\u5e74\u591a\u524d\uff0c\u6211\u91cd\u8bfb\u4e86\u90a3\u7bc7\u5e16\u5b50\uff0c\u4f46\u6211\u4ecd\u7136\u6295\u7968\u8d5e\u6210\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u6211\u4eec\u7684\u7533\u8bf7\u3002\u5168\u90e8\u90fd\u662f\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u8fd9\u4e48\u505a\u7684\u539f\u56e0\uff0c\u6211\u4eec\u662f\u5982\u4f55\u6210\u529f\u7684\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5173\u4e8e\u4f60\u662f\u5426\u5e94\u8be5\u8fd9\u6837\u505a\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\n\u6211\u4eec\u7684\u6545\u4e8b\u4ece2019\u5e741\u6708\u5f00\u59cb\u3002Remesh\u5f53\u65f6\u662f\u4e00\u5bb6\u5c0f\u5f97\u591a\u7684\u516c\u53f8\u3002\u6211\u4eec\u6700\u8fd1\u96c7\u4f63\u4e86\u51e0\u540d\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u67095\u540d\u5de5\u7a0b\u5e08\u4e13\u6ce8\u4e8e\u4ea7\u54c1\uff0c\u8fd8\u6709\u51e0\u540d\u5de5\u7a0b\u5e08\u4e13\u6ce8\u4e8e\u673a\u5668\u5b66\u4e60(ML)\u6216DevOps\u3002\u5c3d\u7ba1\u6700\u8fd1\u96c7\u4f63\u4e86\u8fd9\u4e9b\u5de5\u7a0b\u5e08\uff0c\u4f46\u6211\u4eec\u7684\u901f\u5ea6\u4ecd\u7136\u4f4e\u5f97\u4ee4\u4eba\u75db\u82e6\u3002\u6dfb\u52a0\u7b80\u5355\u529f\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u6211\u4eec\u5728\u4ea7\u54c1\u4e2d\u6709\u5f88\u591a\u9519\u8bef\uff0c\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u627f\u8ba4\u8fd9\u4e9b\u9519\u8bef\u662f\u201c\u5df2\u77e5\u7684\u201d\uff0c\u5e76\u6ca1\u6709\u4fee\u590d\u3002\u800c\u4e14\u6574\u4e2a\u4ea7\u54c1\u770b\u8d77\u6765\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u660e\u663e\u53d8\u5316\u4e86\u3002\n\u7406\u89e3\u6211\u4eec\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e9b\u95ee\u9898\u662f\u5f88\u91cd\u8981\u7684\u3002\u6211\u4eec\u5047\u8bbe(\u5728\u91cd\u5199\u4e4b\u540e\uff0c\u9a8c\u8bc1\u4e86)\u95ee\u9898\u4e0d\u5728\u6211\u4eec\u7684\u5458\u5de5\u8eab\u4e0a\uff1a\u6211\u4eec\u96c7\u4f63\u4e86\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\u3002\u95ee\u9898\u4e3b\u8981\u51fa\u5728\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u548c\u6211\u4eec\u7684\u6d41\u7a0b\u4e0a\u3002\u6211\u4eec\u6b63\u5728\u5de5\u4f5c\u7684\u9057\u7559\u4ee3\u7801\u5e93\u65e2\u4e0d\u9002\u5408\u6211\u4eec\u56e2\u961f\u7684\u6280\u80fd\u96c6\uff0c\u4e5f\u4e0d\u9002\u5408\u6211\u4eec\u6b63\u5728\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7684\u8fc7\u7a0b\u9f13\u52b1\u5e76\u4f9d\u8d56\u4e8e\u5b64\u7acb\u7684\u77e5\u8bc6\uff1a\u5728Remesh\u6ca1\u6709\u201c\u5168\u6808\u201d\u3002\n\u6211\u4eec\u7684\u9057\u7559\u5e94\u7528\u7a0b\u5e8f\u6700\u521d\u662f\u4e3a\u4e00\u4e9b\u4e0e\u73b0\u5728\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u4e0d\u540c\u7684\u4e1c\u897f\u800c\u8bbe\u8ba1\u7684\u3002\u6700\u521d\uff0cRemesh\u5141\u8bb8\u7528\u6237\u5728\u6574\u4e2a\u7ec4\u4e4b\u95f4\u6216\u4e2a\u4eba\u548c\u7ec4\u4e4b\u95f4\u8fdb\u884c\u53cc\u5411\u5bf9\u8bdd\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8ba9\u6c11\u4e3b\u515a\u4eba\u548c\u5171\u548c\u515a\u4eba\u76f8\u4e92\u4ea4\u8c08\uff0c\u76f8\u4e92\u7406\u89e3\uff0c\u627e\u5230\u5171\u540c\u70b9\u3002\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u8ba9\u9547\u957f\u4e0e\u4ed6\u4eec\u7684\u5e02\u6c11\u4ea4\u8c08\uff0c\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u4ed6\u4eec\u9700\u8981\u4ec0\u4e48\u3001\u76f8\u4fe1\u4ec0\u4e48\u548c\u60f3\u8981\u4ec0\u4e48\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u53d1\u73b0\u4ea7\u54c1\u9002\u5408\u5e02\u573a\u65f6\uff0c\u7528\u4f8b\u53d1\u751f\u4e86\u53d8\u5316\u3002\u6211\u4eec\u9760\u5411\u4e00\u4f4d\u5355\u72ec\u7684\u4e3b\u6301\u4eba\uff0c\u4e0e\u4e00\u7fa4\u4eba\u4ea4\u8c08\u3002\n\u8fd9\u79cd\u66f4\u6539\u7684\u7ed3\u679c\u662f\uff0c\u67d0\u4e9b\u65e7\u7684\u8bbe\u8ba1\u51b3\u7b56\u4e0d\u518d\u6709\u610f\u4e49\uff0c\u6a21\u5f0f\u9700\u8981\u8fdb\u884c\u91cd\u5927\u66f4\u6539\u3002\u9664\u4e86\u6570\u636e\u5e93\u95ee\u9898\u4e4b\u5916\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u672c\u8eab\u4e5f\u5f88\u96be\u7406\u89e3\uff0c\u56e0\u4e3a\u7279\u6027\u90fd\u662f\u7528\u87ba\u6813\u56fa\u5b9a\u8d77\u6765\u7684\uff0c\u6ca1\u6709\u8fdb\u884c\u592a\u591a\u7684\u91cd\u5927\u91cd\u6784\u3002\u6211\u4eec\u5728\u6700\u9700\u8981\u91cd\u6784\u7684\u9886\u57df\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u975e\u5e38\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6700\u65e7\u7684\u4ee3\u7801\uff0c\u5728\u6211\u4eec\u5efa\u7acb\u826f\u597d\u7684\u6d4b\u8bd5\u5b9e\u8df5\u4e4b\u524d\u7f16\u5199\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u6b63\u5728\u4f7f\u7528\u7684\u8bed\u8a00\u548c\u6846\u67b6\u5bf9\u6211\u4eec\u7684\u56e2\u961f\u4e0d\u8d77\u4f5c\u7528\u3002\u540e\u7aef\u4ee3\u7801\u5e93\u662f\u7528Elixir\u7f16\u5199\u7684\uff0c\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u4e2d\u5f88\u5c11\u6709\u4eba\u975e\u5e38\u4e86\u89e3\u8fd9\u4e00\u70b9\u3002\u5176\u4e2d\u4e00\u4e2a\u524d\u7aef\u4ee3\u7801\u5e93\u662f\u7528\u975e\u5e38\u53e4\u8001\u7684ANGLING\u7248\u672c\u7f16\u5199\u7684(\u6211\u4e0d\u60f3\u53bb\u68c0\u67e5\u5b83\u662f\u4ec0\u4e48\uff0c\u6211\u53ef\u80fd\u4f1a\u54ed)\uff0c\u6211\u4eec\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u524d\u7aef\u5728\u54cd\u5e94\u3002\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u4e2d\u5f88\u5c11\u6709\u4eba\u5728\u4e00\u8f86\u8f66\u91cc\u611f\u5230\u8212\u670d\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e09\u8f86\u8f66\u4e86\u3002\u4f7f\u7528\u7684\u8bed\u8a00\u548c\u6846\u67b6\u4e0d\u9002\u5408\u6211\u4eec\u7684\u56e2\u961f\uff0c\u4e5f\u4e0d\u9002\u5408\u6211\u4eec\u7684\u95ee\u9898\uff0c\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u6211\u4eec\u7684\u901f\u5ea6\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u9700\u8981\u8fdb\u884c\u91cd\u5927\u66f4\u6539\u3002\u5f53\u60a8\u9762\u524d\u6709\u4e00\u5806\u96be\u4ee5\u5904\u7406\u7684\u4ee3\u7801\u65f6\uff0c\u786e\u5b9e\u6709\u4e09\u79cd\u9009\u62e9\uff1a\n\u5bf9\u4e8e\u524d\u7aef\u6765\u8bf4\uff0c\u91cd\u6784\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u9009\u62e9\u3002\u6211\u4eec\u7684ANGLE\u7248\u672c\u5df2\u7ecf\u8db3\u591f\u8001\u4e86\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u660e\u786e\u7684\u5347\u7ea7\u5230\u73b0\u4ee3\u7248\u672c\u7684ANGLE(\u5766\u7387\u5730\u8bf4\uff0c\u6211\u4eec\u4e5f\u4e0d\u60f3\u4f7f\u7528\u4efb\u4f55\u7248\u672c\u7684ANGLING)\u3002\u56e0\u4e3a\u6211\u4eec\u9884\u8ba1UI\u548cAPI\u4f1a\u6709\u91cd\u5927\u53d8\u5316\uff0c\u6240\u4ee5\u91cd\u6784\u662f\u4e0d\u53ef\u884c\u7684\u3002\u56e0\u6b64\uff0c\u5728\u524d\u7aef\uff0c\u6211\u4eec\u8981\u4e48\u4e00\u4e3e\u91cd\u5199\u5b83\uff0c\u8981\u4e48\u96f6\u6572\u788e\u6253\u5730\u91cd\u5199\u5b83\u3002\n\u540e\u7aef\u6709\u4e00\u4e9b\u6211\u4eec\u60f3\u8981\u89e3\u51b3\u7684\u95ee\u9898--\u6211\u4eec\u7684\u6a21\u5f0f\u3001\u8bed\u8a00\u548c\u4ee3\u7801\u5e93\u4e0d\u518d\u9002\u5408\u6211\u4eec\u6b63\u5728\u89e3\u51b3\u7684\u95ee\u9898\u3002\u6211\u4eec\u5c06Elixir\u7528\u4e8e\u5176\u5927\u89c4\u6a21\u7684\u5e76\u53d1\u652f\u6301\uff0c\u4f46\u6211\u4eec\u6700\u7ec8\u4ece\u672a\u9700\u8981\u5b83\uff0c\u5b83\u53ea\u4f1a\u54ac\u6211\u4eec\u4e00\u53e3\uff1aErlang VM\u4e2d\u5904\u7406\u5e76\u53d1\u7684\u65b9\u5f0f\u4f7f\u5f97\u5206\u6790\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u60a8\u77e5\u9053\u6b63\u5728\u8ba1\u7b97\u4ec0\u4e48\uff0c\u4f46\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u8c03\u7528\u5b83-\u795d\u6027\u80fd\u8c03\u4f18\u597d\u8fd0\u3002Elixir\u4ee3\u7801\u5e93\u8fd8\u9650\u5236\u4e86\u6211\u4eec\u7684ML\u5de5\u7a0b\u5e08\u5bf9\u540e\u7aef\u4ee3\u7801\u5e93\u7684\u8d21\u732e\uff1a\u4ed6\u4eec\u6bcf\u5929\u90fd\u5728Python\u4e2d\u5de5\u4f5c\uff0c\u6ca1\u6709\u65f6\u95f4\u6df1\u5165\u7814\u7a76Elixir\u3002\u957f\u8bdd\u77ed\u8bf4\uff0c\u6211\u4eec\u60f3\u653e\u5f03ELEXIR\uff0c\u8f6c\u800c\u4f7f\u7528Python\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u7684\u6574\u4e2a\u56e2\u961f\u5c31\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\uff0c\u8bed\u8a00\u5c06\u652f\u6301\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u66f4\u5bb9\u6613\u5206\u6790\u4ee3\u7801\u3002\n\u6211\u4eec\u4e5f\u6709\u4e00\u4e9b\u201c\u4ea7\u54c1\u503a\u52a1\u201d\uff0c\u6211\u4eec\u5411\u73b0\u6709\u5ba2\u6237\u4ecb\u7ecd\u4e86\u4ed6\u4eec\u5b66\u4e60\u5e76\u9010\u6e10\u4f9d\u604b\u7684\u6982\u5ff5\uff0c\u4f46\u6700\u7ec8\u53ef\u80fd\u5e76\u4e0d\u7406\u60f3\u3002\u4ed6\u4eec\u662f\u5f53\u5730\u7684\u6781\u7aef\u5206\u5b50\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u6253\u7834\u5c40\u90e8\u6700\u5927\u503c\uff0c\u505a\u51fa\u66f4\u597d\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u8fdb\u884c\u4e00\u6b21\u5927\u7684\u98de\u8dc3\uff0c\u5728\u90a3\u91cc\uff0c\u8f83\u5c0f\u7684\u8fed\u4ee3\u53ef\u80fd\u4f1a\u9047\u5230\u7528\u6237\u7684\u62b5\u5236\u3002\u5220\u9664\u4e2d\u7684\u8fd9\u4e9b\u6982\u5ff5\u9700\u8981\u4e00\u6b21\u505a\u5f88\u591a\u4e8b\u60c5\u3002\n\u5f52\u6839\u7ed3\u5e95\uff0c\u6211\u4eec\u91cd\u5199\u7684\u7406\u7531\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u56e0\u7d20\uff1a\n\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u56e2\u961f\u7684\u6bcf\u4e2a\u6210\u5458\u90fd\u80fd\u4e3a\u540e\u7aef\u4ee3\u7801\u5e93\u505a\u51fa\u8d21\u732e\uff0c\u800cPython\u65e2\u6613\u4e8e\u5b66\u4e60\uff0c\u53c8\u5728\u6211\u4eec\u7684\u56e2\u961f\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u91c7\u7528\uff0c\u8fd9\u7b26\u5408\u6211\u4eec\u7684\u8981\u6c42\u3002\n\u6211\u4eec\u7684\u65e7\u4ee3\u7801\u5e93\u975e\u5e38\u8106\u5f31\uff0c\u6d4b\u8bd5\u96be\u5ea6\u5f88\u4f4e\uff0c\u91cd\u6784\u5b83\u5c06\u662f\u4e00\u4e2a\u8270\u5de8\u7684\u8fc7\u7a0b\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc1\u79fb\u5230\u50cfDjango\u8fd9\u6837\u81ea\u4ee5\u4e3a\u662f\u7684\u6846\u67b6\u6765\u63d0\u9ad8\u6548\u7387\uff0c\u540c\u65f6\u4e5f\u6709\u5f88\u591a\u7701\u65f6\u7684\u9ed8\u8ba4\u8bbe\u7f6e(\u6bd4\u5982Django Admin)\u3002\n\u6211\u4eec\u5c06\u6709\u673a\u4f1a\u5236\u4f5c\u4e00\u4e2a\u53d7\u6211\u4eec\u4ece\u5ba2\u6237\u90a3\u91cc\u5b66\u5230\u7684\u4e1c\u897f\u5f71\u54cd\u7684\u5168\u65b0\u7248\u672c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7ba1\u7406\u5411\u65b0\u7248\u672c\u7684\u8fc7\u6e21\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e00\u9879\u66f4\u6539\u4e0a\u90fd\u4e0e\u5927\u91cf\u5ba2\u6237\u8fdb\u884c\u957f\u8fbe12\u4e2a\u6708\u7684\u6597\u4e89\u3002\u8fd9\u4e5f\u4f7f\u5f97\u57f9\u8bad\u6211\u4eec\u7684\u5ba2\u6237\u6210\u529f\u56e2\u961f\u548c\u9500\u552e\u56e2\u961f\u6700\u7ec8\u6210\u4e3a\u4e00\u6b21\u6027\u7684\u6279\u91cf\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u4e0d\u65ad\u5730\u91cd\u65b0\u5f15\u5165\u65b0\u6982\u5ff5\u3002\n\u4e3a\u4e86\u505a\u51fa\u8fd9\u4e2a\u51b3\u5b9a\uff0c\u6211\u4eec\u505a\u4e86\u76f8\u5f53\u5e7f\u6cdb\u7684\u89c4\u5212\u3002\u6211\u4eec\u53ef\u4ee5\u6574\u5929\u8c08\u8bba\u654f\u6377\u8fd9\u4e2a\u548c\u90a3\u4e2a\uff0c\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9645\u6267\u884c\u7011\u5e03\u5f0f\u8ba1\u5212\u7684\u6848\u4f8b-\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u8981\u5b9e\u73b0\u5b83\u7684\u7011\u5e03\u5f0f\uff0c\u800c\u662f\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u9009\u9879\u7684\u52aa\u529b\u7a0b\u5ea6\u3002\u5f88\u5feb\u5c31\u5f88\u660e\u663e\uff0c\u6279\u91cf\u91cd\u5199\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u65f6\u95f4\uff0c\u4f46\u662f\u91cd\u6784\u6216\u96f6\u6563\u91cd\u5199\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e14\u56f4\u7ed5\u5b83\u7684\u4e0d\u786e\u5b9a\u6027\u8981\u9ad8\u5f97\u591a\u3002\u5982\u679c\u6211\u4eec\u8d70\u91cd\u6784\u8def\u7ebf\uff0c\u6211\u4eec\u5c06\u5192\u66f4\u5927\u7684\u98ce\u9669\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u5bf9\u81ea\u5df1\u7684\u51b3\u5b9a\u5f88\u6709\u4fe1\u5fc3\uff0c\u800c\u4e14\u6211\u4eec\u5f97\u5230\u4e86\u7ec4\u7ec7\u5404\u4e2a\u5c42\u9762\u7684\u652f\u6301\u3002\u6211\u4eec\u51b3\u5b9a\u91cd\u5199\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u4fee\u590d\u8fc7\u53bb\u51e0\u5e74\u7684\u9519\u8bef\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8ba9\u6211\u4eec\u660e\u663e\u5730\u63a8\u52a8\u4ea7\u54c1\u5411\u524d\u53d1\u5c55\u3002\n\u6211\u4eec\u57282019\u5e742\u6708\u5f00\u59cb\u91cd\u5199\uff0c\u6b64\u524d\u6211\u4eec\u89c4\u5212\u4e86\u9700\u8981\u5305\u62ec\u54ea\u4e9b\u529f\u80fd\u624d\u80fd\u4e0e\u73b0\u6709\u5e73\u53f0\u7684\u529f\u80fd\u76f8\u5f53\uff0c\u8fd9\u662f\u6211\u4eec\u5c3d\u804c\u8c03\u67e5\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u786e\u4fdd\u8fd9\u662f\u6b63\u786e\u7684\u9053\u8def\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u575a\u5b9e\u7684\u8ba1\u5212\uff0c\u7279\u522b\u662f\u56f4\u7ed5\u6211\u4eec\u6b63\u5728\u5efa\u8bbe\u7684\u4e1c\u897f\u3002\u5b83\u8fdd\u80cc\u4e86\u654f\u6377(\u6216\u8005\u662f\u654f\u6377\uff1f\ud83e\udd14)\u7684\u6559\u6761\uff0c\u4f46\u662f\u62e5\u6709\u4e00\u4e2a\u6211\u4eec\u613f\u610f\u80cc\u79bb\u7684\u8ba1\u5212\u6709\u52a9\u4e8e\u6307\u5f15\u6211\u4eec\u524d\u8fdb\u7684\u9053\u8def\uff0c\u770b\u770b\u6211\u4eec\u662f\u5426\u8d70\u4e0a\u4e86\u4e0d\u540c\u7684\u9053\u8def\u3002\u5f53\u6211\u4eec\u5bf9\u7528\u6237(\u5185\u90e8\u5ba2\u6237\uff0c\u6700\u540e\u662f\u4e00\u4e9b\u5916\u90e8\u5ba2\u6237)\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u6211\u4eec\u786e\u5b9e\u51fa\u73b0\u4e86\u76f8\u5f53\u5927\u7684\u504f\u5dee\uff0c\u4f46\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002\n\u5728\u7ecf\u5386\u4e86\u4e00\u4e2a\u574e\u5777\u7684\u5f00\u59cb\u4e4b\u540e\uff0c\u6784\u5efa\u65b0\u7248\u672c\u7684\u5b9e\u9645\u8fc7\u7a0b\u76f8\u5f53\u987a\u5229\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u6765\u8bf4\uff0c\u5207\u6362\u5230\u65b0\u7684\u6280\u672f\u5806\u6808\u90fd\u662f\u75db\u82e6\u7684\u3002\u867d\u7136\u6211\u4eec\u9009\u62e9Python\u4f5c\u4e3a\u6574\u4e2a\u56e2\u961f\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u4f46\u6211\u4eec\u4e2d\u4ecd\u6709\u4e00\u4e9b\u4eba\u9700\u8981\u5b66\u4e60\u5b83\u3002\u800c\u4e14\u6211\u4eec\u7684\u540e\u7aef\u6216\u5168\u6808\u5de5\u7a0b\u5e08\u4e00\u5f00\u59cb\u90fd\u4e0d\u8ba4\u8bc6Django(\u800c\u6211\u4eec\u7684\u9996\u5e2d\u524d\u7aef\u5de5\u7a0b\u5e08\u5bf9\u5b83\u975e\u5e38\u719f\u6089)\u3002\u540c\u6837\uff0c\u5728\u524d\u7aef\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u77e5\u9053Reaction\uff0c\u4f46\u5f88\u5c11\u6709\u4eba\u5bf9Tyescript\u6709\u6df1\u523b\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u4e5f\u9009\u62e9\u8fc1\u79fb\u5230Tyescript\u4e0a(\u8fd9\u91cc\u6709\u4e00\u4e9b\u6545\u4e8b\u53ef\u4ee5\u5728\u4e0b\u4e00\u6b21\u8bb2\u8ff0)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e9b\u6700\u521d\u7684\u5b66\u4e60\u65f6\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u53d8\u5f97\u76f8\u5f53\u6709\u6210\u6548\uff0c\u6211\u4eec\u80fd\u591f\u4e00\u8d77\u5b66\u4e60\u3002\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u9a8c\u8bc1\uff1a\u5373\u4f7f\u5728\u8fd9\u4e2a\u65b0\u7684\u5806\u6808\u4e2d\u7ecf\u9a8c\u8f83\u5c11\uff0c\u6211\u4eec\u4e5f\u80fd\u591f\u66f4\u5feb\u5730\u6784\u5efa\u7279\u6027\u3002\u8981\u786e\u5b9a\u751f\u4ea7\u7387\u7684\u63d0\u9ad8\u6765\u81ea\u65b0\u7684\u5806\u6808\u548c\u65b0\u7684\u4ee3\u7801\u5e93\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u7eff\u5730\u9879\u76ee\uff0c\u4f46\u6211\u4eec\u6700\u7ec8\u8fd8\u662f\u505a\u5230\u4e86\u3002\n\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u4e4b\u4e00\u5c31\u662f\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u63a5\u89e6\u5230\u6570\u636e\u5e93\u7aef\u3002\u7531\u4e8e\u6211\u4eec\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u51cf\u5c11\u5b64\u5c9b\u5e76\u589e\u52a0\u6574\u4e2a\u5806\u6808\u4e2d\u5de5\u7a0b\u5e08\u7684\u8212\u9002\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u6307\u5bfc\u4e00\u4e9b\u6ca1\u6709\u6570\u636e\u5e93\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u5728\u65e9\u671f\u601d\u8003\u548c\u8bbe\u8ba1\u6211\u4eec\u9700\u8981\u7684\u5bf9\u8c61\u7684\u521d\u59cb\u6a21\u5f0f\u7684\u8fc7\u7a0b\uff0c\u7136\u540e\u6211\u4eec\u4e0e\u6574\u4e2a\u56e2\u961f\u8fdb\u884c\u8fed\u4ee3\u3002\u8fd9\u4f7f\u4ed6\u4eec\u80fd\u591f\u8003\u8651\u6570\u636e\u5e93\u65b9\u9762\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u4ed6\u4eec\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u8fd9\u6837\u505a\u4e86\uff0c\u4f46\u4ed6\u4eec\u6709\u80fd\u529b\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u51fa\u771f\u6b63\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u3002\n\u5728\u90a3\u4e4b\u540e\uff0c\u5b83\u51e0\u4e4e\u4ee5\u6211\u4eec\u51e0\u4e2a\u6708\u6765\u6700\u5feb\u7684\u53ef\u6301\u7eed\u901f\u5ea6\u8fd0\u884c\uff0c\u91cd\u5199\u4e86\u6211\u4eec\u5728\u65e7\u7248\u672c\u4e2d\u77e5\u9053\u548c\u559c\u6b22\u7684\u4e1c\u897f\uff0c\u5e76\u5728\u6211\u4eec\u8ba9\u5b83\u4eec\u66f4\u6613\u7528\u7684\u540c\u65f6\u5bf9\u5176\u8fdb\u884c\u4e86\u8c03\u6574\u3002\u6211\u4eec\u5728\u5408\u7406\u7684\u65f6\u95f4\u7ebf\u4e0a\u5efa\u9020\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u9879\u76ee\u3002\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u65e5\u7a0b\u5b89\u6392\u975e\u5e38\u4e50\u89c2\uff0c\u4e00\u76f4\u52306\u6708\u4efd\u5de6\u53f3\u6211\u4eec\u90fd\u5728\u6309\u90e8\u5c31\u73ed\u5730\u8fdb\u884c\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u548c\u66f4\u6539\u4e86\u529f\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u6ca1\u6709\u5b83\u4eec\uff0c\u65b0\u7248\u672c\u5c31\u4e0d\u4f1a\u6210\u529f\u3002\u5b83\u62d6\u6162\u4e86\u6211\u4eec\u7684\u901f\u5ea6\uff0c\u4f46\u57fa\u4e8e\u6211\u4eec\u5185\u90e8\u7814\u7a76\u4eba\u5458\u3001\u5ba2\u6237\u6210\u529f\u56e2\u961f\u548c\u4e00\u4e9b\u503c\u5f97\u4fe1\u8d56\u7684\u5ba2\u6237\u7684\u771f\u5b9e\u53cd\u9988\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002\n\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6211\u6700\u5f15\u4ee5\u4e3a\u8c6a\u7684\u4e8b\u60c5\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u90fd\u662f\u6280\u672f\u4e0a\u7684\u6210\u5c31\uff1a\n\u6211\u4eec\u620f\u5267\u6027\u5730\u58ee\u5927\u4e86\u56e2\u961f\u3002\u6211\u4eec\u6700\u521d\u67094\u540d\u4ea7\u54c1\u56e2\u961f\u5de5\u7a0b\u5e08\uff0c\u73b0\u5728\u662f9\u540d\uff0c\u8fd9\u8fd8\u4e0d\u5305\u62ec\u96c7\u4f63\u4e00\u4e2a\u5b8c\u6574\u7684QA/SDET\u56e2\u961f\uff0c\u4e3a\u6211\u4eec\u7684ML\u5de5\u7a0b\u56e2\u961f\u589e\u52a0\u4e00\u4e9b\u4eba\u5458\uff0c\u4ee5\u53ca\u96c7\u4f63DevOps\u5de5\u7a0b\u5e08\u3002\u5728\u8fd9\u79cd\u620f\u5267\u6027\u7684\u589e\u957f\u671f\u95f4\uff0c\u6211\u4eec\u4e0d\u4ec5\u907f\u514d\u4e86\u901a\u5e38\u7684\u9879\u76ee\u5ef6\u8bef\uff0c\u56e0\u4e3a\u589e\u52a0\u4e86\u4eba\u5458-\u4e0d\uff0c\u6211\u4eec\u52a0\u5feb\u4e86\u901f\u5ea6\u3002(\u6211\u8ba4\u4e3a\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7eff\u5730\u9879\u76ee\u3002)\u3002\n\u6211\u4eec\u6539\u5584\u4e86\u6574\u4e2a\u516c\u53f8\u5bf9\u5de5\u7a0b\u7684\u770b\u6cd5\u3002\u5728\u53d1\u5e03\u65b0\u529f\u80fd\u7684\u901f\u5ea6\u7a0d\u5fae\u6162\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u4ed6\u4eec\u53d1\u73b0\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u5feb\u901f\u91cd\u5199\u73b0\u6709\u7684\u4e1c\u897f\uff0c\u5e76\u770b\u5230\u65b0\u529f\u80fd\u4e5f\u5728\u5feb\u901f\u6dfb\u52a0\u3002\u6709\u4e00\u6b21\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u5f88\u9177\u7684\u6f14\u793a\uff0c\u5bf9Django\u7684Admin\u8fdb\u884c\u4e86\u73b0\u573a\u7f16\u7801\uff0c\u6f14\u793a\u4e86\u662f\u7684\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u505a\u7684\u5f88\u591a\u4e8b\u60c5\u90fd\u6bd4\u4ee5\u524d\u5feb\u5f97\u591a\u3002\u8fd9\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6f14\u793a\u5385\uff0c\u4f46\u5f88\u6709\u6548\u3002\n\u6211\u4eec\u4ece\u53ea\u6709\u51e0\u4e2a\u670d\u52a1\u7684\u9762\u5411\u670d\u52a1\u7684\u4f53\u7cfb\u7ed3\u6784\u8f6c\u53d8\u4e3a\u53ea\u4f9d\u8d56\u4e00\u4e2a\u670d\u52a1\u7684\u6574\u4f53\uff0c\u5e76\u4e14\u6211\u4eec\u4ece\u4e00\u5f00\u59cb\u5c31\u5f00\u59cb\u8bbe\u8ba1\u5bb9\u9519\u548c\u6c34\u5e73\u53ef\u4f38\u7f29\u6027\u3002\u8fd9\u5728\u4ee5\u524d\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u75db\u70b9\u3002\n\u6211\u4eec\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u8fed\u4ee3\u7684\u901f\u5ea6\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u6211\u4eec\u6709\u4e00\u4e2a\u65b0\u7684\u67b6\u6784\uff0c\u5b83\u9002\u5408\u6211\u4eec\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u5728\u5806\u6808\u4e2d\uff0c\u6bcf\u4e2a\u4eba(\u73b0\u5728)\u90fd\u5f88\u4e50\u610f\u4e3a\u4e4b\u505a\u51fa\u8d21\u732e\u3002\u6700\u68d2\u7684\u662f\uff0cML\u56e2\u961f\u73b0\u5728\u53ef\u4ee5\u800c\u4e14\u786e\u5b9e\u5076\u5c14\u4f1a\u4e3a\u6211\u4eec\u7684\u5b9e\u9645\u751f\u4ea7\u540e\u7aef\u505a\u51fa\u8d21\u732e\u3002\n\u6211\u4eec\u76f8\u4fe1\u6211\u4eec\u6210\u529f\u7684\u539f\u56e0\u6709\u51e0\u4e2a\u3002\u6211\u4eec\u8fd8\u4e86\u89e3\u5230(\u56de\u8fc7\u5934\u6765\u770b)\u6211\u4eec\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u72af\u4e86\u4e00\u4e9b\u76f8\u5f53\u5927\u7684\u9519\u8bef\u3002\n\u6211\u4eec\u4e4b\u6240\u4ee5\u6210\u529f\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u5c31\u5bf9\u6211\u4eec\u6b63\u5728\u6784\u5efa\u7684\u4e1c\u897f\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u613f\u666f(\u4e00\u4e2a\u771f\u6b63\u7684MVP\uff0c\u6211\u4eec\u77e5\u9053\u65e7\u4ea7\u54c1\u662f\u201c\u53ef\u884c\u7684\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u505a\u5230\u8fd9\u4e00\u70b9\u6216\u66f4\u5c11)\uff0c\u6211\u4eec\u6839\u636e\u9700\u8981\u7f29\u5c0f\u8303\u56f4\uff0c\u4ee5\u4fbf\u4fdd\u6301\u6e05\u6670\u7684\u76ee\u6807\u3002\u867d\u7136\u6211\u4eec\u6ca1\u6709\u201c\u6309\u65f6\u201d\u53d1\u8d27\uff0c\u4f46\u6ca1\u6709\u4eba\u53d1\u8d27\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u7528\u7f51\u666f\u7684\u957f\u5ea6\u3002\u9879\u76ee\u7684\u603b\u6301\u7eed\u65f6\u95f4\u4e0d\u5230\u6211\u4eec\u9884\u8ba1\u7684\u4e24\u500d\uff0c\u5982\u679c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u65e7\u4ea7\u54c1\u7684\u5b8c\u5168\u76f8\u540c\u7684\u526f\u672c(\u5c31\u529f\u80fd\u800c\u8a00)\uff0c\u4f46\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e9b\u66f4\u597d\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u5177\u6709\u4e00\u4e9b\u65b0\u7684\u975e\u5e38\u9700\u8981\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u4e0a\u4f20\u548c\u53d1\u9001\u89c6\u9891\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u4e0b\u8f7d\u81ea\u52a8\u751f\u6210\u7684\u5bf9\u8bddPowerPoint\u62a5\u544a\u7684\u80fd\u529b\u3002\n\u6211\u4eec\u6210\u529f\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u4e4b\u4e00\u662f\u53ca\u65e9\u5e76\u7ecf\u5e38\u83b7\u5f97\u53cd\u9988\u3002\u5728\u91cd\u5199\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u5728\u5185\u90e8\u4f7f\u7528\u8be5\u4ea7\u54c1\uff0c\u53d1\u73b0\u4e86\u4e25\u91cd\u7684\u9519\u8bef\u548c\u6027\u80fd\u95ee\u9898\u3002\u6211\u4eec\u8fd8\u5b9a\u671f\u4e3a\u6574\u4e2a\u516c\u53f8\u4e3e\u884c\u6f14\u793a\uff0c\u4ee5\u4fbf\u4ece\u5ba2\u6237\u6210\u529f\u3001\u9500\u552e\u3001\u7814\u7a76\u4ee5\u53ca\u6700\u7ec8\u4ece\u53ef\u4ee5\u5bb9\u5fcd\u5931\u8d25\u7684\u65e9\u671f\u91c7\u7528\u8005\u5ba2\u6237\u90a3\u91cc\u5feb\u901f\u83b7\u5f97\u53cd\u9988\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\u5462\uff1f\u55ef\uff0c\u6211\u4eec\u51b3\u5b9a\u91c7\u7528\u4e24\u79cd\u6211\u4eec\u4ee5\u524d\u4e0d\u5e38\u4f7f\u7528\u7684\u6280\u672f\u3002\u6211\u4eec\u4ee5\u524d\u5728\u539f\u578b\u4e2d\u4f7f\u7528\u8fc7\u6253\u5b57\u7a3f\uff0c\u4f46\u6211\u4eec\u5728\u8fd9\u65b9\u9762\u6ca1\u6709\u5f88\u6df1\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\u5b83\u8fdb\u884c\u5f97\u4e0d\u9519\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u4e0d\u76f8\u4fe1\u751f\u4ea7\u7387\u66f4\u9ad8\uff0c\u7f3a\u9677\u7387\u66f4\u4f4e\uff1b\u65f6\u95f4\u4f1a\u8bc1\u660e\u4e00\u5207\uff0c\u6211\u8ba4\u4e3a\u9759\u6001\u6253\u5b57\u8fd8\u6ca1\u6709\u5b9a\u8bba(\u5982\u679c\u6709\u4eba\u5bf9\u6b64\u6709\u660e\u786e\u7684\u7814\u7a76\uff0c\u6211\u5e0c\u671b\u60a8\u80fd\u628a\u5b83\u4eec\u5bc4\u7ed9\u6211)\u3002\u53e6\u4e00\u4e2a\u9519\u8bef\u662f\u4f7f\u7528GraphQL\u3002\u6211\u4eec\u5bf9REST\u548cRedux\u6709\u76f8\u5f53\u9ad8\u7684\u7ecf\u9a8c\uff0c\u4f46\u6211\u4eec\u4ee5\u524d\u53ea\u5728\u539f\u578b\u4e2d\u4f7f\u7528\u8fc7GraphQL\u3002\u56de\u8fc7\u5934\u6765\u770b\uff0cGraphQL\u4f7f\u6700\u521d\u7684\u539f\u578b\u5f00\u53d1\u901f\u5ea6\u66f4\u5feb\uff0c\u4f46\u8981\u4ed8\u51fa\u957f\u671f\u7684\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u5728Apollo\u4e2d\u6709\u4e00\u4e9b\u5173\u952e\u7684\u8bbe\u8ba1\u51b3\u7b56\u662f\u6211\u4eec\u4e0d\u540c\u610f\u7684(\u6bd4\u5982\u4e0d\u516c\u5f00\u5728\u524d\u7aef\u7684\u8ba2\u9605\u4e2d\u68c0\u6d4b\u65ad\u5f00/\u91cd\u65b0\u8fde\u63a5\u7684\u80fd\u529b)\uff0c\u5e76\u4e14\u6211\u4eec\u5728\u540e\u7aef\u5bf9\u5176\u8fdb\u884c\u6027\u80fd\u8c03\u4f18\u7684\u7ecf\u9a8c\u662f\u2026\u3002\u8fd9\u4e48\u8bf4\u5427\uff0c\u8fd9\u662f\u6211\u751f\u547d\u4e2d\u6781\u5177\u6311\u6218\u6027\u7684\u4e00\u4e24\u4e2a\u6708\uff0c\u6211\u518d\u4e5f\u56de\u4e0d\u6765\u4e86\u3002\u6211\u4eec\u73b0\u5728\u6b63\u5904\u4e8e\u6446\u8131GraphQL\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u6027\u80fd\u5173\u952e\u578b\u7684\u5e94\u7528\uff0c\u5feb\u901f\u8fc1\u79fb\uff0c\u800c\u5bf9\u4e8e\u66f4\u80fd\u5bb9\u5fcd\u6162\u8bf7\u6c42\u7684\u5e94\u7528\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u5c06\u7f13\u6162\u5730\u8fc1\u79fbGraphQL\u3002\n\u6700\u540e\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u91cd\u5199\u65f6\uff0c\u60a8\u7684\u56e2\u961f\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u58eb\u6c14\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u60a8\u5fc5\u987b\u79ef\u6781\u5e94\u5bf9\u8fd9\u4e00\u70b9\u3002\u4e00\u5f00\u59cb\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee\u662f\u76f8\u5f53\u4ee4\u4eba\u5174\u594b\u7684\uff0c\u4f46\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u662f\u6784\u5efa\u6211\u4eec\u5df2\u7ecf\u62e5\u6709\u7684\u529f\u80fd\u548c\u4fee\u590d\u9519\u8bef\u3002\u8fc7\u4e00\u6bb5\u65f6\u95f4\u5b83\u5c31\u4f1a\u53d8\u8584\u4e86\u3002\u770b\u5230\u6211\u7684\u56e2\u961f\u5728\u4ece\u6784\u5efa\u6211\u4eec\u5fc5\u987b\u6784\u5efa\u7684\u4e1c\u897f\u8f6c\u79fb\u5230\u63a2\u7d22\u65b0\u529f\u80fd\u65f6\u6709\u591a\u4e48\u6d3b\u8dc3\uff0c\u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\uff0c\u8fd9\u8ba9\u6211\u610f\u8bc6\u5230\u91cd\u5efa\u53ef\u80fd\u771f\u7684\u4f1a\u8ba9\u4eba\u7cbe\u75b2\u529b\u7aed\u3002\u6211\u4eec\u6210\u529f\u5730\u5b8c\u6210\u4e86\u91cd\u5efa\uff0c\u90e8\u5206\u539f\u56e0\u662f\u6211\u4eec\u5e73\u8861\u4e86\u5bf9\u65b0\u529f\u80fd\u7684\u4e00\u4e9b\u63a2\u7d22(\u6bd5\u7adf\uff0c\u6211\u4eec\u91cd\u5efa\u8fd9\u4e2a\u529f\u80fd\u662f\u6709\u539f\u56e0\u7684)\uff0c\u800c\u53ea\u662f\u5c06\u6211\u4eec\u7684\u65e7\u4ee3\u7801\u76f4\u63a5\u79fb\u690d\u5230\u65b0\u5e73\u53f0\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7edd\u5bf9\u53ef\u4ee5\u66f4\u597d\u5730\u5e73\u8861\u8fd9\u4e00\u70b9\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u5c06\u91cd\u70b9\u786e\u4fdd\u6211\u4eec\u6709\u4e00\u4e2a\u65e9\u671f\u7684\u963f\u5c14\u6cd5\u6d4b\u8bd5\u8ba1\u5212\uff0c\u6709\u51e0\u4e2a\u503c\u5f97\u4fe1\u8d56\u7684\u5ba2\u6237\uff0c\u4ee5\u83b7\u5f97\u5b9a\u671f\u7684\u53cd\u9988\u548c\u9f13\u52b1\uff0c\u5e76\u4fdd\u6301\u6bcf\u4e2a\u4eba\u5bf9\u91cd\u5efa\u7684\u5174\u594b\u3002\u6211\u4e5f\u4f1a\u786e\u4fdd\u6211\u4eec\u5728\u65e9\u671f\u52a0\u5165\u4e86\u5927\u91cf\u7684\u65b0\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4e00\u65e6\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u4eba\u90fd\u6709\u70b9\u7d2f\u4e86\u5c31\u5f00\u59cb\u5de5\u4f5c\u3002\u6709\u4e9b\u5355\u8c03\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u4f46\u4f60\u53ef\u4ee5\u51cf\u8f7b\u5b83\u3002\n\u6839\u636e\u6211\u5728\u8fd9\u91cc\u7684\u7ecf\u9a8c\uff0c\u4f60\u53ef\u80fd\u662f\u2026\u3002\u4e0d\u5e94\u8be5\uff0c\u5982\u679c\u4f60\u76f8\u4fe1\u6539\u5199\u4ece\u6765\u90fd\u4e0d\u662f\u6b63\u786e\u7684\u51b3\u5b9a\u7684\u7092\u4f5c\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u4f60\u5e94\u8be5\u9ed8\u8ba4\u201c\u4e0d\u201d\u7684\u7acb\u573a\uff0c\u7136\u540e\u5728\u5fc5\u8981\u7684\u65f6\u5019\u975e\u5e38\u975e\u5e38\u52aa\u529b\u5730\u8bc1\u660e\u5b83\u662f\u5408\u7406\u7684\u3002\n\u5982\u679c\u60a8\u7684\u4f53\u7cfb\u7ed3\u6784\u6216\u6a21\u5f0f\u4e0e\u60a8\u7684\u9700\u8981\u4e25\u91cd\u8131\u8282\uff0c\u5e76\u4e14\u6ca1\u6709\u660e\u786e\u7684\u8fc1\u79fb\u8def\u5f84\uff0c\u56e0\u4e3a\u589e\u91cf\u66f4\u65b0\u4f53\u7cfb\u7ed3\u6784\u6216\u6a21\u5f0f\u5c06\u975e\u5e38\u56f0\u96be\u3002\n\u5982\u679c\u60a8\u5f53\u524d\u7684\u6280\u672f\u5806\u6808\u9650\u5236\u4e86\u8bb8\u591a\u5de5\u7a0b\u5e08\u7684\u8d21\u732e\uff0c\u5e76\u4e14\u5728\u6280\u672f\u5806\u6808\u4e2d\u5bf9\u4ed6\u4eec\u8fdb\u884c\u57f9\u8bad\u4e0d\u662f\u4e00\u79cd\u9009\u62e9\u3002\n\u5373\u4f7f\u4f60\u505a\u5230\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u4f60\u4e5f\u5fc5\u987b\u8003\u8651\u5546\u4e1a\u73b0\u5b9e\uff0c\u4ee5\u53ca\u8fd9\u5bf9\u4f60\u7684\u516c\u53f8\u3001\u4f60\u7684\u56e2\u961f\u662f\u5426\u6709\u610f\u4e49\u3002\n\u53ef\u80fd\u6709\u66f4\u591a\u7684\u573a\u666f\u53ef\u4ee5\u8bc1\u660e\u91cd\u5199\u662f\u5408\u7406\u7684\u3002\u8bc1\u660e\u5b83\u662f\u6b63\u786e\u7684\u662f\u56f0\u96be\u7684\uff0c\u4f46\u5b83\u662f\u503c\u5f97\u7684\uff0c\u5b83\u53ef\u4ee5\u6210\u529f\u5730\u5b9e\u73b0\u3002", "note_en": "There\u2019s a famous blog post by Joel Spolsky where he asserts that you should  never rewrite a codebase from scratch. He cites the example of Netscape, where they spent years rewriting their software and their company ultimately died in the process. A little over a year ago, I reread that post, and I still lent my vote to rewriting our application  from scratch. In its entirety. Here\u2019s why we did that, how we were successful, and some heuristics on whether or not you should do the same.\n Our story starts in January 2019. Remesh was a much smaller company then. We had recently hired a few engineers and we had 5 engineers focused on the product, and a handful of engineers focused on machine learning (ML) or DevOps. Despite recently hiring these engineers, our velocity was still painfully low. Simple features took a long time to add. We had a lot of bugs in the product that we simply acknowledged as \u201cknown\u201d and did not fix. And the product as a whole looked like it had not changed significantly in a while.\n It\u2019s important to understand why we had those problems. We hypothesized (and after the rewrite, validated) that the problem was not our people: we had hired great engineers. The problems were largely our codebase and our process. The legacy codebase we were working in was ill-suited to both the skillset of our team and to the problems we were solving, and our process encouraged and relied on siloed knowledge: there was no \u201cfull-stack\u201d at Remesh.\n  Our legacy application was originally designed for something very different from what it\u2019s used for now. Originally, Remesh let users hold two-way conversations between either entire groups or an individual and a group. For example, you could have Democrats and Republicans each talk to each other to understand each other and find common ground. Or, you could have the mayor of a town talk to their citizens to better understand what they needed, believed, and wanted. However, as we found product-market fit, the use-case changed. We leaned into a singular moderator talking to a group of people.\n As a consequence of this change, certain old design decisions no longer made sense, and the schema needed major changes. Beyond the database issues, our codebase itself was pretty hard to understand because features had been bolted on without much major refactoring. We had very poor test coverage in the areas most in need of refactoring because they were the oldest code, written before we established good test practices.\n Beyond all that, the languages and frameworks were were using did not work for our team. The backend codebase was written in Elixir, which few of our developers knew very well. One of the frontend codebases was written in an abysmally old version of Angular (I don\u2019t want to go check what it is, I might cry), and we had  two other frontends which were in React. Few of our engineers were comfortable in one, let alone all three. The languages and frameworks in use did not suit our team or our problem, and this slowed us down quite a bit.\n  At that point, we knew that our codebase needed a major change. There are really three options when you\u2019re left with a pile of code in front of you that\u2019s hard to work with:\n  For the frontend, refactoring was not really an option. Our version of Angular was old enough that, unfortunately, we did not really have any clear upgrade path to a modern version of Angular (and we didn\u2019t  want to be on  any version of Angular, frankly). And since we anticipated major changes to the UI and the API, a refactor would not be feasible. So on the frontend, we were left either rewriting it in one fell swoop, or rewriting it piecemeal.\n The backend had a few problems we wanted to solve \u2014 our schema, language, and codebase did not fit the problem we were solving anymore. We used Elixir for its massive concurrency support, but we never ended up needing this and it only bit us: the way concurrency is handled in the Erlang VM made profiling very difficult, because you know what is being computed but not where it\u2019s being called  from \u2014 good luck with performance tuning. The Elixir codebase also limited how much our ML engineers could contribute to the backend codebase: they worked in Python every day and did not have the time to dive deep into Elixir. Long story short, we wanted to move off of Elixir and move onto Python because then our entire team could contribute, the language would support the problems, and we would have an easier time profiling the code.\n We also had some \u201cproduct debt\u201d where we had introduced concepts to existing customers that they learned and grew attached to but which might not be ideal in the end. They\u2019re local extrema. If we were going to break out of that local max and make something much better, we might have to do it with one big leap, where smaller iterations could meet pushback from users. Removing those concepts in required doing many things all at once.\n At the end of the day, our case for rewriting really boiled down to this confluence of factors:\n We wanted every member of our team to be able to contribute to the backend codebase, and Python fit the bill for being both easy to learn as well as having wide adoption already within our team.\n Our old codebase was so brittle and low on tests that refactoring it would be an arduous process.\n We could gain efficiency by moving to a strongly opinionated framework like Django, with lots of time-saving defaults as well (like Django Admin).\n We would have the opportunity to make a completely new version influenced by what we learned from customers and could then manage the transition to the new version rather than fighting a battle for 12 months with lots of customers on every change. This also made training our customer success team and sales teams a one-time batch effort at the end, rather than a continuous reintroduction of new concepts.\n To get to this decision, we did pretty extensive planning. We can talk about agile this and lean that all day, but this was one case to actually do a waterfall style plan \u2014 not because we were going to implement it waterfall style, but to figure out what the level of effort would be for each of these options. It became pretty apparent pretty quickly that rewriting the application wholesale would take time, but that refactoring it or piecemeal rewriting it would take  much longer, it had much,  much higher uncertainty around it. If we went the refactoring route, we would be risking far more.\n At the end of this, we were pretty confident in our decision, and we had buy-in from all levels of the organization. We were set on rewriting, because it would let us fix mistakes from years in the past, and it would let us demonstrably move the product forward at the same time.\n   We started the rewrite in February, 2019, after planning out what features we would need to include for feature parity with the existing platform as part of a due diligence effort to make sure this  was the right path. So we had a really solid plan around specifically what we were building. It goes against the dogma of agile (or is it Agile? \ud83e\udd14) but having a plan that we were willing to deviate from helped guide us along the way and see if we were on track of not. We did end up deviating quite a bit as we tested with users (internal and then eventually some external customers) but more on that later.\n The actual process of building the new version was pretty smooth after a bumpy start. It was painful for everyone switching into a new tech stack. While we picked Python for full-team accessibility, there were still those among us who needed to learn it. And none of our backend or fullstack engineers knew Django at the outset (while our lead frontend engineer had deep familiarity with it). Similarly on the frontend, many of us knew React but few of us had deep experience with TypeScript, which we also chose to migrate to (this has some stories for another time). That said, after we had some initial learning time, we all got pretty productive pretty quickly and we were able to learn together. That was our first bit of validation:  even with less experience in this new stack, we were able to build features far more quickly. It would take longer to be sure that the productivity gains were from the new stack and new codebase, rather than this simply being a greenfield project, but we got there eventually.\n One of the first things we did was get everyone exposed to the database side. Since one of our goals was to reduce siloing and increase our engineers\u2019 comfort across the whole stack, we guided some of our frontend developers who had little experience with database design through the process of thinking about and designing an initial schema for the objects we\u2019d need early on, which we then iterated on with the whole team. This empowered them to think about the database side. Even though they hadn\u2019t been doing this for a while, they were capable of it and could ask really challenging questions.\n After that, it was pretty much running at our fastest  sustainable pace for months, rewriting things we knew and loved in the old version, and tweaking things as we went to make them more usable. We built a really good project on a  reasonable timeline. We were on a very optimistic schedule at the beginning, which we were on track for up until about June. At that point, we added and changed features, because we knew the new version wouldn\u2019t be successful without them. It slowed us down, but it was necessary based on real feedback from our internal researchers, customer success team, and a few trusted clients.\n Throughout this, we achieved some of the things I\u2019m most proud of, which are not all technical achievements:\n We grew the team dramatically. We started with 4 product team engineers and we are now at 9, which doesn\u2019t even include hiring a full QA/SDET team, staffing up our ML engineering team a bit, and hiring DevOps engineers. And during that dramatic growth, we didn\u2019t just avoid the usual project delays from adding people \u2014 no, we  sped up. (I think this is largely because it was a greenfield project.)\n We improved how engineering was perceived throughout the company. After a while of being a little slow on shipping new features, they saw that we could at the very least rewrite existing things quickly and saw new features getting added quickly as well. We did a cool demo one time where we live-coded an addition to Django\u2019s Admin to demonstrate that yes, there are a lot of things we can do now that are much faster than before. It was a little demo theater, but it was effective.\n We moved from a service-oriented architecture with a few services to a monolith with just one service it relies on, and we got to design for fault tolerance and horizontal scalability from the outset. This was a big pain point before.\n We improved the speed of iteration dramatically, in large part by having a fresh architecture that fits our problem and is in a stack that everyone is (now) pretty comfortable contributing to. Best of all, the ML team now can and does occasionally contribute to our actual production backend.\n  We believe we were successful for a few reasons. And we also learned (in retrospect) that we made some pretty big mistakes in the process.\n We were successful because we started with a clear vision of what we were building (a true MVP, where we knew the old product was \u201cviable\u201d, so we had to get to that or  less), and we cut scope as we needed in order to stay with a clear end in sight. While we didn\u2019t ship \u201con time\u201d, no one does, we didn\u2019t go to Netscape lengths with it. The total project duration was less than twice the time we projected it would take if we built an  exact copy (in terms of features) of the old product, but we ended up with something that was much better and had some new much-desired features, like the ability to upload and send videos and the ability to download an automatically generated PowerPoint report of your conversation.\n One of the other keys for our success was getting feedback early and often. During the rewrite, we used the product internally very often, discovering critical bugs and performance issues. We also held regular demos for the whole company to get feedback quickly from customer success, sales, research, and eventually from early adopter customers who could tolerate failures.\n So, where did we go wrong? Well, we decided to lean into two technologies that we hadn\u2019t used much before. We\u2019d used TypeScript in a prototype previously, but we didn\u2019t have deep expertise on it. It went okay, but we\u2019re still not convinced that productivity is higher and the rate of defects is lower; time will tell, and I think the jury is still out on static typing (if anyone has definitive studies on this, I\u2019d love if you sent them to me). The other mistake was using GraphQL. We had pretty high levels of experience with REST and Redux, but we had only used GraphQL in a prototype before. In retrospect, GraphQL made the initial prototyping much faster, but at long-term expense, because there are some critical design decisions in Apollo that we don\u2019t agree with (such as not exposing the ability to detect disconnects/reconnects in subscriptions on the frontend) and our experience of performance tuning it on the backend was\u2026 let\u2019s just say it was a challenging month or two of my life that I\u2019ll never get back. We are now in the process of moving off GraphQL, quickly for performance-critical things and slowly over time for things that are more tolerant to slow requests.\n The last thing to note is that in a rewrite, your team will suffer and morale will suffer, and you have to actively deal with that. It\u2019s pretty exciting at first to start a new project, but then the rest of it is building features we  already had and fixing bugs. It wears thin after a while. It was pretty amazing to see how animated my team was once we moved from building exactly what we had to exploring new features, and it made me realize how draining a rebuild can really be. We made it through the rebuild, and part of that was that we balanced some exploration of new features (we were rebuilding this for a reason, after all) with just directly porting our old code to the new platform. That said, we definitely could have balanced this better. Next time, I would focus on making sure we had an earlier alpha-testing program with several trusted customers to get regular feedback and encouragement and keep everyone excited about the rebuild. I would also make sure that we mixed in a good amount of new features early on, rather than working them in once we noticed everyone was getting a little tired. Some monotony is unavoidable, but you can mitigate it.\n  Based on my experience here, you probably\u2026 shouldn\u2019t, if you buy the hype that rewriting is never the right decision. At any rate, you should default to the \u201cno\u201d position and then work very very hard to justify it if it\u2019s necessary.\n  If your architecture or schema are severely out of alignment with what you need and there\u2019s no clear migration path because incrementally updating the architecture or schemas would be exceedingly difficult\n  If your current tech stack is limiting a lot of your engineers from contributing, and training them in the tech stack isn\u2019t an option\n Even if you hit all these, you have to consider business realities and whether it makes sense for your company, your team.\n There might be more scenarios where a rewrite is justified. Justifying it is hard, but it can be worth it, and it can be pulled off successfully.", "posttime": "2020-06-03 01:50:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cd\u6784,refactor,\u91cd\u5199", "title": "\u91cd\u6784\u4e0e\u91cd\u5199", "title_en": "Refactor vs. Rewrite", "transed": 1, "url": "https://remesh.blog/refactor-vs-rewrite-7b260e80277a", "via": "", "real_tags": ["\u91cd\u6784", "refactor", "\u91cd\u5199"]}, {"category": "", "categoryclass": "", "imagename": "6d27e53aedbbc7a8f6bd2e4dfa8da582.jpg", "infoid": 1004865, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efaXbox\u673a\u5668\u4eba\u624b\u81c2\u662f\u6211\u770b\u5230Kevin Drouglzet\u7684\u5e16\u5b50\u540e\u4e00\u76f4\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u4ed6\u80fd\u591f\u4f7f\u7528Xbox\u63a7\u5236\u5668\u548c\u4ed6\u81ea\u5df1\u521b\u5efa\u7684\u624b\u81c2\uff0c\u5e76\u4e14\u975e\u5e38\u53cb\u597d\u5730\u53d1\u5e03\u4e86Xbox\u673a\u5668\u4eba\u624b\u81c2\u7684\u8bbe\u8ba1\u6587\u4ef6(\u6211\u7edd\u5bf9\u4e0d\u662f\u786c\u4ef6\u8bbe\u8ba1\u5e08\ud83d\ude05)-\u8c22\u8c22\u51ef\u6587\uff01\n\u6211\u60f3\u8fd9\u6837\u505a\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u5e0c\u671b\u5728\u5f3a\u5316\u5b66\u4e60\u9886\u57df\u6709\u66f4\u591a\u7684\u5b9e\u8df5\u77e5\u8bc6\u548c\u5b9e\u8df5\u7ecf\u9a8c\u3002\u56e0\u4e3a\u6709\u4e86\u8fd9\u4e2a\u673a\u5668\u4eba\u624b\u81c2\uff0c\u6211\u770b\u5230\u4e86\u5b66\u4e60\u7269\u7406\u52a8\u4f5c\u63a7\u5236\u7684\u6f5c\u529b\uff0c\u8fd9\u5c06\u8f6c\u5316\u4e3a\u865a\u62df\u7684\u4e16\u754c\u53d8\u5316\uff0c\u6253\u5f00\u4e86\u4f7f\u7528\u6848\u4f8b\u7684\u53ef\u80fd\u6027\u9886\u57df\u3002\n\u4e3a\u4e86\u8ba9\u8fd9\u7bc7\u6587\u7ae0\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u51b3\u5b9a\u5bf9\u591a\u7bc7\u6587\u7ae0\u8fdb\u884c\u6df1\u5165\u62a5\u9053\u3002\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e2a\u673a\u68b0\u81c2\u5ef6\u4f38\u90e8\u5206\u662f\u5982\u4f55\u6784\u5efa\u7684\uff0c\u4ee5\u53ca\u5f53\u60a8\u4f7f\u7528\u5de6\u4fa7\u62c7\u6307\u6746\u79fb\u52a8\u65f6\uff0c\u5982\u4f55\u4f7f\u673a\u68b0\u81c2\u63a7\u5236\u53f3\u4fa7\u7684\u7ba1\u6746\u3002\u800c\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u5c06\u66f4\u6df1\u5165\u5730\u8bb2\u8ff0\u6211\u4eec\u5982\u4f55\u80fd\u591f\u5229\u7528\u7edf\u4e00\u73af\u5883\uff0c\u5e76\u8bad\u7ec3\u5b83\u6700\u7ec8\u7531\u673a\u68b0\u81c2\u63a7\u5236\u3002\n\u6ce8\u610f\uff1a\u770b\u5230Kevin\u5728\u4ed6\u7684\u5e16\u5b50\u4e2d\u5f88\u597d\u5730\u89e3\u91ca\u4e86\u7a0b\u5e8f\u96c6\uff0c\u6211\u51b3\u5b9a\u7f29\u77ed\u8fd9\u4e00\u90e8\u5206\uff0c\u5728\u672c\u8282\u4e4b\u540e\u5c06\u66f4\u591a\u7684\u91cd\u70b9\u653e\u5728\u8f6f\u4ef6\u4e0a\u3002\n\u8ba9\u6211\u4eec\u4ece\u8fd9\u4e2a\u6784\u5efa\u6240\u9700\u7684\u90e8\u5206\u5f00\u59cb\u3002\u6211\u603b\u5171\u4e3a\u8fd9\u4e2a\u7248\u672c\u652f\u4ed8\u4e86\u5927\u7ea675.00\u7f8e\u5143(\u6ca1\u6709Xbox\u63a7\u5236\u5668\u7684\u8bdd\u662f20.00\u7f8e\u5143)\u3002\n\u5bf9\u4e8e\u6253\u5370\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u63d0\u4f9b\u7684STL\u6587\u4ef6\u5e76\u5c06\u5176\u52a0\u8f7d\u5230\u6211\u4eec\u76843D\u6253\u5370\u8f6f\u4ef6\u4e2d\u3002\n\u6ce8\uff1a\u6b64\u4e3a\u767d\u8272\u91cd\u5370\uff0c\u7528\u4e8e\u4e2a\u4eba\u9020\u578b\u3002\u6211\u8981\u5411\u6211\u7684\u540c\u4e8b\u8fed\u6208\u00b7\u7279\u91cc\u5947\u4e9a\u96f7\u5229\u548c\u5361\u91cc\u59c6\u00b7\u74e6\u65af\u5927\u58f0\u558a\u4e00\u58f0\uff0c\u611f\u8c22\u4ed6\u4eec\u5e2e\u6211\u6253\u5370\uff01\n\u6253\u5370\u5b8c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8fd9\u4e9b\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u8fd9\u5f88\u7b80\u5355\uff0c\u51ef\u6587\u89e3\u91ca\u5f97\u5f88\u597d\u3002\n\u73b0\u5728\u6211\u4eec\u7684\u786c\u4ef6\u5df2\u7ecf\u7ec4\u88c5\u597d\u4e86\uff0c\u6211\u4eec\u51c6\u5907\u5f00\u59cb\u5728\u8fd9\u4e2a\u7f8e\u666f\u4e0a\u5b89\u88c5\u8f6f\u4ef6\u4e86\uff01\n\u6211\u4eec\u60f3\u8981\u901a\u8fc7\u5229\u7528\u5de6\u624b\u6307\u6746\u7684\u8f93\u5165\u6765\u5b9e\u73b0\u673a\u68b0\u81c2\u7684\u79fb\u52a8\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u53d1\u9001\u5230\u6211\u4eec\u7684\u8ba1\u7b97\u673a\uff0c\u800c\u8ba1\u7b97\u673a\u53c8\u4f1a\u5c06\u6570\u636e\u53d1\u9001\u56de\u63a7\u5236\u7535\u673a\u7684Arduino\u3002\n\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u91c7\u53d6\u884c\u52a8\u7684\u884c\u52a8\u903b\u8f91\u653e\u5728Arduino\u4e0a\uff0c\u5b83\u5c06\u6839\u636e\u4ece\u89c2\u5bdf\u72b6\u6001\u6536\u5230\u7684\u8f93\u5165\u6765\u51b3\u5b9a\u91c7\u53d6\u54ea\u4e2a\u884c\u52a8\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8fde\u63a5Xbox\u63a7\u5236\u5668\u5e76\u5f00\u59cb\u4ece\u5b83\u63a5\u6536\u6570\u636e\u3002\u8fd9\u5728Windows\u4e0a\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4efb\u52a1\uff0c\u56e0\u4e3a\u5f88\u96be\u627e\u5230\u5141\u8bb8\u6211\u4eec\u8fd9\u6837\u505a\u7684\u6700\u65b0\u5e93\u3002\u8fd9\u5c31\u662f\u6211\u51b3\u5b9a\u4f7f\u7528\u6d4f\u89c8\u5668API\u7684\u539f\u56e0\uff0c\u60a8\u53ef\u4ee5\u5728\u65e9\u5148\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u627e\u5230\uff1a\u901a\u8fc7Node.js\u83b7\u53d6Xbox\u63a7\u5236\u5668\u8f93\u5165\u3002\n\u5f53\u6211\u4eec\u5173\u6ce8\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8bfb\u53d6\u62c7\u6307\u68d2\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5206\u522b\u653e\u5165UP_DOWN\u548cLEFT_RIGHT\u53d8\u91cf\u4e2d\u3002\nconst GameController=Required(&#39\uff1b./GameController&#39\uff1b)\uff1b(Async()=&gt\uff1b{const gameController=new(100)\uff1b//100ms\u8f6e\u8be2\u95f4\u9694\u7b49\u5f85GameController\u3002init()\uff1bgameController\u3002\u5728(&#39\uff1b\u6309\u94ae&#39\uff1b\uff0c(Btn)=&gt\uff1b\u63a7\u5236\u53f0\u4e0a\u3002log(`Button\uff1a${btn}\u6309\u4e0b`))gameController\u3002\u5728(&#39\uff1b\u62c7\u6307\u68d2&#39\uff1b\uff0cAsync(Val)=&gt\uff1b{let valParsed=JSON.\u3002parse(Val)\uff1blet up_down=valParsed[1]\uff1blet Left_right=valParsed[0]\uff1bConsole\u3002log(`up_down\uff1a${valParsed[1]}|LEFT_RIGHT\uff1a${valParsed[0]}`)\uff1b})})()\uff1b\n\u5728\u5f00\u59cb\u4ea4\u6362\u6570\u636e\u548c\u7f16\u7a0bArduino\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u505a\u7684\u53e6\u4e00\u4ef6\u4e8b\u662f\u8fde\u63a5Node.js\uff0c\u4ee5\u4fbf\u5b83\u80fd\u591f\u4ea4\u6362\u6570\u636e\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3aSerialport\u7684\u4f18\u79c0\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7NPM install seralport\u5b89\u88c5\u5b83\u3002\n\u4e00\u65e6\u5b89\u88c5\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6211\u4eec\u60f3\u8981\u7684\u914d\u7f6e\u5b9e\u4f8b\u5316\u5bf9\u8c61\u6765\u6253\u5f00\u8fde\u63a5Arduino\u7684COM\u7aef\u53e3\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\uff0c\u6211\u4eec\u7b49\u5f85\u4e00\u4e2a\u6253\u5f00\u4e8b\u4ef6\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u5229\u7528port.write(Data)\u547d\u4ee4\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fa6\u542cData\u4e8b\u4ef6\u6765\u63a5\u6536\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u4e8b\u4ef6\u8bb0\u5f55\u5230\u63a7\u5236\u53f0\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u63a5\u6536\u7684\u662f\u5b57\u8282\uff0c\u56e0\u6b64\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u4e3a\u901a\u8fc7ab2str\u51fd\u6570\u5b9e\u73b0\u7684\u5b57\u7b26\u4e32\u3002\nConst SerialPort=Required(&#39\uff1bSerialPort&#39\uff1b)\uff1bConst GameController=Required(&#39\uff1b./GameController&#39\uff1b)\uff1bConst Port=NEW(&#39\uff1bCOM6&#39\uff1b\uff0c{baudRate\uff1a38400\uff0cParity\uff1a&#39\uff1bNone&#39\uff1b\uff0cstopBits\uff1a1\uff0cFlowControl\uff1aFalse})\uff1b\u51fd\u6570ab2str(Buf){\u8fd4\u56de\u5b57\u7b26\u4e32\u3002FromCharCode\u3002Apply(null\uff0cnew(Buf))\uff1b}\u7aef\u53e3\u3002\u5728(&#39\uff1b\u6253\u5f00&#39\uff1b\uff0c\u5f02\u6b65()=&gt\uff1b{\u63a7\u5236\u53f0\u3002log(&#34\uff1b\u7aef\u53e3\u6253\u5f00\uff0c\u7b49\u5f85\u91cd\u7f6e&#34\uff1b)\uff1b//Arduino\u5728\u83b7\u5f97\u4e32\u884c\u8fde\u63a5\u65f6\u81ea\u52a8\u91cd\u7f6e//\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u53d1\u9001setTimeout(async()=&gt\uff1b{console.\u3002\u65e5\u5fd7(&#34\uff1b\u91cd\u7f6e\u5b8c\u6210&#34\uff1b)\uff1b}\uff0c3000)\uff1b})\uff1b\u7aef\u53e3\u3002\u5728(&#39\uff1b\u6570\u636e&#39\uff1b\uff0c(\u6570\u636e)=&gt\uff1b\u63a7\u5236\u53f0\u4e0a\u3002log(ab2str(Data))\uff1b\n\u5728\u6211\u4eec\u5f00\u59cb\u5bf9Arduino\u8fdb\u884c\u7f16\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u4ea4\u6362\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4e32\u884c\u8fde\u63a5\u3002\n\u6765\u81eaXbox\u63a7\u5236\u5668\u7684\u503c\u4ee5\u6d6e\u70b9\u5f62\u5f0f\u5230\u8fbe\uff0c\u5176\u4e2d\u6211\u4eec\u9700\u8981\u8868\u793a\u5411\u4e0a\u3001\u5411\u4e0b\u548c\u5411\u5de6\u3001\u5411\u53f3\u65b9\u5411\u7684\u503c\u4e2d\u76842\u4e2a\u3002\n\u5728Javascript\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u4e32\u53e3\u5e93\u53d1\u9001Uint8Array\u3002\u56e0\u6b64\uff0c\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d6\u53d8\u91cf\u5e76\u5c06\u5176\u4ecesrc\u7c7b\u578b\u8f6c\u6362\u4e3a\u76ee\u6807\u7c7b\u578b\u3002\u5728Javascript(64\u4f4d)\u4e2d\uff0c\u4e00\u4e2a\u6d6e\u70b9\u8868\u793a8\u4e2a\u5b57\u8282\uff0c\u4f46\u662fArduino\u9700\u89814\u4e2a\u5b57\u8282\u3002\u901a\u8fc7\u5c06\u53d8\u91cf\u5305\u88c5\u5728Float32Array\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6b64\u7c7b\u578b\u8f6c\u6362\u4e3a4\u5b57\u8282\u3002\n\u73b0\u5728\u8981\u5c06\u5176\u53d1\u9001\u5230Arduino\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6b64Float32Array\u8f6c\u6362\u4e3aUint8Array\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51fd\u6570\u8f7b\u677e\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\n//\u5c06src\u8f6c\u6362\u4e3a\u76ee\u6807//\u793a\u4f8b\uff1aConvertTypedArray(new Float32Array([1.00])\uff0cUint8Array)\uff1b\u51fd\u6570ConvertTypedArray(src\uff0ctype){let buffer=new(src.byteLength)\uff1blet baseView=new(Buffer)\u3002set(Src)\uff1breturn new(Buffer)\uff1b}\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7port.write()\u65b9\u6cd5\u901a\u8fc7\u4e32\u884c\u8fde\u63a5\u7acb\u5373\u53d1\u9001\u3002\u4f46\u662f\uff0c\u5728\u6267\u884c\u6b64\u64cd\u4f5c\u4e4b\u524d\uff0c\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u786e\u4fdd\u53ef\u4ee5\u53d1\u9001\u65b0\u503c(\u4ee5\u907f\u514d\u8fc7\u8f7d)\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7port.drain()\u51fd\u6570\u6765\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7f16\u5199\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5141\u8bb8\u6211\u4eec\u5199\u5165AndDrain\u4ee5\u6210\u529f\u53d1\u9001\u4e00\u6761\u6d88\u606f\uff1a\n\u5bf9\u4e8e\u6211\u4eec\u7684\u963f\u675c\u4f0a\u8bfa\u6765\u8bf4\uff0c\u8fd9\u6709\u70b9\u590d\u6742\u3002\u6211\u4eec\u9700\u8981\u63a5\u6536\u6570\u636e\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fdd\u5b58\u5b83\uff0c\u4f46\u662f\u8fd9\u4e9b\u6570\u636e\u662f\u4ee5\u5b57\u8282\u800c\u4e0d\u662f\u5168\u6d6e\u70b9\u6570\u7684\u5f62\u5f0f\u4f20\u5165\u7684\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6280\u5de7\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u8bfb\u53d6\u4f20\u5165\u7684\u5b57\u8282\u5e76\u5c06\u5b83\u4eec\u590d\u5236\u5230\u7ed3\u6784\u4e2d\u3002\u5141\u8bb8\u6211\u4eec\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u8f93\u5165\uff1a\ntyecif struct{Float Up_Down\uff1b//Up|Down\u503c[-1\uff0c1]Float Left_Right\uff1b//Left|Right Value[-1\uff0c1]}InputThumbtick\uff1b\n\u65e0\u6548\u8bbe\u7f6e(){\u5e8f\u5217\u53f7\u3002Begin(38400)\uff1b}void loop(){char buffer[sizeof(InputThumbStick)]\uff1bIF(Serial.\u3002Available()&gt\uff1b=sizeof(InputThumbtick)){\u4e32\u884c\u3002readBytes(buffer\uff0csizeof(InputThumbtick))\uff1bmemcpy(&amp\uff1binThumbticks\uff0c&amp\uff1bbuffer\uff0csizeof(InputThumbtick))\uff1b}}\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u6839\u636e\u4f20\u5165\u7684\u503c\u79fb\u52a8\u4f3a\u670d(\u6c34\u5e73\u548c\u5782\u76f4)\u3002\u5728\u5b9e\u9645\u7f16\u5199\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u5fc5\u987b\u8003\u8651\u5982\u4f55\u9009\u62e9\u6b63\u786e\u7684\u503c\uff0c\u56e0\u4e3a\u6587\u6863(Servo.h&amp\uff1b&amp\uff1bServo.h writeMicrosec)\u8bf4\u660e\u5e94\u8be5\u9009\u62e9\u4ecb\u4e8e[1000,2000]\u4e4b\u95f4\u7684\u503c\u3002\n\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e2a\u8303\u56f4\u662f[1200,1800]\uff0c1500\u662f\u4e2d\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981180\u5ea6\u3002\n\u5c06\u5176\u8f6c\u6362\u53ef\u4ee5\u4e0e\u89c4\u683c\u5316\u4f3a\u670d\u503c\u76f8\u6bd4\u8f83\u3002\u4f46\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728[0\uff0c1]\u4e4b\u95f4\u8fdb\u884c\u89c4\u683c\u5316\uff0c\u800c\u662f\u4f1a\u89c4\u683c\u5316\u5230[-1\uff0c1]\u3002\u5177\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a\nX n\u6216rm=X\u2212X m i n X m a x\u2212X m i n XNorm=\\FRAC{X-Xmin}{xmax-Xmin}X n\u6216rm=X m a x\u2212X m i n X\u2212X m i n\u200b\nX s c a l e d=2\u2217X n o r m\u22121 X\u7f29\u653e=2*XNorm-1 X s c a l e d=2\u2217X n o r m\u22121\u3002\nX s c a l e d=(2\u2217X\u2212X m i n X m a x\u2212X m I n X Scaled=(2*\\FRAC{X-Xmin}{xmax-Xmin}X s c a l e d=(2\u2217X m a x\u2212X m i n X\u2212X m I n\u200b)-1\u3002\nX=((X s c a l e d+1 2)\u2217(X m a x\u2212X m i n))+X m i n X=((\\frac{X\u7f29\u653e+1}{2})*(x\u6700\u5927-X\u6700\u5c0f))+X min X=((2 X s c a l e d+1\u200b)\u2217(X m a x\u2212X m i n)+X m i n\u3002\nint inputToServoValue(Float In\uff0cint Xmin\uff0cint xMax){in=in*-1\uff1b//\u53cd\u53f7return(Int)(in+1)/2)*(xmax-xmin))+Xmin)\uff1b}\u3002\n\u5728\u4e0b\u9762\uff0c\u60a8\u5c06\u80fd\u591f\u627e\u5230\u6700\u7ec8\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7528\u4e8e\u5b9e\u73b0\u57fa\u4e8e\u5de6\u4fa7\u62c7\u6307\u68d2\u8f93\u5165\u7684\u79fb\u52a8\u673a\u68b0\u81c2\u3002\u6211\u52aa\u529b\u4f7f\u8fd9\u6bb5\u4ee3\u7801\u5c3d\u53ef\u80fd\u5e72\u51c0\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u5728\u5176\u4ed6\u9879\u76ee\u4e2d\u91cd\u7528\u3002\n\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5e0c\u671b\u5c06\u6b64\u9879\u76ee\u7528\u4e8e\u5f3a\u5316\u5b66\u4e60\u7528\u4f8b\uff0c\u4f46\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8be5\ud83d\ude09\u3002\n#include&lt\uff1bServo.h&gt\uff1bServo Vertical\uff1b//Servo\u505a\u5782\u76f4\u79fb\u52a8Servo\u6c34\u5e73\u79fb\u52a8\uff1b//Servo\u505a\u6c34\u5e73\u79fb\u52a8\u7c7b\u578b\u5b9a\u4e49f struct{Float Up_Down\uff1b//Up|Downvalue[-1\uff0c1]Float Left_Right\uff1b//Left|Right Value[-1\uff0c1]}InputThumbtick\uff1bInputThumbticks in Thumbticks\uff1b//Startup void setup(){\u4e32\u884c.\u3002\u5f00\u59cb(38400)\uff1b\u5e8f\u5217\u53f7\u3002println(&#34\uff1b\u6b64\u7a0b\u5e8f\u9700\u89812\u4ef6\uff1a&#34\uff1b)\uff1b\u5e8f\u5217\u53f7\u3002println(&#34\uff1b[U|D\uff0cL|R]\uff0c\u8303\u56f4[1\uff0c0]&#34\uff1b)\uff1b\u5e8f\u5217\u53f7\u3002println(&#34\uff1b\u8fd9\u4e9b\u662f\u6bcf\u4e2a4\u5b57\u8282(\u6d6e\u70b9)&#34\uff1b)\uff1b\u4e32\u884c\u3002println(&#34\uff1b\u793a\u4f8b\uff1a[-1.0\uff0c0.0]&#34\uff1b)\uff1b\u4e32\u884c\u3002println()\uff1b\u6c34\u5e73\u3002\u8fde\u63a5(9)\uff1b//\u5782\u76f4\u8fde\u63a5\u52309\u53f7\u9488\u811a\u3002Attach(10)\uff1b//\u9644\u52a0\u5230\u5f15\u811a10}//Main Loop void loop(){char buffer[sizeof(InputThumbtick)]\uff1bIF(Serial.\u3002Available()&gt\uff1b=sizeof(InputThumbtick)){\u4e32\u884c\u3002readBytes(Buffer\uff0csizeof(InputThumbtick))\uff1bmemcpy(&amp\uff1binThumbticks\uff0c&amp\uff1bBuffer\uff0csizeof(InputThumbtick))\uff1b\u5782\u76f4\u3002write\u5fae\u79d2(inputToServoValue(inThumbtics.up_down\uff0c1200,1800))\uff1b\u6c34\u5e73\u3002writeMicrosec(inputToServoValue(inThumbtics.Left_Right\uff0c1200,1800))\uff1b}}/*\u5c06\u8f93\u5165\u503c\u8f6c\u6362\u4e3a\u4f3a\u670d\u5fae\u79d2\u503c*-\u4f3a\u670d\u5fae\u79d2\u503c\u4e3a[1200,1800]*-\u8f93\u5165\u503c\u4e3a[-1\uff0c1]**\u6211\u4eec\u56e0\u6b64\u5e0c\u671b\u5bf9\u5fae\u79d2\u503c\u8fdb\u884c\u5f52\u4e00\u5316\u5e76\u63d0\u53d6X*-\u5f52\u4e00\u5316[0\uff0c1]\uff1aXnorm=(X-Xmin)/(xmax-Xmin)*-\u5f52\u4e00\u5316[-1\uff0c1]\uff1aXscale=2*Xnorm-1*-\u5f52\u4e00\u5316[-1\uff0c1]\uff1aXscale=(2*((X-Xmin)/(xmax-Xmin)-1*-\u63d0\u53d6X\uff1ax=(Xscale+1)/2)*(xmax-Xmin))+Xmin*-\u793a\u4f8b1\uff1ax=(-1+1)/2)*(1800-1200))+1200=1200*-\u793a\u4f8b2\uff1ax=(1+1)/2)*(1800-1200))+1200=1800\u3002int xmin\uff0cint xmax){in=in*-1\uff1b//\u53cd\u53f7\u8fd4\u56de(Int)(in+1)/2)*(xmax-xmin))+xmin)\uff1b}\u3002\nConst SerialPort=Required(&#39\uff1bSerialPort&#39\uff1b)\uff1bConst GameController=Required(&#39\uff1b./GameController&#39\uff1b)\uff1bConst Port=NEW(&#39\uff1bCOM6&39\uff1b\uff0c{baudRate\uff1a38400\uff0cParity\uff1a&#39\uff1bNone&#39\uff1b\uff0cstopBits\uff1a1\uff0cFlowControl\uff1aFalse})\u51fd\u6570ab2str(Buf){\u8fd4\u56de\u5b57\u7b26\u4e32\u3002FromCharCode\u3002Apply(null\uff0cnew(Buf))\uff1b}\u5f02\u6b65\u51fd\u6570writeAndDrain(port\uff0cdata){return new((Resolve\uff0cReject)=&&gt;T\uff1b{port.\u3002\u5199(\u6570\u636e)\uff1b\u7aef\u53e3\u3002\u6392\u51fa(Resolve)\uff1b})}\uff1b(Async()=&gt\uff1b{\u5e38\u91cfGameController=new(100)\uff1b\u7b49\u5f85GameController\u3002init()\uff1bgameController\u3002\u5728(&#39\uff1b\u6309\u94ae&#39\uff1b\uff0c(Btn)=&gt\uff1b\u63a7\u5236\u53f0\u4e0a\u3002log(`Button\uff1a${btn}\u6309\u4e0b`))gameController\u3002\u5728(&#39\uff1b\u62c7\u6307\u68d2&#39\uff1b\uff0cAsync(Val)=&gt\uff1b{let valParsed=JSON.\u3002parse(Val)\uff1blet up_down=valParsed[1]\uff1blet Left_right=valParsed[0]\uff1bConsole\u3002log(`up_down\uff1a${valParsed[1]}|Left_right\uff1a${valParsed[0]}`)\uff1b//console.log(ValParsed)\uff1blet data=ConvertTypedArray(new([UP_DOWN\uff0cLEFT_RIGHT])\uff0cUint8Array)\uff1b\u7b49\u5f85writeAndDrain(port\uff0cdata)\uff1b//[L|R\uff0cU|D]Range[-1\uff0c1]})\u7aef\u53e3\u3002\u5728(&#39\uff1b\u6253\u5f00&#39\uff1b\uff0c\u5f02\u6b65()=&gt\uff1b{\u63a7\u5236\u53f0\u3002log(&#34\uff1b\u7aef\u53e3\u6253\u5f00\uff0c\u7b49\u5f85\u91cd\u7f6e&#34\uff1b)\uff1b//Arduino\u5728\u83b7\u5f97\u4e32\u884c\u8fde\u63a5\u65f6\u81ea\u52a8\u91cd\u7f6e//\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u53d1\u9001setTimeout(async()=&gt\uff1b{console.\u3002log(&#34\uff1bReset Done&#34\uff1b)\uff1b}\uff0c3000)\uff1b})\uff1b//port.on(&#39\uff1bopen&#39\uff1b\uff0c()=&gt\uff1bport.write(&#39\uff1b123&#39\uff1b))\u7aef\u53e3\u3002\u5728(&#39\uff1b\u6570\u636e&#39\uff1b\uff0c(\u6570\u636e)=&gt\uff1b\u63a7\u5236\u53f0\u4e0a\u3002log(ab2str(Data)\uff1b\u51fd\u6570ConvertTypedArray(src\uff0ctype){let buffer=new(src.byteLength)\uff1blet baseView=new(Buffer)\u3002set(Src)\uff1breturn new(Buffer)\uff1b}})()\uff1b", "note_en": "Creating an Xbox Robot Arm is something that I\u2019ve been wanting to do ever since I saw  the post by  Kevin Drouglazet who was able to utilize an Xbox Controller with an arm he created and was so friendly to publish the design files for (I am definitely not a hardware designer \ud83d\ude05) - thanks for that Kevin!\n Another reason why I wanted to do this is to have more practical knowledge and hands-on experience in the Reinforcement Learning domain. Since with this Robot Arm, I saw the potential to learn physical action control which will translate in world changes that can be virtual, opening up the realm of possibilities for use cases.\n To make this post more understandable, I decided to do an in-depth coverage over multiple articles. In the first part I will detail how this Robotic Arm extension was built and how you can make the robot arm control the right tuhmbstick when you are moving with the left thumbstick. While in the second part, I will go deeper on how we are then able to utilize a Unity Environment and train it to eventually be controlled by the robotic arm.\n     Note: Seeing that the assembly was well explained by Kevin his post, I decided to shorten this part and put more focus on the software after this section.\n  Let\u2019s start off with the parts required for this build. In total I paid around $75.00 for this build ($20.00 without the Xbox controller)\n   For printing we can utilize the  provided STL files and load them into our 3D printing software.\n     Note: This was reprinted in White for personal styling. A huge shout-out to my colleagues  Diego Trinciarelli and  Karim Vaes for helping me with the printing!\n  After the printing, we can assemble all of this together which is quite straightforward and explained well by Kevin.\n    Now our hardware is assembled and we are ready to start putting software on this beauty!\n  We want to achieve movement of the robot arm by utilizing the input of the left thumbstick, which will send data to our computer, which in its turn will send data back to the Arduino that will control the motors.\n In the next post, we will then put the Action Logic of taking an action on the Arduino, which will decide which action to take based on the input received from the observation state.\n  First we need to connect the Xbox Controller and start receiving data from it. This in itself is not an easy task on Windows, seeing that it\u2019s hard to find up-to-date libraries that allow us to do this. This is why I decided to utilize the Browser API as you can find in an earlier blog post:  Getting Xbox Controller inputs through Node.js.\n When we follow this post, we can utilize the following code that will read the Thumbstick values and put them into the respective  UP_DOWN and  LEFT_RIGHT variables.\n const GameController  =  require ( &#39;./GameController&#39; ) ; ( async  ( )  =&gt;  {  const gameController  =  new   ( 100 ) ;  // 100ms poll interval  await gameController . init ( ) ; gameController . on ( &#39;button&#39; ,  ( btn )  =&gt; console . log (  ` Button:   ${btn }  pressed ` ) ) gameController . on ( &#39;thumbsticks&#39; ,  async  ( val )  =&gt;  {  let valParsed  =  JSON . parse (val ) ;  let  UP_DOWN  = valParsed [ 1 ] ;  let  LEFT_RIGHT  = valParsed [ 0 ] ; console . log (  ` UP_DOWN:   ${valParsed [ 1 ] }  | LEFT_RIGHT:   ${valParsed [ 0 ] } ` ) ;  } ) } ) ( ) ;\n  Another thing we have to do before we can start working on interchanging data and programming our arduino is to connect Node.js so that it\u2019s able to exchange data. Luckily for us there is an excellent library named  Serialport that we can install through  npm install serialport.\n Once this is installed, we are able to open our COM port where the Arduino is connected on by instantiating the object with the configuration we want. To then send and receive data we await an open event whereafter we can utilize the command of  port.write(data) and we can receive data by listening on the  data event which we can log to the console.\n Do note that we are receiving bytes, which we thus have to convert to a string, implemented through the  ab2str function.\n const SerialPort  =  require ( &#39;serialport&#39; ) ; const GameController  =  require ( &#39;./GameController&#39; ) ; const port  =  new   ( &#39;COM6&#39; ,  { baudRate :  38400 , parity :  &#39;none&#39; , stopBits :  1 , flowControl :  false } ) ; function  ab2str ( buf )  {  return String . fromCharCode . apply ( null ,  new   (buf ) ) ; }port . on ( &#39;open&#39; ,  async  ( )  =&gt;  { console . log ( &#34;Port Opened, awaiting reset&#34; ) ;  // Arduino does automatic reset when it gets a serial connection  // Therefor we wait a bit before sending  setTimeout ( async  ( )  =&gt;  { console . log ( &#34;Reset Done&#34; ) ;  } ,  3000 ) ; } ) ;port . on ( &#39;data&#39; ,  ( data )  =&gt; console . log ( ab2str (data ) ) ) ;\n  Before we can start working on programming the Arduino, we have to decide how the data will be interchanged seeing that this is a serial connection.\n The values from our Xbox Controller arrive as  floating points where we require 2 of those that represent the UP DOWN direction and the LEFTRIGHT direction.\n  In Javascript we have to send  Uint8Arrays through the  Serialport library. To do this we thus need to take our variable and convert it from a src type to a destination type. A  float represents 8 bytes in Javascript (64 bits), but Arduino requires  4 bytes bytes. By wrapping our variable in a  Float32Array we can convert this type to 4 bytes.\n To now send this to our Arduino, we need to convert this  Float32Array to a  Uint8Array. Luckily for us this can be achieved easily through the following function:\n // Convert src to destination // Example: convertTypedArray(new Float32Array([ 1.00 ]), Uint8Array); function  convertTypedArray ( src , type )  {  let buffer  =  new   (src .byteLength ) ;  let baseView  =  new   (buffer ) . set (src ) ;  return  new   (buffer ) ; }\n This we are able to send instantly over the serial connection through a  port.write() method. However before doing that we do want to make sure that a new value can be sent (to avoid overload), which we can do through the  port.drain() function. We thus write another function that allows us to  writeAndDrain to successfully send one message:\n     For our Arduino this is a bit more complicated. We need to receive data and save it somehow, but this data is coming in in bytes rather than full floats.\n Luckily there is a trick that we can use, that allows us to read incoming bytes and copy them to a struct. Allowing us to define the input as follows:\n typedef  struct  {  float UP_DOWN ;  // UP | DOWN value [-1, 1]  float LEFT_RIGHT ;  // LEFT | RIGHT value [-1, 1] } InputThumbstick ;\n  void  setup ( )  { Serial . begin ( 38400 ) ; } void  loop ( )  {  char buffer [ sizeof (InputThumbstick ) ] ;  if  (Serial . available ( )  &gt;=  sizeof (InputThumbstick ) )  { Serial . readBytes (buffer ,  sizeof (InputThumbstick ) ) ;  memcpy ( &amp;inThumbsticks ,  &amp;buffer ,  sizeof (InputThumbstick ) ) ;  } }\n  Last but not least we now have to move the servos (Horizontal and Vertical) based on the values coming in. Before we can actually write, we first have to think how we will pick the correct values, seeing that the documentation ( Servo.h &amp;&amp;  Servo.h writeMicroseconds) state that a value between  [1000, 2000] should be chosen.\n In our case, this range is  [1200, 1800] with  1500 being the middle seeing that we don\u2019t need 180 degrees.\n   Converting this can be compared to normalizing the servo values. However instead of normalizing between  [0, 1] by default, we will normalize to  [-1, 1]. With the following parameters:\n    X n o r m =   X \u2212 X m i n  X m a x \u2212 X m i n Xnorm = \\frac{X - Xmin}{Xmax - Xmin}    X n o r m  =              X m a x \u2212 X m i n        X \u2212 X m i n \u200b\n  X s c a l e d = 2 \u2217 X n o r m \u2212 1 Xscaled = 2 * Xnorm - 1    X s c a l e d  =    2  \u2217    X n o r m  \u2212    1\n  X s c a l e d = ( 2 \u2217   X \u2212 X m i n  X m a x \u2212 X m i n Xscaled = (2 * \\frac{X - Xmin}{Xmax - Xmin}    X s c a l e d  =    ( 2  \u2217              X m a x \u2212 X m i n        X \u2212 X m i n \u200b    ) - 1\n  X = ( (   X s c a l e d + 1 2 ) \u2217 ( X m a x \u2212 X m i n ) ) + X m i n X = ((\\frac{Xscaled + 1}{2}) * (Xmax - Xmin)) + Xmin    X  =    ( (           2        X s c a l e d + 1 \u200b     )  \u2217    ( X m a x  \u2212    X m i n ) )  +    X m i n\n   int  inputToServoValue ( float in ,  int Xmin ,  int Xmax )  { in  = in  *  - 1 ;  // Reverse sign  return  ( int ) ( ( ( (in  +  1 )  /  2 )  *  (Xmax  - Xmin ) )  + Xmin ) ; }\n  Below you will be able to find the final code utilized to achieve the moving robot arm based on input of the left thumbstick. I strived to make this code as clean as possible, so that it can be reused in other projects.\n In a next post I hope to utilize this project for a Reinforcement Learning use case, but more about that later \ud83d\ude09\n    # include  &lt;Servo.h&gt;Servo Vertical ;  // Servo doing vertical movementServo Horizontal ;  // Servo doing horizontal movement typedef  struct  {  float UP_DOWN ;  // UP | DOWN value [-1, 1]  float LEFT_RIGHT ;  // LEFT | RIGHT value [-1, 1] } InputThumbstick ;InputThumbstick inThumbsticks ; // Startup void  setup ( )  { Serial . begin ( 38400 ) ; Serial . println ( &#34;This program expects 2 pieces:&#34; ) ; Serial . println ( &#34;[ U|D, L|R ] in range [ 1, 0 ]&#34; ) ; Serial . println ( &#34;These are 4 bytes each (float)&#34; ) ; Serial . println ( &#34;Example: [ -1.0, 0.0 ]&#34; ) ; Serial . println ( ) ; Horizontal . attach ( 9 ) ;  // Attach to Pin 9 Vertical . attach ( 10 ) ;  // Attach to pin 10 } // Main Loop void  loop ( )  {  char buffer [ sizeof (InputThumbstick ) ] ;  if  (Serial . available ( )  &gt;=  sizeof (InputThumbstick ) )  { Serial . readBytes (buffer ,  sizeof (InputThumbstick ) ) ;  memcpy ( &amp;inThumbsticks ,  &amp;buffer ,  sizeof (InputThumbstick ) ) ; Vertical . writeMicroseconds ( inputToServoValue (inThumbsticks .UP_DOWN ,  1200 ,  1800 ) ) ; Horizontal . writeMicroseconds ( inputToServoValue (inThumbsticks .LEFT_RIGHT ,  1200 ,  1800 ) ) ;  } } /** * Convert to input value to the Servo Microseconds value * - Servo Microseconds value is [ 1200, 1800 ] * - Input value is [ -1, 1 ] * * We thus want to normalize the Microseconds value and extract X * - Normalization [0, 1]: Xnorm = (X - Xmin) / (Xmax - Xmin) * - Normalization [-1, 1]: Xscaled = 2 * Xnorm - 1 * - Normalization [-1, 1]: Xscaled = (2 * ((X - Xmin) / (Xmax - Xmin))) - 1 * - Extracting X : X = (((Xscaled + 1) / 2) * (Xmax - Xmin)) + Xmin * - Example 1: X = (((-1 + 1) / 2) * (1800 - 1200)) + 1200 = 1200 * - Example 2: X = (((1 + 1) / 2) * (1800 - 1200)) + 1200 = 1800 */ int  inputToServoValue ( float in ,  int Xmin ,  int Xmax )  { in  = in  *  - 1 ;  // Reverse sign  return  ( int ) ( ( ( (in  +  1 )  /  2 )  *  (Xmax  - Xmin ) )  + Xmin ) ; }\n  const SerialPort  =  require ( &#39;serialport&#39; ) ; const GameController  =  require ( &#39;./GameController&#39; ) ; const port  =  new   ( &#39;COM6&#39; ,  { baudRate :  38400 , parity :  &#39;none&#39; , stopBits :  1 , flowControl :  false } ) function  ab2str ( buf )  {  return String . fromCharCode . apply ( null ,  new   (buf ) ) ; } async  function  writeAndDrain ( port , data )  {  return  new   ( ( resolve , reject )  =&gt;  { port . write (data ) ; port . drain (resolve ) ;  } ) } ; ( async  ( )  =&gt;  {  const gameController  =  new   ( 100 ) ;  await gameController . init ( ) ; gameController . on ( &#39;button&#39; ,  ( btn )  =&gt; console . log (  ` Button:   ${btn }  pressed ` ) ) gameController . on ( &#39;thumbsticks&#39; ,  async  ( val )  =&gt;  {  let valParsed  =  JSON . parse (val ) ;  let  UP_DOWN  = valParsed [ 1 ] ;  let  LEFT_RIGHT  = valParsed [ 0 ] ; console . log (  ` UP_DOWN:   ${valParsed [ 1 ] }  | LEFT_RIGHT:   ${valParsed [ 0 ] } ` ) ;  // console.log(valParsed);  let data  =  convertTypedArray ( new   ( [  UP_DOWN ,  LEFT_RIGHT  ] ) , Uint8Array ) ;  await  writeAndDrain (port , data ) ;  // [ L|R, U|D ] range [ -1, 1 ]  } ) port . on ( &#39;open&#39; ,  async  ( )  =&gt;  { console . log ( &#34;Port Opened, awaiting reset&#34; ) ;  // Arduino does automatic reset when it gets a serial connection  // Therefor we wait a bit before sending  setTimeout ( async  ( )  =&gt;  { console . log ( &#34;Reset Done&#34; ) ;  } ,  3000 ) ;  } ) ;  // port.on(&#39;open&#39;, () =&gt; port.write(&#39;123&#39;)) port . on ( &#39;data&#39; ,  ( data )  =&gt; console . log ( ab2str (data ) ) ) ;  function  convertTypedArray ( src , type )  {  let buffer  =  new   (src .byteLength ) ;  let baseView  =  new   (buffer ) . set (src ) ;  return  new   (buffer ) ;  } } ) ( ) ;", "posttime": "2020-06-03 01:49:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a7\u5236,robot,arduino", "title": "\u521b\u5efa\u63a7\u5236Xbox\u63a7\u5236\u5668\u7684\u673a\u68b0\u81c2-\u7b2c1\u90e8\u5206", "title_en": "Creating a Robot Arm That Controls an Xbox Controller \u2013 Part 1", "transed": 1, "url": "https://xaviergeerinck.com/post/ai/rl/xbox-robot-arm-creation/", "via": "", "real_tags": ["\u63a7\u5236", "robot", "arduino"]}, {"category": "", "categoryclass": "", "imagename": "bc66d7dc2c680842ad0e2ed6e6989f60.jpg", "infoid": 1004863, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6781\u5176\u7b80\u5355\uff0c\u4f46\u76f8\u5f53\u6709\u7528\u3002\u5c06\u6d4f\u89c8\u5668\u62d6\u5165\u62d6\u51fa\u5373\u53ef\u67e5\u770b\u5176\u5de5\u4f5c\u60c5\u51b5\u3002\n\u53ea\u9700\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u590d\u5236\u5230\u60a8\u6b63\u5728\u5904\u7406\u7684\u4efb\u4f55\u9875\u9762\u7684\u6b63\u6587\u4e2d\uff0c\u60a8\u5c31\u4f1a\u59cb\u7ec8\u77e5\u9053\u60a8\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u65ad\u70b9/\u5c4f\u5e55\u5927\u5c0f\u3002\n&lt\uff1bdiv class=&#34\uff1b\u4f4d\u7f6e\u56fa\u5b9a&34\uff1b\u6837\u5f0f=&#34\uff1bz-index\uff1a9999999&#34\uff1b&gt\uff1b&lt\uff1b&lt\uff1bSPAN class=&#34\uff1b\u5fbd\u7ae0\u5fbd\u7ae0-\u8b66\u544ad-\u5185\u8054\u5757d-sm-None&34\uff1b&gt\uff1bxs&lt\uff1b/span&&gt;\uff1bspan class=&#34\uff1b\u5fbd\u7ae0\u5fbd\u7ae0-\u8b66\u544ad-\u65e0d-sm-\u5185\u8054\u5757d-md\u3002\u5fbd\u7ae0\u5fbd\u7ae0-WARNING d-NONE d-MD-INLINE-BLOCK d-lg-None&34\uff1b&gt\uff1bMD&lt\uff1b/SPAN&&gt;\uff1b\u5fbd\u7ae0\u5fbd\u7ae0-WARNING d-None d-lg-Inline-Block d-xl-None#34\uff1b&gt\uff1blg&lt\uff1b/SPAN&&gt;&lt\uff1bSPAN class=&#34\uff1b\u5fbd\u7ae0\u5fbd\u7ae0-WARNING d-None d-xl-inline-block&#34\uff1b&gt\uff1bXL&lt\uff1b/span&gt\uff1b&lt\uff1b/div&gt\uff1b", "note_en": "Supremely simple but quite useful. Drag your browser in and out to see it working.\n Just copy the code below into the body of any pages you\u2019re working on and you\u2019ll always know what break point / screen size you\u2019re currently working in.\n &lt;div class=&#34;position-fixed&#34; style=&#34;z-index: 9999999&#34;&gt; &lt;span class=&#34;badge badge-warning d-inline-block d-sm-none&#34;&gt;XS&lt;/span&gt; &lt;span class=&#34;badge badge-warning d-none d-sm-inline-block d-md-none&#34;&gt;SM&lt;/span&gt; &lt;span class=&#34;badge badge-warning d-none d-md-inline-block d-lg-none&#34;&gt;MD&lt;/span&gt; &lt;span class=&#34;badge badge-warning d-none d-lg-inline-block d-xl-none&#34;&gt;LG&lt;/span&gt; &lt;span class=&#34;badge badge-warning d-none d-xl-inline-block&#34;&gt;XL&lt;/span&gt;&lt;/div&gt;", "posttime": "2020-06-03 01:48:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,bootstrap,simple", "title": "\u4e3a\u4f7f\u7528Bootstrap\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u6781\u5176\u7b80\u5355(\u4f46\u5e2e\u52a9\u60ca\u4eba)\u7684\u5de5\u5177", "title_en": "Stupidly simple (but surprisingly helpful) tool for developers using Bootstrap", "transed": 1, "url": "https://bootstrapbreakpoints.com/", "via": "", "real_tags": ["\u5f00\u53d1", "bootstrap", "simple"]}, {"category": "", "categoryclass": "", "imagename": "183896aea1a3743c33570a1538087c27.jpg", "infoid": 1004862, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684Kubernetes\u7ba1\u7406\u5e73\u53f0\u7684\u521b\u5efa\u8005Rancher Labs\u5ba3\u5e03\uff0c\u4f01\u4e1a\u7ea7\u4e91\u672c\u5730\u5bb9\u5668\u5b58\u50a8\u89e3\u51b3\u65b9\u6848Longhorn\u5df2\u5168\u9762\u4e0a\u5e02(GA)\u3002Longhorn\u662f100%\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u5757\u5b58\u50a8\uff0c\u4f7f\u7528\u5fae\u670d\u52a1\u6784\u5efa\u3002\u81ea2019\u5e74\u8be5\u4ea7\u54c1\u5728Beta\u53d1\u5e03\u4ee5\u6765\uff0c\u6570\u4ee5\u5343\u8ba1\u7684\u7528\u6237\u901a\u8fc7\u5c06\u8be5\u4ea7\u54c1\u4f5c\u4e3a\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a(CNCF)\u6c99\u76d2\u9879\u76ee\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\uff0c\u4ece\u800c\u7ecf\u53d7\u4f4f\u4e86\u957f\u89d2\u725b\u7684\u6218\u6597\u3002\n\u4e0d\u8981\u9519\u8fc7\u6211\u4eec\u7684\u6545\u4e8b\uff0c\u8ba2\u9605\u6211\u4eec\u7684\u514d\u8d39\u65f6\u4e8b\u901a\u8baf\u3002\u5f53\u6211\u4eec\u53d1\u5e03\u6545\u4e8b\u65f6\uff0c\u7acb\u5373\u5c06\u5b83\u4eec\u653e\u5165\u60a8\u7684\u6536\u4ef6\u7bb1\uff01", "note_en": "Rancher Labs, creators of the most widely used Kubernetes management platform, have announced the general availability (GA) of  Longhorn, an enterprise-grade, cloud-native container storage solution. Longhorn is 100% open-source, distributed block storage built using microservices. Since the product was released in Beta in 2019, thousands of users have battle-hardened Longhorn by stress-testing the product as a Cloud Native Computing Foundation (CNCF) Sandbox project.\n  Don&#39;t miss our stories, subscribe to our free newsletter. Get stories in your inbox as soon as we post them!", "posttime": "2020-06-03 01:47:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,longhorn,\u6545\u4e8b", "title": "\u7267\u573a\u4e3bLonghorn\uff0cKubernetes\u5f00\u6e90\u5b58\u50a8", "title_en": "Rancher Longhorn, Open Source Storage for Kubernetes", "transed": 1, "url": "https://www.tfir.io/rancher-longhorn-open-source-storage-for-kubernetes/", "via": "", "real_tags": ["\u5f00\u6e90", "longhorn", "\u6545\u4e8b"]}, {"category": "", "categoryclass": "", "imagename": "dddb54e93095cdec5ccaa1b42a6b7224.jpeg", "infoid": 1004861, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d7\u5f71\u54cd\u7684\u4ea4\u6613\u6240Coinsquare\u8868\u793a\uff0c\u4e00\u540d\u524d\u5458\u5de5\u7a83\u53d6\u4e86\u6570\u636e\u3002", "note_en": "Coinsquare, the impacted exchange, says a former employee stole the data.", "posttime": "2020-06-03 01:04:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ed1\u5ba2,app,\u8ba1\u5212,plan,\u7a83\u53d6", "title": "\u9ed1\u5ba2\u8ba1\u5212\u5c06\u7a83\u53d6\u7684\u52a0\u5bc6\u8d27\u5e01\u5151\u6362\u6570\u636e\u7528\u4e8eSIM\u5361\u4ea4\u6362", "title_en": "Hackers Plan To Use Stolen Cryptocurrency Exchange Data for SIM Swapping", "transed": 1, "url": "https://www.vice.com/en_us/article/n7wnvb/hackers-coinsquare-data-bitcoin-sim-swapping", "via": "", "real_tags": ["\u9ed1\u5ba2", "app", "\u8ba1\u5212", "plan", "\u7a83\u53d6"]}, {"category": "", "categoryclass": "", "imagename": "6f5a49f145712a17e8ba9b818cc705c9.jpeg", "infoid": 1004860, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528\u4ee3\u7801\u7684\u8bba\u6587\u91cd\u70b9\u4ecb\u7ecd\u4e86\u6d41\u884c\u7684ML\u7814\u7a76\u548c\u5b9e\u73b0\u5b83\u7684\u4ee3\u7801\u3002", "note_en": "Papers With Code highlights trending ML research and the code to implement it.", "posttime": "2020-06-03 01:03:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u8bba\u6587,papers", "title": "\u5e26\u4ee3\u7801\u7684\u8bba\u6587", "title_en": "Papers with Code", "transed": 1, "url": "https://paperswithcode.com/", "via": "", "real_tags": ["\u4ee3\u7801", "\u8bba\u6587", "papers"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004859, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5047\u8bbe\u60a8\u662f\u4e00\u540d\u72ec\u7acb\u5f00\u53d1\u4eba\u5458\uff0c\u662f\u65f6\u5019\u5411\u5168\u4e16\u754c\u53d1\u5e03\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u60a8\u6784\u5efa\u4e86\u4e00\u4e2a\u5b89\u88c5\u7a0b\u5e8f\u5e76\u5f00\u59cb\u5206\u53d1\u5b83\u3002\u4e00\u4e2a\u52c7\u6562\u7684\u65e9\u671f\u91c7\u7528\u8005\u4e0b\u8f7d\u5e76\u8fd0\u884c\u5b83\uff0c\u7ed3\u679c\u5374\u5f97\u5230\u4e86\u8fd9\u4e2a\u63aa\u8f9e\u5f3a\u786c\u7684\u8b66\u544a\uff1a\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4eca\u5929\u7684Windows\u73af\u5883\u4e2d\uff0c\u5fae\u8f6f\u79ef\u6781\u963b\u6b62\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fd0\u884c\uff1b\u8fd9\u8981\u5f52\u529f\u4e8e\u201cSmartScreen\u201d\u3002\nSmartScreen\u6536\u96c6\u6240\u6709Windows\u7528\u6237\u7684\u5b89\u88c5\u6570\u636e\uff0c\u4ee5\u5efa\u7acb\u201c\u4fe1\u8a89\u201d\u3002\u5982\u679c\u8be5\u7a0b\u5e8f\u6ca1\u6709\u5efa\u7acb\u826f\u597d\u7684\u58f0\u8a89\uff0c\u60a8\u4f1a\u6536\u5230\u8fd9\u6761\u4e25\u91cd\u7684\u8b66\u544a\u6d88\u606f\u3002\u6b64\u65f6\uff0c\u5927\u591a\u6570\u7528\u6237\u5df2\u7ecf\u5220\u9664\u4e86.exe\uff0c\u8ba4\u4e3a\u5b83\u662f\u6076\u610f\u8f6f\u4ef6\uff0c\u4f46\u901a\u8fc7\u5355\u51fb\u201c\u66f4\u591a\u4fe1\u606f\u201d\uff0c\u7136\u540e\u5355\u51fb\u201c\u4ecd\u8981\u8fd0\u884c\u201d\uff0c\u53ef\u4ee5\u7ed5\u8fc7SmartScreen\u3002\n\u4f46\u662f\u4f60\u662f\u5982\u4f55\u5efa\u7acb\u58f0\u8a89\u7684\u5462\uff1f\u9996\u5148\uff0c\u5fae\u8f6f\u9700\u8981\u80fd\u591f\u6536\u96c6\u8c01\u53d1\u5e03\u4e86\u8fd9\u6b3e\u5e94\u7528\u7684\u4fe1\u606f\uff0c\u8fd9\u662f\u901a\u8fc7\u4ee3\u7801\u7b7e\u540d\u8bc1\u4e66\u6765\u5b8c\u6210\u7684\u3002\u6700\u660e\u663e\u7684\u6697\u793a\u662f\uff0c\u672a\u7b7e\u540d\u7684\u5e94\u7528\u7a0b\u5e8f\u603b\u662f\u4f1a\u89e6\u53d1SmartScreen\u3002\u66f4\u9690\u6666\u7684\u542b\u4e49\u662f\uff0c\u5bf9\u4e8e\u5355\u4e2a\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u83b7\u53d6\u4ee3\u7801\u7b7e\u540d\u8bc1\u4e66\u662f\u4e00\u7b14\u5f88\u5927\u7684\u8d39\u7528\u3002\u76ee\u524d\u8fd8\u6ca1\u6709\u7b49\u540c\u4e8e\u4ee3\u7801\u7b7e\u540d\u8bc1\u4e66\u7684\u201c\u8ba9\u6211\u4eec\u52a0\u5bc6\u201d\uff1b\u56e0\u6b64\u60a8\u5fc5\u987b\u4ece\u53d7\u4fe1\u4efb\u7684\u673a\u6784\u8d2d\u4e70\u5b83\u3002\u4ef7\u683c\u8303\u56f4\u5f88\u5e7f\uff0c\u4f46\u4e00\u5f20\u6709\u6548\u671f\u4ec5\u4e3a\u4e00\u5e74\u7684\u8bc1\u4e66\u901a\u5e38\u552e\u4ef7\u7ea6\u4e3a100\u7f8e\u5143\u3002\n\u4f46\u662f\uff0c\u5047\u8bbe\u60a8\u54ac\u7d27\u7259\u5173\uff0c\u7ed9\u81ea\u5df1\u4e70\u4e86\u4e00\u5757\u7531\u8ba1\u7b97\u673a\u751f\u6210\u7684\u9ad8\u4ef7\u8d28\u6570\uff0c\u5bf9\u4ee3\u7801\u7b7e\u540d\uff0c\u7136\u540e\u91cd\u65b0\u53d1\u5e03\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u8ba9\u7528\u6237\u5b89\u88c5\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5bf9\u5417\uff1f\u4e0d\u5bf9\u3002\n\u5373\u4f7f\u4f7f\u7528\u65b0\u6570\u5b57\u7b7e\u540d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cSmartScreen\u4ecd\u4f1a\u89e6\u53d1\u3002\u6bd5\u7adf\u4f60\u662f\u4e00\u4e2a\u9ed8\u9ed8\u65e0\u95fb\u7684\u65b0\u51fa\u7248\u5546\uff0cSmartScreen\u7684\u201c\u5efa\u7acb\u58f0\u8a89\u201d\u90e8\u5206\u5b8c\u5168\u662f\u4e00\u4e2a\u9ed1\u5323\u5b50\u3002\u6240\u4ee5\u8fd9\u91cc\u662f\u7b2c22\u6761\u519b\u89c4\uff1a\u8981\u5efa\u7acb\u58f0\u8a89\uff0c\u4f60\u9700\u8981\u4eba\u4eec\u5b89\u88c5\u4f60\u7684\u8f6f\u4ef6\uff0c\u4ee5\u4fbf\u5fae\u8f6f\u6536\u96c6\u6570\u636e\u3002\u8981\u8ba9\u7528\u6237\u5b89\u88c5\u60a8\u7684\u8f6f\u4ef6\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u6536\u5230\u5f3a\u70c8\u5efa\u8bae\u60a8\u7684\u4ee3\u7801\u5c06\u635f\u5bb3\u4ed6\u4eec\u8ba1\u7b97\u673a\u7684\u6d88\u606f\u3002\n\u5982\u679c\u60a8\u5c1d\u8bd5\u4f7f\u7528Winget\u53d1\u5e03\u60a8\u7684\u8f6f\u4ef6(\u7b80\u800c\u8a00\u4e4b\uff1a\u4e00\u65e6Windows\u5e94\u7528\u5546\u5e97\u63a8\u51fa\u6d4b\u8bd5\u7248\uff0c\u4ec0\u4e48\u53ef\u80fd\u4f1a\u53d6\u4ee3\u5b83)\uff0c\u60a8\u5c06\u4eceMicrosoft\u6536\u5230\u4ee5\u4e0b\u6d88\u606f\uff1a\n\u7528\u5fae\u8f6f\u7684\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u89e6\u53d1\u4e86SmartScreen\uff0c\u5c31\u88ab\u8ba4\u4e3a\u662f\u6076\u610f\u8f6f\u4ef6\u3002\u5b83\u4eec\u4ee5\u901a\u8fc7\u4e13\u7528\u94fe\u63a5\u63d0\u4ea4\u6587\u4ef6\u4f9b\u5ba1\u9605\u7684\u5f62\u5f0f\u94fe\u63a5\u5230\u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u60a8\u9075\u5faa\u6240\u6709\u8fd9\u4e9b\u6d41\u7a0b\uff0c\u60a8\u5c06\u5f97\u5230\u4ee5\u4e0b\u54cd\u5e94\uff1a\n\u6211\u4eec\u5df2\u7ecf\u5ba1\u9605\u4e86\u60a8\u63d0\u4ea4\u7684\u6587\u4ef6\uff0c\u5e76\u786e\u8ba4\u63d0\u4ea4\u7684\u6587\u4ef6\u662f\u5e72\u51c0\u7684\u3002Windows Defender Antivirus\u4e0d\u4f1a\u5c06\u5b83\u4eec\u62a5\u544a\u4e3a\u6076\u610f\u8f6f\u4ef6\u3002\u60a8\u89c2\u5bdf\u5230\u7684\u6d88\u606f\u662f\u6765\u81eaWindows Defender SmartScreen\u7684\u901a\u77e5\uff0c\u8868\u660e\u8be5\u5e94\u7528\u7a0b\u5e8f\u5728\u6211\u4eec\u7684\u7cfb\u7edf\u4e2d\u6ca1\u6709\u5df2\u77e5\u7684\u4fe1\u8a89\u3002\u5e94\u7528\u7a0b\u5e8f\u4fe1\u8a89\u8b66\u544a\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u5df2\u77e5\u7684\u6b63\u9762\u4fe1\u8a89\u65f6\u901a\u77e5\u6700\u7ec8\u7528\u6237\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8be5\u5e94\u7528\u7a0b\u5e8f\u662f\u6076\u610f\u7684\uff0c\u53ea\u662f\u5b83\u662f\u201c\u672a\u77e5\u7684\u201d\u3002\u8bf7\u6ce8\u610f\uff0c\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u8f7d\u548c\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6570\u5b57\u7b7e\u540d\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u6709\u673a\u5730\u5efa\u7acb\u58f0\u8a89\uff0c\u9664\u975e\u53d1\u751f\u4e86\u8bcb\u6bc1\u73b0\u6709\u58f0\u8a89\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u88ab\u7528\u6765\u7b7e\u7f72\u6076\u610f\u8f6f\u4ef6\u3002\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u8c03\u67e5\u6b64\u95ee\u9898\uff0c\u5982\u679c\u9700\u8981\u66f4\u591a\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u4e0e\u60a8\u8054\u7cfb\u3002\n\u672c\u8d28\u4e0a\uff1a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5e72\u51c0\u7684\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u5bf9SmartScreen\u9519\u8bef\u91c7\u53d6\u4efb\u4f55\u63aa\u65bd\u3002\u6211\u4eec\u7684\u4e91\u673a\u5668\u4eba\u9738\u4e3b\u4eec\u5c06\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4fe1\u4efb\u4f60\u3002\n\u5047\u8bbe\u60a8\u6700\u7ec8\u88ab\u4f5c\u4e3a\u53ef\u4fe1\u53d1\u5e03\u8005\u7684\u7b97\u6cd5\u6240\u63a5\u53d7\u3002\u60a8\u7684\u8bc1\u4e66\u5373\u5c06\u8fc7\u671f\uff0c\u60a8\u5c06\u5176\u7eed\u8ba2\u3002\u4e92\u8054\u7f51\u4e16\u754c\u91cc\u7b80\u5355\u7684\u201c\u4e00\u5207\u7167\u5e38\u201d\u3002\u7136\u800c\uff0c\u5728Windows\u8f6f\u4ef6\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u7684\u58f0\u8a89\u5c06\u91cd\u7f6e\u4e3a\u96f6\u3002\u8bc1\u4e66\u7eed\u8ba2\u4e0d\u88abSmartScreen\u8bc6\u522b\uff0c\u5b83\u518d\u6b21\u5c06\u60a8\u89c6\u4e3a\u65b0\u7684\u53d1\u5e03\u8005\u60a8\u5fc5\u987b\u518d\u6b21\u7ecf\u5386\u8fd9\u4e2a\u75db\u82e6\u7684\u8fc7\u7a0b\u3002\n\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8d2d\u4e70\u6709\u6548\u671f\u66f4\u957f\u7684\u8bc1\u4e66\u6765\u7f13\u89e3\uff0c\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6210\u672c\u5bf9\u4e8e\u5927\u591a\u6570\u72ec\u7acb\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u53ea\u662f\u4e00\u4e2a\u4e0d\u53ef\u903e\u8d8a\u7684\u969c\u788d\u3002\n\u5bf9\u4e8e\u72ec\u7acb\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u662f\u8def\u7684\u5c3d\u5934\u3002\u5bf9\u4e8e\u51fa\u7248\u5546\u6765\u8bf4\uff0c\u8fd8\u6709\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a\u6269\u5c55\u9a8c\u8bc1\u7801\u7b7e\u540d\u8bc1\u4e66\u3002\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\u5bf9\u4ee3\u7801\u8fdb\u884c\u7b7e\u540d\u5c06\u81ea\u52a8\u7ed5\u8fc7SmartScreen\u3002\u5b83\u53ea\u4e3a\u516c\u53f8\u4fdd\u7559\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u9700\u8981\u63a5\u53d7\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u8fdb\u884c\u7684\u989d\u5916\u80cc\u666f\u8c03\u67e5\u3002\nDigicert.com\u662f\u4e00\u5bb6\u5f88\u53d7\u6b22\u8fce\u7684\u4ee3\u7801\u7b7e\u540d\u8bc1\u4e66\u8ba4\u8bc1\u673a\u6784\uff0c\u6bcf\u5e74\u7684\u552e\u4ef7\u9ad8\u8fbe699\u7f8e\u5143\u3002\n\u4f5c\u4e3a\u4e00\u5bb6\u72ec\u7acb\u5f00\u53d1\u5546\uff0c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u514b\u670d\u6210\u7acb\u4e00\u5bb6\u72ec\u8d44\u516c\u53f8\u7684\u9ebb\u70e6\uff0c\u5e76\u652f\u4ed8\u8fd9\u4e9b\u8bc1\u4e66\u6240\u8981\u6c42\u7684\u79bb\u8c31\u4ef7\u683c\u3002\u5f53\u7136\uff0c\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u73b0\u5b9e\u7684\u52aa\u529b\u3002\n\u201c\u5f00\u53d1\u4eba\u5458\uff0c\u5f00\u53d1\u4eba\u5458\uff0c\u5f00\u53d1\u4eba\u5458\uff01\u201d\u8fd9\u662f\u53f2\u8482\u592b\u00b7\u9c8d\u5c14\u9ed8(Steve Ballmer)\u7684\u5450\u558a\uff0c\u4e5f\u662f\u5b9a\u4e49\u4ed6\u6210\u4e3a\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u7684\u6f14\u8bb2\u4e4b\u4e00\u3002\u8fd9\u4e9b\u81ed\u540d\u662d\u8457\u7684\u8bdd\u662f\u57282006\u5e74\u8bf4\u51fa\u6765\u7684\u300214\u5e74\u540e\uff0c\u5728\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9(Satya Nadella)\u7684\u9886\u5bfc\u4e0b\uff0c\u5fae\u8f6f\u56e0\u53d8\u5f97\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u52a0\u5f00\u653e\u800c\u53d7\u5230\u79f0\u8d5e\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u5fae\u8f6f\u4f3c\u4e4e\u8ba9\u5b83\u7684Windows\u73af\u5883\u5bf9\u4ed6\u4eec\u5fc3\u7231\u7684\u5f00\u53d1\u4eba\u5458\u6000\u6709\u6781\u5927\u7684\u654c\u610f\u3002\u8981\u626d\u8f6c\u8fd9\u79cd\u53ef\u6015\u7684\u5c40\u9762\uff0c\u9700\u8981\u6539\u53d8SmartScreen\u6216\u8bc1\u4e66\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\n\u5c06\u6211\u7684\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u7ad9\u70b9URL\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u4ee5\u5907\u4e0b\u6b21\u53d1\u8868\u8bc4\u8bba\u65f6\u4f7f\u7528\u3002", "note_en": "Let us say you are an independent developer and it is time to publish your app to the world. To make it easier, you build an installer and start distributing it. A courageous early adopter downloads and runs it, only to be greeted by this strongly worded warning:\n   Indeed, in today\u2019s Windows environment, Microsoft actively blocks binaries from running; thanks to \u201cSmartScreen\u201d.\n  SmartScreen collects installation data from all Windows users in order to establish \u201creputation\u201d. If the program does not have an established good reputation, you get this big warning message. By this time most users have deleted the .exe already thinking it is a malware, but SmartScreen can be bypassed by clicking on \u201cMore info\u201d then \u201cRun anyway\u201d.\n  But how do you build reputation? First of all, Microsoft needs to be able to gather information on who has published the app, and this is done by a code signing certificate. The most obvious implication is that unsigned apps will always trigger SmartScreen. The more insidious implication is that acquiring a code signing certificate is a big expense for an individual developer. There is currently no \u201cLet\u2019s Encrypt\u201d equivalent to code signing certificates; so you have to purchase it from trusted authorities. The price range is wide but a certificate only valid for a year will typically go for about $100.\n  But let\u2019s say you bite the bullet, you buy yourself an overpriced piece of prime numbers generated by a computer, sign your code and re-publish your application. You can now start getting users to install your app right? Wrong.\n  Even with your newly digitally signed application, SmartScreen will still trigger. After all you are an unknown new publisher, and the \u201cbuilding up reputation\u201d part of SmartScreen is a complete blackbox. So here\u2019s the catch 22: to build up reputation, you need people to install your software so that Microsoft collects data. To get users to install your software, they need not be greeted by a message that strongly suggests your piece of code will harm their computers.\n  If you try to publish your piece of software with WinGet (in a nutshell: what will probably replace the Windows Store once it gets out of beta), you will get this message from Microsoft:\n  In the words of Microsoft, your application is considered a malware if it triggers SmartScreen. They link to a potential solution in the form of submitting your file for review through a dedicated link. If you follow all this process, this is the response you will get:\n We\u2019ve reviewed your submission and we\u2019ve confirmed that the submitted files are clean. Windows Defender Antivirus doesn\u2019t report them as malware. The message you observed is a notification from Windows Defender SmartScreen indicating that the application does not have known reputation in our system. Application reputation warnings are meant to inform end users when applications do not have known positive reputation. This doesn\u2019t mean that the application is malicious, only that it is \u201cunknown\u201d. Please note that users can still proceed to download and run the application. In most cases, a digitally signed application will establish reputation organically, unless something has happened to denigrate existing reputation such as being used to sign malware. We will investigate this issue further and contact you if we need additional information.\n In essence: your app is clean but we won\u2019t do anything about the SmartScreen error. Our cloud bots overlords will decide when it is fine for you to be trusted.\n  Let\u2019s say you finally get accepted by the algorithms that be as a trusted publisher. Your certificate is about to expire and you renew it. Simple \u201cbusiness as usual\u201d in the world of the Internet. In the world of Windows software though, that means that your reputation is reset back to nothing. Certificate renewal is not recognized by SmartScreen, it considers yourself as a new publisher again you have to go through this painful process yet another time.\n This can be mitigated by purchasing a certificate with a longer validity period, but at this point the cost simply becomes an insurmountable barrier for most independent developers.\n  For independent developers, this is the end of the road. For publishers, there is another solution: Extended Validation Code Signing Certificate. Signing code with one of these will automatically bypass SmartScreen. It is reserved for corporations only and as the name suggests it is subject to additional background checks done by certificate authorities.\n Digicert.com, a popular CA for code signing certificates, sells them for a whopping $699 a year.\n As an independent developer, a solution would be to go through the troubles of incorporating a sole proprietary company and fork out the outrageous prices that these certificates command. Of course, that isn\u2019t a realistic endeavor for most.\n   \u201cDevelopers, developers, developers!\u201d was a cry from Steve Ballmer and one of the speeches that defined him as CEO of Microsoft. These infamous words were uttered back in 2006. Fourteen years later, under Satya Nadella, Microsoft is being praised for becoming more open than ever. Ironically, it seems that Microsoft made its Windows environment extremely hostile towards their beloved developers. A change in SmartScreen or on the way certificates work is needed to turn around this dire situation.\n      Save my name, email, and site URL in my browser for next time I post a comment.", "posttime": "2020-06-03 01:03:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,microsoft,defender,\u5e94\u7528\u7a0b\u5e8f", "title": "Microsoft Defender SmartScreen\u6b63\u5728\u4f24\u5bb3\u72ec\u7acb\u5f00\u53d1\u4eba\u5458", "title_en": "Microsoft Defender SmartScreen is hurting independent developers", "transed": 1, "url": "https://getimageview.net/2020/06/02/microsoft-defender-smartscreen-is-hurting-independent-developers/", "via": "", "real_tags": ["\u5f00\u53d1", "microsoft", "defender", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004857, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e00\u76f4\u5728\u8003\u8651\u8de8\u5e73\u53f0\u7684GUI\uff0c\u4e00\u4e2a\u95ee\u9898\u5f15\u51fa\u4e86\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u6700\u540e\u6211\u95ee\u9053\uff1a\u50cf\u7d20\u662f\u5982\u4f55\u51fa\u73b0\u5728\u663e\u793a\u5668\u4e0a\u7684\uff1f\u4e00\u4e2a\u76f8\u5f53\u6574\u9f50\u7684\u5806\u6808\u6ea2\u51fa\u54cd\u5e94\u56de\u7b54\uff1a\n\u76d1\u89c6\u5668\u4e0a\u663e\u793a\u7684\u56fe\u50cf\u4ee5\u4e00\u79cd\u79f0\u4e3a\u5e27\u7f13\u51b2\u533a\u7684\u7ed3\u6784\u5b58\u50a8\u5728\u663e\u5361\u4e0a\u7684\u8ba1\u7b97\u673a\u89c6\u9891RAM\u4e2d\u3002\n\u89c6\u9891RAM\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u7531GPU\u6216CPU\u751f\u6210\u3002\u663e\u5361\u4e0a\u7684\u4e13\u7528DMA\u7ec4\u4ef6\u8fde\u7eed\u8bfb\u53d6\u89c6\u9891RAM\u5e76\u5c06\u5176\u53d1\u9001\u5230\u76d1\u89c6\u5668\u3002\u8f93\u51fa\u5230\u663e\u793a\u5668\u7684\u4fe1\u53f7\u53ef\u4ee5\u662f\u6a21\u62df\u4fe1\u53f7(VGA)\uff0c\u5176\u4e2d\u989c\u8272\u5206\u91cf\u5728\u79bb\u5f00\u5361\u4e4b\u524d\u901a\u8fc7\u6570\u6a21\u8f6c\u6362\u5668\u53d1\u9001\uff0c\u6216\u8005\u5728HDMI\u6216DVI\u7684\u60c5\u51b5\u4e0b\u662f\u6570\u5b57\u4fe1\u53f7\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u80fd\u610f\u8bc6\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6bcf\u50cf\u7d204\u5b57\u8282\u76841920x1080\u663e\u793a\u5668\uff0c\u60a8\u53ea\u9700\u8981\u5927\u7ea68MB\u6765\u5b58\u50a8\u56fe\u50cf\uff0c\u4f46\u662f\u60a8\u8ba1\u7b97\u673a\u4e2d\u7684\u89c6\u9891RAM\u53ef\u80fd\u662f\u8fd9\u4e2a\u5927\u5c0f\u7684\u8bb8\u591a\u500d\u3002\u8fd9\u662f\u56e0\u4e3a\u89c6\u9891RAM\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5b58\u50a8\u5e27\u7f13\u51b2\u533a\u3002\u89c6\u9891RAM\u76f4\u63a5\u8fde\u63a5\u5230GPU\uff0cGPU\u662f\u4e13\u4e3a\u9ad8\u6548\u76843D\u6e32\u67d3\u548c\u89c6\u9891\u89e3\u7801\u800c\u8bbe\u8ba1\u7684\u4e13\u7528\u5904\u7406\u5668\u3002\n\u8fd9\u662f\u975e\u5e38\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u7684\u663e\u793a\u5668\u901a\u8fc7DVI\u76f4\u63a5\u8fde\u63a5\u5230\u6211\u7684GPU\u3002\u53e6\u4e00\u4e2a\u7b54\u6848\u662f\uff0c\u6211\u53d1\u73b0\u6ca1\u6709\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8ba9\u4f60\u76f4\u63a5\u8bbf\u95ee\u5e27\u7f13\u51b2\u533a\u3002\u4f46\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u662f\u9519\u8bef\u7684\u3002\u6709\u4e86\u53e6\u4e00\u4e2aStackexchangeTip\uff0c\u5b83\u5c31\u50cf\u4ee5\u4e0b\u5185\u5bb9\u4e00\u6837\u7b80\u5355\uff1a\n&gt\uff1bcat/dev/urandom&gt\uff1b/dev/fb0-bash\uff1a/dev/fb0\uff1a&gt\uff1bsudo cat/dev/urandom&gt\uff1b/dev/fb0-bash\uff1a/dev/fb0-bash\uff1a/dev/fb0\uff1a\u62d2\u7edd\u6743\u9650&gt\uff1bls-al/dev/fb0crw-rw-1\u6839\u89c6\u989129\uff0c0 4\u67084 00\uff1a21/dev/fb0&gw\u3002\n\u4e3a\u4e86\u63a9\u9970sudo\u4e3a\u4ec0\u4e48\u4f1a\u795e\u79d8\u5730\u4e0d\u8d77\u4f5c\u7528\uff0c\u4e0b\u9762\u5411\u663e\u793a\u5668\u5199\u51fa\u4e00\u4e32\u566a\u97f3\uff1a\n\u592a\u68d2\u4e86\uff01\u5185\u6838\u5e27\u7f13\u51b2\u533a\u6587\u6863\u6709\u4e00\u4e9b\u4e00\u822c\u4fe1\u606f\uff0c\u4f46\u8981\u70b9\u662f/dev/fb0\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e/dev\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u5185\u5b58\u8bbe\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u6587\u4ef6\u4e00\u6837\u5199\u5165\u5b83\u3002\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u6240\u4ee5\u4efb\u4f55\u5199\u5165\u90fd\u5c06\u8986\u76d6\u73b0\u6709\u7684\u503c\uff0c\u5f53\u63a7\u5236\u53f0\u63d0\u793a\u7acb\u5373\u8986\u76d6\u566a\u58f0\u65f6\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8be5\u503c\u3002\n\u6b64\u5916\uff0c\u60a8\u751a\u81f3\u53ef\u4ee5\u8bfb\u53d6\u5e27\u7f13\u51b2\u533a\uff0c\u4f7f\u7528cp/dev/fb0\u622a\u5c4f\u8fdb\u884c\u622a\u56fe\uff0c\u8fd9\u5728\u6211\u7528\u624b\u673a\u62cd\u4e00\u5927\u5806\u7167\u7247\u4e4b\u524d\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\n\u597d\u7684\uff0cStackExchange\u7684\u7b54\u6848\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5199\u51fa\u7ea2\u8272\u65b9\u6846\u7684\u811a\u672c\uff0c\u4f46\u662f\u6211\u60f3\u5c1d\u8bd5\u4e00\u4e0b\u6e10\u53d8\u3002\u5728\u6392\u5217\u4e86\u4ee5\u4e0b\u51e0\u884c\u6570\u6b21\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\uff1a\u76d1\u89c6\u5668\u4e00\u6b21\u5199\u5230\u4e00\u4e2a\u6c34\u5e73\u7ebf\u4e0a\uff0c\u84dd\u8272\u3001\u7eff\u8272\u3001\u7ea2\u8272\u3001\u963f\u5c14\u6cd5(\uff1f)\u6709\u4e00\u4e2a\u5b57\u8282\u3002\u6bcf\u50cf\u7d20(\u770b\u8d77\u6765\u50cf24\u4f4d\u771f\u5f69\u8272)\u3002\nxsize=1920 ysize=1200(&#39\uff1bdata.out&#39\uff1b\uff0c&#39\uff1bwb&#39\uff1b)as f\uff1afor y in range(0\uff0cysize)\uff1afor x in range(0\uff0cxsize)\uff1ar=int(min(x/(xsize/256)\uff0c255)g=int(min(y/(ysize/256)\uff0c255))b=0 f.\u3002\u5199((B).\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002\u5199((G).)\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002\u5199((R).\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002Write((0)\u3002TO_BYTES(1\uff0c\u5b57\u8282\u987a\u5e8f=&#39\uff1b\u5c0f&#39\uff1b)\u3002\n\u6211\u4e00\u76f4\u5728Linux\u63a7\u5236\u53f0(\u800c\u4e0d\u662fx\u670d\u52a1\u5668\u6216\u5176\u4ed6\u663e\u793a\u670d\u52a1\u5668)\u4e0a\u8fd0\u884c\u5b83\uff0c\u6211\u8ba4\u4e3a\u5b83\u53ea\u662f\u5c06\u6587\u672c\u548c\u57fa\u672c\u989c\u8272\u5448\u73b0\u5230\u5e27\u7f13\u51b2\u533a\u3002\u6211\u5e94\u8be5\u4e5f\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u6293\u8d77\u67e0\u6aac\uff0c\u8fd9\u662f\u6211\u4ee5\u524d\u7528\u8fc7\u7684\u4e00\u79cd\u4f4d\u56fe\u5b57\u4f53\u3002\u4f4d\u56fe\u5b57\u4f53\u5c06\u5b57\u7b26\u63cf\u8ff0\u4e3a\u4f4d\u7f51\u683c\uff0c\u65e0\u9700\u8fc7\u591a\u8003\u8651\u6587\u672c\u6e32\u67d3\u3001\u522b\u540d\u7b49\u65b9\u9762\u7684\u590d\u6742\u6027/\u6050\u6016\uff0c\u5373\u53ef\u8f7b\u677e\u6e32\u67d3\u3002\n\u6211\u5f00\u59cb\u4e86\u4e00\u4e2a\u7b80\u964b\u7684BDF\u6587\u4ef6\u9605\u8bfb\u5668\uff0c\u7136\u540e\u5f00\u59cb\u540e\u6094\u8fd9\u4e2a\u60f3\u6cd5\u548c\u6211\u7684python\u811a\u672c\uff0c\u7136\u800c\uff0c\u6211\u4ece\u5b57\u4f53\u4e2d\u751f\u6210\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u201c\u9501\u5b9a\u201d\u56fe\u6807\uff0c\u753b\u5230\u4e86\u5e27\u7f13\u51b2\u533a\uff01\u8fd9\u53ef\u4ee5\u6269\u5c55\u5230\u5199\u51fa\u4e00\u4e2a\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u540c\u6837\uff0c\u5b83\u771f\u7684\u5f88\u4e0d\u53ef\u9760\u3002\n\u597d\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5c06\u56fe\u50cf\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u533a\u5e76\u4e0d\u662f\u4e00\u4ef6\u5f88\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u5e73\u6ed1\u7684\u989c\u8272\u6e10\u53d8\uff0c\u56fe\u50cf\u53ea\u662f\u4e00\u79cd\u6587\u4ef6\u683c\u5f0f\uff0c\u6211\u4eec\u5fc5\u987b\u8bfb\u53d6\u50cf\u7d20\u6570\u636e\u5e76\u5c06\u5176\u7f16\u7801/\u8f6c\u50a8\u5230\u5e27\u7f13\u51b2\u533a\u3002\u6211\u5c06\u56fe\u50cf\u5bfc\u51fa\u4e3aTGA\u6587\u4ef6(\u4e3a\u4e86\u4fbf\u4e8e\u89e3\u6790\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u672a\u538b\u7f29\u7684\u683c\u5f0f\uff0c\u4e5f\u5c1d\u8bd5\u4e86BMP)\uff0c\u5e76\u4f7f\u7528pyTGA\u5c06\u56fe\u50cf\u76f4\u63a5\u5199\u51fa\u6765\u3002\u5de7\u5999\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Seek\u8df3\u8fc7\u50cf\u7d20\uff0c\u800c\u4e0d\u662f\u8ba9OffsetWrite\u8f93\u51fa\u9ed1\u8272\u50cf\u7d20\u3002\n\u5bfc\u5165sys\u5bfc\u5165\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u5165TGA\uff0c\u6761\u4ef6\u662flen(sys\u3002argv)&lt\uff1b4\uff1a\u6253\u5370(&#34\uff1b\u7528\u6cd5\uff1atga.py xsize xoff yoff\u8f93\u5165\u8f93\u51fa&#34\uff1b)sys\u3002exit(1)g_xsize=int(sys.\u3002argv[1])g_xoff=int(sys.\u3002argv[2])g_yoff=int(sys.\u3002argv[3])g_input=sys\u3002argv[4]g_output=sys\u3002argv[5]img=TGA\u3002image()img\u3002\u52a0\u8f7d(G_Input)\u6807\u9898=img\u3002\u4ee5f\uff1af\u5f62\u5f0f\u6253\u5f00(g_output\uff0c&#39\uff1bwb&#39\uff1b)\u7684\u6807\u9898(_HEADER)\u3002\u67e5\u627e(g_yoff*4*g_xsize\uff0cos\u3002SEEK_CUR)\u8868\u793a\u8303\u56f4\u5185\u7684y(\u6807\u9898\u3002IMAGE_HEIGHT)\uff1af\u3002\u67e5\u627e(g_xoff*4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u3002SEEK_CUR)\u8303\u56f4\u5185\u7684x(\u6807\u9898\u3002image_width)\uff1aP=img\u3002get_Pixel(y\uff0cx)f\u3002Write(p[2]\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002Write(p[1].\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002Write(p[0]\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002Write((0)\u3002TO_BYTES(1\uff0cbyteorder=&#39\uff1bLittle&#39\uff1b)f.\u3002Seek((g_xsize-\u6807\u9898\u3002image_width-g_xoff)*4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u3002\u67e5\u627e(_CUR)\u3002\n\u8fd9\u5bf9\u8fde\u63a5\u6211\u8111\u6d77\u4e2d\u7684\u4e00\u5806\u677e\u6563\u7684\u7ebf\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5b83\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48OpenGL\u7684\u6700\u540e\u4e00\u6b65\u662f\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u533a\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u53cc\u7f13\u51b2(\u6e32\u67d3\u5230\u9690\u85cf\u7f13\u51b2\u533a\uff0c\u7136\u540e\u4ea4\u6362)\u4f1a\u6709\u5e2e\u52a9(\u7279\u522b\u662f\u8003\u8651\u5230\u6211\u7684python\u7a0b\u5e8f\u6709\u591a\u6162)\u3002\n\u5728GUI\u65b9\u9762\uff0c\u6839\u636e\u6211\u6240\u53d1\u73b0\u7684\uff0c\u5f88\u591a\u81ea\u5b9a\u4e49GUI\u5f15\u64ce\u5927\u591a\u53ea\u662f\u5c06\u4f4d\u56fe\u548cX11\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u5f15\u64ce(\u201cMPlayer\u3001Links2\u3001Netsurf\u3001fbia\u3001[2]\u548cfim[3]\u4ee5\u53caGGI\u3001SDL\u3001GTK+\u548cQt\u201d\u7b49\u5e93)\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u533a\u3002\u4e00\u4e9b\u5927\u5b66\u73ed\u7ea7\u751a\u81f3\u4f7f\u7528Raspberry PI\u6765\u6446\u5f04\u5e27\u7f13\u51b2\u533a\uff0c\u90a3\u91cc\u6709\u4e00\u4e9b\u6709\u7528\u7684\u8bfb\u7269\uff0c\u56e0\u4e3a\u5b83\u7684\u67b6\u6784\u975e\u5e38\u7b80\u5355\u3002", "note_en": "I\u2019ve been thinking about cross platform GUIs, and one question led to the next and eventually Iwas asking: how do pixels end up on the monitor? A  pretty neat stack overflowresponse answers:\n The image displayed on the monitor is stored in your computer\u2019s video RAM onthe graphics card in a structure called a framebuffer.\n The data in the video RAM can be generated by the GPU or by the CPU. Thevideo RAM is continuously read out by a specialized DMA component on the videocard and sent to the monitor. The signal output to the monitor is either ananalog signal (VGA) where the color components are sent through digital toanalog converters before leaving the card, or a digital signal in the case ofHDMI or DVI.\n Now, you probably realize that for a 1920x1080 display with 4 bytes perpixel, you only need about 8 MB to store the image, but the video RAM in yourcomputer is probably many times that size. This is because the video RAM is notonly intended for storing the framebuffer. The video RAM is directly connectedto the GPU, a special purpose processor designed for efficient 3D rendering andvideo decoding.\n Which is super informative, and also explains why my monitors are directly plugged into my GPU via DVI.Another answer I found said no modern operating system will let you access the framebuffer directly.BUT LUCKILY THAT\u2019S WRONG. With another  stackexchangetip,it\u2019s as easy as:\n &gt;  cat /dev/urandom  &gt; /dev/fb0 -bash: /dev/fb0: Permission denied &gt;  sudo cat /dev/urandom  &gt; /dev/fb0 -bash: /dev/fb0: Permission denied &gt;  ls  -al /dev/fb0crw-rw---- 1 root video 29, 0 Apr 4 00:21 /dev/fb0 &gt;  sudo adduser seena video &gt;  cat /dev/urandom  &gt; /dev/fb0\n Glossing over why sudo would mysteriously not work, this writes a bunch of noise out to the monitor:\n  Awesome! The  kernel framebuffer docshave some general info, but the gist is  /dev/fb0 acts like any other memory device in  /dev andwe can write to it like a file. Since it\u2019s just a memory buffer, any write will overwrite theexisting value, which you can see when the console prompt immeidately overwrites the noise.\n Also, you can even read from the framebuffer, taking a screenshot with  cp /dev/fb0screenshot which would have been helpful before I took a bunch of pictures with my phone.\n  Alright, so the stackexchange answer also gives a script to write out a red box, but I wanted totake a shot at a gradient. After permuting the following lines a bunch of times, I settled on: themonitor is written to one horizontal line at a time, with one byte for Blue,Green,Red,Alpha(?) perpixel (seems like 24-bit true color).\n xsize  =  1920 ysize  =  1200 with  open ( &#39;data.out&#39; ,  &#39;wb&#39; )  as  f :  for  y  in  range ( 0 , ysize ):  for  x  in  range ( 0 , xsize ):  r  =  int ( min ( x  /  ( xsize / 256 ), 255 ))  g  =  int ( min ( y  /  ( ysize / 256 ), 255 ))  b  =  0  f . write (( b ) . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write (( g ) . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write (( r ) . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write (( 0 ) . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))\n   I\u2019ve been running this from the linux console (rather than x server or another display server),which I believe is just rendering text and basic colors to the framebuffer. I should be able to dothat too. I grabbed  Lemon, a  bitmapfont I used to use. Bitmap fontsdescribe characters as a grid of bits, which can be easily rendered without much thought about thecomplexity/horrors of text rendering, aliasing and the likes.\n I started a janky reader for BDF files, and then started to regret this idea and my python script.Nevertheless, I produced a single \u201clock\u201d icon from the font, drawn to the framebuffer! This could beextended to write out a text string, but again, it was really janky.\n   Okay so at this point, it\u2019s not much of a stretch to render out an image to the framebuffer. We\u2019vealready got a smooth color gradient and an image is just a file format we have to read pixel data toand encode/dump to the framebuffer. I exported an image as a TGA file (just an uncompressed formatfor easy parsing, also tried BMP), and used  pyTGA to write theimage straight out. What\u2019s neat is you can use  seek to skip over pixels, rather than having offsetwrite out black pixels.\n  import  sys import  os import  tga if  len ( sys . argv )  &lt;  4 :  print ( &#34;Usage: tga.py xsize xoff yoff input output&#34; )  sys . exit ( 1 ) g_xsize  =  int ( sys . argv [ 1 ]) g_xoff  =  int ( sys . argv [ 2 ]) g_yoff  =  int ( sys . argv [ 3 ]) g_input  =  sys . argv [ 4 ] g_output  =  sys . argv [ 5 ] img  =  tga . Image () img . load ( g_input ) header  =  img . _header with  open ( g_output ,  &#39;wb&#39; )  as  f :  f . seek ( g_yoff  *  4  *  g_xsize ,  os . SEEK_CUR )  for  y  in  range ( header . image_height ):  f . seek ( g_xoff  *  4 ,  os . SEEK_CUR )  for  x  in  range ( header . image_width ):  p  =  img . get_pixel ( y , x )  f . write ( p [ 2 ] . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write ( p [ 1 ] . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write ( p [ 0 ] . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . write (( 0 ) . to_bytes ( 1 ,  byteorder = &#39;little&#39; ))  f . seek (( g_xsize  -  header . image_width  -  g_xoff )  *  4 ,  os . SEEK_CUR )\n     This has been super useful in connecting a bunch of loose threads I\u2019ve had in my mind. It explains,for example, why the final step of OpenGL is rendering out to a framebuffer, and why  doublebuffering (rendering to ahidden buffer, then swapping) helps (especially given how slow my python program is).\n On the GUI side, From what I\u2019ve found, a lot of custom GUI engines mostly just blit together bitmaps, and X11, along with  manyothers (\u201cMPlayer, links2, Netsurf, fbida,[2] andfim[3] and libraries such as GGI, SDL, GTK+, and Qt\u201d) render out to the framebuffer. Some university classes even use Raspberry PIs to mess around with theframebuffer, and there\u2019s some useful reading there because the architecture is very straightforward.", "posttime": "2020-06-03 01:02:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "writing,dev", "title": "\u6b63\u5728\u5199\u5165\u5e27\u7f13\u51b2\u533a", "title_en": "Writing to the Framebuffer", "transed": 1, "url": "http://seenaburns.com/2018/04/04/writing-to-the-framebuffer/", "via": "", "real_tags": ["writing", "dev"]}, {"category": "", "categoryclass": "", "imagename": "f3bab508c3a1619447521e8dc4a7891b.jpg", "infoid": 1004854, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u540e\u6765\u5e7f\u4e3a\u4eba\u77e5\u7684\u5ba3\u793c\u5854\u8ba1\u5212\u7684\u57fa\u7840\u662f\u65e9\u5148\u521b\u5efa\u76d1\u89c6\u540d\u5355\u7684\u52aa\u529b\uff0c\u6700\u521d\u662f\u9488\u5bf9\u603b\u7edf\u53d7\u5230\u7684\u7591\u4f3c\u5a01\u80c1\uff0c\u9488\u5bf9\u6bd2\u8d29\uff0c\u7136\u540e\u662f\u6839\u636e\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u9488\u5bf9\u201c\u56fd\u5185\u6050\u6016\u4e3b\u4e49\u201d\u3002\n\u9a6c\u4fee\u00b7M\u00b7\u827e\u5fb7\u548c\u5a01\u5ec9\u00b7\u4f2f\u5c14\uff0c\u201c\u56fd\u5bb6\u5b89\u5168\u5c40\u8bc9\u9a6c\u4e01\u00b7\u8def\u5fb7\u00b7\u91d1\u3001\u7a46\u7f55\u9ed8\u5fb7\u00b7\u963f\u91cc\u3001\u963f\u7279\u00b7\u5e03\u8d6b\u74e6\u5c14\u5fb7\u3001\u5f17\u5170\u514b\u00b7\u4e18\u5947\u7b49\u4eba\uff0c\u201d\uff0c\u201c\u56fd\u5bb6\u5b89\u5168\u6863\u6848\u9986\u201d\uff0c2020\u3002\n\u2295\u4ece\u5de6\u81f3\u53f3\uff1a\u9a6c\u4e01\u00b7\u8def\u5fb7\u00b7\u91d1\u3001\u6797\u767b\u00b7B\u00b7\u7ea6\u7ff0\u900a\u603b\u7edf\u3001\u60e0\u7279\u5c3c\u00b7\u6768\u548c\u8a79\u59c6\u65af\u00b7\u6cd5\u9ed8\u3002\u6797\u767b\u00b7B\u00b7\u7ea6\u7ff0\u900a\u603b\u7edf\u56fe\u4e66\u9986\uff0c\u5728\u7ebf\u7167\u7247\u6863\u6848\u9986\uff0cW425-21\u3002\n20\u4e16\u7eaa60\u5e74\u4ee3\u672b\uff0c\u968f\u7740\u56fd\u5185\u52a8\u4e71\u7684\u52a0\u5267\uff0c\u6797\u767b\u00b7\u7ea6\u7ff0\u900a(Lyndon Johnson)\u603b\u7edf\u8d8a\u6765\u8d8a\u62c5\u5fc3\u6c11\u6743\u8fd0\u52a8\u3001\u548c\u5e73\u56e2\u4f53\u3001\u519b\u4e8b\u9003\u5175\u548c\u9ed1\u4eba\u6743\u529b\u7ec4\u7ec7\u662f\u7531\u5916\u56fd\u53db\u4e71\u52bf\u529b(\u201c\u83ab\u65af\u79d1\u91d1\u201d)\u8d44\u52a9\u7684\u3002\u8054\u90a6\u653f\u5e9c\u5df2\u7ecf\u5728\u5c1d\u8bd5\u81ea\u52a8\u76d1\u63a7\u5916\u56fd\u901a\u4fe1\uff0c\u5e76\u6162\u6162\u91c7\u53d6\u63aa\u65bd\uff0c\u5c06\u8fd9\u4e00\u8033\u6735\u5bf9\u51c6\u81ea\u5df1\u7684\u516c\u6c11\u3002\u8fd9\u4e00\u52aa\u529b\u57281969\u5e74\u8fbe\u5230\u9876\u5cf0\uff0c\u5f53\u65f6\u6709\u4e00\u4e2a\u540d\u4e3a\u5ba3\u793c\u5854\u7684\u9879\u76ee\u3002\u8be5\u9879\u76ee\u4e8e1969\u5e74\u6b63\u5f0f\u547d\u540d\u4e3a\u5c16\u5854\uff0c\u91c7\u7528\u4e86\u4e0d\u540c\u5bfb\u5e38\u7684\u7a0b\u5e8f\u3002\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u5728\u6ca1\u6709\u901a\u5e38\u5e8f\u5217\u5316\u7684\u60c5\u51b5\u4e0b\u5206\u53d1\u4e86\u62a5\u544a\u3002\u5b83\u4eec\u88ab\u8bbe\u8ba1\u6210\u770b\u8d77\u6765\u50cfHUMINT\u62a5\u544a\uff0c\u800c\u4e0d\u662fSIGINT\uff0c\u8bfb\u8005\u627e\u4e0d\u5230\u53d1\u7aef\u673a\u6784\u3002\u51e0\u5e74\u540e\uff0c\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u7684\u5f8b\u5e08\u9996\u5148\u67e5\u770b\u4e86\u7a0b\u5e8f\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u4ed6\u8868\u793a\uff0c\u6d89\u6848\u4eba\u5458\u4f3c\u4e4e\u660e\u767d\uff0c\u8fd9\u9879\u884c\u52a8\u5373\u4f7f\u4e0d\u662f\u5b8c\u5168\u975e\u6cd5\uff0c\u4e5f\u662f\u58f0\u540d\u72fc\u85c9\u3002\u673a\u6784\u95f4\u5b89\u5168\u5206\u7c7b\u4e0a\u8bc9\u59d4\u5458\u4f1a(ISCAP)2013\u5e747\u6708\u7531\u56fd\u5bb6\u5b89\u5168\u6863\u6848\u9986\u8fdb\u884c\u89e3\u5bc6\u5ba1\u67e5\u3002\u636e\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u62a5\u9053\uff1a\u5927\u536b\u00b7\u5361\u6069\uff0c\u201c\u5927\u8033\u6735\u8fd8\u662f\u8001\u5927\u54e5\uff1f\u201d\uff0c\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\uff0c1976\u5e745\u670816\u65e5\u3002\n\u9664\u4e86\u5438\u6536\u548c\u5410\u51fa\u6bcf\u5929\u4ece\u56fd\u5916\u622a\u83b7\u7684\u5927\u91cf\u4fe1\u606f\u5916\uff0cNSA\u8fd8\u4ee5\u4e0d\u6b63\u5f53\u7684\u65b9\u5f0f\u7a83\u542c\u4e86\u8bb8\u591a\u7f8e\u56fd\u4eba\u7684\u5bf9\u8bdd\uff0c\u6bd4\u5982\u53cd\u6218\u6297\u8bae\u8005\u672c\u6770\u660e\u00b7\u65af\u6ce2\u514b(Benjamin Spock)\u548c\u7b80\u00b7\u65b9\u8fbe(Jane Fonda)\uff0c\u4ee5\u53ca\u56fd\u5bb6\u9ebb\u9189\u54c1\u548c\u5371\u9669\u836f\u7269\u5c40(National Bureau Of Drug And Disk Drug)\u548c\u5176\u4ed6\u653f\u5e9c\u673a\u6784\u73b0\u4efb\u5c40\u957f\u5c0f\u9a6c\u4e01\u00b7\u8def\u5fb7\u00b7\u91d1\u535a\u58eb(Dr.R.Martin Luther King Jr.)\u7684\u7ee7\u4efb\u8005\u62c9\u5c14\u592b\u00b7\u963f\u4f2f\u7eb3\u897f\u7267\u5e08(Rev.R.Ralph Abernathy Jr.)\uff0c\u5b83\u5de8\u5927\u7684\u6280\u672f\u80fd\u529b\u5df2\u7ecf\u4fb5\u5165\u4e86\u56fd\u5185\u9886\u57df\u3002\n\u8be5\u8282\u76ee\u5305\u62ec\u4e00\u4efd\u9488\u5bf9\u5c0f\u9a6c\u4e01\u00b7\u8def\u5fb7\u00b7\u91d1(Martin Luther King Jr.)\u548c\u60e0\u7279\u5c3c\u00b7\u6768(Whitney Young)(\u4e0a\u56fe\u4e0e\u7ea6\u7ff0\u900a\u603b\u7edf\u5408\u5f71)\u7684\u5177\u4f53\u89c2\u5bdf\u540d\u5355\u3002\u5b83\u5b8c\u5168\u5728\u6ca1\u6709\u53f8\u6cd5\u76d1\u7763\u6216\u7acb\u6cd5\u5baa\u7ae0\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u3002\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u7684\u6210\u7acb\u662f\u4e3a\u4e86\u786e\u4fdd\u7f8e\u56fd\u901a\u4fe1\u7684\u5b89\u5168\uff0c\u5e76\u6536\u96c6\u6709\u5173\u5916\u56fd\u5bf9\u624b\u7684\u60c5\u62a5\uff0c\u5b83\u6ca1\u6709\u9488\u5bf9\u7f8e\u56fd\u4eba\u7684\u6743\u529b\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8be5\u673a\u6784\u4ece\u672a\u6709\u4eba\u56e0\u8fdd\u6cd5\u800c\u88ab\u8ffd\u7a76\u8d23\u4efb\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u7684\u4efb\u52a1\u662f\u5e7f\u6cdb\u76d1\u63a7\u7f8e\u56fd\u7684\u901a\u4fe1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u6700\u597d\u7684\u5de5\u5177\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002IBM Stretch\u8d85\u7ea7\u8ba1\u7b97\u673a\u53ca\u5176\u5b9a\u5236\u7684NSA\u6a21\u5757--\u201c\u6536\u83b7\u201d\u3001\u201c\u62d6\u62c9\u673a\u201d\u548c\u201c\u9ed1\u9ea6\u201d--\u662f\u90a3\u4e2a\u65f6\u4ee3\u6700\u6709\u80fd\u529b\u7684\u673a\u5668\u3002\u5b83\u662f\u4e13\u95e8\u4e3a\u6ee1\u8db3\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u201c\u5f3a\u8c03\u5904\u7406\u5927\u91cf\u6570\u636e\uff0c\u4ee5\u53ca\u5728\u975e\u6570\u503c\u903b\u8f91\u8fc7\u7a0b\u4e2d\u5177\u6709\u6781\u5927\u7684\u7075\u6d3b\u6027\u548c\u591a\u6837\u6027\u201d\u800c\u5efa\u9020\u7684\u3002Samuel S.Snyder\uff0c\u201c\u7f8e\u56fd\u5bc6\u7801\u5b66\u7ec4\u7ec7\u5bf9\u6570\u5b57\u8ba1\u7b97\u673a\u4ea7\u4e1a\u7684\u5f71\u54cd\u201d\uff0c\u5bc6\u7801\u5b66\u9891\u8c317/8\uff0c4/2(1977/1978)\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u5e76\u4e0d\u6253\u7b97\u5904\u7406\u6570\u5b57\u94f6\u884c\u5bf9\u8d26\u5355\u6216\u8ba1\u7b97\u4e9a\u539f\u5b50\u7c92\u5b50\u7684\u8def\u7ebf\uff0c\u5b83\u662f\u5728\u5904\u7406\u5404\u79cd\u683c\u5f0f\u7684\u5927\u91cf\u901a\u4fe1\u6570\u636e\u3002\n\u5609\u5b9e\u662f\u4e00\u79cd\u6d41\u5904\u7406\u5355\u5143\uff0c\u6bcf\u79d2\u53ef\u4ee5\u5904\u74063,000,000\u4e2a\u5b57\u7b26\u3002\u5173\u952e\u5b57\u641c\u7d22\u6bcf\u5206\u949f\u53ef\u4ee5\u626b\u63cf\u5927\u7ea630,000\u5c01\u622a\u83b7\u7684\u90ae\u4ef6\u3002\u572820\u4e16\u7eaa60\u5e74\u4ee3\u6839\u672c\u6ca1\u6709\u7c7b\u4f3c\u7684\u673a\u5668\u3002\u62d6\u62c9\u673a\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u78c1\u5e26\u5355\u5143\uff0c\u53ef\u4ee5\u5bb9\u7eb3440\u4ebf\u4e2a\u5b57\u7b26(\u7ea640 GB)\uff0c\u201c\u6bcf\u4e2a\u62d6\u62c9\u673a\u5377\u8f74\u5305\u542b\u4e00\u67611800\u82f1\u5c3a\u957f\u7684\u78c1\u5e26\uff0c\u80fd\u591f\u5bb9\u7eb31.2\u4ebf\u4e2a\u5b57\u7b26\u3002\u201d\u4ed6\u8bf4\uff1a\u201c\u78c1\u5e26\u5377\u8f74\u8fde\u540c\u4e00\u4e2a\u6536\u5e26\u5377\u8f74\u88ab\u5bc6\u5c01\u5728\u4e00\u4e2a\u9632\u5c18\u76d2\u5185\uff0c\u8be5\u9632\u5c18\u76d2\u53ef\u7531\u81ea\u52a8\u78c1\u5e26\u5e93\u5b89\u88c5\u3001\u62c6\u5378\u3001\u50a8\u5b58\u548c\u53d6\u56de\u3002\u201d[\u2026]\u3002\u62d6\u62c9\u673a\u53ef\u4ee5\u572818\u79d2\u5185\u5c06\u4e00\u4e2a\u58a8\u76d2\u6362\u6210\u53e6\u4e00\u4e2a\u58a8\u76d2\u3002\u201c\u3002\u201cIBM Archives\uff1aTractor\u201d\uff0cIBM.com\uff0c2003\u548cRye\u63d0\u4f9b\u8fdc\u7a0b\u7ec8\u7aef\u8bbf\u95ee\uff0c\u5141\u8bb8\u6d77\u5916\u7279\u5de5\u8f93\u5165\u4fe1\u53f7\u60c5\u62a5\u3002\n\u5728\u91d1\u88ab\u6697\u6740\u5f15\u53d1\u6570\u5929\u7684\u5185\u4e71\u4e4b\u524d\uff0c\u4fe1\u53f7\u60c5\u62a5\u90e8\u95e8\u5229\u7528\u7535\u8111\u5e2e\u52a9\u653f\u5e9c\u8bcb\u6bc1\u91d1\u5e76\u7834\u574f\u4ed6\u7684\u4e8b\u4e1a\u3002\u5927\u578b\u7ec4\u7ec7\u603b\u662f\u6295\u8d44\u4e8e\u50cfSTRAND\u8fd9\u6837\u7684\u673a\u5668\uff0c\u56e0\u4e3a\u4fe1\u606f\u5f80\u5f80\u662f\u51b2\u7a81\u4e2d\u6700\u6709\u6548\u7684\u6b66\u5668\u3002\n\u5f53\u7f8e\u56fd\u518d\u6b21\u9677\u5165\u51b2\u7a81\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u66fe\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u50cf\u9a6c\u4e01\u00b7\u8def\u5fb7\u00b7\u91d1\u548c\u60e0\u7279\u5c3c\u00b7\u6768\u8fd9\u6837\u5e7f\u53d7\u5c0a\u656c\u7684\u516c\u6c11\u88ab\u81ea\u5df1\u7684\u653f\u5e9c\u6000\u7591\u662f\u56fd\u5185\u6050\u6016\u5206\u5b50\u3002\u6545\u4e8b\u53ef\u4ee5\u6539\u53d8\u3002\u4f46\u6211\u4eec\u5fc5\u987b\u514b\u670d\u5e2d\u5377\u7f8e\u56fd\u7684\u865a\u5047\u4fe1\u606f\u548c\u6050\u60e7\u3002", "note_en": "What became known as the MINARET program had its basis in earlier efforts to create watch lists initially for suspected threats to the president, for drug dealers, and then, according to the NSA history, for \u201cdomestic terrorism.\u201d\n Matthew M. Aid and William Burr, \u201c\u2018 Disreputable If Not Outright Illegal\u2019 The National Security Agency Versus Martin Luther King, Muhammad Ali, Art Buchwald, Frank Church, Et Al.\u201d, The National Security Archive, 2020.\n \u2295   From left to right: Martin Luther King Jr., President Lyndon B. Johnson, Whitney Young, and James Farmer. Lyndon B. Johnson Presidential Library, On-line Photo Archive, W425-21.\n As civil unrest grew in the late 1960s, President Lyndon Johnson became increasingly concerned that civil rights movements, peace groups, military deserters, and black power organizations were funded by insurgent foreign powers (\u201cMoscow gold\u201d). The federal government was already attempting to automate the monitoring of foreign communications and had slowly taken steps to turn this ear on its own citizens. The effort culminated in 1969 with an program called MINARET.    \u201cThe project, which became known officially as Minaret in 1969, employed unusual procedures. NSA distributed reports without the usual serialization. They were designed to look like HUMINT reports rather than SIGINT and readers could find no originating agency. Years later the NSA lawyer who first looked at the procedural aspects stated that the people involved seemed to understand that the operation was disreputable if not outright illegal.\u201d   Interagency Security Classification Appeals Panel (ISCAP) July 2013 declassification  review by the National Security Archives.   As reported by the  New York Times:    David Kahn, \u201cBig Ear Or Big Brother?\u201d,  The New York Times, May 16, 1976.\n In addition to sucking up and disgorging its daily load of intercepts from abroad,  the N.S.A. had improperly eavesdropped on the conversations of many Americans, such as the antiwar protesters Benjamin Spock and Jane Fonda and the Rev.\u00a0Ralph Abernathy, successor to Dr.\u00a0Martin Luther King Jr., current director of the National Bureau of Narcotics and Dangerous Drugs and other Government agencies,  its vast technological capabilities had invaded the domestic field.\n The program included a specific watch list that targeted both Martin Luther King Jr.\u00a0and Whitney Young (pictured above with President Johnson). It ran totally without judicial oversight or legislative charter. The NSA, which was created to assure the security of American communications and gather intelligence on foreign adversaries, had no authority to target Americans. Regardless, no one at the agency was ever held accountable for breaking the law.\n  The NSA was tasked with broadly monitoring American communications because they had the best tools for the job. The IBM Stretch supercomputer with its custom NSA modules, Harvest, Tractor, and Rye, was the most capable machine of its era. It was specifically built to satisfy the NSA\u2019s \u201cemphasis on manipulation of large volumes of data and on great flexibility and variety in nonnumerical logic processes.\u201d    Samuel S. Snyder, \u201cInfluence Of U.S. Cryptologic Organizations On The Digital Computer Industry\u201d,  Cryptologic Spectrum 7/8, 4/2 (1977/1978).\n In other words, the NSA wasn\u2019t looking to process numerical bank statements or compute the routes of subatomic particles, it was processing large amounts of communication data in a variety of formats.\n Harvest was a stream processing unit that could process 3,000,000 characters a second. A keyword search could scan roughly 30,000 intercepted messages/minute. There was simply no equivalent machine in the 1960s.  Tractor was an enormous magnetic tape unit that could hold 44 billion characters (~40 GB),    \u201cEach TRACTOR reel contained an 1800-foot-long tape, capable of holding 120 million characters.\u201d   \u201cThe tape reel, together with a take-up reel, was enclosed in a dust-proof cartridge designed to be mounted, dismounted, stored and retrieved by the automated tape library. [\u2026] TRACTOR could swap one cartridge for another in 18 seconds.\u201d   \u201c IBM Archives: TRACTOR\u201d,  ibm.com, 2003   and  Rye offered remote terminal access that allowed agents abroad to input signals intelligence.\n Before the assassination of King ignited days of civil unrest, signals intelligence used computers to help in the government effort to defame King and undermine his cause. Large organizations have always invested in machines like Stretch because information is often the most effective weapon in a conflict.\n As America is once again gripped in strife, remember that there was a time when widely admired citizens like Martin Luther King and Whitney Young were suspected of being domestic terrorists by their own government. The narrative can change. But we must overcome the  disinformation and fear that has overtaken the United States.", "posttime": "2020-06-03 00:44:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "strech,\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40", "title": "IBM Strech\u3001NSA\u548cMLK", "title_en": "IBM Strech, the NSA, and MLK", "transed": 1, "url": "https://schmud.de/posts/2020-06-02-mlk.html", "via": "", "real_tags": ["strech", "\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004853, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "if cv.Container.LivenessProbe==nil{cv.addFailure(messages.LivenessProbeFailure\uff0cconf.HealthChecks.LivenessProbeMissing\uff0category\uff0cid)}\u5426\u5219{cv.addSuccess(messages.LivenessProbeSuccess\uff0category\uff0cid)}\u3002\n\u6210\u529f\u6d88\u606f\uff1a\u5df2\u914d\u7f6e\u6d3b\u52a8\u63a2\u6d4b\u5931\u8d25\u6d88\u606f\uff1a\u5e94\u914d\u7f6e\u6d3b\u52a8\u63a2\u6d4b\u7c7b\u522b\uff1a\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u63a7\u5236\u5668\uff1a\u6392\u9664\uff1a-\u4f5c\u4e1a-CronJobContainers\uff1a\u6392\u9664\uff1a-initContainertarget\uff1a\u5bb9\u5668\u67b6\u6784\uff1a&#39\uff1b$SCHEMA&#39\uff1b\uff1ahttp://json-schema.org/draft-07/schema\u7c7b\u578b\uff1a\u9700\u8981\u5bf9\u8c61\uff1a-livenessProbe\u5c5e\u6027\uff1alivenessProbe\uff1aType\uff1aObject Not\uff1aConst\uff1aNULL\u3002\n\n\n\u8054\u7f51\uff1ahostNetworkSet\uff1a\u8b66\u544ahostPortSet\uff1awarningsecurity\uff1arunAsPrivileged\uff1a\u9519\u8bef\u529f\u80fd\uff1a\u9519\u8bef\uff1aifAnyAdded\uff1a-SYS_ADMIN-NET_ADMIN-ALL\u8b66\u544a\uff1aifAnyAddedBeyond\uff1a-Chown-DAC_Override-FSETID\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u5c06\u9519\u8bef\u66f4\u6539\u4e3a\u5371\u9669\uff0c\u4ee5\u533a\u5206\u610f\u5916\u9519\u8bef\u548c\u5931\u8d25\u7684\u68c0\u67e5\u3002\u867d\u7136\u8f93\u51fa\u683c\u5f0f\u4e5f\u5f97\u5230\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7b80\u5316\uff0c\u4f46\u5b83\u5e76\u4e0d\u5b8c\u5168\u9762\u5411\u7528\u6237\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\u4f46\u662f\u5982\u679c\u4f60\u6709\u5174\u8da3\u770b\u7684\u8bdd\uff0c\n\u90a3\u4e48\u5317\u6781\u661f\u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48\u5462\uff1f", "note_en": "if cv.Container.LivenessProbe == nil { cv.addFailure( messages.LivenessProbeFailure, conf.HealthChecks.LivenessProbeMissing, category, id)} else { cv.addSuccess(messages.LivenessProbeSuccess, category, id)}\n successMessage: Liveness probe is configuredfailureMessage: Liveness probe should be configuredcategory: Health Checkscontrollers: exclude: - Job - CronJobcontainers: exclude: - initContainertarget: Containerschema: &#39;$schema&#39;: http://json-schema.org/draft-07/schema type: object required: - livenessProbe properties: livenessProbe: type: object not: const: null\n \n  \n        networking: hostNetworkSet: warning hostPortSet: warningsecurity: runAsPrivileged: error capabilities: error: ifAnyAdded: - SYS_ADMIN - NET_ADMIN - ALL warning: ifAnyAddedBeyond: - CHOWN - DAC_OVERRIDE - FSETID\n  Note that we also changed  error to  danger to differentiate between unexpected errors and failing checks. While output format has also been simplified a bunch, it\u2019s not entirely user-facing, so we won\u2019t go into it here. But if you\u2019re interested in seeing it,\n So what\u2019s next for Polaris?", "posttime": "2020-06-03 00:44:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "kubernetes,livenessprobe", "title": "Polaris 1.0\uff1aKubernetes\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6700\u4f73\u5b9e\u8df5", "title_en": "Polaris 1.0: Best Practices for Kubernetes Workloads", "transed": 1, "url": "https://www.fairwinds.com/blog/fairwinds-polaris-1.0-best-practices-for-kubernetes-workloads", "via": "", "real_tags": []}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004851, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Tor\u6d4f\u89c8\u56689.5\u73b0\u5728\u53ef\u4ee5\u4eceTor\u6d4f\u89c8\u5668\u4e0b\u8f7d\u9875\u9762\u548c\u6211\u4eec\u7684\u5206\u53d1\u76ee\u5f55\u4e2d\u83b7\u5f97\u3002Android\u7248\u672c\u4e5f\u53ef\u4ee5\u5728Google Play\u4e0a\u4e70\u5230\uff0c\u7b2c\u4e8c\u5929\u5e94\u8be5\u53ef\u4ee5\u4eceF-Droid\u4e0a\u4e70\u5230\u3002\n\u6258\u5c14\u7684\u6d0b\u8471\u8def\u7531\u4ecd\u7136\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u5b9e\u73b0\u7aef\u5230\u7aef\u533f\u540d\u901a\u4fe1\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u901a\u8fc7\u6d0b\u8471\u670d\u52a1(.onion\u5730\u5740)\uff0c\u7f51\u7ad9\u7ba1\u7406\u5458\u53ef\u4ee5\u4e3a\u4ed6\u4eec\u7684\u7528\u6237\u63d0\u4f9b\u65e0\u5143\u6570\u636e\u6216\u5411\u4efb\u4f55\u7b2c\u4e09\u65b9\u9690\u85cf\u5143\u6570\u636e\u7684\u533f\u540d\u8fde\u63a5\u3002\u6d0b\u8471\u670d\u52a1\u4e5f\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u51e0\u79cd\u89c4\u907f\u5ba1\u67e5\u7684\u6280\u672f\u4e4b\u4e00\uff0c\u8fd9\u79cd\u6280\u672f\u5141\u8bb8\u7528\u6237\u7ed5\u8fc7\u5ba1\u67e5\uff0c\u540c\u65f6\u4fdd\u62a4\u81ea\u5df1\u7684\u9690\u79c1\u548c\u8eab\u4efd\u3002\n\u7b2c\u4e00\u6b21\uff0c\u684c\u9762\u4e0a\u7684Tor\u6d4f\u89c8\u5668\u7528\u6237\u5c06\u80fd\u591f\u5728\u7f51\u7ad9\u63d0\u4f9b\u6d0b\u8471\u7f51\u7ad9\u65f6\u81ea\u52a8\u9009\u62e9\u4f7f\u7528\u8fd9\u4e9b\u7f51\u7ad9\u3002\u591a\u5e74\u6765\uff0c\u4e00\u4e9b\u7f51\u7ad9\u5df2\u7ecf\u9690\u5f62\u5730\u5c06\u6d0b\u8471\u670d\u52a1\u4e0e\u66ff\u4ee3\u670d\u52a1(alt-svc)\u7ed3\u5408\u4f7f\u7528\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u73b0\u5728\uff0c\u5982\u679c\u7f51\u7ad9\u60f3\u8ba9\u7528\u6237\u4e86\u89e3\u4ed6\u4eec\u7684\u6d0b\u8471\u670d\u52a1\uff0c\u9080\u8bf7\u4ed6\u4eec\u901a\u8fc7.onion\u5730\u5740\u5347\u7ea7\u4ed6\u4eec\u7684\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u52a0\u5165\u673a\u5236\u3002\n\u7f51\u7ad9\u53d1\u5e03\u8005\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0HTTP\u5934\u6765\u5411Tor\u7528\u6237\u5ba3\u4f20\u4ed6\u4eec\u7684\u6d0b\u8471\u670d\u52a1\u3002\u5f53\u901a\u8fc7Tor\u6d4f\u89c8\u5668\u8bbf\u95ee\u540c\u65f6\u542f\u7528\u4e86.onion\u5730\u5740\u548c\u6d0b\u8471\u4f4d\u7f6e\u7684\u7f51\u7ad9\u65f6\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u7528\u6237\u7f51\u7ad9\u7684\u6d0b\u8471\u670d\u52a1\u7248\u672c\uff0c\u5e76\u8981\u6c42\u7528\u6237\u5728\u9996\u6b21\u4f7f\u7528\u65f6\u9009\u62e9\u52a0\u5165\u4ee5\u5347\u7ea7\u5230\u6d0b\u8471\u670d\u52a1\u3002\n\u60f3\u8981\u7ed9\u4ed6\u4eec\u7684\u7f51\u7ad9\u589e\u52a0\u989d\u5916\u5b89\u5168\u4fdd\u969c\u7684\u6d0b\u8471\u670d\u52a1\u7ba1\u7406\u5458\u73b0\u5728\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u5bf9\u7528\u4e8e\u8bbf\u95ee\u63a7\u5236\u548c\u8eab\u4efd\u9a8c\u8bc1\u7684\u5bc6\u94a5\u3002ToR\u6d4f\u89c8\u5668\u7528\u6237\u53ef\u4ee5\u4fdd\u5b58\u5bc6\u94a5\uff0c\u5e76\u901a\u8fc7\u6d0b\u8471\u670d\u52a1\u8eab\u4efd\u9a8c\u8bc1\u90e8\u5206\u4e2d\u7684\u5173\u4e8e\uff1a\u9996\u9009\u9879#\u9690\u79c1\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\n\u4f20\u7edf\u4e0a\uff0c\u6d4f\u89c8\u5668\u901a\u8fc7\u5e26\u6709\u7eff\u8272\u9501\u56fe\u6807\u7684\u5b89\u5168\u4f20\u8f93\u534f\u8bae\u5448\u73b0\u7ad9\u70b9\u3002\u4f46\u57282019\u5e74\u5e74\u4e2d\uff0c\u4ee5\u524d\u7684\u7eff\u8272\u9501\u56fe\u6807\u53d8\u6210\u4e86\u7070\u8272\uff0c\u610f\u5728\u6de1\u5316\u9ed8\u8ba4(\u5b89\u5168)\u8fde\u63a5\u72b6\u6001\uff0c\u800c\u66f4\u591a\u5730\u5f3a\u8c03\u65ad\u5f00\u6216\u4e0d\u5b89\u5168\u7684\u8fde\u63a5\u3002\u4e3b\u8981\u7684\u6d4f\u89c8\u5668\uff0c\u5982Mozilla Firefox\u548cGoogle Chrome\u90fd\u660e\u767d\uff0c\u5982\u679c\u4ed6\u4eec\u4e3a\u4e24\u4e2a\u7528\u6237\u90e8\u7f72\u719f\u6089\u7684\u4f53\u9a8c\uff0c\u5bf9\u6574\u4e2a\u7528\u6237\u7fa4\u90fd\u662f\u6709\u5229\u7684\u3002\u6211\u4eec\u6b63\u5728\u8ddf\u8e2aFirefox\u7684\u8fd9\u4e00\u51b3\u5b9a\uff0c\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86Tor\u6d4f\u89c8\u5668\u7684\u5b89\u5168\u6307\u6807\uff0c\u4ee5\u4fbf\u7528\u6237\u5728\u8bbf\u95ee\u4e0d\u5b89\u5168\u7684\u7f51\u7ad9\u65f6\u66f4\u5bb9\u6613\u7406\u89e3\u3002\n\u6709\u65f6\u7528\u6237\u5f88\u96be\u5230\u8fbe\u6d0b\u8471\u7f51\u7ad9\u3002\u5728\u4ee5\u524d\u7248\u672c\u7684Tor Browser\u4e2d\uff0c\u5f53\u8fde\u63a5\u5230\u6d0b\u8471\u670d\u52a1\u65f6\u51fa\u73b0\u9519\u8bef\uff0c\u7528\u6237\u4f1a\u6536\u5230\u6807\u51c6\u7684Firefox\u9519\u8bef\u6d88\u606f\uff0c\u6ca1\u6709\u5173\u4e8e\u4ed6\u4eec\u65e0\u6cd5\u8fde\u63a5\u5230\u6d0b\u8471\u7ad9\u70b9\u7684\u539f\u56e0\u7684\u4fe1\u606f\u3002\n\u5728\u6b64\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u6539\u8fdb\u4e86Tor\u6d4f\u89c8\u5668\u4e0e\u7528\u6237\u5c31\u7528\u6237\u5c1d\u8bd5\u8bbf\u95ee\u6d0b\u8471\u670d\u52a1\u65f6\u53ef\u80fd\u53d1\u751f\u7684\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef\u548c\u7f51\u7edc\u7aef\u9519\u8bef\u8fdb\u884c\u901a\u4fe1\u7684\u65b9\u5f0f\u3002ToR\u6d4f\u89c8\u5668\u73b0\u5728\u663e\u793a\u8fde\u63a5\u7684\u7b80\u5316\u56fe\u8868\uff0c\u5e76\u663e\u793a\u9519\u8bef\u53d1\u751f\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u4fe1\u606f\u65e2\u6e05\u6670\u53c8\u4fe1\u606f\u4e30\u5bcc\uff0c\u800c\u4e0d\u662f\u94fa\u5929\u76d6\u5730\u3002\n\u7531\u4e8e\u52a0\u5bc6\u4fdd\u62a4\uff0c\u6d0b\u8471\u670d\u52a1URL\u4e0d\u5bb9\u6613\u8ba9\u4eba\u8bb0\u4f4f(\u4f8b\u5982\uff0chttps://torproject.org\u4e0ehttp://expyuzz4wqqyqhjn.onion/).\u3002\u8fd9\u4f7f\u5f97\u7528\u6237\u5f88\u96be\u53d1\u73b0\u6216\u8fd4\u56de\u6d0b\u8471\u7ad9\u70b9\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4ece\u7ec4\u7ec7\u4e0a\u8bb2\uff0c\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u4f7f\u7528\u4e3a\u4ed6\u4eec\u7684\u670d\u52a1\u91cf\u8eab\u5b9a\u505a\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8003\u8651\u5230\u6ca1\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5b8c\u7f8e\u5730\u9002\u7528\u4e8e\u6211\u4eec\u6240\u6709\u7684\u7528\u6237\u7fa4\u4f53\uff0c\u6211\u4eec\u4e5f\u4ece\u4e00\u4e2a\u5e7f\u6cdb\u7684\u89d2\u5ea6\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u6b64\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u4e0e\u65b0\u95fb\u81ea\u7531\u57fa\u91d1\u4f1a(FPF)\u548c\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(Electronic Frontier Foundation)\u7684HTTPS Everywhere\u5408\u4f5c\uff0c\u4e3aSecureDrop\u6d0b\u8471\u670d\u52a1\u5730\u5740\u5f00\u53d1\u4e86\u7b2c\u4e00\u4e2a\u6982\u5ff5\u9a8c\u8bc1\u4eba\u7c7b\u96be\u5fd8\u7684\u540d\u79f0\uff1a\n\u65b0\u95fb\u81ea\u7531\u57fa\u91d1\u4f1a\u5df2\u7ecf\u8054\u7cfb\u4e86\u5c11\u6570\u989d\u5916\u7684\u5a92\u4f53\u7ec4\u7ec7\u53c2\u4e0e\uff0cTor\u548cFPF\u5c06\u6839\u636e\u5bf9\u8fd9\u4e00\u521d\u6b65\u6982\u5ff5\u9a8c\u8bc1\u7684\u53cd\u9988\uff0c\u5171\u540c\u8003\u8651\u4e0b\u4e00\u6b65\u884c\u52a8\u3002\n\u5982\u679c\u60a8\u53d1\u73b0\u9519\u8bef\u6216\u5bf9\u5982\u4f55\u6539\u8fdb\u6b64\u7248\u672c\u6709\u4ec0\u4e48\u5efa\u8bae\uff0c\u8bf7\u8ba9\u6211\u4eec\u77e5\u9053\u3002\u611f\u8c22Tor\u7684\u6240\u6709\u56e2\u961f\uff0c\u4ee5\u53ca\u4e3a\u6b64\u6b21\u53d1\u5e03\u505a\u51fa\u8d21\u732e\u7684\u4f17\u591a\u5fd7\u613f\u8005\u3002\n\u5b89\u5353\u9519\u8bef33931\uff1a\u5982\u679c\u5728\u5b89\u5353alpha\u7684Tor\u6d4f\u89c8\u5668\u4e2d\u9009\u62e9\u4e86meek\uff0c\u5219\u4f7f\u7528obfs4\u6865\u800c\u4e0d\u662fmeek", "note_en": "Tor Browser 9.5 is now available from the  Tor Browser download page and also from our  distribution directory. The Android version is also available from Google Play and should be available from F-Droid within the next day.\n   Tor&#39;s onion routing remains the best way to achieve end-to-end anonymous communication on the Internet. With onion services (.onion addresses), website administrators can provide their users with anonymous connections that are metadata-free or that hide metadata from any third party. Onion services are also one of the few censorship circumvention technologies that allow users to route around censorship while simultaneously protecting their privacy and identity.\n For the first time, Tor Browser users on desktop will be able to opt-in for using onion sites automatically whenever the website makes them available. For years, some websites have invisibly used onion services with  alternative services (alt-svc), and this continues to be an excellent choice. Now, there is also an opt-in mechanism available for websites that want their users to know about their onion service that invites them to upgrade their connection via the .onion address.\n   Website publishers now can advertise their onion service to Tor users by adding an HTTP header. When  visiting a website that has both an   .onion address and Onion Location enabled via Tor Browser, users will be prompted about the onion service version of the site and will be asked to opt-in to upgrade to the onion service on their first use.\n   Onion services administrators who want to add an extra layer of security to their website can now set a pair of keys for access control and authentication. Tor Browser users can save keys and manage them via  about:preferences#privacy in the Onion Services Authentication section.\n   Browsers traditionally rendered sites delivered via a secure transport protocol with a green lock icon. But in mid-2019, the  formerly green lock icon became gray, intending to de-emphasize the default (safe) connection state and, instead, putting more emphasis on broken or insecure connections. Major browsers as Mozilla Firefox and Google Chrome understood that it is a benefit for the entire user base if they deploy familiar experiences for both users. We are following Firefox on this decision, and we have updated Tor Browser security indicators to make it easier for users to understand when they are visiting a non-secure website.\n   Sometimes users have a hard time reaching onion sites. In previous versions of Tor Browser, when there was an error connecting to an onion service, users received a standard Firefox error message, with no information about why they were unable to connect to the onion site.\n In this release, we have improved the way Tor Browser communicates with users about service-, client-, and network-side errors that might happen when they are trying to visit an onion service. Tor Browser now displays a simplified diagram of the connection and shows where the error occurred. We want these messages to be clear and informative without being overwhelming.\n   Because of cryptographic protections, onion service URLs are not easy for humans to remember (ie,  https://torproject.org vs.  http://expyuzz4wqqyqhjn.onion/). This makes it hard for users to discover or return to an onion site. We found that organically, developers have approached this problem in different ways, mostly with solutions tailored for their service. Given that there is no solution that works perfectly for all our user groups, we also approached this problem from a broad angle. For this release, we partnered with  Freedom of the Press Foundation (FPF) and the Electronic Frontier Foundation&#39;s  HTTPS Everywhere to develop the first proof-of-concept human-memorable names for SecureDrop onion services addresses:\n  Freedom of the Press Foundation has reached out to a small number of additional media organizations for participation, and Tor and FPF will jointly consider next steps based on feedback on this initial proof-of-concept.\n      If you find a bug or have a suggestion for how we could improve this release, please let us know. Thanks to all of the teams across Tor, and the many volunteers, who contributed to this release.\n   Android Bug 33931: obfs4 bridges are used instead of meek if meek is selected in Tor Browser for Android alpha", "posttime": "2020-06-03 00:44:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tor", "title": "ToR\u6d4f\u89c8\u56689.5", "title_en": "Tor Browser 9.5", "transed": 1, "url": "https://blog.torproject.org/new-release-tor-browser-95", "via": "", "real_tags": ["tor"]}, {"category": "", "categoryclass": "", "imagename": "1cc6a555d299f8c02e36b9f308393086.png", "infoid": 1004850, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u89e3\u9501Python\u8bed\u8a00\u5185\u90e8\u5de5\u4f5c\u539f\u7406\uff0c\u4ece\u6e90\u7801\u7f16\u8bd1Python\u89e3\u91ca\u5668\uff0c\u53c2\u4e0eCPython\u5f00\u53d1\uff1a\n\u6bd4\u5982\uff0c\u4e3a\u4ec0\u4e48\u5b57\u5178\u6bd4\u904d\u5386\u5217\u8868\u67e5\u627e\u6761\u76ee\u2026\u8981\u5feb\u5f97\u591a\u3002\n\u751f\u6210\u5668\u5982\u4f55\u5728\u6bcf\u6b21\u4ea7\u751f\u503c\u65f6\u8bb0\u4f4f\u53d8\u91cf\u7684\u72b6\u6001-\u4e3a\u4ec0\u4e48\u60a8\u4e0d\u5fc5\u50cf\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u90a3\u6837\u5206\u914d\u5185\u5b58\uff1f\nCPython\u89e3\u91ca\u5668\u62bd\u8c61\u4e86\u5e95\u5c42C\u5e73\u53f0\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0cCPython\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e73\u53f0\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u2026\u8212\u9002\u800c\u5f3a\u5927\u7684\u8bed\u6cd5\u7f16\u5199\u53ef\u4f38\u7f29\u4e14\u9ad8\u6027\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u60a8\u6210\u4e3aPython\u5f00\u53d1\u4eba\u5458\u7684\u67d0\u4e2a\u9636\u6bb5\uff0c\u4e86\u89e3CPython\u7684\u5185\u90e8\u5de5\u4f5c\u65b9\u5f0f\u4f1a\u8ba9\u60a8\u53d7\u76ca\u532a\u6d45\u3002\n\u901a\u8fc7\u201c\u7aa5\u63a2Python\u8fd0\u884c\u65f6\u7684\u5e55\u540e\u201d\uff0c\u60a8\u5c06\u52a0\u6df1\u81ea\u5df1\u7684\u6280\u80fd\uff0c\u5e76\u6210\u4e3a\u771f\u6b63\u7684Pythonista\u2026\u3002\n\u60a8\u5c06\u79bb\u771f\u6b63\u638c\u63e1Python\u66f4\u8fd1\u4e00\u6b65\uff0c\u4f7f\u60a8\u80fd\u591f\u7f16\u5199\u6f02\u4eae\u7684\u4e60\u60ef\u7528\u6cd5\u4ee3\u7801\uff0c\u800c\u4e14\u901f\u5ea6\u5feb\u3001\u6548\u7387\u9ad8\u3002\n\u4e00\u65e6\u60a8\u770b\u5230Python\u5728\u89e3\u91ca\u5668\u7ea7\u522b\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f18\u5316\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u5145\u5206\u5229\u7528Python\u7684\u5f3a\u5927\u529f\u80fd\u3002\n\u5f88\u5c11\u6709\u5f00\u53d1\u4eba\u5458\u4f1a\u82b1\u65f6\u95f4\u5982\u6b64\u6df1\u5165\u5730\u7406\u89e3\u4ed6\u4eec\u7684\u5de5\u5177--\u8fd9\u662f\u7ed9\u540c\u4e8b\u548c\u9762\u8bd5\u5b98\u7559\u4e0b\u6df1\u523b\u5370\u8c61\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002\n\u672c\u4e66\u4ee5\u5e73\u6613\u8fd1\u4eba\u548c\u4eb2\u8eab\u5b9e\u8df5\u7684\u65b9\u5f0f\u89e3\u91ca\u4e86CPython\u7684\u6982\u5ff5\u3001\u60f3\u6cd5\u548c\u6280\u672f\u7ec6\u8282\uff1a\n\u9605\u8bfb\u5e76\u6d4f\u89c8CPython3.9\u89e3\u91ca\u5668\u6e90\u4ee3\u7801\u3002\u60a8\u5c06\u6df1\u5165\u7406\u89e3\u548c\u6b23\u8d4f\u5217\u8868\u3001\u5b57\u5178\u548c\u751f\u6210\u5668\u7b49\u6982\u5ff5\u7684\u5185\u90e8\u5de5\u4f5c\u539f\u7406\u3002\n\u66f4\u6539Python\u8bed\u6cd5\u5e76\u4ece\u5934\u7f16\u8bd1\u60a8\u81ea\u5df1\u7684CPython\u7248\u672c\u3002\u60a8\u5c06\u4f7f\u7528\u65b0\u529f\u80fd\u5b9a\u5236Python\u6838\u5fc3\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u8fd0\u884cCPython\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5957\u4ef6\u3002\n\u638c\u63e1CPython\u7684\u5185\u5b58\u7ba1\u7406\u529f\u80fd\uff0c\u5e76\u4f7f\u7528\u5e76\u884c\u6027\u548c\u5e76\u53d1\u6027\u6269\u5c55Python\u4ee3\u7801\u3002\n\u50cf\u771f\u6b63\u7684\u4e13\u4e1a\u4eba\u58eb\u4e00\u6837\u8c03\u8bd5C\u548cPython\u4ee3\u7801\u3002\u5bf9Python\u4ee3\u7801\u548c\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u8fdb\u884c\u8bc4\u6d4b\u548c\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u53c2\u4e0eCPython\u7684\u5f00\u53d1\uff0c\u5e76\u77e5\u9053\u5982\u4f55\u4e3aPython\u89e3\u91ca\u5668\u548c\u6807\u51c6\u5e93\u7684\u672a\u6765\u7248\u672c\u505a\u51fa\u8d21\u732e\u3002\u4f5c\u4e3a\u201cPython\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u201d\u56de\u9988\u793e\u533a\u7684\u611f\u89c9\u4f1a\u6709\u591a\u68d2\uff1f\n\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u60a8\u5c06\u4ecb\u7ecdCPython\u5185\u90e8\u80cc\u540e\u7684\u5173\u952e\u6982\u5ff5\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5728\u60a8\u8fdb\u884c\u7684\u8fc7\u7a0b\u4e2d\u4e0e\u53ef\u89c6\u5316\u89e3\u91ca\u4e00\u8d77\u5de5\u4f5c\u7684\u3002\n\u4e66\u4e2d\u7684\u6bcf\u4e00\u9875\u90fd\u7ecf\u8fc7\u4e86\u7cbe\u7f8e\u7684\u6392\u7248\u3001\u4ee3\u7801\u793a\u4f8b\u7684\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u548c\u8bf4\u660e\u6027\u63d2\u56fe\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u6709\u6548\u5730\u5904\u7406\u548c\u8bb0\u5fc6\u4fe1\u606f\uff1a\n\u4ece\u5bb9\u4e0d\u8feb\u5730\u5b66\u4e60\u6bcf\u4e00\u7ae0\uff0c\u5e76\u786e\u4fdd\u60a8\u5c1d\u8bd5\u4e86\u793a\u4f8b\u548c\u52a8\u624b\u7684\u201c\u4ee3\u7801\u7f16\u5199\u201d\u90e8\u5206\u3002\u4e00\u65e6\u4f60\u8bfb\u5b8c\u4e86\u8fd9\u672c\u4e66\uff0c\u4f60\u5c06\u80fd\u591f\u8fd0\u7528\u4f60\u65b0\u5b66\u5230\u7684\u77e5\u8bc6\u6765\uff1a\n\u7f16\u5199\u7528C\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684Python\u81ea\u5b9a\u4e49\u6269\u5c55(\u672c\u4e66\u5305\u62ec\u201cPythonistas\u7684C\u5165\u95e8\u201d\u4e00\u7ae0)\u3002\n\u4e3aCPython\u9879\u76ee\u505a\u51fa\u8d21\u732e\uff0c\u5f00\u59cb\u60a8\u6210\u4e3aPython\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u7684\u65c5\u7a0b\u3002\n\u6b64\u5916\uff0c\u60a8\u4f1a\u6709\u4e00\u79cd\u6210\u5c31\u611f\uff0c\u56e0\u4e3a\u60a8\u5b8c\u5168\u638c\u63e1\u4e86Python\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u8fd9\u4e9b\u6982\u5ff5\u4f7f\u60a8\u6210\u4e3a\u4e00\u540d\u66f4\u597d\u3001\u66f4\u6709\u6548\u7684Python\u7a0b\u5e8f\u5458\u3002\n\u63d0\u524d\u8bbf\u95ee\u6298\u6263\uff1a\u6211\u4eec\u76ee\u524d\u6b63\u5728\u4e3a\u56fe\u4e66\u63d0\u4f9b\u9650\u65f6\u7684\u201c\u63d0\u524d\u8bbf\u95ee\u201d\u6298\u6263\uff0c\u540c\u65f6\u6211\u4eec\u6b63\u5728\u505a\u6700\u540e\u7684\u6da6\u8272\u3002\n\u60a8\u5c06\u6536\u5230\u8be5\u4e66\u7684\u5f53\u524d\u7248\u672c(\u5df2\u5b8c\u621095%)\u548c\u6240\u6709\u672a\u6765\u66f4\u65b0\uff0c\u5305\u62ec\u5c06\u4e8e2020\u5e74\u53d1\u5e03\u7684\u6700\u7ec8\u7248\u672c\u3002\nAnthony Shaw\u662fCPython\u8d21\u732e\u8005\u548cPyCon\u6f14\u8bb2\u8005\u3002\u4ed6\u6709\u7406\u79d1\u5b66\u58eb\u5b66\u4f4d\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u4e13\u4e1a\uff0c\u6709\u8d85\u8fc78\u5e74\u7684Python\u4f7f\u7528\u7ecf\u9a8c\u3002Anthony\u4e5f\u662fPython\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7684\u4f1a\u5458\u548c\u5f00\u6e90Apache\u57fa\u91d1\u4f1a\u7684\u6210\u5458\u3002\n\u8fd9\u672c\u4e66\u76ee\u524d\u6709389\u9875\u957f\u3002Python3.9(\u5373\u5c06\u63a8\u51fa\u7684Python\u7f16\u7a0b\u8bed\u8a00\u7248\u672c)\u7684\u6240\u6709\u6750\u6599\u90fd\u662f\u5b8c\u5168\u6700\u65b0\u7684\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u4ee5\u4e0b\u662f\u60a8\u5c06\u4eceCPython\u5185\u90e8\u5b66\u5230\u7684\u5185\u5bb9\uff1aPython\u89e3\u91ca\u5668\u6307\u5357\uff1a\n\u7b2c1\u7ae0\uff1a\u7b80\u4ecb\u5982\u4f55\u5145\u5206\u5229\u7528\u8fd9\u672c\u4e66\uff0c\u4ee5\u4fbf\u60a8\u80fd\u591f\u6709\u6548\u3001\u5feb\u901f\u5730\u4e86\u89e3CPython\u5f00\u53d1\u7684\u6700\u65b0\u60c5\u51b5\u3002\n\u7b2c2\u7ae0\uff1a\u83b7\u53d6CPython\u6e90\u4ee3\u7801CPython\u6e90\u4ee3\u7801\u53d1\u884c\u7248\u9644\u5e26\u4e86\u4e00\u7cfb\u5217\u5de5\u5177\u3001\u5e93\u548c\u7ec4\u4ef6\u3002\u60a8\u5c06\u5728\u672c\u7ae0\u4e2d\u5f00\u59cb\u63a2\u7d22\u5b83\u4eec\u3002\n\u7b2c3\u7ae0\uff1a\u8bbe\u7f6e\u60a8\u7684\u5f00\u53d1\u73af\u5883\u5728\u672c\u4e66\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528C\u548cPython\u4ee3\u7801\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u4ee5\u652f\u6301\u8fd9\u4e24\u79cd\u8bed\u8a00\u3002\n\u7b2c4\u7ae0\uff1a\u7f16\u8bd1CPython\u73b0\u5728\u60a8\u5df2\u7ecf\u4e0b\u8f7d\u4e86CPython\uff0c\u8bbe\u7f6e\u4e86\u5f00\u53d1\u73af\u5883\u5e76\u5bf9\u5176\u8fdb\u884c\u4e86\u914d\u7f6e\uff0c\u60a8\u53ef\u4ee5\u5c06CPython\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u7684\u89e3\u91ca\u5668\u3002\n\u7b2c5\u7ae0\uff1aPython\u8bed\u8a00\u548c\u8bed\u6cd5\u7406\u89e3\u4e3a\u4ec0\u4e48CPython\u662f\u7528C\u7f16\u5199\u7684\uff0c\u800c\u4e0d\u662fPython\uff0c\u7136\u540e\u6df1\u5165\u7814\u7a76Python\u8bed\u8a00\u89c4\u8303\u53ca\u5176\u89e3\u6790\u5668\u751f\u6210\u5668\u8bbe\u7f6e\u3002\n\u7b2c6\u7ae0\uff1a\u914d\u7f6e\u548c\u8f93\u5165\u73b0\u5728\u60a8\u5df2\u7ecf\u4e86\u89e3\u4e86Python\u8bed\u6cd5\uff0c\u63a5\u4e0b\u6765\u662f\u63a2\u7d22\u5982\u4f55\u5c06\u4ee3\u7801\u8f93\u5165\u5230\u53ef\u4ee5\u6267\u884c\u7684\u72b6\u6001\u7684\u65f6\u5019\u4e86\u3002\n\u7b2c7\u7ae0\uff1a\u4f7f\u7528\u8bed\u6cd5\u6811\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u548c\u89e3\u6790\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u60a8\u63a2\u7d22\u4e86\u5982\u4f55\u4ece\u5404\u79cd\u6765\u6e90\u8bfb\u53d6Python\u6587\u672c\u3002\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u7f16\u8bd1\u5668\u53ef\u4ee5\u4f7f\u7528\u7684\u7ed3\u6784\u3002\u8fd9\u4e2a\u9636\u6bb5\u662f\u201c\u89e3\u6790\u201d\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5c06\u63a2\u7d22\u5982\u4f55\u5c06\u6587\u672c\u89e3\u6790\u4e3a\u53ef\u7f16\u8bd1\u7684\u903b\u8f91\u7ed3\u6784\u3002\n\u7b2c8\u7ae0\uff1aPython\u7f16\u8bd1\u5668\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5c06\u91cd\u70b9\u4ecb\u7ecd\u5982\u4f55\u5c06AST\u6a21\u5757\u7f16\u8bd1\u6210CPython\u89e3\u91ca\u5668\u53ef\u4ee5\u6267\u884c\u7684\u4ee3\u7801\u5bf9\u8c61\u3002\u8fd9\u4e9b\u4ee3\u7801\u5bf9\u8c61\u5305\u542b\u5b57\u8282\u7801\u5f62\u5f0f\u7684\u79bb\u6563\u64cd\u4f5c\u5217\u8868\u3002\n\u7b2c9\u7ae0\uff1aCPython\u4e2d\u4ee3\u7801\u7684\u6c42\u503c\u5faa\u73af\u6267\u884c\u53d1\u751f\u5728\u79f0\u4e3a\u201c\u6c42\u503c\u5faa\u73af\u201d\u7684\u4e2d\u5fc3\u5faa\u73af\u4e2d\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5c06\u719f\u6089\u4f5c\u4e3aCPython\u201c\u5927\u8111\u201d\u7684\u8ba1\u7b97\u5faa\u73af\u3002\n\u7b2c10\u7ae0\uff1a\u5185\u5b58\u7ba1\u7406\u5728\u672c\u7ae0\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u4e86\u89e3CPython\u5982\u4f55\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5982\u4f55\u5206\u914d\u548c\u91ca\u653e\u5bf9\u8c61\u5185\u5b58\uff0c\u4ee5\u53caCPython\u5982\u4f55\u7ba1\u7406\u5185\u5b58\u6cc4\u6f0f\u3002\n\u7b2c11\u7ae0\uff1a\u5e76\u884c\u548c\u5e76\u53d1CPython\u63d0\u4f9b\u4e86\u8bb8\u591a\u5e76\u884c\u548c\u5e76\u53d1\u7684\u65b9\u6cd5\u3002\u4f60\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u51e0\u4e2a\u56e0\u7d20\u3002\u968f\u7740CPython\u7684\u53d1\u5c55\uff0c\u6a21\u578b\u4e4b\u95f4\u4e5f\u5b58\u5728\u91cd\u53e0\u7684\u7528\u4f8b\u3002\u672c\u4e66\u7684\u8fd9\u4e00\u4e3b\u8981\u7ae0\u8282\u5c06\u4f7f\u4f60\u719f\u6089\u76f8\u5173\u6982\u5ff5\u3002\n\u7b2c12\u7ae0\uff1a\u5bf9\u8c61\u548c\u7c7b\u578b\u4e86\u89e3\u5e38\u89c1\u7684\u5185\u7f6e\u7c7b\u578b(\u5982\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u5143\u7ec4\u548c\u5b57\u5178)\u662f\u5982\u4f55\u5728CPython\u4e2d\u5b9e\u73b0\u7684\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u8fd8\u5c06\u5728Python\u5b57\u7b26\u4e32\u4e0a\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5185\u7f6e\u8fd0\u7b97\u7b26\u3002\n\u7b2c13\u7ae0\uff1aPython\u6807\u51c6\u5e93CPython\u6807\u51c6\u5e93\u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6a21\u5757\uff1a\u4e00\u79cd\u662f\u7528\u7eafPython\u7f16\u5199\u7684\u63d0\u4f9b\u5b9e\u7528\u7a0b\u5e8f\u7684\u6a21\u5757\uff0c\u53e6\u4e00\u79cd\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u5e26\u6709Python\u5305\u88c5\u5668\u7684\u6a21\u5757\u3002\u60a8\u5c06\u5728\u672c\u7ae0\u4e2d\u63a2\u7d22\u8fd9\u4e24\u79cd\u7c7b\u578b\u3002\n\u7b2c14\u7ae0\uff1aCPython\u6d4b\u8bd5\u5957\u4ef6\u4e86\u89e3\u5982\u4f55\u5728Windows\u3001Linux\u548cMacOS\u4e0a\u8fd0\u884cCPython\u6db5\u76d6\u6838\u5fc3\u89e3\u91ca\u5668\u3001\u6807\u51c6\u5e93\u3001\u5de5\u5177\u548c\u53d1\u884c\u7248\u7684\u5e7f\u6cdb\u6d4b\u8bd5\u5957\u4ef6\u3002\u5982\u679c\u60a8\u60f3\u53c2\u4e0eCPython\u9879\u76ee\uff0c\u7f16\u5199\u6216\u6269\u5c55\u5355\u5143\u6d4b\u8bd5\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\n\u7b2c15\u7ae0\uff1a\u8c03\u8bd5\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230CPython\u89e3\u91ca\u5668\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8c03\u8bd5\u5668\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684CPython\u8fdb\u7a0b\u7684\u5185\u90e8\u3002\n\u7b2c16\u7ae0\uff1a\u57fa\u51c6\u6d4b\u8bd5\u3001\u6027\u80fd\u5206\u6790\u548c\u8ddf\u8e2a\u5728\u672c\u7ae0\u4e2d\uff0c\u60a8\u5df2\u7ecf\u4f7f\u7528\u8bb8\u591a\u4e3aCPython\u8bbe\u8ba1\u7684\u5de5\u5177\u63a2\u7d22\u4e86\u57fa\u51c6\u6d4b\u8bd5\u3001\u6027\u80fd\u5206\u6790\u548c\u8ddf\u8e2a\u3002\u4f7f\u7528\u6b63\u786e\u7684\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u74f6\u9888\u3001\u6bd4\u8f83\u591a\u4e2a\u6784\u5efa\u7684\u6027\u80fd\u5e76\u786e\u5b9a\u6539\u8fdb\u3002\n\u7b2c17\u7ae0\uff1a\u7ed3\u8bba&\u8fdb\u4e00\u6b65\u9605\u8bfb\u5982\u4f55\u4f7f\u7528\u65b0\u5b66\u5230\u7684\u77e5\u8bc6\u6765\u6269\u5c55Python\u7684\u529f\u80fd\u5e76\u4e3aCPython\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002\n\u9644\u5f55\uff1a\u9762\u5411Python\u7a0b\u5e8f\u5458\u7684C\u7b80\u4ecb\u672c\u7b80\u4ecb\u65e8\u5728\u8ba9\u6709\u7ecf\u9a8c\u7684Python\u7a0b\u5e8f\u5458\u5feb\u901f\u4e86\u89e3C\u8bed\u8a00\u7684\u57fa\u7840\u77e5\u8bc6\u4ee5\u53ca\u5982\u4f55\u5728CPython\u6e90\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u8fd9\u4efd\u5de5\u4f5c\u4f1a\u7ed9\u4f60\u5e26\u6765\u4ec0\u4e48\uff1a\n\u201c\u4e3a\u4ec0\u4e48\u6211\u8981\u4e0e\u60a8\u5206\u4eabAnthony\u7684CPython\u5185\u90e8\u7ed3\u6784\uff1f\u8fd9\u662f\u6211\u591a\u5e74\u524d\u5f00\u59cbPython\u4e4b\u65c5\u65f6\u5e0c\u671b\u5b58\u5728\u7684\u90a3\u672c\u4e66\u3002\n\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u76f8\u4fe1\uff0c\u4f5c\u4e3aPython\u793e\u533a\u7684\u6210\u5458\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u673a\u4f1a-\u5c06\u6211\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u6295\u5165\u5de5\u4f5c\uff0c\u5e2e\u52a9\u89e3\u51b3\u6211\u4eec\u9762\u4e34\u7684\u590d\u6742\u7684\u73b0\u5b9e\u4e16\u754c\u95ee\u9898\u3002\nAnthony\u5728\u89e3\u91caCPython\u3001\u9f13\u52b1\u60a8\u9605\u8bfb\u6e90\u4ee3\u7801\u4ee5\u53ca\u4e0e\u60a8\u5206\u4eab\u8be5\u8bed\u8a00\u7684\u6784\u5efa\u5757\u65f6\u91c7\u7528\u4e86\u8fd9\u4e9b\u4f18\u52bf\u3002\n\u6211\u76f8\u4fe1\u5728\u8bfb\u5b8c\u8fd9\u672c\u4e66\u540e\uff0c\u4f60\u7684\u6280\u80fd\u5c06\u4f1a\u589e\u957f\uff0c\u4f60\u5c06\u80fd\u591f\u89e3\u51b3\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u4ece\u800c\u6539\u5584\u6211\u4eec\u7684\u4e16\u754c\u3002\u201c\u3002\n\u4ee5\u4e00\u79cd\u65e0\u8bba\u662f\u521d\u5b66\u8005\u8fd8\u662f\u9ad8\u7ea7Python\u7528\u6237\u90fd\u6613\u4e8e\u7406\u89e3\u7684\u65b9\u5f0f\uff0c\u5bf9Python\u5185\u90e8\u77e5\u8bc6\u8fdb\u884c\u5168\u9762\u7684\u6f14\u7ec3\uff0c\u8fd9\u4e2a\u4e3b\u9898\u51e0\u4e4e\u6ca1\u6709\u597d\u7684\u8d44\u6e90\uff0c\u8fd9\u4e00\u70b9\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u201cAnthony\u7684\u4e66\u7ed9\u6211\u7559\u4e0b\u6700\u6df1\u523b\u5370\u8c61\u7684\u662f\uff0c\u5b83\u5982\u4f55\u5c06\u66f4\u6539CPython\u4ee3\u7801\u5e93\u7684\u6240\u6709\u6b65\u9aa4\u6309\u7167\u6613\u4e8e\u9075\u5faa\u7684\u987a\u5e8f\u6392\u5217\u3002\u5b83\u771f\u7684\u611f\u89c9\u50cf\u662f\u67d0\u79cd\u201c\u4e22\u5931\u7684\u624b\u518c\u201d\u3002\n\u6df1\u5165\u4e86\u89e3Python\u7684C\u57fa\u7840\u662f\u975e\u5e38\u6709\u8da3\u7684\uff0c\u5b83\u4e3a\u6211\u89e3\u51b3\u4e86\u4e00\u4e9b\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\u3002\u6211\u53d1\u73b0\u5173\u4e8eCPython\u5185\u5b58\u5206\u914d\u5668\u7684\u7ae0\u8282\u7279\u522b\u6709\u542f\u53d1\u6027\u3002\nCPython\u5185\u90e8\u7ed3\u6784\u5bf9\u4e8e\u4efb\u4f55\u5e0c\u671b\u5c06\u4ed6\u4eec\u7684Python\u77e5\u8bc6\u5e26\u5230\u66f4\u6df1\u5c42\u6b21\u7684\u4eba\u6765\u8bf4\u90fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684(\u4e5f\u662f\u72ec\u7279\u7684)\u8d44\u6e90\u3002\u201c\u3002\n\u201c\u2018\u5e76\u884c\u548c\u5e76\u53d1\u2019\u8fd9\u4e00\u7ae0\u662f\u6211\u6700\u559c\u6b22\u7684\u7ae0\u8282\u4e4b\u4e00\u3002\u6211\u4e00\u76f4\u5728\u5bfb\u6c42\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u7684\u6df1\u5165\u4e86\u89e3\uff0c\u6211\u53d1\u73b0\u4f60\u7684\u4e66\u975e\u5e38\u6709\u5e2e\u52a9\u3002\n\u5f53\u7136\uff0c\u8bfb\u5b8c\u90a3\u4e00\u7ae0\u540e\uff0c\u6211\u65e0\u6cd5\u6297\u62d2\u5176\u4f59\u7684\u5185\u5bb9\u3002\u6211\u6025\u5207\u5730\u76fc\u671b\u7740\u4e00\u65e6\u51fa\u7248\u6211\u81ea\u5df1\u7684\u5370\u5237\u672c\uff01\u3002\n\u6211\u4e4b\u524d\u5df2\u7ecf\u9605\u8bfb\u8fc7\u60a8\u7684\u201cCPython\u6e90\u4ee3\u7801\u6307\u5357\u201d\u7684\u6587\u7ae0\uff0c\u8fd9\u7bc7\u6587\u7ae0\u8ba9\u6211\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5185\u90e8\u7ed3\u6784\u7684\u4fe1\u606f\u3002\n\u6709\u5927\u91cf\u5173\u4e8ePython\u7684\u4e66\u7c4d\u6559\u6388\u8fd9\u95e8\u8bed\u8a00\uff0c\u4f46\u6211\u8fd8\u6ca1\u6709\u771f\u6b63\u770b\u5230\u4efb\u4f55\u5173\u4e8e\u5982\u4f55\u5411\u90a3\u4e9b\u597d\u5947\u7684\u4eba\u89e3\u91ca\u5185\u90e8\u7ed3\u6784\u7684\u4e66\u3002\n\u867d\u7136\u6211\u76ee\u524d\u5728\u6559\u6211\u5973\u513fPython\uff0c\u4f46\u6211\u628a\u8fd9\u672c\u4e66\u52a0\u5230\u4e86\u5979\u7684\u5fc5\u8bfb\u4e66\u5355\u4e0a\u3002\u5979\u76ee\u524d\u5728\u4f50\u6cbb\u4e9a\u5dde\u7acb\u5927\u5b66\u5b66\u4e60\u4fe1\u606f\u7cfb\u7edf\u3002\u201c\u3002\n\u6211\u4eec\u6700\u4e0d\u5e0c\u671b\u4f60\u628a\u8fd9\u672c\u4e66\u4f20\u4e0b\u53bb\uff0c\u56e0\u4e3a\u4f60\u4e0d\u786e\u5b9a\u8fd9\u672c\u4e66\u5bf9\u4f60\u662f\u5426\u7ba1\u7528\u3002\u6211\u4eec\u77e5\u9053\u5b83\u4f1a\u7684\uff0c\u6240\u4ee5\u8fd9\u662f\u6211\u4eec\u7ed9\u4f60\u7684\u63d0\u8bae\uff1a\n\u8ba9\u6211\u4eec\u63a5\u53d7\u8003\u9a8c\u3002\u4eca\u5929\u4ee5\u201cCPython\u5185\u90e8\uff1aPython3\u89e3\u91ca\u5668\u6307\u5357\u201d\u4e3a\u4f8b\u3002\n\u5982\u679c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u60a8\u4e0d\u540c\u610f\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u5feb\u3001\u66f4\u5bb9\u6613\u7684\u65b9\u5f0f\u6765\u5438\u6536\u60a8\u6240\u9700\u7684\u77e5\u8bc6\uff0c\u4f7f\u60a8\u5728\u4e0e\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u7684\u7ade\u4e89\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u6211\u4eec\u5c06\u5728\u660e\u5e74\u7684\u4efb\u4f55\u65f6\u5019\u5f88\u4e50\u610f\u9000\u8fd8\u60a8\u7684\u94b1\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u9ebb\u70e6\u3002\n\u5982\u679c\u6211\u4e0d\u559c\u6b22\u8fd9\u672c\u4e66\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ea\u60f3\u8981\u5feb\u4e50\u7684\u987e\u5ba2\u3002\u5982\u679c\u4f60\u5bf9\u7535\u5b50\u7248\u7684\u4e66\u4e0d\u6ee1\u610f\uff0c\u7ed9\u6211\u4eec\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u544a\u8bc9\u6211\u4eec\u5b83\u8ba9\u4f60\u72b9\u8c6b\u4e0d\u51b3\u7684\u5730\u65b9\u3002\u6211\u4eec\u4f1a\u5168\u989d\u9000\u6b3e-\u5373\u4f7f12\u4e2a\u6708\u540e\u4e5f\u662f\u5982\u6b64\u3002\n\u5982\u679c\u6211\u4e70\u4e86\u9884\u89c8\u7248\uff0c\u6211\u4f1a\u6536\u5230\u8fd9\u672c\u4e66\u7684\u6700\u7ec8\u7248\u672c\u5417\uff1f\u662f\u7684\uff0c\u5982\u679c\u60a8\u8d2d\u4e70Early Access\u7248\u672c(\u76ee\u524d\u5df2\u5b8c\u621095%\uff0c\u89c1\u4e0b\u6587)\uff0c\u60a8\u5c06\u6536\u5230\u7535\u5b50\u4e66\u7684\u6700\u7ec8\u7248\u672c\u4ee5\u53ca\u4efb\u4f55\u672a\u6765\u7684\u66f4\u65b0\u3002\u8fd9\u4e2a\u4f18\u60e0\u662f\u57282020\u5e74\u53d1\u5e03\u7684\u6700\u7ec8\u7248\u672c\u4e0a\u83b7\u5f97\u6298\u6263\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u3002\n\u8fd9\u672c\u4e66\u4f1a\u6709\u5370\u5237\u7248/\u5e73\u88c5\u7248\u5417\uff1f\u6211\u4eec\u6b63\u5728\u51c6\u5907\u4e00\u4e2a\u5e73\u88c5\u7248\uff0c\u4e00\u65e6\u7535\u5b50\u4e66\u5b8c\u6210\u4e86\u65e9\u671f\u8bbf\u95ee\u9636\u6bb5\uff0c\u5c31\u53ef\u4ee5\u51fa\u7248\u4e86\u3002\u5f53\u5e73\u88c5\u7248\u53d1\u884c\u65f6\uff0c\u5b83\u5c06\u662f\u4ece\u4e9a\u9a6c\u900a\u6216\u4f60\u6700\u559c\u6b22\u7684\u5f53\u5730\u4e66\u5e97\u5355\u72ec\u8d2d\u4e70\u7684\u3002\u6211\u4eec\u8ba1\u5212\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u53d1\u884c\u5e73\u88c5\u672c\u3002\u786c\u62f7\u8d1d\u7684\u5b9a\u4ef7\u5c06\u53d6\u51b3\u4e8e\u6211\u4eec\u7684\u5370\u5237\u6210\u672c\uff0c\u6211\u4eec\u5c06\u52aa\u529b\u4e3a\u83b7\u5f97\u6570\u5b57\u7248\u672c\u7684\u65e9\u671f\u8bbf\u95ee\u5ba2\u6237\u63d0\u4f9b\u67d0\u79cd\u6298\u6263\u3002\u6240\u4ee5\uff0c\u656c\u8bf7\u5173\u6ce8RP\u7535\u5b50\u90ae\u4ef6\u65f6\u4e8b\u901a\u8baf\u7684\u8fdb\u4e00\u6b65\u516c\u544a\uff01\n\u8fd9\u672c\u4e66\u76ee\u524d\u5904\u4e8e\u4ec0\u4e48\u72b6\u6001\uff1f\u8fd9\u5757\u6599\u5b50\u6709\u591a\u957f\u65f6\u95f4\uff1f\u6211\u4eec\u5bf9\u6750\u6599\u5df2\u7ecf\u201c\u6ee1\u610f\u201d\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u4e0eReal Python\u6559\u7a0b\u56e2\u961f\u548cRP\u793e\u533a\u7684\u6210\u5458\u4e00\u8d77\u7ecf\u5386\u4e86\u51e0\u4e2a\u53cd\u9988\u5468\u671f\u3002\n\u6211\u4eec\u6b63\u5728\u8fd0\u884c\u65e9\u671f\u8bbf\u95ee\u9636\u6bb5\uff0c\u4e3a\u8fd9\u672c\u4e66\u505a\u6700\u540e\u7684\u6da6\u8272-\u6bd4\u5982\u589e\u52a0\u524d\u8a00\uff0c\u5199\u5bfc\u8a00\u90e8\u5206\uff0c\u7b49\u7b49\u3002\u5982\u679c\u6211\u4eec\u5fc5\u987b\u7ed9\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u5927\u7ea6\u5df2\u7ecf\u5b8c\u6210\u4e8695%\u7684\u9879\u76ee\u3002\n\u8fd9\u672c\u4e66\u57fa\u672c\u4e0a\u5df2\u7ecf\u51c6\u5907\u597d\u5728\u9ec4\u91d1\u65f6\u95f4\u53d1\u884c\u4e86\uff0c\u4f46\u6211\u4eec\u7684\u4fe1\u6761\u662f\u201c\u8d28\u91cf\u3001\u8d28\u91cf\u3001\u8d28\u91cf\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u6750\u6599\u4ee5\u5c3d\u53ef\u80fd\u597d\u7684\u65b9\u5f0f\u5448\u73b0\u51fa\u6765\u3002\u6709\u4e86Early Access\u4f18\u60e0\uff0c\u4f60\u53ef\u4ee5\u6210\u4e3a\u8fd9\u4e00\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u5206\u4eab\u4f60\u7684\u53cd\u9988\uff0c\u5e76\u5728\u4ef7\u683c\u4e0a\u6da8\u4e4b\u524d\u83b7\u5f97\u5f88\u597d\u7684\u6298\u6263\u3002\n\u6211\u9700\u8981\u638c\u63e1\u591a\u5c11Python\u624d\u80fd\u4f7f\u7528\u8fd9\u672c\u4e66\uff1f\u672c\u4e66\u9762\u5411\u4e2d\u9ad8\u7ea7Python\u5f00\u53d1\u4eba\u5458\u3002\u6211\u4eec\u5df2\u7ecf\u5c3d\u4e86\u4e00\u5207\u52aa\u529b\u6765\u5206\u89e3\u4ee3\u7801\u793a\u4f8b\uff0c\u4f46\u672c\u4e66\u5c06\u4f7f\u7528\u4e00\u4e9b\u4e2d\u95f4\u7684Python\u6280\u672f\u3002\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u81ea\u5df1\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u90a3\u4e48\u901a\u8bfb\u672c\u4e66\u7684\u5404\u7ae0\u662f\u6311\u6218\u81ea\u6211\u3001\u8bc6\u522b\u548c\u4fee\u590dPython\u77e5\u8bc6\u4e2d\u7684\u8584\u5f31\u73af\u8282\u7684\u597d\u65b9\u6cd5\u3002\n\u6211\u9700\u8981\u77e5\u9053C\u624d\u80fd\u4f7f\u7528\u8fd9\u672c\u4e66\u5417\uff1f\u4f60\u4e0d\u9700\u8981\u7cbe\u901aC\u8bed\u8a00\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u672c\u4e66\u3002\u5982\u679c\u60a8\u662f\u65b0\u63a5\u89e6C\u8bed\u8a00\uff0c\u8bf7\u67e5\u770b\u672c\u4e66\u540e\u9762\u7684\u9644\u5f551\uff1a\u9762\u5411Python\u7a0b\u5e8f\u5458\u7684C\u7b80\u4ecb\u4ee5\u83b7\u5f97\u5feb\u901f\u4ecb\u7ecd\u3002\n\u770b\u5b8c\u8fd9\u672c\u4e66\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f\u201c\u6211\u4e0d\u5efa\u8bae\u4ed3\u4fc3\u8bfb\u8fd9\u672c\u4e66\uff0c\u8bd5\u7740\u4e00\u6b21\u8bfb\u4e00\u7ae0\uff0c\u5728\u6bcf\u4e00\u7ae0\u4e4b\u540e\u8bd5\u4e00\u8bd5\u793a\u4f8b\uff0c\u540c\u65f6\u63a2\u7d22\u4ee3\u7801\u3002\u4e00\u65e6\u4f60\u8bfb\u5b8c\u8fd9\u672c\u4e66\uff0c\u5b83\u4f1a\u6210\u4e3a\u4f60\u53ca\u65f6\u56de\u6765\u7684\u5f88\u597d\u7684\u53c2\u8003\u6307\u5357\u3002\u8fd9\u4e9b\u7ae0\u8282\u4e5f\u76f8\u5f53\u81ea\u6210\u4f53\u7cfb\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8df3\u8fc7\uff0c\u4e13\u6ce8\u4e8e\u4f60\u6700\u611f\u5174\u8da3\u7684\u7ae0\u8282\u3002\u201c\u3002(\u5b89\u4e1c\u5c3c\u00b7\u8096)\u3002\n\u6211\u5c06\u8981\u5b66\u4e60\u7684CPython\u7ec6\u8282\u4e0d\u4f1a\u5f88\u5feb\u8fc7\u65f6\u5417\uff1f\u201c\u5de8\u87d2\u5df2\u7ecf\u670920\u591a\u5e74\u7684\u5386\u53f2\u4e86\u3002CPython\u4ee3\u7801\u7684\u67d0\u4e9b\u90e8\u5206\u81ea\u6700\u521d\u7f16\u5199\u4ee5\u6765\u5c31\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\u3002\u8fd9\u672c\u4e66\u4e2d\u7684\u8bb8\u591a\u539f\u5219\u5728\u5341\u5e74\u6216\u66f4\u957f\u7684\u65f6\u95f4\u91cc\u90fd\u662f\u4e00\u6837\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5199\u8fd9\u672c\u4e66\u7684\u65f6\u5019\uff0c\u6211\u53d1\u73b0\u4e86\u8bb8\u591a\u7531Guido van Rossum(Python\u7684\u4f5c\u8005)\u7f16\u5199\u7684\u4ee3\u7801\u884c\uff0c\u8fd9\u4e9b\u4ee3\u7801\u884c\u4eceCPython\u7248\u672c1.0\u5f00\u59cb\u5c31\u6ca1\u6709\u4eba\u78b0\u8fc7\u3002\n\u60a8\u5c06\u5728\u672c\u4e66\u4e2d\u5b66\u4e60\u7684\u6280\u80fd\u5c06\u5e2e\u52a9\u60a8\u9605\u8bfb\u548c\u7406\u89e3CPython\u7684\u5f53\u524d\u548c\u672a\u6765\u7248\u672c\u3002\u53d8\u5316\u662f\u6301\u7eed\u4e0d\u65ad\u7684\uff0c\u4f60\u7684\u4e13\u4e1a\u77e5\u8bc6\u53ef\u4ee5\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u53d1\u5c55\u3002\u8fd9\u672c\u4e66\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\u662f\u5168\u65b0\u7684\uff0c\u6709\u4e9b\u751a\u81f3\u662f\u5b9e\u9a8c\u6027\u7684\u3002\n\u5728\u5199\u8fd9\u672c\u4e66\u7684\u65f6\u5019\uff0c\u6211\u9047\u5230\u4e86\u6e90\u4ee3\u7801\u4e2d\u7684\u95ee\u9898\u548cCPython\u4e2d\u7684bug\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u5f97\u5230\u4fee\u590d\u6216\u6539\u8fdb\u3002\u8fd9\u662fCPython\u4f5c\u4e3a\u4e00\u4e2a\u84ec\u52c3\u53d1\u5c55\u7684\u5f00\u6e90\u9879\u76ee\u6240\u5e26\u6765\u7684\u5947\u8ff9\u7684\u4e00\u90e8\u5206\u3002\u201c\u3002(\u5b89\u4e1c\u5c3c\u00b7\u8096)\u3002\n\u6211\u5c06\u5982\u4f55\u63a5\u6536\u66f4\u65b0\uff1f\u5f53\u66f4\u65b0\u51fa\u6765\u65f6\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5ba3\u5e03\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5728realpython.com\u5e10\u6237\u4e2d\u627e\u5230\u8be5\u4e66\u7684\u6700\u65b0\u7248\u672c\u4ee5\u4f9b\u4e0b\u8f7d\u3002\n\u6211\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff01\u8bf7\u53d1\u7535\u5b50\u90ae\u4ef6\u7ed9\u6211\u4eec\uff1ainfo@realpython.com\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u56de\u590d\u60a8\u3002", "note_en": "Unlock the Inner Workings of the Python Language, Compile the Python Interpreter  From\u00a0Source \u00a0Code, And  Participate in the Development of CPython:\n   Like, how  dictionaries are so much faster than looping over a list to find an item\u2026\n How does a  generator remember the state of the variables each time it yields a value\u2014and why do you never have to allocate memory like in other languages?\n  The CPython interpreter abstracts away the complexities of the underlying C platform and your operating system.\n   In short, CPython gives you the platform to write scalable and performant applications using the comfortable and powerful syntax of Python\u2026\n  That\u2019s why at some stage in your progression as a Python developer, you can  benefit greatly from understanding how CPython works internally.\n By \u201cpeeking behind the scenes\u201d of the Python runtime, you\u2019ll deepen your skills and become a true Pythonista\u2026\n You\u2019ll get one step closer to truly mastering Python, enabling you to write beautiful &amp; idiomatic code that\u2019s also  fast and efficient.\n Once you see how Python works at the interpreter level, you can  optimize your applications and  fully leverage the power\u00a0of\u00a0Python\n Few developers take the time to understand their tools at such a deep level\u2014it\u2019s a surefire way to impress colleagues and interviewers alike.\n This book explains the concepts, ideas, and technicalities of CPython in an  approachable and hands-on fashion:\n  Read and navigate the CPython 3.9 interpreter source code. You\u2019ll deeply comprehend and appreciate the inner workings of concepts like lists, dictionaries, and generators.\n Make changes to the Python syntax and compile your own version of CPython, from scratch. You\u2019ll customize the Python core data types with new functionality and run CPython\u2019s automated test suite.\n Master CPython\u2019s memory management capabilities and scale your Python code with parallelism and concurrency.\n Debug C and Python code like a true professional. Profile and benchmark the performance of your Python code and the runtime.\n Participate in the development of CPython and know how to contribute to future versions of the Python interpreter and standard library. How great would it feel to give back to the community as a \u201cPython Core Developer?\u201d\n   With this book you\u2019ll cover the critical concepts behind the internals of CPython and how they work with visual explanations as you go along.\n Each page in the book has been carefully laid out with beautiful typography, syntax highlighting for code examples, and instructional illustrations so you can process and memorize the information effectively:\n   Take your time for each chapter and make sure you try out the examples and hands-on \u201ccode along\u201d sections. Once you\u2019ve completed the book, you\u2019ll be able to use your newfound knowledge to:\n Write custom extensions for Python, written in the C programming language (the book includes an \u201cIntro to C for Pythonistas\u201d chapter)\n  Contribute to the CPython project and start your journey towards becoming a Python Core Developer\n Moreover, you\u2019ll feel a sense of achievement that you fully grasp the core concepts of Python that make you a better and more effective Python programmer.\n Early Access Discount: We\u2019re currently offering a limited-time only \u201cEarly Access\u201d discount for the book while we\u2019re putting the finishing touches on.\n You\u2019ll receive the current version of the book (which is 95% complete) and all future updates, including the final version due to be released in 2020.\n    Anthony Shaw is a CPython contributor and a PyCon speaker. He has a B.Sc. in Computer Science and over 8 years of experience working with Python. Anthony is also a Fellow of the Python Software Foundation and member of the Open-Source Apache Foundation.\n  The book is currently 389 pages long. All of the material is completely up to date for Python 3.9, the upcoming version of the Python programming language.\n In a nutshell, here\u2019s what you\u2019ll learn with  CPython Internals: Your Guide to the Python Interpreter:\n Chapter 1: Introduction How to make the most of this book so you can learn effectively and quickly get up to speed with CPython development.\n Chapter 2: Getting the CPython Source Code The CPython source distribution comes with a whole range of tools, libraries, and components. You\u2019ll start exploring them in this chapter.\n Chapter 3: Setting Up Your Development Environment Throughout this book, you\u2019ll be working with C and Python code. In this chapter you\u2019ll see how to configure your development environment to support both languages.\n Chapter 4: Compiling CPython Now that you have CPython downloaded, set up a development environment and configured it, you can compile the CPython source code into an executable interpreter.\n Chapter 5: The Python Language and Grammar Understand why CPython is written in C and not Python and then dig into the Python Language Specification and it\u2019s Parser Generator setup.\n Chapter 6: Configuration and Input Now that you\u2019ve seen the Python grammar, its time to explore how code gets input into a state that can be executed.\n Chapter 7: Lexing and Parsing With Syntax Trees In the previous chapter, you explored how Python text is read from various sources. It needs to be converted into a structure that the compiler can use. This stage is \u201cparsing.\u201d In this chapter, you will explore how the text is parsed into logical structures that can be compiled.\n Chapter 8: The Python Compiler In this chapter, you will focus on the compilation of an AST module into a code object that the CPython interpreter can execute. These code objects contain lists of discrete operations in the form of bytecode.\n Chapter 9: The Evaluation Loop Execution of code in CPython happens within a central loop, called the \u201cevaluation loop.\u201d In this chapter you\u2019ll get familiar with the evaluation loop as the \u201cbrain\u201d of CPython.\n Chapter 10: Memory Management By the end of this chapter, you will understand how CPython allocates memory on the Operating System, how object memory is allocated and freed, and how CPython manages memory leaks.\n Chapter 11: Parallelism and Concurrency CPython offers many approaches to Parallelism and Concurrency. Your choice depends on several factors. There are also overlapping use cases across models as CPython has evolved. This major chapter of the book will make you familiar with the relevant concepts.\n Chapter 12: Objects and Types Learn how common built-in types like strings, lists, tuples, and dictionaries are implemented in CPython. You\u2019ll also implement a custom built-in operator on Python strings in this chapter.\n Chapter 13: The Python Standard Library There are two types of modules in the CPython standard library: those written in pure Python that provide a utility, and those written in C with Python wrappers. You will explore both types in this chapter.\n Chapter 14: The CPython Test Suite Learn how to run CPython\u2019s extensive test suite covering the core interpreter, the standard library, the tooling, and distribution on Windows, Linux, and macOS. If youwant to get involved in the CPython project, writing or extending unit tests is a great place to start.\n Chapter 15: Debugging In this chapter, you will learn how to attach a debugger to the CPython interpreter and how to use the debugger to see inside a running CPython process.\n Chapter 16: Benchmarking, Profiling, and Tracing In this chapter, you have explored benchmarking, profiling, and tracing using a number of tools designed for CPython. With the right tooling, you can find bottlenecks, compare performance of multiple builds and identify improvements.\n Chapter 17: Conclusion &amp; Further Reading How you can use your newfound knowledge to extend the functionality of Python and to contribute to the CPython project.\n Appendix: Introduction to C for Python Programmers This introduction is intended to get an experienced Python programmer up to speed with the basics of the C language and how it\u2019s used in the CPython source code.\n  To recap, let\u2019s take another look at what you\u2019ll receive with this offer:\n     \u201cWhy do I want to share Anthony\u2019s  CPython Internals with you?  It\u2019s the book that I wish existed years ago when I started my Python journey.\n More importantly, I believe we, as members of the Python community, have a unique opportunity \u2013 to put our expertise to work to help solve the complex real-world problems facing us.\n  Anthony embraces these strengths when explaining CPython, encouraging you to read the source, and sharing the building blocks of the language with you.\n I\u2019m confident after reading this book your skills will grow and you will be able solve even more complex problems that can improve our world.\u201d\n \u201c A comprehensive walkthrough of the Python internals, a topic which surprisingly has almost no good resource, in an easy-to-understand manner for both beginners as well as advanced Python users.\u201d\n \u201cWhat impresses me the most about Anthony\u2019s book is how it puts all the steps for making changes to the CPython code base in an easy to follow sequence.  It really feels like a \u2018missing manual\u2019 of sorts.\n Diving into the C underpinnings of Python was a lot of fun and it cleared up some longstanding questions marks for me. I found the chapter about CPython\u2019s memory allocator especially enlightening.\n CPython Internals is a great (and unique) resource for anybody looking to take their knowledge of Python to a deeper level.\u201d\n \u201cThe  \u2018Parallelism and Concurrency\u2019 chapter is one of my favorites. I had been looking to get an in depth understanding around this topic and I found your book extremely helpful.\n Of course, after going over that chapter I couldn\u2019t resist the rest. I am eagerly looking forward to have my own printed copy once it&#39;s out!\n I had gone through your \u2018Guide to CPython Source code\u2019 article previously which got me interested in finding out more about the internals.\n There are a ton of books on Python which teach the language, but I haven\u2019t really come across anything that would go about explaining the internals to those curious minded.\n And while I teach Python to my daughter currently, I have this book added in her must-read list. She\u2019s currently studying Information Systems at Georgia State University.\u201d\n The last thing we want is for you to pass on this book because you\u2019re not sure it\u2019ll work for you. We know it will, so here\u2019s our offer to you:\n Put us to the test. Take \u201cCPython Internals: Your Guide to the Python 3 Interpreter\u201d for a spin today.\n   And if for some reason you don\u2019t agree that we\u2019ve given you a faster, easier way to absorb the knowledge you need to rise head-and-shoulders above other developers,  we\u2019ll cheerfully refund your money, no questions and no hassles, any time within the next year.\n    What if I don\u2019t like the book? We want happy customers only. If you\u2019re not happy with the digital version of book, send us an email and tell us where it left you hanging. We\u2019ll refund you in full\u2014even 12 months later.\n If I buy the Early Access version will I receive the final edition of the book? Yep, if you buy the Early Access version (which is 95% complete at this point, see below) you\u2019ll receive the final version of the ebook plus any future updates. This offer is a great way to get a discount on the final version which is due to be released in 2020.\n Will there be a print copy/paperback version of the book? We are in the process of getting a paperback version ready for publishing once the ebook has completed the early access phase. When the paperback version is released it will be a separate purchase from Amazon or your favorite local book store. The release date we\u2019re aiming for with the paperback is later this year. Pricing for the hard copy will depend on our printing costs and we will try to have some kind of discount available for early access customers who got the digital version. So stay tuned for further announcements on the RP email newsletter!\n What state is the book in currently? How far along is the material? We\u2019re \u201ccontent complete\u201d with the material and have gone through several feedback cycles with members of the Real Python Tutorial Team and the RP Community.\n We are running the Early Access phase to put the finishing touches on the book\u2014things like adding the foreword, writing the introduction sections, and so on. If we had to put a number on it, we\u2019re around 95% done with the project.\n The book is basically ready for a prime-time release, but our credo is \u201cquality, quality, quality\u201d so we want to make sure the material is presented in the best way possible. And with the Early Access offer you can be a part of that effort and share your feedback, plus get a nice discount before the price goes up.\n How skilled do I need to be in Python to use this book? This book is aimed at intermediate to advanced Python developers. Every effort has been taken to break down code examples, but some intermediate Python techniques will be used throughout the book. If you\u2019re not sure you\u2019re ready, making your way through the chapters of the book is a great way to challenge yourself and identify and fix weak spots in your Python knowledge.\n Do I need to know C to use this book? You do not need to be proficient in C to use this book. If you are new to C, check out  Appendix 1: Introduction to C for Python Programmers at the back of the book for a quick introduction.\n How long will it take to finish this book? \u201cI don\u2019t recommend rushing this book, try reading a chapter at a time, trying the examples after each chapter and exploring the code simultaneously. Once you\u2019ve finished the book, it will make a great reference guide for you to come back to in time. The chapters are fairly self-contained too, so you\u2019ll be able to jump around and focus on the sections that interest you the most.\u201d (Anthony Shaw)\n Won\u2019t the CPython specifics I\u2019ll learn be out of date quickly? \u201cPython has been around for over 20 years. Some parts of the CPython code haven\u2019t been touched since they were originally written. Many of the principles in this book have been the same for ten or more years. In fact, whilst writing this book, I discovered many lines of code written by Guido van Rossum (the author of Python) and untouched since CPython version 1.0.\n The skills you\u2019ll learn in this book will help you read and understand current and future versions of CPython. Change is constant, and your expertise is something you can develop along the way. Some of the concepts in this book are brand-new; some are even experimental.\n While writing this book, I came across issues in the source code and bugs in CPython. Then, they got  fixed or improved. That\u2019s part of the wonder of CPython as a flourishing open-source project.\u201d (Anthony Shaw)\n How will I receive updates? We announce updates via email as they come out. Plus, you\u2019ll always find the latest version of the book available for download in your realpython.com account.\n I have another question! Please email us at info@realpython.com and we\u2019ll get back to you as soon as possible.", "posttime": "2020-06-03 00:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python3,python,\u89e3\u91ca\u5668,internals", "title": "CPython\u5185\u90e8\uff1aPython3\u89e3\u91ca\u5668\u6307\u5357(\u4e66)", "title_en": "CPython Internals: Your Guide to the Python 3 Interpreter (Book)", "transed": 1, "url": "https://realpython.com/products/cpython-internals-book/", "via": "", "real_tags": ["python3", "python", "\u89e3\u91ca\u5668", "internals"]}]